	COMPILATION LISTING OF SEGMENT convert_forum
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 10/30/84  1226.7 mst Tue
	    Options: optimize map

        1 /* **************************************************************
        2*   *                                                            *
        3*   * Copyright, (C) Massachusetts Institute of Technology, 1984 *
        4*   *                                                            *
        5*   ************************************************************** */
        6 convert_forum:
        7 	proc ();
        8 
        9 /* Converts version 1 forum to version 2 forum
       10*    Jay Pattin 1/8/83 */
       11 
       12 declare	arg			char (arg_len) based (arg_ptr),
       13 	arg_count			fixed bin,
       14 	arg_idx			fixed bin,
       15 	arg_len			fixed bin (21),
       16 	arg_ptr			ptr,
       17 	directory			char (168),
       18 	name			char (32),
       19 	status			fixed bin (35),
       20 	whoami			char (32) static options (constant) init ("convert_forum");
       21 
       22 declare	(com_err_, com_err_$suppress_name)
       23 				entry options (variable),
       24 	cu_$arg_count		entry (fixed bin, fixed bin (35)),
       25 	cu_$arg_ptr		entry (fixed bin, ptr, fixed bin (21), fixed bin (35)),
       26 	expand_pathname_$add_suffix	entry (char (*), char (*), char (*), char (*), fixed bin (35)),
       27 	forum_$convert		entry (char (*), char (*), fixed bin (35));
       28 
       29 	call cu_$arg_count (arg_count, status);
       30 	if status ^= 0 then do;
       31 ERR:	     call com_err_ (status, whoami);
       32 	     return;
       33 	end;
       34 
       35 	if arg_count = 0 then do;
       36 	     call com_err_$suppress_name (0, whoami, "Usage:  convert_forum meeting_path");
       37 	     return;
       38 	end;
       39 
       40 	call cu_$arg_ptr (1, arg_ptr, arg_len, status);
       41 	if status ^= 0 then goto ERR;
       42 	call expand_pathname_$add_suffix (arg, "control", directory, name, status);
       43 	if status ^= 0 then do;
       44 	     call com_err_ (status, whoami, "Finding ""^a"".", arg);
       45 	     return;
       46 	end;
       47 
       48 	call forum_$convert (directory, rtrim (name), status);
       49 	if status ^= 0 then do;
       50 	     call com_err_ (status, whoami, "Converting ""^a"".", arg);
       51 	     return;
       52 	end;
       53 
       54 	return;
       55      end convert_forum;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/30/84  1201.1  convert_forum.pl1                 >special_ldd>online>6848-10/30/84>convert_forum.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
arg                                    based           char                     unaligned dcl 12 set ref 42* 44* 50*
arg_count                       000100 automatic       fixed bin(17,0)          dcl 12 set ref 29* 35
arg_len                         000101 automatic       fixed bin(21,0)          dcl 12 set ref 40* 42 42 44 44 50 50
arg_ptr                         000102 automatic       pointer                  dcl 12 set ref 40* 42 44 50
com_err_                        000010 constant        entry                    external dcl 22 ref 31 44 50
com_err_$suppress_name          000012 constant        entry                    external dcl 22 ref 36
cu_$arg_count                   000014 constant        entry                    external dcl 22 ref 29
cu_$arg_ptr                     000016 constant        entry                    external dcl 22 ref 40
directory                       000104 automatic       char(168)                unaligned dcl 12 set ref 42* 48*
expand_pathname_$add_suffix     000020 constant        entry                    external dcl 22 ref 42
forum_$convert                  000022 constant        entry                    external dcl 22 ref 48
name                            000156 automatic       char(32)                 unaligned dcl 12 set ref 42* 48 48
status                          000166 automatic       fixed bin(35,0)          dcl 12 set ref 29* 30 31* 40* 41 42* 43 44* 48* 49
                                                                                  50*
whoami                          000000 constant        char(32)                 initial unaligned dcl 12 set ref 31* 36* 44* 50*

NAME DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
arg_idx                                automatic       fixed bin(17,0)          dcl 12

NAMES DECLARED BY EXPLICIT CONTEXT.
ERR                             000065 constant        label                    dcl 31 ref 41
convert_forum                   000046 constant        entry                    external dcl 6

NAME DECLARED BY CONTEXT OR IMPLICATION.
rtrim                                                  builtin function         ref 48 48

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       454         500     353         464
Length       660     353        24         143     100           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
convert_forum                       175 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
convert_forum            000100 arg_count                   convert_forum
                         000101 arg_len                     convert_forum
                         000102 arg_ptr                     convert_forum
                         000104 directory                   convert_forum
                         000156 name                        convert_forum
                         000166 status                      convert_forum

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_cs            call_ext_out_desc   call_ext_out        return              shorten_stack       ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      com_err_$suppress_name        cu_$arg_count                 cu_$arg_ptr
expand_pathname_$add_suffix   forum_$convert

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      6 000045        29 000053        30 000063        31 000065        32 000102        35 000103        36 000105
     37 000132        40 000133        41 000152        42 000154        43 000212        44 000214        45 000250
     48 000251        49 000312        50 000315        51 000351        54 000352


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
