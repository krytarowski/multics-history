ASSEMBLY LISTING OF SEGMENT >udd>sm>ds>w>ml>sdm_request_tables_.alm                                                                                                                                 
ASSEMBLED ON:	04/18/00  1117.1 mdt Tue
OPTIONS USED:	list symbols 
ASSEMBLED BY:	ALM Version 8.14 March 1989     
ASSEMBLER CREATED:	06/09/89  1102.3 mdt Fri

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Information Systems Inc., 1982 *
                                     4  " *                                                         *
                                     5  " * Copyright (c) 1972 by Massachusetts Institute of        *
                                     6  " * Technology and Honeywell Information Systems, Inc.      *
                                     7  " *                                                         *
                                     8  " ***********************************************************
                                     9  
                                    10  
                                    11  " Request definitions for the Multics send_mail subsystem
                                    12  
                                    13  " Created:  1 January 1979 by G. Palter
                                    14  " Modified: 23 January 1979 by G. Palter to add 'rm' as synonym of 'remove'
                                    15  " Modified: 26 January 1979 by G. Palter to rename 'list' to 'print_header'
                                    16  " Modified: 26 April 1980 by G. Palter to add 'do' request
                                    17  " Modified: 28 April 1980 by G. Palter to use new_ssu_ entries for version 4.1 subsystem utilities
                                    18  " Modified: 10 May 1980 by W. Olin Sibert to use ssu_v1_macros and to call ssu_requests_
                                    19  "    for subsystem standard requests
                                    20  " Modified: 14 May 1980 by W. Olin Sibert to rearrange requests and add 'list_help'
                                    21  " Modified: 1 June 1980 by G. Palter to implement suggestion #0186 -- there should be a
                                    22  "    'print_original' request in send_mail which prints the message being replied to when
                                    23  "    invoked by read_mail's 'reply' request.  (Also added 'print_orig_header',
                                    24  "    'list_original' and 'write_original')
                                    25  " Modified: 10 June 1980 by G. Palter to add 'log_original' and 'save_original'
                                    26  " Modified: 27 March 1981 by G. Palter to put the 'original' requests into a separate table
                                    27  " Modified: 17 December 1981 by G. Palter to rearrange requests, use new definition of '?',
                                    28  "    and add 'list_requests'
                                    29  " Modified: 16 February 1982 by G. Palter to use new macros, rename 'print_orig_header' to
                                    30  "    'print_original_header' (retaining the old name), and add 'exec_com', 'answer',
                                    31  "    'abbrev', 'if', 'ready', 'ready_on', and 'ready_off'
                                    32  " Modified: 25 February 1982 by G. Palter to add 'subsystem_name' and 'subsystem_version'
                                    33  " Modified: 28 February 1982 by G. Palter for dont_summarize and dont_list flags
                                    34  " Modified: 17 September 1982 by G. Palter to rename to sdm_request_tables_, add the
                                    35  "    debug_requests table, and delete standard subsystem requests from the tables
                                    36  " Modified: 23 September 1982 by G. Palter to add appropriate short names to the 'append'
                                    37  "    and 'preface' requests for compatibility with read_mail
                                    38  " Modified: September 1983 by G. Palter to add 'bcc', make 'in_reply_to' an original
                                    39  "    request, eliminate 'ssu_debug' as debug mode now enables ssu_ debugging
                                    40  
                                    41  
                                    42  	include	ssu_request_macros
                                   1-1  " BEGIN INCLUDE FILE ... ssu_request_macros.incl.alm
                                   1-2  " Created:  5 May 1980 by W. Olin Sibert
                                   1-3  " Modified: 25 July 1980 by G. Palter to add multics_request macro
                                   1-4  " Modified: 1 December 1981 by G. Palter to remove user_flags
                                   1-5  " Modified: 12 February 1982 by G. Palter for version 4
                                   1-6  " Modified: 28 February 1982 by G. Palter to add dont_summarize and dont_list
                                   1-7  " Modified: 2 August 1982 by Jay Pattin to add unknown_request
                                   1-8  " Modified: 24 October 1984 by G. Palter to restore user flags and add the
                                   1-9  "    set_default_flags and set_default_multics_flags macros
                                  1-10  
                                  1-11  
                                  1-12  " ALM macros used to define subsystem request tables
                                  1-13  
                                  1-14  
                                  1-15  	macro	request_table_version
                              1   1-16  	aci	"srqt_4.0",8
                              2   1-17  	&end
                                  1-18  
                                  1-19  
                                  1-20  	macro	namelist
                              1   1-21  	maclist	off,save
                              2   1-22  	vfd	36/&K
                              3   1-23  &R&(	aci	@&i@,32
                              4   1-24  &)
                              5   1-25  	maclist	restore
                              6   1-26  	&end
                                  1-27  
                                  1-28  " 
                                  1-29  
                                  1-30  " System defined per-request flags
                                  1-31  
                        400000    1-32  	bool	flags.allow_command,400000	" valid as a command
                        200000    1-33  	bool	flags.allow_af,200000	" valid as an active function
                        600000    1-34  	bool	flags.allow_both,600000	" valid as both
                                  1-35  
                        100000    1-36  	bool	flags.unimplemented,100000	" request is not yet implemented
                        040000    1-37  	bool	flags.multics_request,040000	" request is actually a Multics command
                                  1-38  
                        020000    1-39  	bool	flags.dont_summarize,020000	" summarize_requests won't list it
                        010000    1-40  	bool	flags.dont_list,010000	" list_requests won't show it without -all
                                  1-41  
                        004000    1-42  	bool	flags.unknown,004000	" request is explicitly made unknown
                                  1-43  
                                  1-44  
                                  1-45  " Macros for setting per-request flags
                                  1-46  
                                  1-47  	macro	set_flags_loop
                              1   1-48  	maclist	off,save
                              2   1-49  &(3
                              3   1-50  &=&i,default&[	set_flags_loop	&1,(0),(&2)
                              4   1-51  &;	set	&1,&1+&i
                              5   1-52  &]&)
                              6   1-53  	maclist	restore
                              7   1-54  	&end
                                  1-55  
                                  1-56  
                                  1-57  	macro	set_flags
                              1   1-58  	maclist	off,save
                              2   1-59  	set	&1,0
                              3   1-60  &=&3,&[	set_flags_loop	&1,(0),(&2)
                              4   1-61  &;	set_flags_loop	&1,(&2),(&3)
                              5   1-62  &]
                              6   1-63  	maclist	restore
                              7   1-64  	&end
                                  1-65  
                                  1-66  " 
                                  1-67  
                                  1-68  "	set_default_flags {(system-flags)},{(user-flags)}
                                  1-69  
                                  1-70  " Sets the default system and/or user flags to be used for requests:
                                  1-71  "   system-flags: defines the default general nature of requests;" the default
                                  1-72  "      default is flags.allow_command
                                  1-73  "   user-flags:  defines the default setting for the subsystem specific flags
                                  1-74  "      associated with requests;" the default default is none (0)
                                  1-75  "   Note: If either system-flags or user-flags is ommitted, the default is not
                                  1-76  "      changed from its prior value.  This action allows the use of multiple
                                  1-77  "      set_default_flags macros within a table to change system or user
                                  1-78  "      flags without affecting the other defaults
                                  1-79  
                                  1-80  	macro	set_default_flags
                              1   1-81  	maclist	off,save
                              2   1-82  &^=&1,&[	set_flags	.dft_sf,(flags.allow_command),(&1)
                              3   1-83  &]
                              4   1-84  &^=&2,&[	set_flags	.dft_uf,(0),(&2)
                              5   1-85  &]
                              6   1-86  	maclist	restore
                              7   1-87  	&end
                                  1-88  
                                  1-89  
                                  1-90  "	set_default_multics_flags {(system-flags)},{(user-flags)}
                                  1-91  
                                  1-92  " Sets the default system and/or user flags to be used for Multics commands when used as requests:
                                  1-93  "   system-flags: defines the default general nature of Multics requests;" the
                                  1-94  "      default default is flags.allow_command+flags.allow_af
                                  1-95  "   user-flags:  defines the default setting for the subsystem specific flags
                                  1-96  "      associated with Multics requests;" the default default is none (0)
                                  1-97  "   Note: If either system-flags or user-flags is ommitted, the default is not
                                  1-98  "      changed from its prior value.  This action allows the use of multiple
                                  1-99  "      set_default_multics_flags macros within a table to change system or user
                                 1-100  "      flags without affecting the other defaults
                                 1-101  
                                 1-102  	macro	set_default_multics_flags
                              1  1-103  	maclist	off,save
                              2  1-104  &^=&1,&[	set_flags	.dft_mrsf,(flags.allow_command,flags.allow_af),(&1)
                              3  1-105  &]
                              4  1-106  &^=&2,&[	set_flags	.dft_mruf,(0),(&2)
                              5  1-107  &]
                              6  1-108  	maclist	restore
                              7  1-109  	&end
                                 1-110  
                                 1-111  " 
                                 1-112  
                                 1-113  	macro	.multics_request_doc
                              1  1-114  	null
                              2  1-115  	&end
                                 1-116  
                                 1-117  
                                 1-118  	macro	dft_multics_doc_lth
                              1  1-119  	set	.multics_doc_lth,0
                              2  1-120  	&end
                                 1-121  
                                 1-122  
                                 1-123  "	set_default_multics_doc (string)
                                 1-124  
                                 1-125  " Sets the default documentation to be used for Multics commands when used as requests:
                                 1-126  "   string: is the documentation string to be used for any subsequent requests defined by
                                 1-127  "      the multics_request_macro;" all occurences of "&1" in this string will be replaced by
                                 1-128  "      the actual name of the request;" Eg:
                                 1-129  "	set_default_multics_doc (Type '.. help &1' for more information.)
                                 1-130  
                                 1-131  	macro	set_default_multics_doc
                              1  1-132  	maclist	off,save
                              2  1-133  	macro	.multics_request_doc
                              3  1-134  	aci	@&1@
                              4  1-135  	&&end
                              5  1-136  	macro	dft_multics_doc_lth
                              6  1-137  	macro	.compute
                              7  1-138  	set	.multics_doc_lth,&&&&l1
                              8  1-139  	&&&&end
                              9  1-140  	.compute (&1)
                             10  1-141  	&&end
                             11  1-142  	maclist	restore
                             12  1-143  	&end
                                 1-144  
                                 1-145  " 
                                 1-146  
                                 1-147  "	begin_table tablename
                                 1-148  
                                 1-149  " Defines a subsystem request table (multiple tables may exist in a single object segment):
                                 1-150  "   tablename: the name by which this table may be referenced externally;" references to the
                                 1-151  "      table should be of the form segname$tablename where segname is the name of this
                                 1-152  "      object segment
                                 1-153  
                                 1-154  	macro	begin_table
                              1  1-155  	segdef	&1
                              2  1-156  	maclist	object,save
                              3  1-157  	use	tables
                              4  1-158  &1:	request_table_version
                              5  1-159  	aci	@&1@,32
                              6  1-160  	dup	6
                              7  1-161  	vfd	36/0
                              8  1-162  	dupend
                              9  1-163  	vfd	36/&1.rc
                             10  1-164  	maclist	off
                             11  1-165  	set	.rc,0
                             12  1-166  	set_default_flags (default),(default)
                             13  1-167  	set_default_multics_flags (default),(default)
                             14  1-168  	maclist	restore
                             15  1-169  	&end
                                 1-170  
                                 1-171  
                                 1-172  "	end_table	tablename
                                 1-173  
                                 1-174  " Indicates the end of a subsystem request table definition:
                                 1-175  "   tablename: the name of the table which has now been completely defined
                                 1-176  
                                 1-177  	macro	end_table
                              1  1-178  	maclist	off,save
                              2  1-179  	set	&1.rc,.rc
                              3  1-180  	maclist	restore
                              4  1-181  	&end
                                 1-182  
                                 1-183  " 
                                 1-184  
                                 1-185  "	request	name,processor,({abbreviations}),{(documentation)},
                                 1-186  "		 {(system-flags)},{(user-flags)}
                                 1-187  
                                 1-188  " Defines a subsystem request:
                                 1-189  "   name: the primary name of this request
                                 1-190  "   processor: the name of the procedure which actually executes this request;" it must be
                                 1-191  "      of the form segname$entryname
                                 1-192  "   abbreviations: is the list of defined abbreviations for this request
                                 1-193  "   documentation: a short string used by the list_requests request to explain this request
                                 1-194  "   system-flags: defines the general nature of this request;" the default is
                                 1-195  "      flags.allow_command
                                 1-196  "   user-flags: allows a subsystem to provide subsystem-specific information
                                 1-197  "      with the request's definition;" the default is none (0)
                                 1-198  
                                 1-199  	macro	request
                              1  1-200  	maclist	off,save
                              2  1-201  	set	.rc,.rc+1
                              3  1-202  	maclist	object
                              4  1-203  	use	tables
                              5  1-204  	vfd	18/&U.call,18/&U.names
                              6  1-205  &=&4,&[	vfd	36/0
                              7  1-206  &;	vfd	18/&U.info,18/&l4
                              8  1-207  	maclist	off
                              9  1-208  	use	info
                             10  1-209  &U.info:	aci	@&4@
                             11  1-210  &]
                             12  1-211  	use	tables
                             13  1-212  	set_flags	.sf,(.dft_sf),(&5)
                             14  1-213  	set_flags	.uf,(.dft_uf),(&6)
                             15  1-214  	maclist	object
                             16  1-215  	vfd	18/.sf,18/.uf
                             17  1-216  	maclist	off
                             18  1-217  	use	calls
                             19  1-218  &U.call:	epaq	*
                             20  1-219  	lprp4	7|stack_header.lot_ptr,*au
                             21  1-220  	call6	&2
                             22  1-221  	use	names
                             23  1-222  &U.names:	namelist	&1&^=&3,&[,&3&]
                             24  1-223  	maclist	restore
                             25  1-224  	&end
                                 1-225  
                                 1-226  " 
                                 1-227  
                                 1-228  "	unknown_request name,(abbreviations)
                                 1-229  
                                 1-230  " Defines an unknown request: used to make the utilities not recognize a request even though
                                 1-231  " it is defined in a later request table (such as ssu_request_tables_$standard_request):
                                 1-232  "   name: the primary name of the request to be marked as unknown
                                 1-233  "   abbreviations: is the list of defined abbreviations for this request
                                 1-234  
                                 1-235  	macro	unknown_request
                              1  1-236  	maclist	off,save
                              2  1-237  	set	.rc,.rc+1
                              3  1-238  	maclist	object
                              4  1-239  	use	tables
                              5  1-240  	vfd	18/&U.call,18/&U.names
                              6  1-241  	vfd	36/0
                              7  1-242  	vfd	18/flags.unknown,18/0
                              8  1-243  	maclist	off
                              9  1-244  	use	calls
                             10  1-245  &U.call:	epaq	*
                             11  1-246  	lprp4	7|stack_header.lot_ptr,*au
                             12  1-247  	call6	ssu_$unknown_request
                             13  1-248  	use	names
                             14  1-249  &U.names: namelist	&1&^=&2,&[,&2&]
                             15  1-250  	maclist	restore
                             16  1-251  	&end
                                 1-252  
                                 1-253  " 
                                 1-254  
                                 1-255  "	multics_request name,({abbreviations}),({documenation}),{procedure},
                                 1-256  "		       {(system-flags)},{(user-flags)}
                                 1-257  
                                 1-258  " Defines that a Multics command/AF may be used as a subsystem request:
                                 1-259  "   name: the primary name of this request (usually the name of the Multics command/AF)
                                 1-260  "   abbreviations: is the list of defined abbreviations for this request
                                 1-261  "   documentation: a short string used by the list_requests request to explain this request;
                                 1-262  "      if no documentation is provided, the documentation specified by a prior use of
                                 1-263  "      set_default_multics_doc is used
                                 1-264  "   procedure: the name of the Multics command/AF which is actually executed by this
                                 1-265  "      request;" it must be of the form segname$entryname;" if not given, the default is
                                 1-266  "      name$name
                                 1-267  "   system-flags: defines the general nature of this request;" the default is
                                 1-268  "      flags.allow_command+flags.allow_af
                                 1-269  "   user-flags: allows a subsystem to provide subsystem-specific information
                                 1-270  "      with the request's definition;" the default is none (0)
                                 1-271  
                                 1-272  	macro	multics_request
                              1  1-273  	maclist	off,save
                              2  1-274  	set	.rc,.rc+1
                              3  1-275  	maclist	object
                              4  1-276  	use	tables
                              5  1-277  	vfd	18/&U.call,18/&U.names
                              6  1-278  &=&3,&[	dft_multics_doc_lth &1,(&2),(&3),(&4),(&5),(&6)
                              7  1-279  	vfd	18/&U.info,18/.multics_doc_lth
                              8  1-280  &;	vfd	18/&U.info,18/&l3
                              9  1-281  &]
                             10  1-282  	maclist	off
                             11  1-283  	use	info
                             12  1-284  &U.info:
                             13  1-285  &=&3,&[	.multics_request_doc &1,(&2),(&3),(&4),(&5),(&6)
                             14  1-286  &;	aci	@&3@
                             15  1-287  &]
                             16  1-288  	use	tables
                             17  1-289  	maclist	object
                             18  1-290  	set_flags	.sf,(.dft_mrsf),(&5)
                             19  1-291  	set_flags	.uf,(.dft_mruf),(&6)
                             20  1-292  	maclist	object
                             21  1-293  	vfd	18/.sf+flags.multics_request,18/.uf
                             22  1-294  	maclist	off
                             23  1-295  	use	calls
                             24  1-296  &U.call:	epaq	*
                             25  1-297  	lprp4	7|stack_header.lot_ptr,*au
                             26  1-298  &=&4,&[	call6	&1$&1
                             27  1-299  &;	call6	&4
                             28  1-300  &]
                             29  1-301  	use	names
                             30  1-302  &U.names:	namelist	&1&^=&2,&[,&2&]
                             31  1-303  	maclist	restore
                             32  1-304  	&end
                                 1-305  
                                 1-306  " 
                                 1-307  
                                 1-308  " Required ALM statements to make this all work
                                 1-309  
                                 1-310  	use	tables
                                 1-311  	use	calls
                                 1-312  	use	names
                                 1-313  	use	info
                                 1-314  	join	/text/tables,calls,names,info
                                 1-315  
                                 1-316  	include	stack_header
                                   2-1  "	BEGIN INCLUDE FILE ... stack_header.incl.alm  3/72  Bill Silver
                                   2-2  "
                                   2-3  "	modified 7/76 by M. Weaver for *system links and more system use of areas
                                   2-4  "	modified 3/77 by M. Weaver  to add rnt_ptr
                                   2-5  "	modified 7/77 by S. Webber to add run_unit_depth and assign_linkage_ptr
                                   2-6  "	modified 6/83 by J. Ives to add trace_frames and in_trace.
                                   2-7  
                                   2-8  " HISTORY COMMENTS:
                                   2-9  "  1) change(86-06-24,DGHowe), approve(86-06-24,MCR7396),
                                  2-10  "     audit(86-08-05,Schroth), install(86-11-03,MR12.0-1206):
                                  2-11  "     added the heap_header_ptr definition
                                  2-12  "  2) change(86-08-12,Kissel), approve(86-08-12,MCR7473),
                                  2-13  "     audit(86-10-10,Fawcett), install(86-11-03,MR12.0-1206):
                                  2-14  "     Modified to support control point management.  These changes were
                                  2-15  "     actually made in February 1985 by G. Palter.
                                  2-16  "  3) change(86-10-22,Fawcett), approve(86-10-22,MCR7473),
                                  2-17  "     audit(86-10-22,Farley), install(86-11-03,MR12.0-1206):
                                  2-18  "     Remove the old_lot pointer and replace it with cpm_data_ptr. Use the 18
                                  2-19  "     bit pad after cur_lot_size for the cpm_enabled. This was done to save
                                  2-20  "     some space int the stack header and change the cpd_ptr unal to
                                  2-21  "     cpm_data_ptr (ITS pair).
                                  2-22  "                                                      END HISTORY COMMENTS
                                  2-23  
                        000004    2-24  	equ	stack_header.cpm_data_ptr,4		ptr to control point for this stack
                        000006    2-25  	equ	stack_header.combined_stat_ptr,6	ptr to separate static area
                                  2-26  
                        000010    2-27  	equ	stack_header.clr_ptr,8		ptr to area containing linkage sections
                        000012    2-28  	equ	stack_header.max_lot_size,10		number of words allowed in lot (DU)
                        000012    2-29  	equ	stack_header.main_proc_invoked,10	nonzero if main proc was invoked in run unit (DL)
                        000012    2-30  	equ	stack_header.run_unit_depth,10	number of active run units stacked (DL)
                        000013    2-31  	equ	stack_header.cur_lot_size,11		DU number of words (entries) in lot
                        000013    2-32            equ	stack_header.cpm_enabled,11		DL  non-zero if control point management is enabled
                        000014    2-33  	equ	stack_header.system_free_ptr,12	ptr to system storage area
                        000016    2-34  	equ	stack_header.user_free_ptr,14		ptr to user storage area
                                  2-35  
                        000020    2-36  	equ	stack_header.parent_ptr,16		ptr to parent stack or null
                        000022    2-37  	equ	stack_header.stack_begin_ptr,18	ptr to first stack frame
                        000024    2-38  	equ	stack_header.stack_end_ptr,20		ptr to next useable stack frame
                        000026    2-39  	equ	stack_header.lot_ptr,22		ptr to the lot for the current ring
                                  2-40  
                        000030    2-41  	equ	stack_header.signal_ptr,24		ptr to signal proc for current ring
                        000032    2-42  	equ	stack_header.bar_mode_sp,26		value of sp before entering bar mode
                        000034    2-43  	equ	stack_header.pl1_operators_ptr,28	ptr: pl1_operators_$operator_table
                        000036    2-44  	equ	stack_header.call_op_ptr,30		ptr to standard call operator
                                  2-45  
                        000040    2-46  	equ	stack_header.push_op_ptr,32		ptr to standard push operator
                        000042    2-47  	equ	stack_header.return_op_ptr,34		ptr to standard return operator
                        000044    2-48  	equ	stack_header.ret_no_pop_op_ptr,36	ptr: stand. return/ no pop operator
                        000046    2-49  	equ	stack_header.entry_op_ptr,38		ptr to standard entry operator
                                  2-50  
                        000050    2-51  	equ	stack_header.trans_op_tv_ptr,40	ptr to table of translator operator ptrs
                        000052    2-52  	equ	stack_header.isot_ptr,42		pointer to ISOT
                        000054    2-53  	equ	stack_header.sct_ptr,44		pointer to System Condition Table
                        000056    2-54  	equ	stack_header.unwinder_ptr,46		pointer to unwinder for current ring
                                  2-55  
                        000060    2-56  	equ	stack_header.sys_link_info_ptr,48	ptr to *system link name table
                        000062    2-57  	equ	stack_header.rnt_ptr,50		ptr to reference name table
                        000064    2-58  	equ	stack_header.ect_ptr,52		ptr to event channel table
                        000066    2-59  	equ	stack_header.assign_linkage_ptr,54	ptr to area for hcs_$assign_linkage calls
                        000070    2-60  	equ	stack_header.heap_header_ptr,56	ptr to heap header.
                        000072    2-61  	equ	stack_header.trace_frames,58		stack of trace_catch_ frames
                        000073    2-62  	equ	stach_header.trace_top_ptr,59		trace pointer
                        000074    2-63  	equ	stack_header.in_trace,60		trace antirecurse bit
                        000100    2-64  	equ	stack_header_end,64			length of stack header
                                  2-65  
                                  2-66  
                                  2-67  
                                  2-68  
                        000000    2-69  	equ	trace_frames.count,0		number of trace frames on stack
                        000001    2-70  	equ	trace_frames.top_ptr,1		packed pointer to top one
                                  2-71  
                                  2-72  "	The  following constant is an offset within the  pl1  operators table.
                                  2-73  "	It  references a  transfer vector table.
                                  2-74  
                        000551    2-75  	bool	tv_offset,551
                                  2-76  
                                  2-77  
                                  2-78  "	The  following constants are offsets within this transfer vector table.
                                  2-79  
                        001170    2-80  	equ	call_offset,tv_offset+271
                        001171    2-81  	equ	push_offset,tv_offset+272
                        001172    2-82  	equ	return_offset,tv_offset+273
                        001173    2-83  	equ	return_no_pop_offset,tv_offset+274
                        001174    2-84  	equ	entry_offset,tv_offset+275
                                  2-85  
                                  2-86  
                                  2-87  " 	END INCLUDE FILE stack_header.incl.alm
                                 1-317  
                                 1-318  " END INCLUDE FILE ... ssu_request_macros.incl.alm
                                    43  
    001304                          44  	name	sdm_request_tables_
                                    45  
                                    46  " 
                                    47  
                                    48  " Standard send_mail requests
                                    49  
                                    50  	begin_table standard_requests
                        000000          	segdef	standard_requests
    000000  aa  163 162 161 164
    000001  aa  137 064 056 060
    000002  aa  163 164 141 156
    000003  aa  144 141 162 144
    000004  aa  137 162 145 161
    000005  aa  165 145 163 164
    000006  aa  163 040 040 040
    000007  aa  040 040 040 040
    000010  aa  040 040 040 040
    000011  aa  040 040 040 040
                        000006 
    000012  aa   000000 000000 
    000013  aa   000000 000000 
    000014  aa   000000 000000 
    000015  aa   000000 000000 
    000016  aa   000000 000000 
    000017  aa   000000 000000 
    000020  aa   000000 000027 
                                    51  
                                    52  	request	.,
                                    53  		 sdm_misc_requests_$self_identify,
                                    54  		 (),
                                    55  		 (Print current status.)
    000021  00   000220 000355 
    000022  0a   001304 000025 
    000023  aa   400000 000000 
                                    56  
                                    57  	request	quit,
                                    58  		 sdm_misc_requests_$quit_request,
                                    59  		 (q),
                                    60  		 (Leave send_mail.)
    000024  00   000223 000366 
    000025  0a   001312 000020 
    000026  aa   400000 000000 
                                    61  
                                    62  	request	send,
                                    63  		 sdm_mbx_requests_$send_request,
                                    64  		 (),
                                    65  		 (Send the message.)
    000027  00   000226 000407 
    000030  0a   001316 000021 
    000031  aa   400000 000000 
                                    66  
                                    67  	request	print,
                                    68  		 sdm_msg_requests_$print_request,
                                    69  		 (pr,p),
                                    70  		 (Print the message.)
    000032  00   000231 000420 
    000033  0a   001323 000022 
    000034  aa   400000 000000 
                                    71  
                                    72  	request	print_header,
                                    73  		 sdm_msg_requests_$print_header_request,
                                    74  		 (prhe),
                                    75  		 (Print the message's header.)
    000035  00   000234 000451 
    000036  0a   001330 000033 
    000037  aa   400000 000000 
                                    76  
                                    77  	request	qedx,
                                    78  		 sdm_msg_requests_$qedx_request,
                                    79  		 (qx),
                                    80  		 (Edit the message.)
    000040  00   000237 000472 
    000041  0a   001337 000021 
    000042  aa   400000 000000 
                                    81  
                                    82  	request	fill,
                                    83  		 sdm_msg_requests_$fill_request,
                                    84  		 (fi),
                                    85  		 (Reformat text of the message to fit in given width.)
    000043  00   000242 000513 
    000044  0a   001344 000063 
    000045  aa   400000 000000 
                                    86  
                                    87  	request	write,
                                    88  		 sdm_file_requests_$write_request,
                                    89  		 (w),
                                    90  		 (Write the message, unformatted, to an ASCII segment.)
    000046  00   000245 000534 
    000047  0a   001361 000064 
    000050  aa   400000 000000 
                                    91  
                                    92  	request	to,
                                    93  		 sdm_header_requests_$to_request,
                                    94  		 (),
                                    95  		 (Print/modify the primary recipients of the message.)
    000051  00   000250 000555 
    000052  0a   001376 000063 
    000053  aa   400000 000000 
                                    96  
                                    97  	request	cc,
                                    98  		 sdm_header_requests_$cc_request,
                                    99  		 (),
                                   100  		 (Print/modify the secondary recipients of the message.)
    000054  00   000253 000566 
    000055  0a   001413 000065 
    000056  aa   400000 000000 
                                   101  
                                   102  	request	bcc,
                                   103  		 sdm_header_requests_$bcc_request,
                                   104  		 (),
                                   105  	           (Print/modify the list of "blind" recipients of the message.)
    000057  00   000256 000577 
    000060  0a   001431 000073 
    000061  aa   400000 000000 
                                   106  
                                   107  	request	remove,
                                   108  		 sdm_header_requests_$remove_request,
                                   109  		 (rm),
                                   110  		 (Remove recipients, authors, or the subject of the message.)
    000062  00   000261 000610 
    000063  0a   001450 000072 
    000064  aa   400000 000000 
                                   111  
                                   112  	request	subject,
                                   113  		 sdm_header_requests_$subject_request,
                                   114  		 (sj),
                                   115  		 (Print/modify the subject of the message.),
                                   116  		 flags.allow_both
    000065  00   000264 000631 
    000066  0a   001467 000050 
    000067  aa   600000 000000 
                                   117  
                                   118  	request	from,
                                   119  		 sdm_header_requests_$from_request,
                                   120  		 (),
                                   121  		 (Print/modify the authors of the message.)
    000070  00   000267 000652 
    000071  0a   001501 000050 
    000072  aa   400000 000000 
                                   122  
                                   123  	request	reply_to,
                                   124  		 sdm_header_requests_$reply_to_request,
                                   125  		 (rpt),
                                   126  		 (Print/modify the recipients of replies to the message.)
    000073  00   000272 000663 
    000074  0a   001513 000066 
    000075  aa   400000 000000 
                                   127  
                                   128  	request	message_id,
                                   129  		 sdm_header_requests_$message_id_request,
                                   130  		 (mid),
                                   131  		 (Print the unique identifier of the message.)
    000076  00   000275 000704 
    000077  0a   001531 000053 
    000100  aa   400000 000000 
                                   132  
                                   133  	request	apply,
                                   134  		 sdm_msg_requests_$apply_request,
                                   135  		 (ap),
                                   136  		 (Apply a Multics command line to the message.)
    000101  00   000300 000725 
    000102  0a   001544 000054 
    000103  aa   400000 000000 
                                   137  
                                   138  	request	log,
                                   139  		 sdm_mbx_requests_$log_request,
                                   140  		 (),
                                   141  		 (Add the message to your logbox.)
    000104  00   000303 000746 
    000105  0a   001557 000037 
    000106  aa   400000 000000 
                                   142  
                                   143  	request	save,
                                   144  		 sdm_mbx_requests_$save_request,
                                   145  		 (sv),
                                   146  		 (Add the message to the given savebox.)
    000107  00   000306 000757 
    000110  0a   001567 000045 
    000111  aa   400000 000000 
                                   147  
                                   148  	request	copy,
                                   149  		 sdm_mbx_requests_$copy_request,
                                   150  		 (cp),
                                   151  		 (Add the message to the given mailbox.)
    000112  00   000311 001000 
    000113  0a   001601 000045 
    000114  aa   400000 000000 
                                   152  
                                   153  	request	append,
                                   154  		 sdm_file_requests_$append_request,
                                   155  		 (app),
                                   156  		 (Write the message at the end of an ASCII segment.)
    000115  00   000314 001021 
    000116  0a   001613 000061 
    000117  aa   400000 000000 
                                   157  
                                   158  	request	preface,
                                   159  		 sdm_file_requests_$preface_request,
                                   160  		 (prf),
                                   161  		 (Write the message at the beginning of an ASCII segment.)
    000120  00   000317 001042 
    000121  0a   001630 000067 
    000122  aa   400000 000000 
                                   162  
                                   163  	request	debug_mode,
                                   164  		 sdm_debug_requests_$debug_mode,
                                   165  		 (),
                                   166  		 (Enable/disable send_mail debugging facilities.),
                                   167  		 flags.allow_command+flags.dont_summarize+flags.dont_list
    000123  00   000322 001063 
    000124  0a   001646 000056 
    000125  aa   430000 000000 
                                   168  
                                   169  	end_table standard_requests
                                   170  
                                   171  " 
                                   172  
                                   173  " Requests used to access the message(s) being answered by this send_mail
                                   174  
                                   175  	begin_table original_requests
                        000126          	segdef	original_requests
    000126  aa  163 162 161 164
    000127  aa  137 064 056 060
    000130  aa  157 162 151 147
    000131  aa  151 156 141 154
    000132  aa  137 162 145 161
    000133  aa  165 145 163 164
    000134  aa  163 040 040 040
    000135  aa  040 040 040 040
    000136  aa  040 040 040 040
    000137  aa  040 040 040 040
                        000006 
    000140  aa   000000 000000 
    000141  aa   000000 000000 
    000142  aa   000000 000000 
    000143  aa   000000 000000 
    000144  aa   000000 000000 
    000145  aa   000000 000000 
    000146  aa   000000 000007 
                                   176  
                                   177  	request	in_reply_to,
                                   178  		 sdm_original_requests_$in_reply_to_request,
                                   179  		 (irt),
                                   180  		 (Print/modify the list of message(s) being answered by this send_mail.)
    000147  00   000325 001074 
    000150  0a   001662 000105 
    000151  aa   400000 000000 
                                   181  
                                   182  	request	print_original,
                                   183  		 rdm_msg_requests_$print_request,
                                   184  		 (pro),
                                   185  		 (Prints the message(s) being answered by this send_mail.)
    000152  00   000330 001115 
    000153  0a   001704 000067 
    000154  aa   400000 000000 
                                   186  
                                   187  	request	print_original_header,
                                   188  		 rdm_msg_requests_$print_header_request,
                                   189  		 (prohe),
                                   190  		 (Prints the headers of the message(s) being answered by this send_mail.)
    000155  00   000333 001136 
    000156  0a   001722 000106 
    000157  aa   400000 000000 
                                   191  
                                   192  	request	list_original,
                                   193  		 rdm_msg_requests_$list_request,
                                   194  		 (lso),
                                   195  		 (Summarizes the message(s) being answered by this send_mail.),
                                   196  		 flags.allow_both
    000160  00   000336 001157 
    000161  0a   001744 000073 
    000162  aa   600000 000000 
                                   197  
                                   198  	request	log_original,
                                   199  		 rdm_mbx_requests_$log_request,
                                   200  		 (logo),
                                   201  		 (Adds the message(s) being answered by this send_mail to your logbox.)
    000163  00   000341 001200 
    000164  0a   001763 000104 
    000165  aa   400000 000000 
                                   202  
                                   203  	request	save_original,
                                   204  		 rdm_mbx_requests_$save_request,
                                   205  		 (svo),
                                   206  		 (Adds the message(s) being answered by this send_mail to the specified savebox.)
    000166  00   000344 001221 
    000167  0a   002004 000116 
    000170  aa   400000 000000 
                                   207  
                                   208  	request	write_original,
                                   209  		 rdm_file_requests_$write_request,
                                   210  		 (wo),
                                   211  		 (Write the message(s) being answered to an ASCII segment.)
    000171  00   000347 001242 
    000172  0a   002030 000070 
    000173  aa   400000 000000 
                                   212  
                                   213  	end_table	original_requests
                                   214  
                                   215  " 
                                   216  
                                   217  " Requests used for debugging send_mail
                                   218  
                                   219  	begin_table debug_requests
                        000174          	segdef	debug_requests
    000174  aa  163 162 161 164
    000175  aa  137 064 056 060
    000176  aa  144 145 142 165
    000177  aa  147 137 162 145
    000200  aa  161 165 145 163
    000201  aa  164 163 040 040
    000202  aa  040 040 040 040
    000203  aa  040 040 040 040
    000204  aa  040 040 040 040
    000205  aa  040 040 040 040
                        000006 
    000206  aa   000000 000000 
    000207  aa   000000 000000 
    000210  aa   000000 000000 
    000211  aa   000000 000000 
    000212  aa   000000 000000 
    000213  aa   000000 000000 
    000214  aa   000000 000001 
                                   220  
                                   221  	request	probe,
                                   222  		 sdm_debug_requests_$probe,
                                   223  		 (pb),
                                   224  		 (Invokes the probe debugger with all available data structures.),
                                   225  		 flags.allow_command+flags.dont_summarize+flags.dont_list
    000215  00   000352 001263 
    000216  0a   002046 000076 
    000217  aa   430000 000000 
                                   226  
                                   227  	end_table	debug_requests
                                   228  
                                   229  	end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    002066  5a   000003 000000 
    002067  5a   000051 600000 
    002070  aa   000000 000000 
    002071  55   000013 000002 
    002072  5a   000002 400003 
    002073  55   000006 000013 
    002074  aa  023 163 144 155
    002075  aa  137 162 145 161
    002076  aa  165 145 163 164
    002077  aa  137 164 141 142
    002100  aa  154 145 163 137
    002101  55   000022 000003 
    002102  0a   000174 400000 
    002103  55   000016 000003 
    002104  aa  016 144 145 142         debug_requests
    002105  aa  165 147 137 162
    002106  aa  145 161 165 145
    002107  aa  163 164 163 000
    002110  55   000032 000013 
    002111  0a   000126 400000 
    002112  55   000025 000003 
    002113  aa  021 157 162 151         original_requests
    002114  aa  147 151 156 141
    002115  aa  154 137 162 145
    002116  aa  161 165 145 163
    002117  aa  164 163 000 000
    002120  55   000042 000022 
    002121  0a   000000 400000 
    002122  55   000035 000003 
    002123  aa  021 163 164 141         standard_requests
    002124  aa  156 144 141 162
    002125  aa  144 137 162 145
    002126  aa  161 165 145 163
    002127  aa  164 163 000 000
    002130  55   000002 000032 
    002131  6a   000000 400002 
    002132  55   000045 000003 
    002133  aa  014 163 171 155         symbol_table
    002134  aa  142 157 154 137
    002135  aa  164 141 142 154
    002136  aa  145 000 000 000

DEFINITIONS HASH TABLE

    002137  aa   000000 000015 
    002140  aa   000000 000000 
    002141  aa   000000 000000 
    002142  aa   000000 000000 
    002143  aa   000000 000000 
    002144  5a   000013 000000 
    002145  aa   000000 000000 
    002146  5a   000042 000000 
    002147  aa   000000 000000 
    002150  aa   000000 000000 
    002151  5a   000032 000000 
    002152  aa   000000 000000 
    002153  5a   000022 000000 
    002154  aa   000000 000000 

EXTERNAL NAMES

    002155  aa  005 160 162 157         probe
    002156  aa  142 145 000 000
    002157  aa  022 162 144 155         rdm_file_requests_
    002160  aa  137 146 151 154
    002161  aa  145 137 162 145
    002162  aa  161 165 145 163
    002163  aa  164 163 137 000
    002164  aa  021 162 144 155         rdm_mbx_requests_
    002165  aa  137 155 142 170
    002166  aa  137 162 145 161
    002167  aa  165 145 163 164
    002170  aa  163 137 000 000
    002171  aa  014 154 151 163         list_request
    002172  aa  164 137 162 145
    002173  aa  161 165 145 163
    002174  aa  164 000 000 000
    002175  aa  021 162 144 155         rdm_msg_requests_
    002176  aa  137 155 163 147
    002177  aa  137 162 145 161
    002200  aa  165 145 163 164
    002201  aa  163 137 000 000
    002202  aa  023 151 156 137         in_reply_to_request
    002203  aa  162 145 160 154
    002204  aa  171 137 164 157
    002205  aa  137 162 145 161
    002206  aa  165 145 163 164
    002207  aa  026 163 144 155         sdm_original_requests_
    002210  aa  137 157 162 151
    002211  aa  147 151 156 141
    002212  aa  154 137 162 145
    002213  aa  161 165 145 163
    002214  aa  164 163 137 000
    002215  aa  012 144 145 142         debug_mode
    002216  aa  165 147 137 155
    002217  aa  157 144 145 000
    002220  aa  023 163 144 155         sdm_debug_requests_
    002221  aa  137 144 145 142
    002222  aa  165 147 137 162
    002223  aa  145 161 165 145
    002224  aa  163 164 163 137
    002225  aa  017 160 162 145         preface_request
    002226  aa  146 141 143 145
    002227  aa  137 162 145 161
    002230  aa  165 145 163 164
    002231  aa  016 141 160 160         append_request
    002232  aa  145 156 144 137
    002233  aa  162 145 161 165
    002234  aa  145 163 164 000
    002235  aa  014 143 157 160         copy_request
    002236  aa  171 137 162 145
    002237  aa  161 165 145 163
    002240  aa  164 000 000 000
    002241  aa  014 163 141 166         save_request
    002242  aa  145 137 162 145
    002243  aa  161 165 145 163
    002244  aa  164 000 000 000
    002245  aa  013 154 157 147         log_request
    002246  aa  137 162 145 161
    002247  aa  165 145 163 164
    002250  aa  015 141 160 160         apply_request
    002251  aa  154 171 137 162
    002252  aa  145 161 165 145
    002253  aa  163 164 000 000
    002254  aa  022 155 145 163         message_id_request
    002255  aa  163 141 147 145
    002256  aa  137 151 144 137
    002257  aa  162 145 161 165
    002260  aa  145 163 164 000
    002261  aa  020 162 145 160         reply_to_request
    002262  aa  154 171 137 164
    002263  aa  157 137 162 145
    002264  aa  161 165 145 163
    002265  aa  164 000 000 000
    002266  aa  014 146 162 157         from_request
    002267  aa  155 137 162 145
    002270  aa  161 165 145 163
    002271  aa  164 000 000 000
    002272  aa  017 163 165 142         subject_request
    002273  aa  152 145 143 164
    002274  aa  137 162 145 161
    002275  aa  165 145 163 164
    002276  aa  016 162 145 155         remove_request
    002277  aa  157 166 145 137
    002300  aa  162 145 161 165
    002301  aa  145 163 164 000
    002302  aa  013 142 143 143         bcc_request
    002303  aa  137 162 145 161
    002304  aa  165 145 163 164
    002305  aa  012 143 143 137         cc_request
    002306  aa  162 145 161 165
    002307  aa  145 163 164 000
    002310  aa  012 164 157 137         to_request
    002311  aa  162 145 161 165
    002312  aa  145 163 164 000
    002313  aa  024 163 144 155         sdm_header_requests_
    002314  aa  137 150 145 141
    002315  aa  144 145 162 137
    002316  aa  162 145 161 165
    002317  aa  145 163 164 163
    002320  aa  137 000 000 000
    002321  aa  015 167 162 151         write_request
    002322  aa  164 145 137 162
    002323  aa  145 161 165 145
    002324  aa  163 164 000 000
    002325  aa  022 163 144 155         sdm_file_requests_
    002326  aa  137 146 151 154
    002327  aa  145 137 162 145
    002330  aa  161 165 145 163
    002331  aa  164 163 137 000
    002332  aa  014 146 151 154         fill_request
    002333  aa  154 137 162 145
    002334  aa  161 165 145 163
    002335  aa  164 000 000 000
    002336  aa  014 161 145 144         qedx_request
    002337  aa  170 137 162 145
    002340  aa  161 165 145 163
    002341  aa  164 000 000 000
    002342  aa  024 160 162 151         print_header_request
    002343  aa  156 164 137 150
    002344  aa  145 141 144 145
    002345  aa  162 137 162 145
    002346  aa  161 165 145 163
    002347  aa  164 000 000 000
    002350  aa  015 160 162 151         print_request
    002351  aa  156 164 137 162
    002352  aa  145 161 165 145
    002353  aa  163 164 000 000
    002354  aa  021 163 144 155         sdm_msg_requests_
    002355  aa  137 155 163 147
    002356  aa  137 162 145 161
    002357  aa  165 145 163 164
    002360  aa  163 137 000 000
    002361  aa  014 163 145 156         send_request
    002362  aa  144 137 162 145
    002363  aa  161 165 145 163
    002364  aa  164 000 000 000
    002365  aa  021 163 144 155         sdm_mbx_requests_
    002366  aa  137 155 142 170
    002367  aa  137 162 145 161
    002370  aa  165 145 163 164
    002371  aa  163 137 000 000
    002372  aa  014 161 165 151         quit_request
    002373  aa  164 137 162 145
    002374  aa  161 165 145 163
    002375  aa  164 000 000 000
    002376  aa  015 163 145 154         self_identify
    002377  aa  146 137 151 144
    002400  aa  145 156 164 151
    002401  aa  146 171 000 000
    002402  aa  022 163 144 155         sdm_misc_requests_
    002403  aa  137 155 151 163
    002404  aa  143 137 162 145
    002405  aa  161 165 145 163
    002406  aa  164 163 137 000

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    002407  aa   000004 000000 
    002410  55   000132 000067 
    002411  aa   000004 000000 
    002412  55   000071 000233 
    002413  aa   000004 000000 
    002414  55   000076 000153 
    002415  aa   000004 000000 
    002416  55   000076 000157 
    002417  aa   000004 000000 
    002420  55   000107 000103 
    002421  aa   000004 000000 
    002422  55   000107 000254 
    002423  aa   000004 000000 
    002424  55   000107 000262 
    002425  aa   000004 000000 
    002426  55   000121 000114 
    002427  aa   000004 000000 
    002430  55   000132 000127 
    002431  aa   000004 000000 
    002432  55   000237 000137 
    002433  aa   000004 000000 
    002434  55   000237 000143 
    002435  aa   000004 000000 
    002436  55   000277 000147 
    002437  aa   000004 000000 
    002440  55   000277 000153 
    002441  aa   000004 000000 
    002442  55   000277 000157 
    002443  aa   000004 000000 
    002444  55   000266 000162 
    002445  aa   000004 000000 
    002446  55   000225 000166 
    002447  aa   000004 000000 
    002450  55   000225 000173 
    002451  aa   000004 000000 
    002452  55   000225 000200 
    002453  aa   000004 000000 
    002454  55   000225 000204 
    002455  aa   000004 000000 
    002456  55   000225 000210 
    002457  aa   000004 000000 
    002460  55   000225 000214 
    002461  aa   000004 000000 
    002462  55   000225 000217 
    002463  aa   000004 000000 
    002464  55   000225 000222 
    002465  aa   000004 000000 
    002466  55   000237 000233 
    002467  aa   000004 000000 
    002470  55   000266 000244 
    002471  aa   000004 000000 
    002472  55   000266 000250 
    002473  aa   000004 000000 
    002474  55   000266 000254 
    002475  aa   000004 000000 
    002476  55   000266 000262 
    002477  aa   000004 000000 
    002500  55   000277 000273 
    002501  aa   000004 000000 
    002502  55   000314 000304 
    002503  aa   000004 000000 
    002504  55   000314 000310 
    002505  aa   000001 000000 
    002506  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    002507  5a   000321 000000 
    002510  5a   000323 000000 
    002511  5a   000325 000000 
    002512  5a   000327 000000 
    002513  5a   000331 000000 
    002514  5a   000333 000000 
    002515  5a   000335 000000 
    002516  5a   000337 000000 
    002517  5a   000341 000000 
    002520  5a   000343 000000 
    002521  5a   000345 000000 
    002522  5a   000347 000000 
    002523  5a   000351 000000 
    002524  5a   000353 000000 
    002525  5a   000355 000000 
    002526  5a   000357 000000 
    002527  5a   000361 000000 
    002530  5a   000363 000000 
    002531  5a   000365 000000 
    002532  5a   000367 000000 
    002533  5a   000371 000000 
    002534  5a   000373 000000 
    002535  5a   000375 000000 
    002536  5a   000377 000000 
    002537  5a   000401 000000 
    002540  5a   000403 000000 
    002541  5a   000405 000000 
    002542  5a   000407 000000 
    002543  5a   000411 000000 
    002544  5a   000413 000000 
    002545  5a   000415 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   002066 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000106 
    000007  a2   000000 000000 
    000010  9a   777770 0000 46         sdm_misc_requests_|self_identify
    000011  5a   000457 0000 00
    000012  9a   777766 0000 46         sdm_misc_requests_|quit_request
    000013  5a   000456 0000 00
    000014  9a   777764 0000 46         sdm_mbx_requests_|send_request
    000015  5a   000455 0000 00
    000016  9a   777762 0000 46         sdm_msg_requests_|print_request
    000017  5a   000454 0000 00
    000020  9a   777760 0000 46         sdm_msg_requests_|print_header_request
    000021  5a   000453 0000 00
    000022  9a   777756 0000 46         sdm_msg_requests_|qedx_request
    000023  5a   000452 0000 00
    000024  9a   777754 0000 46         sdm_msg_requests_|fill_request
    000025  5a   000451 0000 00
    000026  9a   777752 0000 46         sdm_file_requests_|write_request
    000027  5a   000450 0000 00
    000030  9a   777750 0000 46         sdm_header_requests_|to_request
    000031  5a   000447 0000 00
    000032  9a   777746 0000 46         sdm_header_requests_|cc_request
    000033  5a   000446 0000 00
    000034  9a   777744 0000 46         sdm_header_requests_|bcc_request
    000035  5a   000445 0000 00
    000036  9a   777742 0000 46         sdm_header_requests_|remove_request
    000037  5a   000444 0000 00
    000040  9a   777740 0000 46         sdm_header_requests_|subject_request
    000041  5a   000443 0000 00
    000042  9a   777736 0000 46         sdm_header_requests_|from_request
    000043  5a   000442 0000 00
    000044  9a   777734 0000 46         sdm_header_requests_|reply_to_request
    000045  5a   000441 0000 00
    000046  9a   777732 0000 46         sdm_header_requests_|message_id_request
    000047  5a   000440 0000 00
    000050  9a   777730 0000 46         sdm_msg_requests_|apply_request
    000051  5a   000437 0000 00
    000052  9a   777726 0000 46         sdm_mbx_requests_|log_request
    000053  5a   000436 0000 00
    000054  9a   777724 0000 46         sdm_mbx_requests_|save_request
    000055  5a   000435 0000 00
    000056  9a   777722 0000 46         sdm_mbx_requests_|copy_request
    000057  5a   000434 0000 00
    000060  9a   777720 0000 46         sdm_file_requests_|append_request
    000061  5a   000433 0000 00
    000062  9a   777716 0000 46         sdm_file_requests_|preface_request
    000063  5a   000432 0000 00
    000064  9a   777714 0000 46         sdm_debug_requests_|debug_mode
    000065  5a   000431 0000 00
    000066  9a   777712 0000 46         sdm_original_requests_|in_reply_to_request
    000067  5a   000430 0000 00
    000070  9a   777710 0000 46         rdm_msg_requests_|print_request
    000071  5a   000427 0000 00
    000072  9a   777706 0000 46         rdm_msg_requests_|print_header_request
    000073  5a   000426 0000 00
    000074  9a   777704 0000 46         rdm_msg_requests_|list_request
    000075  5a   000425 0000 00
    000076  9a   777702 0000 46         rdm_mbx_requests_|log_request
    000077  5a   000424 0000 00
    000100  9a   777700 0000 46         rdm_mbx_requests_|save_request
    000101  5a   000423 0000 00
    000102  9a   777676 0000 46         rdm_file_requests_|write_request
    000103  5a   000422 0000 00
    000104  9a   777674 0000 46         sdm_debug_requests_|probe
    000105  5a   000421 0000 00
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000010 
    000004  aa   000000 117244 
    000005  aa   361023 525721 
    000006  aa   000000 131036 
    000007  aa   701400 734337 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000345 
    000020  aa   000000 000136 
    000021  aa   000274 000256 
    000022  aa   000335 000136 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   070056 061064 
    000030  aa   040115 141162 
    000031  aa   143150 040061 
    000032  aa   071070 071040 
    000033  aa   040040 040040 
    000034  aa   123143 150162 
    000035  aa   157164 150056 
    000036  aa   123171 163115 
    000037  aa   141151 156164 
    000040  aa   056155 040040 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   154151 163164 
    000045  aa   040163 171155 
    000046  aa   142157 154163 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040040 040040 
    000057  aa   040040 040040 
    000060  aa   040040 040040 
    000061  aa   040040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000003 
    000066  aa   000102 000047 
    000067  aa   310157 125422 
    000070  aa   000000 131036 
    000071  aa   701401 000000 
    000072  aa   000114 000045 
    000073  aa   305736 051534 
    000074  aa   000000 113310 
    000075  aa   612334 200000 
    000076  aa   000126 000037 
    000077  aa   305736 051531 
    000100  aa   000000 115000 
    000101  aa   507463 000000 
    000102  aa   076165 144144          >udd>sm>ds>w>ml>sdm_request_tables_.alm
    000103  aa   076163 155076 
    000104  aa   144163 076167 
    000105  aa   076155 154076 
    000106  aa   163144 155137 
    000107  aa   162145 161165 
    000110  aa   145163 164137 
    000111  aa   164141 142154 
    000112  aa   145163 137056 
    000113  aa   141154 155040 
    000114  aa   076154 144144          >ldd>incl>ssu_request_macros.incl.alm
    000115  aa   076151 156143 
    000116  aa   154076 163163 
    000117  aa   165137 162145 
    000120  aa   161165 145163 
    000121  aa   164137 155141 
    000122  aa   143162 157163 
    000123  aa   056151 156143 
    000124  aa   154056 141154 
    000125  aa   155040 040040 
    000126  aa   076154 144144          >ldd>incl>stack_header.incl.alm
    000127  aa   076151 156143 
    000130  aa   154076 163164 
    000131  aa   141143 153137 
    000132  aa   150145 141144 
    000133  aa   145162 056151 
    000134  aa   156143 154056 
    000135  aa   141154 155040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

         220    .._00000.call            sdm_request_tables_:       55.
        1304    .._00000.info            sdm_request_tables_:       55.
         355    .._00000.names           sdm_request_tables_:       55.
         223    .._00001.call            sdm_request_tables_:       60.
        1312    .._00001.info            sdm_request_tables_:       60.
         366    .._00001.names           sdm_request_tables_:       60.
         226    .._00002.call            sdm_request_tables_:       65.
        1316    .._00002.info            sdm_request_tables_:       65.
         407    .._00002.names           sdm_request_tables_:       65.
         231    .._00003.call            sdm_request_tables_:       70.
        1323    .._00003.info            sdm_request_tables_:       70.
         420    .._00003.names           sdm_request_tables_:       70.
         234    .._00004.call            sdm_request_tables_:       75.
        1330    .._00004.info            sdm_request_tables_:       75.
         451    .._00004.names           sdm_request_tables_:       75.
         237    .._00005.call            sdm_request_tables_:       80.
        1337    .._00005.info            sdm_request_tables_:       80.
         472    .._00005.names           sdm_request_tables_:       80.
         242    .._00006.call            sdm_request_tables_:       85.
        1344    .._00006.info            sdm_request_tables_:       85.
         513    .._00006.names           sdm_request_tables_:       85.
         245    .._00007.call            sdm_request_tables_:       90.
        1361    .._00007.info            sdm_request_tables_:       90.
         534    .._00007.names           sdm_request_tables_:       90.
         250    .._00010.call            sdm_request_tables_:       95.
        1376    .._00010.info            sdm_request_tables_:       95.
         555    .._00010.names           sdm_request_tables_:       95.
         253    .._00011.call            sdm_request_tables_:      100.
        1413    .._00011.info            sdm_request_tables_:      100.
         566    .._00011.names           sdm_request_tables_:      100.
         256    .._00012.call            sdm_request_tables_:      105.
        1431    .._00012.info            sdm_request_tables_:      105.
         577    .._00012.names           sdm_request_tables_:      105.
         261    .._00013.call            sdm_request_tables_:      110.
        1450    .._00013.info            sdm_request_tables_:      110.
         610    .._00013.names           sdm_request_tables_:      110.
         264    .._00014.call            sdm_request_tables_:      116.
        1467    .._00014.info            sdm_request_tables_:      116.
         631    .._00014.names           sdm_request_tables_:      116.
         267    .._00015.call            sdm_request_tables_:      121.
        1501    .._00015.info            sdm_request_tables_:      121.
         652    .._00015.names           sdm_request_tables_:      121.
         272    .._00016.call            sdm_request_tables_:      126.
        1513    .._00016.info            sdm_request_tables_:      126.
         663    .._00016.names           sdm_request_tables_:      126.
         275    .._00017.call            sdm_request_tables_:      131.
        1531    .._00017.info            sdm_request_tables_:      131.
         704    .._00017.names           sdm_request_tables_:      131.
         300    .._00020.call            sdm_request_tables_:      136.
        1544    .._00020.info            sdm_request_tables_:      136.
         725    .._00020.names           sdm_request_tables_:      136.
         303    .._00021.call            sdm_request_tables_:      141.
        1557    .._00021.info            sdm_request_tables_:      141.
         746    .._00021.names           sdm_request_tables_:      141.
         306    .._00022.call            sdm_request_tables_:      146.
        1567    .._00022.info            sdm_request_tables_:      146.
         757    .._00022.names           sdm_request_tables_:      146.
         311    .._00023.call            sdm_request_tables_:      151.
        1601    .._00023.info            sdm_request_tables_:      151.
        1000    .._00023.names           sdm_request_tables_:      151.
         314    .._00024.call            sdm_request_tables_:      156.
        1613    .._00024.info            sdm_request_tables_:      156.
        1021    .._00024.names           sdm_request_tables_:      156.
         317    .._00025.call            sdm_request_tables_:      161.
        1630    .._00025.info            sdm_request_tables_:      161.
        1042    .._00025.names           sdm_request_tables_:      161.
         322    .._00026.call            sdm_request_tables_:      167.
        1646    .._00026.info            sdm_request_tables_:      167.
        1063    .._00026.names           sdm_request_tables_:      167.
         325    .._00027.call            sdm_request_tables_:      180.
        1662    .._00027.info            sdm_request_tables_:      180.
        1074    .._00027.names           sdm_request_tables_:      180.
         330    .._00030.call            sdm_request_tables_:      185.
        1704    .._00030.info            sdm_request_tables_:      185.
        1115    .._00030.names           sdm_request_tables_:      185.
         333    .._00031.call            sdm_request_tables_:      190.
        1722    .._00031.info            sdm_request_tables_:      190.
        1136    .._00031.names           sdm_request_tables_:      190.
         336    .._00032.call            sdm_request_tables_:      196.
        1744    .._00032.info            sdm_request_tables_:      196.
        1157    .._00032.names           sdm_request_tables_:      196.
         341    .._00033.call            sdm_request_tables_:      201.
        1763    .._00033.info            sdm_request_tables_:      201.
        1200    .._00033.names           sdm_request_tables_:      201.
         344    .._00034.call            sdm_request_tables_:      206.
        2004    .._00034.info            sdm_request_tables_:      206.
        1221    .._00034.names           sdm_request_tables_:      206.
         347    .._00035.call            sdm_request_tables_:      211.
        2030    .._00035.info            sdm_request_tables_:      211.
        1242    .._00035.names           sdm_request_tables_:      211.
         352    .._00036.call            sdm_request_tables_:      225.
        2046    .._00036.info            sdm_request_tables_:      225.
        1263    .._00036.names           sdm_request_tables_:      225.
      600000    .dft_mrsf                sdm_request_tables_:       50,  175,  219.
           0    .dft_mruf                sdm_request_tables_:       50,  175,  219.
      400000    .dft_sf                  sdm_request_tables_:       50,   55,   60,   65,   70,   75,   80,   85,   90,   95,
                                                                   100,  105,  110,  121,  126,  131,  136,  141,  146,  151,
                                                                   156,  161,  175,  180,  185,  190,  201,  206,  211,  219.
           0    .dft_uf                  sdm_request_tables_:       50,   55,   60,   65,   70,   75,   80,   85,   90,   95,
                                                                   100,  105,  110,  116,  121,  126,  131,  136,  141,  146,
                                                                   151,  156,  161,  167,  175,  180,  185,  190,  196,  201,
                                                                   206,  211,  219,  225.
      156144    .rc                      sdm_request_tables_:       50,   55,   60,   65,   70,   75,   80,   85,   90,   95,
                                                                   100,  105,  110,  116,  121,  126,  131,  136,  141,  146,
                                                                   151,  156,  161,  167,  169,  175,  180,  185,  190,  196,
                                                                   201,  206,  211,  213,  219,  225,  227.
      430000    .sf                      sdm_request_tables_:       55,   60,   65,   70,   75,   80,   85,   90,   95,  100,
                                                                   105,  110,  116,  121,  126,  131,  136,  141,  146,  151,
                                                                   156,  161,  167,  180,  185,  190,  196,  201,  206,  211,  225.
           0    .uf                      sdm_request_tables_:       55,   60,   65,   70,   75,   80,   85,   90,   95,  100,
                                                                   105,  110,  116,  121,  126,  131,  136,  141,  146,  151,
                                                                   156,  161,  167,  180,  185,  190,  196,  201,  206,  211,  225.
                append_request           sdm_request_tables_:      156.
                apply_request            sdm_request_tables_:      136.
                bcc_request              sdm_request_tables_:      105.
         220    calls                    sdm_request_tables_:       55,   60,   65,   70,   75,   80,   85,   90,   95,  100,
                                                                   105,  110,  116,  121,  126,  131,  136,  141,  146,  151,
                                                                   156,  161,  167,  180,  185,  190,  196,  201,  206,  211,
                                                                   225,
                                         ssu_request_macros:       311,  314.
        1170    call_offset              stack_header:        80.
                cc_request               sdm_request_tables_:      100.
                copy_request             sdm_request_tables_:      151.
                debug_mode               sdm_request_tables_:      167.
         174    debug_requests           sdm_request_tables_:      219.
           1    debug_requests.rc        sdm_request_tables_:      219,  227.
        1174    entry_offset             stack_header:        84.
                fill_request             sdm_request_tables_:       85.
      200000    flags.allow_af           sdm_request_tables_:       50,  175,  219,
                                         ssu_request_macros:        33.
      600000    flags.allow_both         sdm_request_tables_:      116,  196,
                                         ssu_request_macros:        34.
      400000    flags.allow_command      sdm_request_tables_:       50,  167,  175,  219,  225,
                                         ssu_request_macros:        32.
       10000    flags.dont_list          sdm_request_tables_:      167,  225,
                                         ssu_request_macros:        40.
       20000    flags.dont_summarize     sdm_request_tables_:      167,  225,
                                         ssu_request_macros:        39.
       40000    flags.multics_request    ssu_request_macros:        37.
      100000    flags.unimplemented      ssu_request_macros:        36.
        4000    flags.unknown            ssu_request_macros:        42.
                from_request             sdm_request_tables_:      121.
        1304    info                     sdm_request_tables_:       55,   60,   65,   70,   75,   80,   85,   90,   95,  100,
                                                                   105,  110,  116,  121,  126,  131,  136,  141,  146,  151,
                                                                   156,  161,  167,  180,  185,  190,  196,  201,  206,  211,
                                                                   225,
                                         ssu_request_macros:       313,  314.
                in_reply_to_request      sdm_request_tables_:      180.
                list_request             sdm_request_tables_:      196.
                log_request              sdm_request_tables_:      141,  201.
                message_id_request       sdm_request_tables_:      131.
         355    names                    sdm_request_tables_:       55,   60,   65,   70,   75,   80,   85,   90,   95,  100,
                                                                   105,  110,  116,  121,  126,  131,  136,  141,  146,  151,
                                                                   156,  161,  167,  180,  185,  190,  196,  201,  206,  211,
                                                                   225,
                                         ssu_request_macros:       312,  314.
         126    original_requests        sdm_request_tables_:      175.
           7    original_requests.rc     sdm_request_tables_:      175,  213.
                preface_request          sdm_request_tables_:      161.
                print_header_request     sdm_request_tables_:       75,  190.
                print_request            sdm_request_tables_:       70,  185.
                probe                    sdm_request_tables_:      225.
        1171    push_offset              stack_header:        81.
                qedx_request             sdm_request_tables_:       80.
                quit_request             sdm_request_tables_:       60.
                rdm_file_requests_       sdm_request_tables_:      211.
                rdm_mbx_requests_        sdm_request_tables_:      201,  206.
                rdm_msg_requests_        sdm_request_tables_:      185,  190,  196.
                remove_request           sdm_request_tables_:      110.
                reply_to_request         sdm_request_tables_:      126.
        1173    return_no_pop_offset     stack_header:        83.
        1172    return_offset            stack_header:        82.
                save_request             sdm_request_tables_:      146,  206.
                sdm_debug_requests_      sdm_request_tables_:      167,  225.
                sdm_file_requests_       sdm_request_tables_:       90,  156,  161.
                sdm_header_requests_     sdm_request_tables_:       95,  100,  105,  110,  116,  121,  126,  131.
                sdm_mbx_requests_        sdm_request_tables_:       65,  141,  146,  151.
                sdm_misc_requests_       sdm_request_tables_:       55,   60.
                sdm_msg_requests_        sdm_request_tables_:       70,   75,   80,   85,  136.
                sdm_original_requests_   sdm_request_tables_:      180.
                self_identify            sdm_request_tables_:       55.
                send_request             sdm_request_tables_:       65.
          73    stach_header.trace_top_ptr     stack_header:        62.
          66    stack_header.assign_linkage_ptr      stack_header:        59.
          32    stack_header.bar_mode_sp       stack_header:        42.
          36    stack_header.call_op_ptr       stack_header:        44.
          10    stack_header.clr_ptr     stack_header:        27.
           6    stack_header.combined_stat_ptr       stack_header:        25.
           4    stack_header.cpm_data_ptr      stack_header:        24.
          13    stack_header.cpm_enabled       stack_header:        32.
          13    stack_header.cur_lot_size      stack_header:        31.
          64    stack_header.ect_ptr     stack_header:        58.
          46    stack_header.entry_op_ptr      stack_header:        49.
          70    stack_header.heap_header_ptr   stack_header:        60.
          74    stack_header.in_trace    stack_header:        63.
          52    stack_header.isot_ptr    stack_header:        52.
          26    stack_header.lot_ptr     sdm_request_tables_:       55,   60,   65,   70,   75,   80,   85,   90,   95,  100,
                                                                   105,  110,  116,  121,  126,  131,  136,  141,  146,  151,
                                                                   156,  161,  167,  180,  185,  190,  196,  201,  206,  211,
                                                                   225,
                                         stack_header:        39.
          12    stack_header.main_proc_invoked       stack_header:        29.
          12    stack_header.max_lot_size      stack_header:        28.
          20    stack_header.parent_ptr  stack_header:        36.
          34    stack_header.pl1_operators_ptr       stack_header:        43.
          40    stack_header.push_op_ptr       stack_header:        46.
          42    stack_header.return_op_ptr     stack_header:        47.
          44    stack_header.ret_no_pop_op_ptr       stack_header:        48.
          62    stack_header.rnt_ptr     stack_header:        57.
          12    stack_header.run_unit_depth    stack_header:        30.
          54    stack_header.sct_ptr     stack_header:        53.
          30    stack_header.signal_ptr  stack_header:        41.
          22    stack_header.stack_begin_ptr   stack_header:        37.
          24    stack_header.stack_end_ptr     stack_header:        38.
          14    stack_header.system_free_ptr   stack_header:        33.
          60    stack_header.sys_link_info_ptr       stack_header:        56.
          72    stack_header.trace_frames      stack_header:        61.
          50    stack_header.trans_op_tv_ptr   stack_header:        51.
          56    stack_header.unwinder_ptr      stack_header:        54.
          16    stack_header.user_free_ptr     stack_header:        34.
         100    stack_header_end         stack_header:        64.
           0    standard_requests        sdm_request_tables_:       50.
          27    standard_requests.rc     sdm_request_tables_:       50,  169.
                subject_request          sdm_request_tables_:      116.
           0    tables                   sdm_request_tables_:       50,   55,   60,   65,   70,   75,   80,   85,   90,   95,
                                                                   100,  105,  110,  116,  121,  126,  131,  136,  141,  146,
                                                                   151,  156,  161,  167,  175,  180,  185,  190,  196,  201,
                                                                   206,  211,  219,  225,
                                         ssu_request_macros:       310,  314.
                to_request               sdm_request_tables_:       95.
           0    trace_frames.count       stack_header:        69.
           1    trace_frames.top_ptr     stack_header:        70.
         551    tv_offset                stack_header:        75,   80,   81,   82,   83,   84.
                write_request            sdm_request_tables_:       90,  211.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
