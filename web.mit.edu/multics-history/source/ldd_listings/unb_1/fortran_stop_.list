	COMPILATION LISTING OF SEGMENT fortran_stop_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/27/84  0844.5 mst Thu
	    Options: optimize map

        1 /* ******************************************************
        2*   *                                                    *
        3*   * Copyright, (C) Honeywell Limited, 1983             *
        4*   *                                                    *
        5*   * Copyright (c) 1972 by Massachusetts Institute of   *
        6*   * Technology and Honeywell Information Systems, Inc. *
        7*   *                                                    *
        8*   ****************************************************** */
        9 
       10 /* format: style3,^delnl,linecom */
       11 fortran_stop_:
       12      procedure (str);
       13 
       14 /*	This version of fortran_stop_ is intended to replace the installed
       15*	and contains logic agreed upon by members of the fortran user community.
       16*
       17*	August 2, 1972
       18*Modified:
       19*	09 Jul 79, CRD - to add fortran_end entry.
       20*	07 Aug 78, PES - to interface to run unit facility.
       21*	08 Jun 77, DSL - New fortran I/O system interface.
       22*	26 Feb 76, GDC - to interface with fast subsystem.
       23*	12 Sep 73, DSL - to interface with new I/O system.
       24**/
       25 
       26 dcl
       27 	str		char (*);
       28 dcl	ioa_		entry options (variable),
       29 	fortran_io_$stop	entry;
       30 dcl	stop_run		external entry;
       31 dcl	(string, addr)	builtin;
       32 dcl	illegal_return	condition;
       33 
       34 dcl	fast_related_data_$in_fast_or_dfast
       35 			bit (1) aligned ext static;
       36 
       37 dcl	fast_related_data_$terminate_run
       38 			entry variable ext static;
       39 
       40 	call ioa_ ("^/STOP ^a", str);
       41 
       42 	go to common;
       43 
       44 exit:
       45      entry;
       46 	call ioa_ ("^/STOP via call exit");
       47 	go to common;
       48 
       49 
       50 fortran_end:
       51      entry;
       52 
       53 
       54 common:
       55 	call fortran_io_$stop;
       56 
       57 	if fast_related_data_$in_fast_or_dfast
       58 	then call fast_related_data_$terminate_run ();
       59 	else do;
       60 		call stop_run;
       61 		do while ("1"b);
       62 		     signal illegal_return;
       63 		end;
       64 	     end;
       65 
       66      end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/27/84  0838.7  fortran_stop_.pl1                 >spec>online>fort_recompile>fortran_stop_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
fast_related_data_$in_fast_or_dfast
                                000016 external static bit(1)                   dcl 34 ref 57
fast_related_data_$terminate_run
                                000020 external static entry variable           dcl 37 ref 57
fortran_io_$stop                000012 constant        entry                    external dcl 28 ref 54
illegal_return                  000100 stack reference condition                dcl 32 ref 62
ioa_                            000010 constant        entry                    external dcl 28 ref 40 46
stop_run                        000014 constant        entry                    external dcl 30 ref 60
str                                    parameter       char                     unaligned dcl 26 set ref 11 40*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
addr                                                   builtin function         dcl 31
string                                                 builtin function         dcl 31

NAMES DECLARED BY EXPLICIT CONTEXT.
common                          000114 constant        label                    dcl 54 ref 42 47
exit                            000061 constant        entry                    external dcl 44
fortran_end                     000107 constant        entry                    external dcl 50
fortran_stop_                   000022 constant        entry                    external dcl 11

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       252         274     143         262
Length       452     143        22         142     107           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
fortran_stop_                        92 external procedure  is an external procedure.  

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_var            call_ext_out_desc   call_ext_out        return              signal              ext_entry
ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
fortran_io_$stop              ioa_                          stop_run

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
fast_related_data_$in_fast_or_dfast                         fast_related_data_$terminate_run




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000017        40 000035        42 000057        44 000060        46 000066        47 000105        50 000106
     54 000114        57 000121        60 000131        61 000135        62 000136        63 000141        66 000142


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
