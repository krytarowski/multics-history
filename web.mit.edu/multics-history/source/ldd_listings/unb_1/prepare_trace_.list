	COMPILATION LISTING OF SEGMENT prepare_trace_
	Compiled by: Multics PL/I Compiler, Release 33e, of October 6, 1992
	Compiled at: CGI                             
	Compiled on: 2000-04-18_1117.01_Tue_mdt
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1987                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1986 *
        6*        *                                                         *
        7*        *********************************************************** */
        8 
        9 /****^  HISTORY COMMENTS:
       10*  1) change(86-11-04,Flegel), approve(87-07-15,MCR7580),
       11*     audit(87-07-30,RBarstad), install(87-08-07,MR12.1-1075):
       12*     Created.
       13*  2) change(86-11-27,Flegel), approve(86-11-27,MCR7580),
       14*     audit(87-07-30,RBarstad), install(87-08-07,MR12.1-1075):
       15*     Approved.
       16*                                                   END HISTORY COMMENTS */
       17 
       18 /* format: style4,indattr,ifthen,^indcomtxt,thendo,^indproc,^indblkcom,initcol1,declareind8,dclind4,struclvlind3,comcol55 */
       19 prepare_trace_:
       20      proc (p_message_ptr, p_message_len, p_trace_iocb_ptr, p_minor);
       21 
       22 /* : PROGRAM FUNCTION
       23*
       24*Prepare the trace message to be sent.
       25**/
       26 
       27 /* : NOTES
       28**/
       29 
       30 /* INPUT PARAMETERS */
       31 dcl p_message_len	       fixed bin parameter;	    /* Length of message */
       32 dcl p_message_ptr	       ptr;		    /* Message */
       33 dcl p_trace_iocb_ptr       ptr;		    /* Trace IOCB */
       34 dcl p_minor	       fixed bin parameter;	    /* Destination minor */
       35 
       36 
       37 /* OUTPUT PARAMETERS */
       38 
       39 
       40 /* MISC VARIABLES */
       41 
       42 
       43 /* STRUCTURES */
       44 
       45 /* First 2 fields in all messages */
       46 dcl 01 message_overlay     based (p_message_ptr),
       47        02 system	       char (1) unal,
       48        02 major	       char (1) unal;
       49 
       50 /* SYSTEM CALLS */
       51 
       52 
       53 /* SYSTEM CALL SUPPORT */
       54 
       55 
       56 /* EXTERNAL CALLS */
       57 dcl trace_message_	       entry (ptr, ptr);
       58 
       59 
       60 /* EXTERNAL CALL SUPPORT */
       61 
       62 
       63 /* BUILTINS */
       64 dcl addr		       builtin;
       65 dcl rank		       builtin;
       66 dcl substr	       builtin;
       67 
       68 /* CONDITIONS */
       69 
       70 
       71 /* CONSTANTS */
       72 
       73 
       74 /**/
       75 /* INITIALIZATION */
       76 
       77 
       78 /* MAIN */
       79 	trace_message_info.dest_system = rank (message_overlay.system);
       80 	trace_message_info.dest_major = rank (message_overlay.major);
       81 	trace_message_info.msg_type =
       82 	     rank (p_message_ptr -> event_message.header.msg_type);
       83 	trace_message_info.direction = RECEIVE;
       84 
       85 	if rank (p_message_ptr -> event_message.header.msg_type)
       86 	     = MORE then do;
       87 
       88 	     trace_message_info.from_system =
       89 		rank (p_message_ptr
       90 		-> request_more_message.header.source_system);
       91 	     trace_message_info.from_major =
       92 		rank (p_message_ptr
       93 		-> request_more_message.header.source_major);
       94 	     trace_message_info.dest_minor = p_minor;
       95 	     trace_message_info.message =
       96 		p_message_ptr -> request_more_message.header.source_minor;
       97 	     call trace_message_ (p_trace_iocb_ptr,
       98 		addr (trace_message_info));
       99 	end;
      100 
      101 	else if rank (p_message_ptr -> event_message.header.msg_type)
      102 	     = CONTINUE then do;
      103 
      104 	     trace_message_info.from_system =
      105 		rank (p_message_ptr
      106 		-> more_remaining_message.header.source_system);
      107 	     trace_message_info.from_major =
      108 		rank (p_message_ptr
      109 		-> more_remaining_message.header.source_major);
      110 	     trace_message_info.dest_minor =
      111 		rank (p_message_ptr
      112 		-> more_remaining_message.header.minor);
      113 	     trace_message_info.message =
      114 		substr (p_message_ptr
      115 		-> more_remaining_message.data.data_buf, 1,
      116 		p_message_len - 6);
      117 	     call trace_message_ (p_trace_iocb_ptr,
      118 		addr (trace_message_info));
      119 	end;
      120 
      121 	else do;
      122 	     trace_message_info.from_system =
      123 		rank (p_message_ptr
      124 		-> last_message.header.source_system);
      125 	     trace_message_info.from_major =
      126 		rank (p_message_ptr -> last_message.header.source_major);
      127 	     trace_message_info.dest_minor =
      128 		rank (p_message_ptr -> last_message.header.minor);
      129 	     trace_message_info.message =
      130 		substr (p_message_ptr
      131 		-> last_message.data.data_buf, 1, p_message_len - 5);
      132 	     trace_message_info.msg_type = LAST;
      133 	     call trace_message_ (p_trace_iocb_ptr,
      134 		addr (trace_message_info));
      135 	end;
      136 
      137 
      138 /* INCLUDE FILES */
  1     1 /*  BEGIN INCLUDE FILE:	mowse.incl.pl1			  *  *  *  *  *  *  *  *  *  *  *  *  */
  1     2 
  1     3 /****^  HISTORY COMMENTS:
  1     4*  1) change(86-09-17,Flegel), approve(86-12-16,MCR7580),
  1     5*     audit(86-12-15,Gilcrease), install(87-01-06,MR12.0-1255):
  1     6*     Created.
  1     7*  2) change(86-10-03,Flegel), approve(86-12-16,MCR7580),
  1     8*     audit(86-12-15,Gilcrease), install(87-01-06,MR12.0-1255):
  1     9*     Combined mowse_minor_caps.incl.pl1 and
  1    10*     mowse.incl.pl1 so that programmer only needs include mowse.incl.pl1
  1    11*  3) change(86-11-27,Flegel), approve(86-11-27,MCR7580),
  1    12*     audit(86-12-15,Gilcrease), install(87-01-06,MR12.0-1255):
  1    13*     Approved.
  1    14*  4) change(87-07-31,Flegel), approve(87-07-31,MCR7580),
  1    15*     audit(87-07-31,RBarstad), install(87-08-07,MR12.1-1075):
  1    16*     Changes to support async call channels.
  1    17*                                                   END HISTORY COMMENTS */
  1    18 
  1    19 /* Name of MOWSE temp seg for data */
  1    20 
  1    21 /* format: style4,indattr,ifthen,^indcomtxt,thendo,^indproc,^indblkcom,initcol1,declareind8,dclind4,struclvlind3,comcol55 */
  1    22 dcl temp_seg_name	       char (6) init ("MOWSE_");
  1    23 
  1    24 /* Version number */
  1    25 
  1    26 dcl MOWSE_VERSION_	       char (8) int static options (constant) init ("version1");
  1    27 
  1    28 /* System identification */
  1    29 
  1    30 dcl LOCAL_SYSTEM	       fixed bin int static options (constant) init (32);
  1    31 dcl REMOTE_SYSTEM	       fixed bin int static options (constant) init (33);
  1    32 
  1    33 /* Status request return codes */
  1    34 
  1    35 dcl STATUS_SUCCESS	       fixed bin (8) int static options (constant)
  1    36 		       init (32);
  1    37 dcl STATUS_FAILED	       fixed bin (8) int static options (constant)
  1    38 		       init (33);
  1    39 
  1    40 /* Input/output capability buffer size limits */
  1    41 
  1    42 dcl MINIMUM_BUFFER_SIZE    fixed bin int static options (constant) init (128);
  1    43 dcl MAXIMUM_BUFFER_SIZE    fixed bin int static options (constant) init (65536);
  1    44 dcl MAXIMUM_BG_SIZE	       fixed bin int static options (constant) init (512);
  1    45 
  1    46 /* Packet size (communication) constants */
  1    47 
  1    48 dcl PACKET_SIZE	       fixed bin int static options (constant) init (124);
  1    49 dcl MAXIMUM_PACKET_SIZE    fixed bin int static options (constant) init (118);
  1    50 
  1    51 /* Query message constants */
  1    52 
  1    53 dcl SEND_QUERY	       fixed bin int static options (constant) init (128);
  1    54 dcl ACCEPT	       fixed bin int static options (constant) init (32);
  1    55 dcl REJECT	       fixed bin int static options (constant) init (33);
  1    56 
  1    57 /* Trace information constants */
  1    58 
  1    59 dcl RECEIVE	       fixed bin int static options (constant) init (1);
  1    60 dcl SEND		       fixed bin int static options (constant) init (0);
  1    61 
  1    62 /* Limits on dedicated minor capabilities */
  1    63 
  1    64 dcl MINIMUM_SYSTEM_MINOR   fixed bin int static options (constant) init (32);
  1    65 dcl MAXIMUM_SYSTEM_MINOR   fixed bin int static options (constant) init (63);
  1    66 dcl MINIMUM_USER_MINOR     fixed bin int static options (constant) init (64);
  1    67 dcl MAXIMUM_USER_MINOR     fixed bin int static options (constant) init (127);
  1    68 
  1    69 /* Dedicated Minor Capabilities */
  1    70 
  1    71 dcl LAST		       fixed bin int static options (constant) init (0);
  1    72 dcl EXECUTE_COMMAND_REPLY  fixed bin int static options (constant) init (32);
  1    73 dcl EXECUTE_CAPABILITY_REPLY
  1    74 		       fixed bin int static options (constant) init (33);
  1    75 dcl FAIL_CAPABILITY	       fixed bin int static options (constant) init (33);
  1    76 dcl INTERNAL	       fixed bin int static options (constant) init (32);
  1    77 dcl EXECUTE_COMMAND	       fixed bin int static options (constant) init (34);
  1    78 dcl ADD_TO_REMOTE_CAT      fixed bin int static options (constant) init (35);
  1    79 dcl DELETE_FROM_REMOTE_CAT fixed bin int static options (constant) init (36);
  1    80 dcl SUSPEND_APPLICATION    fixed bin int static options (constant) init (37);
  1    81 dcl RESUME_APPLICATION     fixed bin int static options (constant) init (38);
  1    82 dcl TERMINATE_APPLICATION  fixed bin int static options (constant) init (39);
  1    83 dcl RESET_APPLICATION      fixed bin int static options (constant) init (40);
  1    84 dcl RESET_REPLY	       fixed bin int static options (constant) init (41);
  1    85 dcl WAKE_UP	       fixed bin int static options (constant) init (42);
  1    86 dcl STATUS	       fixed bin int static options (constant) init (43);
  1    87 dcl OVERFLOWED_BUFFER      fixed bin int static options (constant) init (44);
  1    88 dcl SYSTEM_ERROR	       fixed bin int static options (constant) init (45);
  1    89 dcl QUERY_REPLY	       fixed bin int static options (constant) init (46);
  1    90 dcl RESPONSE_CONNECT       fixed bin int static options (constant) init (47);
  1    91 dcl RESPONSE_DISCONNECT    fixed bin int static options (constant) init (48);
  1    92 dcl REQUEST_CONNECT	       fixed bin int static options (constant) init (49);
  1    93 dcl REQUEST_DISCONNECT     fixed bin int static options (constant) init (50);
  1    94 dcl CONTINUE	       fixed bin int static options (constant) init (51);
  1    95 dcl MORE		       fixed bin int static options (constant) init (52);
  1    96 dcl SET_SLEEP_FLAG	       fixed bin int static options (constant) init (53);
  1    97 dcl RESET_SLEEP_FLAG       fixed bin int static options (constant) init (54);
  1    98 dcl SET_SUSPEND	       fixed bin int static options (constant) init (55);
  1    99 dcl RESET_SUSPEND	       fixed bin int static options (constant) init (56);
  1   100 dcl STATUS_REPLY	       fixed bin int static options (constant) init (57);
  1   101 
  1   102 /* Foreground */
  1   103 
  1   104 dcl FG_CONTROL_MESSAGE     fixed bin int static options (constant) init (33);
  1   105 dcl FG_BREAK	       fixed bin int static options (constant) init (34);
  1   106 dcl FG_TERMINAL_DATA       fixed bin int static options (constant) init (35);
  1   107 dcl FG_MORE_DATA	       fixed bin int static options (constant) init (36);
  1   108 dcl PUT_TO_BACKGROUND_BUFFER
  1   109 		       fixed bin int static options (constant) init (37);
  1   110 dcl PUT_TO_QUERY_MESSAGE_BUFFER
  1   111 		       fixed bin int static options (constant) init (38);
  1   112 
  1   113 /*  END INCLUDE FILE:	mowse.incl.pl1			  *  *  *  *  *  *  *  *  *  *  *  *  */
      139 
  2     1 /*  BEGIN INCLUDE FILE:	mowse_messages.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  */
  2     2 
  2     3 /****^  HISTORY COMMENTS:
  2     4*  1) change(86-05-17,Smith), approve(86-12-16,MCR7580),
  2     5*     audit(86-12-15,Gilcrease), install(87-01-06,MR12.0-1255):
  2     6*     Created to define MOWSE message formats.
  2     7*  2) change(86-11-27,Flegel), approve(86-11-27,MCR7580),
  2     8*     audit(86-12-15,Gilcrease), install(87-01-06,MR12.0-1255):
  2     9*     Approved.
  2    10*  3) change(87-07-31,Flegel), approve(87-07-31,MCR7580),
  2    11*     audit(87-07-31,RBarstad), install(87-08-07,MR12.1-1075):
  2    12*     Changes to support async call channels.
  2    13*                                                   END HISTORY COMMENTS */
  2    14 
  2    15 /* Message Channels */
  2    16 /* format: style4,indattr,ifthen,^indcomtxt,thendo,^indproc,^indblkcom,initcol1,declareind8,dclind4,struclvlind3,comcol55 */
  2    17 dcl BG		       fixed bin int static options (constant) init (0);
  2    18 					    /* Fore ground */
  2    19 dcl FG		       fixed bin int static options (constant) init (1);
  2    20 					    /* Back ground */
  2    21 
  2    22 /* Message types: 
  2    23*
  2    24*Each intersystem message is labelled with one of the following types.  Upon
  2    25*reciept of the message suitable action is undertaken.  This scheme was
  2    26*introduced to allow the transmission of messsages longer than the maximum
  2    27*packet size.
  2    28**/
  2    29 
  2    30 /* Templates for the various messages used throughout the mowse environment.
  2    31*   Non-allocatable */
  2    32 
  2    33 dcl message_len	       fixed bin init (6);
  2    34 dcl message_ptr	       ptr;
  2    35 
  2    36 /* expected format of message */
  2    37 
  2    38 dcl 01 input_message       based (message_ptr),
  2    39        02 header,
  2    40 	03 system	       char (1) unal,
  2    41 	03 major	       char (1) unal,
  2    42 	03 minor	       char (1) unal,
  2    43 	03 source_system char (1) unal,
  2    44 	03 source_major  char (1) unal,
  2    45        02 data	       char (message_len - 5) unal;
  2    46 
  2    47 /* expected format of message to be handled by mowse internal execute command */
  2    48 
  2    49 dcl 01 execom_message      based (message_ptr),
  2    50        02 header,
  2    51 	03 system	       char (1) unal,
  2    52 	03 major	       char (1) unal,
  2    53 	03 minor	       char (1) unal,
  2    54 	03 source_system char (1) unal,
  2    55 	03 source_major  char (1) unal,
  2    56        02 data,
  2    57 	03 cmd_id	       fixed bin (17) unal,
  2    58 	03 command       char (message_len - 7) unal;
  2    59 
  2    60 /* expected format of message recieved when a request to alter a CAT table
  2    61*   is made by a remote system */
  2    62 
  2    63 dcl 01 alter_cat_message   based (message_ptr),
  2    64        02 header,
  2    65 	03 system	       char (1) unal,
  2    66 	03 major	       char (1) unal,
  2    67 	03 minor	       char (1) unal,
  2    68 	03 source_system char (1) unal,
  2    69 	03 source_major  char (1) unal,
  2    70        02 data,
  2    71 	03 major	       char unal,
  2    72 	03 major_name    char (CAPABILITY_NAME_LENGTH) unal;
  2    73 
  2    74 /* Template used to parse message recieved from some remote system. */
  2    75 
  2    76 dcl 01 event_message       based (message_ptr),
  2    77        02 header,
  2    78 	03 system	       char (1) unal,
  2    79 	03 major	       char (1) unal,
  2    80 	03 msg_type      char (1) unal;
  2    81 
  2    82 /* format of message of MORE type */
  2    83 
  2    84 dcl 01 request_more_message
  2    85 		       based (message_ptr),
  2    86        02 header,
  2    87 	03 system	       char (1) unal,
  2    88 	03 major	       char (1) unal,
  2    89 	03 more	       char (1) unal,
  2    90 	03 source_system char (1) unal,
  2    91 	03 source_major  char (1) unal,
  2    92 	03 source_minor  char (1) unal;
  2    93 
  2    94 /* format of message of CONTINUE type */
  2    95 
  2    96 dcl 01 more_remaining_message
  2    97 		       based (message_ptr),
  2    98        02 header,
  2    99 	03 system	       char (1) unal,
  2   100 	03 major	       char (1) unal,
  2   101 	03 continue      char (1) unal,
  2   102 	03 minor	       char (1) unal,
  2   103 	03 source_system char (1) unal,
  2   104 	03 source_major  char (1) unal,
  2   105        02 data,
  2   106 	03 data_buf      char (message_len - 6) unal;
  2   107 
  2   108 /* format of message of LAST type */
  2   109 
  2   110 dcl 01 last_message	       based (message_ptr),
  2   111        02 header,
  2   112 	03 system	       char (1) unal,
  2   113 	03 major	       char (1) unal,
  2   114 	03 minor	       char (1) unal,
  2   115 	03 source_system char (1) unal,
  2   116 	03 source_major  char (1) unal,
  2   117        02 data,
  2   118 	03 data_buf      char (message_len - 5) unal;
  2   119 
  2   120 /* Execute_command_reply message format */
  2   121 
  2   122 dcl 01 execom_reply_msg    based (message_ptr),
  2   123        02 header,
  2   124 	03 system	       char (1) unal,
  2   125 	03 major	       char (1) unal,
  2   126 	03 minor	       char (1) unal,
  2   127 	03 source_system char (1) unal,
  2   128 	03 source_major  char (1) unal,
  2   129        02 data,
  2   130 	03 cmd_id	       fixed bin unal,
  2   131 	03 status	       char unal;
  2   132 
  2   133 /* Used to manage partial messages destined for any application */
  2   134 
  2   135 dcl msg_node_ptr	       ptr;
  2   136 dcl 01 message_node	       based (msg_node_ptr),
  2   137        02 major	       fixed bin,
  2   138        02 partial_msg_list_ptr
  2   139 		       ptr,
  2   140        02 next_node	       ptr,
  2   141        02 prev_node	       ptr,
  2   142        02 last_part_msg    ptr;
  2   143 
  2   144 dcl part_msg_ptr	       ptr;
  2   145 dcl 01 partial_message     based (part_msg_ptr),
  2   146        02 msg_ptr	       ptr,
  2   147        02 msg_len	       fixed bin,
  2   148        02 next_msg	       ptr;
  2   149 
  2   150 
  2   151 dcl part_msg_length	       fixed bin;
  2   152 dcl part_msg	       char (part_msg_length) based;
  2   153 
  2   154 /* Trace information structure */
  2   155 dcl 01 trace_message_info,
  2   156        02 direction	       fixed bin,
  2   157        02 from_system      fixed bin,
  2   158        02 from_major       fixed bin,
  2   159        02 dest_system      fixed bin,
  2   160        02 dest_major       fixed bin,
  2   161        02 dest_minor       fixed bin,
  2   162        02 msg_type	       fixed bin,
  2   163        02 message	       char (PACKET_SIZE) var;
  2   164 
  2   165 /*  END INCLUDE FILE:	mowse_messages.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  */
      140 
      141 
      142      end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    04/18/00  1117.0  prepare_trace_.pl1                >udd>sm>ds>w>ml>prepare_trace_.pl1
139          1    08/10/87  1436.7  mowse.incl.pl1                    >ldd>incl>mowse.incl.pl1
140          2    08/10/87  1435.9  mowse_messages.incl.pl1           >ldd>incl>mowse_messages.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
CONTINUE                               constant        fixed bin(17,0)          initial dcl 1-94 ref 101
LAST                                   constant        fixed bin(17,0)          initial dcl 1-71 ref 132
MORE                                   constant        fixed bin(17,0)          initial dcl 1-95 ref 85
PACKET_SIZE                            internal static fixed bin(17,0)          initial dcl 1-48 ref 2-155
RECEIVE                                constant        fixed bin(17,0)          initial dcl 1-59 ref 83
addr                                                   builtin function         dcl 64 ref 97 97 117 117 133 133
data                      1(18)        based           structure                level 2 in structure "more_remaining_message" packed
                                                                                  packed unaligned dcl 2-96 in procedure
                                                                                  "prepare_trace_"
data                      1(09)        based           structure                level 2 in structure "last_message" packed packed
                                                                                  unaligned dcl 2-110 in procedure "prepare_trace_"
data_buf                  1(18)        based           char                     level 3 in structure "more_remaining_message" packed
                                                                                  packed unaligned dcl 2-96 in procedure
                                                                                  "prepare_trace_" ref 113
data_buf                  1(09)        based           char                     level 3 in structure "last_message" packed packed
                                                                                  unaligned dcl 2-110 in procedure "prepare_trace_"
                                                                                  ref 129
dest_major                4     000103 automatic       fixed bin(17,0)          level 2 dcl 2-155 set ref 80*
dest_minor                5     000103 automatic       fixed bin(17,0)          level 2 dcl 2-155 set ref 94* 110* 127*
dest_system               3     000103 automatic       fixed bin(17,0)          level 2 dcl 2-155 set ref 79*
direction                       000103 automatic       fixed bin(17,0)          level 2 dcl 2-155 set ref 83*
event_message                          based           structure                level 1 packed packed unaligned dcl 2-76
from_major                2     000103 automatic       fixed bin(17,0)          level 2 dcl 2-155 set ref 91* 107* 125*
from_system               1     000103 automatic       fixed bin(17,0)          level 2 dcl 2-155 set ref 88* 104* 122*
header                                 based           structure                level 2 in structure "more_remaining_message" packed
                                                                                  packed unaligned dcl 2-96 in procedure
                                                                                  "prepare_trace_"
header                                 based           structure                level 2 in structure "last_message" packed packed
                                                                                  unaligned dcl 2-110 in procedure "prepare_trace_"
header                                 based           structure                level 2 in structure "request_more_message" packed
                                                                                  packed unaligned dcl 2-84 in procedure
                                                                                  "prepare_trace_"
header                                 based           structure                level 2 in structure "event_message" packed packed
                                                                                  unaligned dcl 2-76 in procedure "prepare_trace_"
last_message                           based           structure                level 1 packed packed unaligned dcl 2-110
major                     0(09)        based           char(1)                  level 2 packed packed unaligned dcl 46 ref 80
message                   7     000103 automatic       varying char(124)        level 2 dcl 2-155 set ref 95* 113* 129*
message_len                     000102 automatic       fixed bin(17,0)          initial dcl 2-33 set ref 113 129 2-33*
message_overlay                        based           structure                level 1 packed packed unaligned dcl 46
minor                     0(18)        based           char(1)                  level 3 in structure "last_message" packed packed
                                                                                  unaligned dcl 2-110 in procedure "prepare_trace_"
                                                                                  ref 127
minor                     0(27)        based           char(1)                  level 3 in structure "more_remaining_message" packed
                                                                                  packed unaligned dcl 2-96 in procedure
                                                                                  "prepare_trace_" ref 110
more_remaining_message                 based           structure                level 1 packed packed unaligned dcl 2-96
msg_type                  6     000103 automatic       fixed bin(17,0)          level 2 in structure "trace_message_info" dcl 2-155
                                                                                  in procedure "prepare_trace_" set ref 81* 132*
msg_type                  0(18)        based           char(1)                  level 3 in structure "event_message" packed packed
                                                                                  unaligned dcl 2-76 in procedure "prepare_trace_"
                                                                                  ref 81 85 101
p_message_len                          parameter       fixed bin(17,0)          dcl 31 ref 19 113 129
p_message_ptr                          parameter       pointer                  dcl 32 ref 19 79 80 81 85 88 91 95 101 104 107 110
                                                                                  113 122 125 127 129
p_minor                                parameter       fixed bin(17,0)          dcl 34 ref 19 94
p_trace_iocb_ptr                       parameter       pointer                  dcl 33 set ref 19 97* 117* 133*
rank                                                   builtin function         dcl 65 ref 79 80 81 85 88 91 101 104 107 110 122 125
                                                                                  127
request_more_message                   based           structure                level 1 packed packed unaligned dcl 2-84
source_major              1(09)        based           char(1)                  level 3 in structure "more_remaining_message" packed
                                                                                  packed unaligned dcl 2-96 in procedure
                                                                                  "prepare_trace_" ref 107
source_major              1            based           char(1)                  level 3 in structure "last_message" packed packed
                                                                                  unaligned dcl 2-110 in procedure "prepare_trace_"
                                                                                  ref 125
source_major              1            based           char(1)                  level 3 in structure "request_more_message" packed
                                                                                  packed unaligned dcl 2-84 in procedure
                                                                                  "prepare_trace_" ref 91
source_minor              1(09)        based           char(1)                  level 3 packed packed unaligned dcl 2-84 ref 95
source_system             0(27)        based           char(1)                  level 3 in structure "request_more_message" packed
                                                                                  packed unaligned dcl 2-84 in procedure
                                                                                  "prepare_trace_" ref 88
source_system             1            based           char(1)                  level 3 in structure "more_remaining_message" packed
                                                                                  packed unaligned dcl 2-96 in procedure
                                                                                  "prepare_trace_" ref 104
source_system             0(27)        based           char(1)                  level 3 in structure "last_message" packed packed
                                                                                  unaligned dcl 2-110 in procedure "prepare_trace_"
                                                                                  ref 122
substr                                                 builtin function         dcl 66 ref 113 129
system                                 based           char(1)                  level 2 packed packed unaligned dcl 46 ref 79
temp_seg_name                   000100 automatic       char(6)                  initial packed unaligned dcl 1-22 set ref 1-22*
trace_message_                  000010 constant        entry                    external dcl 57 ref 97 117 133
trace_message_info              000103 automatic       structure                level 1 unaligned dcl 2-155 set ref 97 97 117 117
                                                                                  133 133

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
ACCEPT                                 internal static fixed bin(17,0)          initial dcl 1-54
ADD_TO_REMOTE_CAT                      internal static fixed bin(17,0)          initial dcl 1-78
BG                                     internal static fixed bin(17,0)          initial dcl 2-17
DELETE_FROM_REMOTE_CAT                 internal static fixed bin(17,0)          initial dcl 1-79
EXECUTE_CAPABILITY_REPLY               internal static fixed bin(17,0)          initial dcl 1-73
EXECUTE_COMMAND                        internal static fixed bin(17,0)          initial dcl 1-77
EXECUTE_COMMAND_REPLY                  internal static fixed bin(17,0)          initial dcl 1-72
FAIL_CAPABILITY                        internal static fixed bin(17,0)          initial dcl 1-75
FG                                     internal static fixed bin(17,0)          initial dcl 2-19
FG_BREAK                               internal static fixed bin(17,0)          initial dcl 1-105
FG_CONTROL_MESSAGE                     internal static fixed bin(17,0)          initial dcl 1-104
FG_MORE_DATA                           internal static fixed bin(17,0)          initial dcl 1-107
FG_TERMINAL_DATA                       internal static fixed bin(17,0)          initial dcl 1-106
INTERNAL                               internal static fixed bin(17,0)          initial dcl 1-76
LOCAL_SYSTEM                           internal static fixed bin(17,0)          initial dcl 1-30
MAXIMUM_BG_SIZE                        internal static fixed bin(17,0)          initial dcl 1-44
MAXIMUM_BUFFER_SIZE                    internal static fixed bin(17,0)          initial dcl 1-43
MAXIMUM_PACKET_SIZE                    internal static fixed bin(17,0)          initial dcl 1-49
MAXIMUM_SYSTEM_MINOR                   internal static fixed bin(17,0)          initial dcl 1-65
MAXIMUM_USER_MINOR                     internal static fixed bin(17,0)          initial dcl 1-67
MINIMUM_BUFFER_SIZE                    internal static fixed bin(17,0)          initial dcl 1-42
MINIMUM_SYSTEM_MINOR                   internal static fixed bin(17,0)          initial dcl 1-64
MINIMUM_USER_MINOR                     internal static fixed bin(17,0)          initial dcl 1-66
MOWSE_VERSION_                         internal static char(8)                  initial packed unaligned dcl 1-26
OVERFLOWED_BUFFER                      internal static fixed bin(17,0)          initial dcl 1-87
PUT_TO_BACKGROUND_BUFFER               internal static fixed bin(17,0)          initial dcl 1-108
PUT_TO_QUERY_MESSAGE_BUFFER            internal static fixed bin(17,0)          initial dcl 1-110
QUERY_REPLY                            internal static fixed bin(17,0)          initial dcl 1-89
REJECT                                 internal static fixed bin(17,0)          initial dcl 1-55
REMOTE_SYSTEM                          internal static fixed bin(17,0)          initial dcl 1-31
REQUEST_CONNECT                        internal static fixed bin(17,0)          initial dcl 1-92
REQUEST_DISCONNECT                     internal static fixed bin(17,0)          initial dcl 1-93
RESET_APPLICATION                      internal static fixed bin(17,0)          initial dcl 1-83
RESET_REPLY                            internal static fixed bin(17,0)          initial dcl 1-84
RESET_SLEEP_FLAG                       internal static fixed bin(17,0)          initial dcl 1-97
RESET_SUSPEND                          internal static fixed bin(17,0)          initial dcl 1-99
RESPONSE_CONNECT                       internal static fixed bin(17,0)          initial dcl 1-90
RESPONSE_DISCONNECT                    internal static fixed bin(17,0)          initial dcl 1-91
RESUME_APPLICATION                     internal static fixed bin(17,0)          initial dcl 1-81
SEND                                   internal static fixed bin(17,0)          initial dcl 1-60
SEND_QUERY                             internal static fixed bin(17,0)          initial dcl 1-53
SET_SLEEP_FLAG                         internal static fixed bin(17,0)          initial dcl 1-96
SET_SUSPEND                            internal static fixed bin(17,0)          initial dcl 1-98
STATUS                                 internal static fixed bin(17,0)          initial dcl 1-86
STATUS_FAILED                          internal static fixed bin(8,0)           initial dcl 1-37
STATUS_REPLY                           internal static fixed bin(17,0)          initial dcl 1-100
STATUS_SUCCESS                         internal static fixed bin(8,0)           initial dcl 1-35
SUSPEND_APPLICATION                    internal static fixed bin(17,0)          initial dcl 1-80
SYSTEM_ERROR                           internal static fixed bin(17,0)          initial dcl 1-88
TERMINATE_APPLICATION                  internal static fixed bin(17,0)          initial dcl 1-82
WAKE_UP                                internal static fixed bin(17,0)          initial dcl 1-85
alter_cat_message                      based           structure                level 1 packed packed unaligned dcl 2-63
execom_message                         based           structure                level 1 packed packed unaligned dcl 2-49
execom_reply_msg                       based           structure                level 1 packed packed unaligned dcl 2-122
input_message                          based           structure                level 1 packed packed unaligned dcl 2-38
message_node                           based           structure                level 1 unaligned dcl 2-136
message_ptr                            automatic       pointer                  dcl 2-34
msg_node_ptr                           automatic       pointer                  dcl 2-135
part_msg                               based           char                     packed unaligned dcl 2-152
part_msg_length                        automatic       fixed bin(17,0)          dcl 2-151
part_msg_ptr                           automatic       pointer                  dcl 2-144
partial_message                        based           structure                level 1 unaligned dcl 2-145

NAME DECLARED BY EXPLICIT CONTEXT.
prepare_trace_                  000011 constant        entry                    external dcl 19

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       254         266     217         264
Length       460     217        12         155      34           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
prepare_trace_                      116 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
prepare_trace_           000100 temp_seg_name               prepare_trace_
                         000102 message_len                 prepare_trace_
                         000103 trace_message_info          prepare_trace_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
trace_message_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     19 000004    1   22 000016    2   33 000020        79 000022        80 000032        81 000037        83 000044
     85 000046        88 000051        91 000056        94 000063        95 000065        97 000072        99 000104
    101 000105       104 000107       107 000114       110 000121       113 000126       117 000137       119 000151
    122 000152       125 000157       127 000164       129 000171       132 000202       133 000204       142 000216


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
