	COMPILATION LISTING OF SEGMENT fatal_mowse_trap_
	Compiled by: Multics PL/I Compiler, Release 29, of July 28, 1986
	Compiled at: Honeywell Bull, Phx. Az., Sys-M 
	Compiled on: 08/07/87  1507.5 mst Fri
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1987                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1986 *
        6*        *                                                         *
        7*        *********************************************************** */
        8 
        9 /****^  HISTORY COMMENTS:
       10*  1) change(86-12-10,Flegel), approve(87-07-15,MCR7580),
       11*     audit(87-07-30,RBarstad), install(87-08-07,MR12.1-1075):
       12*     Created.
       13*                                                   END HISTORY COMMENTS */
       14 
       15 /* format: style4,indattr,ifthen,^indcomtxt,thendo,^indproc,^indblkcom,initcol1,declareind8,dclind4,struclvlind3,comcol55 */
       16 fatal_mowse_trap_:
       17      proc (p_code);
       18 
       19 /* : PROGRAM FUNCTION
       20*
       21*Perform the necessary functions when a bizzarre condition error has occurred
       22*within MOWSE itself.  Such conditions are invalid message formats, etc.
       23**/
       24 
       25 /* : NOTES
       26*
       27*This version prints out a message asking the user to perform certain functions
       28*and then submitting the results to the maintaining personell.
       29**/
       30 
       31 
       32 /* INPUT PARAMETERS */
       33 dcl p_code	       fixed bin (35);	    /* Code at time of error */
       34 
       35 /* OUTPUT PARAMETERS */
       36 
       37 /* MISC VARIABLES */
       38 dcl short_info	       char (8) aligned;
       39 dcl long_info	       char (100) aligned;
       40 
       41 /* SYSTEM CALLS */
       42 dcl com_err_$convert_status_code_
       43 		       entry (fixed bin (35), char (8) aligned,
       44 		       char (100) aligned);
       45 dcl ioa_$ioa_switch	       entry () options (variable);
       46 dcl cu_$cl	       entry (1 aligned, 2 bit (1) unal, 2 bit (35) unal);
       47 
       48 /* SYSTEM CALL SUPPORT */
       49 dcl iox_$error_output      ptr ext static;
       50 
       51 /* CONDITIONS */
       52 
       53 /* STRUCTURES */
       54 dcl 01 flags	       aligned,
       55        02 reset_sw	       bit (1) unal,
       56        02 mbz	       bit (35) unal;
       57 
       58 /**/
       59 
       60 /* INITIALIZATION */
       61 
       62 	flags.reset_sw = "0"b;
       63 
       64 /* MAIN */
       65 
       66 	call com_err_$convert_status_code_ (p_code, short_info, long_info);
       67 	call ioa_$ioa_switch (iox_$error_output,
       68 	     "MOWSE: ^a^/^a^/^a^/^5t^a^/",
       69 	     long_info,
       70 	     "An abnormal condition has occurred within MOWSE.  Please execute the",
       71 	     "following command and submit the results to maintenance:",
       72 	     """fo mowse_error.info; trace_stack -long; ro""");
       73 
       74 	call cu_$cl (flags);
       75 
       76 /* INCLUDE FILES */
       77 
       78 /* : END */
       79      end fatal_mowse_trap_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    08/07/87  1454.9  fatal_mowse_trap_.pl1             >special_ldd>install>MR12.1-1075>fatal_mowse_trap_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
com_err_$convert_status_code_   000010 constant        entry                    external dcl 42 ref 66
cu_$cl                          000014 constant        entry                    external dcl 46 ref 74
flags                           000133 automatic       structure                level 1 dcl 54 set ref 74*
ioa_$ioa_switch                 000012 constant        entry                    external dcl 45 ref 67
iox_$error_output               000016 external static pointer                  dcl 49 set ref 67*
long_info                       000102 automatic       char(100)                dcl 39 set ref 66* 67*
p_code                                 parameter       fixed bin(35,0)          dcl 33 set ref 16 66*
reset_sw                        000133 automatic       bit(1)                   level 2 packed unaligned dcl 54 set ref 62*
short_info                      000100 automatic       char(8)                  dcl 38 set ref 66*

NAME DECLARED BY EXPLICIT CONTEXT.
fatal_mowse_trap_               000073 constant        entry                    external dcl 16

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       270         310     177         300
Length       466     177        20         141      70           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
fatal_mowse_trap_                   170 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
fatal_mowse_trap_        000100 short_info                  fatal_mowse_trap_
                         000102 long_info                   fatal_mowse_trap_
                         000133 flags                       fatal_mowse_trap_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_$convert_status_code_ cu_$cl                        ioa_$ioa_switch

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
iox_$error_output




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     16 000070        62 000100        66 000102        67 000115        74 000166        79 000175


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
