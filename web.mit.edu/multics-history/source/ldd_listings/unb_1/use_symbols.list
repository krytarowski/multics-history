	COMPILATION LISTING OF SEGMENT use_symbols
	Compiled by: Multics PL/I Compiler, Release 26a, of September 3, 1980
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 01/06/81  1250.8 mst Tue
	    Options: optimize map

        1 /* ******************************************************
        2*   *                                                    *
        3*   *                                                    *
        4*   *    Copyright, (C) Honeywell Information Systems    *
        5*   *    Inc., 1980.                                     *
        6*   *                                                    *
        7*   *                                                    *
        8*   ****************************************************** */
        9 
       10 use_symbols: usb: procedure;
       11 
       12 /*	This procedure implments the use_symbols command.
       13*   *	Created on 10/13/75 by Bill Silver as use_notescript.
       14*   *	Changed on 06/10/77 by Bill Silver to use_symbols.
       15*   *      Changed on 10/28/80 by Paul Benjamin for special suffixing.
       16*   *
       17*   *	The use_symbols (usb) command will establish the specified segment
       18*   *	as the current Speedtypesymbol dictionary.  Its calling sequence is:
       19*   *
       20*   *	     use_symbols, usb  path
       21**/
       22 dcl  dir_name char (168);				/* Directory of new symbol dictionary. */
       23 dcl  ent_name char (32);				/* Entry name of new symbol dictionary. */
       24 
       25 dcl  ecode fixed bin (35);				/* Error table code. */
       26 dcl  i fixed bin;
       27 dcl  num_args fixed bin;				/* Number of command arguments. */
       28 dcl  path_len fixed bin;				/* Length of pathanme argument. */
       29 
       30 dcl  path_ptr ptr;					/* Pointer to pathname argument. */
       31 
       32 dcl  pathname_arg char (path_len) based (path_ptr);
       33 
       34 dcl (addr, index, substr) builtin;
       35 
       36 dcl  error_table_$no_w_permission fixed bin(35) ext static;
       37 dcl  error_table_$wrong_no_of_args fixed bin (35) external;
       38 
       39 dcl  com_err_ entry options (variable);
       40 dcl  cu_$arg_count entry (fixed bin);
       41 dcl  cu_$arg_ptr entry (fixed bin, ptr, fixed bin, fixed bin (35));
       42 dcl  expand_path_ entry (ptr, fixed bin, ptr, ptr, fixed bin (35));
       43 dcl  speedtype_info_$use entry (char (*), char (*), fixed bin (35));
       44 						/* 	*/
       45 	call cu_$arg_count (num_args);		/* Check the number of arguments. */
       46 	if num_args ^= 1				/* There should be one and only one. */
       47 	then do;					/* Wrong number of args. */
       48 	     ecode = error_table_$wrong_no_of_args;
       49 	     call com_err_ (ecode, "Speedtype", "Usage is:  usb path");
       50 	     return;
       51 	end;
       52 
       53 	call cu_$arg_ptr (1, path_ptr, path_len, ecode);
       54 	if ecode ^= 0
       55 	then do;
       56 	     call com_err_ (ecode, "Speedtype", "Error getting pathname argument");
       57 	     return;
       58 	end;
       59 
       60 	call expand_path_ (path_ptr, path_len, addr (dir_name), addr (ent_name), ecode);
       61 	if ecode ^= 0
       62 	then do;
       63 	     call com_err_ (ecode, "Speedtype", "Error expanding pathname ^a", pathname_arg);
       64 	     return;
       65 	end;
       66 
       67 	i = index (ent_name, ".symbols");
       68 	if i = 0					/* Does entry name already contain suffix? */
       69 	then do;					/* No. */
       70 	     i = index (ent_name, " ") - 1;		/* Look for first blank. */
       71 	     ent_name = substr (ent_name, 1, i) || ".symbols";
       72 	end;
       73 
       74 	call speedtype_info_$use (dir_name, ent_name, ecode);
       75 	if ecode = error_table_$no_w_permission
       76 	     then call com_err_ (ecode, "Speedtype", "Attempting to convert ^a>^a to new version.", dir_name, ent_name);
       77 
       78      end use_symbols;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    01/06/81  1247.7  use_symbols.pl1                   >spec>on>speed>use_symbols.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 34 ref 60 60 60 60
com_err_                        000014 constant        entry                    external dcl 39 ref 49 56 63 75
cu_$arg_count                   000016 constant        entry                    external dcl 40 ref 45
cu_$arg_ptr                     000020 constant        entry                    external dcl 41 ref 53
dir_name                        000100 automatic       char(168)                unaligned dcl 22 set ref 60 60 74* 75*
ecode                           000162 automatic       fixed bin(35,0)          dcl 25 set ref 48* 49* 53* 54 56* 60* 61 63* 74* 75
                                                                                  75*
ent_name                        000152 automatic       char(32)                 unaligned dcl 23 set ref 60 60 67 70 71* 71 74* 75*
error_table_$no_w_permission    000010 external static fixed bin(35,0)          dcl 36 ref 75
error_table_$wrong_no_of_args   000012 external static fixed bin(35,0)          dcl 37 ref 48
expand_path_                    000022 constant        entry                    external dcl 42 ref 60
i                               000163 automatic       fixed bin(17,0)          dcl 26 set ref 67* 68 70* 71
index                                                  builtin function         dcl 34 ref 67 70
num_args                        000164 automatic       fixed bin(17,0)          dcl 27 set ref 45* 46
path_len                        000165 automatic       fixed bin(17,0)          dcl 28 set ref 53* 60* 63 63
path_ptr                        000166 automatic       pointer                  dcl 30 set ref 53* 60* 63
pathname_arg                           based           char                     unaligned dcl 32 set ref 63*
speedtype_info_$use             000024 constant        entry                    external dcl 43 ref 74
substr                                                 builtin function         dcl 34 ref 71

NAMES DECLARED BY EXPLICIT CONTEXT.
usb                             000057 constant        entry                    external dcl 10
use_symbols                     000066 constant        entry                    external dcl 10

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       534         562     420         544
Length       736     420        26         137     114           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
usb                                 202 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
usb                      000100 dir_name                    usb
                         000152 ent_name                    usb
                         000162 ecode                       usb
                         000163 i                           usb
                         000164 num_args                    usb
                         000165 path_len                    usb
                         000166 path_ptr                    usb

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_cs            call_ext_out_desc   call_ext_out        return              shorten_stack       ext_entry
set_cs_eis          index_cs_eis

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      cu_$arg_count                 cu_$arg_ptr                   expand_path_
speedtype_info_$use

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$no_w_permission  error_table_$wrong_no_of_args




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     10 000056        45 000073        46 000101        48 000104        49 000107        50 000136        53 000137
     54 000156        56 000160        57 000210        60 000211        61 000234        63 000236        64 000275
     67 000276        68 000305        70 000306        71 000316        72 000332        74 000333        75 000354
     78 000417
  

                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
