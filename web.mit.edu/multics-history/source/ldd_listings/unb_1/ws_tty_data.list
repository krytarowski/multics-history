	COMPILATION LISTING OF SEGMENT !BBBJWhZjCGCXxK
	Compiled by: Multics PL/I Compiler, Release 29, of July 28, 1986
	Compiled at: Honeywell Bull, Phx. Az., Sys-M 
	Compiled on: 08/07/87  1510.8 mst Fri
	    Options: table map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1986 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 
        7 /* HISTORY COMMENTS:
        8*  1) change(86-11-17,RBarstad), approve(86-12-11,MCR7585),
        9*     audit(86-12-12,Gilcrease):
       10*     Written. External data seg for ws_tty_.
       11*                                                   END HISTORY COMMENTS */
       12 
       13 ws_tty_data:proc;
       14 
       15 /* Version 1.0
       16**/
       17 
       18 /** Initialize cds_args **/
       19 
       20 	cds_args_ptr=addr(space_for_cds_args);
       21 	unspec(space_for_cds_args)="0"b;
       22 
       23 /** Reference structure input to cds to assure it is in runtime table. **/
       24 
       25 	if addr(ws_tty_data)=null() then ;
       26 
       27 /** No text section **/
       28 	cds_args_ptr -> cds_args.sections (1).p = null ();
       29 	cds_args_ptr -> cds_args.sections (1).len = 0;
       30 	cds_args_ptr -> cds_args.sections (1).struct_name = "NO_TEXT";
       31 
       32 /** Static section **/
       33 	cds_args_ptr -> cds_args.sections (2).p = addr (ws_tty_data);	/* Caller's data. */
       34 	cds_args_ptr -> cds_args.sections (2).len = size (ws_tty_data);	/* No. words in data structure. */
       35 	cds_args_ptr -> cds_args.sections (2).struct_name = "ws_tty_data";
       36 
       37 	cds_args_ptr -> cds_args.seg_name = "ws_tty_data";	/* Entryname of object segment. */
       38 	cds_args_ptr -> cds_args.num_exclude_names = 0;		/* All level 2 names are entry points. */
       39 	cds_args_ptr -> cds_args.exclude_array_ptr = null ();
       40 	cds_args_ptr -> cds_args.switches.defs_in_link = "0"b;	/* Definitions contiguous to text section. */
       41 	cds_args_ptr -> cds_args.switches.separate_static = "0"b;	/* Static in linkage section (to bind). */
       42 	cds_args_ptr -> cds_args.switches.have_text = "0"b;	/* No text section. */
       43 	cds_args_ptr -> cds_args.switches.have_static = "1"b;	/* There is a static section. */
       44 	cds_args_ptr -> cds_args.switches.pad = "0"b;		/* Must be zeroes (see create_data_segment_). */
       45 
       46 	call create_data_segment_ (cds_args_ptr, code);
       47 	if code ^= 0 
       48 	   then 
       49 	      call com_err_ (code, "cds_ws_tty_data");
       50 	   else 
       51 	      call com_err_( 0,"ws_tty_data","Object for ws_tty_data created [^i words].",size(ws_tty_data));
       52 
       53 	return;
       54 
       55 /** Data for cds **/
       56 dcl  addr                     builtin;
       57 dcl  cds_args_ptr             ptr init(null());
       58 dcl  code                     fixed bin(35);
       59 dcl  com_err_                 entry options(variable);
       60 dcl  create_data_segment_     entry(ptr,fixed bin(35));
       61 dcl  null                     builtin;
       62 dcl  size                     builtin;
       63 dcl  unspec                   builtin;
       64 dcl  1 space_for_cds_args     aligned like cds_args;
       65 
       66 /** This data structure must exactly match that of ws_tty_data.incl.pl1 **/
       67 
       68 dcl 1 ws_tty_data		aligned,
       69       2 Flags		aligned,
       70         3 Debug		bit (1) unaligned init ("0"b),
       71         3 Trace		bit (1) unaligned init ("0"b),
       72         3 Pad 		bit (34) unaligned init ((34)"0"b);
       73 
       74 
  1     1 /* BEGIN INCLUDE FILE ws_tty_data */
  1     2 
  1     3 /****^  HISTORY COMMENTS:
  1     4*  1) change(86-12-05,RBarstad), approve(86-12-11,MCR7585),
  1     5*     audit(86-12-12,Gilcrease), install(87-08-07,MR12.1-1075):
  1     6*     ws_tty_ external static
  1     7*                                                   END HISTORY COMMENTS */
  1     8 
  1     9 dcl 1 ws_tty_data$Flags	aligned external static,
  1    10       3 Debug		bit (1) unaligned,
  1    11       3 Trace		bit (1) unaligned,
  1    12       3 Pad 		bit (34) unaligned;
  1    13 
  1    14 /* END INCLUDE FILE ws_tty_data */
       75 
       76 
  2     1 /* BEGIN INCLUDE FILE cds_args.incl.pl1 */
  2     2 
  2     3 dcl 1 cds_args based aligned,
  2     4     2 sections (2),
  2     5       3 p ptr,					/* pointer to data for text/static section */
  2     6       3 len fixed bin (18),				/* size of text/static section */
  2     7       3 struct_name char (32),			/* name of declared structure for this section */
  2     8     2 seg_name char (32),				/* name to create segment by */
  2     9     2 num_exclude_names fixed bin,			/* number of names in exclude array */
  2    10     2 exclude_array_ptr ptr,				/* pointer to array of exclude names */
  2    11     2 switches,					/* control switches */
  2    12       3 defs_in_link bit (1) unal,			/* says put defs in linkage */
  2    13       3 separate_static bit (1) unal,			/* says separate static section is wanted */
  2    14       3 have_text bit (1) unal,			/* ON if text section given */
  2    15       3 have_static bit (1) unal,			/* ON if static section given */
  2    16       3 pad bit (32) unal;
  2    17 
  2    18 dcl  exclude_names (1) char (32) based;			/* pointed to be cds_args.exclude_array_ptr */
  2    19 
  2    20 /* END INCLUDE FILE cds_args.incl.pl1 */
       77 
       78 end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    08/07/87  1510.8  !BBBJWhZjCGCXxK.pl1               >special_ldd>install>MR12.1-1075>ws_tty_data.cds
75           1    08/07/87  1447.9  ws_tty_data.incl.pl1              >special_ldd>install>MR12.1-1075>ws_tty_data.incl.pl1
77           2    04/01/76  2209.5  cds_args.incl.pl1                 >ldd>include>cds_args.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
Debug                           000151 automatic       bit(1)                   initial level 3 packed unaligned dcl 68 set ref 68*
Flags                           000151 automatic       structure                level 2 dcl 68
Pad                       0(02) 000151 automatic       bit(34)                  initial level 3 packed unaligned dcl 68 set ref 68*
Trace                     0(01) 000151 automatic       bit(1)                   initial level 3 packed unaligned dcl 68 set ref 68*
addr                                                   builtin function         dcl 56 ref 20 25 33
cds_args                               based           structure                level 1 dcl 2-3
cds_args_ptr                    000100 automatic       pointer                  initial dcl 57 set ref 20* 28 29 30 33 34 35 37 38
                                                                                  39 40 41 42 43 44 46* 57*
code                            000102 automatic       fixed bin(35,0)          dcl 58 set ref 46* 47 47*
com_err_                        000012 constant        entry                    external dcl 59 ref 47 50
create_data_segment_            000014 constant        entry                    external dcl 60 ref 46
defs_in_link             44            based           bit(1)                   level 3 packed unaligned dcl 2-3 set ref 40*
exclude_array_ptr        42            based           pointer                  level 2 dcl 2-3 set ref 39*
have_static              44(03)        based           bit(1)                   level 3 packed unaligned dcl 2-3 set ref 43*
have_text                44(02)        based           bit(1)                   level 3 packed unaligned dcl 2-3 set ref 42*
len                       2            based           fixed bin(18,0)          array level 3 dcl 2-3 set ref 29* 34*
null                                                   builtin function         dcl 61 ref 25 28 39 57
num_exclude_names        40            based           fixed bin(17,0)          level 2 dcl 2-3 set ref 38*
p                                      based           pointer                  array level 3 dcl 2-3 set ref 28* 33*
pad                      44(04)        based           bit(32)                  level 3 packed unaligned dcl 2-3 set ref 44*
sections                               based           structure                array level 2 dcl 2-3
seg_name                 30            based           char(32)                 level 2 dcl 2-3 set ref 37*
separate_static          44(01)        based           bit(1)                   level 3 packed unaligned dcl 2-3 set ref 41*
size                                                   builtin function         dcl 62 ref 34 50 50
space_for_cds_args              000104 automatic       structure                level 1 dcl 64 set ref 20 21*
struct_name               3            based           char(32)                 array level 3 dcl 2-3 set ref 30* 35*
switches                 44            based           structure                level 2 dcl 2-3
unspec                                                 builtin function         dcl 63 set ref 21*
ws_tty_data                     000151 automatic       structure                level 1 dcl 68 set ref 25 33 34 50 50

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
exclude_names                          based           char(32)                 array unaligned dcl 2-18
ws_tty_data$Flags               000016 external static structure                level 1 dcl 1-9

NAME DECLARED BY EXPLICIT CONTEXT.
ws_tty_data                     000035 constant        entry                    external dcl 13

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       302         322     223         312
Length      1346     223        20        1010      57           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
ws_tty_data                         156 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
ws_tty_data              000100 cds_args_ptr                ws_tty_data
                         000102 code                        ws_tty_data
                         000104 space_for_cds_args          ws_tty_data
                         000151 ws_tty_data                 ws_tty_data

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      create_data_segment_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
ws_tty_data$Flags




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     13 000034        57 000042        68 000044        20 000052        21 000054        25 000057        28 000065
     29 000067        30 000070        33 000073        34 000075        35 000077        37 000102        38 000105
     39 000106        40 000110        41 000112        42 000114        43 000116        44 000120        46 000122
     47 000132        50 000160        53 000217


Object Segment >special_ldd>install>MR12.1-1075>ws_tty_data
Created on 08/07/87  1510.9 mst Fri
by GJohnson.SysMaint.a
using create_data_segment_, Version II of Thursday, November 20, 1986

        Object    Text    Defs    Link    Symb  Static
Start        0       0       0      26      40      36
Length     230       0      26      12     154       2


3 Definitions:


segname:    ws_tty_data

link|10         Flags
symb|0          symbol_table


No Links.





                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
