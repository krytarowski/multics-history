ASSEMBLY LISTING OF SEGMENT >special_ldd>install>MR12.2-1019>ibm2780_conv_.alm                                                                                                                      
ASSEMBLED ON:	02/02/88  1658.7 mst Tue
OPTIONS USED:	list symbols 
ASSEMBLED BY:	ALM Version 7.4 April 1987      
ASSEMBLER CREATED:	11/02/87  1303.7 mst Mon

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Information Systems Inc., 1982 *
                                     4  " *                                                         *
                                     5  " ***********************************************************
                                     6  "ibm2780_conv_ - Conversion routine for producing ascii IBM2780 printer output
                                     7  "	Coded March 1977 by David Vinograd
                                     8  
                                     9  " 1) Version -- for new Printer DIM.
                                    10  
                                    11  "  ******************************************************
                                    12  "  *                                                    *
                                    13  "  *                                                    *
                                    14  "  * Copyright (c) 1972 by Massachusetts Institute of   *
                                    15  "  * Technology and Honeywell Information Systems, Inc. *
                                    16  "  *                                                    *
                                    17  "  *                                                    *
                                    18  "  ******************************************************
                                    19  
                                    20  
                                    21  "
                                    22  " The manner in which this procedure is utilized is described in detail
                                    23  " in the listing of prt_conv_.
                                    24  "
                                    25  " This proc puts carriage control chars
                                    26  " at the beginning of each output line.
                                    27  
                                    28  
                                    29  
    000000                          30  	name	ibm2780_conv_
                                    31  
                        000000      32  	segdef	printer
                        000004      33  	segdef	punch
                        000000      34  	segdef	teleprinter
                                    35  
                                    36  	tempd	init_outp
                                    37  	tempd	saved_outp
                                    38  	tempd	saved_lp
                                    39  	tempd	saved_sb
                                    40  
                                    41  	tempd	saved_aq
                                    42  	include	stack_header
                                   1-1  "	BEGIN INCLUDE FILE ... stack_header.incl.alm  3/72  Bill Silver
                                   1-2  "
                                   1-3  "	modified 7/76 by M. Weaver for *system links and more system use of areas
                                   1-4  "	modified 3/77 by M. Weaver  to add rnt_ptr
                                   1-5  "	modified 7/77 by S. Webber to add run_unit_depth and assign_linkage_ptr
                                   1-6  "	modified 6/83 by J. Ives to add trace_frames and in_trace.
                                   1-7  
                                   1-8  " HISTORY COMMENTS:
                                   1-9  "  1) change(86-06-24,DGHowe), approve(86-06-24,MCR7396),
                                  1-10  "     audit(86-08-05,Schroth), install(86-11-03,MR12.0-1206):
                                  1-11  "     added the heap_header_ptr definition
                                  1-12  "  2) change(86-08-12,Kissel), approve(86-08-12,MCR7473),
                                  1-13  "     audit(86-10-10,Fawcett), install(86-11-03,MR12.0-1206):
                                  1-14  "     Modified to support control point management.  These changes were
                                  1-15  "     actually made in February 1985 by G. Palter.
                                  1-16  "  3) change(86-10-22,Fawcett), approve(86-10-22,MCR7473),
                                  1-17  "     audit(86-10-22,Farley), install(86-11-03,MR12.0-1206):
                                  1-18  "     Remove the old_lot pointer and replace it with cpm_data_ptr. Use the 18
                                  1-19  "     bit pad after cur_lot_size for the cpm_enabled. This was done to save
                                  1-20  "     some space int the stack header and change the cpd_ptr unal to
                                  1-21  "     cpm_data_ptr (ITS pair).
                                  1-22  "                                                      END HISTORY COMMENTS
                                  1-23  
                        000004    1-24  	equ	stack_header.cpm_data_ptr,4		ptr to control point for this stack
                        000006    1-25  	equ	stack_header.combined_stat_ptr,6	ptr to separate static area
                                  1-26  
                        000010    1-27  	equ	stack_header.clr_ptr,8		ptr to area containing linkage sections
                        000012    1-28  	equ	stack_header.max_lot_size,10		number of words allowed in lot (DU)
                        000012    1-29  	equ	stack_header.main_proc_invoked,10	nonzero if main proc was invoked in run unit (DL)
                        000012    1-30  	equ	stack_header.run_unit_depth,10	number of active run units stacked (DL)
                        000013    1-31  	equ	stack_header.cur_lot_size,11		DU number of words (entries) in lot
                        000013    1-32            equ	stack_header.cpm_enabled,11		DL  non-zero if control point management is enabled
                        000014    1-33  	equ	stack_header.system_free_ptr,12	ptr to system storage area
                        000016    1-34  	equ	stack_header.user_free_ptr,14		ptr to user storage area
                                  1-35  
                        000020    1-36  	equ	stack_header.parent_ptr,16		ptr to parent stack or null
                        000022    1-37  	equ	stack_header.stack_begin_ptr,18	ptr to first stack frame
                        000024    1-38  	equ	stack_header.stack_end_ptr,20		ptr to next useable stack frame
                        000026    1-39  	equ	stack_header.lot_ptr,22		ptr to the lot for the current ring
                                  1-40  
                        000030    1-41  	equ	stack_header.signal_ptr,24		ptr to signal proc for current ring
                        000032    1-42  	equ	stack_header.bar_mode_sp,26		value of sp before entering bar mode
                        000034    1-43  	equ	stack_header.pl1_operators_ptr,28	ptr: pl1_operators_$operator_table
                        000036    1-44  	equ	stack_header.call_op_ptr,30		ptr to standard call operator
                                  1-45  
                        000040    1-46  	equ	stack_header.push_op_ptr,32		ptr to standard push operator
                        000042    1-47  	equ	stack_header.return_op_ptr,34		ptr to standard return operator
                        000044    1-48  	equ	stack_header.ret_no_pop_op_ptr,36	ptr: stand. return/ no pop operator
                        000046    1-49  	equ	stack_header.entry_op_ptr,38		ptr to standard entry operator
                                  1-50  
                        000050    1-51  	equ	stack_header.trans_op_tv_ptr,40	ptr to table of translator operator ptrs
                        000052    1-52  	equ	stack_header.isot_ptr,42		pointer to ISOT
                        000054    1-53  	equ	stack_header.sct_ptr,44		pointer to System Condition Table
                        000056    1-54  	equ	stack_header.unwinder_ptr,46		pointer to unwinder for current ring
                                  1-55  
                        000060    1-56  	equ	stack_header.sys_link_info_ptr,48	ptr to *system link name table
                        000062    1-57  	equ	stack_header.rnt_ptr,50		ptr to reference name table
                        000064    1-58  	equ	stack_header.ect_ptr,52		ptr to event channel table
                        000066    1-59  	equ	stack_header.assign_linkage_ptr,54	ptr to area for hcs_$assign_linkage calls
                        000070    1-60  	equ	stack_header.heap_header_ptr,56	ptr to heap header.
                        000072    1-61  	equ	stack_header.trace_frames,58		stack of trace_catch_ frames
                        000073    1-62  	equ	stach_header.trace_top_ptr,59		trace pointer
                        000074    1-63  	equ	stack_header.in_trace,60		trace antirecurse bit
                        000100    1-64  	equ	stack_header_end,64			length of stack header
                                  1-65  
                                  1-66  
                                  1-67  
                                  1-68  
                        000000    1-69  	equ	trace_frames.count,0		number of trace frames on stack
                        000001    1-70  	equ	trace_frames.top_ptr,1		packed pointer to top one
                                  1-71  
                                  1-72  "	The  following constant is an offset within the  pl1  operators table.
                                  1-73  "	It  references a  transfer vector table.
                                  1-74  
                        000551    1-75  	bool	tv_offset,551
                                  1-76  
                                  1-77  
                                  1-78  "	The  following constants are offsets within this transfer vector table.
                                  1-79  
                        001170    1-80  	equ	call_offset,tv_offset+271
                        001171    1-81  	equ	push_offset,tv_offset+272
                        001172    1-82  	equ	return_offset,tv_offset+273
                        001173    1-83  	equ	return_no_pop_offset,tv_offset+274
                        001174    1-84  	equ	entry_offset,tv_offset+275
                                  1-85  
                                  1-86  
                                  1-87  " 	END INCLUDE FILE stack_header.incl.alm
                                    43  	temp	carriage_ctl
                        000005      44  	equ	pci,5
                        000003      45  	equ	outp,3
                        000002      46  	equ	inp,2
                                    47  
                                    48  
    000000                          49  teleprinter:
    000000                          50  printer:
    000000  0a   000012 7100 00     51  	tra	send_init
    000001  0a   000016 7100 00     52  	tra	send_chars
    000002  0a   000033 7100 00     53  	tra	send_slew_pattern
    000003  0a   000061 7100 00     54  	tra	send_slew_count
                                    55  
    000004                          56  punch:
    000004  aa  7 00000 7101 00     57  	tra	pr7|0
    000005  0a   000016 7100 00     58  	tra	send_chars
    000006  aa  7 00000 7101 00     59  	tra	pr7|0
    000007  0a   000010 7100 00     60  	tra	no_slew
    000010                          61  no_slew:
    000010  aa   000000 2350 03     62  	lda	0,du
    000011  aa  7 00000 7101 00     63  	tra	pr7|0
                                    64  
                                    65  
                                    66  " 
                                    67  
                                    68  	include	prt_conv_info
                                   2-1  
                                   2-2  
                                   2-3       "BEGIN INCLUDE FILE prt_conv_info.incl.alm
                                   2-4  
                                   2-5  	"Created 09/12/80  1100.5 edt Fri by convert_include_file,
                                   2-6  	"   Version of 05/04/80  2034.1 edt Sun.
                                   2-7  
                                   2-8  	"Made from >udd>Multics>Palter>work>prt_conv_info.incl.pl1,
                                   2-9  	"   modified 09/12/80  1100.1 edt Fri
                                  2-10  
                                  2-11  
                                  2-12  " HISTORY COMMENTS:
                                  2-13  "  1) change(87-05-10,Gilcrease), approve(87-07-31,MCR7686),
                                  2-14  "     audit(88-02-01,Farley), install(88-02-02,MR12.2-1019):
                                  2-15  "     Add pci.(line_nbrs eof eol) bits for eor -nb option.
                                  2-16  "                                                      END HISTORY COMMENTS
                                  2-17  
                                  2-18  
                                  2-19  "
                                  2-20  "	Structure pci
                                  2-21  "
                        000336    2-22  	equ	pci_size,222
                                  2-23  
                                  2-24  
                        000000    2-25  	equ	pci.cv_proc,0
                        000002    2-26  	equ	pci.lmarg,2
                        000003    2-27  	equ	pci.rmarg,3
                        000004    2-28  	equ	pci.page_length,4
                        000005    2-29  	equ	pci.phys_line_length,5
                        000006    2-30  	equ	pci.phys_page_length,6
                        000007    2-31  	equ	pci.lpi,7
                        000010    2-32  	equ	pci.sheets_per_page,8
                        000011    2-33  	equ	pci.line_count,9
                        000012    2-34  	equ	pci.page_count,10
                        000013    2-35  	equ	pci.func,11
                        000014    2-36  	equ	pci.modes,12		"LEVEL 2
                                  2-37  
                        400000    2-38  	bool	pci.overflow_off,400000	"DU
                        200000    2-39  	bool	pci.single_space,200000	"DU
                        100000    2-40  	bool	pci.non_edited,100000	"DU
                        040000    2-41  	bool	pci.truncate,040000		"DU
                        020000    2-42  	bool	pci.esc,020000		"DU
                        010000    2-43  	bool	pci.ctl_char,010000		"DU
                        004000    2-44  	bool	pci.line_nbrs,004000	"DU
                        000030    2-45  	equ	pci.pci_pad_shift,24
                        000037    2-46  	bool	pci.pci_pad_mask,000037
                                  2-47  
                        000014    2-48  	equ	pci.flags,12		"LEVEL 2
                                  2-49  
                        000040    2-50  	bool	pci.ignore_next_ff,000040	"DU
                        000020    2-51  	bool	pci.eol,000020		"DU
                        000010    2-52  	bool	pci.eof,000010		"DU
                        000022    2-53  	equ	pci.flags_pad_shift,18
                        000007    2-54  	bool	pci.flags_pad_mask,000007
                                  2-55  
                        000014    2-56  	equ	pci.coroutine_modes,12	"LEVEL 2
                                  2-57  
                        400000    2-58  	bool	pci.upper_case,400000	"DL
                        200000    2-59  	bool	pci.ht,200000		"DL
                        000003    2-60  	equ	pci.coroutine_pad_shift,3
                        017777    2-61  	bool	pci.coroutine_pad_mask,017777
                        000000    2-62  	equ	pci.slew_table_idx_shift,0
                        000007    2-63  	bool	pci.slew_table_idx_mask,000007
                                  2-64  
                        000015    2-65  	equ	pci.top_label_line,13	"DOUBLE
                        000057    2-66  	equ	pci.bot_label_line,47	"DOUBLE
                        000121    2-67  	equ	pci.top_label_length,81
                        000122    2-68  	equ	pci.bot_label_length,82
                        000123    2-69  	equ	pci.form_stops,83		"LEVEL 2
                                  2-70  
                        000033    2-71  	equ	pci.lbits_shift,27
                        000777    2-72  	bool	pci.lbits_mask,000777
                        000022    2-73  	equ	pci.rbits_shift,18
                        000777    2-74  	bool	pci.rbits_mask,000777
                                  2-75  
                        000323    2-76  	equ	pci.level,211
                        000324    2-77  	equ	pci.pos,212
                        000325    2-78  	equ	pci.line,213
                        000326    2-79  	equ	pci.slew_residue,214
                        000327    2-80  	equ	pci.label_nelem,215
                        000330    2-81  	equ	pci.label_wksp,216
                        000332    2-82  	equ	pci.sav_pos,218
                        000333    2-83  	equ	pci.esc_state,219
                        000334    2-84  	equ	pci.esc_num,220
                        000335    2-85  	equ	pci.temp,221
                                  2-86  
                                  2-87       "END INCLUDE FILE prt_conv_info.incl.alm
                                    69  
                                    70  
                                    71  " 
                                    72  
    000012                          73  send_init:
                                    74  
    000012  aa  6 00050 2535 00     75  	spri3	init_outp		store output ptr
    000013  aa   000002 2360 07     76  	ldq	2,dl		advance output ptr
    000014  aa  3 00000 5005 06     77  	a9bd	outp|0,ql		..
    000015  aa  7 00000 7101 00     78  	tra	pr7|0		return
                                    79  
                                    80  " 
                                    81  
    000016                          82  send_chars:
    000016  aa   000000 6220 12     83  	eax2	0,2		set indicators from X2
    000017  0a   000024 6044 00     84  	tmoz	nospace		if no white space, skip following
                                    85  
    000020  aa   040140 1004 00     86  	mlr	(),(pr,rl),fill(040)  insert blanks into output
    000021  0a   000021 000000      87  	desc9a	*,0		..
    000022  aa   300000 000012      88  	desc9a	outp|0,x2		..
                                    89  
    000023  aa  3 00000 5005 12     90  	a9bd	outp|0,2		step output pointer over blanks
                                    91  
    000024                          92  nospace:
    000024  aa  0 00140 1005 40     93  	mlr	(pr,rl),(pr,rl)	copy characters into output
    000025  aa   200000 000001      94  	desc9a	inp|0,au		..
    000026  aa   300000 000001      95  	desc9a	outp|0,au		..
                                    96  
    000027  aa  2 00000 5005 01     97  	a9bd	inp|0,au		step input and output pointers
    000030  aa  3 00000 5005 01     98  	a9bd	outp|0,au		..
    000031  aa   000000 6220 00     99  	eax2	0		make sure X2 now zero
    000032  aa  7 00000 7101 00    100  	tra	pr7|0		return to caller
                                   101  
                                   102  " 
                                   103  
    000033                         104  send_slew_pattern:
    000033  aa   000000 6270 00    105  	eax7	0		initialize for search
    000034  aa  6 00054 6501 00    106  	sprilp	saved_lp
    000035  aa  6 00056 6535 00    107  	sprisb	saved_sb
    000036  aa  6 00000 3731 00    108  	epbpsb	sp|0
    000037  aa  6 00060 7571 00    109  	staq	saved_aq
    000040  0a   000040 2130 00    110  	epaq	*
    000041  aa  7 00026 7641 61    111  	lprplp	sb|stack_header.lot_ptr,*au
    000042  aa  6 00060 2371 00    112  	ldaq	saved_aq
                        000006     113  	equ	nslew,6
    000043  9a  4 00012 3701 20    114  	epplp 	lp|slew_ctl_table_ptr,*
    000044  aa   006300 5202 02    115  	rpt	nslew/2,2,tze	search for slew characters
    000045  aa  4 00000 1151 17    116  	cmpa	lp|0,7		..
    000046  aa  4 77777 2361 17    117  	ldq	lp|-1,7
                                   118  
    000047                         119  stslew:
    000047  aa  6 00054 3701 20    120  	epplp	saved_lp,*
    000050  aa  6 00056 3735 20    121  	eppsb	saved_sb,*
    000051  aa  6 00062 7561 00    122  	stq	carriage_ctl	save carriage control chars
    000052  aa  6 00052 2535 00    123  	spri3	saved_outp	store output ptr
    000053  aa  6 00050 3535 20    124  	epp3	init_outp,*	move ptr to register
    000054  aa  0 00100 1005 00    125  	mlr	(pr),(pr)		move carriage control into output
    000055  aa   600062 000002     126  	desc9a	carriage_ctl,2	..
    000056  aa   300000 000002     127  	desc9a	pr3|0,2		..
    000057  aa  6 00052 3535 20    128  	epp3	saved_outp,*	restore orignal output ptr
    000060  aa  7 00000 7101 00    129  	tra	pr7|0		return to caller
                                   130  
                                   131  
                                   132  
                                   133  
                                   134  
    000061                         135  send_slew_count:
    000061  aa   000000 6360 05    136  	eaq	0,al		line count in QU
    000062  aa   000003 1350 07    137  	sbla	3,dl		can slew at most 3 lines at a time
    000063  0a   000065 6044 00    138  	tmoz	*+2		if more than 3 lines,
    000064  aa   000003 2360 03    139            ldq       3,du                do only 3 to start
    000065  aa  6 00054 6501 00    140  	sprilp	saved_lp
    000066  aa  6 00056 6535 00    141  	sprisb	saved_sb
    000067  aa  6 00000 3731 00    142  	epbpsb	sp|0
    000070  aa  6 00060 7571 00    143  	staq	saved_aq
    000071  0a   000071 2130 00    144  	epaq	*
    000072  aa  7 00026 7641 61    145  	lprplp	sb|stack_header.lot_ptr,*au
    000073  aa  6 00060 2371 00    146  	ldaq	saved_aq
    000074  9a  4 00010 2361 62    147  	ldq	lp|carriage_ctl_table_ptr,*qu
    000075  aa  6 00056 3735 20    148  	eppsb	saved_sb,*
    000076  aa  6 00054 3701 20    149  	epplp	saved_lp,*
    000077  0a   000047 7100 00    150  	tra	stslew		and store it for later
                                   151  
                                   152  	use internal_static
                                   153  	join	/link/internal_static
                        000010     154  	segdef	carriage_ctl_table_ptr
                        000012     155  	segdef	slew_ctl_table_ptr
    000010                         156  carriage_ctl_table_ptr:
                                   157  	even
    000010  aa   077777 000043     158  	its	-1,1
    000011  aa   000001 000000 
    000012                         159  slew_ctl_table_ptr:
    000012  aa   077777 000043     160  	its	-1,1
    000013  aa   000001 000000 
                                   161  
                                   162  
                                   163  
                                   164  	end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    000100  5a   000003 000000 
    000101  5a   000062 600000 
    000102  aa   000000 000000 
    000103  55   000012 000002 
    000104  5a   000002 400003 
    000105  55   000006 000012 
    000106  aa  015 151 142 155
    000107  aa  062 067 070 060
    000110  aa  137 143 157 156
    000111  aa  166 137 000 000
    000112  55   000022 000003 
    000113  2a   000012 400001 
    000114  55   000015 000003 
    000115  aa  022 163 154 145         slew_ctl_table_ptr
    000116  aa  167 137 143 164
    000117  aa  154 137 164 141
    000120  aa  142 154 145 137
    000121  aa  160 164 162 000
    000122  55   000033 000012 
    000123  2a   000010 400001 
    000124  55   000025 000003 
    000125  aa  026 143 141 162         carriage_ctl_table_ptr
    000126  aa  162 151 141 147
    000127  aa  145 137 143 164
    000130  aa  154 137 164 141
    000131  aa  142 154 145 137
    000132  aa  160 164 162 000
    000133  55   000041 000022 
    000134  0a   000000 400000 
    000135  55   000036 000003 
    000136  aa  013 164 145 154         teleprinter
    000137  aa  145 160 162 151
    000140  aa  156 164 145 162
    000141  55   000046 000033 
    000142  0a   000004 400000 
    000143  55   000044 000003 
    000144  aa  005 160 165 156         punch
    000145  aa  143 150 000 000
    000146  55   000053 000041 
    000147  0a   000000 400000 
    000150  55   000051 000003 
    000151  aa  007 160 162 151         printer
    000152  aa  156 164 145 162
    000153  55   000002 000046 
    000154  6a   000000 400002 
    000155  55   000056 000003 
    000156  aa  014 163 171 155         symbol_table
    000157  aa  142 157 154 137
    000160  aa  164 141 142 154
    000161  aa  145 000 000 000

DEFINITIONS HASH TABLE

    000162  aa   000000 000015 
    000163  5a   000022 000000 
    000164  5a   000033 000000 
    000165  aa   000000 000000 
    000166  aa   000000 000000 
    000167  aa   000000 000000 
    000170  aa   000000 000000 
    000171  5a   000053 000000 
    000172  5a   000012 000000 
    000173  5a   000046 000000 
    000174  aa   000000 000000 
    000175  aa   000000 000000 
    000176  aa   000000 000000 
    000177  5a   000041 000000 

NO EXTERNAL NAMES

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    000200  aa   000001 000000 
    000201  aa   000000 000000 

INTERNAL EXPRESSION WORDS

LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   000100 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000014 000014 
    000007  a2   000000 000004 
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000007 
    000004  aa   000000 115705 
    000005  aa   073761 335527 
    000006  aa   000000 116070 
    000007  aa   774162 202344 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000205 
    000020  aa   000000 000146 
    000021  aa   000162 000156 
    000022  aa   000175 000146 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   067056 064040 
    000030  aa   101160 162151 
    000031  aa   154040 061071 
    000032  aa   070067 040040 
    000033  aa   040040 040040 
    000034  aa   107112 157150 
    000035  aa   156163 157156 
    000036  aa   056123 171163 
    000037  aa   115141 151156 
    000040  aa   164056 141040 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   154151 163164 
    000045  aa   040163 171155 
    000046  aa   142157 154163 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040040 040040 
    000057  aa   040040 040040 
    000060  aa   040040 040040 
    000061  aa   040040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000003 
    000066  aa   000102 000062 
    000067  aa   160646 302421 
    000070  aa   000000 116070 
    000071  aa   730160 600000 
    000072  aa   000117 000042 
    000073  aa   147777 464111 
    000074  aa   000000 115000 
    000075  aa   507463 000000 
    000076  aa   000130 000067 
    000077  aa   160646 301572 
    000100  aa   000000 116070 
    000101  aa   723627 400000 
    000102  aa   076163 160145          >special_ldd>install>MR12.2-1019>ibm2780_conv_.alm
    000103  aa   143151 141154 
    000104  aa   137154 144144 
    000105  aa   076151 156163 
    000106  aa   164141 154154 
    000107  aa   076115 122061 
    000110  aa   062056 062055 
    000111  aa   061060 061071 
    000112  aa   076151 142155 
    000113  aa   062067 070060 
    000114  aa   137143 157156 
    000115  aa   166137 056141 
    000116  aa   154155 040040 
    000117  aa   076154 144144          >ldd>include>stack_header.incl.alm
    000120  aa   076151 156143 
    000121  aa   154165 144145 
    000122  aa   076163 164141 
    000123  aa   143153 137150 
    000124  aa   145141 144145 
    000125  aa   162056 151156 
    000126  aa   143154 056141 
    000127  aa   154155 040040 
    000130  aa   076163 160145          >special_ldd>install>MR12.2-1019>prt_conv_info.incl.alm
    000131  aa   143151 141154 
    000132  aa   137154 144144 
    000133  aa   076151 156163 
    000134  aa   164141 154154 
    000135  aa   076115 122061 
    000136  aa   062056 062055 
    000137  aa   061060 061071 
    000140  aa   076160 162164 
    000141  aa   137143 157156 
    000142  aa   166137 151156 
    000143  aa   146157 056151 
    000144  aa   156143 154056 
    000145  aa   141154 155040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

        1170    call_offset              stack_header:        80.
          62    carriage_ctl             ibm2780_conv_:       43,  122,  126.
          10    carriage_ctl_table_ptr   ibm2780_conv_:      147,  154,  156.
        1174    entry_offset             stack_header:        84.
          50    init_outp                ibm2780_conv_:       36,   75,  124.
           2    inp                      ibm2780_conv_:       46,   94,   97.
          10    internal_static          ibm2780_conv_:      152,  153.
          24    nospace                  ibm2780_conv_:       84,   92.
          10    no_slew                  ibm2780_conv_:       60,   61.
           6    nslew                    ibm2780_conv_:      113,  115.
           3    outp                     ibm2780_conv_:       45,   77,   88,   90,   95,   98.
           5    pci                      ibm2780_conv_:       44.
         122    pci.bot_label_length     prt_conv_info:       68.
          57    pci.bot_label_line       prt_conv_info:       66.
          14    pci.coroutine_modes      prt_conv_info:       56.
       17777    pci.coroutine_pad_mask   prt_conv_info:       61.
           3    pci.coroutine_pad_shift  prt_conv_info:       60.
       10000    pci.ctl_char             prt_conv_info:       43.
           0    pci.cv_proc              prt_conv_info:       25.
          10    pci.eof                  prt_conv_info:       52.
          20    pci.eol                  prt_conv_info:       51.
       20000    pci.esc                  prt_conv_info:       42.
         334    pci.esc_num              prt_conv_info:       84.
         333    pci.esc_state            prt_conv_info:       83.
          14    pci.flags                prt_conv_info:       48.
           7    pci.flags_pad_mask       prt_conv_info:       54.
          22    pci.flags_pad_shift      prt_conv_info:       53.
         123    pci.form_stops           prt_conv_info:       69.
          13    pci.func                 prt_conv_info:       35.
      200000    pci.ht                   prt_conv_info:       59.
          40    pci.ignore_next_ff       prt_conv_info:       50.
         327    pci.label_nelem          prt_conv_info:       80.
         330    pci.label_wksp           prt_conv_info:       81.
         777    pci.lbits_mask           prt_conv_info:       72.
          33    pci.lbits_shift          prt_conv_info:       71.
         323    pci.level                prt_conv_info:       76.
         325    pci.line                 prt_conv_info:       78.
          11    pci.line_count           prt_conv_info:       33.
        4000    pci.line_nbrs            prt_conv_info:       44.
           2    pci.lmarg                prt_conv_info:       26.
           7    pci.lpi                  prt_conv_info:       31.
          14    pci.modes                prt_conv_info:       36.
      100000    pci.non_edited           prt_conv_info:       40.
      400000    pci.overflow_off         prt_conv_info:       38.
          12    pci.page_count           prt_conv_info:       34.
           4    pci.page_length          prt_conv_info:       28.
          37    pci.pci_pad_mask         prt_conv_info:       46.
          30    pci.pci_pad_shift        prt_conv_info:       45.
           5    pci.phys_line_length     prt_conv_info:       29.
           6    pci.phys_page_length     prt_conv_info:       30.
         324    pci.pos                  prt_conv_info:       77.
         777    pci.rbits_mask           prt_conv_info:       74.
          22    pci.rbits_shift          prt_conv_info:       73.
           3    pci.rmarg                prt_conv_info:       27.
         332    pci.sav_pos              prt_conv_info:       82.
          10    pci.sheets_per_page      prt_conv_info:       32.
      200000    pci.single_space         prt_conv_info:       39.
         326    pci.slew_residue         prt_conv_info:       79.
           7    pci.slew_table_idx_mask  prt_conv_info:       63.
           0    pci.slew_table_idx_shift       prt_conv_info:       62.
         335    pci.temp                 prt_conv_info:       85.
         121    pci.top_label_length     prt_conv_info:       67.
          15    pci.top_label_line       prt_conv_info:       65.
       40000    pci.truncate             prt_conv_info:       41.
      400000    pci.upper_case           prt_conv_info:       58.
         336    pci_size                 prt_conv_info:       22.
           0    printer                  ibm2780_conv_:       32,   50.
           4    punch                    ibm2780_conv_:       33,   56.
        1171    push_offset              stack_header:        81.
        1173    return_no_pop_offset     stack_header:        83.
        1172    return_offset            stack_header:        82.
          60    saved_aq                 ibm2780_conv_:       41,  109,  112,  143,  146.
          54    saved_lp                 ibm2780_conv_:       38,  106,  120,  140,  149.
          52    saved_outp               ibm2780_conv_:       37,  123,  128.
          56    saved_sb                 ibm2780_conv_:       39,  107,  121,  141,  148.
          16    send_chars               ibm2780_conv_:       52,   58,   82.
          12    send_init                ibm2780_conv_:       51,   73.
          61    send_slew_count          ibm2780_conv_:       54,  135.
          33    send_slew_pattern        ibm2780_conv_:       53,  104.
          12    slew_ctl_table_ptr       ibm2780_conv_:      114,  155,  159.
          73    stach_header.trace_top_ptr     stack_header:        62.
          66    stack_header.assign_linkage_ptr      stack_header:        59.
          32    stack_header.bar_mode_sp       stack_header:        42.
          36    stack_header.call_op_ptr       stack_header:        44.
          10    stack_header.clr_ptr     stack_header:        27.
           6    stack_header.combined_stat_ptr       stack_header:        25.
           4    stack_header.cpm_data_ptr      stack_header:        24.
          13    stack_header.cpm_enabled       stack_header:        32.
          13    stack_header.cur_lot_size      stack_header:        31.
          64    stack_header.ect_ptr     stack_header:        58.
          46    stack_header.entry_op_ptr      stack_header:        49.
          70    stack_header.heap_header_ptr   stack_header:        60.
          74    stack_header.in_trace    stack_header:        63.
          52    stack_header.isot_ptr    stack_header:        52.
          26    stack_header.lot_ptr     ibm2780_conv_:      111,  145,
                                         stack_header:        39.
          12    stack_header.main_proc_invoked       stack_header:        29.
          12    stack_header.max_lot_size      stack_header:        28.
          20    stack_header.parent_ptr  stack_header:        36.
          34    stack_header.pl1_operators_ptr       stack_header:        43.
          40    stack_header.push_op_ptr       stack_header:        46.
          42    stack_header.return_op_ptr     stack_header:        47.
          44    stack_header.ret_no_pop_op_ptr       stack_header:        48.
          62    stack_header.rnt_ptr     stack_header:        57.
          12    stack_header.run_unit_depth    stack_header:        30.
          54    stack_header.sct_ptr     stack_header:        53.
          30    stack_header.signal_ptr  stack_header:        41.
          22    stack_header.stack_begin_ptr   stack_header:        37.
          24    stack_header.stack_end_ptr     stack_header:        38.
          14    stack_header.system_free_ptr   stack_header:        33.
          60    stack_header.sys_link_info_ptr       stack_header:        56.
          72    stack_header.trace_frames      stack_header:        61.
          50    stack_header.trans_op_tv_ptr   stack_header:        51.
          56    stack_header.unwinder_ptr      stack_header:        54.
          16    stack_header.user_free_ptr     stack_header:        34.
         100    stack_header_end         stack_header:        64.
          47    stslew                   ibm2780_conv_:      119,  150.
           0    teleprinter              ibm2780_conv_:       34,   49.
           0    trace_frames.count       stack_header:        69.
           1    trace_frames.top_ptr     stack_header:        70.
         551    tv_offset                stack_header:        75,   80,   81,   82,   83,   84.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
