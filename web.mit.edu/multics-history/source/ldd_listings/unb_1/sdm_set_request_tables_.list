	COMPILATION LISTING OF SEGMENT sdm_set_request_tables_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell LCPD Phoenix, System M
	Compiled on: 10/27/83  1252.5 mst Thu
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 
        7 /* format: off */
        8 
        9 /* Sets the request table list used by the send_mail subsystem */
       10 
       11 /* Created:  17 September 1982 by G. Palter */
       12 /* Modified: August 1983 by G. Palter to convert to new mail system interface */
       13 
       14 /* format: style4,delnl,insnl,ifthenstmt,ifthen */
       15 
       16 
       17 sdm_set_request_tables_:
       18      procedure (P_sdm_invocation_ptr, P_code);
       19 
       20 
       21 /* Parameters */
       22 
       23 dcl  P_sdm_invocation_ptr pointer parameter;
       24 dcl  P_code fixed binary (35) parameter;
       25 
       26 
       27 /* send_mail request tables */
       28 
       29 dcl  1 sdm_request_tables aligned,
       30        2 header like request_tables_list.header,
       31        2 tables (4) like request_tables_list.tables;	/* up to 4 possible tables (see below) */
       32 
       33 
       34 /* Remaining declarations */
       35 
       36 dcl  table_idx fixed binary;
       37 
       38 /* format: off */
       39 dcl (sdm_request_tables_$standard_requests, sdm_request_tables_$original_requests, sdm_request_tables_$debug_requests,
       40      ssu_request_tables_$standard_requests)
       41 	bit (36) aligned external;
       42 /* format: on */
       43 
       44 dcl  ssu_$set_request_tables entry (pointer, pointer, fixed binary (35));
       45 
       46 dcl  (addr, null) builtin;
       47 
       48 /* sdm_set_request_tables_: entry (P_sdm_invocation_ptr, P_code); */
       49 
       50 	sdm_invocation_ptr = P_sdm_invocation_ptr;
       51 
       52 	sdm_request_tables.version = REQUEST_TABLES_LIST_VERSION_1;
       53 
       54 	table_idx = 1;				/* always include standard send_mail requests */
       55 	sdm_request_tables.tables (1).table_ptr = addr (sdm_request_tables_$standard_requests);
       56 
       57 	if sdm_invocation.rdm_invocation_ptr ^= null () then do;
       58 	     table_idx = table_idx + 1;		/* include the original requests if in read_mail reply */
       59 	     sdm_request_tables.tables (table_idx).table_ptr = addr (sdm_request_tables_$original_requests);
       60 	end;
       61 
       62 	if sdm_invocation.debug_mode then do;		/* include debugging requests if needed */
       63 	     table_idx = table_idx + 1;
       64 	     sdm_request_tables.tables (table_idx).table_ptr = addr (sdm_request_tables_$debug_requests);
       65 	end;
       66 
       67 	table_idx = table_idx + 1;			/* standard subsystem requests are always last */
       68 	sdm_request_tables.tables (table_idx).table_ptr = addr (ssu_request_tables_$standard_requests);
       69 
       70 	sdm_request_tables.n_tables = table_idx;
       71 
       72 	call ssu_$set_request_tables (sdm_invocation.sci_ptr, addr (sdm_request_tables), P_code);
       73 
       74 	return;
       75 
  1     1 /* BEGIN INCLUDE FILE ... sdm_invocation.incl.pl1 */
  1     2 /* Created:  August 1983 by G. Palter from portions of emf_info.incl.pl1 */
  1     3 
  1     4 /* Definition of a single invocation of send_mail */
  1     5 
  1     6 dcl  1 sdm_invocation aligned based (sdm_invocation_ptr),
  1     7        2 type character (8),				/* defines this structure as a send_mail invocation */
  1     8        2 sci_ptr pointer,				/* -> subsystem utilities invocation data */
  1     9        2 area_ptr pointer,				/* -> area to be used by the subsystem */
  1    10 
  1    11        2 message_info,				/* information about the message being constructed */
  1    12          3 message_ptr pointer,			/* ... -> the actual message */
  1    13          3 message_state fixed binary,			/* ... unprocessed/modified/processed: controls quit query */
  1    14          3 date_time_body_modified fixed binary (71),	/* ... last date/time the message body was changed: used to
  1    15*						   display Date/Message-ID fields before transmission */
  1    16 
  1    17        2 fill_width fixed binary,			/* default line length for message filling */
  1    18        2 flags,
  1    19          3 brief bit (1) unaligned,			/* ON => suppress "Mail delivered..." messages */
  1    20          3 acknowledge bit (1) unaligned,		/* ON => user wants acknowledgement from recipients */
  1    21          3 notify bit (1) unaligned,			/* ON => send each recipient a notification of delivery */
  1    22          3 fill bit (1) unaligned,			/* ON => fill message body whenever modified */
  1    23          3 debug_mode bit (1) unaligned,		/* ON => debugging features enabled */
  1    24          3 auto_write bit (1) unaligned,
  1    25          3 pad bit (30) unaligned,			/* ON => qedx request automatically rewrites on quit (sigh) */
  1    26 
  1    27        2 rdm_invocation_ptr pointer,			/* -> description of read_mail invocation whose reply request
  1    28*						   created this send_mail invocation */
  1    29 
  1    30        2 original_messages_ptr pointer,			/* -> current list of original messages from which the
  1    31*						   In-Reply-To field is to be regenerated after use of
  1    32*						   qedx/apply -header  */
  1    33 
  1    34        2 abort_code fixed binary (35);			/* indicates whether send_mail exited with unsent message */
  1    35 
  1    36 dcl  SDM_INVOCATION character (8) static options (constant) initial ("sdm_0008");
  1    37 
  1    38 dcl  sdm_invocation_ptr pointer;
  1    39 
  1    40 dcl  sdm_area area based (sdm_invocation.area_ptr);
  1    41 
  1    42 
  1    43 /* Possible message states: indicate whether the message has been modified in some way since it was last successfully
  1    44*   transmitted, logged, saved, or writen.  This state is used by the quit request to control whether it should query the
  1    45*   user for permission to exit send_mail */
  1    46 
  1    47 dcl (UNPROCESSED_MESSAGE	initial (-1),		/* message has never been transmitted/logged/saved/written */
  1    48 
  1    49      MODIFIED_MESSAGE	initial (1),		/* message was transmitted/logged/saved/written but has been
  1    50*						   modified since the last such operation */
  1    51 
  1    52      PROCESSED_MESSAGE	initial (0))		/* message was transmitted/logged/saved/written and hasn't
  1    53*						   been modified since that operation: OK to quit without
  1    54*						   having to ask for the user's permission */
  1    55 	fixed binary static options (constant);
  1    56 
  1    57 /* END INCLUDE FILE ... sdm_invocation.incl.pl1 */
       76 
       77 
  2     1 /* BEGIN INCLUDE FILE ... ssu_request_tables_list.incl.pl1 */
  2     2 /* Created:  8 December 1981 by G. Palter */
  2     3 
  2     4 /* The list of request tables in use by a subsystem invocation */
  2     5 
  2     6 
  2     7 dcl 1 request_tables_list aligned based (rtl_ptr),
  2     8       2 header,
  2     9         3 version fixed binary,			/* version of this structure */
  2    10         3 n_tables fixed binary,			/* # of request tables in the list */
  2    11       2 tables (request_tables_list_n_tables refer (request_tables_list.n_tables)),
  2    12         3 table_ptr pointer,				/* -> this request table */
  2    13         3 flags,
  2    14 	4 table_valid bit (1) unaligned,		/* "1"b => this request table is valid */
  2    15 	4 pad bit (35) unaligned,
  2    16         3 pad bit (36);
  2    17 
  2    18 dcl  rtl_ptr pointer;
  2    19 
  2    20 dcl  request_tables_list_n_tables fixed binary;		/* for allocating the above structure */
  2    21 
  2    22 dcl  REQUEST_TABLES_LIST_VERSION_1 fixed binary static options (constant) initial (1);
  2    23 
  2    24 /* END INCLUDE FILE ... ssu_request_tables_list.incl.pl1 */
       78 
       79 
       80      end sdm_set_request_tables_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/27/83  1104.6  sdm_set_request_tables_.pl1       >spec>on>10/27/83-mail>sdm_set_request_tables_.pl1
76           1    10/27/83  1049.7  sdm_invocation.incl.pl1           >spec>on>10/27/83-mail>sdm_invocation.incl.pl1
78           2    04/13/82  1620.2  ssu_request_tables_list.incl.pl1  >ldd>include>ssu_request_tables_list.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
P_code                                 parameter       fixed bin(35,0)          dcl 24 set ref 17 72*
P_sdm_invocation_ptr                   parameter       pointer                  dcl 23 ref 17 50
REQUEST_TABLES_LIST_VERSION_1          constant        fixed bin(17,0)          initial dcl 2-22 ref 52
addr                                                   builtin function         dcl 46 ref 55 59 64 68 72 72
debug_mode               15(04)        based           bit(1)                   level 3 packed unaligned dcl 1-6 ref 62
flags                    15            based           structure                level 2 dcl 1-6
header                                 based           structure                level 2 in structure "request_tables_list" dcl 2-7
                                                                                  in procedure "sdm_set_request_tables_"
header                          000100 automatic       structure                level 2 in structure "sdm_request_tables" dcl 29
                                                                                  in procedure "sdm_set_request_tables_"
n_tables                  1     000100 automatic       fixed bin(17,0)          level 3 dcl 29 set ref 70*
null                                                   builtin function         dcl 46 ref 57
rdm_invocation_ptr       16            based           pointer                  level 2 dcl 1-6 ref 57
request_tables_list                    based           structure                level 1 dcl 2-7
sci_ptr                   2            based           pointer                  level 2 dcl 1-6 set ref 72*
sdm_invocation                         based           structure                level 1 dcl 1-6
sdm_invocation_ptr              000124 automatic       pointer                  dcl 1-38 set ref 50* 57 62 72
sdm_request_tables              000100 automatic       structure                level 1 dcl 29 set ref 72 72
sdm_request_tables_$debug_requests
                                000014 external static bit(36)                  dcl 39 set ref 64
sdm_request_tables_$original_requests
                                000012 external static bit(36)                  dcl 39 set ref 59
sdm_request_tables_$standard_requests
                                000010 external static bit(36)                  dcl 39 set ref 55
ssu_$set_request_tables         000020 constant        entry                    external dcl 44 ref 72
ssu_request_tables_$standard_requests
                                000016 external static bit(36)                  dcl 39 set ref 68
table_idx                       000122 automatic       fixed bin(17,0)          dcl 36 set ref 54* 58* 58 59 63* 63 64 67* 67 68 70
table_ptr                 2     000100 automatic       pointer                  array level 3 dcl 29 set ref 55* 59* 64* 68*
tables                    2            based           structure                array level 2 in structure "request_tables_list"
                                                                                  dcl 2-7 in procedure "sdm_set_request_tables_"
tables                    2     000100 automatic       structure                array level 2 in structure "sdm_request_tables"
                                                                                  dcl 29 in procedure "sdm_set_request_tables_"
version                         000100 automatic       fixed bin(17,0)          level 3 dcl 29 set ref 52*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
MODIFIED_MESSAGE                       internal static fixed bin(17,0)          initial dcl 1-47
PROCESSED_MESSAGE                      internal static fixed bin(17,0)          initial dcl 1-47
SDM_INVOCATION                         internal static char(8)                  initial unaligned dcl 1-36
UNPROCESSED_MESSAGE                    internal static fixed bin(17,0)          initial dcl 1-47
request_tables_list_n_tables           automatic       fixed bin(17,0)          dcl 2-20
rtl_ptr                                automatic       pointer                  dcl 2-18
sdm_area                               based           area(1024)               dcl 1-40

NAME DECLARED BY EXPLICIT CONTEXT.
sdm_set_request_tables_         000010 constant        entry                    external dcl 17

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       202         224      74         212
Length       442      74        22         202     105           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
sdm_set_request_tables_              96 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
sdm_set_request_tables_  000100 sdm_request_tables          sdm_set_request_tables_
                         000122 table_idx                   sdm_set_request_tables_
                         000124 sdm_invocation_ptr          sdm_set_request_tables_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
ssu_$set_request_tables

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
sdm_request_tables_$debug_requests                          sdm_request_tables_$original_requests
sdm_request_tables_$standard_requests                       ssu_request_tables_$standard_requests




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     17 000004        50 000015        52 000021        54 000023        55 000025        57 000027        58 000033
     59 000034        62 000040        63 000043        64 000044        67 000050        68 000051        70 000055
     72 000057        74 000073


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
