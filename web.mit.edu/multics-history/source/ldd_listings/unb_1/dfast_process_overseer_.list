	COMPILATION LISTING OF SEGMENT dfast_process_overseer_
	Compiled by: Multics PL/I Compiler, Release 33e, of October 6, 1992
	Compiled at: CGI                             
	Compiled on: 2000-05-04_1648.15_Thu_mdt
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 /* Pedigree unknown. */
       11 /* Modified 1984-08-24 BIM for pit instead of pitmsg. */
       12 
       13 dfast_process_overseer_: proc;
       14 
       15 /* automatic */
       16 
       17 dcl  bit_count fixed bin (24);			/* bit count of message of the day */
       18 dcl  code fixed bin (35);
       19 dcl  home_dir_string char (168);			/* home directory for dfast_ */
       20 dcl  i fixed bin;
       21 dcl  junk fixed bin (6);				/* unlooked at info for iox_$control */
       22 dcl  logout_arg char (5);				/* -hold or "" output from dfast_ */
       23 dcl  mothd_ptr ptr;					/* ptr to message of the day */
       24 dcl  person_id_string char (28);			/* person_id for dfast_ */
       25 dcl  pp ptr;					/* pointer to pit */
       26 dcl  project_id_string char (28);			/* project_id for dfast_ */
       27 dcl 1 search_rules aligned,
       28 	2 number fixed bin init (4),
       29 	2 names (4) char (168) aligned init ("initiated_segments", ">unb",  ">sss", ">sl1");
       30 dcl  tty_string char (6);				/* ttynnn for dfast_ */
       31 
       32 dcl (length, verify, reverse, null, index, substr) builtin;
       33 
       34 /* external */
       35 
       36 dcl  condition_ entry (char (*) aligned, entry);
       37 dcl  com_err_ entry options (variable);
       38 dcl  dfast_ entry (char (*), char (*), char (*), char (*), char (*));
       39 dcl  hcs_$initiate_count entry (char (*) aligned, char (*) aligned, char (*) aligned, fixed bin (24), fixed bin (2), ptr, 
       40       fixed bin (35));
       41 dcl  hcs_$initiate_search_rules  entry  (ptr, fixed bin (35));
       42 dcl  hcs_$make_seg entry (char (*) aligned, char (*) aligned, char (*) aligned, fixed bin (5), ptr, fixed bin (35));
       43 dcl  hcs_$terminate_noname entry (ptr, fixed bin (35));
       44 dcl  iox_$attach_iocb entry (ptr, char (*), fixed bin (35));
       45 dcl  iox_$control entry (ptr, char (*), ptr, fixed bin (35));
       46 dcl  iox_$open entry (ptr, fixed bin, bit (1) aligned, fixed bin (35));
       47 dcl  iox_$put_chars entry (ptr, ptr, fixed bin (21), fixed bin (35));
       48 dcl  iox_$user_io ptr ext;
       49 dcl  iox_$user_output ptr ext;
       50 dcl  logout entry options (variable);
       51 dcl  standard_default_handler_ entry ();
       52 dcl  terminate_process_ ext entry (char (*), ptr);
       53 
       54 /* */
  1     1 /* BEGIN INCLUDE FILE ... user_attributes.incl.pl1  TAC 10/79 */
  1     2 
  1     3 
  1     4 /****^  HISTORY COMMENTS:
  1     5*  1) change(86-12-11,Brunelle), approve(87-07-13,MCR7741),
  1     6*     audit(87-04-19,GDixon), install(87-08-04,MR12.1-1056):
  1     7*     Add incl for abs_attributes.incl.pl1 to automatically include absentee
  1     8*     attribute switches.
  1     9*  2) change(87-04-19,GDixon), approve(87-07-13,MCR7741),
  1    10*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  1    11*      A) Add USER_ATTRIBUTE_NAMES arrays.  attribute_names.incl.pl1 can thereby
  1    12*         be deleted.
  1    13*      B) Add constants identifying attributes that can be changed by user at
  1    14*         login, etc.
  1    15*                                                   END HISTORY COMMENTS */
  1    16 
  1    17 
  1    18 /* Modified 82-01-03  E. N. Kittlitz.  to declare a complete level-1 structure */
  1    19 
  1    20 /* format: style4 */
  1    21 dcl  1 user_attributes aligned based,			/* the user user_attributes */
  1    22        (2 administrator bit (1),			/* 1  system administrator privileges */
  1    23        2 primary_line bit (1),			/* 2  user has primary-line privileges  */
  1    24        2 nobump bit (1),				/* 2  user cannot be bumped */
  1    25        2 guaranteed_login bit (1),			/* 4  user has guaranteed login privileges */
  1    26        2 anonymous bit (1),				/* 5  used only in SAT. project may have anon.users */
  1    27        2 nopreempt bit (1),				/* 6  used only in PDT. user not preemptable by others
  1    28*						   .  of same project (distinct from "nobump") */
  1    29        2 nolist bit (1),				/* 7  don't list user on "who" */
  1    30        2 dialok bit (1),				/* 8  user may have multiple consoles */
  1    31        2 multip bit (1),				/* 9  user may have several processes */
  1    32        2 bumping bit (1),				/* 10 in SAT. Can users in project bump each other? */
  1    33        2 brief bit (1),				/* 11 no login or logout message */
  1    34        2 vinitproc bit (1),				/* 12 user may change initial procedure */
  1    35        2 vhomedir bit (1),				/* 13 user may change homedir */
  1    36        2 nostartup bit (1),				/* 14 user does not want start_up.ec */
  1    37        2 sb_ok bit (1),				/* 15 user may be standby */
  1    38        2 pm_ok bit (1),				/* 16 user may be primary */
  1    39        2 eo_ok bit (1),				/* 17 user may be edit_only */
  1    40        2 daemon bit (1),				/* 18 user may login as daemon */
  1    41        2 vdim bit (1),				/* 19 * OBSOLETE * user may change outer mdle */
  1    42        2 no_warning bit (1),				/* 20 no warning message */
  1    43        2 igroup bit (1),				/* 21 in SAT: this project may give its users individual groups
  1    44*						   .  in PDT: this user has an individual load control group */
  1    45        2 save_pdir bit (1),				/* 22 save pdir after fatal process error */
  1    46        2 disconnect_ok bit (1),			/* 23 ok to save user's disconnected processes */
  1    47        2 save_on_disconnect bit (1),			/* 24 save them unless -nosave login arg is given */
  1    48        2 pad bit (12)) unaligned;
  1    49 
  1    50 dcl  USER_ATTRIBUTE_NAMES (0:24) char (20) int static options (constant) init
  1    51     ("none",					/* 0 */
  1    52      "administrator",				/* 1 */
  1    53      "primary_line",				/* 2 */
  1    54      "nobump",					/* 3 */
  1    55      "guaranteed_login",				/* 4 */
  1    56      "anonymous",					/* 5 */
  1    57      "nopreempt",					/* 6 */
  1    58      "nolist",					/* 7 */
  1    59      "dialok",					/* 8 */
  1    60      "multip",					/* 9 */
  1    61      "bumping",					/* 10 */
  1    62      "brief",					/* 11 */
  1    63      "vinitproc",					/* 12 */
  1    64      "vhomedir",					/* 13 */
  1    65      "nostartup",					/* 14 */
  1    66      "no_secondary",				/* 15 */
  1    67      "no_prime",					/* 16 */
  1    68      "no_eo",					/* 17 */
  1    69      "daemon",					/* 18 */
  1    70      "",						/* 19 vdim OBSOLETE */
  1    71      "no_warning",					/* 20 */
  1    72      "igroup",					/* 21 */
  1    73      "save_pdir",					/* 22 */
  1    74      "disconnect_ok",				/* 23 */
  1    75      "save_on_disconnect");				/* 24 */
  1    76 
  1    77 dcl  ALT_USER_ATTRIBUTE_NAMES (0:24) char (20) int static options (constant) init
  1    78     ("null",					/* 0 */
  1    79      "admin",					/* 1 */
  1    80      "", "",					/* 2 - 3 */
  1    81      "guar",					/* 4 */
  1    82      "anon",					/* 5 */
  1    83      "", "",					/* 6 - 7 */
  1    84      "dial",					/* 8 */
  1    85      "multi_login",					/* 9 */
  1    86      "preempting",					/* 10 */
  1    87      "",						/* 11 */
  1    88      "v_process_overseer",				/* 12 */
  1    89      "v_home_dir",					/* 13 */
  1    90      "no_start_up",					/* 14 */
  1    91      "no_sec",					/* 15 */
  1    92      "no_primary",					/* 16 */
  1    93      "no_edit_only",				/* 17 */
  1    94      "op_login",					/* 18 */
  1    95      "",						/* 19 */
  1    96      "nowarn",					/* 20 */
  1    97      "", "", "",					/* 21 - 23 */
  1    98      "save");					/* 24 */
  1    99 
  1   100 dcl  USER_ATTRIBUTES_always_allowed bit (36) aligned int static
  1   101      options(constant) init("000000000010000000010000000000000000"b);
  1   102     /* SAT/PDT attributes not needed for user to give (brief, no_warning) */
  1   103 
  1   104 dcl  USER_ATTRIBUTES_default_in_pdt bit (36) aligned int static
  1   105      options(constant) init("000000000010000000010000000000000000"b);
  1   106     /* PDT value for (brief, no_warning) is default */
  1   107 
  1   108 dcl  USER_ATTRIBUTES_settable_by_user bit (36) aligned int static
  1   109      options(constant) init("000100000110010000010000000000000000"b);	
  1   110     /* user MIGHT set (bump, ns, brief, guar, no_warning) */
  1   111 
  2     1 /* BEGIN INCLUDE FILE ... user_abs_attributes.incl.pl1 */
  2     2 
  2     3 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  2     4 /*							       */
  2     5 /* This include file describes the attributes of an absentee job.  It is     */
  2     6 /* used by user_table_entry.incl.pl1, abs_message_format.incl.pl1            */
  2     7 /* and PIT.incl.pl1.   */
  2     8 /*							       */
  2     9 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  2    10 
  2    11 /****^  HISTORY COMMENTS:
  2    12*  1) change(86-12-08,GDixon), approve(87-07-13,MCR7741),
  2    13*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  2    14*     Separated abs_attributes from the request structure
  2    15*     (abs_message_format.incl.pl1) so that the identical structure could be
  2    16*     used in the ute structure (user_table_entry.incl.pl1).
  2    17*  2) change(87-04-19,GDixon), approve(87-07-13,MCR7741),
  2    18*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  2    19*     Added ABS_ATTRIBUTE_NAMES array.
  2    20*  3) change(87-11-11,Parisek), approve(88-02-11,MCR7849),
  2    21*     audit(88-03-22,Lippard), install(88-07-13,MR12.2-1047):
  2    22*     Added the no_start_up flag. SCP6367
  2    23*                                                   END HISTORY COMMENTS */
  2    24 
  2    25 dcl 1 user_abs_attributes		aligned based,
  2    26       2 restartable			bit (1) unaligned,	/* 1 if request may be started over from the beginning */
  2    27       2 user_deferred_until_time	bit (1) unaligned,	/* 1 if request was specified as deferred */
  2    28       2 proxy			bit (1) unaligned,	/* 1 if request submitted for someone else */
  2    29       2 set_bit_cnt			bit (1) unaligned,	/* 1 if should set bit count after every write call */
  2    30       2 time_in_gmt			bit (1) unaligned,	/* 1 if deferred_time is in GMT */
  2    31       2 user_deferred_indefinitely	bit (1) unaligned,	/* 1 if operator is to say when to run it */
  2    32       2 secondary_ok		bit (1) unaligned,	/* 1 if ok to log in as secondary foreground user */
  2    33       2 truncate_absout		bit (1) unaligned,	/* 1 if .absout is to be truncated */
  2    34       2 restarted			bit (1) unaligned,	/* 1 if job is restarted */
  2    35       2 no_start_up                     bit (1) unaligned,	/* 1 if requested -ns */
  2    36       2 attributes_pad		bit (26) unaligned;
  2    37 
  2    38 dcl  ABS_ATTRIBUTE_NAMES (10) char (28) varying int static options(constant) init(
  2    39 	"restartable",
  2    40 	"user_deferred_until_time",
  2    41 	"proxy",
  2    42 	"set_bit_cnt",
  2    43 	"time_in_gmt",
  2    44 	"user_deferred_indefinitely",
  2    45 	"secondary_ok",
  2    46 	"truncate_absout",
  2    47 	"restarted",
  2    48 	"no_start_up");
  2    49 
  2    50 /* END INCLUDE FILE ... user_abs_attributes.incl.pl1 */
  2    51 
  1   112 
  1   113 
  1   114 /* END INCLUDE FILE ... user_attributes.incl.pl1 */
       55 
  3     1 /* BEGIN INCLUDE FILE ... pit.incl.pl1 */
  3     2 
  3     3 /****^  ********************************************
  3     4*        *                                          *
  3     5*        * Copyright, (C) Honeywell Bull Inc., 1988 *
  3     6*        *                                          *
  3     7*        ******************************************** */
  3     8 
  3     9 /* Requires user_attributes.incl.pl1 */
  3    10 /* Declaration of the Process Inititalization Table  (PIT) */
  3    11 
  3    12 /****^  HISTORY COMMENTS:
  3    13*  1) change(86-03-01,Gilcrease), approve(86-03-27,MCR7370),
  3    14*     audit(86-06-25,Lippard), install(86-06-30,MR12.0-1082):
  3    15*     First comment for hcom. Modified 750430 by PG to add terminal_access_class
  3    16*     Modified 6/20/77 by J. Stern to add term_type_name Modified Feb 1980 by M.
  3    17*     B. Armstrong to implement multiple rate structures. (UNCA) Modified by R.
  3    18*     McDonald  May 1980 to include page charges, replaces cpu in iod (UNCA)
  3    19*     Modified by Benson I. Margulies November 1981 do declare pit_$, pit_ptr,
  3    20*     and unaligned character strings. Modified by E. N. Kittlitz January 1982
  3    21*     for user_attributes.incl.pl1 changes Modified by E. N. Kittlitz October
  3    22*     1982 for request_id. Modified by BIM 1984-09-12 for auth range. The max
  3    23*     copies the pds, but this is the only home of the min.
  3    24*  2) change(86-03-01,Gilcrease), approve(86-03-27,MCR7370),
  3    25*     audit(86-06-25,Lippard), install(86-06-30,MR12.0-1082):
  3    26*               Add the truncate_absout and restarted bits for the
  3    27*               -truncate .absout SCP 6297, version 3.
  3    28*  3) change(86-12-11,GDixon), approve(87-07-16,MCR7741),
  3    29*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  3    30*     Changed structure under pit.abs_attributes to use like structure in
  3    31*     abs_attributes.incl.pl1.  This allows the same attributes to be used
  3    32*     in abs_message_format.incl.pl1 and user_table_entry.incl.pl1 as well as
  3    33*     this include file.
  3    34*  4) change(88-06-03,Parisek), approve(88-06-10,MCR7920),
  3    35*     audit(88-06-23,Hunter), install(87-07-05,MR12.2-1053):
  3    36*     Remove "pitmsg" in END comment string.  pitmsg.incl.pl1 is no longer a
  3    37*     name of pit.incl.pl1.
  3    38*  5) change(88-07-11,Parisek), approve(88-07-11,MCR7849),
  3    39*     audit(88-07-03,Lippard), install(88-07-13,MR12.2-1047):
  3    40*     Removed the ringpad element and added the min_ring & max_ring elements so
  3    41*     users may access their lowest and/or highest possible login ring value.
  3    42*     SCP6367.
  3    43*                                                   END HISTORY COMMENTS */
  3    44 
  3    45 
  3    46 /* format: style4 */
  3    47 declare  pit_$ bit (36) aligned external static;
  3    48 declare  pit_ptr pointer;
  3    49 
  3    50 dcl  1 pit aligned based (pit_ptr),
  3    51        2 version fixed bin,				/* indicates which version of the pit */
  3    52        2 process_type fixed bin,			/* initializer, interactive, or absentee process */
  3    53        2 login_responder char (64) unal,		/* path name of login responder */
  3    54 
  3    55 /*  All of these are going to be word aligned whether or not they are declared aligned,
  3    56*   and unaligning them cleans up code in many places */
  3    57 
  3    58        2 homedir char (64) unal,			/* path name of home directory */
  3    59        2 project char (28) unal,			/* name of this process' project affiliation */
  3    60        2 account char (32) unal,			/* name of account to which this process is charged */
  3    61        2 n_processes fixed bin,			/* number of previous processes for this session */
  3    62        2 login_time fixed bin (71),			/* clock time at login */
  3    63        2 proc_creation_time fixed bin (71),		/* clock time at creation of this process */
  3    64        2 old_proc_cpu fixed bin (71),			/* cpu time used by previous processes in this session */
  3    65        2 user_weight fixed bin,			/* weight of this process */
  3    66        2 anonymous fixed bin,				/* 1 if anonymous user */
  3    67        2 login_name char (28) unal,			/* name of user given at login */
  3    68        2 logout_pid bit (36),				/* process id of answering service */
  3    69        2 logout_channel fixed bin (71),			/* channel for signalling logouts to answering service */
  3    70        2 group char (8) unal,				/* party group */
  3    71        2 min_ring fixed bin,				/* min ring */
  3    72        2 max_ring fixed bin,				/* max ring */
  3    73        2 at like user_attributes aligned,		/* include user_attributes.incl.pl1 */
  3    74        2 whox fixed bin,				/* this process's index in whotab (or 0) */
  3    75        2 outer_module char (32) unaligned,
  3    76        2 pad (2) fixed bin,
  3    77        2 dont_call_init_admin bit (1) aligned,		/* Call process_overseer_ directly */
  3    78        2 terminal_access_class bit (72) aligned,		/* access class of user's terminal */
  3    79        2 dollar_charge float bin,			/* Month-to-date expenditure */
  3    80        2 dollar_limit float bin,			/* Limit stop on usage */
  3    81        2 shift_limit (0:7) float bin,			/* Stops on each shift's usage */
  3    82        2 logins fixed bin,				/* Number of logins this month */
  3    83        2 crashes fixed bin,				/* Number of sessions crashed */
  3    84        2 interactive (0:7),				/* interactive usage by shift */
  3    85          3 charge float bin,				/* Total charge */
  3    86          3 xxx fixed bin,
  3    87          3 cpu fixed bin (71),			/* CPU usage in microseconds */
  3    88          3 core fixed bin (71),			/* Memory usage in page-microseconds */
  3    89          3 connect fixed bin (71),			/* Connect time in microseconds */
  3    90          3 io_ops fixed bin (71),			/* Terminal I/O operations */
  3    91        2 absentee (4),				/* Absentee usage by queue */
  3    92          3 charge float bin,				/* Total absentee charge */
  3    93          3 jobs fixed bin,				/* Number of jobs */
  3    94          3 cpu fixed bin (71),			/* CPU usage in microseconds */
  3    95          3 memory fixed bin (71),			/* Memory usage in mu */
  3    96        2 iod (4),					/* IO Daemon usage, by queue */
  3    97          3 charge float bin,				/* Total charge */
  3    98          3 pieces fixed bin,				/* Number of requests */
  3    99          3 pad fixed bin (35),
  3   100          3 pages fixed bin (35),			/* number of pages output */
  3   101          3 lines fixed bin (71),			/* Record count */
  3   102        2 devices (16) float bin,			/* Usage of attached devices */
  3   103        2 time_last_reset fixed bin (71),		/* time last updated the PDT */
  3   104        2 absolute_limit float bin,			/* Limit, not reset monthly */
  3   105        2 absolute_spent float bin,			/* Spending against this */
  3   106        2 absolute_cutoff fixed bin (71),		/* Spending will be reset on this date */
  3   107        2 absolute_increm fixed bin,			/* .. time increment code. 0 = don't reset */
  3   108        2 rs_number fixed bin (9) unsigned unaligned,	/* rate structure number (0= default rates) */
  3   109        2 pad1a fixed bin (27) unsigned unaligned,		/* remainder of word */
  3   110        2 request_id fixed bin (71),			/* absentee request id */
  3   111        2 authorization_range (2) bit (72) aligned,
  3   112        2 pad1 (73) fixed bin,				/* extra space */
  3   113        2 charge_type fixed bin,			/* device charge type of console */
  3   114        2 term_type_name char (32) unal,			/* terminal type name */
  3   115        2 line_type fixed bin,				/* line type of user's console */
  3   116        2 tty_type fixed bin,				/* old terminal type (obsolete, kept for compatibility) */
  3   117        2 service_type fixed bin,			/* type of service console is performing */
  3   118        2 tty_answerback char (4) unaligned,		/* original answerback of user's console */
  3   119        2 old_tty char (6),				/* (obsolete) attachment name of user's console */
  3   120        2 standby fixed bin,				/* 1 if standby user */
  3   121        2 login_line char (120) unal,			/* line typed at login */
  3   122        2 cant_bump_until fixed bin (71),		/* cannot be preempted until this time (0 for abs) */
  3   123        2 input_seg char (168) unal,			/* path name of absentee input file */
  3   124        2 output_seg char (168) unal,			/* path name of absentee output file */
  3   125        2 max_cpu_time fixed bin,			/* max number of seconds allowed to this absentee proc */
  3   126        2 abs_queue fixed bin,				/* absentee queue if absentee, else -1 */
  3   127        2 abs_attributes aligned like user_abs_attributes,	/* include abs_attributes.incl.pl1 */
  3   128        2 arg_info_ptr fixed bin (18) unsigned,		/* Relative pointer to information on absentee args. */
  3   129        2 old_proc_core fixed bin (71),			/* Memory usage by previous processes in this session */
  3   130        2 old_proc_io_ops fixed bin (71),		/* I/O operations from previous processes in this session */
  3   131        2 tty char (32) unaligned,			/* Attachment name of users channel */
  3   132        2 start_arg_info fixed bin;			/* Put absentee args information here. */
  3   133 
  3   134 
  3   135 /* Structure to contain information on absentee arguments */
  3   136 dcl  1 arg_info aligned based,
  3   137        2 arg_count fixed bin,				/* Number of arguments for replacement in absentee segment */
  3   138        2 ln_args fixed bin,				/* Length of string containing arguments. */
  3   139        2 arg_lengths (25 refer (arg_info.arg_count)) fixed bin, /* Array of argument lengths */
  3   140        2 args char (128 refer (arg_info.ln_args)) unal;
  3   141 						/* Args used for replacement in absentee control segment. */
  3   142 
  3   143 declare PIT_version_3 fixed bin int static options (constant) init (3);
  3   144 
  3   145 /* END INCLUDE FILE ... pit.incl.pl1 */
       56 
       57 
       58 /*   */
       59 /* set arguments for dfast_ */
       60 
       61 	call hcs_$make_seg ("", "pit", "", 01000b, pp, code);
       62 	tty_string = pp -> pit.tty;
       63 	i = length (pp -> pit.homedir) + 1 - verify (reverse (pp -> pit.homedir), " ");
       64 	home_dir_string = pp -> pit.homedir;
       65 	person_id_string = pp -> pit.login_name;
       66 	project_id_string = pp -> pit.project;
       67 
       68 /* print message of the day, if the user didn't login with -brief option */
       69 
       70 	if ^pp -> pit.at.brief then do;
       71 	     call hcs_$initiate_count (">system_control_1", "message_of_the_day", "", bit_count, 1, mothd_ptr, code);
       72 	     if mothd_ptr ^= null then do;
       73 		call iox_$put_chars (iox_$user_output, mothd_ptr, divide (bit_count, 9, 21, 0), code);
       74 		call hcs_$terminate_noname (mothd_ptr, code);
       75 	     end;
       76 	end;
       77 
       78 	call condition_ ("any_other", standard_default_handler_);
       79 	call hcs_$terminate_noname (pp, code);
       80 
       81 	call hcs_$initiate_search_rules (addr(search_rules), code);
       82 	if code ^= 0 then call com_err_ (code, "fast", "Can't set search rules");
       83 	call iox_$control (iox_$user_io, "quit_enable", addr(junk), code);
       84 	call dfast_ (person_id_string, substr (home_dir_string, 1, i), project_id_string, tty_string, logout_arg);
       85 
       86 	if logout_arg = "-hold" then call logout (logout_arg);
       87 	else call logout;
       88 
       89 	return;
       90 
       91      end dfast_process_overseer_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/04/00  1648.1  dfast_process_overseer_.pl1       >udd>sm>ds>w>ml>dfast_process_overseer_.pl1
55           1    08/06/87  1013.6  user_attributes.incl.pl1          >ldd>incl>user_attributes.incl.pl1
1-112        2    07/14/88  2115.0  user_abs_attributes.incl.pl1      >ldd>incl>user_abs_attributes.incl.pl1
56           3    07/14/88  2115.0  pit.incl.pl1                      >ldd>incl>pit.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
at                      110            based           structure                level 2 dcl 3-50
bit_count                       000100 automatic       fixed bin(24,0)          dcl 17 set ref 71* 73 73
brief                   110(10)        based           bit(1)                   level 3 packed packed unaligned dcl 3-50 ref 70
code                            000101 automatic       fixed bin(35,0)          dcl 18 set ref 61* 71* 73* 74* 79* 81* 82 82* 83*
com_err_                        000012 constant        entry                    external dcl 37 ref 82
condition_                      000010 constant        entry                    external dcl 36 ref 78
dfast_                          000014 constant        entry                    external dcl 38 ref 84
hcs_$initiate_count             000016 constant        entry                    external dcl 39 ref 71
hcs_$initiate_search_rules      000020 constant        entry                    external dcl 41 ref 81
hcs_$make_seg                   000022 constant        entry                    external dcl 42 ref 61
hcs_$terminate_noname           000024 constant        entry                    external dcl 43 ref 74 79
home_dir_string                 000102 automatic       char(168)                packed unaligned dcl 19 set ref 64* 84 84
homedir                  22            based           char(64)                 level 2 packed packed unaligned dcl 3-50 ref 63 63
                                                                                  64
i                               000154 automatic       fixed bin(17,0)          dcl 20 set ref 63* 84 84
iox_$control                    000026 constant        entry                    external dcl 45 ref 83
iox_$put_chars                  000030 constant        entry                    external dcl 47 ref 73
iox_$user_io                    000032 external static pointer                  dcl 48 set ref 83*
iox_$user_output                000034 external static pointer                  dcl 49 set ref 73*
junk                            000155 automatic       fixed bin(6,0)           dcl 21 set ref 83 83
length                                                 builtin function         dcl 32 ref 63
login_name               72            based           char(28)                 level 2 packed packed unaligned dcl 3-50 ref 65
logout                          000036 constant        entry                    external dcl 50 ref 86 87
logout_arg                      000156 automatic       char(5)                  packed unaligned dcl 22 set ref 84* 86 86*
mothd_ptr                       000160 automatic       pointer                  dcl 23 set ref 71* 72 73* 74*
names                     1     000203 automatic       char(168)                initial array level 2 dcl 27 set ref 27* 27* 27* 27*
null                                                   builtin function         dcl 32 ref 72
number                          000203 automatic       fixed bin(17,0)          initial level 2 dcl 27 set ref 27*
person_id_string                000162 automatic       char(28)                 packed unaligned dcl 24 set ref 65* 84*
pit                                    based           structure                level 1 dcl 3-50
pp                              000172 automatic       pointer                  dcl 25 set ref 61* 62 63 63 64 65 66 70 79*
project                  42            based           char(28)                 level 2 packed packed unaligned dcl 3-50 ref 66
project_id_string               000174 automatic       char(28)                 packed unaligned dcl 26 set ref 66* 84*
reverse                                                builtin function         dcl 32 ref 63
search_rules                    000203 automatic       structure                level 1 dcl 27 set ref 81 81
standard_default_handler_       000040 constant        entry                    external dcl 51 ref 78 78
substr                                                 builtin function         dcl 32 ref 84 84
tty                     730            based           char(32)                 level 2 packed packed unaligned dcl 3-50 ref 62
tty_string                      000454 automatic       char(6)                  packed unaligned dcl 30 set ref 62* 84*
user_abs_attributes                    based           structure                level 1 dcl 2-25
user_attributes                        based           structure                level 1 dcl 1-21
verify                                                 builtin function         dcl 32 ref 63

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
ABS_ATTRIBUTE_NAMES                    internal static varying char(28)         initial array dcl 2-38
ALT_USER_ATTRIBUTE_NAMES               internal static char(20)                 initial array packed unaligned dcl 1-77
PIT_version_3                          internal static fixed bin(17,0)          initial dcl 3-143
USER_ATTRIBUTES_always_allowed         internal static bit(36)                  initial dcl 1-100
USER_ATTRIBUTES_default_in_pdt         internal static bit(36)                  initial dcl 1-104
USER_ATTRIBUTES_settable_by_user       internal static bit(36)                  initial dcl 1-108
USER_ATTRIBUTE_NAMES                   internal static char(20)                 initial array packed unaligned dcl 1-50
arg_info                               based           structure                level 1 dcl 3-136
index                                                  builtin function         dcl 32
iox_$attach_iocb                000000 constant        entry                    external dcl 44
iox_$open                       000000 constant        entry                    external dcl 46
pit_$                                  external static bit(36)                  dcl 3-47
pit_ptr                                automatic       pointer                  dcl 3-48
terminate_process_              000000 constant        entry                    external dcl 52

NAME DECLARED BY EXPLICIT CONTEXT.
dfast_process_overseer_         000066 constant        entry                    external dcl 13

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 81 81 83 83
divide                                                 builtin function         ref 73 73

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       742        1004     562         752
Length      1244     562        42         223     157           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
dfast_process_overseer_             372 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
dfast_process_overseer_  000100 bit_count                   dfast_process_overseer_
                         000101 code                        dfast_process_overseer_
                         000102 home_dir_string             dfast_process_overseer_
                         000154 i                           dfast_process_overseer_
                         000155 junk                        dfast_process_overseer_
                         000156 logout_arg                  dfast_process_overseer_
                         000160 mothd_ptr                   dfast_process_overseer_
                         000162 person_id_string            dfast_process_overseer_
                         000172 pp                          dfast_process_overseer_
                         000174 project_id_string           dfast_process_overseer_
                         000203 search_rules                dfast_process_overseer_
                         000454 tty_string                  dfast_process_overseer_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_char_temp     call_ext_out_desc   call_ext_out        return_mac          shorten_stack       ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      condition_                    dfast_                        hcs_$initiate_count
hcs_$initiate_search_rules    hcs_$make_seg                 hcs_$terminate_noname         iox_$control
iox_$put_chars                logout                        standard_default_handler_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
iox_$user_io                  iox_$user_output




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     13 000065        27 000073        61 000132        62 000171        63 000176        64 000213        65 000216
     66 000221        70 000224        71 000227        72 000303        73 000307        74 000327        78 000340
     79 000366        81 000377        82 000412        83 000442        84 000474        86 000533        87 000552
     89 000557


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
