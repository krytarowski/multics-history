	COMPILATION LISTING OF SEGMENT rdm_debug_requests_
	Compiled by: Multics PL/I Compiler, Release 28e, of February 14, 1985
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 05/22/86  1041.6 mst Thu
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 
        7 /* format: off */
        8 
        9 /* Debugging requests for the read_mail subsystem */
       10 
       11 /* Created:  October 1982 by G. Palter */
       12 /* Modified: 13 September 1983 by G. Palter as part of the conversion of read_mail to the new mail system interface */
       13 
       14 /* format: on,style4,delnl,insnl,ifthenstmt,ifthen */
       15 
       16 
       17 rdm_debug_requests_:
       18      procedure (P_sci_ptr, P_rdm_invocation_ptr);
       19 
       20 	put file (rdm_debug_) data;			/* forces a full symbol table ... */
       21 
       22 	return;					/* ... but not really an entrypoint */
       23 
       24 
       25 dcl  P_sci_ptr pointer parameter;
       26 dcl  P_rdm_invocation_ptr pointer parameter;
       27 
       28 dcl  sci_ptr pointer;
       29 
       30 dcl  argument character (argument_lth) unaligned based (argument_ptr);
       31 dcl  argument_ptr pointer;
       32 dcl  argument_lth fixed binary (21);
       33 dcl  (n_arguments, argument_idx) fixed binary;
       34 
       35 dcl  new_debug_mode bit (1) aligned;
       36 dcl  code fixed binary (35);
       37 
       38 dcl  rdm_debug_ file stream internal;
       39 
       40 dcl  error_table_$bad_arg fixed binary (35) external;
       41 dcl  error_table_$badopt fixed binary (35) external;
       42 
       43 dcl  rdm_set_request_tables_ entry (pointer, fixed binary (35));
       44 dcl  ssu_$abort_line entry () options (variable);
       45 dcl  ssu_$arg_count entry (pointer, fixed binary);
       46 dcl  ssu_$arg_ptr entry (pointer, fixed binary, pointer, fixed binary (21));
       47 dcl  ssu_$set_debug_mode entry (pointer, bit (1) aligned);
       48 dcl  probe entry () options (variable);
       49 
       50 dcl  index builtin;
       51 
       52 /* The "debug_mode" request: enables/disables read_mail debugging facilities */
       53 
       54 debug_mode:
       55      entry (P_sci_ptr, P_rdm_invocation_ptr);
       56 
       57 	sci_ptr = P_sci_ptr;
       58 	rdm_invocation_ptr = P_rdm_invocation_ptr;
       59 
       60 	new_debug_mode = "1"b;			/* defaults to turn on debug_mode */
       61 
       62 	call ssu_$arg_count (sci_ptr, n_arguments);
       63 
       64 	do argument_idx = 1 to n_arguments;
       65 	     call ssu_$arg_ptr (sci_ptr, argument_idx, argument_ptr, argument_lth);
       66 	     if index (argument, "-") = 1 then		/*  a control argument */
       67 		if argument = "-on" then new_debug_mode = "1"b;
       68 		else if argument = "-off" then new_debug_mode = "0"b;
       69 		else call ssu_$abort_line (sci_ptr, error_table_$badopt, """^a""", argument);
       70 	     else call ssu_$abort_line (sci_ptr, error_table_$bad_arg,
       71 		     "This request only accepts control arguments.  ""^a""", argument);
       72 	end;
       73 
       74 	rdm_invocation.debug_mode = new_debug_mode;
       75 
       76 	call ssu_$set_debug_mode (sci_ptr, (rdm_invocation.debug_mode));
       77 						/* keep ssu_ in step */
       78 
       79 	call rdm_set_request_tables_ (rdm_invocation_ptr, code);
       80 	if code ^= 0 then call ssu_$abort_line (sci_ptr, code, "Setting subsystem request tables.");
       81 
       82 	return;
       83 
       84 /* The "probe" request: invokes the probe symbolic debugger in a stack frame with all relavent data structure available */
       85 
       86 probe:
       87      entry (P_sci_ptr, P_rdm_invocation_ptr);
       88 
       89 	sci_ptr = P_sci_ptr;
       90 	rdm_invocation_ptr = P_rdm_invocation_ptr;
       91 
       92 	call ssu_$arg_count (sci_ptr, n_arguments);
       93 	if n_arguments ^= 0 then call ssu_$abort_line (sci_ptr, 0, "No arguments may be supplied.");
       94 
       95 	mailbox_ptr = rdm_invocation.mailbox_ptr;	/* make it easy to access the mailbox ... */
       96 
       97 	if rdm_invocation.current_message ^= 0 then	/* ... and the current message (if any) */
       98 	     if message_list.messages (rdm_invocation.current_message).message_idx > 0 then
       99 		message_ptr =
      100 		     mailbox.messages (message_list.messages (rdm_invocation.current_message).message_idx)
      101 		     .message_ptr;
      102 	     else message_ptr = null ();
      103 	else message_ptr = null ();
      104 
      105 	call probe ();
      106 
      107 	return;
      108 
  1     1 /* BEGIN INCLUDE FILE ... rdm_invocation.incl.pl1 */
  1     2 /* Created:  September 1983 by G. Palter from portions of emf_info.incl.pl1 */
  1     3 
  1     4 /* Definition of a single invocation of read_mail */
  1     5 
  1     6 dcl  1 rdm_invocation aligned based (rdm_invocation_ptr),
  1     7        2 type character (8),				/* defines this structure as a read_mail invocation */
  1     8        2 sci_ptr pointer,				/* -> subsystem utilities invocation data */
  1     9        2 area_ptr pointer,				/* -> area to be used by the subsystem */
  1    10 
  1    11        2 mailbox_info,
  1    12          3 mailbox_ptr pointer,			/* -> mailbox structure being examined by this invocation */
  1    13          3 message_list_ptr pointer,			/* -> list of read_mail specific information retained for each
  1    14*						   message (eg: the "processed" flag) */
  1    15          3 message_chains,				/*the various message chains ... */
  1    16 	 4 all pointer,				/* ... all unexpunged messages */
  1    17 	 4 undeleted pointer,			/* ... all undeleted messages */
  1    18 	 4 deleted pointer,				/* ... all deleted messages */
  1    19 	 4 marked pointer,				/* ... messages to be processed by the current request */
  1    20 	 4 marked_as_original pointer,		/* ... messages being processed by a reply/forward request */
  1    21          3 mailbox_name character (168) varying,		/* name of the mailbox (your mailbox/logbox/pathname) */
  1    22 
  1    23        2 current_message fixed binary,			/* index of the current message; 0 => no current message */
  1    24 
  1    25        2 last_search_buffer,				/* describes the buffer where read_mail constructs the ... */
  1    26          3 buffer_ptr pointer,			/* ... the printed representation of messages in order ... */
  1    27          3 buffer_used fixed binary (21),		/* ... to speed up regular expression searching */
  1    28 
  1    29        2 global_options,				/* command line options affecting all of read_mail ... */
  1    30          3 flags,
  1    31 	 4 acknowledge bit (1) unaligned,		/* ... ON => acknowledge messages after printing */
  1    32 	 4 brief bit (1) unaligned,			/* ... ON => shorten some messages and omit others */
  1    33 	 4 debug_mode bit (1) unaligned,		/* ... ON => enable debugging features */
  1    34 	 4 pad bit (33) unaligned,
  1    35 
  1    36        2 print_options,				/* command line options affecting the print request ... */
  1    37          3 formatting_mode fixed binary,		/* ... output mode for the message header, etc. */
  1    38 
  1    39        2 reply_options,				/* command line options affecting the reply request ... */
  1    40          3 line_length fixed binary,			/* ... line length to be used by send_mail for filling */
  1    41          3 indentation fixed binary,			/* ... amount to indent original text when included */
  1    42          3 flags,
  1    43 	 4 include_original bit (1) unaligned,		/* ... ON => include original message text in the reply */
  1    44 	 4 include_authors bit (1) unaligned,		/* ... ON => include original authors as recipients */
  1    45 	 4 include_recipients bit (1) unaligned,	/* ... ON => include original recipients as recipients */
  1    46 	 4 include_self bit (2) unaligned,		/* ... ON => include this user as a recipient of the reply if
  1    47*						   selected by include_authors/include_recipients */
  1    48 	 4 fill_control bit (2) unaligned,		/* ... controls message filling by send_mail */
  1    49 	 4 pad bit (29) unaligned;
  1    50 
  1    51 dcl  RDM_INVOCATION character (8) static options (constant) initial ("rdm_0009");
  1    52 
  1    53 dcl  rdm_invocation_ptr pointer;
  1    54 
  1    55 dcl  rdm_area area based (rdm_invocation.area_ptr);
  1    56 
  1    57 
  1    58 /* Defined settings for reply_options.include_self */
  1    59 
  1    60 dcl (DEFAULT_INCLUDE_SELF	initial ("00"b),		/* neither -include_self nor -no_include_self given */
  1    61      NO_INCLUDE_SELF	initial ("01"b),		/* -no_include_self explicitly given */
  1    62      INCLUDE_SELF		initial ("10"b))		/* -include_self explicitly given */
  1    63 	bit (2) aligned static options (constant);
  1    64 
  1    65 /* END INCLUDE FILE ... rdm_invocation.incl.pl1 */
      109 
      110 
  2     1 /* BEGIN INCLUDE FILE ... rdm_message_list.incl.pl1 */
  2     2 /* Created:  September 1983 by G. Palter */
  2     3 
  2     4 /* Definition of per-message data maintained by read_mail:  This list is maintined in parallel to the mailbox structure by
  2     5*   read_mail's interface to the mail_system_ mailbox manager (rdm_mailbox_interface_).  It serves two purposes:
  2     6*      (1) It provides a place to store read_mail-specific per-message data (ie: the processed flag).
  2     7*      (2) It provides the ability to provide arbitrary mappings between read_mail message numbers and the actual indeces
  2     8*	within the mailbox structure.  This mapping allows read_mail to preserve its message numbers for an invocation
  2     9*	even if messages are expunged which causes them to disappear from the mailbox structure (NB: the "expunge"
  2    10*	request is not yet implemented).  This mapping also allows read_mail to present the messages in the mailbox to
  2    11*	the user in a different order than they actually appear in the mailbox (eg: sorted by date/time created) */
  2    12 
  2    13 dcl  1 message_list aligned based (rdm_invocation.message_list_ptr),
  2    14        2 n_messages fixed binary,			/* # of messages known to read_mail at present */
  2    15        2 pad bit (36),
  2    16        2 messages (message_list_n_messages refer (message_list.n_messages)),
  2    17          3 message_idx fixed binary,			/* index of this message in the mailbox structure */
  2    18          3 flags,
  2    19 	 4 processed bit (1) unaligned,		/* ON => this message may be deleted without query */
  2    20 	 4 pad bit (35) unaligned,
  2    21          3 search_text,				/* describes copy of messages used for regexp searches */
  2    22 	 4 search_text_ptr pointer,			/* ... -> the saved printed represetnation */
  2    23 	 4 search_text_lth fixed binary (21);		/* ... length of said representation in characters */
  2    24 
  2    25 dcl  message_list_n_messages fixed binary;
  2    26 
  2    27 /* END INCLUDE FILE ... rdm_message_list.incl.pl1 */
      111 
      112 
  3     1 /* BEGIN INCLUDE FILE ... rdm_message_chains.incl.pl1 */
  3     2 /* Created:  September 1983 by G. Palter */
  3     3 
  3     4 
  3     5 /* Definition of a read_mail message chain */
  3     6 
  3     7 dcl  1 message_chain aligned based (message_chain_ptr),
  3     8        2 n_messages fixed binary,			/* # of messages in the chain */
  3     9        2 messages (message_list.n_messages) fixed binary;	/* read_mail message numbers of the messages in the chain */
  3    10 
  3    11 dcl  message_chain_ptr pointer;
  3    12 
  3    13 
  3    14 /* Message chains maintained by read_mail's interface to the mail_system_ mailbox manager (rdm_mailbox_interface_) --
  3    15*      (1) The first chain is a list of all messages in the mailbox which have not yet been expunged and consists of all
  3    16*	messages whether or not they have been marked for deletion.
  3    17*      (2) The second chain is a list of all messages in the mailbox which have not been marked for later deletion.
  3    18*      (3) The third chain is a list of all messages which have been marked for later deletion.
  3    19*   The message specifier parser uses one of these three chains as the basis for selecting the messages to be processed by
  3    20*   a request based on the use of "-include_deleted", "-only_non_deleted", or "-only_deleted", respectively; in this way,
  3    21*   the amount of code in the parser which must distinguish between these three types of selections is minimized */
  3    22 
  3    23 dcl  1 all_chain aligned based (rdm_invocation.message_chains.all) like message_chain;
  3    24 dcl  1 undeleted_chain aligned based (rdm_invocation.message_chains.undeleted) like message_chain;
  3    25 dcl  1 deleted_chain aligned based (rdm_invocation.message_chains.deleted) like message_chain;
  3    26 
  3    27 
  3    28 /* The marked chain is the list of messages that are to be processed by the current request */
  3    29 
  3    30 dcl  1 marked_chain aligned based (rdm_invocation.message_chains.marked) like message_chain;
  3    31 
  3    32 
  3    33 /* The marked as original chain is the list of messages that are being processed by a reply or forward request:  This
  3    34*   chain is used to define the default set of messages to be processed by the various send_mail "original" requests and
  3    35*   forward "original" sub-requests */
  3    36 
  3    37 dcl  1 marked_as_original_chain aligned based (rdm_invocation.message_chains.marked_as_original) like message_chain;
  3    38 
  3    39 
  3    40 /* Definition of the acceptable message selection criteria */
  3    41 
  3    42 dcl (ALL_MESSAGES		initial (1),		/* all messages: -include_deleted */
  3    43      NON_DELETED_MESSAGES	initial (2),		/* only undeleted messages: -only_non_deleted (default) */
  3    44      ONLY_DELETED_MESSAGES	initial (3))		/* only deleted messages: -only_deleted */
  3    45 	fixed binary static options (constant);
  3    46 
  3    47 /* END INCLUDE FILE ... rdm_message_chains.incl.pl1 */
      113 
      114 
  4     1 /* BEGIN INCLUDE FILE ... mlsys_mailbox.incl.pl1 */
  4     2 /* Created:  April 1983 by G. Palter */
  4     3 
  4     4 /* Definition of a mailbox as used by the Multics Mail System */
  4     5 
  4     6 dcl  1 mailbox aligned based (mailbox_ptr),
  4     7        2 version character (8) unaligned,
  4     8        2 reserved bit (144),				/* for exclusive use of the mail system */
  4     9        2 mailbox_address pointer,			/* mail system address of this mailbox */
  4    10        2 mailbox_dirname character (168) unaligned,	/* directory containing this mailbox */
  4    11        2 mailbox_ename character (32) unaligned,		/* entry name of this mailbox (includes ".mbx") */
  4    12        2 mailbox_type fixed binary,			/* type of mailbox (see below) */
  4    13        2 mode bit (36),				/* user's effective extended access to this mailbox */
  4    14        2 flags,
  4    15          3 salvaged bit (1) unaligned,			/* ON => this mailbox has been salvaged since last open */
  4    16          3 reserved bit (35) unaligned,			/* for exclusive use of the mail system */
  4    17        2 message_selection_mode fixed binary,		/* types of messages read: all/ordinary/interactive */
  4    18        2 sender_selection_mode fixed binary,		/* whose messages were read: all/own/not-own */
  4    19        2 message_reading_level fixed binary,		/* how much of each message read: keys/messages */
  4    20        2 n_messages fixed binary,			/* total # of messages in this mailbox structure */
  4    21        2 n_ordinary_messages fixed binary,		/* ... # of ordinary messages here */
  4    22        2 n_interactive_messages fixed binary,		/* ... # of interactive messages here */
  4    23        2 n_deleted_messages fixed binary,		/* ... # of messages here marked for later deletion */
  4    24        2 messages (mailbox_n_messages refer (mailbox.n_messages)),
  4    25          3 key bit (72),				/* unique key to read this message if not already read */
  4    26          3 message_ptr pointer;			/* -> the message structure */
  4    27 
  4    28 dcl  MAILBOX_VERSION_2 character (8) static options (constant) initial ("mlsmbx02");
  4    29 
  4    30 dcl  mailbox_ptr pointer;
  4    31 
  4    32 dcl  mailbox_n_messages fixed binary;			/* for exclusive use of the mail system */
  4    33 
  4    34 
  4    35 /* Types of mailboxes distinguished by the mail system */
  4    36 
  4    37 dcl (USER_DEFAULT_MAILBOX	initial (1),		/* the user's default mailbox for receiving mail */
  4    38      USER_LOGBOX		initial (2),		/* the user's logbox */
  4    39      SAVEBOX		initial (3),		/* a savebox */
  4    40      OTHER_MAILBOX		initial (4))		/* any other type of mailbox */
  4    41 	fixed binary static options (constant);
  4    42 
  4    43 /* END INCLUDE FILE ... mlsys_mailbox.incl.pl1 */
      115 
      116 
  5     1 /* BEGIN INCLUDE FILE ... mlsys_message.incl.pl1 */
  5     2 
  5     3 
  5     4 /****^  HISTORY COMMENTS:
  5     5*  1) change(85-12-19,Herbst), approve(86-03-25,MCR7367),
  5     6*     audit(86-04-28,Margolin), install(86-05-22,MR12.0-1059):
  5     7*     Added seen switch to message.
  5     8*                                                   END HISTORY COMMENTS */
  5     9 
  5    10 
  5    11 /* Created:  June 1983 by G. Palter */
  5    12 
  5    13 /* Definition of a message as used by the Multics Mail System */
  5    14 
  5    15 dcl  1 message aligned based (message_ptr),
  5    16        2 version character (8) unaligned,
  5    17        2 reserved bit (144),				/* for exclusive use of the mail system */
  5    18        2 n_reply_references fixed binary,		/* # of messages for which this is a reply */
  5    19        2 n_user_fields fixed binary,			/* # of non-standard header fields in this message */
  5    20        2 n_redistributions fixed binary,		/* # of times this message has been forwarded */
  5    21        2 n_body_sections fixed binary,			/* # of sections in the body */
  5    22        2 flags,
  5    23          3 interactive bit (1) unaligned,		/* ON => this is an interactive message */
  5    24          3 can_be_deleted bit (1) unaligned,		/* ON => the user can delete this message if desired */
  5    25          3 marked_for_deletion bit (1) unaligned,		/* ON => message will be deleted when mailbox is closed */
  5    26          3 must_be_acknowledged bit (1) unaligned,	/* ON => an ACK should be generated when message is read */
  5    27          3 seen bit (1) unaligned,			/* ON => user has printed message at least once */
  5    28          3 reserved bit (31) unaligned,			/* for use by the mail system */
  5    29        2 pad bit (36),
  5    30        2 envelope like message_envelope,		/* who/when/how the message was mailed & delivered */
  5    31        2 header,
  5    32          3 message_id bit (72),			/* ID of this message (same value for all copies) */
  5    33          3 access_class bit (72),			/* AIM access class of this message */
  5    34          3 date_time_created fixed binary (71),		/* date/time this message was composed */
  5    35          3 from pointer,				/* -> address list of author(s) of the message */
  5    36          3 reply_to pointer,				/* -> address list of recipients for reply (if not authors) */
  5    37          3 to pointer,				/* -> address list of primary recipients */
  5    38          3 cc pointer,				/* -> address list of secondary recipients */
  5    39          3 bcc pointer,				/* -> address list of blind recipients */
  5    40          3 subject like message_text_field,		/* subject of the message */
  5    41          3 reply_references pointer,			/* -> list of messages for which this message is a reply */
  5    42          3 user_fields_list pointer,			/* -> list of user-defined fields in this message */
  5    43        2 redistributions_list pointer,			/* -> redistributions list for this message */
  5    44        2 body,
  5    45          3 total_lines fixed binary (21),		/* total # of lines in the body or -1 if indeterminate */
  5    46          3 pad bit (36),
  5    47          3 body_sections (message_n_body_sections refer (message.n_body_sections)) like message_body_section;
  5    48 
  5    49 dcl  MESSAGE_VERSION_2 character (8) static options (constant) initial ("mlsmsg02");
  5    50 
  5    51 dcl  message_subject character (message.header.subject.text_lth) unaligned based (message.header.subject.text_ptr);
  5    52 
  5    53 dcl  message_ptr pointer;
  5    54 
  5    55 dcl (message_n_body_sections, message_trace_n_relays, message_n_redistributions, message_n_user_fields,
  5    56      message_references_list_n_references)
  5    57 	fixed binary;				/* for exclusive use of the mail system */
  5    58 
  5    59 /* Definition of a message envelope: describes when, by whom, and by what route the message was mailed */
  5    60 
  5    61 dcl  1 message_envelope aligned based (message_envelope_ptr),
  5    62        2 date_time_mailed fixed binary (71),		/* date/time this message was entered into the mail system */
  5    63        2 sender pointer,				/* -> address of entity that mailed the message */
  5    64        2 trace pointer,				/* -> message_trace describing how it got here */
  5    65        2 date_time_delivered fixed binary (71),		/* date/time this message was delivered */
  5    66        2 delivered_by pointer,			/* -> address of entity that delivered the message */
  5    67        2 acknowledge_to pointer;			/* -> address of entity to receive ACK when message is read */
  5    68 
  5    69 dcl  message_envelope_ptr pointer;
  5    70 
  5    71 
  5    72 /* Structure used in calls to mail_system_daemon_ entrypoints which manipulate the message envelope */
  5    73 
  5    74 dcl  1 message_envelope_parameter aligned based (message_envelope_parameter_ptr),
  5    75        2 pad pointer,				/* forces even word alignment */
  5    76        2 version character (8) unaligned,
  5    77        2 envelope like message_envelope;
  5    78 
  5    79 dcl  MESSAGE_ENVELOPE_PARAMETER_VERSION_2 character (8) static options (constant) initial ("mlsenv02");
  5    80 
  5    81 dcl  message_envelope_parameter_ptr pointer;
  5    82 
  5    83 
  5    84 /* Definition of a message trace: describes the route and each relay operation by which a message was passed through the
  5    85*   networks to reach this recipient */
  5    86 
  5    87 dcl  1 message_trace aligned based (message_trace_ptr),
  5    88        2 version character (8) unaligned,
  5    89        2 reserved bit (144),				/* ... exclusively for use by the mail system */
  5    90        2 implicit_route pointer,			/* -> an address_route which defines the route it took */
  5    91        2 pad bit (36),
  5    92        2 n_relays fixed binary,			/* # of relay operations required to reach this site */
  5    93        2 relays (message_trace_n_relays refer (message_trace.n_relays)),
  5    94          3 date_time_relayed fixed binary (71),		/* ... when this relay operation took place */
  5    95          3 sending_host character (256) varying,		/* ... the host which relayed the message */
  5    96          3 receiving_host character (256) varying,	/* ... the host which received it */
  5    97          3 communications_media character (32) unaligned,	/* ... medium over which relay took place (ARPA, Tymnet) */
  5    98          3 communications_protocol character (32) unaligned,/* ... low-level protocol used (TCP, X.25) */
  5    99          3 mail_protocol character (32) unaligned,	/* ... mailer protocol used (SMTP, NBS) */
  5   100          3 relay_id bit (72),				/* ... unique ID assigned by receiving system or ""b */
  5   101          3 relay_recipient pointer;			/* ... -> address of recipient as given by sending system */
  5   102 
  5   103 dcl  MESSAGE_TRACE_VERSION_2 character (8) static options (constant) initial ("mlstrc02");
  5   104 
  5   105 dcl  message_trace_ptr pointer;
  5   106 
  5   107 /* Definition of a message's redistributions list */
  5   108 
  5   109 dcl  1 message_redistributions_list aligned based (message.redistributions_list),
  5   110        2 version character (8) unaligned,
  5   111        2 reserved bit (144),				/* ... exclusively for use by the mail system */
  5   112        2 pad bit (36),
  5   113        2 n_redistributions fixed binary,		/* # of redistributions */
  5   114        2 redistributions (message_n_redistributions refer (message_redistributions_list.n_redistributions))
  5   115               like message_redistribution;		/* the redistributions: oldest first */
  5   116 
  5   117 dcl  MESSAGE_REDISTRIBUTIONS_LIST_VERSION_2 character (8) static options (constant) initial ("mlsrl002");
  5   118 
  5   119 
  5   120 /* Definition of a single redistribution (forwarding) of a message */
  5   121 
  5   122 dcl  1 message_redistribution aligned based (message_redistribution_ptr),
  5   123        2 envelope like message_envelope,
  5   124        2 header,
  5   125          3 message_id bit (72),			/* ID of this redistribution (same for all copies) */
  5   126          3 date_time_created fixed binary (71),		/* date/time when this redistribution was made */
  5   127          3 from pointer,				/* -> address list of authors of this redistribution */
  5   128          3 to pointer,				/* -> address list of recipients of the redistribution */
  5   129          3 comment like message_text_field;		/* optional comment associated with the redistribution */
  5   130 
  5   131 dcl  message_redistribution_comment character (message_redistribution.comment.text_lth) unaligned
  5   132 	based (message_redistribution.comment.text_ptr);
  5   133 
  5   134 dcl  message_redistribution_ptr pointer;
  5   135 
  5   136 
  5   137 /* Structure used in calls to mail_system_daemon_ entrypoints which manipulate the redistributions of a message */
  5   138 
  5   139 dcl  1 message_redistribution_parameter aligned based (message_redistribution_parameter_ptr),
  5   140        2 pad pointer,				/* forces even word alignment */
  5   141        2 version character (8) unaligned,
  5   142        2 redistribution like message_redistribution;
  5   143 
  5   144 dcl MESSAGE_REDISTRIBUTION_PARAMETER_VERSION_2 character (8) static options (constant) initial ("mlsdist2");
  5   145 
  5   146 dcl  message_redistribution_parameter_ptr pointer;
  5   147 
  5   148 /* Definition of the list of user-defined fields in a message */
  5   149 
  5   150 dcl  1 message_user_fields_list aligned based (message.user_fields_list),
  5   151        2 version character (8) unaligned,
  5   152        2 reserved bit (144),				/* ... exclusively for use by the mail system */
  5   153        2 pad bit (36),
  5   154        2 n_user_fields fixed binary,			/* # of user-defined fields in the message */
  5   155        2 user_fields (message_n_user_fields refer (message_user_fields_list.n_user_fields))
  5   156               like message_user_field;			/* the actual user-defined fields */
  5   157 
  5   158 dcl  MESSAGE_USER_FIELDS_LIST_VERSION_2 character (8) static options (constant) initial ("mlsufl02");
  5   159 
  5   160 
  5   161 /* Definition of a user defined message header field */
  5   162 
  5   163 dcl  1 message_user_field aligned based (message_user_field_ptr),
  5   164        2 header,
  5   165          3 field_id bit (36) aligned,			/* identifies the purpose of this field */
  5   166          3 field_type fixed binary,			/* type of data contained in this field */
  5   167        2 field_type_variable bit (144);			/* the actual data (see below) */
  5   168 
  5   169 dcl  message_user_field_ptr pointer;
  5   170 
  5   171 
  5   172 /* Defined types of user defined fields */
  5   173 
  5   174 dcl (MESSAGE_TEXT_USER_FIELD		initial (1),	/* content of the field is a text string */
  5   175      MESSAGE_ADDRESS_LIST_USER_FIELD	initial (2),	/* content of the field is an address list */
  5   176      MESSAGE_DATE_USER_FIELD		initial (3),	/* content of the field is a date/time */
  5   177      MESSAGE_INTEGER_USER_FIELD	initial (4))	/* content of the filed is a fixed binary value */
  5   178 	fixed binary static options (constant);
  5   179 
  5   180 
  5   181 /* Structures used to access the data for the different types of user defined fields */
  5   182 
  5   183 dcl  1 message_text_user_field aligned based (message_user_field_ptr),
  5   184        2 header like message_user_field.header,
  5   185        2 text like message_text_field;			/* the message text */
  5   186 
  5   187 dcl  message_text_user_field_text character (message_text_user_field.text.text_lth) unaligned
  5   188 	based (message_text_user_field.text.text_ptr);
  5   189 
  5   190 dcl  1 message_address_list_user_field aligned based (message_user_field_ptr),
  5   191        2 header like message_user_field.header,
  5   192        2 address_list_ptr pointer,			/* -> the address list */
  5   193        2 pad bit (72);
  5   194 
  5   195 dcl  1 message_date_user_field aligned based (message_user_field_ptr),
  5   196        2 header like message_user_field.header,
  5   197        2 date_time fixed binary (71),			/* the clock reading */
  5   198        2 pad bit (72);
  5   199 
  5   200 dcl  1 message_integer_user_field aligned based (message_user_field_ptr),
  5   201        2 header like message_user_field.header,
  5   202        2 value fixed binary (35),			/* the integer value */
  5   203        2 pad bit (108);
  5   204 
  5   205 
  5   206 /* Structure used in calls to mail_system_ entrypoints which manipulate the user-defined fields of a message */
  5   207 
  5   208 dcl  1 message_user_field_parameter aligned based (message_user_field_parameter_ptr),
  5   209        2 pad pointer,				/* forces even word alignment */
  5   210        2 version character (8) unaligned,
  5   211        2 user_field like message_user_field;
  5   212 
  5   213 dcl  MESSAGE_USER_FIELD_PARAMETER_VERSION_2 character (8) static options (constant) initial ("mlsudf02");
  5   214 
  5   215 dcl  message_user_field_parameter_ptr pointer;
  5   216 
  5   217 /* Definition of a list of message references used as the value of message header fields (eg: In-Reply-To) */
  5   218 
  5   219 dcl  1 message_references_list aligned based (message_references_list_ptr),
  5   220        2 version character (8) unaligned,
  5   221        2 reserved bit (144),				/* ... exclusively for use by the mail system */
  5   222        2 pad bit (36),
  5   223        2 n_references fixed binary,			/* # of references in this list */
  5   224        2 references (message_references_list_n_references refer (message_references_list.n_references))
  5   225               like message_reference;			/* the references themselves */
  5   226 
  5   227 dcl  MESSAGE_REFERENCES_LIST_VERSION_2 character (8) static options (constant) initial ("mlsref02");
  5   228 
  5   229 dcl  message_references_list_ptr pointer;
  5   230 
  5   231 
  5   232 /* Definition of a reference to another message */
  5   233 
  5   234 dcl  1 message_reference aligned based (message_reference_ptr),
  5   235        2 message_id bit (72),				/* ID of the other message */
  5   236        2 date_time_created fixed binary (71),		/* date/time the other message was created */
  5   237        2 from pointer,				/* -> address list of authors of the other message */
  5   238        2 subject like message_text_field;		/* subject of the other message */
  5   239 
  5   240 dcl  message_reference_subject character (message_reference.subject.text_lth) unaligned
  5   241 	based (message_reference.subject.text_ptr);
  5   242 
  5   243 dcl  message_reference_ptr pointer;
  5   244 
  5   245 
  5   246 /* Structure used in calls to mail_system_daemon_ entrypoints which manipulate message references */
  5   247 
  5   248 dcl  1 message_reference_parameter aligned based (message_reference_parameter_ptr),
  5   249        2 pad pointer,				/* forces even word alignment */
  5   250        2 version character (8) unaligned,
  5   251        2 reference like message_reference;
  5   252 
  5   253 dcl  MESSAGE_REFERENCE_PARAMETER_VERSION_2 character (8) static options (constant) initial ("mlsref02");
  5   254 
  5   255 dcl  message_reference_parameter_ptr pointer;
  5   256 
  5   257 
  5   258 /* Definition of a text field in a message (Subject, Comment, or a user defined field) */
  5   259 
  5   260 dcl  1 message_text_field aligned based (message_text_field_ptr),
  5   261        2 text_ptr pointer,				/* -> the actual text */
  5   262        2 text_lth fixed binary (21),			/* length of said text */
  5   263        2 flags,
  5   264          3 multiline_text bit (1) unaligned,		/* ON => the text of this field may span multiple lines;
  5   265*						   OFF => the text will always be a single line */
  5   266          3 reserved bit (35) unaligned;			/* for exclusive use of the mail system */
  5   267 
  5   268 dcl  message_text_field_text character (message_text_field.text_lth) unaligned based (message_text_field.text_ptr);
  5   269 
  5   270 dcl  message_text_field_ptr pointer;
  5   271 
  5   272 /* Definition of a section of the body of a message */
  5   273 
  5   274 dcl  1 message_body_section aligned based (message_body_section_ptr),
  5   275        2 header,
  5   276          3 section_type fixed binary,			/* type of "text" stored in this section */
  5   277          3 section_n_lines fixed binary (21),		/* # of lines in this section or -1 if indeterminate */
  5   278        2 section_type_variable bit (144);		/* the actual data (see below) */
  5   279 
  5   280 dcl  message_body_section_ptr pointer;
  5   281 
  5   282 
  5   283 /* Defined types of message body sections */
  5   284 
  5   285 dcl (MESSAGE_PREFORMATTED_BODY_SECTION	     initial (1),	/* text formatted by the authors/sender */
  5   286      MESSAGE_BIT_STRING_BODY_SECTION	     initial (2))	/* arbitrary bit string */
  5   287 	fixed binary static options (constant);
  5   288 
  5   289 
  5   290 /* Structures used to access the data for the different types of message body sections */
  5   291 
  5   292 dcl  1 message_preformatted_body_section aligned based (message_body_section_ptr),
  5   293        2 header like message_body_section.header,
  5   294        2 text_ptr pointer,				/* -> the text */
  5   295        2 text_lth fixed binary (21),			/* length of said text in characters */
  5   296        2 reserved bit (36);				/* for exclusive use of the mail system */
  5   297 
  5   298 dcl  message_preformatted_body_section_text character (message_preformatted_body_section.text_lth) unaligned
  5   299 	based (message_preformatted_body_section.text_ptr);
  5   300 
  5   301 dcl  1 message_bit_string_body_section aligned based (message_body_section_ptr),
  5   302        2 header like message_body_section.header,
  5   303        2 bit_string_ptr pointer,			/* -> the bit string */
  5   304        2 bit_string_lth fixed binary (24),		/* length of said bit string in bits (obviously) */
  5   305        2 reserved bit (36);				/* for exclusive use of the mail system */
  5   306 
  5   307 dcl  message_bit_string_body_section_bit_string bit (message_bit_string_body_section.bit_string_lth) unaligned
  5   308 	based (message_bit_string_body_section.bit_string_ptr);
  5   309 
  5   310 
  5   311 /* Structure used in calls to mail_system_ entrypoints which manipulate the sections of a message's body */
  5   312 
  5   313 dcl  1 message_body_section_parameter aligned based (message_body_section_parameter_ptr),
  5   314        2 pad pointer,				/* forces even word alignment */
  5   315        2 version character (8) unaligned,
  5   316        2 section like message_body_section;
  5   317 
  5   318 dcl  MESSAGE_BODY_SECTION_PARAMETER_VERSION_2 character (8) static options (constant) initial ("mlsmbs02");
  5   319 
  5   320 dcl  message_body_section_parameter_ptr pointer;
  5   321 
  5   322 /* END INCLUDE FILE ... mlsys_message.incl.pl1 */
      117 
      118 
  6     1 /* BEGIN INCLUDE FILE ... mlsys_address_list.incl.pl1 */
  6     2 /* Created:  June 1983 by G. Palter */
  6     3 
  6     4 /* Definition of an address list -- a collection of addresses used as the value of certain message fields, etc. */
  6     5 
  6     6 dcl  1 address_list aligned based (address_list_ptr),
  6     7        2 version character (8) unaligned,
  6     8        2 reserved bit (144),				/* ... exclusively for use by the mail system */
  6     9        2 n_addresses fixed binary,			/* # of address in this list */
  6    10        2 addresses (address_list_n_addresses refer (address_list.n_addresses)) pointer;
  6    11 
  6    12 dcl  ADDRESS_LIST_VERSION_2 character (8) static options (constant) initial ("mlsals02");
  6    13 
  6    14 dcl  address_list_ptr pointer;
  6    15 
  6    16 dcl  address_list_n_addresses fixed binary;		/* reserved exclusively for use by the mail system */
  6    17 
  6    18 /* END INCLUDE FILE ... mlsys_address_list.incl.pl1 */
      119 
      120 
      121      end rdm_debug_requests_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/22/86  1010.7  rdm_debug_requests_.pl1           >spec>install>1059>rdm_debug_requests_.pl1
109          1    10/27/83  2104.3  rdm_invocation.incl.pl1           >ldd>include>rdm_invocation.incl.pl1
111          2    10/27/83  2104.3  rdm_message_list.incl.pl1         >ldd>include>rdm_message_list.incl.pl1
113          3    10/27/83  2104.3  rdm_message_chains.incl.pl1       >ldd>include>rdm_message_chains.incl.pl1
115          4    10/27/83  2104.2  mlsys_mailbox.incl.pl1            >ldd>include>mlsys_mailbox.incl.pl1
117          5    05/22/86  1005.9  mlsys_message.incl.pl1            >spec>install>1059>mlsys_message.incl.pl1
119          6    10/27/83  2104.2  mlsys_address_list.incl.pl1       >ldd>include>mlsys_address_list.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
P_rdm_invocation_ptr                   parameter       pointer                  dcl 26 ref 17 54 58 86 90
P_sci_ptr                              parameter       pointer                  dcl 25 ref 17 54 57 86 89
address_list                           based           structure                level 1 dcl 6-6
address_list_ptr                000166 automatic       pointer                  dcl 6-14 ref 6-6 6-6 6-6 6-6 6-6
all                      12            based           pointer                  level 4 dcl 1-6 ref 3-23 3-23 3-23
area_ptr                  4            based           pointer                  level 2 dcl 1-6 ref 1-55
argument                               based           char                     unaligned dcl 30 set ref 66 66 68 69* 70*
argument_idx                    000106 automatic       fixed bin(17,0)          dcl 33 set ref 64* 65*
argument_lth                    000104 automatic       fixed bin(21,0)          dcl 32 set ref 30 65* 66 66 68 69 69 70 70
argument_ptr                    000102 automatic       pointer                  dcl 31 set ref 30 65* 66 66 68 69 70
bit_string_lth            4            based           fixed bin(24,0)          level 2 dcl 5-301 ref 5-307
bit_string_ptr            2            based           pointer                  level 2 dcl 5-301 ref 5-307
code                            000110 automatic       fixed bin(35,0)          dcl 36 set ref 79* 80 80*
comment                  24            based           structure                level 3 dcl 5-122
current_message          77            based           fixed bin(17,0)          level 2 dcl 1-6 ref 97 97 97
debug_mode              103(02)        based           bit(1)                   level 4 packed unaligned dcl 1-6 set ref 74* 76
deleted                  16            based           pointer                  level 4 dcl 1-6 ref 3-25 3-25 3-25
error_table_$bad_arg            000462 external static fixed bin(35,0)          dcl 40 set ref 70*
error_table_$badopt             000464 external static fixed bin(35,0)          dcl 41 set ref 69*
flags                   103            based           structure                level 3 dcl 1-6
global_options          103            based           structure                level 2 dcl 1-6
header                    4            based           structure                level 3 in structure "message_user_field_parameter"
                                                                                  dcl 5-208 in procedure "rdm_debug_requests_"
header                   10            based           structure                array level 3 in structure
                                                                                  "message_user_fields_list" dcl 5-150 in procedure
                                                                                  "rdm_debug_requests_"
header                   14            based           structure                level 2 in structure "message_redistribution"
                                                                                  dcl 5-122 in procedure "rdm_debug_requests_"
header                   30            based           structure                level 2 in structure "message" dcl 5-15 in procedure
                                                                                  "rdm_debug_requests_"
header                                 based           structure                level 2 in structure "message_body_section"
                                                                                  dcl 5-274 in procedure "rdm_debug_requests_"
header                                 based           structure                level 2 in structure "message_user_field" dcl 5-163
                                                                                  in procedure "rdm_debug_requests_"
header                    4            based           structure                level 3 in structure
                                                                                  "message_body_section_parameter" dcl 5-313
                                                                                  in procedure "rdm_debug_requests_"
header                   64            based           structure                array level 4 in structure "message" dcl 5-15
                                                                                  in procedure "rdm_debug_requests_"
index                                                  builtin function         dcl 50 ref 66
mailbox                                based           structure                level 1 dcl 4-6
mailbox_info              6            based           structure                level 2 dcl 1-6
mailbox_ptr                     000120 automatic       pointer                  dcl 4-30 in procedure "rdm_debug_requests_" set ref
                                                                                  95* 97 4-6 4-6 4-6 4-6 4-6 4-6 4-6 4-6 4-6 4-6 4-6
                                                                                  4-6 4-6 4-6 4-6 4-6 4-6 4-6 4-6 4-6 4-6
mailbox_ptr               6            based           pointer                  level 3 in structure "rdm_invocation" dcl 1-6
                                                                                  in procedure "rdm_debug_requests_" ref 95
marked                   20            based           pointer                  level 4 dcl 1-6 ref 3-30 3-30 3-30
marked_as_original       22            based           pointer                  level 4 dcl 1-6 ref 3-37 3-37 3-37
message                                based           structure                level 1 dcl 5-15
message_bit_string_body_section        based           structure                level 1 dcl 5-301
message_body_section                   based           structure                level 1 dcl 5-274
message_body_section_parameter_ptr
                                000164 automatic       pointer                  dcl 5-320 ref 5-313 5-313 5-313 5-313 5-313 5-313
                                                                                  5-313 5-313
message_body_section_ptr        000162 automatic       pointer                  dcl 5-280 ref 5-274 5-274 5-274 5-274 5-274 5-292
                                                                                  5-292 5-292 5-292 5-292 5-292 5-292 5-301 5-301
                                                                                  5-301 5-301 5-301 5-301 5-301
message_chain                          based           structure                level 1 dcl 3-7
message_chain_ptr               000116 automatic       pointer                  dcl 3-11 ref 3-7 3-7 3-7
message_chains           12            based           structure                level 3 dcl 1-6
message_envelope                       based           structure                level 1 dcl 5-61
message_envelope_parameter_ptr  000136 automatic       pointer                  dcl 5-81 ref 5-74 5-74 5-74 5-74 5-74 5-74 5-74 5-74
                                                                                  5-74 5-74
message_envelope_ptr            000134 automatic       pointer                  dcl 5-69 ref 5-61 5-61 5-61 5-61 5-61 5-61 5-61
message_idx               2            based           fixed bin(17,0)          array level 3 dcl 2-13 ref 97 97
message_list                           based           structure                level 1 dcl 2-13
message_list_ptr         10            based           pointer                  level 3 dcl 1-6 ref 97 97 2-13 2-13 2-13 2-13 2-13
                                                                                  2-13 2-13 2-13 2-13 2-13 2-13
message_preformatted_body_section      based           structure                level 1 dcl 5-292
message_ptr             106            based           pointer                  array level 3 in structure "mailbox" dcl 4-6
                                                                                  in procedure "rdm_debug_requests_" ref 97
message_ptr                     000124 automatic       pointer                  dcl 5-53 in procedure "rdm_debug_requests_" set ref
                                                                                  97* 102* 103* 5-15 5-15 5-15 5-15 5-15 5-15 5-15
                                                                                  5-15 5-15 5-15 5-15 5-15 5-15 5-15 5-15 5-15 5-15
                                                                                  5-15 5-15 5-15 5-15 5-15 5-15 5-15 5-15 5-15 5-15
                                                                                  5-15 5-15 5-15 5-15 5-15 5-15 5-15 5-15 5-15 5-15
                                                                                  5-15 5-15 5-15 5-15 5-15 5-15 5-15 5-15 5-15 5-15
                                                                                  5-15
message_redistribution                 based           structure                level 1 dcl 5-122
message_redistribution_parameter_ptr
                                000144 automatic       pointer                  dcl 5-146 ref 5-139 5-139 5-139 5-139 5-139 5-139
                                                                                  5-139 5-139 5-139 5-139 5-139 5-139 5-139 5-139
                                                                                  5-139 5-139 5-139 5-139 5-139 5-139 5-139 5-139
message_redistribution_ptr      000142 automatic       pointer                  dcl 5-134 ref 5-122 5-122 5-122 5-122 5-122 5-122
                                                                                  5-122 5-122 5-122 5-122 5-122 5-122 5-122 5-122
                                                                                  5-122 5-122 5-122 5-122 5-122
message_redistributions_list           based           structure                level 1 dcl 5-109
message_reference                      based           structure                level 1 dcl 5-234
message_reference_parameter_ptr 000156 automatic       pointer                  dcl 5-255 ref 5-248 5-248 5-248 5-248 5-248 5-248
                                                                                  5-248 5-248 5-248 5-248 5-248 5-248 5-248
message_reference_ptr           000154 automatic       pointer                  dcl 5-243 ref 5-234 5-234 5-234 5-234 5-234 5-234
                                                                                  5-234 5-234 5-234 5-234
message_references_list                based           structure                level 1 dcl 5-219
message_references_list_ptr     000152 automatic       pointer                  dcl 5-229 ref 5-219 5-219 5-219 5-219 5-219 5-219
                                                                                  5-219 5-219 5-219 5-219 5-219 5-219 5-219 5-219
                                                                                  5-219
message_text_field                     based           structure                level 1 dcl 5-260
message_text_field_ptr          000160 automatic       pointer                  dcl 5-270 ref 5-260 5-260 5-260 5-260 5-260 5-260
message_text_user_field                based           structure                level 1 dcl 5-183
message_trace                          based           structure                level 1 dcl 5-87
message_trace_ptr               000140 automatic       pointer                  dcl 5-105 ref 5-87 5-87 5-87 5-87 5-87 5-87 5-87
                                                                                  5-87 5-87 5-87 5-87 5-87 5-87 5-87 5-87
message_user_field                     based           structure                level 1 dcl 5-163
message_user_field_parameter_ptr
                                000150 automatic       pointer                  dcl 5-215 ref 5-208 5-208 5-208 5-208 5-208 5-208
                                                                                  5-208 5-208
message_user_field_ptr          000146 automatic       pointer                  dcl 5-169 ref 5-163 5-163 5-163 5-163 5-163 5-183
                                                                                  5-183 5-183 5-183 5-183 5-183 5-183 5-183 5-183
                                                                                  5-183 5-190 5-190 5-190 5-190 5-190 5-190 5-195
                                                                                  5-195 5-195 5-195 5-195 5-195 5-200 5-200 5-200
                                                                                  5-200 5-200 5-200
message_user_fields_list               based           structure                level 1 dcl 5-150
messages                104            based           structure                array level 2 in structure "mailbox" dcl 4-6
                                                                                  in procedure "rdm_debug_requests_"
messages                  2            based           structure                array level 2 in structure "message_list" dcl 2-13
                                                                                  in procedure "rdm_debug_requests_"
n_addresses               6            based           fixed bin(17,0)          level 2 dcl 6-6 ref 6-6
n_arguments                     000105 automatic       fixed bin(17,0)          dcl 33 set ref 62* 64 92* 93
n_body_sections          11            based           fixed bin(17,0)          level 2 dcl 5-15 ref 5-15 5-15 5-15 5-15 5-15
n_messages                             based           fixed bin(17,0)          level 2 in structure "message_list" dcl 2-13
                                                                                  in procedure "rdm_debug_requests_" ref 2-13 2-13
                                                                                  2-13 2-13 2-13 2-13 2-13 2-13 3-7 3-23 3-24 3-25
                                                                                  3-30 3-37
n_messages              100            based           fixed bin(17,0)          level 2 in structure "mailbox" dcl 4-6 in procedure
                                                                                  "rdm_debug_requests_" ref 4-6 4-6 4-6
n_redistributions         7            based           fixed bin(17,0)          level 2 dcl 5-109 ref 5-109 5-109 5-109 5-109 5-109
                                                                                  5-109 5-109 5-109 5-109 5-109 5-109 5-109 5-109
                                                                                  5-109 5-109 5-109 5-109 5-109 5-109
n_references              7            based           fixed bin(17,0)          level 2 dcl 5-219 ref 5-219 5-219 5-219 5-219 5-219
                                                                                  5-219 5-219 5-219 5-219 5-219
n_relays                 11            based           fixed bin(17,0)          level 2 dcl 5-87 ref 5-87 5-87 5-87 5-87 5-87 5-87
                                                                                  5-87 5-87 5-87
n_user_fields             7            based           fixed bin(17,0)          level 2 dcl 5-150 ref 5-150 5-150 5-150 5-150 5-150
new_debug_mode                  000107 automatic       bit(1)                   dcl 35 set ref 60* 66* 68* 74
probe                           000500 constant        entry                    external dcl 48 ref 105
rdm_debug_                      000010 constant        file                     stream dcl 38 set ref 20*
rdm_invocation                         based           structure                level 1 dcl 1-6
rdm_invocation_ptr              000112 automatic       pointer                  dcl 1-53 set ref 58* 74 76 79* 90* 95 97 97 97 97 97
                                                                                  1-6 1-6 1-6 1-6 1-6 1-6 1-6 1-6 1-6 1-6 1-6 1-6
                                                                                  1-6 1-6 1-6 1-6 1-6 1-6 1-6 1-6 1-6 1-6 1-6 1-6
                                                                                  1-6 1-6 1-6 1-6 1-6 1-6 1-6 1-6 1-6 1-6 1-6 1-6
rdm_set_request_tables_         000466 constant        entry                    external dcl 43 ref 79
redistributions_list     60            based           pointer                  level 2 dcl 5-15 ref 5-109 5-109 5-109 5-109 5-109
                                                                                  5-109 5-109 5-109 5-109 5-109 5-109 5-109 5-109
                                                                                  5-109 5-109 5-109 5-109 5-109 5-109 5-109 5-109
                                                                                  5-109 5-109 5-109
sci_ptr                         000100 automatic       pointer                  dcl 28 set ref 57* 62* 65* 69* 70* 76* 80* 89* 92*
                                                                                  93*
ssu_$abort_line                 000470 constant        entry                    external dcl 44 ref 69 70 80 93
ssu_$arg_count                  000472 constant        entry                    external dcl 45 ref 62 92
ssu_$arg_ptr                    000474 constant        entry                    external dcl 46 ref 65
ssu_$set_debug_mode             000476 constant        entry                    external dcl 47 ref 76
subject                  50            based           structure                level 3 in structure "message" dcl 5-15 in procedure
                                                                                  "rdm_debug_requests_"
subject                   6            based           structure                level 2 in structure "message_reference" dcl 5-234
                                                                                  in procedure "rdm_debug_requests_"
text                      2            based           structure                level 2 dcl 5-183
text_lth                 26            based           fixed bin(21,0)          level 4 in structure "message_redistribution"
                                                                                  dcl 5-122 in procedure "rdm_debug_requests_" ref
                                                                                  5-131
text_lth                  2            based           fixed bin(21,0)          level 2 in structure "message_text_field" dcl 5-260
                                                                                  in procedure "rdm_debug_requests_" ref 5-268
text_lth                  4            based           fixed bin(21,0)          level 3 in structure "message_text_user_field"
                                                                                  dcl 5-183 in procedure "rdm_debug_requests_" ref
                                                                                  5-187
text_lth                  4            based           fixed bin(21,0)          level 2 in structure
                                                                                  "message_preformatted_body_section" dcl 5-292
                                                                                  in procedure "rdm_debug_requests_" ref 5-298
text_lth                 10            based           fixed bin(21,0)          level 3 in structure "message_reference" dcl 5-234
                                                                                  in procedure "rdm_debug_requests_" ref 5-240
text_lth                 52            based           fixed bin(21,0)          level 4 in structure "message" dcl 5-15 in procedure
                                                                                  "rdm_debug_requests_" ref 5-51
text_ptr                               based           pointer                  level 2 in structure "message_text_field" dcl 5-260
                                                                                  in procedure "rdm_debug_requests_" ref 5-268
text_ptr                  2            based           pointer                  level 2 in structure
                                                                                  "message_preformatted_body_section" dcl 5-292
                                                                                  in procedure "rdm_debug_requests_" ref 5-298
text_ptr                  2            based           pointer                  level 3 in structure "message_text_user_field"
                                                                                  dcl 5-183 in procedure "rdm_debug_requests_" ref
                                                                                  5-187
text_ptr                 24            based           pointer                  level 4 in structure "message_redistribution"
                                                                                  dcl 5-122 in procedure "rdm_debug_requests_" ref
                                                                                  5-131
text_ptr                  6            based           pointer                  level 3 in structure "message_reference" dcl 5-234
                                                                                  in procedure "rdm_debug_requests_" ref 5-240
text_ptr                 50            based           pointer                  level 4 in structure "message" dcl 5-15 in procedure
                                                                                  "rdm_debug_requests_" ref 5-51
undeleted                14            based           pointer                  level 4 dcl 1-6 ref 3-24 3-24 3-24
user_fields_list         56            based           pointer                  level 3 dcl 5-15 ref 5-150 5-150 5-150 5-150 5-150
                                                                                  5-150 5-150 5-150 5-150 5-150

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
ADDRESS_LIST_VERSION_2                 constant        char(8)                  initial unaligned dcl 6-12
ALL_MESSAGES                           constant        fixed bin(17,0)          initial dcl 3-42
DEFAULT_INCLUDE_SELF                   constant        bit(2)                   initial dcl 1-60
INCLUDE_SELF                           constant        bit(2)                   initial dcl 1-60
MAILBOX_VERSION_2                      constant        char(8)                  initial unaligned dcl 4-28
MESSAGE_ADDRESS_LIST_USER_FIELD        constant        fixed bin(17,0)          initial dcl 5-174
MESSAGE_BIT_STRING_BODY_SECTION        constant        fixed bin(17,0)          initial dcl 5-285
MESSAGE_BODY_SECTION_PARAMETER_VERSION_2
                                       constant        char(8)                  initial unaligned dcl 5-318
MESSAGE_DATE_USER_FIELD                constant        fixed bin(17,0)          initial dcl 5-174
MESSAGE_ENVELOPE_PARAMETER_VERSION_2   constant        char(8)                  initial unaligned dcl 5-79
MESSAGE_INTEGER_USER_FIELD             constant        fixed bin(17,0)          initial dcl 5-174
MESSAGE_PREFORMATTED_BODY_SECTION      constant        fixed bin(17,0)          initial dcl 5-285
MESSAGE_REDISTRIBUTIONS_LIST_VERSION_2 constant        char(8)                  initial unaligned dcl 5-117
MESSAGE_REDISTRIBUTION_PARAMETER_VERSION_2
                                       constant        char(8)                  initial unaligned dcl 5-144
MESSAGE_REFERENCES_LIST_VERSION_2      constant        char(8)                  initial unaligned dcl 5-227
MESSAGE_REFERENCE_PARAMETER_VERSION_2  constant        char(8)                  initial unaligned dcl 5-253
MESSAGE_TEXT_USER_FIELD                constant        fixed bin(17,0)          initial dcl 5-174
MESSAGE_TRACE_VERSION_2                constant        char(8)                  initial unaligned dcl 5-103
MESSAGE_USER_FIELDS_LIST_VERSION_2     constant        char(8)                  initial unaligned dcl 5-158
MESSAGE_USER_FIELD_PARAMETER_VERSION_2 constant        char(8)                  initial unaligned dcl 5-213
MESSAGE_VERSION_2                      constant        char(8)                  initial unaligned dcl 5-49
NON_DELETED_MESSAGES                   constant        fixed bin(17,0)          initial dcl 3-42
NO_INCLUDE_SELF                        constant        bit(2)                   initial dcl 1-60
ONLY_DELETED_MESSAGES                  constant        fixed bin(17,0)          initial dcl 3-42
OTHER_MAILBOX                          constant        fixed bin(17,0)          initial dcl 4-37
RDM_INVOCATION                         constant        char(8)                  initial unaligned dcl 1-51
SAVEBOX                                constant        fixed bin(17,0)          initial dcl 4-37
USER_DEFAULT_MAILBOX                   constant        fixed bin(17,0)          initial dcl 4-37
USER_LOGBOX                            constant        fixed bin(17,0)          initial dcl 4-37
address_list_n_addresses        000170 automatic       fixed bin(17,0)          dcl 6-16
all_chain                              based           structure                level 1 dcl 3-23
deleted_chain                          based           structure                level 1 dcl 3-25
mailbox_n_messages              000122 automatic       fixed bin(17,0)          dcl 4-32
marked_as_original_chain               based           structure                level 1 dcl 3-37
marked_chain                           based           structure                level 1 dcl 3-30
message_address_list_user_field        based           structure                level 1 dcl 5-190
message_bit_string_body_section_bit_string
                                       based           bit                      unaligned dcl 5-307
message_body_section_parameter         based           structure                level 1 dcl 5-313
message_date_user_field                based           structure                level 1 dcl 5-195
message_envelope_parameter             based           structure                level 1 dcl 5-74
message_integer_user_field             based           structure                level 1 dcl 5-200
message_list_n_messages         000114 automatic       fixed bin(17,0)          dcl 2-25
message_n_body_sections         000126 automatic       fixed bin(17,0)          dcl 5-55
message_n_redistributions       000130 automatic       fixed bin(17,0)          dcl 5-55
message_n_user_fields           000131 automatic       fixed bin(17,0)          dcl 5-55
message_preformatted_body_section_text based           char                     unaligned dcl 5-298
message_redistribution_comment         based           char                     unaligned dcl 5-131
message_redistribution_parameter       based           structure                level 1 dcl 5-139
message_reference_parameter            based           structure                level 1 dcl 5-248
message_reference_subject              based           char                     unaligned dcl 5-240
message_references_list_n_references
                                000132 automatic       fixed bin(17,0)          dcl 5-55
message_subject                        based           char                     unaligned dcl 5-51
message_text_field_text                based           char                     unaligned dcl 5-268
message_text_user_field_text           based           char                     unaligned dcl 5-187
message_trace_n_relays          000127 automatic       fixed bin(17,0)          dcl 5-55
message_user_field_parameter           based           structure                level 1 dcl 5-208
rdm_area                               based           area(1024)               dcl 1-55
undeleted_chain                        based           structure                level 1 dcl 3-24

NAMES DECLARED BY EXPLICIT CONTEXT.
debug_mode                      000310 constant        entry                    external dcl 54
probe                           000572 constant        entry                    external dcl 86
rdm_debug_requests_             000267 constant        entry                    external dcl 17

NAME DECLARED BY CONTEXT OR IMPLICATION.
null                                                   builtin function         ref 102 103

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1032        1534     701        1042
Length     12052     701       502       10301     130         450

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
rdm_debug_requests_                 234 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
rdm_debug_requests_      000100 sci_ptr                     rdm_debug_requests_
                         000102 argument_ptr                rdm_debug_requests_
                         000104 argument_lth                rdm_debug_requests_
                         000105 n_arguments                 rdm_debug_requests_
                         000106 argument_idx                rdm_debug_requests_
                         000107 new_debug_mode              rdm_debug_requests_
                         000110 code                        rdm_debug_requests_
                         000112 rdm_invocation_ptr          rdm_debug_requests_
                         000114 message_list_n_messages     rdm_debug_requests_
                         000116 message_chain_ptr           rdm_debug_requests_
                         000120 mailbox_ptr                 rdm_debug_requests_
                         000122 mailbox_n_messages          rdm_debug_requests_
                         000124 message_ptr                 rdm_debug_requests_
                         000126 message_n_body_sections     rdm_debug_requests_
                         000127 message_trace_n_relays      rdm_debug_requests_
                         000130 message_n_redistributions   rdm_debug_requests_
                         000131 message_n_user_fields       rdm_debug_requests_
                         000132 message_references_list_n_references
                                                            rdm_debug_requests_
                         000134 message_envelope_ptr        rdm_debug_requests_
                         000136 message_envelope_parameter_ptr
                                                            rdm_debug_requests_
                         000140 message_trace_ptr           rdm_debug_requests_
                         000142 message_redistribution_ptr  rdm_debug_requests_
                         000144 message_redistribution_parameter_ptr
                                                            rdm_debug_requests_
                         000146 message_user_field_ptr      rdm_debug_requests_
                         000150 message_user_field_parameter_ptr
                                                            rdm_debug_requests_
                         000152 message_references_list_ptr rdm_debug_requests_
                         000154 message_reference_ptr       rdm_debug_requests_
                         000156 message_reference_parameter_ptr
                                                            rdm_debug_requests_
                         000160 message_text_field_ptr      rdm_debug_requests_
                         000162 message_body_section_ptr    rdm_debug_requests_
                         000164 message_body_section_parameter_ptr
                                                            rdm_debug_requests_
                         000166 address_list_ptr            rdm_debug_requests_
                         000170 address_list_n_addresses    rdm_debug_requests_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry           int_entry           put_end
stream_io

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
probe                         rdm_set_request_tables_       ssu_$abort_line               ssu_$arg_count
ssu_$arg_ptr                  ssu_$set_debug_mode

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$bad_arg          error_table_$badopt




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     38 000246        17 000263        20 000275        22 000305        54 000306        57 000316        58 000322
     60 000325        62 000327        64 000340        65 000347        66 000364        68 000407        69 000415
     70 000450        72 000503        74 000505        76 000513        79 000530        80 000541        82 000567
     86 000570        89 000600        90 000604        92 000607        93 000620        95 000647        97 000652
    102 000666       103 000671       105 000673       107 000700


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
