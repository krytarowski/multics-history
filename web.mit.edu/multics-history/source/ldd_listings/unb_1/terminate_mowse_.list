	COMPILATION LISTING OF SEGMENT terminate_mowse_
	Compiled by: Multics PL/I Compiler, Release 29, of July 28, 1986
	Compiled at: Honeywell Bull, Phx. Az., Sys-M 
	Compiled on: 08/07/87  1505.4 mst Fri
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1987                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1986 *
        6*        *                                                         *
        7*        *********************************************************** */
        8 
        9 /****^  HISTORY COMMENTS:
       10*  1) change(86-08-28,Smith), approve(87-07-15,MCR7580),
       11*     audit(87-07-30,RBarstad), install(87-08-07,MR12.1-1075):
       12*     Created.
       13*  2) change(86-11-27,Flegel), approve(86-11-27,MCR7580),
       14*     audit(87-07-30,RBarstad), install(87-08-07,MR12.1-1075):
       15*     Approved.
       16*                                                   END HISTORY COMMENTS */
       17 
       18 /* format: style4,indattr,ifthen,^indcomtxt,thendo,^indproc,^indblkcom,initcol1,declareind8,dclind4,struclvlind3,comcol55 */
       19 terminate_mowse_:
       20      proc (p_mowse_info_ptr, p_code);
       21 
       22 /* : PROGRAM FUNCTION
       23*
       24*This module deallocates all space reserved by MOWSE and the applications
       25*running in the MOWSE environment.
       26**/
       27 
       28 /* : NOTES
       29**/
       30 
       31 /* INPUT PARAMETERS */
       32 dcl p_mowse_info_ptr       ptr;		    /* Pointer to mowse info structure */
       33 
       34 
       35 /* OUTPUT PARAMETERS */
       36 dcl p_code	       fixed bin (35);	    /* Error code */
       37 
       38 
       39 /* MISC VARIABLES */
       40 dcl cat_index	       fixed bin;		    /* CAT index */
       41 dcl mcb_ptr	       ptr;		    /* MCB */
       42 dcl temp_buff_ptr	       ptr;		    /* Miscellaneous ptr */
       43 dcl temp_buff_ptr_2	       ptr;		    /* Miscellaneous ptr */
       44 dcl input_buffer_length    fixed bin;		    /* Length of char buffer */
       45 dcl partial_message_ptr_1  ptr;		    /* Node in message chain */
       46 dcl partial_message_ptr_2  ptr;		    /* Node in message chain */
       47 dcl mask		       bit (36) aligned;	    /* IPS mask */
       48 dcl mowse_capability       fixed bin;		    /* MOWSE capability number */
       49 
       50 /* STRUCTURES */
       51 dcl input_buffer_data      char (input_buffer_length) based (temp_buff_ptr);
       52 					    /* Freed buffer */
       53 
       54 /* SYSTEM CALLS */
       55 dcl hcs_$set_ips_mask      entry (bit (36) aligned, bit (36) aligned);
       56 dcl hcs_$reset_ips_mask    entry (bit (36) aligned, bit (36) aligned);
       57 dcl iox_$close	       entry (ptr, fixed bin (35));
       58 dcl iox_$detach_iocb       entry (ptr, fixed bin (35));
       59 dcl release_temp_segment_  entry (char (*), ptr, fixed bin (35));
       60 
       61 /* SYSTEM CALL SUPPORT */
       62 
       63 
       64 /* EXTERNAL CALLS */
       65 dcl release_outbuffer_     entry (ptr);
       66 dcl capability_$pack       entry (fixed bin, fixed bin, fixed bin,
       67 		       fixed bin (35));
       68 
       69 /* EXTERNAL CALL SUPPORT */
       70 
       71 
       72 /* BUILTINS */
       73 dcl null		       builtin;
       74 
       75 
       76 /* CONDITIONS */
       77 
       78 
       79 /* CONSTANTS */
       80 
       81 
       82 /**/
       83 /* INITIALIZATION */
       84 	p_code = 0;
       85 	call capability_$pack (LOCAL_SYSTEM, INTERNAL, mowse_capability,
       86 	     p_code);
       87 	if p_code ^= 0 then
       88 	     return;
       89 
       90 /* MAIN */
       91 
       92 /* : If mowse_info_ptr is null then return */
       93 
       94 	if p_mowse_info_ptr = null then
       95 	     return;
       96 
       97 /* : Look at mcb pointers associated with each local cat entry
       98*     and release any space associated with it, if any */
       99 
      100 	do cat_index = MINIMUM_CAT_ENTRY to MAXIMUM_CAT_ENTRY;
      101 	     mcb_ptr = p_mowse_info_ptr
      102 		-> mowse_info.local_cat (cat_index).mcb_ptr;
      103 
      104 /* : - if mcb ptr is not null, then there is an application
      105*     -- send a TERMINATE_APPLICATION to the capability
      106*     - if application did not destroy its instance
      107*     -- free its input buffer, output buffers (nodes and data), mcb */
      108 
      109 	     if mcb_ptr ^= null then
      110 		call mcb_ptr -> mcb.entry_var ((TERMINATE_APPLICATION),
      111 		     (mowse_capability), (null), (0), (mcb_ptr),
      112 		     (mcb_ptr -> data_block_ptr));
      113 
      114 	     mcb_ptr = p_mowse_info_ptr
      115 		-> mowse_info.local_cat (cat_index).mcb_ptr;
      116 	     if mcb_ptr ^= null then do;
      117 		temp_buff_ptr = mcb_ptr -> mcb.inbuff;
      118 		if temp_buff_ptr ^= null then do;
      119 		     input_buffer_length
      120 			= mcb_ptr -> mcb.inbuff_data_length;
      121 		     free input_buffer_data;
      122 		     temp_buff_ptr = null;
      123 		end;
      124 		mcb_ptr -> inbuff = null;
      125 
      126 		call release_outbuffer_ (mcb_ptr);
      127 
      128 		free mcb_ptr -> mcb;
      129 		mcb_ptr = null;
      130 	     end;
      131 	end;
      132 
      133 /* : Clean up pending messages */
      134 
      135 	temp_buff_ptr = p_mowse_info_ptr
      136 	     -> mowse_info.message_manager_info.head_list_ptr;
      137 	do while (temp_buff_ptr ^= null);
      138 	     partial_message_ptr_1
      139 		= temp_buff_ptr -> message_node.partial_msg_list_ptr;
      140 	     do while (partial_message_ptr_1 ^= null);
      141 		partial_message_ptr_2 =
      142 		     partial_message_ptr_1 -> partial_message.msg_ptr;
      143 		partial_message_ptr_1 =
      144 		     partial_message_ptr_2 -> partial_message.next_msg;
      145 		free partial_message_ptr_2 -> partial_message;
      146 		partial_message_ptr_2 = null;
      147 	     end;
      148 
      149 	     temp_buff_ptr_2 = temp_buff_ptr;
      150 	     temp_buff_ptr = temp_buff_ptr_2 -> message_node.next_node;
      151 	     free temp_buff_ptr_2 -> message_node;
      152 	     temp_buff_ptr_2 = null;
      153 	end;
      154 
      155 /* : Close debug and trace files if open */
      156 
      157 	if p_mowse_info_ptr -> mowse_info.mowse_flags.debug_file_iocb
      158 	     ^= null
      159 	then do;
      160 	     mask = ""b;
      161 	     call hcs_$set_ips_mask (""b, mask);
      162 	     call iox_$close (p_mowse_info_ptr
      163 		-> mowse_info.mowse_flags.debug_file_iocb, (0));
      164 	     call iox_$detach_iocb (p_mowse_info_ptr
      165 		-> mowse_info.mowse_flags.debug_file_iocb, (0));
      166 	     call hcs_$reset_ips_mask (mask, mask);
      167 	end;
      168 
      169 	if p_mowse_info_ptr -> mowse_info.mowse_flags.trace_file_iocb
      170 	     ^= null
      171 	then do;
      172 	     mask = ""b;
      173 	     call hcs_$set_ips_mask (""b, mask);
      174 	     call iox_$close (p_mowse_info_ptr
      175 		-> mowse_info.mowse_flags.trace_file_iocb, (0));
      176 	     call iox_$detach_iocb (p_mowse_info_ptr
      177 		-> mowse_info.mowse_flags.trace_file_iocb, (0));
      178 	     call hcs_$reset_ips_mask (mask, mask);
      179 	end;
      180 
      181 /* : Free init_mowse_info structure */
      182 
      183 	if p_mowse_info_ptr -> mowse_info.init_mowse_info_ptr ^= null
      184 	then do;
      185 	     free p_mowse_info_ptr
      186 		-> mowse_info.init_mowse_info_ptr -> init_mowse_info;
      187 	     p_mowse_info_ptr -> mowse_info.init_mowse_info_ptr = null;
      188 	end;
      189 
      190 /* : Release temporary segment */
      191 
      192 	call release_temp_segment_ (temp_seg_name, p_mowse_info_ptr,
      193 	     p_code);
      194 
      195 
      196 /* INCLUDE FILES */
  1     1 /*  BEGIN INCLUDE FILE:	mowse_mcb.incl.pl1			  *  *  *  *  *  *  *  *  *  *  *  *  */
  1     2 
  1     3 /****^  HISTORY COMMENTS:
  1     4*  1) change(86-05-17,Smith), approve(87-07-15,MCR7580),
  1     5*     audit(87-07-30,RBarstad), install(87-08-07,MR12.1-1075):
  1     6*     Created to define the mcb (Mowse Control Block)
  1     7*     for information on capabilities.
  1     8*  2) change(86-11-27,Flegel), approve(86-11-27,MCR7580),
  1     9*     audit(87-07-30,RBarstad), install(87-08-07,MR12.1-1075):
  1    10*     Approved.
  1    11*                                                   END HISTORY COMMENTS */
  1    12 /* MOWSE control block */
  1    13 /* format: style4,indattr,ifthen,^indcomtxt,thendo,^indproc,^indblkcom,initcol1,declareind8,dclind4,struclvlind3,comcol55 */
  1    14 dcl 01 mcb	       based,
  1    15        02 version	       char (8),
  1    16        02 capability_name  char (32),		    /* Name of capability */
  1    17        02 major_capability fixed bin (17),	    /* Capability number */
  1    18        02 inbuff_length    fixed bin (17),	    /* Length of buffer */
  1    19        02 inbuff_position_index
  1    20 		       fixed bin (17),	    /* Current position in inbuffer */
  1    21        02 inbuff_data_length
  1    22 		       fixed bin (17),	    /* Amoiunt of data in inbuffer */
  1    23        02 outbuff_length   fixed bin (17),	    /* Length of outbuffer */
  1    24        02 mbz1	       bit (36) unal,
  1    25        02 entry_var	       entry options (variable),  /* Message processor entry point of capability */
  1    26        02 data_block_ptr   ptr,		    /* Capability  data */
  1    27        02 inbuff	       ptr,		    /* Message input buffer */
  1    28        02 outbuff_list_start
  1    29 		       ptr,		    /* Pointer to outbuffer data */
  1    30        02 outbuff_list_end ptr,		    /* Last node in outbuffer data */
  1    31        02 iocb_ptr	       ptr,		    /* IOCB to mowse_io_ */
  1    32        02 mowse_info_ptr   ptr;		    /* MOWSE information */
  1    33 					    /* Output buffer linked list node */
  1    34 dcl 01 output_buffer       based,
  1    35        02 destination_system
  1    36 		       char,		    /* Destination of message */
  1    37        02 destination_major char,
  1    38        02 destination_minor char,
  1    39        02 buffer_position  fixed bin,		    /* Position in buffer of message */
  1    40        02 buffer_length    fixed bin,		    /* Length of buffer */
  1    41        02 next_buffer      ptr,		    /* Next buffer of message */
  1    42        02 data	       ptr;		    /* Pointer to message */
  1    43 
  1    44 /*  END INCLUDE FILE:	mowse_mcb.incl.pl1			  *  *  *  *  *  *  *  *  *  *  *  *  */
      197 
  2     1 /*  BEGIN INCLUDE FILE:	mowse_messages.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  */
  2     2 
  2     3 /****^  HISTORY COMMENTS:
  2     4*  1) change(86-05-17,Smith), approve(86-12-16,MCR7580),
  2     5*     audit(86-12-15,Gilcrease), install(87-01-06,MR12.0-1255):
  2     6*     Created to define MOWSE message formats.
  2     7*  2) change(86-11-27,Flegel), approve(86-11-27,MCR7580),
  2     8*     audit(86-12-15,Gilcrease), install(87-01-06,MR12.0-1255):
  2     9*     Approved.
  2    10*  3) change(87-07-31,Flegel), approve(87-07-31,MCR7580),
  2    11*     audit(87-07-31,RBarstad), install(87-08-07,MR12.1-1075):
  2    12*     Changes to support async call channels.
  2    13*                                                   END HISTORY COMMENTS */
  2    14 
  2    15 /* Message Channels */
  2    16 /* format: style4,indattr,ifthen,^indcomtxt,thendo,^indproc,^indblkcom,initcol1,declareind8,dclind4,struclvlind3,comcol55 */
  2    17 dcl BG		       fixed bin int static options (constant) init (0);
  2    18 					    /* Fore ground */
  2    19 dcl FG		       fixed bin int static options (constant) init (1);
  2    20 					    /* Back ground */
  2    21 
  2    22 /* Message types: 
  2    23*
  2    24*Each intersystem message is labelled with one of the following types.  Upon
  2    25*reciept of the message suitable action is undertaken.  This scheme was
  2    26*introduced to allow the transmission of messsages longer than the maximum
  2    27*packet size.
  2    28**/
  2    29 
  2    30 /* Templates for the various messages used throughout the mowse environment.
  2    31*   Non-allocatable */
  2    32 
  2    33 dcl message_len	       fixed bin init (6);
  2    34 dcl message_ptr	       ptr;
  2    35 
  2    36 /* expected format of message */
  2    37 
  2    38 dcl 01 input_message       based (message_ptr),
  2    39        02 header,
  2    40 	03 system	       char (1) unal,
  2    41 	03 major	       char (1) unal,
  2    42 	03 minor	       char (1) unal,
  2    43 	03 source_system char (1) unal,
  2    44 	03 source_major  char (1) unal,
  2    45        02 data	       char (message_len - 5) unal;
  2    46 
  2    47 /* expected format of message to be handled by mowse internal execute command */
  2    48 
  2    49 dcl 01 execom_message      based (message_ptr),
  2    50        02 header,
  2    51 	03 system	       char (1) unal,
  2    52 	03 major	       char (1) unal,
  2    53 	03 minor	       char (1) unal,
  2    54 	03 source_system char (1) unal,
  2    55 	03 source_major  char (1) unal,
  2    56        02 data,
  2    57 	03 cmd_id	       fixed bin (17) unal,
  2    58 	03 command       char (message_len - 7) unal;
  2    59 
  2    60 /* expected format of message recieved when a request to alter a CAT table
  2    61*   is made by a remote system */
  2    62 
  2    63 dcl 01 alter_cat_message   based (message_ptr),
  2    64        02 header,
  2    65 	03 system	       char (1) unal,
  2    66 	03 major	       char (1) unal,
  2    67 	03 minor	       char (1) unal,
  2    68 	03 source_system char (1) unal,
  2    69 	03 source_major  char (1) unal,
  2    70        02 data,
  2    71 	03 major	       char unal,
  2    72 	03 major_name    char (CAPABILITY_NAME_LENGTH) unal;
  2    73 
  2    74 /* Template used to parse message recieved from some remote system. */
  2    75 
  2    76 dcl 01 event_message       based (message_ptr),
  2    77        02 header,
  2    78 	03 system	       char (1) unal,
  2    79 	03 major	       char (1) unal,
  2    80 	03 msg_type      char (1) unal;
  2    81 
  2    82 /* format of message of MORE type */
  2    83 
  2    84 dcl 01 request_more_message
  2    85 		       based (message_ptr),
  2    86        02 header,
  2    87 	03 system	       char (1) unal,
  2    88 	03 major	       char (1) unal,
  2    89 	03 more	       char (1) unal,
  2    90 	03 source_system char (1) unal,
  2    91 	03 source_major  char (1) unal,
  2    92 	03 source_minor  char (1) unal;
  2    93 
  2    94 /* format of message of CONTINUE type */
  2    95 
  2    96 dcl 01 more_remaining_message
  2    97 		       based (message_ptr),
  2    98        02 header,
  2    99 	03 system	       char (1) unal,
  2   100 	03 major	       char (1) unal,
  2   101 	03 continue      char (1) unal,
  2   102 	03 minor	       char (1) unal,
  2   103 	03 source_system char (1) unal,
  2   104 	03 source_major  char (1) unal,
  2   105        02 data,
  2   106 	03 data_buf      char (message_len - 6) unal;
  2   107 
  2   108 /* format of message of LAST type */
  2   109 
  2   110 dcl 01 last_message	       based (message_ptr),
  2   111        02 header,
  2   112 	03 system	       char (1) unal,
  2   113 	03 major	       char (1) unal,
  2   114 	03 minor	       char (1) unal,
  2   115 	03 source_system char (1) unal,
  2   116 	03 source_major  char (1) unal,
  2   117        02 data,
  2   118 	03 data_buf      char (message_len - 5) unal;
  2   119 
  2   120 /* Execute_command_reply message format */
  2   121 
  2   122 dcl 01 execom_reply_msg    based (message_ptr),
  2   123        02 header,
  2   124 	03 system	       char (1) unal,
  2   125 	03 major	       char (1) unal,
  2   126 	03 minor	       char (1) unal,
  2   127 	03 source_system char (1) unal,
  2   128 	03 source_major  char (1) unal,
  2   129        02 data,
  2   130 	03 cmd_id	       fixed bin unal,
  2   131 	03 status	       char unal;
  2   132 
  2   133 /* Used to manage partial messages destined for any application */
  2   134 
  2   135 dcl msg_node_ptr	       ptr;
  2   136 dcl 01 message_node	       based (msg_node_ptr),
  2   137        02 major	       fixed bin,
  2   138        02 partial_msg_list_ptr
  2   139 		       ptr,
  2   140        02 next_node	       ptr,
  2   141        02 prev_node	       ptr,
  2   142        02 last_part_msg    ptr;
  2   143 
  2   144 dcl part_msg_ptr	       ptr;
  2   145 dcl 01 partial_message     based (part_msg_ptr),
  2   146        02 msg_ptr	       ptr,
  2   147        02 msg_len	       fixed bin,
  2   148        02 next_msg	       ptr;
  2   149 
  2   150 
  2   151 dcl part_msg_length	       fixed bin;
  2   152 dcl part_msg	       char (part_msg_length) based;
  2   153 
  2   154 /* Trace information structure */
  2   155 dcl 01 trace_message_info,
  2   156        02 direction	       fixed bin,
  2   157        02 from_system      fixed bin,
  2   158        02 from_major       fixed bin,
  2   159        02 dest_system      fixed bin,
  2   160        02 dest_major       fixed bin,
  2   161        02 dest_minor       fixed bin,
  2   162        02 msg_type	       fixed bin,
  2   163        02 message	       char (PACKET_SIZE) var;
  2   164 
  2   165 /*  END INCLUDE FILE:	mowse_messages.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  */
      198 
  3     1 /*  BEGIN INCLUDE FILE:	mowse_info.incl.pl1			  *  *  *  *  *  *  *  *  *  *  *  *  */
  3     2 
  3     3 /****^  HISTORY COMMENTS:
  3     4*  1) change(86-07-19,Smith), approve(87-07-15,MCR7580),
  3     5*     audit(87-07-30,RBarstad), install(87-08-07,MR12.1-1075):
  3     6*     Created to define MOWSE information to be
  3     7*     placed into a temp segment.
  3     8*  2) change(86-11-27,Flegel), approve(86-11-27,MCR7580),
  3     9*     audit(87-07-30,RBarstad), install(87-08-07,MR12.1-1075):
  3    10*     Approved.
  3    11*  3) change(87-02-25,Flegel), approve(87-02-25,MCR7580),
  3    12*     audit(87-07-30,RBarstad), install(87-08-07,MR12.1-1075):
  3    13*     Added bit switches to the init_mowse_info structure as well as the force
  3    14*     flag.
  3    15*  4) change(87-03-24,Flegel), approve(87-03-24,MCR7580),
  3    16*     audit(87-07-30,RBarstad), install(87-08-07,MR12.1-1075):
  3    17*     Added open_struc for passing EOP and escape char info from attach_mowse
  3    18*     to mowse_io_.
  3    19*                                                   END HISTORY COMMENTS */
  3    20 
  3    21 /* CAT index limits */
  3    22 
  3    23 /* format: style4,indattr,ifthen,^indcomtxt,thendo,^indproc,^indblkcom,initcol1,declareind8,dclind4,struclvlind3,comcol55 */
  3    24 dcl MINIMUM_CAT_ENTRY      fixed bin int static options (constant) init (33);
  3    25 dcl MAXIMUM_CAT_ENTRY      fixed bin int static options (constant) init (64);
  3    26 
  3    27 dcl CAPABILITY_NAME_LENGTH fixed bin int static options (constant) init (32);
  3    28 
  3    29 /* Mowse information structure */
  3    30 
  3    31 dcl 01 mowse_info	       based aligned,
  3    32        02 version	       char (8),
  3    33        02 local_cat	       dimension (33:64),	    /* Multics CAT table */
  3    34 	03 flags,
  3    35 	   04 reset      bit (1) unal,	    /* Reset in progress */
  3    36 	   04 suspended  bit (1) unal,	    /* Suspended applciation */
  3    37 	   04 status     bit (1) unal,	    /* Status pending */
  3    38 	   04 mbz1       bit (33) unal,
  3    39 	03 sleep_time    fixed bin,		    /* Time application is sleeping */
  3    40 	03 mcb_ptr       ptr,		    /* Capability MCB */
  3    41        02 remote_cat       dimension (33:64),	    /* PC CAT table */
  3    42 	03 major_capability
  3    43 		       fixed bin,		    /* Capability number */
  3    44 	03 capability_name char (32),		    /* Name of capability */
  3    45 	03 flags,
  3    46 	   04 reset      bit (1) unal,	    /* Reset in progress */
  3    47 	   04 suspended  bit (1) unal,	    /* Suspended capability */
  3    48 	   04 sleep_time bit (1) unal,	    /* Application sleeping */
  3    49 	   04 mbz2       bit (33) unal,
  3    50        02 message_manager_info,		    /* Info for processing messages */
  3    51 	03 head_list_ptr ptr,		    /* Head of message list */
  3    52 	03 tail_list_ptr ptr,		    /* Tail of message list */
  3    53 	03 pending_messages
  3    54 		       fixed bin,		    /* Number of pending messages */
  3    55        02 mowse_flags,
  3    56 	03 trace	       bit (1) unal,	    /* Message tracing facility active */
  3    57 	03 debug	       bit (1) unal,	    /* Debugging packets facility active */
  3    58 	03 error_handled bit (1) unal,	    /* In mowse_error_handler procedure */
  3    59 	03 mbz1	       bit (33) unal,
  3    60 	03 trace_file_iocb ptr,		    /* Trace file iocb */
  3    61 	03 debug_file_iocb ptr,		    /* Debug file iocb */
  3    62        02 init_mowse_info_ptr
  3    63 		       ptr;		    /* Initialization information */
  3    64 
  3    65 /* MOWSE initialization information */
  3    66 
  3    67 dcl init_mowse_info_ptr    ptr;
  3    68 dcl 01 init_mowse_info     based (init_mowse_info_ptr),
  3    69        02 version	       char (8),
  3    70        02 flags,				    /* Bit switches */
  3    71 	03 trace_sw      bit (1) unal,
  3    72 	03 debug_sw      bit (1) unal,
  3    73 	03 io_switch_sw  bit (1) unal,
  3    74 	03 force_sw      bit (1) unal,
  3    75 	03 start_up_sw   bit (1) unal,
  3    76 	03 escape_sw     bit (1) unal,
  3    77 	03 network_sw    bit (1) unal,
  3    78 	03 pad	       bit (29) unal,
  3    79        02 escape,
  3    80 	03 chars	       (0:255) bit (1) unal,	    /* Character escapes */
  3    81 	03 pad	       bit (32) unal,
  3    82        02 trace	       char (512) var,	    /* Trace file name */
  3    83        02 debug	       char (512) var,	    /* Debug file name */
  3    84        02 io_switch	       char (512) var,	    /* Io switch name of mowse_io_ attachment */
  3    85        02 startup	       (MAXIMUM_CAT_ENTRY - MINIMUM_CAT_ENTRY + 1)
  3    86 		       char (168) var;	    /* Capability to be autoloaded */
  3    87 
  3    88 /* Open description structure (this is padded to character bounds as it
  3    89*   is a character overlay structure - passed as a character string) */
  3    90 
  3    91 dcl open_struc_ptr	       ptr;
  3    92 dcl 01 open_struc	       based (open_struc_ptr),
  3    93        02 flags,
  3    94 	03 network_sw    bit (1) unal,
  3    95 	03 escape_sw     bit (1) unal,
  3    96 	03 pad	       bit (7) unal,
  3    97        02 escape,
  3    98 	03 switches      (0:255) bit (1) unal,
  3    99 	03 pad	       bit (32) unal,
  3   100        02 mbz	       bit (16) unal;
  3   101 
  3   102 /*  END INCLUDE FILE:	mowse_info.incl.pl1			  *  *  *  *  *  *  *  *  *  *  *  *  */
      199 
  4     1 /*  BEGIN INCLUDE FILE:	mowse.incl.pl1			  *  *  *  *  *  *  *  *  *  *  *  *  */
  4     2 
  4     3 /****^  HISTORY COMMENTS:
  4     4*  1) change(86-09-17,Flegel), approve(86-12-16,MCR7580),
  4     5*     audit(86-12-15,Gilcrease), install(87-01-06,MR12.0-1255):
  4     6*     Created.
  4     7*  2) change(86-10-03,Flegel), approve(86-12-16,MCR7580),
  4     8*     audit(86-12-15,Gilcrease), install(87-01-06,MR12.0-1255):
  4     9*     Combined mowse_minor_caps.incl.pl1 and
  4    10*     mowse.incl.pl1 so that programmer only needs include mowse.incl.pl1
  4    11*  3) change(86-11-27,Flegel), approve(86-11-27,MCR7580),
  4    12*     audit(86-12-15,Gilcrease), install(87-01-06,MR12.0-1255):
  4    13*     Approved.
  4    14*  4) change(87-07-31,Flegel), approve(87-07-31,MCR7580),
  4    15*     audit(87-07-31,RBarstad), install(87-08-07,MR12.1-1075):
  4    16*     Changes to support async call channels.
  4    17*                                                   END HISTORY COMMENTS */
  4    18 
  4    19 /* Name of MOWSE temp seg for data */
  4    20 
  4    21 /* format: style4,indattr,ifthen,^indcomtxt,thendo,^indproc,^indblkcom,initcol1,declareind8,dclind4,struclvlind3,comcol55 */
  4    22 dcl temp_seg_name	       char (6) init ("MOWSE_");
  4    23 
  4    24 /* Version number */
  4    25 
  4    26 dcl MOWSE_VERSION_	       char (8) int static options (constant) init ("version1");
  4    27 
  4    28 /* System identification */
  4    29 
  4    30 dcl LOCAL_SYSTEM	       fixed bin int static options (constant) init (32);
  4    31 dcl REMOTE_SYSTEM	       fixed bin int static options (constant) init (33);
  4    32 
  4    33 /* Status request return codes */
  4    34 
  4    35 dcl STATUS_SUCCESS	       fixed bin (8) int static options (constant)
  4    36 		       init (32);
  4    37 dcl STATUS_FAILED	       fixed bin (8) int static options (constant)
  4    38 		       init (33);
  4    39 
  4    40 /* Input/output capability buffer size limits */
  4    41 
  4    42 dcl MINIMUM_BUFFER_SIZE    fixed bin int static options (constant) init (128);
  4    43 dcl MAXIMUM_BUFFER_SIZE    fixed bin int static options (constant) init (65536);
  4    44 dcl MAXIMUM_BG_SIZE	       fixed bin int static options (constant) init (512);
  4    45 
  4    46 /* Packet size (communication) constants */
  4    47 
  4    48 dcl PACKET_SIZE	       fixed bin int static options (constant) init (124);
  4    49 dcl MAXIMUM_PACKET_SIZE    fixed bin int static options (constant) init (118);
  4    50 
  4    51 /* Query message constants */
  4    52 
  4    53 dcl SEND_QUERY	       fixed bin int static options (constant) init (128);
  4    54 dcl ACCEPT	       fixed bin int static options (constant) init (32);
  4    55 dcl REJECT	       fixed bin int static options (constant) init (33);
  4    56 
  4    57 /* Trace information constants */
  4    58 
  4    59 dcl RECEIVE	       fixed bin int static options (constant) init (1);
  4    60 dcl SEND		       fixed bin int static options (constant) init (0);
  4    61 
  4    62 /* Limits on dedicated minor capabilities */
  4    63 
  4    64 dcl MINIMUM_SYSTEM_MINOR   fixed bin int static options (constant) init (32);
  4    65 dcl MAXIMUM_SYSTEM_MINOR   fixed bin int static options (constant) init (63);
  4    66 dcl MINIMUM_USER_MINOR     fixed bin int static options (constant) init (64);
  4    67 dcl MAXIMUM_USER_MINOR     fixed bin int static options (constant) init (127);
  4    68 
  4    69 /* Dedicated Minor Capabilities */
  4    70 
  4    71 dcl LAST		       fixed bin int static options (constant) init (0);
  4    72 dcl EXECUTE_COMMAND_REPLY  fixed bin int static options (constant) init (32);
  4    73 dcl EXECUTE_CAPABILITY_REPLY
  4    74 		       fixed bin int static options (constant) init (33);
  4    75 dcl FAIL_CAPABILITY	       fixed bin int static options (constant) init (33);
  4    76 dcl INTERNAL	       fixed bin int static options (constant) init (32);
  4    77 dcl EXECUTE_COMMAND	       fixed bin int static options (constant) init (34);
  4    78 dcl ADD_TO_REMOTE_CAT      fixed bin int static options (constant) init (35);
  4    79 dcl DELETE_FROM_REMOTE_CAT fixed bin int static options (constant) init (36);
  4    80 dcl SUSPEND_APPLICATION    fixed bin int static options (constant) init (37);
  4    81 dcl RESUME_APPLICATION     fixed bin int static options (constant) init (38);
  4    82 dcl TERMINATE_APPLICATION  fixed bin int static options (constant) init (39);
  4    83 dcl RESET_APPLICATION      fixed bin int static options (constant) init (40);
  4    84 dcl RESET_REPLY	       fixed bin int static options (constant) init (41);
  4    85 dcl WAKE_UP	       fixed bin int static options (constant) init (42);
  4    86 dcl STATUS	       fixed bin int static options (constant) init (43);
  4    87 dcl OVERFLOWED_BUFFER      fixed bin int static options (constant) init (44);
  4    88 dcl SYSTEM_ERROR	       fixed bin int static options (constant) init (45);
  4    89 dcl QUERY_REPLY	       fixed bin int static options (constant) init (46);
  4    90 dcl RESPONSE_CONNECT       fixed bin int static options (constant) init (47);
  4    91 dcl RESPONSE_DISCONNECT    fixed bin int static options (constant) init (48);
  4    92 dcl REQUEST_CONNECT	       fixed bin int static options (constant) init (49);
  4    93 dcl REQUEST_DISCONNECT     fixed bin int static options (constant) init (50);
  4    94 dcl CONTINUE	       fixed bin int static options (constant) init (51);
  4    95 dcl MORE		       fixed bin int static options (constant) init (52);
  4    96 dcl SET_SLEEP_FLAG	       fixed bin int static options (constant) init (53);
  4    97 dcl RESET_SLEEP_FLAG       fixed bin int static options (constant) init (54);
  4    98 dcl SET_SUSPEND	       fixed bin int static options (constant) init (55);
  4    99 dcl RESET_SUSPEND	       fixed bin int static options (constant) init (56);
  4   100 dcl STATUS_REPLY	       fixed bin int static options (constant) init (57);
  4   101 
  4   102 /* Foreground */
  4   103 
  4   104 dcl FG_CONTROL_MESSAGE     fixed bin int static options (constant) init (33);
  4   105 dcl FG_BREAK	       fixed bin int static options (constant) init (34);
  4   106 dcl FG_TERMINAL_DATA       fixed bin int static options (constant) init (35);
  4   107 dcl FG_MORE_DATA	       fixed bin int static options (constant) init (36);
  4   108 dcl PUT_TO_BACKGROUND_BUFFER
  4   109 		       fixed bin int static options (constant) init (37);
  4   110 dcl PUT_TO_QUERY_MESSAGE_BUFFER
  4   111 		       fixed bin int static options (constant) init (38);
  4   112 
  4   113 /*  END INCLUDE FILE:	mowse.incl.pl1			  *  *  *  *  *  *  *  *  *  *  *  *  */
      200 
      201 
      202 /* : END */
      203      end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    08/07/87  1454.6  terminate_mowse_.pl1              >special_ldd>install>MR12.1-1075>terminate_mowse_.pl1
197          1    08/07/87  1447.6  mowse_mcb.incl.pl1                >special_ldd>install>MR12.1-1075>mowse_mcb.incl.pl1
198          2    08/07/87  1447.1  mowse_messages.incl.pl1           >special_ldd>install>MR12.1-1075>mowse_messages.incl.pl1
199          3    08/07/87  1445.8  mowse_info.incl.pl1               >special_ldd>install>MR12.1-1075>mowse_info.incl.pl1
200          4    08/07/87  1445.8  mowse.incl.pl1                    >special_ldd>install>MR12.1-1075>mowse.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
INTERNAL                        000001 constant        fixed bin(17,0)          initial dcl 4-76 set ref 85*
LOCAL_SYSTEM                    000001 constant        fixed bin(17,0)          initial dcl 4-30 set ref 85*
MAXIMUM_CAT_ENTRY                      constant        fixed bin(17,0)          initial dcl 3-25 ref 100 185
MINIMUM_CAT_ENTRY                      constant        fixed bin(17,0)          initial dcl 3-24 ref 100 185
PACKET_SIZE                            constant        fixed bin(17,0)          initial dcl 4-48 ref 2-155
TERMINATE_APPLICATION                  constant        fixed bin(17,0)          initial dcl 4-82 ref 109
capability_$pack                000024 constant        entry                    external dcl 66 ref 85
cat_index                       000100 automatic       fixed bin(17,0)          dcl 40 set ref 100* 101 114*
data_block_ptr           24            based           pointer                  level 2 dcl 1-14 ref 109
debug_file_iocb         714            based           pointer                  level 3 dcl 3-31 set ref 157 162* 164*
entry_var                20            based           entry variable           level 2 dcl 1-14 ref 109
hcs_$reset_ips_mask             000012 constant        entry                    external dcl 56 ref 166 178
hcs_$set_ips_mask               000010 constant        entry                    external dcl 55 ref 161 173
head_list_ptr           702            based           pointer                  level 3 dcl 3-31 ref 135
inbuff                   26            based           pointer                  level 2 dcl 1-14 set ref 117 124*
inbuff_data_length       15            based           fixed bin(17,0)          level 2 dcl 1-14 ref 119
init_mowse_info                        based           structure                level 1 unaligned dcl 3-68 ref 185
init_mowse_info_ptr     716            based           pointer                  level 2 dcl 3-31 set ref 183 185 187*
input_buffer_data                      based           char                     unaligned dcl 51 ref 121
input_buffer_length             000110 automatic       fixed bin(17,0)          dcl 44 set ref 119* 121 121
iox_$close                      000014 constant        entry                    external dcl 57 ref 162 174
iox_$detach_iocb                000016 constant        entry                    external dcl 58 ref 164 176
local_cat                 2            based           structure                array level 2 dcl 3-31
mask                            000116 automatic       bit(36)                  dcl 47 set ref 160* 161* 166* 166* 172* 173* 178*
                                                                                  178*
mcb                                    based           structure                level 1 unaligned dcl 1-14 set ref 128
mcb_ptr                         000102 automatic       pointer                  dcl 41 in procedure "terminate_mowse_" set ref 101*
                                                                                  109 109 109 109 114* 116 117 119 124 126* 128 129*
mcb_ptr                   4            based           pointer                  array level 3 in structure "mowse_info" dcl 3-31
                                                                                  in procedure "terminate_mowse_" ref 101 114
message_len                     000120 automatic       fixed bin(17,0)          initial dcl 2-33 set ref 2-33*
message_manager_info    702            based           structure                level 2 dcl 3-31
message_node                           based           structure                level 1 unaligned dcl 2-136 ref 151
mowse_capability                000117 automatic       fixed bin(17,0)          dcl 48 set ref 85* 109
mowse_flags             710            based           structure                level 2 dcl 3-31
mowse_info                             based           structure                level 1 dcl 3-31
msg_ptr                                based           pointer                  level 2 dcl 2-145 ref 141
next_msg                  4            based           pointer                  level 2 dcl 2-145 ref 143
next_node                 4            based           pointer                  level 2 dcl 2-136 ref 150
null                                                   builtin function         dcl 73 ref 94 109 109 116 118 122 124 129 137 140
                                                                                  146 152 157 169 183 187
p_code                                 parameter       fixed bin(35,0)          dcl 36 set ref 19 84* 85* 87 192*
p_mowse_info_ptr                       parameter       pointer                  dcl 32 set ref 19 94 101 114 135 157 162 164 169 174
                                                                                  176 183 185 187 192*
partial_message                        based           structure                level 1 unaligned dcl 2-145 ref 145
partial_message_ptr_1           000112 automatic       pointer                  dcl 45 set ref 138* 140 141 143*
partial_message_ptr_2           000114 automatic       pointer                  dcl 46 set ref 141* 143 145 146*
partial_msg_list_ptr      2            based           pointer                  level 2 dcl 2-136 ref 138
release_outbuffer_              000022 constant        entry                    external dcl 65 ref 126
release_temp_segment_           000020 constant        entry                    external dcl 59 ref 192
temp_buff_ptr                   000104 automatic       pointer                  dcl 42 set ref 117* 118 121 122* 135* 137 138 149
                                                                                  150*
temp_buff_ptr_2                 000106 automatic       pointer                  dcl 43 set ref 149* 150 151 152*
temp_seg_name                   000122 automatic       char(6)                  initial unaligned dcl 4-22 set ref 192* 4-22*
trace_file_iocb         712            based           pointer                  level 3 dcl 3-31 set ref 169 174* 176*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
ACCEPT                                 internal static fixed bin(17,0)          initial dcl 4-54
ADD_TO_REMOTE_CAT                      internal static fixed bin(17,0)          initial dcl 4-78
BG                                     internal static fixed bin(17,0)          initial dcl 2-17
CAPABILITY_NAME_LENGTH                 internal static fixed bin(17,0)          initial dcl 3-27
CONTINUE                               internal static fixed bin(17,0)          initial dcl 4-94
DELETE_FROM_REMOTE_CAT                 internal static fixed bin(17,0)          initial dcl 4-79
EXECUTE_CAPABILITY_REPLY               internal static fixed bin(17,0)          initial dcl 4-73
EXECUTE_COMMAND                        internal static fixed bin(17,0)          initial dcl 4-77
EXECUTE_COMMAND_REPLY                  internal static fixed bin(17,0)          initial dcl 4-72
FAIL_CAPABILITY                        internal static fixed bin(17,0)          initial dcl 4-75
FG                                     internal static fixed bin(17,0)          initial dcl 2-19
FG_BREAK                               internal static fixed bin(17,0)          initial dcl 4-105
FG_CONTROL_MESSAGE                     internal static fixed bin(17,0)          initial dcl 4-104
FG_MORE_DATA                           internal static fixed bin(17,0)          initial dcl 4-107
FG_TERMINAL_DATA                       internal static fixed bin(17,0)          initial dcl 4-106
LAST                                   internal static fixed bin(17,0)          initial dcl 4-71
MAXIMUM_BG_SIZE                        internal static fixed bin(17,0)          initial dcl 4-44
MAXIMUM_BUFFER_SIZE                    internal static fixed bin(17,0)          initial dcl 4-43
MAXIMUM_PACKET_SIZE                    internal static fixed bin(17,0)          initial dcl 4-49
MAXIMUM_SYSTEM_MINOR                   internal static fixed bin(17,0)          initial dcl 4-65
MAXIMUM_USER_MINOR                     internal static fixed bin(17,0)          initial dcl 4-67
MINIMUM_BUFFER_SIZE                    internal static fixed bin(17,0)          initial dcl 4-42
MINIMUM_SYSTEM_MINOR                   internal static fixed bin(17,0)          initial dcl 4-64
MINIMUM_USER_MINOR                     internal static fixed bin(17,0)          initial dcl 4-66
MORE                                   internal static fixed bin(17,0)          initial dcl 4-95
MOWSE_VERSION_                         internal static char(8)                  initial unaligned dcl 4-26
OVERFLOWED_BUFFER                      internal static fixed bin(17,0)          initial dcl 4-87
PUT_TO_BACKGROUND_BUFFER               internal static fixed bin(17,0)          initial dcl 4-108
PUT_TO_QUERY_MESSAGE_BUFFER            internal static fixed bin(17,0)          initial dcl 4-110
QUERY_REPLY                            internal static fixed bin(17,0)          initial dcl 4-89
RECEIVE                                internal static fixed bin(17,0)          initial dcl 4-59
REJECT                                 internal static fixed bin(17,0)          initial dcl 4-55
REMOTE_SYSTEM                          internal static fixed bin(17,0)          initial dcl 4-31
REQUEST_CONNECT                        internal static fixed bin(17,0)          initial dcl 4-92
REQUEST_DISCONNECT                     internal static fixed bin(17,0)          initial dcl 4-93
RESET_APPLICATION                      internal static fixed bin(17,0)          initial dcl 4-83
RESET_REPLY                            internal static fixed bin(17,0)          initial dcl 4-84
RESET_SLEEP_FLAG                       internal static fixed bin(17,0)          initial dcl 4-97
RESET_SUSPEND                          internal static fixed bin(17,0)          initial dcl 4-99
RESPONSE_CONNECT                       internal static fixed bin(17,0)          initial dcl 4-90
RESPONSE_DISCONNECT                    internal static fixed bin(17,0)          initial dcl 4-91
RESUME_APPLICATION                     internal static fixed bin(17,0)          initial dcl 4-81
SEND                                   internal static fixed bin(17,0)          initial dcl 4-60
SEND_QUERY                             internal static fixed bin(17,0)          initial dcl 4-53
SET_SLEEP_FLAG                         internal static fixed bin(17,0)          initial dcl 4-96
SET_SUSPEND                            internal static fixed bin(17,0)          initial dcl 4-98
STATUS                                 internal static fixed bin(17,0)          initial dcl 4-86
STATUS_FAILED                          internal static fixed bin(8,0)           initial dcl 4-37
STATUS_REPLY                           internal static fixed bin(17,0)          initial dcl 4-100
STATUS_SUCCESS                         internal static fixed bin(8,0)           initial dcl 4-35
SUSPEND_APPLICATION                    internal static fixed bin(17,0)          initial dcl 4-80
SYSTEM_ERROR                           internal static fixed bin(17,0)          initial dcl 4-88
WAKE_UP                                internal static fixed bin(17,0)          initial dcl 4-85
alter_cat_message                      based           structure                level 1 packed unaligned dcl 2-63
event_message                          based           structure                level 1 packed unaligned dcl 2-76
execom_message                         based           structure                level 1 packed unaligned dcl 2-49
execom_reply_msg                       based           structure                level 1 packed unaligned dcl 2-122
init_mowse_info_ptr                    automatic       pointer                  dcl 3-67
input_message                          based           structure                level 1 packed unaligned dcl 2-38
last_message                           based           structure                level 1 packed unaligned dcl 2-110
message_ptr                            automatic       pointer                  dcl 2-34
more_remaining_message                 based           structure                level 1 packed unaligned dcl 2-96
msg_node_ptr                           automatic       pointer                  dcl 2-135
open_struc                             based           structure                level 1 packed unaligned dcl 3-92
open_struc_ptr                         automatic       pointer                  dcl 3-91
output_buffer                          based           structure                level 1 unaligned dcl 1-34
part_msg                               based           char                     unaligned dcl 2-152
part_msg_length                        automatic       fixed bin(17,0)          dcl 2-151
part_msg_ptr                           automatic       pointer                  dcl 2-144
request_more_message                   based           structure                level 1 packed unaligned dcl 2-84
trace_message_info                     automatic       structure                level 1 unaligned dcl 2-155

NAME DECLARED BY EXPLICIT CONTEXT.
terminate_mowse_                000016 constant        entry                    external dcl 19

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       614         642     477         624
Length      1132     477        26         253     114           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
terminate_mowse_                    134 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
terminate_mowse_         000100 cat_index                   terminate_mowse_
                         000102 mcb_ptr                     terminate_mowse_
                         000104 temp_buff_ptr               terminate_mowse_
                         000106 temp_buff_ptr_2             terminate_mowse_
                         000110 input_buffer_length         terminate_mowse_
                         000112 partial_message_ptr_1       terminate_mowse_
                         000114 partial_message_ptr_2       terminate_mowse_
                         000116 mask                        terminate_mowse_
                         000117 mowse_capability            terminate_mowse_
                         000120 message_len                 terminate_mowse_
                         000122 temp_seg_name               terminate_mowse_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ent_var_desc   call_ext_out_desc   call_ext_out        return_mac          alloc_auto_adj      ext_entry
op_freen_

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
capability_$pack              hcs_$reset_ips_mask           hcs_$set_ips_mask             iox_$close
iox_$detach_iocb              release_outbuffer_            release_temp_segment_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     19 000012    2   33 000023    2  155 000025    4   22 000033        84 000035        85 000037        87 000053
     94 000056       100 000062       101 000071       109 000077       114 000146       116 000155       117 000161
    118 000163       119 000167       121 000171       122 000175       124 000177       126 000202       128 000211
    129 000213       131 000215       135 000217       137 000224       138 000230       140 000233       141 000240
    143 000243       145 000245       146 000247       147 000251       149 000252       150 000254       151 000257
    152 000261       153 000263       157 000264       160 000273       161 000274       162 000307       164 000324
    166 000341       169 000351       172 000360       173 000361       174 000374       176 000411       178 000426
    183 000436       185 000445       187 000450       192 000455       203 000476


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
