	COMPILATION LISTING OF SEGMENT mrpg_date_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 02/14/84  0851.9 mst Tue
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 /**** format: ind3,ll80,initcol6,indattr,^inddcls,dclind4,idind16	       */
       12 /**** format: struclvlind2,^ifthenstmt,^ifthendo,^ifthen,^indnoniterdo       */
       13 /**** format: ^inditerdo,^indnoniterend,^indthenelse,case,^indproc,^indend   */
       14 /**** format: ^delnl,^insnl,comcol41,^indcom,^indblkcom,linecom,^indcomtxt   */
       15 
       16 mrpg_date_: proc (DAY, HHMMSS, MMDDYY, MONTH, YYDDD);
       17 
       18 dcl DAY		char (12) var,
       19     HHMMSS	char (8),
       20     MMDDYY	char (8),
       21     MONTH		char (12) var,
       22     YYDDD		char (5);
       23 
       24 dcl clock_	entry returns (fixed bin (71));
       25 dcl month		fixed bin;
       26 dcl day		fixed bin;
       27 dcl year		fixed bin;
       28 dcl hour		fixed bin;
       29 dcl minute	fixed bin;
       30 dcl second	fixed bin;
       31 dcl dow		fixed bin;
       32 dcl dayr		fixed bin;
       33 
       34 dcl datebin_$dayr_clk entry (fixed bin (71), fixed bin);
       35 dcl datebin_	entry (fixed bin (71), fixed bin, fixed bin, fixed bin,
       36 		fixed bin, fixed bin, fixed bin, fixed bin, fixed bin,
       37 		fixed bin);
       38 dcl clock		fixed bin (71);
       39 
       40       clock = clock_ ();
       41       call datebin_ (clock, 0,
       42          month, day, year,
       43          hour, minute, second,
       44          dow, 0);
       45       call datebin_$dayr_clk (clock, dayr);
       46 
       47       DAY = DAYn (dow);
       48 dcl DAYn		(7) char (12) var int static init (
       49 		"Monday",
       50 		"Tuesday",
       51 		"Wednesday",
       52 		"Thursday",
       53 		"Friday",
       54 		"Saturday",
       55 		"Sunday");
       56 
       57 dcl 1 tri,
       58       2 p1	pic "99",
       59       2 f1	char (1),
       60       2 p2	pic "99",
       61       2 f2	char (1),
       62       2 p3	pic "99";
       63       tri.f1, tri.f2 = ":";
       64       tri.p1 = hour;
       65       tri.p2 = minute;
       66       tri.p3 = second;
       67       HHMMSS = string (tri);
       68 
       69       tri.f1, tri.f2 = "/";
       70       tri.p1 = month;
       71       tri.p2 = day;
       72       tri.p3 = year - 1900;
       73       MMDDYY = string (tri);
       74 
       75       MONTH = MONTHn (month);
       76 dcl MONTHn	(12) char (12) var int static init (
       77 		"January",
       78 		"February",
       79 		"March",
       80 		"April",
       81 		"May",
       82 		"June",
       83 		"July",
       84 		"August",
       85 		"September",
       86 		"October",
       87 		"November",
       88 		"December");
       89 
       90 dcl 1 dbl,
       91       2 p1	pic "99",
       92       2 p2	pic "999";
       93 
       94       dbl.p1 = year - 1900;
       95       dbl.p2 = dayr;
       96       YYDDD = string (dbl);
       97 
       98 
       99    end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    02/14/84  0844.2  mrpg_date_.pl1                    >special_ldd>on>6591>mrpg_date_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
DAY                                    parameter       varying char(12)         dcl 18 set ref 16 47*
DAYn                            000060 constant        varying char(12)         initial array dcl 48 ref 47
HHMMSS                                 parameter       char(8)                  unaligned dcl 18 set ref 16 67*
MMDDYY                                 parameter       char(8)                  unaligned dcl 18 set ref 16 73*
MONTH                                  parameter       varying char(12)         dcl 18 set ref 16 75*
MONTHn                          000000 constant        varying char(12)         initial array dcl 76 ref 75
YYDDD                                  parameter       char(5)                  unaligned dcl 18 set ref 16 96*
clock                           000110 automatic       fixed bin(71,0)          dcl 38 set ref 40* 41* 45*
clock_                          000010 constant        entry                    external dcl 24 ref 40
datebin_                        000014 constant        entry                    external dcl 35 ref 41
datebin_$dayr_clk               000012 constant        entry                    external dcl 34 ref 45
day                             000101 automatic       fixed bin(17,0)          dcl 26 set ref 41* 71
dayr                            000107 automatic       fixed bin(17,0)          dcl 32 set ref 45* 95
dbl                             000114 automatic       structure                level 1 packed unaligned dcl 90 set ref 96
dow                             000106 automatic       fixed bin(17,0)          dcl 31 set ref 41* 47
f1                        0(18) 000112 automatic       char(1)                  level 2 packed unaligned dcl 57 set ref 63* 69*
f2                        1(09) 000112 automatic       char(1)                  level 2 packed unaligned dcl 57 set ref 63* 69*
hour                            000103 automatic       fixed bin(17,0)          dcl 28 set ref 41* 64
minute                          000104 automatic       fixed bin(17,0)          dcl 29 set ref 41* 65
month                           000100 automatic       fixed bin(17,0)          dcl 25 set ref 41* 70 75
p1                              000112 automatic       picture(2)               level 2 in structure "tri" packed unaligned dcl 57
                                                                                  in procedure "mrpg_date_" set ref 64* 70*
p1                              000114 automatic       picture(2)               level 2 in structure "dbl" packed unaligned dcl 90
                                                                                  in procedure "mrpg_date_" set ref 94*
p2                        0(27) 000112 automatic       picture(2)               level 2 in structure "tri" packed unaligned dcl 57
                                                                                  in procedure "mrpg_date_" set ref 65* 71*
p2                        0(18) 000114 automatic       picture(3)               level 2 in structure "dbl" packed unaligned dcl 90
                                                                                  in procedure "mrpg_date_" set ref 95*
p3                        1(18) 000112 automatic       picture(2)               level 2 packed unaligned dcl 57 set ref 66* 72*
second                          000105 automatic       fixed bin(17,0)          dcl 30 set ref 41* 66
tri                             000112 automatic       structure                level 1 packed unaligned dcl 57 set ref 67 73
year                            000102 automatic       fixed bin(17,0)          dcl 27 set ref 41* 72 94

NAME DECLARED BY EXPLICIT CONTEXT.
mrpg_date_                      000125 constant        entry                    external dcl 16

NAME DECLARED BY CONTEXT OR IMPLICATION.
string                                                 builtin function         ref 67 73 96

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       416         434     350         426
Length       602     350        16         131      45           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
mrpg_date_                          106 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
mrpg_date_               000100 month                       mrpg_date_
                         000101 day                         mrpg_date_
                         000102 year                        mrpg_date_
                         000103 hour                        mrpg_date_
                         000104 minute                      mrpg_date_
                         000105 second                      mrpg_date_
                         000106 dow                         mrpg_date_
                         000107 dayr                        mrpg_date_
                         000110 clock                       mrpg_date_
                         000112 tri                         mrpg_date_
                         000114 dbl                         mrpg_date_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
clock_                        datebin_                      datebin_$dayr_clk

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     16 000120        40 000132        41 000140        45 000173        47 000204        63 000217        64 000223
     65 000232        66 000241        67 000250        69 000254        70 000260        71 000267        72 000276
     73 000310        75 000314        94 000326        95 000332        96 000341        99 000345


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
