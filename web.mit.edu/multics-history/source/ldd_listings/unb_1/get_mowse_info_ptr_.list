	COMPILATION LISTING OF SEGMENT get_mowse_info_ptr_
	Compiled by: Multics PL/I Compiler, Release 29, of July 28, 1986
	Compiled at: Honeywell Bull, Phx. Az., Sys-M 
	Compiled on: 08/07/87  1507.2 mst Fri
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1987                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1986 *
        6*        *                                                         *
        7*        *********************************************************** */
        8 
        9 /****^  HISTORY COMMENTS:
       10*  1) change(86-07-24,Smith), approve(87-07-15,MCR7580),
       11*     audit(87-07-30,RBarstad), install(87-08-07,MR12.1-1075):
       12*     Created.
       13*  2) change(86-11-27,Flegel), approve(86-11-27,MCR7580),
       14*     audit(87-07-30,RBarstad), install(87-08-07,MR12.1-1075):
       15*     Approved.
       16*                                                   END HISTORY COMMENTS */
       17 
       18 /* format: style4,indattr,ifthen,^indcomtxt,thendo,^indproc,^indblkcom,initcol1,declareind8,dclind4,struclvlind3,comcol55 */
       19 get_mowse_info_ptr_:
       20      proc (p_mcb_ptr, p_mowse_info_ptr, p_code);
       21 
       22 /* : PROGRAM FUNCTION
       23*
       24*Gets the mowse info pointer from the mowse_i/o switch.
       25**/
       26 
       27 /* : NOTES
       28**/
       29 
       30 /* INPUT PARAMETERS */
       31 dcl p_mcb_ptr	       ptr;		    /* Pointer to mcb of application issuing call */
       32 
       33 
       34 /* OUTPUT PARAMETERS */
       35 dcl p_mowse_info_ptr       ptr;		    /* Pointer to mowse info structure */
       36 dcl p_code	       fixed bin (35);	    /* Error code */
       37 
       38 
       39 /* MISC VARIABLES */
       40 
       41 
       42 /* STRUCTURES */
       43 dcl 01 info	       like mowse_io_info;
       44 
       45 
       46 /* STRUCTURES */
       47 
       48 
       49 /* SYSTEM CALLS */
       50 dcl iox_$control	       entry (ptr, char (*), ptr, fixed bin (35));
       51 
       52 
       53 /* SYSTEM CALL SUPPORT */
       54 
       55 
       56 /* EXTERNAL CALLS */
       57 
       58 
       59 /* EXTERNAL CALL SUPPORT */
       60 dcl error_table_$unimplemented_version
       61 		       fixed bin (35) ext static;
       62 dcl ws_error_$invalid_mcb  fixed bin (35) ext static;
       63 
       64 
       65 /* BUILTINS */
       66 dcl addr		       builtin;
       67 dcl null		       builtin;
       68 
       69 /* CONDITIONS */
       70 
       71 
       72 /* CONSTANTS */
       73 
       74 
       75 /**/
       76 /* INITIALIZATION */
       77 
       78 
       79 /* MAIN */
       80 
       81 	if p_mcb_ptr = null () then do;
       82 	     p_code = ws_error_$invalid_mcb;
       83 	     return;
       84 	end;
       85 
       86 	p_mowse_info_ptr = null ();
       87 	info.version = mowse_io_info_version_1;
       88 	call iox_$control (p_mcb_ptr -> mcb.iocb_ptr, "get_mowse_info",
       89 	     addr (info), p_code);
       90 
       91 	p_mowse_info_ptr = info.info_ptr;
       92 	if p_code ^= 0 then
       93 	     return;
       94 	if p_mowse_info_ptr -> mowse_info.version ^= MOWSE_VERSION_ then do;
       95 	     p_code = error_table_$unimplemented_version;
       96 	     return;
       97 	end;
       98 
       99 
      100 
      101 /* INCLUDE FILES */
  1     1 /*  BEGIN INCLUDE FILE:	mowse.incl.pl1			  *  *  *  *  *  *  *  *  *  *  *  *  */
  1     2 
  1     3 /****^  HISTORY COMMENTS:
  1     4*  1) change(86-09-17,Flegel), approve(86-12-16,MCR7580),
  1     5*     audit(86-12-15,Gilcrease), install(87-01-06,MR12.0-1255):
  1     6*     Created.
  1     7*  2) change(86-10-03,Flegel), approve(86-12-16,MCR7580),
  1     8*     audit(86-12-15,Gilcrease), install(87-01-06,MR12.0-1255):
  1     9*     Combined mowse_minor_caps.incl.pl1 and
  1    10*     mowse.incl.pl1 so that programmer only needs include mowse.incl.pl1
  1    11*  3) change(86-11-27,Flegel), approve(86-11-27,MCR7580),
  1    12*     audit(86-12-15,Gilcrease), install(87-01-06,MR12.0-1255):
  1    13*     Approved.
  1    14*  4) change(87-07-31,Flegel), approve(87-07-31,MCR7580),
  1    15*     audit(87-07-31,RBarstad), install(87-08-07,MR12.1-1075):
  1    16*     Changes to support async call channels.
  1    17*                                                   END HISTORY COMMENTS */
  1    18 
  1    19 /* Name of MOWSE temp seg for data */
  1    20 
  1    21 /* format: style4,indattr,ifthen,^indcomtxt,thendo,^indproc,^indblkcom,initcol1,declareind8,dclind4,struclvlind3,comcol55 */
  1    22 dcl temp_seg_name	       char (6) init ("MOWSE_");
  1    23 
  1    24 /* Version number */
  1    25 
  1    26 dcl MOWSE_VERSION_	       char (8) int static options (constant) init ("version1");
  1    27 
  1    28 /* System identification */
  1    29 
  1    30 dcl LOCAL_SYSTEM	       fixed bin int static options (constant) init (32);
  1    31 dcl REMOTE_SYSTEM	       fixed bin int static options (constant) init (33);
  1    32 
  1    33 /* Status request return codes */
  1    34 
  1    35 dcl STATUS_SUCCESS	       fixed bin (8) int static options (constant)
  1    36 		       init (32);
  1    37 dcl STATUS_FAILED	       fixed bin (8) int static options (constant)
  1    38 		       init (33);
  1    39 
  1    40 /* Input/output capability buffer size limits */
  1    41 
  1    42 dcl MINIMUM_BUFFER_SIZE    fixed bin int static options (constant) init (128);
  1    43 dcl MAXIMUM_BUFFER_SIZE    fixed bin int static options (constant) init (65536);
  1    44 dcl MAXIMUM_BG_SIZE	       fixed bin int static options (constant) init (512);
  1    45 
  1    46 /* Packet size (communication) constants */
  1    47 
  1    48 dcl PACKET_SIZE	       fixed bin int static options (constant) init (124);
  1    49 dcl MAXIMUM_PACKET_SIZE    fixed bin int static options (constant) init (118);
  1    50 
  1    51 /* Query message constants */
  1    52 
  1    53 dcl SEND_QUERY	       fixed bin int static options (constant) init (128);
  1    54 dcl ACCEPT	       fixed bin int static options (constant) init (32);
  1    55 dcl REJECT	       fixed bin int static options (constant) init (33);
  1    56 
  1    57 /* Trace information constants */
  1    58 
  1    59 dcl RECEIVE	       fixed bin int static options (constant) init (1);
  1    60 dcl SEND		       fixed bin int static options (constant) init (0);
  1    61 
  1    62 /* Limits on dedicated minor capabilities */
  1    63 
  1    64 dcl MINIMUM_SYSTEM_MINOR   fixed bin int static options (constant) init (32);
  1    65 dcl MAXIMUM_SYSTEM_MINOR   fixed bin int static options (constant) init (63);
  1    66 dcl MINIMUM_USER_MINOR     fixed bin int static options (constant) init (64);
  1    67 dcl MAXIMUM_USER_MINOR     fixed bin int static options (constant) init (127);
  1    68 
  1    69 /* Dedicated Minor Capabilities */
  1    70 
  1    71 dcl LAST		       fixed bin int static options (constant) init (0);
  1    72 dcl EXECUTE_COMMAND_REPLY  fixed bin int static options (constant) init (32);
  1    73 dcl EXECUTE_CAPABILITY_REPLY
  1    74 		       fixed bin int static options (constant) init (33);
  1    75 dcl FAIL_CAPABILITY	       fixed bin int static options (constant) init (33);
  1    76 dcl INTERNAL	       fixed bin int static options (constant) init (32);
  1    77 dcl EXECUTE_COMMAND	       fixed bin int static options (constant) init (34);
  1    78 dcl ADD_TO_REMOTE_CAT      fixed bin int static options (constant) init (35);
  1    79 dcl DELETE_FROM_REMOTE_CAT fixed bin int static options (constant) init (36);
  1    80 dcl SUSPEND_APPLICATION    fixed bin int static options (constant) init (37);
  1    81 dcl RESUME_APPLICATION     fixed bin int static options (constant) init (38);
  1    82 dcl TERMINATE_APPLICATION  fixed bin int static options (constant) init (39);
  1    83 dcl RESET_APPLICATION      fixed bin int static options (constant) init (40);
  1    84 dcl RESET_REPLY	       fixed bin int static options (constant) init (41);
  1    85 dcl WAKE_UP	       fixed bin int static options (constant) init (42);
  1    86 dcl STATUS	       fixed bin int static options (constant) init (43);
  1    87 dcl OVERFLOWED_BUFFER      fixed bin int static options (constant) init (44);
  1    88 dcl SYSTEM_ERROR	       fixed bin int static options (constant) init (45);
  1    89 dcl QUERY_REPLY	       fixed bin int static options (constant) init (46);
  1    90 dcl RESPONSE_CONNECT       fixed bin int static options (constant) init (47);
  1    91 dcl RESPONSE_DISCONNECT    fixed bin int static options (constant) init (48);
  1    92 dcl REQUEST_CONNECT	       fixed bin int static options (constant) init (49);
  1    93 dcl REQUEST_DISCONNECT     fixed bin int static options (constant) init (50);
  1    94 dcl CONTINUE	       fixed bin int static options (constant) init (51);
  1    95 dcl MORE		       fixed bin int static options (constant) init (52);
  1    96 dcl SET_SLEEP_FLAG	       fixed bin int static options (constant) init (53);
  1    97 dcl RESET_SLEEP_FLAG       fixed bin int static options (constant) init (54);
  1    98 dcl SET_SUSPEND	       fixed bin int static options (constant) init (55);
  1    99 dcl RESET_SUSPEND	       fixed bin int static options (constant) init (56);
  1   100 dcl STATUS_REPLY	       fixed bin int static options (constant) init (57);
  1   101 
  1   102 /* Foreground */
  1   103 
  1   104 dcl FG_CONTROL_MESSAGE     fixed bin int static options (constant) init (33);
  1   105 dcl FG_BREAK	       fixed bin int static options (constant) init (34);
  1   106 dcl FG_TERMINAL_DATA       fixed bin int static options (constant) init (35);
  1   107 dcl FG_MORE_DATA	       fixed bin int static options (constant) init (36);
  1   108 dcl PUT_TO_BACKGROUND_BUFFER
  1   109 		       fixed bin int static options (constant) init (37);
  1   110 dcl PUT_TO_QUERY_MESSAGE_BUFFER
  1   111 		       fixed bin int static options (constant) init (38);
  1   112 
  1   113 /*  END INCLUDE FILE:	mowse.incl.pl1			  *  *  *  *  *  *  *  *  *  *  *  *  */
      102 
  2     1 /*  BEGIN INCLUDE FILE:	mowse_mcb.incl.pl1			  *  *  *  *  *  *  *  *  *  *  *  *  */
  2     2 
  2     3 /****^  HISTORY COMMENTS:
  2     4*  1) change(86-05-17,Smith), approve(87-07-15,MCR7580),
  2     5*     audit(87-07-30,RBarstad), install(87-08-07,MR12.1-1075):
  2     6*     Created to define the mcb (Mowse Control Block)
  2     7*     for information on capabilities.
  2     8*  2) change(86-11-27,Flegel), approve(86-11-27,MCR7580),
  2     9*     audit(87-07-30,RBarstad), install(87-08-07,MR12.1-1075):
  2    10*     Approved.
  2    11*                                                   END HISTORY COMMENTS */
  2    12 /* MOWSE control block */
  2    13 /* format: style4,indattr,ifthen,^indcomtxt,thendo,^indproc,^indblkcom,initcol1,declareind8,dclind4,struclvlind3,comcol55 */
  2    14 dcl 01 mcb	       based,
  2    15        02 version	       char (8),
  2    16        02 capability_name  char (32),		    /* Name of capability */
  2    17        02 major_capability fixed bin (17),	    /* Capability number */
  2    18        02 inbuff_length    fixed bin (17),	    /* Length of buffer */
  2    19        02 inbuff_position_index
  2    20 		       fixed bin (17),	    /* Current position in inbuffer */
  2    21        02 inbuff_data_length
  2    22 		       fixed bin (17),	    /* Amoiunt of data in inbuffer */
  2    23        02 outbuff_length   fixed bin (17),	    /* Length of outbuffer */
  2    24        02 mbz1	       bit (36) unal,
  2    25        02 entry_var	       entry options (variable),  /* Message processor entry point of capability */
  2    26        02 data_block_ptr   ptr,		    /* Capability  data */
  2    27        02 inbuff	       ptr,		    /* Message input buffer */
  2    28        02 outbuff_list_start
  2    29 		       ptr,		    /* Pointer to outbuffer data */
  2    30        02 outbuff_list_end ptr,		    /* Last node in outbuffer data */
  2    31        02 iocb_ptr	       ptr,		    /* IOCB to mowse_io_ */
  2    32        02 mowse_info_ptr   ptr;		    /* MOWSE information */
  2    33 					    /* Output buffer linked list node */
  2    34 dcl 01 output_buffer       based,
  2    35        02 destination_system
  2    36 		       char,		    /* Destination of message */
  2    37        02 destination_major char,
  2    38        02 destination_minor char,
  2    39        02 buffer_position  fixed bin,		    /* Position in buffer of message */
  2    40        02 buffer_length    fixed bin,		    /* Length of buffer */
  2    41        02 next_buffer      ptr,		    /* Next buffer of message */
  2    42        02 data	       ptr;		    /* Pointer to message */
  2    43 
  2    44 /*  END INCLUDE FILE:	mowse_mcb.incl.pl1			  *  *  *  *  *  *  *  *  *  *  *  *  */
      103 
  3     1 /*  BEGIN INCLUDE FILE:	mowse_info.incl.pl1			  *  *  *  *  *  *  *  *  *  *  *  *  */
  3     2 
  3     3 /****^  HISTORY COMMENTS:
  3     4*  1) change(86-07-19,Smith), approve(87-07-15,MCR7580),
  3     5*     audit(87-07-30,RBarstad), install(87-08-07,MR12.1-1075):
  3     6*     Created to define MOWSE information to be
  3     7*     placed into a temp segment.
  3     8*  2) change(86-11-27,Flegel), approve(86-11-27,MCR7580),
  3     9*     audit(87-07-30,RBarstad), install(87-08-07,MR12.1-1075):
  3    10*     Approved.
  3    11*  3) change(87-02-25,Flegel), approve(87-02-25,MCR7580),
  3    12*     audit(87-07-30,RBarstad), install(87-08-07,MR12.1-1075):
  3    13*     Added bit switches to the init_mowse_info structure as well as the force
  3    14*     flag.
  3    15*  4) change(87-03-24,Flegel), approve(87-03-24,MCR7580),
  3    16*     audit(87-07-30,RBarstad), install(87-08-07,MR12.1-1075):
  3    17*     Added open_struc for passing EOP and escape char info from attach_mowse
  3    18*     to mowse_io_.
  3    19*                                                   END HISTORY COMMENTS */
  3    20 
  3    21 /* CAT index limits */
  3    22 
  3    23 /* format: style4,indattr,ifthen,^indcomtxt,thendo,^indproc,^indblkcom,initcol1,declareind8,dclind4,struclvlind3,comcol55 */
  3    24 dcl MINIMUM_CAT_ENTRY      fixed bin int static options (constant) init (33);
  3    25 dcl MAXIMUM_CAT_ENTRY      fixed bin int static options (constant) init (64);
  3    26 
  3    27 dcl CAPABILITY_NAME_LENGTH fixed bin int static options (constant) init (32);
  3    28 
  3    29 /* Mowse information structure */
  3    30 
  3    31 dcl 01 mowse_info	       based aligned,
  3    32        02 version	       char (8),
  3    33        02 local_cat	       dimension (33:64),	    /* Multics CAT table */
  3    34 	03 flags,
  3    35 	   04 reset      bit (1) unal,	    /* Reset in progress */
  3    36 	   04 suspended  bit (1) unal,	    /* Suspended applciation */
  3    37 	   04 status     bit (1) unal,	    /* Status pending */
  3    38 	   04 mbz1       bit (33) unal,
  3    39 	03 sleep_time    fixed bin,		    /* Time application is sleeping */
  3    40 	03 mcb_ptr       ptr,		    /* Capability MCB */
  3    41        02 remote_cat       dimension (33:64),	    /* PC CAT table */
  3    42 	03 major_capability
  3    43 		       fixed bin,		    /* Capability number */
  3    44 	03 capability_name char (32),		    /* Name of capability */
  3    45 	03 flags,
  3    46 	   04 reset      bit (1) unal,	    /* Reset in progress */
  3    47 	   04 suspended  bit (1) unal,	    /* Suspended capability */
  3    48 	   04 sleep_time bit (1) unal,	    /* Application sleeping */
  3    49 	   04 mbz2       bit (33) unal,
  3    50        02 message_manager_info,		    /* Info for processing messages */
  3    51 	03 head_list_ptr ptr,		    /* Head of message list */
  3    52 	03 tail_list_ptr ptr,		    /* Tail of message list */
  3    53 	03 pending_messages
  3    54 		       fixed bin,		    /* Number of pending messages */
  3    55        02 mowse_flags,
  3    56 	03 trace	       bit (1) unal,	    /* Message tracing facility active */
  3    57 	03 debug	       bit (1) unal,	    /* Debugging packets facility active */
  3    58 	03 error_handled bit (1) unal,	    /* In mowse_error_handler procedure */
  3    59 	03 mbz1	       bit (33) unal,
  3    60 	03 trace_file_iocb ptr,		    /* Trace file iocb */
  3    61 	03 debug_file_iocb ptr,		    /* Debug file iocb */
  3    62        02 init_mowse_info_ptr
  3    63 		       ptr;		    /* Initialization information */
  3    64 
  3    65 /* MOWSE initialization information */
  3    66 
  3    67 dcl init_mowse_info_ptr    ptr;
  3    68 dcl 01 init_mowse_info     based (init_mowse_info_ptr),
  3    69        02 version	       char (8),
  3    70        02 flags,				    /* Bit switches */
  3    71 	03 trace_sw      bit (1) unal,
  3    72 	03 debug_sw      bit (1) unal,
  3    73 	03 io_switch_sw  bit (1) unal,
  3    74 	03 force_sw      bit (1) unal,
  3    75 	03 start_up_sw   bit (1) unal,
  3    76 	03 escape_sw     bit (1) unal,
  3    77 	03 network_sw    bit (1) unal,
  3    78 	03 pad	       bit (29) unal,
  3    79        02 escape,
  3    80 	03 chars	       (0:255) bit (1) unal,	    /* Character escapes */
  3    81 	03 pad	       bit (32) unal,
  3    82        02 trace	       char (512) var,	    /* Trace file name */
  3    83        02 debug	       char (512) var,	    /* Debug file name */
  3    84        02 io_switch	       char (512) var,	    /* Io switch name of mowse_io_ attachment */
  3    85        02 startup	       (MAXIMUM_CAT_ENTRY - MINIMUM_CAT_ENTRY + 1)
  3    86 		       char (168) var;	    /* Capability to be autoloaded */
  3    87 
  3    88 /* Open description structure (this is padded to character bounds as it
  3    89*   is a character overlay structure - passed as a character string) */
  3    90 
  3    91 dcl open_struc_ptr	       ptr;
  3    92 dcl 01 open_struc	       based (open_struc_ptr),
  3    93        02 flags,
  3    94 	03 network_sw    bit (1) unal,
  3    95 	03 escape_sw     bit (1) unal,
  3    96 	03 pad	       bit (7) unal,
  3    97        02 escape,
  3    98 	03 switches      (0:255) bit (1) unal,
  3    99 	03 pad	       bit (32) unal,
  3   100        02 mbz	       bit (16) unal;
  3   101 
  3   102 /*  END INCLUDE FILE:	mowse_info.incl.pl1			  *  *  *  *  *  *  *  *  *  *  *  *  */
      104 
  4     1 /*  BEGIN INCLUDE FILE:	mowse_io_control_info.incl.pl1	  *  *  *  *  *  *  *  *  *  *  *  *  */
  4     2 
  4     3 /****^  HISTORY COMMENTS:
  4     4*  1) change(86-06-15,Flegel), approve(86-12-16,MCR7580),
  4     5*     audit(86-12-15,Gilcrease), install(87-01-06,MR12.0-1255):
  4     6*                Created for control support for mowse_io_.
  4     7*  2) change(86-08-01,Flegel), approve(86-12-16,MCR7580),
  4     8*     audit(86-12-15,Gilcrease), install(87-01-06,MR12.0-1255):
  4     9*     Changed version fields to char (8) and
  4    10*     installed version constant.
  4    11*  3) change(86-10-08,Flegel), approve(86-12-16,MCR7580),
  4    12*     audit(86-12-15,Gilcrease), install(87-01-06,MR12.0-1255):
  4    13*     Added flush_subchannel_info structure.
  4    14*  4) change(86-11-27,Flegel), approve(86-11-27,MCR7580),
  4    15*     audit(86-12-15,Gilcrease), install(87-01-06,MR12.0-1255):
  4    16*     Approved.
  4    17*  5) change(86-12-05,Flegel), approve(86-12-05,MCR7580),
  4    18*     audit(86-12-15,Gilcrease), install(87-01-06,MR12.0-1255):
  4    19*     Added mowse_io_set_video_mode_info structure.
  4    20*  6) change(87-07-31,Flegel), approve(87-07-31,MCR7580),
  4    21*     audit(87-07-31,RBarstad), install(87-08-07,MR12.1-1075):
  4    22*     Changes to support async call channels.
  4    23*                                                   END HISTORY COMMENTS */
  4    24 
  4    25 /* : Version number */
  4    26 /* format: style4,indattr,ifthen,^indcomtxt,thendo,^indproc,^indblkcom,initcol1,declareind8,dclind4,struclvlind3,comcol55 */
  4    27 dcl mowse_io_info_version_1
  4    28 		       char (8) int static options (constant)
  4    29 		       init ("miover_1");
  4    30 
  4    31 /* : Mowse store info structure */
  4    32 dcl mowse_io_store_info_ptr
  4    33 		       ptr;
  4    34 dcl 01 mowse_io_store_info based (mowse_io_store_info_ptr),
  4    35        02 version	       char (8),
  4    36        02 info_ptr	       ptr;		    /* Pointer to mowse_info_ structure */
  4    37 
  4    38 /* : Mowse info structure */
  4    39 dcl mowse_io_info_ptr      ptr;
  4    40 dcl 01 mowse_io_info       based (mowse_io_info_ptr),
  4    41        02 version	       char (8),
  4    42        02 mcb_ptr	       ptr,		    /* Pointer to mowse_mcb */
  4    43        02 info_ptr	       ptr;		    /* Pointer to Mowse information (CATs etc.) */
  4    44 
  4    45 /* : Control info overlay for debug_on */
  4    46 dcl mowse_io_debug_info_ptr
  4    47 		       ptr;
  4    48 dcl 01 mowse_io_debug_info based (mowse_io_debug_info_ptr),
  4    49        02 version	       char (8),
  4    50        02 segment_name     char (512) var;	    /* Debug file name */
  4    51 
  4    52 /* : Control info overlay for get_terminal_emulator_state */
  4    53 dcl mowse_io_terminal_state_ptr
  4    54 		       ptr;
  4    55 dcl 01 mowse_io_terminal_state
  4    56 		       based (mowse_io_terminal_state_ptr),
  4    57        02 version	       char (8),
  4    58        02 state	       bit (1) unal,	    /* WSTERM state */
  4    59        02 mbz	       bit (35) unal;
  4    60 
  4    61 /* : Control info overlay for send_message and send_local_message */
  4    62 dcl mowse_io_message_ptr   ptr;
  4    63 dcl 01 mowse_io_message    based (mowse_io_message_ptr),
  4    64        02 version	       char (8),
  4    65        02 channel	       fixed bin,		    /* Channel of message */
  4    66        02 io_message_ptr   ptr,		    /* Pointer to the nonvarying message */
  4    67        02 io_message_len   fixed bin (21);	    /* Length of message */
  4    68 
  4    69 /* : Control info overlay for put_to_sleep */
  4    70 dcl mowse_io_sleep_info_ptr
  4    71 		       ptr;
  4    72 dcl 01 mowse_io_sleep_info based (mowse_io_sleep_info_ptr),
  4    73        02 version	       char (8),
  4    74        02 major_index      fixed bin,		    /* CAT index of sleeper */
  4    75        02 sleep_seconds    fixed bin;		    /* Sleep interval */
  4    76 
  4    77 /* : Control info for flush_subchannel */
  4    78 dcl mowse_io_flush_subchannel_info_ptr
  4    79 		       ptr;
  4    80 dcl 01 mowse_io_flush_subchannel_info
  4    81 		       based (mowse_io_flush_subchannel_info_ptr),
  4    82        02 version	       char (8),
  4    83        02 subchannel       fixed bin;		    /* The subchannel to be flushed (BG/FG) */
  4    84 
  4    85 /* : Control info to set the video mode */
  4    86 dcl mowse_io_set_video_mode_info_ptr
  4    87 		       ptr;
  4    88 dcl 01 mowse_io_set_video_mode_info
  4    89 		       based (mowse_io_set_video_mode_info_ptr),
  4    90        02 version	       char (8),
  4    91        02 mode	       bit (1) unal,	    /* On or off */
  4    92        02 mbz	       bit (35) unal;
  4    93 
  4    94 /*  END INCLUDE FILE:	mowse_io_control_info.incl.pl1	  *  *  *  *  *  *  *  *  *  *  *  *  */
      105 
      106 
      107 /* : END */
      108      end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    08/07/87  1454.9  get_mowse_info_ptr_.pl1           >special_ldd>install>MR12.1-1075>get_mowse_info_ptr_.pl1
102          1    08/07/87  1445.8  mowse.incl.pl1                    >special_ldd>install>MR12.1-1075>mowse.incl.pl1
103          2    08/07/87  1447.6  mowse_mcb.incl.pl1                >special_ldd>install>MR12.1-1075>mowse_mcb.incl.pl1
104          3    08/07/87  1445.8  mowse_info.incl.pl1               >special_ldd>install>MR12.1-1075>mowse_info.incl.pl1
105          4    08/07/87  1445.8  mowse_io_control_info.incl.pl1    >special_ldd>install>MR12.1-1075>mowse_io_control_info.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
MOWSE_VERSION_                  000002 constant        char(8)                  initial unaligned dcl 1-26 ref 94
addr                                                   builtin function         dcl 66 ref 88 88
error_table_$unimplemented_version
                                000012 external static fixed bin(35,0)          dcl 60 ref 95
info                            000100 automatic       structure                level 1 unaligned dcl 43 set ref 88 88
info_ptr                  4     000100 automatic       pointer                  level 2 dcl 43 set ref 91
iocb_ptr                 34            based           pointer                  level 2 dcl 2-14 set ref 88*
iox_$control                    000010 constant        entry                    external dcl 50 ref 88
mcb                                    based           structure                level 1 unaligned dcl 2-14
mowse_info                             based           structure                level 1 dcl 3-31
mowse_io_info                          based           structure                level 1 unaligned dcl 4-40
mowse_io_info_version_1         000000 constant        char(8)                  initial unaligned dcl 4-27 ref 87
null                                                   builtin function         dcl 67 ref 81 86
p_code                                 parameter       fixed bin(35,0)          dcl 36 set ref 19 82* 88* 92 95*
p_mcb_ptr                              parameter       pointer                  dcl 31 ref 19 81 88
p_mowse_info_ptr                       parameter       pointer                  dcl 35 set ref 19 86* 91* 94
temp_seg_name                   000106 automatic       char(6)                  initial unaligned dcl 1-22 set ref 1-22*
version                         000100 automatic       char(8)                  level 2 in structure "info" packed unaligned dcl 43
                                                                                  in procedure "get_mowse_info_ptr_" set ref 87*
version                                based           char(8)                  level 2 in structure "mowse_info" dcl 3-31
                                                                                  in procedure "get_mowse_info_ptr_" ref 94
ws_error_$invalid_mcb           000014 external static fixed bin(35,0)          dcl 62 ref 82

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
ACCEPT                                 internal static fixed bin(17,0)          initial dcl 1-54
ADD_TO_REMOTE_CAT                      internal static fixed bin(17,0)          initial dcl 1-78
CAPABILITY_NAME_LENGTH                 internal static fixed bin(17,0)          initial dcl 3-27
CONTINUE                               internal static fixed bin(17,0)          initial dcl 1-94
DELETE_FROM_REMOTE_CAT                 internal static fixed bin(17,0)          initial dcl 1-79
EXECUTE_CAPABILITY_REPLY               internal static fixed bin(17,0)          initial dcl 1-73
EXECUTE_COMMAND                        internal static fixed bin(17,0)          initial dcl 1-77
EXECUTE_COMMAND_REPLY                  internal static fixed bin(17,0)          initial dcl 1-72
FAIL_CAPABILITY                        internal static fixed bin(17,0)          initial dcl 1-75
FG_BREAK                               internal static fixed bin(17,0)          initial dcl 1-105
FG_CONTROL_MESSAGE                     internal static fixed bin(17,0)          initial dcl 1-104
FG_MORE_DATA                           internal static fixed bin(17,0)          initial dcl 1-107
FG_TERMINAL_DATA                       internal static fixed bin(17,0)          initial dcl 1-106
INTERNAL                               internal static fixed bin(17,0)          initial dcl 1-76
LAST                                   internal static fixed bin(17,0)          initial dcl 1-71
LOCAL_SYSTEM                           internal static fixed bin(17,0)          initial dcl 1-30
MAXIMUM_BG_SIZE                        internal static fixed bin(17,0)          initial dcl 1-44
MAXIMUM_BUFFER_SIZE                    internal static fixed bin(17,0)          initial dcl 1-43
MAXIMUM_CAT_ENTRY                      internal static fixed bin(17,0)          initial dcl 3-25
MAXIMUM_PACKET_SIZE                    internal static fixed bin(17,0)          initial dcl 1-49
MAXIMUM_SYSTEM_MINOR                   internal static fixed bin(17,0)          initial dcl 1-65
MAXIMUM_USER_MINOR                     internal static fixed bin(17,0)          initial dcl 1-67
MINIMUM_BUFFER_SIZE                    internal static fixed bin(17,0)          initial dcl 1-42
MINIMUM_CAT_ENTRY                      internal static fixed bin(17,0)          initial dcl 3-24
MINIMUM_SYSTEM_MINOR                   internal static fixed bin(17,0)          initial dcl 1-64
MINIMUM_USER_MINOR                     internal static fixed bin(17,0)          initial dcl 1-66
MORE                                   internal static fixed bin(17,0)          initial dcl 1-95
OVERFLOWED_BUFFER                      internal static fixed bin(17,0)          initial dcl 1-87
PACKET_SIZE                            internal static fixed bin(17,0)          initial dcl 1-48
PUT_TO_BACKGROUND_BUFFER               internal static fixed bin(17,0)          initial dcl 1-108
PUT_TO_QUERY_MESSAGE_BUFFER            internal static fixed bin(17,0)          initial dcl 1-110
QUERY_REPLY                            internal static fixed bin(17,0)          initial dcl 1-89
RECEIVE                                internal static fixed bin(17,0)          initial dcl 1-59
REJECT                                 internal static fixed bin(17,0)          initial dcl 1-55
REMOTE_SYSTEM                          internal static fixed bin(17,0)          initial dcl 1-31
REQUEST_CONNECT                        internal static fixed bin(17,0)          initial dcl 1-92
REQUEST_DISCONNECT                     internal static fixed bin(17,0)          initial dcl 1-93
RESET_APPLICATION                      internal static fixed bin(17,0)          initial dcl 1-83
RESET_REPLY                            internal static fixed bin(17,0)          initial dcl 1-84
RESET_SLEEP_FLAG                       internal static fixed bin(17,0)          initial dcl 1-97
RESET_SUSPEND                          internal static fixed bin(17,0)          initial dcl 1-99
RESPONSE_CONNECT                       internal static fixed bin(17,0)          initial dcl 1-90
RESPONSE_DISCONNECT                    internal static fixed bin(17,0)          initial dcl 1-91
RESUME_APPLICATION                     internal static fixed bin(17,0)          initial dcl 1-81
SEND                                   internal static fixed bin(17,0)          initial dcl 1-60
SEND_QUERY                             internal static fixed bin(17,0)          initial dcl 1-53
SET_SLEEP_FLAG                         internal static fixed bin(17,0)          initial dcl 1-96
SET_SUSPEND                            internal static fixed bin(17,0)          initial dcl 1-98
STATUS                                 internal static fixed bin(17,0)          initial dcl 1-86
STATUS_FAILED                          internal static fixed bin(8,0)           initial dcl 1-37
STATUS_REPLY                           internal static fixed bin(17,0)          initial dcl 1-100
STATUS_SUCCESS                         internal static fixed bin(8,0)           initial dcl 1-35
SUSPEND_APPLICATION                    internal static fixed bin(17,0)          initial dcl 1-80
SYSTEM_ERROR                           internal static fixed bin(17,0)          initial dcl 1-88
TERMINATE_APPLICATION                  internal static fixed bin(17,0)          initial dcl 1-82
WAKE_UP                                internal static fixed bin(17,0)          initial dcl 1-85
init_mowse_info                        based           structure                level 1 unaligned dcl 3-68
init_mowse_info_ptr                    automatic       pointer                  dcl 3-67
mowse_io_debug_info                    based           structure                level 1 unaligned dcl 4-48
mowse_io_debug_info_ptr                automatic       pointer                  dcl 4-46
mowse_io_flush_subchannel_info         based           structure                level 1 unaligned dcl 4-80
mowse_io_flush_subchannel_info_ptr     automatic       pointer                  dcl 4-78
mowse_io_info_ptr                      automatic       pointer                  dcl 4-39
mowse_io_message                       based           structure                level 1 unaligned dcl 4-63
mowse_io_message_ptr                   automatic       pointer                  dcl 4-62
mowse_io_set_video_mode_info           based           structure                level 1 packed unaligned dcl 4-88
mowse_io_set_video_mode_info_ptr       automatic       pointer                  dcl 4-86
mowse_io_sleep_info                    based           structure                level 1 unaligned dcl 4-72
mowse_io_sleep_info_ptr                automatic       pointer                  dcl 4-70
mowse_io_store_info                    based           structure                level 1 unaligned dcl 4-34
mowse_io_store_info_ptr                automatic       pointer                  dcl 4-32
mowse_io_terminal_state                based           structure                level 1 packed unaligned dcl 4-55
mowse_io_terminal_state_ptr            automatic       pointer                  dcl 4-53
open_struc                             based           structure                level 1 packed unaligned dcl 3-92
open_struc_ptr                         automatic       pointer                  dcl 3-91
output_buffer                          based           structure                level 1 unaligned dcl 2-34

NAME DECLARED BY EXPLICIT CONTEXT.
get_mowse_info_ptr_             000024 constant        entry                    external dcl 19

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       206         224     122         216
Length       506     122        16         245      63           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
get_mowse_info_ptr_                  96 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
get_mowse_info_ptr_      000100 info                        get_mowse_info_ptr_
                         000106 temp_seg_name               get_mowse_info_ptr_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
iox_$control

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$unimplemented_version                          ws_error_$invalid_mcb




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     19 000020    1   22 000031        81 000033        82 000040        83 000042        86 000043        87 000045
     88 000047        91 000102        92 000105        94 000107        95 000115        96 000120       108 000121


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
