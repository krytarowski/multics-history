	COMPILATION LISTING OF SEGMENT !BBBJQlDjmfhNDP
	Compiled by: Multics PL/I Compiler, Release 28e, of February 14, 1985
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 07/29/86  1009.3 mst Tue
	    Options: table map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 
        7 
        8 /* HISTORY COMMENTS:
        9*  1) change(86-04-02,Dupuis), approve(86-04-02,MCR7188), audit(86-07-29,GWMay),
       10*     install(86-07-29,MR12.0-1106):
       11*     84-12-28 Matthew Pierret: Written so that linus would not use hard-coded
       12*     reserved words.
       13*                                                   END HISTORY COMMENTS */
       14 
       15 /* DESCRIPTION:
       16*   
       17*   linus_lila_tokens_
       18**/
       19 
       20 /* HISTORY:
       21*Written by Matthew Pierret, 12/27/84.
       22*Modified:
       23**/
       24 /* format: style2,ind3,ll79 */
       25 
       26 
       27 linus_lila_tokens_:
       28 	procedure ();
       29 
       30 /* DECLARATIONS */
       31 
       32 /* Automatic */
       33 
       34 dcl  (
       35       code			fixed bin (35),
       36       1 local_cds_args		aligned like cds_args,
       37 1 local_linus_lila_tokens aligned like linus_lila_tokens
       38      )				automatic;
       39 
       40 /* Constant */
       41 
       42 dcl  (
       43       EXCLUDE_ARRAY			dim (1) char (32) init ("pad*"),
       44       MYNAME			char (32) init ("linus_lila_tokens_")
       45      )				internal static options (constant);
       46     
       47 /* Entry */
       48 
       49 dcl  com_err_			entry() options(variable),
       50      create_data_segment_		entry (ptr, fixed bin(35));
       51 
       52 /* Builtin */
       53 
       54 dcl  (addr, hbound, size, unspec)	builtin;
       55 
       56 
       57 
       58 local_linus_lila_tokens.version = LINUS_LILA_TOKENS_VERSION_1;
       59 local_linus_lila_tokens.language = LINUS_LILA_TOKENS_LANGUAGE_ENGLISH;
       60 local_linus_lila_tokens.first_chars = "dfisuw";
       61 local_linus_lila_tokens.dup = "dup";
       62 local_linus_lila_tokens.differ = "differ";
       63 local_linus_lila_tokens.from = "from";
       64 local_linus_lila_tokens.inter = "inter";
       65 local_linus_lila_tokens.select = "select";
       66 local_linus_lila_tokens.unique = "unique";
       67 local_linus_lila_tokens.union = "union";
       68 local_linus_lila_tokens.where = "where";
       69 
       70 /* initialize the cds structure */
       71 
       72 	unspec (local_cds_args) = ""b;
       73 	local_cds_args.sections (1).p = addr (local_linus_lila_tokens);
       74 	local_cds_args.sections (1).len = size (local_linus_lila_tokens);
       75 	local_cds_args.sections (1).struct_name = "linus_lila_tokens";
       76 	local_cds_args.seg_name = MYNAME;
       77 	local_cds_args.exclude_array_ptr = addr (EXCLUDE_ARRAY);
       78 	local_cds_args.num_exclude_names = hbound (EXCLUDE_ARRAY, 1);
       79 	local_cds_args.switches.have_text = "1"b;
       80 
       81 /* call cds to make the segment */
       82 
       83 	call create_data_segment_ (addr (local_cds_args), code);
       84 	if code ^= 0
       85 	then call com_err_ (code, MYNAME);
       86 
       87 	return;
       88 
       89 /* Include Files */
       90 
       91 
  1     1 /* BEGIN INCLUDE FILE cds_args.incl.pl1 */
  1     2 
  1     3 dcl 1 cds_args based aligned,
  1     4     2 sections (2),
  1     5       3 p ptr,					/* pointer to data for text/static section */
  1     6       3 len fixed bin (18),				/* size of text/static section */
  1     7       3 struct_name char (32),			/* name of declared structure for this section */
  1     8     2 seg_name char (32),				/* name to create segment by */
  1     9     2 num_exclude_names fixed bin,			/* number of names in exclude array */
  1    10     2 exclude_array_ptr ptr,				/* pointer to array of exclude names */
  1    11     2 switches,					/* control switches */
  1    12       3 defs_in_link bit (1) unal,			/* says put defs in linkage */
  1    13       3 separate_static bit (1) unal,			/* says separate static section is wanted */
  1    14       3 have_text bit (1) unal,			/* ON if text section given */
  1    15       3 have_static bit (1) unal,			/* ON if static section given */
  1    16       3 pad bit (32) unal;
  1    17 
  1    18 dcl  exclude_names (1) char (32) based;			/* pointed to be cds_args.exclude_array_ptr */
  1    19 
  1    20 /* END INCLUDE FILE cds_args.incl.pl1 */
       92 
       93 
  2     1 /* BEGIN INCLUDE FILE linus_lila_tokens.incl.pl1 */
  2     2 
  2     3 
  2     4 /****^  HISTORY COMMENTS:
  2     5*  1) change(86-04-23,Dupuis), approve(86-05-23,MCR7188), audit(86-07-23,GWMay),
  2     6*     install(86-07-29,MR12.0-1106):
  2     7*     This comment is to cover the 12/27/84 Mathew Pierret change.
  2     8*                                                   END HISTORY COMMENTS */
  2     9 
  2    10 /* DESCRIPTION:
  2    11*
  2    12*   linus_lila_tokens contains the values of the tokens in the lila
  2    13*   editor.  This structure is used in linus_lila_tokens.cds so that
  2    14*   token values are referenced through cells in the linus_lila_tokens
  2    15*   object segment, for example, linus_lila_tokens$from, rather than
  2    16*   directly referenceing the token value, for example, "from".
  2    17*   This is so that token values can easily be replaced, say from English
  2    18*   language tokens to French tokens.
  2    19**/
  2    20 
  2    21 /* HISTORY:
  2    22*Written by Mathew Pierret, 12/27/84.
  2    23*Modified:
  2    24**/
  2    25 
  2    26 /* format: style2,ind3 */
  2    27      dcl	   (
  2    28 	   LINUS_LILA_TOKENS_VERSION_1
  2    29 			      init ("LLTokn 1"),
  2    30 	   LINUS_LILA_TOKENS_LANGUAGE_ENGLISH
  2    31 			      init ("English ")
  2    32 	   )		      char (8) aligned internal static options (constant);
  2    33 
  2    34      dcl	   1 linus_lila_tokens    aligned based,
  2    35 	     2 version	      char (8) aligned,
  2    36 	     2 language	      char (8) aligned,
  2    37 	     2 first_chars	      char (32) varying,
  2    38 	     2 differ	      char (32) varying,
  2    39 	     2 dup	      char (32) varying,
  2    40 	     2 from	      char (32) varying,
  2    41 	     2 inter	      char (32) varying,
  2    42 	     2 select	      char (32) varying,
  2    43 	     2 union	      char (32) varying,
  2    44 	     2 unique	      char (32) varying,
  2    45 	     2 where	      char (32) varying;
  2    46 
  2    47 /* END INCLUDE FILE linus_lila_tokens.incl.pl1 */
       94 
       95 
  3     1 /* BEGIN INCLUDE FILE:  copy_flags.incl.pl1 */
  3     2 
  3     3 /* Flags for attributes that should/may be copied by the copy_ subroutine. This include file is
  3     4*   required by suffix_info.incl.pl1 and copy_options.incl.pl1
  3     5*
  3     6*   Jay Pattin 6/23/83 */
  3     7 
  3     8 declare   1 copy_flags                  aligned based,      /* ON means that this attribute may be copied by copy_ */
  3     9           2 names                       bit (1) unaligned,
  3    10           2 acl                         bit (1) unaligned,
  3    11           2 ring_brackets               bit (1) unaligned,
  3    12           2 max_length                  bit (1) unaligned,
  3    13           2 copy_switch                 bit (1) unaligned,
  3    14           2 safety_switch               bit (1) unaligned,
  3    15           2 dumper_switches             bit (1) unaligned,
  3    16           2 entry_bound                 bit (1) unaligned,  /* only for vanilla object segments */
  3    17           2 extend                      bit (1) unaligned,  /* copy_ may append to end of existing object */
  3    18           2 update                      bit (1) unaligned,  /* copy_ may replace contents of existing object */
  3    19           2 mbz                         bit (26) unaligned;
  3    20 
  3    21 /* END INCLUDE FILE:  copy_flags.incl.pl1 */
       96 
       97 
       98 end linus_lila_tokens_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    07/29/86  0938.9  !BBBJQlDjmfhNDP.pl1               >special_ldd>install>MR12.0-1106>linus_lila_tokens_.cds
92           1    04/01/76  2209.5  cds_args.incl.pl1                 >ldd>include>cds_args.incl.pl1
94           2    07/29/86  0937.8  linus_lila_tokens.incl.pl1        >special_ldd>install>MR12.0-1106>linus_lila_tokens.incl.pl1
96           3    10/14/83  1606.7  copy_flags.incl.pl1               >ldd>include>copy_flags.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
EXCLUDE_ARRAY                   000014 constant        char(32)                 initial array unaligned dcl 42 set ref 77 78
LINUS_LILA_TOKENS_LANGUAGE_ENGLISH
                                000000 constant        char(8)                  initial dcl 2-27 ref 59
LINUS_LILA_TOKENS_VERSION_1     000002 constant        char(8)                  initial dcl 2-27 ref 58
MYNAME                          000004 constant        char(32)                 initial unaligned dcl 42 set ref 76 84*
addr                                                   builtin function         dcl 54 ref 73 77 83 83
cds_args                               based           structure                level 1 dcl 1-3
code                            000100 automatic       fixed bin(35,0)          dcl 34 set ref 83* 84 84*
com_err_                        000012 constant        entry                    external dcl 49 ref 84
create_data_segment_            000014 constant        entry                    external dcl 49 ref 83
differ                   15     000147 automatic       varying char(32)         level 2 dcl 34 set ref 62*
dup                      26     000147 automatic       varying char(32)         level 2 dcl 34 set ref 61*
exclude_array_ptr        42     000102 automatic       pointer                  level 2 dcl 34 set ref 77*
first_chars               4     000147 automatic       varying char(32)         level 2 dcl 34 set ref 60*
from                     37     000147 automatic       varying char(32)         level 2 dcl 34 set ref 63*
have_text                44(02) 000102 automatic       bit(1)                   level 3 packed unaligned dcl 34 set ref 79*
hbound                                                 builtin function         dcl 54 ref 78
inter                    50     000147 automatic       varying char(32)         level 2 dcl 34 set ref 64*
language                  2     000147 automatic       char(8)                  level 2 dcl 34 set ref 59*
len                       2     000102 automatic       fixed bin(18,0)          array level 3 dcl 34 set ref 74*
linus_lila_tokens                      based           structure                level 1 dcl 2-34
local_cds_args                  000102 automatic       structure                level 1 dcl 34 set ref 72* 83 83
local_linus_lila_tokens         000147 automatic       structure                level 1 dcl 34 set ref 73 74
num_exclude_names        40     000102 automatic       fixed bin(17,0)          level 2 dcl 34 set ref 78*
p                               000102 automatic       pointer                  array level 3 dcl 34 set ref 73*
sections                        000102 automatic       structure                array level 2 dcl 34
seg_name                 30     000102 automatic       char(32)                 level 2 dcl 34 set ref 76*
select                   61     000147 automatic       varying char(32)         level 2 dcl 34 set ref 65*
size                                                   builtin function         dcl 54 ref 74
struct_name               3     000102 automatic       char(32)                 array level 3 dcl 34 set ref 75*
switches                 44     000102 automatic       structure                level 2 dcl 34
union                    72     000147 automatic       varying char(32)         level 2 dcl 34 set ref 67*
unique                  103     000147 automatic       varying char(32)         level 2 dcl 34 set ref 66*
unspec                                                 builtin function         dcl 54 set ref 72*
version                         000147 automatic       char(8)                  level 2 dcl 34 set ref 58*
where                   114     000147 automatic       varying char(32)         level 2 dcl 34 set ref 68*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
copy_flags                             based           structure                level 1 dcl 3-8
exclude_names                          based           char(32)                 array unaligned dcl 1-18

NAME DECLARED BY EXPLICIT CONTEXT.
linus_lila_tokens_              000054 constant        entry                    external dcl 27

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       270         306     213         300
Length      1652     213        16        1330      54           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
linus_lila_tokens_                  206 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
linus_lila_tokens_       000100 code                        linus_lila_tokens_
                         000102 local_cds_args              linus_lila_tokens_
                         000147 local_linus_lila_tokens     linus_lila_tokens_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      create_data_segment_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     27 000053        58 000061        59 000064        60 000067        61 000073        62 000077        63 000104
     64 000110        65 000114        66 000121        67 000126        68 000132        72 000136        73 000141
     74 000143        75 000145        76 000150        77 000153        78 000155        79 000157        83 000161
     84 000173        87 000212


Object Segment >special_ldd>install>MR12.0-1106>linus_lila_tokens_
Created on 07/29/86  1009.4 mst Tue
by GJohnson.SysMaint.a
using create_data_segment_, Version II of Thursday, May 22, 1986

        Object    Text    Defs    Link    Symb  Static
Start        0       0     126     240     250     250
Length     473     126     112      10     207       0


13 Definitions:


segname:    linus_lila_tokens_

text|15         differ
text|26         dup
text|4          first_chars
text|37         from
text|50         inter
text|2          language
text|61         select
symb|0          symbol_table
text|72         union
text|103        unique
text|0          version
text|114        where


No Links.





                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
