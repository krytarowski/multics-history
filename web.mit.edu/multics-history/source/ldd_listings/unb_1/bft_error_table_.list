ASSEMBLY LISTING OF SEGMENT >special_ldd>install>MR12.2-1028>bft_error_table_.alm                                                                                                                   
ASSEMBLED ON:	02/24/88  0846.7 mst Wed
OPTIONS USED:	-target l68                              list symbols 
ASSEMBLED BY:	ALM Version 7.4 April 1987      
ASSEMBLER CREATED:	11/02/87  1303.7 mst Mon

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Information Systems Inc., 1987 *
                                     4  " *                                                         *
                                     5  " * Copyright, (C) Honeywell Bull Inc., 1987                *
                                     6  " *                                                         *
                                     7  " ***********************************************************
                                     8  
                                     9  " HISTORY COMMENTS:
                                    10  "  1) change(87-07-15,Flegel), approve(87-07-15,MCR7580),
                                    11  "     audit(87-07-30,RBarstad), install(87-08-07,MR12.1-1075):
                                    12  "     Created.
                                    13  "  2) change(87-10-06,Flegel), approve(87-10-23,MCR7787),
                                    14  "     audit(88-01-27,RWaters), install(88-02-24,MR12.2-1028):
                                    15  "     Added codes: no_queue, invalid_priority, invalid_queue,
                                    16  "       invalid_file_type, invalid_keyword.
                                    17  "     Deleted codes: LS_set, LF_set, RS_set, RF_set, store_queue_full,
                                    18  "       status_discrepancy.
                                    19  "                                                      END HISTORY COMMENTS
                                    20  
                                    21  include	et_macros
                                   1-1  " Begin include file ...... et_macros.incl.alm
                                   1-2  "	Written 6/15/77 by Noel I. Morris
                                   1-3  "	Modified '82 so error code entries are in first page of segment.
                                   1-4  
                                   1-5  " This include file contains macros for generating error tables
                                   1-6  " for both system and non-system use.
                                   1-7  
                                   1-8  " ET MACRO
                                   1-9  "
                                  1-10  " This macro is used to initialize the error table for either
                                  1-11  " system or non-system use.  It is invoked at the beginning of
                                  1-12  " the error table as follows:
                                  1-13  "
                                  1-14  "	et	table_name{,system}
                                  1-15  "
                                  1-16  
                                  1-17  macro	et
                              1   1-18  	maclist	on
                              2   1-19  
                              3   1-20  	name	&1
                              4   1-21  
                              5   1-22  &^=&2,system&[
                              6   1-23  
                              7   1-24  	include	stack_header
                              8   1-25  
                              9   1-26  
                             10   1-27  
                             11   1-28  	use	codes
                             12   1-29  .code_start:
                             13   1-30  
                             14   1-31  	use	past_codes
                             15   1-32  .code_end:
                             16   1-33  
                             17   1-34  	join	/link/codes,past_codes
                             18   1-35  
                             19   1-36  	use	messages
                             20   1-37  
                             21   1-38  .trapproc:
                             22   1-39  	epaq	0,ic
                             23   1-40  	eax0	0,au
                             24   1-41  	epbpsb	sp|0
                             25   1-42  	lprplp	sb|stack_header.lot_ptr,*au
                             26   1-43  	eax1	.code_start         
                             27   1-44  .loop:	stx0	lp|0,x1
                             28   1-45  	eax1	1,x1
                             29   1-46  	cmpx1	.code_end,du
                             30   1-47  	tmi	.loop-*,ic
                             31   1-48  	short_return
                             32   1-49  
                             33   1-50  	firstref	<*text>|.trapproc
                             34   1-51  
                             35   1-52  &;	use	codes
                             36   1-53  	use	messages
                             37   1-54  
                             38   1-55  	join	/text/codes,messages
                             39   1-56  
                             40   1-57  &]
                             41   1-58  
                             42   1-59  	bool	.segno,77777
                             43   1-60  
                             44   1-61  	maclist	off
                             45   1-62  
                             46   1-63  	&end
                                  1-64  
                                  1-65  
                                  1-66  
                                  1-67  " EC MACRO
                                  1-68  "
                                  1-69  " This macro is used to define an error code as shown:
                                  1-70  "
                                  1-71  "	ec	name,{short_mess},(long_mess)
                                  1-72  "
                                  1-73  " If more than a single name is to be defined for a given message,
                                  1-74  " a list of names separated by commas and enclosed in parentheses
                                  1-75  " must be given.   short_mess must be 8 or less characters.  If omitted,
                                  1-76  " the short_mess will be set to the name.  long_mess is enclosed
                                  1-77  " in parentheses in order to cause ALM to ignore embedded blanks.  Please
                                  1-78  " note that double quote characters in either short_mess or long_mess
                                  1-79  " must be doubled in order to make the ALM assembly work properly.
                                  1-80  " Note that a macro invocation line terminated by a comma will cause that
                                  1-81  " statement to be continued on the next line.
                                  1-82  
                                  1-83  macro	ec
                              1   1-84  	use	codes
                              2   1-85  
                              3   1-86  	maclist	on,save
                              4   1-87  &(1	segdef  &i
                              5   1-88  &)	maclist	restore
                              6   1-89  &(1&i:
                              7   1-90  &)	maclist	object,save
                              8   1-91  	zero	.segno,&U
                              9   1-92  	maclist	restore
                             10   1-93  	use	messages
                             11   1-94  &^=&l2,0&[	shortname    &2
                             12   1-95  &;	shortname    &1
                             13   1-96  &]
                             14   1-97  &U:
                             15   1-98  	maclist	on,save
                             16   1-99  	acc  "&3"
                             17  1-100  
                             18  1-101  	maclist	restore
                             19  1-102  	&end
                                 1-103  
                                 1-104  macro	shortname
                              1  1-105  	maclist	on,save
                              2  1-106  	aci  "&1",8
                              3  1-107  	maclist	restore
                              4  1-108  	&end
                                 1-109  
                                 1-110  
                                 1-111  
                                 1-112  " A typical error table source program might have the following format:
                                 1-113  "
                                 1-114  "	include	et_macros
                                 1-115  "
                                 1-116  "	et	name_of_error_table
                                 1-117  "
                                 1-118  "	ec	error_code_1,ecode1,(This is error code 1.)
                                 1-119  "
                                 1-120  "	ec	error_code_2,ecode2,(This is error code 2.)
                                 1-121  "
                                 1-122  "	:	     :	      :		:
                                 1-123  "
                                 1-124  "	ec	error_code_n,ecoden,(This is the nth error code.)
                                 1-125  "
                                 1-126  "	end
                                 1-127  "
                                 1-128  
                                 1-129  " End of include file ...... et_macros.incl.alm
                                 1-130  
                                    22  
                                    23  et	bft_error_table_
                                        
    000000                              	name	bft_error_table_
                                        
                                        
                                        
                                        	include	stack_header
                                   2-1  "	BEGIN INCLUDE FILE ... stack_header.incl.alm  3/72  Bill Silver
                                   2-2  "
                                   2-3  "	modified 7/76 by M. Weaver for *system links and more system use of areas
                                   2-4  "	modified 3/77 by M. Weaver  to add rnt_ptr
                                   2-5  "	modified 7/77 by S. Webber to add run_unit_depth and assign_linkage_ptr
                                   2-6  "	modified 6/83 by J. Ives to add trace_frames and in_trace.
                                   2-7  
                                   2-8  " HISTORY COMMENTS:
                                   2-9  "  1) change(86-06-24,DGHowe), approve(86-06-24,MCR7396),
                                  2-10  "     audit(86-08-05,Schroth), install(86-11-03,MR12.0-1206):
                                  2-11  "     added the heap_header_ptr definition
                                  2-12  "  2) change(86-08-12,Kissel), approve(86-08-12,MCR7473),
                                  2-13  "     audit(86-10-10,Fawcett), install(86-11-03,MR12.0-1206):
                                  2-14  "     Modified to support control point management.  These changes were
                                  2-15  "     actually made in February 1985 by G. Palter.
                                  2-16  "  3) change(86-10-22,Fawcett), approve(86-10-22,MCR7473),
                                  2-17  "     audit(86-10-22,Farley), install(86-11-03,MR12.0-1206):
                                  2-18  "     Remove the old_lot pointer and replace it with cpm_data_ptr. Use the 18
                                  2-19  "     bit pad after cur_lot_size for the cpm_enabled. This was done to save
                                  2-20  "     some space int the stack header and change the cpd_ptr unal to
                                  2-21  "     cpm_data_ptr (ITS pair).
                                  2-22  "                                                      END HISTORY COMMENTS
                                  2-23  
                        000004    2-24  	equ	stack_header.cpm_data_ptr,4		ptr to control point for this stack
                        000006    2-25  	equ	stack_header.combined_stat_ptr,6	ptr to separate static area
                                  2-26  
                        000010    2-27  	equ	stack_header.clr_ptr,8		ptr to area containing linkage sections
                        000012    2-28  	equ	stack_header.max_lot_size,10		number of words allowed in lot (DU)
                        000012    2-29  	equ	stack_header.main_proc_invoked,10	nonzero if main proc was invoked in run unit (DL)
                        000012    2-30  	equ	stack_header.run_unit_depth,10	number of active run units stacked (DL)
                        000013    2-31  	equ	stack_header.cur_lot_size,11		DU number of words (entries) in lot
                        000013    2-32            equ	stack_header.cpm_enabled,11		DL  non-zero if control point management is enabled
                        000014    2-33  	equ	stack_header.system_free_ptr,12	ptr to system storage area
                        000016    2-34  	equ	stack_header.user_free_ptr,14		ptr to user storage area
                                  2-35  
                        000020    2-36  	equ	stack_header.parent_ptr,16		ptr to parent stack or null
                        000022    2-37  	equ	stack_header.stack_begin_ptr,18	ptr to first stack frame
                        000024    2-38  	equ	stack_header.stack_end_ptr,20		ptr to next useable stack frame
                        000026    2-39  	equ	stack_header.lot_ptr,22		ptr to the lot for the current ring
                                  2-40  
                        000030    2-41  	equ	stack_header.signal_ptr,24		ptr to signal proc for current ring
                        000032    2-42  	equ	stack_header.bar_mode_sp,26		value of sp before entering bar mode
                        000034    2-43  	equ	stack_header.pl1_operators_ptr,28	ptr: pl1_operators_$operator_table
                        000036    2-44  	equ	stack_header.call_op_ptr,30		ptr to standard call operator
                                  2-45  
                        000040    2-46  	equ	stack_header.push_op_ptr,32		ptr to standard push operator
                        000042    2-47  	equ	stack_header.return_op_ptr,34		ptr to standard return operator
                        000044    2-48  	equ	stack_header.ret_no_pop_op_ptr,36	ptr: stand. return/ no pop operator
                        000046    2-49  	equ	stack_header.entry_op_ptr,38		ptr to standard entry operator
                                  2-50  
                        000050    2-51  	equ	stack_header.trans_op_tv_ptr,40	ptr to table of translator operator ptrs
                        000052    2-52  	equ	stack_header.isot_ptr,42		pointer to ISOT
                        000054    2-53  	equ	stack_header.sct_ptr,44		pointer to System Condition Table
                        000056    2-54  	equ	stack_header.unwinder_ptr,46		pointer to unwinder for current ring
                                  2-55  
                        000060    2-56  	equ	stack_header.sys_link_info_ptr,48	ptr to *system link name table
                        000062    2-57  	equ	stack_header.rnt_ptr,50		ptr to reference name table
                        000064    2-58  	equ	stack_header.ect_ptr,52		ptr to event channel table
                        000066    2-59  	equ	stack_header.assign_linkage_ptr,54	ptr to area for hcs_$assign_linkage calls
                        000070    2-60  	equ	stack_header.heap_header_ptr,56	ptr to heap header.
                        000072    2-61  	equ	stack_header.trace_frames,58		stack of trace_catch_ frames
                        000073    2-62  	equ	stach_header.trace_top_ptr,59		trace pointer
                        000074    2-63  	equ	stack_header.in_trace,60		trace antirecurse bit
                        000100    2-64  	equ	stack_header_end,64			length of stack header
                                  2-65  
                                  2-66  
                                  2-67  
                                  2-68  
                        000000    2-69  	equ	trace_frames.count,0		number of trace frames on stack
                        000001    2-70  	equ	trace_frames.top_ptr,1		packed pointer to top one
                                  2-71  
                                  2-72  "	The  following constant is an offset within the  pl1  operators table.
                                  2-73  "	It  references a  transfer vector table.
                                  2-74  
                        000551    2-75  	bool	tv_offset,551
                                  2-76  
                                  2-77  
                                  2-78  "	The  following constants are offsets within this transfer vector table.
                                  2-79  
                        001170    2-80  	equ	call_offset,tv_offset+271
                        001171    2-81  	equ	push_offset,tv_offset+272
                        001172    2-82  	equ	return_offset,tv_offset+273
                        001173    2-83  	equ	return_no_pop_offset,tv_offset+274
                        001174    2-84  	equ	entry_offset,tv_offset+275
                                  2-85  
                                  2-86  
                                  2-87  " 	END INCLUDE FILE stack_header.incl.alm
                                        
                                        
                                        
                                        	use	codes
    000010                              .code_start:
                                        
                                        	use	past_codes
    000026                              .code_end:
                                        
                                        	join	/link/codes,past_codes
                                        
                                        	use	messages
                                        
    000000                              .trapproc:
    000000  aa   000000 2130 04         	epaq	0,ic
    000001  aa   000000 6200 01         	eax0	0,au
    000002  aa  6 00000 3731 00         	epbpsb	sp|0
    000003  aa  7 00026 7641 61         	lprplp	sb|stack_header.lot_ptr,*au
    000004  8a   000010 6210 00         	eax1	.code_start         
    000005  aa  4 00000 7401 11         .loop:	stx0	lp|0,x1
    000006  aa   000001 6210 11         	eax1	1,x1
    000007  8a   000026 1010 03         	cmpx1	.code_end,du
    000010  aa   777775 6040 04         	tmi	.loop-*,ic
    000011  aa  7 00044 7101 20         	short_return
                                        
    000012                              	firstref	<*text>|.trapproc
                                        
                                        
                                        
                        077777          	bool	.segno,77777
                                        
                                    24  
                                    25  ec	bft_not_loaded,bftnotld,
                                    26  	(The major capablility BFT has not been loaded.)
                        000010          	segdef  bft_not_loaded
    000010  a0   077777 000014 
    000012  aa  142 146 164 156         	aci  "bftnotld",8
    000013  aa  157 164 154 144
    000014  aa  056 124 150 145         	acc  "The major capablility BFT has not been loaded."
    000015  aa  040 155 141 152
    000016  aa  157 162 040 143
    000017  aa  141 160 141 142
    000020  aa  154 151 154 151
    000021  aa  164 171 040 102
    000022  aa  106 124 040 150
    000023  aa  141 163 040 156
    000024  aa  157 164 040 142
    000025  aa  145 145 156 040
    000026  aa  154 157 141 144
    000027  aa  145 144 056 000
                                        
                                    27  
                                    28  ec	fetch_in_progress,fetchprg,
                                    29  	(Fetch cannot be initiated due to a current transfer in progress.)
                        000011          	segdef  fetch_in_progress
    000011  a0   077777 000032 
    000030  aa  146 145 164 143         	aci  "fetchprg",8
    000031  aa  150 160 162 147
    000032  aa  100 106 145 164         	acc  "Fetch cannot be initiated due to a current transfer in progress."
    000033  aa  143 150 040 143
    000034  aa  141 156 156 157
    000035  aa  164 040 142 145
    000036  aa  040 151 156 151
    000037  aa  164 151 141 164
    000040  aa  145 144 040 144
    000041  aa  165 145 040 164
    000042  aa  157 040 141 040
    000043  aa  143 165 162 162
    000044  aa  145 156 164 040
    000045  aa  164 162 141 156
    000046  aa  163 146 145 162
    000047  aa  040 151 156 040
    000050  aa  160 162 157 147
    000051  aa  162 145 163 163
    000052  aa  056 000 000 000
                                        
                                    30  
                                    31  ec	fetch_queue_full,fetchful,
                                    32  	(There is already an entry in the BFT Fetch queue.)
                        000012          	segdef  fetch_queue_full
    000012  a0   077777 000055 
    000053  aa  146 145 164 143         	aci  "fetchful",8
    000054  aa  150 146 165 154
    000055  aa  061 124 150 145         	acc  "There is already an entry in the BFT Fetch queue."
    000056  aa  162 145 040 151
    000057  aa  163 040 141 154
    000060  aa  162 145 141 144
    000061  aa  171 040 141 156
    000062  aa  040 145 156 164
    000063  aa  162 171 040 151
    000064  aa  156 040 164 150
    000065  aa  145 040 102 106
    000066  aa  124 040 106 145
    000067  aa  164 143 150 040
    000070  aa  161 165 145 165
    000071  aa  145 056 000 000
                                        
                                    33  
                                    34  ec	illegal_minor_capability,ilmincap,
                                    35  	(An illegal minor capability was called.)
                        000013          	segdef  illegal_minor_capability
    000013  a0   077777 000074 
    000072  aa  151 154 155 151         	aci  "ilmincap",8
    000073  aa  156 143 141 160
    000074  aa  047 101 156 040         	acc  "An illegal minor capability was called."
    000075  aa  151 154 154 145
    000076  aa  147 141 154 040
    000077  aa  155 151 156 157
    000100  aa  162 040 143 141
    000101  aa  160 141 142 151
    000102  aa  154 151 164 171
    000103  aa  040 167 141 163
    000104  aa  040 143 141 154
    000105  aa  154 145 144 056
                                        
                                    36  
                                    37  ec	invalid_direction,badirect,
                                    38  	(Transfer direction is invalid.)
                        000014          	segdef  invalid_direction
    000014  a0   077777 000110 
    000106  aa  142 141 144 151         	aci  "badirect",8
    000107  aa  162 145 143 164
    000110  aa  036 124 162 141         	acc  "Transfer direction is invalid."
    000111  aa  156 163 146 145
    000112  aa  162 040 144 151
    000113  aa  162 145 143 164
    000114  aa  151 157 156 040
    000115  aa  151 163 040 151
    000116  aa  156 166 141 154
    000117  aa  151 144 056 000
                                        
                                    39  
                                    40  ec	invalid_file_type,badfile,
                                    41  	(Transfer file type is invalid.)
                        000015          	segdef  invalid_file_type
    000015  a0   077777 000122 
    000120  aa  142 141 144 146         	aci  "badfile",8
    000121  aa  151 154 145 040
    000122  aa  036 124 162 141         	acc  "Transfer file type is invalid."
    000123  aa  156 163 146 145
    000124  aa  162 040 146 151
    000125  aa  154 145 040 164
    000126  aa  171 160 145 040
    000127  aa  151 163 040 151
    000130  aa  156 166 141 154
    000131  aa  151 144 056 000
                                        
                                    42  
                                    43  ec	invalid_keyword,badkey,
                                    44  	(Keyword is invalid.)
                        000016          	segdef  invalid_keyword
    000016  a0   077777 000134 
    000132  aa  142 141 144 153         	aci  "badkey",8
    000133  aa  145 171 040 040
    000134  aa  023 113 145 171         	acc  "Keyword is invalid."
    000135  aa  167 157 162 144
    000136  aa  040 151 163 040
    000137  aa  151 156 166 141
    000140  aa  154 151 144 056
                                        
                                    45  
                                    46  ec	invalid_priority,badprior,
                                    47  	(Priority level is invalid.)
                        000017          	segdef  invalid_priority
    000017  a0   077777 000143 
    000141  aa  142 141 144 160         	aci  "badprior",8
    000142  aa  162 151 157 162
    000143  aa  032 120 162 151         	acc  "Priority level is invalid."
    000144  aa  157 162 151 164
    000145  aa  171 040 154 145
    000146  aa  166 145 154 040
    000147  aa  151 163 040 151
    000150  aa  156 166 141 154
    000151  aa  151 144 056 000
                                        
                                    48  
                                    49  ec	invalid_queue,badq,
                                    50  	(Pointer to BFT queue is invalid.)
                        000020          	segdef  invalid_queue
    000020  a0   077777 000154 
    000152  aa  142 141 144 161         	aci  "badq",8
    000153  aa  040 040 040 040
    000154  aa  040 120 157 151         	acc  "Pointer to BFT queue is invalid."
    000155  aa  156 164 145 162
    000156  aa  040 164 157 040
    000157  aa  102 106 124 040
    000160  aa  161 165 145 165
    000161  aa  145 040 151 163
    000162  aa  040 151 156 166
    000163  aa  141 154 151 144
    000164  aa  056 000 000 000
                                        
                                    51  
                                    52  ec	invalid_request_type,badrqst,
                                    53  	(Request type is invalid.)
                        000021          	segdef  invalid_request_type
    000021  a0   077777 000167 
    000165  aa  142 141 144 162         	aci  "badrqst",8
    000166  aa  161 163 164 040
    000167  aa  030 122 145 161         	acc  "Request type is invalid."
    000170  aa  165 145 163 164
    000171  aa  040 164 171 160
    000172  aa  145 040 151 163
    000173  aa  040 151 156 166
    000174  aa  141 154 151 144
    000175  aa  056 000 000 000
                                        
                                    54  
                                    55  ec	no_entries,noentry,
                                    56  	(No more entries in queue.)
                        000022          	segdef  no_entries
    000022  a0   077777 000200 
    000176  aa  156 157 145 156         	aci  "noentry",8
    000177  aa  164 162 171 040
    000200  aa  031 116 157 040         	acc  "No more entries in queue."
    000201  aa  155 157 162 145
    000202  aa  040 145 156 164
    000203  aa  162 151 145 163
    000204  aa  040 151 156 040
    000205  aa  161 165 145 165
    000206  aa  145 056 000 000
                                        
                                    57  
                                    58  ec	no_queue,noqueue,
                                    59  	(BFT queue has been deleted.)
                        000023          	segdef  no_queue
    000023  a0   077777 000211 
    000207  aa  156 157 161 165         	aci  "noqueue",8
    000210  aa  145 165 145 040
    000211  aa  033 102 106 124         	acc  "BFT queue has been deleted."
    000212  aa  040 161 165 145
    000213  aa  165 145 040 150
    000214  aa  141 163 040 142
    000215  aa  145 145 156 040
    000216  aa  144 145 154 145
    000217  aa  164 145 144 056
                                        
                                    60  
                                    61  ec	store_in_progress,storeprg,
                                    62  	(Store cannot be initiated due to a current transfer in progress.)
                        000024          	segdef  store_in_progress
    000024  a0   077777 000222 
    000220  aa  163 164 157 162         	aci  "storeprg",8
    000221  aa  145 160 162 147
    000222  aa  100 123 164 157         	acc  "Store cannot be initiated due to a current transfer in progress."
    000223  aa  162 145 040 143
    000224  aa  141 156 156 157
    000225  aa  164 040 142 145
    000226  aa  040 151 156 151
    000227  aa  164 151 141 164
    000230  aa  145 144 040 144
    000231  aa  165 145 040 164
    000232  aa  157 040 141 040
    000233  aa  143 165 162 162
    000234  aa  145 156 164 040
    000235  aa  164 162 141 156
    000236  aa  163 146 145 162
    000237  aa  040 151 156 040
    000240  aa  160 162 157 147
    000241  aa  162 145 163 163
    000242  aa  056 000 000 000
                                        
                                    63  
                                    64  ec	unexpected_minor_capability,mnrntexp,
                                    65  	(An unexpected minor capability number was recieved.)
                        000025          	segdef  unexpected_minor_capability
    000025  a0   077777 000245 
    000243  aa  155 156 162 156         	aci  "mnrntexp",8
    000244  aa  164 145 170 160
    000245  aa  063 101 156 040         	acc  "An unexpected minor capability number was recieved."
    000246  aa  165 156 145 170
    000247  aa  160 145 143 164
    000250  aa  145 144 040 155
    000251  aa  151 156 157 162
    000252  aa  040 143 141 160
    000253  aa  141 142 151 154
    000254  aa  151 164 171 040
    000255  aa  156 165 155 142
    000256  aa  145 162 040 167
    000257  aa  141 163 040 162
    000260  aa  145 143 151 145
    000261  aa  166 145 144 056
                                        
                                    66  
                                    67  end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    000262  5a   000003 000000 
    000263  5a   000200 600000 
    000264  aa   000000 000000 
    000265  55   000013 000002 
    000266  5a   000002 400003 
    000267  55   000006 000013 
    000270  aa  020 142 146 164
    000271  aa  137 145 162 162
    000272  aa  157 162 137 164
    000273  aa  141 142 154 145
    000274  aa  137 000 000 000
    000275  55   000025 000003 
    000276  2a   000025 400001 
    000277  55   000016 000003 
    000300  aa  033 165 156 145         unexpected_minor_capability
    000301  aa  170 160 145 143
    000302  aa  164 145 144 137
    000303  aa  155 151 156 157
    000304  aa  162 137 143 141
    000305  aa  160 141 142 151
    000306  aa  154 151 164 171
    000307  55   000035 000013 
    000310  2a   000024 400001 
    000311  55   000030 000003 
    000312  aa  021 163 164 157         store_in_progress
    000313  aa  162 145 137 151
    000314  aa  156 137 160 162
    000315  aa  157 147 162 145
    000316  aa  163 163 000 000
    000317  55   000043 000025 
    000320  2a   000023 400001 
    000321  55   000040 000003 
    000322  aa  010 156 157 137         no_queue
    000323  aa  161 165 145 165
    000324  aa  145 000 000 000
    000325  55   000051 000035 
    000326  2a   000022 400001 
    000327  55   000046 000003 
    000330  aa  012 156 157 137         no_entries
    000331  aa  145 156 164 162
    000332  aa  151 145 163 000
    000333  55   000062 000043 
    000334  2a   000021 400001 
    000335  55   000054 000003 
    000336  aa  024 151 156 166         invalid_request_type
    000337  aa  141 154 151 144
    000340  aa  137 162 145 161
    000341  aa  165 145 163 164
    000342  aa  137 164 171 160
    000343  aa  145 000 000 000
    000344  55   000071 000051 
    000345  2a   000020 400001 
    000346  55   000065 000003 
    000347  aa  015 151 156 166         invalid_queue
    000350  aa  141 154 151 144
    000351  aa  137 161 165 145
    000352  aa  165 145 000 000
    000353  55   000101 000062 
    000354  2a   000017 400001 
    000355  55   000074 000003 
    000356  aa  020 151 156 166         invalid_priority
    000357  aa  141 154 151 144
    000360  aa  137 160 162 151
    000361  aa  157 162 151 164
    000362  aa  171 000 000 000
    000363  55   000110 000071 
    000364  2a   000016 400001 
    000365  55   000104 000003 
    000366  aa  017 151 156 166         invalid_keyword
    000367  aa  141 154 151 144
    000370  aa  137 153 145 171
    000371  aa  167 157 162 144
    000372  55   000120 000101 
    000373  2a   000015 400001 
    000374  55   000113 000003 
    000375  aa  021 151 156 166         invalid_file_type
    000376  aa  141 154 151 144
    000377  aa  137 146 151 154
    000400  aa  145 137 164 171
    000401  aa  160 145 000 000
    000402  55   000130 000110 
    000403  2a   000014 400001 
    000404  55   000123 000003 
    000405  aa  021 151 156 166         invalid_direction
    000406  aa  141 154 151 144
    000407  aa  137 144 151 162
    000410  aa  145 143 164 151
    000411  aa  157 156 000 000
    000412  55   000142 000120 
    000413  2a   000013 400001 
    000414  55   000133 000003 
    000415  aa  030 151 154 154         illegal_minor_capability
    000416  aa  145 147 141 154
    000417  aa  137 155 151 156
    000420  aa  157 162 137 143
    000421  aa  141 160 141 142
    000422  aa  151 154 151 164
    000423  aa  171 000 000 000
    000424  55   000152 000130 
    000425  2a   000012 400001 
    000426  55   000145 000003 
    000427  aa  020 146 145 164         fetch_queue_full
    000430  aa  143 150 137 161
    000431  aa  165 145 165 145
    000432  aa  137 146 165 154
    000433  aa  154 000 000 000
    000434  55   000162 000142 
    000435  2a   000011 400001 
    000436  55   000155 000003 
    000437  aa  021 146 145 164         fetch_in_progress
    000440  aa  143 150 137 151
    000441  aa  156 137 160 162
    000442  aa  157 147 162 145
    000443  aa  163 163 000 000
    000444  55   000171 000152 
    000445  2a   000010 400001 
    000446  55   000165 000003 
    000447  aa  016 142 146 164         bft_not_loaded
    000450  aa  137 156 157 164
    000451  aa  137 154 157 141
    000452  aa  144 145 144 000
    000453  55   000002 000162 
    000454  6a   000000 400002 
    000455  55   000174 000003 
    000456  aa  014 163 171 155         symbol_table
    000457  aa  142 157 154 137
    000460  aa  164 141 142 154
    000461  aa  145 000 000 000

DEFINITIONS HASH TABLE

    000462  aa   000000 000033 
    000463  5a   000013 000000 
    000464  5a   000130 000000 
    000465  aa   000000 000000 
    000466  5a   000043 000000 
    000467  aa   000000 000000 
    000470  5a   000035 000000 
    000471  aa   000000 000000 
    000472  aa   000000 000000 
    000473  aa   000000 000000 
    000474  aa   000000 000000 
    000475  5a   000171 000000 
    000476  aa   000000 000000 
    000477  5a   000025 000000 
    000500  5a   000051 000000 
    000501  aa   000000 000000 
    000502  5a   000110 000000 
    000503  5a   000071 000000 
    000504  5a   000101 000000 
    000505  5a   000120 000000 
    000506  5a   000062 000000 
    000507  5a   000142 000000 
    000510  5a   000152 000000 
    000511  5a   000162 000000 
    000512  aa   000000 000000 
    000513  aa   000000 000000 
    000514  aa   000000 000000 
    000515  aa   000000 000000 

NO EXTERNAL NAMES

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    000516  aa   000001 000000 
    000517  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    000520  50   000234 000000 
    000521  aa   000000 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  02   000262 000030 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000026 000033 
    000007  a2   000000 000016 
    000026  9a   777752 0000 46         *text|       
    000027  5a   000236 0000 00

FIRST REFERENCE TRAP LIST
     
    000030  aa   000000 000001 
    000031  aa   000000 000001 
    000032  2a   000026 000000 
    000033  aa   000000 000000 
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000007 
    000004  aa   000000 115705 
    000005  aa   073761 335527 
    000006  aa   000000 116124 
    000007  aa   162260 177746 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000222 
    000020  aa   000000 000141 
    000021  aa   000164 000156 
    000022  aa   000212 000141 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   067056 064040 
    000030  aa   101160 162151 
    000031  aa   154040 061071 
    000032  aa   070067 040040 
    000033  aa   040040 040040 
    000034  aa   107112 157150 
    000035  aa   156163 157156 
    000036  aa   056123 171163 
    000037  aa   115141 151156 
    000040  aa   164056 141040 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   055164 141162 
    000045  aa   147145 164040 
    000046  aa   154066 070040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040154 151163 
    000057  aa   164040 163171 
    000060  aa   155142 157154 
    000061  aa   163040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000003 
    000066  aa   000102 000065 
    000067  aa   161210 152707 
    000070  aa   000000 116124 
    000071  aa   162157 400000 
    000072  aa   000120 000037 
    000073  aa   120665 316464 
    000074  aa   000000 112067 
    000075  aa   253504 600000 
    000076  aa   000130 000042 
    000077  aa   147777 464111 
    000100  aa   000000 115000 
    000101  aa   507463 000000 
    000102  aa   076163 160145          >special_ldd>install>MR12.2-1028>bft_error_table_.alm
    000103  aa   143151 141154 
    000104  aa   137154 144144 
    000105  aa   076151 156163 
    000106  aa   164141 154154 
    000107  aa   076115 122061 
    000110  aa   062056 062055 
    000111  aa   061060 062070 
    000112  aa   076142 146164 
    000113  aa   137145 162162 
    000114  aa   157162 137164 
    000115  aa   141142 154145 
    000116  aa   137056 141154 
    000117  aa   155040 040040 
    000120  aa   076154 144144          >ldd>include>et_macros.incl.alm
    000121  aa   076151 156143 
    000122  aa   154165 144145 
    000123  aa   076145 164137 
    000124  aa   155141 143162 
    000125  aa   157163 056151 
    000126  aa   156143 154056 
    000127  aa   141154 155040 
    000130  aa   076154 144144          >ldd>include>stack_header.incl.alm
    000131  aa   076151 156143 
    000132  aa   154165 144145 
    000133  aa   076163 164141 
    000134  aa   143153 137150 
    000135  aa   145141 144145 
    000136  aa   162056 151156 
    000137  aa   143154 056141 
    000140  aa   154155 040040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

                *text                    bft_error_table_:    23.
          14    .._00000                 bft_error_table_:    26.
          32    .._00001                 bft_error_table_:    29.
          55    .._00002                 bft_error_table_:    32.
          74    .._00003                 bft_error_table_:    35.
         110    .._00004                 bft_error_table_:    38.
         122    .._00005                 bft_error_table_:    41.
         134    .._00006                 bft_error_table_:    44.
         143    .._00007                 bft_error_table_:    47.
         154    .._00010                 bft_error_table_:    50.
         167    .._00011                 bft_error_table_:    53.
         200    .._00012                 bft_error_table_:    56.
         211    .._00013                 bft_error_table_:    59.
         222    .._00014                 bft_error_table_:    62.
         245    .._00015                 bft_error_table_:    65.
          26    .code_end                bft_error_table_:    23.
          10    .code_start              bft_error_table_:    23.
           5    .loop                    bft_error_table_:    23.
       77777    .segno                   bft_error_table_:    23,   26,   29,   32,   35,   38,   41,   44,   47,   50,   53,
                                                              56,   59,   62,   65.
           0    .trapproc                bft_error_table_:    23.
          10    bft_not_loaded           bft_error_table_:    26.
        1170    call_offset              stack_header:        80.
          10    codes                    bft_error_table_:    23,   26,   29,   32,   35,   38,   41,   44,   47,   50,   53,
                                                              56,   59,   62,   65.
        1174    entry_offset             stack_header:        84.
          11    fetch_in_progress        bft_error_table_:    29.
          12    fetch_queue_full         bft_error_table_:    32.
          13    illegal_minor_capability       bft_error_table_:    35.
          14    invalid_direction        bft_error_table_:    38.
          15    invalid_file_type        bft_error_table_:    41.
          16    invalid_keyword          bft_error_table_:    44.
          17    invalid_priority         bft_error_table_:    47.
          20    invalid_queue            bft_error_table_:    50.
          21    invalid_request_type     bft_error_table_:    53.
           0    messages                 bft_error_table_:    23,   26,   29,   32,   35,   38,   41,   44,   47,   50,   53,
                                                              56,   59,   62,   65.
          22    no_entries               bft_error_table_:    56.
          23    no_queue                 bft_error_table_:    59.
          26    past_codes               bft_error_table_:    23.
        1171    push_offset              stack_header:        81.
        1173    return_no_pop_offset     stack_header:        83.
        1172    return_offset            stack_header:        82.
          73    stach_header.trace_top_ptr     stack_header:        62.
          66    stack_header.assign_linkage_ptr      stack_header:        59.
          32    stack_header.bar_mode_sp       stack_header:        42.
          36    stack_header.call_op_ptr       stack_header:        44.
          10    stack_header.clr_ptr     stack_header:        27.
           6    stack_header.combined_stat_ptr       stack_header:        25.
           4    stack_header.cpm_data_ptr      stack_header:        24.
          13    stack_header.cpm_enabled       stack_header:        32.
          13    stack_header.cur_lot_size      stack_header:        31.
          64    stack_header.ect_ptr     stack_header:        58.
          46    stack_header.entry_op_ptr      stack_header:        49.
          70    stack_header.heap_header_ptr   stack_header:        60.
          74    stack_header.in_trace    stack_header:        63.
          52    stack_header.isot_ptr    stack_header:        52.
          26    stack_header.lot_ptr     bft_error_table_:    23,
                                         stack_header:        39.
          12    stack_header.main_proc_invoked       stack_header:        29.
          12    stack_header.max_lot_size      stack_header:        28.
          20    stack_header.parent_ptr  stack_header:        36.
          34    stack_header.pl1_operators_ptr       stack_header:        43.
          40    stack_header.push_op_ptr       stack_header:        46.
          42    stack_header.return_op_ptr     stack_header:        47.
          44    stack_header.ret_no_pop_op_ptr       stack_header:        48.
          62    stack_header.rnt_ptr     stack_header:        57.
          12    stack_header.run_unit_depth    stack_header:        30.
          54    stack_header.sct_ptr     stack_header:        53.
          30    stack_header.signal_ptr  stack_header:        41.
          22    stack_header.stack_begin_ptr   stack_header:        37.
          24    stack_header.stack_end_ptr     stack_header:        38.
          14    stack_header.system_free_ptr   stack_header:        33.
          60    stack_header.sys_link_info_ptr       stack_header:        56.
          72    stack_header.trace_frames      stack_header:        61.
          50    stack_header.trans_op_tv_ptr   stack_header:        51.
          56    stack_header.unwinder_ptr      stack_header:        54.
          16    stack_header.user_free_ptr     stack_header:        34.
         100    stack_header_end         stack_header:        64.
          24    store_in_progress        bft_error_table_:    62.
           0    trace_frames.count       stack_header:        69.
           1    trace_frames.top_ptr     stack_header:        70.
         551    tv_offset                stack_header:        75,   80,   81,   82,   83,   84.
          25    unexpected_minor_capability    bft_error_table_:    65.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
