	COMPILATION LISTING OF SEGMENT !BBBJXJpZpJhqxp
	Compiled by: Multics PL/I Compiler, Release 30, of February 16, 1988
	Compiled at: Honeywell Bull, Phoenix AZ, SysM
	Compiled on: 03/15/88  1600.4 mst Tue
	    Options: table map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Bull Inc., 1988                *
        4*   *                                                         *
        5*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        6*   *                                                         *
        7*   * Copyright (c) 1972 by Massachusetts Institute of        *
        8*   * Technology and Honeywell Information Systems, Inc.      *
        9*   *                                                         *
       10*   *********************************************************** */
       11 
       12 
       13 
       14 /* HISTORY COMMENTS:
       15*  1) change(86-10-03,Dupuis), approve(86-10-21,MCR7562), audit(86-10-22,Blair),
       16*     install(86-10-23,MR12.0-1199):
       17*     Added the lock_wait_time variable.
       18*  2) change(88-01-27,Dupuis), approve(88-03-03,MCR7844), audit(88-03-11,Blair),
       19*     install(88-03-15,MR12.2-1036):
       20*     Added the trace_every_n_tuples field.
       21*                                                   END HISTORY COMMENTS */
       22 
       23 
       24 linus_data_: proc;
       25 
       26 /* DESCRIPTION:
       27*
       28*   This procedure creates the linus_data_ database.
       29*   
       30*
       31*
       32*   HISTORY:
       33*
       34*   80-02-18   Rickie   E.    Brinegar:   Converted   from  linus_data_.mexp  to
       35*   linus_data_.cds.
       36*   
       37*   80-06-23  Jim  Gray: Modified to make lit_string_size much larger, so that a
       38*   reltion  with  many  large attrs, will not cause "Unable to allocate literal
       39*   string" error messages.
       40*   
       41*   80-06-24 Rickie E.  Brinegar: Modified to reduce Jim's much larger by half.
       42*   
       43*   80-06-24  Jim Gray: Modified to make req_buf_len = 5000, so that linus could
       44*   at least read as much as it can print.
       45*   
       46*   81-06-30 Rickie E.  Brinegar: Changed buf_len to 5000, so that LINUS store,
       47*   modify, write and report have the same buffer size as print.
       48*   
       49**/
       50 
  1     1 /* BEGIN INCLUDE FILE cds_args.incl.pl1 */
  1     2 
  1     3 dcl 1 cds_args based aligned,
  1     4     2 sections (2),
  1     5       3 p ptr,					/* pointer to data for text/static section */
  1     6       3 len fixed bin (18),				/* size of text/static section */
  1     7       3 struct_name char (32),			/* name of declared structure for this section */
  1     8     2 seg_name char (32),				/* name to create segment by */
  1     9     2 num_exclude_names fixed bin,			/* number of names in exclude array */
  1    10     2 exclude_array_ptr ptr,				/* pointer to array of exclude names */
  1    11     2 switches,					/* control switches */
  1    12       3 defs_in_link bit (1) unal,			/* says put defs in linkage */
  1    13       3 separate_static bit (1) unal,			/* says separate static section is wanted */
  1    14       3 have_text bit (1) unal,			/* ON if text section given */
  1    15       3 have_static bit (1) unal,			/* ON if static section given */
  1    16       3 pad bit (32) unal;
  1    17 
  1    18 dcl  exclude_names (1) char (32) based;			/* pointed to be cds_args.exclude_array_ptr */
  1    19 
  1    20 /* END INCLUDE FILE cds_args.incl.pl1 */
       51 
       52 
       53 dcl 1 ld aligned,
       54     2 av_id fixed bin (35) init (1),
       55     2 buff_len fixed bin (35) init (5000),
       56     2 c_id fixed bin (35) init (2),
       57     2 chp_id fixed bin (35) init (3),
       58     2 create_list_id fixed bin (35) init (4),
       59     2 d_id fixed bin (35) init (5),
       60     2 dcl_id fixed bin (35) init (6),
       61     2 dfs_id fixed bin (35) init (7),
       62     2 ds_id fixed bin (35) init (8),
       63     2 dltt_id fixed bin (35) init (9),
       64     2 dtt_id fixed bin (35) init (10),
       65     2 e_id fixed bin (35) init (11),
       66     2 eval_expr_id fixed bin (35) init (12),
       67     2 eval_scal_func_id fixed bin (35) init (13),
       68     2 eval_set_func_id fixed bin (35) init (14),
       69     2 h_id fixed bin (35) init (15),
       70     2 i_id fixed bin (35) init (16),
       71     2 ldb_id fixed bin (35) init (17),
       72     2 lila fixed bin (35) init (2),
       73     2 lila_id fixed bin (35) init (18),
       74     2 lit_string_size fixed bin (35) init (500000),
       75     2 lock_wait_time fixed bin (35) init (900),
       76     2 lrt_id fixed bin (35) init (19),
       77     2 ls_id fixed bin (35) init (20),
       78     2 lv_id fixed bin (35) init (21),
       79     2 m_id fixed bin (35) init (22),
       80     2 max_expr_items fixed bin (35) init (20),
       81     2 max_invocs fixed bin (35) init (20),
       82     2 max_leaf_vals fixed bin (35) init (10),
       83     2 max_lvars fixed bin (35) init (20),
       84     2 max_pred_stack_size fixed bin (35) init (20),
       85     2 max_range_items fixed bin (35) init (20),
       86     2 max_req_args fixed bin (35) init (100),
       87     2 max_sclf_items fixed bin (35) init (20),
       88     2 max_set_stack_size fixed bin (35) init (10),
       89     2 max_user_items fixed bin (35) init (100),
       90     2 o_id fixed bin (35) init (23),
       91     2 p_id fixed bin (35) init (24),
       92     2 print_col_spaces fixed bin (35) init (2),
       93     2 report_id fixed bin (35) init (25),
       94     2 req_buf_len fixed bin (35) init (5000),
       95     2 req_proc_id fixed bin (35) init (26),
       96     2 rlb_id fixed bin (35) init (27),
       97     2 rt_id fixed bin (35) init (28),
       98     2 s_id fixed bin (35) init (29),
       99     2 set_id fixed bin (35) init (1),
      100     2 set_mode_id fixed bin (35) init (30),
      101     2 sfs_id fixed bin (35) init (31),
      102     2 srm_id fixed bin (35) init (32),
      103     2 ss_id fixed bin (35) init (33),
      104     2 stk_depth fixed bin (35) init (50),
      105     2 trace_every_n_tuples fixed bin (35) init (1000),
      106     2 w_id fixed bin (35) init (34),
      107     2 pr_buff_len fixed bin (35) init (5000);
      108 
      109 dcl 1 cdsa like cds_args;
      110 
      111 dcl  code fixed bin (35);
      112 
      113 dcl (addr,
      114      null,
      115      size,
      116      string) builtin;
      117 
      118 dcl  create_data_segment_ entry (ptr, fixed bin (35));
      119 dcl  com_err_ entry options (variable);
      120 
      121 	cdsa.sections.p (1) = addr (ld);
      122 	cdsa.sections.len (1) = size (ld);
      123 	cdsa.sections.struct_name (1) = "ld";
      124 	cdsa.seg_name = "linus_data_";
      125 	cdsa.num_exclude_names = 0;
      126 	cdsa.exclude_array_ptr = null;
      127 	string (cdsa.switches) = "0"b;
      128 	cdsa.switches.have_text = "1"b;
      129 
      130 	call create_data_segment_ (addr (cdsa), code);
      131 	if code ^= 0 then call com_err_ (code, "linus_data_");
      132 	return;
      133 
      134      end linus_data_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    03/15/88  1553.0  !BBBJXJpZpJhqxp.pl1               >spec>install>MR12.2-1036>linus_data_.cds
51           1    04/01/76  2209.5  cds_args.incl.pl1                 >ldd>include>cds_args.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 113 ref 121 130 130
av_id                           000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
buff_len                  1     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
c_id                      2     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
cds_args                               based           structure                level 1 dcl 1-3
cdsa                            000166 automatic       structure                level 1 unaligned dcl 109 set ref 130 130
chp_id                    3     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
code                            000233 automatic       fixed bin(35,0)          dcl 111 set ref 130* 131 131*
com_err_                        000014 constant        entry                    external dcl 119 ref 131
create_data_segment_            000012 constant        entry                    external dcl 118 ref 130
create_list_id            4     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
d_id                      5     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
dcl_id                    6     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
dfs_id                    7     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
dltt_id                  11     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
ds_id                    10     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
dtt_id                   12     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
e_id                     13     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
eval_expr_id             14     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
eval_scal_func_id        15     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
eval_set_func_id         16     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
exclude_array_ptr        42     000166 automatic       pointer                  level 2 dcl 109 set ref 126*
h_id                     17     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
have_text                44(02) 000166 automatic       bit(1)                   level 3 packed packed unaligned dcl 109 set ref 128*
i_id                     20     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
ld                              000100 automatic       structure                level 1 dcl 53 set ref 121 122
ldb_id                   21     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
len                       2     000166 automatic       fixed bin(18,0)          array level 3 dcl 109 set ref 122*
lila                     22     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
lila_id                  23     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
lit_string_size          24     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
lock_wait_time           25     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
lrt_id                   26     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
ls_id                    27     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
lv_id                    30     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
m_id                     31     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
max_expr_items           32     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
max_invocs               33     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
max_leaf_vals            34     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
max_lvars                35     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
max_pred_stack_size      36     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
max_range_items          37     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
max_req_args             40     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
max_sclf_items           41     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
max_set_stack_size       42     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
max_user_items           43     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
null                                                   builtin function         dcl 113 ref 126
num_exclude_names        40     000166 automatic       fixed bin(17,0)          level 2 dcl 109 set ref 125*
o_id                     44     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
p                               000166 automatic       pointer                  array level 3 dcl 109 set ref 121*
p_id                     45     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
pr_buff_len              65     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
print_col_spaces         46     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
report_id                47     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
req_buf_len              50     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
req_proc_id              51     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
rlb_id                   52     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
rt_id                    53     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
s_id                     54     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
sections                        000166 automatic       structure                array level 2 unaligned dcl 109
seg_name                 30     000166 automatic       char(32)                 level 2 packed packed unaligned dcl 109 set ref 124*
set_id                   55     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
set_mode_id              56     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
sfs_id                   57     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
size                                                   builtin function         dcl 113 ref 122
srm_id                   60     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
ss_id                    61     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
stk_depth                62     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
string                                                 builtin function         dcl 113 set ref 127*
struct_name               3     000166 automatic       char(32)                 array level 3 packed packed unaligned dcl 109 set
                                                                                  ref 123*
switches                 44     000166 automatic       structure                level 2 packed packed unaligned dcl 109 set ref 127*
trace_every_n_tuples     63     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*
w_id                     64     000100 automatic       fixed bin(35,0)          initial level 2 dcl 53 set ref 53*

NAME DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
exclude_names                          based           char(32)                 array packed unaligned dcl 1-18

NAME DECLARED BY EXPLICIT CONTEXT.
linus_data_                     000012 constant        entry                    external dcl 24

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       322         340     247         332
Length      2262     247        16        1706      52           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
linus_data_                         174 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
linus_data_              000100 ld                          linus_data_
                         000166 cdsa                        linus_data_
                         000233 code                        linus_data_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      create_data_segment_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     24 000011        53 000017       121 000170       122 000172       123 000174       124 000177       125 000202
    126 000203       127 000205       128 000206       130 000210       131 000222       132 000245


Object Segment >spec>install>MR12.2-1036>linus_data_
Created on 03/15/88  1600.5 mst Tue
by GJohnson.SysMaint.a
using create_data_segment_, Version II of Thursday, November 20, 1986

        Object    Text    Defs    Link    Symb  Static
Start        0       0      66     604     614     614
Length    1037      66     516      10     207       0


56 Definitions:


segname:    linus_data_

text|0          av_id
text|1          buff_len
text|2          c_id
text|3          chp_id
text|4          create_list_id
text|5          d_id
text|6          dcl_id
text|7          dfs_id
text|11         dltt_id
text|10         ds_id
text|12         dtt_id
text|13         e_id
text|14         eval_expr_id
text|15         eval_scal_func_id
text|16         eval_set_func_id
text|17         h_id
text|20         i_id
text|21         ldb_id
text|22         lila
text|23         lila_id
text|24         lit_string_size
text|25         lock_wait_time
text|26         lrt_id
text|27         ls_id
text|30         lv_id
text|31         m_id
text|32         max_expr_items
text|33         max_invocs
text|34         max_leaf_vals
text|35         max_lvars
text|36         max_pred_stack_size
text|37         max_range_items
text|40         max_req_args
text|41         max_sclf_items
text|42         max_set_stack_size
text|43         max_user_items
text|44         o_id
text|45         p_id
text|65         pr_buff_len
text|46         print_col_spaces
text|47         report_id
text|50         req_buf_len
text|51         req_proc_id
text|52         rlb_id
text|53         rt_id
text|54         s_id
text|55         set_id
text|56         set_mode_id
text|57         sfs_id
text|60         srm_id
text|61         ss_id
text|62         stk_depth
symb|0          symbol_table
text|63         trace_every_n_tuples
text|64         w_id


No Links.





                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
