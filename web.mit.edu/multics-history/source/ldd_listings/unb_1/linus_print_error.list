	COMPILATION LISTING OF SEGMENT linus_print_error
	Compiled by: Multics PL/I Compiler, Release 28b, of April 11, 1983
	Compiled at: Honeywell LCPD Phoenix, System M
	Compiled on: 09/16/83  1755.3 mst Fri
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   *                                                         *
        4*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        5*   *                                                         *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 /* ******************************************************
       10*   *                                                    *
       11*   *                                                    *
       12*   * Copyright (c) 1972 by Massachusetts Institute of   *
       13*   * Technology and Honeywell Information Systems, Inc. *
       14*   *                                                    *
       15*   *                                                    *
       16*   ****************************************************** */
       17 
       18 linus_print_error:
       19      proc (code, message);
       20 
       21 /* DESCRIPTION:
       22*
       23*   This procedure prints an error message to the LINUS user on the error_output
       24*   switch.  The message consists of two parts:
       25*   (1)  the message associated with code,
       26*   (2)  the optional additional message contained in the message argument.
       27*
       28*
       29*  
       30*
       31*   HISTORY:
       32*
       33*   77-03-01 J. A. Weeldreyer: Initially written.
       34*
       35**/
       36 
       37 	dcl     code		 fixed bin (35);	/* error code */
       38 	dcl     message		 char (*);	/* optional supplementary message */
       39 	dcl     short_msg		 char (8) aligned;
       40 	dcl     long_msg		 char (100) aligned;
       41 
       42 	dcl     iox_$error_output	 ext ptr;
       43 
       44 	dcl     convert_status_code_
       45 				 entry (fixed bin (35), char (8) aligned, char (100) aligned);
       46 	dcl     ioa_$ioa_switch	 entry options (variable);
       47 
       48 	if code ^= 0 then do;
       49 		call convert_status_code_ (code, short_msg, long_msg);
       50 		if message ^= "" then
       51 		     call
       52 			ioa_$ioa_switch (iox_$error_output, "^/^a^/^a^/", long_msg,
       53 			message);
       54 		else call ioa_$ioa_switch (iox_$error_output, "^/^a^/", long_msg);
       55 	     end;
       56 	else if message ^= "" then
       57 	     call ioa_$ioa_switch (iox_$error_output, "^/^a^/", message);
       58 
       59 	return;
       60 
       61      end linus_print_error;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    09/16/83  1739.7  linus_print_error.pl1             >spec>on>09/16/83-linus>linus_print_error.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
code                                   parameter       fixed bin(35,0)          dcl 37 set ref 18 48 49*
convert_status_code_            000012 constant        entry                    external dcl 44 ref 49
ioa_$ioa_switch                 000014 constant        entry                    external dcl 46 ref 50 54 56
iox_$error_output               000010 external static pointer                  dcl 42 set ref 50* 54* 56*
long_msg                        000102 automatic       char(100)                dcl 40 set ref 49* 50* 54*
message                                parameter       char                     unaligned dcl 38 set ref 18 50 50* 56 56*
short_msg                       000100 automatic       char(8)                  dcl 39 set ref 49*

NAME DECLARED BY EXPLICIT CONTEXT.
linus_print_error               000017 constant        entry                    external dcl 18

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       246         264     166         256
Length       440     166        16         137      60           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
linus_print_error                   120 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
linus_print_error        000100 short_msg                   linus_print_error
                         000102 long_msg                    linus_print_error

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
convert_status_code_          ioa_$ioa_switch

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
iox_$error_output




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     18 000013        48 000032        49 000035        50 000047        54 000111        55 000134        56 000135
     59 000165


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
