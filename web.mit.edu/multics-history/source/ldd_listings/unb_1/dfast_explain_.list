	COMPILATION LISTING OF SEGMENT dfast_explain_
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/04/82  1554.7 mst Thu
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 /* *  This procedure prints out the explain segments for dfast.
        7*   *  The default is to print all info segments in short form.  If the key word
        8*   *  is -long then arguments following are printed in long form.
        9*   *
       10*   *  The info segments are stored in a special directory with these conventions:
       11*   *	topic.info		The short info segment about topic
       12*   *	topic_l.info		The long info segment about topic
       13*   *	edit_topic.info		The short info segment about the topic request that is part of edit.
       14*   *				(line was:    edit explain topic )
       15*   *	edit_topic_l.info		The long info segment about the topic request that is part of edit.
       16**/
       17 dfast_explain_: proc (line, caller, code);
       18 
       19 /* parameters */
       20 
       21 dcl  line char (*) var;				/* user input line */
       22 dcl  caller char (*);				/* calling program  */
       23 dcl  code fixed bin (35);				/* FAST or Multics code */
       24 
       25 dcl  directory char (18) int static options (constant) init (">doc>ss>dfast");
       26 dcl  topic_length fixed bin (24);
       27 dcl  topic_ptr ptr;
       28 dcl  arg char (256) var;
       29 dcl  num_topics fixed bin;				/* topics requested */
       30 dcl  prefix char (5) var;
       31 dcl  suffix char (7);				/*  ".info" for short   "_l.info" for long */
       32 dcl (divide, null) builtin;
       33 
       34 /* external */
       35 
       36 dcl  iox_$user_output ptr ext;
       37 dcl  iox_$put_chars entry (ptr, ptr, fixed bin (21), fixed bin (35));
       38 dcl  dfast_get_arg_ entry (char (*) var, char (*) var) returns (bit (1));
       39 dcl  dfast_error_ entry (fixed bin (35), char (*), char (*));
       40 dcl  hcs_$initiate_count entry (char (*), char (*), char (*), fixed bin (24), fixed bin (12), ptr, fixed bin (35));
       41 dcl  hcs_$terminate_noname entry (ptr, fixed bin (35));
       42 
  1     1 /*  BEGIN INCLUDE ... dfast_error_codes.incl.pl1  */
  1     2 
  1     3 dcl  error_alt_empty fixed bin (35) int static init (1)options (constant);
  1     4 dcl  error_max_size fixed bin (35) int static init (2)options (constant);
  1     5 dcl  error_cur_empty fixed bin (35) int static init (3)options (constant);
  1     6 dcl  error_not_saved fixed bin (35) int static init (4)options (constant);
  1     7 dcl  error_name_dup fixed bin (35) int static init (5)options (constant);
  1     8 dcl  error_long_rec fixed bin (35) int static init (6)options (constant);
  1     9 dcl  error_unknown_arg fixed bin (35) int static init (7)options (constant);
  1    10 dcl  error_no_expl fixed bin (35) int static init (8)options (constant);
  1    11 dcl  error_bad_name fixed bin (35) int static init (9)options (constant);
  1    12 dcl  error_bad_req fixed bin (35) int static init (10)options (constant);
  1    13 dcl  error_syntax_string fixed bin (35) int static init (11)options (constant);
  1    14 dcl  error_name_miss fixed bin (35) int static init (12)options (constant);
  1    15 dcl  error_no_comp fixed bin (35) int static init (13)options (constant);
  1    16 dcl  error_no_main fixed bin (35) int static init (14)options (constant);
  1    17 dcl  error_block_spec fixed bin (35) int static init (15)options (constant);
  1    18 dcl  error_obj_nop fixed bin (35) int static init (16)options (constant);
  1    19 dcl  error_sav_cur fixed bin (35) int static init (17)options (constant);
  1    20 dcl  error_bad_type fixed bin (35) int static init (18)options (constant);
  1    21 dcl  error_unkn_sys fixed bin (35) int static init (19)options (constant);
  1    22 dcl  error_no_suffix fixed bin (35) int static init (20)options (constant);
  1    23 dcl  error_no_nl fixed bin (35) int static init (21)options (constant);
  1    24 dcl  error_bad_sort fixed bin (35) int static init (22)options (constant);
  1    25 dcl  error_no_num fixed bin (35) int static init (23)options (constant);
  1    26 dcl  error_line_miss fixed bin (35) int static init (24)options (constant);
  1    27 dcl  error_request_miss fixed bin (35) int static init (25)options (constant);
  1    28 dcl  error_bad_line fixed bin (35) int static init (26)options (constant);
  1    29 dcl  error_no_string fixed bin (35) int static init (27)options (constant);
  1    30 dcl  error_line_order fixed bin (35) int static init (28)options (constant);
  1    31 dcl  error_max_lines fixed bin (35) int static init (29)options (constant);
  1    32 dcl  error_bad_pathname fixed bin (35) int static init (30)options (constant);
  1    33 dcl  error_access_mode fixed bin (35) int static init (31)options (constant);
  1    34 dcl  error_delimiter_miss fixed bin (35) int static init (32)options (constant);
  1    35 dcl  error_size_fixed_record fixed bin (35) int static init (33)options (constant);
  1    36 dcl  error_bad_rec_len fixed bin (35) int static init (34)options (constant);
  1    37 dcl  error_string_size fixed bin (35) int static init (35)options (constant);
  1    38 dcl  error_max_line_number  fixed bin (35) int static init (36)options (constant);
  1    39 dcl  error_max_args fixed bin (35) int static init (37)options (constant);
  1    40 dcl  error_name_sys fixed bin (35) int static init (38)options (constant);
  1    41 dcl  error_dprint_map fixed bin (35) int static init (39)options (constant);
  1    42 dcl  error_max_num fixed bin (35) int static options (constant) init (40);
  1    43 dcl  error_edit_max_num fixed bin (35) int static options (constant) init (41);
  1    44 dcl  error_un_num_text fixed bin (35) int static options (constant) init (42);
  1    45 dcl  error_no_new_line fixed bin (35) int static options (constant) init (43);
  1    46 
  1    47 /* END INCLUDE ... dfast_error_codes.incl.pl1 */
       43 
       44 
       45 /*  */
       46 
       47 	if caller = "edit" then prefix = "edit_";
       48 	else prefix = "";
       49 	suffix = ".info";
       50 	num_topics = 0;
       51 	do while (dfast_get_arg_ (line, arg));
       52 	     if arg = "-long" then suffix = "_l.info";
       53 	     else do;
       54 		call print ((arg));
       55 		num_topics = num_topics + 1;
       56 	     end;
       57 	end;
       58 
       59 	if num_topics = 0 then call print (caller);
       60 
       61 	code = 0;
       62 
       63 	return;
       64 
       65 
       66 
       67 
       68 print:	proc (topic);
       69 
       70 dcl  topic char (*);
       71 
       72 	     call hcs_$initiate_count (directory, prefix || topic || suffix, "", topic_length, 0, topic_ptr, code);
       73 	     if topic_ptr ^= null then do;
       74 		topic_length = divide (topic_length, 9, 17, 0);
       75 		call iox_$put_chars (iox_$user_output, topic_ptr, (topic_length), code);
       76 		call hcs_$terminate_noname (topic_ptr, code);
       77 	     end;
       78 
       79 	     else call dfast_error_ (error_no_expl, caller, topic);
       80 
       81 	     return;
       82 
       83 	end print;
       84 
       85 
       86      end dfast_explain_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/04/82  1552.3  dfast_explain_.pl1                >spec>on>comp-dir>dfast_explain_.pl1
43           1    03/27/82  0439.4  dfast_error_codes.incl.pl1        >ldd>include>dfast_error_codes.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
arg                             000104 automatic       varying char(256)        dcl 28 set ref 51* 52 54
caller                                 parameter       char                     unaligned dcl 22 set ref 17 47 59* 79*
code                                   parameter       fixed bin(35,0)          dcl 23 set ref 17 61* 72* 75* 76*
dfast_error_                    000016 constant        entry                    external dcl 39 ref 79
dfast_get_arg_                  000014 constant        entry                    external dcl 38 ref 51
directory                       000001 constant        char(18)                 initial unaligned dcl 25 set ref 72*
divide                                                 builtin function         dcl 32 ref 74
error_no_expl                   000000 constant        fixed bin(35,0)          initial dcl 1-10 set ref 79*
hcs_$initiate_count             000020 constant        entry                    external dcl 40 ref 72
hcs_$terminate_noname           000022 constant        entry                    external dcl 41 ref 76
iox_$put_chars                  000012 constant        entry                    external dcl 37 ref 75
iox_$user_output                000010 external static pointer                  dcl 36 set ref 75*
line                                   parameter       varying char             dcl 21 set ref 17 51*
null                                                   builtin function         dcl 32 ref 73
num_topics                      000205 automatic       fixed bin(17,0)          dcl 29 set ref 50* 55* 55 59
prefix                          000206 automatic       varying char(5)          dcl 30 set ref 47* 48* 72
suffix                          000212 automatic       char(7)                  unaligned dcl 31 set ref 49* 52* 72
topic                                  parameter       char                     unaligned dcl 70 set ref 68 72 79*
topic_length                    000100 automatic       fixed bin(24,0)          dcl 26 set ref 72* 74* 74 75
topic_ptr                       000102 automatic       pointer                  dcl 27 set ref 72* 73 75* 76*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
error_access_mode                      internal static fixed bin(35,0)          initial dcl 1-33
error_alt_empty                        internal static fixed bin(35,0)          initial dcl 1-3
error_bad_line                         internal static fixed bin(35,0)          initial dcl 1-28
error_bad_name                         internal static fixed bin(35,0)          initial dcl 1-11
error_bad_pathname                     internal static fixed bin(35,0)          initial dcl 1-32
error_bad_rec_len                      internal static fixed bin(35,0)          initial dcl 1-36
error_bad_req                          internal static fixed bin(35,0)          initial dcl 1-12
error_bad_sort                         internal static fixed bin(35,0)          initial dcl 1-24
error_bad_type                         internal static fixed bin(35,0)          initial dcl 1-20
error_block_spec                       internal static fixed bin(35,0)          initial dcl 1-17
error_cur_empty                        internal static fixed bin(35,0)          initial dcl 1-5
error_delimiter_miss                   internal static fixed bin(35,0)          initial dcl 1-34
error_dprint_map                       internal static fixed bin(35,0)          initial dcl 1-41
error_edit_max_num                     internal static fixed bin(35,0)          initial dcl 1-43
error_line_miss                        internal static fixed bin(35,0)          initial dcl 1-26
error_line_order                       internal static fixed bin(35,0)          initial dcl 1-30
error_long_rec                         internal static fixed bin(35,0)          initial dcl 1-8
error_max_args                         internal static fixed bin(35,0)          initial dcl 1-39
error_max_line_number                  internal static fixed bin(35,0)          initial dcl 1-38
error_max_lines                        internal static fixed bin(35,0)          initial dcl 1-31
error_max_num                          internal static fixed bin(35,0)          initial dcl 1-42
error_max_size                         internal static fixed bin(35,0)          initial dcl 1-4
error_name_dup                         internal static fixed bin(35,0)          initial dcl 1-7
error_name_miss                        internal static fixed bin(35,0)          initial dcl 1-14
error_name_sys                         internal static fixed bin(35,0)          initial dcl 1-40
error_no_comp                          internal static fixed bin(35,0)          initial dcl 1-15
error_no_main                          internal static fixed bin(35,0)          initial dcl 1-16
error_no_new_line                      internal static fixed bin(35,0)          initial dcl 1-45
error_no_nl                            internal static fixed bin(35,0)          initial dcl 1-23
error_no_num                           internal static fixed bin(35,0)          initial dcl 1-25
error_no_string                        internal static fixed bin(35,0)          initial dcl 1-29
error_no_suffix                        internal static fixed bin(35,0)          initial dcl 1-22
error_not_saved                        internal static fixed bin(35,0)          initial dcl 1-6
error_obj_nop                          internal static fixed bin(35,0)          initial dcl 1-18
error_request_miss                     internal static fixed bin(35,0)          initial dcl 1-27
error_sav_cur                          internal static fixed bin(35,0)          initial dcl 1-19
error_size_fixed_record                internal static fixed bin(35,0)          initial dcl 1-35
error_string_size                      internal static fixed bin(35,0)          initial dcl 1-37
error_syntax_string                    internal static fixed bin(35,0)          initial dcl 1-13
error_un_num_text                      internal static fixed bin(35,0)          initial dcl 1-44
error_unkn_sys                         internal static fixed bin(35,0)          initial dcl 1-21
error_unknown_arg                      internal static fixed bin(35,0)          initial dcl 1-9

NAMES DECLARED BY EXPLICIT CONTEXT.
dfast_explain_                  000040 constant        entry                    external dcl 17
print                           000201 constant        entry                    internal dcl 68 ref 54 59

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       510         534     401         520
Length       726     401        24         156     107           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
dfast_explain_                      160 external procedure  is an external procedure.  
print                               102 internal procedure  is called during a stack extension.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
dfast_explain_           000100 topic_length                dfast_explain_
                         000102 topic_ptr                   dfast_explain_
                         000104 arg                         dfast_explain_
                         000205 num_topics                  dfast_explain_
                         000206 prefix                      dfast_explain_
                         000212 suffix                      dfast_explain_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_cs            cat_realloc_cs      call_ext_out_desc   call_ext_out        call_int_this_desc  return
shorten_stack       ext_entry_desc      int_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
dfast_error_                  dfast_get_arg_                hcs_$initiate_count           hcs_$terminate_noname
iox_$put_chars

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
iox_$user_output




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     17 000034        47 000060        48 000074        49 000075        50 000077        51 000100        52 000126
     54 000136        55 000156        57 000160        59 000161        61 000175        63 000177        68 000200
     72 000214        73 000307        74 000315        75 000320        76 000337        77 000352        79 000353
     81 000400


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
