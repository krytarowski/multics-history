	COMPILATION LISTING OF SEGMENT !BBBJPflwNmKwCG
	Compiled by: Multics PL/I Compiler, Release 28e, of February 14, 1985
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 04/23/85  0932.7 mst Tue
	    Options: table map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   *                                                         *
        4*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        5*   * Copyright, (C) Honeywell Information Systems Inc., 1980 *
        6*   *                                                         *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 /*   static data for compose */
       11 
       12 /* format: style2,ind3,ll79,dclind4,idind15,comcol41,linecom */
       13 
       14 compstat:
       15    proc;
       16 
       17       dcl 1 compstat     aligned static,
       18 	  2 compconst  like const;	/* constant data structure */
       19 
  1     1 /* BEGIN INCLUDE FILE compstat.incl.pl1 - external static data for compose
  1     2*
  1     3*   This storage is converted from external (as declared) to internal by the
  1     4*   binder and contains items that must be accessible to both the bound and
  1     5*   unbound program. */
  1     6 
  1     7 /* Written:  ??/??/7? - EJW
  1     8*   Modified: 10/18/84 - EJW - (First recorded change) Added current_parms_ptr
  1     9*			and removed the codes array; version 6.
  1    10**/
  1    11 
  1    12 /* format: style2,ind2,ll79,dclind4,idind15,comcol41,linecom */
  1    13 
  1    14      dcl 1 compstat$compconst
  1    15 		    aligned like const ext static;
  1    16 
  1    17      dcl const_version  fixed bin (35) static options (constant) init (6);
  1    18      dcl MAX_TREE_AREA_CT		/* entries in a tree area */
  1    19 		    fixed bin static options (constant) init (80);
  1    20      dcl MAX_TREE_AREAS		/* number of tree areas */
  1    21 		    fixed bin static options (constant) init (20);
  1    22 
  1    23      dcl 1 const	    aligned based (compstat$compconst.ptr),
  1    24 	 2 ptr	    ptr,		/* self pointer - MUST BE FIRST */
  1    25 	 2 version    fixed bin (35), /* structure version */
  1    26 	 2 art_symbols		/* string of art symbols */
  1    27 		    char (28) aligned,
  1    28 	 2 builtin_count		/* count of builtin variables */
  1    29 		    fixed bin,
  1    30 	 2 comp_dir   char (200),	/* dir in which compose lives */
  1    31 	 2 comp_version
  1    32 		    char (8) var,	/* compose version id */
  1    33 	 2 date_value char (8) var,	/* current date */
  1    34 	 2 dsm_name   char (32),	/* device support module name */
  1    35 	 2 dvt_name   char (32),	/* device table name */
  1    36 	 2 max_seg_chars
  1    37 		    fixed bin (35), /* char count in a max seg */
  1    38 	 2 null_str   char (1) var,	/* an empty string */
  1    39 	 2 ptrs,
  1    40 	 ( 3 call_stk_ptr,		/* -> insert call stack */
  1    41 	   3 colhdrptr,		/* empty column header structure */
  1    42 	   3 ctl_ptr,		/* input line structure */
  1    43 	   3 current_parms_ptr,	/* current formatting parms */
  1    44 	   3 default_parms_ptr,	/* default initial text parms */
  1    45 	   3 devptr,		/* -> comp_dvt structure */
  1    46 	   3 dvidptr,		/* -> comp_dvid structure       */
  1    47 	   3 errblk_ptr,		/* error message block pointer */
  1    48 	   3 footnote_parms_ptr,	/* footnote formatting parms */
  1    49 	   3 fnttbldata_ptr,	/* -> font table data */
  1    50 	   3 global_area_ptr,	/* per invocation storage */
  1    51 	   3 init_page_parms_ptr,	/* default initial page parms */
  1    52 	   3 insert_data_ptr,	/* insert file data block */
  1    53 	   3 local_area_ptr,	/* per file storage */
  1    54 	   3 loctbl_ptr,		/* for font copying */
  1    55 	   3 option_ptr,		/* program options block */
  1    56 	   3 outproc_ptr,		/* device writer for cleanup */
  1    57 	   3 page_ptr,		/* active page structure */
  1    58 	   3 page_header_ptr,	/* empty page header structure */
  1    59 	   3 page_parms_ptr,	/* page formatting parameter block */
  1    60 	   3 save_shared_ptr,	/* saved shared data */
  1    61 	   3 shared_ptr,		/* shared data structure */
  1    62 	   3 text_entry_ptr,	/* empty text entry structure */
  1    63 	   3 text_header_ptr,	/* empty text header structure */
  1    64 	   3 text_parms_ptr,	/* main body formatting parms */
  1    65 	   3 tree_ptr		/* symbol tree structure */
  1    66 	   )	    ptr,
  1    67 	 2 time_value char (6) var;	/* time at start */
  1    68 
  1    69 /* Other external */
  1    70      dcl (
  1    71          ioa_,
  1    72          ioa_$nnl
  1    73          )	    entry options (variable);
  1    74      dcl iox_$error_output
  1    75 		    ptr ext static, /* iocb pointer for error_output */
  1    76          iox_$user_input
  1    77 		    ptr ext static, /* iocb pointer for user_input */
  1    78          iox_$user_output
  1    79 		    ptr ext static; /* iocb pointer for user_output */
  1    80      dcl sys_info$max_seg_size
  1    81 		    fixed bin (18) ext static;
  1    82 
  1    83 /* END INCLUDE FILE compstat.incl.pl1 */
       20 
       21 
       22       dcl com_err_	     entry options (variable),
       23 	create_data_segment_
       24 		     entry (ptr, fixed (35)),
       25 	ercode	     fixed (35);	/* system error code */
       26 
       27       dcl 1 cdsargs	     aligned like cds_args;
       28 
  2     1 /* BEGIN INCLUDE FILE cds_args.incl.pl1 */
  2     2 
  2     3 dcl 1 cds_args based aligned,
  2     4     2 sections (2),
  2     5       3 p ptr,					/* pointer to data for text/static section */
  2     6       3 len fixed bin (18),				/* size of text/static section */
  2     7       3 struct_name char (32),			/* name of declared structure for this section */
  2     8     2 seg_name char (32),				/* name to create segment by */
  2     9     2 num_exclude_names fixed bin,			/* number of names in exclude array */
  2    10     2 exclude_array_ptr ptr,				/* pointer to array of exclude names */
  2    11     2 switches,					/* control switches */
  2    12       3 defs_in_link bit (1) unal,			/* says put defs in linkage */
  2    13       3 separate_static bit (1) unal,			/* says separate static section is wanted */
  2    14       3 have_text bit (1) unal,			/* ON if text section given */
  2    15       3 have_static bit (1) unal,			/* ON if static section given */
  2    16       3 pad bit (32) unal;
  2    17 
  2    18 dcl  exclude_names (1) char (32) based;			/* pointed to be cds_args.exclude_array_ptr */
  2    19 
  2    20 /* END INCLUDE FILE cds_args.incl.pl1 */
       29 
       30 
       31 /* assign true constants */
       32       compstat.version = const_version;
       33       compstat.art_symbols = "[]{}()|=o/X*mct^v<>\-HhSs~""'";
       34 
       35 /*      compstat.comp_version = "9.15c";/* FirstPass, PageCount BIFs */
       36 /*      compstat.comp_version = "9.16d";/* .fnt -reset */
       37 /*      compstat.comp_version = "9.17l";/* marg adjs */
       38 /*      compstat.comp_version = "9.18g";/* full page window */
       39 /*      compstat.comp_version = "9.19e";/* compstat V6 */
       40 /*      compstat.comp_version = "9.20a";/* MR11 performance */
       41 /*      compstat.comp_version = "9.21";	/* translator_temp */
       42       compstat.comp_version = "10.0e";	/* extensible blocks */
       43       compstat.max_seg_chars = 4 * sys_info$max_seg_size;
       44 
       45 /* set up cds arg structure */
       46       cdsargs.p (*) = addr (compstat);
       47       cdsargs.len (1) = 0;
       48       cdsargs.len (2) = size (compstat);
       49       cdsargs.struct_name (1) = "";
       50       cdsargs.struct_name (2) = "compstat";
       51       cdsargs.seg_name = "compstat";
       52       cdsargs.num_exclude_names = 0;
       53       cdsargs.exclude_array_ptr = null ();
       54       cdsargs.defs_in_link = "0"b;
       55       cdsargs.separate_static = "0"b;
       56       cdsargs.have_text = "0"b;
       57       cdsargs.have_static = "1"b;
       58 
       59       call create_data_segment_ (addr (cdsargs), ercode);
       60       if ercode ^= 0
       61       then call com_err_ (ercode, "create_stat");
       62 
       63    end;
       64 
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    04/23/85  0910.9  !BBBJPflwNmKwCG.pl1               >spec>online>comp>compstat.cds
20           1    03/01/85  1412.1  compstat.incl.pl1                 >ldd>include>compstat.incl.pl1
29           2    04/01/76  2209.5  cds_args.incl.pl1                 >ldd>include>cds_args.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
art_symbols               3     000010 internal static char(28)                 level 3 dcl 17 set ref 33*
cds_args                               based           structure                level 1 dcl 2-3
cdsargs                         000102 automatic       structure                level 1 dcl 27 set ref 59 59
com_err_                        000242 constant        entry                    external dcl 22 ref 60
comp_version             75     000010 internal static varying char(8)          level 3 dcl 17 set ref 42*
compconst                       000010 internal static structure                level 2 dcl 17
compstat                        000010 internal static structure                level 1 dcl 17 set ref 46 48
compstat$compconst              000230 external static structure                level 1 dcl 1-14
const                                  based           structure                level 1 dcl 1-23
const_version                   000000 constant        fixed bin(35,0)          initial dcl 1-17 ref 32
create_data_segment_            000244 constant        entry                    external dcl 22 ref 59
defs_in_link             44     000102 automatic       bit(1)                   level 3 packed unaligned dcl 27 set ref 54*
ercode                          000100 automatic       fixed bin(35,0)          dcl 22 set ref 59* 60 60*
exclude_array_ptr        42     000102 automatic       pointer                  level 2 dcl 27 set ref 53*
have_static              44(03) 000102 automatic       bit(1)                   level 3 packed unaligned dcl 27 set ref 57*
have_text                44(02) 000102 automatic       bit(1)                   level 3 packed unaligned dcl 27 set ref 56*
len                       2     000102 automatic       fixed bin(18,0)          array level 3 dcl 27 set ref 47* 48*
max_seg_chars           123     000010 internal static fixed bin(35,0)          level 3 dcl 17 set ref 43*
num_exclude_names        40     000102 automatic       fixed bin(17,0)          level 2 dcl 27 set ref 52*
p                               000102 automatic       pointer                  array level 3 dcl 27 set ref 46*
ptr                             000230 external static pointer                  level 2 dcl 1-14 ref 1-23 1-23 1-23 1-23 1-23 1-23
                                                                                  1-23 1-23 1-23 1-23 1-23 1-23 1-23 1-23 1-23 1-23
                                                                                  1-23 1-23 1-23 1-23 1-23 1-23 1-23 1-23 1-23 1-23
                                                                                  1-23 1-23 1-23 1-23 1-23 1-23 1-23 1-23 1-23 1-23
                                                                                  1-23 1-23 1-23 1-23
sections                        000102 automatic       structure                array level 2 dcl 27
seg_name                 30     000102 automatic       char(32)                 level 2 dcl 27 set ref 51*
separate_static          44(01) 000102 automatic       bit(1)                   level 3 packed unaligned dcl 27 set ref 55*
struct_name               3     000102 automatic       char(32)                 array level 3 dcl 27 set ref 49* 50*
switches                 44     000102 automatic       structure                level 2 dcl 27
sys_info$max_seg_size           000240 external static fixed bin(18,0)          dcl 1-80 ref 43
version                   2     000010 internal static fixed bin(35,0)          level 3 dcl 17 set ref 32*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
MAX_TREE_AREAS                         constant        fixed bin(17,0)          initial dcl 1-20
MAX_TREE_AREA_CT                       constant        fixed bin(17,0)          initial dcl 1-18
exclude_names                          based           char(32)                 array unaligned dcl 2-18
ioa_                            000000 constant        entry                    external dcl 1-70
ioa_$nnl                        000000 constant        entry                    external dcl 1-70
iox_$error_output               000232 external static pointer                  dcl 1-74
iox_$user_input                 000234 external static pointer                  dcl 1-74
iox_$user_output                000236 external static pointer                  dcl 1-74

NAME DECLARED BY EXPLICIT CONTEXT.
compstat                        000025 constant        entry                    external dcl 14

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 46 59 59
null                                                   builtin function         ref 53
size                                                   builtin function         ref 48

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       272         540     153         302
Length      3376     153       246        2622     117         216

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
compstat                            124 external procedure  is an external procedure.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 compstat                    compstat

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
compstat                 000100 ercode                      compstat
                         000102 cdsargs                     compstat

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      create_data_segment_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
compstat$compconst            iox_$error_output             iox_$user_input               iox_$user_output
sys_info$max_seg_size




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     14 000024        32 000032        33 000034        42 000037        43 000043        46 000046        47 000062
     48 000063        49 000065        50 000070        51 000073        52 000076        53 000077        54 000101
     55 000103        56 000105        57 000107        59 000111        60 000124        63 000147


Object Segment >spec>online>comp>compstat
Created on 04/23/85  0932.8 mst Tue
by Martinson.SysMaint.m
using create_data_segment_, Version II of Friday, November 30, 1984

        Object    Text    Defs    Link    Symb  Static
Start        0       0       0      26     254      36
Length     442       0      26     226     152     216


3 Definitions:


segname:    compstat

link|10         compconst
symb|0          symbol_table


No Links.





                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
