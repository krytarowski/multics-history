	COMPILATION LISTING OF SEGMENT !BBBJPNdcQnbkBp
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/27/84  0756.3 mst Thu
	    Options: table map

        1 /* ******************************************************
        2*   *                                                    *
        3*   * Copyright, (C) Honeywell Limited, 1983             *
        4*   *                                                    *
        5*   * Copyright (c) 1972 by Massachusetts Institute of   *
        6*   * Technology and Honeywell Information Systems, Inc. *
        7*   *                                                    *
        8*   ****************************************************** */
        9 
       10 /* format: style3,^delnl,linecom */
       11 fort_instruction_info_:
       12      proc;
       13 
       14 dcl	(i, j)		fixed bin;
       15 dcl	code		fixed bin (35);
       16 
       17 dcl	1 cdsa		aligned auto like cds_args;
       18 
       19 dcl	1 fort_instruction_info_
       20 			aligned,
       21 	  2 fort_instruction_info_
       22 			(0:1023) aligned,
       23 	    3 alters	unaligned structure,
       24 	      4 a		bit (1),
       25 	      4 q		bit (1),
       26 	      4 indicators	bit (1),
       27 	      4 bases	(6) bit (1),
       28 	      4 index_regs	(0:7) bit (1),
       29 	      4 pad1	bit (1),
       30 	    3 directable	bit (1) unaligned,
       31 	    3 pad2	bit (17) unaligned;
       32 
       33 dcl	1 pl1$instruction_info
       34 			(0:1023) aligned ext static,
       35 	  2 alters	bit (18) unal,
       36 	  2 directable	bit (1) unal,
       37 	  2 pad		bit (8) unal,
       38 	  2 num_words	fixed bin (7) unal,
       39 	  2 double_ins	bit (1) unal;
       40 
       41 dcl	me		char (22) int static options (constant) init ("fort_instruction_info_");
       42 
       43 dcl	create_data_segment_
       44 			entry (ptr, fixed bin (35));
       45 
       46 dcl	(addr, divide, mod, null, size, string)
       47 			builtin;
       48 
  1     1 /* BEGIN INCLUDE FILE cds_args.incl.pl1 */
  1     2 
  1     3 dcl 1 cds_args based aligned,
  1     4     2 sections (2),
  1     5       3 p ptr,					/* pointer to data for text/static section */
  1     6       3 len fixed bin (18),				/* size of text/static section */
  1     7       3 struct_name char (32),			/* name of declared structure for this section */
  1     8     2 seg_name char (32),				/* name to create segment by */
  1     9     2 num_exclude_names fixed bin,			/* number of names in exclude array */
  1    10     2 exclude_array_ptr ptr,				/* pointer to array of exclude names */
  1    11     2 switches,					/* control switches */
  1    12       3 defs_in_link bit (1) unal,			/* says put defs in linkage */
  1    13       3 separate_static bit (1) unal,			/* says separate static section is wanted */
  1    14       3 have_text bit (1) unal,			/* ON if text section given */
  1    15       3 have_static bit (1) unal,			/* ON if static section given */
  1    16       3 pad bit (32) unal;
  1    17 
  1    18 dcl  exclude_names (1) char (32) based;			/* pointed to be cds_args.exclude_array_ptr */
  1    19 
  1    20 /* END INCLUDE FILE cds_args.incl.pl1 */
       49 
       50 
       51 /* initialize the table */
       52 
       53 	do i = 0 to 1023;
       54 	     j = divide (i, 2, 17, 0) + 512 * mod (i, 2);
       55 
       56 	     string (fort_instruction_info_ (i).alters) = pl1$instruction_info (j).alters;
       57 	     fort_instruction_info_.directable (i) = pl1$instruction_info.directable (j);
       58 	     fort_instruction_info_ (i).pad2 = "0"b;
       59 	end;
       60 
       61 /* set up for create_data_segment_ */
       62 
       63 	cdsa.sections (1).p = addr (fort_instruction_info_);
       64 	cdsa.sections (1).len = size (fort_instruction_info_);
       65 	cdsa.sections (1).struct_name = me;
       66 
       67 	cdsa.seg_name = me;
       68 	cdsa.num_exclude_names = 0;
       69 	cdsa.exclude_array_ptr = null;
       70 
       71 	string (cdsa.switches) = "0"b;
       72 	cdsa.switches.have_text = "1"b;
       73 
       74 	call create_data_segment_ (addr (cdsa), code);
       75 	return;
       76      end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/27/84  0751.7  !BBBJPNdcQnbkBp.pl1               >spec>online>fort_recompile>fort_instruction_info_.cds
49           1    04/01/76  2209.5  cds_args.incl.pl1                 >ldd>include>cds_args.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 46 ref 63 74 74
alters                          000151 automatic       structure                array level 3 in structure "fort_instruction_info_"
                                                                                  packed unaligned dcl 19 in procedure
                                                                                  "fort_instruction_info_" set ref 56*
alters                          000012 external static bit(18)                  array level 2 in structure "pl1$instruction_info"
                                                                                  packed unaligned dcl 33 in procedure
                                                                                  "fort_instruction_info_" ref 56
cds_args                               based           structure                level 1 dcl 1-3
cdsa                            000104 automatic       structure                level 1 dcl 17 set ref 74 74
code                            000102 automatic       fixed bin(35,0)          dcl 15 set ref 74*
create_data_segment_            000014 constant        entry                    external dcl 43 ref 74
directable                0(18) 000151 automatic       bit(1)                   array level 3 in structure "fort_instruction_info_"
                                                                                  packed unaligned dcl 19 in procedure
                                                                                  "fort_instruction_info_" set ref 57*
directable                0(18) 000012 external static bit(1)                   array level 2 in structure "pl1$instruction_info"
                                                                                  packed unaligned dcl 33 in procedure
                                                                                  "fort_instruction_info_" ref 57
divide                                                 builtin function         dcl 46 ref 54
exclude_array_ptr        42     000104 automatic       pointer                  level 2 dcl 17 set ref 69*
fort_instruction_info_          000151 automatic       structure                level 1 dcl 19 in procedure "fort_instruction_info_"
                                                                                  set ref 63 64
fort_instruction_info_          000151 automatic       structure                array level 2 in structure "fort_instruction_info_"
                                                                                  dcl 19 in procedure "fort_instruction_info_"
have_text                44(02) 000104 automatic       bit(1)                   level 3 packed unaligned dcl 17 set ref 72*
i                               000100 automatic       fixed bin(17,0)          dcl 14 set ref 53* 54 54 56 57 58*
j                               000101 automatic       fixed bin(17,0)          dcl 14 set ref 54* 56 57
len                       2     000104 automatic       fixed bin(18,0)          array level 3 dcl 17 set ref 64*
me                              000000 constant        char(22)                 initial unaligned dcl 41 ref 65 67
mod                                                    builtin function         dcl 46 ref 54
null                                                   builtin function         dcl 46 ref 69
num_exclude_names        40     000104 automatic       fixed bin(17,0)          level 2 dcl 17 set ref 68*
p                               000104 automatic       pointer                  array level 3 dcl 17 set ref 63*
pad2                      0(19) 000151 automatic       bit(17)                  array level 3 packed unaligned dcl 19 set ref 58*
pl1$instruction_info            000012 external static structure                array level 1 dcl 33
sections                        000104 automatic       structure                array level 2 dcl 17
seg_name                 30     000104 automatic       char(32)                 level 2 dcl 17 set ref 67*
size                                                   builtin function         dcl 46 ref 64
string                                                 builtin function         dcl 46 set ref 56* 71*
struct_name               3     000104 automatic       char(32)                 array level 3 dcl 17 set ref 65*
switches                 44     000104 automatic       structure                level 2 dcl 17 set ref 71*

NAME DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
exclude_names                          based           char(32)                 array unaligned dcl 1-18

NAME DECLARED BY EXPLICIT CONTEXT.
fort_instruction_info_          000011 constant        entry                    external dcl 11

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       166         204     106         176
Length      1472     106        16        1252      60           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
fort_instruction_info_             1138 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
fort_instruction_info_   000100 i                           fort_instruction_info_
                         000101 j                           fort_instruction_info_
                         000102 code                        fort_instruction_info_
                         000104 cdsa                        fort_instruction_info_
                         000151 fort_instruction_info_      fort_instruction_info_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return              mod_fx1             ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
create_data_segment_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
pl1$instruction_info




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000010        53 000016        54 000023        56 000033        57 000040        58 000044        59 000046
     63 000050        64 000052        65 000054        67 000057        68 000062        69 000063        71 000065
     72 000066        74 000070        75 000103


Object Segment >spec>online>fort_recompile>fort_instruction_info_
Created on 12/27/84  0756.4 mst Thu
by GJohnson.SysMaint.m
using create_data_segment_, Version II of Friday, November 30, 1984

        Object    Text    Defs    Link    Symb  Static
Start        0       0    2000    2034    2044    2044
Length    2310    2000      34      10     230       0


3 Definitions:


segname:    fort_instruction_info_

text|0          fort_instruction_info_
symb|0          symbol_table


No Links.





                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
