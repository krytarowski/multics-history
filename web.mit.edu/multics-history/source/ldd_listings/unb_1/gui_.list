	COMPILATION LISTING OF SEGMENT gui_
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/18/82  1640.4 mst Thu
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   *                                                         *
        4*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        5*   *                                                         *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 /* ******************************************************
       10*   *                                                    *
       11*   *                                                    *
       12*   * Copyright (c) 1972 by Massachusetts Institute of   *
       13*   * Technology and Honeywell Information Systems, Inc. *
       14*   *                                                    *
       15*   *                                                    *
       16*   ****************************************************** */
       17 
       18 gui_: proc;
       19 	return;
       20 
       21 /* Written by S. Duren, circa 1971.
       22*   Modified extensively by C. D. Tavares circa 1971/2 to rid it of
       23*   "using and writing into other entries' parameters" bugs.
       24*   Modified 01/21/75 by CDT to get rid of another of same type in circle generator. */
       25 /* Modified 07/05/78 by CDT to add entrypoints without trailing underscores. */
       26 /* Modified 09/28/78 by CDT to improve list management when many calls occur between displays */
       27 /* Last modified 04/25/80 by CDT to replace calls to com_err_ with sub_err_ */
       28 
       29 
       30 dcl  erase_switch bit (1) aligned initial ("1"b) static,
       31      master_node fixed bin (18) static,
       32      main_node fixed bin (18) static,
       33      active_node fixed bin (18) static,
       34      item_node fixed bin (18),
       35     (dx, dy) fixed bin,
       36      sub_err_ ext entry options (variable),
       37     (q, angle, delta, r) float bin,
       38     (sqrt, sin, cos, float, abs, length, null) builtin,
       39      acos_ ext entry (float bin (27)) returns (float bin (27)),
       40      arr (4) fixed bin (18);
       41 
       42 dcl  graphic_operator_$delete ext entry (fixed bin (18), fixed bin (35));
       43 
  1     1 /* --------------- BEGIN include file graphic_etypes.incl.pl1 --------------- */
  1     2 
  1     3 /* Types of position, mode, and other effectors for the
  1     4*   Multics General Graphic System */
  1     5 
  1     6 
  1     7 /* Null code */
  1     8 
  1     9 dcl (Null initial (-1),
  1    10 
  1    11 /* Position codes */
  1    12 
  1    13      Setposition initial (0),
  1    14      Setpoint initial (1),
  1    15      Vector initial (2),
  1    16      Shift initial (3),
  1    17      Point initial (4),
  1    18 
  1    19 /* Mode codes, with values where appropriate */
  1    20 
  1    21      Scaling initial (8),
  1    22      Rotation initial (9),
  1    23      Clipping initial (10),
  1    24 
  1    25      Intensity initial (16),
  1    26 	Full_intensity initial (7),
  1    27 	Half_intensity initial (3),
  1    28 	Invisible initial (0),
  1    29 
  1    30      Linetype initial (17),
  1    31 	Solid initial (0),
  1    32 	Dashed initial (1),
  1    33 	Dotted initial (2),
  1    34 	Dash_dotted initial (3),
  1    35 	Long_dashed initial (4),
  1    36 
  1    37      Sensitivity initial (18),
  1    38 	Sensitive initial (1),
  1    39 	Insensitive initial (0),
  1    40 
  1    41      Blink initial (19),
  1    42 	Steady initial (0),
  1    43 	Blinking initial (1),
  1    44 
  1    45      Color initial (20),
  1    46 
  1    47      Symbol initial (24),
  1    48 
  1    49 /* Text code, with legal alignments */
  1    50 
  1    51      Text initial (25),
  1    52 	Upper_left initial (1),
  1    53 	Upper_center initial (2),
  1    54 	Upper_right initial (3),
  1    55 	Left initial (4),
  1    56 	Center initial (5),
  1    57 	Right initial (6),
  1    58 	Lower_left initial (7),
  1    59 	Lower_center initial (8),
  1    60 	Lower_right initial (9),
  1    61 
  1    62 /* Datablock code */
  1    63 
  1    64      Datablock initial (26),
  1    65 
  1    66 /* Structural effector codes */
  1    67 
  1    68      List initial (32),
  1    69      Array initial (33),
  1    70 
  1    71 /* Merge codes for gm_$get_struc and gm_$put_struc */
  1    72 
  1    73      On_dup_error initial (0),		/* allow no name duplications */
  1    74      On_dup_source initial (1),		/* on name dup, force move (use source copy) */
  1    75      On_dup_target_then_nulls initial (2),	/* on name dup, use target copy, for nondup symbols create null ones */
  1    76      On_dup_target_then_source initial (3),	/* on name dup, use target copy, for nondup symbols, use source copy */
  1    77 
  1    78 /* Device codes for graphic input devices */
  1    79 
  1    80      Terminal_program initial (0),
  1    81      Keyboard initial (1),
  1    82      Mouse initial (2),
  1    83      Joystick initial (3),
  1    84      Tablet_and_pen initial (4),
  1    85      Light_pen initial (5),
  1    86      Trackball initial (6),
  1    87      Any_device initial (63))			/* 63 is equivalent to -1 in SPI */
  1    88 
  1    89      fixed bin internal static options (constant);
  1    90 
  1    91 /* ---------------- END include file graphic_etypes.incl.pl1 ---------------- */
       44 
  2     1 /* *************** BEGIN INCLUDE FILE gm_entry_dcls.incl.pl1 *************** */
  2     2 
  2     3 dcl (graphic_manipulator_$init,
  2     4      gm_$init) entry (fixed bin (35));
  2     5 
  2     6 dcl (graphic_manipulator_$segp,
  2     7      gm_$segp) entry (pointer, fixed bin (35));
  2     8 
  2     9 dcl (graphic_manipulator_$create_position,
  2    10      gm_$create_position,
  2    11      graphic_manipulator_$cpos,
  2    12      gm_$cpos) entry (fixed bin, float bin (27), float bin (27), float bin (27), fixed bin (35)) returns (fixed bin (18));
  2    13 
  2    14 dcl (graphic_manipulator_$create_mode,
  2    15      gm_$create_mode,
  2    16      graphic_manipulator_$cmode,
  2    17      gm_$cmode) entry (fixed bin, fixed bin, fixed bin (35)) returns (fixed bin (18));
  2    18 
  2    19 dcl (graphic_manipulator_$create_scale,
  2    20      gm_$create_scale,
  2    21      graphic_manipulator_$cscale,
  2    22      gm_$cscale) entry (float bin (27), float bin (27), float bin (27), fixed bin (35)) returns (fixed bin (18));
  2    23 
  2    24 dcl (graphic_manipulator_$create_rotation,
  2    25      gm_$create_rotation,
  2    26      graphic_manipulator_$crot,
  2    27      gm_$crot) entry (float bin (27), float bin (27), float bin (27), fixed bin (35)) returns (fixed bin (18));
  2    28 
  2    29 dcl (graphic_manipulator_$create_clip,
  2    30      gm_$create_clip,
  2    31      graphic_manipulator_$cclip,
  2    32      gm_$cclip) entry (float bin (27), float bin (27), float bin (27), float bin (27), float bin (27), float bin (27),
  2    33      fixed bin (35)) returns (fixed bin (18));
  2    34 
  2    35 dcl (graphic_manipulator_$create_color,
  2    36      gm_$create_color,
  2    37      graphic_manipulator_$ccolor,
  2    38      gm_$ccolor) entry (fixed bin, fixed bin, fixed bin, fixed bin (35)) returns (fixed bin (18));
  2    39 
  2    40 dcl (graphic_manipulator_$create_text,
  2    41      gm_$create_text,
  2    42      graphic_manipulator_$ctext,
  2    43      gm_$ctext) entry (fixed bin, fixed bin, char (*), fixed bin (35)) returns (fixed bin (18));
  2    44 
  2    45 dcl (graphic_manipulator_$create_data,
  2    46      gm_$create_data,
  2    47      graphic_manipulator_$cdata,
  2    48      gm_$cdata) entry (fixed bin, bit (*), fixed bin (35)) returns (fixed bin (18));
  2    49 
  2    50 dcl (graphic_manipulator_$create_list,
  2    51      gm_$create_list,
  2    52      graphic_manipulator_$clist,
  2    53      gm_$clist) entry (fixed bin (18) dimension (*), fixed bin, fixed bin (35)) returns (fixed bin (18));
  2    54 
  2    55 dcl (graphic_manipulator_$create_array,
  2    56      gm_$create_array,
  2    57      graphic_manipulator_$carray,
  2    58      gm_$carray) entry (fixed bin (18) dimension (*), fixed bin, fixed bin (35)) returns (fixed bin (18));
  2    59 
  2    60 dcl (graphic_manipulator_$assign_name,
  2    61      gm_$assign_name) entry (char (*), fixed bin (18), fixed bin (35)) returns (fixed bin (18));
  2    62 
  2    63 dcl (graphic_manipulator_$find_structure,
  2    64      gm_$find_structure,
  2    65      graphic_manipulator_$fstruc,
  2    66      gm_$fstruc) entry (char (*), fixed bin (18), fixed bin (35)) returns (fixed bin (18));
  2    67 
  2    68 dcl (graphic_manipulator_$add_element,
  2    69      gm_$add_element) entry (fixed bin (18), fixed bin, fixed bin (18), fixed bin (35));
  2    70 
  2    71 dcl (graphic_manipulator_$replace_element,
  2    72      gm_$replace_element) entry (fixed bin (18), fixed bin, fixed bin (18), fixed bin (35)) returns (fixed bin (18));
  2    73 
  2    74 dcl (graphic_manipulator_$replace_node,
  2    75      gm_$replace_node) entry (fixed bin (18), fixed bin (18), fixed bin (35));
  2    76 
  2    77 dcl (graphic_manipulator_$remove_symbol,
  2    78      gm_$remove_symbol) entry (char (*), fixed bin (35));
  2    79 
  2    80 dcl (graphic_manipulator_$replicate,
  2    81      gm_$replicate) entry (fixed bin (18), fixed bin (35)) returns (fixed bin (18));
  2    82 
  2    83 dcl (graphic_manipulator_$examine_type,
  2    84      gm_$examine_type) entry (fixed bin (18), bit (1) aligned, fixed bin, fixed bin (35));
  2    85 
  2    86 dcl (graphic_manipulator_$examine_position,
  2    87      gm_$examine_position,
  2    88      graphic_manipulator_$epos,
  2    89      gm_$epos) entry (fixed bin (18), fixed bin, float bin, float bin, float bin, fixed bin (35));
  2    90 
  2    91 dcl (graphic_manipulator_$examine_mode,
  2    92      gm_$examine_mode,
  2    93      graphic_manipulator_$emode,
  2    94      gm_$emode) entry (fixed bin (18), fixed bin, fixed bin, fixed bin (35));
  2    95 
  2    96 dcl (graphic_manipulator_$examine_color,
  2    97      gm_$examine_color,
  2    98      graphic_manipulator_$ecolor,
  2    99      gm_$ecolor) entry (fixed bin (18), fixed bin, fixed bin, fixed bin, fixed bin (35));
  2   100 
  2   101 dcl (graphic_manipulator_$examine_mapping,
  2   102      gm_$examine_mapping,
  2   103      graphic_manipulator_$emap,
  2   104      gm_$emap) entry (fixed bin (18), fixed bin, float bin dimension (*), fixed bin, fixed bin (35));
  2   105 
  2   106 dcl (graphic_manipulator_$examine_contents,
  2   107      gm_$examine_contents) entry (fixed bin (18), fixed bin (18) dimension (*), fixed bin, fixed bin (35));
  2   108 
  2   109 dcl (graphic_manipulator_$examine_list,
  2   110      gm_$examine_list,
  2   111      graphic_manipulator_$elist,
  2   112      gm_$elist) entry (fixed bin (18), dimension (*) fixed bin (18), fixed bin, fixed bin (35));
  2   113 
  2   114 dcl (graphic_manipulator_$examine_symtab,
  2   115      graphic_manipulator_$esymtab,
  2   116      gm_$examine_symtab,
  2   117      gm_$esymtab) entry (fixed bin (18) dimension (*), fixed bin, fixed bin (35));
  2   118 
  2   119 dcl (graphic_manipulator_$examine_symbol,
  2   120      gm_$examine_symbol,
  2   121      graphic_manipulator_$esymbol,
  2   122      gm_$esymbol) entry (fixed bin (18), fixed bin (18), fixed bin, char (*), fixed bin (35));
  2   123 
  2   124 dcl (graphic_manipulator_$examine_text,
  2   125      gm_$examine_text,
  2   126      graphic_manipulator_$etext,
  2   127      gm_$etext) entry (fixed bin (18), fixed bin, fixed bin, char (*), fixed bin (35));
  2   128 
  2   129 dcl (graphic_manipulator_$examine_data,
  2   130      gm_$examine_data,
  2   131      graphic_manipulator_$edata,
  2   132      gm_$edata) entry (fixed bin (18), fixed bin, bit (*), fixed bin (35));
  2   133 
  2   134 dcl (graphic_manipulator_$get_struc,
  2   135      gm_$get_struc,
  2   136      graphic_manipulator_$gstruc,
  2   137      gm_$gstruc) entry (char (*), char (*), char (*), fixed bin, fixed bin (35));
  2   138 
  2   139 dcl (graphic_manipulator_$put_struc,
  2   140      gm_$put_struc,
  2   141      graphic_manipulator_$pstruc,
  2   142      gm_$pstruc) entry (char (*), char (*), char (*), fixed bin, fixed bin (35));
  2   143 
  2   144 dcl (graphic_manipulator_$save_file,
  2   145      gm_$save_file) entry (char (*), char (*), fixed bin (35));
  2   146 
  2   147 dcl (graphic_manipulator_$use_file,
  2   148      gm_$use_file) entry (char (*), char (*), fixed bin (35));
  2   149 
  2   150 /* **************** END INCLUDE FILE gm_entry_dcls.incl.pl1 **************** */
       45 
  3     1 /* *************** BEGIN INCLUDE FILE gc_entry_dcls.incl.pl1 *************** */
  3     2 
  3     3 dcl (graphic_compiler_$tree_ptr,
  3     4      gc_$tree_ptr) entry returns (pointer);
  3     5 
  3     6 dcl (graphic_compiler_$return_string,
  3     7      gc_$return_string,
  3     8      graphic_compiler_$rs,
  3     9      gc_$rs) entry (fixed bin (18), pointer, fixed bin, fixed bin (35));
  3    10 
  3    11 dcl (graphic_compiler_$display_append,
  3    12      gc_$display_append,
  3    13      graphic_compiler_$da,
  3    14      gc_$da) entry (fixed bin (18), fixed bin (35));
  3    15 
  3    16 dcl (graphic_compiler_$display_append_switch,
  3    17      gc_$display_append_switch,
  3    18      graphic_compiler_$da_switch,
  3    19      gc_$da_switch) entry (fixed bin (18), fixed bin (35), pointer);
  3    20 
  3    21 dcl (graphic_compiler_$display,
  3    22      gc_$display,
  3    23      graphic_compiler_$d,
  3    24      gc_$d) entry (fixed bin (18), fixed bin (35));
  3    25 
  3    26 dcl (graphic_compiler_$display_switch,
  3    27      gc_$display_switch,
  3    28      graphic_compiler_$d_switch,
  3    29      gc_$d_switch) entry (fixed bin (18), fixed bin (35), pointer);
  3    30 
  3    31 dcl (graphic_compiler_$load,
  3    32      gc_$load,
  3    33      graphic_compiler_$l,
  3    34      gc_$l) entry (fixed bin (18), fixed bin (35));
  3    35 
  3    36 dcl (graphic_compiler_$load_switch,
  3    37      gc_$load_switch,
  3    38      graphic_compiler_$l_switch,
  3    39      gc_$l_switch) entry (fixed bin (18), fixed bin (35), pointer);
  3    40 
  3    41 dcl (graphic_compiler_$display_name_append,
  3    42      gc_$display_name_append,
  3    43      graphic_compiler_$dna,
  3    44      gc_$dna) entry (char (*), fixed bin (35));
  3    45 
  3    46 dcl (graphic_compiler_$display_name_append_switch,
  3    47      gc_$display_name_append_switch,
  3    48      graphic_compiler_$dna_switch,
  3    49      gc_$dna_switch) entry (char (*), fixed bin (35), pointer);
  3    50 
  3    51 dcl (graphic_compiler_$display_name,
  3    52      gc_$display_name,
  3    53      graphic_compiler_$dn,
  3    54      gc_$dn) entry (char (*), fixed bin (35));
  3    55 
  3    56 dcl (graphic_compiler_$display_name_switch,
  3    57      gc_$display_name_switch,
  3    58      graphic_compiler_$dn_switch,
  3    59      gc_$dn_switch) entry (char (*), fixed bin (35), pointer);
  3    60 
  3    61 dcl (graphic_compiler_$load_name,
  3    62      gc_$load_name,
  3    63      graphic_compiler_$ln,
  3    64      gc_$ln) entry (char (*), fixed bin (35));
  3    65 
  3    66 dcl (graphic_compiler_$load_name_switch,
  3    67      gc_$load_name_switch,
  3    68      graphic_compiler_$ln_switch,
  3    69      gc_$ln_switch) entry (char (*), fixed bin (35), pointer);
  3    70 
  3    71 dcl (graphic_compiler_$prune_tree,
  3    72      gc_$prune_tree) entry (fixed bin (35));
  3    73 
  3    74 /* **************** END INCLUDE FILE gc_entry_dcls.incl.pl1 **************** */
       46 
       47 
       48 dcl (i, steps, switch)fixed bin,
       49     (oldx, oldy, relx, rely) float bin,
       50      code fixed bin (35),
       51      array (150) fixed bin (18),
       52      pi initial (3.14159265e0) float bin static,
       53      item_code initial (Vector) fixed bin;
       54 
       55 dcl  saved_linetype fixed bin static;
       56 
       57 dcl  graphic_error_table_$lsm_blk_len ext fixed bin (35) static;
       58 
       59 ginit_: ginit: entry;
       60 
       61 	erase_switch = "1"b;			/* subsequent calls to display will cause erase */
       62 
       63 grmv_: grmv: entry;
       64 
       65 	saved_linetype = Solid;
       66 
       67 	call graphic_manipulator_$init (code);		/* create working graphic segment */
       68 	if code ^= 0 then goto report_error;
       69 
       70 	call graphic_operator_$delete (0, code);
       71 	if code ^= 0 then goto report_error;
       72 
       73 create_dummy:
       74 	active_node = graphic_manipulator_$create_array ((0), 0, code);
       75 	if code ^= 0 then goto report_error;
       76 	main_node = graphic_manipulator_$create_array ((active_node), 1, code);
       77 	if code ^= 0 then goto report_error;
       78 	master_node = graphic_manipulator_$assign_name ("gui_display_list_", main_node, code);
       79 
       80 check_error:
       81 	if code = 0 then return;
       82 
       83 report_error:
       84 	call sub_err_ (code, "gui_", "c", null, 0, "Error in creating or appending to display list.");
       85 	return;
       86 
       87 
       88 
       89 gsps_: gsps: entry (x, y, z);
       90 
       91 dcl (x, y, z) fixed bin;
       92 
       93 	item_code = Setposition;			/* set position */
       94 make_item:
       95 	item_node = graphic_manipulator_$create_position (item_code, float (x), float (y), float (z), code);
       96 
       97 check_item_error:
       98 	if code ^= 0 then do;
       99 	     call sub_err_ (code, "gui_", "c", null, 0, "Error in appending item to display list.");
      100 
      101 	     return;
      102 
      103 	end;
      104 append_item:
      105 	call graphic_manipulator_$add_element (active_node, -1, item_node, code);
      106 	if code = 0 then return;
      107 
      108 	if code ^= graphic_error_table_$lsm_blk_len then goto report_error; /* too bad */
      109 
      110 /* we've overflowed one array, create another and forge on. */
      111 
      112 	arr (1) = graphic_manipulator_$create_mode (Linetype, saved_linetype, code); /* remember the pending linetype in the new array */
      113 	if code ^= 0 then goto report_error;
      114 
      115 	arr (2) = item_node;			/* try to insert the desired item again */
      116 
      117 	active_node = graphic_manipulator_$create_array (arr, 2, code); /* make a completely new array */
      118 	if code ^= 0 then goto report_error;
      119 
      120 	call graphic_manipulator_$add_element (main_node, -1, active_node, code); /* great, add it to main array */
      121 	if code ^= 0 then goto report_error;
      122 
      123 	return;
      124 
      125 
      126 gspt_: gspt: entry (x, y, z);
      127 
      128 	item_code = Setpoint;
      129 	goto make_item;
      130 
      131 
      132 gpnt_: gpnt: entry (x, y, z);
      133 
      134 	item_code = Point;
      135 	goto make_item;
      136 
      137 
      138 gvec_: gvec: entry (x, y, z);
      139 
      140 	item_code = Vector;
      141 	goto make_item;
      142 
      143 
      144 gsft_: gsft: entry (x, y, z);
      145 
      146 	item_code = Shift;
      147 	goto make_item;
      148 
      149 
      150 gdot_: gdot: entry (value);
      151 
      152 dcl  value fixed bin;
      153 
      154 	item_node = graphic_manipulator_$create_mode (Linetype, value, code);
      155 	saved_linetype = value;
      156 	goto comad1;
      157 
      158 
      159 
      160 gtxt_: gtxt: entry (cstring, alignment);
      161 
      162 dcl  cstring char (*),
      163      alignment fixed bin;
      164 
      165 	if cu_$arg_count () = 1 then al = 1;
      166 	else al = alignment;
      167 
      168 	len = length (cstring);
      169 
      170 make_text:
      171 	item_node = graphic_manipulator_$create_text (al, len, cstring, code);
      172 	goto check_item_error;
      173 
      174 
      175 gtxtf_: gtxtf: entry (cstring, n, alignment);
      176 
      177 dcl (n, al, len) fixed bin;
      178 
      179 dcl  cu_$arg_count ext entry returns (fixed bin);
      180 
      181 	if cu_$arg_count () = 2 then al = 1;
      182 	else al = alignment;
      183 	len = n;
      184 	goto make_text;
      185 
      186 
      187 gbox_: gbox: entry (dx1, dy1);
      188 
      189 	arr (1) = graphic_manipulator_$create_position (Vector, 0e0, float (dy1), 0e0, code);
      190 	arr (2) = graphic_manipulator_$create_position (Vector, float (dx1), 0e0, 0e0, code);
      191 	arr (3) = graphic_manipulator_$create_position (Vector, 0e0, float (-dy1), 0e0, code);
      192 	arr (4) = graphic_manipulator_$create_position (Vector, float (-dx1), 0e0, 0e0, code);
      193 	item_node = graphic_manipulator_$create_array (arr, 4, code);
      194 comad1:	call graphic_manipulator_$add_element (active_node, -1, item_node, code);
      195 	if code ^= 0 then goto report_error;
      196 	return;
      197 
      198 
      199 gcirc_: gcirc: entry (dx1, dy1);
      200 
      201 dcl (dx1, dy1) fixed bin;
      202 dcl (xx, yy) float bin;
      203 
      204 
      205 	switch = 0;				/* circle needs final vector to return to starting position */
      206 equin:	q = 2.e0;
      207 	dx = dx1;dy = dy1;
      208 arcin:	r = sqrt (float (dx*dx+dy*dy));
      209 	angle = acos_ (float (-dx)/r);		/* compute angle that a line from initial point */
      210 						/* to the center would make with the horizontal axis */
      211 	if dy > 0 then angle = -angle;
      212 	if switch = 1 then goto luprep;
      213 	steps = abs ((q/2.e0)* (10.e0 + r/10.e0))+3;	/* compute no. of vectors needed to complete circle */
      214 	delta = (q*pi)/steps;			/* compute portion of circle for ea. vector */
      215 luprep:	oldx = -dx;oldy = -dy;relx = 0;rely = 0;
      216 loop:	do i = 1 to steps ;
      217 	     angle = angle+delta;
      218 
      219 	     xx = r*cos (angle);
      220 	     yy = r*sin (angle);
      221 
      222 	     array (i) = graphic_manipulator_$create_position (item_code, xx - oldx, yy - oldy, 0e0, code);
      223 						/* put a vector in the display list */
      224 	     if code ^= 0 then do;
      225 		call sub_err_ (code, "gui_", "c", null, 0, "Error in creating circle/polygon");
      226 		return;
      227 	     end;
      228 
      229 
      230 	     relx = relx + xx - oldx;
      231 	     rely = rely + yy - oldy;
      232 	     oldx = xx;				/* update current position */
      233 	     oldy = yy;
      234 
      235 	end loop;
      236 	if switch >= 1 then do;
      237 	     item_node = graphic_manipulator_$create_array (array, steps, code);
      238 	     call graphic_manipulator_$add_element (active_node, -1, item_node, code);
      239 	     return;
      240 
      241 	end;
      242 finis_3d:	array (steps+1) = graphic_manipulator_$create_position (item_code, float (-relx), float (-rely), 0e0, code);
      243 	item_node = graphic_manipulator_$create_array (array, steps+1, code);
      244 	call graphic_manipulator_$add_element (active_node, -1, item_node, code);
      245 	return;
      246 
      247 
      248 
      249 garc_: garc: entry (q1, dx1, dy1);
      250 
      251 dcl  q1 float bin;
      252 
      253 	q = q1;dx = dx1;dy = dy1;
      254 	switch = 2;
      255 	goto arcin;
      256 
      257 
      258 geqs_: geqs: entry (ns, dx1, dy1);
      259 
      260 
      261 /* draw closed figure with ns sides whose center is dx1, */
      262 /* dy1, from the current position. */
      263 dcl  ns fixed bin;
      264 
      265 	switch = 1;
      266 	steps = ns;
      267 	delta = 2.e0*pi/steps;
      268 	goto equin;
      269 
      270 
      271 gdisp_: gdisp: entry;
      272 
      273 	if erase_switch then do;
      274 	     call graphic_compiler_$display (master_node, code);
      275 	end;
      276 
      277 	else call graphic_compiler_$display_append (active_node, code);
      278 
      279 	if code ^= 0 then goto report_error;
      280 	erase_switch = ""b;
      281 	active_node = graphic_manipulator_$create_array ((0), 0, code);
      282 	if code ^= 0 then goto report_error;
      283 	call graphic_manipulator_$add_element (main_node, -1, active_node, code);
      284 	if code ^= 0 then goto report_error;
      285 
      286 	return;
      287 
      288 
      289 geras_: geras: entry;
      290 
      291 	erase_switch = "1"b;
      292 	return;
      293 
      294 
      295      end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/18/82  1625.5  gui_.pl1                          >dumps>old>recomp>gui_.pl1
44           1    03/27/82  0439.2  graphic_etypes.incl.pl1           >ldd>include>graphic_etypes.incl.pl1
45           2    08/27/75  1700.7  gm_entry_dcls.incl.pl1            >ldd>include>gm_entry_dcls.incl.pl1
46           3    08/13/81  2035.4  gc_entry_dcls.incl.pl1            >ldd>include>gc_entry_dcls.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
Linetype                        000001 constant        fixed bin(17,0)          initial dcl 1-9 set ref 112* 154*
Point                                  constant        fixed bin(17,0)          initial dcl 1-9 ref 134
Setpoint                               constant        fixed bin(17,0)          initial dcl 1-9 ref 128
Setposition                            constant        fixed bin(17,0)          initial dcl 1-9 ref 93
Shift                                  constant        fixed bin(17,0)          initial dcl 1-9 ref 146
Solid                                  constant        fixed bin(17,0)          initial dcl 1-9 ref 65
Vector                          000013 constant        fixed bin(17,0)          initial dcl 1-9 set ref 48 140 189* 190* 191* 192*
abs                                                    builtin function         dcl 30 ref 213
acos_                           000020 constant        entry                    external dcl 30 ref 209
active_node                     000013 internal static fixed bin(18,0)          dcl 30 set ref 73* 76 104* 117* 120* 194* 238* 244*
                                                                                  277* 281* 283*
al                              000352 automatic       fixed bin(17,0)          dcl 177 set ref 165* 166* 170* 181* 182*
alignment                              parameter       fixed bin(17,0)          dcl 162 ref 160 160 166 175 175 182
angle                           000104 automatic       float bin(27)            dcl 30 set ref 209* 211* 211 217* 217 219 220
arr                             000107 automatic       fixed bin(18,0)          array dcl 30 set ref 112* 115* 117* 189* 190* 191*
                                                                                  192* 193*
array                           000123 automatic       fixed bin(18,0)          array dcl 48 set ref 222* 237* 242* 243*
code                            000122 automatic       fixed bin(35,0)          dcl 48 set ref 67* 68 70* 71 73* 75 76* 77 78* 80
                                                                                  83* 94* 97 99* 104* 106 108 112* 113 117* 118 120*
                                                                                  121 154* 170* 189* 190* 191* 192* 193* 194* 195
                                                                                  222* 224 225* 237* 238* 242* 243* 244* 274* 277*
                                                                                  279 281* 282 283* 284
cos                                                    builtin function         dcl 30 ref 219
cstring                                parameter       char                     unaligned dcl 162 set ref 160 160 168 170* 175 175
cu_$arg_count                   000050 constant        entry                    external dcl 179 ref 165 181
delta                           000105 automatic       float bin(27)            dcl 30 set ref 214* 217 267*
dx                              000101 automatic       fixed bin(17,0)          dcl 30 set ref 207* 208 208 209 215 253*
dx1                                    parameter       fixed bin(17,0)          dcl 201 ref 187 187 190 190 192 192 199 199 207 249
                                                                                  249 253 258 258
dy                              000102 automatic       fixed bin(17,0)          dcl 30 set ref 207* 208 208 211 215 253*
dy1                                    parameter       fixed bin(17,0)          dcl 201 ref 187 187 189 189 191 191 199 199 207 249
                                                                                  249 253 258 258
erase_switch                    000010 internal static bit(1)                   initial dcl 30 set ref 61* 273 280* 291*
float                                                  builtin function         dcl 30 ref 94 94 94 94 94 94 189 189 190 190 191 191
                                                                                  192 192 208 209 242 242 242 242
graphic_compiler_$display       000044 constant        entry                    external dcl 3-21 ref 274
graphic_compiler_$display_append
                                000042 constant        entry                    external dcl 3-11 ref 277
graphic_error_table_$lsm_blk_len
                                000046 external static fixed bin(35,0)          dcl 57 ref 108
graphic_manipulator_$add_element
                                000040 constant        entry                    external dcl 2-68 ref 104 120 194 238 244 283
graphic_manipulator_$assign_name
                                000036 constant        entry                    external dcl 2-60 ref 78
graphic_manipulator_$create_array
                                000034 constant        entry                    external dcl 2-55 ref 73 76 117 193 237 243 281
graphic_manipulator_$create_mode
                                000030 constant        entry                    external dcl 2-14 ref 112 154
graphic_manipulator_$create_position
                                000026 constant        entry                    external dcl 2-9 ref 94 189 190 191 192 222 242
graphic_manipulator_$create_text
                                000032 constant        entry                    external dcl 2-40 ref 170
graphic_manipulator_$init       000024 constant        entry                    external dcl 2-3 ref 67
graphic_operator_$delete        000022 constant        entry                    external dcl 42 ref 70
i                               000113 automatic       fixed bin(17,0)          dcl 48 set ref 216* 222*
item_code                       000351 automatic       fixed bin(17,0)          initial dcl 48 set ref 48* 93* 94* 128* 134* 140*
                                                                                  146* 222* 242*
item_node                       000100 automatic       fixed bin(18,0)          dcl 30 set ref 94* 104* 115 154* 170* 193* 194* 237*
                                                                                  238* 243* 244*
len                             000353 automatic       fixed bin(17,0)          dcl 177 set ref 168* 170* 183*
length                                                 builtin function         dcl 30 ref 168
main_node                       000012 internal static fixed bin(18,0)          dcl 30 set ref 76* 78* 120* 283*
master_node                     000011 internal static fixed bin(18,0)          dcl 30 set ref 78* 274*
n                                      parameter       fixed bin(17,0)          dcl 177 ref 175 175 183
ns                                     parameter       fixed bin(17,0)          dcl 263 ref 258 258 266
null                                                   builtin function         dcl 30 ref 83 83 99 99 225 225
oldx                            000116 automatic       float bin(27)            dcl 48 set ref 215* 222 230 232*
oldy                            000117 automatic       float bin(27)            dcl 48 set ref 215* 222 231 233*
pi                              000000 constant        float bin(27)            initial dcl 48 ref 214 267
q                               000103 automatic       float bin(27)            dcl 30 set ref 206* 213 214 253*
q1                                     parameter       float bin(27)            dcl 251 ref 249 249 253
r                               000106 automatic       float bin(27)            dcl 30 set ref 208* 209 213 219 220
relx                            000120 automatic       float bin(27)            dcl 48 set ref 215* 230* 230 242 242
rely                            000121 automatic       float bin(27)            dcl 48 set ref 215* 231* 231 242 242
saved_linetype                  000014 internal static fixed bin(17,0)          dcl 55 set ref 65* 112* 155*
sin                                                    builtin function         dcl 30 ref 220
sqrt                                                   builtin function         dcl 30 ref 208
steps                           000114 automatic       fixed bin(17,0)          dcl 48 set ref 213* 214 216 237* 242 243 266* 267
sub_err_                        000016 constant        entry                    external dcl 30 ref 83 99 225
switch                          000115 automatic       fixed bin(17,0)          dcl 48 set ref 205* 212 236 254* 265*
value                                  parameter       fixed bin(17,0)          dcl 152 set ref 150 150 154* 155
x                                      parameter       fixed bin(17,0)          dcl 91 ref 89 89 94 94 126 126 132 132 138 138 144
                                                                                  144
xx                              000354 automatic       float bin(27)            dcl 202 set ref 219* 222 230 232
y                                      parameter       fixed bin(17,0)          dcl 91 ref 89 89 94 94 126 126 132 132 138 138 144
                                                                                  144
yy                              000355 automatic       float bin(27)            dcl 202 set ref 220* 222 231 233
z                                      parameter       fixed bin(17,0)          dcl 91 ref 89 89 94 94 126 126 132 132 138 138 144
                                                                                  144

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
Any_device                             internal static fixed bin(17,0)          initial dcl 1-9
Array                                  internal static fixed bin(17,0)          initial dcl 1-9
Blink                                  internal static fixed bin(17,0)          initial dcl 1-9
Blinking                               internal static fixed bin(17,0)          initial dcl 1-9
Center                                 internal static fixed bin(17,0)          initial dcl 1-9
Clipping                               internal static fixed bin(17,0)          initial dcl 1-9
Color                                  internal static fixed bin(17,0)          initial dcl 1-9
Dash_dotted                            internal static fixed bin(17,0)          initial dcl 1-9
Dashed                                 internal static fixed bin(17,0)          initial dcl 1-9
Datablock                              internal static fixed bin(17,0)          initial dcl 1-9
Dotted                                 internal static fixed bin(17,0)          initial dcl 1-9
Full_intensity                         internal static fixed bin(17,0)          initial dcl 1-9
Half_intensity                         internal static fixed bin(17,0)          initial dcl 1-9
Insensitive                            internal static fixed bin(17,0)          initial dcl 1-9
Intensity                              internal static fixed bin(17,0)          initial dcl 1-9
Invisible                              internal static fixed bin(17,0)          initial dcl 1-9
Joystick                               internal static fixed bin(17,0)          initial dcl 1-9
Keyboard                               internal static fixed bin(17,0)          initial dcl 1-9
Left                                   internal static fixed bin(17,0)          initial dcl 1-9
Light_pen                              internal static fixed bin(17,0)          initial dcl 1-9
List                                   internal static fixed bin(17,0)          initial dcl 1-9
Long_dashed                            internal static fixed bin(17,0)          initial dcl 1-9
Lower_center                           internal static fixed bin(17,0)          initial dcl 1-9
Lower_left                             internal static fixed bin(17,0)          initial dcl 1-9
Lower_right                            internal static fixed bin(17,0)          initial dcl 1-9
Mouse                                  internal static fixed bin(17,0)          initial dcl 1-9
Null                                   internal static fixed bin(17,0)          initial dcl 1-9
On_dup_error                           internal static fixed bin(17,0)          initial dcl 1-9
On_dup_source                          internal static fixed bin(17,0)          initial dcl 1-9
On_dup_target_then_nulls               internal static fixed bin(17,0)          initial dcl 1-9
On_dup_target_then_source              internal static fixed bin(17,0)          initial dcl 1-9
Right                                  internal static fixed bin(17,0)          initial dcl 1-9
Rotation                               internal static fixed bin(17,0)          initial dcl 1-9
Scaling                                internal static fixed bin(17,0)          initial dcl 1-9
Sensitive                              internal static fixed bin(17,0)          initial dcl 1-9
Sensitivity                            internal static fixed bin(17,0)          initial dcl 1-9
Steady                                 internal static fixed bin(17,0)          initial dcl 1-9
Symbol                                 internal static fixed bin(17,0)          initial dcl 1-9
Tablet_and_pen                         internal static fixed bin(17,0)          initial dcl 1-9
Terminal_program                       internal static fixed bin(17,0)          initial dcl 1-9
Text                                   internal static fixed bin(17,0)          initial dcl 1-9
Trackball                              internal static fixed bin(17,0)          initial dcl 1-9
Upper_center                           internal static fixed bin(17,0)          initial dcl 1-9
Upper_left                             internal static fixed bin(17,0)          initial dcl 1-9
Upper_right                            internal static fixed bin(17,0)          initial dcl 1-9
gc_$d                           000000 constant        entry                    external dcl 3-21
gc_$d_switch                    000000 constant        entry                    external dcl 3-26
gc_$da                          000000 constant        entry                    external dcl 3-11
gc_$da_switch                   000000 constant        entry                    external dcl 3-16
gc_$display                     000000 constant        entry                    external dcl 3-21
gc_$display_append              000000 constant        entry                    external dcl 3-11
gc_$display_append_switch       000000 constant        entry                    external dcl 3-16
gc_$display_name                000000 constant        entry                    external dcl 3-51
gc_$display_name_append         000000 constant        entry                    external dcl 3-41
gc_$display_name_append_switch  000000 constant        entry                    external dcl 3-46
gc_$display_name_switch         000000 constant        entry                    external dcl 3-56
gc_$display_switch              000000 constant        entry                    external dcl 3-26
gc_$dn                          000000 constant        entry                    external dcl 3-51
gc_$dn_switch                   000000 constant        entry                    external dcl 3-56
gc_$dna                         000000 constant        entry                    external dcl 3-41
gc_$dna_switch                  000000 constant        entry                    external dcl 3-46
gc_$l                           000000 constant        entry                    external dcl 3-31
gc_$l_switch                    000000 constant        entry                    external dcl 3-36
gc_$ln                          000000 constant        entry                    external dcl 3-61
gc_$ln_switch                   000000 constant        entry                    external dcl 3-66
gc_$load                        000000 constant        entry                    external dcl 3-31
gc_$load_name                   000000 constant        entry                    external dcl 3-61
gc_$load_name_switch            000000 constant        entry                    external dcl 3-66
gc_$load_switch                 000000 constant        entry                    external dcl 3-36
gc_$prune_tree                  000000 constant        entry                    external dcl 3-71
gc_$return_string               000000 constant        entry                    external dcl 3-6
gc_$rs                          000000 constant        entry                    external dcl 3-6
gc_$tree_ptr                    000000 constant        entry                    external dcl 3-3
gm_$add_element                 000000 constant        entry                    external dcl 2-68
gm_$assign_name                 000000 constant        entry                    external dcl 2-60
gm_$carray                      000000 constant        entry                    external dcl 2-55
gm_$cclip                       000000 constant        entry                    external dcl 2-29
gm_$ccolor                      000000 constant        entry                    external dcl 2-35
gm_$cdata                       000000 constant        entry                    external dcl 2-45
gm_$clist                       000000 constant        entry                    external dcl 2-50
gm_$cmode                       000000 constant        entry                    external dcl 2-14
gm_$cpos                        000000 constant        entry                    external dcl 2-9
gm_$create_array                000000 constant        entry                    external dcl 2-55
gm_$create_clip                 000000 constant        entry                    external dcl 2-29
gm_$create_color                000000 constant        entry                    external dcl 2-35
gm_$create_data                 000000 constant        entry                    external dcl 2-45
gm_$create_list                 000000 constant        entry                    external dcl 2-50
gm_$create_mode                 000000 constant        entry                    external dcl 2-14
gm_$create_position             000000 constant        entry                    external dcl 2-9
gm_$create_rotation             000000 constant        entry                    external dcl 2-24
gm_$create_scale                000000 constant        entry                    external dcl 2-19
gm_$create_text                 000000 constant        entry                    external dcl 2-40
gm_$crot                        000000 constant        entry                    external dcl 2-24
gm_$cscale                      000000 constant        entry                    external dcl 2-19
gm_$ctext                       000000 constant        entry                    external dcl 2-40
gm_$ecolor                      000000 constant        entry                    external dcl 2-96
gm_$edata                       000000 constant        entry                    external dcl 2-129
gm_$elist                       000000 constant        entry                    external dcl 2-109
gm_$emap                        000000 constant        entry                    external dcl 2-101
gm_$emode                       000000 constant        entry                    external dcl 2-91
gm_$epos                        000000 constant        entry                    external dcl 2-86
gm_$esymbol                     000000 constant        entry                    external dcl 2-119
gm_$esymtab                     000000 constant        entry                    external dcl 2-114
gm_$etext                       000000 constant        entry                    external dcl 2-124
gm_$examine_color               000000 constant        entry                    external dcl 2-96
gm_$examine_contents            000000 constant        entry                    external dcl 2-106
gm_$examine_data                000000 constant        entry                    external dcl 2-129
gm_$examine_list                000000 constant        entry                    external dcl 2-109
gm_$examine_mapping             000000 constant        entry                    external dcl 2-101
gm_$examine_mode                000000 constant        entry                    external dcl 2-91
gm_$examine_position            000000 constant        entry                    external dcl 2-86
gm_$examine_symbol              000000 constant        entry                    external dcl 2-119
gm_$examine_symtab              000000 constant        entry                    external dcl 2-114
gm_$examine_text                000000 constant        entry                    external dcl 2-124
gm_$examine_type                000000 constant        entry                    external dcl 2-83
gm_$find_structure              000000 constant        entry                    external dcl 2-63
gm_$fstruc                      000000 constant        entry                    external dcl 2-63
gm_$get_struc                   000000 constant        entry                    external dcl 2-134
gm_$gstruc                      000000 constant        entry                    external dcl 2-134
gm_$init                        000000 constant        entry                    external dcl 2-3
gm_$pstruc                      000000 constant        entry                    external dcl 2-139
gm_$put_struc                   000000 constant        entry                    external dcl 2-139
gm_$remove_symbol               000000 constant        entry                    external dcl 2-77
gm_$replace_element             000000 constant        entry                    external dcl 2-71
gm_$replace_node                000000 constant        entry                    external dcl 2-74
gm_$replicate                   000000 constant        entry                    external dcl 2-80
gm_$save_file                   000000 constant        entry                    external dcl 2-144
gm_$segp                        000000 constant        entry                    external dcl 2-6
gm_$use_file                    000000 constant        entry                    external dcl 2-147
graphic_compiler_$d             000000 constant        entry                    external dcl 3-21
graphic_compiler_$d_switch      000000 constant        entry                    external dcl 3-26
graphic_compiler_$da            000000 constant        entry                    external dcl 3-11
graphic_compiler_$da_switch     000000 constant        entry                    external dcl 3-16
graphic_compiler_$display_append_switch
                                000000 constant        entry                    external dcl 3-16
graphic_compiler_$display_name  000000 constant        entry                    external dcl 3-51
graphic_compiler_$display_name_append
                                000000 constant        entry                    external dcl 3-41
graphic_compiler_$display_name_append_switch
                                000000 constant        entry                    external dcl 3-46
graphic_compiler_$display_name_switch
                                000000 constant        entry                    external dcl 3-56
graphic_compiler_$display_switch
                                000000 constant        entry                    external dcl 3-26
graphic_compiler_$dn            000000 constant        entry                    external dcl 3-51
graphic_compiler_$dn_switch     000000 constant        entry                    external dcl 3-56
graphic_compiler_$dna           000000 constant        entry                    external dcl 3-41
graphic_compiler_$dna_switch    000000 constant        entry                    external dcl 3-46
graphic_compiler_$l             000000 constant        entry                    external dcl 3-31
graphic_compiler_$l_switch      000000 constant        entry                    external dcl 3-36
graphic_compiler_$ln            000000 constant        entry                    external dcl 3-61
graphic_compiler_$ln_switch     000000 constant        entry                    external dcl 3-66
graphic_compiler_$load          000000 constant        entry                    external dcl 3-31
graphic_compiler_$load_name     000000 constant        entry                    external dcl 3-61
graphic_compiler_$load_name_switch
                                000000 constant        entry                    external dcl 3-66
graphic_compiler_$load_switch   000000 constant        entry                    external dcl 3-36
graphic_compiler_$prune_tree    000000 constant        entry                    external dcl 3-71
graphic_compiler_$return_string 000000 constant        entry                    external dcl 3-6
graphic_compiler_$rs            000000 constant        entry                    external dcl 3-6
graphic_compiler_$tree_ptr      000000 constant        entry                    external dcl 3-3
graphic_manipulator_$carray     000000 constant        entry                    external dcl 2-55
graphic_manipulator_$cclip      000000 constant        entry                    external dcl 2-29
graphic_manipulator_$ccolor     000000 constant        entry                    external dcl 2-35
graphic_manipulator_$cdata      000000 constant        entry                    external dcl 2-45
graphic_manipulator_$clist      000000 constant        entry                    external dcl 2-50
graphic_manipulator_$cmode      000000 constant        entry                    external dcl 2-14
graphic_manipulator_$cpos       000000 constant        entry                    external dcl 2-9
graphic_manipulator_$create_clip
                                000000 constant        entry                    external dcl 2-29
graphic_manipulator_$create_color
                                000000 constant        entry                    external dcl 2-35
graphic_manipulator_$create_data
                                000000 constant        entry                    external dcl 2-45
graphic_manipulator_$create_list
                                000000 constant        entry                    external dcl 2-50
graphic_manipulator_$create_rotation
                                000000 constant        entry                    external dcl 2-24
graphic_manipulator_$create_scale
                                000000 constant        entry                    external dcl 2-19
graphic_manipulator_$crot       000000 constant        entry                    external dcl 2-24
graphic_manipulator_$cscale     000000 constant        entry                    external dcl 2-19
graphic_manipulator_$ctext      000000 constant        entry                    external dcl 2-40
graphic_manipulator_$ecolor     000000 constant        entry                    external dcl 2-96
graphic_manipulator_$edata      000000 constant        entry                    external dcl 2-129
graphic_manipulator_$elist      000000 constant        entry                    external dcl 2-109
graphic_manipulator_$emap       000000 constant        entry                    external dcl 2-101
graphic_manipulator_$emode      000000 constant        entry                    external dcl 2-91
graphic_manipulator_$epos       000000 constant        entry                    external dcl 2-86
graphic_manipulator_$esymbol    000000 constant        entry                    external dcl 2-119
graphic_manipulator_$esymtab    000000 constant        entry                    external dcl 2-114
graphic_manipulator_$etext      000000 constant        entry                    external dcl 2-124
graphic_manipulator_$examine_color
                                000000 constant        entry                    external dcl 2-96
graphic_manipulator_$examine_contents
                                000000 constant        entry                    external dcl 2-106
graphic_manipulator_$examine_data
                                000000 constant        entry                    external dcl 2-129
graphic_manipulator_$examine_list
                                000000 constant        entry                    external dcl 2-109
graphic_manipulator_$examine_mapping
                                000000 constant        entry                    external dcl 2-101
graphic_manipulator_$examine_mode
                                000000 constant        entry                    external dcl 2-91
graphic_manipulator_$examine_position
                                000000 constant        entry                    external dcl 2-86
graphic_manipulator_$examine_symbol
                                000000 constant        entry                    external dcl 2-119
graphic_manipulator_$examine_symtab
                                000000 constant        entry                    external dcl 2-114
graphic_manipulator_$examine_text
                                000000 constant        entry                    external dcl 2-124
graphic_manipulator_$examine_type
                                000000 constant        entry                    external dcl 2-83
graphic_manipulator_$find_structure
                                000000 constant        entry                    external dcl 2-63
graphic_manipulator_$fstruc     000000 constant        entry                    external dcl 2-63
graphic_manipulator_$get_struc  000000 constant        entry                    external dcl 2-134
graphic_manipulator_$gstruc     000000 constant        entry                    external dcl 2-134
graphic_manipulator_$pstruc     000000 constant        entry                    external dcl 2-139
graphic_manipulator_$put_struc  000000 constant        entry                    external dcl 2-139
graphic_manipulator_$remove_symbol
                                000000 constant        entry                    external dcl 2-77
graphic_manipulator_$replace_element
                                000000 constant        entry                    external dcl 2-71
graphic_manipulator_$replace_node
                                000000 constant        entry                    external dcl 2-74
graphic_manipulator_$replicate  000000 constant        entry                    external dcl 2-80
graphic_manipulator_$save_file  000000 constant        entry                    external dcl 2-144
graphic_manipulator_$segp       000000 constant        entry                    external dcl 2-6
graphic_manipulator_$use_file   000000 constant        entry                    external dcl 2-147

NAMES DECLARED BY EXPLICIT CONTEXT.
append_item                     000547 constant        label                    dcl 104
arcin                           001572 constant        label                    dcl 208 ref 255
check_error                     000343 constant        label                    dcl 80
check_item_error                000475 constant        label                    dcl 97 ref 172
comad1                          001506 constant        label                    dcl 194 ref 156
create_dummy                    000207 constant        label                    dcl 73
equin                           001564 constant        label                    dcl 206 ref 268
finis_3d                        002105 constant        label                    dcl 242
garc                            002213 constant        entry                    external dcl 249
garc_                           002231 constant        entry                    external dcl 249
gbox                            001270 constant        entry                    external dcl 187
gbox_                           001306 constant        entry                    external dcl 187
gcirc                           001532 constant        entry                    external dcl 199
gcirc_                          001550 constant        entry                    external dcl 199
gdisp                           002326 constant        entry                    external dcl 271
gdisp_                          002336 constant        entry                    external dcl 271
gdot                            001011 constant        entry                    external dcl 150
gdot_                           001022 constant        entry                    external dcl 150
geqs                            002260 constant        entry                    external dcl 258
geqs_                           002276 constant        entry                    external dcl 258
geras                           002457 constant        entry                    external dcl 289
geras_                          002467 constant        entry                    external dcl 289
ginit                           000117 constant        entry                    external dcl 59
ginit_                          000127 constant        entry                    external dcl 59
gpnt                            000714 constant        entry                    external dcl 132
gpnt_                           000725 constant        entry                    external dcl 132
grmv                            000142 constant        entry                    external dcl 63
grmv_                           000152 constant        entry                    external dcl 63
gsft                            000764 constant        entry                    external dcl 144
gsft_                           000775 constant        entry                    external dcl 144
gsps                            000421 constant        entry                    external dcl 89
gsps_                           000432 constant        entry                    external dcl 89
gspt                            000670 constant        entry                    external dcl 126
gspt_                           000701 constant        entry                    external dcl 126
gtxt                            001057 constant        entry                    external dcl 160
gtxt_                           001101 constant        entry                    external dcl 160
gtxtf                           001200 constant        entry                    external dcl 175
gtxtf_                          001222 constant        entry                    external dcl 175
gui_                            000107 constant        entry                    external dcl 18
gvec                            000740 constant        entry                    external dcl 138
gvec_                           000751 constant        entry                    external dcl 138
loop                            001670 constant        label                    dcl 216
luprep                          001657 constant        label                    dcl 215 ref 212
make_item                       000442 constant        label                    dcl 94 ref 129 135 141 147
make_text                       001141 constant        label                    dcl 170 ref 184
report_error                    000345 constant        label                    dcl 83 ref 68 71 75 77 108 113 118 121 195 279 282
                                                                                  284

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      3136        3210    2501        3146
Length      3546    2501        52         322     435           6

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gui_                                340 external procedure  is an external procedure.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 erase_switch                gui_
000011 master_node                 gui_
000012 main_node                   gui_
000013 active_node                 gui_
000014 saved_linetype              gui_

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gui_                     000100 item_node                   gui_
                         000101 dx                          gui_
                         000102 dy                          gui_
                         000103 q                           gui_
                         000104 angle                       gui_
                         000105 delta                       gui_
                         000106 r                           gui_
                         000107 arr                         gui_
                         000113 i                           gui_
                         000114 steps                       gui_
                         000115 switch                      gui_
                         000116 oldx                        gui_
                         000117 oldy                        gui_
                         000120 relx                        gui_
                         000121 rely                        gui_
                         000122 code                        gui_
                         000123 array                       gui_
                         000351 item_code                   gui_
                         000352 al                          gui_
                         000353 len                         gui_
                         000354 xx                          gui_
                         000355 yy                          gui_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
fx1_to_fl2          call_ext_out_desc   call_ext_out        return              fl2_to_fx1          ext_entry
ext_entry_desc      sin                 cos                 dsqrt

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
acos_                         cu_$arg_count                 graphic_compiler_$display
graphic_compiler_$display_append                            graphic_manipulator_$add_element
graphic_manipulator_$assign_name                            graphic_manipulator_$create_array
graphic_manipulator_$create_mode                            graphic_manipulator_$create_position
graphic_manipulator_$create_text                            graphic_manipulator_$init     graphic_operator_$delete
sub_err_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
graphic_error_table_$lsm_blk_len




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     48 000102        18 000106        19 000115        59 000116        61 000135        63 000140        65 000160
     67 000163        68 000171        70 000173        71 000205        73 000207        75 000245        76 000247
     77 000307        78 000311        80 000343        83 000345        85 000414        89 000415        93 000440
     94 000442        97 000475        99 000477       101 000546       104 000547       106 000566       108 000570
    112 000573       113 000607       115 000611       117 000613       118 000642       120 000644       121 000663
    123 000665       126 000666       128 000707       129 000711       132 000712       134 000733       135 000735
    138 000736       140 000757       141 000761       144 000762       146 001003       147 001005       150 001006
    154 001030       155 001046       156 001052       160 001053       165 001120       166 001135       168 001137
    170 001141       172 001173       175 001174       181 001241       182 001256       183 001260       184 001263
    187 001264       189 001321       190 001351       191 001400       192 001430       193 001457       194 001506
    195 001525       196 001527       199 001530       205 001563       206 001564       207 001566       207 001570
    208 001572       209 001607       211 001625       212 001632       213 001635       214 001651       215 001657
    215 001662       215 001665       215 001667       216 001670       217 001677       219 001702       220 001706
    222 001713       224 001745       225 001747       226 002016       230 002017       231 002023       232 002027
    233 002031       235 002033       236 002035       237 002040       238 002065       239 002104       242 002105
    243 002137       244 002167       245 002206       249 002207       253 002244       253 002247       253 002251
    254 002253       255 002255       258 002256       265 002311       266 002313       267 002316       268 002324
    271 002325       273 002344       274 002347       275 002357       277 002360       279 002370       280 002372
    281 002374       282 002432       283 002434       284 002453       286 002455       289 002456       291 002475
    292 002500


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
