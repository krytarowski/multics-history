	COMPILATION LISTING OF SEGMENT convert_old_basic_file
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/18/82  1703.4 mst Thu
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 convert_old_basic_file:  proc;
       12 
       13 /* This command converts and old format basic file to vfile_ format */
       14 /* coded 2/76 by M. Weaver */
       15 
       16 dcl arg char(alng) based(aptr);
       17 dcl dirname char(168);
       18 dcl entname char(32);
       19 dcl me char(22) aligned init("convert_old_basic_file");
       20 
       21 dcl alng fixed bin;
       22 dcl code fixed bin(35);
       23 dcl error_table_$not_done fixed bin(35) ext;
       24 dcl aptr ptr;
       25 
       26 dcl addr builtin;
       27 dcl cu_$arg_ptr entry (fixed bin, ptr, fixed bin, fixed bin(35));
       28 dcl expand_path_ entry (ptr, fixed bin, ptr, ptr, fixed bin(35));
       29 dcl convert_old_basic_file_ entry (char(*), char(*), fixed bin(35));
       30 dcl (com_err_, ioa_) entry options(variable);
       31 
       32 
       33 
       34 	call cu_$arg_ptr (1,  aptr, alng, code);	/* pick up pathname of original file */
       35 	if code ^= 0 then do;
       36 	     call com_err_ (code, me);
       37 	     return;
       38 	end;
       39 
       40 	call expand_path_ (aptr, alng, addr(dirname), addr(entname), code);
       41 	if code ^= 0 then do;
       42 error:	     call com_err_ (code, me, arg);
       43 	     return;
       44 	     end;
       45 
       46 	call convert_old_basic_file_ (dirname, entname, code);
       47 	if code ^= 0 then do;		/* file wasn't converted */
       48 	     if code = error_table_$not_done
       49 	     then call ioa_ ("File ^a did not need converting", arg);
       50 	     else goto error;
       51 	end;
       52 
       53 	return;
       54 	end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/18/82  1630.2  convert_old_basic_file.pl1        >dumps>old>recomp>convert_old_basic_file.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 26 ref 40 40 40 40
alng                            000170 automatic       fixed bin(17,0)          dcl 21 set ref 34* 40* 42 42 48 48
aptr                            000172 automatic       pointer                  dcl 24 set ref 34* 40* 42 48
arg                                    based           char                     unaligned dcl 16 set ref 42* 48*
code                            000171 automatic       fixed bin(35,0)          dcl 22 set ref 34* 35 36* 40* 41 42* 46* 47 48
com_err_                        000020 constant        entry                    external dcl 30 ref 36 42
convert_old_basic_file_         000016 constant        entry                    external dcl 29 ref 46
cu_$arg_ptr                     000012 constant        entry                    external dcl 27 ref 34
dirname                         000100 automatic       char(168)                unaligned dcl 17 set ref 40 40 46*
entname                         000152 automatic       char(32)                 unaligned dcl 18 set ref 40 40 46*
error_table_$not_done           000010 external static fixed bin(35,0)          dcl 23 ref 48
expand_path_                    000014 constant        entry                    external dcl 28 ref 40
ioa_                            000022 constant        entry                    external dcl 30 ref 48
me                              000162 automatic       char(22)                 initial dcl 19 set ref 19* 36* 42*

NAMES DECLARED BY EXPLICIT CONTEXT.
convert_old_basic_file          000025 constant        entry                    external dcl 11
error                           000123 constant        label                    dcl 42 ref 48

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       324         350     221         334
Length       526     221        24         142     102           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
convert_old_basic_file              166 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
convert_old_basic_file   000100 dirname                     convert_old_basic_file
                         000152 entname                     convert_old_basic_file
                         000162 me                          convert_old_basic_file
                         000170 alng                        convert_old_basic_file
                         000171 code                        convert_old_basic_file
                         000172 aptr                        convert_old_basic_file

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      convert_old_basic_file_       cu_$arg_ptr                   expand_path_
ioa_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$not_done




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000024        19 000032        34 000040        35 000056        36 000060        37 000075        40 000076
     41 000121        42 000123        43 000147        46 000150        47 000171        48 000173        53 000220


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
