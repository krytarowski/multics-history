	COMPILATION LISTING OF SEGMENT linus_query
	Compiled by: Multics PL/I Compiler, Release 33e, of October 6, 1992
	Compiled at: CGI                             
	Compiled on: 2000-04-18_1113.33_Tue_mdt
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 
        7 linus_query:
        8 	proc (lcb_ptr_parm, answer_parm, question_parm);
        9 	
       10 /*
       11*     
       12*     This module provides an interface to the command_query subroutine
       13*     It handles most of the setup work for its callers. The following external
       14*     entry points are available:
       15*
       16*     linus_query - general question and answer entry
       17*     linus_query$yes_no - allows only a yes or no response
       18**/
       19 
       20 /*
       21*
       22*     Known Bugs:
       23*
       24*     Other Problems:
       25*
       26*     History:
       27*
       28*     Written - 82/01/10 - Dave Schimke
       29*
       30*
       31**/
       32 
       33 	dcl answer_parm char(*) var parm;		/* output: user's response */
       34           dcl lcb_ptr_parm ptr parm;			/* input: ptr to linus control block */
       35 	dcl question_parm char(*) var parm;		/* input: prompt */
       36 	dcl yes_no_parm bit (1) aligned parm;		/* output: yes or no flag */
       37 	
       38 /* This entry is the basic question/answer mode. */
       39 
       40 	answer_parm = "";
       41 	lcb_ptr = lcb_ptr_parm;
       42 	question = question_parm;
       43 	
       44 	query_information.switches.yes_or_no_sw = "0"b;
       45 	call query;
       46 	answer_parm = answer;
       47 	return;
       48 
       49 yes_no:	entry (lcb_ptr_parm, yes_no_parm, question_parm);
       50 
       51 /* This entrypoint accepts only a yes or no response and returns a flag
       52*   (yes_no_parm) where "1"b equals yes and "0"b equals no. */
       53 
       54 	yes_no_parm = "0"b;
       55 	lcb_ptr = lcb_ptr_parm;
       56 	question = question_parm;
       57 
       58 	query_information.switches.yes_or_no_sw = "1"b;
       59 	call query;
       60 
       61 	if substr (answer, 1, 1) = "y"
       62 	     then yes_no_parm = "1"b;
       63 
       64 	return;
       65 
       66 query:	proc;
       67 	query_information.version = query_info_version_5;
       68 	query_information.switches.suppress_name_sw = "1"b;
       69 	query_information.switches.cp_escape_control = "00"b;
       70 	query_information.switches.suppress_spacing = "1"b;
       71 	query_information.switches.padding = "0"b;
       72 	query_information.status_code = 0;
       73 	query_information.query_code = 0;
       74 	query_information.question_iocbp = iox_$user_output;
       75 	query_information.answer_iocbp = iox_$user_input;
       76 	query_information.repeat_time = 0;
       77 	query_information.explanation_ptr = null();
       78 	query_information.explanation_len = 0;
       79 
       80 /************************************************************************/
       81 /* Code added to insure upward compatibility with pre_ssu_linus invoke. */
       82 /* This can be removed if and when invoke is completely removed.        */
       83 
       84 /* If attached though invoke then get input from terminal regardless.   */
       85 	if lcb.is_ptr ^= iox_$user_input
       86 	     then query_information.answer_iocbp = iox_$user_io;
       87 /*                                                                      */
       88 /************************************************************************/
       89 
       90 	
       91 call command_query_ (addr(query_information), answer, "linus_query", (question));
       92 
       93 return;
       94 end;
       95 
  1     1 /* BEGIN INCLUDE FILE ..... iocb.incl.pl1 ..... 13 Feb 1975, M. Asherman */
  1     2 /* Modified 11/29/82 by S. Krupp to add new entries and to change
  1     3*      version number to IOX2. */
  1     4 /* format: style2 */
  1     5 
  1     6      dcl	   1 iocb		      aligned based,	/* I/O control block. */
  1     7 	     2 version	      character (4) aligned,	/* IOX2 */
  1     8 	     2 name	      char (32),		/* I/O name of this block. */
  1     9 	     2 actual_iocb_ptr    ptr,		/* IOCB ultimately SYNed to. */
  1    10 	     2 attach_descrip_ptr ptr,		/* Ptr to printable attach description. */
  1    11 	     2 attach_data_ptr    ptr,		/* Ptr to attach data structure. */
  1    12 	     2 open_descrip_ptr   ptr,		/* Ptr to printable open description. */
  1    13 	     2 open_data_ptr      ptr,		/* Ptr to open data structure (old SDB). */
  1    14 	     2 reserved	      bit (72),		/* Reserved for future use. */
  1    15 	     2 detach_iocb	      entry (ptr, fixed (35)),/* detach_iocb(p,s) */
  1    16 	     2 open	      entry (ptr, fixed, bit (1) aligned, fixed (35)),
  1    17 						/* open(p,mode,not_used,s) */
  1    18 	     2 close	      entry (ptr, fixed (35)),/* close(p,s) */
  1    19 	     2 get_line	      entry (ptr, ptr, fixed (21), fixed (21), fixed (35)),
  1    20 						/* get_line(p,bufptr,buflen,actlen,s) */
  1    21 	     2 get_chars	      entry (ptr, ptr, fixed (21), fixed (21), fixed (35)),
  1    22 						/* get_chars(p,bufptr,buflen,actlen,s) */
  1    23 	     2 put_chars	      entry (ptr, ptr, fixed (21), fixed (35)),
  1    24 						/* put_chars(p,bufptr,buflen,s) */
  1    25 	     2 modes	      entry (ptr, char (*), char (*), fixed (35)),
  1    26 						/* modes(p,newmode,oldmode,s) */
  1    27 	     2 position	      entry (ptr, fixed, fixed (21), fixed (35)),
  1    28 						/* position(p,u1,u2,s) */
  1    29 	     2 control	      entry (ptr, char (*), ptr, fixed (35)),
  1    30 						/* control(p,order,infptr,s) */
  1    31 	     2 read_record	      entry (ptr, ptr, fixed (21), fixed (21), fixed (35)),
  1    32 						/* read_record(p,bufptr,buflen,actlen,s) */
  1    33 	     2 write_record	      entry (ptr, ptr, fixed (21), fixed (35)),
  1    34 						/* write_record(p,bufptr,buflen,s) */
  1    35 	     2 rewrite_record     entry (ptr, ptr, fixed (21), fixed (35)),
  1    36 						/* rewrite_record(p,bufptr,buflen,s) */
  1    37 	     2 delete_record      entry (ptr, fixed (35)),/* delete_record(p,s) */
  1    38 	     2 seek_key	      entry (ptr, char (256) varying, fixed (21), fixed (35)),
  1    39 						/* seek_key(p,key,len,s) */
  1    40 	     2 read_key	      entry (ptr, char (256) varying, fixed (21), fixed (35)),
  1    41 						/* read_key(p,key,len,s) */
  1    42 	     2 read_length	      entry (ptr, fixed (21), fixed (35)),
  1    43 						/* read_length(p,len,s) */
  1    44 	     2 open_file	      entry (ptr, fixed bin, char (*), bit (1) aligned, fixed bin (35)),
  1    45 						/* open_file(p,mode,desc,not_used,s) */
  1    46 	     2 close_file	      entry (ptr, char (*), fixed bin (35)),
  1    47 						/* close_file(p,desc,s) */
  1    48 	     2 detach	      entry (ptr, char (*), fixed bin (35));
  1    49 						/* detach(p,desc,s) */
  1    50 
  1    51      declare iox_$iocb_version_sentinel
  1    52 			      character (4) aligned external static;
  1    53 
  1    54 /* END INCLUDE FILE ..... iocb.incl.pl1 ..... */
       96 
       97 
  2     1 /* BEGIN INCLUDE FILE linus_lcb.incl.pl1 -- jaw 8/30/77 */
  2     2    
  2     3 
  2     4 
  2     5 /****^  HISTORY COMMENTS:
  2     6*  1) change(86-04-23,Dupuis), approve(86-05-23,MCR7188), audit(86-07-23,GWMay),
  2     7*     install(86-07-29,MR12.0-1106):
  2     8*     Added general_work_area_ptr and renamed sfr_ptr to
  2     9*     force_retrieve_scope_ptr.
  2    10*                                                   END HISTORY COMMENTS */
  2    11 
  2    12 
  2    13 /* HISTORY:
  2    14*
  2    15*   78-09-29 J. C. C. Jagernauth: Modified for MR7.0.
  2    16*
  2    17*   81-05-11  Rickie E.  Brinegar: added security bit and andministrator bit as
  2    18*   a part of the attribute level control work.
  2    19*   
  2    20*   81-06-17  Rickie E.  Brinegar: deleted the sd_ptr as a part of removing the
  2    21*   scope_data  structure  from  LINUS.   LINUS now depends totally on MRDS for
  2    22*   scope information.
  2    23*   
  2    24*   81-11-11  Rickie  E.   Brinegar:  added the timing bit and three fields for
  2    25*   retaining  various  vcpu  times  to  be collected when in timing mode.  The
  2    26*   times  to  be collected are: LINUS parsing time, LINUS processing time, and
  2    27*   MRDS processing time.
  2    28*
  2    29*   82-01-15  DJ  Schimke:  Added the build_increment and build_start fields as
  2    30*   part of the line numbering implementation.  This allows for possible  later
  2    31*   LINUS control of the build defaults.
  2    32* 
  2    33*   82-03-01 Paul W. Benjamin: Removed linus_prompt_chars_ptr, as that 
  2    34*   information is now retained by ssu_.  Removed parse_timer as no longer
  2    35*   meaningful.  Added linus_version.  Added iteration bit.  Added 6 entry 
  2    36*   variables for ssu_ replaceable procedures.  Added actual_input_iocbp.
  2    37*
  2    38*   82-06-23 Al Dupuis: Added subsystem_control_info_ptr, 
  2    39*   subsystem_invocation_level, and selection_expression_identifier.
  2    40*
  2    41*   82-08-26 DJ Schimke: Added report_control_info_ptr, and
  2    42*   table_control_info_ptr. 
  2    43*
  2    44*   82-10-19 DJ Schimke: Added ssu_abort_line.
  2    45*
  2    46*   83-06-06 Bert Moberg: Added print_search_order (pso) and no_optimize (no_ot)
  2    47*
  2    48*   83-04-07 DJ Schimke: Added temp_seg_info_ptr.
  2    49*
  2    50*   83-08-26 Al Dupuis: Added query_temp_segment_ptr.
  2    51**/
  2    52     
  2    53 dcl 1 lcb aligned based (lcb_ptr),			/* LINUS control block */
  2    54     2 db_index fixed bin (35),			/* index of open data base, or 0 */
  2    55     2 rb_len fixed bin (21),				/* length of request buffer */
  2    56     2 lila_count fixed bin (35),			/* number of LILA text lines */
  2    57     2 lila_chars fixed bin (35),			/* number of LILA source test chars */
  2    58     2 trans_id fixed bin (35),			/* used by checkpoint and rollback facilities (MR7.0) */
  2    59     2 lila_fn char (32) unal,				/* entry name of lila data file */
  2    60     2 prompt_flag bit (1) unal,			/* on if in prompt mode */
  2    61     2 test_flag bit (1) unal,				/* on if in test mode */
  2    62     2 new_version bit (1) unal init (1),		/* on for new version data base (MR7.0) */
  2    63     2 secured_db bit (1) unal,                              /* on if the db is in a secure state */
  2    64     2 administrator bit (1) unal,                           /* on if the user is a db administrator */
  2    65     2 timing_mode bit (1) unal,                             /* on if timing is to be done */
  2    66     2 iteration bit (1) unal,				/* interpret parens as iteration sets */
  2    67     2 pso_flag bit (1) unal,				/* add print_search_order to select */
  2    68     2 no_ot_flag bit (1) unal,			/* add no_optimize to select */
  2    69     2 reserved bit (27) unal,
  2    70     2 liocb_ptr ptr,				/* iocb ptr for lila file */
  2    71     2 rb_ptr ptr,					/* ptr to request buffer */
  2    72     2 is_ptr ptr,					/* iocb ptr for currentinput stream switch */
  2    73     2 cal_ptr ptr,					/* ptr to current arg list for invoke (or null) */
  2    74     2 ttn_ptr ptr,					/* pointer to table info structure */
  2    75     2 force_retrieve_scope_info_ptr ptr,		/* structure pointer to force retrieve scope operation */
  2    76     2 lv_ptr ptr,					/* pointer linus variables */
  2    77     2 si_ptr ptr,					/* pointer to select_info structure */
  2    78     2 setfi_ptr ptr,				/* pointer to set function information */
  2    79     2 sclfi_ptr ptr,				/* pointer to user declared scalar fun. names */
  2    80     2 ivs_ptr ptr,					/* pointer to stack of invoke iocb pointers */
  2    81     2 lit_ptr ptr,					/* pointer to literal pool */
  2    82     2 lvv_ptr ptr,					/* pointer to linus variable alloc. pool  */
  2    83     2 rd_ptr ptr,					/* point to readied files mode information (MR7.0) */
  2    84     2 rt_ptr ptr,                                           /* point to table of relation names and their readied modes
  2    85*                                                               (MR7.0) */
  2    86     2 actual_input_iocbp ptr,				/* ptr to input while in macros */
  2    87     2 lila_promp_chars_ptr ptr,			/* pointer to the prompt characters for lila */
  2    88     2 linus_area_ptr ptr,				/* LINUS temporary segment pointer */
  2    89     2 lila_area_ptr ptr,				/* LILA temporary segment pointer */
  2    90     2 i_o_area_ptr ptr,				/* temporary segment pointer used by write, print, create_list */
  2    91     2 rel_array_ptr ptr,                                    /* ptr to array of names rslt info structure
  2    92*                                                               for current lila expression */
  2    93     2 unused_timer float bin (63),			/* future expansion */
  2    94     2 request_time float bin (63),                          /* How much request time was spent
  2    95*                                                                in LINUS. (-1 = user has just enabled 
  2    96*						    timing, do not report) */
  2    97     2 mrds_time float bin (63),                             /* How much time was spent in MRDS */
  2    98     2 build_increment fixed bin,			/* default increment for build mode */
  2    99     2 build_start fixed bin,				/* default start count for build mode */
  2   100     2 linus_version char (4),				/* current version of LINUS */
  2   101     2 subsystem_control_info_ptr ptr,                       /* the same ptr passed by ssu_ to each request procedure */
  2   102     2 subsystem_invocation_level fixed bin,                 /* identifies this invocation of LINUS */
  2   103     2 selection_expression_identifier fixed bin,            /* identifies the current processed selection expression */
  2   104     2 report_control_info_ptr ptr,			/* pointer to linus_report_control_info structure */
  2   105     2 table_control_info_ptr ptr,			/* pointer to linus_table control structure */
  2   106     2 temp_seg_info_ptr ptr,				/* pointer to linus_temp_seg_mgr control structure */
  2   107     2 query_temp_segment_ptr ptr,			/* points to temp seg used for manipulating query */
  2   108     2 general_work_area_ptr ptr,			/* a freeing area for general use */
  2   109     2 word_pad (6) bit (36) unal,
  2   110 						/* procedures that will be optionally */
  2   111 						/* replaced by the user.  Saved so they */
  2   112 						/* can be reinstated if desired. */
  2   113     2 ssu_abort_line entry options (variable),
  2   114     2 ssu_post_request_line variable entry (ptr),
  2   115     2 ssu_pre_request_line variable entry (ptr),
  2   116 
  2   117     2 curr_lit_offset fixed bin (35),			/* index of first free bit in lit. pool */
  2   118     2 curr_lv_val_offset fixed bin (35),		/* index of first free bit lv. val. pool */
  2   119     2 static_area area (sys_info$max_seg_size - fixed (rel (addr (lcb.static_area))) + 1);
  2   120 
  2   121 dcl  lcb_ptr ptr;
  2   122 
  2   123 /* END INCLUDE FILE linus_lcb.incl.pl1 */
       98 
       99 
  3     1 /*	BEGIN INCLUDE FILE query_info.incl.pl1		TAC June 1, 1973 */
  3     2 /*        Renamed to query_info.incl.pl1 and cp_escape_control added, 08/10/78 WOS */
  3     3 /*	version number changed to 4, 08/10/78 WOS */
  3     4 /* Version 5 adds explanation_(ptr len) 05/08/81 S. Herbst */
  3     5 /* Version 6 adds literal_sw, prompt_after_explanation switch 12/15/82 S. Herbst */
  3     6 
  3     7 dcl 1 query_info aligned,				/* argument structure for command_query_ call */
  3     8     2 version fixed bin,				/* version of this structure - must be set, see below */
  3     9     2 switches aligned,                                     /* various bit switch values */
  3    10       3 yes_or_no_sw bit (1) unaligned init ("0"b),		/* not a yes-or-no question, by default */
  3    11       3 suppress_name_sw bit (1) unaligned init ("0"b),	/* do not suppress command name */
  3    12       3 cp_escape_control bit (2) unaligned init ("00"b),   /* obey static default value */
  3    13                                                             /* "01" -> invalid, "10" -> don't allow, "11" -> allow */
  3    14       3 suppress_spacing bit (1) unaligned init ("0"b),     /* whether to print extra spacing */
  3    15       3 literal_sw bit (1) unaligned init ("0"b),		/* ON => do not strip leading/trailing white space */
  3    16       3 prompt_after_explanation bit (1) unaligned init ("0"b),  /* ON => repeat question after explanation */
  3    17       3 padding bit (29) unaligned init (""b),		/* pads it out to t word */
  3    18     2 status_code fixed bin (35) init (0),		/* query not prompted by any error, by default */
  3    19     2 query_code fixed bin (35) init (0),		/* currently has no meaning */
  3    20 
  3    21 /*  Limit of data defined for version 2 */
  3    22 
  3    23     2 question_iocbp ptr init (null ()),		/* IO switch to write question */
  3    24     2 answer_iocbp ptr init (null ()),			/* IO switch to read answer */
  3    25     2 repeat_time fixed bin (71) init (0),		/* repeat question every N seconds if no answer */
  3    26 						/* minimum of 30 seconds required for repeat */
  3    27 						/* otherwise, no repeat will occur */
  3    28 /* Limit of data defined for version 4 */
  3    29 
  3    30     2 explanation_ptr ptr init (null ()),		/* explanation of question to be printed if */
  3    31     2 explanation_len fixed bin (21) init (0);		/* user answers "?" (disabled if ptr=null or len=0) */
  3    32 
  3    33 dcl  query_info_version_3 fixed bin int static options (constant) init (3);
  3    34 dcl  query_info_version_4 fixed bin int static options (constant) init (4);
  3    35 dcl  query_info_version_5 fixed bin int static options (constant) init (5);
  3    36 dcl  query_info_version_6 fixed bin int static options (constant) init (6); /* the current version number */
  3    37 
  3    38 /*	END INCLUDE FILE query_info.incl.pl1 */
      100 
      101 
      102 /* Automatic */
      103 dcl answer char(linus_data_$buff_len) varying;
      104 dcl 1 query_information like query_info;
      105 dcl question char(linus_data_$buff_len) varying;
      106 
      107 /* Builtin */
      108 dcl (addr, fixed, null, rel, substr) builtin;
      109 
      110 /* Static */
      111 dcl iox_$user_input ptr ext static;
      112 dcl iox_$user_io ptr ext static;
      113 dcl iox_$user_output ptr ext static;
      114 dcl linus_data_$buff_len fixed bin(35) ext static;
      115 dcl sys_info$max_seg_size fixed bin(35) ext static;
      116 
      117 /* Entries */
      118 dcl command_query_ entry() options(variable);
      119 
      120 end linus_query;
      121 
      122 
      123 	
      124 	
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    04/18/00  1113.3  linus_query.pl1                   >udd>sm>ds>w>ml>linus_query.pl1
96           1    05/20/83  1946.4  iocb.incl.pl1                     >ldd>incl>iocb.incl.pl1
98           2    07/29/86  1248.4  linus_lcb.incl.pl1                >ldd>incl>linus_lcb.incl.pl1
100          3    03/11/83  1304.3  query_info.incl.pl1               >ldd>incl>query_info.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 108 ref 91 91
answer                          000117 automatic       varying char             dcl 103 set ref 46 61 91*
answer_iocbp              6     000120 automatic       pointer                  initial level 2 in structure "query_information"
                                                                                  dcl 104 in procedure "linus_query" set ref 75* 85*
                                                                                  104*
answer_iocbp              6     000102 automatic       pointer                  initial level 2 in structure "query_info" dcl 3-7
                                                                                  in procedure "linus_query" set ref 3-7*
answer_parm                            parameter       varying char             dcl 33 set ref 7 40* 46*
command_query_                  000020 constant        entry                    external dcl 118 ref 91
cp_escape_control         1(02) 000102 automatic       bit(2)                   initial level 3 in structure "query_info" packed
                                                                                  packed unaligned dcl 3-7 in procedure
                                                                                  "linus_query" set ref 3-7*
cp_escape_control         1(02) 000120 automatic       bit(2)                   initial level 3 in structure "query_information"
                                                                                  packed packed unaligned dcl 104 in procedure
                                                                                  "linus_query" set ref 69* 104*
explanation_len          14     000120 automatic       fixed bin(21,0)          initial level 2 in structure "query_information"
                                                                                  dcl 104 in procedure "linus_query" set ref 78*
                                                                                  104*
explanation_len          14     000102 automatic       fixed bin(21,0)          initial level 2 in structure "query_info" dcl 3-7
                                                                                  in procedure "linus_query" set ref 3-7*
explanation_ptr          12     000120 automatic       pointer                  initial level 2 in structure "query_information"
                                                                                  dcl 104 in procedure "linus_query" set ref 77*
                                                                                  104*
explanation_ptr          12     000102 automatic       pointer                  initial level 2 in structure "query_info" dcl 3-7
                                                                                  in procedure "linus_query" set ref 3-7*
iox_$user_input                 000010 external static pointer                  dcl 111 ref 75 85
iox_$user_io                    000012 external static pointer                  dcl 112 ref 85
iox_$user_output                000014 external static pointer                  dcl 113 ref 74
is_ptr                   22            based           pointer                  level 2 dcl 2-53 ref 85
lcb                                    based           structure                level 1 dcl 2-53
lcb_ptr                         000100 automatic       pointer                  dcl 2-121 set ref 41* 55* 85
lcb_ptr_parm                           parameter       pointer                  dcl 34 ref 7 41 49 55
linus_data_$buff_len            000016 external static fixed bin(35,0)          dcl 114 ref 103 105
literal_sw                1(05) 000102 automatic       bit(1)                   initial level 3 in structure "query_info" packed
                                                                                  packed unaligned dcl 3-7 in procedure
                                                                                  "linus_query" set ref 3-7*
literal_sw                1(05) 000120 automatic       bit(1)                   initial level 3 in structure "query_information"
                                                                                  packed packed unaligned dcl 104 in procedure
                                                                                  "linus_query" set ref 104*
null                                                   builtin function         dcl 108 ref 3-7 3-7 3-7 77 104 104 104
padding                   1(07) 000102 automatic       bit(29)                  initial level 3 in structure "query_info" packed
                                                                                  packed unaligned dcl 3-7 in procedure
                                                                                  "linus_query" set ref 3-7*
padding                   1(07) 000120 automatic       bit(29)                  initial level 3 in structure "query_information"
                                                                                  packed packed unaligned dcl 104 in procedure
                                                                                  "linus_query" set ref 71* 104*
prompt_after_explanation
                          1(06) 000102 automatic       bit(1)                   initial level 3 in structure "query_info" packed
                                                                                  packed unaligned dcl 3-7 in procedure
                                                                                  "linus_query" set ref 3-7*
prompt_after_explanation
                          1(06) 000120 automatic       bit(1)                   initial level 3 in structure "query_information"
                                                                                  packed packed unaligned dcl 104 in procedure
                                                                                  "linus_query" set ref 104*
query_code                3     000102 automatic       fixed bin(35,0)          initial level 2 in structure "query_info" dcl 3-7
                                                                                  in procedure "linus_query" set ref 3-7*
query_code                3     000120 automatic       fixed bin(35,0)          initial level 2 in structure "query_information"
                                                                                  dcl 104 in procedure "linus_query" set ref 73*
                                                                                  104*
query_info                      000102 automatic       structure                level 1 dcl 3-7
query_info_version_5                   constant        fixed bin(17,0)          initial dcl 3-35 ref 67
query_information               000120 automatic       structure                level 1 unaligned dcl 104 set ref 91 91
question                        000135 automatic       varying char             dcl 105 set ref 42* 56* 91
question_iocbp            4     000102 automatic       pointer                  initial level 2 in structure "query_info" dcl 3-7
                                                                                  in procedure "linus_query" set ref 3-7*
question_iocbp            4     000120 automatic       pointer                  initial level 2 in structure "query_information"
                                                                                  dcl 104 in procedure "linus_query" set ref 74*
                                                                                  104*
question_parm                          parameter       varying char             dcl 35 ref 7 42 49 56
repeat_time              10     000120 automatic       fixed bin(71,0)          initial level 2 in structure "query_information"
                                                                                  dcl 104 in procedure "linus_query" set ref 76*
                                                                                  104*
repeat_time              10     000102 automatic       fixed bin(71,0)          initial level 2 in structure "query_info" dcl 3-7
                                                                                  in procedure "linus_query" set ref 3-7*
status_code               2     000120 automatic       fixed bin(35,0)          initial level 2 in structure "query_information"
                                                                                  dcl 104 in procedure "linus_query" set ref 72*
                                                                                  104*
status_code               2     000102 automatic       fixed bin(35,0)          initial level 2 in structure "query_info" dcl 3-7
                                                                                  in procedure "linus_query" set ref 3-7*
substr                                                 builtin function         dcl 108 ref 61
suppress_name_sw          1(01) 000102 automatic       bit(1)                   initial level 3 in structure "query_info" packed
                                                                                  packed unaligned dcl 3-7 in procedure
                                                                                  "linus_query" set ref 3-7*
suppress_name_sw          1(01) 000120 automatic       bit(1)                   initial level 3 in structure "query_information"
                                                                                  packed packed unaligned dcl 104 in procedure
                                                                                  "linus_query" set ref 68* 104*
suppress_spacing          1(04) 000102 automatic       bit(1)                   initial level 3 in structure "query_info" packed
                                                                                  packed unaligned dcl 3-7 in procedure
                                                                                  "linus_query" set ref 3-7*
suppress_spacing          1(04) 000120 automatic       bit(1)                   initial level 3 in structure "query_information"
                                                                                  packed packed unaligned dcl 104 in procedure
                                                                                  "linus_query" set ref 70* 104*
switches                  1     000102 automatic       structure                level 2 in structure "query_info" dcl 3-7
                                                                                  in procedure "linus_query"
switches                  1     000120 automatic       structure                level 2 in structure "query_information" dcl 104
                                                                                  in procedure "linus_query"
version                         000120 automatic       fixed bin(17,0)          level 2 dcl 104 set ref 67*
yes_no_parm                            parameter       bit(1)                   dcl 36 set ref 49 54* 61*
yes_or_no_sw              1     000102 automatic       bit(1)                   initial level 3 in structure "query_info" packed
                                                                                  packed unaligned dcl 3-7 in procedure
                                                                                  "linus_query" set ref 3-7*
yes_or_no_sw              1     000120 automatic       bit(1)                   initial level 3 in structure "query_information"
                                                                                  packed packed unaligned dcl 104 in procedure
                                                                                  "linus_query" set ref 44* 58* 104*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
fixed                                                  builtin function         dcl 108
iocb                                   based           structure                level 1 dcl 1-6
iox_$iocb_version_sentinel             external static char(4)                  dcl 1-51
query_info_version_3                   internal static fixed bin(17,0)          initial dcl 3-33
query_info_version_4                   internal static fixed bin(17,0)          initial dcl 3-34
query_info_version_6                   internal static fixed bin(17,0)          initial dcl 3-36
rel                                                    builtin function         dcl 108
sys_info$max_seg_size                  external static fixed bin(35,0)          dcl 115

NAMES DECLARED BY EXPLICIT CONTEXT.
linus_query                     000130 constant        entry                    external dcl 7
query                           000263 constant        entry                    internal dcl 66 ref 45 59
yes_no                          000214 constant        entry                    external dcl 49

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       474         516     400         504
Length       732     400        22         177      74           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
linus_query                         140 external procedure  is an external procedure.  
query                                   internal procedure  shares stack frame of external procedure linus_query.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
linus_query              000100 lcb_ptr                     linus_query
                         000102 query_info                  linus_query
                         000117 answer                      linus_query
                         000120 query_information           linus_query
                         000135 question                    linus_query

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_char_temp     call_ext_out_desc   return_mac          alloc_auto_adj      shorten_stack       ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
command_query_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
iox_$user_input               iox_$user_io                  iox_$user_output              linus_data_$buff_len




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
 3    7 000016       103 000046       104 000057       105 000107        91 000117         7 000124        40 000151
     41 000154        42 000157        44 000171        45 000173        46 000174        47 000207        49 000210
     54 000230        55 000232        56 000235        58 000247        59 000251        61 000252        64 000262
     66 000263        67 000264        68 000266        69 000270        70 000272        71 000274        72 000276
     73 000277        74 000300        75 000304        76 000307        77 000311        78 000313        85 000314
     91 000324        93 000370


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
