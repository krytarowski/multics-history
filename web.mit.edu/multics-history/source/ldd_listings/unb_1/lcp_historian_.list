LISTING FOR  >dumps>old_dumps>lisp_stuff>work>lcp_historian_
COMPILED BY Multics LISP Compiler, Version 2.8x, February 27, 1980
ON 02/27/80  2138.9 mst Wed
IN BEHALF OF Martinson.SysMaint.a



;;;
;;; This is the easy end of a hack of prodigious hair.  BSG 1/20/80
;;;

(declare (special known-compilers known-segs compiling-compilers))
(declare (*fexpr use))
(setq known-compilers nil compiling-compilers nil known-segs nil)

(linel nil 200.)

(defun deradix (x)
       (list (// x (* 64. 64.))
	   (\ (// x 64.) 64.)
	   (\ x 64.)))

(defun dec (x)(let ((base 10.)(*nopoint t))(implode (explodec x))))
(defun cv-date (x)
       (let ((decdate (mapcar 'dec (deradix x))))
	  (catenate (cadr decdate) "/" (caddr decdate) "/" (car decdate))))

(defun cv-time (x)
       (let ((dectime (mapcar 'dec (deradix x))))
	  (or (= (stringlength (car dectime)) 2)
	      (setq dectime (cons (catenate "0" (car dectime)) (cdr dectime))))
	  (catenate (car dectime) ":" (cadr dectime) ":" (caddr dectime))))

(defun get-compiler-history-variable (x)
       (let ((obarray obarray))
	  (use c)
	  (let ((var (intern (copysymbol x nil))))
	       (cond ((boundp var)(symeval var))
		   (t nil)))))

(defun historian ()
       (let ((cversion (get-compiler-history-variable 'compiler-version))
	   (chistory (get-compiler-history-variable 'compiler-history)))
	  (cond ((null chistory)
	         (princ (catenate "The compiler you invoked is " cversion "."))
	         (terpri)
	         (princ "Its ancestry has not been recorded."))
	        (t (princ "The version of the compiler you invoked is")
		 (terpri)
		 (environment-historian "" chistory 0)))
	  (terpri)))

(defun environment-historian (label hist level)
       (indent-levels level)
       (princ (catenate label (cond ((atom hist) hist)
			      (t (car hist)))
		    ","))
       (terpri)
       (indent-levels level)
       (cond ((member hist compiling-compilers)
	    (princ "which impossibly, inconsistently, and fraudulently")
	    (terpri)(indent-levels level)
	    (print "claims to have participated in its own compilation.")
	    (terpri))
	   ((member hist known-compilers)
	    (princ "which is described above.")
	    (terpri))
	   ((atom (prog2 (setq known-compilers (cons hist known-compilers))
		       hist))
	    (princ "whose ancestry has not been recorded.")
	    (terpri))
	   (t (let ((compiling-compilers (cons hist compiling-compilers))
		  (words (cond ((= level 0) "which consists of ")
			     (t "which consisted of"))))
		 (princ words)
		 (terpri)
		 (do segs (cdr hist)(cdr segs)(null segs)
		     (seg-historian (car segs)
				(+ level 3)))))))

(defun seg-historian (seg level)
       (indent-levels level)
       (cond ((let ((dts (cadr seg)))
	         (or (null dts)
		   (and (not (atom dts))(null (cdr dts)))
		   (and (atom dts)(samepnamep dts '??))))
	    (princ (catenate "A version of " (car seg) " of unknown ancestry."))
	    (terpri))
	   (t 
	     (princ (catenate (car seg) ", compiled " (cv-date (car (cadr seg)))
			  " at " (cv-time (cdr (cadr seg))) ","))
	     (terpri)
	     (let ((new-level (+ level 2 (stringlength (car seg)))))
		(cond ((member seg known-segs)
		       (indent-levels new-level)
		       (princ "which was described above.")
		       (terpri))
		      (t (setq known-segs (cons seg known-segs))
		         (environment-historian "by " (caddr seg) new-level)))))))

(defun indent-levels (n)
       (do x n (1- x)(= x 0)(princ " ")))

			Functions Defined

Name			Offset		Offset		Name


cv-date                          44		   0		deradix
cv-time                          131		   24		dec
dec                              24		   44		cv-date
deradix                          0		   131		cv-time
environment-historian            362		   240		get-compiler-history-variable
get-compiler-history-variable    240		   273		historian
historian                        273		   362		environment-historian
indent-levels                    764		   561		seg-historian
seg-historian                    561		   764		indent-levels





			Functions Referenced

catenate                                deradix                                 princ
catenate                                environment-historian                   print
catenate                                explodec                                samepnamep
catenate                                get-compiler-history-variable           seg-historian
copysymbol                              implode                                 stringlength
cv-date                                 indent-levels                           terpri
cv-time                                 intern                                  use
dec                                     member                                  


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
