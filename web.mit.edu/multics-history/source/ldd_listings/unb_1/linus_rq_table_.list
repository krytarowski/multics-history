ASSEMBLY LISTING OF SEGMENT >special_ldd>install>MR12.0-1206>linus_rq_table_.alm             
ASSEMBLED ON:	11/05/86  1059.7 mst Wed
OPTIONS USED:	list 
ASSEMBLED BY:	ALM Version  6.7  October 1986  
ASSEMBLER CREATED:	10/08/86  1557.5 mst Wed

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Information Systems Inc., 1982 *
                                     4  " *                                                         *
                                     5  " ***********************************************************
                                     6  
                                     7  " HISTORY COMMENTS:
                                     8  "  1) change(84-12-10,Dupuis), approve(86-01-10,MCR7188),
                                     9  "     audit(86-07-29,GWMay), install(86-07-29,MR12.0-1106):
                                    10  "     Changed linus_del_scope to linus_scope_manager$delete_scope.
                                    11  "  2) change(86-01-09,Dupuis), approve(86-05-23,MCR7404),
                                    12  "     audit(86-07-29,GWMay), install(86-07-29,MR12.0-1106):
                                    13  "     Allowed assign_values, del_scope, list_scope, list_values, open,
                                    14  "     and set_scope to be called as active requests. Added the new active
                                    15  "     request opened_database.
                                    16  "                                                      END HISTORY COMMENTS
                                    17  
                                    18  
                                    19  "
                                    20  " Changed: November 1984 - Al Dupuis - Deleted the ssu_ requests.
                                    21  
    000000                          22  	name 	linus_rq_table_
                                    23  
                                    24  	include 	ssu_request_macros
                                   1-1  " BEGIN INCLUDE FILE ... ssu_request_macros.incl.alm
                                   1-2  " Created:  5 May 1980 by W. Olin Sibert
                                   1-3  " Modified: 25 July 1980 by G. Palter to add multics_request macro
                                   1-4  " Modified: 1 December 1981 by G. Palter to remove user_flags
                                   1-5  " Modified: 12 February 1982 by G. Palter for version 4
                                   1-6  " Modified: 28 February 1982 by G. Palter to add dont_summarize and dont_list
                                   1-7  " Modified: 2 August 1982 by Jay Pattin to add unknown_request
                                   1-8  " Modified: 24 October 1984 by G. Palter to restore user flags and add the
                                   1-9  "    set_default_flags and set_default_multics_flags macros
                                  1-10  
                                  1-11  
                                  1-12  " ALM macros used to define subsystem request tables
                                  1-13  
                                  1-14  
                                  1-15  	macro	request_table_version
                              1   1-16  	aci	"srqt_4.0",8
                              2   1-17  	&end
                                  1-18  
                                  1-19  
                                  1-20  	macro	namelist
                              1   1-21  	maclist	off,save
                              2   1-22  	vfd	36/&K
                              3   1-23  &R&(	aci	@&i@,32
                              4   1-24  &)
                              5   1-25  	maclist	restore
                              6   1-26  	&end
                                  1-27  
                                  1-28  " 
                                  1-29  
                                  1-30  " System defined per-request flags
                                  1-31  
                        400000    1-32  	bool	flags.allow_command,400000	" valid as a command
                        200000    1-33  	bool	flags.allow_af,200000	" valid as an active function
                        600000    1-34  	bool	flags.allow_both,600000	" valid as both
                                  1-35  
                        100000    1-36  	bool	flags.unimplemented,100000	" request is not yet implemented
                        040000    1-37  	bool	flags.multics_request,040000	" request is actually a Multics command
                                  1-38  
                        020000    1-39  	bool	flags.dont_summarize,020000	" summarize_requests won't list it
                        010000    1-40  	bool	flags.dont_list,010000	" list_requests won't show it without -all
                                  1-41  
                        004000    1-42  	bool	flags.unknown,004000	" request is explicitly made unknown
                                  1-43  
                                  1-44  
                                  1-45  " Macros for setting per-request flags
                                  1-46  
                                  1-47  	macro	set_flags_loop
                              1   1-48  	maclist	off,save
                              2   1-49  &(3
                              3   1-50  &=&i,default&[	set_flags_loop	&1,(0),(&2)
                              4   1-51  &;	set	&1,&1+&i
                              5   1-52  &]&)
                              6   1-53  	maclist	restore
                              7   1-54  	&end
                                  1-55  
                                  1-56  
                                  1-57  	macro	set_flags
                              1   1-58  	maclist	off,save
                              2   1-59  	set	&1,0
                              3   1-60  &=&3,&[	set_flags_loop	&1,(0),(&2)
                              4   1-61  &;	set_flags_loop	&1,(&2),(&3)
                              5   1-62  &]
                              6   1-63  	maclist	restore
                              7   1-64  	&end
                                  1-65  
                                  1-66  " 
                                  1-67  
                                  1-68  "	set_default_flags {(system-flags)},{(user-flags)}
                                  1-69  
                                  1-70  " Sets the default system and/or user flags to be used for requests:
                                  1-71  "   system-flags: defines the default general nature of requests;" the default
                                  1-72  "      default is flags.allow_command
                                  1-73  "   user-flags:  defines the default setting for the subsystem specific flags
                                  1-74  "      associated with requests;" the default default is none (0)
                                  1-75  "   Note: If either system-flags or user-flags is ommitted, the default is not
                                  1-76  "      changed from its prior value.  This action allows the use of multiple
                                  1-77  "      set_default_flags macros within a table to change system or user
                                  1-78  "      flags without affecting the other defaults
                                  1-79  
                                  1-80  	macro	set_default_flags
                              1   1-81  	maclist	off,save
                              2   1-82  &^=&1,&[	set_flags	.dft_sf,(flags.allow_command),(&1)
                              3   1-83  &]
                              4   1-84  &^=&2,&[	set_flags	.dft_uf,(0),(&2)
                              5   1-85  &]
                              6   1-86  	maclist	restore
                              7   1-87  	&end
                                  1-88  
                                  1-89  
                                  1-90  "	set_default_multics_flags {(system-flags)},{(user-flags)}
                                  1-91  
                                  1-92  " Sets the default system and/or user flags to be used for Multics commands when used as requests:
                                  1-93  "   system-flags: defines the default general nature of Multics requests;" the
                                  1-94  "      default default is flags.allow_command+flags.allow_af
                                  1-95  "   user-flags:  defines the default setting for the subsystem specific flags
                                  1-96  "      associated with Multics requests;" the default default is none (0)
                                  1-97  "   Note: If either system-flags or user-flags is ommitted, the default is not
                                  1-98  "      changed from its prior value.  This action allows the use of multiple
                                  1-99  "      set_default_multics_flags macros within a table to change system or user
                                 1-100  "      flags without affecting the other defaults
                                 1-101  
                                 1-102  	macro	set_default_multics_flags
                              1  1-103  	maclist	off,save
                              2  1-104  &^=&1,&[	set_flags	.dft_mrsf,(flags.allow_command,flags.allow_af),(&1)
                              3  1-105  &]
                              4  1-106  &^=&2,&[	set_flags	.dft_mruf,(0),(&2)
                              5  1-107  &]
                              6  1-108  	maclist	restore
                              7  1-109  	&end
                                 1-110  
                                 1-111  " 
                                 1-112  
                                 1-113  	macro	.multics_request_doc
                              1  1-114  	null
                              2  1-115  	&end
                                 1-116  
                                 1-117  
                                 1-118  	macro	dft_multics_doc_lth
                              1  1-119  	set	.multics_doc_lth,0
                              2  1-120  	&end
                                 1-121  
                                 1-122  
                                 1-123  "	set_default_multics_doc (string)
                                 1-124  
                                 1-125  " Sets the default documentation to be used for Multics commands when used as requests:
                                 1-126  "   string: is the documentation string to be used for any subsequent requests defined by
                                 1-127  "      the multics_request_macro;" all occurences of "&1" in this string will be replaced by
                                 1-128  "      the actual name of the request;" Eg:
                                 1-129  "	set_default_multics_doc (Type '.. help &1' for more information.)
                                 1-130  
                                 1-131  	macro	set_default_multics_doc
                              1  1-132  	maclist	off,save
                              2  1-133  	macro	.multics_request_doc
                              3  1-134  	aci	@&1@
                              4  1-135  	&&end
                              5  1-136  	macro	dft_multics_doc_lth
                              6  1-137  	macro	.compute
                              7  1-138  	set	.multics_doc_lth,&&&&l1
                              8  1-139  	&&&&end
                              9  1-140  	.compute (&1)
                             10  1-141  	&&end
                             11  1-142  	maclist	restore
                             12  1-143  	&end
                                 1-144  
                                 1-145  " 
                                 1-146  
                                 1-147  "	begin_table tablename
                                 1-148  
                                 1-149  " Defines a subsystem request table (multiple tables may exist in a single object segment):
                                 1-150  "   tablename: the name by which this table may be referenced externally;" references to the
                                 1-151  "      table should be of the form segname$tablename where segname is the name of this
                                 1-152  "      object segment
                                 1-153  
                                 1-154  	macro	begin_table
                              1  1-155  	segdef	&1
                              2  1-156  	maclist	object,save
                              3  1-157  	use	tables
                              4  1-158  &1:	request_table_version
                              5  1-159  	aci	@&1@,32
                              6  1-160  	dup	6
                              7  1-161  	vfd	36/0
                              8  1-162  	dupend
                              9  1-163  	vfd	36/&1.rc
                             10  1-164  	maclist	off
                             11  1-165  	set	.rc,0
                             12  1-166  	set_default_flags (default),(default)
                             13  1-167  	set_default_multics_flags (default),(default)
                             14  1-168  	maclist	restore
                             15  1-169  	&end
                                 1-170  
                                 1-171  
                                 1-172  "	end_table	tablename
                                 1-173  
                                 1-174  " Indicates the end of a subsystem request table definition:
                                 1-175  "   tablename: the name of the table which has now been completely defined
                                 1-176  
                                 1-177  	macro	end_table
                              1  1-178  	maclist	off,save
                              2  1-179  	set	&1.rc,.rc
                              3  1-180  	maclist	restore
                              4  1-181  	&end
                                 1-182  
                                 1-183  " 
                                 1-184  
                                 1-185  "	request	name,processor,({abbreviations}),{(documentation)},
                                 1-186  "		 {(system-flags)},{(user-flags)}
                                 1-187  
                                 1-188  " Defines a subsystem request:
                                 1-189  "   name: the primary name of this request
                                 1-190  "   processor: the name of the procedure which actually executes this request;" it must be
                                 1-191  "      of the form segname$entryname
                                 1-192  "   abbreviations: is the list of defined abbreviations for this request
                                 1-193  "   documentation: a short string used by the list_requests request to explain this request
                                 1-194  "   system-flags: defines the general nature of this request;" the default is
                                 1-195  "      flags.allow_command
                                 1-196  "   user-flags: allows a subsystem to provide subsystem-specific information
                                 1-197  "      with the request's definition;" the default is none (0)
                                 1-198  
                                 1-199  	macro	request
                              1  1-200  	maclist	off,save
                              2  1-201  	set	.rc,.rc+1
                              3  1-202  	maclist	object
                              4  1-203  	use	tables
                              5  1-204  	vfd	18/&U.call,18/&U.names
                              6  1-205  &=&4,&[	vfd	36/0
                              7  1-206  &;	vfd	18/&U.info,18/&l4
                              8  1-207  	maclist	off
                              9  1-208  	use	info
                             10  1-209  &U.info:	aci	@&4@
                             11  1-210  &]
                             12  1-211  	use	tables
                             13  1-212  	set_flags	.sf,(.dft_sf),(&5)
                             14  1-213  	set_flags	.uf,(.dft_uf),(&6)
                             15  1-214  	maclist	object
                             16  1-215  	vfd	18/.sf,18/.uf
                             17  1-216  	maclist	off
                             18  1-217  	use	calls
                             19  1-218  &U.call:	epaq	*
                             20  1-219  	lprp4	7|stack_header.lot_ptr,*au
                             21  1-220  	call6	&2
                             22  1-221  	use	names
                             23  1-222  &U.names:	namelist	&1&^=&3,&[,&3&]
                             24  1-223  	maclist	restore
                             25  1-224  	&end
                                 1-225  
                                 1-226  " 
                                 1-227  
                                 1-228  "	unknown_request name,(abbreviations)
                                 1-229  
                                 1-230  " Defines an unknown request: used to make the utilities not recognize a request even though
                                 1-231  " it is defined in a later request table (such as ssu_request_tables_$standard_request):
                                 1-232  "   name: the primary name of the request to be marked as unknown
                                 1-233  "   abbreviations: is the list of defined abbreviations for this request
                                 1-234  
                                 1-235  	macro	unknown_request
                              1  1-236  	maclist	off,save
                              2  1-237  	set	.rc,.rc+1
                              3  1-238  	maclist	object
                              4  1-239  	use	tables
                              5  1-240  	vfd	18/&U.call,18/&U.names
                              6  1-241  	vfd	36/0
                              7  1-242  	vfd	18/flags.unknown,18/0
                              8  1-243  	maclist	off
                              9  1-244  	use	calls
                             10  1-245  &U.call:	epaq	*
                             11  1-246  	lprp4	7|stack_header.lot_ptr,*au
                             12  1-247  	call6	ssu_$unknown_request
                             13  1-248  	use	names
                             14  1-249  &U.names: namelist	&1&^=&2,&[,&2&]
                             15  1-250  	maclist	restore
                             16  1-251  	&end
                                 1-252  
                                 1-253  " 
                                 1-254  
                                 1-255  "	multics_request name,({abbreviations}),({documenation}),{procedure},
                                 1-256  "		       {(system-flags)},{(user-flags)}
                                 1-257  
                                 1-258  " Defines that a Multics command/AF may be used as a subsystem request:
                                 1-259  "   name: the primary name of this request (usually the name of the Multics command/AF)
                                 1-260  "   abbreviations: is the list of defined abbreviations for this request
                                 1-261  "   documentation: a short string used by the list_requests request to explain this request;
                                 1-262  "      if no documentation is provided, the documentation specified by a prior use of
                                 1-263  "      set_default_multics_doc is used
                                 1-264  "   procedure: the name of the Multics command/AF which is actually executed by this
                                 1-265  "      request;" it must be of the form segname$entryname;" if not given, the default is
                                 1-266  "      name$name
                                 1-267  "   system-flags: defines the general nature of this request;" the default is
                                 1-268  "      flags.allow_command+flags.allow_af
                                 1-269  "   user-flags: allows a subsystem to provide subsystem-specific information
                                 1-270  "      with the request's definition;" the default is none (0)
                                 1-271  
                                 1-272  	macro	multics_request
                              1  1-273  	maclist	off,save
                              2  1-274  	set	.rc,.rc+1
                              3  1-275  	maclist	object
                              4  1-276  	use	tables
                              5  1-277  	vfd	18/&U.call,18/&U.names
                              6  1-278  &=&3,&[	dft_multics_doc_lth &1,(&2),(&3),(&4),(&5),(&6)
                              7  1-279  	vfd	18/&U.info,18/.multics_doc_lth
                              8  1-280  &;	vfd	18/&U.info,18/&l3
                              9  1-281  &]
                             10  1-282  	maclist	off
                             11  1-283  	use	info
                             12  1-284  &U.info:
                             13  1-285  &=&3,&[	.multics_request_doc &1,(&2),(&3),(&4),(&5),(&6)
                             14  1-286  &;	aci	@&3@
                             15  1-287  &]
                             16  1-288  	use	tables
                             17  1-289  	maclist	object
                             18  1-290  	set_flags	.sf,(.dft_mrsf),(&5)
                             19  1-291  	set_flags	.uf,(.dft_mruf),(&6)
                             20  1-292  	maclist	object
                             21  1-293  	vfd	18/.sf+flags.multics_request,18/.uf
                             22  1-294  	maclist	off
                             23  1-295  	use	calls
                             24  1-296  &U.call:	epaq	*
                             25  1-297  	lprp4	7|stack_header.lot_ptr,*au
                             26  1-298  &=&4,&[	call6	&1$&1
                             27  1-299  &;	call6	&4
                             28  1-300  &]
                             29  1-301  	use	names
                             30  1-302  &U.names:	namelist	&1&^=&2,&[,&2&]
                             31  1-303  	maclist	restore
                             32  1-304  	&end
                                 1-305  
                                 1-306  " 
                                 1-307  
                                 1-308  " Required ALM statements to make this all work
                                 1-309  
                                 1-310  	use	tables
                                 1-311  	use	calls
                                 1-312  	use	names
                                 1-313  	use	info
                                 1-314  	join	/text/tables,calls,names,info
                                 1-315  
                                 1-316  	include	stack_header
                                   2-1  "	BEGIN INCLUDE FILE ... stack_header.incl.alm  3/72  Bill Silver
                                   2-2  "
                                   2-3  "	modified 7/76 by M. Weaver for *system links and more system use of areas
                                   2-4  "	modified 3/77 by M. Weaver  to add rnt_ptr
                                   2-5  "	modified 7/77 by S. Webber to add run_unit_depth and assign_linkage_ptr
                                   2-6  "	modified 6/83 by J. Ives to add trace_frames and in_trace.
                                   2-7  
                                   2-8  " HISTORY COMMENTS:
                                   2-9  "  1) change(86-06-24,DGHowe), approve(86-06-24,MCR7396),
                                  2-10  "     audit(86-08-05,Schroth), install(86-11-03,MR12.0-1206):
                                  2-11  "     added the heap_header_ptr definition
                                  2-12  "  2) change(86-08-12,Kissel), approve(86-08-12,MCR7473),
                                  2-13  "     audit(86-10-10,Fawcett), install(86-11-03,MR12.0-1206):
                                  2-14  "     Modified to support control point management.  These changes were
                                  2-15  "     actually made in February 1985 by G. Palter.
                                  2-16  "  3) change(86-10-22,Fawcett), approve(86-10-22,MCR7473),
                                  2-17  "     audit(86-10-22,Farley), install(86-11-03,MR12.0-1206):
                                  2-18  "     Remove the old_lot pointer and replace it with cpm_data_ptr. Use the 18
                                  2-19  "     bit pad after cur_lot_size for the cpm_enabled. This was done to save
                                  2-20  "     some space int the stack header and change the cpd_ptr unal to
                                  2-21  "     cpm_data_ptr (ITS pair).
                                  2-22  "                                                      END HISTORY COMMENTS
                                  2-23  
                        000004    2-24  	equ	stack_header.cpm_data_ptr,4		ptr to control point for this stack
                        000006    2-25  	equ	stack_header.combined_stat_ptr,6	ptr to separate static area
                                  2-26  
                        000010    2-27  	equ	stack_header.clr_ptr,8		ptr to area containing linkage sections
                        000012    2-28  	equ	stack_header.max_lot_size,10		number of words allowed in lot (DU)
                        000012    2-29  	equ	stack_header.main_proc_invoked,10	nonzero if main proc was invoked in run unit (DL)
                        000012    2-30  	equ	stack_header.run_unit_depth,10	number of active run units stacked (DL)
                        000013    2-31  	equ	stack_header.cur_lot_size,11		DU number of words (entries) in lot
                        000013    2-32            equ	stack_header.cpm_enabled,11		DL  non-zero if control point management is enabled
                        000014    2-33  	equ	stack_header.system_free_ptr,12	ptr to system storage area
                        000016    2-34  	equ	stack_header.user_free_ptr,14		ptr to user storage area
                                  2-35  
                        000020    2-36  	equ	stack_header.parent_ptr,16		ptr to parent stack or null
                        000022    2-37  	equ	stack_header.stack_begin_ptr,18	ptr to first stack frame
                        000024    2-38  	equ	stack_header.stack_end_ptr,20		ptr to next useable stack frame
                        000026    2-39  	equ	stack_header.lot_ptr,22		ptr to the lot for the current ring
                                  2-40  
                        000030    2-41  	equ	stack_header.signal_ptr,24		ptr to signal proc for current ring
                        000032    2-42  	equ	stack_header.bar_mode_sp,26		value of sp before entering bar mode
                        000034    2-43  	equ	stack_header.pl1_operators_ptr,28	ptr: pl1_operators_$operator_table
                        000036    2-44  	equ	stack_header.call_op_ptr,30		ptr to standard call operator
                                  2-45  
                        000040    2-46  	equ	stack_header.push_op_ptr,32		ptr to standard push operator
                        000042    2-47  	equ	stack_header.return_op_ptr,34		ptr to standard return operator
                        000044    2-48  	equ	stack_header.ret_no_pop_op_ptr,36	ptr: stand. return/ no pop operator
                        000046    2-49  	equ	stack_header.entry_op_ptr,38		ptr to standard entry operator
                                  2-50  
                        000050    2-51  	equ	stack_header.trans_op_tv_ptr,40	ptr to table of translator operator ptrs
                        000052    2-52  	equ	stack_header.isot_ptr,42		pointer to ISOT
                        000054    2-53  	equ	stack_header.sct_ptr,44		pointer to System Condition Table
                        000056    2-54  	equ	stack_header.unwinder_ptr,46		pointer to unwinder for current ring
                                  2-55  
                        000060    2-56  	equ	stack_header.sys_link_info_ptr,48	ptr to *system link name table
                        000062    2-57  	equ	stack_header.rnt_ptr,50		ptr to reference name table
                        000064    2-58  	equ	stack_header.ect_ptr,52		ptr to event channel table
                        000066    2-59  	equ	stack_header.assign_linkage_ptr,54	ptr to area for hcs_$assign_linkage calls
                        000070    2-60  	equ	stack_header.heap_header_ptr,56	ptr to heap header.
                        000072    2-61  	equ	stack_header.trace_frames,58		stack of trace_catch_ frames
                        000073    2-62  	equ	stach_header.trace_top_ptr,59		trace pointer
                        000074    2-63  	equ	stack_header.in_trace,60		trace antirecurse bit
                        000100    2-64  	equ	stack_header_end,64			length of stack header
                                  2-65  
                                  2-66  
                                  2-67  
                                  2-68  
                        000000    2-69  	equ	trace_frames.count,0		number of trace frames on stack
                        000001    2-70  	equ	trace_frames.top_ptr,1		packed pointer to top one
                                  2-71  
                                  2-72  "	The  following constant is an offset within the  pl1  operators table.
                                  2-73  "	It  references a  transfer vector table.
                                  2-74  
                        000551    2-75  	bool	tv_offset,551
                                  2-76  
                                  2-77  
                                  2-78  "	The  following constants are offsets within this transfer vector table.
                                  2-79  
                        001170    2-80  	equ	call_offset,tv_offset+271
                        001171    2-81  	equ	push_offset,tv_offset+272
                        001172    2-82  	equ	return_offset,tv_offset+273
                        001173    2-83  	equ	return_no_pop_offset,tv_offset+274
                        001174    2-84  	equ	entry_offset,tv_offset+275
                                  2-85  
                                  2-86  
                                  2-87  " 	END INCLUDE FILE stack_header.incl.alm
                                 2-317  
                                 2-318  " END INCLUDE FILE ... ssu_request_macros.incl.alm
                                    25  
                                    26  	begin_table linus_rq_table_
                        000000          	segdef	linus_rq_table_
    000000  aa  163 162 161 164
    000001  aa  137 064 056 060
    000002  aa  154 151 156 165
    000003  aa  163 137 162 161
    000004  aa  137 164 141 142
    000005  aa  154 145 137 040
    000006  aa  040 040 040 040
    000007  aa  040 040 040 040
    000010  aa  040 040 040 040
    000011  aa  040 040 040 040
                        000006 
    000012  aa   000000 000000 
    000013  aa   000000 000000 
    000014  aa   000000 000000 
    000015  aa   000000 000000 
    000016  aa   000000 000000 
    000017  aa   000000 000000 
    000020  aa   000000 000057 
                                    27  
                                    28  	set_default_multics_doc (Type '..help &1' for more information.)
                                    29  
                                    30  	request	.,
                                    31  		 linus_self_identify$linus_self_identify,
                                    32  		 (),
                                    33  		 (Print status information.),
                                    34  		 flags.allow_command
    000021  00   000236 000453 
    000022  0a   002002 000031 
    000023  aa   400000 000000 
                                    35  
                                    36  	request	apply,
                                    37  		 linus_apply$linus_apply,
                                    38  		 (ap),
                                    39  		 (Apply a Multics command line to the current query.),
                                    40  		 flags.allow_command
    000024  00   000241 000464 
    000025  0a   002011 000062 
    000026  aa   400000 000000 
                                    41  
                                    42  	request	assign_values,
                                    43  		 linus_assign_values$linus_assign_values,
                                    44  		 (av),
                                    45  		 (Retrieve data and assign values to variables.),
                                    46  		 flags.allow_both
    000027  00   000244 000505 
    000030  0a   002026 000055 
    000031  aa   600000 000000 
                                    47  
                                    48  " Undocumented short name for assign_values:
                                    49  
                                    50  	request	set,
                                    51  		 linus_assign_values$linus_assign_values,
                                    52  		 (),
                                    53  		 ,
                                    54  		 flags.dont_summarize+flags.dont_list+flags.allow_command
    000032  00   000247 000526 
    000033  aa   000000 000000 
    000034  aa   430000 000000 
                                    55  
                                    56  	request	close,
                                    57  		 linus_close$linus_close,
                                    58  		 (c),
                                    59  		 (Close the currently open database.),
                                    60  		 flags.allow_command
    000035  00   000252 000537 
    000036  0a   002042 000042 
    000037  aa   400000 000000 
                                    61  
                                    62  	request	column_value,
                                    63  		 linus_column_value$linus_column_value,
                                    64  		 (clv),
                                    65  		 (Return the value of a specified column.),
                                    66  		 flags.allow_af
    000040  00   000255 000560 
    000041  0a   002053 000047 
    000042  aa   200000 000000 
                                    67  
                                    68  	request	create_list,
                                    69  		 linus_create_list$linus_create_list,
                                    70  		 (cls),
                                    71  		 (Retrieve data and write it to a Lister file.),
                                    72  		 flags.allow_command
    000043  00   000260 000601 
    000044  0a   002065 000054 
    000045  aa   400000 000000 
                                    73  
                                    74  " Undocumented short name for create_list:
                                    75  
                                    76  	request	cl,
                                    77  		 linus_create_list$linus_create_list,
                                    78  		 (),
                                    79  		 ,
                                    80  		 flags.dont_summarize+flags.dont_list+flags.allow_command
    000046  00   000263 000622 
    000047  aa   000000 000000 
    000050  aa   430000 000000 
                                    81  
                                    82  	request	declare,
                                    83  		 linus_declare$linus_declare,
                                    84  		 (dcl),
                                    85  		 (Declare a user written function.),
                                    86  		 flags.allow_command
    000051  00   000266 000633 
    000052  0a   002100 000040 
    000053  aa   400000 000000 
                                    87  
                                    88  	request	define_temp_table,
                                    89  		 linus_dtt$linus_dtt,
                                    90  		 (dtt),
                                    91  		 (Retrieve data and place in a temporary table.),
                                    92  		 flags.allow_command
    000054  00   000271 000654 
    000055  0a   002110 000055 
    000056  aa   400000 000000 
                                    93  
                                    94  	request	del_scope,
                                    95  		 linus_scope_manager$delete_scope,
                                    96  		 (ds),
                                    97  		 (Delete all or a portion of the current scope of access.),
                                    98  		 flags.allow_both
    000057  00   000274 000675 
    000060  0a   002124 000067 
    000061  aa   600000 000000 
                                    99  
                                   100  	request	delete,
                                   101  		 linus_delete$linus_delete,
                                   102  		 (dl),
                                   103  		 (Delete selected data.),
                                   104  		 flags.allow_command
    000062  00   000277 000716 
    000063  0a   002142 000025 
    000064  aa   400000 000000 
                                   105  
                                   106  " Undocumented short name for delete:
                                   107  
                                   108  	request	d,
                                   109  		 linus_delete$linus_delete,
                                   110  		 (),
                                   111  		 ,
                                   112  		 flags.dont_summarize+flags.dont_list+flags.allow_command
    000065  00   000302 000737 
    000066  aa   000000 000000 
    000067  aa   430000 000000 
                                   113  
                                   114  	request	delete_temp_table,
                                   115  		 linus_dltt$linus_dltt,
                                   116  		 (dltt),
                                   117  		 (Delete the specified temporary table.),
                                   118  		 flags.allow_command
    000070  00   000305 000750 
    000071  0a   002150 000045 
    000072  aa   400000 000000 
                                   119  
                                   120  	request	display,
                                   121  		 linus_display$linus_display,
                                   122  		 (di),
                                   123  		 (Retrieve data and produce a formatted report.),
                                   124  		 flags.allow_command
    000073  00   000310 000771 
    000074  0a   002162 000055 
    000075  aa   400000 000000 
                                   125  
                                   126  	request	display_builtins,
                                   127  		 linus_display_builtins$linus_display_builtins,
                                   128  		 (dib),
                                   129  		 (Return the value of a display builtin.),
                                   130  		 flags.allow_af
    000076  00   000313 001012 
    000077  0a   002176 000046 
    000100  aa   200000 000000 
                                   131  
                                   132  	multics_request	format_line,
                                   133  		(fl),
                                   134  		,,,
                                   135  		flags.allow_both+flags.dont_list+flags.dont_summarize
    000101  00   000316 001033 
                        000057 
    000102  0a   002210 000057 
    000103  aa   640000 630000 
                                   136  
                                   137  	request	input_query,
                                   138  		 linus_input_query$linus_input_query,
                                   139  		 (iq),
                                   140  		 (Input a query from the terminal or a file.),
                                   141  		 flags.allow_command
    000104  00   000321 001054 
    000105  0a   002224 000052 
    000106  aa   400000 000000 
                                   142  
                                   143  	request	invoke,
                                   144  		 linus_invoke$linus_invoke,
                                   145  		 (i),
                                   146  		 (Execute requests in a designated LINUS macro segment.),
                                   147  		 flags.allow_command
    000107  00   000324 001075 
    000110  0a   002237 000065 
    000111  aa   400000 000000 
                                   148  
                                   149  	request 	lila,
                                   150  		 linus_lila$linus_lila,
                                   151  		 (),
                                   152  		 (Invoke the lila editor.),
                                   153  		 flags.allow_command
    000112  00   000327 001116 
    000113  0a   002255 000027 
    000114  aa   400000 000000 
                                   154  
                                   155  	request	list_db,
                                   156  		 linus_list_db$linus_list_db,
                                   157  		 (ldb),
                                   158  		 (List information about the currently open database.),
                                   159  		 flags.allow_command
    000115  00   000332 001127 
    000116  0a   002263 000063 
    000117  aa   400000 000000 
                                   160  
                                   161  	request	list_format_options,
                                   162  		 linus_list_format_options$linus_list_format_options,
                                   163  		 (lsfo),
                                   164  		 (List formatting option values.),
                                   165  		 flags.allow_both
    000120  00   000335 001150 
    000121  0a   002300 000036 
    000122  aa   600000 000000 
                                   166  
                                   167  	request	list_scope,
                                   168  		 linus_list_scope$linus_list_scope,
                                   169  		 (ls),
                                   170  		 (List/return the scope of access currently in force.),
                                   171  		 flags.allow_both
    000123  00   000340 001171 
    000124  0a   002310 000063 
    000125  aa   600000 000000 
                                   172  
                                   173  	request	list_values,
                                   174  		 linus_list_values$linus_list_values,
                                   175  		 (lv),
                                   176  		 (List/return current value of designated LINUS variable.),
                                   177  		 flags.allow_both
    000126  00   000343 001212 
    000127  0a   002325 000067 
    000130  aa   600000 000000 
                                   178  
                                   179  	multics_request	ltrim,
                                   180  		(),
                                   181  		,,,
                                   182  		flags.allow_both+flags.dont_list+flags.dont_summarize
    000131  00   000346 001233 
                        000051 
    000132  0a   002343 000051 
    000133  aa   640000 630000 
                                   183  
                                   184  	request	modify,
                                   185  		 linus_modify$linus_modify,
                                   186  		 (m),
                                   187  		 (Modify a selected portion of the database.),
                                   188  		 flags.allow_command
    000134  00   000351 001244 
    000135  0a   002356 000052 
    000136  aa   400000 000000 
                                   189  
                                   190  	request	open,
                                   191  		 linus_open$linus_open,
                                   192  		 (o),
                                   193  		 (Open a database.),
                                   194  		 flags.allow_both
    000137  00   000354 001265 
    000140  0a   002371 000020 
    000141  aa   600000 000000 
                                   195  
                                   196  	request	opened_database,
                                   197  		 linus_opened_database$linus_opened_database,
                                   198  		 (odb),
                                   199  		 (Return true or false for an open database.),
                                   200  		 flags.allow_af
    000142  00   000357 001306 
    000143  0a   002375 000052 
    000144  aa   200000 000000 
                                   201  
                                   202  	multics_request	picture,
                                   203  		(pic),
                                   204  		,,,
                                   205  		flags.allow_both+flags.dont_list+flags.dont_summarize
    000145  00   000362 001327 
                        000053 
    000146  0a   002410 000053 
    000147  aa   640000 630000 
                                   206  
                                   207  	request	print,
                                   208  		 linus_print$linus_print,
                                   209  		 (pr),
                                   210  		 (Retrieve data and print in default format.),
                                   211  		 flags.allow_command
    000150  00   000365 001350 
    000151  0a   002423 000052 
    000152  aa   400000 000000 
                                   212  
                                   213  " Undocumented short name for print:
                                   214  
                                   215  	request	p,
                                   216  		 linus_print$linus_print,
                                   217  		 (),
                                   218  		 ,
                                   219  		 flags.dont_summarize+flags.dont_list+flags.allow_command
    000153  00   000370 001371 
    000154  aa   000000 000000 
    000155  aa   430000 000000 
                                   220  
                                   221  	request	print_query,
                                   222  		 linus_print_query$linus_print_query,
                                   223  		 (pq),
                                   224  		 (Print or return the current query.),
                                   225  		 flags.allow_both
    000156  00   000373 001402 
    000157  0a   002436 000042 
    000160  aa   600000 000000 
                                   226  
                                   227  	request	qedx,
                                   228  		 linus_qedx$linus_qedx,
                                   229  		 (qx),
                                   230  		 (Edit the current query with the qedx editor.),
                                   231  		 flags.allow_command
    000161  00   000376 001423 
    000162  0a   002447 000054 
    000163  aa   400000 000000 
                                   232  
                                   233  	request	report,
                                   234  		 linus_report$linus_report,
                                   235  		 (rpt),
                                   236  		 (Retrieve data and invoke an MRPG report program.),
                                   237  		 flags.allow_command
    000164  00   000401 001444 
    000165  0a   002462 000060 
    000166  aa   400000 000000 
                                   238  
                                   239  	request   restore_format_options,
                                   240  	           linus_restore_format_option$linus_restore_format_option,
                                   241  		 (rsfo),
                                   242  		 (Restore formatting option values.),
                                   243  		 flags.allow_command
    000167  00   000404 001465 
    000170  0a   002476 000041 
    000171  aa   400000 000000 
                                   244  
                                   245  	multics_request	rtrim,
                                   246  		(),
                                   247  		,,,
                                   248  		flags.allow_both+flags.dont_list+flags.dont_summarize
    000172  00   000407 001506 
                        000051 
    000173  0a   002507 000051 
    000174  aa   640000 630000 
                                   249  
                                   250  	request	save_format_options,
                                   251  	           linus_save_format_options$linus_save_format_options,
                                   252  		 (svfo),
                                   253  		 (Save formatting option values.),
                                   254  		 flags.allow_command
    000175  00   000412 001517 
    000176  0a   002522 000036 
    000177  aa   400000 000000 
                                   255  
                                   256  	request	save_query,
                                   257  		 linus_save_query$linus_save_query,
                                   258  		 (sq),
                                   259  		 (Save the current query to a file.),
                                   260  		 flags.allow_command
    000200  00   000415 001540 
    000201  0a   002532 000041 
    000202  aa   400000 000000 
                                   261  
                                   262  	request	set_format_options,
                                   263  		 linus_set_format_options$linus_set_format_options,
                                   264  		 (sfo),
                                   265  		 (Set formatting option values.),
                                   266  		 flags.allow_command
    000203  00   000420 001561 
    000204  0a   002543 000035 
    000205  aa   400000 000000 
                                   267  
                                   268  	request	set_mode,
                                   269  		 linus_set_mode$linus_set_mode,
                                   270  		 (sm),
                                   271  		 (Set or reset modes for the current session.),
                                   272  		 flags.allow_command
    000206  00   000423 001602 
    000207  0a   002553 000053 
    000210  aa   400000 000000 
                                   273  
                                   274  	request	set_scope,
                                   275  		 linus_scope_manager$set_scope,
                                   276  		 (ss),
                                   277  		 (Define the current scope of access to the database.),
                                   278  		 flags.allow_both
    000211  00   000426 001623 
    000212  0a   002566 000063 
    000213  aa   600000 000000 
                                   279  
                                   280  	request	store,
                                   281  		 linus_store$linus_store,
                                   282  		 (s),
                                   283  		 (Add new rows to a specified table in the database.),
                                   284  		 flags.allow_command
    000214  00   000431 001644 
    000215  0a   002603 000062 
    000216  aa   400000 000000 
                                   285  
                                   286  	request	store_from_data_file,
                                   287  		 linus_store_from_data_file$linus_store_from_data_file,
                                   288  		 (sdf),
                                   289  		 (Read data from a file and store to a specified table.),
                                   290  		 flags.allow_command
    000217  00   000434 001665 
    000220  0a   002620 000065 
    000221  aa   400000 000000 
                                   291  
                                   292  	multics_request	string,
                                   293  		(),
                                   294  		,,,
                                   295  		flags.allow_both+flags.dont_list+flags.dont_summarize
    000222  00   000437 001706 
                        000052 
    000223  0a   002636 000052 
    000224  aa   640000 630000 
                                   296  
                                   297  	request	translate_query,
                                   298  		 linus_translate_query$linus_translate_query,
                                   299  		 (tq),
                                   300  		 (Translate the current query for use by LINUS.),
                                   301  		 flags.allow_command
    000225  00   000442 001717 
    000226  0a   002651 000055 
    000227  aa   400000 000000 
                                   302  
                                   303  	request	write,
                                   304  		 linus_write$linus_write,
                                   305  		 (w),
                                   306  		 (Retrieve data and write to a segment.),
                                   307  		 flags.allow_command
    000230  00   000445 001740 
    000231  0a   002665 000045 
    000232  aa   400000 000000 
                                   308  
                                   309  	request	write_data_file,
                                   310  		 linus_write_data_file$linus_write_data_file,
                                   311  		 (wdf),
                                   312  		 (Retrieve data and write it to a data file.),
                                   313  		 flags.allow_command
    000233  00   000450 001761 
    000234  0a   002677 000052 
    000235  aa   400000 000000 
                                   314  
                                   315  	end_table	linus_rq_table_
                                   316  
                                   317  	end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    002712  5a   000003 000000 
    002713  5a   000030 600000 
    002714  aa   000000 000000 
    002715  55   000012 000002 
    002716  5a   000002 400003 
    002717  55   000006 000012 
    002720  aa  017 154 151 156
    002721  aa  165 163 137 162
    002722  aa  161 137 164 141
    002723  aa  142 154 145 137
    002724  55   000021 000003 
    002725  0a   000000 400000 
    002726  55   000015 000003 
    002727  aa  017 154 151 156         linus_rq_table_
    002730  aa  165 163 137 162
    002731  aa  161 137 164 141
    002732  aa  142 154 145 137
    002733  55   000002 000012 
    002734  6a   000000 400002 
    002735  55   000024 000003 
    002736  aa  014 163 171 155         symbol_table
    002737  aa  142 157 154 137
    002740  aa  164 141 142 154
    002741  aa  145 000 000 000

DEFINITIONS HASH TABLE

    002742  aa   000000 000015 
    002743  aa   000000 000000 
    002744  aa   000000 000000 
    002745  aa   000000 000000 
    002746  aa   000000 000000 
    002747  aa   000000 000000 
    002750  aa   000000 000000 
    002751  5a   000021 000000 
    002752  aa   000000 000000 
    002753  aa   000000 000000 
    002754  aa   000000 000000 
    002755  5a   000012 000000 
    002756  aa   000000 000000 
    002757  aa   000000 000000 

EXTERNAL NAMES

    002760  aa  025 154 151 156         linus_write_data_file
    002761  aa  165 163 137 167
    002762  aa  162 151 164 145
    002763  aa  137 144 141 164
    002764  aa  141 137 146 151
    002765  aa  154 145 000 000
    002766  aa  013 154 151 156         linus_write
    002767  aa  165 163 137 167
    002770  aa  162 151 164 145
    002771  aa  025 154 151 156         linus_translate_query
    002772  aa  165 163 137 164
    002773  aa  162 141 156 163
    002774  aa  154 141 164 145
    002775  aa  137 161 165 145
    002776  aa  162 171 000 000
    002777  aa  006 163 164 162         string
    003000  aa  151 156 147 000
    003001  aa  032 154 151 156         linus_store_from_data_file
    003002  aa  165 163 137 163
    003003  aa  164 157 162 145
    003004  aa  137 146 162 157
    003005  aa  155 137 144 141
    003006  aa  164 141 137 146
    003007  aa  151 154 145 000
    003010  aa  013 154 151 156         linus_store
    003011  aa  165 163 137 163
    003012  aa  164 157 162 145
    003013  aa  011 163 145 164         set_scope
    003014  aa  137 163 143 157
    003015  aa  160 145 000 000
    003016  aa  016 154 151 156         linus_set_mode
    003017  aa  165 163 137 163
    003020  aa  145 164 137 155
    003021  aa  157 144 145 000
    003022  aa  030 154 151 156         linus_set_format_options
    003023  aa  165 163 137 163
    003024  aa  145 164 137 146
    003025  aa  157 162 155 141
    003026  aa  164 137 157 160
    003027  aa  164 151 157 156
    003030  aa  163 000 000 000
    003031  aa  020 154 151 156         linus_save_query
    003032  aa  165 163 137 163
    003033  aa  141 166 145 137
    003034  aa  161 165 145 162
    003035  aa  171 000 000 000
    003036  aa  031 154 151 156         linus_save_format_options
    003037  aa  165 163 137 163
    003040  aa  141 166 145 137
    003041  aa  146 157 162 155
    003042  aa  141 164 137 157
    003043  aa  160 164 151 157
    003044  aa  156 163 000 000
    003045  aa  005 162 164 162         rtrim
    003046  aa  151 155 000 000
    003047  aa  033 154 151 156         linus_restore_format_option
    003050  aa  165 163 137 162
    003051  aa  145 163 164 157
    003052  aa  162 145 137 146
    003053  aa  157 162 155 141
    003054  aa  164 137 157 160
    003055  aa  164 151 157 156
    003056  aa  014 154 151 156         linus_report
    003057  aa  165 163 137 162
    003060  aa  145 160 157 162
    003061  aa  164 000 000 000
    003062  aa  012 154 151 156         linus_qedx
    003063  aa  165 163 137 161
    003064  aa  145 144 170 000
    003065  aa  021 154 151 156         linus_print_query
    003066  aa  165 163 137 160
    003067  aa  162 151 156 164
    003070  aa  137 161 165 145
    003071  aa  162 171 000 000
    003072  aa  013 154 151 156         linus_print
    003073  aa  165 163 137 160
    003074  aa  162 151 156 164
    003075  aa  007 160 151 143         picture
    003076  aa  164 165 162 145
    003077  aa  025 154 151 156         linus_opened_database
    003100  aa  165 163 137 157
    003101  aa  160 145 156 145
    003102  aa  144 137 144 141
    003103  aa  164 141 142 141
    003104  aa  163 145 000 000
    003105  aa  012 154 151 156         linus_open
    003106  aa  165 163 137 157
    003107  aa  160 145 156 000
    003110  aa  014 154 151 156         linus_modify
    003111  aa  165 163 137 155
    003112  aa  157 144 151 146
    003113  aa  171 000 000 000
    003114  aa  005 154 164 162         ltrim
    003115  aa  151 155 000 000
    003116  aa  021 154 151 156         linus_list_values
    003117  aa  165 163 137 154
    003120  aa  151 163 164 137
    003121  aa  166 141 154 165
    003122  aa  145 163 000 000
    003123  aa  020 154 151 156         linus_list_scope
    003124  aa  165 163 137 154
    003125  aa  151 163 164 137
    003126  aa  163 143 157 160
    003127  aa  145 000 000 000
    003130  aa  031 154 151 156         linus_list_format_options
    003131  aa  165 163 137 154
    003132  aa  151 163 164 137
    003133  aa  146 157 162 155
    003134  aa  141 164 137 157
    003135  aa  160 164 151 157
    003136  aa  156 163 000 000
    003137  aa  015 154 151 156         linus_list_db
    003140  aa  165 163 137 154
    003141  aa  151 163 164 137
    003142  aa  144 142 000 000
    003143  aa  012 154 151 156         linus_lila
    003144  aa  165 163 137 154
    003145  aa  151 154 141 000
    003146  aa  014 154 151 156         linus_invoke
    003147  aa  165 163 137 151
    003150  aa  156 166 157 153
    003151  aa  145 000 000 000
    003152  aa  021 154 151 156         linus_input_query
    003153  aa  165 163 137 151
    003154  aa  156 160 165 164
    003155  aa  137 161 165 145
    003156  aa  162 171 000 000
    003157  aa  013 146 157 162         format_line
    003160  aa  155 141 164 137
    003161  aa  154 151 156 145
    003162  aa  026 154 151 156         linus_display_builtins
    003163  aa  165 163 137 144
    003164  aa  151 163 160 154
    003165  aa  141 171 137 142
    003166  aa  165 151 154 164
    003167  aa  151 156 163 000
    003170  aa  015 154 151 156         linus_display
    003171  aa  165 163 137 144
    003172  aa  151 163 160 154
    003173  aa  141 171 000 000
    003174  aa  012 154 151 156         linus_dltt
    003175  aa  165 163 137 144
    003176  aa  154 164 164 000
    003177  aa  014 154 151 156         linus_delete
    003200  aa  165 163 137 144
    003201  aa  145 154 145 164
    003202  aa  145 000 000 000
    003203  aa  014 144 145 154         delete_scope
    003204  aa  145 164 145 137
    003205  aa  163 143 157 160
    003206  aa  145 000 000 000
    003207  aa  023 154 151 156         linus_scope_manager
    003210  aa  165 163 137 163
    003211  aa  143 157 160 145
    003212  aa  137 155 141 156
    003213  aa  141 147 145 162
    003214  aa  011 154 151 156         linus_dtt
    003215  aa  165 163 137 144
    003216  aa  164 164 000 000
    003217  aa  015 154 151 156         linus_declare
    003220  aa  165 163 137 144
    003221  aa  145 143 154 141
    003222  aa  162 145 000 000
    003223  aa  021 154 151 156         linus_create_list
    003224  aa  165 163 137 143
    003225  aa  162 145 141 164
    003226  aa  145 137 154 151
    003227  aa  163 164 000 000
    003230  aa  022 154 151 156         linus_column_value
    003231  aa  165 163 137 143
    003232  aa  157 154 165 155
    003233  aa  156 137 166 141
    003234  aa  154 165 145 000
    003235  aa  013 154 151 156         linus_close
    003236  aa  165 163 137 143
    003237  aa  154 157 163 145
    003240  aa  023 154 151 156         linus_assign_values
    003241  aa  165 163 137 141
    003242  aa  163 163 151 147
    003243  aa  156 137 166 141
    003244  aa  154 165 145 163
    003245  aa  013 154 151 156         linus_apply
    003246  aa  165 163 137 141
    003247  aa  160 160 154 171
    003250  aa  023 154 151 156         linus_self_identify
    003251  aa  165 163 137 163
    003252  aa  145 154 146 137
    003253  aa  151 144 145 156
    003254  aa  164 151 146 171

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    003255  aa   000004 000000 
    003256  55   000046 000046 
    003257  aa   000004 000000 
    003260  55   000054 000054 
    003261  aa   000004 000000 
    003262  55   000057 000057 
    003263  aa   000004 000000 
    003264  55   000065 000065 
    003265  aa   000004 000000 
    003266  55   000067 000067 
    003267  aa   000004 000000 
    003270  55   000076 000076 
    003271  aa   000004 000000 
    003272  55   000275 000101 
    003273  aa   000004 000000 
    003274  55   000104 000104 
    003275  aa   000004 000000 
    003276  55   000110 000110 
    003277  aa   000004 000000 
    003300  55   000117 000117 
    003301  aa   000004 000000 
    003302  55   000124 000124 
    003303  aa   000004 000000 
    003304  55   000133 000133 
    003305  aa   000004 000000 
    003306  55   000135 000135 
    003307  aa   000004 000000 
    003310  55   000144 000144 
    003311  aa   000004 000000 
    003312  55   000150 000150 
    003313  aa   000004 000000 
    003314  55   000153 000153 
    003315  aa   000004 000000 
    003316  55   000160 000160 
    003317  aa   000004 000000 
    003320  55   000163 000163 
    003321  aa   000004 000000 
    003322  55   000165 000165 
    003323  aa   000004 000000 
    003324  55   000173 000173 
    003325  aa   000004 000000 
    003326  55   000176 000176 
    003327  aa   000004 000000 
    003330  55   000202 000202 
    003331  aa   000004 000000 
    003332  55   000204 000204 
    003333  aa   000004 000000 
    003334  55   000211 000211 
    003335  aa   000004 000000 
    003336  55   000216 000216 
    003337  aa   000004 000000 
    003340  55   000225 000225 
    003341  aa   000004 000000 
    003342  55   000231 000231 
    003343  aa   000004 000000 
    003344  55   000234 000234 
    003345  aa   000004 000000 
    003346  55   000240 000240 
    003347  aa   000004 000000 
    003350  55   000245 000245 
    003351  aa   000004 000000 
    003352  55   000250 000250 
    003353  aa   000004 000000 
    003354  55   000256 000256 
    003355  aa   000004 000000 
    003356  55   000262 000262 
    003357  aa   000004 000000 
    003360  55   000265 000265 
    003361  aa   000004 000000 
    003362  55   000275 000271 
    003363  aa   000004 000000 
    003364  55   000302 000302 
    003365  aa   000004 000000 
    003366  55   000305 000305 
    003367  aa   000004 000000 
    003370  55   000311 000311 
    003371  aa   000004 000000 
    003372  55   000316 000316 
    003373  aa   000004 000000 
    003374  55   000323 000323 
    003375  aa   000004 000000 
    003376  55   000326 000326 
    003377  aa   000004 000000 
    003400  55   000333 000333 
    003401  aa   000004 000000 
    003402  55   000336 000336 
    003403  aa   000001 000000 
    003404  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    003405  5a   000343 000000 
    003406  5a   000345 000000 
    003407  5a   000347 000000 
    003410  5a   000351 000000 
    003411  5a   000353 000000 
    003412  5a   000355 000000 
    003413  5a   000357 000000 
    003414  5a   000361 000000 
    003415  5a   000363 000000 
    003416  5a   000365 000000 
    003417  5a   000367 000000 
    003420  5a   000371 000000 
    003421  5a   000373 000000 
    003422  5a   000375 000000 
    003423  5a   000377 000000 
    003424  5a   000401 000000 
    003425  5a   000403 000000 
    003426  5a   000405 000000 
    003427  5a   000407 000000 
    003430  5a   000411 000000 
    003431  5a   000413 000000 
    003432  5a   000415 000000 
    003433  5a   000417 000000 
    003434  5a   000421 000000 
    003435  5a   000423 000000 
    003436  5a   000425 000000 
    003437  5a   000427 000000 
    003440  5a   000431 000000 
    003441  5a   000433 000000 
    003442  5a   000435 000000 
    003443  5a   000437 000000 
    003444  5a   000441 000000 
    003445  5a   000443 000000 
    003446  5a   000445 000000 
    003447  5a   000447 000000 
    003450  5a   000451 000000 
    003451  5a   000453 000000 
    003452  5a   000455 000000 
    003453  5a   000457 000000 
    003454  5a   000461 000000 
    003455  5a   000463 000000 
    003456  5a   000465 000000 
    003457  5a   000467 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   002712 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000136 
    000007  a2   000000 000000 
    000010  9a   777770 0000 46         linus_self_identify|linus_self_identify
    000011  5a   000545 0000 00
    000012  9a   777766 0000 46         linus_apply|linus_apply
    000013  5a   000544 0000 00
    000014  9a   777764 0000 46         linus_assign_values|linus_assign_values
    000015  5a   000543 0000 00
    000016  9a   777762 0000 46         linus_close|linus_close
    000017  5a   000542 0000 00
    000020  9a   777760 0000 46         linus_column_value|linus_column_value
    000021  5a   000541 0000 00
    000022  9a   777756 0000 46         linus_create_list|linus_create_list
    000023  5a   000540 0000 00
    000024  9a   777754 0000 46         linus_declare|linus_declare
    000025  5a   000537 0000 00
    000026  9a   777752 0000 46         linus_dtt|linus_dtt
    000027  5a   000536 0000 00
    000030  9a   777750 0000 46         linus_scope_manager|delete_scope
    000031  5a   000535 0000 00
    000032  9a   777746 0000 46         linus_delete|linus_delete
    000033  5a   000534 0000 00
    000034  9a   777744 0000 46         linus_dltt|linus_dltt
    000035  5a   000533 0000 00
    000036  9a   777742 0000 46         linus_display|linus_display
    000037  5a   000532 0000 00
    000040  9a   777740 0000 46         linus_display_builtins|linus_display_builtins
    000041  5a   000531 0000 00
    000042  9a   777736 0000 46         format_line|format_line
    000043  5a   000530 0000 00
    000044  9a   777734 0000 46         linus_input_query|linus_input_query
    000045  5a   000527 0000 00
    000046  9a   777732 0000 46         linus_invoke|linus_invoke
    000047  5a   000526 0000 00
    000050  9a   777730 0000 46         linus_lila|linus_lila
    000051  5a   000525 0000 00
    000052  9a   777726 0000 46         linus_list_db|linus_list_db
    000053  5a   000524 0000 00
    000054  9a   777724 0000 46         linus_list_format_options|linus_list_format_options
    000055  5a   000523 0000 00
    000056  9a   777722 0000 46         linus_list_scope|linus_list_scope
    000057  5a   000522 0000 00
    000060  9a   777720 0000 46         linus_list_values|linus_list_values
    000061  5a   000521 0000 00
    000062  9a   777716 0000 46         ltrim|ltrim
    000063  5a   000520 0000 00
    000064  9a   777714 0000 46         linus_modify|linus_modify
    000065  5a   000517 0000 00
    000066  9a   777712 0000 46         linus_open|linus_open
    000067  5a   000516 0000 00
    000070  9a   777710 0000 46         linus_opened_database|linus_opened_database
    000071  5a   000515 0000 00
    000072  9a   777706 0000 46         picture|picture
    000073  5a   000514 0000 00
    000074  9a   777704 0000 46         linus_print|linus_print
    000075  5a   000513 0000 00
    000076  9a   777702 0000 46         linus_print_query|linus_print_query
    000077  5a   000512 0000 00
    000100  9a   777700 0000 46         linus_qedx|linus_qedx
    000101  5a   000511 0000 00
    000102  9a   777676 0000 46         linus_report|linus_report
    000103  5a   000510 0000 00
    000104  9a   777674 0000 46         linus_restore_format_option|linus_restore_format_option
    000105  5a   000507 0000 00
    000106  9a   777672 0000 46         rtrim|rtrim
    000107  5a   000506 0000 00
    000110  9a   777670 0000 46         linus_save_format_options|linus_save_format_options
    000111  5a   000505 0000 00
    000112  9a   777666 0000 46         linus_save_query|linus_save_query
    000113  5a   000504 0000 00
    000114  9a   777664 0000 46         linus_set_format_options|linus_set_format_options
    000115  5a   000503 0000 00
    000116  9a   777662 0000 46         linus_set_mode|linus_set_mode
    000117  5a   000502 0000 00
    000120  9a   777660 0000 46         linus_scope_manager|set_scope
    000121  5a   000501 0000 00
    000122  9a   777656 0000 46         linus_store|linus_store
    000123  5a   000500 0000 00
    000124  9a   777654 0000 46         linus_store_from_data_file|linus_store_from_data_file
    000125  5a   000477 0000 00
    000126  9a   777652 0000 46         string|string
    000127  5a   000476 0000 00
    000130  9a   777650 0000 46         linus_translate_query|linus_translate_query
    000131  5a   000475 0000 00
    000132  9a   777646 0000 46         linus_write|linus_write
    000133  5a   000474 0000 00
    000134  9a   777644 0000 46         linus_write_data_file|linus_write_data_file
    000135  5a   000473 0000 00
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000004 
    000004  aa   000000 114732 
    000005  aa   732732 062314 
    000006  aa   000000 114775 
    000007  aa   676167 450236 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000357 
    000020  aa   000000 000147 
    000021  aa   000000 000325 
    000022  aa   000347 000147 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   040066 056067 
    000030  aa   040040 117143 
    000031  aa   164157 142145 
    000032  aa   162040 061071 
    000033  aa   070066 040040 
    000034  aa   107112 157150 
    000035  aa   156163 157156 
    000036  aa   056123 171163 
    000037  aa   115141 151156 
    000040  aa   164056 141040 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   154151 163164 
    000045  aa   040040 040040 
    000046  aa   040040 040040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040040 040040 
    000057  aa   040040 040040 
    000060  aa   040040 040040 
    000061  aa   040040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000003 
    000066  aa   000102 000064 
    000067  aa   147740 446244 
    000070  aa   000000 114774 
    000071  aa   461030 600000 
    000072  aa   000117 000050 
    000073  aa   133055 020064 
    000074  aa   000000 113310 
    000075  aa   612334 200000 
    000076  aa   000131 000066 
    000077  aa   147714 750316 
    000100  aa   000000 114774 
    000101  aa   453561 000000 
    000102  aa   076163 160145          >special_ldd>install>MR12.0-1206>linus_rq_table_.alm
    000103  aa   143151 141154 
    000104  aa   137154 144144 
    000105  aa   076151 156163 
    000106  aa   164141 154154 
    000107  aa   076115 122061 
    000110  aa   062056 060055 
    000111  aa   061062 060066 
    000112  aa   076154 151156 
    000113  aa   165163 137162 
    000114  aa   161137 164141 
    000115  aa   142154 145137 
    000116  aa   056141 154155 
    000117  aa   076154 144144          >ldd>include>ssu_request_macros.incl.alm
    000120  aa   076151 156143 
    000121  aa   154165 144145 
    000122  aa   076163 163165 
    000123  aa   137162 145161 
    000124  aa   165145 163164 
    000125  aa   137155 141143 
    000126  aa   162157 163056 
    000127  aa   151156 143154 
    000130  aa   056141 154155 
    000131  aa   076163 160145          >special_ldd>install>MR12.0-1206>stack_header.incl.alm
    000132  aa   143151 141154 
    000133  aa   137154 144144 
    000134  aa   076151 156163 
    000135  aa   164141 154154 
    000136  aa   076115 122061 
    000137  aa   062056 060055 
    000140  aa   061062 060066 
    000141  aa   076163 164141 
    000142  aa   143153 137150 
    000143  aa   145141 144145 
    000144  aa   162056 151156 
    000145  aa   143154 056141 
    000146  aa   154155 040040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

         236    .._00000.call            linus_rq_table_:     34.
        2002    .._00000.info            linus_rq_table_:     34.
         453    .._00000.names           linus_rq_table_:     34.
         241    .._00001.call            linus_rq_table_:     40.
        2011    .._00001.info            linus_rq_table_:     40.
         464    .._00001.names           linus_rq_table_:     40.
         244    .._00002.call            linus_rq_table_:     46.
        2026    .._00002.info            linus_rq_table_:     46.
         505    .._00002.names           linus_rq_table_:     46.
         247    .._00003.call            linus_rq_table_:     54.
         526    .._00003.names           linus_rq_table_:     54.
         252    .._00004.call            linus_rq_table_:     60.
        2042    .._00004.info            linus_rq_table_:     60.
         537    .._00004.names           linus_rq_table_:     60.
         255    .._00005.call            linus_rq_table_:     66.
        2053    .._00005.info            linus_rq_table_:     66.
         560    .._00005.names           linus_rq_table_:     66.
         260    .._00006.call            linus_rq_table_:     72.
        2065    .._00006.info            linus_rq_table_:     72.
         601    .._00006.names           linus_rq_table_:     72.
         263    .._00007.call            linus_rq_table_:     80.
         622    .._00007.names           linus_rq_table_:     80.
         266    .._00010.call            linus_rq_table_:     86.
        2100    .._00010.info            linus_rq_table_:     86.
         633    .._00010.names           linus_rq_table_:     86.
         271    .._00011.call            linus_rq_table_:     92.
        2110    .._00011.info            linus_rq_table_:     92.
         654    .._00011.names           linus_rq_table_:     92.
         274    .._00012.call            linus_rq_table_:     98.
        2124    .._00012.info            linus_rq_table_:     98.
         675    .._00012.names           linus_rq_table_:     98.
         277    .._00013.call            linus_rq_table_:    104.
        2142    .._00013.info            linus_rq_table_:    104.
         716    .._00013.names           linus_rq_table_:    104.
         302    .._00014.call            linus_rq_table_:    112.
         737    .._00014.names           linus_rq_table_:    112.
         305    .._00015.call            linus_rq_table_:    118.
        2150    .._00015.info            linus_rq_table_:    118.
         750    .._00015.names           linus_rq_table_:    118.
         310    .._00016.call            linus_rq_table_:    124.
        2162    .._00016.info            linus_rq_table_:    124.
         771    .._00016.names           linus_rq_table_:    124.
         313    .._00017.call            linus_rq_table_:    130.
        2176    .._00017.info            linus_rq_table_:    130.
        1012    .._00017.names           linus_rq_table_:    130.
         316    .._00020.call            linus_rq_table_:    135.
        2210    .._00020.info            linus_rq_table_:    135.
        1033    .._00020.names           linus_rq_table_:    135.
         321    .._00021.call            linus_rq_table_:    141.
        2224    .._00021.info            linus_rq_table_:    141.
        1054    .._00021.names           linus_rq_table_:    141.
         324    .._00022.call            linus_rq_table_:    147.
        2237    .._00022.info            linus_rq_table_:    147.
        1075    .._00022.names           linus_rq_table_:    147.
         327    .._00023.call            linus_rq_table_:    153.
        2255    .._00023.info            linus_rq_table_:    153.
        1116    .._00023.names           linus_rq_table_:    153.
         332    .._00024.call            linus_rq_table_:    159.
        2263    .._00024.info            linus_rq_table_:    159.
        1127    .._00024.names           linus_rq_table_:    159.
         335    .._00025.call            linus_rq_table_:    165.
        2300    .._00025.info            linus_rq_table_:    165.
        1150    .._00025.names           linus_rq_table_:    165.
         340    .._00026.call            linus_rq_table_:    171.
        2310    .._00026.info            linus_rq_table_:    171.
        1171    .._00026.names           linus_rq_table_:    171.
         343    .._00027.call            linus_rq_table_:    177.
        2325    .._00027.info            linus_rq_table_:    177.
        1212    .._00027.names           linus_rq_table_:    177.
         346    .._00030.call            linus_rq_table_:    182.
        2343    .._00030.info            linus_rq_table_:    182.
        1233    .._00030.names           linus_rq_table_:    182.
         351    .._00031.call            linus_rq_table_:    188.
        2356    .._00031.info            linus_rq_table_:    188.
        1244    .._00031.names           linus_rq_table_:    188.
         354    .._00032.call            linus_rq_table_:    194.
        2371    .._00032.info            linus_rq_table_:    194.
        1265    .._00032.names           linus_rq_table_:    194.
         357    .._00033.call            linus_rq_table_:    200.
        2375    .._00033.info            linus_rq_table_:    200.
        1306    .._00033.names           linus_rq_table_:    200.
         362    .._00034.call            linus_rq_table_:    205.
        2410    .._00034.info            linus_rq_table_:    205.
        1327    .._00034.names           linus_rq_table_:    205.
         365    .._00035.call            linus_rq_table_:    211.
        2423    .._00035.info            linus_rq_table_:    211.
        1350    .._00035.names           linus_rq_table_:    211.
         370    .._00036.call            linus_rq_table_:    219.
        1371    .._00036.names           linus_rq_table_:    219.
         373    .._00037.call            linus_rq_table_:    225.
        2436    .._00037.info            linus_rq_table_:    225.
        1402    .._00037.names           linus_rq_table_:    225.
         376    .._00040.call            linus_rq_table_:    231.
        2447    .._00040.info            linus_rq_table_:    231.
        1423    .._00040.names           linus_rq_table_:    231.
         401    .._00041.call            linus_rq_table_:    237.
        2462    .._00041.info            linus_rq_table_:    237.
        1444    .._00041.names           linus_rq_table_:    237.
         404    .._00042.call            linus_rq_table_:    243.
        2476    .._00042.info            linus_rq_table_:    243.
        1465    .._00042.names           linus_rq_table_:    243.
         407    .._00043.call            linus_rq_table_:    248.
        2507    .._00043.info            linus_rq_table_:    248.
        1506    .._00043.names           linus_rq_table_:    248.
         412    .._00044.call            linus_rq_table_:    254.
        2522    .._00044.info            linus_rq_table_:    254.
        1517    .._00044.names           linus_rq_table_:    254.
         415    .._00045.call            linus_rq_table_:    260.
        2532    .._00045.info            linus_rq_table_:    260.
        1540    .._00045.names           linus_rq_table_:    260.
         420    .._00046.call            linus_rq_table_:    266.
        2543    .._00046.info            linus_rq_table_:    266.
        1561    .._00046.names           linus_rq_table_:    266.
         423    .._00047.call            linus_rq_table_:    272.
        2553    .._00047.info            linus_rq_table_:    272.
        1602    .._00047.names           linus_rq_table_:    272.
         426    .._00050.call            linus_rq_table_:    278.
        2566    .._00050.info            linus_rq_table_:    278.
        1623    .._00050.names           linus_rq_table_:    278.
         431    .._00051.call            linus_rq_table_:    284.
        2603    .._00051.info            linus_rq_table_:    284.
        1644    .._00051.names           linus_rq_table_:    284.
         434    .._00052.call            linus_rq_table_:    290.
        2620    .._00052.info            linus_rq_table_:    290.
        1665    .._00052.names           linus_rq_table_:    290.
         437    .._00053.call            linus_rq_table_:    295.
        2636    .._00053.info            linus_rq_table_:    295.
        1706    .._00053.names           linus_rq_table_:    295.
         442    .._00054.call            linus_rq_table_:    301.
        2651    .._00054.info            linus_rq_table_:    301.
        1717    .._00054.names           linus_rq_table_:    301.
         445    .._00055.call            linus_rq_table_:    307.
        2665    .._00055.info            linus_rq_table_:    307.
        1740    .._00055.names           linus_rq_table_:    307.
         450    .._00056.call            linus_rq_table_:    313.
        2677    .._00056.info            linus_rq_table_:    313.
        1761    .._00056.names           linus_rq_table_:    313.
      600000    .dft_mrsf                linus_rq_table_:     26,  135,  182,  205,  248,  295.
           0    .dft_mruf                linus_rq_table_:     26.
      400000    .dft_sf                  linus_rq_table_:     26.
           0    .dft_uf                  linus_rq_table_:     26,   34,   40,   46,   54,   60,   66,   72,   80,   86,   92,
                                                              98,  104,  112,  118,  124,  130,  141,  147,  153,  159,  165,
                                                             171,  177,  188,  194,  200,  211,  219,  225,  231,  237,  243,
                                                             254,  260,  266,  272,  278,  284,  290,  301,  307,  313.
          52    .multics_doc_lth         linus_rq_table_:    135,  182,  205,  248,  295.
       76233    .rc                      linus_rq_table_:     26,   34,   40,   46,   54,   60,   66,   72,   80,   86,   92,
                                                              98,  104,  112,  118,  124,  130,  135,  141,  147,  153,  159,
                                                             165,  171,  177,  182,  188,  194,  200,  205,  211,  219,  225,
                                                             231,  237,  243,  248,  254,  260,  266,  272,  278,  284,  290,
                                                             295,  301,  307,  313,  315.
      400000    .sf                      linus_rq_table_:     34,   40,   46,   54,   60,   66,   72,   80,   86,   92,   98,
                                                             104,  112,  118,  124,  130,  135,  141,  147,  153,  159,  165,
                                                             171,  177,  182,  188,  194,  200,  205,  211,  219,  225,  231,
                                                             237,  243,  248,  254,  260,  266,  272,  278,  284,  290,  295,
                                                             301,  307,  313.
           0    .uf                      linus_rq_table_:     34,   40,   46,   54,   60,   66,   72,   80,   86,   92,   98,
                                                             104,  112,  118,  124,  130,  135,  141,  147,  153,  159,  165,
                                                             171,  177,  182,  188,  194,  200,  205,  211,  219,  225,  231,
                                                             237,  243,  248,  254,  260,  266,  272,  278,  284,  290,  295,
                                                             301,  307,  313.
         236    calls                    linus_rq_table_:     34,   40,   46,   54,   60,   66,   72,   80,   86,   92,   98,
                                                             104,  112,  118,  124,  130,  135,  141,  147,  153,  159,  165,
                                                             171,  177,  182,  188,  194,  200,  205,  211,  219,  225,  231,
                                                             237,  243,  248,  254,  260,  266,  272,  278,  284,  290,  295,
                                                             301,  307,  313,
                                         ssu_request_macros:       311,  314.
        1170    call_offset              stack_header:        80.
                delete_scope             linus_rq_table_:     98.
        1174    entry_offset             stack_header:        84.
      200000    flags.allow_af           linus_rq_table_:     26,   66,  130,  200,
                                         ssu_request_macros:        33.
      600000    flags.allow_both         linus_rq_table_:     46,   98,  135,  165,  171,  177,  182,  194,  205,  225,  248,
                                                             278,  295,
                                         ssu_request_macros:        34.
      400000    flags.allow_command      linus_rq_table_:     26,   34,   40,   54,   60,   72,   80,   86,   92,  104,  112,
                                                             118,  124,  141,  147,  153,  159,  188,  211,  219,  231,  237,
                                                             243,  254,  260,  266,  272,  284,  290,  301,  307,  313,
                                         ssu_request_macros:        32.
       10000    flags.dont_list          linus_rq_table_:     54,   80,  112,  135,  182,  205,  219,  248,  295,
                                         ssu_request_macros:        40.
       20000    flags.dont_summarize     linus_rq_table_:     54,   80,  112,  135,  182,  205,  219,  248,  295,
                                         ssu_request_macros:        39.
       40000    flags.multics_request    linus_rq_table_:    135,  182,  205,  248,  295,
                                         ssu_request_macros:        37.
      100000    flags.unimplemented      ssu_request_macros:        36.
        4000    flags.unknown            ssu_request_macros:        42.
                format_line              linus_rq_table_:    135.
        2002    info                     linus_rq_table_:     34,   40,   46,   60,   66,   72,   86,   92,   98,  104,  118,
                                                             124,  130,  135,  141,  147,  153,  159,  165,  171,  177,  182,
                                                             188,  194,  200,  205,  211,  225,  231,  237,  243,  248,  254,
                                                             260,  266,  272,  278,  284,  290,  295,  301,  307,  313,
                                         ssu_request_macros:       313,  314.
                linus_apply              linus_rq_table_:     40.
                linus_assign_values      linus_rq_table_:     46,   54.
                linus_close              linus_rq_table_:     60.
                linus_column_value       linus_rq_table_:     66.
                linus_create_list        linus_rq_table_:     72,   80.
                linus_declare            linus_rq_table_:     86.
                linus_delete             linus_rq_table_:    104,  112.
                linus_display            linus_rq_table_:    124.
                linus_display_builtins   linus_rq_table_:    130.
                linus_dltt               linus_rq_table_:    118.
                linus_dtt                linus_rq_table_:     92.
                linus_input_query        linus_rq_table_:    141.
                linus_invoke             linus_rq_table_:    147.
                linus_lila               linus_rq_table_:    153.
                linus_list_db            linus_rq_table_:    159.
                linus_list_format_options      linus_rq_table_:    165.
                linus_list_scope         linus_rq_table_:    171.
                linus_list_values        linus_rq_table_:    177.
                linus_modify             linus_rq_table_:    188.
                linus_open               linus_rq_table_:    194.
                linus_opened_database    linus_rq_table_:    200.
                linus_print              linus_rq_table_:    211,  219.
                linus_print_query        linus_rq_table_:    225.
                linus_qedx               linus_rq_table_:    231.
                linus_report             linus_rq_table_:    237.
                linus_restore_format_option    linus_rq_table_:    243.
           0    linus_rq_table_          linus_rq_table_:     26.
          57    linus_rq_table_.rc       linus_rq_table_:     26,  315.
                linus_save_format_options      linus_rq_table_:    254.
                linus_save_query         linus_rq_table_:    260.
                linus_scope_manager      linus_rq_table_:     98,  278.
                linus_self_identify      linus_rq_table_:     34.
                linus_set_format_options       linus_rq_table_:    266.
                linus_set_mode           linus_rq_table_:    272.
                linus_store              linus_rq_table_:    284.
                linus_store_from_data_file     linus_rq_table_:    290.
                linus_translate_query    linus_rq_table_:    301.
                linus_write              linus_rq_table_:    307.
                linus_write_data_file    linus_rq_table_:    313.
                ltrim                    linus_rq_table_:    182.
         453    names                    linus_rq_table_:     34,   40,   46,   54,   60,   66,   72,   80,   86,   92,   98,
                                                             104,  112,  118,  124,  130,  135,  141,  147,  153,  159,  165,
                                                             171,  177,  182,  188,  194,  200,  205,  211,  219,  225,  231,
                                                             237,  243,  248,  254,  260,  266,  272,  278,  284,  290,  295,
                                                             301,  307,  313,
                                         ssu_request_macros:       312,  314.
                picture                  linus_rq_table_:    205.
        1171    push_offset              stack_header:        81.
        1173    return_no_pop_offset     stack_header:        83.
        1172    return_offset            stack_header:        82.
                rtrim                    linus_rq_table_:    248.
                set_scope                linus_rq_table_:    278.
          73    stach_header.trace_top_ptr     stack_header:        62.
          66    stack_header.assign_linkage_ptr      stack_header:        59.
          32    stack_header.bar_mode_sp       stack_header:        42.
          36    stack_header.call_op_ptr       stack_header:        44.
          10    stack_header.clr_ptr     stack_header:        27.
           6    stack_header.combined_stat_ptr       stack_header:        25.
           4    stack_header.cpm_data_ptr      stack_header:        24.
          13    stack_header.cpm_enabled       stack_header:        32.
          13    stack_header.cur_lot_size      stack_header:        31.
          64    stack_header.ect_ptr     stack_header:        58.
          46    stack_header.entry_op_ptr      stack_header:        49.
          70    stack_header.heap_header_ptr   stack_header:        60.
          74    stack_header.in_trace    stack_header:        63.
          52    stack_header.isot_ptr    stack_header:        52.
          26    stack_header.lot_ptr     linus_rq_table_:     34,   40,   46,   54,   60,   66,   72,   80,   86,   92,   98,
                                                             104,  112,  118,  124,  130,  135,  141,  147,  153,  159,  165,
                                                             171,  177,  182,  188,  194,  200,  205,  211,  219,  225,  231,
                                                             237,  243,  248,  254,  260,  266,  272,  278,  284,  290,  295,
                                                             301,  307,  313,
                                         stack_header:        39.
          12    stack_header.main_proc_invoked       stack_header:        29.
          12    stack_header.max_lot_size      stack_header:        28.
          20    stack_header.parent_ptr  stack_header:        36.
          34    stack_header.pl1_operators_ptr       stack_header:        43.
          40    stack_header.push_op_ptr       stack_header:        46.
          42    stack_header.return_op_ptr     stack_header:        47.
          44    stack_header.ret_no_pop_op_ptr       stack_header:        48.
          62    stack_header.rnt_ptr     stack_header:        57.
          12    stack_header.run_unit_depth    stack_header:        30.
          54    stack_header.sct_ptr     stack_header:        53.
          30    stack_header.signal_ptr  stack_header:        41.
          22    stack_header.stack_begin_ptr   stack_header:        37.
          24    stack_header.stack_end_ptr     stack_header:        38.
          14    stack_header.system_free_ptr   stack_header:        33.
          60    stack_header.sys_link_info_ptr       stack_header:        56.
          72    stack_header.trace_frames      stack_header:        61.
          50    stack_header.trans_op_tv_ptr   stack_header:        51.
          56    stack_header.unwinder_ptr      stack_header:        54.
          16    stack_header.user_free_ptr     stack_header:        34.
         100    stack_header_end         stack_header:        64.
                string                   linus_rq_table_:    295.
           0    tables                   linus_rq_table_:     26,   34,   40,   46,   54,   60,   66,   72,   80,   86,   92,
                                                              98,  104,  112,  118,  124,  130,  135,  141,  147,  153,  159,
                                                             165,  171,  177,  182,  188,  194,  200,  205,  211,  219,  225,
                                                             231,  237,  243,  248,  254,  260,  266,  272,  278,  284,  290,
                                                             295,  301,  307,  313,
                                         ssu_request_macros:       310,  314.
           0    trace_frames.count       stack_header:        69.
           1    trace_frames.top_ptr     stack_header:        70.
         551    tv_offset                stack_header:        75,   80,   81,   82,   83,   84.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
