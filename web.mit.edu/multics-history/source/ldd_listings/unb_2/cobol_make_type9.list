	COMPILATION LISTING OF SEGMENT cobol_make_type9
	Compiled by: Multics PL/I Compiler, Release 31b, of April 24, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 05/24/89  0945.7 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
       17*     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
       18*     MCR8060 cobol_make_type9.pl1 Reformatted code to new Cobol standard.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 /* Modified on 04/20/77 by Bob Chang to add new entry copy_sub.	*/
       23 /* Modified on 01/14/77 by ORN to signal command_abort_ rather than cobol_compiler_error */
       24 /* Modified since Version 2.0 */
       25 
       26 /*{*/
       27 /* format: style3 */
       28 cobol_make_type9:
       29      proc (new9_ptr, ptr2_3);				/* the procedure is not a valid entry point*/
       30 						/*}*/
       31 						/*  DECLARATIONS OF BUILTIN FUNCTIONS  */
       32 
       33 dcl	addr		builtin;
       34 dcl	addrel		builtin;
       35 dcl	binary		builtin;
       36 dcl	null		builtin;
       37 dcl	rel		builtin;
       38 dcl	substr		builtin;
       39 
       40 
       41 
       42 /*{*/
       43 
       44 /* TYPE2_3 ENTRY */
       45 
       46 type2_3:
       47      entry (new9_ptr, ptr2_3);			/*
       48*create a type 9 token, using a type 2 token (numeric literal)
       49*or a type3 token (alphanumeric literal) as a model. Pool the
       50*literal in the type 2 or type 3 token.
       51**/
       52 dcl	new9_ptr		ptr;
       53 dcl	old9_ptr		ptr;
       54 dcl	ptr2_3		ptr;			/*
       55* new9_ptr	is a pointer to the type 9 token. (input/output)
       56*	(a) If not null the caller will provide the space
       57*	    to hold the token.
       58*	(b) If null this utility will provide the space and
       59*	    will return the address of the
       60*	    token in this parameter.
       61* ptr2_3	is a pointer to a type 2 or a type 3 token. (input)
       62**/
       63 						/*}*/
       64 dcl	1 token_overflow	static,
       65 	  2 name		char (32) init ("cobol_make_type9"),
       66 	  2 message_len	fixed bin (35) init (58),
       67 	  2 message	char (58) init ("The temporary token area has run over the end of a segment");
       68 dcl	1 con_overflow	static,
       69 	  2 name		char (32) init ("cobol_make_type9"),
       70 	  2 message_len	fixed bin (35) init (60),
       71 	  2 message	char (60) init ("object time instructions plus constants exceed 262,144 words");
       72 dcl	cobol_pool$search_op
       73 			entry (char (*), fixed bin, fixed bin (24), fixed bin);
       74 dcl	signal_		entry (char (*), ptr, ptr);
       75 dcl	1 clear_t9	aligned based (dn_ptr),
       76 	  2 clear_t9_wd	(t9_wd_size) fixed bin;
       77 dcl	1 clear_t9_sub	aligned based (dn_ptr),
       78 	  2 clear_t9_sub_wd (t9_sub_wd_size) fixed bin;
       79 dcl	t9_string		char (t9_char_size) based;
       80 dcl	t9_sub_string	char (t9_sub_char_size) based;
       81 dcl	hold_lit		char (4096);
       82 dcl	lit_size		fixed bin;
       83 dcl	lit_wds		fixed bin;
       84 dcl	t9_char_size	static fixed bin init (112);	/* size of type 9 token in chars */
       85 dcl	t9_sub_char_size	static fixed bin init (176);	/* size of type 9 token in chars */
       86 dcl	t9_wd_size	static fixed bin init (28);	/* size of type 9 token in words */
       87 dcl	t9_sub_wd_size	static fixed bin init (44);	/* size of type 9 token in words */
       88 dcl	dn_ptr		ptr;
       89 dcl	i		fixed bin;
       90 /**** change to 1048576 when get release 1.0  ***/
       91 dcl	pool		char (262144) based (pool_ptr);
       92 dcl	pool_ptr		ptr;
       93 dcl	pool_index	fixed bin (24);
       94 dcl	pool_remainder	fixed bin (24);
       95 dcl	index_result	fixed bin (24);
       96 dcl	temp		fixed bin (24);
       97 dcl	in_op		fixed bin;
       98 
       99 /* get space for type 9 token (if not provided) */
      100 	call get_token9_space;
      101 
      102 /* put information in the token */
      103 
      104 /* setup basic information in the token */
      105 	call basic_info;
      106 	data_name.display = "1"b;
      107 	alit_ptr = ptr2_3;
      108 	nlit_ptr = ptr2_3;
      109 	data_name.seg_num = 3000;			/* constants */
      110 	if numeric_lit.type = 2
      111 	then do;					/* numeric literal (type 2) */
      112 		data_name.places_left = numeric_lit.places_left;
      113 		data_name.places_right = numeric_lit.places_right;
      114 		data_name.numeric = "1"b;
      115 		if numeric_lit.sign ^= " "
      116 		then do;				/* signed literal */
      117 			data_name.item_signed = "1"b;
      118 			data_name.sign_separate = "1"b;
      119 			data_name.sign_type = "100"b;
      120 			lit_size = numeric_lit.places + 1;
      121 			hold_lit = numeric_lit.sign || numeric_lit.literal;
      122 		     end;
      123 		else do;
      124 			lit_size = numeric_lit.places;
      125 			hold_lit = numeric_lit.literal;
      126 		     end;
      127 		data_name.item_length = lit_size;
      128 	     end;
      129 	else do;					/* alphanumeric literal (type 3) */
      130 		lit_size = alphanum_lit.lit_size;
      131 		hold_lit = alphanum_lit.string;
      132 		data_name.alphanum = "1"b;
      133 		data_name.item_length = alphanum_lit.lit_size;
      134 	     end;
      135 
      136 	call cobol_pool$search_op (substr (hold_lit, 1, lit_size), 0, temp, in_op);
      137 						/*6/10/76*/
      138 	if in_op = 1
      139 	then data_name.seg_num = 3;
      140 	data_name.offset = temp;
      141 	return;					/*{*/
      142 
      143 /* COPY ENTRY*/
      144 
      145 copy:
      146      entry (new9_ptr, old9_ptr);			/*
      147*This entry creates a type 9 token by copying another
      148*type 9 token.
      149**/
      150 						/*
      151* new9_ptr	is a pointer to the new type 9 token.
      152*	See cobol_make_type9$type2_3 for additional
      153*	details. (input/output)
      154* old9_ptr	is a pointer to the original type 9
      155*	token. (input)
      156**/
      157 						/*}*/
      158 
      159 /* get space for type 9 token (if not provided) */
      160 	call get_token9_space;			/* copy the token */
      161 	substr (new9_ptr -> t9_string, 1, t9_char_size) = substr (old9_ptr -> t9_string, 1, t9_char_size);
      162 	return;
      163 
      164 
      165 copy_sub:
      166      entry (new9_ptr, old9_ptr);			/*
      167*This entry creates a type 9 token by copying another
      168*type 9 token.
      169**/
      170 						/*
      171* new9_ptr	is a pointer to the new type 9 token.
      172*	See cobol_make_type9$type2_3 for additional
      173*	details. (input/output)
      174* old9_ptr	is a pointer to the original type 9
      175*	token. (input)
      176**/
      177 						/*}*/
      178 
      179 /* get space for type 9 token (if not provided) */
      180 	call get_token9_sub_space;			/* copy the token */
      181 	substr (new9_ptr -> t9_sub_string, 1, t9_sub_char_size) =
      182 	     substr (old9_ptr -> t9_sub_string, 1, t9_sub_char_size);
      183 	return;					/*{*/
      184 
      185 /* ALPHANUMERIC ENTRY*/
      186 
      187 alphanumeric:
      188      entry (new9_ptr, segno, char_offset, size);		/* create a type 9 token for an alphanumeric data item. */
      189 
      190 dcl	segno		fixed bin;
      191 dcl	char_offset	fixed bin (24);
      192 dcl	size		fixed bin (24);
      193 
      194 /*
      195* new9_ptr	is a pointer to the type 9 token.
      196*	See cobol_make_type9$type2_3 for additional details.
      197*	(input/output)
      198* segno	is the artificial internal segment number, that can
      199*	represent cobol data, stack, constant, multics linkage
      200*	section. (including an offset from the link),
      201*	definition section, symbol section, cobol linkage
      202*	section.
      203*	(input)
      204* char_offset is the character offset. If segno represents a
      205*	constant, then char_offset represents the
      206*	offset from the end of the constants.
      207*	(input)
      208* size	is the size, in characters. (input)
      209*
      210* Notes:	the token will be cleared to zeros initially.
      211* */
      212 /*}*/
      213 
      214 /* get space for type 9 token (if not provided) */
      215 	call get_token9_space;			/* set up basic information in the token */
      216 	call basic_info;
      217 	data_name.display = "1"b;
      218 	data_name.seg_num = segno;
      219 	data_name.offset = char_offset;
      220 	data_name.alphanum = "1"b;
      221 	data_name.item_length = size;
      222 	return;					/*{*/
      223 
      224 /* DECIMAL_9BIT ENTRY */
      225 
      226 decimal_9bit:
      227      entry (new9_ptr, segno, char_offset, places_left, places_right);
      228 						/* create a type 9 token for a 9 bit decimal data item */
      229 
      230 /*dcl	segno fixed bin; */
      231 /*dcl	char_offset fixed bin (24); */
      232 dcl	places_left	fixed bin;
      233 dcl	places_right	fixed bin;		/*
      234* new9_ptr	see "cobol_make_type9$alphanumeric",
      235*	(input/output)
      236* segno	is the artificial internal segment number,
      237*	that can represent cobol data, stack,constant,
      238*	cobol linkage section. (input)
      239* char_offset  See "cobol_make_type9$alphanumeric".
      240*	(input)
      241* places_left is the number of digits left of the decimal point.
      242*	Does not include sign.
      243*	(input)
      244* places_right is the number of digits right of the
      245*	decimal point. (input)
      246*
      247* Notes:
      248* 1. The sign is assumed to be leading and seperate.
      249*   the size of the data item is assumed to be
      250*   places_left + places_right + 1.
      251*   The caller can modify this if the need arises.
      252* 2. The token will be cleared to zeros initially.
      253* */
      254 						/*}*/
      255 
      256 /* get space for type 9 token (if not provided) */
      257 	call get_token9_space;			/* set up basic information in the token */
      258 	call basic_info;
      259 	data_name.display = "1"b;
      260 	data_name.seg_num = segno;
      261 	data_name.offset = char_offset;
      262 	data_name.places_left = places_left;
      263 	data_name.places_right = places_right;
      264 	data_name.item_length = places_left + places_right + 1;
      265 	data_name.numeric = "1"b;
      266 	data_name.item_signed = "1"b;
      267 	data_name.sign_separate = "1"b;
      268 	data_name.sign_type = "100"b;			/*  leading separate  */
      269 	return;					/*{*/
      270 
      271 /*FIXED_BIN_35 ENTRY */
      272 
      273 fixed_bin_35:
      274      entry (new9_ptr, segno, char_offset);		/* create a type 9 token for  a fixed bin 35 data item */
      275 
      276 /*dcl	segno fixed bin; */
      277 /*dcl	char_offset fixed bin (24); */
      278 
      279 /*
      280*See "cobol_make_type9$decimal_9bit" for definitions of
      281*the above.
      282*
      283* Notes:
      284* The token will be cleared to zeros initially.
      285*
      286**/
      287 /*}*/
      288 
      289 /* get space for a type 9 token (if not provided) */
      290 	call get_token9_space;			/* set up basic information in the token */
      291 	call basic_info;
      292 	data_name.seg_num = segno;
      293 	data_name.offset = char_offset;
      294 
      295 /****** Note, need to set data_name.comp_8 ****/
      296 
      297 	return;
      298 
      299 
      300 /* the following is used as a non local go to */
      301 
      302 non_local:
      303 	return;
      304 
      305 
      306 
      307 /*{*/
      308 
      309 /*  SHORT BINARY ENTRY  */
      310 
      311 short_bin:
      312      entry (new9_ptr, segno, char_offset);
      313 
      314 /*  Create a type 9 token for a short binary (18 bit) data item.  */
      315 
      316 
      317 /*  new9_ptr,segno, and char_offset are the same as for all
      318*other entry points in this procedure.  */
      319 
      320 /*}*/
      321 
      322 /*  Get space for type 9 token (if requested)  */
      323 	if new9_ptr = null ()
      324 	then call get_token9_space;
      325 
      326 /*  Set up basic information in the token.  */
      327 	call basic_info;
      328 
      329 /*  Set up particular information in the token.  */
      330 	data_name.numeric = "1"b;
      331 	data_name.bin_18 = "1"b;
      332 	data_name.half_word = "1"b;
      333 	data_name.seg_num = segno;
      334 	data_name.offset = char_offset;
      335 	data_name.item_length = 2;
      336 	data_name.places_left = 6;
      337 
      338 	return;
      339 
      340 /*{*/
      341 
      342 /*  LONG BINARY ENTRY  */
      343 
      344 long_bin:
      345      entry (new9_ptr, segno, char_offset);
      346 
      347 /*  Create a type 9 token for a long binary (36 bit) data item.  */
      348 
      349 
      350 /*  Get space for type 9 token (if requested.)  */
      351 	if new9_ptr = null ()
      352 	then call get_token9_space;
      353 
      354 /*  Set up basic information in the token.  */
      355 	call basic_info;
      356 
      357 /*  Set up particular information in the token.  */
      358 	data_name.numeric = "1"b;
      359 	data_name.bin_36 = "1"b;
      360 	data_name.word = "1"b;
      361 	data_name.seg_num = segno;
      362 	data_name.offset = char_offset;
      363 	data_name.item_length = 4;
      364 	data_name.places_left = 11;
      365 
      366 	return;
      367 
      368 /* GET_TOKEN9_SPACE PROC */
      369 
      370 get_token9_space:
      371      proc;
      372 
      373 /* get space for type 9 token (if not provided) */
      374 
      375 	if new9_ptr = null ()
      376 	then do;
      377 		if (binary (rel (cobol_$temp_token_ptr)) + t9_wd_size) > 262143
      378 		then do;				/* token will not fit in temp token area */
      379 			call signal_ ("command_abort_", null (), addr (token_overflow));
      380 			go to non_local;
      381 		     end;
      382 		new9_ptr = cobol_$temp_token_ptr;
      383 		cobol_$temp_token_ptr = addrel (cobol_$temp_token_ptr, t9_wd_size);
      384 	     end;
      385 	return;
      386      end get_token9_space;
      387 get_token9_sub_space:
      388      proc;
      389 
      390 /* get space for type 9 token (if not provided) */
      391 
      392 	if new9_ptr = null ()
      393 	then do;
      394 		if (binary (rel (cobol_$temp_token_ptr)) + t9_sub_wd_size) > 262143
      395 		then do;				/* token will not fit in temp token area */
      396 			call signal_ ("command_abort_", null (), addr (token_overflow));
      397 			go to non_local;
      398 		     end;
      399 		new9_ptr = cobol_$temp_token_ptr;
      400 		cobol_$temp_token_ptr = addrel (cobol_$temp_token_ptr, t9_sub_wd_size);
      401 	     end;
      402 	return;
      403      end get_token9_sub_space;
      404 
      405 /* BASIC_INFO PROC */
      406 
      407 basic_info:
      408      proc;					/* setp basic information in type 9 token */
      409 	dn_ptr = new9_ptr;				/* clear  token to zeros */
      410 	do i = 1 to t9_wd_size;
      411 	     clear_t9_wd (i) = 0;
      412 	end;
      413 	data_name.type = 9;
      414 	data_name.elementary = "1"b;
      415 	data_name.size = t9_char_size;
      416 	return;
      417      end basic_info;
  1     1 
  1     2 /* BEGIN INCLUDE FILE ... cobol_type2.incl.pl1 */
  1     3 /* Last modified on 11/19/76 by ORN */
  1     4 
  1     5 /*
  1     6*A type 2 numeric literal token is entered into the minpral file by the
  1     7*lexical analysis phase for each numeric literal encountered in the source
  1     8*program.
  1     9**/
  1    10 
  1    11 dcl nlit_ptr ptr;
  1    12 
  1    13 /* BEGIN DECLARATION OF TYPE2 (NUMERIC LITERAL) TOKEN */
  1    14 dcl 1 numeric_lit based (nlit_ptr),
  2     1 
  2     2 /* begin include file ... cobol_TYPE2.incl.pl1 */
  2     3 /* Last modified on 12/28/76 by FCH */
  2     4 
  2     5 		/* header */
  2     6 		2 size fixed bin,
  2     7 		2 line fixed bin,
  2     8 		2 column fixed bin,
  2     9 		2 type fixed bin,
  2    10 		/* body */
  2    11 		2 integral bit(1),
  2    12 		2 floating bit(1),
  2    13 		2 seg_range bit(1),
  2    14 		2 filler1 bit(4),
  2    15 		2 subscript bit(1),
  2    16 		2 sign char(1),
  2    17 		2 exp_sign char(1),
  2    18 		2 exp_places fixed bin,
  2    19 		2 places_left fixed bin,
  2    20 		2 places_right fixed bin,
  2    21 		2 places fixed bin,
  2    22 		2 literal char(0 refer(numeric_lit.places));	
  2    23 
  2    24 
  2    25 
  2    26 /* end include file ... cobol_TYPE2.incl.pl1 */
  2    27 
  1    15 
  1    16 /* END DECLARATION OF TYPE2 (NUMERIC LITERAL) TOKEN */
  1    17 
  1    18 /* END INCLUDE FILE ... cobol_type2.incl.pl1 */
  1    19 
      418 
  3     1 
  3     2 /* BEGIN INCLUDE FILE ... cobol_type3.incl.pl1 */
  3     3 /* Last modified on 11/19/76 by ORN */
  3     4 
  3     5 /*
  3     6*A type 3 alphanumeric literal token is entered into the minpral file by the
  3     7*lexical analysis phase for each alphanumeric literal encountered in the
  3     8*source program.
  3     9**/
  3    10 
  3    11 dcl alit_ptr ptr;
  3    12 
  3    13 /* BEGIN DECLARATION OR TYPE3 (ALPHANUMERIC LITERAL) TOKEN */
  3    14 dcl 1 alphanum_lit based (alit_ptr),
  4     1 
  4     2 /* begin include file ... cobol_TYPE3.incl.pl1 */
  4     3 /* Last modified on 11/17/76 by ORN */
  4     4 /* Last modified on 12/28/76 by FCH */
  4     5 
  4     6 		/* header */
  4     7 		2 size fixed bin,
  4     8 		2 line fixed bin,
  4     9 		2 column fixed bin,
  4    10 		2 type fixed bin,
  4    11 		/* body */
  4    12 		2 lit_type bit (1),
  4    13 		2 all_lit bit (1),
  4    14 		2 filler1 bit (6),
  4    15 		2 lit_size fixed bin,
  4    16 		2 string char(0 refer(alphanum_lit.lit_size));	
  4    17 
  4    18 
  4    19 
  4    20 /* end include file ... cobol_TYPE3.incl.pl1 */
  4    21 
  3    15 
  3    16 /* END DECLARATION OF TYPE3 (ALPHANUMERIC LITERAL) TOKEN */
  3    17 
  3    18 /* END INCLUDE FILE ... cobol_type3.incl.pl1 */
  3    19 
      419 
  5     1 
  5     2 /* BEGIN INCLUDE FILE ... cobol_.incl.pl1 */
  5     3 /* last modified Feb 4, 1977 by ORN  */
  5     4 
  5     5 /* This file defines all external data used in the generator phase of Multics Cobol */
  5     6 
  5     7 /* POINTERS */
  5     8 dcl cobol_$text_base_ptr ptr  ext;
  5     9 dcl text_base_ptr ptr  defined (cobol_$text_base_ptr);
  5    10 dcl cobol_$con_end_ptr ptr  ext;
  5    11 dcl con_end_ptr ptr  defined (cobol_$con_end_ptr);
  5    12 dcl cobol_$def_base_ptr ptr  ext;
  5    13 dcl def_base_ptr ptr  defined (cobol_$def_base_ptr);
  5    14 dcl cobol_$link_base_ptr ptr  ext;
  5    15 dcl link_base_ptr ptr  defined (cobol_$link_base_ptr);
  5    16 dcl cobol_$sym_base_ptr ptr  ext;
  5    17 dcl sym_base_ptr ptr  defined (cobol_$sym_base_ptr);
  5    18 dcl cobol_$reloc_text_base_ptr ptr  ext;
  5    19 dcl reloc_text_base_ptr ptr  defined (cobol_$reloc_text_base_ptr);
  5    20 dcl cobol_$reloc_def_base_ptr ptr  ext;
  5    21 dcl reloc_def_base_ptr ptr  defined (cobol_$reloc_def_base_ptr);
  5    22 dcl cobol_$reloc_link_base_ptr ptr  ext;
  5    23 dcl reloc_link_base_ptr ptr  defined (cobol_$reloc_link_base_ptr);
  5    24 dcl cobol_$reloc_sym_base_ptr ptr  ext;
  5    25 dcl reloc_sym_base_ptr ptr  defined (cobol_$reloc_sym_base_ptr);
  5    26 dcl cobol_$reloc_work_base_ptr ptr  ext;
  5    27 dcl reloc_work_base_ptr ptr  defined (cobol_$reloc_work_base_ptr);
  5    28 dcl cobol_$pd_map_ptr ptr  ext;
  5    29 dcl pd_map_ptr ptr  defined (cobol_$pd_map_ptr);
  5    30 dcl cobol_$fixup_ptr ptr  ext;
  5    31 dcl fixup_ptr ptr  defined (cobol_$fixup_ptr);
  5    32 dcl cobol_$initval_base_ptr ptr  ext;
  5    33 dcl initval_base_ptr ptr  defined (cobol_$initval_base_ptr);
  5    34 dcl cobol_$initval_file_ptr ptr  ext;
  5    35 dcl initval_file_ptr ptr  defined (cobol_$initval_file_ptr);
  5    36 dcl cobol_$perform_list_ptr ptr  ext;
  5    37 dcl perform_list_ptr ptr  defined (cobol_$perform_list_ptr);
  5    38 dcl cobol_$alter_list_ptr ptr  ext;
  5    39 dcl alter_list_ptr ptr  defined (cobol_$alter_list_ptr);
  5    40 dcl cobol_$seg_init_list_ptr ptr  ext;
  5    41 dcl seg_init_list_ptr ptr  defined (cobol_$seg_init_list_ptr);
  5    42 dcl cobol_$temp_token_area_ptr ptr  ext;
  5    43 dcl temp_token_area_ptr ptr  defined (cobol_$temp_token_area_ptr);
  5    44 dcl cobol_$temp_token_ptr ptr  ext;
  5    45 dcl temp_token_ptr ptr  defined (cobol_$temp_token_ptr);
  5    46 dcl cobol_$token_block1_ptr ptr  ext;
  5    47 dcl token_block1_ptr ptr  defined (cobol_$token_block1_ptr);
  5    48 dcl cobol_$token_block2_ptr ptr  ext;
  5    49 dcl token_block2_ptr ptr  defined (cobol_$token_block2_ptr);
  5    50 dcl cobol_$minpral5_ptr ptr  ext;
  5    51 dcl minpral5_ptr ptr  defined (cobol_$minpral5_ptr);
  5    52 dcl cobol_$tag_table_ptr ptr  ext;
  5    53 dcl tag_table_ptr ptr  defined (cobol_$tag_table_ptr);
  5    54 dcl cobol_$map_data_ptr ptr  ext;
  5    55 dcl map_data_ptr ptr  defined (cobol_$map_data_ptr);
  5    56 dcl cobol_$ptr_status_ptr ptr  ext;
  5    57 dcl ptr_status_ptr ptr  defined (cobol_$ptr_status_ptr);
  5    58 dcl cobol_$reg_status_ptr ptr  ext;
  5    59 dcl reg_status_ptr ptr  defined (cobol_$reg_status_ptr);
  5    60 dcl cobol_$misc_base_ptr ptr ext;
  5    61 dcl misc_base_ptr ptr defined (cobol_$misc_base_ptr);
  5    62 dcl cobol_$misc_end_ptr ptr ext;
  5    63 dcl misc_end_ptr ptr defined (cobol_$misc_end_ptr);
  5    64 dcl cobol_$list_ptr ptr ext;
  5    65 dcl list_ptr ptr defined (cobol_$list_ptr);
  5    66 dcl cobol_$allo1_ptr ptr ext;
  5    67 dcl allo1_ptr ptr defined (cobol_$allo1_ptr);
  5    68 dcl cobol_$eln_ptr ptr ext;
  5    69 dcl eln_ptr ptr defined (cobol_$eln_ptr);
  5    70 dcl cobol_$diag_ptr ptr ext;
  5    71 dcl diag_ptr ptr defined (cobol_$diag_ptr);
  5    72 dcl cobol_$xref_token_ptr ptr ext;
  5    73 dcl xref_token_ptr ptr defined (cobol_$xref_token_ptr);
  5    74 dcl cobol_$xref_chain_ptr ptr ext;
  5    75 dcl xref_chain_ptr ptr defined (cobol_$xref_chain_ptr);
  5    76 dcl cobol_$statement_info_ptr ptr ext;
  5    77 dcl statement_info_ptr ptr defined (cobol_$statement_info_ptr);
  5    78 dcl cobol_$reswd_ptr ptr ext;
  5    79 dcl reswd_ptr ptr defined (cobol_$reswd_ptr);
  5    80 dcl cobol_$op_con_ptr ptr ext;
  5    81 dcl op_con_ptr ptr defined (cobol_$op_con_ptr);
  5    82 dcl cobol_$ntbuf_ptr ptr ext;
  5    83 dcl ntbuf_ptr ptr defined (cobol_$ntbuf_ptr);
  5    84 dcl cobol_$main_pcs_ptr ptr ext;
  5    85 dcl main_pcs_ptr ptr defined (cobol_$main_pcs_ptr);
  5    86 dcl cobol_$include_info_ptr ptr ext;
  5    87 dcl include_info_ptr ptr defined (cobol_$include_info_ptr);
  5    88 
  5    89 /* FIXED BIN */
  5    90 dcl cobol_$text_wd_off fixed bin  ext;
  5    91 dcl text_wd_off fixed bin  defined (cobol_$text_wd_off);
  5    92 dcl cobol_$con_wd_off fixed bin  ext;
  5    93 dcl con_wd_off fixed bin  defined (cobol_$con_wd_off);
  5    94 dcl cobol_$def_wd_off fixed bin  ext;
  5    95 dcl def_wd_off fixed bin  defined (cobol_$def_wd_off);
  5    96 dcl cobol_$def_max fixed bin  ext;
  5    97 dcl def_max fixed bin  defined (cobol_$def_max);
  5    98 dcl cobol_$link_wd_off fixed bin  ext;
  5    99 dcl link_wd_off fixed bin  defined (cobol_$link_wd_off);
  5   100 dcl cobol_$link_max fixed bin  ext;
  5   101 dcl link_max fixed bin  defined (cobol_$link_max);
  5   102 dcl cobol_$sym_wd_off fixed bin  ext;
  5   103 dcl sym_wd_off fixed bin  defined (cobol_$sym_wd_off);
  5   104 dcl cobol_$sym_max fixed bin  ext;
  5   105 dcl sym_max fixed bin  defined (cobol_$sym_max);
  5   106 dcl cobol_$reloc_text_max fixed bin(24)  ext;
  5   107 dcl reloc_text_max fixed bin(24)  defined (cobol_$reloc_text_max);
  5   108 dcl cobol_$reloc_def_max fixed bin(24)  ext;
  5   109 dcl reloc_def_max fixed bin(24)  defined (cobol_$reloc_def_max);
  5   110 dcl cobol_$reloc_link_max fixed bin(24)  ext;
  5   111 dcl reloc_link_max fixed bin(24)  defined (cobol_$reloc_link_max);
  5   112 dcl cobol_$reloc_sym_max fixed bin(24)  ext;
  5   113 dcl reloc_sym_max fixed bin(24)  defined (cobol_$reloc_sym_max);
  5   114 dcl cobol_$reloc_work_max fixed bin(24)  ext;
  5   115 dcl reloc_work_max fixed bin(24)  defined (cobol_$reloc_work_max);
  5   116 dcl cobol_$pd_map_index fixed bin  ext;
  5   117 dcl pd_map_index fixed bin  defined (cobol_$pd_map_index);
  5   118 dcl cobol_$cobol_data_wd_off fixed bin  ext;
  5   119 dcl cobol_data_wd_off fixed bin  defined (cobol_$cobol_data_wd_off);
  5   120 dcl cobol_$stack_off fixed bin  ext;
  5   121 dcl stack_off fixed bin  defined (cobol_$stack_off);
  5   122 dcl cobol_$max_stack_off fixed bin  ext;
  5   123 dcl max_stack_off fixed bin  defined (cobol_$max_stack_off);
  5   124 dcl cobol_$init_stack_off fixed bin  ext;
  5   125 dcl init_stack_off fixed bin  defined (cobol_$init_stack_off);
  5   126 dcl cobol_$pd_map_sw fixed bin  ext;
  5   127 dcl pd_map_sw fixed bin  defined (cobol_$pd_map_sw);
  5   128 dcl cobol_$next_tag fixed bin  ext;
  5   129 dcl next_tag fixed bin  defined (cobol_$next_tag);
  5   130 dcl cobol_$data_init_flag fixed bin  ext;
  5   131 dcl data_init_flag fixed bin  defined (cobol_$data_init_flag);
  5   132 dcl cobol_$seg_init_flag fixed bin  ext;
  5   133 dcl seg_init_flag fixed bin  defined (cobol_$seg_init_flag);
  5   134 dcl cobol_$alter_flag fixed bin  ext;
  5   135 dcl alter_flag fixed bin  defined (cobol_$alter_flag);
  5   136 dcl cobol_$sect_eop_flag fixed bin  ext;
  5   137 dcl sect_eop_flag fixed bin  defined (cobol_$sect_eop_flag);
  5   138 dcl cobol_$para_eop_flag fixed bin  ext;
  5   139 dcl para_eop_flag fixed bin  defined (cobol_$para_eop_flag);
  5   140 dcl cobol_$priority_no fixed bin  ext;
  5   141 dcl priority_no fixed bin  defined (cobol_$priority_no);
  5   142 dcl cobol_$compile_count fixed bin ext;
  5   143 dcl compile_count fixed bin defined (cobol_$compile_count);
  5   144 dcl cobol_$ptr_assumption_ind fixed bin ext;
  5   145 dcl ptr_assumption_ind fixed bin defined (cobol_$ptr_assumption_ind);
  5   146 dcl cobol_$reg_assumption_ind fixed bin ext;
  5   147 dcl reg_assumption_ind fixed bin defined (cobol_$reg_assumption_ind);
  5   148 dcl cobol_$perform_para_index fixed bin ext;
  5   149 dcl perform_para_index fixed bin defined (cobol_$perform_para_index);
  5   150 dcl cobol_$perform_sect_index fixed bin ext;
  5   151 dcl perform_sect_index fixed bin defined (cobol_$perform_sect_index);
  5   152 dcl cobol_$alter_index fixed bin ext;
  5   153 dcl alter_index fixed bin defined (cobol_$alter_index);
  5   154 dcl cobol_$list_off fixed bin ext;
  5   155 dcl list_off fixed bin defined (cobol_$list_off);
  5   156 dcl cobol_$constant_offset fixed bin ext;
  5   157 dcl constant_offset fixed bin defined (cobol_$constant_offset);
  5   158 dcl cobol_$misc_max fixed bin ext;
  5   159 dcl misc_max fixed bin defined (cobol_$misc_max);
  5   160 dcl cobol_$pd_map_max fixed bin ext;
  5   161 dcl pd_map_max fixed bin defined (cobol_$pd_map_max);
  5   162 dcl cobol_$map_data_max fixed bin ext;
  5   163 dcl map_data_max fixed bin defined (cobol_$map_data_max);
  5   164 dcl cobol_$fixup_max fixed bin ext;
  5   165 dcl fixup_max fixed bin defined (cobol_$fixup_max);
  5   166 dcl cobol_$tag_table_max fixed bin ext;
  5   167 dcl tag_table_max fixed bin defined (cobol_$tag_table_max);
  5   168 dcl cobol_$temp_token_max fixed bin ext;
  5   169 dcl temp_token_max fixed bin defined (cobol_$temp_token_max);
  5   170 dcl cobol_$allo1_max fixed bin ext;
  5   171 dcl allo1_max fixed bin defined (cobol_$allo1_max);
  5   172 dcl cobol_$eln_max fixed bin ext;
  5   173 dcl eln_max fixed bin defined (cobol_$eln_max);
  5   174 dcl cobol_$debug_enable fixed bin ext;
  5   175 dcl debug_enable fixed bin defined (cobol_$debug_enable);
  5   176 dcl cobol_$non_source_offset fixed bin ext;
  5   177 dcl non_source_offset fixed bin defined (cobol_$non_source_offset);
  5   178 dcl cobol_$initval_flag fixed bin ext;
  5   179 dcl initval_flag fixed bin defined (cobol_$initval_flag);
  5   180 dcl cobol_$date_compiled_sw fixed bin ext;
  5   181 dcl date_compiled_sw fixed bin defined (cobol_$date_compiled_sw);
  5   182 dcl cobol_$include_cnt fixed bin ext;
  5   183 dcl include_cnt fixed bin defined (cobol_$include_cnt);
  5   184 dcl cobol_$fs_charcnt fixed bin ext;
  5   185 dcl fs_charcnt fixed bin defined (cobol_$fs_charcnt);
  5   186 dcl cobol_$ws_charcnt fixed bin ext;
  5   187 dcl ws_charcnt fixed bin defined (cobol_$ws_charcnt);
  5   188 dcl cobol_$coms_charcnt fixed bin ext;
  5   189 dcl coms_charcnt fixed bin defined (cobol_$coms_charcnt);
  5   190 dcl cobol_$ls_charcnt fixed bin ext;
  5   191 dcl ls_charcnt fixed bin defined (cobol_$ls_charcnt);
  5   192 dcl cobol_$cons_charcnt fixed bin ext;
  5   193 dcl cons_charcnt fixed bin defined (cobol_$cons_charcnt);
  5   194 dcl cobol_$value_cnt fixed bin ext;
  5   195 dcl value_cnt fixed bin defined (cobol_$value_cnt);
  5   196 dcl cobol_$cd_cnt fixed bin ext;
  5   197 dcl cd_cnt fixed bin defined (cobol_$cd_cnt);
  5   198 dcl cobol_$fs_wdoff fixed bin ext;
  5   199 dcl fs_wdoff fixed bin defined (cobol_$fs_wdoff);
  5   200 dcl cobol_$ws_wdoff fixed bin ext;
  5   201 dcl ws_wdoff fixed bin defined (cobol_$ws_wdoff);
  5   202 dcl cobol_$coms_wdoff fixed bin ext;
  5   203 dcl coms_wdoff fixed bin defined (cobol_$coms_wdoff);
  5   204 
  5   205 /* CHARACTER */
  5   206 dcl cobol_$scratch_dir char (168)   aligned ext;
  5   207 dcl scratch_dir char (168)   aligned defined (cobol_$scratch_dir);			/* -42- */
  5   208 dcl cobol_$obj_seg_name char (32)   aligned ext;
  5   209 dcl obj_seg_name char (32)   aligned defined (cobol_$obj_seg_name);		/* -8- */
  5   210 
  5   211 /* BIT */
  5   212 dcl cobol_$xref_bypass bit(1) aligned ext;
  5   213 dcl xref_bypass bit(1) aligned defined (cobol_$xref_bypass);			/* -1- */
  5   214 dcl cobol_$same_sort_merge_proc bit(1) aligned ext;
  5   215 dcl same_sort_merge_proc bit(1) aligned defined (cobol_$same_sort_merge_proc);		/* -1- */
  5   216 
  5   217 
  5   218 /* END INCLUDE FILE ... cobol_incl.pl1*/
  5   219 
  5   220 
      420 
  6     1 
  6     2 /* BEGIN INCLUDE FILE ... cobol_type9.incl.pl1 */
  6     3 /* Last modified on 11/19/76 by ORN */
  6     4 
  6     5 /*
  6     6*A type 9 data name token is entered into the name table by the data
  6     7*division syntax phase for each data name described in the data division.
  6     8*The replacement phase subsequently replaces type 8 user word references
  6     9*to data names in the procedure division minpral file with the corresponding
  6    10*type 9 tokens from the name table.
  6    11**/
  6    12 
  6    13 /* dcl dn_ptr ptr; */
  6    14 
  6    15 /* BEGIN DECLARATION OF TYPE9 (DATA NAME) TOKEN */
  6    16 dcl 1 data_name based (dn_ptr),
  7     1 
  7     2 /* begin include file ... cobol_TYPE9.incl.pl1 */
  7     3 /* Last modified on 06/19/77 by ORN */
  7     4 /* Last modified on 12/28/76 by FCH */
  7     5 
  7     6 		/* header */
  7     7 		2 size fixed bin,
  7     8 		2 line fixed bin,
  7     9 		2 column fixed bin,
  7    10 		2 type fixed bin,
  7    11 		/* body */
  7    12 		2 string_ptr ptr,
  7    13 		2 prev_rec ptr,
  7    14 		2 searched bit (1),
  7    15 		2 duplicate bit (1),
  7    16 		2 saved bit (1),
  7    17 		2 debug_ind bit (1),
  7    18 		2 filler2 bit (3),
  7    19 		2 used_as_sub bit (1),
  7    20 		2 def_line fixed bin,
  7    21 		2 level fixed bin,
  7    22 		2 linkage fixed bin,
  7    23 		2 file_num fixed bin,
  7    24 		2 size_rtn fixed bin,
  7    25 		2 item_length fixed bin(24),
  7    26 		2 places_left fixed bin,
  7    27 		2 places_right fixed bin,
  7    28 		/* description */
  7    29 		2 file_section bit (1),
  7    30 		2 working_storage bit (1),
  7    31 		2 constant_section bit (1),
  7    32 		2 linkage_section bit (1),
  7    33 		2 communication_section bit (1),
  7    34 		2 report_section bit (1),
  7    35 		2 level_77 bit (1),
  7    36 		2 level_01 bit (1),
  7    37 		2 non_elementary bit (1),
  7    38 		2 elementary bit (1),
  7    39 		2 filler_item bit (1),
  7    40 		2 s_of_rdf bit (1),
  7    41 		2 o_of_rdf bit (1),
  7    42 		2 bin_18 bit (1),
  7    43 		2 bin_36 bit (1),
  7    44 		2 pic_has_l bit (1),
  7    45 		2 pic_is_do bit (1),
  7    46 		2 numeric bit (1),
  7    47 		2 numeric_edited bit (1),
  7    48 		2 alphanum bit (1),
  7    49 		2 alphanum_edited bit (1),
  7    50 		2 alphabetic bit (1),
  7    51 		2 alphabetic_edited bit (1),
  7    52 		2 pic_has_p bit (1),
  7    53 		2 pic_has_ast bit (1),
  7    54 		2 item_signed bit(1),
  7    55 		2 sign_separate bit (1),
  7    56 		2 display bit (1),
  7    57 		2 comp bit (1),
  7    58 		2 ascii_packed_dec_h bit (1),	/* as of 8/16/76  this field used for comp8. */
  7    59 		2 ascii_packed_dec bit (1),
  7    60 		2 ebcdic_packed_dec bit (1),
  7    61 		2 bin_16 bit (1),
  7    62 		2 bin_32 bit (1),
  7    63 		2 usage_index bit (1),
  7    64 		2 just_right bit (1),
  7    65 		2 compare_argument bit (1),
  7    66 		2 sync bit (1),
  7    67 		2 temporary bit (1),
  7    68 		2 bwz bit (1),
  7    69 		2 variable_length bit (1),
  7    70 		2 subscripted bit (1),
  7    71 		2 occurs_do bit (1),
  7    72 		2 key_a bit (1),
  7    73 		2 key_d bit (1),
  7    74 		2 indexed_by bit (1),
  7    75 		2 value_numeric bit (1),
  7    76 		2 value_non_numeric bit (1),
  7    77 		2 value_signed bit (1),
  7    78 		2 sign_type bit (3),
  7    79 		2 pic_integer bit (1),
  7    80 		2 ast_when_zero bit (1),
  7    81 		2 label_record bit (1),
  7    82 		2 sign_clause_occurred bit (1),
  7    83 		2 okey_dn bit (1),
  7    84 		2 subject_of_keyis bit (1),
  7    85 		2 exp_redefining bit (1),
  7    86 		2 sync_in_rec bit (1),
  7    87 		2 rounded bit (1),
  7    88 		2 ad_bit bit (1),
  7    89 		2 debug_all bit (1),
  7    90 		2 overlap bit (1),
  7    91 		2 sum_counter bit (1),
  7    92 		2 exp_occurs bit (1),
  7    93 		2 linage_counter bit (1),
  7    94 		2 rnm_01 bit (1),
  7    95 		2 aligned bit (1),
  7    96 		2 not_user_writable bit (1),
  7    97 		2 database_key bit (1),
  7    98 		2 database_data_item bit (1),
  7    99 		2 seg_num fixed bin,
  7   100 		2 offset fixed bin(24),
  7   101 		2 initial_ptr fixed bin,
  7   102 		2 edit_ptr fixed bin,
  7   103 		2 occurs_ptr fixed bin,
  7   104 		2 do_rec char(5),
  7   105 		2 bitt bit (1),
  7   106 		2 byte bit (1),
  7   107 		2 half_word bit (1),
  7   108 		2 word bit (1),
  7   109 		2 double_word bit (1),
  7   110 		2 half_byte bit (1),
  7   111 		2 filler5 bit (1),
  7   112 		2 bit_offset bit (4),
  7   113 		2 son_cnt bit (16),
  7   114 		2 max_red_size fixed bin(24),
  7   115 		2 name_size fixed bin,
  7   116 		2 name char(0 refer(data_name.name_size));	
  7   117 
  7   118 
  7   119 
  7   120 /* end include file ... cobol_TYPE9.incl.pl1 */
  7   121 
  6    17 
  6    18 /* END DECLARATION OF TYPE9 (DATA NAME) TOKEN */
  6    19 
  6    20 /* END INCLUDE FILE ... cobol_type9.incl.pl1 */
  6    21 
      421 
      422      end cobol_make_type9;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/24/89  0830.5  cobol_make_type9.pl1              >spec>install>MR12.3-1048>cobol_make_type9.pl1
418          1    03/27/82  0439.8  cobol_type2.incl.pl1              >ldd>include>cobol_type2.incl.pl1
1-15         2    11/11/82  1712.8  cobol_TYPE2.incl.pl1              >ldd>include>cobol_TYPE2.incl.pl1
419          3    03/27/82  0439.8  cobol_type3.incl.pl1              >ldd>include>cobol_type3.incl.pl1
3-15         4    11/11/82  1712.8  cobol_TYPE3.incl.pl1              >ldd>include>cobol_TYPE3.incl.pl1
420          5    11/11/82  1712.7  cobol_.incl.pl1                   >ldd>include>cobol_.incl.pl1
421          6    03/27/82  0439.9  cobol_type9.incl.pl1              >ldd>include>cobol_type9.incl.pl1
6-17         7    11/11/82  1712.7  cobol_TYPE9.incl.pl1              >ldd>include>cobol_TYPE9.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 33 ref 379 379 396 396
addrel                                                 builtin function         dcl 34 ref 383 400
alit_ptr                        002112 automatic       pointer                  dcl 3-11 set ref 107* 130 131 133
alphanum                 21(19)        based           bit(1)                   level 2 packed packed unaligned dcl 6-16 set ref
                                                                                  132* 220*
alphanum_lit                           based           structure                level 1 unaligned dcl 3-14
bin_18                   21(13)        based           bit(1)                   level 2 packed packed unaligned dcl 6-16 set ref
                                                                                  331*
bin_36                   21(14)        based           bit(1)                   level 2 packed packed unaligned dcl 6-16 set ref
                                                                                  359*
binary                                                 builtin function         dcl 35 ref 377 394
char_offset                            parameter       fixed bin(24,0)          dcl 191 ref 187 219 226 261 273 293 311 334 344 362
clear_t9                               based           structure                level 1 dcl 75
clear_t9_wd                            based           fixed bin(17,0)          array level 2 dcl 75 set ref 411*
cobol_$temp_token_ptr           000044 external static pointer                  dcl 5-44 set ref 377 382 383* 383 394 399 400* 400
cobol_pool$search_op            000040 constant        entry                    external dcl 72 ref 136
data_name                              based           structure                level 1 unaligned dcl 6-16
display                  21(27)        based           bit(1)                   level 2 packed packed unaligned dcl 6-16 set ref
                                                                                  106* 217* 259*
dn_ptr                          002102 automatic       pointer                  dcl 88 set ref 106 109 112 113 114 117 118 119 127
                                                                                  132 133 138 140 217 218 219 220 221 259 260 261
                                                                                  262 263 264 265 266 267 268 292 293 330 331 332
                                                                                  333 334 335 336 358 359 360 361 362 363 364 409*
                                                                                  411 413 414 415
elementary               21(09)        based           bit(1)                   level 2 packed packed unaligned dcl 6-16 set ref
                                                                                  414*
half_word                31(11)        based           bit(1)                   level 2 packed packed unaligned dcl 6-16 set ref
                                                                                  332*
hold_lit                        000100 automatic       char(4096)               packed unaligned dcl 81 set ref 121* 125* 131* 136
                                                                                  136
i                               002104 automatic       fixed bin(17,0)          dcl 89 set ref 410* 411*
in_op                           002106 automatic       fixed bin(17,0)          dcl 97 set ref 136* 138
item_length              16            based           fixed bin(24,0)          level 2 dcl 6-16 set ref 127* 133* 221* 264* 335*
                                                                                  363*
item_signed              21(25)        based           bit(1)                   level 2 packed packed unaligned dcl 6-16 set ref
                                                                                  117* 266*
lit_size                        002100 automatic       fixed bin(17,0)          dcl 82 in procedure "cobol_make_type9" set ref 120*
                                                                                  124* 127 130* 136 136
lit_size                  5            based           fixed bin(17,0)          level 2 in structure "alphanum_lit" dcl 3-14
                                                                                  in procedure "cobol_make_type9" ref 130 131 133
literal                  11            based           char                     level 2 packed packed unaligned dcl 1-14 ref 121 125
new9_ptr                               parameter       pointer                  dcl 52 set ref 28 46 145 161 165 181 187 226 273 311
                                                                                  323 344 351 375 382* 392 399* 409
nlit_ptr                        002110 automatic       pointer                  dcl 1-11 set ref 108* 110 112 113 115 120 121 121
                                                                                  124 125
null                                                   builtin function         dcl 36 ref 323 351 375 379 379 392 396 396
numeric                  21(17)        based           bit(1)                   level 2 packed packed unaligned dcl 6-16 set ref
                                                                                  114* 265* 330* 358*
numeric_lit                            based           structure                level 1 unaligned dcl 1-14
offset                   24            based           fixed bin(24,0)          level 2 dcl 6-16 set ref 140* 219* 261* 293* 334*
                                                                                  362*
old9_ptr                               parameter       pointer                  dcl 53 ref 145 161 165 181
places                   10            based           fixed bin(17,0)          level 2 dcl 1-14 ref 120 121 124 125
places_left               6            based           fixed bin(17,0)          level 2 in structure "numeric_lit" dcl 1-14
                                                                                  in procedure "cobol_make_type9" ref 112
places_left              17            based           fixed bin(17,0)          level 2 in structure "data_name" dcl 6-16
                                                                                  in procedure "cobol_make_type9" set ref 112* 262*
                                                                                  336* 364*
places_left                            parameter       fixed bin(17,0)          dcl 232 in procedure "cobol_make_type9" ref 226 262
                                                                                  264
places_right              7            based           fixed bin(17,0)          level 2 in structure "numeric_lit" dcl 1-14
                                                                                  in procedure "cobol_make_type9" ref 113
places_right                           parameter       fixed bin(17,0)          dcl 233 in procedure "cobol_make_type9" ref 226 263
                                                                                  264
places_right             20            based           fixed bin(17,0)          level 2 in structure "data_name" dcl 6-16
                                                                                  in procedure "cobol_make_type9" set ref 113* 263*
ptr2_3                                 parameter       pointer                  dcl 54 ref 28 46 107 108
rel                                                    builtin function         dcl 37 ref 377 394
seg_num                  23            based           fixed bin(17,0)          level 2 dcl 6-16 set ref 109* 138* 218* 260* 292*
                                                                                  333* 361*
segno                                  parameter       fixed bin(17,0)          dcl 190 ref 187 218 226 260 273 292 311 333 344 361
sign                      4(09)        based           char(1)                  level 2 packed packed unaligned dcl 1-14 ref 115 121
sign_separate            21(26)        based           bit(1)                   level 2 packed packed unaligned dcl 6-16 set ref
                                                                                  118* 267*
sign_type                22(13)        based           bit(3)                   level 2 packed packed unaligned dcl 6-16 set ref
                                                                                  119* 268*
signal_                         000042 constant        entry                    external dcl 74 ref 379 396
size                                   based           fixed bin(17,0)          level 2 in structure "data_name" dcl 6-16
                                                                                  in procedure "cobol_make_type9" set ref 415*
size                                   parameter       fixed bin(24,0)          dcl 192 in procedure "cobol_make_type9" ref 187 221
string                    6            based           char                     level 2 packed packed unaligned dcl 3-14 ref 131
substr                                                 builtin function         dcl 38 set ref 136 136 161* 161 181* 181
t9_char_size                           constant        fixed bin(17,0)          initial dcl 84 ref 161 161 161 161 415
t9_string                              based           char                     packed unaligned dcl 79 set ref 161* 161
t9_sub_char_size                       constant        fixed bin(17,0)          initial dcl 85 ref 181 181 181 181
t9_sub_string                          based           char                     packed unaligned dcl 80 set ref 181* 181
t9_sub_wd_size                         constant        fixed bin(17,0)          initial dcl 87 ref 394 400
t9_wd_size                             constant        fixed bin(17,0)          initial dcl 86 ref 377 383 410
temp                            002105 automatic       fixed bin(24,0)          dcl 96 set ref 136* 140
token_overflow                  000010 internal static structure                level 1 unaligned dcl 64 set ref 379 379 396 396
type                      3            based           fixed bin(17,0)          level 2 in structure "data_name" dcl 6-16
                                                                                  in procedure "cobol_make_type9" set ref 413*
type                      3            based           fixed bin(17,0)          level 2 in structure "numeric_lit" dcl 1-14
                                                                                  in procedure "cobol_make_type9" ref 110
word                     31(12)        based           bit(1)                   level 2 packed packed unaligned dcl 6-16 set ref
                                                                                  360*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
allo1_max                              defined         fixed bin(17,0)          dcl 5-171
allo1_ptr                              defined         pointer                  dcl 5-67
alter_flag                             defined         fixed bin(17,0)          dcl 5-135
alter_index                            defined         fixed bin(17,0)          dcl 5-153
alter_list_ptr                         defined         pointer                  dcl 5-39
cd_cnt                                 defined         fixed bin(17,0)          dcl 5-197
clear_t9_sub                           based           structure                level 1 dcl 77
cobol_$allo1_max                       external static fixed bin(17,0)          dcl 5-170
cobol_$allo1_ptr                       external static pointer                  dcl 5-66
cobol_$alter_flag                      external static fixed bin(17,0)          dcl 5-134
cobol_$alter_index                     external static fixed bin(17,0)          dcl 5-152
cobol_$alter_list_ptr                  external static pointer                  dcl 5-38
cobol_$cd_cnt                          external static fixed bin(17,0)          dcl 5-196
cobol_$cobol_data_wd_off               external static fixed bin(17,0)          dcl 5-118
cobol_$compile_count                   external static fixed bin(17,0)          dcl 5-142
cobol_$coms_charcnt                    external static fixed bin(17,0)          dcl 5-188
cobol_$coms_wdoff                      external static fixed bin(17,0)          dcl 5-202
cobol_$con_end_ptr                     external static pointer                  dcl 5-10
cobol_$con_wd_off                      external static fixed bin(17,0)          dcl 5-92
cobol_$cons_charcnt                    external static fixed bin(17,0)          dcl 5-192
cobol_$constant_offset                 external static fixed bin(17,0)          dcl 5-156
cobol_$data_init_flag                  external static fixed bin(17,0)          dcl 5-130
cobol_$date_compiled_sw                external static fixed bin(17,0)          dcl 5-180
cobol_$debug_enable                    external static fixed bin(17,0)          dcl 5-174
cobol_$def_base_ptr                    external static pointer                  dcl 5-12
cobol_$def_max                         external static fixed bin(17,0)          dcl 5-96
cobol_$def_wd_off                      external static fixed bin(17,0)          dcl 5-94
cobol_$diag_ptr                        external static pointer                  dcl 5-70
cobol_$eln_max                         external static fixed bin(17,0)          dcl 5-172
cobol_$eln_ptr                         external static pointer                  dcl 5-68
cobol_$fixup_max                       external static fixed bin(17,0)          dcl 5-164
cobol_$fixup_ptr                       external static pointer                  dcl 5-30
cobol_$fs_charcnt                      external static fixed bin(17,0)          dcl 5-184
cobol_$fs_wdoff                        external static fixed bin(17,0)          dcl 5-198
cobol_$include_cnt                     external static fixed bin(17,0)          dcl 5-182
cobol_$include_info_ptr                external static pointer                  dcl 5-86
cobol_$init_stack_off                  external static fixed bin(17,0)          dcl 5-124
cobol_$initval_base_ptr                external static pointer                  dcl 5-32
cobol_$initval_file_ptr                external static pointer                  dcl 5-34
cobol_$initval_flag                    external static fixed bin(17,0)          dcl 5-178
cobol_$link_base_ptr                   external static pointer                  dcl 5-14
cobol_$link_max                        external static fixed bin(17,0)          dcl 5-100
cobol_$link_wd_off                     external static fixed bin(17,0)          dcl 5-98
cobol_$list_off                        external static fixed bin(17,0)          dcl 5-154
cobol_$list_ptr                        external static pointer                  dcl 5-64
cobol_$ls_charcnt                      external static fixed bin(17,0)          dcl 5-190
cobol_$main_pcs_ptr                    external static pointer                  dcl 5-84
cobol_$map_data_max                    external static fixed bin(17,0)          dcl 5-162
cobol_$map_data_ptr                    external static pointer                  dcl 5-54
cobol_$max_stack_off                   external static fixed bin(17,0)          dcl 5-122
cobol_$minpral5_ptr                    external static pointer                  dcl 5-50
cobol_$misc_base_ptr                   external static pointer                  dcl 5-60
cobol_$misc_end_ptr                    external static pointer                  dcl 5-62
cobol_$misc_max                        external static fixed bin(17,0)          dcl 5-158
cobol_$next_tag                        external static fixed bin(17,0)          dcl 5-128
cobol_$non_source_offset               external static fixed bin(17,0)          dcl 5-176
cobol_$ntbuf_ptr                       external static pointer                  dcl 5-82
cobol_$obj_seg_name                    external static char(32)                 dcl 5-208
cobol_$op_con_ptr                      external static pointer                  dcl 5-80
cobol_$para_eop_flag                   external static fixed bin(17,0)          dcl 5-138
cobol_$pd_map_index                    external static fixed bin(17,0)          dcl 5-116
cobol_$pd_map_max                      external static fixed bin(17,0)          dcl 5-160
cobol_$pd_map_ptr                      external static pointer                  dcl 5-28
cobol_$pd_map_sw                       external static fixed bin(17,0)          dcl 5-126
cobol_$perform_list_ptr                external static pointer                  dcl 5-36
cobol_$perform_para_index              external static fixed bin(17,0)          dcl 5-148
cobol_$perform_sect_index              external static fixed bin(17,0)          dcl 5-150
cobol_$priority_no                     external static fixed bin(17,0)          dcl 5-140
cobol_$ptr_assumption_ind              external static fixed bin(17,0)          dcl 5-144
cobol_$ptr_status_ptr                  external static pointer                  dcl 5-56
cobol_$reg_assumption_ind              external static fixed bin(17,0)          dcl 5-146
cobol_$reg_status_ptr                  external static pointer                  dcl 5-58
cobol_$reloc_def_base_ptr              external static pointer                  dcl 5-20
cobol_$reloc_def_max                   external static fixed bin(24,0)          dcl 5-108
cobol_$reloc_link_base_ptr             external static pointer                  dcl 5-22
cobol_$reloc_link_max                  external static fixed bin(24,0)          dcl 5-110
cobol_$reloc_sym_base_ptr              external static pointer                  dcl 5-24
cobol_$reloc_sym_max                   external static fixed bin(24,0)          dcl 5-112
cobol_$reloc_text_base_ptr             external static pointer                  dcl 5-18
cobol_$reloc_text_max                  external static fixed bin(24,0)          dcl 5-106
cobol_$reloc_work_base_ptr             external static pointer                  dcl 5-26
cobol_$reloc_work_max                  external static fixed bin(24,0)          dcl 5-114
cobol_$reswd_ptr                       external static pointer                  dcl 5-78
cobol_$same_sort_merge_proc            external static bit(1)                   dcl 5-214
cobol_$scratch_dir                     external static char(168)                dcl 5-206
cobol_$sect_eop_flag                   external static fixed bin(17,0)          dcl 5-136
cobol_$seg_init_flag                   external static fixed bin(17,0)          dcl 5-132
cobol_$seg_init_list_ptr               external static pointer                  dcl 5-40
cobol_$stack_off                       external static fixed bin(17,0)          dcl 5-120
cobol_$statement_info_ptr              external static pointer                  dcl 5-76
cobol_$sym_base_ptr                    external static pointer                  dcl 5-16
cobol_$sym_max                         external static fixed bin(17,0)          dcl 5-104
cobol_$sym_wd_off                      external static fixed bin(17,0)          dcl 5-102
cobol_$tag_table_max                   external static fixed bin(17,0)          dcl 5-166
cobol_$tag_table_ptr                   external static pointer                  dcl 5-52
cobol_$temp_token_area_ptr             external static pointer                  dcl 5-42
cobol_$temp_token_max                  external static fixed bin(17,0)          dcl 5-168
cobol_$text_base_ptr                   external static pointer                  dcl 5-8
cobol_$text_wd_off                     external static fixed bin(17,0)          dcl 5-90
cobol_$token_block1_ptr                external static pointer                  dcl 5-46
cobol_$token_block2_ptr                external static pointer                  dcl 5-48
cobol_$value_cnt                       external static fixed bin(17,0)          dcl 5-194
cobol_$ws_charcnt                      external static fixed bin(17,0)          dcl 5-186
cobol_$ws_wdoff                        external static fixed bin(17,0)          dcl 5-200
cobol_$xref_bypass                     external static bit(1)                   dcl 5-212
cobol_$xref_chain_ptr                  external static pointer                  dcl 5-74
cobol_$xref_token_ptr                  external static pointer                  dcl 5-72
cobol_data_wd_off                      defined         fixed bin(17,0)          dcl 5-119
compile_count                          defined         fixed bin(17,0)          dcl 5-143
coms_charcnt                           defined         fixed bin(17,0)          dcl 5-189
coms_wdoff                             defined         fixed bin(17,0)          dcl 5-203
con_end_ptr                            defined         pointer                  dcl 5-11
con_overflow                           internal static structure                level 1 unaligned dcl 68
con_wd_off                             defined         fixed bin(17,0)          dcl 5-93
cons_charcnt                           defined         fixed bin(17,0)          dcl 5-193
constant_offset                        defined         fixed bin(17,0)          dcl 5-157
data_init_flag                         defined         fixed bin(17,0)          dcl 5-131
date_compiled_sw                       defined         fixed bin(17,0)          dcl 5-181
debug_enable                           defined         fixed bin(17,0)          dcl 5-175
def_base_ptr                           defined         pointer                  dcl 5-13
def_max                                defined         fixed bin(17,0)          dcl 5-97
def_wd_off                             defined         fixed bin(17,0)          dcl 5-95
diag_ptr                               defined         pointer                  dcl 5-71
eln_max                                defined         fixed bin(17,0)          dcl 5-173
eln_ptr                                defined         pointer                  dcl 5-69
fixup_max                              defined         fixed bin(17,0)          dcl 5-165
fixup_ptr                              defined         pointer                  dcl 5-31
fs_charcnt                             defined         fixed bin(17,0)          dcl 5-185
fs_wdoff                               defined         fixed bin(17,0)          dcl 5-199
include_cnt                            defined         fixed bin(17,0)          dcl 5-183
include_info_ptr                       defined         pointer                  dcl 5-87
index_result                           automatic       fixed bin(24,0)          dcl 95
init_stack_off                         defined         fixed bin(17,0)          dcl 5-125
initval_base_ptr                       defined         pointer                  dcl 5-33
initval_file_ptr                       defined         pointer                  dcl 5-35
initval_flag                           defined         fixed bin(17,0)          dcl 5-179
link_base_ptr                          defined         pointer                  dcl 5-15
link_max                               defined         fixed bin(17,0)          dcl 5-101
link_wd_off                            defined         fixed bin(17,0)          dcl 5-99
list_off                               defined         fixed bin(17,0)          dcl 5-155
list_ptr                               defined         pointer                  dcl 5-65
lit_wds                                automatic       fixed bin(17,0)          dcl 83
ls_charcnt                             defined         fixed bin(17,0)          dcl 5-191
main_pcs_ptr                           defined         pointer                  dcl 5-85
map_data_max                           defined         fixed bin(17,0)          dcl 5-163
map_data_ptr                           defined         pointer                  dcl 5-55
max_stack_off                          defined         fixed bin(17,0)          dcl 5-123
minpral5_ptr                           defined         pointer                  dcl 5-51
misc_base_ptr                          defined         pointer                  dcl 5-61
misc_end_ptr                           defined         pointer                  dcl 5-63
misc_max                               defined         fixed bin(17,0)          dcl 5-159
next_tag                               defined         fixed bin(17,0)          dcl 5-129
non_source_offset                      defined         fixed bin(17,0)          dcl 5-177
ntbuf_ptr                              defined         pointer                  dcl 5-83
obj_seg_name                           defined         char(32)                 dcl 5-209
op_con_ptr                             defined         pointer                  dcl 5-81
para_eop_flag                          defined         fixed bin(17,0)          dcl 5-139
pd_map_index                           defined         fixed bin(17,0)          dcl 5-117
pd_map_max                             defined         fixed bin(17,0)          dcl 5-161
pd_map_ptr                             defined         pointer                  dcl 5-29
pd_map_sw                              defined         fixed bin(17,0)          dcl 5-127
perform_list_ptr                       defined         pointer                  dcl 5-37
perform_para_index                     defined         fixed bin(17,0)          dcl 5-149
perform_sect_index                     defined         fixed bin(17,0)          dcl 5-151
pool                                   based           char(262144)             packed unaligned dcl 91
pool_index                             automatic       fixed bin(24,0)          dcl 93
pool_ptr                               automatic       pointer                  dcl 92
pool_remainder                         automatic       fixed bin(24,0)          dcl 94
priority_no                            defined         fixed bin(17,0)          dcl 5-141
ptr_assumption_ind                     defined         fixed bin(17,0)          dcl 5-145
ptr_status_ptr                         defined         pointer                  dcl 5-57
reg_assumption_ind                     defined         fixed bin(17,0)          dcl 5-147
reg_status_ptr                         defined         pointer                  dcl 5-59
reloc_def_base_ptr                     defined         pointer                  dcl 5-21
reloc_def_max                          defined         fixed bin(24,0)          dcl 5-109
reloc_link_base_ptr                    defined         pointer                  dcl 5-23
reloc_link_max                         defined         fixed bin(24,0)          dcl 5-111
reloc_sym_base_ptr                     defined         pointer                  dcl 5-25
reloc_sym_max                          defined         fixed bin(24,0)          dcl 5-113
reloc_text_base_ptr                    defined         pointer                  dcl 5-19
reloc_text_max                         defined         fixed bin(24,0)          dcl 5-107
reloc_work_base_ptr                    defined         pointer                  dcl 5-27
reloc_work_max                         defined         fixed bin(24,0)          dcl 5-115
reswd_ptr                              defined         pointer                  dcl 5-79
same_sort_merge_proc                   defined         bit(1)                   dcl 5-215
scratch_dir                            defined         char(168)                dcl 5-207
sect_eop_flag                          defined         fixed bin(17,0)          dcl 5-137
seg_init_flag                          defined         fixed bin(17,0)          dcl 5-133
seg_init_list_ptr                      defined         pointer                  dcl 5-41
stack_off                              defined         fixed bin(17,0)          dcl 5-121
statement_info_ptr                     defined         pointer                  dcl 5-77
sym_base_ptr                           defined         pointer                  dcl 5-17
sym_max                                defined         fixed bin(17,0)          dcl 5-105
sym_wd_off                             defined         fixed bin(17,0)          dcl 5-103
tag_table_max                          defined         fixed bin(17,0)          dcl 5-167
tag_table_ptr                          defined         pointer                  dcl 5-53
temp_token_area_ptr                    defined         pointer                  dcl 5-43
temp_token_max                         defined         fixed bin(17,0)          dcl 5-169
temp_token_ptr                         defined         pointer                  dcl 5-45
text_base_ptr                          defined         pointer                  dcl 5-9
text_wd_off                            defined         fixed bin(17,0)          dcl 5-91
token_block1_ptr                       defined         pointer                  dcl 5-47
token_block2_ptr                       defined         pointer                  dcl 5-49
value_cnt                              defined         fixed bin(17,0)          dcl 5-195
ws_charcnt                             defined         fixed bin(17,0)          dcl 5-187
ws_wdoff                               defined         fixed bin(17,0)          dcl 5-201
xref_bypass                            defined         bit(1)                   dcl 5-213
xref_chain_ptr                         defined         pointer                  dcl 5-75
xref_token_ptr                         defined         pointer                  dcl 5-73

NAMES DECLARED BY EXPLICIT CONTEXT.
alphanumeric                    000265 constant        entry                    external dcl 187
basic_info                      000637 constant        entry                    internal dcl 407 ref 105 216 258 291 327 355
cobol_make_type9                000020 constant        entry                    external dcl 28
copy                            000216 constant        entry                    external dcl 145
copy_sub                        000240 constant        entry                    external dcl 165
decimal_9bit                    000316 constant        entry                    external dcl 226
fixed_bin_35                    000364 constant        entry                    external dcl 273
get_token9_space                000501 constant        entry                    internal dcl 370 ref 100 160 215 257 290 323 351
get_token9_sub_space            000560 constant        entry                    internal dcl 387 ref 180
long_bin                        000444 constant        entry                    external dcl 344
non_local                       000402 constant        label                    dcl 302 ref 380 397
short_bin                       000405 constant        entry                    external dcl 311
type2_3                         000030 constant        entry                    external dcl 46

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1026        1074     667        1036
Length      1420     667        46         307     136          30

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cobol_make_type9                   1186 external procedure  is an external procedure.  
get_token9_space                        internal procedure  shares stack frame of external procedure cobol_make_type9.  
get_token9_sub_space                    internal procedure  shares stack frame of external procedure cobol_make_type9.  
basic_info                              internal procedure  shares stack frame of external procedure cobol_make_type9.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 token_overflow              cobol_make_type9

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cobol_make_type9         000100 hold_lit                    cobol_make_type9
                         002100 lit_size                    cobol_make_type9
                         002102 dn_ptr                      cobol_make_type9
                         002104 i                           cobol_make_type9
                         002105 temp                        cobol_make_type9
                         002106 in_op                       cobol_make_type9
                         002110 nlit_ptr                    cobol_make_type9
                         002112 alit_ptr                    cobol_make_type9

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_char_temp     call_ext_out_desc   return_mac          shorten_stack       ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cobol_pool$search_op          signal_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
cobol_$temp_token_ptr




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     28 000014        46 000025       100 000035       105 000036       106 000037       107 000042       108 000046
    109 000047       110 000051       112 000054       113 000056       114 000060       115 000062       117 000070
    118 000072       119 000074       120 000100       121 000103       122 000121       124 000123       125 000125
    127 000131       128 000133       130 000134       131 000137       132 000143       133 000145       136 000146
    138 000201       140 000210       141 000213       145 000214       160 000223       161 000224       162 000235
    165 000236       180 000245       181 000246       183 000257       187 000260       215 000272       216 000273
    217 000274       218 000277       219 000302       220 000304       221 000306       222 000310       226 000311
    257 000323       258 000324       259 000325       260 000330       261 000333       262 000335       263 000337
    264 000341       265 000345       266 000347       267 000351       268 000353       269 000357       273 000360
    290 000371       291 000372       292 000373       293 000377       297 000401       302 000402       311 000403
    323 000412       327 000420       330 000421       331 000424       332 000426       333 000430       334 000433
    335 000435       336 000437       338 000441       344 000442       351 000451       355 000457       358 000460
    359 000463       360 000465       361 000467       362 000472       363 000474       364 000476       366 000500
    370 000501       375 000502       377 000507       379 000522       380 000551       382 000552       383 000553
    385 000557       387 000560       392 000561       394 000566       396 000601       397 000630       399 000631
    400 000632       402 000636       407 000637       409 000640       410 000644       411 000653       412 000655
    413 000657       414 000662       415 000664       416 000666


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
