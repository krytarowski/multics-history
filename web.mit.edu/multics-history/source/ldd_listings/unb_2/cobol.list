	COMPILATION LISTING OF SEGMENT cobol
	Compiled by: Multics PL/I Compiler, Release 31b, of April 24, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 05/24/89  1006.5 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
       17*     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
       18*     MCR8060 cobol.pl1 Reformatted code to new Cobol standard.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 /* Modified on 10/1/83 by FCH, [5.2...]. trace added */
       23 /* Modified on 11/25/81 by FCH, [5.1-3], main prog added to include file table, BUG519(phx11818) */
       24 /* Modified on 10/23/81 by FCH, [5.1-2], issue diag if long line found, phx11819(BUG517) */
       25 /* Modified on 10/13/81 by FCH, [5.1-1], hisi data alloc algorithm if cobol$multics */
       26 /* Modified on 10/02/81 by FCH, [5.0-1], formatting not forced if first char was tab, BUG511 */
       27 /* Modified on 07/11/81 by FCH, [4.4-9], work files clobbered if corres and debug phases used, phx10380(BUG492) */
       28 /* Modified on 05/27/81 by FCH, [4.4-8], size of work files reset to zero, phx09988(BUG485) */
       29 /* Modified on 05/26/81 by FCH, [4.4-7], cobol_ecs_info replaced by sys incl file status_structures, phx09946(BUG484) */
       30 /* Modified on 05/25/81 by FCH, [4.4-6], change message emitted when -table and -fmt used, phx09946(BUG484) */
       31 /* Modified on 05/19/81 by FCH, [4.4-5], default is table */
       32 /* Modified on 05/19/81 by FCH, [4.4-4], -sv and -lev may optionally be followed by spaces */
       33 /* Modified on 12/01/80 by FCH, [4.4-3], report writer phase added */
       34 /* Modified on 10/22/80 by FCH, COBOL_SYNTAX_TRACE_ changed to cobol_syntax_trace_ */
       35 /* Modified on 10/17/80 by PRP, [4.4-2], TR7956(BUG446), temp segs not cleaned up on bad arg error */
       36 /* Modified on 08/15/80 by FCH, [4.4-1], TR6483(BUG440), zero length source seg caused compiler to abort */
       37 /* Modified on 2/27/80 by PRP, [4.2-4], phx05396b  -sv4 fixed */
       38 /* Modified on 02/14/80 by FCH, [4.2-3], answered phx05331s */
       39 /* Modified on 02/12/80 by MHD, [4.2-2], answered phx05237o, phx05238u, and phx05231b */
       40 /* Modified on 10/26/79 by MHD, [4.1-3], left cobol_m2fp pointing to last minpral-2 for appending type 25 tokens */
       41 /* Modified on 10/18/79 by MHD, [4.1-2], deleted unused parameter to cobol_print_diag */
       42 /* Modified on 10/12/79 by FCH, [4.1-1], -card, revision to .ex.cobol */
       43 /* Modified on 08/17/79 by PRP, [4.0-6], fixed warning message for -fmt and -tb */
       44 /* Modified on 06/08/79  by PRP, [4.0-5], recursive call to compiler eliminated */
       45 /* Modified on 04/09/79 by FCH, [4.0-4], compatibility entry points added added */
       46 /* Modified on 04/02/79 by FCH, [4.0-3], debug phase added */
       47 /* Modified on 03/30/79 by FCH, [4.0-2], option -svNM added */
       48 /* Modified on 02/26/79 by FCH, [4.0-1], option -levN M added */
       49 /* Modified on 1/31/79 by FCH, [3.0-11], cobol equiv to cobol$id */
       50 /* Modified on 10/25/78 by RAL, [3.0-10], initilize ecs_info_table.diag_indicators */
       51 /* Modified on 10/25/78 by FCH, [3.0-9], area allocation standardized */
       52 /* Modified on 10/23/78 by RAL, [3.0-8], COPY ... REPLACING and REPLACE statements */
       53 /* Modified on 09/12/78 by RAL, [3.0-7], warning about the use of -tb and -fmt and probing source */
       54 /* Modified on 06/22/78 by RAL, [3.0-6], entries cobol$(push_name pop_name) */
       55 /* Modified on 06/06/78 by FCH, [3.0-5], delete list file before compilation */
       56 /* Modified on 05/24/78 by FCH, [3.0-4], logic of condition handling rewritten */
       57 /* Modified on 04/27/78 by FCH, [3.0-3], symbol section(compiler options) */
       58 /* Modified on 04/27/78 by FCH, [3.0-2], symbol section(source module path name) */
       59 /* Modified on 01/24/78 by FCH, [3.0-1], xref listing suppressed if fatals */
       60 /* Modified since Version 3.0 */
       61 
       62 
       63 
       64 
       65 
       66 
       67 
       68 /* format: style3 */
       69 cobol:
       70      proc;
       71 
       72 /*   This is the driver for the Multics COBOL compiler.
       73*It processes all compiler control options, establishes the source
       74*segment, and calls each phase of the compiler in order:
       75*
       76*     Front:
       77*	cobol_lex		(LEX)
       78*	cobol_idedsyn	(ID/ED SYNTAX)
       79*	cobol_ddsyntax	(DD SYNTAX)
       80*	cobol_ddalloc	(DD ALLOCATION)
       81*	cobol_repl3	(REPLACEMENT)
       82*	cobol_ci_phase	(CORRESPONDING)
       83*	cobol_pdstax	(PD SYNTAX)
       84*	cobol_print_diag	(PRINT DIAG)
       85*     Back:
       86*	cobol_gen_driver_	(GENERATOR)
       87*	cobol_make_xref_	(ANALYZER)
       88*	cobol_fix_driver_	(FIXUP)
       89*
       90*All files used by the various phases are declared, opened and closed
       91*by the driver.  */
       92 
       93 /*************************************/
       94 id:
       95      entry;					/*[3.0-11]*/
       96 
       97 	string (trace) = ""b;
       98 	MODE = 0;
       99 	go to start;
      100 
      101 /*************************************/
      102 trace:
      103      entry;
      104 
      105 	string (trace) = "1000"b;
      106 	MODE = 0;
      107 
      108 	go to start;
      109 
      110 rw:
      111      entry;
      112 
      113 /*[4.4-0]*/
      114 	MODE = 5;					/*[4.4-0]*/
      115 	go to start;
      116 
      117 gcos:
      118      entry;
      119 
      120 /*[4.0-4]*/
      121 	call set_mode (1);				/*[4.0-4]*/
      122 	go to start;
      123 
      124 ibm_ansi:
      125      entry;
      126 
      127 /*[4.0-4]*/
      128 	call set_mode (2);				/*[4.0-4]*/
      129 	go to start;
      130 
      131 ibm_ef:
      132      entry;
      133 
      134 /*[4.0-4]*/
      135 	call set_mode (3);				/*[4.0-4]*/
      136 	go to start;
      137 
      138 multics:
      139      entry;
      140 
      141 /*[4.0-4]*/
      142 	call set_mode (4);				/*[4.0-4]*/
      143 	go to start;
      144 
      145 copy_file_size:
      146      entry (bc);
      147 
      148 /*[5.1-2]*/
      149 	call cobol_merge$copy_file_size (bc);		/*[5.1-2]*/
      150 	return;
      151 
      152 /*[5.1.2]*/
      153 dcl	cobol_merge$copy_file_size
      154 			entry (fixed bin (24));	/*[5.1-2]*/
      155 dcl	bc		fixed bin (24);
      156 
      157 push_name:
      158      entry (dir_name, entryname);			/* [3.0-6] */
      159 
      160 /* This is called to push the source name and
      161*			    all include files onto a stack to be
      162*			      used to build the symbol table */
      163 
      164 
      165 dcl	dir_name		char (168);
      166 dcl	entryname		char (32);
      167 
      168 	call hcs_$status_long (dir_name, entryname, 1, addr (branch_status), null (), mcode);
      169 
      170 	c_name.ct = c_name.ct + 1;
      171 
      172 /* [3.0-9] */
      173 	allocate source_name in (cobol_area) set (source_name_ptr);
      174 						/* [3.0-9] */
      175 	source_name.prev_name_ptr = c_name.last_name_ptr; /* [3.0-9] */
      176 	c_name.last_name_ptr = source_name_ptr;		/* [3.0-9] */
      177 
      178 	l_dn = index (dir_name, " ") - 1;
      179 	l_en = index (entryname, " ") - 1;
      180 
      181 	source_name.sname = substr (dir_name, 1, l_dn) || ">" || substr (entryname, 1, l_en);
      182 						/*[4.4-7]*/
      183 	source_name.uid = branch_status.uid;		/*[4.4-7]*/
      184 	source_name.dtm = branch_status.dtcm;
      185 
      186 	return;
      187 
      188 
      189 pop_name:
      190      entry returns (ptr);				/* [3.0-6] */
      191 
      192 /* This is call to pop the names off of
      193*			    a stack by cobol_sym_init.pl1 */
      194 
      195 /* [3.0-9] */
      196 	if c_name.last_name_ptr = null ()
      197 	then return (null ());			/* [3.0-9] */
      198 						/* [3.0-9] */
      199 	c_name.pname = c_name.last_name_ptr -> source_name.sname;
      200 						/* [3.0-9] */
      201 	c_name.uid = c_name.last_name_ptr -> source_name.uid;
      202 						/* [3.0-9] */
      203 	c_name.dtm = c_name.last_name_ptr -> source_name.dtm;
      204 						/* [3.0-9] */
      205 	c_name.last_name_ptr = c_name.last_name_ptr -> source_name.prev_name_ptr;
      206 
      207 	c_name.size = index (c_name.pname, " ") - 1;
      208 	if c_name.size = -1
      209 	then c_name.size = 168;
      210 
      211 	return (addr (c_name));
      212 
      213 /* [3.0-9] */
      214 
      215 alloc:
      216      entry (alloc_size) returns (ptr);
      217 
      218 declare	alloc_size	fixed bin (35);		/**/
      219 						/**/
      220 	allocate words in (cobol_area) set (source_name_ptr);
      221 						/**/
      222 						/**/
      223 	return (source_name_ptr);			/**/
      224 
      225 
      226 clean_up:
      227      entry;
      228 
      229 /*  This entry is called as a command to cleanup the compile time files. */
      230 /* The calling sequence is:
      231*				cobol$clean_up
      232*			/*}*/
      233 	if fpath ^= ""
      234 	then do segname = "cobol_seg1_", "cobol_seg2_", "cobol_seg3_", "cobol_initval_", "cobol_ntbuff_",
      235 		"cobol_minpral-1_", "cobol_minpral-2_", /*[4.4-3]*/
      236 		"rwdd.incl.cobol", "rwpd.incl.cobol", "cobol_rmin2_", "cobol_r2min2_", "cobol_print_", "cobol_diags_",
      237 		"cobol_pdout_", "cobol_corrout_", "cobol_minpral-1_1", "cobol_minpral-2_1", "cobol_rmin2_1",
      238 		"cobol_pdout_1", "cobol_minpral-1_2", "cobol_minpral-2_2", "cobol_rmin2_2", "cobol_pdout_2",
      239 						/**/
      240 						/*			"cobol_minpral-1_3","cobol_minpral-2_3","cobol_rmin2_3","cobol_pdout_3",
      241*/*			"cobol_minpral-1_4","cobol_minpral-2_4","cobol_rmin2_4","cobol_pdout_4",
      242*/*			"cobol_minpral-1_5","cobol_minpral-2_5","cobol_rmin2_5","cobol_pdout_5",
      243*/**/
      244 		"cobol_common_", "cobol_name_table_", "cobol_format_temp_";
      245 
      246 		call hcs_$delentry_file (fpath, segname, mcode);
      247 
      248 	     end;
      249 
      250 	return;
      251 
      252 
      253 /*************************************/
      254 
      255 restart:
      256      entry;
      257 
      258 	if ^restart
      259 	then return;
      260 
      261 	if abort_sw
      262 	then go to finish;
      263 	else abort_sw = "1"b;
      264 
      265 	if intact
      266 	then call cu_$cl;
      267 	else if endgen_sw
      268 	then go to finish;
      269 	else if gen_sw
      270 	then go to no_gen;
      271 	else go to start_print_diag;
      272 
      273 define_data:
      274      entry;
      275 
      276 /*[5.1-2]*/
      277 	call ided;				/*[5.1-2]*/
      278 	call dd;
      279 
      280 /*[5.1-2]*/
      281 	return;
      282 
      283 /*************************************/
      284 /* INITIALIZATION */
      285 
      286 start:	/***.....  Trace_Bit="0"b;/**/
      287 	/***.....  Trace_Lev=1;/**/
      288 	/***.....  Trace_Line=(60)".";/**/
      289 	if recursion
      290 	then do;
      291 
      292 /*[4.0-5]*/
      293 		call ioa_$ioa_stream ("error_output",
      294 		     "cobol: Translation failed. Attempt to invoke COBOL recursively use release first.");
      295 
      296 /*[4.0-5]*/
      297 		return;
      298 	     end;
      299 	else recursion = "1"b;
      300 
      301 /*[5.1-2]*/
      302 	lex_quit = LEX_QUIT;			/*[5.1-2]*/
      303 	comp_term = COMP_TERM;
      304 
      305 /*[4.0-5]*/
      306 /* ESTABLISH CONDITION HANDLERS */
      307 
      308 	on command_abort call COND ("command_abort");	/* [3.0-4] */
      309 	on command_abort_ call COND ("command_abort_");	/* [3.0-4] */
      310 	on cleanup call CLEANUP;
      311 
      312 
      313 	restart = "0"b;
      314 	cobol_sfp = null ();
      315 	cobol_x2_fileno = 0;			/* for optional jif file */
      316 	p_err = "0"b;
      317 	area_info_area.areap = null ();
      318 
      319 	call cu_$af_arg_count (pc, mcode);
      320 
      321 	if mcode = 0
      322 	then do;
      323 
      324 		call com_err_ (0, "cobol", "This command may not be invoked as an active function");
      325 		go to comp_term;
      326 
      327 	     end;
      328 	else if mcode ^= error_table_$not_act_fnc
      329 	then do;
      330 
      331 		call com_err_ (mcode, "cobol");
      332 		go to comp_term;
      333 
      334 	     end;
      335 
      336 	if pc = 0
      337 	then /* if no arguments list options */
      338 	     do;
      339 
      340 		call print_options;
      341 		go to comp_term;
      342 
      343 	     end;
      344 
      345 
      346 /*[5.1-2]*/
      347 	call init_cobol;
      348 
      349 /*[5.1-2]*/
      350 	do i = 1 to pc;
      351 
      352 /*[5.1-2]*/
      353 	     call cu_$arg_ptr (i, arg_ptr, l, mcode);
      354 
      355 /*[5.1-2]*/
      356 	     call option;
      357 
      358 /*[5.1-2]*/
      359 	end;
      360 
      361 /*[5.1-2]*/
      362 	call setup;				/* initialize for compilation */
      363 						/*[5.1-2]*/
      364 	call expand_phase;				/* expand_phase_cobol_source */
      365 
      366 
      367 
      368 /*[5.1-2]*/
      369 	call lex;					/* lexical analysis phase */
      370 
      371 /*[5.1-2]*/
      372 	call cobol$define_data;
      373 
      374 /*[5.1-2]*/
      375 	call ddalloc;				/* dd allocation phase */
      376 
      377 /*[5.1-2]*/
      378 	call replace;				/* replacement phase */
      379 
      380 /*[5.1-2]*/
      381 	call db_corr;				/* debug, corresponding phase */
      382 
      383 
      384 
      385 /*[5.1-2]*/
      386 /* pd syntax analysis phase */
      387 
      388 	if time
      389 	then call hcs_$get_usage_values (pb_pf, pb_tm, pb_pp);
      390 
      391 	fixed_common.syntax_trace = trace.pd;
      392 
      393 /*[5.1-2]*/
      394 	call cobol_pdstax;
      395 
      396 /*[5.1-2]*/
      397 	if mcode ^= 0
      398 	then return;
      399 
      400 	call cobol_swf_close (cobol_dfp, ST, tptr, 0);
      401 
      402 	if time
      403 	then call timer ("PD_SYNTAX.....");
      404 
      405 start_print_diag:					/*[5.1-2]*/
      406 	call print_diag;				/*[5.1-2]*/
      407 	call generator;
      408 
      409 no_gen:
      410 	endgen_sw = "1"b;
      411 
      412 /*[5.1-2]*/
      413 	call analyzer;
      414 
      415 /*[5.1-2]*/
      416 	if fixed_common.fatal_no = 0 & opts.cu & ^abort_sw/*[5.1-2]*/
      417 	then call fixup;
      418 
      419 finish:						/*[5.1-2]*/
      420 	call finish_proc;
      421 
      422 	return;
      423 
      424 
      425 /* GENERALIZED ERROR PROCESSING */
      426 
      427 arg_error:
      428 	call com_err_ (error_table_$badopt, "cobol", argb);
      429 
      430 	go to COMP_TERM;
      431 
      432 missing_arg_error:
      433 	call com_err_ (error_table_$noarg, "cobol");
      434 
      435 	go to COMP_TERM;
      436 
      437 
      438 
      439 multics_error:
      440 	segname = "";
      441 
      442 multics_file_error:
      443 	call com_err_ (mcode, "cobol", "  ^a", segname);
      444 
      445 COMP_TERM:
      446 	call finis;
      447 
      448 	recursion = "0"b;
      449 	return;
      450 
      451 LEX_QUIT:						/*[5.1-2]*/
      452 	call CLEANUP;				/*[5.1-2]*/
      453 	call finis;
      454 
      455 /*[5.1-2]*/
      456 	return;
      457 
      458 
      459 
      460 
      461 
      462 set_mode:
      463      proc (num);
      464 
      465 /*[4.0-4]*/
      466 declare	num		fixed bin;
      467 
      468 /*[4.0-4]*/
      469 	MODE = num;				/*[4.0-4]*/
      470 	string (trace) = ""b;
      471 
      472      end;
      473 
      474 ssv:
      475      proc;
      476 
      477 /*[4.4-4]*/
      478 declare	ch		char (1);
      479 
      480 /*[4.4-4]*/
      481 	call cl_arg_check;
      482 
      483 /*[4.4-4]*/
      484 	if m ^= 1
      485 	then go to arg_error;
      486 
      487 /*[4.4-4]*/
      488 	ch = substr (argb, 1, 1);
      489 
      490 /*[4.4-4]*/
      491 	if ch < "1" | ch > "4"
      492 	then go to arg_error;
      493 
      494 /*[4.4-4]*/
      495 	call setsv (ch);
      496 
      497 /*[4.4-4]*/
      498 	substr (arg, l, 2) = " " || ch;		/*[4.4-4]*/
      499 	l = l + 2;
      500 
      501      end;
      502 
      503 slv:
      504      proc;
      505 
      506 /*[4.4-4]*/
      507 declare	(ch1, ch2)	char (1);
      508 
      509 /*[4.4-4]*/
      510 	ch2 = " ";
      511 
      512 /*[4.4-4]*/
      513 	call cl_arg_check;
      514 
      515 /*[4.4-4]*/
      516 	ch1 = substr (argb, 1, 1);
      517 
      518 /*[4.4-4]*/
      519 	if ch1 < "1" | ch1 > "5"
      520 	then go to arg_error;
      521 
      522 /*[4.4-4]*/
      523 	if m = 1					/*[4.4-4]*/
      524 	then call setlev (ch1, "3");			/*[4.4-4]*/
      525 	else if m = 2				/*[4.4-4]*/
      526 	then do;
      527 		ch2 = substr (argb, 2, 1);
      528 
      529 /*[4.4-4]*/
      530 		if ch2 < "1" | ch2 > "3"
      531 		then go to arg_error;
      532 
      533 /*[4.4-4]*/
      534 		call setlev (ch1, ch2);		/*[4.4-4]*/
      535 	     end;					/*[4.4-4]*/
      536 	else go to arg_error;
      537 
      538 /*[4.4-4]*/
      539 	substr (arg, l, 3) = " " || ch1 || ch2;		/*[4.4-4]*/
      540 	l = l + 3;
      541 
      542      end;
      543 
      544 cl_arg_check:
      545      proc;
      546 
      547 /*[4.4-4]*/
      548 	if i = pc
      549 	then go to arg_error;
      550 
      551 /*[4.4-4]*/
      552 	i = i + 1;
      553 
      554 /*[4.4-4]*/
      555 	call cu_$arg_ptr (i, arg_ptr, m, mcode);
      556 
      557 /*[4.4-4]*/
      558 	if mcode ^= 0
      559 	then go to multics_error;
      560 
      561      end;
      562 
      563 comp_env:
      564      proc;
      565 
      566 /*[4.0-4]*/
      567 
      568 /*[4.0-4]*/
      569 	go to M (MODE);				/* default */
      570 
      571 M (0):						/*[4.0-4]*/
      572 	go to MM;
      573 
      574 M (1):						/* gcos */
      575 						/*[4.0-4]*/
      576 	fixed_common.compile_mode = "101"b;
      577 
      578 /*[4.0-4]*/
      579 	go to MM;
      580 
      581 M (2):						/* ibm_ansi */
      582 						/*[4.0-4]*/
      583 	fixed_common.compile_mode = "01"b;
      584 
      585 /*[4.0-4]*/
      586 	go to MM;
      587 
      588 M (3):						/* ibm_ef */
      589 						/*[4.0-4]*/
      590 	fixed_common.compile_mode = "01"b;
      591 
      592 /*[4.0-4]*/
      593 	go to MM;
      594 
      595 M (4):						/* multics */
      596 						/*[5.1-1]*/
      597 	fixed_common.compile_mode = "00011"b;
      598 
      599 /*[4.0-4]*/
      600 	go to MM;
      601 
      602 M (5):						/* rw */
      603 						/*[4.4-0]*/
      604 	go to MM;
      605 
      606 /*	1  alphanumeric literal continuation ala gcos
      607*		2  " or ' allowed to delimit alphanumeric literals
      608*		3  replace tab by spaces to give a 72 char line
      609*		4 "$" and "_" allowed in data-names
      610*		5 hisi data allocation algorithm used
      611*	*/
      612 MM:
      613      end;
      614 
      615 
      616 init_cobol:
      617      proc;
      618 
      619 /* GET SOURCE PROGRAM NAME AND OPTIONS */
      620 
      621 	upto = 0;
      622 	cobol_options = "";
      623 	cobol_options_len = 1;
      624 
      625 	string (opts) = ""b;
      626 	opts.pd = "1"b;				/* always print diagnostics on console*/
      627 	opts.cu = "1"b;				/* produce object code */
      628 	opts.m_wn = "1"b;				/*print warnings on terminal*/
      629 	opts.m_fat = "1"b;				/*   print fatals on terminal*/
      630 						/*[4.4-5]*/
      631 	opts.pst = "1"b;				/* default is table */
      632 
      633 	cobol_xlast8 = "0"b;
      634 	time = "0"b;
      635 	intact = "0"b;
      636 	opts.card = "0"b;
      637 	opts.exp, expand = "0"b;			/* [3.0-8] */
      638 	COMP_LEVEL = "5";
      639 	LEVSV = "001"b;
      640 	ddsyn_sw = "0"b;
      641 	repl_sw = "0"b;
      642 
      643 	rel = 1;					/* release files as default (truncate and terminate segments) */
      644 
      645 	files_wd = "0"b;
      646 	temp_dir_sw = "0"b;
      647 	gen_sw = "0"b;
      648 	endgen_sw = "0"b;
      649 	abort_sw = "0"b;
      650 
      651 /*[4.4-5]*/
      652 	no_tbl_pres, tbl_pres = "0"b;
      653 
      654 /* [3.0-9] */
      655 	call init;
      656 
      657 /* [3.0-9] */
      658 	if code ^= 0
      659 	then go to multics_error;
      660 
      661      end;
      662 
      663 option:
      664      proc;
      665 
      666 	if substr (argb, 1, 1) = "-"
      667 	then do;
      668 
      669 		arg = substr (argb, 2);
      670 
      671 /*[4.4-5]*/
      672 		if arg = "table" | arg = "tb"
      673 		then do;
      674 			opts.pst = "1"b;
      675 			tbl_pres = "1"b;
      676 		     end;
      677 		else if arg = "symbols" | arg = "sb" | arg = "source" | arg = "sc"
      678 		then call ioa_ ("cobol: Option ^a is obsolete, use -ls or -map (see cobol command)", argb);
      679 		else if arg = "map"
      680 		then do;
      681 
      682 			opts.exs = "1"b;
      683 			opts.m_map = "1"b;
      684 			opts.xrn = "1"b;
      685 
      686 		     end;
      687 
      688 /*[4.0-2]*/
      689 		else /*[4.0-2]*/
      690 		     if substr (arg, 1, 8) = "severity" /*[4.0-2]*/
      691 		then do;
      692 			if l = 10			/*[4.0-2]*/
      693 			then call setsv (substr (arg, 9, 1));
      694 						/*[4.0-2]*/
      695 			else /*[4.0-2]*/
      696 			     if l = 11		/*[4.0-2]*/
      697 			then call setsv (substr (arg, 9, 1));
      698 						/*[4.4-4]*/
      699 			else /*[4.4-4]*/
      700 			     if l = 9		/*[4.4-4]*/
      701 			then call ssv;		/*[4.4-4]*/
      702 			else go to arg_error;	/*[4.0-2]*/
      703 		     end;				/*[4.0-2]*/
      704 		else /*[4.0-2]*/
      705 		     if substr (arg, 1, 2) = "sv"	/*[4.0-2]*/
      706 		then do;
      707 			if l = 4			/*[4.0-2]*/
      708 			then call setsv (substr (arg, 3, 1));
      709 						/*[4.0-2]*/
      710 			else /*[4.0-2]*/
      711 			     if l = 5		/*[4.0-2]*/
      712 			then call setsv (substr (arg, 3, 1));
      713 						/*[4.4-4]*/
      714 			else /*[4.4-4]*/
      715 			     if l = 3		/*[4.4-4]*/
      716 			then call ssv;		/*[4.4-4]*/
      717 			else go to arg_error;	/*[4.0-2]*/
      718 		     end;
      719 
      720 		else if arg = "brief" | arg = "bf"
      721 		then opts.m_bf = "1"b;
      722 		else if arg = "format" | arg = "fmt"
      723 		then opts.fmt = "1"b;
      724 		else if arg = "runtime_check" | arg = "rck"
      725 		then opts.oc = "1"b;
      726 		else if arg = "profile" | arg = "pf"
      727 		then opts.profile, opts.pst = "1"b;
      728 		else if arg = "check" | arg = "ck"
      729 		then opts.cu = "0"b;
      730 		else if arg = "list" | arg = "ls"
      731 		then do;
      732 
      733 			opts.exs = "1"b;
      734 			opts.xrn = "1"b;
      735 			opts.obj = "1"b;
      736 
      737 		     end;
      738 		else if arg = "no_warning" | arg = "nw"
      739 		then opts.nw = "1"b;		/*06-30-77*/
      740 		else if arg = "expand" | arg = "exp"
      741 		then opts.exp, expand = "1"b;		/* [3.0-8] */
      742 						/*[4.1-1]*/
      743 		else if arg = "card"
      744 		then opts.card = "1"b;
      745 		else if arg = "time" | arg = "tm"
      746 		then time = "1"b;
      747 		else if arg = "debug" | arg = "db"
      748 		then do;
      749 
      750 			intact = "1"b;
      751 			rel = 0;
      752 
      753 		     end;				/*[4.4-5]*/
      754 		else /*[4.4-5]*/
      755 		     if arg = "no_table" | arg = "ntb"	/*[4.4-5]*/
      756 		then do;
      757 			opts.pst = "0"b;
      758 			no_tbl_pres = "1"b;
      759 		     end;
      760 		else if arg = "temp_dir" | arg = "td"
      761 		then do;
      762 
      763 			files_wd = "1"b;
      764 			temp_dir_sw = "1"b;
      765 			i = i + 1;
      766 
      767 			if i > pc
      768 			then go to missing_arg_error;
      769 
      770 			call cu_$arg_ptr (i, arg_ptr, l, mcode);
      771 			if mcode ^= 0
      772 			then go to multics_error;
      773 
      774 			if substr (argb, 1, 1) = "-"
      775 			then go to missing_arg_error;
      776 
      777 /* following changes are for [4.1-1] and check to see if the */
      778 /* argument specified with  the temp_dir argument is a diectory */
      779 
      780 			call expand_pathname_ (argb, dpath, en_1, mcode);
      781 
      782 			if mcode ^= 0
      783 			then do;
      784 
      785 PATHNAME_ERROR:
      786 				call com_err_ (mcode, "cobol", "^a", argb);
      787 
      788 				go to comp_term;
      789 
      790 			     end;
      791 
      792 			call absolute_pathname_ (argb, fpath, mcode);
      793 						/* get it as a single component, as well */
      794 
      795 			if mcode ^= 0
      796 			then goto PATHNAME_ERROR;
      797 
      798 			if fpath ^= ">"		/* handle special case (ROOT).  */
      799 			then do;
      800 
      801 				call hcs_$status_minf (dpath, en_1, 1, entry_type, (0), mcode);
      802 
      803 				if mcode ^= 0
      804 				then do;
      805 
      806 					call com_err_ (mcode, "cobol", "^a", fpath);
      807 					go to comp_term;
      808 
      809 				     end;
      810 
      811 				if entry_type ^= DIRECTORY
      812 				then do;
      813 
      814 					call com_err_ (error_table_$notadir, "cobol", "^a", fpath);
      815 					go to comp_term;
      816 
      817 				     end;
      818 
      819 			     end;			/* then */
      820 
      821 /* end changes for [4.1-1] */
      822 
      823 		     end;
      824 		else if arg = "working_dir" | arg = "wd"
      825 		then do;
      826 
      827 			files_wd = "1"b;
      828 			fpath = get_wdir_ ();
      829 
      830 			call ioa_ (
      831 			     "cobol: Obsolete -working_dir option accepted: use ""-temp_dir [wd]"" in future.");
      832 
      833 		     end;
      834 		else if trace.on & substr (arg, 1, 5) = "trace"
      835 		then do;
      836 
      837 			trace_arg = arg;
      838 
      839 			if substr (arg, 6, 2) = "id"
      840 			then trace.id = "1"b;
      841 			else if substr (arg, 6, 2) = "dd"
      842 			then trace.dd = "1"b;
      843 			else if substr (arg, 6, 2) = "pd"
      844 			then trace.pd = "1"b;	/*[4.0-3]*/
      845 			else if substr (arg, 6, 2) = "db"
      846 			then trace.db = "1"b;	/*[4.4-3]*/
      847 			else if substr (arg, 6, 2) = "rw"
      848 			then trace.rw = "1"b;
      849 			else go to arg_error;
      850 
      851 			call cobol_syntax_trace_$reset_trace;
      852 			call cobol_syntax_trace_$initialize (addr (trace_arg));
      853 
      854 		     end;				/*[4.0-1]*/
      855 		else /*[4.0-1]*/
      856 		     if substr (arg, 1, 5) = "level"	/*[4.0-1]*/
      857 		then do;
      858 			if l = 7			/*[4.0-1]*/
      859 			then call setlev (substr (arg, 6, 1), "3");
      860 						/*[4.0-1]*/
      861 			else /*[4.0-1]*/
      862 			     if l = 8		/*[4.0-1]*/
      863 			then call setlev (substr (arg, 6, 1), substr (arg, 7, 1));
      864 						/*[4.4-4]*/
      865 			else /*[4.4-4]*/
      866 			     if l = 6		/*[4.4-4]*/
      867 			then call slv;		/*[4.4-4]*/
      868 			else go to arg_error;	/*[4.0-1]*/
      869 		     end;				/*[4.0-1]*/
      870 		else /*[4.0-1]*/
      871 		     if substr (arg, 1, 3) = "lev"	/*[4.0-1]*/
      872 		then do;
      873 			if l = 5			/*[4.0-1]*/
      874 			then call setlev (substr (arg, 4, 1), "3");
      875 						/*[4.0-1]*/
      876 			else /*[4.0-1]*/
      877 			     if l = 6		/*[4.0-1]*/
      878 			then call setlev (substr (arg, 4, 1), substr (arg, 5, 1));
      879 						/*[4.4-4]*/
      880 			else /*[4.4-4]*/
      881 			     if l = 4		/*[4.4-4]*/
      882 			then call slv;		/*[4.4-4]*/
      883 			else go to arg_error;	/*[4.0-1]*/
      884 		     end;
      885 		else go to arg_error;
      886 
      887 		if temp_dir_sw
      888 		then do;
      889 
      890 			temp_dir_sw = "0"b;
      891 			substr (cobol_options, cobol_options_len, 9) = "temp_dir,";
      892 
      893 		     end;
      894 		else substr (cobol_options, cobol_options_len, l + 1) = substr (arg, 1, l - 1) || ",";
      895 
      896 		cobol_options_len = cobol_options_len + l + 1;
      897 
      898 	     end;
      899 	else do;
      900 
      901 		if p_err = "0"b
      902 		then do;
      903 
      904 			tpath = argb;
      905 			ltp = l;
      906 			p_err = "1"b;
      907 		     end;
      908 		else go to arg_error;
      909 
      910 	     end;
      911 
      912 /*[4.4-5]*/
      913 	if opts.profile				/*[4.4-5]*/
      914 	then do;
      915 		opts.pst, tbl_pres = "1"b;
      916 		no_tbl_pres = "0"b;
      917 	     end;
      918 
      919      end;
      920 
      921 setup:
      922      proc;
      923 
      924 /*[4.4-5]*/
      925 	if cobol_options = " "			/*[4.4-5]*/
      926 	then do;
      927 		cobol_options = "tb,";		/*[5.5-5]*/
      928 		cobol_options_len = 5;		/*[4.4-5]*/
      929 	     end;					/*[4.4-5]*/
      930 	else if ^no_tbl_pres & ^tbl_pres		/*[4.4-5]*/
      931 	then do;
      932 		substr (cobol_options, cobol_options_len, 4) = "tb,";
      933 						/*[4.4-5]*/
      934 		cobol_options_len = cobol_options_len + 4;
      935 						/*[4.4-5]*/
      936 	     end;
      937 
      938 	if cobol_options_len = 1
      939 	then do;
      940 
      941 		cobol_options = "none";
      942 		cobol_options_len = 4;
      943 	     end;
      944 	else do;
      945 
      946 		cobol_options_len = cobol_options_len - 2;
      947 		substr (cobol_options, cobol_options_len, 1) = ";";
      948 	     end;
      949 
      950 	if p_err = "0"b
      951 	then go to missing_arg_error;
      952 
      953 /* GET ENTRY NAME,DIRECTORY NAME AND PATH NAME */
      954 
      955 	p_ptr = addr (dpath);
      956 	e_ptr = addr (ename);
      957 	tp_ptr = addr (tpath);
      958 	fd_ptr = addr (fpath);
      959 
      960 /* Following changes made in [4.1-1] */
      961 /* begin changes */
      962 
      963 	call expand_pathname_$add_suffix (tpb, "cobol", dpath, en_1, mcode);
      964 
      965 	if mcode ^= 0
      966 	then go to multics_error;
      967 
      968 	call get_length (p_ptr, 168, ldp);
      969 	call get_length (addr (en_1), 32, en_len);
      970 
      971 	len = en_len - 6;
      972 	ename = substr (en_1, 1, len);
      973 
      974 	ln = substr (ename, 1, len) || ".list";
      975 
      976 	call expand_pathname_ (lname, pln, ln, mcode);
      977 
      978 	if mcode ^= 0
      979 	then go to multics_error;
      980 
      981 	tpath = dpb || ">" || enb;
      982 
      983 	call get_length (tp_ptr, 168, ltp);
      984 
      985 	pdpath = get_pdir_ ();
      986 
      987 	if ^files_wd
      988 	then fpath = pdpath;
      989 
      990 	call get_length (fd_ptr, 168, fdlen);
      991 
      992 /* end changes in [4.1-1] */
      993 
      994 	if fdlen < 0
      995 	then fdlen = 168;
      996 
      997 
      998 /* START COMPILATION */
      999 
     1000 	if time | intact
     1001 	then call hcs_$get_usage_values (rb_pf, rb_tm, rb_pp);
     1002 
     1003 	if intact
     1004 	then call hcs_$get_usage_values (pb_pf, pb_tm, pb_pp);
     1005 
     1006 	cc = cc + 1;
     1007 	cobol_$compile_count = cc;
     1008 
     1009 /* DECLARE FILES TO THE IO SYSTEM */
     1010 
     1011 	call cobol_vdwf (cobol_cmfp, fdir || ">cobol_common_");
     1012 	call cobol_vdwf (cobol_ntfp, fdir || ">cobol_name_table_");
     1013 	call cobol_swf (cobol_m1fp, fdir || ">cobol_minpral-1_");
     1014 	call cobol_swf (cobol_m2fp, fdir || ">cobol_minpral-2_");
     1015 						/*[4.4-3]*/
     1016 	call cobol_swf (cobol_rwdd, fdir || ">rwdd.incl.cobol");
     1017 						/*[4.4-3]*/
     1018 	call cobol_swf (cobol_rwpd, fdir || ">rwpd.incl.cobol");
     1019 	call cobol_swf (cobol_rm2fp, fdir || ">cobol_rmin2_");
     1020 	call cobol_swf (cobol_dfp, fdir || ">cobol_diags_");
     1021 	call cobol_swf (cobol_pfp, fdir || ">cobol_print_");
     1022 	call cobol_swf (cobol_$initval_file_ptr, fdir || ">cobol_initval_");
     1023 	call cobol_vdwf_open (cobol_ntfp, ST);
     1024 	call cobol_vdwf_open (cobol_cmfp, ST);
     1025 	call cobol_vdwf_sput (cobol_cmfp, ST, addr (common), 4 * size (fixed_common), fcom_key);
     1026 						/* initialize fixed common */
     1027 	call cobol_vdwf_dget (cobol_cmfp, ST, cobol_com_ptr, fcom_ln, fcom_key);
     1028 						/* set external pointer to it */
     1029 
     1030 	call cobol_version$set;
     1031 
     1032 /*[4.4-0]*/
     1033 	if MODE ^= 0
     1034 	then call comp_env;
     1035 
     1036 
     1037 
     1038 	if COMP_LEVEL ^= "5"
     1039 	then fixed_common.comp_level = COMP_LEVEL;
     1040 
     1041 /*[4.0-1]*/
     1042 	fixed_common.levsv = LEVSV;
     1043 	fixed_common.compiler_id = 3;
     1044 	cobol_$obj_seg_name = enb;
     1045 
     1046 	call cobol_init_ (fpath, rtbuff_ptr);
     1047 
     1048 /*[4.0-4]*/
     1049 	call cobol_gns$set_table;
     1050 
     1051 	if rtbuff_ptr = null ()
     1052 	then go to comp_term;
     1053 
     1054      end;
     1055 
     1056 expand_phase:
     1057      proc;
     1058 
     1059 	if time
     1060 	then call hcs_$get_usage_values (pb_pf, pb_tm, pb_pp);
     1061 
     1062 /* Following changes made in [4.1-1] */
     1063 /* begin changes */
     1064 
     1065 	call hcs_$initiate_count (dpath, en_1, "", BC, 1, cobol_sfp, mcode);
     1066 
     1067 /*[5.1-3]*/
     1068 	include_ptr (0) = pointer (cobol_sfp, 1);
     1069 
     1070 	if cobol_sfp = null ()
     1071 	then do;
     1072 
     1073 		call com_err_ (mcode, "cobol", "^a", tpb || ".cobol");
     1074 
     1075 		goto comp_term;
     1076 
     1077 	     end;					/* then */
     1078 
     1079 /*[4.4-1]*/
     1080 	if BC = 0					/*[4.4-1]*/
     1081 	then do;
     1082 		call com_err_ (0, "cobol", "Zero length segment. ^a", tpb || ".cobol");
     1083 
     1084 /*[4.4-1]*/
     1085 		go to comp_term;
     1086 
     1087 /* zero length source segment */
     1088 
     1089 /*[4.4-1]*/
     1090 	     end;
     1091 
     1092 	if ^opts.fmt
     1093 	then if substr (first_source_line, 1, 6) ^= "      "
     1094 	     then do;
     1095 
     1096 		     ch1 = substr (first_source_line, 1, 1);
     1097 						/*[5.0-1]*/
     1098 		     if ch1 > "9" | ch1 = "*" | ch1 = "/" | ch1 = "	"
     1099 		     then do;
     1100 
     1101 			     if opts.card
     1102 			     then do;
     1103 
     1104 				     call ioa_ (M1);
     1105 				     call ioa_ (M2);
     1106 
     1107 				     go to comp_term;
     1108 
     1109 				end;		/* then */
     1110 
     1111 			     else call ioa_ (M1);
     1112 
     1113 			     opts.fmt, fixed_common.options.fmt = "1"b;
     1114 
     1115 			     call set_options (", (fmt);", 8);
     1116 
     1117 			end;			/* then */
     1118 
     1119 		end;				/* then */
     1120 
     1121 	     else ;				/* do nothing */
     1122 
     1123 	else do;
     1124 
     1125 		if opts.card
     1126 		then do;
     1127 
     1128 			call ioa_ (M2);
     1129 
     1130 			go to comp_term;
     1131 
     1132 		     end;				/* then */
     1133 
     1134 	     end;					/* else */
     1135 
     1136 	ecs = expand | opts.card | opts.fmt;
     1137 
     1138 
     1139 	if ecs & en_len > 9
     1140 	then if substr (en_1, en_len - 8) = ".ex.cobol"
     1141 	     then do;
     1142 
     1143 		     call ioa_ (M4);
     1144 		     expand, opts.exp, opts.card, opts.fmt = "0"b;
     1145 
     1146 		end;				/* then */
     1147 
     1148 	call cobol_version$print;
     1149 
     1150 /* end changes for [4.1-1] */
     1151 
     1152 	if ecs
     1153 	then do;
     1154 
     1155 /*[4.4-6]*/
     1156 		if opts.pst
     1157 		then call f_mess;
     1158 
     1159 		if time
     1160 		then call hcs_$get_usage_values (pb_pf, pb_tm, pb_pp);
     1161 
     1162 		save_sfp = cobol_sfp;
     1163 		ecs_info_ptr = addr (ecs_info_table);
     1164 		ecs_info_table.input_ptr = cobol_sfp;	/*[4.1-1]*/
     1165 		ecs_info_table.card_indicator = opts.card;
     1166 						/*[4.1-1]*/
     1167 		ecs_info_table.exp_indicator = expand;
     1168 		ecs_info_table.format_indicator = opts.fmt;
     1169 		ecs_info_table.compiler_level = fixed_common.comp_level;
     1170 		ecs_info_table.diag_indicators = "000"b;
     1171 		ecs_info_table.fatal_count = 0;	/*[4.0-1]*/
     1172 		ecs_info_table.levsv = fixed_common.levsv;
     1173 
     1174 /*[4.1-1]*/
     1175 		ecs_info_table.dir = pdpath;		/*[4.1-1]*/
     1176 		ecs_info_table.ent = substr (ename, 1, len) || ".ex.cobol";
     1177 
     1178 		call expand_cobol_source$expand (ecs_info_ptr, mcode);
     1179 
     1180 		if mcode ^= 0
     1181 		then goto multics_error;
     1182 
     1183 /*[5.1-2]*/
     1184 		BC = ecs_info_table.bc;
     1185 
     1186 		cobol_sfp = ecs_info_table.output_ptr;
     1187 		fixed_common.fatal_no = fixed_common.fatal_no + ecs_info_table.fatal_count;
     1188 
     1189 		if time
     1190 		then call timer ("EXPAND........");
     1191 	     end;					/* [3.0-8] */
     1192 
     1193 /*[5.1-2]*/
     1194 	call cobol_merge$source_file_size (BC);
     1195 
     1196 	entry_ptr = addr (branch_status);		/* [3.0-6] */
     1197 
     1198 	call hcs_$fs_get_path_name (cobol_sfp, dn, i, en, mcode);
     1199 						/* [3.0-6] */
     1200 
     1201 	if mcode ^= 0
     1202 	then goto multics_error;			/* [3.0-6] */
     1203 
     1204 	call push_name (dn, en);			/* [3.0-6] */
     1205 
     1206      end;
     1207 
     1208 lex:
     1209      proc;
     1210 
     1211 	call cobol_swf_open (cobol_m1fp, ST, tptr, tln, "ou");
     1212 	call cobol_swf_open (cobol_m2fp, ST, tptr, tln, "ou");
     1213 	call cobol_swf_open (cobol_pfp, ST, tptr, tln, "ou");
     1214 
     1215 	fixed_common.descriptor = common.descriptor;
     1216 
     1217 	call cobol_swf_open (cobol_dfp, ST, tptr, tln, "ou");
     1218 
     1219 	save_m2fp = cobol_m2fp;
     1220 
     1221 /* START LEX PHASE */
     1222 
     1223 	if time
     1224 	then call hcs_$get_usage_values (pb_pf, pb_tm, pb_pp);
     1225 
     1226 	endlex_sw = "0"b;				/* 10-27-77 */
     1227 						/*[4.4-3]*/
     1228 	fixed_common.syntax_trace = trace.rw;
     1229 
     1230 	call cobol_lex (enb);
     1231 
     1232 /*[4.4-3]*/
     1233 	fixed_common.syntax_trace = "0"b;
     1234 	endlex_sw = "1"b;				/* 10-27-77 */
     1235 						/*[4-1.2]	cobol_m2fp = save_m2fp;*/
     1236 	fixed_common.last_print_rec = cobol_lpr;
     1237 
     1238 	call cobol_swf_close (cobol_pfp, ST, tptr, 0);
     1239 
     1240 	cobol_sfp = pointer (cobol_sfp, 0);		/* reset to start of source */
     1241 
     1242 	if time
     1243 	then call timer ("LEX...........");
     1244 
     1245 	if fixed_common.prog_name = "" | fixed_common.prog_name = substr (ename, 1, len)
     1246 	then tname = substr (ename, 1, len);
     1247 	else tname = substr (ename, 1, len) || "$" || fixed_common.prog_name;
     1248 
     1249 	mcode = -3;				/* avoid stop run if only prog in run unit */
     1250 
     1251 	call cobol_control_$cancel (tname, 0, 1, mcode);
     1252 
     1253 /*[5.1-2]*/
     1254 	if MODE = 5
     1255 	then go to lex_quit;
     1256 
     1257      end;
     1258 
     1259 ided:
     1260      proc;
     1261 
     1262 /*************************************/
     1263 /* POSITION FILES FOR ID/ED */
     1264 
     1265 	if time
     1266 	then call hcs_$get_usage_values (pb_pf, pb_tm, pb_pp);
     1267 
     1268 	call cobol_swf_close (cobol_m1fp, ST, tptr, 0);
     1269 	call cobol_swf_open (cobol_m1fp, ST, tptr, tln, "in");
     1270 
     1271 /* START ID/ED SYNTAX PHASE */
     1272 
     1273 	cobol_com_fileno = cobol_cmfp;		/*{4.4-3]*/
     1274 	cobol_name_fileno, cobol_name_fileno_ptr = cobol_ntfp;
     1275 	cobol_min1_fileno = cobol_m1fp;
     1276 	fixed_common.syntax_trace = trace.id;
     1277 
     1278 	call cobol_idedsyn;
     1279 
     1280 	fixed_common.syntax_trace = "0"b;
     1281 
     1282 	if fixed_common.prog_name = ""
     1283 	then fixed_common.prog_name = substr (ename, 1, len);
     1284 						/* PROGRAM-ID missing */
     1285 
     1286 	if time
     1287 	then call timer ("ID/ED SYNTAX..");
     1288 
     1289      end;
     1290 
     1291 dd:
     1292      proc;
     1293 
     1294 /*************************************/
     1295 /* START DD SYNTAX PHASE */
     1296 
     1297 	if time
     1298 	then call hcs_$get_usage_values (pb_pf, pb_tm, pb_pp);
     1299 
     1300 	fixed_common.syntax_trace = trace.dd;
     1301 
     1302 	call cobol_ddsyntax;
     1303 
     1304 	fixed_common.syntax_trace = "0"b;
     1305 
     1306 	if time
     1307 	then call timer ("DD SYNTAX.....");
     1308 
     1309 	call cobol_swf_close (cobol_m1fp, ST, tptr, rel); /* close and release cobol_minpral-1_ */
     1310 
     1311      end;
     1312 
     1313 
     1314 ddalloc:
     1315      proc;
     1316 
     1317 /*************************************/
     1318 /* START DD ALLOCATION PHASE */
     1319 
     1320 	if time
     1321 	then call hcs_$get_usage_values (pb_pf, pb_tm, pb_pp);
     1322 
     1323 	call cobol_swf_open (cobol_$initval_file_ptr, ST, tptr, tln, "ou");
     1324 
     1325 	ddsyn_sw = "1"b;
     1326 
     1327 	call cobol_init_$segs (mcode, tpath);		/* [3.0-2] */
     1328 
     1329 	if mcode ^= 0
     1330 	then go to comp_term;
     1331 
     1332 /*************************************/
     1333 /* GET LINK OFFSET FOR COBOL RUN TIME PACKAGE */
     1334 /*-04/08/76-*/
     1335 	linkoff = 0;
     1336 
     1337 	call cobol_make_link_$type_4 (linkoff, "cobol_rts_");
     1338 
     1339 	call cobol_ddalloc;
     1340 
     1341 	if time
     1342 	then call timer ("DD ALLOCATION.");
     1343 
     1344      end;
     1345 
     1346 replace:
     1347      proc;
     1348 
     1349 /*************************************/
     1350 /* POSITION FILES FOR REPLACEMENT */
     1351 
     1352 	if time
     1353 	then call hcs_$get_usage_values (pb_pf, pb_tm, pb_pp);
     1354 
     1355 	call cobol_swf_close (cobol_$initval_file_ptr, ST, tptr, 0);
     1356 	call cobol_swf_close (cobol_m2fp, ST, tptr, 0);
     1357 	call cobol_vdwf_close (cobol_ntfp, ST, tptr, 0);
     1358 	call cobol_swf_open (cobol_m2fp, ST, tptr, tln, "in");
     1359 	call cobol_swf_open (cobol_rm2fp, ST, tptr, tln, "ou");
     1360 	call cobol_vdwf_open (cobol_ntfp, ST);
     1361 
     1362 /*[4.4-3]*/
     1363 /*cobol_name_fileno_ptr = cobol_ntfp;*/
     1364 
     1365 	cobol_curr_in = cobol_m2fp;
     1366 	cobol_curr_out = cobol_rm2fp;
     1367 
     1368 /* START REPLACEMENT PHASE */
     1369 
     1370 	mem_size = 1048575;				/* Number of bytes in 262143 words */
     1371 
     1372 	call cobol_repl3 (mem_size, rtbuff_ptr);
     1373 
     1374 	if time
     1375 	then call timer ("REPLACEMENT...");
     1376 
     1377 	cobol_m2fp = cobol_curr_in;
     1378 	cobol_rm2fp = cobol_curr_out;
     1379 
     1380 	call cobol_swf_close (cobol_m2fp, ST, tptr, rel); /* close and release input to replacement */
     1381 	call cobol_swf_close (cobol_rm2fp, ST, tptr, 0);	/* close and retain output from replacement */
     1382 	call cobol_swf (cobol_pdofp, fdir || ">cobol_pdout_");
     1383 	call cobol_swf_open (cobol_pdofp, ST, tptr, tln, "ou");
     1384 
     1385 	repl_sw = "1"b;
     1386 
     1387      end;
     1388 
     1389 db_corr:
     1390      proc;
     1391 
     1392 	call cobol_swf_open (cobol_rm2fp, ST, tptr, tln, "in");
     1393 
     1394 /*[4.0-3]*/
     1395 	if fixed_common.corr | fixed_common.initl	/*[4.0-3]*/
     1396 	then do;
     1397 		call START;			/*OPEN(corrout_)*/
     1398 
     1399 /*[4.0-3]*/
     1400 		call cobol_ci_phase;
     1401 
     1402 /*[4.0-3]*/
     1403 		if fixed_common.debug		/*[4.0-3]*/
     1404 		then do;
     1405 			call START_DB;		/* OPEN(rmin2_) */
     1406 
     1407 /*[4.0-3]*/
     1408 			fixed_common.syntax_trace = trace.db;
     1409 						/*[4.0-3]*/
     1410 			call cobol_db_phase;	/*[4.0-3]*/
     1411 			fixed_common.syntax_trace = "0"b;
     1412 
     1413 /*[4.0-3]*/
     1414 			call FINISH_DB;		/* CLOSE(corrout_,rmin2_) */
     1415 						/*[4.0-3]*/
     1416 						/* OPEN(rmin2_) */
     1417 						/*[4.0-3]*/
     1418 		     end;				/*[4.4-9]*/
     1419 		else call FINISH ("CORRESPONDING.");
     1420 
     1421 /*[4.0-3]*/
     1422 	     end;					/*[4.0-3]*/
     1423 	else if fixed_common.debug			/*[4.0-3]*/
     1424 	then do;
     1425 		call START;			/* OPEN(corrout_) */
     1426 
     1427 /*[4.0-3]*/
     1428 		fixed_common.syntax_trace = trace.db;	/*[4.0-3]*/
     1429 		call cobol_db_phase;		/*[4.0-3]*/
     1430 		fixed_common.syntax_trace = "0"b;
     1431 
     1432 /*[4.0-3]*/
     1433 		call FINISH ("DEBUG.........");	/* CLOSE(rmin2_,corrout_) */
     1434 						/*[4.0-3]*/
     1435 						/* OPEN(corrout_) */
     1436 						/*[4.0-3]*/
     1437 	     end;
     1438 
     1439      end;
     1440 
     1441 print_diag:
     1442      proc;
     1443 
     1444 /*************************************/
     1445 /* START PRINT_DIAG PHASE */
     1446 
     1447 
     1448 	if fixed_common.fatal_no ^= 0
     1449 	then do;
     1450 
     1451 		if fixed_common.fatal_no > 1
     1452 		then errorcon = "errors";
     1453 		else errorcon = "error";
     1454 
     1455 		call ioa_ ("");
     1456 
     1457 		if abort_sw
     1458 		then call com_err_ (0, "cobol", "^d other fatal ^a encountered in ^a to this point.",
     1459 			fixed_common.fatal_no, errorcon, enb);
     1460 		else call com_err_ (0, "cobol", "^d fatal ^a encountered in ^a.", fixed_common.fatal_no, errorcon,
     1461 			enb);
     1462 
     1463 	     end;
     1464 
     1465 	if time
     1466 	then call hcs_$get_usage_values (pb_pf, pb_tm, pb_pp);
     1467 
     1468 	if opts.exs
     1469 	then do;
     1470 
     1471 		call delete_$path (pln, ln, "100111"b, "", mcode);
     1472 						/* [3.0-5] */
     1473 
     1474 		wdir = get_wdir_ ();
     1475 		call cobol_cselfle (ST, cobol_hfp, enb || ".list", " ", 0, "h", ""b);
     1476 						/* open list file */
     1477 
     1478 	     end;
     1479 
     1480 	call cobol_swf_open (cobol_pfp, ST, tptr, tln, "in");
     1481 	call cobol_swf_open (cobol_dfp, ST, tptr, tln, "in");
     1482 
     1483 	if fixed_common.options.exp = "0"b
     1484 	then ecs_info_table.diag_indicators = "000"b;	/* [3.0-10] */
     1485 
     1486 	call cobol_print_diag;			/* [4.1-2] */
     1487 
     1488 	call cobol_swf_close (cobol_pfp, ST, tptr, rel);	/* close and release cobol_print_ */
     1489 	call cobol_swf_close (cobol_dfp, ST, tptr, rel);	/* close and release cobol_diags_ */
     1490 	call cobol_swf_close (cobol_pdofp, ST, tptr, 0);
     1491 
     1492 	if time
     1493 	then call timer ("PRINT DIAG....");
     1494 
     1495 	call cobol_swf_close (cobol_rm2fp, ST, tptr, rel);/* close and release cobol_rmin2_ */
     1496 
     1497 	if opts.exs
     1498 	then call cobol_cselfle (ST, cobol_hfp, " ", " ", 1, "k", "0"b);
     1499 						/* close list file setting bitcount */
     1500 
     1501 	if opts.exs
     1502 	then do;
     1503 
     1504 		segname = substr (cobol_$obj_seg_name, 1, index (cobol_$obj_seg_name, " ") - 1) || ".list";
     1505 
     1506 		call hcs_$initiate_count (wdir, segname, "", BC, 01b, cobol_$list_ptr, mcode);
     1507 
     1508 		if cobol_$list_ptr = null ()
     1509 		then go to multics_file_error;
     1510 
     1511 		cobol_$list_off = divide (BC + 8, 9, 24, 0) + 1;
     1512 
     1513 	     end;
     1514 	else cobol_$list_ptr = null ();
     1515 
     1516 /*************************************/
     1517 
     1518 	if fixed_common.fatal_no ^= 0 | ^opts.cu | abort_sw
     1519 	then do;
     1520 
     1521 		if fixed_common.fatal_no ^= 0 & ^abort_sw
     1522 		then call com_err_ (error_table_$translation_failed, "cobol");
     1523 		else if ^opts.cu
     1524 		then call ioa_ ("cobol: No object program generated for ^a.", enb);
     1525 
     1526 		if intact & ^time
     1527 		then call timer ("Front:");
     1528 
     1529 		go to no_gen;
     1530 
     1531 	     end;
     1532 
     1533 	if intact & ^time
     1534 	then do;
     1535 
     1536 		call timer ("Front:");
     1537 		call hcs_$get_usage_values (pb_pf, pb_tm, pb_pp);
     1538 
     1539 	     end;
     1540 
     1541 
     1542      end;
     1543 
     1544 
     1545 generator:
     1546      proc;
     1547 
     1548 /*************************************/
     1549 /*************************************/
     1550 /* START GENERATOR PHASE */
     1551 
     1552 	cobol_$next_tag = fixed_common.spec_tag_counter + 1;
     1553 	segname = "cobol_pdout_";
     1554 
     1555 
     1556 	call hcs_$initiate (fpath, segname, "", 0b, 00b, cobol_$minpral5_ptr, mcode);
     1557 
     1558 	if cobol_$minpral5_ptr = null ()
     1559 	then go to multics_file_error;
     1560 
     1561 	if opts.pst | opts.obj | opts.m_map
     1562 	then cobol_$pd_map_sw = 1;
     1563 	else cobol_$pd_map_sw = 0;
     1564 
     1565 	if opts.pst
     1566 	then do;
     1567 
     1568 		call cobol_vdwf_close (cobol_ntfp, ST, tptr, 0);
     1569 		call cobol_vdwf_open (cobol_ntfp, ST);
     1570 
     1571 	     end;
     1572 
     1573 	gen_sw = "1"b;
     1574 
     1575 	if time
     1576 	then call hcs_$get_usage_values (pb_pf, pb_tm, pb_pp);
     1577 
     1578 	call cobol_gen_driver_;
     1579 
     1580 	if time
     1581 	then call timer ("GENERATOR.....");
     1582 
     1583 	cobol_$constant_offset = cobol_$con_wd_off - mod (cobol_$con_wd_off, 2);
     1584 
     1585      end;
     1586 
     1587 analyzer:
     1588      proc;
     1589 
     1590 /*************************************/
     1591 /* START ANALYZER PHASE */
     1592 
     1593 	if opts.xrn & fixed_common.fatal_no = 0
     1594 	then do;					/*[3.0-1]*/
     1595 
     1596 		if time
     1597 		then call hcs_$get_usage_values (pb_pf, pb_tm, pb_pp);
     1598 
     1599 		call cobol_make_xref_;
     1600 
     1601 		if time
     1602 		then call timer ("ANALYZER......");
     1603 
     1604 	     end;
     1605 
     1606      end;
     1607 
     1608 fixup:
     1609      proc;
     1610 
     1611 /*************************************/
     1612 /* START FIXUP PHASE */
     1613 
     1614 	if time
     1615 	then call hcs_$get_usage_values (pb_pf, pb_tm, pb_pp);
     1616 
     1617 	call cobol_fix_driver_;
     1618 
     1619 	if time
     1620 	then call timer ("FIXUP.........");
     1621 
     1622 	if intact & ^time
     1623 	then call timer ("Back :");
     1624 
     1625      end;
     1626 
     1627 finish_proc:
     1628      proc;
     1629 
     1630 /* FINISH UP */
     1631 
     1632 	if repl_sw
     1633 	then call cobol_swf_close (cobol_pdofp, ST, tptr, rel);
     1634 						/* close and release cobol_pdout_ */
     1635 
     1636 	if ddsyn_sw
     1637 	then call cobol_swf_close (cobol_$initval_file_ptr, ST, tptr, rel);
     1638 						/* close and release cobol_initval_ */
     1639 
     1640 	call cobol_vdwf_close (cobol_cmfp, ST, tptr, rel);/* close and release cobol_common_ */
     1641 
     1642 	call cobol_vdwf_close (cobol_ntfp, ST, tptr, rel);/* close and release cobol_name_table_ */
     1643 
     1644 	if abort_sw
     1645 	then call com_err_ (error_table_$translation_aborted, "cobol");
     1646 
     1647 	call CLEANUP;				/* [3.0-4] */
     1648 
     1649 /* [3.0-9] */
     1650 	call finis;
     1651 
     1652 	if time | intact
     1653 	then do;
     1654 
     1655 		pb_tm = rb_tm;
     1656 		pb_pf = rb_pf;
     1657 		pb_pp = rb_pp;
     1658 
     1659 		if time
     1660 		then call timer ("TOTAL:");
     1661 		else call timer ("Total:");
     1662 
     1663 	     end;
     1664 
     1665      end;
     1666 
     1667 
     1668 
     1669 
     1670 
     1671 /*[4.1-1]*/
     1672 
     1673 get_length:
     1674      proc (p, l, j);
     1675 
     1676 declare	p		ptr,
     1677 	l		fixed bin,
     1678 	j		fixed bin,
     1679 	name		char (l) based (p);
     1680 
     1681 	j = index (name, " ");
     1682 
     1683 	if j = 0
     1684 	then j = l;
     1685 	else j = j - 1;
     1686 
     1687      end get_length;
     1688 
     1689 /*[4.1-1]*/
     1690 
     1691 set_options:
     1692      proc (str, size);
     1693 
     1694 declare	str		char (*),
     1695 	size		fixed bin;
     1696 
     1697 	if substr (cobol_options, cobol_options_len, 1) = ";"
     1698 	then cobol_options_len = cobol_options_len - 1;
     1699 
     1700 	substr (cobol_options, cobol_options_len + 1, 8) = substr (str, 1, size);
     1701 
     1702 	cobol_options_len = cobol_options_len + size;
     1703 
     1704      end set_options;
     1705 
     1706 
     1707 /*[4.0-3]*/
     1708 
     1709 START:
     1710      proc;
     1711 
     1712 /*[4.0-3]*/
     1713 /*[4.0-3]*/
     1714 	if time
     1715 	then call hcs_$get_usage_values (pb_pf, pb_tm, pb_pp);
     1716 
     1717 /*[4.0-3]*/
     1718 	call cobol_swf (cobol_m1fp, fdir || ">cobol_corrout_");
     1719 						/*[4.0-3]*/
     1720 	call cobol_swf_open (cobol_m1fp, ST, tptr, tln, "ou");
     1721 						/* output, corres or db */
     1722 
     1723 /*[4.0-3]*/
     1724 	cobol_rmin2fp = cobol_rm2fp;			/* input, corres or db */
     1725 						/*[4.0-3]*/
     1726 	cobol_x3fp = cobol_m1fp;			/* output, corres or db */
     1727 
     1728      end;
     1729 
     1730 /*[4.0-3]*/
     1731 
     1732 FINISH:
     1733      proc (ph_name);
     1734 
     1735 /*[4.0-3]*/
     1736 /*[4.0-3]*/
     1737 dcl	ph_name		char (14);
     1738 
     1739 /*[4.0-3]*/
     1740 	call cobol_swf_close (cobol_rm2fp, ST, tptr, 1);	/* input, corres or db */
     1741 
     1742 /*[4.0-3]*/
     1743 	cobol_rm2fp = cobol_x3fp;			/* output of corres or db becomes input to pd */
     1744 
     1745 /*[4.0-3]*/
     1746 	call cobol_swf_close (cobol_x3fp, ST, tptr, 0);	/* output, corres or db */
     1747 						/*[4.0-3]*/
     1748 	call cobol_swf_open (cobol_rm2fp, ST, tptr, tln, "in");
     1749 						/* input, pd */
     1750 
     1751 /*[4.0-3]*/
     1752 	if time
     1753 	then call timer (ph_name);
     1754 
     1755      end;
     1756 
     1757 /*[4.0-3]*/
     1758 
     1759 START_DB:
     1760      proc;
     1761 
     1762 /*[4.0-3]*/
     1763 /*[4.0-3]*/
     1764 	if time
     1765 	then call hcs_$get_usage_values (pb_pf, pb_tm, pb_pp);
     1766 
     1767 /*[4.4-9]*/
     1768 	call cobol_swf_close (cobol_m1fp, ST, tptr, 0);	/* output, corres */
     1769 						/*[4.4-9]*/
     1770 	call cobol_swf_close (cobol_rm2fp, ST, tptr, 0);	/* input, corres */
     1771 
     1772 /*[4.0-3]*/
     1773 	cobol_rmin2fp = cobol_m1fp;			/* input, db */
     1774 						/*[4.0-3]*/
     1775 	cobol_x3fp = cobol_rm2fp;			/* output, db */
     1776 
     1777 /*[4.4-9]*/
     1778 	call cobol_swf_open (cobol_m1fp, ST, tptr, tln, "in");
     1779 						/* input, db */
     1780 						/*[4.4-9]*/
     1781 	call cobol_swf_open (cobol_rm2fp, ST, tptr, tln, "ou");
     1782 						/* output, db */
     1783 
     1784      end;						/*[4.0-3]*/
     1785 
     1786 FINISH_DB:
     1787      proc;
     1788 
     1789 /*[4.0-3]*/
     1790 /*[4.0-3]*/
     1791 	call cobol_swf_close (cobol_rmin2fp, ST, tptr, 1);/* input, db */
     1792 
     1793 /*[4.0-3]*/
     1794 	cobol_rm2fp = cobol_x3fp;			/* output of db becomes input to pd */
     1795 
     1796 /*[4.0-3]*/
     1797 	call cobol_swf_close (cobol_x3fp, ST, tptr, 0);	/* output, db */
     1798 						/*[4.0-3]*/
     1799 	call cobol_swf_open (cobol_rm2fp, ST, tptr, tln, "in");
     1800 						/* input, pd */
     1801 
     1802 /*[4.0-3]*/
     1803 	if time
     1804 	then call timer ("DEBUG.........");
     1805 
     1806      end;						/*[4.0-3]*/
     1807 
     1808 /*************************************/
     1809 /* TIMER PROCEDURE */
     1810 
     1811 timer:
     1812      proc (phase);
     1813 
     1814 dcl	phase		char (14);
     1815 dcl	(temp, lp, rp)	fixed bin (35);
     1816 
     1817 	call hcs_$get_usage_values (pe_pf, pe_tm, pe_pp);
     1818 	temp = pe_tm - pb_tm;
     1819 	pb_pf = pe_pf - pb_pf;
     1820 	pb_pp = pe_pp - pb_pp;
     1821 	lp = divide (temp, 1000000, 35, 0);
     1822 	rp = mod (temp, 1000000);
     1823 	rp = divide (rp, 1000, 35, 0);
     1824 
     1825 	call ioa_ ("^a ^2d.^3d seconds,^3d pagefaults,^3d prepages.", phase, lp, rp, pb_pf, pb_pp);
     1826 	return;
     1827      end timer;
     1828 
     1829 /*[4.0-1]*/
     1830 
     1831 setlev:
     1832      proc (lv, sv);
     1833 
     1834 /*[4.0-1]*/
     1835 dcl	(lv, sv)		char (1);
     1836 
     1837 /*[4.0-1]*/
     1838 	if lv < "1" | lv > "5"
     1839 	then go to arg_error;
     1840 
     1841 /*[4.0-1]*/
     1842 	COMP_LEVEL = lv;
     1843 
     1844 /*[4.0-1]*/
     1845 	if sv = "1"
     1846 	then LEVSV = "100"b;			/*[4.0-1]*/
     1847 	else if sv = "2"
     1848 	then LEVSV = "010"b;			/*[4.0-1]*/
     1849 	else if sv = "3"
     1850 	then LEVSV = "001"b;			/*[4.0-1]*/
     1851 	else go to arg_error;
     1852 
     1853      end;
     1854 
     1855 /*[4.0-1]*/
     1856 
     1857 /*[4.0-2]*/
     1858 
     1859 setsv:
     1860      proc (sv);
     1861 
     1862 
     1863 /*[4.0-2]*/
     1864 dcl	sv		char (1);
     1865 
     1866 /*[4.0-2]*/
     1867 	if sv < "1" | sv > "4"
     1868 	then go to arg_error;
     1869 
     1870 /*[4.0-2]*/
     1871 	opts.m_obs = "1"b;
     1872 
     1873 /*[4.2-4]*/
     1874 	if sv = "4"				/*[4.2-4]*/
     1875 	then opts.m_fat, opts.m_wn, opts.m_obs = "0"b;	/*[4.0-2]*/
     1876 	else if sv = "3"				/*[4.0-2]*/
     1877 	then opts.m_wn, opts.m_obs = "0"b;		/*[4.0-2]*/
     1878 	else if sv = "2"				/*[4.0-2]*/
     1879 	then opts.m_obs = "0"b;
     1880 
     1881      end;
     1882 
     1883 /*[4.0-2]*/
     1884 
     1885 
     1886 /*************************************/
     1887 /* CLEANUP PROCEDURE FOR CLEANUP CONDITION */
     1888 
     1889 CLEANUP:
     1890      proc;					/* [3.0-4] */
     1891 
     1892 	if ^recursion
     1893 	then return;				/* 10-27-77 */
     1894 
     1895 	recursion = "0"b;
     1896 	revert cleanup;				/* [3.0-4] */
     1897 
     1898 /*[5.1-3]*/
     1899 	if cobol_$include_cnt > 0
     1900 	then do i = 0 to cobol_$include_cnt;
     1901 		call cobol_cselfle (ST, include_ptr (i), " ", " ", 0, "k", "0"b);
     1902 	     end;
     1903 
     1904 	if ^intact
     1905 	then do segname = "cobol_seg1_", "cobol_seg2_", "cobol_seg3_", "cobol_initval_", "cobol_ntbuff_",
     1906 		"cobol_minpral-1_", "cobol_minpral-2_", /*[4.4-3]*/
     1907 		"rwdd.incl.cobol", "rwpd.incl.cobol", "cobol_rmin2_", "cobol_r2min2_", "cobol_print_", "cobol_diags_",
     1908 		"cobol_pdout_", "cobol_corrout_",	/*[4.4-8]*/
     1909 		"cobol_pdout_",			/*[4.4-8]*/
     1910 		"cobol_initval_",			/*[4.4-8]*/
     1911 		"cobol_print_",			/*[4.4-8]*/
     1912 		"cobol_diags_",			/*[4.4-8]*/
     1913 		"cobol_rmin2_",			/*[4.4-8]*/
     1914 		"cobol_minpral-1_", "cobol_minpral-2_", /*[4.4-8]*/
     1915 		"cobol_name_table_", "cobol_common_", "cobol_name_table_", "cobol_format_temp_";
     1916 		call hcs_$truncate_file (fpath, segname, 0, mcode);
     1917 		call hcs_$terminate_file (fpath, segname, 0b, mcode);
     1918 						/*[4.4-8]*/
     1919 		call hcs_$set_bc (fpath, segname, 0, mcode);
     1920 	     end;
     1921 
     1922 /* [3.0-9] */
     1923 	call finis;
     1924 
     1925 	return;
     1926 
     1927      end CLEANUP;					/* [3.0-4] */
     1928 
     1929 COND:
     1930      proc (cond_name);				/* [3.0-4] */
     1931 
     1932 declare	cond_name		char (*),
     1933 	code		fixed bin (35);		/* [3.0-4] */
     1934 declare	find_condition_info_
     1935 			entry (ptr, ptr, fixed bin (35));
     1936 						/* [3.0-4] */
     1937 
     1938 	call find_condition_info_ (null (), addr (cond_info), code);
     1939 						/* [3.0-4] */
     1940 
     1941 	call cobol_error (cond_name, cond_info.infoptr, "0"b);
     1942 						/* [3.0-4] */
     1943 
     1944 /* [3.0-9] */
     1945 	call finis;
     1946 
     1947      end;
     1948 
     1949 
     1950 cobol_error:
     1951      proc (cond_name, sptr, cont);			/* condition handler for compile time errors */
     1952 
     1953 dcl	sptr		ptr;
     1954 dcl	cond_name		char (*);
     1955 dcl	cont		bit (1);
     1956 dcl	1 s		based (sptr),
     1957 	  2 name		char (32),
     1958 	  2 len		fixed bin,
     1959 	  2 string	char (0 refer (s.len));
     1960 
     1961 dcl	1 io		based (sptr),
     1962 	  2 name		char (32),
     1963 	  2 code		fixed bin (35),
     1964 	  2 action	fixed bin,		/* 1 - init */
     1965 						/* 2 - open */
     1966 						/* 3 - get */
     1967 						/* 4 - put */
     1968 						/* 5 - dget */
     1969 						/* 6 - dput */
     1970 						/* 7 - close */
     1971 						/* 8 - bad cobol_cselfle type */
     1972 						/* 9 - bad open mode for sequential file */
     1973 	  2 iocb_ptr	ptr,
     1974 	  2 file_type	fixed bin,		/* 1 - source */
     1975 						/* 2 - copy */
     1976 						/* 3 - list */
     1977 						/* 4 - cobol_swf */
     1978 						/* 5 - cobol_vdwf */
     1979 	  2 key		char (5);			/* valid only for type 5, action 5 | 6 */
     1980 
     1981 dcl	action_con	(7) char (10)
     1982 			init ("initialize", "open", "get", "put", "direct get", "direct put", "close");
     1983 dcl	attach_descrip	char (172) varying based (io.iocb_ptr -> iocb.attach_descrip_ptr);
     1984 
     1985 start_error:
     1986 	if cond_name = "command_abort_" | cond_name = "command_abort"
     1987 						/* [3.0-4] */
     1988 	then if s.name = "cobol_io_"
     1989 	     then do;
     1990 
     1991 		     if io.action > 7
     1992 		     then do;
     1993 
     1994 			     if action = 8
     1995 			     then call com_err_ (error_table_$no_operation, "cobol", "Bad cobol_cselfle file type");
     1996 			     else call com_err_ (error_table_$no_operation, "cobol",
     1997 				     "Bad open mode for a sequential file");
     1998 
     1999 			end;
     2000 
     2001 		     else if io.file_type = 0 | io.file_type > 3
     2002 		     then do;
     2003 
     2004 			     if io.file_type > 3
     2005 			     then do;
     2006 
     2007 				     call com_err_ (error_table_$no_operation, "cobol",
     2008 					"Attempting to ^a internal work file at ^p", action_con (io.action),
     2009 					io.iocb_ptr);
     2010 
     2011 				     if io.file_type = 5 & (io.action = 4 | io.action = 5)
     2012 				     then call com_err_ (0, "cobol", "Key is ^a", io.key);
     2013 
     2014 				end;
     2015 
     2016 			     else call com_err_ (error_table_$no_operation, "cobol", "Referencing ^p", io.iocb_ptr);
     2017 
     2018 			     call com_err_ (error_table_$translation_aborted, "cobol");
     2019 
     2020 			end;
     2021 
     2022 		     else call com_err_ (io.code, "cobol", substr (attach_descrip, 7));
     2023 		     go to comp_term;
     2024 
     2025 		end;
     2026 
     2027 	     else do;
     2028 
     2029 		     if substr (s.name, 1, 6) = "cobol_"
     2030 		     then call com_err_ (0, "cobol", "Unrecoverable code generator error (^a).  ^a.",
     2031 			     substr (s.name, 7), s.string);
     2032 		     else call com_err_ (0, "cobol", "Unrecoverable ^a error.  ^a.", s.name, s.string);
     2033 
     2034 		end;
     2035 
     2036 	else do;					/* other condition */
     2037 
     2038 		call com_err_ (0, "cobol", "Unrecoverable error.  Unexpected condition signalled.");
     2039 
     2040 		if ^restart
     2041 		then do;
     2042 			restart = "1"b;
     2043 			call cobol$restart;
     2044 		     end;
     2045 
     2046 		cont = "1"b;
     2047 
     2048 		return;
     2049 
     2050 	     end;
     2051 
     2052 	if ^intact
     2053 	then do;
     2054 		if abort_sw
     2055 		then go to finish;			/* recursion not allowed */
     2056 		else abort_sw = "1"b;
     2057 
     2058 		if ^endlex_sw
     2059 		then go to finish;
     2060 
     2061 		if endgen_sw
     2062 		then go to finish;
     2063 		else if gen_sw
     2064 		then go to no_gen;
     2065 		else go to start_print_diag;
     2066 	     end;
     2067 	else call cu_$cl;
     2068 
     2069 	return;
     2070 
     2071      end cobol_error;
     2072 
     2073 
     2074 /*************************************/
     2075 
     2076 print_options:
     2077      proc;
     2078 
     2079 dcl	message		char (80);
     2080 
     2081 /*[4.2-2]*/
     2082 
     2083 /*[4.2-3]*/
     2084 	call com_err_ (error_table_$noarg, "cobol");
     2085 
     2086 	call cobol_version$print;
     2087 
     2088 /*[4.2-3]*/
     2089 	call ioa_ ("Usage: cobol path {ctl_args}");	/*[4.2-3]*/
     2090 	call ioa_ ("Control arguments:-map -list -no_table -profile");
     2091 						/*[4.2-3]*/
     2092 	call ioa_ ("-brief -check -runtime_check -expand");
     2093 						/*[4.2-3]*/
     2094 	call ioa_ ("-format -card -temp_dir PATH");	/*[4.2-3]*/
     2095 	call ioa_ ("-severity N -level NM");
     2096 
     2097      end print_options;
     2098 
     2099 
     2100 
     2101 
     2102 init:
     2103      proc;
     2104 
     2105 /**/
     2106 /**/
     2107 	code = 0;					/**/
     2108 						/**/
     2109 	call get_temp_segments_ ("cobol", temp_ptr, code);/**/
     2110 						/**/
     2111 	if code ^= 0
     2112 	then return;				/**/
     2113 						/**/
     2114 	area_infop = addr (area_info_area);		/**/
     2115 						/**/
     2116 	area_info_area.version = area_info_version_1;	/**/
     2117 	area_info_area.owner = "cobol";		/**/
     2118 	area_info_area.areap = temp_ptr (1);		/**/
     2119 	area_info_area.size = sys_info$max_seg_size;	/**/
     2120 						/**/
     2121 	string (area_info_area.control) = "10001"b;	/**/
     2122 						/**/
     2123 	call define_area_ (area_infop, code);		/**/
     2124 						/**/
     2125 	if code ^= 0
     2126 	then return;				/**/
     2127 						/**/
     2128 	cobol_area_ptr = temp_ptr (1);		/**/
     2129 	c_name.last_name_ptr = null ();		/**/
     2130 	c_name.ct = 0;
     2131 
     2132      end;
     2133 
     2134 /**/
     2135 
     2136 finis:
     2137      proc;
     2138 
     2139 /**/
     2140 /**/
     2141 	if area_info_area.areap ^= null ()
     2142 	then call release_area_ (area_info_area.areap);	/**/
     2143 						/**/
     2144 	call release_temp_segments_ ("cobol", temp_ptr, code);
     2145 
     2146      end;
     2147 
     2148 /* [3.0-9] */
     2149 
     2150 f_mess:
     2151      proc;
     2152 
     2153 /*[4.4-6]*/
     2154 	call ioa_ (M3);
     2155 
     2156 /*[4.4-6]*/
     2157 	call ioa_ ("cobol: " /*[4.4-6]*/
     2158 	     || /*[4.4-6]*/ "Compilation will take place using the source program [pd]>" /*[4.4-6]*/
     2159 	     || /*[4.4-6]*/ substr (ename, 1, len) /*[4.4-6]*/ || /*[4.4-6]*/ ".ex.cobol" /*[4.4-6]*/);
     2160 
     2161      end;
     2162 
     2163 declare	DIRECTORY		fixed bin (2) static internal options (constant) init (2);
     2164 
     2165 declare	1 stat		static,
     2166 	  2 (entry_ptr, save_m2fp, arg_ptr, p_ptr, e_ptr, tp_ptr, fd_ptr)
     2167 			ptr,
     2168 	  2 (tptr, rtbuff_ptr, save_sfp, format_sfp)
     2169 			ptr,
     2170 	  2 (cobol_area_ptr, source_name_ptr)
     2171 			ptr,
     2172 	  2 temp_ptr	(1) ptr,
     2173 	  2 (rb_pf, rb_pp, pb_pf, pb_pp, pe_pf, pe_pp)
     2174 			fixed bin,
     2175 	  2 (l_en, l_dn, linkoff, l, m, pc, i, MODE)
     2176 			fixed bin,
     2177 	  2 (ldp, ltp, len, fdlen, upto, en_len)
     2178 			fixed bin,
     2179 	  2 cc		fixed bin init (0),
     2180 	  2 (rb_tm, pb_tm, pe_tm)
     2181 			fixed bin (71),
     2182 	  2 (mcode, code)	fixed bin (35),
     2183 	  2 entry_type	fixed bin (2),
     2184 	  2 mem_size	fixed bin (31),
     2185 	  2 (fcom_ln, tln, rel)
     2186 			fixed bin (15),
     2187 	  2 BC		fixed bin (24),
     2188 	  2 recursion	bit (1) init ("0"b),
     2189 	  2 LEVSV		bit (3),
     2190 	  2 ST		bit (32),
     2191 	  2 (p_err, corr_sw, abort_sw, endlex_sw, gen_sw, endgen_sw, restart)
     2192 			bit (1),
     2193 	  2 (time, intact, expand, files_wd, temp_dir_sw)
     2194 			bit (1),
     2195 	  2 (repl_sw, ddsyn_sw, no_tbl_pres, tbl_pres, ecs)
     2196 			bit (1),
     2197 	  2 (lex_quit, comp_term)
     2198 			label,
     2199 	  2 answer	char (3) varying,
     2200 	  2 ename		char (32) aligned,
     2201 	  2 tpath		char (168) aligned,
     2202 	  2 fpath		char (168) init (""),
     2203 	  2 (tchar, COMP_LEVEL, ch1)
     2204 			char (1),
     2205 	  2 (segname, trace_arg, ln, en, en_1)
     2206 			char (32),
     2207 	  2 (pln, dn, dpath, pdpath, wdir)
     2208 			char (168),
     2209 	  2 arg		char (16),
     2210 	  2 errorcon	char (6),
     2211 	  2 tname		char (65),
     2212 	  2 fcom_key	char (5);
     2213 
     2214 
     2215 dcl	error_table_$noarg	fixed bin (35) ext static;
     2216 dcl	error_table_$badopt fixed bin (35) ext static;
     2217 dcl	error_table_$translation_failed
     2218 			fixed bin (35) ext static;
     2219 dcl	error_table_$not_act_fnc
     2220 			fixed bin (35) ext static;
     2221 dcl	error_table_$no_operation
     2222 			fixed bin (35) ext static;
     2223 dcl	error_table_$translation_aborted
     2224 			fixed bin (35) ext static;
     2225 dcl	error_table_$notadir
     2226 			fixed bin (35) ext static;
     2227 dcl	sys_info$max_seg_size
     2228 			fixed bin (35) ext static;
     2229 
     2230 	/***.....	dcl Trace_Bit bit(1) static external;/**/
     2231 	/***.....	dcl Trace_Lev fixed bin static external;/**/
     2232 	/***.....	dcl Trace_Line char(60) static external;/**/
     2233 	/***.....   dcl ioa_$nnl entry options(variable);/**/
     2234 
     2235 dcl	1 trace		static,
     2236 	  2 on		bit (1) init ("0"b),
     2237 	  2 id		bit (1) init ("0"b),
     2238 	  2 dd		bit (1) init ("0"b),
     2239 	  2 pd		bit (1) init ("0"b),
     2240 	  2 db		bit (1) init ("0"b),	/*[4.0-3]*/
     2241 	  2 rw		bit (1) init ("0"b);	/*[4.4-3]*/
     2242 
     2243 dcl	01 ecs_info_table	automatic structure like ecs_info_table_;
     2244 dcl	1 area_info_area	aligned automatic structure like area_info;
     2245 
     2246 dcl	1 common		static,			/* initial values of fixed_common */
     2247 	  2 prog_name	char (30) init (""),
     2248 	  2 compiler_rev_no char (25) init (""),
     2249 	  2 phase_name	char (6) init (""),
     2250 	  2 currency	char (1) init ("$"),
     2251 	  2 fatal_no	fixed bin (15) init (0),
     2252 	  2 warn_no	fixed bin (15) init (0),
     2253 	  2 proc_counter	fixed bin (15) init (0),
     2254 	  2 spec_tag_counter
     2255 			fixed bin (15) init (0),
     2256 	  2 file_count	fixed bin (7) init (0),
     2257 	  2 filedescr_offsets
     2258 			(20) char (5) init ((20) (5)"0"),
     2259 	  2 perf_alter_info char (5) init ("00000"),
     2260 	  2 another_perform_info
     2261 			char (5) init ("00000"),
     2262 	  2 sort_in_info	char (5) init ("00000"),
     2263 	  2 odo_info	char (5) init ("00000"),
     2264 	  2 size_seg	fixed bin (15) init (0),
     2265 	  2 size_offset	fixed bin (31) init (0),
     2266 	  2 size_perform_info
     2267 			char (5) init ("00000"),
     2268 	  2 rename_info	char (5) init ("00000"),
     2269 	  2 report_names	char (5) init ("00000"),
     2270 	  2 rw_buf_seg	fixed bin (15) init (0),
     2271 	  2 rw_buf_offset	fixed bin (31) init (0),
     2272 	  2 rw_buf_length	fixed bin (31) init (0),
     2273 	  2 file_keys	char (5) init ("00000"),
     2274 	  2 search_keys	char (5) init ("00000"),
     2275 	  2 dd_seg_size	fixed bin (31) init (65536),
     2276 	  2 pd_seg_size	fixed bin (31) init (0),
     2277 	  2 seg_limit	fixed bin (7) init (49),
     2278 	  2 number_of_dd_segs
     2279 			fixed bin (15) init (0),
     2280 	  2 seg_info	char (5) init ("00000"),
     2281 	  2 number_of_ls_pointers
     2282 			fixed bin (15) init (0),
     2283 	  2 link_sec_seg	fixed bin (15) init (0),
     2284 	  2 link_sec_offset fixed bin (31) init (0),
     2285 	  2 sra_clauses	fixed bin (15) init (0),
     2286 	  2 fix_up_info	char (5) init ("00000"),
     2287 	  2 linage_info	char (5) init ("00000"),
     2288 	  2 first_dd_item	char (5) init ("00000"),
     2289 	  2 sort_out_info	char (5) init ("00000"),
     2290 	  2 db_info	char (5) init ("00000"),
     2291 	  2 realm_info	char (5) init ("00000"),
     2292 	  2 rc_realm_info	char (5) init ("00000"),
     2293 	  2 last_file_key	char (5) init ("00000"),
     2294 	  2 prog_coll_seq	fixed bin (15) init (0),
     2295 	  2 sysin_fno	fixed bin (15) init (0),
     2296 	  2 sysout_fno	fixed bin (15) init (0),
     2297 	  2 dummy11	fixed bin (15) init (0),
     2298 	  2 dummy12	fixed bin (15) init (0),
     2299 	  2 dummy13	fixed bin (15) init (0),
     2300 	  2 dummy14	fixed bin (15) init (0),
     2301 	  2 dummy15	fixed bin (15) init (0),
     2302 	  2 opts,
     2303 	    3 cu		bit (1) unaligned,		/* produce a cu*/
     2304 	    3 pst		bit (1) unaligned,		/* produce a symbol table */
     2305 	    3 wn		bit (1) unaligned,		/* list warnings in listing*/
     2306 	    3 obs		bit (1) unaligned,		/* list observations in listing */
     2307 	    3 dm		bit (1) unaligned,		/* NA produce a data map*/
     2308 	    3 xrl		bit (1) unaligned,		/* NA list cross reference by line number*/
     2309 	    3 xrn		bit (1) unaligned,		/* list cross references by data name*/
     2310 	    3 src		bit (1) unaligned,		/* NA list original source */
     2311 	    3 obj		bit (1) unaligned,		/* list object code */
     2312 	    3 exs		bit (1) unaligned,		/* list expanded source*/
     2313 	    3 sck		bit (1) unaligned,		/* NA sequence check the source*/
     2314 	    3 rno		bit (1) unaligned,		/*NA renumber the output source*/
     2315 	    3 u_l		bit (1) unaligned,		/* convert lower case to upper case (1) or
     2316*				   convert upper case to lower case (0).
     2317*				   Only meaningful if cnv = 1. */
     2318 	    3 cnv		bit (1) unaligned,		/* do concobol_version specified in u_l. */
     2319 	    3 cos		bit (1) unaligned,		/* NA compile optional source statements */
     2320 	    3 fmt		bit (1) unaligned,		/* accept pseudo-free-form source */
     2321 	    3 profile	bit (1) unaligned,
     2322 	    3 nw		bit (1) unaligned,		/* observations and warnings not printed on output listing*/
     2323 						/*06-30-77*/
     2324 	    3 exp		bit (1) unaligned,		/* option to call cobol_expand_source_ */
     2325 	    3 card	bit (1) unaligned,		/*[4.1-1]*/
     2326 	    3 fil2	bit (5) unaligned,
     2327 	    3 m_map	bit (1) unaligned,		/* Produce a procedure division map*/
     2328 	    3 m_bf	bit (1) unaligned,		/* print brief diags on terminal */
     2329 	    3 m_fat	bit (1) unaligned,		/* print fatal diags on terminal */
     2330 	    3 m_wn	bit (1) unaligned,		/* print warnings on terminal */
     2331 	    3 m_obs	bit (1) unaligned,		/* print observations on terminal*/
     2332 	    3 pd		bit (1) unaligned,		/* print diags on terminal */
     2333 	    3 oc		bit (1) unaligned,		/* generate code for object time checking*/
     2334 	  2 supervisor	bit (1) init ("0"b),
     2335 	  2 dec_comma	bit (1) init ("0"b),
     2336 	  2 init_cd	bit (1) init ("0"b),
     2337 	  2 corr		bit (1) init ("0"b),
     2338 	  2 initl		bit (1) init ("0"b),
     2339 	  2 debug		bit (1) init ("0"b),
     2340 	  2 report	bit (1) init ("0"b),
     2341 	  2 sync_in_prog	bit (1) init ("0"b),
     2342 	  2 pd_section	bit (1) init ("0"b),
     2343 	  2 list_switch	bit (1) init ("1"b),
     2344 	  2 alpha_cond	bit (1) init ("0"b),
     2345 	  2 num_cond	bit (1) init ("0"b),
     2346 	  2 spec_sysin	bit (1) init ("0"b),
     2347 	  2 spec_sysout	bit (1) init ("0"b),
     2348 	  2 dummy16	bit (1) init ("0"b),
     2349 	  2 obj_dec_comma	bit (1) init ("0"b),
     2350 	  2 default_sign_type
     2351 			bit (3) init ("001"b),	/* trailing overpunch */
     2352 	  2 default_display bit (1) init ("0"b),
     2353 	  2 syntax_trace	bit (1) init ("0"b),
     2354 	  2 dummy17_1	bit (17) init (""b),
     2355 	  2 descriptor	bit (2) init ("10"b),
     2356 	  2 levsv		bit (3) init ("001"b),	/*[4.0-1]*/
     2357 	  2 dummy17	bit (5) init (""b),
     2358 	  2 lvl_rstr	bit (32) init (""b),
     2359 	  2 inst_rstr	bit (32) init (""b),
     2360 	  2 comp_level	char (1) init ("5"),
     2361 	  2 dummy18	char (30) init (""),
     2362 	  2 object_sign	char (1) init (""),
     2363 	  2 last_print_rec	char (5) init ("00000"),
     2364 	  2 coll_seq_info	char (5) init ("00000"),
     2365 	  2 sys_status_seg	fixed bin (15) init (0),
     2366 	  2 sys_status_offset
     2367 			fixed bin (31) init (0),
     2368 	  2 compiler_id	fixed bin (15) init (3),
     2369 	  2 date_comp_ln	fixed bin (15) init (0),
     2370 	  2 compile_mode	bit (36) init ("0"b),
     2371 	  2 default_temp	fixed bin (15) init (30),
     2372 	  2 dummy26	fixed bin (15) init (0),
     2373 	  2 display_device	fixed bin (15) init (0),
     2374 	  2 dummy28	fixed bin (15) init (0),
     2375 	  2 alphabet_offset fixed bin init (0);
     2376 
     2377 declare	1 MESS		static,
     2378 	  2 M1		char (77)
     2379 			init ("cobol: The -fmt option is assumed since the file is apparently in free format"),
     2380 	  2 M2		char (60) init ("cobol: The -card option is inconsistant with the -fmt option"),
     2381 	  2 M3		char (102)
     2382 			init (
     2383 			"cobol: A run time symbol table was requested and one of the options -expand, -format or -card was used"
     2384 			),
     2385 	  2 M4		char (111)
     2386 			init (
     2387 			"cobol: The -exp option may not be used if the entry name of the source program ends in "".ex.cobol"""
     2388 			);
     2389 
     2390 dcl	1 c_name		static,			/*[3.0-9]*/
     2391 	  2 ct		fixed bin,		/*[3.0-9]*/
     2392 	  2 size		fixed bin,		/*[3.0-9]*/
     2393 	  2 last_name_ptr	ptr,
     2394 	  2 pname		char (168) aligned,
     2395 	  2 uid		bit (36),
     2396 	  2 dtm		bit (36);
     2397 
     2398 dcl	1 query_info	aligned static,
     2399 	  2 cobol_version	fixed bin init (2),
     2400 	  2 yes_or_no_sw	bit (1) unal init ("1"b),
     2401 	  2 suppress_name_sw
     2402 			bit (1) unal init ("0"b),
     2403 	  2 status_code	fixed bin (35) init (0),
     2404 	  2 query_code	fixed bin (35) init (0);
     2405 
     2406 dcl	01 anarea		based (rtbuff_ptr) aligned,
     2407 	  02 dummy_ptr	ptr,
     2408 	  02 rtarea	char (82000);
     2409 
     2410 
     2411 dcl	argb		char (l) based (arg_ptr);
     2412 dcl	tpb		char (ltp) based (tp_ptr);	/* path name of source program (minus .cobol */
     2413 dcl	dpb		char (ldp) based (p_ptr);	/* path name of directory of source program */
     2414 dcl	enb		char (len) based (e_ptr);	/* name of object program */
     2415 dcl	first_source_line	char (32) based (cobol_sfp);	/*[5.1-3]*/
     2416 dcl	include_ptr	(0:1000) ptr based (cobol_$include_info_ptr);
     2417 
     2418 /* [3.0-9] */
     2419 dcl	words		(alloc_size) fixed bin (35) based;
     2420 						/* [3.0-9] */
     2421 dcl	cobol_area	area based (cobol_area_ptr);
     2422 dcl	lname		char (len + 5) based (addr (ln));
     2423 
     2424 
     2425 dcl	1 source_name	based (source_name_ptr),	/* [3.0-9] */
     2426 	  2 prev_name_ptr	ptr,
     2427 	  2 sname		char (168) aligned,
     2428 	  2 uid		bit (36),
     2429 	  2 dtm		bit (36);
     2430 
     2431 declare	fdir		char (fdlen) based (fd_ptr);	/* pathname or dir containing work files */
     2432 
     2433 
     2434 declare	(command_abort, command_abort_, cleanup)
     2435 			condition;		/* [3.0-4] */
     2436 
     2437 /*[5.1-2]*/
     2438 declare	cobol$define_data	entry;
     2439 
     2440 dcl	expand_cobol_source$expand
     2441 			entry (ptr, fixed bin (35));
     2442 dcl	hcs_$fs_get_path_name
     2443 			entry (ptr, char (*), fixed bin, char (*), fixed bin (35));
     2444 declare	hcs_$status_long	entry (char (*), char (*), fixed bin (1), ptr, ptr, fixed bin (35));
     2445 						/* [3.0-6] */
     2446 declare	delete_$path	entry (char (*), char (*), bit (6), char (*), fixed bin (35));
     2447 						/* [3.0-5] */
     2448 
     2449 dcl	(size, divide, index, mod, null, pointer, string, substr, addr)
     2450 			builtin;
     2451 
     2452 dcl	cobol$restart	ext entry;
     2453 dcl	cobol_control_$cancel
     2454 			ext entry (char (*), fixed bin, fixed bin, fixed bin (35));
     2455 dcl	cobol_version$print entry;
     2456 dcl	cobol_make_link_$type_4
     2457 			entry (fixed bin, char (*));
     2458 dcl	cobol_version$set	entry;
     2459 dcl	cu_$cl		ext entry;
     2460 dcl	cobol_lex		ext entry (char (*));
     2461 dcl	cobol_repl3	ext entry (fixed bin (31), ptr);
     2462 dcl	cobol_print_diag	entry;
     2463 
     2464 dcl	(cobol_pdstax, cobol_ddsyntax, cobol_ddalloc, cobol_idedsyn, cobol_ci_phase, cobol_db_phase, cobol_gen_driver_,
     2465 	cobol_fix_driver_, cobol_make_xref_)
     2466 			ext entry;
     2467 
     2468 
     2469 dcl	(cobol_generator, cobol_fixup)
     2470 			ext entry;
     2471 dcl	cobol_source_formatter_
     2472 			entry (ptr, ptr, fixed bin (15), fixed bin, fixed bin);
     2473 dcl	cobol_init_	ext entry (char (168), ptr);
     2474 dcl	cobol_init_$segs	ext entry (fixed bin (35), char (168) aligned);
     2475 						/* [3.0-2] */
     2476 dcl	condition_	entry (char (*), entry);
     2477 dcl	get_pdir_		entry returns (char (168) aligned);
     2478 dcl	get_wdir_		entry returns (char (168) aligned);
     2479 
     2480 /*[4.4-8]*/
     2481 declare	hcs_$set_bc	entry (char (*), char (*), fixed bin (24), fixed bin (35));
     2482 
     2483 dcl	hcs_$delentry_file	entry (char (*), char (*), fixed bin (35));
     2484 dcl	hcs_$truncate_file	entry (char (*), char (*), fixed bin, fixed bin (35));
     2485 dcl	hcs_$truncate_seg	entry (ptr, fixed bin, fixed bin (35));
     2486 dcl	hcs_$terminate_file entry (char (*), char (*), fixed bin (1), fixed bin (35));
     2487 dcl	hcs_$initiate_count entry (char (*), char (*), char (*), fixed bin (24), fixed bin (2), ptr, fixed bin (35));
     2488 dcl	revert_cleanup_proc_
     2489 			entry;
     2490 dcl	establish_cleanup_proc_
     2491 			entry (entry);
     2492 dcl	hcs_$make_seg	entry (char (*), char (*), char (*), fixed bin (5), ptr, fixed bin (35));
     2493 dcl	hcs_$initiate	entry (char (*), char (*), char (*), fixed bin (1), fixed bin (2), ptr, fixed bin (35));
     2494 dcl	com_err_		entry options (variable);
     2495 dcl	hcs_$get_usage_values
     2496 			ext entry (fixed bin, fixed bin (71), fixed bin);
     2497 dcl	ioa_		entry options (variable);
     2498 dcl	ioa_$ioa_stream	entry options (variable);
     2499 dcl	cu_$arg_count	entry (fixed bin);
     2500 dcl	cu_$af_arg_count	entry (fixed bin, fixed bin (35));
     2501 dcl	cu_$arg_ptr	entry (fixed bin, ptr, fixed bin, fixed bin (35));
     2502 dcl	cobol_syntax_trace_$initialize
     2503 			entry (ptr);
     2504 dcl	cobol_syntax_trace_$reset_trace
     2505 			entry;
     2506 dcl	cobol_gns$set_table entry;
     2507 
     2508 
     2509 dcl	command_query_	entry options (variable);
     2510 
     2511 dcl	cobol_cselfle	entry (bit (32), ptr, char (*), char (3), fixed bin (15), char (1), bit (8)) ext;
     2512 dcl	(cobol_swf, cobol_vdwf)
     2513 			entry (ptr, char (*)) ext;
     2514 dcl	cobol_vdwf_open	entry (ptr, bit (32)) ext;
     2515 dcl	(cobol_vdwf_dget, cobol_vdwf_sput)
     2516 			entry (ptr, bit (32), ptr, fixed bin (15), char (5));
     2517 dcl	cobol_swf_open	entry (ptr, bit (32), ptr, fixed bin (15), char (2)) ext;
     2518 dcl	(cobol_swf_close, cobol_vdwf_close)
     2519 			entry (ptr, bit (32), ptr, fixed bin (15)) ext;
     2520 
     2521 declare	cobol_merge$source_file_size
     2522 			entry (fixed bin (24));
     2523 
     2524 /* [3.0-9] */
     2525 dcl	get_temp_segments_	entry (char (*), (*) ptr, fixed bin (35));
     2526 						/* [3.0-9] */
     2527 dcl	release_temp_segments_
     2528 			entry (char (*), (*) ptr, fixed bin (35));
     2529 						/* [3.0-9] */
     2530 dcl	define_area_	entry (ptr, fixed bin (35));	/* [3.0-9] */
     2531 dcl	release_area_	entry (ptr);
     2532 
     2533 
     2534 dcl	expand_pathname_	entry (char (*), char (*), char (*), fixed bin (35)),
     2535 	absolute_pathname_	entry (char (*), char (*), fixed bin (35)),
     2536 	hcs_$status_minf	entry (char (*), char (*), fixed bin (1), fixed bin (2), fixed bin (24), fixed bin (35)),
     2537 	expand_pathname_$add_suffix
     2538 			entry (char (*), char (*), char (*), char (*), fixed bin (35));
     2539 
     2540 
  1     1 
  1     2 /* BEGIN INCLUDE FILE ... cobol_.incl.pl1 */
  1     3 /* last modified Feb 4, 1977 by ORN  */
  1     4 
  1     5 /* This file defines all external data used in the generator phase of Multics Cobol */
  1     6 
  1     7 /* POINTERS */
  1     8 dcl cobol_$text_base_ptr ptr  ext;
  1     9 dcl text_base_ptr ptr  defined (cobol_$text_base_ptr);
  1    10 dcl cobol_$con_end_ptr ptr  ext;
  1    11 dcl con_end_ptr ptr  defined (cobol_$con_end_ptr);
  1    12 dcl cobol_$def_base_ptr ptr  ext;
  1    13 dcl def_base_ptr ptr  defined (cobol_$def_base_ptr);
  1    14 dcl cobol_$link_base_ptr ptr  ext;
  1    15 dcl link_base_ptr ptr  defined (cobol_$link_base_ptr);
  1    16 dcl cobol_$sym_base_ptr ptr  ext;
  1    17 dcl sym_base_ptr ptr  defined (cobol_$sym_base_ptr);
  1    18 dcl cobol_$reloc_text_base_ptr ptr  ext;
  1    19 dcl reloc_text_base_ptr ptr  defined (cobol_$reloc_text_base_ptr);
  1    20 dcl cobol_$reloc_def_base_ptr ptr  ext;
  1    21 dcl reloc_def_base_ptr ptr  defined (cobol_$reloc_def_base_ptr);
  1    22 dcl cobol_$reloc_link_base_ptr ptr  ext;
  1    23 dcl reloc_link_base_ptr ptr  defined (cobol_$reloc_link_base_ptr);
  1    24 dcl cobol_$reloc_sym_base_ptr ptr  ext;
  1    25 dcl reloc_sym_base_ptr ptr  defined (cobol_$reloc_sym_base_ptr);
  1    26 dcl cobol_$reloc_work_base_ptr ptr  ext;
  1    27 dcl reloc_work_base_ptr ptr  defined (cobol_$reloc_work_base_ptr);
  1    28 dcl cobol_$pd_map_ptr ptr  ext;
  1    29 dcl pd_map_ptr ptr  defined (cobol_$pd_map_ptr);
  1    30 dcl cobol_$fixup_ptr ptr  ext;
  1    31 dcl fixup_ptr ptr  defined (cobol_$fixup_ptr);
  1    32 dcl cobol_$initval_base_ptr ptr  ext;
  1    33 dcl initval_base_ptr ptr  defined (cobol_$initval_base_ptr);
  1    34 dcl cobol_$initval_file_ptr ptr  ext;
  1    35 dcl initval_file_ptr ptr  defined (cobol_$initval_file_ptr);
  1    36 dcl cobol_$perform_list_ptr ptr  ext;
  1    37 dcl perform_list_ptr ptr  defined (cobol_$perform_list_ptr);
  1    38 dcl cobol_$alter_list_ptr ptr  ext;
  1    39 dcl alter_list_ptr ptr  defined (cobol_$alter_list_ptr);
  1    40 dcl cobol_$seg_init_list_ptr ptr  ext;
  1    41 dcl seg_init_list_ptr ptr  defined (cobol_$seg_init_list_ptr);
  1    42 dcl cobol_$temp_token_area_ptr ptr  ext;
  1    43 dcl temp_token_area_ptr ptr  defined (cobol_$temp_token_area_ptr);
  1    44 dcl cobol_$temp_token_ptr ptr  ext;
  1    45 dcl temp_token_ptr ptr  defined (cobol_$temp_token_ptr);
  1    46 dcl cobol_$token_block1_ptr ptr  ext;
  1    47 dcl token_block1_ptr ptr  defined (cobol_$token_block1_ptr);
  1    48 dcl cobol_$token_block2_ptr ptr  ext;
  1    49 dcl token_block2_ptr ptr  defined (cobol_$token_block2_ptr);
  1    50 dcl cobol_$minpral5_ptr ptr  ext;
  1    51 dcl minpral5_ptr ptr  defined (cobol_$minpral5_ptr);
  1    52 dcl cobol_$tag_table_ptr ptr  ext;
  1    53 dcl tag_table_ptr ptr  defined (cobol_$tag_table_ptr);
  1    54 dcl cobol_$map_data_ptr ptr  ext;
  1    55 dcl map_data_ptr ptr  defined (cobol_$map_data_ptr);
  1    56 dcl cobol_$ptr_status_ptr ptr  ext;
  1    57 dcl ptr_status_ptr ptr  defined (cobol_$ptr_status_ptr);
  1    58 dcl cobol_$reg_status_ptr ptr  ext;
  1    59 dcl reg_status_ptr ptr  defined (cobol_$reg_status_ptr);
  1    60 dcl cobol_$misc_base_ptr ptr ext;
  1    61 dcl misc_base_ptr ptr defined (cobol_$misc_base_ptr);
  1    62 dcl cobol_$misc_end_ptr ptr ext;
  1    63 dcl misc_end_ptr ptr defined (cobol_$misc_end_ptr);
  1    64 dcl cobol_$list_ptr ptr ext;
  1    65 dcl list_ptr ptr defined (cobol_$list_ptr);
  1    66 dcl cobol_$allo1_ptr ptr ext;
  1    67 dcl allo1_ptr ptr defined (cobol_$allo1_ptr);
  1    68 dcl cobol_$eln_ptr ptr ext;
  1    69 dcl eln_ptr ptr defined (cobol_$eln_ptr);
  1    70 dcl cobol_$diag_ptr ptr ext;
  1    71 dcl diag_ptr ptr defined (cobol_$diag_ptr);
  1    72 dcl cobol_$xref_token_ptr ptr ext;
  1    73 dcl xref_token_ptr ptr defined (cobol_$xref_token_ptr);
  1    74 dcl cobol_$xref_chain_ptr ptr ext;
  1    75 dcl xref_chain_ptr ptr defined (cobol_$xref_chain_ptr);
  1    76 dcl cobol_$statement_info_ptr ptr ext;
  1    77 dcl statement_info_ptr ptr defined (cobol_$statement_info_ptr);
  1    78 dcl cobol_$reswd_ptr ptr ext;
  1    79 dcl reswd_ptr ptr defined (cobol_$reswd_ptr);
  1    80 dcl cobol_$op_con_ptr ptr ext;
  1    81 dcl op_con_ptr ptr defined (cobol_$op_con_ptr);
  1    82 dcl cobol_$ntbuf_ptr ptr ext;
  1    83 dcl ntbuf_ptr ptr defined (cobol_$ntbuf_ptr);
  1    84 dcl cobol_$main_pcs_ptr ptr ext;
  1    85 dcl main_pcs_ptr ptr defined (cobol_$main_pcs_ptr);
  1    86 dcl cobol_$include_info_ptr ptr ext;
  1    87 dcl include_info_ptr ptr defined (cobol_$include_info_ptr);
  1    88 
  1    89 /* FIXED BIN */
  1    90 dcl cobol_$text_wd_off fixed bin  ext;
  1    91 dcl text_wd_off fixed bin  defined (cobol_$text_wd_off);
  1    92 dcl cobol_$con_wd_off fixed bin  ext;
  1    93 dcl con_wd_off fixed bin  defined (cobol_$con_wd_off);
  1    94 dcl cobol_$def_wd_off fixed bin  ext;
  1    95 dcl def_wd_off fixed bin  defined (cobol_$def_wd_off);
  1    96 dcl cobol_$def_max fixed bin  ext;
  1    97 dcl def_max fixed bin  defined (cobol_$def_max);
  1    98 dcl cobol_$link_wd_off fixed bin  ext;
  1    99 dcl link_wd_off fixed bin  defined (cobol_$link_wd_off);
  1   100 dcl cobol_$link_max fixed bin  ext;
  1   101 dcl link_max fixed bin  defined (cobol_$link_max);
  1   102 dcl cobol_$sym_wd_off fixed bin  ext;
  1   103 dcl sym_wd_off fixed bin  defined (cobol_$sym_wd_off);
  1   104 dcl cobol_$sym_max fixed bin  ext;
  1   105 dcl sym_max fixed bin  defined (cobol_$sym_max);
  1   106 dcl cobol_$reloc_text_max fixed bin(24)  ext;
  1   107 dcl reloc_text_max fixed bin(24)  defined (cobol_$reloc_text_max);
  1   108 dcl cobol_$reloc_def_max fixed bin(24)  ext;
  1   109 dcl reloc_def_max fixed bin(24)  defined (cobol_$reloc_def_max);
  1   110 dcl cobol_$reloc_link_max fixed bin(24)  ext;
  1   111 dcl reloc_link_max fixed bin(24)  defined (cobol_$reloc_link_max);
  1   112 dcl cobol_$reloc_sym_max fixed bin(24)  ext;
  1   113 dcl reloc_sym_max fixed bin(24)  defined (cobol_$reloc_sym_max);
  1   114 dcl cobol_$reloc_work_max fixed bin(24)  ext;
  1   115 dcl reloc_work_max fixed bin(24)  defined (cobol_$reloc_work_max);
  1   116 dcl cobol_$pd_map_index fixed bin  ext;
  1   117 dcl pd_map_index fixed bin  defined (cobol_$pd_map_index);
  1   118 dcl cobol_$cobol_data_wd_off fixed bin  ext;
  1   119 dcl cobol_data_wd_off fixed bin  defined (cobol_$cobol_data_wd_off);
  1   120 dcl cobol_$stack_off fixed bin  ext;
  1   121 dcl stack_off fixed bin  defined (cobol_$stack_off);
  1   122 dcl cobol_$max_stack_off fixed bin  ext;
  1   123 dcl max_stack_off fixed bin  defined (cobol_$max_stack_off);
  1   124 dcl cobol_$init_stack_off fixed bin  ext;
  1   125 dcl init_stack_off fixed bin  defined (cobol_$init_stack_off);
  1   126 dcl cobol_$pd_map_sw fixed bin  ext;
  1   127 dcl pd_map_sw fixed bin  defined (cobol_$pd_map_sw);
  1   128 dcl cobol_$next_tag fixed bin  ext;
  1   129 dcl next_tag fixed bin  defined (cobol_$next_tag);
  1   130 dcl cobol_$data_init_flag fixed bin  ext;
  1   131 dcl data_init_flag fixed bin  defined (cobol_$data_init_flag);
  1   132 dcl cobol_$seg_init_flag fixed bin  ext;
  1   133 dcl seg_init_flag fixed bin  defined (cobol_$seg_init_flag);
  1   134 dcl cobol_$alter_flag fixed bin  ext;
  1   135 dcl alter_flag fixed bin  defined (cobol_$alter_flag);
  1   136 dcl cobol_$sect_eop_flag fixed bin  ext;
  1   137 dcl sect_eop_flag fixed bin  defined (cobol_$sect_eop_flag);
  1   138 dcl cobol_$para_eop_flag fixed bin  ext;
  1   139 dcl para_eop_flag fixed bin  defined (cobol_$para_eop_flag);
  1   140 dcl cobol_$priority_no fixed bin  ext;
  1   141 dcl priority_no fixed bin  defined (cobol_$priority_no);
  1   142 dcl cobol_$compile_count fixed bin ext;
  1   143 dcl compile_count fixed bin defined (cobol_$compile_count);
  1   144 dcl cobol_$ptr_assumption_ind fixed bin ext;
  1   145 dcl ptr_assumption_ind fixed bin defined (cobol_$ptr_assumption_ind);
  1   146 dcl cobol_$reg_assumption_ind fixed bin ext;
  1   147 dcl reg_assumption_ind fixed bin defined (cobol_$reg_assumption_ind);
  1   148 dcl cobol_$perform_para_index fixed bin ext;
  1   149 dcl perform_para_index fixed bin defined (cobol_$perform_para_index);
  1   150 dcl cobol_$perform_sect_index fixed bin ext;
  1   151 dcl perform_sect_index fixed bin defined (cobol_$perform_sect_index);
  1   152 dcl cobol_$alter_index fixed bin ext;
  1   153 dcl alter_index fixed bin defined (cobol_$alter_index);
  1   154 dcl cobol_$list_off fixed bin ext;
  1   155 dcl list_off fixed bin defined (cobol_$list_off);
  1   156 dcl cobol_$constant_offset fixed bin ext;
  1   157 dcl constant_offset fixed bin defined (cobol_$constant_offset);
  1   158 dcl cobol_$misc_max fixed bin ext;
  1   159 dcl misc_max fixed bin defined (cobol_$misc_max);
  1   160 dcl cobol_$pd_map_max fixed bin ext;
  1   161 dcl pd_map_max fixed bin defined (cobol_$pd_map_max);
  1   162 dcl cobol_$map_data_max fixed bin ext;
  1   163 dcl map_data_max fixed bin defined (cobol_$map_data_max);
  1   164 dcl cobol_$fixup_max fixed bin ext;
  1   165 dcl fixup_max fixed bin defined (cobol_$fixup_max);
  1   166 dcl cobol_$tag_table_max fixed bin ext;
  1   167 dcl tag_table_max fixed bin defined (cobol_$tag_table_max);
  1   168 dcl cobol_$temp_token_max fixed bin ext;
  1   169 dcl temp_token_max fixed bin defined (cobol_$temp_token_max);
  1   170 dcl cobol_$allo1_max fixed bin ext;
  1   171 dcl allo1_max fixed bin defined (cobol_$allo1_max);
  1   172 dcl cobol_$eln_max fixed bin ext;
  1   173 dcl eln_max fixed bin defined (cobol_$eln_max);
  1   174 dcl cobol_$debug_enable fixed bin ext;
  1   175 dcl debug_enable fixed bin defined (cobol_$debug_enable);
  1   176 dcl cobol_$non_source_offset fixed bin ext;
  1   177 dcl non_source_offset fixed bin defined (cobol_$non_source_offset);
  1   178 dcl cobol_$initval_flag fixed bin ext;
  1   179 dcl initval_flag fixed bin defined (cobol_$initval_flag);
  1   180 dcl cobol_$date_compiled_sw fixed bin ext;
  1   181 dcl date_compiled_sw fixed bin defined (cobol_$date_compiled_sw);
  1   182 dcl cobol_$include_cnt fixed bin ext;
  1   183 dcl include_cnt fixed bin defined (cobol_$include_cnt);
  1   184 dcl cobol_$fs_charcnt fixed bin ext;
  1   185 dcl fs_charcnt fixed bin defined (cobol_$fs_charcnt);
  1   186 dcl cobol_$ws_charcnt fixed bin ext;
  1   187 dcl ws_charcnt fixed bin defined (cobol_$ws_charcnt);
  1   188 dcl cobol_$coms_charcnt fixed bin ext;
  1   189 dcl coms_charcnt fixed bin defined (cobol_$coms_charcnt);
  1   190 dcl cobol_$ls_charcnt fixed bin ext;
  1   191 dcl ls_charcnt fixed bin defined (cobol_$ls_charcnt);
  1   192 dcl cobol_$cons_charcnt fixed bin ext;
  1   193 dcl cons_charcnt fixed bin defined (cobol_$cons_charcnt);
  1   194 dcl cobol_$value_cnt fixed bin ext;
  1   195 dcl value_cnt fixed bin defined (cobol_$value_cnt);
  1   196 dcl cobol_$cd_cnt fixed bin ext;
  1   197 dcl cd_cnt fixed bin defined (cobol_$cd_cnt);
  1   198 dcl cobol_$fs_wdoff fixed bin ext;
  1   199 dcl fs_wdoff fixed bin defined (cobol_$fs_wdoff);
  1   200 dcl cobol_$ws_wdoff fixed bin ext;
  1   201 dcl ws_wdoff fixed bin defined (cobol_$ws_wdoff);
  1   202 dcl cobol_$coms_wdoff fixed bin ext;
  1   203 dcl coms_wdoff fixed bin defined (cobol_$coms_wdoff);
  1   204 
  1   205 /* CHARACTER */
  1   206 dcl cobol_$scratch_dir char (168)   aligned ext;
  1   207 dcl scratch_dir char (168)   aligned defined (cobol_$scratch_dir);			/* -42- */
  1   208 dcl cobol_$obj_seg_name char (32)   aligned ext;
  1   209 dcl obj_seg_name char (32)   aligned defined (cobol_$obj_seg_name);		/* -8- */
  1   210 
  1   211 /* BIT */
  1   212 dcl cobol_$xref_bypass bit(1) aligned ext;
  1   213 dcl xref_bypass bit(1) aligned defined (cobol_$xref_bypass);			/* -1- */
  1   214 dcl cobol_$same_sort_merge_proc bit(1) aligned ext;
  1   215 dcl same_sort_merge_proc bit(1) aligned defined (cobol_$same_sort_merge_proc);		/* -1- */
  1   216 
  1   217 
  1   218 /* END INCLUDE FILE ... cobol_incl.pl1*/
  1   219 
  1   220 
     2541 
  2     1 
  2     2 /* BEGIN INCLUDE FILE ...   cobol_fixed_common.incl.pl1 */
  2     3 /* Modified on 10/27/82 by FCH, [5.1-1], cobol_cln added to save last line num, BUG543(phx13643) */
  2     4 /* Modified on 07/31/80 by FCH, [4.3-1], use_reporting field added for Report Writer */
  2     5 /* Modified on 03/30/79 by FCH, [4.1-1], -card option added */
  2     6 /* Modified on 03/30/79 by FCH, [4.0-2], -svNM option added */
  2     7 /* Modified on 03/02/79 by FCH, [4.0-1], -levNM option added */
  2     8 /* Modified by RAL on 10/13/78, [4.0-0], Added option exp from fil2. */
  2     9 /* Modified by BC on 06/20/77, descriptor added.	*/
  2    10 /* Modified by BC on 06/02/77, init_cd_seg, init_cd_offset added.	*/
  2    11 /* Modified by BC  on 1/21/77, options.profile added.	*/
  2    12 /* Modified by FCH on 7/6/76, sysin_fno & sysout_fno deleted, accept_device & display_device added */
  2    13 /* Modified by FCH on 5/20/77, comp_level added */
  2    14 
  2    15 
  2    16 /*     THE SIZE OF THIS STRUCTURE IN BYTES, (EXCLUDING VARIABLE
  2    17*   LENGTH ENTITIES), FOR EACH HARDWARE IMPLEMENTATION IS:
  2    18*
  2    19*   HARDWARE	|	SIZE (BYTES)
  2    20*   ---------------------------------
  2    21*   645/6180	|	464
  2    22*   P7		|	396
  2    23*   ---------------------------------
  2    24*   */
  2    25 
  2    26 dcl 	1 fixed_common based (  cobol_com_ptr),
  2    27     		2 prog_name char (30),
  2    28    		2 compiler_rev_no char (25),
  2    29     		2 phase_name char (6),
  2    30     		2 currency char (1),
  2    31     		2 fatal_no fixed bin,
  2    32     		2 warn_no fixed bin,
  2    33     		2 proc_counter fixed bin,
  2    34     		2 spec_tag_counter fixed bin,
  2    35     		2 file_count fixed bin,
  2    36     		2 filedescr_offsets (20) char (5),
  2    37     		2 perf_alter_info char (5),
  2    38     		2 another_perform_info char (5),
  2    39     		2 sort_in_info char (5),
  2    40     		2 odo_info char (5),
  2    41     		2 size_seg fixed bin,
  2    42     		2 size_offset fixed bin(24),
  2    43     		2 size_perform_info char (5),
  2    44     		2 rename_info char (5),
  2    45     		2 report_names char (5),
  2    46     		2 rw_buf_seg fixed bin,
  2    47     		2 rw_buf_offset fixed bin(24),
  2    48     		2 rw_buf_length fixed bin(24),
  2    49     		2 file_keys char (5),
  2    50     		2 search_keys char (5),
  2    51     		2 dd_seg_size fixed bin(24),
  2    52     		2 pd_seg_size fixed bin(24),
  2    53     		2 seg_limit fixed bin ,
  2    54     		2 number_of_dd_segs fixed bin,
  2    55     		2 seg_info char (5),
  2    56     		2 number_of_ls_pointers fixed bin,
  2    57     		2 link_sec_seg fixed bin,
  2    58     		2 link_sec_offset fixed bin(24),
  2    59     		2 sra_clauses fixed bin,
  2    60     		2 fix_up_info char (5),
  2    61     		2 linage_info char (5),
  2    62     		2 first_dd_item char (5),
  2    63     		2 sort_out_info char (5),
  2    64     		2 db_info char (5),
  2    65     		2 realm_info char (5),
  2    66     		2 rc_realm_info char (5),
  2    67     		2 last_file_key char (5),
  2    68     		2 prog_coll_seq fixed bin,
  2    69 		2 init_cd_seg fixed bin,
  2    70 		2 init_cd_offset fixed bin(24),
  2    71     		2 input_error_exit fixed bin,
  2    72    		2 output_error_exit fixed bin,
  2    73     		2 i_o_error_exit fixed bin,
  2    74     		2 extend_error_exit fixed bin,
  2    75     		2 dummy15 fixed bin,
  2    76     		2 options,
  2    77       			3 cu bit (1),
  2    78       			3 st bit (1),
  2    79       			3 wn bit (1),
  2    80       			3 obs bit (1),
  2    81       			3 dm bit (1),
  2    82       			3 xrl bit (1),
  2    83       			3 xrn bit (1),
  2    84       			3 src bit (1),
  2    85       			3 obj bit (1),
  2    86       			3 exs bit (1),
  2    87       			3 sck bit (1),
  2    88       			3 rno bit (1),
  2    89 			3 u_l bit (1),
  2    90 			3 cnv bit (1),
  2    91 			3 cos bit (1),
  2    92 			3 fmt bit (1),
  2    93 			3 profile bit(1),
  2    94 			3 nw bit (1),
  2    95 			3 exp bit (1),		/* [4.0-0] */
  2    96 			3 card bit (1),  /*[4.1-1]*/
  2    97 			3 fil2 bit (5),
  2    98 			3 m_map bit (1),
  2    99 			3 m_bf bit (1),
  2   100 			3 m_fat bit (1),
  2   101 			3 m_wn bit (1),
  2   102 			3 m_obs bit(1),
  2   103 			3 pd bit(1),
  2   104       			3 oc bit(1),
  2   105     		2 supervisor bit (1),
  2   106     		2 dec_comma bit (1),
  2   107     		2 init_cd bit (1),
  2   108     		2 corr bit (1),
  2   109     		2 initl bit (1),
  2   110     		2 debug bit (1),
  2   111     		2 report bit (1),
  2   112     		2 sync_in_prog bit (1),
  2   113     		2 pd_section bit (1),
  2   114     		2 list_switch bit (1),
  2   115     		2 alpha_cond bit (1),
  2   116     		2 num_cond bit (1),
  2   117     		2 spec_sysin bit (1),
  2   118     		2 spec_sysout bit (1),
  2   119     		2 cpl_files bit (1),
  2   120     		2 obj_dec_comma bit (1),
  2   121 		2 default_sign_type bit (3),
  2   122 		2 use_debug bit(1),
  2   123 		2 syntax_trace bit(1),
  2   124 		2 comp_defaults,
  2   125 			3 comp	bit(1),
  2   126 			3 comp_1	bit(1),
  2   127 			3 comp_2	bit(1),
  2   128 			3 comp_3	bit(1),
  2   129 			3 comp_4	bit(1),
  2   130 			3 comp_5	bit(1),
  2   131 			3 comp_6	bit(1),
  2   132 			3 comp_7	bit(1),
  2   133 			3 comp_8 bit(1),
  2   134 		2 disp_defaults,
  2   135 			3 disp	bit(1),
  2   136 			3 disp_1	bit(1),
  2   137 			3 disp_2	bit(1),
  2   138 			3 disp_3	bit(1),
  2   139 			3 disp_4	bit(1),
  2   140 			3 disp_5  bit(1),
  2   141 			3 disp_6  bit(1),
  2   142 			3 disp_7  bit(1),
  2   143 		2 descriptor bit(2),
  2   144 		2 levsv  bit(3),		/*[4.0-1]*/
  2   145 		2 use_reporting bit(1),	/*[4.3-1]*/
  2   146 		2 cd bit(1),		/*[4.4-1]*/
  2   147 		2 dummy17 bit(3),
  2   148    		2 lvl_rstr bit(32),
  2   149    		2 inst_rstr bit(32),
  2   150 		2 comp_level char(1),
  2   151 		2 dummy18 char(30),
  2   152 		2 object_sign char (1),
  2   153     		2 last_print_rec char (5),
  2   154     		2 coll_seq_info char (5),
  2   155     		2 sys_status_seg fixed bin,
  2   156    		2 sys_status_offset fixed bin(24),
  2   157    		2 compiler_id fixed bin,
  2   158    		2 date_comp_ln fixed bin,
  2   159    		2 compile_mode bit(36),
  2   160    		2 default_temp fixed bin,
  2   161    		2 accept_device fixed bin,
  2   162    		2 display_device fixed bin,
  2   163    		2 cobol_cln fixed bin,	/*[5.1-1]*/
  2   164 		2 alphabet_offset fixed bin;
  2   165 
  2   166 
  2   167 
  2   168 /* END INCLUDE FILE ...   cobol_fixed_common.incl.pl1 */
  2   169 
     2542 
  3     1 
  3     2 /* BEGIN INCLUDE FILE ... cobol_ext_.incl.pl1 */
  3     3 /* Last modified on 06/17/76 by ORN */
  3     4 /* Last modified on 12/28/76 by FCH */
  3     5 /* Last modified on 12/01/80 by FCH */
  3     6 
  3     7 /*    <<<   SHARED EXTERNALS INCLUDE FILE   >>>    */
  3     8 
  3     9 
  3    10 dcl     cobol_ext_$cobol_afp ptr ext;
  3    11 dcl     cobol_afp ptr defined (  cobol_ext_$cobol_afp);
  3    12 dcl     cobol_ext_$cobol_analin_fileno ptr ext;
  3    13 dcl     cobol_analin_fileno ptr defined (  cobol_ext_$cobol_analin_fileno);
  3    14 dcl     cobol_ext_$report_first_token ptr ext;
  3    15 dcl     report_first_token ptr defined( cobol_ext_$report_first_token);
  3    16 dcl     cobol_ext_$report_last_token ptr ext;
  3    17 dcl     report_last_token ptr defined ( cobol_ext_$report_last_token);
  3    18 dcl     cobol_ext_$cobol_eltp ptr ext;
  3    19 dcl     cobol_eltp ptr defined (  cobol_ext_$cobol_eltp);
  3    20 dcl     cobol_ext_$cobol_cmfp ptr ext;
  3    21 dcl     cobol_cmfp ptr defined (  cobol_ext_$cobol_cmfp);
  3    22 dcl     cobol_ext_$cobol_com_fileno ptr ext;
  3    23 dcl     cobol_com_fileno ptr defined (  cobol_ext_$cobol_com_fileno);
  3    24 dcl     cobol_ext_$cobol_com_ptr ptr ext;
  3    25 dcl     cobol_com_ptr ptr defined (  cobol_ext_$cobol_com_ptr);
  3    26 dcl     cobol_ext_$cobol_dfp ptr ext;
  3    27 dcl     cobol_dfp ptr defined (  cobol_ext_$cobol_dfp);
  3    28 dcl     cobol_ext_$cobol_hfp ptr ext;
  3    29 dcl     cobol_hfp ptr defined (  cobol_ext_$cobol_hfp);
  3    30 dcl     cobol_ext_$cobol_m1fp ptr ext;
  3    31 dcl     cobol_m1fp ptr defined (  cobol_ext_$cobol_m1fp);
  3    32 dcl     cobol_ext_$cobol_m2fp ptr ext;
  3    33 dcl     cobol_m2fp ptr defined (  cobol_ext_$cobol_m2fp);
  3    34 dcl     cobol_ext_$cobol_min1_fileno ptr ext;
  3    35 dcl     cobol_min1_fileno ptr defined (  cobol_ext_$cobol_min1_fileno);
  3    36 dcl     cobol_ext_$cobol_min2_fileno_ptr ptr ext;
  3    37 dcl     cobol_min2_fileno_ptr ptr defined (  cobol_ext_$cobol_min2_fileno_ptr);
  3    38 dcl     cobol_ext_$cobol_name_fileno ptr ext;
  3    39 dcl     cobol_name_fileno ptr defined (  cobol_ext_$cobol_name_fileno);
  3    40 dcl     cobol_ext_$cobol_name_fileno_ptr ptr ext;
  3    41 dcl     cobol_name_fileno_ptr ptr defined (  cobol_ext_$cobol_name_fileno_ptr);
  3    42 dcl     cobol_ext_$cobol_ntfp ptr ext;
  3    43 dcl     cobol_ntfp ptr defined (  cobol_ext_$cobol_ntfp);
  3    44 dcl     cobol_ext_$cobol_pdofp ptr ext;
  3    45 dcl     cobol_pdofp ptr defined (  cobol_ext_$cobol_pdofp);
  3    46 dcl     cobol_ext_$cobol_pfp ptr ext;
  3    47 dcl     cobol_pfp ptr defined (  cobol_ext_$cobol_pfp);
  3    48 dcl     cobol_ext_$cobol_rm2fp ptr ext;
  3    49 dcl     cobol_rm2fp ptr defined (  cobol_ext_$cobol_rm2fp);
  3    50 dcl     cobol_ext_$cobol_rmin2fp ptr ext;
  3    51 dcl     cobol_rmin2fp ptr defined (  cobol_ext_$cobol_rmin2fp);
  3    52 dcl     cobol_ext_$cobol_curr_in ptr ext;
  3    53 dcl     cobol_curr_in ptr defined (  cobol_ext_$cobol_curr_in);
  3    54 dcl     cobol_ext_$cobol_curr_out ptr ext;
  3    55 dcl     cobol_curr_out ptr defined (  cobol_ext_$cobol_curr_out);
  3    56 dcl     cobol_ext_$cobol_sfp ptr ext;
  3    57 dcl     cobol_sfp ptr defined (  cobol_ext_$cobol_sfp);
  3    58 dcl     cobol_ext_$cobol_w1p ptr ext;
  3    59 dcl     cobol_w1p ptr defined (  cobol_ext_$cobol_w1p);
  3    60 dcl     cobol_ext_$cobol_w2p ptr ext;
  3    61 dcl     cobol_w2p ptr defined (  cobol_ext_$cobol_w2p);
  3    62 dcl     cobol_ext_$cobol_w3p ptr ext;
  3    63 dcl     cobol_w3p ptr defined (  cobol_ext_$cobol_w3p);
  3    64 dcl     cobol_ext_$cobol_w5p ptr ext;
  3    65 dcl     cobol_w5p ptr defined (  cobol_ext_$cobol_w5p);
  3    66 dcl     cobol_ext_$cobol_w6p ptr ext;
  3    67 dcl     cobol_w6p ptr defined (  cobol_ext_$cobol_w6p);
  3    68 dcl     cobol_ext_$cobol_w7p ptr ext;
  3    69 dcl     cobol_w7p ptr defined (  cobol_ext_$cobol_w7p);
  3    70 dcl     cobol_ext_$cobol_x3fp ptr ext;
  3    71 dcl     cobol_x3fp ptr defined (  cobol_ext_$cobol_x3fp);
  3    72 dcl	cobol_ext_$cobol_rwdd ptr ext;
  3    73 dcl	cobol_rwdd ptr defined(cobol_ext_$cobol_rwdd);
  3    74 dcl	cobol_ext_$cobol_rwpd ptr ext;
  3    75 dcl	cobol_rwpd ptr defined(cobol_ext_$cobol_rwpd);
  3    76 
  3    77 
  3    78 dcl     cobol_ext_$cobol_fileno1 fixed bin(24)ext;
  3    79 dcl     cobol_fileno1 fixed bin(24)defined (  cobol_ext_$cobol_fileno1);				
  3    80 dcl     cobol_ext_$cobol_options_len fixed bin(24)ext;
  3    81 dcl     cobol_options_len fixed bin(24)defined (  cobol_ext_$cobol_options_len);
  3    82 dcl     cobol_ext_$cobol_pdout_fileno fixed bin(24)ext;
  3    83 dcl     cobol_pdout_fileno fixed bin(24)defined (  cobol_ext_$cobol_pdout_fileno);			
  3    84 dcl     cobol_ext_$cobol_print_fileno fixed bin(24)ext;
  3    85 dcl     cobol_print_fileno fixed bin(24)defined (  cobol_ext_$cobol_print_fileno);			
  3    86 dcl     cobol_ext_$cobol_rmin2_fileno fixed bin(24)ext;
  3    87 dcl     cobol_rmin2_fileno fixed bin(24)defined (  cobol_ext_$cobol_rmin2_fileno);
  3    88 dcl     cobol_ext_$cobol_x1_fileno fixed bin(24)ext;
  3    89 dcl     cobol_x1_fileno fixed bin(24)defined (  cobol_ext_$cobol_x1_fileno);				
  3    90 dcl     cobol_ext_$cobol_x2_fileno fixed bin(24)ext;
  3    91 dcl     cobol_x2_fileno fixed bin(24)defined (  cobol_ext_$cobol_x2_fileno);
  3    92 dcl     cobol_ext_$cobol_x3_fileno fixed bin(24)ext;
  3    93 dcl     cobol_x3_fileno fixed bin(24)defined (  cobol_ext_$cobol_x3_fileno);
  3    94 
  3    95 dcl     cobol_ext_$cobol_lpr char (5) ext;
  3    96 dcl     cobol_lpr char (5) defined (  cobol_ext_$cobol_lpr);				/* -2- */
  3    97 dcl     cobol_ext_$cobol_options char (120) ext;
  3    98 dcl     cobol_options char (120) defined (  cobol_ext_$cobol_options);          			/* -30- */
  3    99 
  3   100 dcl     cobol_ext_$cobol_xlast8 bit (1) ext;
  3   101 dcl     cobol_xlast8 bit (1) defined (  cobol_ext_$cobol_xlast8);				/* -1- */
  3   102 dcl     cobol_ext_$report_exists bit (1) ext;
  3   103 dcl     report_exists bit (1) defined (  cobol_ext_$report_exists);
  3   104 
  3   105 
  3   106 /*    <<<   END OF SHARED EXTERNALS INCLUDE FILE   >>>    */
  3   107 /* END INCLUDE FILE ... cobol_ext_.incl.pl1 */
  3   108 
     2543 
  4     1 
  4     2 /* BEGIN INCLUDE FILE ... fsb.incl.pl1 */
  4     3 /* Last modified APR 28, 1977 by GM */
  4     4 /* Last modified AUG 13, 1976 by GM */
  4     5 /* Last modified JULY 19, 1976 by GM */
  4     6 /* Last modified Oct 31, 1974 by ORN */
  4     7 
  4     8 dcl fsb_ptr ptr;
  4     9 dcl 1 fsb based(fsb_ptr),	/* the file state block */
  4    10      2 iocb_ptr ptr,	/* set by open */
  4    11      2 open_mode fixed bin,
  4    12      2 max_cra_size fixed bin,
  4    13      2 relkeylen fixed bin,
  4    14      2 relkey fixed bin,
  4    15      2 keylen_sw fixed bin,
  4    16      2 key char(256) aligned,
  4    17      2 realign_struc unal,
  4    18      3 open_close_name char(65) unal,
  4    19      3 attach_flag bit(1) unal,
  4    20      2 linage_counter char(8) aligned,	
  4    21      2 optional bit(2),
  4    22      2 opened bit(1),	/* file opened at least once */
  4    23      2 internal bit(1) unal,	/* 0 if external, 1 if internal */
  4    24      2 lock bit(1) unal, 	/* 0=no lock, 1= lock reset by start of new run unit */
  4    25      2 page_size_reset fixed bin,	/* if LINAGE is Data Name  this value may be reset at EOP */
  4    26      2 page_size fixed bin,		/* must be specified whenever linage present */
  4    27      2 footing_size fixed bin,	/* default = page_size */
  4    28      2 top_size fixed bin,	/* default = 0 */
  4    29      2 bottom_size fixed bin;	/* default = 0 */
  4    30 
  4    31 /* END INCLUDE FILE ... fsb.incl.pl1 */
  4    32 
     2544 
  5     1 /* BEGIN INCLUDE FILE ..... iocb.incl.pl1 ..... 13 Feb 1975, M. Asherman */
  5     2 /* Modified 11/29/82 by S. Krupp to add new entries and to change
  5     3*      version number to IOX2. */
  5     4 /* format: style2 */
  5     5 
  5     6      dcl	   1 iocb		      aligned based,	/* I/O control block. */
  5     7 	     2 version	      character (4) aligned,	/* IOX2 */
  5     8 	     2 name	      char (32),		/* I/O name of this block. */
  5     9 	     2 actual_iocb_ptr    ptr,		/* IOCB ultimately SYNed to. */
  5    10 	     2 attach_descrip_ptr ptr,		/* Ptr to printable attach description. */
  5    11 	     2 attach_data_ptr    ptr,		/* Ptr to attach data structure. */
  5    12 	     2 open_descrip_ptr   ptr,		/* Ptr to printable open description. */
  5    13 	     2 open_data_ptr      ptr,		/* Ptr to open data structure (old SDB). */
  5    14 	     2 reserved	      bit (72),		/* Reserved for future use. */
  5    15 	     2 detach_iocb	      entry (ptr, fixed (35)),/* detach_iocb(p,s) */
  5    16 	     2 open	      entry (ptr, fixed, bit (1) aligned, fixed (35)),
  5    17 						/* open(p,mode,not_used,s) */
  5    18 	     2 close	      entry (ptr, fixed (35)),/* close(p,s) */
  5    19 	     2 get_line	      entry (ptr, ptr, fixed (21), fixed (21), fixed (35)),
  5    20 						/* get_line(p,bufptr,buflen,actlen,s) */
  5    21 	     2 get_chars	      entry (ptr, ptr, fixed (21), fixed (21), fixed (35)),
  5    22 						/* get_chars(p,bufptr,buflen,actlen,s) */
  5    23 	     2 put_chars	      entry (ptr, ptr, fixed (21), fixed (35)),
  5    24 						/* put_chars(p,bufptr,buflen,s) */
  5    25 	     2 modes	      entry (ptr, char (*), char (*), fixed (35)),
  5    26 						/* modes(p,newmode,oldmode,s) */
  5    27 	     2 position	      entry (ptr, fixed, fixed (21), fixed (35)),
  5    28 						/* position(p,u1,u2,s) */
  5    29 	     2 control	      entry (ptr, char (*), ptr, fixed (35)),
  5    30 						/* control(p,order,infptr,s) */
  5    31 	     2 read_record	      entry (ptr, ptr, fixed (21), fixed (21), fixed (35)),
  5    32 						/* read_record(p,bufptr,buflen,actlen,s) */
  5    33 	     2 write_record	      entry (ptr, ptr, fixed (21), fixed (35)),
  5    34 						/* write_record(p,bufptr,buflen,s) */
  5    35 	     2 rewrite_record     entry (ptr, ptr, fixed (21), fixed (35)),
  5    36 						/* rewrite_record(p,bufptr,buflen,s) */
  5    37 	     2 delete_record      entry (ptr, fixed (35)),/* delete_record(p,s) */
  5    38 	     2 seek_key	      entry (ptr, char (256) varying, fixed (21), fixed (35)),
  5    39 						/* seek_key(p,key,len,s) */
  5    40 	     2 read_key	      entry (ptr, char (256) varying, fixed (21), fixed (35)),
  5    41 						/* read_key(p,key,len,s) */
  5    42 	     2 read_length	      entry (ptr, fixed (21), fixed (35)),
  5    43 						/* read_length(p,len,s) */
  5    44 	     2 open_file	      entry (ptr, fixed bin, char (*), bit (1) aligned, fixed bin (35)),
  5    45 						/* open_file(p,mode,desc,not_used,s) */
  5    46 	     2 close_file	      entry (ptr, char (*), fixed bin (35)),
  5    47 						/* close_file(p,desc,s) */
  5    48 	     2 detach	      entry (ptr, char (*), fixed bin (35));
  5    49 						/* detach(p,desc,s) */
  5    50 
  5    51      declare iox_$iocb_version_sentinel
  5    52 			      character (4) aligned external static;
  5    53 
  5    54 /* END INCLUDE FILE ..... iocb.incl.pl1 ..... */
     2545 
  6     1 /* BEGIN INCLUDE FILE  ... cobol_ecs_info.incl.pl1 */
  6     2 /* Modified on 10/09/79 by FCH, [4.0-2], new field added */
  6     3 /* Modified on 03/02/79 by FCH, [4.0-1], -levsv option */
  6     4 /* Modified on 10/27/81 by FCH, [5.1-1], new fields added */
  6     5 
  6     6 	dcl	ecs_info_ptr	ptr;
  6     7 
  6     8 	dcl
  6     9 
  6    10 	1	ecs_info_table_	 based (ecs_info_ptr),
  6    11 
  6    12 	2	expand_cobol_source_info,
  6    13 	3	input_ptr		ptr,
  6    14 	3	output_ptr	ptr,
  6    15 	3	format_indicator	bit (1),
  6    16 	3	card_indicator	bit(1),	/*[4.0-2]*/
  6    17 	3	exp_indicator	bit(1),	/*[4.0-2]*/
  6    18 	3	command		bit(1),	/*[5.1-1]*/
  6    19 	3	dir		char(168),	/*[4.0-2]*/
  6    20 	3	ent		char(32),	/*[4.0-2]*/
  6    21 
  6    22 	2	compiler_info,
  6    23 	3	compiler_level	char (1),
  6    24 	3	diag_indicators	bit (3),
  6    25 	3	levsv		bit(3),	/*[4.0-1]*/
  6    26 	3	fatal_count	fixed bin,
  6    27 	3	bc		fixed bin(24);	/*[5.1-1]*/
  6    28 
  6    29 /* END INCLUDE FILE ... cobol_ecs_info.incl.pl1 */
     2546 
     2547 /* [3.0-8] */
     2548 
     2549 /*[4.4-7]*/
     2550 declare	1 branch_status	aligned like status_branch;
     2551 
  7     1 /* --------------- BEGIN include file status_structures.incl.pl1 --------------- */
  7     2 
  7     3 /* Revised from existing include files 09/26/78 by C. D. Tavares */
  7     4 
  7     5 /* This include file contains branch and link structures returned by
  7     6*   hcs_$status_ and hcs_$status_long. */
  7     7 
  7     8 dcl 1 status_branch aligned based (status_ptr),
  7     9     2 short aligned,
  7    10       3 type fixed bin (2) unaligned unsigned,		/* seg, dir, or link */
  7    11       3 nnames fixed bin (16) unaligned unsigned,		/* number of names */
  7    12       3 names_relp bit (18) unaligned,			/* see entry_names dcl */
  7    13       3 dtcm bit (36) unaligned,			/* date/time contents last modified */
  7    14       3 dtu bit (36) unaligned,			/* date/time last used */
  7    15       3 mode bit (5) unaligned,			/* caller's effective access */
  7    16       3 raw_mode bit (5) unaligned,			/* caller's raw "rew" modes */
  7    17       3 pad1 bit (8) unaligned,
  7    18       3 records_used fixed bin (18) unaligned unsigned,	/* number of NONZERO pages used */
  7    19 
  7    20 /* Limit of information returned by hcs_$status_ */
  7    21 
  7    22     2 long aligned,
  7    23       3 dtd bit (36) unaligned,			/* date/time last dumped */
  7    24       3 dtem bit (36) unaligned,			/* date/time branch last modified */
  7    25       3 lvid bit (36) unaligned,			/* logical volume ID */
  7    26       3 current_length fixed bin (12) unaligned unsigned,	/* number of last page used */
  7    27       3 bit_count fixed bin (24) unaligned unsigned,	/* reported length in bits */
  7    28       3 pad2 bit (8) unaligned,
  7    29       3 copy_switch bit (1) unaligned,			/* copy switch */
  7    30       3 tpd_switch bit (1) unaligned,			/* transparent to paging device switch */
  7    31       3 mdir_switch bit (1) unaligned,			/* is a master dir */
  7    32       3 damaged_switch bit (1) unaligned,		/* salvager warned of possible damage */
  7    33       3 synchronized_switch bit (1) unaligned,		/* DM synchronized file */
  7    34       3 pad3 bit (5) unaligned,
  7    35       3 ring_brackets (0:2) fixed bin (6) unaligned unsigned, 
  7    36       3 uid bit (36) unaligned;			/* unique ID */
  7    37 
  7    38 dcl 1 status_link aligned based (status_ptr),
  7    39     2 type fixed bin (2) unaligned unsigned,		/* as above */
  7    40     2 nnames fixed bin (16) unaligned unsigned,
  7    41     2 names_relp bit (18) unaligned,
  7    42     2 dtem bit (36) unaligned,
  7    43     2 dtd bit (36) unaligned,
  7    44     2 pathname_length fixed bin (17) unaligned,		/* see pathname */
  7    45     2 pathname_relp bit (18) unaligned;			/* see pathname */
  7    46 
  7    47 dcl  status_entry_names (status_branch.nnames) character (32) aligned
  7    48 	based (pointer (status_area_ptr, status_branch.names_relp)),
  7    49 						/* array of names returned */
  7    50      status_pathname character (status_link.pathname_length) aligned
  7    51 	based (pointer (status_area_ptr, status_link.pathname_relp)),
  7    52 						/* link target path */
  7    53      status_area_ptr pointer,
  7    54      status_ptr pointer;
  7    55 
  7    56 dcl (Link initial (0),
  7    57      Segment initial (1),
  7    58      Directory initial (2)) fixed bin internal static options (constant);
  7    59 						/* values for type fields declared above */
  7    60 
  7    61 /* ---------------- END include file status_structures.incl.pl1 ---------------- */
     2552 
     2553 
  8     1 /* BEGIN INCLUDE FILE area_info.incl.pl1  12/75 */
  8     2 
  8     3 dcl  area_info_version_1 fixed bin static init (1) options (constant);
  8     4 
  8     5 dcl  area_infop ptr;
  8     6 
  8     7 dcl 1 area_info aligned based (area_infop),
  8     8     2 version fixed bin,				/* version number for this structure is 1 */
  8     9     2 control aligned like area_control,		/* control bits for the area */
  8    10     2 owner char (32) unal,				/* creator of the area */
  8    11     2 n_components fixed bin,				/* number of components in the area (returned only) */
  8    12     2 size fixed bin (18),				/* size of the area in words */
  8    13     2 version_of_area fixed bin,			/* version of area (returned only) */
  8    14     2 areap ptr,					/* pointer to the area (first component on multisegment area) */
  8    15     2 allocated_blocks fixed bin,			/* number of blocks allocated */
  8    16     2 free_blocks fixed bin,				/* number of free blocks not in virgin */
  8    17     2 allocated_words fixed bin (30),			/* number of words allocated in the area */
  8    18     2 free_words fixed bin (30);			/* number of words free in area not in virgin */
  8    19 
  8    20 dcl 1 area_control aligned based,
  8    21     2 extend bit (1) unal,				/* says area is extensible */
  8    22     2 zero_on_alloc bit (1) unal,			/* says block gets zerod at allocation time */
  8    23     2 zero_on_free bit (1) unal,			/* says block gets zerod at free time */
  8    24     2 dont_free bit (1) unal,			/* debugging aid, turns off free requests */
  8    25     2 no_freeing bit (1) unal,			/* for allocation method without freeing */
  8    26     2 system bit (1) unal,				/* says area is managed by system */
  8    27     2 pad bit (30) unal;
  8    28 
  8    29 /* END INCLUDE FILE area_info.incl.pl1 */
     2554 
     2555 /* [3.0-9] */
     2556 
     2557 declare	1 cond_info	static,
  9     1 	/* BEGIN INCLUDE FILE ... cond_info.incl.pl1
  9     2*	   coded by M. Weaver 12 July 1973 */
  9     3 
  9     4 	  2 mcptr ptr,				/* ptr to machine conditions at time of fault */
  9     5 	  2 version fixed bin,			/* version of this structure (now=1) */
  9     6 	  2 condition_name char(32) var,		/* name of condition */
  9     7 	  2 infoptr ptr,				/* ptr to software info structure */
  9     8 	  2 wcptr ptr,				/* ptr to wall crossing machine conditions */
  9     9 	  2 loc_ptr ptr,				/* ptr to location where condition occurred */
  9    10 	  2 flags aligned,
  9    11 	    3 crawlout bit(1) unal,			/* = "1"b if condition occurred in inner ring */
  9    12 	    3 pad1 bit(35) unal,
  9    13 	  2 pad_word bit(36) aligned,
  9    14 	  2 user_loc_ptr ptr,			/* ptr to last non-support loc before condition */
  9    15 	  2 pad (4) bit(36) aligned;
  9    16 
  9    17 	/* END INCLUDE FILE ... cond_info.incl.pl1 */
     2558 
     2559      end cobol;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/24/89  0835.4  cobol.pl1                         >spec>install>MR12.3-1048>cobol.pl1
2541         1    11/11/82  1712.7  cobol_.incl.pl1                   >ldd>include>cobol_.incl.pl1
2542         2    11/11/82  1712.8  cobol_fixed_common.incl.pl1       >ldd>include>cobol_fixed_common.incl.pl1
2543         3    03/27/82  0431.3  cobol_ext_.incl.pl1               >ldd>include>cobol_ext_.incl.pl1
2544         4    03/27/82  0439.3  cobol_fsb.incl.pl1                >ldd>include>cobol_fsb.incl.pl1
2545         5    05/20/83  1846.4  iocb.incl.pl1                     >ldd>include>iocb.incl.pl1
2546         6    11/11/82  1712.8  cobol_ecs_info.incl.pl1           >ldd>include>cobol_ecs_info.incl.pl1
2552         7    11/22/82  0955.7  status_structures.incl.pl1        >ldd>include>status_structures.incl.pl1
2554         8    06/11/76  1043.4  area_info.incl.pl1                >ldd>include>area_info.incl.pl1
2558         9    05/06/74  1741.0  cond_info.incl.pl1                >ldd>include>cond_info.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
BC                       77     000010 internal static fixed bin(24,0)          level 2 dcl 2165 set ref 1065* 1080 1184* 1194*
                                                                                  1506* 1511
COMP_LEVEL              250(09) 000010 internal static char(1)                  level 2 packed packed unaligned dcl 2165 set ref
                                                                                  638* 1038 1038 1842*
DIRECTORY                              constant        fixed bin(2,0)           initial dcl 2163 ref 811
LEVSV                   100(01) 000010 internal static bit(3)                   level 2 packed packed unaligned dcl 2165 set ref
                                                                                  639* 1042 1845* 1847* 1849*
M1                              001067 internal static char(77)                 initial level 2 packed packed unaligned dcl 2377 set
                                                                                  ref 1104* 1111*
M2                       23(09) 001067 internal static char(60)                 initial level 2 packed packed unaligned dcl 2377 set
                                                                                  ref 1105* 1128*
M3                       42(09) 001067 internal static char(102)                initial level 2 packed packed unaligned dcl 2377 set
                                                                                  ref 2154*
M4                       73(27) 001067 internal static char(111)                initial level 2 packed packed unaligned dcl 2377 set
                                                                                  ref 1143*
MESS                            001067 internal static structure                level 1 packed packed unaligned dcl 2377
MODE                     51     000010 internal static fixed bin(17,0)          level 2 dcl 2165 set ref 98* 106* 114* 469* 569 1033
                                                                                  1254
ST                      100(04) 000010 internal static bit(32)                  level 2 packed packed unaligned dcl 2165 set ref
                                                                                  400* 1023* 1024* 1025* 1027* 1211* 1212* 1213*
                                                                                  1217* 1238* 1268* 1269* 1309* 1323* 1355* 1356*
                                                                                  1357* 1358* 1359* 1360* 1380* 1381* 1383* 1392*
                                                                                  1475* 1480* 1481* 1488* 1489* 1490* 1495* 1497*
                                                                                  1568* 1569* 1632* 1636* 1640* 1642* 1720* 1740*
                                                                                  1746* 1748* 1768* 1770* 1778* 1781* 1791* 1797*
                                                                                  1799* 1901*
abort_sw                101(02) 000010 internal static bit(1)                   level 2 packed packed unaligned dcl 2165 set ref 261
                                                                                  263* 416 649* 1457 1518 1521 1644 2054 2056*
absolute_pathname_              001536 constant        entry                    external dcl 2534 ref 792
action                   11            based           fixed bin(17,0)          level 2 dcl 1961 ref 1991 1994 2007 2011 2011
action_con                      000110 automatic       char(10)                 initial array packed unaligned dcl 1981 set ref
                                                                                  1981* 1981* 1981* 1981* 1981* 1981* 1981* 2007*
addr                                                   builtin function         dcl 2449 ref 168 168 211 852 852 955 956 957 958 969
                                                                                  969 976 1025 1025 1163 1196 1938 1938 2114
alloc_size                             parameter       fixed bin(35,0)          dcl 218 ref 215 220
area_control                           based           structure                level 1 dcl 8-20
area_info                              based           structure                level 1 dcl 8-7
area_info_area                  000172 automatic       structure                level 1 dcl 2244 set ref 2114
area_info_version_1                    constant        fixed bin(17,0)          initial dcl 8-3 ref 2116
area_infop                      000254 automatic       pointer                  dcl 8-5 set ref 2114* 2123*
areap                    16     000172 automatic       pointer                  level 2 dcl 2244 set ref 317* 2118* 2141 2141*
arg                     642(27) 000010 internal static char(16)                 level 2 packed packed unaligned dcl 2165 set ref
                                                                                  498* 539* 669* 672 672 677 677 677 677 679 689 692
                                                                                  692 695 695 704 707 707 710 710 720 720 722 722
                                                                                  724 724 726 726 728 728 730 730 738 738 740 740
                                                                                  743 745 745 747 747 754 754 760 760 824 824 834
                                                                                  837 839 841 843 845 847 855 858 858 861 861 861
                                                                                  861 870 873 873 876 876 876 876 894
arg_ptr                   4     000010 internal static pointer                  level 2 dcl 2165 set ref 353* 427 488 516 527 555*
                                                                                  666 669 677 770* 774 780 785 792 904
argb                                   based           char                     packed unaligned dcl 2411 set ref 427* 488 516 527
                                                                                  666 669 677* 774 780* 785* 792* 904
attach_descrip                         based           varying char(172)        dcl 1983 ref 2022 2022
attach_descrip_ptr       14            based           pointer                  level 2 dcl 5-6 ref 2022 2022
bc                                     parameter       fixed bin(24,0)          dcl 155 in procedure "cobol" set ref 145 149*
bc                       71     000100 automatic       fixed bin(24,0)          level 3 in structure "ecs_info_table" dcl 2243
                                                                                  in procedure "cobol" set ref 1184
branch_status                   000242 automatic       structure                level 1 dcl 2550 set ref 168 168 1196
c_name                          001220 internal static structure                level 1 unaligned dcl 2390 set ref 211
card                    133(19) 000703 internal static bit(1)                   level 3 packed packed unaligned dcl 2246 set ref
                                                                                  636* 743* 1101 1125 1136 1144* 1165
card_indicator            4(01) 000100 automatic       bit(1)                   level 3 packed packed unaligned dcl 2243 set ref
                                                                                  1165*
cc                       60     000010 internal static fixed bin(17,0)          initial level 2 dcl 2165 set ref 1006* 1006 1007
ch                              000302 automatic       char(1)                  packed unaligned dcl 478 set ref 488* 491 491 495*
                                                                                  498
ch1                     250(18) 000010 internal static char(1)                  level 2 in structure "stat" packed packed unaligned
                                                                                  dcl 2165 in procedure "cobol" set ref 1096* 1098
                                                                                  1098 1098 1098
ch1                             000312 automatic       char(1)                  packed unaligned dcl 507 in procedure "slv" set ref
                                                                                  516* 519 519 523* 534* 539
ch2                             000313 automatic       char(1)                  packed unaligned dcl 507 set ref 510* 527* 530 530
                                                                                  534* 539
cleanup                         000232 stack reference condition                dcl 2434 ref 310 1896
cobol$define_data               001354 constant        entry                    external dcl 2438 ref 372
cobol$restart                   001366 constant        entry                    external dcl 2452 ref 2043
cobol_$compile_count            001562 external static fixed bin(17,0)          dcl 1-142 set ref 1007*
cobol_$con_wd_off               001554 external static fixed bin(17,0)          dcl 1-92 ref 1583 1583
cobol_$constant_offset          001566 external static fixed bin(17,0)          dcl 1-156 set ref 1583*
cobol_$include_cnt              001570 external static fixed bin(17,0)          dcl 1-182 ref 1899 1899
cobol_$include_info_ptr         001552 external static pointer                  dcl 1-86 ref 1068 1901
cobol_$initval_file_ptr         001544 external static pointer                  dcl 1-34 set ref 1022* 1323* 1355* 1636*
cobol_$list_off                 001564 external static fixed bin(17,0)          dcl 1-154 set ref 1511*
cobol_$list_ptr                 001550 external static pointer                  dcl 1-64 set ref 1506* 1508 1514*
cobol_$minpral5_ptr             001546 external static pointer                  dcl 1-50 set ref 1556* 1558
cobol_$next_tag                 001560 external static fixed bin(17,0)          dcl 1-128 set ref 1552*
cobol_$obj_seg_name             001572 external static char(32)                 dcl 1-208 set ref 1044* 1504 1504
cobol_$pd_map_sw                001556 external static fixed bin(17,0)          dcl 1-126 set ref 1561* 1563*
cobol_area                             based           area(1024)               dcl 2421 ref 173 220
cobol_area_ptr           26     000010 internal static pointer                  level 2 dcl 2165 set ref 173 220 2128*
cobol_ci_phase                  001420 constant        entry                    external dcl 2464 ref 1400
cobol_cmfp                             defined         pointer                  dcl 3-21 set ref 1011* 1024* 1025* 1027* 1273 1640*
cobol_com_fileno                       defined         pointer                  dcl 3-23 set ref 1273*
cobol_com_ptr                          defined         pointer                  dcl 3-25 set ref 391 416 574 581 588 595 1025 1027*
                                                                                  1038 1042 1043 1113 1169 1172 1187 1187 1215 1228
                                                                                  1233 1236 1245 1245 1247 1276 1280 1282 1282 1300
                                                                                  1304 1395 1395 1403 1408 1411 1423 1428 1430 1448
                                                                                  1451 1457 1460 1483 1518 1521 1552 1593
cobol_control_$cancel           001370 constant        entry                    external dcl 2453 ref 1251
cobol_cselfle                   001500 constant        entry                    external dcl 2511 ref 1475 1497 1901
cobol_curr_in                          defined         pointer                  dcl 3-53 set ref 1365* 1377
cobol_curr_out                         defined         pointer                  dcl 3-55 set ref 1366* 1378
cobol_db_phase                  001422 constant        entry                    external dcl 2464 ref 1410 1429
cobol_ddalloc                   001414 constant        entry                    external dcl 2464 ref 1339
cobol_ddsyntax                  001412 constant        entry                    external dcl 2464 ref 1302
cobol_dfp                              defined         pointer                  dcl 3-27 set ref 400* 1020* 1217* 1481* 1489*
cobol_ext_$cobol_cmfp           001574 external static pointer                  dcl 3-20 ref 1011 1011 1024 1024 1025 1025 1027 1027
                                                                                  1273 1273 1640 1640
cobol_ext_$cobol_com_fileno     001576 external static pointer                  dcl 3-22 set ref 1273* 1273
cobol_ext_$cobol_com_ptr        001600 external static pointer                  dcl 3-24 ref 391 391 416 416 574 574 581 581 588 588
                                                                                  595 595 1025 1025 1027 1027 1038 1038 1042 1042
                                                                                  1043 1043 1113 1113 1169 1169 1172 1172 1187 1187
                                                                                  1187 1187 1215 1215 1228 1228 1233 1233 1236 1236
                                                                                  1245 1245 1245 1245 1247 1247 1276 1276 1280 1280
                                                                                  1282 1282 1282 1282 1300 1300 1304 1304 1395 1395
                                                                                  1395 1395 1403 1403 1408 1408 1411 1411 1423 1423
                                                                                  1428 1428 1430 1430 1448 1448 1451 1451 1457 1457
                                                                                  1460 1460 1483 1483 1518 1518 1521 1521 1552 1552
                                                                                  1593 1593
cobol_ext_$cobol_curr_in        001632 external static pointer                  dcl 3-52 set ref 1365* 1365 1377 1377
cobol_ext_$cobol_curr_out       001634 external static pointer                  dcl 3-54 set ref 1366* 1366 1378 1378
cobol_ext_$cobol_dfp            001602 external static pointer                  dcl 3-26 ref 400 400 1020 1020 1217 1217 1481 1481
                                                                                  1489 1489
cobol_ext_$cobol_hfp            001604 external static pointer                  dcl 3-28 ref 1475 1475 1497 1497
cobol_ext_$cobol_lpr            001652 external static char(5)                  packed unaligned dcl 3-95 ref 1236 1236
cobol_ext_$cobol_m1fp           001606 external static pointer                  dcl 3-30 ref 1013 1013 1211 1211 1268 1268 1269 1269
                                                                                  1275 1275 1309 1309 1718 1718 1720 1720 1726 1726
                                                                                  1768 1768 1773 1773 1778 1778
cobol_ext_$cobol_m2fp           001610 external static pointer                  dcl 3-32 set ref 1014 1014 1212 1212 1219 1219 1356
                                                                                  1356 1358 1358 1365 1365 1377* 1377 1380 1380
cobol_ext_$cobol_min1_fileno    001612 external static pointer                  dcl 3-34 set ref 1275* 1275
cobol_ext_$cobol_name_fileno    001614 external static pointer                  dcl 3-38 set ref 1274* 1274
cobol_ext_$cobol_name_fileno_ptr
                                001616 external static pointer                  dcl 3-40 set ref 1274* 1274
cobol_ext_$cobol_ntfp           001620 external static pointer                  dcl 3-42 ref 1012 1012 1023 1023 1274 1274 1357 1357
                                                                                  1360 1360 1568 1568 1569 1569 1642 1642
cobol_ext_$cobol_options        001654 external static char(120)                packed unaligned dcl 3-97 set ref 622* 622 891 891
                                                                                  894 894 925 925 927* 927 932 932 941* 941 947 947
                                                                                  1697 1697 1700 1700
cobol_ext_$cobol_options_len    001646 external static fixed bin(24,0)          dcl 3-80 set ref 623* 623 891 891 894 894 896* 896
                                                                                  896 896 928* 928 932 932 934* 934 934 934 938 938
                                                                                  942* 942 946* 946 946 946 947 947 1697 1697 1697*
                                                                                  1697 1697 1697 1700 1700 1702* 1702 1702 1702
cobol_ext_$cobol_pdofp          001622 external static pointer                  dcl 3-44 ref 1382 1382 1383 1383 1490 1490 1632 1632
cobol_ext_$cobol_pfp            001624 external static pointer                  dcl 3-46 ref 1021 1021 1213 1213 1238 1238 1480 1480
                                                                                  1488 1488
cobol_ext_$cobol_rm2fp          001626 external static pointer                  dcl 3-48 set ref 1019 1019 1359 1359 1366 1366 1378*
                                                                                  1378 1381 1381 1392 1392 1495 1495 1724 1724 1740
                                                                                  1740 1743* 1743 1748 1748 1770 1770 1775 1775 1781
                                                                                  1781 1794* 1794 1799 1799
cobol_ext_$cobol_rmin2fp        001630 external static pointer                  dcl 3-50 set ref 1724* 1724 1773* 1773 1791 1791
cobol_ext_$cobol_rwdd           001642 external static pointer                  dcl 3-72 ref 1016 1016
cobol_ext_$cobol_rwpd           001644 external static pointer                  dcl 3-74 ref 1018 1018
cobol_ext_$cobol_sfp            001636 external static pointer                  dcl 3-56 set ref 314* 314 1065 1065 1068 1068 1070
                                                                                  1070 1092 1092 1096 1096 1162 1162 1164 1164 1186*
                                                                                  1186 1198 1198 1240* 1240 1240 1240
cobol_ext_$cobol_x2_fileno      001650 external static fixed bin(24,0)          dcl 3-90 set ref 315* 315
cobol_ext_$cobol_x3fp           001640 external static pointer                  dcl 3-70 set ref 1726* 1726 1743 1743 1746 1746
                                                                                  1775* 1775 1794 1794 1797 1797
cobol_ext_$cobol_xlast8         001656 external static bit(1)                   packed unaligned dcl 3-100 set ref 633* 633
cobol_fix_driver_               001426 constant        entry                    external dcl 2464 ref 1617
cobol_gen_driver_               001424 constant        entry                    external dcl 2464 ref 1578
cobol_gns$set_table             001476 constant        entry                    external dcl 2506 ref 1049
cobol_hfp                              defined         pointer                  dcl 3-29 set ref 1475* 1497*
cobol_idedsyn                   001416 constant        entry                    external dcl 2464 ref 1278
cobol_init_                     001432 constant        entry                    external dcl 2473 ref 1046
cobol_init_$segs                001434 constant        entry                    external dcl 2474 ref 1327
cobol_lex                       001402 constant        entry                    external dcl 2460 ref 1230
cobol_lpr                              defined         char(5)                  packed unaligned dcl 3-96 ref 1236
cobol_m1fp                             defined         pointer                  dcl 3-31 set ref 1013* 1211* 1268* 1269* 1275 1309*
                                                                                  1718* 1720* 1726 1768* 1773 1778*
cobol_m2fp                             defined         pointer                  dcl 3-33 set ref 1014* 1212* 1219 1356* 1358* 1365
                                                                                  1377* 1380*
cobol_make_link_$type_4         001374 constant        entry                    external dcl 2456 ref 1337
cobol_make_xref_                001430 constant        entry                    external dcl 2464 ref 1599
cobol_merge$copy_file_size      001332 constant        entry                    external dcl 153 ref 149
cobol_merge$source_file_size    001522 constant        entry                    external dcl 2521 ref 1194
cobol_min1_fileno                      defined         pointer                  dcl 3-35 set ref 1275*
cobol_name_fileno                      defined         pointer                  dcl 3-39 set ref 1274*
cobol_name_fileno_ptr                  defined         pointer                  dcl 3-41 set ref 1274*
cobol_ntfp                             defined         pointer                  dcl 3-43 set ref 1012* 1023* 1274 1357* 1360* 1568*
                                                                                  1569* 1642*
cobol_options                          defined         char(120)                packed unaligned dcl 3-98 set ref 622* 891* 894* 925
                                                                                  927* 932* 941* 947* 1697 1700*
cobol_options_len                      defined         fixed bin(24,0)          dcl 3-81 set ref 623* 891 894 896* 896 928* 932 934*
                                                                                  934 938 942* 946* 946 947 1697 1697* 1697 1700
                                                                                  1702* 1702
cobol_pdofp                            defined         pointer                  dcl 3-45 set ref 1382* 1383* 1490* 1632*
cobol_pdstax                    001410 constant        entry                    external dcl 2464 ref 394
cobol_pfp                              defined         pointer                  dcl 3-47 set ref 1021* 1213* 1238* 1480* 1488*
cobol_print_diag                001406 constant        entry                    external dcl 2462 ref 1486
cobol_repl3                     001404 constant        entry                    external dcl 2461 ref 1372
cobol_rm2fp                            defined         pointer                  dcl 3-49 set ref 1019* 1359* 1366 1378* 1381* 1392*
                                                                                  1495* 1724 1740* 1743* 1748* 1770* 1775 1781*
                                                                                  1794* 1799*
cobol_rmin2fp                          defined         pointer                  dcl 3-51 set ref 1724* 1773* 1791*
cobol_rwdd                             defined         pointer                  dcl 3-73 set ref 1016*
cobol_rwpd                             defined         pointer                  dcl 3-75 set ref 1018*
cobol_sfp                              defined         pointer                  dcl 3-57 set ref 314* 1065* 1068 1070 1092 1096 1162
                                                                                  1164 1186* 1198* 1240* 1240
cobol_swf                       001502 constant        entry                    external dcl 2512 ref 1013 1014 1016 1018 1019 1020
                                                                                  1021 1022 1382 1718
cobol_swf_close                 001516 constant        entry                    external dcl 2518 ref 400 1238 1268 1309 1355 1356
                                                                                  1380 1381 1488 1489 1490 1495 1632 1636 1740 1746
                                                                                  1768 1770 1791 1797
cobol_swf_open                  001514 constant        entry                    external dcl 2517 ref 1211 1212 1213 1217 1269 1323
                                                                                  1358 1359 1383 1392 1480 1481 1720 1748 1778 1781
                                                                                  1799
cobol_syntax_trace_$initialize  001472 constant        entry                    external dcl 2502 ref 852
cobol_syntax_trace_$reset_trace 001474 constant        entry                    external dcl 2504 ref 851
cobol_vdwf                      001504 constant        entry                    external dcl 2512 ref 1011 1012
cobol_vdwf_close                001520 constant        entry                    external dcl 2518 ref 1357 1568 1640 1642
cobol_vdwf_dget                 001510 constant        entry                    external dcl 2515 ref 1027
cobol_vdwf_open                 001506 constant        entry                    external dcl 2514 ref 1023 1024 1360 1569
cobol_vdwf_sput                 001512 constant        entry                    external dcl 2515 ref 1025
cobol_version$print             001372 constant        entry                    external dcl 2455 ref 1148 2086
cobol_version$set               001376 constant        entry                    external dcl 2458 ref 1030
cobol_x2_fileno                        defined         fixed bin(24,0)          dcl 3-91 set ref 315*
cobol_x3fp                             defined         pointer                  dcl 3-71 set ref 1726* 1743 1746* 1775* 1794 1797*
cobol_xlast8                           defined         bit(1)                   packed unaligned dcl 3-101 set ref 633*
code                            000100 automatic       fixed bin(35,0)          dcl 1932 in procedure "COND" set ref 1938*
code                     71     000010 internal static fixed bin(35,0)          level 2 in structure "stat" dcl 2165 in procedure
                                                                                  "cobol" set ref 658 2107* 2109* 2111 2123* 2125
                                                                                  2144*
code                     10            based           fixed bin(35,0)          level 2 in structure "io" dcl 1961 in procedure
                                                                                  "cobol_error" set ref 2022*
com_err_                        001456 constant        entry                    external dcl 2494 ref 324 331 427 432 442 785 806
                                                                                  814 1073 1082 1457 1460 1521 1644 1994 1996 2007
                                                                                  2011 2016 2018 2022 2029 2032 2038 2084
command_abort                   000216 stack reference condition                dcl 2434 ref 308
command_abort_                  000224 stack reference condition                dcl 2434 ref 309
common                          000703 internal static structure                level 1 unaligned dcl 2246 set ref 1025 1025
comp_level              137            based           char(1)                  level 2 packed packed unaligned dcl 2-26 set ref
                                                                                  1038* 1169
comp_term               106     000010 internal static label variable           level 2 dcl 2165 set ref 303* 325 332 341 788 807
                                                                                  815 1051 1075 1085 1107 1130 1329 2023
compile_mode            156            based           bit(36)                  level 2 packed packed unaligned dcl 2-26 set ref
                                                                                  574* 581* 588* 595*
compiler_id             154            based           fixed bin(17,0)          level 2 dcl 2-26 set ref 1043*
compiler_info            67     000100 automatic       structure                level 2 unaligned dcl 2243
compiler_level           67     000100 automatic       char(1)                  level 3 packed packed unaligned dcl 2243 set ref
                                                                                  1169*
cond_info                       001300 internal static structure                level 1 unaligned dcl 2557 set ref 1938 1938
cond_name                              parameter       char                     packed unaligned dcl 1954 in procedure "cobol_error"
                                                                                  ref 1950 1985 1985
cond_name                              parameter       char                     packed unaligned dcl 1932 in procedure "COND" set
                                                                                  ref 1929 1941*
cont                                   parameter       bit(1)                   packed unaligned dcl 1955 set ref 1950 2046*
control                   1     000172 automatic       structure                level 2 dcl 2244 set ref 2121*
corr                    133(35)        based           bit(1)                   level 2 packed packed unaligned dcl 2-26 ref 1395
ct                              001220 internal static fixed bin(17,0)          level 2 dcl 2390 set ref 170* 170 2130*
cu                      133     000703 internal static bit(1)                   level 3 packed packed unaligned dcl 2246 set ref 416
                                                                                  627* 728* 1518 1523
cu_$af_arg_count                001466 constant        entry                    external dcl 2500 ref 319
cu_$arg_ptr                     001470 constant        entry                    external dcl 2501 ref 353 555 770
cu_$cl                          001400 constant        entry                    external dcl 2459 ref 265 2067
db                        0(04) 000702 internal static bit(1)                   initial level 2 packed packed unaligned dcl 2235 set
                                                                                  ref 845* 1408 1428
dd                        0(02) 000702 internal static bit(1)                   initial level 2 packed packed unaligned dcl 2235 set
                                                                                  ref 841* 1300
ddsyn_sw                101(13) 000010 internal static bit(1)                   level 2 packed packed unaligned dcl 2165 set ref
                                                                                  640* 1325* 1636
debug                   134(01)        based           bit(1)                   level 2 packed packed unaligned dcl 2-26 ref 1403
                                                                                  1423
define_area_                    001530 constant        entry                    external dcl 2530 ref 2123
delete_$path                    001364 constant        entry                    external dcl 2446 ref 1471
descriptor              134(34) 000703 internal static bit(2)                   initial level 2 in structure "common" packed packed
                                                                                  unaligned dcl 2246 in procedure "cobol" set ref
                                                                                  1215
descriptor              134(34)        based           bit(2)                   level 2 in structure "fixed_common" packed packed
                                                                                  unaligned dcl 2-26 in procedure "cobol" set ref
                                                                                  1215*
diag_indicators          67(09) 000100 automatic       bit(3)                   level 3 packed packed unaligned dcl 2243 set ref
                                                                                  1170* 1483*
dir                       4(09) 000100 automatic       char(168)                level 3 packed packed unaligned dcl 2243 set ref
                                                                                  1175*
dir_name                               parameter       char(168)                packed unaligned dcl 165 set ref 157 168* 178 181
divide                                                 builtin function         dcl 2449 ref 1511 1821 1823
dn                      372(27) 000010 internal static char(168)                level 2 packed packed unaligned dcl 2165 set ref
                                                                                  1198* 1204*
dpath                   444(27) 000010 internal static char(168)                level 2 packed packed unaligned dcl 2165 set ref
                                                                                  780* 801* 955 963* 1065*
dpb                                    based           char                     packed unaligned dcl 2413 ref 981
dtcm                      1     000242 automatic       bit(36)                  level 3 packed packed unaligned dcl 2550 set ref 184
dtm                      57     001220 internal static bit(36)                  level 2 in structure "c_name" packed packed
                                                                                  unaligned dcl 2390 in procedure "cobol" set ref
                                                                                  203*
dtm                      55            based           bit(36)                  level 2 in structure "source_name" packed packed
                                                                                  unaligned dcl 2425 in procedure "cobol" set ref
                                                                                  184* 203
e_ptr                    10     000010 internal static pointer                  level 2 dcl 2165 set ref 956* 981 1044 1230 1457
                                                                                  1460 1475 1523
ecs                     101(16) 000010 internal static bit(1)                   level 2 packed packed unaligned dcl 2165 set ref
                                                                                  1136* 1139 1152
ecs_info_ptr                    000240 automatic       pointer                  dcl 6-6 set ref 1163* 1178*
ecs_info_table                  000100 automatic       structure                level 1 unaligned dcl 2243 set ref 1163
ecs_info_table_                        based           structure                level 1 unaligned dcl 6-8
en                      300(27) 000010 internal static char(32)                 level 2 packed packed unaligned dcl 2165 set ref
                                                                                  1198* 1204*
en_1                    310(27) 000010 internal static char(32)                 level 2 packed packed unaligned dcl 2165 set ref
                                                                                  780* 801* 963* 969 969 972 1065* 1139
en_len                   57     000010 internal static fixed bin(17,0)          level 2 dcl 2165 set ref 969* 971 1139 1139
ename                   114     000010 internal static char(32)                 level 2 dcl 2165 set ref 956 972* 974 1176 1245 1245
                                                                                  1247 1282 2157
enb                                    based           char                     packed unaligned dcl 2414 set ref 981 1044 1230*
                                                                                  1457* 1460* 1475 1523*
endgen_sw               101(05) 000010 internal static bit(1)                   level 2 packed packed unaligned dcl 2165 set ref 267
                                                                                  409* 648* 2061
endlex_sw               101(03) 000010 internal static bit(1)                   level 2 packed packed unaligned dcl 2165 set ref
                                                                                  1226* 1234* 2058
ent                      56(09) 000100 automatic       char(32)                 level 3 packed packed unaligned dcl 2243 set ref
                                                                                  1176*
entry_ptr                       000010 internal static pointer                  level 2 dcl 2165 set ref 1196*
entry_type               72     000010 internal static fixed bin(2,0)           level 2 dcl 2165 set ref 801* 811
entryname                              parameter       char(32)                 packed unaligned dcl 166 set ref 157 168* 179 181
error_table_$badopt             001336 external static fixed bin(35,0)          dcl 2216 set ref 427*
error_table_$no_operation       001344 external static fixed bin(35,0)          dcl 2221 set ref 1994* 1996* 2007* 2016*
error_table_$noarg              001334 external static fixed bin(35,0)          dcl 2215 set ref 432* 2084*
error_table_$not_act_fnc        001342 external static fixed bin(35,0)          dcl 2219 ref 328
error_table_$notadir            001350 external static fixed bin(35,0)          dcl 2225 set ref 814*
error_table_$translation_aborted
                                001346 external static fixed bin(35,0)          dcl 2223 set ref 1644* 2018*
error_table_$translation_failed 001340 external static fixed bin(35,0)          dcl 2217 set ref 1521*
errorcon                646(27) 000010 internal static char(6)                  level 2 packed packed unaligned dcl 2165 set ref
                                                                                  1451* 1453* 1457* 1460*
exp                     133(18) 000703 internal static bit(1)                   level 3 in structure "common" packed packed
                                                                                  unaligned dcl 2246 in procedure "cobol" set ref
                                                                                  637* 740* 1144*
exp                     133(18)        based           bit(1)                   level 3 in structure "fixed_common" packed packed
                                                                                  unaligned dcl 2-26 in procedure "cobol" ref 1483
exp_indicator             4(02) 000100 automatic       bit(1)                   level 3 packed packed unaligned dcl 2243 set ref
                                                                                  1167*
expand                  101(09) 000010 internal static bit(1)                   level 2 packed packed unaligned dcl 2165 set ref
                                                                                  637* 740* 1136 1144* 1167
expand_cobol_source$expand      001356 constant        entry                    external dcl 2440 ref 1178
expand_cobol_source_info        000100 automatic       structure                level 2 unaligned dcl 2243
expand_pathname_                001534 constant        entry                    external dcl 2534 ref 780 976
expand_pathname_$add_suffix     001542 constant        entry                    external dcl 2534 ref 963
exs                     133(09) 000703 internal static bit(1)                   level 3 packed packed unaligned dcl 2246 set ref
                                                                                  682* 733* 1468 1497 1501
fatal_count              70     000100 automatic       fixed bin(17,0)          level 3 dcl 2243 set ref 1171* 1187
fatal_no                 20            based           fixed bin(17,0)          level 2 dcl 2-26 set ref 416 1187* 1187 1448 1451
                                                                                  1457* 1460* 1518 1521 1593
fcom_key                670(18) 000010 internal static char(5)                  level 2 packed packed unaligned dcl 2165 set ref
                                                                                  1025* 1027*
fcom_ln                  74     000010 internal static fixed bin(15,0)          level 2 dcl 2165 set ref 1027*
fd_ptr                   14     000010 internal static pointer                  level 2 dcl 2165 set ref 958* 990* 1011 1012 1013
                                                                                  1014 1016 1018 1019 1020 1021 1022 1382 1718
fdir                                   based           char                     packed unaligned dcl 2431 ref 1011 1012 1013 1014
                                                                                  1016 1018 1019 1020 1021 1022 1382 1718
fdlen                    55     000010 internal static fixed bin(17,0)          level 2 dcl 2165 set ref 990* 994 994* 1011 1012
                                                                                  1013 1014 1016 1018 1019 1020 1021 1022 1382 1718
file_type                14            based           fixed bin(17,0)          level 2 dcl 1961 ref 2001 2001 2004 2011
files_wd                101(10) 000010 internal static bit(1)                   level 2 packed packed unaligned dcl 2165 set ref
                                                                                  645* 763* 827* 987
find_condition_info_            001660 constant        entry                    external dcl 1934 ref 1938
first_source_line                      based           char(32)                 packed unaligned dcl 2415 ref 1092 1096
fixed_common                           based           structure                level 1 unaligned dcl 2-26 set ref 1025
fmt                     133(15) 000703 internal static bit(1)                   level 3 in structure "common" packed packed
                                                                                  unaligned dcl 2246 in procedure "cobol" set ref
                                                                                  722* 1092 1113* 1136 1144* 1168
fmt                     133(15)        based           bit(1)                   level 3 in structure "fixed_common" packed packed
                                                                                  unaligned dcl 2-26 in procedure "cobol" set ref
                                                                                  1113*
format_indicator          4     000100 automatic       bit(1)                   level 3 packed packed unaligned dcl 2243 set ref
                                                                                  1168*
fpath                   176     000010 internal static char(168)                initial level 2 packed packed unaligned dcl 2165 set
                                                                                  ref 233 246* 792* 798 806* 814* 828* 958 987*
                                                                                  1046* 1556* 1916* 1917* 1919*
gen_sw                  101(04) 000010 internal static bit(1)                   level 2 packed packed unaligned dcl 2165 set ref 269
                                                                                  647* 1573* 2063
get_pdir_                       001436 constant        entry                    external dcl 2477 ref 985
get_temp_segments_              001524 constant        entry                    external dcl 2525 ref 2109
get_wdir_                       001440 constant        entry                    external dcl 2478 ref 828 1474
hcs_$delentry_file              001444 constant        entry                    external dcl 2483 ref 246
hcs_$fs_get_path_name           001360 constant        entry                    external dcl 2442 ref 1198
hcs_$get_usage_values           001460 constant        entry                    external dcl 2495 ref 388 1000 1003 1059 1159 1223
                                                                                  1265 1297 1320 1352 1465 1537 1575 1596 1614 1714
                                                                                  1764 1817
hcs_$initiate                   001454 constant        entry                    external dcl 2493 ref 1556
hcs_$initiate_count             001452 constant        entry                    external dcl 2487 ref 1065 1506
hcs_$set_bc                     001442 constant        entry                    external dcl 2481 ref 1919
hcs_$status_long                001362 constant        entry                    external dcl 2444 ref 168
hcs_$status_minf                001540 constant        entry                    external dcl 2534 ref 801
hcs_$terminate_file             001450 constant        entry                    external dcl 2486 ref 1917
hcs_$truncate_file              001446 constant        entry                    external dcl 2484 ref 1916
i                        50     000010 internal static fixed bin(17,0)          level 2 dcl 2165 set ref 350* 353* 548 552* 552 555*
                                                                                  765* 765 767 770* 1198* 1899* 1901*
id                        0(01) 000702 internal static bit(1)                   initial level 2 packed packed unaligned dcl 2235 set
                                                                                  ref 839* 1276
include_ptr                            based           pointer                  array dcl 2416 set ref 1068* 1901*
index                                                  builtin function         dcl 2449 ref 178 179 207 1504 1681
infoptr                  14     001300 internal static pointer                  level 2 dcl 2557 set ref 1941*
initl                   134            based           bit(1)                   level 2 packed packed unaligned dcl 2-26 ref 1395
input_ptr                       000100 automatic       pointer                  level 3 dcl 2243 set ref 1164*
intact                  101(08) 000010 internal static bit(1)                   level 2 packed packed unaligned dcl 2165 set ref 265
                                                                                  635* 750* 1000 1003 1526 1533 1622 1652 1904 2052
io                                     based           structure                level 1 unaligned dcl 1961
ioa_                            001462 constant        entry                    external dcl 2497 ref 677 830 1104 1105 1111 1128
                                                                                  1143 1455 1523 1825 2089 2090 2092 2094 2095 2154
                                                                                  2157
ioa_$ioa_stream                 001464 constant        entry                    external dcl 2498 ref 293
iocb                                   based           structure                level 1 dcl 5-6
iocb_ptr                 12            based           pointer                  level 2 dcl 1961 set ref 2007* 2016* 2022 2022
j                                      parameter       fixed bin(17,0)          dcl 1676 set ref 1673 1681* 1683 1683* 1685* 1685
key                      15            based           char(5)                  level 2 packed packed unaligned dcl 1961 set ref
                                                                                  2011*
l                                      parameter       fixed bin(17,0)          dcl 1676 in procedure "get_length" ref 1673 1681
                                                                                  1683
l                        45     000010 internal static fixed bin(17,0)          level 2 in structure "stat" dcl 2165 in procedure
                                                                                  "cobol" set ref 353* 427 427 488 498 499* 499 516
                                                                                  527 539 540* 540 666 669 677 677 692 695 699 707
                                                                                  710 714 770* 774 780 780 785 785 792 792 858 861
                                                                                  865 873 876 880 894 894 896 904 905
l_dn                     43     000010 internal static fixed bin(17,0)          level 2 dcl 2165 set ref 178* 181
l_en                     42     000010 internal static fixed bin(17,0)          level 2 dcl 2165 set ref 179* 181
last_name_ptr             2     001220 internal static pointer                  level 2 dcl 2390 set ref 175 176* 196 199 201 203
                                                                                  205* 205 2129*
last_print_rec          147            based           char(5)                  level 2 packed packed unaligned dcl 2-26 set ref
                                                                                  1236*
ldp                      52     000010 internal static fixed bin(17,0)          level 2 dcl 2165 set ref 968* 981
len                      54     000010 internal static fixed bin(17,0)          level 2 in structure "stat" dcl 2165 in procedure
                                                                                  "cobol" set ref 971* 972 974 976 976 981 1044 1176
                                                                                  1230 1230 1245 1245 1247 1282 1457 1457 1460 1460
                                                                                  1475 1523 1523 2157
len                      10            based           fixed bin(17,0)          level 2 in structure "s" dcl 1956 in procedure
                                                                                  "cobol_error" ref 2029 2029 2032 2032
levsv                   135            based           bit(3)                   level 2 in structure "fixed_common" packed packed
                                                                                  unaligned dcl 2-26 in procedure "cobol" set ref
                                                                                  1042* 1172
levsv                    67(12) 000100 automatic       bit(3)                   level 3 in structure "ecs_info_table" packed packed
                                                                                  unaligned dcl 2243 in procedure "cobol" set ref
                                                                                  1172*
lex_quit                102     000010 internal static label variable           level 2 dcl 2165 set ref 302* 1254
linkoff                  44     000010 internal static fixed bin(17,0)          level 2 dcl 2165 set ref 1335* 1337*
ln                      270(27) 000010 internal static char(32)                 level 2 packed packed unaligned dcl 2165 set ref
                                                                                  974* 976 976* 1471*
lname                                  based           char                     packed unaligned dcl 2422 set ref 976*
long                      4     000242 automatic       structure                level 2 dcl 2550
lp                              000535 automatic       fixed bin(35,0)          dcl 1815 set ref 1821* 1825*
ltp                      53     000010 internal static fixed bin(17,0)          level 2 dcl 2165 set ref 905* 963 963 983* 1073 1082
lv                                     parameter       char(1)                  packed unaligned dcl 1835 ref 1831 1838 1838 1842
m                        46     000010 internal static fixed bin(17,0)          level 2 dcl 2165 set ref 484 523 525 555*
m_bf                    133(26) 000703 internal static bit(1)                   level 3 packed packed unaligned dcl 2246 set ref
                                                                                  720*
m_fat                   133(27) 000703 internal static bit(1)                   level 3 packed packed unaligned dcl 2246 set ref
                                                                                  629* 1874*
m_map                   133(25) 000703 internal static bit(1)                   level 3 packed packed unaligned dcl 2246 set ref
                                                                                  683* 1561
m_obs                   133(29) 000703 internal static bit(1)                   level 3 packed packed unaligned dcl 2246 set ref
                                                                                  1871* 1874* 1876* 1878*
m_wn                    133(28) 000703 internal static bit(1)                   level 3 packed packed unaligned dcl 2246 set ref
                                                                                  628* 1874* 1876*
mcode                    70     000010 internal static fixed bin(35,0)          level 2 dcl 2165 set ref 168* 246* 319* 321 328 331*
                                                                                  353* 397 442* 555* 558 770* 771 780* 782 785* 792*
                                                                                  795 801* 803 806* 963* 965 976* 978 1065* 1073*
                                                                                  1178* 1180 1198* 1201 1249* 1251* 1327* 1329 1471*
                                                                                  1506* 1556* 1916* 1917* 1919*
mem_size                 73     000010 internal static fixed bin(31,0)          level 2 dcl 2165 set ref 1370* 1372*
mod                                                    builtin function         dcl 2449 ref 1583 1822
name                                   based           char                     packed unaligned dcl 1676 in procedure "get_length"
                                                                                  ref 1681
name                                   based           char(32)                 level 2 in structure "s" packed packed unaligned
                                                                                  dcl 1956 in procedure "cobol_error" set ref 1985
                                                                                  2029 2029 2029 2032*
no_tbl_pres             101(14) 000010 internal static bit(1)                   level 2 packed packed unaligned dcl 2165 set ref
                                                                                  652* 758* 916* 930
null                                                   builtin function         dcl 2449 ref 168 168 196 196 314 317 1051 1070 1508
                                                                                  1514 1558 1938 1938 2129 2141
num                                    parameter       fixed bin(17,0)          dcl 466 ref 462 469
nw                      133(17) 000703 internal static bit(1)                   level 3 packed packed unaligned dcl 2246 set ref
                                                                                  738*
obj                     133(08) 000703 internal static bit(1)                   level 3 packed packed unaligned dcl 2246 set ref
                                                                                  735* 1561
oc                      133(31) 000703 internal static bit(1)                   level 3 packed packed unaligned dcl 2246 set ref
                                                                                  724*
on                              000702 internal static bit(1)                   initial level 2 packed packed unaligned dcl 2235 set
                                                                                  ref 834
options                 133            based           structure                level 2 packed packed unaligned dcl 2-26
opts                    133     000703 internal static structure                level 2 packed packed unaligned dcl 2246 set ref
                                                                                  625*
output_ptr                2     000100 automatic       pointer                  level 3 dcl 2243 set ref 1186
owner                     2     000172 automatic       char(32)                 level 2 packed packed unaligned dcl 2244 set ref
                                                                                  2117*
p                                      parameter       pointer                  dcl 1676 ref 1673 1681
p_err                   101     000010 internal static bit(1)                   level 2 packed packed unaligned dcl 2165 set ref
                                                                                  316* 901 906* 950
p_ptr                     6     000010 internal static pointer                  level 2 dcl 2165 set ref 955* 968* 981
pb_pf                    36     000010 internal static fixed bin(17,0)          level 2 dcl 2165 set ref 388* 1003* 1059* 1159*
                                                                                  1223* 1265* 1297* 1320* 1352* 1465* 1537* 1575*
                                                                                  1596* 1614* 1656* 1714* 1764* 1819* 1819 1825*
pb_pp                    37     000010 internal static fixed bin(17,0)          level 2 dcl 2165 set ref 388* 1003* 1059* 1159*
                                                                                  1223* 1265* 1297* 1320* 1352* 1465* 1537* 1575*
                                                                                  1596* 1614* 1657* 1714* 1764* 1820* 1820 1825*
pb_tm                    64     000010 internal static fixed bin(71,0)          level 2 dcl 2165 set ref 388* 1003* 1059* 1159*
                                                                                  1223* 1265* 1297* 1320* 1352* 1465* 1537* 1575*
                                                                                  1596* 1614* 1655* 1714* 1764* 1818
pc                       47     000010 internal static fixed bin(17,0)          level 2 dcl 2165 set ref 319* 336 350 548 767
pd                        0(03) 000702 internal static bit(1)                   initial level 2 in structure "trace" packed packed
                                                                                  unaligned dcl 2235 in procedure "cobol" set ref
                                                                                  391 843*
pd                      133(30) 000703 internal static bit(1)                   level 3 in structure "common" packed packed
                                                                                  unaligned dcl 2246 in procedure "cobol" set ref
                                                                                  626*
pdpath                  516(27) 000010 internal static char(168)                level 2 packed packed unaligned dcl 2165 set ref
                                                                                  985* 987 1175
pe_pf                    40     000010 internal static fixed bin(17,0)          level 2 dcl 2165 set ref 1817* 1819
pe_pp                    41     000010 internal static fixed bin(17,0)          level 2 dcl 2165 set ref 1817* 1820
pe_tm                    66     000010 internal static fixed bin(71,0)          level 2 dcl 2165 set ref 1817* 1818
ph_name                                parameter       char(14)                 packed unaligned dcl 1737 set ref 1732 1752*
phase                                  parameter       char(14)                 packed unaligned dcl 1814 set ref 1811 1825*
pln                     320(27) 000010 internal static char(168)                level 2 packed packed unaligned dcl 2165 set ref
                                                                                  976* 1471*
pname                     4     001220 internal static char(168)                level 2 dcl 2390 set ref 199* 207
pointer                                                builtin function         dcl 2449 ref 1068 1240
prev_name_ptr                          based           pointer                  level 2 dcl 2425 set ref 175* 205
profile                 133(16) 000703 internal static bit(1)                   level 3 packed packed unaligned dcl 2246 set ref
                                                                                  726* 913
prog_name                              based           char(30)                 level 2 packed packed unaligned dcl 2-26 set ref
                                                                                  1245 1245 1247 1282 1282*
pst                     133(01) 000703 internal static bit(1)                   level 3 packed packed unaligned dcl 2246 set ref
                                                                                  631* 674* 726* 757* 915* 1156 1561 1565
rb_pf                    34     000010 internal static fixed bin(17,0)          level 2 dcl 2165 set ref 1000* 1656
rb_pp                    35     000010 internal static fixed bin(17,0)          level 2 dcl 2165 set ref 1000* 1657
rb_tm                    62     000010 internal static fixed bin(71,0)          level 2 dcl 2165 set ref 1000* 1655
recursion               100     000010 internal static bit(1)                   initial level 2 packed packed unaligned dcl 2165 set
                                                                                  ref 286 299* 448* 1892 1895*
rel                      76     000010 internal static fixed bin(15,0)          level 2 dcl 2165 set ref 643* 751* 1309* 1380* 1488*
                                                                                  1489* 1495* 1632* 1636* 1640* 1642*
release_area_                   001532 constant        entry                    external dcl 2531 ref 2141
release_temp_segments_          001526 constant        entry                    external dcl 2527 ref 2144
repl_sw                 101(12) 000010 internal static bit(1)                   level 2 packed packed unaligned dcl 2165 set ref
                                                                                  641* 1385* 1632
restart                 101(06) 000010 internal static bit(1)                   level 2 packed packed unaligned dcl 2165 set ref 258
                                                                                  313* 2040 2042*
rp                              000536 automatic       fixed bin(35,0)          dcl 1815 set ref 1822* 1823* 1823 1825*
rtbuff_ptr               20     000010 internal static pointer                  level 2 dcl 2165 set ref 1046* 1051 1372*
rw                        0(05) 000702 internal static bit(1)                   initial level 2 packed packed unaligned dcl 2235 set
                                                                                  ref 847* 1228
s                                      based           structure                level 1 unaligned dcl 1956
save_m2fp                 2     000010 internal static pointer                  level 2 dcl 2165 set ref 1219*
save_sfp                 22     000010 internal static pointer                  level 2 dcl 2165 set ref 1162*
segname                 250(27) 000010 internal static char(32)                 level 2 packed packed unaligned dcl 2165 set ref
                                                                                  233* 246* 439* 442* 1504* 1506* 1553* 1556* 1904*
                                                                                  1916* 1917* 1919*
short                           000242 automatic       structure                level 2 dcl 2550
size                      1     001220 internal static fixed bin(17,0)          level 2 in structure "c_name" dcl 2390 in procedure
                                                                                  "cobol" set ref 207* 208 208*
size                                                   builtin function         dcl 2449 in procedure "cobol" ref 1025
size                     13     000172 automatic       fixed bin(18,0)          level 2 in structure "area_info_area" dcl 2244
                                                                                  in procedure "cobol" set ref 2119*
size                                   parameter       fixed bin(17,0)          dcl 1694 in procedure "set_options" ref 1691 1700
                                                                                  1702
sname                     2            based           char(168)                level 2 dcl 2425 set ref 181* 199
source_name                            based           structure                level 1 unaligned dcl 2425 set ref 173
source_name_ptr          30     000010 internal static pointer                  level 2 dcl 2165 set ref 173* 175 176 181 183 184
                                                                                  220* 223
spec_tag_counter         23            based           fixed bin(17,0)          level 2 dcl 2-26 ref 1552
sptr                                   parameter       pointer                  dcl 1953 ref 1950 1985 1991 1994 2001 2001 2004 2007
                                                                                  2007 2011 2011 2011 2011 2016 2022 2022 2022 2029
                                                                                  2029 2029 2029 2032 2032
stat                            000010 internal static structure                level 1 unaligned dcl 2165
status_branch                          based           structure                level 1 dcl 7-8
str                                    parameter       char                     packed unaligned dcl 1694 ref 1691 1700
string                   11            based           char                     level 2 in structure "s" packed packed unaligned
                                                                                  dcl 1956 in procedure "cobol_error" set ref 2029*
                                                                                  2032*
string                                                 builtin function         dcl 2449 in procedure "cobol" set ref 97* 105* 470*
                                                                                  625* 2121*
substr                                                 builtin function         dcl 2449 set ref 181 181 488 498* 516 527 539* 666
                                                                                  669 689 692 692 695 695 704 707 707 710 710 774
                                                                                  834 839 841 843 845 847 855 858 858 861 861 861
                                                                                  861 870 873 873 876 876 876 876 891* 894* 894 932*
                                                                                  947* 972 974 1092 1096 1139 1176 1245 1245 1247
                                                                                  1282 1504 1697 1700* 1700 2022 2022 2029 2029 2029
                                                                                  2157
sv                                     parameter       char(1)                  packed unaligned dcl 1835 in procedure "setlev" ref
                                                                                  1831 1845 1847 1849
sv                                     parameter       char(1)                  packed unaligned dcl 1864 in procedure "setsv" ref
                                                                                  1859 1867 1867 1874 1876 1878
syntax_trace            134(16)        based           bit(1)                   level 2 packed packed unaligned dcl 2-26 set ref
                                                                                  391* 1228* 1233* 1276* 1280* 1300* 1304* 1408*
                                                                                  1411* 1428* 1430*
sys_info$max_seg_size           001352 external static fixed bin(35,0)          dcl 2227 ref 2119
tbl_pres                101(15) 000010 internal static bit(1)                   level 2 packed packed unaligned dcl 2165 set ref
                                                                                  652* 675* 915* 930
temp                            000534 automatic       fixed bin(35,0)          dcl 1815 set ref 1818* 1821 1822
temp_dir_sw             101(11) 000010 internal static bit(1)                   level 2 packed packed unaligned dcl 2165 set ref
                                                                                  646* 764* 887 890*
temp_ptr                 32     000010 internal static pointer                  array level 2 dcl 2165 set ref 2109* 2118 2128 2144*
time                    101(07) 000010 internal static bit(1)                   level 2 packed packed unaligned dcl 2165 set ref 388
                                                                                  402 634* 745* 1000 1059 1159 1189 1223 1242 1265
                                                                                  1286 1297 1306 1320 1341 1352 1374 1465 1492 1526
                                                                                  1533 1575 1580 1596 1601 1614 1619 1622 1652 1659
                                                                                  1714 1752 1764 1803
tln                      75     000010 internal static fixed bin(15,0)          level 2 dcl 2165 set ref 1211* 1212* 1213* 1217*
                                                                                  1269* 1323* 1358* 1359* 1383* 1392* 1480* 1481*
                                                                                  1720* 1748* 1778* 1781* 1799*
tname                   650(09) 000010 internal static char(65)                 level 2 packed packed unaligned dcl 2165 set ref
                                                                                  1245* 1247* 1251*
tp_ptr                   12     000010 internal static pointer                  level 2 dcl 2165 set ref 957* 963 983* 1073 1082
tpath                   124     000010 internal static char(168)                level 2 dcl 2165 set ref 904* 957 981* 1327*
tpb                                    based           char                     packed unaligned dcl 2412 set ref 963* 1073 1082
tptr                     16     000010 internal static pointer                  level 2 dcl 2165 set ref 400* 1211* 1212* 1213*
                                                                                  1217* 1238* 1268* 1269* 1309* 1323* 1355* 1356*
                                                                                  1357* 1358* 1359* 1380* 1381* 1383* 1392* 1480*
                                                                                  1481* 1488* 1489* 1490* 1495* 1568* 1632* 1636*
                                                                                  1640* 1642* 1720* 1740* 1746* 1748* 1768* 1770*
                                                                                  1778* 1781* 1791* 1797* 1799*
trace                           000702 internal static structure                level 1 packed packed unaligned dcl 2235 set ref 97*
                                                                                  105* 470*
trace_arg               260(27) 000010 internal static char(32)                 level 2 packed packed unaligned dcl 2165 set ref
                                                                                  837* 852 852
uid                      11     000242 automatic       bit(36)                  level 3 in structure "branch_status" packed packed
                                                                                  unaligned dcl 2550 in procedure "cobol" set ref
                                                                                  183
uid                      54            based           bit(36)                  level 2 in structure "source_name" packed packed
                                                                                  unaligned dcl 2425 in procedure "cobol" set ref
                                                                                  183* 201
uid                      56     001220 internal static bit(36)                  level 2 in structure "c_name" packed packed
                                                                                  unaligned dcl 2390 in procedure "cobol" set ref
                                                                                  201*
upto                     56     000010 internal static fixed bin(17,0)          level 2 dcl 2165 set ref 621*
version                         000172 automatic       fixed bin(17,0)          level 2 dcl 2244 set ref 2116*
wdir                    570(27) 000010 internal static char(168)                level 2 packed packed unaligned dcl 2165 set ref
                                                                                  1474* 1506*
words                                  based           fixed bin(35,0)          array dcl 2419 ref 220
xrn                     133(06) 000703 internal static bit(1)                   level 3 packed packed unaligned dcl 2246 set ref
                                                                                  684* 734* 1593

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
Directory                              internal static fixed bin(17,0)          initial dcl 7-56
Link                                   internal static fixed bin(17,0)          initial dcl 7-56
Segment                                internal static fixed bin(17,0)          initial dcl 7-56
allo1_max                              defined         fixed bin(17,0)          dcl 1-171
allo1_ptr                              defined         pointer                  dcl 1-67
alter_flag                             defined         fixed bin(17,0)          dcl 1-135
alter_index                            defined         fixed bin(17,0)          dcl 1-153
alter_list_ptr                         defined         pointer                  dcl 1-39
anarea                                 based           structure                level 1 dcl 2406
cd_cnt                                 defined         fixed bin(17,0)          dcl 1-197
cobol_$allo1_max                       external static fixed bin(17,0)          dcl 1-170
cobol_$allo1_ptr                       external static pointer                  dcl 1-66
cobol_$alter_flag                      external static fixed bin(17,0)          dcl 1-134
cobol_$alter_index                     external static fixed bin(17,0)          dcl 1-152
cobol_$alter_list_ptr                  external static pointer                  dcl 1-38
cobol_$cd_cnt                          external static fixed bin(17,0)          dcl 1-196
cobol_$cobol_data_wd_off               external static fixed bin(17,0)          dcl 1-118
cobol_$coms_charcnt                    external static fixed bin(17,0)          dcl 1-188
cobol_$coms_wdoff                      external static fixed bin(17,0)          dcl 1-202
cobol_$con_end_ptr                     external static pointer                  dcl 1-10
cobol_$cons_charcnt                    external static fixed bin(17,0)          dcl 1-192
cobol_$data_init_flag                  external static fixed bin(17,0)          dcl 1-130
cobol_$date_compiled_sw                external static fixed bin(17,0)          dcl 1-180
cobol_$debug_enable                    external static fixed bin(17,0)          dcl 1-174
cobol_$def_base_ptr                    external static pointer                  dcl 1-12
cobol_$def_max                         external static fixed bin(17,0)          dcl 1-96
cobol_$def_wd_off                      external static fixed bin(17,0)          dcl 1-94
cobol_$diag_ptr                        external static pointer                  dcl 1-70
cobol_$eln_max                         external static fixed bin(17,0)          dcl 1-172
cobol_$eln_ptr                         external static pointer                  dcl 1-68
cobol_$fixup_max                       external static fixed bin(17,0)          dcl 1-164
cobol_$fixup_ptr                       external static pointer                  dcl 1-30
cobol_$fs_charcnt                      external static fixed bin(17,0)          dcl 1-184
cobol_$fs_wdoff                        external static fixed bin(17,0)          dcl 1-198
cobol_$init_stack_off                  external static fixed bin(17,0)          dcl 1-124
cobol_$initval_base_ptr                external static pointer                  dcl 1-32
cobol_$initval_flag                    external static fixed bin(17,0)          dcl 1-178
cobol_$link_base_ptr                   external static pointer                  dcl 1-14
cobol_$link_max                        external static fixed bin(17,0)          dcl 1-100
cobol_$link_wd_off                     external static fixed bin(17,0)          dcl 1-98
cobol_$ls_charcnt                      external static fixed bin(17,0)          dcl 1-190
cobol_$main_pcs_ptr                    external static pointer                  dcl 1-84
cobol_$map_data_max                    external static fixed bin(17,0)          dcl 1-162
cobol_$map_data_ptr                    external static pointer                  dcl 1-54
cobol_$max_stack_off                   external static fixed bin(17,0)          dcl 1-122
cobol_$misc_base_ptr                   external static pointer                  dcl 1-60
cobol_$misc_end_ptr                    external static pointer                  dcl 1-62
cobol_$misc_max                        external static fixed bin(17,0)          dcl 1-158
cobol_$non_source_offset               external static fixed bin(17,0)          dcl 1-176
cobol_$ntbuf_ptr                       external static pointer                  dcl 1-82
cobol_$op_con_ptr                      external static pointer                  dcl 1-80
cobol_$para_eop_flag                   external static fixed bin(17,0)          dcl 1-138
cobol_$pd_map_index                    external static fixed bin(17,0)          dcl 1-116
cobol_$pd_map_max                      external static fixed bin(17,0)          dcl 1-160
cobol_$pd_map_ptr                      external static pointer                  dcl 1-28
cobol_$perform_list_ptr                external static pointer                  dcl 1-36
cobol_$perform_para_index              external static fixed bin(17,0)          dcl 1-148
cobol_$perform_sect_index              external static fixed bin(17,0)          dcl 1-150
cobol_$priority_no                     external static fixed bin(17,0)          dcl 1-140
cobol_$ptr_assumption_ind              external static fixed bin(17,0)          dcl 1-144
cobol_$ptr_status_ptr                  external static pointer                  dcl 1-56
cobol_$reg_assumption_ind              external static fixed bin(17,0)          dcl 1-146
cobol_$reg_status_ptr                  external static pointer                  dcl 1-58
cobol_$reloc_def_base_ptr              external static pointer                  dcl 1-20
cobol_$reloc_def_max                   external static fixed bin(24,0)          dcl 1-108
cobol_$reloc_link_base_ptr             external static pointer                  dcl 1-22
cobol_$reloc_link_max                  external static fixed bin(24,0)          dcl 1-110
cobol_$reloc_sym_base_ptr              external static pointer                  dcl 1-24
cobol_$reloc_sym_max                   external static fixed bin(24,0)          dcl 1-112
cobol_$reloc_text_base_ptr             external static pointer                  dcl 1-18
cobol_$reloc_text_max                  external static fixed bin(24,0)          dcl 1-106
cobol_$reloc_work_base_ptr             external static pointer                  dcl 1-26
cobol_$reloc_work_max                  external static fixed bin(24,0)          dcl 1-114
cobol_$reswd_ptr                       external static pointer                  dcl 1-78
cobol_$same_sort_merge_proc            external static bit(1)                   dcl 1-214
cobol_$scratch_dir                     external static char(168)                dcl 1-206
cobol_$sect_eop_flag                   external static fixed bin(17,0)          dcl 1-136
cobol_$seg_init_flag                   external static fixed bin(17,0)          dcl 1-132
cobol_$seg_init_list_ptr               external static pointer                  dcl 1-40
cobol_$stack_off                       external static fixed bin(17,0)          dcl 1-120
cobol_$statement_info_ptr              external static pointer                  dcl 1-76
cobol_$sym_base_ptr                    external static pointer                  dcl 1-16
cobol_$sym_max                         external static fixed bin(17,0)          dcl 1-104
cobol_$sym_wd_off                      external static fixed bin(17,0)          dcl 1-102
cobol_$tag_table_max                   external static fixed bin(17,0)          dcl 1-166
cobol_$tag_table_ptr                   external static pointer                  dcl 1-52
cobol_$temp_token_area_ptr             external static pointer                  dcl 1-42
cobol_$temp_token_max                  external static fixed bin(17,0)          dcl 1-168
cobol_$temp_token_ptr                  external static pointer                  dcl 1-44
cobol_$text_base_ptr                   external static pointer                  dcl 1-8
cobol_$text_wd_off                     external static fixed bin(17,0)          dcl 1-90
cobol_$token_block1_ptr                external static pointer                  dcl 1-46
cobol_$token_block2_ptr                external static pointer                  dcl 1-48
cobol_$value_cnt                       external static fixed bin(17,0)          dcl 1-194
cobol_$ws_charcnt                      external static fixed bin(17,0)          dcl 1-186
cobol_$ws_wdoff                        external static fixed bin(17,0)          dcl 1-200
cobol_$xref_bypass                     external static bit(1)                   dcl 1-212
cobol_$xref_chain_ptr                  external static pointer                  dcl 1-74
cobol_$xref_token_ptr                  external static pointer                  dcl 1-72
cobol_afp                              defined         pointer                  dcl 3-11
cobol_analin_fileno                    defined         pointer                  dcl 3-13
cobol_data_wd_off                      defined         fixed bin(17,0)          dcl 1-119
cobol_eltp                             defined         pointer                  dcl 3-19
cobol_ext_$cobol_afp                   external static pointer                  dcl 3-10
cobol_ext_$cobol_analin_fileno         external static pointer                  dcl 3-12
cobol_ext_$cobol_eltp                  external static pointer                  dcl 3-18
cobol_ext_$cobol_fileno1               external static fixed bin(24,0)          dcl 3-78
cobol_ext_$cobol_min2_fileno_ptr       external static pointer                  dcl 3-36
cobol_ext_$cobol_pdout_fileno          external static fixed bin(24,0)          dcl 3-82
cobol_ext_$cobol_print_fileno          external static fixed bin(24,0)          dcl 3-84
cobol_ext_$cobol_rmin2_fileno          external static fixed bin(24,0)          dcl 3-86
cobol_ext_$cobol_w1p                   external static pointer                  dcl 3-58
cobol_ext_$cobol_w2p                   external static pointer                  dcl 3-60
cobol_ext_$cobol_w3p                   external static pointer                  dcl 3-62
cobol_ext_$cobol_w5p                   external static pointer                  dcl 3-64
cobol_ext_$cobol_w6p                   external static pointer                  dcl 3-66
cobol_ext_$cobol_w7p                   external static pointer                  dcl 3-68
cobol_ext_$cobol_x1_fileno             external static fixed bin(24,0)          dcl 3-88
cobol_ext_$cobol_x3_fileno             external static fixed bin(24,0)          dcl 3-92
cobol_ext_$report_exists               external static bit(1)                   packed unaligned dcl 3-102
cobol_ext_$report_first_token          external static pointer                  dcl 3-14
cobol_ext_$report_last_token           external static pointer                  dcl 3-16
cobol_fileno1                          defined         fixed bin(24,0)          dcl 3-79
cobol_fixup                     000000 constant        entry                    external dcl 2469
cobol_generator                 000000 constant        entry                    external dcl 2469
cobol_min2_fileno_ptr                  defined         pointer                  dcl 3-37
cobol_pdout_fileno                     defined         fixed bin(24,0)          dcl 3-83
cobol_print_fileno                     defined         fixed bin(24,0)          dcl 3-85
cobol_rmin2_fileno                     defined         fixed bin(24,0)          dcl 3-87
cobol_source_formatter_         000000 constant        entry                    external dcl 2471
cobol_w1p                              defined         pointer                  dcl 3-59
cobol_w2p                              defined         pointer                  dcl 3-61
cobol_w3p                              defined         pointer                  dcl 3-63
cobol_w5p                              defined         pointer                  dcl 3-65
cobol_w6p                              defined         pointer                  dcl 3-67
cobol_w7p                              defined         pointer                  dcl 3-69
cobol_x1_fileno                        defined         fixed bin(24,0)          dcl 3-89
cobol_x3_fileno                        defined         fixed bin(24,0)          dcl 3-93
command_query_                  000000 constant        entry                    external dcl 2509
compile_count                          defined         fixed bin(17,0)          dcl 1-143
coms_charcnt                           defined         fixed bin(17,0)          dcl 1-189
coms_wdoff                             defined         fixed bin(17,0)          dcl 1-203
con_end_ptr                            defined         pointer                  dcl 1-11
con_wd_off                             defined         fixed bin(17,0)          dcl 1-93
condition_                      000000 constant        entry                    external dcl 2476
cons_charcnt                           defined         fixed bin(17,0)          dcl 1-193
constant_offset                        defined         fixed bin(17,0)          dcl 1-157
cu_$arg_count                   000000 constant        entry                    external dcl 2499
data_init_flag                         defined         fixed bin(17,0)          dcl 1-131
date_compiled_sw                       defined         fixed bin(17,0)          dcl 1-181
debug_enable                           defined         fixed bin(17,0)          dcl 1-175
def_base_ptr                           defined         pointer                  dcl 1-13
def_max                                defined         fixed bin(17,0)          dcl 1-97
def_wd_off                             defined         fixed bin(17,0)          dcl 1-95
diag_ptr                               defined         pointer                  dcl 1-71
eln_max                                defined         fixed bin(17,0)          dcl 1-173
eln_ptr                                defined         pointer                  dcl 1-69
establish_cleanup_proc_         000000 constant        entry                    external dcl 2490
fixup_max                              defined         fixed bin(17,0)          dcl 1-165
fixup_ptr                              defined         pointer                  dcl 1-31
fs_charcnt                             defined         fixed bin(17,0)          dcl 1-185
fs_wdoff                               defined         fixed bin(17,0)          dcl 1-199
fsb                                    based           structure                level 1 unaligned dcl 4-9
fsb_ptr                                automatic       pointer                  dcl 4-8
hcs_$make_seg                   000000 constant        entry                    external dcl 2492
hcs_$truncate_seg               000000 constant        entry                    external dcl 2485
include_cnt                            defined         fixed bin(17,0)          dcl 1-183
include_info_ptr                       defined         pointer                  dcl 1-87
init_stack_off                         defined         fixed bin(17,0)          dcl 1-125
initval_base_ptr                       defined         pointer                  dcl 1-33
initval_file_ptr                       defined         pointer                  dcl 1-35
initval_flag                           defined         fixed bin(17,0)          dcl 1-179
iox_$iocb_version_sentinel             external static char(4)                  dcl 5-51
link_base_ptr                          defined         pointer                  dcl 1-15
link_max                               defined         fixed bin(17,0)          dcl 1-101
link_wd_off                            defined         fixed bin(17,0)          dcl 1-99
list_off                               defined         fixed bin(17,0)          dcl 1-155
list_ptr                               defined         pointer                  dcl 1-65
ls_charcnt                             defined         fixed bin(17,0)          dcl 1-191
main_pcs_ptr                           defined         pointer                  dcl 1-85
map_data_max                           defined         fixed bin(17,0)          dcl 1-163
map_data_ptr                           defined         pointer                  dcl 1-55
max_stack_off                          defined         fixed bin(17,0)          dcl 1-123
message                                automatic       char(80)                 packed unaligned dcl 2079
minpral5_ptr                           defined         pointer                  dcl 1-51
misc_base_ptr                          defined         pointer                  dcl 1-61
misc_end_ptr                           defined         pointer                  dcl 1-63
misc_max                               defined         fixed bin(17,0)          dcl 1-159
next_tag                               defined         fixed bin(17,0)          dcl 1-129
non_source_offset                      defined         fixed bin(17,0)          dcl 1-177
ntbuf_ptr                              defined         pointer                  dcl 1-83
obj_seg_name                           defined         char(32)                 dcl 1-209
op_con_ptr                             defined         pointer                  dcl 1-81
para_eop_flag                          defined         fixed bin(17,0)          dcl 1-139
pd_map_index                           defined         fixed bin(17,0)          dcl 1-117
pd_map_max                             defined         fixed bin(17,0)          dcl 1-161
pd_map_ptr                             defined         pointer                  dcl 1-29
pd_map_sw                              defined         fixed bin(17,0)          dcl 1-127
perform_list_ptr                       defined         pointer                  dcl 1-37
perform_para_index                     defined         fixed bin(17,0)          dcl 1-149
perform_sect_index                     defined         fixed bin(17,0)          dcl 1-151
priority_no                            defined         fixed bin(17,0)          dcl 1-141
ptr_assumption_ind                     defined         fixed bin(17,0)          dcl 1-145
ptr_status_ptr                         defined         pointer                  dcl 1-57
query_info                             internal static structure                level 1 dcl 2398
reg_assumption_ind                     defined         fixed bin(17,0)          dcl 1-147
reg_status_ptr                         defined         pointer                  dcl 1-59
reloc_def_base_ptr                     defined         pointer                  dcl 1-21
reloc_def_max                          defined         fixed bin(24,0)          dcl 1-109
reloc_link_base_ptr                    defined         pointer                  dcl 1-23
reloc_link_max                         defined         fixed bin(24,0)          dcl 1-111
reloc_sym_base_ptr                     defined         pointer                  dcl 1-25
reloc_sym_max                          defined         fixed bin(24,0)          dcl 1-113
reloc_text_base_ptr                    defined         pointer                  dcl 1-19
reloc_text_max                         defined         fixed bin(24,0)          dcl 1-107
reloc_work_base_ptr                    defined         pointer                  dcl 1-27
reloc_work_max                         defined         fixed bin(24,0)          dcl 1-115
report_exists                          defined         bit(1)                   packed unaligned dcl 3-103
report_first_token                     defined         pointer                  dcl 3-15
report_last_token                      defined         pointer                  dcl 3-17
reswd_ptr                              defined         pointer                  dcl 1-79
revert_cleanup_proc_            000000 constant        entry                    external dcl 2488
same_sort_merge_proc                   defined         bit(1)                   dcl 1-215
scratch_dir                            defined         char(168)                dcl 1-207
sect_eop_flag                          defined         fixed bin(17,0)          dcl 1-137
seg_init_flag                          defined         fixed bin(17,0)          dcl 1-133
seg_init_list_ptr                      defined         pointer                  dcl 1-41
stack_off                              defined         fixed bin(17,0)          dcl 1-121
statement_info_ptr                     defined         pointer                  dcl 1-77
status_area_ptr                        automatic       pointer                  dcl 7-47
status_entry_names                     based           char(32)                 array dcl 7-47
status_link                            based           structure                level 1 dcl 7-38
status_pathname                        based           char                     dcl 7-47
status_ptr                             automatic       pointer                  dcl 7-47
sym_base_ptr                           defined         pointer                  dcl 1-17
sym_max                                defined         fixed bin(17,0)          dcl 1-105
sym_wd_off                             defined         fixed bin(17,0)          dcl 1-103
tag_table_max                          defined         fixed bin(17,0)          dcl 1-167
tag_table_ptr                          defined         pointer                  dcl 1-53
temp_token_area_ptr                    defined         pointer                  dcl 1-43
temp_token_max                         defined         fixed bin(17,0)          dcl 1-169
temp_token_ptr                         defined         pointer                  dcl 1-45
text_base_ptr                          defined         pointer                  dcl 1-9
text_wd_off                            defined         fixed bin(17,0)          dcl 1-91
token_block1_ptr                       defined         pointer                  dcl 1-47
token_block2_ptr                       defined         pointer                  dcl 1-49
value_cnt                              defined         fixed bin(17,0)          dcl 1-195
ws_charcnt                             defined         fixed bin(17,0)          dcl 1-187
ws_wdoff                               defined         fixed bin(17,0)          dcl 1-201
xref_bypass                            defined         bit(1)                   dcl 1-213
xref_chain_ptr                         defined         pointer                  dcl 1-75
xref_token_ptr                         defined         pointer                  dcl 1-73

NAMES DECLARED BY EXPLICIT CONTEXT.
CLEANUP                         013326 constant        entry                    internal dcl 1889 ref 310 451 1647
COMP_TERM                       003124 constant        label                    dcl 445 ref 303 430 435
COND                            014040 constant        entry                    internal dcl 1929 ref 308 309
FINISH                          012546 constant        entry                    internal dcl 1732 ref 1419 1433
FINISH_DB                       013007 constant        entry                    internal dcl 1786 ref 1414
LEX_QUIT                        003142 constant        label                    dcl 451 ref 302
M                               000000 constant        label                    array(0:5) dcl 571 ref 569
MM                              003403 constant        label                    dcl 612 ref 571 579 586 593 600 602
PATHNAME_ERROR                  004214 constant        label                    dcl 785 ref 795
START                           012440 constant        entry                    internal dcl 1709 ref 1397 1425
START_DB                        012653 constant        entry                    internal dcl 1759 ref 1405
alloc                           001660 constant        entry                    external dcl 215
analyzer                        012043 constant        entry                    internal dcl 1587 ref 413
arg_error                       003016 constant        label                    dcl 427 set ref 484 491 519 525 530 548 699 714 847
                                                                                  865 870 880 901 1838 1849 1867
cl_arg_check                    003323 constant        entry                    internal dcl 544 ref 481 513
clean_up                        001712 constant        entry                    external dcl 226
cobol                           001206 constant        entry                    external dcl 69
cobol_error                     014124 constant        entry                    internal dcl 1950 ref 1941
comp_env                        003351 constant        entry                    internal dcl 563 ref 1033
copy_file_size                  001352 constant        entry                    external dcl 145
db_corr                         010416 constant        entry                    internal dcl 1389 ref 381
dd                              007634 constant        entry                    internal dcl 1291 ref 278
ddalloc                         007725 constant        entry                    internal dcl 1314 ref 375
define_data                     002316 constant        entry                    external dcl 273
expand_phase                    006222 constant        entry                    internal dcl 1056 ref 364
f_mess                          015267 constant        entry                    internal dcl 2150 ref 1156
finis                           015223 constant        entry                    internal dcl 2136 ref 445 453 1650 1923 1945
finish                          003006 constant        label                    dcl 419 ref 261 267 2054 2058 2061
finish_proc                     012164 constant        entry                    internal dcl 1627 ref 419
fixup                           012111 constant        entry                    internal dcl 1608 ref 416
gcos                            001264 constant        entry                    external dcl 117
generator                       011640 constant        entry                    internal dcl 1545 ref 407
get_length                      012356 constant        entry                    internal dcl 1673 ref 968 969 983 990
ibm_ansi                        001301 constant        entry                    external dcl 124
ibm_ef                          001316 constant        entry                    external dcl 131
id                              001217 constant        entry                    external dcl 94
ided                            007475 constant        entry                    internal dcl 1259 ref 277
init                            015132 constant        entry                    internal dcl 2102 ref 655
init_cobol                      003404 constant        entry                    internal dcl 616 ref 347
lex                             007123 constant        entry                    internal dcl 1208 ref 369
missing_arg_error               003045 constant        label                    dcl 432 ref 767 774 950
multics                         001333 constant        entry                    external dcl 138
multics_error                   003065 constant        label                    dcl 439 ref 558 658 771 965 978 1180 1201
multics_file_error              003071 constant        label                    dcl 442 ref 1508 1558
no_gen                          002766 constant        label                    dcl 409 ref 269 1529 2063
option                          003504 constant        entry                    internal dcl 663 ref 356
pop_name                        001565 constant        entry                    external dcl 189
print_diag                      010556 constant        entry                    internal dcl 1441 ref 405
print_options                   015010 constant        entry                    internal dcl 2076 ref 340
push_name                       001404 constant        entry                    external dcl 157 ref 1204
replace                         010053 constant        entry                    internal dcl 1346 ref 378
restart                         002246 constant        entry                    external dcl 255
rw                              001250 constant        entry                    external dcl 110
set_mode                        003161 constant        entry                    internal dcl 462 ref 121 128 135 142
set_options                     012403 constant        entry                    internal dcl 1691 ref 1115
setlev                          013207 constant        entry                    internal dcl 1831 ref 523 534 858 861 873 876
setsv                           013260 constant        entry                    internal dcl 1859 ref 495 692 695 707 710
setup                           004763 constant        entry                    internal dcl 921 ref 362
slv                             003232 constant        entry                    internal dcl 503 ref 865 880
ssv                             003171 constant        entry                    internal dcl 474 ref 699 714
start                           002336 constant        label                    dcl 286 ref 99 108 115 122 129 136 143
start_error                     014210 constant        label                    dcl 1985
start_print_diag                002764 constant        label                    dcl 405 ref 271 2065
timer                           013112 constant        entry                    internal dcl 1811 ref 402 1189 1242 1286 1306 1341
                                                                                  1374 1492 1526 1536 1580 1601 1619 1622 1659 1661
                                                                                  1752 1803
trace                           001233 constant        entry                    external dcl 102

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0     17350       21232   15571       17360
Length     22630   15571      1662        1361    1556        1322

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cobol                              1220 external procedure  is an external procedure.  
on unit on line 308                  76 on unit               
on unit on line 309                  76 on unit               
on unit on line 310                  64 on unit               
set_mode                                internal procedure  shares stack frame of external procedure cobol.  
ssv                                     internal procedure  shares stack frame of external procedure cobol.  
slv                                     internal procedure  shares stack frame of external procedure cobol.  
cl_arg_check                            internal procedure  shares stack frame of external procedure cobol.  
comp_env                                internal procedure  shares stack frame of external procedure cobol.  
init_cobol                              internal procedure  shares stack frame of external procedure cobol.  
option                                  internal procedure  shares stack frame of external procedure cobol.  
setup                                   internal procedure  shares stack frame of external procedure cobol.  
expand_phase                            internal procedure  shares stack frame of external procedure cobol.  
lex                                     internal procedure  shares stack frame of external procedure cobol.  
ided                                    internal procedure  shares stack frame of external procedure cobol.  
dd                                      internal procedure  shares stack frame of external procedure cobol.  
ddalloc                                 internal procedure  shares stack frame of external procedure cobol.  
replace                                 internal procedure  shares stack frame of external procedure cobol.  
db_corr                                 internal procedure  shares stack frame of external procedure cobol.  
print_diag                              internal procedure  shares stack frame of external procedure cobol.  
generator                               internal procedure  shares stack frame of external procedure cobol.  
analyzer                                internal procedure  shares stack frame of external procedure cobol.  
fixup                                   internal procedure  shares stack frame of external procedure cobol.  
finish_proc                             internal procedure  shares stack frame of external procedure cobol.  
get_length                              internal procedure  shares stack frame of external procedure cobol.  
set_options                             internal procedure  shares stack frame of external procedure cobol.  
START                                   internal procedure  shares stack frame of external procedure cobol.  
FINISH                                  internal procedure  shares stack frame of external procedure cobol.  
START_DB                                internal procedure  shares stack frame of external procedure cobol.  
FINISH_DB                               internal procedure  shares stack frame of external procedure cobol.  
timer                                   internal procedure  shares stack frame of external procedure cobol.  
setlev                                  internal procedure  shares stack frame of external procedure cobol.  
setsv                                   internal procedure  shares stack frame of external procedure cobol.  
CLEANUP                             110 internal procedure  enables or reverts conditions.  
COND                                186 internal procedure  is called by several nonquick procedures.  
cobol_error                             internal procedure  shares stack frame of internal procedure COND.  
print_options                           internal procedure  shares stack frame of external procedure cobol.  
init                                    internal procedure  shares stack frame of external procedure cobol.  
finis                                84 internal procedure  is called by several nonquick procedures.  
f_mess                                  internal procedure  shares stack frame of external procedure cobol.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 stat                        cobol
000702 trace                       cobol
000703 common                      cobol
001067 MESS                        cobol
001220 c_name                      cobol
001300 cond_info                   cobol

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
COND                     000100 code                        COND
                         000110 action_con                  cobol_error
cobol                    000100 ecs_info_table              cobol
                         000172 area_info_area              cobol
                         000240 ecs_info_ptr                cobol
                         000242 branch_status               cobol
                         000254 area_infop                  cobol
                         000302 ch                          ssv
                         000312 ch1                         slv
                         000313 ch2                         slv
                         000534 temp                        timer
                         000535 lp                          timer
                         000536 rp                          timer

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
r_ne_as             alloc_char_temp     cat_realloc_chars   call_ext_in         call_ext_out_desc   call_ext_out
call_int_this       call_int_other_desc call_int_other      return_mac          tra_ext_1           tra_ext_2
mdfx1               signal_op           enable_op           shorten_stack       ext_entry           int_entry
int_entry_desc      op_alloc_

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
absolute_pathname_            cobol$define_data             cobol$restart                 cobol_ci_phase
cobol_control_$cancel         cobol_cselfle                 cobol_db_phase                cobol_ddalloc
cobol_ddsyntax                cobol_fix_driver_             cobol_gen_driver_             cobol_gns$set_table
cobol_idedsyn                 cobol_init_                   cobol_init_$segs              cobol_lex
cobol_make_link_$type_4       cobol_make_xref_              cobol_merge$copy_file_size    cobol_merge$source_file_size
cobol_pdstax                  cobol_print_diag              cobol_repl3                   cobol_swf
cobol_swf_close               cobol_swf_open                cobol_syntax_trace_$initialize
cobol_syntax_trace_$reset_trace                             cobol_vdwf                    cobol_vdwf_close
cobol_vdwf_dget               cobol_vdwf_open               cobol_vdwf_sput               cobol_version$print
cobol_version$set             com_err_                      cu_$af_arg_count              cu_$arg_ptr
cu_$cl                        define_area_                  delete_$path                  expand_cobol_source$expand
expand_pathname_              expand_pathname_$add_suffix   find_condition_info_          get_pdir_
get_temp_segments_            get_wdir_                     hcs_$delentry_file            hcs_$fs_get_path_name
hcs_$get_usage_values         hcs_$initiate                 hcs_$initiate_count           hcs_$set_bc
hcs_$status_long              hcs_$status_minf              hcs_$terminate_file           hcs_$truncate_file
ioa_                          ioa_$ioa_stream               release_area_                 release_temp_segments_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
cobol_$compile_count          cobol_$con_wd_off             cobol_$constant_offset        cobol_$include_cnt
cobol_$include_info_ptr       cobol_$initval_file_ptr       cobol_$list_off               cobol_$list_ptr
cobol_$minpral5_ptr           cobol_$next_tag               cobol_$obj_seg_name           cobol_$pd_map_sw
cobol_ext_$cobol_cmfp         cobol_ext_$cobol_com_fileno   cobol_ext_$cobol_com_ptr      cobol_ext_$cobol_curr_in
cobol_ext_$cobol_curr_out     cobol_ext_$cobol_dfp          cobol_ext_$cobol_hfp          cobol_ext_$cobol_lpr
cobol_ext_$cobol_m1fp         cobol_ext_$cobol_m2fp         cobol_ext_$cobol_min1_fileno  cobol_ext_$cobol_name_fileno
cobol_ext_$cobol_name_fileno_ptr                            cobol_ext_$cobol_ntfp         cobol_ext_$cobol_options
cobol_ext_$cobol_options_len  cobol_ext_$cobol_pdofp        cobol_ext_$cobol_pfp          cobol_ext_$cobol_rm2fp
cobol_ext_$cobol_rmin2fp      cobol_ext_$cobol_rwdd         cobol_ext_$cobol_rwpd         cobol_ext_$cobol_sfp
cobol_ext_$cobol_x2_fileno    cobol_ext_$cobol_x3fp         cobol_ext_$cobol_xlast8       error_table_$badopt
error_table_$no_operation     error_table_$noarg            error_table_$not_act_fnc      error_table_$notadir
error_table_$translation_aborted                            error_table_$translation_failed
sys_info$max_seg_size




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     69 001205        94 001215        97 001226        98 001230        99 001231       102 001232       105 001242
    106 001245       108 001246       110 001247       114 001257       115 001262       117 001263       121 001273
    122 001277       124 001300       128 001310       129 001314       131 001315       135 001325       136 001331
    138 001332       142 001342       143 001346       145 001347       149 001361       150 001371       157 001400
    168 001413       170 001456       173 001460       175 001467       176 001471       178 001472       179 001504
    181 001515       183 001545       184 001551       186 001553       189 001562       196 001576       199 001614
    201 001620       203 001622       205 001624       207 001626       208 001636       211 001642       215 001654
    220 001671       223 001701       226 001711       233 001721       246 001733       248 001756       250 002236
    255 002245       258 002255       261 002270       263 002273       265 002275       267 002305       269 002310
    271 002313       273 002314       277 002325       278 002326       281 002327       286 002336       293 002342
    297 002365       299 002374       302 002376       303 002401       308 002404       309 002436       310 002470
    313 002512       314 002515       315 002517       316 002520       317 002522       319 002524       321 002534
    324 002537       325 002565       328 002570       331 002572       332 002610       336 002613       340 002615
    341 002616       347 002621       350 002622       353 002634       356 002650       359 002651       362 002654
    364 002655       369 002656       372 002657       375 002664       378 002665       381 002666       388 002667
    391 002705       394 002715       397 002721       400 002733       402 002752       405 002764       407 002765
    409 002766       413 002771       416 002772       419 003006       422 003007       427 003016       430 003044
    432 003045       435 003064       439 003065       442 003071       445 003124       448 003130       449 003133
    451 003142       453 003146       456 003152       462 003161       469 003163       470 003166       472 003170
    474 003171       481 003172       484 003173       488 003177       491 003204       495 003213       498 003215
    499 003227       501 003231       503 003232       510 003233       513 003235       516 003236       519 003244
    523 003253       525 003263       527 003265       530 003270       534 003277       539 003301       540 003320
    542 003322       544 003323       548 003324       552 003330       555 003331       558 003345       561 003350
    563 003351       569 003352       571 003355       574 003356       579 003362       581 003363       586 003367
    588 003370       593 003374       595 003375       600 003401       602 003402       612 003403       616 003404
    621 003405       622 003407       623 003413       625 003415       626 003417       627 003421       628 003423
    629 003425       631 003427       633 003431       634 003433       635 003435       636 003437       637 003441
    638 003445       639 003447       640 003453       641 003455       643 003457       645 003461       646 003463
    647 003465       648 003467       649 003471       652 003473       655 003477       658 003500       661 003503
    663 003504       666 003505       669 003513       672 003520       674 003530       675 003532       676 003534
    677 003535       679 003600       682 003604       683 003606       684 003610       686 003612       689 003613
    692 003617       695 003630       699 003640       703 003643       704 003644       707 003651       710 003663
    714 003674       718 003677       720 003700       722 003713       724 003726       726 003741       728 003756
    730 003771       733 004001       734 004003       735 004005       737 004007       738 004010       740 004023
    743 004040       745 004047       747 004062       750 004072       751 004074       753 004075       754 004076
    757 004106       758 004110       759 004112       760 004113       763 004123       764 004125       765 004127
    767 004130       770 004133       771 004147       774 004152       780 004157       782 004211       785 004214
    788 004250       792 004253       795 004276       798 004301       801 004305       803 004347       806 004352
    807 004402       811 004405       814 004410       815 004440       823 004443       824 004444       827 004454
    828 004456       830 004470       833 004503       834 004504       837 004515       839 004520       841 004530
    843 004535       845 004542       847 004547       851 004553       852 004557       854 004572       855 004573
    858 004576       861 004611       865 004625       869 004630       870 004631       873 004636       876 004652
    880 004666       887 004671       890 004675       891 004677       893 004704       894 004705       896 004730
    898 004735       901 004736       904 004741       905 004745       906 004747       913 004751       915 004754
    916 004760       919 004762       921 004763       925 004764       927 004772       928 004776       929 005000
    930 005001       932 005004       934 005011       938 005013       941 005016       942 005022       943 005024
    946 005025       947 005027       950 005034       955 005037       956 005043       957 005045       958 005047
    963 005051       965 005110       968 005113       969 005127       971 005150       972 005154       974 005157
    976 005173       978 005231       981 005234       983 005265       985 005302       987 005315       990 005323
    994 005337      1000 005344      1003 005361      1006 005377      1007 005401      1011 005403      1012 005435
   1013 005471      1014 005525      1016 005561      1018 005615      1019 005651      1020 005705      1021 005741
   1022 005775      1023 006031      1024 006045      1025 006060      1027 006107      1030 006132      1033 006137
   1038 006143      1042 006155      1043 006164      1044 006166      1046 006174      1049 006204      1051 006211
   1054 006221      1056 006222      1059 006223      1065 006241      1068 006307      1070 006315      1073 006321
   1075 006367      1080 006373      1082 006375      1085 006445      1092 006451      1096 006462      1098 006465
   1101 006502      1104 006505      1105 006515      1107 006530      1111 006533      1113 006543      1115 006552
   1121 006561      1125 006562      1128 006565      1130 006577      1136 006602      1139 006624      1143 006643
   1144 006655      1148 006666      1152 006672      1156 006676      1159 006702      1162 006720      1163 006724
   1164 006726      1165 006731      1167 006736      1168 006743      1169 006750      1170 006754      1171 006756
   1172 006757      1175 006762      1176 006765      1178 007002      1180 007013      1184 007016      1186 007020
   1187 007022      1189 007026      1194 007037      1196 007046      1198 007051      1201 007104      1204 007107
   1206 007122      1208 007123      1211 007124      1212 007147      1213 007172      1215 007215      1217 007224
   1219 007246      1223 007252      1226 007267      1228 007272      1230 007301      1233 007314      1234 007321
   1236 007323      1238 007330      1240 007347      1242 007353      1245 007364      1247 007405      1249 007432
   1251 007435      1254 007465      1257 007474      1259 007475      1265 007476      1268 007514      1269 007534
   1273 007557      1274 007563      1275 007567      1276 007572      1278 007601      1280 007605      1282 007612
   1286 007622      1289 007633      1291 007634      1297 007635      1300 007653      1302 007663      1304 007667
   1306 007674      1309 007705      1311 007724      1314 007725      1320 007726      1323 007744      1325 007767
   1327 007772      1329 010002      1335 010010      1337 010012      1339 010033      1341 010040      1344 010052
   1346 010053      1352 010054      1355 010072      1356 010112      1357 010132      1358 010152      1359 010175
   1360 010220      1365 010233      1366 010237      1370 010242      1372 010244      1374 010254      1377 010266
   1378 010272      1380 010275      1381 010313      1382 010333      1383 010366      1385 010412      1387 010415
   1389 010416      1392 010417      1395 010442      1397 010453      1400 010454      1403 010461      1405 010467
   1408 010470      1410 010500      1411 010504      1414 010511      1418 010512      1419 010513      1422 010521
   1423 010522      1425 010525      1428 010526      1429 010536      1430 010542      1433 010547      1439 010555
   1441 010556      1448 010557      1451 010564      1453 010572      1455 010575      1457 010605      1460 010663
   1465 010734      1468 010752      1471 010756      1474 011013      1475 011026      1478 011115      1480 011116
   1481 011141      1483 011164      1486 011174      1488 011200      1489 011217      1490 011236      1492 011256
   1495 011270      1497 011307      1501 011366      1504 011372      1506 011420      1508 011466      1511 011473
   1513 011500      1514 011501      1518 011503      1521 011525      1523 011550      1526 011574      1529 011610
   1533 011611      1536 011617      1537 011624      1542 011637      1545 011640      1552 011641      1553 011647
   1556 011652      1558 011716      1561 011723      1563 011736      1565 011737      1568 011741      1569 011760
   1573 011773      1575 011776      1578 012013      1580 012020      1583 012032      1585 012042      1587 012043
   1593 012044      1596 012054      1599 012071      1601 012076      1606 012110      1608 012111      1614 012112
   1617 012130      1619 012135      1622 012147      1625 012163      1627 012164      1632 012165      1636 012207
   1640 012231      1642 012250      1644 012267      1647 012311      1650 012315      1652 012321      1655 012332
   1656 012334      1657 012336      1659 012340      1661 012350      1665 012355      1673 012356      1681 012360
   1683 012374      1685 012400      1687 012402      1691 012403      1697 012414      1700 012426      1702 012435
   1704 012437      1709 012440      1714 012441      1718 012457      1720 012512      1724 012536      1726 012542
   1728 012545      1732 012546      1740 012550      1743 012571      1746 012575      1748 012614      1752 012637
   1755 012652      1759 012653      1764 012654      1768 012672      1770 012712      1773 012732      1775 012736
   1778 012741      1781 012763      1784 013006      1786 013007      1791 013010      1794 013031      1797 013035
   1799 013054      1803 013077      1806 013111      1811 013112      1817 013114      1818 013127      1819 013133
   1820 013135      1821 013137      1822 013142      1823 013146      1825 013150      1826 013206      1831 013207
   1838 013211      1842 013223      1845 013226      1847 013242      1849 013251      1853 013257      1859 013260
   1867 013262      1871 013274      1874 013277      1876 013311      1878 013320      1881 013324      1889 013325
   1892 013333      1895 013336      1896 013340      1899 013341      1901 013352      1902 013426      1904 013431
   1916 013441      1917 013471      1919 013521      1920 013551      1923 014031      1925 014036      1929 014037
   1938 014053      1941 014071      1945 014116      1947 014123      1950 014124      1981 014135      1985 014210
   1991 014231      1994 014234      1996 014265      1999 014313      2001 014314      2004 014320      2007 014322
   2011 014364      2014 014434      2016 014435      2018 014470      2020 014507      2022 014510      2023 014546
   2029 014552      2032 014625      2034 014667      2038 014670      2040 014717      2042 014723      2043 014725
   2046 014731      2048 014736      2052 014737      2054 014743      2056 014751      2058 014754      2061 014762
   2063 014771      2065 015000      2067 015003      2069 015007      2076 015010      2084 015011      2086 015030
   2089 015035      2090 015051      2092 015065      2094 015101      2095 015115      2097 015131      2102 015132
   2107 015133      2109 015135      2111 015157      2114 015163      2116 015165      2117 015167      2118 015172
   2119 015174      2121 015176      2123 015200      2125 015210      2128 015214      2129 015216      2130 015220
   2132 015221      2136 015222      2141 015230      2144 015243      2146 015266      2150 015267      2154 015270
   2157 015303      2161 015341


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
