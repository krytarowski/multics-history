	COMPILATION LISTING OF SEGMENT cobol_close_gen
	Compiled by: Multics PL/I Compiler, Release 31b, of April 24, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 05/24/89  0938.0 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
       17*     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
       18*     MCR8060 cobol_close_gen.pl1 Reformatted code to new Cobol standard.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 /* Modified on 11/14/78 by FCH, [3.0-1], alt_rec_keys added */
       23 /* Modified since Version 3.0 */
       24 
       25 /* format: style3 */
       26 cobol_close_gen:
       27      proc (mp_ptr);
       28 
       29 dcl	mp_ptr		ptr;
       30 dcl	1 mp		based (mp_ptr),
       31 	  2 n		fixed bin,		/* always 3 */
       32 	  2 pt1		ptr,			/* pts to type1 token for CLOSE */
       33 	  2 pt2		ptr,			/* pts to type12 token for the file */
       34 	  2 pt3		ptr;			/* pts to type19 token */
       35 
       36 /* CLOSE fn EOS
       37*		b  0 = no REEL unit present
       38*		   1 = REEL unit present
       39*
       40*		c  0 = REWIND
       41*		    1 = NO REWIND
       42*
       43*		f  00 = NO LOCK present
       44*		   01 = LOCK present */
       45 
       46 dcl	good_tag		fixed bin;
       47 dcl	argb		(5) bit (216) based (addr (args.arg (1)));
       48 
       49 dcl	arg_ptr		ptr;
       50 dcl	ioerror_ptr	ptr;
       51 dcl	ft_ptr		ptr;
       52 dcl	basic_ptr		ptr;
       53 dcl	name_ptr		ptr;
       54 
       55 dcl	aloff		fixed bin;
       56 dcl	stoff		fixed bin;
       57 
       58 /*************************************/
       59 /*************************************/
       60 /* INITIALIZATION */
       61 start:
       62 	eos_ptr = mp.pt3;
       63 	ioerror.retry_tag = cobol_$next_tag;
       64 	ioerror.ns_tag = cobol_$next_tag + 1;
       65 	good_tag = cobol_$next_tag + 2;
       66 	cobol_$next_tag = cobol_$next_tag + 3;
       67 
       68 	ioerror_ptr = addr (ioerror);
       69 	ioerror.type1_ptr = mp.pt1;
       70 	ioerror.is_tag = 0;				/* initialize to zero */
       71 	ioerror.mode = 0;
       72 
       73 	call cobol_read_ft (mp.pt2 -> fd_token.file_no, ft_ptr);
       74 
       75 	if end_stmt.b
       76 	then if file_table.device ^= 5
       77 	     then return;
       78 
       79 	call cobol_alloc$stack (0, 2, aloff);		/* for max arglist */
       80 
       81 
       82 /*************************************/
       83 /* START CODE GENERATION */
       84 start_codegen:
       85 	call cobol_ioop_util$set_stz;
       86 
       87 	call cobol_define_tag (ioerror.retry_tag);
       88 
       89 	call cobol_set_fsbptr (ft_ptr);		/* generates epp1  pr4|102,*  */
       90 
       91 /* CLOSE  FILE and DETACH cobol_operators_ */
       92 	if end_stmt.b
       93 	then do;
       94 
       95 		call cobol_alloc$stack (80, 2, stoff);
       96 
       97 		substr (epp2 (1), 4, 15) = substr (unspec (stoff), 22, 15);
       98 
       99 		call cobol_emit (addr (epp2 (1)), null, 2);
      100 						/* OPERATOR 76: close reel */
      101 		call cobol_call_op (76, good_tag);
      102 	     end;
      103 	else if ^file_table.detach
      104 	then /* OPERATOR 27: close_file */
      105 	     call cobol_call_op (27, good_tag);		/* close_op */
      106 						/* OPERATOR 38: close_file_only */
      107 	else call cobol_call_op (38, good_tag);		/* close_only_op */
      108 
      109 	ioerror.cobol_code = 0;
      110 
      111 	call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      112 
      113 	call cobol_define_tag (good_tag);
      114 
      115 /* [3.0-1] */
      116 	if file_table.organization = 3 /* ind */ /* [3.0-1] */ & /* [3.0-1] */ file_table.alternate_keys ^= 0
      117 						/* [3.0-1] */
      118 	then do;
      119 		call cobol_io_util$file_desc (file_table.file_desc_1_offset);
      120 						/* [3.0-1] */
      121 		call cobol_set_fsbptr (ft_ptr);	/* [3.0-1] */
      122 		call cobol_call_op (89, 0);		/* [3.0-1] */
      123 	     end;
      124 
      125 	if end_stmt.f = "01"b
      126 	then call cobol_ioop_util$set_lock;
      127 
      128 	call cobol_reg_manager$after_op (4095 + ioerror.cobol_code);
      129 
      130 
      131 	call cobol_gen_ioerror$finish_up (ft_ptr, ioerror_ptr);
      132 
      133 	return;
      134 
  1     1 
  1     2 /*
  1     3*
  1     4*	The procedure cobol_close_gen.pl1 generates the code which realizes
  1     5*the COBOL close statement.
  1     6*
  1     7*	CLOSE fn eos
  1     8*
  1     9*		repeated if necessary
  1    10*
  1    11*		eos	b=0	no REEL/UNIT
  1    12*			  1	REEL/UNIT
  1    13*
  1    14*			c=0	REWIND
  1    15*			  1	no REWIND
  1    16*
  1    17*			f=00	no LOCK
  1    18*			  01	LOCK
  1    19*
  1    20*	mp.n		3
  1    21*	mp.ptr(1)		type-1("CLOSE")
  1    22*	mp.ptr(2)		type-12(file-name)
  1    23*	mp.ptr(3)		eos
  1    24*
  1    25*Flow Chart
  1    26*
  1    27*TAG(ioerror.retry_tag):
  1    28*
  1    29*	if end_stmt.b
  1    30*	then	OP76(close_reel,good_tag)
  1    31*	else	if ^file_table.detach
  1    32*		then	OP27(close_file,good_tag)
  1    33*		else	OP38(close_file_only,good_tag)
  1    34*	GEN_IOERROR
  1    35*
  1    36*
  1    37*TAG(good_tag):
  1    38*
  1    39*	if	file_table.organization = 3	ind
  1    40*		&
  1    41*		file_table.alternate_keys ^- 0
  1    42*	then	IO_UTIL$FILE_DESC;OP89(alt_close_file,0)
  1    43**/
  1    44 
  2     1 /*
  2     2*cobol_operators_: close statement
  2     3*
  2     4*	OP27(close_file)
  2     5*
  2     6*		SUBR_CLOSE_FILE
  2     7*
  2     8*	OP38(close_file_only)
  2     9*
  2    10*		SUBR_CLOSE_FILE_ONLY
  2    11*
  2    12*	OP76(close_reel)
  2    13*
  2    14*		iox_$control
  2    15*		iox_$position
  2    16*
  2    17*	OP89(alt_close_file)
  2    18*
  2    19*		SET_FSBPTR
  2    20*		set fields in the FSB
  2    21*		RTS(47)
  2    22*
  2    23*	SUBR_CLOSE_FILE		27
  2    24*
  2    25*		iox_$close
  2    26*		RTS(12)
  2    27*		iox_$detach
  2    28*
  2    29*	SUBR_CLOSE_FILE_ONLY	38,[29,35,36]
  2    30*
  2    31*		iox_$close
  2    32*		RTS(12)
  2    33*
  2    34**/
  1    45 
  1    46 
      135 
  3     1 
  3     2 /* STATIC DATA */
  3     3 
  3     4 
  3     5 
  3     6 dcl 1 ioerror static,							
  3     7      2 cobol_code fixed bin,
  3     8      2 retry_tag fixed bin,
  3     9      2 is_tag fixed bin,
  3    10      2 ns_tag fixed bin,
  3    11      2 type1_ptr ptr,
  3    12      2 mode fixed bin;
  3    13 
  3    14 dcl epp2 (4) bit(18) static init(
  3    15 	"110000000000000000"b, "011101010001000000"b,	/* epp2	pr6|stoff for tvstat_ptr */
  3    16 	"110000000001001100"b, "010101010001000000"b);	/* spri2	pr6|76	*/
  3    17 
  3    18 dcl mcode_off fixed bin static init(0);
  3    19 
  3    20 
  3    21 /* EXTERNAL ENTRY NAMES */
  3    22 
  3    23 dcl cobol_ioop_util$set_lock entry;
  3    24 dcl cobol_emit entry(ptr,ptr,fixed bin);
  3    25 dcl cobol_ioop_util$set_stz entry;
  3    26 dcl cobol_call_op entry(fixed bin, fixed bin);						
  3    27 dcl cobol_reg_manager$after_op entry(fixed bin);
  3    28 dcl cobol_set_fsbptr entry(ptr);							
  3    29 dcl cobol_gen_ioerror entry(ptr, ptr);
  3    30 dcl cobol_gen_ioerror$finish_up entry(ptr, ptr);
  3    31 dcl cobol_alloc$stack entry(fixed bin,fixed bin,fixed bin);
  3    32 dcl cobol_read_ft entry(fixed bin,ptr);
  3    33 dcl cobol_define_tag entry(fixed bin);
  3    34 
  3    35 /* sub-generators */
  3    36 dcl cobol_file_util$open entry(ptr);
  3    37 dcl cobol_open_util$set_fsb entry(ptr,fixed bin);
  3    38 dcl cobol_io_util$file_desc entry(fixed bin(24));
  3    39 
  3    40 /* BUILTIN FUNCTIONS */
  3    41 
  3    42 	/*****	Declaration for builtin function	*****/
  3    43 
  3    44 dcl	(substr,mod,binary,fixed,addr,addrel,rel,length,
  3    45 	string,unspec,null,index)		builtin;
  3    46 
  3    47 
  4     1 
  4     2 /* BEGIN INCLUDE FILE ...   cobol_file_table.incl.pl1 */
  4     3 /*     <<<   INCLUDE FILE FOR FILE TABLE IN COMMON   >>>     */
  4     4 
  4     5 /* Modified on 09/30/80 by FCH, [4.4-1], density is 6250 is supported */
  4     6 /* Modified on 12/05/78 by RAL, [3.0-3], added dupl_alt from dummy102 */
  4     7 /* Modified on 11/21/78 by RAL, [3.0-2], added space for abs_record_offset from filler */
  4     8 /* Modified on 10/26/78 by RAL, [3.0-1], added space for file_desc_1 table offset from filler */
  4     9 /*     <<<   LAST MODIFIED ON 06-02-77 by GM         >>>	*/
  4    10 /*     <<<   LAST MODIFIED ON 05-31-77 by GM         >>>	*/
  4    11 /*     <<<   LAST MODIFIED  ON 06-30-76 by GM        >>>	*/
  4    12 /*     <<<   LAST MODIFIED ON 06-07-76 by GM    >>>     */
  4    13 /*     <<<   LAST MODIFIED ON 11-29-74 by orn   >>>     */
  4    14 
  4    15 /*
  4    16*A file table is created in variable common for each file selected in the
  4    17*environment division.  The fields of a given file table provide information
  4    18*about the specific file for which the file table is generated.  The
  4    19*addresses which may be contained in the various "info" fields of the file
  4    20*table are addresses in variable common.
  4    21**/
  4    22 
  4    23 /*   THE FILE TABLE STRUCTURE   */
  4    24 
  4    25 dcl	1 file_table based (ft_ptr),
  4    26 		2 next char (5),
  4    27 		2 ifn char (16),
  4    28 		2 attach_options_info char(5),	/*06/02/77*/
  4    29 		2 replacement_info char(5),		/*06/02/77*/
  4    30 		2 file_id_info char(5),		/*05/31/77*/
  4    31 		2 retention_info char(5),		/*05/31/77*/
  4    32 		2 filler0 char (3) ,			/* [3.0-1] */
  4    33 		2 file_desc_1_offset fixed bin (24),		/* [3.0-1] */
  4    34 		2 abs_record_offset fixed bin (24),		/* [3.-02] */
  4    35 		2 filler char(5),		/* this area is available.*/
  4    36 		2 padding_char char (1),
  4    37 		2 banner_char char (1),
  4    38 		2 file_status_info char (5),
  4    39 		2 extra_status_info char (5),
  4    40 		2 cat_id_info char (5),
  4    41 		2 r_key_info char (5),
  4    42 		2 alt_key_info char (5),
  4    43 		2 rec_do_info char (5),
  4    44 		2 label_info char (5),
  4    45 		2 data_info char (5),
  4    46 		2 report_info char (5),
  4    47 		2 linage_info char (5),
  4    48 		2 optional bit (1),						/*06/07/76*/
  4    49 		2 external bit (1),
  4    50 		2 file_status bit (1),
  4    51 		2 extra_status bit (1),
  4    52 		2 sysin bit (1),
  4    53 		2 sysout bit (1),
  4    54 		2 move_mode bit (1),
  4    55 		2 locate_mode bit (1),
  4    56 		2 fixed_recs bit (1),
  4    57 		2 variable_recs bit (1),
  4    58 		2 spanned_recs bit (1),				/*06/07/76*/
  4    59 		2 interchange bit (1),				/*06/07/76*/
  4    60 		2 relative_key bit (1),
  4    61 		2 record_key bit (1),
  4    62 		2 even_parity bit (1),
  4    63 		2 odd_parity bit (1),
  4    64 		2 padding bit (1),
  4    65 		2 banner bit (1),
  4    66 		2 random bit (1),
  4    67 		2 no_file_lockout bit (1),
  4    68 		2 no_write_check bit (1),
  4    69 		2 no_resident_index bit (1),
  4    70 		2 same_file bit (1),
  4    71 		2 sort_file bit (1),
  4    72 		2 rec_do bit (1),
  4    73 		2 linage bit (1),
  4    74 		2 code_set_clause bit (1),
  4    75 		/* history */
  4    76 		2 close bit (1),
  4    77 		2 delete bit (1),
  4    78 		2 open_in bit (1),
  4    79 		2 open_out bit (1),
  4    80 		2 open_io bit (1),
  4    81 		2 open_ext bit (1),
  4    82 		2 read bit (1),
  4    83 		2 release bit (1),
  4    84 		2 return_bit bit (1),
  4    85 		2 rewrite bit (1),
  4    86 		2 sort bit (1),
  4    87 		2 start bit (1),
  4    88 		2 use_error bit (1),
  4    89 		2 write bit (1),
  4    90 		2 read_next bit (1),
  4    91 		2 read_key bit (1),
  4    92 		2 accept bit (1),
  4    93 		2 display bit (1),
  4    94 		2 unequal_recs bit (1),
  4    95 		2 dummy_sysin bit (1),
  4    96 		2 dummy_sysout bit (1),
  4    97 		2 file_no fixed bin,
  4    98 		2 uca_offset fixed bin(24),
  4    99 		2 cra_seg fixed bin,
  4   100 		2 cra_offset fixed bin(24),
  4   101 		2 max_cra_size fixed bin(24),
  4   102 		2 catalogued fixed bin,
  4   103 		2 organization fixed bin,
  4   104 		2 org_qual fixed bin,
  4   105 		2 access fixed bin,
  4   106 		2 buffers fixed bin,
  4   107 		2 device fixed bin,
  4   108 		2 record_prefix fixed bin,				/*06/07/76*/
  4   109 		2 alternate_keys fixed bin,
  4   110 		2 record_format fixed bin,
  4   111 		2 label_format fixed bin,
  4   112 		2 key_location fixed bin,
  4   113 		2 key_size fixed bin,
  4   114 		2 temporary fixed bin,
  4   115 		2 address_format fixed bin,
  4   116 		2 same_area_clause fixed bin,
  4   117 		2 same_rec_clause fixed bin,
  4   118 		2 same_sort_clause fixed bin,
  4   119 		2 mult_clause_no fixed bin,
  4   120 		2 mult_position_no fixed bin,
  4   121 		2 block_desc fixed bin,
  4   122 		2 block_min fixed bin(24),
  4   123 		2 block_max fixed bin(24),
  4   124 		2 rec_min fixed bin(24),
  4   125 		2 rec_max fixed bin(24),
  4   126 		2 label_count fixed bin,
  4   127 		2 ifn_size fixed bin,
  4   128 		2 data_count fixed bin,
  4   129 		2 report_count fixed bin,
  4   130 		2 code_set fixed bin,
  4   131 		2 error_exit fixed bin,
  4   132 		2 prefix_size fixed bin,
  4   133 		2 blocked bit (1),
  4   134 		2 variable bit (1),
  4   135 		2 unbannered bit (1),
  4   136 		2 prefix_clause bit (1),
  4   137 		2 symbolic bit (1),
  4   138 		2 address_format_bit bit (1),
  4   139 		2 bsn bit(1),						/*06/07/76*/
  4   140 		2 process_area bit(1),					/*06/07/76*/
  4   141 		2 dupl_alt bit (1),			/* [3.0-3] */
  4   142 		2 dummy102 bit (23),
  4   143 		2 name_size fixed bin,
  4   144 		2 name char(32),
  4   145 		2 id char(32),
  4   146 		2 temp bit(1) ,
  4   147 		2 perm bit(1) ,
  4   148 		2 attach bit(1) ,
  4   149 		2 detach bit(1) ,
  4   150 		2 fsb ,		/* file state block */
  4   151 		     3 seg fixed bin(24), /* internal addr */
  4   152 		     3 off fixed bin(24),
  4   153 		2 tape,
  4   154 		     3 density bit(1) ,	/* 0-hi 1-lo */
  4   155 		     3 retain bit(1),	/* 0 not retained across attachment, 1 retained */
  4   156 		     3 force bit(1),	/* 0 check retention date, 1 no check */
  4   157 		     3 protect bit(1) ,	/* 0-no 1-yes */
  4   158 		     3 den_6250 bit(1),	/* 0-no 1-yes */		/*[4.4-1]*/
  4   159 		2 cat_nm char(200),
  4   160 		2 ao_len fixed bin(24),		/* attach options */
  4   161 		2 ao_string char(256),
  4   162 		2 output_mode fixed bin,	/*	0 not specified
  4   163*						1 generation
  4   164*						2 modification
  4   165*						3 replacement literal
  4   166*						4 replacement dataname	*/
  4   167 		2 om_len	fixed bin,		/* length of output mode */
  4   168 		2 om_string char(17),
  4   169 		2 tape_device fixed bin,	/*	0 not specified
  4   170*						1 integer
  4   171*						2 dataname	*/
  4   172 		2 tape_device_num fixed bin,
  4   173 		2 tape_device_key char(5),
  4   174 		2 add_cat_key char(5);
  4   175 
  4   176 
  4   177 /* END INCLUDE FILE ...   cobol_file_table.incl.pl1 */
  4   178 
  3    48 
  5     1 
  5     2 /* BEGIN INCLUDE FILE ... cobol_type19.incl.pl1 */
  5     3 /* last modified on 11/19/76 by ORN */
  5     4 
  5     5 /*
  5     6*A type 19 end of statement token is created in the procedure division
  5     7*minpral file at the end of each minpral statement generated by the
  5     8*procedure division syntax phase.  A minpral statement may be a complete or
  5     9*partial source language statement.  A type 19 token contains information
  5    10*describing the statement which it delimits.
  5    11**/
  5    12 
  5    13 dcl eos_ptr ptr;
  5    14 
  5    15 /* BEGIN DECLARATION OF TYPE19 (END STATEMENT) TOKEN */
  5    16 dcl	1 end_stmt based (eos_ptr),
  6     1 
  6     2 /* begin include file ... cobol_TYPE19.incl.pl1 */
  6     3 /* Last modified on 11/17/76 by ORN */
  6     4 
  6     5 		/* header */
  6     6 		2 size fixed bin,
  6     7 		2 line fixed bin,
  6     8 		2 column fixed bin,
  6     9 		2 type fixed bin,
  6    10 		/* body */
  6    11 		2 verb fixed bin,
  6    12 		2 e fixed bin,
  6    13 		2 h fixed bin,
  6    14 		2 i fixed bin,
  6    15 		2 j fixed bin,
  6    16 		2 a bit (3),
  6    17 		2 b bit (1),
  6    18 		2 c bit (1),
  6    19 		2 d bit (2),
  6    20 		2 f bit (2),
  6    21 		2 g bit (2),
  6    22 		2 k bit (5),
  6    23 		2 always_an bit (1);
  6    24 
  6    25 /* end include file ... cobol_TYPE19.incl.pl1 */
  6    26 
  5    17 
  5    18 /* END DECLARATION OF TYPE19 (END STATEMENT) TOKEN */
  5    19 
  5    20 /*
  5    21*FIELD		CONTENTS
  5    22*
  5    23*size		The total size in bytes of this end of statement token.
  5    24*line		0
  5    25*column		0
  5    26*type		19
  5    27*verb		A value indicating the verb in this statement
  5    28*		 1 = accept
  5    29*		 2 = add
  5    30*		 3 = on size error
  5    31*		 4 = alter
  5    32*		 5 = call
  5    33*		 7 = cancel
  5    34*		 8 = close
  5    35*		 9 = divide
  5    36*		10 = multiply
  5    37*		11 = subtract
  5    38*		12 = exit
  5    39*		14 = go
  5    40*		15 = merge
  5    41*		16 = initiate
  5    42*		17 = inspect
  5    43*		18 = move
  5    44*		19 = open
  5    45*		20 = perform
  5    46*		21 = read
  5    47*		23 = receive
  5    48*		24 = release
  5    49*		25 = return
  5    50*		26 = search
  5    51*		27 = rewrite
  5    52*		29 = seek
  5    53*		30 = send
  5    54*		31 = set
  5    55*		33 = stop
  5    56*		34 = string
  5    57*		35 = suspend
  5    58*		36 = terminate
  5    59*		37 = unstring
  5    60*		38 = write
  5    61*		39 = use
  5    62*		40 = compute
  5    63*		41 = disable
  5    64*		42 = display
  5    65*		43 = enable
  5    66*		45 = generate
  5    67*		46 = hold
  5    68*		48 = process
  5    69*		49 = sort
  5    70*		52 = procedure
  5    71*		53 = declaratives
  5    72*		54 = section name
  5    73*		55 = paragraph name
  5    74*		98 = end
  5    75*e,h,i,j		The significance of these fields differs with each
  5    76*		statement.  These fields are normally used as counters.
  5    77*a,b,c,d,f,g,k	The significance of these fields differs with each
  5    78*		statement.  These fields are normally used as indicators.
  5    79**/
  5    80 
  5    81 /* END INCLUDE FILE ... cobol_type19.incl.pl1 */
  5    82 
  3    49 
  7     1 
  7     2 /* BEGIN INCLUDE FILE ... cobol_type12.incl.pl1 */
  7     3 /* Last modified on 11/19/76 by ORN */
  7     4 
  7     5 /*
  7     6*A type 12 file name token is entered into the name table by the data
  7     7*division syntax phase for each file name appearing in the data division.
  7     8*When the replacement phase processes the procedure division minpral file,
  7     9*each reference to a file name is replaced with the type 12 token created
  7    10*for that file name.
  7    11**/
  7    12 
  7    13 /* dcl name_ptr ptr; */
  7    14 
  7    15 /* BEGIN DECLARATION OF TYPE12 (FILE NAME) TOKEN */
  7    16 dcl 	1 fd_token based (name_ptr),
  8     1 
  8     2 /* begin include file ... cobol_TYPE12.incl.pl1 */
  8     3 /* Last modified on 11/17/76 by ORN */
  8     4 
  8     5 		/* header */
  8     6 		2 size fixed bin,
  8     7 		2 line fixed bin,
  8     8 		2 column fixed bin,
  8     9 		2 type fixed bin,
  8    10 		/* body */
  8    11 		2 string_ptr ptr,
  8    12 		2 prev_rec ptr,
  8    13 		2 info bit (8),
  8    14 		2 def_line fixed bin,
  8    15 		2 file_no fixed bin,
  8    16 		2 name_size fixed bin,
  8    17 		2 name char(0 refer(fd_token.name_size));	
  8    18 
  8    19 /* end include file ... cobol_TYPE12.incl.pl1 */
  8    20 
  7    17 
  7    18 /* END DECLARATION OF TYPE12 (FILE NAME) TOKEN */
  7    19 
  7    20 
  7    21 /* END INCLUDE FILE ... cobol_type12.incl.pl1 */
  7    22 
  3    50 
  9     1 
  9     2 /* BEGIN INCLUDE FILE ... cobol_type1.incl.pl1 */
  9     3 /* Last modified on 11/19/76 by ORN */
  9     4 
  9     5 /*
  9     6*A reserved word token is created in the minpral files for each occurrence
  9     7*of a reserved word in the source program.  The value of the key field
  9     8*indicates the specific reserved word which a type 1 token represents.
  9     9**/
  9    10 
  9    11 dcl rw_ptr ptr;
  9    12 
  9    13 /* BEGIN DECLARATION OF TYPE1 (RESERVED WORD) TOKEN */
  9    14 dcl	1 reserved_word based (rw_ptr),
 10     1 
 10     2 /* begin include file ... cobol_TYPE1.incl.pl1 */
 10     3 /* Last modified on 11/17/76 by ORN */
 10     4 /* Last modified on 12/28/76 by FCH */
 10     5 /* Last modified on 12/16/80 by FCH */
 10     6 
 10     7 		/* header */
 10     8 		2 size fixed bin,
 10     9 		2 line fixed bin,
 10    10 		2 column fixed bin,
 10    11 		2 type fixed bin,
 10    12 		/* body */
 10    13 		2 key fixed bin,
 10    14 		/* procedure division class bits */
 10    15 		2 verb bit (1),
 10    16 		2 arith_op bit (1),
 10    17 		2 figcon bit (1),
 10    18 		2 terminator bit (1),
 10    19 		2 end_dec bit (1),
 10    20 		2 rel_op bit (1),
 10    21 		2 imper_verb bit (1),
 10    22 		2 end_cobol bit (1),
 10    23 		/* data division class bits */
 10    24 		2 section_header bit (1),
 10    25 		2 fs_ind bit (1),
 10    26 		2 fd_clause bit (1),
 10    27 		2 dd_clause bit (1),
 10    28 		2 cd_input bit (1),
 10    29 		2 cd_output bit (1),
 10    30 		2 cset_name bit (1),
 10    31 		2 ss_division bit (1),
 10    32 		2 repl_jump_ind bit (4),
 10    33 		2 ided_recovery bit (1),
 10    34 		2 report_writer bit (5),
 10    35 		2 ss_desc_entry bit (1),
 10    36 		2 jump_index fixed bin,
 10    37 		2 length fixed bin,
 10    38 		2 name char(0 refer(reserved_word.length));
 10    39 
 10    40 
 10    41 
 10    42 /* end include file ... cobol_TYPE1.incl.pl1 */
 10    43 
  9    15 
  9    16 /* END DECLARATION OF TYPE1 (RESERVED WORD) TOKEN */
  9    17 
  9    18 /* END INCLUDE FILE ... cobol_type1.incl.pl1 */
  9    19 
  3    51 
 11     1 
 11     2 /* BEGIN INCLUDE FILE ... cobol_.incl.pl1 */
 11     3 /* last modified Feb 4, 1977 by ORN  */
 11     4 
 11     5 /* This file defines all external data used in the generator phase of Multics Cobol */
 11     6 
 11     7 /* POINTERS */
 11     8 dcl cobol_$text_base_ptr ptr  ext;
 11     9 dcl text_base_ptr ptr  defined (cobol_$text_base_ptr);
 11    10 dcl cobol_$con_end_ptr ptr  ext;
 11    11 dcl con_end_ptr ptr  defined (cobol_$con_end_ptr);
 11    12 dcl cobol_$def_base_ptr ptr  ext;
 11    13 dcl def_base_ptr ptr  defined (cobol_$def_base_ptr);
 11    14 dcl cobol_$link_base_ptr ptr  ext;
 11    15 dcl link_base_ptr ptr  defined (cobol_$link_base_ptr);
 11    16 dcl cobol_$sym_base_ptr ptr  ext;
 11    17 dcl sym_base_ptr ptr  defined (cobol_$sym_base_ptr);
 11    18 dcl cobol_$reloc_text_base_ptr ptr  ext;
 11    19 dcl reloc_text_base_ptr ptr  defined (cobol_$reloc_text_base_ptr);
 11    20 dcl cobol_$reloc_def_base_ptr ptr  ext;
 11    21 dcl reloc_def_base_ptr ptr  defined (cobol_$reloc_def_base_ptr);
 11    22 dcl cobol_$reloc_link_base_ptr ptr  ext;
 11    23 dcl reloc_link_base_ptr ptr  defined (cobol_$reloc_link_base_ptr);
 11    24 dcl cobol_$reloc_sym_base_ptr ptr  ext;
 11    25 dcl reloc_sym_base_ptr ptr  defined (cobol_$reloc_sym_base_ptr);
 11    26 dcl cobol_$reloc_work_base_ptr ptr  ext;
 11    27 dcl reloc_work_base_ptr ptr  defined (cobol_$reloc_work_base_ptr);
 11    28 dcl cobol_$pd_map_ptr ptr  ext;
 11    29 dcl pd_map_ptr ptr  defined (cobol_$pd_map_ptr);
 11    30 dcl cobol_$fixup_ptr ptr  ext;
 11    31 dcl fixup_ptr ptr  defined (cobol_$fixup_ptr);
 11    32 dcl cobol_$initval_base_ptr ptr  ext;
 11    33 dcl initval_base_ptr ptr  defined (cobol_$initval_base_ptr);
 11    34 dcl cobol_$initval_file_ptr ptr  ext;
 11    35 dcl initval_file_ptr ptr  defined (cobol_$initval_file_ptr);
 11    36 dcl cobol_$perform_list_ptr ptr  ext;
 11    37 dcl perform_list_ptr ptr  defined (cobol_$perform_list_ptr);
 11    38 dcl cobol_$alter_list_ptr ptr  ext;
 11    39 dcl alter_list_ptr ptr  defined (cobol_$alter_list_ptr);
 11    40 dcl cobol_$seg_init_list_ptr ptr  ext;
 11    41 dcl seg_init_list_ptr ptr  defined (cobol_$seg_init_list_ptr);
 11    42 dcl cobol_$temp_token_area_ptr ptr  ext;
 11    43 dcl temp_token_area_ptr ptr  defined (cobol_$temp_token_area_ptr);
 11    44 dcl cobol_$temp_token_ptr ptr  ext;
 11    45 dcl temp_token_ptr ptr  defined (cobol_$temp_token_ptr);
 11    46 dcl cobol_$token_block1_ptr ptr  ext;
 11    47 dcl token_block1_ptr ptr  defined (cobol_$token_block1_ptr);
 11    48 dcl cobol_$token_block2_ptr ptr  ext;
 11    49 dcl token_block2_ptr ptr  defined (cobol_$token_block2_ptr);
 11    50 dcl cobol_$minpral5_ptr ptr  ext;
 11    51 dcl minpral5_ptr ptr  defined (cobol_$minpral5_ptr);
 11    52 dcl cobol_$tag_table_ptr ptr  ext;
 11    53 dcl tag_table_ptr ptr  defined (cobol_$tag_table_ptr);
 11    54 dcl cobol_$map_data_ptr ptr  ext;
 11    55 dcl map_data_ptr ptr  defined (cobol_$map_data_ptr);
 11    56 dcl cobol_$ptr_status_ptr ptr  ext;
 11    57 dcl ptr_status_ptr ptr  defined (cobol_$ptr_status_ptr);
 11    58 dcl cobol_$reg_status_ptr ptr  ext;
 11    59 dcl reg_status_ptr ptr  defined (cobol_$reg_status_ptr);
 11    60 dcl cobol_$misc_base_ptr ptr ext;
 11    61 dcl misc_base_ptr ptr defined (cobol_$misc_base_ptr);
 11    62 dcl cobol_$misc_end_ptr ptr ext;
 11    63 dcl misc_end_ptr ptr defined (cobol_$misc_end_ptr);
 11    64 dcl cobol_$list_ptr ptr ext;
 11    65 dcl list_ptr ptr defined (cobol_$list_ptr);
 11    66 dcl cobol_$allo1_ptr ptr ext;
 11    67 dcl allo1_ptr ptr defined (cobol_$allo1_ptr);
 11    68 dcl cobol_$eln_ptr ptr ext;
 11    69 dcl eln_ptr ptr defined (cobol_$eln_ptr);
 11    70 dcl cobol_$diag_ptr ptr ext;
 11    71 dcl diag_ptr ptr defined (cobol_$diag_ptr);
 11    72 dcl cobol_$xref_token_ptr ptr ext;
 11    73 dcl xref_token_ptr ptr defined (cobol_$xref_token_ptr);
 11    74 dcl cobol_$xref_chain_ptr ptr ext;
 11    75 dcl xref_chain_ptr ptr defined (cobol_$xref_chain_ptr);
 11    76 dcl cobol_$statement_info_ptr ptr ext;
 11    77 dcl statement_info_ptr ptr defined (cobol_$statement_info_ptr);
 11    78 dcl cobol_$reswd_ptr ptr ext;
 11    79 dcl reswd_ptr ptr defined (cobol_$reswd_ptr);
 11    80 dcl cobol_$op_con_ptr ptr ext;
 11    81 dcl op_con_ptr ptr defined (cobol_$op_con_ptr);
 11    82 dcl cobol_$ntbuf_ptr ptr ext;
 11    83 dcl ntbuf_ptr ptr defined (cobol_$ntbuf_ptr);
 11    84 dcl cobol_$main_pcs_ptr ptr ext;
 11    85 dcl main_pcs_ptr ptr defined (cobol_$main_pcs_ptr);
 11    86 dcl cobol_$include_info_ptr ptr ext;
 11    87 dcl include_info_ptr ptr defined (cobol_$include_info_ptr);
 11    88 
 11    89 /* FIXED BIN */
 11    90 dcl cobol_$text_wd_off fixed bin  ext;
 11    91 dcl text_wd_off fixed bin  defined (cobol_$text_wd_off);
 11    92 dcl cobol_$con_wd_off fixed bin  ext;
 11    93 dcl con_wd_off fixed bin  defined (cobol_$con_wd_off);
 11    94 dcl cobol_$def_wd_off fixed bin  ext;
 11    95 dcl def_wd_off fixed bin  defined (cobol_$def_wd_off);
 11    96 dcl cobol_$def_max fixed bin  ext;
 11    97 dcl def_max fixed bin  defined (cobol_$def_max);
 11    98 dcl cobol_$link_wd_off fixed bin  ext;
 11    99 dcl link_wd_off fixed bin  defined (cobol_$link_wd_off);
 11   100 dcl cobol_$link_max fixed bin  ext;
 11   101 dcl link_max fixed bin  defined (cobol_$link_max);
 11   102 dcl cobol_$sym_wd_off fixed bin  ext;
 11   103 dcl sym_wd_off fixed bin  defined (cobol_$sym_wd_off);
 11   104 dcl cobol_$sym_max fixed bin  ext;
 11   105 dcl sym_max fixed bin  defined (cobol_$sym_max);
 11   106 dcl cobol_$reloc_text_max fixed bin(24)  ext;
 11   107 dcl reloc_text_max fixed bin(24)  defined (cobol_$reloc_text_max);
 11   108 dcl cobol_$reloc_def_max fixed bin(24)  ext;
 11   109 dcl reloc_def_max fixed bin(24)  defined (cobol_$reloc_def_max);
 11   110 dcl cobol_$reloc_link_max fixed bin(24)  ext;
 11   111 dcl reloc_link_max fixed bin(24)  defined (cobol_$reloc_link_max);
 11   112 dcl cobol_$reloc_sym_max fixed bin(24)  ext;
 11   113 dcl reloc_sym_max fixed bin(24)  defined (cobol_$reloc_sym_max);
 11   114 dcl cobol_$reloc_work_max fixed bin(24)  ext;
 11   115 dcl reloc_work_max fixed bin(24)  defined (cobol_$reloc_work_max);
 11   116 dcl cobol_$pd_map_index fixed bin  ext;
 11   117 dcl pd_map_index fixed bin  defined (cobol_$pd_map_index);
 11   118 dcl cobol_$cobol_data_wd_off fixed bin  ext;
 11   119 dcl cobol_data_wd_off fixed bin  defined (cobol_$cobol_data_wd_off);
 11   120 dcl cobol_$stack_off fixed bin  ext;
 11   121 dcl stack_off fixed bin  defined (cobol_$stack_off);
 11   122 dcl cobol_$max_stack_off fixed bin  ext;
 11   123 dcl max_stack_off fixed bin  defined (cobol_$max_stack_off);
 11   124 dcl cobol_$init_stack_off fixed bin  ext;
 11   125 dcl init_stack_off fixed bin  defined (cobol_$init_stack_off);
 11   126 dcl cobol_$pd_map_sw fixed bin  ext;
 11   127 dcl pd_map_sw fixed bin  defined (cobol_$pd_map_sw);
 11   128 dcl cobol_$next_tag fixed bin  ext;
 11   129 dcl next_tag fixed bin  defined (cobol_$next_tag);
 11   130 dcl cobol_$data_init_flag fixed bin  ext;
 11   131 dcl data_init_flag fixed bin  defined (cobol_$data_init_flag);
 11   132 dcl cobol_$seg_init_flag fixed bin  ext;
 11   133 dcl seg_init_flag fixed bin  defined (cobol_$seg_init_flag);
 11   134 dcl cobol_$alter_flag fixed bin  ext;
 11   135 dcl alter_flag fixed bin  defined (cobol_$alter_flag);
 11   136 dcl cobol_$sect_eop_flag fixed bin  ext;
 11   137 dcl sect_eop_flag fixed bin  defined (cobol_$sect_eop_flag);
 11   138 dcl cobol_$para_eop_flag fixed bin  ext;
 11   139 dcl para_eop_flag fixed bin  defined (cobol_$para_eop_flag);
 11   140 dcl cobol_$priority_no fixed bin  ext;
 11   141 dcl priority_no fixed bin  defined (cobol_$priority_no);
 11   142 dcl cobol_$compile_count fixed bin ext;
 11   143 dcl compile_count fixed bin defined (cobol_$compile_count);
 11   144 dcl cobol_$ptr_assumption_ind fixed bin ext;
 11   145 dcl ptr_assumption_ind fixed bin defined (cobol_$ptr_assumption_ind);
 11   146 dcl cobol_$reg_assumption_ind fixed bin ext;
 11   147 dcl reg_assumption_ind fixed bin defined (cobol_$reg_assumption_ind);
 11   148 dcl cobol_$perform_para_index fixed bin ext;
 11   149 dcl perform_para_index fixed bin defined (cobol_$perform_para_index);
 11   150 dcl cobol_$perform_sect_index fixed bin ext;
 11   151 dcl perform_sect_index fixed bin defined (cobol_$perform_sect_index);
 11   152 dcl cobol_$alter_index fixed bin ext;
 11   153 dcl alter_index fixed bin defined (cobol_$alter_index);
 11   154 dcl cobol_$list_off fixed bin ext;
 11   155 dcl list_off fixed bin defined (cobol_$list_off);
 11   156 dcl cobol_$constant_offset fixed bin ext;
 11   157 dcl constant_offset fixed bin defined (cobol_$constant_offset);
 11   158 dcl cobol_$misc_max fixed bin ext;
 11   159 dcl misc_max fixed bin defined (cobol_$misc_max);
 11   160 dcl cobol_$pd_map_max fixed bin ext;
 11   161 dcl pd_map_max fixed bin defined (cobol_$pd_map_max);
 11   162 dcl cobol_$map_data_max fixed bin ext;
 11   163 dcl map_data_max fixed bin defined (cobol_$map_data_max);
 11   164 dcl cobol_$fixup_max fixed bin ext;
 11   165 dcl fixup_max fixed bin defined (cobol_$fixup_max);
 11   166 dcl cobol_$tag_table_max fixed bin ext;
 11   167 dcl tag_table_max fixed bin defined (cobol_$tag_table_max);
 11   168 dcl cobol_$temp_token_max fixed bin ext;
 11   169 dcl temp_token_max fixed bin defined (cobol_$temp_token_max);
 11   170 dcl cobol_$allo1_max fixed bin ext;
 11   171 dcl allo1_max fixed bin defined (cobol_$allo1_max);
 11   172 dcl cobol_$eln_max fixed bin ext;
 11   173 dcl eln_max fixed bin defined (cobol_$eln_max);
 11   174 dcl cobol_$debug_enable fixed bin ext;
 11   175 dcl debug_enable fixed bin defined (cobol_$debug_enable);
 11   176 dcl cobol_$non_source_offset fixed bin ext;
 11   177 dcl non_source_offset fixed bin defined (cobol_$non_source_offset);
 11   178 dcl cobol_$initval_flag fixed bin ext;
 11   179 dcl initval_flag fixed bin defined (cobol_$initval_flag);
 11   180 dcl cobol_$date_compiled_sw fixed bin ext;
 11   181 dcl date_compiled_sw fixed bin defined (cobol_$date_compiled_sw);
 11   182 dcl cobol_$include_cnt fixed bin ext;
 11   183 dcl include_cnt fixed bin defined (cobol_$include_cnt);
 11   184 dcl cobol_$fs_charcnt fixed bin ext;
 11   185 dcl fs_charcnt fixed bin defined (cobol_$fs_charcnt);
 11   186 dcl cobol_$ws_charcnt fixed bin ext;
 11   187 dcl ws_charcnt fixed bin defined (cobol_$ws_charcnt);
 11   188 dcl cobol_$coms_charcnt fixed bin ext;
 11   189 dcl coms_charcnt fixed bin defined (cobol_$coms_charcnt);
 11   190 dcl cobol_$ls_charcnt fixed bin ext;
 11   191 dcl ls_charcnt fixed bin defined (cobol_$ls_charcnt);
 11   192 dcl cobol_$cons_charcnt fixed bin ext;
 11   193 dcl cons_charcnt fixed bin defined (cobol_$cons_charcnt);
 11   194 dcl cobol_$value_cnt fixed bin ext;
 11   195 dcl value_cnt fixed bin defined (cobol_$value_cnt);
 11   196 dcl cobol_$cd_cnt fixed bin ext;
 11   197 dcl cd_cnt fixed bin defined (cobol_$cd_cnt);
 11   198 dcl cobol_$fs_wdoff fixed bin ext;
 11   199 dcl fs_wdoff fixed bin defined (cobol_$fs_wdoff);
 11   200 dcl cobol_$ws_wdoff fixed bin ext;
 11   201 dcl ws_wdoff fixed bin defined (cobol_$ws_wdoff);
 11   202 dcl cobol_$coms_wdoff fixed bin ext;
 11   203 dcl coms_wdoff fixed bin defined (cobol_$coms_wdoff);
 11   204 
 11   205 /* CHARACTER */
 11   206 dcl cobol_$scratch_dir char (168)   aligned ext;
 11   207 dcl scratch_dir char (168)   aligned defined (cobol_$scratch_dir);			/* -42- */
 11   208 dcl cobol_$obj_seg_name char (32)   aligned ext;
 11   209 dcl obj_seg_name char (32)   aligned defined (cobol_$obj_seg_name);		/* -8- */
 11   210 
 11   211 /* BIT */
 11   212 dcl cobol_$xref_bypass bit(1) aligned ext;
 11   213 dcl xref_bypass bit(1) aligned defined (cobol_$xref_bypass);			/* -1- */
 11   214 dcl cobol_$same_sort_merge_proc bit(1) aligned ext;
 11   215 dcl same_sort_merge_proc bit(1) aligned defined (cobol_$same_sort_merge_proc);		/* -1- */
 11   216 
 11   217 
 11   218 /* END INCLUDE FILE ... cobol_incl.pl1*/
 11   219 
 11   220 
  3    52 
      136 
      137      end cobol_close_gen;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/24/89  0830.3  cobol_close_gen.pl1               >spec>install>MR12.3-1048>cobol_close_gen.pl1
135          1    03/27/82  0439.4  cobol_close_gen_info.incl.pl1     >ldd>include>cobol_close_gen_info.incl.pl1
1-45         2    03/27/82  0439.5  cobol_opr_close.incl.pl1          >ldd>include>cobol_opr_close.incl.pl1
136          3    03/27/82  0439.4  cobol_close_gen_data.incl.pl1     >ldd>include>cobol_close_gen_data.incl.pl1
3-48         4    11/11/82  1712.7  cobol_file_table.incl.pl1         >ldd>include>cobol_file_table.incl.pl1
3-49         5    03/27/82  0439.8  cobol_type19.incl.pl1             >ldd>include>cobol_type19.incl.pl1
5-17         6    03/27/82  0439.6  cobol_TYPE19.incl.pl1             >ldd>include>cobol_TYPE19.incl.pl1
3-50         7    11/11/82  1712.8  cobol_type12.incl.pl1             >ldd>include>cobol_type12.incl.pl1
7-17         8    03/27/82  0439.6  cobol_TYPE12.incl.pl1             >ldd>include>cobol_TYPE12.incl.pl1
3-51         9    03/27/82  0439.8  cobol_type1.incl.pl1              >ldd>include>cobol_type1.incl.pl1
9-15        10    11/11/82  1712.8  cobol_TYPE1.incl.pl1              >ldd>include>cobol_TYPE1.incl.pl1
3-52        11    11/11/82  1712.7  cobol_.incl.pl1                   >ldd>include>cobol_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 3-44 ref 68 99 99
aloff                           000106 automatic       fixed bin(17,0)          dcl 55 set ref 79*
alternate_keys           51            based           fixed bin(17,0)          level 2 dcl 4-25 ref 116
b                        11(03)        based           bit(1)                   level 2 packed packed unaligned dcl 5-16 ref 75 92
cobol_$next_tag                 000052 external static fixed bin(17,0)          dcl 11-128 set ref 63 64 65 66* 66
cobol_alloc$stack               000042 constant        entry                    external dcl 3-31 ref 79 95
cobol_call_op                   000030 constant        entry                    external dcl 3-26 ref 101 103 107 122
cobol_code                      000010 internal static fixed bin(17,0)          level 2 dcl 3-6 set ref 109* 128
cobol_define_tag                000046 constant        entry                    external dcl 3-33 ref 87 113
cobol_emit                      000024 constant        entry                    external dcl 3-24 ref 99
cobol_gen_ioerror               000036 constant        entry                    external dcl 3-29 ref 111
cobol_gen_ioerror$finish_up     000040 constant        entry                    external dcl 3-30 ref 131
cobol_io_util$file_desc         000050 constant        entry                    external dcl 3-38 ref 119
cobol_ioop_util$set_lock        000022 constant        entry                    external dcl 3-23 ref 125
cobol_ioop_util$set_stz         000026 constant        entry                    external dcl 3-25 ref 84
cobol_read_ft                   000044 constant        entry                    external dcl 3-32 ref 73
cobol_reg_manager$after_op      000032 constant        entry                    external dcl 3-27 ref 128
cobol_set_fsbptr                000034 constant        entry                    external dcl 3-28 ref 89 121
detach                  123(03)        based           bit(1)                   level 2 packed packed unaligned dcl 4-25 ref 103
device                   47            based           fixed bin(17,0)          level 2 dcl 4-25 ref 75
end_stmt                               based           structure                level 1 unaligned dcl 5-16
eos_ptr                         000110 automatic       pointer                  dcl 5-13 set ref 61* 75 92 125
epp2                            000020 internal static bit(18)                  initial array packed unaligned dcl 3-14 set ref 97*
                                                                                  99 99
f                        11(07)        based           bit(2)                   level 2 packed packed unaligned dcl 5-16 ref 125
fd_token                               based           structure                level 1 unaligned dcl 7-16
file_desc_1_offset       13            based           fixed bin(24,0)          level 2 dcl 4-25 set ref 119*
file_no                  12            based           fixed bin(17,0)          level 2 dcl 7-16 set ref 73*
file_table                             based           structure                level 1 unaligned dcl 4-25
ft_ptr                          000104 automatic       pointer                  dcl 51 set ref 73* 75 89* 103 111* 116 116 119 121*
                                                                                  131*
good_tag                        000100 automatic       fixed bin(17,0)          dcl 46 set ref 65* 101* 103* 107* 113*
ioerror                         000010 internal static structure                level 1 unaligned dcl 3-6 set ref 68
ioerror_ptr                     000102 automatic       pointer                  dcl 50 set ref 68* 111* 131*
is_tag                    2     000010 internal static fixed bin(17,0)          level 2 dcl 3-6 set ref 70*
mode                      6     000010 internal static fixed bin(17,0)          level 2 dcl 3-6 set ref 71*
mp                                     based           structure                level 1 unaligned dcl 30
mp_ptr                                 parameter       pointer                  dcl 29 ref 26 61 69 73
ns_tag                    3     000010 internal static fixed bin(17,0)          level 2 dcl 3-6 set ref 64*
null                                                   builtin function         dcl 3-44 ref 99 99
organization             43            based           fixed bin(17,0)          level 2 dcl 4-25 ref 116
pt1                       2            based           pointer                  level 2 dcl 30 ref 69
pt2                       4            based           pointer                  level 2 dcl 30 ref 73
pt3                       6            based           pointer                  level 2 dcl 30 ref 61
retry_tag                 1     000010 internal static fixed bin(17,0)          level 2 dcl 3-6 set ref 63* 87*
stoff                           000107 automatic       fixed bin(17,0)          dcl 56 set ref 95* 97
substr                                                 builtin function         dcl 3-44 set ref 97* 97
type1_ptr                 4     000010 internal static pointer                  level 2 dcl 3-6 set ref 69*
unspec                                                 builtin function         dcl 3-44 ref 97

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
addrel                                                 builtin function         dcl 3-44
allo1_max                              defined         fixed bin(17,0)          dcl 11-171
allo1_ptr                              defined         pointer                  dcl 11-67
alter_flag                             defined         fixed bin(17,0)          dcl 11-135
alter_index                            defined         fixed bin(17,0)          dcl 11-153
alter_list_ptr                         defined         pointer                  dcl 11-39
arg_ptr                                automatic       pointer                  dcl 49
argb                                   based           bit(216)                 array packed unaligned dcl 47
basic_ptr                              automatic       pointer                  dcl 52
binary                                                 builtin function         dcl 3-44
cd_cnt                                 defined         fixed bin(17,0)          dcl 11-197
cobol_$allo1_max                       external static fixed bin(17,0)          dcl 11-170
cobol_$allo1_ptr                       external static pointer                  dcl 11-66
cobol_$alter_flag                      external static fixed bin(17,0)          dcl 11-134
cobol_$alter_index                     external static fixed bin(17,0)          dcl 11-152
cobol_$alter_list_ptr                  external static pointer                  dcl 11-38
cobol_$cd_cnt                          external static fixed bin(17,0)          dcl 11-196
cobol_$cobol_data_wd_off               external static fixed bin(17,0)          dcl 11-118
cobol_$compile_count                   external static fixed bin(17,0)          dcl 11-142
cobol_$coms_charcnt                    external static fixed bin(17,0)          dcl 11-188
cobol_$coms_wdoff                      external static fixed bin(17,0)          dcl 11-202
cobol_$con_end_ptr                     external static pointer                  dcl 11-10
cobol_$con_wd_off                      external static fixed bin(17,0)          dcl 11-92
cobol_$cons_charcnt                    external static fixed bin(17,0)          dcl 11-192
cobol_$constant_offset                 external static fixed bin(17,0)          dcl 11-156
cobol_$data_init_flag                  external static fixed bin(17,0)          dcl 11-130
cobol_$date_compiled_sw                external static fixed bin(17,0)          dcl 11-180
cobol_$debug_enable                    external static fixed bin(17,0)          dcl 11-174
cobol_$def_base_ptr                    external static pointer                  dcl 11-12
cobol_$def_max                         external static fixed bin(17,0)          dcl 11-96
cobol_$def_wd_off                      external static fixed bin(17,0)          dcl 11-94
cobol_$diag_ptr                        external static pointer                  dcl 11-70
cobol_$eln_max                         external static fixed bin(17,0)          dcl 11-172
cobol_$eln_ptr                         external static pointer                  dcl 11-68
cobol_$fixup_max                       external static fixed bin(17,0)          dcl 11-164
cobol_$fixup_ptr                       external static pointer                  dcl 11-30
cobol_$fs_charcnt                      external static fixed bin(17,0)          dcl 11-184
cobol_$fs_wdoff                        external static fixed bin(17,0)          dcl 11-198
cobol_$include_cnt                     external static fixed bin(17,0)          dcl 11-182
cobol_$include_info_ptr                external static pointer                  dcl 11-86
cobol_$init_stack_off                  external static fixed bin(17,0)          dcl 11-124
cobol_$initval_base_ptr                external static pointer                  dcl 11-32
cobol_$initval_file_ptr                external static pointer                  dcl 11-34
cobol_$initval_flag                    external static fixed bin(17,0)          dcl 11-178
cobol_$link_base_ptr                   external static pointer                  dcl 11-14
cobol_$link_max                        external static fixed bin(17,0)          dcl 11-100
cobol_$link_wd_off                     external static fixed bin(17,0)          dcl 11-98
cobol_$list_off                        external static fixed bin(17,0)          dcl 11-154
cobol_$list_ptr                        external static pointer                  dcl 11-64
cobol_$ls_charcnt                      external static fixed bin(17,0)          dcl 11-190
cobol_$main_pcs_ptr                    external static pointer                  dcl 11-84
cobol_$map_data_max                    external static fixed bin(17,0)          dcl 11-162
cobol_$map_data_ptr                    external static pointer                  dcl 11-54
cobol_$max_stack_off                   external static fixed bin(17,0)          dcl 11-122
cobol_$minpral5_ptr                    external static pointer                  dcl 11-50
cobol_$misc_base_ptr                   external static pointer                  dcl 11-60
cobol_$misc_end_ptr                    external static pointer                  dcl 11-62
cobol_$misc_max                        external static fixed bin(17,0)          dcl 11-158
cobol_$non_source_offset               external static fixed bin(17,0)          dcl 11-176
cobol_$ntbuf_ptr                       external static pointer                  dcl 11-82
cobol_$obj_seg_name                    external static char(32)                 dcl 11-208
cobol_$op_con_ptr                      external static pointer                  dcl 11-80
cobol_$para_eop_flag                   external static fixed bin(17,0)          dcl 11-138
cobol_$pd_map_index                    external static fixed bin(17,0)          dcl 11-116
cobol_$pd_map_max                      external static fixed bin(17,0)          dcl 11-160
cobol_$pd_map_ptr                      external static pointer                  dcl 11-28
cobol_$pd_map_sw                       external static fixed bin(17,0)          dcl 11-126
cobol_$perform_list_ptr                external static pointer                  dcl 11-36
cobol_$perform_para_index              external static fixed bin(17,0)          dcl 11-148
cobol_$perform_sect_index              external static fixed bin(17,0)          dcl 11-150
cobol_$priority_no                     external static fixed bin(17,0)          dcl 11-140
cobol_$ptr_assumption_ind              external static fixed bin(17,0)          dcl 11-144
cobol_$ptr_status_ptr                  external static pointer                  dcl 11-56
cobol_$reg_assumption_ind              external static fixed bin(17,0)          dcl 11-146
cobol_$reg_status_ptr                  external static pointer                  dcl 11-58
cobol_$reloc_def_base_ptr              external static pointer                  dcl 11-20
cobol_$reloc_def_max                   external static fixed bin(24,0)          dcl 11-108
cobol_$reloc_link_base_ptr             external static pointer                  dcl 11-22
cobol_$reloc_link_max                  external static fixed bin(24,0)          dcl 11-110
cobol_$reloc_sym_base_ptr              external static pointer                  dcl 11-24
cobol_$reloc_sym_max                   external static fixed bin(24,0)          dcl 11-112
cobol_$reloc_text_base_ptr             external static pointer                  dcl 11-18
cobol_$reloc_text_max                  external static fixed bin(24,0)          dcl 11-106
cobol_$reloc_work_base_ptr             external static pointer                  dcl 11-26
cobol_$reloc_work_max                  external static fixed bin(24,0)          dcl 11-114
cobol_$reswd_ptr                       external static pointer                  dcl 11-78
cobol_$same_sort_merge_proc            external static bit(1)                   dcl 11-214
cobol_$scratch_dir                     external static char(168)                dcl 11-206
cobol_$sect_eop_flag                   external static fixed bin(17,0)          dcl 11-136
cobol_$seg_init_flag                   external static fixed bin(17,0)          dcl 11-132
cobol_$seg_init_list_ptr               external static pointer                  dcl 11-40
cobol_$stack_off                       external static fixed bin(17,0)          dcl 11-120
cobol_$statement_info_ptr              external static pointer                  dcl 11-76
cobol_$sym_base_ptr                    external static pointer                  dcl 11-16
cobol_$sym_max                         external static fixed bin(17,0)          dcl 11-104
cobol_$sym_wd_off                      external static fixed bin(17,0)          dcl 11-102
cobol_$tag_table_max                   external static fixed bin(17,0)          dcl 11-166
cobol_$tag_table_ptr                   external static pointer                  dcl 11-52
cobol_$temp_token_area_ptr             external static pointer                  dcl 11-42
cobol_$temp_token_max                  external static fixed bin(17,0)          dcl 11-168
cobol_$temp_token_ptr                  external static pointer                  dcl 11-44
cobol_$text_base_ptr                   external static pointer                  dcl 11-8
cobol_$text_wd_off                     external static fixed bin(17,0)          dcl 11-90
cobol_$token_block1_ptr                external static pointer                  dcl 11-46
cobol_$token_block2_ptr                external static pointer                  dcl 11-48
cobol_$value_cnt                       external static fixed bin(17,0)          dcl 11-194
cobol_$ws_charcnt                      external static fixed bin(17,0)          dcl 11-186
cobol_$ws_wdoff                        external static fixed bin(17,0)          dcl 11-200
cobol_$xref_bypass                     external static bit(1)                   dcl 11-212
cobol_$xref_chain_ptr                  external static pointer                  dcl 11-74
cobol_$xref_token_ptr                  external static pointer                  dcl 11-72
cobol_data_wd_off                      defined         fixed bin(17,0)          dcl 11-119
cobol_file_util$open            000000 constant        entry                    external dcl 3-36
cobol_open_util$set_fsb         000000 constant        entry                    external dcl 3-37
compile_count                          defined         fixed bin(17,0)          dcl 11-143
coms_charcnt                           defined         fixed bin(17,0)          dcl 11-189
coms_wdoff                             defined         fixed bin(17,0)          dcl 11-203
con_end_ptr                            defined         pointer                  dcl 11-11
con_wd_off                             defined         fixed bin(17,0)          dcl 11-93
cons_charcnt                           defined         fixed bin(17,0)          dcl 11-193
constant_offset                        defined         fixed bin(17,0)          dcl 11-157
data_init_flag                         defined         fixed bin(17,0)          dcl 11-131
date_compiled_sw                       defined         fixed bin(17,0)          dcl 11-181
debug_enable                           defined         fixed bin(17,0)          dcl 11-175
def_base_ptr                           defined         pointer                  dcl 11-13
def_max                                defined         fixed bin(17,0)          dcl 11-97
def_wd_off                             defined         fixed bin(17,0)          dcl 11-95
diag_ptr                               defined         pointer                  dcl 11-71
eln_max                                defined         fixed bin(17,0)          dcl 11-173
eln_ptr                                defined         pointer                  dcl 11-69
fixed                                                  builtin function         dcl 3-44
fixup_max                              defined         fixed bin(17,0)          dcl 11-165
fixup_ptr                              defined         pointer                  dcl 11-31
fs_charcnt                             defined         fixed bin(17,0)          dcl 11-185
fs_wdoff                               defined         fixed bin(17,0)          dcl 11-199
include_cnt                            defined         fixed bin(17,0)          dcl 11-183
include_info_ptr                       defined         pointer                  dcl 11-87
index                                                  builtin function         dcl 3-44
init_stack_off                         defined         fixed bin(17,0)          dcl 11-125
initval_base_ptr                       defined         pointer                  dcl 11-33
initval_file_ptr                       defined         pointer                  dcl 11-35
initval_flag                           defined         fixed bin(17,0)          dcl 11-179
length                                                 builtin function         dcl 3-44
link_base_ptr                          defined         pointer                  dcl 11-15
link_max                               defined         fixed bin(17,0)          dcl 11-101
link_wd_off                            defined         fixed bin(17,0)          dcl 11-99
list_off                               defined         fixed bin(17,0)          dcl 11-155
list_ptr                               defined         pointer                  dcl 11-65
ls_charcnt                             defined         fixed bin(17,0)          dcl 11-191
main_pcs_ptr                           defined         pointer                  dcl 11-85
map_data_max                           defined         fixed bin(17,0)          dcl 11-163
map_data_ptr                           defined         pointer                  dcl 11-55
max_stack_off                          defined         fixed bin(17,0)          dcl 11-123
mcode_off                              internal static fixed bin(17,0)          initial dcl 3-18
minpral5_ptr                           defined         pointer                  dcl 11-51
misc_base_ptr                          defined         pointer                  dcl 11-61
misc_end_ptr                           defined         pointer                  dcl 11-63
misc_max                               defined         fixed bin(17,0)          dcl 11-159
mod                                                    builtin function         dcl 3-44
name_ptr                               automatic       pointer                  dcl 53
next_tag                               defined         fixed bin(17,0)          dcl 11-129
non_source_offset                      defined         fixed bin(17,0)          dcl 11-177
ntbuf_ptr                              defined         pointer                  dcl 11-83
obj_seg_name                           defined         char(32)                 dcl 11-209
op_con_ptr                             defined         pointer                  dcl 11-81
para_eop_flag                          defined         fixed bin(17,0)          dcl 11-139
pd_map_index                           defined         fixed bin(17,0)          dcl 11-117
pd_map_max                             defined         fixed bin(17,0)          dcl 11-161
pd_map_ptr                             defined         pointer                  dcl 11-29
pd_map_sw                              defined         fixed bin(17,0)          dcl 11-127
perform_list_ptr                       defined         pointer                  dcl 11-37
perform_para_index                     defined         fixed bin(17,0)          dcl 11-149
perform_sect_index                     defined         fixed bin(17,0)          dcl 11-151
priority_no                            defined         fixed bin(17,0)          dcl 11-141
ptr_assumption_ind                     defined         fixed bin(17,0)          dcl 11-145
ptr_status_ptr                         defined         pointer                  dcl 11-57
reg_assumption_ind                     defined         fixed bin(17,0)          dcl 11-147
reg_status_ptr                         defined         pointer                  dcl 11-59
rel                                                    builtin function         dcl 3-44
reloc_def_base_ptr                     defined         pointer                  dcl 11-21
reloc_def_max                          defined         fixed bin(24,0)          dcl 11-109
reloc_link_base_ptr                    defined         pointer                  dcl 11-23
reloc_link_max                         defined         fixed bin(24,0)          dcl 11-111
reloc_sym_base_ptr                     defined         pointer                  dcl 11-25
reloc_sym_max                          defined         fixed bin(24,0)          dcl 11-113
reloc_text_base_ptr                    defined         pointer                  dcl 11-19
reloc_text_max                         defined         fixed bin(24,0)          dcl 11-107
reloc_work_base_ptr                    defined         pointer                  dcl 11-27
reloc_work_max                         defined         fixed bin(24,0)          dcl 11-115
reserved_word                          based           structure                level 1 unaligned dcl 9-14
reswd_ptr                              defined         pointer                  dcl 11-79
rw_ptr                                 automatic       pointer                  dcl 9-11
same_sort_merge_proc                   defined         bit(1)                   dcl 11-215
scratch_dir                            defined         char(168)                dcl 11-207
sect_eop_flag                          defined         fixed bin(17,0)          dcl 11-137
seg_init_flag                          defined         fixed bin(17,0)          dcl 11-133
seg_init_list_ptr                      defined         pointer                  dcl 11-41
stack_off                              defined         fixed bin(17,0)          dcl 11-121
statement_info_ptr                     defined         pointer                  dcl 11-77
string                                                 builtin function         dcl 3-44
sym_base_ptr                           defined         pointer                  dcl 11-17
sym_max                                defined         fixed bin(17,0)          dcl 11-105
sym_wd_off                             defined         fixed bin(17,0)          dcl 11-103
tag_table_max                          defined         fixed bin(17,0)          dcl 11-167
tag_table_ptr                          defined         pointer                  dcl 11-53
temp_token_area_ptr                    defined         pointer                  dcl 11-43
temp_token_max                         defined         fixed bin(17,0)          dcl 11-169
temp_token_ptr                         defined         pointer                  dcl 11-45
text_base_ptr                          defined         pointer                  dcl 11-9
text_wd_off                            defined         fixed bin(17,0)          dcl 11-91
token_block1_ptr                       defined         pointer                  dcl 11-47
token_block2_ptr                       defined         pointer                  dcl 11-49
value_cnt                              defined         fixed bin(17,0)          dcl 11-195
ws_charcnt                             defined         fixed bin(17,0)          dcl 11-187
ws_wdoff                               defined         fixed bin(17,0)          dcl 11-201
xref_bypass                            defined         bit(1)                   dcl 11-213
xref_chain_ptr                         defined         pointer                  dcl 11-75
xref_token_ptr                         defined         pointer                  dcl 11-73

NAMES DECLARED BY EXPLICIT CONTEXT.
cobol_close_gen                 000007 constant        entry                    external dcl 26
start                           000014 constant        label                    dcl 61
start_codegen                   000102 constant        label                    dcl 84

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       560         634     365         570
Length      1256     365        54         405     173          12

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cobol_close_gen                      94 external procedure  is an external procedure.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 ioerror                     cobol_close_gen
000020 epp2                        cobol_close_gen

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cobol_close_gen          000100 good_tag                    cobol_close_gen
                         000102 ioerror_ptr                 cobol_close_gen
                         000104 ft_ptr                      cobol_close_gen
                         000106 aloff                       cobol_close_gen
                         000107 stoff                       cobol_close_gen
                         000110 eos_ptr                     cobol_close_gen

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cobol_alloc$stack             cobol_call_op                 cobol_define_tag              cobol_emit
cobol_gen_ioerror             cobol_gen_ioerror$finish_up   cobol_io_util$file_desc       cobol_ioop_util$set_lock
cobol_ioop_util$set_stz       cobol_read_ft                 cobol_reg_manager$after_op    cobol_set_fsbptr

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
cobol_$next_tag




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     26 000004        61 000014        63 000021        64 000023        65 000026        66 000031        68 000033
     69 000035        70 000037        71 000040        73 000041        75 000054        79 000064        84 000102
     87 000107        89 000116        92 000125        95 000131        97 000150        99 000156       101 000176
    102 000211       103 000212       107 000232       109 000245       111 000247       113 000257       116 000266
    119 000274       121 000303       122 000312       125 000326       128 000341       131 000353       133 000364


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
