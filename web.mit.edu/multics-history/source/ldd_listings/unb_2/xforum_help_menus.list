	COMPILATION LISTING OF SEGMENT xforum_help_menus
	Compiled by: Multics PL/I Compiler, Release 28e, of February 14, 1985
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 04/24/86  1531.2 mst Thu
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Information Systems Inc., 1985 *
        4*        *                                                         *
        5*        *********************************************************** */
        6 
        7 
        8 /****^  HISTORY COMMENTS:
        9*  1) change(85-02-06,Davids), approve(86-02-04,MCR7350),
       10*     audit(86-04-24,Gilcrease), install(86-04-24,MR12.0-1048):
       11*     Extracted from the xforum_main_options module.
       12*     
       13*     85-02-13 Davids: Changed name to xforum_getting_started_menu
       14*     
       15*     85-02-13 Davids: Changed calling sequence of
       16*     xforum_help_line_$push to include the new F3_message argument.
       17*     
       18*     85-02-14 Davids: Rearranged the code to add the
       19*     general_help_topics and getting_started entry points and the do_it
       20*     internal proc.  The do_it proc is basically the original code with
       21*     changes to handle both menus.  Added ability to use F2 and F3 to
       22*     exit the menu.
       23*     
       24*     85-02-26 Davids: Replaced the calls to ioa_ to output the getting
       25*     started introduction with a call to xforum_help_$display.  The
       26*     introductory text has been added to the xforum_getting_started
       27*     info file.
       28*     
       29*     85-04-17 Davids: Added the text " g:Return to XXX menu" to the
       30*     help line where XXX is the name of the previous menu.  Its the
       31*     same text as the menu option.
       32*     
       33*     85-06-27 Davids: Commented declarations and updated header comments.
       34*                                                   END HISTORY COMMENTS */
       35 
       36 xforum_help_menus: proc;
       37 
       38 /*
       39*   BEGIN DESCRIPTION
       40*
       41*   function:
       42*      This module manages the getting_started and general_help_topics menus.
       43*      It displays them, processes user choices, and destroys them when done.
       44*
       45*   description of entry points:
       46*      xforum_help_menus:
       47*         input:
       48*         output:
       49*         It is an error to call the main entry point. The xforum_fatal_error
       50*         condition will be signaled with an "internal programming error" error
       51*         message.
       52*
       53*      getting_started:
       54*         input:   ptr                  pointer to spy structure
       55*                  ptr                  pointer to area xforum uses to allocate
       56*                                       things in
       57*         output:
       58*         This entry fills in the choice array with the getting_started menu
       59*         choices and then calls the internal proc do_it. The prameters of
       60*         do_it define the rest of the info to define the getting_started menu.
       61*         There is only one possible menu that can be used to get to the
       62*         getting_started menu so there is no need to pass this entry the
       63*         name of the previous menu.
       64*
       65*      general_help_topics:
       66*         input:   ptr                 pointer to spy structure
       67*                  ptr                 pointer to area xforum uses to allocate
       68*                                      things in
       69*                  char (*)            name of menu that is currently displayed
       70*         output:
       71*         This entry fills in the choice array with the general_help_topics menu
       72*         choices and then calls the internal proc do_it. The prameters of
       73*         do_it define the rest of the info to define the general_help_topics
       74*         menu.
       75*
       76*   description of internal procedures:
       77*      do_it: This procedure creates the menu, updates the contents of the
       78*      status window with the menu title, displays the menu and pushes a new
       79*      help line. If the menu being displayed is the getting started menu
       80*      is also displays the Xforum introduction below the menu.  It then
       81*      gets user choices, displays the appropriate help text, and destroys the
       82*      menu and pops the help line before returning. The user can exit via the
       83*      last menu option or via the first or third function keys. The help
       84*      function is available as are quit, redisplay and multics mode (if the
       85*      user's profile allows it). A quit condition handler is set up to trap
       86*      quits and redisplay the menu. An xforum_redisplay_menu condition is
       87*      set up to actually redisplay the menu. The user's responses are recorded
       88*      in the spy structure (including quits).
       89*
       90*      collect_spy_data: Similar to all the other collect_spy_data procedures.
       91*      See the xforum module. Note that this procedure is duplicated so as to
       92*      save the expense of an external call for a commonly executed, very short
       93*      program, whose output is used only during development or special site
       94*      exposure.
       95*
       96*      error: Similar to all other error procedures. It records in an internal
       97*      static structure the details of an error and then signals the
       98*      xforum_fatal_error condition.
       99*END DESCRIPTION
      100**/
      101 
      102 /* PARAMETERS */
      103 
      104 /* EXTERNAL STATIC */
      105 
      106 /* ENTRIES */
      107 
      108 	dcl     signal_		 entry () options (variable);
      109 	dcl     window_$bell	 entry (ptr, fixed bin (35));
      110 	dcl     window_$clear_window	 entry (ptr, fixed bin (35));
      111 	dcl     xforum_create_menu_	 entry ((*) char (*) var, ptr, ptr, fixed bin (35));
      112 	dcl     xforum_help_$display	 entry (char (*), char (*));
      113 	dcl     xforum_help_$get_help	 entry (ptr, char (*), (*) char (*) var, ptr, ptr);
      114 	dcl     xforum_help_line_$pop	 entry options (variable);
      115 	dcl     xforum_help_line_$push entry (bit (8), char (*), char (*), char (*));
      116 	dcl     xforum_multics_mode	 entry (fixed bin);
      117 	dcl     xforum_redisplay_	 entry options (variable);
      118 	dcl     xforum_status_$redisplay entry (fixed bin (35));
      119 	dcl     xforum_status_$update_banner entry (char (*));
      120 	dcl     xforum_status_$update_title entry (char (*));
      121 	dcl     xforum_user_profile$get_multics_mode entry () returns (bit (1));
      122 	dcl     xforum_window_mgr$check_window_status entry options (variable);
      123 	dcl     xforum_window_mgr$menu_display entry (ptr);
      124 	dcl     xforum_window_mgr$menu_get_choice entry (ptr, bit (1) aligned, fixed bin);
      125 	dcl     xforum_window_mgr$resynch_windows entry (fixed bin, bit (1));
      126 
      127 /* CONDITIONS */
      128 
      129 	dcl     exit_executive_forum	 condition;
      130 	dcl     quit		 condition;
      131 	dcl     xforum_redisplay_menu	 condition;
      132 
      133 /* INTERNAL AUTOMATIC */
      134 
      135 	dcl     xhm_choices		 (16) char (40) varying;
      136 						/* array to contain the text of the */
      137 						/* menu options. Both menus have 16 options */
      138 
      139 /* INTERNAL STATIC */
      140 
      141 	dcl     01 xhm_xforum_error_info like xforum_error_info;
      142 						/* used to record error info to be output to the user */
      143 
      144 /* CONSTANTS */
      145 
      146 	dcl     xhm_MENU_HEIGHT	 fixed bin init (9) internal static options (constant);
      147 						/* number of lines required for the display of both menus */
      148 						/* eight for options, 1 for line of dashes at bottom */
      149 
      150 /* BUILTINS */
      151 
      152 	dcl     addr		 builtin;
      153 	dcl     char		 builtin;
      154 	dcl     ltrim		 builtin;
      155 	dcl     null		 builtin;
      156 	dcl     rtrim		 builtin;
      157 	dcl     translate		 builtin;
      158 
      159 /* INCLUDE FILES */
      160 
  1     1 /* BEGIN INCLUDE FILE menu_dcls.incl.pl1
  1     2*   declarations for the menu_ subroutines MTB 493
  1     3*   James R. Davis 26 Jan 81  to 20 Februrary 81
  1     4**/
  1     5 
  1     6 /* format: off */
  1     7 
  1     8 dcl menu_$create      entry (
  1     9 	(*) char (*) varying,			/* input: choices */
  1    10 	(*) char (*) varying,			/* input: headers */
  1    11 	(*) char (*) varying,			/* input: trailers */
  1    12 	pointer,					/* input: to format info */
  1    13 	(*) char (1) unal,				/* input: keys to use */
  1    14 	pointer,					/* input: to area */
  1    15 	pointer,					/* input: to needs str. */
  1    16 	pointer,					/* to menu: output */
  1    17 	fixed bin (35)				/* code */
  1    18 			      );
  1    19 
  1    20 dcl menu_$display entry (
  1    21 	pointer,					/* window */
  1    22 	pointer,					/* menu */
  1    23 	fixed bin (35)				/* code */
  1    24 			      );
  1    25 
  1    26 dcl menu_$get_choice entry (
  1    27 	pointer,					/* window */
  1    28 	pointer,					/* menu */
  1    29 	pointer,					/* to function key info */
  1    30 	bit (1) aligned,				/* function key hi: output */
  1    31 	fixed bin,				/* output: selection number */
  1    32 	fixed bin (35)				/* output: code */
  1    33 			      );
  1    34 
  1    35 dcl menu_$describe entry (
  1    36           pointer,					/* menu */
  1    37 	pointer,					/* needs */
  1    38 	fixed bin (35)				/* code */
  1    39 	                          );
  1    40 
  1    41 dcl menu_$destroy entry (
  1    42           pointer,					/* menu */
  1    43 	fixed bin (35)				/* code */
  1    44                                     );
  1    45 
  1    46 dcl menu_$store entry (
  1    47 	character (*),
  1    48 	character (*),
  1    49 	character (*),
  1    50 	bit (1) aligned,
  1    51 	pointer,
  1    52 	fixed bin (35));
  1    53 
  1    54 dcl menu_$retrieve entry (
  1    55 	character (*),
  1    56 	character (*),
  1    57 	character (*),
  1    58 	pointer,
  1    59 	pointer,
  1    60 	fixed bin (35));
  1    61 dcl  menu_$delete entry (
  1    62 	character (*),
  1    63 	character (*),
  1    64 	character (*),
  1    65 	fixed binary (35));
  1    66 
  1    67 dcl  menu_$list entry (
  1    68 	character (*),
  1    69 	character (*),
  1    70 	character (*),
  1    71 	pointer,
  1    72 	fixed bin,
  1    73 	pointer,
  1    74 	fixed bin (35));
  1    75 
  1    76      dcl	   1 menu_format	      aligned based (menu_format_ptr),
  1    77 	     2 version	      fixed bin,
  1    78 	     2 constraints,
  1    79 	       3 max_width	      fixed bin,
  1    80 	       3 max_height	      fixed bin,
  1    81 	     2 n_columns	      fixed bin,
  1    82 	     2 flags,
  1    83 	       3 center_headers   bit (1) unal,
  1    84 	       3 center_trailers  bit (1) unal,
  1    85 	       3 pad	      bit (34) unal,
  1    86 	     2 pad_char	      char (1);
  1    87 
  1    88      dcl	   1 menu_requirements    aligned based (menu_requirements_ptr),
  1    89 	     2 version	      fixed bin,
  1    90 	     2 lines_needed	      fixed bin,
  1    91 	     2 width_needed	      fixed bin,
  1    92 	     2 n_options	      fixed bin;
  1    93 
  1    94      dcl	   menu_format_ptr	      pointer;
  1    95      dcl	   menu_requirements_ptr  pointer;
  1    96 
  1    97      dcl	   (menu_format_version_1, menu_requirements_version_1)
  1    98 			      fixed bin internal static init (1) options (constant);
  1    99 
  1   100      dcl	   MENU_OPTION_KEYS	      (35) char (1) unal internal static
  1   101 			      options (constant) init
  1   102 	("1", "2", "3", "4", "5", "6", "7", "8", "9",
  1   103 	"A", "B", "C", "D", "E", "F", "G", "H", "I",
  1   104 	"J", "K", "L", "M", "N", "O", "P", "Q", "R",
  1   105 	"S", "T", "U", "V", "W", "X", "Y", "Z");
  1   106 
  1   107 /* END INCLUDE FILE ... menu_dcls.incl.pl1 */
      161 
      162 
  2     1 /* BEGIN INCLUDE FILE     xforum_error_info      84-06-19 Davids */
  2     2 
  2     3 dcl 01 xforum_error_info based,
  2     4      02 name char (32),
  2     5      02 entry char (32),
  2     6      02 doing char (100),
  2     7      02 code fixed bin (35),
  2     8      02 reason char (512);
  2     9 
  2    10 /* END INCLUDE FILE     xforum_error_info */
      163 
      164 
  3     1 /* BEGIN INCLUDE FILE     xforum_spy     84-06-19 NSDavids */
  3     2 
  3     3 
  3     4 
  3     5 /****^  HISTORY COMMENTS:
  3     6*  1) change(85-01-01,Davids), approve(85-01-01,MCR7350),
  3     7*     audit(86-04-24,Gilcrease), install(86-04-24,MR12.0-1048):
  3     8*     Modified to include personalization and subject selection.
  3     9*                                                   END HISTORY COMMENTS */
  3    10 
  3    11 
  3    12 dcl 01 spy based (spy_ptr),
  3    13      02 version char (8),
  3    14      02 user_name char (32),
  3    15      02 date_time char (32),
  3    16      02 args char (80),
  3    17      02 eligible fixed bin,
  3    18      02 attending fixed bin,
  3    19      02 changed fixed bin,
  3    20      02 count fixed bin,
  3    21      02 choices (0 refer (count)),
  3    22       03 at fixed bin,
  3    23       03 choice char (10);
  3    24 
  3    25 
  3    26 dcl spy_ptr ptr;
  3    27 dcl SPY_VERSION_1 char (8) init ("spy_0001");
  3    28 
  3    29 dcl SPY_AT_1 fixed bin init (1) internal static options (constant);
  3    30 	/* At Executive Forum Main menu */
  3    31 dcl SPY_AT_2 fixed bin init (2) internal static options (constant);
  3    32 	/* Requesting Help */
  3    33 dcl SPY_AT_3 fixed bin init (3) internal static options (constant);
  3    34 	/* At General Help menu */
  3    35 dcl SPY_AT_4 fixed bin init (4) internal static options (constant);
  3    36 	/* At query for a meeting name to goto */
  3    37 dcl SPY_AT_5 fixed bin init (5) internal static options (constant);
  3    38 	/* At menu of meeting names */
  3    39 dcl SPY_AT_6 fixed bin init (6) internal static options (constant);
  3    40 	/* At query for a meeting name to resign from */
  3    41 dcl SPY_AT_7 fixed bin init (7) internal static options (constant);
  3    42 	/* At Attending Meeting menu */
  3    43 dcl SPY_AT_8 fixed bin init (8) internal static options (constant);
  3    44 	/* At replying to a transaction */
  3    45 dcl SPY_AT_9 fixed bin init (9) internal static options (constant);
  3    46 	/* At entering a new transaction */
  3    47 dcl SPY_AT_10 fixed bin init (10) internal static options (constant);
  3    48 	/* At query for a transaction specifier */
  3    49 dcl SPY_AT_11 fixed bin init (11) internal static options (constant);
  3    50           /* At query to check for changed meetings */
  3    51 dcl SPY_AT_12 fixed bin init (12) internal static options (constant);
  3    52 	/* At Getting Started menu */
  3    53 dcl SPY_AT_13 fixed bin init (13) internal static options (constant);
  3    54           /* Meeting list update query, change in number of search paths */
  3    55 dcl SPY_AT_14 fixed bin init (14) internal static options (constant);
  3    56           /* Meeting list update query, change in search paths listed */
  3    57 dcl SPY_AT_15 fixed bin init (15) internal static options (constant);
  3    58           /* Copy Comments file name query */
  3    59 dcl SPY_AT_16 fixed bin init (16) internal static options (constant);
  3    60 	/* At Personalization menu */
  3    61 dcl SPY_AT_17 fixed bin init (17) internal static options (constant);
  3    62 	/* Personalizing an item prompt */
  3    63 dcl SPY_AT_18 fixed bin init (18) internal static options (constant);
  3    64           /* string search prompt for comment selection */
  3    65 dcl SPY_AT_19 fixed bin init (19) internal static options (constant);
  3    66 	/* subject selection */
  3    67 
  3    68 dcl SPY_LOCATION (19) char (20) varying init (
  3    69 	"XForum Main menu",
  3    70 	"Requesting Help",
  3    71 	"General Help menu",
  3    72 	"Meeting to goto?",
  3    73 	"Meeting names menu",
  3    74 	"Meeting to resign?",
  3    75 	"Meeting menu",
  3    76 	"Repling",
  3    77 	"Talking",
  3    78 	"Trans. spec?",
  3    79           "Check changed mtgs",
  3    80 	"Getting Started",
  3    81           "List update, num",
  3    82           "List update, list",
  3    83 	"Copy to file name",
  3    84 	"Personalizing menu",
  3    85 	"Personalizing prompt",
  3    86           "String search prompt",
  3    87           "Subject selection") internal static options (constant);
  3    88 	
  3    89 /* END INCLUDE FILE     xforum_spy */
      165 
      166 
  4     1 /*  START OF:	xforum_windows.incl.pl1		  *  *  *  *  * */
  4     2 
  4     3 /* structures for windows used by xforum - Deryk Barker January 1984 */
  4     4 
  4     5 dcl      1 xforum_windows aligned external static,
  4     6 	 2 (status, menu, bottom, orig_user_io, help_line) aligned like xforum_window_info;
  4     7 	 
  4     8 dcl      1 xforum_window_info,
  4     9 	 2 iocb      ptr,
  4    10 	 2 position  aligned like window_position_info;
  4    11 	 
  5     1 /* BEGIN INCLUDE FILE ... window_control_info.incl.pl1 JRD  */
  5     2 /* format: style3 */
  5     3 
  5     4 /* Modified 26 January 1982 by William York to add the set_more_handler
  5     5*   and reset_more_handler control orders. */
  5     6 /* Modified October 1982 by WMY to add set and get_token_characters,
  5     7*   set and get_more_prompt. */
  5     8 /* Modified February 1983 by WMY to add the line_editor_key_binding_info
  5     9*   structure. */
  5    10 /* Modified 30 September 1983 by Jon A. Rochlis to add the origin.column for
  5    11*   partial screen width windows. */
  5    12 /* Modified 9 October 1983 by JR to add version 1 window_edit_line_info. 
  5    13*   This should be removed when window_info.incl.pl1 is created. */
  5    14 /* Modified 29 February 1984 by Barmar to add version 1 
  5    15*   get_editor_key_bindings_info. */
  5    16 /* Modified 1 March 1984 by Barmar to add version 1 
  5    17*   set_editor_key_bindings_info. */
  5    18 /* Modified 2 March 1984 by Barmar to upgrade to version 3
  5    19*   line_editor_key_bindings_info, which includes the name, description, and
  5    20*   info path */
  5    21 
  5    22 /* structure for the set_window_info and get_window_info
  5    23*   control orders. */
  5    24 
  5    25 dcl	1 window_position_info
  5    26 			based (window_position_info_ptr),
  5    27 	  2 version	fixed bin,
  5    28 	  2 origin,
  5    29 	    3 column	fixed bin,
  5    30 	    3 line	fixed bin,
  5    31 	  2 extent,
  5    32 	    3 width	fixed bin,
  5    33 	    3 height	fixed bin;
  5    34 
  5    35 dcl	(window_position_info_version, window_position_info_version_1)
  5    36 			fixed bin internal static init (1) options (constant);
  5    37 dcl	window_position_info_ptr
  5    38 			pointer;
  5    39 
  5    40 /* structure for the set_window_status and get_window_status
  5    41*   control orders */
  5    42 
  5    43 declare	window_status_info_ptr
  5    44 			pointer;
  5    45 declare	1 window_status_info
  5    46 			aligned based (window_status_info_ptr),
  5    47 	  2 version	fixed bin,
  5    48 	  2 status_string	bit (36) aligned;		/* string (window_status) */
  5    49 /* see window_status.incl.pl1 for the contents of this string */
  5    50 
  5    51 
  5    52 declare	(window_status_version, window_status_version_1)
  5    53 			fixed bin internal static init (1) options (constant);
  5    54 
  5    55 /* info structure for the set_more_responses and get_more_responses control 
  5    56*   orders */
  5    57 
  5    58 
  5    59 dcl	1 more_responses_info
  5    60 			aligned based (more_responses_info_ptr),
  5    61 	  2 version	fixed bin,
  5    62 	  2 n_yeses	fixed bin, /* how many valid characters in the strings below */
  5    63 	  2 n_noes	fixed bin,
  5    64 	  2 yeses		char (32) unaligned,
  5    65 	  2 noes		char (32) unaligned;
  5    66 
  5    67 dcl	(more_responses_info_version_1, more_responses_version)
  5    68 			fixed bin internal static init (1) options (constant);
  5    69 dcl	more_responses_info_ptr
  5    70 			pointer;
  5    71 
  5    72 /* structure for the set_break_table and get_break_table
  5    73*   control orders */
  5    74 
  5    75 declare	break_table_ptr	pointer;
  5    76 declare	1 break_table_info	aligned based (break_table_ptr),
  5    77 	  2 version	fixed bin,
  5    78 	  2 breaks	(0:127) bit (1) unaligned;
  5    79 
  5    80 declare	(break_table_info_version, break_table_info_version_1)
  5    81 			fixed bin init (1) internal static options (constant);
  5    82 
  5    83 declare	1 more_handler_info aligned based (more_handler_info_ptr),
  5    84 	  2 version	fixed bin,
  5    85 	  2 flags		unaligned,
  5    86 	    3 old_handler_valid
  5    87 			bit(1),
  5    88 	    3 pad		bit(35),
  5    89 	  2 more_handler	entry (pointer, bit(1) aligned),
  5    90 	  2 old_more_handler entry (pointer, bit(1) aligned);
  5    91 
  5    92 declare	more_handler_info_ptr pointer;
  5    93 
  5    94 declare	(more_handler_info_version, more_handler_info_version_3)
  5    95 			fixed bin internal static options (constant) init (3);
  5    96 			
  5    97 declare   1 token_characters_info aligned based (token_characters_info_ptr),
  5    98 	  2 version	char(8),
  5    99 	  2 token_character_count
  5   100 			fixed bin,
  5   101 	  2 token_characters
  5   102 			char (128) unaligned;
  5   103 
  5   104 declare   token_characters_info_ptr pointer;
  5   105 
  5   106 declare   token_characters_info_version_1 char(8) internal static options (constant) init ("wtci0001");
  5   107 
  5   108 declare   1 more_prompt_info	aligned based (more_prompt_info_ptr),
  5   109 	  2 version	char(8),
  5   110 	  2 more_prompt	char(80);
  5   111 
  5   112 declare   more_prompt_info_ptr pointer;
  5   113 
  5   114 declare   more_prompt_info_version_1 char(8) static options (constant) init ("wsmp0001");
  5   115 
  5   116 /* Line editor stuff ... */
  5   117 
  5   118 dcl  line_editor_key_binding_info_ptr
  5   119 			pointer;
  5   120 
  5   121 dcl  line_editor_binding_count
  5   122 			fixed bin;
  5   123 dcl  line_editor_longest_sequence
  5   124 			fixed bin;
  5   125 /* For each binding, action defines what to do for that sequence. Constants
  5   126*   are defined in window_editor_values.incl.pl1. Only if action is set to
  5   127*   EXTERNAL_ROUTINE does the editor_routine entry variable get examined. */
  5   128 
  5   129 dcl  1 line_editor_key_binding_info
  5   130 			aligned based (line_editor_key_binding_info_ptr),
  5   131        2 version		char(8),
  5   132        2 binding_count	fixed bin,
  5   133        2 longest_sequence	fixed bin,
  5   134        2 bindings		(line_editor_binding_count refer
  5   135 			(line_editor_key_binding_info.binding_count)),
  5   136          3 sequence		char(line_editor_longest_sequence refer
  5   137 			(line_editor_key_binding_info.longest_sequence)) varying,
  5   138          3 action		fixed bin,
  5   139          3 numarg_action      fixed binary,
  5   140          3 editor_routine	entry (pointer, fixed bin(35)),
  5   141          3 name		char (64) varying unaligned,
  5   142          3 description	char (256) varying unaligned,
  5   143          3 info_path	unaligned,
  5   144 	 4 info_dir	char (168),
  5   145 	 4 info_entry	char (32);
  5   146 	
  5   147 
  5   148 dcl  line_editor_key_binding_info_version_3
  5   149 			char(8) static options (constant) init ("lekbi003");
  5   150 
  5   151 dcl 1 get_editor_key_bindings_info	aligned based (get_editor_key_bindings_info_ptr),
  5   152       2 version			char (8),
  5   153       2 flags,
  5   154         3 entire_state		bit (1) unaligned,
  5   155         3 mbz			bit (35) unaligned,
  5   156       2 key_binding_info_ptr		ptr,
  5   157       2 entire_state_ptr		ptr;
  5   158 
  5   159 dcl get_editor_key_bindings_info_ptr	ptr;
  5   160 dcl get_editor_key_bindings_info_version_1 char (8) int static options (constant) init ("gekbi_01");
  5   161 
  5   162 dcl 1 set_editor_key_bindings_info	aligned
  5   163 				based (set_editor_key_bindings_info_ptr),
  5   164       2 version			char (8),
  5   165       2 flags,
  5   166         3 replace			bit (1) unaligned,
  5   167         3 update			bit (1) unaligned,
  5   168         3 mbz			bit (34) unaligned,
  5   169       2 key_binding_info_ptr		ptr;
  5   170 
  5   171 dcl set_editor_key_bindings_info_ptr	ptr;
  5   172 dcl set_editor_key_bindings_info_version_1 char (8) int static options (constant) init ("sekbi_01");
  5   173 
  5   174 /* This should be moved to window_info.incl.pl1 when that include file is
  5   175*   created.  JR 2/1/84 */
  5   176 
  5   177 dcl	1 window_edit_line_info
  5   178 			based (window_edit_line_info_ptr),
  5   179 	  2 version	char (8),
  5   180 	  2 line_ptr	ptr,
  5   181 	  2 line_length	fixed bin (21);		/* later we will hack initial cursor position, key bindings, etc. */
  5   182 
  5   183 dcl	window_edit_line_info_version_1
  5   184 			char (8) static options (constant) init ("wedl0001");
  5   185 
  5   186 dcl	window_edit_line_info_ptr
  5   187 			ptr;
  5   188 
  5   189 /* END INCLUDE FILE window_control_info.incl.pl1 */
  4    12 
  4    13 
  4    14 /*  END OF:	xforum_windows.incl.pl1		  *  *  *  *  * */
      167 
      168 
      169 	call error (0, "Internal programming error - xforum_help_menus$xforum_help_menus called.");
      170 
      171 getting_started: entry (gs_spy_ptr, gs_xforum_system_area_ptr);
      172 
      173 /* PARAMETERS */
      174 
      175 	dcl     gs_spy_ptr		 ptr;		/* (input) pointer to spy structure */
      176 	dcl     gs_xforum_system_area_ptr ptr;		/* (input) pointer to area xforum uses to allocate things in */
      177 
      178 
      179 
      180 
      181 
      182 	xhm_choices (1) = "Getting To Know Your Terminal";
      183 	xhm_choices (2) = "How To Exit Executive Forum";
      184 	xhm_choices (3) = "How To Get Help";
      185 	xhm_choices (4) = "Responding To Prompts";
      186 	xhm_choices (5) = "How To Correct Typos";
      187 	xhm_choices (6) = "Getting Around The Menus";
      188 	xhm_choices (7) = "The 2 Attending Menus";
      189 	xhm_choices (8) = "What Are Eligible Meetings";
      190 	xhm_choices (9) = "What Are Attended Meetings";
      191 	xhm_choices (10) = "What Are Changed Meetings";
      192 	xhm_choices (11) = "What Is The Current Comment";
      193 	xhm_choices (12) = "Selecting The Current Comment";
      194 	xhm_choices (13) = "Entering Comments";
      195 	xhm_choices (14) = "Personalizing The System";
      196 	xhm_choices (15) = "Multics Command Level Mode";
      197 	xhm_choices (16) = "Go To Executive Forum Menu";
      198 
      199 
      200 	call do_it (gs_spy_ptr, gs_xforum_system_area_ptr, SPY_AT_12, xhm_MENU_HEIGHT,
      201 	     "Executive Forum", "Getting Started", "10010000"b, "Executive Forum");
      202 
      203 	return;
      204 
      205 general_help_topics: entry (ght_spy_ptr, ght_xforum_system_area_ptr, ght_prev_menu_name);
      206 
      207 /* PARAMETERS */
      208 
      209 	dcl     ght_spy_ptr		 ptr;		/* (input) pointer to spy structure */
      210 	dcl     ght_xforum_system_area_ptr ptr;		/* (input) pointer to area xforum uses to allocate things in */
      211 	dcl     ght_prev_menu_name	 char (*);	/* (input) name of menu that is currently displayed */
      212 
      213 
      214 
      215 
      216 
      217 	xhm_choices (1) = "How To Exit Executive Forum";
      218 	xhm_choices (2) = "How To Get Help";
      219 	xhm_choices (3) = "Responding To Prompts";
      220 	xhm_choices (4) = "How To Correct Typos";
      221 	xhm_choices (5) = "Getting Around The Menus";
      222 	xhm_choices (6) = "The 2 Attending Menus";
      223 	xhm_choices (7) = "What Are Eligible Meetings";
      224 	xhm_choices (8) = "What Are Attended Meetings";
      225 	xhm_choices (9) = "What Are Changed Meetings";
      226 	xhm_choices (10) = "What Is The Current Comment";
      227 	xhm_choices (11) = "Selecting The Current Comment";
      228 	xhm_choices (12) = "Entering Comments";
      229 	xhm_choices (13) = "Personalizing The System";
      230 	xhm_choices (14) = "Multics Command Level Mode";
      231 	xhm_choices (15) = "Changes Between Version 1 And 2";
      232 	xhm_choices (16) = "Return To " || ght_prev_menu_name || " Menu";
      233 
      234 
      235 
      236 	call do_it (ght_spy_ptr, ght_xforum_system_area_ptr, SPY_AT_3, xhm_MENU_HEIGHT,
      237 	     "General Help", "Topics", "10010000"b, ght_prev_menu_name);
      238 
      239 	return;
      240 
      241 do_it: proc (di_spy_ptr, di_xforum_system_area_ptr, di_spy_location, di_menu_height,
      242 	di_title, di_banner, di_help_line_flags, di_return_to);
      243 
      244 /* PARAMETERS */
      245 
      246 	dcl     di_spy_ptr		 ptr;		/* (input) pointer to spy structure */
      247 	dcl     di_xforum_system_area_ptr ptr;		/* (input) pointer to area xforum uses to allocate things in */
      248 	dcl     di_spy_location	 fixed bin;	/* (input) identifies the menu about */
      249 						/*         to be displayed for the spy record */
      250 	dcl     di_menu_height	 fixed bin;	/* (input) number of lines in the menu about to be displayed */
      251 	dcl     di_title		 char (*);	/* (input) first line of status window, giving first */
      252 						/*         line of title of menu about to be displayed */
      253 	dcl     di_banner		 char (*);	/* (input) second line of status window giving second */
      254 						/*         line of title of menu about to be displayed */
      255 	dcl     di_help_line_flags	 bit (8);		/* (input) flags used to control which function keys */
      256 						/*         will be displayed on the help line */
      257 	dcl     di_return_to	 char (*);	/* (input) name of menu currently displayed */
      258 
      259 /* AUTOMATIC */
      260 
      261 	dcl     di_choice		 fixed bin;	/* user's choice from the help menu */
      262 	dcl     di_code		 fixed bin (35);	/* (standard error code */
      263 	dcl     di_fkey		 bit (1) aligned;	/* ("1"b implies that users choice refers to a function key */
      264 	dcl     di_menu_ptr		 ptr;		/* pointer to help menu menu structure */
      265 	dcl     di_multics_mode	 bit (1);		/* "1"b implies that the user can go into multics mode */
      266 	dcl     di_unused_fb	 fixed bin;	/* unused output argument */
      267 
      268 	dcl     01 di_menu_requirements like menu_requirements;
      269 						/* structure describing the rerquirements of the help menu */
      270 						/* output by menu_$create but not used */
      271 
      272 /* CONSTANTS */
      273 
      274 	dcl     (
      275 	        di_FIRST_MENU	 fixed bin init (2),/* function keys for goto first menu */
      276 	        di_FIRST_MENU2	 fixed bin init (9),
      277 	        di_FOREVER		 bit (1) init ("1"b), /* makes while loop loop forever */
      278 	        di_HELP		 fixed bin init (1),/* function key for help */
      279 	        di_HELP_FILE	 char (22) init ("xforum_getting_started"),
      280 						/* name of the help file that contains */
      281 						/* the help messages for these menus */
      282 	        di_MULTICS		 fixed bin init (8),/* function keys for multics mode */
      283 	        di_MULTICS2		 fixed bin init (15),
      284 	        di_PREV_MENU	 fixed bin init (3),/* function keys for goto previous menu */
      285 	        di_PREV_MENU2	 fixed bin init (10),
      286 	        di_QUIT		 fixed bin init (4),/* function keys for quiting xforum */
      287 	        di_QUIT2		 fixed bin init (11),
      288 	        di_REDISPLAY	 fixed bin init (5),/* function keys for redisplaying the screen */
      289 	        di_REDISPLAY2	 fixed bin init (12)
      290 	        )			 internal static options (constant);
      291 
      292 	di_multics_mode = xforum_user_profile$get_multics_mode ();
      293 	spy_ptr = di_spy_ptr;
      294 
      295 	on quit
      296 	     begin;
      297 		call xforum_window_mgr$check_window_status;
      298 		call window_$bell (xforum_windows.menu.iocb, (0));
      299 		call xforum_status_$redisplay ((0));
      300 		call collect_spy_data (di_spy_location, "QUIT");
      301 		goto getting_started_get_choice;
      302 	     end;
      303 
      304 	di_menu_requirements.version = menu_requirements_version_1;
      305 	call xforum_create_menu_ (xhm_choices, addr (di_menu_requirements), di_menu_ptr, di_code);
      306 
      307 	call xforum_window_mgr$resynch_windows (di_menu_height, "1"b);
      308 
      309 	call xforum_status_$update_title (di_title);
      310 	call xforum_status_$update_banner (di_banner);
      311 	call xforum_help_line_$push (di_help_line_flags, "", "", "  g:Return to " || di_return_to || " menu");
      312 	call xforum_status_$redisplay ((0));
      313 
      314 	call xforum_window_mgr$menu_display (di_menu_ptr);
      315 
      316 	on xforum_redisplay_menu call xforum_window_mgr$menu_display (di_menu_ptr);
      317 
      318 	if di_title = "Executive Forum"
      319 	then call xforum_help_$display (di_HELP_FILE, "Introduction");
      320 
      321 getting_started_get_choice:
      322 	do while (di_FOREVER);
      323 	     call xforum_window_mgr$menu_get_choice (di_menu_ptr, di_fkey, di_choice);
      324 	     call window_$clear_window (xforum_windows.bottom.iocb, (0));
      325 
      326 	     if di_fkey
      327 	     then call collect_spy_data (di_spy_location, "F" || rtrim (ltrim (char (di_choice))));
      328 	     else call collect_spy_data (di_spy_location, rtrim (ltrim (char (di_choice))));
      329 
      330 	     if di_fkey
      331 	     then do;
      332 		if di_choice = di_HELP
      333 		then do;
      334 		     call xforum_help_$get_help (di_menu_ptr, di_banner, xhm_choices,
      335 			spy_ptr, di_xforum_system_area_ptr);
      336 		     call xforum_status_$update_title (di_title);
      337 		     call xforum_status_$update_banner (di_banner);
      338 		     call xforum_status_$redisplay ((0));
      339 		     call xforum_window_mgr$menu_display (di_menu_ptr);
      340 		end;
      341 		else
      342 		     if di_choice = di_FIRST_MENU | di_choice = di_FIRST_MENU2
      343 		then goto exit_do_it;
      344 		else
      345 		     if di_choice = di_PREV_MENU | di_choice = di_PREV_MENU2
      346 		then goto exit_do_it;
      347 		else
      348 		     if di_choice = di_QUIT | di_choice = di_QUIT2
      349 		then signal exit_executive_forum;
      350 		else if di_choice = di_REDISPLAY | di_choice = di_REDISPLAY2
      351 		then call xforum_redisplay_;
      352 		else if (di_choice = di_MULTICS | di_choice = di_MULTICS2) & di_multics_mode
      353 		then do;
      354 		     call xforum_help_line_$push (di_help_line_flags, "", "", "");
      355 		     call xforum_multics_mode (di_unused_fb);
      356 		     call xforum_window_mgr$resynch_windows (di_menu_height, "0"b);
      357 		     call xforum_help_line_$pop;
      358 		     call xforum_status_$redisplay ((0));
      359 		     call xforum_window_mgr$menu_display (di_menu_ptr);
      360 		     goto getting_started_get_choice;
      361 		end;
      362 		else call window_$bell (xforum_windows.menu.iocb, (0));
      363 	     end;
      364 	     else do;
      365 		if di_choice < 16
      366 		then call xforum_help_$display (di_HELP_FILE, translate (xhm_choices (di_choice), "_", " "));
      367 		else goto exit_do_it;
      368 	     end;
      369 	end;
      370 
      371 exit_do_it:
      372 	call menu_$destroy (di_menu_ptr, (0));
      373 
      374 	call window_$clear_window (xforum_windows.menu.iocb, (0));
      375 
      376 	call xforum_help_line_$pop;
      377 
      378 	return;
      379 
      380      end do_it;
      381 
      382 collect_spy_data: proc (csd_where, csd_response);
      383 
      384 /* PARAMETERS */
      385 
      386 	dcl     csd_where		 fixed bin;	/* (input) location response was collected */
      387 	dcl     csd_response	 char (*);	/* (input) user's response */
      388 
      389 
      390 
      391 
      392 
      393 	spy.count = spy.count + 1;
      394 	spy.choices (count).at = csd_where;
      395 	spy.choices (count).choice = csd_response;
      396 
      397 	return;
      398 
      399      end collect_spy_data;
      400 
      401 error: proc (e_code, e_reason);
      402 
      403 
      404 /* PARAMETERS */
      405 
      406 	dcl     e_code		 fixed bin (35);	/* (input) error code associated with error */
      407 	dcl     e_reason		 char (512);	/* (input) message to be output to user */
      408 
      409 
      410 
      411 
      412 
      413 	xhm_xforum_error_info.name = "xforum_help_menus";
      414 	xhm_xforum_error_info.entry = "";
      415 	xhm_xforum_error_info.doing = "";
      416 	xhm_xforum_error_info.code = e_code;
      417 	xhm_xforum_error_info.reason = e_reason;
      418 
      419 	call signal_ ("xforum_fatal_error", null (), addr (xhm_xforum_error_info), null ());
      420 
      421      end error;
      422 
      423      end xforum_help_menus;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    04/24/86  1513.5  xforum_help_menus.pl1             >special_ldd>install>MR12.0-1048>xforum_help_menus.pl1
161          1    03/27/82  0429.3  menu_dcls.incl.pl1                >ldd>include>menu_dcls.incl.pl1
163          2    12/03/84  1241.6  xforum_error_info.incl.pl1        >ldd>include>xforum_error_info.incl.pl1
165          3    04/24/86  1505.5  xforum_spy.incl.pl1               >special_ldd>install>MR12.0-1048>xforum_spy.incl.pl1
167          4    12/03/84  1241.6  xforum_windows.incl.pl1           >ldd>include>xforum_windows.incl.pl1
4-12         5    09/12/84  0916.7  window_control_info.incl.pl1      >ldd>include>window_control_info.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
SPY_AT_12                       000006 constant        fixed bin(17,0)          initial dcl 3-51 set ref 200*
SPY_AT_3                        000025 constant        fixed bin(17,0)          initial dcl 3-33 set ref 236*
SPY_VERSION_1                   000634 automatic       char(8)                  initial unaligned dcl 3-27 set ref 3-27*
addr                                                   builtin function         dcl 152 ref 305 305 419 419
at                       52            based           fixed bin(17,0)          array level 3 dcl 3-12 set ref 394*
bottom                   20     000056 external static structure                level 2 dcl 4-5
char                                                   builtin function         dcl 153 ref 326 328 328
choice                   53            based           char(10)                 array level 3 packed unaligned dcl 3-12 set ref 395*
choices                  52            based           structure                array level 2 unaligned dcl 3-12
code                     51     000360 automatic       fixed bin(35,0)          level 2 dcl 141 set ref 416*
count                    51            based           fixed bin(17,0)          level 2 dcl 3-12 set ref 393* 393 394 395
csd_response                           parameter       char                     unaligned dcl 387 ref 382 395
csd_where                              parameter       fixed bin(17,0)          dcl 386 ref 382 394
di_FIRST_MENU                          constant        fixed bin(17,0)          initial dcl 274 ref 341
di_FIRST_MENU2                         constant        fixed bin(17,0)          initial dcl 274 ref 341
di_FOREVER                             constant        bit(1)                   initial unaligned dcl 274 ref 321
di_HELP                                constant        fixed bin(17,0)          initial dcl 274 ref 332
di_HELP_FILE                    000000 constant        char(22)                 initial unaligned dcl 274 set ref 318* 365*
di_MULTICS                             constant        fixed bin(17,0)          initial dcl 274 ref 352
di_MULTICS2                            constant        fixed bin(17,0)          initial dcl 274 ref 352
di_PREV_MENU                           constant        fixed bin(17,0)          initial dcl 274 ref 344
di_PREV_MENU2                          constant        fixed bin(17,0)          initial dcl 274 ref 344
di_QUIT                                constant        fixed bin(17,0)          initial dcl 274 ref 347
di_QUIT2                               constant        fixed bin(17,0)          initial dcl 274 ref 347
di_REDISPLAY                           constant        fixed bin(17,0)          initial dcl 274 ref 350
di_REDISPLAY2                          constant        fixed bin(17,0)          initial dcl 274 ref 350
di_banner                              parameter       char                     unaligned dcl 253 set ref 241 310* 334* 337*
di_choice                       000100 automatic       fixed bin(17,0)          dcl 261 set ref 323* 326 328 328 332 341 341 344 344
                                                                                  347 347 350 350 352 352 365 365 365
di_code                         000101 automatic       fixed bin(35,0)          dcl 262 set ref 305*
di_fkey                         000102 automatic       bit(1)                   dcl 263 set ref 323* 326 330
di_help_line_flags                     parameter       bit(8)                   unaligned dcl 255 set ref 241 311* 354*
di_menu_height                         parameter       fixed bin(17,0)          dcl 250 set ref 241 307* 356*
di_menu_ptr                     000104 automatic       pointer                  dcl 264 set ref 305* 314* 316* 323* 334* 339* 359*
                                                                                  371*
di_menu_requirements            000110 automatic       structure                level 1 unaligned dcl 268 set ref 305 305
di_multics_mode                 000106 automatic       bit(1)                   unaligned dcl 265 set ref 292* 352
di_return_to                           parameter       char                     unaligned dcl 257 ref 241 311
di_spy_location                        parameter       fixed bin(17,0)          dcl 248 set ref 241 300* 326* 328*
di_spy_ptr                             parameter       pointer                  dcl 246 ref 241 293
di_title                               parameter       char                     unaligned dcl 251 set ref 241 309* 318 336*
di_unused_fb                    000107 automatic       fixed bin(17,0)          dcl 266 set ref 355*
di_xforum_system_area_ptr              parameter       pointer                  dcl 247 set ref 241 334*
doing                    20     000360 automatic       char(100)                level 2 packed unaligned dcl 141 set ref 415*
e_code                                 parameter       fixed bin(35,0)          dcl 406 ref 401 416
e_reason                               parameter       char(512)                unaligned dcl 407 ref 401 417
entry                    10     000360 automatic       char(32)                 level 2 packed unaligned dcl 141 set ref 414*
exit_executive_forum            000000 stack reference condition                dcl 129 ref 347
ght_prev_menu_name                     parameter       char                     unaligned dcl 211 set ref 205 232 236*
ght_spy_ptr                            parameter       pointer                  dcl 209 set ref 205 236*
ght_xforum_system_area_ptr             parameter       pointer                  dcl 210 set ref 205 236*
gs_spy_ptr                             parameter       pointer                  dcl 175 set ref 171 200*
gs_xforum_system_area_ptr              parameter       pointer                  dcl 176 set ref 171 200*
iocb                     10     000056 external static pointer                  level 3 in structure "xforum_windows" dcl 4-5
                                                                                  in procedure "xforum_help_menus" set ref 298* 362*
                                                                                  374*
iocb                     20     000056 external static pointer                  level 3 in structure "xforum_windows" dcl 4-5
                                                                                  in procedure "xforum_help_menus" set ref 324*
ltrim                                                  builtin function         dcl 154 ref 326 328 328
menu                     10     000056 external static structure                level 2 dcl 4-5
menu_$destroy                   000054 constant        entry                    external dcl 1-41 ref 371
menu_requirements                      based           structure                level 1 dcl 1-88
menu_requirements_version_1            constant        fixed bin(17,0)          initial dcl 1-97 ref 304
name                            000360 automatic       char(32)                 level 2 packed unaligned dcl 141 set ref 413*
null                                                   builtin function         dcl 155 ref 419 419 419 419
quit                            000000 stack reference condition                dcl 130 ref 295
reason                   52     000360 automatic       char(512)                level 2 packed unaligned dcl 141 set ref 417*
rtrim                                                  builtin function         dcl 156 ref 326 328 328
signal_                         000010 constant        entry                    external dcl 108 ref 419
spy                                    based           structure                level 1 unaligned dcl 3-12
spy_ptr                         000632 automatic       pointer                  dcl 3-26 set ref 293* 334* 393 393 394 394 395 395
translate                                              builtin function         dcl 157 ref 365 365
version                         000110 automatic       fixed bin(17,0)          level 2 dcl 268 set ref 304*
window_$bell                    000012 constant        entry                    external dcl 109 ref 298 362
window_$clear_window            000014 constant        entry                    external dcl 110 ref 324 374
window_position_info                   based           structure                level 1 unaligned dcl 5-25
xforum_create_menu_             000016 constant        entry                    external dcl 111 ref 305
xforum_error_info                      based           structure                level 1 unaligned dcl 2-3
xforum_help_$display            000020 constant        entry                    external dcl 112 ref 318 365
xforum_help_$get_help           000022 constant        entry                    external dcl 113 ref 334
xforum_help_line_$pop           000024 constant        entry                    external dcl 114 ref 357 376
xforum_help_line_$push          000026 constant        entry                    external dcl 115 ref 311 354
xforum_multics_mode             000030 constant        entry                    external dcl 116 ref 355
xforum_redisplay_               000032 constant        entry                    external dcl 117 ref 350
xforum_redisplay_menu           000000 stack reference condition                dcl 131 ref 316
xforum_status_$redisplay        000034 constant        entry                    external dcl 118 ref 299 312 338 358
xforum_status_$update_banner    000036 constant        entry                    external dcl 119 ref 310 337
xforum_status_$update_title     000040 constant        entry                    external dcl 120 ref 309 336
xforum_user_profile$get_multics_mode
                                000042 constant        entry                    external dcl 121 ref 292
xforum_window_info              000636 automatic       structure                level 1 unaligned dcl 4-8
xforum_window_mgr$check_window_status
                                000044 constant        entry                    external dcl 122 ref 297
xforum_window_mgr$menu_display  000046 constant        entry                    external dcl 123 ref 314 316 339 359
xforum_window_mgr$menu_get_choice
                                000050 constant        entry                    external dcl 124 ref 323
xforum_window_mgr$resynch_windows
                                000052 constant        entry                    external dcl 125 ref 307 356
xforum_windows                  000056 external static structure                level 1 dcl 4-5
xhm_MENU_HEIGHT                 000031 constant        fixed bin(17,0)          initial dcl 146 set ref 200* 236*
xhm_choices                     000100 automatic       varying char(40)         array dcl 135 set ref 182* 183* 184* 185* 186* 187*
                                                                                  188* 189* 190* 191* 192* 193* 194* 195* 196* 197*
                                                                                  217* 218* 219* 220* 221* 222* 223* 224* 225* 226*
                                                                                  227* 228* 229* 230* 231* 232* 305* 334* 365 365
xhm_xforum_error_info           000360 automatic       structure                level 1 unaligned dcl 141 set ref 419 419

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
MENU_OPTION_KEYS                       internal static char(1)                  initial array unaligned dcl 1-100
SPY_AT_1                               internal static fixed bin(17,0)          initial dcl 3-29
SPY_AT_10                              internal static fixed bin(17,0)          initial dcl 3-47
SPY_AT_11                              internal static fixed bin(17,0)          initial dcl 3-49
SPY_AT_13                              internal static fixed bin(17,0)          initial dcl 3-53
SPY_AT_14                              internal static fixed bin(17,0)          initial dcl 3-55
SPY_AT_15                              internal static fixed bin(17,0)          initial dcl 3-57
SPY_AT_16                              internal static fixed bin(17,0)          initial dcl 3-59
SPY_AT_17                              internal static fixed bin(17,0)          initial dcl 3-61
SPY_AT_18                              internal static fixed bin(17,0)          initial dcl 3-63
SPY_AT_19                              internal static fixed bin(17,0)          initial dcl 3-65
SPY_AT_2                               internal static fixed bin(17,0)          initial dcl 3-31
SPY_AT_4                               internal static fixed bin(17,0)          initial dcl 3-35
SPY_AT_5                               internal static fixed bin(17,0)          initial dcl 3-37
SPY_AT_6                               internal static fixed bin(17,0)          initial dcl 3-39
SPY_AT_7                               internal static fixed bin(17,0)          initial dcl 3-41
SPY_AT_8                               internal static fixed bin(17,0)          initial dcl 3-43
SPY_AT_9                               internal static fixed bin(17,0)          initial dcl 3-45
SPY_LOCATION                           internal static varying char(20)         initial array dcl 3-68
break_table_info                       based           structure                level 1 dcl 5-76
break_table_info_version               internal static fixed bin(17,0)          initial dcl 5-80
break_table_info_version_1             internal static fixed bin(17,0)          initial dcl 5-80
break_table_ptr                        automatic       pointer                  dcl 5-75
get_editor_key_bindings_info           based           structure                level 1 dcl 5-151
get_editor_key_bindings_info_ptr       automatic       pointer                  dcl 5-159
get_editor_key_bindings_info_version_1 internal static char(8)                  initial unaligned dcl 5-160
line_editor_binding_count              automatic       fixed bin(17,0)          dcl 5-121
line_editor_key_binding_info           based           structure                level 1 dcl 5-129
line_editor_key_binding_info_ptr       automatic       pointer                  dcl 5-118
line_editor_key_binding_info_version_3 internal static char(8)                  initial unaligned dcl 5-148
line_editor_longest_sequence           automatic       fixed bin(17,0)          dcl 5-123
menu_$create                    000000 constant        entry                    external dcl 1-8
menu_$delete                    000000 constant        entry                    external dcl 1-61
menu_$describe                  000000 constant        entry                    external dcl 1-35
menu_$display                   000000 constant        entry                    external dcl 1-20
menu_$get_choice                000000 constant        entry                    external dcl 1-26
menu_$list                      000000 constant        entry                    external dcl 1-67
menu_$retrieve                  000000 constant        entry                    external dcl 1-54
menu_$store                     000000 constant        entry                    external dcl 1-46
menu_format                            based           structure                level 1 dcl 1-76
menu_format_ptr                        automatic       pointer                  dcl 1-94
menu_format_version_1                  internal static fixed bin(17,0)          initial dcl 1-97
menu_requirements_ptr                  automatic       pointer                  dcl 1-95
more_handler_info                      based           structure                level 1 dcl 5-83
more_handler_info_ptr                  automatic       pointer                  dcl 5-92
more_handler_info_version              internal static fixed bin(17,0)          initial dcl 5-94
more_handler_info_version_3            internal static fixed bin(17,0)          initial dcl 5-94
more_prompt_info                       based           structure                level 1 dcl 5-108
more_prompt_info_ptr                   automatic       pointer                  dcl 5-112
more_prompt_info_version_1             internal static char(8)                  initial unaligned dcl 5-114
more_responses_info                    based           structure                level 1 dcl 5-59
more_responses_info_ptr                automatic       pointer                  dcl 5-69
more_responses_info_version_1          internal static fixed bin(17,0)          initial dcl 5-67
more_responses_version                 internal static fixed bin(17,0)          initial dcl 5-67
set_editor_key_bindings_info           based           structure                level 1 dcl 5-162
set_editor_key_bindings_info_ptr       automatic       pointer                  dcl 5-171
set_editor_key_bindings_info_version_1 internal static char(8)                  initial unaligned dcl 5-172
token_characters_info                  based           structure                level 1 dcl 5-97
token_characters_info_ptr              automatic       pointer                  dcl 5-104
token_characters_info_version_1        internal static char(8)                  initial unaligned dcl 5-106
window_edit_line_info                  based           structure                level 1 unaligned dcl 5-177
window_edit_line_info_ptr              automatic       pointer                  dcl 5-186
window_edit_line_info_version_1        internal static char(8)                  initial unaligned dcl 5-183
window_position_info_ptr               automatic       pointer                  dcl 5-37
window_position_info_version           internal static fixed bin(17,0)          initial dcl 5-35
window_position_info_version_1         internal static fixed bin(17,0)          initial dcl 5-35
window_status_info                     based           structure                level 1 dcl 5-45
window_status_info_ptr                 automatic       pointer                  dcl 5-43
window_status_version                  internal static fixed bin(17,0)          initial dcl 5-52
window_status_version_1                internal static fixed bin(17,0)          initial dcl 5-52

NAMES DECLARED BY EXPLICIT CONTEXT.
collect_spy_data                002200 constant        entry                    internal dcl 382 ref 300 326 328
do_it                           001031 constant        entry                    internal dcl 241 ref 200 236
error                           002235 constant        entry                    internal dcl 401 ref 169
exit_do_it                      002144 constant        label                    dcl 371 ref 341 344 365
general_help_topics             000570 constant        entry                    external dcl 205
getting_started                 000352 constant        entry                    external dcl 171
getting_started_get_choice      001422 constant        label                    dcl 321 ref 301 360
xforum_help_menus               000331 constant        entry                    external dcl 36

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      3062        3142    2523        3072
Length      3502    2523        60         324     337           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
xforum_help_menus                   636 external procedure  is an external procedure.  
do_it                               148 internal procedure  enables or reverts conditions.  
on unit on line 295                  84 on unit               
on unit on line 316                  68 on unit               
collect_spy_data                     66 internal procedure  is called during a stack extension.  
error                                   internal procedure  shares stack frame of external procedure xforum_help_menus.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
do_it                    000100 di_choice                   do_it
                         000101 di_code                     do_it
                         000102 di_fkey                     do_it
                         000104 di_menu_ptr                 do_it
                         000106 di_multics_mode             do_it
                         000107 di_unused_fb                do_it
                         000110 di_menu_requirements        do_it
xforum_help_menus        000100 xhm_choices                 xforum_help_menus
                         000360 xhm_xforum_error_info       xforum_help_menus
                         000632 spy_ptr                     xforum_help_menus
                         000634 SPY_VERSION_1               xforum_help_menus
                         000636 xforum_window_info          xforum_help_menus

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_cs            cat_realloc_cs      call_ext_out_desc   call_ext_out        call_int_this_desc  call_int_other_desc
return              tra_ext             signal              enable              shorten_stack       ext_entry
ext_entry_desc      int_entry           int_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
menu_$destroy                 signal_                       window_$bell                  window_$clear_window
xforum_create_menu_           xforum_help_$display          xforum_help_$get_help         xforum_help_line_$pop
xforum_help_line_$push        xforum_multics_mode           xforum_redisplay_             xforum_status_$redisplay
xforum_status_$update_banner  xforum_status_$update_title   xforum_user_profile$get_multics_mode
xforum_window_mgr$check_window_status                       xforum_window_mgr$menu_display
xforum_window_mgr$menu_get_choice                           xforum_window_mgr$resynch_windows

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
xforum_windows




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
 3   27 000324        36 000330       169 000337       171 000345       182 000360       183 000365       184 000372
    185 000377       186 000404       187 000411       188 000416       189 000423       190 000430       191 000434
    192 000441       193 000446       194 000453       195 000460       196 000465       197 000472       200 000476
    203 000563       205 000564       217 000604       218 000611       219 000616       220 000623       221 000630
    222 000635       223 000642       224 000647       225 000653       226 000660       227 000665       228 000672
    229 000677       230 000704       231 000711       232 000716       236 000752       239 001027       241 001030
    292 001056       293 001064       295 001071       297 001105       298 001111       299 001124       300 001134
    301 001155       304 001160       305 001162       307 001211       309 001225       310 001240       311 001253
    312 001326       314 001337       316 001346       318 001372       323 001422       324 001435       326 001450
    328 001543       330 001625       332 001631       334 001634       336 001666       337 001701       338 001714
    339 001724       340 001733       341 001734       344 001740       347 001744       350 001754       352 001766
    354 001775       355 002021       356 002030       357 002044       358 002051       359 002061       360 002070
    362 002071       363 002104       365 002105       368 002142       369 002143       371 002144       374 002156
    376 002171       378 002176       382 002177       393 002213       394 002216       395 002224       397 002234
    401 002235       413 002237       414 002242       415 002245       416 002250       417 002252       419 002256
    421 002311


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
