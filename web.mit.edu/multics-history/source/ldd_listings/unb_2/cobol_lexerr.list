	COMPILATION LISTING OF SEGMENT cobol_lexerr
	Compiled by: Multics PL/I Compiler, Release 31b, of April 24, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 05/24/89  1008.7 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
       17*     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
       18*     MCR8060 cobol_lexerr.pl1 Reformatted code to new Cobol standard.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 /* 5/27/77, FCH, fixed bin decls standardized */
       23 /* Last modified on 09/08/76 by ORN to add lexerr4 entry for caller specified column */
       24 /* Modified on 1/21/76 by John O'Neil to use c_l_n rather than c_l_n + 1 for tln  in lexerr2 entry.
       25*	Merge (the only caller) has already updated the c_l_n.  */
       26 
       27 /* format: style3 */
       28 cobol_lexerr:
       29      proc (nr, opt, len, d_b_m);
       30 
       31 /* ========================================================================== */
       32 /* This procedure issues diagnostics for lex.  It has three input parameters, as follows: */
       33 /* 	1.  A 2-bit director.  If bit 1 is on a scan is made to the next space or new-line in the source input.   */
       34 /* 	    If bit 2 is on a diagnostic parameter is specified in parameter 3.  */
       35 /* 	2.  The diagnostic number.  If it is zero a complete diagnostic is specified in parameter 3.  */
       36 /* 	3.  This parameter can be omitted if the diagnostic number is not zero and director bit 2 is zero.  */
       37 /* ========================================================================== */
       38 
       39 
       40 /*   message    */
       41 
       42 dcl	1 message		based (cobol_current),
       43 	  2 fwd_link	pointer,
       44 	  2 back_link	pointer,
       45 	  2 rep_link	pointer,
       46 	  2 l_info	bit (8),
       47 	  2 size		fixed bin,
       48 	  2 line		fixed bin,
       49 	  2 column	fixed bin,
       50 	  2 type		fixed bin,		/* = 5 */
       51 	  2 run		fixed bin,
       52 	  2 number	fixed bin,
       53 	  2 info		bit (8),
       54 	  2 length	fixed bin,
       55 	  2 image		char (200);
       56 
       57 dcl	cobol_insert_token	entry (fixed bin, fixed bin) external;
       58 dcl	substr		builtin;
       59 
       60 dcl	(nr, len, tcol, tln)
       61 			fixed bin,		/* error number from input */
       62 	(opt, topt)	bit (1),
       63 	d_b_m		char (200),
       64 	q		pointer static;
       65 
       66 declare	incol		fixed bin;
       67 
       68 	topt = opt;
       69 	tln = message.line;
       70 	tcol = message.column;
       71 	goto start;
       72 
       73 lexerr2:
       74      entry (nr, opt, len, d_b_m);
       75 
       76 	tln = cobol_c_l_n;
       77 	tcol = 0;
       78 	topt = opt;
       79 	goto start;
       80 
       81 lexerr3:
       82      entry (nr, opt, len, d_b_m);
       83 
       84 	tln = cobol_save_cln;
       85 	tcol = cobol_save_col;
       86 	go to start3;
       87 
       88 lexerr4:
       89      entry (nr, opt, len, d_b_m, incol);
       90 
       91 	tln = cobol_c_l_n;
       92 	tcol = incol;
       93 	topt = opt;
       94 	go to start;
       95 
       96 lexerr1:
       97      entry (nr, opt, len, d_b_m);
       98 
       99 	topt = "0"b;
      100 	tln = cobol_save_cln;
      101 	tcol = cobol_save_col;
      102 
      103 start:
      104 	substr (message.l_info, 3, 1) = topt;
      105 
      106 start3:
      107 	call cobol_insert_token (5, len);		/* allocate the 5, len token */
      108 
      109 	message.line = tln;
      110 	message.column = tcol;
      111 	message.info = "0"b;
      112 	substr (message.info, 2, 1) = opt;
      113 	message.run = 1;
      114 	message.number = nr;
      115 
      116 	if len ^= 0
      117 	then /* if complete diag or parameter is given here... */
      118 	     do;
      119 		if nr ^= 0
      120 		then substr (message.info, 1, 1) = "1"b;/* indicate parameter */
      121 
      122 		message.length = len;
      123 		substr (message.image, 1, message.length) = substr (d_b_m, 1, len);
      124 	     end;
      125 
      126 
  1     1 
  1     2 /* BEGIN INCLUDE FILE ... cobol_ext_lex.incl.pl1 */
  1     3 /* Last modified on 06/18/76 by ORN */
  1     4 
  1     5 /*   * * *   LEX EXTERNAL DATA   * * *   */
  1     6 
  1     7 /* Pointers */
  1     8 
  1     9 dcl     cobol_ext_lex$cobol_current ptr ext;
  1    10 dcl     cobol_current ptr defined (  cobol_ext_lex$cobol_current);
  1    11 dcl     cobol_ext_lex$cobol_top ptr ext;
  1    12 dcl     cobol_top ptr defined (  cobol_ext_lex$cobol_top);
  1    13 dcl     cobol_ext_lex$cobol_frst ptr ext;
  1    14 dcl     cobol_frst ptr defined (  cobol_ext_lex$cobol_frst);
  1    15 dcl     cobol_ext_lex$cobol_mfp ptr ext;
  1    16 dcl     cobol_mfp ptr defined (  cobol_ext_lex$cobol_mfp);
  1    17 dcl     cobol_ext_lex$cobol_rt_ptr ptr ext;
  1    18 dcl     cobol_rt_ptr ptr defined (  cobol_ext_lex$cobol_rt_ptr);
  1    19 dcl     cobol_ext_lex$cobol_cfp ptr ext;
  1    20 dcl     cobol_cfp ptr defined (  cobol_ext_lex$cobol_cfp);
  1    21 dcl     cobol_ext_lex$cobol_ta_ptr ptr ext;
  1    22 dcl     cobol_ta_ptr ptr defined (  cobol_ext_lex$cobol_ta_ptr);
  1    23 dcl     cobol_ext_lex$cobol_elt_buf_ptr ptr ext;
  1    24 dcl     cobol_elt_buf_ptr ptr defined (  cobol_ext_lex$cobol_elt_buf_ptr);
  1    25 dcl     cobol_ext_lex$cobol_lex_exit /*[*/ label /*]*/ /*[[[ entry static ]]]*/ ext;
  1    26 dcl     cobol_lex_exit /*[*/ label /*]*/ /*[[[ entry static ]]]*/ defined(  cobol_ext_lex$cobol_lex_exit); /* -6- */
  1    27 
  1    28 /* Character */
  1    29 
  1    30 dcl     cobol_ext_lex$cobol_tarea char (300) ext;
  1    31 dcl     cobol_tarea char (300) defined (  cobol_ext_lex$cobol_tarea);    /* -75- */
  1    32 dcl     cobol_ext_lex$cobol_comma_character char (1) ext;
  1    33 dcl     cobol_comma_character char (1) defined (  cobol_ext_lex$cobol_comma_character);
  1    34 dcl     cobol_ext_lex$cobol_decimal_point_character char (1) ext;
  1    35 dcl     cobol_decimal_point_character char (1) defined (  cobol_ext_lex$cobol_decimal_point_character);
  1    36 dcl     cobol_ext_lex$cobol_new_line_character char (1) ext;
  1    37 dcl     cobol_new_line_character char (1) defined (  cobol_ext_lex$cobol_new_line_character);
  1    38 dcl     cobol_ext_lex$cobol_si_key char (5) ext;
  1    39 dcl     cobol_si_key char (5) defined (  cobol_ext_lex$cobol_si_key);     /* -2- */
  1    40 dcl     cobol_ext_lex$cobol_so_key char (5) ext;
  1    41 dcl     cobol_so_key char (5) defined (  cobol_ext_lex$cobol_so_key);     /* -2- */
  1    42 
  1    43 /* Fixed bin */
  1    44 
  1    45 dcl    cobol_ext_lex$ph_num fixed bin ext;
  1    46 dcl     ph_num fixed bin defined(cobol_ext_lex$ph_num );
  1    47 dcl     cobol_ext_lex$cobol_c_l_n fixed bin ext;
  1    48 dcl     cobol_c_l_n fixed bin defined (  cobol_ext_lex$cobol_c_l_n);
  1    49 dcl     cobol_ext_lex$cobol_save_cln fixed bin ext;
  1    50 dcl     cobol_save_cln fixed bin defined (  cobol_ext_lex$cobol_save_cln);
  1    51 dcl     cobol_ext_lex$cobol_save_col fixed bin ext;
  1    52 dcl     cobol_save_col fixed bin defined (  cobol_ext_lex$cobol_save_col);
  1    53 dcl     cobol_ext_lex$cobol_name_number fixed bin ext;
  1    54 dcl     cobol_name_number fixed bin defined (  cobol_ext_lex$cobol_name_number);
  1    55 dcl     cobol_ext_lex$cobol_section_number fixed bin ext;
  1    56 dcl     cobol_section_number fixed bin defined (  cobol_ext_lex$cobol_section_number);
  1    57 dcl     cobol_ext_lex$cobol_sr fixed bin ext;
  1    58 dcl     cobol_sr fixed bin defined (  cobol_ext_lex$cobol_sr);
  1    59 dcl     cobol_ext_lex$cobol_elt_idx fixed bin ext;
  1    60 dcl     cobol_elt_idx fixed bin defined (  cobol_ext_lex$cobol_elt_idx);
  1    61 
  1    62 /* Structures */
  1    63 
  1    64 dcl 1     cobol_ext_lex$cobol_cards ext like   cobol_cards;
  1    65 dcl 1     cobol_cards defined (  cobol_ext_lex$cobol_cards),     /* -67- */
  1    66     2 column fixed bin,
  1    67     2 tblanks fixed bin,
  1    68     2 nr_char fixed bin,
  1    69     2 name char (256);
  1    70 
  1    71 /* Bits */
  1    72 
  1    73 dcl cobol_ext_lex$processing_report bit(1) ext;
  1    74 dcl processing_report bit (1) defined (cobol_ext_lex$processing_report);
  1    75 dcl cobol_ext_lex$real_end_report bit (1) ext;
  1    76 dcl real_end_report bit (1) defined (cobol_ext_lex$real_end_report);
  1    77 dcl     cobol_ext_lex$cobol_continuation bit (1) ext;
  1    78 dcl     cobol_continuation bit (1) defined (  cobol_ext_lex$cobol_continuation);
  1    79 dcl     cobol_ext_lex$cobol_pic_switch bit (1) ext;
  1    80 dcl     cobol_pic_switch bit (1) defined (  cobol_ext_lex$cobol_pic_switch);
  1    81 dcl     cobol_ext_lex$cobol_allo_init_sw bit (1) ext;
  1    82 dcl     cobol_allo_init_sw bit (1) defined (  cobol_ext_lex$cobol_allo_init_sw);
  1    83 dcl     cobol_ext_lex$cobol_lu_sw bit (1) ext;
  1    84 dcl     cobol_lu_sw bit (1) defined (  cobol_ext_lex$cobol_lu_sw);
  1    85 dcl     cobol_ext_lex$cobol_scanoff_sw bit (1) ext;
  1    86 dcl     cobol_scanoff_sw bit (1) defined (  cobol_ext_lex$cobol_scanoff_sw);
  1    87 dcl     cobol_ext_lex$cobol_output_sw bit (1) ext;
  1    88 dcl     cobol_output_sw bit (1) defined (  cobol_ext_lex$cobol_output_sw);
  1    89 dcl     cobol_ext_lex$cobol_stack_sw bit (1) ext;
  1    90 dcl     cobol_stack_sw bit (1) defined (  cobol_ext_lex$cobol_stack_sw);
  1    91 dcl     cobol_ext_lex$cobol_copy_found bit (1) ext;
  1    92 dcl     cobol_copy_found bit (1) defined (  cobol_ext_lex$cobol_copy_found);
  1    93 dcl     cobol_ext_lex$cobol_head_words (5) bit (1) ext;
  1    94 dcl     cobol_head_words (5) bit (1) defined (  cobol_ext_lex$cobol_head_words);
  1    95 dcl     cobol_ext_lex$cobol_elnp_sw bit (1) ext;
  1    96 dcl     cobol_elnp_sw bit (1) defined (  cobol_ext_lex$cobol_elnp_sw);
  1    97 dcl     cobol_ext_lex$cobol_dp_sw bit (1) ext;
  1    98 dcl     cobol_dp_sw bit (1) defined (  cobol_ext_lex$cobol_dp_sw);
  1    99 dcl     cobol_ext_lex$cobol_endprog_sw bit (1) ext;
  1   100 dcl     cobol_endprog_sw bit (1) defined (  cobol_ext_lex$cobol_endprog_sw);
  1   101 dcl     cobol_ext_lex$cobol_debug_mode bit (1) ext;
  1   102 dcl     cobol_debug_mode bit (1) defined (  cobol_ext_lex$cobol_debug_mode);
  1   103 dcl     cobol_ext_lex$cobol_rwt_init_sw bit (1) ext;
  1   104 dcl     cobol_rwt_init_sw bit (1) defined (  cobol_ext_lex$cobol_rwt_init_sw);
  1   105 dcl     cobol_ext_lex$cobol_init_ta_sw bit (1) ext;
  1   106 dcl     cobol_init_ta_sw bit (1) defined (  cobol_ext_lex$cobol_init_ta_sw);
  1   107 dcl     cobol_ext_lex$cobol_rep_sw bit (1) ext;
  1   108 dcl     cobol_rep_sw bit (1) defined (  cobol_ext_lex$cobol_rep_sw);
  1   109 dcl     cobol_ext_lex$cobol_copy_active bit (1) ext;
  1   110 dcl     cobol_copy_active bit (1) defined (  cobol_ext_lex$cobol_copy_active);
  1   111 dcl     cobol_ext_lex$cobol_ln_sw (2) bit (1) ext;
  1   112 dcl     cobol_ln_sw (2) bit (1) defined (  cobol_ext_lex$cobol_ln_sw);
  1   113 dcl     cobol_ext_lex$cobol_prime_sw bit (1) ext;
  1   114 dcl     cobol_prime_sw bit (1) defined (  cobol_ext_lex$cobol_prime_sw);
  1   115 dcl     cobol_ext_lex$cobol_rec1_sw (2) bit (1) ext;
  1   116 dcl     cobol_rec1_sw (2) bit (1) defined (  cobol_ext_lex$cobol_rec1_sw);
  1   117 dcl     cobol_ext_lex$cobol_progid_sw bit(1) ext;
  1   118 dcl     cobol_progid_sw bit(1) defined (  cobol_ext_lex$cobol_progid_sw);
  1   119 
  1   120 
  1   121 /*   * * *   END LEX EXTERNAL DATA   * * *   */
  1   122 /* END INCLUDE FILE ... cobol_ext_lex.incl.pl1 */
  1   123 
      127 
      128 
      129      end cobol_lexerr;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/24/89  0834.6  cobol_lexerr.pl1                  >spec>install>MR12.3-1048>cobol_lexerr.pl1
127          1    03/27/82  0431.6  cobol_ext_lex.incl.pl1            >ldd>include>cobol_ext_lex.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
cobol_c_l_n                            defined         fixed bin(17,0)          dcl 1-48 ref 76 91
cobol_cards                            defined         structure                level 1 unaligned dcl 1-65
cobol_current                          defined         pointer                  dcl 1-10 ref 69 70 103 109 110 111 112 113 114 119
                                                                                  122 123 123
cobol_ext_lex$cobol_c_l_n       000014 external static fixed bin(17,0)          dcl 1-47 ref 76 76 91 91
cobol_ext_lex$cobol_current     000012 external static pointer                  dcl 1-9 ref 69 69 70 70 103 103 109 109 110 110 111
                                                                                  111 112 112 113 113 114 114 119 119 122 122 123
                                                                                  123 123 123
cobol_ext_lex$cobol_save_cln    000016 external static fixed bin(17,0)          dcl 1-49 ref 84 84 100 100
cobol_ext_lex$cobol_save_col    000020 external static fixed bin(17,0)          dcl 1-51 ref 85 85 101 101
cobol_insert_token              000010 constant        entry                    external dcl 57 ref 106
cobol_save_cln                         defined         fixed bin(17,0)          dcl 1-50 ref 84 100
cobol_save_col                         defined         fixed bin(17,0)          dcl 1-52 ref 85 101
column                   11            based           fixed bin(17,0)          level 2 dcl 42 set ref 70 110*
d_b_m                                  parameter       char(200)                packed unaligned dcl 60 ref 28 73 81 88 96 123
image                    17            based           char(200)                level 2 packed packed unaligned dcl 42 set ref 123*
incol                                  parameter       fixed bin(17,0)          dcl 66 ref 88 92
info                     15            based           bit(8)                   level 2 packed packed unaligned dcl 42 set ref 111*
                                                                                  112* 119*
l_info                    6            based           bit(8)                   level 2 packed packed unaligned dcl 42 set ref 103*
len                                    parameter       fixed bin(17,0)          dcl 60 set ref 28 73 81 88 96 106* 116 122 123
length                   16            based           fixed bin(17,0)          level 2 dcl 42 set ref 122* 123
line                     10            based           fixed bin(17,0)          level 2 dcl 42 set ref 69 109*
message                                based           structure                level 1 unaligned dcl 42
nr                                     parameter       fixed bin(17,0)          dcl 60 ref 28 73 81 88 96 114 119
number                   14            based           fixed bin(17,0)          level 2 dcl 42 set ref 114*
opt                                    parameter       bit(1)                   packed unaligned dcl 60 ref 28 68 73 78 81 88 93 96
                                                                                  112
run                      13            based           fixed bin(17,0)          level 2 dcl 42 set ref 113*
substr                                                 builtin function         dcl 58 set ref 103* 112* 119* 123* 123
tcol                            000100 automatic       fixed bin(17,0)          dcl 60 set ref 70* 77* 85* 92* 101* 110
tln                             000101 automatic       fixed bin(17,0)          dcl 60 set ref 69* 76* 84* 91* 100* 109
topt                            000102 automatic       bit(1)                   packed unaligned dcl 60 set ref 68* 78* 93* 99* 103

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
cobol_allo_init_sw                     defined         bit(1)                   packed unaligned dcl 1-82
cobol_cfp                              defined         pointer                  dcl 1-20
cobol_comma_character                  defined         char(1)                  packed unaligned dcl 1-33
cobol_continuation                     defined         bit(1)                   packed unaligned dcl 1-78
cobol_copy_active                      defined         bit(1)                   packed unaligned dcl 1-110
cobol_copy_found                       defined         bit(1)                   packed unaligned dcl 1-92
cobol_debug_mode                       defined         bit(1)                   packed unaligned dcl 1-102
cobol_decimal_point_character          defined         char(1)                  packed unaligned dcl 1-35
cobol_dp_sw                            defined         bit(1)                   packed unaligned dcl 1-98
cobol_elnp_sw                          defined         bit(1)                   packed unaligned dcl 1-96
cobol_elt_buf_ptr                      defined         pointer                  dcl 1-24
cobol_elt_idx                          defined         fixed bin(17,0)          dcl 1-60
cobol_endprog_sw                       defined         bit(1)                   packed unaligned dcl 1-100
cobol_ext_lex$cobol_allo_init_sw       external static bit(1)                   packed unaligned dcl 1-81
cobol_ext_lex$cobol_cards              external static structure                level 1 unaligned dcl 1-64
cobol_ext_lex$cobol_cfp                external static pointer                  dcl 1-19
cobol_ext_lex$cobol_comma_character    external static char(1)                  packed unaligned dcl 1-32
cobol_ext_lex$cobol_continuation       external static bit(1)                   packed unaligned dcl 1-77
cobol_ext_lex$cobol_copy_active        external static bit(1)                   packed unaligned dcl 1-109
cobol_ext_lex$cobol_copy_found         external static bit(1)                   packed unaligned dcl 1-91
cobol_ext_lex$cobol_debug_mode         external static bit(1)                   packed unaligned dcl 1-101
cobol_ext_lex$cobol_decimal_point_character
                                       external static char(1)                  packed unaligned dcl 1-34
cobol_ext_lex$cobol_dp_sw              external static bit(1)                   packed unaligned dcl 1-97
cobol_ext_lex$cobol_elnp_sw            external static bit(1)                   packed unaligned dcl 1-95
cobol_ext_lex$cobol_elt_buf_ptr        external static pointer                  dcl 1-23
cobol_ext_lex$cobol_elt_idx            external static fixed bin(17,0)          dcl 1-59
cobol_ext_lex$cobol_endprog_sw         external static bit(1)                   packed unaligned dcl 1-99
cobol_ext_lex$cobol_frst               external static pointer                  dcl 1-13
cobol_ext_lex$cobol_head_words         external static bit(1)                   array packed unaligned dcl 1-93
cobol_ext_lex$cobol_init_ta_sw         external static bit(1)                   packed unaligned dcl 1-105
cobol_ext_lex$cobol_lex_exit           external static label variable           dcl 1-25
cobol_ext_lex$cobol_ln_sw              external static bit(1)                   array packed unaligned dcl 1-111
cobol_ext_lex$cobol_lu_sw              external static bit(1)                   packed unaligned dcl 1-83
cobol_ext_lex$cobol_mfp                external static pointer                  dcl 1-15
cobol_ext_lex$cobol_name_number        external static fixed bin(17,0)          dcl 1-53
cobol_ext_lex$cobol_new_line_character external static char(1)                  packed unaligned dcl 1-36
cobol_ext_lex$cobol_output_sw          external static bit(1)                   packed unaligned dcl 1-87
cobol_ext_lex$cobol_pic_switch         external static bit(1)                   packed unaligned dcl 1-79
cobol_ext_lex$cobol_prime_sw           external static bit(1)                   packed unaligned dcl 1-113
cobol_ext_lex$cobol_progid_sw          external static bit(1)                   packed unaligned dcl 1-117
cobol_ext_lex$cobol_rec1_sw            external static bit(1)                   array packed unaligned dcl 1-115
cobol_ext_lex$cobol_rep_sw             external static bit(1)                   packed unaligned dcl 1-107
cobol_ext_lex$cobol_rt_ptr             external static pointer                  dcl 1-17
cobol_ext_lex$cobol_rwt_init_sw        external static bit(1)                   packed unaligned dcl 1-103
cobol_ext_lex$cobol_scanoff_sw         external static bit(1)                   packed unaligned dcl 1-85
cobol_ext_lex$cobol_section_number     external static fixed bin(17,0)          dcl 1-55
cobol_ext_lex$cobol_si_key             external static char(5)                  packed unaligned dcl 1-38
cobol_ext_lex$cobol_so_key             external static char(5)                  packed unaligned dcl 1-40
cobol_ext_lex$cobol_sr                 external static fixed bin(17,0)          dcl 1-57
cobol_ext_lex$cobol_stack_sw           external static bit(1)                   packed unaligned dcl 1-89
cobol_ext_lex$cobol_ta_ptr             external static pointer                  dcl 1-21
cobol_ext_lex$cobol_tarea              external static char(300)                packed unaligned dcl 1-30
cobol_ext_lex$cobol_top                external static pointer                  dcl 1-11
cobol_ext_lex$ph_num                   external static fixed bin(17,0)          dcl 1-45
cobol_ext_lex$processing_report        external static bit(1)                   packed unaligned dcl 1-73
cobol_ext_lex$real_end_report          external static bit(1)                   packed unaligned dcl 1-75
cobol_frst                             defined         pointer                  dcl 1-14
cobol_head_words                       defined         bit(1)                   array packed unaligned dcl 1-94
cobol_init_ta_sw                       defined         bit(1)                   packed unaligned dcl 1-106
cobol_lex_exit                         defined         label variable           dcl 1-26
cobol_ln_sw                            defined         bit(1)                   array packed unaligned dcl 1-112
cobol_lu_sw                            defined         bit(1)                   packed unaligned dcl 1-84
cobol_mfp                              defined         pointer                  dcl 1-16
cobol_name_number                      defined         fixed bin(17,0)          dcl 1-54
cobol_new_line_character               defined         char(1)                  packed unaligned dcl 1-37
cobol_output_sw                        defined         bit(1)                   packed unaligned dcl 1-88
cobol_pic_switch                       defined         bit(1)                   packed unaligned dcl 1-80
cobol_prime_sw                         defined         bit(1)                   packed unaligned dcl 1-114
cobol_progid_sw                        defined         bit(1)                   packed unaligned dcl 1-118
cobol_rec1_sw                          defined         bit(1)                   array packed unaligned dcl 1-116
cobol_rep_sw                           defined         bit(1)                   packed unaligned dcl 1-108
cobol_rt_ptr                           defined         pointer                  dcl 1-18
cobol_rwt_init_sw                      defined         bit(1)                   packed unaligned dcl 1-104
cobol_scanoff_sw                       defined         bit(1)                   packed unaligned dcl 1-86
cobol_section_number                   defined         fixed bin(17,0)          dcl 1-56
cobol_si_key                           defined         char(5)                  packed unaligned dcl 1-39
cobol_so_key                           defined         char(5)                  packed unaligned dcl 1-41
cobol_sr                               defined         fixed bin(17,0)          dcl 1-58
cobol_stack_sw                         defined         bit(1)                   packed unaligned dcl 1-90
cobol_ta_ptr                           defined         pointer                  dcl 1-22
cobol_tarea                            defined         char(300)                packed unaligned dcl 1-31
cobol_top                              defined         pointer                  dcl 1-12
ph_num                                 defined         fixed bin(17,0)          dcl 1-46
processing_report                      defined         bit(1)                   packed unaligned dcl 1-74
q                                      internal static pointer                  dcl 60
real_end_report                        defined         bit(1)                   packed unaligned dcl 1-76

NAMES DECLARED BY EXPLICIT CONTEXT.
cobol_lexerr                    000010 constant        entry                    external dcl 28
lexerr1                         000121 constant        entry                    external dcl 96
lexerr2                         000034 constant        entry                    external dcl 73
lexerr3                         000056 constant        entry                    external dcl 81
lexerr4                         000076 constant        entry                    external dcl 88
start                           000134 constant        label                    dcl 103 ref 71 79 94
start3                          000143 constant        label                    dcl 106 ref 86

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       336         360     215         346
Length       560     215        22         163     120           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cobol_lexerr                         74 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cobol_lexerr             000100 tcol                        cobol_lexerr
                         000101 tln                         cobol_lexerr
                         000102 topt                        cobol_lexerr

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cobol_insert_token

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
cobol_ext_lex$cobol_c_l_n     cobol_ext_lex$cobol_current   cobol_ext_lex$cobol_save_cln  cobol_ext_lex$cobol_save_col




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     28 000003        68 000015        69 000023        70 000027        71 000031        73 000032        76 000041
     77 000044        78 000045        79 000053        81 000054        84 000063        85 000066        86 000070
     88 000071        91 000103        92 000106        93 000111        94 000116        96 000117        99 000126
    100 000127       101 000132       103 000134       106 000143       109 000156       110 000163       111 000165
    112 000166       113 000173       114 000175       116 000177       119 000201       122 000205       123 000207
    129 000214


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
