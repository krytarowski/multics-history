	COMPILATION LISTING OF SEGMENT gtss_dsd_process_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/10/84  1256.0 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   *                                                         *
        4*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        5*   *                                                         *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 gtss_dsd_process_: proc (up, bp, ml, rl, ec);
       10 
       11 /**      Process the $*$ request line from CRUN/DRUN application.
       12*
       13*	Author:   Al Dupuis  04/20/79
       14*	Changed:	Al Dupuis  09/26/79 To display blank line to terminal when
       15*				line contains only $*$mark.
       16*
       17***/
       18 
       19 
       20 	rll = rl;
       21 	if rll >= 4
       22 	then do;
       23 	     cp = index (string_3, "$*$");
       24 	     rls = substr (string_3, cp + 3);		/* all of line after $*$ */
       25 	     rls = substr (rls, 1, length (rls) - 1);	/* get rid of NL */
       26 	     rls = ltrim (rls);			/* get rid of any leading blanks */
       27 	     if length (rls) > 3 then cs = substr (rls, 1, 4); /* pick up keyword */
       28 	     else cs = substr (rls, 1, 3);
       29 	     save_cs = cs;
       30 	     cs = translate (cs, "ABCDEFGHIJKLMNOPQRSTUVWXYZ", /* make it upper */
       31 		"abcdefghijklmnopqrstuvwxyz");
       32 	     type = gtss_dsd_lookup_ (cs);		/* find out which one */
       33 	end;
       34 	else type = 0;				/* line contains only $*$ */
       35 
       36 	proper_rtn = rtn_table (type);		/* set up with the desired proc */
       37 	call proper_rtn;				/* and call it */
       38 
       39 
       40 /** 
       41***/
       42 dsd_error: proc;
       43 
       44 /** Unrecognizable $*$ request
       45***/
       46 
       47 /* Apparently Gcos just treats it as data	*/
       48 	     no_input_yet = "0"b;
       49 
       50 	end					/* dsd_error */;
       51 
       52 /**  **/
       53 
       54 dsd_build: proc;
       55 
       56 	     if ^build_mode then do;
       57 		call gtss_write_starCFP_ (up, bp, rl, ec);
       58 		if ec ^= 0 then call gtss_abort_subsystem_ (
       59 		     null (),
       60 		     "gtss_dsd_process_$dsd_build",
       61 		     0,
       62 		     "Couldn't write to *CFP: ^a",
       63 		     string_3
       64 		     );
       65 		call gtss_abort_subsystem_ (
       66 		     null (),
       67 		     "gtss_dsd_process_$dsd_build",
       68 		     0,
       69 		     "<67>BUILD LEVEL SYNCHRONIZATION ERROR"
       70 		     );
       71 	     end;
       72 
       73 	end /* dsd_build */ ;
       74 /**
       75***/
       76 dsd_brk:	proc;
       77 
       78 /** Behaves as though the break key was pressed
       79***/
       80 
       81 	     break_flag = "1"b;
       82 	     signal condition (quit);
       83 
       84 	end					/* dsd_brk */;
       85 
       86 /** 
       87***/
       88 
       89 dsd_copy:	proc;
       90 
       91 	     if gtss_ust.lcjid ^= (36)"0"b then return;	/* DRUN in progress */
       92 
       93 	     i = index (string_3, save_cs);
       94 	     if i = 0 then				/* copy shouldn' have been called if copy not present */
       95 		call gtss_abort_subsystem_ (
       96 		null (),
       97 		"gtss_dsd_process_$dsd_copy",
       98 		0,
       99 		"Copy not present in line, bug: ^a",
      100 		string_3
      101 		);
      102 	     if (rll >= i + 8) then do;
      103 		rls = substr (string_3, i + 4);	/* everything after copy */
      104 		rls = ltrim (rls);			/* get rid of any blanks before second keyword */
      105 		if length (rls) >= 4 then do;		/* long enough for "off" */
      106 		     if (substr (rls, 1, 3) = "off") | (substr (rls, 1, 3) = "OFF")
      107 		     then copy_on = "0"b;
      108 		     else copy_on = "1"b;
      109 		end;
      110 		else copy_on = "1"b;		/* not long enough */
      111 	     end;
      112 	     else copy_on = "1"b;			/* string not long enough to contain off */
      113 
      114 	end					/* dsd_copy */;
      115 /** 
      116***/
      117 
      118 dsd_dele:	proc;
      119 
      120 	     i = index (string_3, save_cs);
      121 	     if i = 0 then				/* dele shouldn' have been called if dele not present */
      122 		call gtss_abort_subsystem_ (
      123 		null (),
      124 		"gtss_dsd_process_$dsd_dele",
      125 		0,
      126 		"Copy not present in line, bug: ^a",
      127 		string_3
      128 		);
      129 	     if (rll >= i + 8) then do;
      130 		rls = substr (string_3, i + 4);	/* everything after dele */
      131 		rls = ltrim (rls);			/* get rid of any blanks before second keyword */
      132 		if length (rls) >= 4 then do;		/* long enough for "off" */
      133 		     if (substr (rls, 1, 3) = "off") | (substr (rls, 1, 3) = "OFF")
      134 		     then dele_on = "0"b;
      135 		     else dele_on = "1"b;
      136 		end;
      137 		else dele_on = "1"b;		/* not long enough */
      138 	     end;
      139 	     else dele_on = "1"b;			/* string not long enough to contain off */
      140 
      141 	end					/* dsd_dele */;
      142 /**  **/
      143 
      144 
      145 dsd_exec:	proc;
      146 
      147 	     if ^user_code then do;
      148 		call gtss_write_starCFP_ (up, bp, rl, ec);
      149 		if ec ^= 0 then call gtss_abort_subsystem_ (
      150 		     null (),
      151 		     "gtss_dsd_process_$dsd_exec",
      152 		     0,
      153 		     "Couldn't write to *CFP: ^a",
      154 		     string_3
      155 		     );
      156 		call gtss_abort_subsystem_ (
      157 		     null (),
      158 		     "gtss_dsd_process_$dsd_exec",
      159 		     0,
      160 		     "<67>EXECUTION LEVEL SYNCHRONIZATION ERROR"
      161 		     );
      162 	     end;
      163 
      164 	end					/* dsd_exec */;
      165 /**  **/
      166 dsd_file:	proc;
      167 
      168 	     talk_on = "0"b;			/* go back to *CFP input */
      169 
      170 	end					/* dsd_file */;
      171 /**  **/
      172 
      173 
      174 dsd_lbl:	proc;
      175 
      176 	     call com_err_ (0, "gtss_dsd_process_$dsd_lbl",
      177 		"Label line encountered ^a", string_3);
      178 
      179 	end					/* dsd_lbl */;
      180 /**  **/
      181 
      182 dsd_mark:	proc;
      183 
      184 
      185 						/* display the line to user as soon as encountered */
      186 	     if rll < 9 then do;			/* line contains only $*$mark */
      187 		rll = 10;
      188 		string_1 (9) = " ";			/* fill line out with blank and CR */
      189 		string_1 (10) = string_1 (8);
      190 	     end;
      191 	     sp2 = addr (string_1 (9));		/* overlay from position 9 */
      192 /* If under drun processing ..init file, write to *CFP */
      193 	     if gtss_ext_$process_type = 2
      194 	     & gtss_ust.lcjid = "0"b
      195 	     & gtss_ext_$drun_jid ^= " "
      196 	     then call gtss_write_starCFP_ (up, sp2, rll - 8, code);
      197 	     else call iox_$put_chars (iox_$user_output, sp2, rll - 8, code);
      198 	     if code ^= 0 then
      199 		call gtss_abort_subsystem_ (
      200 		null (),
      201 		"gtss_dsd_process_$dsd_mark",
      202 		0,
      203 		"Unable to write MARK info to terminal ^a",
      204 		string_3);
      205 
      206 	end					/* dsd_mark */;
      207 /**  **/
      208 
      209 dsd_nbuild: proc;
      210 
      211 	     if build_mode then do;
      212 		call gtss_write_starCFP_ (up, bp, rl, ec);
      213 		if ec ^= 0 then call gtss_abort_subsystem_ (
      214 		     null (),
      215 		     "gtss_dsd_process_$dsd_nbuild",
      216 		     0,
      217 		     "Couldn't write to *CFP: ^a",
      218 		     string_3
      219 		     );
      220 		call gtss_abort_subsystem_ (
      221 		     null (),
      222 		     "gtss_dsd_process_$dsd_nbuild",
      223 		     0,
      224 		     "<67>BUILD LEVEL SYNCHRONIZATION ERROR"
      225 		     );
      226 	     end;
      227 
      228 	end /* dsd_nbuild */ ;
      229 /**  **/
      230 
      231 
      232 dsd_nexec: proc;
      233 
      234 	     if user_code then do;
      235 		call gtss_write_starCFP_ (up, bp, rl, ec);
      236 		if ec ^= 0 then call gtss_abort_subsystem_ (
      237 		     null (),
      238 		     "gtss_dsd_process_$dsd_nexec",
      239 		     0,
      240 		     "Couldn't write to *CFP: ^a",
      241 		     string_3
      242 		     );
      243 		call gtss_abort_subsystem_ (
      244 		     null (),
      245 		     "gtss_dsd_process_$dsd_nexec",
      246 		     0,
      247 		     "<67>EXECUTION LEVEL SYNCHRONIZATION ERROR"
      248 		     );
      249 	     end;
      250 
      251 	end					/* dsd_nexec */;
      252 /**  **/
      253 
      254 dsd_nsys:	proc;
      255 
      256 		/** IGNORED IN GCOS 4J **/
      257 
      258 	end					/* dsd_nsys */;
      259 /**  **/
      260 
      261 dsd_null:	proc;
      262 
      263 	     rll, rl = 2;				/* send null line (CR) to caller */
      264 	     string_3 = CR || NL;
      265 	     if ((^dele_on) & (^gtss_starCF_$FILE.cf.exclude_on))
      266 	     then call gtss_write_starCFP_ (up, bp, rl, ec); /* and send it to *CFP */
      267 	     if ec ^= 0 then call gtss_abort_subsystem_ (
      268 		null (),
      269 		"gtss_dsd_process_$dsd_nbuild",
      270 		0,
      271 		"Couldn't write to *CFP: ^a",
      272 		string_3
      273 		);
      274 	     no_input_yet = "0"b;
      275 
      276 	end					/* dsd_null */;
      277 /**  **/
      278 
      279 dsd_quit:	proc;
      280 
      281 
      282 	     if gtss_ust.lcjid ^= (36)"0"b then do;	/* DRUN in progress */
      283 		cout_called = "0"b;
      284 		call gtss_abandon_CFP_;
      285 		lswt2.b6 = "0"b;
      286 		no_input_yet = "0"b;
      287 		return;
      288 	     end;
      289 
      290 						/* determine if =text option being used */
      291 	     i = index (string_3, save_cs || "=");
      292 	     if i ^= 0 then do;			/* yes, put text prompt in buffer */
      293 		string_3 = substr (string_3, i + 5);
      294 		rll = rll - (i + 4);
      295 		bl = rll;
      296 		call iox_$put_chars (iox_$user_output, bp, bl, ec); /* display msg to user */
      297 		if ec ^= 0 then call gtss_abort_subsystem_ (
      298 		     null (),
      299 		     "gtss_dsd_process_$dsd_quit",
      300 		     0,
      301 		     "Unable to write QUIT info to terminal ^a",
      302 		     string_3);
      303 	     end;
      304 
      305 	     if (^dele_on) then do;			/* if there was a prompt */
      306 		call gtss_read_starCFP_$last_os (up, bp, ml, rl, ec); /* get it */
      307 		if ec ^= 0 then call gtss_abort_subsystem_ (
      308 		     null (),
      309 		     "gtss_dsd_process_$dsd_dsd_quit",
      310 		     0,
      311 		     "Can't read last output sector on *CFP"
      312 		     );
      313 		call iox_$put_chars (iox_$user_output, bp, rl, ec); /* and display it to user */
      314 		if ec ^= 0 then call gtss_abort_subsystem_ (
      315 		     null (),
      316 		     "gtss_dsd_process_$dsd_quit",
      317 		     0,
      318 		     "Unable to write last prompt to terminal ^a",
      319 		     string_3);
      320 	     end;
      321 	     cout_called = "0"b;
      322 	     call gtss_abandon_CFP_;			/* quitting command file processing */
      323 	     lswt2.b6 = "0"b;			/* DD17C, page 3-33.2 */
      324 	     call iox_$get_line (iox_$user_input, bp, ml, rl, ec); /* get his response */
      325 	     no_input_yet = "0"b;			/* and let gtss_CFP_input_ know we have our input */
      326 
      327 	end					/* dsd_quit */;
      328 /**  **/
      329 
      330 dsd_rem:	proc;
      331 
      332 	     call com_err_ (0, "gtss_dsd_process_$dsd_rem",
      333 		"Remark line encountered ^a", string_3);
      334 
      335 	end					/* dsd_rem */;
      336 /**  **/
      337 
      338 dsd_system: proc;
      339 
      340 		/** IGNORED IN GCOS 4J **/
      341 
      342 	end					/* dsd_system */;
      343 /**  **/
      344 
      345 
      346 dsd_talk: dsd_user: proc;
      347 
      348 	     if gtss_ust.lcjid ^= (36)"0"b then return;	/* DRUN in progress */
      349 
      350 	     if cs = "TALK" then talk_on = "1"b;
      351 						/* determine if user is using =text option */
      352 	     i = index (string_3, save_cs || "=");
      353 	     if i ^= 0 then do;			/* yes, put text prompt in buffer */
      354 		string_3 = substr (string_3, i + 5);
      355 		rll = rll - (i + 4);
      356 	     end;
      357 	     else do;				/* no, it will come from *CFP */
      358 		if ^dele_on then do;		/* if dele_on there is no output file */
      359 						/* get the prompt from *CFP's last output sector */
      360 		     call gtss_read_starCFP_$last_os (up, bp, ml, rl, ec);
      361 		     if ec ^= 0 then call gtss_abort_subsystem_ (
      362 			null (),
      363 			"gtss_dsd_process_$dsd_talk/dsd_user",
      364 			0,
      365 			"Can't read last output sector on *CFP"
      366 			);
      367 		     else rll = rl;
      368 		end;
      369 	     end;
      370 						/* write prompt to terminal */
      371 	     if ((i ^= 0) | (^dele_on)) then do;	/* there is a prompt */
      372 		bl = rll;
      373 		call iox_$put_chars (iox_$user_output, bp, bl, ec);
      374 		if ec ^= 0 then
      375 		     call gtss_abort_subsystem_ (
      376 		     null (),
      377 		     "gtss_dsd_process_$dsd_talk/dsd_user",
      378 		     0,
      379 		     "Can't display prompt to user"
      380 		     );
      381 	     end;
      382 	     else;				/* there was no prompt */
      383 	     if ^talk_on then do;
      384 		talk_on = "1"b;			/* user request, so fudge talk_on for one input */
      385 		call gtss_CFP_input_ (up, bp, ml, rl, ec); /* get line from terminal */
      386 		talk_on = "0"b;			/* turn off fudged mode */
      387 		no_input_yet = "0"b;		/* let gtss_CFP_input_ know we have our line */
      388 	     end;
      389 	     else;				/* let gtss_CFP_input_ get line normally */
      390 	end					/* dsd_user dsd_talk */;
      391 /*  * */
      392 
      393 
      394 dsd_trap:	proc;
      395 
      396 
      397 	     i = index (string_3, save_cs);
      398 	     if i = 0 then				/* trap shouldn' have been called if trap not present */
      399 		call gtss_abort_subsystem_ (
      400 		null (),
      401 		"gtss_dsd_process_$dsd_trap",
      402 		0,
      403 		"Trap not present in line, bug: ^a",
      404 		string_3
      405 		);
      406 	     if (rll >= i + 8) then do;
      407 		rls = substr (string_3, i + 4);	/* everything after trap */
      408 		rls = ltrim (rls);			/* get rid of any blanks before second keyword */
      409 		if length (rls) >= 4 then do;		/* long enough for "off" */
      410 		     if (substr (rls, 1, 3) = "off") | (substr (rls, 1, 3) = "OFF")
      411 		     then trap_off = "1"b;
      412 		     else trap_off = "0"b;
      413 		end;
      414 		else trap_off = "0"b;		/* not long enough */
      415 	     end;
      416 	     else trap_off = "0"b;			/* string not long enough to contain off */
      417 
      418 	end					/* dsd_trap */;
      419 
      420 
      421 /**        gtss_dsd_process_ local dcl's
      422***/
      423 dcl  up                       ptr parm /* (NOT USED. Needed for iox_ compatibility). */;
      424 dcl  bp                       ptr parm /* (input) Callers buffer. */;
      425 dcl  ml                       fixed bin(21)parm /* (input) Buffer length limit. */;
      426 dcl  rl                       fixed bin(21)parm /* (output) Number characters returned. */;
      427 dcl  ec                       fixed bin(35)parm /* (output) Multics error ec. */;
      428 dcl  CR                       char(1)static int options(constant) init("");
      429 dcl NL			char(1) static int options(constant) init ("
      430 ");
      431 dcl  rls char (252) varying;
      432 dcl string_1 (rll) char (1) based (bp);
      433 dcl string_2 (rll - 9) char (1) based (sp2);
      434 dcl  string_3 char (rll) based (bp);
      435 dcl sp2 ptr init (null());
      436 dcl (cs, save_cs) char (8) varying;
      437 dcl (rll, cp, type, i) fixed bin (24);
      438 dcl bl fixed bin (21);
      439 dcl code fixed bin (35) init (0);
      440 dcl (ltrim, null, substr, index, addr, length, translate) builtin;
      441 dcl quit condition external;
      442 dcl iox_$get_line entry (ptr, ptr, fixed bin (21), fixed bin (21), fixed bin (35));
      443 dcl iox_$put_chars entry (ptr, ptr, fixed bin (21), fixed bin (35));
      444 dcl iox_$user_input ptr ext;
      445 dcl iox_$user_output ptr ext;
      446 dcl proper_rtn entry int variable;
      447 dcl rtn_table (0:18) entry init (
      448 	dsd_error,
      449 	dsd_brk,
      450 	dsd_build,
      451 	dsd_copy,
      452 	dsd_dele,
      453 	dsd_exec,
      454 	dsd_file,
      455 	dsd_lbl,
      456 	dsd_mark,
      457 	dsd_nbuild,
      458 	dsd_nexec,
      459 	dsd_nsys,
      460 	dsd_null,
      461 	dsd_quit,
      462 	dsd_rem,
      463 	dsd_system,
      464 	dsd_talk,
      465 	dsd_trap,
      466 	dsd_user);
      467 
      468 
  1     1 /* BEGIN INCLUDE FILE gtss_CFP_bits.incl.pl1 */
  1     2 /*
  1     3*   Created:  (Dupuis Multics)  05/08/79 1031.7 mst Tue 
  1     4**/
  1     5 
  1     6 
  1     7 dcl CFP_in_progress		bit (1) unaligned defined lflg2.b8;
  1     8 dcl dele_on		bit (1) unaligned defined lflg2.b0;
  1     9 dcl copy_on		bit (1) unaligned defined lflg2.b1;
  1    10 dcl talk_on		bit (1) unaligned defined lflg2.b4;
  1    11 dcl user_code		bit (1) unaligned defined lflg2.b14;
  1    12 dcl trap_off		bit (1) unaligned defined lswt2.b5;
  1    13 dcl break_flag		bit (1) unaligned defined lflg3.b31;
  1    14 
  1    15 
  1    16 /*   END INCLUDE FILE gtss_CFP_bits.incl.pl1 */
      469 
      470 /** 
      471***/
  2     1 /* BEGIN INCLUDE FILE gtss_starCF_.incl.pl1 */
  2     2 /*
  2     3*  Created: (Wardd Multics)  03/20/79 1816.6 mst Tue 
  2     4**/
  2     5 
  2     6 /*
  2     7*   gtss_CFP_input_ data structure to provide
  2     8*   for accessing the current command file.
  2     9*
  2    10*   Changed: Al Dupuis 05/17/79 to get rid of nested get_line, put_chars concept.
  2    11**/
  2    12 dcl	1 gtss_starCF_$FILE	aligned static ext
  2    13 ,	  3 select_sequence
  2    14 ,	    4 OP1			/* Seek operation. */
  2    15 ,	      5 Device_Command	bit(06)unal
  2    16 ,	      5 zeroes_1		fixed bin(12)unsigned unal
  2    17 ,	      5 IOC_Command		bit(05)unal
  2    18 ,	      5 zeroes_2		fixed bin(01)unsigned unal
  2    19 ,	      5 Control		fixed bin(06)unsigned unal
  2    20 ,	      5 Count		fixed bin(06)unsigned unal
  2    21 
  2    22 ,	    4 ID1
  2    23 ,	      5 fcb_loc		bit(18)unal
  2    24 ,	      5 DCW_list_loc	bit(18)unal
  2    25 
  2    26 ,	    4 OP2			/* Write opteration. */
  2    27 ,	      5 Device_Command	bit(06)unal
  2    28 ,	      5 zeroes_1		fixed bin(12)unsigned unal
  2    29 ,	      5 IOC_Command		bit(05)unal
  2    30 ,	      5 zeroes_2		fixed bin(01)unsigned unal
  2    31 ,	      5 Control		fixed bin(06)unsigned unal
  2    32 ,	      5 Count		fixed bin(06)unsigned unal
  2    33 
  2    34 ,	    4 ID2
  2    35 ,	      5 fcb_loc		bit(18)unal
  2    36 ,	      5 DCW_list_loc	bit(18)unal
  2    37 
  2    38 ,	    4 RETURN_WORD
  2    39 ,	      5 Status_loc		bit(18)unal
  2    40 ,	      5 Courtesy_Call_loc	bit(18)unal
  2    41 
  2    42 ,	  3 Seek_Word
  2    43 ,	    4 Seek_loc		bit(18)unal
  2    44 ,	    4 Seek_count		fixed bin(18)unsigned unal
  2    45 ,	  3 Seek_Address		fixed bin(35)
  2    46 ,	  3 STATUS		bit(72) unal
  2    47 
  2    48 ,	  3 DCW
  2    49 ,	    4 memory_loc		bit(18)unal
  2    50 ,	    4 zeroes_3		fixed bin(03)unsigned unal
  2    51 ,	    4 action_code		fixed bin(03)unsigned unal
  2    52 ,	    4 word_count		fixed bin(12)unsigned unal
  2    53 
  2    54 ,	  3 RECORD
  2    55 ,	    4 no_characters		fixed bin(18)unsigned unal
  2    56 ,	    4 zeroes_4		bit(18)unal
  2    57 ,	    4 chars		char(252)
  2    58 
  2    59 /* Stack to accomodate nested command file processing. */
  2    60 ,	  3 cf
  2    61 ,	    4 top			fixed bin(24)
  2    62 ,	    4 aft_indx		fixed bin(24)
  2    63 ,             4 first_time		bit (1) unaligned
  2    64 ,             4 exclude_on    	bit (1) unaligned
  2    65 ;
  2    66 
  2    67 /*   END INCLUDE FILE gtss_starCF_.incl.pl1 */
      472 
      473 /** 
      474***/
  3     1 /* BEGIN INCLUDE FILE gtss_ust_ext_.incl.pl1 */
  3     2 /* UST: User Status Table 
  3     3*   definitions based on 
  3     4*   System Tables, Order number DD14-01E, January 1981
  3     5*   Section 15, Time Sharing System
  3     6*
  3     7*   Authors: Robert J. Grimes	Created
  3     8*   -	  Albert N. Kepner	  1978
  3     9*   -	  Robert M. May
  3    10*   -	  David B. Ward
  3    11*   Change:  Dave Ward	02/23/79 Level 4 numbering.
  3    12*   Change:  Ron Barstad  83-07-12 Repaired damaged formating and word offset comments
  3    13*                                  Brought up to 4JS3 functionality
  3    14**/
  3    15 /* octal word offsets of entries */
  3    16 dcl 1 gtss_ust_ext_$ust aligned ext,
  3    17       3 gtss_ust,
  3    18 /* 0-1  */	4 lid		bit (72),
  3    19 /* 2    */	4 lstp		bit (36),
  3    20 /* 3    */	4 ltin		bit (36),
  3    21 /* 4    */	4 lstio,
  3    22 			5 no_of_chars_by_8  fixed bin (18) uns unal,
  3    23 			5 no_of_disk_io     fixed bin (18) uns unal,
  3    24 /* 5    */	4 lsnub		bit (36),
  3    25 /* 6-7  */	4 lchg		bit (72),
  3    26 /* 10   */	4 lbuf,
  3    27 			5 address		bit (18)unaligned,
  3    28 			5 tally		bit (1)unaligned,
  3    29 			5 terminal_type	bit (5)unaligned,
  3    30 			5 station_id	bit (12)unaligned,
  3    31 /* 11-12 */	4 liost (0:1)	bit (36),
  3    32 /* 13   */	4 lcc		bit (36),
  3    33 /* 14   */	4 lback,
  3    34 			5 fill1		bit (18) unaligned,
  3    35 			5 gwake		fixed bin (17) unaligned,
  3    36 /* 15   */	4 lflag,
  3    37 			5 mp_list		bit (18) unaligned,
  3    38 			5 flags unaligned,
  3    39 				6 b18		bit (1) unaligned,
  3    40 				6 b19		bit (1) unaligned,
  3    41 				6 b20		bit (1) unaligned,
  3    42 				6 b21		bit (1) unaligned,
  3    43 				6 b22		bit (1) unaligned,
  3    44 				6 b23		bit (1) unaligned,
  3    45 				6 b24		bit (1) unaligned,
  3    46 				6 b25		bit (1) unaligned,
  3    47 				6 b26		bit (1) unaligned,
  3    48 				6 b27		bit (1) unaligned,
  3    49 				6 b28		bit (1) unaligned,
  3    50 				6 b29		bit (1) unaligned,
  3    51 				6 b30		bit (1) unaligned,
  3    52 				6 b31		bit (1) unaligned,
  3    53 				6 b32		bit (1) unaligned,
  3    54 				6 b33		bit (1) unaligned,
  3    55 				6 b34		bit (1) unaligned,
  3    56 				6 b35		bit (1) unaligned,
  3    57 /* 16   */	4 lkdss		bit (36),
  3    58 /* 17   */	4 lfile,
  3    59 			5 program_stack	fixed bin (17) unal,
  3    60 			5 file_list_ptr	bit (18) unal,
  3    61 /* 20   */	4 lttys		bit (36),
  3    62 /* 21   */	4 lswth,
  3    63 			5 b0		bit (1) unaligned,
  3    64 			5 b1		bit (1) unaligned,
  3    65 			5 b2		bit (1) unaligned,
  3    66 			5 b3		bit (1) unaligned,
  3    67 			5 b4		bit (1) unaligned,
  3    68 			5 b5		bit (1) unaligned,
  3    69 			5 b6		bit (1) unaligned,
  3    70 			5 b7		bit (1) unaligned,
  3    71 			5 b8		bit (1) unaligned,
  3    72 			5 b9		bit (1) unaligned,
  3    73 			5 b10		bit (1) unaligned,
  3    74 			5 b11		bit (1) unaligned,
  3    75 			5 b12		bit (1) unaligned,
  3    76 			5 b13		bit (1) unaligned,
  3    77 			5 b14		bit (1) unaligned,
  3    78 			5 b15		bit (1) unaligned,
  3    79 			5 b16		bit (1) unaligned,
  3    80 			5 b17		bit (1) unaligned,
  3    81 			5 b18		bit (1) unaligned,
  3    82 			5 b19		bit (1) unaligned,
  3    83 			5 b20		bit (1) unaligned,
  3    84 			5 b21		bit (1) unaligned,
  3    85 			5 b22		bit (1) unaligned,
  3    86 			5 b23		bit (1) unaligned,
  3    87 			5 b24		bit (1) unaligned,
  3    88 			5 b25		bit (1) unaligned,
  3    89 			5 b26		bit (1) unaligned,
  3    90 			5 b27		bit (1) unaligned,
  3    91 			5 b28		bit (1) unaligned,
  3    92 			5 b29		bit (1) unaligned,
  3    93 			5 b30		bit (1) unaligned,
  3    94 			5 b31		bit (1) unaligned,
  3    95 			5 b32		bit (1) unaligned,
  3    96 			5 b33		bit (1) unaligned,
  3    97 			5 b34		bit (1) unaligned,
  3    98 			5 b35		bit (1) unaligned,
  3    99 /* 22   */	4 lsize,
  3   100 			5 bar		fixed bin (17) unaligned,
  3   101 			5 limit		bit (18) unaligned,
  3   102 /* 23... */	4 lswap,
  3   103 			5 fill		bit (18) unal,
  3   104 			5 size		bit (18) unal,
  3   105 /* ...24 */	4 transfer_cell	bit (36) unal,
  3   106 /* 25   */	4 lerrm		bit (36),
  3   107 /* 26-37 */	4 lcfil (0:9)	bit (36),
  3   108 /* 40   */	4 lsybc,
  3   109 			5 b0_17		fixed bin (17) unaligned,
  3   110 			5 b18_35		fixed bin (17) unaligned,
  3   111 /* 41-42 */	4 lstem (0:1)	bit (36),
  3   112 /* 43    */	4 lcals,
  3   113 			5 b0_17		fixed bin (17) unaligned,
  3   114 			5 b18_35		bit (18) unaligned,
  3   115 /* 44-51 */	4 subsystems (3),
  3   116 			5 content_lswap,
  3   117 				6 fill		bit (18) unal,
  3   118 				6 size		bit (18) unal,
  3   119 			5 tally_address	fixed bin (17) unaligned,
  3   120 			5 ss_flags	bit (18) unaligned,
  3   121 /* 52   */	4 ltalc,
  3   122 			5 tod		fixed bin (17) unaligned,
  3   123 			5 startup		fixed bin (17) unaligned,
  3   124 /* 53   */	4 lspts		fixed bin (35),
  3   125 /* 54   */	4 lflg2,
  3   126 			5 b0		bit (1) unaligned,
  3   127 			5 b1		bit (1) unaligned,
  3   128 			5 b2		bit (1) unaligned,
  3   129 			5 b3		bit (1) unaligned,
  3   130 			5 b4		bit (1) unaligned,
  3   131 			5 b5		bit (1) unaligned,
  3   132 			5 b6		bit (1) unaligned,
  3   133 			5 b7		bit (1) unaligned,
  3   134 			5 b8		bit (1) unaligned,
  3   135 			5 b9		bit (1) unaligned,
  3   136 			5 b10		bit (1) unaligned,
  3   137 			5 b11		bit (1) unaligned,
  3   138 			5 b12		bit (1) unaligned,
  3   139 			5 b13		bit (1) unaligned,
  3   140 			5 b14		bit (1) unaligned,
  3   141 			5 b15		bit (1) unaligned,
  3   142 			5 b16		bit (1) unaligned,
  3   143 			5 b17		bit (1) unaligned,
  3   144 			5 b18		bit (1) unaligned,
  3   145 			5 b19		bit (1) unaligned,
  3   146 			5 b20		bit (1) unaligned,
  3   147 			5 b21		bit (1) unaligned,
  3   148 			5 b22		bit (1) unaligned,
  3   149 			5 b23		bit (1) unaligned,
  3   150 			5 b24		bit (1) unaligned,
  3   151 			5 b25		bit (1) unaligned,
  3   152 			5 b26		bit (1) unaligned,
  3   153 			5 b27		bit (1) unaligned,
  3   154 			5 b28		bit (1) unaligned,
  3   155 			5 b29		bit (1) unaligned,
  3   156 			5 b30		bit (1) unaligned,
  3   157 			5 b31		bit (1) unaligned,
  3   158 			5 b32		bit (1) unaligned,
  3   159 			5 b33		bit (1) unaligned,
  3   160 			5 b34		bit (1) unaligned,
  3   161 			5 b35		bit (1) unaligned,
  3   162 /* 55-60 */	4 lsftm (0:3)	bit (36),
  3   163 /* 61    */	4 lsprt		fixed bin (35),
  3   164 /* 62    */	4 ltrm		bit (36),
  3   165 /* 63    */	4 linno		fixed bin (35),
  3   166 /* 64    */	4 lincr		fixed bin (35),
  3   167 /* 65    */	4 ltdes		bit (36),
  3   168 /* 66    */	4 lbptr		bit (36),
  3   169 /* 67    */	4 lpptr,
  3   170 			5 last_file_pat_ptr	bin (18) uns unal,
  3   171 			5 lpptr_reserved	bin (18) uns unal,
  3   172 /* 70    */	4 lsclp		bit (36),
  3   173 /* 71    */	4 limit		fixed bin (35),
  3   174 /* 72    */	4 lacpt,
  3   175 			5 jout_pat_offset	bit (18) unal,
  3   176 			5 permissions unal,
  3   177 				6 lodx		bit (1) unal,
  3   178 				6 cardin		bit (1) unal,
  3   179 				6 talk		bit (1) unal,
  3   180 				6 lods		bit (1) unal,
  3   181 			5 cardin_urgency	bit (14) unal,
  3   182 /* 73    */	4 ldrl,
  3   183 			5 ilc		bit (18) unaligned,
  3   184 			5 code		fixed bin (17) unaligned,
  3   185 /* 74    */	4 ljsnb		bit (36),
  3   186 /* 75    */	4 ltm0		bit (36),
  3   187 /* 76    */	4 ltm1		bit (36),
  3   188 /* 77    */	4 ltm2		bit (36),
  3   189 /* 100   */	4 ltm3		bit (36),
  3   190 /* 101   */	4 ltm4		bit (36),
  3   191 /* 102   */	4 ltm5		bit (36),
  3   192 /* 103   */	4 ltmwt		bit (36),
  3   193 /* 104   */	4 ltmrs		bit (36),
  3   194 /* 105   */	4 ltc0		bit (36),
  3   195 /* 106   */	4 ltc1		bit (36),
  3   196 /* 107   */	4 ltc2		bit (36),
  3   197 /* 110   */	4 lct3		bit (36),
  3   198 /* 111   */	4 ltc4		bit (36),
  3   199 /* 112   */	4 ltc5		bit (36),
  3   200 /* 113   */	4 ltcw		bit (36),
  3   201 /* 114   */	4 lkst		bit (36),
  3   202 /* 115   */	4 lkst2		bit (36),
  3   203 /* 116   */	4 lkcc		bit (36),
  3   204 /* 117   */	4 lkms		bit (36),
  3   205 /* 120-121 */	4 lksdc (0:1)	bit (36),
  3   206 /* 122   */	4 lkntp		bit (36),
  3   207 /* 123   */	4 lkrdc		bit (36),
  3   208 /* 124   */	4 lpqf		bit (36),
  3   209 /* 125   */	4 lpqb		bit (36),
  3   210 /* 126   */	4 lustl		bit (36),
  3   211 /* 127   */	4 ltemp		bit (36),
  3   212 /* 130   */	4 lrtll,
  3   213 			5 word_length	fixed bin unaligned,
  3   214 			5 char_length	fixed bin unaligned,
  3   215 /* 131   */	4 ltim		bit (36),
  3   216 /* 132   */	4 lcfio,
  3   217 			5 sect_out	fixed bin(18)unsigned unal,
  3   218 			5 sect_in		fixed bin(18)unsigned unal,
  3   219 /* 133   */	4 lcfst,
  3   220 			5 initial_sect_out	fixed bin(18)unsigned unal,
  3   221 			5 start_term	fixed bin(18)unsigned unal,
  3   222 /* 134   */	4 lcmpt		bit (36),
  3   223 /* 135   */	4 lcjid		bit (36),
  3   224 /* 136-137 */	4 lrcal (0:1)	bit (36),
  3   225 /* 140   */	4 lrdta		bit (36),
  3   226 /* 141   */	4 lrrsk		bit (36),
  3   227 /* 142   */	4 lrskd		bit (36),
  3   228 /* 143   */	4 lrcc		bit (36),
  3   229 /* 144-145 */	4 lrsts (0:1)	bit (36),
  3   230 /* 146   */	4 lrtm		bit (36),
  3   231 /* 147   */	4 lswt2,
  3   232 			5 b0		bit (1) unaligned,
  3   233 			5 b1		bit (1) unaligned,
  3   234 			5 b2		bit (1) unaligned,
  3   235 			5 b3		bit (1) unaligned,
  3   236 			5 b4		bit (1) unaligned,
  3   237 			5 b5		bit (1) unaligned,
  3   238 			5 b6		bit (1) unaligned,
  3   239 			5 b7		bit (1) unaligned,
  3   240 			5 b8		bit (1) unaligned,
  3   241 			5 b9		bit (1) unaligned,
  3   242 			5 b10		bit (1) unaligned,
  3   243 			5 b11		bit (1) unaligned,
  3   244 			5 b12		bit (1) unaligned,
  3   245 			5 b13		bit (1) unaligned,
  3   246 			5 b14		bit (1) unaligned,
  3   247 			5 b15		bit (1) unaligned,
  3   248 			5 b16		bit (1) unaligned,
  3   249 			5 b17		bit (1) unaligned,
  3   250 			5 b18		bit (1) unaligned,
  3   251 			5 b19		bit (1) unaligned,
  3   252 			5 b20		bit (1) unaligned,
  3   253 			5 b21		bit (1) unaligned,
  3   254 			5 b22		bit (1) unaligned,
  3   255 			5 b23		bit (1) unaligned,
  3   256 			5 b24		bit (1) unaligned,
  3   257 			5 b25		bit (1) unaligned,
  3   258 			5 b26		bit (1) unaligned,
  3   259 			5 b27		bit (1) unaligned,
  3   260 			5 b28		bit (1) unaligned,
  3   261 			5 b29		bit (1) unaligned,
  3   262 			5 b30		bit (1) unaligned,
  3   263 			5 b31		bit (1) unaligned,
  3   264 			5 b32		bit (1) unaligned,
  3   265 			5 b33		bit (1) unaligned,
  3   266 			5 b34		bit (1) unaligned,
  3   267 			5 b35		bit (1) unaligned,
  3   268 /* 150   */	4 llsnb		bit (36),
  3   269 /* 151   */	4 lesq		bit (36),
  3   270 /* 152-153 */	4 lumc (0:1)	bit (36),
  3   271 /* 154-155 */	4 lfnam (0:1)	bit (36),
  3   272 /* 156   */	4 lopts		bit (36),
  3   273 /* 157   */	4 licec,
  3   274 			5 b0_17		bit (18) unaligned,
  3   275 			5 b18_35		fixed bin (17) unaligned,
  3   276 /* 160   */	4 lflg3,
  3   277 			5 b0		bit (1) unaligned,
  3   278 			5 b1		bit (1) unaligned,
  3   279 			5 b2		bit (1) unaligned,
  3   280 			5 b3		bit (1) unaligned,
  3   281 			5 b4		bit (1) unaligned,
  3   282 			5 b5		bit (1) unaligned,
  3   283 			5 b6		bit (1) unaligned,
  3   284 			5 b7		bit (1) unaligned,
  3   285 			5 b8		bit (1) unaligned,
  3   286 			5 b9		bit (1) unaligned,
  3   287 			5 b10		bit (1) unaligned,
  3   288 			5 b11		bit (1) unaligned,
  3   289 			5 b12		bit (1) unaligned,
  3   290 			5 b13		bit (1) unaligned,
  3   291 			5 b14		bit (1) unaligned,
  3   292 			5 b15		bit (1) unaligned,
  3   293 			5 b16		bit (1) unaligned,
  3   294 			5 b17		bit (1) unaligned,
  3   295 			5 b18		bit (1) unaligned,
  3   296 			5 b19		bit (1) unaligned,
  3   297 			5 b20		bit (1) unaligned,
  3   298 			5 b21		bit (1) unaligned,
  3   299 			5 b22		bit (1) unaligned,
  3   300 			5 b23		bit (1) unaligned,
  3   301 			5 b24		bit (1) unaligned,
  3   302 			5 b25		bit (1) unaligned,
  3   303 			5 b26		bit (1) unaligned,
  3   304 			5 b27		bit (1) unaligned,
  3   305 			5 b28		bit (1) unaligned,
  3   306 			5 b29		bit (1) unaligned,
  3   307 			5 b30		bit (1) unaligned,
  3   308 			5 b31		bit (1) unaligned,
  3   309 			5 b32		bit (1) unaligned,
  3   310 			5 b33		bit (1) unaligned,
  3   311 			5 b34		bit (1) unaligned,
  3   312 			5 b35		bit (1) unaligned,
  3   313 /* 161-163 */	4 lpage (0:2)	bit (36),
  3   314 /* 164   */	4 lsit1		bit (36),
  3   315 /* 165   */	4 lsit2		bit (36),
  3   316 /* 166   */	4 lsit3		bit (36),
  3   317 /* 167   */	4 lsit4		bit (36),
  3   318 /* The following entries are maintained by gtss and are not found in TSS UST */
  3   319 /* 170   */	4 lxxx, /* program stack index, offset from gtss_ust */
  3   320 			5 b0_17		fixed bin (17) unaligned,
  3   321 			5 b18_35		bit (18) unaligned, /* not used */
  3   322 /* 171-175 */	4 lprgs (5),
  3   323 			5 b0_17		fixed bin (17) unaligned,
  3   324 			5 b18_35		fixed bin (17) unaligned,
  3   325 /* 176   */	4 fill	bit (36),
  3   326 /* 177   */	4 remote_io_buffer aligned,
  3   327 			5 buffer_control_word,
  3   328 				6 current_line_pointer  bit (18)unal,
  3   329 				6 buffer_threshold_address  bit (18)unal,
  3   330 			5 number_words_transmitted	fixed bin (17)unal,
  3   331 			5 FILL1			fixed bin (17)unal,
  3   332 			5 count_of_characters_transmitted fixed bin (17)unal,
  3   333 			5 FILL2			fixed bin (17)unal,
  3   334 			5 characters_transmitted (244) char (1) unal,
  3   335 /* 277   */	4 word_after_ust		bit (36) aligned;
  3   336 
  3   337 /*   END INCLUDE FILE gtss_ust_ext_.incl.pl1 */
      475 
      476 /** 
      477***/
  4     1 /* BEGIN INCLUDE FILE gtss_ext_.incl.pl1 */
  4     2 /*
  4     3*  Created: (Wardd Multics)  05/20/78 1307.6 mst Sat 
  4     4*  Modified: Ward            1981     add suspended_process dcl
  4     5*  Modified: Ron Barstad  83-07-21  Fixed level number on mcfc to 3
  4     6*  Modified: Ron Barstad  83-07-25  Fixed derail range in statistics to 4js3 number
  4     7**/
  4     8 dcl  gtss_ext_$aem                   fixed bin static ext	/* >0 Print "additional" error information. */;
  4     9 dcl  gtss_ext_$bad_drl_rtrn          static ext label	/* Default for drl_rtrn. */;
  4    10 dcl  gtss_ext_$db                    (72)bit(1)unal static ext;
  4    11 dcl  gtss_ext_$deferred_catalogs_ptr ptr ext;
  4    12 dcl  gtss_ext_$dispose_of_drl        static ext label	/* quit handlers for some derails use this label to abort */;
  4    13 dcl  gtss_ext_$drl_rtrn              (4)static ext label	/* where to return at subsystem end */;
  4    14 dcl  gtss_ext_$drm_path              char(168)static ext	/* gtss_expand_pathname_stores drm_path */;
  4    15 dcl  gtss_ext_$drun_jid              char (5) static ext	/* valid only for DRUN executing under absentee */;
  4    16 dcl  gtss_ext_$event_channel         fixed bin (71) static ext	/* used for DABT signals */;
  4    17 dcl  gtss_ext_$finished              static ext label	/* Return to gtss for normal conclusion. */;
  4    18 dcl  gtss_ext_$gdb_name              char(8)ext	/* Name H* module to debug. */;
  4    19 dcl  gtss_ext_$get_line              entry(ptr,ptr,fixed bin(21),fixed bin(21),fixed bin(35))variable ext /* Build mode input procedure. */;
  4    20 dcl  gtss_ext_$gtss_slave_area_seg   (4) ext static ptr	/* pointer to gtss slave area segment */;
  4    21 dcl  gtss_ext_$hcs_work_area_ptr     ptr ext static		/* Temp seg for acl lists. */;
  4    22 dcl  gtss_ext_$homedir               char (64) static ext /* user's home dir */;
  4    23 dcl  gtss_ext_$last_k_was_out        bit (1)aligned ext static	/* "1"b => last tty output was output. */;
  4    24 dcl  gtss_ext_$pdir                  char (168) varying ext static	/* pathname of process directory */;
  4    25 dcl  gtss_ext_$popup_from_pi         static ext label	/* transfer to this label after pi simulates popup primitive */;
  4    26 dcl  gtss_ext_$process_type          fixed bin (17) static ext;
  4    27 dcl  gtss_ext_$put_chars             entry(ptr,ptr,fixed bin(24),fixed bin(35)) variable ext	/* Terminal output procedure. */;
  4    28 dcl  gtss_ext_$restart_from_pi       static ext label	/* transfer to this label after pi restores machine conditions */;
  4    29 dcl  gtss_ext_$restart_seg_ptr       ptr static ext	/* points to DRUN restart file when exec under absentee */;
  4    30 dcl  gtss_ext_$sig_ptr               ext static ptr	/* saved ptr to signal_ */;
  4    31 dcl  gtss_ext_$stack_level_          fixed bin ext static;
  4    32 dcl  gtss_ext_$suspended_process     bit(1) ext static;
  4    33 dcl  gtss_ext_$SYstarstar_file_no    fixed bin (24) static ext;
  4    34 dcl  gtss_ext_$user_id               char (26)var ext;
  4    35 dcl  gtss_ext_$work_area_ptr         ptr ext;
  4    36 
  4    37 dcl  1 gtss_ext_$CFP_bits aligned static external
  4    38      , 3 no_input_yet bit (1) unaligned         /* used in gtss_CFP_input_, gtss_read_starCFP_ */
  4    39      , 3 rtn_bits bit (4) unaligned             /* used in gtss_CFP_input_, gtss_CFP_output_ */
  4    40      , 3 cpos_called bit (1) unaligned          /* used in gtss_CFP_input_, gtss_drl_t_cfio_, gtss_abandon_CFP_ */
  4    41      , 3 cout_called bit (1) unaligned          /* used in gtss_read_starCFP_, gtss_abandon_CFP_ */
  4    42      , 3 build_mode bit (1) unaligned	        /* used in gtss_build_, gtss_dsd_process_ */
  4    43      ;
  4    44 
  4    45 dcl 1 gtss_ext_$com_reg aligned static ext,
  4    46        3 tsdmx,
  4    47          4 dst fixed bin (18) unsigned unaligned,
  4    48          4 dit fixed bin (18) unsigned unaligned,
  4    49        3 tsdpt fixed bin (36) unsigned unaligned,
  4    50        3 tsddt fixed bin (36) unsigned unaligned,
  4    51        3 tsdid bit (72) unaligned,
  4    52        3 tsdsd bit (36) unaligned,
  4    53        3 tsdst fixed bin (36) unsigned unaligned,
  4    54        3 tsdjb fixed bin (35) unaligned,
  4    55        3 tsdgt,
  4    56          4 ust_loc fixed bin (18) unsigned unaligned,
  4    57          4 gating_ctl fixed bin (18) unsigned unaligned,
  4    58        3 tcdfr bit (36) unaligned;
  4    59 
  4    60 dcl 1 gtss_ext_$flags aligned static ext
  4    61      , 3 dispose_of_drl_on_pi	bit (01) unal	/* 1 => drl that should be aborted after quit-pi sequence */
  4    62      , 3 drl_in_progress	bit (01) unal	/* 1 => drl handler executing; 0 => gcos code executing */
  4    63      , 3 popup_from_pi	bit (01) unal	/* 1 => derail processor will simulate Gcos break instead of returning */
  4    64      , 3 unfinished_drl	bit (01) unal	/* 1 => subsystem is handling breaks and quit was raised during a drl */
  4    65      , 3 ss_time_limit_set	bit (01) unal	/* 1 => exec time limit set for subsystem */
  4    66      , 3 timer_ranout	bit (01) unal	/* 1 => user is executing timer runout code */
  4    67      , 3 gtss_com_err_sw      bit (01) unal       /* 1 => stop com_err_ string from going to terminal */   
  4    68      , 3 available		bit (65) unal
  4    69      ;
  4    70 
  4    71 
  4    72 dcl 1 gtss_ext_$statistics aligned static ext,		/* Derail usage statistics */
  4    73       3 total_time (-10:71)fixed bin (71),
  4    74       3 count (-10:71)fixed bin (17);
  4    75 
  4    76 /* 	Declaration of Available File Table
  4    77*   */
  4    78 dcl 1 gtss_ext_$aft aligned ext,			/* aft structure */
  4    79 
  4    80       3 start_list (0:102) fixed bin (24),		/* >0 => 1st aft_entry row to start of next entry chain. */
  4    81 
  4    82       3 aft_entry (20),
  4    83         4 altname char (8),				/* altname name for attaching this file */
  4    84         4 next_entry fixed bin (24),			/* Next aft_entry in hash chain. */
  4    85         4 previous_add fixed bin (24),			/* Previously added entry. */
  4    86         4 next_add fixed bin (24),			/* Entry added after this one. */
  4    87         4 used bit (1) unal,				/* "1"b => aft_entry contains AFT value. */
  4    88         4 forced bit(1) unal,				/* "1"b => gtss_verify_access_ forced access on this file. */
  4    89 
  4    90       3 free_space fixed bin (24),			/* Index of start of free space list for aft entries. */
  4    91       3 first_added fixed bin (24),			/* >0  => start of chain in add order. */
  4    92       3 last_added fixed bin (24)			/* >0 => end of chain in added order. */;
  4    93 
  4    94 dcl  gtss_ext_$ppt                   ptr ext /*  switch name for tapein drl */;
  4    95 /**	Data structure to provide access to installed
  4    96*   subsystems fast library load.
  4    97*   **/
  4    98 dcl 1 gtss_ext_$fast_lib aligned ext
  4    99      , 3 fast_lib_fcb ptr				/* Pointer to msf fcb.	*/
  4   100      , 3 fast_lib_ncp fixed bin (24)			/* Number of components. */
  4   101      , 3 comp_ptr (0:9)ptr				/* Pointer to component. */
  4   102      , 3 comp_wds (0:9)fixed bin (24)			/* Component length (words). */
  4   103      ;
  4   104 
  4   105 /* Pointers to segments to regulate multipler
  4   106*   callers to files. Same segments are used to regulate
  4   107*   all simulator callers.
  4   108**/
  4   109 dcl 1 gtss_ext_$mcfc	aligned ext,
  4   110       3 multics_lock_id	bit(36),
  4   111       3 wait_time		fixed bin,
  4   112       3 files_ptr		ptr,
  4   113       3 names_ptr		ptr,
  4   114       3 callers_ptr		(0:3)ptr
  4   115 ;
  4   116 
  4   117 /*   END INCLUDE FILE gtss_ext_.incl.pl1 */
      478 
      479 /** 
      480***/
  5     1 /* BEGIN INCLUDE FILE gtss_entry_dcls.incl.pl1 */
  5     2 /*
  5     3*  Created: (Wardd Multics)  06/30/78 1624.8 mst Fri 
  5     4*  Modified: Ron Barstad  84-02-24  Fixed wrong and obsolete entries
  5     5**/
  5     6 
  5     7 /**  gtss external entry variables.		**/
  5     8 dcl  com_err_                                   entry() options(variable);
  5     9 dcl  gtss_CFP_abort_                            entry options(variable);
  5    10 dcl  gtss_CFP_break_                            entry options(variable);
  5    11 dcl  gtss_CFP_input_                            entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  5    12 dcl  gtss_CFP_output_                           entry (ptr, ptr, fixed bin(21), fixed bin(35));
  5    13 dcl  gtss_abandon_CFP_                          entry options(variable);
  5    14 dcl  gtss_abort_dump_                           entry (fixed bin(18));
  5    15 dcl  gtss_abort_subsystem_                      entry options (variable);
  5    16 dcl  gtss_abort_subsystem_$not_imp              entry (ptr, fixed bin(24));
  5    17 dcl  gtss_abs_login_banner_		        entry() returns(char(*));
  5    18 dcl  gtss_abs_logout_banner_		        entry() returns(char(*));
  5    19 dcl  gtss_abs_$abs_equiv                        entry options(variable);
  5    20 dcl  gtss_abs_$cpu_runout		        entry (ptr, char(4));
  5    21 dcl  gtss_abs_$create_absin                     entry() returns(char(*));
  5    22 dcl  gtss_abs_$dabt_check		        entry (ptr, char(4));
  5    23 dcl  gtss_abs_$get_id                           entry (char(5)) returns(char(19));
  5    24 dcl  gtss_abs_$get_drm                          entry() returns(char(*));
  5    25 dcl  gtss_adjust_size_                          entry (ptr);
  5    26 dcl  gtss_aft_$add                              entry (char(8), fixed bin(24), fixed bin(35));
  5    27 dcl  gtss_aft_$delete                           entry (char(8), fixed bin(24), fixed bin(35));
  5    28 dcl  gtss_aft_$find                             entry (char(8), fixed bin(24), fixed bin(35));
  5    29 dcl  gtss_aft_$initialize                       entry (fixed bin(35));
  5    30 dcl  gtss_ascii_bcd_                            entry (ptr, fixed bin, ptr);
  5    31 dcl  gtss_attributes_mgr_$get                   entry (ptr, fixed bin(35));
  5    32 dcl  gtss_attributes_mgr_$set                   entry (ptr, fixed bin(35));
  5    33 dcl  gtss_bcd_ascii_                            entry (ptr, fixed bin(24), ptr);
  5    34 dcl  gtss_bcd_ascii_$lc                         entry (ptr, fixed bin(24), ptr);
  5    35 dcl  gtss_break_vector_                         entry ();
  5    36 dcl  gtss_break_vector_$drl_in_progress         entry() returns(bit(1));
  5    37 dcl  gtss_break_vector_$status                  entry() returns(bit(1));
  5    38 dcl  gtss_build_                                entry options(variable);
  5    39 dcl  gtss_com_err_                              entry options(variable);
  5    40 dcl  gtss_derail_processor_                     entry (ptr, char(*), ptr, ptr, bit(1) aligned) /* called at fault time instead of signal_ */;
  5    41 dcl  gtss_derail_processor_$set                 entry options(variable);
  5    42 dcl  gtss_dq_$catp                              entry (char (5), ptr, fixed bin (18) unsigned);
  5    43 dcl  gtss_dq_$create                            entry (bit(1));
  5    44 dcl  gtss_dq_$dibp                              entry (char(5), ptr);
  5    45 dcl  gtss_dq_$entries_info		        entry (ptr, fixed bin (18) unsigned, fixed bin (18) unsigned);
  5    46 dcl  gtss_dq_$hdrp                              entry (ptr);
  5    47 dcl  gtss_dq_$mod_js		        entry (char(5), fixed bin (6) unsigned, bit (1));
  5    48 dcl  gtss_dq_$open_exc		        entry (bit(1));
  5    49 dcl  gtss_dq_$open_gen		        entry (bit(1));
  5    50 dcl  gtss_drl_abort_                            entry (ptr, fixed bin);
  5    51 dcl  gtss_drl_addmem_                           entry (ptr, fixed bin);
  5    52 dcl  gtss_drl_callss_                           entry (ptr, fixed bin);
  5    53 dcl  gtss_drl_corfil_                           entry (ptr, fixed bin);
  5    54 dcl  gtss_drl_defil_                            entry (ptr, fixed bin);
  5    55 dcl  gtss_drl_defil_$subr                       entry (ptr, ptr, ptr);
  5    56 dcl  gtss_drl_dio_                              entry (ptr, fixed bin);
  5    57 dcl  gtss_drl_drlimt_                           entry (ptr, fixed bin);
  5    58 dcl  gtss_drl_drlsav_                           entry (ptr, fixed bin);
  5    59 dcl  gtss_drl_filact_                           entry (ptr, fixed bin);
  5    60 dcl  gtss_drl_filsp_                            entry (ptr, fixed bin);
  5    61 dcl  gtss_drl_grow_                             entry (ptr, fixed bin);
  5    62 dcl  gtss_drl_gwake_                            entry (ptr, fixed bin);
  5    63 dcl  gtss_drl_jsts_                             entry (ptr, fixed bin);
  5    64 dcl  gtss_drl_kin_                              entry (ptr, fixed bin);
  5    65 dcl  gtss_drl_kotnow_                           entry (ptr, fixed bin);
  5    66 dcl  gtss_drl_kotnow_$gtss_drl_kout_            entry (ptr, fixed bin);
  5    67 dcl  gtss_drl_koutn_                            entry (ptr, fixed bin);
  5    68 dcl  gtss_drl_morlnk_                           entry (ptr, fixed bin);
  5    69 dcl  gtss_drl_msub_                             entry (ptr, fixed bin);
  5    70 dcl  gtss_drl_objtim_                           entry (ptr, fixed bin);
  5    71 dcl  gtss_drl_part_                             entry (ptr, fixed bin);
  5    72 dcl  gtss_drl_pasaft_                           entry (ptr, fixed bin);
  5    73 dcl  gtss_drl_pasdes_                           entry (ptr, fixed bin);
  5    74 dcl  gtss_drl_pasust_                           entry (ptr, fixed bin);
  5    75 dcl  gtss_drl_pdio_                             entry (ptr, fixed bin);
  5    76 dcl  gtss_drl_prgdes_                           entry (ptr, fixed bin);
  5    77 dcl  gtss_drl_pseudo_                           entry (ptr, fixed bin);
  5    78 dcl  gtss_drl_relmem_                           entry (ptr, fixed bin);
  5    79 dcl  gtss_drl_restor_                           entry (ptr, fixed bin);
  5    80 dcl  gtss_drl_retfil_                           entry (ptr, fixed bin);
  5    81 dcl  gtss_drl_return_                           entry (ptr, fixed bin);
  5    82 dcl  gtss_drl_rew_                              entry (ptr, fixed bin);
  5    83 dcl  gtss_drl_rstswh_                           entry (ptr, fixed bin);
  5    84 dcl  gtss_drl_setlno_                           entry (ptr, fixed bin);
  5    85 dcl  gtss_drl_setswh_                           entry (ptr, fixed bin);
  5    86 dcl  gtss_drl_snumb_                            entry (ptr, fixed bin);
  5    87 dcl  gtss_drl_spawn_                            entry (ptr, fixed bin);
  5    88 dcl  gtss_drl_spawn_$gtss_drl_pasflr_           entry (ptr, fixed bin);
  5    89 dcl  gtss_drl_stoppt_                           entry (ptr, fixed bin);
  5    90 dcl  gtss_drl_switch_                           entry (ptr, fixed bin);
  5    91 dcl  gtss_drl_sysret_                           entry (ptr, fixed bin);
  5    92 dcl  gtss_drl_t_cfio_                           entry (ptr, fixed bin);
  5    93 dcl  gtss_drl_t_cmov_                           entry (ptr, fixed bin);
  5    94 dcl  gtss_drl_t_err_                            entry (ptr, fixed bin);
  5    95 dcl  gtss_drl_t_goto_                           entry (ptr, fixed bin);
  5    96 dcl  gtss_drl_t_linl_                           entry (ptr, fixed bin);
  5    97 dcl  gtss_drl_t_rscc_                           entry (ptr, fixed bin);
  5    98 dcl  gtss_drl_tapein_                           entry (ptr, fixed bin);
  5    99 dcl  gtss_drl_task_                             entry (ptr, fixed bin);
  5   100 dcl  gtss_drl_termtp_                           entry (ptr, fixed bin);
  5   101 dcl  gtss_drl_time_                             entry (ptr, fixed bin);
  5   102 dcl  gtss_drun_                                 entry (bit(1));
  5   103 dcl  gtss_dsd_lookup_                           entry (char(8) var) returns(fixed bin(24));
  5   104 dcl  gtss_dsd_process_                          entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  5   105 dcl  gtss_edit_dsd_                             entry (ptr, fixed bin(21)) returns(fixed bin(24));
  5   106 dcl  gtss_mcfc_empty                            entry (char(*) var);
  5   107 dcl  gtss_expand_pathname_                      entry (ptr, char(*), char(*), fixed bin(35));
  5   108 dcl  gtss_expand_pathname_$verify_umc           entry (ptr, char(*), char(*), bit(18), fixed bin(35));
  5   109 dcl  gtss_fault_processor_                      entry options(variable);
  5   110 dcl  gtss_find_cond_frame_		        entry (char(32) var) returns(ptr);
  5   111 dcl  gtss_fault_processor_$timer_runout         entry (ptr, char(*));
  5   112 dcl  gtss_filact_error_status_                  entry (fixed bin(35))returns(bit(12));
  5   113 dcl  gtss_filact_funct02_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   114 dcl  gtss_filact_funct03_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   115 dcl  gtss_filact_funct04_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   116 dcl  gtss_filact_funct05_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   117 dcl  gtss_filact_funct08_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   118 dcl  gtss_filact_funct10_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   119 dcl  gtss_filact_funct11_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   120 dcl  gtss_filact_funct14_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   121 dcl  gtss_filact_funct18_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   122 dcl  gtss_filact_funct19_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   123 dcl  gtss_filact_funct21_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   124 dcl  gtss_filact_funct22_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   125 dcl  gtss_mcfc_init_                            entry (char(*) var);
  5   126 dcl  gtss_interp_prim_                          entry options(variable);
  5   127 dcl  gtss_interp_prim_$callss                   entry (char(4), ptr);
  5   128 dcl  gtss_interp_prim_$sysret                   entry options(variable);
  5   129 dcl  gtss_interp_prim_$t_goto                   entry (char(4));
  5   130 dcl  gtss_ios_change_size_                      entry (fixed bin(24), fixed bin(24), bit(1), fixed bin(24), fixed bin(35));
  5   131 dcl  gtss_ios_close_                            entry (fixed bin(24), ptr, fixed bin(35));
  5   132 dcl  gtss_ios_exchange_names_                   entry (fixed bin(24), fixed bin(24), fixed bin(24), fixed bin(35));
  5   133 dcl  gtss_ios_initialize_                       entry options(variable);
  5   134 dcl  gtss_ios_io_                               entry (fixed bin(24), ptr, ptr, fixed bin(24), fixed bin(24), fixed bin(35));
  5   135 dcl  gtss_ios_open_                             entry (fixed bin(24), char(168), char(32), bit(6), bit(1), ptr, ptr, fixed bin(35));
  5   136 dcl  gtss_ios_position_                         entry (fixed bin(24), fixed bin(24), fixed bin(24), bit(6), ptr);
  5   137 dcl  gtss_mcfc_$delete		        entry (fixed bin(24), char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  5   138 dcl  gtss_mcfc_$open                            entry (char(*), char(*), bit(6), bit(36) aligned, ptr, fixed bin(35));
  5   139 dcl  gtss_mcfc_$close                           entry (char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  5   140 dcl  gtss_read_starCFP_                         entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  5   141 dcl  gtss_read_starCFP_$last_os                 entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  5   142 dcl  gtss_run_subsystem_                        entry (fixed bin(24));
  5   143 dcl  gtss_run_subsystem_$finish                 entry options(variable);
  5   144 dcl  gtss_run_subsystem_$restor                 entry (fixed bin(24), ptr);
  5   145 dcl  gtss_run_subsystem_$restor_perm            entry (fixed bin(24), ptr, fixed bin(18));
  5   146 dcl  gtss_set_slave_                            entry (fixed bin (24), ptr);
  5   147 dcl  gtss_set_slave_$load_bar                   entry (fixed bin (17));
  5   148 dcl  gtss_update_safe_store_                    entry (ptr);
  5   149 dcl  gtss_verify_access_		        entry (char(*), char(*), fixed bin(24), bit(6), bit(12) aligned);
  5   150 dcl  gtss_verify_access_$check_forced_access    entry (char(*), char(*), fixed bin(24));
  5   151 dcl  gtss_write_starCFP_                        entry (ptr, ptr, fixed bin(21), fixed bin(35));
  5   152 /*   END INCLUDE FILE gtss_entry_dcls.incl.pl1 */
      481 
      482 finish:	;
      483      end						/* gtss_dsd_process_ */;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/10/84  1043.7  gtss_dsd_process_.pl1             >spec>on>7105>gtss_dsd_process_.pl1
469          1    09/09/83  1713.2  gtss_CFP_bits.incl.pl1            >ldd>include>gtss_CFP_bits.incl.pl1
472          2    09/09/83  1714.2  gtss_starCF_.incl.pl1             >ldd>include>gtss_starCF_.incl.pl1
475          3    09/09/83  1714.3  gtss_ust_ext_.incl.pl1            >ldd>include>gtss_ust_ext_.incl.pl1
478          4    09/09/83  1713.8  gtss_ext_.incl.pl1                >ldd>include>gtss_ext_.incl.pl1
481          5    12/10/84  1029.7  gtss_entry_dcls.incl.pl1          >spec>on>7105>gtss_entry_dcls.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
CR                                     constant        char(1)                  initial unaligned dcl 428 ref 264
NL                                     constant        char(1)                  initial unaligned dcl 429 ref 264
addr                                                   builtin function         dcl 440 ref 191
b0                       54     000022 external static bit(1)                   level 4 packed unaligned dcl 3-16 set ref 133* 133
                                                                                  135* 135 137* 137 139* 139 265 265 305 305 358 358
                                                                                  371 371
b1                       54(01) 000022 external static bit(1)                   level 4 packed unaligned dcl 3-16 set ref 106* 106
                                                                                  108* 108 110* 110 112* 112
b14                      54(14) 000022 external static bit(1)                   level 4 packed unaligned dcl 3-16 ref 147 147 234
                                                                                  234
b31                     160(31) 000022 external static bit(1)                   level 4 packed unaligned dcl 3-16 set ref 81* 81
b4                       54(04) 000022 external static bit(1)                   level 4 packed unaligned dcl 3-16 set ref 168* 168
                                                                                  350* 350 383 383 384* 384 386* 386
b5                      147(05) 000022 external static bit(1)                   level 4 packed unaligned dcl 3-16 set ref 410* 410
                                                                                  412* 412 414* 414 416* 416
b6                      147(06) 000022 external static bit(1)                   level 4 packed unaligned dcl 3-16 set ref 285* 323*
bl                              000214 automatic       fixed bin(21,0)          dcl 438 set ref 295* 296* 372* 373*
bp                                     parameter       pointer                  dcl 424 set ref 9 23 24 57* 58 93 94 103 120 121 130
                                                                                  148* 149 176 188 189 189 191 198 212* 213 235* 236
                                                                                  264 265* 267 291 293 293 296* 297 306* 313* 314
                                                                                  324* 332 352 354 354 360* 373* 385* 397 398 407
break_flag                             defined         bit(1)                   unaligned dcl 1-13 set ref 81*
build_mode                0(07) 000030 external static bit(1)                   level 2 packed unaligned dcl 4-37 ref 56 211
cf                      112     000020 external static structure                level 2 dcl 2-12
code                            000215 automatic       fixed bin(35,0)          initial dcl 439 set ref 193* 197* 198 439*
com_err_                        000032 constant        entry                    external dcl 5-8 ref 176 332
copy_on                                defined         bit(1)                   unaligned dcl 1-9 set ref 106* 108* 110* 112*
cout_called               0(06) 000030 external static bit(1)                   level 2 packed unaligned dcl 4-37 set ref 283* 321*
cp                              000211 automatic       fixed bin(24,0)          dcl 437 set ref 23* 24
cs                              000202 automatic       varying char(8)          dcl 436 set ref 27* 28* 29 30* 30 32* 350
dele_on                                defined         bit(1)                   unaligned dcl 1-8 set ref 133* 135* 137* 139* 265
                                                                                  305 358 371
ec                                     parameter       fixed bin(35,0)          dcl 427 set ref 9 57* 58 148* 149 212* 213 235* 236
                                                                                  265* 267 296* 297 306* 307 313* 314 324* 360* 361
                                                                                  373* 374 385*
exclude_on              114(01) 000020 external static bit(1)                   level 3 packed unaligned dcl 2-12 ref 265
gtss_CFP_input_                 000034 constant        entry                    external dcl 5-11 ref 385
gtss_abandon_CFP_               000036 constant        entry                    external dcl 5-13 ref 284 322
gtss_abort_subsystem_           000040 constant        entry                    external dcl 5-15 ref 58 65 94 121 149 156 198 213
                                                                                  220 236 243 267 297 307 314 361 374 398
gtss_dsd_lookup_                000042 constant        entry                    external dcl 5-103 ref 32
gtss_ext_$CFP_bits              000030 external static structure                level 1 dcl 4-37
gtss_ext_$drun_jid              000024 external static char(5)                  unaligned dcl 4-15 ref 193
gtss_ext_$process_type          000026 external static fixed bin(17,0)          dcl 4-26 ref 193
gtss_read_starCFP_$last_os      000044 constant        entry                    external dcl 5-141 ref 306 360
gtss_starCF_$FILE               000020 external static structure                level 1 dcl 2-12
gtss_ust                        000022 external static structure                level 2 dcl 3-16
gtss_ust_ext_$ust               000022 external static structure                level 1 dcl 3-16
gtss_write_starCFP_             000046 constant        entry                    external dcl 5-151 ref 57 148 193 212 235 265
i                               000213 automatic       fixed bin(24,0)          dcl 437 set ref 93* 94 102 103 120* 121 129 130 291*
                                                                                  292 293 294 352* 353 354 355 371 397* 398 406 407
index                                                  builtin function         dcl 440 ref 23 93 120 291 352 397
iox_$get_line                   000010 constant        entry                    external dcl 442 ref 324
iox_$put_chars                  000012 constant        entry                    external dcl 443 ref 197 296 313 373
iox_$user_input                 000014 external static pointer                  dcl 444 set ref 324*
iox_$user_output                000016 external static pointer                  dcl 445 set ref 197* 296* 313* 373*
lcjid                   135     000022 external static bit(36)                  level 3 dcl 3-16 ref 91 193 282 348
length                                                 builtin function         dcl 440 ref 25 27 105 132 409
lflg2                    54     000022 external static structure                level 3 dcl 3-16
lflg3                   160     000022 external static structure                level 3 dcl 3-16
lswt2                   147     000022 external static structure                level 3 dcl 3-16
ltrim                                                  builtin function         dcl 440 ref 26 104 131 408
ml                                     parameter       fixed bin(21,0)          dcl 425 set ref 9 306* 324* 360* 385*
no_input_yet                    000030 external static bit(1)                   level 2 packed unaligned dcl 4-37 set ref 48* 274*
                                                                                  286* 325* 387*
null                                                   builtin function         dcl 440 ref 58 58 65 65 94 94 121 121 149 149 156
                                                                                  156 198 198 213 213 220 220 236 236 243 243 267
                                                                                  267 297 297 307 307 314 314 361 361 374 374 398
                                                                                  398 435
proper_rtn                      000216 automatic       entry variable           dcl 446 set ref 36* 37
quit                            000000 stack reference condition                dcl 441 ref 82
rl                                     parameter       fixed bin(21,0)          dcl 426 set ref 9 20 57* 148* 212* 235* 263* 265*
                                                                                  306* 313* 324* 360* 367 385*
rll                             000210 automatic       fixed bin(24,0)          dcl 437 set ref 20* 21 23 24 58 58 93 94 94 102 103
                                                                                  120 121 121 129 130 149 149 176 176 186 187* 193
                                                                                  197 198 198 213 213 236 236 263* 264 267 267 291
                                                                                  293 293 294* 294 295 297 297 314 314 332 332 352
                                                                                  354 354 355* 355 367* 372 397 398 398 406 407
rls                             000100 automatic       varying char(252)        dcl 431 set ref 24* 25* 25 25 26* 26 27 27 28 103*
                                                                                  104* 104 105 106 106 130* 131* 131 132 133 133
                                                                                  407* 408* 408 409 410 410
rtn_table                       000222 automatic       entry variable           initial array dcl 447 set ref 36 447* 447* 447* 447*
                                                                                  447* 447* 447* 447* 447* 447* 447* 447* 447* 447*
                                                                                  447* 447* 447* 447* 447*
save_cs                         000205 automatic       varying char(8)          dcl 436 set ref 29* 93 120 291 352 397
sp2                             000200 automatic       pointer                  initial dcl 435 set ref 191* 193* 197* 435*
string_1                               based           char(1)                  array unaligned dcl 432 set ref 188* 189* 189 191
string_3                               based           char                     unaligned dcl 434 set ref 23 24 58* 93 94* 103 120
                                                                                  121* 130 149* 176* 198* 213* 236* 264* 267* 291
                                                                                  293* 293 297* 314* 332* 352 354* 354 397 398* 407
substr                                                 builtin function         dcl 440 ref 24 25 27 28 103 106 106 130 133 133 293
                                                                                  354 407 410 410
talk_on                                defined         bit(1)                   unaligned dcl 1-10 set ref 168* 350* 383 384* 386*
translate                                              builtin function         dcl 440 ref 30
trap_off                               defined         bit(1)                   unaligned dcl 1-12 set ref 410* 412* 414* 416*
type                            000212 automatic       fixed bin(24,0)          dcl 437 set ref 32* 34* 36
up                                     parameter       pointer                  dcl 423 set ref 9 57* 148* 193* 212* 235* 265* 306*
                                                                                  360* 385*
user_code                              defined         bit(1)                   unaligned dcl 1-11 ref 147 234

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
CFP_in_progress                        defined         bit(1)                   unaligned dcl 1-7
gtss_CFP_abort_                 000000 constant        entry                    external dcl 5-9
gtss_CFP_break_                 000000 constant        entry                    external dcl 5-10
gtss_CFP_output_                000000 constant        entry                    external dcl 5-12
gtss_abort_dump_                000000 constant        entry                    external dcl 5-14
gtss_abort_subsystem_$not_imp   000000 constant        entry                    external dcl 5-16
gtss_abs_$abs_equiv             000000 constant        entry                    external dcl 5-19
gtss_abs_$cpu_runout            000000 constant        entry                    external dcl 5-20
gtss_abs_$create_absin          000000 constant        entry                    external dcl 5-21
gtss_abs_$dabt_check            000000 constant        entry                    external dcl 5-22
gtss_abs_$get_drm               000000 constant        entry                    external dcl 5-24
gtss_abs_$get_id                000000 constant        entry                    external dcl 5-23
gtss_abs_login_banner_          000000 constant        entry                    external dcl 5-17
gtss_abs_logout_banner_         000000 constant        entry                    external dcl 5-18
gtss_adjust_size_               000000 constant        entry                    external dcl 5-25
gtss_aft_$add                   000000 constant        entry                    external dcl 5-26
gtss_aft_$delete                000000 constant        entry                    external dcl 5-27
gtss_aft_$find                  000000 constant        entry                    external dcl 5-28
gtss_aft_$initialize            000000 constant        entry                    external dcl 5-29
gtss_ascii_bcd_                 000000 constant        entry                    external dcl 5-30
gtss_attributes_mgr_$get        000000 constant        entry                    external dcl 5-31
gtss_attributes_mgr_$set        000000 constant        entry                    external dcl 5-32
gtss_bcd_ascii_                 000000 constant        entry                    external dcl 5-33
gtss_bcd_ascii_$lc              000000 constant        entry                    external dcl 5-34
gtss_break_vector_              000000 constant        entry                    external dcl 5-35
gtss_break_vector_$drl_in_progress
                                000000 constant        entry                    external dcl 5-36
gtss_break_vector_$status       000000 constant        entry                    external dcl 5-37
gtss_build_                     000000 constant        entry                    external dcl 5-38
gtss_com_err_                   000000 constant        entry                    external dcl 5-39
gtss_derail_processor_          000000 constant        entry                    external dcl 5-40
gtss_derail_processor_$set      000000 constant        entry                    external dcl 5-41
gtss_dq_$catp                   000000 constant        entry                    external dcl 5-42
gtss_dq_$create                 000000 constant        entry                    external dcl 5-43
gtss_dq_$dibp                   000000 constant        entry                    external dcl 5-44
gtss_dq_$entries_info           000000 constant        entry                    external dcl 5-45
gtss_dq_$hdrp                   000000 constant        entry                    external dcl 5-46
gtss_dq_$mod_js                 000000 constant        entry                    external dcl 5-47
gtss_dq_$open_exc               000000 constant        entry                    external dcl 5-48
gtss_dq_$open_gen               000000 constant        entry                    external dcl 5-49
gtss_drl_abort_                 000000 constant        entry                    external dcl 5-50
gtss_drl_addmem_                000000 constant        entry                    external dcl 5-51
gtss_drl_callss_                000000 constant        entry                    external dcl 5-52
gtss_drl_corfil_                000000 constant        entry                    external dcl 5-53
gtss_drl_defil_                 000000 constant        entry                    external dcl 5-54
gtss_drl_defil_$subr            000000 constant        entry                    external dcl 5-55
gtss_drl_dio_                   000000 constant        entry                    external dcl 5-56
gtss_drl_drlimt_                000000 constant        entry                    external dcl 5-57
gtss_drl_drlsav_                000000 constant        entry                    external dcl 5-58
gtss_drl_filact_                000000 constant        entry                    external dcl 5-59
gtss_drl_filsp_                 000000 constant        entry                    external dcl 5-60
gtss_drl_grow_                  000000 constant        entry                    external dcl 5-61
gtss_drl_gwake_                 000000 constant        entry                    external dcl 5-62
gtss_drl_jsts_                  000000 constant        entry                    external dcl 5-63
gtss_drl_kin_                   000000 constant        entry                    external dcl 5-64
gtss_drl_kotnow_                000000 constant        entry                    external dcl 5-65
gtss_drl_kotnow_$gtss_drl_kout_ 000000 constant        entry                    external dcl 5-66
gtss_drl_koutn_                 000000 constant        entry                    external dcl 5-67
gtss_drl_morlnk_                000000 constant        entry                    external dcl 5-68
gtss_drl_msub_                  000000 constant        entry                    external dcl 5-69
gtss_drl_objtim_                000000 constant        entry                    external dcl 5-70
gtss_drl_part_                  000000 constant        entry                    external dcl 5-71
gtss_drl_pasaft_                000000 constant        entry                    external dcl 5-72
gtss_drl_pasdes_                000000 constant        entry                    external dcl 5-73
gtss_drl_pasust_                000000 constant        entry                    external dcl 5-74
gtss_drl_pdio_                  000000 constant        entry                    external dcl 5-75
gtss_drl_prgdes_                000000 constant        entry                    external dcl 5-76
gtss_drl_pseudo_                000000 constant        entry                    external dcl 5-77
gtss_drl_relmem_                000000 constant        entry                    external dcl 5-78
gtss_drl_restor_                000000 constant        entry                    external dcl 5-79
gtss_drl_retfil_                000000 constant        entry                    external dcl 5-80
gtss_drl_return_                000000 constant        entry                    external dcl 5-81
gtss_drl_rew_                   000000 constant        entry                    external dcl 5-82
gtss_drl_rstswh_                000000 constant        entry                    external dcl 5-83
gtss_drl_setlno_                000000 constant        entry                    external dcl 5-84
gtss_drl_setswh_                000000 constant        entry                    external dcl 5-85
gtss_drl_snumb_                 000000 constant        entry                    external dcl 5-86
gtss_drl_spawn_                 000000 constant        entry                    external dcl 5-87
gtss_drl_spawn_$gtss_drl_pasflr_
                                000000 constant        entry                    external dcl 5-88
gtss_drl_stoppt_                000000 constant        entry                    external dcl 5-89
gtss_drl_switch_                000000 constant        entry                    external dcl 5-90
gtss_drl_sysret_                000000 constant        entry                    external dcl 5-91
gtss_drl_t_cfio_                000000 constant        entry                    external dcl 5-92
gtss_drl_t_cmov_                000000 constant        entry                    external dcl 5-93
gtss_drl_t_err_                 000000 constant        entry                    external dcl 5-94
gtss_drl_t_goto_                000000 constant        entry                    external dcl 5-95
gtss_drl_t_linl_                000000 constant        entry                    external dcl 5-96
gtss_drl_t_rscc_                000000 constant        entry                    external dcl 5-97
gtss_drl_tapein_                000000 constant        entry                    external dcl 5-98
gtss_drl_task_                  000000 constant        entry                    external dcl 5-99
gtss_drl_termtp_                000000 constant        entry                    external dcl 5-100
gtss_drl_time_                  000000 constant        entry                    external dcl 5-101
gtss_drun_                      000000 constant        entry                    external dcl 5-102
gtss_dsd_process_               000000 constant        entry                    external dcl 5-104
gtss_edit_dsd_                  000000 constant        entry                    external dcl 5-105
gtss_expand_pathname_           000000 constant        entry                    external dcl 5-107
gtss_expand_pathname_$verify_umc
                                000000 constant        entry                    external dcl 5-108
gtss_ext_$SYstarstar_file_no           external static fixed bin(24,0)          dcl 4-33
gtss_ext_$aem                          external static fixed bin(17,0)          dcl 4-8
gtss_ext_$aft                          external static structure                level 1 dcl 4-78
gtss_ext_$bad_drl_rtrn                 external static label variable           dcl 4-9
gtss_ext_$com_reg                      external static structure                level 1 dcl 4-45
gtss_ext_$db                           external static bit(1)                   array unaligned dcl 4-10
gtss_ext_$deferred_catalogs_ptr        external static pointer                  dcl 4-11
gtss_ext_$dispose_of_drl               external static label variable           dcl 4-12
gtss_ext_$drl_rtrn                     external static label variable           array dcl 4-13
gtss_ext_$drm_path                     external static char(168)                unaligned dcl 4-14
gtss_ext_$event_channel                external static fixed bin(71,0)          dcl 4-16
gtss_ext_$fast_lib                     external static structure                level 1 dcl 4-98
gtss_ext_$finished                     external static label variable           dcl 4-17
gtss_ext_$flags                        external static structure                level 1 dcl 4-60
gtss_ext_$gdb_name                     external static char(8)                  unaligned dcl 4-18
gtss_ext_$get_line                     external static entry variable           dcl 4-19
gtss_ext_$gtss_slave_area_seg          external static pointer                  array dcl 4-20
gtss_ext_$hcs_work_area_ptr            external static pointer                  dcl 4-21
gtss_ext_$homedir                      external static char(64)                 unaligned dcl 4-22
gtss_ext_$last_k_was_out               external static bit(1)                   dcl 4-23
gtss_ext_$mcfc                         external static structure                level 1 dcl 4-109
gtss_ext_$pdir                         external static varying char(168)        dcl 4-24
gtss_ext_$popup_from_pi                external static label variable           dcl 4-25
gtss_ext_$ppt                          external static pointer                  dcl 4-94
gtss_ext_$put_chars                    external static entry variable           dcl 4-27
gtss_ext_$restart_from_pi              external static label variable           dcl 4-28
gtss_ext_$restart_seg_ptr              external static pointer                  dcl 4-29
gtss_ext_$sig_ptr                      external static pointer                  dcl 4-30
gtss_ext_$stack_level_                 external static fixed bin(17,0)          dcl 4-31
gtss_ext_$statistics                   external static structure                level 1 dcl 4-72
gtss_ext_$suspended_process            external static bit(1)                   unaligned dcl 4-32
gtss_ext_$user_id                      external static varying char(26)         dcl 4-34
gtss_ext_$work_area_ptr                external static pointer                  dcl 4-35
gtss_fault_processor_           000000 constant        entry                    external dcl 5-109
gtss_fault_processor_$timer_runout
                                000000 constant        entry                    external dcl 5-111
gtss_filact_error_status_       000000 constant        entry                    external dcl 5-112
gtss_filact_funct02_            000000 constant        entry                    external dcl 5-113
gtss_filact_funct03_            000000 constant        entry                    external dcl 5-114
gtss_filact_funct04_            000000 constant        entry                    external dcl 5-115
gtss_filact_funct05_            000000 constant        entry                    external dcl 5-116
gtss_filact_funct08_            000000 constant        entry                    external dcl 5-117
gtss_filact_funct10_            000000 constant        entry                    external dcl 5-118
gtss_filact_funct11_            000000 constant        entry                    external dcl 5-119
gtss_filact_funct14_            000000 constant        entry                    external dcl 5-120
gtss_filact_funct18_            000000 constant        entry                    external dcl 5-121
gtss_filact_funct19_            000000 constant        entry                    external dcl 5-122
gtss_filact_funct21_            000000 constant        entry                    external dcl 5-123
gtss_filact_funct22_            000000 constant        entry                    external dcl 5-124
gtss_find_cond_frame_           000000 constant        entry                    external dcl 5-110
gtss_interp_prim_               000000 constant        entry                    external dcl 5-126
gtss_interp_prim_$callss        000000 constant        entry                    external dcl 5-127
gtss_interp_prim_$sysret        000000 constant        entry                    external dcl 5-128
gtss_interp_prim_$t_goto        000000 constant        entry                    external dcl 5-129
gtss_ios_change_size_           000000 constant        entry                    external dcl 5-130
gtss_ios_close_                 000000 constant        entry                    external dcl 5-131
gtss_ios_exchange_names_        000000 constant        entry                    external dcl 5-132
gtss_ios_initialize_            000000 constant        entry                    external dcl 5-133
gtss_ios_io_                    000000 constant        entry                    external dcl 5-134
gtss_ios_open_                  000000 constant        entry                    external dcl 5-135
gtss_ios_position_              000000 constant        entry                    external dcl 5-136
gtss_mcfc_$close                000000 constant        entry                    external dcl 5-139
gtss_mcfc_$delete               000000 constant        entry                    external dcl 5-137
gtss_mcfc_$open                 000000 constant        entry                    external dcl 5-138
gtss_mcfc_empty                 000000 constant        entry                    external dcl 5-106
gtss_mcfc_init_                 000000 constant        entry                    external dcl 5-125
gtss_read_starCFP_              000000 constant        entry                    external dcl 5-140
gtss_run_subsystem_             000000 constant        entry                    external dcl 5-142
gtss_run_subsystem_$finish      000000 constant        entry                    external dcl 5-143
gtss_run_subsystem_$restor      000000 constant        entry                    external dcl 5-144
gtss_run_subsystem_$restor_perm 000000 constant        entry                    external dcl 5-145
gtss_set_slave_                 000000 constant        entry                    external dcl 5-146
gtss_set_slave_$load_bar        000000 constant        entry                    external dcl 5-147
gtss_update_safe_store_         000000 constant        entry                    external dcl 5-148
gtss_verify_access_             000000 constant        entry                    external dcl 5-149
gtss_verify_access_$check_forced_access
                                000000 constant        entry                    external dcl 5-150
string_2                               based           char(1)                  array unaligned dcl 433

NAMES DECLARED BY EXPLICIT CONTEXT.
dsd_brk                         001107 constant        entry                    internal dcl 76 ref 447
dsd_build                       000747 constant        entry                    internal dcl 54 ref 447
dsd_copy                        001124 constant        entry                    internal dcl 89 ref 447
dsd_dele                        001321 constant        entry                    internal dcl 118 ref 447
dsd_error                       000736 constant        entry                    internal dcl 42 ref 447
dsd_exec                        001513 constant        entry                    internal dcl 145 ref 447
dsd_file                        001653 constant        entry                    internal dcl 166 ref 447
dsd_lbl                         001665 constant        entry                    internal dcl 174 ref 447
dsd_mark                        001734 constant        entry                    internal dcl 182 ref 447
dsd_nbuild                      002117 constant        entry                    internal dcl 209 ref 447
dsd_nexec                       002257 constant        entry                    internal dcl 232 ref 447
dsd_nsys                        002420 constant        entry                    internal dcl 254 ref 447
dsd_null                        002427 constant        entry                    internal dcl 261 ref 447
dsd_quit                        002556 constant        entry                    internal dcl 279 ref 447
dsd_rem                         003171 constant        entry                    internal dcl 330 ref 447
dsd_system                      003241 constant        entry                    internal dcl 338 ref 447
dsd_talk                        003257 constant        entry                    internal dcl 346 ref 447
dsd_trap                        003574 constant        entry                    internal dcl 394 ref 447
dsd_user                        003250 constant        entry                    internal dcl 346 ref 447
finish                          000733 constant        label                    dcl 482
gtss_dsd_process_               000371 constant        entry                    external dcl 9

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      4572        4642    4173        4602
Length      5222    4173        50         344     376           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gtss_dsd_process_                   230 external procedure  is an external procedure.  
dsd_error                            64 internal procedure  is assigned to an entry variable.  
dsd_build                           108 internal procedure  is assigned to an entry variable.  
dsd_brk                              70 internal procedure  is assigned to an entry variable.  
dsd_copy                            108 internal procedure  is assigned to an entry variable.  
dsd_dele                            108 internal procedure  is assigned to an entry variable.  
dsd_exec                            126 internal procedure  is assigned to an entry variable.  
dsd_file                             64 internal procedure  is assigned to an entry variable.  
dsd_lbl                             100 internal procedure  is assigned to an entry variable.  
dsd_mark                            110 internal procedure  is assigned to an entry variable.  
dsd_nbuild                          108 internal procedure  is assigned to an entry variable.  
dsd_nexec                           126 internal procedure  is assigned to an entry variable.  
dsd_nsys                             64 internal procedure  is assigned to an entry variable.  
dsd_null                            108 internal procedure  is assigned to an entry variable.  
dsd_quit                            136 internal procedure  is assigned to an entry variable.  
dsd_rem                             100 internal procedure  is assigned to an entry variable.  
dsd_system                           64 internal procedure  is assigned to an entry variable.  
dsd_user                            110 internal procedure  is assigned to an entry variable.  
dsd_trap                            108 internal procedure  is assigned to an entry variable.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gtss_dsd_process_        000100 rls                         gtss_dsd_process_
                         000200 sp2                         gtss_dsd_process_
                         000202 cs                          gtss_dsd_process_
                         000205 save_cs                     gtss_dsd_process_
                         000210 rll                         gtss_dsd_process_
                         000211 cp                          gtss_dsd_process_
                         000212 type                        gtss_dsd_process_
                         000213 i                           gtss_dsd_process_
                         000214 bl                          gtss_dsd_process_
                         000215 code                        gtss_dsd_process_
                         000216 proper_rtn                  gtss_dsd_process_
                         000222 rtn_table                   gtss_dsd_process_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_cs            call_var            call_ext_out_desc   call_ext_out        return              signal
shorten_stack       ext_entry           int_entry           set_cs_eis          index_cs_eis

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      gtss_CFP_input_               gtss_abandon_CFP_             gtss_abort_subsystem_
gtss_dsd_lookup_              gtss_read_starCFP_$last_os    gtss_write_starCFP_           iox_$get_line
iox_$put_chars

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
gtss_ext_$CFP_bits            gtss_ext_$drun_jid            gtss_ext_$process_type        gtss_starCF_$FILE
gtss_ust_ext_$ust             iox_$user_input               iox_$user_output




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      9 000364       435 000376       439 000400       447 000401        20 000565        21 000570        23 000572
     24 000601        25 000616        26 000624        27 000646        28 000656        29 000663        30 000670
     32 000706        33 000717        34 000720        36 000721        37 000727       482 000733       483 000734
     42 000735        48 000743        50 000745        54 000746        56 000754        57 000757        58 000775
     65 001047        73 001105        76 001106        81 001114        82 001117        84 001122        89 001123
     91 001131        93 001134        94 001146       102 001213       103 001220       104 001240       105 001262
    106 001265       108 001301       109 001305       110 001306       111 001312       112 001313       114 001317
    118 001320       120 001326       121 001340       129 001405       130 001412       131 001432       132 001454
    133 001457       135 001473       136 001477       137 001500       138 001504       139 001505       141 001511
    145 001512       147 001520       148 001524       149 001542       156 001613       164 001651       166 001652
    168 001660       170 001663       174 001664       176 001672       179 001732       182 001733       186 001741
    187 001745       188 001747       189 001755       191 001760       193 001765       197 002024       198 002043
    206 002115       209 002116       211 002124       212 002127       213 002145       220 002217       228 002255
    232 002256       234 002264       235 002270       236 002306       243 002360       251 002416       254 002417
    258 002425       261 002426       263 002434       264 002442       265 002453       267 002477       274 002551
    276 002554       279 002555       282 002563       283 002566       284 002570       285 002574       286 002600
    287 002602       291 002603       292 002632       293 002635       294 002654       295 002661       296 002663
    297 002677       305 002751       306 002756       307 002776       313 003040       314 003057       321 003131
    322 003134       323 003140       324 003144       325 003164       327 003167       330 003170       332 003176
    335 003237       338 003240       342 003246       346 003247       348 003264       350 003267       352 003277
    353 003325       354 003330       355 003347       356 003354       358 003355       360 003360       361 003376
    367 003441       371 003443       372 003453       373 003455       374 003473       383 003535       384 003542
    385 003544       386 003564       387 003570       390 003572       394 003573       397 003601       398 003613
    406 003660       407 003665       408 003705       409 003727       410 003732       412 003746       413 003752
    414 003753       415 003757       416 003760       418 003764


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
