	COMPILATION LISTING OF SEGMENT gtss_drl_defil_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/10/84  1229.1 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   *                                                         *
        4*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        5*   *                                                         *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 /* *************************************************************
       10*   *						   *
       11*   * Copyright (c) 1979 by Honeywell Information Systems, Inc. *
       12*   *						   *
       13*   ************************************************************* */
       14 
       15 gtss_drl_defil_: proc (mcpp, increment);
       16 
       17 /* *	gtss create a temporary file.
       18*
       19*   Authors: Robert J. Grimes	Created
       20*   -	  Albert N. Kepner	  1978
       21*   -	  Robert M. May
       22*   -	  David B. Ward
       23*
       24*   Changed: Al Dupuis	10/18/79 To keep temp file size up to date.
       25*   Changed: Dave Ward	02/06/80 corrected file size returned if in aft.
       26*   Changed:  Ron Barstad  02/07/83  Fixed incorrectly formatted ioa control string in com_err call
       27*   * */
       28 dcl  mcpp                     ptr parm;
       29 dcl  increment                fixed bin parm;
       30 	mcp = mcpp;
       31 
       32 /* *
       33*
       34*   DRL DEFIL,  DEFINE AND ACCESS A TEMPORARY FILE (octal 6)
       35*
       36*
       37*   8_________1_6_____________________
       38*
       39*   DRL      DEFIL
       40*   ZERO     L(arg),L(stat)
       41*
       42*   (See TSS SYSTEM PROGRAMMER'S
       43*   REFERENCE MANUAL DD17B, Rev. 0, July 1976
       44*   Page 3-34,35)
       45*
       46**/
       47 
       48 	increment = 1 ;				/* One arguments */
       49 	scup = addr (mc.scu);
       50 	gseg = gtss_ext_$gtss_slave_area_seg (gtss_ext_$stack_level_);
       51 	arg_list_ptr = addrel (gseg, fixed (scu.ilc)+1);	/* get addres of arg_list */
       52 
       53 /* *	Obtain name of file to rewind.	* */
       54 	if (fixed (L_arg, 18)+2) > fixed (gtss_ust.lsize.limit, 18) then do;
       55 	     call gtss_abort_subsystem_ (mcp,
       56 		"gtss_drl_defil_",
       57 		4,
       58 		"DEFIL: File name outside memory at (^6o)",
       59 		fixed (scu.ilc, 18));
       60 	     return;
       61 	end;
       62 	arg_ptr = addrel (gseg, L_arg);
       63 
       64 /* *	Obtain pointer to return status word.	* */
       65 	if L_stat >= gtss_ust.lsize.limit then do;
       66 	     call gtss_abort_subsystem_ (mcp,
       67 		"gtss_drl_defil_",
       68 		4,
       69 		"DEFIL: Status word outside memory at (^6o)",
       70 		fixed (scu.ilc, 18));
       71 	     return;
       72 	end;
       73 	status_words_ptr = addrel (gseg, L_stat);
       74 
       75 /* *	Obtain (fn) the AFT index to the file.	* */
       76 create_temp: ;
       77 	call gtss_aft_$add ((ascii_file_name), fn, code);
       78 	if code = 1 then do;			/* Name already in AFT. */
       79 	     status_word_1 = 5;			/* Duplicate file name (i.e., already in AFT. */
       80 	     Device_type = temp_file (fn).device_type;
       81 	     Words_per_physical_block = temp_file (fn).words_block;
       82 	     Size_in_blocks_or_links = temp_file (fn).llink_flag; /* 0 => links, 1 => llinks (blocks). */
       83 	     Linked_or_Random = temp_file (fn).mode;
       84 	     Perm_or_Temp = temp_file (fn).perm;
       85 	     File_size = temp_file (fn).size;
       86 
       87 load_A_register: ;
       88 	     mc.regs.a = A_reg_b36;
       89 	     if db_drl_defil then
       90 		call ioa_ (
       91 		"gtss_drl_defil_: ""^a"" (aft ^i)"
       92 		||"^/A-reg (dev=^2o wpb=^4o random=^1b perm=^1b size=^5o^[l^;^s^]links)"
       93 		, ascii_file_name
       94 		, fn
       95 		, fixed (A_reg.Device_type, 24)
       96 		, fixed (A_reg.Words_per_physical_block, 24)
       97 		, A_reg.Linked_or_Random
       98 		, A_reg.Perm_or_Temp
       99 		, fixed (A_reg.File_size, 17)
      100 		, A_reg.Size_in_blocks_or_links
      101 		);
      102 	     return;
      103 	end;
      104 	if code = 2 then do;			/* AFT full. */
      105 no_temp_available: ;
      106 	     status_word_1 = 3;			/* No room in AFT. */
      107 	     return;
      108 	end;
      109 						/* => code =0 */
      110 
      111 /* *	Prepare gtss_ios_ file attributes block
      112*   for temp file.
      113*   * */
      114 	temp_file (fn).max_size = 0;			/* 0 => unlimited */
      115 	temp_file (fn).current_size = fixed (arg2.d, 17)*12; /* d is in links, current_size in llinks.  */
      116 	temp_file (fn).non_null = "0"b;		/* Has never been written to. */
      117 	temp_file (fn).user_attr = "0"b;		/* (no used). */
      118 	if arg2.b then
      119 	     Device_type, temp_file (fn).device_type = arg2.a;
      120 	else
      121 	Device_type, temp_file (fn).device_type = "64"b3;
      122 	Words_per_physical_block, temp_file (fn).words_block = "0100"b3; /* 100 oct = 64 dec words per block (ALWAYS). */
      123 	Size_in_blocks_or_links, temp_file (fn).llink_flag = "0"b; /* 0 => links (12 llinks/blocks @). */
      124 	Linked_or_Random, temp_file (fn).mode = arg2.c;	/* 0 (linked) | 1 (random). */
      125 	Perm_or_Temp, temp_file (fn).perm = "0"b;	/* Temporary file. */
      126 	temp_file (fn).fill = "0"b;
      127 	File_size, temp_file (fn).size = "00"b||arg2.d;	/* size 14 bits, d 12 bits. */
      128 
      129 	call gtss_ios_open_ (
      130 	     /* 1 */ (fn)				/* AFT index. */
      131 	     , /* 2 */ (gtss_ext_$pdir)		/* Temp file directory. */
      132 	     , /* 3 */ file_name (fn)
      133 	     , /* 4 */ "110000"b			/* bit=1 => read, bit2=1 => write. */
      134 	     , /* 5 */ arg2.c			/* => linked or random. */
      135 	     , /* 6 */ addr (temp_file (fn))
      136 	     , /* 7 */ addr (fms_status)		/* gtss_ios_ status code. */
      137 	     , /* 8 */ code				/* Multics error code. */
      138 	     );
      139 dcl 1 fms_status aligned,
      140       2 bit12 bit(12)unal,
      141       2 bit60 bit(60)unal;
      142 	if fms_status.bit12 = "4000"b3 then do;
      143 	     status_word_1 = 0;			/* Successful. */
      144 	     goto load_A_register;
      145 	end;
      146 	call com_err_ (
      147 	     code
      148 	     , "gtss_drl_defil_"
      149 	     , "gtss_ios_open_ status=^w. Can't open ""^a"""
      150 	     , fms_status
      151 	     , ascii_file_name
      152 	     );
      153 	aft_entry (fn).used = "0"b;			/* => Don't close, forget aft entry. */
      154 	status_word_1 = 4;				/* Temporary file not available. */
      155 	return;
      156 
      157 subr:	entry (arg_ptr_p, status_words_ptr_p, mcp_p);
      158 
      159 /* *	Subroutine entry to create a temp file.
      160*
      161*   Caller must supply "arg" structure values and
      162*   one word (based status_words_ptr_p).
      163*   "mcp_p" should be set to space large enough so
      164*   mc.regs.a variable can be used (see mc.incl.pl1).
      165*   The 1st parameter (arg_ptr_p) points to the
      166*   AFT file number variable (fixed bin) at return.
      167*   * */
      168 dcl  arg_ptr_p                ptr parm;
      169 dcl  status_words_ptr_p       ptr parm;
      170 dcl  mcp_p                    ptr parm;
      171 
      172 	arg_ptr = arg_ptr_p;
      173 	arg_ptr_p = addr (fn);			/* Point to AFT file number variable. */
      174 	status_words_ptr = status_words_ptr_p;
      175 	mcp = mcp_p;
      176 	goto create_temp;
      177 
      178 dcl  ioa_                     entry options(variable);
      179 
      180 file_name: proc (f)returns (char (32)var);
      181 
      182 /*	Provide Multics segment name for temp file.	* */
      183 dcl  f                        fixed bin (24)parm;
      184 
      185 	     p2 = f;				/* Convert AFT index to 2 numeric digits. */
      186 	     r = unique_chars_ ("0"b);
      187 	     r = r||".";
      188 	     r = r||translate (aft_entry (f).altname, "+'_~????", "*. ;<>()");
      189 	     r = r||".";
      190 	     r = r||char (p2);
      191 	     return (r);
      192 
      193 dcl  r                        char (32)var;
      194 dcl  p2                       pic"99";
      195 	end					/* file_name */;
      196 
      197 /* *	Variables for gtss_drl_defil_:
      198*   IDENTIFIER		ATTRIBUTES	* */
      199 dcl  A_reg_b36                bit (36)aligned init ("0"b);
      200 dcl  addrel                   builtin;
      201 dcl  arg_list_ptr             ptr init(null());
      202 dcl  arg_ptr                  ptr init(null());
      203 dcl  code                     fixed bin (35);
      204 dcl  fn                       fixed bin (24);
      205 dcl  gseg                     ptr init(null());
      206 dcl  index                    builtin;
      207 dcl  status                   fixed bin (24);
      208 dcl  status_word_1            fixed bin (24)aligned based (status_words_ptr);
      209 dcl  unique_chars_            entry (bit (*))returns (char (15));
      210 
      211 dcl 1 arg_list aligned based (arg_list_ptr)
      212      , 2 L_arg bit (18)unal
      213      , 2 L_stat bit (18)unal
      214      ;
      215 
      216 dcl 1 A_reg aligned based (addr (A_reg_b36))
      217      , 3 Device_type bit (06)unal
      218      , 3 Words_per_physical_block bit (12)unal
      219      , 3 Size_in_blocks_or_links bit (01)unal
      220      , 3 Linked_or_Random bit (01)unal
      221      , 3 Perm_or_Temp bit (01)unal
      222      , 3 unused bit (01)unal
      223      , 3 File_size bit (14)unal
      224      ;
      225 
  1     1 /* BEGIN INCLUDE FILE gtss_ext_.incl.pl1 */
  1     2 /*
  1     3*  Created: (Wardd Multics)  05/20/78 1307.6 mst Sat 
  1     4*  Modified: Ward            1981     add suspended_process dcl
  1     5*  Modified: Ron Barstad  83-07-21  Fixed level number on mcfc to 3
  1     6*  Modified: Ron Barstad  83-07-25  Fixed derail range in statistics to 4js3 number
  1     7**/
  1     8 dcl  gtss_ext_$aem                   fixed bin static ext	/* >0 Print "additional" error information. */;
  1     9 dcl  gtss_ext_$bad_drl_rtrn          static ext label	/* Default for drl_rtrn. */;
  1    10 dcl  gtss_ext_$db                    (72)bit(1)unal static ext;
  1    11 dcl  gtss_ext_$deferred_catalogs_ptr ptr ext;
  1    12 dcl  gtss_ext_$dispose_of_drl        static ext label	/* quit handlers for some derails use this label to abort */;
  1    13 dcl  gtss_ext_$drl_rtrn              (4)static ext label	/* where to return at subsystem end */;
  1    14 dcl  gtss_ext_$drm_path              char(168)static ext	/* gtss_expand_pathname_stores drm_path */;
  1    15 dcl  gtss_ext_$drun_jid              char (5) static ext	/* valid only for DRUN executing under absentee */;
  1    16 dcl  gtss_ext_$event_channel         fixed bin (71) static ext	/* used for DABT signals */;
  1    17 dcl  gtss_ext_$finished              static ext label	/* Return to gtss for normal conclusion. */;
  1    18 dcl  gtss_ext_$gdb_name              char(8)ext	/* Name H* module to debug. */;
  1    19 dcl  gtss_ext_$get_line              entry(ptr,ptr,fixed bin(21),fixed bin(21),fixed bin(35))variable ext /* Build mode input procedure. */;
  1    20 dcl  gtss_ext_$gtss_slave_area_seg   (4) ext static ptr	/* pointer to gtss slave area segment */;
  1    21 dcl  gtss_ext_$hcs_work_area_ptr     ptr ext static		/* Temp seg for acl lists. */;
  1    22 dcl  gtss_ext_$homedir               char (64) static ext /* user's home dir */;
  1    23 dcl  gtss_ext_$last_k_was_out        bit (1)aligned ext static	/* "1"b => last tty output was output. */;
  1    24 dcl  gtss_ext_$pdir                  char (168) varying ext static	/* pathname of process directory */;
  1    25 dcl  gtss_ext_$popup_from_pi         static ext label	/* transfer to this label after pi simulates popup primitive */;
  1    26 dcl  gtss_ext_$process_type          fixed bin (17) static ext;
  1    27 dcl  gtss_ext_$put_chars             entry(ptr,ptr,fixed bin(24),fixed bin(35)) variable ext	/* Terminal output procedure. */;
  1    28 dcl  gtss_ext_$restart_from_pi       static ext label	/* transfer to this label after pi restores machine conditions */;
  1    29 dcl  gtss_ext_$restart_seg_ptr       ptr static ext	/* points to DRUN restart file when exec under absentee */;
  1    30 dcl  gtss_ext_$sig_ptr               ext static ptr	/* saved ptr to signal_ */;
  1    31 dcl  gtss_ext_$stack_level_          fixed bin ext static;
  1    32 dcl  gtss_ext_$suspended_process     bit(1) ext static;
  1    33 dcl  gtss_ext_$SYstarstar_file_no    fixed bin (24) static ext;
  1    34 dcl  gtss_ext_$user_id               char (26)var ext;
  1    35 dcl  gtss_ext_$work_area_ptr         ptr ext;
  1    36 
  1    37 dcl  1 gtss_ext_$CFP_bits aligned static external
  1    38      , 3 no_input_yet bit (1) unaligned         /* used in gtss_CFP_input_, gtss_read_starCFP_ */
  1    39      , 3 rtn_bits bit (4) unaligned             /* used in gtss_CFP_input_, gtss_CFP_output_ */
  1    40      , 3 cpos_called bit (1) unaligned          /* used in gtss_CFP_input_, gtss_drl_t_cfio_, gtss_abandon_CFP_ */
  1    41      , 3 cout_called bit (1) unaligned          /* used in gtss_read_starCFP_, gtss_abandon_CFP_ */
  1    42      , 3 build_mode bit (1) unaligned	        /* used in gtss_build_, gtss_dsd_process_ */
  1    43      ;
  1    44 
  1    45 dcl 1 gtss_ext_$com_reg aligned static ext,
  1    46        3 tsdmx,
  1    47          4 dst fixed bin (18) unsigned unaligned,
  1    48          4 dit fixed bin (18) unsigned unaligned,
  1    49        3 tsdpt fixed bin (36) unsigned unaligned,
  1    50        3 tsddt fixed bin (36) unsigned unaligned,
  1    51        3 tsdid bit (72) unaligned,
  1    52        3 tsdsd bit (36) unaligned,
  1    53        3 tsdst fixed bin (36) unsigned unaligned,
  1    54        3 tsdjb fixed bin (35) unaligned,
  1    55        3 tsdgt,
  1    56          4 ust_loc fixed bin (18) unsigned unaligned,
  1    57          4 gating_ctl fixed bin (18) unsigned unaligned,
  1    58        3 tcdfr bit (36) unaligned;
  1    59 
  1    60 dcl 1 gtss_ext_$flags aligned static ext
  1    61      , 3 dispose_of_drl_on_pi	bit (01) unal	/* 1 => drl that should be aborted after quit-pi sequence */
  1    62      , 3 drl_in_progress	bit (01) unal	/* 1 => drl handler executing; 0 => gcos code executing */
  1    63      , 3 popup_from_pi	bit (01) unal	/* 1 => derail processor will simulate Gcos break instead of returning */
  1    64      , 3 unfinished_drl	bit (01) unal	/* 1 => subsystem is handling breaks and quit was raised during a drl */
  1    65      , 3 ss_time_limit_set	bit (01) unal	/* 1 => exec time limit set for subsystem */
  1    66      , 3 timer_ranout	bit (01) unal	/* 1 => user is executing timer runout code */
  1    67      , 3 gtss_com_err_sw      bit (01) unal       /* 1 => stop com_err_ string from going to terminal */   
  1    68      , 3 available		bit (65) unal
  1    69      ;
  1    70 
  1    71 
  1    72 dcl 1 gtss_ext_$statistics aligned static ext,		/* Derail usage statistics */
  1    73       3 total_time (-10:71)fixed bin (71),
  1    74       3 count (-10:71)fixed bin (17);
  1    75 
  1    76 /* 	Declaration of Available File Table
  1    77*   */
  1    78 dcl 1 gtss_ext_$aft aligned ext,			/* aft structure */
  1    79 
  1    80       3 start_list (0:102) fixed bin (24),		/* >0 => 1st aft_entry row to start of next entry chain. */
  1    81 
  1    82       3 aft_entry (20),
  1    83         4 altname char (8),				/* altname name for attaching this file */
  1    84         4 next_entry fixed bin (24),			/* Next aft_entry in hash chain. */
  1    85         4 previous_add fixed bin (24),			/* Previously added entry. */
  1    86         4 next_add fixed bin (24),			/* Entry added after this one. */
  1    87         4 used bit (1) unal,				/* "1"b => aft_entry contains AFT value. */
  1    88         4 forced bit(1) unal,				/* "1"b => gtss_verify_access_ forced access on this file. */
  1    89 
  1    90       3 free_space fixed bin (24),			/* Index of start of free space list for aft entries. */
  1    91       3 first_added fixed bin (24),			/* >0  => start of chain in add order. */
  1    92       3 last_added fixed bin (24)			/* >0 => end of chain in added order. */;
  1    93 
  1    94 dcl  gtss_ext_$ppt                   ptr ext /*  switch name for tapein drl */;
  1    95 /**	Data structure to provide access to installed
  1    96*   subsystems fast library load.
  1    97*   **/
  1    98 dcl 1 gtss_ext_$fast_lib aligned ext
  1    99      , 3 fast_lib_fcb ptr				/* Pointer to msf fcb.	*/
  1   100      , 3 fast_lib_ncp fixed bin (24)			/* Number of components. */
  1   101      , 3 comp_ptr (0:9)ptr				/* Pointer to component. */
  1   102      , 3 comp_wds (0:9)fixed bin (24)			/* Component length (words). */
  1   103      ;
  1   104 
  1   105 /* Pointers to segments to regulate multipler
  1   106*   callers to files. Same segments are used to regulate
  1   107*   all simulator callers.
  1   108**/
  1   109 dcl 1 gtss_ext_$mcfc	aligned ext,
  1   110       3 multics_lock_id	bit(36),
  1   111       3 wait_time		fixed bin,
  1   112       3 files_ptr		ptr,
  1   113       3 names_ptr		ptr,
  1   114       3 callers_ptr		(0:3)ptr
  1   115 ;
  1   116 
  1   117 /*   END INCLUDE FILE gtss_ext_.incl.pl1 */
      226 
      227 
  2     1 /*  */
  2     2 /* BEGIN INCLUDE FILE  mc.incl.pl1   Created Dec 72 for 6180 - WSS. */
  2     3 /* Modified 06/07/76 by Greenberg for mc.resignal */
  2     4 /* Modified 07/07/76 by Morris for fault register data */
  2     5 /* Modified 08/28/80 by J. A. Bush for the DPS8/70M CVPU */
  2     6 /* Modified '82 to make values constant */
  2     7 
  2     8 /* words 0-15 pointer registers */
  2     9 
  2    10 dcl  mcp ptr;
  2    11 
  2    12 dcl 1 mc based (mcp) aligned,
  2    13     2 prs (0:7) ptr,				/* POINTER  REGISTERS */
  2    14    (2 regs,					/* registers */
  2    15       3 x (0:7) bit (18),				/* index registers */
  2    16       3 a bit (36),					/* accumulator */
  2    17       3 q bit (36),					/* q-register */
  2    18       3 e bit (8),					/* exponent */
  2    19       3 pad1 bit (28),
  2    20       3 t bit (27),					/* timer register */
  2    21       3 pad2 bit (6),
  2    22       3 ralr bit (3),				/* ring alarm register */
  2    23 
  2    24     2 scu (0:7) bit (36),
  2    25 
  2    26     2 mask bit (72),				/* mem controller mask at time of fault */
  2    27     2 ips_temp bit (36),				/* Temporary storage for IPS info */
  2    28     2 errcode fixed bin (35),				/* fault handler's error code */
  2    29     2 fim_temp,
  2    30       3 unique_index bit (18) unal,			/* unique index for restarting faults */
  2    31       3 resignal bit (1) unal,			/* recompute signal name with fcode below */
  2    32       3 fcode bit (17) unal,				/* fault code used as index to FIM table and SCT */
  2    33     2 fault_reg bit (36),				/* fault register */
  2    34     2 pad2 bit (1),
  2    35     2 cpu_type fixed bin (2) unsigned,			/* L68 = 0, DPS8/70M = 1 */
  2    36     2 ext_fault_reg bit (15),				/* extended fault reg for DPS8/70M CPU */
  2    37     2 fault_time bit (54),				/* time of fault */
  2    38 
  2    39     2 eis_info (0:7) bit (36)) unaligned;
  2    40 
  2    41 
  2    42 dcl (apx fixed bin init (0),
  2    43      abx fixed bin init (1),
  2    44      bpx fixed bin init (2),
  2    45      bbx fixed bin init (3),
  2    46      lpx fixed bin init (4),
  2    47      lbx fixed bin init (5),
  2    48      spx fixed bin init (6),
  2    49      sbx fixed bin init (7)) internal static options (constant);
  2    50 
  2    51 
  2    52 
  2    53 
  2    54 dcl  scup ptr;
  2    55 
  2    56 dcl 1 scu based (scup) aligned,			/* SCU DATA */
  2    57 
  2    58 
  2    59 /*	WORD (0)		*/
  2    60 
  2    61    (2 ppr,					/* PROCEDURE POINTER REGISTER */
  2    62       3 prr bit (3),				/* procedure ring register */
  2    63       3 psr bit (15),				/* procedure segment register */
  2    64       3 p bit (1),					/* procedure privileged bit */
  2    65 
  2    66     2 apu,					/* APPENDING UNIT STATUS */
  2    67       3 xsf bit (1),				/* ext seg flag - IT modification */
  2    68       3 sdwm bit (1),				/* match in SDW Ass. Mem. */
  2    69       3 sd_on bit (1),				/* SDW Ass. Mem.  ON */
  2    70       3 ptwm bit (1),				/* match in PTW Ass. Mem. */
  2    71       3 pt_on bit (1),				/* PTW Ass. Mem.  ON */
  2    72       3 pi_ap bit (1),				/* Instr Fetch or Append cycle */
  2    73       3 dsptw bit (1),				/* Fetch of DSPTW */
  2    74       3 sdwnp bit (1),				/* Fetch of SDW non paged */
  2    75       3 sdwp bit (1),				/* Fetch of SDW paged */
  2    76       3 ptw bit (1),				/* Fetch of PTW */
  2    77       3 ptw2 bit (1),				/* Fetch of pre-paged PTW */
  2    78       3 fap bit (1),				/* Fetch of final address paged */
  2    79       3 fanp bit (1),				/* Fetch of final address non-paged */
  2    80       3 fabs bit (1),				/* Fetch of final address absolute */
  2    81 
  2    82     2 fault_cntr bit (3),				/* number of retrys of EIS instructions */
  2    83 
  2    84 
  2    85 /*	WORD (1)		*/
  2    86 
  2    87     2 fd,						/* FAULT  DATA */
  2    88       3 iro bit (1),				/* illegal ring order */
  2    89       3 oeb bit (1),				/* out of execute bracket */
  2    90       3 e_off bit (1),				/* no execute */
  2    91       3 orb bit (1),				/* out of read bracket */
  2    92       3 r_off bit (1),				/* no read */
  2    93       3 owb bit (1),				/* out of write bracket */
  2    94       3 w_off bit (1),				/* no write */
  2    95       3 no_ga bit (1),				/* not a gate */
  2    96       3 ocb bit (1),				/* out of call bracket */
  2    97       3 ocall bit (1),				/* outward call */
  2    98       3 boc bit (1),				/* bad outward call */
  2    99       3 inret bit (1),				/* inward return */
  2   100       3 crt bit (1),				/* cross ring transfer */
  2   101       3 ralr bit (1),				/* ring alarm register */
  2   102       3 am_er bit (1),				/* associative memory fault */
  2   103       3 oosb bit (1),				/* out of segment bounds */
  2   104       3 paru bit (1),				/* processor parity upper */
  2   105       3 parl bit (1),				/* processor parity lower */
  2   106       3 onc_1 bit (1),				/* op not complete type 1 */
  2   107       3 onc_2 bit (1),				/* op not complete type 2 */
  2   108 
  2   109     2 port_stat,					/* PORT  STATUS */
  2   110       3 ial bit (4),				/* illegal action lines */
  2   111       3 iac bit (3),				/* illegal action channel */
  2   112       3 con_chan bit (3),				/* connect channel */
  2   113 
  2   114     2 fi_num bit (5),				/* (fault/interrupt)  number */
  2   115     2 fi_flag bit (1),				/*  1 => fault,  0 => interrupt  */
  2   116 
  2   117 
  2   118 /*	WORD (2)		*/
  2   119 
  2   120     2 tpr,					/* TEMPORARY POINTER REGISTER */
  2   121       3 trr bit (3),				/* temporary ring register */
  2   122       3 tsr bit (15),				/* temporary segment register */
  2   123 
  2   124     2 pad2 bit (9),
  2   125 
  2   126     2 cpu_no bit (3),				/* CPU number */
  2   127 
  2   128     2 delta bit (6),				/* tally modification DELTA */
  2   129 
  2   130 
  2   131 /*	WORD (3)		*/
  2   132 
  2   133     2 word3 bit (18),
  2   134 
  2   135     2 tsr_stat,					/* TSR STATUS for 1,2,&3 word instructions */
  2   136       3 tsna,					/* Word 1 status */
  2   137         4 prn bit (3),				/* Word 1  PR  number */
  2   138         4 prv bit (1),				/* Word 1  PR  valid bit */
  2   139       3 tsnb,					/* Word 2  status */
  2   140         4 prn bit (3),				/* Word 2  PR  number */
  2   141         4 prv bit (1),				/* Word 2  PR  valid bit */
  2   142       3 tsnc,					/* Word 3  status */
  2   143         4 prn bit (3),				/* Word 3  PR  number */
  2   144         4 prv bit (1),				/* Word 3  PR  valid bit */
  2   145 
  2   146     2 tpr_tbr bit (6),				/* TPR.TBR  field */
  2   147 
  2   148 
  2   149 /* 	WORD (4)		*/
  2   150 
  2   151     2 ilc bit (18),					/* INSTRUCTION  COUNTER */
  2   152 
  2   153     2 ir,						/* INDICATOR  REGISTERS */
  2   154       3 zero bit (1),				/* zero indicator */
  2   155       3 neg bit (1),				/* negative indicator */
  2   156       3 carry bit (1),				/* carryry indicator */
  2   157       3 ovfl bit (1),				/* overflow indicator */
  2   158       3 eovf bit (1),				/* eponent overflow */
  2   159       3 eufl bit (1),				/* exponent underflow */
  2   160       3 oflm bit (1),				/* overflow mask */
  2   161       3 tro bit (1),				/* tally runout */
  2   162       3 par bit (1),				/* parity error */
  2   163       3 parm bit (1),				/* parity mask */
  2   164       3 bm bit (1),					/* ^bar mode */
  2   165       3 tru bit (1),				/* truncation mode */
  2   166       3 mif bit (1),				/* multi-word instruction mode */
  2   167       3 abs bit (1),				/* absolute mode */
  2   168       3 hex bit (1),				/* hexadecimal exponent mode */
  2   169       3 pad bit (3),
  2   170 
  2   171 
  2   172 /*	WORD (5)		*/
  2   173 
  2   174     2 ca bit (18),					/* COMPUTED  ADDRESS */
  2   175 
  2   176     2 cu,						/* CONTROL UNIT STATUS */
  2   177       3 rf bit (1),					/* on first cycle of repeat instr */
  2   178       3 rpt bit (1),				/* repeat instruction */
  2   179       3 rd bit (1),					/* repeat double instruction */
  2   180       3 rl bit (1),					/* repeat link instruciton */
  2   181       3 pot bit (1),				/* IT  modification */
  2   182       3 pon bit (1),				/* return type instruction */
  2   183       3 xde bit (1),				/* XDE from Even location */
  2   184       3 xdo bit (1),				/* XDE from Odd  location */
  2   185       3 poa bit (1),				/* operation preparation */
  2   186       3 rfi bit (1),				/* tells CPU to refetch instruction */
  2   187       3 its bit (1),				/* ITS modification */
  2   188       3 if bit (1),					/* fault occured during instruction fetch */
  2   189 
  2   190     2 cpu_tag bit (6)) unaligned,			/* computed tag field */
  2   191 
  2   192 
  2   193 /*	WORDS (6,7)	*/
  2   194 
  2   195     2 even_inst bit (36),				/* even instruction of faulting pair */
  2   196 
  2   197     2 odd_inst bit (36);				/* odd  instruction of faulting pair */
  2   198 
  2   199 
  2   200 
  2   201 
  2   202 
  2   203 
  2   204 /*	ALTERNATE   SCU  DECLARATION		*/
  2   205 
  2   206 
  2   207 dcl 1 scux based (scup) aligned,
  2   208 
  2   209    (2 pad0 bit (36),
  2   210 
  2   211     2 fd,						/* GROUP II  FAULT DATA */
  2   212       3 isn bit (1),				/* illegal segment number */
  2   213       3 ioc bit (1),				/* illegal op  code  */
  2   214       3 ia_am bit (1),				/* illegal address - modifier */
  2   215       3 isp bit (1),				/* illegal slave  procedure */
  2   216       3 ipr bit (1),				/* illegal procedure */
  2   217       3 nea bit (1),				/* non existent address */
  2   218       3 oobb bit (1),				/* out of bounds */
  2   219       3 pad bit (29),
  2   220 
  2   221     2 pad2 bit (36),
  2   222 
  2   223     2 pad3a bit (18),
  2   224 
  2   225     2 tsr_stat (0:2),				/* TSR  STATUS  as an  ARRAY */
  2   226       3 prn bit (3),				/* PR  number */
  2   227       3 prv bit (1),				/* PR  valid bit */
  2   228 
  2   229     2 pad3b bit (6)) unaligned,
  2   230 
  2   231     2 pad45 (0:1) bit (36),
  2   232 
  2   233     2 instr (0:1) bit (36);				/* Instruction ARRAY */
  2   234 
  2   235 
  2   236 
  2   237 /*  END INCLUDE FILE   mc.incl.pl1 */
      228 
      229 
  3     1 /* BEGIN INCLUDE FILE gtss_io_status_words.incl.pl1 */
  3     2 /*
  3     3*  Created: (Wardd Multics)  06/16/78 1131.3 mst Fri 
  3     4**/
  3     5 
  3     6 /**	GCOS status return words
  3     7*	(See: I/O PROGRAMMING
  3     8*	      DB82, Rev. 0, August 1974
  3     9*	      Pages 11-13)
  3    10* **/
  3    11 
  3    12 dcl  status_words_ptr		ptr init(null());
  3    13 dcl 1 status_words		aligned based(status_words_ptr)
  3    14 ,     3 WORD1
  3    15 ,       4 Termination_indicator	bit(01)unal
  3    16 ,       4 Power_bit			bit(01)unal
  3    17 ,       4 Major_status		bit(04)unal
  3    18 ,       4 Substatus			bit(06)unal
  3    19 ,       4 PSI_channel_odd_even_ind	bit(01)unal
  3    20 ,       4 Marker_bit_interrupt	bit(01)unal
  3    21 ,       4 Reserved			bit(01)unal
  3    22 ,       4 Lost_interrupt_bit		bit(01)unal
  3    23 ,       4 Initiate_interrupt_ind	bit(01)unal
  3    24 ,       4 Abort_indicator		bit(01)unal
  3    25 ,       4 IOM_status		bit(06)unal
  3    26 ,       4 Address_extension_bits	bit(06)unal
  3    27 ,       4 Record_count_residue	bit(06)unal
  3    28 
  3    29 ,      3 WORD2
  3    30 ,       4 Data_address_residue	bit(18)unal
  3    31 ,       4 Character_count		bit(03)unal
  3    32 ,       4 Read_Write_control_bit	bit(01)unal
  3    33 ,       4 Action_code		bit(02)unal
  3    34 ,       4 Word_count_residue		bit(12)unal
  3    35 ;
  3    36 /*   END INCLUDE FILE gtss_io_status_words.incl.pl1 */
      230 
      231 
  4     1 /* BEGIN INCLUDE FILE gtss_tfa_ext_.incl.pl1 */
  4     2 /*
  4     3*  Created: (Wardd Multics)  08/07/78 0911.6 mst Mon 
  4     4**/
  4     5 
  4     6 /* Structure to record file "attributes".
  4     7*   Note: gtss_dfd_ext_$disk_file_data(i).gtss_disk.attributes_ptr
  4     8*         locates gtss_tfa_ext_$file_attributes.temp_file(i).
  4     9**/
  4    10 
  4    11 dcl 1 gtss_tfa_ext_$file_attributes	aligned ext,
  4    12       3 temp_file			(20) like  gtss_file_attributes;
  4    13 
  5     1 /* BEGIN INCLUDE FILE gtss_file_attributes.incl.pl1 */
  5     2 /*
  5     3*  Created: (Kepner Multics)  06/02/78 1522.0 mst Fri 
  5     4**/
  5     5 
  5     6 /*	Declaration of File Attributes Segement	*/
  5     7 
  5     8 
  5     9 dcl  gtss_file_attributes_ptr ptr init(null());
  5    10 
  5    11 dcl 1 gtss_file_attributes based (gtss_file_attributes_ptr) aligned,
  5    12     2 max_size fixed bin (24),			/* maximum size the file can grow to
  5    13*						   in 320 word blocks.  if = 0 then the
  5    14*						   file size is unlimited. */
  5    15     2 current_size fixed bin (24),			/* current size of the file in 320 word blocks */
  5    16     2 user_attributes aligned,
  5    17       3 non_null bit (1) unal,			/* 0 = this file has never been written to */
  5    18       3 user_attr bit (35) unal,			/* User defined attributes */
  5    19     2 descriptor aligned,
  5    20       3 device_type bit (6) unaligned,			/* currently ignored */
  5    21       3 words_block bit (12) unaligned,			/* number of words per physical block */
  5    22       3 llink_flag bit (1) unaligned,			/* if 0= size in links | 1= size in llinks */
  5    23       3 mode bit (1) unaligned,			/* 0= linked file | 1= random file */
  5    24       3 perm bit (1) unaligned,			/* 1=permanent file|0=not */
  5    25       3 fill bit (1) unaligned,
  5    26       3 size bit (14) unaligned;
  5    27 
  5    28 
  5    29 /*   END INCLUDE FILE gtss_file_attributes.incl.pl1 */
  4    14 
  4    15 
  4    16 /*   END INCLUDE FILE gtss_tfa_ext_.incl.pl1 */
      232 
      233 
  6     1 /* BEGIN INCLUDE FILE gtss_dfd_ext_.incl.pl1 */
  6     2 /*
  6     3*  Created:  (Wardd Multics)  06/09/78 1650.6 mst Fri 
  6     4**/
  6     5 
  6     6 dcl 1 gtss_dfd_ext_$disk_file_data (41) aligned ext,		/* disk_file_data structure */
  6     7 
  6     8     3 gtss_disk,
  6     9       4 dir_name char (168) unal,			/* containing directory for file */
  6    10       4 entry_name char (32) unal,			/* entry name for file */
  6    11       4 fcb_ptr ptr aligned,				/* ptr to file control block */
  6    12       4 msf_array_ptr ptr,				/* Pointer to an array of pointers for a msf. Each
  6    13*						   component which has been accessed has a corresponding
  6    14*						   initialized pointer.  Currently 500 components
  6    15*						   are supported. */
  6    16       4 single_segment_ptr ptr,			/* Pointer to segment for single segment file */
  6    17       4 indicators aligned,				/* one word of flags */
  6    18 
  6    19         5 msf bit (1) unaligned,			/* 1=msf segment | 0= single segment */
  6    20         5 protected_file bit (1) unaligned,		/* 1=file uses protections | 0= unprotected */
  6    21         5 fill bit (34) unal,
  6    22 
  6    23       4 permissions aligned,
  6    24         5 read bit (1) unaligned,			/* 1=read permission  */
  6    25         5 execute bit (1) unaligned,			/* 1=execute permission */
  6    26         5 write bit (1) unaligned,			/* 1=write permission */
  6    27         5 fill2 bit (33) unaligned,			/* unused at this time */
  6    28 
  6    29       4 access_mode bit (6) aligned,			/* contains the mode by which the file was accessed */
  6    30       4 component fixed bin,				/* current component value (first component = 0) */
  6    31       4 offset fixed bin (24),			/* current word offset in the component */
  6    32       4 file_position fixed bin (30),			/* current file position in words */
  6    33       4 file_size fixed bin (30),			/* size of file in words */
  6    34       4 no_components fixed bin (24),			/* number of components for a msf */
  6    35       4 attributes_ptr ptr,				/* Pointer to the attributes structure
  6    36*						   for this file. (See gtss_file_attributes.incl.pl1) */
  6    37 
  6    38       4 pat_body,
  6    39 
  6    40         5 word_0,
  6    41 	6 defective bit (1) unal,			/* 1 = file has defective space */
  6    42 	6 io_errors bit (1) unal,			/* 1 = I/O errors encountered on file */
  6    43 	6 reserved bit (2) unal,			/* Reserved for GCOS */
  6    44 	6 sct bit (12) unal,			/* address of SCT for device on which
  6    45*						   file begins or if cataloged,
  6    46*						   for device with file catalog entry */
  6    47 	6 reserved2 bit (2) unal,			/* Reserved for GCOS */
  6    48 
  6    49         5 word_1,
  6    50 	6 io_time fixed bin (35),			/* I/O time for this file */
  6    51 
  6    52         5 word_2,
  6    53 	6 protected bit (1) unal,			/* 1 = file has protected allocation */
  6    54 	6 hash_code bit (5) unal,			/* hash code of user name under which
  6    55*						   file is cataloged */
  6    56 	6 not_cat bit (1) unal,			/* 1 = file is not cataloged */
  6    57 	6 last_desc bit (1) unal,			/* 1 = last descriptor for file is not in memory */
  6    58 	6 random bit (1) unal,			/* 1 = access to file is random */
  6    59 	6 perm bit (1) unal,			/* 1 = file space is permanently assigned */
  6    60 	6 first_desc bit (1) unal,			/* 1 = first descriptor for file is not in memory */
  6    61 	6 creator bit (1) unal,			/* 1 = user is not creator of file */
  6    62 	6 disposition bit (2) unal,			/* Abort disposition code
  6    63*						   00 = Release
  6    64*						   01 = Dismount
  6    65*						   10 = Save
  6    66*						   11 = Continue */
  6    67 	6 ids1 bit (1) unal,			/* 1 = file is an I-D-S/I file */
  6    68 	6 write_performed bit (1) unal,		/* 1 = write was performed on file */
  6    69 	6 unpermitted_access bit (1) unal,		/* 1 = unpermitted access to file attempted or seek
  6    70*						   attempted to part of file marked defective (only
  6    71*						   for procted allocation) */
  6    72 	6 purge bit (1) unal,			/* 1 = file space to be purgedbefore deallocating file. */
  6    73 	6 sector_number bit (18) unal,		/* If cataloged file, sector number of file catalog
  6    74*						   (on device with SCT referenced in word 0).  If
  6    75*						   cataloged file that is proctected (bit 0 ON in this
  6    76*						   word), memory location of table in File Management
  6    77*						   Supervisor Executive.  If user temporary file,
  6    78*						   largest size file has ever attained, in llinks.
  6    79*						   If system value equals 777777 octal, it is system
  6    80*						   file created by System Input. */
  6    81 
  6    82         5 word_3,
  6    83 	6 llink_size bit (14) unal,			/* 0-13 ^= 0, Current total file size in llinks
  6    84*						   0-13 = 0, File size is greater than 16,383 llinks,
  6    85*						   and if the file is cataloged, call to .MFS19,5 with
  6    86*						   offset to PAT pointer in index 5 will cause bits
  6    87*						   14-35 of Q-register to be set to file size. (Unless
  6    88*						   there is a Seek error on file catalog in which case
  6    89*						   zero is returned. )
  6    90*						   */
  6    91 	6 llink_position bit (22) unal,		/* Relative llink position within the space descriptors
  6    92*						   in memory. */
  6    93 
  6    94         5 word_4,
  6    95 	6 not_last_desc bit (1) unal,			/* 1 = not last descriptor in memory */
  6    96 	6 space_desc bit (1) unal,			/* 0 = this is space descriptor */
  6    97 	6 space_defective bit (1) unal,		/* 1 = Space is defective */
  6    98 	6 extent bit (15) unal,			/* Number of llinks in this extent (area defined by this
  6    99*						   descriptor) */
  6   100 	6 origin bit (18) unal;			/* device llinks number of origin of this extent */
  6   101 /*   END INCLUDE FILE gtss_dfd_ext_.incl.pl1 */
      234 
      235 
  7     1 /* BEGIN INCLUDE FILE gtss_ust_ext_.incl.pl1 */
  7     2 /* UST: User Status Table 
  7     3*   definitions based on 
  7     4*   System Tables, Order number DD14-01E, January 1981
  7     5*   Section 15, Time Sharing System
  7     6*
  7     7*   Authors: Robert J. Grimes	Created
  7     8*   -	  Albert N. Kepner	  1978
  7     9*   -	  Robert M. May
  7    10*   -	  David B. Ward
  7    11*   Change:  Dave Ward	02/23/79 Level 4 numbering.
  7    12*   Change:  Ron Barstad  83-07-12 Repaired damaged formating and word offset comments
  7    13*                                  Brought up to 4JS3 functionality
  7    14**/
  7    15 /* octal word offsets of entries */
  7    16 dcl 1 gtss_ust_ext_$ust aligned ext,
  7    17       3 gtss_ust,
  7    18 /* 0-1  */	4 lid		bit (72),
  7    19 /* 2    */	4 lstp		bit (36),
  7    20 /* 3    */	4 ltin		bit (36),
  7    21 /* 4    */	4 lstio,
  7    22 			5 no_of_chars_by_8  fixed bin (18) uns unal,
  7    23 			5 no_of_disk_io     fixed bin (18) uns unal,
  7    24 /* 5    */	4 lsnub		bit (36),
  7    25 /* 6-7  */	4 lchg		bit (72),
  7    26 /* 10   */	4 lbuf,
  7    27 			5 address		bit (18)unaligned,
  7    28 			5 tally		bit (1)unaligned,
  7    29 			5 terminal_type	bit (5)unaligned,
  7    30 			5 station_id	bit (12)unaligned,
  7    31 /* 11-12 */	4 liost (0:1)	bit (36),
  7    32 /* 13   */	4 lcc		bit (36),
  7    33 /* 14   */	4 lback,
  7    34 			5 fill1		bit (18) unaligned,
  7    35 			5 gwake		fixed bin (17) unaligned,
  7    36 /* 15   */	4 lflag,
  7    37 			5 mp_list		bit (18) unaligned,
  7    38 			5 flags unaligned,
  7    39 				6 b18		bit (1) unaligned,
  7    40 				6 b19		bit (1) unaligned,
  7    41 				6 b20		bit (1) unaligned,
  7    42 				6 b21		bit (1) unaligned,
  7    43 				6 b22		bit (1) unaligned,
  7    44 				6 b23		bit (1) unaligned,
  7    45 				6 b24		bit (1) unaligned,
  7    46 				6 b25		bit (1) unaligned,
  7    47 				6 b26		bit (1) unaligned,
  7    48 				6 b27		bit (1) unaligned,
  7    49 				6 b28		bit (1) unaligned,
  7    50 				6 b29		bit (1) unaligned,
  7    51 				6 b30		bit (1) unaligned,
  7    52 				6 b31		bit (1) unaligned,
  7    53 				6 b32		bit (1) unaligned,
  7    54 				6 b33		bit (1) unaligned,
  7    55 				6 b34		bit (1) unaligned,
  7    56 				6 b35		bit (1) unaligned,
  7    57 /* 16   */	4 lkdss		bit (36),
  7    58 /* 17   */	4 lfile,
  7    59 			5 program_stack	fixed bin (17) unal,
  7    60 			5 file_list_ptr	bit (18) unal,
  7    61 /* 20   */	4 lttys		bit (36),
  7    62 /* 21   */	4 lswth,
  7    63 			5 b0		bit (1) unaligned,
  7    64 			5 b1		bit (1) unaligned,
  7    65 			5 b2		bit (1) unaligned,
  7    66 			5 b3		bit (1) unaligned,
  7    67 			5 b4		bit (1) unaligned,
  7    68 			5 b5		bit (1) unaligned,
  7    69 			5 b6		bit (1) unaligned,
  7    70 			5 b7		bit (1) unaligned,
  7    71 			5 b8		bit (1) unaligned,
  7    72 			5 b9		bit (1) unaligned,
  7    73 			5 b10		bit (1) unaligned,
  7    74 			5 b11		bit (1) unaligned,
  7    75 			5 b12		bit (1) unaligned,
  7    76 			5 b13		bit (1) unaligned,
  7    77 			5 b14		bit (1) unaligned,
  7    78 			5 b15		bit (1) unaligned,
  7    79 			5 b16		bit (1) unaligned,
  7    80 			5 b17		bit (1) unaligned,
  7    81 			5 b18		bit (1) unaligned,
  7    82 			5 b19		bit (1) unaligned,
  7    83 			5 b20		bit (1) unaligned,
  7    84 			5 b21		bit (1) unaligned,
  7    85 			5 b22		bit (1) unaligned,
  7    86 			5 b23		bit (1) unaligned,
  7    87 			5 b24		bit (1) unaligned,
  7    88 			5 b25		bit (1) unaligned,
  7    89 			5 b26		bit (1) unaligned,
  7    90 			5 b27		bit (1) unaligned,
  7    91 			5 b28		bit (1) unaligned,
  7    92 			5 b29		bit (1) unaligned,
  7    93 			5 b30		bit (1) unaligned,
  7    94 			5 b31		bit (1) unaligned,
  7    95 			5 b32		bit (1) unaligned,
  7    96 			5 b33		bit (1) unaligned,
  7    97 			5 b34		bit (1) unaligned,
  7    98 			5 b35		bit (1) unaligned,
  7    99 /* 22   */	4 lsize,
  7   100 			5 bar		fixed bin (17) unaligned,
  7   101 			5 limit		bit (18) unaligned,
  7   102 /* 23... */	4 lswap,
  7   103 			5 fill		bit (18) unal,
  7   104 			5 size		bit (18) unal,
  7   105 /* ...24 */	4 transfer_cell	bit (36) unal,
  7   106 /* 25   */	4 lerrm		bit (36),
  7   107 /* 26-37 */	4 lcfil (0:9)	bit (36),
  7   108 /* 40   */	4 lsybc,
  7   109 			5 b0_17		fixed bin (17) unaligned,
  7   110 			5 b18_35		fixed bin (17) unaligned,
  7   111 /* 41-42 */	4 lstem (0:1)	bit (36),
  7   112 /* 43    */	4 lcals,
  7   113 			5 b0_17		fixed bin (17) unaligned,
  7   114 			5 b18_35		bit (18) unaligned,
  7   115 /* 44-51 */	4 subsystems (3),
  7   116 			5 content_lswap,
  7   117 				6 fill		bit (18) unal,
  7   118 				6 size		bit (18) unal,
  7   119 			5 tally_address	fixed bin (17) unaligned,
  7   120 			5 ss_flags	bit (18) unaligned,
  7   121 /* 52   */	4 ltalc,
  7   122 			5 tod		fixed bin (17) unaligned,
  7   123 			5 startup		fixed bin (17) unaligned,
  7   124 /* 53   */	4 lspts		fixed bin (35),
  7   125 /* 54   */	4 lflg2,
  7   126 			5 b0		bit (1) unaligned,
  7   127 			5 b1		bit (1) unaligned,
  7   128 			5 b2		bit (1) unaligned,
  7   129 			5 b3		bit (1) unaligned,
  7   130 			5 b4		bit (1) unaligned,
  7   131 			5 b5		bit (1) unaligned,
  7   132 			5 b6		bit (1) unaligned,
  7   133 			5 b7		bit (1) unaligned,
  7   134 			5 b8		bit (1) unaligned,
  7   135 			5 b9		bit (1) unaligned,
  7   136 			5 b10		bit (1) unaligned,
  7   137 			5 b11		bit (1) unaligned,
  7   138 			5 b12		bit (1) unaligned,
  7   139 			5 b13		bit (1) unaligned,
  7   140 			5 b14		bit (1) unaligned,
  7   141 			5 b15		bit (1) unaligned,
  7   142 			5 b16		bit (1) unaligned,
  7   143 			5 b17		bit (1) unaligned,
  7   144 			5 b18		bit (1) unaligned,
  7   145 			5 b19		bit (1) unaligned,
  7   146 			5 b20		bit (1) unaligned,
  7   147 			5 b21		bit (1) unaligned,
  7   148 			5 b22		bit (1) unaligned,
  7   149 			5 b23		bit (1) unaligned,
  7   150 			5 b24		bit (1) unaligned,
  7   151 			5 b25		bit (1) unaligned,
  7   152 			5 b26		bit (1) unaligned,
  7   153 			5 b27		bit (1) unaligned,
  7   154 			5 b28		bit (1) unaligned,
  7   155 			5 b29		bit (1) unaligned,
  7   156 			5 b30		bit (1) unaligned,
  7   157 			5 b31		bit (1) unaligned,
  7   158 			5 b32		bit (1) unaligned,
  7   159 			5 b33		bit (1) unaligned,
  7   160 			5 b34		bit (1) unaligned,
  7   161 			5 b35		bit (1) unaligned,
  7   162 /* 55-60 */	4 lsftm (0:3)	bit (36),
  7   163 /* 61    */	4 lsprt		fixed bin (35),
  7   164 /* 62    */	4 ltrm		bit (36),
  7   165 /* 63    */	4 linno		fixed bin (35),
  7   166 /* 64    */	4 lincr		fixed bin (35),
  7   167 /* 65    */	4 ltdes		bit (36),
  7   168 /* 66    */	4 lbptr		bit (36),
  7   169 /* 67    */	4 lpptr,
  7   170 			5 last_file_pat_ptr	bin (18) uns unal,
  7   171 			5 lpptr_reserved	bin (18) uns unal,
  7   172 /* 70    */	4 lsclp		bit (36),
  7   173 /* 71    */	4 limit		fixed bin (35),
  7   174 /* 72    */	4 lacpt,
  7   175 			5 jout_pat_offset	bit (18) unal,
  7   176 			5 permissions unal,
  7   177 				6 lodx		bit (1) unal,
  7   178 				6 cardin		bit (1) unal,
  7   179 				6 talk		bit (1) unal,
  7   180 				6 lods		bit (1) unal,
  7   181 			5 cardin_urgency	bit (14) unal,
  7   182 /* 73    */	4 ldrl,
  7   183 			5 ilc		bit (18) unaligned,
  7   184 			5 code		fixed bin (17) unaligned,
  7   185 /* 74    */	4 ljsnb		bit (36),
  7   186 /* 75    */	4 ltm0		bit (36),
  7   187 /* 76    */	4 ltm1		bit (36),
  7   188 /* 77    */	4 ltm2		bit (36),
  7   189 /* 100   */	4 ltm3		bit (36),
  7   190 /* 101   */	4 ltm4		bit (36),
  7   191 /* 102   */	4 ltm5		bit (36),
  7   192 /* 103   */	4 ltmwt		bit (36),
  7   193 /* 104   */	4 ltmrs		bit (36),
  7   194 /* 105   */	4 ltc0		bit (36),
  7   195 /* 106   */	4 ltc1		bit (36),
  7   196 /* 107   */	4 ltc2		bit (36),
  7   197 /* 110   */	4 lct3		bit (36),
  7   198 /* 111   */	4 ltc4		bit (36),
  7   199 /* 112   */	4 ltc5		bit (36),
  7   200 /* 113   */	4 ltcw		bit (36),
  7   201 /* 114   */	4 lkst		bit (36),
  7   202 /* 115   */	4 lkst2		bit (36),
  7   203 /* 116   */	4 lkcc		bit (36),
  7   204 /* 117   */	4 lkms		bit (36),
  7   205 /* 120-121 */	4 lksdc (0:1)	bit (36),
  7   206 /* 122   */	4 lkntp		bit (36),
  7   207 /* 123   */	4 lkrdc		bit (36),
  7   208 /* 124   */	4 lpqf		bit (36),
  7   209 /* 125   */	4 lpqb		bit (36),
  7   210 /* 126   */	4 lustl		bit (36),
  7   211 /* 127   */	4 ltemp		bit (36),
  7   212 /* 130   */	4 lrtll,
  7   213 			5 word_length	fixed bin unaligned,
  7   214 			5 char_length	fixed bin unaligned,
  7   215 /* 131   */	4 ltim		bit (36),
  7   216 /* 132   */	4 lcfio,
  7   217 			5 sect_out	fixed bin(18)unsigned unal,
  7   218 			5 sect_in		fixed bin(18)unsigned unal,
  7   219 /* 133   */	4 lcfst,
  7   220 			5 initial_sect_out	fixed bin(18)unsigned unal,
  7   221 			5 start_term	fixed bin(18)unsigned unal,
  7   222 /* 134   */	4 lcmpt		bit (36),
  7   223 /* 135   */	4 lcjid		bit (36),
  7   224 /* 136-137 */	4 lrcal (0:1)	bit (36),
  7   225 /* 140   */	4 lrdta		bit (36),
  7   226 /* 141   */	4 lrrsk		bit (36),
  7   227 /* 142   */	4 lrskd		bit (36),
  7   228 /* 143   */	4 lrcc		bit (36),
  7   229 /* 144-145 */	4 lrsts (0:1)	bit (36),
  7   230 /* 146   */	4 lrtm		bit (36),
  7   231 /* 147   */	4 lswt2,
  7   232 			5 b0		bit (1) unaligned,
  7   233 			5 b1		bit (1) unaligned,
  7   234 			5 b2		bit (1) unaligned,
  7   235 			5 b3		bit (1) unaligned,
  7   236 			5 b4		bit (1) unaligned,
  7   237 			5 b5		bit (1) unaligned,
  7   238 			5 b6		bit (1) unaligned,
  7   239 			5 b7		bit (1) unaligned,
  7   240 			5 b8		bit (1) unaligned,
  7   241 			5 b9		bit (1) unaligned,
  7   242 			5 b10		bit (1) unaligned,
  7   243 			5 b11		bit (1) unaligned,
  7   244 			5 b12		bit (1) unaligned,
  7   245 			5 b13		bit (1) unaligned,
  7   246 			5 b14		bit (1) unaligned,
  7   247 			5 b15		bit (1) unaligned,
  7   248 			5 b16		bit (1) unaligned,
  7   249 			5 b17		bit (1) unaligned,
  7   250 			5 b18		bit (1) unaligned,
  7   251 			5 b19		bit (1) unaligned,
  7   252 			5 b20		bit (1) unaligned,
  7   253 			5 b21		bit (1) unaligned,
  7   254 			5 b22		bit (1) unaligned,
  7   255 			5 b23		bit (1) unaligned,
  7   256 			5 b24		bit (1) unaligned,
  7   257 			5 b25		bit (1) unaligned,
  7   258 			5 b26		bit (1) unaligned,
  7   259 			5 b27		bit (1) unaligned,
  7   260 			5 b28		bit (1) unaligned,
  7   261 			5 b29		bit (1) unaligned,
  7   262 			5 b30		bit (1) unaligned,
  7   263 			5 b31		bit (1) unaligned,
  7   264 			5 b32		bit (1) unaligned,
  7   265 			5 b33		bit (1) unaligned,
  7   266 			5 b34		bit (1) unaligned,
  7   267 			5 b35		bit (1) unaligned,
  7   268 /* 150   */	4 llsnb		bit (36),
  7   269 /* 151   */	4 lesq		bit (36),
  7   270 /* 152-153 */	4 lumc (0:1)	bit (36),
  7   271 /* 154-155 */	4 lfnam (0:1)	bit (36),
  7   272 /* 156   */	4 lopts		bit (36),
  7   273 /* 157   */	4 licec,
  7   274 			5 b0_17		bit (18) unaligned,
  7   275 			5 b18_35		fixed bin (17) unaligned,
  7   276 /* 160   */	4 lflg3,
  7   277 			5 b0		bit (1) unaligned,
  7   278 			5 b1		bit (1) unaligned,
  7   279 			5 b2		bit (1) unaligned,
  7   280 			5 b3		bit (1) unaligned,
  7   281 			5 b4		bit (1) unaligned,
  7   282 			5 b5		bit (1) unaligned,
  7   283 			5 b6		bit (1) unaligned,
  7   284 			5 b7		bit (1) unaligned,
  7   285 			5 b8		bit (1) unaligned,
  7   286 			5 b9		bit (1) unaligned,
  7   287 			5 b10		bit (1) unaligned,
  7   288 			5 b11		bit (1) unaligned,
  7   289 			5 b12		bit (1) unaligned,
  7   290 			5 b13		bit (1) unaligned,
  7   291 			5 b14		bit (1) unaligned,
  7   292 			5 b15		bit (1) unaligned,
  7   293 			5 b16		bit (1) unaligned,
  7   294 			5 b17		bit (1) unaligned,
  7   295 			5 b18		bit (1) unaligned,
  7   296 			5 b19		bit (1) unaligned,
  7   297 			5 b20		bit (1) unaligned,
  7   298 			5 b21		bit (1) unaligned,
  7   299 			5 b22		bit (1) unaligned,
  7   300 			5 b23		bit (1) unaligned,
  7   301 			5 b24		bit (1) unaligned,
  7   302 			5 b25		bit (1) unaligned,
  7   303 			5 b26		bit (1) unaligned,
  7   304 			5 b27		bit (1) unaligned,
  7   305 			5 b28		bit (1) unaligned,
  7   306 			5 b29		bit (1) unaligned,
  7   307 			5 b30		bit (1) unaligned,
  7   308 			5 b31		bit (1) unaligned,
  7   309 			5 b32		bit (1) unaligned,
  7   310 			5 b33		bit (1) unaligned,
  7   311 			5 b34		bit (1) unaligned,
  7   312 			5 b35		bit (1) unaligned,
  7   313 /* 161-163 */	4 lpage (0:2)	bit (36),
  7   314 /* 164   */	4 lsit1		bit (36),
  7   315 /* 165   */	4 lsit2		bit (36),
  7   316 /* 166   */	4 lsit3		bit (36),
  7   317 /* 167   */	4 lsit4		bit (36),
  7   318 /* The following entries are maintained by gtss and are not found in TSS UST */
  7   319 /* 170   */	4 lxxx, /* program stack index, offset from gtss_ust */
  7   320 			5 b0_17		fixed bin (17) unaligned,
  7   321 			5 b18_35		bit (18) unaligned, /* not used */
  7   322 /* 171-175 */	4 lprgs (5),
  7   323 			5 b0_17		fixed bin (17) unaligned,
  7   324 			5 b18_35		fixed bin (17) unaligned,
  7   325 /* 176   */	4 fill	bit (36),
  7   326 /* 177   */	4 remote_io_buffer aligned,
  7   327 			5 buffer_control_word,
  7   328 				6 current_line_pointer  bit (18)unal,
  7   329 				6 buffer_threshold_address  bit (18)unal,
  7   330 			5 number_words_transmitted	fixed bin (17)unal,
  7   331 			5 FILL1			fixed bin (17)unal,
  7   332 			5 count_of_characters_transmitted fixed bin (17)unal,
  7   333 			5 FILL2			fixed bin (17)unal,
  7   334 			5 characters_transmitted (244) char (1) unal,
  7   335 /* 277   */	4 word_after_ust		bit (36) aligned;
  7   336 
  7   337 /*   END INCLUDE FILE gtss_ust_ext_.incl.pl1 */
      236 
      237 
  8     1 /* BEGIN INCLUDE FILE gtss_entry_dcls.incl.pl1 */
  8     2 /*
  8     3*  Created: (Wardd Multics)  06/30/78 1624.8 mst Fri 
  8     4*  Modified: Ron Barstad  84-02-24  Fixed wrong and obsolete entries
  8     5**/
  8     6 
  8     7 /**  gtss external entry variables.		**/
  8     8 dcl  com_err_                                   entry() options(variable);
  8     9 dcl  gtss_CFP_abort_                            entry options(variable);
  8    10 dcl  gtss_CFP_break_                            entry options(variable);
  8    11 dcl  gtss_CFP_input_                            entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  8    12 dcl  gtss_CFP_output_                           entry (ptr, ptr, fixed bin(21), fixed bin(35));
  8    13 dcl  gtss_abandon_CFP_                          entry options(variable);
  8    14 dcl  gtss_abort_dump_                           entry (fixed bin(18));
  8    15 dcl  gtss_abort_subsystem_                      entry options (variable);
  8    16 dcl  gtss_abort_subsystem_$not_imp              entry (ptr, fixed bin(24));
  8    17 dcl  gtss_abs_login_banner_		        entry() returns(char(*));
  8    18 dcl  gtss_abs_logout_banner_		        entry() returns(char(*));
  8    19 dcl  gtss_abs_$abs_equiv                        entry options(variable);
  8    20 dcl  gtss_abs_$cpu_runout		        entry (ptr, char(4));
  8    21 dcl  gtss_abs_$create_absin                     entry() returns(char(*));
  8    22 dcl  gtss_abs_$dabt_check		        entry (ptr, char(4));
  8    23 dcl  gtss_abs_$get_id                           entry (char(5)) returns(char(19));
  8    24 dcl  gtss_abs_$get_drm                          entry() returns(char(*));
  8    25 dcl  gtss_adjust_size_                          entry (ptr);
  8    26 dcl  gtss_aft_$add                              entry (char(8), fixed bin(24), fixed bin(35));
  8    27 dcl  gtss_aft_$delete                           entry (char(8), fixed bin(24), fixed bin(35));
  8    28 dcl  gtss_aft_$find                             entry (char(8), fixed bin(24), fixed bin(35));
  8    29 dcl  gtss_aft_$initialize                       entry (fixed bin(35));
  8    30 dcl  gtss_ascii_bcd_                            entry (ptr, fixed bin, ptr);
  8    31 dcl  gtss_attributes_mgr_$get                   entry (ptr, fixed bin(35));
  8    32 dcl  gtss_attributes_mgr_$set                   entry (ptr, fixed bin(35));
  8    33 dcl  gtss_bcd_ascii_                            entry (ptr, fixed bin(24), ptr);
  8    34 dcl  gtss_bcd_ascii_$lc                         entry (ptr, fixed bin(24), ptr);
  8    35 dcl  gtss_break_vector_                         entry ();
  8    36 dcl  gtss_break_vector_$drl_in_progress         entry() returns(bit(1));
  8    37 dcl  gtss_break_vector_$status                  entry() returns(bit(1));
  8    38 dcl  gtss_build_                                entry options(variable);
  8    39 dcl  gtss_com_err_                              entry options(variable);
  8    40 dcl  gtss_derail_processor_                     entry (ptr, char(*), ptr, ptr, bit(1) aligned) /* called at fault time instead of signal_ */;
  8    41 dcl  gtss_derail_processor_$set                 entry options(variable);
  8    42 dcl  gtss_dq_$catp                              entry (char (5), ptr, fixed bin (18) unsigned);
  8    43 dcl  gtss_dq_$create                            entry (bit(1));
  8    44 dcl  gtss_dq_$dibp                              entry (char(5), ptr);
  8    45 dcl  gtss_dq_$entries_info		        entry (ptr, fixed bin (18) unsigned, fixed bin (18) unsigned);
  8    46 dcl  gtss_dq_$hdrp                              entry (ptr);
  8    47 dcl  gtss_dq_$mod_js		        entry (char(5), fixed bin (6) unsigned, bit (1));
  8    48 dcl  gtss_dq_$open_exc		        entry (bit(1));
  8    49 dcl  gtss_dq_$open_gen		        entry (bit(1));
  8    50 dcl  gtss_drl_abort_                            entry (ptr, fixed bin);
  8    51 dcl  gtss_drl_addmem_                           entry (ptr, fixed bin);
  8    52 dcl  gtss_drl_callss_                           entry (ptr, fixed bin);
  8    53 dcl  gtss_drl_corfil_                           entry (ptr, fixed bin);
  8    54 dcl  gtss_drl_defil_                            entry (ptr, fixed bin);
  8    55 dcl  gtss_drl_defil_$subr                       entry (ptr, ptr, ptr);
  8    56 dcl  gtss_drl_dio_                              entry (ptr, fixed bin);
  8    57 dcl  gtss_drl_drlimt_                           entry (ptr, fixed bin);
  8    58 dcl  gtss_drl_drlsav_                           entry (ptr, fixed bin);
  8    59 dcl  gtss_drl_filact_                           entry (ptr, fixed bin);
  8    60 dcl  gtss_drl_filsp_                            entry (ptr, fixed bin);
  8    61 dcl  gtss_drl_grow_                             entry (ptr, fixed bin);
  8    62 dcl  gtss_drl_gwake_                            entry (ptr, fixed bin);
  8    63 dcl  gtss_drl_jsts_                             entry (ptr, fixed bin);
  8    64 dcl  gtss_drl_kin_                              entry (ptr, fixed bin);
  8    65 dcl  gtss_drl_kotnow_                           entry (ptr, fixed bin);
  8    66 dcl  gtss_drl_kotnow_$gtss_drl_kout_            entry (ptr, fixed bin);
  8    67 dcl  gtss_drl_koutn_                            entry (ptr, fixed bin);
  8    68 dcl  gtss_drl_morlnk_                           entry (ptr, fixed bin);
  8    69 dcl  gtss_drl_msub_                             entry (ptr, fixed bin);
  8    70 dcl  gtss_drl_objtim_                           entry (ptr, fixed bin);
  8    71 dcl  gtss_drl_part_                             entry (ptr, fixed bin);
  8    72 dcl  gtss_drl_pasaft_                           entry (ptr, fixed bin);
  8    73 dcl  gtss_drl_pasdes_                           entry (ptr, fixed bin);
  8    74 dcl  gtss_drl_pasust_                           entry (ptr, fixed bin);
  8    75 dcl  gtss_drl_pdio_                             entry (ptr, fixed bin);
  8    76 dcl  gtss_drl_prgdes_                           entry (ptr, fixed bin);
  8    77 dcl  gtss_drl_pseudo_                           entry (ptr, fixed bin);
  8    78 dcl  gtss_drl_relmem_                           entry (ptr, fixed bin);
  8    79 dcl  gtss_drl_restor_                           entry (ptr, fixed bin);
  8    80 dcl  gtss_drl_retfil_                           entry (ptr, fixed bin);
  8    81 dcl  gtss_drl_return_                           entry (ptr, fixed bin);
  8    82 dcl  gtss_drl_rew_                              entry (ptr, fixed bin);
  8    83 dcl  gtss_drl_rstswh_                           entry (ptr, fixed bin);
  8    84 dcl  gtss_drl_setlno_                           entry (ptr, fixed bin);
  8    85 dcl  gtss_drl_setswh_                           entry (ptr, fixed bin);
  8    86 dcl  gtss_drl_snumb_                            entry (ptr, fixed bin);
  8    87 dcl  gtss_drl_spawn_                            entry (ptr, fixed bin);
  8    88 dcl  gtss_drl_spawn_$gtss_drl_pasflr_           entry (ptr, fixed bin);
  8    89 dcl  gtss_drl_stoppt_                           entry (ptr, fixed bin);
  8    90 dcl  gtss_drl_switch_                           entry (ptr, fixed bin);
  8    91 dcl  gtss_drl_sysret_                           entry (ptr, fixed bin);
  8    92 dcl  gtss_drl_t_cfio_                           entry (ptr, fixed bin);
  8    93 dcl  gtss_drl_t_cmov_                           entry (ptr, fixed bin);
  8    94 dcl  gtss_drl_t_err_                            entry (ptr, fixed bin);
  8    95 dcl  gtss_drl_t_goto_                           entry (ptr, fixed bin);
  8    96 dcl  gtss_drl_t_linl_                           entry (ptr, fixed bin);
  8    97 dcl  gtss_drl_t_rscc_                           entry (ptr, fixed bin);
  8    98 dcl  gtss_drl_tapein_                           entry (ptr, fixed bin);
  8    99 dcl  gtss_drl_task_                             entry (ptr, fixed bin);
  8   100 dcl  gtss_drl_termtp_                           entry (ptr, fixed bin);
  8   101 dcl  gtss_drl_time_                             entry (ptr, fixed bin);
  8   102 dcl  gtss_drun_                                 entry (bit(1));
  8   103 dcl  gtss_dsd_lookup_                           entry (char(8) var) returns(fixed bin(24));
  8   104 dcl  gtss_dsd_process_                          entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  8   105 dcl  gtss_edit_dsd_                             entry (ptr, fixed bin(21)) returns(fixed bin(24));
  8   106 dcl  gtss_mcfc_empty                            entry (char(*) var);
  8   107 dcl  gtss_expand_pathname_                      entry (ptr, char(*), char(*), fixed bin(35));
  8   108 dcl  gtss_expand_pathname_$verify_umc           entry (ptr, char(*), char(*), bit(18), fixed bin(35));
  8   109 dcl  gtss_fault_processor_                      entry options(variable);
  8   110 dcl  gtss_find_cond_frame_		        entry (char(32) var) returns(ptr);
  8   111 dcl  gtss_fault_processor_$timer_runout         entry (ptr, char(*));
  8   112 dcl  gtss_filact_error_status_                  entry (fixed bin(35))returns(bit(12));
  8   113 dcl  gtss_filact_funct02_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   114 dcl  gtss_filact_funct03_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   115 dcl  gtss_filact_funct04_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   116 dcl  gtss_filact_funct05_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   117 dcl  gtss_filact_funct08_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   118 dcl  gtss_filact_funct10_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   119 dcl  gtss_filact_funct11_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   120 dcl  gtss_filact_funct14_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   121 dcl  gtss_filact_funct18_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   122 dcl  gtss_filact_funct19_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   123 dcl  gtss_filact_funct21_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   124 dcl  gtss_filact_funct22_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   125 dcl  gtss_mcfc_init_                            entry (char(*) var);
  8   126 dcl  gtss_interp_prim_                          entry options(variable);
  8   127 dcl  gtss_interp_prim_$callss                   entry (char(4), ptr);
  8   128 dcl  gtss_interp_prim_$sysret                   entry options(variable);
  8   129 dcl  gtss_interp_prim_$t_goto                   entry (char(4));
  8   130 dcl  gtss_ios_change_size_                      entry (fixed bin(24), fixed bin(24), bit(1), fixed bin(24), fixed bin(35));
  8   131 dcl  gtss_ios_close_                            entry (fixed bin(24), ptr, fixed bin(35));
  8   132 dcl  gtss_ios_exchange_names_                   entry (fixed bin(24), fixed bin(24), fixed bin(24), fixed bin(35));
  8   133 dcl  gtss_ios_initialize_                       entry options(variable);
  8   134 dcl  gtss_ios_io_                               entry (fixed bin(24), ptr, ptr, fixed bin(24), fixed bin(24), fixed bin(35));
  8   135 dcl  gtss_ios_open_                             entry (fixed bin(24), char(168), char(32), bit(6), bit(1), ptr, ptr, fixed bin(35));
  8   136 dcl  gtss_ios_position_                         entry (fixed bin(24), fixed bin(24), fixed bin(24), bit(6), ptr);
  8   137 dcl  gtss_mcfc_$delete		        entry (fixed bin(24), char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  8   138 dcl  gtss_mcfc_$open                            entry (char(*), char(*), bit(6), bit(36) aligned, ptr, fixed bin(35));
  8   139 dcl  gtss_mcfc_$close                           entry (char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  8   140 dcl  gtss_read_starCFP_                         entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  8   141 dcl  gtss_read_starCFP_$last_os                 entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  8   142 dcl  gtss_run_subsystem_                        entry (fixed bin(24));
  8   143 dcl  gtss_run_subsystem_$finish                 entry options(variable);
  8   144 dcl  gtss_run_subsystem_$restor                 entry (fixed bin(24), ptr);
  8   145 dcl  gtss_run_subsystem_$restor_perm            entry (fixed bin(24), ptr, fixed bin(18));
  8   146 dcl  gtss_set_slave_                            entry (fixed bin (24), ptr);
  8   147 dcl  gtss_set_slave_$load_bar                   entry (fixed bin (17));
  8   148 dcl  gtss_update_safe_store_                    entry (ptr);
  8   149 dcl  gtss_verify_access_		        entry (char(*), char(*), fixed bin(24), bit(6), bit(12) aligned);
  8   150 dcl  gtss_verify_access_$check_forced_access    entry (char(*), char(*), fixed bin(24));
  8   151 dcl  gtss_write_starCFP_                        entry (ptr, ptr, fixed bin(21), fixed bin(35));
  8   152 /*   END INCLUDE FILE gtss_entry_dcls.incl.pl1 */
      238 
      239 
  9     1 /* BEGIN INCLUDE FILE gtss_defil_arg.incl.pl1 */
  9     2 /*
  9     3*  Created:  (Wardd Multics)  07/26/78 1714.5 mst Wed 
  9     4**/
  9     5 
  9     6 dcl 1 arg aligned		based (arg_ptr)
  9     7      , 3 ascii_file_name	char (8)
  9     8      , 3 arg2
  9     9      ,   4 a		bit (06)unal
  9    10      ,   4 zeroes1		bit (11)unal
  9    11      ,   4 b		bit (01)unal
  9    12      ,   4 c		bit (01)unal
  9    13      ,   4 zeroes2		bit (05)unal
  9    14      ,   4 d		bit (12)unal
  9    15      ;
  9    16 
  9    17 /*   END INCLUDE FILE gtss_defil_arg.incl.pl1 */
      240 
      241 
 10     1 /* BEGIN INCLUDE FILE gtss_db_names.incl.pl1 */
 10     2 /*
 10     3*  Created:  (Wardd Multics)  03/29/79 1909.1 mst Thu 
 10     4**/
 10     5 
 10     6 /* To provide a new debugging switch:
 10     7*
 10     8*   1) Locate the comment "Insert next entry above this comment".
 10     9*
 10    10*   2) Place a new declaration for a db_ variable just
 10    11*      above this comment, in the same manner as the
 10    12*      current declaration just above the comment, using
 10    13*      the next integer gtss_ext_$db index.
 10    14*
 10    15*   3) Execute the gtss|db_names ted macro (this updates
 10    16*      the sorted name table).
 10    17*
 10    18*   4) Example use:
 10    19*
 10    20*      if db_drl_grow then do;
 10    21*      .
 10    22*      .
 10    23*      .
 10    24*      debug i/o statements using com_err_ or ioa_
 10    25*      .
 10    26*      .
 10    27*      .
 10    28*      end;
 10    29*
 10    30**/
 10    31 
 10    32 dcl (
 10    33  db_		bit(1) defined(gtss_ext_$db(01))
 10    34 ,db_CFP_input	bit(1) defined(gtss_ext_$db(02))
 10    35 ,db_drl_addmem	bit(1) defined(gtss_ext_$db(03))
 10    36 ,db_drl_defil	bit(1) defined(gtss_ext_$db(04))
 10    37 ,db_drl_filact	bit(1) defined(gtss_ext_$db(05))
 10    38 ,db_drl_filsp	bit(1) defined(gtss_ext_$db(06))
 10    39 ,db_drl_grow	bit(1) defined(gtss_ext_$db(07))
 10    40 ,db_drl_rew	bit(1) defined(gtss_ext_$db(08))
 10    41 ,db_filact_funct02	bit(1) defined(gtss_ext_$db(09))
 10    42 ,db_filact_funct03	bit(1) defined(gtss_ext_$db(10))
 10    43 ,db_filact_funct04	bit(1) defined(gtss_ext_$db(11))
 10    44 ,db_filact_funct05	bit(1) defined(gtss_ext_$db(12))
 10    45 ,db_filact_funct10	bit(1) defined(gtss_ext_$db(13))
 10    46 ,db_filact_funct11	bit(1) defined(gtss_ext_$db(14))
 10    47 ,db_filact_funct14	bit(1) defined(gtss_ext_$db(15))
 10    48 ,db_filact_funct18	bit(1) defined(gtss_ext_$db(16))
 10    49 ,db_filact_funct19	bit(1) defined(gtss_ext_$db(17))
 10    50 ,db_filact_funct21	bit(1) defined(gtss_ext_$db(18))
 10    51 ,db_filact_funct22	bit(1) defined(gtss_ext_$db(19))
 10    52 ,db_interp_prim	bit(1) defined(gtss_ext_$db(20))
 10    53 ,db_ios		bit(1) defined(gtss_ext_$db(21))
 10    54 ,db_run_subsystem	bit(1) defined(gtss_ext_$db(22))
 10    55 ,db_drl_t_cfio	bit(1) defined(gtss_ext_$db(23))
 10    56 ,db_drl_switch	bit(1) defined(gtss_ext_$db(24))
 10    57 ,db_drl_dio	bit(1) defined(gtss_ext_$db(25))
 10    58 ,db_drl_retfil	bit(1) defined(gtss_ext_$db(26))
 10    59 ,db_drl_msub	bit(1) defined(gtss_ext_$db(27))
 10    60 ,db_drl_callss	bit(1) defined(gtss_ext_$db(28))
 10    61 ,db_drl_rstswh	bit(1) defined(gtss_ext_$db(29))
 10    62 ,db_drl_setswh	bit(1) defined(gtss_ext_$db(30))
 10    63 ,db_mcfc		bit(1) defined(gtss_ext_$db(31))
 10    64 ,db_dq		bit(1) defined(gtss_ext_$db(32))
 10    65 ,db_abs		bit(1) defined(gtss_ext_$db(33))
 10    66 ,db_attributes_mgr	bit(1) defined(gtss_ext_$db(34))
 10    67 ,db_expand_pathname bit(1) defined(gtss_ext_$db(35))
 10    68 ,db_drl_part	bit(1) defined(gtss_ext_$db(36))
 10    69 ,db_drl_morlnk	bit(1) defined(gtss_ext_$db(37))
 10    70 ,db_drl_kin	bit(1) defined(gtss_ext_$db(38))
 10    71 /* Insert next entry above this comment. */
 10    72 );
 10    73 
 10    74 /* Table of sorted names. */
 10    75 dcl 1 debug_bit_names (38) static int options(constant)
 10    76 ,     2 name char(18)var init(
 10    77          "" ,"CFP_input" ,"abs" ,"attributes_mgr" ,"dq" ,"drl_addmem"
 10    78          ,"drl_callss" ,"drl_defil" ,"drl_dio" ,"drl_filact" ,"drl_filsp"
 10    79          ,"drl_grow" ,"drl_kin" ,"drl_morlnk" ,"drl_msub" ,"drl_part"
 10    80          ,"drl_retfil" ,"drl_rew" ,"drl_rstswh" ,"drl_setswh" ,"drl_switch"
 10    81          ,"drl_t_cfio" ,"expand_pathname" ,"filact_funct02" ,"filact_funct03"
 10    82          ,"filact_funct04" ,"filact_funct05" ,"filact_funct10" ,"filact_funct11"
 10    83          ,"filact_funct14" ,"filact_funct18" ,"filact_funct19" ,"filact_funct21"
 10    84          ,"filact_funct22" ,"interp_prim" ,"ios" ,"mcfc" ,"run_subsystem"
 10    85 			)
 10    86 ,     2 value fixed bin init(
 10    87          01 ,02 ,33 ,34 ,32 ,03 ,28 ,04 ,25 ,05 ,06 ,07 ,38 ,37 ,27 ,36 ,26 ,08
 10    88          ,29 ,30 ,24 ,23 ,35 ,09 ,10 ,11 ,12 ,13 ,14 ,15 ,16 ,17 ,18 ,19 ,20 ,21
 10    89          ,31 ,22
 10    90 			);
 10    91 /* End of table. */
 10    92 /*   END INCLUDE FILE gtss_db_names.incl.pl1 */
      242 
      243      end						/* gtss_drl_defil_ */;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/10/84  1043.0  gtss_drl_defil_.pl1               >spec>on>7105>gtss_drl_defil_.pl1
226          1    09/09/83  1713.8  gtss_ext_.incl.pl1                >ldd>include>gtss_ext_.incl.pl1
228          2    12/15/83  1100.4  mc.incl.pl1                       >ldd>include>mc.incl.pl1
230          3    09/09/83  1714.0  gtss_io_status_words.incl.pl1     >ldd>include>gtss_io_status_words.incl.pl1
232          4    09/09/83  1714.2  gtss_tfa_ext_.incl.pl1            >ldd>include>gtss_tfa_ext_.incl.pl1
4-14         5    09/09/83  1714.0  gtss_file_attributes.incl.pl1     >ldd>include>gtss_file_attributes.incl.pl1
234          6    09/09/83  1713.2  gtss_dfd_ext_.incl.pl1            >ldd>include>gtss_dfd_ext_.incl.pl1
236          7    09/09/83  1714.3  gtss_ust_ext_.incl.pl1            >ldd>include>gtss_ust_ext_.incl.pl1
238          8    12/10/84  1029.7  gtss_entry_dcls.incl.pl1          >spec>on>7105>gtss_entry_dcls.incl.pl1
240          9    09/09/83  1713.7  gtss_defil_arg.incl.pl1           >ldd>include>gtss_defil_arg.incl.pl1
242         10    09/09/83  1713.6  gtss_db_names.incl.pl1            >ldd>include>gtss_db_names.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
A_reg                                  based           structure                level 1 dcl 216
A_reg_b36                       000102 automatic       bit(36)                  initial dcl 199 set ref 80 81 82 83 84 85 88 89 89
                                                                                  89 89 89 89 89 89 89 118 120 122 123 124 125 127
                                                                                  199*
Device_type                            based           bit(6)                   level 2 packed unaligned dcl 216 set ref 80* 89 89
                                                                                  118* 120*
File_size                 0(22)        based           bit(14)                  level 2 packed unaligned dcl 216 set ref 85* 89 89
                                                                                  127*
L_arg                                  based           bit(18)                  level 2 packed unaligned dcl 211 ref 54 62
L_stat                    0(18)        based           bit(18)                  level 2 packed unaligned dcl 211 ref 65 73
Linked_or_Random          0(19)        based           bit(1)                   level 2 packed unaligned dcl 216 set ref 83* 89*
                                                                                  124*
Perm_or_Temp              0(20)        based           bit(1)                   level 2 packed unaligned dcl 216 set ref 84* 89*
                                                                                  125*
Size_in_blocks_or_links
                          0(18)        based           bit(1)                   level 2 packed unaligned dcl 216 set ref 82* 89*
                                                                                  123*
Words_per_physical_block
                          0(06)        based           bit(12)                  level 2 packed unaligned dcl 216 set ref 81* 89 89
                                                                                  122*
a                         2            based           bit(6)                   level 3 in structure "arg" packed unaligned dcl 9-6
                                                                                  in procedure "gtss_drl_defil_" ref 118
a                        24            based           bit(36)                  level 3 in structure "mc" packed unaligned dcl 2-12
                                                                                  in procedure "gtss_drl_defil_" set ref 88*
addrel                                                 builtin function         dcl 200 ref 51 62 73
aft_entry               147     000024 external static structure                array level 2 dcl 1-78
altname                 147     000024 external static char(8)                  array level 3 dcl 1-78 ref 188
arg                                    based           structure                level 1 dcl 9-6
arg2                      2            based           structure                level 2 dcl 9-6
arg_list                               based           structure                level 1 dcl 211
arg_list_ptr                    000104 automatic       pointer                  initial dcl 201 set ref 51* 54 62 65 73 201*
arg_ptr                         000106 automatic       pointer                  initial dcl 202 set ref 62* 77 89 115 118 118 124
                                                                                  127 129 146 172* 202*
arg_ptr_p                              parameter       pointer                  dcl 168 set ref 157 172 173*
ascii_file_name                        based           char(8)                  level 2 dcl 9-6 set ref 77 89* 146*
b                         2(17)        based           bit(1)                   level 3 packed unaligned dcl 9-6 ref 118
bit12                           000100 automatic       bit(12)                  level 2 packed unaligned dcl 139 set ref 142
c                         2(18)        based           bit(1)                   level 3 packed unaligned dcl 9-6 set ref 124 129*
code                            000110 automatic       fixed bin(35,0)          dcl 203 set ref 77* 78 104 129* 146*
com_err_                        000032 constant        entry                    external dcl 8-8 ref 146
current_size              1     000026 external static fixed bin(24,0)          array level 3 dcl 4-11 set ref 115*
d                         2(24)        based           bit(12)                  level 3 packed unaligned dcl 9-6 ref 115 127
db_drl_defil                           defined         bit(1)                   unaligned dcl 10-32 ref 89
descriptor                3     000026 external static structure                array level 3 dcl 4-11
device_type               3     000026 external static bit(6)                   array level 4 packed unaligned dcl 4-11 set ref 80
                                                                                  118* 120*
f                                      parameter       fixed bin(24,0)          dcl 183 ref 180 185 188
fill                      3(21) 000026 external static bit(1)                   array level 4 packed unaligned dcl 4-11 set ref 126*
fms_status                      000100 automatic       structure                level 1 dcl 139 set ref 129 129 146*
fn                              000111 automatic       fixed bin(24,0)          dcl 204 set ref 77* 80 81 82 83 84 85 89* 114 115
                                                                                  116 117 118 120 122 123 124 125 126 127 129 129*
                                                                                  129 129 153 173
gseg                            000112 automatic       pointer                  initial dcl 205 set ref 50* 51 62 73 205*
gtss_abort_subsystem_           000034 constant        entry                    external dcl 8-15 ref 55 66
gtss_aft_$add                   000036 constant        entry                    external dcl 8-26 ref 77
gtss_ext_$aft                   000024 external static structure                level 1 dcl 1-78
gtss_ext_$db                    000014 external static bit(1)                   array unaligned dcl 1-10 ref 89 89
gtss_ext_$gtss_slave_area_seg   000016 external static pointer                  array dcl 1-20 ref 50
gtss_ext_$pdir                  000020 external static varying char(168)        dcl 1-24 ref 129
gtss_ext_$stack_level_          000022 external static fixed bin(17,0)          dcl 1-31 ref 50
gtss_file_attributes                   based           structure                level 1 dcl 5-11
gtss_file_attributes_ptr        000122 automatic       pointer                  initial dcl 5-9 set ref 5-9*
gtss_ios_open_                  000040 constant        entry                    external dcl 8-135 ref 129
gtss_tfa_ext_$file_attributes   000026 external static structure                level 1 dcl 4-11
gtss_ust                        000030 external static structure                level 2 dcl 7-16
gtss_ust_ext_$ust               000030 external static structure                level 1 dcl 7-16
ilc                       4            based           bit(18)                  level 2 packed unaligned dcl 2-56 ref 51 55 55 66 66
increment                              parameter       fixed bin(17,0)          dcl 29 set ref 15 48*
ioa_                            000010 constant        entry                    external dcl 178 ref 89
limit                    22(18) 000030 external static bit(18)                  level 4 packed unaligned dcl 7-16 ref 54 65
llink_flag                3(18) 000026 external static bit(1)                   array level 4 packed unaligned dcl 4-11 set ref 82
                                                                                  123*
lsize                    22     000030 external static structure                level 3 dcl 7-16
max_size                        000026 external static fixed bin(24,0)          array level 3 dcl 4-11 set ref 114*
mc                                     based           structure                level 1 dcl 2-12
mcp                             000114 automatic       pointer                  dcl 2-10 set ref 30* 49 55* 66* 88 175*
mcp_p                                  parameter       pointer                  dcl 170 ref 157 175
mcpp                                   parameter       pointer                  dcl 28 ref 15 30
mode                      3(19) 000026 external static bit(1)                   array level 4 packed unaligned dcl 4-11 set ref 83
                                                                                  124*
non_null                  2     000026 external static bit(1)                   array level 4 packed unaligned dcl 4-11 set ref 116*
p2                              000143 automatic       picture(2)               unaligned dcl 194 set ref 185* 190
perm                      3(20) 000026 external static bit(1)                   array level 4 packed unaligned dcl 4-11 set ref 84
                                                                                  125*
r                               000132 automatic       varying char(32)         dcl 193 set ref 186* 187* 187 188* 188 189* 189 190*
                                                                                  190 191
regs                     20            based           structure                level 2 packed unaligned dcl 2-12
scu                      30            based           bit(36)                  array level 2 in structure "mc" packed unaligned
                                                                                  dcl 2-12 in procedure "gtss_drl_defil_" set ref 49
scu                                    based           structure                level 1 dcl 2-56 in procedure "gtss_drl_defil_"
scup                            000116 automatic       pointer                  dcl 2-54 set ref 49* 51 55 55 66 66
size                      3(22) 000026 external static bit(14)                  array level 4 packed unaligned dcl 4-11 set ref 85
                                                                                  127*
status_word_1                          based           fixed bin(24,0)          dcl 208 set ref 79* 106* 143* 154*
status_words_ptr                000120 automatic       pointer                  initial dcl 3-12 set ref 73* 79 106 143 154 174*
                                                                                  3-12*
status_words_ptr_p                     parameter       pointer                  dcl 169 ref 157 174
temp_file                       000026 external static structure                array level 2 dcl 4-11 set ref 129 129
unique_chars_                   000012 constant        entry                    external dcl 209 ref 186
used                    154     000024 external static bit(1)                   array level 3 packed unaligned dcl 1-78 set ref 153*
user_attr                 2(01) 000026 external static bit(35)                  array level 4 packed unaligned dcl 4-11 set ref 117*
user_attributes           2     000026 external static structure                array level 3 dcl 4-11
words_block               3(06) 000026 external static bit(12)                  array level 4 packed unaligned dcl 4-11 set ref 81
                                                                                  122*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
abx                                    internal static fixed bin(17,0)          initial dcl 2-42
apx                                    internal static fixed bin(17,0)          initial dcl 2-42
bbx                                    internal static fixed bin(17,0)          initial dcl 2-42
bpx                                    internal static fixed bin(17,0)          initial dcl 2-42
db_                                    defined         bit(1)                   unaligned dcl 10-32
db_CFP_input                           defined         bit(1)                   unaligned dcl 10-32
db_abs                                 defined         bit(1)                   unaligned dcl 10-32
db_attributes_mgr                      defined         bit(1)                   unaligned dcl 10-32
db_dq                                  defined         bit(1)                   unaligned dcl 10-32
db_drl_addmem                          defined         bit(1)                   unaligned dcl 10-32
db_drl_callss                          defined         bit(1)                   unaligned dcl 10-32
db_drl_dio                             defined         bit(1)                   unaligned dcl 10-32
db_drl_filact                          defined         bit(1)                   unaligned dcl 10-32
db_drl_filsp                           defined         bit(1)                   unaligned dcl 10-32
db_drl_grow                            defined         bit(1)                   unaligned dcl 10-32
db_drl_kin                             defined         bit(1)                   unaligned dcl 10-32
db_drl_morlnk                          defined         bit(1)                   unaligned dcl 10-32
db_drl_msub                            defined         bit(1)                   unaligned dcl 10-32
db_drl_part                            defined         bit(1)                   unaligned dcl 10-32
db_drl_retfil                          defined         bit(1)                   unaligned dcl 10-32
db_drl_rew                             defined         bit(1)                   unaligned dcl 10-32
db_drl_rstswh                          defined         bit(1)                   unaligned dcl 10-32
db_drl_setswh                          defined         bit(1)                   unaligned dcl 10-32
db_drl_switch                          defined         bit(1)                   unaligned dcl 10-32
db_drl_t_cfio                          defined         bit(1)                   unaligned dcl 10-32
db_expand_pathname                     defined         bit(1)                   unaligned dcl 10-32
db_filact_funct02                      defined         bit(1)                   unaligned dcl 10-32
db_filact_funct03                      defined         bit(1)                   unaligned dcl 10-32
db_filact_funct04                      defined         bit(1)                   unaligned dcl 10-32
db_filact_funct05                      defined         bit(1)                   unaligned dcl 10-32
db_filact_funct10                      defined         bit(1)                   unaligned dcl 10-32
db_filact_funct11                      defined         bit(1)                   unaligned dcl 10-32
db_filact_funct14                      defined         bit(1)                   unaligned dcl 10-32
db_filact_funct18                      defined         bit(1)                   unaligned dcl 10-32
db_filact_funct19                      defined         bit(1)                   unaligned dcl 10-32
db_filact_funct21                      defined         bit(1)                   unaligned dcl 10-32
db_filact_funct22                      defined         bit(1)                   unaligned dcl 10-32
db_interp_prim                         defined         bit(1)                   unaligned dcl 10-32
db_ios                                 defined         bit(1)                   unaligned dcl 10-32
db_mcfc                                defined         bit(1)                   unaligned dcl 10-32
db_run_subsystem                       defined         bit(1)                   unaligned dcl 10-32
debug_bit_names                        internal static structure                array level 1 unaligned dcl 10-75
gtss_CFP_abort_                 000000 constant        entry                    external dcl 8-9
gtss_CFP_break_                 000000 constant        entry                    external dcl 8-10
gtss_CFP_input_                 000000 constant        entry                    external dcl 8-11
gtss_CFP_output_                000000 constant        entry                    external dcl 8-12
gtss_abandon_CFP_               000000 constant        entry                    external dcl 8-13
gtss_abort_dump_                000000 constant        entry                    external dcl 8-14
gtss_abort_subsystem_$not_imp   000000 constant        entry                    external dcl 8-16
gtss_abs_$abs_equiv             000000 constant        entry                    external dcl 8-19
gtss_abs_$cpu_runout            000000 constant        entry                    external dcl 8-20
gtss_abs_$create_absin          000000 constant        entry                    external dcl 8-21
gtss_abs_$dabt_check            000000 constant        entry                    external dcl 8-22
gtss_abs_$get_drm               000000 constant        entry                    external dcl 8-24
gtss_abs_$get_id                000000 constant        entry                    external dcl 8-23
gtss_abs_login_banner_          000000 constant        entry                    external dcl 8-17
gtss_abs_logout_banner_         000000 constant        entry                    external dcl 8-18
gtss_adjust_size_               000000 constant        entry                    external dcl 8-25
gtss_aft_$delete                000000 constant        entry                    external dcl 8-27
gtss_aft_$find                  000000 constant        entry                    external dcl 8-28
gtss_aft_$initialize            000000 constant        entry                    external dcl 8-29
gtss_ascii_bcd_                 000000 constant        entry                    external dcl 8-30
gtss_attributes_mgr_$get        000000 constant        entry                    external dcl 8-31
gtss_attributes_mgr_$set        000000 constant        entry                    external dcl 8-32
gtss_bcd_ascii_                 000000 constant        entry                    external dcl 8-33
gtss_bcd_ascii_$lc              000000 constant        entry                    external dcl 8-34
gtss_break_vector_              000000 constant        entry                    external dcl 8-35
gtss_break_vector_$drl_in_progress
                                000000 constant        entry                    external dcl 8-36
gtss_break_vector_$status       000000 constant        entry                    external dcl 8-37
gtss_build_                     000000 constant        entry                    external dcl 8-38
gtss_com_err_                   000000 constant        entry                    external dcl 8-39
gtss_derail_processor_          000000 constant        entry                    external dcl 8-40
gtss_derail_processor_$set      000000 constant        entry                    external dcl 8-41
gtss_dfd_ext_$disk_file_data           external static structure                array level 1 dcl 6-6
gtss_dq_$catp                   000000 constant        entry                    external dcl 8-42
gtss_dq_$create                 000000 constant        entry                    external dcl 8-43
gtss_dq_$dibp                   000000 constant        entry                    external dcl 8-44
gtss_dq_$entries_info           000000 constant        entry                    external dcl 8-45
gtss_dq_$hdrp                   000000 constant        entry                    external dcl 8-46
gtss_dq_$mod_js                 000000 constant        entry                    external dcl 8-47
gtss_dq_$open_exc               000000 constant        entry                    external dcl 8-48
gtss_dq_$open_gen               000000 constant        entry                    external dcl 8-49
gtss_drl_abort_                 000000 constant        entry                    external dcl 8-50
gtss_drl_addmem_                000000 constant        entry                    external dcl 8-51
gtss_drl_callss_                000000 constant        entry                    external dcl 8-52
gtss_drl_corfil_                000000 constant        entry                    external dcl 8-53
gtss_drl_defil_                 000000 constant        entry                    external dcl 8-54
gtss_drl_defil_$subr            000000 constant        entry                    external dcl 8-55
gtss_drl_dio_                   000000 constant        entry                    external dcl 8-56
gtss_drl_drlimt_                000000 constant        entry                    external dcl 8-57
gtss_drl_drlsav_                000000 constant        entry                    external dcl 8-58
gtss_drl_filact_                000000 constant        entry                    external dcl 8-59
gtss_drl_filsp_                 000000 constant        entry                    external dcl 8-60
gtss_drl_grow_                  000000 constant        entry                    external dcl 8-61
gtss_drl_gwake_                 000000 constant        entry                    external dcl 8-62
gtss_drl_jsts_                  000000 constant        entry                    external dcl 8-63
gtss_drl_kin_                   000000 constant        entry                    external dcl 8-64
gtss_drl_kotnow_                000000 constant        entry                    external dcl 8-65
gtss_drl_kotnow_$gtss_drl_kout_ 000000 constant        entry                    external dcl 8-66
gtss_drl_koutn_                 000000 constant        entry                    external dcl 8-67
gtss_drl_morlnk_                000000 constant        entry                    external dcl 8-68
gtss_drl_msub_                  000000 constant        entry                    external dcl 8-69
gtss_drl_objtim_                000000 constant        entry                    external dcl 8-70
gtss_drl_part_                  000000 constant        entry                    external dcl 8-71
gtss_drl_pasaft_                000000 constant        entry                    external dcl 8-72
gtss_drl_pasdes_                000000 constant        entry                    external dcl 8-73
gtss_drl_pasust_                000000 constant        entry                    external dcl 8-74
gtss_drl_pdio_                  000000 constant        entry                    external dcl 8-75
gtss_drl_prgdes_                000000 constant        entry                    external dcl 8-76
gtss_drl_pseudo_                000000 constant        entry                    external dcl 8-77
gtss_drl_relmem_                000000 constant        entry                    external dcl 8-78
gtss_drl_restor_                000000 constant        entry                    external dcl 8-79
gtss_drl_retfil_                000000 constant        entry                    external dcl 8-80
gtss_drl_return_                000000 constant        entry                    external dcl 8-81
gtss_drl_rew_                   000000 constant        entry                    external dcl 8-82
gtss_drl_rstswh_                000000 constant        entry                    external dcl 8-83
gtss_drl_setlno_                000000 constant        entry                    external dcl 8-84
gtss_drl_setswh_                000000 constant        entry                    external dcl 8-85
gtss_drl_snumb_                 000000 constant        entry                    external dcl 8-86
gtss_drl_spawn_                 000000 constant        entry                    external dcl 8-87
gtss_drl_spawn_$gtss_drl_pasflr_
                                000000 constant        entry                    external dcl 8-88
gtss_drl_stoppt_                000000 constant        entry                    external dcl 8-89
gtss_drl_switch_                000000 constant        entry                    external dcl 8-90
gtss_drl_sysret_                000000 constant        entry                    external dcl 8-91
gtss_drl_t_cfio_                000000 constant        entry                    external dcl 8-92
gtss_drl_t_cmov_                000000 constant        entry                    external dcl 8-93
gtss_drl_t_err_                 000000 constant        entry                    external dcl 8-94
gtss_drl_t_goto_                000000 constant        entry                    external dcl 8-95
gtss_drl_t_linl_                000000 constant        entry                    external dcl 8-96
gtss_drl_t_rscc_                000000 constant        entry                    external dcl 8-97
gtss_drl_tapein_                000000 constant        entry                    external dcl 8-98
gtss_drl_task_                  000000 constant        entry                    external dcl 8-99
gtss_drl_termtp_                000000 constant        entry                    external dcl 8-100
gtss_drl_time_                  000000 constant        entry                    external dcl 8-101
gtss_drun_                      000000 constant        entry                    external dcl 8-102
gtss_dsd_lookup_                000000 constant        entry                    external dcl 8-103
gtss_dsd_process_               000000 constant        entry                    external dcl 8-104
gtss_edit_dsd_                  000000 constant        entry                    external dcl 8-105
gtss_expand_pathname_           000000 constant        entry                    external dcl 8-107
gtss_expand_pathname_$verify_umc
                                000000 constant        entry                    external dcl 8-108
gtss_ext_$CFP_bits                     external static structure                level 1 dcl 1-37
gtss_ext_$SYstarstar_file_no           external static fixed bin(24,0)          dcl 1-33
gtss_ext_$aem                          external static fixed bin(17,0)          dcl 1-8
gtss_ext_$bad_drl_rtrn                 external static label variable           dcl 1-9
gtss_ext_$com_reg                      external static structure                level 1 dcl 1-45
gtss_ext_$deferred_catalogs_ptr        external static pointer                  dcl 1-11
gtss_ext_$dispose_of_drl               external static label variable           dcl 1-12
gtss_ext_$drl_rtrn                     external static label variable           array dcl 1-13
gtss_ext_$drm_path                     external static char(168)                unaligned dcl 1-14
gtss_ext_$drun_jid                     external static char(5)                  unaligned dcl 1-15
gtss_ext_$event_channel                external static fixed bin(71,0)          dcl 1-16
gtss_ext_$fast_lib                     external static structure                level 1 dcl 1-98
gtss_ext_$finished                     external static label variable           dcl 1-17
gtss_ext_$flags                        external static structure                level 1 dcl 1-60
gtss_ext_$gdb_name                     external static char(8)                  unaligned dcl 1-18
gtss_ext_$get_line                     external static entry variable           dcl 1-19
gtss_ext_$hcs_work_area_ptr            external static pointer                  dcl 1-21
gtss_ext_$homedir                      external static char(64)                 unaligned dcl 1-22
gtss_ext_$last_k_was_out               external static bit(1)                   dcl 1-23
gtss_ext_$mcfc                         external static structure                level 1 dcl 1-109
gtss_ext_$popup_from_pi                external static label variable           dcl 1-25
gtss_ext_$ppt                          external static pointer                  dcl 1-94
gtss_ext_$process_type                 external static fixed bin(17,0)          dcl 1-26
gtss_ext_$put_chars                    external static entry variable           dcl 1-27
gtss_ext_$restart_from_pi              external static label variable           dcl 1-28
gtss_ext_$restart_seg_ptr              external static pointer                  dcl 1-29
gtss_ext_$sig_ptr                      external static pointer                  dcl 1-30
gtss_ext_$statistics                   external static structure                level 1 dcl 1-72
gtss_ext_$suspended_process            external static bit(1)                   unaligned dcl 1-32
gtss_ext_$user_id                      external static varying char(26)         dcl 1-34
gtss_ext_$work_area_ptr                external static pointer                  dcl 1-35
gtss_fault_processor_           000000 constant        entry                    external dcl 8-109
gtss_fault_processor_$timer_runout
                                000000 constant        entry                    external dcl 8-111
gtss_filact_error_status_       000000 constant        entry                    external dcl 8-112
gtss_filact_funct02_            000000 constant        entry                    external dcl 8-113
gtss_filact_funct03_            000000 constant        entry                    external dcl 8-114
gtss_filact_funct04_            000000 constant        entry                    external dcl 8-115
gtss_filact_funct05_            000000 constant        entry                    external dcl 8-116
gtss_filact_funct08_            000000 constant        entry                    external dcl 8-117
gtss_filact_funct10_            000000 constant        entry                    external dcl 8-118
gtss_filact_funct11_            000000 constant        entry                    external dcl 8-119
gtss_filact_funct14_            000000 constant        entry                    external dcl 8-120
gtss_filact_funct18_            000000 constant        entry                    external dcl 8-121
gtss_filact_funct19_            000000 constant        entry                    external dcl 8-122
gtss_filact_funct21_            000000 constant        entry                    external dcl 8-123
gtss_filact_funct22_            000000 constant        entry                    external dcl 8-124
gtss_find_cond_frame_           000000 constant        entry                    external dcl 8-110
gtss_interp_prim_               000000 constant        entry                    external dcl 8-126
gtss_interp_prim_$callss        000000 constant        entry                    external dcl 8-127
gtss_interp_prim_$sysret        000000 constant        entry                    external dcl 8-128
gtss_interp_prim_$t_goto        000000 constant        entry                    external dcl 8-129
gtss_ios_change_size_           000000 constant        entry                    external dcl 8-130
gtss_ios_close_                 000000 constant        entry                    external dcl 8-131
gtss_ios_exchange_names_        000000 constant        entry                    external dcl 8-132
gtss_ios_initialize_            000000 constant        entry                    external dcl 8-133
gtss_ios_io_                    000000 constant        entry                    external dcl 8-134
gtss_ios_position_              000000 constant        entry                    external dcl 8-136
gtss_mcfc_$close                000000 constant        entry                    external dcl 8-139
gtss_mcfc_$delete               000000 constant        entry                    external dcl 8-137
gtss_mcfc_$open                 000000 constant        entry                    external dcl 8-138
gtss_mcfc_empty                 000000 constant        entry                    external dcl 8-106
gtss_mcfc_init_                 000000 constant        entry                    external dcl 8-125
gtss_read_starCFP_              000000 constant        entry                    external dcl 8-140
gtss_read_starCFP_$last_os      000000 constant        entry                    external dcl 8-141
gtss_run_subsystem_             000000 constant        entry                    external dcl 8-142
gtss_run_subsystem_$finish      000000 constant        entry                    external dcl 8-143
gtss_run_subsystem_$restor      000000 constant        entry                    external dcl 8-144
gtss_run_subsystem_$restor_perm 000000 constant        entry                    external dcl 8-145
gtss_set_slave_                 000000 constant        entry                    external dcl 8-146
gtss_set_slave_$load_bar        000000 constant        entry                    external dcl 8-147
gtss_update_safe_store_         000000 constant        entry                    external dcl 8-148
gtss_verify_access_             000000 constant        entry                    external dcl 8-149
gtss_verify_access_$check_forced_access
                                000000 constant        entry                    external dcl 8-150
gtss_write_starCFP_             000000 constant        entry                    external dcl 8-151
index                                                  builtin function         dcl 206
lbx                                    internal static fixed bin(17,0)          initial dcl 2-42
lpx                                    internal static fixed bin(17,0)          initial dcl 2-42
sbx                                    internal static fixed bin(17,0)          initial dcl 2-42
scux                                   based           structure                level 1 dcl 2-207
spx                                    internal static fixed bin(17,0)          initial dcl 2-42
status                                 automatic       fixed bin(24,0)          dcl 207
status_words                           based           structure                level 1 dcl 3-13

NAMES DECLARED BY EXPLICIT CONTEXT.
create_temp                     000352 constant        label                    dcl 76 ref 176
file_name                       001035 constant        entry                    internal dcl 180 ref 129
gtss_drl_defil_                 000146 constant        entry                    external dcl 15
load_A_register                 000427 constant        label                    dcl 87 set ref 144
no_temp_available               000531 constant        label                    dcl 105
subr                            001012 constant        entry                    external dcl 157

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 49 80 81 82 83 84 85 89 89 89 89 89 89 89 89 89
                                                                                  118 120 122 123 124 125 127 129 129 129 129 173
char                                                   builtin function         ref 190
fixed                                                  builtin function         ref 51 54 54 55 55 66 66 89 89 89 89 89 89 115
null                                                   builtin function         ref 201 202 205 3-12 5-9
translate                                              builtin function         ref 188

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1560        1622    1373        1570
Length      2216    1373        42         360     165           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gtss_drl_defil_                     292 external procedure  is an external procedure.  
file_name                               internal procedure  shares stack frame of external procedure gtss_drl_defil_.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gtss_drl_defil_          000100 fms_status                  gtss_drl_defil_
                         000102 A_reg_b36                   gtss_drl_defil_
                         000104 arg_list_ptr                gtss_drl_defil_
                         000106 arg_ptr                     gtss_drl_defil_
                         000110 code                        gtss_drl_defil_
                         000111 fn                          gtss_drl_defil_
                         000112 gseg                        gtss_drl_defil_
                         000114 mcp                         gtss_drl_defil_
                         000116 scup                        gtss_drl_defil_
                         000120 status_words_ptr            gtss_drl_defil_
                         000122 gtss_file_attributes_ptr    gtss_drl_defil_
                         000132 r                           file_name
                         000143 p2                          file_name

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      gtss_abort_subsystem_         gtss_aft_$add                 gtss_ios_open_
ioa_                          unique_chars_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
gtss_ext_$aft                 gtss_ext_$db                  gtss_ext_$gtss_slave_area_seg gtss_ext_$pdir
gtss_ext_$stack_level_        gtss_tfa_ext_$file_attributes gtss_ust_ext_$ust




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
    199 000131       201 000132       202 000134       205 000135    3   12 000136    5    9 000137        15 000142
     30 000154        48 000160        49 000162        50 000164        51 000172        54 000202        55 000220
     60 000266        62 000267        65 000273        66 000300        71 000346        73 000347        76 000352
     77 000353        78 000372        79 000375        80 000377        81 000405        82 000407        83 000413
     84 000417        85 000423        87 000427        88 000430        89 000433       102 000526       104 000527
    105 000531       106 000532       107 000534       114 000535       115 000542       116 000553       117 000557
    118 000561       120 000574       122 000601       123 000607       124 000612       125 000626       126 000631
    127 000633       129 000647       142 000725       143 000731       144 000732       146 000733       153 000775
    154 001003       155 001005       157 001006       172 001020       173 001024       174 001026       175 001031
    176 001034       180 001035       185 001037       186 001050       187 001074       188 001103       189 001127
    190 001136       191 001150


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
