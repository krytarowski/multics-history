	COMPILATION LISTING OF SEGMENT cobol_IVAL
	Compiled by: Multics PL/I Compiler, Release 31b, of April 24, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 05/24/89  1006.3 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
       17*     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
       18*     MCR8060 cobol_IVAL.pl1 Reformatted code to new Cobol standard.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 /* Modified on 08/24/76 by GM to fix problem with call to b_to_d in cobol_ddalloc. */
       23 /* format: style3 */
       24 cobol_IVAL:
       25      proc (dn_ptr);
       26 
       27 declare	(mod, unspec, substr, addr, fixed)
       28 			builtin;
       29 dcl	name_ptr		ptr;
       30 dcl	temp_val		fixed bin (15);
       31 
       32 /*	This procedure  initializes a value  into a field
       33*  described by the type 9 token.
       34**/
       35 
       36 dcl	spaces		char (256);
       37 
       38 
       39 	spaces = " ";
       40 	tempptr = addr (temp);
       41 	hg_ptr1 = null ();
       42 	hg_field2 = 0;
       43 
       44 /* process data name with valuse only */
       45 	do while (data_name.type = 9 & initial_ptr ^= 0);
       46 
       47 	     if data_name.numeric
       48 	     then do;				/* code NUMERIC data extention. */
       49 		     valueptr = addr (dn (initial_ptr));/* points to the numeric data extension */
       50 		     if ascii_packed_dec_h
       51 		     then return;			/* NOT CODED YET */
       52 		     else if ascii_packed_dec
       53 		     then return;			/* NOT CODED YET */
       54 		     else if bin_16 | bin_18
       55 		     then do;			/* comp-1 or comp-7 */
       56 			     hg_field3 = 2;
       57 			     hg_field4 = 3;
       58 			     goto true_fixbin;
       59 			end;
       60 		     else if bin_32 | bin_36
       61 		     then do;			/* comp-2 or comp-6 */
       62 			     hg_field4 = 1;
       63 			     hg_field3 = 4;
       64 true_fixbin:
       65 			     if numinit.figcon
       66 			     then if numinit.sign = "-"
       67 				then hg_field1 = hg_field2;
       68 				else hg_field1 = 0;
       69 			     else hg_field1 = cobol_ddalloc$b_to_d ((numinit.length), addr (numinit.literal));
       70 			     hg_ptr1 = addr (hg_field1);
       71 			     lnval = data_name.item_length;
       72 			     value = substr (hg_field5, hg_field4, hg_field3);
       73 			     goto CP;
       74 			end;
       75 		     if numinit.figcon = "1"b
       76 		     then do;			/* 0 = only legal numeric figcon value */
       77 			     numinit.length = 1;	/* make the input initial value extension */
       78 			     numinit.literal = "0";	/* look like a valid figcon zero initial value */
       79 			     numinit.ltdp = 1;
       80 			     numinit.sign = " ";
       81 			end;
       82 		     work = numinit.literal;
       83 		     substr (work, numinit.length + 1) = zeros;
       84 		     if ebcdic_packed_dec
       85 		     then do;			/*[comp3rtn:]*/
       86 			     d_ptr = addr (substr (comp3init, 16, 1));
       87 			     m = 18 + numinit.ltdp + data_name.places_right;
       88 			     n = m - (data_name.places_left + data_name.places_right);
       89 			     workptr = addr (substr (temp1, m, 1));
       90 			     if numinit.sign = "-"
       91 			     then substr (initchar, VC_5, 4) = "1101"b;
       92 			     else substr (initchar, VC_1, 4) = "1011"b;
       93 			     substr (initchar, VC_1, 4) = substr (lit_char, VC_5, 4);
       94 			     i = 1;
       95 loop_comp3init:
       96 			     m = m - 1;
       97 			     if m = n
       98 			     then goto end_init;
       99 			     workptr = addr (substr (temp1, m, 1));
      100 			     d_ptr = addr (substr (temp1, m, 1));
      101 			     initchar = "00000000"b;
      102 			     substr (initchar, VC_5, 4) = substr (lit_char, VC_5, 4);
      103 			     m = m - 1;
      104 			     if m = n
      105 			     then goto end_init;
      106 			     workptr = addr (substr (temp1, m, 1));
      107 			     substr (initchar, VC_1, 4) = substr (lit_char, VC_5, 4);
      108 			     i = i + 1;
      109 			     goto loop_comp3init;
      110 end_init:
      111 			     lnval = data_name.item_length;
      112 			     value = substr (comp3init, 17 - data_name.item_length, data_name.item_length);
      113 			     goto CP;
      114 			end;
      115 		     signptr =
      116 			addr (substr (temp1, 18 + numinit.ltdp - data_name.places_left + data_name.item_length, 1));
      117 		     lnval = data_name.item_length;
      118 		     if item_signed
      119 		     then value = numinit.sign || substr (temp1, 19 + numinit.ltdp - data_name.places_left, lnval);
      120 		     else value = substr (temp1, 19 + numinit.ltdp - data_name.places_left, lnval);
      121 CP:
      122 		     numrep = 1;
      123 		     temp_val = data_name.seg_num - 1;
      124 		     res = substr (unspec (temp_val), 29, 8);
      125 						/* enter seg no. as a sort key for finishrtn */
      126 		     reladdinseg = substr (unspec (data_name.offset), 13, 24);
      127 						/* enter offset of this value */
      128 
      129 		     call st_val;
      130 		     return;
      131 
      132 		end;
      133 
      134 aninitrtn:
      135 	     valueptr = addr (dn (initial_ptr));	/* points to the non-numeric data extension. */
      136 	     if alphainit.length > data_name.item_length
      137 	     then alphainit.length = data_name.item_length;
      138 	     if alphainit.figcon = "1"b
      139 	     then do;				/*[figconrtn:]*/
      140 		     alphainit.length = 1;		/* input contents for figcons is BAD. */
      141 		     alphainit.string = figcon (fixed (figconindex, 7));
      142 						/* set CORRECT value. */
      143 		     goto allrtn;
      144 		end;
      145 	     else if alphainit.allit = "1"b
      146 	     then do;
      147 allrtn:
      148 		     lnval = alphainit.length;	/* set length of value */
      149 		     value = alphainit.string;	/* move data into initial value area */
      150 		     numrep = divide (data_name.item_length, alphainit.length, 15, 0);
      151 		     temp_val = data_name.seg_num - 1;
      152 		     res = substr (unspec (temp_val), 29, 8);
      153 						/* enter seg no. as a sort key for finishrtn */
      154 		     reladdinseg = substr (unspec (data_name.offset), 13, 24);
      155 
      156 		     call st_val;
      157 
      158 		     lnval = mod (data_name.item_length, alphainit.length);
      159 		     if lnval = 0
      160 		     then return;			/* does it fit? */
      161 		     numrep = 1;
      162 		     temp_val = data_name.offset + data_name.item_length - lnval;
      163 		     reladdinseg = substr (unspec (temp_val), 13, 24);
      164 
      165 		     return;
      166 		end;
      167 
      168 	     lnval = alphainit.length;
      169 	     value = alphainit.string;
      170 
      171 	     temp_val = data_name.seg_num - 1;
      172 	     res = substr (unspec (temp_val), 29, 8);
      173 	     reladdinseg = substr (unspec (data_name.offset), 13, 24);
      174 CP1:
      175 	     if alphainit.length = data_name.item_length
      176 	     then ;				/* fall through if space fill required */
      177 	     else do;				/* make length = 1, and no of repetitions = no of spaces reqd */
      178 		     lnval = data_name.item_length;
      179 		     substr (value, 1, lnval) = spaces;
      180 		     substr (value, 1, alphainit.length) = alphainit.string;
      181 		     temp_val = data_name.seg_num - 1;
      182 		     res = substr (unspec (temp_val), 29, 8);
      183 		     temp_val = data_name.offset + alphainit.length;
      184 		     reladdinseg = substr (unspec (temp_val), 13, 24);
      185 
      186 		end;
      187 
      188 	     call st_val;
      189 
      190 	     return;
      191 	end;					/* no type 9 */
      192 	if data_name.level = 01 | data_name.level = 77
      193 	then do;
      194 		parea.lnval = data_name.item_length;
      195 		call st_val;
      196 	     end;
      197 
      198 	return;					/* ======STORE VALUE============================== */
      199 
      200 st_val:
      201      proc;
      202 
      203 dcl	s		char (262144) aligned based (text_base_ptr),
      204 	j		fixed bin,
      205 	dummy		bit (36) based (addr (j)),
      206 	p_ptr		ptr;
      207 
      208 
      209 	substr (dummy, 19, 18) = rel (con_end_ptr);	/* mark the end of the text segment */
      210 	j = j * 4;
      211 	if data_name.level ^= 01 & data_name.level ^= 77
      212 	then do;
      213 		if data_name.offset > 0
      214 		then do;
      215 			substr (s, j - ((con_wd_off - 1) * 4) + 1 + data_name.offset, lnval) = value;
      216 			target_ptr = addr (substr (s, j - ((con_wd_off - 1) * 4) + 1 + data_name.offset, lnval));
      217 		     end;
      218 		else do;
      219 			substr (s, j - ((con_wd_off - 1) * 4) + 1, lnval) = value;
      220 			target_ptr = addr (substr (s, j - ((con_wd_off - 1) * 4) + 1, lnval));
      221 		     end;
      222 		if data_name.ascii_packed_dec = "1"b
      223 		     | (data_name.display = "1"b & data_name.item_signed = "1"b & data_name.sign_separate = "0"b)
      224 		then call cobol_opch_is (dn_ptr, target_ptr);
      225 
      226 		return;
      227 	     end;
      228 	temp_val = parea.lnval;
      229 	if substr (unspec (temp_val), 35, 2) ^= "00"b
      230 	then con_wd_off = con_wd_off + 1;
      231 	con_wd_off = con_wd_off + (fixed (substr (unspec (temp_val), 1, 34), 36));
      232 						/* set initial value in TEXT segment */
      233 	if initial_ptr ^= 0
      234 	then substr (s, j - ((con_wd_off - 1) * 4) + 1, lnval) = value;
      235 	if data_name.ascii_packed_dec = "1"b
      236 	     | (data_name.display = "1"b & data_name.item_signed = "1"b & data_name.sign_separate = "0"b)
      237 	then do;
      238 		target_ptr = addr (substr (s, j - ((con_wd_off - 1) * 4) + 1, lnval));
      239 		call cobol_opch_is (dn_ptr, target_ptr);
      240 	     end;
      241 dcl	target_ptr	ptr;
      242 dcl	cobol_opch_is	entry (ptr, ptr) ext;
      243 
      244 	return;
      245 
      246      end st_val;
      247 
      248 /* ======END STORE VALUE ===================== */
      249 
      250 dcl	cobol_ddalloc$b_to_d
      251 			entry (fixed bin (15), ptr) returns (fixed bin (31));
      252 
  1     1 
  1     2 /* BEGIN INCLUDE FILE ...   cobol_IVAL.incl.pl1 */
  1     3 /* last modified July 5, 1974 by GM */
  1     4 
  1     5 dcl	(dn_ptr,
  1     6 	valueptr,
  1     7 	pareaptr,
  1     8 	tempptr,
  1     9 	signptr,
  1    10 	workptr,
  1    11 	d_ptr,
  1    12 	hg_ptr,
  1    13 	hg_ptr1,
  1    14 	hg_ptr2 )		ptr,
  1    15 	(hg_field1,
  1    16 	hg_field2,
  1    17 	hg_field3,
  1    18 	m,
  1    19 	n,
  1    20 	i,
  1    21 	hg_field4 )		fixed bin(35) static,
  1    22 	temp1		char (54) based ( tempptr),
  1    23 	VC_5 		fixed bin static initial (5),
  1    24 	VC_1 		fixed bin static initial (1),
  1    25 	bits_per_byte	fixed bin static initial (9),
  1    26 
  1    27 	signchar bit (8) based (signptr),	/* used by "numinitrtn to substr sign bits intos
  1    28*				   numeric values */
  1    29 	lit_char bit (bits_per_byte ) based (workptr),
  1    30 	initchar bit (bits_per_byte) based (d_ptr),
  1    31 	dn (500)		char (1) based (dn_ptr),
  1    32 	figcon (7)	char (1) static initial ("0", " ", "H", "0", "H", "0", """"),
  1    33 	hg_field5	char (4) based (hg_ptr1),
  1    34 	comp3init char (16),
  1    35 					/* figcon data table */
  1    36 	/* used by NTrtn for finding the data extensions */
  1    37 	1 parea ,
  1    38 	  2 res		bit(8),
  1    39 	  2 reladdinseg	bit(24),
  1    40 	  2 numrep	fixed bin(15),
  1    41 	  2 lnval		fixed bin(15),
  1    42 	  2 value		char(256),
  1    43 	1 temp static,		/* work area for alligning initial values */
  1    44 	  2 zeros char (18) initial ((18) "0"),	/* must remain zeros, used as zero fill
  1    45*						   for numeric literals */
  1    46 	  2 work char (36) initial ((36) "0" );	/* work area for alligning initial values */
  1    47 /* END INCLUDE FILE ...   cobol_IVAL.incl.pl1 */
  1    48 
      253 
  2     1 
  2     2 /* BEGIN INCLUDE FILE ... cobol_type9.incl.pl1 */
  2     3 /* Last modified on 11/19/76 by ORN */
  2     4 
  2     5 /*
  2     6*A type 9 data name token is entered into the name table by the data
  2     7*division syntax phase for each data name described in the data division.
  2     8*The replacement phase subsequently replaces type 8 user word references
  2     9*to data names in the procedure division minpral file with the corresponding
  2    10*type 9 tokens from the name table.
  2    11**/
  2    12 
  2    13 /* dcl dn_ptr ptr; */
  2    14 
  2    15 /* BEGIN DECLARATION OF TYPE9 (DATA NAME) TOKEN */
  2    16 dcl 1 data_name based (dn_ptr),
  3     1 
  3     2 /* begin include file ... cobol_TYPE9.incl.pl1 */
  3     3 /* Last modified on 06/19/77 by ORN */
  3     4 /* Last modified on 12/28/76 by FCH */
  3     5 
  3     6 		/* header */
  3     7 		2 size fixed bin,
  3     8 		2 line fixed bin,
  3     9 		2 column fixed bin,
  3    10 		2 type fixed bin,
  3    11 		/* body */
  3    12 		2 string_ptr ptr,
  3    13 		2 prev_rec ptr,
  3    14 		2 searched bit (1),
  3    15 		2 duplicate bit (1),
  3    16 		2 saved bit (1),
  3    17 		2 debug_ind bit (1),
  3    18 		2 filler2 bit (3),
  3    19 		2 used_as_sub bit (1),
  3    20 		2 def_line fixed bin,
  3    21 		2 level fixed bin,
  3    22 		2 linkage fixed bin,
  3    23 		2 file_num fixed bin,
  3    24 		2 size_rtn fixed bin,
  3    25 		2 item_length fixed bin(24),
  3    26 		2 places_left fixed bin,
  3    27 		2 places_right fixed bin,
  3    28 		/* description */
  3    29 		2 file_section bit (1),
  3    30 		2 working_storage bit (1),
  3    31 		2 constant_section bit (1),
  3    32 		2 linkage_section bit (1),
  3    33 		2 communication_section bit (1),
  3    34 		2 report_section bit (1),
  3    35 		2 level_77 bit (1),
  3    36 		2 level_01 bit (1),
  3    37 		2 non_elementary bit (1),
  3    38 		2 elementary bit (1),
  3    39 		2 filler_item bit (1),
  3    40 		2 s_of_rdf bit (1),
  3    41 		2 o_of_rdf bit (1),
  3    42 		2 bin_18 bit (1),
  3    43 		2 bin_36 bit (1),
  3    44 		2 pic_has_l bit (1),
  3    45 		2 pic_is_do bit (1),
  3    46 		2 numeric bit (1),
  3    47 		2 numeric_edited bit (1),
  3    48 		2 alphanum bit (1),
  3    49 		2 alphanum_edited bit (1),
  3    50 		2 alphabetic bit (1),
  3    51 		2 alphabetic_edited bit (1),
  3    52 		2 pic_has_p bit (1),
  3    53 		2 pic_has_ast bit (1),
  3    54 		2 item_signed bit(1),
  3    55 		2 sign_separate bit (1),
  3    56 		2 display bit (1),
  3    57 		2 comp bit (1),
  3    58 		2 ascii_packed_dec_h bit (1),	/* as of 8/16/76  this field used for comp8. */
  3    59 		2 ascii_packed_dec bit (1),
  3    60 		2 ebcdic_packed_dec bit (1),
  3    61 		2 bin_16 bit (1),
  3    62 		2 bin_32 bit (1),
  3    63 		2 usage_index bit (1),
  3    64 		2 just_right bit (1),
  3    65 		2 compare_argument bit (1),
  3    66 		2 sync bit (1),
  3    67 		2 temporary bit (1),
  3    68 		2 bwz bit (1),
  3    69 		2 variable_length bit (1),
  3    70 		2 subscripted bit (1),
  3    71 		2 occurs_do bit (1),
  3    72 		2 key_a bit (1),
  3    73 		2 key_d bit (1),
  3    74 		2 indexed_by bit (1),
  3    75 		2 value_numeric bit (1),
  3    76 		2 value_non_numeric bit (1),
  3    77 		2 value_signed bit (1),
  3    78 		2 sign_type bit (3),
  3    79 		2 pic_integer bit (1),
  3    80 		2 ast_when_zero bit (1),
  3    81 		2 label_record bit (1),
  3    82 		2 sign_clause_occurred bit (1),
  3    83 		2 okey_dn bit (1),
  3    84 		2 subject_of_keyis bit (1),
  3    85 		2 exp_redefining bit (1),
  3    86 		2 sync_in_rec bit (1),
  3    87 		2 rounded bit (1),
  3    88 		2 ad_bit bit (1),
  3    89 		2 debug_all bit (1),
  3    90 		2 overlap bit (1),
  3    91 		2 sum_counter bit (1),
  3    92 		2 exp_occurs bit (1),
  3    93 		2 linage_counter bit (1),
  3    94 		2 rnm_01 bit (1),
  3    95 		2 aligned bit (1),
  3    96 		2 not_user_writable bit (1),
  3    97 		2 database_key bit (1),
  3    98 		2 database_data_item bit (1),
  3    99 		2 seg_num fixed bin,
  3   100 		2 offset fixed bin(24),
  3   101 		2 initial_ptr fixed bin,
  3   102 		2 edit_ptr fixed bin,
  3   103 		2 occurs_ptr fixed bin,
  3   104 		2 do_rec char(5),
  3   105 		2 bitt bit (1),
  3   106 		2 byte bit (1),
  3   107 		2 half_word bit (1),
  3   108 		2 word bit (1),
  3   109 		2 double_word bit (1),
  3   110 		2 half_byte bit (1),
  3   111 		2 filler5 bit (1),
  3   112 		2 bit_offset bit (4),
  3   113 		2 son_cnt bit (16),
  3   114 		2 max_red_size fixed bin(24),
  3   115 		2 name_size fixed bin,
  3   116 		2 name char(0 refer(data_name.name_size));	
  3   117 
  3   118 
  3   119 
  3   120 /* end include file ... cobol_TYPE9.incl.pl1 */
  3   121 
  2    17 
  2    18 /* END DECLARATION OF TYPE9 (DATA NAME) TOKEN */
  2    19 
  2    20 /* END INCLUDE FILE ... cobol_type9.incl.pl1 */
  2    21 
      254 
  4     1 
  4     2 /* BEGIN INCLUDE FILE ... cobol_ext_nonnum.incl.pl1 */
  4     3 /* Last modified on 01/24/77 by ORN */
  4     4 
  4     5 /* The type 9 token extension for nonnumeric initial values */
  4     6 
  4     7 dcl	1 alphainit based (valueptr),
  4     8 	  2 initype,
  4     9 	    3 numeric bit(1),
  4    10 	    3 nonnumeric bit(1),
  4    11 	    3 figcon bit(1),
  4    12 	    3 allit bit(1),
  4    13 	    3 single bit(1),
  4    14 	    3 thru1 bit(1),
  4    15 	    3 thru2 bit(1),
  4    16 	    3 filler11 bit(1),
  4    17 	  2 info,
  4    18 	    3 bitstring bit(1),
  4    19 	    3 figconindex bit(7),
  4    20 	  2 length fixed bin(24),
  4    21 	  2 string char(0 refer(alphainit.length));
  4    22 
  4    23 /* END INCLUDE FILE ... cobol_ext_nonnum.incl.pl1 */
  4    24 
      255 
  5     1 
  5     2 /* BEGIN INCLUDE FILE ... cobol_ext_num.incl.pl1 */
  5     3 /* Last modified on 01/24/77 by ORN */
  5     4 
  5     5 /* The type 9 token extension for numeric initial values */
  5     6 
  5     7 dcl	1 numinit based(valueptr),
  5     8 	  2 initype,
  5     9 	    3 numeric bit(1),
  5    10 	    3 nonnumeric bit(1),
  5    11 	    3 figcon bit(1),
  5    12 	    3 allit bit(1),
  5    13 	    3 single bit(1),
  5    14 	    3 thru1 bit(1),
  5    15 	    3 thru2 bit(1),
  5    16 	    3 filler9 bit(1),
  5    17 	  2 info,
  5    18 	    3 integer bit(1),
  5    19 	    3 floating bit(1),
  5    20 	    3 filler10 bit(6),
  5    21 	  2 sign char(1),
  5    22 	  2 expsign char(1),
  5    23 	  2 explaces fixed bin(24),
  5    24 	  2 ltdp fixed bin(24),
  5    25 	  2 rtdp fixed bin(24),
  5    26 	  2 length fixed bin(24),
  5    27 	  2 literal char(0 refer(numinit.length));
  5    28 
  5    29 /* END INCLUDE FILE ... cobol_ext_num.incl.pl1 */
  5    30 
      256 
  6     1 
  6     2 /* BEGIN INCLUDE FILE ... cobol_.incl.pl1 */
  6     3 /* last modified Feb 4, 1977 by ORN  */
  6     4 
  6     5 /* This file defines all external data used in the generator phase of Multics Cobol */
  6     6 
  6     7 /* POINTERS */
  6     8 dcl cobol_$text_base_ptr ptr  ext;
  6     9 dcl text_base_ptr ptr  defined (cobol_$text_base_ptr);
  6    10 dcl cobol_$con_end_ptr ptr  ext;
  6    11 dcl con_end_ptr ptr  defined (cobol_$con_end_ptr);
  6    12 dcl cobol_$def_base_ptr ptr  ext;
  6    13 dcl def_base_ptr ptr  defined (cobol_$def_base_ptr);
  6    14 dcl cobol_$link_base_ptr ptr  ext;
  6    15 dcl link_base_ptr ptr  defined (cobol_$link_base_ptr);
  6    16 dcl cobol_$sym_base_ptr ptr  ext;
  6    17 dcl sym_base_ptr ptr  defined (cobol_$sym_base_ptr);
  6    18 dcl cobol_$reloc_text_base_ptr ptr  ext;
  6    19 dcl reloc_text_base_ptr ptr  defined (cobol_$reloc_text_base_ptr);
  6    20 dcl cobol_$reloc_def_base_ptr ptr  ext;
  6    21 dcl reloc_def_base_ptr ptr  defined (cobol_$reloc_def_base_ptr);
  6    22 dcl cobol_$reloc_link_base_ptr ptr  ext;
  6    23 dcl reloc_link_base_ptr ptr  defined (cobol_$reloc_link_base_ptr);
  6    24 dcl cobol_$reloc_sym_base_ptr ptr  ext;
  6    25 dcl reloc_sym_base_ptr ptr  defined (cobol_$reloc_sym_base_ptr);
  6    26 dcl cobol_$reloc_work_base_ptr ptr  ext;
  6    27 dcl reloc_work_base_ptr ptr  defined (cobol_$reloc_work_base_ptr);
  6    28 dcl cobol_$pd_map_ptr ptr  ext;
  6    29 dcl pd_map_ptr ptr  defined (cobol_$pd_map_ptr);
  6    30 dcl cobol_$fixup_ptr ptr  ext;
  6    31 dcl fixup_ptr ptr  defined (cobol_$fixup_ptr);
  6    32 dcl cobol_$initval_base_ptr ptr  ext;
  6    33 dcl initval_base_ptr ptr  defined (cobol_$initval_base_ptr);
  6    34 dcl cobol_$initval_file_ptr ptr  ext;
  6    35 dcl initval_file_ptr ptr  defined (cobol_$initval_file_ptr);
  6    36 dcl cobol_$perform_list_ptr ptr  ext;
  6    37 dcl perform_list_ptr ptr  defined (cobol_$perform_list_ptr);
  6    38 dcl cobol_$alter_list_ptr ptr  ext;
  6    39 dcl alter_list_ptr ptr  defined (cobol_$alter_list_ptr);
  6    40 dcl cobol_$seg_init_list_ptr ptr  ext;
  6    41 dcl seg_init_list_ptr ptr  defined (cobol_$seg_init_list_ptr);
  6    42 dcl cobol_$temp_token_area_ptr ptr  ext;
  6    43 dcl temp_token_area_ptr ptr  defined (cobol_$temp_token_area_ptr);
  6    44 dcl cobol_$temp_token_ptr ptr  ext;
  6    45 dcl temp_token_ptr ptr  defined (cobol_$temp_token_ptr);
  6    46 dcl cobol_$token_block1_ptr ptr  ext;
  6    47 dcl token_block1_ptr ptr  defined (cobol_$token_block1_ptr);
  6    48 dcl cobol_$token_block2_ptr ptr  ext;
  6    49 dcl token_block2_ptr ptr  defined (cobol_$token_block2_ptr);
  6    50 dcl cobol_$minpral5_ptr ptr  ext;
  6    51 dcl minpral5_ptr ptr  defined (cobol_$minpral5_ptr);
  6    52 dcl cobol_$tag_table_ptr ptr  ext;
  6    53 dcl tag_table_ptr ptr  defined (cobol_$tag_table_ptr);
  6    54 dcl cobol_$map_data_ptr ptr  ext;
  6    55 dcl map_data_ptr ptr  defined (cobol_$map_data_ptr);
  6    56 dcl cobol_$ptr_status_ptr ptr  ext;
  6    57 dcl ptr_status_ptr ptr  defined (cobol_$ptr_status_ptr);
  6    58 dcl cobol_$reg_status_ptr ptr  ext;
  6    59 dcl reg_status_ptr ptr  defined (cobol_$reg_status_ptr);
  6    60 dcl cobol_$misc_base_ptr ptr ext;
  6    61 dcl misc_base_ptr ptr defined (cobol_$misc_base_ptr);
  6    62 dcl cobol_$misc_end_ptr ptr ext;
  6    63 dcl misc_end_ptr ptr defined (cobol_$misc_end_ptr);
  6    64 dcl cobol_$list_ptr ptr ext;
  6    65 dcl list_ptr ptr defined (cobol_$list_ptr);
  6    66 dcl cobol_$allo1_ptr ptr ext;
  6    67 dcl allo1_ptr ptr defined (cobol_$allo1_ptr);
  6    68 dcl cobol_$eln_ptr ptr ext;
  6    69 dcl eln_ptr ptr defined (cobol_$eln_ptr);
  6    70 dcl cobol_$diag_ptr ptr ext;
  6    71 dcl diag_ptr ptr defined (cobol_$diag_ptr);
  6    72 dcl cobol_$xref_token_ptr ptr ext;
  6    73 dcl xref_token_ptr ptr defined (cobol_$xref_token_ptr);
  6    74 dcl cobol_$xref_chain_ptr ptr ext;
  6    75 dcl xref_chain_ptr ptr defined (cobol_$xref_chain_ptr);
  6    76 dcl cobol_$statement_info_ptr ptr ext;
  6    77 dcl statement_info_ptr ptr defined (cobol_$statement_info_ptr);
  6    78 dcl cobol_$reswd_ptr ptr ext;
  6    79 dcl reswd_ptr ptr defined (cobol_$reswd_ptr);
  6    80 dcl cobol_$op_con_ptr ptr ext;
  6    81 dcl op_con_ptr ptr defined (cobol_$op_con_ptr);
  6    82 dcl cobol_$ntbuf_ptr ptr ext;
  6    83 dcl ntbuf_ptr ptr defined (cobol_$ntbuf_ptr);
  6    84 dcl cobol_$main_pcs_ptr ptr ext;
  6    85 dcl main_pcs_ptr ptr defined (cobol_$main_pcs_ptr);
  6    86 dcl cobol_$include_info_ptr ptr ext;
  6    87 dcl include_info_ptr ptr defined (cobol_$include_info_ptr);
  6    88 
  6    89 /* FIXED BIN */
  6    90 dcl cobol_$text_wd_off fixed bin  ext;
  6    91 dcl text_wd_off fixed bin  defined (cobol_$text_wd_off);
  6    92 dcl cobol_$con_wd_off fixed bin  ext;
  6    93 dcl con_wd_off fixed bin  defined (cobol_$con_wd_off);
  6    94 dcl cobol_$def_wd_off fixed bin  ext;
  6    95 dcl def_wd_off fixed bin  defined (cobol_$def_wd_off);
  6    96 dcl cobol_$def_max fixed bin  ext;
  6    97 dcl def_max fixed bin  defined (cobol_$def_max);
  6    98 dcl cobol_$link_wd_off fixed bin  ext;
  6    99 dcl link_wd_off fixed bin  defined (cobol_$link_wd_off);
  6   100 dcl cobol_$link_max fixed bin  ext;
  6   101 dcl link_max fixed bin  defined (cobol_$link_max);
  6   102 dcl cobol_$sym_wd_off fixed bin  ext;
  6   103 dcl sym_wd_off fixed bin  defined (cobol_$sym_wd_off);
  6   104 dcl cobol_$sym_max fixed bin  ext;
  6   105 dcl sym_max fixed bin  defined (cobol_$sym_max);
  6   106 dcl cobol_$reloc_text_max fixed bin(24)  ext;
  6   107 dcl reloc_text_max fixed bin(24)  defined (cobol_$reloc_text_max);
  6   108 dcl cobol_$reloc_def_max fixed bin(24)  ext;
  6   109 dcl reloc_def_max fixed bin(24)  defined (cobol_$reloc_def_max);
  6   110 dcl cobol_$reloc_link_max fixed bin(24)  ext;
  6   111 dcl reloc_link_max fixed bin(24)  defined (cobol_$reloc_link_max);
  6   112 dcl cobol_$reloc_sym_max fixed bin(24)  ext;
  6   113 dcl reloc_sym_max fixed bin(24)  defined (cobol_$reloc_sym_max);
  6   114 dcl cobol_$reloc_work_max fixed bin(24)  ext;
  6   115 dcl reloc_work_max fixed bin(24)  defined (cobol_$reloc_work_max);
  6   116 dcl cobol_$pd_map_index fixed bin  ext;
  6   117 dcl pd_map_index fixed bin  defined (cobol_$pd_map_index);
  6   118 dcl cobol_$cobol_data_wd_off fixed bin  ext;
  6   119 dcl cobol_data_wd_off fixed bin  defined (cobol_$cobol_data_wd_off);
  6   120 dcl cobol_$stack_off fixed bin  ext;
  6   121 dcl stack_off fixed bin  defined (cobol_$stack_off);
  6   122 dcl cobol_$max_stack_off fixed bin  ext;
  6   123 dcl max_stack_off fixed bin  defined (cobol_$max_stack_off);
  6   124 dcl cobol_$init_stack_off fixed bin  ext;
  6   125 dcl init_stack_off fixed bin  defined (cobol_$init_stack_off);
  6   126 dcl cobol_$pd_map_sw fixed bin  ext;
  6   127 dcl pd_map_sw fixed bin  defined (cobol_$pd_map_sw);
  6   128 dcl cobol_$next_tag fixed bin  ext;
  6   129 dcl next_tag fixed bin  defined (cobol_$next_tag);
  6   130 dcl cobol_$data_init_flag fixed bin  ext;
  6   131 dcl data_init_flag fixed bin  defined (cobol_$data_init_flag);
  6   132 dcl cobol_$seg_init_flag fixed bin  ext;
  6   133 dcl seg_init_flag fixed bin  defined (cobol_$seg_init_flag);
  6   134 dcl cobol_$alter_flag fixed bin  ext;
  6   135 dcl alter_flag fixed bin  defined (cobol_$alter_flag);
  6   136 dcl cobol_$sect_eop_flag fixed bin  ext;
  6   137 dcl sect_eop_flag fixed bin  defined (cobol_$sect_eop_flag);
  6   138 dcl cobol_$para_eop_flag fixed bin  ext;
  6   139 dcl para_eop_flag fixed bin  defined (cobol_$para_eop_flag);
  6   140 dcl cobol_$priority_no fixed bin  ext;
  6   141 dcl priority_no fixed bin  defined (cobol_$priority_no);
  6   142 dcl cobol_$compile_count fixed bin ext;
  6   143 dcl compile_count fixed bin defined (cobol_$compile_count);
  6   144 dcl cobol_$ptr_assumption_ind fixed bin ext;
  6   145 dcl ptr_assumption_ind fixed bin defined (cobol_$ptr_assumption_ind);
  6   146 dcl cobol_$reg_assumption_ind fixed bin ext;
  6   147 dcl reg_assumption_ind fixed bin defined (cobol_$reg_assumption_ind);
  6   148 dcl cobol_$perform_para_index fixed bin ext;
  6   149 dcl perform_para_index fixed bin defined (cobol_$perform_para_index);
  6   150 dcl cobol_$perform_sect_index fixed bin ext;
  6   151 dcl perform_sect_index fixed bin defined (cobol_$perform_sect_index);
  6   152 dcl cobol_$alter_index fixed bin ext;
  6   153 dcl alter_index fixed bin defined (cobol_$alter_index);
  6   154 dcl cobol_$list_off fixed bin ext;
  6   155 dcl list_off fixed bin defined (cobol_$list_off);
  6   156 dcl cobol_$constant_offset fixed bin ext;
  6   157 dcl constant_offset fixed bin defined (cobol_$constant_offset);
  6   158 dcl cobol_$misc_max fixed bin ext;
  6   159 dcl misc_max fixed bin defined (cobol_$misc_max);
  6   160 dcl cobol_$pd_map_max fixed bin ext;
  6   161 dcl pd_map_max fixed bin defined (cobol_$pd_map_max);
  6   162 dcl cobol_$map_data_max fixed bin ext;
  6   163 dcl map_data_max fixed bin defined (cobol_$map_data_max);
  6   164 dcl cobol_$fixup_max fixed bin ext;
  6   165 dcl fixup_max fixed bin defined (cobol_$fixup_max);
  6   166 dcl cobol_$tag_table_max fixed bin ext;
  6   167 dcl tag_table_max fixed bin defined (cobol_$tag_table_max);
  6   168 dcl cobol_$temp_token_max fixed bin ext;
  6   169 dcl temp_token_max fixed bin defined (cobol_$temp_token_max);
  6   170 dcl cobol_$allo1_max fixed bin ext;
  6   171 dcl allo1_max fixed bin defined (cobol_$allo1_max);
  6   172 dcl cobol_$eln_max fixed bin ext;
  6   173 dcl eln_max fixed bin defined (cobol_$eln_max);
  6   174 dcl cobol_$debug_enable fixed bin ext;
  6   175 dcl debug_enable fixed bin defined (cobol_$debug_enable);
  6   176 dcl cobol_$non_source_offset fixed bin ext;
  6   177 dcl non_source_offset fixed bin defined (cobol_$non_source_offset);
  6   178 dcl cobol_$initval_flag fixed bin ext;
  6   179 dcl initval_flag fixed bin defined (cobol_$initval_flag);
  6   180 dcl cobol_$date_compiled_sw fixed bin ext;
  6   181 dcl date_compiled_sw fixed bin defined (cobol_$date_compiled_sw);
  6   182 dcl cobol_$include_cnt fixed bin ext;
  6   183 dcl include_cnt fixed bin defined (cobol_$include_cnt);
  6   184 dcl cobol_$fs_charcnt fixed bin ext;
  6   185 dcl fs_charcnt fixed bin defined (cobol_$fs_charcnt);
  6   186 dcl cobol_$ws_charcnt fixed bin ext;
  6   187 dcl ws_charcnt fixed bin defined (cobol_$ws_charcnt);
  6   188 dcl cobol_$coms_charcnt fixed bin ext;
  6   189 dcl coms_charcnt fixed bin defined (cobol_$coms_charcnt);
  6   190 dcl cobol_$ls_charcnt fixed bin ext;
  6   191 dcl ls_charcnt fixed bin defined (cobol_$ls_charcnt);
  6   192 dcl cobol_$cons_charcnt fixed bin ext;
  6   193 dcl cons_charcnt fixed bin defined (cobol_$cons_charcnt);
  6   194 dcl cobol_$value_cnt fixed bin ext;
  6   195 dcl value_cnt fixed bin defined (cobol_$value_cnt);
  6   196 dcl cobol_$cd_cnt fixed bin ext;
  6   197 dcl cd_cnt fixed bin defined (cobol_$cd_cnt);
  6   198 dcl cobol_$fs_wdoff fixed bin ext;
  6   199 dcl fs_wdoff fixed bin defined (cobol_$fs_wdoff);
  6   200 dcl cobol_$ws_wdoff fixed bin ext;
  6   201 dcl ws_wdoff fixed bin defined (cobol_$ws_wdoff);
  6   202 dcl cobol_$coms_wdoff fixed bin ext;
  6   203 dcl coms_wdoff fixed bin defined (cobol_$coms_wdoff);
  6   204 
  6   205 /* CHARACTER */
  6   206 dcl cobol_$scratch_dir char (168)   aligned ext;
  6   207 dcl scratch_dir char (168)   aligned defined (cobol_$scratch_dir);			/* -42- */
  6   208 dcl cobol_$obj_seg_name char (32)   aligned ext;
  6   209 dcl obj_seg_name char (32)   aligned defined (cobol_$obj_seg_name);		/* -8- */
  6   210 
  6   211 /* BIT */
  6   212 dcl cobol_$xref_bypass bit(1) aligned ext;
  6   213 dcl xref_bypass bit(1) aligned defined (cobol_$xref_bypass);			/* -1- */
  6   214 dcl cobol_$same_sort_merge_proc bit(1) aligned ext;
  6   215 dcl same_sort_merge_proc bit(1) aligned defined (cobol_$same_sort_merge_proc);		/* -1- */
  6   216 
  6   217 
  6   218 /* END INCLUDE FILE ... cobol_incl.pl1*/
  6   219 
  6   220 
      257 
      258      end cobol_IVAL;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/24/89  0833.1  cobol_IVAL.pl1                    >spec>install>MR12.3-1048>cobol_IVAL.pl1
253          1    03/27/82  0439.6  cobol_IVAL.incl.pl1               >ldd>include>cobol_IVAL.incl.pl1
254          2    03/27/82  0439.9  cobol_type9.incl.pl1              >ldd>include>cobol_type9.incl.pl1
2-17         3    11/11/82  1712.7  cobol_TYPE9.incl.pl1              >ldd>include>cobol_TYPE9.incl.pl1
255          4    03/27/82  0439.7  cobol_ext_nonnum.incl.pl1         >ldd>include>cobol_ext_nonnum.incl.pl1
256          5    03/27/82  0439.7  cobol_ext_num.incl.pl1            >ldd>include>cobol_ext_num.incl.pl1
257          6    11/11/82  1712.7  cobol_.incl.pl1                   >ldd>include>cobol_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
VC_1                                   constant        fixed bin(17,0)          initial dcl 1-5 ref 92 93 107
VC_5                                   constant        fixed bin(17,0)          initial dcl 1-5 ref 90 93 102 102 107
addr                                                   builtin function         dcl 27 ref 40 49 69 69 70 86 89 99 100 106 115 134
                                                                                  209 216 220 238
allit                     0(03)        based           bit(1)                   level 3 packed packed unaligned dcl 4-7 ref 145
alphainit                              based           structure                level 1 unaligned dcl 4-7
ascii_packed_dec         21(30)        based           bit(1)                   level 2 packed packed unaligned dcl 2-16 ref 52 222
                                                                                  235
ascii_packed_dec_h       21(29)        based           bit(1)                   level 2 packed packed unaligned dcl 2-16 ref 50
bin_16                   21(32)        based           bit(1)                   level 2 packed packed unaligned dcl 2-16 ref 54
bin_18                   21(13)        based           bit(1)                   level 2 packed packed unaligned dcl 2-16 ref 54
bin_32                   21(33)        based           bit(1)                   level 2 packed packed unaligned dcl 2-16 ref 60
bin_36                   21(14)        based           bit(1)                   level 2 packed packed unaligned dcl 2-16 ref 60
bits_per_byte                          constant        fixed bin(17,0)          initial dcl 1-5 ref 90 92 93 93 101 102 102 107 107
cobol_$con_end_ptr              000042 external static pointer                  dcl 6-10 ref 209 209
cobol_$con_wd_off               000044 external static fixed bin(17,0)          dcl 6-92 set ref 215 215 216 216 219 219 220 220
                                                                                  229* 229 229 229 231* 231 231 231 233 233 238 238
cobol_$text_base_ptr            000040 external static pointer                  dcl 6-8 ref 215 215 216 216 219 219 220 220 233 233
                                                                                  238 238
cobol_ddalloc$b_to_d            000036 constant        entry                    external dcl 250 ref 69
cobol_opch_is                   000046 constant        entry                    external dcl 242 ref 222 239
comp3init                       000216 automatic       char(16)                 packed unaligned dcl 1-5 set ref 86 112
con_end_ptr                            defined         pointer                  dcl 6-11 ref 209
con_wd_off                             defined         fixed bin(17,0)          dcl 6-93 set ref 215 216 219 220 229* 229 231* 231
                                                                                  233 238
d_ptr                           000212 automatic       pointer                  dcl 1-5 set ref 86* 90 92 93 100* 101 102 107
data_name                              based           structure                level 1 unaligned dcl 2-16
display                  21(27)        based           bit(1)                   level 2 packed packed unaligned dcl 2-16 ref 222 235
dn                                     based           char(1)                  array packed unaligned dcl 1-5 set ref 49 134
dn_ptr                                 parameter       pointer                  dcl 1-5 set ref 24 45 45 47 49 49 50 52 54 54 60 60
                                                                                  71 84 87 88 88 110 112 112 115 115 117 118 118 120
                                                                                  123 126 134 134 136 136 150 151 154 158 162 162
                                                                                  171 173 174 178 181 183 192 192 194 211 211 213
                                                                                  215 216 222 222 222 222 222* 233 235 235 235 235
                                                                                  239*
dummy                                  based           bit(36)                  packed unaligned dcl 203 set ref 209*
ebcdic_packed_dec        21(31)        based           bit(1)                   level 2 packed packed unaligned dcl 2-16 ref 84
figcon                    0(02)        based           bit(1)                   level 3 in structure "alphainit" packed packed
                                                                                  unaligned dcl 4-7 in procedure "cobol_IVAL" ref
                                                                                  138
figcon                    0(02)        based           bit(1)                   level 3 in structure "numinit" packed packed
                                                                                  unaligned dcl 5-7 in procedure "cobol_IVAL" ref 64
                                                                                  75
figcon                          000000 constant        char(1)                  initial array packed unaligned dcl 1-5 in procedure
                                                                                  "cobol_IVAL" ref 141
figconindex               0(09)        based           bit(7)                   level 3 packed packed unaligned dcl 4-7 ref 141
fixed                                                  builtin function         dcl 27 ref 141 231
hg_field1                       000010 internal static fixed bin(35,0)          dcl 1-5 set ref 64* 68* 69* 70
hg_field2                       000011 internal static fixed bin(35,0)          dcl 1-5 set ref 42* 64
hg_field3                       000012 internal static fixed bin(35,0)          dcl 1-5 set ref 56* 63* 72
hg_field4                       000016 internal static fixed bin(35,0)          dcl 1-5 set ref 57* 62* 72
hg_field5                              based           char(4)                  packed unaligned dcl 1-5 ref 72
hg_ptr1                         000214 automatic       pointer                  dcl 1-5 set ref 41* 70* 72
i                               000015 internal static fixed bin(35,0)          dcl 1-5 set ref 94* 108* 108
info                      0(08)        based           structure                level 2 packed packed unaligned dcl 4-7
initchar                               based           bit                      packed unaligned dcl 1-5 set ref 90* 92* 93* 101*
                                                                                  102* 107*
initial_ptr              25            based           fixed bin(17,0)          level 2 dcl 2-16 ref 45 49 134 233
initype                                based           structure                level 2 in structure "numinit" packed packed
                                                                                  unaligned dcl 5-7 in procedure "cobol_IVAL"
initype                                based           structure                level 2 in structure "alphainit" packed packed
                                                                                  unaligned dcl 4-7 in procedure "cobol_IVAL"
item_length              16            based           fixed bin(24,0)          level 2 dcl 2-16 ref 71 110 112 112 115 117 136 136
                                                                                  150 158 162 174 178 194
item_signed              21(25)        based           bit(1)                   level 2 packed packed unaligned dcl 2-16 ref 118 222
                                                                                  235
j                               000334 automatic       fixed bin(17,0)          dcl 203 set ref 209 210* 210 215 216 219 220 233 238
length                    1            based           fixed bin(24,0)          level 2 in structure "alphainit" dcl 4-7
                                                                                  in procedure "cobol_IVAL" set ref 136 136* 140*
                                                                                  141 147 149 150 158 168 169 174 180 180 183
length                    4            based           fixed bin(24,0)          level 2 in structure "numinit" dcl 5-7 in procedure
                                                                                  "cobol_IVAL" set ref 69 69 69 77* 78 82 83
level                    12            based           fixed bin(17,0)          level 2 dcl 2-16 ref 192 192 211 211
lit_char                               based           bit                      packed unaligned dcl 1-5 ref 93 102 107
literal                   5            based           char                     level 2 packed packed unaligned dcl 5-7 set ref 69
                                                                                  69 78* 82
lnval                     2     000222 automatic       fixed bin(15,0)          level 2 dcl 1-5 set ref 71* 110* 117* 118 120 147*
                                                                                  158* 159 162 168* 178* 179 194* 215 216 219 220
                                                                                  228 233 238
ltdp                      2            based           fixed bin(24,0)          level 2 dcl 5-7 set ref 79* 87 115 118 120
m                               000013 internal static fixed bin(35,0)          dcl 1-5 set ref 87* 88 89 95* 95 97 99 100 103* 103
                                                                                  104 106
mod                                                    builtin function         dcl 27 ref 158
n                               000014 internal static fixed bin(35,0)          dcl 1-5 set ref 88* 97 104
numeric                  21(17)        based           bit(1)                   level 2 packed packed unaligned dcl 2-16 ref 47
numinit                                based           structure                level 1 unaligned dcl 5-7
numrep                    1     000222 automatic       fixed bin(15,0)          level 2 dcl 1-5 set ref 121* 150* 161*
offset                   24            based           fixed bin(24,0)          level 2 dcl 2-16 ref 126 154 162 173 183 213 215 216
parea                           000222 automatic       structure                level 1 unaligned dcl 1-5
places_left              17            based           fixed bin(17,0)          level 2 dcl 2-16 ref 88 115 118 120
places_right             20            based           fixed bin(17,0)          level 2 dcl 2-16 ref 87 88
reladdinseg               0(08) 000222 automatic       bit(24)                  level 2 packed packed unaligned dcl 1-5 set ref 126*
                                                                                  154* 163* 173* 184*
res                             000222 automatic       bit(8)                   level 2 packed packed unaligned dcl 1-5 set ref 124*
                                                                                  152* 172* 182*
s                                      based           char(262144)             dcl 203 set ref 215* 216 219* 220 233* 238
seg_num                  23            based           fixed bin(17,0)          level 2 dcl 2-16 ref 123 151 171 181
sign                      0(18)        based           char(1)                  level 2 packed packed unaligned dcl 5-7 set ref 64
                                                                                  80* 90 118
sign_separate            21(26)        based           bit(1)                   level 2 packed packed unaligned dcl 2-16 ref 222 235
signptr                         000206 automatic       pointer                  dcl 1-5 set ref 115*
spaces                          000101 automatic       char(256)                packed unaligned dcl 36 set ref 39* 179
string                    2            based           char                     level 2 packed packed unaligned dcl 4-7 set ref 141*
                                                                                  149 169 180
substr                                                 builtin function         dcl 27 set ref 72 83* 86 89 90* 92* 93* 93 99 100
                                                                                  102* 102 106 107* 107 112 115 118 120 124 126 152
                                                                                  154 163 172 173 179* 180* 182 184 209* 215* 216
                                                                                  219* 220 229 231 233* 238
target_ptr                      000336 automatic       pointer                  dcl 241 set ref 216* 220* 222* 238* 239*
temp                            000017 internal static structure                level 1 packed packed unaligned dcl 1-5 set ref 40
temp1                                  based           char(54)                 packed unaligned dcl 1-5 set ref 89 99 100 106 115
                                                                                  118 120
temp_val                        000100 automatic       fixed bin(15,0)          dcl 30 set ref 123* 124 151* 152 162* 163 171* 172
                                                                                  181* 182 183* 184 228* 229 231
tempptr                         000204 automatic       pointer                  dcl 1-5 set ref 40* 89 99 100 106 115 118 120
text_base_ptr                          defined         pointer                  dcl 6-9 ref 215 216 219 220 233 238
type                      3            based           fixed bin(17,0)          level 2 dcl 2-16 ref 45
unspec                                                 builtin function         dcl 27 ref 124 126 152 154 163 172 173 182 184 229
                                                                                  231
value                     3     000222 automatic       char(256)                level 2 packed packed unaligned dcl 1-5 set ref 72*
                                                                                  112* 118* 120* 149* 169* 179* 180* 215 219 233
valueptr                        000202 automatic       pointer                  dcl 1-5 set ref 49* 64 64 69 69 69 75 77 78 79 80 82
                                                                                  83 87 90 115 118 118 120 134* 136 136 138 140 141
                                                                                  141 145 147 149 150 158 168 169 174 180 180 183
work                      4(18) 000017 internal static char(36)                 initial level 2 packed packed unaligned dcl 1-5 set
                                                                                  ref 82* 83*
workptr                         000210 automatic       pointer                  dcl 1-5 set ref 89* 93 99* 102 106* 107
zeros                           000017 internal static char(18)                 initial level 2 packed packed unaligned dcl 1-5 set
                                                                                  ref 83

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
allo1_max                              defined         fixed bin(17,0)          dcl 6-171
allo1_ptr                              defined         pointer                  dcl 6-67
alter_flag                             defined         fixed bin(17,0)          dcl 6-135
alter_index                            defined         fixed bin(17,0)          dcl 6-153
alter_list_ptr                         defined         pointer                  dcl 6-39
cd_cnt                                 defined         fixed bin(17,0)          dcl 6-197
cobol_$allo1_max                       external static fixed bin(17,0)          dcl 6-170
cobol_$allo1_ptr                       external static pointer                  dcl 6-66
cobol_$alter_flag                      external static fixed bin(17,0)          dcl 6-134
cobol_$alter_index                     external static fixed bin(17,0)          dcl 6-152
cobol_$alter_list_ptr                  external static pointer                  dcl 6-38
cobol_$cd_cnt                          external static fixed bin(17,0)          dcl 6-196
cobol_$cobol_data_wd_off               external static fixed bin(17,0)          dcl 6-118
cobol_$compile_count                   external static fixed bin(17,0)          dcl 6-142
cobol_$coms_charcnt                    external static fixed bin(17,0)          dcl 6-188
cobol_$coms_wdoff                      external static fixed bin(17,0)          dcl 6-202
cobol_$cons_charcnt                    external static fixed bin(17,0)          dcl 6-192
cobol_$constant_offset                 external static fixed bin(17,0)          dcl 6-156
cobol_$data_init_flag                  external static fixed bin(17,0)          dcl 6-130
cobol_$date_compiled_sw                external static fixed bin(17,0)          dcl 6-180
cobol_$debug_enable                    external static fixed bin(17,0)          dcl 6-174
cobol_$def_base_ptr                    external static pointer                  dcl 6-12
cobol_$def_max                         external static fixed bin(17,0)          dcl 6-96
cobol_$def_wd_off                      external static fixed bin(17,0)          dcl 6-94
cobol_$diag_ptr                        external static pointer                  dcl 6-70
cobol_$eln_max                         external static fixed bin(17,0)          dcl 6-172
cobol_$eln_ptr                         external static pointer                  dcl 6-68
cobol_$fixup_max                       external static fixed bin(17,0)          dcl 6-164
cobol_$fixup_ptr                       external static pointer                  dcl 6-30
cobol_$fs_charcnt                      external static fixed bin(17,0)          dcl 6-184
cobol_$fs_wdoff                        external static fixed bin(17,0)          dcl 6-198
cobol_$include_cnt                     external static fixed bin(17,0)          dcl 6-182
cobol_$include_info_ptr                external static pointer                  dcl 6-86
cobol_$init_stack_off                  external static fixed bin(17,0)          dcl 6-124
cobol_$initval_base_ptr                external static pointer                  dcl 6-32
cobol_$initval_file_ptr                external static pointer                  dcl 6-34
cobol_$initval_flag                    external static fixed bin(17,0)          dcl 6-178
cobol_$link_base_ptr                   external static pointer                  dcl 6-14
cobol_$link_max                        external static fixed bin(17,0)          dcl 6-100
cobol_$link_wd_off                     external static fixed bin(17,0)          dcl 6-98
cobol_$list_off                        external static fixed bin(17,0)          dcl 6-154
cobol_$list_ptr                        external static pointer                  dcl 6-64
cobol_$ls_charcnt                      external static fixed bin(17,0)          dcl 6-190
cobol_$main_pcs_ptr                    external static pointer                  dcl 6-84
cobol_$map_data_max                    external static fixed bin(17,0)          dcl 6-162
cobol_$map_data_ptr                    external static pointer                  dcl 6-54
cobol_$max_stack_off                   external static fixed bin(17,0)          dcl 6-122
cobol_$minpral5_ptr                    external static pointer                  dcl 6-50
cobol_$misc_base_ptr                   external static pointer                  dcl 6-60
cobol_$misc_end_ptr                    external static pointer                  dcl 6-62
cobol_$misc_max                        external static fixed bin(17,0)          dcl 6-158
cobol_$next_tag                        external static fixed bin(17,0)          dcl 6-128
cobol_$non_source_offset               external static fixed bin(17,0)          dcl 6-176
cobol_$ntbuf_ptr                       external static pointer                  dcl 6-82
cobol_$obj_seg_name                    external static char(32)                 dcl 6-208
cobol_$op_con_ptr                      external static pointer                  dcl 6-80
cobol_$para_eop_flag                   external static fixed bin(17,0)          dcl 6-138
cobol_$pd_map_index                    external static fixed bin(17,0)          dcl 6-116
cobol_$pd_map_max                      external static fixed bin(17,0)          dcl 6-160
cobol_$pd_map_ptr                      external static pointer                  dcl 6-28
cobol_$pd_map_sw                       external static fixed bin(17,0)          dcl 6-126
cobol_$perform_list_ptr                external static pointer                  dcl 6-36
cobol_$perform_para_index              external static fixed bin(17,0)          dcl 6-148
cobol_$perform_sect_index              external static fixed bin(17,0)          dcl 6-150
cobol_$priority_no                     external static fixed bin(17,0)          dcl 6-140
cobol_$ptr_assumption_ind              external static fixed bin(17,0)          dcl 6-144
cobol_$ptr_status_ptr                  external static pointer                  dcl 6-56
cobol_$reg_assumption_ind              external static fixed bin(17,0)          dcl 6-146
cobol_$reg_status_ptr                  external static pointer                  dcl 6-58
cobol_$reloc_def_base_ptr              external static pointer                  dcl 6-20
cobol_$reloc_def_max                   external static fixed bin(24,0)          dcl 6-108
cobol_$reloc_link_base_ptr             external static pointer                  dcl 6-22
cobol_$reloc_link_max                  external static fixed bin(24,0)          dcl 6-110
cobol_$reloc_sym_base_ptr              external static pointer                  dcl 6-24
cobol_$reloc_sym_max                   external static fixed bin(24,0)          dcl 6-112
cobol_$reloc_text_base_ptr             external static pointer                  dcl 6-18
cobol_$reloc_text_max                  external static fixed bin(24,0)          dcl 6-106
cobol_$reloc_work_base_ptr             external static pointer                  dcl 6-26
cobol_$reloc_work_max                  external static fixed bin(24,0)          dcl 6-114
cobol_$reswd_ptr                       external static pointer                  dcl 6-78
cobol_$same_sort_merge_proc            external static bit(1)                   dcl 6-214
cobol_$scratch_dir                     external static char(168)                dcl 6-206
cobol_$sect_eop_flag                   external static fixed bin(17,0)          dcl 6-136
cobol_$seg_init_flag                   external static fixed bin(17,0)          dcl 6-132
cobol_$seg_init_list_ptr               external static pointer                  dcl 6-40
cobol_$stack_off                       external static fixed bin(17,0)          dcl 6-120
cobol_$statement_info_ptr              external static pointer                  dcl 6-76
cobol_$sym_base_ptr                    external static pointer                  dcl 6-16
cobol_$sym_max                         external static fixed bin(17,0)          dcl 6-104
cobol_$sym_wd_off                      external static fixed bin(17,0)          dcl 6-102
cobol_$tag_table_max                   external static fixed bin(17,0)          dcl 6-166
cobol_$tag_table_ptr                   external static pointer                  dcl 6-52
cobol_$temp_token_area_ptr             external static pointer                  dcl 6-42
cobol_$temp_token_max                  external static fixed bin(17,0)          dcl 6-168
cobol_$temp_token_ptr                  external static pointer                  dcl 6-44
cobol_$text_wd_off                     external static fixed bin(17,0)          dcl 6-90
cobol_$token_block1_ptr                external static pointer                  dcl 6-46
cobol_$token_block2_ptr                external static pointer                  dcl 6-48
cobol_$value_cnt                       external static fixed bin(17,0)          dcl 6-194
cobol_$ws_charcnt                      external static fixed bin(17,0)          dcl 6-186
cobol_$ws_wdoff                        external static fixed bin(17,0)          dcl 6-200
cobol_$xref_bypass                     external static bit(1)                   dcl 6-212
cobol_$xref_chain_ptr                  external static pointer                  dcl 6-74
cobol_$xref_token_ptr                  external static pointer                  dcl 6-72
cobol_data_wd_off                      defined         fixed bin(17,0)          dcl 6-119
compile_count                          defined         fixed bin(17,0)          dcl 6-143
coms_charcnt                           defined         fixed bin(17,0)          dcl 6-189
coms_wdoff                             defined         fixed bin(17,0)          dcl 6-203
cons_charcnt                           defined         fixed bin(17,0)          dcl 6-193
constant_offset                        defined         fixed bin(17,0)          dcl 6-157
data_init_flag                         defined         fixed bin(17,0)          dcl 6-131
date_compiled_sw                       defined         fixed bin(17,0)          dcl 6-181
debug_enable                           defined         fixed bin(17,0)          dcl 6-175
def_base_ptr                           defined         pointer                  dcl 6-13
def_max                                defined         fixed bin(17,0)          dcl 6-97
def_wd_off                             defined         fixed bin(17,0)          dcl 6-95
diag_ptr                               defined         pointer                  dcl 6-71
eln_max                                defined         fixed bin(17,0)          dcl 6-173
eln_ptr                                defined         pointer                  dcl 6-69
fixup_max                              defined         fixed bin(17,0)          dcl 6-165
fixup_ptr                              defined         pointer                  dcl 6-31
fs_charcnt                             defined         fixed bin(17,0)          dcl 6-185
fs_wdoff                               defined         fixed bin(17,0)          dcl 6-199
hg_ptr                                 automatic       pointer                  dcl 1-5
hg_ptr2                                automatic       pointer                  dcl 1-5
include_cnt                            defined         fixed bin(17,0)          dcl 6-183
include_info_ptr                       defined         pointer                  dcl 6-87
init_stack_off                         defined         fixed bin(17,0)          dcl 6-125
initval_base_ptr                       defined         pointer                  dcl 6-33
initval_file_ptr                       defined         pointer                  dcl 6-35
initval_flag                           defined         fixed bin(17,0)          dcl 6-179
link_base_ptr                          defined         pointer                  dcl 6-15
link_max                               defined         fixed bin(17,0)          dcl 6-101
link_wd_off                            defined         fixed bin(17,0)          dcl 6-99
list_off                               defined         fixed bin(17,0)          dcl 6-155
list_ptr                               defined         pointer                  dcl 6-65
ls_charcnt                             defined         fixed bin(17,0)          dcl 6-191
main_pcs_ptr                           defined         pointer                  dcl 6-85
map_data_max                           defined         fixed bin(17,0)          dcl 6-163
map_data_ptr                           defined         pointer                  dcl 6-55
max_stack_off                          defined         fixed bin(17,0)          dcl 6-123
minpral5_ptr                           defined         pointer                  dcl 6-51
misc_base_ptr                          defined         pointer                  dcl 6-61
misc_end_ptr                           defined         pointer                  dcl 6-63
misc_max                               defined         fixed bin(17,0)          dcl 6-159
name_ptr                               automatic       pointer                  dcl 29
next_tag                               defined         fixed bin(17,0)          dcl 6-129
non_source_offset                      defined         fixed bin(17,0)          dcl 6-177
ntbuf_ptr                              defined         pointer                  dcl 6-83
obj_seg_name                           defined         char(32)                 dcl 6-209
op_con_ptr                             defined         pointer                  dcl 6-81
p_ptr                                  automatic       pointer                  dcl 203
para_eop_flag                          defined         fixed bin(17,0)          dcl 6-139
pareaptr                               automatic       pointer                  dcl 1-5
pd_map_index                           defined         fixed bin(17,0)          dcl 6-117
pd_map_max                             defined         fixed bin(17,0)          dcl 6-161
pd_map_ptr                             defined         pointer                  dcl 6-29
pd_map_sw                              defined         fixed bin(17,0)          dcl 6-127
perform_list_ptr                       defined         pointer                  dcl 6-37
perform_para_index                     defined         fixed bin(17,0)          dcl 6-149
perform_sect_index                     defined         fixed bin(17,0)          dcl 6-151
priority_no                            defined         fixed bin(17,0)          dcl 6-141
ptr_assumption_ind                     defined         fixed bin(17,0)          dcl 6-145
ptr_status_ptr                         defined         pointer                  dcl 6-57
reg_assumption_ind                     defined         fixed bin(17,0)          dcl 6-147
reg_status_ptr                         defined         pointer                  dcl 6-59
reloc_def_base_ptr                     defined         pointer                  dcl 6-21
reloc_def_max                          defined         fixed bin(24,0)          dcl 6-109
reloc_link_base_ptr                    defined         pointer                  dcl 6-23
reloc_link_max                         defined         fixed bin(24,0)          dcl 6-111
reloc_sym_base_ptr                     defined         pointer                  dcl 6-25
reloc_sym_max                          defined         fixed bin(24,0)          dcl 6-113
reloc_text_base_ptr                    defined         pointer                  dcl 6-19
reloc_text_max                         defined         fixed bin(24,0)          dcl 6-107
reloc_work_base_ptr                    defined         pointer                  dcl 6-27
reloc_work_max                         defined         fixed bin(24,0)          dcl 6-115
reswd_ptr                              defined         pointer                  dcl 6-79
same_sort_merge_proc                   defined         bit(1)                   dcl 6-215
scratch_dir                            defined         char(168)                dcl 6-207
sect_eop_flag                          defined         fixed bin(17,0)          dcl 6-137
seg_init_flag                          defined         fixed bin(17,0)          dcl 6-133
seg_init_list_ptr                      defined         pointer                  dcl 6-41
signchar                               based           bit(8)                   packed unaligned dcl 1-5
stack_off                              defined         fixed bin(17,0)          dcl 6-121
statement_info_ptr                     defined         pointer                  dcl 6-77
sym_base_ptr                           defined         pointer                  dcl 6-17
sym_max                                defined         fixed bin(17,0)          dcl 6-105
sym_wd_off                             defined         fixed bin(17,0)          dcl 6-103
tag_table_max                          defined         fixed bin(17,0)          dcl 6-167
tag_table_ptr                          defined         pointer                  dcl 6-53
temp_token_area_ptr                    defined         pointer                  dcl 6-43
temp_token_max                         defined         fixed bin(17,0)          dcl 6-169
temp_token_ptr                         defined         pointer                  dcl 6-45
text_wd_off                            defined         fixed bin(17,0)          dcl 6-91
token_block1_ptr                       defined         pointer                  dcl 6-47
token_block2_ptr                       defined         pointer                  dcl 6-49
value_cnt                              defined         fixed bin(17,0)          dcl 6-195
ws_charcnt                             defined         fixed bin(17,0)          dcl 6-187
ws_wdoff                               defined         fixed bin(17,0)          dcl 6-201
xref_bypass                            defined         bit(1)                   dcl 6-213
xref_chain_ptr                         defined         pointer                  dcl 6-75
xref_token_ptr                         defined         pointer                  dcl 6-73

NAMES DECLARED BY EXPLICIT CONTEXT.
CP                              000426 constant        label                    dcl 121 ref 73 113
CP1                             000604 constant        label                    dcl 174
allrtn                          000507 constant        label                    dcl 147 ref 143
aninitrtn                       000452 constant        label                    dcl 134
cobol_IVAL                      000011 constant        entry                    external dcl 24
end_init                        000340 constant        label                    dcl 110 ref 97 104
loop_comp3init                  000260 constant        label                    dcl 95 ref 109
st_val                          000644 constant        entry                    internal dcl 200 ref 129 156 188 195
true_fixbin                     000074 constant        label                    dcl 64 ref 58

NAMES DECLARED BY CONTEXT OR IMPLICATION.
divide                                                 builtin function         ref 150
null                                                   builtin function         ref 41
rel                                                    builtin function         ref 209

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1162        1232    1071        1172
Length      1536    1071        50         270      71          26

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cobol_IVAL                          244 external procedure  is an external procedure.  
st_val                                  internal procedure  shares stack frame of external procedure cobol_IVAL.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 hg_field1                   cobol_IVAL
000011 hg_field2                   cobol_IVAL
000012 hg_field3                   cobol_IVAL
000013 m                           cobol_IVAL
000014 n                           cobol_IVAL
000015 i                           cobol_IVAL
000016 hg_field4                   cobol_IVAL
000017 temp                        cobol_IVAL

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cobol_IVAL               000100 temp_val                    cobol_IVAL
                         000101 spaces                      cobol_IVAL
                         000202 valueptr                    cobol_IVAL
                         000204 tempptr                     cobol_IVAL
                         000206 signptr                     cobol_IVAL
                         000210 workptr                     cobol_IVAL
                         000212 d_ptr                       cobol_IVAL
                         000214 hg_ptr1                     cobol_IVAL
                         000216 comp3init                   cobol_IVAL
                         000222 parea                       cobol_IVAL
                         000334 j                           st_val
                         000336 target_ptr                  st_val

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_char_temp     call_ext_out        return_mac          mdfx1               shorten_stack       ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cobol_ddalloc$b_to_d          cobol_opch_is

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
cobol_$con_end_ptr            cobol_$con_wd_off             cobol_$text_base_ptr




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     24 000006        39 000016        40 000021        41 000023        42 000025        45 000026        47 000036
     49 000041        50 000045        52 000050        54 000053        56 000056        57 000061        58 000063
     60 000064        62 000067        63 000072        64 000074        68 000107        69 000111        70 000132
     71 000134        72 000141        73 000146        75 000147        77 000154        78 000156        79 000161
     80 000162        82 000164        83 000171        84 000176        86 000201        87 000205        88 000212
     89 000223        90 000231        92 000244        93 000251        94 000256        95 000260        97 000267
     99 000271       100 000276       101 000301       102 000305       103 000312       104 000320       106 000322
    107 000326       108 000333       109 000337       110 000340       112 000345       113 000353       115 000354
    117 000365       118 000367       120 000415       121 000426       123 000430       124 000436       126 000443
    129 000450       130 000451       134 000452       136 000456       138 000463       140 000470       141 000472
    143 000501       145 000502       147 000507       149 000511       150 000514       151 000517       152 000522
    154 000527       156 000534       158 000535       159 000545       161 000546       162 000550       163 000554
    165 000561       168 000562       169 000564       171 000567       172 000572       173 000577       174 000604
    178 000610       179 000612       180 000615       183 000621       184 000624       188 000631       190 000632
    192 000633       194 000640       195 000642       198 000643       200 000644       209 000645       210 000653
    211 000656       213 000666       215 000670       216 000706       217 000713       219 000714       220 000730
    222 000733       226 000765       228 000766       229 000770       231 000774       233 001000       235 001016
    238 001040       239 001052       244 001062


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
