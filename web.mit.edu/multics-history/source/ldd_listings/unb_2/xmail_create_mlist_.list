	COMPILATION LISTING OF SEGMENT xmail_create_mlist_
	Compiled by: Multics PL/I Compiler, Release 33e, of October 6, 1992
	Compiled at: CGI                             
	Compiled on: 2000-04-18_1130.59_Tue_mdt
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 xmail_create_mlist_: proc (mlist_name, status);
       11 
       12 /* BEGIN DESCRIPTION
       13*
       14*History:          Authur unknown
       15*
       16*   83-10-17 DJ Schimke: Changed call to xmail_window_manager_$reconnect to a 
       17*   call to xmail_window_manager_$quit_handler so the quit condition handler
       18*   can special-case the reconnect condition which should NOT interrupt 
       19*   processing after the quit. phx 13227 This entrypoint also prompts when not
       20*   at a reconnect condition so that unintentionally hitting the BREAK won't
       21*   throw away any pending work. phx 13018
       22*
       23*   83-11-01  DJ Schimke: Changed the calling sequence of xmail_select_file_.
       24*
       25*   84-09-24 JG Backs: Added code before and after the call to emacs_ to test
       26*   if menus should be removed before editing (personalization option Remove
       27*   Menus While Editing).  If option is in effect, calls to new entrypoints,
       28*   $suppress_menu and $restore_menu in xmail_window_manager_ are made. Also
       29*   added test in quit handler to make sure restore menus is done if quit in
       30*   editor.
       31*
       32*END DESCRIPTION
       33**/
       34 
       35 /* PARAMETERS */
       36 
       37 	dcl     mlist_name		 char (*) parameter;
       38 	dcl     status		 fixed bin (35);
       39 
       40 /* AUTOMATIC */
       41 
       42 	dcl     code		 fixed bin (35);
       43 	dcl     restore_menu_needed	 bit (1) aligned;	/* if remove menu */
       44 	dcl     seg_dir		 char (168);
       45 	dcl     seg_prefix		 char (32) var;
       46 	dcl     seg_pname		 char (168);
       47 	dcl     unused_bit		 bit (1) aligned;
       48 	dcl     unused_bit2		 bit (1) aligned;
       49 
       50 /* INTERNAL STATIC */
       51 
       52 	dcl     ext_dir		 char (168) int static;
       53 	dcl     ext_file		 char (32) int static;
       54 	dcl     ext_pname		 char (168) int static;
       55 	dcl     ext_ptr		 ptr init (null) int static;
       56 
       57 /* ENTRIES */
       58 
       59 	dcl     com_err_$suppress_name entry () options (variable);
       60 	dcl     emacs_		 entry (ptr, char (*), char (*), ptr, fixed bin (35));
       61 	dcl     hcs_$append_branch	 entry (char (*), char (*), fixed bin (5), fixed bin (35));
       62 	dcl     hcs_$delentry_file	 entry (char (*), char (*), fixed bin (35));
       63 	dcl     hcs_$fs_get_path_name	 entry (ptr, char (*), fixed bin, char (*), fixed bin (35));
       64 	dcl     hcs_$make_ptr	 entry (ptr, char (*), char (*), ptr, fixed bin (35));
       65 	dcl     ioa_		 entry () options (variable);
       66 	dcl     xmail_redisplay_$menu	 entry ();
       67 	dcl     xmail_window_manager_$quit_handler entry () returns (bit (1) aligned);
       68 	dcl     xmail_window_manager_$reconnect entry ();
       69 	dcl     xmail_window_manager_$restore_menu entry ();
       70 	dcl     xmail_window_manager_$suppress_menu entry ();
       71 	dcl     xmail_select_file_$caller_msg entry (char (*), char (*), char (*), bit (1) aligned, bit (1) aligned,
       72 				 char (168), char (32) var, char (*), bit (1) aligned, bit (1) aligned, fixed bin (35));
       73 
       74 /* CONSTANTS */
       75 
       76 	dcl     ALLOW_NEW		 bit (1) aligned init ("1"b) static options (constant);
       77 	dcl     DONT_ALLOW_OLD	 bit (1) aligned init ("0"b) static options (constant);
       78 	dcl     EXTENSION_ENAME	 char (22) init ("xmail_emacs_ext_mlist_") int static options (constant);
       79 	dcl     MLIST_SUFFIX	 char (3) init ("mls") int static options (constant);
       80 	dcl     ME_CHAR		 char (19) init ("xmail_create_mlist_") int static options (constant);
       81 	dcl     ME_ENTRY		 entry variable init (xmail_create_mlist_);
       82 
       83 /* EXTERNAL STATIC */
       84 
       85 	dcl     iox_$user_io	 ptr ext static;
       86 	dcl     xmail_err_$int_prog_err fixed bin (35) ext static;
       87 
       88 /* BUILTINS */
       89 
       90 	dcl     (codeptr, null, rtrim) builtin;
       91 	dcl     (quit)		 condition;
       92 
       93 /* INCLUDE FILES */
       94 
  1     1 /* BEGIN INCLUDE FILE: xmail_data.incl.pl1 */
  1     2 
  1     3 
  1     4 /****^  HISTORY COMMENTS:
  1     5*  1) change(85-12-20,Blair), approve(86-03-06,MCR7358),
  1     6*     audit(86-04-21,RBarstad), install(86-05-28,MR12.0-1062):
  1     7*     Modified 03/15/85 by Joanne Backs adding confirm_print flag.
  1     8*  2) change(85-12-20,LJAdams), approve(86-03-06,MCR7358),
  1     9*     audit(86-04-21,RBarstad), install(86-05-28,MR12.0-1062):
  1    10*     Adding switch to indicate request for menu display came from general help.
  1    11*     This is so general help menu will be displayed in top screen.
  1    12*  3) change(86-01-10,Blair), approve(86-03-06,MCR7358),
  1    13*     audit(86-04-21,RBarstad), install(86-05-28,MR12.0-1062):
  1    14*     Add switch to indicate whether or not it is permissible to process mail
  1    15*     in other users' mailboxes (foreign_mailbox).
  1    16*  4) change(86-01-13,Blair), approve(86-03-06,MCR7358),
  1    17*     audit(86-04-21,RBarstad), install(86-05-28,MR12.0-1062):
  1    18*     Add bit to indicate whether or not this is a true cleanup condition.
  1    19*  5) change(86-02-06,Blair), approve(86-03-06,MCR7358),
  1    20*     audit(86-04-21,RBarstad), install(86-05-28,MR12.0-1062):
  1    21*     Rearrange to group all the bit flags together in one word with a pad.
  1    22*  6) change(86-03-05,Blair), approve(86-03-05,MCR7358),
  1    23*     audit(86-04-21,RBarstad), install(86-05-28,MR12.0-1062):
  1    24*     Change value_seg ptr to value_seg_pathname to avoid the situation where
  1    25*     you keep around a pointer to a structure which no longer exists.
  1    26*  7) change(87-01-16,Blair), approve(87-02-05,MCR7618),
  1    27*     audit(87-04-15,RBarstad), install(87-04-26,MR12.1-1025):
  1    28*     Add a field to indicate whether or not we should process interactive msgs.
  1    29*     Increment version to 4.1 so default value will get set.
  1    30*  8) change(87-02-13,Blair), approve(87-02-13,MCR7618),
  1    31*     audit(87-04-15,RBarstad), install(87-04-26,MR12.1-1025):
  1    32*     Add a field to indicate whether or not we're processing a reply so that we
  1    33*     will be able to rebuild the screens properly after a disconnect occurs.
  1    34*     Error_list #114.
  1    35*  9) change(88-07-26,Blair), approve(88-07-26,MCR7959),
  1    36*     audit(88-08-25,RBarstad), install(88-09-02,MR12.2-1098):
  1    37*     Add a bit to indicate whether or not the error segment had to be created
  1    38*     in the pdir (because we didn't have sma access to the mlsys_dir).
  1    39*                                                   END HISTORY COMMENTS */
  1    40 
  1    41 
  1    42 /* Written 5/13/81 by Paul H. Kyzivat */
  1    43 /* Modified 12/16/81 by S. Krupp to delete unused parts of structure
  1    44*   and to add n_fkeys_used */
  1    45 /* Modified 12/14/82 by Dave Schimke to make the xmail version a 10 character
  1    46*   varying string.  */
  1    47 /* Modified 09/12/83 by Dave Schimke adding interactive_msgs flag */
  1    48 /* Modified 09/14/83 by Dave Schimke adding moved_user_io */
  1    49 /* Modified 09/06/84 by Joanne Backs adding lists_as_menus flag */
  1    50 /* Modified 09/21/84 by Joanne Backs adding remove_menus flag */
  1    51 
  1    52      dcl xmail_data_ptr external static ptr init (null);
  1    53 
  1    54      dcl 1 xmail_data aligned based (xmail_data_ptr),
  1    55            2 mail_dir char (168) varying,
  1    56 	 2 first_label label,
  1    57 	 2 quit_label label,
  1    58 	 2 value_seg_pathname char (168) varying,
  1    59            2 moved_user_io ptr,
  1    60 	 2 normal_usage char (80) unal,
  1    61 	 2 function_key_info,
  1    62 	   3 function_key_data_ptr ptr,
  1    63 	   3 n_fkeys_used fixed bin,
  1    64            2 actee,
  1    65 	   3 person char(32) varying,
  1    66 	   3 project char(32) varying,
  1    67 	 2 flags aligned,
  1    68 	     3 mail_in_incoming   bit (1) unal,
  1    69                3 lists_as_menus     bit (1) unal, /* personalization */
  1    70 	     3 remove_menus       bit (1) unal, /* personalization */
  1    71 	     3 confirm_print      bit (1) unal, /* personalization */
  1    72 	     3 multics_mode bit (1) unal, /* personalization */
  1    73 	     3 interactive_msgs bit (1) unal, /* personalization */
  1    74 	     3 foreign_mailbox    bit (1) unal, /* read others' mailboxes */
  1    75                3 general_help       bit (1) unal, /* indicated requesting gen help*/
  1    76 	     3 cleanup_signalled  bit (1) unal,  /* on when true cleanup condition */
  1    77                3 msgs_as_mail       bit (1)  unal, /* on for include_msgs */
  1    78                3 reply_request      bit (1)  unal, /* on if we're doing a reply */
  1    79                3 error_seg_in_pdir  bit (1)  unal, /* on if the error_seg is in the pdir */
  1    80                3 pad                bit (24) unal;
  1    81 	
  1    82 	 
  1    83 
  1    84 dcl xmail_version char(10) var static options(constant) init("4.1");
  1    85 
  1    86 /* END INCLUDE FILE: xmail_data.incl.pl1 */
       95 
       96 
       97 /* BEGIN */
       98 
       99 	restore_menu_needed = "0"b;
      100 	status = 1;
      101 	seg_dir = "";
      102 	on condition (quit)
      103 	     begin;
      104 		if xmail_window_manager_$quit_handler ()
      105 		then do;
      106 		     if restore_menu_needed
      107 		     then do;
      108 			call xmail_window_manager_$restore_menu;
      109 			call xmail_redisplay_$menu;
      110 		     end;
      111 		     status = 1;
      112 		     if seg_dir ^= "" then call hcs_$delentry_file (seg_dir, seg_prefix || "." || MLIST_SUFFIX, (0));
      113 		     go to EXIT;
      114 		end;
      115 	     end;
      116 
      117 	if ext_ptr = null
      118 	then do;
      119 	     call hcs_$make_ptr (codeptr (ME_ENTRY), EXTENSION_ENAME, "", ext_ptr, code);
      120 	     if code ^= 0 then call mlist_err (xmail_err_$int_prog_err, "Trying to locate extension.");
      121 	     call hcs_$fs_get_path_name (ext_ptr, ext_dir, (0), ext_file, code);
      122 	     if code ^= 0 then call mlist_err (xmail_err_$int_prog_err, "Trying to get extension pathname");
      123 	     ext_pname = rtrim (ext_dir) || ">" || rtrim (EXTENSION_ENAME);
      124 	end;
      125 
      126 	call xmail_select_file_$caller_msg ("mailing list", MLIST_SUFFIX, "", DONT_ALLOW_OLD, ALLOW_NEW, seg_dir, seg_prefix, "Enter name of mailing list you wish to create ", unused_bit, unused_bit2, code);
      127 	if code ^= 0 then return;
      128 
      129 	seg_pname = rtrim (seg_dir) || ">" || rtrim (seg_prefix) || "." || MLIST_SUFFIX;
      130 
      131 	call hcs_$append_branch (seg_dir, seg_prefix || "." || MLIST_SUFFIX, RW_ACCESS_BIN, code);
      132 	if code ^= 0 then call mlist_err (xmail_err_$int_prog_err, "While creating mailing list.");
      133 
      134 	call ioa_ ("...Please wait for editor...");
      135 
      136 /* Check personalization option to remove and restore menus while editing */
      137 
      138 	if xmail_data.remove_menus
      139 	then do;
      140 	     call xmail_window_manager_$suppress_menu ();
      141 	     restore_menu_needed = "1"b;
      142 	end;
      143 
      144 	call emacs_ (iox_$user_io, seg_pname, ext_pname, null, code);
      145 
      146 	if restore_menu_needed
      147 	then do;
      148 	     call xmail_window_manager_$restore_menu ();
      149 	     call xmail_redisplay_$menu;
      150 	     restore_menu_needed = "0"b;
      151 	end;
      152 
      153 	if code = 0
      154 	then do;
      155 	     status = 0;
      156 	     mlist_name = seg_prefix;
      157 	end;
      158 
      159 	else do;
      160 	     call xmail_window_manager_$reconnect ();
      161 	     call hcs_$delentry_file (seg_dir, seg_prefix || "." || MLIST_SUFFIX, (0));
      162 
      163 	     call ioa_ ("Mailing list ""^a"" not created.", seg_prefix);
      164 	end;
      165 EXIT:
      166 
      167 	return;
      168 
      169 /* Internal procedures. */
      170 
      171 mlist_err: proc (P_code, P_str);
      172 
      173 	dcl     P_code		 fixed bin (35);
      174 	dcl     P_str		 char (*);
      175 
      176 	call com_err_$suppress_name (P_code, ME_CHAR);
      177 	go to EXIT;
      178 
      179      end mlist_err;
      180 
      181 
  2     1 /* BEGIN INCLUDE FILE ... access_mode_values.incl.pl1
  2     2*
  2     3*   Values for the "access mode" argument so often used in hardcore
  2     4*   James R. Davis 26 Jan 81  MCR 4844
  2     5*   Added constants for SM access 4/28/82 Jay Pattin
  2     6*   Added text strings 03/19/85 Chris Jones
  2     7**/
  2     8 
  2     9 
  2    10 /* format: style4,delnl,insnl,indattr,ifthen,dclind10 */
  2    11 dcl	(
  2    12 	N_ACCESS		   init ("000"b),
  2    13 	R_ACCESS		   init ("100"b),
  2    14 	E_ACCESS		   init ("010"b),
  2    15 	W_ACCESS		   init ("001"b),
  2    16 	RE_ACCESS		   init ("110"b),
  2    17 	REW_ACCESS	   init ("111"b),
  2    18 	RW_ACCESS		   init ("101"b),
  2    19 	S_ACCESS		   init ("100"b),
  2    20 	M_ACCESS		   init ("010"b),
  2    21 	A_ACCESS		   init ("001"b),
  2    22 	SA_ACCESS		   init ("101"b),
  2    23 	SM_ACCESS		   init ("110"b),
  2    24 	SMA_ACCESS	   init ("111"b)
  2    25 	)		   bit (3) internal static options (constant);
  2    26 
  2    27 /* The following arrays are meant to be accessed by doing either 1) bin (bit_value) or
  2    28*   2) divide (bin_value, 2) to come up with an index into the array. */
  2    29 
  2    30 dcl	SEG_ACCESS_MODE_NAMES  (0:7) init ("null", "W", "E", "EW", "R", "RW", "RE", "REW") char (4) internal
  2    31 			   static options (constant);
  2    32 
  2    33 dcl	DIR_ACCESS_MODE_NAMES  (0:7) init ("null", "A", "M", "MA", "S", "SA", "SM", "SMA") char (4) internal
  2    34 			   static options (constant);
  2    35 
  2    36 dcl	(
  2    37 	N_ACCESS_BIN	   init (00000b),
  2    38 	R_ACCESS_BIN	   init (01000b),
  2    39 	E_ACCESS_BIN	   init (00100b),
  2    40 	W_ACCESS_BIN	   init (00010b),
  2    41 	RW_ACCESS_BIN	   init (01010b),
  2    42 	RE_ACCESS_BIN	   init (01100b),
  2    43 	REW_ACCESS_BIN	   init (01110b),
  2    44 	S_ACCESS_BIN	   init (01000b),
  2    45 	M_ACCESS_BIN	   init (00010b),
  2    46 	A_ACCESS_BIN	   init (00001b),
  2    47 	SA_ACCESS_BIN	   init (01001b),
  2    48 	SM_ACCESS_BIN	   init (01010b),
  2    49 	SMA_ACCESS_BIN	   init (01011b)
  2    50 	)		   fixed bin (5) internal static options (constant);
  2    51 
  2    52 /* END INCLUDE FILE ... access_mode_values.incl.pl1 */
      182 
      183 
      184      end xmail_create_mlist_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    04/18/00  1130.5  xmail_create_mlist_.pl1           >udd>sm>ds>w>ml>xmail_create_mlist_.pl1
95           1    09/08/88  2110.9  xmail_data.incl.pl1               >ldd>incl>xmail_data.incl.pl1
182          2    04/11/85  1552.6  access_mode_values.incl.pl1       >ldd>incl>access_mode_values.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
ALLOW_NEW                       000017 constant        bit(1)                   initial dcl 76 set ref 126*
DONT_ALLOW_OLD                  000036 constant        bit(1)                   initial dcl 77 set ref 126*
EXTENSION_ENAME                 000007 constant        char(22)                 initial packed unaligned dcl 78 set ref 119* 123
ME_CHAR                         000001 constant        char(19)                 initial packed unaligned dcl 80 set ref 176*
ME_ENTRY                        000242 automatic       entry variable           initial dcl 81 set ref 81* 119 119
MLIST_SUFFIX                    000006 constant        char(3)                  initial packed unaligned dcl 79 set ref 112 126* 129
                                                                                  131 161
P_code                                 parameter       fixed bin(35,0)          dcl 173 set ref 171 176*
P_str                                  parameter       char                     packed unaligned dcl 174 ref 171
RW_ACCESS_BIN                   000000 constant        fixed bin(5,0)           initial dcl 2-36 set ref 131*
code                            000100 automatic       fixed bin(35,0)          dcl 42 set ref 119* 120 121* 122 126* 127 131* 132
                                                                                  144* 153
codeptr                                                builtin function         dcl 90 ref 119 119
com_err_$suppress_name          000146 constant        entry                    external dcl 59 ref 176
emacs_                          000150 constant        entry                    external dcl 60 ref 144
ext_dir                         000010 internal static char(168)                packed unaligned dcl 52 set ref 121* 123
ext_file                        000062 internal static char(32)                 packed unaligned dcl 53 set ref 121*
ext_pname                       000072 internal static char(168)                packed unaligned dcl 54 set ref 123* 144*
ext_ptr                         000144 internal static pointer                  initial dcl 55 set ref 117 119* 121*
flags                   213            based           structure                level 2 dcl 1-54
hcs_$append_branch              000152 constant        entry                    external dcl 61 ref 131
hcs_$delentry_file              000154 constant        entry                    external dcl 62 ref 112 161
hcs_$fs_get_path_name           000156 constant        entry                    external dcl 63 ref 121
hcs_$make_ptr                   000160 constant        entry                    external dcl 64 ref 119
ioa_                            000162 constant        entry                    external dcl 65 ref 134 163
iox_$user_io                    000200 external static pointer                  dcl 85 set ref 144*
mlist_name                             parameter       char                     packed unaligned dcl 37 set ref 10 156*
null                                                   builtin function         dcl 90 ref 117 144 144
quit                            000246 stack reference condition                dcl 91 ref 102
remove_menus            213(02)        based           bit(1)                   level 3 packed packed unaligned dcl 1-54 ref 138
restore_menu_needed             000101 automatic       bit(1)                   dcl 43 set ref 99* 106 141* 146 150*
rtrim                                                  builtin function         dcl 90 ref 123 123 129 129
seg_dir                         000102 automatic       char(168)                packed unaligned dcl 44 set ref 101* 112 112* 126*
                                                                                  129 131* 161*
seg_pname                       000165 automatic       char(168)                packed unaligned dcl 46 set ref 129* 144*
seg_prefix                      000154 automatic       varying char(32)         dcl 45 set ref 112 126* 129 131 156 161 163*
status                                 parameter       fixed bin(35,0)          dcl 38 set ref 10 100* 111* 155*
unused_bit                      000237 automatic       bit(1)                   dcl 47 set ref 126*
unused_bit2                     000240 automatic       bit(1)                   dcl 48 set ref 126*
xmail_data                             based           structure                level 1 dcl 1-54
xmail_data_ptr                  000204 external static pointer                  initial dcl 1-52 ref 138
xmail_err_$int_prog_err         000202 external static fixed bin(35,0)          dcl 86 set ref 120* 122* 132*
xmail_redisplay_$menu           000164 constant        entry                    external dcl 66 ref 109 149
xmail_select_file_$caller_msg   000176 constant        entry                    external dcl 71 ref 126
xmail_window_manager_$quit_handler
                                000166 constant        entry                    external dcl 67 ref 104
xmail_window_manager_$reconnect 000170 constant        entry                    external dcl 68 ref 160
xmail_window_manager_$restore_menu
                                000172 constant        entry                    external dcl 69 ref 108 148
xmail_window_manager_$suppress_menu
                                000174 constant        entry                    external dcl 70 ref 140

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
A_ACCESS                               internal static bit(3)                   initial packed unaligned dcl 2-11
A_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 2-36
DIR_ACCESS_MODE_NAMES                  internal static char(4)                  initial array packed unaligned dcl 2-33
E_ACCESS                               internal static bit(3)                   initial packed unaligned dcl 2-11
E_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 2-36
M_ACCESS                               internal static bit(3)                   initial packed unaligned dcl 2-11
M_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 2-36
N_ACCESS                               internal static bit(3)                   initial packed unaligned dcl 2-11
N_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 2-36
REW_ACCESS                             internal static bit(3)                   initial packed unaligned dcl 2-11
REW_ACCESS_BIN                         internal static fixed bin(5,0)           initial dcl 2-36
RE_ACCESS                              internal static bit(3)                   initial packed unaligned dcl 2-11
RE_ACCESS_BIN                          internal static fixed bin(5,0)           initial dcl 2-36
RW_ACCESS                              internal static bit(3)                   initial packed unaligned dcl 2-11
R_ACCESS                               internal static bit(3)                   initial packed unaligned dcl 2-11
R_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 2-36
SA_ACCESS                              internal static bit(3)                   initial packed unaligned dcl 2-11
SA_ACCESS_BIN                          internal static fixed bin(5,0)           initial dcl 2-36
SEG_ACCESS_MODE_NAMES                  internal static char(4)                  initial array packed unaligned dcl 2-30
SMA_ACCESS                             internal static bit(3)                   initial packed unaligned dcl 2-11
SMA_ACCESS_BIN                         internal static fixed bin(5,0)           initial dcl 2-36
SM_ACCESS                              internal static bit(3)                   initial packed unaligned dcl 2-11
SM_ACCESS_BIN                          internal static fixed bin(5,0)           initial dcl 2-36
S_ACCESS                               internal static bit(3)                   initial packed unaligned dcl 2-11
S_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 2-36
W_ACCESS                               internal static bit(3)                   initial packed unaligned dcl 2-11
W_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 2-36
xmail_version                          internal static varying char(10)         initial dcl 1-84

NAMES DECLARED BY EXPLICIT CONTEXT.
EXIT                            001212 constant        label                    dcl 165 set ref 113 177
mlist_err                       001213 constant        entry                    internal dcl 171 ref 120 122 132
xmail_create_mlist_             000136 constant        entry                    external dcl 10 ref 81

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1510        1716    1250        1520
Length      2156    1250       206         223     240         136

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
xmail_create_mlist_                 276 external procedure  is an external procedure.  
on unit on line 102                  88 on unit               
mlist_err                               internal procedure  shares stack frame of external procedure xmail_create_mlist_.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 ext_dir                     xmail_create_mlist_
000062 ext_file                    xmail_create_mlist_
000072 ext_pname                   xmail_create_mlist_
000144 ext_ptr                     xmail_create_mlist_

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
xmail_create_mlist_      000100 code                        xmail_create_mlist_
                         000101 restore_menu_needed         xmail_create_mlist_
                         000102 seg_dir                     xmail_create_mlist_
                         000154 seg_prefix                  xmail_create_mlist_
                         000165 seg_pname                   xmail_create_mlist_
                         000237 unused_bit                  xmail_create_mlist_
                         000240 unused_bit2                 xmail_create_mlist_
                         000242 ME_ENTRY                    xmail_create_mlist_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_char_temp     cat_realloc_chars   call_ext_out_desc   call_ext_out        return_mac          tra_ext_1
enable_op           shorten_stack       ext_entry_desc      int_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_$suppress_name        emacs_                        hcs_$append_branch            hcs_$delentry_file
hcs_$fs_get_path_name         hcs_$make_ptr                 ioa_                          xmail_redisplay_$menu
xmail_select_file_$caller_msg xmail_window_manager_$quit_handler
xmail_window_manager_$reconnect                             xmail_window_manager_$restore_menu
xmail_window_manager_$suppress_menu

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
iox_$user_io                  xmail_data_ptr                xmail_err_$int_prog_err




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     10 000132        81 000151        99 000155       100 000156       101 000161       102 000164       104 000200
    106 000211       108 000214       109 000221       111 000226       112 000232       113 000306       115 000312
    117 000313       119 000320       120 000351       121 000373       122 000425       123 000447       124 000522
    126 000523       127 000607       129 000611       131 000704       132 000760       134 001003       138 001017
    140 001025       141 001031       144 001033       146 001064       148 001066       149 001073       150 001100
    153 001101       155 001103       156 001105       157 001113       160 001114       161 001121       163 001171
    165 001212       171 001213       176 001224       177 001242


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
