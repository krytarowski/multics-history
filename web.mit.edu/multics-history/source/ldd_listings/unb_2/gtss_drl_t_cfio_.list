	COMPILATION LISTING OF SEGMENT gtss_drl_t_cfio_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/10/84  1248.8 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   *                                                         *
        4*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        5*   *                                                         *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 gtss_drl_t_cfio_: proc (mcpp, increment);
       10 
       11 /**          CRUN and DRUN support functions. (7 distinct functions)
       12*
       13*   Author:  Dave Ward          03/20/79.
       14*   Changed: Al Dupuis          12/04/79. Rewritten to use cout term codes.
       15*   Changed: Ron Barstad        83-03-31  Added function 8
       16***/
       17 
       18 dcl mcpp ptr parm;
       19 dcl increment fixed bin parm;
       20 
       21 	mcp = mcpp;
       22 	increment = 1;
       23 	scup = addr (mc.scu);
       24 	gseg = gtss_ext_$gtss_slave_area_seg (gtss_ext_$stack_level_);
       25 	drl_args_ptr = addrel (gseg, fixed (scu.ilc, 18) + 1);
       26 	if ((drl_args.function_no < 1)
       27 	| (drl_args.function_no > 8))
       28 	then do;
       29 	     err_mess = "INVALID USE OF DRL T.CFIO";
       30 	     gtss_ust.lcfst.start_term = 5;
       31 	     call common_error;
       32 	     return;
       33 	end;
       34 	if db_drl_t_cfio
       35 	then call ioa_ (
       36 	     "gtss_drl_t_cfio_: function ^i.", drl_args.function_no);
       37 	call function (drl_args.function_no);
       38 	return;
       39 
       40 function_1: proc;
       41 
       42 
       43 	     call verify_arglist (3);
       44 	     if code ^= 0 then return;
       45 	     call gtss_aft_$find ("*CFP", fn, code);
       46 	     if code ^= 0
       47 	     then do;
       48 		err_mess = "COMMAND FILE NONEXISTENT";
       49 		gtss_ust.lcfst.start_term = 1;
       50 		call common_error;
       51 		return;
       52 	     end;
       53 	     gtss_starCF_$FILE.cf.aft_indx = fn;
       54 	     gtss_starCF_$FILE.ID1.fcb_loc,
       55 		gtss_starCF_$FILE.ID2.fcb_loc
       56 		= rel (addr (gtss_starCF_$FILE.cf));
       57 	     CFP_in_progress = "1"b;
       58 	     n_words = 3;
       59 	     addr (gtss_ust.lcfio) -> words
       60 		= addrel (gseg, drl_args.L_arglist) -> words;
       61 	     if gtss_ext_$get_line ^= iox_$get_line
       62 	     then do;
       63 		if ^cout_called | ^cpos_called
       64 		then gtss_starCF_$FILE.cf.first_time = "1"b;
       65 		else;
       66 	     end;
       67 	     else do;
       68 		gtss_ext_$get_line = gtss_CFP_input_;
       69 		gtss_ext_$put_chars = gtss_CFP_output_;
       70 		if gtss_ust.lcmpt ^= "0"b   /** Set any execution timer **/
       71 		then do;
       72 		     time = fixed (gtss_ust.lcmpt, 36)
       73 			- (gtss_ust.lsprt + gtss_ust.lspts);
       74 		     time = divide (divide (time, 64, 36), 1000, 36);
       75 		     call timer_manager_$cpu_call (
       76 			time, "11"b, gtss_abs_$cpu_runout);
       77 		end;
       78 		else;
       79 		if gtss_ust.lcjid ^= "0"b
       80 		then do;
       81 		     /** If drun is executing under absentee, skip the line
       82*                             intended for Gcos login and generate banner **/
       83 		     gtss_ust.lcfio.sect_in = gtss_ust.lcfio.sect_in + 1;
       84 		     gcos_banner = gtss_abs_login_banner_ ();
       85 		     gtss_starCF_$FILE.RECORD.chars = gcos_banner;
       86 		     call gtss_write_starCFP_ (
       87 			null (), addr (gtss_starCF_$FILE.RECORD.chars),
       88 			length (gcos_banner), code);
       89 		     if code ^= 0 then return;
       90 		     else;
       91 		end;
       92 		else;
       93 	     end;
       94 	     return;
       95 	end;
       96 
       97 function_2: proc;
       98 
       99 
      100 	     cout_called = "0"b;
      101 	     call gtss_abandon_CFP_;
      102 	     gtss_ust.lswth.b7 = "0"b;
      103 	     if gtss_ust.lcjid = "0"b then return;
      104 		/** drun is executing, terminate it and read bye from absin **/
      105 	     call gtss_abort_subsystem_ (
      106 		mcp,
      107 		"gtss_drl_t_cfio_",
      108 		0);
      109 	     return;
      110 	     
      111 	end;
      112 
      113 function_3: proc;
      114 
      115 	     call verify_arglist (9);
      116 	     if code ^= 0 then return;
      117 	     if drl_args.L_arglist > 0
      118 	     then do;
      119 		if gtss_ext_$com_reg.tsdmx.dit = 0
      120 		then call init_dq;
      121 		call gtss_aft_$find ("#D", fn, code);
      122 		if code ^= 0
      123 		then do;
      124 		     call gtss_dq_$open_gen (error);
      125 		     if error
      126 		     then do;
      127 			err_mess = "Couldn't find #D";
      128 			gtss_ust.lcfst.start_term = 5;
      129 			call common_error;
      130 			return;
      131 		     end;
      132 		     call gtss_aft_$find ("#D", fn, code);
      133 		end;
      134 		n_words = 1;
      135 		if gtss_disk.attributes_ptr (fn) ^= null ()
      136 		then gtss_ext_$com_reg.tcdfr =
      137 		     addr (gtss_disk.attributes_ptr (fn) -> gtss_file_attributes.descriptor) -> words;
      138 		else do;
      139 		     err_mess = "Attributes pointer was null.";
      140 		     gtss_ust.lcfst.start_term = 2;
      141 		     call common_error;
      142 		     return;
      143 		end;
      144 		addrel (gseg, drl_args.L_arglist) -> nine_words (*) =
      145 		     addr (gtss_ext_$com_reg) -> nine_words (*);
      146 		addrel (gseg, drl_args.L_arglist) -> nine_words (9) =
      147 		     gtss_ext_$com_reg.tcdfr;
      148 	     end;
      149 	     call decode_clock_value_ (
      150 		clock_ (),
      151 		month,
      152 		day_of_month,
      153 		year,
      154 		time_of_day,
      155 		day_of_week,
      156 		time_zone);
      157 	     ascii_date.yr = mod (year, 100);
      158 	     ascii_date.mo = month;
      159 	     ascii_date.dy = day_of_month;
      160 	          /** Place bcd date in A register (yymmdd) **/
      161 	     call gtss_ascii_bcd_ (addr (ascii_date), 6, addr (mc.regs.a));
      162 		/** Place time of day in 64ths of mil in Q register **/
      163 	     milsec = divide (time_of_day, 1000, 71);
      164 	     milsec64ths = milsec * 64;
      165 	     mc.regs.q = unspec (milsec64ths);
      166 	     return;
      167 	end;
      168 
      169 function_4: proc;
      170 
      171 	     call verify_arglist (5);
      172 	     if code ^= 0 then return;
      173 	     n_words = 5;
      174 	     addr (gtss_ext_$com_reg.tsdid) -> words =
      175 		addrel (gseg, drl_args.L_arglist) -> words;
      176 	     return;
      177 	end;
      178 
      179 function_5: proc;
      180 
      181 	     if gtss_ext_$com_reg.tsdmx.dit = 0
      182 	     then call init_dq;
      183 	     if gtss_ext_$com_reg.tsdgt.ust_loc ^= 1
      184 	     then do;
      185 		call gtss_dq_$open_exc (error);
      186 		if error
      187 		then do;
      188 		     err_mess = "Couldn't open #D.";
      189 		     gtss_ust.lcfst.start_term = 5;
      190 		     call common_error;
      191 		     return;
      192 		end;
      193 		gtss_ext_$com_reg.tsdgt.ust_loc = 1;
      194 	     end;
      195 	     return;
      196 	end;
      197 
      198 function_6: proc;
      199 
      200 	     if gtss_ext_$com_reg.tsdgt.ust_loc ^= 0
      201 	     then do;
      202 		call gtss_dq_$open_gen (error);
      203 		if error
      204 		then do;
      205 		     err_mess = "Couldn't open #D.";
      206 		     gtss_ust.lcfst.start_term = 5;
      207 		     call common_error;
      208 		     return;
      209 		end;
      210 		gtss_ext_$com_reg.tsdgt.ust_loc = 0;
      211 	     end;
      212 		/** Perform the equivalent absentee function **/
      213 	     call gtss_abs_$abs_equiv;
      214 	     return;
      215 	end;
      216 
      217 function_7: proc;
      218 
      219 	     call verify_arglist (1);
      220 	     if code ^= 0 then return;
      221 	     call gtss_bcd_ascii_ (addrel (gseg, drl_args.L_arglist),
      222 		5, addr (ascii_lcjid));
      223 	     call hcs_$initiate_count (gtss_ext_$homedir, "drun_restart."
      224 		|| ascii_lcjid, "", bit_count, 1, rp, code);
      225 	     if (rp ^= null ()) & (bit_count > 0)
      226 	     then do;
      227 		my_message = 1;
      228 		process_id = rp -> event_info.sender;
      229 		call hcs_$wakeup (process_id, rp -> event_info.channel_id,
      230 		     my_message, code);
      231 		if code ^= 0
      232 		then do;
      233 		     if code ^= error_table_$invalid_channel
      234 		     then call convert_ipc_code_ (code);
      235 		     call com_err_ (code, "gtss_drl_t_cfio_",
      236 			"Sending DABT signal to ^a.", ascii_lcjid);
      237 		     err_mess = "INVALID USE OF DRL T.CFIO";
      238 		     gtss_ust.lcfst.start_term = 5;
      239 		     call common_error;
      240 		     return;
      241 		end;
      242 	     end;
      243 	     if code ^= 0
      244 	     then call com_err_ (code, "gtss_drl_t_cfio_",
      245 		"drun_restart.^a is zero length segment.", ascii_lcjid);
      246 	     if rp ^= null ()
      247 	     then call hcs_$terminate_noname (rp, code);
      248 	     return;
      249 	end;
      250 
      251 function_8: proc;
      252 /** A dummy function intended for ETS (extended Time Sharing) 
      253*    this routines simply returns the expected status
      254*    The subfunction is the upper half of the word pointed to by L_arglist
      255*    and the return status is the lower half.
      256*    For subfunction 1 and 2 set the first bit of status on (bit 18 of word)
      257*    and for subfunction 3 set status to zero. 
      258***/
      259 	  arg_list_ptr = addrel(gseg, drl_args.L_arglist);
      260 	  if (sub_function = 1) | (sub_function = 2)
      261 	       then return_status = "100000000000000000"b;
      262 	  else if sub_function = 3
      263 	       then return_status = "0"b;
      264 	  /* if not sub_function 1,2 or 3 do nothing */
      265 	  return;
      266 	  
      267 dcl arg_list_ptr ptr;
      268 dcl 1 function_8_arg_list aligned based(arg_list_ptr),
      269 	  2 sub_function fixed bin(17) unaligned,
      270 	  2 return_status bit(18) unaligned;
      271        end;
      272 
      273 verify_arglist: proc (no_of_words);
      274 
      275 	     code = 0;
      276 	     if (drl_args.L_arglist + no_of_words)
      277 	     > fixed (gtss_ust.lsize.limit, 18)
      278 	     then do;
      279 		code = 1;
      280 		call com_err_$suppress_name (0, "gtss_drl_t_cfio_",
      281 		     "drl_t_cfio arglist outside of memory at (^60)",
      282 		     fixed (scu.ilc, 18));
      283 		err_mess = "INVALID USE OF DRL T.CFIO";
      284 		gtss_ust.lcfst.start_term = 5;
      285 		call common_error;
      286 		return;
      287 	     end;
      288 dcl no_of_words fixed bin (24) parm;
      289 	end;
      290 
      291 
      292 common_error: proc;
      293 
      294 
      295 	     if err_mess ^= ""
      296 	     then call gtss_abort_subsystem_ (
      297 		mcp,
      298 		"gtss_drl_t_cfio_",
      299 		0,
      300 		err_mess);
      301 	     else call gtss_abort_subsystem_ (
      302 		mcp,
      303 		"gtss_drl_t_cfio_",
      304 		0);
      305 	     return;
      306 	end;
      307 
      308 init_dq:	proc;
      309 
      310 	     gtss_ext_$com_reg.tsdmx.dit = 180;
      311 	     gtss_ext_$com_reg.tsdjb = -1;
      312 	     call hcs_$status_minf (gtss_ext_$homedir, "drun_#d_q",
      313 		1, type, bit_count, code);
      314 	     if code = error_table_$noentry
      315 	     then do;
      316 		call gtss_dq_$create (error);
      317 		if error
      318 		then do;
      319 		     err_mess = "Couldn't create #D file.";
      320 		     gtss_ust.lcfst.start_term = 5;
      321 		     call common_error;
      322 		     return;
      323 		end;
      324 	     end;
      325 	     call gtss_dq_$open_gen (error);
      326 	     if ^error then return;
      327 	     err_mess = "Couldn't open #D file.";
      328 	     gtss_ust.lcfst.start_term = 5;
      329 	     call common_error;
      330 	     return;
      331 	end;
      332 
      333 /** Variables for gtss_drl_t_cfio_ **/
      334 
      335 dcl ascii_lcjid char (5);
      336 dcl bit_count fixed bin (24);
      337 dcl clock_ entry returns (fixed bin (71));
      338 dcl code fixed bin (35) init (0);
      339 dcl com_err_$suppress_name entry options (variable);
      340 dcl convert_ipc_code_ entry (fixed bin (35));
      341 dcl day_of_month fixed bin;
      342 dcl day_of_week fixed bin;
      343 dcl decode_clock_value_ entry (fixed bin (71), fixed bin, fixed bin, fixed bin, fixed bin (71), fixed bin, char (3) aligned);
      344 dcl drl_args_ptr ptr;
      345 dcl err_mess char (250) init ("");
      346 dcl error bit (1) init ("0"b);
      347 dcl error_table_$invalid_channel fixed bin (35) ext static;
      348 dcl error_table_$noentry fixed bin (35) ext static;
      349 dcl fn fixed bin (24);
      350 dcl function (1:8) entry init (
      351 	function_1,
      352 	function_2,
      353 	function_3,
      354 	function_4,
      355 	function_5,
      356 	function_6,
      357 	function_7,
      358 	function_8);
      359 dcl gcos_banner char (256) varying;
      360 dcl gseg ptr;
      361 dcl gtss_fail condition ext;
      362 dcl hcs_$initiate_count entry (char (*), char (*), char (*), fixed bin (24), fixed bin (2), ptr, fixed bin (35));
      363 dcl hcs_$status_minf entry (char (*), char (*), fixed bin (1), fixed bin (2), fixed bin (24), fixed bin (35));
      364 dcl hcs_$terminate_noname entry (ptr, fixed bin (35));
      365 dcl hcs_$wakeup entry (bit (36) aligned, fixed bin (71), fixed bin (71), fixed bin (35));
      366 dcl ioa_ entry options (variable);
      367 dcl iox_$get_line entry;
      368 dcl iox_$put_chars entry;
      369 dcl milsec fixed bin (71);
      370 dcl milsec64ths fixed bin (35);
      371 dcl month fixed bin;
      372 dcl my_message fixed bin (71);
      373 dcl n_words fixed bin (24);
      374 dcl nine_words (9) bit (36) based;
      375 dcl process_id bit (36) aligned;
      376 dcl rp ptr init (null());
      377 dcl status fixed bin (24);
      378 dcl time fixed bin (71);
      379 dcl time_of_day fixed bin (71);
      380 dcl timer_manager_$cpu_call entry (fixed bin (71), bit (2), entry);
      381 dcl time_zone char (3) aligned;
      382 dcl type fixed bin (2);
      383 dcl words bit (36 * n_words) based;
      384 dcl year fixed bin;
      385 
      386 dcl 1 ascii_date aligned,
      387       2 yr pic "99" unaligned,
      388       2 mo pic "99" unaligned,
      389       2 dy pic "99" unaligned;
      390 
      391 dcl 1 drl_args aligned based (drl_args_ptr),
      392       2 L_arglist fixed bin (18) unsigned unaligned,
      393       2 function_no fixed bin (18) unsigned unaligned;
      394 
      395 dcl 1 event_info based (rp),
      396       2 channel_id fixed bin (71),
      397       2 message fixed bin (71),
      398       2 sender bit (36),
      399       2 origin,
      400         3 dev_signal bit (18) unaligned,
      401         3 ring bit (18) unaligned,
      402       2 channel_index fixed bin;
      403 
  1     1 /* BEGIN INCLUDE FILE gtss_CFP_bits.incl.pl1 */
  1     2 /*
  1     3*   Created:  (Dupuis Multics)  05/08/79 1031.7 mst Tue 
  1     4**/
  1     5 
  1     6 
  1     7 dcl CFP_in_progress		bit (1) unaligned defined lflg2.b8;
  1     8 dcl dele_on		bit (1) unaligned defined lflg2.b0;
  1     9 dcl copy_on		bit (1) unaligned defined lflg2.b1;
  1    10 dcl talk_on		bit (1) unaligned defined lflg2.b4;
  1    11 dcl user_code		bit (1) unaligned defined lflg2.b14;
  1    12 dcl trap_off		bit (1) unaligned defined lswt2.b5;
  1    13 dcl break_flag		bit (1) unaligned defined lflg3.b31;
  1    14 
  1    15 
  1    16 /*   END INCLUDE FILE gtss_CFP_bits.incl.pl1 */
      404 
      405 
  2     1 /* BEGIN INCLUDE FILE gtss_starCF_.incl.pl1 */
  2     2 /*
  2     3*  Created: (Wardd Multics)  03/20/79 1816.6 mst Tue 
  2     4**/
  2     5 
  2     6 /*
  2     7*   gtss_CFP_input_ data structure to provide
  2     8*   for accessing the current command file.
  2     9*
  2    10*   Changed: Al Dupuis 05/17/79 to get rid of nested get_line, put_chars concept.
  2    11**/
  2    12 dcl	1 gtss_starCF_$FILE	aligned static ext
  2    13 ,	  3 select_sequence
  2    14 ,	    4 OP1			/* Seek operation. */
  2    15 ,	      5 Device_Command	bit(06)unal
  2    16 ,	      5 zeroes_1		fixed bin(12)unsigned unal
  2    17 ,	      5 IOC_Command		bit(05)unal
  2    18 ,	      5 zeroes_2		fixed bin(01)unsigned unal
  2    19 ,	      5 Control		fixed bin(06)unsigned unal
  2    20 ,	      5 Count		fixed bin(06)unsigned unal
  2    21 
  2    22 ,	    4 ID1
  2    23 ,	      5 fcb_loc		bit(18)unal
  2    24 ,	      5 DCW_list_loc	bit(18)unal
  2    25 
  2    26 ,	    4 OP2			/* Write opteration. */
  2    27 ,	      5 Device_Command	bit(06)unal
  2    28 ,	      5 zeroes_1		fixed bin(12)unsigned unal
  2    29 ,	      5 IOC_Command		bit(05)unal
  2    30 ,	      5 zeroes_2		fixed bin(01)unsigned unal
  2    31 ,	      5 Control		fixed bin(06)unsigned unal
  2    32 ,	      5 Count		fixed bin(06)unsigned unal
  2    33 
  2    34 ,	    4 ID2
  2    35 ,	      5 fcb_loc		bit(18)unal
  2    36 ,	      5 DCW_list_loc	bit(18)unal
  2    37 
  2    38 ,	    4 RETURN_WORD
  2    39 ,	      5 Status_loc		bit(18)unal
  2    40 ,	      5 Courtesy_Call_loc	bit(18)unal
  2    41 
  2    42 ,	  3 Seek_Word
  2    43 ,	    4 Seek_loc		bit(18)unal
  2    44 ,	    4 Seek_count		fixed bin(18)unsigned unal
  2    45 ,	  3 Seek_Address		fixed bin(35)
  2    46 ,	  3 STATUS		bit(72) unal
  2    47 
  2    48 ,	  3 DCW
  2    49 ,	    4 memory_loc		bit(18)unal
  2    50 ,	    4 zeroes_3		fixed bin(03)unsigned unal
  2    51 ,	    4 action_code		fixed bin(03)unsigned unal
  2    52 ,	    4 word_count		fixed bin(12)unsigned unal
  2    53 
  2    54 ,	  3 RECORD
  2    55 ,	    4 no_characters		fixed bin(18)unsigned unal
  2    56 ,	    4 zeroes_4		bit(18)unal
  2    57 ,	    4 chars		char(252)
  2    58 
  2    59 /* Stack to accomodate nested command file processing. */
  2    60 ,	  3 cf
  2    61 ,	    4 top			fixed bin(24)
  2    62 ,	    4 aft_indx		fixed bin(24)
  2    63 ,             4 first_time		bit (1) unaligned
  2    64 ,             4 exclude_on    	bit (1) unaligned
  2    65 ;
  2    66 
  2    67 /*   END INCLUDE FILE gtss_starCF_.incl.pl1 */
      406 
      407 
  3     1 /* BEGIN INCLUDE FILE gtss_ext_.incl.pl1 */
  3     2 /*
  3     3*  Created: (Wardd Multics)  05/20/78 1307.6 mst Sat 
  3     4*  Modified: Ward            1981     add suspended_process dcl
  3     5*  Modified: Ron Barstad  83-07-21  Fixed level number on mcfc to 3
  3     6*  Modified: Ron Barstad  83-07-25  Fixed derail range in statistics to 4js3 number
  3     7**/
  3     8 dcl  gtss_ext_$aem                   fixed bin static ext	/* >0 Print "additional" error information. */;
  3     9 dcl  gtss_ext_$bad_drl_rtrn          static ext label	/* Default for drl_rtrn. */;
  3    10 dcl  gtss_ext_$db                    (72)bit(1)unal static ext;
  3    11 dcl  gtss_ext_$deferred_catalogs_ptr ptr ext;
  3    12 dcl  gtss_ext_$dispose_of_drl        static ext label	/* quit handlers for some derails use this label to abort */;
  3    13 dcl  gtss_ext_$drl_rtrn              (4)static ext label	/* where to return at subsystem end */;
  3    14 dcl  gtss_ext_$drm_path              char(168)static ext	/* gtss_expand_pathname_stores drm_path */;
  3    15 dcl  gtss_ext_$drun_jid              char (5) static ext	/* valid only for DRUN executing under absentee */;
  3    16 dcl  gtss_ext_$event_channel         fixed bin (71) static ext	/* used for DABT signals */;
  3    17 dcl  gtss_ext_$finished              static ext label	/* Return to gtss for normal conclusion. */;
  3    18 dcl  gtss_ext_$gdb_name              char(8)ext	/* Name H* module to debug. */;
  3    19 dcl  gtss_ext_$get_line              entry(ptr,ptr,fixed bin(21),fixed bin(21),fixed bin(35))variable ext /* Build mode input procedure. */;
  3    20 dcl  gtss_ext_$gtss_slave_area_seg   (4) ext static ptr	/* pointer to gtss slave area segment */;
  3    21 dcl  gtss_ext_$hcs_work_area_ptr     ptr ext static		/* Temp seg for acl lists. */;
  3    22 dcl  gtss_ext_$homedir               char (64) static ext /* user's home dir */;
  3    23 dcl  gtss_ext_$last_k_was_out        bit (1)aligned ext static	/* "1"b => last tty output was output. */;
  3    24 dcl  gtss_ext_$pdir                  char (168) varying ext static	/* pathname of process directory */;
  3    25 dcl  gtss_ext_$popup_from_pi         static ext label	/* transfer to this label after pi simulates popup primitive */;
  3    26 dcl  gtss_ext_$process_type          fixed bin (17) static ext;
  3    27 dcl  gtss_ext_$put_chars             entry(ptr,ptr,fixed bin(24),fixed bin(35)) variable ext	/* Terminal output procedure. */;
  3    28 dcl  gtss_ext_$restart_from_pi       static ext label	/* transfer to this label after pi restores machine conditions */;
  3    29 dcl  gtss_ext_$restart_seg_ptr       ptr static ext	/* points to DRUN restart file when exec under absentee */;
  3    30 dcl  gtss_ext_$sig_ptr               ext static ptr	/* saved ptr to signal_ */;
  3    31 dcl  gtss_ext_$stack_level_          fixed bin ext static;
  3    32 dcl  gtss_ext_$suspended_process     bit(1) ext static;
  3    33 dcl  gtss_ext_$SYstarstar_file_no    fixed bin (24) static ext;
  3    34 dcl  gtss_ext_$user_id               char (26)var ext;
  3    35 dcl  gtss_ext_$work_area_ptr         ptr ext;
  3    36 
  3    37 dcl  1 gtss_ext_$CFP_bits aligned static external
  3    38      , 3 no_input_yet bit (1) unaligned         /* used in gtss_CFP_input_, gtss_read_starCFP_ */
  3    39      , 3 rtn_bits bit (4) unaligned             /* used in gtss_CFP_input_, gtss_CFP_output_ */
  3    40      , 3 cpos_called bit (1) unaligned          /* used in gtss_CFP_input_, gtss_drl_t_cfio_, gtss_abandon_CFP_ */
  3    41      , 3 cout_called bit (1) unaligned          /* used in gtss_read_starCFP_, gtss_abandon_CFP_ */
  3    42      , 3 build_mode bit (1) unaligned	        /* used in gtss_build_, gtss_dsd_process_ */
  3    43      ;
  3    44 
  3    45 dcl 1 gtss_ext_$com_reg aligned static ext,
  3    46        3 tsdmx,
  3    47          4 dst fixed bin (18) unsigned unaligned,
  3    48          4 dit fixed bin (18) unsigned unaligned,
  3    49        3 tsdpt fixed bin (36) unsigned unaligned,
  3    50        3 tsddt fixed bin (36) unsigned unaligned,
  3    51        3 tsdid bit (72) unaligned,
  3    52        3 tsdsd bit (36) unaligned,
  3    53        3 tsdst fixed bin (36) unsigned unaligned,
  3    54        3 tsdjb fixed bin (35) unaligned,
  3    55        3 tsdgt,
  3    56          4 ust_loc fixed bin (18) unsigned unaligned,
  3    57          4 gating_ctl fixed bin (18) unsigned unaligned,
  3    58        3 tcdfr bit (36) unaligned;
  3    59 
  3    60 dcl 1 gtss_ext_$flags aligned static ext
  3    61      , 3 dispose_of_drl_on_pi	bit (01) unal	/* 1 => drl that should be aborted after quit-pi sequence */
  3    62      , 3 drl_in_progress	bit (01) unal	/* 1 => drl handler executing; 0 => gcos code executing */
  3    63      , 3 popup_from_pi	bit (01) unal	/* 1 => derail processor will simulate Gcos break instead of returning */
  3    64      , 3 unfinished_drl	bit (01) unal	/* 1 => subsystem is handling breaks and quit was raised during a drl */
  3    65      , 3 ss_time_limit_set	bit (01) unal	/* 1 => exec time limit set for subsystem */
  3    66      , 3 timer_ranout	bit (01) unal	/* 1 => user is executing timer runout code */
  3    67      , 3 gtss_com_err_sw      bit (01) unal       /* 1 => stop com_err_ string from going to terminal */   
  3    68      , 3 available		bit (65) unal
  3    69      ;
  3    70 
  3    71 
  3    72 dcl 1 gtss_ext_$statistics aligned static ext,		/* Derail usage statistics */
  3    73       3 total_time (-10:71)fixed bin (71),
  3    74       3 count (-10:71)fixed bin (17);
  3    75 
  3    76 /* 	Declaration of Available File Table
  3    77*   */
  3    78 dcl 1 gtss_ext_$aft aligned ext,			/* aft structure */
  3    79 
  3    80       3 start_list (0:102) fixed bin (24),		/* >0 => 1st aft_entry row to start of next entry chain. */
  3    81 
  3    82       3 aft_entry (20),
  3    83         4 altname char (8),				/* altname name for attaching this file */
  3    84         4 next_entry fixed bin (24),			/* Next aft_entry in hash chain. */
  3    85         4 previous_add fixed bin (24),			/* Previously added entry. */
  3    86         4 next_add fixed bin (24),			/* Entry added after this one. */
  3    87         4 used bit (1) unal,				/* "1"b => aft_entry contains AFT value. */
  3    88         4 forced bit(1) unal,				/* "1"b => gtss_verify_access_ forced access on this file. */
  3    89 
  3    90       3 free_space fixed bin (24),			/* Index of start of free space list for aft entries. */
  3    91       3 first_added fixed bin (24),			/* >0  => start of chain in add order. */
  3    92       3 last_added fixed bin (24)			/* >0 => end of chain in added order. */;
  3    93 
  3    94 dcl  gtss_ext_$ppt                   ptr ext /*  switch name for tapein drl */;
  3    95 /**	Data structure to provide access to installed
  3    96*   subsystems fast library load.
  3    97*   **/
  3    98 dcl 1 gtss_ext_$fast_lib aligned ext
  3    99      , 3 fast_lib_fcb ptr				/* Pointer to msf fcb.	*/
  3   100      , 3 fast_lib_ncp fixed bin (24)			/* Number of components. */
  3   101      , 3 comp_ptr (0:9)ptr				/* Pointer to component. */
  3   102      , 3 comp_wds (0:9)fixed bin (24)			/* Component length (words). */
  3   103      ;
  3   104 
  3   105 /* Pointers to segments to regulate multipler
  3   106*   callers to files. Same segments are used to regulate
  3   107*   all simulator callers.
  3   108**/
  3   109 dcl 1 gtss_ext_$mcfc	aligned ext,
  3   110       3 multics_lock_id	bit(36),
  3   111       3 wait_time		fixed bin,
  3   112       3 files_ptr		ptr,
  3   113       3 names_ptr		ptr,
  3   114       3 callers_ptr		(0:3)ptr
  3   115 ;
  3   116 
  3   117 /*   END INCLUDE FILE gtss_ext_.incl.pl1 */
      408 
      409 
  4     1 /*  */
  4     2 /* BEGIN INCLUDE FILE  mc.incl.pl1   Created Dec 72 for 6180 - WSS. */
  4     3 /* Modified 06/07/76 by Greenberg for mc.resignal */
  4     4 /* Modified 07/07/76 by Morris for fault register data */
  4     5 /* Modified 08/28/80 by J. A. Bush for the DPS8/70M CVPU */
  4     6 /* Modified '82 to make values constant */
  4     7 
  4     8 /* words 0-15 pointer registers */
  4     9 
  4    10 dcl  mcp ptr;
  4    11 
  4    12 dcl 1 mc based (mcp) aligned,
  4    13     2 prs (0:7) ptr,				/* POINTER  REGISTERS */
  4    14    (2 regs,					/* registers */
  4    15       3 x (0:7) bit (18),				/* index registers */
  4    16       3 a bit (36),					/* accumulator */
  4    17       3 q bit (36),					/* q-register */
  4    18       3 e bit (8),					/* exponent */
  4    19       3 pad1 bit (28),
  4    20       3 t bit (27),					/* timer register */
  4    21       3 pad2 bit (6),
  4    22       3 ralr bit (3),				/* ring alarm register */
  4    23 
  4    24     2 scu (0:7) bit (36),
  4    25 
  4    26     2 mask bit (72),				/* mem controller mask at time of fault */
  4    27     2 ips_temp bit (36),				/* Temporary storage for IPS info */
  4    28     2 errcode fixed bin (35),				/* fault handler's error code */
  4    29     2 fim_temp,
  4    30       3 unique_index bit (18) unal,			/* unique index for restarting faults */
  4    31       3 resignal bit (1) unal,			/* recompute signal name with fcode below */
  4    32       3 fcode bit (17) unal,				/* fault code used as index to FIM table and SCT */
  4    33     2 fault_reg bit (36),				/* fault register */
  4    34     2 pad2 bit (1),
  4    35     2 cpu_type fixed bin (2) unsigned,			/* L68 = 0, DPS8/70M = 1 */
  4    36     2 ext_fault_reg bit (15),				/* extended fault reg for DPS8/70M CPU */
  4    37     2 fault_time bit (54),				/* time of fault */
  4    38 
  4    39     2 eis_info (0:7) bit (36)) unaligned;
  4    40 
  4    41 
  4    42 dcl (apx fixed bin init (0),
  4    43      abx fixed bin init (1),
  4    44      bpx fixed bin init (2),
  4    45      bbx fixed bin init (3),
  4    46      lpx fixed bin init (4),
  4    47      lbx fixed bin init (5),
  4    48      spx fixed bin init (6),
  4    49      sbx fixed bin init (7)) internal static options (constant);
  4    50 
  4    51 
  4    52 
  4    53 
  4    54 dcl  scup ptr;
  4    55 
  4    56 dcl 1 scu based (scup) aligned,			/* SCU DATA */
  4    57 
  4    58 
  4    59 /*	WORD (0)		*/
  4    60 
  4    61    (2 ppr,					/* PROCEDURE POINTER REGISTER */
  4    62       3 prr bit (3),				/* procedure ring register */
  4    63       3 psr bit (15),				/* procedure segment register */
  4    64       3 p bit (1),					/* procedure privileged bit */
  4    65 
  4    66     2 apu,					/* APPENDING UNIT STATUS */
  4    67       3 xsf bit (1),				/* ext seg flag - IT modification */
  4    68       3 sdwm bit (1),				/* match in SDW Ass. Mem. */
  4    69       3 sd_on bit (1),				/* SDW Ass. Mem.  ON */
  4    70       3 ptwm bit (1),				/* match in PTW Ass. Mem. */
  4    71       3 pt_on bit (1),				/* PTW Ass. Mem.  ON */
  4    72       3 pi_ap bit (1),				/* Instr Fetch or Append cycle */
  4    73       3 dsptw bit (1),				/* Fetch of DSPTW */
  4    74       3 sdwnp bit (1),				/* Fetch of SDW non paged */
  4    75       3 sdwp bit (1),				/* Fetch of SDW paged */
  4    76       3 ptw bit (1),				/* Fetch of PTW */
  4    77       3 ptw2 bit (1),				/* Fetch of pre-paged PTW */
  4    78       3 fap bit (1),				/* Fetch of final address paged */
  4    79       3 fanp bit (1),				/* Fetch of final address non-paged */
  4    80       3 fabs bit (1),				/* Fetch of final address absolute */
  4    81 
  4    82     2 fault_cntr bit (3),				/* number of retrys of EIS instructions */
  4    83 
  4    84 
  4    85 /*	WORD (1)		*/
  4    86 
  4    87     2 fd,						/* FAULT  DATA */
  4    88       3 iro bit (1),				/* illegal ring order */
  4    89       3 oeb bit (1),				/* out of execute bracket */
  4    90       3 e_off bit (1),				/* no execute */
  4    91       3 orb bit (1),				/* out of read bracket */
  4    92       3 r_off bit (1),				/* no read */
  4    93       3 owb bit (1),				/* out of write bracket */
  4    94       3 w_off bit (1),				/* no write */
  4    95       3 no_ga bit (1),				/* not a gate */
  4    96       3 ocb bit (1),				/* out of call bracket */
  4    97       3 ocall bit (1),				/* outward call */
  4    98       3 boc bit (1),				/* bad outward call */
  4    99       3 inret bit (1),				/* inward return */
  4   100       3 crt bit (1),				/* cross ring transfer */
  4   101       3 ralr bit (1),				/* ring alarm register */
  4   102       3 am_er bit (1),				/* associative memory fault */
  4   103       3 oosb bit (1),				/* out of segment bounds */
  4   104       3 paru bit (1),				/* processor parity upper */
  4   105       3 parl bit (1),				/* processor parity lower */
  4   106       3 onc_1 bit (1),				/* op not complete type 1 */
  4   107       3 onc_2 bit (1),				/* op not complete type 2 */
  4   108 
  4   109     2 port_stat,					/* PORT  STATUS */
  4   110       3 ial bit (4),				/* illegal action lines */
  4   111       3 iac bit (3),				/* illegal action channel */
  4   112       3 con_chan bit (3),				/* connect channel */
  4   113 
  4   114     2 fi_num bit (5),				/* (fault/interrupt)  number */
  4   115     2 fi_flag bit (1),				/*  1 => fault,  0 => interrupt  */
  4   116 
  4   117 
  4   118 /*	WORD (2)		*/
  4   119 
  4   120     2 tpr,					/* TEMPORARY POINTER REGISTER */
  4   121       3 trr bit (3),				/* temporary ring register */
  4   122       3 tsr bit (15),				/* temporary segment register */
  4   123 
  4   124     2 pad2 bit (9),
  4   125 
  4   126     2 cpu_no bit (3),				/* CPU number */
  4   127 
  4   128     2 delta bit (6),				/* tally modification DELTA */
  4   129 
  4   130 
  4   131 /*	WORD (3)		*/
  4   132 
  4   133     2 word3 bit (18),
  4   134 
  4   135     2 tsr_stat,					/* TSR STATUS for 1,2,&3 word instructions */
  4   136       3 tsna,					/* Word 1 status */
  4   137         4 prn bit (3),				/* Word 1  PR  number */
  4   138         4 prv bit (1),				/* Word 1  PR  valid bit */
  4   139       3 tsnb,					/* Word 2  status */
  4   140         4 prn bit (3),				/* Word 2  PR  number */
  4   141         4 prv bit (1),				/* Word 2  PR  valid bit */
  4   142       3 tsnc,					/* Word 3  status */
  4   143         4 prn bit (3),				/* Word 3  PR  number */
  4   144         4 prv bit (1),				/* Word 3  PR  valid bit */
  4   145 
  4   146     2 tpr_tbr bit (6),				/* TPR.TBR  field */
  4   147 
  4   148 
  4   149 /* 	WORD (4)		*/
  4   150 
  4   151     2 ilc bit (18),					/* INSTRUCTION  COUNTER */
  4   152 
  4   153     2 ir,						/* INDICATOR  REGISTERS */
  4   154       3 zero bit (1),				/* zero indicator */
  4   155       3 neg bit (1),				/* negative indicator */
  4   156       3 carry bit (1),				/* carryry indicator */
  4   157       3 ovfl bit (1),				/* overflow indicator */
  4   158       3 eovf bit (1),				/* eponent overflow */
  4   159       3 eufl bit (1),				/* exponent underflow */
  4   160       3 oflm bit (1),				/* overflow mask */
  4   161       3 tro bit (1),				/* tally runout */
  4   162       3 par bit (1),				/* parity error */
  4   163       3 parm bit (1),				/* parity mask */
  4   164       3 bm bit (1),					/* ^bar mode */
  4   165       3 tru bit (1),				/* truncation mode */
  4   166       3 mif bit (1),				/* multi-word instruction mode */
  4   167       3 abs bit (1),				/* absolute mode */
  4   168       3 hex bit (1),				/* hexadecimal exponent mode */
  4   169       3 pad bit (3),
  4   170 
  4   171 
  4   172 /*	WORD (5)		*/
  4   173 
  4   174     2 ca bit (18),					/* COMPUTED  ADDRESS */
  4   175 
  4   176     2 cu,						/* CONTROL UNIT STATUS */
  4   177       3 rf bit (1),					/* on first cycle of repeat instr */
  4   178       3 rpt bit (1),				/* repeat instruction */
  4   179       3 rd bit (1),					/* repeat double instruction */
  4   180       3 rl bit (1),					/* repeat link instruciton */
  4   181       3 pot bit (1),				/* IT  modification */
  4   182       3 pon bit (1),				/* return type instruction */
  4   183       3 xde bit (1),				/* XDE from Even location */
  4   184       3 xdo bit (1),				/* XDE from Odd  location */
  4   185       3 poa bit (1),				/* operation preparation */
  4   186       3 rfi bit (1),				/* tells CPU to refetch instruction */
  4   187       3 its bit (1),				/* ITS modification */
  4   188       3 if bit (1),					/* fault occured during instruction fetch */
  4   189 
  4   190     2 cpu_tag bit (6)) unaligned,			/* computed tag field */
  4   191 
  4   192 
  4   193 /*	WORDS (6,7)	*/
  4   194 
  4   195     2 even_inst bit (36),				/* even instruction of faulting pair */
  4   196 
  4   197     2 odd_inst bit (36);				/* odd  instruction of faulting pair */
  4   198 
  4   199 
  4   200 
  4   201 
  4   202 
  4   203 
  4   204 /*	ALTERNATE   SCU  DECLARATION		*/
  4   205 
  4   206 
  4   207 dcl 1 scux based (scup) aligned,
  4   208 
  4   209    (2 pad0 bit (36),
  4   210 
  4   211     2 fd,						/* GROUP II  FAULT DATA */
  4   212       3 isn bit (1),				/* illegal segment number */
  4   213       3 ioc bit (1),				/* illegal op  code  */
  4   214       3 ia_am bit (1),				/* illegal address - modifier */
  4   215       3 isp bit (1),				/* illegal slave  procedure */
  4   216       3 ipr bit (1),				/* illegal procedure */
  4   217       3 nea bit (1),				/* non existent address */
  4   218       3 oobb bit (1),				/* out of bounds */
  4   219       3 pad bit (29),
  4   220 
  4   221     2 pad2 bit (36),
  4   222 
  4   223     2 pad3a bit (18),
  4   224 
  4   225     2 tsr_stat (0:2),				/* TSR  STATUS  as an  ARRAY */
  4   226       3 prn bit (3),				/* PR  number */
  4   227       3 prv bit (1),				/* PR  valid bit */
  4   228 
  4   229     2 pad3b bit (6)) unaligned,
  4   230 
  4   231     2 pad45 (0:1) bit (36),
  4   232 
  4   233     2 instr (0:1) bit (36);				/* Instruction ARRAY */
  4   234 
  4   235 
  4   236 
  4   237 /*  END INCLUDE FILE   mc.incl.pl1 */
      410 
      411 
  5     1 /* BEGIN INCLUDE FILE gtss_ust_ext_.incl.pl1 */
  5     2 /* UST: User Status Table 
  5     3*   definitions based on 
  5     4*   System Tables, Order number DD14-01E, January 1981
  5     5*   Section 15, Time Sharing System
  5     6*
  5     7*   Authors: Robert J. Grimes	Created
  5     8*   -	  Albert N. Kepner	  1978
  5     9*   -	  Robert M. May
  5    10*   -	  David B. Ward
  5    11*   Change:  Dave Ward	02/23/79 Level 4 numbering.
  5    12*   Change:  Ron Barstad  83-07-12 Repaired damaged formating and word offset comments
  5    13*                                  Brought up to 4JS3 functionality
  5    14**/
  5    15 /* octal word offsets of entries */
  5    16 dcl 1 gtss_ust_ext_$ust aligned ext,
  5    17       3 gtss_ust,
  5    18 /* 0-1  */	4 lid		bit (72),
  5    19 /* 2    */	4 lstp		bit (36),
  5    20 /* 3    */	4 ltin		bit (36),
  5    21 /* 4    */	4 lstio,
  5    22 			5 no_of_chars_by_8  fixed bin (18) uns unal,
  5    23 			5 no_of_disk_io     fixed bin (18) uns unal,
  5    24 /* 5    */	4 lsnub		bit (36),
  5    25 /* 6-7  */	4 lchg		bit (72),
  5    26 /* 10   */	4 lbuf,
  5    27 			5 address		bit (18)unaligned,
  5    28 			5 tally		bit (1)unaligned,
  5    29 			5 terminal_type	bit (5)unaligned,
  5    30 			5 station_id	bit (12)unaligned,
  5    31 /* 11-12 */	4 liost (0:1)	bit (36),
  5    32 /* 13   */	4 lcc		bit (36),
  5    33 /* 14   */	4 lback,
  5    34 			5 fill1		bit (18) unaligned,
  5    35 			5 gwake		fixed bin (17) unaligned,
  5    36 /* 15   */	4 lflag,
  5    37 			5 mp_list		bit (18) unaligned,
  5    38 			5 flags unaligned,
  5    39 				6 b18		bit (1) unaligned,
  5    40 				6 b19		bit (1) unaligned,
  5    41 				6 b20		bit (1) unaligned,
  5    42 				6 b21		bit (1) unaligned,
  5    43 				6 b22		bit (1) unaligned,
  5    44 				6 b23		bit (1) unaligned,
  5    45 				6 b24		bit (1) unaligned,
  5    46 				6 b25		bit (1) unaligned,
  5    47 				6 b26		bit (1) unaligned,
  5    48 				6 b27		bit (1) unaligned,
  5    49 				6 b28		bit (1) unaligned,
  5    50 				6 b29		bit (1) unaligned,
  5    51 				6 b30		bit (1) unaligned,
  5    52 				6 b31		bit (1) unaligned,
  5    53 				6 b32		bit (1) unaligned,
  5    54 				6 b33		bit (1) unaligned,
  5    55 				6 b34		bit (1) unaligned,
  5    56 				6 b35		bit (1) unaligned,
  5    57 /* 16   */	4 lkdss		bit (36),
  5    58 /* 17   */	4 lfile,
  5    59 			5 program_stack	fixed bin (17) unal,
  5    60 			5 file_list_ptr	bit (18) unal,
  5    61 /* 20   */	4 lttys		bit (36),
  5    62 /* 21   */	4 lswth,
  5    63 			5 b0		bit (1) unaligned,
  5    64 			5 b1		bit (1) unaligned,
  5    65 			5 b2		bit (1) unaligned,
  5    66 			5 b3		bit (1) unaligned,
  5    67 			5 b4		bit (1) unaligned,
  5    68 			5 b5		bit (1) unaligned,
  5    69 			5 b6		bit (1) unaligned,
  5    70 			5 b7		bit (1) unaligned,
  5    71 			5 b8		bit (1) unaligned,
  5    72 			5 b9		bit (1) unaligned,
  5    73 			5 b10		bit (1) unaligned,
  5    74 			5 b11		bit (1) unaligned,
  5    75 			5 b12		bit (1) unaligned,
  5    76 			5 b13		bit (1) unaligned,
  5    77 			5 b14		bit (1) unaligned,
  5    78 			5 b15		bit (1) unaligned,
  5    79 			5 b16		bit (1) unaligned,
  5    80 			5 b17		bit (1) unaligned,
  5    81 			5 b18		bit (1) unaligned,
  5    82 			5 b19		bit (1) unaligned,
  5    83 			5 b20		bit (1) unaligned,
  5    84 			5 b21		bit (1) unaligned,
  5    85 			5 b22		bit (1) unaligned,
  5    86 			5 b23		bit (1) unaligned,
  5    87 			5 b24		bit (1) unaligned,
  5    88 			5 b25		bit (1) unaligned,
  5    89 			5 b26		bit (1) unaligned,
  5    90 			5 b27		bit (1) unaligned,
  5    91 			5 b28		bit (1) unaligned,
  5    92 			5 b29		bit (1) unaligned,
  5    93 			5 b30		bit (1) unaligned,
  5    94 			5 b31		bit (1) unaligned,
  5    95 			5 b32		bit (1) unaligned,
  5    96 			5 b33		bit (1) unaligned,
  5    97 			5 b34		bit (1) unaligned,
  5    98 			5 b35		bit (1) unaligned,
  5    99 /* 22   */	4 lsize,
  5   100 			5 bar		fixed bin (17) unaligned,
  5   101 			5 limit		bit (18) unaligned,
  5   102 /* 23... */	4 lswap,
  5   103 			5 fill		bit (18) unal,
  5   104 			5 size		bit (18) unal,
  5   105 /* ...24 */	4 transfer_cell	bit (36) unal,
  5   106 /* 25   */	4 lerrm		bit (36),
  5   107 /* 26-37 */	4 lcfil (0:9)	bit (36),
  5   108 /* 40   */	4 lsybc,
  5   109 			5 b0_17		fixed bin (17) unaligned,
  5   110 			5 b18_35		fixed bin (17) unaligned,
  5   111 /* 41-42 */	4 lstem (0:1)	bit (36),
  5   112 /* 43    */	4 lcals,
  5   113 			5 b0_17		fixed bin (17) unaligned,
  5   114 			5 b18_35		bit (18) unaligned,
  5   115 /* 44-51 */	4 subsystems (3),
  5   116 			5 content_lswap,
  5   117 				6 fill		bit (18) unal,
  5   118 				6 size		bit (18) unal,
  5   119 			5 tally_address	fixed bin (17) unaligned,
  5   120 			5 ss_flags	bit (18) unaligned,
  5   121 /* 52   */	4 ltalc,
  5   122 			5 tod		fixed bin (17) unaligned,
  5   123 			5 startup		fixed bin (17) unaligned,
  5   124 /* 53   */	4 lspts		fixed bin (35),
  5   125 /* 54   */	4 lflg2,
  5   126 			5 b0		bit (1) unaligned,
  5   127 			5 b1		bit (1) unaligned,
  5   128 			5 b2		bit (1) unaligned,
  5   129 			5 b3		bit (1) unaligned,
  5   130 			5 b4		bit (1) unaligned,
  5   131 			5 b5		bit (1) unaligned,
  5   132 			5 b6		bit (1) unaligned,
  5   133 			5 b7		bit (1) unaligned,
  5   134 			5 b8		bit (1) unaligned,
  5   135 			5 b9		bit (1) unaligned,
  5   136 			5 b10		bit (1) unaligned,
  5   137 			5 b11		bit (1) unaligned,
  5   138 			5 b12		bit (1) unaligned,
  5   139 			5 b13		bit (1) unaligned,
  5   140 			5 b14		bit (1) unaligned,
  5   141 			5 b15		bit (1) unaligned,
  5   142 			5 b16		bit (1) unaligned,
  5   143 			5 b17		bit (1) unaligned,
  5   144 			5 b18		bit (1) unaligned,
  5   145 			5 b19		bit (1) unaligned,
  5   146 			5 b20		bit (1) unaligned,
  5   147 			5 b21		bit (1) unaligned,
  5   148 			5 b22		bit (1) unaligned,
  5   149 			5 b23		bit (1) unaligned,
  5   150 			5 b24		bit (1) unaligned,
  5   151 			5 b25		bit (1) unaligned,
  5   152 			5 b26		bit (1) unaligned,
  5   153 			5 b27		bit (1) unaligned,
  5   154 			5 b28		bit (1) unaligned,
  5   155 			5 b29		bit (1) unaligned,
  5   156 			5 b30		bit (1) unaligned,
  5   157 			5 b31		bit (1) unaligned,
  5   158 			5 b32		bit (1) unaligned,
  5   159 			5 b33		bit (1) unaligned,
  5   160 			5 b34		bit (1) unaligned,
  5   161 			5 b35		bit (1) unaligned,
  5   162 /* 55-60 */	4 lsftm (0:3)	bit (36),
  5   163 /* 61    */	4 lsprt		fixed bin (35),
  5   164 /* 62    */	4 ltrm		bit (36),
  5   165 /* 63    */	4 linno		fixed bin (35),
  5   166 /* 64    */	4 lincr		fixed bin (35),
  5   167 /* 65    */	4 ltdes		bit (36),
  5   168 /* 66    */	4 lbptr		bit (36),
  5   169 /* 67    */	4 lpptr,
  5   170 			5 last_file_pat_ptr	bin (18) uns unal,
  5   171 			5 lpptr_reserved	bin (18) uns unal,
  5   172 /* 70    */	4 lsclp		bit (36),
  5   173 /* 71    */	4 limit		fixed bin (35),
  5   174 /* 72    */	4 lacpt,
  5   175 			5 jout_pat_offset	bit (18) unal,
  5   176 			5 permissions unal,
  5   177 				6 lodx		bit (1) unal,
  5   178 				6 cardin		bit (1) unal,
  5   179 				6 talk		bit (1) unal,
  5   180 				6 lods		bit (1) unal,
  5   181 			5 cardin_urgency	bit (14) unal,
  5   182 /* 73    */	4 ldrl,
  5   183 			5 ilc		bit (18) unaligned,
  5   184 			5 code		fixed bin (17) unaligned,
  5   185 /* 74    */	4 ljsnb		bit (36),
  5   186 /* 75    */	4 ltm0		bit (36),
  5   187 /* 76    */	4 ltm1		bit (36),
  5   188 /* 77    */	4 ltm2		bit (36),
  5   189 /* 100   */	4 ltm3		bit (36),
  5   190 /* 101   */	4 ltm4		bit (36),
  5   191 /* 102   */	4 ltm5		bit (36),
  5   192 /* 103   */	4 ltmwt		bit (36),
  5   193 /* 104   */	4 ltmrs		bit (36),
  5   194 /* 105   */	4 ltc0		bit (36),
  5   195 /* 106   */	4 ltc1		bit (36),
  5   196 /* 107   */	4 ltc2		bit (36),
  5   197 /* 110   */	4 lct3		bit (36),
  5   198 /* 111   */	4 ltc4		bit (36),
  5   199 /* 112   */	4 ltc5		bit (36),
  5   200 /* 113   */	4 ltcw		bit (36),
  5   201 /* 114   */	4 lkst		bit (36),
  5   202 /* 115   */	4 lkst2		bit (36),
  5   203 /* 116   */	4 lkcc		bit (36),
  5   204 /* 117   */	4 lkms		bit (36),
  5   205 /* 120-121 */	4 lksdc (0:1)	bit (36),
  5   206 /* 122   */	4 lkntp		bit (36),
  5   207 /* 123   */	4 lkrdc		bit (36),
  5   208 /* 124   */	4 lpqf		bit (36),
  5   209 /* 125   */	4 lpqb		bit (36),
  5   210 /* 126   */	4 lustl		bit (36),
  5   211 /* 127   */	4 ltemp		bit (36),
  5   212 /* 130   */	4 lrtll,
  5   213 			5 word_length	fixed bin unaligned,
  5   214 			5 char_length	fixed bin unaligned,
  5   215 /* 131   */	4 ltim		bit (36),
  5   216 /* 132   */	4 lcfio,
  5   217 			5 sect_out	fixed bin(18)unsigned unal,
  5   218 			5 sect_in		fixed bin(18)unsigned unal,
  5   219 /* 133   */	4 lcfst,
  5   220 			5 initial_sect_out	fixed bin(18)unsigned unal,
  5   221 			5 start_term	fixed bin(18)unsigned unal,
  5   222 /* 134   */	4 lcmpt		bit (36),
  5   223 /* 135   */	4 lcjid		bit (36),
  5   224 /* 136-137 */	4 lrcal (0:1)	bit (36),
  5   225 /* 140   */	4 lrdta		bit (36),
  5   226 /* 141   */	4 lrrsk		bit (36),
  5   227 /* 142   */	4 lrskd		bit (36),
  5   228 /* 143   */	4 lrcc		bit (36),
  5   229 /* 144-145 */	4 lrsts (0:1)	bit (36),
  5   230 /* 146   */	4 lrtm		bit (36),
  5   231 /* 147   */	4 lswt2,
  5   232 			5 b0		bit (1) unaligned,
  5   233 			5 b1		bit (1) unaligned,
  5   234 			5 b2		bit (1) unaligned,
  5   235 			5 b3		bit (1) unaligned,
  5   236 			5 b4		bit (1) unaligned,
  5   237 			5 b5		bit (1) unaligned,
  5   238 			5 b6		bit (1) unaligned,
  5   239 			5 b7		bit (1) unaligned,
  5   240 			5 b8		bit (1) unaligned,
  5   241 			5 b9		bit (1) unaligned,
  5   242 			5 b10		bit (1) unaligned,
  5   243 			5 b11		bit (1) unaligned,
  5   244 			5 b12		bit (1) unaligned,
  5   245 			5 b13		bit (1) unaligned,
  5   246 			5 b14		bit (1) unaligned,
  5   247 			5 b15		bit (1) unaligned,
  5   248 			5 b16		bit (1) unaligned,
  5   249 			5 b17		bit (1) unaligned,
  5   250 			5 b18		bit (1) unaligned,
  5   251 			5 b19		bit (1) unaligned,
  5   252 			5 b20		bit (1) unaligned,
  5   253 			5 b21		bit (1) unaligned,
  5   254 			5 b22		bit (1) unaligned,
  5   255 			5 b23		bit (1) unaligned,
  5   256 			5 b24		bit (1) unaligned,
  5   257 			5 b25		bit (1) unaligned,
  5   258 			5 b26		bit (1) unaligned,
  5   259 			5 b27		bit (1) unaligned,
  5   260 			5 b28		bit (1) unaligned,
  5   261 			5 b29		bit (1) unaligned,
  5   262 			5 b30		bit (1) unaligned,
  5   263 			5 b31		bit (1) unaligned,
  5   264 			5 b32		bit (1) unaligned,
  5   265 			5 b33		bit (1) unaligned,
  5   266 			5 b34		bit (1) unaligned,
  5   267 			5 b35		bit (1) unaligned,
  5   268 /* 150   */	4 llsnb		bit (36),
  5   269 /* 151   */	4 lesq		bit (36),
  5   270 /* 152-153 */	4 lumc (0:1)	bit (36),
  5   271 /* 154-155 */	4 lfnam (0:1)	bit (36),
  5   272 /* 156   */	4 lopts		bit (36),
  5   273 /* 157   */	4 licec,
  5   274 			5 b0_17		bit (18) unaligned,
  5   275 			5 b18_35		fixed bin (17) unaligned,
  5   276 /* 160   */	4 lflg3,
  5   277 			5 b0		bit (1) unaligned,
  5   278 			5 b1		bit (1) unaligned,
  5   279 			5 b2		bit (1) unaligned,
  5   280 			5 b3		bit (1) unaligned,
  5   281 			5 b4		bit (1) unaligned,
  5   282 			5 b5		bit (1) unaligned,
  5   283 			5 b6		bit (1) unaligned,
  5   284 			5 b7		bit (1) unaligned,
  5   285 			5 b8		bit (1) unaligned,
  5   286 			5 b9		bit (1) unaligned,
  5   287 			5 b10		bit (1) unaligned,
  5   288 			5 b11		bit (1) unaligned,
  5   289 			5 b12		bit (1) unaligned,
  5   290 			5 b13		bit (1) unaligned,
  5   291 			5 b14		bit (1) unaligned,
  5   292 			5 b15		bit (1) unaligned,
  5   293 			5 b16		bit (1) unaligned,
  5   294 			5 b17		bit (1) unaligned,
  5   295 			5 b18		bit (1) unaligned,
  5   296 			5 b19		bit (1) unaligned,
  5   297 			5 b20		bit (1) unaligned,
  5   298 			5 b21		bit (1) unaligned,
  5   299 			5 b22		bit (1) unaligned,
  5   300 			5 b23		bit (1) unaligned,
  5   301 			5 b24		bit (1) unaligned,
  5   302 			5 b25		bit (1) unaligned,
  5   303 			5 b26		bit (1) unaligned,
  5   304 			5 b27		bit (1) unaligned,
  5   305 			5 b28		bit (1) unaligned,
  5   306 			5 b29		bit (1) unaligned,
  5   307 			5 b30		bit (1) unaligned,
  5   308 			5 b31		bit (1) unaligned,
  5   309 			5 b32		bit (1) unaligned,
  5   310 			5 b33		bit (1) unaligned,
  5   311 			5 b34		bit (1) unaligned,
  5   312 			5 b35		bit (1) unaligned,
  5   313 /* 161-163 */	4 lpage (0:2)	bit (36),
  5   314 /* 164   */	4 lsit1		bit (36),
  5   315 /* 165   */	4 lsit2		bit (36),
  5   316 /* 166   */	4 lsit3		bit (36),
  5   317 /* 167   */	4 lsit4		bit (36),
  5   318 /* The following entries are maintained by gtss and are not found in TSS UST */
  5   319 /* 170   */	4 lxxx, /* program stack index, offset from gtss_ust */
  5   320 			5 b0_17		fixed bin (17) unaligned,
  5   321 			5 b18_35		bit (18) unaligned, /* not used */
  5   322 /* 171-175 */	4 lprgs (5),
  5   323 			5 b0_17		fixed bin (17) unaligned,
  5   324 			5 b18_35		fixed bin (17) unaligned,
  5   325 /* 176   */	4 fill	bit (36),
  5   326 /* 177   */	4 remote_io_buffer aligned,
  5   327 			5 buffer_control_word,
  5   328 				6 current_line_pointer  bit (18)unal,
  5   329 				6 buffer_threshold_address  bit (18)unal,
  5   330 			5 number_words_transmitted	fixed bin (17)unal,
  5   331 			5 FILL1			fixed bin (17)unal,
  5   332 			5 count_of_characters_transmitted fixed bin (17)unal,
  5   333 			5 FILL2			fixed bin (17)unal,
  5   334 			5 characters_transmitted (244) char (1) unal,
  5   335 /* 277   */	4 word_after_ust		bit (36) aligned;
  5   336 
  5   337 /*   END INCLUDE FILE gtss_ust_ext_.incl.pl1 */
      412 
      413 
  6     1 /* BEGIN INCLUDE FILE gtss_entry_dcls.incl.pl1 */
  6     2 /*
  6     3*  Created: (Wardd Multics)  06/30/78 1624.8 mst Fri 
  6     4*  Modified: Ron Barstad  84-02-24  Fixed wrong and obsolete entries
  6     5**/
  6     6 
  6     7 /**  gtss external entry variables.		**/
  6     8 dcl  com_err_                                   entry() options(variable);
  6     9 dcl  gtss_CFP_abort_                            entry options(variable);
  6    10 dcl  gtss_CFP_break_                            entry options(variable);
  6    11 dcl  gtss_CFP_input_                            entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  6    12 dcl  gtss_CFP_output_                           entry (ptr, ptr, fixed bin(21), fixed bin(35));
  6    13 dcl  gtss_abandon_CFP_                          entry options(variable);
  6    14 dcl  gtss_abort_dump_                           entry (fixed bin(18));
  6    15 dcl  gtss_abort_subsystem_                      entry options (variable);
  6    16 dcl  gtss_abort_subsystem_$not_imp              entry (ptr, fixed bin(24));
  6    17 dcl  gtss_abs_login_banner_		        entry() returns(char(*));
  6    18 dcl  gtss_abs_logout_banner_		        entry() returns(char(*));
  6    19 dcl  gtss_abs_$abs_equiv                        entry options(variable);
  6    20 dcl  gtss_abs_$cpu_runout		        entry (ptr, char(4));
  6    21 dcl  gtss_abs_$create_absin                     entry() returns(char(*));
  6    22 dcl  gtss_abs_$dabt_check		        entry (ptr, char(4));
  6    23 dcl  gtss_abs_$get_id                           entry (char(5)) returns(char(19));
  6    24 dcl  gtss_abs_$get_drm                          entry() returns(char(*));
  6    25 dcl  gtss_adjust_size_                          entry (ptr);
  6    26 dcl  gtss_aft_$add                              entry (char(8), fixed bin(24), fixed bin(35));
  6    27 dcl  gtss_aft_$delete                           entry (char(8), fixed bin(24), fixed bin(35));
  6    28 dcl  gtss_aft_$find                             entry (char(8), fixed bin(24), fixed bin(35));
  6    29 dcl  gtss_aft_$initialize                       entry (fixed bin(35));
  6    30 dcl  gtss_ascii_bcd_                            entry (ptr, fixed bin, ptr);
  6    31 dcl  gtss_attributes_mgr_$get                   entry (ptr, fixed bin(35));
  6    32 dcl  gtss_attributes_mgr_$set                   entry (ptr, fixed bin(35));
  6    33 dcl  gtss_bcd_ascii_                            entry (ptr, fixed bin(24), ptr);
  6    34 dcl  gtss_bcd_ascii_$lc                         entry (ptr, fixed bin(24), ptr);
  6    35 dcl  gtss_break_vector_                         entry ();
  6    36 dcl  gtss_break_vector_$drl_in_progress         entry() returns(bit(1));
  6    37 dcl  gtss_break_vector_$status                  entry() returns(bit(1));
  6    38 dcl  gtss_build_                                entry options(variable);
  6    39 dcl  gtss_com_err_                              entry options(variable);
  6    40 dcl  gtss_derail_processor_                     entry (ptr, char(*), ptr, ptr, bit(1) aligned) /* called at fault time instead of signal_ */;
  6    41 dcl  gtss_derail_processor_$set                 entry options(variable);
  6    42 dcl  gtss_dq_$catp                              entry (char (5), ptr, fixed bin (18) unsigned);
  6    43 dcl  gtss_dq_$create                            entry (bit(1));
  6    44 dcl  gtss_dq_$dibp                              entry (char(5), ptr);
  6    45 dcl  gtss_dq_$entries_info		        entry (ptr, fixed bin (18) unsigned, fixed bin (18) unsigned);
  6    46 dcl  gtss_dq_$hdrp                              entry (ptr);
  6    47 dcl  gtss_dq_$mod_js		        entry (char(5), fixed bin (6) unsigned, bit (1));
  6    48 dcl  gtss_dq_$open_exc		        entry (bit(1));
  6    49 dcl  gtss_dq_$open_gen		        entry (bit(1));
  6    50 dcl  gtss_drl_abort_                            entry (ptr, fixed bin);
  6    51 dcl  gtss_drl_addmem_                           entry (ptr, fixed bin);
  6    52 dcl  gtss_drl_callss_                           entry (ptr, fixed bin);
  6    53 dcl  gtss_drl_corfil_                           entry (ptr, fixed bin);
  6    54 dcl  gtss_drl_defil_                            entry (ptr, fixed bin);
  6    55 dcl  gtss_drl_defil_$subr                       entry (ptr, ptr, ptr);
  6    56 dcl  gtss_drl_dio_                              entry (ptr, fixed bin);
  6    57 dcl  gtss_drl_drlimt_                           entry (ptr, fixed bin);
  6    58 dcl  gtss_drl_drlsav_                           entry (ptr, fixed bin);
  6    59 dcl  gtss_drl_filact_                           entry (ptr, fixed bin);
  6    60 dcl  gtss_drl_filsp_                            entry (ptr, fixed bin);
  6    61 dcl  gtss_drl_grow_                             entry (ptr, fixed bin);
  6    62 dcl  gtss_drl_gwake_                            entry (ptr, fixed bin);
  6    63 dcl  gtss_drl_jsts_                             entry (ptr, fixed bin);
  6    64 dcl  gtss_drl_kin_                              entry (ptr, fixed bin);
  6    65 dcl  gtss_drl_kotnow_                           entry (ptr, fixed bin);
  6    66 dcl  gtss_drl_kotnow_$gtss_drl_kout_            entry (ptr, fixed bin);
  6    67 dcl  gtss_drl_koutn_                            entry (ptr, fixed bin);
  6    68 dcl  gtss_drl_morlnk_                           entry (ptr, fixed bin);
  6    69 dcl  gtss_drl_msub_                             entry (ptr, fixed bin);
  6    70 dcl  gtss_drl_objtim_                           entry (ptr, fixed bin);
  6    71 dcl  gtss_drl_part_                             entry (ptr, fixed bin);
  6    72 dcl  gtss_drl_pasaft_                           entry (ptr, fixed bin);
  6    73 dcl  gtss_drl_pasdes_                           entry (ptr, fixed bin);
  6    74 dcl  gtss_drl_pasust_                           entry (ptr, fixed bin);
  6    75 dcl  gtss_drl_pdio_                             entry (ptr, fixed bin);
  6    76 dcl  gtss_drl_prgdes_                           entry (ptr, fixed bin);
  6    77 dcl  gtss_drl_pseudo_                           entry (ptr, fixed bin);
  6    78 dcl  gtss_drl_relmem_                           entry (ptr, fixed bin);
  6    79 dcl  gtss_drl_restor_                           entry (ptr, fixed bin);
  6    80 dcl  gtss_drl_retfil_                           entry (ptr, fixed bin);
  6    81 dcl  gtss_drl_return_                           entry (ptr, fixed bin);
  6    82 dcl  gtss_drl_rew_                              entry (ptr, fixed bin);
  6    83 dcl  gtss_drl_rstswh_                           entry (ptr, fixed bin);
  6    84 dcl  gtss_drl_setlno_                           entry (ptr, fixed bin);
  6    85 dcl  gtss_drl_setswh_                           entry (ptr, fixed bin);
  6    86 dcl  gtss_drl_snumb_                            entry (ptr, fixed bin);
  6    87 dcl  gtss_drl_spawn_                            entry (ptr, fixed bin);
  6    88 dcl  gtss_drl_spawn_$gtss_drl_pasflr_           entry (ptr, fixed bin);
  6    89 dcl  gtss_drl_stoppt_                           entry (ptr, fixed bin);
  6    90 dcl  gtss_drl_switch_                           entry (ptr, fixed bin);
  6    91 dcl  gtss_drl_sysret_                           entry (ptr, fixed bin);
  6    92 dcl  gtss_drl_t_cfio_                           entry (ptr, fixed bin);
  6    93 dcl  gtss_drl_t_cmov_                           entry (ptr, fixed bin);
  6    94 dcl  gtss_drl_t_err_                            entry (ptr, fixed bin);
  6    95 dcl  gtss_drl_t_goto_                           entry (ptr, fixed bin);
  6    96 dcl  gtss_drl_t_linl_                           entry (ptr, fixed bin);
  6    97 dcl  gtss_drl_t_rscc_                           entry (ptr, fixed bin);
  6    98 dcl  gtss_drl_tapein_                           entry (ptr, fixed bin);
  6    99 dcl  gtss_drl_task_                             entry (ptr, fixed bin);
  6   100 dcl  gtss_drl_termtp_                           entry (ptr, fixed bin);
  6   101 dcl  gtss_drl_time_                             entry (ptr, fixed bin);
  6   102 dcl  gtss_drun_                                 entry (bit(1));
  6   103 dcl  gtss_dsd_lookup_                           entry (char(8) var) returns(fixed bin(24));
  6   104 dcl  gtss_dsd_process_                          entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  6   105 dcl  gtss_edit_dsd_                             entry (ptr, fixed bin(21)) returns(fixed bin(24));
  6   106 dcl  gtss_mcfc_empty                            entry (char(*) var);
  6   107 dcl  gtss_expand_pathname_                      entry (ptr, char(*), char(*), fixed bin(35));
  6   108 dcl  gtss_expand_pathname_$verify_umc           entry (ptr, char(*), char(*), bit(18), fixed bin(35));
  6   109 dcl  gtss_fault_processor_                      entry options(variable);
  6   110 dcl  gtss_find_cond_frame_		        entry (char(32) var) returns(ptr);
  6   111 dcl  gtss_fault_processor_$timer_runout         entry (ptr, char(*));
  6   112 dcl  gtss_filact_error_status_                  entry (fixed bin(35))returns(bit(12));
  6   113 dcl  gtss_filact_funct02_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   114 dcl  gtss_filact_funct03_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   115 dcl  gtss_filact_funct04_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   116 dcl  gtss_filact_funct05_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   117 dcl  gtss_filact_funct08_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   118 dcl  gtss_filact_funct10_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   119 dcl  gtss_filact_funct11_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   120 dcl  gtss_filact_funct14_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   121 dcl  gtss_filact_funct18_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   122 dcl  gtss_filact_funct19_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   123 dcl  gtss_filact_funct21_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   124 dcl  gtss_filact_funct22_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   125 dcl  gtss_mcfc_init_                            entry (char(*) var);
  6   126 dcl  gtss_interp_prim_                          entry options(variable);
  6   127 dcl  gtss_interp_prim_$callss                   entry (char(4), ptr);
  6   128 dcl  gtss_interp_prim_$sysret                   entry options(variable);
  6   129 dcl  gtss_interp_prim_$t_goto                   entry (char(4));
  6   130 dcl  gtss_ios_change_size_                      entry (fixed bin(24), fixed bin(24), bit(1), fixed bin(24), fixed bin(35));
  6   131 dcl  gtss_ios_close_                            entry (fixed bin(24), ptr, fixed bin(35));
  6   132 dcl  gtss_ios_exchange_names_                   entry (fixed bin(24), fixed bin(24), fixed bin(24), fixed bin(35));
  6   133 dcl  gtss_ios_initialize_                       entry options(variable);
  6   134 dcl  gtss_ios_io_                               entry (fixed bin(24), ptr, ptr, fixed bin(24), fixed bin(24), fixed bin(35));
  6   135 dcl  gtss_ios_open_                             entry (fixed bin(24), char(168), char(32), bit(6), bit(1), ptr, ptr, fixed bin(35));
  6   136 dcl  gtss_ios_position_                         entry (fixed bin(24), fixed bin(24), fixed bin(24), bit(6), ptr);
  6   137 dcl  gtss_mcfc_$delete		        entry (fixed bin(24), char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  6   138 dcl  gtss_mcfc_$open                            entry (char(*), char(*), bit(6), bit(36) aligned, ptr, fixed bin(35));
  6   139 dcl  gtss_mcfc_$close                           entry (char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  6   140 dcl  gtss_read_starCFP_                         entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  6   141 dcl  gtss_read_starCFP_$last_os                 entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  6   142 dcl  gtss_run_subsystem_                        entry (fixed bin(24));
  6   143 dcl  gtss_run_subsystem_$finish                 entry options(variable);
  6   144 dcl  gtss_run_subsystem_$restor                 entry (fixed bin(24), ptr);
  6   145 dcl  gtss_run_subsystem_$restor_perm            entry (fixed bin(24), ptr, fixed bin(18));
  6   146 dcl  gtss_set_slave_                            entry (fixed bin (24), ptr);
  6   147 dcl  gtss_set_slave_$load_bar                   entry (fixed bin (17));
  6   148 dcl  gtss_update_safe_store_                    entry (ptr);
  6   149 dcl  gtss_verify_access_		        entry (char(*), char(*), fixed bin(24), bit(6), bit(12) aligned);
  6   150 dcl  gtss_verify_access_$check_forced_access    entry (char(*), char(*), fixed bin(24));
  6   151 dcl  gtss_write_starCFP_                        entry (ptr, ptr, fixed bin(21), fixed bin(35));
  6   152 /*   END INCLUDE FILE gtss_entry_dcls.incl.pl1 */
      414 
      415 
  7     1 /* BEGIN INCLUDE FILE gtss_db_names.incl.pl1 */
  7     2 /*
  7     3*  Created:  (Wardd Multics)  03/29/79 1909.1 mst Thu 
  7     4**/
  7     5 
  7     6 /* To provide a new debugging switch:
  7     7*
  7     8*   1) Locate the comment "Insert next entry above this comment".
  7     9*
  7    10*   2) Place a new declaration for a db_ variable just
  7    11*      above this comment, in the same manner as the
  7    12*      current declaration just above the comment, using
  7    13*      the next integer gtss_ext_$db index.
  7    14*
  7    15*   3) Execute the gtss|db_names ted macro (this updates
  7    16*      the sorted name table).
  7    17*
  7    18*   4) Example use:
  7    19*
  7    20*      if db_drl_grow then do;
  7    21*      .
  7    22*      .
  7    23*      .
  7    24*      debug i/o statements using com_err_ or ioa_
  7    25*      .
  7    26*      .
  7    27*      .
  7    28*      end;
  7    29*
  7    30**/
  7    31 
  7    32 dcl (
  7    33  db_		bit(1) defined(gtss_ext_$db(01))
  7    34 ,db_CFP_input	bit(1) defined(gtss_ext_$db(02))
  7    35 ,db_drl_addmem	bit(1) defined(gtss_ext_$db(03))
  7    36 ,db_drl_defil	bit(1) defined(gtss_ext_$db(04))
  7    37 ,db_drl_filact	bit(1) defined(gtss_ext_$db(05))
  7    38 ,db_drl_filsp	bit(1) defined(gtss_ext_$db(06))
  7    39 ,db_drl_grow	bit(1) defined(gtss_ext_$db(07))
  7    40 ,db_drl_rew	bit(1) defined(gtss_ext_$db(08))
  7    41 ,db_filact_funct02	bit(1) defined(gtss_ext_$db(09))
  7    42 ,db_filact_funct03	bit(1) defined(gtss_ext_$db(10))
  7    43 ,db_filact_funct04	bit(1) defined(gtss_ext_$db(11))
  7    44 ,db_filact_funct05	bit(1) defined(gtss_ext_$db(12))
  7    45 ,db_filact_funct10	bit(1) defined(gtss_ext_$db(13))
  7    46 ,db_filact_funct11	bit(1) defined(gtss_ext_$db(14))
  7    47 ,db_filact_funct14	bit(1) defined(gtss_ext_$db(15))
  7    48 ,db_filact_funct18	bit(1) defined(gtss_ext_$db(16))
  7    49 ,db_filact_funct19	bit(1) defined(gtss_ext_$db(17))
  7    50 ,db_filact_funct21	bit(1) defined(gtss_ext_$db(18))
  7    51 ,db_filact_funct22	bit(1) defined(gtss_ext_$db(19))
  7    52 ,db_interp_prim	bit(1) defined(gtss_ext_$db(20))
  7    53 ,db_ios		bit(1) defined(gtss_ext_$db(21))
  7    54 ,db_run_subsystem	bit(1) defined(gtss_ext_$db(22))
  7    55 ,db_drl_t_cfio	bit(1) defined(gtss_ext_$db(23))
  7    56 ,db_drl_switch	bit(1) defined(gtss_ext_$db(24))
  7    57 ,db_drl_dio	bit(1) defined(gtss_ext_$db(25))
  7    58 ,db_drl_retfil	bit(1) defined(gtss_ext_$db(26))
  7    59 ,db_drl_msub	bit(1) defined(gtss_ext_$db(27))
  7    60 ,db_drl_callss	bit(1) defined(gtss_ext_$db(28))
  7    61 ,db_drl_rstswh	bit(1) defined(gtss_ext_$db(29))
  7    62 ,db_drl_setswh	bit(1) defined(gtss_ext_$db(30))
  7    63 ,db_mcfc		bit(1) defined(gtss_ext_$db(31))
  7    64 ,db_dq		bit(1) defined(gtss_ext_$db(32))
  7    65 ,db_abs		bit(1) defined(gtss_ext_$db(33))
  7    66 ,db_attributes_mgr	bit(1) defined(gtss_ext_$db(34))
  7    67 ,db_expand_pathname bit(1) defined(gtss_ext_$db(35))
  7    68 ,db_drl_part	bit(1) defined(gtss_ext_$db(36))
  7    69 ,db_drl_morlnk	bit(1) defined(gtss_ext_$db(37))
  7    70 ,db_drl_kin	bit(1) defined(gtss_ext_$db(38))
  7    71 /* Insert next entry above this comment. */
  7    72 );
  7    73 
  7    74 /* Table of sorted names. */
  7    75 dcl 1 debug_bit_names (38) static int options(constant)
  7    76 ,     2 name char(18)var init(
  7    77          "" ,"CFP_input" ,"abs" ,"attributes_mgr" ,"dq" ,"drl_addmem"
  7    78          ,"drl_callss" ,"drl_defil" ,"drl_dio" ,"drl_filact" ,"drl_filsp"
  7    79          ,"drl_grow" ,"drl_kin" ,"drl_morlnk" ,"drl_msub" ,"drl_part"
  7    80          ,"drl_retfil" ,"drl_rew" ,"drl_rstswh" ,"drl_setswh" ,"drl_switch"
  7    81          ,"drl_t_cfio" ,"expand_pathname" ,"filact_funct02" ,"filact_funct03"
  7    82          ,"filact_funct04" ,"filact_funct05" ,"filact_funct10" ,"filact_funct11"
  7    83          ,"filact_funct14" ,"filact_funct18" ,"filact_funct19" ,"filact_funct21"
  7    84          ,"filact_funct22" ,"interp_prim" ,"ios" ,"mcfc" ,"run_subsystem"
  7    85 			)
  7    86 ,     2 value fixed bin init(
  7    87          01 ,02 ,33 ,34 ,32 ,03 ,28 ,04 ,25 ,05 ,06 ,07 ,38 ,37 ,27 ,36 ,26 ,08
  7    88          ,29 ,30 ,24 ,23 ,35 ,09 ,10 ,11 ,12 ,13 ,14 ,15 ,16 ,17 ,18 ,19 ,20 ,21
  7    89          ,31 ,22
  7    90 			);
  7    91 /* End of table. */
  7    92 /*   END INCLUDE FILE gtss_db_names.incl.pl1 */
      416 
      417 
  8     1 /* BEGIN INCLUDE FILE gtss_deferred_queue.incl.pl1 */
  8     2 /*
  8     3*  Created:  (Dupuis Multics)  06/26/79 0848.7 mst Tue 
  8     4*  Changed:  Ron Barstad  84-11-29  dq_catalog.dcelp changed to fixed bin 35 (was 36 unsigned)
  8     5**/
  8     6 dcl 1 dq_header based,
  8     7       2 dhcks fixed bin (36) unsigned unaligned,
  8     8       2 dhnam fixed bin (36) unsigned unaligned,
  8     9       2 dhdat bit (36) unaligned,
  8    10       2 dhtim fixed bin (36) unsigned unaligned,
  8    11       2 dhbsn,
  8    12         3 no_of_cea fixed bin (18) unsigned unaligned,
  8    13         3 tss_ssn fixed bin (18) unsigned unaligned,
  8    14       2 dhseq,
  8    15         3 no_of_ceiu fixed bin (18) unsigned unaligned,
  8    16         3 no_of_dss fixed bin (18) unsigned unaligned,
  8    17       2 dhtns,
  8    18         3 no_of_srts fixed bin (18) unsigned unaligned,
  8    19         3 no_of_dsi fixed bin (18) unsigned unaligned,
  8    20       2 dhrns fixed bin (36) unsigned unaligned;
  8    21 
  8    22 
  8    23 dcl 1 dq_catalog based,
  8    24      2 dcjid,
  8    25         3 bcd_job_id bit (30) unaligned,
  8    26         3 job_status fixed bin (6) unsigned unaligned,
  8    27      2 dcseq,
  8    28        3 jsn fixed bin (18) unsigned unaligned,
  8    29        3 reserved bit (1) unaligned,
  8    30        3 init_seq fixed bin (17) unsigned unaligned,
  8    31      2 dcuid bit (72) unaligned,
  8    32      2 dcdsd bit (36) unaligned,
  8    33      2 dcdst fixed bin (35) unaligned,
  8    34      2 dcelp fixed bin (35) unaligned,
  8    35      2 dcusr,
  8    36        3 not_used bit (18) unaligned,
  8    37        3 b18_35_lswth bit (18) unaligned;
  8    38 
  8    39 dcl 1 dq_dib based,
  8    40       2 dbdat bit (36) unaligned,
  8    41       2 dbtim bit (36) unaligned,
  8    42       2 dblin fixed bin (36) unaligned unsigned,
  8    43       2 dberr,
  8    44         3 dbalt_cc fixed bin (18) unaligned unsigned,
  8    45         3 dbdsc_cc fixed bin (18) unaligned unsigned,
  8    46       2 dbptr,
  8    47         3 dbdsc_ro fixed bin (18) unaligned unsigned,
  8    48         3 ofn_ro fixed bin (17) unaligned,
  8    49       2 dbflg,
  8    50         3 alloc_perm bit (9) unaligned,
  8    51         3 del_char char (1) unaligned,
  8    52         3 f_res bit (1) unaligned,
  8    53         3 f_sub bit (1) unaligned,
  8    54         3 f_arg bit (1) unaligned,
  8    55         3 f_del bit (1) unaligned,
  8    56         3 f_exc bit (1) unaligned,
  8    57         3 f_inc bit (1) unaligned,
  8    58         3 f_lni bit (1) unaligned,
  8    59         3 f_alt bit (1) unaligned,
  8    60         3 f_fnq bit (1) unaligned,
  8    61         3 f_ucs bit (1) unaligned,
  8    62         3 f_lcs bit (1) unaligned,
  8    63         3 arg_char char (1) unaligned,
  8    64       2 rest (58) bit (36) unaligned;
  8    65 
  8    66 dcl 1 cout_sector based,
  8    67       2 filler_1 (6) bit (36),
  8    68       2 c_lcfio,
  8    69         3 sector_out fixed bin (18) unaligned unsigned,
  8    70         3 sector_in fixed bin (18) unaligned unsigned,
  8    71       2 c_lcfst,
  8    72         3 init_sect_out fixed bin (18) unaligned unsigned,
  8    73         3 start_term fixed bin (18) unaligned unsigned,
  8    74       2 filler_2 (40) bit (36),
  8    75       2 label_table (8),
  8    76         3 label_name bit (54),
  8    77         3 label_pos fixed bin (18) unaligned unsigned;
  8    78 
  8    79 /*   END INCLUDE FILE gtss_deferred_queue.incl.pl1 */
      418 
      419 
  9     1 /* BEGIN INCLUDE FILE gtss_dfd_ext_.incl.pl1 */
  9     2 /*
  9     3*  Created:  (Wardd Multics)  06/09/78 1650.6 mst Fri 
  9     4**/
  9     5 
  9     6 dcl 1 gtss_dfd_ext_$disk_file_data (41) aligned ext,		/* disk_file_data structure */
  9     7 
  9     8     3 gtss_disk,
  9     9       4 dir_name char (168) unal,			/* containing directory for file */
  9    10       4 entry_name char (32) unal,			/* entry name for file */
  9    11       4 fcb_ptr ptr aligned,				/* ptr to file control block */
  9    12       4 msf_array_ptr ptr,				/* Pointer to an array of pointers for a msf. Each
  9    13*						   component which has been accessed has a corresponding
  9    14*						   initialized pointer.  Currently 500 components
  9    15*						   are supported. */
  9    16       4 single_segment_ptr ptr,			/* Pointer to segment for single segment file */
  9    17       4 indicators aligned,				/* one word of flags */
  9    18 
  9    19         5 msf bit (1) unaligned,			/* 1=msf segment | 0= single segment */
  9    20         5 protected_file bit (1) unaligned,		/* 1=file uses protections | 0= unprotected */
  9    21         5 fill bit (34) unal,
  9    22 
  9    23       4 permissions aligned,
  9    24         5 read bit (1) unaligned,			/* 1=read permission  */
  9    25         5 execute bit (1) unaligned,			/* 1=execute permission */
  9    26         5 write bit (1) unaligned,			/* 1=write permission */
  9    27         5 fill2 bit (33) unaligned,			/* unused at this time */
  9    28 
  9    29       4 access_mode bit (6) aligned,			/* contains the mode by which the file was accessed */
  9    30       4 component fixed bin,				/* current component value (first component = 0) */
  9    31       4 offset fixed bin (24),			/* current word offset in the component */
  9    32       4 file_position fixed bin (30),			/* current file position in words */
  9    33       4 file_size fixed bin (30),			/* size of file in words */
  9    34       4 no_components fixed bin (24),			/* number of components for a msf */
  9    35       4 attributes_ptr ptr,				/* Pointer to the attributes structure
  9    36*						   for this file. (See gtss_file_attributes.incl.pl1) */
  9    37 
  9    38       4 pat_body,
  9    39 
  9    40         5 word_0,
  9    41 	6 defective bit (1) unal,			/* 1 = file has defective space */
  9    42 	6 io_errors bit (1) unal,			/* 1 = I/O errors encountered on file */
  9    43 	6 reserved bit (2) unal,			/* Reserved for GCOS */
  9    44 	6 sct bit (12) unal,			/* address of SCT for device on which
  9    45*						   file begins or if cataloged,
  9    46*						   for device with file catalog entry */
  9    47 	6 reserved2 bit (2) unal,			/* Reserved for GCOS */
  9    48 
  9    49         5 word_1,
  9    50 	6 io_time fixed bin (35),			/* I/O time for this file */
  9    51 
  9    52         5 word_2,
  9    53 	6 protected bit (1) unal,			/* 1 = file has protected allocation */
  9    54 	6 hash_code bit (5) unal,			/* hash code of user name under which
  9    55*						   file is cataloged */
  9    56 	6 not_cat bit (1) unal,			/* 1 = file is not cataloged */
  9    57 	6 last_desc bit (1) unal,			/* 1 = last descriptor for file is not in memory */
  9    58 	6 random bit (1) unal,			/* 1 = access to file is random */
  9    59 	6 perm bit (1) unal,			/* 1 = file space is permanently assigned */
  9    60 	6 first_desc bit (1) unal,			/* 1 = first descriptor for file is not in memory */
  9    61 	6 creator bit (1) unal,			/* 1 = user is not creator of file */
  9    62 	6 disposition bit (2) unal,			/* Abort disposition code
  9    63*						   00 = Release
  9    64*						   01 = Dismount
  9    65*						   10 = Save
  9    66*						   11 = Continue */
  9    67 	6 ids1 bit (1) unal,			/* 1 = file is an I-D-S/I file */
  9    68 	6 write_performed bit (1) unal,		/* 1 = write was performed on file */
  9    69 	6 unpermitted_access bit (1) unal,		/* 1 = unpermitted access to file attempted or seek
  9    70*						   attempted to part of file marked defective (only
  9    71*						   for procted allocation) */
  9    72 	6 purge bit (1) unal,			/* 1 = file space to be purgedbefore deallocating file. */
  9    73 	6 sector_number bit (18) unal,		/* If cataloged file, sector number of file catalog
  9    74*						   (on device with SCT referenced in word 0).  If
  9    75*						   cataloged file that is proctected (bit 0 ON in this
  9    76*						   word), memory location of table in File Management
  9    77*						   Supervisor Executive.  If user temporary file,
  9    78*						   largest size file has ever attained, in llinks.
  9    79*						   If system value equals 777777 octal, it is system
  9    80*						   file created by System Input. */
  9    81 
  9    82         5 word_3,
  9    83 	6 llink_size bit (14) unal,			/* 0-13 ^= 0, Current total file size in llinks
  9    84*						   0-13 = 0, File size is greater than 16,383 llinks,
  9    85*						   and if the file is cataloged, call to .MFS19,5 with
  9    86*						   offset to PAT pointer in index 5 will cause bits
  9    87*						   14-35 of Q-register to be set to file size. (Unless
  9    88*						   there is a Seek error on file catalog in which case
  9    89*						   zero is returned. )
  9    90*						   */
  9    91 	6 llink_position bit (22) unal,		/* Relative llink position within the space descriptors
  9    92*						   in memory. */
  9    93 
  9    94         5 word_4,
  9    95 	6 not_last_desc bit (1) unal,			/* 1 = not last descriptor in memory */
  9    96 	6 space_desc bit (1) unal,			/* 0 = this is space descriptor */
  9    97 	6 space_defective bit (1) unal,		/* 1 = Space is defective */
  9    98 	6 extent bit (15) unal,			/* Number of llinks in this extent (area defined by this
  9    99*						   descriptor) */
  9   100 	6 origin bit (18) unal;			/* device llinks number of origin of this extent */
  9   101 /*   END INCLUDE FILE gtss_dfd_ext_.incl.pl1 */
      420 
      421 
 10     1 /* BEGIN INCLUDE FILE gtss_device_cmds.incl.pl1 */
 10     2 /*
 10     3*  Created:  (Wardd Multics)  07/08/78 1503.0 mst Sat 
 10     4**/
 10     5 dcl  read_cmd		bit(6)static int options(constant)init("25"b3);
 10     6 dcl  seek_cmd		bit(6)static int options(constant)init("34"b3);
 10     7 dcl  write_cmd		bit(6)static int options(constant)init("31"b3);
 10     8 /*   END INCLUDE FILE gtss_device_cmds.incl.pl1 */
      422 
      423 
 11     1 /* BEGIN INCLUDE FILE gtss_file_attributes.incl.pl1 */
 11     2 /*
 11     3*  Created: (Kepner Multics)  06/02/78 1522.0 mst Fri 
 11     4**/
 11     5 
 11     6 /*	Declaration of File Attributes Segement	*/
 11     7 
 11     8 
 11     9 dcl  gtss_file_attributes_ptr ptr init(null());
 11    10 
 11    11 dcl 1 gtss_file_attributes based (gtss_file_attributes_ptr) aligned,
 11    12     2 max_size fixed bin (24),			/* maximum size the file can grow to
 11    13*						   in 320 word blocks.  if = 0 then the
 11    14*						   file size is unlimited. */
 11    15     2 current_size fixed bin (24),			/* current size of the file in 320 word blocks */
 11    16     2 user_attributes aligned,
 11    17       3 non_null bit (1) unal,			/* 0 = this file has never been written to */
 11    18       3 user_attr bit (35) unal,			/* User defined attributes */
 11    19     2 descriptor aligned,
 11    20       3 device_type bit (6) unaligned,			/* currently ignored */
 11    21       3 words_block bit (12) unaligned,			/* number of words per physical block */
 11    22       3 llink_flag bit (1) unaligned,			/* if 0= size in links | 1= size in llinks */
 11    23       3 mode bit (1) unaligned,			/* 0= linked file | 1= random file */
 11    24       3 perm bit (1) unaligned,			/* 1=permanent file|0=not */
 11    25       3 fill bit (1) unaligned,
 11    26       3 size bit (14) unaligned;
 11    27 
 11    28 
 11    29 /*   END INCLUDE FILE gtss_file_attributes.incl.pl1 */
      424 
      425      end;
      426 
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/10/84  1043.5  gtss_drl_t_cfio_.pl1              >spec>on>7105>gtss_drl_t_cfio_.pl1
404          1    09/09/83  1713.2  gtss_CFP_bits.incl.pl1            >ldd>include>gtss_CFP_bits.incl.pl1
406          2    09/09/83  1714.2  gtss_starCF_.incl.pl1             >ldd>include>gtss_starCF_.incl.pl1
408          3    09/09/83  1713.8  gtss_ext_.incl.pl1                >ldd>include>gtss_ext_.incl.pl1
410          4    12/15/83  1100.4  mc.incl.pl1                       >ldd>include>mc.incl.pl1
412          5    09/09/83  1714.3  gtss_ust_ext_.incl.pl1            >ldd>include>gtss_ust_ext_.incl.pl1
414          6    12/10/84  1029.7  gtss_entry_dcls.incl.pl1          >spec>on>7105>gtss_entry_dcls.incl.pl1
416          7    09/09/83  1713.6  gtss_db_names.incl.pl1            >ldd>include>gtss_db_names.incl.pl1
418          8    12/10/84  1029.7  gtss_deferred_queue.incl.pl1      >spec>on>7105>gtss_deferred_queue.incl.pl1
420          9    09/09/83  1713.2  gtss_dfd_ext_.incl.pl1            >ldd>include>gtss_dfd_ext_.incl.pl1
422         10    09/09/83  1713.7  gtss_device_cmds.incl.pl1         >ldd>include>gtss_device_cmds.incl.pl1
424         11    09/09/83  1714.0  gtss_file_attributes.incl.pl1     >ldd>include>gtss_file_attributes.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
CFP_in_progress                        defined         bit(1)                   unaligned dcl 1-7 set ref 57*
ID1                       1     000042 external static structure                level 3 dcl 2-12
ID2                       3     000042 external static structure                level 3 dcl 2-12
L_arglist                              based           fixed bin(18,0)          level 2 packed unsigned unaligned dcl 391 ref 59 117
                                                                                  144 146 174 221 221 259 276
RECORD                   12     000042 external static structure                level 2 dcl 2-12
a                        24            based           bit(36)                  level 3 packed unaligned dcl 4-12 set ref 161 161
aft_indx                113     000042 external static fixed bin(24,0)          level 3 dcl 2-12 set ref 53*
arg_list_ptr                    000100 automatic       pointer                  dcl 267 set ref 259* 260 260 260 262 262
ascii_date                      000400 automatic       structure                level 1 dcl 386 set ref 161 161
ascii_lcjid                     000100 automatic       char(5)                  unaligned dcl 335 set ref 221 221 223 235* 243*
attributes_ptr          100     000124 external static pointer                  array level 3 dcl 9-6 ref 135 135
b7                       21(07) 000064 external static bit(1)                   level 4 packed unaligned dcl 5-16 set ref 102*
b8                       54(08) 000064 external static bit(1)                   level 4 packed unaligned dcl 5-16 set ref 57* 57
bit_count                       000102 automatic       fixed bin(24,0)          dcl 336 set ref 223* 225 312*
cf                      112     000042 external static structure                level 2 dcl 2-12 set ref 54
channel_id                             based           fixed bin(71,0)          level 2 dcl 395 set ref 229*
chars                    13     000042 external static char(252)                level 3 dcl 2-12 set ref 85* 86 86
clock_                          000010 constant        entry                    external dcl 337 ref 149 149
code                            000103 automatic       fixed bin(35,0)          initial dcl 338 set ref 44 45* 46 86* 89 116 121*
                                                                                  122 132* 172 220 223* 229* 231 233 233* 235* 243
                                                                                  243* 246* 275* 279* 312* 314 338*
com_err_                        000066 constant        entry                    external dcl 6-8 ref 235 243
com_err_$suppress_name          000012 constant        entry                    external dcl 339 ref 280
convert_ipc_code_               000014 constant        entry                    external dcl 340 ref 233
cout_called               0(06) 000060 external static bit(1)                   level 2 packed unaligned dcl 3-37 set ref 63 100*
cpos_called               0(05) 000060 external static bit(1)                   level 2 packed unaligned dcl 3-37 ref 63
day_of_month                    000104 automatic       fixed bin(17,0)          dcl 341 set ref 149* 159
day_of_week                     000105 automatic       fixed bin(17,0)          dcl 342 set ref 149*
db_drl_t_cfio                          defined         bit(1)                   unaligned dcl 7-32 ref 34
decode_clock_value_             000016 constant        entry                    external dcl 343 ref 149
descriptor                3            based           structure                level 2 dcl 11-11 set ref 135
dit                       0(18) 000062 external static fixed bin(18,0)          level 3 packed unsigned unaligned dcl 3-45 set ref
                                                                                  119 181 310*
drl_args                               based           structure                level 1 dcl 391
drl_args_ptr                    000106 automatic       pointer                  dcl 344 set ref 25* 26 26 34 37 59 117 144 146 174
                                                                                  221 221 259 276
dy                        1     000400 automatic       picture(2)               level 2 packed unaligned dcl 386 set ref 159*
err_mess                        000110 automatic       char(250)                initial unaligned dcl 345 set ref 29* 48* 127* 139*
                                                                                  188* 205* 237* 283* 295 295* 319* 327* 345*
error                           000207 automatic       bit(1)                   initial unaligned dcl 346 set ref 124* 125 185* 186
                                                                                  202* 203 316* 317 325* 326 346*
error_table_$invalid_channel    000020 external static fixed bin(35,0)          dcl 347 ref 233
error_table_$noentry            000022 external static fixed bin(35,0)          dcl 348 ref 314
event_info                             based           structure                level 1 unaligned dcl 395
fcb_loc                   3     000042 external static bit(18)                  level 4 in structure "gtss_starCF_$FILE" packed
                                                                                  unaligned dcl 2-12 in procedure "gtss_drl_t_cfio_"
                                                                                  set ref 54*
fcb_loc                   1     000042 external static bit(18)                  level 4 in structure "gtss_starCF_$FILE" packed
                                                                                  unaligned dcl 2-12 in procedure "gtss_drl_t_cfio_"
                                                                                  set ref 54*
first_time              114     000042 external static bit(1)                   level 3 packed unaligned dcl 2-12 set ref 63*
fn                              000210 automatic       fixed bin(24,0)          dcl 349 set ref 45* 53 121* 132* 135 135
function                        000212 automatic       entry variable           initial array dcl 350 set ref 37 350* 350* 350* 350*
                                                                                  350* 350* 350* 350*
function_8_arg_list                    based           structure                level 1 dcl 268
function_no               0(18)        based           fixed bin(18,0)          level 2 packed unsigned unaligned dcl 391 set ref 26
                                                                                  26 34* 37
gcos_banner                     000252 automatic       varying char(256)        dcl 359 set ref 84* 85 86 86
gseg                            000354 automatic       pointer                  dcl 360 set ref 24* 25 59 144 146 174 221 221 259
gtss_CFP_input_                 000070 constant        entry                    external dcl 6-11 ref 68
gtss_CFP_output_                000072 constant        entry                    external dcl 6-12 ref 69
gtss_abandon_CFP_               000074 constant        entry                    external dcl 6-13 ref 101
gtss_abort_subsystem_           000076 constant        entry                    external dcl 6-15 ref 105 295 301
gtss_abs_$abs_equiv             000102 constant        entry                    external dcl 6-19 ref 213
gtss_abs_$cpu_runout            000104 constant        entry                    external dcl 6-20 ref 75 75
gtss_abs_login_banner_          000100 constant        entry                    external dcl 6-17 ref 84
gtss_aft_$find                  000106 constant        entry                    external dcl 6-28 ref 45 121 132
gtss_ascii_bcd_                 000110 constant        entry                    external dcl 6-30 ref 161
gtss_bcd_ascii_                 000112 constant        entry                    external dcl 6-33 ref 221
gtss_dfd_ext_$disk_file_data    000124 external static structure                array level 1 dcl 9-6
gtss_disk                       000124 external static structure                array level 2 dcl 9-6
gtss_dq_$create                 000114 constant        entry                    external dcl 6-43 ref 316
gtss_dq_$open_exc               000116 constant        entry                    external dcl 6-48 ref 185
gtss_dq_$open_gen               000120 constant        entry                    external dcl 6-49 ref 124 202 325
gtss_ext_$CFP_bits              000060 external static structure                level 1 dcl 3-37
gtss_ext_$com_reg               000062 external static structure                level 1 dcl 3-45 set ref 144
gtss_ext_$db                    000044 external static bit(1)                   array unaligned dcl 3-10 ref 34 34
gtss_ext_$get_line              000046 external static entry variable           dcl 3-19 set ref 61 68*
gtss_ext_$gtss_slave_area_seg   000050 external static pointer                  array dcl 3-20 ref 24
gtss_ext_$homedir               000052 external static char(64)                 unaligned dcl 3-22 set ref 223* 312*
gtss_ext_$put_chars             000054 external static entry variable           dcl 3-27 set ref 69*
gtss_ext_$stack_level_          000056 external static fixed bin(17,0)          dcl 3-31 ref 24
gtss_file_attributes                   based           structure                level 1 dcl 11-11
gtss_file_attributes_ptr        000406 automatic       pointer                  initial dcl 11-9 set ref 11-9*
gtss_starCF_$FILE               000042 external static structure                level 1 dcl 2-12
gtss_ust                        000064 external static structure                level 2 dcl 5-16
gtss_ust_ext_$ust               000064 external static structure                level 1 dcl 5-16
gtss_write_starCFP_             000122 constant        entry                    external dcl 6-151 ref 86
hcs_$initiate_count             000024 constant        entry                    external dcl 362 ref 223
hcs_$status_minf                000026 constant        entry                    external dcl 363 ref 312
hcs_$terminate_noname           000030 constant        entry                    external dcl 364 ref 246
hcs_$wakeup                     000032 constant        entry                    external dcl 365 ref 229
ilc                       4            based           bit(18)                  level 2 packed unaligned dcl 4-56 ref 25 280 280
increment                              parameter       fixed bin(17,0)          dcl 19 set ref 9 22*
ioa_                            000034 constant        entry                    external dcl 366 ref 34
iox_$get_line                   000036 constant        entry                    external dcl 367 ref 61
lcfio                   132     000064 external static structure                level 3 dcl 5-16 set ref 59
lcfst                   133     000064 external static structure                level 3 dcl 5-16
lcjid                   135     000064 external static bit(36)                  level 3 dcl 5-16 ref 79 103
lcmpt                   134     000064 external static bit(36)                  level 3 dcl 5-16 ref 70 72
lflg2                    54     000064 external static structure                level 3 dcl 5-16
limit                    22(18) 000064 external static bit(18)                  level 4 packed unaligned dcl 5-16 ref 276
lsize                    22     000064 external static structure                level 3 dcl 5-16
lsprt                    61     000064 external static fixed bin(35,0)          level 3 dcl 5-16 ref 72
lspts                    53     000064 external static fixed bin(35,0)          level 3 dcl 5-16 ref 72
lswth                    21     000064 external static structure                level 3 dcl 5-16
mc                                     based           structure                level 1 dcl 4-12
mcp                             000402 automatic       pointer                  dcl 4-10 set ref 21* 23 105* 161 161 165 295* 301*
mcpp                                   parameter       pointer                  dcl 18 ref 9 21
milsec                          000356 automatic       fixed bin(71,0)          dcl 369 set ref 163* 164
milsec64ths                     000360 automatic       fixed bin(35,0)          dcl 370 set ref 164* 165
mo                        0(18) 000400 automatic       picture(2)               level 2 packed unaligned dcl 386 set ref 158*
month                           000361 automatic       fixed bin(17,0)          dcl 371 set ref 149* 158
my_message                      000362 automatic       fixed bin(71,0)          dcl 372 set ref 227* 229*
n_words                         000364 automatic       fixed bin(24,0)          dcl 373 set ref 58* 59 59 134* 135 173* 174 174
nine_words                             based           bit(36)                  array unaligned dcl 374 set ref 144* 144 146*
no_of_words                            parameter       fixed bin(24,0)          dcl 288 ref 273 276
process_id                      000365 automatic       bit(36)                  dcl 375 set ref 228* 229*
q                        25            based           bit(36)                  level 3 packed unaligned dcl 4-12 set ref 165*
regs                     20            based           structure                level 2 packed unaligned dcl 4-12
return_status             0(18)        based           bit(18)                  level 2 packed unaligned dcl 268 set ref 260* 262*
rp                              000366 automatic       pointer                  initial dcl 376 set ref 223* 225 228 229 246 246*
                                                                                  376*
scu                                    based           structure                level 1 dcl 4-56 in procedure "gtss_drl_t_cfio_"
scu                      30            based           bit(36)                  array level 2 in structure "mc" packed unaligned
                                                                                  dcl 4-12 in procedure "gtss_drl_t_cfio_" set ref
                                                                                  23
scup                            000404 automatic       pointer                  dcl 4-54 set ref 23* 25 280 280
sect_in                 132(18) 000064 external static fixed bin(18,0)          level 4 packed unsigned unaligned dcl 5-16 set ref
                                                                                  83* 83
select_sequence                 000042 external static structure                level 2 dcl 2-12
sender                    4            based           bit(36)                  level 2 packed unaligned dcl 395 ref 228
start_term              133(18) 000064 external static fixed bin(18,0)          level 4 packed unsigned unaligned dcl 5-16 set ref
                                                                                  30* 49* 128* 140* 189* 206* 238* 284* 320* 328*
sub_function                           based           fixed bin(17,0)          level 2 packed unaligned dcl 268 ref 260 260 262
tcdfr                    11     000062 external static bit(36)                  level 2 packed unaligned dcl 3-45 set ref 135* 146
time                            000370 automatic       fixed bin(71,0)          dcl 378 set ref 72* 74* 74 75*
time_of_day                     000372 automatic       fixed bin(71,0)          dcl 379 set ref 149* 163
time_zone                       000374 automatic       char(3)                  dcl 381 set ref 149*
timer_manager_$cpu_call         000040 constant        entry                    external dcl 380 ref 75
tsdgt                    10     000062 external static structure                level 2 dcl 3-45
tsdid                     3     000062 external static bit(72)                  level 2 packed unaligned dcl 3-45 set ref 174
tsdjb                     7     000062 external static fixed bin(35,0)          level 2 packed unaligned dcl 3-45 set ref 311*
tsdmx                           000062 external static structure                level 2 dcl 3-45
type                            000375 automatic       fixed bin(2,0)           dcl 382 set ref 312*
ust_loc                  10     000062 external static fixed bin(18,0)          level 3 packed unsigned unaligned dcl 3-45 set ref
                                                                                  183 193* 200 210*
words                                  based           bit                      unaligned dcl 383 set ref 59* 59 135 174* 174
year                            000376 automatic       fixed bin(17,0)          dcl 384 set ref 149* 157
yr                              000400 automatic       picture(2)               level 2 packed unaligned dcl 386 set ref 157*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
abx                                    internal static fixed bin(17,0)          initial dcl 4-42
apx                                    internal static fixed bin(17,0)          initial dcl 4-42
bbx                                    internal static fixed bin(17,0)          initial dcl 4-42
bpx                                    internal static fixed bin(17,0)          initial dcl 4-42
break_flag                             defined         bit(1)                   unaligned dcl 1-13
copy_on                                defined         bit(1)                   unaligned dcl 1-9
cout_sector                            based           structure                level 1 packed unaligned dcl 8-66
db_                                    defined         bit(1)                   unaligned dcl 7-32
db_CFP_input                           defined         bit(1)                   unaligned dcl 7-32
db_abs                                 defined         bit(1)                   unaligned dcl 7-32
db_attributes_mgr                      defined         bit(1)                   unaligned dcl 7-32
db_dq                                  defined         bit(1)                   unaligned dcl 7-32
db_drl_addmem                          defined         bit(1)                   unaligned dcl 7-32
db_drl_callss                          defined         bit(1)                   unaligned dcl 7-32
db_drl_defil                           defined         bit(1)                   unaligned dcl 7-32
db_drl_dio                             defined         bit(1)                   unaligned dcl 7-32
db_drl_filact                          defined         bit(1)                   unaligned dcl 7-32
db_drl_filsp                           defined         bit(1)                   unaligned dcl 7-32
db_drl_grow                            defined         bit(1)                   unaligned dcl 7-32
db_drl_kin                             defined         bit(1)                   unaligned dcl 7-32
db_drl_morlnk                          defined         bit(1)                   unaligned dcl 7-32
db_drl_msub                            defined         bit(1)                   unaligned dcl 7-32
db_drl_part                            defined         bit(1)                   unaligned dcl 7-32
db_drl_retfil                          defined         bit(1)                   unaligned dcl 7-32
db_drl_rew                             defined         bit(1)                   unaligned dcl 7-32
db_drl_rstswh                          defined         bit(1)                   unaligned dcl 7-32
db_drl_setswh                          defined         bit(1)                   unaligned dcl 7-32
db_drl_switch                          defined         bit(1)                   unaligned dcl 7-32
db_expand_pathname                     defined         bit(1)                   unaligned dcl 7-32
db_filact_funct02                      defined         bit(1)                   unaligned dcl 7-32
db_filact_funct03                      defined         bit(1)                   unaligned dcl 7-32
db_filact_funct04                      defined         bit(1)                   unaligned dcl 7-32
db_filact_funct05                      defined         bit(1)                   unaligned dcl 7-32
db_filact_funct10                      defined         bit(1)                   unaligned dcl 7-32
db_filact_funct11                      defined         bit(1)                   unaligned dcl 7-32
db_filact_funct14                      defined         bit(1)                   unaligned dcl 7-32
db_filact_funct18                      defined         bit(1)                   unaligned dcl 7-32
db_filact_funct19                      defined         bit(1)                   unaligned dcl 7-32
db_filact_funct21                      defined         bit(1)                   unaligned dcl 7-32
db_filact_funct22                      defined         bit(1)                   unaligned dcl 7-32
db_interp_prim                         defined         bit(1)                   unaligned dcl 7-32
db_ios                                 defined         bit(1)                   unaligned dcl 7-32
db_mcfc                                defined         bit(1)                   unaligned dcl 7-32
db_run_subsystem                       defined         bit(1)                   unaligned dcl 7-32
debug_bit_names                        internal static structure                array level 1 unaligned dcl 7-75
dele_on                                defined         bit(1)                   unaligned dcl 1-8
dq_catalog                             based           structure                level 1 packed unaligned dcl 8-23
dq_dib                                 based           structure                level 1 packed unaligned dcl 8-39
dq_header                              based           structure                level 1 packed unaligned dcl 8-6
gtss_CFP_abort_                 000000 constant        entry                    external dcl 6-9
gtss_CFP_break_                 000000 constant        entry                    external dcl 6-10
gtss_abort_dump_                000000 constant        entry                    external dcl 6-14
gtss_abort_subsystem_$not_imp   000000 constant        entry                    external dcl 6-16
gtss_abs_$create_absin          000000 constant        entry                    external dcl 6-21
gtss_abs_$dabt_check            000000 constant        entry                    external dcl 6-22
gtss_abs_$get_drm               000000 constant        entry                    external dcl 6-24
gtss_abs_$get_id                000000 constant        entry                    external dcl 6-23
gtss_abs_logout_banner_         000000 constant        entry                    external dcl 6-18
gtss_adjust_size_               000000 constant        entry                    external dcl 6-25
gtss_aft_$add                   000000 constant        entry                    external dcl 6-26
gtss_aft_$delete                000000 constant        entry                    external dcl 6-27
gtss_aft_$initialize            000000 constant        entry                    external dcl 6-29
gtss_attributes_mgr_$get        000000 constant        entry                    external dcl 6-31
gtss_attributes_mgr_$set        000000 constant        entry                    external dcl 6-32
gtss_bcd_ascii_$lc              000000 constant        entry                    external dcl 6-34
gtss_break_vector_              000000 constant        entry                    external dcl 6-35
gtss_break_vector_$drl_in_progress
                                000000 constant        entry                    external dcl 6-36
gtss_break_vector_$status       000000 constant        entry                    external dcl 6-37
gtss_build_                     000000 constant        entry                    external dcl 6-38
gtss_com_err_                   000000 constant        entry                    external dcl 6-39
gtss_derail_processor_          000000 constant        entry                    external dcl 6-40
gtss_derail_processor_$set      000000 constant        entry                    external dcl 6-41
gtss_dq_$catp                   000000 constant        entry                    external dcl 6-42
gtss_dq_$dibp                   000000 constant        entry                    external dcl 6-44
gtss_dq_$entries_info           000000 constant        entry                    external dcl 6-45
gtss_dq_$hdrp                   000000 constant        entry                    external dcl 6-46
gtss_dq_$mod_js                 000000 constant        entry                    external dcl 6-47
gtss_drl_abort_                 000000 constant        entry                    external dcl 6-50
gtss_drl_addmem_                000000 constant        entry                    external dcl 6-51
gtss_drl_callss_                000000 constant        entry                    external dcl 6-52
gtss_drl_corfil_                000000 constant        entry                    external dcl 6-53
gtss_drl_defil_                 000000 constant        entry                    external dcl 6-54
gtss_drl_defil_$subr            000000 constant        entry                    external dcl 6-55
gtss_drl_dio_                   000000 constant        entry                    external dcl 6-56
gtss_drl_drlimt_                000000 constant        entry                    external dcl 6-57
gtss_drl_drlsav_                000000 constant        entry                    external dcl 6-58
gtss_drl_filact_                000000 constant        entry                    external dcl 6-59
gtss_drl_filsp_                 000000 constant        entry                    external dcl 6-60
gtss_drl_grow_                  000000 constant        entry                    external dcl 6-61
gtss_drl_gwake_                 000000 constant        entry                    external dcl 6-62
gtss_drl_jsts_                  000000 constant        entry                    external dcl 6-63
gtss_drl_kin_                   000000 constant        entry                    external dcl 6-64
gtss_drl_kotnow_                000000 constant        entry                    external dcl 6-65
gtss_drl_kotnow_$gtss_drl_kout_ 000000 constant        entry                    external dcl 6-66
gtss_drl_koutn_                 000000 constant        entry                    external dcl 6-67
gtss_drl_morlnk_                000000 constant        entry                    external dcl 6-68
gtss_drl_msub_                  000000 constant        entry                    external dcl 6-69
gtss_drl_objtim_                000000 constant        entry                    external dcl 6-70
gtss_drl_part_                  000000 constant        entry                    external dcl 6-71
gtss_drl_pasaft_                000000 constant        entry                    external dcl 6-72
gtss_drl_pasdes_                000000 constant        entry                    external dcl 6-73
gtss_drl_pasust_                000000 constant        entry                    external dcl 6-74
gtss_drl_pdio_                  000000 constant        entry                    external dcl 6-75
gtss_drl_prgdes_                000000 constant        entry                    external dcl 6-76
gtss_drl_pseudo_                000000 constant        entry                    external dcl 6-77
gtss_drl_relmem_                000000 constant        entry                    external dcl 6-78
gtss_drl_restor_                000000 constant        entry                    external dcl 6-79
gtss_drl_retfil_                000000 constant        entry                    external dcl 6-80
gtss_drl_return_                000000 constant        entry                    external dcl 6-81
gtss_drl_rew_                   000000 constant        entry                    external dcl 6-82
gtss_drl_rstswh_                000000 constant        entry                    external dcl 6-83
gtss_drl_setlno_                000000 constant        entry                    external dcl 6-84
gtss_drl_setswh_                000000 constant        entry                    external dcl 6-85
gtss_drl_snumb_                 000000 constant        entry                    external dcl 6-86
gtss_drl_spawn_                 000000 constant        entry                    external dcl 6-87
gtss_drl_spawn_$gtss_drl_pasflr_
                                000000 constant        entry                    external dcl 6-88
gtss_drl_stoppt_                000000 constant        entry                    external dcl 6-89
gtss_drl_switch_                000000 constant        entry                    external dcl 6-90
gtss_drl_sysret_                000000 constant        entry                    external dcl 6-91
gtss_drl_t_cfio_                000000 constant        entry                    external dcl 6-92
gtss_drl_t_cmov_                000000 constant        entry                    external dcl 6-93
gtss_drl_t_err_                 000000 constant        entry                    external dcl 6-94
gtss_drl_t_goto_                000000 constant        entry                    external dcl 6-95
gtss_drl_t_linl_                000000 constant        entry                    external dcl 6-96
gtss_drl_t_rscc_                000000 constant        entry                    external dcl 6-97
gtss_drl_tapein_                000000 constant        entry                    external dcl 6-98
gtss_drl_task_                  000000 constant        entry                    external dcl 6-99
gtss_drl_termtp_                000000 constant        entry                    external dcl 6-100
gtss_drl_time_                  000000 constant        entry                    external dcl 6-101
gtss_drun_                      000000 constant        entry                    external dcl 6-102
gtss_dsd_lookup_                000000 constant        entry                    external dcl 6-103
gtss_dsd_process_               000000 constant        entry                    external dcl 6-104
gtss_edit_dsd_                  000000 constant        entry                    external dcl 6-105
gtss_expand_pathname_           000000 constant        entry                    external dcl 6-107
gtss_expand_pathname_$verify_umc
                                000000 constant        entry                    external dcl 6-108
gtss_ext_$SYstarstar_file_no           external static fixed bin(24,0)          dcl 3-33
gtss_ext_$aem                          external static fixed bin(17,0)          dcl 3-8
gtss_ext_$aft                          external static structure                level 1 dcl 3-78
gtss_ext_$bad_drl_rtrn                 external static label variable           dcl 3-9
gtss_ext_$deferred_catalogs_ptr        external static pointer                  dcl 3-11
gtss_ext_$dispose_of_drl               external static label variable           dcl 3-12
gtss_ext_$drl_rtrn                     external static label variable           array dcl 3-13
gtss_ext_$drm_path                     external static char(168)                unaligned dcl 3-14
gtss_ext_$drun_jid                     external static char(5)                  unaligned dcl 3-15
gtss_ext_$event_channel                external static fixed bin(71,0)          dcl 3-16
gtss_ext_$fast_lib                     external static structure                level 1 dcl 3-98
gtss_ext_$finished                     external static label variable           dcl 3-17
gtss_ext_$flags                        external static structure                level 1 dcl 3-60
gtss_ext_$gdb_name                     external static char(8)                  unaligned dcl 3-18
gtss_ext_$hcs_work_area_ptr            external static pointer                  dcl 3-21
gtss_ext_$last_k_was_out               external static bit(1)                   dcl 3-23
gtss_ext_$mcfc                         external static structure                level 1 dcl 3-109
gtss_ext_$pdir                         external static varying char(168)        dcl 3-24
gtss_ext_$popup_from_pi                external static label variable           dcl 3-25
gtss_ext_$ppt                          external static pointer                  dcl 3-94
gtss_ext_$process_type                 external static fixed bin(17,0)          dcl 3-26
gtss_ext_$restart_from_pi              external static label variable           dcl 3-28
gtss_ext_$restart_seg_ptr              external static pointer                  dcl 3-29
gtss_ext_$sig_ptr                      external static pointer                  dcl 3-30
gtss_ext_$statistics                   external static structure                level 1 dcl 3-72
gtss_ext_$suspended_process            external static bit(1)                   unaligned dcl 3-32
gtss_ext_$user_id                      external static varying char(26)         dcl 3-34
gtss_ext_$work_area_ptr                external static pointer                  dcl 3-35
gtss_fail                       000000 stack reference condition                dcl 361
gtss_fault_processor_           000000 constant        entry                    external dcl 6-109
gtss_fault_processor_$timer_runout
                                000000 constant        entry                    external dcl 6-111
gtss_filact_error_status_       000000 constant        entry                    external dcl 6-112
gtss_filact_funct02_            000000 constant        entry                    external dcl 6-113
gtss_filact_funct03_            000000 constant        entry                    external dcl 6-114
gtss_filact_funct04_            000000 constant        entry                    external dcl 6-115
gtss_filact_funct05_            000000 constant        entry                    external dcl 6-116
gtss_filact_funct08_            000000 constant        entry                    external dcl 6-117
gtss_filact_funct10_            000000 constant        entry                    external dcl 6-118
gtss_filact_funct11_            000000 constant        entry                    external dcl 6-119
gtss_filact_funct14_            000000 constant        entry                    external dcl 6-120
gtss_filact_funct18_            000000 constant        entry                    external dcl 6-121
gtss_filact_funct19_            000000 constant        entry                    external dcl 6-122
gtss_filact_funct21_            000000 constant        entry                    external dcl 6-123
gtss_filact_funct22_            000000 constant        entry                    external dcl 6-124
gtss_find_cond_frame_           000000 constant        entry                    external dcl 6-110
gtss_interp_prim_               000000 constant        entry                    external dcl 6-126
gtss_interp_prim_$callss        000000 constant        entry                    external dcl 6-127
gtss_interp_prim_$sysret        000000 constant        entry                    external dcl 6-128
gtss_interp_prim_$t_goto        000000 constant        entry                    external dcl 6-129
gtss_ios_change_size_           000000 constant        entry                    external dcl 6-130
gtss_ios_close_                 000000 constant        entry                    external dcl 6-131
gtss_ios_exchange_names_        000000 constant        entry                    external dcl 6-132
gtss_ios_initialize_            000000 constant        entry                    external dcl 6-133
gtss_ios_io_                    000000 constant        entry                    external dcl 6-134
gtss_ios_open_                  000000 constant        entry                    external dcl 6-135
gtss_ios_position_              000000 constant        entry                    external dcl 6-136
gtss_mcfc_$close                000000 constant        entry                    external dcl 6-139
gtss_mcfc_$delete               000000 constant        entry                    external dcl 6-137
gtss_mcfc_$open                 000000 constant        entry                    external dcl 6-138
gtss_mcfc_empty                 000000 constant        entry                    external dcl 6-106
gtss_mcfc_init_                 000000 constant        entry                    external dcl 6-125
gtss_read_starCFP_              000000 constant        entry                    external dcl 6-140
gtss_read_starCFP_$last_os      000000 constant        entry                    external dcl 6-141
gtss_run_subsystem_             000000 constant        entry                    external dcl 6-142
gtss_run_subsystem_$finish      000000 constant        entry                    external dcl 6-143
gtss_run_subsystem_$restor      000000 constant        entry                    external dcl 6-144
gtss_run_subsystem_$restor_perm 000000 constant        entry                    external dcl 6-145
gtss_set_slave_                 000000 constant        entry                    external dcl 6-146
gtss_set_slave_$load_bar        000000 constant        entry                    external dcl 6-147
gtss_update_safe_store_         000000 constant        entry                    external dcl 6-148
gtss_verify_access_             000000 constant        entry                    external dcl 6-149
gtss_verify_access_$check_forced_access
                                000000 constant        entry                    external dcl 6-150
iox_$put_chars                  000000 constant        entry                    external dcl 368
lbx                                    internal static fixed bin(17,0)          initial dcl 4-42
lpx                                    internal static fixed bin(17,0)          initial dcl 4-42
read_cmd                               internal static bit(6)                   initial unaligned dcl 10-5
sbx                                    internal static fixed bin(17,0)          initial dcl 4-42
scux                                   based           structure                level 1 dcl 4-207
seek_cmd                               internal static bit(6)                   initial unaligned dcl 10-6
spx                                    internal static fixed bin(17,0)          initial dcl 4-42
status                                 automatic       fixed bin(24,0)          dcl 377
talk_on                                defined         bit(1)                   unaligned dcl 1-10
trap_off                               defined         bit(1)                   unaligned dcl 1-12
user_code                              defined         bit(1)                   unaligned dcl 1-11
write_cmd                              internal static bit(6)                   initial unaligned dcl 10-7

NAMES DECLARED BY EXPLICIT CONTEXT.
common_error                    002147 constant        entry                    internal dcl 292 ref 31 50 129 141 190 207 239 285
                                                                                  321 329
function_1                      000375 constant        entry                    internal dcl 40 ref 350
function_2                      000674 constant        entry                    internal dcl 97 ref 350
function_3                      000745 constant        entry                    internal dcl 113 ref 350
function_4                      001277 constant        entry                    internal dcl 169 ref 350
function_5                      001340 constant        entry                    internal dcl 179 ref 350
function_6                      001421 constant        entry                    internal dcl 198 ref 350
function_7                      001474 constant        entry                    internal dcl 217 ref 350
function_8                      002011 constant        entry                    internal dcl 251 ref 350
gtss_drl_t_cfio_                000174 constant        entry                    external dcl 9
init_dq                         002242 constant        entry                    internal dcl 308 ref 119 181
verify_arglist                  002044 constant        entry                    internal dcl 273 ref 43 115 171 219

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 23 54 59 86 86 135 144 161 161 161 161 174 221
                                                                                  221
addrel                                                 builtin function         ref 25 59 144 146 174 221 221 259
divide                                                 builtin function         ref 74 74 163
fixed                                                  builtin function         ref 25 72 276 280 280
length                                                 builtin function         ref 86 86
mod                                                    builtin function         ref 157
null                                                   builtin function         ref 376 11-9 86 86 135 225 246
rel                                                    builtin function         ref 54
unspec                                                 builtin function         ref 165

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      3200        3326    2415        3210
Length      4046    2415       126         503     563           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gtss_drl_t_cfio_                    284 external procedure  is an external procedure.  
function_1                           96 internal procedure  is assigned to an entry variable.  
function_2                           84 internal procedure  is assigned to an entry variable.  
function_3                          110 internal procedure  is assigned to an entry variable.  
function_4                           72 internal procedure  is assigned to an entry variable.  
function_5                           68 internal procedure  is assigned to an entry variable.  
function_6                           68 internal procedure  is assigned to an entry variable.  
function_7                          132 internal procedure  is assigned to an entry variable.  
function_8                           67 internal procedure  is assigned to an entry variable.  
verify_arglist                      100 internal procedure  is called by several nonquick procedures.  
common_error                         88 internal procedure  is called by several nonquick procedures.  
init_dq                              94 internal procedure  is called by several nonquick procedures.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
function_8               000100 arg_list_ptr                function_8
gtss_drl_t_cfio_         000100 ascii_lcjid                 gtss_drl_t_cfio_
                         000102 bit_count                   gtss_drl_t_cfio_
                         000103 code                        gtss_drl_t_cfio_
                         000104 day_of_month                gtss_drl_t_cfio_
                         000105 day_of_week                 gtss_drl_t_cfio_
                         000106 drl_args_ptr                gtss_drl_t_cfio_
                         000110 err_mess                    gtss_drl_t_cfio_
                         000207 error                       gtss_drl_t_cfio_
                         000210 fn                          gtss_drl_t_cfio_
                         000212 function                    gtss_drl_t_cfio_
                         000252 gcos_banner                 gtss_drl_t_cfio_
                         000354 gseg                        gtss_drl_t_cfio_
                         000356 milsec                      gtss_drl_t_cfio_
                         000360 milsec64ths                 gtss_drl_t_cfio_
                         000361 month                       gtss_drl_t_cfio_
                         000362 my_message                  gtss_drl_t_cfio_
                         000364 n_words                     gtss_drl_t_cfio_
                         000365 process_id                  gtss_drl_t_cfio_
                         000366 rp                          gtss_drl_t_cfio_
                         000370 time                        gtss_drl_t_cfio_
                         000372 time_of_day                 gtss_drl_t_cfio_
                         000374 time_zone                   gtss_drl_t_cfio_
                         000375 type                        gtss_drl_t_cfio_
                         000376 year                        gtss_drl_t_cfio_
                         000400 ascii_date                  gtss_drl_t_cfio_
                         000402 mcp                         gtss_drl_t_cfio_
                         000404 scup                        gtss_drl_t_cfio_
                         000406 gtss_file_attributes_ptr    gtss_drl_t_cfio_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_var            call_ext_out_desc   call_ext_out        call_int_this       call_int_other      return
mpfx2               mod_fx1             shorten_stack       ext_entry           int_entry           divide_fx3

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
clock_                        com_err_                      com_err_$suppress_name        convert_ipc_code_
decode_clock_value_           gtss_CFP_input_               gtss_CFP_output_              gtss_abandon_CFP_
gtss_abort_subsystem_         gtss_abs_$abs_equiv           gtss_abs_$cpu_runout          gtss_abs_login_banner_
gtss_aft_$find                gtss_ascii_bcd_               gtss_bcd_ascii_               gtss_dq_$create
gtss_dq_$open_exc             gtss_dq_$open_gen             gtss_write_starCFP_           hcs_$initiate_count
hcs_$status_minf              hcs_$terminate_noname         hcs_$wakeup                   ioa_
iox_$get_line                 timer_manager_$cpu_call

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$invalid_channel  error_table_$noentry          gtss_dfd_ext_$disk_file_data  gtss_ext_$CFP_bits
gtss_ext_$com_reg             gtss_ext_$db                  gtss_ext_$get_line            gtss_ext_$gtss_slave_area_seg
gtss_ext_$homedir             gtss_ext_$put_chars           gtss_ext_$stack_level_        gtss_starCF_$FILE
gtss_ust_ext_$ust




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      9 000170       338 000201       345 000202       346 000205       350 000206       376 000267   11    9 000271
     21 000272        22 000276        23 000300        24 000302        25 000307        26 000315        29 000324
     30 000327        31 000332        32 000336        34 000337        37 000363        38 000373        40 000374
     43 000402        44 000413        45 000416        46 000433        48 000436        49 000441        50 000445
     51 000452        53 000453        54 000457        57 000463        58 000466        59 000470        61 000502
     63 000520        66 000526        68 000527        69 000534        70 000540        72 000542        74 000552
     75 000561        79 000601        83 000605        84 000611        85 000636        86 000645        89 000667
     94 000672        97 000673       100 000701       101 000703       102 000707       103 000713       105 000715
    109 000743       113 000744       115 000752       116 000763       117 000766       119 000771       121 001002
    122 001020       124 001023       125 001032       127 001036       128 001041       129 001045       130 001052
    132 001053       134 001070       135 001073       139 001115       140 001120       141 001123       142 001130
    144 001131       146 001145       149 001150       157 001203       158 001217       159 001226       161 001236
    163 001260       164 001266       165 001272       166 001275       169 001276       171 001304       172 001315
    173 001320       174 001322       176 001336       179 001337       181 001345       183 001355       185 001363
    186 001372       188 001376       189 001401       190 001405       191 001412       193 001413       195 001417
    198 001420       200 001426       202 001432       203 001441       205 001445       206 001450       207 001454
    208 001461       210 001462       213 001466       214 001472       217 001473       219 001501       220 001512
    221 001515       223 001541       225 001613       227 001622       228 001624       229 001627       231 001644
    233 001647       235 001660       237 001715       238 001721       239 001725       240 001732       243 001733
    246 001771       248 002007       251 002010       259 002016       260 002024       262 002036       265 002042
    273 002043       275 002051       276 002053       279 002065       280 002067       283 002127       284 002133
    285 002137       286 002144       289 002145       292 002146       295 002154       301 002213       305 002240
    308 002241       310 002247       311 002252       312 002255       314 002320       316 002325       317 002333
    319 002337       320 002342       321 002346       322 002353       325 002354       326 002363       327 002367
    328 002372       329 002376       330 002403


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
