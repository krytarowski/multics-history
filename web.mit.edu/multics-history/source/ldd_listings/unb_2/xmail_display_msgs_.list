	COMPILATION LISTING OF SEGMENT xmail_display_msgs_
	Compiled by: Multics PL/I Compiler, Release 29, of July 28, 1986
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 10/29/86  1425.3 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*        *                                                         *
        5*        * Copyright (c) 1972 by Massachusetts Institute of        *
        6*        * Technology and Honeywell Information Systems, Inc.      *
        7*        *                                                         *
        8*        *********************************************************** */
        9 
       10 
       11 
       12 
       13 /****^  HISTORY COMMENTS:
       14*  1) change(86-02-06,Blair), approve(86-02-26,MCR7358),
       15*     audit(86-04-18,RBarstad), install(86-05-28,MR12.0-1062):
       16*     Add call to set the seen switch after the message is displayed.
       17*  2) change(86-10-15,Blair), approve(86-10-15,MCR7564),
       18*     audit(86-10-28,RBarstad), install(86-10-29,MR12.0-1201):
       19*     Set the envelope_format_mode to DEFAULT so that the "Sender:" field will
       20*     be displayed when the author and sender of the message are not the same.
       21*     Fixes error_list 129.
       22*                                                   END HISTORY COMMENTS */
       23 
       24 
       25 xmail_display_msgs_: proc (P_mailbox_ptr, P_curr_msgsp, P_iocb_ptr);
       26 
       27 /* Author unknown.
       28*
       29*   83-07-05  DJ Schimke: Modified to use new mail_system calls and version 2
       30*   mailboxes.
       31**/
       32 
       33 /* Parameter */
       34 
       35 	dcl     (P_mailbox_ptr, P_curr_msgsp, P_iocb_ptr) ptr;
       36 
       37 /* Automatic */
       38 
       39 	dcl     code		 fixed bin (35);
       40 	dcl     formfeed		 bit (1) aligned;
       41 	dcl     i			 fixed bin;
       42 	dcl     iocb_ptr		 ptr;
       43 	dcl     message_num		 fixed bin;
       44 
       45 	dcl     1 auto_format_message_options like format_message_options;
       46 	dcl     1 auto_window_position_info like window_position_info;
       47 
       48 /* Builtin */
       49 
       50 	dcl     (addr, null)	 builtin;
       51 
       52 /* Entries */
       53 
       54 	dcl     get_line_length_$switch entry (ptr, fixed bin (35)) returns (fixed bin);
       55 	dcl     ioa_$ioa_switch	 entry () options (variable);
       56 	dcl     iox_$control	 entry (ptr, char (*), ptr, fixed bin (35));
       57 	dcl     mail_system_$acknowledge_message entry (ptr, fixed bin (35));
       58 	dcl     mail_system_$read_message entry (ptr, fixed bin, fixed bin (35));
       59           dcl     mail_system_$set_message_switch entry (ptr, char (4) aligned, bit (1) aligned, fixed bin (35));
       60 	dcl     mlsys_utils_$print_message entry (ptr, ptr, ptr, fixed bin (35));
       61 	dcl     xmail_error_$code_first entry () options (variable);
       62 	dcl     xmail_error_$no_code	 entry () options (variable);
       63 	dcl     xmail_validate_$curr_msgs entry (ptr, fixed bin (35));
       64 	dcl     xmail_validate_$mbx	 entry (ptr, fixed bin (35));
       65 
       66 /* External Static */
       67 
       68 	dcl     error_table_$no_operation fixed bin (35) ext static;
       69 	dcl     xmail_err_$no_curr_msgs fixed bin (35) ext static;
       70 
       71 /* Constant */
       72 
       73 	dcl     ME_CHAR		 char (19) int static options (constant) init ("xmail_display_msgs_");
       74 
       75 	formfeed = "0"b;
       76 	call main ();
       77 	return;
       78 
       79 ff:  entry (P_mailbox_ptr, P_curr_msgsp, P_iocb_ptr);
       80 
       81 	formfeed = "1"b;
       82 	call main ();
       83 	return;
       84 
       85 main: proc ();
       86 	call xmail_validate_$mbx (P_mailbox_ptr, code);
       87 	if code ^= 0
       88 	then call xmail_error_$no_code (code, ME_CHAR, "q", "Invalid mailbox structure.  This is an internal programming error.");
       89 
       90 	if P_curr_msgsp = null
       91 	then call xmail_error_$code_first (xmail_err_$no_curr_msgs, ME_CHAR, "i");
       92 	else do;
       93 	     call xmail_validate_$curr_msgs (P_curr_msgsp, code);
       94 	     if code ^= 0
       95 	     then call xmail_error_$no_code (code, ME_CHAR, "q", "Invalid message structure.  This is an internal programming error.");
       96 	end;
       97 
       98 	mailbox_ptr = P_mailbox_ptr;
       99 	curr_msgsp = P_curr_msgsp;
      100 	iocb_ptr = P_iocb_ptr;
      101 
      102 	auto_window_position_info.version = window_position_info_version;
      103 	call iox_$control (iocb_ptr, "get_window_info", addr (auto_window_position_info), code);
      104 	if code = 0
      105 	then auto_format_message_options.line_length = auto_window_position_info.width;
      106 	else if code = error_table_$no_operation then do;
      107 	     auto_format_message_options.line_length = get_line_length_$switch (iocb_ptr, (0)); /* Output could be going to file */
      108 	     code = 0;
      109 	end;
      110 	else call xmail_error_$no_code (code, ME_CHAR, "q", "Cannot get width of user window. This is an internal programming error.");
      111 
      112 	auto_format_message_options.version = FORMAT_MESSAGE_OPTIONS_VERSION_1;
      113 	auto_format_message_options.envelope_formatting_mode = DEFAULT_FORMATTING_MODE;
      114 	auto_format_message_options.header_formatting_mode = DEFAULT_FORMATTING_MODE;
      115 	auto_format_message_options.redistributions_list_formatting_mode = DEFAULT_FORMATTING_MODE;
      116 	auto_format_message_options.include_body = "1"b;
      117 
      118 	do i = 1 to curr_msgs.count;
      119 	     message_num = curr_msgs.numbers (i);
      120 	     if mailbox.messages (message_num).message_ptr = null
      121 	     then do;
      122 		call mail_system_$read_message (mailbox_ptr, message_num, code);
      123 		if code ^= 0
      124 		then call xmail_error_$no_code (code, ME_CHAR, "l", "Unable to read message ^d. This is an internal programming error.", message_num);
      125 	     end;
      126 	     message_ptr = mailbox.messages (message_num).message_ptr;
      127 	     if ^message.seen
      128 		then call mail_system_$set_message_switch (message_ptr, PER_MESSAGE_SEEN_SWITCH_TYPE, "1"b, (0));
      129 	     if message.must_be_acknowledged
      130 	     then do;
      131 		call mail_system_$acknowledge_message (message_ptr, code);
      132 		if code ^= 0
      133 		then call xmail_error_$no_code (code, ME_CHAR, "l", "Unable to send acknowledgement for message ^d.", message_num);
      134 	     end;
      135 	     call ioa_$ioa_switch (iocb_ptr, "^[^|^]^x#^d^[^x(^d^xline^[s^])^]:", (formfeed & i > 1), message_num, (message.total_lines ^= -1), message.total_lines, (message.total_lines ^= 1));
      136 	     call mlsys_utils_$print_message (message_ptr, addr (auto_format_message_options), iocb_ptr, code);
      137 	     if code ^= 0 then call xmail_error_$no_code (code, ME_CHAR, "l", "Unable to display message ^d.  This is an internal programming error.", message_num);
      138 	     call ioa_$ioa_switch (iocb_ptr, " ---(^d)---", message_num);
      139 	     call iox_$control (iocb_ptr, "reset_more", null (), (0));
      140 	end;					/* do while */
      141 
      142      end main;
      143 
  1     1 /* BEGIN INCLUDE FILE ... mlsys_format_options.incl.pl1 */
  1     2 /* Created:  June 1983 by G. Palter */
  1     3 
  1     4 /* Options for the mlsys_utils_$format_message and mlsys_utils_$print_message entrypoints */
  1     5 
  1     6 dcl  1 format_message_options aligned based (format_message_options_ptr),
  1     7        2 version character (8) unaligned,
  1     8        2 line_length fixed binary,			/* line length to be used to format/print the message */
  1     9        2 envelope_formatting_mode fixed binary,		/* level of detail to be displayed for the envelope ... */
  1    10        2 header_formatting_mode fixed binary,		/* ... for the message ... */
  1    11        2 redistributions_list_formatting_mode fixed binary, /* ... and for the redistributions list ... */
  1    12        2 include_body bit (1) aligned;			/* ON => include message body when formatting/printing;
  1    13*						   OFF => exclude the message body */
  1    14 
  1    15 dcl  FORMAT_MESSAGE_OPTIONS_VERSION_1 character (8) static options (constant) initial ("mlsfmo01");
  1    16 
  1    17 dcl  format_message_options_ptr pointer;
  1    18 
  1    19 
  1    20 /* Defined formatting modes */
  1    21 
  1    22 dcl  (NONE_FORMATTING_MODE		initial (0),	/* exclude this part of the message */
  1    23       BRIEF_FORMATTING_MODE		initial (1),	/* include only minimal information from this part of the
  1    24*						   message; not valid for the envelope */
  1    25       DEFAULT_FORMATTING_MODE		initial (2),	/* include default amount of information from this part */
  1    26       LONG_FORMATTING_MODE		initial (3))	/* include all information from this part of the message */
  1    27 	fixed binary static options (constant);
  1    28 
  1    29 /* END INCLUDE FILE ... mlsys_format_options.incl.pl1 */
      144 
      145 
  2     1 /* BEGIN INCLUDE FILE ... rdm_switch_types.incl.pl1 */
  2     2 
  2     3 
  2     4 /****^  HISTORY COMMENTS:
  2     5*  1) change(86-03-25,Herbst), approve(86-03-25,MCR7367),
  2     6*     audit(86-04-28,Margolin), install(86-05-22,MR12.0-1059):
  2     7*     New file.
  2     8*                                                   END HISTORY COMMENTS */
  2     9 
  2    10 /* Constants for telling rdm_mailbox_interface_$set_message_switch which switch to set */
  2    11 
  2    12 dcl  PER_MESSAGE_SEEN_SWITCH_TYPE char (4) aligned int static options (constant) init ("SEEN");
  2    13 
  2    14 /* END INCLUDE FILE ... rdm_switch_types.incl.pl1 */
      146 
      147 
  3     1 /* BEGIN INCLUDE FILE ... mlsys_mailbox.incl.pl1 */
  3     2 /* Created:  April 1983 by G. Palter */
  3     3 
  3     4 /* Definition of a mailbox as used by the Multics Mail System */
  3     5 
  3     6 dcl  1 mailbox aligned based (mailbox_ptr),
  3     7        2 version character (8) unaligned,
  3     8        2 reserved bit (144),				/* for exclusive use of the mail system */
  3     9        2 mailbox_address pointer,			/* mail system address of this mailbox */
  3    10        2 mailbox_dirname character (168) unaligned,	/* directory containing this mailbox */
  3    11        2 mailbox_ename character (32) unaligned,		/* entry name of this mailbox (includes ".mbx") */
  3    12        2 mailbox_type fixed binary,			/* type of mailbox (see below) */
  3    13        2 mode bit (36),				/* user's effective extended access to this mailbox */
  3    14        2 flags,
  3    15          3 salvaged bit (1) unaligned,			/* ON => this mailbox has been salvaged since last open */
  3    16          3 reserved bit (35) unaligned,			/* for exclusive use of the mail system */
  3    17        2 message_selection_mode fixed binary,		/* types of messages read: all/ordinary/interactive */
  3    18        2 sender_selection_mode fixed binary,		/* whose messages were read: all/own/not-own */
  3    19        2 message_reading_level fixed binary,		/* how much of each message read: keys/messages */
  3    20        2 n_messages fixed binary,			/* total # of messages in this mailbox structure */
  3    21        2 n_ordinary_messages fixed binary,		/* ... # of ordinary messages here */
  3    22        2 n_interactive_messages fixed binary,		/* ... # of interactive messages here */
  3    23        2 n_deleted_messages fixed binary,		/* ... # of messages here marked for later deletion */
  3    24        2 messages (mailbox_n_messages refer (mailbox.n_messages)),
  3    25          3 key bit (72),				/* unique key to read this message if not already read */
  3    26          3 message_ptr pointer;			/* -> the message structure */
  3    27 
  3    28 dcl  MAILBOX_VERSION_2 character (8) static options (constant) initial ("mlsmbx02");
  3    29 
  3    30 dcl  mailbox_ptr pointer;
  3    31 
  3    32 dcl  mailbox_n_messages fixed binary;			/* for exclusive use of the mail system */
  3    33 
  3    34 
  3    35 /* Types of mailboxes distinguished by the mail system */
  3    36 
  3    37 dcl (USER_DEFAULT_MAILBOX	initial (1),		/* the user's default mailbox for receiving mail */
  3    38      USER_LOGBOX		initial (2),		/* the user's logbox */
  3    39      SAVEBOX		initial (3),		/* a savebox */
  3    40      OTHER_MAILBOX		initial (4))		/* any other type of mailbox */
  3    41 	fixed binary static options (constant);
  3    42 
  3    43 /* END INCLUDE FILE ... mlsys_mailbox.incl.pl1 */
      148 
      149 
  4     1 /* BEGIN INCLUDE FILE ... mlsys_message.incl.pl1 */
  4     2 
  4     3 
  4     4 /****^  HISTORY COMMENTS:
  4     5*  1) change(85-12-19,Herbst), approve(86-03-25,MCR7367),
  4     6*     audit(86-04-28,Margolin), install(86-05-22,MR12.0-1059):
  4     7*     Added seen switch to message.
  4     8*                                                   END HISTORY COMMENTS */
  4     9 
  4    10 
  4    11 /* Created:  June 1983 by G. Palter */
  4    12 
  4    13 /* Definition of a message as used by the Multics Mail System */
  4    14 
  4    15 dcl  1 message aligned based (message_ptr),
  4    16        2 version character (8) unaligned,
  4    17        2 reserved bit (144),				/* for exclusive use of the mail system */
  4    18        2 n_reply_references fixed binary,		/* # of messages for which this is a reply */
  4    19        2 n_user_fields fixed binary,			/* # of non-standard header fields in this message */
  4    20        2 n_redistributions fixed binary,		/* # of times this message has been forwarded */
  4    21        2 n_body_sections fixed binary,			/* # of sections in the body */
  4    22        2 flags,
  4    23          3 interactive bit (1) unaligned,		/* ON => this is an interactive message */
  4    24          3 can_be_deleted bit (1) unaligned,		/* ON => the user can delete this message if desired */
  4    25          3 marked_for_deletion bit (1) unaligned,		/* ON => message will be deleted when mailbox is closed */
  4    26          3 must_be_acknowledged bit (1) unaligned,	/* ON => an ACK should be generated when message is read */
  4    27          3 seen bit (1) unaligned,			/* ON => user has printed message at least once */
  4    28          3 reserved bit (31) unaligned,			/* for use by the mail system */
  4    29        2 pad bit (36),
  4    30        2 envelope like message_envelope,		/* who/when/how the message was mailed & delivered */
  4    31        2 header,
  4    32          3 message_id bit (72),			/* ID of this message (same value for all copies) */
  4    33          3 access_class bit (72),			/* AIM access class of this message */
  4    34          3 date_time_created fixed binary (71),		/* date/time this message was composed */
  4    35          3 from pointer,				/* -> address list of author(s) of the message */
  4    36          3 reply_to pointer,				/* -> address list of recipients for reply (if not authors) */
  4    37          3 to pointer,				/* -> address list of primary recipients */
  4    38          3 cc pointer,				/* -> address list of secondary recipients */
  4    39          3 bcc pointer,				/* -> address list of blind recipients */
  4    40          3 subject like message_text_field,		/* subject of the message */
  4    41          3 reply_references pointer,			/* -> list of messages for which this message is a reply */
  4    42          3 user_fields_list pointer,			/* -> list of user-defined fields in this message */
  4    43        2 redistributions_list pointer,			/* -> redistributions list for this message */
  4    44        2 body,
  4    45          3 total_lines fixed binary (21),		/* total # of lines in the body or -1 if indeterminate */
  4    46          3 pad bit (36),
  4    47          3 body_sections (message_n_body_sections refer (message.n_body_sections)) like message_body_section;
  4    48 
  4    49 dcl  MESSAGE_VERSION_2 character (8) static options (constant) initial ("mlsmsg02");
  4    50 
  4    51 dcl  message_subject character (message.header.subject.text_lth) unaligned based (message.header.subject.text_ptr);
  4    52 
  4    53 dcl  message_ptr pointer;
  4    54 
  4    55 dcl (message_n_body_sections, message_trace_n_relays, message_n_redistributions, message_n_user_fields,
  4    56      message_references_list_n_references)
  4    57 	fixed binary;				/* for exclusive use of the mail system */
  4    58 
  4    59 /* Definition of a message envelope: describes when, by whom, and by what route the message was mailed */
  4    60 
  4    61 dcl  1 message_envelope aligned based (message_envelope_ptr),
  4    62        2 date_time_mailed fixed binary (71),		/* date/time this message was entered into the mail system */
  4    63        2 sender pointer,				/* -> address of entity that mailed the message */
  4    64        2 trace pointer,				/* -> message_trace describing how it got here */
  4    65        2 date_time_delivered fixed binary (71),		/* date/time this message was delivered */
  4    66        2 delivered_by pointer,			/* -> address of entity that delivered the message */
  4    67        2 acknowledge_to pointer;			/* -> address of entity to receive ACK when message is read */
  4    68 
  4    69 dcl  message_envelope_ptr pointer;
  4    70 
  4    71 
  4    72 /* Structure used in calls to mail_system_daemon_ entrypoints which manipulate the message envelope */
  4    73 
  4    74 dcl  1 message_envelope_parameter aligned based (message_envelope_parameter_ptr),
  4    75        2 pad pointer,				/* forces even word alignment */
  4    76        2 version character (8) unaligned,
  4    77        2 envelope like message_envelope;
  4    78 
  4    79 dcl  MESSAGE_ENVELOPE_PARAMETER_VERSION_2 character (8) static options (constant) initial ("mlsenv02");
  4    80 
  4    81 dcl  message_envelope_parameter_ptr pointer;
  4    82 
  4    83 
  4    84 /* Definition of a message trace: describes the route and each relay operation by which a message was passed through the
  4    85*   networks to reach this recipient */
  4    86 
  4    87 dcl  1 message_trace aligned based (message_trace_ptr),
  4    88        2 version character (8) unaligned,
  4    89        2 reserved bit (144),				/* ... exclusively for use by the mail system */
  4    90        2 implicit_route pointer,			/* -> an address_route which defines the route it took */
  4    91        2 pad bit (36),
  4    92        2 n_relays fixed binary,			/* # of relay operations required to reach this site */
  4    93        2 relays (message_trace_n_relays refer (message_trace.n_relays)),
  4    94          3 date_time_relayed fixed binary (71),		/* ... when this relay operation took place */
  4    95          3 sending_host character (256) varying,		/* ... the host which relayed the message */
  4    96          3 receiving_host character (256) varying,	/* ... the host which received it */
  4    97          3 communications_media character (32) unaligned,	/* ... medium over which relay took place (ARPA, Tymnet) */
  4    98          3 communications_protocol character (32) unaligned,/* ... low-level protocol used (TCP, X.25) */
  4    99          3 mail_protocol character (32) unaligned,	/* ... mailer protocol used (SMTP, NBS) */
  4   100          3 relay_id bit (72),				/* ... unique ID assigned by receiving system or ""b */
  4   101          3 relay_recipient pointer;			/* ... -> address of recipient as given by sending system */
  4   102 
  4   103 dcl  MESSAGE_TRACE_VERSION_2 character (8) static options (constant) initial ("mlstrc02");
  4   104 
  4   105 dcl  message_trace_ptr pointer;
  4   106 
  4   107 /* Definition of a message's redistributions list */
  4   108 
  4   109 dcl  1 message_redistributions_list aligned based (message.redistributions_list),
  4   110        2 version character (8) unaligned,
  4   111        2 reserved bit (144),				/* ... exclusively for use by the mail system */
  4   112        2 pad bit (36),
  4   113        2 n_redistributions fixed binary,		/* # of redistributions */
  4   114        2 redistributions (message_n_redistributions refer (message_redistributions_list.n_redistributions))
  4   115               like message_redistribution;		/* the redistributions: oldest first */
  4   116 
  4   117 dcl  MESSAGE_REDISTRIBUTIONS_LIST_VERSION_2 character (8) static options (constant) initial ("mlsrl002");
  4   118 
  4   119 
  4   120 /* Definition of a single redistribution (forwarding) of a message */
  4   121 
  4   122 dcl  1 message_redistribution aligned based (message_redistribution_ptr),
  4   123        2 envelope like message_envelope,
  4   124        2 header,
  4   125          3 message_id bit (72),			/* ID of this redistribution (same for all copies) */
  4   126          3 date_time_created fixed binary (71),		/* date/time when this redistribution was made */
  4   127          3 from pointer,				/* -> address list of authors of this redistribution */
  4   128          3 to pointer,				/* -> address list of recipients of the redistribution */
  4   129          3 comment like message_text_field;		/* optional comment associated with the redistribution */
  4   130 
  4   131 dcl  message_redistribution_comment character (message_redistribution.comment.text_lth) unaligned
  4   132 	based (message_redistribution.comment.text_ptr);
  4   133 
  4   134 dcl  message_redistribution_ptr pointer;
  4   135 
  4   136 
  4   137 /* Structure used in calls to mail_system_daemon_ entrypoints which manipulate the redistributions of a message */
  4   138 
  4   139 dcl  1 message_redistribution_parameter aligned based (message_redistribution_parameter_ptr),
  4   140        2 pad pointer,				/* forces even word alignment */
  4   141        2 version character (8) unaligned,
  4   142        2 redistribution like message_redistribution;
  4   143 
  4   144 dcl MESSAGE_REDISTRIBUTION_PARAMETER_VERSION_2 character (8) static options (constant) initial ("mlsdist2");
  4   145 
  4   146 dcl  message_redistribution_parameter_ptr pointer;
  4   147 
  4   148 /* Definition of the list of user-defined fields in a message */
  4   149 
  4   150 dcl  1 message_user_fields_list aligned based (message.user_fields_list),
  4   151        2 version character (8) unaligned,
  4   152        2 reserved bit (144),				/* ... exclusively for use by the mail system */
  4   153        2 pad bit (36),
  4   154        2 n_user_fields fixed binary,			/* # of user-defined fields in the message */
  4   155        2 user_fields (message_n_user_fields refer (message_user_fields_list.n_user_fields))
  4   156               like message_user_field;			/* the actual user-defined fields */
  4   157 
  4   158 dcl  MESSAGE_USER_FIELDS_LIST_VERSION_2 character (8) static options (constant) initial ("mlsufl02");
  4   159 
  4   160 
  4   161 /* Definition of a user defined message header field */
  4   162 
  4   163 dcl  1 message_user_field aligned based (message_user_field_ptr),
  4   164        2 header,
  4   165          3 field_id bit (36) aligned,			/* identifies the purpose of this field */
  4   166          3 field_type fixed binary,			/* type of data contained in this field */
  4   167        2 field_type_variable bit (144);			/* the actual data (see below) */
  4   168 
  4   169 dcl  message_user_field_ptr pointer;
  4   170 
  4   171 
  4   172 /* Defined types of user defined fields */
  4   173 
  4   174 dcl (MESSAGE_TEXT_USER_FIELD		initial (1),	/* content of the field is a text string */
  4   175      MESSAGE_ADDRESS_LIST_USER_FIELD	initial (2),	/* content of the field is an address list */
  4   176      MESSAGE_DATE_USER_FIELD		initial (3),	/* content of the field is a date/time */
  4   177      MESSAGE_INTEGER_USER_FIELD	initial (4))	/* content of the filed is a fixed binary value */
  4   178 	fixed binary static options (constant);
  4   179 
  4   180 
  4   181 /* Structures used to access the data for the different types of user defined fields */
  4   182 
  4   183 dcl  1 message_text_user_field aligned based (message_user_field_ptr),
  4   184        2 header like message_user_field.header,
  4   185        2 text like message_text_field;			/* the message text */
  4   186 
  4   187 dcl  message_text_user_field_text character (message_text_user_field.text.text_lth) unaligned
  4   188 	based (message_text_user_field.text.text_ptr);
  4   189 
  4   190 dcl  1 message_address_list_user_field aligned based (message_user_field_ptr),
  4   191        2 header like message_user_field.header,
  4   192        2 address_list_ptr pointer,			/* -> the address list */
  4   193        2 pad bit (72);
  4   194 
  4   195 dcl  1 message_date_user_field aligned based (message_user_field_ptr),
  4   196        2 header like message_user_field.header,
  4   197        2 date_time fixed binary (71),			/* the clock reading */
  4   198        2 pad bit (72);
  4   199 
  4   200 dcl  1 message_integer_user_field aligned based (message_user_field_ptr),
  4   201        2 header like message_user_field.header,
  4   202        2 value fixed binary (35),			/* the integer value */
  4   203        2 pad bit (108);
  4   204 
  4   205 
  4   206 /* Structure used in calls to mail_system_ entrypoints which manipulate the user-defined fields of a message */
  4   207 
  4   208 dcl  1 message_user_field_parameter aligned based (message_user_field_parameter_ptr),
  4   209        2 pad pointer,				/* forces even word alignment */
  4   210        2 version character (8) unaligned,
  4   211        2 user_field like message_user_field;
  4   212 
  4   213 dcl  MESSAGE_USER_FIELD_PARAMETER_VERSION_2 character (8) static options (constant) initial ("mlsudf02");
  4   214 
  4   215 dcl  message_user_field_parameter_ptr pointer;
  4   216 
  4   217 /* Definition of a list of message references used as the value of message header fields (eg: In-Reply-To) */
  4   218 
  4   219 dcl  1 message_references_list aligned based (message_references_list_ptr),
  4   220        2 version character (8) unaligned,
  4   221        2 reserved bit (144),				/* ... exclusively for use by the mail system */
  4   222        2 pad bit (36),
  4   223        2 n_references fixed binary,			/* # of references in this list */
  4   224        2 references (message_references_list_n_references refer (message_references_list.n_references))
  4   225               like message_reference;			/* the references themselves */
  4   226 
  4   227 dcl  MESSAGE_REFERENCES_LIST_VERSION_2 character (8) static options (constant) initial ("mlsref02");
  4   228 
  4   229 dcl  message_references_list_ptr pointer;
  4   230 
  4   231 
  4   232 /* Definition of a reference to another message */
  4   233 
  4   234 dcl  1 message_reference aligned based (message_reference_ptr),
  4   235        2 message_id bit (72),				/* ID of the other message */
  4   236        2 date_time_created fixed binary (71),		/* date/time the other message was created */
  4   237        2 from pointer,				/* -> address list of authors of the other message */
  4   238        2 subject like message_text_field;		/* subject of the other message */
  4   239 
  4   240 dcl  message_reference_subject character (message_reference.subject.text_lth) unaligned
  4   241 	based (message_reference.subject.text_ptr);
  4   242 
  4   243 dcl  message_reference_ptr pointer;
  4   244 
  4   245 
  4   246 /* Structure used in calls to mail_system_daemon_ entrypoints which manipulate message references */
  4   247 
  4   248 dcl  1 message_reference_parameter aligned based (message_reference_parameter_ptr),
  4   249        2 pad pointer,				/* forces even word alignment */
  4   250        2 version character (8) unaligned,
  4   251        2 reference like message_reference;
  4   252 
  4   253 dcl  MESSAGE_REFERENCE_PARAMETER_VERSION_2 character (8) static options (constant) initial ("mlsref02");
  4   254 
  4   255 dcl  message_reference_parameter_ptr pointer;
  4   256 
  4   257 
  4   258 /* Definition of a text field in a message (Subject, Comment, or a user defined field) */
  4   259 
  4   260 dcl  1 message_text_field aligned based (message_text_field_ptr),
  4   261        2 text_ptr pointer,				/* -> the actual text */
  4   262        2 text_lth fixed binary (21),			/* length of said text */
  4   263        2 flags,
  4   264          3 multiline_text bit (1) unaligned,		/* ON => the text of this field may span multiple lines;
  4   265*						   OFF => the text will always be a single line */
  4   266          3 reserved bit (35) unaligned;			/* for exclusive use of the mail system */
  4   267 
  4   268 dcl  message_text_field_text character (message_text_field.text_lth) unaligned based (message_text_field.text_ptr);
  4   269 
  4   270 dcl  message_text_field_ptr pointer;
  4   271 
  4   272 /* Definition of a section of the body of a message */
  4   273 
  4   274 dcl  1 message_body_section aligned based (message_body_section_ptr),
  4   275        2 header,
  4   276          3 section_type fixed binary,			/* type of "text" stored in this section */
  4   277          3 section_n_lines fixed binary (21),		/* # of lines in this section or -1 if indeterminate */
  4   278        2 section_type_variable bit (144);		/* the actual data (see below) */
  4   279 
  4   280 dcl  message_body_section_ptr pointer;
  4   281 
  4   282 
  4   283 /* Defined types of message body sections */
  4   284 
  4   285 dcl (MESSAGE_PREFORMATTED_BODY_SECTION	     initial (1),	/* text formatted by the authors/sender */
  4   286      MESSAGE_BIT_STRING_BODY_SECTION	     initial (2))	/* arbitrary bit string */
  4   287 	fixed binary static options (constant);
  4   288 
  4   289 
  4   290 /* Structures used to access the data for the different types of message body sections */
  4   291 
  4   292 dcl  1 message_preformatted_body_section aligned based (message_body_section_ptr),
  4   293        2 header like message_body_section.header,
  4   294        2 text_ptr pointer,				/* -> the text */
  4   295        2 text_lth fixed binary (21),			/* length of said text in characters */
  4   296        2 reserved bit (36);				/* for exclusive use of the mail system */
  4   297 
  4   298 dcl  message_preformatted_body_section_text character (message_preformatted_body_section.text_lth) unaligned
  4   299 	based (message_preformatted_body_section.text_ptr);
  4   300 
  4   301 dcl  1 message_bit_string_body_section aligned based (message_body_section_ptr),
  4   302        2 header like message_body_section.header,
  4   303        2 bit_string_ptr pointer,			/* -> the bit string */
  4   304        2 bit_string_lth fixed binary (24),		/* length of said bit string in bits (obviously) */
  4   305        2 reserved bit (36);				/* for exclusive use of the mail system */
  4   306 
  4   307 dcl  message_bit_string_body_section_bit_string bit (message_bit_string_body_section.bit_string_lth) unaligned
  4   308 	based (message_bit_string_body_section.bit_string_ptr);
  4   309 
  4   310 
  4   311 /* Structure used in calls to mail_system_ entrypoints which manipulate the sections of a message's body */
  4   312 
  4   313 dcl  1 message_body_section_parameter aligned based (message_body_section_parameter_ptr),
  4   314        2 pad pointer,				/* forces even word alignment */
  4   315        2 version character (8) unaligned,
  4   316        2 section like message_body_section;
  4   317 
  4   318 dcl  MESSAGE_BODY_SECTION_PARAMETER_VERSION_2 character (8) static options (constant) initial ("mlsmbs02");
  4   319 
  4   320 dcl  message_body_section_parameter_ptr pointer;
  4   321 
  4   322 /* END INCLUDE FILE ... mlsys_message.incl.pl1 */
      150 
      151 
  5     1 /* BEGIN INCLUDE FILE ... window_control_info.incl.pl1 JRD  */
  5     2 /* format: style3 */
  5     3 
  5     4 /* Modified 26 January 1982 by William York to add the set_more_handler
  5     5*   and reset_more_handler control orders. */
  5     6 /* Modified October 1982 by WMY to add set and get_token_characters,
  5     7*   set and get_more_prompt. */
  5     8 /* Modified February 1983 by WMY to add the line_editor_key_binding_info
  5     9*   structure. */
  5    10 /* Modified 30 September 1983 by Jon A. Rochlis to add the origin.column for
  5    11*   partial screen width windows. */
  5    12 /* Modified 9 October 1983 by JR to add version 1 window_edit_line_info. 
  5    13*   This should be removed when window_info.incl.pl1 is created. */
  5    14 /* Modified 29 February 1984 by Barmar to add version 1 
  5    15*   get_editor_key_bindings_info. */
  5    16 /* Modified 1 March 1984 by Barmar to add version 1 
  5    17*   set_editor_key_bindings_info. */
  5    18 /* Modified 2 March 1984 by Barmar to upgrade to version 3
  5    19*   line_editor_key_bindings_info, which includes the name, description, and
  5    20*   info path */
  5    21 
  5    22 /* structure for the set_window_info and get_window_info
  5    23*   control orders. */
  5    24 
  5    25 dcl	1 window_position_info
  5    26 			based (window_position_info_ptr),
  5    27 	  2 version	fixed bin,
  5    28 	  2 origin,
  5    29 	    3 column	fixed bin,
  5    30 	    3 line	fixed bin,
  5    31 	  2 extent,
  5    32 	    3 width	fixed bin,
  5    33 	    3 height	fixed bin;
  5    34 
  5    35 dcl	(window_position_info_version, window_position_info_version_1)
  5    36 			fixed bin internal static init (1) options (constant);
  5    37 dcl	window_position_info_ptr
  5    38 			pointer;
  5    39 
  5    40 /* structure for the set_window_status and get_window_status
  5    41*   control orders */
  5    42 
  5    43 declare	window_status_info_ptr
  5    44 			pointer;
  5    45 declare	1 window_status_info
  5    46 			aligned based (window_status_info_ptr),
  5    47 	  2 version	fixed bin,
  5    48 	  2 status_string	bit (36) aligned;		/* string (window_status) */
  5    49 /* see window_status.incl.pl1 for the contents of this string */
  5    50 
  5    51 
  5    52 declare	(window_status_version, window_status_version_1)
  5    53 			fixed bin internal static init (1) options (constant);
  5    54 
  5    55 /* info structure for the set_more_responses and get_more_responses control 
  5    56*   orders */
  5    57 
  5    58 
  5    59 dcl	1 more_responses_info
  5    60 			aligned based (more_responses_info_ptr),
  5    61 	  2 version	fixed bin,
  5    62 	  2 n_yeses	fixed bin, /* how many valid characters in the strings below */
  5    63 	  2 n_noes	fixed bin,
  5    64 	  2 yeses		char (32) unaligned,
  5    65 	  2 noes		char (32) unaligned;
  5    66 
  5    67 dcl	(more_responses_info_version_1, more_responses_version)
  5    68 			fixed bin internal static init (1) options (constant);
  5    69 dcl	more_responses_info_ptr
  5    70 			pointer;
  5    71 
  5    72 /* structure for the set_break_table and get_break_table
  5    73*   control orders */
  5    74 
  5    75 declare	break_table_ptr	pointer;
  5    76 declare	1 break_table_info	aligned based (break_table_ptr),
  5    77 	  2 version	fixed bin,
  5    78 	  2 breaks	(0:127) bit (1) unaligned;
  5    79 
  5    80 declare	(break_table_info_version, break_table_info_version_1)
  5    81 			fixed bin init (1) internal static options (constant);
  5    82 
  5    83 declare	1 more_handler_info aligned based (more_handler_info_ptr),
  5    84 	  2 version	fixed bin,
  5    85 	  2 flags		unaligned,
  5    86 	    3 old_handler_valid
  5    87 			bit(1),
  5    88 	    3 pad		bit(35),
  5    89 	  2 more_handler	entry (pointer, bit(1) aligned),
  5    90 	  2 old_more_handler entry (pointer, bit(1) aligned);
  5    91 
  5    92 declare	more_handler_info_ptr pointer;
  5    93 
  5    94 declare	(more_handler_info_version, more_handler_info_version_3)
  5    95 			fixed bin internal static options (constant) init (3);
  5    96 			
  5    97 declare   1 token_characters_info aligned based (token_characters_info_ptr),
  5    98 	  2 version	char(8),
  5    99 	  2 token_character_count
  5   100 			fixed bin,
  5   101 	  2 token_characters
  5   102 			char (128) unaligned;
  5   103 
  5   104 declare   token_characters_info_ptr pointer;
  5   105 
  5   106 declare   token_characters_info_version_1 char(8) internal static options (constant) init ("wtci0001");
  5   107 
  5   108 declare   1 more_prompt_info	aligned based (more_prompt_info_ptr),
  5   109 	  2 version	char(8),
  5   110 	  2 more_prompt	char(80);
  5   111 
  5   112 declare   more_prompt_info_ptr pointer;
  5   113 
  5   114 declare   more_prompt_info_version_1 char(8) static options (constant) init ("wsmp0001");
  5   115 
  5   116 /* Line editor stuff ... */
  5   117 
  5   118 dcl  line_editor_key_binding_info_ptr
  5   119 			pointer;
  5   120 
  5   121 dcl  line_editor_binding_count
  5   122 			fixed bin;
  5   123 dcl  line_editor_longest_sequence
  5   124 			fixed bin;
  5   125 /* For each binding, action defines what to do for that sequence. Constants
  5   126*   are defined in window_editor_values.incl.pl1. Only if action is set to
  5   127*   EXTERNAL_ROUTINE does the editor_routine entry variable get examined. */
  5   128 
  5   129 dcl  1 line_editor_key_binding_info
  5   130 			aligned based (line_editor_key_binding_info_ptr),
  5   131        2 version		char(8),
  5   132        2 binding_count	fixed bin,
  5   133        2 longest_sequence	fixed bin,
  5   134        2 bindings		(line_editor_binding_count refer
  5   135 			(line_editor_key_binding_info.binding_count)),
  5   136          3 sequence		char(line_editor_longest_sequence refer
  5   137 			(line_editor_key_binding_info.longest_sequence)) varying,
  5   138          3 action		fixed bin,
  5   139          3 numarg_action      fixed binary,
  5   140          3 editor_routine	entry (pointer, fixed bin(35)),
  5   141          3 name		char (64) varying unaligned,
  5   142          3 description	char (256) varying unaligned,
  5   143          3 info_path	unaligned,
  5   144 	 4 info_dir	char (168),
  5   145 	 4 info_entry	char (32);
  5   146 	
  5   147 
  5   148 dcl  line_editor_key_binding_info_version_3
  5   149 			char(8) static options (constant) init ("lekbi003");
  5   150 
  5   151 dcl 1 get_editor_key_bindings_info	aligned based (get_editor_key_bindings_info_ptr),
  5   152       2 version			char (8),
  5   153       2 flags,
  5   154         3 entire_state		bit (1) unaligned,
  5   155         3 mbz			bit (35) unaligned,
  5   156       2 key_binding_info_ptr		ptr,
  5   157       2 entire_state_ptr		ptr;
  5   158 
  5   159 dcl get_editor_key_bindings_info_ptr	ptr;
  5   160 dcl get_editor_key_bindings_info_version_1 char (8) int static options (constant) init ("gekbi_01");
  5   161 
  5   162 dcl 1 set_editor_key_bindings_info	aligned
  5   163 				based (set_editor_key_bindings_info_ptr),
  5   164       2 version			char (8),
  5   165       2 flags,
  5   166         3 replace			bit (1) unaligned,
  5   167         3 update			bit (1) unaligned,
  5   168         3 mbz			bit (34) unaligned,
  5   169       2 key_binding_info_ptr		ptr;
  5   170 
  5   171 dcl set_editor_key_bindings_info_ptr	ptr;
  5   172 dcl set_editor_key_bindings_info_version_1 char (8) int static options (constant) init ("sekbi_01");
  5   173 
  5   174 /* This should be moved to window_info.incl.pl1 when that include file is
  5   175*   created.  JR 2/1/84 */
  5   176 
  5   177 dcl	1 window_edit_line_info
  5   178 			based (window_edit_line_info_ptr),
  5   179 	  2 version	char (8),
  5   180 	  2 line_ptr	ptr,
  5   181 	  2 line_length	fixed bin (21);		/* later we will hack initial cursor position, key bindings, etc. */
  5   182 
  5   183 dcl	window_edit_line_info_version_1
  5   184 			char (8) static options (constant) init ("wedl0001");
  5   185 
  5   186 dcl	window_edit_line_info_ptr
  5   187 			ptr;
  5   188 
  5   189 /* END INCLUDE FILE window_control_info.incl.pl1 */
      152 
      153 
  6     1 /* Created 06/17/81 by Suzanne Krupp */
  6     2 
  6     3 dcl n_messages fixed bin;
  6     4 dcl MSG_STRUCT_VERSION_1 fixed bin int static options(constant) init(1);
  6     5 
  6     6 dcl curr_msgsp ptr;
  6     7 
  6     8 dcl 1 curr_msgs based(curr_msgsp),
  6     9       2 version fixed bin,
  6    10       2 count fixed bin,
  6    11       2 numbers (n_messages refer(curr_msgs.count)) fixed bin;
  6    12 
  6    13 dcl nonexist_msgsp ptr;
  6    14 
  6    15 dcl 1 nonexist_msgs based(nonexist_msgsp),
  6    16       2 version fixed bin,
  6    17       2 count fixed bin,
  6    18       2 numbers (n_messages refer(nonexist_msgs.count)) fixed bin;
  6    19 
  6    20 dcl msg_structp ptr;
  6    21 
  6    22 dcl 1 msg_struct based(msg_structp),
  6    23       2 version fixed bin,
  6    24       2 count fixed bin,
  6    25       2 numbers(n_messages refer(msg_struct.count)) fixed bin;
      155 
      156      end xmail_display_msgs_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/29/86  1425.1  xmail_display_msgs_.pl1           >spec>install>1201>xmail_display_msgs_.pl1
144          1    10/27/83  2104.2  mlsys_format_options.incl.pl1     >ldd>include>mlsys_format_options.incl.pl1
146          2    05/22/86  1225.8  rdm_switch_types.incl.pl1         >ldd>include>rdm_switch_types.incl.pl1
148          3    10/27/83  2104.2  mlsys_mailbox.incl.pl1            >ldd>include>mlsys_mailbox.incl.pl1
150          4    05/22/86  1225.8  mlsys_message.incl.pl1            >ldd>include>mlsys_message.incl.pl1
152          5    09/12/84  0916.7  window_control_info.incl.pl1      >ldd>include>window_control_info.incl.pl1
154          6    06/08/82  1329.4  xmail_curr_msg_info.incl.pl1      >ldd>include>xmail_curr_msg_info.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
DEFAULT_FORMATTING_MODE                constant        fixed bin(17,0)          initial dcl 1-22 ref 113 114 115
FORMAT_MESSAGE_OPTIONS_VERSION_1
                                000002 constant        char(8)                  initial unaligned dcl 1-15 ref 112
ME_CHAR                         000004 constant        char(19)                 initial unaligned dcl 73 set ref 87* 90* 94* 110*
                                                                                  123* 132* 137*
PER_MESSAGE_SEEN_SWITCH_TYPE    000000 constant        char(4)                  initial dcl 2-12 set ref 127*
P_curr_msgsp                           parameter       pointer                  dcl 35 set ref 25 79 90 93* 99
P_iocb_ptr                             parameter       pointer                  dcl 35 ref 25 79 100
P_mailbox_ptr                          parameter       pointer                  dcl 35 set ref 25 79 86* 98
addr                                                   builtin function         dcl 50 ref 103 103 136 136
auto_format_message_options     000107 automatic       structure                level 1 unaligned dcl 45 set ref 136 136
auto_window_position_info       000116 automatic       structure                level 1 unaligned dcl 46 set ref 103 103
body                     62            based           structure                level 2 dcl 4-15
code                            000100 automatic       fixed bin(35,0)          dcl 39 set ref 86* 87 87* 93* 94 94* 103* 104 106
                                                                                  108* 110* 122* 123 123* 131* 132 132* 136* 137
                                                                                  137*
count                     1            based           fixed bin(17,0)          level 2 dcl 6-8 ref 118
curr_msgs                              based           structure                level 1 unaligned dcl 6-8
curr_msgsp                      000130 automatic       pointer                  dcl 6-6 set ref 99* 118 119
envelope_formatting_mode
                          3     000107 automatic       fixed bin(17,0)          level 2 dcl 45 set ref 113*
error_table_$no_operation       000036 external static fixed bin(35,0)          dcl 68 ref 106
extent                    3     000116 automatic       structure                level 2 unaligned dcl 46
flags                    12            based           structure                level 2 dcl 4-15
format_message_options                 based           structure                level 1 dcl 1-6
formfeed                        000101 automatic       bit(1)                   dcl 40 set ref 75* 81* 135
get_line_length_$switch         000010 constant        entry                    external dcl 54 ref 107
header                    4            based           structure                level 3 in structure
                                                                                  "message_body_section_parameter" dcl 4-313
                                                                                  in procedure "xmail_display_msgs_"
header                                 based           structure                level 2 in structure "message_user_field" dcl 4-163
                                                                                  in procedure "xmail_display_msgs_"
header                    4            based           structure                level 3 in structure "message_user_field_parameter"
                                                                                  dcl 4-208 in procedure "xmail_display_msgs_"
header                   10            based           structure                array level 3 in structure
                                                                                  "message_user_fields_list" dcl 4-150 in procedure
                                                                                  "xmail_display_msgs_"
header                   64            based           structure                array level 4 in structure "message" dcl 4-15
                                                                                  in procedure "xmail_display_msgs_"
header                                 based           structure                level 2 in structure "message_body_section"
                                                                                  dcl 4-274 in procedure "xmail_display_msgs_"
header_formatting_mode
                          4     000107 automatic       fixed bin(17,0)          level 2 dcl 45 set ref 114*
i                               000102 automatic       fixed bin(17,0)          dcl 41 set ref 118* 119 135*
include_body              6     000107 automatic       bit(1)                   level 2 dcl 45 set ref 116*
ioa_$ioa_switch                 000012 constant        entry                    external dcl 55 ref 135 138
iocb_ptr                        000104 automatic       pointer                  dcl 42 set ref 100* 103* 107* 135* 136* 138* 139*
iox_$control                    000014 constant        entry                    external dcl 56 ref 103 139
line_length               2     000107 automatic       fixed bin(17,0)          level 2 dcl 45 set ref 104* 107*
mail_system_$acknowledge_message
                                000016 constant        entry                    external dcl 57 ref 131
mail_system_$read_message       000020 constant        entry                    external dcl 58 ref 122
mail_system_$set_message_switch 000022 constant        entry                    external dcl 59 ref 127
mailbox                                based           structure                level 1 dcl 3-6
mailbox_ptr                     000124 automatic       pointer                  dcl 3-30 set ref 98* 120 122* 126
message                                based           structure                level 1 dcl 4-15
message_body_section                   based           structure                level 1 dcl 4-274
message_envelope                       based           structure                level 1 dcl 4-61
message_num                     000106 automatic       fixed bin(17,0)          dcl 43 set ref 119* 120 122* 123* 126 132* 135* 137*
                                                                                  138*
message_ptr             106            based           pointer                  array level 3 in structure "mailbox" dcl 3-6
                                                                                  in procedure "xmail_display_msgs_" ref 120 126
message_ptr                     000126 automatic       pointer                  dcl 4-53 in procedure "xmail_display_msgs_" set ref
                                                                                  126* 127 127* 129 131* 135 135 135 136*
message_redistribution                 based           structure                level 1 dcl 4-122
message_reference                      based           structure                level 1 dcl 4-234
message_text_field                     based           structure                level 1 dcl 4-260
message_user_field                     based           structure                level 1 dcl 4-163
messages                104            based           structure                array level 2 dcl 3-6
mlsys_utils_$print_message      000024 constant        entry                    external dcl 60 ref 136
must_be_acknowledged     12(03)        based           bit(1)                   level 3 packed unaligned dcl 4-15 ref 129
null                                                   builtin function         dcl 50 ref 90 120 139 139
numbers                   2            based           fixed bin(17,0)          array level 2 dcl 6-8 ref 119
redistributions_list_formatting_mode
                          5     000107 automatic       fixed bin(17,0)          level 2 dcl 45 set ref 115*
seen                     12(04)        based           bit(1)                   level 3 packed unaligned dcl 4-15 ref 127
total_lines              62            based           fixed bin(21,0)          level 3 dcl 4-15 set ref 135 135* 135
version                         000116 automatic       fixed bin(17,0)          level 2 in structure "auto_window_position_info"
                                                                                  dcl 46 in procedure "xmail_display_msgs_" set ref
                                                                                  102*
version                         000107 automatic       char(8)                  level 2 in structure "auto_format_message_options"
                                                                                  packed unaligned dcl 45 in procedure
                                                                                  "xmail_display_msgs_" set ref 112*
width                     3     000116 automatic       fixed bin(17,0)          level 3 dcl 46 set ref 104
window_position_info                   based           structure                level 1 unaligned dcl 5-25
window_position_info_version           constant        fixed bin(17,0)          initial dcl 5-35 ref 102
xmail_err_$no_curr_msgs         000040 external static fixed bin(35,0)          dcl 69 set ref 90*
xmail_error_$code_first         000026 constant        entry                    external dcl 61 ref 90
xmail_error_$no_code            000030 constant        entry                    external dcl 62 ref 87 94 110 123 132 137
xmail_validate_$curr_msgs       000032 constant        entry                    external dcl 63 ref 93
xmail_validate_$mbx             000034 constant        entry                    external dcl 64 ref 86

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
BRIEF_FORMATTING_MODE                  internal static fixed bin(17,0)          initial dcl 1-22
LONG_FORMATTING_MODE                   internal static fixed bin(17,0)          initial dcl 1-22
MAILBOX_VERSION_2                      internal static char(8)                  initial unaligned dcl 3-28
MESSAGE_ADDRESS_LIST_USER_FIELD        internal static fixed bin(17,0)          initial dcl 4-174
MESSAGE_BIT_STRING_BODY_SECTION        internal static fixed bin(17,0)          initial dcl 4-285
MESSAGE_BODY_SECTION_PARAMETER_VERSION_2
                                       internal static char(8)                  initial unaligned dcl 4-318
MESSAGE_DATE_USER_FIELD                internal static fixed bin(17,0)          initial dcl 4-174
MESSAGE_ENVELOPE_PARAMETER_VERSION_2   internal static char(8)                  initial unaligned dcl 4-79
MESSAGE_INTEGER_USER_FIELD             internal static fixed bin(17,0)          initial dcl 4-174
MESSAGE_PREFORMATTED_BODY_SECTION      internal static fixed bin(17,0)          initial dcl 4-285
MESSAGE_REDISTRIBUTIONS_LIST_VERSION_2 internal static char(8)                  initial unaligned dcl 4-117
MESSAGE_REDISTRIBUTION_PARAMETER_VERSION_2
                                       internal static char(8)                  initial unaligned dcl 4-144
MESSAGE_REFERENCES_LIST_VERSION_2      internal static char(8)                  initial unaligned dcl 4-227
MESSAGE_REFERENCE_PARAMETER_VERSION_2  internal static char(8)                  initial unaligned dcl 4-253
MESSAGE_TEXT_USER_FIELD                internal static fixed bin(17,0)          initial dcl 4-174
MESSAGE_TRACE_VERSION_2                internal static char(8)                  initial unaligned dcl 4-103
MESSAGE_USER_FIELDS_LIST_VERSION_2     internal static char(8)                  initial unaligned dcl 4-158
MESSAGE_USER_FIELD_PARAMETER_VERSION_2 internal static char(8)                  initial unaligned dcl 4-213
MESSAGE_VERSION_2                      internal static char(8)                  initial unaligned dcl 4-49
MSG_STRUCT_VERSION_1                   internal static fixed bin(17,0)          initial dcl 6-4
NONE_FORMATTING_MODE                   internal static fixed bin(17,0)          initial dcl 1-22
OTHER_MAILBOX                          internal static fixed bin(17,0)          initial dcl 3-37
SAVEBOX                                internal static fixed bin(17,0)          initial dcl 3-37
USER_DEFAULT_MAILBOX                   internal static fixed bin(17,0)          initial dcl 3-37
USER_LOGBOX                            internal static fixed bin(17,0)          initial dcl 3-37
break_table_info                       based           structure                level 1 dcl 5-76
break_table_info_version               internal static fixed bin(17,0)          initial dcl 5-80
break_table_info_version_1             internal static fixed bin(17,0)          initial dcl 5-80
break_table_ptr                        automatic       pointer                  dcl 5-75
format_message_options_ptr             automatic       pointer                  dcl 1-17
get_editor_key_bindings_info           based           structure                level 1 dcl 5-151
get_editor_key_bindings_info_ptr       automatic       pointer                  dcl 5-159
get_editor_key_bindings_info_version_1 internal static char(8)                  initial unaligned dcl 5-160
line_editor_binding_count              automatic       fixed bin(17,0)          dcl 5-121
line_editor_key_binding_info           based           structure                level 1 dcl 5-129
line_editor_key_binding_info_ptr       automatic       pointer                  dcl 5-118
line_editor_key_binding_info_version_3 internal static char(8)                  initial unaligned dcl 5-148
line_editor_longest_sequence           automatic       fixed bin(17,0)          dcl 5-123
mailbox_n_messages                     automatic       fixed bin(17,0)          dcl 3-32
message_address_list_user_field        based           structure                level 1 dcl 4-190
message_bit_string_body_section        based           structure                level 1 dcl 4-301
message_bit_string_body_section_bit_string
                                       based           bit                      unaligned dcl 4-307
message_body_section_parameter         based           structure                level 1 dcl 4-313
message_body_section_parameter_ptr     automatic       pointer                  dcl 4-320
message_body_section_ptr               automatic       pointer                  dcl 4-280
message_date_user_field                based           structure                level 1 dcl 4-195
message_envelope_parameter             based           structure                level 1 dcl 4-74
message_envelope_parameter_ptr         automatic       pointer                  dcl 4-81
message_envelope_ptr                   automatic       pointer                  dcl 4-69
message_integer_user_field             based           structure                level 1 dcl 4-200
message_n_body_sections                automatic       fixed bin(17,0)          dcl 4-55
message_n_redistributions              automatic       fixed bin(17,0)          dcl 4-55
message_n_user_fields                  automatic       fixed bin(17,0)          dcl 4-55
message_preformatted_body_section      based           structure                level 1 dcl 4-292
message_preformatted_body_section_text based           char                     unaligned dcl 4-298
message_redistribution_comment         based           char                     unaligned dcl 4-131
message_redistribution_parameter       based           structure                level 1 dcl 4-139
message_redistribution_parameter_ptr   automatic       pointer                  dcl 4-146
message_redistribution_ptr             automatic       pointer                  dcl 4-134
message_redistributions_list           based           structure                level 1 dcl 4-109
message_reference_parameter            based           structure                level 1 dcl 4-248
message_reference_parameter_ptr        automatic       pointer                  dcl 4-255
message_reference_ptr                  automatic       pointer                  dcl 4-243
message_reference_subject              based           char                     unaligned dcl 4-240
message_references_list                based           structure                level 1 dcl 4-219
message_references_list_n_references   automatic       fixed bin(17,0)          dcl 4-55
message_references_list_ptr            automatic       pointer                  dcl 4-229
message_subject                        based           char                     unaligned dcl 4-51
message_text_field_ptr                 automatic       pointer                  dcl 4-270
message_text_field_text                based           char                     unaligned dcl 4-268
message_text_user_field                based           structure                level 1 dcl 4-183
message_text_user_field_text           based           char                     unaligned dcl 4-187
message_trace                          based           structure                level 1 dcl 4-87
message_trace_n_relays                 automatic       fixed bin(17,0)          dcl 4-55
message_trace_ptr                      automatic       pointer                  dcl 4-105
message_user_field_parameter           based           structure                level 1 dcl 4-208
message_user_field_parameter_ptr       automatic       pointer                  dcl 4-215
message_user_field_ptr                 automatic       pointer                  dcl 4-169
message_user_fields_list               based           structure                level 1 dcl 4-150
more_handler_info                      based           structure                level 1 dcl 5-83
more_handler_info_ptr                  automatic       pointer                  dcl 5-92
more_handler_info_version              internal static fixed bin(17,0)          initial dcl 5-94
more_handler_info_version_3            internal static fixed bin(17,0)          initial dcl 5-94
more_prompt_info                       based           structure                level 1 dcl 5-108
more_prompt_info_ptr                   automatic       pointer                  dcl 5-112
more_prompt_info_version_1             internal static char(8)                  initial unaligned dcl 5-114
more_responses_info                    based           structure                level 1 dcl 5-59
more_responses_info_ptr                automatic       pointer                  dcl 5-69
more_responses_info_version_1          internal static fixed bin(17,0)          initial dcl 5-67
more_responses_version                 internal static fixed bin(17,0)          initial dcl 5-67
msg_struct                             based           structure                level 1 unaligned dcl 6-22
msg_structp                            automatic       pointer                  dcl 6-20
n_messages                             automatic       fixed bin(17,0)          dcl 6-3
nonexist_msgs                          based           structure                level 1 unaligned dcl 6-15
nonexist_msgsp                         automatic       pointer                  dcl 6-13
set_editor_key_bindings_info           based           structure                level 1 dcl 5-162
set_editor_key_bindings_info_ptr       automatic       pointer                  dcl 5-171
set_editor_key_bindings_info_version_1 internal static char(8)                  initial unaligned dcl 5-172
token_characters_info                  based           structure                level 1 dcl 5-97
token_characters_info_ptr              automatic       pointer                  dcl 5-104
token_characters_info_version_1        internal static char(8)                  initial unaligned dcl 5-106
window_edit_line_info                  based           structure                level 1 unaligned dcl 5-177
window_edit_line_info_ptr              automatic       pointer                  dcl 5-186
window_edit_line_info_version_1        internal static char(8)                  initial unaligned dcl 5-183
window_position_info_ptr               automatic       pointer                  dcl 5-37
window_position_info_version_1         internal static fixed bin(17,0)          initial dcl 5-35
window_status_info                     based           structure                level 1 dcl 5-45
window_status_info_ptr                 automatic       pointer                  dcl 5-43
window_status_version                  internal static fixed bin(17,0)          initial dcl 5-52
window_status_version_1                internal static fixed bin(17,0)          initial dcl 5-52

NAMES DECLARED BY EXPLICIT CONTEXT.
ff                              000240 constant        entry                    external dcl 79
main                            000251 constant        entry                    internal dcl 85 ref 76 82
xmail_display_msgs_             000226 constant        entry                    external dcl 25

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1412        1454    1177        1422
Length      2000    1177        42         307     213           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
xmail_display_msgs_                 214 external procedure  is an external procedure.  
main                                    internal procedure  shares stack frame of external procedure xmail_display_msgs_.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
xmail_display_msgs_      000100 code                        xmail_display_msgs_
                         000101 formfeed                    xmail_display_msgs_
                         000102 i                           xmail_display_msgs_
                         000104 iocb_ptr                    xmail_display_msgs_
                         000106 message_num                 xmail_display_msgs_
                         000107 auto_format_message_options xmail_display_msgs_
                         000116 auto_window_position_info   xmail_display_msgs_
                         000124 mailbox_ptr                 xmail_display_msgs_
                         000126 message_ptr                 xmail_display_msgs_
                         000130 curr_msgsp                  xmail_display_msgs_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
r_g_a               r_ne_as             call_ext_out_desc   call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
get_line_length_$switch       ioa_$ioa_switch               iox_$control
mail_system_$acknowledge_message                            mail_system_$read_message
mail_system_$set_message_switch                             mlsys_utils_$print_message    xmail_error_$code_first
xmail_error_$no_code          xmail_validate_$curr_msgs     xmail_validate_$mbx

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$no_operation     xmail_err_$no_curr_msgs




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     25 000222        75 000233        76 000234        77 000235        79 000236        81 000245        82 000247
     83 000250        85 000251        86 000252        87 000264        90 000320        93 000351        94 000362
     98 000416        99 000422       100 000425       102 000430       103 000432       104 000464       106 000471
    107 000474       108 000507       109 000510       110 000511       112 000542       113 000545       114 000547
    115 000550       116 000551       118 000553       119 000563       120 000566       122 000574       123 000607
    126 000647       127 000654       129 000677       131 000703       132 000714       135 000754       136 001033
    137 001052       138 001112       139 001140       140 001173       142 001175


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
