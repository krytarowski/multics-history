	COMPILATION LISTING OF SEGMENT gfms_close_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/10/84  1203.5 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 gfms_close_: proc returns (bit (1));
        7 
        8 /* Close I/O switch "gfms_input",
        9*   return "1" and report if failure.
       10*
       11*   Author: Dave Ward	10/18/80
       12**/
       13 	if ^close then return ("0"b);
       14 	call iox_$close (
       15 	     cbp					/* (input) pointer to switch's control block. */
       16 	     , code				/* (output) I/O system status code. */
       17 	     );
       18 	if code = 0 then return ("0"b);		/* Successful. */
       19 	call com_err_ (
       20 	     code
       21 	     , "gfms"
       22 	     , "closing (^p) description^/^a"
       23 	     , cbp
       24 	     , attach_description
       25 	     );
       26 	return ("1"b);				/* Failed. */
       27 
       28 dcl  code                     fixed bin(35);
       29 dcl  com_err_                 entry() options(variable);
       30 dcl  iox_$close               entry (ptr, fixed bin(35));
       31 
  1     1 /* BEGIN INCLUDE FILE gfms_ext.incl.pl1   (Wardd Multics)  10/07/80 2142.2 mst Tue */
  1     2 /* Modified by:	S. C. Akers	02/08/82	Add gfms_ext$working_dir,
  1     3*						   mapping_rule,
  1     4*						   umc_name 
  1     5*   Modified  Ron Barstad  83-06-03  attach_desc from 40 to 80 char
  1     6**/
  1     7 
  1     8 dcl 1 gfms_ext$print_routines	aligned ext
  1     9 ,     3 ioa		entry variable options(variable)
  1    10 ,     3 ioa_nnl		entry variable options(variable)
  1    11 ;
  1    12 
  1    13 dcl 1 gfms_ext$temp_segs	aligned ext
  1    14 ,     3 dtp		ptr
  1    15 ,     3 nlp		ptr
  1    16 ,     3 inp		ptr
  1    17 ;
  1    18 
  1    19 dcl 1 gfms_ext$tape_file	aligned ext
  1    20 ,     3 cbp		ptr
  1    21 ,     3 attach_description	char(80)unal
  1    22 ,     3 density
  1    23 ,       4 ftd		fixed bin	/* First tape density to attempt. */
  1    24 ,       4 ltd		fixed bin	/* Last tape density to attempt. */
  1    25 ,     3 tape_reel_information
  1    26 ,       4 reel_serial_num	char(6)
  1    27 ,       4 file_serial_num	char(6)
  1    28 ,       4 reel_sequence_num	char(6)
  1    29 ;
  1    30 
  1    31 dcl 1 gfms_ext$options	aligned ext
  1    32 ,     3 close		bit(1)unal	/* perform iox close. */
  1    33 ,     3 detach		bit(1)unal	/* perform iox detach. */
  1    34 ,     3 dump		bit(1)unal	/* dump tape records/information. */
  1    35 ,     3 gf		bit(1)unal	/* provide gtss file attributes. */
  1    36 ,     3 prfn		bit(1)unal	/* print file names. */
  1    37 ,     3 scan_ss		bit(1)unal	/* scan substructure, display, quit. */
  1    38 ,     3 tll		bit(1)unal	/* print totals of llinks. */
  1    39 ,     3 unload		bit(1)unal	/* unload files. */
  1    40 ,     3 NOT_IN_USE		bit(28)unal
  1    41 ;
  1    42 
  1    43 dcl  gfms_ext$working_dir	char (168) var ext static;	/* Where to restore the files.
  1    44*						   It may be the user's working
  1    45*						   directory, or the UMC or SMC directory. */
  1    46 
  1    47 dcl  gfms_ext$mapping_rule	char(3) external static;
  1    48 
  1    49 dcl  gfms_ext$umc_name	char(12) external static;
  1    50 
  1    51 /*   END INCLUDE FILE gfms_ext.incl.pl1 */
       32 
       33      end gfms_close_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/10/84  1041.8  gfms_close_.pl1                   >spec>on>7105>gfms_close_.pl1
32           1    10/24/83  1642.4  gfms_ext.incl.pl1                 >ldd>include>gfms_ext.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
attach_description        2     000014 external static char(80)                 level 2 packed unaligned dcl 1-19 set ref 19*
cbp                             000014 external static pointer                  level 2 dcl 1-19 set ref 14* 19*
close                           000016 external static bit(1)                   level 2 packed unaligned dcl 1-31 ref 13
code                            000100 automatic       fixed bin(35,0)          dcl 28 set ref 14* 18 19*
com_err_                        000010 constant        entry                    external dcl 29 ref 19
gfms_ext$options                000016 external static structure                level 1 dcl 1-31
gfms_ext$tape_file              000014 external static structure                level 1 dcl 1-19
iox_$close                      000012 constant        entry                    external dcl 30 ref 14

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
gfms_ext$mapping_rule                  external static char(3)                  unaligned dcl 1-47
gfms_ext$print_routines                external static structure                level 1 dcl 1-8
gfms_ext$temp_segs                     external static structure                level 1 dcl 1-13
gfms_ext$umc_name                      external static char(12)                 unaligned dcl 1-49
gfms_ext$working_dir                   external static varying char(168)        dcl 1-43

NAME DECLARED BY EXPLICIT CONTEXT.
gfms_close_                     000021 constant        entry                    external dcl 6

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       204         224     124         214
Length       406     124        20         145      57           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gfms_close_                         102 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gfms_close_              000100 code                        gfms_close_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      iox_$close

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
gfms_ext$options              gfms_ext$tape_file




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      6 000016        13 000026        14 000037        18 000047        19 000057        26 000116


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
