LISTING FOR  >spec>install>1136>dg132b.ctl
COMPILED BY Multics LISP Compiler, Version 2.13c, July 11, 1983
ON 08/20/86  2256.6 mst Wed
IN BEHALF OF Martinson.SysMaint.a



;;; ***********************************************************
;;; *                                                         *
;;; * Copyright, (C) Honeywell Information Systems Inc., 1982 *
;;; *                                                         *
;;; * Copyright (c) 1978 by Massachusetts Institute of        *
;;; * Technology and Honeywell Information Systems, Inc.      *
;;; *                                                         *
;;; ***********************************************************

;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;        DatagraphiX 132B emacs control package               ;;
;;        created 22 February 1979 by Lee A. Newcomb, HIS, FSO ;;
;;        modified VIP 7800 controller.                        ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; HISTORY COMMENTS:
;;;  1) change(86-04-23,Margolin), approve(86-04-23,MCR7325),
;;;     audit(86-08-12,Harvey), install(86-08-20,MR12.0-1136):
;;;     Added *expr declarations so that it would compile without warnings.
;;;                                                      END HISTORY COMMENTS


(%include e-macros)

(declare (special X Y screenheight screenlinelen tty-type))
(declare (special idel-lines-availablep idel-chars-availablep))
(declare (special given-tty-type))
(declare (array* (notype (dg132b-posit ?))))

(declare (*expr Rprinc Rtyo))

; Initialize terminal and terminal control package.
(defun DCTL-init ()
       (setq idel-lines-availablep t idel-chars-availablep t)
       (setq screenlinelen 131.)
       (setq screenheight
	   (cond ((eq given-tty-type 'dg132b) 30.)	;30 lines for the screen
	         ((eq given-tty-type 'dg132b120) 120.)     ; user has the full terminal memory option
	         ((eq given-tty-type 'dg132b60) 60.)))     ; user has the default terminal memory
       (setq tty-type 'dg132b)
       (Rtyo 33)(Rprinc "H")			;clear/home cursor
       (setq X 0 Y 0))


; Move terminal's cursor to desired position.
(defun DCTL-position-cursor (x y)
       (cond ((and (= x X)(= y Y))
	    nil)				;cursor already at <x,y>
	   ((and (= x 0)(= y 0))
	    (Rtyo 33)(Rprinc "T")
	    (setq X 0 Y 0))			;go home
	   ((and (< (+ (cond ((< x X) (- X x))
			 (t (* 2 (- x X))))
		     (cond ((< Y y) (- y Y))
			 (t (* 2 (- Y y))))) 8))
	    (cond ((< X x)
		 (do ex X (1+ ex)(= ex x) (Rtyo 33) (Rprinc "L")))
		((< x X)
		 (do ex x (1+ ex)(= ex X) (Rtyo 10))))
	    (cond ((< Y y)
		 (do wy Y (1+ wy)(= wy y) (Rtyo 12)))
		((< y Y)
		 (do wy y (1+ wy) (= wy Y)(Rtyo 33)(Rprinc "K"))))
	    (setq X x Y y))
					;; Direct Cursor Addressing is best.
	   (t (setq X x Y y)
	      (Rtyo 33)(Rprinc "8")(Rprinc (dg132b-posit Y))(Rprinc (dg132b-posit X))
       )))

; Output string.
(defun DCTL-display-char-string (string)
       (Rprinc string)
       (setq X (+ X (stringlength string))))

; Clear to end of screen.
(defun DCTL-clear-rest-of-screen ()
       (Rtyo 33)(Rprinc "I"))

; Clear to end of line.
(defun DCTL-kill-line ()
       (Rtyo 33)(Rprinc "O"))

(defun DCTL-insert-lines (n)
       (do i 1 (1+ i) (> i n)
	 (Rtyo 33)(Rprinc "3")))

(defun DCTL-delete-lines (n)
       (do i 1 (1+ i) (> i n)
	 (Rtyo 33)(Rprinc "4")))

(defun DCTL-insert-char-string (str)
       (Rtyo 33)(Rprinc "0")
       (Rprinc  str)
       (Rtyo 33) (Rprinc "5")
       (setq X (+ X (stringlength str))))

(defun DCTL-delete-chars (n)
       (do i 0 (1+ i)(= i n)
	 (Rtyo 33)(Rprinc "6")))

(array dg132b-posit t 132.)
(fillarray 'dg132b-posit '("001" "002" "003" "004" "005" "006" "007" "008"
			        "009" "010" "011" "012" "013" "014" "015"
			        "016" "017" "018" "019" "020" "021" "022"
			        "023" "024" "025" "026" "027" "028" "029"
			        "030" "031" "032" "033" "034" "035" "036"
			        "037" "038" "039" "040" "041" "042" "043"
			        "044" "045" "046" "047" "048" "049" "050"
			        "051" "052" "053" "054" "055" "056" "057"
			        "058" "059" "060" "061" "062" "063" "064"
			        "065" "066" "067" "068" "069" "070" "071"
			        "072" "073" "074" "075" "076" "077" "078"
			        "079" "080" "081" "082" "083" "084" "085"
			        "086" "087" "088" "089" "090" "091" "092"
			        "093" "094" "095" "096" "097" "098" "099"
			        "100" "101" "102" "103" "104" "105" "106"
			        "107" "108" "109" "110" "111" "112" "113"
			        "114" "115" "116" "117" "118" "119" "120"
			        "121" "122" "123" "124" "125" "126" "127"
			        "128" "129" "130" "131" "132"))

INCLUDE FILE >spec>install>1136>executable>e-macros.incl.lisp

;;; BEGIN INCLUDE FILE e-macros.incl.lisp

;;; Declares for use by Emacs programs and extenstions.  Also loads
;;; in e_macros_, which contains macro definitions.

;;; HISTORY COMMENTS:
;;;  1) change(85-01-01,Margolin), approve(86-02-24,MCR7186),
;;;     audit(86-08-12,Harvey), install(86-08-20,MR12.0-1136):
;;;     Written: New Year's Day 1985, by excerpting the old e-macros.incl.lisp
;;;     and leaving out all the definitions and qwerty junk (don't ask).
;;;  2) change(86-02-24,Margolin), approve(86-02-24,MCR7325),
;;;     audit(86-08-12,Harvey), install(86-08-20,MR12.0-1136):
;;;     Alphabetized declarations, and added more declarations for documented
;;;     functions, and also for some undocumented functions.
;;;                                                      END HISTORY COMMENTS

(%include backquote)

(declare					;basic editor stuff
  (*expr apply-catenate
         assert-minor-mode backward-char backward-n-chars charlisten
         charset-member command-abort command-quit
         copy-region cur-hpos curline-as-string curbuf-as-string curchar
         curline-as-string delete-char delete-word destroy-buffer-contents
         dont-notice-modified-buffer e_cline_ e_lap_$reverse-search-string
         e_lap_$trim empty-buffer-p error_table_ establish-local-var
         exchange-point-and-mark firstlinep forward-char forward-n-chars
         forward-regexp-search-in-line forward-search forward-search-in-line
         get-char get-search-string go-to-beginning-of-buffer
         go-to-beginning-of-line go-to-buffer go-to-end-of-buffer
         go-to-end-of-line go-to-hpos go-to-mark go-to-or-create-buffer
         insert-char insert-string kill-backwards-to-mark kill-forward-to-mark
         kill-pop kill-to-end-of-line killsave-string lastlinep loadfile
         looking-at lowercase map-over-emacs-commands mark-on-current-line-p
         mark-reached merge-kills-forward merge-kills-reverse move-mark
         minibuf-response minibuffer-clear
         negate-minor-mode new-line next-line nullstringp pathname_
         pathname_$component point-mark-to-string
         point>markp prev-line printable process-char produce-named-mark-list
         read-in-file release-mark reverse-search
         register-local-var reverse-search-in-line
         search-back-first-charset-line
         search-back-first-not-charset-line search-failure-annunciator
         search-for-first-charset-line search-for-first-not-charset-line
         set-emacs-epilogue-handler set-buffer-self-destruct set-key
         set-mark-here set-mark set-perm-key set-the-mark set-the-mark-here
         skip-to-whitespace skip-to-whitespace-in-line
         wipe-point-mark wipe-region write-out-file
         trim-minibuf-response yesp yank)
  (*fexpr define-autoload-lib))

(declare					;redisplay stuff
  (*expr end-local-displays init-local-displays ring-tty-bell
         local-display-generator local-display-generator-nnl
         next-screen prev-screen local-display-current-line
         find-buffer-in-window select-buffer-window window-info
         select-buffer-find-window select-other-window select-window
         buffer-on-display-in-window redisplay full-redisplay))

(declare					;extended stuff
  (*expr forward-word backward-word skip-over-whitespace skip-back-whitespace
         skip-over-whitespace-in-line skip-back-whitespace-in-line
         skip-back-to-whitespace skip-to-whitespace rubout-char date
         display-buffer-as-printout delete-white-sides lefthand-char
         format-to-col whitespace-to-hpos line-is-blank decimal-rep
         register-option minibuffer-clear))

(declare (*lexpr display-error display-com-error display-error-noabort
	       display-error-remark comout-get-output
	       display-com-error-noabort minibuffer-print
	       minibuffer-response trim-minibuffer-response
	       intern-minibuffer-response minibuffer-remark
	       minibuffer-print-noclear report-error report-error-noabort))

(declare (special TAB NL SPACE ESC curpointpos current-buffer dont-stash
	        numarg der-wahrer-mark fpathname fill-column completion-list
	        curlinel BACKSPACE read-only-flag buffer-modified-flag
	        previous-buffer current-buffer-mode env-dir process-dir
	        minibuffer-end-string NLCHARSTRING undo null-pointer))

;;; Load in macro packages
(eval-when (eval compile)
  (or (status feature e-defcom)
      (progn (load (catenate (car (namelist (truename infile))) ">e_define_command_"))
	   (sstatus feature e-defcom)))
  (or (status feature e-macros)
      (load (catenate (car (namelist (truename infile))) ">e_macros_"))))

;;; END INCLUDE FILE e-macros.incl.lisp

INCLUDE FILE >ldd>include>backquote.incl.lisp

;;;
;;; backquote.incl.lisp - BSG 10/9/79
;;; Loads lisp_backquote_ into either the compiler or interpreter
;;; environment.
;;;
;;; Modified 10/30/82 by Richard Lamson to use eval-when and
;;;				   (status feature backquote)
;;;
(eval-when (eval compile)
  (or (status feature backquote)
      (load (catenate (car (namelist (truename infile))) ">lisp_backquote_"))))

			Functions Defined

Name			Offset		Offset		Name


DCTL-clear-rest-of-screen        343		   0		DCTL-init
DCTL-delete-chars                512		   60		DCTL-position-cursor
DCTL-delete-lines                422		   326		DCTL-display-char-string
DCTL-display-char-string         326		   343		DCTL-clear-rest-of-screen
DCTL-init                        0		   356		DCTL-kill-line
DCTL-insert-char-string          452		   372		DCTL-insert-lines
DCTL-insert-lines                372		   422		DCTL-delete-lines
DCTL-kill-line                   356		   452		DCTL-insert-char-string
DCTL-position-cursor             60		   512		DCTL-delete-chars





			Functions Referenced

Rprinc                                  Rtyo                                    stringlength


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
