	COMPILATION LISTING OF SEGMENT xmail_Getting_Started_
	Compiled by: Multics PL/I Compiler, Release 28e, of February 14, 1985
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 05/28/86  1043.0 mst Wed
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 /* Author unknown
       11*
       12*   84-07-03  DJ Schimke: Modified the call to xmail_create_menu_ to add the
       13*   N_COLUMNS parameter.
       14**/
       15 
       16 xmail_Getting_Started_: proc ();
       17 
       18 /* Automatic */
       19 
       20 	dcl     choice		 fixed bin;
       21 	dcl     code		 fixed bin (35);
       22 	dcl     display_needed	 bit (1) aligned;
       23 	dcl     initial_menu_help	 char (32) var;
       24 	dcl     saw_lifetime_init_info char (3) var init ("");
       25 
       26 /* Entries */
       27 
       28 	dcl     menu_$display	 entry (ptr, ptr, fixed bin (35));
       29 	dcl     window_$bell	 entry (ptr, fixed bin (35));
       30 	dcl     window_$clear_window	 entry (ptr, fixed bin (35));
       31 	dcl     xmail_error_$no_code	 entry () options (variable);
       32 	dcl     xmail_error_$no_print	 entry () options (variable);
       33 	dcl     xmail_display_help_	 entry (char (*), char (*), fixed bin (35));
       34 	dcl     xmail_Executive_Mail_	 entry options (variable);
       35 	dcl     xmail_get_choice_$dm	 entry (ptr, char (*), char (*), char (*), char (*), bit (1) aligned, char (*), fixed bin, fixed bin (35));
       36 	dcl     xmail_value_$get_with_default entry (char (*), char (*) var, char (*) var, fixed bin (35));
       37 	dcl     xmail_value_$set	 entry (char (*), char (*) var, char (*) var, fixed bin (35));
       38 
       39 /* Builtin */
       40 
       41 	dcl     (null, translate)	 builtin;
       42 
       43 /* Condition */
       44 
       45 	dcl     (program_interrupt, xmail_leave_menu, xmail_redisplay_menu, quit) condition;
       46 
       47 /* Constant */
       48 
       49 	dcl     NAME		 char (22) init ("xmail_Getting_Started_") int static options (constant);
       50 	dcl     N_COLUMNS		 fixed bin static options (constant) init (2);
       51 	dcl     OPTION_NAMES	 (7) char (29) var int static options (constant)
       52 				 init ("Getting to Know Your Terminal",
       53 				 "How to Get Help",
       54 				 "How to Get Out",
       55 				 "Getting Around",
       56 				 "How to Correct Typos",
       57 				 "Personalizing Executive Mail",
       58 				 "Go To Executive Mail Menu");
       59 
       60 	dcl     BEGIN_USAGE		 char (59) init ("Press a number and the associated action will be performed.") int static options (constant);
       61 
       62 /* External Static */
       63 
       64 	dcl     iox_$user_output	 ptr ext static;
       65 
       66 	dcl     (xmail_err_$exit_now,
       67 	        xmail_err_$help_requested) fixed bin (35) ext static;
       68 
       69 /* Internal Static */
       70 
       71 	dcl     menup		 ptr init (null) int static;
       72 
       73 	on condition (xmail_leave_menu) ;
       74 
       75 	on condition (xmail_redisplay_menu) begin;
       76 		if menup ^= null
       77 		then call menu_$display (xmail_windows.menu.iocb, menup, (0));
       78 	     end;
       79 
       80 	if menup = null
       81 	then call GET_MENU ();
       82 
       83 	call xmail_value_$get_with_default ("saw_lifetime_init_info", "no", saw_lifetime_init_info, code);
       84 	if code ^= 0
       85 	then do;
       86 	     call xmail_error_$no_code (code, NAME, "l", "Unable to get info from user value segment. This is an internal programming error.");
       87 	     saw_lifetime_init_info = "no";
       88 	end;
       89 
       90 	if saw_lifetime_init_info = "yes"
       91 	then initial_menu_help = "";
       92 	else initial_menu_help = INITIAL_HELP;
       93 
       94 	on condition (program_interrupt) go to START;
       95 	on condition (quit)
       96 	     begin;
       97 		dcl     xmail_window_manager_$reconnect entry ();
       98 		call xmail_window_manager_$reconnect ();
       99 		go to START;
      100 	     end;
      101 
      102 	call window_$clear_window (iox_$user_output, code);
      103 	if code ^= 0 then call xmail_error_$no_print (code, NAME, "l", "Unable to clear user_io window. This is an internal programming error.");
      104 
      105 START:
      106 
      107 	display_needed = "1"b;
      108 
      109 	do while ("1"b);
      110 	     call xmail_get_choice_$dm (menup, "", "", "", BEGIN_USAGE, display_needed, (initial_menu_help), choice, code);
      111 	     if saw_lifetime_init_info = "no"
      112 	     then do;
      113 		call xmail_value_$set ("saw_lifetime_init_info", "yes", "", code);
      114 		if code ^= 0
      115 		then call xmail_error_$no_code (code, NAME, "l", "Unable to set info in user value segment. This is an internal programming error.");
      116 		initial_menu_help = "";
      117 		saw_lifetime_init_info = "yes";
      118 	     end;
      119 	     display_needed = "0"b;
      120 	     if code = 0 then call PERFORM_OPTION (choice, display_needed);
      121 	     else if code = xmail_err_$help_requested then call EXPLAIN_OPTION (choice);
      122 	     else if code = xmail_err_$exit_now then return;
      123 	     else do;
      124 		call window_$bell (iox_$user_output, code);
      125 		if code ^= 0 then call xmail_error_$no_print (code, NAME, "l", "Unable to ring terminal bell. This is an internal programming error.");
      126 	     end;
      127 	end;
      128 
      129 PERFORM_OPTION: proc (opt, redisplay);
      130 
      131 	dcl     opt		 fixed bin;
      132 	dcl     redisplay		 bit (1) aligned;
      133 	dcl     code		 fixed bin (35);
      134 
      135 	call window_$clear_window (iox_$user_output, code);
      136 	if code ^= 0 then call xmail_error_$no_print (code, NAME, "l", "Unable to clear user_io window. This is an internal programming error.");
      137 	go to OPT (opt);
      138 
      139 OPT (1): OPT (2): OPT (3): OPT (4): OPT (5): OPT (6):
      140 
      141 	call xmail_display_help_ (GETTING_STARTED_HELP, translate (OPTION_NAMES (opt), "_", " "), code);
      142 	if code ^= 0 then call xmail_error_$no_print (code, NAME, "l", "Unable to get help. This is an internal programming error.");
      143 
      144 	return;
      145 
      146 OPT (7):
      147 
      148 	call xmail_Executive_Mail_ ();
      149 	redisplay = "1"b;
      150 
      151 	return;
      152 
      153      end PERFORM_OPTION;
      154 
      155 EXPLAIN_OPTION: proc (opt);
      156 
      157 	dcl     opt		 fixed bin;
      158 	dcl     code		 fixed bin (35);
      159 
      160 	call window_$clear_window (iox_$user_output, code);
      161 	if code ^= 0 then call xmail_error_$no_print (code, NAME, "l", "Unable to clear user_io window. This is an internal programming error.");
      162 	call xmail_display_help_ (NAME || ".gi.info", translate (OPTION_NAMES (opt), "_", " "), code);
      163 	if code ^= 0 then call xmail_error_$no_print (code, NAME, "l", "Unable to get help. This is an internal programming error.");
      164 
      165      end EXPLAIN_OPTION;
      166 
      167 GET_MENU: proc ();
      168 
      169 	dcl     title		 char (15) init ("Getting Started");
      170 	dcl     code		 fixed bin (35);
      171 	dcl     xmail_create_menu_	 entry (char (*), (*) char (*) var, fixed bin, ptr, fixed bin (35));
      172 
      173 	call xmail_create_menu_ (title, OPTION_NAMES, N_COLUMNS, menup, code);
      174 	if code ^= 0 then call xmail_error_$no_code (code, NAME, "q",
      175 		"A programming error has been detected which prevents the use of the ^a menu.", title);
      176 
      177      end GET_MENU;
      178 
      179 
      180 
  1     1 /* BEGIN INCLUDE FILE ... xmail_help_infos.incl.pl1 */
  1     2 
  1     3 /****^  HISTORY COMMENTS:
  1     4*  1) change(85-03-06,Backs), approve(86-03-06,MCR7358),
  1     5*     audit(86-04-21,RBarstad):
  1     6*      Modified to add date info.
  1     7*                                                   END HISTORY COMMENTS */
  1     8 
  1     9 /* Created 06/18/81 by Suzanne Krupp */
  1    10 
  1    11 /* Help files and info entry points. */
  1    12 
  1    13 dcl (PROMPT_REPLIES_HELP char(28) init("xmail_prompt_replies.gi.info"),
  1    14      GENERAL_HELP_HELP char(26) init("xmail_general_help.gi.info"),
  1    15      GETTING_STARTED_HELP char(29) init("xmail_getting_started.gi.info"),
  1    16      INITIAL_HELP char(26) init("xmail_initial_help.gi.info"),
  1    17      MULTICS_MODE_HELP char(27) init("xmail_multics_mode_.gi.info"),
  1    18      REVIEW_DEFAULTS_HELP char(29) init("xmail_Review_Defaults.gi.info"))
  1    19     int static options(constant);
  1    20 
  1    21 dcl (CREATE_MFILE_INFO char(19) init("creating_mail_files"), /* Prompt Infos */
  1    22      DEL_MSG_SELECT_INFO char(23) init("which_discarded_message"),
  1    23      SEARCH_STR_INFO char(14) init("search_string"),
  1    24      MSG_SELECT_INFO char(14) init("which_message"),
  1    25      USE_SPEC_SET_INFO char(12) init("use_spec_set"),
  1    26      GETTING_HELP_INFO char(12) init("getting_help"),
  1    27      DATE_INFO char(14) init("date_selection"),
  1    28      MORE_HELP_INFO char(9) init("more_help"))
  1    29     int static options(constant);
  1    30 
  1    31 /* END INCLUDE FILE ... xmail_help_infos.incl.pl1 */
      181 
      182 
  2     1 /* Begin include file: xmail_windows.incl.pl1 */
  2     2 /* Created 6/24/81 by Paul Kyzivat */
  2     3 /* Mofified 6/20/84 by DJ Schimke to add the mm_status window */
  2     4 
  2     5      dcl 1 xmail_windows aligned external static,
  2     6            2 initial_position fixed bin,
  2     7            2 min_lines_needed fixed bin,
  2     8            2 (status, mm_status, menu, bottom) aligned like xmail_window_info_format;
  2     9 
  2    10      dcl 1 xmail_window_info_format aligned based,
  2    11            2 iocb ptr,
  2    12 	 2 position aligned like window_position_info;
  2    13 
  3     1 /* BEGIN INCLUDE FILE ... window_control_info.incl.pl1 JRD  */
  3     2 /* format: style3 */
  3     3 
  3     4 /* Modified 26 January 1982 by William York to add the set_more_handler
  3     5*   and reset_more_handler control orders. */
  3     6 /* Modified October 1982 by WMY to add set and get_token_characters,
  3     7*   set and get_more_prompt. */
  3     8 /* Modified February 1983 by WMY to add the line_editor_key_binding_info
  3     9*   structure. */
  3    10 /* Modified 30 September 1983 by Jon A. Rochlis to add the origin.column for
  3    11*   partial screen width windows. */
  3    12 /* Modified 9 October 1983 by JR to add version 1 window_edit_line_info. 
  3    13*   This should be removed when window_info.incl.pl1 is created. */
  3    14 /* Modified 29 February 1984 by Barmar to add version 1 
  3    15*   get_editor_key_bindings_info. */
  3    16 /* Modified 1 March 1984 by Barmar to add version 1 
  3    17*   set_editor_key_bindings_info. */
  3    18 /* Modified 2 March 1984 by Barmar to upgrade to version 3
  3    19*   line_editor_key_bindings_info, which includes the name, description, and
  3    20*   info path */
  3    21 
  3    22 /* structure for the set_window_info and get_window_info
  3    23*   control orders. */
  3    24 
  3    25 dcl	1 window_position_info
  3    26 			based (window_position_info_ptr),
  3    27 	  2 version	fixed bin,
  3    28 	  2 origin,
  3    29 	    3 column	fixed bin,
  3    30 	    3 line	fixed bin,
  3    31 	  2 extent,
  3    32 	    3 width	fixed bin,
  3    33 	    3 height	fixed bin;
  3    34 
  3    35 dcl	(window_position_info_version, window_position_info_version_1)
  3    36 			fixed bin internal static init (1) options (constant);
  3    37 dcl	window_position_info_ptr
  3    38 			pointer;
  3    39 
  3    40 /* structure for the set_window_status and get_window_status
  3    41*   control orders */
  3    42 
  3    43 declare	window_status_info_ptr
  3    44 			pointer;
  3    45 declare	1 window_status_info
  3    46 			aligned based (window_status_info_ptr),
  3    47 	  2 version	fixed bin,
  3    48 	  2 status_string	bit (36) aligned;		/* string (window_status) */
  3    49 /* see window_status.incl.pl1 for the contents of this string */
  3    50 
  3    51 
  3    52 declare	(window_status_version, window_status_version_1)
  3    53 			fixed bin internal static init (1) options (constant);
  3    54 
  3    55 /* info structure for the set_more_responses and get_more_responses control 
  3    56*   orders */
  3    57 
  3    58 
  3    59 dcl	1 more_responses_info
  3    60 			aligned based (more_responses_info_ptr),
  3    61 	  2 version	fixed bin,
  3    62 	  2 n_yeses	fixed bin, /* how many valid characters in the strings below */
  3    63 	  2 n_noes	fixed bin,
  3    64 	  2 yeses		char (32) unaligned,
  3    65 	  2 noes		char (32) unaligned;
  3    66 
  3    67 dcl	(more_responses_info_version_1, more_responses_version)
  3    68 			fixed bin internal static init (1) options (constant);
  3    69 dcl	more_responses_info_ptr
  3    70 			pointer;
  3    71 
  3    72 /* structure for the set_break_table and get_break_table
  3    73*   control orders */
  3    74 
  3    75 declare	break_table_ptr	pointer;
  3    76 declare	1 break_table_info	aligned based (break_table_ptr),
  3    77 	  2 version	fixed bin,
  3    78 	  2 breaks	(0:127) bit (1) unaligned;
  3    79 
  3    80 declare	(break_table_info_version, break_table_info_version_1)
  3    81 			fixed bin init (1) internal static options (constant);
  3    82 
  3    83 declare	1 more_handler_info aligned based (more_handler_info_ptr),
  3    84 	  2 version	fixed bin,
  3    85 	  2 flags		unaligned,
  3    86 	    3 old_handler_valid
  3    87 			bit(1),
  3    88 	    3 pad		bit(35),
  3    89 	  2 more_handler	entry (pointer, bit(1) aligned),
  3    90 	  2 old_more_handler entry (pointer, bit(1) aligned);
  3    91 
  3    92 declare	more_handler_info_ptr pointer;
  3    93 
  3    94 declare	(more_handler_info_version, more_handler_info_version_3)
  3    95 			fixed bin internal static options (constant) init (3);
  3    96 			
  3    97 declare   1 token_characters_info aligned based (token_characters_info_ptr),
  3    98 	  2 version	char(8),
  3    99 	  2 token_character_count
  3   100 			fixed bin,
  3   101 	  2 token_characters
  3   102 			char (128) unaligned;
  3   103 
  3   104 declare   token_characters_info_ptr pointer;
  3   105 
  3   106 declare   token_characters_info_version_1 char(8) internal static options (constant) init ("wtci0001");
  3   107 
  3   108 declare   1 more_prompt_info	aligned based (more_prompt_info_ptr),
  3   109 	  2 version	char(8),
  3   110 	  2 more_prompt	char(80);
  3   111 
  3   112 declare   more_prompt_info_ptr pointer;
  3   113 
  3   114 declare   more_prompt_info_version_1 char(8) static options (constant) init ("wsmp0001");
  3   115 
  3   116 /* Line editor stuff ... */
  3   117 
  3   118 dcl  line_editor_key_binding_info_ptr
  3   119 			pointer;
  3   120 
  3   121 dcl  line_editor_binding_count
  3   122 			fixed bin;
  3   123 dcl  line_editor_longest_sequence
  3   124 			fixed bin;
  3   125 /* For each binding, action defines what to do for that sequence. Constants
  3   126*   are defined in window_editor_values.incl.pl1. Only if action is set to
  3   127*   EXTERNAL_ROUTINE does the editor_routine entry variable get examined. */
  3   128 
  3   129 dcl  1 line_editor_key_binding_info
  3   130 			aligned based (line_editor_key_binding_info_ptr),
  3   131        2 version		char(8),
  3   132        2 binding_count	fixed bin,
  3   133        2 longest_sequence	fixed bin,
  3   134        2 bindings		(line_editor_binding_count refer
  3   135 			(line_editor_key_binding_info.binding_count)),
  3   136          3 sequence		char(line_editor_longest_sequence refer
  3   137 			(line_editor_key_binding_info.longest_sequence)) varying,
  3   138          3 action		fixed bin,
  3   139          3 numarg_action      fixed binary,
  3   140          3 editor_routine	entry (pointer, fixed bin(35)),
  3   141          3 name		char (64) varying unaligned,
  3   142          3 description	char (256) varying unaligned,
  3   143          3 info_path	unaligned,
  3   144 	 4 info_dir	char (168),
  3   145 	 4 info_entry	char (32);
  3   146 	
  3   147 
  3   148 dcl  line_editor_key_binding_info_version_3
  3   149 			char(8) static options (constant) init ("lekbi003");
  3   150 
  3   151 dcl 1 get_editor_key_bindings_info	aligned based (get_editor_key_bindings_info_ptr),
  3   152       2 version			char (8),
  3   153       2 flags,
  3   154         3 entire_state		bit (1) unaligned,
  3   155         3 mbz			bit (35) unaligned,
  3   156       2 key_binding_info_ptr		ptr,
  3   157       2 entire_state_ptr		ptr;
  3   158 
  3   159 dcl get_editor_key_bindings_info_ptr	ptr;
  3   160 dcl get_editor_key_bindings_info_version_1 char (8) int static options (constant) init ("gekbi_01");
  3   161 
  3   162 dcl 1 set_editor_key_bindings_info	aligned
  3   163 				based (set_editor_key_bindings_info_ptr),
  3   164       2 version			char (8),
  3   165       2 flags,
  3   166         3 replace			bit (1) unaligned,
  3   167         3 update			bit (1) unaligned,
  3   168         3 mbz			bit (34) unaligned,
  3   169       2 key_binding_info_ptr		ptr;
  3   170 
  3   171 dcl set_editor_key_bindings_info_ptr	ptr;
  3   172 dcl set_editor_key_bindings_info_version_1 char (8) int static options (constant) init ("sekbi_01");
  3   173 
  3   174 /* This should be moved to window_info.incl.pl1 when that include file is
  3   175*   created.  JR 2/1/84 */
  3   176 
  3   177 dcl	1 window_edit_line_info
  3   178 			based (window_edit_line_info_ptr),
  3   179 	  2 version	char (8),
  3   180 	  2 line_ptr	ptr,
  3   181 	  2 line_length	fixed bin (21);		/* later we will hack initial cursor position, key bindings, etc. */
  3   182 
  3   183 dcl	window_edit_line_info_version_1
  3   184 			char (8) static options (constant) init ("wedl0001");
  3   185 
  3   186 dcl	window_edit_line_info_ptr
  3   187 			ptr;
  3   188 
  3   189 /* END INCLUDE FILE window_control_info.incl.pl1 */
  2    14 
  2    15 
  2    16 /* End include file: xmail_windows.incl.pl1 */
      183 
      184 
      185      end xmail_Getting_Started_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/28/86  1027.3  xmail_Getting_Started_.pl1        >special_ldd>install>MR12.0-1062>xmail_Getting_Started_.pl1
181          1    05/28/86  1006.0  xmail_help_infos.incl.pl1         >special_ldd>install>MR12.0-1062>xmail_help_infos.incl.pl1
183          2    12/02/84  1132.9  xmail_windows.incl.pl1            >ldd>include>xmail_windows.incl.pl1
2-14         3    09/12/84  0916.7  window_control_info.incl.pl1      >ldd>include>window_control_info.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
BEGIN_USAGE                     000026 constant        char(59)                 initial unaligned dcl 60 set ref 110*
GETTING_STARTED_HELP            000016 constant        char(29)                 initial unaligned dcl 1-13 set ref 139*
INITIAL_HELP                    000007 constant        char(26)                 initial unaligned dcl 1-13 ref 92
NAME                            000144 constant        char(22)                 initial unaligned dcl 49 set ref 86* 103* 114* 125*
                                                                                  136* 142* 161* 162 163* 174*
N_COLUMNS                       000157 constant        fixed bin(17,0)          initial dcl 50 set ref 173*
OPTION_NAMES                    000045 constant        varying char(29)         initial array dcl 51 set ref 139 139 162 162 173*
choice                          000100 automatic       fixed bin(17,0)          dcl 20 set ref 110* 120* 121*
code                            000154 automatic       fixed bin(35,0)          dcl 133 in procedure "PERFORM_OPTION" set ref 135*
                                                                                  136 136* 139* 142 142*
code                            000164 automatic       fixed bin(35,0)          dcl 158 in procedure "EXPLAIN_OPTION" set ref 160*
                                                                                  161 161* 162* 163 163*
code                            000200 automatic       fixed bin(35,0)          dcl 170 in procedure "GET_MENU" set ref 173* 174
                                                                                  174*
code                            000101 automatic       fixed bin(35,0)          dcl 21 in procedure "xmail_Getting_Started_" set ref
                                                                                  83* 84 86* 102* 103 103* 110* 113* 114 114* 120
                                                                                  121 122 124* 125 125*
display_needed                  000102 automatic       bit(1)                   dcl 22 set ref 105* 110* 119* 120*
initial_menu_help               000103 automatic       varying char(32)         dcl 23 set ref 90* 92* 110 116*
iocb                     22     000044 external static pointer                  level 3 dcl 2-5 set ref 76*
iox_$user_output                000036 external static pointer                  dcl 64 set ref 102* 124* 135* 160*
menu                     22     000044 external static structure                level 2 dcl 2-5
menu_$display                   000012 constant        entry                    external dcl 28 ref 76
menup                           000010 internal static pointer                  initial dcl 71 set ref 76 76* 80 110* 173*
null                                                   builtin function         dcl 41 ref 76 80
opt                                    parameter       fixed bin(17,0)          dcl 131 in procedure "PERFORM_OPTION" ref 129 137
                                                                                  139 139
opt                                    parameter       fixed bin(17,0)          dcl 157 in procedure "EXPLAIN_OPTION" ref 155 162
                                                                                  162
program_interrupt               000116 stack reference condition                dcl 45 ref 94
quit                            000140 stack reference condition                dcl 45 ref 95
redisplay                              parameter       bit(1)                   dcl 132 set ref 129 149*
saw_lifetime_init_info          000114 automatic       varying char(3)          initial dcl 24 set ref 24* 83* 87* 90 111 117*
title                           000174 automatic       char(15)                 initial unaligned dcl 169 set ref 169* 173* 174*
translate                                              builtin function         dcl 41 ref 139 139 162 162
window_$bell                    000014 constant        entry                    external dcl 29 ref 124
window_$clear_window            000016 constant        entry                    external dcl 30 ref 102 135 160
window_position_info                   based           structure                level 1 unaligned dcl 3-25
xmail_Executive_Mail_           000026 constant        entry                    external dcl 34 ref 146
xmail_create_menu_              000050 constant        entry                    external dcl 171 ref 173
xmail_display_help_             000024 constant        entry                    external dcl 33 ref 139 162
xmail_err_$exit_now             000040 external static fixed bin(35,0)          dcl 66 ref 122
xmail_err_$help_requested       000042 external static fixed bin(35,0)          dcl 66 ref 121
xmail_error_$no_code            000020 constant        entry                    external dcl 31 ref 86 114 174
xmail_error_$no_print           000022 constant        entry                    external dcl 32 ref 103 125 136 142 161 163
xmail_get_choice_$dm            000030 constant        entry                    external dcl 35 ref 110
xmail_leave_menu                000124 stack reference condition                dcl 45 ref 73
xmail_redisplay_menu            000132 stack reference condition                dcl 45 ref 75
xmail_value_$get_with_default   000032 constant        entry                    external dcl 36 ref 83
xmail_value_$set                000034 constant        entry                    external dcl 37 ref 113
xmail_window_info_format               based           structure                level 1 dcl 2-10
xmail_window_manager_$reconnect 000046 constant        entry                    external dcl 97 ref 98
xmail_windows                   000044 external static structure                level 1 dcl 2-5

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
CREATE_MFILE_INFO                      internal static char(19)                 initial unaligned dcl 1-21
DATE_INFO                              internal static char(14)                 initial unaligned dcl 1-21
DEL_MSG_SELECT_INFO                    internal static char(23)                 initial unaligned dcl 1-21
GENERAL_HELP_HELP                      internal static char(26)                 initial unaligned dcl 1-13
GETTING_HELP_INFO                      internal static char(12)                 initial unaligned dcl 1-21
MORE_HELP_INFO                         internal static char(9)                  initial unaligned dcl 1-21
MSG_SELECT_INFO                        internal static char(14)                 initial unaligned dcl 1-21
MULTICS_MODE_HELP                      internal static char(27)                 initial unaligned dcl 1-13
PROMPT_REPLIES_HELP                    internal static char(28)                 initial unaligned dcl 1-13
REVIEW_DEFAULTS_HELP                   internal static char(29)                 initial unaligned dcl 1-13
SEARCH_STR_INFO                        internal static char(14)                 initial unaligned dcl 1-21
USE_SPEC_SET_INFO                      internal static char(12)                 initial unaligned dcl 1-21
break_table_info                       based           structure                level 1 dcl 3-76
break_table_info_version               internal static fixed bin(17,0)          initial dcl 3-80
break_table_info_version_1             internal static fixed bin(17,0)          initial dcl 3-80
break_table_ptr                        automatic       pointer                  dcl 3-75
get_editor_key_bindings_info           based           structure                level 1 dcl 3-151
get_editor_key_bindings_info_ptr       automatic       pointer                  dcl 3-159
get_editor_key_bindings_info_version_1 internal static char(8)                  initial unaligned dcl 3-160
line_editor_binding_count              automatic       fixed bin(17,0)          dcl 3-121
line_editor_key_binding_info           based           structure                level 1 dcl 3-129
line_editor_key_binding_info_ptr       automatic       pointer                  dcl 3-118
line_editor_key_binding_info_version_3 internal static char(8)                  initial unaligned dcl 3-148
line_editor_longest_sequence           automatic       fixed bin(17,0)          dcl 3-123
more_handler_info                      based           structure                level 1 dcl 3-83
more_handler_info_ptr                  automatic       pointer                  dcl 3-92
more_handler_info_version              internal static fixed bin(17,0)          initial dcl 3-94
more_handler_info_version_3            internal static fixed bin(17,0)          initial dcl 3-94
more_prompt_info                       based           structure                level 1 dcl 3-108
more_prompt_info_ptr                   automatic       pointer                  dcl 3-112
more_prompt_info_version_1             internal static char(8)                  initial unaligned dcl 3-114
more_responses_info                    based           structure                level 1 dcl 3-59
more_responses_info_ptr                automatic       pointer                  dcl 3-69
more_responses_info_version_1          internal static fixed bin(17,0)          initial dcl 3-67
more_responses_version                 internal static fixed bin(17,0)          initial dcl 3-67
set_editor_key_bindings_info           based           structure                level 1 dcl 3-162
set_editor_key_bindings_info_ptr       automatic       pointer                  dcl 3-171
set_editor_key_bindings_info_version_1 internal static char(8)                  initial unaligned dcl 3-172
token_characters_info                  based           structure                level 1 dcl 3-97
token_characters_info_ptr              automatic       pointer                  dcl 3-104
token_characters_info_version_1        internal static char(8)                  initial unaligned dcl 3-106
window_edit_line_info                  based           structure                level 1 unaligned dcl 3-177
window_edit_line_info_ptr              automatic       pointer                  dcl 3-186
window_edit_line_info_version_1        internal static char(8)                  initial unaligned dcl 3-183
window_position_info_ptr               automatic       pointer                  dcl 3-37
window_position_info_version           internal static fixed bin(17,0)          initial dcl 3-35
window_position_info_version_1         internal static fixed bin(17,0)          initial dcl 3-35
window_status_info                     based           structure                level 1 dcl 3-45
window_status_info_ptr                 automatic       pointer                  dcl 3-43
window_status_version                  internal static fixed bin(17,0)          initial dcl 3-52
window_status_version_1                internal static fixed bin(17,0)          initial dcl 3-52

NAMES DECLARED BY EXPLICIT CONTEXT.
EXPLAIN_OPTION                  001365 constant        entry                    internal dcl 155 ref 121
GET_MENU                        001537 constant        entry                    internal dcl 167 ref 80
OPT                             000000 constant        label                    array(7) dcl 139 set ref 137
PERFORM_OPTION                  001206 constant        entry                    internal dcl 129 ref 120
START                           000731 constant        label                    dcl 105 ref 94 99
xmail_Getting_Started_          000421 constant        entry                    external dcl 16

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      2342        2414    2051        2352
Length      2716    2051        52         266     271           2

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
xmail_Getting_Started_              356 external procedure  is an external procedure.  
on unit on line 73                   64 on unit               
on unit on line 75                   74 on unit               
on unit on line 94                   64 on unit               
on unit on line 95                   64 on unit               
PERFORM_OPTION                          internal procedure  shares stack frame of external procedure xmail_Getting_Started_.  
EXPLAIN_OPTION                          internal procedure  shares stack frame of external procedure xmail_Getting_Started_.  
GET_MENU                                internal procedure  shares stack frame of external procedure xmail_Getting_Started_.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 menup                       xmail_Getting_Started_

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
xmail_Getting_Started_   000100 choice                      xmail_Getting_Started_
                         000101 code                        xmail_Getting_Started_
                         000102 display_needed              xmail_Getting_Started_
                         000103 initial_menu_help           xmail_Getting_Started_
                         000114 saw_lifetime_init_info      xmail_Getting_Started_
                         000154 code                        PERFORM_OPTION
                         000164 code                        EXPLAIN_OPTION
                         000174 title                       GET_MENU
                         000200 code                        GET_MENU

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_cs            call_ext_out_desc   call_ext_out        return              tra_ext             enable
shorten_stack       ext_entry           int_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
menu_$display                 window_$bell                  window_$clear_window          xmail_Executive_Mail_
xmail_create_menu_            xmail_display_help_           xmail_error_$no_code          xmail_error_$no_print
xmail_get_choice_$dm          xmail_value_$get_with_default xmail_value_$set
xmail_window_manager_$reconnect

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
iox_$user_output              xmail_err_$exit_now           xmail_err_$help_requested     xmail_windows




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     16 000420        24 000426        73 000427        75 000444        76 000460        78 000500        80 000501
     83 000507        84 000546        86 000550        87 000602        90 000606        92 000615        94 000622
     95 000641        98 000655        99 000661       102 000664       103 000675       105 000731       109 000733
    110 000734       111 001013       113 001021       114 001061       116 001115       117 001116       119 001122
    120 001123       121 001130       122 001136       124 001140       125 001150       127 001204       185 001205
    129 001206       135 001210       136 001221       137 001255       139 001260       142 001316       144 001353
    146 001354       149 001361       151 001364       155 001365       160 001367       161 001400       162 001434
    163 001501       165 001536       167 001537       169 001540       173 001544       174 001575       177 001635


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
