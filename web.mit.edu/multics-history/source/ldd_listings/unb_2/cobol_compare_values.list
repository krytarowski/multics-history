	COMPILATION LISTING OF SEGMENT cobol_compare_values
	Compiled by: Multics PL/I Compiler, Release 31b, of April 24, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 05/24/89  1005.0 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
       17*     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
       18*     MCR8060 cobol_compare_values.pl1 Reformatted code to new Cobol standard.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 /* Modified on 08/02/76 by ORN to allow for user-defined alphabets */
       23 /* Modified on 2/3/76 by John O'Neil to make ascii the default collating sequence and eliminate call to
       24*	cobol_est_cs_table (routine no longer needed). */
       25 
       26 /* format: style3 */
       27 cobol_compare_values:
       28      proc (v1ptr, v2ptr, dnlength, char_tbl_ptr) returns (fixed bin (15));
       29 
       30 /* This procedure compares two initial value extensions on a level 88 item
       31*   to determine that the second is greater than the first */
       32 
       33 
       34 
       35 
       36 dcl	cobol_read_rand_$fixed_bin
       37 			entry (fixed bin, fixed bin, ptr);
       38 
       39 /*************************************/
       40 start:
       41 	status = 0;
       42 	first = "1"b;
       43 	first_is_zero = "0"b;
       44 	first_is_num = "0"b;
       45 	coll_seq_on = "0"b;
       46 	if fixed_common.prog_coll_seq ^= 0
       47 	then do;					/* if not native, i.e. ASCII */
       48 						/*-08/02/76-*/
       49 		call cobol_read_rand_$fixed_bin (2, fixed_common.prog_coll_seq, alpha_name_ptr);
       50 						/*-08/02/76-*/
       51 		cst_ptr = addr (alphabet_name.table);	/*-08/02/76-*/
       52 		coll_seq_on = "1"b;
       53 	     end;
       54 	if substr (v1ptr -> any_init.type, 1, 1)
       55 	then do;
       56 		first_is_num = "1"b;
       57 		goto setup_num;
       58 	     end;
       59 	if substr (v1ptr -> any_init.type, 3, 1) & substr (v1ptr -> any_init.info, 2, 7) = "0000001"b
       60 	then first_is_zero = "1"b;
       61 
       62 get_second:
       63 	first = "0"b;
       64 	if substr (v2ptr -> any_init.type, 1, 1)
       65 	then do;
       66 		if first_is_num | first_is_zero
       67 		then goto comp_num;
       68 		else goto retrn;
       69 	     end;
       70 	if substr (v2ptr -> any_init.type, 3, 1) & substr (v2ptr -> any_init.info, 2, 7) = "0000001"b
       71 	then do;
       72 		if substr (v1ptr -> any_init.type, 1, 1)
       73 		     | (substr (v1ptr -> any_init.type, 3, 1) & substr (v1ptr -> any_init.info, 2, 7) = "0000001"b)
       74 		then goto comp_num;
       75 	     end;
       76 
       77 	if substr (v2ptr -> any_init.type, 2, 1)
       78 	then do;
       79 		if ^first_is_num
       80 		then goto comp_non_num;
       81 		else goto retrn;
       82 	     end;
       83 
       84 comp_non_num:
       85 	first_time_in_compare = "1"b;
       86 	rcode = "0"b;
       87 
       88 get_call:
       89 	call get_char;
       90 
       91 /********************/
       92 get_char:
       93      proc;
       94 
       95 /*This procedure gets the next characters to be compared in a
       96*comparison between a pair of condition values. Operands
       97*may be alphanumeric literals or figurative constants*/
       98 
       99 dcl	max_sofar		fixed bin (31);		/*maximum number of characters that have to be
      100*			   compared*/
      101 dcl	sofar		fixed bin (31);		/*number of characters that have been compared*/
      102 dcl	item_index	fixed bin (15);		/*in the following dcl, implicit ptr qualification
      103*			  is required for references to the string subfield*/
      104 dcl	1 a_init		based (v3ptr),
      105 	  2 type		bit (8),
      106 	  2 info		bit (8),
      107 	  2 length	fixed bin (15),
      108 	  2 string	char (a_init.length);
      109 
      110 dcl	l		fixed bin (7);
      111 
      112 	if first_time_in_compare
      113 	then do;
      114 		if substr (v1ptr -> a_init.type, 4, 1)
      115 		then goto all_1;
      116 		if substr (v1ptr -> a_init.type, 3, 1)
      117 		then goto fig_1;
      118 		goto alpha_1;
      119 
      120 alpha_1:
      121 		if substr (v2ptr -> a_init.type, 4, 1)
      122 		then goto alpha_all;
      123 		if substr (v2ptr -> a_init.type, 3, 1)
      124 		then goto alpha_fig;
      125 		goto alpha_alpha;
      126 
      127 fig_1:
      128 		if substr (v2ptr -> a_init.type, 4, 1)
      129 		then goto fig_all;
      130 		if substr (v2ptr -> a_init.type, 3, 1)
      131 		then goto fig_fig;
      132 		goto fig_alpha;
      133 
      134 all_1:
      135 		if substr (v2ptr -> a_init.type, 4, 1)
      136 		then goto all_all;
      137 		if substr (v2ptr -> a_init.type, 3, 1)
      138 		then goto all_fig;
      139 		goto all_alpha;
      140 
      141 all_alpha:
      142 		;
      143 alpha_all:
      144 		;
      145 alpha_alpha:
      146 		if v1ptr -> a_init.length > v2ptr -> a_init.length
      147 		then max_sofar = v1ptr -> a_init.length;
      148 		else max_sofar = v2ptr -> a_init.length;
      149 		goto out;
      150 
      151 alpha_fig:
      152 		;
      153 all_fig:
      154 		max_sofar = v1ptr -> a_init.length;
      155 		goto out;
      156 
      157 
      158 fig_alpha:
      159 		;
      160 fig_all:
      161 		max_sofar = v2ptr -> a_init.length;
      162 		goto out;
      163 
      164 fig_fig:
      165 		max_sofar = 1;
      166 		goto out;
      167 
      168 all_all:
      169 		max_sofar = v1ptr -> a_init.length * v2ptr -> a_init.length;
      170 
      171 out:
      172 		sofar = 0;
      173 		item.field_index (1) = 0;
      174 		item.field_index (2) = 0;
      175 		if ^substr (v1ptr -> a_init.type, 3, 1)
      176 		then item.length (1) = v1ptr -> a_init.length;
      177 		if ^substr (v2ptr -> a_init.type, 3, 1)
      178 		then item.length (2) = v2ptr -> a_init.length;
      179 	     end;
      180 	if sofar > max_sofar
      181 	then do;
      182 		rcode = "1"b;
      183 		goto retrn;
      184 	     end;
      185 	sofar = sofar + 1;
      186 
      187 	v3ptr = v1ptr;
      188 	item_ptr1 = addr (item (1));
      189 
      190 start:
      191 	if substr (v3ptr -> a_init.type, 4, 1)
      192 	then goto all_lit;
      193 	if substr (v3ptr -> a_init.type, 2, 1)
      194 	then goto alpha;
      195 
      196 fig_con:
      197 	if first_time_in_compare
      198 	then do;
      199 		l = fixed (substr (v3ptr -> any_init.info, 2, 7), 15);
      200 		itemb.char = char_tbl (l);
      201 	     end;
      202 	goto got_char;
      203 
      204 all_lit:
      205 	if itemb.field_index = itemb.length
      206 	then itemb.field_index = 0;
      207 	itemb.field_index = itemb.field_index + 1;
      208 	itemb.char = substr (v3ptr -> a_init.string, itemb.field_index, 1);
      209 	goto got_char;
      210 
      211 alpha:
      212 	if itemb.field_index = itemb.length
      213 	then do;
      214 		itemb.char = " ";
      215 		goto got_char;
      216 	     end;
      217 	itemb.field_index = itemb.field_index + 1;
      218 	itemb.char = substr (v3ptr -> a_init.string, itemb.field_index, 1);
      219 	goto got_char;
      220 
      221 got_char:
      222 	if v3ptr = v1ptr
      223 	then do;
      224 		v3ptr = v2ptr;
      225 		item_ptr1 = addr (item (2));
      226 		goto start;
      227 	     end;
      228 
      229 retrn:
      230      end get_char;
      231 /********************/
      232 
      233 	first_time_in_compare = "0"b;
      234 	if rcode
      235 	then goto issue_equal_diag;
      236 	if item.char (1) = item.char (2)
      237 	then goto get_call;
      238 	if coll_seq_on
      239 	then do;
      240 		item.char (1) = coll_seq_tbl (fixed (unspec (item.char (1)), 17));
      241 		item.char (2) = coll_seq_tbl (fixed (unspec (item.char (2)), 17));
      242 	     end;
      243 	if item.char (1) > item.char (2)
      244 	then goto issue_lt_diag;
      245 	goto retrn;
      246 
      247 setup_num:					/*set up num struc for first operand*/
      248 	call make_num (v1ptr, 1);
      249 	goto get_second;
      250 
      251 comp_num:
      252 	call make_num (v2ptr, 2);
      253 	if first_is_zero
      254 	then call make_num (v1ptr, 1);
      255 
      256 /********************/
      257 make_num:
      258      proc (v4ptr, num_index);
      259 
      260 /*This procedure sets up the work structure num from an
      261*initial value extension for numeric literal or fig con zero */
      262 
      263 dcl	v4ptr		ptr;			/*in the following dcl, implicit ptr qualification
      264*			  is required for references to the string subfield*/
      265 dcl	1 n_init		based (v4ptr),
      266 	  2 type		bit (8),
      267 	  2 info		bit (8),
      268 	  2 sign		char (1),
      269 	  2 expsign	char (1),
      270 	  2 explaces	fixed bin (7),
      271 	  2 places_left	fixed bin (7),
      272 	  2 places_right	fixed bin (7),
      273 	  2 length	fixed bin (7),
      274 	  2 string	char (n_init.length);
      275 
      276 dcl	lit_count		fixed bin (15);
      277 dcl	fld_count		fixed bin (15);
      278 dcl	num_index		fixed bin (15);
      279 dcl	pnt		bit (1);
      280 dcl	sigdig		bit (1);
      281 
      282 
      283 
      284 	num_ptr1 = addr (num (num_index));
      285 
      286 	num_ptr1 -> numb.sign = "+";
      287 	num_ptr1 -> numb.exp = 0;
      288 	num_ptr1 -> numb.compfld = "000000000000000000000000000000";
      289 
      290 	if substr (v4ptr -> n_init.type, 1, 1)
      291 	then goto numeric_ext;			/*fig con zero*/
      292 	if num_index = 1
      293 	then num_ptr2 = addr (num (2));
      294 	else num_ptr2 = addr (num (1));
      295 	num_ptr1 -> numb.sign = num_ptr2 -> numb.sign;
      296 	num_ptr1 -> numb.exp = num_ptr2 -> numb.exp;
      297 	goto retrn;
      298 
      299 numeric_ext:
      300 	lit_count = 1;
      301 	fld_count = 1;
      302 	pnt = "0"b;
      303 	sigdig = "0"b;
      304 	num_ptr1 -> numb.sign = v4ptr -> n_init.sign;
      305 	if num_ptr1 -> numb.sign = " "
      306 	then num_ptr1 -> numb.sign = "+";
      307 
      308 select_char:
      309 	if substr (v4ptr -> n_init.string, lit_count, 1) >= "1" & substr (v4ptr -> n_init.string, lit_count, 1) <= "9"
      310 	then do;
      311 		sigdig = "1"b;
      312 		if ^pnt
      313 		then num_ptr1 -> numb.exp = num_ptr1 -> numb.exp + 1;
      314 		substr (num_ptr1 -> numb.compfld, fld_count, 1) = substr (v4ptr -> n_init.string, lit_count, 1);
      315 		fld_count = fld_count + 1;
      316 		goto increment_count;
      317 	     end;
      318 	if substr (v4ptr -> n_init.string, lit_count, 1) = "0"
      319 	then do;
      320 		if sigdig
      321 		then do;
      322 			substr (num_ptr1 -> numb.compfld, fld_count, 1) = "0";
      323 			if ^pnt
      324 			then num_ptr1 -> numb.exp = num_ptr1 -> numb.exp + 1;
      325 			fld_count = fld_count + 1;
      326 		     end;
      327 		else if pnt
      328 		then num_ptr1 -> numb.exp = num_ptr1 -> numb.exp + 1;
      329 		goto increment_count;
      330 	     end;
      331 	if substr (v4ptr -> n_init.string, lit_count, 1) = "."
      332 	then do;
      333 		pnt = "1"b;
      334 		goto increment_count;
      335 	     end;
      336 
      337 /*falls through if not a "0123456789."*/
      338 increment_count:
      339 	lit_count = lit_count + 1;
      340 	if lit_count > v4ptr -> n_init.length
      341 	then goto retrn;
      342 	goto select_char;
      343 
      344 retrn:
      345 	;
      346      end make_num;
      347 /********************/
      348 
      349 	if num.sign (1) ^= num.sign (2)
      350 	then do;
      351 		if num.sign (2) ^= "+"
      352 		then goto issue_lt_diag;		/*signs are different and opnd 2 is positive*/
      353 		goto retrn;
      354 	     end;
      355 	if num.sign (1) = "+"
      356 	then do;
      357 		num_index1 = 1;
      358 		num_index2 = 2;
      359 	     end;
      360 	else do;
      361 		num_index1 = 2;
      362 		num_index2 = 1;
      363 	     end;
      364 	if num.exp (num_index2) < num.exp (num_index1)
      365 	then goto issue_lt_diag;
      366 	if num.exp (num_index2) > num.exp (num_index1)
      367 	then goto retrn;				/*exponents are equal, signs are equal, num_index1  indexes whichever
      368*should be the lesser of the pair according to the sign*/
      369 	if num.compfld (num_index2) > num.compfld (num_index1)
      370 	then goto retrn;
      371 issue_equal_diag:
      372 	;
      373 issue_lt_diag:
      374 	status = 181;
      375 	goto retrn;
      376 retrn:
      377 	return (status);
      378 
      379 
      380 
      381 dcl	v1ptr		ptr;			/*ads->first extension*/
      382 dcl	v2ptr		ptr;			/*ads->second extension*/
      383 dcl	v3ptr		ptr;			/*ads->init val ext for get_char*/
      384 dcl	first		bit (1);
      385 dcl	first_is_zero	bit (1);
      386 dcl	first_is_num	bit (1);
      387 dcl	dnlength		fixed bin (31);		/*input: length of conditional variable (bytes)*/
      388 dcl	char_tbl_ptr	ptr;
      389 dcl	char_tbl		(7) char (1) based (char_tbl_ptr);
      390 dcl	1 any_init	based (v3ptr),
      391 	  2 type		bit (8),
      392 	  2 info		bit (8);
      393 dcl	1 a_init		based (v3ptr),
      394 	  2 type		bit (8),
      395 	  2 info		bit (8),
      396 	  2 length	fixed bin (15),
      397 	  2 string	char (a_init.length);
      398 dcl	num_index1	fixed bin (15);
      399 dcl	num_index2	fixed bin (15);
      400 dcl	first_time_in_compare
      401 			bit (1);
      402 dcl	status		fixed bin (15);		/*return value: zero or diag number*/
      403 dcl	rcode		bit (1);
      404 dcl	1 num		(2),
      405 	  2 sign		char (1),
      406 	  2 exp		fixed bin (15),
      407 	  2 compfld	char (30);
      408 
      409 dcl	num_ptr1		ptr,
      410 	num_ptr2		ptr;
      411 dcl	1 numb		based (num_ptr1),
      412 	  2 sign		char (1),
      413 	  2 exp		fixed bin (15),
      414 	  2 compfld	char (30);
      415 
      416 dcl	1 item		(2),
      417 	  2 length	fixed bin (31),
      418 	  2 field_index	fixed bin (31),
      419 	  2 char		char (1);
      420 dcl	item_ptr1		ptr,
      421 	item_ptr2		ptr;
      422 dcl	1 itemb		based (item_ptr1),		/*not always*/
      423 	  2 length	fixed bin (31),
      424 	  2 field_index	fixed bin (31),
      425 	  2 char		char (1);
      426 dcl	cst_ptr		ptr;
      427 dcl	coll_seq_tbl	(0:511) char (1) based (cst_ptr);
      428 dcl	coll_seq_on	bit (1);
      429 
      430 dcl	addr		builtin;
      431 dcl	fixed		builtin;
      432 dcl	null		builtin;
      433 dcl	substr		builtin;
      434 dcl	unspec		builtin;
      435 
      436 
  1     1 
  1     2 /* BEGIN INCLUDE FILE ... cobol_ext_.incl.pl1 */
  1     3 /* Last modified on 06/17/76 by ORN */
  1     4 /* Last modified on 12/28/76 by FCH */
  1     5 /* Last modified on 12/01/80 by FCH */
  1     6 
  1     7 /*    <<<   SHARED EXTERNALS INCLUDE FILE   >>>    */
  1     8 
  1     9 
  1    10 dcl     cobol_ext_$cobol_afp ptr ext;
  1    11 dcl     cobol_afp ptr defined (  cobol_ext_$cobol_afp);
  1    12 dcl     cobol_ext_$cobol_analin_fileno ptr ext;
  1    13 dcl     cobol_analin_fileno ptr defined (  cobol_ext_$cobol_analin_fileno);
  1    14 dcl     cobol_ext_$report_first_token ptr ext;
  1    15 dcl     report_first_token ptr defined( cobol_ext_$report_first_token);
  1    16 dcl     cobol_ext_$report_last_token ptr ext;
  1    17 dcl     report_last_token ptr defined ( cobol_ext_$report_last_token);
  1    18 dcl     cobol_ext_$cobol_eltp ptr ext;
  1    19 dcl     cobol_eltp ptr defined (  cobol_ext_$cobol_eltp);
  1    20 dcl     cobol_ext_$cobol_cmfp ptr ext;
  1    21 dcl     cobol_cmfp ptr defined (  cobol_ext_$cobol_cmfp);
  1    22 dcl     cobol_ext_$cobol_com_fileno ptr ext;
  1    23 dcl     cobol_com_fileno ptr defined (  cobol_ext_$cobol_com_fileno);
  1    24 dcl     cobol_ext_$cobol_com_ptr ptr ext;
  1    25 dcl     cobol_com_ptr ptr defined (  cobol_ext_$cobol_com_ptr);
  1    26 dcl     cobol_ext_$cobol_dfp ptr ext;
  1    27 dcl     cobol_dfp ptr defined (  cobol_ext_$cobol_dfp);
  1    28 dcl     cobol_ext_$cobol_hfp ptr ext;
  1    29 dcl     cobol_hfp ptr defined (  cobol_ext_$cobol_hfp);
  1    30 dcl     cobol_ext_$cobol_m1fp ptr ext;
  1    31 dcl     cobol_m1fp ptr defined (  cobol_ext_$cobol_m1fp);
  1    32 dcl     cobol_ext_$cobol_m2fp ptr ext;
  1    33 dcl     cobol_m2fp ptr defined (  cobol_ext_$cobol_m2fp);
  1    34 dcl     cobol_ext_$cobol_min1_fileno ptr ext;
  1    35 dcl     cobol_min1_fileno ptr defined (  cobol_ext_$cobol_min1_fileno);
  1    36 dcl     cobol_ext_$cobol_min2_fileno_ptr ptr ext;
  1    37 dcl     cobol_min2_fileno_ptr ptr defined (  cobol_ext_$cobol_min2_fileno_ptr);
  1    38 dcl     cobol_ext_$cobol_name_fileno ptr ext;
  1    39 dcl     cobol_name_fileno ptr defined (  cobol_ext_$cobol_name_fileno);
  1    40 dcl     cobol_ext_$cobol_name_fileno_ptr ptr ext;
  1    41 dcl     cobol_name_fileno_ptr ptr defined (  cobol_ext_$cobol_name_fileno_ptr);
  1    42 dcl     cobol_ext_$cobol_ntfp ptr ext;
  1    43 dcl     cobol_ntfp ptr defined (  cobol_ext_$cobol_ntfp);
  1    44 dcl     cobol_ext_$cobol_pdofp ptr ext;
  1    45 dcl     cobol_pdofp ptr defined (  cobol_ext_$cobol_pdofp);
  1    46 dcl     cobol_ext_$cobol_pfp ptr ext;
  1    47 dcl     cobol_pfp ptr defined (  cobol_ext_$cobol_pfp);
  1    48 dcl     cobol_ext_$cobol_rm2fp ptr ext;
  1    49 dcl     cobol_rm2fp ptr defined (  cobol_ext_$cobol_rm2fp);
  1    50 dcl     cobol_ext_$cobol_rmin2fp ptr ext;
  1    51 dcl     cobol_rmin2fp ptr defined (  cobol_ext_$cobol_rmin2fp);
  1    52 dcl     cobol_ext_$cobol_curr_in ptr ext;
  1    53 dcl     cobol_curr_in ptr defined (  cobol_ext_$cobol_curr_in);
  1    54 dcl     cobol_ext_$cobol_curr_out ptr ext;
  1    55 dcl     cobol_curr_out ptr defined (  cobol_ext_$cobol_curr_out);
  1    56 dcl     cobol_ext_$cobol_sfp ptr ext;
  1    57 dcl     cobol_sfp ptr defined (  cobol_ext_$cobol_sfp);
  1    58 dcl     cobol_ext_$cobol_w1p ptr ext;
  1    59 dcl     cobol_w1p ptr defined (  cobol_ext_$cobol_w1p);
  1    60 dcl     cobol_ext_$cobol_w2p ptr ext;
  1    61 dcl     cobol_w2p ptr defined (  cobol_ext_$cobol_w2p);
  1    62 dcl     cobol_ext_$cobol_w3p ptr ext;
  1    63 dcl     cobol_w3p ptr defined (  cobol_ext_$cobol_w3p);
  1    64 dcl     cobol_ext_$cobol_w5p ptr ext;
  1    65 dcl     cobol_w5p ptr defined (  cobol_ext_$cobol_w5p);
  1    66 dcl     cobol_ext_$cobol_w6p ptr ext;
  1    67 dcl     cobol_w6p ptr defined (  cobol_ext_$cobol_w6p);
  1    68 dcl     cobol_ext_$cobol_w7p ptr ext;
  1    69 dcl     cobol_w7p ptr defined (  cobol_ext_$cobol_w7p);
  1    70 dcl     cobol_ext_$cobol_x3fp ptr ext;
  1    71 dcl     cobol_x3fp ptr defined (  cobol_ext_$cobol_x3fp);
  1    72 dcl	cobol_ext_$cobol_rwdd ptr ext;
  1    73 dcl	cobol_rwdd ptr defined(cobol_ext_$cobol_rwdd);
  1    74 dcl	cobol_ext_$cobol_rwpd ptr ext;
  1    75 dcl	cobol_rwpd ptr defined(cobol_ext_$cobol_rwpd);
  1    76 
  1    77 
  1    78 dcl     cobol_ext_$cobol_fileno1 fixed bin(24)ext;
  1    79 dcl     cobol_fileno1 fixed bin(24)defined (  cobol_ext_$cobol_fileno1);				
  1    80 dcl     cobol_ext_$cobol_options_len fixed bin(24)ext;
  1    81 dcl     cobol_options_len fixed bin(24)defined (  cobol_ext_$cobol_options_len);
  1    82 dcl     cobol_ext_$cobol_pdout_fileno fixed bin(24)ext;
  1    83 dcl     cobol_pdout_fileno fixed bin(24)defined (  cobol_ext_$cobol_pdout_fileno);			
  1    84 dcl     cobol_ext_$cobol_print_fileno fixed bin(24)ext;
  1    85 dcl     cobol_print_fileno fixed bin(24)defined (  cobol_ext_$cobol_print_fileno);			
  1    86 dcl     cobol_ext_$cobol_rmin2_fileno fixed bin(24)ext;
  1    87 dcl     cobol_rmin2_fileno fixed bin(24)defined (  cobol_ext_$cobol_rmin2_fileno);
  1    88 dcl     cobol_ext_$cobol_x1_fileno fixed bin(24)ext;
  1    89 dcl     cobol_x1_fileno fixed bin(24)defined (  cobol_ext_$cobol_x1_fileno);				
  1    90 dcl     cobol_ext_$cobol_x2_fileno fixed bin(24)ext;
  1    91 dcl     cobol_x2_fileno fixed bin(24)defined (  cobol_ext_$cobol_x2_fileno);
  1    92 dcl     cobol_ext_$cobol_x3_fileno fixed bin(24)ext;
  1    93 dcl     cobol_x3_fileno fixed bin(24)defined (  cobol_ext_$cobol_x3_fileno);
  1    94 
  1    95 dcl     cobol_ext_$cobol_lpr char (5) ext;
  1    96 dcl     cobol_lpr char (5) defined (  cobol_ext_$cobol_lpr);				/* -2- */
  1    97 dcl     cobol_ext_$cobol_options char (120) ext;
  1    98 dcl     cobol_options char (120) defined (  cobol_ext_$cobol_options);          			/* -30- */
  1    99 
  1   100 dcl     cobol_ext_$cobol_xlast8 bit (1) ext;
  1   101 dcl     cobol_xlast8 bit (1) defined (  cobol_ext_$cobol_xlast8);				/* -1- */
  1   102 dcl     cobol_ext_$report_exists bit (1) ext;
  1   103 dcl     report_exists bit (1) defined (  cobol_ext_$report_exists);
  1   104 
  1   105 
  1   106 /*    <<<   END OF SHARED EXTERNALS INCLUDE FILE   >>>    */
  1   107 /* END INCLUDE FILE ... cobol_ext_.incl.pl1 */
  1   108 
      437 
  2     1 
  2     2 /* BEGIN INCLUDE FILE ...   cobol_fixed_common.incl.pl1 */
  2     3 /* Modified on 10/27/82 by FCH, [5.1-1], cobol_cln added to save last line num, BUG543(phx13643) */
  2     4 /* Modified on 07/31/80 by FCH, [4.3-1], use_reporting field added for Report Writer */
  2     5 /* Modified on 03/30/79 by FCH, [4.1-1], -card option added */
  2     6 /* Modified on 03/30/79 by FCH, [4.0-2], -svNM option added */
  2     7 /* Modified on 03/02/79 by FCH, [4.0-1], -levNM option added */
  2     8 /* Modified by RAL on 10/13/78, [4.0-0], Added option exp from fil2. */
  2     9 /* Modified by BC on 06/20/77, descriptor added.	*/
  2    10 /* Modified by BC on 06/02/77, init_cd_seg, init_cd_offset added.	*/
  2    11 /* Modified by BC  on 1/21/77, options.profile added.	*/
  2    12 /* Modified by FCH on 7/6/76, sysin_fno & sysout_fno deleted, accept_device & display_device added */
  2    13 /* Modified by FCH on 5/20/77, comp_level added */
  2    14 
  2    15 
  2    16 /*     THE SIZE OF THIS STRUCTURE IN BYTES, (EXCLUDING VARIABLE
  2    17*   LENGTH ENTITIES), FOR EACH HARDWARE IMPLEMENTATION IS:
  2    18*
  2    19*   HARDWARE	|	SIZE (BYTES)
  2    20*   ---------------------------------
  2    21*   645/6180	|	464
  2    22*   P7		|	396
  2    23*   ---------------------------------
  2    24*   */
  2    25 
  2    26 dcl 	1 fixed_common based (  cobol_com_ptr),
  2    27     		2 prog_name char (30),
  2    28    		2 compiler_rev_no char (25),
  2    29     		2 phase_name char (6),
  2    30     		2 currency char (1),
  2    31     		2 fatal_no fixed bin,
  2    32     		2 warn_no fixed bin,
  2    33     		2 proc_counter fixed bin,
  2    34     		2 spec_tag_counter fixed bin,
  2    35     		2 file_count fixed bin,
  2    36     		2 filedescr_offsets (20) char (5),
  2    37     		2 perf_alter_info char (5),
  2    38     		2 another_perform_info char (5),
  2    39     		2 sort_in_info char (5),
  2    40     		2 odo_info char (5),
  2    41     		2 size_seg fixed bin,
  2    42     		2 size_offset fixed bin(24),
  2    43     		2 size_perform_info char (5),
  2    44     		2 rename_info char (5),
  2    45     		2 report_names char (5),
  2    46     		2 rw_buf_seg fixed bin,
  2    47     		2 rw_buf_offset fixed bin(24),
  2    48     		2 rw_buf_length fixed bin(24),
  2    49     		2 file_keys char (5),
  2    50     		2 search_keys char (5),
  2    51     		2 dd_seg_size fixed bin(24),
  2    52     		2 pd_seg_size fixed bin(24),
  2    53     		2 seg_limit fixed bin ,
  2    54     		2 number_of_dd_segs fixed bin,
  2    55     		2 seg_info char (5),
  2    56     		2 number_of_ls_pointers fixed bin,
  2    57     		2 link_sec_seg fixed bin,
  2    58     		2 link_sec_offset fixed bin(24),
  2    59     		2 sra_clauses fixed bin,
  2    60     		2 fix_up_info char (5),
  2    61     		2 linage_info char (5),
  2    62     		2 first_dd_item char (5),
  2    63     		2 sort_out_info char (5),
  2    64     		2 db_info char (5),
  2    65     		2 realm_info char (5),
  2    66     		2 rc_realm_info char (5),
  2    67     		2 last_file_key char (5),
  2    68     		2 prog_coll_seq fixed bin,
  2    69 		2 init_cd_seg fixed bin,
  2    70 		2 init_cd_offset fixed bin(24),
  2    71     		2 input_error_exit fixed bin,
  2    72    		2 output_error_exit fixed bin,
  2    73     		2 i_o_error_exit fixed bin,
  2    74     		2 extend_error_exit fixed bin,
  2    75     		2 dummy15 fixed bin,
  2    76     		2 options,
  2    77       			3 cu bit (1),
  2    78       			3 st bit (1),
  2    79       			3 wn bit (1),
  2    80       			3 obs bit (1),
  2    81       			3 dm bit (1),
  2    82       			3 xrl bit (1),
  2    83       			3 xrn bit (1),
  2    84       			3 src bit (1),
  2    85       			3 obj bit (1),
  2    86       			3 exs bit (1),
  2    87       			3 sck bit (1),
  2    88       			3 rno bit (1),
  2    89 			3 u_l bit (1),
  2    90 			3 cnv bit (1),
  2    91 			3 cos bit (1),
  2    92 			3 fmt bit (1),
  2    93 			3 profile bit(1),
  2    94 			3 nw bit (1),
  2    95 			3 exp bit (1),		/* [4.0-0] */
  2    96 			3 card bit (1),  /*[4.1-1]*/
  2    97 			3 fil2 bit (5),
  2    98 			3 m_map bit (1),
  2    99 			3 m_bf bit (1),
  2   100 			3 m_fat bit (1),
  2   101 			3 m_wn bit (1),
  2   102 			3 m_obs bit(1),
  2   103 			3 pd bit(1),
  2   104       			3 oc bit(1),
  2   105     		2 supervisor bit (1),
  2   106     		2 dec_comma bit (1),
  2   107     		2 init_cd bit (1),
  2   108     		2 corr bit (1),
  2   109     		2 initl bit (1),
  2   110     		2 debug bit (1),
  2   111     		2 report bit (1),
  2   112     		2 sync_in_prog bit (1),
  2   113     		2 pd_section bit (1),
  2   114     		2 list_switch bit (1),
  2   115     		2 alpha_cond bit (1),
  2   116     		2 num_cond bit (1),
  2   117     		2 spec_sysin bit (1),
  2   118     		2 spec_sysout bit (1),
  2   119     		2 cpl_files bit (1),
  2   120     		2 obj_dec_comma bit (1),
  2   121 		2 default_sign_type bit (3),
  2   122 		2 use_debug bit(1),
  2   123 		2 syntax_trace bit(1),
  2   124 		2 comp_defaults,
  2   125 			3 comp	bit(1),
  2   126 			3 comp_1	bit(1),
  2   127 			3 comp_2	bit(1),
  2   128 			3 comp_3	bit(1),
  2   129 			3 comp_4	bit(1),
  2   130 			3 comp_5	bit(1),
  2   131 			3 comp_6	bit(1),
  2   132 			3 comp_7	bit(1),
  2   133 			3 comp_8 bit(1),
  2   134 		2 disp_defaults,
  2   135 			3 disp	bit(1),
  2   136 			3 disp_1	bit(1),
  2   137 			3 disp_2	bit(1),
  2   138 			3 disp_3	bit(1),
  2   139 			3 disp_4	bit(1),
  2   140 			3 disp_5  bit(1),
  2   141 			3 disp_6  bit(1),
  2   142 			3 disp_7  bit(1),
  2   143 		2 descriptor bit(2),
  2   144 		2 levsv  bit(3),		/*[4.0-1]*/
  2   145 		2 use_reporting bit(1),	/*[4.3-1]*/
  2   146 		2 cd bit(1),		/*[4.4-1]*/
  2   147 		2 dummy17 bit(3),
  2   148    		2 lvl_rstr bit(32),
  2   149    		2 inst_rstr bit(32),
  2   150 		2 comp_level char(1),
  2   151 		2 dummy18 char(30),
  2   152 		2 object_sign char (1),
  2   153     		2 last_print_rec char (5),
  2   154     		2 coll_seq_info char (5),
  2   155     		2 sys_status_seg fixed bin,
  2   156    		2 sys_status_offset fixed bin(24),
  2   157    		2 compiler_id fixed bin,
  2   158    		2 date_comp_ln fixed bin,
  2   159    		2 compile_mode bit(36),
  2   160    		2 default_temp fixed bin,
  2   161    		2 accept_device fixed bin,
  2   162    		2 display_device fixed bin,
  2   163    		2 cobol_cln fixed bin,	/*[5.1-1]*/
  2   164 		2 alphabet_offset fixed bin;
  2   165 
  2   166 
  2   167 
  2   168 /* END INCLUDE FILE ...   cobol_fixed_common.incl.pl1 */
  2   169 
      438 
  3     1 
  3     2 /* BEGIN INCLUDE FILE ... cobol_type40.incl.pl1 */
  3     3 /* Last modified on 11/19/76 by ORN */
  3     4 
  3     5 /*
  3     6*A type 40 token is entered into the name table by the IDED syntax.
  3     7*This token contains the information for the alphabet name.
  3     8**/
  3     9 
  3    10 dcl	alpha_name_ptr	ptr;
  3    11 
  3    12 /* BEGIN DECLARATION OF TYPE40 (ALPHABET NAME) TOKEN */
  3    13 dcl 1 alphabet_name based (alpha_name_ptr),
  4     1 
  4     2 /* begin include file ... cobol_TYPE40.incl.pl1 */
  4     3 /* Last modified on 11/17/76 by ORN */
  4     4 
  4     5 		/* header */
  4     6 		2 size fixed bin,
  4     7 		2 line fixed bin,
  4     8 		2 column fixed bin,
  4     9 		2 type fixed bin,
  4    10 		/* body */
  4    11 		2 string_ptr ptr,
  4    12 		2 prev_rec ptr,
  4    13 		2 info,
  4    14 			3 repl bit(8),
  4    15 			3 one_one bit(1),
  4    16 			3 onto bit(1),
  4    17 		2 hival_char char(1),
  4    18 		2 loval_char char(1),
  4    19 		2 iw_key fixed bin,
  4    20 		2 def_line fixed bin,
  4    21 		2 char_size fixed bin,
  4    22 		2 hi_value char(1),
  4    23 		2 segno fixed bin,
  4    24 		2 offset fixed bin,
  4    25 		2 dn_offset fixed bin,
  4    26 		2 table char(512),
  4    27 		2 name_size fixed bin,
  4    28 		2 name char(0 refer(alphabet_name.name_size));
  4    29 
  4    30 /* end include file ... cobol_TYPE40.incl.pl1 */
  4    31 
  3    14 
  3    15 /* END DECLARATION OF TYPE40 (ALPHABET NAME) TOKEN */
  3    16 
  3    17 /* END INCLUDE FILE ... cobol_type40.incl.pl1 */
  3    18 
      439 
      440 
      441      end cobol_compare_values;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/24/89  0833.0  cobol_compare_values.pl1          >spec>install>MR12.3-1048>cobol_compare_values.pl1
437          1    03/27/82  0431.3  cobol_ext_.incl.pl1               >ldd>include>cobol_ext_.incl.pl1
438          2    11/11/82  1712.8  cobol_fixed_common.incl.pl1       >ldd>include>cobol_fixed_common.incl.pl1
439          3    03/27/82  0439.8  cobol_type40.incl.pl1             >ldd>include>cobol_type40.incl.pl1
3-14         4    11/11/82  1712.8  cobol_TYPE40.incl.pl1             >ldd>include>cobol_TYPE40.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
a_init                                 based           structure                level 1 unaligned dcl 104
addr                                                   builtin function         dcl 430 ref 51 188 225 284 292 294
alpha_name_ptr                  000156 automatic       pointer                  dcl 3-10 set ref 49* 51
alphabet_name                          based           structure                level 1 unaligned dcl 3-13
any_init                               based           structure                level 1 packed packed unaligned dcl 390
char                      2            based           char(1)                  level 2 in structure "itemb" packed packed unaligned
                                                                                  dcl 422 in procedure "cobol_compare_values" set
                                                                                  ref 200* 208* 214* 218*
char                      2     000142 automatic       char(1)                  array level 2 in structure "item" packed packed
                                                                                  unaligned dcl 416 in procedure
                                                                                  "cobol_compare_values" set ref 236 236 240* 240
                                                                                  241* 241 243 243
char_tbl                               based           char(1)                  array packed unaligned dcl 389 ref 200
char_tbl_ptr                           parameter       pointer                  dcl 388 ref 27 200
cobol_com_ptr                          defined         pointer                  dcl 1-25 ref 46 49
cobol_ext_$cobol_com_ptr        000012 external static pointer                  dcl 1-24 ref 46 46 49 49
cobol_read_rand_$fixed_bin      000010 constant        entry                    external dcl 36 ref 49
coll_seq_on                     000154 automatic       bit(1)                   packed unaligned dcl 428 set ref 45* 52* 238
coll_seq_tbl                           based           char(1)                  array packed unaligned dcl 427 ref 240 241
compfld                   2     000112 automatic       char(30)                 array level 2 in structure "num" packed packed
                                                                                  unaligned dcl 404 in procedure
                                                                                  "cobol_compare_values" set ref 369 369
compfld                   2            based           char(30)                 level 2 in structure "numb" packed packed unaligned
                                                                                  dcl 411 in procedure "cobol_compare_values" set
                                                                                  ref 288* 314* 322*
cst_ptr                         000152 automatic       pointer                  dcl 426 set ref 51* 240 241
dnlength                               parameter       fixed bin(31,0)          dcl 387 ref 27
exp                       1     000112 automatic       fixed bin(15,0)          array level 2 in structure "num" dcl 404
                                                                                  in procedure "cobol_compare_values" set ref 364
                                                                                  364 366 366
exp                       1            based           fixed bin(15,0)          level 2 in structure "numb" dcl 411 in procedure
                                                                                  "cobol_compare_values" set ref 287* 296* 296 312*
                                                                                  312 323* 323 327* 327
field_index               1            based           fixed bin(31,0)          level 2 in structure "itemb" dcl 422 in procedure
                                                                                  "cobol_compare_values" set ref 204 204* 207* 207
                                                                                  208 211 217* 217 218
field_index               1     000142 automatic       fixed bin(31,0)          array level 2 in structure "item" dcl 416
                                                                                  in procedure "cobol_compare_values" set ref 173*
                                                                                  174*
first                           000102 automatic       bit(1)                   packed unaligned dcl 384 set ref 42* 62*
first_is_num                    000104 automatic       bit(1)                   packed unaligned dcl 386 set ref 44* 56* 66 79
first_is_zero                   000103 automatic       bit(1)                   packed unaligned dcl 385 set ref 43* 59* 66 253
first_time_in_compare           000107 automatic       bit(1)                   packed unaligned dcl 400 set ref 84* 112 196 233*
fixed                                                  builtin function         dcl 431 ref 199 240 241
fixed_common                           based           structure                level 1 unaligned dcl 2-26
fld_count                       000201 automatic       fixed bin(15,0)          dcl 277 set ref 301* 314 315* 315 322 325* 325
info                      0(08)        based           bit(8)                   level 2 packed packed unaligned dcl 390 ref 59 70 72
                                                                                  199
item                            000142 automatic       structure                array level 1 unaligned dcl 416 set ref 188 225
item_ptr1                       000150 automatic       pointer                  dcl 420 set ref 188* 200 204 204 204 207 207 208 208
                                                                                  211 211 214 217 217 218 218 225*
itemb                                  based           structure                level 1 unaligned dcl 422
l                               000170 automatic       fixed bin(7,0)           dcl 110 set ref 199* 200
length                    4            based           fixed bin(7,0)           level 2 in structure "n_init" dcl 265 in procedure
                                                                                  "make_num" ref 308 308 314 318 331 340
length                    1            based           fixed bin(15,0)          level 2 in structure "a_init" dcl 104 in procedure
                                                                                  "get_char" ref 145 145 145 148 153 160 168 168 175
                                                                                  177 208 218
length                          000142 automatic       fixed bin(31,0)          array level 2 in structure "item" dcl 416
                                                                                  in procedure "cobol_compare_values" set ref 175*
                                                                                  177*
length                                 based           fixed bin(31,0)          level 2 in structure "itemb" dcl 422 in procedure
                                                                                  "cobol_compare_values" ref 204 211
lit_count                       000200 automatic       fixed bin(15,0)          dcl 276 set ref 299* 308 308 314 318 331 338* 338
                                                                                  340
max_sofar                       000166 automatic       fixed bin(31,0)          dcl 99 set ref 145* 148* 153* 160* 164* 168* 180
n_init                                 based           structure                level 1 unaligned dcl 265
num                             000112 automatic       structure                array level 1 unaligned dcl 404 set ref 284 292 294
num_index                              parameter       fixed bin(15,0)          dcl 278 ref 257 284 292
num_index1                      000105 automatic       fixed bin(15,0)          dcl 398 set ref 357* 361* 364 366 369
num_index2                      000106 automatic       fixed bin(15,0)          dcl 399 set ref 358* 362* 364 366 369
num_ptr1                        000136 automatic       pointer                  dcl 409 set ref 284* 286 287 288 295 296 304 305 305
                                                                                  312 312 314 322 323 323 327 327
num_ptr2                        000140 automatic       pointer                  dcl 409 set ref 292* 294* 295 296
numb                                   based           structure                level 1 unaligned dcl 411
pnt                             000202 automatic       bit(1)                   packed unaligned dcl 279 set ref 302* 312 323 327
                                                                                  333*
prog_coll_seq           123            based           fixed bin(17,0)          level 2 dcl 2-26 set ref 46 49*
rcode                           000111 automatic       bit(1)                   packed unaligned dcl 403 set ref 86* 182* 234
sigdig                          000203 automatic       bit(1)                   packed unaligned dcl 280 set ref 303* 311* 320
sign                                   based           char(1)                  level 2 in structure "numb" packed packed unaligned
                                                                                  dcl 411 in procedure "cobol_compare_values" set
                                                                                  ref 286* 295* 295 304* 305 305*
sign                      0(18)        based           char(1)                  level 2 in structure "n_init" packed packed
                                                                                  unaligned dcl 265 in procedure "make_num" ref 304
sign                            000112 automatic       char(1)                  array level 2 in structure "num" packed packed
                                                                                  unaligned dcl 404 in procedure
                                                                                  "cobol_compare_values" set ref 349 349 351 355
sofar                           000167 automatic       fixed bin(31,0)          dcl 101 set ref 171* 180 185* 185
status                          000110 automatic       fixed bin(15,0)          dcl 402 set ref 40* 373* 376
string                    2            based           char                     level 2 in structure "a_init" packed packed
                                                                                  unaligned dcl 104 in procedure "get_char" ref 208
                                                                                  218
string                    5            based           char                     level 2 in structure "n_init" packed packed
                                                                                  unaligned dcl 265 in procedure "make_num" ref 308
                                                                                  308 314 318 331
substr                                                 builtin function         dcl 433 set ref 54 59 59 64 70 70 72 72 72 77 114
                                                                                  116 120 123 127 130 134 137 175 177 190 193 199
                                                                                  208 218 290 308 308 314* 314 318 322* 331
table                    20            based           char(512)                level 2 packed packed unaligned dcl 3-13 set ref 51
type                                   based           bit(8)                   level 2 in structure "any_init" packed packed
                                                                                  unaligned dcl 390 in procedure
                                                                                  "cobol_compare_values" ref 54 59 64 70 72 72 77
type                                   based           bit(8)                   level 2 in structure "a_init" packed packed
                                                                                  unaligned dcl 104 in procedure "get_char" ref 114
                                                                                  116 120 123 127 130 134 137 175 177 190 193
type                                   based           bit(8)                   level 2 in structure "n_init" packed packed
                                                                                  unaligned dcl 265 in procedure "make_num" ref 290
unspec                                                 builtin function         dcl 434 ref 240 241
v1ptr                                  parameter       pointer                  dcl 381 set ref 27 54 59 59 72 72 72 114 116 145 145
                                                                                  153 168 175 175 187 221 247* 253*
v2ptr                                  parameter       pointer                  dcl 382 set ref 27 64 70 70 77 120 123 127 130 134
                                                                                  137 145 148 160 168 177 177 224 251*
v3ptr                           000100 automatic       pointer                  dcl 383 set ref 187* 190 193 199 208 208 218 218 221
                                                                                  224*
v4ptr                                  parameter       pointer                  dcl 263 ref 257 290 304 308 308 308 308 314 314 318
                                                                                  318 331 331 340

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
a_init                                 based           structure                level 1 unaligned dcl 393
cobol_afp                              defined         pointer                  dcl 1-11
cobol_analin_fileno                    defined         pointer                  dcl 1-13
cobol_cmfp                             defined         pointer                  dcl 1-21
cobol_com_fileno                       defined         pointer                  dcl 1-23
cobol_curr_in                          defined         pointer                  dcl 1-53
cobol_curr_out                         defined         pointer                  dcl 1-55
cobol_dfp                              defined         pointer                  dcl 1-27
cobol_eltp                             defined         pointer                  dcl 1-19
cobol_ext_$cobol_afp                   external static pointer                  dcl 1-10
cobol_ext_$cobol_analin_fileno         external static pointer                  dcl 1-12
cobol_ext_$cobol_cmfp                  external static pointer                  dcl 1-20
cobol_ext_$cobol_com_fileno            external static pointer                  dcl 1-22
cobol_ext_$cobol_curr_in               external static pointer                  dcl 1-52
cobol_ext_$cobol_curr_out              external static pointer                  dcl 1-54
cobol_ext_$cobol_dfp                   external static pointer                  dcl 1-26
cobol_ext_$cobol_eltp                  external static pointer                  dcl 1-18
cobol_ext_$cobol_fileno1               external static fixed bin(24,0)          dcl 1-78
cobol_ext_$cobol_hfp                   external static pointer                  dcl 1-28
cobol_ext_$cobol_lpr                   external static char(5)                  packed unaligned dcl 1-95
cobol_ext_$cobol_m1fp                  external static pointer                  dcl 1-30
cobol_ext_$cobol_m2fp                  external static pointer                  dcl 1-32
cobol_ext_$cobol_min1_fileno           external static pointer                  dcl 1-34
cobol_ext_$cobol_min2_fileno_ptr       external static pointer                  dcl 1-36
cobol_ext_$cobol_name_fileno           external static pointer                  dcl 1-38
cobol_ext_$cobol_name_fileno_ptr       external static pointer                  dcl 1-40
cobol_ext_$cobol_ntfp                  external static pointer                  dcl 1-42
cobol_ext_$cobol_options               external static char(120)                packed unaligned dcl 1-97
cobol_ext_$cobol_options_len           external static fixed bin(24,0)          dcl 1-80
cobol_ext_$cobol_pdofp                 external static pointer                  dcl 1-44
cobol_ext_$cobol_pdout_fileno          external static fixed bin(24,0)          dcl 1-82
cobol_ext_$cobol_pfp                   external static pointer                  dcl 1-46
cobol_ext_$cobol_print_fileno          external static fixed bin(24,0)          dcl 1-84
cobol_ext_$cobol_rm2fp                 external static pointer                  dcl 1-48
cobol_ext_$cobol_rmin2_fileno          external static fixed bin(24,0)          dcl 1-86
cobol_ext_$cobol_rmin2fp               external static pointer                  dcl 1-50
cobol_ext_$cobol_rwdd                  external static pointer                  dcl 1-72
cobol_ext_$cobol_rwpd                  external static pointer                  dcl 1-74
cobol_ext_$cobol_sfp                   external static pointer                  dcl 1-56
cobol_ext_$cobol_w1p                   external static pointer                  dcl 1-58
cobol_ext_$cobol_w2p                   external static pointer                  dcl 1-60
cobol_ext_$cobol_w3p                   external static pointer                  dcl 1-62
cobol_ext_$cobol_w5p                   external static pointer                  dcl 1-64
cobol_ext_$cobol_w6p                   external static pointer                  dcl 1-66
cobol_ext_$cobol_w7p                   external static pointer                  dcl 1-68
cobol_ext_$cobol_x1_fileno             external static fixed bin(24,0)          dcl 1-88
cobol_ext_$cobol_x2_fileno             external static fixed bin(24,0)          dcl 1-90
cobol_ext_$cobol_x3_fileno             external static fixed bin(24,0)          dcl 1-92
cobol_ext_$cobol_x3fp                  external static pointer                  dcl 1-70
cobol_ext_$cobol_xlast8                external static bit(1)                   packed unaligned dcl 1-100
cobol_ext_$report_exists               external static bit(1)                   packed unaligned dcl 1-102
cobol_ext_$report_first_token          external static pointer                  dcl 1-14
cobol_ext_$report_last_token           external static pointer                  dcl 1-16
cobol_fileno1                          defined         fixed bin(24,0)          dcl 1-79
cobol_hfp                              defined         pointer                  dcl 1-29
cobol_lpr                              defined         char(5)                  packed unaligned dcl 1-96
cobol_m1fp                             defined         pointer                  dcl 1-31
cobol_m2fp                             defined         pointer                  dcl 1-33
cobol_min1_fileno                      defined         pointer                  dcl 1-35
cobol_min2_fileno_ptr                  defined         pointer                  dcl 1-37
cobol_name_fileno                      defined         pointer                  dcl 1-39
cobol_name_fileno_ptr                  defined         pointer                  dcl 1-41
cobol_ntfp                             defined         pointer                  dcl 1-43
cobol_options                          defined         char(120)                packed unaligned dcl 1-98
cobol_options_len                      defined         fixed bin(24,0)          dcl 1-81
cobol_pdofp                            defined         pointer                  dcl 1-45
cobol_pdout_fileno                     defined         fixed bin(24,0)          dcl 1-83
cobol_pfp                              defined         pointer                  dcl 1-47
cobol_print_fileno                     defined         fixed bin(24,0)          dcl 1-85
cobol_rm2fp                            defined         pointer                  dcl 1-49
cobol_rmin2_fileno                     defined         fixed bin(24,0)          dcl 1-87
cobol_rmin2fp                          defined         pointer                  dcl 1-51
cobol_rwdd                             defined         pointer                  dcl 1-73
cobol_rwpd                             defined         pointer                  dcl 1-75
cobol_sfp                              defined         pointer                  dcl 1-57
cobol_w1p                              defined         pointer                  dcl 1-59
cobol_w2p                              defined         pointer                  dcl 1-61
cobol_w3p                              defined         pointer                  dcl 1-63
cobol_w5p                              defined         pointer                  dcl 1-65
cobol_w6p                              defined         pointer                  dcl 1-67
cobol_w7p                              defined         pointer                  dcl 1-69
cobol_x1_fileno                        defined         fixed bin(24,0)          dcl 1-89
cobol_x2_fileno                        defined         fixed bin(24,0)          dcl 1-91
cobol_x3_fileno                        defined         fixed bin(24,0)          dcl 1-93
cobol_x3fp                             defined         pointer                  dcl 1-71
cobol_xlast8                           defined         bit(1)                   packed unaligned dcl 1-101
item_index                             automatic       fixed bin(15,0)          dcl 102
item_ptr2                              automatic       pointer                  dcl 420
null                                                   builtin function         dcl 432
report_exists                          defined         bit(1)                   packed unaligned dcl 1-103
report_first_token                     defined         pointer                  dcl 1-15
report_last_token                      defined         pointer                  dcl 1-17

NAMES DECLARED BY EXPLICIT CONTEXT.
all_1                           000365 constant        label                    dcl 134 ref 114
all_all                         000427 constant        label                    dcl 168 ref 134
all_alpha                       000375 constant        label                    dcl 141 ref 139
all_fig                         000413 constant        label                    dcl 153 ref 137
all_lit                         000521 constant        label                    dcl 204 ref 190
alpha                           000535 constant        label                    dcl 211 ref 193
alpha_1                         000345 constant        label                    dcl 120 ref 118
alpha_all                       000376 constant        label                    dcl 143 ref 120
alpha_alpha                     000377 constant        label                    dcl 145 ref 125
alpha_fig                       000412 constant        label                    dcl 151 ref 123
cobol_compare_values            000010 constant        entry                    external dcl 27
comp_non_num                    000144 constant        label                    dcl 84 set ref 79
comp_num                        000223 constant        label                    dcl 251 ref 66 72
fig_1                           000355 constant        label                    dcl 127 ref 116
fig_all                         000420 constant        label                    dcl 160 ref 127
fig_alpha                       000417 constant        label                    dcl 158 ref 132
fig_con                         000500 constant        label                    dcl 196
fig_fig                         000424 constant        label                    dcl 164 ref 130
get_call                        000147 constant        label                    dcl 88 ref 236
get_char                        000331 constant        entry                    internal dcl 92 ref 88
get_second                      000072 constant        label                    dcl 62 ref 249
got_char                        000553 constant        label                    dcl 221 ref 202 209 215 219
increment_count                 000723 constant        label                    dcl 338 ref 316 329 334
issue_equal_diag                000321 constant        label                    dcl 371 ref 234
issue_lt_diag                   000322 constant        label                    dcl 373 ref 243 351 364
make_num                        000567 constant        entry                    internal dcl 257 ref 247 251 253
numeric_ext                     000624 constant        label                    dcl 299 ref 290
out                             000434 constant        label                    dcl 171 ref 149 155 162 166
retrn                           000566 constant        label                    dcl 229 in procedure "get_char" ref 183
retrn                           000730 constant        label                    dcl 344 in procedure "make_num" ref 297 340
retrn                           000325 constant        label                    dcl 376 in procedure "cobol_compare_values" ref 68
                                                                                  81 245 353 366 369 375
select_char                     000641 constant        label                    dcl 308 ref 342
setup_num                       000210 constant        label                    dcl 247 ref 57
start                           000015 constant        label                    dcl 40 in procedure "cobol_compare_values"
start                           000472 constant        label                    dcl 190 in procedure "get_char" ref 226

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1010        1024     733        1020
Length      1262     733        14         221      54           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cobol_compare_values                143 external procedure  is an external procedure.  
get_char                                internal procedure  shares stack frame of external procedure cobol_compare_values.  
make_num                                internal procedure  shares stack frame of external procedure cobol_compare_values.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cobol_compare_values     000100 v3ptr                       cobol_compare_values
                         000102 first                       cobol_compare_values
                         000103 first_is_zero               cobol_compare_values
                         000104 first_is_num                cobol_compare_values
                         000105 num_index1                  cobol_compare_values
                         000106 num_index2                  cobol_compare_values
                         000107 first_time_in_compare       cobol_compare_values
                         000110 status                      cobol_compare_values
                         000111 rcode                       cobol_compare_values
                         000112 num                         cobol_compare_values
                         000136 num_ptr1                    cobol_compare_values
                         000140 num_ptr2                    cobol_compare_values
                         000142 item                        cobol_compare_values
                         000150 item_ptr1                   cobol_compare_values
                         000152 cst_ptr                     cobol_compare_values
                         000154 coll_seq_on                 cobol_compare_values
                         000156 alpha_name_ptr              cobol_compare_values
                         000166 max_sofar                   get_char
                         000167 sofar                       get_char
                         000170 l                           get_char
                         000200 lit_count                   make_num
                         000201 fld_count                   make_num
                         000202 pnt                         make_num
                         000203 sigdig                      make_num

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cobol_read_rand_$fixed_bin

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
cobol_ext_$cobol_com_ptr




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     27 000003        40 000015        42 000016        43 000020        44 000021        45 000022        46 000023
     49 000027        51 000043        52 000046        54 000050        56 000057        57 000060        59 000061
     62 000072        64 000073        66 000102        68 000106        70 000107        72 000117        77 000135
     79 000141        81 000143        84 000144        86 000146        88 000147       233 000150       234 000151
    236 000153       238 000162       240 000164       241 000172       243 000177       245 000207       247 000210
    249 000222       251 000223       253 000235       349 000252       351 000262       353 000264       355 000265
    357 000270       358 000272       359 000274       361 000275       362 000277       364 000301       366 000311
    369 000312       371 000321       373 000322       375 000324       376 000325        92 000331       112 000332
    114 000334       116 000341       118 000344       120 000345       123 000351       125 000354       127 000355
    130 000361       132 000364       134 000365       137 000371       139 000374       141 000375       143 000376
    145 000377       148 000407       149 000411       151 000412       153 000413       155 000416       158 000417
    160 000420       162 000423       164 000424       166 000426       168 000427       171 000434       173 000435
    174 000436       175 000437       177 000445       180 000455       182 000460       183 000462       185 000463
    187 000464       188 000470       190 000472       193 000475       196 000500       199 000502       200 000511
    202 000520       204 000521       207 000526       208 000527       209 000534       211 000535       214 000541
    215 000543       217 000544       218 000545       219 000552       221 000553       224 000560       225 000563
    226 000565       229 000566       257 000567       284 000571       286 000575       287 000577       288 000600
    290 000603       292 000607       294 000615       295 000617       296 000621       297 000623       299 000624
    301 000626       302 000627       303 000630       304 000631       305 000635       308 000641       311 000656
    312 000660       314 000664       315 000671       316 000672       318 000673       320 000675       322 000677
    323 000704       325 000707       326 000710       327 000711       329 000715       331 000716       333 000720
    334 000722       338 000723       340 000724       342 000727       344 000730       346 000731


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
