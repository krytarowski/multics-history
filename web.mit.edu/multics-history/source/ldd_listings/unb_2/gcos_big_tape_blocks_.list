	COMPILATION LISTING OF SEGMENT gcos_big_tape_blocks_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/10/84  1202.6 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 gcos_big_tape_blocks_: proc ()returns (bit (1));
        7 
        8 /* Subroutine that reports whether the caller can use "big"
        9*   tape blocks.
       10*
       11*   Author: Dave Ward	04/22/81
       12**/
       13 	call use_big_tape_blocks_ (code);
       14 	if code = 0 then return ("0"b);
       15 	if code = error_table_$big_ws_req then do;	/* Does not have access. */
       16 	     call com_err_ (
       17 		code
       18 		, "gcos_big_tape_blocks_"
       19 		, "^/Caller can not use big tape blocks."
       20 		||"^/Contact personnel from SysMaint."
       21 		||"^/Need read and ^[execute^;write^] on ^a>^a,"
       22 		||"^/or read and ^[execute^;write^] on ^a>^a."
       23 		, nex (1), dir (1), ent (1)
       24 		, nex (2), dir (2), ent (2)
       25 		);
       26 	     return ("1"b);
       27 	end;
       28 	call com_err_ (
       29 	     code
       30 	     , "gcos_big_tape_blocks_"
       31 	     , "^/UNEXPECTED ERROR, could not get mode for caller, contact SysMaint."
       32 	     );
       33 	return ("1"b);
       34 
       35 /*   Variables for gcos_big_tape_blocks_:	 */
       36 /*   IDENTIFIER		ATTRIBUTES	 */
       37 dcl  code                     fixed bin(35);
       38 dcl  com_err_                 entry() options(variable);
       39 dcl  error_table_$big_ws_req  fixed bin(35) ext static;
       40 dcl  ioa_                     entry() options(variable);
       41 dcl  use_big_tape_blocks_     entry (fixed bin(35));
       42 
  1     1 /* BEGIN INCLUDE FILE use_big_tape_blocks.incl.pl1   (Wardd Multics)  04/22/81 1141.6 mst Wed */
  1     2 
  1     3 /* Specification of resources needed to utilize "big" tape
  1     4*   blocks, i.e., over 11888 bytes.
  1     5**/
  1     6 
  1     7 dcl 1 big_tape_blocks_resources dim(2) static int options(constant),
  1     8     3 nex	bit(1)init("1"b,"0"b),	/* "1"b => need execute. */
  1     9 				/* "0"b => need write. */
  1    10     3 dir	char(8)init(
  1    11 		">sl1",
  1    12 		">sc1>rcp"
  1    13 		),
  1    14     3 ent	char(13)init(
  1    15 		"rcp_sys_",
  1    16 		"workspace.acs"
  1    17 		);
  1    18 
  1    19 /*   END INCLUDE FILE use_big_tape_blocks.incl.pl1 */
       43 
       44      end gcos_big_tape_blocks_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/10/84  1041.6  gcos_big_tape_blocks_.pl1         >spec>on>7105>gcos_big_tape_blocks_.pl1
43           1    03/27/82  0424.8  use_big_tape_blocks.incl.pl1      >ldd>include>use_big_tape_blocks.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
big_tape_blocks_resources       000000 constant        structure                array level 1 packed unaligned dcl 1-7
code                            000100 automatic       fixed bin(35,0)          dcl 37 set ref 13* 14 15 16* 28*
com_err_                        000010 constant        entry                    external dcl 38 ref 16 28
dir                       0(09) 000000 constant        char(8)                  initial array level 2 packed unaligned dcl 1-7 set
                                                                                  ref 16* 16*
ent                       2(09) 000000 constant        char(13)                 initial array level 2 packed unaligned dcl 1-7 set
                                                                                  ref 16* 16*
error_table_$big_ws_req         000012 external static fixed bin(35,0)          dcl 39 ref 15
nex                             000000 constant        bit(1)                   initial array level 2 packed unaligned dcl 1-7 set
                                                                                  ref 16* 16*
use_big_tape_blocks_            000014 constant        entry                    external dcl 41 ref 13

NAME DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
ioa_                            000000 constant        entry                    external dcl 40

NAME DECLARED BY EXPLICIT CONTEXT.
gcos_big_tape_blocks_           000124 constant        entry                    external dcl 6

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       370         406     310         400
Length       600     310        16         156      60           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gcos_big_tape_blocks_               154 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gcos_big_tape_blocks_    000100 code                        gcos_big_tape_blocks_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      use_big_tape_blocks_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$big_ws_req




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      6 000121        13 000131        14 000137        15 000147        16 000152        26 000243        28 000251
     33 000302


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
