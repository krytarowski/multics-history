	COMPILATION LISTING OF SEGMENT apl_dyadic_ibeam_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell LCPD Phoenix, System M
	Compiled on: 11/29/83  1602.3 mst Tue
	    Options: optimize map

        1 /* ******************************************************
        2*   *                                                    *
        3*   *                                                    *
        4*   * Copyright (c) 1972 by Massachusetts Institute of   *
        5*   * Technology and Honeywell Information Systems, Inc. *
        6*   *                                                    *
        7*   *                                                    *
        8*   ****************************************************** */
        9 
       10 apl_dyadic_ibeam_:
       11 	procedure (operators_argument);
       12 
       13 /* Dummy procedure to turn these unimplemented operators into errors */
       14 /* PG 740625 */
       15 /* Modified 781109 by PG to remove trap for format operators */
       16 
       17 /* external static */
       18 
       19 declare	apl_error_table_$not_implemented fixed bin (35) external static;
       20 
       21 /* include files */
       22 
  1     1 /* ====== BEGIN INCLUDE SEGEMENT	apl_operators_argument.incl.pl1 =========================== */
  1     2 
  1     3 declare	1 operators_argument	aligned,
  1     4 	  2 operands (2)		aligned,		/* these are the operands to the operator to be executed.
  1     5*						   if operand (1).value is null, operator is monadic */
  1     6 	    3 value		pointer unaligned,	/* a pointer to the value bead for this operand */
  1     7 	    3 on_stack		bit (1) aligned,	/* ON if this value resides on the value stack */
  1     8 	  2 operator		aligned,		/* information about the operator to be executed */
  1     9 	    3 dimension		fixed bin,	/* (optional) dimension along which to operate */
  1    10 	    3 padding		bit (18) unaligned,	/* unused part of operator bead */
  1    11 	    3 op2			fixed bin (8) unal,	/* a modifier for op1, or a 2nd operator if inner product */
  1    12 	    3 op1			fixed bin (8) unal,	/* code for the actual operator to be executed */
  1    13 	  2 result		pointer unal,	/* (output) set by operator to point to result bead in stack */
  1    14 	  2 error_code		fixed bin (35),	/* (output) set before signaling apl_operator_error_ */
  1    15 	  2 where_error		fixed bin;	/* parseme index of where error was - parse sets to operator */
  1    16 
  1    17 /* ------ END INCLUDE SEGMENT		apl_operators_argument.incl.pl1 --------------------------- */
       23 
       24 
       25 /* program */
       26 
       27 	operators_argument.error_code = apl_error_table_$not_implemented;
       28 	return;
       29 
       30 end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/29/83  1346.3  apl_dyadic_ibeam_.pl1             >special_ldd>on>apl.1129>apl_dyadic_ibeam_.pl1
23           1    03/27/82  0439.0  apl_operators_argument.incl.pl1   >ldd>include>apl_operators_argument.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
apl_error_table_$not_implemented
                                000010 external static fixed bin(35,0)          dcl 19 ref 27
error_code                7            parameter       fixed bin(35,0)          level 2 dcl 1-3 set ref 27*
operators_argument                     parameter       structure                level 1 dcl 1-3 set ref 10

NAME DECLARED BY EXPLICIT CONTEXT.
apl_dyadic_ibeam_               000030 constant        entry                    external dcl 10

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       104         116      42         114
Length       302      42        12         150      42           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
apl_dyadic_ibeam_                    64 external procedure  is an external procedure.  

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
return              ext_entry

NO EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
apl_error_table_$not_implemented




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     10 000025        27 000035        28 000041


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
