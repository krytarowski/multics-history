	COMPILATION LISTING OF SEGMENT gtss_multics_Hstar_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/10/84  1356.3 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   *                                                         *
        4*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        5*   *                                                         *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 /* *************************************************************
       10*   *						   *
       11*   * Copyright (c) 1979 by Honeywell Information Systems, Inc. *
       12*   *						   *
       13*   ************************************************************* */
       14 
       15 gtss_multics_Hstar_: proc (subsystem_name, subsystem_origin, transfer_addr, total_pgm, high_address, error);
       16 
       17 /**	gtss save and restore batch gcos simulator H*
       18*
       19*	[Derived from gcos_mme_call_.pl1]
       20*
       21*	Author:	Bob Grimes		04/15/78
       22*	Changed:	Dave Ward			07/09/78
       23*   Changed:         R. Barstad                    06/04/82
       24*                     to change size of dcl me from 16 to 20 
       25*	Authors:	Robert J. Grimes	Created
       26*		Albert N. Kepner	  1978
       27*		Robert M. May
       28*		David B. Ward
       29* **/
       30 dcl  subsystem_name           char (6) parm;
       31 dcl  subsystem_origin         bit (18) parm;
       32 dcl  transfer_addr            fixed bin parm;
       33 dcl  total_pgm                fixed bin(18) parm;
       34 dcl  high_address             fixed bin(18) parm;
       35 dcl  error                    bit (1) parm;
       36 
       37 /** REMOVE  fibptr = addr (gtss_ext_$fib);*/						/* the first fib is the pointer to the tss library */
       38 /** REMOVE lib_ptr = fib (1).pointer;*/	lib_ptr = null ();
       39 
       40 /*  Read catalog record and search for program to be loaded   */
       41 /* **************N   O   T   E*********************************************************
       42*   *
       43*   *	The catalog for the simulator library, tss_system_software_, is not
       44*   *	the same as the catalog for a random system loadable file produced by
       45*   *	SYSEDIT, and commonly used as a dynamic library (** file).
       46*   *	This routine presently handles both types.  Note that it would be
       47*   *	inefficient for the simulator to utilize a sector oriented catalog
       48*   *	for its primary software library.  In fact, after GCOS is booted, it
       49*   *	does not use the catalogs contained in its primary software libraries.
       50*   *	It uses one linear directory that it has built from the disjoint disk
       51*   *	catalogs of its primary libraries.  The catalog formats of the GCOS
       52*   *	and the GCOS simulator primary libraries should be of no concern
       53*   *	to users of either system.
       54*   *
       55*   *	See the GCOS PLM (AN77) for a detailed description of the differences
       56*   *	in format between a random system loadable file (a dynamic library), the
       57*   *	simulator library, and a tape system loadable file (from which the
       58*   *	simulator library is produced).
       59*   *
       60*   **************N   O   T   E******************************************************* */
       61 
       62 
       63 /*   the catalog block is at the beginning of the segment  */
       64 
       65 	cat_ptr = lib_ptr;
       66 
       67 	bcd_subsystem_name = "‚‚";			/* initialize subsystem name to all bcd blanks */
       68 	call gtss_ascii_bcd_ (addr (subsystem_name), 6, addr (bcd_subsystem_name));
       69 
       70 	if gcatblk.avail_ptr ^= 1 then go to sim_cat;	/* determine catalog type */
       71 	gcatsw = "1"b;				/* GCOS standard catalog type */
       72 
       73 
       74 
       75 
       76 
       77 sim_cat:	gcatsw = "0"b;
       78 
       79 	do i = 1 to catblk.no_ent;			/* loop for no. of entries in cat */
       80 	     if catblk.element (i) = bcd_subsystem_name then do; /* hit ? */
       81 		prefp = addrel (cat_ptr, catblk.address (i));
       82 		go to readp;
       83 	     end;
       84 	end;
       85 
       86 
       87 not_found:
       88 
       89 	message = "";
       90 	longerror = "call name missing";
       91 	goto any_abort;
       92 						/*  Come here when entry found. Seek to and read preface record   */
       93 
       94 
       95 
       96 readp:
       97 
       98 /*  compute no of dcws in preface     */
       99 
      100 
      101 	do ndcw = 1 to 58 while (substr (preface.dcws (ndcw), 22, 3) ^= "000"b);
      102 	end;
      103 
      104 
      105 	reloc_len = fixed (preface.reloc_words);	/* save no. of relocation words */
      106 	load_origin = fixed (preface.origin);		/* save origin */
      107 	pgm_length = fixed (preface.data_words);	/* save pgm length */
      108 
      109 	if gcatsw then do;
      110 	     reloc_len = reloc_len*64;		/* for a GCOS catalog, convert blocks to words */
      111 	     pgm_length = pgm_length*64;
      112 	     seek_save = seek_save + 64;		/* and program starts in next block */
      113 	end;
      114 	else data_ptr = addrel (prefp, 6+ndcw);		/* for simulator catalog , program immediately follows */
      115 
      116 	transfer_addr = fixed (preface.entry);		/* save entry point */
      117 	load_increment = 0;				/* init load increment */
      118 
      119 	if subsystem_origin ^= (18)"0"b then do;	/* did slave specify an origin ? */
      120 	     if load_origin > 131072 then		/* relocatable overlay ? */
      121 		load_increment = fixed (subsystem_origin);
      122 	     else load_increment = fixed (subsystem_origin)-load_origin; /* set up new load increment */
      123 	     load_origin = fixed (subsystem_origin);	/* use user specified origin */
      124 	     transfer_addr = transfer_addr+load_increment; /* new transfer address */
      125 	end;
      126 
      127 
      128 l2:
      129 	high_address = load_origin+pgm_length;
      130 	total_pgm = (divide (load_origin+pgm_length-1, 1024, 18)+1)*1024;
      131 	if total_pgm >= 131072 then do;	/* will pgm fit ? */
      132 	     message = "";
      133 	     longerror = "subsystem size > limits";
      134 	     goto any_abort;
      135 	end;
      136 
      137 	gseg = gtss_ext_$gtss_slave_area_seg (gtss_ext_$stack_level_);
      138 
      139 	if gseg = null then do;
      140 	     message = "";
      141 	     longerror = "slave area segments not created";
      142 	     goto any_abort;
      143 	end;
      144 	call hcs_$truncate_seg (gseg, total_pgm, code);	/* truncate */
      145 
      146 /* Set the actual max length limit on the segment */
      147 	call hcs_$set_max_length_seg (gseg, total_pgm, code);
      148 	if code ^= 0 then
      149 	     do;
      150 	     message = "";
      151 	     longerror = "setting max length on slave segment";
      152 	     goto any_abort;
      153 	end;
      154 
      155 
      156 	dcwp = addr (preface.dcws (1));
      157 	first_loc = fixed (dcw_model.data_addr, 18, 0)-1024+load_increment;
      158 
      159 
      160 /*  Loop to read data records into tss segment    */
      161 
      162 
      163 	xfer_total = 0;				/* clear xfer total */
      164 	do i = 1 to ndcw;				/* loop to process dcws */
      165 
      166 	     dcwp = addr (preface.dcws (i));		/* get pointer to a dcw */
      167 	     j = fixed (dcw_model.count);		/* grab xfer count */
      168 	     if j = 0 then j = 4096;			/* count of 0 = 4096 */
      169 	     xfer_total = xfer_total + j;		/* total up words to xfer */
      170 
      171 	end;
      172 
      173 /* copy program into segment */
      174 	prog_ptr = addrel (gseg, first_loc);
      175 
      176 	program_seg = data_blocks;
      177 
      178 l3:
      179 	preface.data_check = 0;
      180 						/*  Calculate checksum and compare with that in preface block */
      181 
      182 
      183 	if preface.data_check ^= 0 then do;		/* don't do if checksum = 0 */
      184 
      185 	     ptr = addrel (gtss_ext_$gtss_slave_area_seg (gtss_ext_$stack_level_), first_loc); /* get ptr to first loc loaded */
      186 	     accum = 0;				/* clear accumulator */
      187 	     do i = 1 to xfer_total;
      188 		accum = accum + fixed (checker (i));	/* add a word */
      189 		if accum > 68719476735 then do;	/* carry into second word ? */
      190 		     accum = accum - 68719476736 + 1;	/* add carry to low end of no. */
      191 		end;
      192 	     end;
      193 
      194 	     if substr (unspec (accum), 37, 36) ^= unspec (preface.data_check) then do; /* error */
      195 		message = "";
      196 		longerror = "checksum error during load";
      197 		goto any_abort;
      198 
      199 	     end;
      200 
      201 	end;
      202 /*  If this is an absolute program, go turn control back to the user */
      203 
      204 
      205 	if reloc_len = 0 then go to exit_gecall;
      206 
      207 	if load_increment = 0 then go to exit_gecall;	/* no relocation to do */
      208 /*  Come here when relocation finished    */
      209 
      210 
      211 start_pgm:					/* return load origin and pgm length in A */
      212 
      213 
      214 
      215 	error = "0"b;
      216 
      217 io_abort:
      218 any_abort:
      219 	error = "1"b;
      220 	return;
      221 exit_gecall:
      222 
      223 	error = "0"b;
      224 	return;					/* go start program */
      225 
      226 /**  Variables for gtss_multics_Hstar_:
      227*     IDENTIFIER		ATTRIBUTES	**/
      228 dcl  null                     builtin;
      229 dcl  hcs_$truncate_seg        ext entry (ptr, fixed bin(18), fixed bin (35));
      230 dcl  gseg                     ptr	/* temp ptr to tss seg */;
      231 dcl  abrt                     char (2);
      232 dcl  accum                    fixed bin (71)	/* checksum accumulator */;
      233 dcl  addr                     builtin;
      234 dcl  addrel                   builtin;
      235 dcl  ascii_gecall_name        char (6)	/* for printing in trace or error messages */;
      236 dcl  bit                      builtin;
      237 dcl  buffer                   bit (36000)	/* preface and relocation blk buffer */;
      238 dcl  callp                    ptr init(null());
      239 dcl  check_fs_errcode_        ext entry (fixed bin, char (8), char (100));
      240 dcl  checker                  (pgm_length) bit (36) aligned based (ptr)	/* overlay for computing chksum */;
      241 dcl  dcwp                     ptr init(null());
      242 dcl  dylibsw                  bit (1) aligned init ("0"b)	/* on if searching dynamic library (**) */;
      243 dcl  fb18                     fixed bin (18)	/* need full 18 bits for address arithmetic */;
      244 dcl  fc                       char (6);
      245 dcl  first_lib                bit (1) aligned init ("1"b)	/* on until initialzation done */;
      246 dcl  first_loc                fixed bin	/* used by checksum rtn */;
      247 dcl  fixed                    builtin;
      248 dcl  gcatsw                   bit (1)	/*  0=simulator catalog, 1=tss format catalog */;
      249 dcl  i                        fixed bin;
      250 dcl  increment                fixed bin	/* number of parameter words to skip */;
      251 dcl  ioa_                     ext entry options (variable);
      252 dcl  ios_$read                ext entry (char (*) aligned, ptr, fixed bin, fixed bin, fixed bin, bit (72) aligned);
      253 dcl  ios_$seek                ext entry (char (*) aligned, char (*), char (*), fixed bin, bit (72) aligned);
      254 dcl  j                        fixed bin;
      255 dcl  k                        fixed bin;
      256 dcl  load_at                  char (8) aligned	/* holds attach name of file to load from */;
      257 dcl  load_increment           fixed bin;
      258 dcl  load_origin              fixed bin;
      259 dcl  longerror                char (100);
      260 dcl  message                  char (60);
      261 dcl  min                      builtin;
      262 dcl  ndcw                     fixed bin;
      263 dcl  pgm_length               fixed bin;
      264 dcl  sub                      char (4) aligned;
      265 dcl  me char (20) init ("gtss_multics_Hstar_");
      266 dcl  prefp                    ptr init(null());
      267 dcl  ptr                      ptr init(null());
      268 dcl  reloc_bits               (1) unaligned bit (1) based (prefp)	/* overlay for relocation record */;
      269 dcl  reloc_len                fixed bin;
      270 dcl  seclibsw                 bit (1) aligned init ("0"b)	/* on if searching secondary library */;
      271 dcl  seek_save                fixed bin	/* holds seek offset */;
      272 dcl  size                     fixed bin	/* size of pgm overlay arrays */;
      273 dcl  st                       bit (72) aligned 	/* ios status */;
      274 dcl  state                    char (4);
      275 dcl  statp                    ptr init(null());
      276 dcl  substr                   builtin;
      277 dcl  unspec                   builtin;
      278 dcl  word_no                  fixed bin;
      279 dcl  xfer_total               fixed bin	/* used to hold total no. words to xfer */;
      280 dcl  get_group_id$tag_star    ext entry returns (char (32));
      281 dcl  cu_$level_get            ext entry (fixed binary);
      282 dcl  hcs_$set_max_length_seg  ext entry (ptr,fixed bin (18), fixed bin (35));
      283 dcl  bcd_subsystem_name       char (4) aligned;
      284 dcl  string                   builtin;
      285 dcl  code                     fixed binary (35);
      286 dcl  get_group_id_$tag_star   ext entry returns (char (32));
      287 						/*  work variables  */
      288 
      289 dcl  lib_ptr                  ptr init(null());
      290 dcl  data_ptr                 ptr init(null());
      291 dcl  cat_ptr                  ptr init(null());
      292 dcl  data_blocks              (xfer_total) based (data_ptr);
      293 dcl  prog_ptr                 ptr init(null());
      294 
      295 dcl  program_seg              (xfer_total) based (prog_ptr);
      296 dcl 1 acla,					/* acl model for file system */
      297     2 userid char (32),
      298     2 pack,
      299       3 mode bit (5),				/* access  */
      300       3 reterr bit (13),
      301       3 (rb1, rb2, rb3) bit (6);
      302 
      303 dcl 1 status aligned based (statp),			/* overlay for ios_ status */
      304     2 code fixed bin,				/* standard error code */
      305     2 fill bit (9) unaligned,
      306     2 eof bit (1) unaligned;						/* eof bit */
      307 
      308 
      309 dcl 1 preface aligned based (prefp),			/* model of preface record - 64 words max */
      310     2 data_check fixed bin,				/* checksum of following data words */
      311     2 rel_check fixed bin,				/* checksum of following reloc. words */
      312     2 rel_abs fixed bin,				/* 0=absolute|^0=relocatable */
      313     2 name bit (36) unaligned,			/* name of pgm */
      314     2 entry bit (18) unaligned,			/* entry address */
      315     2 origin bit (18) unaligned,			/* origin */
      316     2 reloc_words bit (18) unaligned,			/* no. of relocation words */
      317     2 data_words bit (18) unaligned,			/* no. of data words */
      318     2 dcws (ndcw) bit (36) unaligned;						/* dcw(s) - max of 58 - to load following data records */
      319 
      320 
      321 dcl 1 dcw_model aligned based (dcwp),			/* model of dcw */
      322     2 data_addr bit (18) unaligned,
      323     2 zero bit (3) unaligned,
      324     2 action bit (3) unaligned,
      325     2 count bit (12) unaligned;						/* number of words to xfer */
      326 
      327 
      328 dcl 1 tss_reloc aligned based (ptr),			/* overlay for each half word  */
      329     2 half_wd (131072) bit (18) unaligned;						/* of the loaded program */
      330 
      331 
      332 dcl 1 catblk aligned based (cat_ptr),			/* catalog image */
      333     2 nxt fixed bin,				/* pointer to next cat blk */
      334     2 no_ent fixed bin,				/* no. of entries in this cat blk */
      335     2 elblock (499),				/* room for 499 entries */
      336       3 element char (4) unaligned,			/* prog name */
      337       3 address fixed bin;						/* offset in file of preface rcrd */
      338 
      339 
      340 dcl 1 gcatblk aligned based (cat_ptr),			/* catalog image for tss format catalog */
      341     2 avail_ptr fixed bin unaligned,
      342     2 next_cat fixed bin unaligned,
      343     2 pad bit (36),
      344     2 elblock (15),
      345       3 element char (4),
      346       3 length fixed bin unaligned,
      347       3 address fixed bin unaligned,
      348       3 pad bit (72);
      349 
  1     1 /* BEGIN INCLUDE FILE gtss_ext_.incl.pl1 */
  1     2 /*
  1     3*  Created: (Wardd Multics)  05/20/78 1307.6 mst Sat 
  1     4*  Modified: Ward            1981     add suspended_process dcl
  1     5*  Modified: Ron Barstad  83-07-21  Fixed level number on mcfc to 3
  1     6*  Modified: Ron Barstad  83-07-25  Fixed derail range in statistics to 4js3 number
  1     7**/
  1     8 dcl  gtss_ext_$aem                   fixed bin static ext	/* >0 Print "additional" error information. */;
  1     9 dcl  gtss_ext_$bad_drl_rtrn          static ext label	/* Default for drl_rtrn. */;
  1    10 dcl  gtss_ext_$db                    (72)bit(1)unal static ext;
  1    11 dcl  gtss_ext_$deferred_catalogs_ptr ptr ext;
  1    12 dcl  gtss_ext_$dispose_of_drl        static ext label	/* quit handlers for some derails use this label to abort */;
  1    13 dcl  gtss_ext_$drl_rtrn              (4)static ext label	/* where to return at subsystem end */;
  1    14 dcl  gtss_ext_$drm_path              char(168)static ext	/* gtss_expand_pathname_stores drm_path */;
  1    15 dcl  gtss_ext_$drun_jid              char (5) static ext	/* valid only for DRUN executing under absentee */;
  1    16 dcl  gtss_ext_$event_channel         fixed bin (71) static ext	/* used for DABT signals */;
  1    17 dcl  gtss_ext_$finished              static ext label	/* Return to gtss for normal conclusion. */;
  1    18 dcl  gtss_ext_$gdb_name              char(8)ext	/* Name H* module to debug. */;
  1    19 dcl  gtss_ext_$get_line              entry(ptr,ptr,fixed bin(21),fixed bin(21),fixed bin(35))variable ext /* Build mode input procedure. */;
  1    20 dcl  gtss_ext_$gtss_slave_area_seg   (4) ext static ptr	/* pointer to gtss slave area segment */;
  1    21 dcl  gtss_ext_$hcs_work_area_ptr     ptr ext static		/* Temp seg for acl lists. */;
  1    22 dcl  gtss_ext_$homedir               char (64) static ext /* user's home dir */;
  1    23 dcl  gtss_ext_$last_k_was_out        bit (1)aligned ext static	/* "1"b => last tty output was output. */;
  1    24 dcl  gtss_ext_$pdir                  char (168) varying ext static	/* pathname of process directory */;
  1    25 dcl  gtss_ext_$popup_from_pi         static ext label	/* transfer to this label after pi simulates popup primitive */;
  1    26 dcl  gtss_ext_$process_type          fixed bin (17) static ext;
  1    27 dcl  gtss_ext_$put_chars             entry(ptr,ptr,fixed bin(24),fixed bin(35)) variable ext	/* Terminal output procedure. */;
  1    28 dcl  gtss_ext_$restart_from_pi       static ext label	/* transfer to this label after pi restores machine conditions */;
  1    29 dcl  gtss_ext_$restart_seg_ptr       ptr static ext	/* points to DRUN restart file when exec under absentee */;
  1    30 dcl  gtss_ext_$sig_ptr               ext static ptr	/* saved ptr to signal_ */;
  1    31 dcl  gtss_ext_$stack_level_          fixed bin ext static;
  1    32 dcl  gtss_ext_$suspended_process     bit(1) ext static;
  1    33 dcl  gtss_ext_$SYstarstar_file_no    fixed bin (24) static ext;
  1    34 dcl  gtss_ext_$user_id               char (26)var ext;
  1    35 dcl  gtss_ext_$work_area_ptr         ptr ext;
  1    36 
  1    37 dcl  1 gtss_ext_$CFP_bits aligned static external
  1    38      , 3 no_input_yet bit (1) unaligned         /* used in gtss_CFP_input_, gtss_read_starCFP_ */
  1    39      , 3 rtn_bits bit (4) unaligned             /* used in gtss_CFP_input_, gtss_CFP_output_ */
  1    40      , 3 cpos_called bit (1) unaligned          /* used in gtss_CFP_input_, gtss_drl_t_cfio_, gtss_abandon_CFP_ */
  1    41      , 3 cout_called bit (1) unaligned          /* used in gtss_read_starCFP_, gtss_abandon_CFP_ */
  1    42      , 3 build_mode bit (1) unaligned	        /* used in gtss_build_, gtss_dsd_process_ */
  1    43      ;
  1    44 
  1    45 dcl 1 gtss_ext_$com_reg aligned static ext,
  1    46        3 tsdmx,
  1    47          4 dst fixed bin (18) unsigned unaligned,
  1    48          4 dit fixed bin (18) unsigned unaligned,
  1    49        3 tsdpt fixed bin (36) unsigned unaligned,
  1    50        3 tsddt fixed bin (36) unsigned unaligned,
  1    51        3 tsdid bit (72) unaligned,
  1    52        3 tsdsd bit (36) unaligned,
  1    53        3 tsdst fixed bin (36) unsigned unaligned,
  1    54        3 tsdjb fixed bin (35) unaligned,
  1    55        3 tsdgt,
  1    56          4 ust_loc fixed bin (18) unsigned unaligned,
  1    57          4 gating_ctl fixed bin (18) unsigned unaligned,
  1    58        3 tcdfr bit (36) unaligned;
  1    59 
  1    60 dcl 1 gtss_ext_$flags aligned static ext
  1    61      , 3 dispose_of_drl_on_pi	bit (01) unal	/* 1 => drl that should be aborted after quit-pi sequence */
  1    62      , 3 drl_in_progress	bit (01) unal	/* 1 => drl handler executing; 0 => gcos code executing */
  1    63      , 3 popup_from_pi	bit (01) unal	/* 1 => derail processor will simulate Gcos break instead of returning */
  1    64      , 3 unfinished_drl	bit (01) unal	/* 1 => subsystem is handling breaks and quit was raised during a drl */
  1    65      , 3 ss_time_limit_set	bit (01) unal	/* 1 => exec time limit set for subsystem */
  1    66      , 3 timer_ranout	bit (01) unal	/* 1 => user is executing timer runout code */
  1    67      , 3 gtss_com_err_sw      bit (01) unal       /* 1 => stop com_err_ string from going to terminal */   
  1    68      , 3 available		bit (65) unal
  1    69      ;
  1    70 
  1    71 
  1    72 dcl 1 gtss_ext_$statistics aligned static ext,		/* Derail usage statistics */
  1    73       3 total_time (-10:71)fixed bin (71),
  1    74       3 count (-10:71)fixed bin (17);
  1    75 
  1    76 /* 	Declaration of Available File Table
  1    77*   */
  1    78 dcl 1 gtss_ext_$aft aligned ext,			/* aft structure */
  1    79 
  1    80       3 start_list (0:102) fixed bin (24),		/* >0 => 1st aft_entry row to start of next entry chain. */
  1    81 
  1    82       3 aft_entry (20),
  1    83         4 altname char (8),				/* altname name for attaching this file */
  1    84         4 next_entry fixed bin (24),			/* Next aft_entry in hash chain. */
  1    85         4 previous_add fixed bin (24),			/* Previously added entry. */
  1    86         4 next_add fixed bin (24),			/* Entry added after this one. */
  1    87         4 used bit (1) unal,				/* "1"b => aft_entry contains AFT value. */
  1    88         4 forced bit(1) unal,				/* "1"b => gtss_verify_access_ forced access on this file. */
  1    89 
  1    90       3 free_space fixed bin (24),			/* Index of start of free space list for aft entries. */
  1    91       3 first_added fixed bin (24),			/* >0  => start of chain in add order. */
  1    92       3 last_added fixed bin (24)			/* >0 => end of chain in added order. */;
  1    93 
  1    94 dcl  gtss_ext_$ppt                   ptr ext /*  switch name for tapein drl */;
  1    95 /**	Data structure to provide access to installed
  1    96*   subsystems fast library load.
  1    97*   **/
  1    98 dcl 1 gtss_ext_$fast_lib aligned ext
  1    99      , 3 fast_lib_fcb ptr				/* Pointer to msf fcb.	*/
  1   100      , 3 fast_lib_ncp fixed bin (24)			/* Number of components. */
  1   101      , 3 comp_ptr (0:9)ptr				/* Pointer to component. */
  1   102      , 3 comp_wds (0:9)fixed bin (24)			/* Component length (words). */
  1   103      ;
  1   104 
  1   105 /* Pointers to segments to regulate multipler
  1   106*   callers to files. Same segments are used to regulate
  1   107*   all simulator callers.
  1   108**/
  1   109 dcl 1 gtss_ext_$mcfc	aligned ext,
  1   110       3 multics_lock_id	bit(36),
  1   111       3 wait_time		fixed bin,
  1   112       3 files_ptr		ptr,
  1   113       3 names_ptr		ptr,
  1   114       3 callers_ptr		(0:3)ptr
  1   115 ;
  1   116 
  1   117 /*   END INCLUDE FILE gtss_ext_.incl.pl1 */
      350 
      351 
      352 
      353 
      354 
  2     1 /* BEGIN INCLUDE FILE gtss_entry_dcls.incl.pl1 */
  2     2 /*
  2     3*  Created: (Wardd Multics)  06/30/78 1624.8 mst Fri 
  2     4*  Modified: Ron Barstad  84-02-24  Fixed wrong and obsolete entries
  2     5**/
  2     6 
  2     7 /**  gtss external entry variables.		**/
  2     8 dcl  com_err_                                   entry() options(variable);
  2     9 dcl  gtss_CFP_abort_                            entry options(variable);
  2    10 dcl  gtss_CFP_break_                            entry options(variable);
  2    11 dcl  gtss_CFP_input_                            entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  2    12 dcl  gtss_CFP_output_                           entry (ptr, ptr, fixed bin(21), fixed bin(35));
  2    13 dcl  gtss_abandon_CFP_                          entry options(variable);
  2    14 dcl  gtss_abort_dump_                           entry (fixed bin(18));
  2    15 dcl  gtss_abort_subsystem_                      entry options (variable);
  2    16 dcl  gtss_abort_subsystem_$not_imp              entry (ptr, fixed bin(24));
  2    17 dcl  gtss_abs_login_banner_		        entry() returns(char(*));
  2    18 dcl  gtss_abs_logout_banner_		        entry() returns(char(*));
  2    19 dcl  gtss_abs_$abs_equiv                        entry options(variable);
  2    20 dcl  gtss_abs_$cpu_runout		        entry (ptr, char(4));
  2    21 dcl  gtss_abs_$create_absin                     entry() returns(char(*));
  2    22 dcl  gtss_abs_$dabt_check		        entry (ptr, char(4));
  2    23 dcl  gtss_abs_$get_id                           entry (char(5)) returns(char(19));
  2    24 dcl  gtss_abs_$get_drm                          entry() returns(char(*));
  2    25 dcl  gtss_adjust_size_                          entry (ptr);
  2    26 dcl  gtss_aft_$add                              entry (char(8), fixed bin(24), fixed bin(35));
  2    27 dcl  gtss_aft_$delete                           entry (char(8), fixed bin(24), fixed bin(35));
  2    28 dcl  gtss_aft_$find                             entry (char(8), fixed bin(24), fixed bin(35));
  2    29 dcl  gtss_aft_$initialize                       entry (fixed bin(35));
  2    30 dcl  gtss_ascii_bcd_                            entry (ptr, fixed bin, ptr);
  2    31 dcl  gtss_attributes_mgr_$get                   entry (ptr, fixed bin(35));
  2    32 dcl  gtss_attributes_mgr_$set                   entry (ptr, fixed bin(35));
  2    33 dcl  gtss_bcd_ascii_                            entry (ptr, fixed bin(24), ptr);
  2    34 dcl  gtss_bcd_ascii_$lc                         entry (ptr, fixed bin(24), ptr);
  2    35 dcl  gtss_break_vector_                         entry ();
  2    36 dcl  gtss_break_vector_$drl_in_progress         entry() returns(bit(1));
  2    37 dcl  gtss_break_vector_$status                  entry() returns(bit(1));
  2    38 dcl  gtss_build_                                entry options(variable);
  2    39 dcl  gtss_com_err_                              entry options(variable);
  2    40 dcl  gtss_derail_processor_                     entry (ptr, char(*), ptr, ptr, bit(1) aligned) /* called at fault time instead of signal_ */;
  2    41 dcl  gtss_derail_processor_$set                 entry options(variable);
  2    42 dcl  gtss_dq_$catp                              entry (char (5), ptr, fixed bin (18) unsigned);
  2    43 dcl  gtss_dq_$create                            entry (bit(1));
  2    44 dcl  gtss_dq_$dibp                              entry (char(5), ptr);
  2    45 dcl  gtss_dq_$entries_info		        entry (ptr, fixed bin (18) unsigned, fixed bin (18) unsigned);
  2    46 dcl  gtss_dq_$hdrp                              entry (ptr);
  2    47 dcl  gtss_dq_$mod_js		        entry (char(5), fixed bin (6) unsigned, bit (1));
  2    48 dcl  gtss_dq_$open_exc		        entry (bit(1));
  2    49 dcl  gtss_dq_$open_gen		        entry (bit(1));
  2    50 dcl  gtss_drl_abort_                            entry (ptr, fixed bin);
  2    51 dcl  gtss_drl_addmem_                           entry (ptr, fixed bin);
  2    52 dcl  gtss_drl_callss_                           entry (ptr, fixed bin);
  2    53 dcl  gtss_drl_corfil_                           entry (ptr, fixed bin);
  2    54 dcl  gtss_drl_defil_                            entry (ptr, fixed bin);
  2    55 dcl  gtss_drl_defil_$subr                       entry (ptr, ptr, ptr);
  2    56 dcl  gtss_drl_dio_                              entry (ptr, fixed bin);
  2    57 dcl  gtss_drl_drlimt_                           entry (ptr, fixed bin);
  2    58 dcl  gtss_drl_drlsav_                           entry (ptr, fixed bin);
  2    59 dcl  gtss_drl_filact_                           entry (ptr, fixed bin);
  2    60 dcl  gtss_drl_filsp_                            entry (ptr, fixed bin);
  2    61 dcl  gtss_drl_grow_                             entry (ptr, fixed bin);
  2    62 dcl  gtss_drl_gwake_                            entry (ptr, fixed bin);
  2    63 dcl  gtss_drl_jsts_                             entry (ptr, fixed bin);
  2    64 dcl  gtss_drl_kin_                              entry (ptr, fixed bin);
  2    65 dcl  gtss_drl_kotnow_                           entry (ptr, fixed bin);
  2    66 dcl  gtss_drl_kotnow_$gtss_drl_kout_            entry (ptr, fixed bin);
  2    67 dcl  gtss_drl_koutn_                            entry (ptr, fixed bin);
  2    68 dcl  gtss_drl_morlnk_                           entry (ptr, fixed bin);
  2    69 dcl  gtss_drl_msub_                             entry (ptr, fixed bin);
  2    70 dcl  gtss_drl_objtim_                           entry (ptr, fixed bin);
  2    71 dcl  gtss_drl_part_                             entry (ptr, fixed bin);
  2    72 dcl  gtss_drl_pasaft_                           entry (ptr, fixed bin);
  2    73 dcl  gtss_drl_pasdes_                           entry (ptr, fixed bin);
  2    74 dcl  gtss_drl_pasust_                           entry (ptr, fixed bin);
  2    75 dcl  gtss_drl_pdio_                             entry (ptr, fixed bin);
  2    76 dcl  gtss_drl_prgdes_                           entry (ptr, fixed bin);
  2    77 dcl  gtss_drl_pseudo_                           entry (ptr, fixed bin);
  2    78 dcl  gtss_drl_relmem_                           entry (ptr, fixed bin);
  2    79 dcl  gtss_drl_restor_                           entry (ptr, fixed bin);
  2    80 dcl  gtss_drl_retfil_                           entry (ptr, fixed bin);
  2    81 dcl  gtss_drl_return_                           entry (ptr, fixed bin);
  2    82 dcl  gtss_drl_rew_                              entry (ptr, fixed bin);
  2    83 dcl  gtss_drl_rstswh_                           entry (ptr, fixed bin);
  2    84 dcl  gtss_drl_setlno_                           entry (ptr, fixed bin);
  2    85 dcl  gtss_drl_setswh_                           entry (ptr, fixed bin);
  2    86 dcl  gtss_drl_snumb_                            entry (ptr, fixed bin);
  2    87 dcl  gtss_drl_spawn_                            entry (ptr, fixed bin);
  2    88 dcl  gtss_drl_spawn_$gtss_drl_pasflr_           entry (ptr, fixed bin);
  2    89 dcl  gtss_drl_stoppt_                           entry (ptr, fixed bin);
  2    90 dcl  gtss_drl_switch_                           entry (ptr, fixed bin);
  2    91 dcl  gtss_drl_sysret_                           entry (ptr, fixed bin);
  2    92 dcl  gtss_drl_t_cfio_                           entry (ptr, fixed bin);
  2    93 dcl  gtss_drl_t_cmov_                           entry (ptr, fixed bin);
  2    94 dcl  gtss_drl_t_err_                            entry (ptr, fixed bin);
  2    95 dcl  gtss_drl_t_goto_                           entry (ptr, fixed bin);
  2    96 dcl  gtss_drl_t_linl_                           entry (ptr, fixed bin);
  2    97 dcl  gtss_drl_t_rscc_                           entry (ptr, fixed bin);
  2    98 dcl  gtss_drl_tapein_                           entry (ptr, fixed bin);
  2    99 dcl  gtss_drl_task_                             entry (ptr, fixed bin);
  2   100 dcl  gtss_drl_termtp_                           entry (ptr, fixed bin);
  2   101 dcl  gtss_drl_time_                             entry (ptr, fixed bin);
  2   102 dcl  gtss_drun_                                 entry (bit(1));
  2   103 dcl  gtss_dsd_lookup_                           entry (char(8) var) returns(fixed bin(24));
  2   104 dcl  gtss_dsd_process_                          entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  2   105 dcl  gtss_edit_dsd_                             entry (ptr, fixed bin(21)) returns(fixed bin(24));
  2   106 dcl  gtss_mcfc_empty                            entry (char(*) var);
  2   107 dcl  gtss_expand_pathname_                      entry (ptr, char(*), char(*), fixed bin(35));
  2   108 dcl  gtss_expand_pathname_$verify_umc           entry (ptr, char(*), char(*), bit(18), fixed bin(35));
  2   109 dcl  gtss_fault_processor_                      entry options(variable);
  2   110 dcl  gtss_find_cond_frame_		        entry (char(32) var) returns(ptr);
  2   111 dcl  gtss_fault_processor_$timer_runout         entry (ptr, char(*));
  2   112 dcl  gtss_filact_error_status_                  entry (fixed bin(35))returns(bit(12));
  2   113 dcl  gtss_filact_funct02_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  2   114 dcl  gtss_filact_funct03_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  2   115 dcl  gtss_filact_funct04_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  2   116 dcl  gtss_filact_funct05_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  2   117 dcl  gtss_filact_funct08_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  2   118 dcl  gtss_filact_funct10_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  2   119 dcl  gtss_filact_funct11_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  2   120 dcl  gtss_filact_funct14_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  2   121 dcl  gtss_filact_funct18_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  2   122 dcl  gtss_filact_funct19_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  2   123 dcl  gtss_filact_funct21_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  2   124 dcl  gtss_filact_funct22_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  2   125 dcl  gtss_mcfc_init_                            entry (char(*) var);
  2   126 dcl  gtss_interp_prim_                          entry options(variable);
  2   127 dcl  gtss_interp_prim_$callss                   entry (char(4), ptr);
  2   128 dcl  gtss_interp_prim_$sysret                   entry options(variable);
  2   129 dcl  gtss_interp_prim_$t_goto                   entry (char(4));
  2   130 dcl  gtss_ios_change_size_                      entry (fixed bin(24), fixed bin(24), bit(1), fixed bin(24), fixed bin(35));
  2   131 dcl  gtss_ios_close_                            entry (fixed bin(24), ptr, fixed bin(35));
  2   132 dcl  gtss_ios_exchange_names_                   entry (fixed bin(24), fixed bin(24), fixed bin(24), fixed bin(35));
  2   133 dcl  gtss_ios_initialize_                       entry options(variable);
  2   134 dcl  gtss_ios_io_                               entry (fixed bin(24), ptr, ptr, fixed bin(24), fixed bin(24), fixed bin(35));
  2   135 dcl  gtss_ios_open_                             entry (fixed bin(24), char(168), char(32), bit(6), bit(1), ptr, ptr, fixed bin(35));
  2   136 dcl  gtss_ios_position_                         entry (fixed bin(24), fixed bin(24), fixed bin(24), bit(6), ptr);
  2   137 dcl  gtss_mcfc_$delete		        entry (fixed bin(24), char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  2   138 dcl  gtss_mcfc_$open                            entry (char(*), char(*), bit(6), bit(36) aligned, ptr, fixed bin(35));
  2   139 dcl  gtss_mcfc_$close                           entry (char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  2   140 dcl  gtss_read_starCFP_                         entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  2   141 dcl  gtss_read_starCFP_$last_os                 entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  2   142 dcl  gtss_run_subsystem_                        entry (fixed bin(24));
  2   143 dcl  gtss_run_subsystem_$finish                 entry options(variable);
  2   144 dcl  gtss_run_subsystem_$restor                 entry (fixed bin(24), ptr);
  2   145 dcl  gtss_run_subsystem_$restor_perm            entry (fixed bin(24), ptr, fixed bin(18));
  2   146 dcl  gtss_set_slave_                            entry (fixed bin (24), ptr);
  2   147 dcl  gtss_set_slave_$load_bar                   entry (fixed bin (17));
  2   148 dcl  gtss_update_safe_store_                    entry (ptr);
  2   149 dcl  gtss_verify_access_		        entry (char(*), char(*), fixed bin(24), bit(6), bit(12) aligned);
  2   150 dcl  gtss_verify_access_$check_forced_access    entry (char(*), char(*), fixed bin(24));
  2   151 dcl  gtss_write_starCFP_                        entry (ptr, ptr, fixed bin(21), fixed bin(35));
  2   152 /*   END INCLUDE FILE gtss_entry_dcls.incl.pl1 */
      355 
      356      end gtss_multics_Hstar_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/10/84  1044.4  gtss_multics_Hstar_.pl1           >spec>on>7105>gtss_multics_Hstar_.pl1
350          1    09/09/83  1713.8  gtss_ext_.incl.pl1                >ldd>include>gtss_ext_.incl.pl1
355          2    12/10/84  1029.7  gtss_entry_dcls.incl.pl1          >spec>on>7105>gtss_entry_dcls.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
accum                           000102 automatic       fixed bin(71,0)          dcl 232 set ref 186* 188* 188 189 190* 190 194
addr                                                   builtin function         dcl 233 ref 68 68 68 68 156 166
addrel                                                 builtin function         dcl 234 ref 81 114 174 185
address                   3            based           fixed bin(17,0)          array level 3 dcl 332 ref 81
avail_ptr                              based           fixed bin(17,0)          level 2 packed unaligned dcl 340 ref 70
bcd_subsystem_name              000213 automatic       char(4)                  dcl 283 set ref 67* 68 68 80
callp                           000104 automatic       pointer                  initial dcl 238 set ref 238*
cat_ptr                         000222 automatic       pointer                  initial dcl 291 set ref 65* 70 79 80 81 81 291*
catblk                                 based           structure                level 1 dcl 332
checker                                based           bit(36)                  array dcl 240 ref 188
code                            000214 automatic       fixed bin(35,0)          dcl 285 set ref 144* 147* 148
count                     0(24)        based           bit(12)                  level 2 packed unaligned dcl 321 ref 167
data_addr                              based           bit(18)                  level 2 packed unaligned dcl 321 ref 157
data_blocks                            based           fixed bin(17,0)          array dcl 292 ref 176
data_check                             based           fixed bin(17,0)          level 2 dcl 309 set ref 178* 183 194
data_ptr                        000220 automatic       pointer                  initial dcl 290 set ref 114* 176 290*
data_words                5(18)        based           bit(18)                  level 2 packed unaligned dcl 309 ref 107
dcw_model                              based           structure                level 1 dcl 321
dcwp                            000106 automatic       pointer                  initial dcl 241 set ref 156* 157 166* 167 241*
dcws                      6            based           bit(36)                  array level 2 packed unaligned dcl 309 set ref 96
                                                                                  156 166
dylibsw                         000110 automatic       bit(1)                   initial dcl 242 set ref 242*
elblock                   2            based           structure                array level 2 dcl 332
element                   2            based           char(4)                  array level 3 packed unaligned dcl 332 ref 80
entry                     4            based           bit(18)                  level 2 packed unaligned dcl 309 ref 116
error                                  parameter       bit(1)                   unaligned dcl 35 set ref 15 211* 217* 221*
first_lib                       000111 automatic       bit(1)                   initial dcl 245 set ref 245*
first_loc                       000112 automatic       fixed bin(17,0)          dcl 246 set ref 157* 174 185
fixed                                                  builtin function         dcl 247 ref 105 106 107 116 120 122 123 157 167 188
gcatblk                                based           structure                level 1 dcl 340
gcatsw                          000113 automatic       bit(1)                   unaligned dcl 248 set ref 71* 77* 109
gseg                            000100 automatic       pointer                  dcl 230 set ref 137* 139 144* 147* 174
gtss_ascii_bcd_                 000020 constant        entry                    external dcl 2-30 ref 68
gtss_ext_$gtss_slave_area_seg   000014 external static pointer                  array dcl 1-20 ref 137 185
gtss_ext_$stack_level_          000016 external static fixed bin(17,0)          dcl 1-31 ref 137 185
hcs_$set_max_length_seg         000012 constant        entry                    external dcl 282 ref 147
hcs_$truncate_seg               000010 constant        entry                    external dcl 229 ref 144
high_address                           parameter       fixed bin(18,0)          dcl 34 set ref 15 128*
i                               000114 automatic       fixed bin(17,0)          dcl 249 set ref 79* 80 81* 164* 166* 187* 188*
j                               000115 automatic       fixed bin(17,0)          dcl 254 set ref 167* 168 168* 169
lib_ptr                         000216 automatic       pointer                  initial dcl 289 set ref 38* 65 289*
load_increment                  000116 automatic       fixed bin(17,0)          dcl 257 set ref 117* 120* 122* 124 157 207
load_origin                     000117 automatic       fixed bin(17,0)          dcl 258 set ref 106* 120 122 123* 128 130
longerror                       000120 automatic       char(100)                unaligned dcl 259 set ref 90* 133* 141* 151* 196*
me                              000172 automatic       char(20)                 initial unaligned dcl 265 set ref 265*
message                         000151 automatic       char(60)                 unaligned dcl 260 set ref 87* 132* 140* 150* 195*
ndcw                            000170 automatic       fixed bin(17,0)          dcl 262 set ref 96* 96* 114 164
no_ent                    1            based           fixed bin(17,0)          level 2 dcl 332 ref 79
null                                                   builtin function         dcl 228 ref 38 139 238 241 266 267 275 289 290 291
                                                                                  293
origin                    4(18)        based           bit(18)                  level 2 packed unaligned dcl 309 ref 106
pgm_length                      000171 automatic       fixed bin(17,0)          dcl 263 set ref 107* 111* 111 128 130
preface                                based           structure                level 1 dcl 309
prefp                           000200 automatic       pointer                  initial dcl 266 set ref 81* 96 105 106 107 114 116
                                                                                  156 166 178 183 194 266*
prog_ptr                        000224 automatic       pointer                  initial dcl 293 set ref 174* 176 293*
program_seg                            based           fixed bin(17,0)          array dcl 295 set ref 176*
ptr                             000202 automatic       pointer                  initial dcl 267 set ref 185* 188 267*
reloc_len                       000204 automatic       fixed bin(17,0)          dcl 269 set ref 105* 110* 110 205
reloc_words               5            based           bit(18)                  level 2 packed unaligned dcl 309 ref 105
seclibsw                        000205 automatic       bit(1)                   initial dcl 270 set ref 270*
seek_save                       000206 automatic       fixed bin(17,0)          dcl 271 set ref 112* 112
statp                           000210 automatic       pointer                  initial dcl 275 set ref 275*
substr                                                 builtin function         dcl 276 ref 96 194
subsystem_name                         parameter       char(6)                  unaligned dcl 30 set ref 15 68 68
subsystem_origin                       parameter       bit(18)                  unaligned dcl 31 ref 15 119 120 122 123
total_pgm                              parameter       fixed bin(18,0)          dcl 33 set ref 15 130* 131 144* 147*
transfer_addr                          parameter       fixed bin(17,0)          dcl 32 set ref 15 116* 124* 124
unspec                                                 builtin function         dcl 277 ref 194 194
xfer_total                      000212 automatic       fixed bin(17,0)          dcl 279 set ref 163* 169* 169 176 187

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
abrt                                   automatic       char(2)                  unaligned dcl 231
acla                                   automatic       structure                level 1 packed unaligned dcl 296
ascii_gecall_name                      automatic       char(6)                  unaligned dcl 235
bit                                                    builtin function         dcl 236
buffer                                 automatic       bit(36000)               unaligned dcl 237
check_fs_errcode_               000000 constant        entry                    external dcl 239
com_err_                        000000 constant        entry                    external dcl 2-8
cu_$level_get                   000000 constant        entry                    external dcl 281
fb18                                   automatic       fixed bin(18,0)          dcl 243
fc                                     automatic       char(6)                  unaligned dcl 244
get_group_id$tag_star           000000 constant        entry                    external dcl 280
get_group_id_$tag_star          000000 constant        entry                    external dcl 286
gtss_CFP_abort_                 000000 constant        entry                    external dcl 2-9
gtss_CFP_break_                 000000 constant        entry                    external dcl 2-10
gtss_CFP_input_                 000000 constant        entry                    external dcl 2-11
gtss_CFP_output_                000000 constant        entry                    external dcl 2-12
gtss_abandon_CFP_               000000 constant        entry                    external dcl 2-13
gtss_abort_dump_                000000 constant        entry                    external dcl 2-14
gtss_abort_subsystem_           000000 constant        entry                    external dcl 2-15
gtss_abort_subsystem_$not_imp   000000 constant        entry                    external dcl 2-16
gtss_abs_$abs_equiv             000000 constant        entry                    external dcl 2-19
gtss_abs_$cpu_runout            000000 constant        entry                    external dcl 2-20
gtss_abs_$create_absin          000000 constant        entry                    external dcl 2-21
gtss_abs_$dabt_check            000000 constant        entry                    external dcl 2-22
gtss_abs_$get_drm               000000 constant        entry                    external dcl 2-24
gtss_abs_$get_id                000000 constant        entry                    external dcl 2-23
gtss_abs_login_banner_          000000 constant        entry                    external dcl 2-17
gtss_abs_logout_banner_         000000 constant        entry                    external dcl 2-18
gtss_adjust_size_               000000 constant        entry                    external dcl 2-25
gtss_aft_$add                   000000 constant        entry                    external dcl 2-26
gtss_aft_$delete                000000 constant        entry                    external dcl 2-27
gtss_aft_$find                  000000 constant        entry                    external dcl 2-28
gtss_aft_$initialize            000000 constant        entry                    external dcl 2-29
gtss_attributes_mgr_$get        000000 constant        entry                    external dcl 2-31
gtss_attributes_mgr_$set        000000 constant        entry                    external dcl 2-32
gtss_bcd_ascii_                 000000 constant        entry                    external dcl 2-33
gtss_bcd_ascii_$lc              000000 constant        entry                    external dcl 2-34
gtss_break_vector_              000000 constant        entry                    external dcl 2-35
gtss_break_vector_$drl_in_progress
                                000000 constant        entry                    external dcl 2-36
gtss_break_vector_$status       000000 constant        entry                    external dcl 2-37
gtss_build_                     000000 constant        entry                    external dcl 2-38
gtss_com_err_                   000000 constant        entry                    external dcl 2-39
gtss_derail_processor_          000000 constant        entry                    external dcl 2-40
gtss_derail_processor_$set      000000 constant        entry                    external dcl 2-41
gtss_dq_$catp                   000000 constant        entry                    external dcl 2-42
gtss_dq_$create                 000000 constant        entry                    external dcl 2-43
gtss_dq_$dibp                   000000 constant        entry                    external dcl 2-44
gtss_dq_$entries_info           000000 constant        entry                    external dcl 2-45
gtss_dq_$hdrp                   000000 constant        entry                    external dcl 2-46
gtss_dq_$mod_js                 000000 constant        entry                    external dcl 2-47
gtss_dq_$open_exc               000000 constant        entry                    external dcl 2-48
gtss_dq_$open_gen               000000 constant        entry                    external dcl 2-49
gtss_drl_abort_                 000000 constant        entry                    external dcl 2-50
gtss_drl_addmem_                000000 constant        entry                    external dcl 2-51
gtss_drl_callss_                000000 constant        entry                    external dcl 2-52
gtss_drl_corfil_                000000 constant        entry                    external dcl 2-53
gtss_drl_defil_                 000000 constant        entry                    external dcl 2-54
gtss_drl_defil_$subr            000000 constant        entry                    external dcl 2-55
gtss_drl_dio_                   000000 constant        entry                    external dcl 2-56
gtss_drl_drlimt_                000000 constant        entry                    external dcl 2-57
gtss_drl_drlsav_                000000 constant        entry                    external dcl 2-58
gtss_drl_filact_                000000 constant        entry                    external dcl 2-59
gtss_drl_filsp_                 000000 constant        entry                    external dcl 2-60
gtss_drl_grow_                  000000 constant        entry                    external dcl 2-61
gtss_drl_gwake_                 000000 constant        entry                    external dcl 2-62
gtss_drl_jsts_                  000000 constant        entry                    external dcl 2-63
gtss_drl_kin_                   000000 constant        entry                    external dcl 2-64
gtss_drl_kotnow_                000000 constant        entry                    external dcl 2-65
gtss_drl_kotnow_$gtss_drl_kout_ 000000 constant        entry                    external dcl 2-66
gtss_drl_koutn_                 000000 constant        entry                    external dcl 2-67
gtss_drl_morlnk_                000000 constant        entry                    external dcl 2-68
gtss_drl_msub_                  000000 constant        entry                    external dcl 2-69
gtss_drl_objtim_                000000 constant        entry                    external dcl 2-70
gtss_drl_part_                  000000 constant        entry                    external dcl 2-71
gtss_drl_pasaft_                000000 constant        entry                    external dcl 2-72
gtss_drl_pasdes_                000000 constant        entry                    external dcl 2-73
gtss_drl_pasust_                000000 constant        entry                    external dcl 2-74
gtss_drl_pdio_                  000000 constant        entry                    external dcl 2-75
gtss_drl_prgdes_                000000 constant        entry                    external dcl 2-76
gtss_drl_pseudo_                000000 constant        entry                    external dcl 2-77
gtss_drl_relmem_                000000 constant        entry                    external dcl 2-78
gtss_drl_restor_                000000 constant        entry                    external dcl 2-79
gtss_drl_retfil_                000000 constant        entry                    external dcl 2-80
gtss_drl_return_                000000 constant        entry                    external dcl 2-81
gtss_drl_rew_                   000000 constant        entry                    external dcl 2-82
gtss_drl_rstswh_                000000 constant        entry                    external dcl 2-83
gtss_drl_setlno_                000000 constant        entry                    external dcl 2-84
gtss_drl_setswh_                000000 constant        entry                    external dcl 2-85
gtss_drl_snumb_                 000000 constant        entry                    external dcl 2-86
gtss_drl_spawn_                 000000 constant        entry                    external dcl 2-87
gtss_drl_spawn_$gtss_drl_pasflr_
                                000000 constant        entry                    external dcl 2-88
gtss_drl_stoppt_                000000 constant        entry                    external dcl 2-89
gtss_drl_switch_                000000 constant        entry                    external dcl 2-90
gtss_drl_sysret_                000000 constant        entry                    external dcl 2-91
gtss_drl_t_cfio_                000000 constant        entry                    external dcl 2-92
gtss_drl_t_cmov_                000000 constant        entry                    external dcl 2-93
gtss_drl_t_err_                 000000 constant        entry                    external dcl 2-94
gtss_drl_t_goto_                000000 constant        entry                    external dcl 2-95
gtss_drl_t_linl_                000000 constant        entry                    external dcl 2-96
gtss_drl_t_rscc_                000000 constant        entry                    external dcl 2-97
gtss_drl_tapein_                000000 constant        entry                    external dcl 2-98
gtss_drl_task_                  000000 constant        entry                    external dcl 2-99
gtss_drl_termtp_                000000 constant        entry                    external dcl 2-100
gtss_drl_time_                  000000 constant        entry                    external dcl 2-101
gtss_drun_                      000000 constant        entry                    external dcl 2-102
gtss_dsd_lookup_                000000 constant        entry                    external dcl 2-103
gtss_dsd_process_               000000 constant        entry                    external dcl 2-104
gtss_edit_dsd_                  000000 constant        entry                    external dcl 2-105
gtss_expand_pathname_           000000 constant        entry                    external dcl 2-107
gtss_expand_pathname_$verify_umc
                                000000 constant        entry                    external dcl 2-108
gtss_ext_$CFP_bits                     external static structure                level 1 dcl 1-37
gtss_ext_$SYstarstar_file_no           external static fixed bin(24,0)          dcl 1-33
gtss_ext_$aem                          external static fixed bin(17,0)          dcl 1-8
gtss_ext_$aft                          external static structure                level 1 dcl 1-78
gtss_ext_$bad_drl_rtrn                 external static label variable           dcl 1-9
gtss_ext_$com_reg                      external static structure                level 1 dcl 1-45
gtss_ext_$db                           external static bit(1)                   array unaligned dcl 1-10
gtss_ext_$deferred_catalogs_ptr        external static pointer                  dcl 1-11
gtss_ext_$dispose_of_drl               external static label variable           dcl 1-12
gtss_ext_$drl_rtrn                     external static label variable           array dcl 1-13
gtss_ext_$drm_path                     external static char(168)                unaligned dcl 1-14
gtss_ext_$drun_jid                     external static char(5)                  unaligned dcl 1-15
gtss_ext_$event_channel                external static fixed bin(71,0)          dcl 1-16
gtss_ext_$fast_lib                     external static structure                level 1 dcl 1-98
gtss_ext_$finished                     external static label variable           dcl 1-17
gtss_ext_$flags                        external static structure                level 1 dcl 1-60
gtss_ext_$gdb_name                     external static char(8)                  unaligned dcl 1-18
gtss_ext_$get_line                     external static entry variable           dcl 1-19
gtss_ext_$hcs_work_area_ptr            external static pointer                  dcl 1-21
gtss_ext_$homedir                      external static char(64)                 unaligned dcl 1-22
gtss_ext_$last_k_was_out               external static bit(1)                   dcl 1-23
gtss_ext_$mcfc                         external static structure                level 1 dcl 1-109
gtss_ext_$pdir                         external static varying char(168)        dcl 1-24
gtss_ext_$popup_from_pi                external static label variable           dcl 1-25
gtss_ext_$ppt                          external static pointer                  dcl 1-94
gtss_ext_$process_type                 external static fixed bin(17,0)          dcl 1-26
gtss_ext_$put_chars                    external static entry variable           dcl 1-27
gtss_ext_$restart_from_pi              external static label variable           dcl 1-28
gtss_ext_$restart_seg_ptr              external static pointer                  dcl 1-29
gtss_ext_$sig_ptr                      external static pointer                  dcl 1-30
gtss_ext_$statistics                   external static structure                level 1 dcl 1-72
gtss_ext_$suspended_process            external static bit(1)                   unaligned dcl 1-32
gtss_ext_$user_id                      external static varying char(26)         dcl 1-34
gtss_ext_$work_area_ptr                external static pointer                  dcl 1-35
gtss_fault_processor_           000000 constant        entry                    external dcl 2-109
gtss_fault_processor_$timer_runout
                                000000 constant        entry                    external dcl 2-111
gtss_filact_error_status_       000000 constant        entry                    external dcl 2-112
gtss_filact_funct02_            000000 constant        entry                    external dcl 2-113
gtss_filact_funct03_            000000 constant        entry                    external dcl 2-114
gtss_filact_funct04_            000000 constant        entry                    external dcl 2-115
gtss_filact_funct05_            000000 constant        entry                    external dcl 2-116
gtss_filact_funct08_            000000 constant        entry                    external dcl 2-117
gtss_filact_funct10_            000000 constant        entry                    external dcl 2-118
gtss_filact_funct11_            000000 constant        entry                    external dcl 2-119
gtss_filact_funct14_            000000 constant        entry                    external dcl 2-120
gtss_filact_funct18_            000000 constant        entry                    external dcl 2-121
gtss_filact_funct19_            000000 constant        entry                    external dcl 2-122
gtss_filact_funct21_            000000 constant        entry                    external dcl 2-123
gtss_filact_funct22_            000000 constant        entry                    external dcl 2-124
gtss_find_cond_frame_           000000 constant        entry                    external dcl 2-110
gtss_interp_prim_               000000 constant        entry                    external dcl 2-126
gtss_interp_prim_$callss        000000 constant        entry                    external dcl 2-127
gtss_interp_prim_$sysret        000000 constant        entry                    external dcl 2-128
gtss_interp_prim_$t_goto        000000 constant        entry                    external dcl 2-129
gtss_ios_change_size_           000000 constant        entry                    external dcl 2-130
gtss_ios_close_                 000000 constant        entry                    external dcl 2-131
gtss_ios_exchange_names_        000000 constant        entry                    external dcl 2-132
gtss_ios_initialize_            000000 constant        entry                    external dcl 2-133
gtss_ios_io_                    000000 constant        entry                    external dcl 2-134
gtss_ios_open_                  000000 constant        entry                    external dcl 2-135
gtss_ios_position_              000000 constant        entry                    external dcl 2-136
gtss_mcfc_$close                000000 constant        entry                    external dcl 2-139
gtss_mcfc_$delete               000000 constant        entry                    external dcl 2-137
gtss_mcfc_$open                 000000 constant        entry                    external dcl 2-138
gtss_mcfc_empty                 000000 constant        entry                    external dcl 2-106
gtss_mcfc_init_                 000000 constant        entry                    external dcl 2-125
gtss_read_starCFP_              000000 constant        entry                    external dcl 2-140
gtss_read_starCFP_$last_os      000000 constant        entry                    external dcl 2-141
gtss_run_subsystem_             000000 constant        entry                    external dcl 2-142
gtss_run_subsystem_$finish      000000 constant        entry                    external dcl 2-143
gtss_run_subsystem_$restor      000000 constant        entry                    external dcl 2-144
gtss_run_subsystem_$restor_perm 000000 constant        entry                    external dcl 2-145
gtss_set_slave_                 000000 constant        entry                    external dcl 2-146
gtss_set_slave_$load_bar        000000 constant        entry                    external dcl 2-147
gtss_update_safe_store_         000000 constant        entry                    external dcl 2-148
gtss_verify_access_             000000 constant        entry                    external dcl 2-149
gtss_verify_access_$check_forced_access
                                000000 constant        entry                    external dcl 2-150
gtss_write_starCFP_             000000 constant        entry                    external dcl 2-151
increment                              automatic       fixed bin(17,0)          dcl 250
ioa_                            000000 constant        entry                    external dcl 251
ios_$read                       000000 constant        entry                    external dcl 252
ios_$seek                       000000 constant        entry                    external dcl 253
k                                      automatic       fixed bin(17,0)          dcl 255
load_at                                automatic       char(8)                  dcl 256
min                                                    builtin function         dcl 261
reloc_bits                             based           bit(1)                   array unaligned dcl 268
size                                   automatic       fixed bin(17,0)          dcl 272
st                                     automatic       bit(72)                  dcl 273
state                                  automatic       char(4)                  unaligned dcl 274
status                                 based           structure                level 1 dcl 303
string                                                 builtin function         dcl 284
sub                                    automatic       char(4)                  dcl 264
tss_reloc                              based           structure                level 1 dcl 328
word_no                                automatic       fixed bin(17,0)          dcl 278

NAMES DECLARED BY EXPLICIT CONTEXT.
any_abort                       000560 constant        label                    dcl 217 ref 91 134 142 152 197
exit_gecall                     000566 constant        label                    dcl 221 ref 205 207
gtss_multics_Hstar_             000102 constant        entry                    external dcl 15
io_abort                        000560 constant        label                    dcl 217
l2                              000322 constant        label                    dcl 128
l3                              000474 constant        label                    dcl 178
not_found                       000212 constant        label                    dcl 87
readp                           000221 constant        label                    dcl 96 ref 82
sim_cat                         000164 constant        label                    dcl 77 set ref 70
start_pgm                       000553 constant        label                    dcl 211

NAME DECLARED BY CONTEXT OR IMPLICATION.
divide                                                 builtin function         ref 130

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       674         716     574         704
Length      1124     574        22         172     100           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gtss_multics_Hstar_                 166 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gtss_multics_Hstar_      000100 gseg                        gtss_multics_Hstar_
                         000102 accum                       gtss_multics_Hstar_
                         000104 callp                       gtss_multics_Hstar_
                         000106 dcwp                        gtss_multics_Hstar_
                         000110 dylibsw                     gtss_multics_Hstar_
                         000111 first_lib                   gtss_multics_Hstar_
                         000112 first_loc                   gtss_multics_Hstar_
                         000113 gcatsw                      gtss_multics_Hstar_
                         000114 i                           gtss_multics_Hstar_
                         000115 j                           gtss_multics_Hstar_
                         000116 load_increment              gtss_multics_Hstar_
                         000117 load_origin                 gtss_multics_Hstar_
                         000120 longerror                   gtss_multics_Hstar_
                         000151 message                     gtss_multics_Hstar_
                         000170 ndcw                        gtss_multics_Hstar_
                         000171 pgm_length                  gtss_multics_Hstar_
                         000172 me                          gtss_multics_Hstar_
                         000200 prefp                       gtss_multics_Hstar_
                         000202 ptr                         gtss_multics_Hstar_
                         000204 reloc_len                   gtss_multics_Hstar_
                         000205 seclibsw                    gtss_multics_Hstar_
                         000206 seek_save                   gtss_multics_Hstar_
                         000210 statp                       gtss_multics_Hstar_
                         000212 xfer_total                  gtss_multics_Hstar_
                         000213 bcd_subsystem_name          gtss_multics_Hstar_
                         000214 code                        gtss_multics_Hstar_
                         000216 lib_ptr                     gtss_multics_Hstar_
                         000220 data_ptr                    gtss_multics_Hstar_
                         000222 cat_ptr                     gtss_multics_Hstar_
                         000224 prog_ptr                    gtss_multics_Hstar_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
gtss_ascii_bcd_               hcs_$set_max_length_seg       hcs_$truncate_seg

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
gtss_ext_$gtss_slave_area_seg gtss_ext_$stack_level_




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     15 000074       238 000107       241 000111       242 000112       245 000113       265 000115       266 000120
    267 000122       270 000123       275 000124       289 000125       290 000126       291 000127       293 000130
     65 000131        67 000133        68 000135        70 000156        71 000162        77 000164        79 000165
     80 000175        81 000202        82 000207        84 000210        87 000212        90 000215        91 000220
     96 000221       102 000233       105 000235       106 000241       107 000244       109 000247       110 000251
    111 000254       112 000257       113 000261       114 000262       116 000267       117 000273       119 000274
    120 000302       122 000310       123 000315       124 000320       128 000322       130 000325       131 000334
    132 000336       133 000341       134 000344       137 000345       139 000353       140 000357       141 000362
    142 000365       144 000366       147 000400       148 000414       150 000416       151 000421       152 000424
    156 000425       157 000430       163 000435       164 000436       166 000445       167 000450       168 000453
    169 000457       171 000460       174 000462       176 000466       178 000474       183 000475       185 000477
    186 000510       187 000512       188 000521       189 000526       190 000530       192 000533       194 000535
    195 000540       196 000543       197 000546       205 000547       207 000551       211 000553       217 000560
    220 000565       221 000566       224 000573


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
