	COMPILATION LISTING OF SEGMENT !BBBJPMLHdPjNfN
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/10/84  1132.9 mst Mon
	    Options: table map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 gse_ext_:proc;
        7 
        8 /* Generate object for "gse_ext_" data.
        9*
       10*   Author:    Dave Ward 1981
       11*   Modified:  Ron Barstad  83-07-21  Remove dependency on ted_com, add include file
       12* */
       13 /** Initialize cds_args **/
       14 
       15 	cds_args_ptr=addr(space_for_cds_args);
       16 	unspec(space_for_cds_args)="0"b;
       17 
       18 /** Reference structure input to cds to assure it is in runtime table. **/
       19 
       20 	if addr(gse_ext_)=null() then ;
       21 
       22 /** No text section **/
       23 	cds_args_ptr -> cds_args.sections (1).p = null ();
       24 	cds_args_ptr -> cds_args.sections (1).len = 0;
       25 	cds_args_ptr -> cds_args.sections (1).struct_name = "NO_TEXT";
       26 
       27 /** Static section **/
       28 	cds_args_ptr -> cds_args.sections (2).p = addr (gse_ext_);	/* Caller's data. */
       29 	cds_args_ptr -> cds_args.sections (2).len = size (gse_ext_);	/* No. words in data structure. */
       30 	cds_args_ptr -> cds_args.sections (2).struct_name = "gse_ext_";
       31 
       32 	cds_args_ptr -> cds_args.seg_name = "gse_ext_";	/* Entryname of object segment. */
       33 	cds_args_ptr -> cds_args.num_exclude_names = 0;		/* All level 2 names are entry points. */
       34 	cds_args_ptr -> cds_args.exclude_array_ptr = null ();
       35 	cds_args_ptr -> cds_args.switches.defs_in_link = "0"b;	/* Definitions contiguous to text section. */
       36 	cds_args_ptr -> cds_args.switches.separate_static = "0"b;	/* Static in linkage section (to bind). */
       37 	cds_args_ptr -> cds_args.switches.have_text = "0"b;	/* No text section. */
       38 	cds_args_ptr -> cds_args.switches.have_static = "1"b;	/* There is a static section. */
       39 	cds_args_ptr -> cds_args.switches.pad = "0"b;		/* Must be zeroes (see create_data_segment_). */
       40 
       41 	call create_data_segment_ (cds_args_ptr, code);
       42 	if code ^= 0 
       43 	   then 
       44 	      call com_err_ (code, "cds_gse_ext_");
       45 	   else 
       46 	      call com_err_( 0,"gse_ext_","Object for gse_ext_ created [^i words].",size(gse_ext_));
       47 
       48 	return;
       49 
       50 /** Data for cds **/
       51 dcl  addr                     builtin;
       52 dcl  cds_args_ptr             ptr init(null());
       53 dcl  code                     fixed bin(35);
       54 dcl  com_err_                 entry options(variable);
       55 dcl  create_data_segment_     entry(ptr,fixed bin(35));
       56 dcl  null                     builtin;
       57 dcl  size                     builtin;
       58 dcl  unspec                   builtin;
       59 dcl  1 space_for_cds_args     aligned like cds_args;
       60 
       61 /** This data structure must exactly match that of gse_ext_.incl.pl1 **/
       62 
       63 dcl 1 gse_ext_ aligned,
       64       2 drm_rule		    fixed bin(24) init(2),
       65       2 gcos_debug_pathname       char(168) init(""),
       66       2 smc_pathname              char(168) init(""),
       67       2 umc_name                  char(12) init(""),
       68       2 modes	aligned,
       69         3 ast		bit(01) unal init("1"b),
       70         3 drl		bit(01) unal init("0"b),
       71         3 gdb		bit(01) unal init("0"b),
       72         3 mcmd		bit(01) unal init("0"b),
       73         3 mquit		bit(01) unal init("0"b),
       74         3 ss		bit(01) unal init("0"b),
       75         3 fill		bit(30) unal init("0"b);
       76 
  1     1 /* BEGIN INCLUDE FILE gse_ext_.incl.pl1 */
  1     2 /*
  1     3*  Created:  Kepner  78-12-01
  1     4**/
  1     5 
  1     6 dcl gse_ext_$drm_rule	fixed bin(24) ext;
  1     7 
  1     8 /* $drm_rule:
  1     9*   0 => rule not set
  1    10*   1 => umc_dir_mode
  1    11*   2 => working_dir_mode
  1    12*   3 => smc_dir_mode
  1    13**/
  1    14 
  1    15 dcl gse_ext_$gcos_debug_pathname       char(168)  /* pathname for the gcos debugger control file */ ext;
  1    16 dcl gse_ext_$smc_pathname              char(168) 	/* root directory used with smc_dir mapping rule */ ext;
  1    17 dcl gse_ext_$umc_name                  char(12) 	/* User Master Catalog name specified by user with gse command */ ext;
  1    18 dcl 1 gse_ext_$modes	aligned ext,
  1    19        3 ast		bit(01) unal, 	/* 1 => use asterisk as prompt character */
  1    20        3 drl		bit(01) unal, 	/* 1 => cause trace info on each derail to be printed */
  1    21        3 gdb		bit(01) unal, 	/* 1 => use gcos debugger (gdb) */
  1    22        3 mcmd		bit(01) unal, 	/* 1 => allow use of e request at GTSS command level */
  1    23        3 mquit		bit(01) unal, 	/* 1 => quit causes entry to new Multics command level */
  1    24        3 ss		bit(01) unal, 	/* 1 => cause trace info on each subsystem to be printed */
  1    25        3 fill		bit(30) unal; 
  1    26 
  1    27 /*   END INCLUDE FILE gse_ext_.incl.pl1 */
       77 
       78 
  2     1 /* BEGIN INCLUDE FILE cds_args.incl.pl1 */
  2     2 
  2     3 dcl 1 cds_args based aligned,
  2     4     2 sections (2),
  2     5       3 p ptr,					/* pointer to data for text/static section */
  2     6       3 len fixed bin (18),				/* size of text/static section */
  2     7       3 struct_name char (32),			/* name of declared structure for this section */
  2     8     2 seg_name char (32),				/* name to create segment by */
  2     9     2 num_exclude_names fixed bin,			/* number of names in exclude array */
  2    10     2 exclude_array_ptr ptr,				/* pointer to array of exclude names */
  2    11     2 switches,					/* control switches */
  2    12       3 defs_in_link bit (1) unal,			/* says put defs in linkage */
  2    13       3 separate_static bit (1) unal,			/* says separate static section is wanted */
  2    14       3 have_text bit (1) unal,			/* ON if text section given */
  2    15       3 have_static bit (1) unal,			/* ON if static section given */
  2    16       3 pad bit (32) unal;
  2    17 
  2    18 dcl  exclude_names (1) char (32) based;			/* pointed to be cds_args.exclude_array_ptr */
  2    19 
  2    20 /* END INCLUDE FILE cds_args.incl.pl1 */
       79 
       80 end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/10/84  1042.4  !BBBJPMLHdPjNfN.pl1               >spec>on>7105>gse_ext_.cds
77           1    09/09/83  1713.4  gse_ext_.incl.pl1                 >ldd>include>gse_ext_.incl.pl1
79           2    04/01/76  2209.5  cds_args.incl.pl1                 >ldd>include>cds_args.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 51 ref 15 20 28
ast                     130     000151 automatic       bit(1)                   initial level 3 packed unaligned dcl 63 set ref 63*
cds_args                               based           structure                level 1 dcl 2-3
cds_args_ptr                    000100 automatic       pointer                  initial dcl 52 set ref 15* 23 24 25 28 29 30 32 33
                                                                                  34 35 36 37 38 39 41* 52*
code                            000102 automatic       fixed bin(35,0)          dcl 53 set ref 41* 42 42*
com_err_                        000012 constant        entry                    external dcl 54 ref 42 45
create_data_segment_            000014 constant        entry                    external dcl 55 ref 41
defs_in_link             44            based           bit(1)                   level 3 packed unaligned dcl 2-3 set ref 35*
drl                     130(01) 000151 automatic       bit(1)                   initial level 3 packed unaligned dcl 63 set ref 63*
drm_rule                        000151 automatic       fixed bin(24,0)          initial level 2 dcl 63 set ref 63*
exclude_array_ptr        42            based           pointer                  level 2 dcl 2-3 set ref 34*
fill                    130(06) 000151 automatic       bit(30)                  initial level 3 packed unaligned dcl 63 set ref 63*
gcos_debug_pathname       1     000151 automatic       char(168)                initial level 2 dcl 63 set ref 63*
gdb                     130(02) 000151 automatic       bit(1)                   initial level 3 packed unaligned dcl 63 set ref 63*
gse_ext_                        000151 automatic       structure                level 1 dcl 63 set ref 20 28 29 45 45
have_static              44(03)        based           bit(1)                   level 3 packed unaligned dcl 2-3 set ref 38*
have_text                44(02)        based           bit(1)                   level 3 packed unaligned dcl 2-3 set ref 37*
len                       2            based           fixed bin(18,0)          array level 3 dcl 2-3 set ref 24* 29*
mcmd                    130(03) 000151 automatic       bit(1)                   initial level 3 packed unaligned dcl 63 set ref 63*
modes                   130     000151 automatic       structure                level 2 dcl 63
mquit                   130(04) 000151 automatic       bit(1)                   initial level 3 packed unaligned dcl 63 set ref 63*
null                                                   builtin function         dcl 56 ref 20 23 34 52
num_exclude_names        40            based           fixed bin(17,0)          level 2 dcl 2-3 set ref 33*
p                                      based           pointer                  array level 3 dcl 2-3 set ref 23* 28*
pad                      44(04)        based           bit(32)                  level 3 packed unaligned dcl 2-3 set ref 39*
sections                               based           structure                array level 2 dcl 2-3
seg_name                 30            based           char(32)                 level 2 dcl 2-3 set ref 32*
separate_static          44(01)        based           bit(1)                   level 3 packed unaligned dcl 2-3 set ref 36*
size                                                   builtin function         dcl 57 ref 29 45 45
smc_pathname             53     000151 automatic       char(168)                initial level 2 dcl 63 set ref 63*
space_for_cds_args              000104 automatic       structure                level 1 dcl 59 set ref 15 16*
ss                      130(05) 000151 automatic       bit(1)                   initial level 3 packed unaligned dcl 63 set ref 63*
struct_name               3            based           char(32)                 array level 3 dcl 2-3 set ref 25* 30*
switches                 44            based           structure                level 2 dcl 2-3
umc_name                125     000151 automatic       char(12)                 initial level 2 dcl 63 set ref 63*
unspec                                                 builtin function         dcl 58 set ref 16*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
exclude_names                          based           char(32)                 array unaligned dcl 2-18
gse_ext_$drm_rule               000016 external static fixed bin(24,0)          dcl 1-6
gse_ext_$gcos_debug_pathname    000020 external static char(168)                unaligned dcl 1-15
gse_ext_$modes                  000026 external static structure                level 1 dcl 1-18
gse_ext_$smc_pathname           000022 external static char(168)                unaligned dcl 1-16
gse_ext_$umc_name               000024 external static char(12)                 unaligned dcl 1-17

NAME DECLARED BY EXPLICIT CONTEXT.
gse_ext_                        000032 constant        entry                    external dcl 6

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       354         404     242         364
Length      1540     242        30        1117     112           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gse_ext_                            234 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gse_ext_                 000100 cds_args_ptr                gse_ext_
                         000102 code                        gse_ext_
                         000104 space_for_cds_args          gse_ext_
                         000151 gse_ext_                    gse_ext_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      create_data_segment_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
gse_ext_$drm_rule             gse_ext_$gcos_debug_pathname  gse_ext_$modes                gse_ext_$smc_pathname
gse_ext_$umc_name




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      6 000031        52 000037        63 000041        15 000072        16 000074        20 000077        23 000105
     24 000107        25 000110        28 000113        29 000115        30 000117        32 000122        33 000125
     34 000126        35 000130        36 000132        37 000134        38 000136        39 000140        41 000142
     42 000152        45 000176        48 000233


Object Segment >spec>on>7105>gse_ext_
Created on 12/10/84  1133.0 mst Mon
by GJohnson.SysMaint.m
using create_data_segment_, Version II of Friday, November 30, 1984

        Object    Text    Defs    Link    Symb  Static
Start        0       0       0      60     222      70
Length     407       0      60     142     151     132


7 Definitions:


segname:    gse_ext_

link|10         drm_rule
link|11         gcos_debug_pathname
link|140        modes
link|63         smc_pathname
symb|0          symbol_table
link|135        umc_name


No Links.





                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
