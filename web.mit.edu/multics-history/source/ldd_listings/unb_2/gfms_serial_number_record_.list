	COMPILATION LISTING OF SEGMENT gfms_serial_number_record_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/10/84  1209.0 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 gfms_serial_number_record_: proc ();
        7 
        8 /* Display tape serial number record information.
        9*
       10*   Author: Dave Ward	10/01/80
       11**/
       12 	call iox_$read_record (
       13 	     cbp					/* (input) pointer to control block. */
       14 	     , addr (tsnr)				/* (input) record buffer. */
       15 	     , size (tsnr)*4			/* (input) buffer length in bytes. */
       16 	     , nbr				/* (output) number of bytes read. */
       17 	     , code				/* (output) I/O system status. */
       18 	     );
       19 	if code ^= 0 then do;
       20 	     call com_err_ (
       21 		code
       22 		, "gfms_serial_number_record_"
       23 		, "Attempting to read tape serial number record."
       24 		||"^/Tape status ^4.3b"
       25 		||"^/buffer length ^i (bytes)."
       26 		||"^/bytes read ^i."
       27 		||"^/attach description ""^a"""
       28 		, gfms_tape_status_ (cbp)
       29 		, size (tsnr)*4
       30 		, nbr
       31 		, attach_description
       32 		);
       33 fail:	     ;
       34 	     signal cond (gfms_fail);
       35 	end;
       36 
       37 	call ioa ("^|TAPE SERIAL NUMBER RECORD INFORMATION (block 1):");
       38 	if word0.b00_17 = 1				/* Must be block 1 of record. */
       39 	& word0.b18_35 = 65
       40 	& word1.b00_17 = 64
       41 	& word1.b18_35 = "000017"b3 then do;		/* Expected constants. */
       42 	     call ioa ("serial number of copy this volume ^a", gfms_ascii_ ((word2)));
       43 	     call ioa ("serial number of latest journal tape ^a", gfms_ascii_ ((word2)));
       44 	end;
       45 	else do;					/* Constant(s) improper. */
       46 	     call com_err_ (
       47 		0
       48 		, "gfms_serial_number_record_"
       49 		, "serial number record constants not as expected."
       50 		);
       51 	     call gfms_dump_rec_ (
       52 		addr (tsnr)
       53 		, divide (nbr+3, 4, 17)
       54 		);
       55 	     goto fail;
       56 	end;
       57 	return;
       58 
       59 /*  Variables for gfms_serial_number_record_:			*/
       60 /*   IDENTIFIER		ATTRIBUTES	*/
       61 dcl  code                     fixed bin(35);
       62 dcl  com_err_                 entry() options(variable);
       63 dcl  gfms_ascii_              entry(bit(*))returns(char(*));
       64 dcl  gfms_dump_rec_           entry (ptr, fixed bin);
       65 dcl  gfms_fail                condition ext;
       66 dcl  gfms_tape_status_        entry (ptr) returns(bit(12));
       67 dcl  hbound                   builtin;
       68 dcl  i                        fixed bin;
       69 dcl  ioa_                     entry() options(variable);
       70 dcl  ioa_$nnl                 entry() options(variable);
       71 dcl  iox_$read_record         entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
       72 dcl  j                        fixed bin;
       73 dcl  nbr                      fixed bin(21);
       74 dcl  size                     builtin;
       75 dcl  word                     (0:size(tsnr)-1)bit(36)aligned based(addr(tsnr));
       76 
       77 /* See DD14, Rev 1 (June 1976) SYSTEM TABLES
       78*   Page 16-24 TAPE SERIAL NUMBER RECORD (66 words)
       79**/
       80 dcl 1 tsnr		aligned
       81 ,     3 word0		/* File and Record Control BCW. */
       82 ,       4 b00_17		fixed bin(18)unsigned unal
       83 ,       4 b18_35		fixed bin(18)unsigned unal
       84 ,     3 word1		/* File and Record Control RCW. */
       85 ,       4 b00_17		fixed bin(18)unsigned unal
       86 ,       4 b18_35		bit(18)unal
       87 ,     3 word2		bit(36) /* tape serial number of copy of vol. */
       88 ,     3 word3		bit(36) /* tape serial number of latest journal tape. */
       89 ,     3 words4_65		(4:65)bit(36) /* Reserved for GCOS. */
       90 ;
       91 
  1     1 /* BEGIN INCLUDE FILE gfms_ext.incl.pl1   (Wardd Multics)  10/07/80 2142.2 mst Tue */
  1     2 /* Modified by:	S. C. Akers	02/08/82	Add gfms_ext$working_dir,
  1     3*						   mapping_rule,
  1     4*						   umc_name 
  1     5*   Modified  Ron Barstad  83-06-03  attach_desc from 40 to 80 char
  1     6**/
  1     7 
  1     8 dcl 1 gfms_ext$print_routines	aligned ext
  1     9 ,     3 ioa		entry variable options(variable)
  1    10 ,     3 ioa_nnl		entry variable options(variable)
  1    11 ;
  1    12 
  1    13 dcl 1 gfms_ext$temp_segs	aligned ext
  1    14 ,     3 dtp		ptr
  1    15 ,     3 nlp		ptr
  1    16 ,     3 inp		ptr
  1    17 ;
  1    18 
  1    19 dcl 1 gfms_ext$tape_file	aligned ext
  1    20 ,     3 cbp		ptr
  1    21 ,     3 attach_description	char(80)unal
  1    22 ,     3 density
  1    23 ,       4 ftd		fixed bin	/* First tape density to attempt. */
  1    24 ,       4 ltd		fixed bin	/* Last tape density to attempt. */
  1    25 ,     3 tape_reel_information
  1    26 ,       4 reel_serial_num	char(6)
  1    27 ,       4 file_serial_num	char(6)
  1    28 ,       4 reel_sequence_num	char(6)
  1    29 ;
  1    30 
  1    31 dcl 1 gfms_ext$options	aligned ext
  1    32 ,     3 close		bit(1)unal	/* perform iox close. */
  1    33 ,     3 detach		bit(1)unal	/* perform iox detach. */
  1    34 ,     3 dump		bit(1)unal	/* dump tape records/information. */
  1    35 ,     3 gf		bit(1)unal	/* provide gtss file attributes. */
  1    36 ,     3 prfn		bit(1)unal	/* print file names. */
  1    37 ,     3 scan_ss		bit(1)unal	/* scan substructure, display, quit. */
  1    38 ,     3 tll		bit(1)unal	/* print totals of llinks. */
  1    39 ,     3 unload		bit(1)unal	/* unload files. */
  1    40 ,     3 NOT_IN_USE		bit(28)unal
  1    41 ;
  1    42 
  1    43 dcl  gfms_ext$working_dir	char (168) var ext static;	/* Where to restore the files.
  1    44*						   It may be the user's working
  1    45*						   directory, or the UMC or SMC directory. */
  1    46 
  1    47 dcl  gfms_ext$mapping_rule	char(3) external static;
  1    48 
  1    49 dcl  gfms_ext$umc_name	char(12) external static;
  1    50 
  1    51 /*   END INCLUDE FILE gfms_ext.incl.pl1 */
       92 
       93      end gfms_serial_number_record_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/10/84  1041.9  gfms_serial_number_record_.pl1    >spec>on>7105>gfms_serial_number_record_.pl1
92           1    10/24/83  1642.4  gfms_ext.incl.pl1                 >ldd>include>gfms_ext.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
attach_description        2     000024 external static char(80)                 level 2 packed unaligned dcl 1-19 set ref 20*
b00_17                          000111 automatic       fixed bin(18,0)          level 3 in structure "tsnr" packed unsigned
                                                                                  unaligned dcl 80 in procedure
                                                                                  "gfms_serial_number_record_" set ref 38
b00_17                    1     000111 automatic       fixed bin(18,0)          level 3 in structure "tsnr" packed unsigned
                                                                                  unaligned dcl 80 in procedure
                                                                                  "gfms_serial_number_record_" set ref 38
b18_35                    1(18) 000111 automatic       bit(18)                  level 3 in structure "tsnr" packed unaligned dcl 80
                                                                                  in procedure "gfms_serial_number_record_" set ref
                                                                                  38
b18_35                    0(18) 000111 automatic       fixed bin(18,0)          level 3 in structure "tsnr" packed unsigned
                                                                                  unaligned dcl 80 in procedure
                                                                                  "gfms_serial_number_record_" set ref 38
cbp                             000024 external static pointer                  level 2 dcl 1-19 set ref 12* 20* 20*
code                            000100 automatic       fixed bin(35,0)          dcl 61 set ref 12* 19 20*
com_err_                        000010 constant        entry                    external dcl 62 ref 20 46
gfms_ascii_                     000012 constant        entry                    external dcl 63 ref 42 43
gfms_dump_rec_                  000014 constant        entry                    external dcl 64 ref 51
gfms_ext$print_routines         000022 external static structure                level 1 dcl 1-8
gfms_ext$tape_file              000024 external static structure                level 1 dcl 1-19
gfms_fail                       000102 stack reference condition                dcl 65 ref 34
gfms_tape_status_               000016 constant        entry                    external dcl 66 ref 20 20
ioa                             000022 external static entry variable           level 2 dcl 1-8 ref 37 42 43
iox_$read_record                000020 constant        entry                    external dcl 71 ref 12
nbr                             000110 automatic       fixed bin(21,0)          dcl 73 set ref 12* 20* 51 51
size                                                   builtin function         dcl 74 ref 12 20
tsnr                            000111 automatic       structure                level 1 dcl 80 set ref 12 12 12 20 51 51
word0                           000111 automatic       structure                level 2 dcl 80
word1                     1     000111 automatic       structure                level 2 dcl 80
word2                     2     000111 automatic       bit(36)                  level 2 dcl 80 set ref 42 43

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
gfms_ext$mapping_rule                  external static char(3)                  unaligned dcl 1-47
gfms_ext$options                       external static structure                level 1 dcl 1-31
gfms_ext$temp_segs                     external static structure                level 1 dcl 1-13
gfms_ext$umc_name                      external static char(12)                 unaligned dcl 1-49
gfms_ext$working_dir                   external static varying char(168)        dcl 1-43
hbound                                                 builtin function         dcl 67
i                                      automatic       fixed bin(17,0)          dcl 68
ioa_                            000000 constant        entry                    external dcl 69
ioa_$nnl                        000000 constant        entry                    external dcl 70
j                                      automatic       fixed bin(17,0)          dcl 72
word                                   based           bit(36)                  array dcl 75

NAMES DECLARED BY EXPLICIT CONTEXT.
fail                            000262 constant        label                    dcl 33 ref 55
gfms_serial_number_record_      000146 constant        entry                    external dcl 6

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 12 12 51 51
divide                                                 builtin function         ref 51 51

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       610         636     474         620
Length      1036     474        26         163     113           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gfms_serial_number_record_          224 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gfms_serial_number_record_
                         000100 code                        gfms_serial_number_record_
                         000110 nbr                         gfms_serial_number_record_
                         000111 tsnr                        gfms_serial_number_record_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_var_desc       call_ext_out_desc   call_ext_out        return              signal              shorten_stack
ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      gfms_ascii_                   gfms_dump_rec_                gfms_tape_status_
iox_$read_record

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
gfms_ext$print_routines       gfms_ext$tape_file




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      6 000145        12 000153        19 000175        20 000177        33 000262        34 000263        37 000266
     38 000302        42 000322        43 000361        44 000421        46 000423        51 000453        55 000472
     57 000473


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
