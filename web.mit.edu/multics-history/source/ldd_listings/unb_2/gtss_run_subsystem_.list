	COMPILATION LISTING OF SEGMENT gtss_run_subsystem_
	Compiled by: Multics PL/I Compiler, Release 29, of July 28, 1986
	Compiled at: Honeywell Bull, Phx. Az., Sys-M 
	Compiled on: 08/04/87  1619.4 mst Tue
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   *                                                         *
        4*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        5*   *                                                         *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 /**************************************************************
       10*   *						   *
       11*   * Copyright (c) 1979 by Honeywell Information Systems, Inc. *
       12*   *						   *
       13*   **************************************************************/
       14 
       15 gtss_run_subsystem_: rs_: proc (prgdes_index);
       16 
       17 /**	Load and set into execution the object from the
       18*   fast library specified by program descriptor
       19*   information (indexed by parmaeter "prgdex_index").
       20*
       21*   Authors: Robert J. Grimes	Created
       22*   -	  Albert N. Kepner	  1978
       23*   -	  Robert M. May
       24*   -	  David B. Ward
       25*   Change:  Dave Ward	02/24/79 $db debug switch.
       26*   Change:  Dave Ward	05/29/79 gdb H* modules.
       27*   Change:  Scott C. Akers    08/17/81 Reset tty_modes on quit
       28*   **/
       29 dcl  prgdes_index             fixed bin (24)parm;
       30 dcl  arg_list_ptrp            ptr parm;
       31 
       32 	pdx = prgdes_index;				/* Local value. */
       33 	arg_list_ptr = null ();			/* arg_list1 should not be in use. */
       34 	restore = "0"b;				/* Did not enter at restore. */
       35 	restor_continue (gtss_ext_$stack_level_) = right_here;
       36 	restor_continue2 (gtss_ext_$stack_level_) = right_here2;
       37 	goto continue;
       38 
       39 restor:	entry (prgdes_index, arg_list_ptrp);
       40 
       41 /**	Entry provided for drl_restor of a subsystem	**/
       42 
       43 /**	Set two static internal variables used to
       44*   access information needed for derail restor
       45*   functionality provided in gtss_run_subsystem_.
       46*   **/
       47 	pdx = prgdes_index;				/* Index to program descriptor. */
       48 	arg_list_ptr = arg_list_ptrp;			/* DRL RESTOR arguments (arg_list1). */
       49 
       50 /**	Now return to the invocation of gtss_run_subsystem_
       51*   that instituted the execution of the subsystem for which this overlay
       52*   is a part (i.e., the overlay being brought in by the
       53*   DRL RESTOR).
       54*   **/
       55 	goto restor_continue (gtss_ext_$stack_level_);
       56 right_here: ;
       57 
       58 /**	We are now here in gtss_run_subsystem_ (obviously) BUT
       59*   back in the invocation indicated above (i.e., back
       60*   "some" Multics stack frames. This process is carried out
       61*   to simulate GCOS TSS functioning when a DRL RESTOR is
       62*   processed.
       63*   **/
       64 	restore = "1"b;
       65 	tral = fixed (arg_list1.tra);			/* Record transfer address. */
       66 	go to continue;
       67 
       68 restor_perm: entry (dummy, arg_list_ptrp, entry_pt);
       69 dcl  dummy                    fixed bin (24) parm;
       70 dcl  entry_pt                 fixed bin (18) parm;
       71 
       72 /* 	Entry for provided for DRL RESTOR of a permfile. */
       73 
       74 /* 	Save needed arguments in static variables. */
       75 	entry_point = entry_pt;
       76 
       77 /* 	Now return to the appropriate invocation of gtss_run_subsystem_ */
       78 	goto restor_continue2 (gtss_ext_$stack_level_);
       79 right_here2: ;
       80 	ep = entry_point;
       81 
       82 	if db_run_subsystem then
       83 	     call ioa_ (
       84 	     "gtss_run_subsystem_(^i,^b) ss_name=""^a"" gdb_name=""^a"""
       85 	     , pdx
       86 	     , restore
       87 	     , gtss_prgdes_ext_$prgdes.ss_name (pdx)
       88 	     , gtss_ext_$gdb_name
       89 	     );
       90 	go to ready_to_transfer;
       91 
       92 continue:	;
       93 
       94 	gseg, op = gtss_ext_$gtss_slave_area_seg (gtss_ext_$stack_level_);
       95 	c = gtss_prgdes_ext_$prgdes.component (pdx);
       96 	ip = gtss_ext_$fast_lib.comp_ptr (c);
       97 	il = gtss_ext_$fast_lib.comp_wds (c);
       98 
       99 	so = fixed (gtss_prgdes_ext_$prgdes.seek_address (pdx));
      100 	ps = gtss_prgdes_ext_$prgdes.program_size (pdx);
      101 
      102 /* Tempory fix for fortran memory limit problem ************************************************** */
      103 	if ^restore then if current_ps ^= -1 then ps = current_ps;
      104 	ls = gtss_prgdes_ext_$prgdes.load_size (pdx);
      105 	ep = gtss_prgdes_ext_$prgdes.entry_point (pdx);
      106 	la = gtss_prgdes_ext_$prgdes.initial_load_address (pdx);
      107 	if restore then				/* Reset length of area preceeding code. */
      108 	     if loc_use then la = fixed (loc);		/* Caller designating code location. */
      109 	     else la = fixed (loc)+la;		/* Displace whole load unit. */
      110 	call gtss_bcd_ascii_ (
      111 	     addr (gtss_prgdes_ext_$prgdes.bci_catalog_name (pdx)), 6, addr (ln));
      112 
      113 	if db_run_subsystem then do;
      114 	     call ioa_ (
      115 		"gtss_run_subsystem_(^i,^b) ss_name=""^a""^-ln=""^a"""
      116 		, pdx
      117 		, restore
      118 		, gtss_prgdes_ext_$prgdes.ss_name (pdx)
      119 		, ln
      120 		);
      121 	     call ioa_ (
      122 		"op=^p^-ip=^p^-il=^i^-so=^i", op, ip, il, so);
      123 	     call ioa_ (
      124 		"la=^i^-ls=^i^-ps=^i^-ep=^i", la, ls, ps, ep);
      125 	end;
      126 	if gse_ext_$modes.ss then do;
      127 	     on quit call gtss_fix_tty_modes_ ();
      128 	     call ioa_ ("Subsystem ^a", gtss_prgdes_ext_$prgdes.ss_name (pdx));
      129 	     revert quit;
      130 	end;
      131 
      132 
      133 	if ^restore then do;			/* Overlay load does not reset available memory length. */
      134 						/**	Adjust length of segment to load length.	**/
      135 	     call hcs_$set_max_length_seg (op, sys_info$max_seg_size, code); /* Reset to largest seg size. */
      136 	     if code = 0 then
      137 		call hcs_$truncate_seg (op, (ps), code);
      138 	     if code = 0 then
      139 		call hcs_$set_bc_seg (op, fixed (ps*36, 24, 0), code);
      140 	     ll = (divide (ps-1, 1024, 24, 0)+1)*1024;	/* modulo 1024 word (See seg_max_length). */
      141 
      142 /**	hcs_$set_max_length_seg duplication of using
      143*   BAR mode to detect out of bounds on user's memory segment.
      144*   if code = 0 then
      145*   call hcs_$set_max_length_seg (op, (ll), code);
      146*   **/
      147 	     if code ^= 0 then do;
      148 		call com_err_ (code, "gtss_run_subsystem_",
      149 		     "Could not set length of object segment.");
      150 		signal cond (gtss_fail);
      151 	     end;
      152 	end;
      153 
      154 	fp = ip;					/* Pointer to object in library. */
      155 	tp = op;					/* Pointer to segment to load object into. */
      156 	if ^restore then do;			/* Overlay load does not zero this memory area. */
      157 	     l = la;				/* Space required before the object. */
      158 	     tp -> MA = "0"b;			/* Zero this space. */
      159 	end;
      160 
      161 	tp = addrel (tp, la);			/* Position after the space. */
      162 	fp = addrel (fp, so);			/* Position to object in library. */
      163 	l1 = il - so;				/* No. words remaining in this library component segment. */
      164 	l2 = ls;					/* No. words in object to be moved. */
      165 	do while (ls>0);
      166 	     l = min (l1, l2);			/* No. words for this move. */
      167 	     if l<1 then do;
      168 		call com_err_ (0, "gtss_run_subsystem_",
      169 		     "Bug: zero words moved from library.");
      170 		signal cond (gtss_fail);
      171 	     end;
      172 	     tp -> MA = fp -> MA;			/* Move piece of object. */
      173 	     ls = ls-l;
      174 	     if ls>0 then do;			/* Object continues on next component. */
      175 		c = c+1;				/* Index of next component. */
      176 		if c>gtss_ext_$fast_lib.fast_lib_ncp then do;
      177 		     call com_err_ (0, "gtss_run_subsystem_",
      178 			"Bug: exceeded library components.");
      179 		     signal cond (gtss_fail);
      180 		end;
      181 		fp = gtss_ext_$fast_lib.comp_ptr (c);
      182 		il = gtss_ext_$fast_lib.comp_wds (c);
      183 		so = 0;
      184 		ls = ls - l;
      185 		tp = addrel (tp, l);
      186 	     end;
      187 	end;
      188 
      189 	if ^restore then do;
      190 
      191 /**	Set UST.	**/
      192 	     gtss_ust.lswap.size,
      193 		gtss_ust.lsize.limit = ll_b18;	/* set up the ust value */
      194 	     gtss_ust.lsize.bar = divide (ll+511, 512, 17, 0); /* BAR limit in 512 word blocks. */
      195 
      196 /**
      197*   initialize the slave prefix
      198*   lhole.high is set to the exact program size specified by the subsystem
      199*   being initially loaded.
      200*   lhole.total is set to the highest addressable location after the program size
      201*   has been rounded up mod 1024.
      202*   **/
      203 	     gtss_spa.lhole.high = ps;
      204 	     gtss_spa.lhole.total = ll-1;
      205 	     gtss_spa.lwrap.b23 = "0"b;		/* Clear T.ERR flag. */
      206 
      207 /**	Set a timer manager to limit the subsystem to run
      208*   no more than gtss_inst  seconds (parm 2
      209*   "11"b => relative seconds). If the time runs out
      210*   call gtss_fault_processor_$timer_runout.
      211*   **/
      212 
      213 
      214 /**
      215*   Set up label variable in external static so that when the GCOS
      216*   program terminates, the handler can return to this procedure
      217*   and revert the stack properly.
      218*   **/
      219 	     gtss_ext_$drl_rtrn (gtss_ext_$stack_level_) = end_activity;
      220 	end;
      221 
      222 	gtss_spa.lnam = gtss_prgdes_ext_$prgdes.bci_catalog_name (pdx);
      223 
      224 /**
      225*   Ready to transfer to tss segment. Call a program to set BAR and do
      226*   a TSS to enter BAR mode. Pass as args the limit part of the BAR
      227*   (number of 512 word blocks), and a pointer to the entry in the tss segment
      228*   which is the location of the entry GECALL to get the subsytem going.
      229*						   **/
      230 
      231 	if restore then
      232 	     if tral ^= 0 then ep = tral;
      233 
      234 ready_to_transfer: ;
      235 
      236 
      237 	if gse_ext_$modes.gdb then
      238 	     call gcos_debug_$loadtime (
      239 	     "-gtss"				/* memory segment name */
      240 	     , (gtss_prgdes_ext_$prgdes.ss_name (pdx))
      241 	     , ""
      242 	     , la
      243 	     );
      244 	gtss_ext_$flags.drl_in_progress = "0"b;
      245 	gtss_ext_$flags.dispose_of_drl_on_pi = "0"b;
      246 	gtss_ext_$flags.unfinished_drl = "0"b;
      247 	gtss_ext_$flags.popup_from_pi = "0"b;
      248 	call gtss_set_slave_ ((gtss_ust.lsize.bar), addrel (op, ep));
      249 
      250 /* Control will return to the top of the next page, via a nonlocal goto,
      251*   when the subsystem gives up control, which it will do for any of the following reasons:
      252*
      253*   1) DRL RETURN from the subsystem,
      254*   2) DRL ABORT from the subsystem,
      255*   3) fault in subsystem, of a type which causes an abort,
      256*   4) error in one of the drl simulators, of a type which causes an abort.
      257*   */
      258 	call com_err_ (0, "gtss_run_subsystem_", "RETURNED FROM gtss_set_slave_ (BUG)");
      259 	signal cond (gtss_fail);
      260 
      261 
      262 /* Control comes here via a nonlocal goto, when the activity terminates */
      263 finish:	entry;					/* Called by gtss_interp_prim_ */
      264 	gseg = gtss_ext_$gtss_slave_area_seg (gtss_ext_$stack_level_);
      265 
      266 end_activity: ;
      267 	call conclude_subsystem;
      268 	return;
      269 
      270 conclude_subsystem: proc;
      271 
      272 /**	Perform functions at conclusion of execution fo
      273*   current subsystem.
      274*   **/
      275 
      276 
      277 /**	Catch miss-setting of label variable. **/
      278 	     gtss_ext_$drl_rtrn (gtss_ext_$stack_level_) = gtss_ext_$bad_drl_rtrn;
      279 	     gtss_ust.lswth.b13 = gtss_spa.lwrap.b23;
      280 	     return;
      281 	end					/* conclude_subsystem */;
      282 
      283 mem_size:	entry;
      284 
      285 /* Reset current_ps, i.e., memory size. */
      286 	call cu_$arg_ptr (1, ap, al, code);
      287 	if code ^= 0 then do;
      288 bad_mem_size:  ;
      289 	     call com_err_ (code,
      290 		"gtss_run_subsystem_$mem_size",
      291 		"Argument is memory size (decimal integer optionally followed by k), or ""?"", or ""default"".");
      292 	     return;
      293 	end;
      294 	if arg = "default" then current_ps = -1;	/* Use library value. */
      295 	else
      296 	if arg ^= "?" then do;			/* Obtain caller's value. */
      297 	     if (al>1) & ((argk.K = "K") | (argk.K = "k")) then do; /* Memory size in K (1024). */
      298 		if verify (Ksize, "0123456789")>0 then goto bad_mem_size;
      299 		current_ps = fixed (Ksize)*1024;
      300 	     end;
      301 	     else do;				/* Memory size in decimal. */
      302 		if verify (arg, "0123456789")>0 then goto bad_mem_size;
      303 		current_ps = fixed (arg);
      304 	     end;
      305 	end;
      306 	if current_ps = -1 then
      307 	     call com_err_ (0, "gtss_run_subsystem_$mem_size",
      308 	     "Current memory size is from library.");
      309 	else
      310 	call com_err_ (0, "gtss_run_subsystem_$mem_size",
      311 	     "Current memory size is ^12o (^i.) ^12oK (^i.K)"
      312 	     , current_ps, current_ps
      313 	     , divide (current_ps, 1024, 24), divide (current_ps, 1024, 24)
      314 	     );
      315 	return;
      316 
      317 dcl  current_ps               fixed bin (35) static int init (65536);						/* 65536 => 64K */
      318 dcl  cu_$arg_ptr              entry options (variable);
      319 dcl  ap                       ptr init(null());
      320 dcl  al                       fixed bin;
      321 dcl  arg                      char (al)unal based (ap);
      322 dcl 1 argk unal based (ap),
      323     2 Ksize char (al-1)unal,
      324     2 K char (1)unal;
      325 
      326 /**	Variables for gtss_run_subsystem_
      327*     IDENTIFIER		ATTRIBUTES	**/
      328 dcl gtss_fix_tty_modes_ entry ext;
      329 dcl  any_other                condition ext;
      330 dcl  arg_list_ptr             ptr static int;
      331 dcl  c                        fixed bin (24);
      332 dcl  code                     fixed bin (35);
      333 dcl  debug                    entry;
      334 dcl  ep                       fixed bin (24);
      335 dcl  entry_point              fixed bin (18) static;
      336 dcl  fp                       ptr init(null());
      337 dcl  gcos_debug_$loadtime     entry (char (*), char (*), char (*), fixed bin (24));
      338 dcl  gseg                     ptr init(null());
      339 dcl  gtss_fail                condition ext;
      340 dcl  hcs_$set_bc_seg          entry (ptr, fixed bin (24), fixed bin (35));
      341 dcl  hcs_$set_max_length_seg  entry (ptr, fixed bin (24), fixed bin (35));
      342 dcl  hcs_$truncate_seg        entry (ptr, fixed bin (24), fixed bin (35));
      343 dcl  il                       fixed bin (24);
      344 dcl  ioa_                     entry options (variable);
      345 dcl  ip                       ptr init(null());
      346 dcl  l                        fixed bin (24);
      347 dcl  l1                       fixed bin (24);
      348 dcl  l2                       fixed bin (24);
      349 dcl  la                       fixed bin (24);
      350 dcl  ll                       fixed bin (24);
      351 dcl  ln                       char (6);
      352 dcl  ls                       fixed bin (24);
      353 dcl  MA                       (l)bit (36)aligned based;
      354 dcl  op                       ptr init(null());
      355 dcl  pdx                      fixed bin (24)static int;
      356 dcl  ps                       fixed bin (24);
      357 dcl  quit                     condition;
      358 dcl  restore                  bit (1)init ("0"b);
      359 dcl  restor_continue          (4)label static int;
      360 dcl  restor_continue2         (4)label static int;
      361 dcl  so                       fixed bin (24);
      362 dcl  sys_info$max_seg_size    fixed bin (24)ext;
      363 dcl  timer_manager_$cpu_call  entry (fixed bin (71), bit (2), entry);
      364 dcl  timer_manager_$reset_cpu_call entry (entry);
      365 dcl  tp                       ptr init(null());
      366 dcl  tral                     fixed bin (24);
      367 
      368 dcl 1 ll_overlay aligned based (addr (ll)),
      369     2 ll_fb18 bit (18)unal,
      370     2 ll_b18 bit (18)unal;
      371 
  1     1 /* BEGIN INCLUDE FILE gtss_restor_arg_list1.incl.pl1 */
  1     2 /*
  1     3*  Created: (Wardd Multics)  06/26/78 1308.1 mst Mon 
  1     4**/
  1     5 
  1     6 dcl 1 arg_list1		aligned based(arg_list_ptr)
  1     7 ,     2 ascii_program_name	char(4)
  1     8 ,     2 loc		bit(18)unal
  1     9 ,     2 loc_use		bit(18)unal
  1    10 ,     2 tra		bit(18)unal
  1    11 ,     2 restor_type		bit(18)unal
  1    12 ;
  1    13 /*   END INCLUDE FILE gtss_restor_arg_list1.incl.pl1 */
      372 
      373 
  2     1 /* BEGIN INCLUDE FILE gtss_prgdes_.incl.pl1 */
  2     2 /*
  2     3*  Created: Kepner  04/12/78
  2     4*  Modified:  Ron Barstad  82-08-11  to change size of prgdes array for 4js3
  2     5*  Modified:  Ron Barstad  83-05-19  change size of prgdes array for update 7
  2     6**/
  2     7 
  2     8 /*
  2     9*   "     This  structure  describes  the  timesharing  subsystem   program
  2    10*   "     descriptors.
  2    11*   "
  2    12*   "     Anywhere  fixed bin(17) unal appears it should be noted that GCOS
  2    13*   "     can potentially make use of all 18 bits  and  caution  should  be
  2    14*   "     exercised.   These  items  should  be  changed  to  fixed bin(18)
  2    15*   "     usigned unal when this feature is added to the PL/I compiler.
  2    16*   "
  2    17*   "     ss_name  subsystem name
  2    18*   "
  2    19*   "     program_size  actual program size to be used in execution.
  2    20*   "
  2    21*   "     load_size  the size remaining when all leading and trailing zeros
  2    22*   "               have been eliminated. This is used to reduce  the  size
  2    23*   "               of the original copy of the program.
  2    24*   "
  2    25*   "     entry_point  address relative to zero  that  contains  the  first
  2    26*   "               executable instruction.
  2    27*   "
  2    28*   "     parameters  flags defining attributes of the subsystem. The  flag
  2    29*   "               bits  are defined below. Assume bits are numbered 1-18.
  2    30*   "		 1	cache
  2    31*   "		 2	.BSCF
  2    32*   "		 3	special size request
  2    33*   "		 4	drl t.exec permission.
  2    34*   "		 5	drl t.cmov permission
  2    35*   "		 6	special product offering.
  2    36*   "		 7	high use program file,  #p
  2    37*   "		 8	special file switch (perm/temp) allowed.
  2    38*   "		 9	ss not callable at system level.
  2    39*   "		10	subsystem allowed use of get-specific.
  2    40*   "		11	execute permission allowed for file i/o.
  2    41*   "		12	subsystem can read system master catalog.
  2    42*   "		13	basic or databasic
  2    43*   "		14	subsystem uses common command list.
  2    44*   "		15	low use subsystem (# q file)
  2    45*   "		16	subsystem must be patched when loaded.
  2    46*   "		17	master subsystem.
  2    47*   "		18	privileged subsystem.
  2    48*   "
  2    49*   "	seek_address  the word offset in the multisegment file
  2    50*   "		component where the object code for this subsystem is
  2    51*   "		stored.
  2    52*   "
  2    53*   "     initial_load_address  The address of the first  nonzero  word  in
  2    54*   "               the program.
  2    55*   "
  2    56*   "     cmd_lang_offset   The  word  offset   into   gtss_prgdes_ext_$primitives
  2    57*   "               (suitable  for use with addrel) of the command language
  2    58*   "               list for this subsystem.
  2    59*   "
  2    60*   "     cmd_lang_len  Number of command names for this subsystem.
  2    61*   "
  2    62*   "     statistics
  2    63*   "
  2    64*   "     bci_catalog_name  The GECALL name for the subsystem.
  2    65*   "
  2    66*   "	library	an integer which indicates which multisegment file
  2    67*   "		contains the object code for this subsystem.
  2    68*   "
  2    69*   "	component	an integer which indicates which component of the
  2    70*   "		multisegment file contains the object code for this
  2    71*   "		subsystem.
  2    72*   "
  2    73*   "     ss_name_len  The number of nonblank characters in the  subsystem
  2    74*   "		name.
  2    75**/
  2    76 
  2    77 dcl 1 gtss_prgdes_ext_$prgdes (302) aligned ext,
  2    78     2 ss_name char (4) aligned,
  2    79     2 program_size fixed bin (17) unal,
  2    80     2 load_size fixed bin (17) unal,
  2    81     2 entry_point fixed bin (17) unal,
  2    82     2 parameters bit (18) unal,
  2    83     2 seek_address bit(18) unal,
  2    84     2 initial_load_address fixed bin (17) unal,
  2    85     2 cmd_lang_offset fixed bin (17) unal,
  2    86     2 cmd_lang_len fixed bin (17) unal,
  2    87     2 statistics,
  2    88       3 calls fixed bin (17) unal,
  2    89       3 loads fixed bin (17) unal,
  2    90       3 filler (3) bit (36) unal,
  2    91     2 bci_catalog_name bit (36) aligned,
  2    92     2 library fixed bin (17) unal,
  2    93     2 component fixed bin (17) unal,
  2    94     2 ss_name_len fixed bin (17) aligned;
  2    95 
  2    96 
  2    97 
  2    98 /* This overlay structure is used to pass the user visible portion
  2    99*   of the program descriptor to the subsystem via DRL PRGDES. */
  2   100 dcl 1 prgdes_ov (302) aligned based (addr (gtss_prgdes_ext_$prgdes)),
  2   101     2 first_9_words char (36),			/* user visible portion */
  2   102     2 filler char (12);
  2   103 
  2   104 /*   END INCLUDE FILE gtss_prgdes_.incl.pl1 */
      374 
      375 
  3     1 /* BEGIN INCLUDE FILE gtss_ext_.incl.pl1 */
  3     2 /*
  3     3*  Created: (Wardd Multics)  05/20/78 1307.6 mst Sat 
  3     4*  Modified: Ward            1981     add suspended_process dcl
  3     5*  Modified: Ron Barstad  83-07-21  Fixed level number on mcfc to 3
  3     6*  Modified: Ron Barstad  83-07-25  Fixed derail range in statistics to 4js3 number
  3     7**/
  3     8 dcl  gtss_ext_$aem                   fixed bin static ext	/* >0 Print "additional" error information. */;
  3     9 dcl  gtss_ext_$bad_drl_rtrn          static ext label	/* Default for drl_rtrn. */;
  3    10 dcl  gtss_ext_$db                    (72)bit(1)unal static ext;
  3    11 dcl  gtss_ext_$deferred_catalogs_ptr ptr ext;
  3    12 dcl  gtss_ext_$dispose_of_drl        static ext label	/* quit handlers for some derails use this label to abort */;
  3    13 dcl  gtss_ext_$drl_rtrn              (4)static ext label	/* where to return at subsystem end */;
  3    14 dcl  gtss_ext_$drm_path              char(168)static ext	/* gtss_expand_pathname_stores drm_path */;
  3    15 dcl  gtss_ext_$drun_jid              char (5) static ext	/* valid only for DRUN executing under absentee */;
  3    16 dcl  gtss_ext_$event_channel         fixed bin (71) static ext	/* used for DABT signals */;
  3    17 dcl  gtss_ext_$finished              static ext label	/* Return to gtss for normal conclusion. */;
  3    18 dcl  gtss_ext_$gdb_name              char(8)ext	/* Name H* module to debug. */;
  3    19 dcl  gtss_ext_$get_line              entry(ptr,ptr,fixed bin(21),fixed bin(21),fixed bin(35))variable ext /* Build mode input procedure. */;
  3    20 dcl  gtss_ext_$gtss_slave_area_seg   (4) ext static ptr	/* pointer to gtss slave area segment */;
  3    21 dcl  gtss_ext_$hcs_work_area_ptr     ptr ext static		/* Temp seg for acl lists. */;
  3    22 dcl  gtss_ext_$homedir               char (64) static ext /* user's home dir */;
  3    23 dcl  gtss_ext_$last_k_was_out        bit (1)aligned ext static	/* "1"b => last tty output was output. */;
  3    24 dcl  gtss_ext_$pdir                  char (168) varying ext static	/* pathname of process directory */;
  3    25 dcl  gtss_ext_$popup_from_pi         static ext label	/* transfer to this label after pi simulates popup primitive */;
  3    26 dcl  gtss_ext_$process_type          fixed bin (17) static ext;
  3    27 dcl  gtss_ext_$put_chars             entry(ptr,ptr,fixed bin(24),fixed bin(35)) variable ext	/* Terminal output procedure. */;
  3    28 dcl  gtss_ext_$restart_from_pi       static ext label	/* transfer to this label after pi restores machine conditions */;
  3    29 dcl  gtss_ext_$restart_seg_ptr       ptr static ext	/* points to DRUN restart file when exec under absentee */;
  3    30 dcl  gtss_ext_$sig_ptr               ext static ptr	/* saved ptr to signal_ */;
  3    31 dcl  gtss_ext_$stack_level_          fixed bin ext static;
  3    32 dcl  gtss_ext_$suspended_process     bit(1) ext static;
  3    33 dcl  gtss_ext_$SYstarstar_file_no    fixed bin (24) static ext;
  3    34 dcl  gtss_ext_$user_id               char (26)var ext;
  3    35 dcl  gtss_ext_$work_area_ptr         ptr ext;
  3    36 
  3    37 dcl  1 gtss_ext_$CFP_bits aligned static external
  3    38      , 3 no_input_yet bit (1) unaligned         /* used in gtss_CFP_input_, gtss_read_starCFP_ */
  3    39      , 3 rtn_bits bit (4) unaligned             /* used in gtss_CFP_input_, gtss_CFP_output_ */
  3    40      , 3 cpos_called bit (1) unaligned          /* used in gtss_CFP_input_, gtss_drl_t_cfio_, gtss_abandon_CFP_ */
  3    41      , 3 cout_called bit (1) unaligned          /* used in gtss_read_starCFP_, gtss_abandon_CFP_ */
  3    42      , 3 build_mode bit (1) unaligned	        /* used in gtss_build_, gtss_dsd_process_ */
  3    43      ;
  3    44 
  3    45 dcl 1 gtss_ext_$com_reg aligned static ext,
  3    46        3 tsdmx,
  3    47          4 dst fixed bin (18) unsigned unaligned,
  3    48          4 dit fixed bin (18) unsigned unaligned,
  3    49        3 tsdpt fixed bin (36) unsigned unaligned,
  3    50        3 tsddt fixed bin (36) unsigned unaligned,
  3    51        3 tsdid bit (72) unaligned,
  3    52        3 tsdsd bit (36) unaligned,
  3    53        3 tsdst fixed bin (36) unsigned unaligned,
  3    54        3 tsdjb fixed bin (35) unaligned,
  3    55        3 tsdgt,
  3    56          4 ust_loc fixed bin (18) unsigned unaligned,
  3    57          4 gating_ctl fixed bin (18) unsigned unaligned,
  3    58        3 tcdfr bit (36) unaligned;
  3    59 
  3    60 dcl 1 gtss_ext_$flags aligned static ext
  3    61      , 3 dispose_of_drl_on_pi	bit (01) unal	/* 1 => drl that should be aborted after quit-pi sequence */
  3    62      , 3 drl_in_progress	bit (01) unal	/* 1 => drl handler executing; 0 => gcos code executing */
  3    63      , 3 popup_from_pi	bit (01) unal	/* 1 => derail processor will simulate Gcos break instead of returning */
  3    64      , 3 unfinished_drl	bit (01) unal	/* 1 => subsystem is handling breaks and quit was raised during a drl */
  3    65      , 3 ss_time_limit_set	bit (01) unal	/* 1 => exec time limit set for subsystem */
  3    66      , 3 timer_ranout	bit (01) unal	/* 1 => user is executing timer runout code */
  3    67      , 3 gtss_com_err_sw      bit (01) unal       /* 1 => stop com_err_ string from going to terminal */   
  3    68      , 3 available		bit (65) unal
  3    69      ;
  3    70 
  3    71 
  3    72 dcl 1 gtss_ext_$statistics aligned static ext,		/* Derail usage statistics */
  3    73       3 total_time (-10:71)fixed bin (71),
  3    74       3 count (-10:71)fixed bin (17);
  3    75 
  3    76 /* 	Declaration of Available File Table
  3    77*   */
  3    78 dcl 1 gtss_ext_$aft aligned ext,			/* aft structure */
  3    79 
  3    80       3 start_list (0:102) fixed bin (24),		/* >0 => 1st aft_entry row to start of next entry chain. */
  3    81 
  3    82       3 aft_entry (20),
  3    83         4 altname char (8),				/* altname name for attaching this file */
  3    84         4 next_entry fixed bin (24),			/* Next aft_entry in hash chain. */
  3    85         4 previous_add fixed bin (24),			/* Previously added entry. */
  3    86         4 next_add fixed bin (24),			/* Entry added after this one. */
  3    87         4 used bit (1) unal,				/* "1"b => aft_entry contains AFT value. */
  3    88         4 forced bit(1) unal,				/* "1"b => gtss_verify_access_ forced access on this file. */
  3    89 
  3    90       3 free_space fixed bin (24),			/* Index of start of free space list for aft entries. */
  3    91       3 first_added fixed bin (24),			/* >0  => start of chain in add order. */
  3    92       3 last_added fixed bin (24)			/* >0 => end of chain in added order. */;
  3    93 
  3    94 dcl  gtss_ext_$ppt                   ptr ext /*  switch name for tapein drl */;
  3    95 /**	Data structure to provide access to installed
  3    96*   subsystems fast library load.
  3    97*   **/
  3    98 dcl 1 gtss_ext_$fast_lib aligned ext
  3    99      , 3 fast_lib_fcb ptr				/* Pointer to msf fcb.	*/
  3   100      , 3 fast_lib_ncp fixed bin (24)			/* Number of components. */
  3   101      , 3 comp_ptr (0:9)ptr				/* Pointer to component. */
  3   102      , 3 comp_wds (0:9)fixed bin (24)			/* Component length (words). */
  3   103      ;
  3   104 
  3   105 /* Pointers to segments to regulate multipler
  3   106*   callers to files. Same segments are used to regulate
  3   107*   all simulator callers.
  3   108**/
  3   109 dcl 1 gtss_ext_$mcfc	aligned ext,
  3   110       3 multics_lock_id	bit(36),
  3   111       3 wait_time		fixed bin,
  3   112       3 files_ptr		ptr,
  3   113       3 names_ptr		ptr,
  3   114       3 callers_ptr		(0:3)ptr
  3   115 ;
  3   116 
  3   117 /*   END INCLUDE FILE gtss_ext_.incl.pl1 */
      376 
      377 
  4     1 /* BEGIN INCLUDE FILE gtss_install_values_.incl.pl1 */
  4     2 /*
  4     3*  NOTE: Changes here must be relected in gtss_install_values_.cds as well.
  4     4*
  4     5*  Created: (Wardd Multics)  01/24/79 1706.9 mst Wed 
  4     6*  Modified:  Ron Barstad  83-07-21  Moved inits to cds seg
  4     7**/
  4     8 
  4     9 dcl gtss_install_values_$fast_msf     char (32) var ext; /* entry name */
  4    10 dcl gtss_install_values_$Lstar_msf    char (32) var ext; /* searched second */
  4    11 dcl gtss_install_values_$starL_msf    char (32) var ext; /* searched first */
  4    12 dcl gtss_install_values_$memory_limit fixed bin (24) ext;
  4    13 dcl gtss_install_values_$time_limit   fixed bin (24) ext;
  4    14 
  4    15 /*   END INCLUDE FILE gtss_install_values_.incl.pl1 */
      378 
      379 
  5     1 /* BEGIN INCLUDE FILE  static_handlers.incl.pl1  */
  5     2 
  5     3 /* format: style4,indattr,ifthenstmt,ifthen,idind33,^indcomtxt */
  5     4 
  5     5 /* HISTORY:
  5     6*Written by S. H. Webber, 06/20/75.
  5     7*Modified:
  5     8*12/15/83 by Benson Margulies:  added undefined_pointer_sct_index and
  5     9*	  pgt_sct_index.
  5    10*06/11/84 by Lee A. Newcomb:  added dm_shutdown_warning_sct_index and
  5    11*            dm_user_shutdown_sct_index for handling of Data Management
  5    12*            shutdown.
  5    13*08/22/84 by R. Michael Tague:  Removed dm_shutdown_warning_sct_index and
  5    14*            dm_user_shutdown_sct_index.  Added
  5    15*            system_shutdown_scheduled_sct_index and
  5    16*            dm_shutdown_scheduled_sct_index.
  5    17**/
  5    18 
  5    19 
  5    20 /****^  HISTORY COMMENTS:
  5    21*  1) change(85-11-13,Herbst), approve(87-07-21,MCR7697),
  5    22*     audit(87-07-21,GDixon), install(87-08-04,MR12.1-1056):
  5    23*     Add system_message_sct_index.
  5    24*                                                   END HISTORY COMMENTS */
  5    25 
  5    26 
  5    27 dcl  (
  5    28      shutdown_sct_index	        init (0),
  5    29      store_sct_index	        init (1),
  5    30      mme1_sct_index		        init (2),
  5    31      fault_tag_1_sct_index	        init (3),
  5    32      timer_runout_sct_index	        init (4),
  5    33      command_sct_index	        init (5),
  5    34      derail_sct_index	        init (6),
  5    35      lockup_sct_index	        init (7),
  5    36      connect_sct_index	        init (8),
  5    37      parity_sct_index	        init (9),
  5    38      illegal_procedure_sct_index      init (10),
  5    39      op_not_complete_sct_index        init (11),
  5    40      startup_sct_index	        init (12),
  5    41      ovrflo_sct_index	        init (13),
  5    42      zerodivide_sct_index	        init (14),
  5    43      execute_sct_index	        init (15),
  5    44      seg_fault_error_sct_index        init (16),
  5    45      page_fault_error_sct_index       init (17),
  5    46      directed_fault_2_sct_index       init (18),
  5    47      directed_fault_3_sct_index       init (19),
  5    48      accessviolation_sct_index        init (20),
  5    49      mme2_sct_index		        init (21),
  5    50      mme3_sct_index		        init (22),
  5    51      mme4_sct_index		        init (23),
  5    52      linkage_error_sct_index	        init (24),
  5    53      fault_tag_3_sct_index	        init (25),
  5    54      undefined_fault_sct_index        init (26),
  5    55      trouble_sct_index	        init (31),
  5    56      illegal_opcode_sct_index	        init (32),
  5    57      simfault_000000_sct_index        init (33),
  5    58      illegal_modifier_sct_index       init (34),
  5    59      illegal_ring_order_sct_index     init (35),
  5    60      not_in_execute_bracket_sct_index init (36),
  5    61      no_execute_permission_sct_index  init (37),
  5    62      not_in_read_bracket_sct_index    init (38),
  5    63      no_read_permission_sct_index     init (39),
  5    64      not_in_write_bracket_sct_index   init (40),
  5    65      no_write_permission_sct_index    init (41),
  5    66      not_a_gate_sct_index	        init (42),
  5    67      not_in_call_bracket_sct_index    init (43),
  5    68      outward_call_sct_index	        init (44),
  5    69      bad_outward_call_sct_index       init (45),
  5    70      inward_return_sct_index	        init (46),
  5    71      cross_ring_transfer_sct_index    init (47),
  5    72      ring_alarm_fault_sct_index       init (48),
  5    73      am_fault_sct_index	        init (49),
  5    74      out_of_bounds_sct_index	        init (50),
  5    75      fixedoverflow_sct_index	        init (51),
  5    76      overflow_sct_index	        init (52),
  5    77      underflow_sct_index	        init (53),
  5    78      stringsize_sct_index	        init (54),
  5    79      other_illegal_proc_sct_index     init (55),
  5    80      storage_sct_index	        init (56),
  5    81      packed_pointer_fault_sct_index   init (57),
  5    82      lot_fault_sct_index	        init (58),
  5    83      isot_fault_sct_index	        init (59),
  5    84      system_packed_pointer_sct_index  init (60),
  5    85      quit_sct_index		        init (61),
  5    86      alrm_sct_index		        init (62),
  5    87      cput_sct_index		        init (63),
  5    88      record_quota_overflow_sct_index  init (64),
  5    89      size_sct_index		        init (65),
  5    90      neti_sct_index		        init (66),
  5    91      other_command_sct_index	        init (67),
  5    92      susp_sct_index		        init (68),
  5    93      term_sct_index		        init (69),
  5    94      wkp_sct_index		        init (70),
  5    95      undefined_pointer_sct_index      init (71),
  5    96      pgt_sct_index		        init (72),
  5    97      system_shutdown_scheduled_sct_index
  5    98 	                            init (73),
  5    99      dm_shutdown_scheduled_sct_index  init (74),
  5   100      system_message_sct_index	        init (75)
  5   101      )			        fixed bin (17) int static options (constant);
  5   102 
  5   103 /* END INCLUDE FILE  static_handlers.incl.pl1 */
      380 
      381 
  6     1 /* BEGIN INCLUDE FILE gtss_ust_ext_.incl.pl1 */
  6     2 /* UST: User Status Table 
  6     3*   definitions based on 
  6     4*   System Tables, Order number DD14-01E, January 1981
  6     5*   Section 15, Time Sharing System
  6     6*
  6     7*   Authors: Robert J. Grimes	Created
  6     8*   -	  Albert N. Kepner	  1978
  6     9*   -	  Robert M. May
  6    10*   -	  David B. Ward
  6    11*   Change:  Dave Ward	02/23/79 Level 4 numbering.
  6    12*   Change:  Ron Barstad  83-07-12 Repaired damaged formating and word offset comments
  6    13*                                  Brought up to 4JS3 functionality
  6    14**/
  6    15 /* octal word offsets of entries */
  6    16 dcl 1 gtss_ust_ext_$ust aligned ext,
  6    17       3 gtss_ust,
  6    18 /* 0-1  */	4 lid		bit (72),
  6    19 /* 2    */	4 lstp		bit (36),
  6    20 /* 3    */	4 ltin		bit (36),
  6    21 /* 4    */	4 lstio,
  6    22 			5 no_of_chars_by_8  fixed bin (18) uns unal,
  6    23 			5 no_of_disk_io     fixed bin (18) uns unal,
  6    24 /* 5    */	4 lsnub		bit (36),
  6    25 /* 6-7  */	4 lchg		bit (72),
  6    26 /* 10   */	4 lbuf,
  6    27 			5 address		bit (18)unaligned,
  6    28 			5 tally		bit (1)unaligned,
  6    29 			5 terminal_type	bit (5)unaligned,
  6    30 			5 station_id	bit (12)unaligned,
  6    31 /* 11-12 */	4 liost (0:1)	bit (36),
  6    32 /* 13   */	4 lcc		bit (36),
  6    33 /* 14   */	4 lback,
  6    34 			5 fill1		bit (18) unaligned,
  6    35 			5 gwake		fixed bin (17) unaligned,
  6    36 /* 15   */	4 lflag,
  6    37 			5 mp_list		bit (18) unaligned,
  6    38 			5 flags unaligned,
  6    39 				6 b18		bit (1) unaligned,
  6    40 				6 b19		bit (1) unaligned,
  6    41 				6 b20		bit (1) unaligned,
  6    42 				6 b21		bit (1) unaligned,
  6    43 				6 b22		bit (1) unaligned,
  6    44 				6 b23		bit (1) unaligned,
  6    45 				6 b24		bit (1) unaligned,
  6    46 				6 b25		bit (1) unaligned,
  6    47 				6 b26		bit (1) unaligned,
  6    48 				6 b27		bit (1) unaligned,
  6    49 				6 b28		bit (1) unaligned,
  6    50 				6 b29		bit (1) unaligned,
  6    51 				6 b30		bit (1) unaligned,
  6    52 				6 b31		bit (1) unaligned,
  6    53 				6 b32		bit (1) unaligned,
  6    54 				6 b33		bit (1) unaligned,
  6    55 				6 b34		bit (1) unaligned,
  6    56 				6 b35		bit (1) unaligned,
  6    57 /* 16   */	4 lkdss		bit (36),
  6    58 /* 17   */	4 lfile,
  6    59 			5 program_stack	fixed bin (17) unal,
  6    60 			5 file_list_ptr	bit (18) unal,
  6    61 /* 20   */	4 lttys		bit (36),
  6    62 /* 21   */	4 lswth,
  6    63 			5 b0		bit (1) unaligned,
  6    64 			5 b1		bit (1) unaligned,
  6    65 			5 b2		bit (1) unaligned,
  6    66 			5 b3		bit (1) unaligned,
  6    67 			5 b4		bit (1) unaligned,
  6    68 			5 b5		bit (1) unaligned,
  6    69 			5 b6		bit (1) unaligned,
  6    70 			5 b7		bit (1) unaligned,
  6    71 			5 b8		bit (1) unaligned,
  6    72 			5 b9		bit (1) unaligned,
  6    73 			5 b10		bit (1) unaligned,
  6    74 			5 b11		bit (1) unaligned,
  6    75 			5 b12		bit (1) unaligned,
  6    76 			5 b13		bit (1) unaligned,
  6    77 			5 b14		bit (1) unaligned,
  6    78 			5 b15		bit (1) unaligned,
  6    79 			5 b16		bit (1) unaligned,
  6    80 			5 b17		bit (1) unaligned,
  6    81 			5 b18		bit (1) unaligned,
  6    82 			5 b19		bit (1) unaligned,
  6    83 			5 b20		bit (1) unaligned,
  6    84 			5 b21		bit (1) unaligned,
  6    85 			5 b22		bit (1) unaligned,
  6    86 			5 b23		bit (1) unaligned,
  6    87 			5 b24		bit (1) unaligned,
  6    88 			5 b25		bit (1) unaligned,
  6    89 			5 b26		bit (1) unaligned,
  6    90 			5 b27		bit (1) unaligned,
  6    91 			5 b28		bit (1) unaligned,
  6    92 			5 b29		bit (1) unaligned,
  6    93 			5 b30		bit (1) unaligned,
  6    94 			5 b31		bit (1) unaligned,
  6    95 			5 b32		bit (1) unaligned,
  6    96 			5 b33		bit (1) unaligned,
  6    97 			5 b34		bit (1) unaligned,
  6    98 			5 b35		bit (1) unaligned,
  6    99 /* 22   */	4 lsize,
  6   100 			5 bar		fixed bin (17) unaligned,
  6   101 			5 limit		bit (18) unaligned,
  6   102 /* 23... */	4 lswap,
  6   103 			5 fill		bit (18) unal,
  6   104 			5 size		bit (18) unal,
  6   105 /* ...24 */	4 transfer_cell	bit (36) unal,
  6   106 /* 25   */	4 lerrm		bit (36),
  6   107 /* 26-37 */	4 lcfil (0:9)	bit (36),
  6   108 /* 40   */	4 lsybc,
  6   109 			5 b0_17		fixed bin (17) unaligned,
  6   110 			5 b18_35		fixed bin (17) unaligned,
  6   111 /* 41-42 */	4 lstem (0:1)	bit (36),
  6   112 /* 43    */	4 lcals,
  6   113 			5 b0_17		fixed bin (17) unaligned,
  6   114 			5 b18_35		bit (18) unaligned,
  6   115 /* 44-51 */	4 subsystems (3),
  6   116 			5 content_lswap,
  6   117 				6 fill		bit (18) unal,
  6   118 				6 size		bit (18) unal,
  6   119 			5 tally_address	fixed bin (17) unaligned,
  6   120 			5 ss_flags	bit (18) unaligned,
  6   121 /* 52   */	4 ltalc,
  6   122 			5 tod		fixed bin (17) unaligned,
  6   123 			5 startup		fixed bin (17) unaligned,
  6   124 /* 53   */	4 lspts		fixed bin (35),
  6   125 /* 54   */	4 lflg2,
  6   126 			5 b0		bit (1) unaligned,
  6   127 			5 b1		bit (1) unaligned,
  6   128 			5 b2		bit (1) unaligned,
  6   129 			5 b3		bit (1) unaligned,
  6   130 			5 b4		bit (1) unaligned,
  6   131 			5 b5		bit (1) unaligned,
  6   132 			5 b6		bit (1) unaligned,
  6   133 			5 b7		bit (1) unaligned,
  6   134 			5 b8		bit (1) unaligned,
  6   135 			5 b9		bit (1) unaligned,
  6   136 			5 b10		bit (1) unaligned,
  6   137 			5 b11		bit (1) unaligned,
  6   138 			5 b12		bit (1) unaligned,
  6   139 			5 b13		bit (1) unaligned,
  6   140 			5 b14		bit (1) unaligned,
  6   141 			5 b15		bit (1) unaligned,
  6   142 			5 b16		bit (1) unaligned,
  6   143 			5 b17		bit (1) unaligned,
  6   144 			5 b18		bit (1) unaligned,
  6   145 			5 b19		bit (1) unaligned,
  6   146 			5 b20		bit (1) unaligned,
  6   147 			5 b21		bit (1) unaligned,
  6   148 			5 b22		bit (1) unaligned,
  6   149 			5 b23		bit (1) unaligned,
  6   150 			5 b24		bit (1) unaligned,
  6   151 			5 b25		bit (1) unaligned,
  6   152 			5 b26		bit (1) unaligned,
  6   153 			5 b27		bit (1) unaligned,
  6   154 			5 b28		bit (1) unaligned,
  6   155 			5 b29		bit (1) unaligned,
  6   156 			5 b30		bit (1) unaligned,
  6   157 			5 b31		bit (1) unaligned,
  6   158 			5 b32		bit (1) unaligned,
  6   159 			5 b33		bit (1) unaligned,
  6   160 			5 b34		bit (1) unaligned,
  6   161 			5 b35		bit (1) unaligned,
  6   162 /* 55-60 */	4 lsftm (0:3)	bit (36),
  6   163 /* 61    */	4 lsprt		fixed bin (35),
  6   164 /* 62    */	4 ltrm		bit (36),
  6   165 /* 63    */	4 linno		fixed bin (35),
  6   166 /* 64    */	4 lincr		fixed bin (35),
  6   167 /* 65    */	4 ltdes		bit (36),
  6   168 /* 66    */	4 lbptr		bit (36),
  6   169 /* 67    */	4 lpptr,
  6   170 			5 last_file_pat_ptr	bin (18) uns unal,
  6   171 			5 lpptr_reserved	bin (18) uns unal,
  6   172 /* 70    */	4 lsclp		bit (36),
  6   173 /* 71    */	4 limit		fixed bin (35),
  6   174 /* 72    */	4 lacpt,
  6   175 			5 jout_pat_offset	bit (18) unal,
  6   176 			5 permissions unal,
  6   177 				6 lodx		bit (1) unal,
  6   178 				6 cardin		bit (1) unal,
  6   179 				6 talk		bit (1) unal,
  6   180 				6 lods		bit (1) unal,
  6   181 			5 cardin_urgency	bit (14) unal,
  6   182 /* 73    */	4 ldrl,
  6   183 			5 ilc		bit (18) unaligned,
  6   184 			5 code		fixed bin (17) unaligned,
  6   185 /* 74    */	4 ljsnb		bit (36),
  6   186 /* 75    */	4 ltm0		bit (36),
  6   187 /* 76    */	4 ltm1		bit (36),
  6   188 /* 77    */	4 ltm2		bit (36),
  6   189 /* 100   */	4 ltm3		bit (36),
  6   190 /* 101   */	4 ltm4		bit (36),
  6   191 /* 102   */	4 ltm5		bit (36),
  6   192 /* 103   */	4 ltmwt		bit (36),
  6   193 /* 104   */	4 ltmrs		bit (36),
  6   194 /* 105   */	4 ltc0		bit (36),
  6   195 /* 106   */	4 ltc1		bit (36),
  6   196 /* 107   */	4 ltc2		bit (36),
  6   197 /* 110   */	4 lct3		bit (36),
  6   198 /* 111   */	4 ltc4		bit (36),
  6   199 /* 112   */	4 ltc5		bit (36),
  6   200 /* 113   */	4 ltcw		bit (36),
  6   201 /* 114   */	4 lkst		bit (36),
  6   202 /* 115   */	4 lkst2		bit (36),
  6   203 /* 116   */	4 lkcc		bit (36),
  6   204 /* 117   */	4 lkms		bit (36),
  6   205 /* 120-121 */	4 lksdc (0:1)	bit (36),
  6   206 /* 122   */	4 lkntp		bit (36),
  6   207 /* 123   */	4 lkrdc		bit (36),
  6   208 /* 124   */	4 lpqf		bit (36),
  6   209 /* 125   */	4 lpqb		bit (36),
  6   210 /* 126   */	4 lustl		bit (36),
  6   211 /* 127   */	4 ltemp		bit (36),
  6   212 /* 130   */	4 lrtll,
  6   213 			5 word_length	fixed bin unaligned,
  6   214 			5 char_length	fixed bin unaligned,
  6   215 /* 131   */	4 ltim		bit (36),
  6   216 /* 132   */	4 lcfio,
  6   217 			5 sect_out	fixed bin(18)unsigned unal,
  6   218 			5 sect_in		fixed bin(18)unsigned unal,
  6   219 /* 133   */	4 lcfst,
  6   220 			5 initial_sect_out	fixed bin(18)unsigned unal,
  6   221 			5 start_term	fixed bin(18)unsigned unal,
  6   222 /* 134   */	4 lcmpt		bit (36),
  6   223 /* 135   */	4 lcjid		bit (36),
  6   224 /* 136-137 */	4 lrcal (0:1)	bit (36),
  6   225 /* 140   */	4 lrdta		bit (36),
  6   226 /* 141   */	4 lrrsk		bit (36),
  6   227 /* 142   */	4 lrskd		bit (36),
  6   228 /* 143   */	4 lrcc		bit (36),
  6   229 /* 144-145 */	4 lrsts (0:1)	bit (36),
  6   230 /* 146   */	4 lrtm		bit (36),
  6   231 /* 147   */	4 lswt2,
  6   232 			5 b0		bit (1) unaligned,
  6   233 			5 b1		bit (1) unaligned,
  6   234 			5 b2		bit (1) unaligned,
  6   235 			5 b3		bit (1) unaligned,
  6   236 			5 b4		bit (1) unaligned,
  6   237 			5 b5		bit (1) unaligned,
  6   238 			5 b6		bit (1) unaligned,
  6   239 			5 b7		bit (1) unaligned,
  6   240 			5 b8		bit (1) unaligned,
  6   241 			5 b9		bit (1) unaligned,
  6   242 			5 b10		bit (1) unaligned,
  6   243 			5 b11		bit (1) unaligned,
  6   244 			5 b12		bit (1) unaligned,
  6   245 			5 b13		bit (1) unaligned,
  6   246 			5 b14		bit (1) unaligned,
  6   247 			5 b15		bit (1) unaligned,
  6   248 			5 b16		bit (1) unaligned,
  6   249 			5 b17		bit (1) unaligned,
  6   250 			5 b18		bit (1) unaligned,
  6   251 			5 b19		bit (1) unaligned,
  6   252 			5 b20		bit (1) unaligned,
  6   253 			5 b21		bit (1) unaligned,
  6   254 			5 b22		bit (1) unaligned,
  6   255 			5 b23		bit (1) unaligned,
  6   256 			5 b24		bit (1) unaligned,
  6   257 			5 b25		bit (1) unaligned,
  6   258 			5 b26		bit (1) unaligned,
  6   259 			5 b27		bit (1) unaligned,
  6   260 			5 b28		bit (1) unaligned,
  6   261 			5 b29		bit (1) unaligned,
  6   262 			5 b30		bit (1) unaligned,
  6   263 			5 b31		bit (1) unaligned,
  6   264 			5 b32		bit (1) unaligned,
  6   265 			5 b33		bit (1) unaligned,
  6   266 			5 b34		bit (1) unaligned,
  6   267 			5 b35		bit (1) unaligned,
  6   268 /* 150   */	4 llsnb		bit (36),
  6   269 /* 151   */	4 lesq		bit (36),
  6   270 /* 152-153 */	4 lumc (0:1)	bit (36),
  6   271 /* 154-155 */	4 lfnam (0:1)	bit (36),
  6   272 /* 156   */	4 lopts		bit (36),
  6   273 /* 157   */	4 licec,
  6   274 			5 b0_17		bit (18) unaligned,
  6   275 			5 b18_35		fixed bin (17) unaligned,
  6   276 /* 160   */	4 lflg3,
  6   277 			5 b0		bit (1) unaligned,
  6   278 			5 b1		bit (1) unaligned,
  6   279 			5 b2		bit (1) unaligned,
  6   280 			5 b3		bit (1) unaligned,
  6   281 			5 b4		bit (1) unaligned,
  6   282 			5 b5		bit (1) unaligned,
  6   283 			5 b6		bit (1) unaligned,
  6   284 			5 b7		bit (1) unaligned,
  6   285 			5 b8		bit (1) unaligned,
  6   286 			5 b9		bit (1) unaligned,
  6   287 			5 b10		bit (1) unaligned,
  6   288 			5 b11		bit (1) unaligned,
  6   289 			5 b12		bit (1) unaligned,
  6   290 			5 b13		bit (1) unaligned,
  6   291 			5 b14		bit (1) unaligned,
  6   292 			5 b15		bit (1) unaligned,
  6   293 			5 b16		bit (1) unaligned,
  6   294 			5 b17		bit (1) unaligned,
  6   295 			5 b18		bit (1) unaligned,
  6   296 			5 b19		bit (1) unaligned,
  6   297 			5 b20		bit (1) unaligned,
  6   298 			5 b21		bit (1) unaligned,
  6   299 			5 b22		bit (1) unaligned,
  6   300 			5 b23		bit (1) unaligned,
  6   301 			5 b24		bit (1) unaligned,
  6   302 			5 b25		bit (1) unaligned,
  6   303 			5 b26		bit (1) unaligned,
  6   304 			5 b27		bit (1) unaligned,
  6   305 			5 b28		bit (1) unaligned,
  6   306 			5 b29		bit (1) unaligned,
  6   307 			5 b30		bit (1) unaligned,
  6   308 			5 b31		bit (1) unaligned,
  6   309 			5 b32		bit (1) unaligned,
  6   310 			5 b33		bit (1) unaligned,
  6   311 			5 b34		bit (1) unaligned,
  6   312 			5 b35		bit (1) unaligned,
  6   313 /* 161-163 */	4 lpage (0:2)	bit (36),
  6   314 /* 164   */	4 lsit1		bit (36),
  6   315 /* 165   */	4 lsit2		bit (36),
  6   316 /* 166   */	4 lsit3		bit (36),
  6   317 /* 167   */	4 lsit4		bit (36),
  6   318 /* The following entries are maintained by gtss and are not found in TSS UST */
  6   319 /* 170   */	4 lxxx, /* program stack index, offset from gtss_ust */
  6   320 			5 b0_17		fixed bin (17) unaligned,
  6   321 			5 b18_35		bit (18) unaligned, /* not used */
  6   322 /* 171-175 */	4 lprgs (5),
  6   323 			5 b0_17		fixed bin (17) unaligned,
  6   324 			5 b18_35		fixed bin (17) unaligned,
  6   325 /* 176   */	4 fill	bit (36),
  6   326 /* 177   */	4 remote_io_buffer aligned,
  6   327 			5 buffer_control_word,
  6   328 				6 current_line_pointer  bit (18)unal,
  6   329 				6 buffer_threshold_address  bit (18)unal,
  6   330 			5 number_words_transmitted	fixed bin (17)unal,
  6   331 			5 FILL1			fixed bin (17)unal,
  6   332 			5 count_of_characters_transmitted fixed bin (17)unal,
  6   333 			5 FILL2			fixed bin (17)unal,
  6   334 			5 characters_transmitted (244) char (1) unal,
  6   335 /* 277   */	4 word_after_ust		bit (36) aligned;
  6   336 
  6   337 /*   END INCLUDE FILE gtss_ust_ext_.incl.pl1 */
      382 
      383 
  7     1 /* BEGIN INCLUDE FILE gtss_spa.incl.pl1 */
  7     2 /*
  7     3*  Created: (Grimes SMP)  04/15/78
  7     4*   Changed	6/22/78	A. Kepner		add labrt
  7     5*   Changed	6/28/78	D. Ward		lwrap defined (lrap)
  7     6*   Changed	10/16/79  Al Dupuis		lsztm was off by two words.
  7     7*   Changed          84-02-27  Ron Barstad         added hex ir bit
  7     8*   */
  7     9 dcl 1 gtss_spa aligned based (gseg),
  7    10       3 fault_vector (0:9) bit(36),
  7    11       3 lhstr char (8) unal,
  7    12       3 lbrk,
  7    13         4 ic	bit(18) unal,
  7    14         4 ir	bit(18) unal,
  7    15         4 tra_addr	bit(18) unal,
  7    16         4 tra_op	bit(18) unal,
  7    17       3 fill1 (0:1) bit(36),
  7    18       3 lsztm,
  7    19         4 ic_ir,
  7    20 	5 IC	bit(18)unal,
  7    21 	5 IR	bit(16)unal,
  7    22 	5 b34	bit(1)unal,
  7    23 	5 b35	bit(1)unal,
  7    24         4 tra	bit(36)unal,
  7    25       3 losti unal,
  7    26         4 ilc	bit(18) unal,
  7    27         4 ir unal,				/* INDICATOR  REGISTERS */
  7    28 	5 zero	bit(1) unal,			/* zero indicator */
  7    29 	5 neg	bit(1) unal,			/* negative indicator */
  7    30 	5 carry	bit(1) unal,			/* carryry indicator */
  7    31 	5 ovfl	bit(1) unal,			/* overflow indicator */
  7    32 	5 eovf	bit(1) unal,			/* eponent overflow */
  7    33 	5 eufl	bit(1) unal,			/* exponent underflow */
  7    34 	5 oflm	bit(1) unal,			/* overflow mask */
  7    35 	5 tro	bit(1) unal,			/* tally runout */
  7    36 	5 par	bit(1) unal,			/* parity error */
  7    37 	5 parm	bit(1) unal,			/* parity mask */
  7    38 	5 bm	bit(1) unal,			/* ^bar mode */
  7    39 	5 tru	bit(1) unal,			/* truncation mode */
  7    40 	5 mif	bit(1) unal,			/* multi-word instruction mode */
  7    41 	5 abs	bit(1) unal,			/* absolute mode */
  7    42           5 hex     bit(1) unal,                            /* hexadecimalexponent mode */
  7    43 	5 pad	bit(3) unal,
  7    44       3 lnam	bit(36),			/* Library name (bcd). */
  7    45       3 labrt,
  7    46         4 b0_17	bit(18) unal,
  7    47         4 b18_35 fixed bin (17) unal,
  7    48       3 fill2	bit(36),
  7    49       3 lfig	bit(36),
  7    50       3 lwrap,
  7    51 	5 b0_17	bit(1) unal,
  7    52 	5 b18	bit(1) unal,
  7    53 	5 b19	bit(1) unal,
  7    54 	5 b20	bit(1) unal,
  7    55 	5 b21	bit(1) unal,
  7    56 	5 b22	bit(1) unal,
  7    57 	5 b23	bit(1) unal,
  7    58 	5 b24	bit(1) unal,
  7    59 	5 b25	bit(1) unal,
  7    60 	5 b26	bit(1) unal,
  7    61 	5 b27	bit(1) unal,
  7    62 	5 b28	bit(1) unal,
  7    63 	5 b29	bit(1) unal,
  7    64 	5 b30	bit(1) unal,
  7    65 	5 b31	bit(1) unal,
  7    66 	5 b32	bit(1) unal,
  7    67 	5 b33	bit(1) unal,
  7    68 	5 b34	bit(1) unal,
  7    69 	5 b35	bit(1) unal,
  7    70       3 lsid	bit(36),
  7    71       3 lftst	bit(36),
  7    72       3 lpcal (0:3) bit(36),
  7    73       3 lpcnt fixed bin (35) unal,
  7    74       3 lhole,
  7    75         4 high fixed bin (17) unal,
  7    76         4 total fixed bin (17) unal,
  7    77       3 lostr unal,
  7    78         4 regs unal,				/* registers */
  7    79 	5 x (0:7) bit(18) unal,			/* index registers */
  7    80 	5 a	bit(36),			/* accumulator */
  7    81 	5 q	bit(36),			/* q-register */
  7    82 	5 e	bit(8) unal,			/* exponent */
  7    83 	5 pad1	bit(28) unal,
  7    84 	5 t	bit(27) unal,			/* timer register */
  7    85 	5 pad2	bit(6) unal,
  7    86 	5 ralr	bit(3) unal,			/* ring alarm register */
  7    87       3 leisa	(0:7) bit(36),
  7    88       3 leisp	(0:7) bit(36),
  7    89       3 fill3	(0:35) bit(36);
  7    90 
  7    91 /*   END INCLUDE FILE gtss_spa.incl.pl1 */
      384 
      385 
  8     1 /* BEGIN INCLUDE FILE gtss_entry_dcls.incl.pl1 */
  8     2 /*
  8     3*  Created: (Wardd Multics)  06/30/78 1624.8 mst Fri 
  8     4*  Modified: Ron Barstad  84-02-24  Fixed wrong and obsolete entries
  8     5**/
  8     6 
  8     7 /**  gtss external entry variables.		**/
  8     8 dcl  com_err_                                   entry() options(variable);
  8     9 dcl  gtss_CFP_abort_                            entry options(variable);
  8    10 dcl  gtss_CFP_break_                            entry options(variable);
  8    11 dcl  gtss_CFP_input_                            entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  8    12 dcl  gtss_CFP_output_                           entry (ptr, ptr, fixed bin(21), fixed bin(35));
  8    13 dcl  gtss_abandon_CFP_                          entry options(variable);
  8    14 dcl  gtss_abort_dump_                           entry (fixed bin(18));
  8    15 dcl  gtss_abort_subsystem_                      entry options (variable);
  8    16 dcl  gtss_abort_subsystem_$not_imp              entry (ptr, fixed bin(24));
  8    17 dcl  gtss_abs_login_banner_		        entry() returns(char(*));
  8    18 dcl  gtss_abs_logout_banner_		        entry() returns(char(*));
  8    19 dcl  gtss_abs_$abs_equiv                        entry options(variable);
  8    20 dcl  gtss_abs_$cpu_runout		        entry (ptr, char(4));
  8    21 dcl  gtss_abs_$create_absin                     entry() returns(char(*));
  8    22 dcl  gtss_abs_$dabt_check		        entry (ptr, char(4));
  8    23 dcl  gtss_abs_$get_id                           entry (char(5)) returns(char(19));
  8    24 dcl  gtss_abs_$get_drm                          entry() returns(char(*));
  8    25 dcl  gtss_adjust_size_                          entry (ptr);
  8    26 dcl  gtss_aft_$add                              entry (char(8), fixed bin(24), fixed bin(35));
  8    27 dcl  gtss_aft_$delete                           entry (char(8), fixed bin(24), fixed bin(35));
  8    28 dcl  gtss_aft_$find                             entry (char(8), fixed bin(24), fixed bin(35));
  8    29 dcl  gtss_aft_$initialize                       entry (fixed bin(35));
  8    30 dcl  gtss_ascii_bcd_                            entry (ptr, fixed bin, ptr);
  8    31 dcl  gtss_attributes_mgr_$get                   entry (ptr, fixed bin(35));
  8    32 dcl  gtss_attributes_mgr_$set                   entry (ptr, fixed bin(35));
  8    33 dcl  gtss_bcd_ascii_                            entry (ptr, fixed bin(24), ptr);
  8    34 dcl  gtss_bcd_ascii_$lc                         entry (ptr, fixed bin(24), ptr);
  8    35 dcl  gtss_break_vector_                         entry ();
  8    36 dcl  gtss_break_vector_$drl_in_progress         entry() returns(bit(1));
  8    37 dcl  gtss_break_vector_$status                  entry() returns(bit(1));
  8    38 dcl  gtss_build_                                entry options(variable);
  8    39 dcl  gtss_com_err_                              entry options(variable);
  8    40 dcl  gtss_derail_processor_                     entry (ptr, char(*), ptr, ptr, bit(1) aligned) /* called at fault time instead of signal_ */;
  8    41 dcl  gtss_derail_processor_$set                 entry options(variable);
  8    42 dcl  gtss_dq_$catp                              entry (char (5), ptr, fixed bin (18) unsigned);
  8    43 dcl  gtss_dq_$create                            entry (bit(1));
  8    44 dcl  gtss_dq_$dibp                              entry (char(5), ptr);
  8    45 dcl  gtss_dq_$entries_info		        entry (ptr, fixed bin (18) unsigned, fixed bin (18) unsigned);
  8    46 dcl  gtss_dq_$hdrp                              entry (ptr);
  8    47 dcl  gtss_dq_$mod_js		        entry (char(5), fixed bin (6) unsigned, bit (1));
  8    48 dcl  gtss_dq_$open_exc		        entry (bit(1));
  8    49 dcl  gtss_dq_$open_gen		        entry (bit(1));
  8    50 dcl  gtss_drl_abort_                            entry (ptr, fixed bin);
  8    51 dcl  gtss_drl_addmem_                           entry (ptr, fixed bin);
  8    52 dcl  gtss_drl_callss_                           entry (ptr, fixed bin);
  8    53 dcl  gtss_drl_corfil_                           entry (ptr, fixed bin);
  8    54 dcl  gtss_drl_defil_                            entry (ptr, fixed bin);
  8    55 dcl  gtss_drl_defil_$subr                       entry (ptr, ptr, ptr);
  8    56 dcl  gtss_drl_dio_                              entry (ptr, fixed bin);
  8    57 dcl  gtss_drl_drlimt_                           entry (ptr, fixed bin);
  8    58 dcl  gtss_drl_drlsav_                           entry (ptr, fixed bin);
  8    59 dcl  gtss_drl_filact_                           entry (ptr, fixed bin);
  8    60 dcl  gtss_drl_filsp_                            entry (ptr, fixed bin);
  8    61 dcl  gtss_drl_grow_                             entry (ptr, fixed bin);
  8    62 dcl  gtss_drl_gwake_                            entry (ptr, fixed bin);
  8    63 dcl  gtss_drl_jsts_                             entry (ptr, fixed bin);
  8    64 dcl  gtss_drl_kin_                              entry (ptr, fixed bin);
  8    65 dcl  gtss_drl_kotnow_                           entry (ptr, fixed bin);
  8    66 dcl  gtss_drl_kotnow_$gtss_drl_kout_            entry (ptr, fixed bin);
  8    67 dcl  gtss_drl_koutn_                            entry (ptr, fixed bin);
  8    68 dcl  gtss_drl_morlnk_                           entry (ptr, fixed bin);
  8    69 dcl  gtss_drl_msub_                             entry (ptr, fixed bin);
  8    70 dcl  gtss_drl_objtim_                           entry (ptr, fixed bin);
  8    71 dcl  gtss_drl_part_                             entry (ptr, fixed bin);
  8    72 dcl  gtss_drl_pasaft_                           entry (ptr, fixed bin);
  8    73 dcl  gtss_drl_pasdes_                           entry (ptr, fixed bin);
  8    74 dcl  gtss_drl_pasust_                           entry (ptr, fixed bin);
  8    75 dcl  gtss_drl_pdio_                             entry (ptr, fixed bin);
  8    76 dcl  gtss_drl_prgdes_                           entry (ptr, fixed bin);
  8    77 dcl  gtss_drl_pseudo_                           entry (ptr, fixed bin);
  8    78 dcl  gtss_drl_relmem_                           entry (ptr, fixed bin);
  8    79 dcl  gtss_drl_restor_                           entry (ptr, fixed bin);
  8    80 dcl  gtss_drl_retfil_                           entry (ptr, fixed bin);
  8    81 dcl  gtss_drl_return_                           entry (ptr, fixed bin);
  8    82 dcl  gtss_drl_rew_                              entry (ptr, fixed bin);
  8    83 dcl  gtss_drl_rstswh_                           entry (ptr, fixed bin);
  8    84 dcl  gtss_drl_setlno_                           entry (ptr, fixed bin);
  8    85 dcl  gtss_drl_setswh_                           entry (ptr, fixed bin);
  8    86 dcl  gtss_drl_snumb_                            entry (ptr, fixed bin);
  8    87 dcl  gtss_drl_spawn_                            entry (ptr, fixed bin);
  8    88 dcl  gtss_drl_spawn_$gtss_drl_pasflr_           entry (ptr, fixed bin);
  8    89 dcl  gtss_drl_stoppt_                           entry (ptr, fixed bin);
  8    90 dcl  gtss_drl_switch_                           entry (ptr, fixed bin);
  8    91 dcl  gtss_drl_sysret_                           entry (ptr, fixed bin);
  8    92 dcl  gtss_drl_t_cfio_                           entry (ptr, fixed bin);
  8    93 dcl  gtss_drl_t_cmov_                           entry (ptr, fixed bin);
  8    94 dcl  gtss_drl_t_err_                            entry (ptr, fixed bin);
  8    95 dcl  gtss_drl_t_goto_                           entry (ptr, fixed bin);
  8    96 dcl  gtss_drl_t_linl_                           entry (ptr, fixed bin);
  8    97 dcl  gtss_drl_t_rscc_                           entry (ptr, fixed bin);
  8    98 dcl  gtss_drl_tapein_                           entry (ptr, fixed bin);
  8    99 dcl  gtss_drl_task_                             entry (ptr, fixed bin);
  8   100 dcl  gtss_drl_termtp_                           entry (ptr, fixed bin);
  8   101 dcl  gtss_drl_time_                             entry (ptr, fixed bin);
  8   102 dcl  gtss_drun_                                 entry (bit(1));
  8   103 dcl  gtss_dsd_lookup_                           entry (char(8) var) returns(fixed bin(24));
  8   104 dcl  gtss_dsd_process_                          entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  8   105 dcl  gtss_edit_dsd_                             entry (ptr, fixed bin(21)) returns(fixed bin(24));
  8   106 dcl  gtss_mcfc_empty                            entry (char(*) var);
  8   107 dcl  gtss_expand_pathname_                      entry (ptr, char(*), char(*), fixed bin(35));
  8   108 dcl  gtss_expand_pathname_$verify_umc           entry (ptr, char(*), char(*), bit(18), fixed bin(35));
  8   109 dcl  gtss_fault_processor_                      entry options(variable);
  8   110 dcl  gtss_find_cond_frame_		        entry (char(32) var) returns(ptr);
  8   111 dcl  gtss_fault_processor_$timer_runout         entry (ptr, char(*));
  8   112 dcl  gtss_filact_error_status_                  entry (fixed bin(35))returns(bit(12));
  8   113 dcl  gtss_filact_funct02_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   114 dcl  gtss_filact_funct03_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   115 dcl  gtss_filact_funct04_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   116 dcl  gtss_filact_funct05_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   117 dcl  gtss_filact_funct08_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   118 dcl  gtss_filact_funct10_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   119 dcl  gtss_filact_funct11_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   120 dcl  gtss_filact_funct14_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   121 dcl  gtss_filact_funct18_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   122 dcl  gtss_filact_funct19_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   123 dcl  gtss_filact_funct21_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   124 dcl  gtss_filact_funct22_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   125 dcl  gtss_mcfc_init_                            entry (char(*) var);
  8   126 dcl  gtss_interp_prim_                          entry options(variable);
  8   127 dcl  gtss_interp_prim_$callss                   entry (char(4), ptr);
  8   128 dcl  gtss_interp_prim_$sysret                   entry options(variable);
  8   129 dcl  gtss_interp_prim_$t_goto                   entry (char(4));
  8   130 dcl  gtss_ios_change_size_                      entry (fixed bin(24), fixed bin(24), bit(1), fixed bin(24), fixed bin(35));
  8   131 dcl  gtss_ios_close_                            entry (fixed bin(24), ptr, fixed bin(35));
  8   132 dcl  gtss_ios_exchange_names_                   entry (fixed bin(24), fixed bin(24), fixed bin(24), fixed bin(35));
  8   133 dcl  gtss_ios_initialize_                       entry options(variable);
  8   134 dcl  gtss_ios_io_                               entry (fixed bin(24), ptr, ptr, fixed bin(24), fixed bin(24), fixed bin(35));
  8   135 dcl  gtss_ios_open_                             entry (fixed bin(24), char(168), char(32), bit(6), bit(1), ptr, ptr, fixed bin(35));
  8   136 dcl  gtss_ios_position_                         entry (fixed bin(24), fixed bin(24), fixed bin(24), bit(6), ptr);
  8   137 dcl  gtss_mcfc_$delete		        entry (fixed bin(24), char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  8   138 dcl  gtss_mcfc_$open                            entry (char(*), char(*), bit(6), bit(36) aligned, ptr, fixed bin(35));
  8   139 dcl  gtss_mcfc_$close                           entry (char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  8   140 dcl  gtss_read_starCFP_                         entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  8   141 dcl  gtss_read_starCFP_$last_os                 entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  8   142 dcl  gtss_run_subsystem_                        entry (fixed bin(24));
  8   143 dcl  gtss_run_subsystem_$finish                 entry options(variable);
  8   144 dcl  gtss_run_subsystem_$restor                 entry (fixed bin(24), ptr);
  8   145 dcl  gtss_run_subsystem_$restor_perm            entry (fixed bin(24), ptr, fixed bin(18));
  8   146 dcl  gtss_set_slave_                            entry (fixed bin (24), ptr);
  8   147 dcl  gtss_set_slave_$load_bar                   entry (fixed bin (17));
  8   148 dcl  gtss_update_safe_store_                    entry (ptr);
  8   149 dcl  gtss_verify_access_		        entry (char(*), char(*), fixed bin(24), bit(6), bit(12) aligned);
  8   150 dcl  gtss_verify_access_$check_forced_access    entry (char(*), char(*), fixed bin(24));
  8   151 dcl  gtss_write_starCFP_                        entry (ptr, ptr, fixed bin(21), fixed bin(35));
  8   152 /*   END INCLUDE FILE gtss_entry_dcls.incl.pl1 */
      386 
      387 
  9     1 /* BEGIN INCLUDE FILE gse_ext_.incl.pl1 */
  9     2 /*
  9     3*  Created:  Kepner  78-12-01
  9     4**/
  9     5 
  9     6 dcl gse_ext_$drm_rule	fixed bin(24) ext;
  9     7 
  9     8 /* $drm_rule:
  9     9*   0 => rule not set
  9    10*   1 => umc_dir_mode
  9    11*   2 => working_dir_mode
  9    12*   3 => smc_dir_mode
  9    13**/
  9    14 
  9    15 dcl gse_ext_$gcos_debug_pathname       char(168)  /* pathname for the gcos debugger control file */ ext;
  9    16 dcl gse_ext_$smc_pathname              char(168) 	/* root directory used with smc_dir mapping rule */ ext;
  9    17 dcl gse_ext_$umc_name                  char(12) 	/* User Master Catalog name specified by user with gse command */ ext;
  9    18 dcl 1 gse_ext_$modes	aligned ext,
  9    19        3 ast		bit(01) unal, 	/* 1 => use asterisk as prompt character */
  9    20        3 drl		bit(01) unal, 	/* 1 => cause trace info on each derail to be printed */
  9    21        3 gdb		bit(01) unal, 	/* 1 => use gcos debugger (gdb) */
  9    22        3 mcmd		bit(01) unal, 	/* 1 => allow use of e request at GTSS command level */
  9    23        3 mquit		bit(01) unal, 	/* 1 => quit causes entry to new Multics command level */
  9    24        3 ss		bit(01) unal, 	/* 1 => cause trace info on each subsystem to be printed */
  9    25        3 fill		bit(30) unal; 
  9    26 
  9    27 /*   END INCLUDE FILE gse_ext_.incl.pl1 */
      388 
      389 
 10     1 /* BEGIN INCLUDE FILE gtss_db_names.incl.pl1 */
 10     2 /*
 10     3*  Created:  (Wardd Multics)  03/29/79 1909.1 mst Thu 
 10     4**/
 10     5 
 10     6 /* To provide a new debugging switch:
 10     7*
 10     8*   1) Locate the comment "Insert next entry above this comment".
 10     9*
 10    10*   2) Place a new declaration for a db_ variable just
 10    11*      above this comment, in the same manner as the
 10    12*      current declaration just above the comment, using
 10    13*      the next integer gtss_ext_$db index.
 10    14*
 10    15*   3) Execute the gtss|db_names ted macro (this updates
 10    16*      the sorted name table).
 10    17*
 10    18*   4) Example use:
 10    19*
 10    20*      if db_drl_grow then do;
 10    21*      .
 10    22*      .
 10    23*      .
 10    24*      debug i/o statements using com_err_ or ioa_
 10    25*      .
 10    26*      .
 10    27*      .
 10    28*      end;
 10    29*
 10    30**/
 10    31 
 10    32 dcl (
 10    33  db_		bit(1) defined(gtss_ext_$db(01))
 10    34 ,db_CFP_input	bit(1) defined(gtss_ext_$db(02))
 10    35 ,db_drl_addmem	bit(1) defined(gtss_ext_$db(03))
 10    36 ,db_drl_defil	bit(1) defined(gtss_ext_$db(04))
 10    37 ,db_drl_filact	bit(1) defined(gtss_ext_$db(05))
 10    38 ,db_drl_filsp	bit(1) defined(gtss_ext_$db(06))
 10    39 ,db_drl_grow	bit(1) defined(gtss_ext_$db(07))
 10    40 ,db_drl_rew	bit(1) defined(gtss_ext_$db(08))
 10    41 ,db_filact_funct02	bit(1) defined(gtss_ext_$db(09))
 10    42 ,db_filact_funct03	bit(1) defined(gtss_ext_$db(10))
 10    43 ,db_filact_funct04	bit(1) defined(gtss_ext_$db(11))
 10    44 ,db_filact_funct05	bit(1) defined(gtss_ext_$db(12))
 10    45 ,db_filact_funct10	bit(1) defined(gtss_ext_$db(13))
 10    46 ,db_filact_funct11	bit(1) defined(gtss_ext_$db(14))
 10    47 ,db_filact_funct14	bit(1) defined(gtss_ext_$db(15))
 10    48 ,db_filact_funct18	bit(1) defined(gtss_ext_$db(16))
 10    49 ,db_filact_funct19	bit(1) defined(gtss_ext_$db(17))
 10    50 ,db_filact_funct21	bit(1) defined(gtss_ext_$db(18))
 10    51 ,db_filact_funct22	bit(1) defined(gtss_ext_$db(19))
 10    52 ,db_interp_prim	bit(1) defined(gtss_ext_$db(20))
 10    53 ,db_ios		bit(1) defined(gtss_ext_$db(21))
 10    54 ,db_run_subsystem	bit(1) defined(gtss_ext_$db(22))
 10    55 ,db_drl_t_cfio	bit(1) defined(gtss_ext_$db(23))
 10    56 ,db_drl_switch	bit(1) defined(gtss_ext_$db(24))
 10    57 ,db_drl_dio	bit(1) defined(gtss_ext_$db(25))
 10    58 ,db_drl_retfil	bit(1) defined(gtss_ext_$db(26))
 10    59 ,db_drl_msub	bit(1) defined(gtss_ext_$db(27))
 10    60 ,db_drl_callss	bit(1) defined(gtss_ext_$db(28))
 10    61 ,db_drl_rstswh	bit(1) defined(gtss_ext_$db(29))
 10    62 ,db_drl_setswh	bit(1) defined(gtss_ext_$db(30))
 10    63 ,db_mcfc		bit(1) defined(gtss_ext_$db(31))
 10    64 ,db_dq		bit(1) defined(gtss_ext_$db(32))
 10    65 ,db_abs		bit(1) defined(gtss_ext_$db(33))
 10    66 ,db_attributes_mgr	bit(1) defined(gtss_ext_$db(34))
 10    67 ,db_expand_pathname bit(1) defined(gtss_ext_$db(35))
 10    68 ,db_drl_part	bit(1) defined(gtss_ext_$db(36))
 10    69 ,db_drl_morlnk	bit(1) defined(gtss_ext_$db(37))
 10    70 ,db_drl_kin	bit(1) defined(gtss_ext_$db(38))
 10    71 /* Insert next entry above this comment. */
 10    72 );
 10    73 
 10    74 /* Table of sorted names. */
 10    75 dcl 1 debug_bit_names (38) static int options(constant)
 10    76 ,     2 name char(18)var init(
 10    77          "" ,"CFP_input" ,"abs" ,"attributes_mgr" ,"dq" ,"drl_addmem"
 10    78          ,"drl_callss" ,"drl_defil" ,"drl_dio" ,"drl_filact" ,"drl_filsp"
 10    79          ,"drl_grow" ,"drl_kin" ,"drl_morlnk" ,"drl_msub" ,"drl_part"
 10    80          ,"drl_retfil" ,"drl_rew" ,"drl_rstswh" ,"drl_setswh" ,"drl_switch"
 10    81          ,"drl_t_cfio" ,"expand_pathname" ,"filact_funct02" ,"filact_funct03"
 10    82          ,"filact_funct04" ,"filact_funct05" ,"filact_funct10" ,"filact_funct11"
 10    83          ,"filact_funct14" ,"filact_funct18" ,"filact_funct19" ,"filact_funct21"
 10    84          ,"filact_funct22" ,"interp_prim" ,"ios" ,"mcfc" ,"run_subsystem"
 10    85 			)
 10    86 ,     2 value fixed bin init(
 10    87          01 ,02 ,33 ,34 ,32 ,03 ,28 ,04 ,25 ,05 ,06 ,07 ,38 ,37 ,27 ,36 ,26 ,08
 10    88          ,29 ,30 ,24 ,23 ,35 ,09 ,10 ,11 ,12 ,13 ,14 ,15 ,16 ,17 ,18 ,19 ,20 ,21
 10    89          ,31 ,22
 10    90 			);
 10    91 /* End of table. */
 10    92 /*   END INCLUDE FILE gtss_db_names.incl.pl1 */
      390 
      391      end						/* gtss_run_subsystem_. */;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    08/04/87  1541.5  gtss_run_subsystem_.pl1           >special_ldd>install>MR12.1-1054>gtss_run_subsystem_.pl1
372          1    09/09/83  1714.1  gtss_restor_arg_list1.incl.pl1    >ldd>include>gtss_restor_arg_list1.incl.pl1
374          2    09/09/83  1714.0  gtss_prgdes_.incl.pl1             >ldd>include>gtss_prgdes_.incl.pl1
376          3    09/09/83  1713.8  gtss_ext_.incl.pl1                >ldd>include>gtss_ext_.incl.pl1
378          4    09/09/83  1713.3  gtss_install_values_.incl.pl1     >ldd>include>gtss_install_values_.incl.pl1
380          5    08/04/87  1139.0  static_handlers.incl.pl1          >spec>install>1056>static_handlers.incl.pl1
382          6    09/09/83  1714.3  gtss_ust_ext_.incl.pl1            >ldd>include>gtss_ust_ext_.incl.pl1
384          7    12/11/84  1420.0  gtss_spa.incl.pl1                 >ldd>include>gtss_spa.incl.pl1
386          8    12/11/84  1420.0  gtss_entry_dcls.incl.pl1          >ldd>include>gtss_entry_dcls.incl.pl1
388          9    09/09/83  1713.4  gse_ext_.incl.pl1                 >ldd>include>gse_ext_.incl.pl1
390         10    09/09/83  1713.6  gtss_db_names.incl.pl1            >ldd>include>gtss_db_names.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
K                                      based           char(1)                  level 2 packed unaligned dcl 322 ref 297 297
Ksize                                  based           char                     level 2 packed unaligned dcl 322 ref 298 299
MA                                     based           bit(36)                  array dcl 353 set ref 158* 172* 172
al                              000102 automatic       fixed bin(17,0)          dcl 320 set ref 286* 294 295 297 297 297 298 299 302
                                                                                  303
ap                              000100 automatic       pointer                  initial dcl 319 set ref 286* 294 295 297 297 298 299
                                                                                  302 303 319*
arg                                    based           char                     unaligned dcl 321 ref 294 295 302 303
arg_list1                              based           structure                level 1 dcl 1-6
arg_list_ptr                    000012 internal static pointer                  dcl 330 set ref 33* 48* 65 107 107 109
arg_list_ptrp                          parameter       pointer                  dcl 30 ref 39 48 68
argk                                   based           structure                level 1 packed unaligned dcl 322
b13                      21(13) 000120 external static bit(1)                   level 4 packed unaligned dcl 6-16 set ref 279*
b23                      27(06)        based           bit(1)                   level 3 packed unaligned dcl 7-9 set ref 205* 279
bar                      22     000120 external static fixed bin(17,0)          level 4 packed unaligned dcl 6-16 set ref 194* 248
bci_catalog_name         11     000076 external static bit(36)                  array level 2 dcl 2-77 set ref 110 110 222
c                               000103 automatic       fixed bin(24,0)          dcl 331 set ref 95* 96 97 175* 175 176 181 182
code                            000104 automatic       fixed bin(35,0)          dcl 332 set ref 135* 136 136* 138 138* 147 148* 286*
                                                                                  287 289*
com_err_                        000122 constant        entry                    external dcl 8-8 ref 148 168 177 258 289 306 309
comp_ptr                  4     000116 external static pointer                  array level 2 dcl 3-98 ref 96 181
comp_wds                 30     000116 external static fixed bin(24,0)          array level 2 dcl 3-98 ref 97 182
component                12(18) 000076 external static fixed bin(17,0)          array level 2 packed unaligned dcl 2-77 ref 95
cu_$arg_ptr                     000056 constant        entry                    external dcl 318 ref 286
current_ps                      000010 internal static fixed bin(35,0)          initial dcl 317 set ref 103 103 294* 299* 303* 306
                                                                                  309* 309* 309 309 309 309
db_run_subsystem                       defined         bit(1)                   unaligned dcl 10-32 ref 82 113
dispose_of_drl_on_pi            000114 external static bit(1)                   level 2 packed unaligned dcl 3-60 set ref 245*
drl_in_progress           0(01) 000114 external static bit(1)                   level 2 packed unaligned dcl 3-60 set ref 244*
dummy                                  parameter       fixed bin(24,0)          dcl 69 ref 68
entry_point               2     000076 external static fixed bin(17,0)          array level 2 in structure "gtss_prgdes_ext_$prgdes"
                                                                                  packed unaligned dcl 2-77 in procedure "rs_" ref
                                                                                  105
entry_point                     000014 internal static fixed bin(18,0)          dcl 335 in procedure "rs_" set ref 75* 80
entry_pt                               parameter       fixed bin(18,0)          dcl 70 ref 68 75
ep                              000105 automatic       fixed bin(24,0)          dcl 334 set ref 80* 105* 123* 231* 248 248
fast_lib_ncp              2     000116 external static fixed bin(24,0)          level 2 dcl 3-98 ref 176
fp                              000106 automatic       pointer                  initial dcl 336 set ref 154* 162* 162 172 181* 336*
gcos_debug_$loadtime            000062 constant        entry                    external dcl 337 ref 237
gdb                       0(02) 000130 external static bit(1)                   level 2 packed unaligned dcl 9-18 ref 237
gse_ext_$modes                  000130 external static structure                level 1 dcl 9-18
gseg                            000110 automatic       pointer                  initial dcl 338 set ref 94* 203 204 205 222 264* 279
                                                                                  338*
gtss_bcd_ascii_                 000124 constant        entry                    external dcl 8-33 ref 110
gtss_ext_$bad_drl_rtrn          000100 external static label variable           dcl 3-9 ref 278
gtss_ext_$db                    000102 external static bit(1)                   array unaligned dcl 3-10 ref 82 82 113 113
gtss_ext_$drl_rtrn              000104 external static label variable           array dcl 3-13 set ref 219* 278*
gtss_ext_$fast_lib              000116 external static structure                level 1 dcl 3-98
gtss_ext_$flags                 000114 external static structure                level 1 dcl 3-60
gtss_ext_$gdb_name              000106 external static char(8)                  unaligned dcl 3-18 set ref 82*
gtss_ext_$gtss_slave_area_seg   000110 external static pointer                  array dcl 3-20 ref 94 264
gtss_ext_$stack_level_          000112 external static fixed bin(17,0)          dcl 3-31 ref 35 36 55 78 94 219 264 278
gtss_fail                       000112 stack reference condition                dcl 339 ref 150 170 179 259
gtss_fix_tty_modes_             000060 constant        entry                    external dcl 328 ref 127
gtss_prgdes_ext_$prgdes         000076 external static structure                array level 1 dcl 2-77
gtss_set_slave_                 000126 constant        entry                    external dcl 8-146 ref 248
gtss_spa                               based           structure                level 1 dcl 7-9
gtss_ust                        000120 external static structure                level 2 dcl 6-16
gtss_ust_ext_$ust               000120 external static structure                level 1 dcl 6-16
hcs_$set_bc_seg                 000064 constant        entry                    external dcl 340 ref 138
hcs_$set_max_length_seg         000066 constant        entry                    external dcl 341 ref 135
hcs_$truncate_seg               000070 constant        entry                    external dcl 342 ref 136
high                     37            based           fixed bin(17,0)          level 3 packed unaligned dcl 7-9 set ref 203*
il                              000120 automatic       fixed bin(24,0)          dcl 343 set ref 97* 121* 163 182*
initial_load_address      3(18) 000076 external static fixed bin(17,0)          array level 2 packed unaligned dcl 2-77 ref 106
ioa_                            000072 constant        entry                    external dcl 344 ref 82 114 121 123 128
ip                              000122 automatic       pointer                  initial dcl 345 set ref 96* 121* 154 345*
l                               000124 automatic       fixed bin(24,0)          dcl 346 set ref 157* 158 166* 167 172 173 184 185
l1                              000125 automatic       fixed bin(24,0)          dcl 347 set ref 163* 166
l2                              000126 automatic       fixed bin(24,0)          dcl 348 set ref 164* 166
la                              000127 automatic       fixed bin(24,0)          dcl 349 set ref 106* 107* 109* 109 123* 157 161 237*
lhole                    37            based           structure                level 2 dcl 7-9
limit                    22(18) 000120 external static bit(18)                  level 4 packed unaligned dcl 6-16 set ref 192*
ll                              000130 automatic       fixed bin(24,0)          dcl 350 set ref 140* 192 194 204
ll_b18                    0(18)        based           bit(18)                  level 2 packed unaligned dcl 368 ref 192
ll_overlay                             based           structure                level 1 dcl 368
ln                              000132 automatic       char(6)                  unaligned dcl 351 set ref 110 110 114*
lnam                     23            based           bit(36)                  level 2 dcl 7-9 set ref 222*
load_size                 1(18) 000076 external static fixed bin(17,0)          array level 2 packed unaligned dcl 2-77 ref 104
loc                       1            based           bit(18)                  level 2 packed unaligned dcl 1-6 ref 107 109
loc_use                   1(18)        based           bit(18)                  level 2 packed unaligned dcl 1-6 ref 107
ls                              000134 automatic       fixed bin(24,0)          dcl 352 set ref 104* 123* 164 165 173* 173 174 184*
                                                                                  184
lsize                    22     000120 external static structure                level 3 dcl 6-16
lswap                    23     000120 external static structure                level 3 dcl 6-16
lswth                    21     000120 external static structure                level 3 dcl 6-16
lwrap                    27            based           structure                level 2 dcl 7-9
op                              000136 automatic       pointer                  initial dcl 354 set ref 94* 121* 135* 136* 138* 155
                                                                                  248 248 354*
pdx                             000015 internal static fixed bin(24,0)          dcl 355 set ref 32* 47* 82* 82 95 99 100 104 105 106
                                                                                  110 110 114* 114 128 222 237
popup_from_pi             0(02) 000114 external static bit(1)                   level 2 packed unaligned dcl 3-60 set ref 247*
prgdes_index                           parameter       fixed bin(24,0)          dcl 29 ref 15 15 32 39 47
program_size              1     000076 external static fixed bin(17,0)          array level 2 packed unaligned dcl 2-77 ref 100
ps                              000140 automatic       fixed bin(24,0)          dcl 356 set ref 100* 103* 123* 136 138 138 140 203
quit                            000142 stack reference condition                dcl 357 ref 127 129
restor_continue                 000016 internal static label variable           array dcl 359 set ref 35* 55
restor_continue2                000036 internal static label variable           array dcl 360 set ref 36* 78
restore                         000150 automatic       bit(1)                   initial unaligned dcl 358 set ref 34* 64* 82* 103
                                                                                  107 114* 133 156 189 231 358*
seek_address              3     000076 external static bit(18)                  array level 2 packed unaligned dcl 2-77 ref 99
size                     23(18) 000120 external static bit(18)                  level 4 packed unaligned dcl 6-16 set ref 192*
so                              000151 automatic       fixed bin(24,0)          dcl 361 set ref 99* 121* 162 163 183*
ss                        0(05) 000130 external static bit(1)                   level 2 packed unaligned dcl 9-18 ref 126
ss_name                         000076 external static char(4)                  array level 2 dcl 2-77 set ref 82* 114* 128* 237
sys_info$max_seg_size           000074 external static fixed bin(24,0)          dcl 362 set ref 135*
total                    37(18)        based           fixed bin(17,0)          level 3 packed unaligned dcl 7-9 set ref 204*
tp                              000152 automatic       pointer                  initial dcl 365 set ref 155* 158 161* 161 172 185*
                                                                                  185 365*
tra                       2            based           bit(18)                  level 2 packed unaligned dcl 1-6 ref 65
tral                            000154 automatic       fixed bin(24,0)          dcl 366 set ref 65* 231 231
unfinished_drl            0(03) 000114 external static bit(1)                   level 2 packed unaligned dcl 3-60 set ref 246*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
accessviolation_sct_index              internal static fixed bin(17,0)          initial dcl 5-27
alrm_sct_index                         internal static fixed bin(17,0)          initial dcl 5-27
am_fault_sct_index                     internal static fixed bin(17,0)          initial dcl 5-27
any_other                       000000 stack reference condition                dcl 329
bad_outward_call_sct_index             internal static fixed bin(17,0)          initial dcl 5-27
command_sct_index                      internal static fixed bin(17,0)          initial dcl 5-27
connect_sct_index                      internal static fixed bin(17,0)          initial dcl 5-27
cput_sct_index                         internal static fixed bin(17,0)          initial dcl 5-27
cross_ring_transfer_sct_index          internal static fixed bin(17,0)          initial dcl 5-27
db_                                    defined         bit(1)                   unaligned dcl 10-32
db_CFP_input                           defined         bit(1)                   unaligned dcl 10-32
db_abs                                 defined         bit(1)                   unaligned dcl 10-32
db_attributes_mgr                      defined         bit(1)                   unaligned dcl 10-32
db_dq                                  defined         bit(1)                   unaligned dcl 10-32
db_drl_addmem                          defined         bit(1)                   unaligned dcl 10-32
db_drl_callss                          defined         bit(1)                   unaligned dcl 10-32
db_drl_defil                           defined         bit(1)                   unaligned dcl 10-32
db_drl_dio                             defined         bit(1)                   unaligned dcl 10-32
db_drl_filact                          defined         bit(1)                   unaligned dcl 10-32
db_drl_filsp                           defined         bit(1)                   unaligned dcl 10-32
db_drl_grow                            defined         bit(1)                   unaligned dcl 10-32
db_drl_kin                             defined         bit(1)                   unaligned dcl 10-32
db_drl_morlnk                          defined         bit(1)                   unaligned dcl 10-32
db_drl_msub                            defined         bit(1)                   unaligned dcl 10-32
db_drl_part                            defined         bit(1)                   unaligned dcl 10-32
db_drl_retfil                          defined         bit(1)                   unaligned dcl 10-32
db_drl_rew                             defined         bit(1)                   unaligned dcl 10-32
db_drl_rstswh                          defined         bit(1)                   unaligned dcl 10-32
db_drl_setswh                          defined         bit(1)                   unaligned dcl 10-32
db_drl_switch                          defined         bit(1)                   unaligned dcl 10-32
db_drl_t_cfio                          defined         bit(1)                   unaligned dcl 10-32
db_expand_pathname                     defined         bit(1)                   unaligned dcl 10-32
db_filact_funct02                      defined         bit(1)                   unaligned dcl 10-32
db_filact_funct03                      defined         bit(1)                   unaligned dcl 10-32
db_filact_funct04                      defined         bit(1)                   unaligned dcl 10-32
db_filact_funct05                      defined         bit(1)                   unaligned dcl 10-32
db_filact_funct10                      defined         bit(1)                   unaligned dcl 10-32
db_filact_funct11                      defined         bit(1)                   unaligned dcl 10-32
db_filact_funct14                      defined         bit(1)                   unaligned dcl 10-32
db_filact_funct18                      defined         bit(1)                   unaligned dcl 10-32
db_filact_funct19                      defined         bit(1)                   unaligned dcl 10-32
db_filact_funct21                      defined         bit(1)                   unaligned dcl 10-32
db_filact_funct22                      defined         bit(1)                   unaligned dcl 10-32
db_interp_prim                         defined         bit(1)                   unaligned dcl 10-32
db_ios                                 defined         bit(1)                   unaligned dcl 10-32
db_mcfc                                defined         bit(1)                   unaligned dcl 10-32
debug                           000000 constant        entry                    external dcl 333
debug_bit_names                        internal static structure                array level 1 unaligned dcl 10-75
derail_sct_index                       internal static fixed bin(17,0)          initial dcl 5-27
directed_fault_2_sct_index             internal static fixed bin(17,0)          initial dcl 5-27
directed_fault_3_sct_index             internal static fixed bin(17,0)          initial dcl 5-27
dm_shutdown_scheduled_sct_index        internal static fixed bin(17,0)          initial dcl 5-27
execute_sct_index                      internal static fixed bin(17,0)          initial dcl 5-27
fault_tag_1_sct_index                  internal static fixed bin(17,0)          initial dcl 5-27
fault_tag_3_sct_index                  internal static fixed bin(17,0)          initial dcl 5-27
fixedoverflow_sct_index                internal static fixed bin(17,0)          initial dcl 5-27
gse_ext_$drm_rule                      external static fixed bin(24,0)          dcl 9-6
gse_ext_$gcos_debug_pathname           external static char(168)                unaligned dcl 9-15
gse_ext_$smc_pathname                  external static char(168)                unaligned dcl 9-16
gse_ext_$umc_name                      external static char(12)                 unaligned dcl 9-17
gtss_CFP_abort_                 000000 constant        entry                    external dcl 8-9
gtss_CFP_break_                 000000 constant        entry                    external dcl 8-10
gtss_CFP_input_                 000000 constant        entry                    external dcl 8-11
gtss_CFP_output_                000000 constant        entry                    external dcl 8-12
gtss_abandon_CFP_               000000 constant        entry                    external dcl 8-13
gtss_abort_dump_                000000 constant        entry                    external dcl 8-14
gtss_abort_subsystem_           000000 constant        entry                    external dcl 8-15
gtss_abort_subsystem_$not_imp   000000 constant        entry                    external dcl 8-16
gtss_abs_$abs_equiv             000000 constant        entry                    external dcl 8-19
gtss_abs_$cpu_runout            000000 constant        entry                    external dcl 8-20
gtss_abs_$create_absin          000000 constant        entry                    external dcl 8-21
gtss_abs_$dabt_check            000000 constant        entry                    external dcl 8-22
gtss_abs_$get_drm               000000 constant        entry                    external dcl 8-24
gtss_abs_$get_id                000000 constant        entry                    external dcl 8-23
gtss_abs_login_banner_          000000 constant        entry                    external dcl 8-17
gtss_abs_logout_banner_         000000 constant        entry                    external dcl 8-18
gtss_adjust_size_               000000 constant        entry                    external dcl 8-25
gtss_aft_$add                   000000 constant        entry                    external dcl 8-26
gtss_aft_$delete                000000 constant        entry                    external dcl 8-27
gtss_aft_$find                  000000 constant        entry                    external dcl 8-28
gtss_aft_$initialize            000000 constant        entry                    external dcl 8-29
gtss_ascii_bcd_                 000000 constant        entry                    external dcl 8-30
gtss_attributes_mgr_$get        000000 constant        entry                    external dcl 8-31
gtss_attributes_mgr_$set        000000 constant        entry                    external dcl 8-32
gtss_bcd_ascii_$lc              000000 constant        entry                    external dcl 8-34
gtss_break_vector_              000000 constant        entry                    external dcl 8-35
gtss_break_vector_$drl_in_progress
                                000000 constant        entry                    external dcl 8-36
gtss_break_vector_$status       000000 constant        entry                    external dcl 8-37
gtss_build_                     000000 constant        entry                    external dcl 8-38
gtss_com_err_                   000000 constant        entry                    external dcl 8-39
gtss_derail_processor_          000000 constant        entry                    external dcl 8-40
gtss_derail_processor_$set      000000 constant        entry                    external dcl 8-41
gtss_dq_$catp                   000000 constant        entry                    external dcl 8-42
gtss_dq_$create                 000000 constant        entry                    external dcl 8-43
gtss_dq_$dibp                   000000 constant        entry                    external dcl 8-44
gtss_dq_$entries_info           000000 constant        entry                    external dcl 8-45
gtss_dq_$hdrp                   000000 constant        entry                    external dcl 8-46
gtss_dq_$mod_js                 000000 constant        entry                    external dcl 8-47
gtss_dq_$open_exc               000000 constant        entry                    external dcl 8-48
gtss_dq_$open_gen               000000 constant        entry                    external dcl 8-49
gtss_drl_abort_                 000000 constant        entry                    external dcl 8-50
gtss_drl_addmem_                000000 constant        entry                    external dcl 8-51
gtss_drl_callss_                000000 constant        entry                    external dcl 8-52
gtss_drl_corfil_                000000 constant        entry                    external dcl 8-53
gtss_drl_defil_                 000000 constant        entry                    external dcl 8-54
gtss_drl_defil_$subr            000000 constant        entry                    external dcl 8-55
gtss_drl_dio_                   000000 constant        entry                    external dcl 8-56
gtss_drl_drlimt_                000000 constant        entry                    external dcl 8-57
gtss_drl_drlsav_                000000 constant        entry                    external dcl 8-58
gtss_drl_filact_                000000 constant        entry                    external dcl 8-59
gtss_drl_filsp_                 000000 constant        entry                    external dcl 8-60
gtss_drl_grow_                  000000 constant        entry                    external dcl 8-61
gtss_drl_gwake_                 000000 constant        entry                    external dcl 8-62
gtss_drl_jsts_                  000000 constant        entry                    external dcl 8-63
gtss_drl_kin_                   000000 constant        entry                    external dcl 8-64
gtss_drl_kotnow_                000000 constant        entry                    external dcl 8-65
gtss_drl_kotnow_$gtss_drl_kout_ 000000 constant        entry                    external dcl 8-66
gtss_drl_koutn_                 000000 constant        entry                    external dcl 8-67
gtss_drl_morlnk_                000000 constant        entry                    external dcl 8-68
gtss_drl_msub_                  000000 constant        entry                    external dcl 8-69
gtss_drl_objtim_                000000 constant        entry                    external dcl 8-70
gtss_drl_part_                  000000 constant        entry                    external dcl 8-71
gtss_drl_pasaft_                000000 constant        entry                    external dcl 8-72
gtss_drl_pasdes_                000000 constant        entry                    external dcl 8-73
gtss_drl_pasust_                000000 constant        entry                    external dcl 8-74
gtss_drl_pdio_                  000000 constant        entry                    external dcl 8-75
gtss_drl_prgdes_                000000 constant        entry                    external dcl 8-76
gtss_drl_pseudo_                000000 constant        entry                    external dcl 8-77
gtss_drl_relmem_                000000 constant        entry                    external dcl 8-78
gtss_drl_restor_                000000 constant        entry                    external dcl 8-79
gtss_drl_retfil_                000000 constant        entry                    external dcl 8-80
gtss_drl_return_                000000 constant        entry                    external dcl 8-81
gtss_drl_rew_                   000000 constant        entry                    external dcl 8-82
gtss_drl_rstswh_                000000 constant        entry                    external dcl 8-83
gtss_drl_setlno_                000000 constant        entry                    external dcl 8-84
gtss_drl_setswh_                000000 constant        entry                    external dcl 8-85
gtss_drl_snumb_                 000000 constant        entry                    external dcl 8-86
gtss_drl_spawn_                 000000 constant        entry                    external dcl 8-87
gtss_drl_spawn_$gtss_drl_pasflr_
                                000000 constant        entry                    external dcl 8-88
gtss_drl_stoppt_                000000 constant        entry                    external dcl 8-89
gtss_drl_switch_                000000 constant        entry                    external dcl 8-90
gtss_drl_sysret_                000000 constant        entry                    external dcl 8-91
gtss_drl_t_cfio_                000000 constant        entry                    external dcl 8-92
gtss_drl_t_cmov_                000000 constant        entry                    external dcl 8-93
gtss_drl_t_err_                 000000 constant        entry                    external dcl 8-94
gtss_drl_t_goto_                000000 constant        entry                    external dcl 8-95
gtss_drl_t_linl_                000000 constant        entry                    external dcl 8-96
gtss_drl_t_rscc_                000000 constant        entry                    external dcl 8-97
gtss_drl_tapein_                000000 constant        entry                    external dcl 8-98
gtss_drl_task_                  000000 constant        entry                    external dcl 8-99
gtss_drl_termtp_                000000 constant        entry                    external dcl 8-100
gtss_drl_time_                  000000 constant        entry                    external dcl 8-101
gtss_drun_                      000000 constant        entry                    external dcl 8-102
gtss_dsd_lookup_                000000 constant        entry                    external dcl 8-103
gtss_dsd_process_               000000 constant        entry                    external dcl 8-104
gtss_edit_dsd_                  000000 constant        entry                    external dcl 8-105
gtss_expand_pathname_           000000 constant        entry                    external dcl 8-107
gtss_expand_pathname_$verify_umc
                                000000 constant        entry                    external dcl 8-108
gtss_ext_$CFP_bits                     external static structure                level 1 dcl 3-37
gtss_ext_$SYstarstar_file_no           external static fixed bin(24,0)          dcl 3-33
gtss_ext_$aem                          external static fixed bin(17,0)          dcl 3-8
gtss_ext_$aft                          external static structure                level 1 dcl 3-78
gtss_ext_$com_reg                      external static structure                level 1 dcl 3-45
gtss_ext_$deferred_catalogs_ptr        external static pointer                  dcl 3-11
gtss_ext_$dispose_of_drl               external static label variable           dcl 3-12
gtss_ext_$drm_path                     external static char(168)                unaligned dcl 3-14
gtss_ext_$drun_jid                     external static char(5)                  unaligned dcl 3-15
gtss_ext_$event_channel                external static fixed bin(71,0)          dcl 3-16
gtss_ext_$finished                     external static label variable           dcl 3-17
gtss_ext_$get_line                     external static entry variable           dcl 3-19
gtss_ext_$hcs_work_area_ptr            external static pointer                  dcl 3-21
gtss_ext_$homedir                      external static char(64)                 unaligned dcl 3-22
gtss_ext_$last_k_was_out               external static bit(1)                   dcl 3-23
gtss_ext_$mcfc                         external static structure                level 1 dcl 3-109
gtss_ext_$pdir                         external static varying char(168)        dcl 3-24
gtss_ext_$popup_from_pi                external static label variable           dcl 3-25
gtss_ext_$ppt                          external static pointer                  dcl 3-94
gtss_ext_$process_type                 external static fixed bin(17,0)          dcl 3-26
gtss_ext_$put_chars                    external static entry variable           dcl 3-27
gtss_ext_$restart_from_pi              external static label variable           dcl 3-28
gtss_ext_$restart_seg_ptr              external static pointer                  dcl 3-29
gtss_ext_$sig_ptr                      external static pointer                  dcl 3-30
gtss_ext_$statistics                   external static structure                level 1 dcl 3-72
gtss_ext_$suspended_process            external static bit(1)                   unaligned dcl 3-32
gtss_ext_$user_id                      external static varying char(26)         dcl 3-34
gtss_ext_$work_area_ptr                external static pointer                  dcl 3-35
gtss_fault_processor_           000000 constant        entry                    external dcl 8-109
gtss_fault_processor_$timer_runout
                                000000 constant        entry                    external dcl 8-111
gtss_filact_error_status_       000000 constant        entry                    external dcl 8-112
gtss_filact_funct02_            000000 constant        entry                    external dcl 8-113
gtss_filact_funct03_            000000 constant        entry                    external dcl 8-114
gtss_filact_funct04_            000000 constant        entry                    external dcl 8-115
gtss_filact_funct05_            000000 constant        entry                    external dcl 8-116
gtss_filact_funct08_            000000 constant        entry                    external dcl 8-117
gtss_filact_funct10_            000000 constant        entry                    external dcl 8-118
gtss_filact_funct11_            000000 constant        entry                    external dcl 8-119
gtss_filact_funct14_            000000 constant        entry                    external dcl 8-120
gtss_filact_funct18_            000000 constant        entry                    external dcl 8-121
gtss_filact_funct19_            000000 constant        entry                    external dcl 8-122
gtss_filact_funct21_            000000 constant        entry                    external dcl 8-123
gtss_filact_funct22_            000000 constant        entry                    external dcl 8-124
gtss_find_cond_frame_           000000 constant        entry                    external dcl 8-110
gtss_install_values_$Lstar_msf         external static varying char(32)         dcl 4-10
gtss_install_values_$fast_msf          external static varying char(32)         dcl 4-9
gtss_install_values_$memory_limit      external static fixed bin(24,0)          dcl 4-12
gtss_install_values_$starL_msf         external static varying char(32)         dcl 4-11
gtss_install_values_$time_limit        external static fixed bin(24,0)          dcl 4-13
gtss_interp_prim_               000000 constant        entry                    external dcl 8-126
gtss_interp_prim_$callss        000000 constant        entry                    external dcl 8-127
gtss_interp_prim_$sysret        000000 constant        entry                    external dcl 8-128
gtss_interp_prim_$t_goto        000000 constant        entry                    external dcl 8-129
gtss_ios_change_size_           000000 constant        entry                    external dcl 8-130
gtss_ios_close_                 000000 constant        entry                    external dcl 8-131
gtss_ios_exchange_names_        000000 constant        entry                    external dcl 8-132
gtss_ios_initialize_            000000 constant        entry                    external dcl 8-133
gtss_ios_io_                    000000 constant        entry                    external dcl 8-134
gtss_ios_open_                  000000 constant        entry                    external dcl 8-135
gtss_ios_position_              000000 constant        entry                    external dcl 8-136
gtss_mcfc_$close                000000 constant        entry                    external dcl 8-139
gtss_mcfc_$delete               000000 constant        entry                    external dcl 8-137
gtss_mcfc_$open                 000000 constant        entry                    external dcl 8-138
gtss_mcfc_empty                 000000 constant        entry                    external dcl 8-106
gtss_mcfc_init_                 000000 constant        entry                    external dcl 8-125
gtss_read_starCFP_              000000 constant        entry                    external dcl 8-140
gtss_read_starCFP_$last_os      000000 constant        entry                    external dcl 8-141
gtss_run_subsystem_             000000 constant        entry                    external dcl 8-142
gtss_run_subsystem_$finish      000000 constant        entry                    external dcl 8-143
gtss_run_subsystem_$restor      000000 constant        entry                    external dcl 8-144
gtss_run_subsystem_$restor_perm 000000 constant        entry                    external dcl 8-145
gtss_set_slave_$load_bar        000000 constant        entry                    external dcl 8-147
gtss_update_safe_store_         000000 constant        entry                    external dcl 8-148
gtss_verify_access_             000000 constant        entry                    external dcl 8-149
gtss_verify_access_$check_forced_access
                                000000 constant        entry                    external dcl 8-150
gtss_write_starCFP_             000000 constant        entry                    external dcl 8-151
illegal_modifier_sct_index             internal static fixed bin(17,0)          initial dcl 5-27
illegal_opcode_sct_index               internal static fixed bin(17,0)          initial dcl 5-27
illegal_procedure_sct_index            internal static fixed bin(17,0)          initial dcl 5-27
illegal_ring_order_sct_index           internal static fixed bin(17,0)          initial dcl 5-27
inward_return_sct_index                internal static fixed bin(17,0)          initial dcl 5-27
isot_fault_sct_index                   internal static fixed bin(17,0)          initial dcl 5-27
linkage_error_sct_index                internal static fixed bin(17,0)          initial dcl 5-27
lockup_sct_index                       internal static fixed bin(17,0)          initial dcl 5-27
lot_fault_sct_index                    internal static fixed bin(17,0)          initial dcl 5-27
mme1_sct_index                         internal static fixed bin(17,0)          initial dcl 5-27
mme2_sct_index                         internal static fixed bin(17,0)          initial dcl 5-27
mme3_sct_index                         internal static fixed bin(17,0)          initial dcl 5-27
mme4_sct_index                         internal static fixed bin(17,0)          initial dcl 5-27
neti_sct_index                         internal static fixed bin(17,0)          initial dcl 5-27
no_execute_permission_sct_index        internal static fixed bin(17,0)          initial dcl 5-27
no_read_permission_sct_index           internal static fixed bin(17,0)          initial dcl 5-27
no_write_permission_sct_index          internal static fixed bin(17,0)          initial dcl 5-27
not_a_gate_sct_index                   internal static fixed bin(17,0)          initial dcl 5-27
not_in_call_bracket_sct_index          internal static fixed bin(17,0)          initial dcl 5-27
not_in_execute_bracket_sct_index       internal static fixed bin(17,0)          initial dcl 5-27
not_in_read_bracket_sct_index          internal static fixed bin(17,0)          initial dcl 5-27
not_in_write_bracket_sct_index         internal static fixed bin(17,0)          initial dcl 5-27
op_not_complete_sct_index              internal static fixed bin(17,0)          initial dcl 5-27
other_command_sct_index                internal static fixed bin(17,0)          initial dcl 5-27
other_illegal_proc_sct_index           internal static fixed bin(17,0)          initial dcl 5-27
out_of_bounds_sct_index                internal static fixed bin(17,0)          initial dcl 5-27
outward_call_sct_index                 internal static fixed bin(17,0)          initial dcl 5-27
overflow_sct_index                     internal static fixed bin(17,0)          initial dcl 5-27
ovrflo_sct_index                       internal static fixed bin(17,0)          initial dcl 5-27
packed_pointer_fault_sct_index         internal static fixed bin(17,0)          initial dcl 5-27
page_fault_error_sct_index             internal static fixed bin(17,0)          initial dcl 5-27
parity_sct_index                       internal static fixed bin(17,0)          initial dcl 5-27
pgt_sct_index                          internal static fixed bin(17,0)          initial dcl 5-27
prgdes_ov                              based           structure                array level 1 dcl 2-100
quit_sct_index                         internal static fixed bin(17,0)          initial dcl 5-27
record_quota_overflow_sct_index        internal static fixed bin(17,0)          initial dcl 5-27
ring_alarm_fault_sct_index             internal static fixed bin(17,0)          initial dcl 5-27
seg_fault_error_sct_index              internal static fixed bin(17,0)          initial dcl 5-27
shutdown_sct_index                     internal static fixed bin(17,0)          initial dcl 5-27
simfault_000000_sct_index              internal static fixed bin(17,0)          initial dcl 5-27
size_sct_index                         internal static fixed bin(17,0)          initial dcl 5-27
startup_sct_index                      internal static fixed bin(17,0)          initial dcl 5-27
storage_sct_index                      internal static fixed bin(17,0)          initial dcl 5-27
store_sct_index                        internal static fixed bin(17,0)          initial dcl 5-27
stringsize_sct_index                   internal static fixed bin(17,0)          initial dcl 5-27
susp_sct_index                         internal static fixed bin(17,0)          initial dcl 5-27
system_message_sct_index               internal static fixed bin(17,0)          initial dcl 5-27
system_packed_pointer_sct_index        internal static fixed bin(17,0)          initial dcl 5-27
system_shutdown_scheduled_sct_index    internal static fixed bin(17,0)          initial dcl 5-27
term_sct_index                         internal static fixed bin(17,0)          initial dcl 5-27
timer_manager_$cpu_call         000000 constant        entry                    external dcl 363
timer_manager_$reset_cpu_call   000000 constant        entry                    external dcl 364
timer_runout_sct_index                 internal static fixed bin(17,0)          initial dcl 5-27
trouble_sct_index                      internal static fixed bin(17,0)          initial dcl 5-27
undefined_fault_sct_index              internal static fixed bin(17,0)          initial dcl 5-27
undefined_pointer_sct_index            internal static fixed bin(17,0)          initial dcl 5-27
underflow_sct_index                    internal static fixed bin(17,0)          initial dcl 5-27
wkp_sct_index                          internal static fixed bin(17,0)          initial dcl 5-27
zerodivide_sct_index                   internal static fixed bin(17,0)          initial dcl 5-27

NAMES DECLARED BY EXPLICIT CONTEXT.
bad_mem_size                    001623 constant        label                    dcl 288 set ref 298 302
conclude_subsystem              002076 constant        entry                    internal dcl 270 ref 267
continue                        000471 constant        label                    dcl 92 ref 37 66
end_activity                    001560 constant        label                    dcl 266 ref 219
finish                          001544 constant        entry                    external dcl 263
gtss_run_subsystem_             000314 constant        entry                    external dcl 15
mem_size                        001564 constant        entry                    external dcl 283
ready_to_transfer               001413 constant        label                    dcl 234 ref 90
restor                          000347 constant        entry                    external dcl 39
restor_perm                     000405 constant        entry                    external dcl 68
right_here                      000370 constant        label                    dcl 56 set ref 35
right_here2                     000423 constant        label                    dcl 79 set ref 36
rs_                             000303 constant        entry                    external dcl 15

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 110 110 110 110 192
addrel                                                 builtin function         ref 161 162 185 248 248
divide                                                 builtin function         ref 140 194 309 309 309 309
fixed                                                  builtin function         ref 65 99 107 109 138 138 299 303
min                                                    builtin function         ref 166
null                                                   builtin function         ref 33 319 336 338 345 354 365
verify                                                 builtin function         ref 298 302

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      2654        3006    2327        2664
Length      3466    2327       132         443     324          46

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
rs_                                 356 external procedure  is an external procedure.  
on unit on line 127                  64 on unit               
conclude_subsystem                      internal procedure  shares stack frame of external procedure rs_.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 current_ps                  rs_
000012 arg_list_ptr                rs_
000014 entry_point                 rs_
000015 pdx                         rs_
000016 restor_continue             rs_
000036 restor_continue2            rs_

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
rs_                      000100 ap                          rs_
                         000102 al                          rs_
                         000103 c                           rs_
                         000104 code                        rs_
                         000105 ep                          rs_
                         000106 fp                          rs_
                         000110 gseg                        rs_
                         000120 il                          rs_
                         000122 ip                          rs_
                         000124 l                           rs_
                         000125 l1                          rs_
                         000126 l2                          rs_
                         000127 la                          rs_
                         000130 ll                          rs_
                         000132 ln                          rs_
                         000134 ls                          rs_
                         000136 op                          rs_
                         000140 ps                          rs_
                         000150 restore                     rs_
                         000151 so                          rs_
                         000152 tp                          rs_
                         000154 tral                        rs_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return_mac          tra_ext_2           signal_op           enable_op
ext_entry           int_entry           any_to_any_truncate_

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      cu_$arg_ptr                   gcos_debug_$loadtime          gtss_bcd_ascii_
gtss_fix_tty_modes_           gtss_set_slave_               hcs_$set_bc_seg               hcs_$set_max_length_seg
hcs_$truncate_seg             ioa_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
gse_ext_$modes                gtss_ext_$bad_drl_rtrn        gtss_ext_$db                  gtss_ext_$drl_rtrn
gtss_ext_$fast_lib            gtss_ext_$flags               gtss_ext_$gdb_name            gtss_ext_$gtss_slave_area_seg
gtss_ext_$stack_level_        gtss_prgdes_ext_$prgdes       gtss_ust_ext_$ust             sys_info$max_seg_size




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
    319 000266       336 000270       338 000271       345 000272       354 000273       358 000274       365 000275
     15 000300        32 000322        33 000326        34 000330        35 000332        36 000337        37 000342
     39 000343        47 000355        48 000361        55 000364        56 000370        64 000371        65 000373
     66 000400        68 000401        75 000413        78 000417        79 000423        80 000424        82 000427
     90 000470        92 000471        94 000472        95 000500        96 000510        97 000514        99 000520
    100 000523       103 000526       104 000536       105 000542       106 000545       107 000551       109 000564
    110 000570       113 000610       114 000614       121 000652       123 000704       126 000735       127 000741
    128 000762       129 001007       133 001010       135 001013       136 001026       138 001045       140 001065
    147 001073       148 001075       150 001127       154 001132       155 001134       156 001136       157 001141
    158 001143       161 001155       162 001161       163 001165       164 001170       165 001172       166 001174
    167 001201       168 001203       170 001236       172 001241       173 001250       174 001252       175 001254
    176 001255       177 001262       179 001314       181 001317       182 001325       183 001331       184 001332
    185 001334       187 001340       189 001341       192 001344       194 001352       203 001357       204 001363
    205 001366       219 001370       222 001376       231 001405       234 001413       237 001414       244 001453
    245 001456       246 001460       247 001462       248 001464       258 001504       259 001537       263 001542
    264 001552       266 001560       267 001561       268 001562       283 001563       286 001572       287 001621
    288 001623       289 001624       292 001653       294 001654       295 001666       297 001672       298 001705
    299 001721       300 001741       302 001742       303 001754       306 001770       309 002024       315 002075
    270 002076       278 002077       279 002110       280 002117


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
