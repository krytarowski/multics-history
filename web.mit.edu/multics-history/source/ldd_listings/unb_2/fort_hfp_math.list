	COMPILATION LISTING OF fort_hfp_math (>spec>online>fort_recompile>fort_hfp_math.fortran)

	Compiled by: Multics New Fortran Compiler, Release 11.0
	Compiled on: 12/27/84  0805.3 mst Thu
	    Options: ansi77 hexadecimal_floating_point table subscriptrange stringrange round check_multiply map

					  Subroutine fort_parm_math

        1 c ******************************************
        2 c *                                        *
        3 c * Copyright, (C) Honeywell Limited, 1984 *
        4 c *                                        *
        5 c ******************************************
        6 
        7 %global hfp;
        8 c     =======================================
        9 c     do nothing program that sets the global flag hfp
       10 c     for the fort_math include file.
       11 c
       12 c     Written: 03/28/84 by M. Mabey
       13 c     =======================================
       14 
       15 %include fort_math
  1     1 c ******************************************************
  1     2 c *                                                    *
  1     3 c * Copyright, (C) Honeywell Limited, 1983             *
  1     4 c *                                                    *
  1     5 c * Copyright (c) 1972 by Massachusetts Institute of   *
  1     6 c * Technology and Honeywell Information Systems, Inc. *
  1     7 c *                                                    *
  1     8 c ******************************************************
  1     9 
  1    10 %global no_auto_zero;
  1    11 c     =======================================
  1    12 c     program for self-documentation
  1    13 c
  1    14 c     Written:  06/06/79 by Paul E. Smee
  1    15 c
  1    16 c     Modified:
  1    17 c     =======================================
  1    18 
  1    19       subroutine fort_parm_math
  1    20 
  1    21       external ioa_ (descriptors)
  1    22       external version
  1    23       character*4 version
  1    24 
  1    25       call ioa_ ("fort_parameter_math version^x^a", version (0))
  1    26 
  1    27       stop
  1    28       end
					  Subroutine fort_parm_math

	NAMES USED IN THIS PROGRAM UNIT

NAME       TYPE OF NAME        LOC          STORAGE   ATTRIBUTES AND REFERENCES

fort_parm_math
           entry point         00000014     constant  on line 1-19 
ioa_       external subroutine 00000010     constant  with descriptors ref 1-21 1-25 
version    internal function                constant  character(4) ref 1-22 1-23 1-25 

       LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC

       1-19 000011       1-25 000026       1-27 000045
					    Function version

  1    29 c     ========================================
  1    30 c     version number function just for fun
  1    31 c
  1    32 c     Written:  06/06/79 by Paul E. Smee
  1    33 c
  1    34 c     Modified:
  1    35 c     ========================================
  1    36 
  1    37       character*4 function version (i)
  1    38 
  1    39       version = "1"
  1    40       return
  1    41       end
					    Function version

	NAMES USED IN THIS PROGRAM UNIT

NAME       TYPE OF NAME        LOC          STORAGE   ATTRIBUTES AND REFERENCES

version    entry point         00000053     constant  character(4) on line 1-37 
version                        00000124     automatic character(4) ref 1-37 1-39 

NAMES DECLARED BUT NOT USED

i                                           parameter position 1 integer declared 1-37 

       LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC

       1-37 000047       1-39 000065       1-40 000070
					    Function to_i_round

  1    42 %options ckmpy, round;
  1    43 c     ========================================
  1    44 c     function to perform compile-time FORTRAN math resulting in integer value,
  1    45 c     and rounded conversions to integer
  1    46 c
  1    47 c     Written:  06/06/79 by Paul E. Smee
  1    48 c
  1    49 c     Modified:
  1    50 c	     Jan 1, 84: Return error code -3 if an overflow is encountered
  1    51 c	          when converting from real or dp to integer.
  1    52 c     ========================================
  1    53 
  1    54       function to_i_round (i_dum)
  1    55 
  1    56       integer to_i_round
  1    57       integer conv_r_to_i_round, conv_dp_to_i_round, conv_cp_to_i_round, binop_i_i_round
  1    58 
  1    59       integer i_dum, i1, i2
  1    60       real r0
  1    61       double precision d0
  1    62       complex c0
  1    63       integer op_id
  1    64       integer error_code_1, error_code_2
  1    65 
  1    66       entry conv_r_to_i_round (r0, error_code_1)
  1    67 	if (r0 .ge. 34359738368d0) then
  1    68       	     error_code_1 = -3
  1    69 	     to_i_round = 34359738367
  1    70 	     goto 9999
  1    71 	endif
  1    72 	if (r0 .le. -34359738368d0) then
  1    73       	     error_code_1 = -3
  1    74 	     to_i_round = -34359738367
  1    75 	     goto 9999
  1    76       	endif
  1    77           to_i_round = r0
  1    78           goto 9999
  1    79 
  1    80       entry conv_dp_to_i_round (d0, error_code_1)
  1    81 	if (d0 .ge. 34359738368d0) then
  1    82       	     error_code_1 = -3
  1    83 	     to_i_round = 34359738367
  1    84 	     goto 9999
  1    85 	endif
  1    86 	if (d0 .le. -34359738368d0) then
  1    87       	     error_code_1 = -3
  1    88 	     to_i_round = -34359738367
  1    89 	     goto 9999
  1    90       	endif
  1    91           to_i_round = d0
  1    92           goto 9999
  1    93 
  1    94       entry conv_cp_to_i_round (c0, error_code_1)
  1    95           to_i_round = c0
  1    96           goto 9999
  1    97 
  1    98       entry binop_i_i_round (op_id, i1, i2, error_code_2)
  1    99 
  1   100           goto (1010, 1020, 1030, 1040, 1050, 1060), op_id
  1   101 
  1   102 1010      to_i_round = i1 + i2
  1   103           goto 9999
  1   104 
  1   105 1020      to_i_round = i1 - i2
  1   106           goto 9999
  1   107 
  1   108 1030      to_i_round = i1 * i2
  1   109           goto 9999
  1   110 
  1   111 1040      to_i_round = i1 / i2
  1   112           goto 9999
  1   113 
  1   114 1050      to_i_round = i1 ** i2
  1   115           goto 9999
  1   116 
  1   117 1060      to_i_round = - i1
  1   118           goto 9999
  1   119 
  1   120 9999  continue
  1   121       return
  1   122       end
					    Function to_i_round

	NAMES USED IN THIS PROGRAM UNIT

NAME       TYPE OF NAME        LOC          STORAGE   ATTRIBUTES AND REFERENCES

binop_i_i_round
           entry point         00000271     constant  integer on line 1-57 1-98 
c0                                          parameter position 1 complex ref 1-62 1-94 1-95 
conv_cp_to_i_round
           entry point         00000243     constant  integer on line 1-57 1-94 
conv_dp_to_i_round
           entry point         00000173     constant  integer on line 1-57 1-80 
conv_r_to_i_round
           entry point         00000122     constant  integer on line 1-57 1-66 
d0                                          parameter position 1 double precision ref 1-61 1-80 1-81 1-86 1-91 
error_code_1
                                            parameter position 2 integer ref 1-64 1-66 1-68 1-73 1-80 1-82 1-87 1-94 
i1                                          parameter position 2 integer ref 1-59 1-98 1-102 1-105 1-108 1-111 1-114 1-117 
i2                                          parameter position 3 integer ref 1-59 1-98 1-102 1-105 1-108 1-111 1-114 
op_id                                       parameter position 1 integer ref 1-63 1-98 1-100 
r0                                          parameter position 1 real ref 1-60 1-66 1-67 1-72 1-77 
to_i_round
                               00000126     automatic integer ref 1-54 1-56 1-69 1-74 1-77 1-83 1-88 1-91 1-95 1-102 1-105 1-108 
                                                     1-111 1-114 1-117 
to_i_round
           entry point         00000101     constant  integer on line 1-54 

NAMES DECLARED BUT NOT USED

error_code_2
                                            parameter position 4 integer declared 1-64 1-98 
i_dum                                       parameter position 1 integer declared 1-54 1-59 

LOC          LABEL  TYPE           LINE           REFERENCES

000321   1010       executable     1-102              used in transfer ref 1-100 
000326   1020       executable     1-105              used in transfer ref 1-100 
000333   1030       executable     1-108              used in transfer ref 1-100 
000341   1040       executable     1-111              used in transfer ref 1-100 
000346   1050       executable     1-114              used in transfer ref 1-100 
000356   1060       executable     1-117              used in transfer ref 1-100 
000362   9999       executable     1-120              used in transfer ref 1-70 1-75 1-78 1-84 1-89 1-92 1-96 1-103 1-106 1-109 
                                                     1-112 1-115 1-118 

       LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC

       1-54 000075       1-66 000115       1-67 000136       1-68 000142       1-69 000144       1-70 000146
       1-71 000147       1-72 000147       1-73 000155       1-74 000157       1-75 000161       1-76 000162
       1-77 000162       1-78 000166       1-80 000167       1-81 000207       1-82 000212       1-83 000214
       1-84 000216       1-85 000217       1-86 000217       1-87 000225       1-88 000227       1-89 000231
       1-90 000232       1-91 000232       1-92 000236       1-94 000237       1-95 000257       1-96 000263
       1-98 000264      1-100 000305      1-102 000321      1-103 000325      1-105 000326      1-106 000332
      1-108 000333      1-109 000340      1-111 000341      1-112 000345      1-114 000346      1-115 000355
      1-117 000356      1-118 000361      1-120 000362      1-121 000362
					    Function to_i_trunc

  1   123 %options ckmpy, truncate;
  1   124 c     ========================================
  1   125 c     function to perform compile-time FORTRAN math resulting in integer value,
  1   126 c     and truncd conversions to integer
  1   127 c
  1   128 c     Written:  06/27/79 by Paul E. Smee
  1   129 c
  1   130 c     Modified:
  1   131 c     ========================================
  1   132 
  1   133       function to_i_trunc (i_dum)
  1   134 
  1   135       integer to_i_trunc
  1   136       integer conv_r_to_i_trunc, conv_dp_to_i_trunc, conv_cp_to_i_trunc, binop_i_i_trunc
  1   137 
  1   138       integer i_dum, i1, i2
  1   139       real r0
  1   140       double precision d0
  1   141       complex c0
  1   142       integer op_id
  1   143       integer error_code_1, error_code_2
  1   144 
  1   145       entry conv_r_to_i_trunc (r0, error_code_1)
  1   146           to_i_trunc = r0
  1   147           goto 9999
  1   148 
  1   149       entry conv_dp_to_i_trunc (d0, error_code_1)
  1   150           to_i_trunc = d0
  1   151           goto 9999
  1   152 
  1   153       entry conv_cp_to_i_trunc (c0, error_code_1)
  1   154           to_i_trunc = c0
  1   155           goto 9999
  1   156 
  1   157       entry binop_i_i_trunc (op_id, i1, i2, error_code_2)
  1   158 
  1   159           goto (1010, 1020, 1030, 1040, 1050, 1060), op_id
  1   160 
  1   161 1010      to_i_trunc = i1 + i2
  1   162           goto 9999
  1   163 
  1   164 1020      to_i_trunc = i1 - i2
  1   165           goto 9999
  1   166 
  1   167 1030      to_i_trunc = i1 * i2
  1   168           goto 9999
  1   169 
  1   170 1040      to_i_trunc = i1 / i2
  1   171           goto 9999
  1   172 
  1   173 1050      to_i_trunc = i1 ** i2
  1   174           goto 9999
  1   175 
  1   176 1060      to_i_trunc = - i1
  1   177           goto 9999
  1   178 
  1   179 9999  continue
  1   180       return
  1   181       end
					    Function to_i_trunc

	NAMES USED IN THIS PROGRAM UNIT

NAME       TYPE OF NAME        LOC          STORAGE   ATTRIBUTES AND REFERENCES

binop_i_i_trunc
           entry point         00000511     constant  integer on line 1-136 1-157 
c0                                          parameter position 1 complex ref 1-141 1-153 1-154 
conv_cp_to_i_trunc
           entry point         00000463     constant  integer on line 1-136 1-153 
conv_dp_to_i_trunc
           entry point         00000437     constant  integer on line 1-136 1-149 
conv_r_to_i_trunc
           entry point         00000412     constant  integer on line 1-136 1-145 
d0                                          parameter position 1 double precision ref 1-140 1-149 1-150 
i1                                          parameter position 2 integer ref 1-138 1-157 1-161 1-164 1-167 1-170 1-173 1-176 
i2                                          parameter position 3 integer ref 1-138 1-157 1-161 1-164 1-167 1-170 1-173 
op_id                                       parameter position 1 integer ref 1-142 1-157 1-159 
r0                                          parameter position 1 real ref 1-139 1-145 1-146 
to_i_trunc
           entry point         00000371     constant  integer on line 1-133 
to_i_trunc
                               00000130     automatic integer ref 1-133 1-135 1-146 1-150 1-154 1-161 1-164 1-167 1-170 1-173 
                                                     1-176 

NAMES DECLARED BUT NOT USED

error_code_1
                                            parameter position 2 integer declared 1-143 1-145 1-149 1-153 
error_code_2
                                            parameter position 4 integer declared 1-143 1-157 
i_dum                                       parameter position 1 integer declared 1-133 1-138 

LOC          LABEL  TYPE           LINE           REFERENCES

000541   1010       executable     1-161              used in transfer ref 1-159 
000546   1020       executable     1-164              used in transfer ref 1-159 
000553   1030       executable     1-167              used in transfer ref 1-159 
000561   1040       executable     1-170              used in transfer ref 1-159 
000566   1050       executable     1-173              used in transfer ref 1-159 
000576   1060       executable     1-176              used in transfer ref 1-159 
000602   9999       executable     1-179              used in transfer ref 1-147 1-151 1-155 1-162 1-165 1-168 1-171 1-174 1-177 

       LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC

      1-133 000365      1-145 000405      1-146 000426      1-147 000432      1-149 000433      1-150 000453
      1-151 000456      1-153 000457      1-154 000477      1-155 000503      1-157 000504      1-159 000525
      1-161 000541      1-162 000545      1-164 000546      1-165 000552      1-167 000553      1-168 000560
      1-170 000561      1-171 000565      1-173 000566      1-174 000575      1-176 000576      1-177 000601
      1-179 000602      1-180 000602
					    Function to_r_round

  1   182 %options round;
  1   183 c     ========================================
  1   184 c     function to perform compile-time FORTRAN math resulting in real values, rounded
  1   185 c
  1   186 c     Written:  06/06/79 by Paul E. Smee
  1   187 c
  1   188 c     Modified:
  1   189 c     ========================================
  1   190 
  1   191       function to_r_round (r_dum)
  1   192 
  1   193       real to_r_round
  1   194       real conv_i_to_r_round, conv_dp_to_r_round, conv_cp_to_r_round
  1   195       real binop_r_i_round, binop_r_r_round, binop_i_r_round
  1   196 
  1   197       integer i0, i1, i2
  1   198       real r_dum, r1, r2
  1   199       double precision d0
  1   200       complex c0
  1   201       integer op_id
  1   202       integer error_code_1, error_code_2
  1   203 
  1   204       entry conv_i_to_r_round (i0, error_code_1)
  1   205           to_r_round = i0
  1   206           goto 9999
  1   207 
  1   208       entry conv_dp_to_r_round (d0, error_code_1)
  1   209           to_r_round = d0
  1   210           goto 9999
  1   211 
  1   212       entry conv_cp_to_r_round (c0, error_code_1)
  1   213           to_r_round = c0
  1   214           goto 9999
  1   215 
  1   216       entry binop_r_i_round (op_id, r1, i2, error_code_2)
  1   217 
  1   218           goto (1010, 1020, 1030, 1040, 1050), op_id
  1   219 
  1   220 1010      to_r_round = r1 + i2
  1   221           goto 9999
  1   222 
  1   223 1020      to_r_round = r1 - i2
  1   224           goto 9999
  1   225 
  1   226 1030      to_r_round = r1 * i2
  1   227           goto 9999
  1   228 
  1   229 1040      to_r_round = r1 / i2
  1   230           goto 9999
  1   231 
  1   232 1050      to_r_round = r1 ** i2
  1   233           goto 9999
  1   234 
  1   235       entry binop_r_r_round (op_id, r1, r2, error_code_2)
  1   236 
  1   237           goto (2010, 2020, 2030, 2040, 2050, 2060), op_id
  1   238 
  1   239 2010      to_r_round = r1 + r2
  1   240           goto 9999
  1   241 
  1   242 2020      to_r_round = r1 - r2
  1   243           goto 9999
  1   244 
  1   245 2030      to_r_round = r1 * r2
  1   246           goto 9999
  1   247 
  1   248 2040      to_r_round = r1 / r2
  1   249           goto 9999
  1   250 
  1   251 2050      to_r_round = r1 ** r2
  1   252           goto 9999
  1   253 
  1   254 2060      to_r_round = - r1
  1   255           goto 9999
  1   256 
  1   257       entry binop_i_r_round (op_id, i1, r2, error_code_2)
  1   258 
  1   259           goto (3010, 3020, 3030, 3040, 3050), op_id
  1   260 
  1   261 3010      to_r_round = i1 + r2
  1   262           goto 9999
  1   263 
  1   264 3020      to_r_round = i1 - r2
  1   265           goto 9999
  1   266 
  1   267 3030      to_r_round = i1 * r2
  1   268           goto 9999
  1   269 
  1   270 3040      to_r_round = i1 / r2
  1   271           goto 9999
  1   272 
  1   273 3050      to_r_round = i1 ** r2
  1   274           goto 9999
  1   275 
  1   276 9999  continue
  1   277       return
  1   278       end
					    Function to_r_round

	NAMES USED IN THIS PROGRAM UNIT

NAME       TYPE OF NAME        LOC          STORAGE   ATTRIBUTES AND REFERENCES

binop_i_r_round
           entry point         00001121     constant  real on line 1-195 1-257 
binop_r_i_round
           entry point         00000727     constant  real on line 1-195 1-216 
binop_r_r_round
           entry point         00001023     constant  real on line 1-195 1-235 
c0                                          parameter position 1 complex ref 1-200 1-212 1-213 
conv_cp_to_r_round
           entry point         00000702     constant  real on line 1-194 1-212 
conv_dp_to_r_round
           entry point         00000657     constant  real on line 1-194 1-208 
conv_i_to_r_round
           entry point         00000632     constant  real on line 1-194 1-204 
d0                                          parameter position 1 double precision ref 1-199 1-208 1-209 
i0                                          parameter position 1 integer ref 1-197 1-204 1-205 
i1                                          parameter position 2 integer ref 1-197 1-257 1-261 1-264 1-267 1-270 1-273 
i2                                          parameter position 3 integer ref 1-197 1-216 1-220 1-223 1-226 1-229 1-232 
op_id                                       parameter position 1 integer ref 1-201 1-216 1-218 1-235 1-237 1-257 1-259 
r1                                          parameter position 2 real ref 1-198 1-216 1-220 1-223 1-226 1-229 1-232 1-235 1-239 
                                                     1-242 1-245 1-248 1-251 1-254 
r2                                          parameter position 3 real ref 1-198 1-235 1-239 1-242 1-245 1-248 1-251 1-257 1-261 
                                                     1-264 1-267 1-270 1-273 
to_r_round
           entry point         00000611     constant  real on line 1-191 
to_r_round
                               00000132     automatic real ref 1-191 1-193 1-205 1-209 1-213 1-220 1-223 1-226 1-229 1-232 1-239 
                                                     1-242 1-245 1-248 1-251 1-254 1-261 1-264 1-267 1-270 1-273 

NAMES DECLARED BUT NOT USED

error_code_1
                                            parameter position 2 integer declared 1-202 1-204 1-208 1-212 
error_code_2
                                            parameter position 4 integer declared 1-202 1-216 1-235 1-257 
r_dum                                       parameter position 1 real declared 1-191 1-198 

LOC          LABEL  TYPE           LINE           REFERENCES

000756   1010       executable     1-220              used in transfer ref 1-218 
000764   1020       executable     1-223              used in transfer ref 1-218 
000772   1030       executable     1-226              used in transfer ref 1-218 
001000   1040       executable     1-229              used in transfer ref 1-218 
001006   1050       executable     1-232              used in transfer ref 1-218 
001053   2010       executable     1-239              used in transfer ref 1-237 
001060   2020       executable     1-242              used in transfer ref 1-237 
001065   2030       executable     1-245              used in transfer ref 1-237 
001072   2040       executable     1-248              used in transfer ref 1-237 
001077   2050       executable     1-251              used in transfer ref 1-237 
001107   2060       executable     1-254              used in transfer ref 1-237 
001150   3010       executable     1-261              used in transfer ref 1-259 
001156   3020       executable     1-264              used in transfer ref 1-259 
001164   3030       executable     1-267              used in transfer ref 1-259 
001172   3040       executable     1-270              used in transfer ref 1-259 
001200   3050       executable     1-273              used in transfer ref 1-259 
001211   9999       executable     1-276              used in transfer ref 1-206 1-210 1-214 1-221 1-224 1-227 1-230 1-233 1-240 
                                                     1-243 1-246 1-249 1-252 1-255 1-262 1-265 1-268 1-271 1-274 

       LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC

      1-191 000605      1-204 000625      1-205 000646      1-206 000652      1-208 000653      1-209 000673
      1-210 000675      1-212 000676      1-213 000716      1-214 000721      1-216 000722      1-218 000743
      1-220 000756      1-221 000763      1-223 000764      1-224 000771      1-226 000772      1-227 000777
      1-229 001000      1-230 001005      1-232 001006      1-233 001015      1-235 001016      1-237 001037
      1-239 001053      1-240 001057      1-242 001060      1-243 001064      1-245 001065      1-246 001071
      1-248 001072      1-249 001076      1-251 001077      1-252 001106      1-254 001107      1-255 001113
      1-257 001114      1-259 001135      1-261 001150      1-262 001155      1-264 001156      1-265 001163
      1-267 001164      1-268 001171      1-270 001172      1-271 001177      1-273 001200      1-274 001210
      1-276 001211      1-277 001211
					    Function to_r_trunc

  1   279 %options truncate;
  1   280 c     ========================================
  1   281 c     function to perform compile-time FORTRAN math resulting in real values, truncd
  1   282 c
  1   283 c     Written:  06/06/79 by Paul E. Smee
  1   284 c
  1   285 c     Modified:
  1   286 c     ========================================
  1   287 
  1   288       function to_r_trunc (r_dum)
  1   289 
  1   290       real to_r_trunc
  1   291       real conv_i_to_r_trunc, conv_dp_to_r_trunc, conv_cp_to_r_trunc
  1   292       real binop_r_i_trunc, binop_r_r_trunc, binop_i_r_trunc
  1   293 
  1   294       integer i0, i1, i2
  1   295       real r_dum, r1, r2
  1   296       double precision d0
  1   297       complex c0
  1   298       integer op_id
  1   299       integer error_code_1, error_code_2
  1   300 
  1   301       entry conv_i_to_r_trunc (i0, error_code_1)
  1   302           to_r_trunc = i0
  1   303           goto 9999
  1   304 
  1   305       entry conv_dp_to_r_trunc (d0, error_code_1)
  1   306           to_r_trunc = d0
  1   307           goto 9999
  1   308 
  1   309       entry conv_cp_to_r_trunc (c0, error_code_1)
  1   310           to_r_trunc = c0
  1   311           goto 9999
  1   312 
  1   313       entry binop_r_i_trunc (op_id, r1, i2, error_code_2)
  1   314 
  1   315           goto (1010, 1020, 1030, 1040, 1050), op_id
  1   316 
  1   317 1010      to_r_trunc = r1 + i2
  1   318           goto 9999
  1   319 
  1   320 1020      to_r_trunc = r1 - i2
  1   321           goto 9999
  1   322 
  1   323 1030      to_r_trunc = r1 * i2
  1   324           goto 9999
  1   325 
  1   326 1040      to_r_trunc = r1 / i2
  1   327           goto 9999
  1   328 
  1   329 1050      to_r_trunc = r1 ** i2
  1   330           goto 9999
  1   331 
  1   332       entry binop_r_r_trunc (op_id, r1, r2, error_code_2)
  1   333 
  1   334           goto (2010, 2020, 2030, 2040, 2050, 2060), op_id
  1   335 
  1   336 2010      to_r_trunc = r1 + r2
  1   337           goto 9999
  1   338 
  1   339 2020      to_r_trunc = r1 - r2
  1   340           goto 9999
  1   341 
  1   342 2030      to_r_trunc = r1 * r2
  1   343           goto 9999
  1   344 
  1   345 2040      to_r_trunc = r1 / r2
  1   346           goto 9999
  1   347 
  1   348 2050      to_r_trunc = r1 ** r2
  1   349           goto 9999
  1   350 
  1   351 2060      to_r_trunc = - r1
  1   352           goto 9999
  1   353 
  1   354       entry binop_i_r_trunc (op_id, i1, r2, error_code_2)
  1   355 
  1   356           goto (3010, 3020, 3030, 3040, 3050), op_id
  1   357 
  1   358 3010      to_r_trunc = i1 + r2
  1   359           goto 9999
  1   360 
  1   361 3020      to_r_trunc = i1 - r2
  1   362           goto 9999
  1   363 
  1   364 3030      to_r_trunc = i1 * r2
  1   365           goto 9999
  1   366 
  1   367 3040      to_r_trunc = i1 / r2
  1   368           goto 9999
  1   369 
  1   370 3050      to_r_trunc = i1 ** r2
  1   371           goto 9999
  1   372 
  1   373 9999  continue
  1   374       return
  1   375       end
					    Function to_r_trunc

	NAMES USED IN THIS PROGRAM UNIT

NAME       TYPE OF NAME        LOC          STORAGE   ATTRIBUTES AND REFERENCES

binop_i_r_trunc
           entry point         00001530     constant  real on line 1-292 1-354 
binop_r_i_trunc
           entry point         00001336     constant  real on line 1-292 1-313 
binop_r_r_trunc
           entry point         00001432     constant  real on line 1-292 1-332 
c0                                          parameter position 1 complex ref 1-297 1-309 1-310 
conv_cp_to_r_trunc
           entry point         00001311     constant  real on line 1-291 1-309 
conv_dp_to_r_trunc
           entry point         00001266     constant  real on line 1-291 1-305 
conv_i_to_r_trunc
           entry point         00001241     constant  real on line 1-291 1-301 
d0                                          parameter position 1 double precision ref 1-296 1-305 1-306 
i0                                          parameter position 1 integer ref 1-294 1-301 1-302 
i1                                          parameter position 2 integer ref 1-294 1-354 1-358 1-361 1-364 1-367 1-370 
i2                                          parameter position 3 integer ref 1-294 1-313 1-317 1-320 1-323 1-326 1-329 
op_id                                       parameter position 1 integer ref 1-298 1-313 1-315 1-332 1-334 1-354 1-356 
r1                                          parameter position 2 real ref 1-295 1-313 1-317 1-320 1-323 1-326 1-329 1-332 1-336 
                                                     1-339 1-342 1-345 1-348 1-351 
r2                                          parameter position 3 real ref 1-295 1-332 1-336 1-339 1-342 1-345 1-348 1-354 1-358 
                                                     1-361 1-364 1-367 1-370 
to_r_trunc
           entry point         00001220     constant  real on line 1-288 
to_r_trunc
                               00000134     automatic real ref 1-288 1-290 1-302 1-306 1-310 1-317 1-320 1-323 1-326 1-329 1-336 
                                                     1-339 1-342 1-345 1-348 1-351 1-358 1-361 1-364 1-367 1-370 

NAMES DECLARED BUT NOT USED

error_code_1
                                            parameter position 2 integer declared 1-299 1-301 1-305 1-309 
error_code_2
                                            parameter position 4 integer declared 1-299 1-313 1-332 1-354 
r_dum                                       parameter position 1 real declared 1-288 1-295 

LOC          LABEL  TYPE           LINE           REFERENCES

001365   1010       executable     1-317              used in transfer ref 1-315 
001373   1020       executable     1-320              used in transfer ref 1-315 
001401   1030       executable     1-323              used in transfer ref 1-315 
001407   1040       executable     1-326              used in transfer ref 1-315 
001415   1050       executable     1-329              used in transfer ref 1-315 
001462   2010       executable     1-336              used in transfer ref 1-334 
001467   2020       executable     1-339              used in transfer ref 1-334 
001474   2030       executable     1-342              used in transfer ref 1-334 
001501   2040       executable     1-345              used in transfer ref 1-334 
001506   2050       executable     1-348              used in transfer ref 1-334 
001516   2060       executable     1-351              used in transfer ref 1-334 
001557   3010       executable     1-358              used in transfer ref 1-356 
001565   3020       executable     1-361              used in transfer ref 1-356 
001573   3030       executable     1-364              used in transfer ref 1-356 
001601   3040       executable     1-367              used in transfer ref 1-356 
001607   3050       executable     1-370              used in transfer ref 1-356 
001620   9999       executable     1-373              used in transfer ref 1-303 1-307 1-311 1-318 1-321 1-324 1-327 1-330 1-337 
                                                     1-340 1-343 1-346 1-349 1-352 1-359 1-362 1-365 1-368 1-371 

       LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC

      1-288 001214      1-301 001234      1-302 001255      1-303 001261      1-305 001262      1-306 001302
      1-307 001304      1-309 001305      1-310 001325      1-311 001330      1-313 001331      1-315 001352
      1-317 001365      1-318 001372      1-320 001373      1-321 001400      1-323 001401      1-324 001406
      1-326 001407      1-327 001414      1-329 001415      1-330 001424      1-332 001425      1-334 001446
      1-336 001462      1-337 001466      1-339 001467      1-340 001473      1-342 001474      1-343 001500
      1-345 001501      1-346 001505      1-348 001506      1-349 001515      1-351 001516      1-352 001522
      1-354 001523      1-356 001544      1-358 001557      1-359 001564      1-361 001565      1-362 001572
      1-364 001573      1-365 001600      1-367 001601      1-368 001606      1-370 001607      1-371 001617
      1-373 001620      1-374 001620
					    Function to_dp_round

  1   376 %options round;
  1   377 c     ========================================
  1   378 c     function to perform compile-time FORTRAN math resulting in dp values, rounded
  1   379 c
  1   380 c     Written:  06/06/79 by Paul E. Smee
  1   381 c
  1   382 c     Modified:
  1   383 c     ========================================
  1   384 
  1   385       function to_dp_round (d_dum)
  1   386 
  1   387       double precision to_dp_round
  1   388       double precision conv_i_to_dp_round, conv_r_to_dp_round, conv_cp_to_dp_round
  1   389       double precision binop_dp_i_round, binop_dp_r_round, binop_dp_dp_round
  1   390       double precision binop_r_dp_round, binop_i_dp_round
  1   391 
  1   392       integer i0, i1, i2
  1   393       real r0, r1, r2
  1   394       double precision d_dum, d1, d2
  1   395       complex c0
  1   396       integer op_id
  1   397       integer error_code_1, error_code_2
  1   398 
  1   399       entry conv_i_to_dp_round (i0, error_code_1)
  1   400           to_dp_round = i0
  1   401           goto 9999
  1   402 
  1   403       entry conv_r_to_dp_round (r0, error_code_1)
  1   404           to_dp_round = r0
  1   405           goto 9999
  1   406 
  1   407       entry conv_cp_to_dp_round (c0, error_code_1)
  1   408           to_dp_round = c0
  1   409           goto 9999
  1   410 
  1   411       entry binop_dp_i_round (op_id, d1, i2, error_code_2)
  1   412 
  1   413           goto (1010, 1020, 1030, 1040, 1050), op_id
  1   414 
  1   415 1010      to_dp_round = d1 + i2
  1   416           goto 9999
  1   417 
  1   418 1020      to_dp_round = d1 - i2
  1   419           goto 9999
  1   420 
  1   421 1030      to_dp_round = d1 * i2
  1   422           goto 9999
  1   423 
  1   424 1040      to_dp_round = d1 / i2
  1   425           goto 9999
  1   426 
  1   427 1050      to_dp_round = d1 ** i2
  1   428           goto 9999
  1   429 
  1   430       entry binop_dp_r_round (op_id, d1, r2, error_code_2)
  1   431 
  1   432           goto (2010, 2020, 2030, 2040, 2050), op_id
  1   433 
  1   434 2010      to_dp_round = d1 + r2
  1   435           goto 9999
  1   436 
  1   437 2020      to_dp_round = d1 - r2
  1   438           goto 9999
  1   439 
  1   440 2030      to_dp_round = d1 * r2
  1   441           goto 9999
  1   442 
  1   443 2040      to_dp_round = d1 / r2
  1   444           goto 9999
  1   445 
  1   446 2050      to_dp_round = d1 ** r2
  1   447           goto 9999
  1   448 
  1   449       entry binop_dp_dp_round (op_id, d1, d2, error_code_2)
  1   450 
  1   451           goto (3010, 3020, 3030, 3040, 3050, 3060), op_id
  1   452 
  1   453 3010      to_dp_round = d1 + d2
  1   454           goto 9999
  1   455 
  1   456 3020      to_dp_round = d1 - d2
  1   457           goto 9999
  1   458 
  1   459 3030      to_dp_round = d1 * d2
  1   460           goto 9999
  1   461 
  1   462 3040      to_dp_round = d1 / d2
  1   463           goto 9999
  1   464 
  1   465 3050      to_dp_round = d1 ** d2
  1   466           goto 9999
  1   467 
  1   468 3060      to_dp_round = - d1
  1   469           goto 9999
  1   470 
  1   471       entry binop_r_dp_round (op_id, r1, d2, error_code_2)
  1   472 
  1   473           goto (4010, 4020, 4030, 4040, 4050), op_id
  1   474 
  1   475 4010      to_dp_round = r1 + d2
  1   476           goto 9999
  1   477 
  1   478 4020      to_dp_round = r1 - d2
  1   479           goto 9999
  1   480 
  1   481 4030      to_dp_round = r1 * d2
  1   482           goto 9999
  1   483 
  1   484 4040      to_dp_round = r1 / d2
  1   485           goto 9999
  1   486 
  1   487 4050      to_dp_round = r1 ** d2
  1   488           goto 9999
  1   489 
  1   490       entry binop_i_dp_round (op_id, i1, d2, error_code_2)
  1   491 
  1   492           goto (5010, 5020, 5030, 5040, 5050), op_id
  1   493 
  1   494 5010      to_dp_round = i1 + d2
  1   495           goto 9999
  1   496 
  1   497 5020      to_dp_round = i1 - d2
  1   498           goto 9999
  1   499 
  1   500 5030      to_dp_round = i1 * d2
  1   501           goto 9999
  1   502 
  1   503 5040      to_dp_round = i1 / d2
  1   504           goto 9999
  1   505 
  1   506 5050      to_dp_round = i1 ** d2
  1   507           goto 9999
  1   508 
  1   509 9999  continue
  1   510       return
  1   511       end
					    Function to_dp_round

	NAMES USED IN THIS PROGRAM UNIT

NAME       TYPE OF NAME        LOC          STORAGE   ATTRIBUTES AND REFERENCES

binop_dp_dp_round
           entry point         00002131     constant  double precision on line 1-389 1-449 
binop_dp_i_round
           entry point         00001745     constant  double precision on line 1-389 1-411 
binop_dp_r_round
           entry point         00002041     constant  double precision on line 1-389 1-430 
binop_i_dp_round
           entry point         00002317     constant  double precision on line 1-390 1-490 
binop_r_dp_round
           entry point         00002227     constant  double precision on line 1-390 1-471 
c0                                          parameter position 1 complex ref 1-395 1-407 1-408 
conv_cp_to_dp_round
           entry point         00001720     constant  double precision on line 1-388 1-407 
conv_i_to_dp_round
           entry point         00001650     constant  double precision on line 1-388 1-399 
conv_r_to_dp_round
           entry point         00001675     constant  double precision on line 1-388 1-403 
d1                                          parameter position 2 double precision ref 1-394 1-411 1-415 1-418 1-421 1-424 1-427 
                                                     1-430 1-434 1-437 1-440 1-443 1-446 1-449 1-453 1-456 1-459 1-462 1-465 1-468 
d2                                          parameter position 3 double precision ref 1-394 1-449 1-453 1-456 1-459 1-462 1-465 
                                                     1-471 1-475 1-478 1-481 1-484 1-487 1-490 1-494 1-497 1-500 1-503 1-506 
i0                                          parameter position 1 integer ref 1-392 1-399 1-400 
i1                                          parameter position 2 integer ref 1-392 1-490 1-494 1-497 1-500 1-503 1-506 
i2                                          parameter position 3 integer ref 1-392 1-411 1-415 1-418 1-421 1-424 1-427 
op_id                                       parameter position 1 integer ref 1-396 1-411 1-413 1-430 1-432 1-449 1-451 1-471 1-473 
                                                     1-490 1-492 
r0                                          parameter position 1 real ref 1-393 1-403 1-404 
r1                                          parameter position 2 real ref 1-393 1-471 1-475 1-478 1-481 1-484 1-487 
r2                                          parameter position 3 real ref 1-393 1-430 1-434 1-437 1-440 1-443 1-446 
to_dp_round
           entry point         00001627     constant  double precision on line 1-385 
to_dp_round
                               00000136     automatic double precision ref 1-385 1-387 1-400 1-404 1-408 1-415 1-418 1-421 1-424 
                                                     1-427 1-434 1-437 1-440 1-443 1-446 1-453 1-456 1-459 1-462 1-465 1-468 1-475 
                                                     1-478 1-481 1-484 1-487 1-494 1-497 1-500 1-503 1-506 

NAMES DECLARED BUT NOT USED

d_dum                                       parameter position 1 double precision declared 1-385 1-394 
error_code_1
                                            parameter position 2 integer declared 1-397 1-399 1-403 1-407 
error_code_2
                                            parameter position 4 integer declared 1-397 1-411 1-430 1-449 1-471 1-490 

LOC          LABEL  TYPE           LINE           REFERENCES

001774   1010       executable     1-415              used in transfer ref 1-413 
002002   1020       executable     1-418              used in transfer ref 1-413 
002010   1030       executable     1-421              used in transfer ref 1-413 
002016   1040       executable     1-424              used in transfer ref 1-413 
002024   1050       executable     1-427              used in transfer ref 1-413 
002070   2010       executable     1-434              used in transfer ref 1-432 
002075   2020       executable     1-437              used in transfer ref 1-432 
002102   2030       executable     1-440              used in transfer ref 1-432 
002107   2040       executable     1-443              used in transfer ref 1-432 
002114   2050       executable     1-446              used in transfer ref 1-432 
002161   3010       executable     1-453              used in transfer ref 1-451 
002166   3020       executable     1-456              used in transfer ref 1-451 
002173   3030       executable     1-459              used in transfer ref 1-451 
002200   3040       executable     1-462              used in transfer ref 1-451 
002205   3050       executable     1-465              used in transfer ref 1-451 
002215   3060       executable     1-468              used in transfer ref 1-451 
002256   4010       executable     1-475              used in transfer ref 1-473 
002263   4020       executable     1-478              used in transfer ref 1-473 
002270   4030       executable     1-481              used in transfer ref 1-473 
002275   4040       executable     1-484              used in transfer ref 1-473 
002302   4050       executable     1-487              used in transfer ref 1-473 
002346   5010       executable     1-494              used in transfer ref 1-492 
002354   5020       executable     1-497              used in transfer ref 1-492 
002362   5030       executable     1-500              used in transfer ref 1-492 
002370   5040       executable     1-503              used in transfer ref 1-492 
002376   5050       executable     1-506              used in transfer ref 1-492 
002407   9999       executable     1-509              used in transfer ref 1-401 1-405 1-409 1-416 1-419 1-422 1-425 1-428 1-435 
                                                     1-438 1-441 1-444 1-447 1-454 1-457 1-460 1-463 1-466 1-469 1-476 1-479 1-482 
                                                     1-485 1-488 1-495 1-498 1-501 1-504 1-507 

       LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC

      1-385 001623      1-399 001643      1-400 001664      1-401 001670      1-403 001671      1-404 001711
      1-405 001713      1-407 001714      1-408 001734      1-409 001737      1-411 001740      1-413 001761
      1-415 001774      1-416 002001      1-418 002002      1-419 002007      1-421 002010      1-422 002015
      1-424 002016      1-425 002023      1-427 002024      1-428 002033      1-430 002034      1-432 002055
      1-434 002070      1-435 002074      1-437 002075      1-438 002101      1-440 002102      1-441 002106
      1-443 002107      1-444 002113      1-446 002114      1-447 002123      1-449 002124      1-451 002145
      1-453 002161      1-454 002165      1-456 002166      1-457 002172      1-459 002173      1-460 002177
      1-462 002200      1-463 002204      1-465 002205      1-466 002214      1-468 002215      1-469 002221
      1-471 002222      1-473 002243      1-475 002256      1-476 002262      1-478 002263      1-479 002267
      1-481 002270      1-482 002274      1-484 002275      1-485 002301      1-487 002302      1-488 002311
      1-490 002312      1-492 002333      1-494 002346      1-495 002353      1-497 002354      1-498 002361
      1-500 002362      1-501 002367      1-503 002370      1-504 002375      1-506 002376      1-507 002406
      1-509 002407      1-510 002407
					    Function to_dp_trunc

  1   512 %options truncate;
  1   513 c     ========================================
  1   514 c     function to perform compile-time FORTRAN math resulting in dp values, truncd
  1   515 c
  1   516 c     Written:  06/06/79 by Paul E. Smee
  1   517 c
  1   518 c     Modified:
  1   519 c     ========================================
  1   520 
  1   521       function to_dp_trunc (d_dum)
  1   522 
  1   523       double precision to_dp_trunc
  1   524       double precision conv_i_to_dp_trunc, conv_r_to_dp_trunc, conv_cp_to_dp_trunc
  1   525       double precision binop_dp_i_trunc, binop_dp_r_trunc, binop_dp_dp_trunc
  1   526       double precision binop_r_dp_trunc, binop_i_dp_trunc
  1   527 
  1   528       integer i0, i1, i2
  1   529       real r0, r1, r2
  1   530       double precision d_dum, d1, d2
  1   531       complex c0
  1   532       integer op_id
  1   533       integer error_code_1, error_code_2
  1   534 
  1   535       entry conv_i_to_dp_trunc (i0, error_code_1)
  1   536           to_dp_trunc = i0
  1   537           goto 9999
  1   538 
  1   539       entry conv_r_to_dp_trunc (r0, error_code_1)
  1   540           to_dp_trunc = r0
  1   541           goto 9999
  1   542 
  1   543       entry conv_cp_to_dp_trunc (c0, error_code_1)
  1   544           to_dp_trunc = c0
  1   545           goto 9999
  1   546 
  1   547       entry binop_dp_i_trunc (op_id, d1, i2, error_code_2)
  1   548 
  1   549           goto (1010, 1020, 1030, 1040, 1050), op_id
  1   550 
  1   551 1010      to_dp_trunc = d1 + i2
  1   552           goto 9999
  1   553 
  1   554 1020      to_dp_trunc = d1 - i2
  1   555           goto 9999
  1   556 
  1   557 1030      to_dp_trunc = d1 * i2
  1   558           goto 9999
  1   559 
  1   560 1040      to_dp_trunc = d1 / i2
  1   561           goto 9999
  1   562 
  1   563 1050      to_dp_trunc = d1 ** i2
  1   564           goto 9999
  1   565 
  1   566       entry binop_dp_r_trunc (op_id, d1, r2, error_code_2)
  1   567 
  1   568           goto (2010, 2020, 2030, 2040, 2050), op_id
  1   569 
  1   570 2010      to_dp_trunc = d1 + r2
  1   571           goto 9999
  1   572 
  1   573 2020      to_dp_trunc = d1 - r2
  1   574           goto 9999
  1   575 
  1   576 2030      to_dp_trunc = d1 * r2
  1   577           goto 9999
  1   578 
  1   579 2040      to_dp_trunc = d1 / r2
  1   580           goto 9999
  1   581 
  1   582 2050      to_dp_trunc = d1 ** r2
  1   583           goto 9999
  1   584 
  1   585       entry binop_dp_dp_trunc (op_id, d1, d2, error_code_2)
  1   586 
  1   587           goto (3010, 3020, 3030, 3040, 3050, 3060), op_id
  1   588 
  1   589 3010      to_dp_trunc = d1 + d2
  1   590           goto 9999
  1   591 
  1   592 3020      to_dp_trunc = d1 - d2
  1   593           goto 9999
  1   594 
  1   595 3030      to_dp_trunc = d1 * d2
  1   596           goto 9999
  1   597 
  1   598 3040      to_dp_trunc = d1 / d2
  1   599           goto 9999
  1   600 
  1   601 3050      to_dp_trunc = d1 ** d2
  1   602           goto 9999
  1   603 
  1   604 3060      to_dp_trunc = - d1
  1   605           goto 9999
  1   606 
  1   607       entry binop_r_dp_trunc (op_id, r1, d2, error_code_2)
  1   608 
  1   609           goto (4010, 4020, 4030, 4040, 4050), op_id
  1   610 
  1   611 4010      to_dp_trunc = r1 + d2
  1   612           goto 9999
  1   613 
  1   614 4020      to_dp_trunc = r1 - d2
  1   615           goto 9999
  1   616 
  1   617 4030      to_dp_trunc = r1 * d2
  1   618           goto 9999
  1   619 
  1   620 4040      to_dp_trunc = r1 / d2
  1   621           goto 9999
  1   622 
  1   623 4050      to_dp_trunc = r1 ** d2
  1   624           goto 9999
  1   625 
  1   626       entry binop_i_dp_trunc (op_id, i1, d2, error_code_2)
  1   627 
  1   628           goto (5010, 5020, 5030, 5040, 5050), op_id
  1   629 
  1   630 5010      to_dp_trunc = i1 + d2
  1   631           goto 9999
  1   632 
  1   633 5020      to_dp_trunc = i1 - d2
  1   634           goto 9999
  1   635 
  1   636 5030      to_dp_trunc = i1 * d2
  1   637           goto 9999
  1   638 
  1   639 5040      to_dp_trunc = i1 / d2
  1   640           goto 9999
  1   641 
  1   642 5050      to_dp_trunc = i1 ** d2
  1   643           goto 9999
  1   644 
  1   645 9999  continue
  1   646       return
  1   647       end
					    Function to_dp_trunc

	NAMES USED IN THIS PROGRAM UNIT

NAME       TYPE OF NAME        LOC          STORAGE   ATTRIBUTES AND REFERENCES

binop_dp_dp_trunc
           entry point         00002720     constant  double precision on line 1-525 1-585 
binop_dp_i_trunc
           entry point         00002534     constant  double precision on line 1-525 1-547 
binop_dp_r_trunc
           entry point         00002630     constant  double precision on line 1-525 1-566 
binop_i_dp_trunc
           entry point         00003106     constant  double precision on line 1-526 1-626 
binop_r_dp_trunc
           entry point         00003016     constant  double precision on line 1-526 1-607 
c0                                          parameter position 1 complex ref 1-531 1-543 1-544 
conv_cp_to_dp_trunc
           entry point         00002507     constant  double precision on line 1-524 1-543 
conv_i_to_dp_trunc
           entry point         00002437     constant  double precision on line 1-524 1-535 
conv_r_to_dp_trunc
           entry point         00002464     constant  double precision on line 1-524 1-539 
d1                                          parameter position 2 double precision ref 1-530 1-547 1-551 1-554 1-557 1-560 1-563 
                                                     1-566 1-570 1-573 1-576 1-579 1-582 1-585 1-589 1-592 1-595 1-598 1-601 1-604 
d2                                          parameter position 3 double precision ref 1-530 1-585 1-589 1-592 1-595 1-598 1-601 
                                                     1-607 1-611 1-614 1-617 1-620 1-623 1-626 1-630 1-633 1-636 1-639 1-642 
i0                                          parameter position 1 integer ref 1-528 1-535 1-536 
i1                                          parameter position 2 integer ref 1-528 1-626 1-630 1-633 1-636 1-639 1-642 
i2                                          parameter position 3 integer ref 1-528 1-547 1-551 1-554 1-557 1-560 1-563 
op_id                                       parameter position 1 integer ref 1-532 1-547 1-549 1-566 1-568 1-585 1-587 1-607 1-609 
                                                     1-626 1-628 
r0                                          parameter position 1 real ref 1-529 1-539 1-540 
r1                                          parameter position 2 real ref 1-529 1-607 1-611 1-614 1-617 1-620 1-623 
r2                                          parameter position 3 real ref 1-529 1-566 1-570 1-573 1-576 1-579 1-582 
to_dp_trunc
           entry point         00002416     constant  double precision on line 1-521 
to_dp_trunc
                               00000140     automatic double precision ref 1-521 1-523 1-536 1-540 1-544 1-551 1-554 1-557 1-560 
                                                     1-563 1-570 1-573 1-576 1-579 1-582 1-589 1-592 1-595 1-598 1-601 1-604 1-611 
                                                     1-614 1-617 1-620 1-623 1-630 1-633 1-636 1-639 1-642 

NAMES DECLARED BUT NOT USED

d_dum                                       parameter position 1 double precision declared 1-521 1-530 
error_code_1
                                            parameter position 2 integer declared 1-533 1-535 1-539 1-543 
error_code_2
                                            parameter position 4 integer declared 1-533 1-547 1-566 1-585 1-607 1-626 

LOC          LABEL  TYPE           LINE           REFERENCES

002563   1010       executable     1-551              used in transfer ref 1-549 
002571   1020       executable     1-554              used in transfer ref 1-549 
002577   1030       executable     1-557              used in transfer ref 1-549 
002605   1040       executable     1-560              used in transfer ref 1-549 
002613   1050       executable     1-563              used in transfer ref 1-549 
002657   2010       executable     1-570              used in transfer ref 1-568 
002664   2020       executable     1-573              used in transfer ref 1-568 
002671   2030       executable     1-576              used in transfer ref 1-568 
002676   2040       executable     1-579              used in transfer ref 1-568 
002703   2050       executable     1-582              used in transfer ref 1-568 
002750   3010       executable     1-589              used in transfer ref 1-587 
002755   3020       executable     1-592              used in transfer ref 1-587 
002762   3030       executable     1-595              used in transfer ref 1-587 
002767   3040       executable     1-598              used in transfer ref 1-587 
002774   3050       executable     1-601              used in transfer ref 1-587 
003004   3060       executable     1-604              used in transfer ref 1-587 
003045   4010       executable     1-611              used in transfer ref 1-609 
003052   4020       executable     1-614              used in transfer ref 1-609 
003057   4030       executable     1-617              used in transfer ref 1-609 
003064   4040       executable     1-620              used in transfer ref 1-609 
003071   4050       executable     1-623              used in transfer ref 1-609 
003135   5010       executable     1-630              used in transfer ref 1-628 
003143   5020       executable     1-633              used in transfer ref 1-628 
003151   5030       executable     1-636              used in transfer ref 1-628 
003157   5040       executable     1-639              used in transfer ref 1-628 
003165   5050       executable     1-642              used in transfer ref 1-628 
003176   9999       executable     1-645              used in transfer ref 1-537 1-541 1-545 1-552 1-555 1-558 1-561 1-564 1-571 
                                                     1-574 1-577 1-580 1-583 1-590 1-593 1-596 1-599 1-602 1-605 1-612 1-615 1-618 
                                                     1-621 1-624 1-631 1-634 1-637 1-640 1-643 

       LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC

      1-521 002412      1-535 002432      1-536 002453      1-537 002457      1-539 002460      1-540 002500
      1-541 002502      1-543 002503      1-544 002523      1-545 002526      1-547 002527      1-549 002550
      1-551 002563      1-552 002570      1-554 002571      1-555 002576      1-557 002577      1-558 002604
      1-560 002605      1-561 002612      1-563 002613      1-564 002622      1-566 002623      1-568 002644
      1-570 002657      1-571 002663      1-573 002664      1-574 002670      1-576 002671      1-577 002675
      1-579 002676      1-580 002702      1-582 002703      1-583 002712      1-585 002713      1-587 002734
      1-589 002750      1-590 002754      1-592 002755      1-593 002761      1-595 002762      1-596 002766
      1-598 002767      1-599 002773      1-601 002774      1-602 003003      1-604 003004      1-605 003010
      1-607 003011      1-609 003032      1-611 003045      1-612 003051      1-614 003052      1-615 003056
      1-617 003057      1-618 003063      1-620 003064      1-621 003070      1-623 003071      1-624 003100
      1-626 003101      1-628 003122      1-630 003135      1-631 003142      1-633 003143      1-634 003150
      1-636 003151      1-637 003156      1-639 003157      1-640 003164      1-642 003165      1-643 003175
      1-645 003176      1-646 003176
					    Function to_cp_round

  1   648 %options round;
  1   649 c     ========================================
  1   650 c     function to perform compile-time FORTRAN math resulting in complex value, rounded
  1   651 c
  1   652 c     Written:  06/07/79 by Paul E. Smee
  1   653 c
  1   654 c     Modified:
  1   655 c     ========================================
  1   656 
  1   657       function to_cp_round (c_dum)
  1   658 
  1   659       complex to_cp_round
  1   660       complex conv_i_to_cp_round, conv_r_to_cp_round, conv_dp_to_cp_round
  1   661       complex binop_cp_i_round, binop_cp_r_round, binop_cp_dp_round
  1   662       complex binop_cp_cp_round, binop_dp_cp_round, binop_r_cp_round
  1   663       complex binop_i_cp_round
  1   664 
  1   665       integer i0, i1, i2
  1   666       real r0, r1, r2
  1   667       double precision d0, d1, d2
  1   668       complex c_dum, c1, c2
  1   669       integer op_id
  1   670       integer error_code_1, error_code_2
  1   671 
  1   672       entry conv_i_to_cp_round (i0, error_code_1)
  1   673           to_cp_round = i0
  1   674           goto 9999
  1   675 
  1   676       entry conv_r_to_cp_round (r0, error_code_1)
  1   677           to_cp_round = r0
  1   678           goto 9999
  1   679 
  1   680       entry conv_dp_to_cp_round (d0, error_code_1)
  1   681           to_cp_round = d0
  1   682           goto 9999
  1   683 
  1   684       entry binop_cp_i_round (op_id, c1, i2, error_code_2)
  1   685 
  1   686           goto (1010, 1020, 1030, 1040, 1050), op_id
  1   687 
  1   688 1010      to_cp_round = c1 + i2
  1   689           goto 9999
  1   690 
  1   691 1020      to_cp_round = c1 - i2
  1   692           goto 9999
  1   693 
  1   694 1030      to_cp_round = c1 * i2
  1   695           goto 9999
  1   696 
  1   697 1040      to_cp_round = c1 / i2
  1   698           goto 9999
  1   699 
  1   700 1050      to_cp_round = c1 ** i2
  1   701           goto 9999
  1   702 
  1   703       entry binop_cp_r_round (op_id, c1, r2, error_code_2)
  1   704 
  1   705           goto (2010, 2020, 2030, 2040, 2050), op_id
  1   706 
  1   707 2010      to_cp_round = c1 + r2
  1   708           goto 9999
  1   709 
  1   710 2020      to_cp_round = c1 - r2
  1   711           goto 9999
  1   712 
  1   713 2030      to_cp_round = c1 * r2
  1   714           goto 9999
  1   715 
  1   716 2040      to_cp_round = c1 / r2
  1   717           goto 9999
  1   718 
  1   719 2050      to_cp_round = c1 ** r2
  1   720           goto 9999
  1   721 
  1   722       entry binop_cp_dp_round (op_id, c1, d2, error_code_2)
  1   723 
  1   724           goto (3010, 3020, 3030, 3040, 3050), op_id
  1   725 
  1   726 3010      to_cp_round = c1 + d2
  1   727           goto 9999
  1   728 
  1   729 3020      to_cp_round = c1 - d2
  1   730           goto 9999
  1   731 
  1   732 3030      to_cp_round = c1 * d2
  1   733           goto 9999
  1   734 
  1   735 3040      to_cp_round = c1 / d2
  1   736           goto 9999
  1   737 
  1   738 3050      to_cp_round = c1 ** d2
  1   739           goto 9999
  1   740 
  1   741       entry binop_cp_cp_round (op_id, c1, c2, error_code_2)
  1   742 
  1   743           goto (4010, 4020, 4030, 4040, 4050, 4060), op_id
  1   744 
  1   745 4010      to_cp_round = c1 + c2
  1   746           goto 9999
  1   747 
  1   748 4020      to_cp_round = c1 - c2
  1   749           goto 9999
  1   750 
  1   751 4030      to_cp_round = c1 * c2
  1   752           goto 9999
  1   753 
  1   754 4040      to_cp_round = c1 / c2
  1   755           goto 9999
  1   756 
  1   757 4050      to_cp_round = c1 ** c2
  1   758           goto 9999
  1   759 
  1   760 4060      to_cp_round = - c1
  1   761           goto 9999
  1   762 
  1   763       entry binop_dp_cp_round (op_id, d1, c2, error_code_2)
  1   764 
  1   765           goto (5010, 5020, 5030, 5040, 5050), op_id
  1   766 
  1   767 5010      to_cp_round = d1 + c2
  1   768           goto 9999
  1   769 
  1   770 5020      to_cp_round = d1 - c2
  1   771           goto 9999
  1   772 
  1   773 5030      to_cp_round = d1 * c2
  1   774           goto 9999
  1   775 
  1   776 5040      to_cp_round = d1 / c2
  1   777           goto 9999
  1   778 
  1   779 5050      to_cp_round = d1 ** c2
  1   780           goto 9999
  1   781 
  1   782       entry binop_r_cp_round (op_id, r1, c2, error_code_2)
  1   783 
  1   784           goto (6010, 6020, 6030, 6040, 6050), op_id
  1   785 
  1   786 6010      to_cp_round = r1 + c2
  1   787           goto 9999
  1   788 
  1   789 6020      to_cp_round = r1 - c2
  1   790           goto 9999
  1   791 
  1   792 6030      to_cp_round = r1 * c2
  1   793           goto 9999
  1   794 
  1   795 6040      to_cp_round = r1 / c2
  1   796           goto 9999
  1   797 
  1   798 6050      to_cp_round = r1 ** c2
  1   799           goto 9999
  1   800 
  1   801       entry binop_i_cp_round (op_id, i1, c2, error_code_2)
  1   802 
  1   803           goto (7010, 7020, 7030, 7040, 7050), op_id
  1   804 
  1   805 7010      to_cp_round = i1 + c2
  1   806           goto 9999
  1   807 
  1   808 7020      to_cp_round = i1 - c2
  1   809           goto 9999
  1   810 
  1   811 7030      to_cp_round = i1 * c2
  1   812           goto 9999
  1   813 
  1   814 7040      to_cp_round = i1 / c2
  1   815           goto 9999
  1   816 
  1   817 7050      to_cp_round = i1 ** c2
  1   818           goto 9999
  1   819 
  1   820 9999  continue
  1   821       return
  1   822       end
					    Function to_cp_round

	NAMES USED IN THIS PROGRAM UNIT

NAME       TYPE OF NAME        LOC          STORAGE   ATTRIBUTES AND REFERENCES

binop_cp_cp_round
           entry point         00003733     constant  complex on line 1-662 1-741 
binop_cp_dp_round
           entry point         00003606     constant  complex on line 1-661 1-722 
binop_cp_i_round
           entry point         00003330     constant  complex on line 1-661 1-684 
binop_cp_r_round
           entry point         00003463     constant  complex on line 1-661 1-703 
binop_dp_cp_round
           entry point         00004066     constant  complex on line 1-662 1-763 
binop_i_cp_round
           entry point         00004330     constant  complex on line 1-663 1-801 
binop_r_cp_round
           entry point         00004211     constant  complex on line 1-662 1-782 
c1                                          parameter position 2 complex ref 1-668 1-684 1-688 1-691 1-694 1-697 1-700 1-703 1-707 
                                                     1-710 1-713 1-716 1-719 1-722 1-726 1-729 1-732 1-735 1-738 1-741 1-745 1-748 
                                                     1-751 1-754 1-757 1-760 
c2                                          parameter position 3 complex ref 1-668 1-741 1-745 1-748 1-751 1-754 1-757 1-763 1-767 
                                                     1-770 1-773 1-776 1-779 1-782 1-786 1-789 1-792 1-795 1-798 1-801 1-805 1-808 
                                                     1-811 1-814 1-817 
conv_dp_to_cp_round
           entry point         00003302     constant  complex on line 1-660 1-680 
conv_i_to_cp_round
           entry point         00003226     constant  complex on line 1-660 1-672 
conv_r_to_cp_round
           entry point         00003255     constant  complex on line 1-660 1-676 
d0                                          parameter position 1 double precision ref 1-667 1-680 1-681 
d1                                          parameter position 2 double precision ref 1-667 1-763 1-767 1-770 1-773 1-776 1-779 
d2                                          parameter position 3 double precision ref 1-667 1-722 1-726 1-729 1-732 1-735 1-738 
i0                                          parameter position 1 integer ref 1-665 1-672 1-673 
i1                                          parameter position 2 integer ref 1-665 1-801 1-805 1-808 1-811 1-814 1-817 
i2                                          parameter position 3 integer ref 1-665 1-684 1-688 1-691 1-694 1-697 1-700 
op_id                                       parameter position 1 integer ref 1-669 1-684 1-686 1-703 1-705 1-722 1-724 1-741 1-743 
                                                     1-763 1-765 1-782 1-784 1-801 1-803 
r0                                          parameter position 1 real ref 1-666 1-676 1-677 
r1                                          parameter position 2 real ref 1-666 1-782 1-786 1-789 1-792 1-795 1-798 
r2                                          parameter position 3 real ref 1-666 1-703 1-707 1-710 1-713 1-716 1-719 
to_cp_round
           entry point         00003205     constant  complex on line 1-657 
to_cp_round
                               00000142     automatic complex ref 1-657 1-659 1-673 1-677 1-681 1-688 1-691 1-694 1-697 1-700 
                                                     1-707 1-710 1-713 1-716 1-719 1-726 1-729 1-732 1-735 1-738 1-745 1-748 1-751 
                                                     1-754 1-757 1-760 1-767 1-770 1-773 1-776 1-779 1-786 1-789 1-792 1-795 1-798 
                                                     1-805 1-808 1-811 1-814 1-817 

NAMES DECLARED BUT NOT USED

c_dum                                       parameter position 1 complex declared 1-657 1-668 
error_code_1
                                            parameter position 2 integer declared 1-670 1-672 1-676 1-680 
error_code_2
                                            parameter position 4 integer declared 1-670 1-684 1-703 1-722 1-741 1-763 1-782 1-801 

LOC          LABEL  TYPE           LINE           REFERENCES

003357   1010       executable     1-688              used in transfer ref 1-686 
003372   1020       executable     1-691              used in transfer ref 1-686 
003405   1030       executable     1-694              used in transfer ref 1-686 
003422   1040       executable     1-697              used in transfer ref 1-686 
003437   1050       executable     1-700              used in transfer ref 1-686 
003512   2010       executable     1-707              used in transfer ref 1-705 
003524   2020       executable     1-710              used in transfer ref 1-705 
003536   2030       executable     1-713              used in transfer ref 1-705 
003551   2040       executable     1-716              used in transfer ref 1-705 
003564   2050       executable     1-719              used in transfer ref 1-705 
003635   3010       executable     1-726              used in transfer ref 1-724 
003647   3020       executable     1-729              used in transfer ref 1-724 
003661   3030       executable     1-732              used in transfer ref 1-724 
003674   3040       executable     1-735              used in transfer ref 1-724 
003707   3050       executable     1-738              used in transfer ref 1-724 
003763   4010       executable     1-745              used in transfer ref 1-743 
003777   4020       executable     1-748              used in transfer ref 1-743 
004013   4030       executable     1-751              used in transfer ref 1-743 
004023   4040       executable     1-754              used in transfer ref 1-743 
004033   4050       executable     1-757              used in transfer ref 1-743 
004046   4060       executable     1-760              used in transfer ref 1-743 
004115   5010       executable     1-767              used in transfer ref 1-765 
004127   5020       executable     1-770              used in transfer ref 1-765 
004142   5030       executable     1-773              used in transfer ref 1-765 
004155   5040       executable     1-776              used in transfer ref 1-765 
004170   5050       executable     1-779              used in transfer ref 1-765 
004240   6010       executable     1-786              used in transfer ref 1-784 
004252   6020       executable     1-789              used in transfer ref 1-784 
004265   6030       executable     1-792              used in transfer ref 1-784 
004300   6040       executable     1-795              used in transfer ref 1-784 
004311   6050       executable     1-798              used in transfer ref 1-784 
004357   7010       executable     1-805              used in transfer ref 1-803 
004372   7020       executable     1-808              used in transfer ref 1-803 
004406   7030       executable     1-811              used in transfer ref 1-803 
004423   7040       executable     1-814              used in transfer ref 1-803 
004437   7050       executable     1-817              used in transfer ref 1-803 
004455   9999       executable     1-820              used in transfer ref 1-674 1-678 1-682 1-689 1-692 1-695 1-698 1-701 1-708 
                                                     1-711 1-714 1-717 1-720 1-727 1-730 1-733 1-736 1-739 1-746 1-749 1-752 1-755 
                                                     1-758 1-761 1-768 1-771 1-774 1-777 1-780 1-787 1-790 1-793 1-796 1-799 1-806 
                                                     1-809 1-812 1-815 1-818 

       LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC

      1-657 003201      1-672 003221      1-673 003242      1-674 003250      1-676 003251      1-677 003271
      1-678 003275      1-680 003276      1-681 003316      1-682 003322      1-684 003323      1-686 003344
      1-688 003357      1-689 003371      1-691 003372      1-692 003404      1-694 003405      1-695 003421
      1-697 003422      1-698 003436      1-700 003437      1-701 003455      1-703 003456      1-705 003477
      1-707 003512      1-708 003523      1-710 003524      1-711 003535      1-713 003536      1-714 003550
      1-716 003551      1-717 003563      1-719 003564      1-720 003600      1-722 003601      1-724 003622
      1-726 003635      1-727 003646      1-729 003647      1-730 003660      1-732 003661      1-733 003673
      1-735 003674      1-736 003706      1-738 003707      1-739 003725      1-741 003726      1-743 003747
      1-745 003763      1-746 003776      1-748 003777      1-749 004012      1-751 004013      1-752 004022
      1-754 004023      1-755 004032      1-757 004033      1-758 004045      1-760 004046      1-761 004060
      1-763 004061      1-765 004102      1-767 004115      1-768 004126      1-770 004127      1-771 004141
      1-773 004142      1-774 004154      1-776 004155      1-777 004167      1-779 004170      1-780 004203
      1-782 004204      1-784 004225      1-786 004240      1-787 004251      1-789 004252      1-790 004264
      1-792 004265      1-793 004277      1-795 004300      1-796 004310      1-798 004311      1-799 004322
      1-801 004323      1-803 004344      1-805 004357      1-806 004371      1-808 004372      1-809 004405
      1-811 004406      1-812 004422      1-814 004423      1-815 004436      1-817 004437      1-818 004454
      1-820 004455      1-821 004455
					    Function to_cp_trunc

  1   823 %options truncate;
  1   824 c     ========================================
  1   825 c     function to perform compile-time FORTRAN math resulting in complex value, truncd
  1   826 c
  1   827 c     Written:  06/07/79 by Paul E. Smee
  1   828 c
  1   829 c     Modified:
  1   830 c     ========================================
  1   831 
  1   832       function to_cp_trunc (c_dum)
  1   833 
  1   834       complex to_cp_trunc
  1   835       complex conv_i_to_cp_trunc, conv_r_to_cp_trunc, conv_dp_to_cp_trunc
  1   836       complex binop_cp_i_trunc, binop_cp_r_trunc, binop_cp_dp_trunc
  1   837       complex binop_cp_cp_trunc, binop_dp_cp_trunc, binop_r_cp_trunc
  1   838       complex binop_i_cp_trunc
  1   839 
  1   840       integer i0, i1, i2
  1   841       real r0, r1, r2
  1   842       double precision d0, d1, d2
  1   843       complex c_dum, c1, c2
  1   844       integer op_id
  1   845       integer error_code_1, error_code_2
  1   846 
  1   847       entry conv_i_to_cp_trunc (i0, error_code_1)
  1   848           to_cp_trunc = i0
  1   849           goto 9999
  1   850 
  1   851       entry conv_r_to_cp_trunc (r0, error_code_1)
  1   852           to_cp_trunc = r0
  1   853           goto 9999
  1   854 
  1   855       entry conv_dp_to_cp_trunc (d0, error_code_1)
  1   856           to_cp_trunc = d0
  1   857           goto 9999
  1   858 
  1   859       entry binop_cp_i_trunc (op_id, c1, i2, error_code_2)
  1   860 
  1   861           goto (1010, 1020, 1030, 1040, 1050), op_id
  1   862 
  1   863 1010      to_cp_trunc = c1 + i2
  1   864           goto 9999
  1   865 
  1   866 1020      to_cp_trunc = c1 - i2
  1   867           goto 9999
  1   868 
  1   869 1030      to_cp_trunc = c1 * i2
  1   870           goto 9999
  1   871 
  1   872 1040      to_cp_trunc = c1 / i2
  1   873           goto 9999
  1   874 
  1   875 1050      to_cp_trunc = c1 ** i2
  1   876           goto 9999
  1   877 
  1   878       entry binop_cp_r_trunc (op_id, c1, r2, error_code_2)
  1   879 
  1   880           goto (2010, 2020, 2030, 2040, 2050), op_id
  1   881 
  1   882 2010      to_cp_trunc = c1 + r2
  1   883           goto 9999
  1   884 
  1   885 2020      to_cp_trunc = c1 - r2
  1   886           goto 9999
  1   887 
  1   888 2030      to_cp_trunc = c1 * r2
  1   889           goto 9999
  1   890 
  1   891 2040      to_cp_trunc = c1 / r2
  1   892           goto 9999
  1   893 
  1   894 2050      to_cp_trunc = c1 ** r2
  1   895           goto 9999
  1   896 
  1   897       entry binop_cp_dp_trunc (op_id, c1, d2, error_code_2)
  1   898 
  1   899           goto (3010, 3020, 3030, 3040, 3050), op_id
  1   900 
  1   901 3010      to_cp_trunc = c1 + d2
  1   902           goto 9999
  1   903 
  1   904 3020      to_cp_trunc = c1 - d2
  1   905           goto 9999
  1   906 
  1   907 3030      to_cp_trunc = c1 * d2
  1   908           goto 9999
  1   909 
  1   910 3040      to_cp_trunc = c1 / d2
  1   911           goto 9999
  1   912 
  1   913 3050      to_cp_trunc = c1 ** d2
  1   914           goto 9999
  1   915 
  1   916       entry binop_cp_cp_trunc (op_id, c1, c2, error_code_2)
  1   917 
  1   918           goto (4010, 4020, 4030, 4040, 4050, 4060), op_id
  1   919 
  1   920 4010      to_cp_trunc = c1 + c2
  1   921           goto 9999
  1   922 
  1   923 4020      to_cp_trunc = c1 - c2
  1   924           goto 9999
  1   925 
  1   926 4030      to_cp_trunc = c1 * c2
  1   927           goto 9999
  1   928 
  1   929 4040      to_cp_trunc = c1 / c2
  1   930           goto 9999
  1   931 
  1   932 4050      to_cp_trunc = c1 ** c2
  1   933           goto 9999
  1   934 
  1   935 4060      to_cp_trunc = - c1
  1   936           goto 9999
  1   937 
  1   938       entry binop_dp_cp_trunc (op_id, d1, c2, error_code_2)
  1   939 
  1   940           goto (5010, 5020, 5030, 5040, 5050), op_id
  1   941 
  1   942 5010      to_cp_trunc = d1 + c2
  1   943           goto 9999
  1   944 
  1   945 5020      to_cp_trunc = d1 - c2
  1   946           goto 9999
  1   947 
  1   948 5030      to_cp_trunc = d1 * c2
  1   949           goto 9999
  1   950 
  1   951 5040      to_cp_trunc = d1 / c2
  1   952           goto 9999
  1   953 
  1   954 5050      to_cp_trunc = d1 ** c2
  1   955           goto 9999
  1   956 
  1   957       entry binop_r_cp_trunc (op_id, r1, c2, error_code_2)
  1   958 
  1   959           goto (6010, 6020, 6030, 6040, 6050), op_id
  1   960 
  1   961 6010      to_cp_trunc = r1 + c2
  1   962           goto 9999
  1   963 
  1   964 6020      to_cp_trunc = r1 - c2
  1   965           goto 9999
  1   966 
  1   967 6030      to_cp_trunc = r1 * c2
  1   968           goto 9999
  1   969 
  1   970 6040      to_cp_trunc = r1 / c2
  1   971           goto 9999
  1   972 
  1   973 6050      to_cp_trunc = r1 ** c2
  1   974           goto 9999
  1   975 
  1   976       entry binop_i_cp_trunc (op_id, i1, c2, error_code_2)
  1   977 
  1   978           goto (7010, 7020, 7030, 7040, 7050), op_id
  1   979 
  1   980 7010      to_cp_trunc = i1 + c2
  1   981           goto 9999
  1   982 
  1   983 7020      to_cp_trunc = i1 - c2
  1   984           goto 9999
  1   985 
  1   986 7030      to_cp_trunc = i1 * c2
  1   987           goto 9999
  1   988 
  1   989 7040      to_cp_trunc = i1 / c2
  1   990           goto 9999
  1   991 
  1   992 7050      to_cp_trunc = i1 ** c2
  1   993           goto 9999
  1   994 
  1   995 9999  continue
  1   996       return
  1   997       end
					    Function to_cp_trunc

	NAMES USED IN THIS PROGRAM UNIT

NAME       TYPE OF NAME        LOC          STORAGE   ATTRIBUTES AND REFERENCES

binop_cp_cp_trunc
           entry point         00005213     constant  complex on line 1-837 1-916 
binop_cp_dp_trunc
           entry point         00005066     constant  complex on line 1-836 1-897 
binop_cp_i_trunc
           entry point         00004610     constant  complex on line 1-836 1-859 
binop_cp_r_trunc
           entry point         00004743     constant  complex on line 1-836 1-878 
binop_dp_cp_trunc
           entry point         00005346     constant  complex on line 1-837 1-938 
binop_i_cp_trunc
           entry point         00005610     constant  complex on line 1-838 1-976 
binop_r_cp_trunc
           entry point         00005471     constant  complex on line 1-837 1-957 
c1                                          parameter position 2 complex ref 1-843 1-859 1-863 1-866 1-869 1-872 1-875 1-878 1-882 
                                                     1-885 1-888 1-891 1-894 1-897 1-901 1-904 1-907 1-910 1-913 1-916 1-920 1-923 
                                                     1-926 1-929 1-932 1-935 
c2                                          parameter position 3 complex ref 1-843 1-916 1-920 1-923 1-926 1-929 1-932 1-938 1-942 
                                                     1-945 1-948 1-951 1-954 1-957 1-961 1-964 1-967 1-970 1-973 1-976 1-980 1-983 
                                                     1-986 1-989 1-992 
conv_dp_to_cp_trunc
           entry point         00004562     constant  complex on line 1-835 1-855 
conv_i_to_cp_trunc
           entry point         00004506     constant  complex on line 1-835 1-847 
conv_r_to_cp_trunc
           entry point         00004535     constant  complex on line 1-835 1-851 
d0                                          parameter position 1 double precision ref 1-842 1-855 1-856 
d1                                          parameter position 2 double precision ref 1-842 1-938 1-942 1-945 1-948 1-951 1-954 
d2                                          parameter position 3 double precision ref 1-842 1-897 1-901 1-904 1-907 1-910 1-913 
i0                                          parameter position 1 integer ref 1-840 1-847 1-848 
i1                                          parameter position 2 integer ref 1-840 1-976 1-980 1-983 1-986 1-989 1-992 
i2                                          parameter position 3 integer ref 1-840 1-859 1-863 1-866 1-869 1-872 1-875 
op_id                                       parameter position 1 integer ref 1-844 1-859 1-861 1-878 1-880 1-897 1-899 1-916 1-918 
                                                     1-938 1-940 1-957 1-959 1-976 1-978 
r0                                          parameter position 1 real ref 1-841 1-851 1-852 
r1                                          parameter position 2 real ref 1-841 1-957 1-961 1-964 1-967 1-970 1-973 
r2                                          parameter position 3 real ref 1-841 1-878 1-882 1-885 1-888 1-891 1-894 
to_cp_trunc
           entry point         00004465     constant  complex on line 1-832 
to_cp_trunc
                               00000144     automatic complex ref 1-832 1-834 1-848 1-852 1-856 1-863 1-866 1-869 1-872 1-875 
                                                     1-882 1-885 1-888 1-891 1-894 1-901 1-904 1-907 1-910 1-913 1-920 1-923 1-926 
                                                     1-929 1-932 1-935 1-942 1-945 1-948 1-951 1-954 1-961 1-964 1-967 1-970 1-973 
                                                     1-980 1-983 1-986 1-989 1-992 

NAMES DECLARED BUT NOT USED

c_dum                                       parameter position 1 complex declared 1-832 1-843 
error_code_1
                                            parameter position 2 integer declared 1-845 1-847 1-851 1-855 
error_code_2
                                            parameter position 4 integer declared 1-845 1-859 1-878 1-897 1-916 1-938 1-957 1-976 

LOC          LABEL  TYPE           LINE           REFERENCES

004637   1010       executable     1-863              used in transfer ref 1-861 
004652   1020       executable     1-866              used in transfer ref 1-861 
004665   1030       executable     1-869              used in transfer ref 1-861 
004702   1040       executable     1-872              used in transfer ref 1-861 
004717   1050       executable     1-875              used in transfer ref 1-861 
004772   2010       executable     1-882              used in transfer ref 1-880 
005004   2020       executable     1-885              used in transfer ref 1-880 
005016   2030       executable     1-888              used in transfer ref 1-880 
005031   2040       executable     1-891              used in transfer ref 1-880 
005044   2050       executable     1-894              used in transfer ref 1-880 
005115   3010       executable     1-901              used in transfer ref 1-899 
005127   3020       executable     1-904              used in transfer ref 1-899 
005141   3030       executable     1-907              used in transfer ref 1-899 
005154   3040       executable     1-910              used in transfer ref 1-899 
005167   3050       executable     1-913              used in transfer ref 1-899 
005243   4010       executable     1-920              used in transfer ref 1-918 
005257   4020       executable     1-923              used in transfer ref 1-918 
005273   4030       executable     1-926              used in transfer ref 1-918 
005303   4040       executable     1-929              used in transfer ref 1-918 
005313   4050       executable     1-932              used in transfer ref 1-918 
005326   4060       executable     1-935              used in transfer ref 1-918 
005375   5010       executable     1-942              used in transfer ref 1-940 
005407   5020       executable     1-945              used in transfer ref 1-940 
005422   5030       executable     1-948              used in transfer ref 1-940 
005435   5040       executable     1-951              used in transfer ref 1-940 
005450   5050       executable     1-954              used in transfer ref 1-940 
005520   6010       executable     1-961              used in transfer ref 1-959 
005532   6020       executable     1-964              used in transfer ref 1-959 
005545   6030       executable     1-967              used in transfer ref 1-959 
005560   6040       executable     1-970              used in transfer ref 1-959 
005571   6050       executable     1-973              used in transfer ref 1-959 
005637   7010       executable     1-980              used in transfer ref 1-978 
005652   7020       executable     1-983              used in transfer ref 1-978 
005666   7030       executable     1-986              used in transfer ref 1-978 
005703   7040       executable     1-989              used in transfer ref 1-978 
005717   7050       executable     1-992              used in transfer ref 1-978 
005735   9999       executable     1-995              used in transfer ref 1-849 1-853 1-857 1-864 1-867 1-870 1-873 1-876 1-883 
                                                     1-886 1-889 1-892 1-895 1-902 1-905 1-908 1-911 1-914 1-921 1-924 1-927 1-930 
                                                     1-933 1-936 1-943 1-946 1-949 1-952 1-955 1-962 1-965 1-968 1-971 1-974 1-981 
                                                     1-984 1-987 1-990 1-993 

       LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC

      1-832 004461      1-847 004501      1-848 004522      1-849 004530      1-851 004531      1-852 004551
      1-853 004555      1-855 004556      1-856 004576      1-857 004602      1-859 004603      1-861 004624
      1-863 004637      1-864 004651      1-866 004652      1-867 004664      1-869 004665      1-870 004701
      1-872 004702      1-873 004716      1-875 004717      1-876 004735      1-878 004736      1-880 004757
      1-882 004772      1-883 005003      1-885 005004      1-886 005015      1-888 005016      1-889 005030
      1-891 005031      1-892 005043      1-894 005044      1-895 005060      1-897 005061      1-899 005102
      1-901 005115      1-902 005126      1-904 005127      1-905 005140      1-907 005141      1-908 005153
      1-910 005154      1-911 005166      1-913 005167      1-914 005205      1-916 005206      1-918 005227
      1-920 005243      1-921 005256      1-923 005257      1-924 005272      1-926 005273      1-927 005302
      1-929 005303      1-930 005312      1-932 005313      1-933 005325      1-935 005326      1-936 005340
      1-938 005341      1-940 005362      1-942 005375      1-943 005406      1-945 005407      1-946 005421
      1-948 005422      1-949 005434      1-951 005435      1-952 005447      1-954 005450      1-955 005463
      1-957 005464      1-959 005505      1-961 005520      1-962 005531      1-964 005532      1-965 005544
      1-967 005545      1-968 005557      1-970 005560      1-971 005570      1-973 005571      1-974 005602
      1-976 005603      1-978 005624      1-980 005637      1-981 005651      1-983 005652      1-984 005665
      1-986 005666      1-987 005702      1-989 005703      1-990 005716      1-992 005717      1-993 005734
      1-995 005735      1-996 005735
					    Function to_log

  1   998 %options round;
  1   999 c     ========================================
  1  1000 c     function to perform compile-time FORTRAN comparisons
  1  1001 c     
  1  1002 c     Written:  06/25/79 by Paul E. Smee
  1  1003 c     
  1  1004 c     Modified:
  1  1005 c     ========================================
  1  1006 
  1  1007       function to_log (l_dum)
  1  1008 
  1  1009       logical to_log
  1  1010       logical comp_i_i, comp_i_r, comp_i_dp
  1  1011       logical comp_r_i, comp_r_r, comp_r_dp
  1  1012       logical comp_dp_i, comp_dp_r, comp_dp_dp
  1  1013       logical comp_cp_cp, comp_lg_lg, comp_ch_ch
  1  1014       
  1  1015       integer i1, i2
  1  1016       real r1, r2
  1  1017       double precision d1, d2
  1  1018       complex c1, c2
  1  1019       logical l_dum, l1, l2
  1  1020       character*8 ch1, ch2
  1  1021       integer op_id
  1  1022       integer error_code_1, error_code_2
  1  1023 
  1  1024       entry comp_i_i (op_id, i1, i2, error_code_2)
  1  1025 
  1  1026       	goto (110, 120, 130, 140, 150, 160), op_id - 7
  1  1027 
  1  1028 110   	to_log = i1 .lt. i2
  1  1029       	goto 9999
  1  1030 
  1  1031 120   	to_log = i1 .le.i2
  1  1032       	goto 9999
  1  1033 
  1  1034 130   	to_log = i1 .eq. i2
  1  1035       	goto 9999
  1  1036 
  1  1037 140   	to_log = i1 .ne. i2
  1  1038       	goto 9999
  1  1039 
  1  1040 150   	to_log = i1 .ge. i2
  1  1041       	goto 9999
  1  1042 
  1  1043 160   	to_log = i1 .gt. i2
  1  1044       	goto 9999
  1  1045 
  1  1046       entry comp_i_r (op_id, i1, r2, error_code_2)
  1  1047 
  1  1048       	goto (210, 220, 230, 240, 250, 260), op_id - 7
  1  1049 
  1  1050 210   	to_log = i1 .lt. r2
  1  1051       	goto 9999
  1  1052 
  1  1053 220   	to_log = i1 .le. r2
  1  1054       	goto 9999
  1  1055 
  1  1056 230   	to_log = i1 .eq. r2
  1  1057       	goto 9999
  1  1058 
  1  1059 240   	to_log = i1 .ne. r2
  1  1060       	goto 9999
  1  1061 
  1  1062 250   	to_log = i1 .ge. r2
  1  1063       	goto 9999
  1  1064 
  1  1065 260   	to_log = i1 .gt. r2
  1  1066       	goto 9999
  1  1067 
  1  1068       entry comp_i_dp (op_id, i1, d2, error_code_2)
  1  1069 
  1  1070       	goto (310, 320, 330, 340, 350, 360), op_id - 7
  1  1071 
  1  1072 310   	to_log = i1 .lt. d2
  1  1073       	goto 9999
  1  1074 
  1  1075 320   	to_log = i1 .le. d2
  1  1076       	goto 9999
  1  1077 
  1  1078 330   	to_log = i1 .eq. d2
  1  1079       	goto 9999
  1  1080 
  1  1081 340   	to_log = i1 .ne. d2
  1  1082       	goto 9999
  1  1083 
  1  1084 350   	to_log = i1 .ge. d2
  1  1085       	goto 9999
  1  1086 
  1  1087 360   	to_log = i1 .gt. d2
  1  1088       	goto 9999
  1  1089 
  1  1090       entry comp_r_i (op_id, r1, i2, error_code_2)
  1  1091 
  1  1092       	goto (510, 520, 530, 540, 550, 560), op_id - 7
  1  1093 
  1  1094 510   	to_log = r1 .lt. i2
  1  1095       	goto 9999
  1  1096 
  1  1097 520   	to_log = r1 .le. i2
  1  1098       	goto 9999
  1  1099 
  1  1100 530   	to_log = r1 .eq. i2
  1  1101       	goto 9999
  1  1102 
  1  1103 540   	to_log = r1 .ne. i2
  1  1104       	goto 9999
  1  1105 
  1  1106 550   	to_log = r1 .ge. i2
  1  1107       	goto 9999
  1  1108 
  1  1109 560   	to_log = r1 .gt. i2
  1  1110       	goto 9999
  1  1111 
  1  1112       entry comp_r_r (op_id, r1, r2, error_code_2)
  1  1113 
  1  1114       	goto (610, 620, 630, 640, 650, 660), op_id - 7
  1  1115 
  1  1116 610   	to_log = r1 .lt. r2
  1  1117       	goto 9999
  1  1118 
  1  1119 620   	to_log = r1 .le. r2
  1  1120       	goto 9999
  1  1121 
  1  1122 630   	to_log = r1 .eq. r2
  1  1123       	goto 9999
  1  1124 
  1  1125 640   	to_log = r1 .ne. r2
  1  1126       	goto 9999
  1  1127 
  1  1128 650   	to_log = r1 .ge. r2
  1  1129       	goto 9999
  1  1130 
  1  1131 660   	to_log = r1 .gt. r2
  1  1132       	goto 9999
  1  1133 
  1  1134       entry comp_r_dp (op_id, r1, d2, error_code_2)
  1  1135 
  1  1136       	goto (710, 720, 730, 740, 750, 760), op_id - 7
  1  1137 
  1  1138 710   	to_log = r1 .lt. d2
  1  1139       	goto 9999
  1  1140 
  1  1141 720   	to_log = r1 .le. d2
  1  1142       	goto 9999
  1  1143 
  1  1144 730   	to_log = r1 .eq. d2
  1  1145       	goto 9999
  1  1146 
  1  1147 740   	to_log = r1 .ne. d2
  1  1148       	goto 9999
  1  1149 
  1  1150 750   	to_log = r1 .ge. d2
  1  1151       	goto 9999
  1  1152 
  1  1153 760   	to_log = r1 .gt. d2
  1  1154       	goto 9999
  1  1155 
  1  1156       entry comp_dp_i (op_id, d1, i2, error_code_2)
  1  1157 
  1  1158       	goto (910, 920, 930, 940, 950, 960), op_id - 7
  1  1159 
  1  1160 910   	to_log = d1 .lt. i2
  1  1161       	goto 9999
  1  1162 
  1  1163 920   	to_log = d1 .le. i2
  1  1164       	goto 9999
  1  1165 
  1  1166 930   	to_log = d1 .eq. i2
  1  1167       	goto 9999
  1  1168 
  1  1169 940   	to_log = d1 .ne. i2
  1  1170       	goto 9999
  1  1171 
  1  1172 950   	to_log = d1 .ge. i2
  1  1173       	goto 9999
  1  1174 
  1  1175 960   	to_log = d1 .gt. i2
  1  1176       	goto 9999
  1  1177 
  1  1178       entry comp_dp_r (op_id, d1, r2, error_code_2)
  1  1179 
  1  1180       	goto (1010, 1020, 1030, 1040, 1050, 1060), op_id - 7
  1  1181 
  1  1182 1010   	to_log = d1 .lt. r2
  1  1183       	goto 9999
  1  1184 
  1  1185 1020   	to_log = d1 .le. r2
  1  1186       	goto 9999
  1  1187 
  1  1188 1030   	to_log = d1 .eq. r2
  1  1189       	goto 9999
  1  1190 
  1  1191 1040   	to_log = d1 .ne. r2
  1  1192       	goto 9999
  1  1193 
  1  1194 1050   	to_log = d1 .ge. r2
  1  1195       	goto 9999
  1  1196 
  1  1197 1060   	to_log = d1 .gt. r2
  1  1198       	goto 9999
  1  1199 
  1  1200       entry comp_dp_dp (op_id, d1, d2, error_code_2)
  1  1201 
  1  1202       	goto (1110, 1120, 1130, 1140, 1150, 1160), op_id - 7
  1  1203 
  1  1204 1110   	to_log = d1 .lt. d2
  1  1205       	goto 9999
  1  1206 
  1  1207 1120   	to_log = d1 .le. d2
  1  1208       	goto 9999
  1  1209 
  1  1210 1130   	to_log = d1 .eq. d2
  1  1211       	goto 9999
  1  1212 
  1  1213 1140   	to_log = d1 .ne. d2
  1  1214       	goto 9999
  1  1215 
  1  1216 1150   	to_log = d1 .ge. d2
  1  1217       	goto 9999
  1  1218 
  1  1219 1160   	to_log = d1 .gt. d2
  1  1220       	goto 9999
  1  1221 
  1  1222       entry comp_cp_cp (op_id, c1, c2, error_code_2)
  1  1223 
  1  1224       	goto (1630, 1640), op_id - 9
  1  1225 
  1  1226           error_code_2 = - 1
  1  1227           goto 9999
  1  1228 
  1  1229 1630   	to_log = c1 .eq. c2
  1  1230       	goto 9999
  1  1231 
  1  1232 1640   	to_log = c1 .ne. c2
  1  1233       	goto 9999
  1  1234 
  1  1235       entry comp_lg_lg (op_id, l1, l2, error_code_2)
  1  1236 
  1  1237       	goto (2530, 2540), op_id - 9
  1  1238 
  1  1239           error_code_2 = - 1
  1  1240           goto 9999
  1  1241 
  1  1242 2530   	to_log = l1 .eq. l2
  1  1243       	goto 9999
  1  1244 
  1  1245 2540   	to_log = l1 .ne. l2
  1  1246       	goto 9999
  1  1247 
  1  1248       entry comp_ch_ch (op_id, ch1, ch2, error_code_2)
  1  1249 
  1  1250       	goto (3610, 3620, 3630, 3640, 3650, 3660), op_id - 7
  1  1251 
  1  1252 3610   	to_log = ch1 .lt. ch2
  1  1253       	goto 9999
  1  1254 
  1  1255 3620   	to_log = ch1 .le. ch2
  1  1256       	goto 9999
  1  1257 
  1  1258 3630   	to_log = ch1 .eq. ch2
  1  1259       	goto 9999
  1  1260 
  1  1261 3640   	to_log = ch1 .ne. ch2
  1  1262       	goto 9999
  1  1263 
  1  1264 3650   	to_log = ch1 .ge. ch2
  1  1265       	goto 9999
  1  1266 
  1  1267 3660   	to_log = ch1 .gt. ch2
  1  1268       	goto 9999
  1  1269 
  1  1270 9999  continue
  1  1271       return
  1  1272       end
					    Function to_log

	NAMES USED IN THIS PROGRAM UNIT

NAME       TYPE OF NAME        LOC          STORAGE   ATTRIBUTES AND REFERENCES

c1                                          parameter position 2 complex ref 1-1018 1-1222 1-1229 1-1232 
c2                                          parameter position 3 complex ref 1-1018 1-1222 1-1229 1-1232 
ch1                                         parameter position 2 character(8) ref 1-1020 1-1248 1-1252 1-1255 1-1258 1-1261 1-1264 
                                                     1-1267 
ch2                                         parameter position 3 character(8) ref 1-1020 1-1248 1-1252 1-1255 1-1258 1-1261 1-1264 
                                                     1-1267 
comp_ch_ch
           entry point         00007272     constant  logical on line 1-1013 1-1248 
comp_cp_cp
           entry point         00007142     constant  logical on line 1-1013 1-1222 
comp_dp_dp
           entry point         00007040     constant  logical on line 1-1012 1-1200 
comp_dp_i  entry point         00006626     constant  logical on line 1-1012 1-1156 
comp_dp_r  entry point         00006736     constant  logical on line 1-1012 1-1178 
comp_i_dp  entry point         00006202     constant  logical on line 1-1010 1-1068 
comp_i_i   entry point         00005767     constant  logical on line 1-1010 1-1024 
comp_i_r   entry point         00006072     constant  logical on line 1-1010 1-1046 
comp_lg_lg
           entry point         00007220     constant  logical on line 1-1013 1-1235 
comp_r_dp  entry point         00006524     constant  logical on line 1-1011 1-1134 
comp_r_i   entry point         00006312     constant  logical on line 1-1011 1-1090 
comp_r_r   entry point         00006422     constant  logical on line 1-1011 1-1112 
d1                                          parameter position 2 double precision ref 1-1017 1-1156 1-1160 1-1163 1-1166 1-1169 
                                                     1-1172 1-1175 1-1178 1-1182 1-1185 1-1188 1-1191 1-1194 1-1197 1-1200 1-1204 
                                                     1-1207 1-1210 1-1213 1-1216 1-1219 
d2                                          parameter position 3 double precision ref 1-1017 1-1068 1-1072 1-1075 1-1078 1-1081 
                                                     1-1084 1-1087 1-1134 1-1138 1-1141 1-1144 1-1147 1-1150 1-1153 1-1200 1-1204 
                                                     1-1207 1-1210 1-1213 1-1216 1-1219 
error_code_2
                                            parameter position 4 integer ref 1-1022 1-1024 1-1046 1-1068 1-1090 1-1112 1-1134 
                                                     1-1156 1-1178 1-1200 1-1222 1-1226 1-1235 1-1239 1-1248 
i1                                          parameter position 2 integer ref 1-1015 1-1024 1-1028 1-1031 1-1034 1-1037 1-1040 
                                                     1-1043 1-1046 1-1050 1-1053 1-1056 1-1059 1-1062 1-1065 1-1068 1-1072 1-1075 
                                                     1-1078 1-1081 1-1084 1-1087 
i2                                          parameter position 3 integer ref 1-1015 1-1024 1-1028 1-1031 1-1034 1-1037 1-1040 
                                                     1-1043 1-1090 1-1094 1-1097 1-1100 1-1103 1-1106 1-1109 1-1156 1-1160 1-1163 
                                                     1-1166 1-1169 1-1172 1-1175 
l1                                          parameter position 2 logical ref 1-1019 1-1235 1-1242 1-1245 
l2                                          parameter position 3 logical ref 1-1019 1-1235 1-1242 1-1245 
op_id                                       parameter position 1 integer ref 1-1021 1-1024 1-1026 1-1046 1-1048 1-1068 1-1070 
                                                     1-1090 1-1092 1-1112 1-1114 1-1134 1-1136 1-1156 1-1158 1-1178 1-1180 1-1200 
                                                     1-1202 1-1222 1-1224 1-1235 1-1237 1-1248 1-1250 
r1                                          parameter position 2 real ref 1-1016 1-1090 1-1094 1-1097 1-1100 1-1103 1-1106 1-1109 
                                                     1-1112 1-1116 1-1119 1-1122 1-1125 1-1128 1-1131 1-1134 1-1138 1-1141 1-1144 
                                                     1-1147 1-1150 1-1153 
r2                                          parameter position 3 real ref 1-1016 1-1046 1-1050 1-1053 1-1056 1-1059 1-1062 1-1065 
                                                     1-1112 1-1116 1-1119 1-1122 1-1125 1-1128 1-1131 1-1178 1-1182 1-1185 1-1188 
                                                     1-1191 1-1194 1-1197 
to_log     entry point         00005745     constant  logical on line 1-1007 
to_log                         00000146     automatic logical ref 1-1007 1-1009 1-1028 1-1031 1-1034 1-1037 1-1040 1-1043 1-1050 
                                                     1-1053 1-1056 1-1059 1-1062 1-1065 1-1072 1-1075 1-1078 1-1081 1-1084 1-1087 
                                                     1-1094 1-1097 1-1100 1-1103 1-1106 1-1109 1-1116 1-1119 1-1122 1-1125 1-1128 
                                                     1-1131 1-1138 1-1141 1-1144 1-1147 1-1150 1-1153 1-1160 1-1163 1-1166 1-1169 
                                                     1-1172 1-1175 1-1182 1-1185 1-1188 1-1191 1-1194 1-1197 1-1204 1-1207 1-1210 
                                                     1-1213 1-1216 1-1219 1-1229 1-1232 1-1242 1-1245 1-1252 1-1255 1-1258 1-1261 
                                                     1-1264 1-1267 

NAMES DECLARED BUT NOT USED

error_code_1
                                                      integer declared 1-1022 
l_dum                                       parameter position 1 logical declared 1-1007 1-1019 

LOC          LABEL  TYPE           LINE           REFERENCES

006021    110       executable     1-1028             used in transfer ref 1-1026 
006027    120       executable     1-1031             used in transfer ref 1-1026 
006035    130       executable     1-1034             used in transfer ref 1-1026 
006043    140       executable     1-1037             used in transfer ref 1-1026 
006051    150       executable     1-1040             used in transfer ref 1-1026 
006057    160       executable     1-1043             used in transfer ref 1-1026 
006123    210       executable     1-1050             used in transfer ref 1-1048 
006132    220       executable     1-1053             used in transfer ref 1-1048 
006141    230       executable     1-1056             used in transfer ref 1-1048 
006150    240       executable     1-1059             used in transfer ref 1-1048 
006157    250       executable     1-1062             used in transfer ref 1-1048 
006166    260       executable     1-1065             used in transfer ref 1-1048 
006233    310       executable     1-1072             used in transfer ref 1-1070 
006242    320       executable     1-1075             used in transfer ref 1-1070 
006251    330       executable     1-1078             used in transfer ref 1-1070 
006260    340       executable     1-1081             used in transfer ref 1-1070 
006267    350       executable     1-1084             used in transfer ref 1-1070 
006276    360       executable     1-1087             used in transfer ref 1-1070 
006343    510       executable     1-1094             used in transfer ref 1-1092 
006352    520       executable     1-1097             used in transfer ref 1-1092 
006361    530       executable     1-1100             used in transfer ref 1-1092 
006370    540       executable     1-1103             used in transfer ref 1-1092 
006377    550       executable     1-1106             used in transfer ref 1-1092 
006406    560       executable     1-1109             used in transfer ref 1-1092 
006453    610       executable     1-1116             used in transfer ref 1-1114 
006461    620       executable     1-1119             used in transfer ref 1-1114 
006467    630       executable     1-1122             used in transfer ref 1-1114 
006475    640       executable     1-1125             used in transfer ref 1-1114 
006503    650       executable     1-1128             used in transfer ref 1-1114 
006511    660       executable     1-1131             used in transfer ref 1-1114 
006555    710       executable     1-1138             used in transfer ref 1-1136 
006563    720       executable     1-1141             used in transfer ref 1-1136 
006571    730       executable     1-1144             used in transfer ref 1-1136 
006577    740       executable     1-1147             used in transfer ref 1-1136 
006605    750       executable     1-1150             used in transfer ref 1-1136 
006613    760       executable     1-1153             used in transfer ref 1-1136 
006657    910       executable     1-1160             used in transfer ref 1-1158 
006666    920       executable     1-1163             used in transfer ref 1-1158 
006675    930       executable     1-1166             used in transfer ref 1-1158 
006704    940       executable     1-1169             used in transfer ref 1-1158 
006713    950       executable     1-1172             used in transfer ref 1-1158 
006722    960       executable     1-1175             used in transfer ref 1-1158 
006767   1010       executable     1-1182             used in transfer ref 1-1180 
006775   1020       executable     1-1185             used in transfer ref 1-1180 
007003   1030       executable     1-1188             used in transfer ref 1-1180 
007011   1040       executable     1-1191             used in transfer ref 1-1180 
007017   1050       executable     1-1194             used in transfer ref 1-1180 
007025   1060       executable     1-1197             used in transfer ref 1-1180 
007071   1110       executable     1-1204             used in transfer ref 1-1202 
007077   1120       executable     1-1207             used in transfer ref 1-1202 
007105   1130       executable     1-1210             used in transfer ref 1-1202 
007113   1140       executable     1-1213             used in transfer ref 1-1202 
007121   1150       executable     1-1216             used in transfer ref 1-1202 
007127   1160       executable     1-1219             used in transfer ref 1-1202 
007173   1630       executable     1-1229             used in transfer ref 1-1224 
007203   1640       executable     1-1232             used in transfer ref 1-1224 
007251   2530       executable     1-1242             used in transfer ref 1-1237 
007257   2540       executable     1-1245             used in transfer ref 1-1237 
007323   3610       executable     1-1252             used in transfer ref 1-1250 
007334   3620       executable     1-1255             used in transfer ref 1-1250 
007345   3630       executable     1-1258             used in transfer ref 1-1250 
007356   3640       executable     1-1261             used in transfer ref 1-1250 
007367   3650       executable     1-1264             used in transfer ref 1-1250 
007400   3660       executable     1-1267             used in transfer ref 1-1250 
007411   9999       executable     1-1270             used in transfer ref 1-1029 1-1032 1-1035 1-1038 1-1041 1-1044 1-1051 1-1054 
                                                     1-1057 1-1060 1-1063 1-1066 1-1073 1-1076 1-1079 1-1082 1-1085 1-1088 1-1095 
                                                     1-1098 1-1101 1-1104 1-1107 1-1110 1-1117 1-1120 1-1123 1-1126 1-1129 1-1132 
                                                     1-1139 1-1142 1-1145 1-1148 1-1151 1-1154 1-1161 1-1164 1-1167 1-1170 1-1173 
                                                     1-1176 1-1183 1-1186 1-1189 1-1192 1-1195 1-1198 1-1205 1-1208 1-1211 1-1214 
                                                     1-1217 1-1220 1-1227 1-1230 1-1233 1-1240 1-1243 1-1246 1-1253 1-1256 1-1259 
                                                     1-1262 1-1265 1-1268 

       LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC

     1-1007 005741     1-1024 005761     1-1026 006003     1-1028 006021     1-1029 006026     1-1031 006027
     1-1032 006034     1-1034 006035     1-1035 006042     1-1037 006043     1-1038 006050     1-1040 006051
     1-1041 006056     1-1043 006057     1-1044 006064     1-1046 006065     1-1048 006106     1-1050 006123
     1-1051 006131     1-1053 006132     1-1054 006140     1-1056 006141     1-1057 006147     1-1059 006150
     1-1060 006156     1-1062 006157     1-1063 006165     1-1065 006166     1-1066 006174     1-1068 006175
     1-1070 006216     1-1072 006233     1-1073 006241     1-1075 006242     1-1076 006250     1-1078 006251
     1-1079 006257     1-1081 006260     1-1082 006266     1-1084 006267     1-1085 006275     1-1087 006276
     1-1088 006304     1-1090 006305     1-1092 006326     1-1094 006343     1-1095 006351     1-1097 006352
     1-1098 006360     1-1100 006361     1-1101 006367     1-1103 006370     1-1104 006376     1-1106 006377
     1-1107 006405     1-1109 006406     1-1110 006414     1-1112 006415     1-1114 006436     1-1116 006453
     1-1117 006460     1-1119 006461     1-1120 006466     1-1122 006467     1-1123 006474     1-1125 006475
     1-1126 006502     1-1128 006503     1-1129 006510     1-1131 006511     1-1132 006516     1-1134 006517
     1-1136 006540     1-1138 006555     1-1139 006562     1-1141 006563     1-1142 006570     1-1144 006571
     1-1145 006576     1-1147 006577     1-1148 006604     1-1150 006605     1-1151 006612     1-1153 006613
     1-1154 006620     1-1156 006621     1-1158 006642     1-1160 006657     1-1161 006665     1-1163 006666
     1-1164 006674     1-1166 006675     1-1167 006703     1-1169 006704     1-1170 006712     1-1172 006713
     1-1173 006721     1-1175 006722     1-1176 006730     1-1178 006731     1-1180 006752     1-1182 006767
     1-1183 006774     1-1185 006775     1-1186 007002     1-1188 007003     1-1189 007010     1-1191 007011
     1-1192 007016     1-1194 007017     1-1195 007024     1-1197 007025     1-1198 007032     1-1200 007033
     1-1202 007054     1-1204 007071     1-1205 007076     1-1207 007077     1-1208 007104     1-1210 007105
     1-1211 007112     1-1213 007113     1-1214 007120     1-1216 007121     1-1217 007126     1-1219 007127
     1-1220 007134     1-1222 007135     1-1224 007156     1-1226 007167     1-1227 007172     1-1229 007173
     1-1230 007202     1-1232 007203     1-1233 007212     1-1235 007213     1-1237 007234     1-1239 007245
     1-1240 007250     1-1242 007251     1-1243 007256     1-1245 007257     1-1246 007264     1-1248 007265
     1-1250 007306     1-1252 007323     1-1253 007333     1-1255 007334     1-1256 007344     1-1258 007345
     1-1259 007355     1-1261 007356     1-1262 007366     1-1264 007367     1-1265 007377     1-1267 007400
     1-1268 007410     1-1270 007411     1-1271 007411
					    Function misc_ops

  1  1273 %options truncate;
  1  1274 c     ========================================
  1  1275 c     Miscellaneous "do-nothing" entries
  1  1276 c     
  1  1277 c     Written:  06/29/79 by Paul E. Smee
  1  1278 c     
  1  1279 c     Modified:
  1  1280 c     ========================================
  1  1281 
  1  1282       function misc_ops (ch_dum)
  1  1283 
  1  1284       character*8 misc_ops
  1  1285       character*8 bad_data_types, binop_ch_ch, binop_lg_lg
  1  1286       character*8 binop_no_op, unary_no_op, conv_ch_to_ch
  1  1287       character*8 unary_bad_data
  1  1288 
  1  1289       character*8 ch0, ch1, ch2, ch_dum
  1  1290       integer op_id
  1  1291       integer error_code_1, error_code_2
  1  1292 
  1  1293       entry bad_data_types (op_id, ch1, ch2, error_code_2)
  1  1294 
  1  1295       	error_code_2 = -1
  1  1296       	misc_ops = ch1
  1  1297 
  1  1298       return
  1  1299 
  1  1300       entry unary_bad_data (ch0, error_code_1)
  1  1301 
  1  1302           error_code_1 = -1
  1  1303 	misc_ops = ch0
  1  1304 
  1  1305       return
  1  1306 
  1  1307       entry binop_ch_ch (op_id, ch1, ch2, error_code_2)
  1  1308 
  1  1309       	error_code_2 = -2
  1  1310       	misc_ops = ch1
  1  1311 
  1  1312       return
  1  1313 
  1  1314       entry binop_lg_lg (op_id, ch1, ch2, error_code_2)
  1  1315 
  1  1316       	error_code_2 = -2
  1  1317       	misc_ops = ch1
  1  1318 
  1  1319       return
  1  1320 
  1  1321       entry binop_no_op (op_id, ch1, ch2, error_code_2)
  1  1322 
  1  1323       	misc_ops = ch1
  1  1324 
  1  1325       return
  1  1326 
  1  1327       entry unary_no_op (ch0, error_code_1)
  1  1328 
  1  1329       	misc_ops = ch0
  1  1330 
  1  1331       return
  1  1332 
  1  1333       entry conv_ch_to_ch (ch0, error_code_1)
  1  1334 
  1  1335       	misc_ops = ch0
  1  1336 
  1  1337       return
  1  1338       end
					    Function misc_ops

	NAMES USED IN THIS PROGRAM UNIT

NAME       TYPE OF NAME        LOC          STORAGE   ATTRIBUTES AND REFERENCES

bad_data_types
           entry point         00007442     constant  character(8) on line 1-1285 1-1293 
binop_ch_ch
           entry point         00007532     constant  character(8) on line 1-1285 1-1307 
binop_lg_lg
           entry point         00007566     constant  character(8) on line 1-1285 1-1314 
binop_no_op
           entry point         00007622     constant  character(8) on line 1-1286 1-1321 
ch0                                         parameter position 1 character(8) ref 1-1289 1-1300 1-1303 1-1327 1-1329 1-1333 1-1335 
ch1                                         parameter position 2 character(8) ref 1-1289 1-1293 1-1296 1-1307 1-1310 1-1314 1-1317 
                                                     1-1321 1-1323 
conv_ch_to_ch
           entry point         00007704     constant  character(8) on line 1-1286 1-1333 
error_code_1
                                            parameter position 2 integer ref 1-1291 1-1300 1-1302 1-1327 1-1333 
error_code_2
                                            parameter position 4 integer ref 1-1291 1-1293 1-1295 1-1307 1-1309 1-1314 1-1316 
                                                     1-1321 
misc_ops                       00000150     automatic character(8) ref 1-1282 1-1284 1-1296 1-1303 1-1310 1-1317 1-1323 1-1329 
                                                     1-1335 
misc_ops   entry point         00007420     constant  character(8) on line 1-1282 
unary_bad_data
           entry point         00007476     constant  character(8) on line 1-1287 1-1300 
unary_no_op
           entry point         00007653     constant  character(8) on line 1-1286 1-1327 

NAMES DECLARED BUT NOT USED

ch2                                         parameter position 3 character(8) declared 1-1289 1-1293 1-1307 1-1314 1-1321 
ch_dum                                      parameter position 1 character(8) declared 1-1282 1-1289 
op_id                                       parameter position 1 integer declared 1-1290 1-1293 1-1307 1-1314 1-1321 

       LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC        LINE   LOC

     1-1282 007414     1-1293 007434     1-1295 007456     1-1296 007461     1-1298 007465     1-1300 007472
     1-1302 007512     1-1303 007514     1-1305 007520     1-1307 007525     1-1309 007546     1-1310 007550
     1-1312 007554     1-1314 007561     1-1316 007602     1-1317 007604     1-1319 007610     1-1321 007615
     1-1323 007636     1-1325 007642     1-1327 007647     1-1329 007667     1-1331 007673     1-1333 007700
     1-1335 007720     1-1337 007724
OBJECT SEGMENT SUMMARY

STORAGE REQUIREMENTS FOR THIS PROGRAM

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      7756       11210    7772        7766
Length     24522    7756        14       13276    1215           0

Stack frame is 480 (decimal) words.


ENTRY POINT         LOC       ATTRIBUTES

bad_data_types      007442    in misc_ops on line 1-1285
binop_ch_ch         007532    in misc_ops on line 1-1285
binop_cp_cp_round
                    003733    in to_cp_round on line 1-662
binop_cp_cp_trunc
                    005213    in to_cp_trunc on line 1-837
binop_cp_dp_round
                    003606    in to_cp_round on line 1-661
binop_cp_dp_trunc
                    005066    in to_cp_trunc on line 1-836
binop_cp_i_round
                    003330    in to_cp_round on line 1-661
binop_cp_i_trunc
                    004610    in to_cp_trunc on line 1-836
binop_cp_r_round
                    003463    in to_cp_round on line 1-661
binop_cp_r_trunc
                    004743    in to_cp_trunc on line 1-836
binop_dp_cp_round
                    004066    in to_cp_round on line 1-662
binop_dp_cp_trunc
                    005346    in to_cp_trunc on line 1-837
binop_dp_dp_round
                    002131    in to_dp_round on line 1-389
binop_dp_dp_trunc
                    002720    in to_dp_trunc on line 1-525
binop_dp_i_round
                    001745    in to_dp_round on line 1-389
binop_dp_i_trunc
                    002534    in to_dp_trunc on line 1-525
binop_dp_r_round
                    002041    in to_dp_round on line 1-389
binop_dp_r_trunc
                    002630    in to_dp_trunc on line 1-525
binop_i_cp_round
                    004330    in to_cp_round on line 1-663
binop_i_cp_trunc
                    005610    in to_cp_trunc on line 1-838
binop_i_dp_round
                    002317    in to_dp_round on line 1-390
binop_i_dp_trunc
                    003106    in to_dp_trunc on line 1-526
binop_i_i_round
                    000271    in to_i_round on line 1-57
binop_i_i_trunc
                    000511    in to_i_trunc on line 1-136
binop_i_r_round
                    001121    in to_r_round on line 1-195
binop_i_r_trunc
                    001530    in to_r_trunc on line 1-292
binop_lg_lg         007566    in misc_ops on line 1-1285
binop_no_op         007622    in misc_ops on line 1-1286
binop_r_cp_round
                    004211    in to_cp_round on line 1-662
binop_r_cp_trunc
                    005471    in to_cp_trunc on line 1-837
binop_r_dp_round
                    002227    in to_dp_round on line 1-390
binop_r_dp_trunc
                    003016    in to_dp_trunc on line 1-526
binop_r_i_round
                    000727    in to_r_round on line 1-195
binop_r_i_trunc
                    001336    in to_r_trunc on line 1-292
binop_r_r_round
                    001023    in to_r_round on line 1-195
binop_r_r_trunc
                    001432    in to_r_trunc on line 1-292
comp_ch_ch          007272    in to_log on line 1-1013
comp_cp_cp          007142    in to_log on line 1-1013
comp_dp_dp          007040    in to_log on line 1-1012
comp_dp_i           006626    in to_log on line 1-1012
comp_dp_r           006736    in to_log on line 1-1012
comp_i_dp           006202    in to_log on line 1-1010
comp_i_i            005767    in to_log on line 1-1010
comp_i_r            006072    in to_log on line 1-1010
comp_lg_lg          007220    in to_log on line 1-1013
comp_r_dp           006524    in to_log on line 1-1011
comp_r_i            006312    in to_log on line 1-1011
comp_r_r            006422    in to_log on line 1-1011
conv_ch_to_ch       007704    in misc_ops on line 1-1286
conv_cp_to_dp_round
                    001720    in to_dp_round on line 1-388
conv_cp_to_dp_trunc
                    002507    in to_dp_trunc on line 1-524
conv_cp_to_i_round
                    000243    in to_i_round on line 1-57
conv_cp_to_i_trunc
                    000463    in to_i_trunc on line 1-136
conv_cp_to_r_round
                    000702    in to_r_round on line 1-194
conv_cp_to_r_trunc
                    001311    in to_r_trunc on line 1-291
conv_dp_to_cp_round
                    003302    in to_cp_round on line 1-660
conv_dp_to_cp_trunc
                    004562    in to_cp_trunc on line 1-835
conv_dp_to_i_round
                    000173    in to_i_round on line 1-57
conv_dp_to_i_trunc
                    000437    in to_i_trunc on line 1-136
conv_dp_to_r_round
                    000657    in to_r_round on line 1-194
conv_dp_to_r_trunc
                    001266    in to_r_trunc on line 1-291
conv_i_to_cp_round
                    003226    in to_cp_round on line 1-660
conv_i_to_cp_trunc
                    004506    in to_cp_trunc on line 1-835
conv_i_to_dp_round
                    001650    in to_dp_round on line 1-388
conv_i_to_dp_trunc
                    002437    in to_dp_trunc on line 1-524
conv_i_to_r_round
                    000632    in to_r_round on line 1-194
conv_i_to_r_trunc
                    001241    in to_r_trunc on line 1-291
conv_r_to_cp_round
                    003255    in to_cp_round on line 1-660
conv_r_to_cp_trunc
                    004535    in to_cp_trunc on line 1-835
conv_r_to_dp_round
                    001675    in to_dp_round on line 1-388
conv_r_to_dp_trunc
                    002464    in to_dp_trunc on line 1-524
conv_r_to_i_round
                    000122    in to_i_round on line 1-57
conv_r_to_i_trunc
                    000412    in to_i_trunc on line 1-136
fort_parm_math      000014    on line 1-19
misc_ops            007420    on line 1-1282
to_cp_round         003205    on line 1-657
to_cp_trunc         004465    on line 1-832
to_dp_round         001627    on line 1-385
to_dp_trunc         002416    on line 1-521
to_i_round          000101    on line 1-54
to_i_trunc          000371    on line 1-133
to_log              005745    on line 1-1007
to_r_round          000611    on line 1-191
to_r_trunc          001220    on line 1-288
unary_bad_data      007476    in misc_ops on line 1-1287
unary_no_op         007653    in misc_ops on line 1-1286
version             000053    on line 1-37 ref in fort_parm_math 1-22 1-23 1-25 

EXTERNAL REFERENCE  LOC       ATTRIBUTES

ioa_                000010    in fort_parm_math ref 1-21 1-25 

NO COMMON BLOCKS
	SOURCE FILES USED IN THIS COMPILATION

LINE      NUMBER   DATE MODIFIED    PATHNAME

             0    12/27/84  0751.7  >spec>online>fort_recompile>fort_hfp_math.fortran
15           1    12/21/84  1237.8  >ldd>include>fort_math.incl.fortran


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
