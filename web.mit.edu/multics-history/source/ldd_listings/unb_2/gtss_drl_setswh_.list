	COMPILATION LISTING OF SEGMENT gtss_drl_setswh_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/10/84  1246.3 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   *                                                         *
        4*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        5*   *                                                         *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 /* *************************************************************
       10*   *						   *
       11*   * Copyright (c) 1979 by Honeywell Information Systems, Inc. *
       12*   *						   *
       13*   ************************************************************* */
       14 gtss_drl_setswh_: proc (mcpp, increment);
       15 
       16 /*	Set switch word
       17*
       18*   Authors: Robert J. Grimes	Created
       19*   -	  Albert N. Kepner	  1978
       20*   -	  Robert M. May
       21*   -	  David B. Ward
       22**/
       23 dcl  mcpp                     ptr parm;
       24 dcl  increment                fixed bin parm;
       25 	mcp = mcpp;
       26 
       27 /*
       28*
       29*
       30*   DRL SETSWH, SET SWITCH WORD (octal 11)
       31*
       32*
       33*   8_________1_6______
       34*
       35*   DRL      SETSWH  or SETSWH,*
       36*
       37*   (See TSS SYSTEM PROGRAMMER'S
       38*   REFERENCE MANUAL DD17C, Rev. 0, July 1976
       39*   Page 3-25)
       40*
       41**/
       42 
       43 	scup = addr (mc.scu);
       44 	increment = 0;				/* no parameter words */
       45 
       46 	gseg = gtss_ext_$gtss_slave_area_seg (gtss_ext_$stack_level_); /* GCOS memory. */
       47 	drl_ptr = addrel (
       48 	     gseg, fixed (scu.ilc));			/* find the modifier to find out which on to do */
       49 
       50 	qin = mc.regs.q;
       51 	if drl_word.modifier = "0"b then do;
       52 	     mc.regs.q, string (gtss_ust.lswth) = string (gtss_ust.lswth) | mc.regs.q; /* or q into psw */
       53 	     wh = "1";
       54 	end;
       55 	else do;
       56 	     mc.regs.q, string (gtss_ust.lswt2) = string (gtss_ust.lswt2) | mc.regs.q; /* or q into psw 2 */
       57 	     wh = "2";
       58 	end;
       59 
       60 	if db_drl_setswh then call pr_sw (wh, "ON ", qin, mc.regs.q);
       61 	return;
       62 
       63 /*   Variables for gtss_drl_setswh_:
       64*   IDENTIFIER		ATTRIBUTES	*/
       65 dcl qin bit(36);
       66 dcl wh char(1);
       67 dcl ioa_ entry options(variable);
       68 dcl  gseg pointer;
       69 dcl  drl_ptr ptr init(null());
       70 dcl 1 drl_word aligned based (drl_ptr),
       71     2 fill bit (30) unaligned,
       72     2 modifier bit (6) unaligned;
       73 
  1     1 /* BEGIN INCLUDE FILE gtss_ust_ext_.incl.pl1 */
  1     2 /* UST: User Status Table 
  1     3*   definitions based on 
  1     4*   System Tables, Order number DD14-01E, January 1981
  1     5*   Section 15, Time Sharing System
  1     6*
  1     7*   Authors: Robert J. Grimes	Created
  1     8*   -	  Albert N. Kepner	  1978
  1     9*   -	  Robert M. May
  1    10*   -	  David B. Ward
  1    11*   Change:  Dave Ward	02/23/79 Level 4 numbering.
  1    12*   Change:  Ron Barstad  83-07-12 Repaired damaged formating and word offset comments
  1    13*                                  Brought up to 4JS3 functionality
  1    14**/
  1    15 /* octal word offsets of entries */
  1    16 dcl 1 gtss_ust_ext_$ust aligned ext,
  1    17       3 gtss_ust,
  1    18 /* 0-1  */	4 lid		bit (72),
  1    19 /* 2    */	4 lstp		bit (36),
  1    20 /* 3    */	4 ltin		bit (36),
  1    21 /* 4    */	4 lstio,
  1    22 			5 no_of_chars_by_8  fixed bin (18) uns unal,
  1    23 			5 no_of_disk_io     fixed bin (18) uns unal,
  1    24 /* 5    */	4 lsnub		bit (36),
  1    25 /* 6-7  */	4 lchg		bit (72),
  1    26 /* 10   */	4 lbuf,
  1    27 			5 address		bit (18)unaligned,
  1    28 			5 tally		bit (1)unaligned,
  1    29 			5 terminal_type	bit (5)unaligned,
  1    30 			5 station_id	bit (12)unaligned,
  1    31 /* 11-12 */	4 liost (0:1)	bit (36),
  1    32 /* 13   */	4 lcc		bit (36),
  1    33 /* 14   */	4 lback,
  1    34 			5 fill1		bit (18) unaligned,
  1    35 			5 gwake		fixed bin (17) unaligned,
  1    36 /* 15   */	4 lflag,
  1    37 			5 mp_list		bit (18) unaligned,
  1    38 			5 flags unaligned,
  1    39 				6 b18		bit (1) unaligned,
  1    40 				6 b19		bit (1) unaligned,
  1    41 				6 b20		bit (1) unaligned,
  1    42 				6 b21		bit (1) unaligned,
  1    43 				6 b22		bit (1) unaligned,
  1    44 				6 b23		bit (1) unaligned,
  1    45 				6 b24		bit (1) unaligned,
  1    46 				6 b25		bit (1) unaligned,
  1    47 				6 b26		bit (1) unaligned,
  1    48 				6 b27		bit (1) unaligned,
  1    49 				6 b28		bit (1) unaligned,
  1    50 				6 b29		bit (1) unaligned,
  1    51 				6 b30		bit (1) unaligned,
  1    52 				6 b31		bit (1) unaligned,
  1    53 				6 b32		bit (1) unaligned,
  1    54 				6 b33		bit (1) unaligned,
  1    55 				6 b34		bit (1) unaligned,
  1    56 				6 b35		bit (1) unaligned,
  1    57 /* 16   */	4 lkdss		bit (36),
  1    58 /* 17   */	4 lfile,
  1    59 			5 program_stack	fixed bin (17) unal,
  1    60 			5 file_list_ptr	bit (18) unal,
  1    61 /* 20   */	4 lttys		bit (36),
  1    62 /* 21   */	4 lswth,
  1    63 			5 b0		bit (1) unaligned,
  1    64 			5 b1		bit (1) unaligned,
  1    65 			5 b2		bit (1) unaligned,
  1    66 			5 b3		bit (1) unaligned,
  1    67 			5 b4		bit (1) unaligned,
  1    68 			5 b5		bit (1) unaligned,
  1    69 			5 b6		bit (1) unaligned,
  1    70 			5 b7		bit (1) unaligned,
  1    71 			5 b8		bit (1) unaligned,
  1    72 			5 b9		bit (1) unaligned,
  1    73 			5 b10		bit (1) unaligned,
  1    74 			5 b11		bit (1) unaligned,
  1    75 			5 b12		bit (1) unaligned,
  1    76 			5 b13		bit (1) unaligned,
  1    77 			5 b14		bit (1) unaligned,
  1    78 			5 b15		bit (1) unaligned,
  1    79 			5 b16		bit (1) unaligned,
  1    80 			5 b17		bit (1) unaligned,
  1    81 			5 b18		bit (1) unaligned,
  1    82 			5 b19		bit (1) unaligned,
  1    83 			5 b20		bit (1) unaligned,
  1    84 			5 b21		bit (1) unaligned,
  1    85 			5 b22		bit (1) unaligned,
  1    86 			5 b23		bit (1) unaligned,
  1    87 			5 b24		bit (1) unaligned,
  1    88 			5 b25		bit (1) unaligned,
  1    89 			5 b26		bit (1) unaligned,
  1    90 			5 b27		bit (1) unaligned,
  1    91 			5 b28		bit (1) unaligned,
  1    92 			5 b29		bit (1) unaligned,
  1    93 			5 b30		bit (1) unaligned,
  1    94 			5 b31		bit (1) unaligned,
  1    95 			5 b32		bit (1) unaligned,
  1    96 			5 b33		bit (1) unaligned,
  1    97 			5 b34		bit (1) unaligned,
  1    98 			5 b35		bit (1) unaligned,
  1    99 /* 22   */	4 lsize,
  1   100 			5 bar		fixed bin (17) unaligned,
  1   101 			5 limit		bit (18) unaligned,
  1   102 /* 23... */	4 lswap,
  1   103 			5 fill		bit (18) unal,
  1   104 			5 size		bit (18) unal,
  1   105 /* ...24 */	4 transfer_cell	bit (36) unal,
  1   106 /* 25   */	4 lerrm		bit (36),
  1   107 /* 26-37 */	4 lcfil (0:9)	bit (36),
  1   108 /* 40   */	4 lsybc,
  1   109 			5 b0_17		fixed bin (17) unaligned,
  1   110 			5 b18_35		fixed bin (17) unaligned,
  1   111 /* 41-42 */	4 lstem (0:1)	bit (36),
  1   112 /* 43    */	4 lcals,
  1   113 			5 b0_17		fixed bin (17) unaligned,
  1   114 			5 b18_35		bit (18) unaligned,
  1   115 /* 44-51 */	4 subsystems (3),
  1   116 			5 content_lswap,
  1   117 				6 fill		bit (18) unal,
  1   118 				6 size		bit (18) unal,
  1   119 			5 tally_address	fixed bin (17) unaligned,
  1   120 			5 ss_flags	bit (18) unaligned,
  1   121 /* 52   */	4 ltalc,
  1   122 			5 tod		fixed bin (17) unaligned,
  1   123 			5 startup		fixed bin (17) unaligned,
  1   124 /* 53   */	4 lspts		fixed bin (35),
  1   125 /* 54   */	4 lflg2,
  1   126 			5 b0		bit (1) unaligned,
  1   127 			5 b1		bit (1) unaligned,
  1   128 			5 b2		bit (1) unaligned,
  1   129 			5 b3		bit (1) unaligned,
  1   130 			5 b4		bit (1) unaligned,
  1   131 			5 b5		bit (1) unaligned,
  1   132 			5 b6		bit (1) unaligned,
  1   133 			5 b7		bit (1) unaligned,
  1   134 			5 b8		bit (1) unaligned,
  1   135 			5 b9		bit (1) unaligned,
  1   136 			5 b10		bit (1) unaligned,
  1   137 			5 b11		bit (1) unaligned,
  1   138 			5 b12		bit (1) unaligned,
  1   139 			5 b13		bit (1) unaligned,
  1   140 			5 b14		bit (1) unaligned,
  1   141 			5 b15		bit (1) unaligned,
  1   142 			5 b16		bit (1) unaligned,
  1   143 			5 b17		bit (1) unaligned,
  1   144 			5 b18		bit (1) unaligned,
  1   145 			5 b19		bit (1) unaligned,
  1   146 			5 b20		bit (1) unaligned,
  1   147 			5 b21		bit (1) unaligned,
  1   148 			5 b22		bit (1) unaligned,
  1   149 			5 b23		bit (1) unaligned,
  1   150 			5 b24		bit (1) unaligned,
  1   151 			5 b25		bit (1) unaligned,
  1   152 			5 b26		bit (1) unaligned,
  1   153 			5 b27		bit (1) unaligned,
  1   154 			5 b28		bit (1) unaligned,
  1   155 			5 b29		bit (1) unaligned,
  1   156 			5 b30		bit (1) unaligned,
  1   157 			5 b31		bit (1) unaligned,
  1   158 			5 b32		bit (1) unaligned,
  1   159 			5 b33		bit (1) unaligned,
  1   160 			5 b34		bit (1) unaligned,
  1   161 			5 b35		bit (1) unaligned,
  1   162 /* 55-60 */	4 lsftm (0:3)	bit (36),
  1   163 /* 61    */	4 lsprt		fixed bin (35),
  1   164 /* 62    */	4 ltrm		bit (36),
  1   165 /* 63    */	4 linno		fixed bin (35),
  1   166 /* 64    */	4 lincr		fixed bin (35),
  1   167 /* 65    */	4 ltdes		bit (36),
  1   168 /* 66    */	4 lbptr		bit (36),
  1   169 /* 67    */	4 lpptr,
  1   170 			5 last_file_pat_ptr	bin (18) uns unal,
  1   171 			5 lpptr_reserved	bin (18) uns unal,
  1   172 /* 70    */	4 lsclp		bit (36),
  1   173 /* 71    */	4 limit		fixed bin (35),
  1   174 /* 72    */	4 lacpt,
  1   175 			5 jout_pat_offset	bit (18) unal,
  1   176 			5 permissions unal,
  1   177 				6 lodx		bit (1) unal,
  1   178 				6 cardin		bit (1) unal,
  1   179 				6 talk		bit (1) unal,
  1   180 				6 lods		bit (1) unal,
  1   181 			5 cardin_urgency	bit (14) unal,
  1   182 /* 73    */	4 ldrl,
  1   183 			5 ilc		bit (18) unaligned,
  1   184 			5 code		fixed bin (17) unaligned,
  1   185 /* 74    */	4 ljsnb		bit (36),
  1   186 /* 75    */	4 ltm0		bit (36),
  1   187 /* 76    */	4 ltm1		bit (36),
  1   188 /* 77    */	4 ltm2		bit (36),
  1   189 /* 100   */	4 ltm3		bit (36),
  1   190 /* 101   */	4 ltm4		bit (36),
  1   191 /* 102   */	4 ltm5		bit (36),
  1   192 /* 103   */	4 ltmwt		bit (36),
  1   193 /* 104   */	4 ltmrs		bit (36),
  1   194 /* 105   */	4 ltc0		bit (36),
  1   195 /* 106   */	4 ltc1		bit (36),
  1   196 /* 107   */	4 ltc2		bit (36),
  1   197 /* 110   */	4 lct3		bit (36),
  1   198 /* 111   */	4 ltc4		bit (36),
  1   199 /* 112   */	4 ltc5		bit (36),
  1   200 /* 113   */	4 ltcw		bit (36),
  1   201 /* 114   */	4 lkst		bit (36),
  1   202 /* 115   */	4 lkst2		bit (36),
  1   203 /* 116   */	4 lkcc		bit (36),
  1   204 /* 117   */	4 lkms		bit (36),
  1   205 /* 120-121 */	4 lksdc (0:1)	bit (36),
  1   206 /* 122   */	4 lkntp		bit (36),
  1   207 /* 123   */	4 lkrdc		bit (36),
  1   208 /* 124   */	4 lpqf		bit (36),
  1   209 /* 125   */	4 lpqb		bit (36),
  1   210 /* 126   */	4 lustl		bit (36),
  1   211 /* 127   */	4 ltemp		bit (36),
  1   212 /* 130   */	4 lrtll,
  1   213 			5 word_length	fixed bin unaligned,
  1   214 			5 char_length	fixed bin unaligned,
  1   215 /* 131   */	4 ltim		bit (36),
  1   216 /* 132   */	4 lcfio,
  1   217 			5 sect_out	fixed bin(18)unsigned unal,
  1   218 			5 sect_in		fixed bin(18)unsigned unal,
  1   219 /* 133   */	4 lcfst,
  1   220 			5 initial_sect_out	fixed bin(18)unsigned unal,
  1   221 			5 start_term	fixed bin(18)unsigned unal,
  1   222 /* 134   */	4 lcmpt		bit (36),
  1   223 /* 135   */	4 lcjid		bit (36),
  1   224 /* 136-137 */	4 lrcal (0:1)	bit (36),
  1   225 /* 140   */	4 lrdta		bit (36),
  1   226 /* 141   */	4 lrrsk		bit (36),
  1   227 /* 142   */	4 lrskd		bit (36),
  1   228 /* 143   */	4 lrcc		bit (36),
  1   229 /* 144-145 */	4 lrsts (0:1)	bit (36),
  1   230 /* 146   */	4 lrtm		bit (36),
  1   231 /* 147   */	4 lswt2,
  1   232 			5 b0		bit (1) unaligned,
  1   233 			5 b1		bit (1) unaligned,
  1   234 			5 b2		bit (1) unaligned,
  1   235 			5 b3		bit (1) unaligned,
  1   236 			5 b4		bit (1) unaligned,
  1   237 			5 b5		bit (1) unaligned,
  1   238 			5 b6		bit (1) unaligned,
  1   239 			5 b7		bit (1) unaligned,
  1   240 			5 b8		bit (1) unaligned,
  1   241 			5 b9		bit (1) unaligned,
  1   242 			5 b10		bit (1) unaligned,
  1   243 			5 b11		bit (1) unaligned,
  1   244 			5 b12		bit (1) unaligned,
  1   245 			5 b13		bit (1) unaligned,
  1   246 			5 b14		bit (1) unaligned,
  1   247 			5 b15		bit (1) unaligned,
  1   248 			5 b16		bit (1) unaligned,
  1   249 			5 b17		bit (1) unaligned,
  1   250 			5 b18		bit (1) unaligned,
  1   251 			5 b19		bit (1) unaligned,
  1   252 			5 b20		bit (1) unaligned,
  1   253 			5 b21		bit (1) unaligned,
  1   254 			5 b22		bit (1) unaligned,
  1   255 			5 b23		bit (1) unaligned,
  1   256 			5 b24		bit (1) unaligned,
  1   257 			5 b25		bit (1) unaligned,
  1   258 			5 b26		bit (1) unaligned,
  1   259 			5 b27		bit (1) unaligned,
  1   260 			5 b28		bit (1) unaligned,
  1   261 			5 b29		bit (1) unaligned,
  1   262 			5 b30		bit (1) unaligned,
  1   263 			5 b31		bit (1) unaligned,
  1   264 			5 b32		bit (1) unaligned,
  1   265 			5 b33		bit (1) unaligned,
  1   266 			5 b34		bit (1) unaligned,
  1   267 			5 b35		bit (1) unaligned,
  1   268 /* 150   */	4 llsnb		bit (36),
  1   269 /* 151   */	4 lesq		bit (36),
  1   270 /* 152-153 */	4 lumc (0:1)	bit (36),
  1   271 /* 154-155 */	4 lfnam (0:1)	bit (36),
  1   272 /* 156   */	4 lopts		bit (36),
  1   273 /* 157   */	4 licec,
  1   274 			5 b0_17		bit (18) unaligned,
  1   275 			5 b18_35		fixed bin (17) unaligned,
  1   276 /* 160   */	4 lflg3,
  1   277 			5 b0		bit (1) unaligned,
  1   278 			5 b1		bit (1) unaligned,
  1   279 			5 b2		bit (1) unaligned,
  1   280 			5 b3		bit (1) unaligned,
  1   281 			5 b4		bit (1) unaligned,
  1   282 			5 b5		bit (1) unaligned,
  1   283 			5 b6		bit (1) unaligned,
  1   284 			5 b7		bit (1) unaligned,
  1   285 			5 b8		bit (1) unaligned,
  1   286 			5 b9		bit (1) unaligned,
  1   287 			5 b10		bit (1) unaligned,
  1   288 			5 b11		bit (1) unaligned,
  1   289 			5 b12		bit (1) unaligned,
  1   290 			5 b13		bit (1) unaligned,
  1   291 			5 b14		bit (1) unaligned,
  1   292 			5 b15		bit (1) unaligned,
  1   293 			5 b16		bit (1) unaligned,
  1   294 			5 b17		bit (1) unaligned,
  1   295 			5 b18		bit (1) unaligned,
  1   296 			5 b19		bit (1) unaligned,
  1   297 			5 b20		bit (1) unaligned,
  1   298 			5 b21		bit (1) unaligned,
  1   299 			5 b22		bit (1) unaligned,
  1   300 			5 b23		bit (1) unaligned,
  1   301 			5 b24		bit (1) unaligned,
  1   302 			5 b25		bit (1) unaligned,
  1   303 			5 b26		bit (1) unaligned,
  1   304 			5 b27		bit (1) unaligned,
  1   305 			5 b28		bit (1) unaligned,
  1   306 			5 b29		bit (1) unaligned,
  1   307 			5 b30		bit (1) unaligned,
  1   308 			5 b31		bit (1) unaligned,
  1   309 			5 b32		bit (1) unaligned,
  1   310 			5 b33		bit (1) unaligned,
  1   311 			5 b34		bit (1) unaligned,
  1   312 			5 b35		bit (1) unaligned,
  1   313 /* 161-163 */	4 lpage (0:2)	bit (36),
  1   314 /* 164   */	4 lsit1		bit (36),
  1   315 /* 165   */	4 lsit2		bit (36),
  1   316 /* 166   */	4 lsit3		bit (36),
  1   317 /* 167   */	4 lsit4		bit (36),
  1   318 /* The following entries are maintained by gtss and are not found in TSS UST */
  1   319 /* 170   */	4 lxxx, /* program stack index, offset from gtss_ust */
  1   320 			5 b0_17		fixed bin (17) unaligned,
  1   321 			5 b18_35		bit (18) unaligned, /* not used */
  1   322 /* 171-175 */	4 lprgs (5),
  1   323 			5 b0_17		fixed bin (17) unaligned,
  1   324 			5 b18_35		fixed bin (17) unaligned,
  1   325 /* 176   */	4 fill	bit (36),
  1   326 /* 177   */	4 remote_io_buffer aligned,
  1   327 			5 buffer_control_word,
  1   328 				6 current_line_pointer  bit (18)unal,
  1   329 				6 buffer_threshold_address  bit (18)unal,
  1   330 			5 number_words_transmitted	fixed bin (17)unal,
  1   331 			5 FILL1			fixed bin (17)unal,
  1   332 			5 count_of_characters_transmitted fixed bin (17)unal,
  1   333 			5 FILL2			fixed bin (17)unal,
  1   334 			5 characters_transmitted (244) char (1) unal,
  1   335 /* 277   */	4 word_after_ust		bit (36) aligned;
  1   336 
  1   337 /*   END INCLUDE FILE gtss_ust_ext_.incl.pl1 */
       74 
       75 
  2     1 /* BEGIN INCLUDE FILE gtss_ext_.incl.pl1 */
  2     2 /*
  2     3*  Created: (Wardd Multics)  05/20/78 1307.6 mst Sat 
  2     4*  Modified: Ward            1981     add suspended_process dcl
  2     5*  Modified: Ron Barstad  83-07-21  Fixed level number on mcfc to 3
  2     6*  Modified: Ron Barstad  83-07-25  Fixed derail range in statistics to 4js3 number
  2     7**/
  2     8 dcl  gtss_ext_$aem                   fixed bin static ext	/* >0 Print "additional" error information. */;
  2     9 dcl  gtss_ext_$bad_drl_rtrn          static ext label	/* Default for drl_rtrn. */;
  2    10 dcl  gtss_ext_$db                    (72)bit(1)unal static ext;
  2    11 dcl  gtss_ext_$deferred_catalogs_ptr ptr ext;
  2    12 dcl  gtss_ext_$dispose_of_drl        static ext label	/* quit handlers for some derails use this label to abort */;
  2    13 dcl  gtss_ext_$drl_rtrn              (4)static ext label	/* where to return at subsystem end */;
  2    14 dcl  gtss_ext_$drm_path              char(168)static ext	/* gtss_expand_pathname_stores drm_path */;
  2    15 dcl  gtss_ext_$drun_jid              char (5) static ext	/* valid only for DRUN executing under absentee */;
  2    16 dcl  gtss_ext_$event_channel         fixed bin (71) static ext	/* used for DABT signals */;
  2    17 dcl  gtss_ext_$finished              static ext label	/* Return to gtss for normal conclusion. */;
  2    18 dcl  gtss_ext_$gdb_name              char(8)ext	/* Name H* module to debug. */;
  2    19 dcl  gtss_ext_$get_line              entry(ptr,ptr,fixed bin(21),fixed bin(21),fixed bin(35))variable ext /* Build mode input procedure. */;
  2    20 dcl  gtss_ext_$gtss_slave_area_seg   (4) ext static ptr	/* pointer to gtss slave area segment */;
  2    21 dcl  gtss_ext_$hcs_work_area_ptr     ptr ext static		/* Temp seg for acl lists. */;
  2    22 dcl  gtss_ext_$homedir               char (64) static ext /* user's home dir */;
  2    23 dcl  gtss_ext_$last_k_was_out        bit (1)aligned ext static	/* "1"b => last tty output was output. */;
  2    24 dcl  gtss_ext_$pdir                  char (168) varying ext static	/* pathname of process directory */;
  2    25 dcl  gtss_ext_$popup_from_pi         static ext label	/* transfer to this label after pi simulates popup primitive */;
  2    26 dcl  gtss_ext_$process_type          fixed bin (17) static ext;
  2    27 dcl  gtss_ext_$put_chars             entry(ptr,ptr,fixed bin(24),fixed bin(35)) variable ext	/* Terminal output procedure. */;
  2    28 dcl  gtss_ext_$restart_from_pi       static ext label	/* transfer to this label after pi restores machine conditions */;
  2    29 dcl  gtss_ext_$restart_seg_ptr       ptr static ext	/* points to DRUN restart file when exec under absentee */;
  2    30 dcl  gtss_ext_$sig_ptr               ext static ptr	/* saved ptr to signal_ */;
  2    31 dcl  gtss_ext_$stack_level_          fixed bin ext static;
  2    32 dcl  gtss_ext_$suspended_process     bit(1) ext static;
  2    33 dcl  gtss_ext_$SYstarstar_file_no    fixed bin (24) static ext;
  2    34 dcl  gtss_ext_$user_id               char (26)var ext;
  2    35 dcl  gtss_ext_$work_area_ptr         ptr ext;
  2    36 
  2    37 dcl  1 gtss_ext_$CFP_bits aligned static external
  2    38      , 3 no_input_yet bit (1) unaligned         /* used in gtss_CFP_input_, gtss_read_starCFP_ */
  2    39      , 3 rtn_bits bit (4) unaligned             /* used in gtss_CFP_input_, gtss_CFP_output_ */
  2    40      , 3 cpos_called bit (1) unaligned          /* used in gtss_CFP_input_, gtss_drl_t_cfio_, gtss_abandon_CFP_ */
  2    41      , 3 cout_called bit (1) unaligned          /* used in gtss_read_starCFP_, gtss_abandon_CFP_ */
  2    42      , 3 build_mode bit (1) unaligned	        /* used in gtss_build_, gtss_dsd_process_ */
  2    43      ;
  2    44 
  2    45 dcl 1 gtss_ext_$com_reg aligned static ext,
  2    46        3 tsdmx,
  2    47          4 dst fixed bin (18) unsigned unaligned,
  2    48          4 dit fixed bin (18) unsigned unaligned,
  2    49        3 tsdpt fixed bin (36) unsigned unaligned,
  2    50        3 tsddt fixed bin (36) unsigned unaligned,
  2    51        3 tsdid bit (72) unaligned,
  2    52        3 tsdsd bit (36) unaligned,
  2    53        3 tsdst fixed bin (36) unsigned unaligned,
  2    54        3 tsdjb fixed bin (35) unaligned,
  2    55        3 tsdgt,
  2    56          4 ust_loc fixed bin (18) unsigned unaligned,
  2    57          4 gating_ctl fixed bin (18) unsigned unaligned,
  2    58        3 tcdfr bit (36) unaligned;
  2    59 
  2    60 dcl 1 gtss_ext_$flags aligned static ext
  2    61      , 3 dispose_of_drl_on_pi	bit (01) unal	/* 1 => drl that should be aborted after quit-pi sequence */
  2    62      , 3 drl_in_progress	bit (01) unal	/* 1 => drl handler executing; 0 => gcos code executing */
  2    63      , 3 popup_from_pi	bit (01) unal	/* 1 => derail processor will simulate Gcos break instead of returning */
  2    64      , 3 unfinished_drl	bit (01) unal	/* 1 => subsystem is handling breaks and quit was raised during a drl */
  2    65      , 3 ss_time_limit_set	bit (01) unal	/* 1 => exec time limit set for subsystem */
  2    66      , 3 timer_ranout	bit (01) unal	/* 1 => user is executing timer runout code */
  2    67      , 3 gtss_com_err_sw      bit (01) unal       /* 1 => stop com_err_ string from going to terminal */   
  2    68      , 3 available		bit (65) unal
  2    69      ;
  2    70 
  2    71 
  2    72 dcl 1 gtss_ext_$statistics aligned static ext,		/* Derail usage statistics */
  2    73       3 total_time (-10:71)fixed bin (71),
  2    74       3 count (-10:71)fixed bin (17);
  2    75 
  2    76 /* 	Declaration of Available File Table
  2    77*   */
  2    78 dcl 1 gtss_ext_$aft aligned ext,			/* aft structure */
  2    79 
  2    80       3 start_list (0:102) fixed bin (24),		/* >0 => 1st aft_entry row to start of next entry chain. */
  2    81 
  2    82       3 aft_entry (20),
  2    83         4 altname char (8),				/* altname name for attaching this file */
  2    84         4 next_entry fixed bin (24),			/* Next aft_entry in hash chain. */
  2    85         4 previous_add fixed bin (24),			/* Previously added entry. */
  2    86         4 next_add fixed bin (24),			/* Entry added after this one. */
  2    87         4 used bit (1) unal,				/* "1"b => aft_entry contains AFT value. */
  2    88         4 forced bit(1) unal,				/* "1"b => gtss_verify_access_ forced access on this file. */
  2    89 
  2    90       3 free_space fixed bin (24),			/* Index of start of free space list for aft entries. */
  2    91       3 first_added fixed bin (24),			/* >0  => start of chain in add order. */
  2    92       3 last_added fixed bin (24)			/* >0 => end of chain in added order. */;
  2    93 
  2    94 dcl  gtss_ext_$ppt                   ptr ext /*  switch name for tapein drl */;
  2    95 /**	Data structure to provide access to installed
  2    96*   subsystems fast library load.
  2    97*   **/
  2    98 dcl 1 gtss_ext_$fast_lib aligned ext
  2    99      , 3 fast_lib_fcb ptr				/* Pointer to msf fcb.	*/
  2   100      , 3 fast_lib_ncp fixed bin (24)			/* Number of components. */
  2   101      , 3 comp_ptr (0:9)ptr				/* Pointer to component. */
  2   102      , 3 comp_wds (0:9)fixed bin (24)			/* Component length (words). */
  2   103      ;
  2   104 
  2   105 /* Pointers to segments to regulate multipler
  2   106*   callers to files. Same segments are used to regulate
  2   107*   all simulator callers.
  2   108**/
  2   109 dcl 1 gtss_ext_$mcfc	aligned ext,
  2   110       3 multics_lock_id	bit(36),
  2   111       3 wait_time		fixed bin,
  2   112       3 files_ptr		ptr,
  2   113       3 names_ptr		ptr,
  2   114       3 callers_ptr		(0:3)ptr
  2   115 ;
  2   116 
  2   117 /*   END INCLUDE FILE gtss_ext_.incl.pl1 */
       76 
       77 
  3     1 /*  */
  3     2 /* BEGIN INCLUDE FILE  mc.incl.pl1   Created Dec 72 for 6180 - WSS. */
  3     3 /* Modified 06/07/76 by Greenberg for mc.resignal */
  3     4 /* Modified 07/07/76 by Morris for fault register data */
  3     5 /* Modified 08/28/80 by J. A. Bush for the DPS8/70M CVPU */
  3     6 /* Modified '82 to make values constant */
  3     7 
  3     8 /* words 0-15 pointer registers */
  3     9 
  3    10 dcl  mcp ptr;
  3    11 
  3    12 dcl 1 mc based (mcp) aligned,
  3    13     2 prs (0:7) ptr,				/* POINTER  REGISTERS */
  3    14    (2 regs,					/* registers */
  3    15       3 x (0:7) bit (18),				/* index registers */
  3    16       3 a bit (36),					/* accumulator */
  3    17       3 q bit (36),					/* q-register */
  3    18       3 e bit (8),					/* exponent */
  3    19       3 pad1 bit (28),
  3    20       3 t bit (27),					/* timer register */
  3    21       3 pad2 bit (6),
  3    22       3 ralr bit (3),				/* ring alarm register */
  3    23 
  3    24     2 scu (0:7) bit (36),
  3    25 
  3    26     2 mask bit (72),				/* mem controller mask at time of fault */
  3    27     2 ips_temp bit (36),				/* Temporary storage for IPS info */
  3    28     2 errcode fixed bin (35),				/* fault handler's error code */
  3    29     2 fim_temp,
  3    30       3 unique_index bit (18) unal,			/* unique index for restarting faults */
  3    31       3 resignal bit (1) unal,			/* recompute signal name with fcode below */
  3    32       3 fcode bit (17) unal,				/* fault code used as index to FIM table and SCT */
  3    33     2 fault_reg bit (36),				/* fault register */
  3    34     2 pad2 bit (1),
  3    35     2 cpu_type fixed bin (2) unsigned,			/* L68 = 0, DPS8/70M = 1 */
  3    36     2 ext_fault_reg bit (15),				/* extended fault reg for DPS8/70M CPU */
  3    37     2 fault_time bit (54),				/* time of fault */
  3    38 
  3    39     2 eis_info (0:7) bit (36)) unaligned;
  3    40 
  3    41 
  3    42 dcl (apx fixed bin init (0),
  3    43      abx fixed bin init (1),
  3    44      bpx fixed bin init (2),
  3    45      bbx fixed bin init (3),
  3    46      lpx fixed bin init (4),
  3    47      lbx fixed bin init (5),
  3    48      spx fixed bin init (6),
  3    49      sbx fixed bin init (7)) internal static options (constant);
  3    50 
  3    51 
  3    52 
  3    53 
  3    54 dcl  scup ptr;
  3    55 
  3    56 dcl 1 scu based (scup) aligned,			/* SCU DATA */
  3    57 
  3    58 
  3    59 /*	WORD (0)		*/
  3    60 
  3    61    (2 ppr,					/* PROCEDURE POINTER REGISTER */
  3    62       3 prr bit (3),				/* procedure ring register */
  3    63       3 psr bit (15),				/* procedure segment register */
  3    64       3 p bit (1),					/* procedure privileged bit */
  3    65 
  3    66     2 apu,					/* APPENDING UNIT STATUS */
  3    67       3 xsf bit (1),				/* ext seg flag - IT modification */
  3    68       3 sdwm bit (1),				/* match in SDW Ass. Mem. */
  3    69       3 sd_on bit (1),				/* SDW Ass. Mem.  ON */
  3    70       3 ptwm bit (1),				/* match in PTW Ass. Mem. */
  3    71       3 pt_on bit (1),				/* PTW Ass. Mem.  ON */
  3    72       3 pi_ap bit (1),				/* Instr Fetch or Append cycle */
  3    73       3 dsptw bit (1),				/* Fetch of DSPTW */
  3    74       3 sdwnp bit (1),				/* Fetch of SDW non paged */
  3    75       3 sdwp bit (1),				/* Fetch of SDW paged */
  3    76       3 ptw bit (1),				/* Fetch of PTW */
  3    77       3 ptw2 bit (1),				/* Fetch of pre-paged PTW */
  3    78       3 fap bit (1),				/* Fetch of final address paged */
  3    79       3 fanp bit (1),				/* Fetch of final address non-paged */
  3    80       3 fabs bit (1),				/* Fetch of final address absolute */
  3    81 
  3    82     2 fault_cntr bit (3),				/* number of retrys of EIS instructions */
  3    83 
  3    84 
  3    85 /*	WORD (1)		*/
  3    86 
  3    87     2 fd,						/* FAULT  DATA */
  3    88       3 iro bit (1),				/* illegal ring order */
  3    89       3 oeb bit (1),				/* out of execute bracket */
  3    90       3 e_off bit (1),				/* no execute */
  3    91       3 orb bit (1),				/* out of read bracket */
  3    92       3 r_off bit (1),				/* no read */
  3    93       3 owb bit (1),				/* out of write bracket */
  3    94       3 w_off bit (1),				/* no write */
  3    95       3 no_ga bit (1),				/* not a gate */
  3    96       3 ocb bit (1),				/* out of call bracket */
  3    97       3 ocall bit (1),				/* outward call */
  3    98       3 boc bit (1),				/* bad outward call */
  3    99       3 inret bit (1),				/* inward return */
  3   100       3 crt bit (1),				/* cross ring transfer */
  3   101       3 ralr bit (1),				/* ring alarm register */
  3   102       3 am_er bit (1),				/* associative memory fault */
  3   103       3 oosb bit (1),				/* out of segment bounds */
  3   104       3 paru bit (1),				/* processor parity upper */
  3   105       3 parl bit (1),				/* processor parity lower */
  3   106       3 onc_1 bit (1),				/* op not complete type 1 */
  3   107       3 onc_2 bit (1),				/* op not complete type 2 */
  3   108 
  3   109     2 port_stat,					/* PORT  STATUS */
  3   110       3 ial bit (4),				/* illegal action lines */
  3   111       3 iac bit (3),				/* illegal action channel */
  3   112       3 con_chan bit (3),				/* connect channel */
  3   113 
  3   114     2 fi_num bit (5),				/* (fault/interrupt)  number */
  3   115     2 fi_flag bit (1),				/*  1 => fault,  0 => interrupt  */
  3   116 
  3   117 
  3   118 /*	WORD (2)		*/
  3   119 
  3   120     2 tpr,					/* TEMPORARY POINTER REGISTER */
  3   121       3 trr bit (3),				/* temporary ring register */
  3   122       3 tsr bit (15),				/* temporary segment register */
  3   123 
  3   124     2 pad2 bit (9),
  3   125 
  3   126     2 cpu_no bit (3),				/* CPU number */
  3   127 
  3   128     2 delta bit (6),				/* tally modification DELTA */
  3   129 
  3   130 
  3   131 /*	WORD (3)		*/
  3   132 
  3   133     2 word3 bit (18),
  3   134 
  3   135     2 tsr_stat,					/* TSR STATUS for 1,2,&3 word instructions */
  3   136       3 tsna,					/* Word 1 status */
  3   137         4 prn bit (3),				/* Word 1  PR  number */
  3   138         4 prv bit (1),				/* Word 1  PR  valid bit */
  3   139       3 tsnb,					/* Word 2  status */
  3   140         4 prn bit (3),				/* Word 2  PR  number */
  3   141         4 prv bit (1),				/* Word 2  PR  valid bit */
  3   142       3 tsnc,					/* Word 3  status */
  3   143         4 prn bit (3),				/* Word 3  PR  number */
  3   144         4 prv bit (1),				/* Word 3  PR  valid bit */
  3   145 
  3   146     2 tpr_tbr bit (6),				/* TPR.TBR  field */
  3   147 
  3   148 
  3   149 /* 	WORD (4)		*/
  3   150 
  3   151     2 ilc bit (18),					/* INSTRUCTION  COUNTER */
  3   152 
  3   153     2 ir,						/* INDICATOR  REGISTERS */
  3   154       3 zero bit (1),				/* zero indicator */
  3   155       3 neg bit (1),				/* negative indicator */
  3   156       3 carry bit (1),				/* carryry indicator */
  3   157       3 ovfl bit (1),				/* overflow indicator */
  3   158       3 eovf bit (1),				/* eponent overflow */
  3   159       3 eufl bit (1),				/* exponent underflow */
  3   160       3 oflm bit (1),				/* overflow mask */
  3   161       3 tro bit (1),				/* tally runout */
  3   162       3 par bit (1),				/* parity error */
  3   163       3 parm bit (1),				/* parity mask */
  3   164       3 bm bit (1),					/* ^bar mode */
  3   165       3 tru bit (1),				/* truncation mode */
  3   166       3 mif bit (1),				/* multi-word instruction mode */
  3   167       3 abs bit (1),				/* absolute mode */
  3   168       3 hex bit (1),				/* hexadecimal exponent mode */
  3   169       3 pad bit (3),
  3   170 
  3   171 
  3   172 /*	WORD (5)		*/
  3   173 
  3   174     2 ca bit (18),					/* COMPUTED  ADDRESS */
  3   175 
  3   176     2 cu,						/* CONTROL UNIT STATUS */
  3   177       3 rf bit (1),					/* on first cycle of repeat instr */
  3   178       3 rpt bit (1),				/* repeat instruction */
  3   179       3 rd bit (1),					/* repeat double instruction */
  3   180       3 rl bit (1),					/* repeat link instruciton */
  3   181       3 pot bit (1),				/* IT  modification */
  3   182       3 pon bit (1),				/* return type instruction */
  3   183       3 xde bit (1),				/* XDE from Even location */
  3   184       3 xdo bit (1),				/* XDE from Odd  location */
  3   185       3 poa bit (1),				/* operation preparation */
  3   186       3 rfi bit (1),				/* tells CPU to refetch instruction */
  3   187       3 its bit (1),				/* ITS modification */
  3   188       3 if bit (1),					/* fault occured during instruction fetch */
  3   189 
  3   190     2 cpu_tag bit (6)) unaligned,			/* computed tag field */
  3   191 
  3   192 
  3   193 /*	WORDS (6,7)	*/
  3   194 
  3   195     2 even_inst bit (36),				/* even instruction of faulting pair */
  3   196 
  3   197     2 odd_inst bit (36);				/* odd  instruction of faulting pair */
  3   198 
  3   199 
  3   200 
  3   201 
  3   202 
  3   203 
  3   204 /*	ALTERNATE   SCU  DECLARATION		*/
  3   205 
  3   206 
  3   207 dcl 1 scux based (scup) aligned,
  3   208 
  3   209    (2 pad0 bit (36),
  3   210 
  3   211     2 fd,						/* GROUP II  FAULT DATA */
  3   212       3 isn bit (1),				/* illegal segment number */
  3   213       3 ioc bit (1),				/* illegal op  code  */
  3   214       3 ia_am bit (1),				/* illegal address - modifier */
  3   215       3 isp bit (1),				/* illegal slave  procedure */
  3   216       3 ipr bit (1),				/* illegal procedure */
  3   217       3 nea bit (1),				/* non existent address */
  3   218       3 oobb bit (1),				/* out of bounds */
  3   219       3 pad bit (29),
  3   220 
  3   221     2 pad2 bit (36),
  3   222 
  3   223     2 pad3a bit (18),
  3   224 
  3   225     2 tsr_stat (0:2),				/* TSR  STATUS  as an  ARRAY */
  3   226       3 prn bit (3),				/* PR  number */
  3   227       3 prv bit (1),				/* PR  valid bit */
  3   228 
  3   229     2 pad3b bit (6)) unaligned,
  3   230 
  3   231     2 pad45 (0:1) bit (36),
  3   232 
  3   233     2 instr (0:1) bit (36);				/* Instruction ARRAY */
  3   234 
  3   235 
  3   236 
  3   237 /*  END INCLUDE FILE   mc.incl.pl1 */
       78 
  4     1 /* BEGIN INCLUDE FILE gtss_db_names.incl.pl1 */
  4     2 /*
  4     3*  Created:  (Wardd Multics)  03/29/79 1909.1 mst Thu 
  4     4**/
  4     5 
  4     6 /* To provide a new debugging switch:
  4     7*
  4     8*   1) Locate the comment "Insert next entry above this comment".
  4     9*
  4    10*   2) Place a new declaration for a db_ variable just
  4    11*      above this comment, in the same manner as the
  4    12*      current declaration just above the comment, using
  4    13*      the next integer gtss_ext_$db index.
  4    14*
  4    15*   3) Execute the gtss|db_names ted macro (this updates
  4    16*      the sorted name table).
  4    17*
  4    18*   4) Example use:
  4    19*
  4    20*      if db_drl_grow then do;
  4    21*      .
  4    22*      .
  4    23*      .
  4    24*      debug i/o statements using com_err_ or ioa_
  4    25*      .
  4    26*      .
  4    27*      .
  4    28*      end;
  4    29*
  4    30**/
  4    31 
  4    32 dcl (
  4    33  db_		bit(1) defined(gtss_ext_$db(01))
  4    34 ,db_CFP_input	bit(1) defined(gtss_ext_$db(02))
  4    35 ,db_drl_addmem	bit(1) defined(gtss_ext_$db(03))
  4    36 ,db_drl_defil	bit(1) defined(gtss_ext_$db(04))
  4    37 ,db_drl_filact	bit(1) defined(gtss_ext_$db(05))
  4    38 ,db_drl_filsp	bit(1) defined(gtss_ext_$db(06))
  4    39 ,db_drl_grow	bit(1) defined(gtss_ext_$db(07))
  4    40 ,db_drl_rew	bit(1) defined(gtss_ext_$db(08))
  4    41 ,db_filact_funct02	bit(1) defined(gtss_ext_$db(09))
  4    42 ,db_filact_funct03	bit(1) defined(gtss_ext_$db(10))
  4    43 ,db_filact_funct04	bit(1) defined(gtss_ext_$db(11))
  4    44 ,db_filact_funct05	bit(1) defined(gtss_ext_$db(12))
  4    45 ,db_filact_funct10	bit(1) defined(gtss_ext_$db(13))
  4    46 ,db_filact_funct11	bit(1) defined(gtss_ext_$db(14))
  4    47 ,db_filact_funct14	bit(1) defined(gtss_ext_$db(15))
  4    48 ,db_filact_funct18	bit(1) defined(gtss_ext_$db(16))
  4    49 ,db_filact_funct19	bit(1) defined(gtss_ext_$db(17))
  4    50 ,db_filact_funct21	bit(1) defined(gtss_ext_$db(18))
  4    51 ,db_filact_funct22	bit(1) defined(gtss_ext_$db(19))
  4    52 ,db_interp_prim	bit(1) defined(gtss_ext_$db(20))
  4    53 ,db_ios		bit(1) defined(gtss_ext_$db(21))
  4    54 ,db_run_subsystem	bit(1) defined(gtss_ext_$db(22))
  4    55 ,db_drl_t_cfio	bit(1) defined(gtss_ext_$db(23))
  4    56 ,db_drl_switch	bit(1) defined(gtss_ext_$db(24))
  4    57 ,db_drl_dio	bit(1) defined(gtss_ext_$db(25))
  4    58 ,db_drl_retfil	bit(1) defined(gtss_ext_$db(26))
  4    59 ,db_drl_msub	bit(1) defined(gtss_ext_$db(27))
  4    60 ,db_drl_callss	bit(1) defined(gtss_ext_$db(28))
  4    61 ,db_drl_rstswh	bit(1) defined(gtss_ext_$db(29))
  4    62 ,db_drl_setswh	bit(1) defined(gtss_ext_$db(30))
  4    63 ,db_mcfc		bit(1) defined(gtss_ext_$db(31))
  4    64 ,db_dq		bit(1) defined(gtss_ext_$db(32))
  4    65 ,db_abs		bit(1) defined(gtss_ext_$db(33))
  4    66 ,db_attributes_mgr	bit(1) defined(gtss_ext_$db(34))
  4    67 ,db_expand_pathname bit(1) defined(gtss_ext_$db(35))
  4    68 ,db_drl_part	bit(1) defined(gtss_ext_$db(36))
  4    69 ,db_drl_morlnk	bit(1) defined(gtss_ext_$db(37))
  4    70 ,db_drl_kin	bit(1) defined(gtss_ext_$db(38))
  4    71 /* Insert next entry above this comment. */
  4    72 );
  4    73 
  4    74 /* Table of sorted names. */
  4    75 dcl 1 debug_bit_names (38) static int options(constant)
  4    76 ,     2 name char(18)var init(
  4    77          "" ,"CFP_input" ,"abs" ,"attributes_mgr" ,"dq" ,"drl_addmem"
  4    78          ,"drl_callss" ,"drl_defil" ,"drl_dio" ,"drl_filact" ,"drl_filsp"
  4    79          ,"drl_grow" ,"drl_kin" ,"drl_morlnk" ,"drl_msub" ,"drl_part"
  4    80          ,"drl_retfil" ,"drl_rew" ,"drl_rstswh" ,"drl_setswh" ,"drl_switch"
  4    81          ,"drl_t_cfio" ,"expand_pathname" ,"filact_funct02" ,"filact_funct03"
  4    82          ,"filact_funct04" ,"filact_funct05" ,"filact_funct10" ,"filact_funct11"
  4    83          ,"filact_funct14" ,"filact_funct18" ,"filact_funct19" ,"filact_funct21"
  4    84          ,"filact_funct22" ,"interp_prim" ,"ios" ,"mcfc" ,"run_subsystem"
  4    85 			)
  4    86 ,     2 value fixed bin init(
  4    87          01 ,02 ,33 ,34 ,32 ,03 ,28 ,04 ,25 ,05 ,06 ,07 ,38 ,37 ,27 ,36 ,26 ,08
  4    88          ,29 ,30 ,24 ,23 ,35 ,09 ,10 ,11 ,12 ,13 ,14 ,15 ,16 ,17 ,18 ,19 ,20 ,21
  4    89          ,31 ,22
  4    90 			);
  4    91 /* End of table. */
  4    92 /*   END INCLUDE FILE gtss_db_names.incl.pl1 */
       79 
       80 
  5     1 /* BEGIN INCLUDE FILE gtss_pr_sw.incl.pl1 */
  5     2 /*
  5     3*  Created: (Wardd Multics)  07/05/79 1638.7 mst Thu 
  5     4**/
  5     5 pr_sw: proc (w, on_off, qin, qout);
  5     6 
  5     7 /* Print user switch word. */
  5     8 dcl  w                        char(1)parm;
  5     9 dcl  on_off                   char(3)parm;
  5    10 dcl  qin                      bit(36)parm;
  5    11 dcl  qout                     bit(36)parm;
  5    12 	call ioa_$nnl ("SWITCH WORD^1a: SET ^3a ", w, on_off);
  5    13 	c = 0;
  5    14 	do i = lbound (q1, 1) to hbound (q1, 1);
  5    15 	     if q1 (i) then do;
  5    16 		c = c+1;
  5    17 		if c>1 then call ioa_$nnl (",");
  5    18 		call ioa_$nnl ("^i", i);
  5    19 	     end;
  5    20 	end;
  5    21 	if c = 0 then call ioa_$nnl ("none");
  5    22 	call ioa_$nnl (" NOW ON ");
  5    23 	c = 0;
  5    24 	do i = lbound (q2, 1) to hbound (q2, 1);
  5    25 	     if q2 (i) then do;
  5    26 		c = c+1;
  5    27 		if c>1 then call ioa_$nnl (",");
  5    28 		call ioa_$nnl ("^i", i);
  5    29 	     end;
  5    30 	end;
  5    31 	if c = 0 then call ioa_$nnl ("none");
  5    32 	call ioa_$nnl ("^/");
  5    33 	return;
  5    34 
  5    35 dcl  ioa_$nnl                 entry options(variable);
  5    36 dcl  q1                       (0:35)bit(1)unal based(addr(qin));
  5    37 dcl  q2                       (0:35)bit(1)unal based(addr(qout));
  5    38 dcl  i                        fixed bin;
  5    39 dcl  c                        fixed bin;
  5    40      end						/* pr_sw. */;
  5    41 /*   END INCLUDE FILE gtss_pr_sw.incl.pl1 */
       81 
       82      end gtss_drl_setswh_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/10/84  1043.4  gtss_drl_setswh_.pl1              >spec>on>7105>gtss_drl_setswh_.pl1
74           1    09/09/83  1714.3  gtss_ust_ext_.incl.pl1            >ldd>include>gtss_ust_ext_.incl.pl1
76           2    09/09/83  1713.8  gtss_ext_.incl.pl1                >ldd>include>gtss_ext_.incl.pl1
78           3    12/15/83  1100.4  mc.incl.pl1                       >ldd>include>mc.incl.pl1
79           4    09/09/83  1713.6  gtss_db_names.incl.pl1            >ldd>include>gtss_db_names.incl.pl1
81           5    09/09/83  1713.3  gtss_pr_sw.incl.pl1               >ldd>include>gtss_pr_sw.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
c                               000121 automatic       fixed bin(17,0)          dcl 5-39 set ref 5-13* 5-16* 5-16 5-17 5-21 5-23*
                                                                                  5-26* 5-26 5-27 5-31
db_drl_setswh                          defined         bit(1)                   unaligned dcl 4-32 ref 60
drl_ptr                         000104 automatic       pointer                  initial dcl 69 set ref 47* 51 69*
drl_word                               based           structure                level 1 dcl 70
gseg                            000102 automatic       pointer                  dcl 68 set ref 46* 47
gtss_ext_$db                    000012 external static bit(1)                   array unaligned dcl 2-10 ref 60 60
gtss_ext_$gtss_slave_area_seg   000014 external static pointer                  array dcl 2-20 ref 46
gtss_ext_$stack_level_          000016 external static fixed bin(17,0)          dcl 2-31 ref 46
gtss_ust                        000010 external static structure                level 2 dcl 1-16
gtss_ust_ext_$ust               000010 external static structure                level 1 dcl 1-16
i                               000120 automatic       fixed bin(17,0)          dcl 5-38 set ref 5-14* 5-15 5-18* 5-24* 5-25 5-28*
ilc                       4            based           bit(18)                  level 2 packed unaligned dcl 3-56 ref 47
increment                              parameter       fixed bin(17,0)          dcl 24 set ref 14 44*
ioa_$nnl                        000020 constant        entry                    external dcl 5-35 ref 5-12 5-17 5-18 5-21 5-22 5-27
                                                                                  5-28 5-31 5-32
lswt2                   147     000010 external static structure                level 3 dcl 1-16 set ref 56 56*
lswth                    21     000010 external static structure                level 3 dcl 1-16 set ref 52 52*
mc                                     based           structure                level 1 dcl 3-12
mcp                             000106 automatic       pointer                  dcl 3-10 set ref 25* 43 50 52 52 56 56 60
mcpp                                   parameter       pointer                  dcl 23 ref 14 25
modifier                  0(30)        based           bit(6)                   level 2 packed unaligned dcl 70 ref 51
on_off                                 parameter       char(3)                  unaligned dcl 5-9 set ref 5-5 5-12*
q                        25            based           bit(36)                  level 3 packed unaligned dcl 3-12 set ref 50 52 52*
                                                                                  56 56* 60*
q1                                     based           bit(1)                   array unaligned dcl 5-36 ref 5-14 5-14 5-15
q2                                     based           bit(1)                   array unaligned dcl 5-37 ref 5-24 5-24 5-25
qin                             000100 automatic       bit(36)                  unaligned dcl 65 in procedure "gtss_drl_setswh_" set
                                                                                  ref 50* 60*
qin                                    parameter       bit(36)                  unaligned dcl 5-10 in procedure "pr_sw" set ref 5-5
                                                                                  5-14 5-14 5-15
qout                                   parameter       bit(36)                  unaligned dcl 5-11 set ref 5-5 5-24 5-24 5-25
regs                     20            based           structure                level 2 packed unaligned dcl 3-12
scu                                    based           structure                level 1 dcl 3-56 in procedure "gtss_drl_setswh_"
scu                      30            based           bit(36)                  array level 2 in structure "mc" packed unaligned
                                                                                  dcl 3-12 in procedure "gtss_drl_setswh_" set ref
                                                                                  43
scup                            000110 automatic       pointer                  dcl 3-54 set ref 43* 47
w                                      parameter       char(1)                  unaligned dcl 5-8 set ref 5-5 5-12*
wh                              000101 automatic       char(1)                  unaligned dcl 66 set ref 53* 57* 60*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
abx                                    internal static fixed bin(17,0)          initial dcl 3-42
apx                                    internal static fixed bin(17,0)          initial dcl 3-42
bbx                                    internal static fixed bin(17,0)          initial dcl 3-42
bpx                                    internal static fixed bin(17,0)          initial dcl 3-42
db_                                    defined         bit(1)                   unaligned dcl 4-32
db_CFP_input                           defined         bit(1)                   unaligned dcl 4-32
db_abs                                 defined         bit(1)                   unaligned dcl 4-32
db_attributes_mgr                      defined         bit(1)                   unaligned dcl 4-32
db_dq                                  defined         bit(1)                   unaligned dcl 4-32
db_drl_addmem                          defined         bit(1)                   unaligned dcl 4-32
db_drl_callss                          defined         bit(1)                   unaligned dcl 4-32
db_drl_defil                           defined         bit(1)                   unaligned dcl 4-32
db_drl_dio                             defined         bit(1)                   unaligned dcl 4-32
db_drl_filact                          defined         bit(1)                   unaligned dcl 4-32
db_drl_filsp                           defined         bit(1)                   unaligned dcl 4-32
db_drl_grow                            defined         bit(1)                   unaligned dcl 4-32
db_drl_kin                             defined         bit(1)                   unaligned dcl 4-32
db_drl_morlnk                          defined         bit(1)                   unaligned dcl 4-32
db_drl_msub                            defined         bit(1)                   unaligned dcl 4-32
db_drl_part                            defined         bit(1)                   unaligned dcl 4-32
db_drl_retfil                          defined         bit(1)                   unaligned dcl 4-32
db_drl_rew                             defined         bit(1)                   unaligned dcl 4-32
db_drl_rstswh                          defined         bit(1)                   unaligned dcl 4-32
db_drl_switch                          defined         bit(1)                   unaligned dcl 4-32
db_drl_t_cfio                          defined         bit(1)                   unaligned dcl 4-32
db_expand_pathname                     defined         bit(1)                   unaligned dcl 4-32
db_filact_funct02                      defined         bit(1)                   unaligned dcl 4-32
db_filact_funct03                      defined         bit(1)                   unaligned dcl 4-32
db_filact_funct04                      defined         bit(1)                   unaligned dcl 4-32
db_filact_funct05                      defined         bit(1)                   unaligned dcl 4-32
db_filact_funct10                      defined         bit(1)                   unaligned dcl 4-32
db_filact_funct11                      defined         bit(1)                   unaligned dcl 4-32
db_filact_funct14                      defined         bit(1)                   unaligned dcl 4-32
db_filact_funct18                      defined         bit(1)                   unaligned dcl 4-32
db_filact_funct19                      defined         bit(1)                   unaligned dcl 4-32
db_filact_funct21                      defined         bit(1)                   unaligned dcl 4-32
db_filact_funct22                      defined         bit(1)                   unaligned dcl 4-32
db_interp_prim                         defined         bit(1)                   unaligned dcl 4-32
db_ios                                 defined         bit(1)                   unaligned dcl 4-32
db_mcfc                                defined         bit(1)                   unaligned dcl 4-32
db_run_subsystem                       defined         bit(1)                   unaligned dcl 4-32
debug_bit_names                        internal static structure                array level 1 unaligned dcl 4-75
gtss_ext_$CFP_bits                     external static structure                level 1 dcl 2-37
gtss_ext_$SYstarstar_file_no           external static fixed bin(24,0)          dcl 2-33
gtss_ext_$aem                          external static fixed bin(17,0)          dcl 2-8
gtss_ext_$aft                          external static structure                level 1 dcl 2-78
gtss_ext_$bad_drl_rtrn                 external static label variable           dcl 2-9
gtss_ext_$com_reg                      external static structure                level 1 dcl 2-45
gtss_ext_$deferred_catalogs_ptr        external static pointer                  dcl 2-11
gtss_ext_$dispose_of_drl               external static label variable           dcl 2-12
gtss_ext_$drl_rtrn                     external static label variable           array dcl 2-13
gtss_ext_$drm_path                     external static char(168)                unaligned dcl 2-14
gtss_ext_$drun_jid                     external static char(5)                  unaligned dcl 2-15
gtss_ext_$event_channel                external static fixed bin(71,0)          dcl 2-16
gtss_ext_$fast_lib                     external static structure                level 1 dcl 2-98
gtss_ext_$finished                     external static label variable           dcl 2-17
gtss_ext_$flags                        external static structure                level 1 dcl 2-60
gtss_ext_$gdb_name                     external static char(8)                  unaligned dcl 2-18
gtss_ext_$get_line                     external static entry variable           dcl 2-19
gtss_ext_$hcs_work_area_ptr            external static pointer                  dcl 2-21
gtss_ext_$homedir                      external static char(64)                 unaligned dcl 2-22
gtss_ext_$last_k_was_out               external static bit(1)                   dcl 2-23
gtss_ext_$mcfc                         external static structure                level 1 dcl 2-109
gtss_ext_$pdir                         external static varying char(168)        dcl 2-24
gtss_ext_$popup_from_pi                external static label variable           dcl 2-25
gtss_ext_$ppt                          external static pointer                  dcl 2-94
gtss_ext_$process_type                 external static fixed bin(17,0)          dcl 2-26
gtss_ext_$put_chars                    external static entry variable           dcl 2-27
gtss_ext_$restart_from_pi              external static label variable           dcl 2-28
gtss_ext_$restart_seg_ptr              external static pointer                  dcl 2-29
gtss_ext_$sig_ptr                      external static pointer                  dcl 2-30
gtss_ext_$statistics                   external static structure                level 1 dcl 2-72
gtss_ext_$suspended_process            external static bit(1)                   unaligned dcl 2-32
gtss_ext_$user_id                      external static varying char(26)         dcl 2-34
gtss_ext_$work_area_ptr                external static pointer                  dcl 2-35
ioa_                            000000 constant        entry                    external dcl 67
lbx                                    internal static fixed bin(17,0)          initial dcl 3-42
lpx                                    internal static fixed bin(17,0)          initial dcl 3-42
sbx                                    internal static fixed bin(17,0)          initial dcl 3-42
scux                                   based           structure                level 1 dcl 3-207
spx                                    internal static fixed bin(17,0)          initial dcl 3-42

NAMES DECLARED BY EXPLICIT CONTEXT.
gtss_drl_setswh_                000032 constant        entry                    external dcl 14
pr_sw                           000130 constant        entry                    internal dcl 5-5 ref 60

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 43 5-14 5-14 5-15 5-24 5-24 5-25
addrel                                                 builtin function         ref 47
fixed                                                  builtin function         ref 47
hbound                                                 builtin function         ref 5-14 5-24
lbound                                                 builtin function         ref 5-14 5-24
null                                                   builtin function         ref 69
string                                                 builtin function         set ref 52 52* 56 56*

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       466         510     373         476
Length       762     373        22         235      72           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gtss_drl_setswh_                    122 external procedure  is an external procedure.  
pr_sw                                   internal procedure  shares stack frame of external procedure gtss_drl_setswh_.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gtss_drl_setswh_         000100 qin                         gtss_drl_setswh_
                         000101 wh                          gtss_drl_setswh_
                         000102 gseg                        gtss_drl_setswh_
                         000104 drl_ptr                     gtss_drl_setswh_
                         000106 mcp                         gtss_drl_setswh_
                         000110 scup                        gtss_drl_setswh_
                         000120 i                           pr_sw
                         000121 c                           pr_sw

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
ioa_$nnl

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
gtss_ext_$db                  gtss_ext_$gtss_slave_area_seg gtss_ext_$stack_level_        gtss_ust_ext_$ust




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     14 000026        69 000037        25 000041        43 000045        44 000047        46 000050        47 000055
     50 000062        51 000064        52 000067        53 000074        54 000076        56 000077        57 000104
     60 000106        61 000127    5    5 000130    5   12 000132    5   13 000162    5   14 000163    5   15 000167
 5   16 000175    5   17 000176    5   18 000215    5   20 000234    5   21 000236    5   22 000253    5   23 000266
 5   24 000267    5   25 000273    5   26 000301    5   27 000302    5   28 000321    5   30 000340    5   31 000342
 5   32 000357    5   33 000372


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
