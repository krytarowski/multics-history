	COMPILATION LISTING OF SEGMENT gtss_abs_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/10/84  1219.9 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   *                                                         *
        4*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        5*   *                                                         *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 gtss_abs_: proc;
       10 
       11 /**
       12*	ENTRY		FUNCTION
       13*
       14*	get_id		Returns the unique Multics absentee request
       15*			id, for the given DRUN job id.
       16*
       17*	get_drm		Returns the generated gcos_set_environment
       18*			command, with the directory mapping rules
       19*			currently in effect.
       20*
       21*	create_absin	Returns an absin file.
       22*
       23*	abs_equiv		Performs the equivalent Multics absentee
       24*			function that the DRUN subsystem has just
       25*			performed. Examples: enter_abs_request ...etc.
       26*
       27*	cpu_runout	This entry is called when the execution time limit
       28*			has been exceeded. Puts the appropriate error code
       29*			in the UST, aborts the current subsystem, and lets
       30*			the DRUN subsystem produce the output file.
       31*
       32*	dabt_check	This entry is called every 30 cpu seconds (set
       33*			in gtss_drun_) when a DRUN is executing under
       34*			absentee. It checks to see if the DABT request
       35*			has been given from an interactive process to
       36*			cancel this run.
       37*
       38*   Author:  Al Dupuis	08, 1979.
       39*   Change:  Dave Ward	08/19/79 Provide cwd to dir drun done from.
       40*			         Eliminated cl, made same as cmd_line.
       41*   Change:  Al Dupuis	08/20/79 Added cpu_runout entry.
       42*   Change:  Al Dupuis	09/16/79 Added dabt_check entry.
       43***/
       44 
       45 
       46 	call com_err_ (0, "gtss_abs_",
       47 	     "See documentation for meaningful entries.");
       48 	return;
       49 
       50 
       51 get_id:	entry (drun_job_id) returns (char (19));
       52 
       53 /**
       54*	This entry returns the unique Multics absentee
       55*	request id associated with the DRUN job id given.
       56***/
       57 
       58 
       59 
       60 	caller = "gtss_abs_$get_id";
       61 	error = "0"b;
       62 	djid = drun_job_id;
       63 	if ^valid_id ()
       64 	then return (" ");
       65 	call get_abs_id;
       66 	return (absentee_id);
       67 
       68 
       69 get_drm:	entry returns (char (*));
       70 
       71 /**
       72*
       73*	This entry returns a generated gcos_set_environment
       74*	command, with the drm rules currently in effect.
       75***/
       76 
       77 	caller = "gtss_abs_$get_drm";
       78 	dir_map_rule = gse_ext_$drm_rule;
       79 	if dir_map_rule = 0 then do;
       80 	     call com_err_ (0, caller,
       81 		"Bug, gse_ext_$drm_rule was not set.");
       82 	     return (" ");
       83 	end;
       84 
       85 	if dir_map_rule = 1 then
       86 	     return ("gse -drm umc -umc_name " || rtrim (gse_ext_$umc_name));
       87 
       88 	else if dir_map_rule = 2 then
       89 	     return ("gse -drm wd");
       90 
       91 	else if dir_map_rule = 3 then
       92 	     return ("gse -drm smc -smc_pathname "
       93 	     || rtrim (gse_ext_$smc_pathname)
       94 	     || " -umc_name " || rtrim (gse_ext_$umc_name));
       95 
       96 	else call com_err_ (0, caller,
       97 	     "gse_ext_$drm_rule invalid, value = ^a",
       98 	     gse_ext_$drm_rule);
       99 	return (" ");
      100 
      101 dcl  dir_map_rule             fixed bin (24);
      102 
      103 
      104 create_absin: entry returns (char (*));
      105 
      106 /**	This entry generates the absin file	**/
      107 
      108 
      109 	return ("&1" || CR
      110 	     || "gtss$drun &2" || CR
      111 	     || "drun" || CR
      112 	     || "bye" || CR
      113 	     || "logout" || CR);
      114 
      115 abs_equiv: entry;
      116 
      117 /**
      118*	This entry performs the equivalent action,
      119*	in Multics terms, that the DRUN subsystem has
      120*	just performed. It is called from
      121*	gtss_drl_t_cfio_ function (6), after the DRUN
      122*	subsystem has modified the #D queue file, to
      123*	reflect an action it has just performed.
      124*	In the following chart, the value of action
      125*	is the value of the status of the catalog
      126*	entry as described in DB84, page 16-20.
      127*
      128*	ACTION		MODULE		Multics EQUIVALENT
      129*
      130*	  1		enter_abs_req	enters a Multics absentee request
      131*	  4		cancel_abs_req	cancels the Multics absentee request
      132*
      133***/
      134 
      135 
      136 /** Obtain pointer to #D header **/
      137 	call gtss_dq_$hdrp (dqh_ptr);
      138 	if dqh_ptr = null () then call gtss_abort_subsystem_ (
      139 	     gtss_find_cond_frame_ ("derail"),
      140 	     caller,
      141 	     0,
      142 	     "Could not get pointer to #D header");
      143 	no_of_entries = dqh_ptr -> dq_header.dhbsn.no_of_cea;
      144 	call gtss_dq_$entries_info (addr (entries_info), no_of_entries, no_of_entries_found);
      145 	if no_of_entries_found = 0 then return;
      146 
      147 /** Perform the equivalent absentee function **/
      148 	do eii = 1 to no_of_entries_found;
      149 	     call job_action (entries_info.job_stat (eii));
      150 	end;
      151 
      152 
      153 	return;
      154 
      155 cpu_runout: entry (mc_ptr, name);
      156 
      157 
      158 /* If subsystem timer running kill it	*/
      159 	if gtss_ext_$flags.ss_time_limit_set then do;
      160 	     call timer_manager_$reset_cpu_call (gtss_fault_processor_$timer_runout);
      161 	     gtss_ext_$flags.ss_time_limit_set = "0"b;
      162 	end;
      163 
      164 /* Send error message to *CFP */
      165 	gtss_ext_$flags.gtss_com_err_sw = "1"b;
      166 	call com_err_$suppress_name (0, "gtss_abs_",
      167 	     "<67> PROCESSOR TIME LIMIT EXCEEDED");
      168 
      169 /* And pass the fault over to be processed	*/
      170 	call gtss_fault_processor_$timer_runout (mc_ptr, name);
      171 	return;
      172 
      173 dabt_check: entry (mc_ptr, name);
      174 
      175 
      176 
      177 
      178 	call ipc_$read_ev_chn (gtss_ext_$event_channel, ev_occured,
      179 	     gtss_ext_$restart_seg_ptr, code);
      180 	if code ^= 0 then do;
      181 	     call convert_ipc_code_ (code);
      182 	     call com_err_ (code, caller,
      183 		"Couldn't check to see if event occured.");
      184 	     signal condition (gtss_fail);
      185 	end;
      186 	if ev_occured = 0 then do;
      187 	     call timer_manager_$cpu_call (30, "11"b, gtss_abs_$dabt_check);
      188 	     return;
      189 	end;
      190 
      191 /* A DABT request has been sent by an interactive process */
      192 	call timer_manager_$reset_cpu_call (gtss_abs_$cpu_runout);
      193 	call timer_manager_$reset_cpu_call (gtss_fault_processor_$timer_runout);
      194 	gtss_ext_$flags.ss_time_limit_set = "0"b;
      195 	gtss_ext_$flags.timer_ranout = "0"b;
      196 
      197 /* Send error message to *CFP */
      198 	gtss_ext_$flags.gtss_com_err_sw = "1"b;
      199 	call com_err_$suppress_name (0, "gtss_abs_",
      200 	     "<67> TERMINATED BY DABT WHILE EXECUTING");
      201 	
      202 /* Put a decimal 13 in start_term so DRUN subsystem knows DABT request has
      203*   been given. Set the next input sector to be the COUT sector. Unwind
      204*   the primitive interpretor to it's first invokation.	*/
      205 	gtss_ust.lcfst.start_term = 13;
      206 	gtss_ust.lcfio.sect_in = gtss_ust.lcfst.initial_sect_out - 1;
      207 	call gtss_interp_prim_$sysret ();		/* doesn't return */
      208 	return;					/* just in case */
      209 
      210 get_abs_id: proc;
      211 
      212 /** Get the output from list_absentee_request (lar) **/
      213 	     proc_dir = get_pdir_ ();
      214 	     path = "ao_" || unique_chars_ ("0"b);
      215 	     cmd_line = "fo [pd]>" || path;
      216 	     call cu_$cp (addrel (addr (cmd_line), 1), length (cmd_line), code);
      217 	     cmd_line = "lar -long";
      218 	     call cu_$cp (addrel (addr (cmd_line), 1), length (cmd_line), code);
      219 	     cmd_line = "ro";
      220 	     call cu_$cp (addrel (addr (cmd_line), 1), length (cmd_line), code);
      221 
      222 /** Overlay lar output **/
      223 	     call hcs_$initiate_count (proc_dir, path, "", bit_count,
      224 		1, seg_ptr, code);
      225 	     if code ^= 0 then do;
      226 		call com_err_ (code, caller,
      227 		     "Couldn't initiate ^a in ^a",
      228 		     path, proc_dir);
      229 		error = "1"b;
      230 	     end;
      231 
      232 /** Get the Multics absentee request id **/
      233 	     call find_id;
      234 	     if error then absentee_id = " ";
      235 	     else absentee_id = abs_id;
      236 
      237 /** Finished with lar output **/
      238 	     call delete_$ptr (seg_ptr, "100100"b, "gtss_abs_", code);
      239 	     if code ^= 0 then do;
      240 		call com_err_ (code, caller,
      241 		     "Couldn't delete ^a in ^a",
      242 		     path, proc_dir);
      243 	     end;
      244 
      245 
      246 find_id:	     proc;
      247 
      248 		did_pos = index (cs, djid);
      249 		if did_pos = 0 then do;
      250 		     error = "1"b;
      251 		     return;
      252 		end;
      253 
      254 		table_length = did_pos - 1;
      255 		do backup_indx = table_length to 11 by -1;
      256 		     rid_ptr = addr (table (backup_indx - 11));
      257 		     if rid = "Request ID:" then do;
      258 			aid_ptr = addr (table (backup_indx + 1));
      259 			return;
      260 		     end;
      261 		end;
      262 
      263 		call com_err_ (0, caller,
      264 		     "Bug, could not get absentee request id");
      265 		error = "1"b;
      266 	     end;					/* find_id */
      267 	end;					/* get_abs_id_ */
      268 
      269 valid_id:	proc returns (bit (1));
      270 
      271 	     if ((d1 < "0") | (d1 > "9"))
      272 	     | ((d2 < "0") | (d2 > "9"))
      273 	     | ((d3 < "0") | (d3 > "9"))
      274 	     | ((d4 < "0") | (d4 > "9"))
      275 	     | ^((d5 = "d") | (d5 = "D"))
      276 	     then do;
      277 		call com_err_ (0, caller,
      278 		     "^a is not a valid drun job id", djid);
      279 		return ("0"b);
      280 	     end;
      281 
      282 	     if d5 = "d" then d5 = "D";
      283 	     return ("1"b);
      284 
      285 	end;					/* valid_id */
      286 
      287 
      288 
      289 
      290 no_action: proc;
      291 
      292 	     return;
      293 
      294 	end;					/* no_action */
      295 
      296 enter_abs_req: proc;
      297 
      298 
      299 /** Check to see if request has been entered before **/
      300 	     if entries_info.aid (eii) ^= " " then do;
      301 		call check_date_time;
      302 		if ^reschedule then return;
      303 	     end;
      304 	     caller = "gtss_abs_$enter_abs_req";
      305 
      306 
      307 /** Generate the following command
      308*ear [hd]>drun_control -of drun_control.nnnnD -bf {-li n -tm "DT" -rt} -ag "gse_command" nnnnD
      309***/
      310 
      311 /** enter_abs_request [hd]>drun_control -of [hd]>drun_control.nnnnD -brief **/
      312 	     call user_info_$homedir (home_dir);
      313 	     cmd_line = "enter_abs_request " || rtrim (home_dir) || ">" || absin_file_name;
      314 	     cmd_line = cmd_line || " -of " || rtrim (home_dir) || ">" || absin_file_name || "." || entries_info.did (eii);
      315 	     cmd_line = cmd_line || " -brief";
      316 
      317 	     call gtss_dq_$catp (entries_info.did (eii), dc_ptr, cat_entry);
      318 	     if dc_ptr = null () then call gtss_abort_subsystem_ (
      319 		null (),
      320 		caller,
      321 		0,
      322 		"Couldn't get pointer to catalog entry for ^a",
      323 		entries_info.did (eii));
      324 
      325 /** -limit nnnnn	**/
      326 	     if dc_ptr -> dq_catalog.dcelp ^= 0 then do;
      327 		milsec = dc_ptr -> dq_catalog.dcelp / 64;
      328 		sec = (milsec / 1000) + 50;		/* if gtss$drun hasn't aborted job 50 seconds
      329*						   after time limit exceeded, let absentee do it */
      330 		seconds = sec;
      331 		cmd_line = cmd_line || " -limit " || seconds;
      332 	     end;
      333 
      334 /** {-time "mm/dd/yy {hhmm}"}	**/
      335 	     sec = 0;
      336 	     call gtss_bcd_ascii_ (addr (dc_ptr -> dq_catalog.dcdsd), 6, addr (requested_date));
      337 	     requested_date = substr (requested_date, 3, 2) || "/" || substr (requested_date, 5, 2) || "/" || substr (requested_date, 1, 2);
      338 	     cmd_line = cmd_line || " -time """ || requested_date;
      339 
      340 	          /** Use specified time or site preferred time or now **/
      341 	     if dc_ptr -> dq_catalog.dcdst ^= -1
      342 	     then sec = divide (divide (dc_ptr -> dq_catalog.dcdst, 64, 36), 1000, 36);
      343 	     else if gtss_ext_$com_reg.tsddt ^= 0
      344 	     then sec = divide (divide (gtss_ext_$com_reg.tsddt, 64, 36), 1000, 36);
      345 	     if sec ^= 0
      346 	     then do;
      347 		hrs = divide (sec, 3600, 2);
      348 		mins = divide ((sec - (hrs * 3600)), 60, 2);
      349 		hours = hrs;
      350 		minutes = mins;
      351 		requested_time = hours || minutes || ".0";
      352 		cmd_line = cmd_line || " " || requested_time || """";
      353 	     end;
      354 	     else cmd_line = cmd_line || """";
      355 
      356 /** {-restart}		**/
      357 	     call gtss_dq_$dibp (entries_info.did (eii), dib_ptr);
      358 	     if dib_ptr = null () then do;
      359 		call com_err_ (0, caller,
      360 		     "Could not get pointer to DIB for ^a", entries_info.did (eii));
      361 		return;
      362 	     end;
      363 	     if dib_ptr -> dq_dib.dbflg.f_res then
      364 		cmd_line = cmd_line || " -restart";
      365 
      366 /** -ag "gse -drm umc|smc|wd {-smc_pathname path} {-umc_name name}" nnnnD **/
      367 	     cmd_line = cmd_line || " -ag ""cwd ";
      368 	     cmd_line = cmd_line||rtrim (get_wdir_ ());
      369 	     cmd_line = cmd_line||";";
      370 dcl get_wdir_ entry returns(char(168)aligned);
      371 	     cmd_line = cmd_line||gtss_abs_$get_drm ();
      372 	     cmd_line = cmd_line||"""";
      373 	     cmd_line = cmd_line || " ";
      374 	     cmd_line = cmd_line||entries_info.did (eii);
      375 	     if db_abs then call ioa_ ("^a", cmd_line);
      376 	     call cu_$cp (addrel (addr (cmd_line), 1), length (cmd_line), code);
      377 
      378 
      379 	end;					/* enter_abs_request */
      380 
      381 cancel_abs_req: proc;
      382 
      383 /* If there is no Multics absentee id, the request has already been cancelled.
      384*   If there is an id, and the restart segment exists, the DRUN is executing
      385*   and was cancelled via an ipc_ signal by gtss_drl_t_cfio_ function 7.
      386*   If it hasn't started to execute yet, it will be cancelled here via a
      387*   cancel_abs_request.				*/
      388 
      389 
      390 	     if entries_info.aid (eii) = " " then return;
      391 	     call hcs_$initiate_count (gtss_ext_$homedir,
      392 		"drun_restart." || entries_info.did (eii), "",
      393 		bit_count, 1, gtss_ext_$restart_seg_ptr, code);
      394 	     if gtss_ext_$restart_seg_ptr ^= null () then do;
      395 		call hcs_$terminate_noname (gtss_ext_$restart_seg_ptr, code);
      396 		return;
      397 	     end;
      398 
      399 	     cmd_line = "cancel_abs_request -id " || entries_info.aid (eii) || " -brief -all";
      400 
      401 	     if db_abs then call ioa_ ("^a", rtrim (cmd_line));
      402 	     call cu_$cp (addrel (addr (cmd_line), 1), length (cmd_line), code);
      403 
      404 	end;					/* cancel_abs_request */
      405 
      406 check_date_time: proc;
      407 
      408 	     reschedule = "0"b;
      409 	     if gtss_ust.lcjid ^= "0"b then return;	/* forget trying to reschedule if running under absentee */
      410 	     caller = "check_date_time";
      411 	     call gtss_dq_$catp (entries_info.did (eii), dc_ptr, cat_entry);
      412 	     if dc_ptr = null () then call gtss_abort_subsystem_ (
      413 		null (),
      414 		caller,
      415 		0,
      416 		"Could not get pointer to ^a's catalog entry",
      417 		entries_info.did (eii));
      418 
      419 	     call gtss_bcd_ascii_ (addr (dc_ptr -> dq_catalog.dcdsd), 6, addr (requested_date));
      420 	     requested_date = substr (requested_date, 3, 2) || "/" || substr (requested_date, 5, 2) || "/" || substr (requested_date, 1, 2);
      421 
      422 
      423 /** Get the output from list_absentee_request (lar) **/
      424 	     proc_dir = get_pdir_ ();
      425 	     path = "ao_" || unique_chars_ ("0"b);
      426 	     cmd_line = "fo [pd]>" || path;
      427 	     call cu_$cp (addrel (addr (cmd_line), 1), length (cmd_line), code);
      428 	     cmd_line = "lar -long" || " -id " || entries_info.aid (eii);
      429 	     call cu_$cp (addrel (addr (cmd_line), 1), length (cmd_line), code);
      430 	     cmd_line = "ro";
      431 	     call cu_$cp (addrel (addr (cmd_line), 1), length (cmd_line), code);
      432 
      433 /** Overlay lar output **/
      434 	     call hcs_$initiate_count (proc_dir, path, "", bit_count,
      435 		1, seg_ptr, code);
      436 	     if code ^= 0 then do;
      437 		call com_err_ (code, caller,
      438 		     "Couldn't initiate ^a in ^a",
      439 		     path, proc_dir);
      440 		error = "1"b;
      441 	     end;
      442 
      443 /** Determine if this has been rescheduled to an earlier date/time **/
      444 	     if index (cs, "Deferred time:") = 0 then do;
      445 		call com_err_ (0, caller,
      446 		     "Couldn't find the deferred time for ^a", entries_info.did (eii));
      447 		return;
      448 	     end;
      449 
      450 /* Get the deferred time line			*/
      451 	     chars = substr (cs, index (cs, "Deferred time:"));
      452 	     chars = before (chars, CR);
      453 	     if index (chars, "Deferred time:	" || requested_date) = 0 /* white space is tab char */
      454 	     then reschedule = "1"b;
      455 	     else do;				/* same date, now check the time */
      456 		if dc_ptr -> dq_catalog.dcdst ^= -1 then do; /* if no time specified it can't be rescheduled */
      457 		     chars = substr (chars, length ("Deferred time:	" || requested_date) + 1);
      458 		     chars = ltrim (chars);
      459 		     btp = addrel (addr (chars), 1);
      460 		     if valid (based_time) then do;
      461 			hrs = convert (hrs, substr (chars, 1, 2));
      462 			mins = convert (mins, substr (chars, 3, 2));
      463 			time = (hrs * 60 * 60) + (mins * 60);
      464 			gcos_time = dc_ptr -> dq_catalog.dcdst / 1000 / 64;
      465 			if ((gcos_time < time - 300)
      466 			| (gcos_time > time + 300))
      467 			then reschedule = "1"b;
      468 			else;
      469 		     end;
      470 		     else do;
      471 			call com_err_ (0, caller,
      472 			     "Couldn't get the requested time from absentee (^a)", chars);
      473 			return;
      474 		     end;
      475 		end;
      476 		else reschedule = "0"b;
      477 	     end;
      478 
      479 	     if reschedule then do;
      480 		cmd_line = "cancel_abs_request -id " || entries_info.aid (eii) || " -brief -all";
      481 		if db_abs then call ioa_ ("^a", cmd_line);
      482 		call cu_$cp (addrel (addr (cmd_line), 1), length (cmd_line), code);
      483 	     end;
      484 
      485 /** Finished with lar output **/
      486 	     call delete_$ptr (seg_ptr, "100100"b, "gtss_abs_", code);
      487 	     if code ^= 0 then do;
      488 		call com_err_ (code, caller,
      489 		     "Couldn't delete ^a in ^a",
      490 		     path, proc_dir);
      491 	     end;
      492 	end;					/* check_date_time */
      493 
      494 /*	gtss_get_abs_id_ local declares */
      495 
      496 dcl  absentee_id              char (19);
      497 dcl  absin_file_name          char (12) init ("drun_control");
      498 dcl  abs_id                   char (19) based (aid_ptr);
      499 dcl  aid                      char (19);
      500 dcl  aid_ptr                  ptr init (null());
      501 dcl  backup_indx              fixed bin (24);
      502 dcl  based_time		pic "9999v.9" based (btp);
      503 dcl  btp			ptr;
      504 dcl  bit_count                fixed bin (24);
      505 dcl  caller                   char (32) varying;
      506 dcl  cat_entry                fixed bin (18) unsigned;
      507 dcl  chars		char (256) varying;
      508 dcl  cmd_line                 char (350) varying;
      509 dcl  code                     fixed bin (35);
      510 dcl  com_err_$suppress_name   entry options (variable);
      511 dcl  convert_ipc_code_	entry (fixed bin (35));
      512 dcl  cs                       char (bit_count / 9) based (seg_ptr);
      513 dcl  cu_$cp                   entry (ptr, fixed bin, fixed bin (35));
      514 dcl  dc_ptr                   ptr init (null());
      515 dcl  delete_$ptr              entry (pointer, bit (6), char (*), fixed bin (35));
      516 dcl  dib_ptr                  ptr init (null ());
      517 dcl  did_pos                  fixed bin (24);
      518 dcl  djid                     char (5);
      519 dcl  dqh_ptr                  ptr init (null());
      520 dcl  drun_job_id              char (5) parm;
      521 dcl  eii                      fixed bin (18) unsigned;
      522 dcl  error                    bit (1) init ("0"b);
      523 dcl  ev_occured		fixed bin;
      524 dcl  get_pdir_                entry returns (char (168));
      525 dcl  gcos_time		fixed bin (36) unsigned;
      526 dcl  gtss_fail		condition ext;
      527 dcl  hcs_$initiate_count      entry (char (*), char (*), char (*), fixed bin (24), fixed bin (2), ptr, fixed bin (35));
      528 dcl  hcs_$terminate_noname    entry (ptr, fixed bin (35));
      529 dcl  home_dir                 char (64);
      530 dcl  hours                    char (2);
      531 dcl  hrs                      pic "99";
      532 dcl  i                        fixed bin (18) unsigned;
      533 dcl  ioa_                     entry options (variable);
      534 dcl  ipc_$read_ev_chn	entry (fixed bin (71), fixed bin, ptr, fixed bin (35));
      535 dcl  mc_ptr		ptr parm;
      536 dcl  milsec                   fixed bin (35);
      537 dcl  mins                     pic "99";
      538 dcl  minutes                  char (2);
      539 dcl  name			char (4) parm;
      540 dcl  no_of_entries            fixed bin (18) unsigned;
      541 dcl  no_of_entries_found      fixed bin (18) unsigned;
      542 dcl  old_min                  pic "s99";
      543 dcl  path                     char (18);
      544 dcl  proc_dir                 char (168);
      545 dcl  requested_date           char (8);
      546 dcl  requested_time           char (6);
      547 dcl  reschedule               bit (1);
      548 dcl  rid                      char (11) based (rid_ptr);
      549 dcl  rid_ptr                  ptr init (null());
      550 dcl  sec                      fixed bin (35) init (0);
      551 dcl  seconds                  pic "99999";
      552 dcl  seg_ptr                  ptr init (null());
      553 dcl  spare_indx               fixed bin (24);
      554 dcl  table                    (table_length) char (1) based (seg_ptr);
      555 dcl  table_length             fixed bin (24);
      556 dcl  time 		fixed bin (36) unsigned;
      557 dcl  timer_manager_$cpu_call	entry (fixed bin (71), bit (2), entry);
      558 dcl  timer_manager_$reset_cpu_call	entry (entry);
      559 dcl  unique_chars_            entry (bit (*)) returns (char (15));
      560 dcl  user_info_$homedir       entry (char (*));
      561 
      562 dcl  CR                       char (1) init ("
      563 ");
      564 
      565 dcl 1 d defined djid,
      566       2 d1 char (1),
      567       2 d2 char (1),
      568       2 d3 char (1),
      569       2 d4 char (1),
      570       2 d5 char (1);
      571 
      572 dcl  job_action               (0:7) entry init (
      573 	no_action,
      574 	enter_abs_req,
      575 	no_action,
      576 	no_action,
      577 	cancel_abs_req,
      578 	no_action,
      579 	no_action,
      580 	no_action);
      581 
      582 dcl 1 entries_info (315),
      583       2 did char (5),
      584       2 aid char (19),
      585       2 job_stat fixed bin (6) unsigned;
      586 dcl 1 event_info based (gtss_ext_$restart_seg_ptr),
      587       2 channel_id fixed bin (71),
      588       2 message fixed bin (71),
      589       2 sender bit (36),
      590       2 origin,
      591         3 dev_signal bit (18) unal,
      592         3 ring bit (18) unal,
      593       2 channel_index fixed bin;
      594 
  1     1 /* BEGIN INCLUDE FILE gtss_deferred_queue.incl.pl1 */
  1     2 /*
  1     3*  Created:  (Dupuis Multics)  06/26/79 0848.7 mst Tue 
  1     4*  Changed:  Ron Barstad  84-11-29  dq_catalog.dcelp changed to fixed bin 35 (was 36 unsigned)
  1     5**/
  1     6 dcl 1 dq_header based,
  1     7       2 dhcks fixed bin (36) unsigned unaligned,
  1     8       2 dhnam fixed bin (36) unsigned unaligned,
  1     9       2 dhdat bit (36) unaligned,
  1    10       2 dhtim fixed bin (36) unsigned unaligned,
  1    11       2 dhbsn,
  1    12         3 no_of_cea fixed bin (18) unsigned unaligned,
  1    13         3 tss_ssn fixed bin (18) unsigned unaligned,
  1    14       2 dhseq,
  1    15         3 no_of_ceiu fixed bin (18) unsigned unaligned,
  1    16         3 no_of_dss fixed bin (18) unsigned unaligned,
  1    17       2 dhtns,
  1    18         3 no_of_srts fixed bin (18) unsigned unaligned,
  1    19         3 no_of_dsi fixed bin (18) unsigned unaligned,
  1    20       2 dhrns fixed bin (36) unsigned unaligned;
  1    21 
  1    22 
  1    23 dcl 1 dq_catalog based,
  1    24      2 dcjid,
  1    25         3 bcd_job_id bit (30) unaligned,
  1    26         3 job_status fixed bin (6) unsigned unaligned,
  1    27      2 dcseq,
  1    28        3 jsn fixed bin (18) unsigned unaligned,
  1    29        3 reserved bit (1) unaligned,
  1    30        3 init_seq fixed bin (17) unsigned unaligned,
  1    31      2 dcuid bit (72) unaligned,
  1    32      2 dcdsd bit (36) unaligned,
  1    33      2 dcdst fixed bin (35) unaligned,
  1    34      2 dcelp fixed bin (35) unaligned,
  1    35      2 dcusr,
  1    36        3 not_used bit (18) unaligned,
  1    37        3 b18_35_lswth bit (18) unaligned;
  1    38 
  1    39 dcl 1 dq_dib based,
  1    40       2 dbdat bit (36) unaligned,
  1    41       2 dbtim bit (36) unaligned,
  1    42       2 dblin fixed bin (36) unaligned unsigned,
  1    43       2 dberr,
  1    44         3 dbalt_cc fixed bin (18) unaligned unsigned,
  1    45         3 dbdsc_cc fixed bin (18) unaligned unsigned,
  1    46       2 dbptr,
  1    47         3 dbdsc_ro fixed bin (18) unaligned unsigned,
  1    48         3 ofn_ro fixed bin (17) unaligned,
  1    49       2 dbflg,
  1    50         3 alloc_perm bit (9) unaligned,
  1    51         3 del_char char (1) unaligned,
  1    52         3 f_res bit (1) unaligned,
  1    53         3 f_sub bit (1) unaligned,
  1    54         3 f_arg bit (1) unaligned,
  1    55         3 f_del bit (1) unaligned,
  1    56         3 f_exc bit (1) unaligned,
  1    57         3 f_inc bit (1) unaligned,
  1    58         3 f_lni bit (1) unaligned,
  1    59         3 f_alt bit (1) unaligned,
  1    60         3 f_fnq bit (1) unaligned,
  1    61         3 f_ucs bit (1) unaligned,
  1    62         3 f_lcs bit (1) unaligned,
  1    63         3 arg_char char (1) unaligned,
  1    64       2 rest (58) bit (36) unaligned;
  1    65 
  1    66 dcl 1 cout_sector based,
  1    67       2 filler_1 (6) bit (36),
  1    68       2 c_lcfio,
  1    69         3 sector_out fixed bin (18) unaligned unsigned,
  1    70         3 sector_in fixed bin (18) unaligned unsigned,
  1    71       2 c_lcfst,
  1    72         3 init_sect_out fixed bin (18) unaligned unsigned,
  1    73         3 start_term fixed bin (18) unaligned unsigned,
  1    74       2 filler_2 (40) bit (36),
  1    75       2 label_table (8),
  1    76         3 label_name bit (54),
  1    77         3 label_pos fixed bin (18) unaligned unsigned;
  1    78 
  1    79 /*   END INCLUDE FILE gtss_deferred_queue.incl.pl1 */
      595 
      596 
  2     1 /* BEGIN INCLUDE FILE gtss_ext_.incl.pl1 */
  2     2 /*
  2     3*  Created: (Wardd Multics)  05/20/78 1307.6 mst Sat 
  2     4*  Modified: Ward            1981     add suspended_process dcl
  2     5*  Modified: Ron Barstad  83-07-21  Fixed level number on mcfc to 3
  2     6*  Modified: Ron Barstad  83-07-25  Fixed derail range in statistics to 4js3 number
  2     7**/
  2     8 dcl  gtss_ext_$aem                   fixed bin static ext	/* >0 Print "additional" error information. */;
  2     9 dcl  gtss_ext_$bad_drl_rtrn          static ext label	/* Default for drl_rtrn. */;
  2    10 dcl  gtss_ext_$db                    (72)bit(1)unal static ext;
  2    11 dcl  gtss_ext_$deferred_catalogs_ptr ptr ext;
  2    12 dcl  gtss_ext_$dispose_of_drl        static ext label	/* quit handlers for some derails use this label to abort */;
  2    13 dcl  gtss_ext_$drl_rtrn              (4)static ext label	/* where to return at subsystem end */;
  2    14 dcl  gtss_ext_$drm_path              char(168)static ext	/* gtss_expand_pathname_stores drm_path */;
  2    15 dcl  gtss_ext_$drun_jid              char (5) static ext	/* valid only for DRUN executing under absentee */;
  2    16 dcl  gtss_ext_$event_channel         fixed bin (71) static ext	/* used for DABT signals */;
  2    17 dcl  gtss_ext_$finished              static ext label	/* Return to gtss for normal conclusion. */;
  2    18 dcl  gtss_ext_$gdb_name              char(8)ext	/* Name H* module to debug. */;
  2    19 dcl  gtss_ext_$get_line              entry(ptr,ptr,fixed bin(21),fixed bin(21),fixed bin(35))variable ext /* Build mode input procedure. */;
  2    20 dcl  gtss_ext_$gtss_slave_area_seg   (4) ext static ptr	/* pointer to gtss slave area segment */;
  2    21 dcl  gtss_ext_$hcs_work_area_ptr     ptr ext static		/* Temp seg for acl lists. */;
  2    22 dcl  gtss_ext_$homedir               char (64) static ext /* user's home dir */;
  2    23 dcl  gtss_ext_$last_k_was_out        bit (1)aligned ext static	/* "1"b => last tty output was output. */;
  2    24 dcl  gtss_ext_$pdir                  char (168) varying ext static	/* pathname of process directory */;
  2    25 dcl  gtss_ext_$popup_from_pi         static ext label	/* transfer to this label after pi simulates popup primitive */;
  2    26 dcl  gtss_ext_$process_type          fixed bin (17) static ext;
  2    27 dcl  gtss_ext_$put_chars             entry(ptr,ptr,fixed bin(24),fixed bin(35)) variable ext	/* Terminal output procedure. */;
  2    28 dcl  gtss_ext_$restart_from_pi       static ext label	/* transfer to this label after pi restores machine conditions */;
  2    29 dcl  gtss_ext_$restart_seg_ptr       ptr static ext	/* points to DRUN restart file when exec under absentee */;
  2    30 dcl  gtss_ext_$sig_ptr               ext static ptr	/* saved ptr to signal_ */;
  2    31 dcl  gtss_ext_$stack_level_          fixed bin ext static;
  2    32 dcl  gtss_ext_$suspended_process     bit(1) ext static;
  2    33 dcl  gtss_ext_$SYstarstar_file_no    fixed bin (24) static ext;
  2    34 dcl  gtss_ext_$user_id               char (26)var ext;
  2    35 dcl  gtss_ext_$work_area_ptr         ptr ext;
  2    36 
  2    37 dcl  1 gtss_ext_$CFP_bits aligned static external
  2    38      , 3 no_input_yet bit (1) unaligned         /* used in gtss_CFP_input_, gtss_read_starCFP_ */
  2    39      , 3 rtn_bits bit (4) unaligned             /* used in gtss_CFP_input_, gtss_CFP_output_ */
  2    40      , 3 cpos_called bit (1) unaligned          /* used in gtss_CFP_input_, gtss_drl_t_cfio_, gtss_abandon_CFP_ */
  2    41      , 3 cout_called bit (1) unaligned          /* used in gtss_read_starCFP_, gtss_abandon_CFP_ */
  2    42      , 3 build_mode bit (1) unaligned	        /* used in gtss_build_, gtss_dsd_process_ */
  2    43      ;
  2    44 
  2    45 dcl 1 gtss_ext_$com_reg aligned static ext,
  2    46        3 tsdmx,
  2    47          4 dst fixed bin (18) unsigned unaligned,
  2    48          4 dit fixed bin (18) unsigned unaligned,
  2    49        3 tsdpt fixed bin (36) unsigned unaligned,
  2    50        3 tsddt fixed bin (36) unsigned unaligned,
  2    51        3 tsdid bit (72) unaligned,
  2    52        3 tsdsd bit (36) unaligned,
  2    53        3 tsdst fixed bin (36) unsigned unaligned,
  2    54        3 tsdjb fixed bin (35) unaligned,
  2    55        3 tsdgt,
  2    56          4 ust_loc fixed bin (18) unsigned unaligned,
  2    57          4 gating_ctl fixed bin (18) unsigned unaligned,
  2    58        3 tcdfr bit (36) unaligned;
  2    59 
  2    60 dcl 1 gtss_ext_$flags aligned static ext
  2    61      , 3 dispose_of_drl_on_pi	bit (01) unal	/* 1 => drl that should be aborted after quit-pi sequence */
  2    62      , 3 drl_in_progress	bit (01) unal	/* 1 => drl handler executing; 0 => gcos code executing */
  2    63      , 3 popup_from_pi	bit (01) unal	/* 1 => derail processor will simulate Gcos break instead of returning */
  2    64      , 3 unfinished_drl	bit (01) unal	/* 1 => subsystem is handling breaks and quit was raised during a drl */
  2    65      , 3 ss_time_limit_set	bit (01) unal	/* 1 => exec time limit set for subsystem */
  2    66      , 3 timer_ranout	bit (01) unal	/* 1 => user is executing timer runout code */
  2    67      , 3 gtss_com_err_sw      bit (01) unal       /* 1 => stop com_err_ string from going to terminal */   
  2    68      , 3 available		bit (65) unal
  2    69      ;
  2    70 
  2    71 
  2    72 dcl 1 gtss_ext_$statistics aligned static ext,		/* Derail usage statistics */
  2    73       3 total_time (-10:71)fixed bin (71),
  2    74       3 count (-10:71)fixed bin (17);
  2    75 
  2    76 /* 	Declaration of Available File Table
  2    77*   */
  2    78 dcl 1 gtss_ext_$aft aligned ext,			/* aft structure */
  2    79 
  2    80       3 start_list (0:102) fixed bin (24),		/* >0 => 1st aft_entry row to start of next entry chain. */
  2    81 
  2    82       3 aft_entry (20),
  2    83         4 altname char (8),				/* altname name for attaching this file */
  2    84         4 next_entry fixed bin (24),			/* Next aft_entry in hash chain. */
  2    85         4 previous_add fixed bin (24),			/* Previously added entry. */
  2    86         4 next_add fixed bin (24),			/* Entry added after this one. */
  2    87         4 used bit (1) unal,				/* "1"b => aft_entry contains AFT value. */
  2    88         4 forced bit(1) unal,				/* "1"b => gtss_verify_access_ forced access on this file. */
  2    89 
  2    90       3 free_space fixed bin (24),			/* Index of start of free space list for aft entries. */
  2    91       3 first_added fixed bin (24),			/* >0  => start of chain in add order. */
  2    92       3 last_added fixed bin (24)			/* >0 => end of chain in added order. */;
  2    93 
  2    94 dcl  gtss_ext_$ppt                   ptr ext /*  switch name for tapein drl */;
  2    95 /**	Data structure to provide access to installed
  2    96*   subsystems fast library load.
  2    97*   **/
  2    98 dcl 1 gtss_ext_$fast_lib aligned ext
  2    99      , 3 fast_lib_fcb ptr				/* Pointer to msf fcb.	*/
  2   100      , 3 fast_lib_ncp fixed bin (24)			/* Number of components. */
  2   101      , 3 comp_ptr (0:9)ptr				/* Pointer to component. */
  2   102      , 3 comp_wds (0:9)fixed bin (24)			/* Component length (words). */
  2   103      ;
  2   104 
  2   105 /* Pointers to segments to regulate multipler
  2   106*   callers to files. Same segments are used to regulate
  2   107*   all simulator callers.
  2   108**/
  2   109 dcl 1 gtss_ext_$mcfc	aligned ext,
  2   110       3 multics_lock_id	bit(36),
  2   111       3 wait_time		fixed bin,
  2   112       3 files_ptr		ptr,
  2   113       3 names_ptr		ptr,
  2   114       3 callers_ptr		(0:3)ptr
  2   115 ;
  2   116 
  2   117 /*   END INCLUDE FILE gtss_ext_.incl.pl1 */
      597 
      598 
  3     1 /* BEGIN INCLUDE FILE gtss_entry_dcls.incl.pl1 */
  3     2 /*
  3     3*  Created: (Wardd Multics)  06/30/78 1624.8 mst Fri 
  3     4*  Modified: Ron Barstad  84-02-24  Fixed wrong and obsolete entries
  3     5**/
  3     6 
  3     7 /**  gtss external entry variables.		**/
  3     8 dcl  com_err_                                   entry() options(variable);
  3     9 dcl  gtss_CFP_abort_                            entry options(variable);
  3    10 dcl  gtss_CFP_break_                            entry options(variable);
  3    11 dcl  gtss_CFP_input_                            entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  3    12 dcl  gtss_CFP_output_                           entry (ptr, ptr, fixed bin(21), fixed bin(35));
  3    13 dcl  gtss_abandon_CFP_                          entry options(variable);
  3    14 dcl  gtss_abort_dump_                           entry (fixed bin(18));
  3    15 dcl  gtss_abort_subsystem_                      entry options (variable);
  3    16 dcl  gtss_abort_subsystem_$not_imp              entry (ptr, fixed bin(24));
  3    17 dcl  gtss_abs_login_banner_		        entry() returns(char(*));
  3    18 dcl  gtss_abs_logout_banner_		        entry() returns(char(*));
  3    19 dcl  gtss_abs_$abs_equiv                        entry options(variable);
  3    20 dcl  gtss_abs_$cpu_runout		        entry (ptr, char(4));
  3    21 dcl  gtss_abs_$create_absin                     entry() returns(char(*));
  3    22 dcl  gtss_abs_$dabt_check		        entry (ptr, char(4));
  3    23 dcl  gtss_abs_$get_id                           entry (char(5)) returns(char(19));
  3    24 dcl  gtss_abs_$get_drm                          entry() returns(char(*));
  3    25 dcl  gtss_adjust_size_                          entry (ptr);
  3    26 dcl  gtss_aft_$add                              entry (char(8), fixed bin(24), fixed bin(35));
  3    27 dcl  gtss_aft_$delete                           entry (char(8), fixed bin(24), fixed bin(35));
  3    28 dcl  gtss_aft_$find                             entry (char(8), fixed bin(24), fixed bin(35));
  3    29 dcl  gtss_aft_$initialize                       entry (fixed bin(35));
  3    30 dcl  gtss_ascii_bcd_                            entry (ptr, fixed bin, ptr);
  3    31 dcl  gtss_attributes_mgr_$get                   entry (ptr, fixed bin(35));
  3    32 dcl  gtss_attributes_mgr_$set                   entry (ptr, fixed bin(35));
  3    33 dcl  gtss_bcd_ascii_                            entry (ptr, fixed bin(24), ptr);
  3    34 dcl  gtss_bcd_ascii_$lc                         entry (ptr, fixed bin(24), ptr);
  3    35 dcl  gtss_break_vector_                         entry ();
  3    36 dcl  gtss_break_vector_$drl_in_progress         entry() returns(bit(1));
  3    37 dcl  gtss_break_vector_$status                  entry() returns(bit(1));
  3    38 dcl  gtss_build_                                entry options(variable);
  3    39 dcl  gtss_com_err_                              entry options(variable);
  3    40 dcl  gtss_derail_processor_                     entry (ptr, char(*), ptr, ptr, bit(1) aligned) /* called at fault time instead of signal_ */;
  3    41 dcl  gtss_derail_processor_$set                 entry options(variable);
  3    42 dcl  gtss_dq_$catp                              entry (char (5), ptr, fixed bin (18) unsigned);
  3    43 dcl  gtss_dq_$create                            entry (bit(1));
  3    44 dcl  gtss_dq_$dibp                              entry (char(5), ptr);
  3    45 dcl  gtss_dq_$entries_info		        entry (ptr, fixed bin (18) unsigned, fixed bin (18) unsigned);
  3    46 dcl  gtss_dq_$hdrp                              entry (ptr);
  3    47 dcl  gtss_dq_$mod_js		        entry (char(5), fixed bin (6) unsigned, bit (1));
  3    48 dcl  gtss_dq_$open_exc		        entry (bit(1));
  3    49 dcl  gtss_dq_$open_gen		        entry (bit(1));
  3    50 dcl  gtss_drl_abort_                            entry (ptr, fixed bin);
  3    51 dcl  gtss_drl_addmem_                           entry (ptr, fixed bin);
  3    52 dcl  gtss_drl_callss_                           entry (ptr, fixed bin);
  3    53 dcl  gtss_drl_corfil_                           entry (ptr, fixed bin);
  3    54 dcl  gtss_drl_defil_                            entry (ptr, fixed bin);
  3    55 dcl  gtss_drl_defil_$subr                       entry (ptr, ptr, ptr);
  3    56 dcl  gtss_drl_dio_                              entry (ptr, fixed bin);
  3    57 dcl  gtss_drl_drlimt_                           entry (ptr, fixed bin);
  3    58 dcl  gtss_drl_drlsav_                           entry (ptr, fixed bin);
  3    59 dcl  gtss_drl_filact_                           entry (ptr, fixed bin);
  3    60 dcl  gtss_drl_filsp_                            entry (ptr, fixed bin);
  3    61 dcl  gtss_drl_grow_                             entry (ptr, fixed bin);
  3    62 dcl  gtss_drl_gwake_                            entry (ptr, fixed bin);
  3    63 dcl  gtss_drl_jsts_                             entry (ptr, fixed bin);
  3    64 dcl  gtss_drl_kin_                              entry (ptr, fixed bin);
  3    65 dcl  gtss_drl_kotnow_                           entry (ptr, fixed bin);
  3    66 dcl  gtss_drl_kotnow_$gtss_drl_kout_            entry (ptr, fixed bin);
  3    67 dcl  gtss_drl_koutn_                            entry (ptr, fixed bin);
  3    68 dcl  gtss_drl_morlnk_                           entry (ptr, fixed bin);
  3    69 dcl  gtss_drl_msub_                             entry (ptr, fixed bin);
  3    70 dcl  gtss_drl_objtim_                           entry (ptr, fixed bin);
  3    71 dcl  gtss_drl_part_                             entry (ptr, fixed bin);
  3    72 dcl  gtss_drl_pasaft_                           entry (ptr, fixed bin);
  3    73 dcl  gtss_drl_pasdes_                           entry (ptr, fixed bin);
  3    74 dcl  gtss_drl_pasust_                           entry (ptr, fixed bin);
  3    75 dcl  gtss_drl_pdio_                             entry (ptr, fixed bin);
  3    76 dcl  gtss_drl_prgdes_                           entry (ptr, fixed bin);
  3    77 dcl  gtss_drl_pseudo_                           entry (ptr, fixed bin);
  3    78 dcl  gtss_drl_relmem_                           entry (ptr, fixed bin);
  3    79 dcl  gtss_drl_restor_                           entry (ptr, fixed bin);
  3    80 dcl  gtss_drl_retfil_                           entry (ptr, fixed bin);
  3    81 dcl  gtss_drl_return_                           entry (ptr, fixed bin);
  3    82 dcl  gtss_drl_rew_                              entry (ptr, fixed bin);
  3    83 dcl  gtss_drl_rstswh_                           entry (ptr, fixed bin);
  3    84 dcl  gtss_drl_setlno_                           entry (ptr, fixed bin);
  3    85 dcl  gtss_drl_setswh_                           entry (ptr, fixed bin);
  3    86 dcl  gtss_drl_snumb_                            entry (ptr, fixed bin);
  3    87 dcl  gtss_drl_spawn_                            entry (ptr, fixed bin);
  3    88 dcl  gtss_drl_spawn_$gtss_drl_pasflr_           entry (ptr, fixed bin);
  3    89 dcl  gtss_drl_stoppt_                           entry (ptr, fixed bin);
  3    90 dcl  gtss_drl_switch_                           entry (ptr, fixed bin);
  3    91 dcl  gtss_drl_sysret_                           entry (ptr, fixed bin);
  3    92 dcl  gtss_drl_t_cfio_                           entry (ptr, fixed bin);
  3    93 dcl  gtss_drl_t_cmov_                           entry (ptr, fixed bin);
  3    94 dcl  gtss_drl_t_err_                            entry (ptr, fixed bin);
  3    95 dcl  gtss_drl_t_goto_                           entry (ptr, fixed bin);
  3    96 dcl  gtss_drl_t_linl_                           entry (ptr, fixed bin);
  3    97 dcl  gtss_drl_t_rscc_                           entry (ptr, fixed bin);
  3    98 dcl  gtss_drl_tapein_                           entry (ptr, fixed bin);
  3    99 dcl  gtss_drl_task_                             entry (ptr, fixed bin);
  3   100 dcl  gtss_drl_termtp_                           entry (ptr, fixed bin);
  3   101 dcl  gtss_drl_time_                             entry (ptr, fixed bin);
  3   102 dcl  gtss_drun_                                 entry (bit(1));
  3   103 dcl  gtss_dsd_lookup_                           entry (char(8) var) returns(fixed bin(24));
  3   104 dcl  gtss_dsd_process_                          entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  3   105 dcl  gtss_edit_dsd_                             entry (ptr, fixed bin(21)) returns(fixed bin(24));
  3   106 dcl  gtss_mcfc_empty                            entry (char(*) var);
  3   107 dcl  gtss_expand_pathname_                      entry (ptr, char(*), char(*), fixed bin(35));
  3   108 dcl  gtss_expand_pathname_$verify_umc           entry (ptr, char(*), char(*), bit(18), fixed bin(35));
  3   109 dcl  gtss_fault_processor_                      entry options(variable);
  3   110 dcl  gtss_find_cond_frame_		        entry (char(32) var) returns(ptr);
  3   111 dcl  gtss_fault_processor_$timer_runout         entry (ptr, char(*));
  3   112 dcl  gtss_filact_error_status_                  entry (fixed bin(35))returns(bit(12));
  3   113 dcl  gtss_filact_funct02_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  3   114 dcl  gtss_filact_funct03_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  3   115 dcl  gtss_filact_funct04_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  3   116 dcl  gtss_filact_funct05_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  3   117 dcl  gtss_filact_funct08_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  3   118 dcl  gtss_filact_funct10_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  3   119 dcl  gtss_filact_funct11_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  3   120 dcl  gtss_filact_funct14_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  3   121 dcl  gtss_filact_funct18_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  3   122 dcl  gtss_filact_funct19_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  3   123 dcl  gtss_filact_funct21_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  3   124 dcl  gtss_filact_funct22_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  3   125 dcl  gtss_mcfc_init_                            entry (char(*) var);
  3   126 dcl  gtss_interp_prim_                          entry options(variable);
  3   127 dcl  gtss_interp_prim_$callss                   entry (char(4), ptr);
  3   128 dcl  gtss_interp_prim_$sysret                   entry options(variable);
  3   129 dcl  gtss_interp_prim_$t_goto                   entry (char(4));
  3   130 dcl  gtss_ios_change_size_                      entry (fixed bin(24), fixed bin(24), bit(1), fixed bin(24), fixed bin(35));
  3   131 dcl  gtss_ios_close_                            entry (fixed bin(24), ptr, fixed bin(35));
  3   132 dcl  gtss_ios_exchange_names_                   entry (fixed bin(24), fixed bin(24), fixed bin(24), fixed bin(35));
  3   133 dcl  gtss_ios_initialize_                       entry options(variable);
  3   134 dcl  gtss_ios_io_                               entry (fixed bin(24), ptr, ptr, fixed bin(24), fixed bin(24), fixed bin(35));
  3   135 dcl  gtss_ios_open_                             entry (fixed bin(24), char(168), char(32), bit(6), bit(1), ptr, ptr, fixed bin(35));
  3   136 dcl  gtss_ios_position_                         entry (fixed bin(24), fixed bin(24), fixed bin(24), bit(6), ptr);
  3   137 dcl  gtss_mcfc_$delete		        entry (fixed bin(24), char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  3   138 dcl  gtss_mcfc_$open                            entry (char(*), char(*), bit(6), bit(36) aligned, ptr, fixed bin(35));
  3   139 dcl  gtss_mcfc_$close                           entry (char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  3   140 dcl  gtss_read_starCFP_                         entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  3   141 dcl  gtss_read_starCFP_$last_os                 entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  3   142 dcl  gtss_run_subsystem_                        entry (fixed bin(24));
  3   143 dcl  gtss_run_subsystem_$finish                 entry options(variable);
  3   144 dcl  gtss_run_subsystem_$restor                 entry (fixed bin(24), ptr);
  3   145 dcl  gtss_run_subsystem_$restor_perm            entry (fixed bin(24), ptr, fixed bin(18));
  3   146 dcl  gtss_set_slave_                            entry (fixed bin (24), ptr);
  3   147 dcl  gtss_set_slave_$load_bar                   entry (fixed bin (17));
  3   148 dcl  gtss_update_safe_store_                    entry (ptr);
  3   149 dcl  gtss_verify_access_		        entry (char(*), char(*), fixed bin(24), bit(6), bit(12) aligned);
  3   150 dcl  gtss_verify_access_$check_forced_access    entry (char(*), char(*), fixed bin(24));
  3   151 dcl  gtss_write_starCFP_                        entry (ptr, ptr, fixed bin(21), fixed bin(35));
  3   152 /*   END INCLUDE FILE gtss_entry_dcls.incl.pl1 */
      599 
      600 
  4     1 /* BEGIN INCLUDE FILE gse_ext_.incl.pl1 */
  4     2 /*
  4     3*  Created:  Kepner  78-12-01
  4     4**/
  4     5 
  4     6 dcl gse_ext_$drm_rule	fixed bin(24) ext;
  4     7 
  4     8 /* $drm_rule:
  4     9*   0 => rule not set
  4    10*   1 => umc_dir_mode
  4    11*   2 => working_dir_mode
  4    12*   3 => smc_dir_mode
  4    13**/
  4    14 
  4    15 dcl gse_ext_$gcos_debug_pathname       char(168)  /* pathname for the gcos debugger control file */ ext;
  4    16 dcl gse_ext_$smc_pathname              char(168) 	/* root directory used with smc_dir mapping rule */ ext;
  4    17 dcl gse_ext_$umc_name                  char(12) 	/* User Master Catalog name specified by user with gse command */ ext;
  4    18 dcl 1 gse_ext_$modes	aligned ext,
  4    19        3 ast		bit(01) unal, 	/* 1 => use asterisk as prompt character */
  4    20        3 drl		bit(01) unal, 	/* 1 => cause trace info on each derail to be printed */
  4    21        3 gdb		bit(01) unal, 	/* 1 => use gcos debugger (gdb) */
  4    22        3 mcmd		bit(01) unal, 	/* 1 => allow use of e request at GTSS command level */
  4    23        3 mquit		bit(01) unal, 	/* 1 => quit causes entry to new Multics command level */
  4    24        3 ss		bit(01) unal, 	/* 1 => cause trace info on each subsystem to be printed */
  4    25        3 fill		bit(30) unal; 
  4    26 
  4    27 /*   END INCLUDE FILE gse_ext_.incl.pl1 */
      601 
      602 
  5     1 /* BEGIN INCLUDE FILE gtss_db_names.incl.pl1 */
  5     2 /*
  5     3*  Created:  (Wardd Multics)  03/29/79 1909.1 mst Thu 
  5     4**/
  5     5 
  5     6 /* To provide a new debugging switch:
  5     7*
  5     8*   1) Locate the comment "Insert next entry above this comment".
  5     9*
  5    10*   2) Place a new declaration for a db_ variable just
  5    11*      above this comment, in the same manner as the
  5    12*      current declaration just above the comment, using
  5    13*      the next integer gtss_ext_$db index.
  5    14*
  5    15*   3) Execute the gtss|db_names ted macro (this updates
  5    16*      the sorted name table).
  5    17*
  5    18*   4) Example use:
  5    19*
  5    20*      if db_drl_grow then do;
  5    21*      .
  5    22*      .
  5    23*      .
  5    24*      debug i/o statements using com_err_ or ioa_
  5    25*      .
  5    26*      .
  5    27*      .
  5    28*      end;
  5    29*
  5    30**/
  5    31 
  5    32 dcl (
  5    33  db_		bit(1) defined(gtss_ext_$db(01))
  5    34 ,db_CFP_input	bit(1) defined(gtss_ext_$db(02))
  5    35 ,db_drl_addmem	bit(1) defined(gtss_ext_$db(03))
  5    36 ,db_drl_defil	bit(1) defined(gtss_ext_$db(04))
  5    37 ,db_drl_filact	bit(1) defined(gtss_ext_$db(05))
  5    38 ,db_drl_filsp	bit(1) defined(gtss_ext_$db(06))
  5    39 ,db_drl_grow	bit(1) defined(gtss_ext_$db(07))
  5    40 ,db_drl_rew	bit(1) defined(gtss_ext_$db(08))
  5    41 ,db_filact_funct02	bit(1) defined(gtss_ext_$db(09))
  5    42 ,db_filact_funct03	bit(1) defined(gtss_ext_$db(10))
  5    43 ,db_filact_funct04	bit(1) defined(gtss_ext_$db(11))
  5    44 ,db_filact_funct05	bit(1) defined(gtss_ext_$db(12))
  5    45 ,db_filact_funct10	bit(1) defined(gtss_ext_$db(13))
  5    46 ,db_filact_funct11	bit(1) defined(gtss_ext_$db(14))
  5    47 ,db_filact_funct14	bit(1) defined(gtss_ext_$db(15))
  5    48 ,db_filact_funct18	bit(1) defined(gtss_ext_$db(16))
  5    49 ,db_filact_funct19	bit(1) defined(gtss_ext_$db(17))
  5    50 ,db_filact_funct21	bit(1) defined(gtss_ext_$db(18))
  5    51 ,db_filact_funct22	bit(1) defined(gtss_ext_$db(19))
  5    52 ,db_interp_prim	bit(1) defined(gtss_ext_$db(20))
  5    53 ,db_ios		bit(1) defined(gtss_ext_$db(21))
  5    54 ,db_run_subsystem	bit(1) defined(gtss_ext_$db(22))
  5    55 ,db_drl_t_cfio	bit(1) defined(gtss_ext_$db(23))
  5    56 ,db_drl_switch	bit(1) defined(gtss_ext_$db(24))
  5    57 ,db_drl_dio	bit(1) defined(gtss_ext_$db(25))
  5    58 ,db_drl_retfil	bit(1) defined(gtss_ext_$db(26))
  5    59 ,db_drl_msub	bit(1) defined(gtss_ext_$db(27))
  5    60 ,db_drl_callss	bit(1) defined(gtss_ext_$db(28))
  5    61 ,db_drl_rstswh	bit(1) defined(gtss_ext_$db(29))
  5    62 ,db_drl_setswh	bit(1) defined(gtss_ext_$db(30))
  5    63 ,db_mcfc		bit(1) defined(gtss_ext_$db(31))
  5    64 ,db_dq		bit(1) defined(gtss_ext_$db(32))
  5    65 ,db_abs		bit(1) defined(gtss_ext_$db(33))
  5    66 ,db_attributes_mgr	bit(1) defined(gtss_ext_$db(34))
  5    67 ,db_expand_pathname bit(1) defined(gtss_ext_$db(35))
  5    68 ,db_drl_part	bit(1) defined(gtss_ext_$db(36))
  5    69 ,db_drl_morlnk	bit(1) defined(gtss_ext_$db(37))
  5    70 ,db_drl_kin	bit(1) defined(gtss_ext_$db(38))
  5    71 /* Insert next entry above this comment. */
  5    72 );
  5    73 
  5    74 /* Table of sorted names. */
  5    75 dcl 1 debug_bit_names (38) static int options(constant)
  5    76 ,     2 name char(18)var init(
  5    77          "" ,"CFP_input" ,"abs" ,"attributes_mgr" ,"dq" ,"drl_addmem"
  5    78          ,"drl_callss" ,"drl_defil" ,"drl_dio" ,"drl_filact" ,"drl_filsp"
  5    79          ,"drl_grow" ,"drl_kin" ,"drl_morlnk" ,"drl_msub" ,"drl_part"
  5    80          ,"drl_retfil" ,"drl_rew" ,"drl_rstswh" ,"drl_setswh" ,"drl_switch"
  5    81          ,"drl_t_cfio" ,"expand_pathname" ,"filact_funct02" ,"filact_funct03"
  5    82          ,"filact_funct04" ,"filact_funct05" ,"filact_funct10" ,"filact_funct11"
  5    83          ,"filact_funct14" ,"filact_funct18" ,"filact_funct19" ,"filact_funct21"
  5    84          ,"filact_funct22" ,"interp_prim" ,"ios" ,"mcfc" ,"run_subsystem"
  5    85 			)
  5    86 ,     2 value fixed bin init(
  5    87          01 ,02 ,33 ,34 ,32 ,03 ,28 ,04 ,25 ,05 ,06 ,07 ,38 ,37 ,27 ,36 ,26 ,08
  5    88          ,29 ,30 ,24 ,23 ,35 ,09 ,10 ,11 ,12 ,13 ,14 ,15 ,16 ,17 ,18 ,19 ,20 ,21
  5    89          ,31 ,22
  5    90 			);
  5    91 /* End of table. */
  5    92 /*   END INCLUDE FILE gtss_db_names.incl.pl1 */
      603 
      604 
  6     1 /* BEGIN INCLUDE FILE gtss_ust_ext_.incl.pl1 */
  6     2 /* UST: User Status Table 
  6     3*   definitions based on 
  6     4*   System Tables, Order number DD14-01E, January 1981
  6     5*   Section 15, Time Sharing System
  6     6*
  6     7*   Authors: Robert J. Grimes	Created
  6     8*   -	  Albert N. Kepner	  1978
  6     9*   -	  Robert M. May
  6    10*   -	  David B. Ward
  6    11*   Change:  Dave Ward	02/23/79 Level 4 numbering.
  6    12*   Change:  Ron Barstad  83-07-12 Repaired damaged formating and word offset comments
  6    13*                                  Brought up to 4JS3 functionality
  6    14**/
  6    15 /* octal word offsets of entries */
  6    16 dcl 1 gtss_ust_ext_$ust aligned ext,
  6    17       3 gtss_ust,
  6    18 /* 0-1  */	4 lid		bit (72),
  6    19 /* 2    */	4 lstp		bit (36),
  6    20 /* 3    */	4 ltin		bit (36),
  6    21 /* 4    */	4 lstio,
  6    22 			5 no_of_chars_by_8  fixed bin (18) uns unal,
  6    23 			5 no_of_disk_io     fixed bin (18) uns unal,
  6    24 /* 5    */	4 lsnub		bit (36),
  6    25 /* 6-7  */	4 lchg		bit (72),
  6    26 /* 10   */	4 lbuf,
  6    27 			5 address		bit (18)unaligned,
  6    28 			5 tally		bit (1)unaligned,
  6    29 			5 terminal_type	bit (5)unaligned,
  6    30 			5 station_id	bit (12)unaligned,
  6    31 /* 11-12 */	4 liost (0:1)	bit (36),
  6    32 /* 13   */	4 lcc		bit (36),
  6    33 /* 14   */	4 lback,
  6    34 			5 fill1		bit (18) unaligned,
  6    35 			5 gwake		fixed bin (17) unaligned,
  6    36 /* 15   */	4 lflag,
  6    37 			5 mp_list		bit (18) unaligned,
  6    38 			5 flags unaligned,
  6    39 				6 b18		bit (1) unaligned,
  6    40 				6 b19		bit (1) unaligned,
  6    41 				6 b20		bit (1) unaligned,
  6    42 				6 b21		bit (1) unaligned,
  6    43 				6 b22		bit (1) unaligned,
  6    44 				6 b23		bit (1) unaligned,
  6    45 				6 b24		bit (1) unaligned,
  6    46 				6 b25		bit (1) unaligned,
  6    47 				6 b26		bit (1) unaligned,
  6    48 				6 b27		bit (1) unaligned,
  6    49 				6 b28		bit (1) unaligned,
  6    50 				6 b29		bit (1) unaligned,
  6    51 				6 b30		bit (1) unaligned,
  6    52 				6 b31		bit (1) unaligned,
  6    53 				6 b32		bit (1) unaligned,
  6    54 				6 b33		bit (1) unaligned,
  6    55 				6 b34		bit (1) unaligned,
  6    56 				6 b35		bit (1) unaligned,
  6    57 /* 16   */	4 lkdss		bit (36),
  6    58 /* 17   */	4 lfile,
  6    59 			5 program_stack	fixed bin (17) unal,
  6    60 			5 file_list_ptr	bit (18) unal,
  6    61 /* 20   */	4 lttys		bit (36),
  6    62 /* 21   */	4 lswth,
  6    63 			5 b0		bit (1) unaligned,
  6    64 			5 b1		bit (1) unaligned,
  6    65 			5 b2		bit (1) unaligned,
  6    66 			5 b3		bit (1) unaligned,
  6    67 			5 b4		bit (1) unaligned,
  6    68 			5 b5		bit (1) unaligned,
  6    69 			5 b6		bit (1) unaligned,
  6    70 			5 b7		bit (1) unaligned,
  6    71 			5 b8		bit (1) unaligned,
  6    72 			5 b9		bit (1) unaligned,
  6    73 			5 b10		bit (1) unaligned,
  6    74 			5 b11		bit (1) unaligned,
  6    75 			5 b12		bit (1) unaligned,
  6    76 			5 b13		bit (1) unaligned,
  6    77 			5 b14		bit (1) unaligned,
  6    78 			5 b15		bit (1) unaligned,
  6    79 			5 b16		bit (1) unaligned,
  6    80 			5 b17		bit (1) unaligned,
  6    81 			5 b18		bit (1) unaligned,
  6    82 			5 b19		bit (1) unaligned,
  6    83 			5 b20		bit (1) unaligned,
  6    84 			5 b21		bit (1) unaligned,
  6    85 			5 b22		bit (1) unaligned,
  6    86 			5 b23		bit (1) unaligned,
  6    87 			5 b24		bit (1) unaligned,
  6    88 			5 b25		bit (1) unaligned,
  6    89 			5 b26		bit (1) unaligned,
  6    90 			5 b27		bit (1) unaligned,
  6    91 			5 b28		bit (1) unaligned,
  6    92 			5 b29		bit (1) unaligned,
  6    93 			5 b30		bit (1) unaligned,
  6    94 			5 b31		bit (1) unaligned,
  6    95 			5 b32		bit (1) unaligned,
  6    96 			5 b33		bit (1) unaligned,
  6    97 			5 b34		bit (1) unaligned,
  6    98 			5 b35		bit (1) unaligned,
  6    99 /* 22   */	4 lsize,
  6   100 			5 bar		fixed bin (17) unaligned,
  6   101 			5 limit		bit (18) unaligned,
  6   102 /* 23... */	4 lswap,
  6   103 			5 fill		bit (18) unal,
  6   104 			5 size		bit (18) unal,
  6   105 /* ...24 */	4 transfer_cell	bit (36) unal,
  6   106 /* 25   */	4 lerrm		bit (36),
  6   107 /* 26-37 */	4 lcfil (0:9)	bit (36),
  6   108 /* 40   */	4 lsybc,
  6   109 			5 b0_17		fixed bin (17) unaligned,
  6   110 			5 b18_35		fixed bin (17) unaligned,
  6   111 /* 41-42 */	4 lstem (0:1)	bit (36),
  6   112 /* 43    */	4 lcals,
  6   113 			5 b0_17		fixed bin (17) unaligned,
  6   114 			5 b18_35		bit (18) unaligned,
  6   115 /* 44-51 */	4 subsystems (3),
  6   116 			5 content_lswap,
  6   117 				6 fill		bit (18) unal,
  6   118 				6 size		bit (18) unal,
  6   119 			5 tally_address	fixed bin (17) unaligned,
  6   120 			5 ss_flags	bit (18) unaligned,
  6   121 /* 52   */	4 ltalc,
  6   122 			5 tod		fixed bin (17) unaligned,
  6   123 			5 startup		fixed bin (17) unaligned,
  6   124 /* 53   */	4 lspts		fixed bin (35),
  6   125 /* 54   */	4 lflg2,
  6   126 			5 b0		bit (1) unaligned,
  6   127 			5 b1		bit (1) unaligned,
  6   128 			5 b2		bit (1) unaligned,
  6   129 			5 b3		bit (1) unaligned,
  6   130 			5 b4		bit (1) unaligned,
  6   131 			5 b5		bit (1) unaligned,
  6   132 			5 b6		bit (1) unaligned,
  6   133 			5 b7		bit (1) unaligned,
  6   134 			5 b8		bit (1) unaligned,
  6   135 			5 b9		bit (1) unaligned,
  6   136 			5 b10		bit (1) unaligned,
  6   137 			5 b11		bit (1) unaligned,
  6   138 			5 b12		bit (1) unaligned,
  6   139 			5 b13		bit (1) unaligned,
  6   140 			5 b14		bit (1) unaligned,
  6   141 			5 b15		bit (1) unaligned,
  6   142 			5 b16		bit (1) unaligned,
  6   143 			5 b17		bit (1) unaligned,
  6   144 			5 b18		bit (1) unaligned,
  6   145 			5 b19		bit (1) unaligned,
  6   146 			5 b20		bit (1) unaligned,
  6   147 			5 b21		bit (1) unaligned,
  6   148 			5 b22		bit (1) unaligned,
  6   149 			5 b23		bit (1) unaligned,
  6   150 			5 b24		bit (1) unaligned,
  6   151 			5 b25		bit (1) unaligned,
  6   152 			5 b26		bit (1) unaligned,
  6   153 			5 b27		bit (1) unaligned,
  6   154 			5 b28		bit (1) unaligned,
  6   155 			5 b29		bit (1) unaligned,
  6   156 			5 b30		bit (1) unaligned,
  6   157 			5 b31		bit (1) unaligned,
  6   158 			5 b32		bit (1) unaligned,
  6   159 			5 b33		bit (1) unaligned,
  6   160 			5 b34		bit (1) unaligned,
  6   161 			5 b35		bit (1) unaligned,
  6   162 /* 55-60 */	4 lsftm (0:3)	bit (36),
  6   163 /* 61    */	4 lsprt		fixed bin (35),
  6   164 /* 62    */	4 ltrm		bit (36),
  6   165 /* 63    */	4 linno		fixed bin (35),
  6   166 /* 64    */	4 lincr		fixed bin (35),
  6   167 /* 65    */	4 ltdes		bit (36),
  6   168 /* 66    */	4 lbptr		bit (36),
  6   169 /* 67    */	4 lpptr,
  6   170 			5 last_file_pat_ptr	bin (18) uns unal,
  6   171 			5 lpptr_reserved	bin (18) uns unal,
  6   172 /* 70    */	4 lsclp		bit (36),
  6   173 /* 71    */	4 limit		fixed bin (35),
  6   174 /* 72    */	4 lacpt,
  6   175 			5 jout_pat_offset	bit (18) unal,
  6   176 			5 permissions unal,
  6   177 				6 lodx		bit (1) unal,
  6   178 				6 cardin		bit (1) unal,
  6   179 				6 talk		bit (1) unal,
  6   180 				6 lods		bit (1) unal,
  6   181 			5 cardin_urgency	bit (14) unal,
  6   182 /* 73    */	4 ldrl,
  6   183 			5 ilc		bit (18) unaligned,
  6   184 			5 code		fixed bin (17) unaligned,
  6   185 /* 74    */	4 ljsnb		bit (36),
  6   186 /* 75    */	4 ltm0		bit (36),
  6   187 /* 76    */	4 ltm1		bit (36),
  6   188 /* 77    */	4 ltm2		bit (36),
  6   189 /* 100   */	4 ltm3		bit (36),
  6   190 /* 101   */	4 ltm4		bit (36),
  6   191 /* 102   */	4 ltm5		bit (36),
  6   192 /* 103   */	4 ltmwt		bit (36),
  6   193 /* 104   */	4 ltmrs		bit (36),
  6   194 /* 105   */	4 ltc0		bit (36),
  6   195 /* 106   */	4 ltc1		bit (36),
  6   196 /* 107   */	4 ltc2		bit (36),
  6   197 /* 110   */	4 lct3		bit (36),
  6   198 /* 111   */	4 ltc4		bit (36),
  6   199 /* 112   */	4 ltc5		bit (36),
  6   200 /* 113   */	4 ltcw		bit (36),
  6   201 /* 114   */	4 lkst		bit (36),
  6   202 /* 115   */	4 lkst2		bit (36),
  6   203 /* 116   */	4 lkcc		bit (36),
  6   204 /* 117   */	4 lkms		bit (36),
  6   205 /* 120-121 */	4 lksdc (0:1)	bit (36),
  6   206 /* 122   */	4 lkntp		bit (36),
  6   207 /* 123   */	4 lkrdc		bit (36),
  6   208 /* 124   */	4 lpqf		bit (36),
  6   209 /* 125   */	4 lpqb		bit (36),
  6   210 /* 126   */	4 lustl		bit (36),
  6   211 /* 127   */	4 ltemp		bit (36),
  6   212 /* 130   */	4 lrtll,
  6   213 			5 word_length	fixed bin unaligned,
  6   214 			5 char_length	fixed bin unaligned,
  6   215 /* 131   */	4 ltim		bit (36),
  6   216 /* 132   */	4 lcfio,
  6   217 			5 sect_out	fixed bin(18)unsigned unal,
  6   218 			5 sect_in		fixed bin(18)unsigned unal,
  6   219 /* 133   */	4 lcfst,
  6   220 			5 initial_sect_out	fixed bin(18)unsigned unal,
  6   221 			5 start_term	fixed bin(18)unsigned unal,
  6   222 /* 134   */	4 lcmpt		bit (36),
  6   223 /* 135   */	4 lcjid		bit (36),
  6   224 /* 136-137 */	4 lrcal (0:1)	bit (36),
  6   225 /* 140   */	4 lrdta		bit (36),
  6   226 /* 141   */	4 lrrsk		bit (36),
  6   227 /* 142   */	4 lrskd		bit (36),
  6   228 /* 143   */	4 lrcc		bit (36),
  6   229 /* 144-145 */	4 lrsts (0:1)	bit (36),
  6   230 /* 146   */	4 lrtm		bit (36),
  6   231 /* 147   */	4 lswt2,
  6   232 			5 b0		bit (1) unaligned,
  6   233 			5 b1		bit (1) unaligned,
  6   234 			5 b2		bit (1) unaligned,
  6   235 			5 b3		bit (1) unaligned,
  6   236 			5 b4		bit (1) unaligned,
  6   237 			5 b5		bit (1) unaligned,
  6   238 			5 b6		bit (1) unaligned,
  6   239 			5 b7		bit (1) unaligned,
  6   240 			5 b8		bit (1) unaligned,
  6   241 			5 b9		bit (1) unaligned,
  6   242 			5 b10		bit (1) unaligned,
  6   243 			5 b11		bit (1) unaligned,
  6   244 			5 b12		bit (1) unaligned,
  6   245 			5 b13		bit (1) unaligned,
  6   246 			5 b14		bit (1) unaligned,
  6   247 			5 b15		bit (1) unaligned,
  6   248 			5 b16		bit (1) unaligned,
  6   249 			5 b17		bit (1) unaligned,
  6   250 			5 b18		bit (1) unaligned,
  6   251 			5 b19		bit (1) unaligned,
  6   252 			5 b20		bit (1) unaligned,
  6   253 			5 b21		bit (1) unaligned,
  6   254 			5 b22		bit (1) unaligned,
  6   255 			5 b23		bit (1) unaligned,
  6   256 			5 b24		bit (1) unaligned,
  6   257 			5 b25		bit (1) unaligned,
  6   258 			5 b26		bit (1) unaligned,
  6   259 			5 b27		bit (1) unaligned,
  6   260 			5 b28		bit (1) unaligned,
  6   261 			5 b29		bit (1) unaligned,
  6   262 			5 b30		bit (1) unaligned,
  6   263 			5 b31		bit (1) unaligned,
  6   264 			5 b32		bit (1) unaligned,
  6   265 			5 b33		bit (1) unaligned,
  6   266 			5 b34		bit (1) unaligned,
  6   267 			5 b35		bit (1) unaligned,
  6   268 /* 150   */	4 llsnb		bit (36),
  6   269 /* 151   */	4 lesq		bit (36),
  6   270 /* 152-153 */	4 lumc (0:1)	bit (36),
  6   271 /* 154-155 */	4 lfnam (0:1)	bit (36),
  6   272 /* 156   */	4 lopts		bit (36),
  6   273 /* 157   */	4 licec,
  6   274 			5 b0_17		bit (18) unaligned,
  6   275 			5 b18_35		fixed bin (17) unaligned,
  6   276 /* 160   */	4 lflg3,
  6   277 			5 b0		bit (1) unaligned,
  6   278 			5 b1		bit (1) unaligned,
  6   279 			5 b2		bit (1) unaligned,
  6   280 			5 b3		bit (1) unaligned,
  6   281 			5 b4		bit (1) unaligned,
  6   282 			5 b5		bit (1) unaligned,
  6   283 			5 b6		bit (1) unaligned,
  6   284 			5 b7		bit (1) unaligned,
  6   285 			5 b8		bit (1) unaligned,
  6   286 			5 b9		bit (1) unaligned,
  6   287 			5 b10		bit (1) unaligned,
  6   288 			5 b11		bit (1) unaligned,
  6   289 			5 b12		bit (1) unaligned,
  6   290 			5 b13		bit (1) unaligned,
  6   291 			5 b14		bit (1) unaligned,
  6   292 			5 b15		bit (1) unaligned,
  6   293 			5 b16		bit (1) unaligned,
  6   294 			5 b17		bit (1) unaligned,
  6   295 			5 b18		bit (1) unaligned,
  6   296 			5 b19		bit (1) unaligned,
  6   297 			5 b20		bit (1) unaligned,
  6   298 			5 b21		bit (1) unaligned,
  6   299 			5 b22		bit (1) unaligned,
  6   300 			5 b23		bit (1) unaligned,
  6   301 			5 b24		bit (1) unaligned,
  6   302 			5 b25		bit (1) unaligned,
  6   303 			5 b26		bit (1) unaligned,
  6   304 			5 b27		bit (1) unaligned,
  6   305 			5 b28		bit (1) unaligned,
  6   306 			5 b29		bit (1) unaligned,
  6   307 			5 b30		bit (1) unaligned,
  6   308 			5 b31		bit (1) unaligned,
  6   309 			5 b32		bit (1) unaligned,
  6   310 			5 b33		bit (1) unaligned,
  6   311 			5 b34		bit (1) unaligned,
  6   312 			5 b35		bit (1) unaligned,
  6   313 /* 161-163 */	4 lpage (0:2)	bit (36),
  6   314 /* 164   */	4 lsit1		bit (36),
  6   315 /* 165   */	4 lsit2		bit (36),
  6   316 /* 166   */	4 lsit3		bit (36),
  6   317 /* 167   */	4 lsit4		bit (36),
  6   318 /* The following entries are maintained by gtss and are not found in TSS UST */
  6   319 /* 170   */	4 lxxx, /* program stack index, offset from gtss_ust */
  6   320 			5 b0_17		fixed bin (17) unaligned,
  6   321 			5 b18_35		bit (18) unaligned, /* not used */
  6   322 /* 171-175 */	4 lprgs (5),
  6   323 			5 b0_17		fixed bin (17) unaligned,
  6   324 			5 b18_35		fixed bin (17) unaligned,
  6   325 /* 176   */	4 fill	bit (36),
  6   326 /* 177   */	4 remote_io_buffer aligned,
  6   327 			5 buffer_control_word,
  6   328 				6 current_line_pointer  bit (18)unal,
  6   329 				6 buffer_threshold_address  bit (18)unal,
  6   330 			5 number_words_transmitted	fixed bin (17)unal,
  6   331 			5 FILL1			fixed bin (17)unal,
  6   332 			5 count_of_characters_transmitted fixed bin (17)unal,
  6   333 			5 FILL2			fixed bin (17)unal,
  6   334 			5 characters_transmitted (244) char (1) unal,
  6   335 /* 277   */	4 word_after_ust		bit (36) aligned;
  6   336 
  6   337 /*   END INCLUDE FILE gtss_ust_ext_.incl.pl1 */
      605 
      606      end;						/* gtss_abs_ */
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/10/84  1042.7  gtss_abs_.pl1                     >spec>on>7105>gtss_abs_.pl1
595          1    12/10/84  1029.7  gtss_deferred_queue.incl.pl1      >spec>on>7105>gtss_deferred_queue.incl.pl1
597          2    09/09/83  1713.8  gtss_ext_.incl.pl1                >ldd>include>gtss_ext_.incl.pl1
599          3    12/10/84  1029.7  gtss_entry_dcls.incl.pl1          >spec>on>7105>gtss_entry_dcls.incl.pl1
601          4    09/09/83  1713.4  gse_ext_.incl.pl1                 >ldd>include>gse_ext_.incl.pl1
603          5    09/09/83  1713.6  gtss_db_names.incl.pl1            >ldd>include>gtss_db_names.incl.pl1
605          6    09/09/83  1714.3  gtss_ust_ext_.incl.pl1            >ldd>include>gtss_ust_ext_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
CR                              000544 automatic       char(1)                  initial unaligned dcl 562 set ref 109 109 109 109
                                                                                  109 452 562*
abs_id                                 based           char(19)                 unaligned dcl 498 ref 235
absentee_id                     000101 automatic       char(19)                 unaligned dcl 496 set ref 66 234* 235*
absin_file_name                 000106 automatic       char(12)                 initial unaligned dcl 497 set ref 313 314 497*
aid                       1(09) 000606 automatic       char(19)                 array level 2 packed unaligned dcl 582 set ref 300
                                                                                  390 399 428 480
aid_ptr                         000112 automatic       pointer                  initial dcl 500 set ref 235 258* 500*
backup_indx                     000114 automatic       fixed bin(24,0)          dcl 501 set ref 255* 256 258*
based_time                             based           picture(6)               unaligned dcl 502 ref 460
bit_count                       000120 automatic       fixed bin(24,0)          dcl 504 set ref 223* 248 391* 434* 444 451 451
btp                             000116 automatic       pointer                  dcl 503 set ref 459* 460
caller                          000121 automatic       varying char(32)         dcl 505 set ref 60* 77* 80* 96* 138* 182* 226* 240*
                                                                                  263* 277* 304* 318* 359* 410* 412* 437* 445* 471*
                                                                                  488*
cat_entry                       000132 automatic       fixed bin(18,0)          unsigned dcl 506 set ref 317* 411*
chars                           000133 automatic       varying char(256)        dcl 507 set ref 451* 452* 452 453 457* 457 458* 458
                                                                                  459 461 462 471*
cmd_line                        000234 automatic       varying char(350)        dcl 508 set ref 215* 216 216 216 216 217* 218 218
                                                                                  218 218 219* 220 220 220 220 313* 314* 314 315*
                                                                                  315 331* 331 338* 338 352* 352 354* 354 363* 363
                                                                                  367* 367 368* 368 369* 369 371* 371 372* 372 373*
                                                                                  373 374* 374 375* 376 376 376 376 399* 401 401 402
                                                                                  402 402 402 426* 427 427 427 427 428* 429 429 429
                                                                                  429 430* 431 431 431 431 480* 481* 482 482 482 482
code                            000365 automatic       fixed bin(35,0)          dcl 509 set ref 178* 180 181* 182* 216* 218* 220*
                                                                                  223* 225 226* 238* 239 240* 376* 391* 395* 402*
                                                                                  427* 429* 431* 434* 436 437* 482* 486* 487 488*
com_err_                        000060 constant        entry                    external dcl 3-8 ref 46 80 96 182 226 240 263 277
                                                                                  359 437 445 471 488
com_err_$suppress_name          000012 constant        entry                    external dcl 510 ref 166 199
convert_ipc_code_               000014 constant        entry                    external dcl 511 ref 181
cs                                     based           char                     unaligned dcl 512 ref 248 444 451 451
cu_$cp                          000016 constant        entry                    external dcl 513 ref 216 218 220 376 402 427 429 431
                                                                                  482
d                                      defined         structure                level 1 packed unaligned dcl 565
d1                                     defined         char(1)                  level 2 packed unaligned dcl 565 ref 271 271
d2                        0(09)        defined         char(1)                  level 2 packed unaligned dcl 565 ref 271 271
d3                        0(18)        defined         char(1)                  level 2 packed unaligned dcl 565 ref 271 271
d4                        0(27)        defined         char(1)                  level 2 packed unaligned dcl 565 ref 271 271
d5                        1            defined         char(1)                  level 2 packed unaligned dcl 565 set ref 271 271 282
                                                                                  282*
db_abs                                 defined         bit(1)                   unaligned dcl 5-32 ref 375 401 481
dbflg                     5            based           structure                level 2 packed unaligned dcl 1-39
dc_ptr                          000366 automatic       pointer                  initial dcl 514 set ref 317* 318 326 327 336 336 341
                                                                                  341 411* 412 419 419 456 464 514*
dcdsd                     4            based           bit(36)                  level 2 packed unaligned dcl 1-23 set ref 336 336
                                                                                  419 419
dcdst                     5            based           fixed bin(35,0)          level 2 packed unaligned dcl 1-23 ref 341 341 456
                                                                                  464
dcelp                     6            based           fixed bin(35,0)          level 2 packed unaligned dcl 1-23 ref 326 327
delete_$ptr                     000020 constant        entry                    external dcl 515 ref 238 486
dhbsn                     4            based           structure                level 2 packed unaligned dcl 1-6
dib_ptr                         000370 automatic       pointer                  initial dcl 516 set ref 357* 358 363 516*
did                             000606 automatic       char(5)                  array level 2 packed unaligned dcl 582 set ref 314
                                                                                  317* 318* 357* 359* 374 391 411* 412* 445*
did_pos                         000372 automatic       fixed bin(24,0)          dcl 517 set ref 248* 249 254
dir_map_rule                    000100 automatic       fixed bin(24,0)          dcl 101 set ref 78* 79 85 88 91
djid                            000374 automatic       char(5)                  unaligned dcl 518 set ref 62* 248 271 271 271 271
                                                                                  271 271 271 271 271 271 271 271 271 271 271 271
                                                                                  271 271 271 271 277* 282 282 282* 282
dq_catalog                             based           structure                level 1 packed unaligned dcl 1-23
dq_dib                                 based           structure                level 1 packed unaligned dcl 1-39
dq_header                              based           structure                level 1 packed unaligned dcl 1-6
dqh_ptr                         000376 automatic       pointer                  initial dcl 519 set ref 137* 138 143 519*
drun_job_id                            parameter       char(5)                  unaligned dcl 520 ref 51 62
eii                             000400 automatic       fixed bin(18,0)          unsigned dcl 521 set ref 148* 149* 300 314 317 318
                                                                                  357 359 374 390 391 399 411 412 428 445 480
entries_info                    000606 automatic       structure                array level 1 unaligned dcl 582 set ref 144 144
error                           000401 automatic       bit(1)                   initial unaligned dcl 522 set ref 61* 229* 234 250*
                                                                                  265* 440* 522*
ev_occured                      000402 automatic       fixed bin(17,0)          dcl 523 set ref 178* 186
f_res                     5(18)        based           bit(1)                   level 3 packed unaligned dcl 1-39 ref 363
gcos_time                       000404 automatic       fixed bin(36,0)          unsigned dcl 525 set ref 464* 465 465
get_pdir_                       000022 constant        entry                    external dcl 524 ref 213 424
get_wdir_                       000122 constant        entry                    external dcl 370 ref 368
gse_ext_$drm_rule               000112 external static fixed bin(24,0)          dcl 4-6 set ref 78 96*
gse_ext_$smc_pathname           000114 external static char(168)                unaligned dcl 4-16 ref 91
gse_ext_$umc_name               000116 external static char(12)                 unaligned dcl 4-17 ref 85 91
gtss_abort_subsystem_           000062 constant        entry                    external dcl 3-15 ref 138 318 412
gtss_abs_$cpu_runout            000064 constant        entry                    external dcl 3-20 ref 192 192
gtss_abs_$dabt_check            000066 constant        entry                    external dcl 3-22 ref 187 187
gtss_abs_$get_drm               000070 constant        entry                    external dcl 3-24 ref 371
gtss_bcd_ascii_                 000072 constant        entry                    external dcl 3-33 ref 336 419
gtss_com_err_sw           0(06) 000056 external static bit(1)                   level 2 packed unaligned dcl 2-60 set ref 165* 198*
gtss_dq_$catp                   000074 constant        entry                    external dcl 3-42 ref 317 411
gtss_dq_$dibp                   000076 constant        entry                    external dcl 3-44 ref 357
gtss_dq_$entries_info           000100 constant        entry                    external dcl 3-45 ref 144
gtss_dq_$hdrp                   000102 constant        entry                    external dcl 3-46 ref 137
gtss_ext_$com_reg               000054 external static structure                level 1 dcl 2-45
gtss_ext_$db                    000044 external static bit(1)                   array unaligned dcl 2-10 ref 375 375 401 401 481 481
gtss_ext_$event_channel         000046 external static fixed bin(71,0)          dcl 2-16 set ref 178*
gtss_ext_$flags                 000056 external static structure                level 1 dcl 2-60
gtss_ext_$homedir               000050 external static char(64)                 unaligned dcl 2-22 set ref 391*
gtss_ext_$restart_seg_ptr       000052 external static pointer                  dcl 2-29 set ref 178* 391* 394 395*
gtss_fail                       000406 stack reference condition                dcl 526 ref 184
gtss_fault_processor_$timer_runout
                                000106 constant        entry                    external dcl 3-111 ref 160 160 170 193 193
gtss_find_cond_frame_           000104 constant        entry                    external dcl 3-110 ref 138 138
gtss_interp_prim_$sysret        000110 constant        entry                    external dcl 3-128 ref 207
gtss_ust                        000120 external static structure                level 2 dcl 6-16
gtss_ust_ext_$ust               000120 external static structure                level 1 dcl 6-16
hcs_$initiate_count             000024 constant        entry                    external dcl 527 ref 223 391 434
hcs_$terminate_noname           000026 constant        entry                    external dcl 528 ref 395
home_dir                        000414 automatic       char(64)                 unaligned dcl 529 set ref 312* 313 314
hours                           000434 automatic       char(2)                  unaligned dcl 530 set ref 349* 351
hrs                             000435 automatic       picture(2)               unaligned dcl 531 set ref 347* 348 349 461* 461 463
initial_sect_out        133     000120 external static fixed bin(18,0)          level 4 packed unsigned unaligned dcl 6-16 ref 206
ioa_                            000030 constant        entry                    external dcl 533 ref 375 401 481
ipc_$read_ev_chn                000032 constant        entry                    external dcl 534 ref 178
job_action                      000546 automatic       entry variable           initial array dcl 572 set ref 149 572* 572* 572*
                                                                                  572* 572* 572* 572* 572*
job_stat                  6     000606 automatic       fixed bin(6,0)           array level 2 unsigned dcl 582 set ref 149
lcfio                   132     000120 external static structure                level 3 dcl 6-16
lcfst                   133     000120 external static structure                level 3 dcl 6-16
lcjid                   135     000120 external static bit(36)                  level 3 dcl 6-16 ref 409
mc_ptr                                 parameter       pointer                  dcl 535 set ref 155 170* 173
milsec                          000436 automatic       fixed bin(35,0)          dcl 536 set ref 327* 328
mins                            000437 automatic       picture(2)               unaligned dcl 537 set ref 348* 350 462* 462 463
minutes                         000440 automatic       char(2)                  unaligned dcl 538 set ref 350* 351
name                                   parameter       char(4)                  unaligned dcl 539 set ref 155 170* 173
no_of_cea                 4            based           fixed bin(18,0)          level 3 packed unsigned unaligned dcl 1-6 ref 143
no_of_entries                   000441 automatic       fixed bin(18,0)          unsigned dcl 540 set ref 143* 144*
no_of_entries_found             000442 automatic       fixed bin(18,0)          unsigned dcl 541 set ref 144* 145 148
path                            000443 automatic       char(18)                 unaligned dcl 543 set ref 214* 215 223* 226* 240*
                                                                                  425* 426 434* 437* 488*
proc_dir                        000450 automatic       char(168)                unaligned dcl 544 set ref 213* 223* 226* 240* 424*
                                                                                  434* 437* 488*
requested_date                  000522 automatic       char(8)                  unaligned dcl 545 set ref 336 336 337* 337 337 337
                                                                                  338 419 419 420* 420 420 420 453 457
requested_time                  000524 automatic       char(6)                  unaligned dcl 546 set ref 351* 352
reschedule                      000526 automatic       bit(1)                   unaligned dcl 547 set ref 302 408* 453* 465* 476*
                                                                                  479
rid                                    based           char(11)                 unaligned dcl 548 ref 257
rid_ptr                         000530 automatic       pointer                  initial dcl 549 set ref 256* 257 549*
sec                             000532 automatic       fixed bin(35,0)          initial dcl 550 set ref 328* 330 335* 341* 343* 345
                                                                                  347 348 550*
seconds                         000534 automatic       picture(5)               unaligned dcl 551 set ref 330* 331
sect_in                 132(18) 000120 external static fixed bin(18,0)          level 4 packed unsigned unaligned dcl 6-16 set ref
                                                                                  206*
seg_ptr                         000536 automatic       pointer                  initial dcl 552 set ref 223* 238* 248 256 258 434*
                                                                                  444 451 451 486* 552*
ss_time_limit_set         0(04) 000056 external static bit(1)                   level 2 packed unaligned dcl 2-60 set ref 159 161*
                                                                                  194*
start_term              133(18) 000120 external static fixed bin(18,0)          level 4 packed unsigned unaligned dcl 6-16 set ref
                                                                                  205*
table                                  based           char(1)                  array unaligned dcl 554 set ref 256 258
table_length                    000540 automatic       fixed bin(24,0)          dcl 555 set ref 254* 255
time                            000542 automatic       fixed bin(36,0)          unsigned dcl 556 set ref 463* 465 465
timer_manager_$cpu_call         000034 constant        entry                    external dcl 557 ref 187
timer_manager_$reset_cpu_call   000036 constant        entry                    external dcl 558 ref 160 192 193
timer_ranout              0(05) 000056 external static bit(1)                   level 2 packed unaligned dcl 2-60 set ref 195*
tsddt                     2     000054 external static fixed bin(36,0)          level 2 packed unsigned unaligned dcl 2-45 ref 343
                                                                                  343
unique_chars_                   000040 constant        entry                    external dcl 559 ref 214 425
user_info_$homedir              000042 constant        entry                    external dcl 560 ref 312

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
aid                                    automatic       char(19)                 unaligned dcl 499
cout_sector                            based           structure                level 1 packed unaligned dcl 1-66
db_                                    defined         bit(1)                   unaligned dcl 5-32
db_CFP_input                           defined         bit(1)                   unaligned dcl 5-32
db_attributes_mgr                      defined         bit(1)                   unaligned dcl 5-32
db_dq                                  defined         bit(1)                   unaligned dcl 5-32
db_drl_addmem                          defined         bit(1)                   unaligned dcl 5-32
db_drl_callss                          defined         bit(1)                   unaligned dcl 5-32
db_drl_defil                           defined         bit(1)                   unaligned dcl 5-32
db_drl_dio                             defined         bit(1)                   unaligned dcl 5-32
db_drl_filact                          defined         bit(1)                   unaligned dcl 5-32
db_drl_filsp                           defined         bit(1)                   unaligned dcl 5-32
db_drl_grow                            defined         bit(1)                   unaligned dcl 5-32
db_drl_kin                             defined         bit(1)                   unaligned dcl 5-32
db_drl_morlnk                          defined         bit(1)                   unaligned dcl 5-32
db_drl_msub                            defined         bit(1)                   unaligned dcl 5-32
db_drl_part                            defined         bit(1)                   unaligned dcl 5-32
db_drl_retfil                          defined         bit(1)                   unaligned dcl 5-32
db_drl_rew                             defined         bit(1)                   unaligned dcl 5-32
db_drl_rstswh                          defined         bit(1)                   unaligned dcl 5-32
db_drl_setswh                          defined         bit(1)                   unaligned dcl 5-32
db_drl_switch                          defined         bit(1)                   unaligned dcl 5-32
db_drl_t_cfio                          defined         bit(1)                   unaligned dcl 5-32
db_expand_pathname                     defined         bit(1)                   unaligned dcl 5-32
db_filact_funct02                      defined         bit(1)                   unaligned dcl 5-32
db_filact_funct03                      defined         bit(1)                   unaligned dcl 5-32
db_filact_funct04                      defined         bit(1)                   unaligned dcl 5-32
db_filact_funct05                      defined         bit(1)                   unaligned dcl 5-32
db_filact_funct10                      defined         bit(1)                   unaligned dcl 5-32
db_filact_funct11                      defined         bit(1)                   unaligned dcl 5-32
db_filact_funct14                      defined         bit(1)                   unaligned dcl 5-32
db_filact_funct18                      defined         bit(1)                   unaligned dcl 5-32
db_filact_funct19                      defined         bit(1)                   unaligned dcl 5-32
db_filact_funct21                      defined         bit(1)                   unaligned dcl 5-32
db_filact_funct22                      defined         bit(1)                   unaligned dcl 5-32
db_interp_prim                         defined         bit(1)                   unaligned dcl 5-32
db_ios                                 defined         bit(1)                   unaligned dcl 5-32
db_mcfc                                defined         bit(1)                   unaligned dcl 5-32
db_run_subsystem                       defined         bit(1)                   unaligned dcl 5-32
debug_bit_names                        internal static structure                array level 1 unaligned dcl 5-75
event_info                             based           structure                level 1 unaligned dcl 586
gse_ext_$gcos_debug_pathname           external static char(168)                unaligned dcl 4-15
gse_ext_$modes                         external static structure                level 1 dcl 4-18
gtss_CFP_abort_                 000000 constant        entry                    external dcl 3-9
gtss_CFP_break_                 000000 constant        entry                    external dcl 3-10
gtss_CFP_input_                 000000 constant        entry                    external dcl 3-11
gtss_CFP_output_                000000 constant        entry                    external dcl 3-12
gtss_abandon_CFP_               000000 constant        entry                    external dcl 3-13
gtss_abort_dump_                000000 constant        entry                    external dcl 3-14
gtss_abort_subsystem_$not_imp   000000 constant        entry                    external dcl 3-16
gtss_abs_$abs_equiv             000000 constant        entry                    external dcl 3-19
gtss_abs_$create_absin          000000 constant        entry                    external dcl 3-21
gtss_abs_$get_id                000000 constant        entry                    external dcl 3-23
gtss_abs_login_banner_          000000 constant        entry                    external dcl 3-17
gtss_abs_logout_banner_         000000 constant        entry                    external dcl 3-18
gtss_adjust_size_               000000 constant        entry                    external dcl 3-25
gtss_aft_$add                   000000 constant        entry                    external dcl 3-26
gtss_aft_$delete                000000 constant        entry                    external dcl 3-27
gtss_aft_$find                  000000 constant        entry                    external dcl 3-28
gtss_aft_$initialize            000000 constant        entry                    external dcl 3-29
gtss_ascii_bcd_                 000000 constant        entry                    external dcl 3-30
gtss_attributes_mgr_$get        000000 constant        entry                    external dcl 3-31
gtss_attributes_mgr_$set        000000 constant        entry                    external dcl 3-32
gtss_bcd_ascii_$lc              000000 constant        entry                    external dcl 3-34
gtss_break_vector_              000000 constant        entry                    external dcl 3-35
gtss_break_vector_$drl_in_progress
                                000000 constant        entry                    external dcl 3-36
gtss_break_vector_$status       000000 constant        entry                    external dcl 3-37
gtss_build_                     000000 constant        entry                    external dcl 3-38
gtss_com_err_                   000000 constant        entry                    external dcl 3-39
gtss_derail_processor_          000000 constant        entry                    external dcl 3-40
gtss_derail_processor_$set      000000 constant        entry                    external dcl 3-41
gtss_dq_$create                 000000 constant        entry                    external dcl 3-43
gtss_dq_$mod_js                 000000 constant        entry                    external dcl 3-47
gtss_dq_$open_exc               000000 constant        entry                    external dcl 3-48
gtss_dq_$open_gen               000000 constant        entry                    external dcl 3-49
gtss_drl_abort_                 000000 constant        entry                    external dcl 3-50
gtss_drl_addmem_                000000 constant        entry                    external dcl 3-51
gtss_drl_callss_                000000 constant        entry                    external dcl 3-52
gtss_drl_corfil_                000000 constant        entry                    external dcl 3-53
gtss_drl_defil_                 000000 constant        entry                    external dcl 3-54
gtss_drl_defil_$subr            000000 constant        entry                    external dcl 3-55
gtss_drl_dio_                   000000 constant        entry                    external dcl 3-56
gtss_drl_drlimt_                000000 constant        entry                    external dcl 3-57
gtss_drl_drlsav_                000000 constant        entry                    external dcl 3-58
gtss_drl_filact_                000000 constant        entry                    external dcl 3-59
gtss_drl_filsp_                 000000 constant        entry                    external dcl 3-60
gtss_drl_grow_                  000000 constant        entry                    external dcl 3-61
gtss_drl_gwake_                 000000 constant        entry                    external dcl 3-62
gtss_drl_jsts_                  000000 constant        entry                    external dcl 3-63
gtss_drl_kin_                   000000 constant        entry                    external dcl 3-64
gtss_drl_kotnow_                000000 constant        entry                    external dcl 3-65
gtss_drl_kotnow_$gtss_drl_kout_ 000000 constant        entry                    external dcl 3-66
gtss_drl_koutn_                 000000 constant        entry                    external dcl 3-67
gtss_drl_morlnk_                000000 constant        entry                    external dcl 3-68
gtss_drl_msub_                  000000 constant        entry                    external dcl 3-69
gtss_drl_objtim_                000000 constant        entry                    external dcl 3-70
gtss_drl_part_                  000000 constant        entry                    external dcl 3-71
gtss_drl_pasaft_                000000 constant        entry                    external dcl 3-72
gtss_drl_pasdes_                000000 constant        entry                    external dcl 3-73
gtss_drl_pasust_                000000 constant        entry                    external dcl 3-74
gtss_drl_pdio_                  000000 constant        entry                    external dcl 3-75
gtss_drl_prgdes_                000000 constant        entry                    external dcl 3-76
gtss_drl_pseudo_                000000 constant        entry                    external dcl 3-77
gtss_drl_relmem_                000000 constant        entry                    external dcl 3-78
gtss_drl_restor_                000000 constant        entry                    external dcl 3-79
gtss_drl_retfil_                000000 constant        entry                    external dcl 3-80
gtss_drl_return_                000000 constant        entry                    external dcl 3-81
gtss_drl_rew_                   000000 constant        entry                    external dcl 3-82
gtss_drl_rstswh_                000000 constant        entry                    external dcl 3-83
gtss_drl_setlno_                000000 constant        entry                    external dcl 3-84
gtss_drl_setswh_                000000 constant        entry                    external dcl 3-85
gtss_drl_snumb_                 000000 constant        entry                    external dcl 3-86
gtss_drl_spawn_                 000000 constant        entry                    external dcl 3-87
gtss_drl_spawn_$gtss_drl_pasflr_
                                000000 constant        entry                    external dcl 3-88
gtss_drl_stoppt_                000000 constant        entry                    external dcl 3-89
gtss_drl_switch_                000000 constant        entry                    external dcl 3-90
gtss_drl_sysret_                000000 constant        entry                    external dcl 3-91
gtss_drl_t_cfio_                000000 constant        entry                    external dcl 3-92
gtss_drl_t_cmov_                000000 constant        entry                    external dcl 3-93
gtss_drl_t_err_                 000000 constant        entry                    external dcl 3-94
gtss_drl_t_goto_                000000 constant        entry                    external dcl 3-95
gtss_drl_t_linl_                000000 constant        entry                    external dcl 3-96
gtss_drl_t_rscc_                000000 constant        entry                    external dcl 3-97
gtss_drl_tapein_                000000 constant        entry                    external dcl 3-98
gtss_drl_task_                  000000 constant        entry                    external dcl 3-99
gtss_drl_termtp_                000000 constant        entry                    external dcl 3-100
gtss_drl_time_                  000000 constant        entry                    external dcl 3-101
gtss_drun_                      000000 constant        entry                    external dcl 3-102
gtss_dsd_lookup_                000000 constant        entry                    external dcl 3-103
gtss_dsd_process_               000000 constant        entry                    external dcl 3-104
gtss_edit_dsd_                  000000 constant        entry                    external dcl 3-105
gtss_expand_pathname_           000000 constant        entry                    external dcl 3-107
gtss_expand_pathname_$verify_umc
                                000000 constant        entry                    external dcl 3-108
gtss_ext_$CFP_bits                     external static structure                level 1 dcl 2-37
gtss_ext_$SYstarstar_file_no           external static fixed bin(24,0)          dcl 2-33
gtss_ext_$aem                          external static fixed bin(17,0)          dcl 2-8
gtss_ext_$aft                          external static structure                level 1 dcl 2-78
gtss_ext_$bad_drl_rtrn                 external static label variable           dcl 2-9
gtss_ext_$deferred_catalogs_ptr        external static pointer                  dcl 2-11
gtss_ext_$dispose_of_drl               external static label variable           dcl 2-12
gtss_ext_$drl_rtrn                     external static label variable           array dcl 2-13
gtss_ext_$drm_path                     external static char(168)                unaligned dcl 2-14
gtss_ext_$drun_jid                     external static char(5)                  unaligned dcl 2-15
gtss_ext_$fast_lib                     external static structure                level 1 dcl 2-98
gtss_ext_$finished                     external static label variable           dcl 2-17
gtss_ext_$gdb_name                     external static char(8)                  unaligned dcl 2-18
gtss_ext_$get_line                     external static entry variable           dcl 2-19
gtss_ext_$gtss_slave_area_seg          external static pointer                  array dcl 2-20
gtss_ext_$hcs_work_area_ptr            external static pointer                  dcl 2-21
gtss_ext_$last_k_was_out               external static bit(1)                   dcl 2-23
gtss_ext_$mcfc                         external static structure                level 1 dcl 2-109
gtss_ext_$pdir                         external static varying char(168)        dcl 2-24
gtss_ext_$popup_from_pi                external static label variable           dcl 2-25
gtss_ext_$ppt                          external static pointer                  dcl 2-94
gtss_ext_$process_type                 external static fixed bin(17,0)          dcl 2-26
gtss_ext_$put_chars                    external static entry variable           dcl 2-27
gtss_ext_$restart_from_pi              external static label variable           dcl 2-28
gtss_ext_$sig_ptr                      external static pointer                  dcl 2-30
gtss_ext_$stack_level_                 external static fixed bin(17,0)          dcl 2-31
gtss_ext_$statistics                   external static structure                level 1 dcl 2-72
gtss_ext_$suspended_process            external static bit(1)                   unaligned dcl 2-32
gtss_ext_$user_id                      external static varying char(26)         dcl 2-34
gtss_ext_$work_area_ptr                external static pointer                  dcl 2-35
gtss_fault_processor_           000000 constant        entry                    external dcl 3-109
gtss_filact_error_status_       000000 constant        entry                    external dcl 3-112
gtss_filact_funct02_            000000 constant        entry                    external dcl 3-113
gtss_filact_funct03_            000000 constant        entry                    external dcl 3-114
gtss_filact_funct04_            000000 constant        entry                    external dcl 3-115
gtss_filact_funct05_            000000 constant        entry                    external dcl 3-116
gtss_filact_funct08_            000000 constant        entry                    external dcl 3-117
gtss_filact_funct10_            000000 constant        entry                    external dcl 3-118
gtss_filact_funct11_            000000 constant        entry                    external dcl 3-119
gtss_filact_funct14_            000000 constant        entry                    external dcl 3-120
gtss_filact_funct18_            000000 constant        entry                    external dcl 3-121
gtss_filact_funct19_            000000 constant        entry                    external dcl 3-122
gtss_filact_funct21_            000000 constant        entry                    external dcl 3-123
gtss_filact_funct22_            000000 constant        entry                    external dcl 3-124
gtss_interp_prim_               000000 constant        entry                    external dcl 3-126
gtss_interp_prim_$callss        000000 constant        entry                    external dcl 3-127
gtss_interp_prim_$t_goto        000000 constant        entry                    external dcl 3-129
gtss_ios_change_size_           000000 constant        entry                    external dcl 3-130
gtss_ios_close_                 000000 constant        entry                    external dcl 3-131
gtss_ios_exchange_names_        000000 constant        entry                    external dcl 3-132
gtss_ios_initialize_            000000 constant        entry                    external dcl 3-133
gtss_ios_io_                    000000 constant        entry                    external dcl 3-134
gtss_ios_open_                  000000 constant        entry                    external dcl 3-135
gtss_ios_position_              000000 constant        entry                    external dcl 3-136
gtss_mcfc_$close                000000 constant        entry                    external dcl 3-139
gtss_mcfc_$delete               000000 constant        entry                    external dcl 3-137
gtss_mcfc_$open                 000000 constant        entry                    external dcl 3-138
gtss_mcfc_empty                 000000 constant        entry                    external dcl 3-106
gtss_mcfc_init_                 000000 constant        entry                    external dcl 3-125
gtss_read_starCFP_              000000 constant        entry                    external dcl 3-140
gtss_read_starCFP_$last_os      000000 constant        entry                    external dcl 3-141
gtss_run_subsystem_             000000 constant        entry                    external dcl 3-142
gtss_run_subsystem_$finish      000000 constant        entry                    external dcl 3-143
gtss_run_subsystem_$restor      000000 constant        entry                    external dcl 3-144
gtss_run_subsystem_$restor_perm 000000 constant        entry                    external dcl 3-145
gtss_set_slave_                 000000 constant        entry                    external dcl 3-146
gtss_set_slave_$load_bar        000000 constant        entry                    external dcl 3-147
gtss_update_safe_store_         000000 constant        entry                    external dcl 3-148
gtss_verify_access_             000000 constant        entry                    external dcl 3-149
gtss_verify_access_$check_forced_access
                                000000 constant        entry                    external dcl 3-150
gtss_write_starCFP_             000000 constant        entry                    external dcl 3-151
i                                      automatic       fixed bin(18,0)          unsigned dcl 532
old_min                                automatic       picture(3)               unaligned dcl 542
spare_indx                             automatic       fixed bin(24,0)          dcl 553

NAMES DECLARED BY EXPLICIT CONTEXT.
abs_equiv                       001475 constant        entry                    external dcl 115
cancel_abs_req                  004273 constant        entry                    internal dcl 381 ref 572
check_date_time                 004521 constant        entry                    internal dcl 406 ref 301
cpu_runout                      001665 constant        entry                    external dcl 155
create_absin                    001357 constant        entry                    external dcl 104
dabt_check                      002003 constant        entry                    external dcl 173
enter_abs_req                   003064 constant        entry                    internal dcl 296 ref 572
find_id                         002625 constant        entry                    internal dcl 246 ref 233
get_abs_id                      002243 constant        entry                    internal dcl 210 ref 65
get_drm                         000765 constant        entry                    external dcl 69
get_id                          000654 constant        entry                    external dcl 51
gtss_abs_                       000574 constant        entry                    external dcl 9
no_action                       003055 constant        entry                    internal dcl 290 ref 572 572 572 572 572 572
valid_id                        002724 constant        entry                    internal dcl 269 ref 63

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 144 144 216 216 218 218 220 220 256 258 336 336
                                                                                  336 336 376 376 402 402 419 419 419 419 427 427
                                                                                  429 429 431 431 459 482 482
addrel                                                 builtin function         ref 216 216 218 218 220 220 376 376 402 402 427 427
                                                                                  429 429 431 431 459 482 482
before                                                 builtin function         ref 452
convert                                                builtin function         ref 461 462
divide                                                 builtin function         ref 341 341 343 343 347 348
index                                                  builtin function         ref 248 444 451 453
length                                                 builtin function         ref 216 216 218 218 220 220 376 376 402 402 427 427
                                                                                  429 429 431 431 457 482 482
ltrim                                                  builtin function         ref 458
null                                                   builtin function         ref 138 318 318 318 358 394 412 412 412 500 514 516
                                                                                  519 549 552
rtrim                                                  builtin function         ref 85 91 91 313 314 368 401 401
substr                                                 builtin function         ref 337 337 337 420 420 420 451 457 461 462
valid                                                  builtin function         ref 460

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      6526        6652    6007        6536
Length      7274    6007       124         405     517           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gtss_abs_                          2780 external procedure  is an external procedure.  
get_abs_id                              internal procedure  shares stack frame of external procedure gtss_abs_.  
find_id                                 internal procedure  shares stack frame of external procedure gtss_abs_.  
valid_id                                internal procedure  shares stack frame of external procedure gtss_abs_.  
no_action                            64 internal procedure  is assigned to an entry variable.  
enter_abs_req                       412 internal procedure  is assigned to an entry variable.  
cancel_abs_req                      106 internal procedure  is assigned to an entry variable.  
check_date_time                         internal procedure  shares stack frame of internal procedure enter_abs_req.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gtss_abs_                000100 dir_map_rule                gtss_abs_
                         000101 absentee_id                 gtss_abs_
                         000106 absin_file_name             gtss_abs_
                         000112 aid_ptr                     gtss_abs_
                         000114 backup_indx                 gtss_abs_
                         000116 btp                         gtss_abs_
                         000120 bit_count                   gtss_abs_
                         000121 caller                      gtss_abs_
                         000132 cat_entry                   gtss_abs_
                         000133 chars                       gtss_abs_
                         000234 cmd_line                    gtss_abs_
                         000365 code                        gtss_abs_
                         000366 dc_ptr                      gtss_abs_
                         000370 dib_ptr                     gtss_abs_
                         000372 did_pos                     gtss_abs_
                         000374 djid                        gtss_abs_
                         000376 dqh_ptr                     gtss_abs_
                         000400 eii                         gtss_abs_
                         000401 error                       gtss_abs_
                         000402 ev_occured                  gtss_abs_
                         000404 gcos_time                   gtss_abs_
                         000414 home_dir                    gtss_abs_
                         000434 hours                       gtss_abs_
                         000435 hrs                         gtss_abs_
                         000436 milsec                      gtss_abs_
                         000437 mins                        gtss_abs_
                         000440 minutes                     gtss_abs_
                         000441 no_of_entries               gtss_abs_
                         000442 no_of_entries_found         gtss_abs_
                         000443 path                        gtss_abs_
                         000450 proc_dir                    gtss_abs_
                         000522 requested_date              gtss_abs_
                         000524 requested_time              gtss_abs_
                         000526 reschedule                  gtss_abs_
                         000530 rid_ptr                     gtss_abs_
                         000532 sec                         gtss_abs_
                         000534 seconds                     gtss_abs_
                         000536 seg_ptr                     gtss_abs_
                         000540 table_length                gtss_abs_
                         000542 time                        gtss_abs_
                         000544 CR                          gtss_abs_
                         000546 job_action                  gtss_abs_
                         000606 entries_info                gtss_abs_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_cs            cat_realloc_cs      call_var            call_ext_out_desc   call_ext_out        return
signal              shorten_stack       ext_entry           ext_entry_desc      int_entry           trunc_fx2
set_cs_eis          index_cs_eis        return_chars_eis    any_to_any_tr       unpack_pic          divide_fx1
divide_fx3

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      com_err_$suppress_name        convert_ipc_code_             cu_$cp
delete_$ptr                   get_pdir_                     get_wdir_                     gtss_abort_subsystem_
gtss_abs_$cpu_runout          gtss_abs_$dabt_check          gtss_abs_$get_drm             gtss_bcd_ascii_
gtss_dq_$catp                 gtss_dq_$dibp                 gtss_dq_$entries_info         gtss_dq_$hdrp
gtss_fault_processor_$timer_runout                          gtss_find_cond_frame_         gtss_interp_prim_$sysret
hcs_$initiate_count           hcs_$terminate_noname         ioa_                          ipc_$read_ev_chn
pl1_valid_picture_            timer_manager_$cpu_call       timer_manager_$reset_cpu_call unique_chars_
user_info_$homedir

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
gse_ext_$drm_rule             gse_ext_$smc_pathname         gse_ext_$umc_name             gtss_ext_$com_reg
gtss_ext_$db                  gtss_ext_$event_channel       gtss_ext_$flags               gtss_ext_$homedir
gtss_ext_$restart_seg_ptr     gtss_ust_ext_$ust




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
    497 000472       500 000477       514 000501       516 000502       519 000503       522 000504       549 000505
    550 000506       552 000507       562 000510       572 000512         9 000573        46 000604        48 000636
     51 000650        60 000664        61 000671        62 000672        63 000700        65 000733        66 000734
     69 000762        77 000774        78 001001        79 001004        80 001005        82 001031        85 001057
     88 001135        91 001165        96 001277        99 001327       104 001355       109 001366       115 001474
    137 001505       138 001514       143 001567       144 001576       145 001613       148 001627       149 001635
    150 001645       153 001647       155 001661       159 001675       160 001701       161 001713       165 001716
    166 001720       170 001751       171 001767       173 002001       178 002013       180 002030       181 002032
    182 002041       184 002065       186 002070       187 002072       188 002115       192 002127       193 002142
    194 002155       195 002160       198 002162       199 002164       205 002215       206 002221       207 002225
    208 002231       210 002243       213 002244       214 002253       215 002300       216 002314       217 002337
    218 002344       219 002366       220 002372       223 002414       225 002457       226 002461       229 002515
    233 002517       234 002520       235 002526       238 002532       239 002566       240 002570       267 002624
    246 002625       248 002626       249 002642       250 002643       251 002645       254 002646       255 002650
    256 002655       257 002661       258 002665       259 002670       261 002671       263 002674       265 002721
    266 002723       269 002724       271 002726       277 003004       279 003035       282 003043       283 003047
    290 003054       292 003062       296 003063       300 003071       301 003101       302 003102       304 003105
    312 003112       313 003123       314 003177       315 003301       317 003314       318 003327       326 003375
    327 003404       328 003412       330 003424       331 003434       332 003467       335 003470       336 003471
    337 003512       338 003537       341 003572       343 003612       345 003627       347 003631       348 003643
    349 003700       350 003702       351 003704       352 003710       353 003753       354 003755       357 003764
    358 003777       359 004004       361 004037       363 004040       367 004057       368 004071       369 004125
    371 004134       372 004166       373 004176       374 004205       375 004223       376 004245       379 004271
    381 004272       390 004300       391 004311       394 004362       395 004367       396 004400       399 004401
    401 004430       402 004473       404 004520       406 004521       408 004522       409 004524       410 004531
    411 004536       412 004552       419 004620       420 004643       424 004670       425 004677       426 004725
    427 004741       428 004764       429 005005       430 005030       431 005035       434 005057       436 005123
    437 005126       440 005162       444 005165       445 005203       447 005236       451 005237       452 005254
    453 005266       456 005306       457 005316       458 005327       459 005351       460 005355       461 005373
    462 005412       463 005432       464 005467       465 005506       469 005521       471 005522       473 005554
    475 005555       476 005556       479 005557       480 005562       481 005610       482 005633       486 005657
    487 005714       488 005717       492 005753


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
