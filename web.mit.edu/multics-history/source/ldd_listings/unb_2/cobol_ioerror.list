	COMPILATION LISTING OF SEGMENT cobol_ioerror
	Compiled by: Multics PL/I Compiler, Release 31b, of April 24, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 05/24/89  0948.2 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
       17*     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
       18*     MCR8060 cobol_ioerror.pl1 Reformatted code to new Cobol standard.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 /* Modified on 01/31/77 by Bob Chang to implement profile option.	*/
       23 /* Modified since Version 2.0.	*/
       24 /* format: style3 */
       25 cobol_ioerror:
       26      proc (ft_ptr, cobol_code, mcode_off, ioerror_ptr);
       27 
       28 dcl	ft_ptr		ptr;			/* ptr to the file table */
       29 dcl	cobol_code	fixed bin;		/* cobol error code */
       30 dcl	mcode_off		fixed bin;		/* wd offset in stack of multics status code or 0 if none */
       31 dcl	ioerror_ptr	ptr;			/* ptr to additional error information */
       32 
       33 /* fixup directive for link, used when profile options is specified.	*/
       34 dcl	1 fixup_directive	aligned static,
       35 	  2 operation	bit (1) unal init ("0"b),
       36 	  2 type		bit (4) unal init ("1111"b),
       37 	  2 reserved	bit (9) unal init ("000000000"b),
       38 	  2 location	unal,
       39 	    3 half	bit (1) unal init ("0"b),
       40 	    3 base	bit (3) unal init ("001"b),
       41 	    3 offset	fixed bin unal,
       42 	  2 tag_number	fixed bin aligned;
       43 dcl	1 ioerror		based (ioerror_ptr),
       44 	  2 lineno	fixed bin,
       45 	  2 restartad	fixed bin,
       46 	  2 forward_tag	fixed bin,
       47 	  2 no_error_tag	fixed bin,
       48 	  2 no_error_ptr	ptr,
       49 	  2 unopen	fixed bin,
       50 	  2 special_tag	fixed bin,
       51 	  2 special_ptr	ptr,
       52 	  2 error_ptr	ptr;
       53 dcl	1 s		based,
       54 	  2 n		fixed bin,
       55 	  2 link		(0 refer (s.n)),
       56 	    3 name	char (32),
       57 	    3 status2	char (4) aligned,
       58 	    3 status1	char (2);
       59 
       60 dcl	1 mpout		static,
       61 	  2 n		fixed bin init (0),
       62 	  2 pt1		ptr,
       63 	  2 pt2		ptr,
       64 	  2 pt3		ptr,
       65 	  2 pt4		ptr;
       66 dcl	file_key_desc	char (40) based;
       67 dcl	1 fkey_type9	static,
       68 	  2 header	(4) fixed bin init (112, 0, 0, 9),
       69 	  2 repl_ptr	(2) ptr init ((2) null ()),
       70 	  2 fill1		bit (108) init (""b),
       71 	  2 file_key_info,
       72 	    3 fb		(6) fixed bin init (0, 0, 0, 0, 0, 0),
       73 	    3 flags1	bit (36) init (""b),
       74 	    3 flags2	bit (36) init (""b),
       75 	    3 seg		fixed bin,
       76 	    3 off		fixed bin,
       77 	  2 fill2		(7) fixed bin init (0, 0, 0, 0, 0, 0, 0);
       78 dcl	1 type1		static,
       79 	  2 size		fixed bin init (28),
       80 	  2 line		fixed bin,		/* line number */
       81 	  2 column	fixed bin init (0),
       82 	  2 type		fixed bin init (1),
       83 	  2 key		fixed bin init (0),		/* verb number */
       84 	  2 bits		bit (36) init ("1"b),
       85 	  2 jump_index	fixed bin init (0);
       86 dcl	1 type19		static,
       87 	  2 size		fixed bin init (38),
       88 	  2 line		fixed bin init (0),
       89 	  2 column	fixed bin init (0),
       90 	  2 type		fixed bin init (19),
       91 	  2 verb		fixed bin init (0),		/* verb number */
       92 	  2 e		fixed bin init (1),		/* for both perform and move */
       93 	  2 h		fixed bin init (0),
       94 	  2 i		fixed bin init (0),
       95 	  2 j		fixed bin init (0),
       96 	  2 a		bit (3) init (""b),
       97 	  2 b		bit (1) init (""b),
       98 	  2 c		bit (1) init (""b),
       99 	  2 d		bit (2) init (""b),
      100 	  2 f		bit (2) init (""b),
      101 	  2 g		bit (2) init (""b),
      102 	  2 k		bit (5) init (""b);
      103 dcl	1 type3		static,
      104 	  2 size		fixed bin init (28),
      105 	  2 line		fixed bin init (0),
      106 	  2 column	fixed bin init (0),
      107 	  2 type		fixed bin init (3),
      108 	  2 lit_type	bit (1) init ("0"b),	/* character string */
      109 	  2 all_lit	bit (1) init ("0"b),	/* not ALL lit */
      110 	  2 lit_size	fixed bin init (4),
      111 	  2 string	char (4) init ("");
      112 dcl	1 type7		static,
      113 	  2 size		fixed bin init (52),
      114 	  2 line		fixed bin init (0),
      115 	  2 column	fixed bin init (0),
      116 	  2 type		fixed bin init (7),
      117 	  2 string_ptr	ptr init (null ()),
      118 	  2 prev_rec	ptr init (null ()),
      119 	  2 bits1		bit (4) init (""b),
      120 	  2 section_name	bit (1) init ("1"b),
      121 	  2 declarative_proc
      122 			bit (1) init ("1"b),
      123 	  2 bits2		bit (3) init (""b),
      124 	  2 priority	char (2) init ("00"),
      125 	  2 bits3		bit (9) init (""b),
      126 	  2 section_num	fixed bin init (0),
      127 	  2 proc_num	fixed bin init (0),
      128 	  2 def_line	fixed bin init (0),
      129 	  2 name_size	fixed bin init (0);
      130 
      131 dcl	1 default_error_status
      132 			static,
      133 	  2 n		fixed bin init (1),
      134 	  2 link,
      135 	    3 name	char (32) init (""),
      136 	    3 status2	char (4) init ("0030"),
      137 	    3 status1	char (2) init ("30");
      138 dcl	1 no_error_status	static,
      139 	  2 n		fixed bin init (1),
      140 	  2 link,
      141 	    3 name	char (32) init (""),
      142 	    3 status2	char (4) init ("0000"),
      143 	    3 status1	char (2) init ("00");
      144 dcl	tra_instr		bit (36) static init ("000000000000000000111001000000000100"b);
      145 dcl	tze_instr		bit (36) static init ("000000000000000000110000000000000100"b);
      146 dcl	tnz_instr		bit (36) static init ("000000000000000000110000001000000100"b);
      147 dcl	cmpa_dl_instr	bit (36) static init ("000000000000000000001001101000000111"b);
      148 dcl	cmpa_ind_instr	bit (36) static init ("100000000000000000001001101001010000"b);
      149 dcl	lda_instr		bit (36) static init ("110000000000000000010011101001000000"b);
      150 dcl	lda_mode		(2) bit (36) static
      151 			init ("001000000000000010010011101001000000"b, "000000000000110000011111101000000111"b);
      152 
      153 dcl	link_reloc	(2) bit (5) aligned static init ("10100"b, "00000"b);
      154 
      155 dcl	preset_sw		bit (1);			/* used to comm between set_status and preset entry. */
      156 dcl	restart_ic	fixed bin;
      157 dcl	perform_ic	fixed bin;
      158 dcl	tag		fixed bin;
      159 dcl	next_instr_tag	fixed bin;
      160 dcl	ntag		fixed bin;
      161 dcl	pntag		fixed bin;
      162 dcl	temp		fixed bin;
      163 dcl	i		fixed bin;
      164 dcl	mode_count	fixed bin;
      165 dcl	off		fixed bin;
      166 dcl	line_no		fixed bin;
      167 
      168 dcl	fkey_ptr		ptr;
      169 
      170 dcl	lda_sw		bit (1);
      171 dcl	fsbptr_sw		bit (1);
      172 dcl	perform_mode_sw	bit (1);
      173 dcl	io_sw		bit (1);
      174 dcl	s1set		bit (1);
      175 dcl	s2set		bit (2);
      176 dcl	s1default		char (2);
      177 dcl	s1		char (2);
      178 
      179 dcl	cobol_emit	entry (ptr, ptr, fixed bin);
      180 dcl	cobol_read_rand	entry (fixed bin, char (5), ptr);
      181 dcl	cobol_make_tagref	entry (fixed bin, fixed bin, ptr);
      182 dcl	cobol_make_link$type_4
      183 			entry (fixed bin, char (*));
      184 dcl	cobol_make_fixup	entry (ptr);
      185 dcl	cobol_define_tag	entry (fixed bin);		/* sub-generators */
      186 dcl	cobol_process_error entry (fixed bin, fixed bin, fixed bin);
      187 dcl	cobol_process_error$use
      188 			entry (fixed bin, fixed bin, fixed bin);
      189 dcl	cobol_perform_gen	entry (ptr);
      190 dcl	cobol_move_gen	entry (ptr);
      191 dcl	cobol_set_fsbptr	entry (ptr);
      192 
      193 
      194 /*************************************/
      195 start:
      196 	preset_sw = "0"b;				/* set to zero unless preset entry is used. */
      197 	s1default = "**";
      198 	s1set, s2set = "0"b;
      199 	line_no = ioerror.lineno;
      200 	perform_ic = 0;
      201 	next_instr_tag = cobol_$next_tag;
      202 	cobol_$next_tag = cobol_$next_tag + 1;
      203 
      204 	if mcode_off = 0
      205 	then do;					/* an error exists - no checking necessary */
      206 		if ioerror.special_ptr ^= null ()
      207 		then do;				/* info assumed at ioerror.special_ptr->s.link(1) */
      208 			call set_status (ioerror.special_ptr, 1);
      209 			if ioerror.special_tag ^= 0
      210 			then do;			/* in-line errror coding specified */
      211 				call cobol_emit (addr (tra_instr), null (), 1);
      212 				call cobol_make_tagref (ioerror.special_tag, cobol_$text_wd_off - 1, null ());
      213 			     end;
      214 			else call produce_error;
      215 		     end;
      216 		else if ioerror.error_ptr ^= null ()
      217 		then do;				/* info assumed at ioerror.error_ptr->s.link(1) */
      218 			call set_status (ioerror.error_ptr, 1);
      219 			call produce_error;
      220 		     end;
      221 		else do;
      222 			call set_status (addr (default_error_status), 1);
      223 			call produce_error;
      224 		     end;
      225 	     end;
      226 
      227 	else do;					/* must do error checking */
      228 		if ioerror.unopen = 2
      229 		then call set_status (addr (no_error_status), 1);
      230 						/* a misnomer , means set 0 */
      231 		substr (lda_instr, 4, 15) = substr (unspec (mcode_off), 22, 15);
      232 		call cobol_emit (addr (lda_instr), null (), 1);
      233 		if ioerror.no_error_tag ^= 0
      234 		then tag = ioerror.no_error_tag;
      235 		else tag = next_instr_tag;
      236 		if ioerror.no_error_ptr = null ()
      237 		then do;				/* only 0 signifies non-error code */
      238 			call cobol_emit (addr (tze_instr), null (), 1);
      239 			call cobol_make_tagref (tag, cobol_$text_wd_off - 1, null ());
      240 		     end;
      241 		else do i = 1 to ioerror.no_error_ptr -> s.n;
      242 			if ioerror.no_error_ptr -> s.link.name (i) = ""
      243 			then do;			/* indicates zero code */
      244 				substr (cmpa_dl_instr, 1, 18) = ""b;
      245 				call cobol_emit (addr (cmpa_dl_instr), null (), 1);
      246 			     end;
      247 			else do;			/* must compare code to error_table_ value */
      248 				call cobol_make_link$type_4 (off,
      249 				     "error_table_$" || ioerror.no_error_ptr -> s.link.name (i));
      250 				if fixed_common.options.profile
      251 				then do;
      252 					fixup_directive.location.offset = cobol_$text_wd_off;
      253 					call cobol_make_fixup (addr (fixup_directive));
      254 				     end;
      255 				substr (cmpa_ind_instr, 4, 15) = substr (unspec (off), 22, 15);
      256 				call cobol_emit (addr (cmpa_ind_instr), addr (link_reloc (1)), 1);
      257 			     end;
      258 			s1set = ^file_table.file_status | ioerror.no_error_ptr -> s.link.status1 (i) = "00";
      259 			s2set = ^file_table.extra_status | ioerror.no_error_ptr -> s.link.status2 (i) = "0000";
      260 			if s1set & s2set
      261 			then do;			/* status already set, so transfer out */
      262 				call cobol_emit (addr (tze_instr), null (), 1);
      263 				call cobol_make_tagref (tag, cobol_$text_wd_off - 1, null ());
      264 			     end;
      265 			else do;
      266 				ntag = cobol_$next_tag;
      267 				cobol_$next_tag = cobol_$next_tag + 1;
      268 				call cobol_emit (addr (tnz_instr), null (), 1);
      269 				call cobol_make_tagref (ntag, cobol_$text_wd_off - 1, null ());
      270 				call set_status (ioerror.no_error_ptr, i);
      271 				call cobol_emit (addr (tra_instr), null (), 1);
      272 				call cobol_make_tagref (tag, cobol_$text_wd_off - 1, null ());
      273 				call cobol_define_tag (ntag);
      274 			     end;
      275 		     end;
      276 		s1set, s2set = "0"b;
      277 		if file_table.file_status | ioerror.special_tag ^= 0
      278 		then do;
      279 			s2set = "1"b;		/* not really, just don't bother setting it now */
      280 			call set_status (addr (default_error_status), 1);
      281 			s2set = "0"b;
      282 			s1default = default_error_status.link.status1;
      283 			if ioerror.special_ptr ^= null ()
      284 			then do i = 1 to ioerror.special_ptr -> s.n;
      285 				ntag = cobol_$next_tag;
      286 				cobol_$next_tag = cobol_$next_tag + 1;
      287 				if ioerror.special_ptr -> s.link.name (i) = ""
      288 				then do;
      289 					substr (cmpa_dl_instr, 1, 18) = ""b;
      290 					call cobol_emit (addr (cmpa_dl_instr), null (), 1);
      291 				     end;
      292 				else do;
      293 					call cobol_make_link$type_4 (off,
      294 					     "error_table_$" || ioerror.special_ptr -> s.link.name (i));
      295 					if fixed_common.options.profile
      296 					then do;
      297 						fixup_directive.location.offset = cobol_$text_wd_off;
      298 						call cobol_make_fixup (addr (fixup_directive));
      299 					     end;
      300 					substr (cmpa_ind_instr, 4, 15) = substr (unspec (off), 22, 15);
      301 					call cobol_emit (addr (cmpa_ind_instr), addr (link_reloc (1)), 1);
      302 				     end;
      303 				call cobol_emit (addr (tnz_instr), null (), 1);
      304 				call cobol_make_tagref (ntag, cobol_$text_wd_off - 1, null ());
      305 				call set_status (ioerror.special_ptr, i);
      306 				if ioerror.special_tag ^= 0
      307 				then do;
      308 					call cobol_emit (addr (tra_instr), null (), 1);
      309 					call cobol_make_tagref (special_tag, cobol_$text_wd_off - 1, null ());
      310 				     end;
      311 				else call produce_error;
      312 				call cobol_define_tag (ntag);
      313 			     end;
      314 			if file_table.extra_status
      315 			then do;
      316 				if ioerror.error_ptr ^= null ()
      317 				then do i = 1 to ioerror.error_ptr -> s.n;
      318 					ntag = cobol_$next_tag;
      319 					cobol_$next_tag = cobol_$next_tag + 1;
      320 					if ioerror.error_ptr -> s.link.name (i) ^= ""
      321 					then do;	/* otherwise the default */
      322 						call cobol_make_link$type_4 (off,
      323 						     "error_table_$" || ioerror.error_ptr -> s.link.name (i));
      324 						substr (cmpa_ind_instr, 4, 15) =
      325 						     substr (unspec (off), 22, 15);
      326 						if fixed_common.options.profile
      327 						then do;
      328 							fixup_directive.location.offset =
      329 							     cobol_$text_wd_off;
      330 							call cobol_make_fixup (addr (fixup_directive));
      331 						     end;
      332 						call cobol_emit (addr (cmpa_ind_instr), addr (link_reloc (1)),
      333 						     1);
      334 						call cobol_emit (addr (tnz_instr), null (), 1);
      335 						call cobol_make_tagref (ntag, cobol_$text_wd_off - 1, null ())
      336 						     ;
      337 					     end;
      338 					call set_status (ioerror.error_ptr, i);
      339 					call produce_error;
      340 					call cobol_define_tag (ntag);
      341 				     end;
      342 				else do;		/* shouldn't be necessary */
      343 					call set_status (addr (default_error_status), 1);
      344 					call produce_error;
      345 				     end;
      346 			     end;
      347 			else if ioerror.special_ptr = null () | ioerror.special_tag ^= 0
      348 			then do;
      349 				call set_status (addr (default_error_status), 1);
      350 				call produce_error; /* will have been done id special_ptr ^= null */
      351 			     end;
      352 		     end;
      353 		else call produce_error;
      354 	     end;
      355 
      356 	call cobol_define_tag (next_instr_tag);
      357 	return;
      358 
      359 
      360 /*************************************/
      361 /* SUBROUTINES */
      362 /*************************************/
      363 
      364 produce_error:
      365      proc;
      366 	if perform_ic ^= 0
      367 	then do;
      368 		temp = perform_ic - cobol_$text_wd_off;
      369 		substr (tra_instr, 1, 18) = substr (unspec (temp), 19, 18);
      370 		call cobol_emit (addr (tra_instr), null (), 1);
      371 	     end;
      372 	else do;
      373 		perform_ic = cobol_$text_wd_off;
      374 		if file_table.error_exit ^= 0
      375 		then call perform_use (file_table.error_exit);
      376 						/* specific use proc */
      377 		else do;
      378 			mode_count = 0;
      379 			if ^file_table.external
      380 			then do;			/* can skip check for int file opened in only 1 mode */
      381 				if file_table.open_ext
      382 				then mode_count = mode_count + 1;
      383 				if file_table.open_in
      384 				then mode_count = mode_count + 1;
      385 				if file_table.open_out
      386 				then mode_count = mode_count + 1;
      387 				if file_table.open_io
      388 				then mode_count = mode_count + 1;
      389 			     end;
      390 			lda_sw, fsbptr_sw, perform_mode_sw, io_sw = "0"b;
      391 			if fixed_common.extend_error_exit ^= 0 & ioerror.unopen ^= 1
      392 			then if (^file_table.external & file_table.open_ext)
      393 				| (file_table.external & file_table.organization = 1
      394 				& (file_table.write | file_table.close | file_table.open_ext))
      395 			     then call perform_mode (fixed_common.extend_error_exit, 0);
      396 			if fixed_common.input_error_exit ^= 0 & ioerror.unopen ^= 1
      397 			then if (^file_table.external & file_table.open_in)
      398 				| (file_table.external
      399 				& (file_table.read | file_table.start | file_table.close | file_table.open_in))
      400 			     then call perform_mode (fixed_common.input_error_exit, 16);
      401 			if fixed_common.output_error_exit ^= 0 & ioerror.unopen ^= 1
      402 			then if (^file_table.external & file_table.open_out)
      403 				| (file_table.external
      404 				& (file_table.write | file_table.close | file_table.open_out))
      405 			     then call perform_mode (fixed_common.output_error_exit, 48);
      406 			if fixed_common.i_o_error_exit ^= 0 & ioerror.unopen ^= 1
      407 			then if (^file_table.external & file_table.open_io)
      408 				| (file_table.external
      409 				& (file_table.read | file_table.rewrite | file_table.start | file_table.delete
      410 				| file_table.close | file_table.open_io))
      411 			     then do;
      412 				     io_sw = "1"b;
      413 				     call perform_mode (fixed_common.i_o_error_exit, 32);
      414 				end;
      415 
      416 			if (mode_count ^= 1 & mode_count ^= 4) | ^perform_mode_sw
      417 			then do;			/* must provide fall-thru */
      418 				if ioerror.restartad ^= 0
      419 				then restart_ic = ioerror.restartad;
      420 				else restart_ic = cobol_$text_wd_off;
      421 				call cobol_process_error (cobol_code, line_no, mcode_off);
      422 				temp = restart_ic - cobol_$text_wd_off;
      423 				substr (tra_instr, 1, 18) = substr (unspec (temp), 19, 18);
      424 				call cobol_emit (addr (tra_instr), null (), 1);
      425 			     end;
      426 		     end;
      427 	     end;
      428 	return;
      429 
      430 perform_mode:
      431      proc (procno, mode);
      432 dcl	procno		fixed bin (17);
      433 dcl	mode		fixed bin;
      434 
      435 	perform_mode_sw = "1"b;			/* if not at least once, then must provide fall-thru */
      436 	if mode_count ^= 1
      437 	then do;
      438 		pntag = cobol_$next_tag;
      439 		cobol_$next_tag = cobol_$next_tag + 1;
      440 		if mcode_off ^= 0 & ^fsbptr_sw
      441 		then do;
      442 			call cobol_set_fsbptr (ft_ptr);
      443 			fsbptr_sw = "1"b;
      444 		     end;
      445 		if ^lda_sw
      446 		then do;
      447 			call cobol_emit (addr (lda_mode), null (), 2);
      448 			lda_sw = "1"b;
      449 		     end;
      450 		if ^(mode_count = 4 & io_sw)
      451 		then do;				/* no need to compare - can just fall in */
      452 			substr (cmpa_dl_instr, 1, 18) = substr (unspec (mode), 19, 18);
      453 			call cobol_emit (addr (cmpa_dl_instr), null (), 1);
      454 			call cobol_emit (addr (tnz_instr), null (), 1);
      455 			call cobol_make_tagref (pntag, cobol_$text_wd_off - 1, null ());
      456 		     end;
      457 	     end;
      458 	call perform_use (procno);
      459 	if mode_count ^= 1
      460 	then call cobol_define_tag (pntag);
      461 	return;
      462      end perform_mode;
      463 
      464 
      465 perform_use:
      466      proc (procno);
      467 dcl	procno		fixed bin;
      468 
      469 	call cobol_process_error$use (cobol_code, line_no, mcode_off);
      470 						/* record error message */
      471 	mpout.n = 4;
      472 	mpout.pt1 = addr (type1);
      473 	mpout.pt2, mpout.pt3 = addr (type7);
      474 	mpout.pt4 = addr (type19);
      475 	mpout.pt1 -> reserved_word.line = line_no;
      476 	mpout.pt2 -> proc_def.proc_num = procno;
      477 	mpout.pt3 -> end_stmt.verb = 20;		/* perform */
      478 	call cobol_perform_gen (addr (mpout));
      479 	call cobol_emit (addr (tra_instr), null (), 1);
      480 	if ioerror.forward_tag ^= 0
      481 	then tag = ioerror.forward_tag;
      482 	else tag = next_instr_tag;
      483 	call cobol_make_tagref (tag, cobol_$text_wd_off - 1, null ());
      484 	return;
      485      end perform_use;
      486 
      487      end produce_error;
      488 
      489 
      490 set_status:
      491      proc (type_ptr, eno);
      492 dcl	type_ptr		ptr;
      493 dcl	eno		fixed bin;
      494 
      495 	if ^file_table.file_status
      496 	then return;
      497 	call cobol_read_rand (1, file_table.file_status_info, fkey_ptr);
      498 	addr (fkey_type9.file_key_info) -> file_key_desc = file_key.desc;
      499 	mpout.n = 4;
      500 	mpout.pt1 = addr (type1);
      501 	mpout.pt2 = addr (type3);
      502 	mpout.pt3 = addr (fkey_type9);
      503 	mpout.pt4 = addr (type19);
      504 	mpout.pt1 -> reserved_word.line = line_no;
      505 	mpout.pt2 -> alphanum_lit.size = 26;
      506 	mpout.pt2 -> alphanum_lit.line = line_no;
      507 	mpout.pt2 -> alphanum_lit.lit_size = 2;
      508 	s1 = type_ptr -> s.link.status1 (eno);
      509 	substr (mpout.pt2 -> alphanum_lit.string, 1, 2) = s1;
      510 	mpout.pt4 -> end_stmt.verb = 18;		/* move */
      511 	if ^s1set & s1default ^= s1
      512 	then call cobol_move_gen (addr (mpout));
      513 	if ^file_table.extra_status | s2set
      514 	then goto end_set_status;
      515 	call cobol_read_rand (1, file_table.extra_status_info, fkey_ptr);
      516 	addr (fkey_type9.file_key_info) -> file_key_desc = file_key.desc;
      517 	mpout.pt2 -> alphanum_lit.size = 28;
      518 	mpout.pt2 -> alphanum_lit.lit_size = 4;
      519 	substr (mpout.pt2 -> alphanum_lit.string, 1, 4) = type_ptr -> s.link.status2 (eno);
      520 	call cobol_move_gen (addr (mpout));		/*set status entered by preset entry don't execute next two instr's. */
      521 end_set_status:
      522 	if ^preset_sw
      523 	then do;
      524 		substr (lda_instr, 4, 15) = substr (unspec (mcode_off), 22, 15);
      525 		call cobol_emit (addr (lda_instr), null (), 1);
      526 	     end;
      527 	return;
      528      end set_status;
      529 
      530 
      531 /*************************************/
      532 preset:
      533      entry (ft_ptr);
      534 
      535 	preset_sw = "1"b;				/* set to signal set_status to skip two instr's. */
      536 	s1set, s2set = "0"b;
      537 	s1default = "**";
      538 	line_no = 0;
      539 	call set_status (addr (no_error_status), 1);
      540 	return;
      541 
      542 
      543 /*************************************/
      544 
      545 /*****	Declaration for builtin function	*****/
      546 
      547 dcl	(substr, mod, binary, fixed, addr, addrel, rel, length, string, unspec, null, index)
      548 			builtin;
      549 
      550 /*****	End of declaration for builtin function	*****/
      551 
  1     1 
  1     2 /* BEGIN INCLUDE FILE ...   cobol_file_table.incl.pl1 */
  1     3 /*     <<<   INCLUDE FILE FOR FILE TABLE IN COMMON   >>>     */
  1     4 
  1     5 /* Modified on 09/30/80 by FCH, [4.4-1], density is 6250 is supported */
  1     6 /* Modified on 12/05/78 by RAL, [3.0-3], added dupl_alt from dummy102 */
  1     7 /* Modified on 11/21/78 by RAL, [3.0-2], added space for abs_record_offset from filler */
  1     8 /* Modified on 10/26/78 by RAL, [3.0-1], added space for file_desc_1 table offset from filler */
  1     9 /*     <<<   LAST MODIFIED ON 06-02-77 by GM         >>>	*/
  1    10 /*     <<<   LAST MODIFIED ON 05-31-77 by GM         >>>	*/
  1    11 /*     <<<   LAST MODIFIED  ON 06-30-76 by GM        >>>	*/
  1    12 /*     <<<   LAST MODIFIED ON 06-07-76 by GM    >>>     */
  1    13 /*     <<<   LAST MODIFIED ON 11-29-74 by orn   >>>     */
  1    14 
  1    15 /*
  1    16*A file table is created in variable common for each file selected in the
  1    17*environment division.  The fields of a given file table provide information
  1    18*about the specific file for which the file table is generated.  The
  1    19*addresses which may be contained in the various "info" fields of the file
  1    20*table are addresses in variable common.
  1    21**/
  1    22 
  1    23 /*   THE FILE TABLE STRUCTURE   */
  1    24 
  1    25 dcl	1 file_table based (ft_ptr),
  1    26 		2 next char (5),
  1    27 		2 ifn char (16),
  1    28 		2 attach_options_info char(5),	/*06/02/77*/
  1    29 		2 replacement_info char(5),		/*06/02/77*/
  1    30 		2 file_id_info char(5),		/*05/31/77*/
  1    31 		2 retention_info char(5),		/*05/31/77*/
  1    32 		2 filler0 char (3) ,			/* [3.0-1] */
  1    33 		2 file_desc_1_offset fixed bin (24),		/* [3.0-1] */
  1    34 		2 abs_record_offset fixed bin (24),		/* [3.-02] */
  1    35 		2 filler char(5),		/* this area is available.*/
  1    36 		2 padding_char char (1),
  1    37 		2 banner_char char (1),
  1    38 		2 file_status_info char (5),
  1    39 		2 extra_status_info char (5),
  1    40 		2 cat_id_info char (5),
  1    41 		2 r_key_info char (5),
  1    42 		2 alt_key_info char (5),
  1    43 		2 rec_do_info char (5),
  1    44 		2 label_info char (5),
  1    45 		2 data_info char (5),
  1    46 		2 report_info char (5),
  1    47 		2 linage_info char (5),
  1    48 		2 optional bit (1),						/*06/07/76*/
  1    49 		2 external bit (1),
  1    50 		2 file_status bit (1),
  1    51 		2 extra_status bit (1),
  1    52 		2 sysin bit (1),
  1    53 		2 sysout bit (1),
  1    54 		2 move_mode bit (1),
  1    55 		2 locate_mode bit (1),
  1    56 		2 fixed_recs bit (1),
  1    57 		2 variable_recs bit (1),
  1    58 		2 spanned_recs bit (1),				/*06/07/76*/
  1    59 		2 interchange bit (1),				/*06/07/76*/
  1    60 		2 relative_key bit (1),
  1    61 		2 record_key bit (1),
  1    62 		2 even_parity bit (1),
  1    63 		2 odd_parity bit (1),
  1    64 		2 padding bit (1),
  1    65 		2 banner bit (1),
  1    66 		2 random bit (1),
  1    67 		2 no_file_lockout bit (1),
  1    68 		2 no_write_check bit (1),
  1    69 		2 no_resident_index bit (1),
  1    70 		2 same_file bit (1),
  1    71 		2 sort_file bit (1),
  1    72 		2 rec_do bit (1),
  1    73 		2 linage bit (1),
  1    74 		2 code_set_clause bit (1),
  1    75 		/* history */
  1    76 		2 close bit (1),
  1    77 		2 delete bit (1),
  1    78 		2 open_in bit (1),
  1    79 		2 open_out bit (1),
  1    80 		2 open_io bit (1),
  1    81 		2 open_ext bit (1),
  1    82 		2 read bit (1),
  1    83 		2 release bit (1),
  1    84 		2 return_bit bit (1),
  1    85 		2 rewrite bit (1),
  1    86 		2 sort bit (1),
  1    87 		2 start bit (1),
  1    88 		2 use_error bit (1),
  1    89 		2 write bit (1),
  1    90 		2 read_next bit (1),
  1    91 		2 read_key bit (1),
  1    92 		2 accept bit (1),
  1    93 		2 display bit (1),
  1    94 		2 unequal_recs bit (1),
  1    95 		2 dummy_sysin bit (1),
  1    96 		2 dummy_sysout bit (1),
  1    97 		2 file_no fixed bin,
  1    98 		2 uca_offset fixed bin(24),
  1    99 		2 cra_seg fixed bin,
  1   100 		2 cra_offset fixed bin(24),
  1   101 		2 max_cra_size fixed bin(24),
  1   102 		2 catalogued fixed bin,
  1   103 		2 organization fixed bin,
  1   104 		2 org_qual fixed bin,
  1   105 		2 access fixed bin,
  1   106 		2 buffers fixed bin,
  1   107 		2 device fixed bin,
  1   108 		2 record_prefix fixed bin,				/*06/07/76*/
  1   109 		2 alternate_keys fixed bin,
  1   110 		2 record_format fixed bin,
  1   111 		2 label_format fixed bin,
  1   112 		2 key_location fixed bin,
  1   113 		2 key_size fixed bin,
  1   114 		2 temporary fixed bin,
  1   115 		2 address_format fixed bin,
  1   116 		2 same_area_clause fixed bin,
  1   117 		2 same_rec_clause fixed bin,
  1   118 		2 same_sort_clause fixed bin,
  1   119 		2 mult_clause_no fixed bin,
  1   120 		2 mult_position_no fixed bin,
  1   121 		2 block_desc fixed bin,
  1   122 		2 block_min fixed bin(24),
  1   123 		2 block_max fixed bin(24),
  1   124 		2 rec_min fixed bin(24),
  1   125 		2 rec_max fixed bin(24),
  1   126 		2 label_count fixed bin,
  1   127 		2 ifn_size fixed bin,
  1   128 		2 data_count fixed bin,
  1   129 		2 report_count fixed bin,
  1   130 		2 code_set fixed bin,
  1   131 		2 error_exit fixed bin,
  1   132 		2 prefix_size fixed bin,
  1   133 		2 blocked bit (1),
  1   134 		2 variable bit (1),
  1   135 		2 unbannered bit (1),
  1   136 		2 prefix_clause bit (1),
  1   137 		2 symbolic bit (1),
  1   138 		2 address_format_bit bit (1),
  1   139 		2 bsn bit(1),						/*06/07/76*/
  1   140 		2 process_area bit(1),					/*06/07/76*/
  1   141 		2 dupl_alt bit (1),			/* [3.0-3] */
  1   142 		2 dummy102 bit (23),
  1   143 		2 name_size fixed bin,
  1   144 		2 name char(32),
  1   145 		2 id char(32),
  1   146 		2 temp bit(1) ,
  1   147 		2 perm bit(1) ,
  1   148 		2 attach bit(1) ,
  1   149 		2 detach bit(1) ,
  1   150 		2 fsb ,		/* file state block */
  1   151 		     3 seg fixed bin(24), /* internal addr */
  1   152 		     3 off fixed bin(24),
  1   153 		2 tape,
  1   154 		     3 density bit(1) ,	/* 0-hi 1-lo */
  1   155 		     3 retain bit(1),	/* 0 not retained across attachment, 1 retained */
  1   156 		     3 force bit(1),	/* 0 check retention date, 1 no check */
  1   157 		     3 protect bit(1) ,	/* 0-no 1-yes */
  1   158 		     3 den_6250 bit(1),	/* 0-no 1-yes */		/*[4.4-1]*/
  1   159 		2 cat_nm char(200),
  1   160 		2 ao_len fixed bin(24),		/* attach options */
  1   161 		2 ao_string char(256),
  1   162 		2 output_mode fixed bin,	/*	0 not specified
  1   163*						1 generation
  1   164*						2 modification
  1   165*						3 replacement literal
  1   166*						4 replacement dataname	*/
  1   167 		2 om_len	fixed bin,		/* length of output mode */
  1   168 		2 om_string char(17),
  1   169 		2 tape_device fixed bin,	/*	0 not specified
  1   170*						1 integer
  1   171*						2 dataname	*/
  1   172 		2 tape_device_num fixed bin,
  1   173 		2 tape_device_key char(5),
  1   174 		2 add_cat_key char(5);
  1   175 
  1   176 
  1   177 /* END INCLUDE FILE ...   cobol_file_table.incl.pl1 */
  1   178 
      552 
  2     1 
  2     2 /* BEGIN INCLUDE FILE ... cobol_file_key.incl.pl1 */
  2     3 /* Last modified on 03/30/78 by FCH */
  2     4 
  2     5 /*
  2     6*A file key record is created in variable common for any one of several
  2     7*data items which may be associated with a file name.  The key_type field in
  2     8*the file key record identifies the type of item for which the record is
  2     9*created.  The name in a file key record is resolved by the replacement
  2    10*phase, and a section of the type 9 entry in the name table for the
  2    11*specified data item is stored in the file key record.  The stored
  2    12*description is subsequently used by the generator phase.
  2    13**/
  2    14 
  2    15 /*   THE FILE KEY RECORD STRUCTURE   */
  2    16 
  2    17 dcl 	1 file_key based (fkey_ptr),
  2    18 		2 next char(5),
  2    19 		2 next_alt char(5),
  2    20 		2 qual char(5),
  2    21 		2 info,
  2    22 		3 duplicates bit(1),
  2    23 		3 filler bit(7),
  2    24 		2 file_no fixed bin,
  2    25 		2 key_type fixed bin,
  2    26 		2 line fixed bin,
  2    27 		2 column fixed bin,
  2    28 		2 temp_seg fixed bin,
  2    29 		2 temp_offset fixed bin(24),
  2    30 		2 desc char(40),
  2    31 		2 name_size fixed bin,
  2    32 		2 name char(0 refer(file_key.name_size));
  2    33 
  2    34 /* END INCLUDE FILE ... cobol_file_key.incl.pl1 */
  2    35 
      553 
  3     1 
  3     2 /* BEGIN INCLUDE FILE ... cobol_type1.incl.pl1 */
  3     3 /* Last modified on 11/19/76 by ORN */
  3     4 
  3     5 /*
  3     6*A reserved word token is created in the minpral files for each occurrence
  3     7*of a reserved word in the source program.  The value of the key field
  3     8*indicates the specific reserved word which a type 1 token represents.
  3     9**/
  3    10 
  3    11 dcl rw_ptr ptr;
  3    12 
  3    13 /* BEGIN DECLARATION OF TYPE1 (RESERVED WORD) TOKEN */
  3    14 dcl	1 reserved_word based (rw_ptr),
  4     1 
  4     2 /* begin include file ... cobol_TYPE1.incl.pl1 */
  4     3 /* Last modified on 11/17/76 by ORN */
  4     4 /* Last modified on 12/28/76 by FCH */
  4     5 /* Last modified on 12/16/80 by FCH */
  4     6 
  4     7 		/* header */
  4     8 		2 size fixed bin,
  4     9 		2 line fixed bin,
  4    10 		2 column fixed bin,
  4    11 		2 type fixed bin,
  4    12 		/* body */
  4    13 		2 key fixed bin,
  4    14 		/* procedure division class bits */
  4    15 		2 verb bit (1),
  4    16 		2 arith_op bit (1),
  4    17 		2 figcon bit (1),
  4    18 		2 terminator bit (1),
  4    19 		2 end_dec bit (1),
  4    20 		2 rel_op bit (1),
  4    21 		2 imper_verb bit (1),
  4    22 		2 end_cobol bit (1),
  4    23 		/* data division class bits */
  4    24 		2 section_header bit (1),
  4    25 		2 fs_ind bit (1),
  4    26 		2 fd_clause bit (1),
  4    27 		2 dd_clause bit (1),
  4    28 		2 cd_input bit (1),
  4    29 		2 cd_output bit (1),
  4    30 		2 cset_name bit (1),
  4    31 		2 ss_division bit (1),
  4    32 		2 repl_jump_ind bit (4),
  4    33 		2 ided_recovery bit (1),
  4    34 		2 report_writer bit (5),
  4    35 		2 ss_desc_entry bit (1),
  4    36 		2 jump_index fixed bin,
  4    37 		2 length fixed bin,
  4    38 		2 name char(0 refer(reserved_word.length));
  4    39 
  4    40 
  4    41 
  4    42 /* end include file ... cobol_TYPE1.incl.pl1 */
  4    43 
  3    15 
  3    16 /* END DECLARATION OF TYPE1 (RESERVED WORD) TOKEN */
  3    17 
  3    18 /* END INCLUDE FILE ... cobol_type1.incl.pl1 */
  3    19 
      554 
  5     1 
  5     2 /* BEGIN INCLUDE FILE ... cobol_type3.incl.pl1 */
  5     3 /* Last modified on 11/19/76 by ORN */
  5     4 
  5     5 /*
  5     6*A type 3 alphanumeric literal token is entered into the minpral file by the
  5     7*lexical analysis phase for each alphanumeric literal encountered in the
  5     8*source program.
  5     9**/
  5    10 
  5    11 dcl alit_ptr ptr;
  5    12 
  5    13 /* BEGIN DECLARATION OR TYPE3 (ALPHANUMERIC LITERAL) TOKEN */
  5    14 dcl 1 alphanum_lit based (alit_ptr),
  6     1 
  6     2 /* begin include file ... cobol_TYPE3.incl.pl1 */
  6     3 /* Last modified on 11/17/76 by ORN */
  6     4 /* Last modified on 12/28/76 by FCH */
  6     5 
  6     6 		/* header */
  6     7 		2 size fixed bin,
  6     8 		2 line fixed bin,
  6     9 		2 column fixed bin,
  6    10 		2 type fixed bin,
  6    11 		/* body */
  6    12 		2 lit_type bit (1),
  6    13 		2 all_lit bit (1),
  6    14 		2 filler1 bit (6),
  6    15 		2 lit_size fixed bin,
  6    16 		2 string char(0 refer(alphanum_lit.lit_size));	
  6    17 
  6    18 
  6    19 
  6    20 /* end include file ... cobol_TYPE3.incl.pl1 */
  6    21 
  5    15 
  5    16 /* END DECLARATION OF TYPE3 (ALPHANUMERIC LITERAL) TOKEN */
  5    17 
  5    18 /* END INCLUDE FILE ... cobol_type3.incl.pl1 */
  5    19 
      555 
  7     1 
  7     2 /* BEGIN INCLUDE FILE ... cobol_type7.incl.pl1 */
  7     3 /* Last modified on 11/19/76 by ORN */
  7     4 
  7     5 /*
  7     6*A type 7 procedure definition token is entered into the name table and into
  7     7*the procedure division minpral file by the lexical analysis phase for each
  7     8*procedure definition found in the source program.
  7     9**/
  7    10 
  7    11 dcl proc_def_ptr ptr;
  7    12 
  7    13 /* BEGIN DECLARATION OF TYPE7 (PROCEDURE DEFINITION) TOKEN */
  7    14 dcl  1 proc_def based (proc_def_ptr),
  8     1 
  8     2 /* begin include file ... cobol_TYPE7.incl.pl1 */
  8     3 /* Last modified on 11/17/76 by ORN */
  8     4 /* Last modified on 12/28/76 by FCH */
  8     5 
  8     6 		/* header */
  8     7 		2 size fixed bin,
  8     8 		2 line fixed bin,
  8     9 		2 column fixed bin,
  8    10 		2 type fixed bin,
  8    11 		/* body */
  8    12 		2 string_ptr ptr,
  8    13 		2 prev_rec ptr,
  8    14 		2 searched bit (1),
  8    15 		2 duplicate bit (1),
  8    16 		2 filler1 bit (1),
  8    17 		2 debug_ind bit (1),
  8    18 		2 section_name bit (1),
  8    19 		2 declarative_proc bit (1),
  8    20 		2 filler2 bit (1),
  8    21 		2 alterable bit (1),
  8    22 		2 priority char (2),
  8    23 		2 sort_range bit (1),
  8    24 		2 input_range bit (1),
  8    25 		2 output_range bit (1),
  8    26 		2 merge_range bit(1),
  8    27 		2 filler3 bit (5),
  8    28 		2 section_num fixed bin,
  8    29 		2 proc_num fixed bin,
  8    30 		2 def_line fixed bin,
  8    31 		2 name_size fixed bin,
  8    32 		2 name char(0 refer(proc_def.name_size));	
  8    33 
  8    34 
  8    35 
  8    36 /* end include file ... cobol_TYPE7.incl.pl1 */
  8    37 
  7    15 
  7    16 /* END DECLARATION OF TYPE7 (PROCEDURE DEFINITION) TOKEN */
  7    17 
  7    18 /* END INCLUDE FILE ... cobol_type7.incl.pl1 */
  7    19 
      556 
  9     1 
  9     2 /* BEGIN INCLUDE FILE ... cobol_type19.incl.pl1 */
  9     3 /* last modified on 11/19/76 by ORN */
  9     4 
  9     5 /*
  9     6*A type 19 end of statement token is created in the procedure division
  9     7*minpral file at the end of each minpral statement generated by the
  9     8*procedure division syntax phase.  A minpral statement may be a complete or
  9     9*partial source language statement.  A type 19 token contains information
  9    10*describing the statement which it delimits.
  9    11**/
  9    12 
  9    13 dcl eos_ptr ptr;
  9    14 
  9    15 /* BEGIN DECLARATION OF TYPE19 (END STATEMENT) TOKEN */
  9    16 dcl	1 end_stmt based (eos_ptr),
 10     1 
 10     2 /* begin include file ... cobol_TYPE19.incl.pl1 */
 10     3 /* Last modified on 11/17/76 by ORN */
 10     4 
 10     5 		/* header */
 10     6 		2 size fixed bin,
 10     7 		2 line fixed bin,
 10     8 		2 column fixed bin,
 10     9 		2 type fixed bin,
 10    10 		/* body */
 10    11 		2 verb fixed bin,
 10    12 		2 e fixed bin,
 10    13 		2 h fixed bin,
 10    14 		2 i fixed bin,
 10    15 		2 j fixed bin,
 10    16 		2 a bit (3),
 10    17 		2 b bit (1),
 10    18 		2 c bit (1),
 10    19 		2 d bit (2),
 10    20 		2 f bit (2),
 10    21 		2 g bit (2),
 10    22 		2 k bit (5),
 10    23 		2 always_an bit (1);
 10    24 
 10    25 /* end include file ... cobol_TYPE19.incl.pl1 */
 10    26 
  9    17 
  9    18 /* END DECLARATION OF TYPE19 (END STATEMENT) TOKEN */
  9    19 
  9    20 /*
  9    21*FIELD		CONTENTS
  9    22*
  9    23*size		The total size in bytes of this end of statement token.
  9    24*line		0
  9    25*column		0
  9    26*type		19
  9    27*verb		A value indicating the verb in this statement
  9    28*		 1 = accept
  9    29*		 2 = add
  9    30*		 3 = on size error
  9    31*		 4 = alter
  9    32*		 5 = call
  9    33*		 7 = cancel
  9    34*		 8 = close
  9    35*		 9 = divide
  9    36*		10 = multiply
  9    37*		11 = subtract
  9    38*		12 = exit
  9    39*		14 = go
  9    40*		15 = merge
  9    41*		16 = initiate
  9    42*		17 = inspect
  9    43*		18 = move
  9    44*		19 = open
  9    45*		20 = perform
  9    46*		21 = read
  9    47*		23 = receive
  9    48*		24 = release
  9    49*		25 = return
  9    50*		26 = search
  9    51*		27 = rewrite
  9    52*		29 = seek
  9    53*		30 = send
  9    54*		31 = set
  9    55*		33 = stop
  9    56*		34 = string
  9    57*		35 = suspend
  9    58*		36 = terminate
  9    59*		37 = unstring
  9    60*		38 = write
  9    61*		39 = use
  9    62*		40 = compute
  9    63*		41 = disable
  9    64*		42 = display
  9    65*		43 = enable
  9    66*		45 = generate
  9    67*		46 = hold
  9    68*		48 = process
  9    69*		49 = sort
  9    70*		52 = procedure
  9    71*		53 = declaratives
  9    72*		54 = section name
  9    73*		55 = paragraph name
  9    74*		98 = end
  9    75*e,h,i,j		The significance of these fields differs with each
  9    76*		statement.  These fields are normally used as counters.
  9    77*a,b,c,d,f,g,k	The significance of these fields differs with each
  9    78*		statement.  These fields are normally used as indicators.
  9    79**/
  9    80 
  9    81 /* END INCLUDE FILE ... cobol_type19.incl.pl1 */
  9    82 
      557 
 11     1 
 11     2 /* BEGIN INCLUDE FILE ... cobol_.incl.pl1 */
 11     3 /* last modified Feb 4, 1977 by ORN  */
 11     4 
 11     5 /* This file defines all external data used in the generator phase of Multics Cobol */
 11     6 
 11     7 /* POINTERS */
 11     8 dcl cobol_$text_base_ptr ptr  ext;
 11     9 dcl text_base_ptr ptr  defined (cobol_$text_base_ptr);
 11    10 dcl cobol_$con_end_ptr ptr  ext;
 11    11 dcl con_end_ptr ptr  defined (cobol_$con_end_ptr);
 11    12 dcl cobol_$def_base_ptr ptr  ext;
 11    13 dcl def_base_ptr ptr  defined (cobol_$def_base_ptr);
 11    14 dcl cobol_$link_base_ptr ptr  ext;
 11    15 dcl link_base_ptr ptr  defined (cobol_$link_base_ptr);
 11    16 dcl cobol_$sym_base_ptr ptr  ext;
 11    17 dcl sym_base_ptr ptr  defined (cobol_$sym_base_ptr);
 11    18 dcl cobol_$reloc_text_base_ptr ptr  ext;
 11    19 dcl reloc_text_base_ptr ptr  defined (cobol_$reloc_text_base_ptr);
 11    20 dcl cobol_$reloc_def_base_ptr ptr  ext;
 11    21 dcl reloc_def_base_ptr ptr  defined (cobol_$reloc_def_base_ptr);
 11    22 dcl cobol_$reloc_link_base_ptr ptr  ext;
 11    23 dcl reloc_link_base_ptr ptr  defined (cobol_$reloc_link_base_ptr);
 11    24 dcl cobol_$reloc_sym_base_ptr ptr  ext;
 11    25 dcl reloc_sym_base_ptr ptr  defined (cobol_$reloc_sym_base_ptr);
 11    26 dcl cobol_$reloc_work_base_ptr ptr  ext;
 11    27 dcl reloc_work_base_ptr ptr  defined (cobol_$reloc_work_base_ptr);
 11    28 dcl cobol_$pd_map_ptr ptr  ext;
 11    29 dcl pd_map_ptr ptr  defined (cobol_$pd_map_ptr);
 11    30 dcl cobol_$fixup_ptr ptr  ext;
 11    31 dcl fixup_ptr ptr  defined (cobol_$fixup_ptr);
 11    32 dcl cobol_$initval_base_ptr ptr  ext;
 11    33 dcl initval_base_ptr ptr  defined (cobol_$initval_base_ptr);
 11    34 dcl cobol_$initval_file_ptr ptr  ext;
 11    35 dcl initval_file_ptr ptr  defined (cobol_$initval_file_ptr);
 11    36 dcl cobol_$perform_list_ptr ptr  ext;
 11    37 dcl perform_list_ptr ptr  defined (cobol_$perform_list_ptr);
 11    38 dcl cobol_$alter_list_ptr ptr  ext;
 11    39 dcl alter_list_ptr ptr  defined (cobol_$alter_list_ptr);
 11    40 dcl cobol_$seg_init_list_ptr ptr  ext;
 11    41 dcl seg_init_list_ptr ptr  defined (cobol_$seg_init_list_ptr);
 11    42 dcl cobol_$temp_token_area_ptr ptr  ext;
 11    43 dcl temp_token_area_ptr ptr  defined (cobol_$temp_token_area_ptr);
 11    44 dcl cobol_$temp_token_ptr ptr  ext;
 11    45 dcl temp_token_ptr ptr  defined (cobol_$temp_token_ptr);
 11    46 dcl cobol_$token_block1_ptr ptr  ext;
 11    47 dcl token_block1_ptr ptr  defined (cobol_$token_block1_ptr);
 11    48 dcl cobol_$token_block2_ptr ptr  ext;
 11    49 dcl token_block2_ptr ptr  defined (cobol_$token_block2_ptr);
 11    50 dcl cobol_$minpral5_ptr ptr  ext;
 11    51 dcl minpral5_ptr ptr  defined (cobol_$minpral5_ptr);
 11    52 dcl cobol_$tag_table_ptr ptr  ext;
 11    53 dcl tag_table_ptr ptr  defined (cobol_$tag_table_ptr);
 11    54 dcl cobol_$map_data_ptr ptr  ext;
 11    55 dcl map_data_ptr ptr  defined (cobol_$map_data_ptr);
 11    56 dcl cobol_$ptr_status_ptr ptr  ext;
 11    57 dcl ptr_status_ptr ptr  defined (cobol_$ptr_status_ptr);
 11    58 dcl cobol_$reg_status_ptr ptr  ext;
 11    59 dcl reg_status_ptr ptr  defined (cobol_$reg_status_ptr);
 11    60 dcl cobol_$misc_base_ptr ptr ext;
 11    61 dcl misc_base_ptr ptr defined (cobol_$misc_base_ptr);
 11    62 dcl cobol_$misc_end_ptr ptr ext;
 11    63 dcl misc_end_ptr ptr defined (cobol_$misc_end_ptr);
 11    64 dcl cobol_$list_ptr ptr ext;
 11    65 dcl list_ptr ptr defined (cobol_$list_ptr);
 11    66 dcl cobol_$allo1_ptr ptr ext;
 11    67 dcl allo1_ptr ptr defined (cobol_$allo1_ptr);
 11    68 dcl cobol_$eln_ptr ptr ext;
 11    69 dcl eln_ptr ptr defined (cobol_$eln_ptr);
 11    70 dcl cobol_$diag_ptr ptr ext;
 11    71 dcl diag_ptr ptr defined (cobol_$diag_ptr);
 11    72 dcl cobol_$xref_token_ptr ptr ext;
 11    73 dcl xref_token_ptr ptr defined (cobol_$xref_token_ptr);
 11    74 dcl cobol_$xref_chain_ptr ptr ext;
 11    75 dcl xref_chain_ptr ptr defined (cobol_$xref_chain_ptr);
 11    76 dcl cobol_$statement_info_ptr ptr ext;
 11    77 dcl statement_info_ptr ptr defined (cobol_$statement_info_ptr);
 11    78 dcl cobol_$reswd_ptr ptr ext;
 11    79 dcl reswd_ptr ptr defined (cobol_$reswd_ptr);
 11    80 dcl cobol_$op_con_ptr ptr ext;
 11    81 dcl op_con_ptr ptr defined (cobol_$op_con_ptr);
 11    82 dcl cobol_$ntbuf_ptr ptr ext;
 11    83 dcl ntbuf_ptr ptr defined (cobol_$ntbuf_ptr);
 11    84 dcl cobol_$main_pcs_ptr ptr ext;
 11    85 dcl main_pcs_ptr ptr defined (cobol_$main_pcs_ptr);
 11    86 dcl cobol_$include_info_ptr ptr ext;
 11    87 dcl include_info_ptr ptr defined (cobol_$include_info_ptr);
 11    88 
 11    89 /* FIXED BIN */
 11    90 dcl cobol_$text_wd_off fixed bin  ext;
 11    91 dcl text_wd_off fixed bin  defined (cobol_$text_wd_off);
 11    92 dcl cobol_$con_wd_off fixed bin  ext;
 11    93 dcl con_wd_off fixed bin  defined (cobol_$con_wd_off);
 11    94 dcl cobol_$def_wd_off fixed bin  ext;
 11    95 dcl def_wd_off fixed bin  defined (cobol_$def_wd_off);
 11    96 dcl cobol_$def_max fixed bin  ext;
 11    97 dcl def_max fixed bin  defined (cobol_$def_max);
 11    98 dcl cobol_$link_wd_off fixed bin  ext;
 11    99 dcl link_wd_off fixed bin  defined (cobol_$link_wd_off);
 11   100 dcl cobol_$link_max fixed bin  ext;
 11   101 dcl link_max fixed bin  defined (cobol_$link_max);
 11   102 dcl cobol_$sym_wd_off fixed bin  ext;
 11   103 dcl sym_wd_off fixed bin  defined (cobol_$sym_wd_off);
 11   104 dcl cobol_$sym_max fixed bin  ext;
 11   105 dcl sym_max fixed bin  defined (cobol_$sym_max);
 11   106 dcl cobol_$reloc_text_max fixed bin(24)  ext;
 11   107 dcl reloc_text_max fixed bin(24)  defined (cobol_$reloc_text_max);
 11   108 dcl cobol_$reloc_def_max fixed bin(24)  ext;
 11   109 dcl reloc_def_max fixed bin(24)  defined (cobol_$reloc_def_max);
 11   110 dcl cobol_$reloc_link_max fixed bin(24)  ext;
 11   111 dcl reloc_link_max fixed bin(24)  defined (cobol_$reloc_link_max);
 11   112 dcl cobol_$reloc_sym_max fixed bin(24)  ext;
 11   113 dcl reloc_sym_max fixed bin(24)  defined (cobol_$reloc_sym_max);
 11   114 dcl cobol_$reloc_work_max fixed bin(24)  ext;
 11   115 dcl reloc_work_max fixed bin(24)  defined (cobol_$reloc_work_max);
 11   116 dcl cobol_$pd_map_index fixed bin  ext;
 11   117 dcl pd_map_index fixed bin  defined (cobol_$pd_map_index);
 11   118 dcl cobol_$cobol_data_wd_off fixed bin  ext;
 11   119 dcl cobol_data_wd_off fixed bin  defined (cobol_$cobol_data_wd_off);
 11   120 dcl cobol_$stack_off fixed bin  ext;
 11   121 dcl stack_off fixed bin  defined (cobol_$stack_off);
 11   122 dcl cobol_$max_stack_off fixed bin  ext;
 11   123 dcl max_stack_off fixed bin  defined (cobol_$max_stack_off);
 11   124 dcl cobol_$init_stack_off fixed bin  ext;
 11   125 dcl init_stack_off fixed bin  defined (cobol_$init_stack_off);
 11   126 dcl cobol_$pd_map_sw fixed bin  ext;
 11   127 dcl pd_map_sw fixed bin  defined (cobol_$pd_map_sw);
 11   128 dcl cobol_$next_tag fixed bin  ext;
 11   129 dcl next_tag fixed bin  defined (cobol_$next_tag);
 11   130 dcl cobol_$data_init_flag fixed bin  ext;
 11   131 dcl data_init_flag fixed bin  defined (cobol_$data_init_flag);
 11   132 dcl cobol_$seg_init_flag fixed bin  ext;
 11   133 dcl seg_init_flag fixed bin  defined (cobol_$seg_init_flag);
 11   134 dcl cobol_$alter_flag fixed bin  ext;
 11   135 dcl alter_flag fixed bin  defined (cobol_$alter_flag);
 11   136 dcl cobol_$sect_eop_flag fixed bin  ext;
 11   137 dcl sect_eop_flag fixed bin  defined (cobol_$sect_eop_flag);
 11   138 dcl cobol_$para_eop_flag fixed bin  ext;
 11   139 dcl para_eop_flag fixed bin  defined (cobol_$para_eop_flag);
 11   140 dcl cobol_$priority_no fixed bin  ext;
 11   141 dcl priority_no fixed bin  defined (cobol_$priority_no);
 11   142 dcl cobol_$compile_count fixed bin ext;
 11   143 dcl compile_count fixed bin defined (cobol_$compile_count);
 11   144 dcl cobol_$ptr_assumption_ind fixed bin ext;
 11   145 dcl ptr_assumption_ind fixed bin defined (cobol_$ptr_assumption_ind);
 11   146 dcl cobol_$reg_assumption_ind fixed bin ext;
 11   147 dcl reg_assumption_ind fixed bin defined (cobol_$reg_assumption_ind);
 11   148 dcl cobol_$perform_para_index fixed bin ext;
 11   149 dcl perform_para_index fixed bin defined (cobol_$perform_para_index);
 11   150 dcl cobol_$perform_sect_index fixed bin ext;
 11   151 dcl perform_sect_index fixed bin defined (cobol_$perform_sect_index);
 11   152 dcl cobol_$alter_index fixed bin ext;
 11   153 dcl alter_index fixed bin defined (cobol_$alter_index);
 11   154 dcl cobol_$list_off fixed bin ext;
 11   155 dcl list_off fixed bin defined (cobol_$list_off);
 11   156 dcl cobol_$constant_offset fixed bin ext;
 11   157 dcl constant_offset fixed bin defined (cobol_$constant_offset);
 11   158 dcl cobol_$misc_max fixed bin ext;
 11   159 dcl misc_max fixed bin defined (cobol_$misc_max);
 11   160 dcl cobol_$pd_map_max fixed bin ext;
 11   161 dcl pd_map_max fixed bin defined (cobol_$pd_map_max);
 11   162 dcl cobol_$map_data_max fixed bin ext;
 11   163 dcl map_data_max fixed bin defined (cobol_$map_data_max);
 11   164 dcl cobol_$fixup_max fixed bin ext;
 11   165 dcl fixup_max fixed bin defined (cobol_$fixup_max);
 11   166 dcl cobol_$tag_table_max fixed bin ext;
 11   167 dcl tag_table_max fixed bin defined (cobol_$tag_table_max);
 11   168 dcl cobol_$temp_token_max fixed bin ext;
 11   169 dcl temp_token_max fixed bin defined (cobol_$temp_token_max);
 11   170 dcl cobol_$allo1_max fixed bin ext;
 11   171 dcl allo1_max fixed bin defined (cobol_$allo1_max);
 11   172 dcl cobol_$eln_max fixed bin ext;
 11   173 dcl eln_max fixed bin defined (cobol_$eln_max);
 11   174 dcl cobol_$debug_enable fixed bin ext;
 11   175 dcl debug_enable fixed bin defined (cobol_$debug_enable);
 11   176 dcl cobol_$non_source_offset fixed bin ext;
 11   177 dcl non_source_offset fixed bin defined (cobol_$non_source_offset);
 11   178 dcl cobol_$initval_flag fixed bin ext;
 11   179 dcl initval_flag fixed bin defined (cobol_$initval_flag);
 11   180 dcl cobol_$date_compiled_sw fixed bin ext;
 11   181 dcl date_compiled_sw fixed bin defined (cobol_$date_compiled_sw);
 11   182 dcl cobol_$include_cnt fixed bin ext;
 11   183 dcl include_cnt fixed bin defined (cobol_$include_cnt);
 11   184 dcl cobol_$fs_charcnt fixed bin ext;
 11   185 dcl fs_charcnt fixed bin defined (cobol_$fs_charcnt);
 11   186 dcl cobol_$ws_charcnt fixed bin ext;
 11   187 dcl ws_charcnt fixed bin defined (cobol_$ws_charcnt);
 11   188 dcl cobol_$coms_charcnt fixed bin ext;
 11   189 dcl coms_charcnt fixed bin defined (cobol_$coms_charcnt);
 11   190 dcl cobol_$ls_charcnt fixed bin ext;
 11   191 dcl ls_charcnt fixed bin defined (cobol_$ls_charcnt);
 11   192 dcl cobol_$cons_charcnt fixed bin ext;
 11   193 dcl cons_charcnt fixed bin defined (cobol_$cons_charcnt);
 11   194 dcl cobol_$value_cnt fixed bin ext;
 11   195 dcl value_cnt fixed bin defined (cobol_$value_cnt);
 11   196 dcl cobol_$cd_cnt fixed bin ext;
 11   197 dcl cd_cnt fixed bin defined (cobol_$cd_cnt);
 11   198 dcl cobol_$fs_wdoff fixed bin ext;
 11   199 dcl fs_wdoff fixed bin defined (cobol_$fs_wdoff);
 11   200 dcl cobol_$ws_wdoff fixed bin ext;
 11   201 dcl ws_wdoff fixed bin defined (cobol_$ws_wdoff);
 11   202 dcl cobol_$coms_wdoff fixed bin ext;
 11   203 dcl coms_wdoff fixed bin defined (cobol_$coms_wdoff);
 11   204 
 11   205 /* CHARACTER */
 11   206 dcl cobol_$scratch_dir char (168)   aligned ext;
 11   207 dcl scratch_dir char (168)   aligned defined (cobol_$scratch_dir);			/* -42- */
 11   208 dcl cobol_$obj_seg_name char (32)   aligned ext;
 11   209 dcl obj_seg_name char (32)   aligned defined (cobol_$obj_seg_name);		/* -8- */
 11   210 
 11   211 /* BIT */
 11   212 dcl cobol_$xref_bypass bit(1) aligned ext;
 11   213 dcl xref_bypass bit(1) aligned defined (cobol_$xref_bypass);			/* -1- */
 11   214 dcl cobol_$same_sort_merge_proc bit(1) aligned ext;
 11   215 dcl same_sort_merge_proc bit(1) aligned defined (cobol_$same_sort_merge_proc);		/* -1- */
 11   216 
 11   217 
 11   218 /* END INCLUDE FILE ... cobol_incl.pl1*/
 11   219 
 11   220 
      558 
 12     1 
 12     2 /* BEGIN INCLUDE FILE ... cobol_ext_.incl.pl1 */
 12     3 /* Last modified on 06/17/76 by ORN */
 12     4 /* Last modified on 12/28/76 by FCH */
 12     5 /* Last modified on 12/01/80 by FCH */
 12     6 
 12     7 /*    <<<   SHARED EXTERNALS INCLUDE FILE   >>>    */
 12     8 
 12     9 
 12    10 dcl     cobol_ext_$cobol_afp ptr ext;
 12    11 dcl     cobol_afp ptr defined (  cobol_ext_$cobol_afp);
 12    12 dcl     cobol_ext_$cobol_analin_fileno ptr ext;
 12    13 dcl     cobol_analin_fileno ptr defined (  cobol_ext_$cobol_analin_fileno);
 12    14 dcl     cobol_ext_$report_first_token ptr ext;
 12    15 dcl     report_first_token ptr defined( cobol_ext_$report_first_token);
 12    16 dcl     cobol_ext_$report_last_token ptr ext;
 12    17 dcl     report_last_token ptr defined ( cobol_ext_$report_last_token);
 12    18 dcl     cobol_ext_$cobol_eltp ptr ext;
 12    19 dcl     cobol_eltp ptr defined (  cobol_ext_$cobol_eltp);
 12    20 dcl     cobol_ext_$cobol_cmfp ptr ext;
 12    21 dcl     cobol_cmfp ptr defined (  cobol_ext_$cobol_cmfp);
 12    22 dcl     cobol_ext_$cobol_com_fileno ptr ext;
 12    23 dcl     cobol_com_fileno ptr defined (  cobol_ext_$cobol_com_fileno);
 12    24 dcl     cobol_ext_$cobol_com_ptr ptr ext;
 12    25 dcl     cobol_com_ptr ptr defined (  cobol_ext_$cobol_com_ptr);
 12    26 dcl     cobol_ext_$cobol_dfp ptr ext;
 12    27 dcl     cobol_dfp ptr defined (  cobol_ext_$cobol_dfp);
 12    28 dcl     cobol_ext_$cobol_hfp ptr ext;
 12    29 dcl     cobol_hfp ptr defined (  cobol_ext_$cobol_hfp);
 12    30 dcl     cobol_ext_$cobol_m1fp ptr ext;
 12    31 dcl     cobol_m1fp ptr defined (  cobol_ext_$cobol_m1fp);
 12    32 dcl     cobol_ext_$cobol_m2fp ptr ext;
 12    33 dcl     cobol_m2fp ptr defined (  cobol_ext_$cobol_m2fp);
 12    34 dcl     cobol_ext_$cobol_min1_fileno ptr ext;
 12    35 dcl     cobol_min1_fileno ptr defined (  cobol_ext_$cobol_min1_fileno);
 12    36 dcl     cobol_ext_$cobol_min2_fileno_ptr ptr ext;
 12    37 dcl     cobol_min2_fileno_ptr ptr defined (  cobol_ext_$cobol_min2_fileno_ptr);
 12    38 dcl     cobol_ext_$cobol_name_fileno ptr ext;
 12    39 dcl     cobol_name_fileno ptr defined (  cobol_ext_$cobol_name_fileno);
 12    40 dcl     cobol_ext_$cobol_name_fileno_ptr ptr ext;
 12    41 dcl     cobol_name_fileno_ptr ptr defined (  cobol_ext_$cobol_name_fileno_ptr);
 12    42 dcl     cobol_ext_$cobol_ntfp ptr ext;
 12    43 dcl     cobol_ntfp ptr defined (  cobol_ext_$cobol_ntfp);
 12    44 dcl     cobol_ext_$cobol_pdofp ptr ext;
 12    45 dcl     cobol_pdofp ptr defined (  cobol_ext_$cobol_pdofp);
 12    46 dcl     cobol_ext_$cobol_pfp ptr ext;
 12    47 dcl     cobol_pfp ptr defined (  cobol_ext_$cobol_pfp);
 12    48 dcl     cobol_ext_$cobol_rm2fp ptr ext;
 12    49 dcl     cobol_rm2fp ptr defined (  cobol_ext_$cobol_rm2fp);
 12    50 dcl     cobol_ext_$cobol_rmin2fp ptr ext;
 12    51 dcl     cobol_rmin2fp ptr defined (  cobol_ext_$cobol_rmin2fp);
 12    52 dcl     cobol_ext_$cobol_curr_in ptr ext;
 12    53 dcl     cobol_curr_in ptr defined (  cobol_ext_$cobol_curr_in);
 12    54 dcl     cobol_ext_$cobol_curr_out ptr ext;
 12    55 dcl     cobol_curr_out ptr defined (  cobol_ext_$cobol_curr_out);
 12    56 dcl     cobol_ext_$cobol_sfp ptr ext;
 12    57 dcl     cobol_sfp ptr defined (  cobol_ext_$cobol_sfp);
 12    58 dcl     cobol_ext_$cobol_w1p ptr ext;
 12    59 dcl     cobol_w1p ptr defined (  cobol_ext_$cobol_w1p);
 12    60 dcl     cobol_ext_$cobol_w2p ptr ext;
 12    61 dcl     cobol_w2p ptr defined (  cobol_ext_$cobol_w2p);
 12    62 dcl     cobol_ext_$cobol_w3p ptr ext;
 12    63 dcl     cobol_w3p ptr defined (  cobol_ext_$cobol_w3p);
 12    64 dcl     cobol_ext_$cobol_w5p ptr ext;
 12    65 dcl     cobol_w5p ptr defined (  cobol_ext_$cobol_w5p);
 12    66 dcl     cobol_ext_$cobol_w6p ptr ext;
 12    67 dcl     cobol_w6p ptr defined (  cobol_ext_$cobol_w6p);
 12    68 dcl     cobol_ext_$cobol_w7p ptr ext;
 12    69 dcl     cobol_w7p ptr defined (  cobol_ext_$cobol_w7p);
 12    70 dcl     cobol_ext_$cobol_x3fp ptr ext;
 12    71 dcl     cobol_x3fp ptr defined (  cobol_ext_$cobol_x3fp);
 12    72 dcl	cobol_ext_$cobol_rwdd ptr ext;
 12    73 dcl	cobol_rwdd ptr defined(cobol_ext_$cobol_rwdd);
 12    74 dcl	cobol_ext_$cobol_rwpd ptr ext;
 12    75 dcl	cobol_rwpd ptr defined(cobol_ext_$cobol_rwpd);
 12    76 
 12    77 
 12    78 dcl     cobol_ext_$cobol_fileno1 fixed bin(24)ext;
 12    79 dcl     cobol_fileno1 fixed bin(24)defined (  cobol_ext_$cobol_fileno1);				
 12    80 dcl     cobol_ext_$cobol_options_len fixed bin(24)ext;
 12    81 dcl     cobol_options_len fixed bin(24)defined (  cobol_ext_$cobol_options_len);
 12    82 dcl     cobol_ext_$cobol_pdout_fileno fixed bin(24)ext;
 12    83 dcl     cobol_pdout_fileno fixed bin(24)defined (  cobol_ext_$cobol_pdout_fileno);			
 12    84 dcl     cobol_ext_$cobol_print_fileno fixed bin(24)ext;
 12    85 dcl     cobol_print_fileno fixed bin(24)defined (  cobol_ext_$cobol_print_fileno);			
 12    86 dcl     cobol_ext_$cobol_rmin2_fileno fixed bin(24)ext;
 12    87 dcl     cobol_rmin2_fileno fixed bin(24)defined (  cobol_ext_$cobol_rmin2_fileno);
 12    88 dcl     cobol_ext_$cobol_x1_fileno fixed bin(24)ext;
 12    89 dcl     cobol_x1_fileno fixed bin(24)defined (  cobol_ext_$cobol_x1_fileno);				
 12    90 dcl     cobol_ext_$cobol_x2_fileno fixed bin(24)ext;
 12    91 dcl     cobol_x2_fileno fixed bin(24)defined (  cobol_ext_$cobol_x2_fileno);
 12    92 dcl     cobol_ext_$cobol_x3_fileno fixed bin(24)ext;
 12    93 dcl     cobol_x3_fileno fixed bin(24)defined (  cobol_ext_$cobol_x3_fileno);
 12    94 
 12    95 dcl     cobol_ext_$cobol_lpr char (5) ext;
 12    96 dcl     cobol_lpr char (5) defined (  cobol_ext_$cobol_lpr);				/* -2- */
 12    97 dcl     cobol_ext_$cobol_options char (120) ext;
 12    98 dcl     cobol_options char (120) defined (  cobol_ext_$cobol_options);          			/* -30- */
 12    99 
 12   100 dcl     cobol_ext_$cobol_xlast8 bit (1) ext;
 12   101 dcl     cobol_xlast8 bit (1) defined (  cobol_ext_$cobol_xlast8);				/* -1- */
 12   102 dcl     cobol_ext_$report_exists bit (1) ext;
 12   103 dcl     report_exists bit (1) defined (  cobol_ext_$report_exists);
 12   104 
 12   105 
 12   106 /*    <<<   END OF SHARED EXTERNALS INCLUDE FILE   >>>    */
 12   107 /* END INCLUDE FILE ... cobol_ext_.incl.pl1 */
 12   108 
      559 
 13     1 
 13     2 /* BEGIN INCLUDE FILE ...   cobol_fixed_common.incl.pl1 */
 13     3 /* Modified on 10/27/82 by FCH, [5.1-1], cobol_cln added to save last line num, BUG543(phx13643) */
 13     4 /* Modified on 07/31/80 by FCH, [4.3-1], use_reporting field added for Report Writer */
 13     5 /* Modified on 03/30/79 by FCH, [4.1-1], -card option added */
 13     6 /* Modified on 03/30/79 by FCH, [4.0-2], -svNM option added */
 13     7 /* Modified on 03/02/79 by FCH, [4.0-1], -levNM option added */
 13     8 /* Modified by RAL on 10/13/78, [4.0-0], Added option exp from fil2. */
 13     9 /* Modified by BC on 06/20/77, descriptor added.	*/
 13    10 /* Modified by BC on 06/02/77, init_cd_seg, init_cd_offset added.	*/
 13    11 /* Modified by BC  on 1/21/77, options.profile added.	*/
 13    12 /* Modified by FCH on 7/6/76, sysin_fno & sysout_fno deleted, accept_device & display_device added */
 13    13 /* Modified by FCH on 5/20/77, comp_level added */
 13    14 
 13    15 
 13    16 /*     THE SIZE OF THIS STRUCTURE IN BYTES, (EXCLUDING VARIABLE
 13    17*   LENGTH ENTITIES), FOR EACH HARDWARE IMPLEMENTATION IS:
 13    18*
 13    19*   HARDWARE	|	SIZE (BYTES)
 13    20*   ---------------------------------
 13    21*   645/6180	|	464
 13    22*   P7		|	396
 13    23*   ---------------------------------
 13    24*   */
 13    25 
 13    26 dcl 	1 fixed_common based (  cobol_com_ptr),
 13    27     		2 prog_name char (30),
 13    28    		2 compiler_rev_no char (25),
 13    29     		2 phase_name char (6),
 13    30     		2 currency char (1),
 13    31     		2 fatal_no fixed bin,
 13    32     		2 warn_no fixed bin,
 13    33     		2 proc_counter fixed bin,
 13    34     		2 spec_tag_counter fixed bin,
 13    35     		2 file_count fixed bin,
 13    36     		2 filedescr_offsets (20) char (5),
 13    37     		2 perf_alter_info char (5),
 13    38     		2 another_perform_info char (5),
 13    39     		2 sort_in_info char (5),
 13    40     		2 odo_info char (5),
 13    41     		2 size_seg fixed bin,
 13    42     		2 size_offset fixed bin(24),
 13    43     		2 size_perform_info char (5),
 13    44     		2 rename_info char (5),
 13    45     		2 report_names char (5),
 13    46     		2 rw_buf_seg fixed bin,
 13    47     		2 rw_buf_offset fixed bin(24),
 13    48     		2 rw_buf_length fixed bin(24),
 13    49     		2 file_keys char (5),
 13    50     		2 search_keys char (5),
 13    51     		2 dd_seg_size fixed bin(24),
 13    52     		2 pd_seg_size fixed bin(24),
 13    53     		2 seg_limit fixed bin ,
 13    54     		2 number_of_dd_segs fixed bin,
 13    55     		2 seg_info char (5),
 13    56     		2 number_of_ls_pointers fixed bin,
 13    57     		2 link_sec_seg fixed bin,
 13    58     		2 link_sec_offset fixed bin(24),
 13    59     		2 sra_clauses fixed bin,
 13    60     		2 fix_up_info char (5),
 13    61     		2 linage_info char (5),
 13    62     		2 first_dd_item char (5),
 13    63     		2 sort_out_info char (5),
 13    64     		2 db_info char (5),
 13    65     		2 realm_info char (5),
 13    66     		2 rc_realm_info char (5),
 13    67     		2 last_file_key char (5),
 13    68     		2 prog_coll_seq fixed bin,
 13    69 		2 init_cd_seg fixed bin,
 13    70 		2 init_cd_offset fixed bin(24),
 13    71     		2 input_error_exit fixed bin,
 13    72    		2 output_error_exit fixed bin,
 13    73     		2 i_o_error_exit fixed bin,
 13    74     		2 extend_error_exit fixed bin,
 13    75     		2 dummy15 fixed bin,
 13    76     		2 options,
 13    77       			3 cu bit (1),
 13    78       			3 st bit (1),
 13    79       			3 wn bit (1),
 13    80       			3 obs bit (1),
 13    81       			3 dm bit (1),
 13    82       			3 xrl bit (1),
 13    83       			3 xrn bit (1),
 13    84       			3 src bit (1),
 13    85       			3 obj bit (1),
 13    86       			3 exs bit (1),
 13    87       			3 sck bit (1),
 13    88       			3 rno bit (1),
 13    89 			3 u_l bit (1),
 13    90 			3 cnv bit (1),
 13    91 			3 cos bit (1),
 13    92 			3 fmt bit (1),
 13    93 			3 profile bit(1),
 13    94 			3 nw bit (1),
 13    95 			3 exp bit (1),		/* [4.0-0] */
 13    96 			3 card bit (1),  /*[4.1-1]*/
 13    97 			3 fil2 bit (5),
 13    98 			3 m_map bit (1),
 13    99 			3 m_bf bit (1),
 13   100 			3 m_fat bit (1),
 13   101 			3 m_wn bit (1),
 13   102 			3 m_obs bit(1),
 13   103 			3 pd bit(1),
 13   104       			3 oc bit(1),
 13   105     		2 supervisor bit (1),
 13   106     		2 dec_comma bit (1),
 13   107     		2 init_cd bit (1),
 13   108     		2 corr bit (1),
 13   109     		2 initl bit (1),
 13   110     		2 debug bit (1),
 13   111     		2 report bit (1),
 13   112     		2 sync_in_prog bit (1),
 13   113     		2 pd_section bit (1),
 13   114     		2 list_switch bit (1),
 13   115     		2 alpha_cond bit (1),
 13   116     		2 num_cond bit (1),
 13   117     		2 spec_sysin bit (1),
 13   118     		2 spec_sysout bit (1),
 13   119     		2 cpl_files bit (1),
 13   120     		2 obj_dec_comma bit (1),
 13   121 		2 default_sign_type bit (3),
 13   122 		2 use_debug bit(1),
 13   123 		2 syntax_trace bit(1),
 13   124 		2 comp_defaults,
 13   125 			3 comp	bit(1),
 13   126 			3 comp_1	bit(1),
 13   127 			3 comp_2	bit(1),
 13   128 			3 comp_3	bit(1),
 13   129 			3 comp_4	bit(1),
 13   130 			3 comp_5	bit(1),
 13   131 			3 comp_6	bit(1),
 13   132 			3 comp_7	bit(1),
 13   133 			3 comp_8 bit(1),
 13   134 		2 disp_defaults,
 13   135 			3 disp	bit(1),
 13   136 			3 disp_1	bit(1),
 13   137 			3 disp_2	bit(1),
 13   138 			3 disp_3	bit(1),
 13   139 			3 disp_4	bit(1),
 13   140 			3 disp_5  bit(1),
 13   141 			3 disp_6  bit(1),
 13   142 			3 disp_7  bit(1),
 13   143 		2 descriptor bit(2),
 13   144 		2 levsv  bit(3),		/*[4.0-1]*/
 13   145 		2 use_reporting bit(1),	/*[4.3-1]*/
 13   146 		2 cd bit(1),		/*[4.4-1]*/
 13   147 		2 dummy17 bit(3),
 13   148    		2 lvl_rstr bit(32),
 13   149    		2 inst_rstr bit(32),
 13   150 		2 comp_level char(1),
 13   151 		2 dummy18 char(30),
 13   152 		2 object_sign char (1),
 13   153     		2 last_print_rec char (5),
 13   154     		2 coll_seq_info char (5),
 13   155     		2 sys_status_seg fixed bin,
 13   156    		2 sys_status_offset fixed bin(24),
 13   157    		2 compiler_id fixed bin,
 13   158    		2 date_comp_ln fixed bin,
 13   159    		2 compile_mode bit(36),
 13   160    		2 default_temp fixed bin,
 13   161    		2 accept_device fixed bin,
 13   162    		2 display_device fixed bin,
 13   163    		2 cobol_cln fixed bin,	/*[5.1-1]*/
 13   164 		2 alphabet_offset fixed bin;
 13   165 
 13   166 
 13   167 
 13   168 /* END INCLUDE FILE ...   cobol_fixed_common.incl.pl1 */
 13   169 
      560 
      561      end cobol_ioerror;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/24/89  0830.8  cobol_ioerror.pl1                 >spec>install>MR12.3-1048>cobol_ioerror.pl1
552          1    11/11/82  1712.7  cobol_file_table.incl.pl1         >ldd>include>cobol_file_table.incl.pl1
553          2    11/11/82  1712.8  cobol_file_key.incl.pl1           >ldd>include>cobol_file_key.incl.pl1
554          3    03/27/82  0439.8  cobol_type1.incl.pl1              >ldd>include>cobol_type1.incl.pl1
3-15         4    11/11/82  1712.8  cobol_TYPE1.incl.pl1              >ldd>include>cobol_TYPE1.incl.pl1
555          5    03/27/82  0439.8  cobol_type3.incl.pl1              >ldd>include>cobol_type3.incl.pl1
5-15         6    11/11/82  1712.8  cobol_TYPE3.incl.pl1              >ldd>include>cobol_TYPE3.incl.pl1
556          7    03/27/82  0439.9  cobol_type7.incl.pl1              >ldd>include>cobol_type7.incl.pl1
7-15         8    11/11/82  1712.7  cobol_TYPE7.incl.pl1              >ldd>include>cobol_TYPE7.incl.pl1
557          9    03/27/82  0439.8  cobol_type19.incl.pl1             >ldd>include>cobol_type19.incl.pl1
9-17        10    03/27/82  0439.6  cobol_TYPE19.incl.pl1             >ldd>include>cobol_TYPE19.incl.pl1
558         11    11/11/82  1712.7  cobol_.incl.pl1                   >ldd>include>cobol_.incl.pl1
559         12    03/27/82  0431.3  cobol_ext_.incl.pl1               >ldd>include>cobol_ext_.incl.pl1
560         13    11/11/82  1712.8  cobol_fixed_common.incl.pl1       >ldd>include>cobol_fixed_common.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 547 ref 211 211 222 222 228 228 232 232 238 238
                                                                                  245 245 253 253 256 256 256 256 262 262 268 268
                                                                                  271 271 280 280 290 290 298 298 301 301 301 301
                                                                                  303 303 308 308 330 330 332 332 332 332 334 334
                                                                                  343 343 349 349 370 370 424 424 447 447 453 453
                                                                                  454 454 472 473 474 478 478 479 479 498 500 501
                                                                                  502 503 511 511 516 520 520 525 525 539 539
alphanum_lit                           based           structure                level 1 unaligned dcl 5-14
close                    34            based           bit(1)                   level 2 packed packed unaligned dcl 1-25 ref 391 396
                                                                                  401 406
cmpa_dl_instr                   000156 internal static bit(36)                  initial packed unaligned dcl 147 set ref 244* 245
                                                                                  245 289* 290 290 452* 453 453
cmpa_ind_instr                  000157 internal static bit(36)                  initial packed unaligned dcl 148 set ref 255* 256
                                                                                  256 300* 301 301 324* 332 332
cobol_$next_tag                 000216 external static fixed bin(17,0)          dcl 11-128 set ref 201 202* 202 266 267* 267 285
                                                                                  286* 286 318 319* 319 438 439* 439
cobol_$text_wd_off              000214 external static fixed bin(17,0)          dcl 11-90 ref 212 239 252 263 269 272 297 304 309
                                                                                  328 335 368 373 420 422 455 483
cobol_code                             parameter       fixed bin(17,0)          dcl 29 set ref 25 421* 469*
cobol_com_ptr                          defined         pointer                  dcl 12-25 ref 250 295 326 391 391 396 396 401 401
                                                                                  406 413
cobol_define_tag                000200 constant        entry                    external dcl 185 ref 273 312 340 356 459
cobol_emit                      000166 constant        entry                    external dcl 179 ref 211 232 238 245 256 262 268 271
                                                                                  290 301 303 308 332 334 370 424 447 453 454 479
                                                                                  525
cobol_ext_$cobol_com_ptr        000220 external static pointer                  dcl 12-24 ref 250 250 295 295 326 326 391 391 391
                                                                                  391 396 396 396 396 401 401 401 401 406 406 413
                                                                                  413
cobol_make_fixup                000176 constant        entry                    external dcl 184 ref 253 298 330
cobol_make_link$type_4          000174 constant        entry                    external dcl 182 ref 248 293 322
cobol_make_tagref               000172 constant        entry                    external dcl 181 ref 212 239 263 269 272 304 309 335
                                                                                  455 483
cobol_move_gen                  000210 constant        entry                    external dcl 190 ref 511 520
cobol_perform_gen               000206 constant        entry                    external dcl 189 ref 478
cobol_process_error             000202 constant        entry                    external dcl 186 ref 421
cobol_process_error$use         000204 constant        entry                    external dcl 187 ref 469
cobol_read_rand                 000170 constant        entry                    external dcl 180 ref 497 515
cobol_set_fsbptr                000212 constant        entry                    external dcl 191 ref 442
default_error_status            000125 internal static structure                level 1 unaligned dcl 131 set ref 222 222 280 280
                                                                                  343 343 349 349
delete                   34(01)        based           bit(1)                   level 2 packed packed unaligned dcl 1-25 ref 406
desc                     12            based           char(40)                 level 2 packed packed unaligned dcl 2-17 ref 498 516
end_stmt                               based           structure                level 1 unaligned dcl 9-16
eno                                    parameter       fixed bin(17,0)          dcl 493 ref 490 508 519
error_exit               77            based           fixed bin(17,0)          level 2 dcl 1-25 set ref 374 374*
error_ptr                12            based           pointer                  level 2 dcl 43 set ref 216 218* 316 316 320 322 338*
extend_error_exit       131            based           fixed bin(17,0)          level 2 dcl 13-26 set ref 391 391*
external                 33(10)        based           bit(1)                   level 2 packed packed unaligned dcl 1-25 ref 379 391
                                                                                  391 396 396 401 401 406 406
extra_status             33(12)        based           bit(1)                   level 2 packed packed unaligned dcl 1-25 ref 259 314
                                                                                  513
extra_status_info        20            based           char(5)                  level 2 packed packed unaligned dcl 1-25 set ref
                                                                                  515*
file_key                               based           structure                level 1 unaligned dcl 2-17
file_key_desc                          based           char(40)                 packed unaligned dcl 66 set ref 498* 516*
file_key_info            13     000024 internal static structure                level 2 unaligned dcl 67 set ref 498 516
file_status              33(11)        based           bit(1)                   level 2 packed packed unaligned dcl 1-25 ref 258 277
                                                                                  495
file_status_info         16(27)        based           char(5)                  level 2 packed packed unaligned dcl 1-25 set ref
                                                                                  497*
file_table                             based           structure                level 1 unaligned dcl 1-25
fixed_common                           based           structure                level 1 unaligned dcl 13-26
fixup_directive                 000010 internal static structure                level 1 dcl 34 set ref 253 253 298 298 330 330
fkey_ptr                        000114 automatic       pointer                  dcl 168 set ref 497* 498 515* 516
fkey_type9                      000024 internal static structure                level 1 unaligned dcl 67 set ref 502
forward_tag               2            based           fixed bin(17,0)          level 2 dcl 43 ref 480 480
fsbptr_sw                       000117 automatic       bit(1)                   packed unaligned dcl 171 set ref 390* 440 443*
ft_ptr                                 parameter       pointer                  dcl 28 set ref 25 258 259 277 314 374 374 379 381
                                                                                  383 385 387 391 391 391 391 391 391 391 396 396
                                                                                  396 396 396 396 396 401 401 401 401 401 401 406
                                                                                  406 406 406 406 406 406 406 406 442* 495 497 513
                                                                                  515 532
i                               000110 automatic       fixed bin(17,0)          dcl 163 set ref 241* 242 248 258 259 270* 283* 287
                                                                                  293 305* 316* 320 322 338*
i_o_error_exit          130            based           fixed bin(17,0)          level 2 dcl 13-26 set ref 406 413*
input_error_exit        126            based           fixed bin(17,0)          level 2 dcl 13-26 set ref 396 396*
io_sw                           000121 automatic       bit(1)                   packed unaligned dcl 173 set ref 390* 412* 450
ioerror                                based           structure                level 1 unaligned dcl 43
ioerror_ptr                            parameter       pointer                  dcl 31 ref 25 199 206 208 209 212 216 218 228 233
                                                                                  233 236 241 242 248 258 259 270 277 283 283 287
                                                                                  293 305 306 309 316 316 320 322 338 347 347 391
                                                                                  396 401 406 418 418 480 480
lda_instr                       000160 internal static bit(36)                  initial packed unaligned dcl 149 set ref 231* 232
                                                                                  232 524* 525 525
lda_mode                        000162 internal static bit(36)                  initial array packed unaligned dcl 150 set ref 447
                                                                                  447
lda_sw                          000116 automatic       bit(1)                   packed unaligned dcl 170 set ref 390* 445 448*
line                      1            based           fixed bin(17,0)          level 2 in structure "reserved_word" dcl 3-14
                                                                                  in procedure "cobol_ioerror" set ref 475* 504*
line                      1            based           fixed bin(17,0)          level 2 in structure "alphanum_lit" dcl 5-14
                                                                                  in procedure "cobol_ioerror" set ref 506*
line_no                         000113 automatic       fixed bin(17,0)          dcl 166 set ref 199* 421* 469* 475 504 506 538*
lineno                                 based           fixed bin(17,0)          level 2 dcl 43 ref 199
link                      1     000125 internal static structure                level 2 in structure "default_error_status" packed
                                                                                  packed unaligned dcl 131 in procedure
                                                                                  "cobol_ioerror"
link                      1            based           structure                array level 2 in structure "s" unaligned dcl 53
                                                                                  in procedure "cobol_ioerror"
link_reloc                      000164 internal static bit(5)                   initial array dcl 153 set ref 256 256 301 301 332
                                                                                  332
lit_size                  5            based           fixed bin(17,0)          level 2 dcl 5-14 set ref 507* 509 518* 519
location                  0(14) 000010 internal static structure                level 2 packed packed unaligned dcl 34
mcode_off                              parameter       fixed bin(17,0)          dcl 30 set ref 25 204 231 421* 440 469* 524
mode                                   parameter       fixed bin(17,0)          dcl 433 ref 430 452
mode_count                      000111 automatic       fixed bin(17,0)          dcl 164 set ref 378* 381* 381 383* 383 385* 385 387*
                                                                                  387 416 416 436 450 459
mpout                           000012 internal static structure                level 1 unaligned dcl 60 set ref 478 478 511 511 520
                                                                                  520
n                               000012 internal static fixed bin(17,0)          initial level 2 in structure "mpout" dcl 60
                                                                                  in procedure "cobol_ioerror" set ref 471* 499*
n                                      based           fixed bin(17,0)          level 2 in structure "s" dcl 53 in procedure
                                                                                  "cobol_ioerror" ref 241 283 316
name                      1            based           char(32)                 array level 3 packed packed unaligned dcl 53 ref 242
                                                                                  248 287 293 320 322
next_instr_tag                  000104 automatic       fixed bin(17,0)          dcl 159 set ref 201* 235 356* 482
no_error_ptr              4            based           pointer                  level 2 dcl 43 set ref 236 241 242 248 258 259 270*
no_error_status                 000140 internal static structure                level 1 unaligned dcl 138 set ref 228 228 539 539
no_error_tag              3            based           fixed bin(17,0)          level 2 dcl 43 ref 233 233
ntag                            000105 automatic       fixed bin(17,0)          dcl 160 set ref 266* 269* 273* 285* 304* 312* 318*
                                                                                  335* 340*
null                                                   builtin function         dcl 547 ref 206 211 211 212 212 216 232 232 236 238
                                                                                  238 239 239 245 245 262 262 263 263 268 268 269
                                                                                  269 271 271 272 272 283 290 290 303 303 304 304
                                                                                  308 308 309 309 316 334 334 335 335 347 370 370
                                                                                  424 424 447 447 453 453 454 454 455 455 479 479
                                                                                  483 483 525 525
off                             000112 automatic       fixed bin(17,0)          dcl 165 set ref 248* 255 293* 300 322* 324
offset                    0(18) 000010 internal static fixed bin(17,0)          level 3 packed packed unaligned dcl 34 set ref 252*
                                                                                  297* 328*
open_ext                 34(05)        based           bit(1)                   level 2 packed packed unaligned dcl 1-25 ref 381 391
                                                                                  391
open_in                  34(02)        based           bit(1)                   level 2 packed packed unaligned dcl 1-25 ref 383 396
                                                                                  396
open_io                  34(04)        based           bit(1)                   level 2 packed packed unaligned dcl 1-25 ref 387 406
                                                                                  406
open_out                 34(03)        based           bit(1)                   level 2 packed packed unaligned dcl 1-25 ref 385 401
                                                                                  401
options                 133            based           structure                level 2 packed packed unaligned dcl 13-26
organization             43            based           fixed bin(17,0)          level 2 dcl 1-25 ref 391
output_error_exit       127            based           fixed bin(17,0)          level 2 dcl 13-26 set ref 401 401*
perform_ic                      000102 automatic       fixed bin(17,0)          dcl 157 set ref 200* 366 368 373*
perform_mode_sw                 000120 automatic       bit(1)                   packed unaligned dcl 172 set ref 390* 416 435*
pntag                           000106 automatic       fixed bin(17,0)          dcl 161 set ref 438* 455* 459*
preset_sw                       000100 automatic       bit(1)                   packed unaligned dcl 155 set ref 195* 521 535*
proc_def                               based           structure                level 1 unaligned dcl 7-14
proc_num                 12            based           fixed bin(17,0)          level 2 dcl 7-14 set ref 476*
procno                                 parameter       fixed bin(17,0)          dcl 467 in procedure "perform_use" ref 465 476
procno                                 parameter       fixed bin(17,0)          dcl 432 in procedure "perform_mode" set ref 430 458*
profile                 133(16)        based           bit(1)                   level 3 packed packed unaligned dcl 13-26 ref 250
                                                                                  295 326
pt1                       2     000012 internal static pointer                  level 2 dcl 60 set ref 472* 475 500* 504
pt2                       4     000012 internal static pointer                  level 2 dcl 60 set ref 473* 476 501* 505 506 507 509
                                                                                  517 518 519
pt3                       6     000012 internal static pointer                  level 2 dcl 60 set ref 473* 477 502*
pt4                      10     000012 internal static pointer                  level 2 dcl 60 set ref 474* 503* 510
read                     34(06)        based           bit(1)                   level 2 packed packed unaligned dcl 1-25 ref 396 406
reserved_word                          based           structure                level 1 unaligned dcl 3-14
restart_ic                      000101 automatic       fixed bin(17,0)          dcl 156 set ref 418* 420* 422
restartad                 1            based           fixed bin(17,0)          level 2 dcl 43 ref 418 418
rewrite                  34(09)        based           bit(1)                   level 2 packed packed unaligned dcl 1-25 ref 406
s                                      based           structure                level 1 unaligned dcl 53
s1                              000125 automatic       char(2)                  packed unaligned dcl 177 set ref 508* 509 511
s1default                       000124 automatic       char(2)                  packed unaligned dcl 176 set ref 197* 282* 511 537*
s1set                           000122 automatic       bit(1)                   packed unaligned dcl 174 set ref 198* 258* 260 276*
                                                                                  511 536*
s2set                           000123 automatic       bit(2)                   packed unaligned dcl 175 set ref 198* 259* 260 276*
                                                                                  279* 281* 513 536*
size                                   based           fixed bin(17,0)          level 2 dcl 5-14 set ref 505* 517*
special_ptr              10            based           pointer                  level 2 dcl 43 set ref 206 208* 283 283 287 293 305*
                                                                                  347
special_tag               7            based           fixed bin(17,0)          level 2 dcl 43 set ref 209 212* 277 306 309* 347
start                    34(11)        based           bit(1)                   level 2 packed packed unaligned dcl 1-25 ref 396 406
status1                  12            based           char(2)                  array level 3 in structure "s" packed packed
                                                                                  unaligned dcl 53 in procedure "cobol_ioerror" ref
                                                                                  258 508
status1                  12     000125 internal static char(2)                  initial level 3 in structure "default_error_status"
                                                                                  packed packed unaligned dcl 131 in procedure
                                                                                  "cobol_ioerror" set ref 282
status2                  11            based           char(4)                  array level 3 dcl 53 ref 259 519
string                    6            based           char                     level 2 packed packed unaligned dcl 5-14 set ref
                                                                                  509* 519*
substr                                                 builtin function         dcl 547 set ref 231* 231 244* 255* 255 289* 300* 300
                                                                                  324* 324 369* 369 423* 423 452* 452 509* 519* 524*
                                                                                  524
tag                             000103 automatic       fixed bin(17,0)          dcl 158 set ref 233* 235* 239* 263* 272* 480* 482*
                                                                                  483*
temp                            000107 automatic       fixed bin(17,0)          dcl 162 set ref 368* 369 422* 423
tnz_instr                       000155 internal static bit(36)                  initial packed unaligned dcl 146 set ref 268 268 303
                                                                                  303 334 334 454 454
tra_instr                       000153 internal static bit(36)                  initial packed unaligned dcl 144 set ref 211 211 271
                                                                                  271 308 308 369* 370 370 423* 424 424 479 479
type1                           000060 internal static structure                level 1 unaligned dcl 78 set ref 472 500
type19                          000067 internal static structure                level 1 unaligned dcl 86 set ref 474 503
type3                           000101 internal static structure                level 1 unaligned dcl 103 set ref 501
type7                           000110 internal static structure                level 1 unaligned dcl 112 set ref 473
type_ptr                               parameter       pointer                  dcl 492 ref 490 508 519
tze_instr                       000154 internal static bit(36)                  initial packed unaligned dcl 145 set ref 238 238 262
                                                                                  262
unopen                    6            based           fixed bin(17,0)          level 2 dcl 43 ref 228 391 396 401 406
unspec                                                 builtin function         dcl 547 ref 231 255 300 324 369 423 452 524
verb                      4            based           fixed bin(17,0)          level 2 dcl 9-16 set ref 477* 510*
write                    34(13)        based           bit(1)                   level 2 packed packed unaligned dcl 1-25 ref 391 401

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
addrel                                                 builtin function         dcl 547
alit_ptr                               automatic       pointer                  dcl 5-11
allo1_max                              defined         fixed bin(17,0)          dcl 11-171
allo1_ptr                              defined         pointer                  dcl 11-67
alter_flag                             defined         fixed bin(17,0)          dcl 11-135
alter_index                            defined         fixed bin(17,0)          dcl 11-153
alter_list_ptr                         defined         pointer                  dcl 11-39
binary                                                 builtin function         dcl 547
cd_cnt                                 defined         fixed bin(17,0)          dcl 11-197
cobol_$allo1_max                       external static fixed bin(17,0)          dcl 11-170
cobol_$allo1_ptr                       external static pointer                  dcl 11-66
cobol_$alter_flag                      external static fixed bin(17,0)          dcl 11-134
cobol_$alter_index                     external static fixed bin(17,0)          dcl 11-152
cobol_$alter_list_ptr                  external static pointer                  dcl 11-38
cobol_$cd_cnt                          external static fixed bin(17,0)          dcl 11-196
cobol_$cobol_data_wd_off               external static fixed bin(17,0)          dcl 11-118
cobol_$compile_count                   external static fixed bin(17,0)          dcl 11-142
cobol_$coms_charcnt                    external static fixed bin(17,0)          dcl 11-188
cobol_$coms_wdoff                      external static fixed bin(17,0)          dcl 11-202
cobol_$con_end_ptr                     external static pointer                  dcl 11-10
cobol_$con_wd_off                      external static fixed bin(17,0)          dcl 11-92
cobol_$cons_charcnt                    external static fixed bin(17,0)          dcl 11-192
cobol_$constant_offset                 external static fixed bin(17,0)          dcl 11-156
cobol_$data_init_flag                  external static fixed bin(17,0)          dcl 11-130
cobol_$date_compiled_sw                external static fixed bin(17,0)          dcl 11-180
cobol_$debug_enable                    external static fixed bin(17,0)          dcl 11-174
cobol_$def_base_ptr                    external static pointer                  dcl 11-12
cobol_$def_max                         external static fixed bin(17,0)          dcl 11-96
cobol_$def_wd_off                      external static fixed bin(17,0)          dcl 11-94
cobol_$diag_ptr                        external static pointer                  dcl 11-70
cobol_$eln_max                         external static fixed bin(17,0)          dcl 11-172
cobol_$eln_ptr                         external static pointer                  dcl 11-68
cobol_$fixup_max                       external static fixed bin(17,0)          dcl 11-164
cobol_$fixup_ptr                       external static pointer                  dcl 11-30
cobol_$fs_charcnt                      external static fixed bin(17,0)          dcl 11-184
cobol_$fs_wdoff                        external static fixed bin(17,0)          dcl 11-198
cobol_$include_cnt                     external static fixed bin(17,0)          dcl 11-182
cobol_$include_info_ptr                external static pointer                  dcl 11-86
cobol_$init_stack_off                  external static fixed bin(17,0)          dcl 11-124
cobol_$initval_base_ptr                external static pointer                  dcl 11-32
cobol_$initval_file_ptr                external static pointer                  dcl 11-34
cobol_$initval_flag                    external static fixed bin(17,0)          dcl 11-178
cobol_$link_base_ptr                   external static pointer                  dcl 11-14
cobol_$link_max                        external static fixed bin(17,0)          dcl 11-100
cobol_$link_wd_off                     external static fixed bin(17,0)          dcl 11-98
cobol_$list_off                        external static fixed bin(17,0)          dcl 11-154
cobol_$list_ptr                        external static pointer                  dcl 11-64
cobol_$ls_charcnt                      external static fixed bin(17,0)          dcl 11-190
cobol_$main_pcs_ptr                    external static pointer                  dcl 11-84
cobol_$map_data_max                    external static fixed bin(17,0)          dcl 11-162
cobol_$map_data_ptr                    external static pointer                  dcl 11-54
cobol_$max_stack_off                   external static fixed bin(17,0)          dcl 11-122
cobol_$minpral5_ptr                    external static pointer                  dcl 11-50
cobol_$misc_base_ptr                   external static pointer                  dcl 11-60
cobol_$misc_end_ptr                    external static pointer                  dcl 11-62
cobol_$misc_max                        external static fixed bin(17,0)          dcl 11-158
cobol_$non_source_offset               external static fixed bin(17,0)          dcl 11-176
cobol_$ntbuf_ptr                       external static pointer                  dcl 11-82
cobol_$obj_seg_name                    external static char(32)                 dcl 11-208
cobol_$op_con_ptr                      external static pointer                  dcl 11-80
cobol_$para_eop_flag                   external static fixed bin(17,0)          dcl 11-138
cobol_$pd_map_index                    external static fixed bin(17,0)          dcl 11-116
cobol_$pd_map_max                      external static fixed bin(17,0)          dcl 11-160
cobol_$pd_map_ptr                      external static pointer                  dcl 11-28
cobol_$pd_map_sw                       external static fixed bin(17,0)          dcl 11-126
cobol_$perform_list_ptr                external static pointer                  dcl 11-36
cobol_$perform_para_index              external static fixed bin(17,0)          dcl 11-148
cobol_$perform_sect_index              external static fixed bin(17,0)          dcl 11-150
cobol_$priority_no                     external static fixed bin(17,0)          dcl 11-140
cobol_$ptr_assumption_ind              external static fixed bin(17,0)          dcl 11-144
cobol_$ptr_status_ptr                  external static pointer                  dcl 11-56
cobol_$reg_assumption_ind              external static fixed bin(17,0)          dcl 11-146
cobol_$reg_status_ptr                  external static pointer                  dcl 11-58
cobol_$reloc_def_base_ptr              external static pointer                  dcl 11-20
cobol_$reloc_def_max                   external static fixed bin(24,0)          dcl 11-108
cobol_$reloc_link_base_ptr             external static pointer                  dcl 11-22
cobol_$reloc_link_max                  external static fixed bin(24,0)          dcl 11-110
cobol_$reloc_sym_base_ptr              external static pointer                  dcl 11-24
cobol_$reloc_sym_max                   external static fixed bin(24,0)          dcl 11-112
cobol_$reloc_text_base_ptr             external static pointer                  dcl 11-18
cobol_$reloc_text_max                  external static fixed bin(24,0)          dcl 11-106
cobol_$reloc_work_base_ptr             external static pointer                  dcl 11-26
cobol_$reloc_work_max                  external static fixed bin(24,0)          dcl 11-114
cobol_$reswd_ptr                       external static pointer                  dcl 11-78
cobol_$same_sort_merge_proc            external static bit(1)                   dcl 11-214
cobol_$scratch_dir                     external static char(168)                dcl 11-206
cobol_$sect_eop_flag                   external static fixed bin(17,0)          dcl 11-136
cobol_$seg_init_flag                   external static fixed bin(17,0)          dcl 11-132
cobol_$seg_init_list_ptr               external static pointer                  dcl 11-40
cobol_$stack_off                       external static fixed bin(17,0)          dcl 11-120
cobol_$statement_info_ptr              external static pointer                  dcl 11-76
cobol_$sym_base_ptr                    external static pointer                  dcl 11-16
cobol_$sym_max                         external static fixed bin(17,0)          dcl 11-104
cobol_$sym_wd_off                      external static fixed bin(17,0)          dcl 11-102
cobol_$tag_table_max                   external static fixed bin(17,0)          dcl 11-166
cobol_$tag_table_ptr                   external static pointer                  dcl 11-52
cobol_$temp_token_area_ptr             external static pointer                  dcl 11-42
cobol_$temp_token_max                  external static fixed bin(17,0)          dcl 11-168
cobol_$temp_token_ptr                  external static pointer                  dcl 11-44
cobol_$text_base_ptr                   external static pointer                  dcl 11-8
cobol_$token_block1_ptr                external static pointer                  dcl 11-46
cobol_$token_block2_ptr                external static pointer                  dcl 11-48
cobol_$value_cnt                       external static fixed bin(17,0)          dcl 11-194
cobol_$ws_charcnt                      external static fixed bin(17,0)          dcl 11-186
cobol_$ws_wdoff                        external static fixed bin(17,0)          dcl 11-200
cobol_$xref_bypass                     external static bit(1)                   dcl 11-212
cobol_$xref_chain_ptr                  external static pointer                  dcl 11-74
cobol_$xref_token_ptr                  external static pointer                  dcl 11-72
cobol_afp                              defined         pointer                  dcl 12-11
cobol_analin_fileno                    defined         pointer                  dcl 12-13
cobol_cmfp                             defined         pointer                  dcl 12-21
cobol_com_fileno                       defined         pointer                  dcl 12-23
cobol_curr_in                          defined         pointer                  dcl 12-53
cobol_curr_out                         defined         pointer                  dcl 12-55
cobol_data_wd_off                      defined         fixed bin(17,0)          dcl 11-119
cobol_dfp                              defined         pointer                  dcl 12-27
cobol_eltp                             defined         pointer                  dcl 12-19
cobol_ext_$cobol_afp                   external static pointer                  dcl 12-10
cobol_ext_$cobol_analin_fileno         external static pointer                  dcl 12-12
cobol_ext_$cobol_cmfp                  external static pointer                  dcl 12-20
cobol_ext_$cobol_com_fileno            external static pointer                  dcl 12-22
cobol_ext_$cobol_curr_in               external static pointer                  dcl 12-52
cobol_ext_$cobol_curr_out              external static pointer                  dcl 12-54
cobol_ext_$cobol_dfp                   external static pointer                  dcl 12-26
cobol_ext_$cobol_eltp                  external static pointer                  dcl 12-18
cobol_ext_$cobol_fileno1               external static fixed bin(24,0)          dcl 12-78
cobol_ext_$cobol_hfp                   external static pointer                  dcl 12-28
cobol_ext_$cobol_lpr                   external static char(5)                  packed unaligned dcl 12-95
cobol_ext_$cobol_m1fp                  external static pointer                  dcl 12-30
cobol_ext_$cobol_m2fp                  external static pointer                  dcl 12-32
cobol_ext_$cobol_min1_fileno           external static pointer                  dcl 12-34
cobol_ext_$cobol_min2_fileno_ptr       external static pointer                  dcl 12-36
cobol_ext_$cobol_name_fileno           external static pointer                  dcl 12-38
cobol_ext_$cobol_name_fileno_ptr       external static pointer                  dcl 12-40
cobol_ext_$cobol_ntfp                  external static pointer                  dcl 12-42
cobol_ext_$cobol_options               external static char(120)                packed unaligned dcl 12-97
cobol_ext_$cobol_options_len           external static fixed bin(24,0)          dcl 12-80
cobol_ext_$cobol_pdofp                 external static pointer                  dcl 12-44
cobol_ext_$cobol_pdout_fileno          external static fixed bin(24,0)          dcl 12-82
cobol_ext_$cobol_pfp                   external static pointer                  dcl 12-46
cobol_ext_$cobol_print_fileno          external static fixed bin(24,0)          dcl 12-84
cobol_ext_$cobol_rm2fp                 external static pointer                  dcl 12-48
cobol_ext_$cobol_rmin2_fileno          external static fixed bin(24,0)          dcl 12-86
cobol_ext_$cobol_rmin2fp               external static pointer                  dcl 12-50
cobol_ext_$cobol_rwdd                  external static pointer                  dcl 12-72
cobol_ext_$cobol_rwpd                  external static pointer                  dcl 12-74
cobol_ext_$cobol_sfp                   external static pointer                  dcl 12-56
cobol_ext_$cobol_w1p                   external static pointer                  dcl 12-58
cobol_ext_$cobol_w2p                   external static pointer                  dcl 12-60
cobol_ext_$cobol_w3p                   external static pointer                  dcl 12-62
cobol_ext_$cobol_w5p                   external static pointer                  dcl 12-64
cobol_ext_$cobol_w6p                   external static pointer                  dcl 12-66
cobol_ext_$cobol_w7p                   external static pointer                  dcl 12-68
cobol_ext_$cobol_x1_fileno             external static fixed bin(24,0)          dcl 12-88
cobol_ext_$cobol_x2_fileno             external static fixed bin(24,0)          dcl 12-90
cobol_ext_$cobol_x3_fileno             external static fixed bin(24,0)          dcl 12-92
cobol_ext_$cobol_x3fp                  external static pointer                  dcl 12-70
cobol_ext_$cobol_xlast8                external static bit(1)                   packed unaligned dcl 12-100
cobol_ext_$report_exists               external static bit(1)                   packed unaligned dcl 12-102
cobol_ext_$report_first_token          external static pointer                  dcl 12-14
cobol_ext_$report_last_token           external static pointer                  dcl 12-16
cobol_fileno1                          defined         fixed bin(24,0)          dcl 12-79
cobol_hfp                              defined         pointer                  dcl 12-29
cobol_lpr                              defined         char(5)                  packed unaligned dcl 12-96
cobol_m1fp                             defined         pointer                  dcl 12-31
cobol_m2fp                             defined         pointer                  dcl 12-33
cobol_min1_fileno                      defined         pointer                  dcl 12-35
cobol_min2_fileno_ptr                  defined         pointer                  dcl 12-37
cobol_name_fileno                      defined         pointer                  dcl 12-39
cobol_name_fileno_ptr                  defined         pointer                  dcl 12-41
cobol_ntfp                             defined         pointer                  dcl 12-43
cobol_options                          defined         char(120)                packed unaligned dcl 12-98
cobol_options_len                      defined         fixed bin(24,0)          dcl 12-81
cobol_pdofp                            defined         pointer                  dcl 12-45
cobol_pdout_fileno                     defined         fixed bin(24,0)          dcl 12-83
cobol_pfp                              defined         pointer                  dcl 12-47
cobol_print_fileno                     defined         fixed bin(24,0)          dcl 12-85
cobol_rm2fp                            defined         pointer                  dcl 12-49
cobol_rmin2_fileno                     defined         fixed bin(24,0)          dcl 12-87
cobol_rmin2fp                          defined         pointer                  dcl 12-51
cobol_rwdd                             defined         pointer                  dcl 12-73
cobol_rwpd                             defined         pointer                  dcl 12-75
cobol_sfp                              defined         pointer                  dcl 12-57
cobol_w1p                              defined         pointer                  dcl 12-59
cobol_w2p                              defined         pointer                  dcl 12-61
cobol_w3p                              defined         pointer                  dcl 12-63
cobol_w5p                              defined         pointer                  dcl 12-65
cobol_w6p                              defined         pointer                  dcl 12-67
cobol_w7p                              defined         pointer                  dcl 12-69
cobol_x1_fileno                        defined         fixed bin(24,0)          dcl 12-89
cobol_x2_fileno                        defined         fixed bin(24,0)          dcl 12-91
cobol_x3_fileno                        defined         fixed bin(24,0)          dcl 12-93
cobol_x3fp                             defined         pointer                  dcl 12-71
cobol_xlast8                           defined         bit(1)                   packed unaligned dcl 12-101
compile_count                          defined         fixed bin(17,0)          dcl 11-143
coms_charcnt                           defined         fixed bin(17,0)          dcl 11-189
coms_wdoff                             defined         fixed bin(17,0)          dcl 11-203
con_end_ptr                            defined         pointer                  dcl 11-11
con_wd_off                             defined         fixed bin(17,0)          dcl 11-93
cons_charcnt                           defined         fixed bin(17,0)          dcl 11-193
constant_offset                        defined         fixed bin(17,0)          dcl 11-157
data_init_flag                         defined         fixed bin(17,0)          dcl 11-131
date_compiled_sw                       defined         fixed bin(17,0)          dcl 11-181
debug_enable                           defined         fixed bin(17,0)          dcl 11-175
def_base_ptr                           defined         pointer                  dcl 11-13
def_max                                defined         fixed bin(17,0)          dcl 11-97
def_wd_off                             defined         fixed bin(17,0)          dcl 11-95
diag_ptr                               defined         pointer                  dcl 11-71
eln_max                                defined         fixed bin(17,0)          dcl 11-173
eln_ptr                                defined         pointer                  dcl 11-69
eos_ptr                                automatic       pointer                  dcl 9-13
fixed                                                  builtin function         dcl 547
fixup_max                              defined         fixed bin(17,0)          dcl 11-165
fixup_ptr                              defined         pointer                  dcl 11-31
fs_charcnt                             defined         fixed bin(17,0)          dcl 11-185
fs_wdoff                               defined         fixed bin(17,0)          dcl 11-199
include_cnt                            defined         fixed bin(17,0)          dcl 11-183
include_info_ptr                       defined         pointer                  dcl 11-87
index                                                  builtin function         dcl 547
init_stack_off                         defined         fixed bin(17,0)          dcl 11-125
initval_base_ptr                       defined         pointer                  dcl 11-33
initval_file_ptr                       defined         pointer                  dcl 11-35
initval_flag                           defined         fixed bin(17,0)          dcl 11-179
length                                                 builtin function         dcl 547
link_base_ptr                          defined         pointer                  dcl 11-15
link_max                               defined         fixed bin(17,0)          dcl 11-101
link_wd_off                            defined         fixed bin(17,0)          dcl 11-99
list_off                               defined         fixed bin(17,0)          dcl 11-155
list_ptr                               defined         pointer                  dcl 11-65
ls_charcnt                             defined         fixed bin(17,0)          dcl 11-191
main_pcs_ptr                           defined         pointer                  dcl 11-85
map_data_max                           defined         fixed bin(17,0)          dcl 11-163
map_data_ptr                           defined         pointer                  dcl 11-55
max_stack_off                          defined         fixed bin(17,0)          dcl 11-123
minpral5_ptr                           defined         pointer                  dcl 11-51
misc_base_ptr                          defined         pointer                  dcl 11-61
misc_end_ptr                           defined         pointer                  dcl 11-63
misc_max                               defined         fixed bin(17,0)          dcl 11-159
mod                                                    builtin function         dcl 547
next_tag                               defined         fixed bin(17,0)          dcl 11-129
non_source_offset                      defined         fixed bin(17,0)          dcl 11-177
ntbuf_ptr                              defined         pointer                  dcl 11-83
obj_seg_name                           defined         char(32)                 dcl 11-209
op_con_ptr                             defined         pointer                  dcl 11-81
para_eop_flag                          defined         fixed bin(17,0)          dcl 11-139
pd_map_index                           defined         fixed bin(17,0)          dcl 11-117
pd_map_max                             defined         fixed bin(17,0)          dcl 11-161
pd_map_ptr                             defined         pointer                  dcl 11-29
pd_map_sw                              defined         fixed bin(17,0)          dcl 11-127
perform_list_ptr                       defined         pointer                  dcl 11-37
perform_para_index                     defined         fixed bin(17,0)          dcl 11-149
perform_sect_index                     defined         fixed bin(17,0)          dcl 11-151
priority_no                            defined         fixed bin(17,0)          dcl 11-141
proc_def_ptr                           automatic       pointer                  dcl 7-11
ptr_assumption_ind                     defined         fixed bin(17,0)          dcl 11-145
ptr_status_ptr                         defined         pointer                  dcl 11-57
reg_assumption_ind                     defined         fixed bin(17,0)          dcl 11-147
reg_status_ptr                         defined         pointer                  dcl 11-59
rel                                                    builtin function         dcl 547
reloc_def_base_ptr                     defined         pointer                  dcl 11-21
reloc_def_max                          defined         fixed bin(24,0)          dcl 11-109
reloc_link_base_ptr                    defined         pointer                  dcl 11-23
reloc_link_max                         defined         fixed bin(24,0)          dcl 11-111
reloc_sym_base_ptr                     defined         pointer                  dcl 11-25
reloc_sym_max                          defined         fixed bin(24,0)          dcl 11-113
reloc_text_base_ptr                    defined         pointer                  dcl 11-19
reloc_text_max                         defined         fixed bin(24,0)          dcl 11-107
reloc_work_base_ptr                    defined         pointer                  dcl 11-27
reloc_work_max                         defined         fixed bin(24,0)          dcl 11-115
report_exists                          defined         bit(1)                   packed unaligned dcl 12-103
report_first_token                     defined         pointer                  dcl 12-15
report_last_token                      defined         pointer                  dcl 12-17
reswd_ptr                              defined         pointer                  dcl 11-79
rw_ptr                                 automatic       pointer                  dcl 3-11
same_sort_merge_proc                   defined         bit(1)                   dcl 11-215
scratch_dir                            defined         char(168)                dcl 11-207
sect_eop_flag                          defined         fixed bin(17,0)          dcl 11-137
seg_init_flag                          defined         fixed bin(17,0)          dcl 11-133
seg_init_list_ptr                      defined         pointer                  dcl 11-41
stack_off                              defined         fixed bin(17,0)          dcl 11-121
statement_info_ptr                     defined         pointer                  dcl 11-77
string                                                 builtin function         dcl 547
sym_base_ptr                           defined         pointer                  dcl 11-17
sym_max                                defined         fixed bin(17,0)          dcl 11-105
sym_wd_off                             defined         fixed bin(17,0)          dcl 11-103
tag_table_max                          defined         fixed bin(17,0)          dcl 11-167
tag_table_ptr                          defined         pointer                  dcl 11-53
temp_token_area_ptr                    defined         pointer                  dcl 11-43
temp_token_max                         defined         fixed bin(17,0)          dcl 11-169
temp_token_ptr                         defined         pointer                  dcl 11-45
text_base_ptr                          defined         pointer                  dcl 11-9
text_wd_off                            defined         fixed bin(17,0)          dcl 11-91
token_block1_ptr                       defined         pointer                  dcl 11-47
token_block2_ptr                       defined         pointer                  dcl 11-49
value_cnt                              defined         fixed bin(17,0)          dcl 11-195
ws_charcnt                             defined         fixed bin(17,0)          dcl 11-187
ws_wdoff                               defined         fixed bin(17,0)          dcl 11-201
xref_bypass                            defined         bit(1)                   dcl 11-213
xref_chain_ptr                         defined         pointer                  dcl 11-75
xref_token_ptr                         defined         pointer                  dcl 11-73

NAMES DECLARED BY EXPLICIT CONTEXT.
cobol_ioerror                   000017 constant        entry                    external dcl 25
end_set_status                  002717 constant        label                    dcl 521 ref 513
perform_mode                    002207 constant        entry                    internal dcl 430 ref 391 396 401 413
perform_use                     002401 constant        entry                    internal dcl 465 ref 374 458
preset                          001532 constant        entry                    external dcl 532
produce_error                   001556 constant        entry                    internal dcl 364 ref 214 219 223 311 339 344 350 353
set_status                      002527 constant        entry                    internal dcl 490 ref 208 218 222 228 270 280 305 338
                                                                                  343 349 539
start                           000024 constant        label                    dcl 195

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      3172        3414    2766        3202
Length      4152    2766       222         521     203         156

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cobol_ioerror                       208 external procedure  is an external procedure.  
produce_error                           internal procedure  shares stack frame of external procedure cobol_ioerror.  
perform_mode                            internal procedure  shares stack frame of external procedure cobol_ioerror.  
perform_use                             internal procedure  shares stack frame of external procedure cobol_ioerror.  
set_status                              internal procedure  shares stack frame of external procedure cobol_ioerror.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 fixup_directive             cobol_ioerror
000012 mpout                       cobol_ioerror
000024 fkey_type9                  cobol_ioerror
000060 type1                       cobol_ioerror
000067 type19                      cobol_ioerror
000101 type3                       cobol_ioerror
000110 type7                       cobol_ioerror
000125 default_error_status        cobol_ioerror
000140 no_error_status             cobol_ioerror
000153 tra_instr                   cobol_ioerror
000154 tze_instr                   cobol_ioerror
000155 tnz_instr                   cobol_ioerror
000156 cmpa_dl_instr               cobol_ioerror
000157 cmpa_ind_instr              cobol_ioerror
000160 lda_instr                   cobol_ioerror
000162 lda_mode                    cobol_ioerror
000164 link_reloc                  cobol_ioerror

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cobol_ioerror            000100 preset_sw                   cobol_ioerror
                         000101 restart_ic                  cobol_ioerror
                         000102 perform_ic                  cobol_ioerror
                         000103 tag                         cobol_ioerror
                         000104 next_instr_tag              cobol_ioerror
                         000105 ntag                        cobol_ioerror
                         000106 pntag                       cobol_ioerror
                         000107 temp                        cobol_ioerror
                         000110 i                           cobol_ioerror
                         000111 mode_count                  cobol_ioerror
                         000112 off                         cobol_ioerror
                         000113 line_no                     cobol_ioerror
                         000114 fkey_ptr                    cobol_ioerror
                         000116 lda_sw                      cobol_ioerror
                         000117 fsbptr_sw                   cobol_ioerror
                         000120 perform_mode_sw             cobol_ioerror
                         000121 io_sw                       cobol_ioerror
                         000122 s1set                       cobol_ioerror
                         000123 s2set                       cobol_ioerror
                         000124 s1default                   cobol_ioerror
                         000125 s1                          cobol_ioerror

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
r_e_as              call_ext_out_desc   call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cobol_define_tag              cobol_emit                    cobol_make_fixup              cobol_make_link$type_4
cobol_make_tagref             cobol_move_gen                cobol_perform_gen             cobol_process_error
cobol_process_error$use       cobol_read_rand               cobol_set_fsbptr

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
cobol_$next_tag               cobol_$text_wd_off            cobol_ext_$cobol_com_ptr




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     25 000012       195 000024       197 000025       198 000027       199 000031       200 000035       201 000036
    202 000040       204 000041       206 000043       208 000050       209 000062       211 000067       212 000110
    213 000133       214 000134       215 000135       216 000136       218 000142       219 000154       220 000155
    222 000156       223 000164       225 000165       228 000166       231 000200       232 000207       233 000227
    235 000236       236 000240       238 000244       239 000265       240 000305       241 000306       242 000315
    244 000330       245 000333       246 000353       248 000354       250 000377       252 000405       253 000407
    255 000417       256 000425       258 000445       259 000466       260 000501       262 000504       263 000525
    264 000545       266 000546       267 000551       268 000552       269 000572       270 000612       271 000625
    272 000646       273 000666       275 000675       276 000677       277 000701       279 000713       280 000715
    281 000724       282 000725       283 000730       285 000747       286 000752       287 000753       289 000767
    290 000771       291 001011       293 001012       295 001034       297 001042       298 001044       300 001054
    301 001062       303 001102       304 001123       305 001143       306 001156       308 001163       309 001204
    310 001227       311 001230       312 001231       313 001240       314 001242       316 001250       318 001265
    319 001270       320 001271       322 001305       324 001327       326 001335       328 001342       330 001344
    332 001354       334 001375       335 001416       338 001436       339 001451       340 001452       341 001461
    343 001464       344 001473       346 001474       347 001475       349 001505       350 001514       352 001515
    353 001516       356 001517       357 001526       532 001527       535 001537       536 001541       537 001543
    538 001545       539 001546       540 001555       364 001556       366 001557       368 001561       369 001564
    370 001567       371 001607       373 001610       374 001613       378 001627       379 001630       381 001637
    383 001643       385 001647       387 001653       390 001657       391 001663       396 001726       401 001777
    406 002050       412 002107       413 002111       416 002123       418 002132       420 002141       421 002144
    422 002157       423 002163       424 002166       428 002206       430 002207       435 002211       436 002213
    438 002216       439 002221       440 002222       442 002227       443 002235       445 002237       447 002241
    448 002262       450 002264       452 002271       453 002276       454 002316       455 002337       458 002357
    459 002366       461 002400       465 002401       469 002403       471 002417       472 002422       473 002424
    474 002430       475 002432       476 002435       477 002441       478 002444       479 002454       480 002475
    482 002504       483 002506       484 002526       490 002527       495 002531       497 002540       498 002557
    499 002564       500 002566       501 002570       502 002572       503 002574       504 002576       505 002601
    506 002603       507 002606       508 002610       509 002617       510 002620       511 002623       513 002640
    515 002651       516 002666       517 002673       518 002675       519 002700       520 002707       521 002717
    524 002721       525 002730       527 002750


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
