	COMPILATION LISTING OF SEGMENT pps_put_chars
	Compiled by: Multics PL/I Compiler, Release 29, of July 28, 1986
	Compiled at: Honeywell Bull, Phoenix AZ, SysM
	Compiled on: 02/02/88  1648.2 mst Tue
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 pps_put_chars: proc (iocb_ptr_arg, buff_ptr_arg, n_bytes_arg, code);
       12 
       13 
       14 
       15 /*		PARAMETERS		*/
       16 
       17 
       18 dcl  buff_ptr_arg ptr;
       19 dcl  code fixed bin (35);
       20 dcl  iocb_ptr_arg ptr;
       21 dcl  n_bytes_arg fixed bin;
       22 
       23 
       24 /*		ENTRY CONSTANTS		*/
       25 
       26 
       27 dcl  pps_print entry (ptr, char (*), ptr, entry, fixed bin (35));
       28 dcl  prt_conv_ entry (ptr, fixed bin, ptr, fixed bin, ptr);
       29 
       30 
       31 /*		EXTERNAL DATA		*/
       32 
       33 
       34 
       35 
       36 /*		BUILTIN FUNCTIONS		*/
       37 
       38 
       39 dcl  addr builtin;
       40 dcl  substr builtin;
       41 
       42 
       43 /*		AUTOMATIC STORAGE		*/
       44 
       45 
       46 dcl  buff_ptr ptr;
       47 dcl  iocb_ptr ptr;
       48 dcl  n_bytes fixed bin;
       49 dcl  out_buf char (160);
       50 dcl  out_len fixed bin;
       51 dcl  out_ptr ptr;
       52 
       53 
       54 /*		CONSTANTS			*/
       55 
       56 
       57 
       58 
       59 /*		INTERNAL STATIC		*/
       60 
       61 
       62 
       63 
       64 /*		BASED VARIABLES		*/
       65 
       66 
       67 dcl  string char (256) based;
       68 
       69 /*
       70*
       71*   Initialize data.
       72*
       73**/
       74 
       75 
       76 	iocb_ptr = iocb_ptr_arg -> iocb.actual_iocb_ptr;
       77 	buff_ptr = buff_ptr_arg;
       78 	n_bytes = n_bytes_arg;
       79 	code = 0;
       80 	ppsab_ptr = iocb.attach_data_ptr;
       81 	pcip = addr (ppsab.pps_pci);
       82 
       83 
       84 /*
       85*
       86*   Now process the text supplied.
       87*
       88**/
       89 
       90 
       91 	out_ptr = addr (out_buf);
       92 	do while (n_bytes>0);
       93 	     call prt_conv_ (buff_ptr, n_bytes, out_ptr, out_len, pcip);
       94 	     if out_len > 0 then
       95 		call pps_print (ppsab.target_iocb_ptr, substr (out_buf, 1, out_len), ppsab.table_ptr, ppsab.mvt_entry, code);
       96 	     if code ^= 0 then return;
       97 	end;
       98 
       99 
      100 	return;
      101 
  1     1 
  1     2      dcl	   1 iocb		      aligned based (iocb_ptr),
  1     3 						/* I/O control block. */
  1     4 	     2 iocb_version	      fixed init (1),	/* Version number of structure. */
  1     5 	     2 name	      char (32),		/* I/O name of this block. */
  1     6 	     2 actual_iocb_ptr    ptr,		/* IOCB ultimately SYNed to. */
  1     7 	     2 attach_descrip_ptr ptr,		/* Ptr to printable attach description. */
  1     8 	     2 attach_data_ptr    ptr,		/* Ptr to attach data structure. */
  1     9 	     2 open_descrip_ptr   ptr,		/* Ptr to printable open description. */
  1    10 	     2 open_data_ptr      ptr,		/* Ptr to open data structure (old SDB). */
  1    11 	     2 reserved	      bit (72),		/* Reserved for future use. */
  1    12 	     2 detach_iocb	      entry (ptr, fixed (35)),/* detach_iocb(p,s) */
  1    13 	     2 open	      entry (ptr, fixed, bit (1) aligned, fixed (35)),
  1    14 						/* open(p,mode,not_used,s) */
  1    15 	     2 close	      entry (ptr, fixed (35)),/* close(p,s) */
  1    16 	     2 get_line	      entry (ptr, ptr, fixed (21), fixed (21), fixed (35)),
  1    17 						/* get_line(p,bufptr,buflen,actlen,s) */
  1    18 	     2 get_chars	      entry (ptr, ptr, fixed (21), fixed (21), fixed (35)),
  1    19 						/* get_chars(p,bufptr,buflen,actlen,s) */
  1    20 	     2 put_chars	      entry (ptr, ptr, fixed (21), fixed (35)),
  1    21 						/* put_chars(p,bufptr,buflen,s) */
  1    22 	     2 modes	      entry (ptr, char (*), char (*), fixed (35)),
  1    23 						/* modes(p,newmode,oldmode,s) */
  1    24 	     2 position	      entry (ptr, fixed, fixed (21), fixed (35)),
  1    25 						/* position(p,u1,u2,s) */
  1    26 	     2 control	      entry (ptr, char (*), ptr, fixed (35)),
  1    27 						/* control(p,order,infptr,s) */
  1    28 	     2 read_record	      entry (ptr, ptr, fixed (21), fixed (21), fixed (35)),
  1    29 						/* read_record(p,bufptr,buflen,actlen,s) */
  1    30 	     2 write_record	      entry (ptr, ptr, fixed (21), fixed (35)),
  1    31 						/* write_record(p,bufptr,buflen,s) */
  1    32 	     2 rewrite_record     entry (ptr, ptr, fixed (21), fixed (35)),
  1    33 						/* rewrite_record(p,bufptr,buflen,s) */
  1    34 	     2 delete_record      entry (ptr, fixed (35)),/* delete_record(p,s) */
  1    35 	     2 seek_key	      entry (ptr, char (256) varying, fixed (21), fixed (35)),
  1    36 						/* seek_key(p,key,len,s) */
  1    37 	     2 read_key	      entry (ptr, char (256) varying, fixed (21), fixed (35)),
  1    38 						/* read_key(p,key,len,s) */
  1    39 	     2 read_length	      entry (ptr, fixed (21), fixed (35));
  1    40 						/* read_length(p,len,s) */
  1    41 
      102 
      103 
  2     1 /*  Begin include file  ...  pps_attach_block.incl.pl1  */
  2     2 
  2     3 
  2     4 dcl  pps_attach_block_version_1 fixed bin static internal options (constant) init (1);
  2     5 dcl  ppsab_ptr ptr;
  2     6 
  2     7 dcl 1 ppsab based (ppsab_ptr) aligned,
  2     8     2 version fixed bin,
  2     9     2 attach_descrip char (256) varying,
  2    10     2 target_name char (32) unal,
  2    11     2 target_attach_descrip char (256) unal,
  2    12     2 detach_time_attach_descrip char (256) unal,
  2    13     2 target_iocb_ptr ptr,
  2    14     2 modes,
  2    15       3 debug bit (1) unal,
  2    16       3 no_print bit (1) unal,
  2    17       3 single_page bit (1) unal,
  2    18     2 ppscb_dir char (168) unal,
  2    19     2 ppscb_entry char (32) unal,
  2    20     2 ppscb_name char (32) unal,
  2    21     2 ppscb_ptr ptr,
  2    22     2 tape_density fixed bin,
  2    23     2 file_number fixed bin,
  2    24     2 file_name char (17),
  2    25     2 retain_option char (4) varying,
  2    26     2 volids char (256) varying,
  2    27     2 open_descrip char (256) varying,
  2    28     2 table_ptr ptr,
  2    29     2 mvt_entry entry,
  2    30     2 stop_every fixed bin (71),
  2    31     2 stop_count fixed bin (71),
  2    32     2 chars_printed fixed bin (35),
  2    33     2 paper_info,
  2    34       3 cpii fixed bin,
  2    35       3 lpii fixed bin,
  2    36       3 swi fixed bin,
  2    37       3 sli fixed bin,
  2    38     2 pps_pci like pci;
  2    39 
  3     1 
  3     2 /* BEGIN INCLUDE FILE ... prt_conv_info.incl.pl1 */
  3     3 /* Modified: 12 September 1980 by G. Palter */
  3     4 
  3     5 
  3     6 /****^  HISTORY COMMENTS:
  3     7*  1) change(87-05-10,Gilcrease), approve(87-07-31,MCR7686),
  3     8*     audit(88-02-01,Farley), install(88-02-02,MR12.2-1019):
  3     9*     Add modes.line_nbrs, flags.(eol eof)  bits for eor -nb.
  3    10*                                                   END HISTORY COMMENTS */
  3    11 
  3    12 
  3    13 dcl  pcip ptr;					/* pointer to conversion info structure */
  3    14 
  3    15 dcl 1 pci based (pcip) aligned,			/* printer conversion info structure */
  3    16     2 cv_proc ptr,					/* pointer to character conversion procedure */
  3    17     2 lmarg fixed bin,				/* left margin indentation */
  3    18     2 rmarg fixed bin,				/* right margin limit */
  3    19     2 page_length fixed bin,				/* number of lines on page */
  3    20     2 phys_line_length fixed bin,			/* physical width of paper */
  3    21     2 phys_page_length fixed bin,			/* physical length of paper */
  3    22     2 lpi fixed bin,				/* lines per inch */
  3    23     2 sheets_per_page fixed bin,			/* sheets of paper per logical page */
  3    24     2 line_count fixed bin,				/* count of converted lines */
  3    25     2 page_count fixed bin,				/* count of converted pages */
  3    26     2 func fixed bin,				/* special conversion function */
  3    27 						/* 0 => normal conversion */
  3    28 						/* 1 => change NL to FF */
  3    29 						/* 2 => change NL to top inside page */
  3    30 						/* 3 => change NL to end of page */
  3    31                                                             /* 4 => change NL to top of outside page */
  3    32     (2 modes,					/* conversion modes */
  3    33      3 overflow_off bit (1),				/* "1"b to suppress end of page overflow */
  3    34       3 single_space bit (1),				/* "1"b to change all forms advance chars to NL */
  3    35       3 non_edited bit (1),				/* "1"b to print ASCII control chars */
  3    36       3 truncate bit (1),				/* "1"b to truncate lines that are too long */
  3    37       3 esc bit (1),				/* "1"b to process ESC character */
  3    38       3 ctl_char bit (1),				/* "1"b to output control characters */
  3    39       3 line_nbrs bit (1),				/* "1"b to output line numbers */
  3    40       3 pci_pad bit (5),
  3    41     2 flags,					/* flags internal to prt_conv_ */
  3    42       3 ignore_next_ff bit (1),			/* ON => prt_conv_ just output a FF; ignore next character if
  3    43*						   it's a FF */
  3    44       3 eol bit (1),				/* "1"b = end-of-line encountered */
  3    45       3 eof bit (1),				/* "1"b = end-of-segment encountered */
  3    46       3 flags_pad bit (3),
  3    47     2 coroutine_modes,
  3    48       3 upper_case bit(1),				/* "1"b to convert to upper case */
  3    49       3 ht bit(1),					/* "1"b to skip tab conversion */
  3    50       3 coroutine_pad bit(13),
  3    51       3 slew_table_idx bit(3) ) unal,			/* slew table index */
  3    52     2 top_label_line char (136),			/* contains an optional top of page label */
  3    53     2 bot_label_line char (136),			/* contains an optional bottom of page label */
  3    54     2 top_label_length fixed bin,			/* length of top label line */
  3    55     2 bot_label_length fixed bin,			/* length of bottom label line */
  3    56     2 form_stops (256) unal,				/* logical form stops */
  3    57       3 lbits bit (9),				/* leftmost bits */
  3    58       3 rbits bit (9),				/* rightmost bits */
  3    59 
  3    60 /* The following items are for internal use by the print conversion procedure.
  3    61*   They should be zeroed once and then never referenced again.		*/
  3    62 
  3    63     2 level fixed bin,				/* overstrike level */
  3    64     2 pos fixed bin,				/* print position at end of incomplete line */
  3    65     2 line fixed bin,				/* current line number */
  3    66     2 slew_residue fixed bin,				/* number of lines remaining to be slewed */
  3    67     2 label_nelem fixed bin,				/* characters remaining in label */
  3    68     2 label_wksp ptr,				/* pointer to label being processed */
  3    69     2 sav_pos fixed bin,				/* position saved during label processing */
  3    70     2 esc_state fixed bin,				/* state of ESC processing */
  3    71     2 esc_num fixed bin,				/* number following ESC sequence */
  3    72     2 temp bit (36);				/* conversion proc temporary */
  3    73 
  3    74 /* End of include file ...... prt_conv_info.incl.pl1 */
  3    75 
  2    40 
  2    41 
  2    42 
  2    43 /*  End include file  ...  pps_attach_block.incl.pl1  */
      104 
      105 
      106 
      107      end pps_put_chars;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    02/02/88  1540.0  pps_put_chars.pl1                 >special_ldd>install>MR12.2-1019>pps_put_chars.pl1
102          1    07/02/81  1905.0  iocbv.incl.pl1                    >ldd>include>iocbv.incl.pl1
104          2    03/27/82  0438.0  pps_attach_block.incl.pl1         >ldd>include>pps_attach_block.incl.pl1
2-40         3    02/02/88  1529.2  prt_conv_info.incl.pl1            >special_ldd>install>MR12.2-1019>prt_conv_info.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
actual_iocb_ptr          12            based           pointer                  level 2 dcl 1-2 ref 76
addr                                                   builtin function         dcl 39 ref 81 91
attach_data_ptr          16            based           pointer                  level 2 dcl 1-2 ref 80
buff_ptr                        000100 automatic       pointer                  dcl 46 set ref 77* 93*
buff_ptr_arg                           parameter       pointer                  dcl 18 ref 11 77
code                                   parameter       fixed bin(35,0)          dcl 19 set ref 11 79* 94* 96
iocb                                   based           structure                level 1 dcl 1-2
iocb_ptr                        000102 automatic       pointer                  dcl 47 set ref 76* 80
iocb_ptr_arg                           parameter       pointer                  dcl 20 ref 11 76
mvt_entry               630            based           entry variable           level 2 dcl 2-7 set ref 94*
n_bytes                         000104 automatic       fixed bin(17,0)          dcl 48 set ref 78* 92 93*
n_bytes_arg                            parameter       fixed bin(17,0)          dcl 21 ref 11 78
out_buf                         000105 automatic       char(160)                unaligned dcl 49 set ref 91 94 94
out_len                         000155 automatic       fixed bin(17,0)          dcl 50 set ref 93* 94 94 94
out_ptr                         000156 automatic       pointer                  dcl 51 set ref 91* 93*
pci                                    based           structure                level 1 dcl 3-15
pcip                            000162 automatic       pointer                  dcl 3-13 set ref 81* 93*
pps_pci                 646            based           structure                level 2 dcl 2-7 set ref 81
pps_print                       000010 constant        entry                    external dcl 27 ref 94
ppsab                                  based           structure                level 1 dcl 2-7
ppsab_ptr                       000160 automatic       pointer                  dcl 2-5 set ref 80* 81 94 94 94
prt_conv_                       000012 constant        entry                    external dcl 28 ref 93
substr                                                 builtin function         dcl 40 ref 94 94
table_ptr               626            based           pointer                  level 2 dcl 2-7 set ref 94*
target_iocb_ptr         312            based           pointer                  level 2 dcl 2-7 set ref 94*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
pps_attach_block_version_1             internal static fixed bin(17,0)          initial dcl 2-4
string                                 based           char(256)                unaligned dcl 67

NAME DECLARED BY EXPLICIT CONTEXT.
pps_put_chars                   000012 constant        entry                    external dcl 11

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       172         206     131         202
Length       432     131        14         207      41           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
pps_put_chars                       154 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
pps_put_chars            000100 buff_ptr                    pps_put_chars
                         000102 iocb_ptr                    pps_put_chars
                         000104 n_bytes                     pps_put_chars
                         000105 out_buf                     pps_put_chars
                         000155 out_len                     pps_put_chars
                         000156 out_ptr                     pps_put_chars
                         000160 ppsab_ptr                   pps_put_chars
                         000162 pcip                        pps_put_chars

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_char_temp     call_ext_out_desc   call_ext_out        return_mac          shorten_stack       ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
pps_print                     prt_conv_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000005        76 000017        77 000024        78 000027        79 000031        80 000032        81 000034
     91 000036        92 000040        93 000042        94 000061        96 000123        97 000127       100 000130


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
