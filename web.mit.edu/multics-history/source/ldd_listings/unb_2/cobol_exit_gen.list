	COMPILATION LISTING OF SEGMENT cobol_exit_gen
	Compiled by: Multics PL/I Compiler, Release 33e, of October 6, 1992
	Compiled at: CGI                             
	Compiled on: 2000-04-18_1135.79_Tue_mdt
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        *********************************************************** */
        8 
        9 
       10 /****^  HISTORY COMMENTS:
       11*  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
       12*     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
       13*     MCR8060 cobol_exit_gen.pl1 Reformatted code to new Cobol standard.
       14*                                                   END HISTORY COMMENTS */
       15 
       16 
       17 /* Modified on 3/19/76 by Bob Chang to interface with the cobol_operators_. */
       18 /* ******************************************************
       19*   *                                                    *
       20*   *                                                    *
       21*   * Copyright (c) 1972 by Massachusetts Institute of   *
       22*   * Technology and Honeywell Information Systems, Inc. *
       23*   *                                                    *
       24*   *                                                    *
       25*   ****************************************************** */
       26 /* Modified on 03/14/77 by Bob Chang to fix the bug for register management.	*/
       27 /* Modified since Version 2.0	*/
       28 /*{*/
       29 /* format: style3 */
       30 cobol_exit_gen:
       31      proc (in_token_ptr);
       32 
       33 /*
       34*
       35*The procedure cobol_exit_gen generates code to implement the COBOL
       36*EXIT statement.  The format of this statement is as follows:
       37*
       38*     E_X_I_T_ [P_R_O_G_R_A_M_]
       39*
       40*The EXIT statement without the optional word PROGRAM serves only
       41*to enable the user to assign a procedure name to a given point in
       42*a program.  Such an EXIT statement has no other effect on the
       43*compilation or execution of the program.  Therefore, no code is
       44*generated for this version of the EXIT statement.
       45*
       46*The EXIT PROGRAM version of the EXIT statement causes control
       47*to be returned to the calling program but only if the program in
       48*which the EXIT PROGRAM statement appears is a called program as
       49*defined by COBOL standards.
       50*
       51*The procedure cobol_exit_gen also outputs relocation information for
       52*the code which it generates.
       53*
       54*
       55*U__s_a_g_e:_
       56*
       57*     declare cobol_exit_gen entry (ptr);
       58*
       59*     call cobol_exit_gen(in_token_ptr);
       60*
       61*						   */
       62 
  1     1 
  1     2 /*  BEGIN INCLUDE FILE ...   cobol_in_token.incl.pl1		  */
  1     3 
  1     4 /*  Last modified August 22, 1974 by AEG		  */
  1     5 
  1     6 
  1     7 declare in_token_ptr ptr;
  1     8 
  1     9 declare 1 in_token aligned based(in_token_ptr),
  1    10 	2 n fixed bin aligned,
  1    11 	2 code fixed bin aligned,
  1    12 	2 token_ptr(0 refer(in_token.n)) ptr aligned;
  1    13 
  1    14 
  1    15 /*  END INCLUDE FILE ...   cobol_in_token.incl.pl1		  */
  1    16 
       63 
       64 
       65 /*
       66*G__e_n_e_r_a_t_e_d_C__o_d_e:_
       67*
       68*The following code is generated for the EXIT PROGRAM version of
       69*the EXIT statement:
       70*
       71*     lda    pr4|sw_off	stat.main_prog_sw
       72*     tnz    2,ic
       73*     tra    pr0|return_
       74*
       75*where:
       76*return_ is the location, relative to the label operator_table in
       77*        cobol_operators_, of an unconditional transfer to the first
       78*        instruction of the operator return_mac.  The current
       79*        value of return_ is 409.
       80*
       81*sw_off  is the offset, relative to the base of the linkage sec-
       82*        tion, of stat.main_prog_sw.  Stat.main_prog_sw is de-
       83*        fined in fixed_static.incl.pl1.
       84*
       85*						   */
       86 
       87 /*
       88*R__e_l_o_c_a_t_i_o_n_I__n_f_o_r_m_a_t_i_o_n:_
       89*
       90*All instructions generated directly by procedure cobol_exit_gen (as
       91*opposed to being generated by a utility called by cobol_exit_gen)
       92*are non-relocatable with the exception of the left hand (address)
       93*half of the instruction "lda  pr4|sw_off".  The relocation code
       94*generated for the address half of this instruction is "10100"b.
       95*The relocation code generated for all other half words is
       96*"00000"b.
       97*
       98*						   */
       99 
      100 /*
      101*D__a_t_a:_
      102*
      103*     % include cobol_;
      104*
      105*	Items in cobol_.incl.pl1 used (u) and/or set (s)
      106*	by cobol_exit_gen;
      107*
      108*	     link_base_ptr (u)
      109*
      110*						   */
      111 
  2     1 
  2     2 /* BEGIN INCLUDE FILE ...   cobol_fixed_static.incl.pl1 */
  2     3 /* Last Modified May 5, 1977 by BC */
  2     4 
  2     5 /* This structure exists in the static data portion of the
  2     6*linkage section of each cobol object segment.  This
  2     7*include file provides a "based" template for it. */
  2     8 
  2     9 /*  This include file also contains internal static initialized
  2    10*variables that define the offset of each field in this static
  2    11*data portion of the linkage section from the  
  2    12*pointer upon which it is based.  */
  2    13 
  2    14 
  2    15 /*  WARNING:  The fields in this structure,data_ptr
  2    16*up to, but not including reserved,
  2    17*must retain their positions in this structure forever.
  2    18*No new fields not having space already allocated may be
  2    19*defined as the position of the first link which follows
  2    20*this fixed static area (to cobol_rts_) is in a fixed location
  2    21*known to cobol_operators_. */
  2    22 dcl stat_ptr ptr;
  2    23 dcl 1 stat based(stat_ptr) aligned,
  2    24      2 data_ptr ptr aligned,
  2    25      2 control_ptr ptr aligned,
  2    26      2 file_info_ptr ptr aligned,
  2    27      2 call_cnt fixed bin aligned,
  2    28      2 data_len fixed bin aligned,
  2    29      2 entry_pt_ptr ptr aligned,
  2    30      2 prog_id_len fixed bin aligned,
  2    31      2 prog_id char(65) aligned,
  2    32      2 line_no (2) fixed bin aligned,
  2    33      2 fo_flag fixed bin aligned,
  2    34      2 fo_disp fixed bin aligned,
  2    35      2 main_prog_sw fixed bin aligned,
  2    36      2 sort_merge_sw fixed bin aligned,
  2    37      2 ind_mask bit(36),	/* overflow masking indicator bits.	*/
  2    38      2 pr3_save ptr,
  2    39      2 pr5_save ptr,
  2    40      2 user_output_ptr ptr,
  2    41      2 error_output_ptr ptr,
  2    42      2 user_input_ptr ptr,
  2    43      2 error_con char(30) varying,
  2    44     2 trace_control_word fixed bin aligned;
  2    45 
  2    46 
  2    47 /*  INTERNAL STATIC INITIALIZED VARIABLES THAT DEFINE THE
  2    48*OFFSET OF EACH FIELD IN THE STATIC PORTION OF THE LINKAGE
  2    49*SEGMENT.  */
  2    50 
  2    51 dcl fixed_static_length		fixed bin static options(constant) init(56);
  2    52 dcl first_link_offset		fixed bin static options(constant) init(64);
  2    53 /*dcl stat_data_ptr_off		fixed bin static options(constant) init(0);
  2    54*/*dcl stat_control_ptr_off		fixed bin static options(constant) init(2);
  2    55*/*dcl stat_file_info_ptr_off		fixed bin static options(constant) init(4);
  2    56*/*dcl stat_call_cnt_off		fixed bin static options(constant) init(6);
  2    57*/*dcl stat_data_len_off		fixed bin static options(constant) init(7);
  2    58*/*dcl stat_entry_pt_ptr_off		fixed bin static options(constant) init(8);
  2    59*/*dcl stat_prog_id_len_off		fixed bin static options(constant) init(10);
  2    60*/*dcl stat_prog_id_off		fixed bin static options(constant) init(11);
  2    61*/*dcl stat_line_no_off		fixed bin static options(constant) init(28);
  2    62*/*dcl stat_fo_flag_off		fixed bin static options(constant) init(30);
  2    63*/*dcl stat_fo_disp_off		fixed bin static options(constant) init(31);
  2    64*/*dcl stat_main_prog_sw_off		fixed bin static options(constant) init(32);
  2    65*/*dcl stat_pr3_ptr_off		fixed bin static options(constant) init(34);
  2    66*/*dcl stat_pr5_ptr_off		fixed bin static options(constant) init(36);
  2    67*/*dcl stat_user_output_ptr_off		fixed bin static options(constant) init(38);
  2    68*/*dcl stat_error_output_ptr_off		fixed bin static options(constant) init(40);
  2    69*/*dcl stat_user_input_ptr_off		fixed bin static options(constant) init(42);
  2    70*/*dcl stat_error_con_off		fixed bin static options(constant) init(44);
  2    71*/*dcl stat_trace_control_word_off	fixed bin static options(constant) init(53);
  2    72*/**/
  2    73 
  2    74 /* END INCLUDE FILE ...   cobol_fixed_static.incl.pl1 */
  2    75 
      112 
      113 
  3     1 
  3     2 /* BEGIN INCLUDE FILE ... cobol_type19.incl.pl1 */
  3     3 /* last modified on 11/19/76 by ORN */
  3     4 
  3     5 /*
  3     6*A type 19 end of statement token is created in the procedure division
  3     7*minpral file at the end of each minpral statement generated by the
  3     8*procedure division syntax phase.  A minpral statement may be a complete or
  3     9*partial source language statement.  A type 19 token contains information
  3    10*describing the statement which it delimits.
  3    11**/
  3    12 
  3    13 dcl eos_ptr ptr;
  3    14 
  3    15 /* BEGIN DECLARATION OF TYPE19 (END STATEMENT) TOKEN */
  3    16 dcl	1 end_stmt based (eos_ptr),
  4     1 
  4     2 /* begin include file ... cobol_TYPE19.incl.pl1 */
  4     3 /* Last modified on 11/17/76 by ORN */
  4     4 
  4     5 		/* header */
  4     6 		2 size fixed bin,
  4     7 		2 line fixed bin,
  4     8 		2 column fixed bin,
  4     9 		2 type fixed bin,
  4    10 		/* body */
  4    11 		2 verb fixed bin,
  4    12 		2 e fixed bin,
  4    13 		2 h fixed bin,
  4    14 		2 i fixed bin,
  4    15 		2 j fixed bin,
  4    16 		2 a bit (3),
  4    17 		2 b bit (1),
  4    18 		2 c bit (1),
  4    19 		2 d bit (2),
  4    20 		2 f bit (2),
  4    21 		2 g bit (2),
  4    22 		2 k bit (5),
  4    23 		2 always_an bit (1);
  4    24 
  4    25 /* end include file ... cobol_TYPE19.incl.pl1 */
  4    26 
  3    17 
  3    18 /* END DECLARATION OF TYPE19 (END STATEMENT) TOKEN */
  3    19 
  3    20 /*
  3    21*FIELD		CONTENTS
  3    22*
  3    23*size		The total size in bytes of this end of statement token.
  3    24*line		0
  3    25*column		0
  3    26*type		19
  3    27*verb		A value indicating the verb in this statement
  3    28*		 1 = accept
  3    29*		 2 = add
  3    30*		 3 = on size error
  3    31*		 4 = alter
  3    32*		 5 = call
  3    33*		 7 = cancel
  3    34*		 8 = close
  3    35*		 9 = divide
  3    36*		10 = multiply
  3    37*		11 = subtract
  3    38*		12 = exit
  3    39*		14 = go
  3    40*		15 = merge
  3    41*		16 = initiate
  3    42*		17 = inspect
  3    43*		18 = move
  3    44*		19 = open
  3    45*		20 = perform
  3    46*		21 = read
  3    47*		23 = receive
  3    48*		24 = release
  3    49*		25 = return
  3    50*		26 = search
  3    51*		27 = rewrite
  3    52*		29 = seek
  3    53*		30 = send
  3    54*		31 = set
  3    55*		33 = stop
  3    56*		34 = string
  3    57*		35 = suspend
  3    58*		36 = terminate
  3    59*		37 = unstring
  3    60*		38 = write
  3    61*		39 = use
  3    62*		40 = compute
  3    63*		41 = disable
  3    64*		42 = display
  3    65*		43 = enable
  3    66*		45 = generate
  3    67*		46 = hold
  3    68*		48 = process
  3    69*		49 = sort
  3    70*		52 = procedure
  3    71*		53 = declaratives
  3    72*		54 = section name
  3    73*		55 = paragraph name
  3    74*		98 = end
  3    75*e,h,i,j		The significance of these fields differs with each
  3    76*		statement.  These fields are normally used as counters.
  3    77*a,b,c,d,f,g,k	The significance of these fields differs with each
  3    78*		statement.  These fields are normally used as indicators.
  3    79**/
  3    80 
  3    81 /* END INCLUDE FILE ... cobol_type19.incl.pl1 */
  3    82 
      114 
      115 
      116 /*  Input structure for cobol_register$load		   */
      117 
      118 declare	1 register_request	aligned static,
      119 	  2 requested_reg	fixed bin aligned init (1),
      120 	  2 assigned_reg	bit (4) aligned,
      121 	  2 lock		fixed bin aligned init (0),
      122 	  2 reg_set_now	fixed bin aligned,
      123 	  2 use_code	fixed bin aligned init (0),
      124 	  2 adjust_ptr_addr fixed bin aligned init (0),
      125 	  2 content_ptr	ptr aligned init (null),
      126 	  2 literal_content bit (36) aligned init ((36)"0"b);
      127 
      128 /*
      129*requested_reg   is a code designating the register requested;
      130*		0  - a- or q- or any index-register
      131*		1  - a-register
      132*		2  - q-register
      133*		3  - a- and q-register
      134*		4  - a- or q-register
      135*		5  - any index-register
      136*		1n - index-register n
      137*
      138*assigned_reg    is a code designating the register assigned.  It
      139*	      has no significance if a specific register is
      140*	      requested.
      141*
      142*lock	      indicates locking requirements; 0 requests that
      143*	      no change be made in register status.
      144*
      145*reg_set_now     not applicable for use_code = 0.
      146*
      147*use_code 	      specifies how the register is to be used by the
      148*	      requester; 0 signifies that such information is
      149*	      not meaningful for register optimization.
      150*
      151*adjust_ptr_addr inserted to make evident that since all pointers
      152*	      must be allocated on even word boundaries, the
      153*	      pl1 compiler will allocate structures containing
      154*	      pointers and all pointers therein on even word  
      155*	      boundaries leaving "gaps" where necessary.
      156*
      157*content_ptr     not applicable for use_code = 0.
      158*
      159*literal_content not applicable for use_code = 0.
      160*						   */
      161 
      162 dcl	inst_seq		(6) bit (18) unaligned static init ("100000000000000000"b, "010011101001000000"b,
      163 						/*  lda    pr4|0    */
      164 			"000000000000000010"b, "110000001000000100"b,
      165 						/*  tnz    2,ic     */
      166 			"000000000000000011"b, "111001000001000000"b);
      167 						/*  tra    pr0|3  */
      168 
      169 dcl	rel_seq		(6) bit (5) aligned static
      170 			init ("11001"b, "00000"b, "00000"b, "00000"b, "00000"b, "00000"b);
      171 
      172 dcl	temp		fixed bin;
      173 
      174 /*
      175*P__r_o_c_e_d_u_r_e_s__c_a_l_l_e_d:_
      176*						   */
      177 
      178 dcl	cobol_emit	entry (ptr, ptr, fixed bin),
      179 	cobol_reset_r$in_line
      180 			entry,
      181 	cobol_pointer_register$call
      182 			entry,
      183 	cobol_register$load entry (ptr);
      184 
      185 /*
      186*B__u_i_l_t-__i_n_F__u_n_c_t_i_o_n_s_U__s_e_d:_
      187*						   */
      188 
      189 dcl	addr		builtin,
      190 	null		builtin,
      191 	rel		builtin;
      192 
      193 /*}*/
      194 
  5     1 
  5     2 /* BEGIN INCLUDE FILE ... cobol_.incl.pl1 */
  5     3 /* last modified Feb 4, 1977 by ORN  */
  5     4 
  5     5 /* This file defines all external data used in the generator phase of Multics Cobol */
  5     6 
  5     7 /* POINTERS */
  5     8 dcl cobol_$text_base_ptr ptr  ext;
  5     9 dcl text_base_ptr ptr  defined (cobol_$text_base_ptr);
  5    10 dcl cobol_$con_end_ptr ptr  ext;
  5    11 dcl con_end_ptr ptr  defined (cobol_$con_end_ptr);
  5    12 dcl cobol_$def_base_ptr ptr  ext;
  5    13 dcl def_base_ptr ptr  defined (cobol_$def_base_ptr);
  5    14 dcl cobol_$link_base_ptr ptr  ext;
  5    15 dcl link_base_ptr ptr  defined (cobol_$link_base_ptr);
  5    16 dcl cobol_$sym_base_ptr ptr  ext;
  5    17 dcl sym_base_ptr ptr  defined (cobol_$sym_base_ptr);
  5    18 dcl cobol_$reloc_text_base_ptr ptr  ext;
  5    19 dcl reloc_text_base_ptr ptr  defined (cobol_$reloc_text_base_ptr);
  5    20 dcl cobol_$reloc_def_base_ptr ptr  ext;
  5    21 dcl reloc_def_base_ptr ptr  defined (cobol_$reloc_def_base_ptr);
  5    22 dcl cobol_$reloc_link_base_ptr ptr  ext;
  5    23 dcl reloc_link_base_ptr ptr  defined (cobol_$reloc_link_base_ptr);
  5    24 dcl cobol_$reloc_sym_base_ptr ptr  ext;
  5    25 dcl reloc_sym_base_ptr ptr  defined (cobol_$reloc_sym_base_ptr);
  5    26 dcl cobol_$reloc_work_base_ptr ptr  ext;
  5    27 dcl reloc_work_base_ptr ptr  defined (cobol_$reloc_work_base_ptr);
  5    28 dcl cobol_$pd_map_ptr ptr  ext;
  5    29 dcl pd_map_ptr ptr  defined (cobol_$pd_map_ptr);
  5    30 dcl cobol_$fixup_ptr ptr  ext;
  5    31 dcl fixup_ptr ptr  defined (cobol_$fixup_ptr);
  5    32 dcl cobol_$initval_base_ptr ptr  ext;
  5    33 dcl initval_base_ptr ptr  defined (cobol_$initval_base_ptr);
  5    34 dcl cobol_$initval_file_ptr ptr  ext;
  5    35 dcl initval_file_ptr ptr  defined (cobol_$initval_file_ptr);
  5    36 dcl cobol_$perform_list_ptr ptr  ext;
  5    37 dcl perform_list_ptr ptr  defined (cobol_$perform_list_ptr);
  5    38 dcl cobol_$alter_list_ptr ptr  ext;
  5    39 dcl alter_list_ptr ptr  defined (cobol_$alter_list_ptr);
  5    40 dcl cobol_$seg_init_list_ptr ptr  ext;
  5    41 dcl seg_init_list_ptr ptr  defined (cobol_$seg_init_list_ptr);
  5    42 dcl cobol_$temp_token_area_ptr ptr  ext;
  5    43 dcl temp_token_area_ptr ptr  defined (cobol_$temp_token_area_ptr);
  5    44 dcl cobol_$temp_token_ptr ptr  ext;
  5    45 dcl temp_token_ptr ptr  defined (cobol_$temp_token_ptr);
  5    46 dcl cobol_$token_block1_ptr ptr  ext;
  5    47 dcl token_block1_ptr ptr  defined (cobol_$token_block1_ptr);
  5    48 dcl cobol_$token_block2_ptr ptr  ext;
  5    49 dcl token_block2_ptr ptr  defined (cobol_$token_block2_ptr);
  5    50 dcl cobol_$minpral5_ptr ptr  ext;
  5    51 dcl minpral5_ptr ptr  defined (cobol_$minpral5_ptr);
  5    52 dcl cobol_$tag_table_ptr ptr  ext;
  5    53 dcl tag_table_ptr ptr  defined (cobol_$tag_table_ptr);
  5    54 dcl cobol_$map_data_ptr ptr  ext;
  5    55 dcl map_data_ptr ptr  defined (cobol_$map_data_ptr);
  5    56 dcl cobol_$ptr_status_ptr ptr  ext;
  5    57 dcl ptr_status_ptr ptr  defined (cobol_$ptr_status_ptr);
  5    58 dcl cobol_$reg_status_ptr ptr  ext;
  5    59 dcl reg_status_ptr ptr  defined (cobol_$reg_status_ptr);
  5    60 dcl cobol_$misc_base_ptr ptr ext;
  5    61 dcl misc_base_ptr ptr defined (cobol_$misc_base_ptr);
  5    62 dcl cobol_$misc_end_ptr ptr ext;
  5    63 dcl misc_end_ptr ptr defined (cobol_$misc_end_ptr);
  5    64 dcl cobol_$list_ptr ptr ext;
  5    65 dcl list_ptr ptr defined (cobol_$list_ptr);
  5    66 dcl cobol_$allo1_ptr ptr ext;
  5    67 dcl allo1_ptr ptr defined (cobol_$allo1_ptr);
  5    68 dcl cobol_$eln_ptr ptr ext;
  5    69 dcl eln_ptr ptr defined (cobol_$eln_ptr);
  5    70 dcl cobol_$diag_ptr ptr ext;
  5    71 dcl diag_ptr ptr defined (cobol_$diag_ptr);
  5    72 dcl cobol_$xref_token_ptr ptr ext;
  5    73 dcl xref_token_ptr ptr defined (cobol_$xref_token_ptr);
  5    74 dcl cobol_$xref_chain_ptr ptr ext;
  5    75 dcl xref_chain_ptr ptr defined (cobol_$xref_chain_ptr);
  5    76 dcl cobol_$statement_info_ptr ptr ext;
  5    77 dcl statement_info_ptr ptr defined (cobol_$statement_info_ptr);
  5    78 dcl cobol_$reswd_ptr ptr ext;
  5    79 dcl reswd_ptr ptr defined (cobol_$reswd_ptr);
  5    80 dcl cobol_$op_con_ptr ptr ext;
  5    81 dcl op_con_ptr ptr defined (cobol_$op_con_ptr);
  5    82 dcl cobol_$ntbuf_ptr ptr ext;
  5    83 dcl ntbuf_ptr ptr defined (cobol_$ntbuf_ptr);
  5    84 dcl cobol_$main_pcs_ptr ptr ext;
  5    85 dcl main_pcs_ptr ptr defined (cobol_$main_pcs_ptr);
  5    86 dcl cobol_$include_info_ptr ptr ext;
  5    87 dcl include_info_ptr ptr defined (cobol_$include_info_ptr);
  5    88 
  5    89 /* FIXED BIN */
  5    90 dcl cobol_$text_wd_off fixed bin  ext;
  5    91 dcl text_wd_off fixed bin  defined (cobol_$text_wd_off);
  5    92 dcl cobol_$con_wd_off fixed bin  ext;
  5    93 dcl con_wd_off fixed bin  defined (cobol_$con_wd_off);
  5    94 dcl cobol_$def_wd_off fixed bin  ext;
  5    95 dcl def_wd_off fixed bin  defined (cobol_$def_wd_off);
  5    96 dcl cobol_$def_max fixed bin  ext;
  5    97 dcl def_max fixed bin  defined (cobol_$def_max);
  5    98 dcl cobol_$link_wd_off fixed bin  ext;
  5    99 dcl link_wd_off fixed bin  defined (cobol_$link_wd_off);
  5   100 dcl cobol_$link_max fixed bin  ext;
  5   101 dcl link_max fixed bin  defined (cobol_$link_max);
  5   102 dcl cobol_$sym_wd_off fixed bin  ext;
  5   103 dcl sym_wd_off fixed bin  defined (cobol_$sym_wd_off);
  5   104 dcl cobol_$sym_max fixed bin  ext;
  5   105 dcl sym_max fixed bin  defined (cobol_$sym_max);
  5   106 dcl cobol_$reloc_text_max fixed bin(24)  ext;
  5   107 dcl reloc_text_max fixed bin(24)  defined (cobol_$reloc_text_max);
  5   108 dcl cobol_$reloc_def_max fixed bin(24)  ext;
  5   109 dcl reloc_def_max fixed bin(24)  defined (cobol_$reloc_def_max);
  5   110 dcl cobol_$reloc_link_max fixed bin(24)  ext;
  5   111 dcl reloc_link_max fixed bin(24)  defined (cobol_$reloc_link_max);
  5   112 dcl cobol_$reloc_sym_max fixed bin(24)  ext;
  5   113 dcl reloc_sym_max fixed bin(24)  defined (cobol_$reloc_sym_max);
  5   114 dcl cobol_$reloc_work_max fixed bin(24)  ext;
  5   115 dcl reloc_work_max fixed bin(24)  defined (cobol_$reloc_work_max);
  5   116 dcl cobol_$pd_map_index fixed bin  ext;
  5   117 dcl pd_map_index fixed bin  defined (cobol_$pd_map_index);
  5   118 dcl cobol_$cobol_data_wd_off fixed bin  ext;
  5   119 dcl cobol_data_wd_off fixed bin  defined (cobol_$cobol_data_wd_off);
  5   120 dcl cobol_$stack_off fixed bin  ext;
  5   121 dcl stack_off fixed bin  defined (cobol_$stack_off);
  5   122 dcl cobol_$max_stack_off fixed bin  ext;
  5   123 dcl max_stack_off fixed bin  defined (cobol_$max_stack_off);
  5   124 dcl cobol_$init_stack_off fixed bin  ext;
  5   125 dcl init_stack_off fixed bin  defined (cobol_$init_stack_off);
  5   126 dcl cobol_$pd_map_sw fixed bin  ext;
  5   127 dcl pd_map_sw fixed bin  defined (cobol_$pd_map_sw);
  5   128 dcl cobol_$next_tag fixed bin  ext;
  5   129 dcl next_tag fixed bin  defined (cobol_$next_tag);
  5   130 dcl cobol_$data_init_flag fixed bin  ext;
  5   131 dcl data_init_flag fixed bin  defined (cobol_$data_init_flag);
  5   132 dcl cobol_$seg_init_flag fixed bin  ext;
  5   133 dcl seg_init_flag fixed bin  defined (cobol_$seg_init_flag);
  5   134 dcl cobol_$alter_flag fixed bin  ext;
  5   135 dcl alter_flag fixed bin  defined (cobol_$alter_flag);
  5   136 dcl cobol_$sect_eop_flag fixed bin  ext;
  5   137 dcl sect_eop_flag fixed bin  defined (cobol_$sect_eop_flag);
  5   138 dcl cobol_$para_eop_flag fixed bin  ext;
  5   139 dcl para_eop_flag fixed bin  defined (cobol_$para_eop_flag);
  5   140 dcl cobol_$priority_no fixed bin  ext;
  5   141 dcl priority_no fixed bin  defined (cobol_$priority_no);
  5   142 dcl cobol_$compile_count fixed bin ext;
  5   143 dcl compile_count fixed bin defined (cobol_$compile_count);
  5   144 dcl cobol_$ptr_assumption_ind fixed bin ext;
  5   145 dcl ptr_assumption_ind fixed bin defined (cobol_$ptr_assumption_ind);
  5   146 dcl cobol_$reg_assumption_ind fixed bin ext;
  5   147 dcl reg_assumption_ind fixed bin defined (cobol_$reg_assumption_ind);
  5   148 dcl cobol_$perform_para_index fixed bin ext;
  5   149 dcl perform_para_index fixed bin defined (cobol_$perform_para_index);
  5   150 dcl cobol_$perform_sect_index fixed bin ext;
  5   151 dcl perform_sect_index fixed bin defined (cobol_$perform_sect_index);
  5   152 dcl cobol_$alter_index fixed bin ext;
  5   153 dcl alter_index fixed bin defined (cobol_$alter_index);
  5   154 dcl cobol_$list_off fixed bin ext;
  5   155 dcl list_off fixed bin defined (cobol_$list_off);
  5   156 dcl cobol_$constant_offset fixed bin ext;
  5   157 dcl constant_offset fixed bin defined (cobol_$constant_offset);
  5   158 dcl cobol_$misc_max fixed bin ext;
  5   159 dcl misc_max fixed bin defined (cobol_$misc_max);
  5   160 dcl cobol_$pd_map_max fixed bin ext;
  5   161 dcl pd_map_max fixed bin defined (cobol_$pd_map_max);
  5   162 dcl cobol_$map_data_max fixed bin ext;
  5   163 dcl map_data_max fixed bin defined (cobol_$map_data_max);
  5   164 dcl cobol_$fixup_max fixed bin ext;
  5   165 dcl fixup_max fixed bin defined (cobol_$fixup_max);
  5   166 dcl cobol_$tag_table_max fixed bin ext;
  5   167 dcl tag_table_max fixed bin defined (cobol_$tag_table_max);
  5   168 dcl cobol_$temp_token_max fixed bin ext;
  5   169 dcl temp_token_max fixed bin defined (cobol_$temp_token_max);
  5   170 dcl cobol_$allo1_max fixed bin ext;
  5   171 dcl allo1_max fixed bin defined (cobol_$allo1_max);
  5   172 dcl cobol_$eln_max fixed bin ext;
  5   173 dcl eln_max fixed bin defined (cobol_$eln_max);
  5   174 dcl cobol_$debug_enable fixed bin ext;
  5   175 dcl debug_enable fixed bin defined (cobol_$debug_enable);
  5   176 dcl cobol_$non_source_offset fixed bin ext;
  5   177 dcl non_source_offset fixed bin defined (cobol_$non_source_offset);
  5   178 dcl cobol_$initval_flag fixed bin ext;
  5   179 dcl initval_flag fixed bin defined (cobol_$initval_flag);
  5   180 dcl cobol_$date_compiled_sw fixed bin ext;
  5   181 dcl date_compiled_sw fixed bin defined (cobol_$date_compiled_sw);
  5   182 dcl cobol_$include_cnt fixed bin ext;
  5   183 dcl include_cnt fixed bin defined (cobol_$include_cnt);
  5   184 dcl cobol_$fs_charcnt fixed bin ext;
  5   185 dcl fs_charcnt fixed bin defined (cobol_$fs_charcnt);
  5   186 dcl cobol_$ws_charcnt fixed bin ext;
  5   187 dcl ws_charcnt fixed bin defined (cobol_$ws_charcnt);
  5   188 dcl cobol_$coms_charcnt fixed bin ext;
  5   189 dcl coms_charcnt fixed bin defined (cobol_$coms_charcnt);
  5   190 dcl cobol_$ls_charcnt fixed bin ext;
  5   191 dcl ls_charcnt fixed bin defined (cobol_$ls_charcnt);
  5   192 dcl cobol_$cons_charcnt fixed bin ext;
  5   193 dcl cons_charcnt fixed bin defined (cobol_$cons_charcnt);
  5   194 dcl cobol_$value_cnt fixed bin ext;
  5   195 dcl value_cnt fixed bin defined (cobol_$value_cnt);
  5   196 dcl cobol_$cd_cnt fixed bin ext;
  5   197 dcl cd_cnt fixed bin defined (cobol_$cd_cnt);
  5   198 dcl cobol_$fs_wdoff fixed bin ext;
  5   199 dcl fs_wdoff fixed bin defined (cobol_$fs_wdoff);
  5   200 dcl cobol_$ws_wdoff fixed bin ext;
  5   201 dcl ws_wdoff fixed bin defined (cobol_$ws_wdoff);
  5   202 dcl cobol_$coms_wdoff fixed bin ext;
  5   203 dcl coms_wdoff fixed bin defined (cobol_$coms_wdoff);
  5   204 
  5   205 /* CHARACTER */
  5   206 dcl cobol_$scratch_dir char (168)   aligned ext;
  5   207 dcl scratch_dir char (168)   aligned defined (cobol_$scratch_dir);			/* -42- */
  5   208 dcl cobol_$obj_seg_name char (32)   aligned ext;
  5   209 dcl obj_seg_name char (32)   aligned defined (cobol_$obj_seg_name);		/* -8- */
  5   210 
  5   211 /* BIT */
  5   212 dcl cobol_$xref_bypass bit(1) aligned ext;
  5   213 dcl xref_bypass bit(1) aligned defined (cobol_$xref_bypass);			/* -1- */
  5   214 dcl cobol_$same_sort_merge_proc bit(1) aligned ext;
  5   215 dcl same_sort_merge_proc bit(1) aligned defined (cobol_$same_sort_merge_proc);		/* -1- */
  5   216 
  5   217 
  5   218 /* END INCLUDE FILE ... cobol_incl.pl1*/
  5   219 
  5   220 
      195 
      196 
      197 start:						/*  EMIT CODE AND RELOCATION INFORMATION AS REQUIRED	   */
      198 	if in_token.token_ptr (in_token.n) -> end_stmt.b = "0"b
      199 	then ;
      200 	else do;
      201 		call cobol_pointer_register$call;
      202 		call cobol_register$load (addr (register_request));
      203 		temp = 40;			/* stat_main_prog_sw_off+8	*/
      204 		substr (inst_seq (1), 4, 15) = substr (unspec (temp), 22, 15);
      205 		call cobol_emit (addr (inst_seq), addr (rel_seq), 3);
      206 		call cobol_reset_r$in_line;
      207 	     end;
      208 
      209 exit:
      210 	return;
      211 
      212      end cobol_exit_gen;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    04/18/00  1135.7  cobol_exit_gen.pl1                >udd>sm>ds>w>ml>cobol_exit_gen.pl1
63           1    11/11/82  1812.7  cobol_in_token.incl.pl1           >ldd>incl>cobol_in_token.incl.pl1
112          2    10/10/83  1830.8  cobol_fixed_static.incl.pl1       >ldd>incl>cobol_fixed_static.incl.pl1
114          3    03/27/82  0539.8  cobol_type19.incl.pl1             >ldd>incl>cobol_type19.incl.pl1
3-17         4    03/27/82  0539.6  cobol_TYPE19.incl.pl1             >ldd>incl>cobol_TYPE19.incl.pl1
195          5    11/11/82  1812.7  cobol_.incl.pl1                   >ldd>incl>cobol_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 189 ref 202 202 205 205 205 205
b                        11(03)        based           bit(1)                   level 2 packed packed unaligned dcl 3-16 ref 197
cobol_emit                      000032 constant        entry                    external dcl 178 ref 205
cobol_pointer_register$call     000036 constant        entry                    external dcl 178 ref 201
cobol_register$load             000040 constant        entry                    external dcl 178 ref 202
cobol_reset_r$in_line           000034 constant        entry                    external dcl 178 ref 206
end_stmt                               based           structure                level 1 unaligned dcl 3-16
in_token                               based           structure                level 1 dcl 1-9
in_token_ptr                           parameter       pointer                  dcl 1-7 ref 30 197 197
inst_seq                        000021 internal static bit(18)                  initial array packed unaligned dcl 162 set ref 204*
                                                                                  205 205
n                                      based           fixed bin(17,0)          level 2 dcl 1-9 ref 197
register_request                000010 internal static structure                level 1 dcl 118 set ref 202 202
rel_seq                         000024 internal static bit(5)                   initial array dcl 169 set ref 205 205
temp                            000100 automatic       fixed bin(17,0)          dcl 172 set ref 203* 204
token_ptr                 2            based           pointer                  array level 2 dcl 1-9 ref 197

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
allo1_max                              defined         fixed bin(17,0)          dcl 5-171
allo1_ptr                              defined         pointer                  dcl 5-67
alter_flag                             defined         fixed bin(17,0)          dcl 5-135
alter_index                            defined         fixed bin(17,0)          dcl 5-153
alter_list_ptr                         defined         pointer                  dcl 5-39
cd_cnt                                 defined         fixed bin(17,0)          dcl 5-197
cobol_$allo1_max                       external static fixed bin(17,0)          dcl 5-170
cobol_$allo1_ptr                       external static pointer                  dcl 5-66
cobol_$alter_flag                      external static fixed bin(17,0)          dcl 5-134
cobol_$alter_index                     external static fixed bin(17,0)          dcl 5-152
cobol_$alter_list_ptr                  external static pointer                  dcl 5-38
cobol_$cd_cnt                          external static fixed bin(17,0)          dcl 5-196
cobol_$cobol_data_wd_off               external static fixed bin(17,0)          dcl 5-118
cobol_$compile_count                   external static fixed bin(17,0)          dcl 5-142
cobol_$coms_charcnt                    external static fixed bin(17,0)          dcl 5-188
cobol_$coms_wdoff                      external static fixed bin(17,0)          dcl 5-202
cobol_$con_end_ptr                     external static pointer                  dcl 5-10
cobol_$con_wd_off                      external static fixed bin(17,0)          dcl 5-92
cobol_$cons_charcnt                    external static fixed bin(17,0)          dcl 5-192
cobol_$constant_offset                 external static fixed bin(17,0)          dcl 5-156
cobol_$data_init_flag                  external static fixed bin(17,0)          dcl 5-130
cobol_$date_compiled_sw                external static fixed bin(17,0)          dcl 5-180
cobol_$debug_enable                    external static fixed bin(17,0)          dcl 5-174
cobol_$def_base_ptr                    external static pointer                  dcl 5-12
cobol_$def_max                         external static fixed bin(17,0)          dcl 5-96
cobol_$def_wd_off                      external static fixed bin(17,0)          dcl 5-94
cobol_$diag_ptr                        external static pointer                  dcl 5-70
cobol_$eln_max                         external static fixed bin(17,0)          dcl 5-172
cobol_$eln_ptr                         external static pointer                  dcl 5-68
cobol_$fixup_max                       external static fixed bin(17,0)          dcl 5-164
cobol_$fixup_ptr                       external static pointer                  dcl 5-30
cobol_$fs_charcnt                      external static fixed bin(17,0)          dcl 5-184
cobol_$fs_wdoff                        external static fixed bin(17,0)          dcl 5-198
cobol_$include_cnt                     external static fixed bin(17,0)          dcl 5-182
cobol_$include_info_ptr                external static pointer                  dcl 5-86
cobol_$init_stack_off                  external static fixed bin(17,0)          dcl 5-124
cobol_$initval_base_ptr                external static pointer                  dcl 5-32
cobol_$initval_file_ptr                external static pointer                  dcl 5-34
cobol_$initval_flag                    external static fixed bin(17,0)          dcl 5-178
cobol_$link_base_ptr                   external static pointer                  dcl 5-14
cobol_$link_max                        external static fixed bin(17,0)          dcl 5-100
cobol_$link_wd_off                     external static fixed bin(17,0)          dcl 5-98
cobol_$list_off                        external static fixed bin(17,0)          dcl 5-154
cobol_$list_ptr                        external static pointer                  dcl 5-64
cobol_$ls_charcnt                      external static fixed bin(17,0)          dcl 5-190
cobol_$main_pcs_ptr                    external static pointer                  dcl 5-84
cobol_$map_data_max                    external static fixed bin(17,0)          dcl 5-162
cobol_$map_data_ptr                    external static pointer                  dcl 5-54
cobol_$max_stack_off                   external static fixed bin(17,0)          dcl 5-122
cobol_$minpral5_ptr                    external static pointer                  dcl 5-50
cobol_$misc_base_ptr                   external static pointer                  dcl 5-60
cobol_$misc_end_ptr                    external static pointer                  dcl 5-62
cobol_$misc_max                        external static fixed bin(17,0)          dcl 5-158
cobol_$next_tag                        external static fixed bin(17,0)          dcl 5-128
cobol_$non_source_offset               external static fixed bin(17,0)          dcl 5-176
cobol_$ntbuf_ptr                       external static pointer                  dcl 5-82
cobol_$obj_seg_name                    external static char(32)                 dcl 5-208
cobol_$op_con_ptr                      external static pointer                  dcl 5-80
cobol_$para_eop_flag                   external static fixed bin(17,0)          dcl 5-138
cobol_$pd_map_index                    external static fixed bin(17,0)          dcl 5-116
cobol_$pd_map_max                      external static fixed bin(17,0)          dcl 5-160
cobol_$pd_map_ptr                      external static pointer                  dcl 5-28
cobol_$pd_map_sw                       external static fixed bin(17,0)          dcl 5-126
cobol_$perform_list_ptr                external static pointer                  dcl 5-36
cobol_$perform_para_index              external static fixed bin(17,0)          dcl 5-148
cobol_$perform_sect_index              external static fixed bin(17,0)          dcl 5-150
cobol_$priority_no                     external static fixed bin(17,0)          dcl 5-140
cobol_$ptr_assumption_ind              external static fixed bin(17,0)          dcl 5-144
cobol_$ptr_status_ptr                  external static pointer                  dcl 5-56
cobol_$reg_assumption_ind              external static fixed bin(17,0)          dcl 5-146
cobol_$reg_status_ptr                  external static pointer                  dcl 5-58
cobol_$reloc_def_base_ptr              external static pointer                  dcl 5-20
cobol_$reloc_def_max                   external static fixed bin(24,0)          dcl 5-108
cobol_$reloc_link_base_ptr             external static pointer                  dcl 5-22
cobol_$reloc_link_max                  external static fixed bin(24,0)          dcl 5-110
cobol_$reloc_sym_base_ptr              external static pointer                  dcl 5-24
cobol_$reloc_sym_max                   external static fixed bin(24,0)          dcl 5-112
cobol_$reloc_text_base_ptr             external static pointer                  dcl 5-18
cobol_$reloc_text_max                  external static fixed bin(24,0)          dcl 5-106
cobol_$reloc_work_base_ptr             external static pointer                  dcl 5-26
cobol_$reloc_work_max                  external static fixed bin(24,0)          dcl 5-114
cobol_$reswd_ptr                       external static pointer                  dcl 5-78
cobol_$same_sort_merge_proc            external static bit(1)                   dcl 5-214
cobol_$scratch_dir                     external static char(168)                dcl 5-206
cobol_$sect_eop_flag                   external static fixed bin(17,0)          dcl 5-136
cobol_$seg_init_flag                   external static fixed bin(17,0)          dcl 5-132
cobol_$seg_init_list_ptr               external static pointer                  dcl 5-40
cobol_$stack_off                       external static fixed bin(17,0)          dcl 5-120
cobol_$statement_info_ptr              external static pointer                  dcl 5-76
cobol_$sym_base_ptr                    external static pointer                  dcl 5-16
cobol_$sym_max                         external static fixed bin(17,0)          dcl 5-104
cobol_$sym_wd_off                      external static fixed bin(17,0)          dcl 5-102
cobol_$tag_table_max                   external static fixed bin(17,0)          dcl 5-166
cobol_$tag_table_ptr                   external static pointer                  dcl 5-52
cobol_$temp_token_area_ptr             external static pointer                  dcl 5-42
cobol_$temp_token_max                  external static fixed bin(17,0)          dcl 5-168
cobol_$temp_token_ptr                  external static pointer                  dcl 5-44
cobol_$text_base_ptr                   external static pointer                  dcl 5-8
cobol_$text_wd_off                     external static fixed bin(17,0)          dcl 5-90
cobol_$token_block1_ptr                external static pointer                  dcl 5-46
cobol_$token_block2_ptr                external static pointer                  dcl 5-48
cobol_$value_cnt                       external static fixed bin(17,0)          dcl 5-194
cobol_$ws_charcnt                      external static fixed bin(17,0)          dcl 5-186
cobol_$ws_wdoff                        external static fixed bin(17,0)          dcl 5-200
cobol_$xref_bypass                     external static bit(1)                   dcl 5-212
cobol_$xref_chain_ptr                  external static pointer                  dcl 5-74
cobol_$xref_token_ptr                  external static pointer                  dcl 5-72
cobol_data_wd_off                      defined         fixed bin(17,0)          dcl 5-119
compile_count                          defined         fixed bin(17,0)          dcl 5-143
coms_charcnt                           defined         fixed bin(17,0)          dcl 5-189
coms_wdoff                             defined         fixed bin(17,0)          dcl 5-203
con_end_ptr                            defined         pointer                  dcl 5-11
con_wd_off                             defined         fixed bin(17,0)          dcl 5-93
cons_charcnt                           defined         fixed bin(17,0)          dcl 5-193
constant_offset                        defined         fixed bin(17,0)          dcl 5-157
data_init_flag                         defined         fixed bin(17,0)          dcl 5-131
date_compiled_sw                       defined         fixed bin(17,0)          dcl 5-181
debug_enable                           defined         fixed bin(17,0)          dcl 5-175
def_base_ptr                           defined         pointer                  dcl 5-13
def_max                                defined         fixed bin(17,0)          dcl 5-97
def_wd_off                             defined         fixed bin(17,0)          dcl 5-95
diag_ptr                               defined         pointer                  dcl 5-71
eln_max                                defined         fixed bin(17,0)          dcl 5-173
eln_ptr                                defined         pointer                  dcl 5-69
eos_ptr                                automatic       pointer                  dcl 3-13
first_link_offset                      internal static fixed bin(17,0)          initial dcl 2-52
fixed_static_length                    internal static fixed bin(17,0)          initial dcl 2-51
fixup_max                              defined         fixed bin(17,0)          dcl 5-165
fixup_ptr                              defined         pointer                  dcl 5-31
fs_charcnt                             defined         fixed bin(17,0)          dcl 5-185
fs_wdoff                               defined         fixed bin(17,0)          dcl 5-199
include_cnt                            defined         fixed bin(17,0)          dcl 5-183
include_info_ptr                       defined         pointer                  dcl 5-87
init_stack_off                         defined         fixed bin(17,0)          dcl 5-125
initval_base_ptr                       defined         pointer                  dcl 5-33
initval_file_ptr                       defined         pointer                  dcl 5-35
initval_flag                           defined         fixed bin(17,0)          dcl 5-179
link_base_ptr                          defined         pointer                  dcl 5-15
link_max                               defined         fixed bin(17,0)          dcl 5-101
link_wd_off                            defined         fixed bin(17,0)          dcl 5-99
list_off                               defined         fixed bin(17,0)          dcl 5-155
list_ptr                               defined         pointer                  dcl 5-65
ls_charcnt                             defined         fixed bin(17,0)          dcl 5-191
main_pcs_ptr                           defined         pointer                  dcl 5-85
map_data_max                           defined         fixed bin(17,0)          dcl 5-163
map_data_ptr                           defined         pointer                  dcl 5-55
max_stack_off                          defined         fixed bin(17,0)          dcl 5-123
minpral5_ptr                           defined         pointer                  dcl 5-51
misc_base_ptr                          defined         pointer                  dcl 5-61
misc_end_ptr                           defined         pointer                  dcl 5-63
misc_max                               defined         fixed bin(17,0)          dcl 5-159
next_tag                               defined         fixed bin(17,0)          dcl 5-129
non_source_offset                      defined         fixed bin(17,0)          dcl 5-177
ntbuf_ptr                              defined         pointer                  dcl 5-83
null                                                   builtin function         dcl 189
obj_seg_name                           defined         char(32)                 dcl 5-209
op_con_ptr                             defined         pointer                  dcl 5-81
para_eop_flag                          defined         fixed bin(17,0)          dcl 5-139
pd_map_index                           defined         fixed bin(17,0)          dcl 5-117
pd_map_max                             defined         fixed bin(17,0)          dcl 5-161
pd_map_ptr                             defined         pointer                  dcl 5-29
pd_map_sw                              defined         fixed bin(17,0)          dcl 5-127
perform_list_ptr                       defined         pointer                  dcl 5-37
perform_para_index                     defined         fixed bin(17,0)          dcl 5-149
perform_sect_index                     defined         fixed bin(17,0)          dcl 5-151
priority_no                            defined         fixed bin(17,0)          dcl 5-141
ptr_assumption_ind                     defined         fixed bin(17,0)          dcl 5-145
ptr_status_ptr                         defined         pointer                  dcl 5-57
reg_assumption_ind                     defined         fixed bin(17,0)          dcl 5-147
reg_status_ptr                         defined         pointer                  dcl 5-59
rel                                                    builtin function         dcl 189
reloc_def_base_ptr                     defined         pointer                  dcl 5-21
reloc_def_max                          defined         fixed bin(24,0)          dcl 5-109
reloc_link_base_ptr                    defined         pointer                  dcl 5-23
reloc_link_max                         defined         fixed bin(24,0)          dcl 5-111
reloc_sym_base_ptr                     defined         pointer                  dcl 5-25
reloc_sym_max                          defined         fixed bin(24,0)          dcl 5-113
reloc_text_base_ptr                    defined         pointer                  dcl 5-19
reloc_text_max                         defined         fixed bin(24,0)          dcl 5-107
reloc_work_base_ptr                    defined         pointer                  dcl 5-27
reloc_work_max                         defined         fixed bin(24,0)          dcl 5-115
reswd_ptr                              defined         pointer                  dcl 5-79
same_sort_merge_proc                   defined         bit(1)                   dcl 5-215
scratch_dir                            defined         char(168)                dcl 5-207
sect_eop_flag                          defined         fixed bin(17,0)          dcl 5-137
seg_init_flag                          defined         fixed bin(17,0)          dcl 5-133
seg_init_list_ptr                      defined         pointer                  dcl 5-41
stack_off                              defined         fixed bin(17,0)          dcl 5-121
stat                                   based           structure                level 1 dcl 2-23
stat_ptr                               automatic       pointer                  dcl 2-22
statement_info_ptr                     defined         pointer                  dcl 5-77
sym_base_ptr                           defined         pointer                  dcl 5-17
sym_max                                defined         fixed bin(17,0)          dcl 5-105
sym_wd_off                             defined         fixed bin(17,0)          dcl 5-103
tag_table_max                          defined         fixed bin(17,0)          dcl 5-167
tag_table_ptr                          defined         pointer                  dcl 5-53
temp_token_area_ptr                    defined         pointer                  dcl 5-43
temp_token_max                         defined         fixed bin(17,0)          dcl 5-169
temp_token_ptr                         defined         pointer                  dcl 5-45
text_base_ptr                          defined         pointer                  dcl 5-9
text_wd_off                            defined         fixed bin(17,0)          dcl 5-91
token_block1_ptr                       defined         pointer                  dcl 5-47
token_block2_ptr                       defined         pointer                  dcl 5-49
value_cnt                              defined         fixed bin(17,0)          dcl 5-195
ws_charcnt                             defined         fixed bin(17,0)          dcl 5-187
ws_wdoff                               defined         fixed bin(17,0)          dcl 5-201
xref_bypass                            defined         bit(1)                   dcl 5-213
xref_chain_ptr                         defined         pointer                  dcl 5-75
xref_token_ptr                         defined         pointer                  dcl 5-73

NAMES DECLARED BY EXPLICIT CONTEXT.
cobol_exit_gen                  000004 constant        entry                    external dcl 30
exit                            000076 constant        label                    dcl 209
start                           000011 constant        label                    dcl 197

NAMES DECLARED BY CONTEXT OR IMPLICATION.
substr                                                 builtin function         ref 204 204
unspec                                                 builtin function         ref 204

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       170         232      77         200
Length       500      77        42         231      70          22

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cobol_exit_gen                       82 external procedure  is an external procedure.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 register_request            cobol_exit_gen
000021 inst_seq                    cobol_exit_gen
000024 rel_seq                     cobol_exit_gen

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cobol_exit_gen           000100 temp                        cobol_exit_gen

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cobol_emit                    cobol_pointer_register$call   cobol_register$load           cobol_reset_r$in_line

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     30 000001       197 000011       201 000024       202 000030       203 000041       204 000043       205 000051
    206 000071       209 000076


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
