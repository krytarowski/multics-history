	COMPILATION LISTING OF SEGMENT emacs_search_file_caller_
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/30/82  1411.6 mst Tue
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1978 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   * Copyright (c) 1972 by Massachusetts Institute of        *
        9*   * Technology and Honeywell Information Systems, Inc.      *
       10*   *                                                         *
       11*   *********************************************************** */
       12 
       13 
       14 emacs_search_file_caller_:
       15 	proc (regexp, pointpos, filelinep, filelinel, stringline, answer);
       16 
       17 /*  Bernard Greenberg 6/23/78 */
       18 
       19 dcl regexp char (*);				/* regular exp */
       20 dcl pointpos fixed bin;				/* rel offset */
       21 dcl filelinep ptr;					/* null if string passed */
       22 dcl filelinel fixed bin;				/* 21 not interesting */
       23 dcl stringline char (*);				/* line as string */
       24 dcl answer bit (36) aligned;				/* encode this loser better, see below. */
       25 
       26 dcl code fixed bin (35), (amitemp, ametemp) fixed bin (17) aligned;
       27 dcl linep ptr, linel fixed bin, line char (linel) based (linep); /* real params */
       28 dcl null builtin;
       29 dcl search_file_ entry (ptr, fixed bin, fixed bin,
       30 		/*   atp     ati       atl  */
       31 		    ptr, fixed bin, fixed bin,
       32 		/*   afp     afi       afe  */
       33 		    fixed bin, fixed bin, fixed bin (35));
       34 	
       35 		/*  ami	   ame	   code */
       36 dcl 1 packed_return_val aligned,
       37     2 zero_rel_index fixed bin (17) unaligned,
       38     2 length fixed bin (17) unaligned;
       39 
       40 dcl length builtin;
       41 
       42 	if filelinep ^= null then do;			/* in file */
       43 	     linep = filelinep;
       44 	     linel = filelinel;
       45 	end;
       46 	else do;					/* string passed */
       47 	     linep = addr (stringline);
       48 	     linel = length (stringline);
       49 	end;
       50 
       51 	call search_file_ (addr (regexp), 1, length (regexp), linep, pointpos + 1, linel, amitemp, ametemp, code);
       52 	if code ^= 0 then do;
       53 	     packed_return_val.zero_rel_index = -1;
       54 	     packed_return_val.length = 0;
       55 	end;
       56 
       57 /* Got good answer, pack it up and go. */
       58 
       59 	else do;
       60 	     packed_return_val.zero_rel_index = amitemp - 1;
       61 	     packed_return_val.length = ametemp - amitemp + 1;
       62 	end;
       63 	
       64 	answer = unspec (packed_return_val);
       65      end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/30/82  1332.7  emacs_search_file_caller_.pl1     >spec>on>11/30/82>emacs_search_file_caller_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
ametemp                         000102 automatic       fixed bin(17,0)          dcl 26 set ref 51* 61
amitemp                         000101 automatic       fixed bin(17,0)          dcl 26 set ref 51* 60 61
answer                                 parameter       bit(36)                  dcl 24 set ref 14 64*
code                            000100 automatic       fixed bin(35,0)          dcl 26 set ref 51* 52
filelinel                              parameter       fixed bin(17,0)          dcl 22 ref 14 44
filelinep                              parameter       pointer                  dcl 21 ref 14 42 43
length                    0(18) 000107 automatic       fixed bin(17,0)          level 2 in structure "packed_return_val" packed
                                                                                  unaligned dcl 36 in procedure
                                                                                  "emacs_search_file_caller_" set ref 54* 61*
length                                                 builtin function         dcl 40 in procedure "emacs_search_file_caller_" ref
                                                                                  48 51 51
linel                           000106 automatic       fixed bin(17,0)          dcl 27 set ref 44* 48* 51*
linep                           000104 automatic       pointer                  dcl 27 set ref 43* 47* 51*
null                                                   builtin function         dcl 28 ref 42
packed_return_val               000107 automatic       structure                level 1 dcl 36 set ref 64
pointpos                               parameter       fixed bin(17,0)          dcl 20 ref 14 51
regexp                                 parameter       char                     unaligned dcl 19 set ref 14 51 51 51 51
search_file_                    000010 constant        entry                    external dcl 29 ref 51
stringline                             parameter       char                     unaligned dcl 23 set ref 14 47 48
zero_rel_index                  000107 automatic       fixed bin(17,0)          level 2 packed unaligned dcl 36 set ref 53* 60*

NAME DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
line                                   based           char                     unaligned dcl 27

NAME DECLARED BY EXPLICIT CONTEXT.
emacs_search_file_caller_       000014 constant        entry                    external dcl 14

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 47 51 51
unspec                                                 builtin function         ref 64

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       174         206     135         204
Length       356     135        12         134      37           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
emacs_search_file_caller_           100 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
emacs_search_file_caller_
                         000100 code                        emacs_search_file_caller_
                         000101 amitemp                     emacs_search_file_caller_
                         000102 ametemp                     emacs_search_file_caller_
                         000104 linep                       emacs_search_file_caller_
                         000106 linel                       emacs_search_file_caller_
                         000107 packed_return_val           emacs_search_file_caller_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return              ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
search_file_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     14 000006        42 000034        43 000041        44 000044        45 000046        47 000047        48 000051
     51 000053        52 000112        53 000114        54 000116        55 000120        60 000121        61 000125
     64 000131        65 000134


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
