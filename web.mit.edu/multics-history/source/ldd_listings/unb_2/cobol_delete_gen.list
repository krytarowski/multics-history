	COMPILATION LISTING OF SEGMENT cobol_delete_gen
	Compiled by: Multics PL/I Compiler, Release 31b, of April 24, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 05/24/89  0935.7 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
       17*     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
       18*     MCR8060 cobol_delete_gen.pl1 Reformatted code to new Cobol standard.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 /* Modified on 03/18/81 by FCH, [4.4-1], set pr1 to loc of key */
       23 /* Modified on 06/27/79 by FCH, [4.0-1], not option added for debug */
       24 /* Modified on 11/13/78 by FCH, [3.0-1], alt rec keys added */
       25 /* Modified since Version 3.0 */
       26 
       27 /* format: style3 */
       28 cobol_delete_gen:
       29      proc (mp_ptr, passed_tag);
       30 
       31 dcl	passed_tag	fixed bin;		/* for  in-line error handling */
       32 dcl	ptag		fixed bin;
       33 dcl	mp_ptr		ptr;
       34 dcl	1 mp		based (mp_ptr),
       35 	  2 n		fixed bin,		/* always 3 */
       36 	  2 pt1		ptr,			/* pts to type1 token for DELETE */
       37 	  2 pt2		ptr,			/* pts to type12 token for the file */
       38 	  2 pt3		ptr;			/* pts to type19 token (eos) */
       39 dcl	1 args,
       40 	  2 entryno	fixed bin,
       41 	  2 arglist_off	fixed bin,
       42 	  2 stacktemp_off	fixed bin,
       43 	  2 n		fixed bin,
       44 	  2 arg		(4),
       45 	    3 pt		ptr,
       46 	    3 type	fixed bin,
       47 	    3 off1	fixed bin,
       48 	    3 off2	fixed bin,
       49 	    3 value	bit (18) unal,
       50 	    3 indirect	bit (1) unal,
       51 	    3 overlay	bit (1) unal,
       52 	    3 repeat_nogen	bit (1) unal,
       53 	    3 regsw	bit (1) unal,
       54 	    3 regno	bit (3) unal;
       55 
       56 
       57 dcl	argb		(4) bit (216) based (addr (args.arg (1)));
       58 
       59 dcl	text		(0:100000) bit (36) based (cobol_$text_base_ptr);
       60 
       61 dcl	ft_ptr		ptr;
       62 
       63 dcl	fkey_ptr		ptr;
       64 
       65 dcl	name_ptr		ptr;
       66 dcl	arg_ptr		ptr;
       67 
       68 dcl	ioerror_ptr	ptr;
       69 
       70 /* [3.0-1] */
       71 declare	alt_sw		bit (1);
       72 
       73 dcl	delete_tag	fixed bin;
       74 
       75 dcl	unopen_error_tag	fixed bin;
       76 dcl	stoff		fixed bin;
       77 
       78 dcl	aloff		fixed bin;
       79 dcl	size		fixed bin;
       80 dcl	reclen_off	fixed bin;
       81 
       82 dcl	buf_off		fixed bin;
       83 dcl	ntag		fixed bin;
       84 
       85 /*************************************/
       86 /*************************************/
       87 /* INITIALIZATION */
       88 start:
       89 	rw_ptr = mp.pt1;
       90 	eos_ptr = mp.pt3;
       91 	ioerror_ptr = addr (ioerror);
       92 	ioerror.cobol_code = 0;
       93 	ioerror.type1_ptr = mp.pt1;
       94 	ioerror.is_tag = 0;
       95 	ioerror.mode = 0;
       96 	if end_stmt.b = "1"b
       97 	then do;					/* in-line error coding follows */
       98 		ioerror.is_tag = cobol_$next_tag;	/* to be defined at end of generated code for WRITE */
       99 		ptag, passed_tag = cobol_$next_tag + 1; /* to be defined by gen driver at end of in-line coding */
      100 		ioerror.ns_tag = ptag;
      101 		cobol_$next_tag = cobol_$next_tag + 2;
      102 	     end;
      103 	else do;
      104 		ioerror.is_tag = 0;
      105 		ptag = 0;
      106 		ioerror.ns_tag = cobol_$next_tag;	/* to be defined at end of generated code */
      107 		cobol_$next_tag = cobol_$next_tag + 1;
      108 	     end;
      109 
      110 	arg_ptr = addr (args);
      111 
      112 	call cobol_read_ft (mp.pt2 -> fd_token.file_no, ft_ptr);
      113 
      114 	call cobol_alloc$stack (52, 2, aloff);		/* enough for 13 words - aloff is a wd offset */
      115 	args.arglist_off = aloff;
      116 	reclen_off = aloff + 12;
      117 
      118 
      119 /*************************************/
      120 /* START CODE GENERATION */
      121 start_codegen:					/* MAKE SURE FILE IS OPEN */
      122 	ioerror.retry_tag = cobol_$next_tag;
      123 	unopen_error_tag = cobol_$next_tag + 1;
      124 	cobol_$next_tag = cobol_$next_tag + 2;
      125 
      126 	call cobol_define_tag (ioerror.retry_tag);
      127 
      128 	call cobol_set_fsbptr (ft_ptr);
      129 
      130 
      131 /* OPERATOR56(init_delete) */
      132 	call cobol_call_op (56, unopen_error_tag);	/* INT_DELETE_OP */
      133 
      134 	call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      135 
      136 	call cobol_define_tag (unopen_error_tag);
      137 
      138 /* [3.0-1] */
      139 	alt_sw = file_table.organization = 3 /* ind */ /* [3.0-1] */ & /* [3.0-1] */ file_table.alternate_keys ^= 0;
      140 
      141 
      142 
      143 
      144 	if file_table.access < 2
      145 	then do;					/* sequential access */
      146 
      147 		ntag = cobol_$next_tag;
      148 
      149 		cobol_$next_tag = cobol_$next_tag + 1;
      150 
      151 		call cobol_io_util$bypass_seqerror (ntag);
      152 
      153 		call cobol_ioop_util$set_x5 (delete_seq_errno);
      154 						/* OPERATOR54(delete_error) */
      155 		call cobol_call_op (54, ntag);	/* ERROR_OP */
      156 
      157 		call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      158 
      159 
      160 
      161 		call cobol_define_tag (ntag);
      162 
      163 		call cobol_io_util$move_direct ("001"b, fsb_keylen_sw, 4, 1, ""b);
      164 						/* zero the switch */
      165 
      166 		call cobol_set_fsbptr (ft_ptr);
      167 
      168 		call del_op;
      169 
      170 	     end;
      171 
      172 	else do;					/* random or dynamic access */
      173 
      174 		call cobol_read_rand (1, file_table.r_key_info, fkey_ptr);
      175 
      176 		addr (fkey_type9.file_key_info) -> file_key_desc = file_key.desc;
      177 
      178 		mpout.pt1 = mp.pt1;
      179 
      180 		mpout.pt2 = addr (fkey_type9);
      181 
      182 		if file_table.organization = 2
      183 		then do;				/* relative */
      184 
      185 			mpout.pt3 = addr (num_type9);
      186 
      187 			size, num_type9.size, num_type9.places_left = 16;
      188 
      189 			num_type9.seg = 5001;	/* from PR1 */
      190 
      191 			num_type9.off = file_table.fsb.off + fsb_key;
      192 
      193 		     end;
      194 
      195 		else do;				/* indexed */
      196 
      197 			if file_table.access = 3 & (file_table.external | file_table.open_out)
      198 			then do;
      199 
      200 				ntag = cobol_$next_tag;
      201 				cobol_$next_tag = cobol_$next_tag + 1;
      202 
      203 				call cobol_io_util$bypass_mode_error (ntag, "11"b);
      204 						/* must prevent deletes in output mode */
      205 
      206 				call cobol_ioop_util$set_x5 (output_errno);
      207 						/* OPERATOR54(delete_error) */
      208 				call cobol_call_op (54, ntag);
      209 						/* ERROR_OP */
      210 
      211 				call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      212 
      213 				call cobol_define_tag (ntag);
      214 
      215 				call cobol_set_fsbptr (ft_ptr);
      216 			     end;
      217 
      218 			mpout.pt3 = addr (alpha_type9);
      219 			size, alpha_type9.size = fkey_type9.size;
      220 			alpha_type9.seg = 5001;	/* from pr1 */
      221 			alpha_type9.off = file_table.fsb.off + fsb_key;
      222 
      223 		     end;				/* read key */
      224 		if ^alt_sw & file_table.access = 3 & file_table.read_next
      225 		then do;
      226 
      227 			call cobol_alloc$stack (260, 2, stoff);
      228 						/* area known as TEMP read key area */
      229 
      230 			call cobol_ioop_util$lda_du (stoff);
      231 
      232 
      233 			ntag = cobol_$next_tag;
      234 			cobol_$next_tag = cobol_$next_tag + 1;
      235 
      236 			call cobol_call_op (55, ntag);/* OPERATOR55(read_key) */
      237 
      238 			call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      239 
      240 			call cobol_define_tag (ntag);
      241 
      242 			mpout.pt4 = addr (type19);
      243 
      244 			call cobol_set_fsbptr (ft_ptr);
      245 
      246 			call cobol_move_gen (addr (mpout));
      247 
      248 			call cobol_io_util$move_direct ("001"b, fsb_keylen_sw, 4, 1, substr (unspec (size), 19, 18))
      249 			     ;
      250 
      251 			ntag = cobol_$next_tag;
      252 			cobol_$next_tag = cobol_$next_tag + 1;
      253 
      254 			call cobol_ioop_util$lda_du (stoff);
      255 
      256 			call cobol_ioop_util$set_icode;
      257 
      258 			call cobol_call_op (57, ntag);/* OPERATOR57(special_delete) */
      259 
      260 			call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      261 
      262 			call cobol_define_tag (ntag);
      263 
      264 		     end;
      265 		else do;
      266 
      267 			ntag = cobol_$next_tag;
      268 			cobol_$next_tag = cobol_$next_tag + 1;
      269 			mpout.pt4 = addr (type19);
      270 
      271 			call cobol_set_fsbptr (ft_ptr);
      272 
      273 			call cobol_move_gen (addr (mpout));
      274 
      275 			call cobol_io_util$move_direct ("001"b, fsb_keylen_sw, 4, 1, substr (unspec (size), 19, 18))
      276 			     ;
      277 
      278 /* [3.0-1] */
      279 			if alt_sw			/*[4.4-1]*/
      280 			then do;
      281 				call cobol_io_util$fsb_key_loc (6);
      282 						/* epp1 pr1|6 */
      283 						/* [3.0-1] */
      284 				call cobol_io_util$file_desc (file_table.file_desc_1_offset);
      285 						/* [3.0-1] */
      286 				call cobol_call_op (85, 0);
      287 						/* OPERATOR85(alt_special_delete) */
      288 						/* [3.0-1] */
      289 				call cobol_set_fsbptr (ft_ptr);
      290 						/* [3.01] */
      291 			     end;
      292 
      293 			call cobol_ioop_util$set_icode;
      294 
      295 			call cobol_call_op (41, ntag);/* OPERATOR41(seek_key) */
      296 
      297 			call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      298 
      299 			call cobol_define_tag (ntag);
      300 
      301 			call del_op;
      302 
      303 		     end;
      304 
      305 	     end;					/* DELETE THE RECORD */
      306 
      307 	call cobol_reg_manager$after_op (4095 + ioerror.cobol_code);
      308 
      309 /*[4.0-1]*/
      310 	if end_stmt.f = "01"b			/*[4.0-1]*/
      311 	then passed_tag = ioerror.is_tag;		/*[4.0-1]*/
      312 	else call cobol_gen_ioerror$finish_up (ft_ptr, ioerror_ptr);
      313 
      314 	return;
      315 
      316 del_op:
      317      proc;
      318 
      319 /* [3.0-1] */
      320 	if alt_sw					/* [3.0-1] */
      321 	then do;
      322 		ntag = cobol_$next_tag;		/* [3.0-1] */
      323 		cobol_$next_tag = cobol_$next_tag + 1;
      324 
      325 /* [3.0-1] */
      326 		call cobol_call_op (87, ntag);	/* OPERATOR87(alt_rew_del,ntag) */
      327 						/* [3.0-1] */
      328 		call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      329 						/* [3.0-1] */
      330 		call cobol_define_tag (ntag);		/* [3.0-1] */
      331 		call cobol_set_fsbptr (ft_ptr);	/* [3.0-1] */
      332 	     end;
      333 
      334 	delete_tag = cobol_$next_tag;
      335 	cobol_$next_tag = cobol_$next_tag + 1;
      336 
      337 	call cobol_set_fsbptr (ft_ptr);
      338 
      339 	call cobol_call_op (53, delete_tag);		/* OPERATOR53(delete) */
      340 
      341 	call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      342 
      343 	call cobol_define_tag (delete_tag);
      344 
      345 /* [3.0-1] */
      346 	if alt_sw
      347 	then call cobol_call_op (86, 0);		/* OPERTATOR86(alt_delete) */
      348 
      349      end;
      350 
  1     1 
  1     2 /*
  1     3*
  1     4*	Th procedure cobol_delete_gen.pl1 generates the code which
  1     5*realizes the COBOL delete statement.
  1     6*
  1     7*	DELETE fn eos
  1     8*
  1     9*		eos	b=0	no INVALID
  1    10*			  1	INVALID
  1    11*
  1    12*			f=00	no NOT
  1    13*			  01	NOT
  1    14*
  1    15*	mp.n		3
  1    16*	mp.ptr(1)		type-1("OPEN")
  1    17*	mp.ptr(2)		type-12(file-name)
  1    18*	mp.ptr(3)		eos
  1    19*
  1    20*Flow Chart
  1    21*
  1    22*TAG(ioerror.retry_tag):
  1    23*
  1    24*	OP56(init_delete,unopen_gen_tag);GEN_IOERROR
  1    25*
  1    26*TAG(unopen_gen_tag)
  1    27*
  1    28*	alt_sw =	file_organization = 3	ind
  1    29*		&
  1    30*		file_table.alternate_keys ^= 0
  1    31*
  1    32*	if	file_table.access < 2	seq
  1    33*	then	do;	INCR_NTAG
  1    34*			OP54(delete_error,ntag);GEN_IOERROR
  1    35*
  1    36*TAG(ntag):
  1    37*
  1    38*			CALL DEL_OP;
  1    39*
  1    40*		end;
  1    41*	else	do;	if file_table.organization = 2	ind
  1    42*			then;
  1    43*			else
  1    44*			if	file_table.access = 3	dyn
  1    45*				&
  1    46*				(	file_table.external
  1    47*					|
  1    48*					file_table.open_out
  1    49*				)
  1    50*			then	do;	INCR_NTAG
  1    51*					OP54(delete_error,ntag);GEN_IOERROR
  1    52*
  1    53*TAG(ntag):
  1    54*
  1    55*				end;
  1    56*
  1    57*
  1    58*			if	^alt_sw
  1    59*				&
  1    60*				file_table.access = 3	dyn
  1    61*				&
  1    62*				file_table.read_next
  1    63*
  1    64*			then	do;	INCR_NTAG
  1    65*
  1    66*					OP55(read_key,ntag);GEN_IOERROR
  1    67*
  1    68*
  1    69*TAG(ntag):
  1    70*
  1    71*					INCR_NTAG
  1    72*
  1    73*					OP57(special_delete,ntag);GEN_IOERROR
  1    74*
  1    75*TAG(ntag):
  1    76*
  1    77*				end;
  1    78*			else	do;	INCR_NTAG
  1    79*
  1    80*					if alt_sw then IO_UTIL$FILE_DESC;OP85(alt_special_delete,0);SET_FSBPTR
  1    81*					OP41(seek_key,ntag);GEN_IOERROR
  1    82*
  1    83*					CALL DEL_OP;
  1    84*				end;
  1    85*		end;
  1    86*
  1    87*	return;
  1    88*
  1    89*DEL_OP:
  1    90*
  1    91*	if alt_sw
  1    92*	then	do;	INCR_NTAG
  1    93*			OP87(alt_rew_del,ntag);GEN_IOERROR
  1    94*TAG(ntag):
  1    95*			SET_FSBPTR
  1    96*		end;
  1    97*
  1    98*	INCR_NTAG
  1    99*	OP53(delete,delete_tag);GEN_IOERROR
  1   100*
  1   101*TAG(delete_tag):
  1   102*
  1   103*	if alt_sw then OP86(alt_delete,0)
  1   104*
  1   105*end;
  1   106*
  1   107**/
  1   108 
  2     1 /*
  2     2*cobol_operators_: delete statement
  2     3*
  2     4*	OP41(seek_key)		write
  2     5*
  2     6*		SUBR_SEEK_OP(16)
  2     7*
  2     8*	OP53(delete)
  2     9*
  2    10*		SUBR_DELETE
  2    11*
  2    12*	OP54(delete_error)		start,read,rewrite
  2    13*
  2    14*		check seek errors
  2    15*		RTS(16)
  2    16*
  2    17*	OP55(read_key)		rewrite
  2    18*
  2    19*		iox_$read_key
  2    20*		RTS(17)
  2    21*
  2    22*	OP56(init_delete)
  2    23*
  2    24*	OP57(special_delete)
  2    25*
  2    26*		SUBR_SEEK_OP(25)
  2    27*		iox_$position
  2    28*
  2    29*	OP85(alt_special_delete)		restart
  2    30*
  2    31*		move fsbskel.key one pos to right
  2    32*		prefix by 511, increment size
  2    33*		RTS(55)
  2    34*
  2    35*	OP86(alt_delete)
  2    36*
  2    37*		set fields in FSB after delete
  2    38*		RTS(53)
  2    39*
  2    40*	OP87(alt_rew_del)			rewrite
  2    41*
  2    42*		$control("record_status")
  2    43*		delete alt key values
  2    44*		RTS(52)
  2    45*
  2    46*	SUBR_SEEK_OP(i)		41,57,[67]
  2    47*
  2    48*		iox_$seek_key
  2    49*		RTS(i)
  2    50*
  2    51*	SUBR_DELETE		53
  2    52*
  2    53*		iox_$delete
  2    54*
  2    55**/
  1   109 
  1   110 
      351 
  3     1 
  3     2 
  3     3 /* STATIC DATA */
  3     4 
  3     5 dcl 1 iocb_arg static,
  3     6      2 pt ptr init(null()),	/* initialized to address of basic structure */
  3     7      2 zeros bit(144) init(""b);
  3     8 dcl 1 temp_arg static,
  3     9      2 pt ptr init(null()),	/* always null */
  3    10      2 type fixed bin init(3),
  3    11      2 zeros bit(108) init(""b);
  3    12 dcl 1 status_arg static,
  3    13      2 pt ptr init(null()),	/* always null */
  3    14      2 type fixed bin init(3),
  3    15      2 off1 fixed bin init(40),
  3    16      2 zeros bit(72) init(""b);
  3    17 dcl 1 fsb_arg static,
  3    18      2 pt ptr init(null()),	/* always null */
  3    19      2 type fixed bin init(3),
  3    20      2 off1 fixed bin,	/* set each time to wd offset in fsb */
  3    21      2 off2 fixed bin init(0),  /* not used */
  3    22      2 bits bit(36) init("0000000000000000000001001"b);	/* pr1 */
  3    23 
  3    24 dcl 1 mpout static,
  3    25      2 n fixed bin init(4),
  3    26      2 pt1 ptr,
  3    27      2 pt2 ptr,
  3    28      2 pt3 ptr,
  3    29      2 pt4 ptr;
  3    30 dcl file_key_desc char(40) based;
  3    31 dcl 1 num_type9 static,
  3    32      2 header (4) fixed bin init(112,0,0,9),
  3    33      2 repl_ptr (2) ptr init((2)null()),
  3    34      2 fill1  bit(108) init(""b),
  3    35      2 file_key_info,
  3    36 	3 fb1 (3) fixed bin init(0,0,0),
  3    37 	3 size fixed bin init(0),
  3    38 	3 places_left fixed bin,
  3    39 	3 places_right fixed bin init(0),
  3    40 	3 flags1 bit(36) init("010000100100000001000000000100000000"b),
  3    41 	3 flags2 bit(36) init(""b),
  3    42 	3 seg fixed bin init(0),
  3    43 	3 off fixed bin,
  3    44      2 fill2 (7) fixed bin init(0,0,0,0,0,0,0);
  3    45 dcl 1 alpha_type9 static,
  3    46      2 header (4) fixed bin init(112,0,0,9),
  3    47      2 repl_ptr (2) ptr init((2)null()),
  3    48      2 fill1  bit(108) init(""b),
  3    49      2 file_key_info,
  3    50 	3 fb1 (3) fixed bin init(0,0,0),
  3    51 	3 size fixed bin init(0),
  3    52 	3 fb2 (2) fixed bin init(0,0),
  3    53 	3 flags1 bit(36) init("010000100100000000010000000100000000"b),
  3    54 	3 flags2 bit(36) init(""b),
  3    55 	3 seg fixed bin init(0),
  3    56 	3 off fixed bin,
  3    57      2 fill2 (7) fixed bin init(0,0,0,0,0,0,0);
  3    58 dcl 1 fkey_type9 static,
  3    59      2 header (4) fixed bin init(112,0,0,9),
  3    60      2 repl_ptr (2) ptr init((2)null()),
  3    61      2 fill1  bit(108) init(""b),
  3    62      2 file_key_info,
  3    63 	3 fb1 (3) fixed bin init(0,0,0),
  3    64 	3 size fixed bin init(0),
  3    65 	3 fb2 (2) fixed bin init(0,0),
  3    66 	3 flags1 bit(36) init(""b),
  3    67 	3 flags2 bit(36) init(""b),
  3    68 	3 seg fixed bin,
  3    69 	3 off fixed bin,
  3    70      2 fill2 (7) fixed bin init(0,0,0,0,0,0,0);
  3    71 dcl 1 type19 static,
  3    72      2 size fixed bin init(38),
  3    73      2 line fixed bin init(0),
  3    74      2 column fixed bin init(0),
  3    75      2 type fixed bin init(19),
  3    76      2 verb fixed bin init(18),	 	/* verb number */
  3    77      2 e fixed bin init(1),
  3    78      2 h fixed bin init(0),
  3    79      2 i fixed bin init(0),
  3    80      2 j fixed bin init(0),
  3    81      2 a bit(3) init(""b),
  3    82      2 b bit(1) init(""b),
  3    83      2 c bit(1) init(""b),
  3    84      2 d bit(2) init(""b),
  3    85      2 f bit(2) init(""b),
  3    86      2 g bit(2) init(""b),
  3    87      2 k bit(5) init(""b);
  3    88 
  3    89 dcl 1 ioerror static,
  3    90      2 cobol_code fixed bin,
  3    91      2 retry_tag fixed bin,
  3    92      2 is_tag fixed bin,
  3    93      2 ns_tag fixed bin,
  3    94      2 type1_ptr ptr,
  3    95      2 mode fixed bin;
  3    96 
  3    97 dcl mcode_off fixed bin static init(40);
  3    98 
  3    99 dcl fsb_keylen_sw fixed bin static init(24);	/* offset 6 */
  3   100 dcl fsb_key fixed bin static init(28);		/* offset 7 */
  3   101 dcl fsb_key_wdoff fixed bin static init(7);
  3   102 dcl delete_errno fixed bin static init(30);	/* Unable to delete record */
  3   103 dcl seek_errno fixed bin static init(29);	/* Unable to seek key for delete */
  3   104 dcl delete_seq_errno fixed bin static init(28);  /* Invalid delete attempted - previous I/O operation was not read */
  3   105 dcl output_errno fixed bin static init(42); /* Invalid I/O operation. Attempt to delete in a file not opened as i-o */
  3   106 
  3   107 
  3   108 /* EXTERNAL ENTRY NAMES */
  3   109 
  3   110 dcl cobol_ioop_util$set_icode entry;
  3   111 dcl cobol_gen_ioerror$finish_up entry(ptr, ptr);
  3   112 dcl cobol_reg_manager$after_op entry(fixed bin);
  3   113 dcl cobol_gen_ioerror entry(ptr, ptr);
  3   114 dcl cobol_call_op entry(fixed bin, fixed bin);
  3   115 dcl cobol_set_fsbptr entry(ptr);
  3   116 dcl cobol_ioop_util$lda_du entry(fixed bin);
  3   117 dcl cobol_ioop_util$set_x5 entry(fixed bin);
  3   118 dcl cobol_alloc$stack entry(fixed bin,fixed bin,fixed bin);
  3   119 dcl cobol_read_ft entry(fixed bin,ptr);
  3   120 dcl cobol_read_rand entry(fixed bin,char(5),ptr);
  3   121 dcl cobol_define_tag entry(fixed bin);
  3   122 
  3   123 /* sub-generators */
  3   124 dcl cobol_move_gen entry(ptr);
  3   125 dcl cobol_io_util$file_desc entry(fixed bin(24));
  3   126 dcl cobol_io_util$move_direct entry(bit(3) aligned,fixed bin,fixed bin,fixed bin,bit(18) aligned);
  3   127 dcl cobol_io_util$bypass_error entry(fixed bin,fixed bin);
  3   128 dcl cobol_io_util$bypass_mode_error entry(fixed bin,bit(2) aligned);
  3   129 dcl cobol_io_util$bypass_seqerror entry(fixed bin);
  3   130 dcl cobol_io_util$compare_key entry(fixed bin, ptr);
  3   131 dcl cobol_io_util$fsb_key_loc entry(fixed bin);
  3   132 
  3   133 /* BUILTIN FUNCTIONS */
  3   134 
  3   135 dcl	(substr,mod,binary,fixed,addr,addrel,rel,length,
  3   136 	string,unspec,null,index)		builtin;
  3   137 
  3   138 
  4     1 
  4     2 /* BEGIN INCLUDE FILE ...   cobol_file_table.incl.pl1 */
  4     3 /*     <<<   INCLUDE FILE FOR FILE TABLE IN COMMON   >>>     */
  4     4 
  4     5 /* Modified on 09/30/80 by FCH, [4.4-1], density is 6250 is supported */
  4     6 /* Modified on 12/05/78 by RAL, [3.0-3], added dupl_alt from dummy102 */
  4     7 /* Modified on 11/21/78 by RAL, [3.0-2], added space for abs_record_offset from filler */
  4     8 /* Modified on 10/26/78 by RAL, [3.0-1], added space for file_desc_1 table offset from filler */
  4     9 /*     <<<   LAST MODIFIED ON 06-02-77 by GM         >>>	*/
  4    10 /*     <<<   LAST MODIFIED ON 05-31-77 by GM         >>>	*/
  4    11 /*     <<<   LAST MODIFIED  ON 06-30-76 by GM        >>>	*/
  4    12 /*     <<<   LAST MODIFIED ON 06-07-76 by GM    >>>     */
  4    13 /*     <<<   LAST MODIFIED ON 11-29-74 by orn   >>>     */
  4    14 
  4    15 /*
  4    16*A file table is created in variable common for each file selected in the
  4    17*environment division.  The fields of a given file table provide information
  4    18*about the specific file for which the file table is generated.  The
  4    19*addresses which may be contained in the various "info" fields of the file
  4    20*table are addresses in variable common.
  4    21**/
  4    22 
  4    23 /*   THE FILE TABLE STRUCTURE   */
  4    24 
  4    25 dcl	1 file_table based (ft_ptr),
  4    26 		2 next char (5),
  4    27 		2 ifn char (16),
  4    28 		2 attach_options_info char(5),	/*06/02/77*/
  4    29 		2 replacement_info char(5),		/*06/02/77*/
  4    30 		2 file_id_info char(5),		/*05/31/77*/
  4    31 		2 retention_info char(5),		/*05/31/77*/
  4    32 		2 filler0 char (3) ,			/* [3.0-1] */
  4    33 		2 file_desc_1_offset fixed bin (24),		/* [3.0-1] */
  4    34 		2 abs_record_offset fixed bin (24),		/* [3.-02] */
  4    35 		2 filler char(5),		/* this area is available.*/
  4    36 		2 padding_char char (1),
  4    37 		2 banner_char char (1),
  4    38 		2 file_status_info char (5),
  4    39 		2 extra_status_info char (5),
  4    40 		2 cat_id_info char (5),
  4    41 		2 r_key_info char (5),
  4    42 		2 alt_key_info char (5),
  4    43 		2 rec_do_info char (5),
  4    44 		2 label_info char (5),
  4    45 		2 data_info char (5),
  4    46 		2 report_info char (5),
  4    47 		2 linage_info char (5),
  4    48 		2 optional bit (1),						/*06/07/76*/
  4    49 		2 external bit (1),
  4    50 		2 file_status bit (1),
  4    51 		2 extra_status bit (1),
  4    52 		2 sysin bit (1),
  4    53 		2 sysout bit (1),
  4    54 		2 move_mode bit (1),
  4    55 		2 locate_mode bit (1),
  4    56 		2 fixed_recs bit (1),
  4    57 		2 variable_recs bit (1),
  4    58 		2 spanned_recs bit (1),				/*06/07/76*/
  4    59 		2 interchange bit (1),				/*06/07/76*/
  4    60 		2 relative_key bit (1),
  4    61 		2 record_key bit (1),
  4    62 		2 even_parity bit (1),
  4    63 		2 odd_parity bit (1),
  4    64 		2 padding bit (1),
  4    65 		2 banner bit (1),
  4    66 		2 random bit (1),
  4    67 		2 no_file_lockout bit (1),
  4    68 		2 no_write_check bit (1),
  4    69 		2 no_resident_index bit (1),
  4    70 		2 same_file bit (1),
  4    71 		2 sort_file bit (1),
  4    72 		2 rec_do bit (1),
  4    73 		2 linage bit (1),
  4    74 		2 code_set_clause bit (1),
  4    75 		/* history */
  4    76 		2 close bit (1),
  4    77 		2 delete bit (1),
  4    78 		2 open_in bit (1),
  4    79 		2 open_out bit (1),
  4    80 		2 open_io bit (1),
  4    81 		2 open_ext bit (1),
  4    82 		2 read bit (1),
  4    83 		2 release bit (1),
  4    84 		2 return_bit bit (1),
  4    85 		2 rewrite bit (1),
  4    86 		2 sort bit (1),
  4    87 		2 start bit (1),
  4    88 		2 use_error bit (1),
  4    89 		2 write bit (1),
  4    90 		2 read_next bit (1),
  4    91 		2 read_key bit (1),
  4    92 		2 accept bit (1),
  4    93 		2 display bit (1),
  4    94 		2 unequal_recs bit (1),
  4    95 		2 dummy_sysin bit (1),
  4    96 		2 dummy_sysout bit (1),
  4    97 		2 file_no fixed bin,
  4    98 		2 uca_offset fixed bin(24),
  4    99 		2 cra_seg fixed bin,
  4   100 		2 cra_offset fixed bin(24),
  4   101 		2 max_cra_size fixed bin(24),
  4   102 		2 catalogued fixed bin,
  4   103 		2 organization fixed bin,
  4   104 		2 org_qual fixed bin,
  4   105 		2 access fixed bin,
  4   106 		2 buffers fixed bin,
  4   107 		2 device fixed bin,
  4   108 		2 record_prefix fixed bin,				/*06/07/76*/
  4   109 		2 alternate_keys fixed bin,
  4   110 		2 record_format fixed bin,
  4   111 		2 label_format fixed bin,
  4   112 		2 key_location fixed bin,
  4   113 		2 key_size fixed bin,
  4   114 		2 temporary fixed bin,
  4   115 		2 address_format fixed bin,
  4   116 		2 same_area_clause fixed bin,
  4   117 		2 same_rec_clause fixed bin,
  4   118 		2 same_sort_clause fixed bin,
  4   119 		2 mult_clause_no fixed bin,
  4   120 		2 mult_position_no fixed bin,
  4   121 		2 block_desc fixed bin,
  4   122 		2 block_min fixed bin(24),
  4   123 		2 block_max fixed bin(24),
  4   124 		2 rec_min fixed bin(24),
  4   125 		2 rec_max fixed bin(24),
  4   126 		2 label_count fixed bin,
  4   127 		2 ifn_size fixed bin,
  4   128 		2 data_count fixed bin,
  4   129 		2 report_count fixed bin,
  4   130 		2 code_set fixed bin,
  4   131 		2 error_exit fixed bin,
  4   132 		2 prefix_size fixed bin,
  4   133 		2 blocked bit (1),
  4   134 		2 variable bit (1),
  4   135 		2 unbannered bit (1),
  4   136 		2 prefix_clause bit (1),
  4   137 		2 symbolic bit (1),
  4   138 		2 address_format_bit bit (1),
  4   139 		2 bsn bit(1),						/*06/07/76*/
  4   140 		2 process_area bit(1),					/*06/07/76*/
  4   141 		2 dupl_alt bit (1),			/* [3.0-3] */
  4   142 		2 dummy102 bit (23),
  4   143 		2 name_size fixed bin,
  4   144 		2 name char(32),
  4   145 		2 id char(32),
  4   146 		2 temp bit(1) ,
  4   147 		2 perm bit(1) ,
  4   148 		2 attach bit(1) ,
  4   149 		2 detach bit(1) ,
  4   150 		2 fsb ,		/* file state block */
  4   151 		     3 seg fixed bin(24), /* internal addr */
  4   152 		     3 off fixed bin(24),
  4   153 		2 tape,
  4   154 		     3 density bit(1) ,	/* 0-hi 1-lo */
  4   155 		     3 retain bit(1),	/* 0 not retained across attachment, 1 retained */
  4   156 		     3 force bit(1),	/* 0 check retention date, 1 no check */
  4   157 		     3 protect bit(1) ,	/* 0-no 1-yes */
  4   158 		     3 den_6250 bit(1),	/* 0-no 1-yes */		/*[4.4-1]*/
  4   159 		2 cat_nm char(200),
  4   160 		2 ao_len fixed bin(24),		/* attach options */
  4   161 		2 ao_string char(256),
  4   162 		2 output_mode fixed bin,	/*	0 not specified
  4   163*						1 generation
  4   164*						2 modification
  4   165*						3 replacement literal
  4   166*						4 replacement dataname	*/
  4   167 		2 om_len	fixed bin,		/* length of output mode */
  4   168 		2 om_string char(17),
  4   169 		2 tape_device fixed bin,	/*	0 not specified
  4   170*						1 integer
  4   171*						2 dataname	*/
  4   172 		2 tape_device_num fixed bin,
  4   173 		2 tape_device_key char(5),
  4   174 		2 add_cat_key char(5);
  4   175 
  4   176 
  4   177 /* END INCLUDE FILE ...   cobol_file_table.incl.pl1 */
  4   178 
  3   139 
  5     1 
  5     2 /* BEGIN INCLUDE FILE ... cobol_file_key.incl.pl1 */
  5     3 /* Last modified on 03/30/78 by FCH */
  5     4 
  5     5 /*
  5     6*A file key record is created in variable common for any one of several
  5     7*data items which may be associated with a file name.  The key_type field in
  5     8*the file key record identifies the type of item for which the record is
  5     9*created.  The name in a file key record is resolved by the replacement
  5    10*phase, and a section of the type 9 entry in the name table for the
  5    11*specified data item is stored in the file key record.  The stored
  5    12*description is subsequently used by the generator phase.
  5    13**/
  5    14 
  5    15 /*   THE FILE KEY RECORD STRUCTURE   */
  5    16 
  5    17 dcl 	1 file_key based (fkey_ptr),
  5    18 		2 next char(5),
  5    19 		2 next_alt char(5),
  5    20 		2 qual char(5),
  5    21 		2 info,
  5    22 		3 duplicates bit(1),
  5    23 		3 filler bit(7),
  5    24 		2 file_no fixed bin,
  5    25 		2 key_type fixed bin,
  5    26 		2 line fixed bin,
  5    27 		2 column fixed bin,
  5    28 		2 temp_seg fixed bin,
  5    29 		2 temp_offset fixed bin(24),
  5    30 		2 desc char(40),
  5    31 		2 name_size fixed bin,
  5    32 		2 name char(0 refer(file_key.name_size));
  5    33 
  5    34 /* END INCLUDE FILE ... cobol_file_key.incl.pl1 */
  5    35 
  3   140 
  6     1 
  6     2 /* BEGIN INCLUDE FILE ... cobol_type1.incl.pl1 */
  6     3 /* Last modified on 11/19/76 by ORN */
  6     4 
  6     5 /*
  6     6*A reserved word token is created in the minpral files for each occurrence
  6     7*of a reserved word in the source program.  The value of the key field
  6     8*indicates the specific reserved word which a type 1 token represents.
  6     9**/
  6    10 
  6    11 dcl rw_ptr ptr;
  6    12 
  6    13 /* BEGIN DECLARATION OF TYPE1 (RESERVED WORD) TOKEN */
  6    14 dcl	1 reserved_word based (rw_ptr),
  7     1 
  7     2 /* begin include file ... cobol_TYPE1.incl.pl1 */
  7     3 /* Last modified on 11/17/76 by ORN */
  7     4 /* Last modified on 12/28/76 by FCH */
  7     5 /* Last modified on 12/16/80 by FCH */
  7     6 
  7     7 		/* header */
  7     8 		2 size fixed bin,
  7     9 		2 line fixed bin,
  7    10 		2 column fixed bin,
  7    11 		2 type fixed bin,
  7    12 		/* body */
  7    13 		2 key fixed bin,
  7    14 		/* procedure division class bits */
  7    15 		2 verb bit (1),
  7    16 		2 arith_op bit (1),
  7    17 		2 figcon bit (1),
  7    18 		2 terminator bit (1),
  7    19 		2 end_dec bit (1),
  7    20 		2 rel_op bit (1),
  7    21 		2 imper_verb bit (1),
  7    22 		2 end_cobol bit (1),
  7    23 		/* data division class bits */
  7    24 		2 section_header bit (1),
  7    25 		2 fs_ind bit (1),
  7    26 		2 fd_clause bit (1),
  7    27 		2 dd_clause bit (1),
  7    28 		2 cd_input bit (1),
  7    29 		2 cd_output bit (1),
  7    30 		2 cset_name bit (1),
  7    31 		2 ss_division bit (1),
  7    32 		2 repl_jump_ind bit (4),
  7    33 		2 ided_recovery bit (1),
  7    34 		2 report_writer bit (5),
  7    35 		2 ss_desc_entry bit (1),
  7    36 		2 jump_index fixed bin,
  7    37 		2 length fixed bin,
  7    38 		2 name char(0 refer(reserved_word.length));
  7    39 
  7    40 
  7    41 
  7    42 /* end include file ... cobol_TYPE1.incl.pl1 */
  7    43 
  6    15 
  6    16 /* END DECLARATION OF TYPE1 (RESERVED WORD) TOKEN */
  6    17 
  6    18 /* END INCLUDE FILE ... cobol_type1.incl.pl1 */
  6    19 
  3   141 
  8     1 
  8     2 /* BEGIN INCLUDE FILE ... cobol_type12.incl.pl1 */
  8     3 /* Last modified on 11/19/76 by ORN */
  8     4 
  8     5 /*
  8     6*A type 12 file name token is entered into the name table by the data
  8     7*division syntax phase for each file name appearing in the data division.
  8     8*When the replacement phase processes the procedure division minpral file,
  8     9*each reference to a file name is replaced with the type 12 token created
  8    10*for that file name.
  8    11**/
  8    12 
  8    13 /* dcl name_ptr ptr; */
  8    14 
  8    15 /* BEGIN DECLARATION OF TYPE12 (FILE NAME) TOKEN */
  8    16 dcl 	1 fd_token based (name_ptr),
  9     1 
  9     2 /* begin include file ... cobol_TYPE12.incl.pl1 */
  9     3 /* Last modified on 11/17/76 by ORN */
  9     4 
  9     5 		/* header */
  9     6 		2 size fixed bin,
  9     7 		2 line fixed bin,
  9     8 		2 column fixed bin,
  9     9 		2 type fixed bin,
  9    10 		/* body */
  9    11 		2 string_ptr ptr,
  9    12 		2 prev_rec ptr,
  9    13 		2 info bit (8),
  9    14 		2 def_line fixed bin,
  9    15 		2 file_no fixed bin,
  9    16 		2 name_size fixed bin,
  9    17 		2 name char(0 refer(fd_token.name_size));	
  9    18 
  9    19 /* end include file ... cobol_TYPE12.incl.pl1 */
  9    20 
  8    17 
  8    18 /* END DECLARATION OF TYPE12 (FILE NAME) TOKEN */
  8    19 
  8    20 
  8    21 /* END INCLUDE FILE ... cobol_type12.incl.pl1 */
  8    22 
  3   142 
 10     1 
 10     2 /* BEGIN INCLUDE FILE ... cobol_type19.incl.pl1 */
 10     3 /* last modified on 11/19/76 by ORN */
 10     4 
 10     5 /*
 10     6*A type 19 end of statement token is created in the procedure division
 10     7*minpral file at the end of each minpral statement generated by the
 10     8*procedure division syntax phase.  A minpral statement may be a complete or
 10     9*partial source language statement.  A type 19 token contains information
 10    10*describing the statement which it delimits.
 10    11**/
 10    12 
 10    13 dcl eos_ptr ptr;
 10    14 
 10    15 /* BEGIN DECLARATION OF TYPE19 (END STATEMENT) TOKEN */
 10    16 dcl	1 end_stmt based (eos_ptr),
 11     1 
 11     2 /* begin include file ... cobol_TYPE19.incl.pl1 */
 11     3 /* Last modified on 11/17/76 by ORN */
 11     4 
 11     5 		/* header */
 11     6 		2 size fixed bin,
 11     7 		2 line fixed bin,
 11     8 		2 column fixed bin,
 11     9 		2 type fixed bin,
 11    10 		/* body */
 11    11 		2 verb fixed bin,
 11    12 		2 e fixed bin,
 11    13 		2 h fixed bin,
 11    14 		2 i fixed bin,
 11    15 		2 j fixed bin,
 11    16 		2 a bit (3),
 11    17 		2 b bit (1),
 11    18 		2 c bit (1),
 11    19 		2 d bit (2),
 11    20 		2 f bit (2),
 11    21 		2 g bit (2),
 11    22 		2 k bit (5),
 11    23 		2 always_an bit (1);
 11    24 
 11    25 /* end include file ... cobol_TYPE19.incl.pl1 */
 11    26 
 10    17 
 10    18 /* END DECLARATION OF TYPE19 (END STATEMENT) TOKEN */
 10    19 
 10    20 /*
 10    21*FIELD		CONTENTS
 10    22*
 10    23*size		The total size in bytes of this end of statement token.
 10    24*line		0
 10    25*column		0
 10    26*type		19
 10    27*verb		A value indicating the verb in this statement
 10    28*		 1 = accept
 10    29*		 2 = add
 10    30*		 3 = on size error
 10    31*		 4 = alter
 10    32*		 5 = call
 10    33*		 7 = cancel
 10    34*		 8 = close
 10    35*		 9 = divide
 10    36*		10 = multiply
 10    37*		11 = subtract
 10    38*		12 = exit
 10    39*		14 = go
 10    40*		15 = merge
 10    41*		16 = initiate
 10    42*		17 = inspect
 10    43*		18 = move
 10    44*		19 = open
 10    45*		20 = perform
 10    46*		21 = read
 10    47*		23 = receive
 10    48*		24 = release
 10    49*		25 = return
 10    50*		26 = search
 10    51*		27 = rewrite
 10    52*		29 = seek
 10    53*		30 = send
 10    54*		31 = set
 10    55*		33 = stop
 10    56*		34 = string
 10    57*		35 = suspend
 10    58*		36 = terminate
 10    59*		37 = unstring
 10    60*		38 = write
 10    61*		39 = use
 10    62*		40 = compute
 10    63*		41 = disable
 10    64*		42 = display
 10    65*		43 = enable
 10    66*		45 = generate
 10    67*		46 = hold
 10    68*		48 = process
 10    69*		49 = sort
 10    70*		52 = procedure
 10    71*		53 = declaratives
 10    72*		54 = section name
 10    73*		55 = paragraph name
 10    74*		98 = end
 10    75*e,h,i,j		The significance of these fields differs with each
 10    76*		statement.  These fields are normally used as counters.
 10    77*a,b,c,d,f,g,k	The significance of these fields differs with each
 10    78*		statement.  These fields are normally used as indicators.
 10    79**/
 10    80 
 10    81 /* END INCLUDE FILE ... cobol_type19.incl.pl1 */
 10    82 
  3   143 
 12     1 
 12     2 /* BEGIN INCLUDE FILE ... cobol_.incl.pl1 */
 12     3 /* last modified Feb 4, 1977 by ORN  */
 12     4 
 12     5 /* This file defines all external data used in the generator phase of Multics Cobol */
 12     6 
 12     7 /* POINTERS */
 12     8 dcl cobol_$text_base_ptr ptr  ext;
 12     9 dcl text_base_ptr ptr  defined (cobol_$text_base_ptr);
 12    10 dcl cobol_$con_end_ptr ptr  ext;
 12    11 dcl con_end_ptr ptr  defined (cobol_$con_end_ptr);
 12    12 dcl cobol_$def_base_ptr ptr  ext;
 12    13 dcl def_base_ptr ptr  defined (cobol_$def_base_ptr);
 12    14 dcl cobol_$link_base_ptr ptr  ext;
 12    15 dcl link_base_ptr ptr  defined (cobol_$link_base_ptr);
 12    16 dcl cobol_$sym_base_ptr ptr  ext;
 12    17 dcl sym_base_ptr ptr  defined (cobol_$sym_base_ptr);
 12    18 dcl cobol_$reloc_text_base_ptr ptr  ext;
 12    19 dcl reloc_text_base_ptr ptr  defined (cobol_$reloc_text_base_ptr);
 12    20 dcl cobol_$reloc_def_base_ptr ptr  ext;
 12    21 dcl reloc_def_base_ptr ptr  defined (cobol_$reloc_def_base_ptr);
 12    22 dcl cobol_$reloc_link_base_ptr ptr  ext;
 12    23 dcl reloc_link_base_ptr ptr  defined (cobol_$reloc_link_base_ptr);
 12    24 dcl cobol_$reloc_sym_base_ptr ptr  ext;
 12    25 dcl reloc_sym_base_ptr ptr  defined (cobol_$reloc_sym_base_ptr);
 12    26 dcl cobol_$reloc_work_base_ptr ptr  ext;
 12    27 dcl reloc_work_base_ptr ptr  defined (cobol_$reloc_work_base_ptr);
 12    28 dcl cobol_$pd_map_ptr ptr  ext;
 12    29 dcl pd_map_ptr ptr  defined (cobol_$pd_map_ptr);
 12    30 dcl cobol_$fixup_ptr ptr  ext;
 12    31 dcl fixup_ptr ptr  defined (cobol_$fixup_ptr);
 12    32 dcl cobol_$initval_base_ptr ptr  ext;
 12    33 dcl initval_base_ptr ptr  defined (cobol_$initval_base_ptr);
 12    34 dcl cobol_$initval_file_ptr ptr  ext;
 12    35 dcl initval_file_ptr ptr  defined (cobol_$initval_file_ptr);
 12    36 dcl cobol_$perform_list_ptr ptr  ext;
 12    37 dcl perform_list_ptr ptr  defined (cobol_$perform_list_ptr);
 12    38 dcl cobol_$alter_list_ptr ptr  ext;
 12    39 dcl alter_list_ptr ptr  defined (cobol_$alter_list_ptr);
 12    40 dcl cobol_$seg_init_list_ptr ptr  ext;
 12    41 dcl seg_init_list_ptr ptr  defined (cobol_$seg_init_list_ptr);
 12    42 dcl cobol_$temp_token_area_ptr ptr  ext;
 12    43 dcl temp_token_area_ptr ptr  defined (cobol_$temp_token_area_ptr);
 12    44 dcl cobol_$temp_token_ptr ptr  ext;
 12    45 dcl temp_token_ptr ptr  defined (cobol_$temp_token_ptr);
 12    46 dcl cobol_$token_block1_ptr ptr  ext;
 12    47 dcl token_block1_ptr ptr  defined (cobol_$token_block1_ptr);
 12    48 dcl cobol_$token_block2_ptr ptr  ext;
 12    49 dcl token_block2_ptr ptr  defined (cobol_$token_block2_ptr);
 12    50 dcl cobol_$minpral5_ptr ptr  ext;
 12    51 dcl minpral5_ptr ptr  defined (cobol_$minpral5_ptr);
 12    52 dcl cobol_$tag_table_ptr ptr  ext;
 12    53 dcl tag_table_ptr ptr  defined (cobol_$tag_table_ptr);
 12    54 dcl cobol_$map_data_ptr ptr  ext;
 12    55 dcl map_data_ptr ptr  defined (cobol_$map_data_ptr);
 12    56 dcl cobol_$ptr_status_ptr ptr  ext;
 12    57 dcl ptr_status_ptr ptr  defined (cobol_$ptr_status_ptr);
 12    58 dcl cobol_$reg_status_ptr ptr  ext;
 12    59 dcl reg_status_ptr ptr  defined (cobol_$reg_status_ptr);
 12    60 dcl cobol_$misc_base_ptr ptr ext;
 12    61 dcl misc_base_ptr ptr defined (cobol_$misc_base_ptr);
 12    62 dcl cobol_$misc_end_ptr ptr ext;
 12    63 dcl misc_end_ptr ptr defined (cobol_$misc_end_ptr);
 12    64 dcl cobol_$list_ptr ptr ext;
 12    65 dcl list_ptr ptr defined (cobol_$list_ptr);
 12    66 dcl cobol_$allo1_ptr ptr ext;
 12    67 dcl allo1_ptr ptr defined (cobol_$allo1_ptr);
 12    68 dcl cobol_$eln_ptr ptr ext;
 12    69 dcl eln_ptr ptr defined (cobol_$eln_ptr);
 12    70 dcl cobol_$diag_ptr ptr ext;
 12    71 dcl diag_ptr ptr defined (cobol_$diag_ptr);
 12    72 dcl cobol_$xref_token_ptr ptr ext;
 12    73 dcl xref_token_ptr ptr defined (cobol_$xref_token_ptr);
 12    74 dcl cobol_$xref_chain_ptr ptr ext;
 12    75 dcl xref_chain_ptr ptr defined (cobol_$xref_chain_ptr);
 12    76 dcl cobol_$statement_info_ptr ptr ext;
 12    77 dcl statement_info_ptr ptr defined (cobol_$statement_info_ptr);
 12    78 dcl cobol_$reswd_ptr ptr ext;
 12    79 dcl reswd_ptr ptr defined (cobol_$reswd_ptr);
 12    80 dcl cobol_$op_con_ptr ptr ext;
 12    81 dcl op_con_ptr ptr defined (cobol_$op_con_ptr);
 12    82 dcl cobol_$ntbuf_ptr ptr ext;
 12    83 dcl ntbuf_ptr ptr defined (cobol_$ntbuf_ptr);
 12    84 dcl cobol_$main_pcs_ptr ptr ext;
 12    85 dcl main_pcs_ptr ptr defined (cobol_$main_pcs_ptr);
 12    86 dcl cobol_$include_info_ptr ptr ext;
 12    87 dcl include_info_ptr ptr defined (cobol_$include_info_ptr);
 12    88 
 12    89 /* FIXED BIN */
 12    90 dcl cobol_$text_wd_off fixed bin  ext;
 12    91 dcl text_wd_off fixed bin  defined (cobol_$text_wd_off);
 12    92 dcl cobol_$con_wd_off fixed bin  ext;
 12    93 dcl con_wd_off fixed bin  defined (cobol_$con_wd_off);
 12    94 dcl cobol_$def_wd_off fixed bin  ext;
 12    95 dcl def_wd_off fixed bin  defined (cobol_$def_wd_off);
 12    96 dcl cobol_$def_max fixed bin  ext;
 12    97 dcl def_max fixed bin  defined (cobol_$def_max);
 12    98 dcl cobol_$link_wd_off fixed bin  ext;
 12    99 dcl link_wd_off fixed bin  defined (cobol_$link_wd_off);
 12   100 dcl cobol_$link_max fixed bin  ext;
 12   101 dcl link_max fixed bin  defined (cobol_$link_max);
 12   102 dcl cobol_$sym_wd_off fixed bin  ext;
 12   103 dcl sym_wd_off fixed bin  defined (cobol_$sym_wd_off);
 12   104 dcl cobol_$sym_max fixed bin  ext;
 12   105 dcl sym_max fixed bin  defined (cobol_$sym_max);
 12   106 dcl cobol_$reloc_text_max fixed bin(24)  ext;
 12   107 dcl reloc_text_max fixed bin(24)  defined (cobol_$reloc_text_max);
 12   108 dcl cobol_$reloc_def_max fixed bin(24)  ext;
 12   109 dcl reloc_def_max fixed bin(24)  defined (cobol_$reloc_def_max);
 12   110 dcl cobol_$reloc_link_max fixed bin(24)  ext;
 12   111 dcl reloc_link_max fixed bin(24)  defined (cobol_$reloc_link_max);
 12   112 dcl cobol_$reloc_sym_max fixed bin(24)  ext;
 12   113 dcl reloc_sym_max fixed bin(24)  defined (cobol_$reloc_sym_max);
 12   114 dcl cobol_$reloc_work_max fixed bin(24)  ext;
 12   115 dcl reloc_work_max fixed bin(24)  defined (cobol_$reloc_work_max);
 12   116 dcl cobol_$pd_map_index fixed bin  ext;
 12   117 dcl pd_map_index fixed bin  defined (cobol_$pd_map_index);
 12   118 dcl cobol_$cobol_data_wd_off fixed bin  ext;
 12   119 dcl cobol_data_wd_off fixed bin  defined (cobol_$cobol_data_wd_off);
 12   120 dcl cobol_$stack_off fixed bin  ext;
 12   121 dcl stack_off fixed bin  defined (cobol_$stack_off);
 12   122 dcl cobol_$max_stack_off fixed bin  ext;
 12   123 dcl max_stack_off fixed bin  defined (cobol_$max_stack_off);
 12   124 dcl cobol_$init_stack_off fixed bin  ext;
 12   125 dcl init_stack_off fixed bin  defined (cobol_$init_stack_off);
 12   126 dcl cobol_$pd_map_sw fixed bin  ext;
 12   127 dcl pd_map_sw fixed bin  defined (cobol_$pd_map_sw);
 12   128 dcl cobol_$next_tag fixed bin  ext;
 12   129 dcl next_tag fixed bin  defined (cobol_$next_tag);
 12   130 dcl cobol_$data_init_flag fixed bin  ext;
 12   131 dcl data_init_flag fixed bin  defined (cobol_$data_init_flag);
 12   132 dcl cobol_$seg_init_flag fixed bin  ext;
 12   133 dcl seg_init_flag fixed bin  defined (cobol_$seg_init_flag);
 12   134 dcl cobol_$alter_flag fixed bin  ext;
 12   135 dcl alter_flag fixed bin  defined (cobol_$alter_flag);
 12   136 dcl cobol_$sect_eop_flag fixed bin  ext;
 12   137 dcl sect_eop_flag fixed bin  defined (cobol_$sect_eop_flag);
 12   138 dcl cobol_$para_eop_flag fixed bin  ext;
 12   139 dcl para_eop_flag fixed bin  defined (cobol_$para_eop_flag);
 12   140 dcl cobol_$priority_no fixed bin  ext;
 12   141 dcl priority_no fixed bin  defined (cobol_$priority_no);
 12   142 dcl cobol_$compile_count fixed bin ext;
 12   143 dcl compile_count fixed bin defined (cobol_$compile_count);
 12   144 dcl cobol_$ptr_assumption_ind fixed bin ext;
 12   145 dcl ptr_assumption_ind fixed bin defined (cobol_$ptr_assumption_ind);
 12   146 dcl cobol_$reg_assumption_ind fixed bin ext;
 12   147 dcl reg_assumption_ind fixed bin defined (cobol_$reg_assumption_ind);
 12   148 dcl cobol_$perform_para_index fixed bin ext;
 12   149 dcl perform_para_index fixed bin defined (cobol_$perform_para_index);
 12   150 dcl cobol_$perform_sect_index fixed bin ext;
 12   151 dcl perform_sect_index fixed bin defined (cobol_$perform_sect_index);
 12   152 dcl cobol_$alter_index fixed bin ext;
 12   153 dcl alter_index fixed bin defined (cobol_$alter_index);
 12   154 dcl cobol_$list_off fixed bin ext;
 12   155 dcl list_off fixed bin defined (cobol_$list_off);
 12   156 dcl cobol_$constant_offset fixed bin ext;
 12   157 dcl constant_offset fixed bin defined (cobol_$constant_offset);
 12   158 dcl cobol_$misc_max fixed bin ext;
 12   159 dcl misc_max fixed bin defined (cobol_$misc_max);
 12   160 dcl cobol_$pd_map_max fixed bin ext;
 12   161 dcl pd_map_max fixed bin defined (cobol_$pd_map_max);
 12   162 dcl cobol_$map_data_max fixed bin ext;
 12   163 dcl map_data_max fixed bin defined (cobol_$map_data_max);
 12   164 dcl cobol_$fixup_max fixed bin ext;
 12   165 dcl fixup_max fixed bin defined (cobol_$fixup_max);
 12   166 dcl cobol_$tag_table_max fixed bin ext;
 12   167 dcl tag_table_max fixed bin defined (cobol_$tag_table_max);
 12   168 dcl cobol_$temp_token_max fixed bin ext;
 12   169 dcl temp_token_max fixed bin defined (cobol_$temp_token_max);
 12   170 dcl cobol_$allo1_max fixed bin ext;
 12   171 dcl allo1_max fixed bin defined (cobol_$allo1_max);
 12   172 dcl cobol_$eln_max fixed bin ext;
 12   173 dcl eln_max fixed bin defined (cobol_$eln_max);
 12   174 dcl cobol_$debug_enable fixed bin ext;
 12   175 dcl debug_enable fixed bin defined (cobol_$debug_enable);
 12   176 dcl cobol_$non_source_offset fixed bin ext;
 12   177 dcl non_source_offset fixed bin defined (cobol_$non_source_offset);
 12   178 dcl cobol_$initval_flag fixed bin ext;
 12   179 dcl initval_flag fixed bin defined (cobol_$initval_flag);
 12   180 dcl cobol_$date_compiled_sw fixed bin ext;
 12   181 dcl date_compiled_sw fixed bin defined (cobol_$date_compiled_sw);
 12   182 dcl cobol_$include_cnt fixed bin ext;
 12   183 dcl include_cnt fixed bin defined (cobol_$include_cnt);
 12   184 dcl cobol_$fs_charcnt fixed bin ext;
 12   185 dcl fs_charcnt fixed bin defined (cobol_$fs_charcnt);
 12   186 dcl cobol_$ws_charcnt fixed bin ext;
 12   187 dcl ws_charcnt fixed bin defined (cobol_$ws_charcnt);
 12   188 dcl cobol_$coms_charcnt fixed bin ext;
 12   189 dcl coms_charcnt fixed bin defined (cobol_$coms_charcnt);
 12   190 dcl cobol_$ls_charcnt fixed bin ext;
 12   191 dcl ls_charcnt fixed bin defined (cobol_$ls_charcnt);
 12   192 dcl cobol_$cons_charcnt fixed bin ext;
 12   193 dcl cons_charcnt fixed bin defined (cobol_$cons_charcnt);
 12   194 dcl cobol_$value_cnt fixed bin ext;
 12   195 dcl value_cnt fixed bin defined (cobol_$value_cnt);
 12   196 dcl cobol_$cd_cnt fixed bin ext;
 12   197 dcl cd_cnt fixed bin defined (cobol_$cd_cnt);
 12   198 dcl cobol_$fs_wdoff fixed bin ext;
 12   199 dcl fs_wdoff fixed bin defined (cobol_$fs_wdoff);
 12   200 dcl cobol_$ws_wdoff fixed bin ext;
 12   201 dcl ws_wdoff fixed bin defined (cobol_$ws_wdoff);
 12   202 dcl cobol_$coms_wdoff fixed bin ext;
 12   203 dcl coms_wdoff fixed bin defined (cobol_$coms_wdoff);
 12   204 
 12   205 /* CHARACTER */
 12   206 dcl cobol_$scratch_dir char (168)   aligned ext;
 12   207 dcl scratch_dir char (168)   aligned defined (cobol_$scratch_dir);			/* -42- */
 12   208 dcl cobol_$obj_seg_name char (32)   aligned ext;
 12   209 dcl obj_seg_name char (32)   aligned defined (cobol_$obj_seg_name);		/* -8- */
 12   210 
 12   211 /* BIT */
 12   212 dcl cobol_$xref_bypass bit(1) aligned ext;
 12   213 dcl xref_bypass bit(1) aligned defined (cobol_$xref_bypass);			/* -1- */
 12   214 dcl cobol_$same_sort_merge_proc bit(1) aligned ext;
 12   215 dcl same_sort_merge_proc bit(1) aligned defined (cobol_$same_sort_merge_proc);		/* -1- */
 12   216 
 12   217 
 12   218 /* END INCLUDE FILE ... cobol_incl.pl1*/
 12   219 
 12   220 
  3   144 
  3   145 
      352 
      353      end cobol_delete_gen;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/24/89  0830.2  cobol_delete_gen.pl1              >spec>install>MR12.3-1048>cobol_delete_gen.pl1
351          1    03/27/82  0439.3  cobol_delete_gen_info.incl.pl1    >ldd>include>cobol_delete_gen_info.incl.pl1
1-109        2    03/27/82  0439.5  cobol_opr_delete.incl.pl1         >ldd>include>cobol_opr_delete.incl.pl1
352          3    03/27/82  0431.4  cobol_delete_gen_data.incl.pl1    >ldd>include>cobol_delete_gen_data.incl.pl1
3-139        4    11/11/82  1712.7  cobol_file_table.incl.pl1         >ldd>include>cobol_file_table.incl.pl1
3-140        5    11/11/82  1712.8  cobol_file_key.incl.pl1           >ldd>include>cobol_file_key.incl.pl1
3-141        6    03/27/82  0439.8  cobol_type1.incl.pl1              >ldd>include>cobol_type1.incl.pl1
6-15         7    11/11/82  1712.8  cobol_TYPE1.incl.pl1              >ldd>include>cobol_TYPE1.incl.pl1
3-142        8    11/11/82  1712.8  cobol_type12.incl.pl1             >ldd>include>cobol_type12.incl.pl1
8-17         9    03/27/82  0439.6  cobol_TYPE12.incl.pl1             >ldd>include>cobol_TYPE12.incl.pl1
3-143       10    03/27/82  0439.8  cobol_type19.incl.pl1             >ldd>include>cobol_type19.incl.pl1
10-17       11    03/27/82  0439.6  cobol_TYPE19.incl.pl1             >ldd>include>cobol_TYPE19.incl.pl1
3-144       12    11/11/82  1712.7  cobol_.incl.pl1                   >ldd>include>cobol_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
access                   45            based           fixed bin(17,0)          level 2 dcl 4-25 ref 144 197 224
addr                                                   builtin function         dcl 3-135 ref 91 110 176 180 185 218 242 246 246 269
                                                                                  273 273
aloff                           000152 automatic       fixed bin(17,0)          dcl 78 set ref 114* 115 116
alpha_type9                     000056 internal static structure                level 1 unaligned dcl 3-45 set ref 218
alt_sw                          000146 automatic       bit(1)                   packed unaligned dcl 71 set ref 139* 224 279 320 346
alternate_keys           51            based           fixed bin(17,0)          level 2 dcl 4-25 ref 139
arg_ptr                         000142 automatic       pointer                  dcl 66 set ref 110*
arglist_off               1     000102 automatic       fixed bin(17,0)          level 2 dcl 39 set ref 115*
args                            000102 automatic       structure                level 1 unaligned dcl 39 set ref 110
b                        11(03)        based           bit(1)                   level 2 packed packed unaligned dcl 10-16 ref 96
cobol_$next_tag                 000236 external static fixed bin(17,0)          dcl 12-128 set ref 98 99 101* 101 106 107* 107 121
                                                                                  123 124* 124 147 149* 149 200 201* 201 233 234*
                                                                                  234 251 252* 252 267 268* 268 322 323* 323 334
                                                                                  335* 335
cobol_alloc$stack               000212 constant        entry                    external dcl 3-118 ref 114 227
cobol_call_op                   000202 constant        entry                    external dcl 3-114 ref 132 155 208 236 258 286 295
                                                                                  326 339 346
cobol_code                      000160 internal static fixed bin(17,0)          level 2 dcl 3-89 set ref 92* 307
cobol_define_tag                000220 constant        entry                    external dcl 3-121 ref 126 136 161 213 240 262 299
                                                                                  330 343
cobol_gen_ioerror               000200 constant        entry                    external dcl 3-113 ref 134 157 211 238 260 297 328
                                                                                  341
cobol_gen_ioerror$finish_up     000174 constant        entry                    external dcl 3-111 ref 312
cobol_io_util$bypass_mode_error 000230 constant        entry                    external dcl 3-128 ref 203
cobol_io_util$bypass_seqerror   000232 constant        entry                    external dcl 3-129 ref 151
cobol_io_util$file_desc         000224 constant        entry                    external dcl 3-125 ref 284
cobol_io_util$fsb_key_loc       000234 constant        entry                    external dcl 3-131 ref 281
cobol_io_util$move_direct       000226 constant        entry                    external dcl 3-126 ref 163 248 275
cobol_ioop_util$lda_du          000206 constant        entry                    external dcl 3-116 ref 230 254
cobol_ioop_util$set_icode       000172 constant        entry                    external dcl 3-110 ref 256 293
cobol_ioop_util$set_x5          000210 constant        entry                    external dcl 3-117 ref 153 206
cobol_move_gen                  000222 constant        entry                    external dcl 3-124 ref 246 273
cobol_read_ft                   000214 constant        entry                    external dcl 3-119 ref 112
cobol_read_rand                 000216 constant        entry                    external dcl 3-120 ref 174
cobol_reg_manager$after_op      000176 constant        entry                    external dcl 3-112 ref 307
cobol_set_fsbptr                000204 constant        entry                    external dcl 3-115 ref 128 166 215 244 271 289 331
                                                                                  337
delete_seq_errno                000170 internal static fixed bin(17,0)          initial dcl 3-104 set ref 153*
delete_tag                      000147 automatic       fixed bin(17,0)          dcl 73 set ref 334* 339* 343*
desc                     12            based           char(40)                 level 2 packed packed unaligned dcl 5-17 ref 176
end_stmt                               based           structure                level 1 unaligned dcl 10-16
eos_ptr                         000160 automatic       pointer                  dcl 10-13 set ref 90* 96 310
external                 33(10)        based           bit(1)                   level 2 packed packed unaligned dcl 4-25 ref 197
f                        11(07)        based           bit(2)                   level 2 packed packed unaligned dcl 10-16 ref 310
fd_token                               based           structure                level 1 unaligned dcl 8-16
file_desc_1_offset       13            based           fixed bin(24,0)          level 2 dcl 4-25 set ref 284*
file_key                               based           structure                level 1 unaligned dcl 5-17
file_key_desc                          based           char(40)                 packed unaligned dcl 3-30 set ref 176*
file_key_info            13     000022 internal static structure                level 2 in structure "num_type9" unaligned dcl 3-31
                                                                                  in procedure "cobol_delete_gen"
file_key_info            13     000056 internal static structure                level 2 in structure "alpha_type9" unaligned
                                                                                  dcl 3-45 in procedure "cobol_delete_gen"
file_key_info            13     000112 internal static structure                level 2 in structure "fkey_type9" unaligned dcl 3-58
                                                                                  in procedure "cobol_delete_gen" set ref 176
file_no                  12            based           fixed bin(17,0)          level 2 dcl 8-16 set ref 112*
file_table                             based           structure                level 1 unaligned dcl 4-25
fkey_ptr                        000140 automatic       pointer                  dcl 63 set ref 174* 176
fkey_type9                      000112 internal static structure                level 1 unaligned dcl 3-58 set ref 180
fsb                     124            based           structure                level 2 unaligned dcl 4-25
fsb_key                                constant        fixed bin(17,0)          initial dcl 3-100 ref 191 221
fsb_keylen_sw                   000167 internal static fixed bin(17,0)          initial dcl 3-99 set ref 163* 248* 275*
ft_ptr                          000136 automatic       pointer                  dcl 61 set ref 112* 128* 134* 139 139 144 157* 166*
                                                                                  174 182 191 197 197 197 211* 215* 221 224 224 238*
                                                                                  244* 260* 271* 284 289* 297* 312* 328* 331* 337*
                                                                                  341*
ioerror                         000160 internal static structure                level 1 unaligned dcl 3-89 set ref 91
ioerror_ptr                     000144 automatic       pointer                  dcl 68 set ref 91* 134* 157* 211* 238* 260* 297*
                                                                                  312* 328* 341*
is_tag                    2     000160 internal static fixed bin(17,0)          level 2 dcl 3-89 set ref 94* 98* 104* 310
mode                      6     000160 internal static fixed bin(17,0)          level 2 dcl 3-89 set ref 95*
mp                                     based           structure                level 1 unaligned dcl 34
mp_ptr                                 parameter       pointer                  dcl 33 ref 28 88 90 93 112 178
mpout                           000010 internal static structure                level 1 unaligned dcl 3-24 set ref 246 246 273 273
ns_tag                    3     000160 internal static fixed bin(17,0)          level 2 dcl 3-89 set ref 100* 106*
ntag                            000155 automatic       fixed bin(17,0)          dcl 83 set ref 147* 151* 155* 161* 200* 203* 208*
                                                                                  213* 233* 236* 240* 251* 258* 262* 267* 295* 299*
                                                                                  322* 326* 330*
num_type9                       000022 internal static structure                level 1 unaligned dcl 3-31 set ref 185
off                      24     000022 internal static fixed bin(17,0)          level 3 in structure "num_type9" dcl 3-31
                                                                                  in procedure "cobol_delete_gen" set ref 191*
off                      24     000056 internal static fixed bin(17,0)          level 3 in structure "alpha_type9" dcl 3-45
                                                                                  in procedure "cobol_delete_gen" set ref 221*
off                     125            based           fixed bin(24,0)          level 3 in structure "file_table" dcl 4-25
                                                                                  in procedure "cobol_delete_gen" ref 191 221
open_out                 34(03)        based           bit(1)                   level 2 packed packed unaligned dcl 4-25 ref 197
organization             43            based           fixed bin(17,0)          level 2 dcl 4-25 ref 139 182
output_errno                    000171 internal static fixed bin(17,0)          initial dcl 3-105 set ref 206*
passed_tag                             parameter       fixed bin(17,0)          dcl 31 set ref 28 99* 310*
places_left              17     000022 internal static fixed bin(17,0)          level 3 dcl 3-31 set ref 187*
pt1                       2     000010 internal static pointer                  level 2 in structure "mpout" dcl 3-24 in procedure
                                                                                  "cobol_delete_gen" set ref 178*
pt1                       2            based           pointer                  level 2 in structure "mp" dcl 34 in procedure
                                                                                  "cobol_delete_gen" ref 88 93 178
pt2                       4            based           pointer                  level 2 in structure "mp" dcl 34 in procedure
                                                                                  "cobol_delete_gen" ref 112
pt2                       4     000010 internal static pointer                  level 2 in structure "mpout" dcl 3-24 in procedure
                                                                                  "cobol_delete_gen" set ref 180*
pt3                       6     000010 internal static pointer                  level 2 in structure "mpout" dcl 3-24 in procedure
                                                                                  "cobol_delete_gen" set ref 185* 218*
pt3                       6            based           pointer                  level 2 in structure "mp" dcl 34 in procedure
                                                                                  "cobol_delete_gen" ref 90
pt4                      10     000010 internal static pointer                  level 2 dcl 3-24 set ref 242* 269*
ptag                            000100 automatic       fixed bin(17,0)          dcl 32 set ref 99* 100 105*
r_key_info               22(18)        based           char(5)                  level 2 packed packed unaligned dcl 4-25 set ref
                                                                                  174*
read_next                34(14)        based           bit(1)                   level 2 packed packed unaligned dcl 4-25 ref 224
reclen_off                      000154 automatic       fixed bin(17,0)          dcl 80 set ref 116*
retry_tag                 1     000160 internal static fixed bin(17,0)          level 2 dcl 3-89 set ref 121* 126*
rw_ptr                          000156 automatic       pointer                  dcl 6-11 set ref 88*
seg                      23     000022 internal static fixed bin(17,0)          initial level 3 in structure "num_type9" dcl 3-31
                                                                                  in procedure "cobol_delete_gen" set ref 189*
seg                      23     000056 internal static fixed bin(17,0)          initial level 3 in structure "alpha_type9" dcl 3-45
                                                                                  in procedure "cobol_delete_gen" set ref 220*
size                     16     000056 internal static fixed bin(17,0)          initial level 3 in structure "alpha_type9" dcl 3-45
                                                                                  in procedure "cobol_delete_gen" set ref 219*
size                            000153 automatic       fixed bin(17,0)          dcl 79 in procedure "cobol_delete_gen" set ref 187*
                                                                                  219* 248 248 275 275
size                     16     000022 internal static fixed bin(17,0)          initial level 3 in structure "num_type9" dcl 3-31
                                                                                  in procedure "cobol_delete_gen" set ref 187*
size                     16     000112 internal static fixed bin(17,0)          initial level 3 in structure "fkey_type9" dcl 3-58
                                                                                  in procedure "cobol_delete_gen" set ref 219
stoff                           000151 automatic       fixed bin(17,0)          dcl 76 set ref 227* 230* 254*
substr                                                 builtin function         dcl 3-135 ref 248 248 275 275
type19                          000146 internal static structure                level 1 unaligned dcl 3-71 set ref 242 269
type1_ptr                 4     000160 internal static pointer                  level 2 dcl 3-89 set ref 93*
unopen_error_tag                000150 automatic       fixed bin(17,0)          dcl 75 set ref 123* 132* 136*
unspec                                                 builtin function         dcl 3-135 ref 248 248 275 275

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
addrel                                                 builtin function         dcl 3-135
allo1_max                              defined         fixed bin(17,0)          dcl 12-171
allo1_ptr                              defined         pointer                  dcl 12-67
alter_flag                             defined         fixed bin(17,0)          dcl 12-135
alter_index                            defined         fixed bin(17,0)          dcl 12-153
alter_list_ptr                         defined         pointer                  dcl 12-39
argb                                   based           bit(216)                 array packed unaligned dcl 57
binary                                                 builtin function         dcl 3-135
buf_off                                automatic       fixed bin(17,0)          dcl 82
cd_cnt                                 defined         fixed bin(17,0)          dcl 12-197
cobol_$allo1_max                       external static fixed bin(17,0)          dcl 12-170
cobol_$allo1_ptr                       external static pointer                  dcl 12-66
cobol_$alter_flag                      external static fixed bin(17,0)          dcl 12-134
cobol_$alter_index                     external static fixed bin(17,0)          dcl 12-152
cobol_$alter_list_ptr                  external static pointer                  dcl 12-38
cobol_$cd_cnt                          external static fixed bin(17,0)          dcl 12-196
cobol_$cobol_data_wd_off               external static fixed bin(17,0)          dcl 12-118
cobol_$compile_count                   external static fixed bin(17,0)          dcl 12-142
cobol_$coms_charcnt                    external static fixed bin(17,0)          dcl 12-188
cobol_$coms_wdoff                      external static fixed bin(17,0)          dcl 12-202
cobol_$con_end_ptr                     external static pointer                  dcl 12-10
cobol_$con_wd_off                      external static fixed bin(17,0)          dcl 12-92
cobol_$cons_charcnt                    external static fixed bin(17,0)          dcl 12-192
cobol_$constant_offset                 external static fixed bin(17,0)          dcl 12-156
cobol_$data_init_flag                  external static fixed bin(17,0)          dcl 12-130
cobol_$date_compiled_sw                external static fixed bin(17,0)          dcl 12-180
cobol_$debug_enable                    external static fixed bin(17,0)          dcl 12-174
cobol_$def_base_ptr                    external static pointer                  dcl 12-12
cobol_$def_max                         external static fixed bin(17,0)          dcl 12-96
cobol_$def_wd_off                      external static fixed bin(17,0)          dcl 12-94
cobol_$diag_ptr                        external static pointer                  dcl 12-70
cobol_$eln_max                         external static fixed bin(17,0)          dcl 12-172
cobol_$eln_ptr                         external static pointer                  dcl 12-68
cobol_$fixup_max                       external static fixed bin(17,0)          dcl 12-164
cobol_$fixup_ptr                       external static pointer                  dcl 12-30
cobol_$fs_charcnt                      external static fixed bin(17,0)          dcl 12-184
cobol_$fs_wdoff                        external static fixed bin(17,0)          dcl 12-198
cobol_$include_cnt                     external static fixed bin(17,0)          dcl 12-182
cobol_$include_info_ptr                external static pointer                  dcl 12-86
cobol_$init_stack_off                  external static fixed bin(17,0)          dcl 12-124
cobol_$initval_base_ptr                external static pointer                  dcl 12-32
cobol_$initval_file_ptr                external static pointer                  dcl 12-34
cobol_$initval_flag                    external static fixed bin(17,0)          dcl 12-178
cobol_$link_base_ptr                   external static pointer                  dcl 12-14
cobol_$link_max                        external static fixed bin(17,0)          dcl 12-100
cobol_$link_wd_off                     external static fixed bin(17,0)          dcl 12-98
cobol_$list_off                        external static fixed bin(17,0)          dcl 12-154
cobol_$list_ptr                        external static pointer                  dcl 12-64
cobol_$ls_charcnt                      external static fixed bin(17,0)          dcl 12-190
cobol_$main_pcs_ptr                    external static pointer                  dcl 12-84
cobol_$map_data_max                    external static fixed bin(17,0)          dcl 12-162
cobol_$map_data_ptr                    external static pointer                  dcl 12-54
cobol_$max_stack_off                   external static fixed bin(17,0)          dcl 12-122
cobol_$minpral5_ptr                    external static pointer                  dcl 12-50
cobol_$misc_base_ptr                   external static pointer                  dcl 12-60
cobol_$misc_end_ptr                    external static pointer                  dcl 12-62
cobol_$misc_max                        external static fixed bin(17,0)          dcl 12-158
cobol_$non_source_offset               external static fixed bin(17,0)          dcl 12-176
cobol_$ntbuf_ptr                       external static pointer                  dcl 12-82
cobol_$obj_seg_name                    external static char(32)                 dcl 12-208
cobol_$op_con_ptr                      external static pointer                  dcl 12-80
cobol_$para_eop_flag                   external static fixed bin(17,0)          dcl 12-138
cobol_$pd_map_index                    external static fixed bin(17,0)          dcl 12-116
cobol_$pd_map_max                      external static fixed bin(17,0)          dcl 12-160
cobol_$pd_map_ptr                      external static pointer                  dcl 12-28
cobol_$pd_map_sw                       external static fixed bin(17,0)          dcl 12-126
cobol_$perform_list_ptr                external static pointer                  dcl 12-36
cobol_$perform_para_index              external static fixed bin(17,0)          dcl 12-148
cobol_$perform_sect_index              external static fixed bin(17,0)          dcl 12-150
cobol_$priority_no                     external static fixed bin(17,0)          dcl 12-140
cobol_$ptr_assumption_ind              external static fixed bin(17,0)          dcl 12-144
cobol_$ptr_status_ptr                  external static pointer                  dcl 12-56
cobol_$reg_assumption_ind              external static fixed bin(17,0)          dcl 12-146
cobol_$reg_status_ptr                  external static pointer                  dcl 12-58
cobol_$reloc_def_base_ptr              external static pointer                  dcl 12-20
cobol_$reloc_def_max                   external static fixed bin(24,0)          dcl 12-108
cobol_$reloc_link_base_ptr             external static pointer                  dcl 12-22
cobol_$reloc_link_max                  external static fixed bin(24,0)          dcl 12-110
cobol_$reloc_sym_base_ptr              external static pointer                  dcl 12-24
cobol_$reloc_sym_max                   external static fixed bin(24,0)          dcl 12-112
cobol_$reloc_text_base_ptr             external static pointer                  dcl 12-18
cobol_$reloc_text_max                  external static fixed bin(24,0)          dcl 12-106
cobol_$reloc_work_base_ptr             external static pointer                  dcl 12-26
cobol_$reloc_work_max                  external static fixed bin(24,0)          dcl 12-114
cobol_$reswd_ptr                       external static pointer                  dcl 12-78
cobol_$same_sort_merge_proc            external static bit(1)                   dcl 12-214
cobol_$scratch_dir                     external static char(168)                dcl 12-206
cobol_$sect_eop_flag                   external static fixed bin(17,0)          dcl 12-136
cobol_$seg_init_flag                   external static fixed bin(17,0)          dcl 12-132
cobol_$seg_init_list_ptr               external static pointer                  dcl 12-40
cobol_$stack_off                       external static fixed bin(17,0)          dcl 12-120
cobol_$statement_info_ptr              external static pointer                  dcl 12-76
cobol_$sym_base_ptr                    external static pointer                  dcl 12-16
cobol_$sym_max                         external static fixed bin(17,0)          dcl 12-104
cobol_$sym_wd_off                      external static fixed bin(17,0)          dcl 12-102
cobol_$tag_table_max                   external static fixed bin(17,0)          dcl 12-166
cobol_$tag_table_ptr                   external static pointer                  dcl 12-52
cobol_$temp_token_area_ptr             external static pointer                  dcl 12-42
cobol_$temp_token_max                  external static fixed bin(17,0)          dcl 12-168
cobol_$temp_token_ptr                  external static pointer                  dcl 12-44
cobol_$text_base_ptr                   external static pointer                  dcl 12-8
cobol_$text_wd_off                     external static fixed bin(17,0)          dcl 12-90
cobol_$token_block1_ptr                external static pointer                  dcl 12-46
cobol_$token_block2_ptr                external static pointer                  dcl 12-48
cobol_$value_cnt                       external static fixed bin(17,0)          dcl 12-194
cobol_$ws_charcnt                      external static fixed bin(17,0)          dcl 12-186
cobol_$ws_wdoff                        external static fixed bin(17,0)          dcl 12-200
cobol_$xref_bypass                     external static bit(1)                   dcl 12-212
cobol_$xref_chain_ptr                  external static pointer                  dcl 12-74
cobol_$xref_token_ptr                  external static pointer                  dcl 12-72
cobol_data_wd_off                      defined         fixed bin(17,0)          dcl 12-119
cobol_io_util$bypass_error      000000 constant        entry                    external dcl 3-127
cobol_io_util$compare_key       000000 constant        entry                    external dcl 3-130
compile_count                          defined         fixed bin(17,0)          dcl 12-143
coms_charcnt                           defined         fixed bin(17,0)          dcl 12-189
coms_wdoff                             defined         fixed bin(17,0)          dcl 12-203
con_end_ptr                            defined         pointer                  dcl 12-11
con_wd_off                             defined         fixed bin(17,0)          dcl 12-93
cons_charcnt                           defined         fixed bin(17,0)          dcl 12-193
constant_offset                        defined         fixed bin(17,0)          dcl 12-157
data_init_flag                         defined         fixed bin(17,0)          dcl 12-131
date_compiled_sw                       defined         fixed bin(17,0)          dcl 12-181
debug_enable                           defined         fixed bin(17,0)          dcl 12-175
def_base_ptr                           defined         pointer                  dcl 12-13
def_max                                defined         fixed bin(17,0)          dcl 12-97
def_wd_off                             defined         fixed bin(17,0)          dcl 12-95
delete_errno                           internal static fixed bin(17,0)          initial dcl 3-102
diag_ptr                               defined         pointer                  dcl 12-71
eln_max                                defined         fixed bin(17,0)          dcl 12-173
eln_ptr                                defined         pointer                  dcl 12-69
fixed                                                  builtin function         dcl 3-135
fixup_max                              defined         fixed bin(17,0)          dcl 12-165
fixup_ptr                              defined         pointer                  dcl 12-31
fs_charcnt                             defined         fixed bin(17,0)          dcl 12-185
fs_wdoff                               defined         fixed bin(17,0)          dcl 12-199
fsb_arg                                internal static structure                level 1 unaligned dcl 3-17
fsb_key_wdoff                          internal static fixed bin(17,0)          initial dcl 3-101
include_cnt                            defined         fixed bin(17,0)          dcl 12-183
include_info_ptr                       defined         pointer                  dcl 12-87
index                                                  builtin function         dcl 3-135
init_stack_off                         defined         fixed bin(17,0)          dcl 12-125
initval_base_ptr                       defined         pointer                  dcl 12-33
initval_file_ptr                       defined         pointer                  dcl 12-35
initval_flag                           defined         fixed bin(17,0)          dcl 12-179
iocb_arg                               internal static structure                level 1 unaligned dcl 3-5
length                                                 builtin function         dcl 3-135
link_base_ptr                          defined         pointer                  dcl 12-15
link_max                               defined         fixed bin(17,0)          dcl 12-101
link_wd_off                            defined         fixed bin(17,0)          dcl 12-99
list_off                               defined         fixed bin(17,0)          dcl 12-155
list_ptr                               defined         pointer                  dcl 12-65
ls_charcnt                             defined         fixed bin(17,0)          dcl 12-191
main_pcs_ptr                           defined         pointer                  dcl 12-85
map_data_max                           defined         fixed bin(17,0)          dcl 12-163
map_data_ptr                           defined         pointer                  dcl 12-55
max_stack_off                          defined         fixed bin(17,0)          dcl 12-123
mcode_off                              internal static fixed bin(17,0)          initial dcl 3-97
minpral5_ptr                           defined         pointer                  dcl 12-51
misc_base_ptr                          defined         pointer                  dcl 12-61
misc_end_ptr                           defined         pointer                  dcl 12-63
misc_max                               defined         fixed bin(17,0)          dcl 12-159
mod                                                    builtin function         dcl 3-135
name_ptr                               automatic       pointer                  dcl 65
next_tag                               defined         fixed bin(17,0)          dcl 12-129
non_source_offset                      defined         fixed bin(17,0)          dcl 12-177
ntbuf_ptr                              defined         pointer                  dcl 12-83
null                                                   builtin function         dcl 3-135
obj_seg_name                           defined         char(32)                 dcl 12-209
op_con_ptr                             defined         pointer                  dcl 12-81
para_eop_flag                          defined         fixed bin(17,0)          dcl 12-139
pd_map_index                           defined         fixed bin(17,0)          dcl 12-117
pd_map_max                             defined         fixed bin(17,0)          dcl 12-161
pd_map_ptr                             defined         pointer                  dcl 12-29
pd_map_sw                              defined         fixed bin(17,0)          dcl 12-127
perform_list_ptr                       defined         pointer                  dcl 12-37
perform_para_index                     defined         fixed bin(17,0)          dcl 12-149
perform_sect_index                     defined         fixed bin(17,0)          dcl 12-151
priority_no                            defined         fixed bin(17,0)          dcl 12-141
ptr_assumption_ind                     defined         fixed bin(17,0)          dcl 12-145
ptr_status_ptr                         defined         pointer                  dcl 12-57
reg_assumption_ind                     defined         fixed bin(17,0)          dcl 12-147
reg_status_ptr                         defined         pointer                  dcl 12-59
rel                                                    builtin function         dcl 3-135
reloc_def_base_ptr                     defined         pointer                  dcl 12-21
reloc_def_max                          defined         fixed bin(24,0)          dcl 12-109
reloc_link_base_ptr                    defined         pointer                  dcl 12-23
reloc_link_max                         defined         fixed bin(24,0)          dcl 12-111
reloc_sym_base_ptr                     defined         pointer                  dcl 12-25
reloc_sym_max                          defined         fixed bin(24,0)          dcl 12-113
reloc_text_base_ptr                    defined         pointer                  dcl 12-19
reloc_text_max                         defined         fixed bin(24,0)          dcl 12-107
reloc_work_base_ptr                    defined         pointer                  dcl 12-27
reloc_work_max                         defined         fixed bin(24,0)          dcl 12-115
reserved_word                          based           structure                level 1 unaligned dcl 6-14
reswd_ptr                              defined         pointer                  dcl 12-79
same_sort_merge_proc                   defined         bit(1)                   dcl 12-215
scratch_dir                            defined         char(168)                dcl 12-207
sect_eop_flag                          defined         fixed bin(17,0)          dcl 12-137
seek_errno                             internal static fixed bin(17,0)          initial dcl 3-103
seg_init_flag                          defined         fixed bin(17,0)          dcl 12-133
seg_init_list_ptr                      defined         pointer                  dcl 12-41
stack_off                              defined         fixed bin(17,0)          dcl 12-121
statement_info_ptr                     defined         pointer                  dcl 12-77
status_arg                             internal static structure                level 1 unaligned dcl 3-12
string                                                 builtin function         dcl 3-135
sym_base_ptr                           defined         pointer                  dcl 12-17
sym_max                                defined         fixed bin(17,0)          dcl 12-105
sym_wd_off                             defined         fixed bin(17,0)          dcl 12-103
tag_table_max                          defined         fixed bin(17,0)          dcl 12-167
tag_table_ptr                          defined         pointer                  dcl 12-53
temp_arg                               internal static structure                level 1 unaligned dcl 3-8
temp_token_area_ptr                    defined         pointer                  dcl 12-43
temp_token_max                         defined         fixed bin(17,0)          dcl 12-169
temp_token_ptr                         defined         pointer                  dcl 12-45
text                                   based           bit(36)                  array packed unaligned dcl 59
text_base_ptr                          defined         pointer                  dcl 12-9
text_wd_off                            defined         fixed bin(17,0)          dcl 12-91
token_block1_ptr                       defined         pointer                  dcl 12-47
token_block2_ptr                       defined         pointer                  dcl 12-49
value_cnt                              defined         fixed bin(17,0)          dcl 12-195
ws_charcnt                             defined         fixed bin(17,0)          dcl 12-187
ws_wdoff                               defined         fixed bin(17,0)          dcl 12-201
xref_bypass                            defined         bit(1)                   dcl 12-213
xref_chain_ptr                         defined         pointer                  dcl 12-75
xref_token_ptr                         defined         pointer                  dcl 12-73

NAMES DECLARED BY EXPLICIT CONTEXT.
cobol_delete_gen                000006 constant        entry                    external dcl 28
del_op                          001156 constant        entry                    internal dcl 316 ref 168 301
start                           000013 constant        label                    dcl 88
start_codegen                   000115 constant        label                    dcl 121

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1556        2016    1312        1566
Length      2522    1312       240         470     244         162

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cobol_delete_gen                    160 external procedure  is an external procedure.  
del_op                                  internal procedure  shares stack frame of external procedure cobol_delete_gen.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 mpout                       cobol_delete_gen
000022 num_type9                   cobol_delete_gen
000056 alpha_type9                 cobol_delete_gen
000112 fkey_type9                  cobol_delete_gen
000146 type19                      cobol_delete_gen
000160 ioerror                     cobol_delete_gen
000167 fsb_keylen_sw               cobol_delete_gen
000170 delete_seq_errno            cobol_delete_gen
000171 output_errno                cobol_delete_gen

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cobol_delete_gen         000100 ptag                        cobol_delete_gen
                         000102 args                        cobol_delete_gen
                         000136 ft_ptr                      cobol_delete_gen
                         000140 fkey_ptr                    cobol_delete_gen
                         000142 arg_ptr                     cobol_delete_gen
                         000144 ioerror_ptr                 cobol_delete_gen
                         000146 alt_sw                      cobol_delete_gen
                         000147 delete_tag                  cobol_delete_gen
                         000150 unopen_error_tag            cobol_delete_gen
                         000151 stoff                       cobol_delete_gen
                         000152 aloff                       cobol_delete_gen
                         000153 size                        cobol_delete_gen
                         000154 reclen_off                  cobol_delete_gen
                         000155 ntag                        cobol_delete_gen
                         000156 rw_ptr                      cobol_delete_gen
                         000160 eos_ptr                     cobol_delete_gen

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
r_e_as              r_ne_as             call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cobol_alloc$stack             cobol_call_op                 cobol_define_tag              cobol_gen_ioerror
cobol_gen_ioerror$finish_up   cobol_io_util$bypass_mode_error                             cobol_io_util$bypass_seqerror
cobol_io_util$file_desc       cobol_io_util$fsb_key_loc     cobol_io_util$move_direct     cobol_ioop_util$lda_du
cobol_ioop_util$set_icode     cobol_ioop_util$set_x5        cobol_move_gen                cobol_read_ft
cobol_read_rand               cobol_reg_manager$after_op    cobol_set_fsbptr

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
cobol_$next_tag




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     28 000002        88 000013        90 000020        91 000022        92 000024        93 000025        94 000026
     95 000027        96 000030        98 000036        99 000040       100 000044       101 000045       102 000047
    104 000050       105 000051       106 000052       107 000054       110 000055       112 000057       114 000072
    115 000111       116 000113       121 000115       123 000120       124 000123       126 000125       128 000133
    132 000142       134 000155       136 000166       139 000175       144 000206       147 000211       149 000214
    151 000215       153 000223       155 000232       157 000245       161 000256       163 000265       166 000314
    168 000323       170 000324       174 000325       176 000344       178 000351       180 000356       182 000360
    185 000364       187 000366       189 000372       191 000374       193 000377       197 000400       200 000411
    201 000413       203 000414       206 000426       208 000435       211 000450       213 000461       215 000470
    218 000477       219 000502       220 000505       221 000507       224 000513       227 000524       230 000542
    233 000551       234 000554       236 000555       238 000567       240 000600       242 000607       244 000612
    246 000620       248 000631       251 000661       252 000664       254 000665       256 000673       258 000700
    260 000713       262 000724       264 000733       267 000734       268 000736       269 000737       271 000741
    273 000747       275 000760       279 001010       281 001012       284 001023       286 001033       289 001047
    293 001056       295 001063       297 001076       299 001107       301 001116       307 001117       310 001131
    312 001144       314 001155       316 001156       320 001157       322 001161       323 001164       326 001165
    328 001177       330 001210       331 001217       334 001226       335 001231       337 001232       339 001240
    341 001253       343 001264       346 001273       349 001311


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
