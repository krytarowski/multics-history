	COMPILATION LISTING OF SEGMENT gtss_drun_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/10/84  1253.9 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   *                                                         *
        4*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        5*   *                                                         *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 /* *************************************************************
       10*   *						   *
       11*   * Copyright (c) 1979 by Honeywell Information Systems, Inc. *
       12*   *						   *
       13*   ************************************************************* */
       14 
       15 gtss_drun_: proc (error);
       16 
       17 /*	Author: Al Dupuis 09/13/79
       18*
       19*   When this procedure is called the first time, it sets
       20*   up the necessary environment for the subsystem DRUN to
       21*   execute, if it is being called under absentee. If the process
       22*   is an interactive one, it checks for any jobs that were executing
       23*   and the system crashed (jobs that were not entered with restart
       24*   argument). If one of these are found, it changes it's catalog entry
       25*   in the #D queue to reflect it.
       26*   When it is called the second time, it resets the environment
       27*   expecting the absentee process to terminate, or the simulator to terminate if interactive.
       28*   It is called the first time from gtss intialize procedure,
       29*   and the second time from gtss termination procedure.
       30**/
       31 
       32 
       33 
       34 
       35 
       36 	if first_time_called then do;
       37 	     first_time_called = "0"b;
       38 	     second_time_called = "1"b;
       39 	     if gtss_ust.lcjid = "0"b then call inter_init;
       40 	     else call abs_init;
       41 	end;
       42 	else if second_time_called then do;
       43 	     second_time_called = "0"b;
       44 	     first_time_called = "1"b;
       45 	     call terminate;
       46 	end;
       47 	else do;
       48 	     call com_err_ (0, caller,
       49 		"Bug, first_time and second_time indicators were not set");
       50 	     error = "1"b;
       51 	end;
       52 
       53 	return;
       54 
       55 abs_init:	proc;
       56 
       57 /* Open the deferred queue file (#D)		*/
       58 	     call gtss_dq_$open_exc (error_occured);
       59 	     if error_occured then do;
       60 		call com_err_ (0, caller,
       61 		     "Couldn't open the #D file");
       62 		error = "1"b;
       63 		return;
       64 	     end;
       65 
       66 /* Create restart file in homedir, put ipc_ event channel id in it */
       67 	     call hcs_$make_seg (gtss_ext_$homedir, "drun_restart."
       68 		|| gtss_ext_$drun_jid, "", 10, gtss_ext_$restart_seg_ptr, code);
       69 	     if code = error_table_$namedup then
       70 		call gtss_dq_$mod_js (gtss_ext_$drun_jid, 2, error_occured); /* change to resheduled due to system crash */
       71 	     call hcs_$status_mins (gtss_ext_$restart_seg_ptr, type,
       72 		bit_count, code);
       73 	     if bit_count = 0 then do;
       74 		call ipc_$create_ev_chn (event_info.channel_id, code);
       75 		if code ^= 0 then do;
       76 		     call convert_ipc_code_ (code);
       77 		     call com_err_ (code, caller,
       78 			"Couldn't create event channel.");
       79 		     error = "1"b;
       80 		     return;
       81 		end;
       82 		event_info.sender = get_process_id_ ();
       83 		call hcs_$set_bc_seg (gtss_ext_$restart_seg_ptr, 72*2+36, code);
       84 		if code ^= 0 then do;
       85 		     call com_err_ (code, caller,
       86 			"Couldn't set bit count.");
       87 		     error = "1"b;
       88 		     return;
       89 		end;
       90 	     end;
       91 	     gtss_ext_$event_channel = event_info.channel_id;
       92 	     call timer_manager_$cpu_call (30, "11"b, gtss_abs_$dabt_check);
       93 
       94 
       95 /* Intialize communication region		*/
       96 	     gtss_ext_$com_reg.tsdgt.ust_loc = 1;
       97 	     gtss_ext_$com_reg.tsdmx.dit = 180;
       98 	     call gtss_bcd_ascii_ (addr (gtss_ust.lcjid), 5, addr (gtss_ext_$drun_jid));
       99 	     call gtss_dq_$catp (gtss_ext_$drun_jid, dc_ptr, cat_entry);
      100 	     if dc_ptr = null () then do;
      101 		call com_err_ (0, caller,
      102 		     "Couldn't read ^a #D catalog entry", gtss_ext_$drun_jid);
      103 		error = "1"b;
      104 		return;
      105 	     end;
      106 
      107 	     gtss_ext_$com_reg.tsdid = dc_ptr -> dq_catalog.dcuid;
      108 	     gtss_ext_$com_reg.tsdsd = dc_ptr -> dq_catalog.dcdsd;
      109 	     gtss_ext_$com_reg.tsdst = dc_ptr -> dq_catalog.dcdst;
      110 	     addr (gtss_ext_$com_reg.tsdjb) -> one_word = gtss_ust.lcjid;
      111 
      112 /* If the user has a ..init file, reset lcjid and start_term so that it
      113*   will be processed under crun. When crun shuts down these indicators
      114*   will be reset by gtss_abandon_CFP_ and DRUN execution will then begin.
      115*   Otherwise DRUN execution will begin now.		*/
      116 	     string = gtss_abs_$get_drm ();
      117 	     string = after (string, "gse -drm ");
      118 	     if substr (string, 1, 2) = "wd"
      119 	     then dir_name = rtrim (get_wdir_ ());
      120 	     else if substr (string, 1, 3) = "smc"
      121 	     then dir_name =
      122 		rtrim (gse_ext_$smc_pathname) || ">"
      123 		|| rtrim (gse_ext_$umc_name);
      124 	     else if substr (string, 1, 3) = "umc"
      125 	     then dir_name =
      126 		">udd>" || rtrim (gse_ext_$umc_name)
      127 		|| ">" || rtrim (gse_ext_$umc_name);
      128 	     else do;
      129 		call com_err_ (0, caller,
      130 		     "Bug, couldn't get dir_mapping (^a)",
      131 		     string);
      132 		signal condition (gtss_fail);
      133 	     end;
      134 	     call hcs_$initiate_count (dir_name, "..init",
      135 		"", bit_count, 1, seg_ptr, code);
      136 	     if seg_ptr = null ()
      137 	     then return;
      138 	     gtss_ust.lcjid = "0"b;
      139 	     gtss_ust.lcfst.start_term = 0;
      140 	     gtss_ext_$put_chars = gtss_CFP_output_;
      141 	     
      142 	end;					/* abs_init */
      143 
      144 inter_init: proc;
      145 
      146 /*
      147*   If a DRUN job id, and a Multics absentee request id both exist there is no
      148*   action taken. If a DRUN job id exists, a Multics id doesn't,
      149*   and the catalog status in the #D queue file is marked as still executing,
      150*   the following takes place. If the drun restart file exists
      151*   the entry is marked as aborted due to a system crash. (This means the user
      152*   entered the request without the restart argument, and the catalog entry
      153*   is changed now, versus real Gcos where it would be changed as soon as Gcos
      154*   came back up). If the restart file did not exist, it was deleted by the
      155*   finish condition begin block in gtss (examples of this would be if a user
      156*   did an escape logout while under the simulator (normally the
      157*   caleanup condition handler would change the catalog status, but it is not
      158*   signaled in this case.)) In this case the catalog status would be changed
      159*   to terminated abnormally. (Has to be done from here because finish condition
      160*   handler is invoked after gtss_ios goodies are destroyed).
      161**/
      162 
      163 /* Open the deferred queue file (#D) for read while writers */
      164 	     call gtss_dq_$open_gen (error_occured);
      165 	     if error_occured then do;
      166 		call com_err_ (0, caller,
      167 		     "Couldn't open the #D file");
      168 		error = "1"b;
      169 		return;
      170 	     end;
      171 	     call gtss_dq_$entries_info (addr (dq_info), 315, no_of_entries_found);
      172 	     if no_of_entries_found ^= 0
      173 	     then do;
      174 
      175 /* Reopen the file for exclusive use as we may have to update it */
      176 		call gtss_dq_$open_exc (error_occured);
      177 		if error_occured then do;
      178 		     call com_err_ (0, caller,
      179 			"Couldn't open the #D file");
      180 		     error = "1"b;
      181 		     return;
      182 		end;
      183 		do i = 1 to no_of_entries_found;
      184 		     if ((dq_info.js (i) = 3) & (dq_info.aid (i) = " ")) then do;
      185 			call hcs_$initiate_count (gtss_ext_$homedir,
      186 			     "drun_restart." || dq_info.did (i), "",
      187 			     bit_count, 1, gtss_ext_$restart_seg_ptr, code);
      188 			if gtss_ext_$restart_seg_ptr ^= null () then do;
      189 			     call delete_$ptr (gtss_ext_$restart_seg_ptr, "100100"b, caller, code);
      190 			     if code ^= 0 then do;
      191 				call com_err_ (code, caller,
      192 				     "Couldn't delete [hd]>drun_restart.^a", dq_info.did (i));
      193 				error = "1"b;
      194 				return;
      195 			     end;
      196 			     call gtss_dq_$mod_js (dq_info.did (i), 7, error_occured);
      197 			end;
      198 			else do;
      199 			     call gtss_dq_$mod_js (dq_info.did (i), 6, error_occured);
      200 			     call com_err_ (0, "",
      201 				"^a terminated abnormally, check ^a>drun_control.^a.absout please.",
      202 				dq_info.did (i), rtrim (gtss_ext_$homedir), dq_info.did (i));
      203 			end;
      204 		     end;
      205 		end;
      206 /* And revert opening back to read while changing	*/
      207 		call gtss_dq_$open_gen (error_occured);
      208 		if error_occured then do;
      209 		     call com_err_ (0, caller,
      210 			"Couldn't open the #D file");
      211 		     error = "1"b;
      212 		     return;
      213 		end;
      214 	     end;
      215 
      216 /* Delete any absout files that don't have a corresponding entry in the
      217*   deferred queue file.			*/
      218 	     hdir = gtss_ext_$homedir;
      219 	     call check_star_name_$entry (star_name, code);
      220 	     if code ^= 1
      221 	     then do;
      222 		call com_err_ (code, caller,
      223 		     "Bug, star name was ^a.", star_name);
      224 		return;
      225 	     end;
      226 	     call hcs_$star_ (hdir, star_name,
      227 		star_BRANCHES_ONLY, addr (our_area),
      228 		star_entry_count, star_entry_ptr,
      229 		star_names_ptr, code);
      230 	     if code = error_table_$notalloc
      231 	     then do;
      232 		call com_err_ (code, caller,
      233 		     "Bug, not enough room in our_area.");
      234 		return;
      235 	     end;
      236 	     if code = error_table_$nomatch
      237 	     then return;
      238 	     in_def_q = "0"b;
      239 	     do i = 1 to star_entry_count;
      240 		if no_of_entries_found ^= 0
      241 		then do j = 1 to no_of_entries_found;
      242 		     if star_names (star_entries (i).nindex) =
      243 		     "drun_control."
      244 		     || dq_info.did (j)
      245 		     || ".absout"
      246 		     then do;
      247 			in_def_q = "1"b;
      248 			j = no_of_entries_found;
      249 		     end;
      250 		end;
      251 		if ^ in_def_q
      252 		then call delete_$path (hdir,
      253 		     star_names (star_entries (i).nindex),
      254 		     "010100"b, caller, code);
      255 		else in_def_q = "0"b;
      256 	     end;
      257 	end;					/* inter_init */
      258 
      259 terminate: proc;
      260 
      261 
      262 	     call timer_manager_$reset_cpu_call (gtss_abs_$dabt_check);
      263 	     call timer_manager_$reset_cpu_call (gtss_abs_$cpu_runout);
      264 	     if gtss_ext_$flags.ss_time_limit_set then
      265 		call timer_manager_$reset_cpu_call (gtss_fault_processor_$timer_runout);
      266 
      267 /* If executing under absentee, clean things up */
      268 	     if gtss_ust.lcjid ^= "0"b then do;
      269 		call ipc_$delete_ev_chn (gtss_ext_$event_channel, code);
      270 		call delete_$ptr (gtss_ext_$restart_seg_ptr, "100100"b, caller, code);
      271 		call gtss_dq_$catp (gtss_ext_$drun_jid, dc_ptr, cat_entry);
      272 		if dc_ptr -> dq_catalog.dcjid.job_status = 3 then do;
      273 /* Open the deferred queue file (#D)		*/
      274 		     call gtss_dq_$open_exc (error_occured);
      275 		     if error_occured then do;
      276 			call com_err_ (0, caller,
      277 			     "Couldn't open the #D file");
      278 			error = "1"b;
      279 			return;
      280 		     end;
      281 		     call gtss_dq_$mod_js (gtss_ext_$drun_jid, 6, error_occured);
      282 		     call com_err_ (0, caller,
      283 			"When simulator termination occured, the catalog job status was marked as still executing.");
      284 		end;
      285 	     end;
      286 
      287 	end;					/* termination */
      288 
      289 /* gtss_drun_ declares		*/
      290 
      291 dcl  addr			builtin;
      292 dcl  binary		builtin;
      293 dcl  bit_count		fixed bin (24);
      294 dcl  caller		char (10) static int options (constant) init ("gtss_drun_");
      295 dcl  cat_entry		fixed bin (18) unsigned;
      296 dcl  check_star_name_$entry	entry (char (*), fixed bin (35));
      297 dcl  code			fixed bin (35);
      298 dcl  convert_ipc_code_	entry (fixed bin (35));
      299 dcl  dc_ptr		ptr init (null());
      300 dcl  dir_name		char (168);
      301 dcl  delete_$path		entry (char (*), char (*), bit (6), char (*), fixed bin (35));
      302 dcl  delete_$ptr		entry (ptr, bit (6), char (*), fixed bin (35));
      303 dcl  error		bit (1) parm;
      304 dcl  error_occured		bit (1);
      305 dcl  error_table_$namedup	fixed bin (35) ext;
      306 dcl  error_table_$nomatch	fixed bin (35) ext;
      307 dcl  error_table_$notalloc	fixed bin (35) ext;
      308 dcl  first_time_called	bit (1) static int init ("1"b);
      309 dcl  get_process_id_	entry returns (bit (36));
      310 dcl  get_wdir_		entry returns (char (168));
      311 dcl  gtss_fail		condition ext;
      312 dcl  hcs_$initiate_count	entry (char (*), char (*), char (*), fixed bin (24), fixed bin (2), ptr, fixed bin (35));
      313 dcl  hcs_$make_seg		entry (char (*), char (*), char (*), fixed bin (5), ptr, fixed bin (35));
      314 dcl  hcs_$set_bc_seg	entry (ptr, fixed bin (24), fixed bin (35));
      315 dcl  hcs_$star_		entry (char(*),char(*),fixed bin(2),ptr, fixed bin,ptr,ptr,fixed bin(35));
      316 dcl  hcs_$status_mins	entry (ptr, fixed bin (2), fixed bin (24), fixed bin (35));
      317 dcl  hdir			char (64);
      318 dcl  i			fixed bin (18) unsigned;
      319 dcl  in_def_q		bit (1);
      320 dcl  ipc_$create_ev_chn	entry (fixed bin (71), fixed bin (35));
      321 dcl  ipc_$delete_ev_chn	entry (fixed bin (71), fixed bin (35));
      322 dcl  j			fixed bin (18) unsigned;
      323 dcl  no_of_entries_found	fixed bin (18) unsigned;
      324 dcl  one_word		bit (36) based;
      325 dcl  our_area		area (1024*5);
      326 dcl  second_time_called	bit (1) static int init ("0"b);
      327 dcl  seg_ptr		ptr init (null());
      328 dcl  star_name		char (21) static int options (constant) init ("drun_control.*.absout");
      329 dcl  string		char (256) varying;
      330 dcl  sum			builtin;
      331 dcl  time			fixed bin (71);
      332 dcl  timer_manager_$cpu_call	entry (fixed bin (71), bit (2), entry);
      333 dcl  timer_manager_$reset_cpu_call	entry (entry);
      334 dcl  type			fixed bin (2);
      335 
      336 dcl 1 event_info based (gtss_ext_$restart_seg_ptr),
      337       2 channel_id fixed bin (71),
      338       2 message fixed bin (71),
      339       2 sender bit (36),
      340       2 origin,
      341         3 dev_signal bit (18) unal,
      342         3 ring bit (18) unal,
      343       2 channel_index fixed bin;
      344 
      345 dcl 1 dq_info (315),
      346       2 did char (5),
      347       2 aid char (19),
      348       2 js fixed bin (6) unsigned;
      349 
  1     1 /* BEGIN INCLUDE FILE gtss_entry_dcls.incl.pl1 */
  1     2 /*
  1     3*  Created: (Wardd Multics)  06/30/78 1624.8 mst Fri 
  1     4*  Modified: Ron Barstad  84-02-24  Fixed wrong and obsolete entries
  1     5**/
  1     6 
  1     7 /**  gtss external entry variables.		**/
  1     8 dcl  com_err_                                   entry() options(variable);
  1     9 dcl  gtss_CFP_abort_                            entry options(variable);
  1    10 dcl  gtss_CFP_break_                            entry options(variable);
  1    11 dcl  gtss_CFP_input_                            entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  1    12 dcl  gtss_CFP_output_                           entry (ptr, ptr, fixed bin(21), fixed bin(35));
  1    13 dcl  gtss_abandon_CFP_                          entry options(variable);
  1    14 dcl  gtss_abort_dump_                           entry (fixed bin(18));
  1    15 dcl  gtss_abort_subsystem_                      entry options (variable);
  1    16 dcl  gtss_abort_subsystem_$not_imp              entry (ptr, fixed bin(24));
  1    17 dcl  gtss_abs_login_banner_		        entry() returns(char(*));
  1    18 dcl  gtss_abs_logout_banner_		        entry() returns(char(*));
  1    19 dcl  gtss_abs_$abs_equiv                        entry options(variable);
  1    20 dcl  gtss_abs_$cpu_runout		        entry (ptr, char(4));
  1    21 dcl  gtss_abs_$create_absin                     entry() returns(char(*));
  1    22 dcl  gtss_abs_$dabt_check		        entry (ptr, char(4));
  1    23 dcl  gtss_abs_$get_id                           entry (char(5)) returns(char(19));
  1    24 dcl  gtss_abs_$get_drm                          entry() returns(char(*));
  1    25 dcl  gtss_adjust_size_                          entry (ptr);
  1    26 dcl  gtss_aft_$add                              entry (char(8), fixed bin(24), fixed bin(35));
  1    27 dcl  gtss_aft_$delete                           entry (char(8), fixed bin(24), fixed bin(35));
  1    28 dcl  gtss_aft_$find                             entry (char(8), fixed bin(24), fixed bin(35));
  1    29 dcl  gtss_aft_$initialize                       entry (fixed bin(35));
  1    30 dcl  gtss_ascii_bcd_                            entry (ptr, fixed bin, ptr);
  1    31 dcl  gtss_attributes_mgr_$get                   entry (ptr, fixed bin(35));
  1    32 dcl  gtss_attributes_mgr_$set                   entry (ptr, fixed bin(35));
  1    33 dcl  gtss_bcd_ascii_                            entry (ptr, fixed bin(24), ptr);
  1    34 dcl  gtss_bcd_ascii_$lc                         entry (ptr, fixed bin(24), ptr);
  1    35 dcl  gtss_break_vector_                         entry ();
  1    36 dcl  gtss_break_vector_$drl_in_progress         entry() returns(bit(1));
  1    37 dcl  gtss_break_vector_$status                  entry() returns(bit(1));
  1    38 dcl  gtss_build_                                entry options(variable);
  1    39 dcl  gtss_com_err_                              entry options(variable);
  1    40 dcl  gtss_derail_processor_                     entry (ptr, char(*), ptr, ptr, bit(1) aligned) /* called at fault time instead of signal_ */;
  1    41 dcl  gtss_derail_processor_$set                 entry options(variable);
  1    42 dcl  gtss_dq_$catp                              entry (char (5), ptr, fixed bin (18) unsigned);
  1    43 dcl  gtss_dq_$create                            entry (bit(1));
  1    44 dcl  gtss_dq_$dibp                              entry (char(5), ptr);
  1    45 dcl  gtss_dq_$entries_info		        entry (ptr, fixed bin (18) unsigned, fixed bin (18) unsigned);
  1    46 dcl  gtss_dq_$hdrp                              entry (ptr);
  1    47 dcl  gtss_dq_$mod_js		        entry (char(5), fixed bin (6) unsigned, bit (1));
  1    48 dcl  gtss_dq_$open_exc		        entry (bit(1));
  1    49 dcl  gtss_dq_$open_gen		        entry (bit(1));
  1    50 dcl  gtss_drl_abort_                            entry (ptr, fixed bin);
  1    51 dcl  gtss_drl_addmem_                           entry (ptr, fixed bin);
  1    52 dcl  gtss_drl_callss_                           entry (ptr, fixed bin);
  1    53 dcl  gtss_drl_corfil_                           entry (ptr, fixed bin);
  1    54 dcl  gtss_drl_defil_                            entry (ptr, fixed bin);
  1    55 dcl  gtss_drl_defil_$subr                       entry (ptr, ptr, ptr);
  1    56 dcl  gtss_drl_dio_                              entry (ptr, fixed bin);
  1    57 dcl  gtss_drl_drlimt_                           entry (ptr, fixed bin);
  1    58 dcl  gtss_drl_drlsav_                           entry (ptr, fixed bin);
  1    59 dcl  gtss_drl_filact_                           entry (ptr, fixed bin);
  1    60 dcl  gtss_drl_filsp_                            entry (ptr, fixed bin);
  1    61 dcl  gtss_drl_grow_                             entry (ptr, fixed bin);
  1    62 dcl  gtss_drl_gwake_                            entry (ptr, fixed bin);
  1    63 dcl  gtss_drl_jsts_                             entry (ptr, fixed bin);
  1    64 dcl  gtss_drl_kin_                              entry (ptr, fixed bin);
  1    65 dcl  gtss_drl_kotnow_                           entry (ptr, fixed bin);
  1    66 dcl  gtss_drl_kotnow_$gtss_drl_kout_            entry (ptr, fixed bin);
  1    67 dcl  gtss_drl_koutn_                            entry (ptr, fixed bin);
  1    68 dcl  gtss_drl_morlnk_                           entry (ptr, fixed bin);
  1    69 dcl  gtss_drl_msub_                             entry (ptr, fixed bin);
  1    70 dcl  gtss_drl_objtim_                           entry (ptr, fixed bin);
  1    71 dcl  gtss_drl_part_                             entry (ptr, fixed bin);
  1    72 dcl  gtss_drl_pasaft_                           entry (ptr, fixed bin);
  1    73 dcl  gtss_drl_pasdes_                           entry (ptr, fixed bin);
  1    74 dcl  gtss_drl_pasust_                           entry (ptr, fixed bin);
  1    75 dcl  gtss_drl_pdio_                             entry (ptr, fixed bin);
  1    76 dcl  gtss_drl_prgdes_                           entry (ptr, fixed bin);
  1    77 dcl  gtss_drl_pseudo_                           entry (ptr, fixed bin);
  1    78 dcl  gtss_drl_relmem_                           entry (ptr, fixed bin);
  1    79 dcl  gtss_drl_restor_                           entry (ptr, fixed bin);
  1    80 dcl  gtss_drl_retfil_                           entry (ptr, fixed bin);
  1    81 dcl  gtss_drl_return_                           entry (ptr, fixed bin);
  1    82 dcl  gtss_drl_rew_                              entry (ptr, fixed bin);
  1    83 dcl  gtss_drl_rstswh_                           entry (ptr, fixed bin);
  1    84 dcl  gtss_drl_setlno_                           entry (ptr, fixed bin);
  1    85 dcl  gtss_drl_setswh_                           entry (ptr, fixed bin);
  1    86 dcl  gtss_drl_snumb_                            entry (ptr, fixed bin);
  1    87 dcl  gtss_drl_spawn_                            entry (ptr, fixed bin);
  1    88 dcl  gtss_drl_spawn_$gtss_drl_pasflr_           entry (ptr, fixed bin);
  1    89 dcl  gtss_drl_stoppt_                           entry (ptr, fixed bin);
  1    90 dcl  gtss_drl_switch_                           entry (ptr, fixed bin);
  1    91 dcl  gtss_drl_sysret_                           entry (ptr, fixed bin);
  1    92 dcl  gtss_drl_t_cfio_                           entry (ptr, fixed bin);
  1    93 dcl  gtss_drl_t_cmov_                           entry (ptr, fixed bin);
  1    94 dcl  gtss_drl_t_err_                            entry (ptr, fixed bin);
  1    95 dcl  gtss_drl_t_goto_                           entry (ptr, fixed bin);
  1    96 dcl  gtss_drl_t_linl_                           entry (ptr, fixed bin);
  1    97 dcl  gtss_drl_t_rscc_                           entry (ptr, fixed bin);
  1    98 dcl  gtss_drl_tapein_                           entry (ptr, fixed bin);
  1    99 dcl  gtss_drl_task_                             entry (ptr, fixed bin);
  1   100 dcl  gtss_drl_termtp_                           entry (ptr, fixed bin);
  1   101 dcl  gtss_drl_time_                             entry (ptr, fixed bin);
  1   102 dcl  gtss_drun_                                 entry (bit(1));
  1   103 dcl  gtss_dsd_lookup_                           entry (char(8) var) returns(fixed bin(24));
  1   104 dcl  gtss_dsd_process_                          entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  1   105 dcl  gtss_edit_dsd_                             entry (ptr, fixed bin(21)) returns(fixed bin(24));
  1   106 dcl  gtss_mcfc_empty                            entry (char(*) var);
  1   107 dcl  gtss_expand_pathname_                      entry (ptr, char(*), char(*), fixed bin(35));
  1   108 dcl  gtss_expand_pathname_$verify_umc           entry (ptr, char(*), char(*), bit(18), fixed bin(35));
  1   109 dcl  gtss_fault_processor_                      entry options(variable);
  1   110 dcl  gtss_find_cond_frame_		        entry (char(32) var) returns(ptr);
  1   111 dcl  gtss_fault_processor_$timer_runout         entry (ptr, char(*));
  1   112 dcl  gtss_filact_error_status_                  entry (fixed bin(35))returns(bit(12));
  1   113 dcl  gtss_filact_funct02_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  1   114 dcl  gtss_filact_funct03_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  1   115 dcl  gtss_filact_funct04_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  1   116 dcl  gtss_filact_funct05_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  1   117 dcl  gtss_filact_funct08_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  1   118 dcl  gtss_filact_funct10_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  1   119 dcl  gtss_filact_funct11_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  1   120 dcl  gtss_filact_funct14_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  1   121 dcl  gtss_filact_funct18_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  1   122 dcl  gtss_filact_funct19_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  1   123 dcl  gtss_filact_funct21_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  1   124 dcl  gtss_filact_funct22_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  1   125 dcl  gtss_mcfc_init_                            entry (char(*) var);
  1   126 dcl  gtss_interp_prim_                          entry options(variable);
  1   127 dcl  gtss_interp_prim_$callss                   entry (char(4), ptr);
  1   128 dcl  gtss_interp_prim_$sysret                   entry options(variable);
  1   129 dcl  gtss_interp_prim_$t_goto                   entry (char(4));
  1   130 dcl  gtss_ios_change_size_                      entry (fixed bin(24), fixed bin(24), bit(1), fixed bin(24), fixed bin(35));
  1   131 dcl  gtss_ios_close_                            entry (fixed bin(24), ptr, fixed bin(35));
  1   132 dcl  gtss_ios_exchange_names_                   entry (fixed bin(24), fixed bin(24), fixed bin(24), fixed bin(35));
  1   133 dcl  gtss_ios_initialize_                       entry options(variable);
  1   134 dcl  gtss_ios_io_                               entry (fixed bin(24), ptr, ptr, fixed bin(24), fixed bin(24), fixed bin(35));
  1   135 dcl  gtss_ios_open_                             entry (fixed bin(24), char(168), char(32), bit(6), bit(1), ptr, ptr, fixed bin(35));
  1   136 dcl  gtss_ios_position_                         entry (fixed bin(24), fixed bin(24), fixed bin(24), bit(6), ptr);
  1   137 dcl  gtss_mcfc_$delete		        entry (fixed bin(24), char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  1   138 dcl  gtss_mcfc_$open                            entry (char(*), char(*), bit(6), bit(36) aligned, ptr, fixed bin(35));
  1   139 dcl  gtss_mcfc_$close                           entry (char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  1   140 dcl  gtss_read_starCFP_                         entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  1   141 dcl  gtss_read_starCFP_$last_os                 entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  1   142 dcl  gtss_run_subsystem_                        entry (fixed bin(24));
  1   143 dcl  gtss_run_subsystem_$finish                 entry options(variable);
  1   144 dcl  gtss_run_subsystem_$restor                 entry (fixed bin(24), ptr);
  1   145 dcl  gtss_run_subsystem_$restor_perm            entry (fixed bin(24), ptr, fixed bin(18));
  1   146 dcl  gtss_set_slave_                            entry (fixed bin (24), ptr);
  1   147 dcl  gtss_set_slave_$load_bar                   entry (fixed bin (17));
  1   148 dcl  gtss_update_safe_store_                    entry (ptr);
  1   149 dcl  gtss_verify_access_		        entry (char(*), char(*), fixed bin(24), bit(6), bit(12) aligned);
  1   150 dcl  gtss_verify_access_$check_forced_access    entry (char(*), char(*), fixed bin(24));
  1   151 dcl  gtss_write_starCFP_                        entry (ptr, ptr, fixed bin(21), fixed bin(35));
  1   152 /*   END INCLUDE FILE gtss_entry_dcls.incl.pl1 */
      350 
      351 
  2     1 /* BEGIN INCLUDE FILE gtss_ext_.incl.pl1 */
  2     2 /*
  2     3*  Created: (Wardd Multics)  05/20/78 1307.6 mst Sat 
  2     4*  Modified: Ward            1981     add suspended_process dcl
  2     5*  Modified: Ron Barstad  83-07-21  Fixed level number on mcfc to 3
  2     6*  Modified: Ron Barstad  83-07-25  Fixed derail range in statistics to 4js3 number
  2     7**/
  2     8 dcl  gtss_ext_$aem                   fixed bin static ext	/* >0 Print "additional" error information. */;
  2     9 dcl  gtss_ext_$bad_drl_rtrn          static ext label	/* Default for drl_rtrn. */;
  2    10 dcl  gtss_ext_$db                    (72)bit(1)unal static ext;
  2    11 dcl  gtss_ext_$deferred_catalogs_ptr ptr ext;
  2    12 dcl  gtss_ext_$dispose_of_drl        static ext label	/* quit handlers for some derails use this label to abort */;
  2    13 dcl  gtss_ext_$drl_rtrn              (4)static ext label	/* where to return at subsystem end */;
  2    14 dcl  gtss_ext_$drm_path              char(168)static ext	/* gtss_expand_pathname_stores drm_path */;
  2    15 dcl  gtss_ext_$drun_jid              char (5) static ext	/* valid only for DRUN executing under absentee */;
  2    16 dcl  gtss_ext_$event_channel         fixed bin (71) static ext	/* used for DABT signals */;
  2    17 dcl  gtss_ext_$finished              static ext label	/* Return to gtss for normal conclusion. */;
  2    18 dcl  gtss_ext_$gdb_name              char(8)ext	/* Name H* module to debug. */;
  2    19 dcl  gtss_ext_$get_line              entry(ptr,ptr,fixed bin(21),fixed bin(21),fixed bin(35))variable ext /* Build mode input procedure. */;
  2    20 dcl  gtss_ext_$gtss_slave_area_seg   (4) ext static ptr	/* pointer to gtss slave area segment */;
  2    21 dcl  gtss_ext_$hcs_work_area_ptr     ptr ext static		/* Temp seg for acl lists. */;
  2    22 dcl  gtss_ext_$homedir               char (64) static ext /* user's home dir */;
  2    23 dcl  gtss_ext_$last_k_was_out        bit (1)aligned ext static	/* "1"b => last tty output was output. */;
  2    24 dcl  gtss_ext_$pdir                  char (168) varying ext static	/* pathname of process directory */;
  2    25 dcl  gtss_ext_$popup_from_pi         static ext label	/* transfer to this label after pi simulates popup primitive */;
  2    26 dcl  gtss_ext_$process_type          fixed bin (17) static ext;
  2    27 dcl  gtss_ext_$put_chars             entry(ptr,ptr,fixed bin(24),fixed bin(35)) variable ext	/* Terminal output procedure. */;
  2    28 dcl  gtss_ext_$restart_from_pi       static ext label	/* transfer to this label after pi restores machine conditions */;
  2    29 dcl  gtss_ext_$restart_seg_ptr       ptr static ext	/* points to DRUN restart file when exec under absentee */;
  2    30 dcl  gtss_ext_$sig_ptr               ext static ptr	/* saved ptr to signal_ */;
  2    31 dcl  gtss_ext_$stack_level_          fixed bin ext static;
  2    32 dcl  gtss_ext_$suspended_process     bit(1) ext static;
  2    33 dcl  gtss_ext_$SYstarstar_file_no    fixed bin (24) static ext;
  2    34 dcl  gtss_ext_$user_id               char (26)var ext;
  2    35 dcl  gtss_ext_$work_area_ptr         ptr ext;
  2    36 
  2    37 dcl  1 gtss_ext_$CFP_bits aligned static external
  2    38      , 3 no_input_yet bit (1) unaligned         /* used in gtss_CFP_input_, gtss_read_starCFP_ */
  2    39      , 3 rtn_bits bit (4) unaligned             /* used in gtss_CFP_input_, gtss_CFP_output_ */
  2    40      , 3 cpos_called bit (1) unaligned          /* used in gtss_CFP_input_, gtss_drl_t_cfio_, gtss_abandon_CFP_ */
  2    41      , 3 cout_called bit (1) unaligned          /* used in gtss_read_starCFP_, gtss_abandon_CFP_ */
  2    42      , 3 build_mode bit (1) unaligned	        /* used in gtss_build_, gtss_dsd_process_ */
  2    43      ;
  2    44 
  2    45 dcl 1 gtss_ext_$com_reg aligned static ext,
  2    46        3 tsdmx,
  2    47          4 dst fixed bin (18) unsigned unaligned,
  2    48          4 dit fixed bin (18) unsigned unaligned,
  2    49        3 tsdpt fixed bin (36) unsigned unaligned,
  2    50        3 tsddt fixed bin (36) unsigned unaligned,
  2    51        3 tsdid bit (72) unaligned,
  2    52        3 tsdsd bit (36) unaligned,
  2    53        3 tsdst fixed bin (36) unsigned unaligned,
  2    54        3 tsdjb fixed bin (35) unaligned,
  2    55        3 tsdgt,
  2    56          4 ust_loc fixed bin (18) unsigned unaligned,
  2    57          4 gating_ctl fixed bin (18) unsigned unaligned,
  2    58        3 tcdfr bit (36) unaligned;
  2    59 
  2    60 dcl 1 gtss_ext_$flags aligned static ext
  2    61      , 3 dispose_of_drl_on_pi	bit (01) unal	/* 1 => drl that should be aborted after quit-pi sequence */
  2    62      , 3 drl_in_progress	bit (01) unal	/* 1 => drl handler executing; 0 => gcos code executing */
  2    63      , 3 popup_from_pi	bit (01) unal	/* 1 => derail processor will simulate Gcos break instead of returning */
  2    64      , 3 unfinished_drl	bit (01) unal	/* 1 => subsystem is handling breaks and quit was raised during a drl */
  2    65      , 3 ss_time_limit_set	bit (01) unal	/* 1 => exec time limit set for subsystem */
  2    66      , 3 timer_ranout	bit (01) unal	/* 1 => user is executing timer runout code */
  2    67      , 3 gtss_com_err_sw      bit (01) unal       /* 1 => stop com_err_ string from going to terminal */   
  2    68      , 3 available		bit (65) unal
  2    69      ;
  2    70 
  2    71 
  2    72 dcl 1 gtss_ext_$statistics aligned static ext,		/* Derail usage statistics */
  2    73       3 total_time (-10:71)fixed bin (71),
  2    74       3 count (-10:71)fixed bin (17);
  2    75 
  2    76 /* 	Declaration of Available File Table
  2    77*   */
  2    78 dcl 1 gtss_ext_$aft aligned ext,			/* aft structure */
  2    79 
  2    80       3 start_list (0:102) fixed bin (24),		/* >0 => 1st aft_entry row to start of next entry chain. */
  2    81 
  2    82       3 aft_entry (20),
  2    83         4 altname char (8),				/* altname name for attaching this file */
  2    84         4 next_entry fixed bin (24),			/* Next aft_entry in hash chain. */
  2    85         4 previous_add fixed bin (24),			/* Previously added entry. */
  2    86         4 next_add fixed bin (24),			/* Entry added after this one. */
  2    87         4 used bit (1) unal,				/* "1"b => aft_entry contains AFT value. */
  2    88         4 forced bit(1) unal,				/* "1"b => gtss_verify_access_ forced access on this file. */
  2    89 
  2    90       3 free_space fixed bin (24),			/* Index of start of free space list for aft entries. */
  2    91       3 first_added fixed bin (24),			/* >0  => start of chain in add order. */
  2    92       3 last_added fixed bin (24)			/* >0 => end of chain in added order. */;
  2    93 
  2    94 dcl  gtss_ext_$ppt                   ptr ext /*  switch name for tapein drl */;
  2    95 /**	Data structure to provide access to installed
  2    96*   subsystems fast library load.
  2    97*   **/
  2    98 dcl 1 gtss_ext_$fast_lib aligned ext
  2    99      , 3 fast_lib_fcb ptr				/* Pointer to msf fcb.	*/
  2   100      , 3 fast_lib_ncp fixed bin (24)			/* Number of components. */
  2   101      , 3 comp_ptr (0:9)ptr				/* Pointer to component. */
  2   102      , 3 comp_wds (0:9)fixed bin (24)			/* Component length (words). */
  2   103      ;
  2   104 
  2   105 /* Pointers to segments to regulate multipler
  2   106*   callers to files. Same segments are used to regulate
  2   107*   all simulator callers.
  2   108**/
  2   109 dcl 1 gtss_ext_$mcfc	aligned ext,
  2   110       3 multics_lock_id	bit(36),
  2   111       3 wait_time		fixed bin,
  2   112       3 files_ptr		ptr,
  2   113       3 names_ptr		ptr,
  2   114       3 callers_ptr		(0:3)ptr
  2   115 ;
  2   116 
  2   117 /*   END INCLUDE FILE gtss_ext_.incl.pl1 */
      352 
      353 
  3     1 /* BEGIN INCLUDE FILE gtss_deferred_queue.incl.pl1 */
  3     2 /*
  3     3*  Created:  (Dupuis Multics)  06/26/79 0848.7 mst Tue 
  3     4*  Changed:  Ron Barstad  84-11-29  dq_catalog.dcelp changed to fixed bin 35 (was 36 unsigned)
  3     5**/
  3     6 dcl 1 dq_header based,
  3     7       2 dhcks fixed bin (36) unsigned unaligned,
  3     8       2 dhnam fixed bin (36) unsigned unaligned,
  3     9       2 dhdat bit (36) unaligned,
  3    10       2 dhtim fixed bin (36) unsigned unaligned,
  3    11       2 dhbsn,
  3    12         3 no_of_cea fixed bin (18) unsigned unaligned,
  3    13         3 tss_ssn fixed bin (18) unsigned unaligned,
  3    14       2 dhseq,
  3    15         3 no_of_ceiu fixed bin (18) unsigned unaligned,
  3    16         3 no_of_dss fixed bin (18) unsigned unaligned,
  3    17       2 dhtns,
  3    18         3 no_of_srts fixed bin (18) unsigned unaligned,
  3    19         3 no_of_dsi fixed bin (18) unsigned unaligned,
  3    20       2 dhrns fixed bin (36) unsigned unaligned;
  3    21 
  3    22 
  3    23 dcl 1 dq_catalog based,
  3    24      2 dcjid,
  3    25         3 bcd_job_id bit (30) unaligned,
  3    26         3 job_status fixed bin (6) unsigned unaligned,
  3    27      2 dcseq,
  3    28        3 jsn fixed bin (18) unsigned unaligned,
  3    29        3 reserved bit (1) unaligned,
  3    30        3 init_seq fixed bin (17) unsigned unaligned,
  3    31      2 dcuid bit (72) unaligned,
  3    32      2 dcdsd bit (36) unaligned,
  3    33      2 dcdst fixed bin (35) unaligned,
  3    34      2 dcelp fixed bin (35) unaligned,
  3    35      2 dcusr,
  3    36        3 not_used bit (18) unaligned,
  3    37        3 b18_35_lswth bit (18) unaligned;
  3    38 
  3    39 dcl 1 dq_dib based,
  3    40       2 dbdat bit (36) unaligned,
  3    41       2 dbtim bit (36) unaligned,
  3    42       2 dblin fixed bin (36) unaligned unsigned,
  3    43       2 dberr,
  3    44         3 dbalt_cc fixed bin (18) unaligned unsigned,
  3    45         3 dbdsc_cc fixed bin (18) unaligned unsigned,
  3    46       2 dbptr,
  3    47         3 dbdsc_ro fixed bin (18) unaligned unsigned,
  3    48         3 ofn_ro fixed bin (17) unaligned,
  3    49       2 dbflg,
  3    50         3 alloc_perm bit (9) unaligned,
  3    51         3 del_char char (1) unaligned,
  3    52         3 f_res bit (1) unaligned,
  3    53         3 f_sub bit (1) unaligned,
  3    54         3 f_arg bit (1) unaligned,
  3    55         3 f_del bit (1) unaligned,
  3    56         3 f_exc bit (1) unaligned,
  3    57         3 f_inc bit (1) unaligned,
  3    58         3 f_lni bit (1) unaligned,
  3    59         3 f_alt bit (1) unaligned,
  3    60         3 f_fnq bit (1) unaligned,
  3    61         3 f_ucs bit (1) unaligned,
  3    62         3 f_lcs bit (1) unaligned,
  3    63         3 arg_char char (1) unaligned,
  3    64       2 rest (58) bit (36) unaligned;
  3    65 
  3    66 dcl 1 cout_sector based,
  3    67       2 filler_1 (6) bit (36),
  3    68       2 c_lcfio,
  3    69         3 sector_out fixed bin (18) unaligned unsigned,
  3    70         3 sector_in fixed bin (18) unaligned unsigned,
  3    71       2 c_lcfst,
  3    72         3 init_sect_out fixed bin (18) unaligned unsigned,
  3    73         3 start_term fixed bin (18) unaligned unsigned,
  3    74       2 filler_2 (40) bit (36),
  3    75       2 label_table (8),
  3    76         3 label_name bit (54),
  3    77         3 label_pos fixed bin (18) unaligned unsigned;
  3    78 
  3    79 /*   END INCLUDE FILE gtss_deferred_queue.incl.pl1 */
      354 
      355 
  4     1 /* BEGIN INCLUDE FILE gtss_ust_ext_.incl.pl1 */
  4     2 /* UST: User Status Table 
  4     3*   definitions based on 
  4     4*   System Tables, Order number DD14-01E, January 1981
  4     5*   Section 15, Time Sharing System
  4     6*
  4     7*   Authors: Robert J. Grimes	Created
  4     8*   -	  Albert N. Kepner	  1978
  4     9*   -	  Robert M. May
  4    10*   -	  David B. Ward
  4    11*   Change:  Dave Ward	02/23/79 Level 4 numbering.
  4    12*   Change:  Ron Barstad  83-07-12 Repaired damaged formating and word offset comments
  4    13*                                  Brought up to 4JS3 functionality
  4    14**/
  4    15 /* octal word offsets of entries */
  4    16 dcl 1 gtss_ust_ext_$ust aligned ext,
  4    17       3 gtss_ust,
  4    18 /* 0-1  */	4 lid		bit (72),
  4    19 /* 2    */	4 lstp		bit (36),
  4    20 /* 3    */	4 ltin		bit (36),
  4    21 /* 4    */	4 lstio,
  4    22 			5 no_of_chars_by_8  fixed bin (18) uns unal,
  4    23 			5 no_of_disk_io     fixed bin (18) uns unal,
  4    24 /* 5    */	4 lsnub		bit (36),
  4    25 /* 6-7  */	4 lchg		bit (72),
  4    26 /* 10   */	4 lbuf,
  4    27 			5 address		bit (18)unaligned,
  4    28 			5 tally		bit (1)unaligned,
  4    29 			5 terminal_type	bit (5)unaligned,
  4    30 			5 station_id	bit (12)unaligned,
  4    31 /* 11-12 */	4 liost (0:1)	bit (36),
  4    32 /* 13   */	4 lcc		bit (36),
  4    33 /* 14   */	4 lback,
  4    34 			5 fill1		bit (18) unaligned,
  4    35 			5 gwake		fixed bin (17) unaligned,
  4    36 /* 15   */	4 lflag,
  4    37 			5 mp_list		bit (18) unaligned,
  4    38 			5 flags unaligned,
  4    39 				6 b18		bit (1) unaligned,
  4    40 				6 b19		bit (1) unaligned,
  4    41 				6 b20		bit (1) unaligned,
  4    42 				6 b21		bit (1) unaligned,
  4    43 				6 b22		bit (1) unaligned,
  4    44 				6 b23		bit (1) unaligned,
  4    45 				6 b24		bit (1) unaligned,
  4    46 				6 b25		bit (1) unaligned,
  4    47 				6 b26		bit (1) unaligned,
  4    48 				6 b27		bit (1) unaligned,
  4    49 				6 b28		bit (1) unaligned,
  4    50 				6 b29		bit (1) unaligned,
  4    51 				6 b30		bit (1) unaligned,
  4    52 				6 b31		bit (1) unaligned,
  4    53 				6 b32		bit (1) unaligned,
  4    54 				6 b33		bit (1) unaligned,
  4    55 				6 b34		bit (1) unaligned,
  4    56 				6 b35		bit (1) unaligned,
  4    57 /* 16   */	4 lkdss		bit (36),
  4    58 /* 17   */	4 lfile,
  4    59 			5 program_stack	fixed bin (17) unal,
  4    60 			5 file_list_ptr	bit (18) unal,
  4    61 /* 20   */	4 lttys		bit (36),
  4    62 /* 21   */	4 lswth,
  4    63 			5 b0		bit (1) unaligned,
  4    64 			5 b1		bit (1) unaligned,
  4    65 			5 b2		bit (1) unaligned,
  4    66 			5 b3		bit (1) unaligned,
  4    67 			5 b4		bit (1) unaligned,
  4    68 			5 b5		bit (1) unaligned,
  4    69 			5 b6		bit (1) unaligned,
  4    70 			5 b7		bit (1) unaligned,
  4    71 			5 b8		bit (1) unaligned,
  4    72 			5 b9		bit (1) unaligned,
  4    73 			5 b10		bit (1) unaligned,
  4    74 			5 b11		bit (1) unaligned,
  4    75 			5 b12		bit (1) unaligned,
  4    76 			5 b13		bit (1) unaligned,
  4    77 			5 b14		bit (1) unaligned,
  4    78 			5 b15		bit (1) unaligned,
  4    79 			5 b16		bit (1) unaligned,
  4    80 			5 b17		bit (1) unaligned,
  4    81 			5 b18		bit (1) unaligned,
  4    82 			5 b19		bit (1) unaligned,
  4    83 			5 b20		bit (1) unaligned,
  4    84 			5 b21		bit (1) unaligned,
  4    85 			5 b22		bit (1) unaligned,
  4    86 			5 b23		bit (1) unaligned,
  4    87 			5 b24		bit (1) unaligned,
  4    88 			5 b25		bit (1) unaligned,
  4    89 			5 b26		bit (1) unaligned,
  4    90 			5 b27		bit (1) unaligned,
  4    91 			5 b28		bit (1) unaligned,
  4    92 			5 b29		bit (1) unaligned,
  4    93 			5 b30		bit (1) unaligned,
  4    94 			5 b31		bit (1) unaligned,
  4    95 			5 b32		bit (1) unaligned,
  4    96 			5 b33		bit (1) unaligned,
  4    97 			5 b34		bit (1) unaligned,
  4    98 			5 b35		bit (1) unaligned,
  4    99 /* 22   */	4 lsize,
  4   100 			5 bar		fixed bin (17) unaligned,
  4   101 			5 limit		bit (18) unaligned,
  4   102 /* 23... */	4 lswap,
  4   103 			5 fill		bit (18) unal,
  4   104 			5 size		bit (18) unal,
  4   105 /* ...24 */	4 transfer_cell	bit (36) unal,
  4   106 /* 25   */	4 lerrm		bit (36),
  4   107 /* 26-37 */	4 lcfil (0:9)	bit (36),
  4   108 /* 40   */	4 lsybc,
  4   109 			5 b0_17		fixed bin (17) unaligned,
  4   110 			5 b18_35		fixed bin (17) unaligned,
  4   111 /* 41-42 */	4 lstem (0:1)	bit (36),
  4   112 /* 43    */	4 lcals,
  4   113 			5 b0_17		fixed bin (17) unaligned,
  4   114 			5 b18_35		bit (18) unaligned,
  4   115 /* 44-51 */	4 subsystems (3),
  4   116 			5 content_lswap,
  4   117 				6 fill		bit (18) unal,
  4   118 				6 size		bit (18) unal,
  4   119 			5 tally_address	fixed bin (17) unaligned,
  4   120 			5 ss_flags	bit (18) unaligned,
  4   121 /* 52   */	4 ltalc,
  4   122 			5 tod		fixed bin (17) unaligned,
  4   123 			5 startup		fixed bin (17) unaligned,
  4   124 /* 53   */	4 lspts		fixed bin (35),
  4   125 /* 54   */	4 lflg2,
  4   126 			5 b0		bit (1) unaligned,
  4   127 			5 b1		bit (1) unaligned,
  4   128 			5 b2		bit (1) unaligned,
  4   129 			5 b3		bit (1) unaligned,
  4   130 			5 b4		bit (1) unaligned,
  4   131 			5 b5		bit (1) unaligned,
  4   132 			5 b6		bit (1) unaligned,
  4   133 			5 b7		bit (1) unaligned,
  4   134 			5 b8		bit (1) unaligned,
  4   135 			5 b9		bit (1) unaligned,
  4   136 			5 b10		bit (1) unaligned,
  4   137 			5 b11		bit (1) unaligned,
  4   138 			5 b12		bit (1) unaligned,
  4   139 			5 b13		bit (1) unaligned,
  4   140 			5 b14		bit (1) unaligned,
  4   141 			5 b15		bit (1) unaligned,
  4   142 			5 b16		bit (1) unaligned,
  4   143 			5 b17		bit (1) unaligned,
  4   144 			5 b18		bit (1) unaligned,
  4   145 			5 b19		bit (1) unaligned,
  4   146 			5 b20		bit (1) unaligned,
  4   147 			5 b21		bit (1) unaligned,
  4   148 			5 b22		bit (1) unaligned,
  4   149 			5 b23		bit (1) unaligned,
  4   150 			5 b24		bit (1) unaligned,
  4   151 			5 b25		bit (1) unaligned,
  4   152 			5 b26		bit (1) unaligned,
  4   153 			5 b27		bit (1) unaligned,
  4   154 			5 b28		bit (1) unaligned,
  4   155 			5 b29		bit (1) unaligned,
  4   156 			5 b30		bit (1) unaligned,
  4   157 			5 b31		bit (1) unaligned,
  4   158 			5 b32		bit (1) unaligned,
  4   159 			5 b33		bit (1) unaligned,
  4   160 			5 b34		bit (1) unaligned,
  4   161 			5 b35		bit (1) unaligned,
  4   162 /* 55-60 */	4 lsftm (0:3)	bit (36),
  4   163 /* 61    */	4 lsprt		fixed bin (35),
  4   164 /* 62    */	4 ltrm		bit (36),
  4   165 /* 63    */	4 linno		fixed bin (35),
  4   166 /* 64    */	4 lincr		fixed bin (35),
  4   167 /* 65    */	4 ltdes		bit (36),
  4   168 /* 66    */	4 lbptr		bit (36),
  4   169 /* 67    */	4 lpptr,
  4   170 			5 last_file_pat_ptr	bin (18) uns unal,
  4   171 			5 lpptr_reserved	bin (18) uns unal,
  4   172 /* 70    */	4 lsclp		bit (36),
  4   173 /* 71    */	4 limit		fixed bin (35),
  4   174 /* 72    */	4 lacpt,
  4   175 			5 jout_pat_offset	bit (18) unal,
  4   176 			5 permissions unal,
  4   177 				6 lodx		bit (1) unal,
  4   178 				6 cardin		bit (1) unal,
  4   179 				6 talk		bit (1) unal,
  4   180 				6 lods		bit (1) unal,
  4   181 			5 cardin_urgency	bit (14) unal,
  4   182 /* 73    */	4 ldrl,
  4   183 			5 ilc		bit (18) unaligned,
  4   184 			5 code		fixed bin (17) unaligned,
  4   185 /* 74    */	4 ljsnb		bit (36),
  4   186 /* 75    */	4 ltm0		bit (36),
  4   187 /* 76    */	4 ltm1		bit (36),
  4   188 /* 77    */	4 ltm2		bit (36),
  4   189 /* 100   */	4 ltm3		bit (36),
  4   190 /* 101   */	4 ltm4		bit (36),
  4   191 /* 102   */	4 ltm5		bit (36),
  4   192 /* 103   */	4 ltmwt		bit (36),
  4   193 /* 104   */	4 ltmrs		bit (36),
  4   194 /* 105   */	4 ltc0		bit (36),
  4   195 /* 106   */	4 ltc1		bit (36),
  4   196 /* 107   */	4 ltc2		bit (36),
  4   197 /* 110   */	4 lct3		bit (36),
  4   198 /* 111   */	4 ltc4		bit (36),
  4   199 /* 112   */	4 ltc5		bit (36),
  4   200 /* 113   */	4 ltcw		bit (36),
  4   201 /* 114   */	4 lkst		bit (36),
  4   202 /* 115   */	4 lkst2		bit (36),
  4   203 /* 116   */	4 lkcc		bit (36),
  4   204 /* 117   */	4 lkms		bit (36),
  4   205 /* 120-121 */	4 lksdc (0:1)	bit (36),
  4   206 /* 122   */	4 lkntp		bit (36),
  4   207 /* 123   */	4 lkrdc		bit (36),
  4   208 /* 124   */	4 lpqf		bit (36),
  4   209 /* 125   */	4 lpqb		bit (36),
  4   210 /* 126   */	4 lustl		bit (36),
  4   211 /* 127   */	4 ltemp		bit (36),
  4   212 /* 130   */	4 lrtll,
  4   213 			5 word_length	fixed bin unaligned,
  4   214 			5 char_length	fixed bin unaligned,
  4   215 /* 131   */	4 ltim		bit (36),
  4   216 /* 132   */	4 lcfio,
  4   217 			5 sect_out	fixed bin(18)unsigned unal,
  4   218 			5 sect_in		fixed bin(18)unsigned unal,
  4   219 /* 133   */	4 lcfst,
  4   220 			5 initial_sect_out	fixed bin(18)unsigned unal,
  4   221 			5 start_term	fixed bin(18)unsigned unal,
  4   222 /* 134   */	4 lcmpt		bit (36),
  4   223 /* 135   */	4 lcjid		bit (36),
  4   224 /* 136-137 */	4 lrcal (0:1)	bit (36),
  4   225 /* 140   */	4 lrdta		bit (36),
  4   226 /* 141   */	4 lrrsk		bit (36),
  4   227 /* 142   */	4 lrskd		bit (36),
  4   228 /* 143   */	4 lrcc		bit (36),
  4   229 /* 144-145 */	4 lrsts (0:1)	bit (36),
  4   230 /* 146   */	4 lrtm		bit (36),
  4   231 /* 147   */	4 lswt2,
  4   232 			5 b0		bit (1) unaligned,
  4   233 			5 b1		bit (1) unaligned,
  4   234 			5 b2		bit (1) unaligned,
  4   235 			5 b3		bit (1) unaligned,
  4   236 			5 b4		bit (1) unaligned,
  4   237 			5 b5		bit (1) unaligned,
  4   238 			5 b6		bit (1) unaligned,
  4   239 			5 b7		bit (1) unaligned,
  4   240 			5 b8		bit (1) unaligned,
  4   241 			5 b9		bit (1) unaligned,
  4   242 			5 b10		bit (1) unaligned,
  4   243 			5 b11		bit (1) unaligned,
  4   244 			5 b12		bit (1) unaligned,
  4   245 			5 b13		bit (1) unaligned,
  4   246 			5 b14		bit (1) unaligned,
  4   247 			5 b15		bit (1) unaligned,
  4   248 			5 b16		bit (1) unaligned,
  4   249 			5 b17		bit (1) unaligned,
  4   250 			5 b18		bit (1) unaligned,
  4   251 			5 b19		bit (1) unaligned,
  4   252 			5 b20		bit (1) unaligned,
  4   253 			5 b21		bit (1) unaligned,
  4   254 			5 b22		bit (1) unaligned,
  4   255 			5 b23		bit (1) unaligned,
  4   256 			5 b24		bit (1) unaligned,
  4   257 			5 b25		bit (1) unaligned,
  4   258 			5 b26		bit (1) unaligned,
  4   259 			5 b27		bit (1) unaligned,
  4   260 			5 b28		bit (1) unaligned,
  4   261 			5 b29		bit (1) unaligned,
  4   262 			5 b30		bit (1) unaligned,
  4   263 			5 b31		bit (1) unaligned,
  4   264 			5 b32		bit (1) unaligned,
  4   265 			5 b33		bit (1) unaligned,
  4   266 			5 b34		bit (1) unaligned,
  4   267 			5 b35		bit (1) unaligned,
  4   268 /* 150   */	4 llsnb		bit (36),
  4   269 /* 151   */	4 lesq		bit (36),
  4   270 /* 152-153 */	4 lumc (0:1)	bit (36),
  4   271 /* 154-155 */	4 lfnam (0:1)	bit (36),
  4   272 /* 156   */	4 lopts		bit (36),
  4   273 /* 157   */	4 licec,
  4   274 			5 b0_17		bit (18) unaligned,
  4   275 			5 b18_35		fixed bin (17) unaligned,
  4   276 /* 160   */	4 lflg3,
  4   277 			5 b0		bit (1) unaligned,
  4   278 			5 b1		bit (1) unaligned,
  4   279 			5 b2		bit (1) unaligned,
  4   280 			5 b3		bit (1) unaligned,
  4   281 			5 b4		bit (1) unaligned,
  4   282 			5 b5		bit (1) unaligned,
  4   283 			5 b6		bit (1) unaligned,
  4   284 			5 b7		bit (1) unaligned,
  4   285 			5 b8		bit (1) unaligned,
  4   286 			5 b9		bit (1) unaligned,
  4   287 			5 b10		bit (1) unaligned,
  4   288 			5 b11		bit (1) unaligned,
  4   289 			5 b12		bit (1) unaligned,
  4   290 			5 b13		bit (1) unaligned,
  4   291 			5 b14		bit (1) unaligned,
  4   292 			5 b15		bit (1) unaligned,
  4   293 			5 b16		bit (1) unaligned,
  4   294 			5 b17		bit (1) unaligned,
  4   295 			5 b18		bit (1) unaligned,
  4   296 			5 b19		bit (1) unaligned,
  4   297 			5 b20		bit (1) unaligned,
  4   298 			5 b21		bit (1) unaligned,
  4   299 			5 b22		bit (1) unaligned,
  4   300 			5 b23		bit (1) unaligned,
  4   301 			5 b24		bit (1) unaligned,
  4   302 			5 b25		bit (1) unaligned,
  4   303 			5 b26		bit (1) unaligned,
  4   304 			5 b27		bit (1) unaligned,
  4   305 			5 b28		bit (1) unaligned,
  4   306 			5 b29		bit (1) unaligned,
  4   307 			5 b30		bit (1) unaligned,
  4   308 			5 b31		bit (1) unaligned,
  4   309 			5 b32		bit (1) unaligned,
  4   310 			5 b33		bit (1) unaligned,
  4   311 			5 b34		bit (1) unaligned,
  4   312 			5 b35		bit (1) unaligned,
  4   313 /* 161-163 */	4 lpage (0:2)	bit (36),
  4   314 /* 164   */	4 lsit1		bit (36),
  4   315 /* 165   */	4 lsit2		bit (36),
  4   316 /* 166   */	4 lsit3		bit (36),
  4   317 /* 167   */	4 lsit4		bit (36),
  4   318 /* The following entries are maintained by gtss and are not found in TSS UST */
  4   319 /* 170   */	4 lxxx, /* program stack index, offset from gtss_ust */
  4   320 			5 b0_17		fixed bin (17) unaligned,
  4   321 			5 b18_35		bit (18) unaligned, /* not used */
  4   322 /* 171-175 */	4 lprgs (5),
  4   323 			5 b0_17		fixed bin (17) unaligned,
  4   324 			5 b18_35		fixed bin (17) unaligned,
  4   325 /* 176   */	4 fill	bit (36),
  4   326 /* 177   */	4 remote_io_buffer aligned,
  4   327 			5 buffer_control_word,
  4   328 				6 current_line_pointer  bit (18)unal,
  4   329 				6 buffer_threshold_address  bit (18)unal,
  4   330 			5 number_words_transmitted	fixed bin (17)unal,
  4   331 			5 FILL1			fixed bin (17)unal,
  4   332 			5 count_of_characters_transmitted fixed bin (17)unal,
  4   333 			5 FILL2			fixed bin (17)unal,
  4   334 			5 characters_transmitted (244) char (1) unal,
  4   335 /* 277   */	4 word_after_ust		bit (36) aligned;
  4   336 
  4   337 /*   END INCLUDE FILE gtss_ust_ext_.incl.pl1 */
      356 
      357 
  5     1 /* BEGIN INCLUDE FILE gse_ext_.incl.pl1 */
  5     2 /*
  5     3*  Created:  Kepner  78-12-01
  5     4**/
  5     5 
  5     6 dcl gse_ext_$drm_rule	fixed bin(24) ext;
  5     7 
  5     8 /* $drm_rule:
  5     9*   0 => rule not set
  5    10*   1 => umc_dir_mode
  5    11*   2 => working_dir_mode
  5    12*   3 => smc_dir_mode
  5    13**/
  5    14 
  5    15 dcl gse_ext_$gcos_debug_pathname       char(168)  /* pathname for the gcos debugger control file */ ext;
  5    16 dcl gse_ext_$smc_pathname              char(168) 	/* root directory used with smc_dir mapping rule */ ext;
  5    17 dcl gse_ext_$umc_name                  char(12) 	/* User Master Catalog name specified by user with gse command */ ext;
  5    18 dcl 1 gse_ext_$modes	aligned ext,
  5    19        3 ast		bit(01) unal, 	/* 1 => use asterisk as prompt character */
  5    20        3 drl		bit(01) unal, 	/* 1 => cause trace info on each derail to be printed */
  5    21        3 gdb		bit(01) unal, 	/* 1 => use gcos debugger (gdb) */
  5    22        3 mcmd		bit(01) unal, 	/* 1 => allow use of e request at GTSS command level */
  5    23        3 mquit		bit(01) unal, 	/* 1 => quit causes entry to new Multics command level */
  5    24        3 ss		bit(01) unal, 	/* 1 => cause trace info on each subsystem to be printed */
  5    25        3 fill		bit(30) unal; 
  5    26 
  5    27 /*   END INCLUDE FILE gse_ext_.incl.pl1 */
      358 
      359 
  6     1 /* BEGIN INCLUDE FILE . . . star_structures.incl.pl1 */
  6     2 
  6     3 /* This include file contains structures for the hcs_$star_,
  6     4*   hcs_$star_list_ and hcs_$star_dir_list_ entry points.
  6     5*
  6     6*   Written 23 October 1978 by Monte Davidoff.
  6     7*   Modified January 1979 by Michael R. Jordan to use unsigned and different pointers for different structures.
  6     8*   Modified June 1981 by C. Hornig to count link pathnames more efficiently.
  6     9**/
  6    10 
  6    11 /* automatic */
  6    12 
  6    13 declare  star_branch_count fixed binary;		/* hcs_$star_list_, hcs_$star_dir_list_: matching branch count */
  6    14 declare  star_entry_count fixed binary;			/* hcs_$star_: number of matching entries */
  6    15 declare  star_entry_ptr pointer;			/* hcs_$star_: pointer to array of entry information */
  6    16 declare  star_list_branch_ptr pointer;			/* hcs_$star_list_, hcs_$star_dir_list_: ptr to array of info */
  6    17 declare  star_link_count fixed binary;			/* hcs_$star_list_, hcs_$star_dir_list_: matching link count */
  6    18 declare  star_linkx fixed binary;			/* hcs_$star_list_, hcs_$star_dir_list_: index into star_links */
  6    19 declare  star_names_ptr pointer;			/* hcs_$star_: pointer to array of entry names */
  6    20 declare  star_list_names_ptr pointer;			/* hcs_$star_list_, hcs_$star_dir_list_: ptr to entry names */
  6    21 declare  star_select_sw fixed binary (3);		/* hcs_$star_list_, hcs_$star_dir_list_: what info to return */
  6    22 
  6    23 /* based */
  6    24 
  6    25 /* hcs_$star_ entry structure */
  6    26 
  6    27 declare 1 star_entries (star_entry_count) aligned based (star_entry_ptr),
  6    28         2 type fixed binary (2) unsigned unaligned,
  6    29 						/* storage system type */
  6    30         2 nnames fixed binary (16) unsigned unaligned,
  6    31 						/* number of names of entry that match star_name */
  6    32         2 nindex fixed binary (18) unsigned unaligned;
  6    33 						/* index of first name in star_names */
  6    34 
  6    35 /* hcs_$star_ name structure */
  6    36 
  6    37 declare  star_names (sum (star_entries (*).nnames)) char (32) based (star_names_ptr);
  6    38 
  6    39 /* hcs_$star_list_ branch structure */
  6    40 
  6    41 declare 1 star_list_branch (star_branch_count + star_link_count) aligned based (star_list_branch_ptr),
  6    42         2 type fixed binary (2) unsigned unaligned,
  6    43 						/* storage system type */
  6    44         2 nnames fixed binary (16) unsigned unaligned,
  6    45 						/* number of names of entry that match star_name */
  6    46         2 nindex fixed binary (18) unsigned unaligned,
  6    47 						/* index of first name in star_list_names */
  6    48         2 dtcm bit (36) unaligned,			/* date-time contents of branch were last modified */
  6    49         2 dtu bit (36) unaligned,			/* date-time branch was last used */
  6    50         2 mode bit (5) unaligned,			/* user's access mode to the branch */
  6    51         2 raw_mode bit (5) unaligned,			/* user's ACL access mode */
  6    52         2 master_dir bit (1) unaligned,			/* is branch a master directory */
  6    53         2 pad bit (7) unaligned,
  6    54         2 records fixed binary (18) unsigned unaligned;
  6    55 						/* records used by branch */
  6    56 
  6    57 /* hcs_$star_dir_list_ branch structure */
  6    58 
  6    59 declare 1 star_dir_list_branch (star_branch_count + star_link_count) aligned based (star_list_branch_ptr),
  6    60         2 type fixed binary (2) unsigned unaligned,
  6    61 						/* storage system type */
  6    62         2 nnames fixed binary (16) unsigned unaligned,
  6    63 						/* number of names of entry that match star_name */
  6    64         2 nindex fixed binary (18) unsigned unaligned,
  6    65 						/* index of first name in star_list_names */
  6    66         2 dtem bit (36) unaligned,			/* date-time directory entry of branch was last modified */
  6    67         2 pad bit (36) unaligned,
  6    68         2 mode bit (5) unaligned,			/* user's access mode to the branch */
  6    69         2 raw_mode bit (5) unaligned,			/* user's ACL access mode */
  6    70         2 master_dir bit (1) unaligned,			/* is branch a master directory */
  6    71         2 bit_count fixed binary (24) unaligned;
  6    72 						/* bit count of the branch */
  6    73 
  6    74 /* hcs_$star_list_ and hcs_$star_dir_list_ link structure */
  6    75 
  6    76 declare 1 star_links (star_branch_count + star_link_count) aligned based (star_list_branch_ptr),
  6    77         2 type fixed binary (2) unsigned unaligned,
  6    78 						/* storage system type */
  6    79         2 nnames fixed binary (16) unsigned unaligned,
  6    80 						/* number of names of entry that match star_name */
  6    81         2 nindex fixed binary (18) unsigned unaligned,
  6    82 						/* index of first name in star_list_names */
  6    83         2 dtem bit (36) unaligned,			/* date-time link was last modified */
  6    84         2 dtd bit (36) unaligned,			/* date-time the link was last dumped */
  6    85         2 pathname_len fixed binary (18) unsigned unaligned,
  6    86 						/* length of the pathname of the link */
  6    87         2 pathname_index fixed binary (18) unsigned unaligned;
  6    88 						/* index of start of pathname in star_list_names */
  6    89 
  6    90 /* hcs_$star_list_ and hcs_$star_dir_list_ name array */
  6    91 
  6    92 declare  star_list_names char (32) based (star_list_names_ptr)
  6    93 	dimension (star_links (star_branch_count + star_link_count).nindex
  6    94 	 + star_links (star_branch_count + star_link_count).nnames
  6    95 	 + divide (star_links (star_branch_count + star_link_count).pathname_len + 31, 32, 17, 0)
  6    96 	   * binary (
  6    97 	     (star_links (star_branch_count + star_link_count).type = star_LINK)
  6    98 	     & (star_select_sw >= star_LINKS_ONLY_WITH_LINK_PATHS), 1));
  6    99 
  6   100 /* hcs_$star_list_ and hcs_$star_dir_list_ link pathname */
  6   101 
  6   102 declare  star_link_pathname char (star_links (star_linkx).pathname_len)
  6   103          based (addr (star_list_names (star_links (star_linkx).pathname_index)));
  6   104 
  6   105 /* internal static */
  6   106 
  6   107 /* star_select_sw values */
  6   108 
  6   109 declare  star_LINKS_ONLY fixed binary (2) internal static options (constant) initial (1);
  6   110 declare  star_BRANCHES_ONLY fixed binary (2) internal static options (constant) initial (2);
  6   111 declare  star_ALL_ENTRIES fixed binary (2) internal static options (constant) initial (3);
  6   112 declare  star_LINKS_ONLY_WITH_LINK_PATHS
  6   113          fixed binary (3) internal static options (constant) initial (5);
  6   114 declare  star_ALL_ENTRIES_WITH_LINK_PATHS
  6   115          fixed binary (3) internal static options (constant) initial (7);
  6   116 
  6   117 /* storage system types */
  6   118 
  6   119 declare  star_LINK fixed binary (2) unsigned internal static options (constant) initial (0);
  6   120 declare  star_SEGMENT fixed binary (2) unsigned internal static options (constant) initial (1);
  6   121 declare  star_DIRECTORY fixed binary (2) unsigned internal static options (constant) initial (2);
  6   122 
  6   123 /* END INCLUDE FILE . . . star_structures.incl.pl1 */
      360 
      361      end;						/* gtss_drun_ */
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/10/84  1043.7  gtss_drun_.pl1                    >spec>on>7105>gtss_drun_.pl1
350          1    12/10/84  1029.7  gtss_entry_dcls.incl.pl1          >spec>on>7105>gtss_entry_dcls.incl.pl1
352          2    09/09/83  1713.8  gtss_ext_.incl.pl1                >ldd>include>gtss_ext_.incl.pl1
354          3    12/10/84  1029.7  gtss_deferred_queue.incl.pl1      >spec>on>7105>gtss_deferred_queue.incl.pl1
356          4    09/09/83  1714.3  gtss_ust_ext_.incl.pl1            >ldd>include>gtss_ust_ext_.incl.pl1
358          5    09/09/83  1713.4  gse_ext_.incl.pl1                 >ldd>include>gse_ext_.incl.pl1
360          6    06/10/82  1045.5  star_structures.incl.pl1          >ldd>include>star_structures.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 291 ref 98 98 98 98 110 171 171 226 226
aid                       1(09) 012312 automatic       char(19)                 array level 2 packed unaligned dcl 345 set ref 184
bit_count                       000100 automatic       fixed bin(24,0)          dcl 293 set ref 71* 73 134* 185*
caller                          000006 constant        char(10)                 initial unaligned dcl 294 set ref 48* 60* 77* 85*
                                                                                  101* 129* 166* 178* 189* 191* 209* 222* 232* 251*
                                                                                  270* 276* 282*
cat_entry                       000101 automatic       fixed bin(18,0)          unsigned dcl 295 set ref 99* 271*
channel_id                             based           fixed bin(71,0)          level 2 dcl 336 set ref 74* 91
check_star_name_$entry          000012 constant        entry                    external dcl 296 ref 219
code                            000102 automatic       fixed bin(35,0)          dcl 297 set ref 67* 69 71* 74* 75 76* 77* 83* 84 85*
                                                                                  134* 185* 189* 190 191* 219* 220 222* 226* 230
                                                                                  232* 236 251* 269* 270*
com_err_                        000056 constant        entry                    external dcl 1-8 ref 48 60 77 85 101 129 166 178 191
                                                                                  200 209 222 232 276 282
convert_ipc_code_               000014 constant        entry                    external dcl 298 ref 76
dc_ptr                          000104 automatic       pointer                  initial dcl 299 set ref 99* 100 107 108 109 271* 272
                                                                                  299*
dcdsd                     4            based           bit(36)                  level 2 packed unaligned dcl 3-23 ref 108
dcdst                     5            based           fixed bin(35,0)          level 2 packed unaligned dcl 3-23 ref 109
dcjid                                  based           structure                level 2 packed unaligned dcl 3-23
dcuid                     2            based           bit(72)                  level 2 packed unaligned dcl 3-23 ref 107
delete_$path                    000016 constant        entry                    external dcl 301 ref 251
delete_$ptr                     000020 constant        entry                    external dcl 302 ref 189 270
did                             012312 automatic       char(5)                  array level 2 packed unaligned dcl 345 set ref 185
                                                                                  191* 196* 199* 200* 200* 242
dir_name                        000106 automatic       char(168)                unaligned dcl 300 set ref 118* 120* 124* 134*
dit                       0(18) 000120 external static fixed bin(18,0)          level 3 packed unsigned unaligned dcl 2-45 set ref
                                                                                  97*
dq_catalog                             based           structure                level 1 packed unaligned dcl 3-23
dq_info                         012312 automatic       structure                array level 1 unaligned dcl 345 set ref 171 171
error                                  parameter       bit(1)                   unaligned dcl 303 set ref 15 50* 62* 79* 87* 103*
                                                                                  168* 180* 193* 211* 278*
error_occured                   000160 automatic       bit(1)                   unaligned dcl 304 set ref 58* 59 69* 164* 165 176*
                                                                                  177 196* 199* 207* 208 274* 275 281*
error_table_$namedup            000022 external static fixed bin(35,0)          dcl 305 ref 69
error_table_$nomatch            000024 external static fixed bin(35,0)          dcl 306 ref 236
error_table_$notalloc           000026 external static fixed bin(35,0)          dcl 307 ref 230
event_info                             based           structure                level 1 unaligned dcl 336
first_time_called               000010 internal static bit(1)                   initial unaligned dcl 308 set ref 36 37* 44*
get_process_id_                 000030 constant        entry                    external dcl 309 ref 82
get_wdir_                       000032 constant        entry                    external dcl 310 ref 118
gse_ext_$smc_pathname           000126 external static char(168)                unaligned dcl 5-16 ref 120
gse_ext_$umc_name               000130 external static char(12)                 unaligned dcl 5-17 ref 120 124 124
gtss_CFP_output_                000060 constant        entry                    external dcl 1-12 ref 140
gtss_abs_$cpu_runout            000062 constant        entry                    external dcl 1-20 ref 263 263
gtss_abs_$dabt_check            000064 constant        entry                    external dcl 1-22 ref 92 92 262 262
gtss_abs_$get_drm               000066 constant        entry                    external dcl 1-24 ref 116
gtss_bcd_ascii_                 000070 constant        entry                    external dcl 1-33 ref 98
gtss_dq_$catp                   000072 constant        entry                    external dcl 1-42 ref 99 271
gtss_dq_$entries_info           000074 constant        entry                    external dcl 1-45 ref 171
gtss_dq_$mod_js                 000076 constant        entry                    external dcl 1-47 ref 69 196 199 281
gtss_dq_$open_exc               000100 constant        entry                    external dcl 1-48 ref 58 176 274
gtss_dq_$open_gen               000102 constant        entry                    external dcl 1-49 ref 164 207
gtss_ext_$com_reg               000120 external static structure                level 1 dcl 2-45
gtss_ext_$drun_jid              000106 external static char(5)                  unaligned dcl 2-15 set ref 67 69* 98 98 99* 101*
                                                                                  271* 281*
gtss_ext_$event_channel         000110 external static fixed bin(71,0)          dcl 2-16 set ref 91* 269*
gtss_ext_$flags                 000122 external static structure                level 1 dcl 2-60
gtss_ext_$homedir               000112 external static char(64)                 unaligned dcl 2-22 set ref 67* 185* 200 200 218
gtss_ext_$put_chars             000114 external static entry variable           dcl 2-27 set ref 140*
gtss_ext_$restart_seg_ptr       000116 external static pointer                  dcl 2-29 set ref 67* 71* 74 82 83* 91 185* 188 189*
                                                                                  270*
gtss_fail                       000000 stack reference condition                dcl 311 ref 132
gtss_fault_processor_$timer_runout
                                000104 constant        entry                    external dcl 1-111 ref 264 264
gtss_ust                        000124 external static structure                level 2 dcl 4-16
gtss_ust_ext_$ust               000124 external static structure                level 1 dcl 4-16
hcs_$initiate_count             000034 constant        entry                    external dcl 312 ref 134 185
hcs_$make_seg                   000036 constant        entry                    external dcl 313 ref 67
hcs_$set_bc_seg                 000040 constant        entry                    external dcl 314 ref 83
hcs_$star_                      000042 constant        entry                    external dcl 315 ref 226
hcs_$status_mins                000044 constant        entry                    external dcl 316 ref 71
hdir                            000161 automatic       char(64)                 unaligned dcl 317 set ref 218* 226* 251*
i                               000201 automatic       fixed bin(18,0)          unsigned dcl 318 set ref 183* 184 184 185 191 196
                                                                                  199 200 200* 239* 242 251*
in_def_q                        000202 automatic       bit(1)                   unaligned dcl 319 set ref 238* 247* 251 255*
ipc_$create_ev_chn              000046 constant        entry                    external dcl 320 ref 74
ipc_$delete_ev_chn              000050 constant        entry                    external dcl 321 ref 269
j                               000203 automatic       fixed bin(18,0)          unsigned dcl 322 set ref 240* 242 248*
job_status                0(30)        based           fixed bin(6,0)           level 3 packed unsigned unaligned dcl 3-23 ref 272
js                        6     012312 automatic       fixed bin(6,0)           array level 2 unsigned dcl 345 set ref 184
lcfst                   133     000124 external static structure                level 3 dcl 4-16
lcjid                   135     000124 external static bit(36)                  level 3 dcl 4-16 set ref 39 98 98 110 138* 268
nindex                    0(18)        based           fixed bin(18,0)          array level 2 packed unsigned unaligned dcl 6-27 ref
                                                                                  242 251
no_of_entries_found             000204 automatic       fixed bin(18,0)          unsigned dcl 323 set ref 171* 172 183 240 240 248
one_word                               based           bit(36)                  unaligned dcl 324 set ref 110*
our_area                        000206 automatic       area(5120)               dcl 325 set ref 226 226 325*
second_time_called              000011 internal static bit(1)                   initial unaligned dcl 326 set ref 38* 42 43*
seg_ptr                         012206 automatic       pointer                  initial dcl 327 set ref 134* 136 327*
sender                    4            based           bit(36)                  level 2 packed unaligned dcl 336 set ref 82*
ss_time_limit_set         0(04) 000122 external static bit(1)                   level 2 packed unaligned dcl 2-60 ref 264
star_BRANCHES_ONLY              000043 constant        fixed bin(2,0)           initial dcl 6-110 set ref 226*
star_entries                           based           structure                array level 1 dcl 6-27
star_entry_count                016547 automatic       fixed bin(17,0)          dcl 6-14 set ref 226* 239
star_entry_ptr                  016550 automatic       pointer                  dcl 6-15 set ref 226* 242 251
star_name                       000000 constant        char(21)                 initial unaligned dcl 328 set ref 219* 222* 226*
star_names                             based           char(32)                 array unaligned dcl 6-37 set ref 242 251*
star_names_ptr                  016552 automatic       pointer                  dcl 6-19 set ref 226* 242 251
start_term              133(18) 000124 external static fixed bin(18,0)          level 4 packed unsigned unaligned dcl 4-16 set ref
                                                                                  139*
string                          012210 automatic       varying char(256)        dcl 329 set ref 116* 117* 117 118 120 124 129*
timer_manager_$cpu_call         000052 constant        entry                    external dcl 332 ref 92
timer_manager_$reset_cpu_call   000054 constant        entry                    external dcl 333 ref 262 263 264
tsdgt                    10     000120 external static structure                level 2 dcl 2-45
tsdid                     3     000120 external static bit(72)                  level 2 packed unaligned dcl 2-45 set ref 107*
tsdjb                     7     000120 external static fixed bin(35,0)          level 2 packed unaligned dcl 2-45 set ref 110
tsdmx                           000120 external static structure                level 2 dcl 2-45
tsdsd                     5     000120 external static bit(36)                  level 2 packed unaligned dcl 2-45 set ref 108*
tsdst                     6     000120 external static fixed bin(36,0)          level 2 packed unsigned unaligned dcl 2-45 set ref
                                                                                  109*
type                            012311 automatic       fixed bin(2,0)           dcl 334 set ref 71*
ust_loc                  10     000120 external static fixed bin(18,0)          level 3 packed unsigned unaligned dcl 2-45 set ref
                                                                                  96*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
binary                                                 builtin function         dcl 292
cout_sector                            based           structure                level 1 packed unaligned dcl 3-66
dq_dib                                 based           structure                level 1 packed unaligned dcl 3-39
dq_header                              based           structure                level 1 packed unaligned dcl 3-6
gse_ext_$drm_rule                      external static fixed bin(24,0)          dcl 5-6
gse_ext_$gcos_debug_pathname           external static char(168)                unaligned dcl 5-15
gse_ext_$modes                         external static structure                level 1 dcl 5-18
gtss_CFP_abort_                 000000 constant        entry                    external dcl 1-9
gtss_CFP_break_                 000000 constant        entry                    external dcl 1-10
gtss_CFP_input_                 000000 constant        entry                    external dcl 1-11
gtss_abandon_CFP_               000000 constant        entry                    external dcl 1-13
gtss_abort_dump_                000000 constant        entry                    external dcl 1-14
gtss_abort_subsystem_           000000 constant        entry                    external dcl 1-15
gtss_abort_subsystem_$not_imp   000000 constant        entry                    external dcl 1-16
gtss_abs_$abs_equiv             000000 constant        entry                    external dcl 1-19
gtss_abs_$create_absin          000000 constant        entry                    external dcl 1-21
gtss_abs_$get_id                000000 constant        entry                    external dcl 1-23
gtss_abs_login_banner_          000000 constant        entry                    external dcl 1-17
gtss_abs_logout_banner_         000000 constant        entry                    external dcl 1-18
gtss_adjust_size_               000000 constant        entry                    external dcl 1-25
gtss_aft_$add                   000000 constant        entry                    external dcl 1-26
gtss_aft_$delete                000000 constant        entry                    external dcl 1-27
gtss_aft_$find                  000000 constant        entry                    external dcl 1-28
gtss_aft_$initialize            000000 constant        entry                    external dcl 1-29
gtss_ascii_bcd_                 000000 constant        entry                    external dcl 1-30
gtss_attributes_mgr_$get        000000 constant        entry                    external dcl 1-31
gtss_attributes_mgr_$set        000000 constant        entry                    external dcl 1-32
gtss_bcd_ascii_$lc              000000 constant        entry                    external dcl 1-34
gtss_break_vector_              000000 constant        entry                    external dcl 1-35
gtss_break_vector_$drl_in_progress
                                000000 constant        entry                    external dcl 1-36
gtss_break_vector_$status       000000 constant        entry                    external dcl 1-37
gtss_build_                     000000 constant        entry                    external dcl 1-38
gtss_com_err_                   000000 constant        entry                    external dcl 1-39
gtss_derail_processor_          000000 constant        entry                    external dcl 1-40
gtss_derail_processor_$set      000000 constant        entry                    external dcl 1-41
gtss_dq_$create                 000000 constant        entry                    external dcl 1-43
gtss_dq_$dibp                   000000 constant        entry                    external dcl 1-44
gtss_dq_$hdrp                   000000 constant        entry                    external dcl 1-46
gtss_drl_abort_                 000000 constant        entry                    external dcl 1-50
gtss_drl_addmem_                000000 constant        entry                    external dcl 1-51
gtss_drl_callss_                000000 constant        entry                    external dcl 1-52
gtss_drl_corfil_                000000 constant        entry                    external dcl 1-53
gtss_drl_defil_                 000000 constant        entry                    external dcl 1-54
gtss_drl_defil_$subr            000000 constant        entry                    external dcl 1-55
gtss_drl_dio_                   000000 constant        entry                    external dcl 1-56
gtss_drl_drlimt_                000000 constant        entry                    external dcl 1-57
gtss_drl_drlsav_                000000 constant        entry                    external dcl 1-58
gtss_drl_filact_                000000 constant        entry                    external dcl 1-59
gtss_drl_filsp_                 000000 constant        entry                    external dcl 1-60
gtss_drl_grow_                  000000 constant        entry                    external dcl 1-61
gtss_drl_gwake_                 000000 constant        entry                    external dcl 1-62
gtss_drl_jsts_                  000000 constant        entry                    external dcl 1-63
gtss_drl_kin_                   000000 constant        entry                    external dcl 1-64
gtss_drl_kotnow_                000000 constant        entry                    external dcl 1-65
gtss_drl_kotnow_$gtss_drl_kout_ 000000 constant        entry                    external dcl 1-66
gtss_drl_koutn_                 000000 constant        entry                    external dcl 1-67
gtss_drl_morlnk_                000000 constant        entry                    external dcl 1-68
gtss_drl_msub_                  000000 constant        entry                    external dcl 1-69
gtss_drl_objtim_                000000 constant        entry                    external dcl 1-70
gtss_drl_part_                  000000 constant        entry                    external dcl 1-71
gtss_drl_pasaft_                000000 constant        entry                    external dcl 1-72
gtss_drl_pasdes_                000000 constant        entry                    external dcl 1-73
gtss_drl_pasust_                000000 constant        entry                    external dcl 1-74
gtss_drl_pdio_                  000000 constant        entry                    external dcl 1-75
gtss_drl_prgdes_                000000 constant        entry                    external dcl 1-76
gtss_drl_pseudo_                000000 constant        entry                    external dcl 1-77
gtss_drl_relmem_                000000 constant        entry                    external dcl 1-78
gtss_drl_restor_                000000 constant        entry                    external dcl 1-79
gtss_drl_retfil_                000000 constant        entry                    external dcl 1-80
gtss_drl_return_                000000 constant        entry                    external dcl 1-81
gtss_drl_rew_                   000000 constant        entry                    external dcl 1-82
gtss_drl_rstswh_                000000 constant        entry                    external dcl 1-83
gtss_drl_setlno_                000000 constant        entry                    external dcl 1-84
gtss_drl_setswh_                000000 constant        entry                    external dcl 1-85
gtss_drl_snumb_                 000000 constant        entry                    external dcl 1-86
gtss_drl_spawn_                 000000 constant        entry                    external dcl 1-87
gtss_drl_spawn_$gtss_drl_pasflr_
                                000000 constant        entry                    external dcl 1-88
gtss_drl_stoppt_                000000 constant        entry                    external dcl 1-89
gtss_drl_switch_                000000 constant        entry                    external dcl 1-90
gtss_drl_sysret_                000000 constant        entry                    external dcl 1-91
gtss_drl_t_cfio_                000000 constant        entry                    external dcl 1-92
gtss_drl_t_cmov_                000000 constant        entry                    external dcl 1-93
gtss_drl_t_err_                 000000 constant        entry                    external dcl 1-94
gtss_drl_t_goto_                000000 constant        entry                    external dcl 1-95
gtss_drl_t_linl_                000000 constant        entry                    external dcl 1-96
gtss_drl_t_rscc_                000000 constant        entry                    external dcl 1-97
gtss_drl_tapein_                000000 constant        entry                    external dcl 1-98
gtss_drl_task_                  000000 constant        entry                    external dcl 1-99
gtss_drl_termtp_                000000 constant        entry                    external dcl 1-100
gtss_drl_time_                  000000 constant        entry                    external dcl 1-101
gtss_drun_                      000000 constant        entry                    external dcl 1-102
gtss_dsd_lookup_                000000 constant        entry                    external dcl 1-103
gtss_dsd_process_               000000 constant        entry                    external dcl 1-104
gtss_edit_dsd_                  000000 constant        entry                    external dcl 1-105
gtss_expand_pathname_           000000 constant        entry                    external dcl 1-107
gtss_expand_pathname_$verify_umc
                                000000 constant        entry                    external dcl 1-108
gtss_ext_$CFP_bits                     external static structure                level 1 dcl 2-37
gtss_ext_$SYstarstar_file_no           external static fixed bin(24,0)          dcl 2-33
gtss_ext_$aem                          external static fixed bin(17,0)          dcl 2-8
gtss_ext_$aft                          external static structure                level 1 dcl 2-78
gtss_ext_$bad_drl_rtrn                 external static label variable           dcl 2-9
gtss_ext_$db                           external static bit(1)                   array unaligned dcl 2-10
gtss_ext_$deferred_catalogs_ptr        external static pointer                  dcl 2-11
gtss_ext_$dispose_of_drl               external static label variable           dcl 2-12
gtss_ext_$drl_rtrn                     external static label variable           array dcl 2-13
gtss_ext_$drm_path                     external static char(168)                unaligned dcl 2-14
gtss_ext_$fast_lib                     external static structure                level 1 dcl 2-98
gtss_ext_$finished                     external static label variable           dcl 2-17
gtss_ext_$gdb_name                     external static char(8)                  unaligned dcl 2-18
gtss_ext_$get_line                     external static entry variable           dcl 2-19
gtss_ext_$gtss_slave_area_seg          external static pointer                  array dcl 2-20
gtss_ext_$hcs_work_area_ptr            external static pointer                  dcl 2-21
gtss_ext_$last_k_was_out               external static bit(1)                   dcl 2-23
gtss_ext_$mcfc                         external static structure                level 1 dcl 2-109
gtss_ext_$pdir                         external static varying char(168)        dcl 2-24
gtss_ext_$popup_from_pi                external static label variable           dcl 2-25
gtss_ext_$ppt                          external static pointer                  dcl 2-94
gtss_ext_$process_type                 external static fixed bin(17,0)          dcl 2-26
gtss_ext_$restart_from_pi              external static label variable           dcl 2-28
gtss_ext_$sig_ptr                      external static pointer                  dcl 2-30
gtss_ext_$stack_level_                 external static fixed bin(17,0)          dcl 2-31
gtss_ext_$statistics                   external static structure                level 1 dcl 2-72
gtss_ext_$suspended_process            external static bit(1)                   unaligned dcl 2-32
gtss_ext_$user_id                      external static varying char(26)         dcl 2-34
gtss_ext_$work_area_ptr                external static pointer                  dcl 2-35
gtss_fault_processor_           000000 constant        entry                    external dcl 1-109
gtss_filact_error_status_       000000 constant        entry                    external dcl 1-112
gtss_filact_funct02_            000000 constant        entry                    external dcl 1-113
gtss_filact_funct03_            000000 constant        entry                    external dcl 1-114
gtss_filact_funct04_            000000 constant        entry                    external dcl 1-115
gtss_filact_funct05_            000000 constant        entry                    external dcl 1-116
gtss_filact_funct08_            000000 constant        entry                    external dcl 1-117
gtss_filact_funct10_            000000 constant        entry                    external dcl 1-118
gtss_filact_funct11_            000000 constant        entry                    external dcl 1-119
gtss_filact_funct14_            000000 constant        entry                    external dcl 1-120
gtss_filact_funct18_            000000 constant        entry                    external dcl 1-121
gtss_filact_funct19_            000000 constant        entry                    external dcl 1-122
gtss_filact_funct21_            000000 constant        entry                    external dcl 1-123
gtss_filact_funct22_            000000 constant        entry                    external dcl 1-124
gtss_find_cond_frame_           000000 constant        entry                    external dcl 1-110
gtss_interp_prim_               000000 constant        entry                    external dcl 1-126
gtss_interp_prim_$callss        000000 constant        entry                    external dcl 1-127
gtss_interp_prim_$sysret        000000 constant        entry                    external dcl 1-128
gtss_interp_prim_$t_goto        000000 constant        entry                    external dcl 1-129
gtss_ios_change_size_           000000 constant        entry                    external dcl 1-130
gtss_ios_close_                 000000 constant        entry                    external dcl 1-131
gtss_ios_exchange_names_        000000 constant        entry                    external dcl 1-132
gtss_ios_initialize_            000000 constant        entry                    external dcl 1-133
gtss_ios_io_                    000000 constant        entry                    external dcl 1-134
gtss_ios_open_                  000000 constant        entry                    external dcl 1-135
gtss_ios_position_              000000 constant        entry                    external dcl 1-136
gtss_mcfc_$close                000000 constant        entry                    external dcl 1-139
gtss_mcfc_$delete               000000 constant        entry                    external dcl 1-137
gtss_mcfc_$open                 000000 constant        entry                    external dcl 1-138
gtss_mcfc_empty                 000000 constant        entry                    external dcl 1-106
gtss_mcfc_init_                 000000 constant        entry                    external dcl 1-125
gtss_read_starCFP_              000000 constant        entry                    external dcl 1-140
gtss_read_starCFP_$last_os      000000 constant        entry                    external dcl 1-141
gtss_run_subsystem_             000000 constant        entry                    external dcl 1-142
gtss_run_subsystem_$finish      000000 constant        entry                    external dcl 1-143
gtss_run_subsystem_$restor      000000 constant        entry                    external dcl 1-144
gtss_run_subsystem_$restor_perm 000000 constant        entry                    external dcl 1-145
gtss_set_slave_                 000000 constant        entry                    external dcl 1-146
gtss_set_slave_$load_bar        000000 constant        entry                    external dcl 1-147
gtss_update_safe_store_         000000 constant        entry                    external dcl 1-148
gtss_verify_access_             000000 constant        entry                    external dcl 1-149
gtss_verify_access_$check_forced_access
                                000000 constant        entry                    external dcl 1-150
gtss_write_starCFP_             000000 constant        entry                    external dcl 1-151
star_ALL_ENTRIES                       internal static fixed bin(2,0)           initial dcl 6-111
star_ALL_ENTRIES_WITH_LINK_PATHS       internal static fixed bin(3,0)           initial dcl 6-114
star_DIRECTORY                         internal static fixed bin(2,0)           initial unsigned dcl 6-121
star_LINK                              internal static fixed bin(2,0)           initial unsigned dcl 6-119
star_LINKS_ONLY                        internal static fixed bin(2,0)           initial dcl 6-109
star_LINKS_ONLY_WITH_LINK_PATHS        internal static fixed bin(3,0)           initial dcl 6-112
star_SEGMENT                           internal static fixed bin(2,0)           initial unsigned dcl 6-120
star_branch_count                      automatic       fixed bin(17,0)          dcl 6-13
star_dir_list_branch                   based           structure                array level 1 dcl 6-59
star_link_count                        automatic       fixed bin(17,0)          dcl 6-17
star_link_pathname                     based           char                     unaligned dcl 6-102
star_links                             based           structure                array level 1 dcl 6-76
star_linkx                             automatic       fixed bin(17,0)          dcl 6-18
star_list_branch                       based           structure                array level 1 dcl 6-41
star_list_branch_ptr                   automatic       pointer                  dcl 6-16
star_list_names                        based           char(32)                 array unaligned dcl 6-92
star_list_names_ptr                    automatic       pointer                  dcl 6-20
star_select_sw                         automatic       fixed bin(3,0)           dcl 6-21
sum                                                    builtin function         dcl 330
time                                   automatic       fixed bin(71,0)          dcl 331

NAMES DECLARED BY EXPLICIT CONTEXT.
abs_init                        000366 constant        entry                    internal dcl 55 ref 40
gtss_drun_                      000274 constant        entry                    external dcl 15
inter_init                      001450 constant        entry                    internal dcl 144 ref 39
terminate                       002503 constant        entry                    internal dcl 259 ref 45

NAMES DECLARED BY CONTEXT OR IMPLICATION.
after                                                  builtin function         ref 117
empty                                                  builtin function         ref 325
null                                                   builtin function         ref 100 136 188 299 327
rtrim                                                  builtin function         ref 118 120 120 124 124 200 200
substr                                                 builtin function         ref 118 120 124

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      3430        3562    2752        3440
Length      4172    2752       132         373     455           2

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gtss_drun_                         7885 external procedure  is an external procedure.  
abs_init                                internal procedure  shares stack frame of external procedure gtss_drun_.  
inter_init                              internal procedure  shares stack frame of external procedure gtss_drun_.  
terminate                               internal procedure  shares stack frame of external procedure gtss_drun_.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 first_time_called           gtss_drun_
000011 second_time_called          gtss_drun_

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gtss_drun_               000100 bit_count                   gtss_drun_
                         000101 cat_entry                   gtss_drun_
                         000102 code                        gtss_drun_
                         000104 dc_ptr                      gtss_drun_
                         000106 dir_name                    gtss_drun_
                         000160 error_occured               gtss_drun_
                         000161 hdir                        gtss_drun_
                         000201 i                           gtss_drun_
                         000202 in_def_q                    gtss_drun_
                         000203 j                           gtss_drun_
                         000204 no_of_entries_found         gtss_drun_
                         000206 our_area                    gtss_drun_
                         012206 seg_ptr                     gtss_drun_
                         012210 string                      gtss_drun_
                         012311 type                        gtss_drun_
                         012312 dq_info                     gtss_drun_
                         016547 star_entry_count            gtss_drun_
                         016550 star_entry_ptr              gtss_drun_
                         016552 star_names_ptr              gtss_drun_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_cs            cat_realloc_cs      call_ext_out_desc   call_ext_out        return              signal
shorten_stack       ext_entry           set_cs_eis          empty               index_after_cs

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
check_star_name_$entry        com_err_                      convert_ipc_code_             delete_$path
delete_$ptr                   get_process_id_               get_wdir_                     gtss_CFP_output_
gtss_abs_$cpu_runout          gtss_abs_$dabt_check          gtss_abs_$get_drm             gtss_bcd_ascii_
gtss_dq_$catp                 gtss_dq_$entries_info         gtss_dq_$mod_js               gtss_dq_$open_exc
gtss_dq_$open_gen             gtss_fault_processor_$timer_runout                          hcs_$initiate_count
hcs_$make_seg                 hcs_$set_bc_seg               hcs_$star_                    hcs_$status_mins
ipc_$create_ev_chn            ipc_$delete_ev_chn            timer_manager_$cpu_call       timer_manager_$reset_cpu_call

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$namedup          error_table_$nomatch          error_table_$notalloc         gse_ext_$smc_pathname
gse_ext_$umc_name             gtss_ext_$com_reg             gtss_ext_$drun_jid            gtss_ext_$event_channel
gtss_ext_$flags               gtss_ext_$homedir             gtss_ext_$put_chars           gtss_ext_$restart_seg_ptr
gtss_ust_ext_$ust




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     15 000271       299 000301       325 000303       327 000306        36 000310        37 000313        38 000314
     39 000316        40 000323        41 000324        42 000325        43 000327        44 000330        45 000332
     46 000333        48 000334        50 000360        53 000365        55 000366        58 000367        59 000376
     60 000401        62 000426        63 000433        67 000434        69 000502        71 000522        73 000537
     74 000541        75 000553        76 000555        77 000564        79 000610        80 000615        82 000616
     83 000627        84 000644        85 000646        87 000675        88 000702        91 000703        92 000707
     96 000731        97 000735        98 000740        99 000761       100 000774       101 001000       103 001031
    104 001036       107 001037       108 001045       109 001050       110 001061       116 001064       117 001110
    118 001132       120 001162       124 001247       128 001326       129 001327       132 001360       134 001363
    136 001430       138 001435       139 001440       140 001442       142 001447       144 001450       164 001451
    165 001460       166 001463       168 001510       169 001515       171 001516       172 001535       176 001537
    177 001546       178 001551       180 001576       181 001603       183 001604       184 001613       185 001626
    188 001701       189 001706       190 001734       191 001736       193 001767       194 001774       196 001775
    197 002013       199 002014       200 002031       203 002114       205 002115       207 002117       208 002126
    209 002131       211 002156       212 002163       218 002164       219 002171       220 002205       222 002210
    224 002243       226 002244       230 002311       232 002315       234 002340       236 002341       238 002344
    239 002345       240 002355       242 002365       247 002422       248 002425       250 002427       251 002431
    255 002477       256 002500       257 002502       259 002503       262 002504       263 002517       264 002532
    268 002550       269 002554       270 002564       271 002613       272 002626       274 002636       275 002645
    276 002650       278 002675       279 002702       281 002703       282 002720       287 002745


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
