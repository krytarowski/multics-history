	COMPILATION LISTING OF SEGMENT cobol_repl3_expand
	Compiled by: Multics PL/I Compiler, Release 31b, of April 24, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 05/24/89  1015.4 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
       17*     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
       18*     MCR8060 cobol_repl3_expand.pl1 Reformatted code to new Cobol standard.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 /* Modified on 03/28/79 by FCH, [4.0-1], flag AND,OR as genereted code */
       23 /* Modified since Version 4.0 */
       24 
       25 /* format: style3 */
       26 cobol_repl3_expand:
       27      proc (cname_ptr, cvar_ptr, ss_stack_ptr, curr_line, curr_column);
       28 
       29 /*  This procedure is called by the replacement phase to expand a condition name to a
       30*conditional expression that references the conditional variable associated with the
       31*condition name.  When called, the reference to the condition name has been syntactically
       32*checked, and if any subscripts were present, they have also been syntactically checked
       33*and stored in a subscript stack.
       34**/
       35 
       36 
       37 /*  DECLARATION OF THE PARAMETERS  */
       38 
       39 dcl	cname_ptr		ptr;			/*  points to the condition name entry in the name table to be expanded  */
       40 
       41 dcl	cvar_ptr		ptr;			/*  points to the condition variable entry in the name table associated with the
       42*		condition name  */
       43 
       44 dcl	ss_stack_ptr	ptr;			/*  points to the subscript stack  */
       45 
       46 dcl	curr_line		fixed bin;		/*  contains the line on which the token being expanded occurs  */
       47 
       48 dcl	curr_column	fixed bin;		/*  contains the column in which the token being expanded starts  */
       49 
       50 /*  numeric initial value extension  */
       51 
       52 dcl	extension_ptr	ptr;
       53 
       54 dcl	1 no_in		based (extension_ptr),
       55 	  2 inittype	bit (8),
       56 	  2 info		bit (8),
       57 	  2 sign		char (1),
       58 	  2 exp_sign	char (1),
       59 	  2 exp_places	fixed bin,
       60 	  2 places_left	fixed bin,
       61 	  2 places_right	fixed bin,
       62 	  2 places	fixed bin,
       63 	  2 literal	char (30);
       64 
       65 
       66 
       67 
       68 /*  NUMERIC LITERAL TOKEN IMAGE  */
       69 
       70 dcl	1 numeric_lit	based (cbuff_ptr),
       71 	  2 size		fixed bin,
       72 	  2 line		fixed bin,
       73 	  2 column	fixed bin,
       74 	  2 type		fixed bin,
       75 	  2 info		bit (8),
       76 	  2 sign		char (1),
       77 	  2 exp_sign	char (1),
       78 	  2 exp_places	fixed bin,
       79 	  2 places_left	fixed bin,
       80 	  2 places_right	fixed bin,
       81 	  2 places	fixed bin,
       82 	  2 literal	char (30);
       83 
       84 
       85 /*  ALPHANUMERIC LITERAL TOKEN IMAGE  */
       86 
       87 dcl	1 alphanum_lit	based (cbuff_ptr),
       88 	  2 size		fixed bin,
       89 	  2 line		fixed bin,
       90 	  2 column	fixed bin,
       91 	  2 type		fixed bin,
       92 	  2 info		bit (8),
       93 	  2 length	fixed bin,
       94 	  2 string	char (256);
       95 
       96 
       97 /*  RESERVED WORD TOKEN IMAGE  */
       98 
       99 dcl	1 reserved_word	based (cbuff_ptr),
      100 	  2 size		fixed bin,
      101 	  2 line		fixed bin,
      102 	  2 column	fixed bin,
      103 	  2 type		fixed bin,
      104 	  2 key		fixed bin,
      105 	  2 class		bit (26),
      106 	  2 jump_index	fixed bin;
      107 
      108 
      109 /*  alphanumeric initial value extension  */
      110 
      111 dcl	1 al_in		based (extension_ptr),
      112 	  2 inittype	bit (8),
      113 	  2 info		bit (8),
      114 	  2 length	fixed bin,
      115 	  2 string	char (256);
      116 
      117 /*  Common work buffer in which output records are built  */
      118 
      119 dcl	cbuff		char (100);
      120 dcl	cbuff_ptr		ptr;
      121 dcl	cbuff_size	fixed bin;
      122 
      123 
      124 
      125 /*  initial condition name  */
      126 
      127 dcl	1 c_n		based (cname_ptr),
      128 	  2 size		fixed bin,
      129 	  2 line		fixed bin,
      130 	  2 column	fixed bin,
      131 	  2 type		fixed bin,
      132 	  2 string_ptr	ptr,
      133 	  2 prev_rec	ptr,
      134 	  2 info		bit (8),
      135 	  2 def_line	fixed bin,
      136 	  2 level		fixed bin,
      137 	  2 num_lits	fixed bin,
      138 	  2 name_size	fixed bin,
      139 	  2 name		char (30);
      140 
      141 /*  relational reserved word structure  */
      142 
      143 /*  USED TO CREATE THE FOLLOWING RESERVED WORDS:  EQUAL, LESS, GREATER  */
      144 
      145 dcl	1 relational_res_word
      146 			int static,
      147 	  2 size		fixed bin init (0),
      148 	  2 line		fixed bin init (0),
      149 	  2 column	fixed bin init (0),
      150 	  2 type		fixed bin init (1),
      151 	  2 key		fixed bin init (0),
      152 	  2 class1	bit (8) init ("00000100"b),
      153 	  2 class2	bit (8) init ("0"b),
      154 	  2 class3	bit (4) init ("0001"b),
      155 	  2 class4	bit (4) init ("0"b),
      156 	  2 jump_index	fixed bin init (0);
      157 
      158 
      159 /*  logical reserved word structure  */
      160 
      161 /*  USED TO CREATE THE FOLLOWING RESERVED WORD TOKENS:  AND, OR, NOT  */
      162 
      163 dcl	1 logical_res_word	int static,
      164 	  2 size		fixed bin init (0),
      165 	  2 line		fixed bin init (0),
      166 	  2 column	fixed bin init (0),
      167 	  2 type		fixed bin init (1),
      168 	  2 key		fixed bin init (0),
      169 	  2 class1	bit (16) init ("000000001"b), /*[4.0-1]*/
      170 	  2 class2	bit (4) init ("0001"b),
      171 	  2 class3	bit (4) init ("0"b),
      172 	  2 jump_index	fixed bin init (0);
      173 
      174 
      175 
      176 /*  INTERNAL VARIABLES  */
      177 
      178 dcl	exp_counter	fixed bin;
      179 dcl	template1		char (500) based (cname_ptr);
      180 dcl	template2		(500) char (1) based (cname_ptr);
      181 
      182 dcl	lrw_ptr		ptr;			/*  logical reserved word pointer  */
      183 dcl	rrw_ptr		ptr;			/*  relational reserved word pointer  */
      184 dcl	nlit_ptr		ptr;			/*   numericeric literal pointer  */
      185 
      186 dcl	s		fixed bin;
      187 dcl	y		fixed bin;
      188 dcl	t1		fixed bin;
      189 
      190 dcl	save_line		fixed bin;
      191 dcl	save_column	fixed bin;
      192 
      193 
      194 dcl	i		fixed bin;
      195 dcl	ss_ptrtable	(1:50) ptr based (tptr1);
      196 dcl	tptr1		ptr;
      197 dcl	tptr2		ptr;
      198 dcl	1 header		based (tptr2),
      199 	  2 size		fixed bin,
      200 	  2 line		fixed bin,
      201 	  2 column	fixed bin,
      202 	  2 type		fixed bin;
      203 
      204 dcl	1 ss_stack	based (ss_stack_ptr),
      205 	  2 no_entries	fixed bin,
      206 	  2 dummy_ptr	ptr,
      207 	  2 stack		char (500);
      208 
      209 dcl	addr		builtin;
      210 dcl	fixed		builtin;
      211 dcl	mod		builtin;
      212 dcl	substr		builtin;
      213 
      214 dcl	1 switch_type9	static,
      215 	  2 header,
      216 	    3 length	fixed bin init (112),
      217 	    3 line	fixed bin,
      218 	    3 column	fixed bin,
      219 	    3 type	fixed bin init (9),
      220 	  2 repl_ptr	(2) ptr init ((2) null ()),
      221 	  2 fill1		bit (108) init (""b),
      222 	  2 file_key_info,
      223 	    3 fb1		(3) fixed bin init (0, 0, 0),
      224 	    3 size	fixed bin init (4),
      225 	    3 fb2		(2) fixed bin init (0, 0),
      226 	    3 flags1	bit (36) init ("010000100100000000010000000100000000"b),
      227 	    3 flags2	bit (36) init (""b),
      228 	    3 seg		fixed bin init (-10),	/* cobol_fixed_static.controlp */
      229 	    3 off		fixed bin,		/* offset from cobol_control_seg_|0 */
      230 	  2 fill2		(7) fixed bin init (0, 0, 0, 0, 0, 0, 0);
      231 
      232 
      233 unload_ss:
      234      proc;
      235 
      236 	tptr1 = ss_stack.dummy_ptr;
      237 
      238 	do i = 1 to ss_stack.no_entries;		/*  unload the subscript stack  */
      239 	     tptr2 = ss_ptrtable (i);
      240 	     call cobol_swf_put (cobol_ext_$cobol_curr_out, status, tptr2, header.size);
      241 	end;					/*  unload the subscript stack  */
      242 
      243      end unload_ss;
      244 
      245 
      246 
      247 load_nlit:
      248      proc;
      249 
      250 
      251 	numeric_lit.size = numeric_literal_size + no_in.places;
      252 
      253 	numeric_lit.line = curr_line;
      254 	numeric_lit.column = curr_column;
      255 	numeric_lit.type = 2;
      256 	numeric_lit.info = "0"b;
      257 	numeric_lit.sign = no_in.sign;
      258 	numeric_lit.exp_sign = no_in.exp_sign;
      259 	numeric_lit.exp_places = no_in.exp_places;
      260 	numeric_lit.places_left = no_in.places_left;
      261 	numeric_lit.places_right = no_in.places_right;
      262 	numeric_lit.places = no_in.places;
      263 	substr (numeric_lit.literal, 1, no_in.places) = substr (no_in.literal, 1, no_in.places);
      264 
      265 
      266 	t1 = numeric_extension_size + no_in.places;
      267 	y = mod (t1, 4);
      268 	if y ^= 0
      269 	then y = 4 - y;
      270 	s = s + t1 + y;
      271 
      272 	cbuff_size = numeric_lit.size;
      273 
      274      end load_nlit;
      275 
      276 
      277 load_alit:
      278      proc;
      279 
      280 
      281 	alphanum_lit.size = alphanumeric_literal_size + al_in.length;
      282 
      283 
      284 	alphanum_lit.line = curr_line;
      285 	alphanum_lit.column = curr_column;
      286 	alphanum_lit.type = 3;
      287 	alphanum_lit.info = "0"b;
      288 	alphanum_lit.length = al_in.length;
      289 	substr (alphanum_lit.string, 1, al_in.length) = substr (al_in.string, 1, al_in.length);
      290 
      291 
      292 
      293 	t1 = alpha_extension_size + al_in.length;
      294 	y = mod (t1, 4);
      295 	if y ^= 0
      296 	then y = 4 - y;
      297 	s = s + t1 + y;
      298 
      299 	cbuff_size = alphanum_lit.size;
      300 
      301      end load_alit;
      302 
      303 
      304 load_resword:
      305      proc;
      306 
      307 dcl	keytab		(1:7) fixed bin int static init (180,
      308 						/*  ZERO  */
      309 			192,			/*  SPACE  */
      310 			256,			/*  UPPER-BOUND  */
      311 			566,			/*  LOWER-BOUND  */
      312 			221,			/*  HIGH-VALUE  */
      313 			229,			/*  LOW-VALUE  */
      314 			235 /*  QUOTE  */);
      315 
      316 
      317 	reserved_word.size = reserved_word_size;
      318 
      319 	reserved_word.line = curr_line;
      320 	reserved_word.column = curr_column;
      321 	reserved_word.type = 1;
      322 	reserved_word.class = "001"b;			/*  set "figurative constant" bit  */
      323 	reserved_word.key = keytab (fixed (substr (al_in.info, 6, 3), 3));
      324 	reserved_word.jump_index = 0;
      325 
      326 
      327 	t1 = alpha_extension_size;
      328 
      329 	y = mod (t1, 4);
      330 	if y ^= 0
      331 	then y = 4 - y;
      332 	s = s + t1 + y;
      333 
      334 	cbuff_size = reserved_word.size;
      335 
      336      end load_resword;
      337 
      338 
      339 load_all_lit:
      340      proc;
      341 
      342 
      343 	alphanum_lit.size = alphanumeric_literal_size + al_in.length;
      344 
      345 	alphanum_lit.line = curr_line;
      346 	alphanum_lit.column = curr_column;
      347 	alphanum_lit.type = 3;
      348 	alphanum_lit.info = "01"b;			/*  set "preceded by ALL" bit  */
      349 	alphanum_lit.length = al_in.length;
      350 	substr (alphanum_lit.string, 1, al_in.length) = substr (al_in.string, 1, al_in.length);
      351 
      352 
      353 	t1 = alpha_extension_size + al_in.length;
      354 	y = mod (t1, 4);
      355 	if y ^= 0
      356 	then y = 4 - y;
      357 	s = s + t1 + y;
      358 
      359 	cbuff_size = alphanum_lit.size;
      360 
      361      end load_all_lit;
      362 
      363 
      364 
      365 
      366 
      367 expand:
      368 	exp_counter = 0;
      369 	cbuff_ptr = addr (cbuff);
      370 
      371 	lrw_ptr = addr (logical_res_word);
      372 	rrw_ptr = addr (relational_res_word);
      373 
      374 	logical_res_word.size = reserved_word_size;
      375 	relational_res_word.size = reserved_word_size;
      376 
      377 	if cname_ptr -> mnemonic_name.type = 17
      378 	then do;					/*-07/01/76-*/
      379 		switch_type9.line = curr_line;
      380 		switch_type9.column = curr_column;
      381 		switch_type9.off = 4 * (cname_ptr -> mnemonic_name.iw_key - 1);
      382 						/* seg4|4*switchno */
      383 		call cobol_swf_put (cobol_ext_$cobol_curr_out, status, addr (switch_type9),
      384 		     switch_type9.header.length);
      385 
      386 		logical_res_word.line, relational_res_word.line = curr_line;
      387 		logical_res_word.column, relational_res_word.column = curr_column;
      388 		if ^cname_ptr -> mnemonic_name.off_status
      389 		then do;
      390 			logical_res_word.key = reswd_NOT;
      391 			call cobol_swf_put (cobol_ext_$cobol_curr_out, status, lrw_ptr, logical_res_word.size);
      392 		     end;
      393 		relational_res_word.key = reswd_EQUAL;
      394 		call cobol_swf_put (cobol_ext_$cobol_curr_out, status, rrw_ptr, relational_res_word.size);
      395 
      396 		cbuff_size, alphanum_lit.size = alphanumeric_literal_size + 4;
      397 		alphanum_lit.line = curr_line;
      398 		alphanum_lit.column = curr_column;
      399 		alphanum_lit.type = 3;
      400 		alphanum_lit.info = ""b;
      401 		alphanum_lit.length = 4;
      402 		substr (alphanum_lit.string, 1, 4) = "    ";
      403 		call cobol_swf_put (cobol_ext_$cobol_curr_out, status, cbuff_ptr, cbuff_size);
      404 
      405 		return;
      406 
      407 	     end;
      408 
      409 
      410 /*  calculate the character offset of the 1st numeric extension in the condition name entry  */
      411 
      412 
      413 	t1 = numeric_extension_offset + c_n.name_size;
      414 
      415 	y = mod (t1, 4);
      416 	if y ^= 0
      417 	then y = 4 - y;
      418 	s = t1 + y + 1;
      419 
      420 exp_loop:
      421 	if exp_counter = c_n.num_lits
      422 	then goto expand_cleanup;
      423 
      424 	extension_ptr = addr (template2 (s));
      425 
      426 	if exp_counter ^= 0
      427 	then do;					/*  write  out the reserved word "OR"  */
      428 		logical_res_word.line = curr_line;
      429 		logical_res_word.column = curr_column;
      430 		logical_res_word.key = 135;		/*  OR  */
      431 
      432 		call cobol_swf_put (cobol_ext_$cobol_curr_out, status, lrw_ptr, logical_res_word.size);
      433 
      434 	     end;					/*  write out the reserved word"OR"  */
      435 
      436 /*  write out the name table entry for the conditional variable  */
      437 
      438 	dn_ptr = cvar_ptr;
      439 
      440 /*  save the line and column info from the name table entry  */
      441 
      442 	save_line = data_name.line;
      443 	save_column = data_name.column;
      444 	data_name.column = curr_column;
      445 	data_name.line = curr_line;
      446 
      447 
      448 	call cobol_swf_put (cobol_ext_$cobol_curr_out, status, dn_ptr, data_name.size);
      449 
      450 	if ss_stack.no_entries ^= 0
      451 	then call unload_ss;			/*  unload the subscript stack  */
      452 
      453 	if substr (no_in.inittype, 6, 2) = "00"b
      454 	then do;					/*  This literal not associated with a "THRU"  clause  */
      455 
      456 /*  write out the reserved word token "EQUAL"  */
      457 
      458 		relational_res_word.line = curr_line;
      459 		relational_res_word.column = curr_column;
      460 		relational_res_word.key = 102;	/*  EQUAL  */
      461 
      462 		call cobol_swf_put (cobol_ext_$cobol_curr_out, status, rrw_ptr, relational_res_word.size);
      463 
      464 /*  write out the literal value  */
      465 
      466 
      467 		if substr (no_in.inittype, 1, 1)	/*  numeric literal extension  */
      468 		then call load_nlit;
      469 
      470 		else if substr (no_in.inittype, 2, 1) & ^substr (no_in.inittype, 4, 1)
      471 						/*  alphanumeric literal extension  */
      472 		then call load_alit;
      473 
      474 		else if substr (no_in.inittype, 3, 1)	/*  figurative constant extension  */
      475 		then call load_resword;
      476 
      477 		else call load_all_lit;		/*  assume an "ALL" literal  */
      478 
      479 /*  write out the record just built in the common buffer  */
      480 
      481 		call cobol_swf_put (cobol_ext_$cobol_curr_out, status, cbuff_ptr, cbuff_size);
      482 
      483 		exp_counter = exp_counter + 1;
      484 
      485 
      486 		goto exp_loop;
      487 
      488 	     end;					/*  This literal not associated with a "THRU" clause  */
      489 
      490 	else do;					/*  Must be associated with a "THRU" clause  */
      491 
      492 /*  write out "NOT LESS"  (2 tokens)  */
      493 
      494 		logical_res_word.line = curr_line;
      495 		logical_res_word.column = curr_column;
      496 		logical_res_word.key = 130;		/*  NOT  */
      497 
      498 		call cobol_swf_put (cobol_ext_$cobol_curr_out, status, lrw_ptr, logical_res_word.size);
      499 
      500 		relational_res_word.line = curr_line;
      501 		relational_res_word.column = curr_column;
      502 		relational_res_word.key = 123;	/*  LESS  */
      503 
      504 		call cobol_swf_put (cobol_ext_$cobol_curr_out, status, rrw_ptr, relational_res_word.size);
      505 
      506 /*  write out the literal value  */
      507 
      508 
      509 		if substr (no_in.inittype, 1, 1)	/*  numeric literal extension  */
      510 		then call load_nlit;
      511 
      512 		else if substr (no_in.inittype, 2, 1) & ^substr (no_in.inittype, 4, 1)
      513 						/*  alphanumeric literal extension  */
      514 		then call load_alit;
      515 
      516 		else if substr (no_in.inittype, 3, 1)	/*  figurative constant extension  */
      517 		then call load_resword;
      518 
      519 		else call load_all_lit;		/*  assume an "ALL" literal  */
      520 
      521 /*  write out the record just built in the common buffer  */
      522 
      523 		call cobol_swf_put (cobol_ext_$cobol_curr_out, status, cbuff_ptr, cbuff_size);
      524 
      525 
      526 
      527 		extension_ptr = addr (template2 (s));
      528 
      529 /*  write out "AND"  */
      530 
      531 		logical_res_word.key = 77;		/*  AND  */
      532 
      533 		call cobol_swf_put (cobol_ext_$cobol_curr_out, status, lrw_ptr, logical_res_word.size);
      534 
      535 /*  write out the name table entry for the conditional variable  */
      536 
      537 		dn_ptr = cvar_ptr;
      538 		call cobol_swf_put (cobol_ext_$cobol_curr_out, status, dn_ptr, data_name.size);
      539 
      540 		if ss_stack.no_entries ^= 0
      541 		then call unload_ss;		/*  unload the subscript stack  */
      542 
      543 /*  Write out  "NOT GREATER"  (2 tokens)  */
      544 
      545 		logical_res_word.key = 130;		/*  NOT  */
      546 
      547 		call cobol_swf_put (cobol_ext_$cobol_curr_out, status, lrw_ptr, logical_res_word.size);
      548 
      549 		relational_res_word.key = 113;	/*  GREATER  */
      550 
      551 		call cobol_swf_put (cobol_ext_$cobol_curr_out, status, rrw_ptr, relational_res_word.size);
      552 
      553 /*  Write out the literal  */
      554 
      555 
      556 		if substr (no_in.inittype, 1, 1)	/*  numeric literal extension  */
      557 		then call load_nlit;
      558 
      559 		else if substr (no_in.inittype, 2, 1) & ^substr (no_in.inittype, 4, 1)
      560 						/*  alphanumeric literal extension  */
      561 		then call load_alit;
      562 
      563 		else if substr (no_in.inittype, 3, 1)	/*  figurative constant extension  */
      564 		then call load_resword;
      565 
      566 		else call load_all_lit;		/*  assume an "ALL" literal  */
      567 
      568 /*  write out the record just built in the common buffer  */
      569 
      570 		call cobol_swf_put (cobol_ext_$cobol_curr_out, status, cbuff_ptr, cbuff_size);
      571 
      572 /*  increment literal processed counter  */
      573 
      574 		exp_counter = exp_counter + 2;
      575 
      576 		goto exp_loop;
      577 
      578 	     end;					/*  must be associated with a "THRU" clause  */
      579 
      580 expand_cleanup:					/*  restore the line and column info to the name table entry  */
      581 	if c_n.num_lits > 0
      582 	then do;					/* otherwise dn_ptr won't be set */
      583 		data_name.line = save_line;
      584 		data_name.column = save_column;
      585 	     end;
      586 exit:
      587 	return;
      588 
      589 
      590 /* INCLUDE FILES */
      591 dcl	dn_ptr		ptr;
  1     1 
  1     2 /* BEGIN INCLUDE FILE ... cobol_type9.incl.pl1 */
  1     3 /* Last modified on 11/19/76 by ORN */
  1     4 
  1     5 /*
  1     6*A type 9 data name token is entered into the name table by the data
  1     7*division syntax phase for each data name described in the data division.
  1     8*The replacement phase subsequently replaces type 8 user word references
  1     9*to data names in the procedure division minpral file with the corresponding
  1    10*type 9 tokens from the name table.
  1    11**/
  1    12 
  1    13 /* dcl dn_ptr ptr; */
  1    14 
  1    15 /* BEGIN DECLARATION OF TYPE9 (DATA NAME) TOKEN */
  1    16 dcl 1 data_name based (dn_ptr),
  2     1 
  2     2 /* begin include file ... cobol_TYPE9.incl.pl1 */
  2     3 /* Last modified on 06/19/77 by ORN */
  2     4 /* Last modified on 12/28/76 by FCH */
  2     5 
  2     6 		/* header */
  2     7 		2 size fixed bin,
  2     8 		2 line fixed bin,
  2     9 		2 column fixed bin,
  2    10 		2 type fixed bin,
  2    11 		/* body */
  2    12 		2 string_ptr ptr,
  2    13 		2 prev_rec ptr,
  2    14 		2 searched bit (1),
  2    15 		2 duplicate bit (1),
  2    16 		2 saved bit (1),
  2    17 		2 debug_ind bit (1),
  2    18 		2 filler2 bit (3),
  2    19 		2 used_as_sub bit (1),
  2    20 		2 def_line fixed bin,
  2    21 		2 level fixed bin,
  2    22 		2 linkage fixed bin,
  2    23 		2 file_num fixed bin,
  2    24 		2 size_rtn fixed bin,
  2    25 		2 item_length fixed bin(24),
  2    26 		2 places_left fixed bin,
  2    27 		2 places_right fixed bin,
  2    28 		/* description */
  2    29 		2 file_section bit (1),
  2    30 		2 working_storage bit (1),
  2    31 		2 constant_section bit (1),
  2    32 		2 linkage_section bit (1),
  2    33 		2 communication_section bit (1),
  2    34 		2 report_section bit (1),
  2    35 		2 level_77 bit (1),
  2    36 		2 level_01 bit (1),
  2    37 		2 non_elementary bit (1),
  2    38 		2 elementary bit (1),
  2    39 		2 filler_item bit (1),
  2    40 		2 s_of_rdf bit (1),
  2    41 		2 o_of_rdf bit (1),
  2    42 		2 bin_18 bit (1),
  2    43 		2 bin_36 bit (1),
  2    44 		2 pic_has_l bit (1),
  2    45 		2 pic_is_do bit (1),
  2    46 		2 numeric bit (1),
  2    47 		2 numeric_edited bit (1),
  2    48 		2 alphanum bit (1),
  2    49 		2 alphanum_edited bit (1),
  2    50 		2 alphabetic bit (1),
  2    51 		2 alphabetic_edited bit (1),
  2    52 		2 pic_has_p bit (1),
  2    53 		2 pic_has_ast bit (1),
  2    54 		2 item_signed bit(1),
  2    55 		2 sign_separate bit (1),
  2    56 		2 display bit (1),
  2    57 		2 comp bit (1),
  2    58 		2 ascii_packed_dec_h bit (1),	/* as of 8/16/76  this field used for comp8. */
  2    59 		2 ascii_packed_dec bit (1),
  2    60 		2 ebcdic_packed_dec bit (1),
  2    61 		2 bin_16 bit (1),
  2    62 		2 bin_32 bit (1),
  2    63 		2 usage_index bit (1),
  2    64 		2 just_right bit (1),
  2    65 		2 compare_argument bit (1),
  2    66 		2 sync bit (1),
  2    67 		2 temporary bit (1),
  2    68 		2 bwz bit (1),
  2    69 		2 variable_length bit (1),
  2    70 		2 subscripted bit (1),
  2    71 		2 occurs_do bit (1),
  2    72 		2 key_a bit (1),
  2    73 		2 key_d bit (1),
  2    74 		2 indexed_by bit (1),
  2    75 		2 value_numeric bit (1),
  2    76 		2 value_non_numeric bit (1),
  2    77 		2 value_signed bit (1),
  2    78 		2 sign_type bit (3),
  2    79 		2 pic_integer bit (1),
  2    80 		2 ast_when_zero bit (1),
  2    81 		2 label_record bit (1),
  2    82 		2 sign_clause_occurred bit (1),
  2    83 		2 okey_dn bit (1),
  2    84 		2 subject_of_keyis bit (1),
  2    85 		2 exp_redefining bit (1),
  2    86 		2 sync_in_rec bit (1),
  2    87 		2 rounded bit (1),
  2    88 		2 ad_bit bit (1),
  2    89 		2 debug_all bit (1),
  2    90 		2 overlap bit (1),
  2    91 		2 sum_counter bit (1),
  2    92 		2 exp_occurs bit (1),
  2    93 		2 linage_counter bit (1),
  2    94 		2 rnm_01 bit (1),
  2    95 		2 aligned bit (1),
  2    96 		2 not_user_writable bit (1),
  2    97 		2 database_key bit (1),
  2    98 		2 database_data_item bit (1),
  2    99 		2 seg_num fixed bin,
  2   100 		2 offset fixed bin(24),
  2   101 		2 initial_ptr fixed bin,
  2   102 		2 edit_ptr fixed bin,
  2   103 		2 occurs_ptr fixed bin,
  2   104 		2 do_rec char(5),
  2   105 		2 bitt bit (1),
  2   106 		2 byte bit (1),
  2   107 		2 half_word bit (1),
  2   108 		2 word bit (1),
  2   109 		2 double_word bit (1),
  2   110 		2 half_byte bit (1),
  2   111 		2 filler5 bit (1),
  2   112 		2 bit_offset bit (4),
  2   113 		2 son_cnt bit (16),
  2   114 		2 max_red_size fixed bin(24),
  2   115 		2 name_size fixed bin,
  2   116 		2 name char(0 refer(data_name.name_size));	
  2   117 
  2   118 
  2   119 
  2   120 /* end include file ... cobol_TYPE9.incl.pl1 */
  2   121 
  1    17 
  1    18 /* END DECLARATION OF TYPE9 (DATA NAME) TOKEN */
  1    19 
  1    20 /* END INCLUDE FILE ... cobol_type9.incl.pl1 */
  1    21 
      592 
  3     1 
  3     2 /* BEGIN INCLUDE FILE ... cobol_ext_.incl.pl1 */
  3     3 /* Last modified on 06/17/76 by ORN */
  3     4 /* Last modified on 12/28/76 by FCH */
  3     5 /* Last modified on 12/01/80 by FCH */
  3     6 
  3     7 /*    <<<   SHARED EXTERNALS INCLUDE FILE   >>>    */
  3     8 
  3     9 
  3    10 dcl     cobol_ext_$cobol_afp ptr ext;
  3    11 dcl     cobol_afp ptr defined (  cobol_ext_$cobol_afp);
  3    12 dcl     cobol_ext_$cobol_analin_fileno ptr ext;
  3    13 dcl     cobol_analin_fileno ptr defined (  cobol_ext_$cobol_analin_fileno);
  3    14 dcl     cobol_ext_$report_first_token ptr ext;
  3    15 dcl     report_first_token ptr defined( cobol_ext_$report_first_token);
  3    16 dcl     cobol_ext_$report_last_token ptr ext;
  3    17 dcl     report_last_token ptr defined ( cobol_ext_$report_last_token);
  3    18 dcl     cobol_ext_$cobol_eltp ptr ext;
  3    19 dcl     cobol_eltp ptr defined (  cobol_ext_$cobol_eltp);
  3    20 dcl     cobol_ext_$cobol_cmfp ptr ext;
  3    21 dcl     cobol_cmfp ptr defined (  cobol_ext_$cobol_cmfp);
  3    22 dcl     cobol_ext_$cobol_com_fileno ptr ext;
  3    23 dcl     cobol_com_fileno ptr defined (  cobol_ext_$cobol_com_fileno);
  3    24 dcl     cobol_ext_$cobol_com_ptr ptr ext;
  3    25 dcl     cobol_com_ptr ptr defined (  cobol_ext_$cobol_com_ptr);
  3    26 dcl     cobol_ext_$cobol_dfp ptr ext;
  3    27 dcl     cobol_dfp ptr defined (  cobol_ext_$cobol_dfp);
  3    28 dcl     cobol_ext_$cobol_hfp ptr ext;
  3    29 dcl     cobol_hfp ptr defined (  cobol_ext_$cobol_hfp);
  3    30 dcl     cobol_ext_$cobol_m1fp ptr ext;
  3    31 dcl     cobol_m1fp ptr defined (  cobol_ext_$cobol_m1fp);
  3    32 dcl     cobol_ext_$cobol_m2fp ptr ext;
  3    33 dcl     cobol_m2fp ptr defined (  cobol_ext_$cobol_m2fp);
  3    34 dcl     cobol_ext_$cobol_min1_fileno ptr ext;
  3    35 dcl     cobol_min1_fileno ptr defined (  cobol_ext_$cobol_min1_fileno);
  3    36 dcl     cobol_ext_$cobol_min2_fileno_ptr ptr ext;
  3    37 dcl     cobol_min2_fileno_ptr ptr defined (  cobol_ext_$cobol_min2_fileno_ptr);
  3    38 dcl     cobol_ext_$cobol_name_fileno ptr ext;
  3    39 dcl     cobol_name_fileno ptr defined (  cobol_ext_$cobol_name_fileno);
  3    40 dcl     cobol_ext_$cobol_name_fileno_ptr ptr ext;
  3    41 dcl     cobol_name_fileno_ptr ptr defined (  cobol_ext_$cobol_name_fileno_ptr);
  3    42 dcl     cobol_ext_$cobol_ntfp ptr ext;
  3    43 dcl     cobol_ntfp ptr defined (  cobol_ext_$cobol_ntfp);
  3    44 dcl     cobol_ext_$cobol_pdofp ptr ext;
  3    45 dcl     cobol_pdofp ptr defined (  cobol_ext_$cobol_pdofp);
  3    46 dcl     cobol_ext_$cobol_pfp ptr ext;
  3    47 dcl     cobol_pfp ptr defined (  cobol_ext_$cobol_pfp);
  3    48 dcl     cobol_ext_$cobol_rm2fp ptr ext;
  3    49 dcl     cobol_rm2fp ptr defined (  cobol_ext_$cobol_rm2fp);
  3    50 dcl     cobol_ext_$cobol_rmin2fp ptr ext;
  3    51 dcl     cobol_rmin2fp ptr defined (  cobol_ext_$cobol_rmin2fp);
  3    52 dcl     cobol_ext_$cobol_curr_in ptr ext;
  3    53 dcl     cobol_curr_in ptr defined (  cobol_ext_$cobol_curr_in);
  3    54 dcl     cobol_ext_$cobol_curr_out ptr ext;
  3    55 dcl     cobol_curr_out ptr defined (  cobol_ext_$cobol_curr_out);
  3    56 dcl     cobol_ext_$cobol_sfp ptr ext;
  3    57 dcl     cobol_sfp ptr defined (  cobol_ext_$cobol_sfp);
  3    58 dcl     cobol_ext_$cobol_w1p ptr ext;
  3    59 dcl     cobol_w1p ptr defined (  cobol_ext_$cobol_w1p);
  3    60 dcl     cobol_ext_$cobol_w2p ptr ext;
  3    61 dcl     cobol_w2p ptr defined (  cobol_ext_$cobol_w2p);
  3    62 dcl     cobol_ext_$cobol_w3p ptr ext;
  3    63 dcl     cobol_w3p ptr defined (  cobol_ext_$cobol_w3p);
  3    64 dcl     cobol_ext_$cobol_w5p ptr ext;
  3    65 dcl     cobol_w5p ptr defined (  cobol_ext_$cobol_w5p);
  3    66 dcl     cobol_ext_$cobol_w6p ptr ext;
  3    67 dcl     cobol_w6p ptr defined (  cobol_ext_$cobol_w6p);
  3    68 dcl     cobol_ext_$cobol_w7p ptr ext;
  3    69 dcl     cobol_w7p ptr defined (  cobol_ext_$cobol_w7p);
  3    70 dcl     cobol_ext_$cobol_x3fp ptr ext;
  3    71 dcl     cobol_x3fp ptr defined (  cobol_ext_$cobol_x3fp);
  3    72 dcl	cobol_ext_$cobol_rwdd ptr ext;
  3    73 dcl	cobol_rwdd ptr defined(cobol_ext_$cobol_rwdd);
  3    74 dcl	cobol_ext_$cobol_rwpd ptr ext;
  3    75 dcl	cobol_rwpd ptr defined(cobol_ext_$cobol_rwpd);
  3    76 
  3    77 
  3    78 dcl     cobol_ext_$cobol_fileno1 fixed bin(24)ext;
  3    79 dcl     cobol_fileno1 fixed bin(24)defined (  cobol_ext_$cobol_fileno1);				
  3    80 dcl     cobol_ext_$cobol_options_len fixed bin(24)ext;
  3    81 dcl     cobol_options_len fixed bin(24)defined (  cobol_ext_$cobol_options_len);
  3    82 dcl     cobol_ext_$cobol_pdout_fileno fixed bin(24)ext;
  3    83 dcl     cobol_pdout_fileno fixed bin(24)defined (  cobol_ext_$cobol_pdout_fileno);			
  3    84 dcl     cobol_ext_$cobol_print_fileno fixed bin(24)ext;
  3    85 dcl     cobol_print_fileno fixed bin(24)defined (  cobol_ext_$cobol_print_fileno);			
  3    86 dcl     cobol_ext_$cobol_rmin2_fileno fixed bin(24)ext;
  3    87 dcl     cobol_rmin2_fileno fixed bin(24)defined (  cobol_ext_$cobol_rmin2_fileno);
  3    88 dcl     cobol_ext_$cobol_x1_fileno fixed bin(24)ext;
  3    89 dcl     cobol_x1_fileno fixed bin(24)defined (  cobol_ext_$cobol_x1_fileno);				
  3    90 dcl     cobol_ext_$cobol_x2_fileno fixed bin(24)ext;
  3    91 dcl     cobol_x2_fileno fixed bin(24)defined (  cobol_ext_$cobol_x2_fileno);
  3    92 dcl     cobol_ext_$cobol_x3_fileno fixed bin(24)ext;
  3    93 dcl     cobol_x3_fileno fixed bin(24)defined (  cobol_ext_$cobol_x3_fileno);
  3    94 
  3    95 dcl     cobol_ext_$cobol_lpr char (5) ext;
  3    96 dcl     cobol_lpr char (5) defined (  cobol_ext_$cobol_lpr);				/* -2- */
  3    97 dcl     cobol_ext_$cobol_options char (120) ext;
  3    98 dcl     cobol_options char (120) defined (  cobol_ext_$cobol_options);          			/* -30- */
  3    99 
  3   100 dcl     cobol_ext_$cobol_xlast8 bit (1) ext;
  3   101 dcl     cobol_xlast8 bit (1) defined (  cobol_ext_$cobol_xlast8);				/* -1- */
  3   102 dcl     cobol_ext_$report_exists bit (1) ext;
  3   103 dcl     report_exists bit (1) defined (  cobol_ext_$report_exists);
  3   104 
  3   105 
  3   106 /*    <<<   END OF SHARED EXTERNALS INCLUDE FILE   >>>    */
  3   107 /* END INCLUDE FILE ... cobol_ext_.incl.pl1 */
  3   108 
      593 
  4     1 
  4     2 /* BEGIN INCLUDE FILE ...   cobol_io_info.incl.pl1 */
  4     3 
  4     4 /*  EXTERNAL COBOL I/O ENTRIES  */
  4     5 
  4     6 dcl   cobol_vdwf_open ext entry (ptr, bit(32));
  4     7 dcl   cobol_swf_open ext entry (ptr,bit(32),ptr,fixed bin,char(2));
  4     8 
  4     9 dcl   cobol_swf_get ext entry(ptr,bit(32),ptr,fixed bin);
  4    10 
  4    11 dcl   cobol_swf_put ext entry(ptr,bit(32),ptr,fixed bin);
  4    12 
  4    13 dcl   cobol_swf_close ext entry(ptr,bit(32),ptr,fixed bin);
  4    14 
  4    15 dcl   cobol_vdwf_sget ext entry(ptr,bit(32),ptr,fixed bin,char(5));
  4    16 
  4    17 dcl   cobol_vdwf_sput ext entry (ptr,bit(32),ptr,fixed bin,char(5));
  4    18 
  4    19 dcl   cobol_vdwf_dget ext entry(ptr,bit(32),ptr,fixed bin,char(5));
  4    20 
  4    21 dcl   cobol_vdwf_dput ext entry(ptr,bit(32),ptr,fixed bin,char(5));
  4    22 
  4    23 dcl   cobol_vdwf_close ext entry(ptr,bit(32),ptr,fixed bin);
  4    24 
  4    25 
  4    26 /*  DECLARATION OF SOME VARIABLES USED IN COMPILER I/O CALLS  */
  4    27 
  4    28 dcl keyno char(5);
  4    29 dcl key1 char(5);
  4    30 dcl curr_input ptr;
  4    31 dcl curr_output ptr;
  4    32 dcl recsize fixed bin;
  4    33 dcl recsize2 fixed bin;
  4    34 dcl status bit(32);
  4    35 
  4    36 
  4    37 
  4    38 dcl	1 status_word based(st_ptr),
  4    39 		2 status_left bit(16),
  4    40 		2 status_right bit(16);
  4    41 
  4    42 dcl st_ptr ptr;
  4    43 
  4    44 
  4    45 /* END INCLUDE FILE ...   cobol_io_info.incl.pl1 */
  4    46 
      594 
  5     1 
  5     2 /* BEGIN INCLUDE FILE ...   cobol_repl_unique.incl.pl1 */
  5     3 
  5     4 /*  DECLARATION OF OFFSETS OF THE VARIOUS ENTRIES OF CERTAIN COBOL RECORD TYPES  */
  5     5 
  5     6 /*  THIS IS THE 645 VERSION  */
  5     7 
  5     8 dcl numeric_literal_size fixed bin(15) int static init(36);
  5     9 dcl alphanumeric_literal_size fixed bin(15) int static init(24);
  5    10 dcl numeric_extension_offset fixed bin(15) int static init(52);
  5    11 
  5    12 
  5    13 /*  DECLARATION OF FIXED LENGTH PORTIONS OF CONDITION NAME INITIAL VALUE STRUCTURES  */
  5    14 
  5    15 dcl numeric_extension_size fixed bin(15) int static init(20);
  5    16 dcl alpha_extension_size fixed bin(15) int static init(8);
  5    17 
  5    18 
  5    19 /*  DECLARATION OF THE LENGTH OF A RESERVED WORD RECORD  */
  5    20 
  5    21 dcl reserved_word_size fixed bin(15) int static init(28);
  5    22 
  5    23 /* END INCLUDE FILE ...   cobol_repl_unique.incl.pl1 */
  5    24 
      595 
      596 dcl	name_ptr		ptr;
  6     1 
  6     2 /* BEGIN INCLUDE FILE ... cobol_type17.incl.pl1 */
  6     3 /* Last modified on 11/19/76 by ORN */
  6     4 
  6     5 /*
  6     6*A mnemonic name token is created for each user-defined mnemonic name
  6     7*specified in the special-names paragraph.
  6     8**/
  6     9 
  6    10 /* dcl name_ptr ptr;  */
  6    11 
  6    12 /* BEGIN DECLARATION OF TYPE17 (MNEMONIC NAME) TOKEN */
  6    13 dcl	1 mnemonic_name based (name_ptr),
  7     1 
  7     2 /* begin include file ... cobol_TYPE17.incl.pl1 */
  7     3 /* Last modified on 11/17/76 by ORN */
  7     4 
  7     5 		/* header */
  7     6 		2 size fixed bin,
  7     7 		2 line fixed bin,
  7     8 		2 column fixed bin,
  7     9 		2 type fixed bin,
  7    10 		/* body */
  7    11 		2 string_ptr ptr,
  7    12 		2 prev_rec ptr,
  7    13 		2 info bit(8),
  7    14 		2 class,
  7    15 		     3 switch_condition bit(1),
  7    16 		     3 switch_name bit(1),
  7    17 		     3 accept_device bit(1),
  7    18 		     3 display_device bit(1),
  7    19 		     3 printer_control bit(1),
  7    20 		     3 alphabet_name bit(1),
  7    21 		2 on_status bit(1),
  7    22 		2 off_status bit(1),
  7    23 		2 def_line fixed bin,
  7    24 		2 iw_key fixed bin,
  7    25 		2 reserved bit(36),
  7    26 		2 alphabet_offset fixed bin,
  7    27 		2 name_size fixed bin,
  7    28 		2 name char(0 refer (mnemonic_name.name_size));
  7    29 
  7    30 
  7    31 /* end include file ... cobol_TYPE17.incl.pl1 */
  7    32 
  6    14 
  6    15 /* END DECLARATION OF TYPE17 (MNEMONIC NAME) TOKEN */
  6    16 
  6    17 /* END INCLUDE FILE ... cobol_type17.incl.pl1 */
  6    18 
      597 
  8     1 
  8     2 /* BEGIN INCLUDE FILE ... cobol_reswd_values.incl.pl1 */
  8     3 /* CREATED ON 06/15/76 BY ORN */
  8     4 
  8     5 /* This include file contains the value associated with each reserved word
  8     6*   used by the Multics COBOL compiler.  These are declared as constants
  8     7*   and are not allocated unless referenced.  Eash name is in the form:
  8     8*
  8     9*	reswd_<reserved word name>
  8    10*     or
  8    11*	reschar_<special character name>
  8    12*
  8    13*   where <reserved word name> is the upper case transliteration of the
  8    14*   reserved word with any hyphens replaced by underscores and
  8    15*   <special character name> is the upper case name of the one
  8    16*   character reserved words (e.g. EQ, GT, MINUS, LPARENS, etc.)  */
  8    17 
  8    18 
  8    19 dcl reswd_ACCEPT		fixed bin static options(constant) init(001);
  8    20 dcl reswd_ADD		fixed bin static options(constant) init(002);
  8    21 dcl reswd_ERROR		fixed bin static options(constant) init(003);
  8    22 dcl reswd_ALTER		fixed bin static options(constant) init(004);
  8    23 dcl reswd_CALL		fixed bin static options(constant) init(005);
  8    24 dcl reswd_OVERFLOW		fixed bin static options(constant) init(006);
  8    25 dcl reswd_CANCEL		fixed bin static options(constant) init(007);
  8    26 dcl reswd_CLOSE		fixed bin static options(constant) init(008);
  8    27 dcl reswd_DIVIDE		fixed bin static options(constant) init(009);
  8    28 dcl reswd_MULTIPLY		fixed bin static options(constant) init(010);
  8    29 dcl reswd_SUBTRACT		fixed bin static options(constant) init(011);
  8    30 dcl reswd_EXIT		fixed bin static options(constant) init(012);
  8    31 dcl reswd_INITIALIZE	fixed bin static options(constant) init(013);
  8    32 dcl reswd_GO		fixed bin static options(constant) init(014);
  8    33 dcl reswd_MERGE		fixed bin static options(constant) init(015);
  8    34 dcl reswd_INITIATE		fixed bin static options(constant) init(016);
  8    35 dcl reswd_INSPECT		fixed bin static options(constant) init(017);
  8    36 dcl reswd_MOVE		fixed bin static options(constant) init(018);
  8    37 dcl reswd_OPEN		fixed bin static options(constant) init(019);
  8    38 dcl reswd_PERFORM		fixed bin static options(constant) init(020);
  8    39 dcl reswd_READ		fixed bin static options(constant) init(021);
  8    40 dcl reswd_DELETE		fixed bin static options(constant) init(022);
  8    41 dcl reswd_RECEIVE		fixed bin static options(constant) init(023);
  8    42 dcl reswd_RELEASE		fixed bin static options(constant) init(024);
  8    43 dcl reswd_RETURN		fixed bin static options(constant) init(025);
  8    44 dcl reswd_SEARCH		fixed bin static options(constant) init(026);
  8    45 dcl reswd_REWRITE		fixed bin static options(constant) init(027);
  8    46 /* 028 029 */
  8    47 dcl reswd_SEND		fixed bin static options(constant) init(030);
  8    48 dcl reswd_SET		fixed bin static options(constant) init(031);
  8    49 /* 032 */
  8    50 dcl reswd_STOP		fixed bin static options(constant) init(033);
  8    51 dcl reswd_STRING		fixed bin static options(constant) init(034);
  8    52 dcl reswd_SUSPEND		fixed bin static options(constant) init(035);
  8    53 dcl reswd_TERMINATE		fixed bin static options(constant) init(036);
  8    54 dcl reswd_UNSTRING		fixed bin static options(constant) init(037);
  8    55 dcl reswd_WRITE		fixed bin static options(constant) init(038);
  8    56 dcl reswd_USE		fixed bin static options(constant) init(039);
  8    57 dcl reswd_COMPUTE		fixed bin static options(constant) init(040);
  8    58 dcl reswd_DISABLE		fixed bin static options(constant) init(041);
  8    59 dcl reswd_DISPLAY		fixed bin static options(constant) init(042);
  8    60 dcl reswd_ENABLE		fixed bin static options(constant) init(043);
  8    61 dcl reswd_ENTER		fixed bin static options(constant) init(044);
  8    62 dcl reswd_GENERATE		fixed bin static options(constant) init(045);
  8    63 dcl reswd_HOLD		fixed bin static options(constant) init(046);
  8    64 dcl reswd_IF		fixed bin static options(constant) init(047);
  8    65 dcl reswd_PROCESS		fixed bin static options(constant) init(048);
  8    66 dcl reswd_SORT		fixed bin static options(constant) init(049);
  8    67 dcl reswd_EXAMINE		fixed bin static options(constant) init(050);
  8    68 dcl reswd_TRANSFORM		fixed bin static options(constant) init(051);
  8    69 /* 052 053 054 055 */
  8    70 dcl reswd_START		fixed bin static options(constant) init(056);
  8    71 dcl reswd_SUPPRESS		fixed bin static options(constant) init(057);
  8    72 dcl reswd_PURGE		fixed bin static options(constant) init(058);
  8    73 /* 059 060 061 062 063 064 065 066 067 068 069 070 */
  8    74 dcl reswd_ADVANCING		fixed bin static options(constant) init(071);
  8    75 dcl reswd_AFTER		fixed bin static options(constant) init(072);
  8    76 dcl reswd_ALL		fixed bin static options(constant) init(073);
  8    77 dcl reswd_ALPHABETIC	fixed bin static options(constant) init(074);
  8    78 dcl reswd_ALPHANUMERIC	fixed bin static options(constant) init(075);
  8    79 dcl reswd_ALPHANUMERIC_EDITED	fixed bin static options(constant) init(076);
  8    80 dcl reswd_AND		fixed bin static options(constant) init(077);
  8    81 dcl reswd_ASCENDING		fixed bin static options(constant) init(078);
  8    82 dcl reswd_AT		fixed bin static options(constant) init(079);
  8    83 dcl reswd_BEFORE		fixed bin static options(constant) init(080);
  8    84 dcl reswd_BEGINNING		fixed bin static options(constant) init(081);
  8    85 dcl reswd_BY		fixed bin static options(constant) init(082);
  8    86 dcl (reswd_CHARACTER,
  8    87      reswd_CHARACTERS)	fixed bin static options(constant) init(083);
  8    88 dcl reswd_COUNT		fixed bin static options(constant) init(084);
  8    89 dcl reswd_SSF		fixed bin static options(constant) init(085);
  8    90 dcl reswd_DATE		fixed bin static options(constant) init(086);
  8    91 dcl reswd_DAY		fixed bin static options(constant) init(087);
  8    92 dcl reswd_DEBUGGING		fixed bin static options(constant) init(088);
  8    93 dcl reswd_DECLARATIVES	fixed bin static options(constant) init(089);
  8    94 dcl reswd_DELIMITED		fixed bin static options(constant) init(090);
  8    95 dcl reswd_DELIMITER		fixed bin static options(constant) init(091);
  8    96 dcl reswd_DEPENDING		fixed bin static options(constant) init(092);
  8    97 dcl reswd_DESCENDING	fixed bin static options(constant) init(093);
  8    98 dcl reswd_DIVISION		fixed bin static options(constant) init(094);
  8    99 dcl reswd_DOWN		fixed bin static options(constant) init(095);
  8   100 dcl (reswd_ALSO,
  8   101      reswd_ELSE)		fixed bin static options(constant) init(096);
  8   102 dcl reswd_EMI		fixed bin static options(constant) init(097);
  8   103 dcl reswd_END		fixed bin static options(constant) init(098);
  8   104 dcl reswd_ENDING		fixed bin static options(constant) init(099);
  8   105 dcl (reswd_END_OF_PAGE,
  8   106      reswd_EOP)		fixed bin static options(constant) init(100);
  8   107 dcl reswd_IN		fixed bin static options(constant) init(101);
  8   108 dcl (reschar_EQ,
  8   109      reswd_EQUAL,
  8   110      reswd_EQUALS)		fixed bin static options(constant) init(102);
  8   111 /* 103 104 */
  8   112 dcl reswd_ESI		fixed bin static options(constant) init(105);
  8   113 dcl (reswd_COMP,
  8   114      reswd_COMPUTATIONAL)	fixed bin static options(constant) init(106);
  8   115 dcl reswd_EXCEPTION		fixed bin static options(constant) init(107);
  8   116 dcl reswd_FILE		fixed bin static options(constant) init(108);
  8   117 dcl reswd_FIRST		fixed bin static options(constant) init(109);
  8   118 dcl reswd_FOR		fixed bin static options(constant) init(110);
  8   119 dcl reswd_FROM		fixed bin static options(constant) init(111);
  8   120 dcl reswd_GIVING		fixed bin static options(constant) init(112);
  8   121 dcl (reschar_GT,
  8   122      reswd_EXCEEDS,
  8   123      reswd_GREATER)		fixed bin static options(constant) init(113);
  8   124 dcl reswd_INITIAL		fixed bin static options(constant) init(114);
  8   125 dcl reswd_INPUT		fixed bin static options(constant) init(115);
  8   126 dcl reswd_INTO		fixed bin static options(constant) init(116);
  8   127 dcl reswd_INVALID		fixed bin static options(constant) init(117);
  8   128 dcl (reswd_ARE,
  8   129      reswd_IS)		fixed bin static options(constant) init(118);
  8   130 dcl (reswd_I_O,
  8   131      reswd_INPUT_OUTPUT)	fixed bin static options(constant) init(119);
  8   132 dcl reswd_KEY		fixed bin static options(constant) init(120);
  8   133 dcl reswd_LABEL		fixed bin static options(constant) init(121);
  8   134 dcl reswd_LEADING		fixed bin static options(constant) init(122);
  8   135 dcl (reschar_LT,
  8   136      reswd_LESS)		fixed bin static options(constant) init(123);
  8   137 dcl (reswd_LINE,
  8   138      reswd_LINES)		fixed bin static options(constant) init(124);
  8   139 dcl reswd_LOCK		fixed bin static options(constant) init(125);
  8   140 dcl reswd_MESSAGE		fixed bin static options(constant) init(126);
  8   141 dcl reswd_NEGATIVE		fixed bin static options(constant) init(127);
  8   142 dcl reswd_NEXT		fixed bin static options(constant) init(128);
  8   143 dcl reswd_NO		fixed bin static options(constant) init(129);
  8   144 dcl reswd_NOT		fixed bin static options(constant) init(130);
  8   145 dcl reswd_NUMERIC		fixed bin static options(constant) init(131);
  8   146 dcl reswd_NUMERIC_EDITED	fixed bin static options(constant) init(132);
  8   147 dcl reswd_OF		fixed bin static options(constant) init(133);
  8   148 dcl reswd_ON		fixed bin static options(constant) init(134);
  8   149 dcl reswd_OR		fixed bin static options(constant) init(135);
  8   150 /* 136 */
  8   151 dcl reswd_OUTPUT		fixed bin static options(constant) init(137);
  8   152 dcl reswd_BOOLEAN		fixed bin static options(constant) init(138);
  8   153 dcl reswd_PAGE		fixed bin static options(constant) init(139);
  8   154 dcl reswd_POINTER		fixed bin static options(constant) init(140);
  8   155 dcl reswd_POSITIVE		fixed bin static options(constant) init(141);
  8   156 dcl reswd_PROCEDURE		fixed bin static options(constant) init(142);
  8   157 dcl reswd_PROCEDURES	fixed bin static options(constant) init(143);
  8   158 dcl reswd_PROCEED		fixed bin static options(constant) init(144);
  8   159 dcl reswd_PROCESSING	fixed bin static options(constant) init(145);
  8   160 dcl reswd_PROGRAM		fixed bin static options(constant) init(146);
  8   161 dcl reswd_RANDOM		fixed bin static options(constant) init(147);
  8   162 dcl reswd_RECORD		fixed bin static options(constant) init(148);
  8   163 dcl reswd_REEL		fixed bin static options(constant) init(149);
  8   164 dcl reswd_REFERENCES	fixed bin static options(constant) init(150);
  8   165 dcl reswd_REMAINDER		fixed bin static options(constant) init(151);
  8   166 dcl reswd_REPLACING		fixed bin static options(constant) init(152);
  8   167 dcl reswd_REPORTING		fixed bin static options(constant) init(153);
  8   168 dcl reswd_REVERSED		fixed bin static options(constant) init(154);
  8   169 dcl reswd_REWIND		fixed bin static options(constant) init(155);
  8   170 dcl reswd_ROUNDED		fixed bin static options(constant) init(156);
  8   171 dcl reswd_RUN		fixed bin static options(constant) init(157);
  8   172 dcl reswd_SECTION		fixed bin static options(constant) init(158);
  8   173 dcl reswd_SEGMENT		fixed bin static options(constant) init(159);
  8   174 dcl reswd_SENTENCE		fixed bin static options(constant) init(160);
  8   175 dcl reswd_SIZE		fixed bin static options(constant) init(161);
  8   176 dcl reswd_STANDARD		fixed bin static options(constant) init(162);
  8   177 dcl reswd_TALLYING		fixed bin static options(constant) init(163);
  8   178 dcl reswd_TERMINAL		fixed bin static options(constant) init(164);
  8   179 dcl reswd_THAN		fixed bin static options(constant) init(165);
  8   180 dcl (reswd_THROUGH,
  8   181      reswd_THRU)		fixed bin static options(constant) init(166);
  8   182 dcl reswd_RELATIVE		fixed bin static options(constant) init(167);
  8   183 dcl (reswd_TIME,
  8   184      reswd_TIMES)		fixed bin static options(constant) init(168);
  8   185 dcl reswd_DYNAMIC		fixed bin static options(constant) init(169);
  8   186 dcl reswd_TO		fixed bin static options(constant) init(170);
  8   187 dcl reswd_UNEQUAL		fixed bin static options(constant) init(171);
  8   188 dcl reswd_UNIT		fixed bin static options(constant) init(172);
  8   189 dcl reswd_UNTIL		fixed bin static options(constant) init(173);
  8   190 dcl reswd_UP		fixed bin static options(constant) init(174);
  8   191 dcl reswd_UPON		fixed bin static options(constant) init(175);
  8   192 dcl reswd_USING		fixed bin static options(constant) init(176);
  8   193 dcl reswd_VARYING		fixed bin static options(constant) init(177);
  8   194 dcl reswd_WHEN		fixed bin static options(constant) init(178);
  8   195 dcl reswd_WITH		fixed bin static options(constant) init(179);
  8   196 dcl (reswd_ZERO,
  8   197      reswd_ZEROES,
  8   198      reswd_ZEROS)		fixed bin static options(constant) init(180);
  8   199 dcl reswd_ORGANIZATION	fixed bin static options(constant) init(181);
  8   200 dcl reschar_PLUS		fixed bin static options(constant) init(182);
  8   201 dcl reschar_MINUS		fixed bin static options(constant) init(183);
  8   202 dcl reschar_STAR		fixed bin static options(constant) init(184);
  8   203 dcl reschar_SLASH		fixed bin static options(constant) init(185);
  8   204 dcl reschar_2STARs		fixed bin static options(constant) init(186);
  8   205 dcl reschar_LPARENS		fixed bin static options(constant) init(187);
  8   206 dcl reschar_RPARENS		fixed bin static options(constant) init(188);
  8   207 dcl reschar_PERIOD		fixed bin static options(constant) init(189);
  8   208 dcl reswd_TOP		fixed bin static options(constant) init(190);
  8   209 dcl reswd_COBOL		fixed bin static options(constant) init(191);
  8   210 dcl (reswd_SPACE,
  8   211      reswd_SPACES)		fixed bin static options(constant) init(192);
  8   212 dcl reswd_TALLY		fixed bin static options(constant) init(193);
  8   213 dcl (reswd_BIT,
  8   214      reswd_BITS)		fixed bin static options(constant) init(194);
  8   215 dcl reswd_RECORDS		fixed bin static options(constant) init(195);
  8   216 dcl reswd_DATA		fixed bin static options(constant) init(196);
  8   217 /* 197 198 199 */
  8   218 dcl reswd_VLR		fixed bin static options(constant) init(201);
  8   219 dcl (reswd_AREA,
  8   220      reswd_AREAS)		fixed bin static options(constant) init(202);
  8   221 dcl reswd_OMITTED		fixed bin static options(constant) init(203);
  8   222 dcl reswd_BLANK		fixed bin static options(constant) init(204);
  8   223 dcl reswd_BLOCK		fixed bin static options(constant) init(205);
  8   224 dcl reswd_CD		fixed bin static options(constant) init(206);
  8   225 dcl reswd_COMMUNICATION	fixed bin static options(constant) init(207);
  8   226 dcl reswd_STANDARD_2	fixed bin static options(constant) init(208);
  8   227 dcl (reswd_COMP_4,
  8   228      reswd_COMPUTATIONAL_4)	fixed bin static options(constant) init(209);
  8   229 dcl (reswd_COMP_5,
  8   230      reswd_COMPUTATIONAL_5)	fixed bin static options(constant) init(210);
  8   231 dcl (reswd_COMP_3,
  8   232      reswd_COMPUTATIONAL_3)	fixed bin static options(constant) init(211);
  8   233 dcl (reswd_COMP_1,
  8   234      reswd_COMPUTATIONAL_1)	fixed bin static options(constant) init(212);
  8   235 dcl (reswd_COMP_2,
  8   236      reswd_COMPUTATIONAL_2)	fixed bin static options(constant) init(213);
  8   237 dcl reswd_CONSTANT		fixed bin static options(constant) init(214);
  8   238 dcl reswd_CONTAINS		fixed bin static options(constant) init(215);
  8   239 dcl reswd_EXTEND		fixed bin static options(constant) init(216);
  8   240 /* 217 */
  8   241 dcl reswd_DESTINATION	fixed bin static options(constant) init(218);
  8   242 dcl reswd_FD		fixed bin static options(constant) init(219);
  8   243 dcl reswd_FILLER		fixed bin static options(constant) init(220);
  8   244 dcl (reswd_HIGH_VALUE,
  8   245      reswd_HIGH_VALUES)	fixed bin static options(constant) init(221);
  8   246 dcl reswd_INDEX		fixed bin static options(constant) init(222);
  8   247 dcl reswd_INDEXED		fixed bin static options(constant) init(223);
  8   248 dcl (reswd_JUST,
  8   249      reswd_JUSTIFIED)	fixed bin static options(constant) init(224);
  8   250 dcl reswd_LEFT		fixed bin static options(constant) init(225);
  8   251 dcl reswd_LENGTH		fixed bin static options(constant) init(226);
  8   252 dcl reswd_DUPLICATES	fixed bin static options(constant) init(227);
  8   253 dcl reswd_LINKAGE		fixed bin static options(constant) init(228);
  8   254 dcl (reswd_LOW_VALUE,
  8   255      reswd_LOW_VALUES)	fixed bin static options(constant) init(229);
  8   256 dcl reswd_MODE		fixed bin static options(constant) init(230);
  8   257 dcl reswd_OCCURS		fixed bin static options(constant) init(231);
  8   258 dcl (reswd_PIC,
  8   259      reswd_PICTURE)		fixed bin static options(constant) init(232);
  8   260 dcl reswd_EGI		fixed bin static options(constant) init(233);
  8   261 dcl reswd_QUEUE		fixed bin static options(constant) init(234);
  8   262 dcl (reswd_QUOTE,
  8   263      reswd_QUOTES)		fixed bin static options(constant) init(235);
  8   264 dcl reswd_BOTTOM		fixed bin static options(constant) init(236);
  8   265 dcl reswd_RECORDING		fixed bin static options(constant) init(237);
  8   266 dcl reswd_REDEFINES		fixed bin static options(constant) init(238);
  8   267 dcl reswd_RENAMES		fixed bin static options(constant) init(239);
  8   268 dcl (reswd_REPORT,
  8   269      reswd_REPORTS)		fixed bin static options(constant) init(240);
  8   270 dcl reswd_RIGHT		fixed bin static options(constant) init(241);
  8   271 dcl reswd_SA		fixed bin static options(constant) init(242);
  8   272 dcl reswd_SD		fixed bin static options(constant) init(243);
  8   273 dcl reswd_SEPARATE		fixed bin static options(constant) init(244);
  8   274 dcl reswd_SIGN		fixed bin static options(constant) init(245);
  8   275 dcl reswd_SOURCE		fixed bin static options(constant) init(246);
  8   276 dcl reswd_STATUS		fixed bin static options(constant) init(247);
  8   277 dcl reswd_SUB_QUEUE_1	fixed bin static options(constant) init(248);
  8   278 dcl reswd_SUB_QUEUE_2	fixed bin static options(constant) init(249);
  8   279 dcl reswd_SUB_QUEUE_3	fixed bin static options(constant) init(250);
  8   280 dcl reswd_SYMBOLIC		fixed bin static options(constant) init(251);
  8   281 dcl (reswd_SYNC,
  8   282      reswd_SYNCHRONIZED)	fixed bin static options(constant) init(252);
  8   283 dcl reswd_TABLE		fixed bin static options(constant) init(253);
  8   284 /* 254 */
  8   285 dcl reswd_TRAILING		fixed bin static options(constant) init(255);
  8   286 dcl reschar_2EQs		fixed bin static options(constant) init(256);
  8   287 dcl reswd_USAGE		fixed bin static options(constant) init(257);
  8   288 dcl (reswd_VALUE,
  8   289      reswd_VALUES)		fixed bin static options(constant) init(258);
  8   290 dcl reswd_WORKING_STORAGE	fixed bin static options(constant) init(259);
  8   291 dcl reswd_REMOVAL		fixed bin static options(constant) init(260);
  8   292 /* 261 */
  8   293 /* (262 263 264 265) */
  8   294 /* 266 */
  8   295 /* (267 268 269 270 271) */
  8   296 dcl reswd_FLR		fixed bin static options(constant) init(272);
  8   297 /* 273 274 275 276 277 */
  8   298 /* (278) */
  8   299 dcl reswd_FILES		fixed bin static options(constant) init(279);
  8   300 /* 280 281 282 283 284 285 */
  8   301 /* (286) */
  8   302 /* 287 */
  8   303 dcl reswd_NATIVE		fixed bin static options(constant) init(288);
  8   304 /* 289 */
  8   305 dcl (reswd_COMP_7,
  8   306      reswd_COMPUTATIONAL_7)	fixed bin static options(constant) init(290);
  8   307 dcl reswd_OBJECT		fixed bin static options(constant) init(291);
  8   308 dcl (reswd_COMP_6,
  8   309      reswd_COMPUTATIONAL_6)	fixed bin static options(constant) init(292);
  8   310 /* (293) */
  8   311 /* 294 */
  8   312 dcl reswd_DEFAULT		fixed bin static options(constant) init(295);
  8   313 /* 296 207 298 299 300 301 302 303 304 305 */
  8   314 dcl reswd_CODE_SET		fixed bin static options(constant) init(306);
  8   315 dcl reswd_EXTERNAL		fixed bin static options(constant) init(307);
  8   316 /* 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 */
  8   317 dcl reswd_DAY_OF_WEEK	fixed bin static options(constant) init(326);
  8   318 dcl reswd_INTERCHANGE	fixed bin static options(constant) init(327);
  8   319 /* 328 */
  8   320 dcl reswd_PROCESS_AREA	fixed bin static options(constant) init(329);
  8   321 /* 330 */
  8   322 dcl (reswd_CATALOG_NAME,
  8   323      reswd_CATALOGUE_NAME)	fixed bin static options(constant) init(331);
  8   324 /* 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 */
  8   325 /* 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 */
  8   326 /* 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 */
  8   327 /* 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 */
  8   328 dcl reswd_STREAM		fixed bin static options(constant) init(407);
  8   329 /* 408 409 410 411 412 413 */
  8   330 dcl reswd_BSN		fixed bin static options(constant) init(413);
  8   331 /* 414 415 */
  8   332 dcl reswd_KEYED		fixed bin static options(constant) init(416);
  8   333 /* 417 418 419 420 421 422 */
  8   334 dcl reswd_IDS_II		fixed bin static options(constant) init(423);
  8   335 /* 424 */
  8   336 dcl reswd_REPLACE		fixed bin static options(constant) init(425);
  8   337 /* 426 427 428 429 430 431 432 433 434 */
  8   338 dcl reswd_SUBSTITUTION	fixed bin static options(constant) init(435);
  8   339 /* 436 437 438 439 440 441 442 443 444 445 446 447 448 449 */
  8   340 /* 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 */
  8   341 /* 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 */
  8   342 /* 490 491 492 493 494 495 496 497 498 499 500 */
  8   343 dcl reswd_ACCESS		fixed bin static options(constant) init(501);
  8   344 /* 502 */
  8   345 dcl reswd_ADDRESS		fixed bin static options(constant) init(503);
  8   346 dcl reswd_ALPHABET		fixed bin static options(constant) init(504);
  8   347 dcl reswd_STANDARD_1	fixed bin static options(constant) init(505);
  8   348 /* 506 */
  8   349 dcl reswd_ALTERNATE		fixed bin static options(constant) init(507);
  8   350 dcl reswd_APPLY		fixed bin static options(constant) init(508);
  8   351 dcl reswd_ASSIGN		fixed bin static options(constant) init(509);
  8   352 dcl reswd_AUTHOR		fixed bin static options(constant) init(510);
  8   353 dcl reswd_CF		fixed bin static options(constant) init(511);
  8   354 dcl reswd_CH		fixed bin static options(constant) init(512);
  8   355 dcl reswd_CLOCK_UNITS	fixed bin static options(constant) init(513);
  8   356 dcl reswd_CODE		fixed bin static options(constant) init(514);
  8   357 dcl reswd_COLLATING		fixed bin static options(constant) init(515);
  8   358 dcl reswd_COLUMN		fixed bin static options(constant) init(516);
  8   359 dcl reswd_COMMA		fixed bin static options(constant) init(517);
  8   360 dcl reswd_CONFIGURATION	fixed bin static options(constant) init(518);
  8   361 dcl reswd_CONVERSION	fixed bin static options(constant) init(519);
  8   362 dcl reswd_CONTROL		fixed bin static options(constant) init(520);
  8   363 dcl reswd_CONTROLS		fixed bin static options(constant) init(521);
  8   364 dcl reswd_COPY		fixed bin static options(constant) init(522);
  8   365 dcl (reswd_CORR,
  8   366      reswd_CORRESPONDING)	fixed bin static options(constant) init(524);
  8   367 dcl reswd_CURRENCY		fixed bin static options(constant) init(525);
  8   368 /* 526 */
  8   369 dcl reswd_DATE_COMPILED	fixed bin static options(constant) init(527);
  8   370 dcl reswd_DATE_WRITTEN	fixed bin static options(constant) init(528);
  8   371 dcl reswd_DE		fixed bin static options(constant) init(529);
  8   372 dcl reswd_DEBUG_CONTENTS	fixed bin static options(constant) init(530);
  8   373 dcl reswd_DEBUG_ITEM	fixed bin static options(constant) init(531);
  8   374 dcl reswd_DEBUG_LINE	fixed bin static options(constant) init(532);
  8   375 dcl reswd_DEBUG_SUB_1	fixed bin static options(constant) init(533);
  8   376 dcl reswd_DEBUG_SUB_2	fixed bin static options(constant) init(534);
  8   377 dcl reswd_DEBUG_SUB_3	fixed bin static options(constant) init(535);
  8   378 /* 536 */
  8   379 dcl reswd_DEBUG_NAME	fixed bin static options(constant) init(537);
  8   380 dcl reswd_DECIMAL_POINT	fixed bin static options(constant) init(538);
  8   381 dcl reswd_DETAIL		fixed bin static options(constant) init(539);
  8   382 dcl reswd_ENVIRONMENT	fixed bin static options(constant) init(540);
  8   383 /* 541 */
  8   384 dcl reswd_EVERY		fixed bin static options(constant) init(542);
  8   385 dcl reswd_FILE_CONTROL	fixed bin static options(constant) init(543);
  8   386 /* 544 545 */
  8   387 dcl reswd_FINAL		fixed bin static options(constant) init(546);
  8   388 dcl reswd_FOOTING		fixed bin static options(constant) init(547);
  8   389 dcl reswd_HEADING		fixed bin static options(constant) init(548);
  8   390 dcl reswd_GROUP		fixed bin static options(constant) init(549);
  8   391 /* 550 */
  8   392 dcl reswd_I_O_CONTROL	fixed bin static options(constant) init(551);
  8   393 dcl reswd_IDENTIFICATION	fixed bin static options(constant) init(552);
  8   394 dcl reswd_INDICATE		fixed bin static options(constant) init(553);
  8   395 dcl reswd_INSTALLATION	fixed bin static options(constant) init(554);
  8   396 /* 555 */
  8   397 dcl reswd_LAST		fixed bin static options(constant) init(556);
  8   398 /* 557 558 */
  8   399 dcl reswd_PRINTING		fixed bin static options(constant) init(559);
  8   400 /* 560 */
  8   401 dcl reswd_LIMIT		fixed bin static options(constant) init(561);
  8   402 dcl reswd_LIMITS		fixed bin static options(constant) init(562);
  8   403 dcl reswd_LINAGE		fixed bin static options(constant) init(563);
  8   404 dcl reswd_LINAGE_COUNTER	fixed bin static options(constant) init(564);
  8   405 dcl reswd_LINE_COUNTER	fixed bin static options(constant) init(565);
  8   406 /* 566 567 */
  8   407 dcl reswd_MEMORY		fixed bin static options(constant) init(568);
  8   408 dcl reswd_MODULES		fixed bin static options(constant) init(569);
  8   409 dcl reswd_MULTIPLE		fixed bin static options(constant) init(570);
  8   410 dcl reswd_NUMBER		fixed bin static options(constant) init(571);
  8   411 dcl reswd_OBJECT_COMPUTER	fixed bin static options(constant) init(572);
  8   412 /* 573 */
  8   413 dcl reswd_OFF		fixed bin static options(constant) init(574);
  8   414 /* 575 */
  8   415 dcl reswd_OPTIONAL		fixed bin static options(constant) init(576);
  8   416 /* 577 */
  8   417 dcl reswd_PAGE_COUNTER	fixed bin static options(constant) init(578);
  8   418 dcl reswd_PF		fixed bin static options(constant) init(579);
  8   419 dcl reswd_PH		fixed bin static options(constant) init(580);
  8   420 dcl reswd_PLUS		fixed bin static options(constant) init(581);
  8   421 dcl reswd_POSITION		fixed bin static options(constant) init(582);
  8   422 dcl reswd_PROGRAM_ID	fixed bin static options(constant) init(583);
  8   423 dcl reswd_RD		fixed bin static options(constant) init(584);
  8   424 /* 585 586 */
  8   425 dcl reswd_SEQUENCE		fixed bin static options(constant) init(587);
  8   426 dcl reswd_RERUN		fixed bin static options(constant) init(588);
  8   427 dcl reswd_RESERVE		fixed bin static options(constant) init(589);
  8   428 dcl reswd_RESET		fixed bin static options(constant) init(590);
  8   429 dcl reswd_RF		fixed bin static options(constant) init(591);
  8   430 dcl reswd_RH		fixed bin static options(constant) init(592);
  8   431 dcl reswd_SAME		fixed bin static options(constant) init(593);
  8   432 dcl reswd_SECURITY		fixed bin static options(constant) init(594);
  8   433 dcl reswd_SEGMENT_LIMIT	fixed bin static options(constant) init(595);
  8   434 dcl reswd_SELECT		fixed bin static options(constant) init(596);
  8   435 dcl reswd_SEQUENTIAL	fixed bin static options(constant) init(597);
  8   436 dcl reswd_SORT_MERGE	fixed bin static options(constant) init(598);
  8   437 dcl reswd_SOURCE_COMPUTER	fixed bin static options(constant) init(599);
  8   438 dcl reswd_SPECIAL_NAMES	fixed bin static options(constant) init(600);
  8   439 dcl reswd_SPANNED		fixed bin static options(constant) init(601);
  8   440 /* (602) */
  8   441 dcl reswd_SUM		fixed bin static options(constant) init(603);
  8   442 dcl reswd_EXOR		fixed bin static options(constant) init(604);
  8   443 /* 605 */
  8   444 dcl reswd_TAPE		fixed bin static options(constant) init(606);
  8   445 dcl reswd_TEXT		fixed bin static options(constant) init(607);
  8   446 dcl reswd_TYPE		fixed bin static options(constant) init(608);
  8   447 dcl reswd_WORDS		fixed bin static options(constant) init(609);
  8   448 dcl (reswd_COMP_8,
  8   449      reswd_COMPUTATIONAL_8)	fixed bin static options(constant) init(610);
  8   450 /* DATABASE WORDS
  8   451*dcl reswd_ALIAS		fixed bin static options(constant) init(263);
  8   452*dcl reswd_ALIGN		fixed bin static options(constant) init(278);
  8   453*dcl reswd_ALTERING		fixed bin static options(constant) init(268);
  8   454*dcl reswd_BECOMES		fixed bin static options(constant) init(267);
  8   455*dcl reswd_CHECK		fixed bin static options(constant) init(264);
  8   456*dcl reswd_INVOKING		fixed bin static options(constant) init(269);
  8   457*dcl reswd_KEY_LOCATION	fixed bin static options(constant) init(286);
  8   458*dcl reswd_LOCKS		fixed bin static options(constant) init(125);
  8   459*dcl reswd_PREFIX		fixed bin static options(constant) init(293);
  8   460*dcl reswd_REALM		fixed bin static options(constant) init(265);
  8   461*dcl reswd_REALM_ID		fixed bin static options(constant) init(270);
  8   462*dcl reswd_SELECTION		fixed bin static options(constant) init(271);
  8   463*dcl reswd_SYMBOLS		fixed bin static options(constant) init(602);
  8   464*dcl reswd_VIA		fixed bin static options(constant) init(262);
  8   465*END DATABASE WORDS */
  8   466 
  8   467 
  8   468 /* END INCLUDE FILE ... cobol_reswd_values.incl.pl1 */
  8   469 
      598 
      599 
      600      end cobol_repl3_expand;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/24/89  0835.4  cobol_repl3_expand.pl1            >spec>install>MR12.3-1048>cobol_repl3_expand.pl1
592          1    03/27/82  0439.9  cobol_type9.incl.pl1              >ldd>include>cobol_type9.incl.pl1
1-17         2    11/11/82  1712.7  cobol_TYPE9.incl.pl1              >ldd>include>cobol_TYPE9.incl.pl1
593          3    03/27/82  0431.3  cobol_ext_.incl.pl1               >ldd>include>cobol_ext_.incl.pl1
594          4    03/27/82  0439.7  cobol_io_info.incl.pl1            >ldd>include>cobol_io_info.incl.pl1
595          5    03/27/82  0439.8  cobol_repl_unique.incl.pl1        >ldd>include>cobol_repl_unique.incl.pl1
597          6    03/27/82  0439.8  cobol_type17.incl.pl1             >ldd>include>cobol_type17.incl.pl1
6-14         7    11/11/82  1712.8  cobol_TYPE17.incl.pl1             >ldd>include>cobol_TYPE17.incl.pl1
598          8    03/27/82  0439.8  cobol_reswd_values.incl.pl1       >ldd>include>cobol_reswd_values.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 209 ref 369 371 372 383 383 424 527
al_in                                  based           structure                level 1 unaligned dcl 111
alpha_extension_size                   constant        fixed bin(15,0)          initial dcl 5-16 ref 293 327 353
alphanum_lit                           based           structure                level 1 unaligned dcl 87
alphanumeric_literal_size              constant        fixed bin(15,0)          initial dcl 5-9 ref 281 343 396
c_n                                    based           structure                level 1 unaligned dcl 127
cbuff                           000102 automatic       char(100)                packed unaligned dcl 119 set ref 369
cbuff_ptr                       000134 automatic       pointer                  dcl 120 set ref 251 253 254 255 256 257 258 259 260
                                                                                  261 262 263 272 281 284 285 286 287 288 289 299
                                                                                  317 319 320 321 322 323 324 334 343 345 346 347
                                                                                  348 349 350 359 369* 396 397 398 399 400 401 402
                                                                                  403* 481* 523* 570*
cbuff_size                      000136 automatic       fixed bin(17,0)          dcl 121 set ref 272* 299* 334* 359* 396* 403* 481*
                                                                                  523* 570*
class                     5            based           bit(26)                  level 2 packed packed unaligned dcl 99 set ref 322*
cname_ptr                              parameter       pointer                  dcl 39 ref 26 377 381 388 413 420 424 527 580
cobol_ext_$cobol_curr_out       000062 external static pointer                  dcl 3-54 set ref 240* 383* 391* 394* 403* 432* 448*
                                                                                  462* 481* 498* 504* 523* 533* 538* 547* 551* 570*
cobol_swf_put                   000064 constant        entry                    external dcl 4-11 ref 240 383 391 394 403 432 448
                                                                                  462 481 498 504 523 533 538 547 551 570
column                    2     000017 internal static fixed bin(17,0)          initial level 2 in structure "logical_res_word"
                                                                                  dcl 163 in procedure "cobol_repl3_expand" set ref
                                                                                  387* 429* 495*
column                    2            based           fixed bin(17,0)          level 2 in structure "alphanum_lit" dcl 87
                                                                                  in procedure "cobol_repl3_expand" set ref 285*
                                                                                  346* 398*
column                    2     000026 internal static fixed bin(17,0)          level 3 in structure "switch_type9" dcl 214
                                                                                  in procedure "cobol_repl3_expand" set ref 380*
column                    2            based           fixed bin(17,0)          level 2 in structure "data_name" dcl 1-16
                                                                                  in procedure "cobol_repl3_expand" set ref 443 444*
                                                                                  584*
column                    2     000010 internal static fixed bin(17,0)          initial level 2 in structure "relational_res_word"
                                                                                  dcl 145 in procedure "cobol_repl3_expand" set ref
                                                                                  387* 459* 501*
column                    2            based           fixed bin(17,0)          level 2 in structure "numeric_lit" dcl 70
                                                                                  in procedure "cobol_repl3_expand" set ref 254*
column                    2            based           fixed bin(17,0)          level 2 in structure "reserved_word" dcl 99
                                                                                  in procedure "cobol_repl3_expand" set ref 320*
curr_column                            parameter       fixed bin(17,0)          dcl 48 ref 26 254 285 320 346 380 387 398 429 444
                                                                                  459 495 501
curr_line                              parameter       fixed bin(17,0)          dcl 46 ref 26 253 284 319 345 379 386 397 428 445
                                                                                  458 494 500
cvar_ptr                               parameter       pointer                  dcl 41 ref 26 438 537
data_name                              based           structure                level 1 unaligned dcl 1-16
dn_ptr                          000156 automatic       pointer                  dcl 591 set ref 438* 442 443 444 445 448* 448 537*
                                                                                  538* 538 583 584
dummy_ptr                 2            based           pointer                  level 2 dcl 204 ref 236
exp_counter                     000137 automatic       fixed bin(17,0)          dcl 178 set ref 367* 420 426 483* 483 574* 574
exp_places                1            based           fixed bin(17,0)          level 2 in structure "no_in" dcl 54 in procedure
                                                                                  "cobol_repl3_expand" ref 259
exp_places                5            based           fixed bin(17,0)          level 2 in structure "numeric_lit" dcl 70
                                                                                  in procedure "cobol_repl3_expand" set ref 259*
exp_sign                  4(18)        based           char(1)                  level 2 in structure "numeric_lit" packed packed
                                                                                  unaligned dcl 70 in procedure "cobol_repl3_expand"
                                                                                  set ref 258*
exp_sign                  0(27)        based           char(1)                  level 2 in structure "no_in" packed packed unaligned
                                                                                  dcl 54 in procedure "cobol_repl3_expand" ref 258
extension_ptr                   000100 automatic       pointer                  dcl 52 set ref 251 257 258 259 260 261 262 263 263
                                                                                  263 266 281 288 289 289 289 293 323 343 349 350
                                                                                  350 350 353 424* 453 467 470 470 474 509 512 512
                                                                                  516 527* 556 559 559 563
file_key_info            13     000026 internal static structure                level 2 unaligned dcl 214
fixed                                                  builtin function         dcl 210 ref 323
header                                 based           structure                level 1 unaligned dcl 198 in procedure
                                                                                  "cobol_repl3_expand"
header                          000026 internal static structure                level 2 in structure "switch_type9" unaligned
                                                                                  dcl 214 in procedure "cobol_repl3_expand"
i                               000151 automatic       fixed bin(17,0)          dcl 194 set ref 238* 239*
info                      4            based           bit(8)                   level 2 in structure "alphanum_lit" packed packed
                                                                                  unaligned dcl 87 in procedure "cobol_repl3_expand"
                                                                                  set ref 287* 348* 400*
info                      4            based           bit(8)                   level 2 in structure "numeric_lit" packed packed
                                                                                  unaligned dcl 70 in procedure "cobol_repl3_expand"
                                                                                  set ref 256*
info                      0(08)        based           bit(8)                   level 2 in structure "al_in" packed packed unaligned
                                                                                  dcl 111 in procedure "cobol_repl3_expand" ref 323
inittype                               based           bit(8)                   level 2 packed packed unaligned dcl 54 ref 453 467
                                                                                  470 470 474 509 512 512 516 556 559 559 563
iw_key                   12            based           fixed bin(17,0)          level 2 dcl 6-13 ref 381
jump_index                6            based           fixed bin(17,0)          level 2 dcl 99 set ref 324*
key                       4     000010 internal static fixed bin(17,0)          initial level 2 in structure "relational_res_word"
                                                                                  dcl 145 in procedure "cobol_repl3_expand" set ref
                                                                                  393* 460* 502* 549*
key                       4            based           fixed bin(17,0)          level 2 in structure "reserved_word" dcl 99
                                                                                  in procedure "cobol_repl3_expand" set ref 323*
key                       4     000017 internal static fixed bin(17,0)          initial level 2 in structure "logical_res_word"
                                                                                  dcl 163 in procedure "cobol_repl3_expand" set ref
                                                                                  390* 430* 496* 531* 545*
keytab                          000000 constant        fixed bin(17,0)          initial array dcl 307 ref 323
length                          000026 internal static fixed bin(17,0)          initial level 3 in structure "switch_type9" dcl 214
                                                                                  in procedure "cobol_repl3_expand" set ref 383*
length                    1            based           fixed bin(17,0)          level 2 in structure "al_in" dcl 111 in procedure
                                                                                  "cobol_repl3_expand" ref 281 288 289 289 293 343
                                                                                  349 350 350 353
length                    5            based           fixed bin(17,0)          level 2 in structure "alphanum_lit" dcl 87
                                                                                  in procedure "cobol_repl3_expand" set ref 288*
                                                                                  349* 401*
line                      1            based           fixed bin(17,0)          level 2 in structure "numeric_lit" dcl 70
                                                                                  in procedure "cobol_repl3_expand" set ref 253*
line                      1            based           fixed bin(17,0)          level 2 in structure "reserved_word" dcl 99
                                                                                  in procedure "cobol_repl3_expand" set ref 319*
line                      1     000026 internal static fixed bin(17,0)          level 3 in structure "switch_type9" dcl 214
                                                                                  in procedure "cobol_repl3_expand" set ref 379*
line                      1     000017 internal static fixed bin(17,0)          initial level 2 in structure "logical_res_word"
                                                                                  dcl 163 in procedure "cobol_repl3_expand" set ref
                                                                                  386* 428* 494*
line                      1            based           fixed bin(17,0)          level 2 in structure "data_name" dcl 1-16
                                                                                  in procedure "cobol_repl3_expand" set ref 442 445*
                                                                                  583*
line                      1            based           fixed bin(17,0)          level 2 in structure "alphanum_lit" dcl 87
                                                                                  in procedure "cobol_repl3_expand" set ref 284*
                                                                                  345* 397*
line                      1     000010 internal static fixed bin(17,0)          initial level 2 in structure "relational_res_word"
                                                                                  dcl 145 in procedure "cobol_repl3_expand" set ref
                                                                                  386* 458* 500*
literal                   5            based           char(30)                 level 2 in structure "no_in" packed packed unaligned
                                                                                  dcl 54 in procedure "cobol_repl3_expand" ref 263
literal                  11            based           char(30)                 level 2 in structure "numeric_lit" packed packed
                                                                                  unaligned dcl 70 in procedure "cobol_repl3_expand"
                                                                                  set ref 263*
logical_res_word                000017 internal static structure                level 1 unaligned dcl 163 set ref 371
lrw_ptr                         000140 automatic       pointer                  dcl 182 set ref 371* 391* 432* 498* 533* 547*
mnemonic_name                          based           structure                level 1 unaligned dcl 6-13
mod                                                    builtin function         dcl 211 ref 267 294 329 354 415
name_size                14            based           fixed bin(17,0)          level 2 dcl 127 ref 413
no_entries                             based           fixed bin(17,0)          level 2 dcl 204 ref 238 450 540
no_in                                  based           structure                level 1 unaligned dcl 54
num_lits                 13            based           fixed bin(17,0)          level 2 dcl 127 ref 420 580
numeric_extension_offset               constant        fixed bin(15,0)          initial dcl 5-10 ref 413
numeric_extension_size                 constant        fixed bin(15,0)          initial dcl 5-15 ref 266
numeric_lit                            based           structure                level 1 unaligned dcl 70
numeric_literal_size                   constant        fixed bin(15,0)          initial dcl 5-8 ref 251
off                      24     000026 internal static fixed bin(17,0)          level 3 dcl 214 set ref 381*
off_status               10(15)        based           bit(1)                   level 2 packed packed unaligned dcl 6-13 ref 388
places                    4            based           fixed bin(17,0)          level 2 in structure "no_in" dcl 54 in procedure
                                                                                  "cobol_repl3_expand" ref 251 262 263 263 266
places                   10            based           fixed bin(17,0)          level 2 in structure "numeric_lit" dcl 70
                                                                                  in procedure "cobol_repl3_expand" set ref 262*
places_left               6            based           fixed bin(17,0)          level 2 in structure "numeric_lit" dcl 70
                                                                                  in procedure "cobol_repl3_expand" set ref 260*
places_left               2            based           fixed bin(17,0)          level 2 in structure "no_in" dcl 54 in procedure
                                                                                  "cobol_repl3_expand" ref 260
places_right              7            based           fixed bin(17,0)          level 2 in structure "numeric_lit" dcl 70
                                                                                  in procedure "cobol_repl3_expand" set ref 261*
places_right              3            based           fixed bin(17,0)          level 2 in structure "no_in" dcl 54 in procedure
                                                                                  "cobol_repl3_expand" ref 261
relational_res_word             000010 internal static structure                level 1 unaligned dcl 145 set ref 372
reserved_word                          based           structure                level 1 unaligned dcl 99
reserved_word_size                     constant        fixed bin(15,0)          initial dcl 5-21 ref 317 374 375
reswd_EQUAL                            constant        fixed bin(17,0)          initial dcl 8-108 ref 393
reswd_NOT                              constant        fixed bin(17,0)          initial dcl 8-144 ref 390
rrw_ptr                         000142 automatic       pointer                  dcl 183 set ref 372* 394* 462* 504* 551*
s                               000144 automatic       fixed bin(17,0)          dcl 186 set ref 270* 270 297* 297 332* 332 357* 357
                                                                                  418* 424 527
save_column                     000150 automatic       fixed bin(17,0)          dcl 191 set ref 443* 584
save_line                       000147 automatic       fixed bin(17,0)          dcl 190 set ref 442* 583
sign                      4(09)        based           char(1)                  level 2 in structure "numeric_lit" packed packed
                                                                                  unaligned dcl 70 in procedure "cobol_repl3_expand"
                                                                                  set ref 257*
sign                      0(18)        based           char(1)                  level 2 in structure "no_in" packed packed unaligned
                                                                                  dcl 54 in procedure "cobol_repl3_expand" ref 257
size                            000010 internal static fixed bin(17,0)          initial level 2 in structure "relational_res_word"
                                                                                  dcl 145 in procedure "cobol_repl3_expand" set ref
                                                                                  375* 394* 462* 504* 551*
size                                   based           fixed bin(17,0)          level 2 in structure "header" dcl 198 in procedure
                                                                                  "cobol_repl3_expand" set ref 240*
size                            000017 internal static fixed bin(17,0)          initial level 2 in structure "logical_res_word"
                                                                                  dcl 163 in procedure "cobol_repl3_expand" set ref
                                                                                  374* 391* 432* 498* 533* 547*
size                                   based           fixed bin(17,0)          level 2 in structure "alphanum_lit" dcl 87
                                                                                  in procedure "cobol_repl3_expand" set ref 281* 299
                                                                                  343* 359 396*
size                                   based           fixed bin(17,0)          level 2 in structure "numeric_lit" dcl 70
                                                                                  in procedure "cobol_repl3_expand" set ref 251* 272
size                                   based           fixed bin(17,0)          level 2 in structure "data_name" dcl 1-16
                                                                                  in procedure "cobol_repl3_expand" set ref 448*
                                                                                  538*
size                                   based           fixed bin(17,0)          level 2 in structure "reserved_word" dcl 99
                                                                                  in procedure "cobol_repl3_expand" set ref 317* 334
ss_ptrtable                            based           pointer                  array dcl 195 ref 239
ss_stack                               based           structure                level 1 unaligned dcl 204
ss_stack_ptr                           parameter       pointer                  dcl 44 ref 26 236 238 450 540
status                          000160 automatic       bit(32)                  packed unaligned dcl 4-34 set ref 240* 383* 391*
                                                                                  394* 403* 432* 448* 462* 481* 498* 504* 523* 533*
                                                                                  538* 547* 551* 570*
string                    2            based           char(256)                level 2 in structure "al_in" packed packed unaligned
                                                                                  dcl 111 in procedure "cobol_repl3_expand" ref 289
                                                                                  350
string                    6            based           char(256)                level 2 in structure "alphanum_lit" packed packed
                                                                                  unaligned dcl 87 in procedure "cobol_repl3_expand"
                                                                                  set ref 289* 350* 402*
substr                                                 builtin function         dcl 212 set ref 263* 263 289* 289 323 350* 350 402*
                                                                                  453 467 470 470 474 509 512 512 516 556 559 559
                                                                                  563
switch_type9                    000026 internal static structure                level 1 unaligned dcl 214 set ref 383 383
t1                              000146 automatic       fixed bin(17,0)          dcl 188 set ref 266* 267 270 293* 294 297 327* 329
                                                                                  332 353* 354 357 413* 415 418
template2                              based           char(1)                  array packed unaligned dcl 180 set ref 424 527
tptr1                           000152 automatic       pointer                  dcl 196 set ref 236* 239
tptr2                           000154 automatic       pointer                  dcl 197 set ref 239* 240* 240
type                      3            based           fixed bin(17,0)          level 2 in structure "alphanum_lit" dcl 87
                                                                                  in procedure "cobol_repl3_expand" set ref 286*
                                                                                  347* 399*
type                      3            based           fixed bin(17,0)          level 2 in structure "numeric_lit" dcl 70
                                                                                  in procedure "cobol_repl3_expand" set ref 255*
type                      3            based           fixed bin(17,0)          level 2 in structure "mnemonic_name" dcl 6-13
                                                                                  in procedure "cobol_repl3_expand" ref 377
type                      3            based           fixed bin(17,0)          level 2 in structure "reserved_word" dcl 99
                                                                                  in procedure "cobol_repl3_expand" set ref 321*
y                               000145 automatic       fixed bin(17,0)          dcl 187 set ref 267* 268 268* 268 270 294* 295 295*
                                                                                  295 297 329* 330 330* 330 332 354* 355 355* 355
                                                                                  357 415* 416 416* 416 418

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
cobol_afp                              defined         pointer                  dcl 3-11
cobol_analin_fileno                    defined         pointer                  dcl 3-13
cobol_cmfp                             defined         pointer                  dcl 3-21
cobol_com_fileno                       defined         pointer                  dcl 3-23
cobol_com_ptr                          defined         pointer                  dcl 3-25
cobol_curr_in                          defined         pointer                  dcl 3-53
cobol_curr_out                         defined         pointer                  dcl 3-55
cobol_dfp                              defined         pointer                  dcl 3-27
cobol_eltp                             defined         pointer                  dcl 3-19
cobol_ext_$cobol_afp                   external static pointer                  dcl 3-10
cobol_ext_$cobol_analin_fileno         external static pointer                  dcl 3-12
cobol_ext_$cobol_cmfp                  external static pointer                  dcl 3-20
cobol_ext_$cobol_com_fileno            external static pointer                  dcl 3-22
cobol_ext_$cobol_com_ptr               external static pointer                  dcl 3-24
cobol_ext_$cobol_curr_in               external static pointer                  dcl 3-52
cobol_ext_$cobol_dfp                   external static pointer                  dcl 3-26
cobol_ext_$cobol_eltp                  external static pointer                  dcl 3-18
cobol_ext_$cobol_fileno1               external static fixed bin(24,0)          dcl 3-78
cobol_ext_$cobol_hfp                   external static pointer                  dcl 3-28
cobol_ext_$cobol_lpr                   external static char(5)                  packed unaligned dcl 3-95
cobol_ext_$cobol_m1fp                  external static pointer                  dcl 3-30
cobol_ext_$cobol_m2fp                  external static pointer                  dcl 3-32
cobol_ext_$cobol_min1_fileno           external static pointer                  dcl 3-34
cobol_ext_$cobol_min2_fileno_ptr       external static pointer                  dcl 3-36
cobol_ext_$cobol_name_fileno           external static pointer                  dcl 3-38
cobol_ext_$cobol_name_fileno_ptr       external static pointer                  dcl 3-40
cobol_ext_$cobol_ntfp                  external static pointer                  dcl 3-42
cobol_ext_$cobol_options               external static char(120)                packed unaligned dcl 3-97
cobol_ext_$cobol_options_len           external static fixed bin(24,0)          dcl 3-80
cobol_ext_$cobol_pdofp                 external static pointer                  dcl 3-44
cobol_ext_$cobol_pdout_fileno          external static fixed bin(24,0)          dcl 3-82
cobol_ext_$cobol_pfp                   external static pointer                  dcl 3-46
cobol_ext_$cobol_print_fileno          external static fixed bin(24,0)          dcl 3-84
cobol_ext_$cobol_rm2fp                 external static pointer                  dcl 3-48
cobol_ext_$cobol_rmin2_fileno          external static fixed bin(24,0)          dcl 3-86
cobol_ext_$cobol_rmin2fp               external static pointer                  dcl 3-50
cobol_ext_$cobol_rwdd                  external static pointer                  dcl 3-72
cobol_ext_$cobol_rwpd                  external static pointer                  dcl 3-74
cobol_ext_$cobol_sfp                   external static pointer                  dcl 3-56
cobol_ext_$cobol_w1p                   external static pointer                  dcl 3-58
cobol_ext_$cobol_w2p                   external static pointer                  dcl 3-60
cobol_ext_$cobol_w3p                   external static pointer                  dcl 3-62
cobol_ext_$cobol_w5p                   external static pointer                  dcl 3-64
cobol_ext_$cobol_w6p                   external static pointer                  dcl 3-66
cobol_ext_$cobol_w7p                   external static pointer                  dcl 3-68
cobol_ext_$cobol_x1_fileno             external static fixed bin(24,0)          dcl 3-88
cobol_ext_$cobol_x2_fileno             external static fixed bin(24,0)          dcl 3-90
cobol_ext_$cobol_x3_fileno             external static fixed bin(24,0)          dcl 3-92
cobol_ext_$cobol_x3fp                  external static pointer                  dcl 3-70
cobol_ext_$cobol_xlast8                external static bit(1)                   packed unaligned dcl 3-100
cobol_ext_$report_exists               external static bit(1)                   packed unaligned dcl 3-102
cobol_ext_$report_first_token          external static pointer                  dcl 3-14
cobol_ext_$report_last_token           external static pointer                  dcl 3-16
cobol_fileno1                          defined         fixed bin(24,0)          dcl 3-79
cobol_hfp                              defined         pointer                  dcl 3-29
cobol_lpr                              defined         char(5)                  packed unaligned dcl 3-96
cobol_m1fp                             defined         pointer                  dcl 3-31
cobol_m2fp                             defined         pointer                  dcl 3-33
cobol_min1_fileno                      defined         pointer                  dcl 3-35
cobol_min2_fileno_ptr                  defined         pointer                  dcl 3-37
cobol_name_fileno                      defined         pointer                  dcl 3-39
cobol_name_fileno_ptr                  defined         pointer                  dcl 3-41
cobol_ntfp                             defined         pointer                  dcl 3-43
cobol_options                          defined         char(120)                packed unaligned dcl 3-98
cobol_options_len                      defined         fixed bin(24,0)          dcl 3-81
cobol_pdofp                            defined         pointer                  dcl 3-45
cobol_pdout_fileno                     defined         fixed bin(24,0)          dcl 3-83
cobol_pfp                              defined         pointer                  dcl 3-47
cobol_print_fileno                     defined         fixed bin(24,0)          dcl 3-85
cobol_rm2fp                            defined         pointer                  dcl 3-49
cobol_rmin2_fileno                     defined         fixed bin(24,0)          dcl 3-87
cobol_rmin2fp                          defined         pointer                  dcl 3-51
cobol_rwdd                             defined         pointer                  dcl 3-73
cobol_rwpd                             defined         pointer                  dcl 3-75
cobol_sfp                              defined         pointer                  dcl 3-57
cobol_swf_close                 000000 constant        entry                    external dcl 4-13
cobol_swf_get                   000000 constant        entry                    external dcl 4-9
cobol_swf_open                  000000 constant        entry                    external dcl 4-7
cobol_vdwf_close                000000 constant        entry                    external dcl 4-23
cobol_vdwf_dget                 000000 constant        entry                    external dcl 4-19
cobol_vdwf_dput                 000000 constant        entry                    external dcl 4-21
cobol_vdwf_open                 000000 constant        entry                    external dcl 4-6
cobol_vdwf_sget                 000000 constant        entry                    external dcl 4-15
cobol_vdwf_sput                 000000 constant        entry                    external dcl 4-17
cobol_w1p                              defined         pointer                  dcl 3-59
cobol_w2p                              defined         pointer                  dcl 3-61
cobol_w3p                              defined         pointer                  dcl 3-63
cobol_w5p                              defined         pointer                  dcl 3-65
cobol_w6p                              defined         pointer                  dcl 3-67
cobol_w7p                              defined         pointer                  dcl 3-69
cobol_x1_fileno                        defined         fixed bin(24,0)          dcl 3-89
cobol_x2_fileno                        defined         fixed bin(24,0)          dcl 3-91
cobol_x3_fileno                        defined         fixed bin(24,0)          dcl 3-93
cobol_x3fp                             defined         pointer                  dcl 3-71
cobol_xlast8                           defined         bit(1)                   packed unaligned dcl 3-101
curr_input                             automatic       pointer                  dcl 4-30
curr_output                            automatic       pointer                  dcl 4-31
key1                                   automatic       char(5)                  packed unaligned dcl 4-29
keyno                                  automatic       char(5)                  packed unaligned dcl 4-28
name_ptr                               automatic       pointer                  dcl 596
nlit_ptr                               automatic       pointer                  dcl 184
recsize                                automatic       fixed bin(17,0)          dcl 4-32
recsize2                               automatic       fixed bin(17,0)          dcl 4-33
report_exists                          defined         bit(1)                   packed unaligned dcl 3-103
report_first_token                     defined         pointer                  dcl 3-15
report_last_token                      defined         pointer                  dcl 3-17
reschar_2EQs                           internal static fixed bin(17,0)          initial dcl 8-286
reschar_2STARs                         internal static fixed bin(17,0)          initial dcl 8-204
reschar_EQ                             internal static fixed bin(17,0)          initial dcl 8-108
reschar_GT                             internal static fixed bin(17,0)          initial dcl 8-121
reschar_LPARENS                        internal static fixed bin(17,0)          initial dcl 8-205
reschar_LT                             internal static fixed bin(17,0)          initial dcl 8-135
reschar_MINUS                          internal static fixed bin(17,0)          initial dcl 8-201
reschar_PERIOD                         internal static fixed bin(17,0)          initial dcl 8-207
reschar_PLUS                           internal static fixed bin(17,0)          initial dcl 8-200
reschar_RPARENS                        internal static fixed bin(17,0)          initial dcl 8-206
reschar_SLASH                          internal static fixed bin(17,0)          initial dcl 8-203
reschar_STAR                           internal static fixed bin(17,0)          initial dcl 8-202
reswd_ACCEPT                           internal static fixed bin(17,0)          initial dcl 8-19
reswd_ACCESS                           internal static fixed bin(17,0)          initial dcl 8-343
reswd_ADD                              internal static fixed bin(17,0)          initial dcl 8-20
reswd_ADDRESS                          internal static fixed bin(17,0)          initial dcl 8-345
reswd_ADVANCING                        internal static fixed bin(17,0)          initial dcl 8-74
reswd_AFTER                            internal static fixed bin(17,0)          initial dcl 8-75
reswd_ALL                              internal static fixed bin(17,0)          initial dcl 8-76
reswd_ALPHABET                         internal static fixed bin(17,0)          initial dcl 8-346
reswd_ALPHABETIC                       internal static fixed bin(17,0)          initial dcl 8-77
reswd_ALPHANUMERIC                     internal static fixed bin(17,0)          initial dcl 8-78
reswd_ALPHANUMERIC_EDITED              internal static fixed bin(17,0)          initial dcl 8-79
reswd_ALSO                             internal static fixed bin(17,0)          initial dcl 8-100
reswd_ALTER                            internal static fixed bin(17,0)          initial dcl 8-22
reswd_ALTERNATE                        internal static fixed bin(17,0)          initial dcl 8-349
reswd_AND                              internal static fixed bin(17,0)          initial dcl 8-80
reswd_APPLY                            internal static fixed bin(17,0)          initial dcl 8-350
reswd_ARE                              internal static fixed bin(17,0)          initial dcl 8-128
reswd_AREA                             internal static fixed bin(17,0)          initial dcl 8-219
reswd_AREAS                            internal static fixed bin(17,0)          initial dcl 8-219
reswd_ASCENDING                        internal static fixed bin(17,0)          initial dcl 8-81
reswd_ASSIGN                           internal static fixed bin(17,0)          initial dcl 8-351
reswd_AT                               internal static fixed bin(17,0)          initial dcl 8-82
reswd_AUTHOR                           internal static fixed bin(17,0)          initial dcl 8-352
reswd_BEFORE                           internal static fixed bin(17,0)          initial dcl 8-83
reswd_BEGINNING                        internal static fixed bin(17,0)          initial dcl 8-84
reswd_BIT                              internal static fixed bin(17,0)          initial dcl 8-213
reswd_BITS                             internal static fixed bin(17,0)          initial dcl 8-213
reswd_BLANK                            internal static fixed bin(17,0)          initial dcl 8-222
reswd_BLOCK                            internal static fixed bin(17,0)          initial dcl 8-223
reswd_BOOLEAN                          internal static fixed bin(17,0)          initial dcl 8-152
reswd_BOTTOM                           internal static fixed bin(17,0)          initial dcl 8-264
reswd_BSN                              internal static fixed bin(17,0)          initial dcl 8-330
reswd_BY                               internal static fixed bin(17,0)          initial dcl 8-85
reswd_CALL                             internal static fixed bin(17,0)          initial dcl 8-23
reswd_CANCEL                           internal static fixed bin(17,0)          initial dcl 8-25
reswd_CATALOGUE_NAME                   internal static fixed bin(17,0)          initial dcl 8-322
reswd_CATALOG_NAME                     internal static fixed bin(17,0)          initial dcl 8-322
reswd_CD                               internal static fixed bin(17,0)          initial dcl 8-224
reswd_CF                               internal static fixed bin(17,0)          initial dcl 8-353
reswd_CH                               internal static fixed bin(17,0)          initial dcl 8-354
reswd_CHARACTER                        internal static fixed bin(17,0)          initial dcl 8-86
reswd_CHARACTERS                       internal static fixed bin(17,0)          initial dcl 8-86
reswd_CLOCK_UNITS                      internal static fixed bin(17,0)          initial dcl 8-355
reswd_CLOSE                            internal static fixed bin(17,0)          initial dcl 8-26
reswd_COBOL                            internal static fixed bin(17,0)          initial dcl 8-209
reswd_CODE                             internal static fixed bin(17,0)          initial dcl 8-356
reswd_CODE_SET                         internal static fixed bin(17,0)          initial dcl 8-314
reswd_COLLATING                        internal static fixed bin(17,0)          initial dcl 8-357
reswd_COLUMN                           internal static fixed bin(17,0)          initial dcl 8-358
reswd_COMMA                            internal static fixed bin(17,0)          initial dcl 8-359
reswd_COMMUNICATION                    internal static fixed bin(17,0)          initial dcl 8-225
reswd_COMP                             internal static fixed bin(17,0)          initial dcl 8-113
reswd_COMPUTATIONAL                    internal static fixed bin(17,0)          initial dcl 8-113
reswd_COMPUTATIONAL_1                  internal static fixed bin(17,0)          initial dcl 8-233
reswd_COMPUTATIONAL_2                  internal static fixed bin(17,0)          initial dcl 8-235
reswd_COMPUTATIONAL_3                  internal static fixed bin(17,0)          initial dcl 8-231
reswd_COMPUTATIONAL_4                  internal static fixed bin(17,0)          initial dcl 8-227
reswd_COMPUTATIONAL_5                  internal static fixed bin(17,0)          initial dcl 8-229
reswd_COMPUTATIONAL_6                  internal static fixed bin(17,0)          initial dcl 8-308
reswd_COMPUTATIONAL_7                  internal static fixed bin(17,0)          initial dcl 8-305
reswd_COMPUTATIONAL_8                  internal static fixed bin(17,0)          initial dcl 8-448
reswd_COMPUTE                          internal static fixed bin(17,0)          initial dcl 8-57
reswd_COMP_1                           internal static fixed bin(17,0)          initial dcl 8-233
reswd_COMP_2                           internal static fixed bin(17,0)          initial dcl 8-235
reswd_COMP_3                           internal static fixed bin(17,0)          initial dcl 8-231
reswd_COMP_4                           internal static fixed bin(17,0)          initial dcl 8-227
reswd_COMP_5                           internal static fixed bin(17,0)          initial dcl 8-229
reswd_COMP_6                           internal static fixed bin(17,0)          initial dcl 8-308
reswd_COMP_7                           internal static fixed bin(17,0)          initial dcl 8-305
reswd_COMP_8                           internal static fixed bin(17,0)          initial dcl 8-448
reswd_CONFIGURATION                    internal static fixed bin(17,0)          initial dcl 8-360
reswd_CONSTANT                         internal static fixed bin(17,0)          initial dcl 8-237
reswd_CONTAINS                         internal static fixed bin(17,0)          initial dcl 8-238
reswd_CONTROL                          internal static fixed bin(17,0)          initial dcl 8-362
reswd_CONTROLS                         internal static fixed bin(17,0)          initial dcl 8-363
reswd_CONVERSION                       internal static fixed bin(17,0)          initial dcl 8-361
reswd_COPY                             internal static fixed bin(17,0)          initial dcl 8-364
reswd_CORR                             internal static fixed bin(17,0)          initial dcl 8-365
reswd_CORRESPONDING                    internal static fixed bin(17,0)          initial dcl 8-365
reswd_COUNT                            internal static fixed bin(17,0)          initial dcl 8-88
reswd_CURRENCY                         internal static fixed bin(17,0)          initial dcl 8-367
reswd_DATA                             internal static fixed bin(17,0)          initial dcl 8-216
reswd_DATE                             internal static fixed bin(17,0)          initial dcl 8-90
reswd_DATE_COMPILED                    internal static fixed bin(17,0)          initial dcl 8-369
reswd_DATE_WRITTEN                     internal static fixed bin(17,0)          initial dcl 8-370
reswd_DAY                              internal static fixed bin(17,0)          initial dcl 8-91
reswd_DAY_OF_WEEK                      internal static fixed bin(17,0)          initial dcl 8-317
reswd_DE                               internal static fixed bin(17,0)          initial dcl 8-371
reswd_DEBUGGING                        internal static fixed bin(17,0)          initial dcl 8-92
reswd_DEBUG_CONTENTS                   internal static fixed bin(17,0)          initial dcl 8-372
reswd_DEBUG_ITEM                       internal static fixed bin(17,0)          initial dcl 8-373
reswd_DEBUG_LINE                       internal static fixed bin(17,0)          initial dcl 8-374
reswd_DEBUG_NAME                       internal static fixed bin(17,0)          initial dcl 8-379
reswd_DEBUG_SUB_1                      internal static fixed bin(17,0)          initial dcl 8-375
reswd_DEBUG_SUB_2                      internal static fixed bin(17,0)          initial dcl 8-376
reswd_DEBUG_SUB_3                      internal static fixed bin(17,0)          initial dcl 8-377
reswd_DECIMAL_POINT                    internal static fixed bin(17,0)          initial dcl 8-380
reswd_DECLARATIVES                     internal static fixed bin(17,0)          initial dcl 8-93
reswd_DEFAULT                          internal static fixed bin(17,0)          initial dcl 8-312
reswd_DELETE                           internal static fixed bin(17,0)          initial dcl 8-40
reswd_DELIMITED                        internal static fixed bin(17,0)          initial dcl 8-94
reswd_DELIMITER                        internal static fixed bin(17,0)          initial dcl 8-95
reswd_DEPENDING                        internal static fixed bin(17,0)          initial dcl 8-96
reswd_DESCENDING                       internal static fixed bin(17,0)          initial dcl 8-97
reswd_DESTINATION                      internal static fixed bin(17,0)          initial dcl 8-241
reswd_DETAIL                           internal static fixed bin(17,0)          initial dcl 8-381
reswd_DISABLE                          internal static fixed bin(17,0)          initial dcl 8-58
reswd_DISPLAY                          internal static fixed bin(17,0)          initial dcl 8-59
reswd_DIVIDE                           internal static fixed bin(17,0)          initial dcl 8-27
reswd_DIVISION                         internal static fixed bin(17,0)          initial dcl 8-98
reswd_DOWN                             internal static fixed bin(17,0)          initial dcl 8-99
reswd_DUPLICATES                       internal static fixed bin(17,0)          initial dcl 8-252
reswd_DYNAMIC                          internal static fixed bin(17,0)          initial dcl 8-185
reswd_EGI                              internal static fixed bin(17,0)          initial dcl 8-260
reswd_ELSE                             internal static fixed bin(17,0)          initial dcl 8-100
reswd_EMI                              internal static fixed bin(17,0)          initial dcl 8-102
reswd_ENABLE                           internal static fixed bin(17,0)          initial dcl 8-60
reswd_END                              internal static fixed bin(17,0)          initial dcl 8-103
reswd_ENDING                           internal static fixed bin(17,0)          initial dcl 8-104
reswd_END_OF_PAGE                      internal static fixed bin(17,0)          initial dcl 8-105
reswd_ENTER                            internal static fixed bin(17,0)          initial dcl 8-61
reswd_ENVIRONMENT                      internal static fixed bin(17,0)          initial dcl 8-382
reswd_EOP                              internal static fixed bin(17,0)          initial dcl 8-105
reswd_EQUALS                           internal static fixed bin(17,0)          initial dcl 8-108
reswd_ERROR                            internal static fixed bin(17,0)          initial dcl 8-21
reswd_ESI                              internal static fixed bin(17,0)          initial dcl 8-112
reswd_EVERY                            internal static fixed bin(17,0)          initial dcl 8-384
reswd_EXAMINE                          internal static fixed bin(17,0)          initial dcl 8-67
reswd_EXCEEDS                          internal static fixed bin(17,0)          initial dcl 8-121
reswd_EXCEPTION                        internal static fixed bin(17,0)          initial dcl 8-115
reswd_EXIT                             internal static fixed bin(17,0)          initial dcl 8-30
reswd_EXOR                             internal static fixed bin(17,0)          initial dcl 8-442
reswd_EXTEND                           internal static fixed bin(17,0)          initial dcl 8-239
reswd_EXTERNAL                         internal static fixed bin(17,0)          initial dcl 8-315
reswd_FD                               internal static fixed bin(17,0)          initial dcl 8-242
reswd_FILE                             internal static fixed bin(17,0)          initial dcl 8-116
reswd_FILES                            internal static fixed bin(17,0)          initial dcl 8-299
reswd_FILE_CONTROL                     internal static fixed bin(17,0)          initial dcl 8-385
reswd_FILLER                           internal static fixed bin(17,0)          initial dcl 8-243
reswd_FINAL                            internal static fixed bin(17,0)          initial dcl 8-387
reswd_FIRST                            internal static fixed bin(17,0)          initial dcl 8-117
reswd_FLR                              internal static fixed bin(17,0)          initial dcl 8-296
reswd_FOOTING                          internal static fixed bin(17,0)          initial dcl 8-388
reswd_FOR                              internal static fixed bin(17,0)          initial dcl 8-118
reswd_FROM                             internal static fixed bin(17,0)          initial dcl 8-119
reswd_GENERATE                         internal static fixed bin(17,0)          initial dcl 8-62
reswd_GIVING                           internal static fixed bin(17,0)          initial dcl 8-120
reswd_GO                               internal static fixed bin(17,0)          initial dcl 8-32
reswd_GREATER                          internal static fixed bin(17,0)          initial dcl 8-121
reswd_GROUP                            internal static fixed bin(17,0)          initial dcl 8-390
reswd_HEADING                          internal static fixed bin(17,0)          initial dcl 8-389
reswd_HIGH_VALUE                       internal static fixed bin(17,0)          initial dcl 8-244
reswd_HIGH_VALUES                      internal static fixed bin(17,0)          initial dcl 8-244
reswd_HOLD                             internal static fixed bin(17,0)          initial dcl 8-63
reswd_IDENTIFICATION                   internal static fixed bin(17,0)          initial dcl 8-393
reswd_IDS_II                           internal static fixed bin(17,0)          initial dcl 8-334
reswd_IF                               internal static fixed bin(17,0)          initial dcl 8-64
reswd_IN                               internal static fixed bin(17,0)          initial dcl 8-107
reswd_INDEX                            internal static fixed bin(17,0)          initial dcl 8-246
reswd_INDEXED                          internal static fixed bin(17,0)          initial dcl 8-247
reswd_INDICATE                         internal static fixed bin(17,0)          initial dcl 8-394
reswd_INITIAL                          internal static fixed bin(17,0)          initial dcl 8-124
reswd_INITIALIZE                       internal static fixed bin(17,0)          initial dcl 8-31
reswd_INITIATE                         internal static fixed bin(17,0)          initial dcl 8-34
reswd_INPUT                            internal static fixed bin(17,0)          initial dcl 8-125
reswd_INPUT_OUTPUT                     internal static fixed bin(17,0)          initial dcl 8-130
reswd_INSPECT                          internal static fixed bin(17,0)          initial dcl 8-35
reswd_INSTALLATION                     internal static fixed bin(17,0)          initial dcl 8-395
reswd_INTERCHANGE                      internal static fixed bin(17,0)          initial dcl 8-318
reswd_INTO                             internal static fixed bin(17,0)          initial dcl 8-126
reswd_INVALID                          internal static fixed bin(17,0)          initial dcl 8-127
reswd_IS                               internal static fixed bin(17,0)          initial dcl 8-128
reswd_I_O                              internal static fixed bin(17,0)          initial dcl 8-130
reswd_I_O_CONTROL                      internal static fixed bin(17,0)          initial dcl 8-392
reswd_JUST                             internal static fixed bin(17,0)          initial dcl 8-248
reswd_JUSTIFIED                        internal static fixed bin(17,0)          initial dcl 8-248
reswd_KEY                              internal static fixed bin(17,0)          initial dcl 8-132
reswd_KEYED                            internal static fixed bin(17,0)          initial dcl 8-332
reswd_LABEL                            internal static fixed bin(17,0)          initial dcl 8-133
reswd_LAST                             internal static fixed bin(17,0)          initial dcl 8-397
reswd_LEADING                          internal static fixed bin(17,0)          initial dcl 8-134
reswd_LEFT                             internal static fixed bin(17,0)          initial dcl 8-250
reswd_LENGTH                           internal static fixed bin(17,0)          initial dcl 8-251
reswd_LESS                             internal static fixed bin(17,0)          initial dcl 8-135
reswd_LIMIT                            internal static fixed bin(17,0)          initial dcl 8-401
reswd_LIMITS                           internal static fixed bin(17,0)          initial dcl 8-402
reswd_LINAGE                           internal static fixed bin(17,0)          initial dcl 8-403
reswd_LINAGE_COUNTER                   internal static fixed bin(17,0)          initial dcl 8-404
reswd_LINE                             internal static fixed bin(17,0)          initial dcl 8-137
reswd_LINES                            internal static fixed bin(17,0)          initial dcl 8-137
reswd_LINE_COUNTER                     internal static fixed bin(17,0)          initial dcl 8-405
reswd_LINKAGE                          internal static fixed bin(17,0)          initial dcl 8-253
reswd_LOCK                             internal static fixed bin(17,0)          initial dcl 8-139
reswd_LOW_VALUE                        internal static fixed bin(17,0)          initial dcl 8-254
reswd_LOW_VALUES                       internal static fixed bin(17,0)          initial dcl 8-254
reswd_MEMORY                           internal static fixed bin(17,0)          initial dcl 8-407
reswd_MERGE                            internal static fixed bin(17,0)          initial dcl 8-33
reswd_MESSAGE                          internal static fixed bin(17,0)          initial dcl 8-140
reswd_MODE                             internal static fixed bin(17,0)          initial dcl 8-256
reswd_MODULES                          internal static fixed bin(17,0)          initial dcl 8-408
reswd_MOVE                             internal static fixed bin(17,0)          initial dcl 8-36
reswd_MULTIPLE                         internal static fixed bin(17,0)          initial dcl 8-409
reswd_MULTIPLY                         internal static fixed bin(17,0)          initial dcl 8-28
reswd_NATIVE                           internal static fixed bin(17,0)          initial dcl 8-303
reswd_NEGATIVE                         internal static fixed bin(17,0)          initial dcl 8-141
reswd_NEXT                             internal static fixed bin(17,0)          initial dcl 8-142
reswd_NO                               internal static fixed bin(17,0)          initial dcl 8-143
reswd_NUMBER                           internal static fixed bin(17,0)          initial dcl 8-410
reswd_NUMERIC                          internal static fixed bin(17,0)          initial dcl 8-145
reswd_NUMERIC_EDITED                   internal static fixed bin(17,0)          initial dcl 8-146
reswd_OBJECT                           internal static fixed bin(17,0)          initial dcl 8-307
reswd_OBJECT_COMPUTER                  internal static fixed bin(17,0)          initial dcl 8-411
reswd_OCCURS                           internal static fixed bin(17,0)          initial dcl 8-257
reswd_OF                               internal static fixed bin(17,0)          initial dcl 8-147
reswd_OFF                              internal static fixed bin(17,0)          initial dcl 8-413
reswd_OMITTED                          internal static fixed bin(17,0)          initial dcl 8-221
reswd_ON                               internal static fixed bin(17,0)          initial dcl 8-148
reswd_OPEN                             internal static fixed bin(17,0)          initial dcl 8-37
reswd_OPTIONAL                         internal static fixed bin(17,0)          initial dcl 8-415
reswd_OR                               internal static fixed bin(17,0)          initial dcl 8-149
reswd_ORGANIZATION                     internal static fixed bin(17,0)          initial dcl 8-199
reswd_OUTPUT                           internal static fixed bin(17,0)          initial dcl 8-151
reswd_OVERFLOW                         internal static fixed bin(17,0)          initial dcl 8-24
reswd_PAGE                             internal static fixed bin(17,0)          initial dcl 8-153
reswd_PAGE_COUNTER                     internal static fixed bin(17,0)          initial dcl 8-417
reswd_PERFORM                          internal static fixed bin(17,0)          initial dcl 8-38
reswd_PF                               internal static fixed bin(17,0)          initial dcl 8-418
reswd_PH                               internal static fixed bin(17,0)          initial dcl 8-419
reswd_PIC                              internal static fixed bin(17,0)          initial dcl 8-258
reswd_PICTURE                          internal static fixed bin(17,0)          initial dcl 8-258
reswd_PLUS                             internal static fixed bin(17,0)          initial dcl 8-420
reswd_POINTER                          internal static fixed bin(17,0)          initial dcl 8-154
reswd_POSITION                         internal static fixed bin(17,0)          initial dcl 8-421
reswd_POSITIVE                         internal static fixed bin(17,0)          initial dcl 8-155
reswd_PRINTING                         internal static fixed bin(17,0)          initial dcl 8-399
reswd_PROCEDURE                        internal static fixed bin(17,0)          initial dcl 8-156
reswd_PROCEDURES                       internal static fixed bin(17,0)          initial dcl 8-157
reswd_PROCEED                          internal static fixed bin(17,0)          initial dcl 8-158
reswd_PROCESS                          internal static fixed bin(17,0)          initial dcl 8-65
reswd_PROCESSING                       internal static fixed bin(17,0)          initial dcl 8-159
reswd_PROCESS_AREA                     internal static fixed bin(17,0)          initial dcl 8-320
reswd_PROGRAM                          internal static fixed bin(17,0)          initial dcl 8-160
reswd_PROGRAM_ID                       internal static fixed bin(17,0)          initial dcl 8-422
reswd_PURGE                            internal static fixed bin(17,0)          initial dcl 8-72
reswd_QUEUE                            internal static fixed bin(17,0)          initial dcl 8-261
reswd_QUOTE                            internal static fixed bin(17,0)          initial dcl 8-262
reswd_QUOTES                           internal static fixed bin(17,0)          initial dcl 8-262
reswd_RANDOM                           internal static fixed bin(17,0)          initial dcl 8-161
reswd_RD                               internal static fixed bin(17,0)          initial dcl 8-423
reswd_READ                             internal static fixed bin(17,0)          initial dcl 8-39
reswd_RECEIVE                          internal static fixed bin(17,0)          initial dcl 8-41
reswd_RECORD                           internal static fixed bin(17,0)          initial dcl 8-162
reswd_RECORDING                        internal static fixed bin(17,0)          initial dcl 8-265
reswd_RECORDS                          internal static fixed bin(17,0)          initial dcl 8-215
reswd_REDEFINES                        internal static fixed bin(17,0)          initial dcl 8-266
reswd_REEL                             internal static fixed bin(17,0)          initial dcl 8-163
reswd_REFERENCES                       internal static fixed bin(17,0)          initial dcl 8-164
reswd_RELATIVE                         internal static fixed bin(17,0)          initial dcl 8-182
reswd_RELEASE                          internal static fixed bin(17,0)          initial dcl 8-42
reswd_REMAINDER                        internal static fixed bin(17,0)          initial dcl 8-165
reswd_REMOVAL                          internal static fixed bin(17,0)          initial dcl 8-291
reswd_RENAMES                          internal static fixed bin(17,0)          initial dcl 8-267
reswd_REPLACE                          internal static fixed bin(17,0)          initial dcl 8-336
reswd_REPLACING                        internal static fixed bin(17,0)          initial dcl 8-166
reswd_REPORT                           internal static fixed bin(17,0)          initial dcl 8-268
reswd_REPORTING                        internal static fixed bin(17,0)          initial dcl 8-167
reswd_REPORTS                          internal static fixed bin(17,0)          initial dcl 8-268
reswd_RERUN                            internal static fixed bin(17,0)          initial dcl 8-426
reswd_RESERVE                          internal static fixed bin(17,0)          initial dcl 8-427
reswd_RESET                            internal static fixed bin(17,0)          initial dcl 8-428
reswd_RETURN                           internal static fixed bin(17,0)          initial dcl 8-43
reswd_REVERSED                         internal static fixed bin(17,0)          initial dcl 8-168
reswd_REWIND                           internal static fixed bin(17,0)          initial dcl 8-169
reswd_REWRITE                          internal static fixed bin(17,0)          initial dcl 8-45
reswd_RF                               internal static fixed bin(17,0)          initial dcl 8-429
reswd_RH                               internal static fixed bin(17,0)          initial dcl 8-430
reswd_RIGHT                            internal static fixed bin(17,0)          initial dcl 8-270
reswd_ROUNDED                          internal static fixed bin(17,0)          initial dcl 8-170
reswd_RUN                              internal static fixed bin(17,0)          initial dcl 8-171
reswd_SA                               internal static fixed bin(17,0)          initial dcl 8-271
reswd_SAME                             internal static fixed bin(17,0)          initial dcl 8-431
reswd_SD                               internal static fixed bin(17,0)          initial dcl 8-272
reswd_SEARCH                           internal static fixed bin(17,0)          initial dcl 8-44
reswd_SECTION                          internal static fixed bin(17,0)          initial dcl 8-172
reswd_SECURITY                         internal static fixed bin(17,0)          initial dcl 8-432
reswd_SEGMENT                          internal static fixed bin(17,0)          initial dcl 8-173
reswd_SEGMENT_LIMIT                    internal static fixed bin(17,0)          initial dcl 8-433
reswd_SELECT                           internal static fixed bin(17,0)          initial dcl 8-434
reswd_SEND                             internal static fixed bin(17,0)          initial dcl 8-47
reswd_SENTENCE                         internal static fixed bin(17,0)          initial dcl 8-174
reswd_SEPARATE                         internal static fixed bin(17,0)          initial dcl 8-273
reswd_SEQUENCE                         internal static fixed bin(17,0)          initial dcl 8-425
reswd_SEQUENTIAL                       internal static fixed bin(17,0)          initial dcl 8-435
reswd_SET                              internal static fixed bin(17,0)          initial dcl 8-48
reswd_SIGN                             internal static fixed bin(17,0)          initial dcl 8-274
reswd_SIZE                             internal static fixed bin(17,0)          initial dcl 8-175
reswd_SORT                             internal static fixed bin(17,0)          initial dcl 8-66
reswd_SORT_MERGE                       internal static fixed bin(17,0)          initial dcl 8-436
reswd_SOURCE                           internal static fixed bin(17,0)          initial dcl 8-275
reswd_SOURCE_COMPUTER                  internal static fixed bin(17,0)          initial dcl 8-437
reswd_SPACE                            internal static fixed bin(17,0)          initial dcl 8-210
reswd_SPACES                           internal static fixed bin(17,0)          initial dcl 8-210
reswd_SPANNED                          internal static fixed bin(17,0)          initial dcl 8-439
reswd_SPECIAL_NAMES                    internal static fixed bin(17,0)          initial dcl 8-438
reswd_SSF                              internal static fixed bin(17,0)          initial dcl 8-89
reswd_STANDARD                         internal static fixed bin(17,0)          initial dcl 8-176
reswd_STANDARD_1                       internal static fixed bin(17,0)          initial dcl 8-347
reswd_STANDARD_2                       internal static fixed bin(17,0)          initial dcl 8-226
reswd_START                            internal static fixed bin(17,0)          initial dcl 8-70
reswd_STATUS                           internal static fixed bin(17,0)          initial dcl 8-276
reswd_STOP                             internal static fixed bin(17,0)          initial dcl 8-50
reswd_STREAM                           internal static fixed bin(17,0)          initial dcl 8-328
reswd_STRING                           internal static fixed bin(17,0)          initial dcl 8-51
reswd_SUBSTITUTION                     internal static fixed bin(17,0)          initial dcl 8-338
reswd_SUBTRACT                         internal static fixed bin(17,0)          initial dcl 8-29
reswd_SUB_QUEUE_1                      internal static fixed bin(17,0)          initial dcl 8-277
reswd_SUB_QUEUE_2                      internal static fixed bin(17,0)          initial dcl 8-278
reswd_SUB_QUEUE_3                      internal static fixed bin(17,0)          initial dcl 8-279
reswd_SUM                              internal static fixed bin(17,0)          initial dcl 8-441
reswd_SUPPRESS                         internal static fixed bin(17,0)          initial dcl 8-71
reswd_SUSPEND                          internal static fixed bin(17,0)          initial dcl 8-52
reswd_SYMBOLIC                         internal static fixed bin(17,0)          initial dcl 8-280
reswd_SYNC                             internal static fixed bin(17,0)          initial dcl 8-281
reswd_SYNCHRONIZED                     internal static fixed bin(17,0)          initial dcl 8-281
reswd_TABLE                            internal static fixed bin(17,0)          initial dcl 8-283
reswd_TALLY                            internal static fixed bin(17,0)          initial dcl 8-212
reswd_TALLYING                         internal static fixed bin(17,0)          initial dcl 8-177
reswd_TAPE                             internal static fixed bin(17,0)          initial dcl 8-444
reswd_TERMINAL                         internal static fixed bin(17,0)          initial dcl 8-178
reswd_TERMINATE                        internal static fixed bin(17,0)          initial dcl 8-53
reswd_TEXT                             internal static fixed bin(17,0)          initial dcl 8-445
reswd_THAN                             internal static fixed bin(17,0)          initial dcl 8-179
reswd_THROUGH                          internal static fixed bin(17,0)          initial dcl 8-180
reswd_THRU                             internal static fixed bin(17,0)          initial dcl 8-180
reswd_TIME                             internal static fixed bin(17,0)          initial dcl 8-183
reswd_TIMES                            internal static fixed bin(17,0)          initial dcl 8-183
reswd_TO                               internal static fixed bin(17,0)          initial dcl 8-186
reswd_TOP                              internal static fixed bin(17,0)          initial dcl 8-208
reswd_TRAILING                         internal static fixed bin(17,0)          initial dcl 8-285
reswd_TRANSFORM                        internal static fixed bin(17,0)          initial dcl 8-68
reswd_TYPE                             internal static fixed bin(17,0)          initial dcl 8-446
reswd_UNEQUAL                          internal static fixed bin(17,0)          initial dcl 8-187
reswd_UNIT                             internal static fixed bin(17,0)          initial dcl 8-188
reswd_UNSTRING                         internal static fixed bin(17,0)          initial dcl 8-54
reswd_UNTIL                            internal static fixed bin(17,0)          initial dcl 8-189
reswd_UP                               internal static fixed bin(17,0)          initial dcl 8-190
reswd_UPON                             internal static fixed bin(17,0)          initial dcl 8-191
reswd_USAGE                            internal static fixed bin(17,0)          initial dcl 8-287
reswd_USE                              internal static fixed bin(17,0)          initial dcl 8-56
reswd_USING                            internal static fixed bin(17,0)          initial dcl 8-192
reswd_VALUE                            internal static fixed bin(17,0)          initial dcl 8-288
reswd_VALUES                           internal static fixed bin(17,0)          initial dcl 8-288
reswd_VARYING                          internal static fixed bin(17,0)          initial dcl 8-193
reswd_VLR                              internal static fixed bin(17,0)          initial dcl 8-218
reswd_WHEN                             internal static fixed bin(17,0)          initial dcl 8-194
reswd_WITH                             internal static fixed bin(17,0)          initial dcl 8-195
reswd_WORDS                            internal static fixed bin(17,0)          initial dcl 8-447
reswd_WORKING_STORAGE                  internal static fixed bin(17,0)          initial dcl 8-290
reswd_WRITE                            internal static fixed bin(17,0)          initial dcl 8-55
reswd_ZERO                             internal static fixed bin(17,0)          initial dcl 8-196
reswd_ZEROES                           internal static fixed bin(17,0)          initial dcl 8-196
reswd_ZEROS                            internal static fixed bin(17,0)          initial dcl 8-196
st_ptr                                 automatic       pointer                  dcl 4-42
status_word                            based           structure                level 1 packed packed unaligned dcl 4-38
template1                              based           char(500)                packed unaligned dcl 179

NAMES DECLARED BY EXPLICIT CONTEXT.
cobol_repl3_expand              000016 constant        entry                    external dcl 26
exit                            000702 constant        label                    dcl 586
exp_loop                        000216 constant        label                    dcl 420 ref 486 576
expand                          000023 constant        label                    dcl 367
expand_cleanup                  000673 constant        label                    dcl 580 ref 420
load_alit                       001026 constant        entry                    internal dcl 277 ref 470 512 559
load_all_lit                    001134 constant        entry                    internal dcl 339 ref 477 519 566
load_nlit                       000745 constant        entry                    internal dcl 247 ref 467 509 556
load_resword                    001072 constant        entry                    internal dcl 304 ref 474 516 563
unload_ss                       000703 constant        entry                    internal dcl 233 ref 450 540

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1252        1340    1203        1262
Length      1714    1203        66         340      47          52

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cobol_repl3_expand                  171 external procedure  is an external procedure.  
unload_ss                               internal procedure  shares stack frame of external procedure cobol_repl3_expand.  
load_nlit                               internal procedure  shares stack frame of external procedure cobol_repl3_expand.  
load_alit                               internal procedure  shares stack frame of external procedure cobol_repl3_expand.  
load_resword                            internal procedure  shares stack frame of external procedure cobol_repl3_expand.  
load_all_lit                            internal procedure  shares stack frame of external procedure cobol_repl3_expand.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 relational_res_word         cobol_repl3_expand
000017 logical_res_word            cobol_repl3_expand
000026 switch_type9                cobol_repl3_expand

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cobol_repl3_expand       000100 extension_ptr               cobol_repl3_expand
                         000102 cbuff                       cobol_repl3_expand
                         000134 cbuff_ptr                   cobol_repl3_expand
                         000136 cbuff_size                  cobol_repl3_expand
                         000137 exp_counter                 cobol_repl3_expand
                         000140 lrw_ptr                     cobol_repl3_expand
                         000142 rrw_ptr                     cobol_repl3_expand
                         000144 s                           cobol_repl3_expand
                         000145 y                           cobol_repl3_expand
                         000146 t1                          cobol_repl3_expand
                         000147 save_line                   cobol_repl3_expand
                         000150 save_column                 cobol_repl3_expand
                         000151 i                           cobol_repl3_expand
                         000152 tptr1                       cobol_repl3_expand
                         000154 tptr2                       cobol_repl3_expand
                         000156 dn_ptr                      cobol_repl3_expand
                         000160 status                      cobol_repl3_expand

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return_mac          mdfx1               ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cobol_swf_put

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
cobol_ext_$cobol_curr_out




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     26 000011       367 000023       369 000024       371 000026       372 000030       374 000032       375 000034
    377 000035       379 000043       380 000045       381 000047       383 000053       386 000071       387 000076
    388 000101       390 000106       391 000110       393 000124       394 000127       396 000143       397 000146
    398 000152       399 000154       400 000156       401 000157       402 000161       403 000163       405 000200
    413 000201       415 000204       416 000207       418 000212       420 000216       424 000224       426 000231
    428 000233       429 000236       430 000240       432 000242       438 000256       442 000262       443 000264
    444 000266       445 000270       448 000272       450 000307       453 000314       458 000317       459 000323
    460 000325       462 000327       467 000343       470 000350       474 000360       477 000365       481 000366
    483 000403       486 000404       494 000405       495 000411       496 000413       498 000415       500 000431
    501 000435       502 000437       504 000441       509 000455       512 000462       516 000472       519 000477
    523 000500       527 000515       531 000525       533 000530       537 000544       538 000550       540 000565
    545 000572       547 000575       549 000611       551 000614       556 000630       559 000635       563 000645
    566 000652       570 000653       574 000670       576 000672       580 000673       583 000675       584 000700
    586 000702       233 000703       236 000704       238 000711       239 000721       240 000725       241 000742
    243 000744       247 000745       251 000746       253 000752       254 000756       255 000760       256 000762
    257 000764       258 000767       259 000772       260 000774       261 000776       262 001000       263 001002
    266 001006       267 001011       268 001014       270 001017       272 001023       274 001025       277 001026
    281 001027       284 001033       285 001037       286 001041       287 001043       288 001044       289 001046
    293 001052       294 001055       295 001060       297 001063       299 001067       301 001071       304 001072
    317 001073       319 001075       320 001101       321 001103       322 001105       323 001107       324 001114
    327 001115       329 001117       330 001122       332 001125       334 001131       336 001133       339 001134
    343 001135       345 001141       346 001145       347 001147       348 001151       349 001153       350 001155
    353 001161       354 001164       355 001167       357 001172       359 001176       361 001200


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
