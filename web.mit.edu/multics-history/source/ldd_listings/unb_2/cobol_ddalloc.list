	COMPILATION LISTING OF SEGMENT cobol_ddalloc
	Compiled by: Multics PL/I Compiler, Release 31b, of April 24, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 05/24/89  1001.9 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        6*        *                                                         *
        7*        *********************************************************** */
        8 
        9 
       10 
       11 
       12 /****^  HISTORY COMMENTS:
       13*  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
       14*     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
       15*     MCR8060 cobol_ddalloc.pl1 Reformatted code to new Cobol standard.
       16*                                                   END HISTORY COMMENTS */
       17 
       18 
       19 /* Modified on 09/28/83 by FCH, [5.2...], trace added */
       20 /* Modified on 12/30/81 by FCH, [5.1-2], [4.2-2] is removed, phx11821(BUG520) */
       21 /* Modified on 10/13/81 by FCH, [5.1-1], major rewrite of redefines, BUG516, BUG513(phx11673) */
       22 /* Modified on 04/03/80 by FCH, [4.2-3], -rck does not work with odo, BUG430(TR4533) */
       23 /* Modified on 09/24/79 by FCH, [4.2-2], constant sect becomes working-storage sect */
       24 /* Modified on 08/23/79 by FCH, [4.2-1] just_right = "0"b during initialization */
       25 /* Modified on 12/28/78 by FCH, [3.0-2], fix  son_cnt */
       26 /* Modified on 05/12/78 by FCH, [3.0-1], fix incorrect unequal size diag */
       27 /* Modified since Version 3.0 */
       28 
       29 
       30 
       31 
       32 
       33 
       34 
       35 
       36 
       37 /* format: style3 */
       38 cobol_ddalloc:
       39      proc;/***.....if Trace_Bit="1"b then call ioa_("^a^a",substr(Trace_Line,1,Trace_Lev),"COBOL_DDALLOC:");/**/
       40 
       41 /*[5.1-1]*/
       42 	addr (stk (0)) -> bit32400 = "0"b;
       43 
       44 	stk.redef_ptr (1) = null ();
       45 	redef_object_offset = 1;
       46 	ddseg.next_offset = 8;
       47 
       48 	fixed_common.number_of_dd_segs = 1;
       49 	fixed_common.size_seg = record_segment;
       50 	fixed_common.size_offset = 0;
       51 
       52 /*[5.1-1]*/
       53 	hisi_slack = substr (fixed_common.compile_mode, 5, 1);
       54 
       55 	if fixed_common.sra_clauses > 0
       56 	then do i = 1 to fixed_common.sra_clauses;
       57 
       58 		same_rec_area_info.clause_no (i) = i;
       59 		same_rec_area_info.seg_num (i) = 0;
       60 		same_rec_area_info.cra_size (i) = 0;
       61 
       62 	     end;
       63 
       64 	current_fno = 0;
       65 	file_key = "00000";
       66 	procdef.section_name = fixed_common.pd_section;
       67 	reswd.jump_index = 0;
       68 	numlit.line, numlit.column = 0;
       69 	numlit.type = 2;
       70 	nonnumlit.line, nonnumlit.column = 0;
       71 	nonnumlit.type = 3;
       72 
       73 	if fixed_common.odo_info ^= "00000"
       74 	then do;					/* size routines must be generated */
       75 
       76 		procname_sw = 1;
       77 
       78 		call cobol_swf_put (cobol_ext_$cobol_m2fp, st, addr (type25), type25.size);
       79 						/* write type25 for pdstax */
       80 
       81 		if procdef.section_name
       82 		then do;
       83 
       84 			procdef.section_num = fixed_common.spec_tag_counter + 1;
       85 			procdef.proc_num = fixed_common.spec_tag_counter + 1;
       86 
       87 			call cobol_swf_put (cobol_ext_$cobol_m2fp, st, addr (procdef), procdef.size);
       88 
       89 			reswd.key = reswd_SECTION;
       90 			reswd.class = "000000000000000000110000000"b;
       91 
       92 			call put_rw_token;		/* write out SECTION key */
       93 
       94 			reswd.key = reschar_PERIOD;
       95 			reswd.class = "000100000000000000000000000"b;
       96 
       97 			call put_rw_token;		/* write out period key */
       98 
       99 			fixed_common.spec_tag_counter = procdef.proc_num;
      100 			procdef.section_name = "0"b;
      101 
      102 		     end;
      103 
      104 	     end;
      105 	else procname_sw = 0;
      106 
      107 	do i = 1 to fixed_common.file_count;
      108 
      109 	     call cobol_read_ft_ (i, ft_ptr);
      110 
      111 	     if ^file_table.sort_file
      112 	     then do;
      113 
      114 		     if ^file_table.external
      115 		     then do;
      116 
      117 			     temp = index (file_table.ifn, " ") - 1;
      118 
      119 			     if temp < 0
      120 			     then temp = 16;
      121 
      122 			     file_table.id =
      123 				substr (file_table.ifn, 1, temp) || "." || unique_chars_ (unique_bits_ ());
      124 
      125 			end;
      126 		     else file_table.id = file_table.ifn;
      127 
      128 		     call cobol_make_fsb_link_ (ft_ptr);
      129 
      130 		end;
      131 	end;
      132 
      133 /* FIRST PASS */
      134 
      135 	eof = 0;
      136 	first_name_key = fixed_common.first_dd_item;
      137 
      138 	if first_name_key = "00000"
      139 	then eof = -1;
      140 	else call cobol_ntio$dget (dn_ptr, first_name_key);
      141 
      142 	do while (eof = 0);
      143 
      144 	     if data_name.type = 12 | data_name.type = 16
      145 	     then do;
      146 
      147 		     current_fno = dn_ptr -> fd_token.file_no;
      148 
      149 		     if current_fno = 0
      150 		     then ft_ptr = null ();		/* a fatal error was encountered */
      151 		     else call cobol_read_ft_ (current_fno, ft_ptr);
      152 
      153 
      154 		     call GET;
      155 
      156 		end;
      157 
      158 	     else if data_name.type = 9
      159 	     then do;
      160 
      161 		     if data_name.level ^= 66
      162 		     then do;
      163 
      164 			     if data_name.file_num ^= current_fno
      165 			     then current_fno = 0;
      166 
      167 			     call set_size;
      168 
      169 			     if current_fno > 0
      170 			     then do;		/* processing a record description */
      171 
      172 				     temp_size = stk.nt_ptr (1) -> data_name.item_length;
      173 
      174 				     if file_table.same_rec_clause ^= 0
      175 				     then do;
      176 
      177 					     if temp_size
      178 						> same_rec_area_info.cra_size (file_table.same_rec_clause)
      179 					     then same_rec_area_info.cra_size (file_table.same_rec_clause) =
      180 						     temp_size;
      181 
      182 					end;
      183 
      184 				     if file_table.max_cra_size ^= 0
      185 				     then if temp_size ^= file_table.max_cra_size
      186 					then file_table.unequal_recs = "1"b;
      187 
      188 				     if stk.nt_ptr (1) -> data_name.variable_length
      189 				     then file_table.unequal_recs = "1"b;
      190 
      191 				     if temp_size > file_table.max_cra_size
      192 				     then file_table.max_cra_size = temp_size;
      193 
      194 				end;
      195 
      196 			end;
      197 		     else call GET;
      198 
      199 		end;
      200 	     else call GET;
      201 
      202 	end;
      203 
      204 /* SECOND PASS */
      205 
      206 	if eof = 1
      207 	then do;
      208 
      209 		eof = 0;
      210 		index_cnt = 0;
      211 
      212 		call cobol_ntio$dget (dn_ptr, first_name_key);
      213 		call cobol_ntio$sget (dn_ptr, eof);
      214 		;				/* discard SYSTEM-STATUS */
      215 		call cobol_ntio$sget (dn_ptr, eof);
      216 		;				/* discard TALLY */
      217 
      218 	     end;
      219 
      220 
      221 
      222 
      223 
      224 	do while (eof = 0);
      225 
      226 	     if data_name.type = 9
      227 	     then do;
      228 
      229 		     if data_name.level ^= 66
      230 		     then do;			/* replacement will patch renames items */
      231 
      232 			     if data_name.level = 01 | data_name.level = 77
      233 			     then do;
      234 
      235 				     odo_proc_num = 0;
      236 				     occurs_level = 0;
      237 
      238 				     if ^data_name.exp_redefining
      239 				     then do;
      240 
      241 					     if data_name.o_of_rdf
      242 					     then temp_size = data_name.max_red_size;
      243 					     else temp_size = data_name.item_length;
      244 
      245 					     if data_name.working_storage
      246 					     then do;
      247 
      248 						     cobol_$ws_charcnt = cobol_$ws_charcnt + temp_size;
      249 
      250 						     if cobol_$ws_wdoff = 0
      251 						     then cobol_$ws_wdoff =
      252 							     divide (ddseg.next_offset, 4, 35, 0);
      253 
      254 						end;
      255 
      256 					     else if data_name.linkage_section
      257 					     then do;
      258 
      259 						     cobol_$ls_charcnt = cobol_$ls_charcnt + temp_size;
      260 						     fixed_common.number_of_ls_pointers =
      261 							fixed_common.number_of_ls_pointers + 1;
      262 
      263 						end;
      264 
      265 
      266 /*[5.1-2]*/
      267 					     else if data_name.constant_section
      268 						/*[5.1-2]*/
      269 					     then cobol_$cons_charcnt = cobol_$cons_charcnt + temp_size;
      270 
      271 
      272 					end;
      273 				end;
      274 			     else call test_occurs;
      275 
      276 			     if data_name.variable_length
      277 			     then call variable_size;
      278 
      279 
      280 
      281 /*[5.1-2]*/
      282 			     if data_name.constant_section
      283 						/*[5.1-2]*/
      284 			     then do;
      285 
      286 /*[5.1-2]*/
      287 				     call cobol_IVAL (dn_ptr);
      288 
      289 /*[5.1-2]*/
      290 				     data_name.seg_num = 3000;
      291 						/*[5.1-2]*/
      292 				     curr_wd_off = con_wd_off;
      293 						/*[5.1-2]*/
      294 				     curr_char_off = (curr_wd_off * 4) - data_name.offset;
      295 						/*[5.1-2]*/
      296 				     curr_char_pos = mod (curr_char_off, 4);
      297 
      298 /*[5.1-2]*/
      299 				     if curr_char_pos > 0
      300 						/*[5.1-2]*/
      301 				     then do;
      302 
      303 /*[5.1-2]*/
      304 					     if curr_char_pos = 1
      305 					     then curr_char_pos = 3;
      306 						/*[5.1-2]*/
      307 					     else if curr_char_pos = 3
      308 					     then curr_char_pos = 1;
      309 
      310 /*[5.1-2]*/
      311 					     curr_wd_off = divide (curr_char_off, 4, 17, 0) + 1;
      312 						/*[5.1-2]*/
      313 					     curr_char_off = curr_wd_off * 4;
      314 						/*[5.1-2]*/
      315 					end;
      316 
      317 /*[5.1-2]*/
      318 				     data_name.offset = curr_char_off + curr_char_pos;
      319 						/*[5.1-2]*/
      320 				end;		/*[5.1-2]*/
      321 						/*[5.1-2]*/
      322 			     else if ^data_name.linkage_section
      323 			     then do;		/* allocate in cobol ^data.	*/
      324 
      325 				     if data_name.level = 01 | data_name.level = 77
      326 				     then do;
      327 
      328 					     if data_name.file_num ^> 0
      329 					     then do;
      330 						/* record area for file already allocated */
      331 
      332 						     if data_name.exp_redefining
      333 						     then record_offset = redef_object_offset;
      334 						     else do;
      335 
      336 							     if data_name.communication_section
      337 							     then do;
      338 
      339 								     redef_object_offset, record_offset =
      340 									cd_offsets (data_name.file_num);
      341 
      342 								end;
      343 							     else do;
      344 
      345 								     if data_name.o_of_rdf
      346 								     then temp_len =
      347 									     data_name.max_red_size;
      348 								     else temp_len =
      349 									     data_name.item_length;
      350 
      351 								     if data_name.double_word
      352 								     then temp_mod = 8;
      353 								     else if data_name.word
      354 								     then temp_mod = 4;
      355 								     else if data_name.half_word
      356 								     then temp_mod = 2;
      357 								     else temp_mod = 1;
      358 
      359 								     temp_slack =
      360 									mod (ddseg.next_offset,
      361 									temp_mod);
      362 
      363 								     if temp_slack > 0
      364 								     then record_offset =
      365 									     ddseg.next_offset
      366 									     + temp_mod - temp_slack;
      367 								     else record_offset =
      368 									     ddseg.next_offset;
      369 
      370 								     ddseg.next_offset =
      371 									record_offset + temp_len;
      372 
      373 								     if data_name.o_of_rdf
      374 								     then redef_object_offset =
      375 									     record_offset;
      376 
      377 								end;
      378 
      379 							end;
      380 
      381 						end;
      382 
      383 					     else if ft_ptr ^= null ()
      384 					     then record_offset = file_table.cra_offset;
      385 
      386 					end;
      387 
      388 				     data_name.seg_num = record_segment;
      389 				     data_name.offset = data_name.offset + record_offset;
      390 
      391 				     if data_name.initial_ptr ^= 0
      392 				     then do;
      393 
      394 					     cobol_$value_cnt = cobol_$value_cnt + 1;
      395 
      396 					     call mc_initval_seg2;
      397 
      398 					end;
      399 				end;
      400 			end;
      401 
      402 
      403 
      404 
      405 		     if index_cnt > 0
      406 		     then do;
      407 
      408 			     temp_slack = mod (ddseg.next_offset, 8);
      409 
      410 			     if temp_slack > 0
      411 			     then ddseg.next_offset = ddseg.next_offset + 8 - temp_slack;
      412 
      413 			     do i = 1 to index_cnt;
      414 
      415 				ind_ptr = index_ptr (i);
      416 				index_name.seg_num = record_segment;
      417 				index_name.offset = ddseg.next_offset;
      418 				index_name.struc_length = occurs_info.struclength (occurs_level);
      419 				ddseg.next_offset = ddseg.next_offset + 8;
      420 				cobol_$ws_charcnt = cobol_$ws_charcnt + 8;
      421 
      422 			     end;
      423 
      424 			     index_cnt = 0;
      425 
      426 			end;
      427 		end;
      428 	     else if data_name.type = 10
      429 	     then do;				/* index-name token */
      430 
      431 		     index_cnt = index_cnt + 1;
      432 		     index_ptr (index_cnt) = dn_ptr;	/* defer allocation until following type 9 is processed */
      433 
      434 		end;
      435 
      436 	     else if data_name.type = 13
      437 	     then do;				/* cd token */
      438 
      439 		     cdtoken_ptr = dn_ptr;
      440 		     temp_slack = mod (ddseg.next_offset, 16);
      441 						/* double word align */
      442 
      443 		     if temp_slack > 0
      444 		     then record_offset, ddseg.next_offset = ddseg.next_offset + 16 - temp_slack;
      445 		     else record_offset = ddseg.next_offset;
      446 
      447 		     if cdtoken.options.input
      448 		     then do;
      449 
      450 			     dn_ptr = addr (icdhdr_type9);
      451 			     ddseg.next_offset = ddseg.next_offset + 60;
      452 			     temp = 87;
      453 
      454 			end;
      455 		     else do;
      456 
      457 			     dn_ptr = addr (ocdhdr_type9);
      458 			     ddseg.next_offset = ddseg.next_offset + 20;
      459 			     ocdhdr_type9.binary_max_station_count = cdtoken.mdest;
      460 
      461 			     call bin_to_dec (cdtoken.mdest, temp_char5, temp);
      462 
      463 			     ocdhdr_type9.max_station_count = "0000";
      464 			     substr (ocdhdr_type9.max_station_count, 5 - temp, temp) = temp_char5;
      465 			     temp = 10 + 13 * cdtoken.mdest;
      466 
      467 			end;
      468 
      469 		     data_name.offset = record_offset;
      470 
      471 		     call mc_initval_seg2;
      472 
      473 		     if cobol_$coms_wdoff = 0
      474 		     then cobol_$coms_wdoff = divide (record_offset, 4, 35, 0);
      475 
      476 		     record_offset = ddseg.next_offset; /* offset of data i.e. following header */
      477 		     cdtoken.cd_seg = record_segment;
      478 		     cd_offsets (cdtoken.cd_num), cdtoken.cd_off = record_offset;
      479 
      480 		     if cdtoken.options.initial
      481 		     then do;
      482 
      483 			     fixed_common.init_cd_seg = record_segment;
      484 			     fixed_common.init_cd_offset = record_offset;
      485 
      486 			end;
      487 
      488 		     ddseg.next_offset = ddseg.next_offset + temp;
      489 		     cobol_$coms_charcnt = cobol_$coms_charcnt + temp;
      490 		     cobol_$cd_cnt = cobol_$cd_cnt + 1;
      491 
      492 		end;
      493 
      494 	     else if data_name.type = 12 | data_name.type = 16
      495 	     then do;				/* file-name */
      496 
      497 		     name_ptr = dn_ptr;
      498 
      499 		     if fd_token.file_no > 0
      500 		     then do;
      501 
      502 			     call cobol_read_ft_ (fd_token.file_no, ft_ptr);
      503 
      504 			     file_table.locate_mode = "0"b;
      505 			     temp_slack = mod (ddseg.next_offset, 8);
      506 
      507 			     if temp_slack > 0
      508 			     then record_offset = ddseg.next_offset + 8 - temp_slack;
      509 			     else record_offset = ddseg.next_offset;
      510 
      511 			     if file_table.same_rec_clause ^= 0
      512 			     then do;
      513 
      514 				     i = file_table.same_rec_clause;
      515 
      516 				     if same_rec_area_info.seg_num (i) = 0
      517 				     then do;	/* hasn't been allocated yet */
      518 
      519 					     same_rec_area_info.seg_num (i) = record_segment;
      520 					     same_rec_area_info.offset (i) = record_offset;
      521 					     ddseg.next_offset =
      522 						record_offset + same_rec_area_info.cra_size (i);
      523 					     cobol_$fs_charcnt =
      524 						cobol_$fs_charcnt + same_rec_area_info.cra_size (i);
      525 
      526 					end;
      527 
      528 				     file_table.cra_seg = same_rec_area_info.seg_num (i);
      529 				     file_table.cra_offset = same_rec_area_info.offset (i);
      530 
      531 				end;
      532 			     else do;
      533 
      534 				     file_table.cra_seg = record_segment;
      535 				     file_table.cra_offset = record_offset;
      536 				     ddseg.next_offset = record_offset + file_table.max_cra_size;
      537 				     cobol_$fs_charcnt = cobol_$fs_charcnt + file_table.max_cra_size;
      538 
      539 				end;
      540 
      541 			     if cobol_$fs_wdoff = 0
      542 			     then cobol_$fs_wdoff = divide (file_table.cra_offset, 4, 35, 0);
      543 			end;
      544 
      545 		     call set_file_table;
      546 
      547 		end;
      548 
      549 
      550 
      551 	     call cobol_ntio$sget (dn_ptr, eof);
      552 	     ;
      553 
      554 	end;
      555 
      556 	if procname_sw > 0
      557 	then do;					/* output END COBOL. minpral */
      558 
      559 		reswd.key = reswd_END;
      560 		reswd.class = "000100010000100000010000000"b;
      561 
      562 		call put_rw_token;
      563 
      564 		reswd.key = reswd_COBOL;
      565 		reswd.class = "000010000000000000010000000"b;
      566 
      567 		call put_rw_token;
      568 
      569 		reswd.key = reschar_PERIOD;
      570 		reswd.class = "000100000000000000000000000"b;
      571 
      572 		call put_rw_token;
      573 
      574 	     end;
      575 
      576 	con_wd_off = con_wd_off + 1;
      577 	cobol_$cobol_data_wd_off = cobol_$cobol_data_wd_off + divide (ddseg.next_offset, 4, 35, 0) + 1;
      578 
      579 	if cobol_$coms_wdoff = 0
      580 	then cobol_$coms_wdoff = divide (ddseg.next_offset, 4, 35, 0);
      581 	if cobol_$ws_wdoff = 0
      582 	then cobol_$ws_wdoff = cobol_$coms_wdoff;
      583 	if cobol_$fs_wdoff = 0
      584 	then cobol_$fs_wdoff = cobol_$ws_wdoff;
      585 
      586 
      587 	call cobol_vdwf_sput (cobol_ext_$cobol_cmfp, st, addr (ddseg), ddseg_size, fixed_common.seg_info);
      588 
      589 	return;
      590 
      591 
      592 
      593 set_file_table:
      594      proc;
      595 
      596 	if (file_table.variable_recs | file_table.spanned_recs)
      597 	     | (^file_table.fixed_recs & (file_table.unequal_recs | file_table.rec_do))
      598 	then do;
      599 
      600 		file_table.record_format = file_table.record_format + 100;
      601 		file_table.variable = "1"b;
      602 
      603 		if file_table.rec_max > 0
      604 		then if file_table.rec_min = 0
      605 		     then call issue_file_diag (warn_MIN_RECSIZE_MISSING);
      606 
      607 	     end;
      608 
      609 	if file_table.rec_max > 0
      610 	then do;					/* RECORD CONTAINS specified */
      611 
      612 		if ^file_table.rec_do
      613 		then if file_table.rec_max ^= file_table.max_cra_size
      614 		     then do;
      615 
      616 			     call issue_file_diag (warn_RECSIZE_INCONSISTENT);
      617 
      618 			     if file_table.rec_max > file_table.max_cra_size
      619 			     then do;
      620 
      621 				     call issue_file_diag (obs_CRASIZE_ADJUSTED);
      622 
      623 				     file_table.max_cra_size = file_table.rec_max;
      624 
      625 				end;
      626 			     else do;
      627 
      628 				     call issue_file_diag (obs_RECSIZE_ADJUSTED);
      629 
      630 				     file_table.rec_max = file_table.max_cra_size;
      631 
      632 				end;
      633 			end;
      634 	     end;
      635 
      636 	if file_table.device = 5
      637 	then do;					/* TAPE */
      638 
      639 		if file_table.max_cra_size < 18
      640 		then do;
      641 
      642 			call issue_file_diag (warn_RECSIZE_TOO_SMALL);
      643 			call issue_file_diag (obs_RECSIZE_ADJUSTED);
      644 
      645 			file_table.max_cra_size = 18;
      646 
      647 		     end;
      648 		else do;
      649 
      650 			if file_table.variable_recs
      651 			then do;
      652 				if file_table.max_cra_size > 8188
      653 				then do;
      654 
      655 					call issue_file_diag (warn_VLR_RECSIZE_EXCEEDED);
      656 					call issue_file_diag (obs_RECSIZE_ADJUSTED);
      657 
      658 					file_table.max_cra_size = 8188;
      659 
      660 				     end;
      661 			     end;
      662 			else if file_table.spanned_recs
      663 			then do;
      664 
      665 				if file_table.max_cra_size > 1044480
      666 				then do;
      667 
      668 					call issue_file_diag (warn_SPANNED_RECSIZE_EXCEEDED);
      669 					call issue_file_diag (obs_RECSIZE_ADJUSTED);
      670 
      671 					file_table.max_cra_size = 1044480;
      672 
      673 				     end;
      674 			     end;
      675 			else if file_table.max_cra_size > 8192
      676 			then do;			/* FLR assumed */
      677 
      678 				call issue_file_diag (warn_FLR_RECSIZE_EXCEEDED);
      679 				call issue_file_diag (obs_RECSIZE_ADJUSTED);
      680 
      681 				file_table.max_cra_size = 8192;
      682 
      683 			     end;
      684 		     end;
      685 
      686 		if file_table.block_desc = 1
      687 		then if file_table.block_max < 18
      688 		     then do;
      689 
      690 			     call issue_file_diag (warn_BLKSIZE_TOO_SMALL);
      691 			     call issue_file_diag (obs_BLKSIZE_ADJUSTED);
      692 
      693 			     file_table.block_max = 18;
      694 
      695 			end;
      696 
      697 		if file_table.block_desc = 1
      698 		then do;				/* block size given in characters */
      699 
      700 			if file_table.block_max < file_table.max_cra_size
      701 			then if ^file_table.spanned_recs
      702 			     then do;
      703 
      704 				     call issue_file_diag (warn_BLKSIZE_LESS_THAN_RECSIZE);
      705 				     call issue_file_diag (obs_BLKSIZE_ADJUSTED);
      706 
      707 				     file_table.block_max = file_table.max_cra_size;
      708 
      709 				end;
      710 			     else ;
      711 			else if file_table.fixed_recs
      712 			then do;
      713 
      714 				if mod (file_table.block_max, file_table.max_cra_size) ^= 0
      715 				then do;
      716 
      717 					call issue_file_diag (warn_BLKSIZE_NOT_MULT_OF_RECSIZE);
      718 					call issue_file_diag (obs_BLKSIZE_ADJUSTED);
      719 
      720 					file_table.block_max =
      721 					     divide (file_table.block_max, file_table.max_cra_size, 35, 0)
      722 					     * file_table.max_cra_size;
      723 
      724 				     end;
      725 
      726 			     end;
      727 		     end;
      728 	     end;
      729 	else do;					/* not TAPE */
      730 
      731 		if file_table.block_desc > 0
      732 		then call issue_file_diag (obs_BLOCKING_IGNORED);
      733 
      734 	     end;
      735 
      736 	if (file_table.block_desc = 2 & file_table.block_max > 1)
      737 	     | (file_table.block_desc = 1 & file_table.block_max > file_table.max_cra_size)
      738 	then do;
      739 
      740 		file_table.record_format = file_table.record_format + 1;
      741 		file_table.blocked = "1"b;
      742 
      743 	     end;
      744 
      745 	file_table.record_format = file_table.record_format + 1;
      746 
      747 	if file_table.device = 2 | file_table.device = 3
      748 	then do;
      749 
      750 		if file_table.max_cra_size > 80
      751 		then call issue_fd_diag (warn_REC_EXCEEDS_DEVICE_LIMIT);
      752 
      753 	     end;
      754 
      755 	else if file_table.device = 1
      756 	then do;					/* PRINTER */
      757 
      758 		if file_table.max_cra_size > 132
      759 		then call issue_fd_diag (warn_REC_EXCEEDS_DEVICE_LIMIT);
      760 
      761 	     end;
      762 
      763      end set_file_table;
      764 
      765 
      766 
      767 put_rw_token:
      768      proc;
      769 
      770 	call cobol_swf_put (cobol_ext_$cobol_m2fp, st, addr (reswd), reswd.size);
      771 
      772      end put_rw_token;
      773 
      774 
      775 
      776 set_size:
      777      proc;
      778 
      779 dcl	rec_off		fixed bin;
      780 dcl	next_rec_off	fixed bin;
      781 dcl	cur_lev		fixed bin;
      782 dcl	occ_lev		fixed bin;
      783 dcl	sign_lev		fixed bin;
      784 dcl	(n, fill)		fixed bin;
      785 
      786 dcl	code_set_sw	bit (1);
      787 dcl	sync_bits		bit (5) unal based;
      788 dcl	(comp7_sync, comp8_sync)
      789 			bit (1);
      790 
      791 dcl	(N, R)		ptr;
      792 
      793 	comp7_sync, comp8_sync = "0"b;
      794 	rec_off, next_rec_off, occ_lev, n = 0;
      795 
      796 
      797 	code_set_sw = "0"b;
      798 
      799 	if current_fno > 0
      800 	then code_set_sw = file_table.code_set_clause;
      801 
      802 	cur_lev = 1;
      803 	sign_lev = 0;
      804 	stk.son_cnt (0) = 0;
      805 	stk.level (0) = 0;
      806 	stk.offset (1) = 0;
      807 
      808 /*[5.1-1]*/
      809 	addr (stk_occurs (0)) -> bit100 = "0"b;
      810 
      811 
      812 	do while (cur_lev > 0);
      813 
      814 	     /***.....if Trace_Bit="1"b/**/
      815 	     /***.....then do;/**/
      816 	     /***.....   call ioa_("^a(^d)",substr(Trace_Line,1,Trace_Lev),cur_lev);/**/
      817 	     /***.....   Trace_Lev=Trace_Lev+3;/**/
      818 	     /***.....     end;/**/
      819 /* PUSH */
      820 
      821 	     do while (cur_lev > stk.level (n));
      822 
      823 
      824 		n = n + 1;
      825 		/***.....   if Trace_Bit="1"b then call ioa_("^a(^d)^p",substr(Trace_Line,1,Trace_Lev),n,N);/**/
      826 
      827 		stk.son_cnt (n), stk.init_slack (n) = 0;
      828 		stk.son_cnt (n - 1) = stk.son_cnt (n - 1) + 1;
      829 		stk.nt_ptr (n) = dn_ptr;
      830 		addr (data_name.bitt) -> sync_bits = ""b;
      831 		stk.level (n) = data_name.level;
      832 
      833 		if data_name.non_elementary
      834 		then if n = 1
      835 		     then do;
      836 
      837 			     data_name.double_word = "1"b;
      838 			     stk.bound (1) = 16;
      839 
      840 			end;
      841 		     else do;			/* non-elementary with level greater than 01 */
      842 
      843 			     data_name.byte = "1"b;
      844 			     stk.bound (n) = 2;
      845 
      846 			end;
      847 
      848 		else do;				/* elementary */
      849 
      850 			if code_set_sw
      851 			then if ^data_name.display | (data_name.item_signed & ^data_name.sign_separate)
      852 			     then call issue_diag (warn_CODE_SET_VIOLATION, dn_ptr);
      853 
      854 			if data_name.numeric & data_name.item_signed
      855 			then if n > sign_lev
      856 			     then sign_lev = n;
      857 
      858 			stk.size (n) = data_name.item_length * 2;
      859 
      860 			if data_name.display | data_name.comp | data_name.ascii_packed_dec
      861 			then do;
      862 
      863 				data_name.byte = "1"b;
      864 				stk.bound (n) = 2;
      865 
      866 			     end;
      867 			else if data_name.ascii_packed_dec_h
      868 			then do;
      869 
      870 				data_name.ascii_packed_dec = "1"b;
      871 
      872 				if data_name.sync | comp8_sync
      873 				then do;		/* either this or last one */
      874 
      875 					data_name.byte = "1"b;
      876 					stk.bound (n) = 2;
      877 
      878 				     end;
      879 				else do;
      880 
      881 					data_name.bitt = "1"b;
      882 					stk.bound (n) = 1;
      883 
      884 				     end;
      885 
      886 				stk.size (n) = data_name.places_left + data_name.places_right;
      887 
      888 				if data_name.item_signed
      889 				then do;
      890 
      891 					stk.size (n) = stk.size (n) + 1;
      892 					data_name.sign_type = "100"b;
      893 						/* leading separate */
      894 
      895 				     end;
      896 			     end;
      897 
      898 			else if data_name.bin_18
      899 			then do;
      900 
      901 				if data_name.sync
      902 				then do;
      903 
      904 					data_name.word = "1"b;
      905 					stk.bound (n) = 8;
      906 					comp7_sync = "1"b;
      907 						/* indicate offset adj needed */
      908 					stk.size (n) = 8;
      909 						/* allocate full word */
      910 
      911 				     end;
      912 				else do;
      913 
      914 					data_name.half_word = "1"b;
      915 					stk.bound (n) = 4;
      916 
      917 				     end;
      918 			     end;
      919 			else if data_name.usage_index
      920 			then do;
      921 
      922 				data_name.double_word = "1"b;
      923 				stk.bound (n) = 16;
      924 
      925 			     end;
      926 			else do;			/* bin_36 or anything else	*/
      927 
      928 				data_name.word = "1"b;
      929 				stk.bound (n) = 8;
      930 
      931 			     end;
      932 
      933 			if n = 1
      934 			then do;
      935 
      936 				addr (data_name.bitt) -> sync_bits = ""b;
      937 						/* undo any previous determination */
      938 				data_name.double_word = "1"b;
      939 						/* in case of redefinition or argument usage */
      940 				stk.bound (n) = 16;
      941 
      942 			     end;
      943 		     end;
      944 
      945 		if ^data_name.non_elementary & (data_name.level = 01 | data_name.level = 77)
      946 		then do;
      947 
      948 			cur_lev = 0;
      949 			call GET;
      950 
      951 		     end;
      952 		else do;
      953 
      954 
      955 
      956 
      957 			stk.max_bound (n) = stk.bound (n);
      958 
      959 			if data_name.exp_redefining
      960 			then do;
      961 
      962 /*[3.0-2]*/
      963 				stk.son_cnt (n - 1) = stk.son_cnt (n - 1) - 1;
      964 				rec_off = stk.redef_offset (n);
      965 
      966 			     end;
      967 
      968 /*[5.1-1]*/
      969 			else stk.redef_offset (n) = rec_off;
      970 
      971 
      972 
      973 
      974 
      975 
      976 
      977 
      978 			temp_mod = mod (rec_off, stk.bound (n));
      979 
      980 			if temp_mod > 0
      981 			then do;
      982 
      983 /*[5.1-1]*/
      984 				stk.init_slack (n) = stk.bound (n) - temp_mod;
      985 						/*[5.1-1]*/
      986 				rec_off = rec_off + stk.init_slack (n);
      987 
      988 				if data_name.sync
      989 				then temp = obs_EXPLICIT_SYNC;
      990 				else if comp8_sync
      991 				then temp = obs_PREVIOUS_SYNC;
      992 				else do;
      993 
      994 					if data_name.non_elementary
      995 					then temp = obs_IMPLICIT_SYNC_FOR_GROUP;
      996 					else if data_name.display
      997 					then temp = obs_IMPLICIT_SYNC_FOR_DISPLAY;
      998 					else temp = obs_IMPLICIT_SYNC;
      999 
     1000 				     end;
     1001 
     1002 				call issue_diag (temp, dn_ptr);
     1003 
     1004 			     end;
     1005 
     1006 /*[5.1-1]*/
     1007 			if hisi_slack		/*[5.1-1]*/
     1008 			then do;
     1009 				if data_name.elementary
     1010 						/*[5.1-1]*/
     1011 				then do;
     1012 					stk.offset (n) = rec_off;
     1013 						/*[5.1-1]*/
     1014 					data_name.offset = divide (rec_off, 2, 35, 0);
     1015 						/*[5.1-1]*/
     1016 					m = n - 1;
     1017 
     1018 /*[5.1-1]*/
     1019 					if m > 0
     1020 					then call inherit_offset;
     1021 						/*[5.1-1]*/
     1022 				     end;
     1023 
     1024 /*[5.1-1]*/
     1025 			     end;			/*[5.1-1]*/
     1026 			else do;
     1027 
     1028 				stk.offset (n) = rec_off;
     1029 				data_name.offset = divide (rec_off, 2, 35, 0);
     1030 
     1031 /*[5.1-1]*/
     1032 			     end;
     1033 
     1034 			if mod (rec_off, 2) = 1
     1035 			then data_name.bit_offset = "0101"b;
     1036 			else data_name.bit_offset = "0000"b;
     1037 
     1038 
     1039 
     1040 
     1041 			stk_occurs (n) = "0"b;	/* set only for explicit occurs */
     1042 
     1043 			if data_name.occurs_ptr ^= 0
     1044 			then do;
     1045 
     1046 				stk.occ_ptr (n), occurs_ptr = addr (nt_array (data_name.occurs_ptr));
     1047 
     1048 				if occurs.dimensions > occ_lev
     1049 				then do;
     1050 
     1051 					occ_lev = occ_lev + 1;
     1052 					stk_occurs (n) = "1"b;
     1053 
     1054 					if occurs.level.max (occurs.dimensions) > 0
     1055 					then stk.max_occ (n) = occurs.level.max (occurs.dimensions);
     1056 					else stk.max_occ (n) = occurs.level.min (occurs.dimensions);
     1057 
     1058 				     end;
     1059 			     end;
     1060 
     1061 			if data_name.ascii_packed_dec_h & data_name.sync
     1062 			then comp8_sync = "1"b;	/* indicate NEXT item must be byte aligned */
     1063 			else comp8_sync = "0"b;
     1064 
     1065 			found = "0"b;
     1066 
     1067 			do while (cur_lev > 0 & ^found);
     1068 
     1069 			     call GET;
     1070 
     1071 			     if eof ^= 0
     1072 			     then cur_lev = 0;
     1073 			     else if data_name.type = 12 | data_name.type = 16
     1074 			     then cur_lev = 0;
     1075 			     else if data_name.type = 9
     1076 			     then do;
     1077 
     1078 				     if data_name.level = 01 | data_name.level = 66 | data_name.level = 77
     1079 				     then cur_lev = 0;
     1080 				     else do;
     1081 
     1082 					     found = "1"b;
     1083 					     cur_lev = data_name.level;
     1084 
     1085 					end;
     1086 
     1087 				end;
     1088 			end;
     1089 
     1090 		     end;
     1091 
     1092 		if comp7_sync
     1093 		then do;
     1094 
     1095 			stk.nt_ptr (n) -> data_name.offset = stk.nt_ptr (n) -> data_name.offset + 2;
     1096 			comp7_sync = "0"b;
     1097 
     1098 		     end;
     1099 	     end;
     1100 
     1101 	     /***.....if Trace_Bit="1"b then Trace_Lev=Trace_Lev-3;/**/
     1102 
     1103 	     do while (cur_lev <= stk.level (n) & n > 0);
     1104 		N = stk.nt_ptr (n);
     1105 		/***.....if Trace_Bit="1"b/**/
     1106 		/***..... then do;/**/
     1107 		/***.....   call ioa_("^a^a^x^d",substr(Trace_Line,1,Trace_Lev),"LEVEL:",cur_lev);/**/
     1108 		/***.....   call ioa_("^a(^d)^p",substr(Trace_Line,1,Trace_Lev),n,N);/**/
     1109 		/***.....      end;/**/
     1110 
     1111 		if N -> data_name.non_elementary
     1112 		then do;
     1113 
     1114 			temp_size = rec_off - stk.offset (n);
     1115 			temp_size = temp_size + mod (temp_size, 2);
     1116 
     1117 			N -> data_name.item_length = divide (temp_size, 2, 35, 0);
     1118 
     1119 
     1120 			if n < sign_lev
     1121 			then N -> data_name.item_signed = "1"b;
     1122 
     1123 /* contains signed data */
     1124 
     1125 			N -> data_name.son_cnt = substr (unspec (stk.son_cnt (n)), 21, 16);
     1126 
     1127 		     end;
     1128 
     1129 		else temp_size = stk.size (n);
     1130 
     1131 		if stk_occurs (n)
     1132 		then do;
     1133 
     1134 
     1135 
     1136 			temp_mod = mod (temp_size, stk.max_bound (n));
     1137 
     1138 			if temp_mod > 0
     1139 			then do;
     1140 
     1141 /*[5.1-1]*/
     1142 				fill = stk.max_bound (n) - temp_mod;
     1143 				temp_size = temp_size + fill;
     1144 
     1145 				call issue_diag (obs_IMPLICIT_SYNC_IN_ARRAY, stk.nt_ptr (n));
     1146 
     1147 			     end;			/*[5.1-1]*/
     1148 			else fill = 0;
     1149 
     1150 			occurs_ptr = stk.occ_ptr (n);
     1151 			occurs.level.struc_length (occurs.dimensions) = temp_size;
     1152 
     1153 			rec_off = rec_off + temp_size * (stk.max_occ (n) - 1);
     1154 
     1155 			if ^N -> data_name.non_elementary
     1156 			then rec_off = rec_off + temp_size;
     1157 						/* add size of one more element */
     1158 						/*[5.1-1]*/
     1159 			else rec_off = rec_off + mod (rec_off, 2) + fill;
     1160 
     1161 
     1162 /*[3.0-1]*/
     1163 			temp_size = temp_size * stk.max_occ (n);
     1164 
     1165 /*[5.1-1]*/
     1166 			if hisi_slack		/*[5.1-1]*/
     1167 			then N -> data_name.item_length = N -> data_name.item_length + divide (fill, 2, 31, 0);
     1168 						/*[5.1-1]*/
     1169 			else rec_off = rec_off - fill;
     1170 
     1171 			occ_lev = occ_lev - 1;
     1172 
     1173 		     end;
     1174 		else if ^N -> data_name.non_elementary
     1175 		then rec_off = rec_off + temp_size;
     1176 		else rec_off = rec_off + mod (rec_off, 2);
     1177 
     1178 /* integral number of bytes in all groups */
     1179 
     1180 
     1181 		stk.max_bound (n - 1) = max (stk.max_bound (n - 1), stk.max_bound (n));
     1182 
     1183 		if N -> data_name.exp_redefining
     1184 		then do;
     1185 
     1186 			R = stk.redef_ptr (n);	/*[5.1-1]*/
     1187 			temp_size = temp_size + stk.init_slack (n);
     1188 
     1189 
     1190 
     1191 
     1192 			if R ^= null ()		/* possible only if error in source */
     1193 			then if n = 1		/* level 01 */
     1194 			     then if temp_size > stk.redef_size (n)
     1195 				then if R -> data_name.file_num = 0
     1196 				     then do;
     1197 
     1198 					     call issue_diag (obs_GREATER_SIZE_REDEFINES, N);
     1199 
     1200 					     R -> data_name.max_red_size =
     1201 						max (R -> data_name.max_red_size, N -> data_name.item_length);
     1202 
     1203 					end;
     1204 
     1205 				     else ;	/* size greater,but in a file - OK */
     1206 
     1207 				else ;		/* size unequal,but not greater - OK */
     1208 
     1209 			     else do;		/* not a level 01 - an error in any case */
     1210 
     1211 				     if rec_off ^= stk.next_rec_off (n)
     1212 				     then call issue_diag (warn_UNEQUAL_SIZE_REDEFINES, stk.nt_ptr (n));
     1213 
     1214 				     if rec_off > stk.next_rec_off (n)
     1215 				     then call issue_diag (obs_ALLOC_ADJUSTED, stk.redef_ptr (n));
     1216 
     1217 				     rec_off, stk.next_rec_off (n) = max (rec_off, stk.next_rec_off (n));
     1218 
     1219 
     1220 
     1221 
     1222 				end;
     1223 
     1224 
     1225 
     1226 		     end;
     1227 
     1228 /*[5.1-1]*/
     1229 		else do;
     1230 			stk.next_rec_off (n) = rec_off;
     1231 
     1232 			stk.redef_size (n) = temp_size;
     1233 			N -> data_name.max_red_size = N -> data_name.item_length;
     1234 
     1235 			if stk_occurs (n)
     1236 			then stk.redef_ptr (n) = null ();
     1237 			else stk.redef_ptr (n) = N;
     1238 
     1239 /*[5.1-1]*/
     1240 		     end;
     1241 
     1242 		n = n - 1;
     1243 		/***.....if Trace_Bit="1"b/**/
     1244 		/***.....  then do;/**/
     1245 		/***.....   if N->data_name.bit_offset=""b then Off="BYTE OFFSET:"; else Off="DIGIT OFFSET:";/**/
     1246 		/***.....   call ioa_$nnl("^a^a^x^a^x^a^x^d^x",substr(Trace_Line,1,Trace_Lev)/**/
     1247 		/***.....                       ,"NAME:",substr(N->data_name.name,1,N->data_name.name_size)/**/
     1248 		/***.....                         ,Off,N->data_name.offset);/**/
     1249 		/***.....   call ioa_("^a^x^d","SIZE:",N->data_name.item_length);/**/
     1250 		/***.....       end;/**/
     1251 	     end;
     1252 
     1253 	end;
     1254 
     1255      end set_size;
     1256 
     1257 /*[5.1-1]*/
     1258 
     1259 
     1260 
     1261 inherit_offset:
     1262      proc;
     1263 
     1264 declare	(off, stk_off)	fixed bin,
     1265 	p		ptr;
     1266 declare	OFF		fixed bin based (p);
     1267 
     1268 	off = data_name.offset;
     1269 	stk_off = 2 * off;
     1270 
     1271 	do while ("1"b);
     1272 
     1273 	     p = addr (stk.nt_ptr (m) -> data_name.offset);
     1274 
     1275 	     if OFF < 0
     1276 	     then do;
     1277 		     OFF = off;
     1278 		     stk.offset (m) = stk_off;
     1279 		end;
     1280 	     else return;
     1281 
     1282 	     m = m - 1;
     1283 
     1284 	     if m = 0
     1285 	     then return;
     1286 
     1287 	end;
     1288 
     1289      end;
     1290 
     1291 GET:
     1292      proc;
     1293 
     1294 	call cobol_ntio$sget (dn_ptr, eof);
     1295 
     1296 	if hisi_slack & eof = 0
     1297 	then if data_name.type = 9 & data_name.non_elementary
     1298 	     then do;
     1299 		     data_name.offset = -1;
     1300 		     data_name.item_length = 0;
     1301 		end;
     1302 
     1303      end;
     1304 
     1305 /*[5.1-1]*/
     1306 
     1307 
     1308 
     1309 test_occurs:
     1310      proc;
     1311 
     1312 /* test_occurs maintains the occurs_info table and checks the current data item to see if it is
     1313*subscripted.  if it is,the OCCURS extension for the item is updated.  if the item has an
     1314*explicit OCCURS clause(rather than simply being subordinate to an OCCURring item),a
     1315*compute-subscript-word is allocated for the clause; and a new entry is added to the occurs_info
     1316*table so that items subordinate to the new OCCURS clause can be properly patched */
     1317 
     1318 start_test_occurs:
     1319 	if occurs_level = 0
     1320 	then go to test_item;			/* go if no entries in occurs_info table */
     1321 
     1322 	if data_name.level > occurs_info.level (occurs_level)
     1323 	then go to test_item;
     1324 
     1325 /* all current entries
     1326*		in occurs_info table must still apply to current item if this condition is met */
     1327 
     1328 	occurs_level = occurs_level - 1;
     1329 
     1330 	go to start_test_occurs;
     1331 
     1332 test_item:
     1333 	if data_name.subscripted = "0"b
     1334 	then return;
     1335 
     1336 /* set occurs_ptr to point to OCCURS extension for current item */
     1337 
     1338 	occurs_ptr = addr (nt_array (data_name.occurs_ptr));
     1339 
     1340 /* go to update_occ_ext if this item does not have an explicit OCCURS clause */
     1341 
     1342 	if occurs.dimensions ^> occurs_level
     1343 	then go to update_occ_ext;
     1344 
     1345 /* add new entry in occurs_info table for this item's OCCURS clause */
     1346 
     1347 	occurs_level = occurs_level + 1;
     1348 	occurs_info.level (occurs_level) = data_name.level;
     1349 	occurs_info.struclength (occurs_level) = occurs.level.struc_length (occurs.dimensions);
     1350 
     1351 /* occurs.level.struc_length of minor /* occurs.level filled by set_size,if set_size
     1352*			 is executed for this record.  Otherwise the value is left from ddsyntax */
     1353 
     1354 	if data_name.occurs_do = "0"b
     1355 	then go to update_occ_ext;
     1356 
     1357 	call odo_item;				/* generate size routine for this item */
     1358 
     1359 	if data_name.linkage_section = "1"b
     1360 	then go to link_odo;
     1361 
     1362 	odo_rec_ptr -> odo_rec.seg_no = record_segment;
     1363 	odo_rec_ptr -> odo_rec.offset_l = data_name.offset + record_offset;
     1364 
     1365 	odo_rec_ptr -> odo_rec.offset_r =
     1366 	     odo_rec_ptr -> odo_rec.offset_l
     1367 	     + divide (occurs.level.struc_length (occurs.dimensions), 2, 35, 0)
     1368 	     * (occurs.level.max (occurs.dimensions) - 1) + data_name.item_length - 1;
     1369 
     1370 	go to replace_odo_rec;
     1371 
     1372 link_odo:
     1373 	odo_rec_ptr -> odo_rec.seg_no = fixed_common.number_of_ls_pointers + 20000;
     1374 
     1375 /* add 20000 to identify link sec item */
     1376 
     1377 	odo_rec_ptr -> odo_rec.offset_l = data_name.offset;
     1378 	odo_rec_ptr -> odo_rec.offset_r =
     1379 	     data_name.offset
     1380 	     + divide (occurs.level.struc_length (occurs.dimensions), 2, 35, 0)
     1381 	     * (occurs.level.max (occurs.dimensions) - 1) + data_name.item_length - 1;
     1382 
     1383 replace_odo_rec:
     1384 	call cobol_vdwf_dput (cobol_ext_$cobol_cmfp, st, odo_rec_ptr, odo_recsize, odo_key);
     1385 
     1386 
     1387 update_occ_ext:
     1388 	do i = 1 to occurs.dimensions;
     1389 	     occurs.level.struc_length (i) = occurs_info.struclength (i);
     1390 	end;
     1391 
     1392 /*	
     1393*call cobol_vdwf_dput(cobol_ext_$cobol_name_fileno,st,dn_ptr,name_recsize,name_key);  */
     1394 
     1395      end test_occurs;
     1396 
     1397 
     1398 
     1399 
     1400 variable_size:
     1401      proc;
     1402 
     1403 /* variable_size is 
     1404*called when a variable-length item is encountered during the second pass
     1405*
     1406*(allocation pass) over the name table.  If the item has variable length because it contains an
     1407*OCCURS  DEPENDING ON item,the procedure number of the appropriate size routine is filled into
     1408*the size_rtn field in the name table entry for the variable-length item.  If the item has
     1409*variable length because it has a PICTURE  DEPENDING ON clause,its size routine is created
     1410*in the minpral-2 file.  The size routine generated for a PICTURE  DEPENDING ON item consists
     1411*of a paragraph header followed by the statement IF DO-item < 1 OR DO-item > max-item-size
     1412*DISPLAY "out-of-range depending on item" ELSE SUBTRACT DO-item FROM max-item-size GIVINGresult-field */
     1413 
     1414 /*	if ^data_name.pic_has_l then do;	*/
     1415 
     1416 	if odo_proc_num = 0
     1417 	then do;
     1418 
     1419 		fixed_common.spec_tag_counter = fixed_common.spec_tag_counter + 1;
     1420 		odo_proc_num = fixed_common.spec_tag_counter;
     1421 		odo_do_rec = data_name.do_rec;	/* save key in common of odo_rec entry for this item */
     1422 
     1423 	     end;
     1424 
     1425 	data_name.size_rtn = odo_proc_num;		/* set with procno of size rtn to be generated */
     1426 
     1427 /**/
     1428 /*	end;
     1429*/*	else do;					/* picture has L */
     1430 /*		
     1431*call gen_true_path(0);			/* generate first half of IF statement */
     1432 
     1433 /*		reswd.key = reswd_SUBTRACT;
     1434*/*		reswd.class = "100100000000000000110000000"b;
     1435*/*		
     1436*call put_rw_token;
     1437*
     1438*/*
     1439*/*		
     1440*call issue_name;
     1441*
     1442*/*
     1443*/*		reswd.key = reswd_FROM;
     1444*/*		reswd.class = "000000000000000000110000000"b;
     1445*/*		
     1446*call put_rw_token;
     1447*
     1448*/* 
     1449*/*		
     1450*call bin_to_dec(data_name.item_length,sizertn_numlit.literal,sizertn_numlit.places);
     1451*
     1452*/*		sizertn_numlit.size = numlit_size + sizertn_numlit.places;
     1453*/*		sizertn_numlit.places_left = sizertn_numlit.places;
     1454*/*		
     1455*call cobol_swf_put(cobol_ext_$cobol_m2fp,st,addr(numlit),numlit.size);
     1456*
     1457*/* 
     1458*/*		reswd.key = reswd_GIVING;
     1459*/*		reswd.class = "000000000000000000010000000"b;
     1460*/*		
     1461*call put_rw_token;
     1462*
     1463*/* 
     1464*/*		
     1465*call cobol_swf_put(cobol_ext_$cobol_m2fp,st,addr(sizedn),sizedn.size);
     1466*
     1467*/*
     1468*/*		reswd.key = reschar_PERIOD;
     1469*/*		reswd.class = "000100000000000000000000000"b;
     1470*/*		
     1471*call put_rw_token;
     1472*
     1473*/*	end;
     1474*/**/
     1475 	return;
     1476 
     1477      end variable_size;
     1478 
     1479 
     1480 
     1481 
     1482 odo_item:
     1483      proc;
     1484 
     1485 /* odo_item generates the size routine needed for an OCCURS  DEPENDING ON item.  The size routine
     1486*	generated for an OCCURS  DEPENDING ON item consists of a paragraph header followed by the
     1487*	statement IF DO-item < minimum-number-of-occurrences OR DO-item > maximum-number-of-occurrences
     1488*	DISPLAY "out-of-range depending on item" ELSE COMPUTE result-field EQUALS structure-length *
     1489*				(maximum-number-of-occurrences - DO-item). */
     1490 
     1491 	call gen_true_path (1);
     1492 
     1493 
     1494 	reswd.key = reswd_COMPUTE;
     1495 	reswd.class = "100100100000000000110000000"b;
     1496 
     1497 	call put_rw_token;
     1498 
     1499 
     1500 
     1501 	call cobol_swf_put (cobol_ext_$cobol_m2fp, st, addr (sizedn), sizedn.size);
     1502 
     1503 
     1504 	reswd.key = reswd_EQUALS;			/*[4.2-3]*/
     1505 	reswd.class = "000001100000000000011000000"b;
     1506 
     1507 	call put_rw_token;
     1508 
     1509 
     1510 	call bin_to_dec (divide (occurs.level.struc_length (occurs.dimensions), 2, 24, 0), sizertn_numlit.literal,
     1511 	     sizertn_numlit.places);
     1512 	sizertn_numlit.size = numlit_size + sizertn_numlit.places;
     1513 	sizertn_numlit.places_left = sizertn_numlit.places;
     1514 
     1515 	call cobol_swf_put (cobol_ext_$cobol_m2fp, st, addr (sizertn_numlit), sizertn_numlit.size);
     1516 
     1517 
     1518 	reswd.key = reschar_STAR;
     1519 	reswd.class = "010000000000000000000000000"b;
     1520 
     1521 	call put_rw_token;
     1522 
     1523 
     1524 	reswd.key = reschar_LPARENS;
     1525 	reswd.class = "000000000000000000000000000"b;
     1526 
     1527 	call put_rw_token;
     1528 
     1529 
     1530 
     1531 	call bin_to_dec (occurs.level.max (occurs.dimensions), sizertn_numlit.literal, sizertn_numlit.places);
     1532 
     1533 	sizertn_numlit.size = numlit_size + sizertn_numlit.places;
     1534 	sizertn_numlit.places_left = sizertn_numlit.places;
     1535 
     1536 	call cobol_swf_put (cobol_ext_$cobol_m2fp, st, addr (sizertn_numlit), sizertn_numlit.size);
     1537 
     1538 
     1539 	reswd.key = reschar_MINUS;
     1540 	reswd.class = "010000000000000000000000000"b;
     1541 
     1542 	call put_rw_token;
     1543 
     1544 
     1545 
     1546 	call issue_name;				/* write out name of DEPENDING ON item */
     1547 
     1548 
     1549 	reswd.key = reschar_RPARENS;
     1550 	reswd.class = "000000000000000000000000000"b;
     1551 
     1552 	call put_rw_token;
     1553 
     1554 
     1555 	reswd.key = reschar_PERIOD;
     1556 	reswd.class = "000100000000000000000000000"b;
     1557 
     1558 	call put_rw_token;
     1559 
     1560 
     1561 	return;
     1562 
     1563      end odo_item;
     1564 
     1565 
     1566 
     1567 gen_true_path:
     1568      proc (calling_param);
     1569 
     1570 
     1571 
     1572 /* gen_true_path generates the first part of the size routine produced for a variable-length item,
     1573*	consisting of the true path of the appropriate IF statement(see pic_l_item and odo_item). */
     1574 
     1575 
     1576 dcl	calling_param	fixed bin;
     1577 
     1578 
     1579 start_gen_true_path:				/**/
     1580 						/*	if 
     1581*calling_param = 0 then odo_key = data_name.do_rec;  /* picture has L */
     1582 						/*	else  */
     1583 	odo_key = odo_do_rec;			/* record contains depending on */
     1584 
     1585 	call cobol_vdwf_dget (cobol_ext_$cobol_cmfp, st, odo_rec_ptr, odo_recsize, odo_key);
     1586 
     1587 
     1588 	call cobol_vdwf_dget (cobol_ext_$cobol_cmfp, st, depend_ptr, common_recsize, odo_rec_ptr -> odo_rec.descr);
     1589 
     1590 
     1591 /**/
     1592 /*	if 
     1593*	calling_param = 0 then do;
     1594*
     1595*/*		fixed_common.spec_tag_counter = fixed_common.spec_tag_counter + 1;
     1596*/*		data_name.size_rtn = fixed_common.spec_tag_counter;
     1597*/*		
     1598*	call cobol_vdwf_dput(cobol_ext_$cobol_name_fileno,st,dn_ptr,name_recsize,name_key);
     1599*
     1600*/*		procdef.proc_num = fixed_common.spec_tag_counter;
     1601*/*	end;
     1602*/*	else */
     1603 
     1604 	procdef.proc_num = odo_proc_num;
     1605 
     1606 	call cobol_swf_put (cobol_ext_$cobol_m2fp, st, addr (procdef), procdef.size);
     1607 						/* write paragraph name */
     1608 
     1609 /*[4.2-3]*/
     1610 	reswd.key = reschar_PERIOD;
     1611 	reswd.class = "0001"b;			/*[4.2-3]*/
     1612 
     1613 	call put_rw_token;
     1614 
     1615 /* add paragraph name to list of performed procedures */
     1616 	perform_ptr = addr (work_area);
     1617 	perform_entry.proc_number = procdef.proc_num;
     1618 	perform_entry.code = 0;
     1619 	perform_entry.next = "00000";
     1620 	perform_entry.next1 = "00000";
     1621 	perform_entry.priority = 0;
     1622 	perform_entry.address = 0;
     1623 
     1624 	call cobol_vdwf_sput (cobol_ext_$cobol_cmfp, st, perform_ptr, perform_size, common_key);
     1625 
     1626 	if fixed_common.size_perform_info = "00000"
     1627 	then fixed_common.size_perform_info = common_key;
     1628 	else do;
     1629 
     1630 		call cobol_vdwf_dget (cobol_ext_$cobol_cmfp, st, work_ptr, common_recsize, last_perform_key);
     1631 
     1632 		work_ptr -> perform_entry.next = common_key;
     1633 
     1634 		call cobol_vdwf_dput (cobol_ext_$cobol_cmfp, st, work_ptr, common_recsize, last_perform_key);
     1635 
     1636 	     end;
     1637 
     1638 	last_perform_key = common_key;
     1639 
     1640 	if fixed_common.options.oc
     1641 	then do;					/* generate code to check result */
     1642 
     1643 		reswd.key = reswd_MOVE;
     1644 		reswd.class = "100100100000000000110000000"b;
     1645 
     1646 		call put_rw_token;
     1647 
     1648 
     1649 		reswd.key = reswd_ZERO;
     1650 		reswd.class = "001000000000000000010000000"b;
     1651 		reswd.jump_index = 1;
     1652 
     1653 		call put_rw_token;
     1654 
     1655 		reswd.jump_index = 0;
     1656 
     1657 		reswd.key = reswd_TO;
     1658 		reswd.class = "000000000000000000010000000"b;
     1659 
     1660 		call put_rw_token;
     1661 
     1662 
     1663 
     1664 		call cobol_swf_put (cobol_ext_$cobol_m2fp, st, addr (sizedn), sizedn.size);
     1665 
     1666 
     1667 		reswd.key = reswd_IF;
     1668 		reswd.class = "100100000000000000010000000"b;
     1669 
     1670 		call put_rw_token;
     1671 
     1672 
     1673 
     1674 		call issue_name;
     1675 
     1676 
     1677 		reswd.key = reschar_LT;		/*[4.2-3]*/
     1678 		reswd.class = "000011000000000000000000000"b;
     1679 
     1680 		call put_rw_token;
     1681 
     1682 
     1683 /**/
     1684 /*		if 
     1685*calling_param = 0 then do;
     1686*
     1687*/*		sizertn_numlit.size = numlit_size + 1;
     1688*/*		sizertn_numlit.places_left = 1;
     1689*/*		sizertn_numlit.places = 1;
     1690*/*		sizertn_numlit.literal = "1";
     1691*/*		end;
     1692*/*		else do;
     1693*/**/
     1694 
     1695 		call bin_to_dec (occurs.level.min (occurs.dimensions), sizertn_numlit.literal, sizertn_numlit.places);
     1696 
     1697 		sizertn_numlit.size = numlit_size + sizertn_numlit.places;
     1698 		sizertn_numlit.places_left = sizertn_numlit.places;
     1699 						/*		end;  */
     1700 
     1701 
     1702 		call cobol_swf_put (cobol_ext_$cobol_m2fp, st, addr (sizertn_numlit), sizertn_numlit.size);
     1703 
     1704 
     1705 		reswd.key = reswd_OR;
     1706 		reswd.class = "000000000000000000010000000"b;
     1707 
     1708 		call put_rw_token;
     1709 
     1710 
     1711 
     1712 		call issue_name;
     1713 
     1714 
     1715 		reswd.key = reschar_GT;		/*[4.2-3]*/
     1716 		reswd.class = "000011000000000000000000000"b;
     1717 
     1718 		call put_rw_token;
     1719 
     1720 
     1721 
     1722 		call bin_to_dec (occurs.level.max (occurs.dimensions), sizertn_numlit.literal, sizertn_numlit.places);
     1723 
     1724 		sizertn_numlit.size = numlit_size + sizertn_numlit.places;
     1725 		sizertn_numlit.places_left = sizertn_numlit.places;
     1726 
     1727 		call cobol_swf_put (cobol_ext_$cobol_m2fp, st, addr (sizertn_numlit), sizertn_numlit.size);
     1728 
     1729 
     1730 		reswd.key = reswd_STOP;
     1731 		reswd.class = "100100100000000000110000000"b;
     1732 
     1733 		call put_rw_token;
     1734 
     1735 
     1736 
     1737 		call cobol_swf_put (cobol_ext_$cobol_m2fp, st, addr (errormes_lit), errormes_lit.size);
     1738 
     1739 
     1740 		reswd.key = reswd_ELSE;
     1741 		reswd.class = "000000000000000000010000000"b;
     1742 
     1743 		call put_rw_token;
     1744 
     1745 	     end;
     1746      end gen_true_path;
     1747 
     1748 
     1749 
     1750 issue_name:
     1751      proc;
     1752 
     1753 /* issue_name is 
     1754*called during generation of a size routine for a variable-length item.  issue_name
     1755*
     1756*writes the name of the DEPENDING ON item,including any specified qualifiers,out to the minpral-2 file. */
     1757 
     1758 	usrwd.size = usrwd_size + depend_ptr -> obj_rec.size;
     1759 	usrwd.length = depend_ptr -> obj_rec.size;
     1760 	usrwd.word = substr (depend_ptr -> obj_rec.name, 1, depend_ptr -> obj_rec.size);
     1761 
     1762 	call cobol_swf_put (cobol_ext_$cobol_m2fp, st, addr (usrwd), usrwd.size);
     1763 
     1764 
     1765 
     1766 	if depend_ptr -> obj_rec.qual = "00000"
     1767 	then return;
     1768 
     1769 
     1770 	call cobol_vdwf_dget (cobol_ext_$cobol_cmfp, st, qual_ptr, common_recsize, depend_ptr -> obj_rec.qual);
     1771 
     1772 
     1773 	reswd.key = reswd_OF;
     1774 	reswd.class = "000000000000000000010000000"b;
     1775 
     1776 	do while ("1"b);
     1777 
     1778 
     1779 	     call put_rw_token;			/* write out OF key */
     1780 
     1781 
     1782 	     usrwd.size = usrwd_size + qual_ptr -> qual_rec.size;
     1783 	     usrwd.length = qual_ptr -> qual_rec.size;
     1784 	     usrwd.word = substr (qual_ptr -> qual_rec.name, 1, qual_ptr -> qual_rec.size);
     1785 
     1786 
     1787 	     call cobol_swf_put (cobol_ext_$cobol_m2fp, st, addr (usrwd), usrwd.size);
     1788 
     1789 
     1790 /* write out qualifier */
     1791 
     1792 	     if qual_ptr -> qual_rec.next = "00000"
     1793 	     then return;
     1794 
     1795 
     1796 	     call cobol_vdwf_dget (cobol_ext_$cobol_cmfp, st, qual_ptr, common_recsize, qual_ptr -> qual_rec.next);
     1797 
     1798 
     1799 	end;
     1800 
     1801      end issue_name;
     1802 
     1803 
     1804 
     1805 
     1806 /* bin_to_dec converts the value in a 15-bit fixed binary field to its decimal equivalent. */
     1807 
     1808 b_to_d:
     1809      entry (btd_i, btd_o, btd_s);
     1810 
     1811 dcl	btd_i		fixed bin;
     1812 dcl	btd_o		char (5);
     1813 dcl	btd_s		fixed bin;
     1814 
     1815 
     1816 	call bin_to_dec (btd_i, btd_o, btd_s);
     1817 
     1818 	return;
     1819 
     1820 
     1821 
     1822 bin_to_dec:
     1823      proc (bd_input, bd_output, bd_size);
     1824 
     1825 dcl	bd_input		fixed bin;
     1826 dcl	bd_output		char (5);
     1827 dcl	bd_size		fixed bin;
     1828 dcl	bd_work1		fixed bin;
     1829 dcl	bd_work2		fixed bin;
     1830 dcl	result		char (4) based (addr (bd_work2));
     1831 dcl	bd_work3		char (5);
     1832 dcl	loc		fixed bin;
     1833 
     1834 	loc = 6;
     1835 
     1836 	if bd_input = 0
     1837 	then do;
     1838 
     1839 		bd_size = 1;
     1840 		bd_output = "0";
     1841 		return;
     1842 
     1843 	     end;
     1844 
     1845 	bd_work1 = bd_input;
     1846 
     1847 	do while (bd_work1 > 0);
     1848 
     1849 	     bd_work2 = mod (bd_work1, 10) + 48;
     1850 	     loc = loc - 1;
     1851 	     substr (bd_work3, loc, 1) = substr (result, 4, 1);
     1852 	     bd_work1 = divide (bd_work1, 10, 15, 0);
     1853 	end;
     1854 
     1855 	bd_size = 6 - loc;
     1856 	bd_output = substr (bd_work3, loc);
     1857 
     1858      end bin_to_dec;
     1859 
     1860 
     1861 
     1862 
     1863 issue_fd_diag:
     1864      proc (diag_no);
     1865 
     1866 dcl	diag_no		fixed bin;
     1867 
     1868 	diag.line = dn_ptr -> fd_token.def_line;
     1869 	diag.column = 8;
     1870 	diag.number = diag_no;
     1871 
     1872 	call cobol_c_list (addr (diag));		/* issue diagnostic */
     1873 
     1874      end issue_fd_diag;
     1875 
     1876 issue_file_diag:
     1877      proc (diag_no);
     1878 
     1879 dcl	diag_no		fixed bin;
     1880 
     1881 	diag.line = dn_ptr -> fd_token.line;
     1882 	diag.column = dn_ptr -> fd_token.column;
     1883 	diag.number = diag_no;
     1884 
     1885 	call cobol_c_list (addr (diag));
     1886 
     1887      end issue_file_diag;
     1888 
     1889 issue_diag:
     1890      proc (diag_no, dn_ptr);
     1891 
     1892 dcl	diag_no		fixed bin;
     1893 dcl	dn_ptr		ptr;
     1894 
     1895 	diag.line = dn_ptr -> data_name.line;
     1896 	diag.column = dn_ptr -> data_name.column;
     1897 	diag.number = diag_no;
     1898 
     1899 	call cobol_c_list (addr (diag));
     1900 
     1901      end issue_diag;
     1902 
     1903 
     1904 
     1905 mc_initval_seg2:
     1906      proc;
     1907 
     1908 /* This procedure will generate tokens to a separate minpral file
     1909*				for initial value non-constant items during a MCOBOL run.
     1910*			*/
     1911 
     1912 dcl	keyindex		(7) fixed bin;
     1913 
     1914 	keyindex (1) = reswd_ZERO;
     1915 	keyindex (2) = reswd_SPACE;
     1916 	keyindex (3) = 999;				/* upper-bound */
     1917 	keyindex (4) = 999;				/* lower-bound */
     1918 	keyindex (5) = reswd_HIGH_VALUE;
     1919 	keyindex (6) = reswd_LOW_VALUE;
     1920 	keyindex (7) = reswd_QUOTE;
     1921 
     1922 	valueptr = addr (dn (data_name.initial_ptr));
     1923 	cobol_$data_init_flag = cobol_$data_init_flag + 1;/* current count of Cobol data items to be initialized */
     1924 	reswd.key = reswd_MOVE;
     1925 	reswd.class = "100100100000000000110000000"b;
     1926 
     1927 
     1928 
     1929 	call cobol_swf_put (cobol_$initval_file_ptr, st, addr (reswd), reswd.size);
     1930 						/*write key */
     1931 
     1932 
     1933 	if data_name.value_numeric
     1934 	then do;					/* numeric literal */
     1935 
     1936 		numlit.size = numlit_size + numinit.length;
     1937 						/* type 2 numeric value */
     1938 		numlit.places = numinit.length;
     1939 		numlit.places_left = numinit.ltdp;
     1940 		substr (numlit.literal, 1, numinit.length) = substr (numinit.literal, 1, numinit.length);
     1941 		numlit.info = string (numinit.info);
     1942 		numlit.sign = numinit.sign;
     1943 		numlit.exp_sign = numinit.expsign;
     1944 		numlit.exp_places = numinit.explaces;
     1945 		numlit.places_right = numinit.rtdp;
     1946 
     1947 
     1948 		call cobol_swf_put (cobol_$initval_file_ptr, st, addr (numlit), numlit.size);
     1949 
     1950 
     1951 	     end;
     1952 
     1953 	else if alphainit.info.figconindex ^= "0000000"b
     1954 	then do;					/* figurative constant */
     1955 
     1956 		reswd.key = keyindex (fixed (alphainit.info.figconindex, 18));
     1957 		reswd.class = "101000000000000000000000000"b;
     1958 		reswd.jump_index = 1;
     1959 
     1960 
     1961 		call cobol_swf_put (cobol_$initval_file_ptr, st, addr (reswd), reswd.size);
     1962 
     1963 
     1964 		reswd.jump_index = 0;
     1965 
     1966 	     end;
     1967 	else do;					/* nonnumeric literal */
     1968 
     1969 		nonnumlit.size = nonnumlit_size + alphainit.length;
     1970 		nonnumlit.length = alphainit.length;
     1971 
     1972 		substr (nonnumlit.string, 1, alphainit.length) = substr (alphainit.string, 1, alphainit.length);
     1973 
     1974 		if alphainit.allit = "1"b
     1975 		then nonnumlit.info = "01000000"b;
     1976 		else nonnumlit.info = "00000000"b;
     1977 
     1978 
     1979 		call cobol_swf_put (cobol_$initval_file_ptr, st, addr (nonnumlit), nonnumlit.size);
     1980 
     1981 
     1982 	     end;
     1983 
     1984 /*[4.2-1]*/
     1985 	sv_bit = data_name.just_right;
     1986 	data_name.just_right = "0"b;
     1987 
     1988 	if data_name.numeric ^= "1"b
     1989 	then do;
     1990 
     1991 		valhd_ptr = addr (data_name.numeric);
     1992 		valhd = substr (valhd_ptr -> valhd_based, 1, 6);
     1993 		substr (valhd_ptr -> valhd_based, 1, 6) = "001000"b;
     1994 		valhdbit = data_name.variable_length;
     1995 		data_name.variable_length = "0"b;
     1996 
     1997 
     1998 		call cobol_swf_put (cobol_$initval_file_ptr, st, dn_ptr, data_name.size);
     1999 
     2000 
     2001 		data_name.variable_length = valhdbit;
     2002 		substr (valhd_ptr -> valhd_based, 1, 6) = valhd;
     2003 
     2004 	     end;
     2005 	else call cobol_swf_put (cobol_$initval_file_ptr, st, dn_ptr, data_name.size);
     2006 
     2007 
     2008 /*[4.2-1]*/
     2009 	data_name.just_right = sv_bit;
     2010 
     2011 	do ieos = 1 to 10;				/* initialize EOS token to zeros */
     2012 						/*MCO*/
     2013 
     2014 	     eos_token (ieos) = 0;
     2015 
     2016 dcl	ieos		fixed bin (24);
     2017 
     2018 	end;
     2019 
     2020 	eos_ptr = addr (eos_token);
     2021 	end_stmt.type = 19;
     2022 	end_stmt.verb = 18;
     2023 	end_stmt.e = 1;
     2024 	end_stmt.size = 38;
     2025 
     2026 
     2027 	call cobol_swf_put (cobol_$initval_file_ptr, st, eos_ptr, end_stmt.size);
     2028 						/* type19 EOS */
     2029 
     2030 
     2031 dcl	eos_token		(10) fixed bin (24);
     2032 
     2033      end mc_initval_seg2;
     2034 
     2035 	/***.....	dcl Trace_Bit bit(1) static external;/**/
     2036 	/***.....	dcl Trace_Lev fixed bin static external;/**/
     2037 	/***.....	dcl Trace_Line char(60) static external;/**/
     2038 	/***.....	dcl ioa_ entry options(variable); /**/
     2039 	/***.....   dcl ioa_$nnl entry options(variable);/**/
     2040 	/***.....   dcl Off char(13);/**/
     2041 
     2042 /*[4.2-1]*/
     2043 declare	sv_bit		bit (1);
     2044 
     2045 
     2046 dcl	temp_char5	char (5);
     2047 dcl	temp_size		fixed bin;
     2048 dcl	procname_sw	fixed bin;
     2049 dcl	temp		fixed bin;
     2050 dcl	eof		fixed bin;
     2051 dcl	temp_len		fixed bin (24);
     2052 dcl	temp_mod		fixed bin;
     2053 dcl	redef_object_offset fixed bin;
     2054 dcl	(curr_char_off, curr_wd_off, curr_char_pos)
     2055 			fixed bin;
     2056 
     2057 dcl	cd_offsets	(-256:0) fixed bin;		/* 0 is invalid */
     2058 
     2059 dcl	dn_ptr		ptr;			/* name table pointer */
     2060 dcl	com2_ptr		ptr;
     2061 dcl	valueptr		ptr;
     2062 dcl	valhd_ptr		ptr;
     2063 dcl	valhdbit		bit (1);
     2064 dcl	valhd		bit (6);
     2065 dcl	valhd_based	bit (6) based;
     2066 dcl	dn		(500) char (1) based (dn_ptr);
     2067 dcl	index_name_ptr	ptr;
     2068 
     2069 dcl	ft_ptr		ptr;			/* pointer to current file table record in common */
     2070 dcl	save_red_nptr	ptr;
     2071 dcl	odo_rec_ptr	ptr;			/* pointer to odo_rec item */
     2072 dcl	depend_ptr	ptr;			/* pointer to obj_rec item */
     2073 dcl	qual_ptr		ptr;			/* pointer to qual_rec items in common */
     2074 
     2075 dcl	1 rw_area,
     2076 	  2 dummy		(5) fixed bin,
     2077 	  2 verb		bit (27),
     2078 	  2 dummy1	fixed bin;
     2079 
     2080 dcl	last_perform_key	char (5);
     2081 dcl	work_ptr		ptr;
     2082 dcl	name_ptr		ptr;
     2083 dcl	nt_buf		char (1000) based (dn_ptr);
     2084 dcl	nt_array		(1000) char (1) based (dn_ptr);
     2085 dcl	index_cnt		fixed bin;
     2086 dcl	index_ptr		(200) ptr;
     2087 
     2088 dcl	1 same_rec_area_info
     2089 			(cobol_ext_$cobol_com_ptr -> fixed_common.sra_clauses),
     2090 	  2 clause_no	fixed bin,
     2091 	  2 cra_size	fixed bin (24),
     2092 	  2 seg_num	fixed bin,
     2093 	  2 offset	fixed bin (24);
     2094 
     2095 dcl	1 occurs_info	(3),
     2096 	  2 level		fixed bin,
     2097 	  2 cswd_seg	fixed bin,
     2098 	  2 cswd_offset	fixed bin (24),
     2099 	  2 struclength	fixed bin;		/* character string work fields */
     2100 dcl	work_area		char (100);
     2101 dcl	index_area	char (120);
     2102 dcl	odo_key		char (5);
     2103 dcl	odo_do_rec	char (5);
     2104 dcl	common_recsize	fixed bin;
     2105 dcl	common_key	char (5);
     2106 dcl	name_recsize	fixed bin;
     2107 dcl	first_name_key	char (5) aligned;
     2108 dcl	file_key		char (5);
     2109 dcl	report_key	char (5);
     2110 dcl	group_key		char (5);
     2111 dcl	rec_offset	fixed bin (24);
     2112 dcl	record_offset	fixed bin (24);
     2113 dcl	temp_slack	fixed bin;
     2114 dcl	i		fixed bin;
     2115 dcl	occurs_level	fixed bin;
     2116 dcl	odo_proc_num	fixed bin;
     2117 dcl	odo_recsize	fixed bin;
     2118 dcl	ft_size		fixed bin;
     2119 dcl	current_fno	fixed bin;
     2120 dcl	st		bit (32);
     2121 dcl	(found, first_pop)	bit (1);
     2122 
     2123 /*[5.1-1]*/
     2124 dcl	hisi_slack	bit (1),
     2125 	m		fixed bin;
     2126 
     2127 /*[5.1-1]*/
     2128 dcl	bit32400		bit (32400) based,
     2129 	bit648		bit (648) based;		/*[5.1-1]*/
     2130 dcl	bit100		bit (100) based;
     2131 
     2132 dcl	1 stk		(0:49),
     2133 	  2 nt_ptr	ptr,
     2134 	  2 redef_ptr	ptr,
     2135 	  2 occ_ptr	ptr,
     2136 	  2 level		fixed bin,
     2137 	  2 size		fixed bin,
     2138 	  2 offset	fixed bin,
     2139 	  2 bound		fixed bin,
     2140 	  2 max_bound	fixed bin,
     2141 	  2 max_occ	fixed bin,
     2142 	  2 redef_size	fixed bin,
     2143 	  2 son_cnt	fixed bin,		/*[5.1-1]*/
     2144 	  2 init_slack	fixed bin,		/*[5.1-1]*/
     2145 	  2 redef_offset	fixed bin,		/*[5.1-1]*/
     2146 	  2 next_rec_off	fixed bin;
     2147 
     2148 /*[5.1-1]*/
     2149 dcl	1 STK		(0:49),
     2150 	  2 stk_occurs	bit (1),
     2151 	  2 redef_sw	bit (1);
     2152 
     2153 dcl	1 procdef		static,
     2154 	  2 size		fixed bin init (53),
     2155 	  2 line		fixed bin init (0),
     2156 	  2 column	fixed bin init (0),
     2157 	  2 type		fixed bin init (7),
     2158 	  2 string_ptr	ptr init (null ()),
     2159 	  2 prev_rec	ptr init (null ()),
     2160 	  2 filler1	bit (4) init (""b),
     2161 	  2 section_name	bit (1),
     2162 	  2 filler2	bit (4) init (""b),
     2163 	  2 priority	char (2) init ("  "),
     2164 	  2 filler3	bit (9) init (""b),
     2165 	  2 section_num	fixed bin init (0),
     2166 	  2 proc_num	fixed bin,
     2167 	  2 def_line	fixed bin init (0),
     2168 	  2 name_size	fixed bin init (1),
     2169 	  2 name		char (1) init ("$");
     2170 
     2171 dcl	1 reswd		static,
     2172 	  2 size		fixed bin init (28),
     2173 	  2 line		fixed bin init (0),
     2174 	  2 column	fixed bin init (0),
     2175 	  2 type		fixed bin init (1),
     2176 	  2 key		fixed bin,
     2177 	  2 class		bit (27),
     2178 	  2 jump_index	fixed bin;
     2179 
     2180 dcl	1 diag		static,
     2181 	  2 size		fixed bin init (32),
     2182 	  2 line		fixed bin,
     2183 	  2 column	fixed bin,
     2184 	  2 type		fixed bin init (5),
     2185 	  2 run		fixed bin init (2),
     2186 	  2 number	fixed bin,
     2187 	  2 info		bit (8) init (""b),
     2188 	  2 image_size	fixed bin init (0);
     2189 
     2190 dcl	1 usrwd		static,
     2191 	  2 size		fixed bin,
     2192 	  2 line		fixed bin init (0),
     2193 	  2 column	fixed bin init (0),
     2194 	  2 type		fixed init (8),
     2195 	  2 info		bit (8) init (""b),
     2196 	  2 length	fixed bin,
     2197 	  2 word		char (30);
     2198 
     2199 dcl	1 sizertn_numlit	static,
     2200 	  2 size		fixed bin,
     2201 	  2 line		fixed bin init (0),
     2202 	  2 column	fixed bin init (0),
     2203 	  2 type		fixed bin init (2),
     2204 	  2 info		bit (8) init ("10000000"b),
     2205 	  2 sign		char (1) init (" "),
     2206 	  2 exp_sign	char (1) init (" "),
     2207 	  2 exp_places	fixed bin init (0),
     2208 	  2 places_left	fixed bin,
     2209 	  2 places_right	fixed bin init (0),
     2210 	  2 places	fixed bin,
     2211 	  2 literal	char (5);
     2212 
     2213 dcl	1 icdhdr_type9	static,
     2214 	  2 header	(4) fixed bin init (184, 0, 0, 9),
     2215 	  2 repl_ptr	(2) ptr init ((2) null ()),
     2216 	  2 fill1		bit (108) init (""b),
     2217 	  2 file_key_info,
     2218 	    3 fb1		(3) fixed bin init (0, 0, 0),
     2219 	    3 size	fixed bin init (60),
     2220 	    3 fb2		(2) fixed bin init (0, 0),
     2221 	    3 flags1	bit (36) init ("010000100100000000010000000100000000"b),
     2222 	    3 flags2	bit (36) init (""b),
     2223 	    3 seg		fixed bin init (2),
     2224 	    3 off		fixed bin,
     2225 	  2 init_ptr	fixed bin init (117),
     2226 	  2 edit_ptr	fixed bin init (0),
     2227 	  2 occurs_ptr	fixed bin init (0),
     2228 	  2 do_rec	char (5) init ("00000"),
     2229 	  2 fill2		bit (27) unal init (""b),
     2230 	  2 max_red_size	fixed bin init (0),
     2231 	  2 name_size	fixed bin init (4),
     2232 	  2 name		char (4) init ("IHDR"),
     2233 	  2 ext		bit (36) init ("01"b),
     2234 	  2 value_len	fixed bin init (60),
     2235 	  2 value,
     2236 	    3 qp		bit (72) init ("000111111111111111000000000000100011000000000000000001"b),
     2237 	    3 flags	bit (36) init ("11"b),
     2238 	    3 last_full_q_name
     2239 			char (48) init ("");
     2240 
     2241 dcl	1 ocdhdr_type9	static,
     2242 	  2 header	(4) fixed bin init (144, 0, 0, 9),
     2243 	  2 repl_ptr	(2) ptr init ((2) null ()),
     2244 	  2 fill1		bit (108) init (""b),
     2245 	  2 file_key_info,
     2246 	    3 fb1		(3) fixed bin init (0, 0, 0),
     2247 	    3 size	fixed bin init (20),
     2248 	    3 fb2		(2) fixed bin init (0, 0),
     2249 	    3 flags1	bit (36) init ("010000100100000000010000000100000000"b),
     2250 	    3 flags2	bit (36) init (""b),
     2251 	    3 seg		fixed bin init (2),
     2252 	    3 off		fixed bin,
     2253 	  2 init_ptr	fixed bin init (117),
     2254 	  2 edit_ptr	fixed bin init (0),
     2255 	  2 occurs_ptr	fixed bin init (0),
     2256 	  2 do_rec	char (5) init ("00000"),
     2257 	  2 fill2		bit (27) unal init (""b),
     2258 	  2 max_red_size	fixed bin init (0),
     2259 	  2 name_size	fixed bin init (4),
     2260 	  2 name		char (4) init ("OHDR"),
     2261 	  2 ext		bit (36) init ("01"b),
     2262 	  2 value_len	fixed bin init (60),
     2263 	  2 value,
     2264 	    3 last_station_info_ptr
     2265 			bit (72) init ("000111111111111111000000000000100011000000000000000001"b),
     2266 	    3 flags	bit (36) init ("01"b),
     2267 	    3 binary_max_station_count
     2268 			fixed bin,
     2269 	    3 max_station_count
     2270 			char (4);
     2271 
     2272 dcl	1 numlit		auto,
     2273 	  2 size		fixed bin,
     2274 	  2 line		fixed bin,
     2275 	  2 column	fixed bin,
     2276 	  2 type		fixed bin,
     2277 	  2 info		bit (8),
     2278 	  2 sign		char (1),
     2279 	  2 exp_sign	char (1),
     2280 	  2 exp_places	fixed bin,
     2281 	  2 places_left	fixed bin,
     2282 	  2 places_right	fixed bin,
     2283 	  2 places	fixed bin,
     2284 	  2 literal	char (30);
     2285 
     2286 dcl	1 nonnumlit	auto,
     2287 	  2 size		fixed bin,
     2288 	  2 line		fixed bin,
     2289 	  2 column	fixed bin,
     2290 	  2 type		fixed bin,
     2291 	  2 info		bit (8),
     2292 	  2 length	fixed bin,
     2293 	  2 string	char (256);
     2294 
     2295 
     2296 dcl	1 ddseg		static,
     2297 	  2 next		char (5) init ("00000"),
     2298 	  2 seg_no	fixed bin init (2),
     2299 	  2 next_offset	fixed bin (24),
     2300 	  2 duplicate_next_loc
     2301 			fixed bin (24) init (0),
     2302 	  2 read_only	bit (1) init ("0"b);	/*~*/
     2303 dcl	record_segment	fixed bin static options (constant) init (2);
     2304 dcl	perform_size	fixed bin static options (constant) init (28);
     2305 dcl	usrwd_size	fixed bin static options (constant) init (24);
     2306 dcl	numlit_size	fixed bin static options (constant) init (36);
     2307 dcl	nonnumlit_size	fixed bin static options (constant) init (24);
     2308 dcl	ddseg_size	fixed bin static options (constant) init (21);
     2309 
     2310 dcl	1 type25		static options (constant),
     2311 	  2 size		fixed bin init (53),
     2312 	  2 line		fixed bin init (0),
     2313 	  2 column	fixed bin init (0),
     2314 	  2 type		fixed bin init (25),
     2315 	  2 string_ptr	ptr init (null ()),
     2316 	  2 prev_rec	ptr init (null ()),
     2317 	  2 filler	bit (36) init (""b),
     2318 	  2 section_num	fixed bin init (0),
     2319 	  2 proc_num	fixed bin init (0),
     2320 	  2 def_line	fixed bin init (0),
     2321 	  2 name_size	fixed bin init (1),
     2322 	  2 name		char (1) init ("$");
     2323 
     2324 dcl	1 errormes_lit	static options (constant),
     2325 	  2 size		fixed bin init (76),
     2326 	  2 line		fixed bin init (0),
     2327 	  2 column	fixed bin init (0),
     2328 	  2 type		fixed bin init (3),
     2329 	  2 info		bit (8) init (""b),
     2330 	  2 length	fixed bin init (52),
     2331 	  2 string	char (52) init ("Value of DEPENDING ON item is outside defined range.");
     2332 
     2333 dcl	1 sizedn		static options (constant),
     2334 	  2 size		fixed bin init (113),
     2335 	  2 line		fixed bin init (0),
     2336 	  2 column	fixed bin init (0),
     2337 	  2 type		fixed bin init (9),
     2338 	  2 repl_ptr	(2) ptr init ((2) null ()),
     2339 	  2 fill1		bit (108) init (""b),
     2340 	  2 file_key_info,
     2341 	    3 fb1		(3) fixed bin init (0, 0, 0),
     2342 	    3 size	fixed bin init (4),
     2343 	    3 places_left	fixed bin init (11),
     2344 	    3 places_right	fixed bin init (0),
     2345 	    3 flags1	bit (36) init ("010000100100001001"b),
     2346 						/* ws,77,elem,bin36,num */
     2347 	    3 flags2	bit (36) init (""b),
     2348 	    3 seg		fixed bin init (2),
     2349 	    3 off		fixed bin init (0),
     2350 	  2 fill2		(6) fixed bin init (0, 0, 0, 0, 0, 0),
     2351 	  2 name_size	fixed bin init (1),
     2352 	  2 name		char (1) init ("$");
     2353 
     2354 dcl	cobol_make_fsb_link_
     2355 			entry (ptr);
     2356 dcl	cobol_read_ft_	entry (fixed bin, ptr);
     2357 dcl	unique_bits_	entry returns (bit (70));
     2358 dcl	unique_chars_	entry (bit (*)) returns (char (15));
     2359 dcl	cobol_IVAL	entry (ptr);
     2360 dcl	cobol_vdwf_dput	entry (ptr, bit (32), ptr, fixed bin, char (5)) ext;
     2361 dcl	cobol_vdwf_dget	entry (ptr, bit (32), ptr, fixed bin, char (5)) ext;
     2362 dcl	cobol_swf_put	entry (ptr, bit (32), ptr, fixed bin) ext;
     2363 dcl	cobol_vdwf_sput	entry (ptr, bit (32), ptr, fixed bin, char (5)) ext;
     2364 dcl	cobol_ntio$sget	entry (ptr, fixed bin);
     2365 dcl	cobol_ntio$dget	entry (ptr, char (5) aligned);
     2366 dcl	cobol_c_list	entry (ptr);
     2367 
     2368 dcl	(addr, addrel, divide, fixed, index, mod, null, string, substr, unspec, max)
     2369 			builtin;
     2370 
     2371 
     2372 
     2373 /***************************************/
  1     1 
  1     2 /* BEGIN INCLUDE FILE ... cobol_perform_entry.incl.pl1 */
  1     3 /* Last modified on 01/26/77 by ORN */
  1     4 
  1     5 dcl perform_ptr ptr;
  1     6 dcl 1 perform_entry based(perform_ptr),
  1     7      2 proc_number fixed bin,
  1     8      2 code fixed bin,
  1     9      2 next char(5),
  1    10      2 next1 char(5),
  1    11      2  priority fixed bin,
  1    12      2 address fixed bin;
  1    13 
  1    14 /* END INCLUDE FILE ... cobol_perform_entry.incl.pl1 */
  1    15 
     2374 
  2     1 
  2     2 /* BEGIN INCLUDE FILE ...   cobol_obj_rec.incl.pl1 */
  2     3 
  2     4 dcl 1 obj_rec based(com2_ptr),
  2     5      2 qual char(5),
  2     6      2 line fixed bin,
  2     7      2 column fixed bin,
  2     8      2 repl fixed bin,
  2     9      2 size fixed bin,
  2    10      2 name char(31);
  2    11 
  2    12 /* END INCLUDE FILE ...   cobol_obj_rec.incl.pl1 */
  2    13 
     2375 
  3     1 
  3     2 /* BEGIN INCLUDE FILE ...   cobol_qual_rec.incl.pl1 */
  3     3 
  3     4 dcl 1 qual_rec based (com2_ptr),
  3     5       2 next char(5),
  3     6      2 line fixed bin,
  3     7      2 column fixed bin,
  3     8       2 size fixed bin ,
  3     9       2 name char (31);
  3    10 
  3    11 /* END INCLUDE FILE ...   cobol_qual_rec.incl.pl1 */
  3    12 
     2376 
  4     1 
  4     2 /* BEGIN INCLUDE FILE ...   cobol_odo_rec.incl.pl1 */
  4     3 dcl 1 odo_rec based(com2_ptr),
  4     4      2 next char(5),
  4     5      2 descr char(5),
  4     6     2 seg_no fixed bin,
  4     7     2 offset_l fixed bin(24),
  4     8     2 offset_r fixed bin(24),
  4     9      2 info bit(8);
  4    10 /* END INCLUDE FILE ...   cobol_odo_rec.incl.pl1 */
  4    11 
     2377 
  5     1 
  5     2 /* BEGIN INCLUDE FILE ... cobol_occurs_ext.incl.pl1 */
  5     3 /* Last modified on 01/19/77 by ORN */
  5     4 
  5     5 /*
  5     6*An occurs extension is included in a type 9 data name token when the data
  5     7*name is described with an occurs clause or is subordinate to an item
  5     8*described with an occurs clause.
  5     9**/
  5    10 
  5    11 /*	***STRUCTURE SIZE INFORMATION***	*/
  5    12 /*     THE SIZE OF THIS STRUCTURE IN BYTES, (EXCLUDING VARIABLE
  5    13*       LENGTH ENTITIES), FOR EACH HARDWARE IMPLEMENTATION IS:
  5    14*
  5    15*	HARDWARE	|	SIZE (BYTES)
  5    16*	---------------------------------
  5    17*	6180	|	12 + 24 * dimensions
  5    18*	P7	|	6 + 14 * dimensions
  5    19*	---------------------------------
  5    20**/
  5    21 
  5    22 /*   THE OCCURS EXTENSION STRUCTURE   */
  5    23 
  5    24 dcl occurs_ptr ptr;
  5    25 
  5    26 dcl	1 occurs based (occurs_ptr),
  5    27 		2 keyed fixed bin,
  5    28 		2 key_number fixed bin,
  5    29 		2 dimensions fixed bin,
  5    30 		2 level (occurs.dimensions),
  5    31 			3 index_no fixed bin,
  5    32 			3 min fixed bin,
  5    33 			3 max fixed bin,
  5    34 			3 struc_length fixed bin,
  5    35 			3 cswd_seg fixed bin,
  5    36 			3 cswd_offset fixed bin(24);
  5    37 
  5    38 
  5    39 
  5    40 /* END INCLUDE FILE ...   cobol_occurs_ext.incl.pl1 */
  5    41 
     2378 
  6     1 
  6     2 /* BEGIN INCLUDE FILE ... cobol_ext_num.incl.pl1 */
  6     3 /* Last modified on 01/24/77 by ORN */
  6     4 
  6     5 /* The type 9 token extension for numeric initial values */
  6     6 
  6     7 dcl	1 numinit based(valueptr),
  6     8 	  2 initype,
  6     9 	    3 numeric bit(1),
  6    10 	    3 nonnumeric bit(1),
  6    11 	    3 figcon bit(1),
  6    12 	    3 allit bit(1),
  6    13 	    3 single bit(1),
  6    14 	    3 thru1 bit(1),
  6    15 	    3 thru2 bit(1),
  6    16 	    3 filler9 bit(1),
  6    17 	  2 info,
  6    18 	    3 integer bit(1),
  6    19 	    3 floating bit(1),
  6    20 	    3 filler10 bit(6),
  6    21 	  2 sign char(1),
  6    22 	  2 expsign char(1),
  6    23 	  2 explaces fixed bin(24),
  6    24 	  2 ltdp fixed bin(24),
  6    25 	  2 rtdp fixed bin(24),
  6    26 	  2 length fixed bin(24),
  6    27 	  2 literal char(0 refer(numinit.length));
  6    28 
  6    29 /* END INCLUDE FILE ... cobol_ext_num.incl.pl1 */
  6    30 
     2379 
  7     1 
  7     2 /* BEGIN INCLUDE FILE ... cobol_ext_nonnum.incl.pl1 */
  7     3 /* Last modified on 01/24/77 by ORN */
  7     4 
  7     5 /* The type 9 token extension for nonnumeric initial values */
  7     6 
  7     7 dcl	1 alphainit based (valueptr),
  7     8 	  2 initype,
  7     9 	    3 numeric bit(1),
  7    10 	    3 nonnumeric bit(1),
  7    11 	    3 figcon bit(1),
  7    12 	    3 allit bit(1),
  7    13 	    3 single bit(1),
  7    14 	    3 thru1 bit(1),
  7    15 	    3 thru2 bit(1),
  7    16 	    3 filler11 bit(1),
  7    17 	  2 info,
  7    18 	    3 bitstring bit(1),
  7    19 	    3 figconindex bit(7),
  7    20 	  2 length fixed bin(24),
  7    21 	  2 string char(0 refer(alphainit.length));
  7    22 
  7    23 /* END INCLUDE FILE ... cobol_ext_nonnum.incl.pl1 */
  7    24 
     2380 
  8     1 
  8     2 /* BEGIN INCLUDE FILE ... cobol_ext_.incl.pl1 */
  8     3 /* Last modified on 06/17/76 by ORN */
  8     4 /* Last modified on 12/28/76 by FCH */
  8     5 /* Last modified on 12/01/80 by FCH */
  8     6 
  8     7 /*    <<<   SHARED EXTERNALS INCLUDE FILE   >>>    */
  8     8 
  8     9 
  8    10 dcl     cobol_ext_$cobol_afp ptr ext;
  8    11 dcl     cobol_afp ptr defined (  cobol_ext_$cobol_afp);
  8    12 dcl     cobol_ext_$cobol_analin_fileno ptr ext;
  8    13 dcl     cobol_analin_fileno ptr defined (  cobol_ext_$cobol_analin_fileno);
  8    14 dcl     cobol_ext_$report_first_token ptr ext;
  8    15 dcl     report_first_token ptr defined( cobol_ext_$report_first_token);
  8    16 dcl     cobol_ext_$report_last_token ptr ext;
  8    17 dcl     report_last_token ptr defined ( cobol_ext_$report_last_token);
  8    18 dcl     cobol_ext_$cobol_eltp ptr ext;
  8    19 dcl     cobol_eltp ptr defined (  cobol_ext_$cobol_eltp);
  8    20 dcl     cobol_ext_$cobol_cmfp ptr ext;
  8    21 dcl     cobol_cmfp ptr defined (  cobol_ext_$cobol_cmfp);
  8    22 dcl     cobol_ext_$cobol_com_fileno ptr ext;
  8    23 dcl     cobol_com_fileno ptr defined (  cobol_ext_$cobol_com_fileno);
  8    24 dcl     cobol_ext_$cobol_com_ptr ptr ext;
  8    25 dcl     cobol_com_ptr ptr defined (  cobol_ext_$cobol_com_ptr);
  8    26 dcl     cobol_ext_$cobol_dfp ptr ext;
  8    27 dcl     cobol_dfp ptr defined (  cobol_ext_$cobol_dfp);
  8    28 dcl     cobol_ext_$cobol_hfp ptr ext;
  8    29 dcl     cobol_hfp ptr defined (  cobol_ext_$cobol_hfp);
  8    30 dcl     cobol_ext_$cobol_m1fp ptr ext;
  8    31 dcl     cobol_m1fp ptr defined (  cobol_ext_$cobol_m1fp);
  8    32 dcl     cobol_ext_$cobol_m2fp ptr ext;
  8    33 dcl     cobol_m2fp ptr defined (  cobol_ext_$cobol_m2fp);
  8    34 dcl     cobol_ext_$cobol_min1_fileno ptr ext;
  8    35 dcl     cobol_min1_fileno ptr defined (  cobol_ext_$cobol_min1_fileno);
  8    36 dcl     cobol_ext_$cobol_min2_fileno_ptr ptr ext;
  8    37 dcl     cobol_min2_fileno_ptr ptr defined (  cobol_ext_$cobol_min2_fileno_ptr);
  8    38 dcl     cobol_ext_$cobol_name_fileno ptr ext;
  8    39 dcl     cobol_name_fileno ptr defined (  cobol_ext_$cobol_name_fileno);
  8    40 dcl     cobol_ext_$cobol_name_fileno_ptr ptr ext;
  8    41 dcl     cobol_name_fileno_ptr ptr defined (  cobol_ext_$cobol_name_fileno_ptr);
  8    42 dcl     cobol_ext_$cobol_ntfp ptr ext;
  8    43 dcl     cobol_ntfp ptr defined (  cobol_ext_$cobol_ntfp);
  8    44 dcl     cobol_ext_$cobol_pdofp ptr ext;
  8    45 dcl     cobol_pdofp ptr defined (  cobol_ext_$cobol_pdofp);
  8    46 dcl     cobol_ext_$cobol_pfp ptr ext;
  8    47 dcl     cobol_pfp ptr defined (  cobol_ext_$cobol_pfp);
  8    48 dcl     cobol_ext_$cobol_rm2fp ptr ext;
  8    49 dcl     cobol_rm2fp ptr defined (  cobol_ext_$cobol_rm2fp);
  8    50 dcl     cobol_ext_$cobol_rmin2fp ptr ext;
  8    51 dcl     cobol_rmin2fp ptr defined (  cobol_ext_$cobol_rmin2fp);
  8    52 dcl     cobol_ext_$cobol_curr_in ptr ext;
  8    53 dcl     cobol_curr_in ptr defined (  cobol_ext_$cobol_curr_in);
  8    54 dcl     cobol_ext_$cobol_curr_out ptr ext;
  8    55 dcl     cobol_curr_out ptr defined (  cobol_ext_$cobol_curr_out);
  8    56 dcl     cobol_ext_$cobol_sfp ptr ext;
  8    57 dcl     cobol_sfp ptr defined (  cobol_ext_$cobol_sfp);
  8    58 dcl     cobol_ext_$cobol_w1p ptr ext;
  8    59 dcl     cobol_w1p ptr defined (  cobol_ext_$cobol_w1p);
  8    60 dcl     cobol_ext_$cobol_w2p ptr ext;
  8    61 dcl     cobol_w2p ptr defined (  cobol_ext_$cobol_w2p);
  8    62 dcl     cobol_ext_$cobol_w3p ptr ext;
  8    63 dcl     cobol_w3p ptr defined (  cobol_ext_$cobol_w3p);
  8    64 dcl     cobol_ext_$cobol_w5p ptr ext;
  8    65 dcl     cobol_w5p ptr defined (  cobol_ext_$cobol_w5p);
  8    66 dcl     cobol_ext_$cobol_w6p ptr ext;
  8    67 dcl     cobol_w6p ptr defined (  cobol_ext_$cobol_w6p);
  8    68 dcl     cobol_ext_$cobol_w7p ptr ext;
  8    69 dcl     cobol_w7p ptr defined (  cobol_ext_$cobol_w7p);
  8    70 dcl     cobol_ext_$cobol_x3fp ptr ext;
  8    71 dcl     cobol_x3fp ptr defined (  cobol_ext_$cobol_x3fp);
  8    72 dcl	cobol_ext_$cobol_rwdd ptr ext;
  8    73 dcl	cobol_rwdd ptr defined(cobol_ext_$cobol_rwdd);
  8    74 dcl	cobol_ext_$cobol_rwpd ptr ext;
  8    75 dcl	cobol_rwpd ptr defined(cobol_ext_$cobol_rwpd);
  8    76 
  8    77 
  8    78 dcl     cobol_ext_$cobol_fileno1 fixed bin(24)ext;
  8    79 dcl     cobol_fileno1 fixed bin(24)defined (  cobol_ext_$cobol_fileno1);				
  8    80 dcl     cobol_ext_$cobol_options_len fixed bin(24)ext;
  8    81 dcl     cobol_options_len fixed bin(24)defined (  cobol_ext_$cobol_options_len);
  8    82 dcl     cobol_ext_$cobol_pdout_fileno fixed bin(24)ext;
  8    83 dcl     cobol_pdout_fileno fixed bin(24)defined (  cobol_ext_$cobol_pdout_fileno);			
  8    84 dcl     cobol_ext_$cobol_print_fileno fixed bin(24)ext;
  8    85 dcl     cobol_print_fileno fixed bin(24)defined (  cobol_ext_$cobol_print_fileno);			
  8    86 dcl     cobol_ext_$cobol_rmin2_fileno fixed bin(24)ext;
  8    87 dcl     cobol_rmin2_fileno fixed bin(24)defined (  cobol_ext_$cobol_rmin2_fileno);
  8    88 dcl     cobol_ext_$cobol_x1_fileno fixed bin(24)ext;
  8    89 dcl     cobol_x1_fileno fixed bin(24)defined (  cobol_ext_$cobol_x1_fileno);				
  8    90 dcl     cobol_ext_$cobol_x2_fileno fixed bin(24)ext;
  8    91 dcl     cobol_x2_fileno fixed bin(24)defined (  cobol_ext_$cobol_x2_fileno);
  8    92 dcl     cobol_ext_$cobol_x3_fileno fixed bin(24)ext;
  8    93 dcl     cobol_x3_fileno fixed bin(24)defined (  cobol_ext_$cobol_x3_fileno);
  8    94 
  8    95 dcl     cobol_ext_$cobol_lpr char (5) ext;
  8    96 dcl     cobol_lpr char (5) defined (  cobol_ext_$cobol_lpr);				/* -2- */
  8    97 dcl     cobol_ext_$cobol_options char (120) ext;
  8    98 dcl     cobol_options char (120) defined (  cobol_ext_$cobol_options);          			/* -30- */
  8    99 
  8   100 dcl     cobol_ext_$cobol_xlast8 bit (1) ext;
  8   101 dcl     cobol_xlast8 bit (1) defined (  cobol_ext_$cobol_xlast8);				/* -1- */
  8   102 dcl     cobol_ext_$report_exists bit (1) ext;
  8   103 dcl     report_exists bit (1) defined (  cobol_ext_$report_exists);
  8   104 
  8   105 
  8   106 /*    <<<   END OF SHARED EXTERNALS INCLUDE FILE   >>>    */
  8   107 /* END INCLUDE FILE ... cobol_ext_.incl.pl1 */
  8   108 
     2381 
  9     1 
  9     2 /* BEGIN INCLUDE FILE ... cobol_.incl.pl1 */
  9     3 /* last modified Feb 4, 1977 by ORN  */
  9     4 
  9     5 /* This file defines all external data used in the generator phase of Multics Cobol */
  9     6 
  9     7 /* POINTERS */
  9     8 dcl cobol_$text_base_ptr ptr  ext;
  9     9 dcl text_base_ptr ptr  defined (cobol_$text_base_ptr);
  9    10 dcl cobol_$con_end_ptr ptr  ext;
  9    11 dcl con_end_ptr ptr  defined (cobol_$con_end_ptr);
  9    12 dcl cobol_$def_base_ptr ptr  ext;
  9    13 dcl def_base_ptr ptr  defined (cobol_$def_base_ptr);
  9    14 dcl cobol_$link_base_ptr ptr  ext;
  9    15 dcl link_base_ptr ptr  defined (cobol_$link_base_ptr);
  9    16 dcl cobol_$sym_base_ptr ptr  ext;
  9    17 dcl sym_base_ptr ptr  defined (cobol_$sym_base_ptr);
  9    18 dcl cobol_$reloc_text_base_ptr ptr  ext;
  9    19 dcl reloc_text_base_ptr ptr  defined (cobol_$reloc_text_base_ptr);
  9    20 dcl cobol_$reloc_def_base_ptr ptr  ext;
  9    21 dcl reloc_def_base_ptr ptr  defined (cobol_$reloc_def_base_ptr);
  9    22 dcl cobol_$reloc_link_base_ptr ptr  ext;
  9    23 dcl reloc_link_base_ptr ptr  defined (cobol_$reloc_link_base_ptr);
  9    24 dcl cobol_$reloc_sym_base_ptr ptr  ext;
  9    25 dcl reloc_sym_base_ptr ptr  defined (cobol_$reloc_sym_base_ptr);
  9    26 dcl cobol_$reloc_work_base_ptr ptr  ext;
  9    27 dcl reloc_work_base_ptr ptr  defined (cobol_$reloc_work_base_ptr);
  9    28 dcl cobol_$pd_map_ptr ptr  ext;
  9    29 dcl pd_map_ptr ptr  defined (cobol_$pd_map_ptr);
  9    30 dcl cobol_$fixup_ptr ptr  ext;
  9    31 dcl fixup_ptr ptr  defined (cobol_$fixup_ptr);
  9    32 dcl cobol_$initval_base_ptr ptr  ext;
  9    33 dcl initval_base_ptr ptr  defined (cobol_$initval_base_ptr);
  9    34 dcl cobol_$initval_file_ptr ptr  ext;
  9    35 dcl initval_file_ptr ptr  defined (cobol_$initval_file_ptr);
  9    36 dcl cobol_$perform_list_ptr ptr  ext;
  9    37 dcl perform_list_ptr ptr  defined (cobol_$perform_list_ptr);
  9    38 dcl cobol_$alter_list_ptr ptr  ext;
  9    39 dcl alter_list_ptr ptr  defined (cobol_$alter_list_ptr);
  9    40 dcl cobol_$seg_init_list_ptr ptr  ext;
  9    41 dcl seg_init_list_ptr ptr  defined (cobol_$seg_init_list_ptr);
  9    42 dcl cobol_$temp_token_area_ptr ptr  ext;
  9    43 dcl temp_token_area_ptr ptr  defined (cobol_$temp_token_area_ptr);
  9    44 dcl cobol_$temp_token_ptr ptr  ext;
  9    45 dcl temp_token_ptr ptr  defined (cobol_$temp_token_ptr);
  9    46 dcl cobol_$token_block1_ptr ptr  ext;
  9    47 dcl token_block1_ptr ptr  defined (cobol_$token_block1_ptr);
  9    48 dcl cobol_$token_block2_ptr ptr  ext;
  9    49 dcl token_block2_ptr ptr  defined (cobol_$token_block2_ptr);
  9    50 dcl cobol_$minpral5_ptr ptr  ext;
  9    51 dcl minpral5_ptr ptr  defined (cobol_$minpral5_ptr);
  9    52 dcl cobol_$tag_table_ptr ptr  ext;
  9    53 dcl tag_table_ptr ptr  defined (cobol_$tag_table_ptr);
  9    54 dcl cobol_$map_data_ptr ptr  ext;
  9    55 dcl map_data_ptr ptr  defined (cobol_$map_data_ptr);
  9    56 dcl cobol_$ptr_status_ptr ptr  ext;
  9    57 dcl ptr_status_ptr ptr  defined (cobol_$ptr_status_ptr);
  9    58 dcl cobol_$reg_status_ptr ptr  ext;
  9    59 dcl reg_status_ptr ptr  defined (cobol_$reg_status_ptr);
  9    60 dcl cobol_$misc_base_ptr ptr ext;
  9    61 dcl misc_base_ptr ptr defined (cobol_$misc_base_ptr);
  9    62 dcl cobol_$misc_end_ptr ptr ext;
  9    63 dcl misc_end_ptr ptr defined (cobol_$misc_end_ptr);
  9    64 dcl cobol_$list_ptr ptr ext;
  9    65 dcl list_ptr ptr defined (cobol_$list_ptr);
  9    66 dcl cobol_$allo1_ptr ptr ext;
  9    67 dcl allo1_ptr ptr defined (cobol_$allo1_ptr);
  9    68 dcl cobol_$eln_ptr ptr ext;
  9    69 dcl eln_ptr ptr defined (cobol_$eln_ptr);
  9    70 dcl cobol_$diag_ptr ptr ext;
  9    71 dcl diag_ptr ptr defined (cobol_$diag_ptr);
  9    72 dcl cobol_$xref_token_ptr ptr ext;
  9    73 dcl xref_token_ptr ptr defined (cobol_$xref_token_ptr);
  9    74 dcl cobol_$xref_chain_ptr ptr ext;
  9    75 dcl xref_chain_ptr ptr defined (cobol_$xref_chain_ptr);
  9    76 dcl cobol_$statement_info_ptr ptr ext;
  9    77 dcl statement_info_ptr ptr defined (cobol_$statement_info_ptr);
  9    78 dcl cobol_$reswd_ptr ptr ext;
  9    79 dcl reswd_ptr ptr defined (cobol_$reswd_ptr);
  9    80 dcl cobol_$op_con_ptr ptr ext;
  9    81 dcl op_con_ptr ptr defined (cobol_$op_con_ptr);
  9    82 dcl cobol_$ntbuf_ptr ptr ext;
  9    83 dcl ntbuf_ptr ptr defined (cobol_$ntbuf_ptr);
  9    84 dcl cobol_$main_pcs_ptr ptr ext;
  9    85 dcl main_pcs_ptr ptr defined (cobol_$main_pcs_ptr);
  9    86 dcl cobol_$include_info_ptr ptr ext;
  9    87 dcl include_info_ptr ptr defined (cobol_$include_info_ptr);
  9    88 
  9    89 /* FIXED BIN */
  9    90 dcl cobol_$text_wd_off fixed bin  ext;
  9    91 dcl text_wd_off fixed bin  defined (cobol_$text_wd_off);
  9    92 dcl cobol_$con_wd_off fixed bin  ext;
  9    93 dcl con_wd_off fixed bin  defined (cobol_$con_wd_off);
  9    94 dcl cobol_$def_wd_off fixed bin  ext;
  9    95 dcl def_wd_off fixed bin  defined (cobol_$def_wd_off);
  9    96 dcl cobol_$def_max fixed bin  ext;
  9    97 dcl def_max fixed bin  defined (cobol_$def_max);
  9    98 dcl cobol_$link_wd_off fixed bin  ext;
  9    99 dcl link_wd_off fixed bin  defined (cobol_$link_wd_off);
  9   100 dcl cobol_$link_max fixed bin  ext;
  9   101 dcl link_max fixed bin  defined (cobol_$link_max);
  9   102 dcl cobol_$sym_wd_off fixed bin  ext;
  9   103 dcl sym_wd_off fixed bin  defined (cobol_$sym_wd_off);
  9   104 dcl cobol_$sym_max fixed bin  ext;
  9   105 dcl sym_max fixed bin  defined (cobol_$sym_max);
  9   106 dcl cobol_$reloc_text_max fixed bin(24)  ext;
  9   107 dcl reloc_text_max fixed bin(24)  defined (cobol_$reloc_text_max);
  9   108 dcl cobol_$reloc_def_max fixed bin(24)  ext;
  9   109 dcl reloc_def_max fixed bin(24)  defined (cobol_$reloc_def_max);
  9   110 dcl cobol_$reloc_link_max fixed bin(24)  ext;
  9   111 dcl reloc_link_max fixed bin(24)  defined (cobol_$reloc_link_max);
  9   112 dcl cobol_$reloc_sym_max fixed bin(24)  ext;
  9   113 dcl reloc_sym_max fixed bin(24)  defined (cobol_$reloc_sym_max);
  9   114 dcl cobol_$reloc_work_max fixed bin(24)  ext;
  9   115 dcl reloc_work_max fixed bin(24)  defined (cobol_$reloc_work_max);
  9   116 dcl cobol_$pd_map_index fixed bin  ext;
  9   117 dcl pd_map_index fixed bin  defined (cobol_$pd_map_index);
  9   118 dcl cobol_$cobol_data_wd_off fixed bin  ext;
  9   119 dcl cobol_data_wd_off fixed bin  defined (cobol_$cobol_data_wd_off);
  9   120 dcl cobol_$stack_off fixed bin  ext;
  9   121 dcl stack_off fixed bin  defined (cobol_$stack_off);
  9   122 dcl cobol_$max_stack_off fixed bin  ext;
  9   123 dcl max_stack_off fixed bin  defined (cobol_$max_stack_off);
  9   124 dcl cobol_$init_stack_off fixed bin  ext;
  9   125 dcl init_stack_off fixed bin  defined (cobol_$init_stack_off);
  9   126 dcl cobol_$pd_map_sw fixed bin  ext;
  9   127 dcl pd_map_sw fixed bin  defined (cobol_$pd_map_sw);
  9   128 dcl cobol_$next_tag fixed bin  ext;
  9   129 dcl next_tag fixed bin  defined (cobol_$next_tag);
  9   130 dcl cobol_$data_init_flag fixed bin  ext;
  9   131 dcl data_init_flag fixed bin  defined (cobol_$data_init_flag);
  9   132 dcl cobol_$seg_init_flag fixed bin  ext;
  9   133 dcl seg_init_flag fixed bin  defined (cobol_$seg_init_flag);
  9   134 dcl cobol_$alter_flag fixed bin  ext;
  9   135 dcl alter_flag fixed bin  defined (cobol_$alter_flag);
  9   136 dcl cobol_$sect_eop_flag fixed bin  ext;
  9   137 dcl sect_eop_flag fixed bin  defined (cobol_$sect_eop_flag);
  9   138 dcl cobol_$para_eop_flag fixed bin  ext;
  9   139 dcl para_eop_flag fixed bin  defined (cobol_$para_eop_flag);
  9   140 dcl cobol_$priority_no fixed bin  ext;
  9   141 dcl priority_no fixed bin  defined (cobol_$priority_no);
  9   142 dcl cobol_$compile_count fixed bin ext;
  9   143 dcl compile_count fixed bin defined (cobol_$compile_count);
  9   144 dcl cobol_$ptr_assumption_ind fixed bin ext;
  9   145 dcl ptr_assumption_ind fixed bin defined (cobol_$ptr_assumption_ind);
  9   146 dcl cobol_$reg_assumption_ind fixed bin ext;
  9   147 dcl reg_assumption_ind fixed bin defined (cobol_$reg_assumption_ind);
  9   148 dcl cobol_$perform_para_index fixed bin ext;
  9   149 dcl perform_para_index fixed bin defined (cobol_$perform_para_index);
  9   150 dcl cobol_$perform_sect_index fixed bin ext;
  9   151 dcl perform_sect_index fixed bin defined (cobol_$perform_sect_index);
  9   152 dcl cobol_$alter_index fixed bin ext;
  9   153 dcl alter_index fixed bin defined (cobol_$alter_index);
  9   154 dcl cobol_$list_off fixed bin ext;
  9   155 dcl list_off fixed bin defined (cobol_$list_off);
  9   156 dcl cobol_$constant_offset fixed bin ext;
  9   157 dcl constant_offset fixed bin defined (cobol_$constant_offset);
  9   158 dcl cobol_$misc_max fixed bin ext;
  9   159 dcl misc_max fixed bin defined (cobol_$misc_max);
  9   160 dcl cobol_$pd_map_max fixed bin ext;
  9   161 dcl pd_map_max fixed bin defined (cobol_$pd_map_max);
  9   162 dcl cobol_$map_data_max fixed bin ext;
  9   163 dcl map_data_max fixed bin defined (cobol_$map_data_max);
  9   164 dcl cobol_$fixup_max fixed bin ext;
  9   165 dcl fixup_max fixed bin defined (cobol_$fixup_max);
  9   166 dcl cobol_$tag_table_max fixed bin ext;
  9   167 dcl tag_table_max fixed bin defined (cobol_$tag_table_max);
  9   168 dcl cobol_$temp_token_max fixed bin ext;
  9   169 dcl temp_token_max fixed bin defined (cobol_$temp_token_max);
  9   170 dcl cobol_$allo1_max fixed bin ext;
  9   171 dcl allo1_max fixed bin defined (cobol_$allo1_max);
  9   172 dcl cobol_$eln_max fixed bin ext;
  9   173 dcl eln_max fixed bin defined (cobol_$eln_max);
  9   174 dcl cobol_$debug_enable fixed bin ext;
  9   175 dcl debug_enable fixed bin defined (cobol_$debug_enable);
  9   176 dcl cobol_$non_source_offset fixed bin ext;
  9   177 dcl non_source_offset fixed bin defined (cobol_$non_source_offset);
  9   178 dcl cobol_$initval_flag fixed bin ext;
  9   179 dcl initval_flag fixed bin defined (cobol_$initval_flag);
  9   180 dcl cobol_$date_compiled_sw fixed bin ext;
  9   181 dcl date_compiled_sw fixed bin defined (cobol_$date_compiled_sw);
  9   182 dcl cobol_$include_cnt fixed bin ext;
  9   183 dcl include_cnt fixed bin defined (cobol_$include_cnt);
  9   184 dcl cobol_$fs_charcnt fixed bin ext;
  9   185 dcl fs_charcnt fixed bin defined (cobol_$fs_charcnt);
  9   186 dcl cobol_$ws_charcnt fixed bin ext;
  9   187 dcl ws_charcnt fixed bin defined (cobol_$ws_charcnt);
  9   188 dcl cobol_$coms_charcnt fixed bin ext;
  9   189 dcl coms_charcnt fixed bin defined (cobol_$coms_charcnt);
  9   190 dcl cobol_$ls_charcnt fixed bin ext;
  9   191 dcl ls_charcnt fixed bin defined (cobol_$ls_charcnt);
  9   192 dcl cobol_$cons_charcnt fixed bin ext;
  9   193 dcl cons_charcnt fixed bin defined (cobol_$cons_charcnt);
  9   194 dcl cobol_$value_cnt fixed bin ext;
  9   195 dcl value_cnt fixed bin defined (cobol_$value_cnt);
  9   196 dcl cobol_$cd_cnt fixed bin ext;
  9   197 dcl cd_cnt fixed bin defined (cobol_$cd_cnt);
  9   198 dcl cobol_$fs_wdoff fixed bin ext;
  9   199 dcl fs_wdoff fixed bin defined (cobol_$fs_wdoff);
  9   200 dcl cobol_$ws_wdoff fixed bin ext;
  9   201 dcl ws_wdoff fixed bin defined (cobol_$ws_wdoff);
  9   202 dcl cobol_$coms_wdoff fixed bin ext;
  9   203 dcl coms_wdoff fixed bin defined (cobol_$coms_wdoff);
  9   204 
  9   205 /* CHARACTER */
  9   206 dcl cobol_$scratch_dir char (168)   aligned ext;
  9   207 dcl scratch_dir char (168)   aligned defined (cobol_$scratch_dir);			/* -42- */
  9   208 dcl cobol_$obj_seg_name char (32)   aligned ext;
  9   209 dcl obj_seg_name char (32)   aligned defined (cobol_$obj_seg_name);		/* -8- */
  9   210 
  9   211 /* BIT */
  9   212 dcl cobol_$xref_bypass bit(1) aligned ext;
  9   213 dcl xref_bypass bit(1) aligned defined (cobol_$xref_bypass);			/* -1- */
  9   214 dcl cobol_$same_sort_merge_proc bit(1) aligned ext;
  9   215 dcl same_sort_merge_proc bit(1) aligned defined (cobol_$same_sort_merge_proc);		/* -1- */
  9   216 
  9   217 
  9   218 /* END INCLUDE FILE ... cobol_incl.pl1*/
  9   219 
  9   220 
     2382 
 10     1 
 10     2 /* BEGIN INCLUDE FILE ...   cobol_fixed_common.incl.pl1 */
 10     3 /* Modified on 10/27/82 by FCH, [5.1-1], cobol_cln added to save last line num, BUG543(phx13643) */
 10     4 /* Modified on 07/31/80 by FCH, [4.3-1], use_reporting field added for Report Writer */
 10     5 /* Modified on 03/30/79 by FCH, [4.1-1], -card option added */
 10     6 /* Modified on 03/30/79 by FCH, [4.0-2], -svNM option added */
 10     7 /* Modified on 03/02/79 by FCH, [4.0-1], -levNM option added */
 10     8 /* Modified by RAL on 10/13/78, [4.0-0], Added option exp from fil2. */
 10     9 /* Modified by BC on 06/20/77, descriptor added.	*/
 10    10 /* Modified by BC on 06/02/77, init_cd_seg, init_cd_offset added.	*/
 10    11 /* Modified by BC  on 1/21/77, options.profile added.	*/
 10    12 /* Modified by FCH on 7/6/76, sysin_fno & sysout_fno deleted, accept_device & display_device added */
 10    13 /* Modified by FCH on 5/20/77, comp_level added */
 10    14 
 10    15 
 10    16 /*     THE SIZE OF THIS STRUCTURE IN BYTES, (EXCLUDING VARIABLE
 10    17*   LENGTH ENTITIES), FOR EACH HARDWARE IMPLEMENTATION IS:
 10    18*
 10    19*   HARDWARE	|	SIZE (BYTES)
 10    20*   ---------------------------------
 10    21*   645/6180	|	464
 10    22*   P7		|	396
 10    23*   ---------------------------------
 10    24*   */
 10    25 
 10    26 dcl 	1 fixed_common based (  cobol_com_ptr),
 10    27     		2 prog_name char (30),
 10    28    		2 compiler_rev_no char (25),
 10    29     		2 phase_name char (6),
 10    30     		2 currency char (1),
 10    31     		2 fatal_no fixed bin,
 10    32     		2 warn_no fixed bin,
 10    33     		2 proc_counter fixed bin,
 10    34     		2 spec_tag_counter fixed bin,
 10    35     		2 file_count fixed bin,
 10    36     		2 filedescr_offsets (20) char (5),
 10    37     		2 perf_alter_info char (5),
 10    38     		2 another_perform_info char (5),
 10    39     		2 sort_in_info char (5),
 10    40     		2 odo_info char (5),
 10    41     		2 size_seg fixed bin,
 10    42     		2 size_offset fixed bin(24),
 10    43     		2 size_perform_info char (5),
 10    44     		2 rename_info char (5),
 10    45     		2 report_names char (5),
 10    46     		2 rw_buf_seg fixed bin,
 10    47     		2 rw_buf_offset fixed bin(24),
 10    48     		2 rw_buf_length fixed bin(24),
 10    49     		2 file_keys char (5),
 10    50     		2 search_keys char (5),
 10    51     		2 dd_seg_size fixed bin(24),
 10    52     		2 pd_seg_size fixed bin(24),
 10    53     		2 seg_limit fixed bin ,
 10    54     		2 number_of_dd_segs fixed bin,
 10    55     		2 seg_info char (5),
 10    56     		2 number_of_ls_pointers fixed bin,
 10    57     		2 link_sec_seg fixed bin,
 10    58     		2 link_sec_offset fixed bin(24),
 10    59     		2 sra_clauses fixed bin,
 10    60     		2 fix_up_info char (5),
 10    61     		2 linage_info char (5),
 10    62     		2 first_dd_item char (5),
 10    63     		2 sort_out_info char (5),
 10    64     		2 db_info char (5),
 10    65     		2 realm_info char (5),
 10    66     		2 rc_realm_info char (5),
 10    67     		2 last_file_key char (5),
 10    68     		2 prog_coll_seq fixed bin,
 10    69 		2 init_cd_seg fixed bin,
 10    70 		2 init_cd_offset fixed bin(24),
 10    71     		2 input_error_exit fixed bin,
 10    72    		2 output_error_exit fixed bin,
 10    73     		2 i_o_error_exit fixed bin,
 10    74     		2 extend_error_exit fixed bin,
 10    75     		2 dummy15 fixed bin,
 10    76     		2 options,
 10    77       			3 cu bit (1),
 10    78       			3 st bit (1),
 10    79       			3 wn bit (1),
 10    80       			3 obs bit (1),
 10    81       			3 dm bit (1),
 10    82       			3 xrl bit (1),
 10    83       			3 xrn bit (1),
 10    84       			3 src bit (1),
 10    85       			3 obj bit (1),
 10    86       			3 exs bit (1),
 10    87       			3 sck bit (1),
 10    88       			3 rno bit (1),
 10    89 			3 u_l bit (1),
 10    90 			3 cnv bit (1),
 10    91 			3 cos bit (1),
 10    92 			3 fmt bit (1),
 10    93 			3 profile bit(1),
 10    94 			3 nw bit (1),
 10    95 			3 exp bit (1),		/* [4.0-0] */
 10    96 			3 card bit (1),  /*[4.1-1]*/
 10    97 			3 fil2 bit (5),
 10    98 			3 m_map bit (1),
 10    99 			3 m_bf bit (1),
 10   100 			3 m_fat bit (1),
 10   101 			3 m_wn bit (1),
 10   102 			3 m_obs bit(1),
 10   103 			3 pd bit(1),
 10   104       			3 oc bit(1),
 10   105     		2 supervisor bit (1),
 10   106     		2 dec_comma bit (1),
 10   107     		2 init_cd bit (1),
 10   108     		2 corr bit (1),
 10   109     		2 initl bit (1),
 10   110     		2 debug bit (1),
 10   111     		2 report bit (1),
 10   112     		2 sync_in_prog bit (1),
 10   113     		2 pd_section bit (1),
 10   114     		2 list_switch bit (1),
 10   115     		2 alpha_cond bit (1),
 10   116     		2 num_cond bit (1),
 10   117     		2 spec_sysin bit (1),
 10   118     		2 spec_sysout bit (1),
 10   119     		2 cpl_files bit (1),
 10   120     		2 obj_dec_comma bit (1),
 10   121 		2 default_sign_type bit (3),
 10   122 		2 use_debug bit(1),
 10   123 		2 syntax_trace bit(1),
 10   124 		2 comp_defaults,
 10   125 			3 comp	bit(1),
 10   126 			3 comp_1	bit(1),
 10   127 			3 comp_2	bit(1),
 10   128 			3 comp_3	bit(1),
 10   129 			3 comp_4	bit(1),
 10   130 			3 comp_5	bit(1),
 10   131 			3 comp_6	bit(1),
 10   132 			3 comp_7	bit(1),
 10   133 			3 comp_8 bit(1),
 10   134 		2 disp_defaults,
 10   135 			3 disp	bit(1),
 10   136 			3 disp_1	bit(1),
 10   137 			3 disp_2	bit(1),
 10   138 			3 disp_3	bit(1),
 10   139 			3 disp_4	bit(1),
 10   140 			3 disp_5  bit(1),
 10   141 			3 disp_6  bit(1),
 10   142 			3 disp_7  bit(1),
 10   143 		2 descriptor bit(2),
 10   144 		2 levsv  bit(3),		/*[4.0-1]*/
 10   145 		2 use_reporting bit(1),	/*[4.3-1]*/
 10   146 		2 cd bit(1),		/*[4.4-1]*/
 10   147 		2 dummy17 bit(3),
 10   148    		2 lvl_rstr bit(32),
 10   149    		2 inst_rstr bit(32),
 10   150 		2 comp_level char(1),
 10   151 		2 dummy18 char(30),
 10   152 		2 object_sign char (1),
 10   153     		2 last_print_rec char (5),
 10   154     		2 coll_seq_info char (5),
 10   155     		2 sys_status_seg fixed bin,
 10   156    		2 sys_status_offset fixed bin(24),
 10   157    		2 compiler_id fixed bin,
 10   158    		2 date_comp_ln fixed bin,
 10   159    		2 compile_mode bit(36),
 10   160    		2 default_temp fixed bin,
 10   161    		2 accept_device fixed bin,
 10   162    		2 display_device fixed bin,
 10   163    		2 cobol_cln fixed bin,	/*[5.1-1]*/
 10   164 		2 alphabet_offset fixed bin;
 10   165 
 10   166 
 10   167 
 10   168 /* END INCLUDE FILE ...   cobol_fixed_common.incl.pl1 */
 10   169 
     2383 
 11     1 
 11     2 /* BEGIN INCLUDE FILE ...   cobol_file_table.incl.pl1 */
 11     3 /*     <<<   INCLUDE FILE FOR FILE TABLE IN COMMON   >>>     */
 11     4 
 11     5 /* Modified on 09/30/80 by FCH, [4.4-1], density is 6250 is supported */
 11     6 /* Modified on 12/05/78 by RAL, [3.0-3], added dupl_alt from dummy102 */
 11     7 /* Modified on 11/21/78 by RAL, [3.0-2], added space for abs_record_offset from filler */
 11     8 /* Modified on 10/26/78 by RAL, [3.0-1], added space for file_desc_1 table offset from filler */
 11     9 /*     <<<   LAST MODIFIED ON 06-02-77 by GM         >>>	*/
 11    10 /*     <<<   LAST MODIFIED ON 05-31-77 by GM         >>>	*/
 11    11 /*     <<<   LAST MODIFIED  ON 06-30-76 by GM        >>>	*/
 11    12 /*     <<<   LAST MODIFIED ON 06-07-76 by GM    >>>     */
 11    13 /*     <<<   LAST MODIFIED ON 11-29-74 by orn   >>>     */
 11    14 
 11    15 /*
 11    16*A file table is created in variable common for each file selected in the
 11    17*environment division.  The fields of a given file table provide information
 11    18*about the specific file for which the file table is generated.  The
 11    19*addresses which may be contained in the various "info" fields of the file
 11    20*table are addresses in variable common.
 11    21**/
 11    22 
 11    23 /*   THE FILE TABLE STRUCTURE   */
 11    24 
 11    25 dcl	1 file_table based (ft_ptr),
 11    26 		2 next char (5),
 11    27 		2 ifn char (16),
 11    28 		2 attach_options_info char(5),	/*06/02/77*/
 11    29 		2 replacement_info char(5),		/*06/02/77*/
 11    30 		2 file_id_info char(5),		/*05/31/77*/
 11    31 		2 retention_info char(5),		/*05/31/77*/
 11    32 		2 filler0 char (3) ,			/* [3.0-1] */
 11    33 		2 file_desc_1_offset fixed bin (24),		/* [3.0-1] */
 11    34 		2 abs_record_offset fixed bin (24),		/* [3.-02] */
 11    35 		2 filler char(5),		/* this area is available.*/
 11    36 		2 padding_char char (1),
 11    37 		2 banner_char char (1),
 11    38 		2 file_status_info char (5),
 11    39 		2 extra_status_info char (5),
 11    40 		2 cat_id_info char (5),
 11    41 		2 r_key_info char (5),
 11    42 		2 alt_key_info char (5),
 11    43 		2 rec_do_info char (5),
 11    44 		2 label_info char (5),
 11    45 		2 data_info char (5),
 11    46 		2 report_info char (5),
 11    47 		2 linage_info char (5),
 11    48 		2 optional bit (1),						/*06/07/76*/
 11    49 		2 external bit (1),
 11    50 		2 file_status bit (1),
 11    51 		2 extra_status bit (1),
 11    52 		2 sysin bit (1),
 11    53 		2 sysout bit (1),
 11    54 		2 move_mode bit (1),
 11    55 		2 locate_mode bit (1),
 11    56 		2 fixed_recs bit (1),
 11    57 		2 variable_recs bit (1),
 11    58 		2 spanned_recs bit (1),				/*06/07/76*/
 11    59 		2 interchange bit (1),				/*06/07/76*/
 11    60 		2 relative_key bit (1),
 11    61 		2 record_key bit (1),
 11    62 		2 even_parity bit (1),
 11    63 		2 odd_parity bit (1),
 11    64 		2 padding bit (1),
 11    65 		2 banner bit (1),
 11    66 		2 random bit (1),
 11    67 		2 no_file_lockout bit (1),
 11    68 		2 no_write_check bit (1),
 11    69 		2 no_resident_index bit (1),
 11    70 		2 same_file bit (1),
 11    71 		2 sort_file bit (1),
 11    72 		2 rec_do bit (1),
 11    73 		2 linage bit (1),
 11    74 		2 code_set_clause bit (1),
 11    75 		/* history */
 11    76 		2 close bit (1),
 11    77 		2 delete bit (1),
 11    78 		2 open_in bit (1),
 11    79 		2 open_out bit (1),
 11    80 		2 open_io bit (1),
 11    81 		2 open_ext bit (1),
 11    82 		2 read bit (1),
 11    83 		2 release bit (1),
 11    84 		2 return_bit bit (1),
 11    85 		2 rewrite bit (1),
 11    86 		2 sort bit (1),
 11    87 		2 start bit (1),
 11    88 		2 use_error bit (1),
 11    89 		2 write bit (1),
 11    90 		2 read_next bit (1),
 11    91 		2 read_key bit (1),
 11    92 		2 accept bit (1),
 11    93 		2 display bit (1),
 11    94 		2 unequal_recs bit (1),
 11    95 		2 dummy_sysin bit (1),
 11    96 		2 dummy_sysout bit (1),
 11    97 		2 file_no fixed bin,
 11    98 		2 uca_offset fixed bin(24),
 11    99 		2 cra_seg fixed bin,
 11   100 		2 cra_offset fixed bin(24),
 11   101 		2 max_cra_size fixed bin(24),
 11   102 		2 catalogued fixed bin,
 11   103 		2 organization fixed bin,
 11   104 		2 org_qual fixed bin,
 11   105 		2 access fixed bin,
 11   106 		2 buffers fixed bin,
 11   107 		2 device fixed bin,
 11   108 		2 record_prefix fixed bin,				/*06/07/76*/
 11   109 		2 alternate_keys fixed bin,
 11   110 		2 record_format fixed bin,
 11   111 		2 label_format fixed bin,
 11   112 		2 key_location fixed bin,
 11   113 		2 key_size fixed bin,
 11   114 		2 temporary fixed bin,
 11   115 		2 address_format fixed bin,
 11   116 		2 same_area_clause fixed bin,
 11   117 		2 same_rec_clause fixed bin,
 11   118 		2 same_sort_clause fixed bin,
 11   119 		2 mult_clause_no fixed bin,
 11   120 		2 mult_position_no fixed bin,
 11   121 		2 block_desc fixed bin,
 11   122 		2 block_min fixed bin(24),
 11   123 		2 block_max fixed bin(24),
 11   124 		2 rec_min fixed bin(24),
 11   125 		2 rec_max fixed bin(24),
 11   126 		2 label_count fixed bin,
 11   127 		2 ifn_size fixed bin,
 11   128 		2 data_count fixed bin,
 11   129 		2 report_count fixed bin,
 11   130 		2 code_set fixed bin,
 11   131 		2 error_exit fixed bin,
 11   132 		2 prefix_size fixed bin,
 11   133 		2 blocked bit (1),
 11   134 		2 variable bit (1),
 11   135 		2 unbannered bit (1),
 11   136 		2 prefix_clause bit (1),
 11   137 		2 symbolic bit (1),
 11   138 		2 address_format_bit bit (1),
 11   139 		2 bsn bit(1),						/*06/07/76*/
 11   140 		2 process_area bit(1),					/*06/07/76*/
 11   141 		2 dupl_alt bit (1),			/* [3.0-3] */
 11   142 		2 dummy102 bit (23),
 11   143 		2 name_size fixed bin,
 11   144 		2 name char(32),
 11   145 		2 id char(32),
 11   146 		2 temp bit(1) ,
 11   147 		2 perm bit(1) ,
 11   148 		2 attach bit(1) ,
 11   149 		2 detach bit(1) ,
 11   150 		2 fsb ,		/* file state block */
 11   151 		     3 seg fixed bin(24), /* internal addr */
 11   152 		     3 off fixed bin(24),
 11   153 		2 tape,
 11   154 		     3 density bit(1) ,	/* 0-hi 1-lo */
 11   155 		     3 retain bit(1),	/* 0 not retained across attachment, 1 retained */
 11   156 		     3 force bit(1),	/* 0 check retention date, 1 no check */
 11   157 		     3 protect bit(1) ,	/* 0-no 1-yes */
 11   158 		     3 den_6250 bit(1),	/* 0-no 1-yes */		/*[4.4-1]*/
 11   159 		2 cat_nm char(200),
 11   160 		2 ao_len fixed bin(24),		/* attach options */
 11   161 		2 ao_string char(256),
 11   162 		2 output_mode fixed bin,	/*	0 not specified
 11   163*						1 generation
 11   164*						2 modification
 11   165*						3 replacement literal
 11   166*						4 replacement dataname	*/
 11   167 		2 om_len	fixed bin,		/* length of output mode */
 11   168 		2 om_string char(17),
 11   169 		2 tape_device fixed bin,	/*	0 not specified
 11   170*						1 integer
 11   171*						2 dataname	*/
 11   172 		2 tape_device_num fixed bin,
 11   173 		2 tape_device_key char(5),
 11   174 		2 add_cat_key char(5);
 11   175 
 11   176 
 11   177 /* END INCLUDE FILE ...   cobol_file_table.incl.pl1 */
 11   178 
     2384 
 12     1 
 12     2 /* BEGIN INCLUDE FILE ... cobol_type9.incl.pl1 */
 12     3 /* Last modified on 11/19/76 by ORN */
 12     4 
 12     5 /*
 12     6*A type 9 data name token is entered into the name table by the data
 12     7*division syntax phase for each data name described in the data division.
 12     8*The replacement phase subsequently replaces type 8 user word references
 12     9*to data names in the procedure division minpral file with the corresponding
 12    10*type 9 tokens from the name table.
 12    11**/
 12    12 
 12    13 /* dcl dn_ptr ptr; */
 12    14 
 12    15 /* BEGIN DECLARATION OF TYPE9 (DATA NAME) TOKEN */
 12    16 dcl 1 data_name based (dn_ptr),
 13     1 
 13     2 /* begin include file ... cobol_TYPE9.incl.pl1 */
 13     3 /* Last modified on 06/19/77 by ORN */
 13     4 /* Last modified on 12/28/76 by FCH */
 13     5 
 13     6 		/* header */
 13     7 		2 size fixed bin,
 13     8 		2 line fixed bin,
 13     9 		2 column fixed bin,
 13    10 		2 type fixed bin,
 13    11 		/* body */
 13    12 		2 string_ptr ptr,
 13    13 		2 prev_rec ptr,
 13    14 		2 searched bit (1),
 13    15 		2 duplicate bit (1),
 13    16 		2 saved bit (1),
 13    17 		2 debug_ind bit (1),
 13    18 		2 filler2 bit (3),
 13    19 		2 used_as_sub bit (1),
 13    20 		2 def_line fixed bin,
 13    21 		2 level fixed bin,
 13    22 		2 linkage fixed bin,
 13    23 		2 file_num fixed bin,
 13    24 		2 size_rtn fixed bin,
 13    25 		2 item_length fixed bin(24),
 13    26 		2 places_left fixed bin,
 13    27 		2 places_right fixed bin,
 13    28 		/* description */
 13    29 		2 file_section bit (1),
 13    30 		2 working_storage bit (1),
 13    31 		2 constant_section bit (1),
 13    32 		2 linkage_section bit (1),
 13    33 		2 communication_section bit (1),
 13    34 		2 report_section bit (1),
 13    35 		2 level_77 bit (1),
 13    36 		2 level_01 bit (1),
 13    37 		2 non_elementary bit (1),
 13    38 		2 elementary bit (1),
 13    39 		2 filler_item bit (1),
 13    40 		2 s_of_rdf bit (1),
 13    41 		2 o_of_rdf bit (1),
 13    42 		2 bin_18 bit (1),
 13    43 		2 bin_36 bit (1),
 13    44 		2 pic_has_l bit (1),
 13    45 		2 pic_is_do bit (1),
 13    46 		2 numeric bit (1),
 13    47 		2 numeric_edited bit (1),
 13    48 		2 alphanum bit (1),
 13    49 		2 alphanum_edited bit (1),
 13    50 		2 alphabetic bit (1),
 13    51 		2 alphabetic_edited bit (1),
 13    52 		2 pic_has_p bit (1),
 13    53 		2 pic_has_ast bit (1),
 13    54 		2 item_signed bit(1),
 13    55 		2 sign_separate bit (1),
 13    56 		2 display bit (1),
 13    57 		2 comp bit (1),
 13    58 		2 ascii_packed_dec_h bit (1),	/* as of 8/16/76  this field used for comp8. */
 13    59 		2 ascii_packed_dec bit (1),
 13    60 		2 ebcdic_packed_dec bit (1),
 13    61 		2 bin_16 bit (1),
 13    62 		2 bin_32 bit (1),
 13    63 		2 usage_index bit (1),
 13    64 		2 just_right bit (1),
 13    65 		2 compare_argument bit (1),
 13    66 		2 sync bit (1),
 13    67 		2 temporary bit (1),
 13    68 		2 bwz bit (1),
 13    69 		2 variable_length bit (1),
 13    70 		2 subscripted bit (1),
 13    71 		2 occurs_do bit (1),
 13    72 		2 key_a bit (1),
 13    73 		2 key_d bit (1),
 13    74 		2 indexed_by bit (1),
 13    75 		2 value_numeric bit (1),
 13    76 		2 value_non_numeric bit (1),
 13    77 		2 value_signed bit (1),
 13    78 		2 sign_type bit (3),
 13    79 		2 pic_integer bit (1),
 13    80 		2 ast_when_zero bit (1),
 13    81 		2 label_record bit (1),
 13    82 		2 sign_clause_occurred bit (1),
 13    83 		2 okey_dn bit (1),
 13    84 		2 subject_of_keyis bit (1),
 13    85 		2 exp_redefining bit (1),
 13    86 		2 sync_in_rec bit (1),
 13    87 		2 rounded bit (1),
 13    88 		2 ad_bit bit (1),
 13    89 		2 debug_all bit (1),
 13    90 		2 overlap bit (1),
 13    91 		2 sum_counter bit (1),
 13    92 		2 exp_occurs bit (1),
 13    93 		2 linage_counter bit (1),
 13    94 		2 rnm_01 bit (1),
 13    95 		2 aligned bit (1),
 13    96 		2 not_user_writable bit (1),
 13    97 		2 database_key bit (1),
 13    98 		2 database_data_item bit (1),
 13    99 		2 seg_num fixed bin,
 13   100 		2 offset fixed bin(24),
 13   101 		2 initial_ptr fixed bin,
 13   102 		2 edit_ptr fixed bin,
 13   103 		2 occurs_ptr fixed bin,
 13   104 		2 do_rec char(5),
 13   105 		2 bitt bit (1),
 13   106 		2 byte bit (1),
 13   107 		2 half_word bit (1),
 13   108 		2 word bit (1),
 13   109 		2 double_word bit (1),
 13   110 		2 half_byte bit (1),
 13   111 		2 filler5 bit (1),
 13   112 		2 bit_offset bit (4),
 13   113 		2 son_cnt bit (16),
 13   114 		2 max_red_size fixed bin(24),
 13   115 		2 name_size fixed bin,
 13   116 		2 name char(0 refer(data_name.name_size));	
 13   117 
 13   118 
 13   119 
 13   120 /* end include file ... cobol_TYPE9.incl.pl1 */
 13   121 
 12    17 
 12    18 /* END DECLARATION OF TYPE9 (DATA NAME) TOKEN */
 12    19 
 12    20 /* END INCLUDE FILE ... cobol_type9.incl.pl1 */
 12    21 
     2385 
 14     1 
 14     2 /* BEGIN INCLUDE FILE ... cobol_type10.incl.pl1 */
 14     3 /* Last modified on 11/19/76 by ORN */
 14     4 /*
 14     5*A type 10 index name token is entered into the name table by the data
 14     6*division syntax phase for each index name appearing in the data division.
 14     7*An index name is declared in the indexed by phrase of an occurs clause.
 14     8*maintain the binary byte offset, within the array, corresponding to the
 14     9*current setting of the index name.  The right-most two bytes contain the
 14    10*binary occurrence number to which the index name is set.
 14    11*When the replacement phase processes the procedure division minpral file,
 14    12*each reference to an index name is replaced with the type 10 token created
 14    13*for that index name.
 14    14**/
 14    15 
 14    16 dcl ind_ptr ptr;
 14    17 
 14    18 /* BEGIN DECLARATION OF TYPE10 (INDEX NAME) TOKEN */
 14    19 dcl	1 index_name based (ind_ptr),
 15     1 
 15     2 /* begin include file ... cobol_TYPE10.incl.pl1
 15     3*/* Last modified on 01/25/77 by ORN */
 15     4 
 15     5 	/* header */
 15     6 	2 size fixed bin,
 15     7 	2 line fixed bin,
 15     8 	2 column fixed bin,
 15     9 	2 type fixed bin,
 15    10 	/* body */
 15    11 	2 string_ptr ptr,
 15    12 	2 prev_rec ptr,
 15    13 	2 searched bit(1),
 15    14 	2 duplicate bit(1),
 15    15 	2 saved bit(1),
 15    16 	2 debug_ind bit(1),
 15    17 	2 filler1 bit(3),
 15    18 	2 subscript bit(1),
 15    19 	2 def_line fixed bin,
 15    20 	2 level fixed bin,
 15    21 	2 seg_num fixed bin,
 15    22 	2 offset fixed bin(24),
 15    23 	2 index_no fixed bin,
 15    24 	2 min fixed bin,
 15    25 	2 max fixed bin,
 15    26 	2 struc_length fixed bin,
 15    27 	2 cswd_seg fixed bin,
 15    28 	2 cswd_offset fixed bin(24),
 15    29 	2 name_size fixed bin,
 15    30 	2 name char(0 refer(index_name.name_size));
 15    31 
 15    32 
 15    33 
 15    34 /* end include file ... cobol_TYPE10.incl.pl1 */
 15    35 
 14    20 
 14    21 /* END DECLARATION OF TYPE10 (INDEX NAME) TOKEN */
 14    22 
 14    23 /* END INCLUDE FILE ... cobol_type10.incl.pl1 */
 14    24 
     2386 
 16     1 
 16     2 /* BEGIN INCLUDE FILE ... cobol_type12.incl.pl1 */
 16     3 /* Last modified on 11/19/76 by ORN */
 16     4 
 16     5 /*
 16     6*A type 12 file name token is entered into the name table by the data
 16     7*division syntax phase for each file name appearing in the data division.
 16     8*When the replacement phase processes the procedure division minpral file,
 16     9*each reference to a file name is replaced with the type 12 token created
 16    10*for that file name.
 16    11**/
 16    12 
 16    13 /* dcl name_ptr ptr; */
 16    14 
 16    15 /* BEGIN DECLARATION OF TYPE12 (FILE NAME) TOKEN */
 16    16 dcl 	1 fd_token based (name_ptr),
 17     1 
 17     2 /* begin include file ... cobol_TYPE12.incl.pl1 */
 17     3 /* Last modified on 11/17/76 by ORN */
 17     4 
 17     5 		/* header */
 17     6 		2 size fixed bin,
 17     7 		2 line fixed bin,
 17     8 		2 column fixed bin,
 17     9 		2 type fixed bin,
 17    10 		/* body */
 17    11 		2 string_ptr ptr,
 17    12 		2 prev_rec ptr,
 17    13 		2 info bit (8),
 17    14 		2 def_line fixed bin,
 17    15 		2 file_no fixed bin,
 17    16 		2 name_size fixed bin,
 17    17 		2 name char(0 refer(fd_token.name_size));	
 17    18 
 17    19 /* end include file ... cobol_TYPE12.incl.pl1 */
 17    20 
 16    17 
 16    18 /* END DECLARATION OF TYPE12 (FILE NAME) TOKEN */
 16    19 
 16    20 
 16    21 /* END INCLUDE FILE ... cobol_type12.incl.pl1 */
 16    22 
     2387 
 18     1 
 18     2 /* BEGIN INCLUDE FILE ... cobol_type13.incl.pl1 */
 18     3 /* Last modified on 11/19/76 by ORN */
 18     4 
 18     5 dcl cdtoken_ptr ptr;
 18     6 
 18     7 /* BEGIN DECLARATION OF TYPE13 (CD NAME) TOKEN */
 18     8 dcl 1 cdtoken based(cdtoken_ptr),
 19     1 
 19     2 /* begin include file ... cobol_TYPE13.incl.pl1
 19     3*/* Last modified on 11/18/76 by ORN */
 19     4 
 19     5 		/* header */
 19     6      2 size fixed bin,
 19     7      2 line fixed bin,
 19     8      2 column fixed bin,
 19     9      2 type fixed bin,     /* cd = 13 */
 19    10 		/* body */
 19    11      2 string_ptr ptr,
 19    12      2 prev_rec ptr,
 19    13      2 info,
 19    14 	3 searched bit(1),
 19    15 	3 duplicate bit(1),
 19    16 	3 filler1 bit(6),
 19    17      2 options,
 19    18 	3 input bit(1),
 19    19 	3 output bit(1),
 19    20 	3 initial bit(1),
 19    21      2 def_line fixed bin,
 19    22      2 cd_num fixed bin,
 19    23      2 cd_seg fixed bin,
 19    24      2 cd_off fixed bin(24),
 19    25      2 max_redef fixed bin,
 19    26      2 mdest fixed bin,
 19    27      2 name_size fixed bin,
 19    28      2 name char(0 refer(cdtoken.name_size));
 19    29 
 19    30 /* end include file ... cobol_TYPE13.incl.pl1 */
 19    31 
 18     9 
 18    10 /* END DECLARATION OF TYPE13 (CD NAME) TOKEN */
 18    11 
 18    12 
 18    13 /* END INCLUDE FILE ... cobol_type13.incl.pl1 */
 18    14 
     2388 
 20     1 
 20     2 /* BEGIN INCLUDE FILE ... cobol_type19.incl.pl1 */
 20     3 /* last modified on 11/19/76 by ORN */
 20     4 
 20     5 /*
 20     6*A type 19 end of statement token is created in the procedure division
 20     7*minpral file at the end of each minpral statement generated by the
 20     8*procedure division syntax phase.  A minpral statement may be a complete or
 20     9*partial source language statement.  A type 19 token contains information
 20    10*describing the statement which it delimits.
 20    11**/
 20    12 
 20    13 dcl eos_ptr ptr;
 20    14 
 20    15 /* BEGIN DECLARATION OF TYPE19 (END STATEMENT) TOKEN */
 20    16 dcl	1 end_stmt based (eos_ptr),
 21     1 
 21     2 /* begin include file ... cobol_TYPE19.incl.pl1 */
 21     3 /* Last modified on 11/17/76 by ORN */
 21     4 
 21     5 		/* header */
 21     6 		2 size fixed bin,
 21     7 		2 line fixed bin,
 21     8 		2 column fixed bin,
 21     9 		2 type fixed bin,
 21    10 		/* body */
 21    11 		2 verb fixed bin,
 21    12 		2 e fixed bin,
 21    13 		2 h fixed bin,
 21    14 		2 i fixed bin,
 21    15 		2 j fixed bin,
 21    16 		2 a bit (3),
 21    17 		2 b bit (1),
 21    18 		2 c bit (1),
 21    19 		2 d bit (2),
 21    20 		2 f bit (2),
 21    21 		2 g bit (2),
 21    22 		2 k bit (5),
 21    23 		2 always_an bit (1);
 21    24 
 21    25 /* end include file ... cobol_TYPE19.incl.pl1 */
 21    26 
 20    17 
 20    18 /* END DECLARATION OF TYPE19 (END STATEMENT) TOKEN */
 20    19 
 20    20 /*
 20    21*FIELD		CONTENTS
 20    22*
 20    23*size		The total size in bytes of this end of statement token.
 20    24*line		0
 20    25*column		0
 20    26*type		19
 20    27*verb		A value indicating the verb in this statement
 20    28*		 1 = accept
 20    29*		 2 = add
 20    30*		 3 = on size error
 20    31*		 4 = alter
 20    32*		 5 = call
 20    33*		 7 = cancel
 20    34*		 8 = close
 20    35*		 9 = divide
 20    36*		10 = multiply
 20    37*		11 = subtract
 20    38*		12 = exit
 20    39*		14 = go
 20    40*		15 = merge
 20    41*		16 = initiate
 20    42*		17 = inspect
 20    43*		18 = move
 20    44*		19 = open
 20    45*		20 = perform
 20    46*		21 = read
 20    47*		23 = receive
 20    48*		24 = release
 20    49*		25 = return
 20    50*		26 = search
 20    51*		27 = rewrite
 20    52*		29 = seek
 20    53*		30 = send
 20    54*		31 = set
 20    55*		33 = stop
 20    56*		34 = string
 20    57*		35 = suspend
 20    58*		36 = terminate
 20    59*		37 = unstring
 20    60*		38 = write
 20    61*		39 = use
 20    62*		40 = compute
 20    63*		41 = disable
 20    64*		42 = display
 20    65*		43 = enable
 20    66*		45 = generate
 20    67*		46 = hold
 20    68*		48 = process
 20    69*		49 = sort
 20    70*		52 = procedure
 20    71*		53 = declaratives
 20    72*		54 = section name
 20    73*		55 = paragraph name
 20    74*		98 = end
 20    75*e,h,i,j		The significance of these fields differs with each
 20    76*		statement.  These fields are normally used as counters.
 20    77*a,b,c,d,f,g,k	The significance of these fields differs with each
 20    78*		statement.  These fields are normally used as indicators.
 20    79**/
 20    80 
 20    81 /* END INCLUDE FILE ... cobol_type19.incl.pl1 */
 20    82 
     2389 
 22     1 
 22     2 /* BEGIN INCLUDE FILE ... cobol_type20.incl.pl1 */
 22     3 /* Last modified on 01/24/77 by ORN */
 22     4 
 22     5 /* The report token */
 22     6 
 22     7 dcl report_ptr ptr;
 22     8 dcl 1 report_token based(report_ptr),
 22     9 	2 header,
 22    10 	  3 size fixed bin,
 22    11 	  3 line fixed bin,
 22    12 	  3 column fixed bin,
 22    13 	  3 type fixed bin,    /* = 20 */
 22    14 	2 body,
 22    15 	  3 string_ptr ptr,
 22    16 	  3 prev_rec ptr,
 22    17 	  3 info bit(7),
 22    18 	  3 rep_defined bit(1),
 22    19 	  3 def_line fixed bin,
 22    20 	  3 level fixed bin,   /* = 0 */
 22    21 	  3 report_no fixed bin,
 22    22 	  3 group_no fixed bin,
 22    23 	  3 file_no fixed bin,
 22    24 	  3 page_seg fixed bin,
 22    25 	  3 page_add fixed bin(24),
 22    26 	  3 line_seg fixed bin,
 22    27 	  3 line_add fixed bin(24),
 22    28 	  3 seg_no fixed bin,
 22    29 	  3 rwct_add fixed bin(24),
 22    30 	  3 rwct_size fixed bin,
 22    31 	  3 code char(2),
 22    32 	  3 controls fixed bin,
 22    33 	  3 page_limit fixed bin,
 22    34 	  3 heading fixed bin,
 22    35 	  3 first_detail fixed bin,
 22    36 	  3 last_detail fixed bin,
 22    37 	  3 footing fixed bin,
 22    38 	  3 da_no fixed bin,
 22    39 	  3 name_size fixed bin,
 22    40 	  3 name char(0 refer(report_token.name_size));
 22    41 
 22    42 /* END INCLUDE FILE ... cobol_type20.incl.pl1 */
 22    43 
     2390 
 23     1 
 23     2 /* BEGIN INCLUDE FILE ... cobol_ddal_diag_values.incl.pl1 */
 23     3 /* Last modified on 06/10/77 by ORN */
 23     4 
 23     5 dcl warn_UNEQUAL_SIZE_REDEFINES	fixed bin static options(constant) init(150);
 23     6 dcl warn_REC_EXCEEDS_DEVICE_LIMIT	fixed bin static options(constant) init(156);
 23     7 dcl warn_CODE_SET_VIOLATION		fixed bin static options(constant) init(158);
 23     8 dcl warn_RECSIZE_TOO_SMALL		fixed bin static options(constant) init(159);
 23     9 dcl warn_VLR_RECSIZE_EXCEEDED		fixed bin static options(constant) init(160);
 23    10 dcl warn_SPANNED_RECSIZE_EXCEEDED	fixed bin static options(constant) init(161);
 23    11 dcl warn_FLR_RECSIZE_EXCEEDED		fixed bin static options(constant) init(162);
 23    12 dcl warn_BLKSIZE_TOO_SMALL		fixed bin static options(constant) init(163);
 23    13 dcl warn_BLKSIZE_LESS_THAN_RECSIZE	fixed bin static options(constant) init(164);
 23    14 dcl warn_BLKSIZE_NOT_MULT_OF_RECSIZE	fixed bin static options(constant) init(165);
 23    15 dcl obs_BLKSIZE_ADJUSTED		fixed bin static options(constant) init(166);
 23    16 dcl obs_RECSIZE_ADJUSTED		fixed bin static options(constant) init(167);
 23    17 dcl obs_CRASIZE_ADJUSTED		fixed bin static options(constant) init(168);
 23    18 dcl warn_MIN_RECSIZE_MISSING		fixed bin static options(constant) init(169);
 23    19 dcl warn_RECSIZE_INCONSISTENT		fixed bin static options(constant) init(170);
 23    20 dcl obs_BLOCKING_IGNORED		fixed bin static options(constant) init(171);
 23    21 dcl obs_GREATER_SIZE_REDEFINES	fixed bin static options(constant) init(172);
 23    22 dcl obs_ALLOC_ADJUSTED		fixed bin static options(constant) init(173);
 23    23 dcl obs_IMPLICIT_SYNC		fixed bin static options(constant) init(174);
 23    24 dcl obs_IMPLICIT_SYNC_IN_ARRAY	fixed bin static options(constant) init(175);
 23    25 dcl obs_IMPLICIT_SYNC_FOR_DISPLAY	fixed bin static options(constant) init(176);
 23    26 dcl obs_IMPLICIT_SYNC_FOR_GROUP	fixed bin static options(constant) init(177);
 23    27 dcl obs_PREVIOUS_SYNC		fixed bin static options(constant) init(179);
 23    28 dcl obs_EXPLICIT_SYNC		fixed bin static options(constant) init(180);
 23    29 
 23    30 /* END INCLUDE FILE ... cobol_ddal_diag_values.incl.pl1 */
 23    31 
     2391 
 24     1 
 24     2 /* BEGIN INCLUDE FILE ... cobol_reswd_values.incl.pl1 */
 24     3 /* CREATED ON 06/15/76 BY ORN */
 24     4 
 24     5 /* This include file contains the value associated with each reserved word
 24     6*   used by the Multics COBOL compiler.  These are declared as constants
 24     7*   and are not allocated unless referenced.  Eash name is in the form:
 24     8*
 24     9*	reswd_<reserved word name>
 24    10*     or
 24    11*	reschar_<special character name>
 24    12*
 24    13*   where <reserved word name> is the upper case transliteration of the
 24    14*   reserved word with any hyphens replaced by underscores and
 24    15*   <special character name> is the upper case name of the one
 24    16*   character reserved words (e.g. EQ, GT, MINUS, LPARENS, etc.)  */
 24    17 
 24    18 
 24    19 dcl reswd_ACCEPT		fixed bin static options(constant) init(001);
 24    20 dcl reswd_ADD		fixed bin static options(constant) init(002);
 24    21 dcl reswd_ERROR		fixed bin static options(constant) init(003);
 24    22 dcl reswd_ALTER		fixed bin static options(constant) init(004);
 24    23 dcl reswd_CALL		fixed bin static options(constant) init(005);
 24    24 dcl reswd_OVERFLOW		fixed bin static options(constant) init(006);
 24    25 dcl reswd_CANCEL		fixed bin static options(constant) init(007);
 24    26 dcl reswd_CLOSE		fixed bin static options(constant) init(008);
 24    27 dcl reswd_DIVIDE		fixed bin static options(constant) init(009);
 24    28 dcl reswd_MULTIPLY		fixed bin static options(constant) init(010);
 24    29 dcl reswd_SUBTRACT		fixed bin static options(constant) init(011);
 24    30 dcl reswd_EXIT		fixed bin static options(constant) init(012);
 24    31 dcl reswd_INITIALIZE	fixed bin static options(constant) init(013);
 24    32 dcl reswd_GO		fixed bin static options(constant) init(014);
 24    33 dcl reswd_MERGE		fixed bin static options(constant) init(015);
 24    34 dcl reswd_INITIATE		fixed bin static options(constant) init(016);
 24    35 dcl reswd_INSPECT		fixed bin static options(constant) init(017);
 24    36 dcl reswd_MOVE		fixed bin static options(constant) init(018);
 24    37 dcl reswd_OPEN		fixed bin static options(constant) init(019);
 24    38 dcl reswd_PERFORM		fixed bin static options(constant) init(020);
 24    39 dcl reswd_READ		fixed bin static options(constant) init(021);
 24    40 dcl reswd_DELETE		fixed bin static options(constant) init(022);
 24    41 dcl reswd_RECEIVE		fixed bin static options(constant) init(023);
 24    42 dcl reswd_RELEASE		fixed bin static options(constant) init(024);
 24    43 dcl reswd_RETURN		fixed bin static options(constant) init(025);
 24    44 dcl reswd_SEARCH		fixed bin static options(constant) init(026);
 24    45 dcl reswd_REWRITE		fixed bin static options(constant) init(027);
 24    46 /* 028 029 */
 24    47 dcl reswd_SEND		fixed bin static options(constant) init(030);
 24    48 dcl reswd_SET		fixed bin static options(constant) init(031);
 24    49 /* 032 */
 24    50 dcl reswd_STOP		fixed bin static options(constant) init(033);
 24    51 dcl reswd_STRING		fixed bin static options(constant) init(034);
 24    52 dcl reswd_SUSPEND		fixed bin static options(constant) init(035);
 24    53 dcl reswd_TERMINATE		fixed bin static options(constant) init(036);
 24    54 dcl reswd_UNSTRING		fixed bin static options(constant) init(037);
 24    55 dcl reswd_WRITE		fixed bin static options(constant) init(038);
 24    56 dcl reswd_USE		fixed bin static options(constant) init(039);
 24    57 dcl reswd_COMPUTE		fixed bin static options(constant) init(040);
 24    58 dcl reswd_DISABLE		fixed bin static options(constant) init(041);
 24    59 dcl reswd_DISPLAY		fixed bin static options(constant) init(042);
 24    60 dcl reswd_ENABLE		fixed bin static options(constant) init(043);
 24    61 dcl reswd_ENTER		fixed bin static options(constant) init(044);
 24    62 dcl reswd_GENERATE		fixed bin static options(constant) init(045);
 24    63 dcl reswd_HOLD		fixed bin static options(constant) init(046);
 24    64 dcl reswd_IF		fixed bin static options(constant) init(047);
 24    65 dcl reswd_PROCESS		fixed bin static options(constant) init(048);
 24    66 dcl reswd_SORT		fixed bin static options(constant) init(049);
 24    67 dcl reswd_EXAMINE		fixed bin static options(constant) init(050);
 24    68 dcl reswd_TRANSFORM		fixed bin static options(constant) init(051);
 24    69 /* 052 053 054 055 */
 24    70 dcl reswd_START		fixed bin static options(constant) init(056);
 24    71 dcl reswd_SUPPRESS		fixed bin static options(constant) init(057);
 24    72 dcl reswd_PURGE		fixed bin static options(constant) init(058);
 24    73 /* 059 060 061 062 063 064 065 066 067 068 069 070 */
 24    74 dcl reswd_ADVANCING		fixed bin static options(constant) init(071);
 24    75 dcl reswd_AFTER		fixed bin static options(constant) init(072);
 24    76 dcl reswd_ALL		fixed bin static options(constant) init(073);
 24    77 dcl reswd_ALPHABETIC	fixed bin static options(constant) init(074);
 24    78 dcl reswd_ALPHANUMERIC	fixed bin static options(constant) init(075);
 24    79 dcl reswd_ALPHANUMERIC_EDITED	fixed bin static options(constant) init(076);
 24    80 dcl reswd_AND		fixed bin static options(constant) init(077);
 24    81 dcl reswd_ASCENDING		fixed bin static options(constant) init(078);
 24    82 dcl reswd_AT		fixed bin static options(constant) init(079);
 24    83 dcl reswd_BEFORE		fixed bin static options(constant) init(080);
 24    84 dcl reswd_BEGINNING		fixed bin static options(constant) init(081);
 24    85 dcl reswd_BY		fixed bin static options(constant) init(082);
 24    86 dcl (reswd_CHARACTER,
 24    87      reswd_CHARACTERS)	fixed bin static options(constant) init(083);
 24    88 dcl reswd_COUNT		fixed bin static options(constant) init(084);
 24    89 dcl reswd_SSF		fixed bin static options(constant) init(085);
 24    90 dcl reswd_DATE		fixed bin static options(constant) init(086);
 24    91 dcl reswd_DAY		fixed bin static options(constant) init(087);
 24    92 dcl reswd_DEBUGGING		fixed bin static options(constant) init(088);
 24    93 dcl reswd_DECLARATIVES	fixed bin static options(constant) init(089);
 24    94 dcl reswd_DELIMITED		fixed bin static options(constant) init(090);
 24    95 dcl reswd_DELIMITER		fixed bin static options(constant) init(091);
 24    96 dcl reswd_DEPENDING		fixed bin static options(constant) init(092);
 24    97 dcl reswd_DESCENDING	fixed bin static options(constant) init(093);
 24    98 dcl reswd_DIVISION		fixed bin static options(constant) init(094);
 24    99 dcl reswd_DOWN		fixed bin static options(constant) init(095);
 24   100 dcl (reswd_ALSO,
 24   101      reswd_ELSE)		fixed bin static options(constant) init(096);
 24   102 dcl reswd_EMI		fixed bin static options(constant) init(097);
 24   103 dcl reswd_END		fixed bin static options(constant) init(098);
 24   104 dcl reswd_ENDING		fixed bin static options(constant) init(099);
 24   105 dcl (reswd_END_OF_PAGE,
 24   106      reswd_EOP)		fixed bin static options(constant) init(100);
 24   107 dcl reswd_IN		fixed bin static options(constant) init(101);
 24   108 dcl (reschar_EQ,
 24   109      reswd_EQUAL,
 24   110      reswd_EQUALS)		fixed bin static options(constant) init(102);
 24   111 /* 103 104 */
 24   112 dcl reswd_ESI		fixed bin static options(constant) init(105);
 24   113 dcl (reswd_COMP,
 24   114      reswd_COMPUTATIONAL)	fixed bin static options(constant) init(106);
 24   115 dcl reswd_EXCEPTION		fixed bin static options(constant) init(107);
 24   116 dcl reswd_FILE		fixed bin static options(constant) init(108);
 24   117 dcl reswd_FIRST		fixed bin static options(constant) init(109);
 24   118 dcl reswd_FOR		fixed bin static options(constant) init(110);
 24   119 dcl reswd_FROM		fixed bin static options(constant) init(111);
 24   120 dcl reswd_GIVING		fixed bin static options(constant) init(112);
 24   121 dcl (reschar_GT,
 24   122      reswd_EXCEEDS,
 24   123      reswd_GREATER)		fixed bin static options(constant) init(113);
 24   124 dcl reswd_INITIAL		fixed bin static options(constant) init(114);
 24   125 dcl reswd_INPUT		fixed bin static options(constant) init(115);
 24   126 dcl reswd_INTO		fixed bin static options(constant) init(116);
 24   127 dcl reswd_INVALID		fixed bin static options(constant) init(117);
 24   128 dcl (reswd_ARE,
 24   129      reswd_IS)		fixed bin static options(constant) init(118);
 24   130 dcl (reswd_I_O,
 24   131      reswd_INPUT_OUTPUT)	fixed bin static options(constant) init(119);
 24   132 dcl reswd_KEY		fixed bin static options(constant) init(120);
 24   133 dcl reswd_LABEL		fixed bin static options(constant) init(121);
 24   134 dcl reswd_LEADING		fixed bin static options(constant) init(122);
 24   135 dcl (reschar_LT,
 24   136      reswd_LESS)		fixed bin static options(constant) init(123);
 24   137 dcl (reswd_LINE,
 24   138      reswd_LINES)		fixed bin static options(constant) init(124);
 24   139 dcl reswd_LOCK		fixed bin static options(constant) init(125);
 24   140 dcl reswd_MESSAGE		fixed bin static options(constant) init(126);
 24   141 dcl reswd_NEGATIVE		fixed bin static options(constant) init(127);
 24   142 dcl reswd_NEXT		fixed bin static options(constant) init(128);
 24   143 dcl reswd_NO		fixed bin static options(constant) init(129);
 24   144 dcl reswd_NOT		fixed bin static options(constant) init(130);
 24   145 dcl reswd_NUMERIC		fixed bin static options(constant) init(131);
 24   146 dcl reswd_NUMERIC_EDITED	fixed bin static options(constant) init(132);
 24   147 dcl reswd_OF		fixed bin static options(constant) init(133);
 24   148 dcl reswd_ON		fixed bin static options(constant) init(134);
 24   149 dcl reswd_OR		fixed bin static options(constant) init(135);
 24   150 /* 136 */
 24   151 dcl reswd_OUTPUT		fixed bin static options(constant) init(137);
 24   152 dcl reswd_BOOLEAN		fixed bin static options(constant) init(138);
 24   153 dcl reswd_PAGE		fixed bin static options(constant) init(139);
 24   154 dcl reswd_POINTER		fixed bin static options(constant) init(140);
 24   155 dcl reswd_POSITIVE		fixed bin static options(constant) init(141);
 24   156 dcl reswd_PROCEDURE		fixed bin static options(constant) init(142);
 24   157 dcl reswd_PROCEDURES	fixed bin static options(constant) init(143);
 24   158 dcl reswd_PROCEED		fixed bin static options(constant) init(144);
 24   159 dcl reswd_PROCESSING	fixed bin static options(constant) init(145);
 24   160 dcl reswd_PROGRAM		fixed bin static options(constant) init(146);
 24   161 dcl reswd_RANDOM		fixed bin static options(constant) init(147);
 24   162 dcl reswd_RECORD		fixed bin static options(constant) init(148);
 24   163 dcl reswd_REEL		fixed bin static options(constant) init(149);
 24   164 dcl reswd_REFERENCES	fixed bin static options(constant) init(150);
 24   165 dcl reswd_REMAINDER		fixed bin static options(constant) init(151);
 24   166 dcl reswd_REPLACING		fixed bin static options(constant) init(152);
 24   167 dcl reswd_REPORTING		fixed bin static options(constant) init(153);
 24   168 dcl reswd_REVERSED		fixed bin static options(constant) init(154);
 24   169 dcl reswd_REWIND		fixed bin static options(constant) init(155);
 24   170 dcl reswd_ROUNDED		fixed bin static options(constant) init(156);
 24   171 dcl reswd_RUN		fixed bin static options(constant) init(157);
 24   172 dcl reswd_SECTION		fixed bin static options(constant) init(158);
 24   173 dcl reswd_SEGMENT		fixed bin static options(constant) init(159);
 24   174 dcl reswd_SENTENCE		fixed bin static options(constant) init(160);
 24   175 dcl reswd_SIZE		fixed bin static options(constant) init(161);
 24   176 dcl reswd_STANDARD		fixed bin static options(constant) init(162);
 24   177 dcl reswd_TALLYING		fixed bin static options(constant) init(163);
 24   178 dcl reswd_TERMINAL		fixed bin static options(constant) init(164);
 24   179 dcl reswd_THAN		fixed bin static options(constant) init(165);
 24   180 dcl (reswd_THROUGH,
 24   181      reswd_THRU)		fixed bin static options(constant) init(166);
 24   182 dcl reswd_RELATIVE		fixed bin static options(constant) init(167);
 24   183 dcl (reswd_TIME,
 24   184      reswd_TIMES)		fixed bin static options(constant) init(168);
 24   185 dcl reswd_DYNAMIC		fixed bin static options(constant) init(169);
 24   186 dcl reswd_TO		fixed bin static options(constant) init(170);
 24   187 dcl reswd_UNEQUAL		fixed bin static options(constant) init(171);
 24   188 dcl reswd_UNIT		fixed bin static options(constant) init(172);
 24   189 dcl reswd_UNTIL		fixed bin static options(constant) init(173);
 24   190 dcl reswd_UP		fixed bin static options(constant) init(174);
 24   191 dcl reswd_UPON		fixed bin static options(constant) init(175);
 24   192 dcl reswd_USING		fixed bin static options(constant) init(176);
 24   193 dcl reswd_VARYING		fixed bin static options(constant) init(177);
 24   194 dcl reswd_WHEN		fixed bin static options(constant) init(178);
 24   195 dcl reswd_WITH		fixed bin static options(constant) init(179);
 24   196 dcl (reswd_ZERO,
 24   197      reswd_ZEROES,
 24   198      reswd_ZEROS)		fixed bin static options(constant) init(180);
 24   199 dcl reswd_ORGANIZATION	fixed bin static options(constant) init(181);
 24   200 dcl reschar_PLUS		fixed bin static options(constant) init(182);
 24   201 dcl reschar_MINUS		fixed bin static options(constant) init(183);
 24   202 dcl reschar_STAR		fixed bin static options(constant) init(184);
 24   203 dcl reschar_SLASH		fixed bin static options(constant) init(185);
 24   204 dcl reschar_2STARs		fixed bin static options(constant) init(186);
 24   205 dcl reschar_LPARENS		fixed bin static options(constant) init(187);
 24   206 dcl reschar_RPARENS		fixed bin static options(constant) init(188);
 24   207 dcl reschar_PERIOD		fixed bin static options(constant) init(189);
 24   208 dcl reswd_TOP		fixed bin static options(constant) init(190);
 24   209 dcl reswd_COBOL		fixed bin static options(constant) init(191);
 24   210 dcl (reswd_SPACE,
 24   211      reswd_SPACES)		fixed bin static options(constant) init(192);
 24   212 dcl reswd_TALLY		fixed bin static options(constant) init(193);
 24   213 dcl (reswd_BIT,
 24   214      reswd_BITS)		fixed bin static options(constant) init(194);
 24   215 dcl reswd_RECORDS		fixed bin static options(constant) init(195);
 24   216 dcl reswd_DATA		fixed bin static options(constant) init(196);
 24   217 /* 197 198 199 */
 24   218 dcl reswd_VLR		fixed bin static options(constant) init(201);
 24   219 dcl (reswd_AREA,
 24   220      reswd_AREAS)		fixed bin static options(constant) init(202);
 24   221 dcl reswd_OMITTED		fixed bin static options(constant) init(203);
 24   222 dcl reswd_BLANK		fixed bin static options(constant) init(204);
 24   223 dcl reswd_BLOCK		fixed bin static options(constant) init(205);
 24   224 dcl reswd_CD		fixed bin static options(constant) init(206);
 24   225 dcl reswd_COMMUNICATION	fixed bin static options(constant) init(207);
 24   226 dcl reswd_STANDARD_2	fixed bin static options(constant) init(208);
 24   227 dcl (reswd_COMP_4,
 24   228      reswd_COMPUTATIONAL_4)	fixed bin static options(constant) init(209);
 24   229 dcl (reswd_COMP_5,
 24   230      reswd_COMPUTATIONAL_5)	fixed bin static options(constant) init(210);
 24   231 dcl (reswd_COMP_3,
 24   232      reswd_COMPUTATIONAL_3)	fixed bin static options(constant) init(211);
 24   233 dcl (reswd_COMP_1,
 24   234      reswd_COMPUTATIONAL_1)	fixed bin static options(constant) init(212);
 24   235 dcl (reswd_COMP_2,
 24   236      reswd_COMPUTATIONAL_2)	fixed bin static options(constant) init(213);
 24   237 dcl reswd_CONSTANT		fixed bin static options(constant) init(214);
 24   238 dcl reswd_CONTAINS		fixed bin static options(constant) init(215);
 24   239 dcl reswd_EXTEND		fixed bin static options(constant) init(216);
 24   240 /* 217 */
 24   241 dcl reswd_DESTINATION	fixed bin static options(constant) init(218);
 24   242 dcl reswd_FD		fixed bin static options(constant) init(219);
 24   243 dcl reswd_FILLER		fixed bin static options(constant) init(220);
 24   244 dcl (reswd_HIGH_VALUE,
 24   245      reswd_HIGH_VALUES)	fixed bin static options(constant) init(221);
 24   246 dcl reswd_INDEX		fixed bin static options(constant) init(222);
 24   247 dcl reswd_INDEXED		fixed bin static options(constant) init(223);
 24   248 dcl (reswd_JUST,
 24   249      reswd_JUSTIFIED)	fixed bin static options(constant) init(224);
 24   250 dcl reswd_LEFT		fixed bin static options(constant) init(225);
 24   251 dcl reswd_LENGTH		fixed bin static options(constant) init(226);
 24   252 dcl reswd_DUPLICATES	fixed bin static options(constant) init(227);
 24   253 dcl reswd_LINKAGE		fixed bin static options(constant) init(228);
 24   254 dcl (reswd_LOW_VALUE,
 24   255      reswd_LOW_VALUES)	fixed bin static options(constant) init(229);
 24   256 dcl reswd_MODE		fixed bin static options(constant) init(230);
 24   257 dcl reswd_OCCURS		fixed bin static options(constant) init(231);
 24   258 dcl (reswd_PIC,
 24   259      reswd_PICTURE)		fixed bin static options(constant) init(232);
 24   260 dcl reswd_EGI		fixed bin static options(constant) init(233);
 24   261 dcl reswd_QUEUE		fixed bin static options(constant) init(234);
 24   262 dcl (reswd_QUOTE,
 24   263      reswd_QUOTES)		fixed bin static options(constant) init(235);
 24   264 dcl reswd_BOTTOM		fixed bin static options(constant) init(236);
 24   265 dcl reswd_RECORDING		fixed bin static options(constant) init(237);
 24   266 dcl reswd_REDEFINES		fixed bin static options(constant) init(238);
 24   267 dcl reswd_RENAMES		fixed bin static options(constant) init(239);
 24   268 dcl (reswd_REPORT,
 24   269      reswd_REPORTS)		fixed bin static options(constant) init(240);
 24   270 dcl reswd_RIGHT		fixed bin static options(constant) init(241);
 24   271 dcl reswd_SA		fixed bin static options(constant) init(242);
 24   272 dcl reswd_SD		fixed bin static options(constant) init(243);
 24   273 dcl reswd_SEPARATE		fixed bin static options(constant) init(244);
 24   274 dcl reswd_SIGN		fixed bin static options(constant) init(245);
 24   275 dcl reswd_SOURCE		fixed bin static options(constant) init(246);
 24   276 dcl reswd_STATUS		fixed bin static options(constant) init(247);
 24   277 dcl reswd_SUB_QUEUE_1	fixed bin static options(constant) init(248);
 24   278 dcl reswd_SUB_QUEUE_2	fixed bin static options(constant) init(249);
 24   279 dcl reswd_SUB_QUEUE_3	fixed bin static options(constant) init(250);
 24   280 dcl reswd_SYMBOLIC		fixed bin static options(constant) init(251);
 24   281 dcl (reswd_SYNC,
 24   282      reswd_SYNCHRONIZED)	fixed bin static options(constant) init(252);
 24   283 dcl reswd_TABLE		fixed bin static options(constant) init(253);
 24   284 /* 254 */
 24   285 dcl reswd_TRAILING		fixed bin static options(constant) init(255);
 24   286 dcl reschar_2EQs		fixed bin static options(constant) init(256);
 24   287 dcl reswd_USAGE		fixed bin static options(constant) init(257);
 24   288 dcl (reswd_VALUE,
 24   289      reswd_VALUES)		fixed bin static options(constant) init(258);
 24   290 dcl reswd_WORKING_STORAGE	fixed bin static options(constant) init(259);
 24   291 dcl reswd_REMOVAL		fixed bin static options(constant) init(260);
 24   292 /* 261 */
 24   293 /* (262 263 264 265) */
 24   294 /* 266 */
 24   295 /* (267 268 269 270 271) */
 24   296 dcl reswd_FLR		fixed bin static options(constant) init(272);
 24   297 /* 273 274 275 276 277 */
 24   298 /* (278) */
 24   299 dcl reswd_FILES		fixed bin static options(constant) init(279);
 24   300 /* 280 281 282 283 284 285 */
 24   301 /* (286) */
 24   302 /* 287 */
 24   303 dcl reswd_NATIVE		fixed bin static options(constant) init(288);
 24   304 /* 289 */
 24   305 dcl (reswd_COMP_7,
 24   306      reswd_COMPUTATIONAL_7)	fixed bin static options(constant) init(290);
 24   307 dcl reswd_OBJECT		fixed bin static options(constant) init(291);
 24   308 dcl (reswd_COMP_6,
 24   309      reswd_COMPUTATIONAL_6)	fixed bin static options(constant) init(292);
 24   310 /* (293) */
 24   311 /* 294 */
 24   312 dcl reswd_DEFAULT		fixed bin static options(constant) init(295);
 24   313 /* 296 207 298 299 300 301 302 303 304 305 */
 24   314 dcl reswd_CODE_SET		fixed bin static options(constant) init(306);
 24   315 dcl reswd_EXTERNAL		fixed bin static options(constant) init(307);
 24   316 /* 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 */
 24   317 dcl reswd_DAY_OF_WEEK	fixed bin static options(constant) init(326);
 24   318 dcl reswd_INTERCHANGE	fixed bin static options(constant) init(327);
 24   319 /* 328 */
 24   320 dcl reswd_PROCESS_AREA	fixed bin static options(constant) init(329);
 24   321 /* 330 */
 24   322 dcl (reswd_CATALOG_NAME,
 24   323      reswd_CATALOGUE_NAME)	fixed bin static options(constant) init(331);
 24   324 /* 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 */
 24   325 /* 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 */
 24   326 /* 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 */
 24   327 /* 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 */
 24   328 dcl reswd_STREAM		fixed bin static options(constant) init(407);
 24   329 /* 408 409 410 411 412 413 */
 24   330 dcl reswd_BSN		fixed bin static options(constant) init(413);
 24   331 /* 414 415 */
 24   332 dcl reswd_KEYED		fixed bin static options(constant) init(416);
 24   333 /* 417 418 419 420 421 422 */
 24   334 dcl reswd_IDS_II		fixed bin static options(constant) init(423);
 24   335 /* 424 */
 24   336 dcl reswd_REPLACE		fixed bin static options(constant) init(425);
 24   337 /* 426 427 428 429 430 431 432 433 434 */
 24   338 dcl reswd_SUBSTITUTION	fixed bin static options(constant) init(435);
 24   339 /* 436 437 438 439 440 441 442 443 444 445 446 447 448 449 */
 24   340 /* 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 */
 24   341 /* 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 */
 24   342 /* 490 491 492 493 494 495 496 497 498 499 500 */
 24   343 dcl reswd_ACCESS		fixed bin static options(constant) init(501);
 24   344 /* 502 */
 24   345 dcl reswd_ADDRESS		fixed bin static options(constant) init(503);
 24   346 dcl reswd_ALPHABET		fixed bin static options(constant) init(504);
 24   347 dcl reswd_STANDARD_1	fixed bin static options(constant) init(505);
 24   348 /* 506 */
 24   349 dcl reswd_ALTERNATE		fixed bin static options(constant) init(507);
 24   350 dcl reswd_APPLY		fixed bin static options(constant) init(508);
 24   351 dcl reswd_ASSIGN		fixed bin static options(constant) init(509);
 24   352 dcl reswd_AUTHOR		fixed bin static options(constant) init(510);
 24   353 dcl reswd_CF		fixed bin static options(constant) init(511);
 24   354 dcl reswd_CH		fixed bin static options(constant) init(512);
 24   355 dcl reswd_CLOCK_UNITS	fixed bin static options(constant) init(513);
 24   356 dcl reswd_CODE		fixed bin static options(constant) init(514);
 24   357 dcl reswd_COLLATING		fixed bin static options(constant) init(515);
 24   358 dcl reswd_COLUMN		fixed bin static options(constant) init(516);
 24   359 dcl reswd_COMMA		fixed bin static options(constant) init(517);
 24   360 dcl reswd_CONFIGURATION	fixed bin static options(constant) init(518);
 24   361 dcl reswd_CONVERSION	fixed bin static options(constant) init(519);
 24   362 dcl reswd_CONTROL		fixed bin static options(constant) init(520);
 24   363 dcl reswd_CONTROLS		fixed bin static options(constant) init(521);
 24   364 dcl reswd_COPY		fixed bin static options(constant) init(522);
 24   365 dcl (reswd_CORR,
 24   366      reswd_CORRESPONDING)	fixed bin static options(constant) init(524);
 24   367 dcl reswd_CURRENCY		fixed bin static options(constant) init(525);
 24   368 /* 526 */
 24   369 dcl reswd_DATE_COMPILED	fixed bin static options(constant) init(527);
 24   370 dcl reswd_DATE_WRITTEN	fixed bin static options(constant) init(528);
 24   371 dcl reswd_DE		fixed bin static options(constant) init(529);
 24   372 dcl reswd_DEBUG_CONTENTS	fixed bin static options(constant) init(530);
 24   373 dcl reswd_DEBUG_ITEM	fixed bin static options(constant) init(531);
 24   374 dcl reswd_DEBUG_LINE	fixed bin static options(constant) init(532);
 24   375 dcl reswd_DEBUG_SUB_1	fixed bin static options(constant) init(533);
 24   376 dcl reswd_DEBUG_SUB_2	fixed bin static options(constant) init(534);
 24   377 dcl reswd_DEBUG_SUB_3	fixed bin static options(constant) init(535);
 24   378 /* 536 */
 24   379 dcl reswd_DEBUG_NAME	fixed bin static options(constant) init(537);
 24   380 dcl reswd_DECIMAL_POINT	fixed bin static options(constant) init(538);
 24   381 dcl reswd_DETAIL		fixed bin static options(constant) init(539);
 24   382 dcl reswd_ENVIRONMENT	fixed bin static options(constant) init(540);
 24   383 /* 541 */
 24   384 dcl reswd_EVERY		fixed bin static options(constant) init(542);
 24   385 dcl reswd_FILE_CONTROL	fixed bin static options(constant) init(543);
 24   386 /* 544 545 */
 24   387 dcl reswd_FINAL		fixed bin static options(constant) init(546);
 24   388 dcl reswd_FOOTING		fixed bin static options(constant) init(547);
 24   389 dcl reswd_HEADING		fixed bin static options(constant) init(548);
 24   390 dcl reswd_GROUP		fixed bin static options(constant) init(549);
 24   391 /* 550 */
 24   392 dcl reswd_I_O_CONTROL	fixed bin static options(constant) init(551);
 24   393 dcl reswd_IDENTIFICATION	fixed bin static options(constant) init(552);
 24   394 dcl reswd_INDICATE		fixed bin static options(constant) init(553);
 24   395 dcl reswd_INSTALLATION	fixed bin static options(constant) init(554);
 24   396 /* 555 */
 24   397 dcl reswd_LAST		fixed bin static options(constant) init(556);
 24   398 /* 557 558 */
 24   399 dcl reswd_PRINTING		fixed bin static options(constant) init(559);
 24   400 /* 560 */
 24   401 dcl reswd_LIMIT		fixed bin static options(constant) init(561);
 24   402 dcl reswd_LIMITS		fixed bin static options(constant) init(562);
 24   403 dcl reswd_LINAGE		fixed bin static options(constant) init(563);
 24   404 dcl reswd_LINAGE_COUNTER	fixed bin static options(constant) init(564);
 24   405 dcl reswd_LINE_COUNTER	fixed bin static options(constant) init(565);
 24   406 /* 566 567 */
 24   407 dcl reswd_MEMORY		fixed bin static options(constant) init(568);
 24   408 dcl reswd_MODULES		fixed bin static options(constant) init(569);
 24   409 dcl reswd_MULTIPLE		fixed bin static options(constant) init(570);
 24   410 dcl reswd_NUMBER		fixed bin static options(constant) init(571);
 24   411 dcl reswd_OBJECT_COMPUTER	fixed bin static options(constant) init(572);
 24   412 /* 573 */
 24   413 dcl reswd_OFF		fixed bin static options(constant) init(574);
 24   414 /* 575 */
 24   415 dcl reswd_OPTIONAL		fixed bin static options(constant) init(576);
 24   416 /* 577 */
 24   417 dcl reswd_PAGE_COUNTER	fixed bin static options(constant) init(578);
 24   418 dcl reswd_PF		fixed bin static options(constant) init(579);
 24   419 dcl reswd_PH		fixed bin static options(constant) init(580);
 24   420 dcl reswd_PLUS		fixed bin static options(constant) init(581);
 24   421 dcl reswd_POSITION		fixed bin static options(constant) init(582);
 24   422 dcl reswd_PROGRAM_ID	fixed bin static options(constant) init(583);
 24   423 dcl reswd_RD		fixed bin static options(constant) init(584);
 24   424 /* 585 586 */
 24   425 dcl reswd_SEQUENCE		fixed bin static options(constant) init(587);
 24   426 dcl reswd_RERUN		fixed bin static options(constant) init(588);
 24   427 dcl reswd_RESERVE		fixed bin static options(constant) init(589);
 24   428 dcl reswd_RESET		fixed bin static options(constant) init(590);
 24   429 dcl reswd_RF		fixed bin static options(constant) init(591);
 24   430 dcl reswd_RH		fixed bin static options(constant) init(592);
 24   431 dcl reswd_SAME		fixed bin static options(constant) init(593);
 24   432 dcl reswd_SECURITY		fixed bin static options(constant) init(594);
 24   433 dcl reswd_SEGMENT_LIMIT	fixed bin static options(constant) init(595);
 24   434 dcl reswd_SELECT		fixed bin static options(constant) init(596);
 24   435 dcl reswd_SEQUENTIAL	fixed bin static options(constant) init(597);
 24   436 dcl reswd_SORT_MERGE	fixed bin static options(constant) init(598);
 24   437 dcl reswd_SOURCE_COMPUTER	fixed bin static options(constant) init(599);
 24   438 dcl reswd_SPECIAL_NAMES	fixed bin static options(constant) init(600);
 24   439 dcl reswd_SPANNED		fixed bin static options(constant) init(601);
 24   440 /* (602) */
 24   441 dcl reswd_SUM		fixed bin static options(constant) init(603);
 24   442 dcl reswd_EXOR		fixed bin static options(constant) init(604);
 24   443 /* 605 */
 24   444 dcl reswd_TAPE		fixed bin static options(constant) init(606);
 24   445 dcl reswd_TEXT		fixed bin static options(constant) init(607);
 24   446 dcl reswd_TYPE		fixed bin static options(constant) init(608);
 24   447 dcl reswd_WORDS		fixed bin static options(constant) init(609);
 24   448 dcl (reswd_COMP_8,
 24   449      reswd_COMPUTATIONAL_8)	fixed bin static options(constant) init(610);
 24   450 /* DATABASE WORDS
 24   451*dcl reswd_ALIAS		fixed bin static options(constant) init(263);
 24   452*dcl reswd_ALIGN		fixed bin static options(constant) init(278);
 24   453*dcl reswd_ALTERING		fixed bin static options(constant) init(268);
 24   454*dcl reswd_BECOMES		fixed bin static options(constant) init(267);
 24   455*dcl reswd_CHECK		fixed bin static options(constant) init(264);
 24   456*dcl reswd_INVOKING		fixed bin static options(constant) init(269);
 24   457*dcl reswd_KEY_LOCATION	fixed bin static options(constant) init(286);
 24   458*dcl reswd_LOCKS		fixed bin static options(constant) init(125);
 24   459*dcl reswd_PREFIX		fixed bin static options(constant) init(293);
 24   460*dcl reswd_REALM		fixed bin static options(constant) init(265);
 24   461*dcl reswd_REALM_ID		fixed bin static options(constant) init(270);
 24   462*dcl reswd_SELECTION		fixed bin static options(constant) init(271);
 24   463*dcl reswd_SYMBOLS		fixed bin static options(constant) init(602);
 24   464*dcl reswd_VIA		fixed bin static options(constant) init(262);
 24   465*END DATABASE WORDS */
 24   466 
 24   467 
 24   468 /* END INCLUDE FILE ... cobol_reswd_values.incl.pl1 */
 24   469 
     2392 
 25     1 
 25     2 /* BEGIN INCLUDE FILE ... cobol_size_values.incl.pl1 */
 25     3 /* Last modified on 11/18/76 by ORN */
 25     4 
 25     5 /* This include file contains constant values associated with
 25     6*the fixed sizes of Multics COBOL tokens and other data */
 25     7 
 25     8 dcl size_COMHDR fixed bin		static options(constant) init(56);
 25     9 dcl size_NAMESIZE fixed bin		static options(constant) init(4);
 25    10 
 25    11 dcl size_TOKEN (40) fixed bin		static options(constant) init(
 25    12 /* TOKEN NUMBER	NAME			STRUCTURE		PTR	SIZE (fixed portion in bytes) */
 25    13 /*	1	reserved word		reserved_word	rw_ptr	*/	28,
 25    14 /*	2	numeric literal		numeric_lit	nlit_ptr	*/	36,
 25    15 /*	3	alphanumeric literal	alphanum_lit	alit_ptr	*/	24,
 25    16 /*	4							*/	0,
 25    17 /*	5	diagnostic message		message		message_ptr */	32,
 25    18 /*	6							*/	0,
 25    19 /*	7	procedure definition	proc_def		proc_def_ptr */	52,
 25    20 /*	8	user word			user_word			*/	24,
 25    21 /*	9	data name			data_name		dn_ptr	*/	112,
 25    22 /*	10	index name		index_name	ind_ptr	*/	80,
 25    23 /*	11							*/	52,
 25    24 /*	12	file name			fd_token		name_ptr	*/	48,
 25    25 /*	13	communication name		cdtoken		cdtoken_ptr */	64,
 25    26 /*	14							*/	100,
 25    27 /*	15							*/	68,
 25    28 /*	16	sort file name		(use type 12 structure)	*/		48,
 25    29 /*	17	mnemonic name		mnemonic_name	name_ptr	*/	56,
 25    30 /*	18	procedure reference		proc_ref		proc_ref_ptr */	52,
 25    31 /*	19	end statement		end_stmt		eos_ptr	*/	38,
 25    32 /*	20							*/	120,
 25    33 /*	21							*/	84,
 25    34 /*	22							*/	56,
 25    35 /*	23							*/	0,
 25    36 /*	24							*/	0,
 25    37 /*	25							*/	0,
 25    38 /*	26							*/	0,
 25    39 /*	27							*/	0,
 25    40 /*	28							*/	0,
 25    41 /*	29							*/	0,
 25    42 /*	30	internal tag		int_tag		tag_ptr	*/	49,
 25    43 /*	31	equate tag		equate_tags	equate_ptr */	37,
 25    44 /*	32							*/	0,
 25    45 /*	33							*/	0,
 25    46 /*	34							*/	0,
 25    47 /*	35							*/	0,
 25    48 /*	36							*/	0,
 25    49 /*	37							*/	0,
 25    50 /*	38							*/	0,
 25    51 /*	39							*/	0,
 25    52 /*	40	alphabet name		alphabet_name	alpha_name_ptr */	580);
 25    53 /*	100	internal register		cobol_type100	cobol_type100_ptr	17 */
 25    54 /*	102	immediate constant		immed_const	immed_const_ptr	20 */
 25    55 
 25    56 /* END INCLUDE FILE ... cobol_size_values.incl.pl1 */
 25    57 
     2393 
     2394      end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/24/89  0830.0  cobol_ddalloc.pl1                 >spec>install>MR12.3-1048>cobol_ddalloc.pl1
2374         1    03/27/82  0439.7  cobol_perform_entry.incl.pl1      >ldd>include>cobol_perform_entry.incl.pl1
2375         2    03/27/82  0439.7  cobol_obj_rec.incl.pl1            >ldd>include>cobol_obj_rec.incl.pl1
2376         3    03/27/82  0439.8  cobol_qual_rec.incl.pl1           >ldd>include>cobol_qual_rec.incl.pl1
2377         4    03/27/82  0439.7  cobol_odo_rec.incl.pl1            >ldd>include>cobol_odo_rec.incl.pl1
2378         5    11/11/82  1712.7  cobol_occurs_ext.incl.pl1         >ldd>include>cobol_occurs_ext.incl.pl1
2379         6    03/27/82  0439.7  cobol_ext_num.incl.pl1            >ldd>include>cobol_ext_num.incl.pl1
2380         7    03/27/82  0439.7  cobol_ext_nonnum.incl.pl1         >ldd>include>cobol_ext_nonnum.incl.pl1
2381         8    03/27/82  0431.3  cobol_ext_.incl.pl1               >ldd>include>cobol_ext_.incl.pl1
2382         9    11/11/82  1712.7  cobol_.incl.pl1                   >ldd>include>cobol_.incl.pl1
2383        10    11/11/82  1712.8  cobol_fixed_common.incl.pl1       >ldd>include>cobol_fixed_common.incl.pl1
2384        11    11/11/82  1712.7  cobol_file_table.incl.pl1         >ldd>include>cobol_file_table.incl.pl1
2385        12    03/27/82  0439.9  cobol_type9.incl.pl1              >ldd>include>cobol_type9.incl.pl1
12-17       13    11/11/82  1712.7  cobol_TYPE9.incl.pl1              >ldd>include>cobol_TYPE9.incl.pl1
2386        14    03/27/82  0439.8  cobol_type10.incl.pl1             >ldd>include>cobol_type10.incl.pl1
14-20       15    11/11/82  1712.7  cobol_TYPE10.incl.pl1             >ldd>include>cobol_TYPE10.incl.pl1
2387        16    11/11/82  1712.8  cobol_type12.incl.pl1             >ldd>include>cobol_type12.incl.pl1
16-17       17    03/27/82  0439.6  cobol_TYPE12.incl.pl1             >ldd>include>cobol_TYPE12.incl.pl1
2388        18    11/11/82  1712.8  cobol_type13.incl.pl1             >ldd>include>cobol_type13.incl.pl1
18-9        19    03/27/82  0439.6  cobol_TYPE13.incl.pl1             >ldd>include>cobol_TYPE13.incl.pl1
2389        20    03/27/82  0439.8  cobol_type19.incl.pl1             >ldd>include>cobol_type19.incl.pl1
20-17       21    03/27/82  0439.6  cobol_TYPE19.incl.pl1             >ldd>include>cobol_TYPE19.incl.pl1
2390        22    03/27/82  0439.8  cobol_type20.incl.pl1             >ldd>include>cobol_type20.incl.pl1
2391        23    03/27/82  0439.7  cobol_ddal_diag_values.incl.pl1   >ldd>include>cobol_ddal_diag_values.incl.pl1
2392        24    03/27/82  0439.8  cobol_reswd_values.incl.pl1       >ldd>include>cobol_reswd_values.incl.pl1
2393        25    03/27/82  0439.8  cobol_size_values.incl.pl1        >ldd>include>cobol_size_values.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
N                               003500 automatic       pointer                  dcl 791 set ref 1104* 1111 1117 1120 1125 1155 1166
                                                                                  1166 1174 1183 1198* 1200 1233 1233 1237
OFF                                    based           fixed bin(17,0)          dcl 1266 set ref 1275 1277*
R                               003502 automatic       pointer                  dcl 791 set ref 1186* 1192 1192 1200 1200
STK                             003272 automatic       structure                array level 1 packed packed unaligned dcl 2149
addr                                                   builtin function         dcl 2368 ref 42 78 78 87 87 450 457 587 587 770 770
                                                                                  809 830 936 1046 1273 1338 1501 1501 1515 1515
                                                                                  1536 1536 1606 1606 1616 1664 1664 1702 1702 1727
                                                                                  1727 1737 1737 1762 1762 1787 1787 1851 1872 1872
                                                                                  1885 1885 1899 1899 1922 1929 1929 1948 1948 1961
                                                                                  1961 1979 1979 1991 2020
address                   6            based           fixed bin(17,0)          level 2 dcl 1-6 set ref 1622*
allit                     0(03)        based           bit(1)                   level 3 packed packed unaligned dcl 7-7 ref 1974
alphainit                              based           structure                level 1 unaligned dcl 7-7
ascii_packed_dec         21(30)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 set ref
                                                                                  860 870*
ascii_packed_dec_h       21(29)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 ref 867
                                                                                  1061
bd_input                               parameter       fixed bin(17,0)          dcl 1825 ref 1822 1836 1845
bd_output                              parameter       char(5)                  packed unaligned dcl 1826 set ref 1822 1840* 1856*
bd_size                                parameter       fixed bin(17,0)          dcl 1827 set ref 1822 1839* 1855*
bd_work1                        003572 automatic       fixed bin(17,0)          dcl 1828 set ref 1845* 1847 1849 1852* 1852
bd_work2                        003573 automatic       fixed bin(17,0)          dcl 1829 set ref 1849* 1851
bd_work3                        003574 automatic       char(5)                  packed unaligned dcl 1831 set ref 1851* 1856
bin_18                   21(13)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 ref 898
binary_max_station_count
                         42     000154 internal static fixed bin(17,0)          level 3 dcl 2241 set ref 459*
bit100                                 based           bit(100)                 packed unaligned dcl 2130 set ref 809*
bit32400                               based           bit(32400)               packed unaligned dcl 2128 set ref 42*
bit_offset               31(16)        based           bit(4)                   level 2 packed packed unaligned dcl 12-16 set ref
                                                                                  1034* 1036*
bitt                     31(09)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 set ref
                                                                                  830 881* 936
block_desc               65            based           fixed bin(17,0)          level 2 dcl 11-25 ref 686 697 731 736 736
block_max                67            based           fixed bin(24,0)          level 2 dcl 11-25 set ref 686 693* 700 707* 714 720*
                                                                                  720 736 736
blocked                 101            based           bit(1)                   level 2 packed packed unaligned dcl 11-25 set ref
                                                                                  741*
bound                    11     001466 automatic       fixed bin(17,0)          array level 2 dcl 2132 set ref 838* 844* 864* 876*
                                                                                  882* 905* 915* 923* 929* 940* 957 978 984
btd_i                                  parameter       fixed bin(17,0)          dcl 1811 set ref 1808 1816*
btd_o                                  parameter       char(5)                  packed unaligned dcl 1812 set ref 1808 1816*
btd_s                                  parameter       fixed bin(17,0)          dcl 1813 set ref 1808 1816*
byte                     31(10)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 set ref
                                                                                  843* 863* 875*
calling_param                          parameter       fixed bin(17,0)          dcl 1576 ref 1567
cd_num                   12            based           fixed bin(17,0)          level 2 dcl 18-8 ref 478
cd_off                   14            based           fixed bin(24,0)          level 2 dcl 18-8 set ref 478*
cd_offsets                      000116 automatic       fixed bin(17,0)          array dcl 2057 set ref 339 478*
cd_seg                   13            based           fixed bin(17,0)          level 2 dcl 18-8 set ref 477*
cdtoken                                based           structure                level 1 unaligned dcl 18-8
cdtoken_ptr                     003432 automatic       pointer                  dcl 18-5 set ref 439* 447 459 461 465 477 478 478
                                                                                  480
class                     5     000026 internal static bit(27)                  level 2 packed packed unaligned dcl 2171 set ref 90*
                                                                                  95* 560* 565* 570* 1495* 1505* 1519* 1525* 1540*
                                                                                  1550* 1556* 1611* 1644* 1650* 1658* 1668* 1678*
                                                                                  1706* 1716* 1731* 1741* 1774* 1925* 1957*
clause_no                       001370 automatic       fixed bin(17,0)          array level 2 dcl 2088 set ref 58*
cobol_$cd_cnt                   000310 external static fixed bin(17,0)          dcl 9-196 set ref 490* 490
cobol_$cobol_data_wd_off        000270 external static fixed bin(17,0)          dcl 9-118 set ref 577* 577
cobol_$coms_charcnt             000300 external static fixed bin(17,0)          dcl 9-188 set ref 489* 489
cobol_$coms_wdoff               000316 external static fixed bin(17,0)          dcl 9-202 set ref 473 473* 579 579* 581
cobol_$con_wd_off               000266 external static fixed bin(17,0)          dcl 9-92 set ref 292 292 576* 576 576 576
cobol_$cons_charcnt             000304 external static fixed bin(17,0)          dcl 9-192 set ref 267* 267
cobol_$data_init_flag           000272 external static fixed bin(17,0)          dcl 9-130 set ref 1923* 1923
cobol_$fs_charcnt               000274 external static fixed bin(17,0)          dcl 9-184 set ref 523* 523 537* 537
cobol_$fs_wdoff                 000312 external static fixed bin(17,0)          dcl 9-198 set ref 541 541* 583 583*
cobol_$initval_file_ptr         000264 external static pointer                  dcl 9-34 set ref 1929* 1948* 1961* 1979* 1998* 2005*
                                                                                  2027*
cobol_$ls_charcnt               000302 external static fixed bin(17,0)          dcl 9-190 set ref 259* 259
cobol_$value_cnt                000306 external static fixed bin(17,0)          dcl 9-194 set ref 394* 394
cobol_$ws_charcnt               000276 external static fixed bin(17,0)          dcl 9-186 set ref 248* 248 420* 420
cobol_$ws_wdoff                 000314 external static fixed bin(17,0)          dcl 9-200 set ref 250 250* 581 581* 583
cobol_IVAL                      000236 constant        entry                    external dcl 2359 ref 287
cobol_c_list                    000254 constant        entry                    external dcl 2366 ref 1872 1885 1899
cobol_com_ptr                          defined         pointer                  dcl 8-25 ref 48 49 50 53 55 55 66 73 84 85 99 107
                                                                                  136 260 260 483 484 587 1372 1419 1419 1420 1626
                                                                                  1626 1640
cobol_ext_$cobol_cmfp           000256 external static pointer                  dcl 8-20 set ref 587* 1383* 1585* 1588* 1624* 1630*
                                                                                  1634* 1770* 1796*
cobol_ext_$cobol_com_ptr        000260 external static pointer                  dcl 8-24 ref 48 48 49 49 50 50 53 53 55 55 55 55 66
                                                                                  66 73 73 84 84 85 85 99 99 107 107 136 136 260 260
                                                                                  260 260 483 483 484 484 587 587 1372 1372 1419
                                                                                  1419 1419 1419 1420 1420 1626 1626 1626 1626 1640
                                                                                  1640 2088
cobol_ext_$cobol_m2fp           000262 external static pointer                  dcl 8-32 set ref 78* 87* 770* 1501* 1515* 1536*
                                                                                  1606* 1664* 1702* 1727* 1737* 1762* 1787*
cobol_make_fsb_link_            000226 constant        entry                    external dcl 2354 ref 128
cobol_ntio$dget                 000252 constant        entry                    external dcl 2365 ref 140 212
cobol_ntio$sget                 000250 constant        entry                    external dcl 2364 ref 213 215 551 1294
cobol_read_ft_                  000230 constant        entry                    external dcl 2356 ref 109 151 502
cobol_swf_put                   000244 constant        entry                    external dcl 2362 ref 78 87 770 1501 1515 1536 1606
                                                                                  1664 1702 1727 1737 1762 1787 1929 1948 1961 1979
                                                                                  1998 2005 2027
cobol_vdwf_dget                 000242 constant        entry                    external dcl 2361 ref 1585 1588 1630 1770 1796
cobol_vdwf_dput                 000240 constant        entry                    external dcl 2360 ref 1383 1634
cobol_vdwf_sput                 000246 constant        entry                    external dcl 2363 ref 587 1624
code                      1            based           fixed bin(17,0)          level 2 dcl 1-6 set ref 1618*
code_set_clause          33(35)        based           bit(1)                   level 2 packed packed unaligned dcl 11-25 ref 799
code_set_sw                     003475 automatic       bit(1)                   packed unaligned dcl 786 set ref 797* 799* 850
column                    2            based           fixed bin(17,0)          level 2 in structure "data_name" dcl 12-16
                                                                                  in procedure "cobol_ddalloc" ref 1896
column                    2            based           fixed bin(17,0)          level 2 in structure "fd_token" dcl 16-16
                                                                                  in procedure "cobol_ddalloc" ref 1882
column                    2     003316 automatic       fixed bin(17,0)          level 2 in structure "nonnumlit" dcl 2286
                                                                                  in procedure "cobol_ddalloc" set ref 70*
column                    2     000035 internal static fixed bin(17,0)          level 2 in structure "diag" dcl 2180 in procedure
                                                                                  "cobol_ddalloc" set ref 1869* 1882* 1896*
column                    2     003275 automatic       fixed bin(17,0)          level 2 in structure "numlit" dcl 2272 in procedure
                                                                                  "cobol_ddalloc" set ref 68*
common_key                      001444 automatic       char(5)                  packed unaligned dcl 2105 set ref 1624* 1626 1632
                                                                                  1638
common_recsize                  001442 automatic       fixed bin(17,0)          dcl 2104 set ref 1588* 1630* 1634* 1770* 1796*
communication_section
                         21(04)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 ref 336
comp                     21(28)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 ref 860
comp7_sync                      003476 automatic       bit(1)                   packed unaligned dcl 788 set ref 793* 906* 1092
                                                                                  1096*
comp8_sync                      003477 automatic       bit(1)                   packed unaligned dcl 788 set ref 793* 872 990 1061*
                                                                                  1063*
compile_mode            156            based           bit(36)                  level 2 packed packed unaligned dcl 10-26 ref 53
con_wd_off                             defined         fixed bin(17,0)          dcl 9-93 set ref 292 576* 576
constant_section         21(02)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 ref 267
                                                                                  282
cra_offset               40            based           fixed bin(24,0)          level 2 dcl 11-25 set ref 383 529* 535* 541
cra_seg                  37            based           fixed bin(17,0)          level 2 dcl 11-25 set ref 528* 534*
cra_size                  1     001370 automatic       fixed bin(24,0)          array level 2 dcl 2088 set ref 60* 177 177* 521 523
cur_lev                         003470 automatic       fixed bin(17,0)          dcl 781 set ref 802* 812 821 948* 1067 1071* 1073*
                                                                                  1078* 1083* 1103
curr_char_off                   000113 automatic       fixed bin(17,0)          dcl 2054 set ref 294* 296 311 313* 318
curr_char_pos                   000115 automatic       fixed bin(17,0)          dcl 2054 set ref 296* 299 304 304* 307 307* 318
curr_wd_off                     000114 automatic       fixed bin(17,0)          dcl 2054 set ref 292* 294 311* 313
current_fno                     001460 automatic       fixed bin(17,0)          dcl 2119 set ref 64* 147* 149 151* 164 164* 169 799
data_name                              based           structure                level 1 unaligned dcl 12-16
ddseg                           000220 internal static structure                level 1 unaligned dcl 2296 set ref 587 587
ddseg_size                      000130 constant        fixed bin(17,0)          initial dcl 2308 set ref 587*
def_line                 11            based           fixed bin(17,0)          level 2 dcl 16-16 ref 1868
depend_ptr                      000534 automatic       pointer                  dcl 2072 set ref 1588* 1758 1759 1760 1760 1766 1770
descr                     1(09)        based           char(5)                  level 2 packed packed unaligned dcl 4-3 set ref
                                                                                  1588*
device                   47            based           fixed bin(17,0)          level 2 dcl 11-25 ref 636 747 747 755
diag                            000035 internal static structure                level 1 unaligned dcl 2180 set ref 1872 1872 1885
                                                                                  1885 1899 1899
diag_no                                parameter       fixed bin(17,0)          dcl 1879 in procedure "issue_file_diag" ref 1876
                                                                                  1883
diag_no                                parameter       fixed bin(17,0)          dcl 1892 in procedure "issue_diag" ref 1889 1897
diag_no                                parameter       fixed bin(17,0)          dcl 1866 in procedure "issue_fd_diag" ref 1863 1870
dimensions                2            based           fixed bin(17,0)          level 2 dcl 5-26 ref 1048 1054 1054 1056 1151 1342
                                                                                  1349 1365 1365 1378 1378 1387 1510 1510 1531 1695
                                                                                  1722
display                  21(27)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 ref 850
                                                                                  860 996
divide                                                 builtin function         dcl 2368 ref 250 311 473 541 577 579 720 1014 1029
                                                                                  1117 1166 1365 1378 1510 1510 1852
dn                                     based           char(1)                  array packed unaligned dcl 2066 set ref 1922
dn_ptr                                 parameter       pointer                  dcl 1893 in procedure "issue_diag" ref 1889 1895
                                                                                  1896
dn_ptr                          000520 automatic       pointer                  dcl 2059 in procedure "cobol_ddalloc" set ref 140*
                                                                                  144 144 147 158 161 164 212* 213* 215* 226 229 232
                                                                                  232 238 241 241 243 245 256 267 276 282 287* 290
                                                                                  294 318 322 325 325 328 332 336 339 345 345 348
                                                                                  351 353 355 373 388 389 389 391 428 432 436 439
                                                                                  450* 457* 469 494 494 497 551* 829 830 831 833 837
                                                                                  843 850 850 850 850* 854 854 858 860 860 860 863
                                                                                  867 870 872 875 881 886 886 888 892 898 901 904
                                                                                  914 919 922 928 936 938 945 945 945 959 988 994
                                                                                  996 1002* 1009 1014 1029 1034 1036 1043 1046 1046
                                                                                  1061 1061 1073 1073 1075 1078 1078 1078 1083 1268
                                                                                  1294* 1296 1296 1299 1300 1322 1332 1338 1338 1348
                                                                                  1354 1359 1363 1365 1377 1378 1378 1421 1425 1868
                                                                                  1881 1882 1922 1922 1933 1985 1986 1988 1991 1994
                                                                                  1995 1998* 1998 2001 2005* 2005 2009
do_rec                   30            based           char(5)                  level 2 packed packed unaligned dcl 12-16 ref 1421
double_word              31(13)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 set ref
                                                                                  351 837* 922* 938*
e                         5            based           fixed bin(17,0)          level 2 dcl 20-16 set ref 2023*
elementary               21(09)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 ref 1009
end_stmt                               based           structure                level 1 unaligned dcl 20-16
eof                             000107 automatic       fixed bin(17,0)          dcl 2050 set ref 135* 138* 142 206 209* 213* 215*
                                                                                  224 551* 1071 1294* 1296
eos_ptr                         003434 automatic       pointer                  dcl 20-13 set ref 2020* 2021 2022 2023 2024 2027*
                                                                                  2027
eos_token                       003640 automatic       fixed bin(24,0)          array dcl 2031 set ref 2014* 2020
errormes_lit                    000016 constant        structure                level 1 unaligned dcl 2324 set ref 1737 1737
exp_places                5     003275 automatic       fixed bin(17,0)          level 2 dcl 2272 set ref 1944*
exp_redefining           22(22)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 ref 238
                                                                                  332 959 1183
exp_sign                  4(18) 003275 automatic       char(1)                  level 2 packed packed unaligned dcl 2272 set ref
                                                                                  1943*
explaces                  1            based           fixed bin(24,0)          level 2 dcl 6-7 ref 1944
expsign                   0(27)        based           char(1)                  level 2 packed packed unaligned dcl 6-7 ref 1943
external                 33(10)        based           bit(1)                   level 2 packed packed unaligned dcl 11-25 ref 114
fd_token                               based           structure                level 1 unaligned dcl 16-16
figconindex               0(09)        based           bit(7)                   level 3 packed packed unaligned dcl 7-7 ref 1953
                                                                                  1956
file_count               24            based           fixed bin(17,0)          level 2 dcl 10-26 ref 107
file_key                        001450 automatic       char(5)                  packed unaligned dcl 2108 set ref 65*
file_no                  12            based           fixed bin(17,0)          level 2 dcl 16-16 set ref 147 499 502*
file_num                 14            based           fixed bin(17,0)          level 2 dcl 12-16 ref 164 328 339 1192
file_table                             based           structure                level 1 unaligned dcl 11-25
fill                            003474 automatic       fixed bin(17,0)          dcl 784 set ref 1142* 1143 1148* 1159 1166 1169
first_dd_item           113(18)        based           char(5)                  level 2 packed packed unaligned dcl 10-26 ref 136
first_name_key                  001446 automatic       char(5)                  dcl 2107 set ref 136* 138 140* 212*
fixed                                                  builtin function         dcl 2368 ref 1956
fixed_common                           based           structure                level 1 unaligned dcl 10-26
fixed_recs               33(17)        based           bit(1)                   level 2 packed packed unaligned dcl 11-25 ref 596
                                                                                  711
found                           001462 automatic       bit(1)                   packed unaligned dcl 2121 set ref 1065* 1067 1082*
ft_ptr                          000530 automatic       pointer                  dcl 2069 set ref 109* 111 114 117 122 122 126 126
                                                                                  128* 149* 151* 174 177 177 184 184 184 188 191 191
                                                                                  383 383 502* 504 511 514 528 529 534 535 536 537
                                                                                  541 596 596 596 596 596 600 600 601 603 603 609
                                                                                  612 612 612 618 618 623 623 630 630 636 639 645
                                                                                  650 652 658 662 665 671 675 681 686 686 693 697
                                                                                  700 700 700 707 707 711 714 714 720 720 720 720
                                                                                  731 736 736 736 736 736 740 740 741 745 745 747
                                                                                  747 750 755 758 799
half_word                31(11)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 set ref
                                                                                  355 914*
hisi_slack                      001463 automatic       bit(1)                   packed unaligned dcl 2124 set ref 53* 1007 1166 1296
i                               001454 automatic       fixed bin(17,0)          dcl 2114 set ref 55* 58 58 59 60* 107* 109* 413*
                                                                                  415* 514* 516 519 520 521 523 528 529 1387* 1389
                                                                                  1389*
icdhdr_type9                    000076 internal static structure                level 1 unaligned dcl 2213 set ref 450
id                      113            based           char(32)                 level 2 packed packed unaligned dcl 11-25 set ref
                                                                                  122* 126*
ieos                            003637 automatic       fixed bin(24,0)          dcl 2016 set ref 2011* 2014*
ifn                       1(09)        based           char(16)                 level 2 packed packed unaligned dcl 11-25 ref 117
                                                                                  122 126
ind_ptr                         003430 automatic       pointer                  dcl 14-16 set ref 415* 416 417 418
index                                                  builtin function         dcl 2368 ref 117
index_cnt                       000546 automatic       fixed bin(17,0)          dcl 2085 set ref 210* 405 413 424* 431* 431 432
index_name                             based           structure                level 1 unaligned dcl 14-19
index_ptr                       000550 automatic       pointer                  array dcl 2086 set ref 415 432*
info                      4     003275 automatic       bit(8)                   level 2 in structure "numlit" packed packed
                                                                                  unaligned dcl 2272 in procedure "cobol_ddalloc"
                                                                                  set ref 1941*
info                      0(08)        based           structure                level 2 in structure "numinit" packed packed
                                                                                  unaligned dcl 6-7 in procedure "cobol_ddalloc" ref
                                                                                  1941
info                      4     003316 automatic       bit(8)                   level 2 in structure "nonnumlit" packed packed
                                                                                  unaligned dcl 2286 in procedure "cobol_ddalloc"
                                                                                  set ref 1974* 1976*
info                      0(08)        based           structure                level 2 in structure "alphainit" packed packed
                                                                                  unaligned dcl 7-7 in procedure "cobol_ddalloc"
init_cd_offset          125            based           fixed bin(24,0)          level 2 dcl 10-26 set ref 484*
init_cd_seg             124            based           fixed bin(17,0)          level 2 dcl 10-26 set ref 483*
init_slack               16     001466 automatic       fixed bin(17,0)          array level 2 dcl 2132 set ref 827* 984* 986 1187
initial                  10(10)        based           bit(1)                   level 3 packed packed unaligned dcl 18-8 ref 480
initial_ptr              25            based           fixed bin(17,0)          level 2 dcl 12-16 ref 391 1922
initype                                based           structure                level 2 packed packed unaligned dcl 7-7
input                    10(08)        based           bit(1)                   level 3 packed packed unaligned dcl 18-8 ref 447
item_length              16            based           fixed bin(24,0)          level 2 dcl 12-16 set ref 172 243 348 858 1117*
                                                                                  1166* 1166 1200 1233 1300* 1365 1378
item_signed              21(25)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 set ref
                                                                                  850 854 888 1120*
jump_index                6     000026 internal static fixed bin(17,0)          level 2 dcl 2171 set ref 67* 1651* 1655* 1958* 1964*
just_right               21(35)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 set ref
                                                                                  1985 1986* 2009*
key                       4     000026 internal static fixed bin(17,0)          level 2 dcl 2171 set ref 89* 94* 559* 564* 569*
                                                                                  1494* 1504* 1518* 1524* 1539* 1549* 1555* 1610*
                                                                                  1643* 1649* 1657* 1667* 1677* 1705* 1715* 1730*
                                                                                  1740* 1773* 1924* 1956*
keyindex                        003630 automatic       fixed bin(17,0)          array dcl 1912 set ref 1914* 1915* 1916* 1917* 1918*
                                                                                  1919* 1920* 1956
last_perform_key                000540 automatic       char(5)                  packed unaligned dcl 2080 set ref 1630* 1634* 1638*
length                    5     003316 automatic       fixed bin(17,0)          level 2 in structure "nonnumlit" dcl 2286
                                                                                  in procedure "cobol_ddalloc" set ref 1970*
length                    5     000045 internal static fixed bin(17,0)          level 2 in structure "usrwd" dcl 2190 in procedure
                                                                                  "cobol_ddalloc" set ref 1759* 1783*
length                    4            based           fixed bin(24,0)          level 2 in structure "numinit" dcl 6-7 in procedure
                                                                                  "cobol_ddalloc" ref 1936 1938 1940 1940 1940
length                    1            based           fixed bin(24,0)          level 2 in structure "alphainit" dcl 7-7
                                                                                  in procedure "cobol_ddalloc" ref 1969 1970 1972
                                                                                  1972 1972
level                     6     001466 automatic       fixed bin(17,0)          array level 2 in structure "stk" dcl 2132
                                                                                  in procedure "cobol_ddalloc" set ref 805* 821 831*
                                                                                  1103
level                           001370 automatic       fixed bin(17,0)          array level 2 in structure "occurs_info" dcl 2095
                                                                                  in procedure "cobol_ddalloc" set ref 1322 1348*
level                     3            based           structure                array level 2 in structure "occurs" unaligned
                                                                                  dcl 5-26 in procedure "cobol_ddalloc"
level                    12            based           fixed bin(17,0)          level 2 in structure "data_name" dcl 12-16
                                                                                  in procedure "cobol_ddalloc" ref 161 229 232 232
                                                                                  325 325 831 945 945 1078 1078 1078 1083 1322 1348
line                      1     003275 automatic       fixed bin(17,0)          level 2 in structure "numlit" dcl 2272 in procedure
                                                                                  "cobol_ddalloc" set ref 68*
line                      1            based           fixed bin(17,0)          level 2 in structure "fd_token" dcl 16-16
                                                                                  in procedure "cobol_ddalloc" ref 1881
line                      1            based           fixed bin(17,0)          level 2 in structure "data_name" dcl 12-16
                                                                                  in procedure "cobol_ddalloc" ref 1895
line                      1     000035 internal static fixed bin(17,0)          level 2 in structure "diag" dcl 2180 in procedure
                                                                                  "cobol_ddalloc" set ref 1868* 1881* 1895*
line                      1     003316 automatic       fixed bin(17,0)          level 2 in structure "nonnumlit" dcl 2286
                                                                                  in procedure "cobol_ddalloc" set ref 70*
linkage_section          21(03)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 ref 256
                                                                                  322 1359
literal                   5            based           char                     level 2 in structure "numinit" packed packed
                                                                                  unaligned dcl 6-7 in procedure "cobol_ddalloc" ref
                                                                                  1940
literal                  11     000063 internal static char(5)                  level 2 in structure "sizertn_numlit" packed packed
                                                                                  unaligned dcl 2199 in procedure "cobol_ddalloc"
                                                                                  set ref 1510* 1531* 1695* 1722*
literal                  11     003275 automatic       char(30)                 level 2 in structure "numlit" packed packed
                                                                                  unaligned dcl 2272 in procedure "cobol_ddalloc"
                                                                                  set ref 1940*
loc                             003576 automatic       fixed bin(17,0)          dcl 1832 set ref 1834* 1850* 1850 1851 1855 1856
locate_mode              33(16)        based           bit(1)                   level 2 packed packed unaligned dcl 11-25 set ref
                                                                                  504*
ltdp                      2            based           fixed bin(24,0)          level 2 dcl 6-7 ref 1939
m                               001464 automatic       fixed bin(17,0)          dcl 2124 set ref 1016* 1019 1273 1278 1282* 1282
                                                                                  1284
max                       5            based           fixed bin(17,0)          array level 3 in structure "occurs" dcl 5-26
                                                                                  in procedure "cobol_ddalloc" set ref 1054 1054
                                                                                  1365 1378 1531* 1722*
max                                                    builtin function         dcl 2368 in procedure "cobol_ddalloc" ref 1181 1200
                                                                                  1217
max_bound                12     001466 automatic       fixed bin(17,0)          array level 2 dcl 2132 set ref 957* 1136 1142 1181*
                                                                                  1181 1181
max_cra_size             41            based           fixed bin(24,0)          level 2 dcl 11-25 set ref 184 184 191 191* 536 537
                                                                                  612 618 623* 630 639 645* 652 658* 665 671* 675
                                                                                  681* 700 707 714 720 720 736 750 758
max_occ                  13     001466 automatic       fixed bin(17,0)          array level 2 dcl 2132 set ref 1054* 1056* 1153 1163
max_red_size             32            based           fixed bin(24,0)          level 2 dcl 12-16 set ref 241 345 1200* 1200 1233*
max_station_count        43     000154 internal static char(4)                  level 3 packed packed unaligned dcl 2241 set ref
                                                                                  463* 464*
mdest                    16            based           fixed bin(17,0)          level 2 dcl 18-8 set ref 459 461* 465
min                       4            based           fixed bin(17,0)          array level 3 dcl 5-26 set ref 1056 1695*
mod                                                    builtin function         dcl 2368 ref 296 359 408 440 505 714 978 1034 1115
                                                                                  1136 1159 1176 1849
n                               003473 automatic       fixed bin(17,0)          dcl 784 set ref 794* 821 824* 824 827 827 828 828
                                                                                  829 831 833 844 854 854 858 864 876 882 886 891
                                                                                  891 905 908 915 923 929 933 940 957 957 963 963
                                                                                  964 969 978 984 984 986 1012 1016 1028 1041 1046
                                                                                  1052 1054 1056 1095 1095 1103 1103 1104 1114 1120
                                                                                  1125 1129 1131 1136 1142 1145 1150 1153 1163 1181
                                                                                  1181 1181 1186 1187 1192 1192 1211 1211 1214 1214
                                                                                  1217 1217 1230 1232 1235 1235 1237 1242* 1242
name                      5            based           char(31)                 level 2 in structure "qual_rec" packed packed
                                                                                  unaligned dcl 3-4 in procedure "cobol_ddalloc" ref
                                                                                  1784
name                      6            based           char(31)                 level 2 in structure "obj_rec" packed packed
                                                                                  unaligned dcl 2-4 in procedure "cobol_ddalloc" ref
                                                                                  1760
name_ptr                        000544 automatic       pointer                  dcl 2082 set ref 497* 499 502
next                      2            based           char(5)                  level 2 in structure "perform_entry" packed packed
                                                                                  unaligned dcl 1-6 in procedure "cobol_ddalloc" set
                                                                                  ref 1619* 1632*
next                                   based           char(5)                  level 2 in structure "qual_rec" packed packed
                                                                                  unaligned dcl 3-4 in procedure "cobol_ddalloc" set
                                                                                  ref 1792 1796*
next1                     3(09)        based           char(5)                  level 2 packed packed unaligned dcl 1-6 set ref
                                                                                  1620*
next_offset               3     000220 internal static fixed bin(24,0)          level 2 dcl 2296 set ref 46* 250 359 363 367 370*
                                                                                  408 410* 410 417 419* 419 440 443 443* 445 451*
                                                                                  451 458* 458 476 488* 488 505 507 509 521* 536*
                                                                                  577 579
next_rec_off             20     001466 automatic       fixed bin(17,0)          array level 2 in structure "stk" dcl 2132
                                                                                  in procedure "cobol_ddalloc" set ref 1211 1214
                                                                                  1217 1217* 1230*
next_rec_off                    003467 automatic       fixed bin(17,0)          dcl 780 in procedure "set_size" set ref 794*
non_elementary           21(08)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 ref 833
                                                                                  945 994 1111 1155 1174 1296
nonnumlit                       003316 automatic       structure                level 1 unaligned dcl 2286 set ref 1979 1979
nonnumlit_size                         constant        fixed bin(17,0)          initial dcl 2307 ref 1969
nt_array                               based           char(1)                  array packed unaligned dcl 2084 set ref 1046 1338
nt_ptr                          001466 automatic       pointer                  array level 2 dcl 2132 set ref 172 188 829* 1095
                                                                                  1095 1104 1145* 1211* 1273
null                                                   builtin function         dcl 2368 ref 44 149 383 1192 1235
number                    5     000035 internal static fixed bin(17,0)          level 2 dcl 2180 set ref 1870* 1883* 1897*
number_of_dd_segs       102            based           fixed bin(17,0)          level 2 dcl 10-26 set ref 48*
number_of_ls_pointers
                        105            based           fixed bin(17,0)          level 2 dcl 10-26 set ref 260* 260 1372
numeric                  21(17)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 set ref
                                                                                  854 1988 1991
numinit                                based           structure                level 1 unaligned dcl 6-7
numlit                          003275 automatic       structure                level 1 unaligned dcl 2272 set ref 1948 1948
numlit_size                            constant        fixed bin(17,0)          initial dcl 2306 ref 1512 1533 1697 1724 1936
o_of_rdf                 21(12)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 ref 241
                                                                                  345 373
obj_rec                                based           structure                level 1 unaligned dcl 2-4
obs_ALLOC_ADJUSTED              000100 constant        fixed bin(17,0)          initial dcl 23-22 set ref 1214*
obs_BLKSIZE_ADJUSTED            000107 constant        fixed bin(17,0)          initial dcl 23-15 set ref 691* 705* 718*
obs_BLOCKING_IGNORED            000102 constant        fixed bin(17,0)          initial dcl 23-20 set ref 731*
obs_CRASIZE_ADJUSTED            000105 constant        fixed bin(17,0)          initial dcl 23-17 set ref 621*
obs_EXPLICIT_SYNC                      constant        fixed bin(17,0)          initial dcl 23-28 ref 988
obs_GREATER_SIZE_REDEFINES      000101 constant        fixed bin(17,0)          initial dcl 23-21 set ref 1198*
obs_IMPLICIT_SYNC                      constant        fixed bin(17,0)          initial dcl 23-23 ref 998
obs_IMPLICIT_SYNC_FOR_DISPLAY          constant        fixed bin(17,0)          initial dcl 23-25 ref 996
obs_IMPLICIT_SYNC_FOR_GROUP            constant        fixed bin(17,0)          initial dcl 23-26 ref 994
obs_IMPLICIT_SYNC_IN_ARRAY      000077 constant        fixed bin(17,0)          initial dcl 23-24 set ref 1145*
obs_PREVIOUS_SYNC                      constant        fixed bin(17,0)          initial dcl 23-27 ref 990
obs_RECSIZE_ADJUSTED            000106 constant        fixed bin(17,0)          initial dcl 23-16 set ref 628* 643* 656* 669* 679*
oc                      133(31)        based           bit(1)                   level 3 packed packed unaligned dcl 10-26 ref 1640
occ_lev                         003471 automatic       fixed bin(17,0)          dcl 782 set ref 794* 1048 1051* 1051 1171* 1171
occ_ptr                   4     001466 automatic       pointer                  array level 2 dcl 2132 set ref 1046* 1150
occurs                                 based           structure                level 1 unaligned dcl 5-26
occurs_do                22(06)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 ref 1354
occurs_info                     001370 automatic       structure                array level 1 unaligned dcl 2095
occurs_level                    001455 automatic       fixed bin(17,0)          dcl 2115 set ref 236* 418 1318 1322 1328* 1328 1342
                                                                                  1347* 1347 1348 1349
occurs_ptr                      003426 automatic       pointer                  dcl 5-24 in procedure "cobol_ddalloc" set ref 1046*
                                                                                  1048 1054 1054 1054 1054 1056 1056 1150* 1151 1151
                                                                                  1338* 1342 1349 1349 1365 1365 1365 1365 1378 1378
                                                                                  1378 1378 1387 1389 1510 1510 1510 1510 1531 1531
                                                                                  1695 1695 1722 1722
occurs_ptr               27            based           fixed bin(17,0)          level 2 in structure "data_name" dcl 12-16
                                                                                  in procedure "cobol_ddalloc" ref 1043 1046 1338
ocdhdr_type9                    000154 internal static structure                level 1 unaligned dcl 2241 set ref 457
odo_do_rec                      001440 automatic       char(5)                  packed unaligned dcl 2103 set ref 1421* 1579
odo_info                 61(27)        based           char(5)                  level 2 packed packed unaligned dcl 10-26 ref 73
odo_key                         001436 automatic       char(5)                  packed unaligned dcl 2102 set ref 1383* 1579* 1585*
odo_proc_num                    001456 automatic       fixed bin(17,0)          dcl 2116 set ref 235* 1416 1420* 1425 1604
odo_rec                                based           structure                level 1 unaligned dcl 4-3
odo_rec_ptr                     000532 automatic       pointer                  dcl 2071 set ref 1362 1363 1365 1365 1372 1377 1378
                                                                                  1383* 1585* 1588
odo_recsize                     001457 automatic       fixed bin(17,0)          dcl 2117 set ref 1383* 1585*
off                             003512 automatic       fixed bin(17,0)          dcl 1264 set ref 1268* 1269 1277
offset                   14            based           fixed bin(24,0)          level 2 in structure "index_name" dcl 14-19
                                                                                  in procedure "cobol_ddalloc" set ref 417*
offset                   10     001466 automatic       fixed bin(17,0)          array level 2 in structure "stk" dcl 2132
                                                                                  in procedure "cobol_ddalloc" set ref 806* 1012*
                                                                                  1028* 1114 1278*
offset                    3     001370 automatic       fixed bin(24,0)          array level 2 in structure "same_rec_area_info"
                                                                                  dcl 2088 in procedure "cobol_ddalloc" set ref 520*
                                                                                  529
offset                   24            based           fixed bin(24,0)          level 2 in structure "data_name" dcl 12-16
                                                                                  in procedure "cobol_ddalloc" set ref 294 318* 389*
                                                                                  389 469* 1014* 1029* 1095* 1095 1268 1273 1299*
                                                                                  1363 1377 1378
offset_l                  4            based           fixed bin(24,0)          level 2 dcl 4-3 set ref 1363* 1365 1377*
offset_r                  5            based           fixed bin(24,0)          level 2 dcl 4-3 set ref 1365* 1378*
options                 133            based           structure                level 2 in structure "fixed_common" packed packed
                                                                                  unaligned dcl 10-26 in procedure "cobol_ddalloc"
options                  10(08)        based           structure                level 2 in structure "cdtoken" packed packed
                                                                                  unaligned dcl 18-8 in procedure "cobol_ddalloc"
p                               003514 automatic       pointer                  dcl 1264 set ref 1273* 1275 1277
pd_section              134(04)        based           bit(1)                   level 2 packed packed unaligned dcl 10-26 ref 66
perform_entry                          based           structure                level 1 unaligned dcl 1-6
perform_ptr                     003424 automatic       pointer                  dcl 1-5 set ref 1616* 1617 1618 1619 1620 1621 1622
                                                                                  1624*
perform_size                    000122 constant        fixed bin(17,0)          initial dcl 2304 set ref 1624*
places                   10     003275 automatic       fixed bin(17,0)          level 2 in structure "numlit" dcl 2272 in procedure
                                                                                  "cobol_ddalloc" set ref 1938*
places                   10     000063 internal static fixed bin(17,0)          level 2 in structure "sizertn_numlit" dcl 2199
                                                                                  in procedure "cobol_ddalloc" set ref 1510* 1512
                                                                                  1513 1531* 1533 1534 1695* 1697 1698 1722* 1724
                                                                                  1725
places_left               6     000063 internal static fixed bin(17,0)          level 2 in structure "sizertn_numlit" dcl 2199
                                                                                  in procedure "cobol_ddalloc" set ref 1513* 1534*
                                                                                  1698* 1725*
places_left               6     003275 automatic       fixed bin(17,0)          level 2 in structure "numlit" dcl 2272 in procedure
                                                                                  "cobol_ddalloc" set ref 1939*
places_left              17            based           fixed bin(17,0)          level 2 in structure "data_name" dcl 12-16
                                                                                  in procedure "cobol_ddalloc" ref 886
places_right              7     003275 automatic       fixed bin(17,0)          level 2 in structure "numlit" dcl 2272 in procedure
                                                                                  "cobol_ddalloc" set ref 1945*
places_right             20            based           fixed bin(17,0)          level 2 in structure "data_name" dcl 12-16
                                                                                  in procedure "cobol_ddalloc" ref 886
priority                  5            based           fixed bin(17,0)          level 2 dcl 1-6 set ref 1621*
proc_num                 12     000010 internal static fixed bin(17,0)          level 2 dcl 2153 set ref 85* 99 1604* 1617
proc_number                            based           fixed bin(17,0)          level 2 dcl 1-6 set ref 1617*
procdef                         000010 internal static structure                level 1 unaligned dcl 2153 set ref 87 87 1606 1606
procname_sw                     000105 automatic       fixed bin(17,0)          dcl 2048 set ref 76* 105* 556
qual                                   based           char(5)                  level 2 packed packed unaligned dcl 2-4 set ref 1766
                                                                                  1770*
qual_ptr                        000536 automatic       pointer                  dcl 2073 set ref 1770* 1782 1783 1784 1784 1792
                                                                                  1796* 1796
qual_rec                               based           structure                level 1 unaligned dcl 3-4
rec_do                   33(33)        based           bit(1)                   level 2 packed packed unaligned dcl 11-25 ref 596
                                                                                  612
rec_max                  71            based           fixed bin(24,0)          level 2 dcl 11-25 set ref 603 609 612 618 623 630*
rec_min                  70            based           fixed bin(24,0)          level 2 dcl 11-25 ref 603
rec_off                         003466 automatic       fixed bin(17,0)          dcl 779 set ref 794* 964* 969 978 986* 986 1012 1014
                                                                                  1028 1029 1034 1114 1153* 1153 1155* 1155 1159*
                                                                                  1159 1159 1169* 1169 1174* 1174 1176* 1176 1176
                                                                                  1211 1214 1217 1217* 1230
record_format            52            based           fixed bin(17,0)          level 2 dcl 11-25 set ref 600* 600 740* 740 745* 745
record_offset                   001452 automatic       fixed bin(24,0)          dcl 2112 set ref 332* 339* 363* 367* 370 373 383*
                                                                                  389 443* 445* 469 473 476* 478 484 507* 509* 520
                                                                                  521 535 536 1363
record_segment                         constant        fixed bin(17,0)          initial dcl 2303 ref 49 388 416 477 483 519 534 1362
redef_object_offset             000112 automatic       fixed bin(17,0)          dcl 2053 set ref 45* 332 339* 373*
redef_offset             17     001466 automatic       fixed bin(17,0)          array level 2 dcl 2132 set ref 964 969*
redef_ptr                 2     001466 automatic       pointer                  array level 2 dcl 2132 set ref 44* 1186 1214* 1235*
                                                                                  1237*
redef_size               14     001466 automatic       fixed bin(17,0)          array level 2 dcl 2132 set ref 1192 1232*
reschar_GT                             constant        fixed bin(17,0)          initial dcl 24-121 ref 1715
reschar_LPARENS                        constant        fixed bin(17,0)          initial dcl 24-205 ref 1524
reschar_LT                             constant        fixed bin(17,0)          initial dcl 24-135 ref 1677
reschar_MINUS                          constant        fixed bin(17,0)          initial dcl 24-201 ref 1539
reschar_PERIOD                         constant        fixed bin(17,0)          initial dcl 24-207 ref 94 569 1555 1610
reschar_RPARENS                        constant        fixed bin(17,0)          initial dcl 24-206 ref 1549
reschar_STAR                           constant        fixed bin(17,0)          initial dcl 24-202 ref 1518
result                                 based           char(4)                  packed unaligned dcl 1830 ref 1851
reswd                           000026 internal static structure                level 1 unaligned dcl 2171 set ref 770 770 1929 1929
                                                                                  1961 1961
reswd_COBOL                            constant        fixed bin(17,0)          initial dcl 24-209 ref 564
reswd_COMPUTE                          constant        fixed bin(17,0)          initial dcl 24-57 ref 1494
reswd_ELSE                             constant        fixed bin(17,0)          initial dcl 24-100 ref 1740
reswd_END                              constant        fixed bin(17,0)          initial dcl 24-103 ref 559
reswd_EQUALS                           constant        fixed bin(17,0)          initial dcl 24-108 ref 1504
reswd_HIGH_VALUE                       constant        fixed bin(17,0)          initial dcl 24-244 ref 1918
reswd_IF                               constant        fixed bin(17,0)          initial dcl 24-64 ref 1667
reswd_LOW_VALUE                        constant        fixed bin(17,0)          initial dcl 24-254 ref 1919
reswd_MOVE                             constant        fixed bin(17,0)          initial dcl 24-36 ref 1643 1924
reswd_OF                               constant        fixed bin(17,0)          initial dcl 24-147 ref 1773
reswd_OR                               constant        fixed bin(17,0)          initial dcl 24-149 ref 1705
reswd_QUOTE                            constant        fixed bin(17,0)          initial dcl 24-262 ref 1920
reswd_SECTION                          constant        fixed bin(17,0)          initial dcl 24-172 ref 89
reswd_SPACE                            constant        fixed bin(17,0)          initial dcl 24-210 ref 1915
reswd_STOP                             constant        fixed bin(17,0)          initial dcl 24-50 ref 1730
reswd_TO                               constant        fixed bin(17,0)          initial dcl 24-186 ref 1657
reswd_ZERO                             constant        fixed bin(17,0)          initial dcl 24-196 ref 1649 1914
rtdp                      3            based           fixed bin(24,0)          level 2 dcl 6-7 ref 1945
same_rec_area_info              001370 automatic       structure                array level 1 unaligned dcl 2088
same_rec_clause          61            based           fixed bin(17,0)          level 2 dcl 11-25 ref 174 177 177 511 514
section_name             10(04) 000010 internal static bit(1)                   level 2 packed packed unaligned dcl 2153 set ref 66*
                                                                                  81 100*
section_num              11     000010 internal static fixed bin(17,0)          initial level 2 dcl 2153 set ref 84*
seg_info                103            based           char(5)                  level 2 packed packed unaligned dcl 10-26 set ref
                                                                                  587*
seg_no                    3            based           fixed bin(17,0)          level 2 dcl 4-3 set ref 1362* 1372*
seg_num                  23            based           fixed bin(17,0)          level 2 in structure "data_name" dcl 12-16
                                                                                  in procedure "cobol_ddalloc" set ref 290* 388*
seg_num                   2     001370 automatic       fixed bin(17,0)          array level 2 in structure "same_rec_area_info"
                                                                                  dcl 2088 in procedure "cobol_ddalloc" set ref 59*
                                                                                  516 519* 528
seg_num                  13            based           fixed bin(17,0)          level 2 in structure "index_name" dcl 14-19
                                                                                  in procedure "cobol_ddalloc" set ref 416*
sign                      4(09) 003275 automatic       char(1)                  level 2 in structure "numlit" packed packed
                                                                                  unaligned dcl 2272 in procedure "cobol_ddalloc"
                                                                                  set ref 1942*
sign                      0(18)        based           char(1)                  level 2 in structure "numinit" packed packed
                                                                                  unaligned dcl 6-7 in procedure "cobol_ddalloc" ref
                                                                                  1942
sign_lev                        003472 automatic       fixed bin(17,0)          dcl 783 set ref 803* 854 854* 1120
sign_separate            21(26)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 ref 850
sign_type                22(13)        based           bit(3)                   level 2 packed packed unaligned dcl 12-16 set ref
                                                                                  892*
size                            003275 automatic       fixed bin(17,0)          level 2 in structure "numlit" dcl 2272 in procedure
                                                                                  "cobol_ddalloc" set ref 1936* 1948*
size                      4            based           fixed bin(17,0)          level 2 in structure "qual_rec" dcl 3-4 in procedure
                                                                                  "cobol_ddalloc" ref 1782 1783 1784
size                      5            based           fixed bin(17,0)          level 2 in structure "obj_rec" dcl 2-4 in procedure
                                                                                  "cobol_ddalloc" ref 1758 1759 1760
size                            000010 internal static fixed bin(17,0)          initial level 2 in structure "procdef" dcl 2153
                                                                                  in procedure "cobol_ddalloc" set ref 87* 1606*
size                            000000 constant        fixed bin(17,0)          initial level 2 in structure "type25" dcl 2310
                                                                                  in procedure "cobol_ddalloc" set ref 78*
size                            000016 constant        fixed bin(17,0)          initial level 2 in structure "errormes_lit" dcl 2324
                                                                                  in procedure "cobol_ddalloc" set ref 1737*
size                            000026 internal static fixed bin(17,0)          initial level 2 in structure "reswd" dcl 2171
                                                                                  in procedure "cobol_ddalloc" set ref 770* 1929*
                                                                                  1961*
size                            003316 automatic       fixed bin(17,0)          level 2 in structure "nonnumlit" dcl 2286
                                                                                  in procedure "cobol_ddalloc" set ref 1969* 1979*
size                      7     001466 automatic       fixed bin(17,0)          array level 2 in structure "stk" dcl 2132
                                                                                  in procedure "cobol_ddalloc" set ref 858* 886*
                                                                                  891* 891 908* 1129
size                            000045 internal static fixed bin(17,0)          level 2 in structure "usrwd" dcl 2190 in procedure
                                                                                  "cobol_ddalloc" set ref 1758* 1762* 1782* 1787*
size                            000063 internal static fixed bin(17,0)          level 2 in structure "sizertn_numlit" dcl 2199
                                                                                  in procedure "cobol_ddalloc" set ref 1512* 1515*
                                                                                  1533* 1536* 1697* 1702* 1724* 1727*
size                            000042 constant        fixed bin(17,0)          initial level 2 in structure "sizedn" dcl 2333
                                                                                  in procedure "cobol_ddalloc" set ref 1501* 1664*
size                                   based           fixed bin(17,0)          level 2 in structure "data_name" dcl 12-16
                                                                                  in procedure "cobol_ddalloc" set ref 1998* 2005*
size                                   based           fixed bin(17,0)          level 2 in structure "end_stmt" dcl 20-16
                                                                                  in procedure "cobol_ddalloc" set ref 2024* 2027*
size_offset              64            based           fixed bin(24,0)          level 2 dcl 10-26 set ref 50*
size_perform_info        65            based           char(5)                  level 2 packed packed unaligned dcl 10-26 set ref
                                                                                  1626 1626*
size_rtn                 15            based           fixed bin(17,0)          level 2 dcl 12-16 set ref 1425*
size_seg                 63            based           fixed bin(17,0)          level 2 dcl 10-26 set ref 49*
sizedn                          000042 constant        structure                level 1 unaligned dcl 2333 set ref 1501 1501 1664
                                                                                  1664
sizertn_numlit                  000063 internal static structure                level 1 unaligned dcl 2199 set ref 1515 1515 1536
                                                                                  1536 1702 1702 1727 1727
son_cnt                  15     001466 automatic       fixed bin(17,0)          array level 2 in structure "stk" dcl 2132
                                                                                  in procedure "cobol_ddalloc" set ref 804* 827*
                                                                                  828* 828 963* 963 1125
son_cnt                  31(20)        based           bit(16)                  level 2 in structure "data_name" packed packed
                                                                                  unaligned dcl 12-16 in procedure "cobol_ddalloc"
                                                                                  set ref 1125*
sort_file                33(32)        based           bit(1)                   level 2 packed packed unaligned dcl 11-25 ref 111
spanned_recs             33(19)        based           bit(1)                   level 2 packed packed unaligned dcl 11-25 ref 596
                                                                                  662 700
spec_tag_counter         23            based           fixed bin(17,0)          level 2 dcl 10-26 set ref 84 85 99* 1419* 1419 1420
sra_clauses             110            based           fixed bin(17,0)          level 2 dcl 10-26 ref 55 55 2088
st                              001461 automatic       bit(32)                  packed unaligned dcl 2120 set ref 78* 87* 587* 770*
                                                                                  1383* 1501* 1515* 1536* 1585* 1588* 1606* 1624*
                                                                                  1630* 1634* 1664* 1702* 1727* 1737* 1762* 1770*
                                                                                  1787* 1796* 1929* 1948* 1961* 1979* 1998* 2005*
                                                                                  2027*
stk                             001466 automatic       structure                array level 1 unaligned dcl 2132 set ref 42
stk_occurs                      003272 automatic       bit(1)                   array level 2 packed packed unaligned dcl 2149 set
                                                                                  ref 809 1041* 1052* 1131 1235
stk_off                         003513 automatic       fixed bin(17,0)          dcl 1264 set ref 1269* 1278
string                    2            based           char                     level 2 in structure "alphainit" packed packed
                                                                                  unaligned dcl 7-7 in procedure "cobol_ddalloc" ref
                                                                                  1972
string                                                 builtin function         dcl 2368 in procedure "cobol_ddalloc" ref 1941
string                    6     003316 automatic       char(256)                level 2 in structure "nonnumlit" packed packed
                                                                                  unaligned dcl 2286 in procedure "cobol_ddalloc"
                                                                                  set ref 1972*
struc_length             20            based           fixed bin(17,0)          level 2 in structure "index_name" dcl 14-19
                                                                                  in procedure "cobol_ddalloc" set ref 418*
struc_length              6            based           fixed bin(17,0)          array level 3 in structure "occurs" dcl 5-26
                                                                                  in procedure "cobol_ddalloc" set ref 1151* 1349
                                                                                  1365 1378 1389* 1510 1510
struclength               3     001370 automatic       fixed bin(17,0)          array level 2 dcl 2095 set ref 418 1349* 1389
subscripted              22(05)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 ref 1332
substr                                                 builtin function         dcl 2368 set ref 53 122 464* 1125 1760 1784 1851*
                                                                                  1851 1856 1940* 1940 1972* 1972 1992 1993* 2002*
sv_bit                          000100 automatic       bit(1)                   packed unaligned dcl 2043 set ref 1985* 2009
sync                     22(01)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 ref 872
                                                                                  901 988 1061
sync_bits                              based           bit(5)                   packed unaligned dcl 787 set ref 830* 936*
temp                            000106 automatic       fixed bin(17,0)          dcl 2049 set ref 117* 119 119* 122 452* 461* 464 464
                                                                                  465* 488 489 988* 990* 994* 996* 998* 1002*
temp_char5                      000102 automatic       char(5)                  packed unaligned dcl 2046 set ref 461* 464
temp_len                        000110 automatic       fixed bin(24,0)          dcl 2051 set ref 345* 348* 370
temp_mod                        000111 automatic       fixed bin(17,0)          dcl 2052 set ref 351* 353* 355* 357* 359 363 978*
                                                                                  980 984 1136* 1138 1142
temp_size                       000104 automatic       fixed bin(17,0)          dcl 2047 set ref 172* 177 177 184 191 191 241* 243*
                                                                                  248 259 267 1114* 1115* 1115 1115 1117 1129* 1136
                                                                                  1143* 1143 1151 1153 1155 1163* 1163 1174 1187*
                                                                                  1187 1192 1232
temp_slack                      001453 automatic       fixed bin(17,0)          dcl 2113 set ref 359* 363 363 408* 410 410 440* 443
                                                                                  443 505* 507 507
type                      3     003316 automatic       fixed bin(17,0)          level 2 in structure "nonnumlit" dcl 2286
                                                                                  in procedure "cobol_ddalloc" set ref 71*
type                      3     003275 automatic       fixed bin(17,0)          level 2 in structure "numlit" dcl 2272 in procedure
                                                                                  "cobol_ddalloc" set ref 69*
type                      3            based           fixed bin(17,0)          level 2 in structure "data_name" dcl 12-16
                                                                                  in procedure "cobol_ddalloc" ref 144 144 158 226
                                                                                  428 436 494 494 1073 1073 1075 1296
type                      3            based           fixed bin(17,0)          level 2 in structure "end_stmt" dcl 20-16
                                                                                  in procedure "cobol_ddalloc" set ref 2021*
type25                          000000 constant        structure                level 1 unaligned dcl 2310 set ref 78 78
unequal_recs             34(18)        based           bit(1)                   level 2 packed packed unaligned dcl 11-25 set ref
                                                                                  184* 188* 596
unique_bits_                    000232 constant        entry                    external dcl 2357 ref 122 122
unique_chars_                   000234 constant        entry                    external dcl 2358 ref 122
unspec                                                 builtin function         dcl 2368 ref 1125
usage_index              21(34)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 ref 919
usrwd                           000045 internal static structure                level 1 unaligned dcl 2190 set ref 1762 1762 1787
                                                                                  1787
usrwd_size                             constant        fixed bin(17,0)          initial dcl 2305 ref 1758 1782
valhd                           000527 automatic       bit(6)                   packed unaligned dcl 2064 set ref 1992* 2002
valhd_based                            based           bit(6)                   packed unaligned dcl 2065 set ref 1992 1993* 2002*
valhd_ptr                       000524 automatic       pointer                  dcl 2062 set ref 1991* 1992 1993 2002
valhdbit                        000526 automatic       bit(1)                   packed unaligned dcl 2063 set ref 1994* 2001
value                    37     000154 internal static structure                level 2 unaligned dcl 2241
value_numeric            22(10)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 ref 1933
valueptr                        000522 automatic       pointer                  dcl 2061 set ref 1922* 1936 1938 1939 1940 1940 1940
                                                                                  1941 1942 1943 1944 1945 1953 1956 1969 1970 1972
                                                                                  1972 1972 1974
variable                101(01)        based           bit(1)                   level 2 packed packed unaligned dcl 11-25 set ref
                                                                                  601*
variable_length          22(04)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 set ref
                                                                                  188 276 1994 1995* 2001*
variable_recs            33(18)        based           bit(1)                   level 2 packed packed unaligned dcl 11-25 ref 596
                                                                                  650
verb                      4            based           fixed bin(17,0)          level 2 dcl 20-16 set ref 2022*
warn_BLKSIZE_LESS_THAN_RECSIZE  000111 constant        fixed bin(17,0)          initial dcl 23-13 set ref 704*
warn_BLKSIZE_NOT_MULT_OF_RECSIZE
                                000110 constant        fixed bin(17,0)          initial dcl 23-14 set ref 717*
warn_BLKSIZE_TOO_SMALL          000112 constant        fixed bin(17,0)          initial dcl 23-12 set ref 690*
warn_CODE_SET_VIOLATION         000117 constant        fixed bin(17,0)          initial dcl 23-7 set ref 850*
warn_FLR_RECSIZE_EXCEEDED       000113 constant        fixed bin(17,0)          initial dcl 23-11 set ref 678*
warn_MIN_RECSIZE_MISSING        000104 constant        fixed bin(17,0)          initial dcl 23-18 set ref 603*
warn_RECSIZE_INCONSISTENT       000103 constant        fixed bin(17,0)          initial dcl 23-19 set ref 616*
warn_RECSIZE_TOO_SMALL          000116 constant        fixed bin(17,0)          initial dcl 23-8 set ref 642*
warn_REC_EXCEEDS_DEVICE_LIMIT   000120 constant        fixed bin(17,0)          initial dcl 23-6 set ref 750* 758*
warn_SPANNED_RECSIZE_EXCEEDED   000114 constant        fixed bin(17,0)          initial dcl 23-10 set ref 668*
warn_UNEQUAL_SIZE_REDEFINES     000121 constant        fixed bin(17,0)          initial dcl 23-5 set ref 1211*
warn_VLR_RECSIZE_EXCEEDED       000115 constant        fixed bin(17,0)          initial dcl 23-9 set ref 655*
word                      6     000045 internal static char(30)                 level 2 in structure "usrwd" packed packed unaligned
                                                                                  dcl 2190 in procedure "cobol_ddalloc" set ref
                                                                                  1760* 1784*
word                     31(12)        based           bit(1)                   level 2 in structure "data_name" packed packed
                                                                                  unaligned dcl 12-16 in procedure "cobol_ddalloc"
                                                                                  set ref 353 904* 928*
work_area                       001404 automatic       char(100)                packed unaligned dcl 2100 set ref 1616
work_ptr                        000542 automatic       pointer                  dcl 2081 set ref 1630* 1632 1634*
working_storage          21(01)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 ref 245

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
addrel                                                 builtin function         dcl 2368
allo1_max                              defined         fixed bin(17,0)          dcl 9-171
allo1_ptr                              defined         pointer                  dcl 9-67
alter_flag                             defined         fixed bin(17,0)          dcl 9-135
alter_index                            defined         fixed bin(17,0)          dcl 9-153
alter_list_ptr                         defined         pointer                  dcl 9-39
bit648                                 based           bit(648)                 packed unaligned dcl 2128
cd_cnt                                 defined         fixed bin(17,0)          dcl 9-197
cobol_$allo1_max                       external static fixed bin(17,0)          dcl 9-170
cobol_$allo1_ptr                       external static pointer                  dcl 9-66
cobol_$alter_flag                      external static fixed bin(17,0)          dcl 9-134
cobol_$alter_index                     external static fixed bin(17,0)          dcl 9-152
cobol_$alter_list_ptr                  external static pointer                  dcl 9-38
cobol_$compile_count                   external static fixed bin(17,0)          dcl 9-142
cobol_$con_end_ptr                     external static pointer                  dcl 9-10
cobol_$constant_offset                 external static fixed bin(17,0)          dcl 9-156
cobol_$date_compiled_sw                external static fixed bin(17,0)          dcl 9-180
cobol_$debug_enable                    external static fixed bin(17,0)          dcl 9-174
cobol_$def_base_ptr                    external static pointer                  dcl 9-12
cobol_$def_max                         external static fixed bin(17,0)          dcl 9-96
cobol_$def_wd_off                      external static fixed bin(17,0)          dcl 9-94
cobol_$diag_ptr                        external static pointer                  dcl 9-70
cobol_$eln_max                         external static fixed bin(17,0)          dcl 9-172
cobol_$eln_ptr                         external static pointer                  dcl 9-68
cobol_$fixup_max                       external static fixed bin(17,0)          dcl 9-164
cobol_$fixup_ptr                       external static pointer                  dcl 9-30
cobol_$include_cnt                     external static fixed bin(17,0)          dcl 9-182
cobol_$include_info_ptr                external static pointer                  dcl 9-86
cobol_$init_stack_off                  external static fixed bin(17,0)          dcl 9-124
cobol_$initval_base_ptr                external static pointer                  dcl 9-32
cobol_$initval_flag                    external static fixed bin(17,0)          dcl 9-178
cobol_$link_base_ptr                   external static pointer                  dcl 9-14
cobol_$link_max                        external static fixed bin(17,0)          dcl 9-100
cobol_$link_wd_off                     external static fixed bin(17,0)          dcl 9-98
cobol_$list_off                        external static fixed bin(17,0)          dcl 9-154
cobol_$list_ptr                        external static pointer                  dcl 9-64
cobol_$main_pcs_ptr                    external static pointer                  dcl 9-84
cobol_$map_data_max                    external static fixed bin(17,0)          dcl 9-162
cobol_$map_data_ptr                    external static pointer                  dcl 9-54
cobol_$max_stack_off                   external static fixed bin(17,0)          dcl 9-122
cobol_$minpral5_ptr                    external static pointer                  dcl 9-50
cobol_$misc_base_ptr                   external static pointer                  dcl 9-60
cobol_$misc_end_ptr                    external static pointer                  dcl 9-62
cobol_$misc_max                        external static fixed bin(17,0)          dcl 9-158
cobol_$next_tag                        external static fixed bin(17,0)          dcl 9-128
cobol_$non_source_offset               external static fixed bin(17,0)          dcl 9-176
cobol_$ntbuf_ptr                       external static pointer                  dcl 9-82
cobol_$obj_seg_name                    external static char(32)                 dcl 9-208
cobol_$op_con_ptr                      external static pointer                  dcl 9-80
cobol_$para_eop_flag                   external static fixed bin(17,0)          dcl 9-138
cobol_$pd_map_index                    external static fixed bin(17,0)          dcl 9-116
cobol_$pd_map_max                      external static fixed bin(17,0)          dcl 9-160
cobol_$pd_map_ptr                      external static pointer                  dcl 9-28
cobol_$pd_map_sw                       external static fixed bin(17,0)          dcl 9-126
cobol_$perform_list_ptr                external static pointer                  dcl 9-36
cobol_$perform_para_index              external static fixed bin(17,0)          dcl 9-148
cobol_$perform_sect_index              external static fixed bin(17,0)          dcl 9-150
cobol_$priority_no                     external static fixed bin(17,0)          dcl 9-140
cobol_$ptr_assumption_ind              external static fixed bin(17,0)          dcl 9-144
cobol_$ptr_status_ptr                  external static pointer                  dcl 9-56
cobol_$reg_assumption_ind              external static fixed bin(17,0)          dcl 9-146
cobol_$reg_status_ptr                  external static pointer                  dcl 9-58
cobol_$reloc_def_base_ptr              external static pointer                  dcl 9-20
cobol_$reloc_def_max                   external static fixed bin(24,0)          dcl 9-108
cobol_$reloc_link_base_ptr             external static pointer                  dcl 9-22
cobol_$reloc_link_max                  external static fixed bin(24,0)          dcl 9-110
cobol_$reloc_sym_base_ptr              external static pointer                  dcl 9-24
cobol_$reloc_sym_max                   external static fixed bin(24,0)          dcl 9-112
cobol_$reloc_text_base_ptr             external static pointer                  dcl 9-18
cobol_$reloc_text_max                  external static fixed bin(24,0)          dcl 9-106
cobol_$reloc_work_base_ptr             external static pointer                  dcl 9-26
cobol_$reloc_work_max                  external static fixed bin(24,0)          dcl 9-114
cobol_$reswd_ptr                       external static pointer                  dcl 9-78
cobol_$same_sort_merge_proc            external static bit(1)                   dcl 9-214
cobol_$scratch_dir                     external static char(168)                dcl 9-206
cobol_$sect_eop_flag                   external static fixed bin(17,0)          dcl 9-136
cobol_$seg_init_flag                   external static fixed bin(17,0)          dcl 9-132
cobol_$seg_init_list_ptr               external static pointer                  dcl 9-40
cobol_$stack_off                       external static fixed bin(17,0)          dcl 9-120
cobol_$statement_info_ptr              external static pointer                  dcl 9-76
cobol_$sym_base_ptr                    external static pointer                  dcl 9-16
cobol_$sym_max                         external static fixed bin(17,0)          dcl 9-104
cobol_$sym_wd_off                      external static fixed bin(17,0)          dcl 9-102
cobol_$tag_table_max                   external static fixed bin(17,0)          dcl 9-166
cobol_$tag_table_ptr                   external static pointer                  dcl 9-52
cobol_$temp_token_area_ptr             external static pointer                  dcl 9-42
cobol_$temp_token_max                  external static fixed bin(17,0)          dcl 9-168
cobol_$temp_token_ptr                  external static pointer                  dcl 9-44
cobol_$text_base_ptr                   external static pointer                  dcl 9-8
cobol_$text_wd_off                     external static fixed bin(17,0)          dcl 9-90
cobol_$token_block1_ptr                external static pointer                  dcl 9-46
cobol_$token_block2_ptr                external static pointer                  dcl 9-48
cobol_$xref_bypass                     external static bit(1)                   dcl 9-212
cobol_$xref_chain_ptr                  external static pointer                  dcl 9-74
cobol_$xref_token_ptr                  external static pointer                  dcl 9-72
cobol_afp                              defined         pointer                  dcl 8-11
cobol_analin_fileno                    defined         pointer                  dcl 8-13
cobol_cmfp                             defined         pointer                  dcl 8-21
cobol_com_fileno                       defined         pointer                  dcl 8-23
cobol_curr_in                          defined         pointer                  dcl 8-53
cobol_curr_out                         defined         pointer                  dcl 8-55
cobol_data_wd_off                      defined         fixed bin(17,0)          dcl 9-119
cobol_dfp                              defined         pointer                  dcl 8-27
cobol_eltp                             defined         pointer                  dcl 8-19
cobol_ext_$cobol_afp                   external static pointer                  dcl 8-10
cobol_ext_$cobol_analin_fileno         external static pointer                  dcl 8-12
cobol_ext_$cobol_com_fileno            external static pointer                  dcl 8-22
cobol_ext_$cobol_curr_in               external static pointer                  dcl 8-52
cobol_ext_$cobol_curr_out              external static pointer                  dcl 8-54
cobol_ext_$cobol_dfp                   external static pointer                  dcl 8-26
cobol_ext_$cobol_eltp                  external static pointer                  dcl 8-18
cobol_ext_$cobol_fileno1               external static fixed bin(24,0)          dcl 8-78
cobol_ext_$cobol_hfp                   external static pointer                  dcl 8-28
cobol_ext_$cobol_lpr                   external static char(5)                  packed unaligned dcl 8-95
cobol_ext_$cobol_m1fp                  external static pointer                  dcl 8-30
cobol_ext_$cobol_min1_fileno           external static pointer                  dcl 8-34
cobol_ext_$cobol_min2_fileno_ptr       external static pointer                  dcl 8-36
cobol_ext_$cobol_name_fileno           external static pointer                  dcl 8-38
cobol_ext_$cobol_name_fileno_ptr       external static pointer                  dcl 8-40
cobol_ext_$cobol_ntfp                  external static pointer                  dcl 8-42
cobol_ext_$cobol_options               external static char(120)                packed unaligned dcl 8-97
cobol_ext_$cobol_options_len           external static fixed bin(24,0)          dcl 8-80
cobol_ext_$cobol_pdofp                 external static pointer                  dcl 8-44
cobol_ext_$cobol_pdout_fileno          external static fixed bin(24,0)          dcl 8-82
cobol_ext_$cobol_pfp                   external static pointer                  dcl 8-46
cobol_ext_$cobol_print_fileno          external static fixed bin(24,0)          dcl 8-84
cobol_ext_$cobol_rm2fp                 external static pointer                  dcl 8-48
cobol_ext_$cobol_rmin2_fileno          external static fixed bin(24,0)          dcl 8-86
cobol_ext_$cobol_rmin2fp               external static pointer                  dcl 8-50
cobol_ext_$cobol_rwdd                  external static pointer                  dcl 8-72
cobol_ext_$cobol_rwpd                  external static pointer                  dcl 8-74
cobol_ext_$cobol_sfp                   external static pointer                  dcl 8-56
cobol_ext_$cobol_w1p                   external static pointer                  dcl 8-58
cobol_ext_$cobol_w2p                   external static pointer                  dcl 8-60
cobol_ext_$cobol_w3p                   external static pointer                  dcl 8-62
cobol_ext_$cobol_w5p                   external static pointer                  dcl 8-64
cobol_ext_$cobol_w6p                   external static pointer                  dcl 8-66
cobol_ext_$cobol_w7p                   external static pointer                  dcl 8-68
cobol_ext_$cobol_x1_fileno             external static fixed bin(24,0)          dcl 8-88
cobol_ext_$cobol_x2_fileno             external static fixed bin(24,0)          dcl 8-90
cobol_ext_$cobol_x3_fileno             external static fixed bin(24,0)          dcl 8-92
cobol_ext_$cobol_x3fp                  external static pointer                  dcl 8-70
cobol_ext_$cobol_xlast8                external static bit(1)                   packed unaligned dcl 8-100
cobol_ext_$report_exists               external static bit(1)                   packed unaligned dcl 8-102
cobol_ext_$report_first_token          external static pointer                  dcl 8-14
cobol_ext_$report_last_token           external static pointer                  dcl 8-16
cobol_fileno1                          defined         fixed bin(24,0)          dcl 8-79
cobol_hfp                              defined         pointer                  dcl 8-29
cobol_lpr                              defined         char(5)                  packed unaligned dcl 8-96
cobol_m1fp                             defined         pointer                  dcl 8-31
cobol_m2fp                             defined         pointer                  dcl 8-33
cobol_min1_fileno                      defined         pointer                  dcl 8-35
cobol_min2_fileno_ptr                  defined         pointer                  dcl 8-37
cobol_name_fileno                      defined         pointer                  dcl 8-39
cobol_name_fileno_ptr                  defined         pointer                  dcl 8-41
cobol_ntfp                             defined         pointer                  dcl 8-43
cobol_options                          defined         char(120)                packed unaligned dcl 8-98
cobol_options_len                      defined         fixed bin(24,0)          dcl 8-81
cobol_pdofp                            defined         pointer                  dcl 8-45
cobol_pdout_fileno                     defined         fixed bin(24,0)          dcl 8-83
cobol_pfp                              defined         pointer                  dcl 8-47
cobol_print_fileno                     defined         fixed bin(24,0)          dcl 8-85
cobol_rm2fp                            defined         pointer                  dcl 8-49
cobol_rmin2_fileno                     defined         fixed bin(24,0)          dcl 8-87
cobol_rmin2fp                          defined         pointer                  dcl 8-51
cobol_rwdd                             defined         pointer                  dcl 8-73
cobol_rwpd                             defined         pointer                  dcl 8-75
cobol_sfp                              defined         pointer                  dcl 8-57
cobol_w1p                              defined         pointer                  dcl 8-59
cobol_w2p                              defined         pointer                  dcl 8-61
cobol_w3p                              defined         pointer                  dcl 8-63
cobol_w5p                              defined         pointer                  dcl 8-65
cobol_w6p                              defined         pointer                  dcl 8-67
cobol_w7p                              defined         pointer                  dcl 8-69
cobol_x1_fileno                        defined         fixed bin(24,0)          dcl 8-89
cobol_x2_fileno                        defined         fixed bin(24,0)          dcl 8-91
cobol_x3_fileno                        defined         fixed bin(24,0)          dcl 8-93
cobol_x3fp                             defined         pointer                  dcl 8-71
cobol_xlast8                           defined         bit(1)                   packed unaligned dcl 8-101
com2_ptr                               automatic       pointer                  dcl 2060
compile_count                          defined         fixed bin(17,0)          dcl 9-143
coms_charcnt                           defined         fixed bin(17,0)          dcl 9-189
coms_wdoff                             defined         fixed bin(17,0)          dcl 9-203
con_end_ptr                            defined         pointer                  dcl 9-11
cons_charcnt                           defined         fixed bin(17,0)          dcl 9-193
constant_offset                        defined         fixed bin(17,0)          dcl 9-157
data_init_flag                         defined         fixed bin(17,0)          dcl 9-131
date_compiled_sw                       defined         fixed bin(17,0)          dcl 9-181
debug_enable                           defined         fixed bin(17,0)          dcl 9-175
def_base_ptr                           defined         pointer                  dcl 9-13
def_max                                defined         fixed bin(17,0)          dcl 9-97
def_wd_off                             defined         fixed bin(17,0)          dcl 9-95
diag_ptr                               defined         pointer                  dcl 9-71
eln_max                                defined         fixed bin(17,0)          dcl 9-173
eln_ptr                                defined         pointer                  dcl 9-69
first_pop                              automatic       bit(1)                   packed unaligned dcl 2121
fixup_max                              defined         fixed bin(17,0)          dcl 9-165
fixup_ptr                              defined         pointer                  dcl 9-31
fs_charcnt                             defined         fixed bin(17,0)          dcl 9-185
fs_wdoff                               defined         fixed bin(17,0)          dcl 9-199
ft_size                                automatic       fixed bin(17,0)          dcl 2118
group_key                              automatic       char(5)                  packed unaligned dcl 2110
include_cnt                            defined         fixed bin(17,0)          dcl 9-183
include_info_ptr                       defined         pointer                  dcl 9-87
index_area                             automatic       char(120)                packed unaligned dcl 2101
index_name_ptr                         automatic       pointer                  dcl 2067
init_stack_off                         defined         fixed bin(17,0)          dcl 9-125
initval_base_ptr                       defined         pointer                  dcl 9-33
initval_file_ptr                       defined         pointer                  dcl 9-35
initval_flag                           defined         fixed bin(17,0)          dcl 9-179
link_base_ptr                          defined         pointer                  dcl 9-15
link_max                               defined         fixed bin(17,0)          dcl 9-101
link_wd_off                            defined         fixed bin(17,0)          dcl 9-99
list_off                               defined         fixed bin(17,0)          dcl 9-155
list_ptr                               defined         pointer                  dcl 9-65
ls_charcnt                             defined         fixed bin(17,0)          dcl 9-191
main_pcs_ptr                           defined         pointer                  dcl 9-85
map_data_max                           defined         fixed bin(17,0)          dcl 9-163
map_data_ptr                           defined         pointer                  dcl 9-55
max_stack_off                          defined         fixed bin(17,0)          dcl 9-123
minpral5_ptr                           defined         pointer                  dcl 9-51
misc_base_ptr                          defined         pointer                  dcl 9-61
misc_end_ptr                           defined         pointer                  dcl 9-63
misc_max                               defined         fixed bin(17,0)          dcl 9-159
name_recsize                           automatic       fixed bin(17,0)          dcl 2106
next_tag                               defined         fixed bin(17,0)          dcl 9-129
non_source_offset                      defined         fixed bin(17,0)          dcl 9-177
nt_buf                                 based           char(1000)               packed unaligned dcl 2083
ntbuf_ptr                              defined         pointer                  dcl 9-83
obj_seg_name                           defined         char(32)                 dcl 9-209
op_con_ptr                             defined         pointer                  dcl 9-81
para_eop_flag                          defined         fixed bin(17,0)          dcl 9-139
pd_map_index                           defined         fixed bin(17,0)          dcl 9-117
pd_map_max                             defined         fixed bin(17,0)          dcl 9-161
pd_map_ptr                             defined         pointer                  dcl 9-29
pd_map_sw                              defined         fixed bin(17,0)          dcl 9-127
perform_list_ptr                       defined         pointer                  dcl 9-37
perform_para_index                     defined         fixed bin(17,0)          dcl 9-149
perform_sect_index                     defined         fixed bin(17,0)          dcl 9-151
priority_no                            defined         fixed bin(17,0)          dcl 9-141
ptr_assumption_ind                     defined         fixed bin(17,0)          dcl 9-145
ptr_status_ptr                         defined         pointer                  dcl 9-57
rec_offset                             automatic       fixed bin(24,0)          dcl 2111
reg_assumption_ind                     defined         fixed bin(17,0)          dcl 9-147
reg_status_ptr                         defined         pointer                  dcl 9-59
reloc_def_base_ptr                     defined         pointer                  dcl 9-21
reloc_def_max                          defined         fixed bin(24,0)          dcl 9-109
reloc_link_base_ptr                    defined         pointer                  dcl 9-23
reloc_link_max                         defined         fixed bin(24,0)          dcl 9-111
reloc_sym_base_ptr                     defined         pointer                  dcl 9-25
reloc_sym_max                          defined         fixed bin(24,0)          dcl 9-113
reloc_text_base_ptr                    defined         pointer                  dcl 9-19
reloc_text_max                         defined         fixed bin(24,0)          dcl 9-107
reloc_work_base_ptr                    defined         pointer                  dcl 9-27
reloc_work_max                         defined         fixed bin(24,0)          dcl 9-115
report_exists                          defined         bit(1)                   packed unaligned dcl 8-103
report_first_token                     defined         pointer                  dcl 8-15
report_key                             automatic       char(5)                  packed unaligned dcl 2109
report_last_token                      defined         pointer                  dcl 8-17
report_ptr                             automatic       pointer                  dcl 22-7
report_token                           based           structure                level 1 unaligned dcl 22-8
reschar_2EQs                           internal static fixed bin(17,0)          initial dcl 24-286
reschar_2STARs                         internal static fixed bin(17,0)          initial dcl 24-204
reschar_EQ                             internal static fixed bin(17,0)          initial dcl 24-108
reschar_PLUS                           internal static fixed bin(17,0)          initial dcl 24-200
reschar_SLASH                          internal static fixed bin(17,0)          initial dcl 24-203
reswd_ACCEPT                           internal static fixed bin(17,0)          initial dcl 24-19
reswd_ACCESS                           internal static fixed bin(17,0)          initial dcl 24-343
reswd_ADD                              internal static fixed bin(17,0)          initial dcl 24-20
reswd_ADDRESS                          internal static fixed bin(17,0)          initial dcl 24-345
reswd_ADVANCING                        internal static fixed bin(17,0)          initial dcl 24-74
reswd_AFTER                            internal static fixed bin(17,0)          initial dcl 24-75
reswd_ALL                              internal static fixed bin(17,0)          initial dcl 24-76
reswd_ALPHABET                         internal static fixed bin(17,0)          initial dcl 24-346
reswd_ALPHABETIC                       internal static fixed bin(17,0)          initial dcl 24-77
reswd_ALPHANUMERIC                     internal static fixed bin(17,0)          initial dcl 24-78
reswd_ALPHANUMERIC_EDITED              internal static fixed bin(17,0)          initial dcl 24-79
reswd_ALSO                             internal static fixed bin(17,0)          initial dcl 24-100
reswd_ALTER                            internal static fixed bin(17,0)          initial dcl 24-22
reswd_ALTERNATE                        internal static fixed bin(17,0)          initial dcl 24-349
reswd_AND                              internal static fixed bin(17,0)          initial dcl 24-80
reswd_APPLY                            internal static fixed bin(17,0)          initial dcl 24-350
reswd_ARE                              internal static fixed bin(17,0)          initial dcl 24-128
reswd_AREA                             internal static fixed bin(17,0)          initial dcl 24-219
reswd_AREAS                            internal static fixed bin(17,0)          initial dcl 24-219
reswd_ASCENDING                        internal static fixed bin(17,0)          initial dcl 24-81
reswd_ASSIGN                           internal static fixed bin(17,0)          initial dcl 24-351
reswd_AT                               internal static fixed bin(17,0)          initial dcl 24-82
reswd_AUTHOR                           internal static fixed bin(17,0)          initial dcl 24-352
reswd_BEFORE                           internal static fixed bin(17,0)          initial dcl 24-83
reswd_BEGINNING                        internal static fixed bin(17,0)          initial dcl 24-84
reswd_BIT                              internal static fixed bin(17,0)          initial dcl 24-213
reswd_BITS                             internal static fixed bin(17,0)          initial dcl 24-213
reswd_BLANK                            internal static fixed bin(17,0)          initial dcl 24-222
reswd_BLOCK                            internal static fixed bin(17,0)          initial dcl 24-223
reswd_BOOLEAN                          internal static fixed bin(17,0)          initial dcl 24-152
reswd_BOTTOM                           internal static fixed bin(17,0)          initial dcl 24-264
reswd_BSN                              internal static fixed bin(17,0)          initial dcl 24-330
reswd_BY                               internal static fixed bin(17,0)          initial dcl 24-85
reswd_CALL                             internal static fixed bin(17,0)          initial dcl 24-23
reswd_CANCEL                           internal static fixed bin(17,0)          initial dcl 24-25
reswd_CATALOGUE_NAME                   internal static fixed bin(17,0)          initial dcl 24-322
reswd_CATALOG_NAME                     internal static fixed bin(17,0)          initial dcl 24-322
reswd_CD                               internal static fixed bin(17,0)          initial dcl 24-224
reswd_CF                               internal static fixed bin(17,0)          initial dcl 24-353
reswd_CH                               internal static fixed bin(17,0)          initial dcl 24-354
reswd_CHARACTER                        internal static fixed bin(17,0)          initial dcl 24-86
reswd_CHARACTERS                       internal static fixed bin(17,0)          initial dcl 24-86
reswd_CLOCK_UNITS                      internal static fixed bin(17,0)          initial dcl 24-355
reswd_CLOSE                            internal static fixed bin(17,0)          initial dcl 24-26
reswd_CODE                             internal static fixed bin(17,0)          initial dcl 24-356
reswd_CODE_SET                         internal static fixed bin(17,0)          initial dcl 24-314
reswd_COLLATING                        internal static fixed bin(17,0)          initial dcl 24-357
reswd_COLUMN                           internal static fixed bin(17,0)          initial dcl 24-358
reswd_COMMA                            internal static fixed bin(17,0)          initial dcl 24-359
reswd_COMMUNICATION                    internal static fixed bin(17,0)          initial dcl 24-225
reswd_COMP                             internal static fixed bin(17,0)          initial dcl 24-113
reswd_COMPUTATIONAL                    internal static fixed bin(17,0)          initial dcl 24-113
reswd_COMPUTATIONAL_1                  internal static fixed bin(17,0)          initial dcl 24-233
reswd_COMPUTATIONAL_2                  internal static fixed bin(17,0)          initial dcl 24-235
reswd_COMPUTATIONAL_3                  internal static fixed bin(17,0)          initial dcl 24-231
reswd_COMPUTATIONAL_4                  internal static fixed bin(17,0)          initial dcl 24-227
reswd_COMPUTATIONAL_5                  internal static fixed bin(17,0)          initial dcl 24-229
reswd_COMPUTATIONAL_6                  internal static fixed bin(17,0)          initial dcl 24-308
reswd_COMPUTATIONAL_7                  internal static fixed bin(17,0)          initial dcl 24-305
reswd_COMPUTATIONAL_8                  internal static fixed bin(17,0)          initial dcl 24-448
reswd_COMP_1                           internal static fixed bin(17,0)          initial dcl 24-233
reswd_COMP_2                           internal static fixed bin(17,0)          initial dcl 24-235
reswd_COMP_3                           internal static fixed bin(17,0)          initial dcl 24-231
reswd_COMP_4                           internal static fixed bin(17,0)          initial dcl 24-227
reswd_COMP_5                           internal static fixed bin(17,0)          initial dcl 24-229
reswd_COMP_6                           internal static fixed bin(17,0)          initial dcl 24-308
reswd_COMP_7                           internal static fixed bin(17,0)          initial dcl 24-305
reswd_COMP_8                           internal static fixed bin(17,0)          initial dcl 24-448
reswd_CONFIGURATION                    internal static fixed bin(17,0)          initial dcl 24-360
reswd_CONSTANT                         internal static fixed bin(17,0)          initial dcl 24-237
reswd_CONTAINS                         internal static fixed bin(17,0)          initial dcl 24-238
reswd_CONTROL                          internal static fixed bin(17,0)          initial dcl 24-362
reswd_CONTROLS                         internal static fixed bin(17,0)          initial dcl 24-363
reswd_CONVERSION                       internal static fixed bin(17,0)          initial dcl 24-361
reswd_COPY                             internal static fixed bin(17,0)          initial dcl 24-364
reswd_CORR                             internal static fixed bin(17,0)          initial dcl 24-365
reswd_CORRESPONDING                    internal static fixed bin(17,0)          initial dcl 24-365
reswd_COUNT                            internal static fixed bin(17,0)          initial dcl 24-88
reswd_CURRENCY                         internal static fixed bin(17,0)          initial dcl 24-367
reswd_DATA                             internal static fixed bin(17,0)          initial dcl 24-216
reswd_DATE                             internal static fixed bin(17,0)          initial dcl 24-90
reswd_DATE_COMPILED                    internal static fixed bin(17,0)          initial dcl 24-369
reswd_DATE_WRITTEN                     internal static fixed bin(17,0)          initial dcl 24-370
reswd_DAY                              internal static fixed bin(17,0)          initial dcl 24-91
reswd_DAY_OF_WEEK                      internal static fixed bin(17,0)          initial dcl 24-317
reswd_DE                               internal static fixed bin(17,0)          initial dcl 24-371
reswd_DEBUGGING                        internal static fixed bin(17,0)          initial dcl 24-92
reswd_DEBUG_CONTENTS                   internal static fixed bin(17,0)          initial dcl 24-372
reswd_DEBUG_ITEM                       internal static fixed bin(17,0)          initial dcl 24-373
reswd_DEBUG_LINE                       internal static fixed bin(17,0)          initial dcl 24-374
reswd_DEBUG_NAME                       internal static fixed bin(17,0)          initial dcl 24-379
reswd_DEBUG_SUB_1                      internal static fixed bin(17,0)          initial dcl 24-375
reswd_DEBUG_SUB_2                      internal static fixed bin(17,0)          initial dcl 24-376
reswd_DEBUG_SUB_3                      internal static fixed bin(17,0)          initial dcl 24-377
reswd_DECIMAL_POINT                    internal static fixed bin(17,0)          initial dcl 24-380
reswd_DECLARATIVES                     internal static fixed bin(17,0)          initial dcl 24-93
reswd_DEFAULT                          internal static fixed bin(17,0)          initial dcl 24-312
reswd_DELETE                           internal static fixed bin(17,0)          initial dcl 24-40
reswd_DELIMITED                        internal static fixed bin(17,0)          initial dcl 24-94
reswd_DELIMITER                        internal static fixed bin(17,0)          initial dcl 24-95
reswd_DEPENDING                        internal static fixed bin(17,0)          initial dcl 24-96
reswd_DESCENDING                       internal static fixed bin(17,0)          initial dcl 24-97
reswd_DESTINATION                      internal static fixed bin(17,0)          initial dcl 24-241
reswd_DETAIL                           internal static fixed bin(17,0)          initial dcl 24-381
reswd_DISABLE                          internal static fixed bin(17,0)          initial dcl 24-58
reswd_DISPLAY                          internal static fixed bin(17,0)          initial dcl 24-59
reswd_DIVIDE                           internal static fixed bin(17,0)          initial dcl 24-27
reswd_DIVISION                         internal static fixed bin(17,0)          initial dcl 24-98
reswd_DOWN                             internal static fixed bin(17,0)          initial dcl 24-99
reswd_DUPLICATES                       internal static fixed bin(17,0)          initial dcl 24-252
reswd_DYNAMIC                          internal static fixed bin(17,0)          initial dcl 24-185
reswd_EGI                              internal static fixed bin(17,0)          initial dcl 24-260
reswd_EMI                              internal static fixed bin(17,0)          initial dcl 24-102
reswd_ENABLE                           internal static fixed bin(17,0)          initial dcl 24-60
reswd_ENDING                           internal static fixed bin(17,0)          initial dcl 24-104
reswd_END_OF_PAGE                      internal static fixed bin(17,0)          initial dcl 24-105
reswd_ENTER                            internal static fixed bin(17,0)          initial dcl 24-61
reswd_ENVIRONMENT                      internal static fixed bin(17,0)          initial dcl 24-382
reswd_EOP                              internal static fixed bin(17,0)          initial dcl 24-105
reswd_EQUAL                            internal static fixed bin(17,0)          initial dcl 24-108
reswd_ERROR                            internal static fixed bin(17,0)          initial dcl 24-21
reswd_ESI                              internal static fixed bin(17,0)          initial dcl 24-112
reswd_EVERY                            internal static fixed bin(17,0)          initial dcl 24-384
reswd_EXAMINE                          internal static fixed bin(17,0)          initial dcl 24-67
reswd_EXCEEDS                          internal static fixed bin(17,0)          initial dcl 24-121
reswd_EXCEPTION                        internal static fixed bin(17,0)          initial dcl 24-115
reswd_EXIT                             internal static fixed bin(17,0)          initial dcl 24-30
reswd_EXOR                             internal static fixed bin(17,0)          initial dcl 24-442
reswd_EXTEND                           internal static fixed bin(17,0)          initial dcl 24-239
reswd_EXTERNAL                         internal static fixed bin(17,0)          initial dcl 24-315
reswd_FD                               internal static fixed bin(17,0)          initial dcl 24-242
reswd_FILE                             internal static fixed bin(17,0)          initial dcl 24-116
reswd_FILES                            internal static fixed bin(17,0)          initial dcl 24-299
reswd_FILE_CONTROL                     internal static fixed bin(17,0)          initial dcl 24-385
reswd_FILLER                           internal static fixed bin(17,0)          initial dcl 24-243
reswd_FINAL                            internal static fixed bin(17,0)          initial dcl 24-387
reswd_FIRST                            internal static fixed bin(17,0)          initial dcl 24-117
reswd_FLR                              internal static fixed bin(17,0)          initial dcl 24-296
reswd_FOOTING                          internal static fixed bin(17,0)          initial dcl 24-388
reswd_FOR                              internal static fixed bin(17,0)          initial dcl 24-118
reswd_FROM                             internal static fixed bin(17,0)          initial dcl 24-119
reswd_GENERATE                         internal static fixed bin(17,0)          initial dcl 24-62
reswd_GIVING                           internal static fixed bin(17,0)          initial dcl 24-120
reswd_GO                               internal static fixed bin(17,0)          initial dcl 24-32
reswd_GREATER                          internal static fixed bin(17,0)          initial dcl 24-121
reswd_GROUP                            internal static fixed bin(17,0)          initial dcl 24-390
reswd_HEADING                          internal static fixed bin(17,0)          initial dcl 24-389
reswd_HIGH_VALUES                      internal static fixed bin(17,0)          initial dcl 24-244
reswd_HOLD                             internal static fixed bin(17,0)          initial dcl 24-63
reswd_IDENTIFICATION                   internal static fixed bin(17,0)          initial dcl 24-393
reswd_IDS_II                           internal static fixed bin(17,0)          initial dcl 24-334
reswd_IN                               internal static fixed bin(17,0)          initial dcl 24-107
reswd_INDEX                            internal static fixed bin(17,0)          initial dcl 24-246
reswd_INDEXED                          internal static fixed bin(17,0)          initial dcl 24-247
reswd_INDICATE                         internal static fixed bin(17,0)          initial dcl 24-394
reswd_INITIAL                          internal static fixed bin(17,0)          initial dcl 24-124
reswd_INITIALIZE                       internal static fixed bin(17,0)          initial dcl 24-31
reswd_INITIATE                         internal static fixed bin(17,0)          initial dcl 24-34
reswd_INPUT                            internal static fixed bin(17,0)          initial dcl 24-125
reswd_INPUT_OUTPUT                     internal static fixed bin(17,0)          initial dcl 24-130
reswd_INSPECT                          internal static fixed bin(17,0)          initial dcl 24-35
reswd_INSTALLATION                     internal static fixed bin(17,0)          initial dcl 24-395
reswd_INTERCHANGE                      internal static fixed bin(17,0)          initial dcl 24-318
reswd_INTO                             internal static fixed bin(17,0)          initial dcl 24-126
reswd_INVALID                          internal static fixed bin(17,0)          initial dcl 24-127
reswd_IS                               internal static fixed bin(17,0)          initial dcl 24-128
reswd_I_O                              internal static fixed bin(17,0)          initial dcl 24-130
reswd_I_O_CONTROL                      internal static fixed bin(17,0)          initial dcl 24-392
reswd_JUST                             internal static fixed bin(17,0)          initial dcl 24-248
reswd_JUSTIFIED                        internal static fixed bin(17,0)          initial dcl 24-248
reswd_KEY                              internal static fixed bin(17,0)          initial dcl 24-132
reswd_KEYED                            internal static fixed bin(17,0)          initial dcl 24-332
reswd_LABEL                            internal static fixed bin(17,0)          initial dcl 24-133
reswd_LAST                             internal static fixed bin(17,0)          initial dcl 24-397
reswd_LEADING                          internal static fixed bin(17,0)          initial dcl 24-134
reswd_LEFT                             internal static fixed bin(17,0)          initial dcl 24-250
reswd_LENGTH                           internal static fixed bin(17,0)          initial dcl 24-251
reswd_LESS                             internal static fixed bin(17,0)          initial dcl 24-135
reswd_LIMIT                            internal static fixed bin(17,0)          initial dcl 24-401
reswd_LIMITS                           internal static fixed bin(17,0)          initial dcl 24-402
reswd_LINAGE                           internal static fixed bin(17,0)          initial dcl 24-403
reswd_LINAGE_COUNTER                   internal static fixed bin(17,0)          initial dcl 24-404
reswd_LINE                             internal static fixed bin(17,0)          initial dcl 24-137
reswd_LINES                            internal static fixed bin(17,0)          initial dcl 24-137
reswd_LINE_COUNTER                     internal static fixed bin(17,0)          initial dcl 24-405
reswd_LINKAGE                          internal static fixed bin(17,0)          initial dcl 24-253
reswd_LOCK                             internal static fixed bin(17,0)          initial dcl 24-139
reswd_LOW_VALUES                       internal static fixed bin(17,0)          initial dcl 24-254
reswd_MEMORY                           internal static fixed bin(17,0)          initial dcl 24-407
reswd_MERGE                            internal static fixed bin(17,0)          initial dcl 24-33
reswd_MESSAGE                          internal static fixed bin(17,0)          initial dcl 24-140
reswd_MODE                             internal static fixed bin(17,0)          initial dcl 24-256
reswd_MODULES                          internal static fixed bin(17,0)          initial dcl 24-408
reswd_MULTIPLE                         internal static fixed bin(17,0)          initial dcl 24-409
reswd_MULTIPLY                         internal static fixed bin(17,0)          initial dcl 24-28
reswd_NATIVE                           internal static fixed bin(17,0)          initial dcl 24-303
reswd_NEGATIVE                         internal static fixed bin(17,0)          initial dcl 24-141
reswd_NEXT                             internal static fixed bin(17,0)          initial dcl 24-142
reswd_NO                               internal static fixed bin(17,0)          initial dcl 24-143
reswd_NOT                              internal static fixed bin(17,0)          initial dcl 24-144
reswd_NUMBER                           internal static fixed bin(17,0)          initial dcl 24-410
reswd_NUMERIC                          internal static fixed bin(17,0)          initial dcl 24-145
reswd_NUMERIC_EDITED                   internal static fixed bin(17,0)          initial dcl 24-146
reswd_OBJECT                           internal static fixed bin(17,0)          initial dcl 24-307
reswd_OBJECT_COMPUTER                  internal static fixed bin(17,0)          initial dcl 24-411
reswd_OCCURS                           internal static fixed bin(17,0)          initial dcl 24-257
reswd_OFF                              internal static fixed bin(17,0)          initial dcl 24-413
reswd_OMITTED                          internal static fixed bin(17,0)          initial dcl 24-221
reswd_ON                               internal static fixed bin(17,0)          initial dcl 24-148
reswd_OPEN                             internal static fixed bin(17,0)          initial dcl 24-37
reswd_OPTIONAL                         internal static fixed bin(17,0)          initial dcl 24-415
reswd_ORGANIZATION                     internal static fixed bin(17,0)          initial dcl 24-199
reswd_OUTPUT                           internal static fixed bin(17,0)          initial dcl 24-151
reswd_OVERFLOW                         internal static fixed bin(17,0)          initial dcl 24-24
reswd_PAGE                             internal static fixed bin(17,0)          initial dcl 24-153
reswd_PAGE_COUNTER                     internal static fixed bin(17,0)          initial dcl 24-417
reswd_PERFORM                          internal static fixed bin(17,0)          initial dcl 24-38
reswd_PF                               internal static fixed bin(17,0)          initial dcl 24-418
reswd_PH                               internal static fixed bin(17,0)          initial dcl 24-419
reswd_PIC                              internal static fixed bin(17,0)          initial dcl 24-258
reswd_PICTURE                          internal static fixed bin(17,0)          initial dcl 24-258
reswd_PLUS                             internal static fixed bin(17,0)          initial dcl 24-420
reswd_POINTER                          internal static fixed bin(17,0)          initial dcl 24-154
reswd_POSITION                         internal static fixed bin(17,0)          initial dcl 24-421
reswd_POSITIVE                         internal static fixed bin(17,0)          initial dcl 24-155
reswd_PRINTING                         internal static fixed bin(17,0)          initial dcl 24-399
reswd_PROCEDURE                        internal static fixed bin(17,0)          initial dcl 24-156
reswd_PROCEDURES                       internal static fixed bin(17,0)          initial dcl 24-157
reswd_PROCEED                          internal static fixed bin(17,0)          initial dcl 24-158
reswd_PROCESS                          internal static fixed bin(17,0)          initial dcl 24-65
reswd_PROCESSING                       internal static fixed bin(17,0)          initial dcl 24-159
reswd_PROCESS_AREA                     internal static fixed bin(17,0)          initial dcl 24-320
reswd_PROGRAM                          internal static fixed bin(17,0)          initial dcl 24-160
reswd_PROGRAM_ID                       internal static fixed bin(17,0)          initial dcl 24-422
reswd_PURGE                            internal static fixed bin(17,0)          initial dcl 24-72
reswd_QUEUE                            internal static fixed bin(17,0)          initial dcl 24-261
reswd_QUOTES                           internal static fixed bin(17,0)          initial dcl 24-262
reswd_RANDOM                           internal static fixed bin(17,0)          initial dcl 24-161
reswd_RD                               internal static fixed bin(17,0)          initial dcl 24-423
reswd_READ                             internal static fixed bin(17,0)          initial dcl 24-39
reswd_RECEIVE                          internal static fixed bin(17,0)          initial dcl 24-41
reswd_RECORD                           internal static fixed bin(17,0)          initial dcl 24-162
reswd_RECORDING                        internal static fixed bin(17,0)          initial dcl 24-265
reswd_RECORDS                          internal static fixed bin(17,0)          initial dcl 24-215
reswd_REDEFINES                        internal static fixed bin(17,0)          initial dcl 24-266
reswd_REEL                             internal static fixed bin(17,0)          initial dcl 24-163
reswd_REFERENCES                       internal static fixed bin(17,0)          initial dcl 24-164
reswd_RELATIVE                         internal static fixed bin(17,0)          initial dcl 24-182
reswd_RELEASE                          internal static fixed bin(17,0)          initial dcl 24-42
reswd_REMAINDER                        internal static fixed bin(17,0)          initial dcl 24-165
reswd_REMOVAL                          internal static fixed bin(17,0)          initial dcl 24-291
reswd_RENAMES                          internal static fixed bin(17,0)          initial dcl 24-267
reswd_REPLACE                          internal static fixed bin(17,0)          initial dcl 24-336
reswd_REPLACING                        internal static fixed bin(17,0)          initial dcl 24-166
reswd_REPORT                           internal static fixed bin(17,0)          initial dcl 24-268
reswd_REPORTING                        internal static fixed bin(17,0)          initial dcl 24-167
reswd_REPORTS                          internal static fixed bin(17,0)          initial dcl 24-268
reswd_RERUN                            internal static fixed bin(17,0)          initial dcl 24-426
reswd_RESERVE                          internal static fixed bin(17,0)          initial dcl 24-427
reswd_RESET                            internal static fixed bin(17,0)          initial dcl 24-428
reswd_RETURN                           internal static fixed bin(17,0)          initial dcl 24-43
reswd_REVERSED                         internal static fixed bin(17,0)          initial dcl 24-168
reswd_REWIND                           internal static fixed bin(17,0)          initial dcl 24-169
reswd_REWRITE                          internal static fixed bin(17,0)          initial dcl 24-45
reswd_RF                               internal static fixed bin(17,0)          initial dcl 24-429
reswd_RH                               internal static fixed bin(17,0)          initial dcl 24-430
reswd_RIGHT                            internal static fixed bin(17,0)          initial dcl 24-270
reswd_ROUNDED                          internal static fixed bin(17,0)          initial dcl 24-170
reswd_RUN                              internal static fixed bin(17,0)          initial dcl 24-171
reswd_SA                               internal static fixed bin(17,0)          initial dcl 24-271
reswd_SAME                             internal static fixed bin(17,0)          initial dcl 24-431
reswd_SD                               internal static fixed bin(17,0)          initial dcl 24-272
reswd_SEARCH                           internal static fixed bin(17,0)          initial dcl 24-44
reswd_SECURITY                         internal static fixed bin(17,0)          initial dcl 24-432
reswd_SEGMENT                          internal static fixed bin(17,0)          initial dcl 24-173
reswd_SEGMENT_LIMIT                    internal static fixed bin(17,0)          initial dcl 24-433
reswd_SELECT                           internal static fixed bin(17,0)          initial dcl 24-434
reswd_SEND                             internal static fixed bin(17,0)          initial dcl 24-47
reswd_SENTENCE                         internal static fixed bin(17,0)          initial dcl 24-174
reswd_SEPARATE                         internal static fixed bin(17,0)          initial dcl 24-273
reswd_SEQUENCE                         internal static fixed bin(17,0)          initial dcl 24-425
reswd_SEQUENTIAL                       internal static fixed bin(17,0)          initial dcl 24-435
reswd_SET                              internal static fixed bin(17,0)          initial dcl 24-48
reswd_SIGN                             internal static fixed bin(17,0)          initial dcl 24-274
reswd_SIZE                             internal static fixed bin(17,0)          initial dcl 24-175
reswd_SORT                             internal static fixed bin(17,0)          initial dcl 24-66
reswd_SORT_MERGE                       internal static fixed bin(17,0)          initial dcl 24-436
reswd_SOURCE                           internal static fixed bin(17,0)          initial dcl 24-275
reswd_SOURCE_COMPUTER                  internal static fixed bin(17,0)          initial dcl 24-437
reswd_SPACES                           internal static fixed bin(17,0)          initial dcl 24-210
reswd_SPANNED                          internal static fixed bin(17,0)          initial dcl 24-439
reswd_SPECIAL_NAMES                    internal static fixed bin(17,0)          initial dcl 24-438
reswd_SSF                              internal static fixed bin(17,0)          initial dcl 24-89
reswd_STANDARD                         internal static fixed bin(17,0)          initial dcl 24-176
reswd_STANDARD_1                       internal static fixed bin(17,0)          initial dcl 24-347
reswd_STANDARD_2                       internal static fixed bin(17,0)          initial dcl 24-226
reswd_START                            internal static fixed bin(17,0)          initial dcl 24-70
reswd_STATUS                           internal static fixed bin(17,0)          initial dcl 24-276
reswd_STREAM                           internal static fixed bin(17,0)          initial dcl 24-328
reswd_STRING                           internal static fixed bin(17,0)          initial dcl 24-51
reswd_SUBSTITUTION                     internal static fixed bin(17,0)          initial dcl 24-338
reswd_SUBTRACT                         internal static fixed bin(17,0)          initial dcl 24-29
reswd_SUB_QUEUE_1                      internal static fixed bin(17,0)          initial dcl 24-277
reswd_SUB_QUEUE_2                      internal static fixed bin(17,0)          initial dcl 24-278
reswd_SUB_QUEUE_3                      internal static fixed bin(17,0)          initial dcl 24-279
reswd_SUM                              internal static fixed bin(17,0)          initial dcl 24-441
reswd_SUPPRESS                         internal static fixed bin(17,0)          initial dcl 24-71
reswd_SUSPEND                          internal static fixed bin(17,0)          initial dcl 24-52
reswd_SYMBOLIC                         internal static fixed bin(17,0)          initial dcl 24-280
reswd_SYNC                             internal static fixed bin(17,0)          initial dcl 24-281
reswd_SYNCHRONIZED                     internal static fixed bin(17,0)          initial dcl 24-281
reswd_TABLE                            internal static fixed bin(17,0)          initial dcl 24-283
reswd_TALLY                            internal static fixed bin(17,0)          initial dcl 24-212
reswd_TALLYING                         internal static fixed bin(17,0)          initial dcl 24-177
reswd_TAPE                             internal static fixed bin(17,0)          initial dcl 24-444
reswd_TERMINAL                         internal static fixed bin(17,0)          initial dcl 24-178
reswd_TERMINATE                        internal static fixed bin(17,0)          initial dcl 24-53
reswd_TEXT                             internal static fixed bin(17,0)          initial dcl 24-445
reswd_THAN                             internal static fixed bin(17,0)          initial dcl 24-179
reswd_THROUGH                          internal static fixed bin(17,0)          initial dcl 24-180
reswd_THRU                             internal static fixed bin(17,0)          initial dcl 24-180
reswd_TIME                             internal static fixed bin(17,0)          initial dcl 24-183
reswd_TIMES                            internal static fixed bin(17,0)          initial dcl 24-183
reswd_TOP                              internal static fixed bin(17,0)          initial dcl 24-208
reswd_TRAILING                         internal static fixed bin(17,0)          initial dcl 24-285
reswd_TRANSFORM                        internal static fixed bin(17,0)          initial dcl 24-68
reswd_TYPE                             internal static fixed bin(17,0)          initial dcl 24-446
reswd_UNEQUAL                          internal static fixed bin(17,0)          initial dcl 24-187
reswd_UNIT                             internal static fixed bin(17,0)          initial dcl 24-188
reswd_UNSTRING                         internal static fixed bin(17,0)          initial dcl 24-54
reswd_UNTIL                            internal static fixed bin(17,0)          initial dcl 24-189
reswd_UP                               internal static fixed bin(17,0)          initial dcl 24-190
reswd_UPON                             internal static fixed bin(17,0)          initial dcl 24-191
reswd_USAGE                            internal static fixed bin(17,0)          initial dcl 24-287
reswd_USE                              internal static fixed bin(17,0)          initial dcl 24-56
reswd_USING                            internal static fixed bin(17,0)          initial dcl 24-192
reswd_VALUE                            internal static fixed bin(17,0)          initial dcl 24-288
reswd_VALUES                           internal static fixed bin(17,0)          initial dcl 24-288
reswd_VARYING                          internal static fixed bin(17,0)          initial dcl 24-193
reswd_VLR                              internal static fixed bin(17,0)          initial dcl 24-218
reswd_WHEN                             internal static fixed bin(17,0)          initial dcl 24-194
reswd_WITH                             internal static fixed bin(17,0)          initial dcl 24-195
reswd_WORDS                            internal static fixed bin(17,0)          initial dcl 24-447
reswd_WORKING_STORAGE                  internal static fixed bin(17,0)          initial dcl 24-290
reswd_WRITE                            internal static fixed bin(17,0)          initial dcl 24-55
reswd_ZEROES                           internal static fixed bin(17,0)          initial dcl 24-196
reswd_ZEROS                            internal static fixed bin(17,0)          initial dcl 24-196
reswd_ptr                              defined         pointer                  dcl 9-79
rw_area                                automatic       structure                level 1 unaligned dcl 2075
same_sort_merge_proc                   defined         bit(1)                   dcl 9-215
save_red_nptr                          automatic       pointer                  dcl 2070
scratch_dir                            defined         char(168)                dcl 9-207
sect_eop_flag                          defined         fixed bin(17,0)          dcl 9-137
seg_init_flag                          defined         fixed bin(17,0)          dcl 9-133
seg_init_list_ptr                      defined         pointer                  dcl 9-41
size_COMHDR                            internal static fixed bin(17,0)          initial dcl 25-8
size_NAMESIZE                          internal static fixed bin(17,0)          initial dcl 25-9
size_TOKEN                             internal static fixed bin(17,0)          initial array dcl 25-11
stack_off                              defined         fixed bin(17,0)          dcl 9-121
statement_info_ptr                     defined         pointer                  dcl 9-77
sym_base_ptr                           defined         pointer                  dcl 9-17
sym_max                                defined         fixed bin(17,0)          dcl 9-105
sym_wd_off                             defined         fixed bin(17,0)          dcl 9-103
tag_table_max                          defined         fixed bin(17,0)          dcl 9-167
tag_table_ptr                          defined         pointer                  dcl 9-53
temp_token_area_ptr                    defined         pointer                  dcl 9-43
temp_token_max                         defined         fixed bin(17,0)          dcl 9-169
temp_token_ptr                         defined         pointer                  dcl 9-45
text_base_ptr                          defined         pointer                  dcl 9-9
text_wd_off                            defined         fixed bin(17,0)          dcl 9-91
token_block1_ptr                       defined         pointer                  dcl 9-47
token_block2_ptr                       defined         pointer                  dcl 9-49
value_cnt                              defined         fixed bin(17,0)          dcl 9-195
ws_charcnt                             defined         fixed bin(17,0)          dcl 9-187
ws_wdoff                               defined         fixed bin(17,0)          dcl 9-201
xref_bypass                            defined         bit(1)                   dcl 9-213
xref_chain_ptr                         defined         pointer                  dcl 9-75
xref_token_ptr                         defined         pointer                  dcl 9-73

NAMES DECLARED BY EXPLICIT CONTEXT.
GET                             003336 constant        entry                    internal dcl 1291 ref 154 197 200 949 1069
b_to_d                          001651 constant        entry                    external dcl 1808
bin_to_dec                      004636 constant        entry                    internal dcl 1822 ref 461 1510 1531 1695 1722 1816
cobol_ddalloc                   000164 constant        entry                    external dcl 38
gen_true_path                   004013 constant        entry                    internal dcl 1567 ref 1491
inherit_offset                  003302 constant        entry                    internal dcl 1261 ref 1019
issue_diag                      004761 constant        entry                    internal dcl 1889 ref 850 1002 1145 1198 1211 1214
issue_fd_diag                   004713 constant        entry                    internal dcl 1863 ref 750 758
issue_file_diag                 004736 constant        entry                    internal dcl 1876 ref 603 616 621 628 642 643 655
                                                                                  656 668 669 678 679 690 691 704 705 717 718 731
issue_name                      004467 constant        entry                    internal dcl 1750 ref 1546 1674 1712
link_odo                        003473 constant        label                    dcl 1372 ref 1359
mc_initval_seg2                 005005 constant        entry                    internal dcl 1905 ref 396 471
odo_item                        003606 constant        entry                    internal dcl 1482 ref 1357
put_rw_token                    002163 constant        entry                    internal dcl 767 ref 92 97 562 567 572 1497 1507
                                                                                  1521 1527 1542 1552 1558 1613 1646 1653 1660 1670
                                                                                  1680 1708 1718 1733 1743 1779
replace_odo_rec                 003524 constant        label                    dcl 1383 ref 1370
set_file_table                  001673 constant        entry                    internal dcl 593 ref 545
set_size                        002204 constant        entry                    internal dcl 776 ref 167
start_gen_true_path             004015 constant        label                    dcl 1579
start_test_occurs               003370 constant        label                    dcl 1318 ref 1330
test_item                       003403 constant        label                    dcl 1332 ref 1318 1322
test_occurs                     003367 constant        entry                    internal dcl 1309 ref 274
update_occ_ext                  003543 constant        label                    dcl 1387 ref 1342 1354
variable_size                   003564 constant        entry                    internal dcl 1400 ref 276

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      6110        6430    5547        6120
Length      7516    5547       320        1052     340         216

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cobol_ddalloc                      2132 external procedure  is an external procedure.  
set_file_table                          internal procedure  shares stack frame of external procedure cobol_ddalloc.  
put_rw_token                            internal procedure  shares stack frame of external procedure cobol_ddalloc.  
set_size                                internal procedure  shares stack frame of external procedure cobol_ddalloc.  
inherit_offset                          internal procedure  shares stack frame of external procedure cobol_ddalloc.  
GET                                     internal procedure  shares stack frame of external procedure cobol_ddalloc.  
test_occurs                             internal procedure  shares stack frame of external procedure cobol_ddalloc.  
variable_size                           internal procedure  shares stack frame of external procedure cobol_ddalloc.  
odo_item                                internal procedure  shares stack frame of external procedure cobol_ddalloc.  
gen_true_path                           internal procedure  shares stack frame of external procedure cobol_ddalloc.  
issue_name                              internal procedure  shares stack frame of external procedure cobol_ddalloc.  
bin_to_dec                              internal procedure  shares stack frame of external procedure cobol_ddalloc.  
issue_fd_diag                           internal procedure  shares stack frame of external procedure cobol_ddalloc.  
issue_file_diag                         internal procedure  shares stack frame of external procedure cobol_ddalloc.  
issue_diag                              internal procedure  shares stack frame of external procedure cobol_ddalloc.  
mc_initval_seg2                         internal procedure  shares stack frame of external procedure cobol_ddalloc.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 procdef                     cobol_ddalloc
000026 reswd                       cobol_ddalloc
000035 diag                        cobol_ddalloc
000045 usrwd                       cobol_ddalloc
000063 sizertn_numlit              cobol_ddalloc
000076 icdhdr_type9                cobol_ddalloc
000154 ocdhdr_type9                cobol_ddalloc
000220 ddseg                       cobol_ddalloc

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cobol_ddalloc            000100 sv_bit                      cobol_ddalloc
                         000102 temp_char5                  cobol_ddalloc
                         000104 temp_size                   cobol_ddalloc
                         000105 procname_sw                 cobol_ddalloc
                         000106 temp                        cobol_ddalloc
                         000107 eof                         cobol_ddalloc
                         000110 temp_len                    cobol_ddalloc
                         000111 temp_mod                    cobol_ddalloc
                         000112 redef_object_offset         cobol_ddalloc
                         000113 curr_char_off               cobol_ddalloc
                         000114 curr_wd_off                 cobol_ddalloc
                         000115 curr_char_pos               cobol_ddalloc
                         000116 cd_offsets                  cobol_ddalloc
                         000520 dn_ptr                      cobol_ddalloc
                         000522 valueptr                    cobol_ddalloc
                         000524 valhd_ptr                   cobol_ddalloc
                         000526 valhdbit                    cobol_ddalloc
                         000527 valhd                       cobol_ddalloc
                         000530 ft_ptr                      cobol_ddalloc
                         000532 odo_rec_ptr                 cobol_ddalloc
                         000534 depend_ptr                  cobol_ddalloc
                         000536 qual_ptr                    cobol_ddalloc
                         000540 last_perform_key            cobol_ddalloc
                         000542 work_ptr                    cobol_ddalloc
                         000544 name_ptr                    cobol_ddalloc
                         000546 index_cnt                   cobol_ddalloc
                         000550 index_ptr                   cobol_ddalloc
                         001370 same_rec_area_info          cobol_ddalloc
                         001370 occurs_info                 cobol_ddalloc
                         001404 work_area                   cobol_ddalloc
                         001436 odo_key                     cobol_ddalloc
                         001440 odo_do_rec                  cobol_ddalloc
                         001442 common_recsize              cobol_ddalloc
                         001444 common_key                  cobol_ddalloc
                         001446 first_name_key              cobol_ddalloc
                         001450 file_key                    cobol_ddalloc
                         001452 record_offset               cobol_ddalloc
                         001453 temp_slack                  cobol_ddalloc
                         001454 i                           cobol_ddalloc
                         001455 occurs_level                cobol_ddalloc
                         001456 odo_proc_num                cobol_ddalloc
                         001457 odo_recsize                 cobol_ddalloc
                         001460 current_fno                 cobol_ddalloc
                         001461 st                          cobol_ddalloc
                         001462 found                       cobol_ddalloc
                         001463 hisi_slack                  cobol_ddalloc
                         001464 m                           cobol_ddalloc
                         001466 stk                         cobol_ddalloc
                         003272 STK                         cobol_ddalloc
                         003275 numlit                      cobol_ddalloc
                         003316 nonnumlit                   cobol_ddalloc
                         003424 perform_ptr                 cobol_ddalloc
                         003426 occurs_ptr                  cobol_ddalloc
                         003430 ind_ptr                     cobol_ddalloc
                         003432 cdtoken_ptr                 cobol_ddalloc
                         003434 eos_ptr                     cobol_ddalloc
                         003466 rec_off                     set_size
                         003467 next_rec_off                set_size
                         003470 cur_lev                     set_size
                         003471 occ_lev                     set_size
                         003472 sign_lev                    set_size
                         003473 n                           set_size
                         003474 fill                        set_size
                         003475 code_set_sw                 set_size
                         003476 comp7_sync                  set_size
                         003477 comp8_sync                  set_size
                         003500 N                           set_size
                         003502 R                           set_size
                         003512 off                         inherit_offset
                         003513 stk_off                     inherit_offset
                         003514 p                           inherit_offset
                         003572 bd_work1                    bin_to_dec
                         003573 bd_work2                    bin_to_dec
                         003574 bd_work3                    bin_to_dec
                         003576 loc                         bin_to_dec
                         003630 keyindex                    mc_initval_seg2
                         003637 ieos                        mc_initval_seg2
                         003640 eos_token                   mc_initval_seg2

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_char_temp     cat_realloc_chars   call_ext_out_desc   call_ext_out        return_mac          alloc_auto_adj
mdfx1               shorten_stack       ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cobol_IVAL                    cobol_c_list                  cobol_make_fsb_link_          cobol_ntio$dget
cobol_ntio$sget               cobol_read_ft_                cobol_swf_put                 cobol_vdwf_dget
cobol_vdwf_dput               cobol_vdwf_sput               unique_bits_                  unique_chars_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
cobol_$cd_cnt                 cobol_$cobol_data_wd_off      cobol_$coms_charcnt           cobol_$coms_wdoff
cobol_$con_wd_off             cobol_$cons_charcnt           cobol_$data_init_flag         cobol_$fs_charcnt
cobol_$fs_wdoff               cobol_$initval_file_ptr       cobol_$ls_charcnt             cobol_$value_cnt
cobol_$ws_charcnt             cobol_$ws_wdoff               cobol_ext_$cobol_cmfp         cobol_ext_$cobol_com_ptr
cobol_ext_$cobol_m2fp




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
   2088 000151        38 000163        42 000172        44 000175        45 000177        46 000201        48 000204
     49 000210        50 000212        53 000213        55 000217        58 000227        59 000234        60 000235
     62 000236        64 000240        65 000241        66 000243        67 000252        68 000253        69 000255
     70 000257        71 000261        73 000263        76 000270        78 000272        81 000310        84 000314
     85 000321        87 000324        89 000342        90 000345        92 000347        94 000350        95 000353
     97 000355        99 000356       100 000363       104 000365       105 000366       107 000367       109 000401
    111 000412       114 000416       117 000421       119 000431       122 000434       125 000507       126 000511
    128 000514       131 000523       135 000525       136 000526       138 000536       140 000543       142 000553
    144 000556       147 000564       149 000566       151 000572       154 000603       156 000604       158 000605
    161 000607       164 000612       167 000616       169 000617       172 000621       174 000624       177 000627
    184 000637       188 000645       191 000652       196 000656       197 000657       199 000660       200 000661
    202 000662       206 000663       209 000665       210 000666       212 000667       213 000700       215 000711
    224 000722       226 000724       229 000730       232 000733       235 000737       236 000740       238 000741
    241 000744       243 000752       245 000754       248 000757       250 000761       254 000766       256 000767
    259 000772       260 000774       263 000777       267 001000       273 001005       274 001006       276 001007
    282 001014       287 001020       290 001027       292 001032       294 001035       296 001040       299 001043
    304 001044       307 001051       311 001055       313 001061       318 001063       320 001066       322 001067
    325 001072       328 001077       332 001101       336 001107       339 001112       342 001115       345 001116
    348 001126       351 001130       353 001136       355 001144       357 001152       359 001154       363 001161
    367 001167       370 001171       373 001173       381 001177       383 001200       388 001207       389 001211
    391 001213       394 001215       396 001217       405 001220       408 001222       410 001227       413 001234
    415 001243       416 001246       417 001250       418 001253       419 001257       420 001261       422 001262
    424 001264       427 001265       428 001266       431 001270       432 001271       434 001274       436 001275
    439 001277       440 001300       443 001305       445 001314       447 001316       450 001322       451 001324
    452 001326       454 001330       457 001331       458 001333       459 001335       461 001337       463 001351
    464 001354       465 001362       469 001367       471 001372       473 001373       476 001401       477 001403
    478 001406       480 001412       483 001415       484 001421       488 001423       489 001425       490 001426
    492 001427       494 001430       497 001434       499 001435       502 001440       504 001451       505 001454
    507 001461       509 001467       511 001471       514 001473       516 001474       519 001501       520 001504
    521 001506       523 001510       528 001512       529 001515       531 001517       534 001520       535 001522
    536 001524       537 001526       541 001530       545 001535       551 001536       554 001547       556 001550
    559 001552       560 001555       562 001557       564 001560       565 001563       567 001565       569 001566
    570 001571       572 001573       576 001574       577 001576       579 001606       581 001612       583 001616
    587 001622       589 001644      1808 001645      1816 001657      1818 001672       593 001673       596 001674
    600 001711       601 001713       603 001715       609 001723       612 001726       616 001733       618 001735
    621 001741       623 001743       625 001746       628 001747       630 001751       636 001754       639 001757
    642 001762       643 001764       645 001766       647 001771       650 001772       652 001775       655 001777
    656 002001       658 002003       661 002006       662 002007       665 002012       668 002014       669 002016
    671 002020       674 002023       675 002024       678 002026       679 002030       681 002032       686 002035
    690 002043       691 002045       693 002047       697 002052       700 002055       704 002063       705 002065
    707 002067       710 002072       711 002073       714 002076       717 002101       718 002103       720 002105
    728 002112       731 002113       736 002117       740 002134       741 002135       745 002137       747 002140
    750 002145       753 002152       755 002153       758 002155       763 002162       767 002163       770 002164
    772 002203       776 002204       793 002205       794 002207       797 002213       799 002214       802 002222
    803 002224       804 002225       805 002226       806 002227       809 002230       812 002233       821 002236
    824 002244       827 002245       828 002251       829 002252       830 002254       831 002257       833 002262
    837 002271       838 002273       840 002275       843 002276       844 002300       846 002302       850 002303
    854 002320       858 002331       860 002337       863 002343       864 002345       866 002347       867 002350
    870 002353       872 002355       875 002362       876 002364       878 002366       881 002367       882 002371
    886 002373       888 002376       891 002401       892 002402       896 002406       898 002407       901 002412
    904 002415       905 002417       906 002421       908 002423       911 002424       914 002425       915 002427
    918 002431       919 002432       922 002435       923 002437       925 002441       928 002442       929 002444
    933 002446       936 002451       938 002453       940 002455       945 002457       948 002471       949 002472
    951 002473       957 002474       959 002501       963 002505       964 002507       966 002511       969 002512
    978 002514       980 002517       984 002520       986 002523       988 002524       990 002532       994 002537
    996 002544       998 002552      1002 002554      1007 002556      1009 002560      1012 002564      1014 002571
   1016 002573      1019 002576      1025 002600      1028 002601      1029 002606      1034 002611      1036 002624
   1041 002627      1043 002634      1046 002637      1048 002647      1051 002654      1052 002655      1054 002661
   1056 002670      1061 002674      1063 002706      1065 002707      1067 002710      1069 002714      1071 002715
   1073 002721      1075 002731      1078 002733      1082 002744      1083 002746      1088 002747      1092 002750
   1095 002752      1096 002760      1099 002761      1103 002762      1104 002772      1111 002774      1114 003000
   1115 003003      1117 003006      1120 003011      1125 003016      1127 003022      1129 003023      1131 003025
   1136 003033      1138 003037      1142 003040      1143 003043      1145 003044      1147 003054      1148 003055
   1150 003056      1151 003062      1153 003070      1155 003075      1159 003105      1163 003113      1166 003116
   1169 003124      1171 003126      1173 003130      1174 003131      1176 003137      1181 003143      1183 003153
   1186 003160      1187 003162      1192 003164      1198 003200      1200 003202      1207 003211      1211 003212
   1214 003225      1217 003243      1226 003254      1230 003255      1232 003257      1233 003261      1235 003263
   1237 003274      1242 003275      1251 003277      1253 003300      1255 003301      1261 003302      1268 003303
   1269 003306      1273 003310      1275 003315      1277 003320      1278 003322      1279 003325      1280 003326
   1282 003327      1284 003331      1287 003334      1289 003335      1291 003336      1294 003337      1296 003350
   1299 003363      1300 003365      1303 003366      1309 003367      1318 003370      1322 003372      1328 003400
   1330 003402      1332 003403      1338 003410      1342 003415      1347 003420      1348 003421      1349 003426
   1354 003432      1357 003435      1359 003436      1362 003444      1363 003447      1365 003452      1370 003472
   1372 003473      1377 003502      1378 003504      1383 003524      1387 003543      1389 003553      1390 003561
   1395 003563      1400 003564      1416 003565      1419 003567      1420 003573      1421 003575      1425 003602
   1475 003605      1482 003606      1491 003607      1494 003613      1495 003616      1497 003620      1501 003621
   1504 003640      1505 003643      1507 003645      1510 003646      1512 003667      1513 003673      1515 003675
   1518 003713      1519 003716      1521 003720      1524 003721      1525 003724      1527 003725      1531 003726
   1533 003744      1534 003750      1536 003752      1539 003770      1540 003773      1542 003775      1546 003776
   1549 003777      1550 004002      1552 004003      1555 004004      1556 004007      1558 004011      1561 004012
   1567 004013      1579 004015      1585 004020      1588 004037      1604 004061      1606 004064      1610 004102
   1611 004105      1613 004107      1616 004110      1617 004112      1618 004115      1619 004116      1620 004121
   1621 004124      1622 004125      1624 004126      1626 004144      1630 004160      1632 004176      1634 004202
   1638 004221      1640 004224      1643 004232      1644 004234      1646 004236      1649 004237      1650 004242
   1651 004244      1653 004246      1655 004247      1657 004251      1658 004253      1660 004255      1664 004256
   1667 004275      1668 004300      1670 004302      1674 004303      1677 004304      1678 004307      1680 004311
   1695 004312      1697 004330      1698 004334      1702 004336      1705 004354      1706 004357      1708 004361
   1712 004362      1715 004363      1716 004366      1718 004370      1722 004371      1724 004407      1725 004413
   1727 004415      1730 004433      1731 004436      1733 004440      1737 004441      1740 004460      1741 004463
   1743 004465      1746 004466      1750 004467      1758 004470      1759 004475      1760 004477      1762 004503
   1766 004521      1770 004530      1773 004547      1774 004552      1779 004554      1782 004555      1783 004562
   1784 004564      1787 004570      1792 004606      1796 004615      1799 004634      1801 004635      1822 004636
   1834 004640      1836 004642      1839 004644      1840 004646      1841 004652      1845 004653      1847 004654
   1849 004656      1850 004662      1851 004664      1852 004670      1853 004673      1855 004674      1856 004700
   1858 004712      1863 004713      1868 004715      1869 004721      1870 004723      1872 004725      1874 004735
   1876 004736      1881 004740      1882 004744      1883 004746      1885 004750      1887 004760      1889 004761
   1895 004763      1896 004770      1897 004772      1899 004774      1901 005004      1905 005005      1914 005006
   1915 005010      1916 005012      1917 005014      1918 005015      1919 005017      1920 005021      1922 005023
   1923 005031      1924 005033      1925 005035      1929 005037      1933 005055      1936 005061      1938 005065
   1939 005067      1940 005071      1941 005075      1942 005102      1943 005105      1944 005110      1945 005112
   1948 005114      1951 005133      1953 005134      1956 005141      1957 005145      1958 005147      1961 005151
   1964 005167      1966 005171      1969 005172      1970 005176      1972 005200      1974 005203      1976 005213
   1979 005214      1985 005233      1986 005237      1988 005241      1991 005246      1992 005252      1993 005256
   1994 005261      1995 005265      1998 005267      2001 005304      2002 005312      2004 005316      2005 005317
   2009 005334      2011 005342      2014 005347      2018 005350      2020 005352      2021 005354      2022 005356
   2023 005360      2024 005362      2027 005364      2033 005401


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
