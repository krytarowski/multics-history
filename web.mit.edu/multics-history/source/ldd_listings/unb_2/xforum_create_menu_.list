	COMPILATION LISTING OF SEGMENT xforum_create_menu_
	Compiled by: Multics PL/I Compiler, Release 28e, of February 14, 1985
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 04/24/86  1530.3 mst Thu
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*        *                                                         *
        5*        * Copyright (c) 1972 by Massachusetts Institute of        *
        6*        * Technology and Honeywell Information Systems, Inc.      *
        7*        *                                                         *
        8*        *********************************************************** */
        9 
       10 
       11 
       12 /****^  HISTORY COMMENTS:
       13*  1) change(85-05-21,Davids), approve(86-02-04,MCR7350),
       14*     audit(86-04-24,Gilcrease), install(86-04-24,MR12.0-1048):
       15*     Changed the values of max_width and max_height in the
       16*     actual_menu_format structure to reflect the actual width of the menu
       17*     window and a height equal to the sum of the current menu and bottom
       18*     window heights instead of the constants 80 and XFORUM_WINDOW_HEIGHT
       19*     which was decleared in xforum_menu_info.incl.pl1 and had a value of 11.
       20*     removed the reference to xforum_menu_info.incl.pl1 and updated the
       21*     the header comments.
       22*                                                   END HISTORY COMMENTS */
       23 
       24 
       25 xforum_create_menu_: proc (choices, requirements_ptr, menu, code);
       26 
       27 /*
       28*   BEGIN DESCRIPTION
       29*
       30*   function:
       31*      This procedure creates the "static" menus displayed in the menu window. 
       32*      It takes care of the details of header and trailer construction and the
       33*      info structures needed by the menu_$create_menu procedure, both
       34*      simplifying the interface for the callers and enforcing some consistency
       35*      among menus.
       36*
       37*   description of entry points:
       38*      xforum_create_menu_:
       39*         input:   (*) char (*) varying  text describing the menu options
       40*                  ptr                   ptr to the menu_requirements structure
       41*                                        note that contents of structure is output
       42*         output:  ptr                   pointer to the menu structure
       43*                  fixed bin (35)        standard error code
       44*         The menu created has no header line and a single trailing line made up
       45*         of dashes. It has 2 columns. The menu is created in the system free
       46*         area and should be freed when no longer used. 
       47*
       48*   description of internal procedures:
       49*
       50*   known bugs:
       51*
       52*   notes:
       53*
       54*   history:
       55*      83-??-?? Deryk Barker: Written.
       56*
       57*      84-07-06 Davids: Changed header from a parameter to an automatic
       58*      variable. Set its value to "" so that the menu software will generate
       59*      a menu with no header. The menu header has been moved to the status
       60*      window so that it will still appear if the process has local menu
       61*      display.
       62*
       63*      84-11-06 Davids: Redid declaration section.
       64*
       65*   END DESCRIPTION
       66**/
       67 
       68 /* PARAMETERS */
       69 
       70 	dcl     choices		 (*) char (*) varying; /* (input) text describing the menu options */
       71 	dcl     requirements_ptr	 ptr;		/* (input) ptr to the menu_requirements structure */
       72 	dcl     menu		 ptr;		/* (output) pointer to the menu structure */
       73 	dcl     code		 fixed bin (35);	/* (output) standard error code */
       74 
       75 /* EXTERNAL STATIC */
       76 
       77 /* ENTRIES */
       78 
       79 	dcl     get_system_free_area_	 entry () returns (ptr);
       80 
       81 /* CONDITIONS */
       82 
       83 /* INTERNAL AUTOMATIC */
       84 
       85 	dcl     headers		 (1) char (1) varying; /* constant info to appear on top of the menu */
       86 	dcl     trailer		 (1) char (1) varying; /* constant info to appear on the bottom of the menu */
       87 	dcl     1 actual_menu_format	 aligned like menu_format; /* local copy of the menu_format structure */
       88 
       89 /* INTERNAL STATIC */
       90 
       91 /* CONSTANTS */
       92 
       93 	dcl     (
       94 	        PAD_CHAR		 init ("-") char (1), /* used to center header and trailer info in window */
       95 	        OPTION_CODES	 (35) init (	/* keys for selecting menu options */
       96 				 "1", "2", "3", "4", "5", "6", "7", "8", "9",
       97 				 "a", "b", "c", "d", "e", "f", "g", "h", "i", "j",
       98 				 "k", "l", "m", "n", "o", "p", "q", "r", "s", "t",
       99 				 "u", "v", "w", "x", "y", "z") char (1) unal
      100 	        )			 internal static options (constant);
      101 
      102 /* BUILTINS */
      103 
      104 	dcl     addr		 builtin;
      105 
      106 /* BASED */
      107 
      108 /* INCLUDE FILES */
      109 
  1     1 /* BEGIN INCLUDE FILE menu_dcls.incl.pl1
  1     2*   declarations for the menu_ subroutines MTB 493
  1     3*   James R. Davis 26 Jan 81  to 20 Februrary 81
  1     4**/
  1     5 
  1     6 /* format: off */
  1     7 
  1     8 dcl menu_$create      entry (
  1     9 	(*) char (*) varying,			/* input: choices */
  1    10 	(*) char (*) varying,			/* input: headers */
  1    11 	(*) char (*) varying,			/* input: trailers */
  1    12 	pointer,					/* input: to format info */
  1    13 	(*) char (1) unal,				/* input: keys to use */
  1    14 	pointer,					/* input: to area */
  1    15 	pointer,					/* input: to needs str. */
  1    16 	pointer,					/* to menu: output */
  1    17 	fixed bin (35)				/* code */
  1    18 			      );
  1    19 
  1    20 dcl menu_$display entry (
  1    21 	pointer,					/* window */
  1    22 	pointer,					/* menu */
  1    23 	fixed bin (35)				/* code */
  1    24 			      );
  1    25 
  1    26 dcl menu_$get_choice entry (
  1    27 	pointer,					/* window */
  1    28 	pointer,					/* menu */
  1    29 	pointer,					/* to function key info */
  1    30 	bit (1) aligned,				/* function key hi: output */
  1    31 	fixed bin,				/* output: selection number */
  1    32 	fixed bin (35)				/* output: code */
  1    33 			      );
  1    34 
  1    35 dcl menu_$describe entry (
  1    36           pointer,					/* menu */
  1    37 	pointer,					/* needs */
  1    38 	fixed bin (35)				/* code */
  1    39 	                          );
  1    40 
  1    41 dcl menu_$destroy entry (
  1    42           pointer,					/* menu */
  1    43 	fixed bin (35)				/* code */
  1    44                                     );
  1    45 
  1    46 dcl menu_$store entry (
  1    47 	character (*),
  1    48 	character (*),
  1    49 	character (*),
  1    50 	bit (1) aligned,
  1    51 	pointer,
  1    52 	fixed bin (35));
  1    53 
  1    54 dcl menu_$retrieve entry (
  1    55 	character (*),
  1    56 	character (*),
  1    57 	character (*),
  1    58 	pointer,
  1    59 	pointer,
  1    60 	fixed bin (35));
  1    61 dcl  menu_$delete entry (
  1    62 	character (*),
  1    63 	character (*),
  1    64 	character (*),
  1    65 	fixed binary (35));
  1    66 
  1    67 dcl  menu_$list entry (
  1    68 	character (*),
  1    69 	character (*),
  1    70 	character (*),
  1    71 	pointer,
  1    72 	fixed bin,
  1    73 	pointer,
  1    74 	fixed bin (35));
  1    75 
  1    76      dcl	   1 menu_format	      aligned based (menu_format_ptr),
  1    77 	     2 version	      fixed bin,
  1    78 	     2 constraints,
  1    79 	       3 max_width	      fixed bin,
  1    80 	       3 max_height	      fixed bin,
  1    81 	     2 n_columns	      fixed bin,
  1    82 	     2 flags,
  1    83 	       3 center_headers   bit (1) unal,
  1    84 	       3 center_trailers  bit (1) unal,
  1    85 	       3 pad	      bit (34) unal,
  1    86 	     2 pad_char	      char (1);
  1    87 
  1    88      dcl	   1 menu_requirements    aligned based (menu_requirements_ptr),
  1    89 	     2 version	      fixed bin,
  1    90 	     2 lines_needed	      fixed bin,
  1    91 	     2 width_needed	      fixed bin,
  1    92 	     2 n_options	      fixed bin;
  1    93 
  1    94      dcl	   menu_format_ptr	      pointer;
  1    95      dcl	   menu_requirements_ptr  pointer;
  1    96 
  1    97      dcl	   (menu_format_version_1, menu_requirements_version_1)
  1    98 			      fixed bin internal static init (1) options (constant);
  1    99 
  1   100      dcl	   MENU_OPTION_KEYS	      (35) char (1) unal internal static
  1   101 			      options (constant) init
  1   102 	("1", "2", "3", "4", "5", "6", "7", "8", "9",
  1   103 	"A", "B", "C", "D", "E", "F", "G", "H", "I",
  1   104 	"J", "K", "L", "M", "N", "O", "P", "Q", "R",
  1   105 	"S", "T", "U", "V", "W", "X", "Y", "Z");
  1   106 
  1   107 /* END INCLUDE FILE ... menu_dcls.incl.pl1 */
      110 
      111 
  2     1 /*  START OF:	xforum_windows.incl.pl1		  *  *  *  *  * */
  2     2 
  2     3 /* structures for windows used by xforum - Deryk Barker January 1984 */
  2     4 
  2     5 dcl      1 xforum_windows aligned external static,
  2     6 	 2 (status, menu, bottom, orig_user_io, help_line) aligned like xforum_window_info;
  2     7 	 
  2     8 dcl      1 xforum_window_info,
  2     9 	 2 iocb      ptr,
  2    10 	 2 position  aligned like window_position_info;
  2    11 	 
  3     1 /* BEGIN INCLUDE FILE ... window_control_info.incl.pl1 JRD  */
  3     2 /* format: style3 */
  3     3 
  3     4 /* Modified 26 January 1982 by William York to add the set_more_handler
  3     5*   and reset_more_handler control orders. */
  3     6 /* Modified October 1982 by WMY to add set and get_token_characters,
  3     7*   set and get_more_prompt. */
  3     8 /* Modified February 1983 by WMY to add the line_editor_key_binding_info
  3     9*   structure. */
  3    10 /* Modified 30 September 1983 by Jon A. Rochlis to add the origin.column for
  3    11*   partial screen width windows. */
  3    12 /* Modified 9 October 1983 by JR to add version 1 window_edit_line_info. 
  3    13*   This should be removed when window_info.incl.pl1 is created. */
  3    14 /* Modified 29 February 1984 by Barmar to add version 1 
  3    15*   get_editor_key_bindings_info. */
  3    16 /* Modified 1 March 1984 by Barmar to add version 1 
  3    17*   set_editor_key_bindings_info. */
  3    18 /* Modified 2 March 1984 by Barmar to upgrade to version 3
  3    19*   line_editor_key_bindings_info, which includes the name, description, and
  3    20*   info path */
  3    21 
  3    22 /* structure for the set_window_info and get_window_info
  3    23*   control orders. */
  3    24 
  3    25 dcl	1 window_position_info
  3    26 			based (window_position_info_ptr),
  3    27 	  2 version	fixed bin,
  3    28 	  2 origin,
  3    29 	    3 column	fixed bin,
  3    30 	    3 line	fixed bin,
  3    31 	  2 extent,
  3    32 	    3 width	fixed bin,
  3    33 	    3 height	fixed bin;
  3    34 
  3    35 dcl	(window_position_info_version, window_position_info_version_1)
  3    36 			fixed bin internal static init (1) options (constant);
  3    37 dcl	window_position_info_ptr
  3    38 			pointer;
  3    39 
  3    40 /* structure for the set_window_status and get_window_status
  3    41*   control orders */
  3    42 
  3    43 declare	window_status_info_ptr
  3    44 			pointer;
  3    45 declare	1 window_status_info
  3    46 			aligned based (window_status_info_ptr),
  3    47 	  2 version	fixed bin,
  3    48 	  2 status_string	bit (36) aligned;		/* string (window_status) */
  3    49 /* see window_status.incl.pl1 for the contents of this string */
  3    50 
  3    51 
  3    52 declare	(window_status_version, window_status_version_1)
  3    53 			fixed bin internal static init (1) options (constant);
  3    54 
  3    55 /* info structure for the set_more_responses and get_more_responses control 
  3    56*   orders */
  3    57 
  3    58 
  3    59 dcl	1 more_responses_info
  3    60 			aligned based (more_responses_info_ptr),
  3    61 	  2 version	fixed bin,
  3    62 	  2 n_yeses	fixed bin, /* how many valid characters in the strings below */
  3    63 	  2 n_noes	fixed bin,
  3    64 	  2 yeses		char (32) unaligned,
  3    65 	  2 noes		char (32) unaligned;
  3    66 
  3    67 dcl	(more_responses_info_version_1, more_responses_version)
  3    68 			fixed bin internal static init (1) options (constant);
  3    69 dcl	more_responses_info_ptr
  3    70 			pointer;
  3    71 
  3    72 /* structure for the set_break_table and get_break_table
  3    73*   control orders */
  3    74 
  3    75 declare	break_table_ptr	pointer;
  3    76 declare	1 break_table_info	aligned based (break_table_ptr),
  3    77 	  2 version	fixed bin,
  3    78 	  2 breaks	(0:127) bit (1) unaligned;
  3    79 
  3    80 declare	(break_table_info_version, break_table_info_version_1)
  3    81 			fixed bin init (1) internal static options (constant);
  3    82 
  3    83 declare	1 more_handler_info aligned based (more_handler_info_ptr),
  3    84 	  2 version	fixed bin,
  3    85 	  2 flags		unaligned,
  3    86 	    3 old_handler_valid
  3    87 			bit(1),
  3    88 	    3 pad		bit(35),
  3    89 	  2 more_handler	entry (pointer, bit(1) aligned),
  3    90 	  2 old_more_handler entry (pointer, bit(1) aligned);
  3    91 
  3    92 declare	more_handler_info_ptr pointer;
  3    93 
  3    94 declare	(more_handler_info_version, more_handler_info_version_3)
  3    95 			fixed bin internal static options (constant) init (3);
  3    96 			
  3    97 declare   1 token_characters_info aligned based (token_characters_info_ptr),
  3    98 	  2 version	char(8),
  3    99 	  2 token_character_count
  3   100 			fixed bin,
  3   101 	  2 token_characters
  3   102 			char (128) unaligned;
  3   103 
  3   104 declare   token_characters_info_ptr pointer;
  3   105 
  3   106 declare   token_characters_info_version_1 char(8) internal static options (constant) init ("wtci0001");
  3   107 
  3   108 declare   1 more_prompt_info	aligned based (more_prompt_info_ptr),
  3   109 	  2 version	char(8),
  3   110 	  2 more_prompt	char(80);
  3   111 
  3   112 declare   more_prompt_info_ptr pointer;
  3   113 
  3   114 declare   more_prompt_info_version_1 char(8) static options (constant) init ("wsmp0001");
  3   115 
  3   116 /* Line editor stuff ... */
  3   117 
  3   118 dcl  line_editor_key_binding_info_ptr
  3   119 			pointer;
  3   120 
  3   121 dcl  line_editor_binding_count
  3   122 			fixed bin;
  3   123 dcl  line_editor_longest_sequence
  3   124 			fixed bin;
  3   125 /* For each binding, action defines what to do for that sequence. Constants
  3   126*   are defined in window_editor_values.incl.pl1. Only if action is set to
  3   127*   EXTERNAL_ROUTINE does the editor_routine entry variable get examined. */
  3   128 
  3   129 dcl  1 line_editor_key_binding_info
  3   130 			aligned based (line_editor_key_binding_info_ptr),
  3   131        2 version		char(8),
  3   132        2 binding_count	fixed bin,
  3   133        2 longest_sequence	fixed bin,
  3   134        2 bindings		(line_editor_binding_count refer
  3   135 			(line_editor_key_binding_info.binding_count)),
  3   136          3 sequence		char(line_editor_longest_sequence refer
  3   137 			(line_editor_key_binding_info.longest_sequence)) varying,
  3   138          3 action		fixed bin,
  3   139          3 numarg_action      fixed binary,
  3   140          3 editor_routine	entry (pointer, fixed bin(35)),
  3   141          3 name		char (64) varying unaligned,
  3   142          3 description	char (256) varying unaligned,
  3   143          3 info_path	unaligned,
  3   144 	 4 info_dir	char (168),
  3   145 	 4 info_entry	char (32);
  3   146 	
  3   147 
  3   148 dcl  line_editor_key_binding_info_version_3
  3   149 			char(8) static options (constant) init ("lekbi003");
  3   150 
  3   151 dcl 1 get_editor_key_bindings_info	aligned based (get_editor_key_bindings_info_ptr),
  3   152       2 version			char (8),
  3   153       2 flags,
  3   154         3 entire_state		bit (1) unaligned,
  3   155         3 mbz			bit (35) unaligned,
  3   156       2 key_binding_info_ptr		ptr,
  3   157       2 entire_state_ptr		ptr;
  3   158 
  3   159 dcl get_editor_key_bindings_info_ptr	ptr;
  3   160 dcl get_editor_key_bindings_info_version_1 char (8) int static options (constant) init ("gekbi_01");
  3   161 
  3   162 dcl 1 set_editor_key_bindings_info	aligned
  3   163 				based (set_editor_key_bindings_info_ptr),
  3   164       2 version			char (8),
  3   165       2 flags,
  3   166         3 replace			bit (1) unaligned,
  3   167         3 update			bit (1) unaligned,
  3   168         3 mbz			bit (34) unaligned,
  3   169       2 key_binding_info_ptr		ptr;
  3   170 
  3   171 dcl set_editor_key_bindings_info_ptr	ptr;
  3   172 dcl set_editor_key_bindings_info_version_1 char (8) int static options (constant) init ("sekbi_01");
  3   173 
  3   174 /* This should be moved to window_info.incl.pl1 when that include file is
  3   175*   created.  JR 2/1/84 */
  3   176 
  3   177 dcl	1 window_edit_line_info
  3   178 			based (window_edit_line_info_ptr),
  3   179 	  2 version	char (8),
  3   180 	  2 line_ptr	ptr,
  3   181 	  2 line_length	fixed bin (21);		/* later we will hack initial cursor position, key bindings, etc. */
  3   182 
  3   183 dcl	window_edit_line_info_version_1
  3   184 			char (8) static options (constant) init ("wedl0001");
  3   185 
  3   186 dcl	window_edit_line_info_ptr
  3   187 			ptr;
  3   188 
  3   189 /* END INCLUDE FILE window_control_info.incl.pl1 */
  2    12 
  2    13 
  2    14 /*  END OF:	xforum_windows.incl.pl1		  *  *  *  *  * */
      112 
      113 
      114 	menu_requirements_ptr = requirements_ptr;
      115 	trailer (1) = PAD_CHAR;
      116 	headers (1) = "";
      117 
      118 	actual_menu_format.version = menu_format_version_1;
      119 	actual_menu_format.max_width = xforum_windows.menu.extent.width;
      120 	actual_menu_format.max_height = xforum_windows.menu.extent.height + xforum_windows.bottom.extent.height;
      121 	actual_menu_format.n_columns = 2;
      122 	actual_menu_format.center_headers = "1"b;
      123 	actual_menu_format.center_trailers = "1"b;
      124 	actual_menu_format.pad = "0"b;
      125 	actual_menu_format.pad_char = PAD_CHAR;
      126 
      127 
      128 	call menu_$create (choices, headers, trailer, addr (actual_menu_format), OPTION_CODES,
      129 	     get_system_free_area_ (), menu_requirements_ptr, menu, code);
      130 
      131 	return;
      132 
      133      end xforum_create_menu_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    04/24/86  1513.4  xforum_create_menu_.pl1           >special_ldd>install>MR12.0-1048>xforum_create_menu_.pl1
110          1    03/27/82  0429.3  menu_dcls.incl.pl1                >ldd>include>menu_dcls.incl.pl1
112          2    12/03/84  1241.6  xforum_windows.incl.pl1           >ldd>include>xforum_windows.incl.pl1
2-12         3    09/12/84  0916.7  window_control_info.incl.pl1      >ldd>include>window_control_info.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
OPTION_CODES                    000000 constant        char(1)                  initial array unaligned dcl 93 set ref 128*
PAD_CHAR                               constant        char(1)                  initial unaligned dcl 93 ref 115 125
actual_menu_format              000104 automatic       structure                level 1 dcl 87 set ref 128 128
addr                                                   builtin function         dcl 104 ref 128 128
bottom                   20     000014 external static structure                level 2 dcl 2-5
center_headers            4     000104 automatic       bit(1)                   level 3 packed unaligned dcl 87 set ref 122*
center_trailers           4(01) 000104 automatic       bit(1)                   level 3 packed unaligned dcl 87 set ref 123*
choices                                parameter       varying char             array dcl 70 set ref 25 128*
code                                   parameter       fixed bin(35,0)          dcl 73 set ref 25 128*
constraints               1     000104 automatic       structure                level 2 dcl 87
extent                   25     000014 external static structure                level 4 in structure "xforum_windows" dcl 2-5
                                                                                  in procedure "xforum_create_menu_"
extent                   15     000014 external static structure                level 4 in structure "xforum_windows" dcl 2-5
                                                                                  in procedure "xforum_create_menu_"
flags                     4     000104 automatic       structure                level 2 dcl 87
get_system_free_area_           000010 constant        entry                    external dcl 79 ref 128 128
headers                         000100 automatic       varying char(1)          array dcl 85 set ref 116* 128*
height                   16     000014 external static fixed bin(17,0)          level 5 in structure "xforum_windows" dcl 2-5
                                                                                  in procedure "xforum_create_menu_" ref 120
height                   26     000014 external static fixed bin(17,0)          level 5 in structure "xforum_windows" dcl 2-5
                                                                                  in procedure "xforum_create_menu_" ref 120
max_height                2     000104 automatic       fixed bin(17,0)          level 3 dcl 87 set ref 120*
max_width                 1     000104 automatic       fixed bin(17,0)          level 3 dcl 87 set ref 119*
menu                                   parameter       pointer                  dcl 72 in procedure "xforum_create_menu_" set ref 25
                                                                                  128*
menu                     10     000014 external static structure                level 2 in structure "xforum_windows" dcl 2-5
                                                                                  in procedure "xforum_create_menu_"
menu_$create                    000012 constant        entry                    external dcl 1-8 ref 128
menu_format                            based           structure                level 1 dcl 1-76
menu_format_version_1                  constant        fixed bin(17,0)          initial dcl 1-97 ref 118
menu_requirements_ptr           000112 automatic       pointer                  dcl 1-95 set ref 114* 128*
n_columns                 3     000104 automatic       fixed bin(17,0)          level 2 dcl 87 set ref 121*
pad                       4(02) 000104 automatic       bit(34)                  level 3 packed unaligned dcl 87 set ref 124*
pad_char                  5     000104 automatic       char(1)                  level 2 dcl 87 set ref 125*
position                 12     000014 external static structure                level 3 in structure "xforum_windows" dcl 2-5
                                                                                  in procedure "xforum_create_menu_"
position                 22     000014 external static structure                level 3 in structure "xforum_windows" dcl 2-5
                                                                                  in procedure "xforum_create_menu_"
requirements_ptr                       parameter       pointer                  dcl 71 ref 25 114
trailer                         000102 automatic       varying char(1)          array dcl 86 set ref 115* 128*
version                         000104 automatic       fixed bin(17,0)          level 2 dcl 87 set ref 118*
width                    15     000014 external static fixed bin(17,0)          level 5 dcl 2-5 ref 119
window_position_info                   based           structure                level 1 unaligned dcl 3-25
xforum_window_info              000114 automatic       structure                level 1 unaligned dcl 2-8
xforum_windows                  000014 external static structure                level 1 dcl 2-5

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
MENU_OPTION_KEYS                       internal static char(1)                  initial array unaligned dcl 1-100
break_table_info                       based           structure                level 1 dcl 3-76
break_table_info_version               internal static fixed bin(17,0)          initial dcl 3-80
break_table_info_version_1             internal static fixed bin(17,0)          initial dcl 3-80
break_table_ptr                        automatic       pointer                  dcl 3-75
get_editor_key_bindings_info           based           structure                level 1 dcl 3-151
get_editor_key_bindings_info_ptr       automatic       pointer                  dcl 3-159
get_editor_key_bindings_info_version_1 internal static char(8)                  initial unaligned dcl 3-160
line_editor_binding_count              automatic       fixed bin(17,0)          dcl 3-121
line_editor_key_binding_info           based           structure                level 1 dcl 3-129
line_editor_key_binding_info_ptr       automatic       pointer                  dcl 3-118
line_editor_key_binding_info_version_3 internal static char(8)                  initial unaligned dcl 3-148
line_editor_longest_sequence           automatic       fixed bin(17,0)          dcl 3-123
menu_$delete                    000000 constant        entry                    external dcl 1-61
menu_$describe                  000000 constant        entry                    external dcl 1-35
menu_$destroy                   000000 constant        entry                    external dcl 1-41
menu_$display                   000000 constant        entry                    external dcl 1-20
menu_$get_choice                000000 constant        entry                    external dcl 1-26
menu_$list                      000000 constant        entry                    external dcl 1-67
menu_$retrieve                  000000 constant        entry                    external dcl 1-54
menu_$store                     000000 constant        entry                    external dcl 1-46
menu_format_ptr                        automatic       pointer                  dcl 1-94
menu_requirements                      based           structure                level 1 dcl 1-88
menu_requirements_version_1            internal static fixed bin(17,0)          initial dcl 1-97
more_handler_info                      based           structure                level 1 dcl 3-83
more_handler_info_ptr                  automatic       pointer                  dcl 3-92
more_handler_info_version              internal static fixed bin(17,0)          initial dcl 3-94
more_handler_info_version_3            internal static fixed bin(17,0)          initial dcl 3-94
more_prompt_info                       based           structure                level 1 dcl 3-108
more_prompt_info_ptr                   automatic       pointer                  dcl 3-112
more_prompt_info_version_1             internal static char(8)                  initial unaligned dcl 3-114
more_responses_info                    based           structure                level 1 dcl 3-59
more_responses_info_ptr                automatic       pointer                  dcl 3-69
more_responses_info_version_1          internal static fixed bin(17,0)          initial dcl 3-67
more_responses_version                 internal static fixed bin(17,0)          initial dcl 3-67
set_editor_key_bindings_info           based           structure                level 1 dcl 3-162
set_editor_key_bindings_info_ptr       automatic       pointer                  dcl 3-171
set_editor_key_bindings_info_version_1 internal static char(8)                  initial unaligned dcl 3-172
token_characters_info                  based           structure                level 1 dcl 3-97
token_characters_info_ptr              automatic       pointer                  dcl 3-104
token_characters_info_version_1        internal static char(8)                  initial unaligned dcl 3-106
window_edit_line_info                  based           structure                level 1 unaligned dcl 3-177
window_edit_line_info_ptr              automatic       pointer                  dcl 3-186
window_edit_line_info_version_1        internal static char(8)                  initial unaligned dcl 3-183
window_position_info_ptr               automatic       pointer                  dcl 3-37
window_position_info_version           internal static fixed bin(17,0)          initial dcl 3-35
window_position_info_version_1         internal static fixed bin(17,0)          initial dcl 3-35
window_status_info                     based           structure                level 1 dcl 3-45
window_status_info_ptr                 automatic       pointer                  dcl 3-43
window_status_version                  internal static fixed bin(17,0)          initial dcl 3-52
window_status_version_1                internal static fixed bin(17,0)          initial dcl 3-52

NAME DECLARED BY EXPLICIT CONTEXT.
xforum_create_menu_             000034 constant        entry                    external dcl 25

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       240         256     161         250
Length       502     161        16         210      57           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
xforum_create_menu_                 130 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
xforum_create_menu_      000100 headers                     xforum_create_menu_
                         000102 trailer                     xforum_create_menu_
                         000104 actual_menu_format          xforum_create_menu_
                         000112 menu_requirements_ptr       xforum_create_menu_
                         000114 xforum_window_info          xforum_create_menu_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
get_system_free_area_         menu_$create

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
xforum_windows




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     25 000027       114 000047       115 000053       116 000057       118 000060       119 000061       120 000064
    121 000067       122 000071       123 000073       124 000075       125 000077       128 000101       131 000160


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
