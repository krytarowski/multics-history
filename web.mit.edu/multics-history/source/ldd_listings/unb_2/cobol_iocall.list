	COMPILATION LISTING OF SEGMENT cobol_iocall
	Compiled by: Multics PL/I Compiler, Release 31b, of April 24, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 05/24/89  0948.5 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
       17*     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
       18*     MCR8060 cobol_iocall.pl1 Reformatted code to new Cobol standard.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 /* Modified on 02/22/77 by Bob Chang to fix the bug for reloc bit.	*/
       23 /* Modified on 01/31/77 by Bob Chang to implement profile option.	*/
       24 /* Modified since Version 2.0.	*/
       25 
       26 /* format: style3 */
       27 cobol_iocall:
       28      proc (argptr, descptr);
       29 
       30 dcl	argptr		ptr;
       31 dcl	descptr		ptr;
       32 
       33 /* fixup directive for link, used when profile options is specified.	*/
       34 dcl	1 fixup_directive	aligned static,
       35 	  2 operation	bit (1) unal init ("0"b),
       36 	  2 type		bit (4) unal init ("1111"b),
       37 	  2 reserved	bit (9) unal init ("000000000"b),
       38 	  2 location	unal,
       39 	    3 half	bit (1) unal init ("0"b),
       40 	    3 base	bit (3) unal init ("001"b),
       41 	    3 offset	fixed bin unal,
       42 	  2 tag_number	fixed bin aligned;
       43 dcl	1 args		based (argptr),
       44 	  2 entryno	fixed bin,
       45 	  2 arglist_off	fixed bin,
       46 	  2 stacktemp_off	fixed bin,
       47 	  2 n		fixed bin,
       48 	  2 arg		(0 refer (args.n)),
       49 	    3 pt		ptr,
       50 	    3 type	fixed bin,
       51 	    3 seg		fixed bin,
       52 	    3 off		fixed bin,
       53 	    3 value	bit (18) unaligned,
       54 	    3 indirect	bit (1) unaligned,
       55 	    3 overlay	bit (1) unaligned,
       56 	    3 repeat_nogen	bit (1) unaligned,
       57 	    3 reg_sw	bit (1) unaligned,
       58 	    3 reg		bit (3) unaligned;
       59 dcl	desc		(20) bit (36) based (descptr);
       60 
       61 dcl	type9		char (144) static aligned;	/* enough to hold 36 words */
       62 dcl	1 data_name	based,
       63 	  2 size		fixed bin (15),
       64 	  2 line		fixed bin (15),
       65 	  2 column	fixed bin (15),
       66 	  2 type		fixed bin (15);
       67 
       68 dcl	1 addr_struct	static,
       69 	  2 type		fixed bin init (2),
       70 	  2 operand_no	fixed bin init (1),
       71 	  2 lock		fixed bin init (0),
       72 	  2 operand,
       73 	    3 token_ptr	ptr,
       74 	    3 send_receive	fixed bin init (0),
       75 	    3 ic_mod	fixed bin,
       76 	    3 size_sw	fixed bin init (1);
       77 
       78 dcl	1 basic_struct	based,
       79 	  2 type		fixed bin,
       80 	  2 count		fixed bin,
       81 	  2 lock		fixed bin,
       82 	  2 seg		fixed bin,
       83 	  2 offset	fixed bin,
       84 	  2 sr		fixed bin;
       85 
       86 dcl	evad		(16) bit (18) static init ("010000000000010110"b,
       87 						/* (1)  detach_iocb */
       88 			"010000000000011010"b,	/* (2)  open */
       89 			"010000000000011110"b,	/* (3)  close */
       90 			"010000000000100010"b,	/* (4)  get_line */
       91 			"010000000000100110"b,	/* (5)  get_chars */
       92 			"010000000000101010"b,	/* (6)  put_chars */
       93 			"010000000000101110"b,	/* (7)  modes */
       94 			"010000000000110010"b,	/* (8)  position */
       95 			"010000000000110110"b,	/* (9)  control */
       96 			"010000000000111010"b,	/* (10) read_record */
       97 			"010000000000111110"b,	/* (11) write_record */
       98 			"010000000001000010"b,	/* (12) rewrite_record */
       99 			"010000000001000110"b,	/* (13) delete_record */
      100 			"010000000001001010"b,	/* (14) seek_key */
      101 			"010000000001001110"b,	/* (15) read_key */
      102 			"010000000001010010"b);	/* (16) read_length */
      103 
      104 /* THE FOLLOWING DECLARATION TO TEMPORARILY CALL iox_$name */
      105 dcl	ename		(16) char (20) static
      106 			init ("iox_$detach_iocb", "iox_$open", "iox_$close", "iox_$get_line", "iox_$get_chars",
      107 			"iox_$put_chars", "iox_$modes", "iox_$position", "iox_$control", "iox_$read_record",
      108 			"iox_$write_record", "iox_$rewrite_record", "iox_$delete_record", "iox_$seek_key",
      109 			"iox_$read_key", "iox_$read_length");
      110 
      111 /* Change to interface the cobol operators_ */
      112 /*-04/05/76-*/
      113 dcl	entry_op		(4) bit (18) static
      114 			init ("000000000000000000"b, "000000000000000001"b, "000000000000000101"b,
      115 			"000000000000000110"b);
      116 
      117 dcl	icmod		bit (6) static init ("000100"b);
      118 dcl	indmod		bit (6) static init ("010000"b);
      119 dcl	dlmod		bit (6) static init ("000111"b);
      120 dcl	dmod		(2) bit (6) static init ("000111"b, "000011"b);
      121 
      122 dcl	stz		bit (12) static init ("100101000001"b);
      123 dcl	fld_		bit (12) static init ("100011001000"b);
      124 dcl	tsx0		bit (12) static init ("111000000001"b);
      125 dcl	eax1		bit (12) static init ("110010001001"b);
      126 dcl	epp2		bit (12) static init ("011101010001"b);
      127 dcl	epp2_		bit (12) static init ("011101010000"b);
      128 dcl	spri2		bit (12) static init ("010101010001"b);
      129 dcl	st		(2) bit (12) static init ("111101101001"b, "111101110001"b);
      130 dcl	ld_		(2) bit (12) static init ("010011101000"b, "010011110000"b);
      131 dcl	full_epp2		bit (36) static init ("000000000000000000011101010000000000"b);
      132 
      133 dcl	instr		(8) bit (36) static aligned;
      134 dcl	reloc		(12) bit (5) aligned static
      135 			init ("00000"b, "00000"b, "00000"b, "00000"b, "00000"b, "00000"b, "00000"b, "00000"b,
      136 			"00000"b, "00000"b, "00000"b, "00000"b);
      137 
      138 dcl	1 pr0_struct	static,
      139 	  2 pr0		fixed bin init (0),
      140 	  2 pointer_no	bit (3),
      141 	  2 lock		fixed bin init (0),
      142 	  2 switch	fixed bin init (1),
      143 	  2 segno		fixed bin init (4000),
      144 	  2 offset	fixed bin init (0),
      145 	  2 reset		fixed bin;
      146 dcl	1 pr2_struct	static,
      147 	  2 pr2		fixed bin init (2),
      148 	  2 pointer_no	bit (3),
      149 	  2 lock		fixed bin init (0),
      150 	  2 switch	fixed bin init (0),
      151 	  2 segno		fixed bin,
      152 	  2 offset	fixed bin,
      153 	  2 reset		fixed bin;
      154 dcl	1 pr4_struct	static,
      155 	  2 pr4		fixed bin init (4),
      156 	  2 pointer_no	bit (3),
      157 	  2 lock		fixed bin init (0),
      158 	  2 switch	fixed bin init (1),
      159 	  2 segno		fixed bin init (3002),
      160 	  2 offset	fixed bin init (0),
      161 	  2 reset		fixed bin;
      162 
      163 dcl	1 reg_struct	static,
      164 	  2 either_a_or_q	fixed bin init (4),
      165 	  2 reg_no	bit (4),
      166 	  2 lock		fixed bin init (0),
      167 	  2 already_there	fixed bin,
      168 	  2 contains	fixed bin init (0),
      169 	  2 null_ptr	ptr init (null ()),
      170 	  2 fill		bit (18) unaligned init ((18)"0"b),
      171 	  2 literal	bit (18) unaligned;
      172 
      173 dcl	char4b		char (4) based;
      174 dcl	linkstring	char (65);
      175 dcl	varstring		char (65) varying based (arg.pt (1));
      176 
      177 dcl	(i, j)		fixed bin;
      178 dcl	k		fixed bin;
      179 dcl	conoff		fixed bin;
      180 dcl	aloff		fixed bin;
      181 dcl	stoff		fixed bin;
      182 dcl	a_or_q		fixed bin;
      183 dcl	ic		fixed bin;
      184 dcl	opno		fixed bin;
      185 dcl	linkoff		fixed bin;
      186 dcl	seg		fixed bin;
      187 dcl	off		fixed bin;
      188 dcl	utemp		fixed bin;
      189 
      190 dcl	linksw		bit (1);
      191 dcl	firsttime		bit (1) static init ("1"b);
      192 dcl	loc		bit (18) aligned;
      193 dcl	reg		bit (3) aligned;
      194 
      195 dcl	instr_ptr		ptr static;
      196 dcl	instr3_ptr	ptr static;
      197 dcl	reloc_ptr		ptr static;
      198 dcl	reloc5_ptr	ptr static;
      199 dcl	pr0_struct_ptr	ptr static;
      200 dcl	pr2_struct_ptr	ptr static;
      201 dcl	pr4_struct_ptr	ptr static;
      202 dcl	reg_struct_ptr	ptr static;
      203 dcl	type9_ptr		ptr static;
      204 dcl	addr_struct_ptr	static ptr;
      205 
      206 dcl	cobol_reset_r$after_call
      207 			entry;
      208 dcl	cobol_pool	entry (char (*), fixed bin, fixed bin);
      209 dcl	cobol_make_link$type_4
      210 			entry (fixed bin, char (*));
      211 dcl	cobol_make_fixup	entry (ptr);
      212 dcl	cobol_alloc$stack	entry (fixed bin, fixed bin, fixed bin);
      213 dcl	cobol_register$load entry (ptr);
      214 dcl	cobol_emit	entry (ptr, ptr, fixed bin);
      215 dcl	cobol_pointer_register$get
      216 			entry (ptr);
      217 dcl	cobol_pointer_register$call
      218 			entry;
      219 dcl	cobol_addr	entry (ptr, ptr, ptr);
      220 dcl	cobol_make_type9$type2_3
      221 			entry (ptr, ptr);
      222 dcl	cobol_set_pr	entry (ptr, ptr);
      223 
      224 
      225 /*************************************/
      226 start:
      227 	if firsttime
      228 	then do;
      229 		instr_ptr = addr (instr);
      230 		instr3_ptr = addr (instr (3));
      231 		reloc_ptr = addr (reloc);
      232 		reloc5_ptr = addr (reloc (5));
      233 		pr0_struct_ptr = addr (pr0_struct);
      234 		pr2_struct_ptr = addr (pr2_struct);
      235 		pr4_struct_ptr = addr (pr4_struct);
      236 		reg_struct_ptr = addr (reg_struct);
      237 		type9_ptr = addr (type9);
      238 		addr_struct_ptr = addr (addr_struct);
      239 		firsttime = "0"b;
      240 	     end;
      241 
      242 	if args.entryno = 0
      243 	then k = 1;
      244 	else k = 0;				/* 0=iocall; 1=other */
      245 	if args.arglist_off <= 0
      246 	then do;
      247 		i = 8 * (args.n + 1 - k);
      248 		if descptr ^= null ()
      249 		then i = 2 * i;
      250 		call cobol_alloc$stack (i, 2, aloff);
      251 	     end;
      252 	else aloff = args.arglist_off;
      253 	call cobol_pointer_register$get (pr2_struct_ptr);
      254 	stoff = args.stacktemp_off;
      255 	do j = 1 to 11 by 2;
      256 	     reloc (j) = "00000"b;
      257 	end;
      258 	ic = 1;
      259 
      260 	if args.n > k
      261 	then do i = 2 to args.n;			/* set up argument list */
      262 		if arg.type (i) = 0
      263 		then do;				/* arg.pt points to basic structure */
      264 			instr (1) = full_epp2;
      265 			call cobol_addr (arg.pt (i), instr_ptr, reloc_ptr);
      266 			call cobol_pointer_register$get (pr2_struct_ptr);
      267 			ic = 2;
      268 		     end;
      269 		else if arg.type (i) < 4
      270 		then do;				/* direct lower (1) or upper (2) in in arg.value(i) */
      271 			if arg.reg_sw (i)
      272 			then reg = arg.reg (i);
      273 			else reg = "110"b;		/* use stack by default */
      274 			if arg.seg (i) = 0
      275 			then do;
      276 				loc = reg || substr (unspec (stoff), 22, 15);
      277 				if arg.overlay (i)
      278 				then arg.seg (i) = stoff;
      279 				stoff = stoff + 1;
      280 			     end;
      281 			else loc = reg || substr (unspec (arg.seg (i)), 22, 15);
      282 			if arg.type (i) < 3
      283 			then do;
      284 				if arg.value (i) = (18)"0"b
      285 				then instr (1) = loc || stz;
      286 				else do;
      287 					reg_struct.literal = arg.value (i);
      288 					call cobol_register$load (reg_struct_ptr);
      289 					a_or_q = fixed (reg_struct.reg_no, 4);
      290 					if reg_struct.already_there = 0
      291 					then do;
      292 						instr (1) =
      293 						     arg.value (i) || ld_ (a_or_q) || dmod (arg.type (i));
      294 						ic = ic + 1;
      295 					     end;
      296 					instr (ic) = loc || st (a_or_q);
      297 				     end;
      298 				ic = ic + 1;
      299 			     end;
      300 			instr (ic) = loc || epp2;
      301 			ic = ic + 1;
      302 		     end;
      303 		else if arg.type (i) = 4
      304 		then do;				/* link in seg|off */
      305 			call cobol_pointer_register$get (pr4_struct_ptr);
      306 			instr (1) = "100"b || substr (unspec (arg.seg (i)), 22, 15) || epp2 || indmod;
      307 			reloc (1) = "10100"b;
      308 			if fixed_common.options.profile
      309 			then do;
      310 				fixup_directive.location.offset = cobol_$text_wd_off;
      311 				call cobol_make_fixup (addr (fixup_directive));
      312 			     end;
      313 			if arg.off (i) ^= 0
      314 			then do;
      315 				instr (2) = "010"b || substr (unspec (arg.off (i)), 22, 15) || epp2;
      316 				ic = 3;
      317 			     end;
      318 			else ic = 2;
      319 		     end;
      320 		else if arg.type (i) = 5
      321 		then do;				/* arg.pt points to a token */
      322 			if arg.pt (i) -> data_name.type = 9
      323 			then type9_ptr = arg.pt (i);
      324 			else call cobol_make_type9$type2_3 (type9_ptr, arg.pt (i));
      325 			if arg.indirect (i) | args.arglist_off <= 0 | ^arg.repeat_nogen (i)
      326 			then call cobol_set_pr (pr2_struct_ptr, type9_ptr);
      327 		     end;
      328 		else if arg.type (i) = 6
      329 		then do;
      330 			call cobol_pool (substr (arg.pt (i) -> varstring, 1, length (arg.pt (i) -> varstring)), 1,
      331 			     conoff);
      332 			utemp = -(conoff + cobol_$text_wd_off);
      333 			instr (1) = substr (unspec (utemp), 19, 18) || epp2_ || icmod;
      334 			ic = 2;
      335 		     end;
      336 
      337 		if arg.indirect (i)
      338 		then do;				/* not legal for type 4 */
      339 			if arg.off (i) = 0
      340 			then do;
      341 				if mod (stoff, 2) = 1
      342 				then stoff = stoff + 1;
      343 				loc = "110"b || substr (unspec (stoff), 22, 15);
      344 				if arg.overlay (i)
      345 				then arg.off (i) = stoff;
      346 				stoff = stoff + 2;
      347 			     end;
      348 			else loc = "110"b || substr (unspec (arg.off (i)), 22, 15);
      349 			instr (ic) = loc || spri2;
      350 			instr (ic + 1) = loc || epp2;
      351 			ic = ic + 2;
      352 		     end;
      353 
      354 		utemp = aloff + 2 * (i - k);
      355 		instr (ic) = "110"b || substr (unspec (utemp), 22, 15) || spri2;
      356 
      357 		if args.arglist_off > 0
      358 		then if arg.repeat_nogen (i)
      359 		     then ic = ic - 2;		/* arglist already loaded */
      360 		if ic > 0
      361 		then call cobol_emit (instr_ptr, reloc_ptr, ic);
      362 		do j = 1 to 11 by 2;
      363 		     reloc (j) = "00000"b;
      364 		end;
      365 		ic = 1;
      366 	     end;
      367 
      368 
      369 	if descptr ^= null
      370 	then do;
      371 		ic = 1;
      372 		j = aloff + 2 * (args.n + 1 - 2 * k);
      373 		do i = k + 1 to args.n;
      374 		     call cobol_pool (addr (desc (i)) -> char4b, 1, off);
      375 		     utemp = -cobol_$text_wd_off - off - ic + 1;
      376 		     instr (ic) = substr (unspec (utemp), 19, 18) || epp2_ || icmod;
      377 						/* THE FOLLOWING LINE (FOR PLACEMENT OF ARGUMENT DESCRIPTORS):
      378*		utemp = j+2*(i-k);
      379*   IS TEMPORARILY CHANGED (TO NEVER ALLOW FOR THE "OPTIONAL POINTER" FOR ENTRY VARIABLE CALLS) BY: */
      380 		     utemp = j + 2 * i - 2;		/*-04/02/76-*/
      381 		     instr (ic + 1) = "110"b || substr (unspec (utemp), 22, 15) || spri2;
      382 		     ic = ic + 2;
      383 		end;
      384 		call cobol_emit (instr_ptr, null (), ic - 1);
      385 	     end;
      386 
      387 
      388 	call cobol_pointer_register$call;
      389 	instr (1) = "110"b || substr (unspec (aloff), 22, 15) || eax1;
      390 	utemp = args.n - k;
      391 	instr (2) = substr (unspec (utemp), 30, 7) || (11)"0"b || fld_ || dlmod;
      392 
      393 	if k = 1
      394 	then do;					/* non-io call */
      395 		if arg.type (1) = 6
      396 		then call cobol_make_link$type_4 (linkoff, substr (varstring, 1, length (varstring)));
      397 		else linkoff = arg.seg (1);
      398 		if fixed_common.options.profile
      399 		then do;
      400 			fixup_directive.location.offset = cobol_$text_wd_off + 2;
      401 			call cobol_make_fixup (addr (fixup_directive));
      402 		     end;
      403 		instr (3) = "100"b || substr (unspec (linkoff), 22, 15) || epp2 || indmod;
      404 		reloc (5) = "10100"b;
      405 		ic = 4;
      406 		opno = 3;
      407 	     end;
      408 	else do;					/* call to an iocb entry variable */
      409 		linksw = "0"b;
      410 		if arg.type (1) = 4
      411 		then do;
      412 			seg = arg.seg (1);
      413 			off = arg.off (1);
      414 			linksw = "1"b;
      415 		     end;
      416 		else if arg.pt (1) -> basic_struct.seg < 0
      417 		then do;
      418 			seg = -arg.pt (1) -> basic_struct.seg;
      419 			off = -arg.pt (1) -> basic_struct.offset;
      420 			linksw = "1"b;
      421 		     end;
      422 		if linksw
      423 		then do;				/* external file - link to fsb */
      424 						/* THE FOLLOWING LINES TEMPORARILY DELETED (TO CALL iox_$name) */
      425 						/*		instr(3) = "100"b||substr(unspec(seg),22,15)||epp2||indmod;
      426*/*		reloc(5) = "10100"b;
      427**/
      428 			if args.arglist_off <= 0 | ^arg.repeat_nogen (1)
      429 			then do;			/* THE FOLLOWING LINES TEMPORARILY ADDED (TO CALL iox_$name) */
      430 						/**/
      431 				instr (3) = "100"b || substr (unspec (seg), 22, 15) || epp2 || indmod;
      432 						/**/
      433 				reloc (5) = "10100"b;
      434 				if fixed_common.options.profile
      435 				then do;
      436 					fixup_directive.location.offset = cobol_$text_wd_off + 2;
      437 					call cobol_make_fixup (addr (fixup_directive));
      438 				     end;
      439 				utemp = aloff + 2;
      440 				instr (4) = "110"b || substr (unspec (utemp), 22, 15) || spri2;
      441 				ic = 5;
      442 			     end;			/*		else ic = 4;
      443**/
      444 						/**/
      445 			else ic = 3;		/* THE FOLLOWING LINES TEMPORARILY DELETED (TO CALL iox_$name) */
      446 						/*		instr(ic) = "010"b||substr(unspec(off),22,15)||epp2||indmod;
      447*/*		ic = ic+1;
      448**/
      449 		     end;
      450 		else do;				/* internal file - fsb in cobol data segment */
      451 			instr (3) = full_epp2;
      452 			call cobol_addr (arg.pt (1), instr3_ptr, reloc5_ptr);
      453 			if args.arglist_off <= 0 | ^arg.repeat_nogen (1)
      454 			then do;
      455 				utemp = aloff + 2;
      456 				instr (4) = "110"b || substr (unspec (utemp), 22, 15) || spri2;
      457 				ic = 5;
      458 			     end;
      459 			else ic = 4;
      460 		     end;				/* THE FOLLOWING LINES (FOR TRANSFERRING THROUGH THE ENTRY VARIABLE) */
      461 						/*	     instr(ic) = evad(args.entryno)||epp2;
      462*/*	     opno = 1;
      463*/* ARE TEMPORARILY REPLACED (TO CALL iox_$name) BY: */
      464 						/**/
      465 		call cobol_make_link$type_4 (linkoff, ename (args.entryno));
      466 		if fixed_common.options.profile
      467 		then do;
      468 			fixup_directive.location.offset = cobol_$text_wd_off + ic - 1;
      469 			call cobol_make_fixup (addr (fixup_directive));
      470 		     end;				/**/
      471 		instr (ic) = "100"b || substr (unspec (linkoff), 22, 15) || epp2 || indmod;
      472 		j = i * 2 - 1;			/**/
      473 		reloc (j) = "10100"b;		/**/
      474 		opno = 3;
      475 		ic = ic + 1;
      476 	     end;
      477 
      478 	if descptr = null ()
      479 	then opno = opno + 1;
      480 	instr (ic) = entry_op (opno) || tsx0;
      481 
      482 	call cobol_emit (instr_ptr, reloc_ptr, ic);
      483 	call cobol_reset_r$after_call;
      484 	if args.arglist_off < 0
      485 	then arglist_off = aloff;			/* special meaning (for reuse of stack space) */
      486 	return;
      487 
      488 
      489 /*************************************/
      490 
      491 /*****	Declaration for builtin function	*****/
      492 
      493 dcl	(substr, mod, binary, fixed, addr, addrel, rel, length, string, unspec, null, index)
      494 			builtin;
      495 
      496 /*****	End of declaration for builtin function	*****/
      497 
  1     1 
  1     2 /* BEGIN INCLUDE FILE ... cobol_.incl.pl1 */
  1     3 /* last modified Feb 4, 1977 by ORN  */
  1     4 
  1     5 /* This file defines all external data used in the generator phase of Multics Cobol */
  1     6 
  1     7 /* POINTERS */
  1     8 dcl cobol_$text_base_ptr ptr  ext;
  1     9 dcl text_base_ptr ptr  defined (cobol_$text_base_ptr);
  1    10 dcl cobol_$con_end_ptr ptr  ext;
  1    11 dcl con_end_ptr ptr  defined (cobol_$con_end_ptr);
  1    12 dcl cobol_$def_base_ptr ptr  ext;
  1    13 dcl def_base_ptr ptr  defined (cobol_$def_base_ptr);
  1    14 dcl cobol_$link_base_ptr ptr  ext;
  1    15 dcl link_base_ptr ptr  defined (cobol_$link_base_ptr);
  1    16 dcl cobol_$sym_base_ptr ptr  ext;
  1    17 dcl sym_base_ptr ptr  defined (cobol_$sym_base_ptr);
  1    18 dcl cobol_$reloc_text_base_ptr ptr  ext;
  1    19 dcl reloc_text_base_ptr ptr  defined (cobol_$reloc_text_base_ptr);
  1    20 dcl cobol_$reloc_def_base_ptr ptr  ext;
  1    21 dcl reloc_def_base_ptr ptr  defined (cobol_$reloc_def_base_ptr);
  1    22 dcl cobol_$reloc_link_base_ptr ptr  ext;
  1    23 dcl reloc_link_base_ptr ptr  defined (cobol_$reloc_link_base_ptr);
  1    24 dcl cobol_$reloc_sym_base_ptr ptr  ext;
  1    25 dcl reloc_sym_base_ptr ptr  defined (cobol_$reloc_sym_base_ptr);
  1    26 dcl cobol_$reloc_work_base_ptr ptr  ext;
  1    27 dcl reloc_work_base_ptr ptr  defined (cobol_$reloc_work_base_ptr);
  1    28 dcl cobol_$pd_map_ptr ptr  ext;
  1    29 dcl pd_map_ptr ptr  defined (cobol_$pd_map_ptr);
  1    30 dcl cobol_$fixup_ptr ptr  ext;
  1    31 dcl fixup_ptr ptr  defined (cobol_$fixup_ptr);
  1    32 dcl cobol_$initval_base_ptr ptr  ext;
  1    33 dcl initval_base_ptr ptr  defined (cobol_$initval_base_ptr);
  1    34 dcl cobol_$initval_file_ptr ptr  ext;
  1    35 dcl initval_file_ptr ptr  defined (cobol_$initval_file_ptr);
  1    36 dcl cobol_$perform_list_ptr ptr  ext;
  1    37 dcl perform_list_ptr ptr  defined (cobol_$perform_list_ptr);
  1    38 dcl cobol_$alter_list_ptr ptr  ext;
  1    39 dcl alter_list_ptr ptr  defined (cobol_$alter_list_ptr);
  1    40 dcl cobol_$seg_init_list_ptr ptr  ext;
  1    41 dcl seg_init_list_ptr ptr  defined (cobol_$seg_init_list_ptr);
  1    42 dcl cobol_$temp_token_area_ptr ptr  ext;
  1    43 dcl temp_token_area_ptr ptr  defined (cobol_$temp_token_area_ptr);
  1    44 dcl cobol_$temp_token_ptr ptr  ext;
  1    45 dcl temp_token_ptr ptr  defined (cobol_$temp_token_ptr);
  1    46 dcl cobol_$token_block1_ptr ptr  ext;
  1    47 dcl token_block1_ptr ptr  defined (cobol_$token_block1_ptr);
  1    48 dcl cobol_$token_block2_ptr ptr  ext;
  1    49 dcl token_block2_ptr ptr  defined (cobol_$token_block2_ptr);
  1    50 dcl cobol_$minpral5_ptr ptr  ext;
  1    51 dcl minpral5_ptr ptr  defined (cobol_$minpral5_ptr);
  1    52 dcl cobol_$tag_table_ptr ptr  ext;
  1    53 dcl tag_table_ptr ptr  defined (cobol_$tag_table_ptr);
  1    54 dcl cobol_$map_data_ptr ptr  ext;
  1    55 dcl map_data_ptr ptr  defined (cobol_$map_data_ptr);
  1    56 dcl cobol_$ptr_status_ptr ptr  ext;
  1    57 dcl ptr_status_ptr ptr  defined (cobol_$ptr_status_ptr);
  1    58 dcl cobol_$reg_status_ptr ptr  ext;
  1    59 dcl reg_status_ptr ptr  defined (cobol_$reg_status_ptr);
  1    60 dcl cobol_$misc_base_ptr ptr ext;
  1    61 dcl misc_base_ptr ptr defined (cobol_$misc_base_ptr);
  1    62 dcl cobol_$misc_end_ptr ptr ext;
  1    63 dcl misc_end_ptr ptr defined (cobol_$misc_end_ptr);
  1    64 dcl cobol_$list_ptr ptr ext;
  1    65 dcl list_ptr ptr defined (cobol_$list_ptr);
  1    66 dcl cobol_$allo1_ptr ptr ext;
  1    67 dcl allo1_ptr ptr defined (cobol_$allo1_ptr);
  1    68 dcl cobol_$eln_ptr ptr ext;
  1    69 dcl eln_ptr ptr defined (cobol_$eln_ptr);
  1    70 dcl cobol_$diag_ptr ptr ext;
  1    71 dcl diag_ptr ptr defined (cobol_$diag_ptr);
  1    72 dcl cobol_$xref_token_ptr ptr ext;
  1    73 dcl xref_token_ptr ptr defined (cobol_$xref_token_ptr);
  1    74 dcl cobol_$xref_chain_ptr ptr ext;
  1    75 dcl xref_chain_ptr ptr defined (cobol_$xref_chain_ptr);
  1    76 dcl cobol_$statement_info_ptr ptr ext;
  1    77 dcl statement_info_ptr ptr defined (cobol_$statement_info_ptr);
  1    78 dcl cobol_$reswd_ptr ptr ext;
  1    79 dcl reswd_ptr ptr defined (cobol_$reswd_ptr);
  1    80 dcl cobol_$op_con_ptr ptr ext;
  1    81 dcl op_con_ptr ptr defined (cobol_$op_con_ptr);
  1    82 dcl cobol_$ntbuf_ptr ptr ext;
  1    83 dcl ntbuf_ptr ptr defined (cobol_$ntbuf_ptr);
  1    84 dcl cobol_$main_pcs_ptr ptr ext;
  1    85 dcl main_pcs_ptr ptr defined (cobol_$main_pcs_ptr);
  1    86 dcl cobol_$include_info_ptr ptr ext;
  1    87 dcl include_info_ptr ptr defined (cobol_$include_info_ptr);
  1    88 
  1    89 /* FIXED BIN */
  1    90 dcl cobol_$text_wd_off fixed bin  ext;
  1    91 dcl text_wd_off fixed bin  defined (cobol_$text_wd_off);
  1    92 dcl cobol_$con_wd_off fixed bin  ext;
  1    93 dcl con_wd_off fixed bin  defined (cobol_$con_wd_off);
  1    94 dcl cobol_$def_wd_off fixed bin  ext;
  1    95 dcl def_wd_off fixed bin  defined (cobol_$def_wd_off);
  1    96 dcl cobol_$def_max fixed bin  ext;
  1    97 dcl def_max fixed bin  defined (cobol_$def_max);
  1    98 dcl cobol_$link_wd_off fixed bin  ext;
  1    99 dcl link_wd_off fixed bin  defined (cobol_$link_wd_off);
  1   100 dcl cobol_$link_max fixed bin  ext;
  1   101 dcl link_max fixed bin  defined (cobol_$link_max);
  1   102 dcl cobol_$sym_wd_off fixed bin  ext;
  1   103 dcl sym_wd_off fixed bin  defined (cobol_$sym_wd_off);
  1   104 dcl cobol_$sym_max fixed bin  ext;
  1   105 dcl sym_max fixed bin  defined (cobol_$sym_max);
  1   106 dcl cobol_$reloc_text_max fixed bin(24)  ext;
  1   107 dcl reloc_text_max fixed bin(24)  defined (cobol_$reloc_text_max);
  1   108 dcl cobol_$reloc_def_max fixed bin(24)  ext;
  1   109 dcl reloc_def_max fixed bin(24)  defined (cobol_$reloc_def_max);
  1   110 dcl cobol_$reloc_link_max fixed bin(24)  ext;
  1   111 dcl reloc_link_max fixed bin(24)  defined (cobol_$reloc_link_max);
  1   112 dcl cobol_$reloc_sym_max fixed bin(24)  ext;
  1   113 dcl reloc_sym_max fixed bin(24)  defined (cobol_$reloc_sym_max);
  1   114 dcl cobol_$reloc_work_max fixed bin(24)  ext;
  1   115 dcl reloc_work_max fixed bin(24)  defined (cobol_$reloc_work_max);
  1   116 dcl cobol_$pd_map_index fixed bin  ext;
  1   117 dcl pd_map_index fixed bin  defined (cobol_$pd_map_index);
  1   118 dcl cobol_$cobol_data_wd_off fixed bin  ext;
  1   119 dcl cobol_data_wd_off fixed bin  defined (cobol_$cobol_data_wd_off);
  1   120 dcl cobol_$stack_off fixed bin  ext;
  1   121 dcl stack_off fixed bin  defined (cobol_$stack_off);
  1   122 dcl cobol_$max_stack_off fixed bin  ext;
  1   123 dcl max_stack_off fixed bin  defined (cobol_$max_stack_off);
  1   124 dcl cobol_$init_stack_off fixed bin  ext;
  1   125 dcl init_stack_off fixed bin  defined (cobol_$init_stack_off);
  1   126 dcl cobol_$pd_map_sw fixed bin  ext;
  1   127 dcl pd_map_sw fixed bin  defined (cobol_$pd_map_sw);
  1   128 dcl cobol_$next_tag fixed bin  ext;
  1   129 dcl next_tag fixed bin  defined (cobol_$next_tag);
  1   130 dcl cobol_$data_init_flag fixed bin  ext;
  1   131 dcl data_init_flag fixed bin  defined (cobol_$data_init_flag);
  1   132 dcl cobol_$seg_init_flag fixed bin  ext;
  1   133 dcl seg_init_flag fixed bin  defined (cobol_$seg_init_flag);
  1   134 dcl cobol_$alter_flag fixed bin  ext;
  1   135 dcl alter_flag fixed bin  defined (cobol_$alter_flag);
  1   136 dcl cobol_$sect_eop_flag fixed bin  ext;
  1   137 dcl sect_eop_flag fixed bin  defined (cobol_$sect_eop_flag);
  1   138 dcl cobol_$para_eop_flag fixed bin  ext;
  1   139 dcl para_eop_flag fixed bin  defined (cobol_$para_eop_flag);
  1   140 dcl cobol_$priority_no fixed bin  ext;
  1   141 dcl priority_no fixed bin  defined (cobol_$priority_no);
  1   142 dcl cobol_$compile_count fixed bin ext;
  1   143 dcl compile_count fixed bin defined (cobol_$compile_count);
  1   144 dcl cobol_$ptr_assumption_ind fixed bin ext;
  1   145 dcl ptr_assumption_ind fixed bin defined (cobol_$ptr_assumption_ind);
  1   146 dcl cobol_$reg_assumption_ind fixed bin ext;
  1   147 dcl reg_assumption_ind fixed bin defined (cobol_$reg_assumption_ind);
  1   148 dcl cobol_$perform_para_index fixed bin ext;
  1   149 dcl perform_para_index fixed bin defined (cobol_$perform_para_index);
  1   150 dcl cobol_$perform_sect_index fixed bin ext;
  1   151 dcl perform_sect_index fixed bin defined (cobol_$perform_sect_index);
  1   152 dcl cobol_$alter_index fixed bin ext;
  1   153 dcl alter_index fixed bin defined (cobol_$alter_index);
  1   154 dcl cobol_$list_off fixed bin ext;
  1   155 dcl list_off fixed bin defined (cobol_$list_off);
  1   156 dcl cobol_$constant_offset fixed bin ext;
  1   157 dcl constant_offset fixed bin defined (cobol_$constant_offset);
  1   158 dcl cobol_$misc_max fixed bin ext;
  1   159 dcl misc_max fixed bin defined (cobol_$misc_max);
  1   160 dcl cobol_$pd_map_max fixed bin ext;
  1   161 dcl pd_map_max fixed bin defined (cobol_$pd_map_max);
  1   162 dcl cobol_$map_data_max fixed bin ext;
  1   163 dcl map_data_max fixed bin defined (cobol_$map_data_max);
  1   164 dcl cobol_$fixup_max fixed bin ext;
  1   165 dcl fixup_max fixed bin defined (cobol_$fixup_max);
  1   166 dcl cobol_$tag_table_max fixed bin ext;
  1   167 dcl tag_table_max fixed bin defined (cobol_$tag_table_max);
  1   168 dcl cobol_$temp_token_max fixed bin ext;
  1   169 dcl temp_token_max fixed bin defined (cobol_$temp_token_max);
  1   170 dcl cobol_$allo1_max fixed bin ext;
  1   171 dcl allo1_max fixed bin defined (cobol_$allo1_max);
  1   172 dcl cobol_$eln_max fixed bin ext;
  1   173 dcl eln_max fixed bin defined (cobol_$eln_max);
  1   174 dcl cobol_$debug_enable fixed bin ext;
  1   175 dcl debug_enable fixed bin defined (cobol_$debug_enable);
  1   176 dcl cobol_$non_source_offset fixed bin ext;
  1   177 dcl non_source_offset fixed bin defined (cobol_$non_source_offset);
  1   178 dcl cobol_$initval_flag fixed bin ext;
  1   179 dcl initval_flag fixed bin defined (cobol_$initval_flag);
  1   180 dcl cobol_$date_compiled_sw fixed bin ext;
  1   181 dcl date_compiled_sw fixed bin defined (cobol_$date_compiled_sw);
  1   182 dcl cobol_$include_cnt fixed bin ext;
  1   183 dcl include_cnt fixed bin defined (cobol_$include_cnt);
  1   184 dcl cobol_$fs_charcnt fixed bin ext;
  1   185 dcl fs_charcnt fixed bin defined (cobol_$fs_charcnt);
  1   186 dcl cobol_$ws_charcnt fixed bin ext;
  1   187 dcl ws_charcnt fixed bin defined (cobol_$ws_charcnt);
  1   188 dcl cobol_$coms_charcnt fixed bin ext;
  1   189 dcl coms_charcnt fixed bin defined (cobol_$coms_charcnt);
  1   190 dcl cobol_$ls_charcnt fixed bin ext;
  1   191 dcl ls_charcnt fixed bin defined (cobol_$ls_charcnt);
  1   192 dcl cobol_$cons_charcnt fixed bin ext;
  1   193 dcl cons_charcnt fixed bin defined (cobol_$cons_charcnt);
  1   194 dcl cobol_$value_cnt fixed bin ext;
  1   195 dcl value_cnt fixed bin defined (cobol_$value_cnt);
  1   196 dcl cobol_$cd_cnt fixed bin ext;
  1   197 dcl cd_cnt fixed bin defined (cobol_$cd_cnt);
  1   198 dcl cobol_$fs_wdoff fixed bin ext;
  1   199 dcl fs_wdoff fixed bin defined (cobol_$fs_wdoff);
  1   200 dcl cobol_$ws_wdoff fixed bin ext;
  1   201 dcl ws_wdoff fixed bin defined (cobol_$ws_wdoff);
  1   202 dcl cobol_$coms_wdoff fixed bin ext;
  1   203 dcl coms_wdoff fixed bin defined (cobol_$coms_wdoff);
  1   204 
  1   205 /* CHARACTER */
  1   206 dcl cobol_$scratch_dir char (168)   aligned ext;
  1   207 dcl scratch_dir char (168)   aligned defined (cobol_$scratch_dir);			/* -42- */
  1   208 dcl cobol_$obj_seg_name char (32)   aligned ext;
  1   209 dcl obj_seg_name char (32)   aligned defined (cobol_$obj_seg_name);		/* -8- */
  1   210 
  1   211 /* BIT */
  1   212 dcl cobol_$xref_bypass bit(1) aligned ext;
  1   213 dcl xref_bypass bit(1) aligned defined (cobol_$xref_bypass);			/* -1- */
  1   214 dcl cobol_$same_sort_merge_proc bit(1) aligned ext;
  1   215 dcl same_sort_merge_proc bit(1) aligned defined (cobol_$same_sort_merge_proc);		/* -1- */
  1   216 
  1   217 
  1   218 /* END INCLUDE FILE ... cobol_incl.pl1*/
  1   219 
  1   220 
      498 
  2     1 
  2     2 /* BEGIN INCLUDE FILE ...   cobol_fixed_common.incl.pl1 */
  2     3 /* Modified on 10/27/82 by FCH, [5.1-1], cobol_cln added to save last line num, BUG543(phx13643) */
  2     4 /* Modified on 07/31/80 by FCH, [4.3-1], use_reporting field added for Report Writer */
  2     5 /* Modified on 03/30/79 by FCH, [4.1-1], -card option added */
  2     6 /* Modified on 03/30/79 by FCH, [4.0-2], -svNM option added */
  2     7 /* Modified on 03/02/79 by FCH, [4.0-1], -levNM option added */
  2     8 /* Modified by RAL on 10/13/78, [4.0-0], Added option exp from fil2. */
  2     9 /* Modified by BC on 06/20/77, descriptor added.	*/
  2    10 /* Modified by BC on 06/02/77, init_cd_seg, init_cd_offset added.	*/
  2    11 /* Modified by BC  on 1/21/77, options.profile added.	*/
  2    12 /* Modified by FCH on 7/6/76, sysin_fno & sysout_fno deleted, accept_device & display_device added */
  2    13 /* Modified by FCH on 5/20/77, comp_level added */
  2    14 
  2    15 
  2    16 /*     THE SIZE OF THIS STRUCTURE IN BYTES, (EXCLUDING VARIABLE
  2    17*   LENGTH ENTITIES), FOR EACH HARDWARE IMPLEMENTATION IS:
  2    18*
  2    19*   HARDWARE	|	SIZE (BYTES)
  2    20*   ---------------------------------
  2    21*   645/6180	|	464
  2    22*   P7		|	396
  2    23*   ---------------------------------
  2    24*   */
  2    25 
  2    26 dcl 	1 fixed_common based (  cobol_com_ptr),
  2    27     		2 prog_name char (30),
  2    28    		2 compiler_rev_no char (25),
  2    29     		2 phase_name char (6),
  2    30     		2 currency char (1),
  2    31     		2 fatal_no fixed bin,
  2    32     		2 warn_no fixed bin,
  2    33     		2 proc_counter fixed bin,
  2    34     		2 spec_tag_counter fixed bin,
  2    35     		2 file_count fixed bin,
  2    36     		2 filedescr_offsets (20) char (5),
  2    37     		2 perf_alter_info char (5),
  2    38     		2 another_perform_info char (5),
  2    39     		2 sort_in_info char (5),
  2    40     		2 odo_info char (5),
  2    41     		2 size_seg fixed bin,
  2    42     		2 size_offset fixed bin(24),
  2    43     		2 size_perform_info char (5),
  2    44     		2 rename_info char (5),
  2    45     		2 report_names char (5),
  2    46     		2 rw_buf_seg fixed bin,
  2    47     		2 rw_buf_offset fixed bin(24),
  2    48     		2 rw_buf_length fixed bin(24),
  2    49     		2 file_keys char (5),
  2    50     		2 search_keys char (5),
  2    51     		2 dd_seg_size fixed bin(24),
  2    52     		2 pd_seg_size fixed bin(24),
  2    53     		2 seg_limit fixed bin ,
  2    54     		2 number_of_dd_segs fixed bin,
  2    55     		2 seg_info char (5),
  2    56     		2 number_of_ls_pointers fixed bin,
  2    57     		2 link_sec_seg fixed bin,
  2    58     		2 link_sec_offset fixed bin(24),
  2    59     		2 sra_clauses fixed bin,
  2    60     		2 fix_up_info char (5),
  2    61     		2 linage_info char (5),
  2    62     		2 first_dd_item char (5),
  2    63     		2 sort_out_info char (5),
  2    64     		2 db_info char (5),
  2    65     		2 realm_info char (5),
  2    66     		2 rc_realm_info char (5),
  2    67     		2 last_file_key char (5),
  2    68     		2 prog_coll_seq fixed bin,
  2    69 		2 init_cd_seg fixed bin,
  2    70 		2 init_cd_offset fixed bin(24),
  2    71     		2 input_error_exit fixed bin,
  2    72    		2 output_error_exit fixed bin,
  2    73     		2 i_o_error_exit fixed bin,
  2    74     		2 extend_error_exit fixed bin,
  2    75     		2 dummy15 fixed bin,
  2    76     		2 options,
  2    77       			3 cu bit (1),
  2    78       			3 st bit (1),
  2    79       			3 wn bit (1),
  2    80       			3 obs bit (1),
  2    81       			3 dm bit (1),
  2    82       			3 xrl bit (1),
  2    83       			3 xrn bit (1),
  2    84       			3 src bit (1),
  2    85       			3 obj bit (1),
  2    86       			3 exs bit (1),
  2    87       			3 sck bit (1),
  2    88       			3 rno bit (1),
  2    89 			3 u_l bit (1),
  2    90 			3 cnv bit (1),
  2    91 			3 cos bit (1),
  2    92 			3 fmt bit (1),
  2    93 			3 profile bit(1),
  2    94 			3 nw bit (1),
  2    95 			3 exp bit (1),		/* [4.0-0] */
  2    96 			3 card bit (1),  /*[4.1-1]*/
  2    97 			3 fil2 bit (5),
  2    98 			3 m_map bit (1),
  2    99 			3 m_bf bit (1),
  2   100 			3 m_fat bit (1),
  2   101 			3 m_wn bit (1),
  2   102 			3 m_obs bit(1),
  2   103 			3 pd bit(1),
  2   104       			3 oc bit(1),
  2   105     		2 supervisor bit (1),
  2   106     		2 dec_comma bit (1),
  2   107     		2 init_cd bit (1),
  2   108     		2 corr bit (1),
  2   109     		2 initl bit (1),
  2   110     		2 debug bit (1),
  2   111     		2 report bit (1),
  2   112     		2 sync_in_prog bit (1),
  2   113     		2 pd_section bit (1),
  2   114     		2 list_switch bit (1),
  2   115     		2 alpha_cond bit (1),
  2   116     		2 num_cond bit (1),
  2   117     		2 spec_sysin bit (1),
  2   118     		2 spec_sysout bit (1),
  2   119     		2 cpl_files bit (1),
  2   120     		2 obj_dec_comma bit (1),
  2   121 		2 default_sign_type bit (3),
  2   122 		2 use_debug bit(1),
  2   123 		2 syntax_trace bit(1),
  2   124 		2 comp_defaults,
  2   125 			3 comp	bit(1),
  2   126 			3 comp_1	bit(1),
  2   127 			3 comp_2	bit(1),
  2   128 			3 comp_3	bit(1),
  2   129 			3 comp_4	bit(1),
  2   130 			3 comp_5	bit(1),
  2   131 			3 comp_6	bit(1),
  2   132 			3 comp_7	bit(1),
  2   133 			3 comp_8 bit(1),
  2   134 		2 disp_defaults,
  2   135 			3 disp	bit(1),
  2   136 			3 disp_1	bit(1),
  2   137 			3 disp_2	bit(1),
  2   138 			3 disp_3	bit(1),
  2   139 			3 disp_4	bit(1),
  2   140 			3 disp_5  bit(1),
  2   141 			3 disp_6  bit(1),
  2   142 			3 disp_7  bit(1),
  2   143 		2 descriptor bit(2),
  2   144 		2 levsv  bit(3),		/*[4.0-1]*/
  2   145 		2 use_reporting bit(1),	/*[4.3-1]*/
  2   146 		2 cd bit(1),		/*[4.4-1]*/
  2   147 		2 dummy17 bit(3),
  2   148    		2 lvl_rstr bit(32),
  2   149    		2 inst_rstr bit(32),
  2   150 		2 comp_level char(1),
  2   151 		2 dummy18 char(30),
  2   152 		2 object_sign char (1),
  2   153     		2 last_print_rec char (5),
  2   154     		2 coll_seq_info char (5),
  2   155     		2 sys_status_seg fixed bin,
  2   156    		2 sys_status_offset fixed bin(24),
  2   157    		2 compiler_id fixed bin,
  2   158    		2 date_comp_ln fixed bin,
  2   159    		2 compile_mode bit(36),
  2   160    		2 default_temp fixed bin,
  2   161    		2 accept_device fixed bin,
  2   162    		2 display_device fixed bin,
  2   163    		2 cobol_cln fixed bin,	/*[5.1-1]*/
  2   164 		2 alphabet_offset fixed bin;
  2   165 
  2   166 
  2   167 
  2   168 /* END INCLUDE FILE ...   cobol_fixed_common.incl.pl1 */
  2   169 
      499 
  3     1 
  3     2 /* BEGIN INCLUDE FILE ... cobol_ext_.incl.pl1 */
  3     3 /* Last modified on 06/17/76 by ORN */
  3     4 /* Last modified on 12/28/76 by FCH */
  3     5 /* Last modified on 12/01/80 by FCH */
  3     6 
  3     7 /*    <<<   SHARED EXTERNALS INCLUDE FILE   >>>    */
  3     8 
  3     9 
  3    10 dcl     cobol_ext_$cobol_afp ptr ext;
  3    11 dcl     cobol_afp ptr defined (  cobol_ext_$cobol_afp);
  3    12 dcl     cobol_ext_$cobol_analin_fileno ptr ext;
  3    13 dcl     cobol_analin_fileno ptr defined (  cobol_ext_$cobol_analin_fileno);
  3    14 dcl     cobol_ext_$report_first_token ptr ext;
  3    15 dcl     report_first_token ptr defined( cobol_ext_$report_first_token);
  3    16 dcl     cobol_ext_$report_last_token ptr ext;
  3    17 dcl     report_last_token ptr defined ( cobol_ext_$report_last_token);
  3    18 dcl     cobol_ext_$cobol_eltp ptr ext;
  3    19 dcl     cobol_eltp ptr defined (  cobol_ext_$cobol_eltp);
  3    20 dcl     cobol_ext_$cobol_cmfp ptr ext;
  3    21 dcl     cobol_cmfp ptr defined (  cobol_ext_$cobol_cmfp);
  3    22 dcl     cobol_ext_$cobol_com_fileno ptr ext;
  3    23 dcl     cobol_com_fileno ptr defined (  cobol_ext_$cobol_com_fileno);
  3    24 dcl     cobol_ext_$cobol_com_ptr ptr ext;
  3    25 dcl     cobol_com_ptr ptr defined (  cobol_ext_$cobol_com_ptr);
  3    26 dcl     cobol_ext_$cobol_dfp ptr ext;
  3    27 dcl     cobol_dfp ptr defined (  cobol_ext_$cobol_dfp);
  3    28 dcl     cobol_ext_$cobol_hfp ptr ext;
  3    29 dcl     cobol_hfp ptr defined (  cobol_ext_$cobol_hfp);
  3    30 dcl     cobol_ext_$cobol_m1fp ptr ext;
  3    31 dcl     cobol_m1fp ptr defined (  cobol_ext_$cobol_m1fp);
  3    32 dcl     cobol_ext_$cobol_m2fp ptr ext;
  3    33 dcl     cobol_m2fp ptr defined (  cobol_ext_$cobol_m2fp);
  3    34 dcl     cobol_ext_$cobol_min1_fileno ptr ext;
  3    35 dcl     cobol_min1_fileno ptr defined (  cobol_ext_$cobol_min1_fileno);
  3    36 dcl     cobol_ext_$cobol_min2_fileno_ptr ptr ext;
  3    37 dcl     cobol_min2_fileno_ptr ptr defined (  cobol_ext_$cobol_min2_fileno_ptr);
  3    38 dcl     cobol_ext_$cobol_name_fileno ptr ext;
  3    39 dcl     cobol_name_fileno ptr defined (  cobol_ext_$cobol_name_fileno);
  3    40 dcl     cobol_ext_$cobol_name_fileno_ptr ptr ext;
  3    41 dcl     cobol_name_fileno_ptr ptr defined (  cobol_ext_$cobol_name_fileno_ptr);
  3    42 dcl     cobol_ext_$cobol_ntfp ptr ext;
  3    43 dcl     cobol_ntfp ptr defined (  cobol_ext_$cobol_ntfp);
  3    44 dcl     cobol_ext_$cobol_pdofp ptr ext;
  3    45 dcl     cobol_pdofp ptr defined (  cobol_ext_$cobol_pdofp);
  3    46 dcl     cobol_ext_$cobol_pfp ptr ext;
  3    47 dcl     cobol_pfp ptr defined (  cobol_ext_$cobol_pfp);
  3    48 dcl     cobol_ext_$cobol_rm2fp ptr ext;
  3    49 dcl     cobol_rm2fp ptr defined (  cobol_ext_$cobol_rm2fp);
  3    50 dcl     cobol_ext_$cobol_rmin2fp ptr ext;
  3    51 dcl     cobol_rmin2fp ptr defined (  cobol_ext_$cobol_rmin2fp);
  3    52 dcl     cobol_ext_$cobol_curr_in ptr ext;
  3    53 dcl     cobol_curr_in ptr defined (  cobol_ext_$cobol_curr_in);
  3    54 dcl     cobol_ext_$cobol_curr_out ptr ext;
  3    55 dcl     cobol_curr_out ptr defined (  cobol_ext_$cobol_curr_out);
  3    56 dcl     cobol_ext_$cobol_sfp ptr ext;
  3    57 dcl     cobol_sfp ptr defined (  cobol_ext_$cobol_sfp);
  3    58 dcl     cobol_ext_$cobol_w1p ptr ext;
  3    59 dcl     cobol_w1p ptr defined (  cobol_ext_$cobol_w1p);
  3    60 dcl     cobol_ext_$cobol_w2p ptr ext;
  3    61 dcl     cobol_w2p ptr defined (  cobol_ext_$cobol_w2p);
  3    62 dcl     cobol_ext_$cobol_w3p ptr ext;
  3    63 dcl     cobol_w3p ptr defined (  cobol_ext_$cobol_w3p);
  3    64 dcl     cobol_ext_$cobol_w5p ptr ext;
  3    65 dcl     cobol_w5p ptr defined (  cobol_ext_$cobol_w5p);
  3    66 dcl     cobol_ext_$cobol_w6p ptr ext;
  3    67 dcl     cobol_w6p ptr defined (  cobol_ext_$cobol_w6p);
  3    68 dcl     cobol_ext_$cobol_w7p ptr ext;
  3    69 dcl     cobol_w7p ptr defined (  cobol_ext_$cobol_w7p);
  3    70 dcl     cobol_ext_$cobol_x3fp ptr ext;
  3    71 dcl     cobol_x3fp ptr defined (  cobol_ext_$cobol_x3fp);
  3    72 dcl	cobol_ext_$cobol_rwdd ptr ext;
  3    73 dcl	cobol_rwdd ptr defined(cobol_ext_$cobol_rwdd);
  3    74 dcl	cobol_ext_$cobol_rwpd ptr ext;
  3    75 dcl	cobol_rwpd ptr defined(cobol_ext_$cobol_rwpd);
  3    76 
  3    77 
  3    78 dcl     cobol_ext_$cobol_fileno1 fixed bin(24)ext;
  3    79 dcl     cobol_fileno1 fixed bin(24)defined (  cobol_ext_$cobol_fileno1);				
  3    80 dcl     cobol_ext_$cobol_options_len fixed bin(24)ext;
  3    81 dcl     cobol_options_len fixed bin(24)defined (  cobol_ext_$cobol_options_len);
  3    82 dcl     cobol_ext_$cobol_pdout_fileno fixed bin(24)ext;
  3    83 dcl     cobol_pdout_fileno fixed bin(24)defined (  cobol_ext_$cobol_pdout_fileno);			
  3    84 dcl     cobol_ext_$cobol_print_fileno fixed bin(24)ext;
  3    85 dcl     cobol_print_fileno fixed bin(24)defined (  cobol_ext_$cobol_print_fileno);			
  3    86 dcl     cobol_ext_$cobol_rmin2_fileno fixed bin(24)ext;
  3    87 dcl     cobol_rmin2_fileno fixed bin(24)defined (  cobol_ext_$cobol_rmin2_fileno);
  3    88 dcl     cobol_ext_$cobol_x1_fileno fixed bin(24)ext;
  3    89 dcl     cobol_x1_fileno fixed bin(24)defined (  cobol_ext_$cobol_x1_fileno);				
  3    90 dcl     cobol_ext_$cobol_x2_fileno fixed bin(24)ext;
  3    91 dcl     cobol_x2_fileno fixed bin(24)defined (  cobol_ext_$cobol_x2_fileno);
  3    92 dcl     cobol_ext_$cobol_x3_fileno fixed bin(24)ext;
  3    93 dcl     cobol_x3_fileno fixed bin(24)defined (  cobol_ext_$cobol_x3_fileno);
  3    94 
  3    95 dcl     cobol_ext_$cobol_lpr char (5) ext;
  3    96 dcl     cobol_lpr char (5) defined (  cobol_ext_$cobol_lpr);				/* -2- */
  3    97 dcl     cobol_ext_$cobol_options char (120) ext;
  3    98 dcl     cobol_options char (120) defined (  cobol_ext_$cobol_options);          			/* -30- */
  3    99 
  3   100 dcl     cobol_ext_$cobol_xlast8 bit (1) ext;
  3   101 dcl     cobol_xlast8 bit (1) defined (  cobol_ext_$cobol_xlast8);				/* -1- */
  3   102 dcl     cobol_ext_$report_exists bit (1) ext;
  3   103 dcl     report_exists bit (1) defined (  cobol_ext_$report_exists);
  3   104 
  3   105 
  3   106 /*    <<<   END OF SHARED EXTERNALS INCLUDE FILE   >>>    */
  3   107 /* END INCLUDE FILE ... cobol_ext_.incl.pl1 */
  3   108 
      500 
      501 
      502      end cobol_iocall;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/24/89  0830.8  cobol_iocall.pl1                  >spec>install>MR12.3-1048>cobol_iocall.pl1
498          1    11/11/82  1712.7  cobol_.incl.pl1                   >ldd>include>cobol_.incl.pl1
499          2    11/11/82  1712.8  cobol_fixed_common.incl.pl1       >ldd>include>cobol_fixed_common.incl.pl1
500          3    03/27/82  0431.3  cobol_ext_.incl.pl1               >ldd>include>cobol_ext_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
a_or_q                          000106 automatic       fixed bin(17,0)          dcl 182 set ref 289* 292 296
addr                                                   builtin function         dcl 493 ref 229 230 231 232 233 234 235 236 237 238
                                                                                  311 311 374 401 401 437 437 469 469
addr_struct                     000056 internal static structure                level 1 unaligned dcl 68 set ref 238
addr_struct_ptr                 000314 internal static pointer                  dcl 204 set ref 238*
aloff                           000104 automatic       fixed bin(17,0)          dcl 180 set ref 250* 252* 354 372 389 439 455 484
already_there             3     000260 internal static fixed bin(17,0)          level 2 dcl 163 set ref 290
arg                       4            based           structure                array level 2 unaligned dcl 43
arglist_off               1            based           fixed bin(17,0)          level 2 dcl 43 set ref 245 252 325 357 428 453 484
                                                                                  484*
argptr                                 parameter       pointer                  dcl 30 ref 27 242 245 247 252 254 260 260 262 265
                                                                                  269 271 271 274 277 277 281 282 284 287 292 292
                                                                                  303 306 313 315 320 322 322 324 325 325 325 328
                                                                                  330 330 330 330 337 339 344 344 348 357 357 372
                                                                                  373 390 395 395 395 395 395 397 410 412 413 416
                                                                                  418 419 428 428 452 453 453 465 484 484
args                                   based           structure                level 1 unaligned dcl 43
basic_struct                           based           structure                level 1 unaligned dcl 78
char4b                                 based           char(4)                  packed unaligned dcl 173 set ref 374*
cobol_$text_wd_off              000346 external static fixed bin(17,0)          dcl 1-90 ref 310 332 375 400 436 468
cobol_addr                      000340 constant        entry                    external dcl 219 ref 265 452
cobol_alloc$stack               000326 constant        entry                    external dcl 212 ref 250
cobol_com_ptr                          defined         pointer                  dcl 3-25 ref 308 398 434 466
cobol_emit                      000332 constant        entry                    external dcl 214 ref 360 384 482
cobol_ext_$cobol_com_ptr        000350 external static pointer                  dcl 3-24 ref 308 308 398 398 434 434 466 466
cobol_make_fixup                000324 constant        entry                    external dcl 211 ref 311 401 437 469
cobol_make_link$type_4          000322 constant        entry                    external dcl 209 ref 395 465
cobol_make_type9$type2_3        000342 constant        entry                    external dcl 220 ref 324
cobol_pointer_register$call     000336 constant        entry                    external dcl 217 ref 388
cobol_pointer_register$get      000334 constant        entry                    external dcl 215 ref 253 266 305
cobol_pool                      000320 constant        entry                    external dcl 208 ref 330 374
cobol_register$load             000330 constant        entry                    external dcl 213 ref 288
cobol_reset_r$after_call        000316 constant        entry                    external dcl 206 ref 483
cobol_set_pr                    000344 constant        entry                    external dcl 222 ref 325
conoff                          000103 automatic       fixed bin(17,0)          dcl 179 set ref 330* 332
data_name                              based           structure                level 1 unaligned dcl 62
desc                                   based           bit(36)                  array packed unaligned dcl 59 set ref 374
descptr                                parameter       pointer                  dcl 31 ref 27 248 369 374 478
dlmod                                  constant        bit(6)                   initial packed unaligned dcl 119 ref 391
dmod                            000002 constant        bit(6)                   initial array packed unaligned dcl 120 ref 292
eax1                                   constant        bit(12)                  initial packed unaligned dcl 125 ref 389
ename                           000067 internal static char(20)                 initial array packed unaligned dcl 105 set ref 465*
entry_op                        000004 constant        bit(18)                  initial array packed unaligned dcl 113 ref 480
entryno                                based           fixed bin(17,0)          level 2 dcl 43 ref 242 465
epp2                                   constant        bit(12)                  initial packed unaligned dcl 126 ref 300 306 315 350
                                                                                  403 431 471
epp2_                                  constant        bit(12)                  initial packed unaligned dcl 127 ref 333 376
firsttime                       000271 internal static bit(1)                   initial packed unaligned dcl 191 set ref 226 239*
fixed                                                  builtin function         dcl 493 ref 289
fixed_common                           based           structure                level 1 unaligned dcl 2-26
fixup_directive                 000010 internal static structure                level 1 dcl 34 set ref 311 311 401 401 437 437 469
                                                                                  469
fld_                                   constant        bit(12)                  initial packed unaligned dcl 123 ref 391
full_epp2                              constant        bit(36)                  initial packed unaligned dcl 131 ref 264 451
i                               000100 automatic       fixed bin(17,0)          dcl 177 set ref 247* 248* 248 250* 260* 262 265 269
                                                                                  271 271 274 277 277 281 282 284 287 292 292 303
                                                                                  306 313 315 320 322 322 324 325 325 328 330 330
                                                                                  330 330 337 339 344 344 348 354 357* 373* 374 380*
                                                                                  472
ic                              000107 automatic       fixed bin(17,0)          dcl 183 set ref 258* 267* 294* 294 296 298* 298 300
                                                                                  301* 301 316* 318* 334* 349 350 351* 351 355 357*
                                                                                  357 360 360* 365* 371* 375 376 381 382* 382 384
                                                                                  405* 441* 445* 457* 459* 468 471 475* 475 480 482*
icmod                                  constant        bit(6)                   initial packed unaligned dcl 117 ref 333 376
indirect                 11(18)        based           bit(1)                   array level 3 packed packed unaligned dcl 43 ref 325
                                                                                  337
indmod                                 constant        bit(6)                   initial packed unaligned dcl 118 ref 306 403 431 471
instr                           000207 internal static bit(36)                  array dcl 133 set ref 229 230 264* 284* 292* 296*
                                                                                  300* 306* 315* 333* 349* 350* 355* 376* 381* 389*
                                                                                  391* 403* 431* 440* 451* 456* 471* 480*
instr3_ptr                      000274 internal static pointer                  dcl 196 set ref 230* 452*
instr_ptr                       000272 internal static pointer                  dcl 195 set ref 229* 265* 360* 384* 482*
j                               000101 automatic       fixed bin(17,0)          dcl 177 set ref 255* 256* 362* 363* 372* 380 472*
                                                                                  473
k                               000102 automatic       fixed bin(17,0)          dcl 178 set ref 242* 244* 247 260 354 372 373 390
                                                                                  393
ld_                             000000 constant        bit(12)                  initial array packed unaligned dcl 130 ref 292
length                                                 builtin function         dcl 493 ref 330 330 395 395
linkoff                         000111 automatic       fixed bin(17,0)          dcl 185 set ref 395* 397* 403 465* 471
linksw                          000115 automatic       bit(1)                   packed unaligned dcl 190 set ref 409* 414* 420* 422
literal                  10(18) 000260 internal static bit(18)                  level 2 packed packed unaligned dcl 163 set ref 287*
loc                             000116 automatic       bit(18)                  dcl 192 set ref 276* 281* 284 296 300 343* 348* 349
                                                                                  350
location                  0(14) 000010 internal static structure                level 2 packed packed unaligned dcl 34
mod                                                    builtin function         dcl 493 ref 341
n                         3            based           fixed bin(17,0)          level 2 dcl 43 ref 247 260 260 372 373 390
null                                                   builtin function         dcl 493 ref 248 369 384 384 478
off                      10            based           fixed bin(17,0)          array level 3 in structure "args" dcl 43
                                                                                  in procedure "cobol_iocall" set ref 313 315 339
                                                                                  344* 348 413
off                             000113 automatic       fixed bin(17,0)          dcl 187 in procedure "cobol_iocall" set ref 374* 375
                                                                                  413* 419*
offset                    4            based           fixed bin(17,0)          level 2 in structure "basic_struct" dcl 78
                                                                                  in procedure "cobol_iocall" ref 419
offset                    0(18) 000010 internal static fixed bin(17,0)          level 3 in structure "fixup_directive" packed packed
                                                                                  unaligned dcl 34 in procedure "cobol_iocall" set
                                                                                  ref 310* 400* 436* 468*
opno                            000110 automatic       fixed bin(17,0)          dcl 184 set ref 406* 474* 478* 478 480
options                 133            based           structure                level 2 packed packed unaligned dcl 2-26
overlay                  11(19)        based           bit(1)                   array level 3 packed packed unaligned dcl 43 ref 277
                                                                                  344
pr0_struct                      000233 internal static structure                level 1 unaligned dcl 138 set ref 233
pr0_struct_ptr                  000302 internal static pointer                  dcl 199 set ref 233*
pr2_struct                      000242 internal static structure                level 1 unaligned dcl 146 set ref 234
pr2_struct_ptr                  000304 internal static pointer                  dcl 200 set ref 234* 253* 266* 325*
pr4_struct                      000251 internal static structure                level 1 unaligned dcl 154 set ref 235
pr4_struct_ptr                  000306 internal static pointer                  dcl 201 set ref 235* 305*
profile                 133(16)        based           bit(1)                   level 3 packed packed unaligned dcl 2-26 ref 308 398
                                                                                  434 466
pt                        4            based           pointer                  array level 3 dcl 43 set ref 265* 322 322 324* 330
                                                                                  330 330 330 395 395 395 395 416 418 419 452*
reg                             000117 automatic       bit(3)                   dcl 193 in procedure "cobol_iocall" set ref 271*
                                                                                  273* 276 281
reg                      11(22)        based           bit(3)                   array level 3 in structure "args" packed packed
                                                                                  unaligned dcl 43 in procedure "cobol_iocall" ref
                                                                                  271
reg_no                    1     000260 internal static bit(4)                   level 2 packed packed unaligned dcl 163 set ref 289
reg_struct                      000260 internal static structure                level 1 unaligned dcl 163 set ref 236
reg_struct_ptr                  000310 internal static pointer                  dcl 202 set ref 236* 288*
reg_sw                   11(21)        based           bit(1)                   array level 3 packed packed unaligned dcl 43 ref 271
reloc                           000217 internal static bit(5)                   initial array dcl 134 set ref 231 232 256* 307* 363*
                                                                                  404* 433* 473*
reloc5_ptr                      000300 internal static pointer                  dcl 198 set ref 232* 452*
reloc_ptr                       000276 internal static pointer                  dcl 197 set ref 231* 265* 360* 482*
repeat_nogen             11(20)        based           bit(1)                   array level 3 packed packed unaligned dcl 43 ref 325
                                                                                  357 428 453
seg                             000112 automatic       fixed bin(17,0)          dcl 186 in procedure "cobol_iocall" set ref 412*
                                                                                  418* 431
seg                       3            based           fixed bin(17,0)          level 2 in structure "basic_struct" dcl 78
                                                                                  in procedure "cobol_iocall" ref 416 418
seg                       7            based           fixed bin(17,0)          array level 3 in structure "args" dcl 43
                                                                                  in procedure "cobol_iocall" set ref 274 277* 281
                                                                                  306 397 412
spri2                                  constant        bit(12)                  initial packed unaligned dcl 128 ref 349 355 381 440
                                                                                  456
st                              000001 constant        bit(12)                  initial array packed unaligned dcl 129 ref 296
stacktemp_off             2            based           fixed bin(17,0)          level 2 dcl 43 ref 254
stoff                           000105 automatic       fixed bin(17,0)          dcl 181 set ref 254* 276 277 279* 279 341 341* 341
                                                                                  343 344 346* 346
stz                                    constant        bit(12)                  initial packed unaligned dcl 122 ref 284
substr                                                 builtin function         dcl 493 ref 276 281 306 315 330 330 333 343 348 355
                                                                                  376 381 389 391 395 395 403 431 440 456 471
tsx0                                   constant        bit(12)                  initial packed unaligned dcl 124 ref 480
type                      3            based           fixed bin(15,0)          level 2 in structure "data_name" dcl 62 in procedure
                                                                                  "cobol_iocall" ref 322
type                      6            based           fixed bin(17,0)          array level 3 in structure "args" dcl 43
                                                                                  in procedure "cobol_iocall" ref 262 269 282 292
                                                                                  303 320 328 395 410
type9                           000012 internal static char(144)                dcl 61 set ref 237
type9_ptr                       000312 internal static pointer                  dcl 203 set ref 237* 322* 324* 325*
unspec                                                 builtin function         dcl 493 ref 276 281 306 315 333 343 348 355 376 381
                                                                                  389 391 403 431 440 456 471
utemp                           000114 automatic       fixed bin(17,0)          dcl 188 set ref 332* 333 354* 355 375* 376 380* 381
                                                                                  390* 391 439* 440 455* 456
value                    11            based           bit(18)                  array level 3 packed packed unaligned dcl 43 ref 284
                                                                                  287 292
varstring                              based           varying char(65)         dcl 175 ref 330 330 330 330 395 395 395 395

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
addrel                                                 builtin function         dcl 493
allo1_max                              defined         fixed bin(17,0)          dcl 1-171
allo1_ptr                              defined         pointer                  dcl 1-67
alter_flag                             defined         fixed bin(17,0)          dcl 1-135
alter_index                            defined         fixed bin(17,0)          dcl 1-153
alter_list_ptr                         defined         pointer                  dcl 1-39
binary                                                 builtin function         dcl 493
cd_cnt                                 defined         fixed bin(17,0)          dcl 1-197
cobol_$allo1_max                       external static fixed bin(17,0)          dcl 1-170
cobol_$allo1_ptr                       external static pointer                  dcl 1-66
cobol_$alter_flag                      external static fixed bin(17,0)          dcl 1-134
cobol_$alter_index                     external static fixed bin(17,0)          dcl 1-152
cobol_$alter_list_ptr                  external static pointer                  dcl 1-38
cobol_$cd_cnt                          external static fixed bin(17,0)          dcl 1-196
cobol_$cobol_data_wd_off               external static fixed bin(17,0)          dcl 1-118
cobol_$compile_count                   external static fixed bin(17,0)          dcl 1-142
cobol_$coms_charcnt                    external static fixed bin(17,0)          dcl 1-188
cobol_$coms_wdoff                      external static fixed bin(17,0)          dcl 1-202
cobol_$con_end_ptr                     external static pointer                  dcl 1-10
cobol_$con_wd_off                      external static fixed bin(17,0)          dcl 1-92
cobol_$cons_charcnt                    external static fixed bin(17,0)          dcl 1-192
cobol_$constant_offset                 external static fixed bin(17,0)          dcl 1-156
cobol_$data_init_flag                  external static fixed bin(17,0)          dcl 1-130
cobol_$date_compiled_sw                external static fixed bin(17,0)          dcl 1-180
cobol_$debug_enable                    external static fixed bin(17,0)          dcl 1-174
cobol_$def_base_ptr                    external static pointer                  dcl 1-12
cobol_$def_max                         external static fixed bin(17,0)          dcl 1-96
cobol_$def_wd_off                      external static fixed bin(17,0)          dcl 1-94
cobol_$diag_ptr                        external static pointer                  dcl 1-70
cobol_$eln_max                         external static fixed bin(17,0)          dcl 1-172
cobol_$eln_ptr                         external static pointer                  dcl 1-68
cobol_$fixup_max                       external static fixed bin(17,0)          dcl 1-164
cobol_$fixup_ptr                       external static pointer                  dcl 1-30
cobol_$fs_charcnt                      external static fixed bin(17,0)          dcl 1-184
cobol_$fs_wdoff                        external static fixed bin(17,0)          dcl 1-198
cobol_$include_cnt                     external static fixed bin(17,0)          dcl 1-182
cobol_$include_info_ptr                external static pointer                  dcl 1-86
cobol_$init_stack_off                  external static fixed bin(17,0)          dcl 1-124
cobol_$initval_base_ptr                external static pointer                  dcl 1-32
cobol_$initval_file_ptr                external static pointer                  dcl 1-34
cobol_$initval_flag                    external static fixed bin(17,0)          dcl 1-178
cobol_$link_base_ptr                   external static pointer                  dcl 1-14
cobol_$link_max                        external static fixed bin(17,0)          dcl 1-100
cobol_$link_wd_off                     external static fixed bin(17,0)          dcl 1-98
cobol_$list_off                        external static fixed bin(17,0)          dcl 1-154
cobol_$list_ptr                        external static pointer                  dcl 1-64
cobol_$ls_charcnt                      external static fixed bin(17,0)          dcl 1-190
cobol_$main_pcs_ptr                    external static pointer                  dcl 1-84
cobol_$map_data_max                    external static fixed bin(17,0)          dcl 1-162
cobol_$map_data_ptr                    external static pointer                  dcl 1-54
cobol_$max_stack_off                   external static fixed bin(17,0)          dcl 1-122
cobol_$minpral5_ptr                    external static pointer                  dcl 1-50
cobol_$misc_base_ptr                   external static pointer                  dcl 1-60
cobol_$misc_end_ptr                    external static pointer                  dcl 1-62
cobol_$misc_max                        external static fixed bin(17,0)          dcl 1-158
cobol_$next_tag                        external static fixed bin(17,0)          dcl 1-128
cobol_$non_source_offset               external static fixed bin(17,0)          dcl 1-176
cobol_$ntbuf_ptr                       external static pointer                  dcl 1-82
cobol_$obj_seg_name                    external static char(32)                 dcl 1-208
cobol_$op_con_ptr                      external static pointer                  dcl 1-80
cobol_$para_eop_flag                   external static fixed bin(17,0)          dcl 1-138
cobol_$pd_map_index                    external static fixed bin(17,0)          dcl 1-116
cobol_$pd_map_max                      external static fixed bin(17,0)          dcl 1-160
cobol_$pd_map_ptr                      external static pointer                  dcl 1-28
cobol_$pd_map_sw                       external static fixed bin(17,0)          dcl 1-126
cobol_$perform_list_ptr                external static pointer                  dcl 1-36
cobol_$perform_para_index              external static fixed bin(17,0)          dcl 1-148
cobol_$perform_sect_index              external static fixed bin(17,0)          dcl 1-150
cobol_$priority_no                     external static fixed bin(17,0)          dcl 1-140
cobol_$ptr_assumption_ind              external static fixed bin(17,0)          dcl 1-144
cobol_$ptr_status_ptr                  external static pointer                  dcl 1-56
cobol_$reg_assumption_ind              external static fixed bin(17,0)          dcl 1-146
cobol_$reg_status_ptr                  external static pointer                  dcl 1-58
cobol_$reloc_def_base_ptr              external static pointer                  dcl 1-20
cobol_$reloc_def_max                   external static fixed bin(24,0)          dcl 1-108
cobol_$reloc_link_base_ptr             external static pointer                  dcl 1-22
cobol_$reloc_link_max                  external static fixed bin(24,0)          dcl 1-110
cobol_$reloc_sym_base_ptr              external static pointer                  dcl 1-24
cobol_$reloc_sym_max                   external static fixed bin(24,0)          dcl 1-112
cobol_$reloc_text_base_ptr             external static pointer                  dcl 1-18
cobol_$reloc_text_max                  external static fixed bin(24,0)          dcl 1-106
cobol_$reloc_work_base_ptr             external static pointer                  dcl 1-26
cobol_$reloc_work_max                  external static fixed bin(24,0)          dcl 1-114
cobol_$reswd_ptr                       external static pointer                  dcl 1-78
cobol_$same_sort_merge_proc            external static bit(1)                   dcl 1-214
cobol_$scratch_dir                     external static char(168)                dcl 1-206
cobol_$sect_eop_flag                   external static fixed bin(17,0)          dcl 1-136
cobol_$seg_init_flag                   external static fixed bin(17,0)          dcl 1-132
cobol_$seg_init_list_ptr               external static pointer                  dcl 1-40
cobol_$stack_off                       external static fixed bin(17,0)          dcl 1-120
cobol_$statement_info_ptr              external static pointer                  dcl 1-76
cobol_$sym_base_ptr                    external static pointer                  dcl 1-16
cobol_$sym_max                         external static fixed bin(17,0)          dcl 1-104
cobol_$sym_wd_off                      external static fixed bin(17,0)          dcl 1-102
cobol_$tag_table_max                   external static fixed bin(17,0)          dcl 1-166
cobol_$tag_table_ptr                   external static pointer                  dcl 1-52
cobol_$temp_token_area_ptr             external static pointer                  dcl 1-42
cobol_$temp_token_max                  external static fixed bin(17,0)          dcl 1-168
cobol_$temp_token_ptr                  external static pointer                  dcl 1-44
cobol_$text_base_ptr                   external static pointer                  dcl 1-8
cobol_$token_block1_ptr                external static pointer                  dcl 1-46
cobol_$token_block2_ptr                external static pointer                  dcl 1-48
cobol_$value_cnt                       external static fixed bin(17,0)          dcl 1-194
cobol_$ws_charcnt                      external static fixed bin(17,0)          dcl 1-186
cobol_$ws_wdoff                        external static fixed bin(17,0)          dcl 1-200
cobol_$xref_bypass                     external static bit(1)                   dcl 1-212
cobol_$xref_chain_ptr                  external static pointer                  dcl 1-74
cobol_$xref_token_ptr                  external static pointer                  dcl 1-72
cobol_afp                              defined         pointer                  dcl 3-11
cobol_analin_fileno                    defined         pointer                  dcl 3-13
cobol_cmfp                             defined         pointer                  dcl 3-21
cobol_com_fileno                       defined         pointer                  dcl 3-23
cobol_curr_in                          defined         pointer                  dcl 3-53
cobol_curr_out                         defined         pointer                  dcl 3-55
cobol_data_wd_off                      defined         fixed bin(17,0)          dcl 1-119
cobol_dfp                              defined         pointer                  dcl 3-27
cobol_eltp                             defined         pointer                  dcl 3-19
cobol_ext_$cobol_afp                   external static pointer                  dcl 3-10
cobol_ext_$cobol_analin_fileno         external static pointer                  dcl 3-12
cobol_ext_$cobol_cmfp                  external static pointer                  dcl 3-20
cobol_ext_$cobol_com_fileno            external static pointer                  dcl 3-22
cobol_ext_$cobol_curr_in               external static pointer                  dcl 3-52
cobol_ext_$cobol_curr_out              external static pointer                  dcl 3-54
cobol_ext_$cobol_dfp                   external static pointer                  dcl 3-26
cobol_ext_$cobol_eltp                  external static pointer                  dcl 3-18
cobol_ext_$cobol_fileno1               external static fixed bin(24,0)          dcl 3-78
cobol_ext_$cobol_hfp                   external static pointer                  dcl 3-28
cobol_ext_$cobol_lpr                   external static char(5)                  packed unaligned dcl 3-95
cobol_ext_$cobol_m1fp                  external static pointer                  dcl 3-30
cobol_ext_$cobol_m2fp                  external static pointer                  dcl 3-32
cobol_ext_$cobol_min1_fileno           external static pointer                  dcl 3-34
cobol_ext_$cobol_min2_fileno_ptr       external static pointer                  dcl 3-36
cobol_ext_$cobol_name_fileno           external static pointer                  dcl 3-38
cobol_ext_$cobol_name_fileno_ptr       external static pointer                  dcl 3-40
cobol_ext_$cobol_ntfp                  external static pointer                  dcl 3-42
cobol_ext_$cobol_options               external static char(120)                packed unaligned dcl 3-97
cobol_ext_$cobol_options_len           external static fixed bin(24,0)          dcl 3-80
cobol_ext_$cobol_pdofp                 external static pointer                  dcl 3-44
cobol_ext_$cobol_pdout_fileno          external static fixed bin(24,0)          dcl 3-82
cobol_ext_$cobol_pfp                   external static pointer                  dcl 3-46
cobol_ext_$cobol_print_fileno          external static fixed bin(24,0)          dcl 3-84
cobol_ext_$cobol_rm2fp                 external static pointer                  dcl 3-48
cobol_ext_$cobol_rmin2_fileno          external static fixed bin(24,0)          dcl 3-86
cobol_ext_$cobol_rmin2fp               external static pointer                  dcl 3-50
cobol_ext_$cobol_rwdd                  external static pointer                  dcl 3-72
cobol_ext_$cobol_rwpd                  external static pointer                  dcl 3-74
cobol_ext_$cobol_sfp                   external static pointer                  dcl 3-56
cobol_ext_$cobol_w1p                   external static pointer                  dcl 3-58
cobol_ext_$cobol_w2p                   external static pointer                  dcl 3-60
cobol_ext_$cobol_w3p                   external static pointer                  dcl 3-62
cobol_ext_$cobol_w5p                   external static pointer                  dcl 3-64
cobol_ext_$cobol_w6p                   external static pointer                  dcl 3-66
cobol_ext_$cobol_w7p                   external static pointer                  dcl 3-68
cobol_ext_$cobol_x1_fileno             external static fixed bin(24,0)          dcl 3-88
cobol_ext_$cobol_x2_fileno             external static fixed bin(24,0)          dcl 3-90
cobol_ext_$cobol_x3_fileno             external static fixed bin(24,0)          dcl 3-92
cobol_ext_$cobol_x3fp                  external static pointer                  dcl 3-70
cobol_ext_$cobol_xlast8                external static bit(1)                   packed unaligned dcl 3-100
cobol_ext_$report_exists               external static bit(1)                   packed unaligned dcl 3-102
cobol_ext_$report_first_token          external static pointer                  dcl 3-14
cobol_ext_$report_last_token           external static pointer                  dcl 3-16
cobol_fileno1                          defined         fixed bin(24,0)          dcl 3-79
cobol_hfp                              defined         pointer                  dcl 3-29
cobol_lpr                              defined         char(5)                  packed unaligned dcl 3-96
cobol_m1fp                             defined         pointer                  dcl 3-31
cobol_m2fp                             defined         pointer                  dcl 3-33
cobol_min1_fileno                      defined         pointer                  dcl 3-35
cobol_min2_fileno_ptr                  defined         pointer                  dcl 3-37
cobol_name_fileno                      defined         pointer                  dcl 3-39
cobol_name_fileno_ptr                  defined         pointer                  dcl 3-41
cobol_ntfp                             defined         pointer                  dcl 3-43
cobol_options                          defined         char(120)                packed unaligned dcl 3-98
cobol_options_len                      defined         fixed bin(24,0)          dcl 3-81
cobol_pdofp                            defined         pointer                  dcl 3-45
cobol_pdout_fileno                     defined         fixed bin(24,0)          dcl 3-83
cobol_pfp                              defined         pointer                  dcl 3-47
cobol_print_fileno                     defined         fixed bin(24,0)          dcl 3-85
cobol_rm2fp                            defined         pointer                  dcl 3-49
cobol_rmin2_fileno                     defined         fixed bin(24,0)          dcl 3-87
cobol_rmin2fp                          defined         pointer                  dcl 3-51
cobol_rwdd                             defined         pointer                  dcl 3-73
cobol_rwpd                             defined         pointer                  dcl 3-75
cobol_sfp                              defined         pointer                  dcl 3-57
cobol_w1p                              defined         pointer                  dcl 3-59
cobol_w2p                              defined         pointer                  dcl 3-61
cobol_w3p                              defined         pointer                  dcl 3-63
cobol_w5p                              defined         pointer                  dcl 3-65
cobol_w6p                              defined         pointer                  dcl 3-67
cobol_w7p                              defined         pointer                  dcl 3-69
cobol_x1_fileno                        defined         fixed bin(24,0)          dcl 3-89
cobol_x2_fileno                        defined         fixed bin(24,0)          dcl 3-91
cobol_x3_fileno                        defined         fixed bin(24,0)          dcl 3-93
cobol_x3fp                             defined         pointer                  dcl 3-71
cobol_xlast8                           defined         bit(1)                   packed unaligned dcl 3-101
compile_count                          defined         fixed bin(17,0)          dcl 1-143
coms_charcnt                           defined         fixed bin(17,0)          dcl 1-189
coms_wdoff                             defined         fixed bin(17,0)          dcl 1-203
con_end_ptr                            defined         pointer                  dcl 1-11
con_wd_off                             defined         fixed bin(17,0)          dcl 1-93
cons_charcnt                           defined         fixed bin(17,0)          dcl 1-193
constant_offset                        defined         fixed bin(17,0)          dcl 1-157
data_init_flag                         defined         fixed bin(17,0)          dcl 1-131
date_compiled_sw                       defined         fixed bin(17,0)          dcl 1-181
debug_enable                           defined         fixed bin(17,0)          dcl 1-175
def_base_ptr                           defined         pointer                  dcl 1-13
def_max                                defined         fixed bin(17,0)          dcl 1-97
def_wd_off                             defined         fixed bin(17,0)          dcl 1-95
diag_ptr                               defined         pointer                  dcl 1-71
eln_max                                defined         fixed bin(17,0)          dcl 1-173
eln_ptr                                defined         pointer                  dcl 1-69
evad                                   internal static bit(18)                  initial array packed unaligned dcl 86
fixup_max                              defined         fixed bin(17,0)          dcl 1-165
fixup_ptr                              defined         pointer                  dcl 1-31
fs_charcnt                             defined         fixed bin(17,0)          dcl 1-185
fs_wdoff                               defined         fixed bin(17,0)          dcl 1-199
include_cnt                            defined         fixed bin(17,0)          dcl 1-183
include_info_ptr                       defined         pointer                  dcl 1-87
index                                                  builtin function         dcl 493
init_stack_off                         defined         fixed bin(17,0)          dcl 1-125
initval_base_ptr                       defined         pointer                  dcl 1-33
initval_file_ptr                       defined         pointer                  dcl 1-35
initval_flag                           defined         fixed bin(17,0)          dcl 1-179
link_base_ptr                          defined         pointer                  dcl 1-15
link_max                               defined         fixed bin(17,0)          dcl 1-101
link_wd_off                            defined         fixed bin(17,0)          dcl 1-99
linkstring                             automatic       char(65)                 packed unaligned dcl 174
list_off                               defined         fixed bin(17,0)          dcl 1-155
list_ptr                               defined         pointer                  dcl 1-65
ls_charcnt                             defined         fixed bin(17,0)          dcl 1-191
main_pcs_ptr                           defined         pointer                  dcl 1-85
map_data_max                           defined         fixed bin(17,0)          dcl 1-163
map_data_ptr                           defined         pointer                  dcl 1-55
max_stack_off                          defined         fixed bin(17,0)          dcl 1-123
minpral5_ptr                           defined         pointer                  dcl 1-51
misc_base_ptr                          defined         pointer                  dcl 1-61
misc_end_ptr                           defined         pointer                  dcl 1-63
misc_max                               defined         fixed bin(17,0)          dcl 1-159
next_tag                               defined         fixed bin(17,0)          dcl 1-129
non_source_offset                      defined         fixed bin(17,0)          dcl 1-177
ntbuf_ptr                              defined         pointer                  dcl 1-83
obj_seg_name                           defined         char(32)                 dcl 1-209
op_con_ptr                             defined         pointer                  dcl 1-81
para_eop_flag                          defined         fixed bin(17,0)          dcl 1-139
pd_map_index                           defined         fixed bin(17,0)          dcl 1-117
pd_map_max                             defined         fixed bin(17,0)          dcl 1-161
pd_map_ptr                             defined         pointer                  dcl 1-29
pd_map_sw                              defined         fixed bin(17,0)          dcl 1-127
perform_list_ptr                       defined         pointer                  dcl 1-37
perform_para_index                     defined         fixed bin(17,0)          dcl 1-149
perform_sect_index                     defined         fixed bin(17,0)          dcl 1-151
priority_no                            defined         fixed bin(17,0)          dcl 1-141
ptr_assumption_ind                     defined         fixed bin(17,0)          dcl 1-145
ptr_status_ptr                         defined         pointer                  dcl 1-57
reg_assumption_ind                     defined         fixed bin(17,0)          dcl 1-147
reg_status_ptr                         defined         pointer                  dcl 1-59
rel                                                    builtin function         dcl 493
reloc_def_base_ptr                     defined         pointer                  dcl 1-21
reloc_def_max                          defined         fixed bin(24,0)          dcl 1-109
reloc_link_base_ptr                    defined         pointer                  dcl 1-23
reloc_link_max                         defined         fixed bin(24,0)          dcl 1-111
reloc_sym_base_ptr                     defined         pointer                  dcl 1-25
reloc_sym_max                          defined         fixed bin(24,0)          dcl 1-113
reloc_text_base_ptr                    defined         pointer                  dcl 1-19
reloc_text_max                         defined         fixed bin(24,0)          dcl 1-107
reloc_work_base_ptr                    defined         pointer                  dcl 1-27
reloc_work_max                         defined         fixed bin(24,0)          dcl 1-115
report_exists                          defined         bit(1)                   packed unaligned dcl 3-103
report_first_token                     defined         pointer                  dcl 3-15
report_last_token                      defined         pointer                  dcl 3-17
reswd_ptr                              defined         pointer                  dcl 1-79
same_sort_merge_proc                   defined         bit(1)                   dcl 1-215
scratch_dir                            defined         char(168)                dcl 1-207
sect_eop_flag                          defined         fixed bin(17,0)          dcl 1-137
seg_init_flag                          defined         fixed bin(17,0)          dcl 1-133
seg_init_list_ptr                      defined         pointer                  dcl 1-41
stack_off                              defined         fixed bin(17,0)          dcl 1-121
statement_info_ptr                     defined         pointer                  dcl 1-77
string                                                 builtin function         dcl 493
sym_base_ptr                           defined         pointer                  dcl 1-17
sym_max                                defined         fixed bin(17,0)          dcl 1-105
sym_wd_off                             defined         fixed bin(17,0)          dcl 1-103
tag_table_max                          defined         fixed bin(17,0)          dcl 1-167
tag_table_ptr                          defined         pointer                  dcl 1-53
temp_token_area_ptr                    defined         pointer                  dcl 1-43
temp_token_max                         defined         fixed bin(17,0)          dcl 1-169
temp_token_ptr                         defined         pointer                  dcl 1-45
text_base_ptr                          defined         pointer                  dcl 1-9
text_wd_off                            defined         fixed bin(17,0)          dcl 1-91
token_block1_ptr                       defined         pointer                  dcl 1-47
token_block2_ptr                       defined         pointer                  dcl 1-49
value_cnt                              defined         fixed bin(17,0)          dcl 1-195
ws_charcnt                             defined         fixed bin(17,0)          dcl 1-187
ws_wdoff                               defined         fixed bin(17,0)          dcl 1-201
xref_bypass                            defined         bit(1)                   dcl 1-213
xref_chain_ptr                         defined         pointer                  dcl 1-75
xref_token_ptr                         defined         pointer                  dcl 1-73

NAMES DECLARED BY EXPLICIT CONTEXT.
cobol_iocall                    000022 constant        entry                    external dcl 27
start                           000027 constant        label                    dcl 226

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      2016        2370    1611        2026
Length      2670    1611       352         263     205         306

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cobol_iocall                        110 external procedure  is an external procedure.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 fixup_directive             cobol_iocall
000012 type9                       cobol_iocall
000056 addr_struct                 cobol_iocall
000067 ename                       cobol_iocall
000207 instr                       cobol_iocall
000217 reloc                       cobol_iocall
000233 pr0_struct                  cobol_iocall
000242 pr2_struct                  cobol_iocall
000251 pr4_struct                  cobol_iocall
000260 reg_struct                  cobol_iocall
000271 firsttime                   cobol_iocall
000272 instr_ptr                   cobol_iocall
000274 instr3_ptr                  cobol_iocall
000276 reloc_ptr                   cobol_iocall
000300 reloc5_ptr                  cobol_iocall
000302 pr0_struct_ptr              cobol_iocall
000304 pr2_struct_ptr              cobol_iocall
000306 pr4_struct_ptr              cobol_iocall
000310 reg_struct_ptr              cobol_iocall
000312 type9_ptr                   cobol_iocall
000314 addr_struct_ptr             cobol_iocall

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cobol_iocall             000100 i                           cobol_iocall
                         000101 j                           cobol_iocall
                         000102 k                           cobol_iocall
                         000103 conoff                      cobol_iocall
                         000104 aloff                       cobol_iocall
                         000105 stoff                       cobol_iocall
                         000106 a_or_q                      cobol_iocall
                         000107 ic                          cobol_iocall
                         000110 opno                        cobol_iocall
                         000111 linkoff                     cobol_iocall
                         000112 seg                         cobol_iocall
                         000113 off                         cobol_iocall
                         000114 utemp                       cobol_iocall
                         000115 linksw                      cobol_iocall
                         000116 loc                         cobol_iocall
                         000117 reg                         cobol_iocall

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_char_temp     call_ext_out_desc   call_ext_out        return_mac          mdfx1               shorten_stack
ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cobol_addr                    cobol_alloc$stack             cobol_emit                    cobol_make_fixup
cobol_make_link$type_4        cobol_make_type9$type2_3      cobol_pointer_register$call   cobol_pointer_register$get
cobol_pool                    cobol_register$load           cobol_reset_r$after_call      cobol_set_pr

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
cobol_$text_wd_off            cobol_ext_$cobol_com_ptr




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     27 000016       226 000027       229 000031       230 000033       231 000035       232 000037       233 000041
    234 000043       235 000045       236 000047       237 000051       238 000053       239 000055       242 000056
    244 000065       245 000066       247 000071       248 000076       250 000105       251 000121       252 000122
    253 000123       254 000132       255 000137       256 000145       257 000147       258 000152       260 000154
    262 000171       264 000177       265 000202       266 000216       267 000225       268 000227       269 000230
    271 000232       273 000244       274 000246       276 000250       277 000255       279 000262       280 000263
    281 000264       282 000271       284 000274       287 000305       288 000310       289 000316       290 000322
    292 000324       294 000357       296 000360       298 000372       300 000373       301 000400       302 000401
    303 000402       305 000403       306 000412       307 000432       308 000434       310 000441       311 000443
    313 000453       315 000461       316 000472       317 000474       318 000475       319 000477       320 000500
    322 000502       324 000513       325 000524       327 000551       328 000552       330 000554       332 000610
    333 000617       334 000630       337 000632       339 000641       341 000643       343 000651       344 000656
    346 000663       347 000665       348 000666       349 000673       350 000700       351 000703       354 000705
    355 000712       357 000724       360 000733       362 000747       363 000755       364 000757       365 000762
    366 000764       369 000766       371 000773       372 000775       373 001010       374 001021       375 001047
    376 001055       380 001067       381 001074       382 001104       383 001106       384 001110       388 001130
    389 001135       390 001146       391 001154       393 001170       395 001173       397 001223       398 001226
    400 001234       401 001237       403 001247       404 001263       405 001265       406 001267       407 001271
    409 001272       410 001273       412 001276       413 001300       414 001302       415 001304       416 001305
    418 001310       419 001312       420 001314       422 001316       428 001320       431 001325       433 001340
    434 001342       436 001347       437 001352       439 001362       440 001365       441 001376       442 001400
    445 001401       449 001403       451 001404       452 001406       453 001420       455 001430       456 001433
    457 001444       458 001446       459 001447       465 001451       466 001472       468 001500       469 001504
    471 001514       472 001531       473 001535       474 001537       475 001541       478 001542       480 001550
    482 001561       483 001573       484 001600       486 001607


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
