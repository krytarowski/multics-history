	COMPILATION LISTING OF SEGMENT gtss_write_starCFP_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/10/84  1358.7 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   *                                                         *
        4*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        5*   *                                                         *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 /* *************************************************************
       10*   *						   *
       11*   * Copyright (c) 1979 by Honeywell Information Systems, Inc. *
       12*   *						   *
       13*   ************************************************************* */
       14 
       15 gtss_write_starCFP_: proc (up, bp, rl, ec);
       16 
       17 /**       Author:   Dave Ward 03/20/79
       18*          Change:   Al Dupuis 12/04/79 Rewritten to make use of cout term codes
       19*	Change:   Al Dupuis 12/14/79 Added write_deferred subroutine.
       20***/
       21 
       22 	call gtss_aft_$find ("*CFP", fn, code);
       23 	if code = 0 & normal_output
       24 	then do;
       25 	     call write_now;
       26 	     return;
       27 	end;
       28 	call write_deferred;
       29 	if normal_output
       30 	then do;
       31 		/** write logon banner first **/
       32 	     bp = l_info.l_ptr (l_info.no_lines);
       33 	     rl = l_info.l_len (l_info.no_lines);
       34 	     call write_now;
       35 	     do loop_cntr = 1 to l_info.no_lines - 1;
       36 		bp = l_info.l_ptr (loop_cntr);
       37 		rl = l_info.l_len (loop_cntr);
       38 		call write_now;
       39 		if ec ^= 0
       40 		then do;
       41 		     call end_def_write;
       42 		     return;
       43 		end;
       44 	     end;
       45 	     call end_def_write;
       46 	end;
       47 	return;
       48 
       49 write_now: proc;
       50 
       51 
       52 	     ec = 0;
       53 	     if rl = 0 then return;
       54 	     n = gtss_ust.lcfio.sect_out;
       55 	     if n < gtss_ust.lcfst.initial_sect_out
       56 	     then do;
       57 		err_mess = "Output sector no not > last input sector";
       58 		gtss_ust.lcfst.start_term = 3;
       59 		call common_error;
       60 		return;
       61 	     end;
       62 	     gtss_starCF_$FILE.Seek_Address = n;
       63 	     gtss_ust.lcfio.sect_out = n + 1;
       64 	     if rl > length (RECORD.chars)
       65 	     then do;
       66 		err_mess = "Output line length too long.";
       67 		gtss_ust.lcfst.start_term = 11;
       68 		call common_error;
       69 		return;
       70 	     end;
       71 	     RECORD.no_characters = rl;
       72 	     substr (RECORD.chars, 1, rl) = bp -> rl_chars;
       73 		 /** If first char is pad, make it CR so output won't be indented **/
       74 	     if substr (RECORD.chars, 1, 1) = rubout_char
       75 	     then substr (RECORD.chars, 1, 1) = CR;
       76 write_loop:    ;
       77 	     gtss_starCF_$FILE.OP2.Device_Command = write_cmd;
       78 	     fn = gtss_starCF_$FILE.cf.aft_indx;
       79 	     call gtss_ios_io_ (
       80 		fn,
       81 		addr (select_sequence),
       82 		addr (select_sequence),
       83 		fixed (rel (addr (gtss_starCF_$FILE.cf))),
       84 		status,
       85 		code);
       86 	     if status = 1     /** EOF encountered **/
       87 	     then do;
       88 		call gtss_ios_change_size_ (fn, 5, "0"b, st2, code);
       89 		if st2 = 0 | st2 = 2   /** 0=OK, 2=hit max size **/
       90 		then do;
       91 		     gtss_starCF_$FILE.Seek_Address = n;
       92 		     goto write_loop;
       93 		end;
       94 		if code = error_table_$rqover
       95 		then err_mess = "EXCEEDED AVAILABLE LLINKS ATTEMPTING TO GROW *CFP";
       96 		gtss_ust.lcfst.start_term = 4;
       97 		call common_error;
       98 		return;
       99 	     end;
      100 	     if status ^= 0
      101 	     then do;
      102 		err_mess = "COMMAND FILE I/O ERROR";
      103 		gtss_ust.lcfst.start_term = 2;
      104 		call common_error;
      105 		return;
      106 	     end;
      107 	     return;
      108 	end;
      109 
      110 write_deferred: proc;
      111 
      112 	     ec = 0;
      113 	     saved_code = code;
      114 	     if normal_output
      115 	     then do;
      116 		call hcs_$make_seg ("", "", "", 10, l_info_ptr, code);
      117 		if code = 0
      118 		then call hcs_$make_seg ("", "", "", 10, l_ptr, code);
      119 		if code ^= 0
      120 		then do;
      121 		     err_mess = "Couldn't do i/o for ..init";
      122 		     call common_error;
      123 		     call end_def_write;
      124 		     return;
      125 		end;
      126 		normal_output = "0"b;
      127 		l_info.no_chars = 1;
      128 		l_info.no_lines = 0;
      129 	     end;
      130 	     l_info.no_lines = l_info.no_lines + 1;
      131 	     l_info.l_ptr (l_info.no_lines) =
      132 		addr (char_string (l_info.no_chars));
      133 	     l_info.l_len (l_info.no_lines) = rl;
      134 	     l_info.no_chars = l_info.no_chars + rl;
      135 	     l_info.l_ptr (l_info.no_lines) -> line = bp -> line;
      136 	     if saved_code = 0
      137 	     then normal_output = "1"b;
      138 	     return;
      139 	end;
      140 
      141 end_def_write: proc;
      142 
      143 
      144 	     call delete_$ptr (l_info_ptr, "100100"b,
      145 		"gtss_write_starCFP_", code);
      146 	     l_info_ptr = null ();
      147 	     call delete_$ptr (l_ptr, "100100"b,
      148 		"gtss_write_starCFP_", code);
      149 	     l_ptr = null ();
      150 	     normal_output = "1"b;
      151 
      152 	end;
      153 
      154 common_error: proc;
      155 
      156 	     ec = 1;
      157 	     mc_ptr = gtss_find_cond_frame_ ("derail");
      158 		 if mc_ptr = null ()     /** no gmap program to abort **/
      159 	     then call gtss_CFP_abort_;
      160 	     else do;
      161 		if err_mess ^= ""
      162 		then call gtss_abort_subsystem_ (
      163 		     mc_ptr,
      164 		     "gtss_write_starCFP_",
      165 		     0,
      166 		     err_mess);
      167 		else call gtss_abort_subsystem_ (
      168 		     mc_ptr,
      169 		     "gtss_write_starCFP_", 0);
      170 		return;
      171 	     end;
      172 	end;
      173 
      174 
      175 
      176 /**  Variables for gtss_write_starCFP_
      177***/
      178 dcl  bp                       ptr parm;  /** (input) callers buffer **/
      179 dcl  char_string (l_info.no_chars) char (1) based (l_ptr);
      180 dcl  code                     fixed bin (35);
      181 dcl  cr                       bit (9) static int options (constant) init ("015"b3);
      182 dcl  delete_$ptr              entry (pointer, bit (6), char (*), fixed bin (35));
      183 dcl  ec                       fixed bin (35) parm;  /** (output) Multics error code **/
      184 dcl  err_mess                 char (250) init ("");
      185 dcl  error_table_$rqover	fixed bin (35) ext;
      186 dcl  fn                       fixed bin (24);
      187 dcl  hcs_$make_seg	          entry (char (*), char (*), char (*), fixed bin (5), ptr, fixed bin (35));
      188 dcl  line                     char (rl) based;
      189 dcl  loop_cntr	          fixed bin (24);
      190 dcl  l_info_ptr               ptr static internal init (null());
      191 dcl  l_ptr                    ptr static internal init (null());
      192 dcl  mc_ptr                   ptr init (null ());
      193 dcl  n                        fixed bin (18) unsigned unal;
      194 dcl  nl                       bit (9) static int options (constant) init ("012"b3);
      195 dcl  normal_output            bit (1) static internal init ("1"b);
      196 dcl  pad_char		bit (9) static int options (constant) init ("177"b3);
      197 dcl  rl                       fixed bin (21) parm; /** (input) no of chars **/
      198 dcl  rl_chars		char (rl) unal based;
      199 dcl  rubout_char		char (1) based (addr (pad_char));
      200 dcl  saved_code	          fixed bin (35);
      201 dcl  status                   fixed bin(24);
      202 dcl  st2			fixed bin (24);
      203 dcl  CR                       char (1) based (addr (cr));
      204 dcl  NL                       char (1) based (addr (nl));
      205 dcl  up                       ptr parm;  /** (input) not used **/
      206 
      207 dcl 1 l_info based (l_info_ptr),
      208       2 no_lines fixed bin (24),
      209       2 no_chars fixed bin (24),
      210       2 filler (l_info.no_lines),
      211         3 l_ptr ptr,
      212         3 l_len fixed bin (21);
      213 
  1     1 /* BEGIN INCLUDE FILE gtss_starCF_.incl.pl1 */
  1     2 /*
  1     3*  Created: (Wardd Multics)  03/20/79 1816.6 mst Tue 
  1     4**/
  1     5 
  1     6 /*
  1     7*   gtss_CFP_input_ data structure to provide
  1     8*   for accessing the current command file.
  1     9*
  1    10*   Changed: Al Dupuis 05/17/79 to get rid of nested get_line, put_chars concept.
  1    11**/
  1    12 dcl	1 gtss_starCF_$FILE	aligned static ext
  1    13 ,	  3 select_sequence
  1    14 ,	    4 OP1			/* Seek operation. */
  1    15 ,	      5 Device_Command	bit(06)unal
  1    16 ,	      5 zeroes_1		fixed bin(12)unsigned unal
  1    17 ,	      5 IOC_Command		bit(05)unal
  1    18 ,	      5 zeroes_2		fixed bin(01)unsigned unal
  1    19 ,	      5 Control		fixed bin(06)unsigned unal
  1    20 ,	      5 Count		fixed bin(06)unsigned unal
  1    21 
  1    22 ,	    4 ID1
  1    23 ,	      5 fcb_loc		bit(18)unal
  1    24 ,	      5 DCW_list_loc	bit(18)unal
  1    25 
  1    26 ,	    4 OP2			/* Write opteration. */
  1    27 ,	      5 Device_Command	bit(06)unal
  1    28 ,	      5 zeroes_1		fixed bin(12)unsigned unal
  1    29 ,	      5 IOC_Command		bit(05)unal
  1    30 ,	      5 zeroes_2		fixed bin(01)unsigned unal
  1    31 ,	      5 Control		fixed bin(06)unsigned unal
  1    32 ,	      5 Count		fixed bin(06)unsigned unal
  1    33 
  1    34 ,	    4 ID2
  1    35 ,	      5 fcb_loc		bit(18)unal
  1    36 ,	      5 DCW_list_loc	bit(18)unal
  1    37 
  1    38 ,	    4 RETURN_WORD
  1    39 ,	      5 Status_loc		bit(18)unal
  1    40 ,	      5 Courtesy_Call_loc	bit(18)unal
  1    41 
  1    42 ,	  3 Seek_Word
  1    43 ,	    4 Seek_loc		bit(18)unal
  1    44 ,	    4 Seek_count		fixed bin(18)unsigned unal
  1    45 ,	  3 Seek_Address		fixed bin(35)
  1    46 ,	  3 STATUS		bit(72) unal
  1    47 
  1    48 ,	  3 DCW
  1    49 ,	    4 memory_loc		bit(18)unal
  1    50 ,	    4 zeroes_3		fixed bin(03)unsigned unal
  1    51 ,	    4 action_code		fixed bin(03)unsigned unal
  1    52 ,	    4 word_count		fixed bin(12)unsigned unal
  1    53 
  1    54 ,	  3 RECORD
  1    55 ,	    4 no_characters		fixed bin(18)unsigned unal
  1    56 ,	    4 zeroes_4		bit(18)unal
  1    57 ,	    4 chars		char(252)
  1    58 
  1    59 /* Stack to accomodate nested command file processing. */
  1    60 ,	  3 cf
  1    61 ,	    4 top			fixed bin(24)
  1    62 ,	    4 aft_indx		fixed bin(24)
  1    63 ,             4 first_time		bit (1) unaligned
  1    64 ,             4 exclude_on    	bit (1) unaligned
  1    65 ;
  1    66 
  1    67 /*   END INCLUDE FILE gtss_starCF_.incl.pl1 */
      214 
      215 
  2     1 /* BEGIN INCLUDE FILE gtss_ext_.incl.pl1 */
  2     2 /*
  2     3*  Created: (Wardd Multics)  05/20/78 1307.6 mst Sat 
  2     4*  Modified: Ward            1981     add suspended_process dcl
  2     5*  Modified: Ron Barstad  83-07-21  Fixed level number on mcfc to 3
  2     6*  Modified: Ron Barstad  83-07-25  Fixed derail range in statistics to 4js3 number
  2     7**/
  2     8 dcl  gtss_ext_$aem                   fixed bin static ext	/* >0 Print "additional" error information. */;
  2     9 dcl  gtss_ext_$bad_drl_rtrn          static ext label	/* Default for drl_rtrn. */;
  2    10 dcl  gtss_ext_$db                    (72)bit(1)unal static ext;
  2    11 dcl  gtss_ext_$deferred_catalogs_ptr ptr ext;
  2    12 dcl  gtss_ext_$dispose_of_drl        static ext label	/* quit handlers for some derails use this label to abort */;
  2    13 dcl  gtss_ext_$drl_rtrn              (4)static ext label	/* where to return at subsystem end */;
  2    14 dcl  gtss_ext_$drm_path              char(168)static ext	/* gtss_expand_pathname_stores drm_path */;
  2    15 dcl  gtss_ext_$drun_jid              char (5) static ext	/* valid only for DRUN executing under absentee */;
  2    16 dcl  gtss_ext_$event_channel         fixed bin (71) static ext	/* used for DABT signals */;
  2    17 dcl  gtss_ext_$finished              static ext label	/* Return to gtss for normal conclusion. */;
  2    18 dcl  gtss_ext_$gdb_name              char(8)ext	/* Name H* module to debug. */;
  2    19 dcl  gtss_ext_$get_line              entry(ptr,ptr,fixed bin(21),fixed bin(21),fixed bin(35))variable ext /* Build mode input procedure. */;
  2    20 dcl  gtss_ext_$gtss_slave_area_seg   (4) ext static ptr	/* pointer to gtss slave area segment */;
  2    21 dcl  gtss_ext_$hcs_work_area_ptr     ptr ext static		/* Temp seg for acl lists. */;
  2    22 dcl  gtss_ext_$homedir               char (64) static ext /* user's home dir */;
  2    23 dcl  gtss_ext_$last_k_was_out        bit (1)aligned ext static	/* "1"b => last tty output was output. */;
  2    24 dcl  gtss_ext_$pdir                  char (168) varying ext static	/* pathname of process directory */;
  2    25 dcl  gtss_ext_$popup_from_pi         static ext label	/* transfer to this label after pi simulates popup primitive */;
  2    26 dcl  gtss_ext_$process_type          fixed bin (17) static ext;
  2    27 dcl  gtss_ext_$put_chars             entry(ptr,ptr,fixed bin(24),fixed bin(35)) variable ext	/* Terminal output procedure. */;
  2    28 dcl  gtss_ext_$restart_from_pi       static ext label	/* transfer to this label after pi restores machine conditions */;
  2    29 dcl  gtss_ext_$restart_seg_ptr       ptr static ext	/* points to DRUN restart file when exec under absentee */;
  2    30 dcl  gtss_ext_$sig_ptr               ext static ptr	/* saved ptr to signal_ */;
  2    31 dcl  gtss_ext_$stack_level_          fixed bin ext static;
  2    32 dcl  gtss_ext_$suspended_process     bit(1) ext static;
  2    33 dcl  gtss_ext_$SYstarstar_file_no    fixed bin (24) static ext;
  2    34 dcl  gtss_ext_$user_id               char (26)var ext;
  2    35 dcl  gtss_ext_$work_area_ptr         ptr ext;
  2    36 
  2    37 dcl  1 gtss_ext_$CFP_bits aligned static external
  2    38      , 3 no_input_yet bit (1) unaligned         /* used in gtss_CFP_input_, gtss_read_starCFP_ */
  2    39      , 3 rtn_bits bit (4) unaligned             /* used in gtss_CFP_input_, gtss_CFP_output_ */
  2    40      , 3 cpos_called bit (1) unaligned          /* used in gtss_CFP_input_, gtss_drl_t_cfio_, gtss_abandon_CFP_ */
  2    41      , 3 cout_called bit (1) unaligned          /* used in gtss_read_starCFP_, gtss_abandon_CFP_ */
  2    42      , 3 build_mode bit (1) unaligned	        /* used in gtss_build_, gtss_dsd_process_ */
  2    43      ;
  2    44 
  2    45 dcl 1 gtss_ext_$com_reg aligned static ext,
  2    46        3 tsdmx,
  2    47          4 dst fixed bin (18) unsigned unaligned,
  2    48          4 dit fixed bin (18) unsigned unaligned,
  2    49        3 tsdpt fixed bin (36) unsigned unaligned,
  2    50        3 tsddt fixed bin (36) unsigned unaligned,
  2    51        3 tsdid bit (72) unaligned,
  2    52        3 tsdsd bit (36) unaligned,
  2    53        3 tsdst fixed bin (36) unsigned unaligned,
  2    54        3 tsdjb fixed bin (35) unaligned,
  2    55        3 tsdgt,
  2    56          4 ust_loc fixed bin (18) unsigned unaligned,
  2    57          4 gating_ctl fixed bin (18) unsigned unaligned,
  2    58        3 tcdfr bit (36) unaligned;
  2    59 
  2    60 dcl 1 gtss_ext_$flags aligned static ext
  2    61      , 3 dispose_of_drl_on_pi	bit (01) unal	/* 1 => drl that should be aborted after quit-pi sequence */
  2    62      , 3 drl_in_progress	bit (01) unal	/* 1 => drl handler executing; 0 => gcos code executing */
  2    63      , 3 popup_from_pi	bit (01) unal	/* 1 => derail processor will simulate Gcos break instead of returning */
  2    64      , 3 unfinished_drl	bit (01) unal	/* 1 => subsystem is handling breaks and quit was raised during a drl */
  2    65      , 3 ss_time_limit_set	bit (01) unal	/* 1 => exec time limit set for subsystem */
  2    66      , 3 timer_ranout	bit (01) unal	/* 1 => user is executing timer runout code */
  2    67      , 3 gtss_com_err_sw      bit (01) unal       /* 1 => stop com_err_ string from going to terminal */   
  2    68      , 3 available		bit (65) unal
  2    69      ;
  2    70 
  2    71 
  2    72 dcl 1 gtss_ext_$statistics aligned static ext,		/* Derail usage statistics */
  2    73       3 total_time (-10:71)fixed bin (71),
  2    74       3 count (-10:71)fixed bin (17);
  2    75 
  2    76 /* 	Declaration of Available File Table
  2    77*   */
  2    78 dcl 1 gtss_ext_$aft aligned ext,			/* aft structure */
  2    79 
  2    80       3 start_list (0:102) fixed bin (24),		/* >0 => 1st aft_entry row to start of next entry chain. */
  2    81 
  2    82       3 aft_entry (20),
  2    83         4 altname char (8),				/* altname name for attaching this file */
  2    84         4 next_entry fixed bin (24),			/* Next aft_entry in hash chain. */
  2    85         4 previous_add fixed bin (24),			/* Previously added entry. */
  2    86         4 next_add fixed bin (24),			/* Entry added after this one. */
  2    87         4 used bit (1) unal,				/* "1"b => aft_entry contains AFT value. */
  2    88         4 forced bit(1) unal,				/* "1"b => gtss_verify_access_ forced access on this file. */
  2    89 
  2    90       3 free_space fixed bin (24),			/* Index of start of free space list for aft entries. */
  2    91       3 first_added fixed bin (24),			/* >0  => start of chain in add order. */
  2    92       3 last_added fixed bin (24)			/* >0 => end of chain in added order. */;
  2    93 
  2    94 dcl  gtss_ext_$ppt                   ptr ext /*  switch name for tapein drl */;
  2    95 /**	Data structure to provide access to installed
  2    96*   subsystems fast library load.
  2    97*   **/
  2    98 dcl 1 gtss_ext_$fast_lib aligned ext
  2    99      , 3 fast_lib_fcb ptr				/* Pointer to msf fcb.	*/
  2   100      , 3 fast_lib_ncp fixed bin (24)			/* Number of components. */
  2   101      , 3 comp_ptr (0:9)ptr				/* Pointer to component. */
  2   102      , 3 comp_wds (0:9)fixed bin (24)			/* Component length (words). */
  2   103      ;
  2   104 
  2   105 /* Pointers to segments to regulate multipler
  2   106*   callers to files. Same segments are used to regulate
  2   107*   all simulator callers.
  2   108**/
  2   109 dcl 1 gtss_ext_$mcfc	aligned ext,
  2   110       3 multics_lock_id	bit(36),
  2   111       3 wait_time		fixed bin,
  2   112       3 files_ptr		ptr,
  2   113       3 names_ptr		ptr,
  2   114       3 callers_ptr		(0:3)ptr
  2   115 ;
  2   116 
  2   117 /*   END INCLUDE FILE gtss_ext_.incl.pl1 */
      216 
      217 
  3     1 /*  */
  3     2 /* BEGIN INCLUDE FILE  mc.incl.pl1   Created Dec 72 for 6180 - WSS. */
  3     3 /* Modified 06/07/76 by Greenberg for mc.resignal */
  3     4 /* Modified 07/07/76 by Morris for fault register data */
  3     5 /* Modified 08/28/80 by J. A. Bush for the DPS8/70M CVPU */
  3     6 /* Modified '82 to make values constant */
  3     7 
  3     8 /* words 0-15 pointer registers */
  3     9 
  3    10 dcl  mcp ptr;
  3    11 
  3    12 dcl 1 mc based (mcp) aligned,
  3    13     2 prs (0:7) ptr,				/* POINTER  REGISTERS */
  3    14    (2 regs,					/* registers */
  3    15       3 x (0:7) bit (18),				/* index registers */
  3    16       3 a bit (36),					/* accumulator */
  3    17       3 q bit (36),					/* q-register */
  3    18       3 e bit (8),					/* exponent */
  3    19       3 pad1 bit (28),
  3    20       3 t bit (27),					/* timer register */
  3    21       3 pad2 bit (6),
  3    22       3 ralr bit (3),				/* ring alarm register */
  3    23 
  3    24     2 scu (0:7) bit (36),
  3    25 
  3    26     2 mask bit (72),				/* mem controller mask at time of fault */
  3    27     2 ips_temp bit (36),				/* Temporary storage for IPS info */
  3    28     2 errcode fixed bin (35),				/* fault handler's error code */
  3    29     2 fim_temp,
  3    30       3 unique_index bit (18) unal,			/* unique index for restarting faults */
  3    31       3 resignal bit (1) unal,			/* recompute signal name with fcode below */
  3    32       3 fcode bit (17) unal,				/* fault code used as index to FIM table and SCT */
  3    33     2 fault_reg bit (36),				/* fault register */
  3    34     2 pad2 bit (1),
  3    35     2 cpu_type fixed bin (2) unsigned,			/* L68 = 0, DPS8/70M = 1 */
  3    36     2 ext_fault_reg bit (15),				/* extended fault reg for DPS8/70M CPU */
  3    37     2 fault_time bit (54),				/* time of fault */
  3    38 
  3    39     2 eis_info (0:7) bit (36)) unaligned;
  3    40 
  3    41 
  3    42 dcl (apx fixed bin init (0),
  3    43      abx fixed bin init (1),
  3    44      bpx fixed bin init (2),
  3    45      bbx fixed bin init (3),
  3    46      lpx fixed bin init (4),
  3    47      lbx fixed bin init (5),
  3    48      spx fixed bin init (6),
  3    49      sbx fixed bin init (7)) internal static options (constant);
  3    50 
  3    51 
  3    52 
  3    53 
  3    54 dcl  scup ptr;
  3    55 
  3    56 dcl 1 scu based (scup) aligned,			/* SCU DATA */
  3    57 
  3    58 
  3    59 /*	WORD (0)		*/
  3    60 
  3    61    (2 ppr,					/* PROCEDURE POINTER REGISTER */
  3    62       3 prr bit (3),				/* procedure ring register */
  3    63       3 psr bit (15),				/* procedure segment register */
  3    64       3 p bit (1),					/* procedure privileged bit */
  3    65 
  3    66     2 apu,					/* APPENDING UNIT STATUS */
  3    67       3 xsf bit (1),				/* ext seg flag - IT modification */
  3    68       3 sdwm bit (1),				/* match in SDW Ass. Mem. */
  3    69       3 sd_on bit (1),				/* SDW Ass. Mem.  ON */
  3    70       3 ptwm bit (1),				/* match in PTW Ass. Mem. */
  3    71       3 pt_on bit (1),				/* PTW Ass. Mem.  ON */
  3    72       3 pi_ap bit (1),				/* Instr Fetch or Append cycle */
  3    73       3 dsptw bit (1),				/* Fetch of DSPTW */
  3    74       3 sdwnp bit (1),				/* Fetch of SDW non paged */
  3    75       3 sdwp bit (1),				/* Fetch of SDW paged */
  3    76       3 ptw bit (1),				/* Fetch of PTW */
  3    77       3 ptw2 bit (1),				/* Fetch of pre-paged PTW */
  3    78       3 fap bit (1),				/* Fetch of final address paged */
  3    79       3 fanp bit (1),				/* Fetch of final address non-paged */
  3    80       3 fabs bit (1),				/* Fetch of final address absolute */
  3    81 
  3    82     2 fault_cntr bit (3),				/* number of retrys of EIS instructions */
  3    83 
  3    84 
  3    85 /*	WORD (1)		*/
  3    86 
  3    87     2 fd,						/* FAULT  DATA */
  3    88       3 iro bit (1),				/* illegal ring order */
  3    89       3 oeb bit (1),				/* out of execute bracket */
  3    90       3 e_off bit (1),				/* no execute */
  3    91       3 orb bit (1),				/* out of read bracket */
  3    92       3 r_off bit (1),				/* no read */
  3    93       3 owb bit (1),				/* out of write bracket */
  3    94       3 w_off bit (1),				/* no write */
  3    95       3 no_ga bit (1),				/* not a gate */
  3    96       3 ocb bit (1),				/* out of call bracket */
  3    97       3 ocall bit (1),				/* outward call */
  3    98       3 boc bit (1),				/* bad outward call */
  3    99       3 inret bit (1),				/* inward return */
  3   100       3 crt bit (1),				/* cross ring transfer */
  3   101       3 ralr bit (1),				/* ring alarm register */
  3   102       3 am_er bit (1),				/* associative memory fault */
  3   103       3 oosb bit (1),				/* out of segment bounds */
  3   104       3 paru bit (1),				/* processor parity upper */
  3   105       3 parl bit (1),				/* processor parity lower */
  3   106       3 onc_1 bit (1),				/* op not complete type 1 */
  3   107       3 onc_2 bit (1),				/* op not complete type 2 */
  3   108 
  3   109     2 port_stat,					/* PORT  STATUS */
  3   110       3 ial bit (4),				/* illegal action lines */
  3   111       3 iac bit (3),				/* illegal action channel */
  3   112       3 con_chan bit (3),				/* connect channel */
  3   113 
  3   114     2 fi_num bit (5),				/* (fault/interrupt)  number */
  3   115     2 fi_flag bit (1),				/*  1 => fault,  0 => interrupt  */
  3   116 
  3   117 
  3   118 /*	WORD (2)		*/
  3   119 
  3   120     2 tpr,					/* TEMPORARY POINTER REGISTER */
  3   121       3 trr bit (3),				/* temporary ring register */
  3   122       3 tsr bit (15),				/* temporary segment register */
  3   123 
  3   124     2 pad2 bit (9),
  3   125 
  3   126     2 cpu_no bit (3),				/* CPU number */
  3   127 
  3   128     2 delta bit (6),				/* tally modification DELTA */
  3   129 
  3   130 
  3   131 /*	WORD (3)		*/
  3   132 
  3   133     2 word3 bit (18),
  3   134 
  3   135     2 tsr_stat,					/* TSR STATUS for 1,2,&3 word instructions */
  3   136       3 tsna,					/* Word 1 status */
  3   137         4 prn bit (3),				/* Word 1  PR  number */
  3   138         4 prv bit (1),				/* Word 1  PR  valid bit */
  3   139       3 tsnb,					/* Word 2  status */
  3   140         4 prn bit (3),				/* Word 2  PR  number */
  3   141         4 prv bit (1),				/* Word 2  PR  valid bit */
  3   142       3 tsnc,					/* Word 3  status */
  3   143         4 prn bit (3),				/* Word 3  PR  number */
  3   144         4 prv bit (1),				/* Word 3  PR  valid bit */
  3   145 
  3   146     2 tpr_tbr bit (6),				/* TPR.TBR  field */
  3   147 
  3   148 
  3   149 /* 	WORD (4)		*/
  3   150 
  3   151     2 ilc bit (18),					/* INSTRUCTION  COUNTER */
  3   152 
  3   153     2 ir,						/* INDICATOR  REGISTERS */
  3   154       3 zero bit (1),				/* zero indicator */
  3   155       3 neg bit (1),				/* negative indicator */
  3   156       3 carry bit (1),				/* carryry indicator */
  3   157       3 ovfl bit (1),				/* overflow indicator */
  3   158       3 eovf bit (1),				/* eponent overflow */
  3   159       3 eufl bit (1),				/* exponent underflow */
  3   160       3 oflm bit (1),				/* overflow mask */
  3   161       3 tro bit (1),				/* tally runout */
  3   162       3 par bit (1),				/* parity error */
  3   163       3 parm bit (1),				/* parity mask */
  3   164       3 bm bit (1),					/* ^bar mode */
  3   165       3 tru bit (1),				/* truncation mode */
  3   166       3 mif bit (1),				/* multi-word instruction mode */
  3   167       3 abs bit (1),				/* absolute mode */
  3   168       3 hex bit (1),				/* hexadecimal exponent mode */
  3   169       3 pad bit (3),
  3   170 
  3   171 
  3   172 /*	WORD (5)		*/
  3   173 
  3   174     2 ca bit (18),					/* COMPUTED  ADDRESS */
  3   175 
  3   176     2 cu,						/* CONTROL UNIT STATUS */
  3   177       3 rf bit (1),					/* on first cycle of repeat instr */
  3   178       3 rpt bit (1),				/* repeat instruction */
  3   179       3 rd bit (1),					/* repeat double instruction */
  3   180       3 rl bit (1),					/* repeat link instruciton */
  3   181       3 pot bit (1),				/* IT  modification */
  3   182       3 pon bit (1),				/* return type instruction */
  3   183       3 xde bit (1),				/* XDE from Even location */
  3   184       3 xdo bit (1),				/* XDE from Odd  location */
  3   185       3 poa bit (1),				/* operation preparation */
  3   186       3 rfi bit (1),				/* tells CPU to refetch instruction */
  3   187       3 its bit (1),				/* ITS modification */
  3   188       3 if bit (1),					/* fault occured during instruction fetch */
  3   189 
  3   190     2 cpu_tag bit (6)) unaligned,			/* computed tag field */
  3   191 
  3   192 
  3   193 /*	WORDS (6,7)	*/
  3   194 
  3   195     2 even_inst bit (36),				/* even instruction of faulting pair */
  3   196 
  3   197     2 odd_inst bit (36);				/* odd  instruction of faulting pair */
  3   198 
  3   199 
  3   200 
  3   201 
  3   202 
  3   203 
  3   204 /*	ALTERNATE   SCU  DECLARATION		*/
  3   205 
  3   206 
  3   207 dcl 1 scux based (scup) aligned,
  3   208 
  3   209    (2 pad0 bit (36),
  3   210 
  3   211     2 fd,						/* GROUP II  FAULT DATA */
  3   212       3 isn bit (1),				/* illegal segment number */
  3   213       3 ioc bit (1),				/* illegal op  code  */
  3   214       3 ia_am bit (1),				/* illegal address - modifier */
  3   215       3 isp bit (1),				/* illegal slave  procedure */
  3   216       3 ipr bit (1),				/* illegal procedure */
  3   217       3 nea bit (1),				/* non existent address */
  3   218       3 oobb bit (1),				/* out of bounds */
  3   219       3 pad bit (29),
  3   220 
  3   221     2 pad2 bit (36),
  3   222 
  3   223     2 pad3a bit (18),
  3   224 
  3   225     2 tsr_stat (0:2),				/* TSR  STATUS  as an  ARRAY */
  3   226       3 prn bit (3),				/* PR  number */
  3   227       3 prv bit (1),				/* PR  valid bit */
  3   228 
  3   229     2 pad3b bit (6)) unaligned,
  3   230 
  3   231     2 pad45 (0:1) bit (36),
  3   232 
  3   233     2 instr (0:1) bit (36);				/* Instruction ARRAY */
  3   234 
  3   235 
  3   236 
  3   237 /*  END INCLUDE FILE   mc.incl.pl1 */
      218 
      219 
  4     1 /* BEGIN INCLUDE FILE gtss_ust_ext_.incl.pl1 */
  4     2 /* UST: User Status Table 
  4     3*   definitions based on 
  4     4*   System Tables, Order number DD14-01E, January 1981
  4     5*   Section 15, Time Sharing System
  4     6*
  4     7*   Authors: Robert J. Grimes	Created
  4     8*   -	  Albert N. Kepner	  1978
  4     9*   -	  Robert M. May
  4    10*   -	  David B. Ward
  4    11*   Change:  Dave Ward	02/23/79 Level 4 numbering.
  4    12*   Change:  Ron Barstad  83-07-12 Repaired damaged formating and word offset comments
  4    13*                                  Brought up to 4JS3 functionality
  4    14**/
  4    15 /* octal word offsets of entries */
  4    16 dcl 1 gtss_ust_ext_$ust aligned ext,
  4    17       3 gtss_ust,
  4    18 /* 0-1  */	4 lid		bit (72),
  4    19 /* 2    */	4 lstp		bit (36),
  4    20 /* 3    */	4 ltin		bit (36),
  4    21 /* 4    */	4 lstio,
  4    22 			5 no_of_chars_by_8  fixed bin (18) uns unal,
  4    23 			5 no_of_disk_io     fixed bin (18) uns unal,
  4    24 /* 5    */	4 lsnub		bit (36),
  4    25 /* 6-7  */	4 lchg		bit (72),
  4    26 /* 10   */	4 lbuf,
  4    27 			5 address		bit (18)unaligned,
  4    28 			5 tally		bit (1)unaligned,
  4    29 			5 terminal_type	bit (5)unaligned,
  4    30 			5 station_id	bit (12)unaligned,
  4    31 /* 11-12 */	4 liost (0:1)	bit (36),
  4    32 /* 13   */	4 lcc		bit (36),
  4    33 /* 14   */	4 lback,
  4    34 			5 fill1		bit (18) unaligned,
  4    35 			5 gwake		fixed bin (17) unaligned,
  4    36 /* 15   */	4 lflag,
  4    37 			5 mp_list		bit (18) unaligned,
  4    38 			5 flags unaligned,
  4    39 				6 b18		bit (1) unaligned,
  4    40 				6 b19		bit (1) unaligned,
  4    41 				6 b20		bit (1) unaligned,
  4    42 				6 b21		bit (1) unaligned,
  4    43 				6 b22		bit (1) unaligned,
  4    44 				6 b23		bit (1) unaligned,
  4    45 				6 b24		bit (1) unaligned,
  4    46 				6 b25		bit (1) unaligned,
  4    47 				6 b26		bit (1) unaligned,
  4    48 				6 b27		bit (1) unaligned,
  4    49 				6 b28		bit (1) unaligned,
  4    50 				6 b29		bit (1) unaligned,
  4    51 				6 b30		bit (1) unaligned,
  4    52 				6 b31		bit (1) unaligned,
  4    53 				6 b32		bit (1) unaligned,
  4    54 				6 b33		bit (1) unaligned,
  4    55 				6 b34		bit (1) unaligned,
  4    56 				6 b35		bit (1) unaligned,
  4    57 /* 16   */	4 lkdss		bit (36),
  4    58 /* 17   */	4 lfile,
  4    59 			5 program_stack	fixed bin (17) unal,
  4    60 			5 file_list_ptr	bit (18) unal,
  4    61 /* 20   */	4 lttys		bit (36),
  4    62 /* 21   */	4 lswth,
  4    63 			5 b0		bit (1) unaligned,
  4    64 			5 b1		bit (1) unaligned,
  4    65 			5 b2		bit (1) unaligned,
  4    66 			5 b3		bit (1) unaligned,
  4    67 			5 b4		bit (1) unaligned,
  4    68 			5 b5		bit (1) unaligned,
  4    69 			5 b6		bit (1) unaligned,
  4    70 			5 b7		bit (1) unaligned,
  4    71 			5 b8		bit (1) unaligned,
  4    72 			5 b9		bit (1) unaligned,
  4    73 			5 b10		bit (1) unaligned,
  4    74 			5 b11		bit (1) unaligned,
  4    75 			5 b12		bit (1) unaligned,
  4    76 			5 b13		bit (1) unaligned,
  4    77 			5 b14		bit (1) unaligned,
  4    78 			5 b15		bit (1) unaligned,
  4    79 			5 b16		bit (1) unaligned,
  4    80 			5 b17		bit (1) unaligned,
  4    81 			5 b18		bit (1) unaligned,
  4    82 			5 b19		bit (1) unaligned,
  4    83 			5 b20		bit (1) unaligned,
  4    84 			5 b21		bit (1) unaligned,
  4    85 			5 b22		bit (1) unaligned,
  4    86 			5 b23		bit (1) unaligned,
  4    87 			5 b24		bit (1) unaligned,
  4    88 			5 b25		bit (1) unaligned,
  4    89 			5 b26		bit (1) unaligned,
  4    90 			5 b27		bit (1) unaligned,
  4    91 			5 b28		bit (1) unaligned,
  4    92 			5 b29		bit (1) unaligned,
  4    93 			5 b30		bit (1) unaligned,
  4    94 			5 b31		bit (1) unaligned,
  4    95 			5 b32		bit (1) unaligned,
  4    96 			5 b33		bit (1) unaligned,
  4    97 			5 b34		bit (1) unaligned,
  4    98 			5 b35		bit (1) unaligned,
  4    99 /* 22   */	4 lsize,
  4   100 			5 bar		fixed bin (17) unaligned,
  4   101 			5 limit		bit (18) unaligned,
  4   102 /* 23... */	4 lswap,
  4   103 			5 fill		bit (18) unal,
  4   104 			5 size		bit (18) unal,
  4   105 /* ...24 */	4 transfer_cell	bit (36) unal,
  4   106 /* 25   */	4 lerrm		bit (36),
  4   107 /* 26-37 */	4 lcfil (0:9)	bit (36),
  4   108 /* 40   */	4 lsybc,
  4   109 			5 b0_17		fixed bin (17) unaligned,
  4   110 			5 b18_35		fixed bin (17) unaligned,
  4   111 /* 41-42 */	4 lstem (0:1)	bit (36),
  4   112 /* 43    */	4 lcals,
  4   113 			5 b0_17		fixed bin (17) unaligned,
  4   114 			5 b18_35		bit (18) unaligned,
  4   115 /* 44-51 */	4 subsystems (3),
  4   116 			5 content_lswap,
  4   117 				6 fill		bit (18) unal,
  4   118 				6 size		bit (18) unal,
  4   119 			5 tally_address	fixed bin (17) unaligned,
  4   120 			5 ss_flags	bit (18) unaligned,
  4   121 /* 52   */	4 ltalc,
  4   122 			5 tod		fixed bin (17) unaligned,
  4   123 			5 startup		fixed bin (17) unaligned,
  4   124 /* 53   */	4 lspts		fixed bin (35),
  4   125 /* 54   */	4 lflg2,
  4   126 			5 b0		bit (1) unaligned,
  4   127 			5 b1		bit (1) unaligned,
  4   128 			5 b2		bit (1) unaligned,
  4   129 			5 b3		bit (1) unaligned,
  4   130 			5 b4		bit (1) unaligned,
  4   131 			5 b5		bit (1) unaligned,
  4   132 			5 b6		bit (1) unaligned,
  4   133 			5 b7		bit (1) unaligned,
  4   134 			5 b8		bit (1) unaligned,
  4   135 			5 b9		bit (1) unaligned,
  4   136 			5 b10		bit (1) unaligned,
  4   137 			5 b11		bit (1) unaligned,
  4   138 			5 b12		bit (1) unaligned,
  4   139 			5 b13		bit (1) unaligned,
  4   140 			5 b14		bit (1) unaligned,
  4   141 			5 b15		bit (1) unaligned,
  4   142 			5 b16		bit (1) unaligned,
  4   143 			5 b17		bit (1) unaligned,
  4   144 			5 b18		bit (1) unaligned,
  4   145 			5 b19		bit (1) unaligned,
  4   146 			5 b20		bit (1) unaligned,
  4   147 			5 b21		bit (1) unaligned,
  4   148 			5 b22		bit (1) unaligned,
  4   149 			5 b23		bit (1) unaligned,
  4   150 			5 b24		bit (1) unaligned,
  4   151 			5 b25		bit (1) unaligned,
  4   152 			5 b26		bit (1) unaligned,
  4   153 			5 b27		bit (1) unaligned,
  4   154 			5 b28		bit (1) unaligned,
  4   155 			5 b29		bit (1) unaligned,
  4   156 			5 b30		bit (1) unaligned,
  4   157 			5 b31		bit (1) unaligned,
  4   158 			5 b32		bit (1) unaligned,
  4   159 			5 b33		bit (1) unaligned,
  4   160 			5 b34		bit (1) unaligned,
  4   161 			5 b35		bit (1) unaligned,
  4   162 /* 55-60 */	4 lsftm (0:3)	bit (36),
  4   163 /* 61    */	4 lsprt		fixed bin (35),
  4   164 /* 62    */	4 ltrm		bit (36),
  4   165 /* 63    */	4 linno		fixed bin (35),
  4   166 /* 64    */	4 lincr		fixed bin (35),
  4   167 /* 65    */	4 ltdes		bit (36),
  4   168 /* 66    */	4 lbptr		bit (36),
  4   169 /* 67    */	4 lpptr,
  4   170 			5 last_file_pat_ptr	bin (18) uns unal,
  4   171 			5 lpptr_reserved	bin (18) uns unal,
  4   172 /* 70    */	4 lsclp		bit (36),
  4   173 /* 71    */	4 limit		fixed bin (35),
  4   174 /* 72    */	4 lacpt,
  4   175 			5 jout_pat_offset	bit (18) unal,
  4   176 			5 permissions unal,
  4   177 				6 lodx		bit (1) unal,
  4   178 				6 cardin		bit (1) unal,
  4   179 				6 talk		bit (1) unal,
  4   180 				6 lods		bit (1) unal,
  4   181 			5 cardin_urgency	bit (14) unal,
  4   182 /* 73    */	4 ldrl,
  4   183 			5 ilc		bit (18) unaligned,
  4   184 			5 code		fixed bin (17) unaligned,
  4   185 /* 74    */	4 ljsnb		bit (36),
  4   186 /* 75    */	4 ltm0		bit (36),
  4   187 /* 76    */	4 ltm1		bit (36),
  4   188 /* 77    */	4 ltm2		bit (36),
  4   189 /* 100   */	4 ltm3		bit (36),
  4   190 /* 101   */	4 ltm4		bit (36),
  4   191 /* 102   */	4 ltm5		bit (36),
  4   192 /* 103   */	4 ltmwt		bit (36),
  4   193 /* 104   */	4 ltmrs		bit (36),
  4   194 /* 105   */	4 ltc0		bit (36),
  4   195 /* 106   */	4 ltc1		bit (36),
  4   196 /* 107   */	4 ltc2		bit (36),
  4   197 /* 110   */	4 lct3		bit (36),
  4   198 /* 111   */	4 ltc4		bit (36),
  4   199 /* 112   */	4 ltc5		bit (36),
  4   200 /* 113   */	4 ltcw		bit (36),
  4   201 /* 114   */	4 lkst		bit (36),
  4   202 /* 115   */	4 lkst2		bit (36),
  4   203 /* 116   */	4 lkcc		bit (36),
  4   204 /* 117   */	4 lkms		bit (36),
  4   205 /* 120-121 */	4 lksdc (0:1)	bit (36),
  4   206 /* 122   */	4 lkntp		bit (36),
  4   207 /* 123   */	4 lkrdc		bit (36),
  4   208 /* 124   */	4 lpqf		bit (36),
  4   209 /* 125   */	4 lpqb		bit (36),
  4   210 /* 126   */	4 lustl		bit (36),
  4   211 /* 127   */	4 ltemp		bit (36),
  4   212 /* 130   */	4 lrtll,
  4   213 			5 word_length	fixed bin unaligned,
  4   214 			5 char_length	fixed bin unaligned,
  4   215 /* 131   */	4 ltim		bit (36),
  4   216 /* 132   */	4 lcfio,
  4   217 			5 sect_out	fixed bin(18)unsigned unal,
  4   218 			5 sect_in		fixed bin(18)unsigned unal,
  4   219 /* 133   */	4 lcfst,
  4   220 			5 initial_sect_out	fixed bin(18)unsigned unal,
  4   221 			5 start_term	fixed bin(18)unsigned unal,
  4   222 /* 134   */	4 lcmpt		bit (36),
  4   223 /* 135   */	4 lcjid		bit (36),
  4   224 /* 136-137 */	4 lrcal (0:1)	bit (36),
  4   225 /* 140   */	4 lrdta		bit (36),
  4   226 /* 141   */	4 lrrsk		bit (36),
  4   227 /* 142   */	4 lrskd		bit (36),
  4   228 /* 143   */	4 lrcc		bit (36),
  4   229 /* 144-145 */	4 lrsts (0:1)	bit (36),
  4   230 /* 146   */	4 lrtm		bit (36),
  4   231 /* 147   */	4 lswt2,
  4   232 			5 b0		bit (1) unaligned,
  4   233 			5 b1		bit (1) unaligned,
  4   234 			5 b2		bit (1) unaligned,
  4   235 			5 b3		bit (1) unaligned,
  4   236 			5 b4		bit (1) unaligned,
  4   237 			5 b5		bit (1) unaligned,
  4   238 			5 b6		bit (1) unaligned,
  4   239 			5 b7		bit (1) unaligned,
  4   240 			5 b8		bit (1) unaligned,
  4   241 			5 b9		bit (1) unaligned,
  4   242 			5 b10		bit (1) unaligned,
  4   243 			5 b11		bit (1) unaligned,
  4   244 			5 b12		bit (1) unaligned,
  4   245 			5 b13		bit (1) unaligned,
  4   246 			5 b14		bit (1) unaligned,
  4   247 			5 b15		bit (1) unaligned,
  4   248 			5 b16		bit (1) unaligned,
  4   249 			5 b17		bit (1) unaligned,
  4   250 			5 b18		bit (1) unaligned,
  4   251 			5 b19		bit (1) unaligned,
  4   252 			5 b20		bit (1) unaligned,
  4   253 			5 b21		bit (1) unaligned,
  4   254 			5 b22		bit (1) unaligned,
  4   255 			5 b23		bit (1) unaligned,
  4   256 			5 b24		bit (1) unaligned,
  4   257 			5 b25		bit (1) unaligned,
  4   258 			5 b26		bit (1) unaligned,
  4   259 			5 b27		bit (1) unaligned,
  4   260 			5 b28		bit (1) unaligned,
  4   261 			5 b29		bit (1) unaligned,
  4   262 			5 b30		bit (1) unaligned,
  4   263 			5 b31		bit (1) unaligned,
  4   264 			5 b32		bit (1) unaligned,
  4   265 			5 b33		bit (1) unaligned,
  4   266 			5 b34		bit (1) unaligned,
  4   267 			5 b35		bit (1) unaligned,
  4   268 /* 150   */	4 llsnb		bit (36),
  4   269 /* 151   */	4 lesq		bit (36),
  4   270 /* 152-153 */	4 lumc (0:1)	bit (36),
  4   271 /* 154-155 */	4 lfnam (0:1)	bit (36),
  4   272 /* 156   */	4 lopts		bit (36),
  4   273 /* 157   */	4 licec,
  4   274 			5 b0_17		bit (18) unaligned,
  4   275 			5 b18_35		fixed bin (17) unaligned,
  4   276 /* 160   */	4 lflg3,
  4   277 			5 b0		bit (1) unaligned,
  4   278 			5 b1		bit (1) unaligned,
  4   279 			5 b2		bit (1) unaligned,
  4   280 			5 b3		bit (1) unaligned,
  4   281 			5 b4		bit (1) unaligned,
  4   282 			5 b5		bit (1) unaligned,
  4   283 			5 b6		bit (1) unaligned,
  4   284 			5 b7		bit (1) unaligned,
  4   285 			5 b8		bit (1) unaligned,
  4   286 			5 b9		bit (1) unaligned,
  4   287 			5 b10		bit (1) unaligned,
  4   288 			5 b11		bit (1) unaligned,
  4   289 			5 b12		bit (1) unaligned,
  4   290 			5 b13		bit (1) unaligned,
  4   291 			5 b14		bit (1) unaligned,
  4   292 			5 b15		bit (1) unaligned,
  4   293 			5 b16		bit (1) unaligned,
  4   294 			5 b17		bit (1) unaligned,
  4   295 			5 b18		bit (1) unaligned,
  4   296 			5 b19		bit (1) unaligned,
  4   297 			5 b20		bit (1) unaligned,
  4   298 			5 b21		bit (1) unaligned,
  4   299 			5 b22		bit (1) unaligned,
  4   300 			5 b23		bit (1) unaligned,
  4   301 			5 b24		bit (1) unaligned,
  4   302 			5 b25		bit (1) unaligned,
  4   303 			5 b26		bit (1) unaligned,
  4   304 			5 b27		bit (1) unaligned,
  4   305 			5 b28		bit (1) unaligned,
  4   306 			5 b29		bit (1) unaligned,
  4   307 			5 b30		bit (1) unaligned,
  4   308 			5 b31		bit (1) unaligned,
  4   309 			5 b32		bit (1) unaligned,
  4   310 			5 b33		bit (1) unaligned,
  4   311 			5 b34		bit (1) unaligned,
  4   312 			5 b35		bit (1) unaligned,
  4   313 /* 161-163 */	4 lpage (0:2)	bit (36),
  4   314 /* 164   */	4 lsit1		bit (36),
  4   315 /* 165   */	4 lsit2		bit (36),
  4   316 /* 166   */	4 lsit3		bit (36),
  4   317 /* 167   */	4 lsit4		bit (36),
  4   318 /* The following entries are maintained by gtss and are not found in TSS UST */
  4   319 /* 170   */	4 lxxx, /* program stack index, offset from gtss_ust */
  4   320 			5 b0_17		fixed bin (17) unaligned,
  4   321 			5 b18_35		bit (18) unaligned, /* not used */
  4   322 /* 171-175 */	4 lprgs (5),
  4   323 			5 b0_17		fixed bin (17) unaligned,
  4   324 			5 b18_35		fixed bin (17) unaligned,
  4   325 /* 176   */	4 fill	bit (36),
  4   326 /* 177   */	4 remote_io_buffer aligned,
  4   327 			5 buffer_control_word,
  4   328 				6 current_line_pointer  bit (18)unal,
  4   329 				6 buffer_threshold_address  bit (18)unal,
  4   330 			5 number_words_transmitted	fixed bin (17)unal,
  4   331 			5 FILL1			fixed bin (17)unal,
  4   332 			5 count_of_characters_transmitted fixed bin (17)unal,
  4   333 			5 FILL2			fixed bin (17)unal,
  4   334 			5 characters_transmitted (244) char (1) unal,
  4   335 /* 277   */	4 word_after_ust		bit (36) aligned;
  4   336 
  4   337 /*   END INCLUDE FILE gtss_ust_ext_.incl.pl1 */
      220 
      221 
  5     1 /* BEGIN INCLUDE FILE gtss_entry_dcls.incl.pl1 */
  5     2 /*
  5     3*  Created: (Wardd Multics)  06/30/78 1624.8 mst Fri 
  5     4*  Modified: Ron Barstad  84-02-24  Fixed wrong and obsolete entries
  5     5**/
  5     6 
  5     7 /**  gtss external entry variables.		**/
  5     8 dcl  com_err_                                   entry() options(variable);
  5     9 dcl  gtss_CFP_abort_                            entry options(variable);
  5    10 dcl  gtss_CFP_break_                            entry options(variable);
  5    11 dcl  gtss_CFP_input_                            entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  5    12 dcl  gtss_CFP_output_                           entry (ptr, ptr, fixed bin(21), fixed bin(35));
  5    13 dcl  gtss_abandon_CFP_                          entry options(variable);
  5    14 dcl  gtss_abort_dump_                           entry (fixed bin(18));
  5    15 dcl  gtss_abort_subsystem_                      entry options (variable);
  5    16 dcl  gtss_abort_subsystem_$not_imp              entry (ptr, fixed bin(24));
  5    17 dcl  gtss_abs_login_banner_		        entry() returns(char(*));
  5    18 dcl  gtss_abs_logout_banner_		        entry() returns(char(*));
  5    19 dcl  gtss_abs_$abs_equiv                        entry options(variable);
  5    20 dcl  gtss_abs_$cpu_runout		        entry (ptr, char(4));
  5    21 dcl  gtss_abs_$create_absin                     entry() returns(char(*));
  5    22 dcl  gtss_abs_$dabt_check		        entry (ptr, char(4));
  5    23 dcl  gtss_abs_$get_id                           entry (char(5)) returns(char(19));
  5    24 dcl  gtss_abs_$get_drm                          entry() returns(char(*));
  5    25 dcl  gtss_adjust_size_                          entry (ptr);
  5    26 dcl  gtss_aft_$add                              entry (char(8), fixed bin(24), fixed bin(35));
  5    27 dcl  gtss_aft_$delete                           entry (char(8), fixed bin(24), fixed bin(35));
  5    28 dcl  gtss_aft_$find                             entry (char(8), fixed bin(24), fixed bin(35));
  5    29 dcl  gtss_aft_$initialize                       entry (fixed bin(35));
  5    30 dcl  gtss_ascii_bcd_                            entry (ptr, fixed bin, ptr);
  5    31 dcl  gtss_attributes_mgr_$get                   entry (ptr, fixed bin(35));
  5    32 dcl  gtss_attributes_mgr_$set                   entry (ptr, fixed bin(35));
  5    33 dcl  gtss_bcd_ascii_                            entry (ptr, fixed bin(24), ptr);
  5    34 dcl  gtss_bcd_ascii_$lc                         entry (ptr, fixed bin(24), ptr);
  5    35 dcl  gtss_break_vector_                         entry ();
  5    36 dcl  gtss_break_vector_$drl_in_progress         entry() returns(bit(1));
  5    37 dcl  gtss_break_vector_$status                  entry() returns(bit(1));
  5    38 dcl  gtss_build_                                entry options(variable);
  5    39 dcl  gtss_com_err_                              entry options(variable);
  5    40 dcl  gtss_derail_processor_                     entry (ptr, char(*), ptr, ptr, bit(1) aligned) /* called at fault time instead of signal_ */;
  5    41 dcl  gtss_derail_processor_$set                 entry options(variable);
  5    42 dcl  gtss_dq_$catp                              entry (char (5), ptr, fixed bin (18) unsigned);
  5    43 dcl  gtss_dq_$create                            entry (bit(1));
  5    44 dcl  gtss_dq_$dibp                              entry (char(5), ptr);
  5    45 dcl  gtss_dq_$entries_info		        entry (ptr, fixed bin (18) unsigned, fixed bin (18) unsigned);
  5    46 dcl  gtss_dq_$hdrp                              entry (ptr);
  5    47 dcl  gtss_dq_$mod_js		        entry (char(5), fixed bin (6) unsigned, bit (1));
  5    48 dcl  gtss_dq_$open_exc		        entry (bit(1));
  5    49 dcl  gtss_dq_$open_gen		        entry (bit(1));
  5    50 dcl  gtss_drl_abort_                            entry (ptr, fixed bin);
  5    51 dcl  gtss_drl_addmem_                           entry (ptr, fixed bin);
  5    52 dcl  gtss_drl_callss_                           entry (ptr, fixed bin);
  5    53 dcl  gtss_drl_corfil_                           entry (ptr, fixed bin);
  5    54 dcl  gtss_drl_defil_                            entry (ptr, fixed bin);
  5    55 dcl  gtss_drl_defil_$subr                       entry (ptr, ptr, ptr);
  5    56 dcl  gtss_drl_dio_                              entry (ptr, fixed bin);
  5    57 dcl  gtss_drl_drlimt_                           entry (ptr, fixed bin);
  5    58 dcl  gtss_drl_drlsav_                           entry (ptr, fixed bin);
  5    59 dcl  gtss_drl_filact_                           entry (ptr, fixed bin);
  5    60 dcl  gtss_drl_filsp_                            entry (ptr, fixed bin);
  5    61 dcl  gtss_drl_grow_                             entry (ptr, fixed bin);
  5    62 dcl  gtss_drl_gwake_                            entry (ptr, fixed bin);
  5    63 dcl  gtss_drl_jsts_                             entry (ptr, fixed bin);
  5    64 dcl  gtss_drl_kin_                              entry (ptr, fixed bin);
  5    65 dcl  gtss_drl_kotnow_                           entry (ptr, fixed bin);
  5    66 dcl  gtss_drl_kotnow_$gtss_drl_kout_            entry (ptr, fixed bin);
  5    67 dcl  gtss_drl_koutn_                            entry (ptr, fixed bin);
  5    68 dcl  gtss_drl_morlnk_                           entry (ptr, fixed bin);
  5    69 dcl  gtss_drl_msub_                             entry (ptr, fixed bin);
  5    70 dcl  gtss_drl_objtim_                           entry (ptr, fixed bin);
  5    71 dcl  gtss_drl_part_                             entry (ptr, fixed bin);
  5    72 dcl  gtss_drl_pasaft_                           entry (ptr, fixed bin);
  5    73 dcl  gtss_drl_pasdes_                           entry (ptr, fixed bin);
  5    74 dcl  gtss_drl_pasust_                           entry (ptr, fixed bin);
  5    75 dcl  gtss_drl_pdio_                             entry (ptr, fixed bin);
  5    76 dcl  gtss_drl_prgdes_                           entry (ptr, fixed bin);
  5    77 dcl  gtss_drl_pseudo_                           entry (ptr, fixed bin);
  5    78 dcl  gtss_drl_relmem_                           entry (ptr, fixed bin);
  5    79 dcl  gtss_drl_restor_                           entry (ptr, fixed bin);
  5    80 dcl  gtss_drl_retfil_                           entry (ptr, fixed bin);
  5    81 dcl  gtss_drl_return_                           entry (ptr, fixed bin);
  5    82 dcl  gtss_drl_rew_                              entry (ptr, fixed bin);
  5    83 dcl  gtss_drl_rstswh_                           entry (ptr, fixed bin);
  5    84 dcl  gtss_drl_setlno_                           entry (ptr, fixed bin);
  5    85 dcl  gtss_drl_setswh_                           entry (ptr, fixed bin);
  5    86 dcl  gtss_drl_snumb_                            entry (ptr, fixed bin);
  5    87 dcl  gtss_drl_spawn_                            entry (ptr, fixed bin);
  5    88 dcl  gtss_drl_spawn_$gtss_drl_pasflr_           entry (ptr, fixed bin);
  5    89 dcl  gtss_drl_stoppt_                           entry (ptr, fixed bin);
  5    90 dcl  gtss_drl_switch_                           entry (ptr, fixed bin);
  5    91 dcl  gtss_drl_sysret_                           entry (ptr, fixed bin);
  5    92 dcl  gtss_drl_t_cfio_                           entry (ptr, fixed bin);
  5    93 dcl  gtss_drl_t_cmov_                           entry (ptr, fixed bin);
  5    94 dcl  gtss_drl_t_err_                            entry (ptr, fixed bin);
  5    95 dcl  gtss_drl_t_goto_                           entry (ptr, fixed bin);
  5    96 dcl  gtss_drl_t_linl_                           entry (ptr, fixed bin);
  5    97 dcl  gtss_drl_t_rscc_                           entry (ptr, fixed bin);
  5    98 dcl  gtss_drl_tapein_                           entry (ptr, fixed bin);
  5    99 dcl  gtss_drl_task_                             entry (ptr, fixed bin);
  5   100 dcl  gtss_drl_termtp_                           entry (ptr, fixed bin);
  5   101 dcl  gtss_drl_time_                             entry (ptr, fixed bin);
  5   102 dcl  gtss_drun_                                 entry (bit(1));
  5   103 dcl  gtss_dsd_lookup_                           entry (char(8) var) returns(fixed bin(24));
  5   104 dcl  gtss_dsd_process_                          entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  5   105 dcl  gtss_edit_dsd_                             entry (ptr, fixed bin(21)) returns(fixed bin(24));
  5   106 dcl  gtss_mcfc_empty                            entry (char(*) var);
  5   107 dcl  gtss_expand_pathname_                      entry (ptr, char(*), char(*), fixed bin(35));
  5   108 dcl  gtss_expand_pathname_$verify_umc           entry (ptr, char(*), char(*), bit(18), fixed bin(35));
  5   109 dcl  gtss_fault_processor_                      entry options(variable);
  5   110 dcl  gtss_find_cond_frame_		        entry (char(32) var) returns(ptr);
  5   111 dcl  gtss_fault_processor_$timer_runout         entry (ptr, char(*));
  5   112 dcl  gtss_filact_error_status_                  entry (fixed bin(35))returns(bit(12));
  5   113 dcl  gtss_filact_funct02_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   114 dcl  gtss_filact_funct03_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   115 dcl  gtss_filact_funct04_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   116 dcl  gtss_filact_funct05_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   117 dcl  gtss_filact_funct08_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   118 dcl  gtss_filact_funct10_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   119 dcl  gtss_filact_funct11_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   120 dcl  gtss_filact_funct14_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   121 dcl  gtss_filact_funct18_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   122 dcl  gtss_filact_funct19_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   123 dcl  gtss_filact_funct21_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   124 dcl  gtss_filact_funct22_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   125 dcl  gtss_mcfc_init_                            entry (char(*) var);
  5   126 dcl  gtss_interp_prim_                          entry options(variable);
  5   127 dcl  gtss_interp_prim_$callss                   entry (char(4), ptr);
  5   128 dcl  gtss_interp_prim_$sysret                   entry options(variable);
  5   129 dcl  gtss_interp_prim_$t_goto                   entry (char(4));
  5   130 dcl  gtss_ios_change_size_                      entry (fixed bin(24), fixed bin(24), bit(1), fixed bin(24), fixed bin(35));
  5   131 dcl  gtss_ios_close_                            entry (fixed bin(24), ptr, fixed bin(35));
  5   132 dcl  gtss_ios_exchange_names_                   entry (fixed bin(24), fixed bin(24), fixed bin(24), fixed bin(35));
  5   133 dcl  gtss_ios_initialize_                       entry options(variable);
  5   134 dcl  gtss_ios_io_                               entry (fixed bin(24), ptr, ptr, fixed bin(24), fixed bin(24), fixed bin(35));
  5   135 dcl  gtss_ios_open_                             entry (fixed bin(24), char(168), char(32), bit(6), bit(1), ptr, ptr, fixed bin(35));
  5   136 dcl  gtss_ios_position_                         entry (fixed bin(24), fixed bin(24), fixed bin(24), bit(6), ptr);
  5   137 dcl  gtss_mcfc_$delete		        entry (fixed bin(24), char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  5   138 dcl  gtss_mcfc_$open                            entry (char(*), char(*), bit(6), bit(36) aligned, ptr, fixed bin(35));
  5   139 dcl  gtss_mcfc_$close                           entry (char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  5   140 dcl  gtss_read_starCFP_                         entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  5   141 dcl  gtss_read_starCFP_$last_os                 entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  5   142 dcl  gtss_run_subsystem_                        entry (fixed bin(24));
  5   143 dcl  gtss_run_subsystem_$finish                 entry options(variable);
  5   144 dcl  gtss_run_subsystem_$restor                 entry (fixed bin(24), ptr);
  5   145 dcl  gtss_run_subsystem_$restor_perm            entry (fixed bin(24), ptr, fixed bin(18));
  5   146 dcl  gtss_set_slave_                            entry (fixed bin (24), ptr);
  5   147 dcl  gtss_set_slave_$load_bar                   entry (fixed bin (17));
  5   148 dcl  gtss_update_safe_store_                    entry (ptr);
  5   149 dcl  gtss_verify_access_		        entry (char(*), char(*), fixed bin(24), bit(6), bit(12) aligned);
  5   150 dcl  gtss_verify_access_$check_forced_access    entry (char(*), char(*), fixed bin(24));
  5   151 dcl  gtss_write_starCFP_                        entry (ptr, ptr, fixed bin(21), fixed bin(35));
  5   152 /*   END INCLUDE FILE gtss_entry_dcls.incl.pl1 */
      222 
      223 
  6     1 /* BEGIN INCLUDE FILE gtss_db_names.incl.pl1 */
  6     2 /*
  6     3*  Created:  (Wardd Multics)  03/29/79 1909.1 mst Thu 
  6     4**/
  6     5 
  6     6 /* To provide a new debugging switch:
  6     7*
  6     8*   1) Locate the comment "Insert next entry above this comment".
  6     9*
  6    10*   2) Place a new declaration for a db_ variable just
  6    11*      above this comment, in the same manner as the
  6    12*      current declaration just above the comment, using
  6    13*      the next integer gtss_ext_$db index.
  6    14*
  6    15*   3) Execute the gtss|db_names ted macro (this updates
  6    16*      the sorted name table).
  6    17*
  6    18*   4) Example use:
  6    19*
  6    20*      if db_drl_grow then do;
  6    21*      .
  6    22*      .
  6    23*      .
  6    24*      debug i/o statements using com_err_ or ioa_
  6    25*      .
  6    26*      .
  6    27*      .
  6    28*      end;
  6    29*
  6    30**/
  6    31 
  6    32 dcl (
  6    33  db_		bit(1) defined(gtss_ext_$db(01))
  6    34 ,db_CFP_input	bit(1) defined(gtss_ext_$db(02))
  6    35 ,db_drl_addmem	bit(1) defined(gtss_ext_$db(03))
  6    36 ,db_drl_defil	bit(1) defined(gtss_ext_$db(04))
  6    37 ,db_drl_filact	bit(1) defined(gtss_ext_$db(05))
  6    38 ,db_drl_filsp	bit(1) defined(gtss_ext_$db(06))
  6    39 ,db_drl_grow	bit(1) defined(gtss_ext_$db(07))
  6    40 ,db_drl_rew	bit(1) defined(gtss_ext_$db(08))
  6    41 ,db_filact_funct02	bit(1) defined(gtss_ext_$db(09))
  6    42 ,db_filact_funct03	bit(1) defined(gtss_ext_$db(10))
  6    43 ,db_filact_funct04	bit(1) defined(gtss_ext_$db(11))
  6    44 ,db_filact_funct05	bit(1) defined(gtss_ext_$db(12))
  6    45 ,db_filact_funct10	bit(1) defined(gtss_ext_$db(13))
  6    46 ,db_filact_funct11	bit(1) defined(gtss_ext_$db(14))
  6    47 ,db_filact_funct14	bit(1) defined(gtss_ext_$db(15))
  6    48 ,db_filact_funct18	bit(1) defined(gtss_ext_$db(16))
  6    49 ,db_filact_funct19	bit(1) defined(gtss_ext_$db(17))
  6    50 ,db_filact_funct21	bit(1) defined(gtss_ext_$db(18))
  6    51 ,db_filact_funct22	bit(1) defined(gtss_ext_$db(19))
  6    52 ,db_interp_prim	bit(1) defined(gtss_ext_$db(20))
  6    53 ,db_ios		bit(1) defined(gtss_ext_$db(21))
  6    54 ,db_run_subsystem	bit(1) defined(gtss_ext_$db(22))
  6    55 ,db_drl_t_cfio	bit(1) defined(gtss_ext_$db(23))
  6    56 ,db_drl_switch	bit(1) defined(gtss_ext_$db(24))
  6    57 ,db_drl_dio	bit(1) defined(gtss_ext_$db(25))
  6    58 ,db_drl_retfil	bit(1) defined(gtss_ext_$db(26))
  6    59 ,db_drl_msub	bit(1) defined(gtss_ext_$db(27))
  6    60 ,db_drl_callss	bit(1) defined(gtss_ext_$db(28))
  6    61 ,db_drl_rstswh	bit(1) defined(gtss_ext_$db(29))
  6    62 ,db_drl_setswh	bit(1) defined(gtss_ext_$db(30))
  6    63 ,db_mcfc		bit(1) defined(gtss_ext_$db(31))
  6    64 ,db_dq		bit(1) defined(gtss_ext_$db(32))
  6    65 ,db_abs		bit(1) defined(gtss_ext_$db(33))
  6    66 ,db_attributes_mgr	bit(1) defined(gtss_ext_$db(34))
  6    67 ,db_expand_pathname bit(1) defined(gtss_ext_$db(35))
  6    68 ,db_drl_part	bit(1) defined(gtss_ext_$db(36))
  6    69 ,db_drl_morlnk	bit(1) defined(gtss_ext_$db(37))
  6    70 ,db_drl_kin	bit(1) defined(gtss_ext_$db(38))
  6    71 /* Insert next entry above this comment. */
  6    72 );
  6    73 
  6    74 /* Table of sorted names. */
  6    75 dcl 1 debug_bit_names (38) static int options(constant)
  6    76 ,     2 name char(18)var init(
  6    77          "" ,"CFP_input" ,"abs" ,"attributes_mgr" ,"dq" ,"drl_addmem"
  6    78          ,"drl_callss" ,"drl_defil" ,"drl_dio" ,"drl_filact" ,"drl_filsp"
  6    79          ,"drl_grow" ,"drl_kin" ,"drl_morlnk" ,"drl_msub" ,"drl_part"
  6    80          ,"drl_retfil" ,"drl_rew" ,"drl_rstswh" ,"drl_setswh" ,"drl_switch"
  6    81          ,"drl_t_cfio" ,"expand_pathname" ,"filact_funct02" ,"filact_funct03"
  6    82          ,"filact_funct04" ,"filact_funct05" ,"filact_funct10" ,"filact_funct11"
  6    83          ,"filact_funct14" ,"filact_funct18" ,"filact_funct19" ,"filact_funct21"
  6    84          ,"filact_funct22" ,"interp_prim" ,"ios" ,"mcfc" ,"run_subsystem"
  6    85 			)
  6    86 ,     2 value fixed bin init(
  6    87          01 ,02 ,33 ,34 ,32 ,03 ,28 ,04 ,25 ,05 ,06 ,07 ,38 ,37 ,27 ,36 ,26 ,08
  6    88          ,29 ,30 ,24 ,23 ,35 ,09 ,10 ,11 ,12 ,13 ,14 ,15 ,16 ,17 ,18 ,19 ,20 ,21
  6    89          ,31 ,22
  6    90 			);
  6    91 /* End of table. */
  6    92 /*   END INCLUDE FILE gtss_db_names.incl.pl1 */
      224 
      225 
  7     1 /* BEGIN INCLUDE FILE gtss_device_cmds.incl.pl1 */
  7     2 /*
  7     3*  Created:  (Wardd Multics)  07/08/78 1503.0 mst Sat 
  7     4**/
  7     5 dcl  read_cmd		bit(6)static int options(constant)init("25"b3);
  7     6 dcl  seek_cmd		bit(6)static int options(constant)init("34"b3);
  7     7 dcl  write_cmd		bit(6)static int options(constant)init("31"b3);
  7     8 /*   END INCLUDE FILE gtss_device_cmds.incl.pl1 */
      226 
      227      end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/10/84  1044.8  gtss_write_starCFP_.pl1           >spec>on>7105>gtss_write_starCFP_.pl1
214          1    09/09/83  1714.2  gtss_starCF_.incl.pl1             >ldd>include>gtss_starCF_.incl.pl1
216          2    09/09/83  1713.8  gtss_ext_.incl.pl1                >ldd>include>gtss_ext_.incl.pl1
218          3    12/15/83  1100.4  mc.incl.pl1                       >ldd>include>mc.incl.pl1
220          4    09/09/83  1714.3  gtss_ust_ext_.incl.pl1            >ldd>include>gtss_ust_ext_.incl.pl1
222          5    12/10/84  1029.7  gtss_entry_dcls.incl.pl1          >spec>on>7105>gtss_entry_dcls.incl.pl1
224          6    09/09/83  1713.6  gtss_db_names.incl.pl1            >ldd>include>gtss_db_names.incl.pl1
226          7    09/09/83  1713.7  gtss_device_cmds.incl.pl1         >ldd>include>gtss_device_cmds.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
CR                                     based           char(1)                  unaligned dcl 203 ref 74
Device_Command            2     000024 external static bit(6)                   level 4 packed unaligned dcl 1-12 set ref 77*
OP2                       2     000024 external static structure                level 3 dcl 1-12
RECORD                   12     000024 external static structure                level 2 dcl 1-12
Seek_Address              6     000024 external static fixed bin(35,0)          level 2 dcl 1-12 set ref 62* 91*
aft_indx                113     000024 external static fixed bin(24,0)          level 3 dcl 1-12 set ref 78
bp                                     parameter       pointer                  dcl 178 set ref 15 32* 36* 72 135
cf                      112     000024 external static structure                level 2 dcl 1-12 set ref 79 79
char_string                            based           char(1)                  array unaligned dcl 179 set ref 131
chars                    13     000024 external static char(252)                level 3 dcl 1-12 set ref 64 72* 74 74*
code                            000100 automatic       fixed bin(35,0)          dcl 180 set ref 22* 23 79* 88* 94 113 116* 117 117*
                                                                                  119 144* 147*
cr                              000001 constant        bit(9)                   initial unaligned dcl 181 set ref 74
delete_$ptr                     000016 constant        entry                    external dcl 182 ref 144 147
ec                                     parameter       fixed bin(35,0)          dcl 183 set ref 15 39 52* 112* 156*
err_mess                        000101 automatic       char(250)                initial unaligned dcl 184 set ref 57* 66* 94* 102*
                                                                                  121* 161 161* 184*
error_table_$rqover             000020 external static fixed bin(35,0)          dcl 185 ref 94
filler                    2            based           structure                array level 2 unaligned dcl 207
fn                              000200 automatic       fixed bin(24,0)          dcl 186 set ref 22* 78* 79* 88*
gtss_CFP_abort_                 000030 constant        entry                    external dcl 5-9 ref 158
gtss_abort_subsystem_           000032 constant        entry                    external dcl 5-15 ref 161 167
gtss_aft_$find                  000034 constant        entry                    external dcl 5-28 ref 22
gtss_find_cond_frame_           000036 constant        entry                    external dcl 5-110 ref 157
gtss_ios_change_size_           000040 constant        entry                    external dcl 5-130 ref 88
gtss_ios_io_                    000042 constant        entry                    external dcl 5-134 ref 79
gtss_starCF_$FILE               000024 external static structure                level 1 dcl 1-12
gtss_ust                        000026 external static structure                level 2 dcl 4-16
gtss_ust_ext_$ust               000026 external static structure                level 1 dcl 4-16
hcs_$make_seg                   000022 constant        entry                    external dcl 187 ref 116 117
initial_sect_out        133     000026 external static fixed bin(18,0)          level 4 packed unsigned unaligned dcl 4-16 ref 55
l_info                                 based           structure                level 1 unaligned dcl 207
l_info_ptr                      000010 internal static pointer                  initial dcl 190 set ref 32 32 33 33 35 36 37 116*
                                                                                  127 128 130 130 131 131 131 133 133 134 134 135
                                                                                  135 144* 146*
l_len                     4            based           fixed bin(21,0)          array level 3 dcl 207 set ref 33 37 133*
l_ptr                     2            based           pointer                  array level 3 in structure "l_info" dcl 207
                                                                                  in procedure "gtss_write_starCFP_" set ref 32 36
                                                                                  131* 135
l_ptr                           000012 internal static pointer                  initial dcl 191 in procedure "gtss_write_starCFP_"
                                                                                  set ref 117* 131 147* 149*
lcfio                   132     000026 external static structure                level 3 dcl 4-16
lcfst                   133     000026 external static structure                level 3 dcl 4-16
line                                   based           char                     unaligned dcl 188 set ref 135* 135
loop_cntr                       000201 automatic       fixed bin(24,0)          dcl 189 set ref 35* 36 37*
mc_ptr                          000202 automatic       pointer                  initial dcl 192 set ref 157* 158 161* 167* 192*
n                               000204 automatic       fixed bin(18,0)          unsigned unaligned dcl 193 set ref 54* 55 62 63 91
no_characters            12     000024 external static fixed bin(18,0)          level 3 packed unsigned unaligned dcl 1-12 set ref
                                                                                  71*
no_chars                  1            based           fixed bin(24,0)          level 2 dcl 207 set ref 127* 131 134* 134
no_lines                               based           fixed bin(24,0)          level 2 dcl 207 set ref 32 33 35 128* 130* 130 131
                                                                                  133 135
normal_output                   000014 internal static bit(1)                   initial unaligned dcl 195 set ref 23 29 114 126*
                                                                                  136* 150*
pad_char                        000000 constant        bit(9)                   initial unaligned dcl 196 set ref 74
rl                                     parameter       fixed bin(21,0)          dcl 197 set ref 15 33* 37* 53 64 71 72 72 133 134
                                                                                  135 135
rl_chars                               based           char                     unaligned dcl 198 ref 72
rubout_char                            based           char(1)                  unaligned dcl 199 ref 74
saved_code                      000205 automatic       fixed bin(35,0)          dcl 200 set ref 113* 136
sect_out                132     000026 external static fixed bin(18,0)          level 4 packed unsigned unaligned dcl 4-16 set ref
                                                                                  54 63*
select_sequence                 000024 external static structure                level 2 dcl 1-12 set ref 79 79 79 79
st2                             000207 automatic       fixed bin(24,0)          dcl 202 set ref 88* 89 89
start_term              133(18) 000026 external static fixed bin(18,0)          level 4 packed unsigned unaligned dcl 4-16 set ref
                                                                                  58* 67* 96* 103*
status                          000206 automatic       fixed bin(24,0)          dcl 201 set ref 79* 86 100
up                                     parameter       pointer                  dcl 205 ref 15
write_cmd                              constant        bit(6)                   initial unaligned dcl 7-7 ref 77

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
NL                                     based           char(1)                  unaligned dcl 204
abx                                    internal static fixed bin(17,0)          initial dcl 3-42
apx                                    internal static fixed bin(17,0)          initial dcl 3-42
bbx                                    internal static fixed bin(17,0)          initial dcl 3-42
bpx                                    internal static fixed bin(17,0)          initial dcl 3-42
com_err_                        000000 constant        entry                    external dcl 5-8
db_                                    defined         bit(1)                   unaligned dcl 6-32
db_CFP_input                           defined         bit(1)                   unaligned dcl 6-32
db_abs                                 defined         bit(1)                   unaligned dcl 6-32
db_attributes_mgr                      defined         bit(1)                   unaligned dcl 6-32
db_dq                                  defined         bit(1)                   unaligned dcl 6-32
db_drl_addmem                          defined         bit(1)                   unaligned dcl 6-32
db_drl_callss                          defined         bit(1)                   unaligned dcl 6-32
db_drl_defil                           defined         bit(1)                   unaligned dcl 6-32
db_drl_dio                             defined         bit(1)                   unaligned dcl 6-32
db_drl_filact                          defined         bit(1)                   unaligned dcl 6-32
db_drl_filsp                           defined         bit(1)                   unaligned dcl 6-32
db_drl_grow                            defined         bit(1)                   unaligned dcl 6-32
db_drl_kin                             defined         bit(1)                   unaligned dcl 6-32
db_drl_morlnk                          defined         bit(1)                   unaligned dcl 6-32
db_drl_msub                            defined         bit(1)                   unaligned dcl 6-32
db_drl_part                            defined         bit(1)                   unaligned dcl 6-32
db_drl_retfil                          defined         bit(1)                   unaligned dcl 6-32
db_drl_rew                             defined         bit(1)                   unaligned dcl 6-32
db_drl_rstswh                          defined         bit(1)                   unaligned dcl 6-32
db_drl_setswh                          defined         bit(1)                   unaligned dcl 6-32
db_drl_switch                          defined         bit(1)                   unaligned dcl 6-32
db_drl_t_cfio                          defined         bit(1)                   unaligned dcl 6-32
db_expand_pathname                     defined         bit(1)                   unaligned dcl 6-32
db_filact_funct02                      defined         bit(1)                   unaligned dcl 6-32
db_filact_funct03                      defined         bit(1)                   unaligned dcl 6-32
db_filact_funct04                      defined         bit(1)                   unaligned dcl 6-32
db_filact_funct05                      defined         bit(1)                   unaligned dcl 6-32
db_filact_funct10                      defined         bit(1)                   unaligned dcl 6-32
db_filact_funct11                      defined         bit(1)                   unaligned dcl 6-32
db_filact_funct14                      defined         bit(1)                   unaligned dcl 6-32
db_filact_funct18                      defined         bit(1)                   unaligned dcl 6-32
db_filact_funct19                      defined         bit(1)                   unaligned dcl 6-32
db_filact_funct21                      defined         bit(1)                   unaligned dcl 6-32
db_filact_funct22                      defined         bit(1)                   unaligned dcl 6-32
db_interp_prim                         defined         bit(1)                   unaligned dcl 6-32
db_ios                                 defined         bit(1)                   unaligned dcl 6-32
db_mcfc                                defined         bit(1)                   unaligned dcl 6-32
db_run_subsystem                       defined         bit(1)                   unaligned dcl 6-32
debug_bit_names                        internal static structure                array level 1 unaligned dcl 6-75
gtss_CFP_break_                 000000 constant        entry                    external dcl 5-10
gtss_CFP_input_                 000000 constant        entry                    external dcl 5-11
gtss_CFP_output_                000000 constant        entry                    external dcl 5-12
gtss_abandon_CFP_               000000 constant        entry                    external dcl 5-13
gtss_abort_dump_                000000 constant        entry                    external dcl 5-14
gtss_abort_subsystem_$not_imp   000000 constant        entry                    external dcl 5-16
gtss_abs_$abs_equiv             000000 constant        entry                    external dcl 5-19
gtss_abs_$cpu_runout            000000 constant        entry                    external dcl 5-20
gtss_abs_$create_absin          000000 constant        entry                    external dcl 5-21
gtss_abs_$dabt_check            000000 constant        entry                    external dcl 5-22
gtss_abs_$get_drm               000000 constant        entry                    external dcl 5-24
gtss_abs_$get_id                000000 constant        entry                    external dcl 5-23
gtss_abs_login_banner_          000000 constant        entry                    external dcl 5-17
gtss_abs_logout_banner_         000000 constant        entry                    external dcl 5-18
gtss_adjust_size_               000000 constant        entry                    external dcl 5-25
gtss_aft_$add                   000000 constant        entry                    external dcl 5-26
gtss_aft_$delete                000000 constant        entry                    external dcl 5-27
gtss_aft_$initialize            000000 constant        entry                    external dcl 5-29
gtss_ascii_bcd_                 000000 constant        entry                    external dcl 5-30
gtss_attributes_mgr_$get        000000 constant        entry                    external dcl 5-31
gtss_attributes_mgr_$set        000000 constant        entry                    external dcl 5-32
gtss_bcd_ascii_                 000000 constant        entry                    external dcl 5-33
gtss_bcd_ascii_$lc              000000 constant        entry                    external dcl 5-34
gtss_break_vector_              000000 constant        entry                    external dcl 5-35
gtss_break_vector_$drl_in_progress
                                000000 constant        entry                    external dcl 5-36
gtss_break_vector_$status       000000 constant        entry                    external dcl 5-37
gtss_build_                     000000 constant        entry                    external dcl 5-38
gtss_com_err_                   000000 constant        entry                    external dcl 5-39
gtss_derail_processor_          000000 constant        entry                    external dcl 5-40
gtss_derail_processor_$set      000000 constant        entry                    external dcl 5-41
gtss_dq_$catp                   000000 constant        entry                    external dcl 5-42
gtss_dq_$create                 000000 constant        entry                    external dcl 5-43
gtss_dq_$dibp                   000000 constant        entry                    external dcl 5-44
gtss_dq_$entries_info           000000 constant        entry                    external dcl 5-45
gtss_dq_$hdrp                   000000 constant        entry                    external dcl 5-46
gtss_dq_$mod_js                 000000 constant        entry                    external dcl 5-47
gtss_dq_$open_exc               000000 constant        entry                    external dcl 5-48
gtss_dq_$open_gen               000000 constant        entry                    external dcl 5-49
gtss_drl_abort_                 000000 constant        entry                    external dcl 5-50
gtss_drl_addmem_                000000 constant        entry                    external dcl 5-51
gtss_drl_callss_                000000 constant        entry                    external dcl 5-52
gtss_drl_corfil_                000000 constant        entry                    external dcl 5-53
gtss_drl_defil_                 000000 constant        entry                    external dcl 5-54
gtss_drl_defil_$subr            000000 constant        entry                    external dcl 5-55
gtss_drl_dio_                   000000 constant        entry                    external dcl 5-56
gtss_drl_drlimt_                000000 constant        entry                    external dcl 5-57
gtss_drl_drlsav_                000000 constant        entry                    external dcl 5-58
gtss_drl_filact_                000000 constant        entry                    external dcl 5-59
gtss_drl_filsp_                 000000 constant        entry                    external dcl 5-60
gtss_drl_grow_                  000000 constant        entry                    external dcl 5-61
gtss_drl_gwake_                 000000 constant        entry                    external dcl 5-62
gtss_drl_jsts_                  000000 constant        entry                    external dcl 5-63
gtss_drl_kin_                   000000 constant        entry                    external dcl 5-64
gtss_drl_kotnow_                000000 constant        entry                    external dcl 5-65
gtss_drl_kotnow_$gtss_drl_kout_ 000000 constant        entry                    external dcl 5-66
gtss_drl_koutn_                 000000 constant        entry                    external dcl 5-67
gtss_drl_morlnk_                000000 constant        entry                    external dcl 5-68
gtss_drl_msub_                  000000 constant        entry                    external dcl 5-69
gtss_drl_objtim_                000000 constant        entry                    external dcl 5-70
gtss_drl_part_                  000000 constant        entry                    external dcl 5-71
gtss_drl_pasaft_                000000 constant        entry                    external dcl 5-72
gtss_drl_pasdes_                000000 constant        entry                    external dcl 5-73
gtss_drl_pasust_                000000 constant        entry                    external dcl 5-74
gtss_drl_pdio_                  000000 constant        entry                    external dcl 5-75
gtss_drl_prgdes_                000000 constant        entry                    external dcl 5-76
gtss_drl_pseudo_                000000 constant        entry                    external dcl 5-77
gtss_drl_relmem_                000000 constant        entry                    external dcl 5-78
gtss_drl_restor_                000000 constant        entry                    external dcl 5-79
gtss_drl_retfil_                000000 constant        entry                    external dcl 5-80
gtss_drl_return_                000000 constant        entry                    external dcl 5-81
gtss_drl_rew_                   000000 constant        entry                    external dcl 5-82
gtss_drl_rstswh_                000000 constant        entry                    external dcl 5-83
gtss_drl_setlno_                000000 constant        entry                    external dcl 5-84
gtss_drl_setswh_                000000 constant        entry                    external dcl 5-85
gtss_drl_snumb_                 000000 constant        entry                    external dcl 5-86
gtss_drl_spawn_                 000000 constant        entry                    external dcl 5-87
gtss_drl_spawn_$gtss_drl_pasflr_
                                000000 constant        entry                    external dcl 5-88
gtss_drl_stoppt_                000000 constant        entry                    external dcl 5-89
gtss_drl_switch_                000000 constant        entry                    external dcl 5-90
gtss_drl_sysret_                000000 constant        entry                    external dcl 5-91
gtss_drl_t_cfio_                000000 constant        entry                    external dcl 5-92
gtss_drl_t_cmov_                000000 constant        entry                    external dcl 5-93
gtss_drl_t_err_                 000000 constant        entry                    external dcl 5-94
gtss_drl_t_goto_                000000 constant        entry                    external dcl 5-95
gtss_drl_t_linl_                000000 constant        entry                    external dcl 5-96
gtss_drl_t_rscc_                000000 constant        entry                    external dcl 5-97
gtss_drl_tapein_                000000 constant        entry                    external dcl 5-98
gtss_drl_task_                  000000 constant        entry                    external dcl 5-99
gtss_drl_termtp_                000000 constant        entry                    external dcl 5-100
gtss_drl_time_                  000000 constant        entry                    external dcl 5-101
gtss_drun_                      000000 constant        entry                    external dcl 5-102
gtss_dsd_lookup_                000000 constant        entry                    external dcl 5-103
gtss_dsd_process_               000000 constant        entry                    external dcl 5-104
gtss_edit_dsd_                  000000 constant        entry                    external dcl 5-105
gtss_expand_pathname_           000000 constant        entry                    external dcl 5-107
gtss_expand_pathname_$verify_umc
                                000000 constant        entry                    external dcl 5-108
gtss_ext_$CFP_bits                     external static structure                level 1 dcl 2-37
gtss_ext_$SYstarstar_file_no           external static fixed bin(24,0)          dcl 2-33
gtss_ext_$aem                          external static fixed bin(17,0)          dcl 2-8
gtss_ext_$aft                          external static structure                level 1 dcl 2-78
gtss_ext_$bad_drl_rtrn                 external static label variable           dcl 2-9
gtss_ext_$com_reg                      external static structure                level 1 dcl 2-45
gtss_ext_$db                           external static bit(1)                   array unaligned dcl 2-10
gtss_ext_$deferred_catalogs_ptr        external static pointer                  dcl 2-11
gtss_ext_$dispose_of_drl               external static label variable           dcl 2-12
gtss_ext_$drl_rtrn                     external static label variable           array dcl 2-13
gtss_ext_$drm_path                     external static char(168)                unaligned dcl 2-14
gtss_ext_$drun_jid                     external static char(5)                  unaligned dcl 2-15
gtss_ext_$event_channel                external static fixed bin(71,0)          dcl 2-16
gtss_ext_$fast_lib                     external static structure                level 1 dcl 2-98
gtss_ext_$finished                     external static label variable           dcl 2-17
gtss_ext_$flags                        external static structure                level 1 dcl 2-60
gtss_ext_$gdb_name                     external static char(8)                  unaligned dcl 2-18
gtss_ext_$get_line                     external static entry variable           dcl 2-19
gtss_ext_$gtss_slave_area_seg          external static pointer                  array dcl 2-20
gtss_ext_$hcs_work_area_ptr            external static pointer                  dcl 2-21
gtss_ext_$homedir                      external static char(64)                 unaligned dcl 2-22
gtss_ext_$last_k_was_out               external static bit(1)                   dcl 2-23
gtss_ext_$mcfc                         external static structure                level 1 dcl 2-109
gtss_ext_$pdir                         external static varying char(168)        dcl 2-24
gtss_ext_$popup_from_pi                external static label variable           dcl 2-25
gtss_ext_$ppt                          external static pointer                  dcl 2-94
gtss_ext_$process_type                 external static fixed bin(17,0)          dcl 2-26
gtss_ext_$put_chars                    external static entry variable           dcl 2-27
gtss_ext_$restart_from_pi              external static label variable           dcl 2-28
gtss_ext_$restart_seg_ptr              external static pointer                  dcl 2-29
gtss_ext_$sig_ptr                      external static pointer                  dcl 2-30
gtss_ext_$stack_level_                 external static fixed bin(17,0)          dcl 2-31
gtss_ext_$statistics                   external static structure                level 1 dcl 2-72
gtss_ext_$suspended_process            external static bit(1)                   unaligned dcl 2-32
gtss_ext_$user_id                      external static varying char(26)         dcl 2-34
gtss_ext_$work_area_ptr                external static pointer                  dcl 2-35
gtss_fault_processor_           000000 constant        entry                    external dcl 5-109
gtss_fault_processor_$timer_runout
                                000000 constant        entry                    external dcl 5-111
gtss_filact_error_status_       000000 constant        entry                    external dcl 5-112
gtss_filact_funct02_            000000 constant        entry                    external dcl 5-113
gtss_filact_funct03_            000000 constant        entry                    external dcl 5-114
gtss_filact_funct04_            000000 constant        entry                    external dcl 5-115
gtss_filact_funct05_            000000 constant        entry                    external dcl 5-116
gtss_filact_funct08_            000000 constant        entry                    external dcl 5-117
gtss_filact_funct10_            000000 constant        entry                    external dcl 5-118
gtss_filact_funct11_            000000 constant        entry                    external dcl 5-119
gtss_filact_funct14_            000000 constant        entry                    external dcl 5-120
gtss_filact_funct18_            000000 constant        entry                    external dcl 5-121
gtss_filact_funct19_            000000 constant        entry                    external dcl 5-122
gtss_filact_funct21_            000000 constant        entry                    external dcl 5-123
gtss_filact_funct22_            000000 constant        entry                    external dcl 5-124
gtss_interp_prim_               000000 constant        entry                    external dcl 5-126
gtss_interp_prim_$callss        000000 constant        entry                    external dcl 5-127
gtss_interp_prim_$sysret        000000 constant        entry                    external dcl 5-128
gtss_interp_prim_$t_goto        000000 constant        entry                    external dcl 5-129
gtss_ios_close_                 000000 constant        entry                    external dcl 5-131
gtss_ios_exchange_names_        000000 constant        entry                    external dcl 5-132
gtss_ios_initialize_            000000 constant        entry                    external dcl 5-133
gtss_ios_open_                  000000 constant        entry                    external dcl 5-135
gtss_ios_position_              000000 constant        entry                    external dcl 5-136
gtss_mcfc_$close                000000 constant        entry                    external dcl 5-139
gtss_mcfc_$delete               000000 constant        entry                    external dcl 5-137
gtss_mcfc_$open                 000000 constant        entry                    external dcl 5-138
gtss_mcfc_empty                 000000 constant        entry                    external dcl 5-106
gtss_mcfc_init_                 000000 constant        entry                    external dcl 5-125
gtss_read_starCFP_              000000 constant        entry                    external dcl 5-140
gtss_read_starCFP_$last_os      000000 constant        entry                    external dcl 5-141
gtss_run_subsystem_             000000 constant        entry                    external dcl 5-142
gtss_run_subsystem_$finish      000000 constant        entry                    external dcl 5-143
gtss_run_subsystem_$restor      000000 constant        entry                    external dcl 5-144
gtss_run_subsystem_$restor_perm 000000 constant        entry                    external dcl 5-145
gtss_set_slave_                 000000 constant        entry                    external dcl 5-146
gtss_set_slave_$load_bar        000000 constant        entry                    external dcl 5-147
gtss_update_safe_store_         000000 constant        entry                    external dcl 5-148
gtss_verify_access_             000000 constant        entry                    external dcl 5-149
gtss_verify_access_$check_forced_access
                                000000 constant        entry                    external dcl 5-150
gtss_write_starCFP_             000000 constant        entry                    external dcl 5-151
lbx                                    internal static fixed bin(17,0)          initial dcl 3-42
lpx                                    internal static fixed bin(17,0)          initial dcl 3-42
mc                                     based           structure                level 1 dcl 3-12
mcp                                    automatic       pointer                  dcl 3-10
nl                                     internal static bit(9)                   initial unaligned dcl 194
read_cmd                               internal static bit(6)                   initial unaligned dcl 7-5
sbx                                    internal static fixed bin(17,0)          initial dcl 3-42
scu                                    based           structure                level 1 dcl 3-56
scup                                   automatic       pointer                  dcl 3-54
scux                                   based           structure                level 1 dcl 3-207
seek_cmd                               internal static bit(6)                   initial unaligned dcl 7-6
spx                                    internal static fixed bin(17,0)          initial dcl 3-42

NAMES DECLARED BY EXPLICIT CONTEXT.
common_error                    000730 constant        entry                    internal dcl 154 ref 59 68 97 104 122
end_def_write                   000625 constant        entry                    internal dcl 141 ref 41 45 123
gtss_write_starCFP_             000111 constant        entry                    external dcl 15
write_deferred                  000442 constant        entry                    internal dcl 110 ref 28
write_loop                      000312 constant        label                    dcl 76 ref 92
write_now                       000221 constant        entry                    internal dcl 49 ref 25 34 38

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 74 74 79 79 79 79 79 79 131
fixed                                                  builtin function         ref 79 79
length                                                 builtin function         ref 64
null                                                   builtin function         ref 146 149 158 192
rel                                                    builtin function         ref 79 79
substr                                                 builtin function         set ref 72 74 74*

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1236        1302    1057        1246
Length      1636    1057        44         320     157           6

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gtss_write_starCFP_                 284 external procedure  is an external procedure.  
write_now                               internal procedure  shares stack frame of external procedure gtss_write_starCFP_.  
write_deferred                          internal procedure  shares stack frame of external procedure gtss_write_starCFP_.  
end_def_write                           internal procedure  shares stack frame of external procedure gtss_write_starCFP_.  
common_error                            internal procedure  shares stack frame of external procedure gtss_write_starCFP_.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 l_info_ptr                  gtss_write_starCFP_
000012 l_ptr                       gtss_write_starCFP_
000014 normal_output               gtss_write_starCFP_

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gtss_write_starCFP_      000100 code                        gtss_write_starCFP_
                         000101 err_mess                    gtss_write_starCFP_
                         000200 fn                          gtss_write_starCFP_
                         000201 loop_cntr                   gtss_write_starCFP_
                         000202 mc_ptr                      gtss_write_starCFP_
                         000204 n                           gtss_write_starCFP_
                         000205 saved_code                  gtss_write_starCFP_
                         000206 status                      gtss_write_starCFP_
                         000207 st2                         gtss_write_starCFP_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
delete_$ptr                   gtss_CFP_abort_               gtss_abort_subsystem_         gtss_aft_$find
gtss_find_cond_frame_         gtss_ios_change_size_         gtss_ios_io_                  hcs_$make_seg

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$rqover           gtss_starCF_$FILE             gtss_ust_ext_$ust




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     15 000104       184 000116       192 000121        22 000123        23 000137        25 000144        26 000145
     28 000146        29 000147        32 000152        33 000160        34 000164        35 000165        36 000177
     37 000205        38 000207        39 000210        41 000213        42 000214        44 000215        45 000217
     47 000220        49 000221        52 000222        53 000224        54 000227        55 000234        57 000243
     58 000246        59 000250        60 000251        62 000252        63 000254        64 000257        66 000262
     67 000265        68 000267        69 000270        71 000271        72 000273        74 000301        76 000312
     77 000313        78 000317        79 000321        86 000352        88 000355        89 000400        91 000404
     92 000411        94 000412        96 000421        97 000424        98 000425       100 000426       102 000430
    103 000433       104 000437       105 000440       107 000441       110 000442       112 000443       113 000445
    114 000447       116 000452       117 000506       119 000545       121 000547       122 000552       123 000553
    124 000554       126 000555       127 000557       128 000562       130 000563       131 000564       133 000575
    134 000604       135 000607       136 000620       138 000624       141 000625       144 000626       146 000663
    147 000666       149 000722       150 000725       152 000727       154 000730       156 000731       157 000734
    158 000752       161 000764       167 001025       170 001055       172 001056


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
