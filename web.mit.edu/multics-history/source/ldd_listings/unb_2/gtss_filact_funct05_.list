	COMPILATION LISTING OF SEGMENT gtss_filact_funct05_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/10/84  1313.3 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   *                                                         *
        4*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        5*   *                                                         *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 /* *************************************************************
       10*   *						   *
       11*   * Copyright (c) 1979 by Honeywell Information Systems, Inc. *
       12*   *						   *
       13*   ************************************************************* */
       14 gtss_filact_funct05_: proc (mcp_val, high_val, gseg_val, arg_ptr_val, buffer_ptr_val, code);
       15 
       16 /**	Derail FILACT function 05 (Special Access To Subroutine Library).
       17*
       18*	All parameters are input parameters except code.
       19*
       20*	code retuurned 0 => Successful.
       21*	code returned 4 => GCOS err4 (see gtss_pnterr structure).
       22*	code returned other => multics error code.
       23*
       24*   Authors: Robert J. Grimes	Created
       25*   -	  Albert N. Kepner	  1978
       26*   -	  Robert M. May
       27*   -	  David B. Ward
       28*   Change:  Dave Ward	02/24/79 $db debug switch.
       29*   Change:  Dave Ward	01/08/80 setting gtss_ext_$drm_path.
       30*
       31***/
       32 dcl  mcp_val                  ptr parm;
       33 dcl  high_val                 bit(18)parm;
       34 dcl  gseg_val                 ptr parm;
       35 dcl  arg_ptr_val              ptr parm;
       36 dcl  buffer_ptr_val           ptr parm;
       37 dcl  code                     fixed bin(35)parm;
       38 	mcp = mcp_val;
       39 	high_b = high_val;
       40 	high_i = fixed (high_b, 18);
       41 	gseg = gseg_val;
       42 	arg_ptr = arg_ptr_val;
       43 	buffer_ptr = buffer_ptr_val;
       44 
       45 	code = 0;					/* Successful. */
       46 
       47 /**	Obtain the argument list. **/
       48 	if					/* (filact_args.arglist_address < low_b) | */
       49 	(fixed (filact_args.arglist_address, 18)+2 > high_i) then do;
       50 return_err4:   ;
       51 	     code = 4;
       52 	     return;
       53 	end;
       54 	arglist_ptr = addrel (gseg, filact_args.arglist_address);
       55 
       56 	call validate_status (lib_arglist.status_address, status_ptr); /* and also status word */
       57 
       58 /*	Set pointer to ascii name. */
       59 	if					/* (filact_args.altname_address < low_b) | */
       60 	(filact_args.altname_address > high_b) then goto return_err4; /* ascii name out of memory. */
       61 	altname_ptr = addrel (gseg, filact_args.altname_address);
       62 	call gtss_aft_$add (ascii_name, file_no, code);
       63 
       64 	if code = 1 then do;			/* name already in aft */
       65 	     status_word.status = "403700"b3;		/* file in aft */
       66 ret:	     ;
       67 	     return;
       68 	end;
       69 
       70 	if code = 2 then do;			/* aft full */
       71 	     status_word.status = "403600"b3;
       72 	     goto ret;
       73 	end;
       74 
       75 dummy_label: ;					/* Get directory where code is currently executing. */
       76 	me_ptr = codeptr (dummy_label);
       77 	call hcs_$fs_get_path_name (me_ptr,
       78 	     installation_directory,
       79 	     0,
       80 	     "",
       81 	     code);
       82 	if code ^= 0 then do;
       83 	     call com_err_ (code, "gtss_filact_funct05_",
       84 		"Can not obtain directory containing L* library.");
       85 	     go to no_lib_available;
       86 	end;
       87 
       88 	if (lib_arglist.file_code = "4354"b3) then do;	/* 4354oct = L* */
       89 	     gtss_ext_$drm_path, lib_dir_name = installation_directory;
       90 	     lib_entry_name = gtss_install_values_$Lstar_msf;
       91 	end;
       92 	else
       93 	if (lib_arglist.file_code = "5443"b3) then do;	/* 5443oct = *L */
       94 	     gtss_ext_$drm_path, lib_dir_name = installation_directory;
       95 	     lib_entry_name = gtss_install_values_$starL_msf;
       96 	end;
       97 	else do;
       98 no_lib_available: ;
       99 	     call gtss_aft_$delete (ascii_name, file_no, aft_code);
      100 	     status_word.status = "400500"b3;
      101 	     goto ret;
      102 	end;
      103 
      104 	if lib_entry_name = " " then goto no_lib_available;
      105 
      106 	status_word.status = "400000"b3;		/* set status as ok */
      107 
      108 /**	Obtain the library file. **/
      109 	if lib_arglist.mode then do;			/* Access the library as a random file. */
      110 	     gtss_file_values.version = 1;
      111 	     gtss_file_values.change_name = "0"b;
      112 	     gtss_file_values.dname = lib_dir_name;
      113 	     gtss_file_values.ename = lib_entry_name;
      114 	     gtss_file_values.new_ename = " ";
      115 
      116 	     call gtss_attributes_mgr_$get (addr (gtss_file_values), code);
      117 	     if (code ^= 0) | gtss_file_values.catalog then do;
      118 		call gtss_aft_$delete (ascii_name, file_no, aft_code);
      119 		call gtss_abort_subsystem_ (
      120 		     mcp
      121 		     , "gtss_drl_filact_"
      122 		     , 4
      123 		     , "Could not establish attributes for lib (^a)."
      124 		     , ascii_name
      125 		     );
      126 		goto ret;
      127 	     end;
      128 
      129 /**	Set runtime attributes structure for ios. **/
      130 	     gtss_file_attributes_ptr = addr (gtss_tfa_ext_$file_attributes.temp_file (file_no));
      131 	     gtss_file_attributes.max_size = gtss_file_values.data_fields.maxll;
      132 	     gtss_file_attributes.current_size = gtss_file_values.data_fields.curll;
      133 	     gtss_file_attributes.user_attributes.non_null = ^gtss_file_values.data_flags.null_file;
      134 	     gtss_file_attributes.user_attributes.user_attr = gtss_file_values.attributes.attr;
      135 	     gtss_file_attributes.descriptor.device_type = "64"b3; /* => disk. */
      136 	     gtss_file_attributes.descriptor.words_block = "0500"b3; /* 320 (500oct) words per block. */
      137 	     gtss_file_attributes.descriptor.llink_flag = "1"b; /* size is in llinks (320words) */
      138 	     gtss_file_attributes.descriptor.mode = gtss_file_values.data_flags.mode_random;
      139 	     gtss_file_attributes.descriptor.perm = "1"b; /* Permanent file. */
      140 	     gtss_file_attributes.descriptor.size = bit (fixed (gtss_file_values.data_fields.curll, 14)); /* Size in llinks */
      141 
      142 	end;
      143 	else do;					/* Linked library file. */
      144 	     call gtss_aft_$delete (ascii_name, file_no, aft_code);
      145 	     call gtss_abort_subsystem_ (
      146 		mcp
      147 		, "gtss_drl_filact_"
      148 		, 4
      149 		, "Linked subroutine libraries not implemented (^a)."
      150 		, ascii_name
      151 		);
      152 	     goto ret;
      153 	end;
      154 
      155 	if code ^= 0 then
      156 	     if (code ^= error_table_$namedup) & (code ^= error_table_$segknown) then
      157 		goto no_lib_available;
      158 
      159 	call gtss_ios_open_ (
      160 	     file_no
      161 	     , lib_dir_name
      162 	     , lib_entry_name
      163 	     , "100000"b				/* Read. */
      164 	     , "1"b				/* Only random libraries currently allowed. */
      165 	     , gtss_file_attributes_ptr
      166 	     , addr (status_word)
      167 	     , code
      168 	     );
      169 	if status_word.status ^= "400000"b3 then do;
      170 	     call com_err_ (
      171 		code
      172 		, "gtss_filact_funct05_"
      173 		, "ios open status = ^4o"
      174 		, status_word.status
      175 		);
      176 	     call gtss_aft_$delete (
      177 		ascii_name
      178 		, file_no
      179 		, aft_code
      180 		);
      181 	     goto ret;
      182 	end;
      183 
      184 	code = 0;
      185 	goto ret;
      186 
      187 
      188 
  1     1 /* BEGIN INCLUDE FILE gtss_filact_intp1.incl.pl1 */
  1     2 /*
  1     3*  Created: (Wardd Multics)  10/05/78 1600.9 mst Thu 
  1     4**/
  1     5 validate_status: proc (status_address, sp);
  1     6 
  1     7 dcl  status_address           bit (18)parm;
  1     8 dcl  sp                       ptr parm;
  1     9 dcl  status_pointer           ptr init(null());
  1    10 
  1    11 
  1    12 /**	Assure 2 word status not above memory.	**/
  1    13 	     if (status_address >= high_b) then goto return_err4;
  1    14 
  1    15 /**	Assure status words and arglist do not overlap.	**/
  1    16 	     if (fixed(status_address,18)+1) >= fixed(filact_args.L_arglist,18) &
  1    17 	     fixed (status_address, 18) <= (fixed (filact_args.L_arglist, 18)+ 1) then goto return_err4;
  1    18 
  1    19 /**	Obtain pointer to status words.	**/
  1    20 	     sp, status_pointer = addrel (gseg, status_address);
  1    21 	     unspec (status_pointer -> status_word) = "0"b;
  1    22 	     return;
  1    23 
  1    24 dcl 1 filact_args		aligned based(arg_ptr), /* 1st word only. */
  1    25     2 zero		bit(18)unal,
  1    26     2 L_arglist		bit(18)unal;
  1    27 	end					/* validate_status */;
  1    28 /*   END INCLUDE FILE gtss_filact_intp1.incl.pl1 */
      189 
      190 
      191 /** Declarations for gtss_drl_filact_:
      192*     IDENTIFIER		ATTRIBUTES	**/
      193 dcl  ascii_name               char(8) based(altname_ptr);
      194 dcl  lib_dir_name             char(168);
      195 dcl  lib_entry_name           char(32);
      196 dcl  p                        ptr init(null());
      197 dcl  access_mode              bit (6);
      198 dcl  addr                     builtin;
      199 dcl  addrel                   builtin;
      200 dcl  aft_code                 fixed bin (35);
      201 dcl  aft_name                 char (8);
      202 dcl  altname                  char (8) aligned based (altname_ptr);
      203 dcl  altname_ptr              ptr init(null());
      204 dcl  append_mode              bit (36) static int options(constant)init ("100000000000"b3);
      205 dcl  arglist_ptr              ptr init(null());
      206 dcl  arg_ptr                  ptr init(null());
      207 dcl  attribute_segment_ptr    ptr init(null());
      208 dcl  bit                      builtin;
      209 dcl  bit_count                fixed bin (24);
      210 dcl  cat_filedescr_name_offset bit(18);
      211 dcl  cdate                    fixed bin (71);
      212 dcl  clim                     float bin;
      213 dcl  crf                      fixed bin(24);
      214 dcl  csp                      float bin;
      215 dcl  delete_$path             entry (char (*), char (*), bit (6), char (*), fixed bin (35));
      216 dcl  descriptor_address       bit (18);
      217 dcl  descriptor_ptr           ptr init(null());
      218 dcl  dir_name                 char (168);
      219 dcl  divide                   builtin;
      220 dcl  entry_name               char (12) init (" ");
      221 dcl  error_table_$incorrect_access fixed bin (35) ext;
      222 dcl  error_table_$moderr      fixed bin (35) ext;
      223 dcl  error_table_$namedup     fixed bin (35) ext;
      224 dcl  error_table_$noentry     fixed bin (35) ext;
      225 dcl  error_table_$no_dir      fixed bin (35) ext;
      226 dcl  error_table_$not_seg_type fixed bin(35)ext;
      227 dcl  error_table_$segknown    fixed bin (35) ext;
      228 dcl  error_table_$seg_not_found fixed bin (35) ext;
      229 dcl  error_table_$nomatch     fixed bin (35) ext;
      230 dcl  execute_mode             bit (36) static int options(constant)init ("200000000000"b3);
      231 dcl  file_no                  fixed bin (24);
      232 dcl  fixed                    builtin;
      233 dcl  FMS_block_ptr            ptr init(null());
      234 dcl  four_NULS                char (4)static int options (constant)init ((4)" ") /* 4 octal 000's */;
      235 dcl  gseg                     ptr init(null());
      236 dcl  gtss_fail                condition;
      237 dcl  have_file                bit(1);
      238 dcl  hbound                   builtin;
      239 dcl  hcs_$add_acl_entries     entry (char (*), char (*), ptr, fixed bin(24), fixed bin (35));
      240 dcl  hcs_$add_dir_acl_entries entry (char (*), char (*), ptr, fixed bin, fixed bin (35));
      241 dcl  hcs_$add_inacl_entries   entry (char (*), char (*), ptr, fixed bin, fixed bin (3), fixed bin (35));
      242 dcl  hcs_$append_branchx      entry (char (*), char (*), fixed bin (5), (3) fixed bin (3), char (*), fixed bin (1), fixed bin (1), fixed bin (24), fixed bin (35));
      243 dcl  hcs_$delentry_file       entry(char(*),char(*),fixed bin(35));
      244 dcl  hcs_$fs_get_path_name	entry (ptr, char(*), fixed bin, char(*), fixed bin(35));
      245 dcl  hcs_$initiate            entry (char (*), char (*), char (*), fixed bin (1), fixed bin (2), ptr, fixed bin (35));
      246 dcl  hcs_$make_seg            entry (char (*), char (*), char (*), fixed bin (5), ptr, fixed bin (35));
      247 dcl  hcs_$quota_read          entry (char (*), fixed bin (18), fixed bin (71), bit (36) aligned, bit (36), fixed bin (1), fixed bin (18), fixed bin (35));
      248 dcl  hcs_$status_long         entry (char (*), char (*), fixed bin (1), ptr,ptr, fixed bin (35));
      249 dcl  high_b                   bit(18)aligned;
      250 dcl  high_i                   fixed bin(18)aligned;
      251 dcl  i                        fixed bin(24);
      252 dcl  increment                fixed bin(24);
      253 dcl  installation_directory	char(168);
      254 dcl  ioa_                     entry options (variable);
      255 dcl  k                        fixed bin(24);
      256 dcl  l                        fixed bin(24);
      257 dcl  lbound                   builtin;
      258 dcl  low_b                    bit(18)aligned static int options(constant)init("000147"b3) /* 103 dec. */;
      259 dcl  low_i                    fixed bin(18)aligned static int options(constant)init(103);
      260 dcl  max_options              fixed bin static int options(constant)init (100);
      261 dcl  max_resources            fixed bin static int options(constant)init (99999);
      262 dcl  me_ptr	ptr init(null());
      263 dcl  minus_one                bit (36) static int options(constant)init ((36)"1"b);
      264 dcl  mlim                     float bin;
      265 dcl  mod                      builtin;
      266 dcl  modify_mode              bit (36) static int options(constant)init ("200000000000"b3);
      267 dcl  msp                      float bin;
      268 dcl  multics_access_mode      fixed bin(5);
      269 dcl  path_name                char (168) varying;
      270 dcl  person_id                char (22);
      271 dcl  quota                    fixed bin (18);
      272 dcl  read_mode                bit (36) static int options(constant)init ("400000000000"b3);
      273 dcl  rel                      builtin;
      274 dcl  rings                    (3) fixed bin (3) static int options(constant)init (4, 4, 4);
      275 dcl  seg_acl_count            fixed bin;
      276 dcl  shlim                    (0:7) float bin;
      277 dcl  shsp                     (0:7) float bin;
      278 dcl  size                     builtin;
      279 dcl  smc_entry_ptr            ptr init(null());
      280 dcl  sons_lvid                bit (36);
      281 dcl  status                   fixed bin (24);
      282 dcl  status_mode              bit (36) static int options(constant)init ("400000000000"b3);
      283 dcl  status_ptr               ptr init(null());
      284 dcl  substr                   builtin;
      285 dcl  switches                 bit (6) static int options(constant)init ("37"b3);
      286 dcl  tacc_sw                  fixed bin (1);
      287 dcl  trp                      fixed bin (71);
      288 dcl  tup                      bit (36) aligned;
      289 dcl  two_words                bit (72) based;
      290 dcl  type                     fixed bin (2);
      291 dcl  used                     fixed bin (18);
      292 dcl  user_attribute_word      bit (35);
      293 dcl  user_info_$limits        entry (float bin, float bin, fixed bin (71), fixed bin(24), (0:7) float bin, float bin, float bin, (0:7) float bin);
      294 dcl  words380                 bit(13680)aligned based;
      295 dcl  write_mode               bit (36) static int options(constant)init ("100000000000"b3);
      296 
      297 dcl 1 status2		aligned based(status_ptr)
      298 ,     3 word1
      299 ,       4 status_code	bit(12)unal
      300 ,       4 zero1		bit(06)unal
      301 ,       4 zero2		bit(18)unal
      302 ,     3 word2
      303 ,       4 L_bcd_message	bit(18)unal
      304 ,       4 message_words	fixed bin(17)unal
      305 ;
      306 
      307 dcl 1 bcdname aligned based(p),
      308     2 first8 bit(48)unal,
      309     2 last4  bit(24)unal;
      310 
      311 /** Structures:	**/
      312 dcl 1 filact_args aligned based (arg_ptr),
      313     2 altname_address bit (18) unaligned,
      314     2 arglist_address bit (18) unaligned,
      315     2 function_no fixed bin (17) unaligned,
      316     2 buffer_address bit (18) unaligned;
      317 
      318 
      319 dcl 1 arglist aligned based (arglist_ptr),
      320     2 status_address bit (18) unaligned,
      321     2 record_address bit (18) unaligned,
      322     2 descriptor_address bit (18) unaligned,
      323     2 permissions_address bit (18) unaligned,
      324     2 options_address bit (18) unaligned,
      325     2 fill1 bit (18) unaligned;
      326 
      327 
      328 dcl 1 lib_arglist aligned based (arglist_ptr),
      329     2 status_address bit (18) unaligned,
      330     2 fill bit (17) unaligned,
      331     2 mode bit (1) unaligned,
      332     2 fill1 bit (24) unaligned,
      333     2 file_code bit (12) unaligned;
      334 
      335 
      336 
      337 dcl 1 status_word aligned based (status_ptr),
      338     2 status bit (18) unaligned,
      339     2 pd bit (18) unaligned,
      340     2 null_bit bit (1) unaligned,
      341     2 user_attributes bit (35) unaligned;
      342 
      343 
      344 
      345 dcl 1 descriptor (0:8) aligned based (descriptor_ptr),
      346     2 name bit (72) aligned,
      347     2 password bit (72) aligned;
      348 
      349 dcl 1 FMS_block aligned based (FMS_block_ptr),
      350     2 address bit (18) unaligned;
      351 
      352 
      353 dcl 1 FMS_data_block aligned based (buffer_ptr),
      354     2 restore_switch bit (36) aligned,
      355     2 file_id char (8) aligned,
      356     2 fill (3:24) bit (36) aligned,
      357     2 record_type fixed bin (5) unaligned,
      358     2 fill2 bit (30) unaligned;
      359 
      360 dcl 1 permissions aligned based (permissions_ptr),
      361     2 read bit (1) unaligned,
      362     2 write bit (1) unaligned,
      363     2 append bit (1) unaligned,
      364     2 execute bit (1) unaligned,
      365     2 purge bit (1) unaligned,
      366     2 modify bit (1) unaligned,
      367     2 lock bit (1) unaligned,
      368     2 fill bit (1) unaligned,
      369     2 create bit (1) unaligned,
      370     2 recovery bit (1) unaligned,
      371     2 fill1 bit (8) unaligned,
      372     2 test bit (1) unaligned,
      373     2 query bit (1) unaligned,
      374     2 fill2 bit (16) unaligned;
      375 
      376 
      377 
      378 dcl 1 options aligned based (options_ptr),
      379     2 contigous bit (1) unaligned,
      380     2 random bit (1) unaligned,
      381     2 TSS_create bit (1) unaligned,
      382     2 I_D_S bit (1) unaligned,
      383     2 llink_allocated bit (1) unaligned,
      384     2 nostructured_device bit (1) unaligned,
      385     2 fill1 bit (1) unaligned,
      386     2 attribute_present bit (1) unaligned,
      387     2 user_attribute bit (1) unaligned,
      388     2 fill2 bit (4) unaligned,
      389     2 FMS_protection bit (1) unaligned,
      390     2 fill3 bit (4) unaligned,
      391     2 device_name bit (18) unaligned,
      392     2 initial_size bit (18) unaligned,
      393     2 max_size bit (18) unaligned,
      394     2 specific_permissions (0:max_options) aligned,
      395       3 userid bit (72) aligned,
      396       3 read bit (1) unaligned,
      397       3 write bit (1) unaligned,
      398       3 append bit (1) unaligned,
      399       3 execute bit (1) unaligned,
      400       3 purge bit (1) unaligned,
      401       3 modify bit (1) unaligned,
      402       3 lock bit (1) unaligned,
      403       3 fill bit (1) unaligned,
      404       3 create bit (1) unaligned,
      405       3 recovery bit (1) unaligned;
      406 
      407 
      408 dcl 1 smc_arglist aligned based (arglist_ptr),
      409     2 status_address bit (18) unaligned,
      410     2 entry_address bit (18) unaligned;
      411 
      412 
      413 
      414 
      415 dcl 1 smc_entry aligned based (smc_entry_ptr),
      416     2 userid bit (72) unaligned,
      417     2 fill1 bit (36) aligned,
      418     2 fill2 bit (36) aligned,
      419     2 space_time fixed bin (35) aligned,
      420     2 llinks_used fixed bin (17) unaligned,
      421     2 llinks_allowed fixed bin (17) unaligned,
      422     2 fill3 bit (36) aligned,
      423     2 resources fixed bin (17) unaligned,
      424     2 lodx bit (1) unaligned,
      425     2 cardin bit (1) unaligned,
      426     2 talk bit (1) unaligned,
      427     2 lods bit (1) unaligned,
      428     2 fill4 bit (2) unaligned,
      429     2 urgency bit (12) unaligned,
      430     2 password bit (72) unaligned,
      431     2 reserved bit (36) aligned,
      432     2 fill5 bit (10) unaligned,
      433     2 resources_used fixed bin (25) unaligned;
      434 
  2     1 /* BEGIN INCLUDE FILE gtss_tfa_ext_.incl.pl1 */
  2     2 /*
  2     3*  Created: (Wardd Multics)  08/07/78 0911.6 mst Mon 
  2     4**/
  2     5 
  2     6 /* Structure to record file "attributes".
  2     7*   Note: gtss_dfd_ext_$disk_file_data(i).gtss_disk.attributes_ptr
  2     8*         locates gtss_tfa_ext_$file_attributes.temp_file(i).
  2     9**/
  2    10 
  2    11 dcl 1 gtss_tfa_ext_$file_attributes	aligned ext,
  2    12       3 temp_file			(20) like  gtss_file_attributes;
  2    13 
  3     1 /* BEGIN INCLUDE FILE gtss_file_attributes.incl.pl1 */
  3     2 /*
  3     3*  Created: (Kepner Multics)  06/02/78 1522.0 mst Fri 
  3     4**/
  3     5 
  3     6 /*	Declaration of File Attributes Segement	*/
  3     7 
  3     8 
  3     9 dcl  gtss_file_attributes_ptr ptr init(null());
  3    10 
  3    11 dcl 1 gtss_file_attributes based (gtss_file_attributes_ptr) aligned,
  3    12     2 max_size fixed bin (24),			/* maximum size the file can grow to
  3    13*						   in 320 word blocks.  if = 0 then the
  3    14*						   file size is unlimited. */
  3    15     2 current_size fixed bin (24),			/* current size of the file in 320 word blocks */
  3    16     2 user_attributes aligned,
  3    17       3 non_null bit (1) unal,			/* 0 = this file has never been written to */
  3    18       3 user_attr bit (35) unal,			/* User defined attributes */
  3    19     2 descriptor aligned,
  3    20       3 device_type bit (6) unaligned,			/* currently ignored */
  3    21       3 words_block bit (12) unaligned,			/* number of words per physical block */
  3    22       3 llink_flag bit (1) unaligned,			/* if 0= size in links | 1= size in llinks */
  3    23       3 mode bit (1) unaligned,			/* 0= linked file | 1= random file */
  3    24       3 perm bit (1) unaligned,			/* 1=permanent file|0=not */
  3    25       3 fill bit (1) unaligned,
  3    26       3 size bit (14) unaligned;
  3    27 
  3    28 
  3    29 /*   END INCLUDE FILE gtss_file_attributes.incl.pl1 */
  2    14 
  2    15 
  2    16 /*   END INCLUDE FILE gtss_tfa_ext_.incl.pl1 */
      435 
      436 
  4     1 /* BEGIN INCLUDE FILE gtss_dfd_ext_.incl.pl1 */
  4     2 /*
  4     3*  Created:  (Wardd Multics)  06/09/78 1650.6 mst Fri 
  4     4**/
  4     5 
  4     6 dcl 1 gtss_dfd_ext_$disk_file_data (41) aligned ext,		/* disk_file_data structure */
  4     7 
  4     8     3 gtss_disk,
  4     9       4 dir_name char (168) unal,			/* containing directory for file */
  4    10       4 entry_name char (32) unal,			/* entry name for file */
  4    11       4 fcb_ptr ptr aligned,				/* ptr to file control block */
  4    12       4 msf_array_ptr ptr,				/* Pointer to an array of pointers for a msf. Each
  4    13*						   component which has been accessed has a corresponding
  4    14*						   initialized pointer.  Currently 500 components
  4    15*						   are supported. */
  4    16       4 single_segment_ptr ptr,			/* Pointer to segment for single segment file */
  4    17       4 indicators aligned,				/* one word of flags */
  4    18 
  4    19         5 msf bit (1) unaligned,			/* 1=msf segment | 0= single segment */
  4    20         5 protected_file bit (1) unaligned,		/* 1=file uses protections | 0= unprotected */
  4    21         5 fill bit (34) unal,
  4    22 
  4    23       4 permissions aligned,
  4    24         5 read bit (1) unaligned,			/* 1=read permission  */
  4    25         5 execute bit (1) unaligned,			/* 1=execute permission */
  4    26         5 write bit (1) unaligned,			/* 1=write permission */
  4    27         5 fill2 bit (33) unaligned,			/* unused at this time */
  4    28 
  4    29       4 access_mode bit (6) aligned,			/* contains the mode by which the file was accessed */
  4    30       4 component fixed bin,				/* current component value (first component = 0) */
  4    31       4 offset fixed bin (24),			/* current word offset in the component */
  4    32       4 file_position fixed bin (30),			/* current file position in words */
  4    33       4 file_size fixed bin (30),			/* size of file in words */
  4    34       4 no_components fixed bin (24),			/* number of components for a msf */
  4    35       4 attributes_ptr ptr,				/* Pointer to the attributes structure
  4    36*						   for this file. (See gtss_file_attributes.incl.pl1) */
  4    37 
  4    38       4 pat_body,
  4    39 
  4    40         5 word_0,
  4    41 	6 defective bit (1) unal,			/* 1 = file has defective space */
  4    42 	6 io_errors bit (1) unal,			/* 1 = I/O errors encountered on file */
  4    43 	6 reserved bit (2) unal,			/* Reserved for GCOS */
  4    44 	6 sct bit (12) unal,			/* address of SCT for device on which
  4    45*						   file begins or if cataloged,
  4    46*						   for device with file catalog entry */
  4    47 	6 reserved2 bit (2) unal,			/* Reserved for GCOS */
  4    48 
  4    49         5 word_1,
  4    50 	6 io_time fixed bin (35),			/* I/O time for this file */
  4    51 
  4    52         5 word_2,
  4    53 	6 protected bit (1) unal,			/* 1 = file has protected allocation */
  4    54 	6 hash_code bit (5) unal,			/* hash code of user name under which
  4    55*						   file is cataloged */
  4    56 	6 not_cat bit (1) unal,			/* 1 = file is not cataloged */
  4    57 	6 last_desc bit (1) unal,			/* 1 = last descriptor for file is not in memory */
  4    58 	6 random bit (1) unal,			/* 1 = access to file is random */
  4    59 	6 perm bit (1) unal,			/* 1 = file space is permanently assigned */
  4    60 	6 first_desc bit (1) unal,			/* 1 = first descriptor for file is not in memory */
  4    61 	6 creator bit (1) unal,			/* 1 = user is not creator of file */
  4    62 	6 disposition bit (2) unal,			/* Abort disposition code
  4    63*						   00 = Release
  4    64*						   01 = Dismount
  4    65*						   10 = Save
  4    66*						   11 = Continue */
  4    67 	6 ids1 bit (1) unal,			/* 1 = file is an I-D-S/I file */
  4    68 	6 write_performed bit (1) unal,		/* 1 = write was performed on file */
  4    69 	6 unpermitted_access bit (1) unal,		/* 1 = unpermitted access to file attempted or seek
  4    70*						   attempted to part of file marked defective (only
  4    71*						   for procted allocation) */
  4    72 	6 purge bit (1) unal,			/* 1 = file space to be purgedbefore deallocating file. */
  4    73 	6 sector_number bit (18) unal,		/* If cataloged file, sector number of file catalog
  4    74*						   (on device with SCT referenced in word 0).  If
  4    75*						   cataloged file that is proctected (bit 0 ON in this
  4    76*						   word), memory location of table in File Management
  4    77*						   Supervisor Executive.  If user temporary file,
  4    78*						   largest size file has ever attained, in llinks.
  4    79*						   If system value equals 777777 octal, it is system
  4    80*						   file created by System Input. */
  4    81 
  4    82         5 word_3,
  4    83 	6 llink_size bit (14) unal,			/* 0-13 ^= 0, Current total file size in llinks
  4    84*						   0-13 = 0, File size is greater than 16,383 llinks,
  4    85*						   and if the file is cataloged, call to .MFS19,5 with
  4    86*						   offset to PAT pointer in index 5 will cause bits
  4    87*						   14-35 of Q-register to be set to file size. (Unless
  4    88*						   there is a Seek error on file catalog in which case
  4    89*						   zero is returned. )
  4    90*						   */
  4    91 	6 llink_position bit (22) unal,		/* Relative llink position within the space descriptors
  4    92*						   in memory. */
  4    93 
  4    94         5 word_4,
  4    95 	6 not_last_desc bit (1) unal,			/* 1 = not last descriptor in memory */
  4    96 	6 space_desc bit (1) unal,			/* 0 = this is space descriptor */
  4    97 	6 space_defective bit (1) unal,		/* 1 = Space is defective */
  4    98 	6 extent bit (15) unal,			/* Number of llinks in this extent (area defined by this
  4    99*						   descriptor) */
  4   100 	6 origin bit (18) unal;			/* device llinks number of origin of this extent */
  4   101 /*   END INCLUDE FILE gtss_dfd_ext_.incl.pl1 */
      437 
      438 
  5     1 /* BEGIN INCLUDE FILE gtss_ust_ext_.incl.pl1 */
  5     2 /* UST: User Status Table 
  5     3*   definitions based on 
  5     4*   System Tables, Order number DD14-01E, January 1981
  5     5*   Section 15, Time Sharing System
  5     6*
  5     7*   Authors: Robert J. Grimes	Created
  5     8*   -	  Albert N. Kepner	  1978
  5     9*   -	  Robert M. May
  5    10*   -	  David B. Ward
  5    11*   Change:  Dave Ward	02/23/79 Level 4 numbering.
  5    12*   Change:  Ron Barstad  83-07-12 Repaired damaged formating and word offset comments
  5    13*                                  Brought up to 4JS3 functionality
  5    14**/
  5    15 /* octal word offsets of entries */
  5    16 dcl 1 gtss_ust_ext_$ust aligned ext,
  5    17       3 gtss_ust,
  5    18 /* 0-1  */	4 lid		bit (72),
  5    19 /* 2    */	4 lstp		bit (36),
  5    20 /* 3    */	4 ltin		bit (36),
  5    21 /* 4    */	4 lstio,
  5    22 			5 no_of_chars_by_8  fixed bin (18) uns unal,
  5    23 			5 no_of_disk_io     fixed bin (18) uns unal,
  5    24 /* 5    */	4 lsnub		bit (36),
  5    25 /* 6-7  */	4 lchg		bit (72),
  5    26 /* 10   */	4 lbuf,
  5    27 			5 address		bit (18)unaligned,
  5    28 			5 tally		bit (1)unaligned,
  5    29 			5 terminal_type	bit (5)unaligned,
  5    30 			5 station_id	bit (12)unaligned,
  5    31 /* 11-12 */	4 liost (0:1)	bit (36),
  5    32 /* 13   */	4 lcc		bit (36),
  5    33 /* 14   */	4 lback,
  5    34 			5 fill1		bit (18) unaligned,
  5    35 			5 gwake		fixed bin (17) unaligned,
  5    36 /* 15   */	4 lflag,
  5    37 			5 mp_list		bit (18) unaligned,
  5    38 			5 flags unaligned,
  5    39 				6 b18		bit (1) unaligned,
  5    40 				6 b19		bit (1) unaligned,
  5    41 				6 b20		bit (1) unaligned,
  5    42 				6 b21		bit (1) unaligned,
  5    43 				6 b22		bit (1) unaligned,
  5    44 				6 b23		bit (1) unaligned,
  5    45 				6 b24		bit (1) unaligned,
  5    46 				6 b25		bit (1) unaligned,
  5    47 				6 b26		bit (1) unaligned,
  5    48 				6 b27		bit (1) unaligned,
  5    49 				6 b28		bit (1) unaligned,
  5    50 				6 b29		bit (1) unaligned,
  5    51 				6 b30		bit (1) unaligned,
  5    52 				6 b31		bit (1) unaligned,
  5    53 				6 b32		bit (1) unaligned,
  5    54 				6 b33		bit (1) unaligned,
  5    55 				6 b34		bit (1) unaligned,
  5    56 				6 b35		bit (1) unaligned,
  5    57 /* 16   */	4 lkdss		bit (36),
  5    58 /* 17   */	4 lfile,
  5    59 			5 program_stack	fixed bin (17) unal,
  5    60 			5 file_list_ptr	bit (18) unal,
  5    61 /* 20   */	4 lttys		bit (36),
  5    62 /* 21   */	4 lswth,
  5    63 			5 b0		bit (1) unaligned,
  5    64 			5 b1		bit (1) unaligned,
  5    65 			5 b2		bit (1) unaligned,
  5    66 			5 b3		bit (1) unaligned,
  5    67 			5 b4		bit (1) unaligned,
  5    68 			5 b5		bit (1) unaligned,
  5    69 			5 b6		bit (1) unaligned,
  5    70 			5 b7		bit (1) unaligned,
  5    71 			5 b8		bit (1) unaligned,
  5    72 			5 b9		bit (1) unaligned,
  5    73 			5 b10		bit (1) unaligned,
  5    74 			5 b11		bit (1) unaligned,
  5    75 			5 b12		bit (1) unaligned,
  5    76 			5 b13		bit (1) unaligned,
  5    77 			5 b14		bit (1) unaligned,
  5    78 			5 b15		bit (1) unaligned,
  5    79 			5 b16		bit (1) unaligned,
  5    80 			5 b17		bit (1) unaligned,
  5    81 			5 b18		bit (1) unaligned,
  5    82 			5 b19		bit (1) unaligned,
  5    83 			5 b20		bit (1) unaligned,
  5    84 			5 b21		bit (1) unaligned,
  5    85 			5 b22		bit (1) unaligned,
  5    86 			5 b23		bit (1) unaligned,
  5    87 			5 b24		bit (1) unaligned,
  5    88 			5 b25		bit (1) unaligned,
  5    89 			5 b26		bit (1) unaligned,
  5    90 			5 b27		bit (1) unaligned,
  5    91 			5 b28		bit (1) unaligned,
  5    92 			5 b29		bit (1) unaligned,
  5    93 			5 b30		bit (1) unaligned,
  5    94 			5 b31		bit (1) unaligned,
  5    95 			5 b32		bit (1) unaligned,
  5    96 			5 b33		bit (1) unaligned,
  5    97 			5 b34		bit (1) unaligned,
  5    98 			5 b35		bit (1) unaligned,
  5    99 /* 22   */	4 lsize,
  5   100 			5 bar		fixed bin (17) unaligned,
  5   101 			5 limit		bit (18) unaligned,
  5   102 /* 23... */	4 lswap,
  5   103 			5 fill		bit (18) unal,
  5   104 			5 size		bit (18) unal,
  5   105 /* ...24 */	4 transfer_cell	bit (36) unal,
  5   106 /* 25   */	4 lerrm		bit (36),
  5   107 /* 26-37 */	4 lcfil (0:9)	bit (36),
  5   108 /* 40   */	4 lsybc,
  5   109 			5 b0_17		fixed bin (17) unaligned,
  5   110 			5 b18_35		fixed bin (17) unaligned,
  5   111 /* 41-42 */	4 lstem (0:1)	bit (36),
  5   112 /* 43    */	4 lcals,
  5   113 			5 b0_17		fixed bin (17) unaligned,
  5   114 			5 b18_35		bit (18) unaligned,
  5   115 /* 44-51 */	4 subsystems (3),
  5   116 			5 content_lswap,
  5   117 				6 fill		bit (18) unal,
  5   118 				6 size		bit (18) unal,
  5   119 			5 tally_address	fixed bin (17) unaligned,
  5   120 			5 ss_flags	bit (18) unaligned,
  5   121 /* 52   */	4 ltalc,
  5   122 			5 tod		fixed bin (17) unaligned,
  5   123 			5 startup		fixed bin (17) unaligned,
  5   124 /* 53   */	4 lspts		fixed bin (35),
  5   125 /* 54   */	4 lflg2,
  5   126 			5 b0		bit (1) unaligned,
  5   127 			5 b1		bit (1) unaligned,
  5   128 			5 b2		bit (1) unaligned,
  5   129 			5 b3		bit (1) unaligned,
  5   130 			5 b4		bit (1) unaligned,
  5   131 			5 b5		bit (1) unaligned,
  5   132 			5 b6		bit (1) unaligned,
  5   133 			5 b7		bit (1) unaligned,
  5   134 			5 b8		bit (1) unaligned,
  5   135 			5 b9		bit (1) unaligned,
  5   136 			5 b10		bit (1) unaligned,
  5   137 			5 b11		bit (1) unaligned,
  5   138 			5 b12		bit (1) unaligned,
  5   139 			5 b13		bit (1) unaligned,
  5   140 			5 b14		bit (1) unaligned,
  5   141 			5 b15		bit (1) unaligned,
  5   142 			5 b16		bit (1) unaligned,
  5   143 			5 b17		bit (1) unaligned,
  5   144 			5 b18		bit (1) unaligned,
  5   145 			5 b19		bit (1) unaligned,
  5   146 			5 b20		bit (1) unaligned,
  5   147 			5 b21		bit (1) unaligned,
  5   148 			5 b22		bit (1) unaligned,
  5   149 			5 b23		bit (1) unaligned,
  5   150 			5 b24		bit (1) unaligned,
  5   151 			5 b25		bit (1) unaligned,
  5   152 			5 b26		bit (1) unaligned,
  5   153 			5 b27		bit (1) unaligned,
  5   154 			5 b28		bit (1) unaligned,
  5   155 			5 b29		bit (1) unaligned,
  5   156 			5 b30		bit (1) unaligned,
  5   157 			5 b31		bit (1) unaligned,
  5   158 			5 b32		bit (1) unaligned,
  5   159 			5 b33		bit (1) unaligned,
  5   160 			5 b34		bit (1) unaligned,
  5   161 			5 b35		bit (1) unaligned,
  5   162 /* 55-60 */	4 lsftm (0:3)	bit (36),
  5   163 /* 61    */	4 lsprt		fixed bin (35),
  5   164 /* 62    */	4 ltrm		bit (36),
  5   165 /* 63    */	4 linno		fixed bin (35),
  5   166 /* 64    */	4 lincr		fixed bin (35),
  5   167 /* 65    */	4 ltdes		bit (36),
  5   168 /* 66    */	4 lbptr		bit (36),
  5   169 /* 67    */	4 lpptr,
  5   170 			5 last_file_pat_ptr	bin (18) uns unal,
  5   171 			5 lpptr_reserved	bin (18) uns unal,
  5   172 /* 70    */	4 lsclp		bit (36),
  5   173 /* 71    */	4 limit		fixed bin (35),
  5   174 /* 72    */	4 lacpt,
  5   175 			5 jout_pat_offset	bit (18) unal,
  5   176 			5 permissions unal,
  5   177 				6 lodx		bit (1) unal,
  5   178 				6 cardin		bit (1) unal,
  5   179 				6 talk		bit (1) unal,
  5   180 				6 lods		bit (1) unal,
  5   181 			5 cardin_urgency	bit (14) unal,
  5   182 /* 73    */	4 ldrl,
  5   183 			5 ilc		bit (18) unaligned,
  5   184 			5 code		fixed bin (17) unaligned,
  5   185 /* 74    */	4 ljsnb		bit (36),
  5   186 /* 75    */	4 ltm0		bit (36),
  5   187 /* 76    */	4 ltm1		bit (36),
  5   188 /* 77    */	4 ltm2		bit (36),
  5   189 /* 100   */	4 ltm3		bit (36),
  5   190 /* 101   */	4 ltm4		bit (36),
  5   191 /* 102   */	4 ltm5		bit (36),
  5   192 /* 103   */	4 ltmwt		bit (36),
  5   193 /* 104   */	4 ltmrs		bit (36),
  5   194 /* 105   */	4 ltc0		bit (36),
  5   195 /* 106   */	4 ltc1		bit (36),
  5   196 /* 107   */	4 ltc2		bit (36),
  5   197 /* 110   */	4 lct3		bit (36),
  5   198 /* 111   */	4 ltc4		bit (36),
  5   199 /* 112   */	4 ltc5		bit (36),
  5   200 /* 113   */	4 ltcw		bit (36),
  5   201 /* 114   */	4 lkst		bit (36),
  5   202 /* 115   */	4 lkst2		bit (36),
  5   203 /* 116   */	4 lkcc		bit (36),
  5   204 /* 117   */	4 lkms		bit (36),
  5   205 /* 120-121 */	4 lksdc (0:1)	bit (36),
  5   206 /* 122   */	4 lkntp		bit (36),
  5   207 /* 123   */	4 lkrdc		bit (36),
  5   208 /* 124   */	4 lpqf		bit (36),
  5   209 /* 125   */	4 lpqb		bit (36),
  5   210 /* 126   */	4 lustl		bit (36),
  5   211 /* 127   */	4 ltemp		bit (36),
  5   212 /* 130   */	4 lrtll,
  5   213 			5 word_length	fixed bin unaligned,
  5   214 			5 char_length	fixed bin unaligned,
  5   215 /* 131   */	4 ltim		bit (36),
  5   216 /* 132   */	4 lcfio,
  5   217 			5 sect_out	fixed bin(18)unsigned unal,
  5   218 			5 sect_in		fixed bin(18)unsigned unal,
  5   219 /* 133   */	4 lcfst,
  5   220 			5 initial_sect_out	fixed bin(18)unsigned unal,
  5   221 			5 start_term	fixed bin(18)unsigned unal,
  5   222 /* 134   */	4 lcmpt		bit (36),
  5   223 /* 135   */	4 lcjid		bit (36),
  5   224 /* 136-137 */	4 lrcal (0:1)	bit (36),
  5   225 /* 140   */	4 lrdta		bit (36),
  5   226 /* 141   */	4 lrrsk		bit (36),
  5   227 /* 142   */	4 lrskd		bit (36),
  5   228 /* 143   */	4 lrcc		bit (36),
  5   229 /* 144-145 */	4 lrsts (0:1)	bit (36),
  5   230 /* 146   */	4 lrtm		bit (36),
  5   231 /* 147   */	4 lswt2,
  5   232 			5 b0		bit (1) unaligned,
  5   233 			5 b1		bit (1) unaligned,
  5   234 			5 b2		bit (1) unaligned,
  5   235 			5 b3		bit (1) unaligned,
  5   236 			5 b4		bit (1) unaligned,
  5   237 			5 b5		bit (1) unaligned,
  5   238 			5 b6		bit (1) unaligned,
  5   239 			5 b7		bit (1) unaligned,
  5   240 			5 b8		bit (1) unaligned,
  5   241 			5 b9		bit (1) unaligned,
  5   242 			5 b10		bit (1) unaligned,
  5   243 			5 b11		bit (1) unaligned,
  5   244 			5 b12		bit (1) unaligned,
  5   245 			5 b13		bit (1) unaligned,
  5   246 			5 b14		bit (1) unaligned,
  5   247 			5 b15		bit (1) unaligned,
  5   248 			5 b16		bit (1) unaligned,
  5   249 			5 b17		bit (1) unaligned,
  5   250 			5 b18		bit (1) unaligned,
  5   251 			5 b19		bit (1) unaligned,
  5   252 			5 b20		bit (1) unaligned,
  5   253 			5 b21		bit (1) unaligned,
  5   254 			5 b22		bit (1) unaligned,
  5   255 			5 b23		bit (1) unaligned,
  5   256 			5 b24		bit (1) unaligned,
  5   257 			5 b25		bit (1) unaligned,
  5   258 			5 b26		bit (1) unaligned,
  5   259 			5 b27		bit (1) unaligned,
  5   260 			5 b28		bit (1) unaligned,
  5   261 			5 b29		bit (1) unaligned,
  5   262 			5 b30		bit (1) unaligned,
  5   263 			5 b31		bit (1) unaligned,
  5   264 			5 b32		bit (1) unaligned,
  5   265 			5 b33		bit (1) unaligned,
  5   266 			5 b34		bit (1) unaligned,
  5   267 			5 b35		bit (1) unaligned,
  5   268 /* 150   */	4 llsnb		bit (36),
  5   269 /* 151   */	4 lesq		bit (36),
  5   270 /* 152-153 */	4 lumc (0:1)	bit (36),
  5   271 /* 154-155 */	4 lfnam (0:1)	bit (36),
  5   272 /* 156   */	4 lopts		bit (36),
  5   273 /* 157   */	4 licec,
  5   274 			5 b0_17		bit (18) unaligned,
  5   275 			5 b18_35		fixed bin (17) unaligned,
  5   276 /* 160   */	4 lflg3,
  5   277 			5 b0		bit (1) unaligned,
  5   278 			5 b1		bit (1) unaligned,
  5   279 			5 b2		bit (1) unaligned,
  5   280 			5 b3		bit (1) unaligned,
  5   281 			5 b4		bit (1) unaligned,
  5   282 			5 b5		bit (1) unaligned,
  5   283 			5 b6		bit (1) unaligned,
  5   284 			5 b7		bit (1) unaligned,
  5   285 			5 b8		bit (1) unaligned,
  5   286 			5 b9		bit (1) unaligned,
  5   287 			5 b10		bit (1) unaligned,
  5   288 			5 b11		bit (1) unaligned,
  5   289 			5 b12		bit (1) unaligned,
  5   290 			5 b13		bit (1) unaligned,
  5   291 			5 b14		bit (1) unaligned,
  5   292 			5 b15		bit (1) unaligned,
  5   293 			5 b16		bit (1) unaligned,
  5   294 			5 b17		bit (1) unaligned,
  5   295 			5 b18		bit (1) unaligned,
  5   296 			5 b19		bit (1) unaligned,
  5   297 			5 b20		bit (1) unaligned,
  5   298 			5 b21		bit (1) unaligned,
  5   299 			5 b22		bit (1) unaligned,
  5   300 			5 b23		bit (1) unaligned,
  5   301 			5 b24		bit (1) unaligned,
  5   302 			5 b25		bit (1) unaligned,
  5   303 			5 b26		bit (1) unaligned,
  5   304 			5 b27		bit (1) unaligned,
  5   305 			5 b28		bit (1) unaligned,
  5   306 			5 b29		bit (1) unaligned,
  5   307 			5 b30		bit (1) unaligned,
  5   308 			5 b31		bit (1) unaligned,
  5   309 			5 b32		bit (1) unaligned,
  5   310 			5 b33		bit (1) unaligned,
  5   311 			5 b34		bit (1) unaligned,
  5   312 			5 b35		bit (1) unaligned,
  5   313 /* 161-163 */	4 lpage (0:2)	bit (36),
  5   314 /* 164   */	4 lsit1		bit (36),
  5   315 /* 165   */	4 lsit2		bit (36),
  5   316 /* 166   */	4 lsit3		bit (36),
  5   317 /* 167   */	4 lsit4		bit (36),
  5   318 /* The following entries are maintained by gtss and are not found in TSS UST */
  5   319 /* 170   */	4 lxxx, /* program stack index, offset from gtss_ust */
  5   320 			5 b0_17		fixed bin (17) unaligned,
  5   321 			5 b18_35		bit (18) unaligned, /* not used */
  5   322 /* 171-175 */	4 lprgs (5),
  5   323 			5 b0_17		fixed bin (17) unaligned,
  5   324 			5 b18_35		fixed bin (17) unaligned,
  5   325 /* 176   */	4 fill	bit (36),
  5   326 /* 177   */	4 remote_io_buffer aligned,
  5   327 			5 buffer_control_word,
  5   328 				6 current_line_pointer  bit (18)unal,
  5   329 				6 buffer_threshold_address  bit (18)unal,
  5   330 			5 number_words_transmitted	fixed bin (17)unal,
  5   331 			5 FILL1			fixed bin (17)unal,
  5   332 			5 count_of_characters_transmitted fixed bin (17)unal,
  5   333 			5 FILL2			fixed bin (17)unal,
  5   334 			5 characters_transmitted (244) char (1) unal,
  5   335 /* 277   */	4 word_after_ust		bit (36) aligned;
  5   336 
  5   337 /*   END INCLUDE FILE gtss_ust_ext_.incl.pl1 */
      439 
      440 
  6     1 /* BEGIN INCLUDE FILE gtss_ext_.incl.pl1 */
  6     2 /*
  6     3*  Created: (Wardd Multics)  05/20/78 1307.6 mst Sat 
  6     4*  Modified: Ward            1981     add suspended_process dcl
  6     5*  Modified: Ron Barstad  83-07-21  Fixed level number on mcfc to 3
  6     6*  Modified: Ron Barstad  83-07-25  Fixed derail range in statistics to 4js3 number
  6     7**/
  6     8 dcl  gtss_ext_$aem                   fixed bin static ext	/* >0 Print "additional" error information. */;
  6     9 dcl  gtss_ext_$bad_drl_rtrn          static ext label	/* Default for drl_rtrn. */;
  6    10 dcl  gtss_ext_$db                    (72)bit(1)unal static ext;
  6    11 dcl  gtss_ext_$deferred_catalogs_ptr ptr ext;
  6    12 dcl  gtss_ext_$dispose_of_drl        static ext label	/* quit handlers for some derails use this label to abort */;
  6    13 dcl  gtss_ext_$drl_rtrn              (4)static ext label	/* where to return at subsystem end */;
  6    14 dcl  gtss_ext_$drm_path              char(168)static ext	/* gtss_expand_pathname_stores drm_path */;
  6    15 dcl  gtss_ext_$drun_jid              char (5) static ext	/* valid only for DRUN executing under absentee */;
  6    16 dcl  gtss_ext_$event_channel         fixed bin (71) static ext	/* used for DABT signals */;
  6    17 dcl  gtss_ext_$finished              static ext label	/* Return to gtss for normal conclusion. */;
  6    18 dcl  gtss_ext_$gdb_name              char(8)ext	/* Name H* module to debug. */;
  6    19 dcl  gtss_ext_$get_line              entry(ptr,ptr,fixed bin(21),fixed bin(21),fixed bin(35))variable ext /* Build mode input procedure. */;
  6    20 dcl  gtss_ext_$gtss_slave_area_seg   (4) ext static ptr	/* pointer to gtss slave area segment */;
  6    21 dcl  gtss_ext_$hcs_work_area_ptr     ptr ext static		/* Temp seg for acl lists. */;
  6    22 dcl  gtss_ext_$homedir               char (64) static ext /* user's home dir */;
  6    23 dcl  gtss_ext_$last_k_was_out        bit (1)aligned ext static	/* "1"b => last tty output was output. */;
  6    24 dcl  gtss_ext_$pdir                  char (168) varying ext static	/* pathname of process directory */;
  6    25 dcl  gtss_ext_$popup_from_pi         static ext label	/* transfer to this label after pi simulates popup primitive */;
  6    26 dcl  gtss_ext_$process_type          fixed bin (17) static ext;
  6    27 dcl  gtss_ext_$put_chars             entry(ptr,ptr,fixed bin(24),fixed bin(35)) variable ext	/* Terminal output procedure. */;
  6    28 dcl  gtss_ext_$restart_from_pi       static ext label	/* transfer to this label after pi restores machine conditions */;
  6    29 dcl  gtss_ext_$restart_seg_ptr       ptr static ext	/* points to DRUN restart file when exec under absentee */;
  6    30 dcl  gtss_ext_$sig_ptr               ext static ptr	/* saved ptr to signal_ */;
  6    31 dcl  gtss_ext_$stack_level_          fixed bin ext static;
  6    32 dcl  gtss_ext_$suspended_process     bit(1) ext static;
  6    33 dcl  gtss_ext_$SYstarstar_file_no    fixed bin (24) static ext;
  6    34 dcl  gtss_ext_$user_id               char (26)var ext;
  6    35 dcl  gtss_ext_$work_area_ptr         ptr ext;
  6    36 
  6    37 dcl  1 gtss_ext_$CFP_bits aligned static external
  6    38      , 3 no_input_yet bit (1) unaligned         /* used in gtss_CFP_input_, gtss_read_starCFP_ */
  6    39      , 3 rtn_bits bit (4) unaligned             /* used in gtss_CFP_input_, gtss_CFP_output_ */
  6    40      , 3 cpos_called bit (1) unaligned          /* used in gtss_CFP_input_, gtss_drl_t_cfio_, gtss_abandon_CFP_ */
  6    41      , 3 cout_called bit (1) unaligned          /* used in gtss_read_starCFP_, gtss_abandon_CFP_ */
  6    42      , 3 build_mode bit (1) unaligned	        /* used in gtss_build_, gtss_dsd_process_ */
  6    43      ;
  6    44 
  6    45 dcl 1 gtss_ext_$com_reg aligned static ext,
  6    46        3 tsdmx,
  6    47          4 dst fixed bin (18) unsigned unaligned,
  6    48          4 dit fixed bin (18) unsigned unaligned,
  6    49        3 tsdpt fixed bin (36) unsigned unaligned,
  6    50        3 tsddt fixed bin (36) unsigned unaligned,
  6    51        3 tsdid bit (72) unaligned,
  6    52        3 tsdsd bit (36) unaligned,
  6    53        3 tsdst fixed bin (36) unsigned unaligned,
  6    54        3 tsdjb fixed bin (35) unaligned,
  6    55        3 tsdgt,
  6    56          4 ust_loc fixed bin (18) unsigned unaligned,
  6    57          4 gating_ctl fixed bin (18) unsigned unaligned,
  6    58        3 tcdfr bit (36) unaligned;
  6    59 
  6    60 dcl 1 gtss_ext_$flags aligned static ext
  6    61      , 3 dispose_of_drl_on_pi	bit (01) unal	/* 1 => drl that should be aborted after quit-pi sequence */
  6    62      , 3 drl_in_progress	bit (01) unal	/* 1 => drl handler executing; 0 => gcos code executing */
  6    63      , 3 popup_from_pi	bit (01) unal	/* 1 => derail processor will simulate Gcos break instead of returning */
  6    64      , 3 unfinished_drl	bit (01) unal	/* 1 => subsystem is handling breaks and quit was raised during a drl */
  6    65      , 3 ss_time_limit_set	bit (01) unal	/* 1 => exec time limit set for subsystem */
  6    66      , 3 timer_ranout	bit (01) unal	/* 1 => user is executing timer runout code */
  6    67      , 3 gtss_com_err_sw      bit (01) unal       /* 1 => stop com_err_ string from going to terminal */   
  6    68      , 3 available		bit (65) unal
  6    69      ;
  6    70 
  6    71 
  6    72 dcl 1 gtss_ext_$statistics aligned static ext,		/* Derail usage statistics */
  6    73       3 total_time (-10:71)fixed bin (71),
  6    74       3 count (-10:71)fixed bin (17);
  6    75 
  6    76 /* 	Declaration of Available File Table
  6    77*   */
  6    78 dcl 1 gtss_ext_$aft aligned ext,			/* aft structure */
  6    79 
  6    80       3 start_list (0:102) fixed bin (24),		/* >0 => 1st aft_entry row to start of next entry chain. */
  6    81 
  6    82       3 aft_entry (20),
  6    83         4 altname char (8),				/* altname name for attaching this file */
  6    84         4 next_entry fixed bin (24),			/* Next aft_entry in hash chain. */
  6    85         4 previous_add fixed bin (24),			/* Previously added entry. */
  6    86         4 next_add fixed bin (24),			/* Entry added after this one. */
  6    87         4 used bit (1) unal,				/* "1"b => aft_entry contains AFT value. */
  6    88         4 forced bit(1) unal,				/* "1"b => gtss_verify_access_ forced access on this file. */
  6    89 
  6    90       3 free_space fixed bin (24),			/* Index of start of free space list for aft entries. */
  6    91       3 first_added fixed bin (24),			/* >0  => start of chain in add order. */
  6    92       3 last_added fixed bin (24)			/* >0 => end of chain in added order. */;
  6    93 
  6    94 dcl  gtss_ext_$ppt                   ptr ext /*  switch name for tapein drl */;
  6    95 /**	Data structure to provide access to installed
  6    96*   subsystems fast library load.
  6    97*   **/
  6    98 dcl 1 gtss_ext_$fast_lib aligned ext
  6    99      , 3 fast_lib_fcb ptr				/* Pointer to msf fcb.	*/
  6   100      , 3 fast_lib_ncp fixed bin (24)			/* Number of components. */
  6   101      , 3 comp_ptr (0:9)ptr				/* Pointer to component. */
  6   102      , 3 comp_wds (0:9)fixed bin (24)			/* Component length (words). */
  6   103      ;
  6   104 
  6   105 /* Pointers to segments to regulate multipler
  6   106*   callers to files. Same segments are used to regulate
  6   107*   all simulator callers.
  6   108**/
  6   109 dcl 1 gtss_ext_$mcfc	aligned ext,
  6   110       3 multics_lock_id	bit(36),
  6   111       3 wait_time		fixed bin,
  6   112       3 files_ptr		ptr,
  6   113       3 names_ptr		ptr,
  6   114       3 callers_ptr		(0:3)ptr
  6   115 ;
  6   116 
  6   117 /*   END INCLUDE FILE gtss_ext_.incl.pl1 */
      441 
      442 
  7     1 /* BEGIN INCLUDE FILE gtss_filact_status.incl.pl1 */
  7     2 /*
  7     3*  Created: (Wardd Multics)  10/10/78 0945.5 mst Tue 
  7     4**/
  7     5 
  7     6 /*
  7     7*	 4000   NO ERRORS 
  7     8*	 4001   USER-ID NOT IN MASTER CATALOG 
  7     9*	 4002   I/O ERROR ON DEVICE XXX SA = NNN......NNN 
  7    10*	 4003   PERMISSIONS DENIED 
  7    11*	 4004   FILE BUSY: TRY LATER 
  7    12*	 4005   INCORRECT CAT/FILE DESCRIPTION AT AAA......AAA 
  7    13*	 4006   NO SPACE FOR CATALOG ON DEVICE XXX 
  7    14*	 4007   UNDEFINED DEVICE YYY ZZZZZZ 
  7    15*	 4010   NO SPACE FOR FILE ON DEVICE YYY 
  7    16*	 4011   NON-UNIQUE NAME 
  7    17*	 4012   SIZE REQUEST LS THAN ALLOCATED 
  7    18*	 4013   SPACE REQUEST GR THAN ALLOWED 
  7    19*	 4014   INCORRECT OR MISSING PASSWORD-AT-AAA...AAA 
  7    20*	 4015   FILE IS ABORT LOCK 
  7    21*	 4016   FILE WRITE IN BATCH ONLY 
  7    22*	 4017   SEEK ERROR ON DEVICE XXX SA = NNN......NNN 
  7    23*	 4020   FAILURE IN NAME SCAN (IMP.) 
  7    24*	 4021   DUP CANNOT BE ON RMVBL DEVICE 
  7    25*	 4022   BAD SPACE INVENTORY ON DEVICE 
  7    26*	 4023   INVALID PARAMETER 
  7    27*	 4024   BAD SPACE TABLE FOR DEVICE ON XXX 
  7    28*	 4025   REQUESTED ENTRY NOT ON-LINE 
  7    29*	 4026   NON-STRUCTURED FILE ENTRY 
  7    30*	 4027   FILE IN DEFECTIVE STATUS 
  7    31*	 4030   ILLEGAL PACK TYPE 
  7    32*	 4031   ACCESS GRANTED TO I-D-S FILE 
  7    33*	 4032   COLLECTION FILE ERROR 
  7    34*	 4033   CAT/FILE SECURITY LOCKED 
  7    35*	 4034   ILLEGAL CHARACTER IN CAT/FILE NAME 
  7    36*	 4035   ILLEGAL CAT/FILE LIST REQUEST 
  7    37*	 4036   AFT IS FULL 
  7    38*	 4037   FILE ALREADY IN AFT 
  7    39*	 4040   MAXIMUM PAT SIZE EXCEEDED 
  7    40*	 4041   NO PROTECTION TABLE SPACE AVAILABLE 
  7    41*	 4042   INVALID FILE CODE OR PAT PTR 
  7    42*	 4043   INVALID CATALOG BLOCK ADDRESS 
  7    43*	 4044   ILLEGAL OPTIONS COMBINATION 
  7    44*	 4045   INVALID SPACE IDENTIFIER 
  7    45*	 4046   (NONE, SPECIAL TSS INTERFACE) 
  7    46*	 4047   UNACCOUNTABLE ERROR 
  7    47*	 4050   ***RESERVED for FMS*** 
  7    48*	 4051   CHECKSUM ERROR - DEVICE XXX SA = NNN......NNN 
  7    49*	 4052   DEVICE XXX RELEASED 
  7    50*	 4053   READ ACCESS DENIED - NULL FILE 
  7    51*	 4054   FILE IS WRITE LOCKED 
  7    52*	 4055   ***RESERVED*** 
  7    53*	 4056   SECURITY PARAMETER - REQUIRED 
  7    54*	 4057   SECURITY PARAMETER - INVALID 
  7    55*	 4061   $FSYS HAS BEEN ENABLED 
  7    56*	 4062   ILLEGAL SUBFUNCTION CODE 
  7    57*	 4063   FILE NOT BEING MONITORED 
  7    58*	 4064   DEADLOCK ON PAGE REQUEST 
  7    59*	 4065   PAGE CURRENTLY BUSY 
  7    60*	 4066   FILE NOT DUPLICATED 
  7    61*	 4067   TDS MON ALLOC ERROR 
  7    62*	 4070   ILLEGAL CHECKPOINT REQUEST 
  7    63*	 4071   ILLEGAL DCW SPECIFIED 
  7    64*	 4072   IMPROPER PROTECTION OPTION 
  7    65*	 4073   INVALID ARG LIST PARAMETER NO. 000 
  7    66*	 4074   SYSTEM JOURNAL NOT CONFIGURED 
  7    67*	 4075   FILE RESTORE LOCKED 
  7    68*	 4076   FILE IS TDS LOCKED 
  7    69*	 4077   ERR TDS SUBSET PAGES RELEASED 
  7    70*	 4100   UNACCOUNTABLE ERROR 
  7    71**/
  7    72 
  7    73 /*   END INCLUDE FILE gtss_filact_status.incl.pl1 */
      443 
      444 
  8     1 /* BEGIN INCLUDE FILE gtss_pnterr.incl.pl1 */
  8     2 /*
  8     3*  Created: (Grimes SMP)  04/15/78 0933.2 mst Sat 
  8     4*   Change: Dave Ward	06/08/78 made attributes constant.
  8     5*   Change: Dave Ward	08/17/81 made lengths same as constans.
  8     6*   Change: Ron Barstad  83-03-29  fixed err 53, add missing err 56
  8     7*   Change: Ron Barstad  84-02-27  changed back to all same length because of based array in gtss_abort_subsystem_
  8     8**/
  8     9 dcl 1 gtss_pnterr static int options (constant),
  8    10     2 err1   char(50) init("001-INCORRECT PRIMITIVE"),
  8    11     2 err2   char(50) init("002-(^6o)INVALID FILE I/O COMMAND"),
  8    12     2 err3   char(50) init("003-(^6o)INVALID DCW"),
  8    13     2 err4   char(50) init("004-(^6o)INVALID DRL ARGUMENT"),
  8    14     2 err5   char(50) init("005-(^6o)INVALID DRL CODE"),
  8    15     2 err6   char(50) init("006-LEVEL OF CONTROL TOO DEEP"),
  8    16     2 err7   char(50) init("007-BAP PROG. DESC."),
  8    17     2 err8   char(50) init("008-LOOP IN PRIMITIVES"),
  8    18     2 err9   char(50) init("009-SYSTEM UNKNOWN"),
  8    19     2 err10  char(50) init("010-PROGRAM TOO LARGE TO SWAP"),
  8    20     2 err11  char(50) init("011-(^6o)INCORRECT CORE FILE USAGE"),
  8    21     2 err12  char(50) init("012-(^6o)PRIVILEGED I/O ATTEMPTED"),
  8    22     2 err13  char(50) init("013-(^6o)DRL USERID NOT PERMITTED"),
  8    23     2 err14  char(50) init("(^6o)ILLEGAL DRL RELMEM REQUEST"),
  8    24     2 err15  char(50) init("015-(^6o)CANNOT RESET USER ID"),
  8    25     2 err16  char(50) init("016-(^6o)OVERFLOW FAULT"),
  8    26     2 err17  char(50) init("017-(^6o)ILLEGAL OP CODE"),
  8    27     2 err18  char(50) init("018-(^6o)MEMORY FAULT"),
  8    28     2 err19  char(50) init("019-(^6o)FAULT TAG FAULT"),
  8    29     2 err20  char(50) init("020-(^6o)DIVIDE CHECK FAULT"),
  8    30     2 err21  char(50) init("021-(^6o)BAD STATUS - SWAP OUT"),
  8    31     2 err22  char(50) init("022-(^6o)BAD STATUS - SWAP IN"),
  8    32     2 err23  char(50) init("023-(^6o)BAD STATUS - LOAD"),
  8    33     2 err24  char(50) init("(^6o)TALK PERMISSION NOT GRANTED"),
  8    34     2 err25  char(50) init("(^6o)WRITE ATTEMPTED ON READ-ONLY FILE - ^8a"),
  8    35     2 err26  char(50) init("(^6o)READ ATTEMPTED ON EXECUTE-ONLY FILE - ^8a"),
  8    36     2 err27  char(50) init("024-(^6o)MME FAULT"),
  8    37     2 err28  char(50) init("028-(^6o)REWIND ATTEMPTED FOR RANDOM FILE - ^8a"),
  8    38     2 err29  char(50) init("029-ILLEGAL SYSTEM SELECTION"),
  8    39     2 err30  char(50) init("134-(^6o)INVALID DRL FILACT FUNCTION #^i"),
  8    40     2 err31  char(50) init("135-(^6o)PRIVILEGED DRL FILACT REQUEST"),
  8    41     2 err32  char(50) init("138-(^6o)NO TAP* FILE FOR DRL TAPEIN"),
  8    42     2 err33  char(50) init("139-ERROR IN WRITING TAP* FILE"),
  8    43     2 err34  char(50) init("(^6o)DRL ABORT - CANNOT WRITE ABRT FILE"),
  8    44     2 err35  char(50) init("(^6o)DRL ABORT - ABRT FILE WRITTEN"),
  8    45     2 err36  char(50) init("NOT ENOUGH CORE TO RUN JOB"),
  8    46     2 err37  char(50) init("SORRY-OUT OF SWAP SPACE. TRY AGAIN."),
  8    47     2 err38  char(50) init("(^6o)FILE ADDRESS ERROR"),
  8    48     2 err39  char(50) init("(^6o)DRL ABORT - ABRT FILE I/O ERROR"),
  8    49     2 err40  char(50) init("(^6o)DRL ABORT - ABRT FILE TOO SMALL"),
  8    50     2 err41  char(50) init("(^6o)BAD STATUS FOR DRL SAVE/RESTOR - ^8a"),
  8    51     2 err42  char(50) init("(^6o)H* FILE NOT IN AFT - ^8a"),
  8    52     2 err43  char(50) init("064-EXECUTE TIME LIMIT EXCEEDED"),
  8    53     2 err44  char(50) init("025-(^6o)LOCKUP FAULT"),
  8    54     2 err45  char(50) init("065-OBJECT PROGRAM SIZE LIMIT EXCEEDED"),
  8    55     2 err46  char(50) init("(^6o)INCORRECT ENTRY TO DRL TASK"),
  8    56     2 err47  char(50) init("(^6o)H* PROGRAM NAME UNDEFINED - ^8a"),
  8    57     2 err48  char(50) init("(^6o)H* FILE CATALOG FULL - ^8a"),
  8    58     2 err49  char(50) init("(^6o)TALLY OR CHARACTER COUNT INCORRECT"),
  8    59     2 err50  char(50) init("(^6o)BAD DRL SAVE DATA LOC"),
  8    60     2 err51  char(50) init("(^6o)H* FILE NOT INITITALIZED - ^8a"),
  8    61     2 err52  char(50) init("(^6o)H* FILE MUST BE RANDOM - ^8a"),
  8    62     2 err53  char(50) init("026-(^6o)OP-NOT-COMPLETE FAULT"),
  8    63     2 err54  char(50) init("(^6o)H* FILE PROGRAM NAME REQUIRED - ^8a"),
  8    64     2 err55  char(50) init("027-(^6o)COMMAND FAULT"),
  8    65     2 err56  char(50) init("(^6o)LINKED FILE I/O CANNOT SPAN >63 LLINKS - ^8a"),
  8    66     2 err57  char(50) init("UNASSIGNED"),
  8    67     2 err58  char(50) init("(^6o)INVALID TIME FOR DRL GWAKE"),
  8    68     2 err59  char(50) init("UNASSIGNED"),
  8    69     2 err60  char(50) init("(^6o)INVALID SNUMB FOR DRL JOUT"),
  8    70     2 err61  char(50) init("(^6o)PRIVILEGED DRL"),
  8    71     2 err62  char(50) init("(^6o)INVALID DRL JOUT FUNCTION"),
  8    72     2 err63  char(50) init("MEMORY PARITY ERROR"),
  8    73     2 err64  char(50) init("SY** I/O ERROR"),
  8    74 /* The following error messages are artifacts of gtss and are not found in TSS */
  8    75     2 err100 char(50) init("DRL ADDMEM ERROR at (^6o)"),
  8    76     2 err101 char(50) init("DRL RELMEM ERROR TRUNCATE SEGMENT at (^6o)"),
  8    77     2 err102 char(50) init("DRL RELMEM ERROR SET MAX SEGMENT LENGTH"),
  8    78     2 err103 char(50) init("UNIMPLEMENTED DRL FILACT FUNCTION (^i)"),
  8    79     2 err999 char(50) init("dummy");
  8    80 
  8    81 /*   END INCLUDE FILE gtss_pnterr.incl.pl1 */
      445 
      446 
  9     1 /*  */
  9     2 /* BEGIN INCLUDE FILE  mc.incl.pl1   Created Dec 72 for 6180 - WSS. */
  9     3 /* Modified 06/07/76 by Greenberg for mc.resignal */
  9     4 /* Modified 07/07/76 by Morris for fault register data */
  9     5 /* Modified 08/28/80 by J. A. Bush for the DPS8/70M CVPU */
  9     6 /* Modified '82 to make values constant */
  9     7 
  9     8 /* words 0-15 pointer registers */
  9     9 
  9    10 dcl  mcp ptr;
  9    11 
  9    12 dcl 1 mc based (mcp) aligned,
  9    13     2 prs (0:7) ptr,				/* POINTER  REGISTERS */
  9    14    (2 regs,					/* registers */
  9    15       3 x (0:7) bit (18),				/* index registers */
  9    16       3 a bit (36),					/* accumulator */
  9    17       3 q bit (36),					/* q-register */
  9    18       3 e bit (8),					/* exponent */
  9    19       3 pad1 bit (28),
  9    20       3 t bit (27),					/* timer register */
  9    21       3 pad2 bit (6),
  9    22       3 ralr bit (3),				/* ring alarm register */
  9    23 
  9    24     2 scu (0:7) bit (36),
  9    25 
  9    26     2 mask bit (72),				/* mem controller mask at time of fault */
  9    27     2 ips_temp bit (36),				/* Temporary storage for IPS info */
  9    28     2 errcode fixed bin (35),				/* fault handler's error code */
  9    29     2 fim_temp,
  9    30       3 unique_index bit (18) unal,			/* unique index for restarting faults */
  9    31       3 resignal bit (1) unal,			/* recompute signal name with fcode below */
  9    32       3 fcode bit (17) unal,				/* fault code used as index to FIM table and SCT */
  9    33     2 fault_reg bit (36),				/* fault register */
  9    34     2 pad2 bit (1),
  9    35     2 cpu_type fixed bin (2) unsigned,			/* L68 = 0, DPS8/70M = 1 */
  9    36     2 ext_fault_reg bit (15),				/* extended fault reg for DPS8/70M CPU */
  9    37     2 fault_time bit (54),				/* time of fault */
  9    38 
  9    39     2 eis_info (0:7) bit (36)) unaligned;
  9    40 
  9    41 
  9    42 dcl (apx fixed bin init (0),
  9    43      abx fixed bin init (1),
  9    44      bpx fixed bin init (2),
  9    45      bbx fixed bin init (3),
  9    46      lpx fixed bin init (4),
  9    47      lbx fixed bin init (5),
  9    48      spx fixed bin init (6),
  9    49      sbx fixed bin init (7)) internal static options (constant);
  9    50 
  9    51 
  9    52 
  9    53 
  9    54 dcl  scup ptr;
  9    55 
  9    56 dcl 1 scu based (scup) aligned,			/* SCU DATA */
  9    57 
  9    58 
  9    59 /*	WORD (0)		*/
  9    60 
  9    61    (2 ppr,					/* PROCEDURE POINTER REGISTER */
  9    62       3 prr bit (3),				/* procedure ring register */
  9    63       3 psr bit (15),				/* procedure segment register */
  9    64       3 p bit (1),					/* procedure privileged bit */
  9    65 
  9    66     2 apu,					/* APPENDING UNIT STATUS */
  9    67       3 xsf bit (1),				/* ext seg flag - IT modification */
  9    68       3 sdwm bit (1),				/* match in SDW Ass. Mem. */
  9    69       3 sd_on bit (1),				/* SDW Ass. Mem.  ON */
  9    70       3 ptwm bit (1),				/* match in PTW Ass. Mem. */
  9    71       3 pt_on bit (1),				/* PTW Ass. Mem.  ON */
  9    72       3 pi_ap bit (1),				/* Instr Fetch or Append cycle */
  9    73       3 dsptw bit (1),				/* Fetch of DSPTW */
  9    74       3 sdwnp bit (1),				/* Fetch of SDW non paged */
  9    75       3 sdwp bit (1),				/* Fetch of SDW paged */
  9    76       3 ptw bit (1),				/* Fetch of PTW */
  9    77       3 ptw2 bit (1),				/* Fetch of pre-paged PTW */
  9    78       3 fap bit (1),				/* Fetch of final address paged */
  9    79       3 fanp bit (1),				/* Fetch of final address non-paged */
  9    80       3 fabs bit (1),				/* Fetch of final address absolute */
  9    81 
  9    82     2 fault_cntr bit (3),				/* number of retrys of EIS instructions */
  9    83 
  9    84 
  9    85 /*	WORD (1)		*/
  9    86 
  9    87     2 fd,						/* FAULT  DATA */
  9    88       3 iro bit (1),				/* illegal ring order */
  9    89       3 oeb bit (1),				/* out of execute bracket */
  9    90       3 e_off bit (1),				/* no execute */
  9    91       3 orb bit (1),				/* out of read bracket */
  9    92       3 r_off bit (1),				/* no read */
  9    93       3 owb bit (1),				/* out of write bracket */
  9    94       3 w_off bit (1),				/* no write */
  9    95       3 no_ga bit (1),				/* not a gate */
  9    96       3 ocb bit (1),				/* out of call bracket */
  9    97       3 ocall bit (1),				/* outward call */
  9    98       3 boc bit (1),				/* bad outward call */
  9    99       3 inret bit (1),				/* inward return */
  9   100       3 crt bit (1),				/* cross ring transfer */
  9   101       3 ralr bit (1),				/* ring alarm register */
  9   102       3 am_er bit (1),				/* associative memory fault */
  9   103       3 oosb bit (1),				/* out of segment bounds */
  9   104       3 paru bit (1),				/* processor parity upper */
  9   105       3 parl bit (1),				/* processor parity lower */
  9   106       3 onc_1 bit (1),				/* op not complete type 1 */
  9   107       3 onc_2 bit (1),				/* op not complete type 2 */
  9   108 
  9   109     2 port_stat,					/* PORT  STATUS */
  9   110       3 ial bit (4),				/* illegal action lines */
  9   111       3 iac bit (3),				/* illegal action channel */
  9   112       3 con_chan bit (3),				/* connect channel */
  9   113 
  9   114     2 fi_num bit (5),				/* (fault/interrupt)  number */
  9   115     2 fi_flag bit (1),				/*  1 => fault,  0 => interrupt  */
  9   116 
  9   117 
  9   118 /*	WORD (2)		*/
  9   119 
  9   120     2 tpr,					/* TEMPORARY POINTER REGISTER */
  9   121       3 trr bit (3),				/* temporary ring register */
  9   122       3 tsr bit (15),				/* temporary segment register */
  9   123 
  9   124     2 pad2 bit (9),
  9   125 
  9   126     2 cpu_no bit (3),				/* CPU number */
  9   127 
  9   128     2 delta bit (6),				/* tally modification DELTA */
  9   129 
  9   130 
  9   131 /*	WORD (3)		*/
  9   132 
  9   133     2 word3 bit (18),
  9   134 
  9   135     2 tsr_stat,					/* TSR STATUS for 1,2,&3 word instructions */
  9   136       3 tsna,					/* Word 1 status */
  9   137         4 prn bit (3),				/* Word 1  PR  number */
  9   138         4 prv bit (1),				/* Word 1  PR  valid bit */
  9   139       3 tsnb,					/* Word 2  status */
  9   140         4 prn bit (3),				/* Word 2  PR  number */
  9   141         4 prv bit (1),				/* Word 2  PR  valid bit */
  9   142       3 tsnc,					/* Word 3  status */
  9   143         4 prn bit (3),				/* Word 3  PR  number */
  9   144         4 prv bit (1),				/* Word 3  PR  valid bit */
  9   145 
  9   146     2 tpr_tbr bit (6),				/* TPR.TBR  field */
  9   147 
  9   148 
  9   149 /* 	WORD (4)		*/
  9   150 
  9   151     2 ilc bit (18),					/* INSTRUCTION  COUNTER */
  9   152 
  9   153     2 ir,						/* INDICATOR  REGISTERS */
  9   154       3 zero bit (1),				/* zero indicator */
  9   155       3 neg bit (1),				/* negative indicator */
  9   156       3 carry bit (1),				/* carryry indicator */
  9   157       3 ovfl bit (1),				/* overflow indicator */
  9   158       3 eovf bit (1),				/* eponent overflow */
  9   159       3 eufl bit (1),				/* exponent underflow */
  9   160       3 oflm bit (1),				/* overflow mask */
  9   161       3 tro bit (1),				/* tally runout */
  9   162       3 par bit (1),				/* parity error */
  9   163       3 parm bit (1),				/* parity mask */
  9   164       3 bm bit (1),					/* ^bar mode */
  9   165       3 tru bit (1),				/* truncation mode */
  9   166       3 mif bit (1),				/* multi-word instruction mode */
  9   167       3 abs bit (1),				/* absolute mode */
  9   168       3 hex bit (1),				/* hexadecimal exponent mode */
  9   169       3 pad bit (3),
  9   170 
  9   171 
  9   172 /*	WORD (5)		*/
  9   173 
  9   174     2 ca bit (18),					/* COMPUTED  ADDRESS */
  9   175 
  9   176     2 cu,						/* CONTROL UNIT STATUS */
  9   177       3 rf bit (1),					/* on first cycle of repeat instr */
  9   178       3 rpt bit (1),				/* repeat instruction */
  9   179       3 rd bit (1),					/* repeat double instruction */
  9   180       3 rl bit (1),					/* repeat link instruciton */
  9   181       3 pot bit (1),				/* IT  modification */
  9   182       3 pon bit (1),				/* return type instruction */
  9   183       3 xde bit (1),				/* XDE from Even location */
  9   184       3 xdo bit (1),				/* XDE from Odd  location */
  9   185       3 poa bit (1),				/* operation preparation */
  9   186       3 rfi bit (1),				/* tells CPU to refetch instruction */
  9   187       3 its bit (1),				/* ITS modification */
  9   188       3 if bit (1),					/* fault occured during instruction fetch */
  9   189 
  9   190     2 cpu_tag bit (6)) unaligned,			/* computed tag field */
  9   191 
  9   192 
  9   193 /*	WORDS (6,7)	*/
  9   194 
  9   195     2 even_inst bit (36),				/* even instruction of faulting pair */
  9   196 
  9   197     2 odd_inst bit (36);				/* odd  instruction of faulting pair */
  9   198 
  9   199 
  9   200 
  9   201 
  9   202 
  9   203 
  9   204 /*	ALTERNATE   SCU  DECLARATION		*/
  9   205 
  9   206 
  9   207 dcl 1 scux based (scup) aligned,
  9   208 
  9   209    (2 pad0 bit (36),
  9   210 
  9   211     2 fd,						/* GROUP II  FAULT DATA */
  9   212       3 isn bit (1),				/* illegal segment number */
  9   213       3 ioc bit (1),				/* illegal op  code  */
  9   214       3 ia_am bit (1),				/* illegal address - modifier */
  9   215       3 isp bit (1),				/* illegal slave  procedure */
  9   216       3 ipr bit (1),				/* illegal procedure */
  9   217       3 nea bit (1),				/* non existent address */
  9   218       3 oobb bit (1),				/* out of bounds */
  9   219       3 pad bit (29),
  9   220 
  9   221     2 pad2 bit (36),
  9   222 
  9   223     2 pad3a bit (18),
  9   224 
  9   225     2 tsr_stat (0:2),				/* TSR  STATUS  as an  ARRAY */
  9   226       3 prn bit (3),				/* PR  number */
  9   227       3 prv bit (1),				/* PR  valid bit */
  9   228 
  9   229     2 pad3b bit (6)) unaligned,
  9   230 
  9   231     2 pad45 (0:1) bit (36),
  9   232 
  9   233     2 instr (0:1) bit (36);				/* Instruction ARRAY */
  9   234 
  9   235 
  9   236 
  9   237 /*  END INCLUDE FILE   mc.incl.pl1 */
      447 
      448 
 10     1 /* BEGIN INCLUDE FILE gtss_entry_dcls.incl.pl1 */
 10     2 /*
 10     3*  Created: (Wardd Multics)  06/30/78 1624.8 mst Fri 
 10     4*  Modified: Ron Barstad  84-02-24  Fixed wrong and obsolete entries
 10     5**/
 10     6 
 10     7 /**  gtss external entry variables.		**/
 10     8 dcl  com_err_                                   entry() options(variable);
 10     9 dcl  gtss_CFP_abort_                            entry options(variable);
 10    10 dcl  gtss_CFP_break_                            entry options(variable);
 10    11 dcl  gtss_CFP_input_                            entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
 10    12 dcl  gtss_CFP_output_                           entry (ptr, ptr, fixed bin(21), fixed bin(35));
 10    13 dcl  gtss_abandon_CFP_                          entry options(variable);
 10    14 dcl  gtss_abort_dump_                           entry (fixed bin(18));
 10    15 dcl  gtss_abort_subsystem_                      entry options (variable);
 10    16 dcl  gtss_abort_subsystem_$not_imp              entry (ptr, fixed bin(24));
 10    17 dcl  gtss_abs_login_banner_		        entry() returns(char(*));
 10    18 dcl  gtss_abs_logout_banner_		        entry() returns(char(*));
 10    19 dcl  gtss_abs_$abs_equiv                        entry options(variable);
 10    20 dcl  gtss_abs_$cpu_runout		        entry (ptr, char(4));
 10    21 dcl  gtss_abs_$create_absin                     entry() returns(char(*));
 10    22 dcl  gtss_abs_$dabt_check		        entry (ptr, char(4));
 10    23 dcl  gtss_abs_$get_id                           entry (char(5)) returns(char(19));
 10    24 dcl  gtss_abs_$get_drm                          entry() returns(char(*));
 10    25 dcl  gtss_adjust_size_                          entry (ptr);
 10    26 dcl  gtss_aft_$add                              entry (char(8), fixed bin(24), fixed bin(35));
 10    27 dcl  gtss_aft_$delete                           entry (char(8), fixed bin(24), fixed bin(35));
 10    28 dcl  gtss_aft_$find                             entry (char(8), fixed bin(24), fixed bin(35));
 10    29 dcl  gtss_aft_$initialize                       entry (fixed bin(35));
 10    30 dcl  gtss_ascii_bcd_                            entry (ptr, fixed bin, ptr);
 10    31 dcl  gtss_attributes_mgr_$get                   entry (ptr, fixed bin(35));
 10    32 dcl  gtss_attributes_mgr_$set                   entry (ptr, fixed bin(35));
 10    33 dcl  gtss_bcd_ascii_                            entry (ptr, fixed bin(24), ptr);
 10    34 dcl  gtss_bcd_ascii_$lc                         entry (ptr, fixed bin(24), ptr);
 10    35 dcl  gtss_break_vector_                         entry ();
 10    36 dcl  gtss_break_vector_$drl_in_progress         entry() returns(bit(1));
 10    37 dcl  gtss_break_vector_$status                  entry() returns(bit(1));
 10    38 dcl  gtss_build_                                entry options(variable);
 10    39 dcl  gtss_com_err_                              entry options(variable);
 10    40 dcl  gtss_derail_processor_                     entry (ptr, char(*), ptr, ptr, bit(1) aligned) /* called at fault time instead of signal_ */;
 10    41 dcl  gtss_derail_processor_$set                 entry options(variable);
 10    42 dcl  gtss_dq_$catp                              entry (char (5), ptr, fixed bin (18) unsigned);
 10    43 dcl  gtss_dq_$create                            entry (bit(1));
 10    44 dcl  gtss_dq_$dibp                              entry (char(5), ptr);
 10    45 dcl  gtss_dq_$entries_info		        entry (ptr, fixed bin (18) unsigned, fixed bin (18) unsigned);
 10    46 dcl  gtss_dq_$hdrp                              entry (ptr);
 10    47 dcl  gtss_dq_$mod_js		        entry (char(5), fixed bin (6) unsigned, bit (1));
 10    48 dcl  gtss_dq_$open_exc		        entry (bit(1));
 10    49 dcl  gtss_dq_$open_gen		        entry (bit(1));
 10    50 dcl  gtss_drl_abort_                            entry (ptr, fixed bin);
 10    51 dcl  gtss_drl_addmem_                           entry (ptr, fixed bin);
 10    52 dcl  gtss_drl_callss_                           entry (ptr, fixed bin);
 10    53 dcl  gtss_drl_corfil_                           entry (ptr, fixed bin);
 10    54 dcl  gtss_drl_defil_                            entry (ptr, fixed bin);
 10    55 dcl  gtss_drl_defil_$subr                       entry (ptr, ptr, ptr);
 10    56 dcl  gtss_drl_dio_                              entry (ptr, fixed bin);
 10    57 dcl  gtss_drl_drlimt_                           entry (ptr, fixed bin);
 10    58 dcl  gtss_drl_drlsav_                           entry (ptr, fixed bin);
 10    59 dcl  gtss_drl_filact_                           entry (ptr, fixed bin);
 10    60 dcl  gtss_drl_filsp_                            entry (ptr, fixed bin);
 10    61 dcl  gtss_drl_grow_                             entry (ptr, fixed bin);
 10    62 dcl  gtss_drl_gwake_                            entry (ptr, fixed bin);
 10    63 dcl  gtss_drl_jsts_                             entry (ptr, fixed bin);
 10    64 dcl  gtss_drl_kin_                              entry (ptr, fixed bin);
 10    65 dcl  gtss_drl_kotnow_                           entry (ptr, fixed bin);
 10    66 dcl  gtss_drl_kotnow_$gtss_drl_kout_            entry (ptr, fixed bin);
 10    67 dcl  gtss_drl_koutn_                            entry (ptr, fixed bin);
 10    68 dcl  gtss_drl_morlnk_                           entry (ptr, fixed bin);
 10    69 dcl  gtss_drl_msub_                             entry (ptr, fixed bin);
 10    70 dcl  gtss_drl_objtim_                           entry (ptr, fixed bin);
 10    71 dcl  gtss_drl_part_                             entry (ptr, fixed bin);
 10    72 dcl  gtss_drl_pasaft_                           entry (ptr, fixed bin);
 10    73 dcl  gtss_drl_pasdes_                           entry (ptr, fixed bin);
 10    74 dcl  gtss_drl_pasust_                           entry (ptr, fixed bin);
 10    75 dcl  gtss_drl_pdio_                             entry (ptr, fixed bin);
 10    76 dcl  gtss_drl_prgdes_                           entry (ptr, fixed bin);
 10    77 dcl  gtss_drl_pseudo_                           entry (ptr, fixed bin);
 10    78 dcl  gtss_drl_relmem_                           entry (ptr, fixed bin);
 10    79 dcl  gtss_drl_restor_                           entry (ptr, fixed bin);
 10    80 dcl  gtss_drl_retfil_                           entry (ptr, fixed bin);
 10    81 dcl  gtss_drl_return_                           entry (ptr, fixed bin);
 10    82 dcl  gtss_drl_rew_                              entry (ptr, fixed bin);
 10    83 dcl  gtss_drl_rstswh_                           entry (ptr, fixed bin);
 10    84 dcl  gtss_drl_setlno_                           entry (ptr, fixed bin);
 10    85 dcl  gtss_drl_setswh_                           entry (ptr, fixed bin);
 10    86 dcl  gtss_drl_snumb_                            entry (ptr, fixed bin);
 10    87 dcl  gtss_drl_spawn_                            entry (ptr, fixed bin);
 10    88 dcl  gtss_drl_spawn_$gtss_drl_pasflr_           entry (ptr, fixed bin);
 10    89 dcl  gtss_drl_stoppt_                           entry (ptr, fixed bin);
 10    90 dcl  gtss_drl_switch_                           entry (ptr, fixed bin);
 10    91 dcl  gtss_drl_sysret_                           entry (ptr, fixed bin);
 10    92 dcl  gtss_drl_t_cfio_                           entry (ptr, fixed bin);
 10    93 dcl  gtss_drl_t_cmov_                           entry (ptr, fixed bin);
 10    94 dcl  gtss_drl_t_err_                            entry (ptr, fixed bin);
 10    95 dcl  gtss_drl_t_goto_                           entry (ptr, fixed bin);
 10    96 dcl  gtss_drl_t_linl_                           entry (ptr, fixed bin);
 10    97 dcl  gtss_drl_t_rscc_                           entry (ptr, fixed bin);
 10    98 dcl  gtss_drl_tapein_                           entry (ptr, fixed bin);
 10    99 dcl  gtss_drl_task_                             entry (ptr, fixed bin);
 10   100 dcl  gtss_drl_termtp_                           entry (ptr, fixed bin);
 10   101 dcl  gtss_drl_time_                             entry (ptr, fixed bin);
 10   102 dcl  gtss_drun_                                 entry (bit(1));
 10   103 dcl  gtss_dsd_lookup_                           entry (char(8) var) returns(fixed bin(24));
 10   104 dcl  gtss_dsd_process_                          entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
 10   105 dcl  gtss_edit_dsd_                             entry (ptr, fixed bin(21)) returns(fixed bin(24));
 10   106 dcl  gtss_mcfc_empty                            entry (char(*) var);
 10   107 dcl  gtss_expand_pathname_                      entry (ptr, char(*), char(*), fixed bin(35));
 10   108 dcl  gtss_expand_pathname_$verify_umc           entry (ptr, char(*), char(*), bit(18), fixed bin(35));
 10   109 dcl  gtss_fault_processor_                      entry options(variable);
 10   110 dcl  gtss_find_cond_frame_		        entry (char(32) var) returns(ptr);
 10   111 dcl  gtss_fault_processor_$timer_runout         entry (ptr, char(*));
 10   112 dcl  gtss_filact_error_status_                  entry (fixed bin(35))returns(bit(12));
 10   113 dcl  gtss_filact_funct02_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
 10   114 dcl  gtss_filact_funct03_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
 10   115 dcl  gtss_filact_funct04_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
 10   116 dcl  gtss_filact_funct05_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
 10   117 dcl  gtss_filact_funct08_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
 10   118 dcl  gtss_filact_funct10_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
 10   119 dcl  gtss_filact_funct11_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
 10   120 dcl  gtss_filact_funct14_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
 10   121 dcl  gtss_filact_funct18_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
 10   122 dcl  gtss_filact_funct19_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
 10   123 dcl  gtss_filact_funct21_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
 10   124 dcl  gtss_filact_funct22_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
 10   125 dcl  gtss_mcfc_init_                            entry (char(*) var);
 10   126 dcl  gtss_interp_prim_                          entry options(variable);
 10   127 dcl  gtss_interp_prim_$callss                   entry (char(4), ptr);
 10   128 dcl  gtss_interp_prim_$sysret                   entry options(variable);
 10   129 dcl  gtss_interp_prim_$t_goto                   entry (char(4));
 10   130 dcl  gtss_ios_change_size_                      entry (fixed bin(24), fixed bin(24), bit(1), fixed bin(24), fixed bin(35));
 10   131 dcl  gtss_ios_close_                            entry (fixed bin(24), ptr, fixed bin(35));
 10   132 dcl  gtss_ios_exchange_names_                   entry (fixed bin(24), fixed bin(24), fixed bin(24), fixed bin(35));
 10   133 dcl  gtss_ios_initialize_                       entry options(variable);
 10   134 dcl  gtss_ios_io_                               entry (fixed bin(24), ptr, ptr, fixed bin(24), fixed bin(24), fixed bin(35));
 10   135 dcl  gtss_ios_open_                             entry (fixed bin(24), char(168), char(32), bit(6), bit(1), ptr, ptr, fixed bin(35));
 10   136 dcl  gtss_ios_position_                         entry (fixed bin(24), fixed bin(24), fixed bin(24), bit(6), ptr);
 10   137 dcl  gtss_mcfc_$delete		        entry (fixed bin(24), char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
 10   138 dcl  gtss_mcfc_$open                            entry (char(*), char(*), bit(6), bit(36) aligned, ptr, fixed bin(35));
 10   139 dcl  gtss_mcfc_$close                           entry (char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
 10   140 dcl  gtss_read_starCFP_                         entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
 10   141 dcl  gtss_read_starCFP_$last_os                 entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
 10   142 dcl  gtss_run_subsystem_                        entry (fixed bin(24));
 10   143 dcl  gtss_run_subsystem_$finish                 entry options(variable);
 10   144 dcl  gtss_run_subsystem_$restor                 entry (fixed bin(24), ptr);
 10   145 dcl  gtss_run_subsystem_$restor_perm            entry (fixed bin(24), ptr, fixed bin(18));
 10   146 dcl  gtss_set_slave_                            entry (fixed bin (24), ptr);
 10   147 dcl  gtss_set_slave_$load_bar                   entry (fixed bin (17));
 10   148 dcl  gtss_update_safe_store_                    entry (ptr);
 10   149 dcl  gtss_verify_access_		        entry (char(*), char(*), fixed bin(24), bit(6), bit(12) aligned);
 10   150 dcl  gtss_verify_access_$check_forced_access    entry (char(*), char(*), fixed bin(24));
 10   151 dcl  gtss_write_starCFP_                        entry (ptr, ptr, fixed bin(21), fixed bin(35));
 10   152 /*   END INCLUDE FILE gtss_entry_dcls.incl.pl1 */
      449 
      450 
 11     1 /* BEGIN INCLUDE FILE gtss_install_values_.incl.pl1 */
 11     2 /*
 11     3*  NOTE: Changes here must be relected in gtss_install_values_.cds as well.
 11     4*
 11     5*  Created: (Wardd Multics)  01/24/79 1706.9 mst Wed 
 11     6*  Modified:  Ron Barstad  83-07-21  Moved inits to cds seg
 11     7**/
 11     8 
 11     9 dcl gtss_install_values_$fast_msf     char (32) var ext; /* entry name */
 11    10 dcl gtss_install_values_$Lstar_msf    char (32) var ext; /* searched second */
 11    11 dcl gtss_install_values_$starL_msf    char (32) var ext; /* searched first */
 11    12 dcl gtss_install_values_$memory_limit fixed bin (24) ext;
 11    13 dcl gtss_install_values_$time_limit   fixed bin (24) ext;
 11    14 
 11    15 /*   END INCLUDE FILE gtss_install_values_.incl.pl1 */
      451 
      452 
 12     1 /* BEGIN INCLUDE FILE gtss_ascii_file_names.incl.pl1 */
 12     2 /*
 12     3*  Created:  (Wardd Multics)  09/01/78 1447.3 mst Fri 
 12     4**/
 12     5 
 12     6 /**	First parameter to gtss_expand_pathname_
 12     7* **/
 12     8 dcl 1 ascii_cat_file,
 12     9     2 nn    fixed bin,	/* Number of names. */
 12    10     2 name  (7)char(12);	/* List of cat/filedescr name . */
 12    11 
 12    12 /*   END INCLUDE FILE gtss_ascii_file_names.incl.pl1 */
      453 
      454 
 13     1 /* BEGIN INCLUDE FILE gtss_file_values.incl.pl1 */
 13     2 /*
 13     3*  Created: (Wardd Multics)  09/01/78 1447.1 mst Fri 
 13     4**/
 13     5 
 13     6 /**	The gtss_file_values structure provides parameters to the
 13     7*	gtss_attributes_mgr_ subroutine.
 13     8*
 13     9*	The caller must provide space for this structure, fill in
 13    10*	the version with 1, the dname and ename with the file directory
 13    11*	and entry name, and for calls to gtss_attributes_mgr_$set,
 13    12*	fill in values to be reset and set the corresponding set_switch
 13    13*	to "1"b.
 13    14*
 13    15*	If the (Multics) file located is a directory
 13    16*	a GCOS catalog is implied.
 13    17*
 13    18*	If both ename and new_ename are set but no set_switch
 13    19*	is "1"b (and the set entry is called) this implies
 13    20*	that the existing attribute values are being renamed
 13    21*	to the new entry.
 13    22*
 13    23*	Then: call gtss_attributes_mgr_$set(addr(gtss_file_values),code);
 13    24*
 13    25*	Use of ename/new_ename combinations
 13    26*	for set entry.
 13    27*
 13    28*	-|-----------|-----------|-|-----------------|
 13    29*	|  ename   |new_ename ||    meaning     |
 13    30*	=|===========|===========|=|=================|
 13    31*	|  blanks  |  blanks  ||    illegal     |
 13    32*	-|-----------|-----------|-|-----------------|
 13    33*	|  blanks  |not blanks||    initial     |
 13    34*	|          |          ||    setting     |
 13    35*	-|-----------|-----------|-|-----------------|
 13    36*	|not blanks|  blanks  || check enames's |
 13    37*	|          |          ||attribute values|
 13    38*	|          |          ||   and reset.   |
 13    39*	-|-----------|-----------|-|-----------------|
 13    40*	|not blanks|not blanks|| delete ename's |
 13    41*	|          |          || values and put |
 13    42*	|          |          || on values for  |
 13    43*	|          |          ||  new_ename's   |
 13    44*	-|-----------|-----------|-|-----------------|
 13    45***/
 13    46 dcl  attr_name                (0:7)char(4)static int options(constant)init(
 13    47 			/* 0 */ "mode"
 13    48 ,			/* 1 */ "maxl"
 13    49 ,			/* 2 */ "curl"
 13    50 ,			/* 3 */ "busy"
 13    51 ,			/* 4 */ "attr"
 13    52 ,			/* 5 */ "null"
 13    53 ,			/* 6 */ "noal"
 13    54 ,			/* 7 */ "crdt"
 13    55 			);
 13    56 dcl 1 gtss_file_values	aligned automatic
 13    57 ,     3 version		fixed bin(17)	/* Current version is 1. (OUT) */
 13    58 ,     3 dname		char(168)unal	/* Directory name. (IN) */
 13    59 ,     3 ename		char(032)unal	/* Entry name. (IN) */
 13    60 ,     3 new_ename		char(032)unal	/* New entry name. (IN) */
 13    61 ,     3 change_name		bit(1)		/* "1"b => Change segment name. (IN) */
 13    62 ,     3 catalog		bit(1)		/* "1"b => File is a catalog (Multics directory). (OUT) */
 13    63 ,     3 info_ptr		ptr		/* hcs_$status_long (4. entry_ptr) info structure address. (OUT) */
 13    64 ,     3 set_switch				/* "1"b => Set corresponding value. (IN) */
 13    65 ,       4 mode_random	bit(01)unal	/* 0. Set the random/sequential(linked) field. */
 13    66 ,       4 maxll		bit(01)unal	/* 1. Set max size value. */
 13    67 ,       4 curll		bit(01)unal	/* 2. Set current size value. */
 13    68 ,       4 busy		bit(01)unal	/* 3. Set file as busy. */
 13    69 ,       4 attr		bit(01)unal	/* 4. Set user attributes value. */
 13    70 ,       4 null_file		bit(01)unal	/* 5. Set null file value. */
 13    71 ,       4 number_allocations	bit(01)unal	/* 6. Set or increment number of uses. */
 13    72 ,       4 creation_date	bit(01)unal	/* 7. Set file creation date. */
 13    73 ,       4 not_in_use	bit(28)unal
 13    74 			/* The above set_ variables should be declared in an order
 13    75*			   corresponding to the value in the attr_name array. */
 13    76 ,     3 data_flags				/* (OUT|IN) */
 13    77 ,       4 mode_random	bit(01)unal	/* "1"b => random. */
 13    78 ,       4 busy		bit(01)unal	/* "1"b => file is busy. */
 13    79 ,       4 null_file		bit(01)unal	/* "1"b => file is null. */
 13    80 ,       4 not_in_use2	bit(33)unal
 13    81 ,     3 data_fields				/* (OUT|IN) */
 13    82 ,       4 curll		fixed bin(35)	/* Current length in llinks (>=0). */
 13    83 ,       4 maxll		fixed bin(35)	/* Maximum length in llinks (>=0). */
 13    84 ,       4 number_allocations	fixed bin(35)	/* 0 => set | >0 => increment modulo 262144. */
 13    85 ,     3 attributes				/* (OUT|IN) */
 13    86 ,       4 not_in_use3	bit(01)unal
 13    87 ,       4 attr		bit(35)unal	/* User specified file attribute value. */
 13    88 ,     3 creation_date	char(06)		/* MMDDYY of creation. */
 13    89 ;
 13    90 
 13    91 
 13    92 /*   END INCLUDE FILE gtss_file_values.incl.pl1 */
      455 
      456 
 14     1 /* BEGIN INCLUDE FILE gtss_FMS_catalog.incl.pl1  */
 14     2 /*
 14     3*  Created: (Wardd Multics)  09/14/78 1813.7 mst Thu 
 14     4*  Change:	Paul Benjamin	10/12/79	Further break down FS0_PBK_05 
 14     5**/
 14     6 
 14     7 /**	The structure FMS_catalog1 is from
 14     8*	FMS PROGRAM LOGIC MANUAL
 14     9*	DC26, Rev. 0, January 1974
 14    10*	Page 4-9
 14    11***/
 14    12 dcl  FMS_cat_ptr              ptr init(null());
 14    13 dcl  1 FMS_catalog		aligned based(FMS_cat_ptr)
 14    14 ,     3 FSnTYP_0
 14    15 ,       4 bits00_05		bit(06)unal
 14    16 ,       4 bits06_10		bit(05)unal
 14    17 ,       4 bits11_17		bit(07)unal
 14    18 ,       4 bits18_35		bit(18)unal
 14    19 ,     3 FSnNLL_1
 14    20 ,       4 bits00_17		bit(18)unal
 14    21 ,       4 bits18_35		bit(18)unal
 14    22 ,     3 FSnPLL_2
 14    23 ,       4 bits00_17		bit(18)unal
 14    24 ,       4 bits18_35		bit(18)unal
 14    25 ,     3 FSnPTP_3
 14    26 ,       4 bits00_17		bit(18)unal
 14    27 ,       4 bits18_35		bit(18)unal
 14    28 ,     3 FSnCBK_4
 14    29 ,       4 bits00_17		bit(18)unal
 14    30 ,       4 bits18_35		bit(18)unal
 14    31 ;
 14    32 
 14    33 /**	Page 4-10.	**/
 14    34 dcl  1 Type_0_Catalog	aligned based(FMS_cat_ptr)
 14    35 ,     3 FS0_TYP_00		bit(36)
 14    36 ,     3 FS0_NLL_01
 14    37 ,       4 bits00_17		bit(18)unal
 14    38 ,       4 bits18_35		bit(18)unal
 14    39 ,     3 FS0_PLL_02		bit(36)
 14    40 ,     3 FS0_PTP_03
 14    41 ,       4 bits00_17		fixed bin(17)unal
 14    42 ,       4 bits18_35		bit(18)unal
 14    43 ,     3 FS0_CBK_04
 14    44 ,       4 bits00_17		fixed bin(17)unal
 14    45 ,       4 bits18_35		bit(18)unal
 14    46 ,     3 FS0_PBK_05
 14    47 ,       4 bits00_17		bit(18)unal
 14    48 ,       4 bits18_35		bit(18)unal
 14    49 ,     3 FS0_CNM_06_07	bit(72)
 14    50 ,     3 FS0_ORG_10_11	bit(72)
 14    51 ,     3 FS0_PWD_12_13	bit(72)
 14    52 ,     3 FS0_CDT_14		bit(36)
 14    53 ,     3 FS0_MOD_15		bit(36)
 14    54 ,     3 FS0_IND_16		bit(36)
 14    55 ,     3 FS0_PER_17
 14    56 ,       4 bits00_11		bit(12)unal
 14    57 ,       4 bits12_14		bit(03)unal
 14    58 ,       4 bit15		bit(01)unal
 14    59 ,       4 bit16		bit(01)unal
 14    60 ,       4 bit17		bit(01)unal
 14    61 ,       4 bits18_35		bit(18)unal
 14    62 ,     3 FS0_OP1_20		bit(36)
 14    63 ,     3 FS0_OP2_21		bit(36)
 14    64 ,     3 FS0_VAR_22_76	(15)
 14    65 ,       4 FS0_SNM_00_01	bit(72)
 14    66 ,       4 FS0_SPT_02
 14    67 ,         5 bit00		bit(01)unal
 14    68 ,         5 bit01		bit(01)unal
 14    69 ,         5 bits02_17	bit(16)unal
 14    70 ,         5 bits18_35	bit(18)unal
 14    71 ,     3 checksum_77		bit(36)
 14    72 ;
 14    73 
 14    74 /* Condensed form of type 0 record. */
 14    75 dcl 1 t0c			aligned based(FMS_cat_ptr)
 14    76 ,     2 fill		(0:17)bit(36)
 14    77 ,     2 name		(15)
 14    78 ,       3 bcd		bit(72)
 14    79 ,       3 more		bit(36)
 14    80 ;
 14    81 
 14    82 /**	Page 4-10.	**/
 14    83 dcl  Type_1_ptr               ptr init(null());
 14    84 dcl  1 Type_1_Catalog	aligned based(Type_1_ptr)
 14    85 ,     3 FS1_TYP_00		bit(36)
 14    86 ,     3 FS1_NLL_01
 14    87 ,       4 bits00_17		bit(18)unal
 14    88 ,       4 bits18_35		bit(18)unal
 14    89 ,     3 FS1_PLL_02		bit(36)
 14    90 ,     3 FS1_PTP_03
 14    91 ,       4 bits00_17		fixed bin(17)unal
 14    92 ,       4 bits18_35		bit(18)unal
 14    93 ,     3 FS1_CBK_04
 14    94 ,       4 bits00_17		bit(18)unal
 14    95 ,       4 bits18_35		bit(18)unal
 14    96 ,     3 FS1_OPN_05		bit(36)
 14    97 ,     3 FS1_VAR_06_76	(19)
 14    98 ,       4 FS1_SNM_00_01	bit(72)
 14    99 ,       4 FS1_SPT_02
 14   100 ,         5 bit00		bit(01)unal
 14   101 ,         5 bit01		bit(01)unal
 14   102 ,         5 bits02_17	bit(16)unal
 14   103 ,         5 bits18_35	bit(18)unal
 14   104 ,     3 checksum_77		bit(36)
 14   105 ;
 14   106 
 14   107 /* Condensed form of type 1 record. */
 14   108 dcl 1 t1c			aligned based(FMS_cat_ptr)
 14   109 ,     2 fill		(0:5)bit(36)
 14   110 ,     2 name		(19) like t0c.name
 14   111 ;
 14   112 
 14   113 /**	Page 4-11.	**/
 14   114 dcl  1 Type_2_Catalog	aligned based(FMS_cat_ptr)
 14   115 ,     3 FS2_TYP_00		bit(36)
 14   116 ,     3 FS2_NLL_01		bit(36)
 14   117 ,     3 FS2_PLL_02		bit(36)
 14   118 ,     3 FS2_PTP_03		bit(36)
 14   119 ,     3 FS2_CBK_04		bit(36)
 14   120 ,     3 FS2_PBK_05
 14   121 ,       4 bits00_17		bit(18)unal
 14   122 ,       4 bits18_35		bit(18)unal
 14   123 ,     3 FS2_FNM_06_07	bit(72)
 14   124 ,     3 FS2_ORG_10_11	bit(72)
 14   125 ,     3 FS2_PWD_12_13	bit(72)
 14   126 ,     3 FS2_CDT_14		bit(36)
 14   127 ,     3 FS2_MOD_15		bit(36)
 14   128 ,     3 FS2_IND_16		bit(36)
 14   129 ,     3 FS2_PER_17
 14   130 ,       4 bits00_11		bit(12)unal
 14   131 ,       4 bits12_15		bit(04)unal
 14   132 ,       4 bit16		bit(01)unal
 14   133 ,       4 bit17		bit(01)unal
 14   134 ,       4 bits18_35		bit(18)unal
 14   135 ,     3 FS2_MTR_20_21	bit(72)
 14   136 ,     3 FS2_FU1_22
 14   137 ,       4 bit00		bit(01)unal
 14   138 ,       4 bit01		bit(01)unal
 14   139 ,       4 bit02		bit(01)unal
 14   140 ,       4 bit03		bit(01)unal
 14   141 ,       4 bit04		bit(01)unal
 14   142 ,       4 bit05		bit(01)unal
 14   143 ,       4 bit06		bit(01)unal
 14   144 ,       4 bit07		bit(01)unal
 14   145 ,       4 bit08		bit(01)unal
 14   146 ,       4 bit09		bit(01)unal
 14   147 ,       4 bits10_11		bit(02)unal
 14   148 ,       4 bits12_17		bit(06)unal
 14   149 ,       4 bits18_35		bit(18)unal
 14   150 ,     3 FS2_FUS_23
 14   151 ,       4 bits00_17		bit(18)unal
 14   152 ,       4 bit18		bit(01)unal
 14   153 ,       4 bit19		bit(01)unal
 14   154 ,       4 bit20		bit(01)unal
 14   155 ,       4 bit21		bit(01)unal
 14   156 ,       4 bit22		bit(01)unal
 14   157 ,       4 bit23		bit(01)unal
 14   158 ,       4 bit24		bit(01)unal
 14   159 ,       4 bit25		bit(01)unal
 14   160 ,       4 bit26		bit(01)unal
 14   161 ,       4 bit27		bit(01)unal
 14   162 ,       4 bit28		bit(01)unal
 14   163 ,       4 bit29		bit(01)unal
 14   164 ,       4 bits30_35		bit(06)unal
 14   165 ,     3 FS2_USI_24
 14   166 ,       4 bit00		bit(01)unal
 14   167 ,       4 bits01_35		bit(35)unal
 14   168 ,     3 FS2_FU2_25
 14   169 ,       4 bit00		bit(01)unal
 14   170 ,       4 bit01		bit(01)unal
 14   171 ,       4 bit02		bit(01)unal
 14   172 ,       4 bit03		bit(01)unal
 14   173 ,       4 bit04		bit(01)unal
 14   174 ,       4 bit05		bit(01)unal
 14   175 ,       4 bit06		bit(01)unal
 14   176 ,       4 bit07		bit(01)unal
 14   177 ,       4 bit08		bit(01)unal
 14   178 ,       4 bit09		bit(01)unal
 14   179 ,       4 bit10		bit(01)unal
 14   180 ,       4 bit11		bit(01)unal
 14   181 ,       4 bit12		bit(01)unal
 14   182 ,       4 bit13		bit(01)unal
 14   183 ,       4 bit14		bit(01)unal
 14   184 ,       4 bit15		bit(01)unal
 14   185 ,       4 bit16		bit(01)unal
 14   186 ,       4 bit17		bit(01)unal
 14   187 ,       4 bits18_35		bit(18)unal
 14   188 ,     3 FS2_LCD_26		bit(36)
 14   189 ,     3 FS2_LAD_27		bit(36)
 14   190 ,     3 FS2_LST_30
 14   191 ,       4 bits00_05		bit(06)unal
 14   192 ,       4 bits06_35		bit(30)unal
 14   193 ,     3 FS2_ATB_31		bit(36)
 14   194 ,     3 FS2_PDF_32		bit(36)
 14   195 ,     3 FS2_STC_33		bit(36)
 14   196 ,     3 FS2_BSY_34		bit(36)
 14   197 ,     3 FS2_TBC_35		bit(36)
 14   198 ,     3 FS2_OP2_7_36_43	(2:7)bit(36)
 14   199 ,     3 FS2_VAR_44_75
 14   200 ,       4 Device_descriptor
 14   201 ,         5 bits00_03	bit(04)unal	/* 0101 */
 14   202 ,         5 bits04_05	bit(02)unal
 14   203 ,         5 bits06_35	bit(30)unal
 14   204 ,       4 Space_descriptor
 14   205 ,         5 bit00		bit(01)unal
 14   206 ,         5 bit01		bit(01)unal	/* =0 => space desc. */
 14   207 ,         5 bit02		bit(01)unal
 14   208 ,         5 bits03_17	bit(15)unal
 14   209 ,         5 bits18_35	bit(18)unal
 14   210 ,       4 zero		(24)bit(36)
 14   211 ,     3 zero_76		bit(36)
 14   212 ,     3 checksum_77		bit(36)
 14   213 ;
 14   214 
 14   215 /**	Page 4-13.	**/
 14   216 dcl  Type_4_ptr               ptr init(null());
 14   217 dcl  1 Type_4_Catalog	aligned based(Type_4_ptr)
 14   218 ,     3 FS4_TYP_00		bit(36)
 14   219 ,     3 FS4_NLL_01		bit(36)
 14   220 ,     3 FS4_PLL_02		bit(36)
 14   221 ,     3 FS4_PTP_03		bit(36)
 14   222 ,     3 FS4_CBK_04		bit(36)
 14   223 ,     3 FS4_OP1_2_05_06	bit(72)
 14   224 ,     3 FS4_VAR_07_75	bit(1980)	/* 1980 = 55 * 36bits @ */
 14   225 ,     3 zero		bit(36)
 14   226 ,     3 checksum_77		bit(36)
 14   227 ;
 14   228 
 14   229 /**	Page 2-69		**/
 14   230 dcl  buffer_ptr               ptr init(null());
 14   231 dcl 1 callers_buffer	aligned based(buffer_ptr)
 14   232 ,     3 first25		(25)bit(36)	/* Work area for  ???. */
 14   233 /**	Next 35 words. FMS work area.	**/
 14   234 ,     3 W00_FSCODE		bit(036)
 14   235 ,     3 W01_02_FSCALL	bit(072)
 14   236 ,     3 W03		bit(036)
 14   237 ,     3 W04_06		bit(108)
 14   238 ,     3 W07		bit(036)
 14   239 ,     3 W10		bit(036)
 14   240 ,     3 W11_12		bit(072)
 14   241 ,     3 W13_FSSSLV		bit(036)
 14   242 ,     3 W14_15		bit(072)
 14   243 ,     3 W16_FSFBSY		bit(036)
 14   244 ,     3 W17_FSRETP		bit(036)
 14   245 ,     3 W20
 14   246 ,       4 FSMME		unal
 14   247 ,         5 bits00_17	bit(18)unal
 14   248 ,       4 FSARG		unal
 14   249 ,         5 bits18_35	bit(18)unal
 14   250 ,     3 W21_FSCPOS
 14   251 ,       4 bits00_17		bit(18)unal
 14   252 ,       4 bits18_35		bit(18)unal
 14   253 ,     3 W22_FSCCFP
 14   254 ,       4 bits00_17		bit(18)unal
 14   255 ,       4 bits18_35		bit(18)unal
 14   256 ,     3 W23_FSPCFP
 14   257 ,       4 bits00_17		bit(18)unal
 14   258 ,       4 bits18_35		bit(18)unal
 14   259 ,     3 W24
 14   260 ,       4 FSREGU		unal
 14   261 ,         5 bits00_17	bit(18)unal
 14   262 ,       4 FSREGL		unal
 14   263 ,         5 bits18_35	bit(18)unal
 14   264 ,     3 W25_FSCDEV
 14   265 ,       4 bits00_15		bit(16)unal
 14   266 ,       4 bit16		bit(01)unal
 14   267 ,       4 bit17		bit(01)unal
 14   268 ,       4 bits18_35		bit(18)unal
 14   269 ,     3 W26_FSDDEV
 14   270 ,       4 bits00_15		bit(16)unal
 14   271 ,       4 bit16		bit(01)unal
 14   272 ,       4 bit17		bit(01)unal
 14   273 ,       4 bits18_35		bit(18)unal
 14   274 ,     3 W27_FSENDT		bit(036)
 14   275 ,     3 W30_FSCPAT		bit(036)
 14   276 ,     3 W31_FSPERM		bit(036)
 14   277 ,     3 W32_FSDDCW		bit(036)
 14   278 ,     3 W33_FSDCWP		bit(036)
 14   279 ,     3 W34_FSDUPD		bit(036)
 14   280 ,     3 W35_FSAVBL		bit(036)
 14   281 ,     3 W36_FSTEMP		bit(036)
 14   282 ,     3 W37_FSCKSM		bit(036)
 14   283 ,     3 W40_FSIOS1		bit(036)
 14   284 ,     3 W41_FSSRW1		bit(036)
 14   285 ,     3 W42_FSSRW2		bit(036)
 14   286 ,     3 W43_FSBFER		bit(036)	/* Starting location of buffer for catalog record(s). */
 14   287 ,     3 remainder_of_buffer	(319)bit(36)
 14   288 ;
 14   289 
 14   290 /*   END INCLUDE FILE gtss_FMS_catalog.incl.pl1 */
      457 
      458 
 15     1 
 15     2 declare						/* Information returned by hcs_$status_ and hcs_$status_long */
 15     3 
 15     4 
 15     5          1 branch aligned based (info_ptr),		/* information about this particular branch */
 15     6          2 type bit (2) unal,				/* "00"b = link, "01"b = segment, "10"b = directory */
 15     7          2 nnames bit (16) unal,			/* number of names this entry has */
 15     8          2 names_relp bit (18) unal,			/* pointer, relative to base of segment, to names */
 15     9          2 dtm bit (36) unal,				/* date-time the segment was last modified */
 15    10          2 dtu bit (36) unal,				/* date-time the segment was last used */
 15    11          2 mode bit (5) unal,				/* the user's access modes to the entry */
 15    12          2 padding bit (13) unal,			/* yawn */
 15    13          2 records_used bit (18) unal,			/* number of blocks actually occupied by entry */
 15    14 
 15    15 /* limit of information returned by status_ */
 15    16 
 15    17          2 dtd bit (36) unal,				/* date-time the segment was last dumped */
 15    18          2 dtbm bit (36) unal,			/* date-time the branch for the entry was modified */
 15    19          2 account bit (36) unal,			/* account to which storage is charged */
 15    20          2 current_length bit (12) unal,		/* maximum length in blocks */
 15    21          2 bit_count bit (24) unal,			/* length of entry in bits */
 15    22          2 device_id bit (4) unal,			/* device on which segment currently resides */
 15    23          2 mdid bit (4) unal,				/* device to which it is currently being moved */
 15    24          2 copy_switch bit (1) unal,			/* segment copy switch */
 15    25          2 tpd bit (1) unal,				/* transparent paging device switch */
 15    26          2 more_padding bit (8) unal,			/* yawn, yawn */
 15    27          2 ring_brackets (0:2) bit (6) unal,		/* ring brackets for entry */
 15    28          2 uid bit (36) unal,				/* unique identifier */
 15    29 
 15    30 
 15    31          1 link aligned based (info_ptr),		/* information about link entries */
 15    32          2 type bit (2) unal,				/* as above */
 15    33          2 nnames bit (16) unal,			/* number of names for this link */
 15    34          2 names_relp bit (18) unal,			/* as above */
 15    35          2 dtbm bit (36) unal,			/* date-time, entry for link was last modified */
 15    36          2 dtd bit (36) unal,				/* date-time dumped */
 15    37          2 pathname_length bit (18) unal,		/* length of link pathname */
 15    38          2 pathname_relp bit (18) unal,			/* pointer, relative to based of segment, to name */
 15    39 
 15    40          entry_names (1) character (32) aligned based (pointer (area_pointer, branch.names_relp)),
 15    41 						/* array of names returned */
 15    42          pathname character (fixed (link.pathname_length)) aligned based (pointer (area_pointer, link.pathname_relp)),
 15    43 						/* pathname a link points to */
 15    44 
 15    45          area_pointer pointer,			/* to area in which to allocate names */
 15    46          info_ptr pointer;				/* to structure returned */
 15    47 
 15    48 
      459 
      460 
 16     1 
 16     2      declare	/*  Structures used in acl manipulation.  - J.M. Broughton 07/27/73 */
 16     3 
 16     4 
 16     5 	1 segment_acl (acl_count) based (acl_ptr) aligned,
 16     6 	  2 access_name character (32),			/* process to which this entry applies */
 16     7 	  2 modes bit (36),					/* read, execute, and write */
 16     8 	  2 zero_pad bit (36),				/* for extended acl */
 16     9 	  2 status_code fixed bin(35),			/* standard error code for this entry only */
 16    10 
 16    11 
 16    12 	1 dir_acl (acl_count) based (acl_ptr) aligned,
 16    13 	  2 access_name character (32),			/* process to which entry applys */
 16    14 	  2 dir_modes bit (36),				/* status, modify, and append */
 16    15 	  2 status_code fixed bin(35),			/* as above */
 16    16 
 16    17 
 16    18 	acl_count fixed bin,				/* number of entries in these structures */
 16    19 	acl_ptr pointer;					/* pointer to these structures */
 16    20 
 16    21 
      461 
      462 
 17     1 /* BEGIN INCLUDE FILE gtss_filact_options.incl.pl1 */
 17     2 /*
 17     3*  Created: (Wardd Multics)  09/08/78 1017.4 mst Fri 
 17     4**/
 17     5 dcl  now			fixed bin;
 17     6 dcl  options_ptr		ptr init(null());
 17     7 dcl 1 optionsx		aligned based(options_ptr)
 17     8 ,     3 word1
 17     9 ,       4 option_bit	unal
 17    10 ,         5 j		bit(01)unal	/* Space must be contiguous. */
 17    11 ,         5 b		bit(01)unal	/* Random  (CF only). */
 17    12 ,         5 c		bit(01)unal	/* File TSS created (CF only) */
 17    13 ,         5 d		bit(01)unal	/* I-D-S file. */
 17    14 ,         5 k		bit(01)unal	/* 320-word blocks (CF only). */
 17    15 ,         5 f		bit(01)unal	/* File already on tape or nonstructured disk pack (non-TSS). */
 17    16 ,         5 bit_06		bit(01)unal	/* (not used). */
 17    17 ,         5 h		bit(01)unal	/* Attributes present. */
 17    18 ,         5 i		bit(01)unal	/* User-specified attributes (CF & MF only). */
 17    19 ,         5 bits09_12	bit(04)unal	/* (not used). */
 17    20 ,         5 y		bit(01)unal	/* FMS protection options specified. */
 17    21 ,         5 bits14_17	bit(04)unal	/* (not used). */
 17    22 ,       4 device_name	bit(12)unal
 17    23 ,       4 device_type	bit(06)unal
 17    24 ,     3 word2
 17    25 ,       4 initial_file_size	bit(18)unal	/* (CF only). */
 17    26 ,       4 max_file_size	bit(18)unal	/* 0 => max size unlimited. */
 17    27 ,     3 words3_now		(now)
 17    28 ,       4 optional_specific_permissions
 17    29 ,         5 USERID		bit(72)unal
 17    30 ,         5 permission_bit	like permissionsx
 17    31 ,     3 word_now_plus_1
 17    32 ,       4 end_of_list	fixed bin(35)
 17    33 ,     3 word_now_plus_2
 17    34 ,       4 fill		bit(01)unal
 17    35 ,       4 user_specified_attributes bit(35)unal	/* (CF & MF only). */
 17    36 ;
 17    37 
 18     1 /* BEGIN INCLUDE FILE gtss_filact_permissions.incl.pl1 */
 18     2 /*
 18     3*  Created: (Wardd Multics)  09/08/78 1018.0 mst Fri 
 18     4**/
 18     5 dcl  permissions_ptr	ptr init(null());
 18     6 dcl 1 permissionsx		aligned based(permissions_ptr)
 18     7 ,     3 r			bit(01)unal	/* Read permission. 	*/
 18     8 ,     3 w			bit(01)unal	/* Write permission. 	*/
 18     9 ,     3 a			bit(01)unal	/* Append permission. 	*/
 18    10 ,     3 e			bit(01)unal	/* Execute permission. 	*/
 18    11 ,     3 p			bit(01)unal	/* Purge permission. 	*/
 18    12 ,     3 m			bit(01)unal	/* Modify permission. 	*/
 18    13 ,     3 l			bit(01)unal	/* Lock permission. 	*/
 18    14 ,     3 bit_07		bit(01)unal	/* (not used). */
 18    15 ,     3 c			bit(01)unal	/* Create permission. 	*/
 18    16 ,     3 x			bit(01)unal	/* Recovery permission. 	*/
 18    17 ,     3 bits10_35		bit(26)unal	/* (not used). */
 18    18 ;
 18    19 
 18    20 /*   END INCLUDE FILE gtss_filact_permissions.incl.pl1 */
 17    38 
 17    39 
 17    40 /*   END INCLUDE FILE gtss_filact_options.incl.pl1 */
      463 
      464 
 19     1 /* BEGIN INCLUDE FILE gtss_db_names.incl.pl1 */
 19     2 /*
 19     3*  Created:  (Wardd Multics)  03/29/79 1909.1 mst Thu 
 19     4**/
 19     5 
 19     6 /* To provide a new debugging switch:
 19     7*
 19     8*   1) Locate the comment "Insert next entry above this comment".
 19     9*
 19    10*   2) Place a new declaration for a db_ variable just
 19    11*      above this comment, in the same manner as the
 19    12*      current declaration just above the comment, using
 19    13*      the next integer gtss_ext_$db index.
 19    14*
 19    15*   3) Execute the gtss|db_names ted macro (this updates
 19    16*      the sorted name table).
 19    17*
 19    18*   4) Example use:
 19    19*
 19    20*      if db_drl_grow then do;
 19    21*      .
 19    22*      .
 19    23*      .
 19    24*      debug i/o statements using com_err_ or ioa_
 19    25*      .
 19    26*      .
 19    27*      .
 19    28*      end;
 19    29*
 19    30**/
 19    31 
 19    32 dcl (
 19    33  db_		bit(1) defined(gtss_ext_$db(01))
 19    34 ,db_CFP_input	bit(1) defined(gtss_ext_$db(02))
 19    35 ,db_drl_addmem	bit(1) defined(gtss_ext_$db(03))
 19    36 ,db_drl_defil	bit(1) defined(gtss_ext_$db(04))
 19    37 ,db_drl_filact	bit(1) defined(gtss_ext_$db(05))
 19    38 ,db_drl_filsp	bit(1) defined(gtss_ext_$db(06))
 19    39 ,db_drl_grow	bit(1) defined(gtss_ext_$db(07))
 19    40 ,db_drl_rew	bit(1) defined(gtss_ext_$db(08))
 19    41 ,db_filact_funct02	bit(1) defined(gtss_ext_$db(09))
 19    42 ,db_filact_funct03	bit(1) defined(gtss_ext_$db(10))
 19    43 ,db_filact_funct04	bit(1) defined(gtss_ext_$db(11))
 19    44 ,db_filact_funct05	bit(1) defined(gtss_ext_$db(12))
 19    45 ,db_filact_funct10	bit(1) defined(gtss_ext_$db(13))
 19    46 ,db_filact_funct11	bit(1) defined(gtss_ext_$db(14))
 19    47 ,db_filact_funct14	bit(1) defined(gtss_ext_$db(15))
 19    48 ,db_filact_funct18	bit(1) defined(gtss_ext_$db(16))
 19    49 ,db_filact_funct19	bit(1) defined(gtss_ext_$db(17))
 19    50 ,db_filact_funct21	bit(1) defined(gtss_ext_$db(18))
 19    51 ,db_filact_funct22	bit(1) defined(gtss_ext_$db(19))
 19    52 ,db_interp_prim	bit(1) defined(gtss_ext_$db(20))
 19    53 ,db_ios		bit(1) defined(gtss_ext_$db(21))
 19    54 ,db_run_subsystem	bit(1) defined(gtss_ext_$db(22))
 19    55 ,db_drl_t_cfio	bit(1) defined(gtss_ext_$db(23))
 19    56 ,db_drl_switch	bit(1) defined(gtss_ext_$db(24))
 19    57 ,db_drl_dio	bit(1) defined(gtss_ext_$db(25))
 19    58 ,db_drl_retfil	bit(1) defined(gtss_ext_$db(26))
 19    59 ,db_drl_msub	bit(1) defined(gtss_ext_$db(27))
 19    60 ,db_drl_callss	bit(1) defined(gtss_ext_$db(28))
 19    61 ,db_drl_rstswh	bit(1) defined(gtss_ext_$db(29))
 19    62 ,db_drl_setswh	bit(1) defined(gtss_ext_$db(30))
 19    63 ,db_mcfc		bit(1) defined(gtss_ext_$db(31))
 19    64 ,db_dq		bit(1) defined(gtss_ext_$db(32))
 19    65 ,db_abs		bit(1) defined(gtss_ext_$db(33))
 19    66 ,db_attributes_mgr	bit(1) defined(gtss_ext_$db(34))
 19    67 ,db_expand_pathname bit(1) defined(gtss_ext_$db(35))
 19    68 ,db_drl_part	bit(1) defined(gtss_ext_$db(36))
 19    69 ,db_drl_morlnk	bit(1) defined(gtss_ext_$db(37))
 19    70 ,db_drl_kin	bit(1) defined(gtss_ext_$db(38))
 19    71 /* Insert next entry above this comment. */
 19    72 );
 19    73 
 19    74 /* Table of sorted names. */
 19    75 dcl 1 debug_bit_names (38) static int options(constant)
 19    76 ,     2 name char(18)var init(
 19    77          "" ,"CFP_input" ,"abs" ,"attributes_mgr" ,"dq" ,"drl_addmem"
 19    78          ,"drl_callss" ,"drl_defil" ,"drl_dio" ,"drl_filact" ,"drl_filsp"
 19    79          ,"drl_grow" ,"drl_kin" ,"drl_morlnk" ,"drl_msub" ,"drl_part"
 19    80          ,"drl_retfil" ,"drl_rew" ,"drl_rstswh" ,"drl_setswh" ,"drl_switch"
 19    81          ,"drl_t_cfio" ,"expand_pathname" ,"filact_funct02" ,"filact_funct03"
 19    82          ,"filact_funct04" ,"filact_funct05" ,"filact_funct10" ,"filact_funct11"
 19    83          ,"filact_funct14" ,"filact_funct18" ,"filact_funct19" ,"filact_funct21"
 19    84          ,"filact_funct22" ,"interp_prim" ,"ios" ,"mcfc" ,"run_subsystem"
 19    85 			)
 19    86 ,     2 value fixed bin init(
 19    87          01 ,02 ,33 ,34 ,32 ,03 ,28 ,04 ,25 ,05 ,06 ,07 ,38 ,37 ,27 ,36 ,26 ,08
 19    88          ,29 ,30 ,24 ,23 ,35 ,09 ,10 ,11 ,12 ,13 ,14 ,15 ,16 ,17 ,18 ,19 ,20 ,21
 19    89          ,31 ,22
 19    90 			);
 19    91 /* End of table. */
 19    92 /*   END INCLUDE FILE gtss_db_names.incl.pl1 */
      465 
      466      end						/* gtss_filact_funct05_ */;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/10/84  1044.0  gtss_filact_funct05_.pl1          >spec>on>7105>gtss_filact_funct05_.pl1
189          1    09/09/83  1713.8  gtss_filact_intp1.incl.pl1        >ldd>include>gtss_filact_intp1.incl.pl1
435          2    09/09/83  1714.2  gtss_tfa_ext_.incl.pl1            >ldd>include>gtss_tfa_ext_.incl.pl1
2-14         3    09/09/83  1714.0  gtss_file_attributes.incl.pl1     >ldd>include>gtss_file_attributes.incl.pl1
437          4    09/09/83  1713.2  gtss_dfd_ext_.incl.pl1            >ldd>include>gtss_dfd_ext_.incl.pl1
439          5    09/09/83  1714.3  gtss_ust_ext_.incl.pl1            >ldd>include>gtss_ust_ext_.incl.pl1
441          6    09/09/83  1713.8  gtss_ext_.incl.pl1                >ldd>include>gtss_ext_.incl.pl1
443          7    09/09/83  1713.3  gtss_filact_status.incl.pl1       >ldd>include>gtss_filact_status.incl.pl1
445          8    12/10/84  1029.8  gtss_pnterr.incl.pl1              >spec>on>7105>gtss_pnterr.incl.pl1
447          9    12/15/83  1100.4  mc.incl.pl1                       >ldd>include>mc.incl.pl1
449         10    12/10/84  1029.7  gtss_entry_dcls.incl.pl1          >spec>on>7105>gtss_entry_dcls.incl.pl1
451         11    09/09/83  1713.3  gtss_install_values_.incl.pl1     >ldd>include>gtss_install_values_.incl.pl1
453         12    09/09/83  1713.5  gtss_ascii_file_names.incl.pl1    >ldd>include>gtss_ascii_file_names.incl.pl1
455         13    09/09/83  1714.0  gtss_file_values.incl.pl1         >ldd>include>gtss_file_values.incl.pl1
457         14    09/09/83  1713.5  gtss_FMS_catalog.incl.pl1         >ldd>include>gtss_FMS_catalog.incl.pl1
459         15    04/29/76  1139.2  status_info.incl.pl1              >ldd>include>status_info.incl.pl1
461         16    02/13/75  1618.9  acls.incl.pl1                     >ldd>include>acls.incl.pl1
463         17    09/09/83  1713.9  gtss_filact_options.incl.pl1      >ldd>include>gtss_filact_options.incl.pl1
17-38       18    09/09/83  1713.9  gtss_filact_permissions.incl.pl1  >ldd>include>gtss_filact_permissions.incl.pl1
465         19    09/09/83  1713.6  gtss_db_names.incl.pl1            >ldd>include>gtss_db_names.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
FMS_block_ptr                   000204 automatic       pointer                  initial dcl 233 set ref 233*
FMS_cat_ptr                     000406 automatic       pointer                  initial dcl 14-12 set ref 14-12*
L_arglist                 0(18)        based           bit(18)                  level 2 packed unaligned dcl 1-24 ref 1-16 1-16
Type_1_ptr                      000410 automatic       pointer                  initial dcl 14-83 set ref 14-83*
Type_4_ptr                      000412 automatic       pointer                  initial dcl 14-216 set ref 14-216*
addr                                                   builtin function         dcl 198 ref 116 116 130 159 159
addrel                                                 builtin function         dcl 199 ref 54 61 1-20
aft_code                        000164 automatic       fixed bin(35,0)          dcl 200 set ref 99* 118* 144* 176*
altname_address                        based           bit(18)                  level 2 packed unaligned dcl 312 ref 59 61
altname_ptr                     000166 automatic       pointer                  initial dcl 203 set ref 61* 62 99 118 119 144 145
                                                                                  176 203*
arg_ptr                         000172 automatic       pointer                  initial dcl 206 set ref 42* 48 54 59 61 206* 1-16
                                                                                  1-16
arg_ptr_val                            parameter       pointer                  dcl 35 ref 14 42
arglist_address           0(18)        based           bit(18)                  level 2 packed unaligned dcl 312 ref 48 54
arglist_ptr                     000170 automatic       pointer                  initial dcl 205 set ref 54* 56 88 92 109 205*
ascii_name                             based           char(8)                  unaligned dcl 193 set ref 62* 99* 118* 119* 144*
                                                                                  145* 176*
attr                    105(01) 000276 automatic       bit(35)                  level 3 packed unaligned dcl 13-56 set ref 134
attribute_segment_ptr           000174 automatic       pointer                  initial dcl 207 set ref 207*
attributes              105     000276 automatic       structure                level 2 dcl 13-56
bit                                                    builtin function         dcl 208 ref 140
buffer_ptr                      000414 automatic       pointer                  initial dcl 14-230 set ref 43* 14-230*
buffer_ptr_val                         parameter       pointer                  dcl 36 ref 14 43
catalog                  74     000276 automatic       bit(1)                   level 2 dcl 13-56 set ref 117
change_name              73     000276 automatic       bit(1)                   level 2 dcl 13-56 set ref 111*
code                                   parameter       fixed bin(35,0)          dcl 37 set ref 14 45* 51* 62* 64 70 77* 82 83* 116*
                                                                                  117 155 155 155 159* 170* 184*
com_err_                        000022 constant        entry                    external dcl 10-8 ref 83 170
curll                   102     000276 automatic       fixed bin(35,0)          level 3 dcl 13-56 set ref 132 140
current_size              1            based           fixed bin(24,0)          level 2 dcl 3-11 set ref 132*
data_fields             102     000276 automatic       structure                level 2 dcl 13-56
data_flags              101     000276 automatic       structure                level 2 dcl 13-56
descriptor                3            based           structure                level 2 dcl 3-11
descriptor_ptr                  000176 automatic       pointer                  initial dcl 217 set ref 217*
device_type               3            based           bit(6)                   level 3 packed unaligned dcl 3-11 set ref 135*
dname                     1     000276 automatic       char(168)                level 2 packed unaligned dcl 13-56 set ref 112*
ename                    53     000276 automatic       char(32)                 level 2 packed unaligned dcl 13-56 set ref 113*
entry_name                      000200 automatic       char(12)                 initial unaligned dcl 220 set ref 220*
error_table_$namedup            000010 external static fixed bin(35,0)          dcl 223 ref 155
error_table_$segknown           000012 external static fixed bin(35,0)          dcl 227 ref 155
filact_args                            based           structure                level 1 dcl 312 in procedure "gtss_filact_funct05_"
filact_args                            based           structure                level 1 dcl 1-24 in procedure "validate_status"
file_code                 1(24)        based           bit(12)                  level 2 packed unaligned dcl 328 ref 88 92
file_no                         000203 automatic       fixed bin(24,0)          dcl 231 set ref 62* 99* 118* 130 144* 159* 176*
fixed                                                  builtin function         dcl 232 ref 40 48 140 1-16 1-16 1-16 1-16
gseg                            000206 automatic       pointer                  initial dcl 235 set ref 41* 54 61 235* 1-20
gseg_val                               parameter       pointer                  dcl 34 ref 14 41
gtss_abort_subsystem_           000024 constant        entry                    external dcl 10-15 ref 119 145
gtss_aft_$add                   000026 constant        entry                    external dcl 10-26 ref 62
gtss_aft_$delete                000030 constant        entry                    external dcl 10-27 ref 99 118 144 176
gtss_attributes_mgr_$get        000032 constant        entry                    external dcl 10-31 ref 116
gtss_ext_$drm_path              000020 external static char(168)                unaligned dcl 6-14 set ref 89* 94*
gtss_file_attributes                   based           structure                level 1 dcl 3-11
gtss_file_attributes_ptr        000272 automatic       pointer                  initial dcl 3-9 set ref 130* 131 132 133 134 135 136
                                                                                  137 138 139 140 159* 3-9*
gtss_file_values                000276 automatic       structure                level 1 dcl 13-56 set ref 116 116
gtss_install_values_$Lstar_msf  000036 external static varying char(32)         dcl 11-10 ref 90
gtss_install_values_$starL_msf  000040 external static varying char(32)         dcl 11-11 ref 95
gtss_ios_open_                  000034 constant        entry                    external dcl 10-135 ref 159
gtss_tfa_ext_$file_attributes   000016 external static structure                level 1 dcl 2-11
hcs_$fs_get_path_name           000014 constant        entry                    external dcl 244 ref 77
high_b                          000210 automatic       bit(18)                  dcl 249 set ref 39* 40 59 1-13
high_i                          000211 automatic       fixed bin(18,0)          dcl 250 set ref 40* 48
high_val                               parameter       bit(18)                  unaligned dcl 33 ref 14 39
installation_directory          000212 automatic       char(168)                unaligned dcl 253 set ref 77* 89 94
lib_arglist                            based           structure                level 1 dcl 328
lib_dir_name                    000100 automatic       char(168)                unaligned dcl 194 set ref 89* 94* 112 159*
lib_entry_name                  000152 automatic       char(32)                 unaligned dcl 195 set ref 90* 95* 104 113 159*
llink_flag                3(18)        based           bit(1)                   level 3 packed unaligned dcl 3-11 set ref 137*
max_size                               based           fixed bin(24,0)          level 2 dcl 3-11 set ref 131*
maxll                   103     000276 automatic       fixed bin(35,0)          level 3 dcl 13-56 set ref 131
mcp                             000274 automatic       pointer                  dcl 9-10 set ref 38* 119* 145*
mcp_val                                parameter       pointer                  dcl 32 ref 14 38
me_ptr                          000264 automatic       pointer                  initial dcl 262 set ref 76* 77* 262*
mode                      0(35)        based           bit(1)                   level 2 in structure "lib_arglist" packed unaligned
                                                                                  dcl 328 in procedure "gtss_filact_funct05_" ref
                                                                                  109
mode                      3(19)        based           bit(1)                   level 3 in structure "gtss_file_attributes" packed
                                                                                  unaligned dcl 3-11 in procedure
                                                                                  "gtss_filact_funct05_" set ref 138*
mode_random             101     000276 automatic       bit(1)                   level 3 packed unaligned dcl 13-56 set ref 138
name                     22            based           structure                array level 2 dcl 14-75
new_ename                63     000276 automatic       char(32)                 level 2 packed unaligned dcl 13-56 set ref 114*
non_null                  2            based           bit(1)                   level 3 packed unaligned dcl 3-11 set ref 133*
null_file               101(02) 000276 automatic       bit(1)                   level 3 packed unaligned dcl 13-56 set ref 133
options_ptr                     000416 automatic       pointer                  initial dcl 17-6 set ref 17-6*
p                               000162 automatic       pointer                  initial dcl 196 set ref 196*
perm                      3(20)        based           bit(1)                   level 3 packed unaligned dcl 3-11 set ref 139*
permissions_ptr                 000420 automatic       pointer                  initial dcl 18-5 set ref 18-5*
permissionsx                           based           structure                level 1 dcl 18-6
size                      3(22)        based           bit(14)                  level 3 packed unaligned dcl 3-11 set ref 140*
smc_entry_ptr                   000266 automatic       pointer                  initial dcl 279 set ref 279*
sp                                     parameter       pointer                  dcl 1-8 set ref 1-5 1-20*
status                                 based           bit(18)                  level 2 packed unaligned dcl 337 set ref 65* 71*
                                                                                  100* 106* 169 170*
status_address                         based           bit(18)                  level 2 in structure "lib_arglist" packed unaligned
                                                                                  dcl 328 in procedure "gtss_filact_funct05_" set
                                                                                  ref 56*
status_address                         parameter       bit(18)                  unaligned dcl 1-7 in procedure "validate_status" ref
                                                                                  1-5 1-13 1-16 1-16 1-20
status_pointer                  000430 automatic       pointer                  initial dcl 1-9 set ref 1-9* 1-20* 1-21
status_ptr                      000270 automatic       pointer                  initial dcl 283 set ref 56* 65 71 100 106 159 159
                                                                                  169 170 283*
status_word                            based           structure                level 1 dcl 337 set ref 159 159 1-21*
t0c                                    based           structure                level 1 dcl 14-75
temp_file                       000016 external static structure                array level 2 dcl 2-11 set ref 130
user_attr                 2(01)        based           bit(35)                  level 3 packed unaligned dcl 3-11 set ref 134*
user_attributes           2            based           structure                level 2 dcl 3-11
version                         000276 automatic       fixed bin(17,0)          level 2 dcl 13-56 set ref 110*
words_block               3(06)        based           bit(12)                  level 3 packed unaligned dcl 3-11 set ref 136*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
FMS_block                              based           structure                level 1 dcl 349
FMS_catalog                            based           structure                level 1 dcl 14-13
FMS_data_block                         based           structure                level 1 dcl 353
Type_0_Catalog                         based           structure                level 1 dcl 14-34
Type_1_Catalog                         based           structure                level 1 dcl 14-84
Type_2_Catalog                         based           structure                level 1 dcl 14-114
Type_4_Catalog                         based           structure                level 1 dcl 14-217
abx                                    internal static fixed bin(17,0)          initial dcl 9-42
access_mode                            automatic       bit(6)                   unaligned dcl 197
acl_count                              automatic       fixed bin(17,0)          dcl 16-2
acl_ptr                                automatic       pointer                  dcl 16-2
aft_name                               automatic       char(8)                  unaligned dcl 201
altname                                based           char(8)                  dcl 202
append_mode                            internal static bit(36)                  initial unaligned dcl 204
apx                                    internal static fixed bin(17,0)          initial dcl 9-42
area_pointer                           automatic       pointer                  dcl 15-2
arglist                                based           structure                level 1 dcl 319
ascii_cat_file                         automatic       structure                level 1 unaligned dcl 12-8
attr_name                              internal static char(4)                  initial array unaligned dcl 13-46
bbx                                    internal static fixed bin(17,0)          initial dcl 9-42
bcdname                                based           structure                level 1 dcl 307
bit_count                              automatic       fixed bin(24,0)          dcl 209
bpx                                    internal static fixed bin(17,0)          initial dcl 9-42
branch                                 based           structure                level 1 dcl 15-2
callers_buffer                         based           structure                level 1 dcl 14-231
cat_filedescr_name_offset              automatic       bit(18)                  unaligned dcl 210
cdate                                  automatic       fixed bin(71,0)          dcl 211
clim                                   automatic       float bin(27)            dcl 212
crf                                    automatic       fixed bin(24,0)          dcl 213
csp                                    automatic       float bin(27)            dcl 214
db_                                    defined         bit(1)                   unaligned dcl 19-32
db_CFP_input                           defined         bit(1)                   unaligned dcl 19-32
db_abs                                 defined         bit(1)                   unaligned dcl 19-32
db_attributes_mgr                      defined         bit(1)                   unaligned dcl 19-32
db_dq                                  defined         bit(1)                   unaligned dcl 19-32
db_drl_addmem                          defined         bit(1)                   unaligned dcl 19-32
db_drl_callss                          defined         bit(1)                   unaligned dcl 19-32
db_drl_defil                           defined         bit(1)                   unaligned dcl 19-32
db_drl_dio                             defined         bit(1)                   unaligned dcl 19-32
db_drl_filact                          defined         bit(1)                   unaligned dcl 19-32
db_drl_filsp                           defined         bit(1)                   unaligned dcl 19-32
db_drl_grow                            defined         bit(1)                   unaligned dcl 19-32
db_drl_kin                             defined         bit(1)                   unaligned dcl 19-32
db_drl_morlnk                          defined         bit(1)                   unaligned dcl 19-32
db_drl_msub                            defined         bit(1)                   unaligned dcl 19-32
db_drl_part                            defined         bit(1)                   unaligned dcl 19-32
db_drl_retfil                          defined         bit(1)                   unaligned dcl 19-32
db_drl_rew                             defined         bit(1)                   unaligned dcl 19-32
db_drl_rstswh                          defined         bit(1)                   unaligned dcl 19-32
db_drl_setswh                          defined         bit(1)                   unaligned dcl 19-32
db_drl_switch                          defined         bit(1)                   unaligned dcl 19-32
db_drl_t_cfio                          defined         bit(1)                   unaligned dcl 19-32
db_expand_pathname                     defined         bit(1)                   unaligned dcl 19-32
db_filact_funct02                      defined         bit(1)                   unaligned dcl 19-32
db_filact_funct03                      defined         bit(1)                   unaligned dcl 19-32
db_filact_funct04                      defined         bit(1)                   unaligned dcl 19-32
db_filact_funct05                      defined         bit(1)                   unaligned dcl 19-32
db_filact_funct10                      defined         bit(1)                   unaligned dcl 19-32
db_filact_funct11                      defined         bit(1)                   unaligned dcl 19-32
db_filact_funct14                      defined         bit(1)                   unaligned dcl 19-32
db_filact_funct18                      defined         bit(1)                   unaligned dcl 19-32
db_filact_funct19                      defined         bit(1)                   unaligned dcl 19-32
db_filact_funct21                      defined         bit(1)                   unaligned dcl 19-32
db_filact_funct22                      defined         bit(1)                   unaligned dcl 19-32
db_interp_prim                         defined         bit(1)                   unaligned dcl 19-32
db_ios                                 defined         bit(1)                   unaligned dcl 19-32
db_mcfc                                defined         bit(1)                   unaligned dcl 19-32
db_run_subsystem                       defined         bit(1)                   unaligned dcl 19-32
debug_bit_names                        internal static structure                array level 1 unaligned dcl 19-75
delete_$path                    000000 constant        entry                    external dcl 215
descriptor                             based           structure                array level 1 dcl 345
descriptor_address                     automatic       bit(18)                  unaligned dcl 216
dir_acl                                based           structure                array level 1 dcl 16-2
dir_name                               automatic       char(168)                unaligned dcl 218
divide                                                 builtin function         dcl 219
entry_names                            based           char(32)                 array dcl 15-2
error_table_$incorrect_access          external static fixed bin(35,0)          dcl 221
error_table_$moderr                    external static fixed bin(35,0)          dcl 222
error_table_$no_dir                    external static fixed bin(35,0)          dcl 225
error_table_$noentry                   external static fixed bin(35,0)          dcl 224
error_table_$nomatch                   external static fixed bin(35,0)          dcl 229
error_table_$not_seg_type              external static fixed bin(35,0)          dcl 226
error_table_$seg_not_found             external static fixed bin(35,0)          dcl 228
execute_mode                           internal static bit(36)                  initial unaligned dcl 230
four_NULS                              internal static char(4)                  initial unaligned dcl 234
gtss_CFP_abort_                 000000 constant        entry                    external dcl 10-9
gtss_CFP_break_                 000000 constant        entry                    external dcl 10-10
gtss_CFP_input_                 000000 constant        entry                    external dcl 10-11
gtss_CFP_output_                000000 constant        entry                    external dcl 10-12
gtss_abandon_CFP_               000000 constant        entry                    external dcl 10-13
gtss_abort_dump_                000000 constant        entry                    external dcl 10-14
gtss_abort_subsystem_$not_imp   000000 constant        entry                    external dcl 10-16
gtss_abs_$abs_equiv             000000 constant        entry                    external dcl 10-19
gtss_abs_$cpu_runout            000000 constant        entry                    external dcl 10-20
gtss_abs_$create_absin          000000 constant        entry                    external dcl 10-21
gtss_abs_$dabt_check            000000 constant        entry                    external dcl 10-22
gtss_abs_$get_drm               000000 constant        entry                    external dcl 10-24
gtss_abs_$get_id                000000 constant        entry                    external dcl 10-23
gtss_abs_login_banner_          000000 constant        entry                    external dcl 10-17
gtss_abs_logout_banner_         000000 constant        entry                    external dcl 10-18
gtss_adjust_size_               000000 constant        entry                    external dcl 10-25
gtss_aft_$find                  000000 constant        entry                    external dcl 10-28
gtss_aft_$initialize            000000 constant        entry                    external dcl 10-29
gtss_ascii_bcd_                 000000 constant        entry                    external dcl 10-30
gtss_attributes_mgr_$set        000000 constant        entry                    external dcl 10-32
gtss_bcd_ascii_                 000000 constant        entry                    external dcl 10-33
gtss_bcd_ascii_$lc              000000 constant        entry                    external dcl 10-34
gtss_break_vector_              000000 constant        entry                    external dcl 10-35
gtss_break_vector_$drl_in_progress
                                000000 constant        entry                    external dcl 10-36
gtss_break_vector_$status       000000 constant        entry                    external dcl 10-37
gtss_build_                     000000 constant        entry                    external dcl 10-38
gtss_com_err_                   000000 constant        entry                    external dcl 10-39
gtss_derail_processor_          000000 constant        entry                    external dcl 10-40
gtss_derail_processor_$set      000000 constant        entry                    external dcl 10-41
gtss_dfd_ext_$disk_file_data           external static structure                array level 1 dcl 4-6
gtss_dq_$catp                   000000 constant        entry                    external dcl 10-42
gtss_dq_$create                 000000 constant        entry                    external dcl 10-43
gtss_dq_$dibp                   000000 constant        entry                    external dcl 10-44
gtss_dq_$entries_info           000000 constant        entry                    external dcl 10-45
gtss_dq_$hdrp                   000000 constant        entry                    external dcl 10-46
gtss_dq_$mod_js                 000000 constant        entry                    external dcl 10-47
gtss_dq_$open_exc               000000 constant        entry                    external dcl 10-48
gtss_dq_$open_gen               000000 constant        entry                    external dcl 10-49
gtss_drl_abort_                 000000 constant        entry                    external dcl 10-50
gtss_drl_addmem_                000000 constant        entry                    external dcl 10-51
gtss_drl_callss_                000000 constant        entry                    external dcl 10-52
gtss_drl_corfil_                000000 constant        entry                    external dcl 10-53
gtss_drl_defil_                 000000 constant        entry                    external dcl 10-54
gtss_drl_defil_$subr            000000 constant        entry                    external dcl 10-55
gtss_drl_dio_                   000000 constant        entry                    external dcl 10-56
gtss_drl_drlimt_                000000 constant        entry                    external dcl 10-57
gtss_drl_drlsav_                000000 constant        entry                    external dcl 10-58
gtss_drl_filact_                000000 constant        entry                    external dcl 10-59
gtss_drl_filsp_                 000000 constant        entry                    external dcl 10-60
gtss_drl_grow_                  000000 constant        entry                    external dcl 10-61
gtss_drl_gwake_                 000000 constant        entry                    external dcl 10-62
gtss_drl_jsts_                  000000 constant        entry                    external dcl 10-63
gtss_drl_kin_                   000000 constant        entry                    external dcl 10-64
gtss_drl_kotnow_                000000 constant        entry                    external dcl 10-65
gtss_drl_kotnow_$gtss_drl_kout_ 000000 constant        entry                    external dcl 10-66
gtss_drl_koutn_                 000000 constant        entry                    external dcl 10-67
gtss_drl_morlnk_                000000 constant        entry                    external dcl 10-68
gtss_drl_msub_                  000000 constant        entry                    external dcl 10-69
gtss_drl_objtim_                000000 constant        entry                    external dcl 10-70
gtss_drl_part_                  000000 constant        entry                    external dcl 10-71
gtss_drl_pasaft_                000000 constant        entry                    external dcl 10-72
gtss_drl_pasdes_                000000 constant        entry                    external dcl 10-73
gtss_drl_pasust_                000000 constant        entry                    external dcl 10-74
gtss_drl_pdio_                  000000 constant        entry                    external dcl 10-75
gtss_drl_prgdes_                000000 constant        entry                    external dcl 10-76
gtss_drl_pseudo_                000000 constant        entry                    external dcl 10-77
gtss_drl_relmem_                000000 constant        entry                    external dcl 10-78
gtss_drl_restor_                000000 constant        entry                    external dcl 10-79
gtss_drl_retfil_                000000 constant        entry                    external dcl 10-80
gtss_drl_return_                000000 constant        entry                    external dcl 10-81
gtss_drl_rew_                   000000 constant        entry                    external dcl 10-82
gtss_drl_rstswh_                000000 constant        entry                    external dcl 10-83
gtss_drl_setlno_                000000 constant        entry                    external dcl 10-84
gtss_drl_setswh_                000000 constant        entry                    external dcl 10-85
gtss_drl_snumb_                 000000 constant        entry                    external dcl 10-86
gtss_drl_spawn_                 000000 constant        entry                    external dcl 10-87
gtss_drl_spawn_$gtss_drl_pasflr_
                                000000 constant        entry                    external dcl 10-88
gtss_drl_stoppt_                000000 constant        entry                    external dcl 10-89
gtss_drl_switch_                000000 constant        entry                    external dcl 10-90
gtss_drl_sysret_                000000 constant        entry                    external dcl 10-91
gtss_drl_t_cfio_                000000 constant        entry                    external dcl 10-92
gtss_drl_t_cmov_                000000 constant        entry                    external dcl 10-93
gtss_drl_t_err_                 000000 constant        entry                    external dcl 10-94
gtss_drl_t_goto_                000000 constant        entry                    external dcl 10-95
gtss_drl_t_linl_                000000 constant        entry                    external dcl 10-96
gtss_drl_t_rscc_                000000 constant        entry                    external dcl 10-97
gtss_drl_tapein_                000000 constant        entry                    external dcl 10-98
gtss_drl_task_                  000000 constant        entry                    external dcl 10-99
gtss_drl_termtp_                000000 constant        entry                    external dcl 10-100
gtss_drl_time_                  000000 constant        entry                    external dcl 10-101
gtss_drun_                      000000 constant        entry                    external dcl 10-102
gtss_dsd_lookup_                000000 constant        entry                    external dcl 10-103
gtss_dsd_process_               000000 constant        entry                    external dcl 10-104
gtss_edit_dsd_                  000000 constant        entry                    external dcl 10-105
gtss_expand_pathname_           000000 constant        entry                    external dcl 10-107
gtss_expand_pathname_$verify_umc
                                000000 constant        entry                    external dcl 10-108
gtss_ext_$CFP_bits                     external static structure                level 1 dcl 6-37
gtss_ext_$SYstarstar_file_no           external static fixed bin(24,0)          dcl 6-33
gtss_ext_$aem                          external static fixed bin(17,0)          dcl 6-8
gtss_ext_$aft                          external static structure                level 1 dcl 6-78
gtss_ext_$bad_drl_rtrn                 external static label variable           dcl 6-9
gtss_ext_$com_reg                      external static structure                level 1 dcl 6-45
gtss_ext_$db                           external static bit(1)                   array unaligned dcl 6-10
gtss_ext_$deferred_catalogs_ptr        external static pointer                  dcl 6-11
gtss_ext_$dispose_of_drl               external static label variable           dcl 6-12
gtss_ext_$drl_rtrn                     external static label variable           array dcl 6-13
gtss_ext_$drun_jid                     external static char(5)                  unaligned dcl 6-15
gtss_ext_$event_channel                external static fixed bin(71,0)          dcl 6-16
gtss_ext_$fast_lib                     external static structure                level 1 dcl 6-98
gtss_ext_$finished                     external static label variable           dcl 6-17
gtss_ext_$flags                        external static structure                level 1 dcl 6-60
gtss_ext_$gdb_name                     external static char(8)                  unaligned dcl 6-18
gtss_ext_$get_line                     external static entry variable           dcl 6-19
gtss_ext_$gtss_slave_area_seg          external static pointer                  array dcl 6-20
gtss_ext_$hcs_work_area_ptr            external static pointer                  dcl 6-21
gtss_ext_$homedir                      external static char(64)                 unaligned dcl 6-22
gtss_ext_$last_k_was_out               external static bit(1)                   dcl 6-23
gtss_ext_$mcfc                         external static structure                level 1 dcl 6-109
gtss_ext_$pdir                         external static varying char(168)        dcl 6-24
gtss_ext_$popup_from_pi                external static label variable           dcl 6-25
gtss_ext_$ppt                          external static pointer                  dcl 6-94
gtss_ext_$process_type                 external static fixed bin(17,0)          dcl 6-26
gtss_ext_$put_chars                    external static entry variable           dcl 6-27
gtss_ext_$restart_from_pi              external static label variable           dcl 6-28
gtss_ext_$restart_seg_ptr              external static pointer                  dcl 6-29
gtss_ext_$sig_ptr                      external static pointer                  dcl 6-30
gtss_ext_$stack_level_                 external static fixed bin(17,0)          dcl 6-31
gtss_ext_$statistics                   external static structure                level 1 dcl 6-72
gtss_ext_$suspended_process            external static bit(1)                   unaligned dcl 6-32
gtss_ext_$user_id                      external static varying char(26)         dcl 6-34
gtss_ext_$work_area_ptr                external static pointer                  dcl 6-35
gtss_fail                       000000 stack reference condition                dcl 236
gtss_fault_processor_           000000 constant        entry                    external dcl 10-109
gtss_fault_processor_$timer_runout
                                000000 constant        entry                    external dcl 10-111
gtss_filact_error_status_       000000 constant        entry                    external dcl 10-112
gtss_filact_funct02_            000000 constant        entry                    external dcl 10-113
gtss_filact_funct03_            000000 constant        entry                    external dcl 10-114
gtss_filact_funct04_            000000 constant        entry                    external dcl 10-115
gtss_filact_funct05_            000000 constant        entry                    external dcl 10-116
gtss_filact_funct08_            000000 constant        entry                    external dcl 10-117
gtss_filact_funct10_            000000 constant        entry                    external dcl 10-118
gtss_filact_funct11_            000000 constant        entry                    external dcl 10-119
gtss_filact_funct14_            000000 constant        entry                    external dcl 10-120
gtss_filact_funct18_            000000 constant        entry                    external dcl 10-121
gtss_filact_funct19_            000000 constant        entry                    external dcl 10-122
gtss_filact_funct21_            000000 constant        entry                    external dcl 10-123
gtss_filact_funct22_            000000 constant        entry                    external dcl 10-124
gtss_find_cond_frame_           000000 constant        entry                    external dcl 10-110
gtss_install_values_$fast_msf          external static varying char(32)         dcl 11-9
gtss_install_values_$memory_limit      external static fixed bin(24,0)          dcl 11-12
gtss_install_values_$time_limit        external static fixed bin(24,0)          dcl 11-13
gtss_interp_prim_               000000 constant        entry                    external dcl 10-126
gtss_interp_prim_$callss        000000 constant        entry                    external dcl 10-127
gtss_interp_prim_$sysret        000000 constant        entry                    external dcl 10-128
gtss_interp_prim_$t_goto        000000 constant        entry                    external dcl 10-129
gtss_ios_change_size_           000000 constant        entry                    external dcl 10-130
gtss_ios_close_                 000000 constant        entry                    external dcl 10-131
gtss_ios_exchange_names_        000000 constant        entry                    external dcl 10-132
gtss_ios_initialize_            000000 constant        entry                    external dcl 10-133
gtss_ios_io_                    000000 constant        entry                    external dcl 10-134
gtss_ios_position_              000000 constant        entry                    external dcl 10-136
gtss_mcfc_$close                000000 constant        entry                    external dcl 10-139
gtss_mcfc_$delete               000000 constant        entry                    external dcl 10-137
gtss_mcfc_$open                 000000 constant        entry                    external dcl 10-138
gtss_mcfc_empty                 000000 constant        entry                    external dcl 10-106
gtss_mcfc_init_                 000000 constant        entry                    external dcl 10-125
gtss_pnterr                            internal static structure                level 1 packed unaligned dcl 8-9
gtss_read_starCFP_              000000 constant        entry                    external dcl 10-140
gtss_read_starCFP_$last_os      000000 constant        entry                    external dcl 10-141
gtss_run_subsystem_             000000 constant        entry                    external dcl 10-142
gtss_run_subsystem_$finish      000000 constant        entry                    external dcl 10-143
gtss_run_subsystem_$restor      000000 constant        entry                    external dcl 10-144
gtss_run_subsystem_$restor_perm 000000 constant        entry                    external dcl 10-145
gtss_set_slave_                 000000 constant        entry                    external dcl 10-146
gtss_set_slave_$load_bar        000000 constant        entry                    external dcl 10-147
gtss_update_safe_store_         000000 constant        entry                    external dcl 10-148
gtss_ust_ext_$ust                      external static structure                level 1 dcl 5-16
gtss_verify_access_             000000 constant        entry                    external dcl 10-149
gtss_verify_access_$check_forced_access
                                000000 constant        entry                    external dcl 10-150
gtss_write_starCFP_             000000 constant        entry                    external dcl 10-151
have_file                              automatic       bit(1)                   unaligned dcl 237
hbound                                                 builtin function         dcl 238
hcs_$add_acl_entries            000000 constant        entry                    external dcl 239
hcs_$add_dir_acl_entries        000000 constant        entry                    external dcl 240
hcs_$add_inacl_entries          000000 constant        entry                    external dcl 241
hcs_$append_branchx             000000 constant        entry                    external dcl 242
hcs_$delentry_file              000000 constant        entry                    external dcl 243
hcs_$initiate                   000000 constant        entry                    external dcl 245
hcs_$make_seg                   000000 constant        entry                    external dcl 246
hcs_$quota_read                 000000 constant        entry                    external dcl 247
hcs_$status_long                000000 constant        entry                    external dcl 248
i                                      automatic       fixed bin(24,0)          dcl 251
increment                              automatic       fixed bin(24,0)          dcl 252
info_ptr                               automatic       pointer                  dcl 15-2
ioa_                            000000 constant        entry                    external dcl 254
k                                      automatic       fixed bin(24,0)          dcl 255
l                                      automatic       fixed bin(24,0)          dcl 256
lbound                                                 builtin function         dcl 257
lbx                                    internal static fixed bin(17,0)          initial dcl 9-42
link                                   based           structure                level 1 dcl 15-2
low_b                                  internal static bit(18)                  initial dcl 258
low_i                                  internal static fixed bin(18,0)          initial dcl 259
lpx                                    internal static fixed bin(17,0)          initial dcl 9-42
max_options                            internal static fixed bin(17,0)          initial dcl 260
max_resources                          internal static fixed bin(17,0)          initial dcl 261
mc                                     based           structure                level 1 dcl 9-12
minus_one                              internal static bit(36)                  initial unaligned dcl 263
mlim                                   automatic       float bin(27)            dcl 264
mod                                                    builtin function         dcl 265
modify_mode                            internal static bit(36)                  initial unaligned dcl 266
msp                                    automatic       float bin(27)            dcl 267
multics_access_mode                    automatic       fixed bin(5,0)           dcl 268
now                                    automatic       fixed bin(17,0)          dcl 17-5
options                                based           structure                level 1 dcl 378
optionsx                               based           structure                level 1 dcl 17-7
path_name                              automatic       varying char(168)        dcl 269
pathname                               based           char                     dcl 15-2
permissions                            based           structure                level 1 dcl 360
person_id                              automatic       char(22)                 unaligned dcl 270
quota                                  automatic       fixed bin(18,0)          dcl 271
read_mode                              internal static bit(36)                  initial unaligned dcl 272
rel                                                    builtin function         dcl 273
rings                                  internal static fixed bin(3,0)           initial array dcl 274
sbx                                    internal static fixed bin(17,0)          initial dcl 9-42
scu                                    based           structure                level 1 dcl 9-56
scup                                   automatic       pointer                  dcl 9-54
scux                                   based           structure                level 1 dcl 9-207
seg_acl_count                          automatic       fixed bin(17,0)          dcl 275
segment_acl                            based           structure                array level 1 dcl 16-2
shlim                                  automatic       float bin(27)            array dcl 276
shsp                                   automatic       float bin(27)            array dcl 277
size                                                   builtin function         dcl 278
smc_arglist                            based           structure                level 1 dcl 408
smc_entry                              based           structure                level 1 dcl 415
sons_lvid                              automatic       bit(36)                  unaligned dcl 280
spx                                    internal static fixed bin(17,0)          initial dcl 9-42
status                                 automatic       fixed bin(24,0)          dcl 281
status2                                based           structure                level 1 dcl 297
status_mode                            internal static bit(36)                  initial unaligned dcl 282
substr                                                 builtin function         dcl 284
switches                               internal static bit(6)                   initial unaligned dcl 285
t1c                                    based           structure                level 1 dcl 14-108
tacc_sw                                automatic       fixed bin(1,0)           dcl 286
trp                                    automatic       fixed bin(71,0)          dcl 287
tup                                    automatic       bit(36)                  dcl 288
two_words                              based           bit(72)                  unaligned dcl 289
type                                   automatic       fixed bin(2,0)           dcl 290
used                                   automatic       fixed bin(18,0)          dcl 291
user_attribute_word                    automatic       bit(35)                  unaligned dcl 292
user_info_$limits               000000 constant        entry                    external dcl 293
words380                               based           bit(13680)               dcl 294
write_mode                             internal static bit(36)                  initial unaligned dcl 295

NAMES DECLARED BY EXPLICIT CONTEXT.
dummy_label                     000274 constant        label                    dcl 75 set ref 76
gtss_filact_funct05_            000122 constant        entry                    external dcl 14
no_lib_available                000437 constant        label                    dcl 98 ref 85 104 155
ret                             000264 constant        label                    dcl 66 ref 72 101 126 152 181 185
return_err4                     000212 constant        label                    dcl 50 ref 59 1-13 1-16
validate_status                 001057 constant        entry                    internal dcl 1-5 ref 56

NAMES DECLARED BY CONTEXT OR IMPLICATION.
codeptr                                                builtin function         ref 76
null                                                   builtin function         ref 196 203 205 206 207 217 233 235 262 279 283 3-9
                                                                                  14-12 14-83 14-216 14-230 17-6 18-5 1-9
unspec                                                 builtin function         ref 1-21

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1326        1370    1124        1336
Length      2164    1124        42         560     202           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gtss_filact_funct05_                378 external procedure  is an external procedure.  
validate_status                         internal procedure  shares stack frame of external procedure gtss_filact_funct05_.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gtss_filact_funct05_     000100 lib_dir_name                gtss_filact_funct05_
                         000152 lib_entry_name              gtss_filact_funct05_
                         000162 p                           gtss_filact_funct05_
                         000164 aft_code                    gtss_filact_funct05_
                         000166 altname_ptr                 gtss_filact_funct05_
                         000170 arglist_ptr                 gtss_filact_funct05_
                         000172 arg_ptr                     gtss_filact_funct05_
                         000174 attribute_segment_ptr       gtss_filact_funct05_
                         000176 descriptor_ptr              gtss_filact_funct05_
                         000200 entry_name                  gtss_filact_funct05_
                         000203 file_no                     gtss_filact_funct05_
                         000204 FMS_block_ptr               gtss_filact_funct05_
                         000206 gseg                        gtss_filact_funct05_
                         000210 high_b                      gtss_filact_funct05_
                         000211 high_i                      gtss_filact_funct05_
                         000212 installation_directory      gtss_filact_funct05_
                         000264 me_ptr                      gtss_filact_funct05_
                         000266 smc_entry_ptr               gtss_filact_funct05_
                         000270 status_ptr                  gtss_filact_funct05_
                         000272 gtss_file_attributes_ptr    gtss_filact_funct05_
                         000274 mcp                         gtss_filact_funct05_
                         000276 gtss_file_values            gtss_filact_funct05_
                         000406 FMS_cat_ptr                 gtss_filact_funct05_
                         000410 Type_1_ptr                  gtss_filact_funct05_
                         000412 Type_4_ptr                  gtss_filact_funct05_
                         000414 buffer_ptr                  gtss_filact_funct05_
                         000416 options_ptr                 gtss_filact_funct05_
                         000420 permissions_ptr             gtss_filact_funct05_
                         000430 status_pointer              validate_status

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      gtss_abort_subsystem_         gtss_aft_$add                 gtss_aft_$delete
gtss_attributes_mgr_$get      gtss_ios_open_                hcs_$fs_get_path_name

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$namedup          error_table_$segknown         gtss_ext_$drm_path
gtss_install_values_$Lstar_msf                              gtss_install_values_$starL_msf
gtss_tfa_ext_$file_attributes




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     14 000114       196 000127       203 000131       205 000132       206 000133       207 000134       217 000135
    220 000136       233 000141       235 000142       262 000143       279 000144       283 000145    3    9 000146
14   12 000147   14   83 000150   14  216 000151   14  230 000152   17    6 000153   18    5 000154        38 000155
     39 000161        40 000166        41 000171        42 000174        43 000177        45 000202        48 000203
     50 000212        51 000213        52 000216        54 000217        56 000223        59 000232        61 000237
     62 000242        64 000255        65 000261        66 000264        67 000265        70 000266        71 000270
     72 000273        75 000274        76 000275        77 000277        82 000332        83 000335        85 000364
     88 000365        89 000373        90 000406        91 000413        92 000414        94 000416        95 000431
     96 000436        98 000437        99 000440       100 000453       101 000456       104 000457       106 000463
    109 000466       110 000471       111 000473       112 000474       113 000477       114 000502       116 000505
    117 000517       118 000524       119 000537       126 000603       130 000604       131 000612       132 000614
    133 000616       134 000625       135 000631       136 000633       137 000635       138 000637       139 000644
    140 000646       142 000655       144 000656       145 000670       152 000734       155 000735       159 000743
    169 000775       170 001001       176 001040       181 001053       184 001054       185 001056    1    5 001057
 1    9 001061    1   13 001063    1   16 001070    1   20 001110    1   21 001116    1   22 001121


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
