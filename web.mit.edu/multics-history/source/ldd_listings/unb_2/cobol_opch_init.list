ASSEMBLY LISTING OF SEGMENT >spec>on>11/11/82>cobol_opch_init.alm             
ASSEMBLED ON:	11/11/82  1044.3 mst Thu
OPTIONS USED:	list 
ASSEMBLED BY:	ALM Version  6.4  April 1981    
ASSEMBLER CREATED:	11/03/82  1423.6 mst Wed

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Information Systems Inc., 1982 *
                                     4  " *                                                         *
                                     5  " * Copyright (c) 1972 by Massachusetts Institute of        *
                                     6  " * Technology and Honeywell Information Systems, Inc.      *
                                     7  " *                                                         *
                                     8  " ***********************************************************
                                     9  
                                    10  "	Modified on 8/24/76 by Bob Chang to fix the bug for damaged pr7 after call. */
                                    11  " This alm procedure is an interface between a PL1 procedure
                                    12  " and the cobol overpunch operator cobol_opch_operator_.  This alm
                                    13  " procedure is declared in any calling procedure by a declaration
                                    14  " of the form:
                                    15  " 
                                    16  " dcl cobol_opch_init ext entry (ptr,ptr,bit(36),bit(36),
                                    17  " fixed bin(35),fixed bin(35));
                                    18  " 
                                    19  " The parameters are, respectively
                                    20  "  1. pointer to the source of conversion.
                                    21  "  2. pointer to the target of conversion
                                    22  "  3. scale and precision of the source.
                                    23  "  4. scale and precision of the target.
                                    24  "  5. type code of the source.
                                    25  "  6. type code of the target.
                                    26  " 
                                    27  " This alm procedure unloads the argument list passed by the calling
                                    28  " procedure, and loads the arguments into the registers in which
                                    29  " they are required by cobol_opch_operator_.  For a description of
                                    30  " the input requirements of cobol_opch_operator_, see the documentation
                                    31  " in the listing for that alm procedure.
                                    32  
    000000                          33  	segref	cobol_opch_operator_,cobol_opch_operator_
                                    34  
                        000000      35  	equ	arg_pr,0
                        000005      36  	equ	work_pr,5
                        000002      37  	equ	source_pr,2
                        000001      38  	equ	target_pr,1
                        000003      39  	equ	return_pr,3
                                    40  
                                    41  	tempd	work_space(40)  	some work space aligned on an even word
                                    42  	temp	temp_space(2)
                                    43  "				boundary
                                    44  
                        000000      45  	entry	cobol_opch_init
                                    46  
    000000                          47  cobol_opch_init:
                                    48  
    000000  aa   000200 6270 00     49  	push
    000001  aa  7 00040 2721 20
                                    50  
    000002  aa  0 00002 3521 20     51  	epp	source_pr,arg_pr|2,*
    000003  aa  6 00170 6535 00     52  	spri7	temp_space
    000004  aa  2 00000 3521 20     53  	epp	source_pr,source_pr|0,*     load pointer to source into pr2
    000005  aa  0 00004 3515 20     54  	epp	target_pr,arg_pr|4,*
    000006  aa  1 00000 3515 20     55  	epp	target_pr,target_pr|0,*     load pointer to target into 1
    000007  aa  0 00006 2361 20     56  	ldq	arg_pr|6,*     load source scale into Q reg
    000010  aa  0 00010 2351 20     57  	lda	arg_pr|8,*     load target scale into A reg
    000011  aa  0 00012 7271 20     58  	lxl7	arg_pr|10,*     load type code of source
    000012  aa  0 00014 7261 20     59  	lxl6	arg_pr|12,*     load type code of target
                                    60  
    000013  aa  6 00050 3715 00     61  	epp	work_pr,work_space     load a pointer to some work space in
                                    62  "					  this procedure's stack
                                    63  
    000014  4a  4 00010 2731 20     64  	tsp	return_pr,cobol_opch_operator_     call cobol_opch_operator_
                                    65  
    000015  aa  6 00170 3735 20     66  	epp7	temp_space,*
    000016  aa  7 00042 7101 20     67  	return	return to calling procedure
                                    68  
                                    69  	end
ENTRY SEQUENCES
     
    000017  5a   000012 0000 00
    000020  aa  7 00046 2721 20
    000021  0a   000000 7100 00

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    000022  5a   000003 000000 
    000023  5a   000030 600000 
    000024  aa   000000 000000 
    000025  55   000012 000002 
    000026  5a   000002 400003 
    000027  55   000006 000012 
    000030  aa  017 143 157 142
    000031  aa  157 154 137 157
    000032  aa  160 143 150 137
    000033  aa  151 156 151 164
    000034  55   000021 000003 
    000035  0a   000020 500000 
    000036  55   000015 000003 
    000037  aa  017 143 157 142         cobol_opch_init
    000040  aa  157 154 137 157
    000041  aa  160 143 150 137
    000042  aa  151 156 151 164
    000043  55   000002 000012 
    000044  6a   000000 400002 
    000045  55   000024 000003 
    000046  aa  014 163 171 155         symbol_table
    000047  aa  142 157 154 137
    000050  aa  164 141 142 154
    000051  aa  145 000 000 000

DEFINITIONS HASH TABLE

    000052  aa   000000 000015 
    000053  aa   000000 000000 
    000054  aa   000000 000000 
    000055  aa   000000 000000 
    000056  aa   000000 000000 
    000057  aa   000000 000000 
    000060  aa   000000 000000 
    000061  5a   000021 000000 
    000062  aa   000000 000000 
    000063  aa   000000 000000 
    000064  aa   000000 000000 
    000065  aa   000000 000000 
    000066  5a   000012 000000 
    000067  aa   000000 000000 

EXTERNAL NAMES

    000070  aa  024 143 157 142         cobol_opch_operator_
    000071  aa  157 154 137 157
    000072  aa  160 143 150 137
    000073  aa  157 160 145 162
    000074  aa  141 164 157 162
    000075  aa  137 000 000 000

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    000076  aa   000004 000000 
    000077  55   000046 000046 
    000100  aa   000001 000000 
    000101  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    000102  5a   000054 000000 
    000103  aa   000000 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   000022 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000012 
    000007  a2   000000 000000 
    000010  9a   777770 0000 46         cobol_opch_operator_|cobol_opch_operator_
    000011  5a   000060 0000 00
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000004 
    000004  aa   000000 111316 
    000005  aa   510113 575622 
    000006  aa   000000 111330 
    000007  aa   403756 743615 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000122 
    000020  aa   000000 000104 
    000021  aa   000000 000110 
    000022  aa   000114 000104 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   040066 056064 
    000030  aa   040040 101160 
    000031  aa   162151 154040 
    000032  aa   061071 070061 
    000033  aa   040040 040040 
    000034  aa   110157 154155 
    000035  aa   163164 145144 
    000036  aa   164056 123171 
    000037  aa   163115 141151 
    000040  aa   156164 056155 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   154151 163164 
    000045  aa   040040 040040 
    000046  aa   040040 040040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040040 040040 
    000057  aa   040040 040040 
    000060  aa   040040 040040 
    000061  aa   040040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000001 
    000066  aa   000072 000045 
    000067  aa   113225 115004 
    000070  aa   000000 111330 
    000071  aa   375663 600000 
    000072  aa   076163 160145          >spec>on>11/11/82>cobol_opch_init.alm
    000073  aa   143076 157156 
    000074  aa   076061 061057 
    000075  aa   061061 057070 
    000076  aa   062076 143157 
    000077  aa   142157 154137 
    000100  aa   157160 143150 
    000101  aa   137151 156151 
    000102  aa   164056 141154 
    000103  aa   155040 040040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

           0    arg_pr                   cobol_opch_init:     35,   51,   54,   56,   57,   58,   59.
           0    cobol_opch_init          cobol_opch_init:     45,   47.
                cobol_opch_operator_     cobol_opch_init:     33,   64.
           3    return_pr                cobol_opch_init:     39,   64.
           2    source_pr                cobol_opch_init:     37,   51,   53.
           1    target_pr                cobol_opch_init:     38,   54,   55.
         170    temp_space               cobol_opch_init:     42,   52,   66.
           5    work_pr                  cobol_opch_init:     36,   61.
          50    work_space               cobol_opch_init:     41,   61.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
