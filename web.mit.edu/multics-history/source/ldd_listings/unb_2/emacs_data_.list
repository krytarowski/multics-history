	COMPILATION LISTING OF SEGMENT !BBBJXclQJZkhXc
	Compiled by: Multics PL/I Compiler, Release 30, of February 16, 1988
	Compiled at: Honeywell Bull, Phoenix AZ, SysM
	Compiled on: 08/01/88  0954.2 mst Mon
	    Options: table map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Bull Inc., 1988                *
        4*   *                                                         *
        5*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*   *                                                         *
        7*   * Copyright (c) 1981 by Massachusetts Institute of        *
        8*   * Technology and Honeywell Information Systems, Inc.      *
        9*   *                                                         *
       10*   *********************************************************** */
       11 /* format: style3 */
       12 
       13 /* emacs_data_: Emacs static data. */
       14 
       15 
       16 /* HISTORY COMMENTS:
       17*  1) change(81-07-07,Soley), approve(), audit(), install():
       18*     Written.
       19*  2) change(81-07-22,Soley), approve(), audit(), install():
       20*     add argument flags.
       21*  3) change(82-04-12,Soley), approve(), audit(), install():
       22*     help punt site-dir.
       23*  4) change(86-02-24,Margolin), approve(86-02-24,MCR7325),
       24*     audit(86-08-12,Harvey), install(86-08-20,MR12.0-1136):
       25*     Changed version to 12.6.
       26*  5) change(86-09-20,Margolin), approve(86-10-10,MCR7553),
       27*     audit(86-10-17,Lippard), install(86-11-11,MR12.0-1209):
       28*     Changed version to 12.6e.
       29*  6) change(87-01-30,Margolin), approve(87-01-30,MCR7607),
       30*     audit(87-02-13,RBarstad), install(87-03-25,MR12.1-1014):
       31*     Changed version to 12.7.
       32*  7) change(88-01-19,Schroth), approve(88-02-29,MCR7852),
       33*     audit(88-06-06,RBarstad), install(88-08-01,MR12.2-1071):
       34*     Changed version to 12.9.
       35*                                                   END HISTORY COMMENTS */
       36 
       37 
       38 emacs_data_:
       39      procedure ();
       40 
       41 /* Automatic */
       42 declare	code		fixed binary (35);
       43 declare	me		character (32) initial ("emacs_data_");
       44 declare	1 cdsa		aligned like cds_args;
       45 
       46 /* Builtin */
       47 declare	(addr, null, size, unspec)
       48 			builtin;
       49 
       50 /* Entries */
       51 declare	com_err_		entry options (variable);
       52 declare	create_data_segment_
       53 			entry (pointer, fixed binary (35));
       54 
       55 /* Include Files */
  1     1 /* BEGIN INCLUDE FILE cds_args.incl.pl1 */
  1     2 
  1     3 dcl 1 cds_args based aligned,
  1     4     2 sections (2),
  1     5       3 p ptr,					/* pointer to data for text/static section */
  1     6       3 len fixed bin (18),				/* size of text/static section */
  1     7       3 struct_name char (32),			/* name of declared structure for this section */
  1     8     2 seg_name char (32),				/* name to create segment by */
  1     9     2 num_exclude_names fixed bin,			/* number of names in exclude array */
  1    10     2 exclude_array_ptr ptr,				/* pointer to array of exclude names */
  1    11     2 switches,					/* control switches */
  1    12       3 defs_in_link bit (1) unal,			/* says put defs in linkage */
  1    13       3 separate_static bit (1) unal,			/* says separate static section is wanted */
  1    14       3 have_text bit (1) unal,			/* ON if text section given */
  1    15       3 have_static bit (1) unal,			/* ON if static section given */
  1    16       3 pad bit (32) unal;
  1    17 
  1    18 dcl  exclude_names (1) char (32) based;			/* pointed to be cds_args.exclude_array_ptr */
  1    19 
  1    20 /* END INCLUDE FILE cds_args.incl.pl1 */
       56 
       57 
       58 /* Automatic to become the emacs_data_ variables. */
       59 
       60 declare	1 text_data	aligned,
       61 	  2 version	character (10) initial ("12.9"),
       62 	  2 log_dir	character (168) initial ("");
       63 declare	1 static_data	aligned,
       64 	  2 force_tasking	bit (1) aligned initial ("0"b),
       65 	  2 invocation_list pointer initial (null ()),
       66 	  2 status_code	fixed bin (35) initial (0);
       67 
       68 /* Fill in CDS data. */
       69 	unspec (cdsa) = ""b;
       70 	cdsa.sections (1).p = addr (text_data);
       71 	cdsa.sections (1).len = size (text_data);
       72 	cdsa.sections (1).struct_name = "text_data";
       73 	cdsa.sections (2).p = addr (static_data);
       74 	cdsa.sections (2).len = size (static_data);
       75 	cdsa.sections (2).struct_name = "static_data";
       76 	cdsa.seg_name = "emacs_data_";
       77 	cdsa.exclude_array_ptr = null ();
       78 	cdsa.switches.have_text = "1"b;
       79 	cdsa.switches.separate_static = "1"b;
       80 	cdsa.switches.have_static = "1"b;
       81 
       82 	call create_data_segment_ (addr (cdsa), code);
       83 	if code ^= 0
       84 	then do;
       85 		call com_err_ (code, me);
       86 		return;
       87 	     end;
       88 
       89 	return;
       90      end emacs_data_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    08/01/88  0949.0  !BBBJXclQJZkhXc.pl1               >special_ldd>install>MR12.2-1071>emacs_data_.cds
56           1    04/01/76  2209.5  cds_args.incl.pl1                 >ldd>include>cds_args.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 47 ref 70 73 82 82
cds_args                               based           structure                level 1 dcl 1-3
cdsa                            000112 automatic       structure                level 1 dcl 44 set ref 69* 82 82
code                            000100 automatic       fixed bin(35,0)          dcl 42 set ref 82* 83 85*
com_err_                        000012 constant        entry                    external dcl 51 ref 85
create_data_segment_            000014 constant        entry                    external dcl 52 ref 82
exclude_array_ptr        42     000112 automatic       pointer                  level 2 dcl 44 set ref 77*
force_tasking                   000234 automatic       bit(1)                   initial level 2 dcl 63 set ref 63*
have_static              44(03) 000112 automatic       bit(1)                   level 3 packed packed unaligned dcl 44 set ref 80*
have_text                44(02) 000112 automatic       bit(1)                   level 3 packed packed unaligned dcl 44 set ref 78*
invocation_list           2     000234 automatic       pointer                  initial level 2 dcl 63 set ref 63*
len                       2     000112 automatic       fixed bin(18,0)          array level 3 dcl 44 set ref 71* 74*
log_dir                   3     000157 automatic       char(168)                initial level 2 dcl 60 set ref 60*
me                              000101 automatic       char(32)                 initial packed unaligned dcl 43 set ref 43* 85*
null                                                   builtin function         dcl 47 ref 63 77
p                               000112 automatic       pointer                  array level 3 dcl 44 set ref 70* 73*
sections                        000112 automatic       structure                array level 2 dcl 44
seg_name                 30     000112 automatic       char(32)                 level 2 dcl 44 set ref 76*
separate_static          44(01) 000112 automatic       bit(1)                   level 3 packed packed unaligned dcl 44 set ref 79*
size                                                   builtin function         dcl 47 ref 71 74
static_data                     000234 automatic       structure                level 1 dcl 63 set ref 73 74
status_code               4     000234 automatic       fixed bin(35,0)          initial level 2 dcl 63 set ref 63*
struct_name               3     000112 automatic       char(32)                 array level 3 dcl 44 set ref 72* 75*
switches                 44     000112 automatic       structure                level 2 dcl 44
text_data                       000157 automatic       structure                level 1 dcl 60 set ref 70 71
unspec                                                 builtin function         dcl 47 set ref 69*
version                         000157 automatic       char(10)                 initial level 2 dcl 60 set ref 60*

NAME DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
exclude_names                          based           char(32)                 array packed unaligned dcl 1-18

NAME DECLARED BY EXPLICIT CONTEXT.
emacs_data_                     000020 constant        entry                    external dcl 38

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       204         222     131         214
Length      1240     131        16        1001      52           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
emacs_data_                         180 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
emacs_data_              000100 code                        emacs_data_
                         000101 me                          emacs_data_
                         000112 cdsa                        emacs_data_
                         000157 text_data                   emacs_data_
                         000234 static_data                 emacs_data_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      create_data_segment_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     38 000017        43 000025        60 000030        63 000036        69 000042        70 000045        71 000047
     72 000051        73 000054        74 000056        75 000060        76 000063        77 000066        78 000070
     79 000072        80 000074        82 000076        83 000110        85 000112        86 000127        89 000130


Object Segment >special_ldd>install>MR12.2-1071>emacs_data_
Created on 08/01/88  0954.3 mst Mon
by GJohnson.SysMaint.a
using create_data_segment_, Version II of Thursday, November 20, 1986
with separate static

        Object    Text    Defs    Link    Symb  Static
Start        0       0      56     142     152     134
Length     326      56      56      10     140       6


7 Definitions:


segname:    emacs_data_

stat|0          force_tasking
stat|2          invocation_list
text|3          log_dir
stat|4          status_code
symb|0          symbol_table
text|0          version


No Links.





                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
