	COMPILATION LISTING OF SEGMENT xmail_area_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell LCPD Phoenix, System M
	Compiled on: 11/15/83  1425.1 mst Tue
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 xmail_area_: proc ();
       12 
       13 /* Parameter */
       14 
       15 	dcl     P_area_ptr		 ptr;
       16 	dcl     P_code		 fixed bin (35);
       17 
       18 /* Automatic */
       19 
       20 	dcl     1 area_def		 aligned like area_info;
       21 
       22 /* Entries */
       23 
       24 	dcl     define_area_	 entry (ptr, fixed bin (35));
       25 	dcl     release_area_	 entry (ptr);
       26 
       27 /* Static */
       28 
       29 	dcl     sys_info$max_seg_size	 fixed bin (19) ext static;
       30 	dcl     NAME		 char (11) init ("xmail_area_") int static options (constant);
       31 
       32 /* Builtin */
       33 
       34 	dcl     (addr, null, string)	 builtin;
       35 
       36 create: entry (P_area_ptr, P_code);
       37 
       38 	P_area_ptr = null;
       39 	P_code = 0;
       40 
       41 	area_def.version = area_info_version_1;
       42 	string (area_def.control) = ""b;
       43 	area_def.control.extend = "1"b;
       44 	area_def.owner = NAME;
       45 	area_def.size = sys_info$max_seg_size;
       46 	area_def.areap = null;
       47 
       48 	call define_area_ (addr (area_def), P_code);
       49 	if P_code ^= 0 then return;
       50 
       51 	P_area_ptr = area_def.areap;
       52 
       53 	return;					/* create */
       54 
       55 release: entry (P_area_ptr);
       56 
       57 	call release_area_ (P_area_ptr);
       58 
       59 	return;					/* release */
       60 
       61 
       62 
  1     1 /* BEGIN INCLUDE FILE area_info.incl.pl1  12/75 */
  1     2 
  1     3 dcl  area_info_version_1 fixed bin static init (1) options (constant);
  1     4 
  1     5 dcl  area_infop ptr;
  1     6 
  1     7 dcl 1 area_info aligned based (area_infop),
  1     8     2 version fixed bin,				/* version number for this structure is 1 */
  1     9     2 control aligned like area_control,		/* control bits for the area */
  1    10     2 owner char (32) unal,				/* creator of the area */
  1    11     2 n_components fixed bin,				/* number of components in the area (returned only) */
  1    12     2 size fixed bin (18),				/* size of the area in words */
  1    13     2 version_of_area fixed bin,			/* version of area (returned only) */
  1    14     2 areap ptr,					/* pointer to the area (first component on multisegment area) */
  1    15     2 allocated_blocks fixed bin,			/* number of blocks allocated */
  1    16     2 free_blocks fixed bin,				/* number of free blocks not in virgin */
  1    17     2 allocated_words fixed bin (30),			/* number of words allocated in the area */
  1    18     2 free_words fixed bin (30);			/* number of words free in area not in virgin */
  1    19 
  1    20 dcl 1 area_control aligned based,
  1    21     2 extend bit (1) unal,				/* says area is extensible */
  1    22     2 zero_on_alloc bit (1) unal,			/* says block gets zerod at allocation time */
  1    23     2 zero_on_free bit (1) unal,			/* says block gets zerod at free time */
  1    24     2 dont_free bit (1) unal,			/* debugging aid, turns off free requests */
  1    25     2 no_freeing bit (1) unal,			/* for allocation method without freeing */
  1    26     2 system bit (1) unal,				/* says area is managed by system */
  1    27     2 pad bit (30) unal;
  1    28 
  1    29 /* END INCLUDE FILE area_info.incl.pl1 */
       63 
       64 
       65      end xmail_area_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/15/83  1400.2  xmail_area_.pl1                   >spec>on>xmail3>xmail_area_.pl1
63           1    06/11/76  1043.4  area_info.incl.pl1                >ldd>include>area_info.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
NAME                            000000 constant        char(11)                 initial unaligned dcl 30 ref 44
P_area_ptr                             parameter       pointer                  dcl 15 set ref 36 38* 51* 55 57*
P_code                                 parameter       fixed bin(35,0)          dcl 16 set ref 36 39* 48* 49
addr                                                   builtin function         dcl 34 ref 48 48
area_control                           based           structure                level 1 dcl 1-20
area_def                        000100 automatic       structure                level 1 dcl 20 set ref 48 48
area_info                              based           structure                level 1 dcl 1-7
area_info_version_1                    constant        fixed bin(17,0)          initial dcl 1-3 ref 41
areap                    16     000100 automatic       pointer                  level 2 dcl 20 set ref 46* 51
control                   1     000100 automatic       structure                level 2 dcl 20 set ref 42*
define_area_                    000010 constant        entry                    external dcl 24 ref 48
extend                    1     000100 automatic       bit(1)                   level 3 packed unaligned dcl 20 set ref 43*
null                                                   builtin function         dcl 34 ref 38 46
owner                     2     000100 automatic       char(32)                 level 2 packed unaligned dcl 20 set ref 44*
release_area_                   000012 constant        entry                    external dcl 25 ref 57
size                     13     000100 automatic       fixed bin(18,0)          level 2 dcl 20 set ref 45*
string                                                 builtin function         dcl 34 set ref 42*
sys_info$max_seg_size           000014 external static fixed bin(19,0)          dcl 29 ref 45
version                         000100 automatic       fixed bin(17,0)          level 2 dcl 20 set ref 41*

NAME DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
area_infop                             automatic       pointer                  dcl 1-5

NAMES DECLARED BY EXPLICIT CONTEXT.
create                          000023 constant        entry                    external dcl 36
release                         000073 constant        entry                    external dcl 55
xmail_area_                     000011 constant        entry                    external dcl 11

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       200         216     111         210
Length       400     111        16         146      66           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
xmail_area_                          92 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
xmail_area_              000100 area_def                    xmail_area_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
define_area_                  release_area_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
sys_info$max_seg_size




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000010        36 000016        38 000030        39 000033        41 000034        42 000036        43 000037
     44 000041        45 000044        46 000046        48 000050        49 000062        51 000065        53 000067
     55 000070        57 000100        59 000110


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
