	COMPILATION LISTING OF SEGMENT gtss_abort_dump_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/10/84  1219.7 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   *                                                         *
        4*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        5*   *                                                         *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 /* *************************************************************
       10*   *						   *
       11*   * Copyright (c) 1979 by Honeywell Information Systems, Inc. *
       12*   *						   *
       13*   ************************************************************* */
       14 gtss_abort_dump_: proc (drl_abort_code);
       15 
       16 /* This gcos error message will
       17*   be printed out on return,
       18*   but only if abort is due to DRL ABORT. */
       19 
       20 /**	gtss abort dump
       21*
       22*   Authors: Robert J. Grimes	Created
       23*   -	  Albert N. Kepner	  1978
       24*   -	  Robert M. May
       25*   -	  David B. Ward
       26*   Change:  Dave Ward	08/03/79 Revised open call.
       27*   Change:  Dave Ward	10/31/79 Exit for record quota overflow.
       28*   **/
       29 dcl  drl_abort_code           fixed bin (18) parm;
       30 dcl  size_change              fixed bin (24);
       31 	drl_abort_code = 35;			/* DRL ABORT -- ABORT FILE WRITTEN */
       32 	gseg = gtss_ext_$gtss_slave_area_seg (gtss_ext_$stack_level_);
       33 	call hcs_$status_mins (gseg, 01b, bc, code);	/* Obtain bit count (bc) of segment to dump. */
       34 	if code ^= 0 then do;
       35 	     call com_err_ (
       36 		code
       37 		, "gtss_abort_dump_"
       38 		, "COULD NOT OBTAIN BIT COUNT (^p)."
       39 		, gseg
       40 		);
       41 	     return;
       42 	end;
       43 	l = divide (bc, 36, 24, 0);			/* Number of words to dump. */
       44 
       45 /**	Obtain output file.	**/
       46 	call gtss_aft_$add ("ABRT", fn, code);
       47 	if code = 2 then do;
       48 	     call com_err_ (
       49 		0
       50 		, "gtss_abort_dump_"
       51 		, "NO ROOM IN AFT FOR ABRT FILE."
       52 		);
       53 	     return;
       54 	end;
       55 	if code = 0 then do;			/* New file (ABRT). */
       56 	     abrt_attributes_block.fill = "0"b;
       57 	     link_size = divide (l+3839, 3840, 24, 0);	/* enough full links for dump */
       58 	     abrt_attributes_block.current_size = 12 * link_size; /* size in llinks */
       59 	     abrt_attributes_block.device_type = "64"b3;	/* => disk. */
       60 	     abrt_attributes_block.llink_flag = "0"b;	/* links (=>12*320=3840 words). */
       61 	     abrt_attributes_block.max_size = divide (sys_info$max_seg_size+319, 320, 24, 0); /* maximum number of llinks
       62*						   in a multics segment */
       63 	     abrt_attributes_block.mode = "0"b;		/* Sequential. */
       64 	     abrt_attributes_block.non_null = "1"b;
       65 	     abrt_attributes_block.perm = "0"b;		/* Temporatry file. */
       66 	     if link_size <= 16383			/* 2**14-1 */
       67 	     then abrt_attributes_block.size = substr (bit (link_size, 24), 11, 14);
       68 	     else abrt_attributes_block.size = "0"b;
       69 	     abrt_attributes_block.user_attr = "0"b;
       70 	     addr (abrt_attributes_block.words_block) -> fixed_bin11 = 64;
       71 	     fnp = fn;				/* Convert fn to numeric string (fnps/fnp). */
       72 
       73 	     call gtss_ios_open_ (
       74 		/* 1 */ fn			/* AFT index. */
       75 		, /* 2 */ (gtss_ext_$pdir)		/* ABRT directory. */
       76 		, /* 3 */ unique_chars_ ("0"b)||".abrt."||fnps /* Multics segment name. */
       77 		, /* 4 */ "110000"b			/* bit=1 => read, bit2=1 => write. */
       78 		, /* 5 */ "0"b			/* => sequential. */
       79 		, /* 6 */ addr (abrt_attributes_block)
       80 		, /* 7 */ addr (gcos_status)		/* gtss_ios_ result code. */
       81 		, /* 8 */ code			/* Multics error code. */
       82 		);
       83 dcl 1 gcos_status aligned,
       84       2 bit12 bit(12)unal,
       85       2 bit60 bit(60)unal;
       86 	     if gcos_status.bit12 ^= "4000"b3 then do;
       87 		call com_err_ (
       88 		     code
       89 		     , "gtss_abort_dump_"
       90 		     , "GTSS_IOS_$OPEN GCOS_STATUS=^w. CAN'T OPEN ABRT"
       91 		     , gcos_status
       92 		     );
       93 		aft_entry (fn).used = "0"b;		/* => Don't close, forget aft entry. */
       94 		return;
       95 	     end;
       96 	end;
       97 
       98 	else do;					/* File already in AFT. */
       99 
      100 /* See if we have write access */
      101 	     if permissions (fn).write then do;
      102 
      103 /* Try to grow ABRT file if too small */
      104 		if file_size (fn) < l then do;
      105 
      106 /* Figure out how many links are required. */
      107 		     link_size = divide (l + 3839, 3840, 24, 0);
      108 		     size_change = link_size * 12 - divide (file_size (fn), 320, 24, 0);
      109 		     call gtss_ios_change_size_ (fn, size_change, "0"b, status, code);
      110 		     if status ^= 0 then do;
      111 			if code = error_table_$rqover then do;
      112 			     call com_err_ (
      113 				code
      114 				, "gtss_abort_dump_"
      115 				, "EXCEEDED LLINKS AVAILABLE"
      116 				);
      117 			     drl_abort_code = 34;
      118 			     return;
      119 			end;
      120 			drl_abort_code = 40;	/* DRL ABORT - ABORT FILE TOO SMALL */
      121 			l = file_size (fn);
      122 		     end;
      123 		end;
      124 	     end;
      125 	     else do;				/* No write permission */
      126 		drl_abort_code = 34;		/* DRL ABORT -- CANNOT WRITE ABRT FILE */
      127 		return;
      128 	     end;
      129 	end;
      130 
      131 /* get pointer to target file */
      132 	if msf (fn)
      133 	then abrt_ptr = msf_array_ptr (fn) -> msf_components (1);
      134 	else abrt_ptr = single_segment_ptr (fn);
      135 
      136 /* Move memory image into abort file */
      137 	abrt_ptr -> m = gseg -> m;
      138 	return;
      139 
      140 /**  Variables for gtss_abort_dump_
      141*   IDENTIFIER		ATTRIBUTES	**/
      142 dcl  abrt_ptr                 ptr init(null());
      143 dcl  bc                       fixed bin (24);
      144 dcl  code                     fixed bin (35);
      145 dcl  divide                   builtin;
      146 dcl  error_table_$rqover      fixed bin(35)ext;
      147 dcl  fixed_bin11              fixed bin (11)unal based;
      148 dcl  fn                       fixed bin (24);
      149 dcl  fnp                      pic "99";
      150 dcl  fnps                     char (2)based (addr (fnp));
      151 dcl  gseg                     ptr init(null());
      152 dcl  hcs_$status_mins         entry (ptr, fixed bin (2), fixed bin (24), fixed bin (35));
      153 dcl  l                        fixed bin (24);
      154 dcl  link_size                fixed bin (24);
      155 dcl  m                        char (4*l) based;
      156 dcl  msf_components           (0:499) ptr based;
      157 dcl  null                     builtin;
      158 dcl  status                   fixed bin (24);
      159 dcl  sys_info$max_seg_size    fixed bin (35) ext;
      160 dcl  unique_chars_            entry (bit (*))returns (char (15));
      161 
      162 dcl 1 abrt_attributes_block aligned like gtss_file_attributes static int;
      163 
  1     1 /* BEGIN INCLUDE FILE gtss_file_attributes.incl.pl1 */
  1     2 /*
  1     3*  Created: (Kepner Multics)  06/02/78 1522.0 mst Fri 
  1     4**/
  1     5 
  1     6 /*	Declaration of File Attributes Segement	*/
  1     7 
  1     8 
  1     9 dcl  gtss_file_attributes_ptr ptr init(null());
  1    10 
  1    11 dcl 1 gtss_file_attributes based (gtss_file_attributes_ptr) aligned,
  1    12     2 max_size fixed bin (24),			/* maximum size the file can grow to
  1    13*						   in 320 word blocks.  if = 0 then the
  1    14*						   file size is unlimited. */
  1    15     2 current_size fixed bin (24),			/* current size of the file in 320 word blocks */
  1    16     2 user_attributes aligned,
  1    17       3 non_null bit (1) unal,			/* 0 = this file has never been written to */
  1    18       3 user_attr bit (35) unal,			/* User defined attributes */
  1    19     2 descriptor aligned,
  1    20       3 device_type bit (6) unaligned,			/* currently ignored */
  1    21       3 words_block bit (12) unaligned,			/* number of words per physical block */
  1    22       3 llink_flag bit (1) unaligned,			/* if 0= size in links | 1= size in llinks */
  1    23       3 mode bit (1) unaligned,			/* 0= linked file | 1= random file */
  1    24       3 perm bit (1) unaligned,			/* 1=permanent file|0=not */
  1    25       3 fill bit (1) unaligned,
  1    26       3 size bit (14) unaligned;
  1    27 
  1    28 
  1    29 /*   END INCLUDE FILE gtss_file_attributes.incl.pl1 */
      164 
      165 
  2     1 /* BEGIN INCLUDE FILE gtss_ext_.incl.pl1 */
  2     2 /*
  2     3*  Created: (Wardd Multics)  05/20/78 1307.6 mst Sat 
  2     4*  Modified: Ward            1981     add suspended_process dcl
  2     5*  Modified: Ron Barstad  83-07-21  Fixed level number on mcfc to 3
  2     6*  Modified: Ron Barstad  83-07-25  Fixed derail range in statistics to 4js3 number
  2     7**/
  2     8 dcl  gtss_ext_$aem                   fixed bin static ext	/* >0 Print "additional" error information. */;
  2     9 dcl  gtss_ext_$bad_drl_rtrn          static ext label	/* Default for drl_rtrn. */;
  2    10 dcl  gtss_ext_$db                    (72)bit(1)unal static ext;
  2    11 dcl  gtss_ext_$deferred_catalogs_ptr ptr ext;
  2    12 dcl  gtss_ext_$dispose_of_drl        static ext label	/* quit handlers for some derails use this label to abort */;
  2    13 dcl  gtss_ext_$drl_rtrn              (4)static ext label	/* where to return at subsystem end */;
  2    14 dcl  gtss_ext_$drm_path              char(168)static ext	/* gtss_expand_pathname_stores drm_path */;
  2    15 dcl  gtss_ext_$drun_jid              char (5) static ext	/* valid only for DRUN executing under absentee */;
  2    16 dcl  gtss_ext_$event_channel         fixed bin (71) static ext	/* used for DABT signals */;
  2    17 dcl  gtss_ext_$finished              static ext label	/* Return to gtss for normal conclusion. */;
  2    18 dcl  gtss_ext_$gdb_name              char(8)ext	/* Name H* module to debug. */;
  2    19 dcl  gtss_ext_$get_line              entry(ptr,ptr,fixed bin(21),fixed bin(21),fixed bin(35))variable ext /* Build mode input procedure. */;
  2    20 dcl  gtss_ext_$gtss_slave_area_seg   (4) ext static ptr	/* pointer to gtss slave area segment */;
  2    21 dcl  gtss_ext_$hcs_work_area_ptr     ptr ext static		/* Temp seg for acl lists. */;
  2    22 dcl  gtss_ext_$homedir               char (64) static ext /* user's home dir */;
  2    23 dcl  gtss_ext_$last_k_was_out        bit (1)aligned ext static	/* "1"b => last tty output was output. */;
  2    24 dcl  gtss_ext_$pdir                  char (168) varying ext static	/* pathname of process directory */;
  2    25 dcl  gtss_ext_$popup_from_pi         static ext label	/* transfer to this label after pi simulates popup primitive */;
  2    26 dcl  gtss_ext_$process_type          fixed bin (17) static ext;
  2    27 dcl  gtss_ext_$put_chars             entry(ptr,ptr,fixed bin(24),fixed bin(35)) variable ext	/* Terminal output procedure. */;
  2    28 dcl  gtss_ext_$restart_from_pi       static ext label	/* transfer to this label after pi restores machine conditions */;
  2    29 dcl  gtss_ext_$restart_seg_ptr       ptr static ext	/* points to DRUN restart file when exec under absentee */;
  2    30 dcl  gtss_ext_$sig_ptr               ext static ptr	/* saved ptr to signal_ */;
  2    31 dcl  gtss_ext_$stack_level_          fixed bin ext static;
  2    32 dcl  gtss_ext_$suspended_process     bit(1) ext static;
  2    33 dcl  gtss_ext_$SYstarstar_file_no    fixed bin (24) static ext;
  2    34 dcl  gtss_ext_$user_id               char (26)var ext;
  2    35 dcl  gtss_ext_$work_area_ptr         ptr ext;
  2    36 
  2    37 dcl  1 gtss_ext_$CFP_bits aligned static external
  2    38      , 3 no_input_yet bit (1) unaligned         /* used in gtss_CFP_input_, gtss_read_starCFP_ */
  2    39      , 3 rtn_bits bit (4) unaligned             /* used in gtss_CFP_input_, gtss_CFP_output_ */
  2    40      , 3 cpos_called bit (1) unaligned          /* used in gtss_CFP_input_, gtss_drl_t_cfio_, gtss_abandon_CFP_ */
  2    41      , 3 cout_called bit (1) unaligned          /* used in gtss_read_starCFP_, gtss_abandon_CFP_ */
  2    42      , 3 build_mode bit (1) unaligned	        /* used in gtss_build_, gtss_dsd_process_ */
  2    43      ;
  2    44 
  2    45 dcl 1 gtss_ext_$com_reg aligned static ext,
  2    46        3 tsdmx,
  2    47          4 dst fixed bin (18) unsigned unaligned,
  2    48          4 dit fixed bin (18) unsigned unaligned,
  2    49        3 tsdpt fixed bin (36) unsigned unaligned,
  2    50        3 tsddt fixed bin (36) unsigned unaligned,
  2    51        3 tsdid bit (72) unaligned,
  2    52        3 tsdsd bit (36) unaligned,
  2    53        3 tsdst fixed bin (36) unsigned unaligned,
  2    54        3 tsdjb fixed bin (35) unaligned,
  2    55        3 tsdgt,
  2    56          4 ust_loc fixed bin (18) unsigned unaligned,
  2    57          4 gating_ctl fixed bin (18) unsigned unaligned,
  2    58        3 tcdfr bit (36) unaligned;
  2    59 
  2    60 dcl 1 gtss_ext_$flags aligned static ext
  2    61      , 3 dispose_of_drl_on_pi	bit (01) unal	/* 1 => drl that should be aborted after quit-pi sequence */
  2    62      , 3 drl_in_progress	bit (01) unal	/* 1 => drl handler executing; 0 => gcos code executing */
  2    63      , 3 popup_from_pi	bit (01) unal	/* 1 => derail processor will simulate Gcos break instead of returning */
  2    64      , 3 unfinished_drl	bit (01) unal	/* 1 => subsystem is handling breaks and quit was raised during a drl */
  2    65      , 3 ss_time_limit_set	bit (01) unal	/* 1 => exec time limit set for subsystem */
  2    66      , 3 timer_ranout	bit (01) unal	/* 1 => user is executing timer runout code */
  2    67      , 3 gtss_com_err_sw      bit (01) unal       /* 1 => stop com_err_ string from going to terminal */   
  2    68      , 3 available		bit (65) unal
  2    69      ;
  2    70 
  2    71 
  2    72 dcl 1 gtss_ext_$statistics aligned static ext,		/* Derail usage statistics */
  2    73       3 total_time (-10:71)fixed bin (71),
  2    74       3 count (-10:71)fixed bin (17);
  2    75 
  2    76 /* 	Declaration of Available File Table
  2    77*   */
  2    78 dcl 1 gtss_ext_$aft aligned ext,			/* aft structure */
  2    79 
  2    80       3 start_list (0:102) fixed bin (24),		/* >0 => 1st aft_entry row to start of next entry chain. */
  2    81 
  2    82       3 aft_entry (20),
  2    83         4 altname char (8),				/* altname name for attaching this file */
  2    84         4 next_entry fixed bin (24),			/* Next aft_entry in hash chain. */
  2    85         4 previous_add fixed bin (24),			/* Previously added entry. */
  2    86         4 next_add fixed bin (24),			/* Entry added after this one. */
  2    87         4 used bit (1) unal,				/* "1"b => aft_entry contains AFT value. */
  2    88         4 forced bit(1) unal,				/* "1"b => gtss_verify_access_ forced access on this file. */
  2    89 
  2    90       3 free_space fixed bin (24),			/* Index of start of free space list for aft entries. */
  2    91       3 first_added fixed bin (24),			/* >0  => start of chain in add order. */
  2    92       3 last_added fixed bin (24)			/* >0 => end of chain in added order. */;
  2    93 
  2    94 dcl  gtss_ext_$ppt                   ptr ext /*  switch name for tapein drl */;
  2    95 /**	Data structure to provide access to installed
  2    96*   subsystems fast library load.
  2    97*   **/
  2    98 dcl 1 gtss_ext_$fast_lib aligned ext
  2    99      , 3 fast_lib_fcb ptr				/* Pointer to msf fcb.	*/
  2   100      , 3 fast_lib_ncp fixed bin (24)			/* Number of components. */
  2   101      , 3 comp_ptr (0:9)ptr				/* Pointer to component. */
  2   102      , 3 comp_wds (0:9)fixed bin (24)			/* Component length (words). */
  2   103      ;
  2   104 
  2   105 /* Pointers to segments to regulate multipler
  2   106*   callers to files. Same segments are used to regulate
  2   107*   all simulator callers.
  2   108**/
  2   109 dcl 1 gtss_ext_$mcfc	aligned ext,
  2   110       3 multics_lock_id	bit(36),
  2   111       3 wait_time		fixed bin,
  2   112       3 files_ptr		ptr,
  2   113       3 names_ptr		ptr,
  2   114       3 callers_ptr		(0:3)ptr
  2   115 ;
  2   116 
  2   117 /*   END INCLUDE FILE gtss_ext_.incl.pl1 */
      166 
      167 
  3     1 /* BEGIN INCLUDE FILE gtss_entry_dcls.incl.pl1 */
  3     2 /*
  3     3*  Created: (Wardd Multics)  06/30/78 1624.8 mst Fri 
  3     4*  Modified: Ron Barstad  84-02-24  Fixed wrong and obsolete entries
  3     5**/
  3     6 
  3     7 /**  gtss external entry variables.		**/
  3     8 dcl  com_err_                                   entry() options(variable);
  3     9 dcl  gtss_CFP_abort_                            entry options(variable);
  3    10 dcl  gtss_CFP_break_                            entry options(variable);
  3    11 dcl  gtss_CFP_input_                            entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  3    12 dcl  gtss_CFP_output_                           entry (ptr, ptr, fixed bin(21), fixed bin(35));
  3    13 dcl  gtss_abandon_CFP_                          entry options(variable);
  3    14 dcl  gtss_abort_dump_                           entry (fixed bin(18));
  3    15 dcl  gtss_abort_subsystem_                      entry options (variable);
  3    16 dcl  gtss_abort_subsystem_$not_imp              entry (ptr, fixed bin(24));
  3    17 dcl  gtss_abs_login_banner_		        entry() returns(char(*));
  3    18 dcl  gtss_abs_logout_banner_		        entry() returns(char(*));
  3    19 dcl  gtss_abs_$abs_equiv                        entry options(variable);
  3    20 dcl  gtss_abs_$cpu_runout		        entry (ptr, char(4));
  3    21 dcl  gtss_abs_$create_absin                     entry() returns(char(*));
  3    22 dcl  gtss_abs_$dabt_check		        entry (ptr, char(4));
  3    23 dcl  gtss_abs_$get_id                           entry (char(5)) returns(char(19));
  3    24 dcl  gtss_abs_$get_drm                          entry() returns(char(*));
  3    25 dcl  gtss_adjust_size_                          entry (ptr);
  3    26 dcl  gtss_aft_$add                              entry (char(8), fixed bin(24), fixed bin(35));
  3    27 dcl  gtss_aft_$delete                           entry (char(8), fixed bin(24), fixed bin(35));
  3    28 dcl  gtss_aft_$find                             entry (char(8), fixed bin(24), fixed bin(35));
  3    29 dcl  gtss_aft_$initialize                       entry (fixed bin(35));
  3    30 dcl  gtss_ascii_bcd_                            entry (ptr, fixed bin, ptr);
  3    31 dcl  gtss_attributes_mgr_$get                   entry (ptr, fixed bin(35));
  3    32 dcl  gtss_attributes_mgr_$set                   entry (ptr, fixed bin(35));
  3    33 dcl  gtss_bcd_ascii_                            entry (ptr, fixed bin(24), ptr);
  3    34 dcl  gtss_bcd_ascii_$lc                         entry (ptr, fixed bin(24), ptr);
  3    35 dcl  gtss_break_vector_                         entry ();
  3    36 dcl  gtss_break_vector_$drl_in_progress         entry() returns(bit(1));
  3    37 dcl  gtss_break_vector_$status                  entry() returns(bit(1));
  3    38 dcl  gtss_build_                                entry options(variable);
  3    39 dcl  gtss_com_err_                              entry options(variable);
  3    40 dcl  gtss_derail_processor_                     entry (ptr, char(*), ptr, ptr, bit(1) aligned) /* called at fault time instead of signal_ */;
  3    41 dcl  gtss_derail_processor_$set                 entry options(variable);
  3    42 dcl  gtss_dq_$catp                              entry (char (5), ptr, fixed bin (18) unsigned);
  3    43 dcl  gtss_dq_$create                            entry (bit(1));
  3    44 dcl  gtss_dq_$dibp                              entry (char(5), ptr);
  3    45 dcl  gtss_dq_$entries_info		        entry (ptr, fixed bin (18) unsigned, fixed bin (18) unsigned);
  3    46 dcl  gtss_dq_$hdrp                              entry (ptr);
  3    47 dcl  gtss_dq_$mod_js		        entry (char(5), fixed bin (6) unsigned, bit (1));
  3    48 dcl  gtss_dq_$open_exc		        entry (bit(1));
  3    49 dcl  gtss_dq_$open_gen		        entry (bit(1));
  3    50 dcl  gtss_drl_abort_                            entry (ptr, fixed bin);
  3    51 dcl  gtss_drl_addmem_                           entry (ptr, fixed bin);
  3    52 dcl  gtss_drl_callss_                           entry (ptr, fixed bin);
  3    53 dcl  gtss_drl_corfil_                           entry (ptr, fixed bin);
  3    54 dcl  gtss_drl_defil_                            entry (ptr, fixed bin);
  3    55 dcl  gtss_drl_defil_$subr                       entry (ptr, ptr, ptr);
  3    56 dcl  gtss_drl_dio_                              entry (ptr, fixed bin);
  3    57 dcl  gtss_drl_drlimt_                           entry (ptr, fixed bin);
  3    58 dcl  gtss_drl_drlsav_                           entry (ptr, fixed bin);
  3    59 dcl  gtss_drl_filact_                           entry (ptr, fixed bin);
  3    60 dcl  gtss_drl_filsp_                            entry (ptr, fixed bin);
  3    61 dcl  gtss_drl_grow_                             entry (ptr, fixed bin);
  3    62 dcl  gtss_drl_gwake_                            entry (ptr, fixed bin);
  3    63 dcl  gtss_drl_jsts_                             entry (ptr, fixed bin);
  3    64 dcl  gtss_drl_kin_                              entry (ptr, fixed bin);
  3    65 dcl  gtss_drl_kotnow_                           entry (ptr, fixed bin);
  3    66 dcl  gtss_drl_kotnow_$gtss_drl_kout_            entry (ptr, fixed bin);
  3    67 dcl  gtss_drl_koutn_                            entry (ptr, fixed bin);
  3    68 dcl  gtss_drl_morlnk_                           entry (ptr, fixed bin);
  3    69 dcl  gtss_drl_msub_                             entry (ptr, fixed bin);
  3    70 dcl  gtss_drl_objtim_                           entry (ptr, fixed bin);
  3    71 dcl  gtss_drl_part_                             entry (ptr, fixed bin);
  3    72 dcl  gtss_drl_pasaft_                           entry (ptr, fixed bin);
  3    73 dcl  gtss_drl_pasdes_                           entry (ptr, fixed bin);
  3    74 dcl  gtss_drl_pasust_                           entry (ptr, fixed bin);
  3    75 dcl  gtss_drl_pdio_                             entry (ptr, fixed bin);
  3    76 dcl  gtss_drl_prgdes_                           entry (ptr, fixed bin);
  3    77 dcl  gtss_drl_pseudo_                           entry (ptr, fixed bin);
  3    78 dcl  gtss_drl_relmem_                           entry (ptr, fixed bin);
  3    79 dcl  gtss_drl_restor_                           entry (ptr, fixed bin);
  3    80 dcl  gtss_drl_retfil_                           entry (ptr, fixed bin);
  3    81 dcl  gtss_drl_return_                           entry (ptr, fixed bin);
  3    82 dcl  gtss_drl_rew_                              entry (ptr, fixed bin);
  3    83 dcl  gtss_drl_rstswh_                           entry (ptr, fixed bin);
  3    84 dcl  gtss_drl_setlno_                           entry (ptr, fixed bin);
  3    85 dcl  gtss_drl_setswh_                           entry (ptr, fixed bin);
  3    86 dcl  gtss_drl_snumb_                            entry (ptr, fixed bin);
  3    87 dcl  gtss_drl_spawn_                            entry (ptr, fixed bin);
  3    88 dcl  gtss_drl_spawn_$gtss_drl_pasflr_           entry (ptr, fixed bin);
  3    89 dcl  gtss_drl_stoppt_                           entry (ptr, fixed bin);
  3    90 dcl  gtss_drl_switch_                           entry (ptr, fixed bin);
  3    91 dcl  gtss_drl_sysret_                           entry (ptr, fixed bin);
  3    92 dcl  gtss_drl_t_cfio_                           entry (ptr, fixed bin);
  3    93 dcl  gtss_drl_t_cmov_                           entry (ptr, fixed bin);
  3    94 dcl  gtss_drl_t_err_                            entry (ptr, fixed bin);
  3    95 dcl  gtss_drl_t_goto_                           entry (ptr, fixed bin);
  3    96 dcl  gtss_drl_t_linl_                           entry (ptr, fixed bin);
  3    97 dcl  gtss_drl_t_rscc_                           entry (ptr, fixed bin);
  3    98 dcl  gtss_drl_tapein_                           entry (ptr, fixed bin);
  3    99 dcl  gtss_drl_task_                             entry (ptr, fixed bin);
  3   100 dcl  gtss_drl_termtp_                           entry (ptr, fixed bin);
  3   101 dcl  gtss_drl_time_                             entry (ptr, fixed bin);
  3   102 dcl  gtss_drun_                                 entry (bit(1));
  3   103 dcl  gtss_dsd_lookup_                           entry (char(8) var) returns(fixed bin(24));
  3   104 dcl  gtss_dsd_process_                          entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  3   105 dcl  gtss_edit_dsd_                             entry (ptr, fixed bin(21)) returns(fixed bin(24));
  3   106 dcl  gtss_mcfc_empty                            entry (char(*) var);
  3   107 dcl  gtss_expand_pathname_                      entry (ptr, char(*), char(*), fixed bin(35));
  3   108 dcl  gtss_expand_pathname_$verify_umc           entry (ptr, char(*), char(*), bit(18), fixed bin(35));
  3   109 dcl  gtss_fault_processor_                      entry options(variable);
  3   110 dcl  gtss_find_cond_frame_		        entry (char(32) var) returns(ptr);
  3   111 dcl  gtss_fault_processor_$timer_runout         entry (ptr, char(*));
  3   112 dcl  gtss_filact_error_status_                  entry (fixed bin(35))returns(bit(12));
  3   113 dcl  gtss_filact_funct02_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  3   114 dcl  gtss_filact_funct03_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  3   115 dcl  gtss_filact_funct04_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  3   116 dcl  gtss_filact_funct05_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  3   117 dcl  gtss_filact_funct08_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  3   118 dcl  gtss_filact_funct10_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  3   119 dcl  gtss_filact_funct11_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  3   120 dcl  gtss_filact_funct14_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  3   121 dcl  gtss_filact_funct18_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  3   122 dcl  gtss_filact_funct19_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  3   123 dcl  gtss_filact_funct21_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  3   124 dcl  gtss_filact_funct22_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  3   125 dcl  gtss_mcfc_init_                            entry (char(*) var);
  3   126 dcl  gtss_interp_prim_                          entry options(variable);
  3   127 dcl  gtss_interp_prim_$callss                   entry (char(4), ptr);
  3   128 dcl  gtss_interp_prim_$sysret                   entry options(variable);
  3   129 dcl  gtss_interp_prim_$t_goto                   entry (char(4));
  3   130 dcl  gtss_ios_change_size_                      entry (fixed bin(24), fixed bin(24), bit(1), fixed bin(24), fixed bin(35));
  3   131 dcl  gtss_ios_close_                            entry (fixed bin(24), ptr, fixed bin(35));
  3   132 dcl  gtss_ios_exchange_names_                   entry (fixed bin(24), fixed bin(24), fixed bin(24), fixed bin(35));
  3   133 dcl  gtss_ios_initialize_                       entry options(variable);
  3   134 dcl  gtss_ios_io_                               entry (fixed bin(24), ptr, ptr, fixed bin(24), fixed bin(24), fixed bin(35));
  3   135 dcl  gtss_ios_open_                             entry (fixed bin(24), char(168), char(32), bit(6), bit(1), ptr, ptr, fixed bin(35));
  3   136 dcl  gtss_ios_position_                         entry (fixed bin(24), fixed bin(24), fixed bin(24), bit(6), ptr);
  3   137 dcl  gtss_mcfc_$delete		        entry (fixed bin(24), char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  3   138 dcl  gtss_mcfc_$open                            entry (char(*), char(*), bit(6), bit(36) aligned, ptr, fixed bin(35));
  3   139 dcl  gtss_mcfc_$close                           entry (char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  3   140 dcl  gtss_read_starCFP_                         entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  3   141 dcl  gtss_read_starCFP_$last_os                 entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  3   142 dcl  gtss_run_subsystem_                        entry (fixed bin(24));
  3   143 dcl  gtss_run_subsystem_$finish                 entry options(variable);
  3   144 dcl  gtss_run_subsystem_$restor                 entry (fixed bin(24), ptr);
  3   145 dcl  gtss_run_subsystem_$restor_perm            entry (fixed bin(24), ptr, fixed bin(18));
  3   146 dcl  gtss_set_slave_                            entry (fixed bin (24), ptr);
  3   147 dcl  gtss_set_slave_$load_bar                   entry (fixed bin (17));
  3   148 dcl  gtss_update_safe_store_                    entry (ptr);
  3   149 dcl  gtss_verify_access_		        entry (char(*), char(*), fixed bin(24), bit(6), bit(12) aligned);
  3   150 dcl  gtss_verify_access_$check_forced_access    entry (char(*), char(*), fixed bin(24));
  3   151 dcl  gtss_write_starCFP_                        entry (ptr, ptr, fixed bin(21), fixed bin(35));
  3   152 /*   END INCLUDE FILE gtss_entry_dcls.incl.pl1 */
      168 
      169 
  4     1 /* BEGIN INCLUDE FILE gtss_dfd_ext_.incl.pl1 */
  4     2 /*
  4     3*  Created:  (Wardd Multics)  06/09/78 1650.6 mst Fri 
  4     4**/
  4     5 
  4     6 dcl 1 gtss_dfd_ext_$disk_file_data (41) aligned ext,		/* disk_file_data structure */
  4     7 
  4     8     3 gtss_disk,
  4     9       4 dir_name char (168) unal,			/* containing directory for file */
  4    10       4 entry_name char (32) unal,			/* entry name for file */
  4    11       4 fcb_ptr ptr aligned,				/* ptr to file control block */
  4    12       4 msf_array_ptr ptr,				/* Pointer to an array of pointers for a msf. Each
  4    13*						   component which has been accessed has a corresponding
  4    14*						   initialized pointer.  Currently 500 components
  4    15*						   are supported. */
  4    16       4 single_segment_ptr ptr,			/* Pointer to segment for single segment file */
  4    17       4 indicators aligned,				/* one word of flags */
  4    18 
  4    19         5 msf bit (1) unaligned,			/* 1=msf segment | 0= single segment */
  4    20         5 protected_file bit (1) unaligned,		/* 1=file uses protections | 0= unprotected */
  4    21         5 fill bit (34) unal,
  4    22 
  4    23       4 permissions aligned,
  4    24         5 read bit (1) unaligned,			/* 1=read permission  */
  4    25         5 execute bit (1) unaligned,			/* 1=execute permission */
  4    26         5 write bit (1) unaligned,			/* 1=write permission */
  4    27         5 fill2 bit (33) unaligned,			/* unused at this time */
  4    28 
  4    29       4 access_mode bit (6) aligned,			/* contains the mode by which the file was accessed */
  4    30       4 component fixed bin,				/* current component value (first component = 0) */
  4    31       4 offset fixed bin (24),			/* current word offset in the component */
  4    32       4 file_position fixed bin (30),			/* current file position in words */
  4    33       4 file_size fixed bin (30),			/* size of file in words */
  4    34       4 no_components fixed bin (24),			/* number of components for a msf */
  4    35       4 attributes_ptr ptr,				/* Pointer to the attributes structure
  4    36*						   for this file. (See gtss_file_attributes.incl.pl1) */
  4    37 
  4    38       4 pat_body,
  4    39 
  4    40         5 word_0,
  4    41 	6 defective bit (1) unal,			/* 1 = file has defective space */
  4    42 	6 io_errors bit (1) unal,			/* 1 = I/O errors encountered on file */
  4    43 	6 reserved bit (2) unal,			/* Reserved for GCOS */
  4    44 	6 sct bit (12) unal,			/* address of SCT for device on which
  4    45*						   file begins or if cataloged,
  4    46*						   for device with file catalog entry */
  4    47 	6 reserved2 bit (2) unal,			/* Reserved for GCOS */
  4    48 
  4    49         5 word_1,
  4    50 	6 io_time fixed bin (35),			/* I/O time for this file */
  4    51 
  4    52         5 word_2,
  4    53 	6 protected bit (1) unal,			/* 1 = file has protected allocation */
  4    54 	6 hash_code bit (5) unal,			/* hash code of user name under which
  4    55*						   file is cataloged */
  4    56 	6 not_cat bit (1) unal,			/* 1 = file is not cataloged */
  4    57 	6 last_desc bit (1) unal,			/* 1 = last descriptor for file is not in memory */
  4    58 	6 random bit (1) unal,			/* 1 = access to file is random */
  4    59 	6 perm bit (1) unal,			/* 1 = file space is permanently assigned */
  4    60 	6 first_desc bit (1) unal,			/* 1 = first descriptor for file is not in memory */
  4    61 	6 creator bit (1) unal,			/* 1 = user is not creator of file */
  4    62 	6 disposition bit (2) unal,			/* Abort disposition code
  4    63*						   00 = Release
  4    64*						   01 = Dismount
  4    65*						   10 = Save
  4    66*						   11 = Continue */
  4    67 	6 ids1 bit (1) unal,			/* 1 = file is an I-D-S/I file */
  4    68 	6 write_performed bit (1) unal,		/* 1 = write was performed on file */
  4    69 	6 unpermitted_access bit (1) unal,		/* 1 = unpermitted access to file attempted or seek
  4    70*						   attempted to part of file marked defective (only
  4    71*						   for procted allocation) */
  4    72 	6 purge bit (1) unal,			/* 1 = file space to be purgedbefore deallocating file. */
  4    73 	6 sector_number bit (18) unal,		/* If cataloged file, sector number of file catalog
  4    74*						   (on device with SCT referenced in word 0).  If
  4    75*						   cataloged file that is proctected (bit 0 ON in this
  4    76*						   word), memory location of table in File Management
  4    77*						   Supervisor Executive.  If user temporary file,
  4    78*						   largest size file has ever attained, in llinks.
  4    79*						   If system value equals 777777 octal, it is system
  4    80*						   file created by System Input. */
  4    81 
  4    82         5 word_3,
  4    83 	6 llink_size bit (14) unal,			/* 0-13 ^= 0, Current total file size in llinks
  4    84*						   0-13 = 0, File size is greater than 16,383 llinks,
  4    85*						   and if the file is cataloged, call to .MFS19,5 with
  4    86*						   offset to PAT pointer in index 5 will cause bits
  4    87*						   14-35 of Q-register to be set to file size. (Unless
  4    88*						   there is a Seek error on file catalog in which case
  4    89*						   zero is returned. )
  4    90*						   */
  4    91 	6 llink_position bit (22) unal,		/* Relative llink position within the space descriptors
  4    92*						   in memory. */
  4    93 
  4    94         5 word_4,
  4    95 	6 not_last_desc bit (1) unal,			/* 1 = not last descriptor in memory */
  4    96 	6 space_desc bit (1) unal,			/* 0 = this is space descriptor */
  4    97 	6 space_defective bit (1) unal,		/* 1 = Space is defective */
  4    98 	6 extent bit (15) unal,			/* Number of llinks in this extent (area defined by this
  4    99*						   descriptor) */
  4   100 	6 origin bit (18) unal;			/* device llinks number of origin of this extent */
  4   101 /*   END INCLUDE FILE gtss_dfd_ext_.incl.pl1 */
      170 
      171      end						/* gtss_abort_dump_ */;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/10/84  1042.6  gtss_abort_dump_.pl1              >spec>on>7105>gtss_abort_dump_.pl1
164          1    09/09/83  1714.0  gtss_file_attributes.incl.pl1     >ldd>include>gtss_file_attributes.incl.pl1
166          2    09/09/83  1713.8  gtss_ext_.incl.pl1                >ldd>include>gtss_ext_.incl.pl1
168          3    12/10/84  1029.7  gtss_entry_dcls.incl.pl1          >spec>on>7105>gtss_entry_dcls.incl.pl1
170          4    09/09/83  1713.2  gtss_dfd_ext_.incl.pl1            >ldd>include>gtss_dfd_ext_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
abrt_attributes_block           000010 internal static structure                level 1 dcl 162 set ref 73 73
abrt_ptr                        000104 automatic       pointer                  initial dcl 142 set ref 132* 134* 137 142*
aft_entry               147     000032 external static structure                array level 2 dcl 2-78
bc                              000106 automatic       fixed bin(24,0)          dcl 143 set ref 33* 43
bit12                           000102 automatic       bit(12)                  level 2 packed unaligned dcl 83 set ref 86
code                            000107 automatic       fixed bin(35,0)          dcl 144 set ref 33* 34 35* 46* 47 55 73* 87* 109*
                                                                                  111 112*
com_err_                        000034 constant        entry                    external dcl 3-8 ref 35 48 87 112
current_size              1     000010 internal static fixed bin(24,0)          level 2 dcl 162 set ref 58*
descriptor                3     000010 internal static structure                level 2 dcl 162
device_type               3     000010 internal static bit(6)                   level 3 packed unaligned dcl 162 set ref 59*
divide                                                 builtin function         dcl 145 ref 43 57 61 107 108
drl_abort_code                         parameter       fixed bin(18,0)          dcl 29 set ref 14 31* 117* 120* 126*
error_table_$rqover             000014 external static fixed bin(35,0)          dcl 146 ref 111
file_size                76     000044 external static fixed bin(30,0)          array level 3 dcl 4-6 ref 104 108 121
fill                      3(21) 000010 internal static bit(1)                   level 3 packed unaligned dcl 162 set ref 56*
fixed_bin11                            based           fixed bin(11,0)          unaligned dcl 147 set ref 70*
fn                              000110 automatic       fixed bin(24,0)          dcl 148 set ref 46* 71 73* 93 101 104 108 109* 121
                                                                                  132 132 134
fnp                             000111 automatic       picture(2)               unaligned dcl 149 set ref 71* 73
fnps                                   based           char(2)                  unaligned dcl 150 ref 73
gcos_status                     000102 automatic       structure                level 1 dcl 83 set ref 73 73 87*
gseg                            000112 automatic       pointer                  initial dcl 151 set ref 32* 33* 35* 137 151*
gtss_aft_$add                   000036 constant        entry                    external dcl 3-26 ref 46
gtss_dfd_ext_$disk_file_data    000044 external static structure                array level 1 dcl 4-6
gtss_disk                       000044 external static structure                array level 2 dcl 4-6
gtss_ext_$aft                   000032 external static structure                level 1 dcl 2-78
gtss_ext_$gtss_slave_area_seg   000024 external static pointer                  array dcl 2-20 ref 32
gtss_ext_$pdir                  000026 external static varying char(168)        dcl 2-24 ref 73
gtss_ext_$stack_level_          000030 external static fixed bin(17,0)          dcl 2-31 ref 32
gtss_file_attributes                   based           structure                level 1 dcl 1-11
gtss_file_attributes_ptr        000120 automatic       pointer                  initial dcl 1-9 set ref 1-9*
gtss_ios_change_size_           000040 constant        entry                    external dcl 3-130 ref 109
gtss_ios_open_                  000042 constant        entry                    external dcl 3-135 ref 73
hcs_$status_mins                000016 constant        entry                    external dcl 152 ref 33
indicators               70     000044 external static structure                array level 3 dcl 4-6
l                               000114 automatic       fixed bin(24,0)          dcl 153 set ref 43* 57 104 107 121* 137 137
link_size                       000115 automatic       fixed bin(24,0)          dcl 154 set ref 57* 58 66 66 107* 108
llink_flag                3(18) 000010 internal static bit(1)                   level 3 packed unaligned dcl 162 set ref 60*
m                                      based           char                     unaligned dcl 155 set ref 137* 137
max_size                        000010 internal static fixed bin(24,0)          level 2 dcl 162 set ref 61*
mode                      3(19) 000010 internal static bit(1)                   level 3 packed unaligned dcl 162 set ref 63*
msf                      70     000044 external static bit(1)                   array level 4 packed unaligned dcl 4-6 ref 132
msf_array_ptr            64     000044 external static pointer                  array level 3 dcl 4-6 ref 132
msf_components                         based           pointer                  array dcl 156 ref 132
non_null                  2     000010 internal static bit(1)                   level 3 packed unaligned dcl 162 set ref 64*
null                                                   builtin function         dcl 157 ref 142 151 1-9
perm                      3(20) 000010 internal static bit(1)                   level 3 packed unaligned dcl 162 set ref 65*
permissions              71     000044 external static structure                array level 3 dcl 4-6
single_segment_ptr       66     000044 external static pointer                  array level 3 dcl 4-6 ref 134
size                      3(22) 000010 internal static bit(14)                  level 3 packed unaligned dcl 162 set ref 66* 68*
size_change                     000100 automatic       fixed bin(24,0)          dcl 30 set ref 108* 109*
status                          000116 automatic       fixed bin(24,0)          dcl 158 set ref 109* 110
sys_info$max_seg_size           000020 external static fixed bin(35,0)          dcl 159 ref 61
unique_chars_                   000022 constant        entry                    external dcl 160 ref 73
used                    154     000032 external static bit(1)                   array level 3 packed unaligned dcl 2-78 set ref 93*
user_attr                 2(01) 000010 internal static bit(35)                  level 3 packed unaligned dcl 162 set ref 69*
user_attributes           2     000010 internal static structure                level 2 dcl 162
words_block               3(06) 000010 internal static bit(12)                  level 3 packed unaligned dcl 162 set ref 70
write                    71(02) 000044 external static bit(1)                   array level 4 packed unaligned dcl 4-6 ref 101

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
gtss_CFP_abort_                 000000 constant        entry                    external dcl 3-9
gtss_CFP_break_                 000000 constant        entry                    external dcl 3-10
gtss_CFP_input_                 000000 constant        entry                    external dcl 3-11
gtss_CFP_output_                000000 constant        entry                    external dcl 3-12
gtss_abandon_CFP_               000000 constant        entry                    external dcl 3-13
gtss_abort_dump_                000000 constant        entry                    external dcl 3-14
gtss_abort_subsystem_           000000 constant        entry                    external dcl 3-15
gtss_abort_subsystem_$not_imp   000000 constant        entry                    external dcl 3-16
gtss_abs_$abs_equiv             000000 constant        entry                    external dcl 3-19
gtss_abs_$cpu_runout            000000 constant        entry                    external dcl 3-20
gtss_abs_$create_absin          000000 constant        entry                    external dcl 3-21
gtss_abs_$dabt_check            000000 constant        entry                    external dcl 3-22
gtss_abs_$get_drm               000000 constant        entry                    external dcl 3-24
gtss_abs_$get_id                000000 constant        entry                    external dcl 3-23
gtss_abs_login_banner_          000000 constant        entry                    external dcl 3-17
gtss_abs_logout_banner_         000000 constant        entry                    external dcl 3-18
gtss_adjust_size_               000000 constant        entry                    external dcl 3-25
gtss_aft_$delete                000000 constant        entry                    external dcl 3-27
gtss_aft_$find                  000000 constant        entry                    external dcl 3-28
gtss_aft_$initialize            000000 constant        entry                    external dcl 3-29
gtss_ascii_bcd_                 000000 constant        entry                    external dcl 3-30
gtss_attributes_mgr_$get        000000 constant        entry                    external dcl 3-31
gtss_attributes_mgr_$set        000000 constant        entry                    external dcl 3-32
gtss_bcd_ascii_                 000000 constant        entry                    external dcl 3-33
gtss_bcd_ascii_$lc              000000 constant        entry                    external dcl 3-34
gtss_break_vector_              000000 constant        entry                    external dcl 3-35
gtss_break_vector_$drl_in_progress
                                000000 constant        entry                    external dcl 3-36
gtss_break_vector_$status       000000 constant        entry                    external dcl 3-37
gtss_build_                     000000 constant        entry                    external dcl 3-38
gtss_com_err_                   000000 constant        entry                    external dcl 3-39
gtss_derail_processor_          000000 constant        entry                    external dcl 3-40
gtss_derail_processor_$set      000000 constant        entry                    external dcl 3-41
gtss_dq_$catp                   000000 constant        entry                    external dcl 3-42
gtss_dq_$create                 000000 constant        entry                    external dcl 3-43
gtss_dq_$dibp                   000000 constant        entry                    external dcl 3-44
gtss_dq_$entries_info           000000 constant        entry                    external dcl 3-45
gtss_dq_$hdrp                   000000 constant        entry                    external dcl 3-46
gtss_dq_$mod_js                 000000 constant        entry                    external dcl 3-47
gtss_dq_$open_exc               000000 constant        entry                    external dcl 3-48
gtss_dq_$open_gen               000000 constant        entry                    external dcl 3-49
gtss_drl_abort_                 000000 constant        entry                    external dcl 3-50
gtss_drl_addmem_                000000 constant        entry                    external dcl 3-51
gtss_drl_callss_                000000 constant        entry                    external dcl 3-52
gtss_drl_corfil_                000000 constant        entry                    external dcl 3-53
gtss_drl_defil_                 000000 constant        entry                    external dcl 3-54
gtss_drl_defil_$subr            000000 constant        entry                    external dcl 3-55
gtss_drl_dio_                   000000 constant        entry                    external dcl 3-56
gtss_drl_drlimt_                000000 constant        entry                    external dcl 3-57
gtss_drl_drlsav_                000000 constant        entry                    external dcl 3-58
gtss_drl_filact_                000000 constant        entry                    external dcl 3-59
gtss_drl_filsp_                 000000 constant        entry                    external dcl 3-60
gtss_drl_grow_                  000000 constant        entry                    external dcl 3-61
gtss_drl_gwake_                 000000 constant        entry                    external dcl 3-62
gtss_drl_jsts_                  000000 constant        entry                    external dcl 3-63
gtss_drl_kin_                   000000 constant        entry                    external dcl 3-64
gtss_drl_kotnow_                000000 constant        entry                    external dcl 3-65
gtss_drl_kotnow_$gtss_drl_kout_ 000000 constant        entry                    external dcl 3-66
gtss_drl_koutn_                 000000 constant        entry                    external dcl 3-67
gtss_drl_morlnk_                000000 constant        entry                    external dcl 3-68
gtss_drl_msub_                  000000 constant        entry                    external dcl 3-69
gtss_drl_objtim_                000000 constant        entry                    external dcl 3-70
gtss_drl_part_                  000000 constant        entry                    external dcl 3-71
gtss_drl_pasaft_                000000 constant        entry                    external dcl 3-72
gtss_drl_pasdes_                000000 constant        entry                    external dcl 3-73
gtss_drl_pasust_                000000 constant        entry                    external dcl 3-74
gtss_drl_pdio_                  000000 constant        entry                    external dcl 3-75
gtss_drl_prgdes_                000000 constant        entry                    external dcl 3-76
gtss_drl_pseudo_                000000 constant        entry                    external dcl 3-77
gtss_drl_relmem_                000000 constant        entry                    external dcl 3-78
gtss_drl_restor_                000000 constant        entry                    external dcl 3-79
gtss_drl_retfil_                000000 constant        entry                    external dcl 3-80
gtss_drl_return_                000000 constant        entry                    external dcl 3-81
gtss_drl_rew_                   000000 constant        entry                    external dcl 3-82
gtss_drl_rstswh_                000000 constant        entry                    external dcl 3-83
gtss_drl_setlno_                000000 constant        entry                    external dcl 3-84
gtss_drl_setswh_                000000 constant        entry                    external dcl 3-85
gtss_drl_snumb_                 000000 constant        entry                    external dcl 3-86
gtss_drl_spawn_                 000000 constant        entry                    external dcl 3-87
gtss_drl_spawn_$gtss_drl_pasflr_
                                000000 constant        entry                    external dcl 3-88
gtss_drl_stoppt_                000000 constant        entry                    external dcl 3-89
gtss_drl_switch_                000000 constant        entry                    external dcl 3-90
gtss_drl_sysret_                000000 constant        entry                    external dcl 3-91
gtss_drl_t_cfio_                000000 constant        entry                    external dcl 3-92
gtss_drl_t_cmov_                000000 constant        entry                    external dcl 3-93
gtss_drl_t_err_                 000000 constant        entry                    external dcl 3-94
gtss_drl_t_goto_                000000 constant        entry                    external dcl 3-95
gtss_drl_t_linl_                000000 constant        entry                    external dcl 3-96
gtss_drl_t_rscc_                000000 constant        entry                    external dcl 3-97
gtss_drl_tapein_                000000 constant        entry                    external dcl 3-98
gtss_drl_task_                  000000 constant        entry                    external dcl 3-99
gtss_drl_termtp_                000000 constant        entry                    external dcl 3-100
gtss_drl_time_                  000000 constant        entry                    external dcl 3-101
gtss_drun_                      000000 constant        entry                    external dcl 3-102
gtss_dsd_lookup_                000000 constant        entry                    external dcl 3-103
gtss_dsd_process_               000000 constant        entry                    external dcl 3-104
gtss_edit_dsd_                  000000 constant        entry                    external dcl 3-105
gtss_expand_pathname_           000000 constant        entry                    external dcl 3-107
gtss_expand_pathname_$verify_umc
                                000000 constant        entry                    external dcl 3-108
gtss_ext_$CFP_bits                     external static structure                level 1 dcl 2-37
gtss_ext_$SYstarstar_file_no           external static fixed bin(24,0)          dcl 2-33
gtss_ext_$aem                          external static fixed bin(17,0)          dcl 2-8
gtss_ext_$bad_drl_rtrn                 external static label variable           dcl 2-9
gtss_ext_$com_reg                      external static structure                level 1 dcl 2-45
gtss_ext_$db                           external static bit(1)                   array unaligned dcl 2-10
gtss_ext_$deferred_catalogs_ptr        external static pointer                  dcl 2-11
gtss_ext_$dispose_of_drl               external static label variable           dcl 2-12
gtss_ext_$drl_rtrn                     external static label variable           array dcl 2-13
gtss_ext_$drm_path                     external static char(168)                unaligned dcl 2-14
gtss_ext_$drun_jid                     external static char(5)                  unaligned dcl 2-15
gtss_ext_$event_channel                external static fixed bin(71,0)          dcl 2-16
gtss_ext_$fast_lib                     external static structure                level 1 dcl 2-98
gtss_ext_$finished                     external static label variable           dcl 2-17
gtss_ext_$flags                        external static structure                level 1 dcl 2-60
gtss_ext_$gdb_name                     external static char(8)                  unaligned dcl 2-18
gtss_ext_$get_line                     external static entry variable           dcl 2-19
gtss_ext_$hcs_work_area_ptr            external static pointer                  dcl 2-21
gtss_ext_$homedir                      external static char(64)                 unaligned dcl 2-22
gtss_ext_$last_k_was_out               external static bit(1)                   dcl 2-23
gtss_ext_$mcfc                         external static structure                level 1 dcl 2-109
gtss_ext_$popup_from_pi                external static label variable           dcl 2-25
gtss_ext_$ppt                          external static pointer                  dcl 2-94
gtss_ext_$process_type                 external static fixed bin(17,0)          dcl 2-26
gtss_ext_$put_chars                    external static entry variable           dcl 2-27
gtss_ext_$restart_from_pi              external static label variable           dcl 2-28
gtss_ext_$restart_seg_ptr              external static pointer                  dcl 2-29
gtss_ext_$sig_ptr                      external static pointer                  dcl 2-30
gtss_ext_$statistics                   external static structure                level 1 dcl 2-72
gtss_ext_$suspended_process            external static bit(1)                   unaligned dcl 2-32
gtss_ext_$user_id                      external static varying char(26)         dcl 2-34
gtss_ext_$work_area_ptr                external static pointer                  dcl 2-35
gtss_fault_processor_           000000 constant        entry                    external dcl 3-109
gtss_fault_processor_$timer_runout
                                000000 constant        entry                    external dcl 3-111
gtss_filact_error_status_       000000 constant        entry                    external dcl 3-112
gtss_filact_funct02_            000000 constant        entry                    external dcl 3-113
gtss_filact_funct03_            000000 constant        entry                    external dcl 3-114
gtss_filact_funct04_            000000 constant        entry                    external dcl 3-115
gtss_filact_funct05_            000000 constant        entry                    external dcl 3-116
gtss_filact_funct08_            000000 constant        entry                    external dcl 3-117
gtss_filact_funct10_            000000 constant        entry                    external dcl 3-118
gtss_filact_funct11_            000000 constant        entry                    external dcl 3-119
gtss_filact_funct14_            000000 constant        entry                    external dcl 3-120
gtss_filact_funct18_            000000 constant        entry                    external dcl 3-121
gtss_filact_funct19_            000000 constant        entry                    external dcl 3-122
gtss_filact_funct21_            000000 constant        entry                    external dcl 3-123
gtss_filact_funct22_            000000 constant        entry                    external dcl 3-124
gtss_find_cond_frame_           000000 constant        entry                    external dcl 3-110
gtss_interp_prim_               000000 constant        entry                    external dcl 3-126
gtss_interp_prim_$callss        000000 constant        entry                    external dcl 3-127
gtss_interp_prim_$sysret        000000 constant        entry                    external dcl 3-128
gtss_interp_prim_$t_goto        000000 constant        entry                    external dcl 3-129
gtss_ios_close_                 000000 constant        entry                    external dcl 3-131
gtss_ios_exchange_names_        000000 constant        entry                    external dcl 3-132
gtss_ios_initialize_            000000 constant        entry                    external dcl 3-133
gtss_ios_io_                    000000 constant        entry                    external dcl 3-134
gtss_ios_position_              000000 constant        entry                    external dcl 3-136
gtss_mcfc_$close                000000 constant        entry                    external dcl 3-139
gtss_mcfc_$delete               000000 constant        entry                    external dcl 3-137
gtss_mcfc_$open                 000000 constant        entry                    external dcl 3-138
gtss_mcfc_empty                 000000 constant        entry                    external dcl 3-106
gtss_mcfc_init_                 000000 constant        entry                    external dcl 3-125
gtss_read_starCFP_              000000 constant        entry                    external dcl 3-140
gtss_read_starCFP_$last_os      000000 constant        entry                    external dcl 3-141
gtss_run_subsystem_             000000 constant        entry                    external dcl 3-142
gtss_run_subsystem_$finish      000000 constant        entry                    external dcl 3-143
gtss_run_subsystem_$restor      000000 constant        entry                    external dcl 3-144
gtss_run_subsystem_$restor_perm 000000 constant        entry                    external dcl 3-145
gtss_set_slave_                 000000 constant        entry                    external dcl 3-146
gtss_set_slave_$load_bar        000000 constant        entry                    external dcl 3-147
gtss_update_safe_store_         000000 constant        entry                    external dcl 3-148
gtss_verify_access_             000000 constant        entry                    external dcl 3-149
gtss_verify_access_$check_forced_access
                                000000 constant        entry                    external dcl 3-150
gtss_write_starCFP_             000000 constant        entry                    external dcl 3-151

NAME DECLARED BY EXPLICIT CONTEXT.
gtss_abort_dump_                000103 constant        entry                    external dcl 14

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 70 73 73 73 73 73
bit                                                    builtin function         ref 66
substr                                                 builtin function         ref 66

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1104        1152     710        1114
Length      1434     710        46         245     173           4

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gtss_abort_dump_                    166 external procedure  is an external procedure.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 abrt_attributes_block       gtss_abort_dump_

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gtss_abort_dump_         000100 size_change                 gtss_abort_dump_
                         000102 gcos_status                 gtss_abort_dump_
                         000104 abrt_ptr                    gtss_abort_dump_
                         000106 bc                          gtss_abort_dump_
                         000107 code                        gtss_abort_dump_
                         000110 fn                          gtss_abort_dump_
                         000111 fnp                         gtss_abort_dump_
                         000112 gseg                        gtss_abort_dump_
                         000114 l                           gtss_abort_dump_
                         000115 link_size                   gtss_abort_dump_
                         000116 status                      gtss_abort_dump_
                         000120 gtss_file_attributes_ptr    gtss_abort_dump_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_cs            cat_realloc_cs      call_ext_out_desc   call_ext_out        return              shorten_stack
ext_entry           divide_fx3

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      gtss_aft_$add                 gtss_ios_change_size_         gtss_ios_open_
hcs_$status_mins              unique_chars_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$rqover           gtss_dfd_ext_$disk_file_data  gtss_ext_$aft                 gtss_ext_$gtss_slave_area_seg
gtss_ext_$pdir                gtss_ext_$stack_level_        sys_info$max_seg_size




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     14 000100       142 000110       151 000112    1    9 000113        31 000114        32 000117        33 000124
     34 000142        35 000144        41 000202        43 000203        46 000206        47 000223        48 000226
     53 000261        55 000262        56 000264        57 000267        58 000273        59 000275        60 000277
     61 000301        63 000310        64 000312        65 000314        66 000316        68 000333        69 000335
     70 000337        71 000341        73 000351        86 000451        87 000456        93 000514        94 000522
     96 000523       101 000524       104 000534       107 000537       108 000543       109 000553       110 000573
    111 000575       112 000601       117 000632       118 000635       120 000636       121 000641       124 000646
    126 000647       127 000652       132 000653       134 000667       137 000671       138 000677


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
