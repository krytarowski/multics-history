	COMPILATION LISTING OF SEGMENT imft_data_
	Compiled by: Multics PL/I Compiler, Release 27b, of September 15, 1981
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 05/27/82  1634.1 mst Thu
	    Options: table map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 
        7 
        8 /* Constants and static data used internally by the Inter-Multics File Transfer (IMFT) Facility */
        9 
       10 /* Created:  May 1982 by G. Palter */
       11 
       12 /* format: style4,delnl,insnl,ifthenstmt,ifthen */
       13 
       14 
       15 imft_data_:
       16      procedure () options (variable);
       17 
       18 
       19 dcl  1 imft_constants aligned,			/* the constant data */
       20        2 default_queue_dirname character (168);
       21 
       22 dcl  1 imft_static aligned,				/* static variables (may be changed during testing) */
       23        2 queue_dirname character (168);
       24 
       25 dcl  1 cds_data aligned like cds_args;
       26 
       27 dcl  code fixed binary (35);
       28 
       29 dcl  IMFT_DATA_ character (32) static options (constant) initial ("imft_data_");
       30 
       31 dcl  com_err_ entry () options (variable);
       32 dcl  create_data_segment_ entry (pointer, fixed binary (35));
       33 
       34 dcl  (addr, currentsize, null, string) builtin;
       35 
       36 
       37 	imft_constants.default_queue_dirname = ">daemon_dir_dir>io_daemon_dir";
       38 
       39 	imft_static.queue_dirname = imft_constants.default_queue_dirname;
       40 
       41 	cds_data.sections (1).p = addr (imft_constants);
       42 	cds_data.sections (1).len = currentsize (imft_constants);
       43 	cds_data.sections (1).struct_name = "imft_constants";
       44 
       45 	cds_data.sections (2).p = addr (imft_static);
       46 	cds_data.sections (2).len = currentsize (imft_static);
       47 	cds_data.sections (2).struct_name = "imft_static";
       48 
       49 	cds_data.seg_name = IMFT_DATA_;
       50 	cds_data.num_exclude_names = 0;
       51 	cds_data.exclude_array_ptr = null ();
       52 
       53 	string (cds_data.switches) = ""b;
       54 	cds_data.switches.have_text = "1"b;		/* have constants ... */
       55 	cds_data.switches.have_static = "1"b;		/* ... and static data */
       56 
       57 	call create_data_segment_ (addr (cds_data), code);
       58 	if code ^= 0 then call com_err_ (code, IMFT_DATA_);
       59 
       60 	return;
       61 
       62 /**/
       63 
  1     1 /* BEGIN INCLUDE FILE cds_args.incl.pl1 */
  1     2 
  1     3 dcl 1 cds_args based aligned,
  1     4     2 sections (2),
  1     5       3 p ptr,					/* pointer to data for text/static section */
  1     6       3 len fixed bin (18),				/* size of text/static section */
  1     7       3 struct_name char (32),			/* name of declared structure for this section */
  1     8     2 seg_name char (32),				/* name to create segment by */
  1     9     2 num_exclude_names fixed bin,			/* number of names in exclude array */
  1    10     2 exclude_array_ptr ptr,				/* pointer to array of exclude names */
  1    11     2 switches,					/* control switches */
  1    12       3 defs_in_link bit (1) unal,			/* says put defs in linkage */
  1    13       3 separate_static bit (1) unal,			/* says separate static section is wanted */
  1    14       3 have_text bit (1) unal,			/* ON if text section given */
  1    15       3 have_static bit (1) unal,			/* ON if static section given */
  1    16       3 pad bit (32) unal;
  1    17 
  1    18 dcl  exclude_names (1) char (32) based;			/* pointed to be cds_args.exclude_array_ptr */
  1    19 
  1    20 /* END INCLUDE FILE cds_args.incl.pl1 */
       64 
       65 
       66      end imft_data_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/27/82  1552.3  !BBBJMBPHjdXGMP.pl1               >spec>on>05/27/82>imft_data_.cds
64           1    04/01/76  2209.5  cds_args.incl.pl1                 >ldd>include>cds_args.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
IMFT_DATA_                      000000 constant        char(32)                 initial unaligned dcl 29 set ref 49 58*
addr                                                   builtin function         dcl 34 ref 41 45 57 57
cds_args                               based           structure                level 1 dcl 1-3
cds_data                        000224 automatic       structure                level 1 dcl 25 set ref 57 57
code                            000271 automatic       fixed bin(35,0)          dcl 27 set ref 57* 58 58*
com_err_                        000012 constant        entry                    external dcl 31 ref 58
create_data_segment_            000014 constant        entry                    external dcl 32 ref 57
currentsize                                            builtin function         dcl 34 ref 42 46
default_queue_dirname           000100 automatic       char(168)                level 2 dcl 19 set ref 37* 39
exclude_array_ptr        42     000224 automatic       pointer                  level 2 dcl 25 set ref 51*
have_static              44(03) 000224 automatic       bit(1)                   level 3 packed unaligned dcl 25 set ref 55*
have_text                44(02) 000224 automatic       bit(1)                   level 3 packed unaligned dcl 25 set ref 54*
imft_constants                  000100 automatic       structure                level 1 dcl 19 set ref 41 42
imft_static                     000152 automatic       structure                level 1 dcl 22 set ref 45 46
len                       2     000224 automatic       fixed bin(18,0)          array level 3 dcl 25 set ref 42* 46*
null                                                   builtin function         dcl 34 ref 51
num_exclude_names        40     000224 automatic       fixed bin(17,0)          level 2 dcl 25 set ref 50*
p                               000224 automatic       pointer                  array level 3 dcl 25 set ref 41* 45*
queue_dirname                   000152 automatic       char(168)                level 2 dcl 22 set ref 39*
sections                        000224 automatic       structure                array level 2 dcl 25
seg_name                 30     000224 automatic       char(32)                 level 2 dcl 25 set ref 49*
string                                                 builtin function         dcl 34 set ref 53*
struct_name               3     000224 automatic       char(32)                 array level 3 dcl 25 set ref 43* 47*
switches                 44     000224 automatic       structure                level 2 dcl 25 set ref 53*

NAME DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
exclude_names                          based           char(32)                 array unaligned dcl 1-18

NAME DECLARED BY EXPLICIT CONTEXT.
imft_data_                      000034 constant        entry                    external dcl 15

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       204         222     131         214
Length      1210     131        16         751      52           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
imft_data_                          204 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
imft_data_               000100 imft_constants              imft_data_
                         000152 imft_static                 imft_data_
                         000224 cds_data                    imft_data_
                         000271 code                        imft_data_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      create_data_segment_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     15 000033        37 000041        39 000044        41 000047        42 000051        43 000053        45 000056
     46 000060        47 000061        49 000064        50 000067        51 000070        53 000072        54 000073
     55 000075        57 000077        58 000111        60 000130


Object Segment >spec>on>05/27/82>imft_data_
Created on 05/27/82  1634.1 mst Thu
by Holmstedt.SysMaint.m
using create_data_segment_, Version II of Wednesday, May 13, 1981

        Object    Text    Defs    Link    Symb  Static
Start        0       0      52     112     174     122
Length     340      52      40      62     130      52


4 Definitions:


segname:    imft_data_

text|0          default_queue_dirname
link|10         queue_dirname
symb|0          symbol_table


No Links.





                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
