	COMPILATION LISTING OF SEGMENT cobol_repl3
	Compiled by: Multics PL/I Compiler, Release 31b, of April 24, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 05/24/89  1015.8 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
       17*     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
       18*     MCR8060 cobol_repl3.pl1 Reformatted code to new Cobol standard.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 /* Modified on 10/16/79 by MHD, [4.1-1], increase size of key66area to 200 pointers */
       23 /* Modified on 10/16/78 by RAL, [3.0-1], alternate record keys for MR7.0 */
       24 /* Modified on 10/07/77 by GM to fix check on  qualified search  keys */
       25 /* Modified on 10/06/77 by FH  to prevent abort when search key not in table */
       26 /* 9/19/77, FCH, leveling diags added */
       27 /* Modified on 06/01/77 by GM to fix test on catalog name and additional catalog name.	*/
       28 /* Modified on 03/01/77 by Bob Chang to fix the bug for deletion of name table  buffer.	*/
       29 /* Modified on 02/24/77 by Bob Chang to fix the bug rename clause with qualification.	*/
       30 /* Modified on 01/26/77 by ORN to eliminate name table buffer and process directly from name table */
       31 /* Modified on 12/30/76 by ORN to correct bad diag for OCCURS DEP ON range error and clean up fixed bins */
       32 /* Modified on 11/22/76 by ORN to set cobol_$same_sort_merge_proc when applicable */
       33 /* Modified on 11/18/76 by ORN to eliminate cobol_version_unique include file */
       34 /* Modified on 11/16/76 by ORN to distinguish between sort and merge in setting procname.repl_bits */
       35 /* Modified since Version 2.0 */
       36 
       37 /* format: style3 */
       38 cobol_repl3:
       39      proc (mem_size, ntbuff_ptr);
       40 
       41 /*  DECLARATIONS OF THE PARAMETERS  */
       42 
       43 
       44 dcl	mem_size		fixed bin (24);		/*  contains the number of characters allocated to the replacement name table buffer 
       45*		for this execution of replacement  (input)  */
       46 
       47 dcl	ntbuff_ptr	ptr;			/*  contains a pointer to the buffer space used by replacement as
       48*		the name table buffer.  (input)  */
       49 
       50 dcl	(linage_ptr, name_ptr, ft_ptr, fkey_ptr)
       51 			ptr;
       52 dcl	com2_ptr		ptr;
       53 
       54 /*  INTERNAL VARIABLES  */
       55 
       56 dcl /*  pointers used in this procedure  */
       57 	(ntptr, ntprevptr, ntshiftptr, ntendptr, auxptr1)
       58 			ptr;
       59 
       60 /*  STRING BASE TABLE  */
       61 dcl	arrpntr		(512) ptr;
       62 
       63 /*  name stack pointer table  */
       64 dcl	ptrtable		(50) ptr;
       65 
       66 dcl	hashno		fixed bin;
       67 dcl	s		fixed bin (24);
       68 
       69 
       70 dcl	work_ptr		ptr;
       71 dcl	ntptr2		ptr;
       72 dcl	odo_ptr		ptr;
       73 
       74 /*  name table buffer  */
       75 dcl	1 anarea		based (ntbuff_ptr),
       76 	  2 dummy_ptr	ptr,
       77 	  2 ntarea	char (64000);
       78 dcl	1 tntarea		based (ntbuff_ptr),
       79 	  2 dumm_ptr	ptr,
       80 	  2 tarea		(64000) char (1);
       81 dcl	1 bit_ntarea	based (ntbuff_ptr),
       82 	  2 dummy_pntr	ptr,
       83 	  2 ntarea_bits	bit (64000);
       84 
       85 /*  DECLARATION OF EXTERNAL ENTRIES  */
       86 dcl	ioa_		entry options (variable);	/* [3.0-1] */
       87 dcl	cobol_usrwd	entry (ptr, fixed bin, ptr, fixed bin, ptr, bit (1), bit (1), bit (1), fixed bin, ptr);
       88 dcl	(diag_no, diag_count, sectno, ln, counter, topstack)
       89 			fixed bin;
       90 dcl	(stackptr, stackbegptr)
       91 			ptr;
       92 dcl	(name_stack_overflow, too_many_qualifiers, was_found, not_found)
       93 			bit (1);
       94 dcl	cobol_replb	entry (ptr, ptr);
       95 
       96 dcl	1 procname	based (ntptr),
       97 	  2 size		fixed bin,
       98 	  2 line		fixed bin,
       99 	  2 column	fixed bin,
      100 	  2 type		fixed bin,
      101 	  2 string_ptr	pointer,
      102 	  2 prev_rec	pointer,
      103 	  2 info1		bit (1),
      104 	  2 info2		bit (1),
      105 	  2 info3		bit (1),
      106 	  2 info4		bit (1),
      107 	  2 info5		bit (1),
      108 	  2 info6		bit (1),
      109 	  2 info7		bit (1),
      110 	  2 info8		bit (1),
      111 	  2 priority	char (2),
      112 	  2 repl_bits	bit (8),
      113 	  2 section_num	fixed bin,
      114 	  2 proc_num	fixed bin,
      115 	  2 def_line	fixed bin,
      116 	  2 length	fixed bin,
      117 	  2 name		char (30),
      118 	1 data_name	based (ntptr),
      119 	  2 size		fixed bin,
      120 	  2 line		fixed bin,
      121 	  2 column	fixed bin,
      122 	  2 type		fixed bin,
      123 	  2 string_ptr	pointer,
      124 	  2 prev_rec	pointer,
      125 	  2 info1		bit (1),
      126 	  2 info2		bit (1),
      127 	  2 info3		bit (1),
      128 	  2 info4		bit (5),
      129 	  2 def_line	fixed bin,
      130 	  2 level		fixed bin,
      131 	  2 linkage	fixed bin,
      132 	  2 file_num	fixed bin,
      133 	  2 size_rtn	fixed bin,
      134 	  2 length	fixed bin (24),
      135 	  2 places_left	fixed bin,
      136 	  2 places_right	fixed bin,
      137 	  2 descr_bit	bit (64),
      138 	  2 descr1	bit (8),
      139 	  2 seg_num	fixed bin,
      140 	  2 offset	fixed bin (24),
      141 	  2 init_ptr	fixed bin,
      142 	  2 edit_ptr	fixed bin,
      143 	  2 occurs_ptr	fixed bin,
      144 	  2 do_rec	char (5),
      145 	  2 do_bit	bit (8),
      146 	  2 max_red_size	fixed bin (24),
      147 	  2 name_size	fixed bin,
      148 	  2 name		char (30);
      149 
      150 
      151 
      152 
      153 dcl	save_last_line	fixed bin;
      154 dcl	save_last_column	fixed bin;
      155 dcl	repla_abort	bit (1);
      156 
      157 dcl	1 adiag		int static,
      158 	  2 size		fixed bin init (28),
      159 	  2 line		fixed bin,
      160 	  2 column	fixed bin,
      161 	  2 type		fixed bin init (5),
      162 	  2 run_number	fixed bin init (6),
      163 	  2 diag_number	fixed bin,
      164 	  2 info		bit (8) init ("00000000"b);
      165 dcl	1 temp_fld	based (ntptr),
      166 	  2 tempfld1	char (44),
      167 	  2 temp_desc	char (40),
      168 	  2 tempfld2	char (62);
      169 dcl	curr_work		ptr;
      170 dcl	stack		char (1000);
      171 dcl	temp_stack	(1000) char (1) based (addr (stack));
      172 
      173 dcl	addr		builtin;
      174 dcl	addrel		builtin;
      175 dcl	divide		builtin;
      176 dcl	fixed		builtin;
      177 dcl	mod		builtin;
      178 dcl	null		builtin;
      179 dcl	substr		builtin;
      180 dcl	unspec		builtin;
      181 
      182 dcl	(i, n, n1)	fixed bin;
      183 dcl	bname		char (30);
      184 dcl	cn1		char (4);
      185 dcl	template		char (recsize) based (ntptr);
      186 dcl	null_key		char (5) static options (constant) init ("00000");
      187 dcl	cobol_c_list	entry (ptr);
      188 dcl	cobol_read_ft_	entry (fixed bin, ptr);
      189 dcl	continue		bit (1);			/* [3.0-1] */
      190 dcl	type_two_sw	bit (1);			/* [3.0-1] */
      191 dcl	file_desc_1_area	char (4200);		/* [3.0-1] */
      192 dcl	1 file_info	based (fkey_ptr),		/* [3.0-1] */
      193 	  2 fill1		char (16),
      194 	  2 file_no	fixed bin,
      195 	  2 type		fixed bin,
      196 	  2 fill2		char (28),
      197 	  2 size		fixed bin (24),
      198 	  2 fill3		char (16),
      199 	  2 seg_num	fixed bin,
      200 	  2 offset	fixed bin (24);
      201 
      202 
      203 /*************************************/
      204 start:
      205 	file_desc_1_ptr = addr (file_desc_1_area);	/* [3.0-1] */
      206 	stackbegptr = addr (stack);
      207 	mcobol = "1"b;
      208 	mcobol_xref = fixed_common.options.xrn;
      209 	if mcobol_xref
      210 	then do;
      211 		cobol_$xref_bypass = "0"b;
      212 		token_count = 0;
      213 		chain_count = 0;
      214 	     end;
      215 
      216 	if fixed_common.rename_info ^= null_key
      217 	then call repl3a;				/* process renames */
      218 
      219 	do i = 1 to 512;
      220 	     arrpntr (i) = null ();
      221 	end;
      222 	ntprevptr = null ();
      223 	status = ""b;
      224 	do while (status = ""b);			/* until end of file */
      225 	     call cobol_vdwf_sget (cobol_ext_$cobol_name_fileno_ptr, status, ntptr, recsize, key1);
      226 	     if status = ""b
      227 	     then do;
      228 		     xref_ptr = addrel (ntptr, divide (recsize + 3, 4, 17, 0));
      229 		     xref_ptr -> xref_chain.first = 0;
      230 		     xref_ptr -> xref_chain.last = 0;
      231 		     data_name.info1 = "0"b;
      232 		     data_name.info2 = "0"b;
      233 		     data_name.info3 = "0"b;
      234 		     if procname.type ^= 7
      235 		     then do;
      236 			     data_name.info4 = "0"b;
      237 			end;
      238 		     else do;
      239 			     procname.type = 18;
      240 			     procname.repl_bits = "00000000"b;
      241 			end;
      242 		     n = size_TOKEN (procname.type) - 3;
      243 		     if mcobol_xref
      244 		     then do;
      245 			     token_count = token_count + 1;
      246 			     token_area.token_ptr (token_count) = ntptr;
      247 			     token_area.name_ptr (token_count) = addrel (ntptr, divide (n, 4, 17, 0));
      248 			end;			/* string name table entry */
      249 		     cn1 = substr (template, n, 4);
      250 		     n1 = fixed (unspec (cn1));
      251 		     bname = substr (template, n + 4, n1);
      252 		     hashno = 0;
      253 		     do i = 1 to n1;
      254 			hashno = hashno + fixed (unspec (substr (bname, i, 1)));
      255 		     end;
      256 		     hashno = mod (hashno, 512) + 1;
      257 		     procname.string_ptr = arrpntr (hashno);
      258 		     procname.prev_rec = ntprevptr;
      259 		     arrpntr (hashno) = ntptr;
      260 		     ntprevptr = ntptr;
      261 		     ntptr = addrel (ntptr, divide (recsize + 11, 8, 17, 0) * 2);
      262 		end;
      263 	     else ntendptr = addrel (ntptr, divide (recsize + 11, 8, 17, 0) * 2);
      264 	end;
      265 
      266 	if fixed_common.linage_info ^= null_key
      267 	then call repl3ln;				/* process linage info */
      268 	if fixed_common.odo_info ^= null_key
      269 	then call process_odo_keys;
      270 	if fixed_common.file_keys ^= null_key
      271 	then call process_file_keys;
      272 	if fixed_common.search_keys ^= null_key
      273 	then call repl3sk;
      274 	if fixed_common.sort_in_info ^= null_key
      275 	then call repl3s (fixed_common.sort_in_info, "1"b);
      276 	if fixed_common.sort_out_info ^= null_key
      277 	then call repl3s (fixed_common.sort_out_info, "0"b);
      278 
      279 	call cobol_replb (ntendptr, addr (arrpntr (1)));
      280 
      281 	return;
      282 
      283 /*************************************/
      284 repl3a:
      285      proc;
      286 dcl	cm_ptr		ptr;
      287 dcl	(key, next_key, prev_key)
      288 			char (5);
      289 dcl	1 auser_wd	based (stackptr),
      290 	  2 size		fixed bin,
      291 	  2 line		fixed bin,
      292 	  2 column	fixed bin,
      293 	  2 type		fixed bin,
      294 	  2 info_bit	bit (8),
      295 	  2 length	fixed bin,
      296 	  2 name		char (30);
      297 dcl	rename_tempsize	fixed bin;
      298 dcl	rename_tempname	char (30);
      299 dcl	recsize2		fixed bin;
      300 dcl	obj2_key		char (5);
      301 dcl	(obj1_level, obj2_level, obj1_length, obj2_length, obj1_seg_num, obj1_offset, obj2_offset, obj1_name_size)
      302 			fixed bin;
      303 dcl	(obj1_init_ptr, obj1_edit_ptr, obj1_pleft, obj1_pright)
      304 			fixed bin;
      305 dcl	extension_bit	bit (1);
      306 dcl	extension_size	fixed bin;
      307 dcl	extension_temp	char (434);
      308 dcl	n		fixed bin;
      309 dcl	template		char (recsize) based (ntptr);
      310 dcl	(obj1_descr_bit, obj2_descr_bit)
      311 			bit (64);
      312 dcl	obj1_flag		bit (1);
      313 dcl	(obj1ptr, obj2ptr, rename_ptr)
      314 			ptr;
      315 dcl	key66_area	char (1000);		/*[4.1-1]*/
      316 dcl	k66area		(1000) char (1) based (addr (key66_area));
      317 dcl	keyvalue		char (5) based (key66ptr);
      318 dcl	key66ptr		ptr;
      319 dcl	n66		fixed bin;
      320 
      321 	obj1_flag = "0"b;
      322 	prev_key = null_key;			/* Get first rename_rec in common */
      323 	call cobol_vdwf_dget (cobol_ext_$cobol_cmfp, status, cm_ptr, ln, fixed_common.rename_info);
      324 la:
      325 	com2_ptr = cm_ptr;
      326 	next_key = rename_rec.next;
      327 	key = rename_rec.rec_no_66;
      328 	obj2_key = rename_rec.obj2;
      329 	rename_tempsize = rename_rec.size;
      330 	substr (rename_tempname, 1, rename_tempsize) = rename_rec.name;
      331 
      332 /* Loading name_table buff */
      333 	if key ^= prev_key
      334 	then do;
      335 		key66ptr = addr (key66_area);
      336 		n66 = 1;
      337 		call load_01_66;
      338 	     end;
      339 
      340 /* Get object_1 of the rename in common */
      341 
      342 	call cobol_vdwf_dget (cobol_ext_$cobol_cmfp, status, cm_ptr, ln, rename_rec.obj1);
      343 	obj1_flag = "1"b;
      344 la1:
      345 	counter = 0;
      346 	topstack = 1;
      347 	stackptr = stackbegptr;
      348 	name_stack_overflow = "0"b;
      349 	too_many_qualifiers = "0"b;
      350 	com2_ptr = cm_ptr;
      351 	auser_wd.length = obj_rec.size;
      352 	substr (auser_wd.name, 1, auser_wd.length) = substr (obj_rec.name, 1, auser_wd.length);
      353 	recsize2 = 24 + auser_wd.length;
      354 
      355 /* push name into stack */
      356 
      357 	call pushx;
      358 	if obj_rec.qual = null_key
      359 	then go to lb1;
      360 
      361 /* Get qualifier of rename object in common */
      362 
      363 	call cobol_vdwf_dget (cobol_ext_$cobol_cmfp, status, cm_ptr, ln, obj_rec.qual);
      364 la2:
      365 	com2_ptr = cm_ptr;
      366 	stackptr = addr (temp_stack (topstack));
      367 	auser_wd.length = qual_rec.size;
      368 	substr (auser_wd.name, 1, auser_wd.length) = substr (qual_rec.name, 1, auser_wd.length);
      369 	recsize2 = 24 + auser_wd.length;
      370 	topstack = topstack + recsize2 + 8 - mod (recsize2, 8);
      371 	counter = counter + 1;
      372 	ptrtable (counter) = stackptr;
      373 	if qual_rec.next = null_key
      374 	then go to lb1;
      375 
      376 /* Get next qualifier in common */
      377 
      378 	call cobol_vdwf_sget (cobol_ext_$cobol_cmfp, status, cm_ptr, ln, qual_rec.next);
      379 	go to la2;
      380 
      381 lb1:						/* Look up object of rename in name table buff */
      382 	call cobol_usrwd (addr (ptrtable (1)), counter, addr (arrpntr (1)), sectno, ntendptr, "0"b, was_found,
      383 	     not_found, diag_no, ntptr2);
      384 	if was_found
      385 	then do;
      386 		ntptr = ntptr2;
      387 		if substr (data_name.descr_bit, 42, 1) | substr (data_name.descr1, 2, 1)
      388 		then do;
      389 			adiag.diag_number = 26;
      390 			adiag.line = data_name.line;
      391 			adiag.column = data_name.column;
      392 			call issue_diag;
      393 		     end;
      394 		if obj1_flag
      395 		then do;
      396 			obj1_level = data_name.level;
      397 			obj1_length = data_name.length;
      398 			obj1_seg_num = data_name.seg_num;
      399 			obj1_offset = data_name.offset;
      400 			obj1_descr_bit = data_name.descr_bit;
      401 			obj1_pleft = data_name.places_left;
      402 			obj1_pright = data_name.places_right;
      403 			if substr (data_name.descr_bit, 10, 1) & obj2_key = null_key
      404 			then do;			/* only elementary item with init or edit extension needs  processing */
      405 				if data_name.init_ptr ^= 0 | data_name.edit_ptr ^= 0
      406 				then do;
      407 					extension_bit = "1"b;
      408 					obj1_name_size = data_name.name_size;
      409 					obj1_init_ptr = data_name.init_ptr;
      410 					obj1_edit_ptr = data_name.edit_ptr;
      411 					if obj1_init_ptr ^= 0
      412 					then do;
      413 						extension_size = data_name.size - obj1_init_ptr;
      414 						extension_temp =
      415 						     substr (template, obj1_init_ptr, extension_size);
      416 					     end;
      417 					else do;
      418 						extension_size = data_name.size - obj1_edit_ptr;
      419 						extension_temp =
      420 						     substr (template, obj1_edit_ptr, extension_size);
      421 					     end;
      422 				     end;
      423 			     end;
      424 		     end;
      425 		else do;
      426 			obj2_level = data_name.level;
      427 			obj2_length = data_name.length;
      428 			obj2_offset = data_name.offset;
      429 			obj2_descr_bit = data_name.descr_bit;
      430 		     end;
      431 	     end;
      432 	else do;
      433 		if diag_no = 0
      434 		then adiag.diag_number = 2;
      435 		else adiag.diag_number = diag_no;
      436 		adiag.line = obj_rec.line;
      437 		adiag.column = obj_rec.column;
      438 		call issue_diag;
      439 	     end;
      440 	if obj2_key = null_key
      441 	then go to lc1;
      442 
      443 /* Get object_2 of rename in common */
      444 
      445 	call cobol_vdwf_dget (cobol_ext_$cobol_cmfp, status, cm_ptr, ln, obj2_key);
      446 	obj2_key = null_key;
      447 	obj1_flag = "0"b;
      448 	go to la1;
      449 lc1:
      450 	counter = 0;
      451 	topstack = 1;
      452 	stackptr = stackbegptr;
      453 	name_stack_overflow = "0"b;
      454 	too_many_qualifiers = "0"b;
      455 	auser_wd.length = rename_tempsize;
      456 	substr (auser_wd.name, 1, rename_tempsize) = substr (rename_tempname, 1, rename_tempsize);
      457 	recsize2 = 24 + auser_wd.length;
      458 	call pushx;
      459 
      460 /* Look up 66 in name table buff */
      461 
      462 	call cobol_usrwd (addr (ptrtable (1)), counter, addr (arrpntr (1)), sectno, ntendptr, "0"b, was_found,
      463 	     not_found, diag_no, ntptr2);
      464 	if was_found
      465 	then do;
      466 		ntptr = ntptr2;
      467 		if obj1_level = 01 | obj1_level > 49
      468 		then do;
      469 			adiag.diag_number = 27;
      470 			adiag.line = data_name.line;
      471 			adiag.column = data_name.column;
      472 			call issue_diag;
      473 		     end;
      474 		if obj1_flag
      475 		then do;
      476 			data_name.length = obj1_length;
      477 			data_name.seg_num = obj1_seg_num;
      478 			data_name.offset = obj1_offset;
      479 			data_name.descr_bit = obj1_descr_bit;
      480 			data_name.places_left = obj1_pleft;
      481 			data_name.places_right = obj1_pright;
      482 			if extension_bit = "1"b
      483 			then do;
      484 				extension_bit = "0"b;
      485 				n = size_TOKEN (9) + 1 + data_name.name_size;
      486 				n = n + 4 - mod (n, 4);
      487 				n = n + 1;
      488 				if obj1_init_ptr ^= 0
      489 				then data_name.init_ptr = n;
      490 				if obj1_edit_ptr ^= 0
      491 				then data_name.edit_ptr = n;
      492 				substr (template, n, extension_size) = substr (extension_temp, 1, extension_size);
      493 			     end;
      494 		     end;
      495 		else do;
      496 			if obj2_level = 01 | obj2_level > 49
      497 			then do;
      498 				adiag.diag_number = 27;
      499 s_diag:
      500 				adiag.line = data_name.line;
      501 				adiag.column = data_name.column;
      502 				call issue_diag;
      503 				go to s_exit;
      504 			     end;
      505 			if obj1_offset ^< obj2_offset
      506 			then do;
      507 
      508 				adiag.diag_number = 28;
      509 				go to s_diag;
      510 			     end;
      511 			data_name.seg_num = obj1_seg_num;
      512 			data_name.offset = obj1_offset;
      513 			data_name.length = obj2_offset - obj1_offset + obj2_length;
      514 			substr (data_name.descr_bit, 1, 6) = substr (obj1_descr_bit, 1, 6);
      515 			substr (data_name.descr_bit, 9, 1) = "1"b;
      516 			substr (data_name.descr_bit, 20, 1) = "1"b;
      517 s_exit:
      518 		     end;
      519 	     end;
      520 	else do;
      521 		if diag_no = 0
      522 		then adiag.diag_number = 2;
      523 		else adiag.diag_number = diag_no;
      524 		adiag.line = data_name.line;
      525 		adiag.column = data_name.column;
      526 		call issue_diag;
      527 		obj1_flag = "0"b;
      528 		go to s_recover;
      529 	     end;
      530 	recsize = data_name.size;
      531 	call cobol_vdwf_dput (cobol_ext_$cobol_name_fileno_ptr, status, ntptr, recsize, keyvalue);
      532 s_recover:
      533 	n66 = n66 + 5;
      534 	key66ptr = addr (k66area (n66));
      535 	if next_key = null_key
      536 	then go to lc2;
      537 	prev_key = key;
      538 
      539 /* Get next rename in  common */
      540 
      541 	call cobol_vdwf_dget (cobol_ext_$cobol_cmfp, status, cm_ptr, ln, next_key);
      542 	go to la;
      543 lc2:
      544 	call cobol_vdwf_close (cobol_ext_$cobol_name_fileno_ptr, status, ntptr, 0);
      545 	call cobol_vdwf_open (cobol_ext_$cobol_name_fileno_ptr, status);
      546 
      547 /* Clear the name table buffer area if mcobol_xref, so cross-reference info
      548*	   at end of each name table buffer entry will initially be zero. */
      549 
      550 	if mcobol_xref
      551 	then substr (ntarea_bits, 1, 9 * s) = "0"b;
      552 
      553 	return;
      554 pushx:
      555      proc;
      556 	stackptr = addr (temp_stack (topstack));
      557 	topstack = topstack + recsize2 + 8 - mod (recsize2, 8);
      558 	counter = counter + 1;
      559 	ptrtable (counter) = stackptr;
      560      end pushx;
      561 
      562 load_01_66:
      563      proc;
      564 dcl	template		char (recsize) based (ntptr),
      565 	newrecord		char (recsize) based (ptr1),
      566 	(i, n, n1, n2)	fixed bin,
      567 	bname		char (30),
      568 	levlim		fixed bin,
      569 	tb_counter	fixed bin,
      570 	ptr1		ptr,
      571 	flag_66		bit (1);
      572 
      573 	flag_66 = "0"b;
      574 	s = 1;
      575 	do i = 1 to 512;
      576 	     arrpntr (i) = null ();
      577 	end;
      578 
      579 	ntptr = addr (ntarea);
      580 	ntprevptr = null ();
      581 	ntshiftptr = ntptr;
      582 l2:
      583 	call cobol_vdwf_dget (cobol_ext_$cobol_name_fileno_ptr, status, ntptr, recsize, key);
      584 
      585 l3:						/* stringnt */
      586 	n = size_TOKEN (procname.type) - 3;
      587 	cn1 = substr (template, n, 4);
      588 	n1 = fixed (unspec (cn1), 15);
      589 
      590 	bname = substr (template, n + 4, n1);
      591 
      592 	hashno = 0;
      593 	do i = 1 to n1;
      594 	     hashno = hashno + fixed (unspec (substr (bname, i, 1)), 15);
      595 	end;
      596 	hashno = mod (hashno, 512) + 1;
      597 	procname.string_ptr = arrpntr (hashno);
      598 	procname.prev_rec = ntprevptr;
      599 	ntprevptr = ntptr;
      600 	arrpntr (hashno) = ntptr;
      601 	levlim = data_name.level;
      602 	if levlim = 66
      603 	then do;
      604 		flag_66 = "1"b;
      605 		key66ptr = addr (k66area (n66));
      606 		keyvalue = key1;
      607 		n66 = n66 + 5;
      608 	     end;					/* stringnt */
      609 	call cobol_vdwf_sget (cobol_ext_$cobol_name_fileno_ptr, status, ntptr, recsize, key1);
      610 	if status ^= "0"b
      611 	then go to finish_up;
      612 
      613 	if flag_66
      614 	then do;
      615 		if levlim ^= 66
      616 		then go to finish_up;
      617 	     end;
      618 	go to l3;
      619 finish_up:
      620 	ntendptr = addrel (ntptr, divide (recsize + 11, 8, 17, 0) * 2);
      621 	ntptr = addr (ntarea);
      622 end1:
      623 	key66ptr = addr (key66_area);
      624 	n66 = 1;
      625 	return;
      626      end load_01_66;
      627      end repl3a;
      628 
      629 
      630 /* This procedure processes sort information */
      631 
      632 repl3s:
      633      proc (sort_info_key, input_proc);
      634 
      635 dcl	sort_info_key	char (5);
      636 dcl	input_proc	bit (1);
      637 dcl	sortnext		char (5);
      638 dcl	start_name	char (30);
      639 dcl	fill_sort_info	bit (1);
      640 dcl	not_done		bit (1);
      641 dcl	stop_sec_num	fixed bin;
      642 dcl	template		(200) char (1) based (work_ptr);
      643 dcl	snamearea		char (56);
      644 dcl	srtptr		ptr;
      645 dcl	1 srtname		based (srtptr),
      646 	  2 size		fixed bin,
      647 	  2 line		fixed bin,
      648 	  2 column	fixed bin,
      649 	  2 type		fixed bin,
      650 	  2 bit8		bit (8),
      651 	  2 slength	fixed bin,
      652 	  2 sname		char (30);
      653 
      654 	srtptr = addr (snamearea);
      655 	ptrtable (1) = srtptr;
      656 	sortnext = sort_info_key;
      657 	do while (sortnext ^= null_key);
      658 	     call cobol_vdwf_dget (cobol_ext_$cobol_cmfp, status, com2_ptr, recsize, sortnext);
      659 	     sortnext = s_ptr;
      660 	     fill_sort_info = ^(s_info1 & s_info2);
      661 	     work_ptr = addr (ntarea);		/* Set work ptr to start of name table buffer. */
      662 	     start_name = " ";
      663 	     stop_sec_num = 32767;			/* phoney high value */
      664 	     if ^s_info1
      665 	     then do;				/* Process start section name. */
      666 		     slength = s_start_size;
      667 		     sname = substr (s_start, 1, slength);
      668 		     start_name = sname;
      669 		     call cobol_usrwd (addr (ptrtable (1)), 1, addr (arrpntr (1)), 0, ntendptr, "1"b, was_found,
      670 			not_found, diag_no, ntptr);
      671 		     if was_found
      672 		     then do;
      673 			     s_info1 = "1"b;
      674 			     work_ptr = ntptr;	/* Set work ptr to start section entry in name table. */
      675 			     s_start_size = procname.section_num;
      676 			end;
      677 		end;
      678 	     if ^s_info2
      679 	     then do;				/* Process stop section name */
      680 		     if s_stop_size = 0
      681 		     then do;
      682 			     s_info2 = "1"b;
      683 			     stop_sec_num = s_start_size;
      684 			end;
      685 		     else do;
      686 			     slength = s_stop_size;
      687 			     sname = substr (s_stop, 1, slength);
      688 			     if sname = start_name
      689 			     then do;
      690 				     s_info2 = "1"b;
      691 				     s_stop_size = s_start_size;
      692 				     stop_sec_num = s_start_size;
      693 				end;
      694 			     else do;
      695 				     call cobol_usrwd (addr (ptrtable (1)), 1, addr (arrpntr (1)), 0, ntendptr,
      696 					"1"b, was_found, not_found, diag_no, ntptr);
      697 				     if was_found
      698 				     then do;
      699 					     s_info2 = "1"b;
      700 					     s_stop_size = procname.section_num;
      701 					     stop_sec_num = s_stop_size;
      702 					end;
      703 				end;
      704 			end;
      705 		end;
      706 	     if ^s_info3
      707 	     then do;				/* Process sort file name. */
      708 		     slength = s_srtfilename_size;
      709 		     sname = substr (s_srtfilename, 1, slength);
      710 		     call cobol_usrwd (addr (ptrtable (1)), 1, addr (arrpntr (1)), 0, ntendptr, "0"b, was_found,
      711 			not_found, diag_no, ntptr);
      712 		     if was_found
      713 		     then do;
      714 			     s_info3 = "1"b;
      715 			     s_srtfilename_size = ntptr -> fd_token.file_no;
      716 			end;
      717 		end;
      718 	     if fill_sort_info
      719 	     then do;
      720 		     not_done = "1"b;
      721 		     do while (not_done);
      722 			if work_ptr -> procname.section_num >= s_start_size
      723 			then do;
      724 				if s_info4
      725 				then substr (work_ptr -> procname.repl_bits, 4, 1) = "1"b;
      726 						/* MERGE */
      727 				else substr (work_ptr -> procname.repl_bits, 1, 1) = "1"b;
      728 						/*-11/16/76-*/
      729 				if input_proc
      730 				then substr (work_ptr -> procname.repl_bits, 2, 1) = "1"b;
      731 				else do;
      732 					substr (work_ptr -> procname.repl_bits, 3, 1) = "1"b;
      733 					if substr (work_ptr -> procname.repl_bits, 1, 1)
      734 					     & substr (work_ptr -> procname.repl_bits, 4, 1)
      735 					then cobol_$same_sort_merge_proc = "1"b;
      736 				     end;
      737 			     end;
      738 			work_ptr = addrel (work_ptr, divide (work_ptr -> procname.size + 11, 8, 17, 0) * 2);
      739 			if work_ptr = ntendptr
      740 			then not_done = "0"b;
      741 			else if work_ptr -> procname.type ^= 18
      742 			then not_done = "0"b;
      743 			else if work_ptr -> procname.section_num > stop_sec_num
      744 			then not_done = "0"b;
      745 		     end;
      746 		end;
      747 	end;
      748 
      749      end repl3s;
      750 
      751 repl3sk:
      752      proc;					/* process search keys */
      753 
      754 dcl	skptr		ptr;
      755 dcl	recsize2		fixed bin;
      756 dcl	1 auser_wd	based (stackptr),
      757 	  2 size		fixed bin,
      758 	  2 line		fixed bin,
      759 	  2 column	fixed bin,
      760 	  2 type		fixed bin,
      761 	  2 info_bit	bit (8),
      762 	  2 length	fixed bin,
      763 	  2 name		char (30);
      764 dcl	(nextsk, nextocc)	char (5);
      765 dcl	(save_line, save_column)
      766 			fixed bin;
      767 dcl	template		(200) char (1) based (work_ptr);
      768 
      769 /* get  search_keys in common */
      770 
      771 	nextocc = search_keys;
      772 sklop:
      773 	call cobol_vdwf_dget (cobol_ext_$cobol_cmfp, status, com2_ptr, recsize, nextocc);
      774 	nextocc = occ_key.next;
      775 	call cobol_vdwf_dget (cobol_ext_$cobol_cmfp, status, com2_ptr, recsize, occ_key.first_key);
      776 
      777 skloop:
      778 	counter = 0;
      779 	topstack = 1;
      780 	stackptr = stackbegptr;
      781 	name_stack_overflow = "0"b;
      782 	too_many_qualifiers = "0"b;
      783 	save_line = skey_rec.ref_line;
      784 	save_column = skey_rec.ref_column;
      785 	auser_wd.length = skey_rec.size;
      786 	substr (auser_wd.name, 1, auser_wd.length) = substr (skey_rec.name, 1, auser_wd.length);
      787 	recsize2 = 24 + auser_wd.length;
      788 	nextsk = skey_rec.next;
      789 
      790 
      791 
      792 	counter = counter + 1;
      793 	ptrtable (counter) = stackptr;
      794 	topstack = topstack + recsize2 + 8 - mod (recsize2, 8);
      795 	stackptr = addr (temp_stack (topstack));
      796 
      797 
      798 skloop1:
      799 	if skey_rec.qual = null_key
      800 	then go to skloop3;
      801 	call cobol_vdwf_dget (cobol_ext_$cobol_cmfp, status, com2_ptr, recsize, skey_rec.qual);
      802 
      803 
      804 skloop2:
      805 	auser_wd.length = qual_rec.size;
      806 	substr (auser_wd.name, 1, auser_wd.length) = substr (qual_rec.name, 1, auser_wd.length);
      807 	recsize2 = 24 + auser_wd.length;
      808 	counter = counter + 1;
      809 	ptrtable (counter) = stackptr;
      810 	topstack = topstack + recsize2 + 8 - mod (recsize2, 8);
      811 	stackptr = addr (temp_stack (topstack));
      812 
      813 
      814 	if qual_rec.next = null_key
      815 	then go to skloop3;
      816 
      817 
      818 	call cobol_vdwf_dget (cobol_ext_$cobol_cmfp, status, com2_ptr, recsize, qual_rec.next);
      819 	go to skloop2;
      820 
      821 
      822 skloop3:
      823 	call cobol_usrwd (addr (ptrtable (1)), counter, addr (arrpntr (1)), sectno, ntendptr, "0"b, was_found,
      824 	     not_found, diag_no, skptr);
      825 
      826 
      827 	if was_found
      828 	then do;
      829 		if substr (skey_rec.info, 1, 1)
      830 		then do;
      831 			adiag.diag_number = 1;
      832 			adiag.line = save_line;
      833 			adiag.column = save_column;
      834 			call issue_diag;
      835 			go to skloop4;
      836 		     end;
      837 		substr (skey_rec.info, 1, 1) = "1"b;
      838 		ntptr = skptr;
      839 		if asc_dsc = 1
      840 		then substr (data_name.descr_bit, 44, 1) = "1"b;
      841 		else substr (data_name.descr_bit, 45, 1) = "1"b;
      842 						/* later need to test if both bits are on and issue warning diag */
      843 
      844 		work_ptr = ntptr;
      845 		if data_name.occurs_ptr ^= 0
      846 		then do;
      847 			work_ptr = addr (template (data_name.occurs_ptr));
      848 			work_ptr -> occurs.key_number = skey_rec.key_number;
      849 		     end;
      850 	     end;
      851 	else do;
      852 		if substr (skey_rec.info, 1, 1)
      853 		then go to skloop4;
      854 
      855 		if not_found
      856 		then adiag.diag_number = 2;
      857 		else adiag.diag_number = diag_no;
      858 		adiag.line = save_line;
      859 		adiag.column = save_column;
      860 		call issue_diag;
      861 	     end;
      862 
      863 skloop4:
      864 	if nextsk = null_key
      865 	then go to skexit;
      866 
      867 	call cobol_vdwf_dget (cobol_ext_$cobol_cmfp, status, com2_ptr, recsize, nextsk);
      868 
      869 
      870 	go to skloop;
      871 
      872 skexit:
      873 	if nextocc ^= null_key
      874 	then go to sklop;
      875 
      876 	return;
      877      end repl3sk;
      878 repl3ln:
      879      proc;					/* this procedure process linage info */
      880 dcl	1 linage_temp	based (work_ptr),
      881 	  2 body		fixed bin,
      882 	  2 footing	fixed bin,
      883 	  2 top		fixed bin,
      884 	  2 bottom	fixed bin,
      885 	  2 body_int	fixed bin,
      886 	  2 footing_int	fixed bin,
      887 	  2 top_int	fixed bin,
      888 	  2 bottom_int	fixed bin,
      889 	  2 body_name	char (5),
      890 	  2 footing_name	char (5),
      891 	  2 top_name	char (5),
      892 	  2 bottom_name	char (5),
      893 	  2 name_count	fixed bin,
      894 	  2 gen_seg	fixed bin,
      895 	  2 gen_offset	fixed bin (24),
      896 	  2 name_desc	(name_count) char (40);
      897 dcl	1 auser_wd	based (lname_ptr),
      898 	  2 size		fixed bin,
      899 	  2 line		fixed bin,
      900 	  2 column	fixed bin,
      901 	  2 type		fixed bin,
      902 	  2 bit8		bit (8),
      903 	  2 length	fixed bin,
      904 	  2 name		char (30);
      905 dcl	lnamearea		char (56);
      906 dcl	(lname_ptr, ntptrln, linage_ptr)
      907 			ptr;
      908 dcl	(save_desc, save_line, save_column)
      909 			fixed bin;
      910 dcl	ln		fixed bin;
      911 dcl	cur_fileno	fixed bin;
      912 dcl	nextln		char (5);
      913 dcl	outkey		char (5);
      914 dcl	temp_in		char (200) based (linage_ptr);
      915 dcl	template		char (200);
      916 
      917 
      918 	work_ptr = addr (template);
      919 	lname_ptr = addr (lnamearea);
      920 	ptrtable (1) = lname_ptr;
      921 
      922 
      923 /* get first linage_name_rec in common */
      924 
      925 	call cobol_vdwf_dget (cobol_ext_$cobol_cmfp, status, com2_ptr, recsize, fixed_common.linage_info);
      926 	nextln = linage_name_rec.next;
      927 	cur_fileno = linage_name_rec.fileno;
      928 	save_desc = linage_name_rec.desc;
      929 	save_line = linage_name_rec.line;
      930 	save_column = linage_name_rec.column;
      931 	auser_wd.length = linage_name_rec.size;
      932 	auser_wd.name = linage_name_rec.name;
      933 
      934 
      935 /* get file table */
      936 
      937 lloop:
      938 	call cobol_vdwf_dget (cobol_ext_$cobol_cmfp, status, ft_ptr, recsize, filedescr_offsets (cur_fileno));
      939 
      940 
      941 /* get linage_info of this file */
      942 
      943 
      944 	outkey = file_table.linage_info;
      945 
      946 	call cobol_vdwf_dget (cobol_ext_$cobol_cmfp, status, linage_ptr, ln, file_table.linage_info);
      947 
      948 	template = temp_in;
      949 
      950 lloop1:
      951 	call cobol_usrwd (addr (ptrtable (1)), 1, addr (arrpntr (1)), sectno, ntendptr, "0"b, was_found, not_found,
      952 	     diag_no, ntptrln);
      953 	if was_found
      954 	then do;
      955 		ntptr = ntptrln;
      956 		if save_desc = 1
      957 		then linage_temp.name_desc (1) = temp_fld.temp_desc;
      958 		else if save_desc = 2
      959 		then linage_temp.name_desc (linage_temp.footing) = temp_fld.temp_desc;
      960 		else if save_desc = 3
      961 		then linage_temp.name_desc (linage_temp.top) = temp_fld.temp_desc;
      962 		else linage_temp.name_desc (linage_temp.bottom) = temp_fld.temp_desc;
      963 		go to lloop2;
      964 	     end;
      965 	else do;
      966 		if not_found
      967 		then adiag.diag_number = fatal_DATANAME_NOT_DECLARED;
      968 		else adiag.diag_number = diag_no;
      969 		adiag.line = save_line;
      970 		adiag.column = save_column;
      971 		call issue_diag;
      972 	     end;
      973 lloop2:
      974 	if nextln ^= null_key
      975 	then do;
      976 		call cobol_vdwf_dget (cobol_ext_$cobol_cmfp, status, com2_ptr, recsize, nextln);
      977 		nextln = linage_name_rec.next;
      978 		save_desc = linage_name_rec.desc;
      979 		save_line = linage_name_rec.line;
      980 		save_column = linage_name_rec.column;
      981 		auser_wd.length = linage_name_rec.size;
      982 		auser_wd.name = linage_name_rec.name;
      983 		if linage_name_rec.fileno = cur_fileno
      984 		then go to lloop1;
      985 		cur_fileno = linage_name_rec.fileno;
      986 		call cobol_vdwf_dput (cobol_ext_$cobol_cmfp, status, work_ptr, ln, outkey);
      987 		go to lloop;
      988 	     end;
      989 	call cobol_vdwf_dput (cobol_ext_$cobol_cmfp, status, work_ptr, ln, outkey);
      990 	return;
      991      end repl3ln;
      992 
      993 /*********************************************************/
      994 process_keys:
      995      proc;
      996 	return;
      997 
      998 dcl	1 qual_rec1	based (com2_ptr),
      999 	  2 next		char (5),
     1000 	  2 size		fixed bin,
     1001 	  2 name		char (30);
     1002 dcl	odo_ptr		ptr;
     1003 dcl	dn_ptr		ptr;
     1004 dcl	1 dn_key		based (addr (dn_ptr)),
     1005 	  2 fill		char (4),
     1006 	  2 keychars	char (2);
     1007 dcl	key		char (5);
     1008 dcl	qual_key		char (5);
     1009 dcl	1 auser_wd	based (stackptr),
     1010 	  2 size		fixed bin,
     1011 	  2 line		fixed bin,
     1012 	  2 column	fixed bin,
     1013 	  2 type		fixed bin,
     1014 	  2 info_bit	bit (8),
     1015 	  2 length	fixed bin,
     1016 	  2 name		char (30);
     1017 
     1018 /*************************************/
     1019 process_file_keys:
     1020      entry;					/* PROCESS FILE KEYS */
     1021 
     1022 	key = fixed_common.file_keys;
     1023 	file_desc_1.alt_key_count = 0;		/* [3.0-1] */
     1024 	type_two_sw = "0"b;				/* [3.0-1] */
     1025 	do while (key ^= null_key);
     1026 	     call cobol_vdwf_dget (cobol_ext_$cobol_cmfp, status, fkey_ptr, recsize, key);
     1027 	     if file_key.key_type < 100
     1028 	     then do;				/* non-literal key */
     1029 		     counter = 0;
     1030 		     stackptr = stackbegptr;
     1031 		     auser_wd.line = file_key.line;
     1032 		     auser_wd.column = file_key.column;
     1033 		     auser_wd.length = file_key.name_size;
     1034 		     auser_wd.name = file_key.name;
     1035 		     call push;
     1036 		     qual_key = file_key.qual;
     1037 		     do while (qual_key ^= null_key);
     1038 			call cobol_vdwf_dget (cobol_ext_$cobol_cmfp, status, com2_ptr, recsize, qual_key);
     1039 			auser_wd.length = qual_rec1.size;
     1040 			auser_wd.name = qual_rec1.name;
     1041 			call push;
     1042 			qual_key = qual_rec.next;
     1043 		     end;
     1044 
     1045 		     call find;
     1046 		     if was_found
     1047 		     then do;
     1048 			     if data_name.type ^= 9
     1049 			     then call put (fatal_DATANAME_EXPECTED);
     1050 			     else do;
     1051 				     file_key.desc = dn_ptr -> temp_fld.temp_desc;
     1052 				     call check_dataname;
     1053 				     if file_key.key_type = 1
     1054 				     then do;	/* relative key */
     1055 					     call check_cnst_com_rprt_section;
     1056 					     call check_integer;
     1057 					     if data_name.file_num = file_key.file_no
     1058 					     then do;
     1059 						     call put (obs_KEY_NOT_IN_RECORD);
     1060 
     1061 						     if fixed_common.comp_level < "5"
     1062 						     then call lev_diag (56);
     1063 
     1064 						end;
     1065 
     1066 					end;
     1067 				     else if file_key.key_type = 2 /* record key */ | file_key.key_type = 5
     1068 				     then do;	/* alternate record key */
     1069 					     call check_cnst_com_rprt_section;
     1070 					     if ^data_name.alphanum
     1071 					     then call put (warn_DATANAME_NOT_ALPHANUM);
     1072 						/*[3.0-1]*/
     1073 					     call cobol_read_ft_ (file_key.file_no, ft_ptr);
     1074 					     if data_name.file_num ^= file_key.file_no
     1075 						/*[3.0-1]*/
     1076 					     then do;
     1077 						/*[3.0-1]*/
     1078 						     if file_table.alternate_keys = 0
     1079 						/*[3.0-1]*/
     1080 						     then call put (obs_KEY_NOT_IN_RECORD);
     1081 						/*[3.0-1]*/
     1082 						     else call put (fatal_KEY_NOT_IN_RECORD);
     1083 
     1084 						     if fixed_common.comp_level < "5"
     1085 						     then call lev_diag (58);
     1086 
     1087 						end;
     1088 
     1089 
     1090 
     1091 					     call build_file_desc (dn_ptr);
     1092 						/* [3.0-1] */
     1093 
     1094 					end;
     1095 				     else if file_key.key_type = 3
     1096 				     then do;	/* file status key 1-2 */
     1097 					     if data_name.file_section
     1098 					     then call put (warn_ITEM_IN_FILE_SECTION);
     1099 					     else call check_cnst_com_rprt_section;
     1100 					     if data_name.item_length ^= 2 | ^data_name.alphanum
     1101 					     then call put (warn_BAD_STATUS_KEY);
     1102 					end;
     1103 				     else if file_key.key_type = 4 /* file status key 3 */ | file_key.key_type = 6
     1104 				     then do;	/* record contains key */
     1105 					     call check_cnst_com_rprt_section;
     1106 					     call check_integer;
     1107 					end;
     1108 				     else if file_key.key_type = 7 /* catalogue name */ | file_key.key_type = 12
     1109 				     then do;	/* additional catalogue name */
     1110 					     call cobol_read_ft_ (file_key.file_no, ft_ptr);
     1111 					     if file_table.device = 5
     1112 					     then do;
     1113 						/* tape */
     1114 						     if (^data_name.alphanum & ^data_name.numeric)
     1115 							| data_name.item_length > 6
     1116 						     then call put (warn_BAD_TAPE_CATALOG_NAME);
     1117 						end;
     1118 					     else do;
     1119 						     if ^data_name.alphanum | data_name.item_length > 200
     1120 						     then call put (warn_BAD_CATALOG_NAME);
     1121 						end;
     1122 					end;
     1123 				     else if file_key.key_type = 8
     1124 				     then do;	/* attach-options */
     1125 					     if ^data_name.alphanum | data_name.item_length > 256
     1126 					     then call put (warn_BAD_ATTACH_OPTIONS);
     1127 					end;
     1128 				     else if file_key.key_type = 9 /* tape replacement name */
     1129 					| file_key.key_type = 13
     1130 				     then do;	/* value of id name */
     1131 					     if ^data_name.alphanum | data_name.item_length > 17
     1132 					     then call put (warn_BAD_VALUE_OF_ID);
     1133 					end;
     1134 				     else if file_key.key_type = 10
     1135 				     then do;	/* device */
     1136 					     call check_integer;
     1137 					end;
     1138 				     else if file_key.key_type = 14
     1139 				     then do;	/* value of retention */
     1140 					     if data_name.item_length > 3
     1141 					     then call put (warn_BAD_VALUE_OF_RETENTION);
     1142 					     else call check_integer;
     1143 					end;
     1144 				end;
     1145 			end;
     1146 		end;				/* file_key.key_type < 100 */
     1147 	     key = file_key.next;
     1148 	end;
     1149 	return;
     1150 
     1151 /************************************/
     1152 process_odo_keys:
     1153      entry;					/* PROCESS OCCURS DEPENDING ON KEYS */
     1154 
     1155 	key = fixed_common.odo_info;
     1156 	do while (key ^= null_key);
     1157 	     call cobol_vdwf_dget (cobol_ext_$cobol_cmfp, status, odo_ptr, recsize, key);
     1158 	     call cobol_vdwf_dget (cobol_ext_$cobol_cmfp, status, com2_ptr, ln, odo_ptr -> odo_rec.descr);
     1159 	     counter = 0;
     1160 	     stackptr = stackbegptr;
     1161 	     auser_wd.line = obj_rec.line;
     1162 	     auser_wd.column = obj_rec.column;
     1163 	     auser_wd.length = obj_rec.size;
     1164 	     substr (auser_wd.name, 1, auser_wd.length) = substr (obj_rec.name, 1, auser_wd.length);
     1165 	     call push;
     1166 	     qual_key = obj_rec.qual;
     1167 	     do while (qual_key ^= null_key);
     1168 		call cobol_vdwf_dget (cobol_ext_$cobol_cmfp, status, com2_ptr, ln, qual_key);
     1169 		auser_wd.line = qual_rec.line;
     1170 		auser_wd.column = qual_rec.column;
     1171 		auser_wd.length = qual_rec.size;
     1172 		substr (auser_wd.name, 1, auser_wd.length) = substr (qual_rec.name, 1, auser_wd.length);
     1173 		call push;
     1174 		qual_key = qual_rec.next;
     1175 	     end;
     1176 
     1177 	     call find;
     1178 	     if was_found
     1179 	     then do;
     1180 		     if data_name.type ^= 9
     1181 		     then call put (fatal_DATANAME_EXPECTED);
     1182 		     else do;
     1183 			     odo_ptr -> odo_rec.descr = "  " || dn_key.keychars;
     1184 						/* design change for SEARCH */
     1185 			     call check_dataname;
     1186 			     call check_integer;
     1187 			     if data_name.seg_num = 2
     1188 			     then do;
     1189 				     if data_name.offset <= odo_ptr -> odo_rec.offset_r
     1190 					& data_name.offset + data_name.item_length > odo_ptr -> odo_rec.offset_l
     1191 				     then call put (warn_ODO_RANGE);
     1192 				end;
     1193 			     else if data_name.constant_section
     1194 			     then call put (warn_CONSTANT_ILLOGICAL);
     1195 			end;
     1196 		end;
     1197 	     key = odo_ptr -> odo_rec.next;
     1198 	end;
     1199 	return;
     1200 
     1201 /*************************************/
     1202 /* INTERNAL PROCEDURES */
     1203 
     1204 push:
     1205      proc;
     1206 	counter = counter + 1;
     1207 	ptrtable (counter) = stackptr;
     1208 	stackptr = addrel (stackptr, divide (size_TOKEN (8) + 11 + auser_wd.length, 8, 17, 0) * 2);
     1209 	return;
     1210      end push;
     1211 
     1212 find:
     1213      proc;
     1214 	call cobol_usrwd (addr (ptrtable (1)), counter, addr (arrpntr (1)), 0, ntendptr, "0"b, was_found, not_found,
     1215 	     diag_no, dn_ptr);
     1216 	if ^was_found
     1217 	then if not_found
     1218 	     then call put (fatal_DATANAME_NOT_DECLARED);
     1219 	     else call put (fixed (diag_no));
     1220 	return;
     1221      end find;
     1222 
     1223 put:
     1224      proc (diag);
     1225 dcl	diag		fixed bin;
     1226 	adiag.diag_number = diag;
     1227 	adiag.line = stackbegptr -> auser_wd.line;
     1228 	adiag.column = stackbegptr -> auser_wd.column;
     1229 	call cobol_c_list (addr (adiag));
     1230 	return;
     1231      end put;
     1232 
     1233 check_dataname:
     1234      proc;
     1235 	if data_name.subscripted
     1236 	then call put (fatal_DATANAME_SUBSCRIPTED);
     1237 	if data_name.variable_length
     1238 	then call put (warn_DATANAME_VARLEN);
     1239      end check_dataname;
     1240 check_integer:
     1241      proc;
     1242 	if ^data_name.numeric
     1243 	then call put (fatal_DATANAME_NOT_NUMERIC);
     1244 	else if ^data_name.pic_integer | data_name.sign_type ^= ""b
     1245 	then call put (warn_DATANAME_NOT_INTEGER);
     1246      end check_integer;
     1247 check_cnst_com_rprt_section:
     1248      proc;
     1249 	if data_name.constant_section
     1250 	then call put (fatal_ITEM_IN_CONSTANT_SECTION);
     1251 	else if data_name.communication_section
     1252 	then call put (fatal_ITEM_IN_COM_SECTION);
     1253 	else if data_name.report_section
     1254 	then call put (fatal_ITEM_IN_REPORT_SECTION);
     1255      end check_cnst_com_rprt_section;
     1256 
     1257 /*************************************************/
     1258 build_file_desc:
     1259      proc (data_name_ptr);				/* [3.0-1] */
     1260 						/*[]*/
     1261 						/*[]*/
     1262 dcl	data_name_ptr	ptr;			/*[]*/
     1263 dcl	word_offset	fixed bin (24),
     1264 	i		fixed bin;		/*[]*/
     1265 dcl	cobol_pool_	entry (char (*), fixed bin, fixed bin (24));
     1266 						/*[]*/
     1267 						/*[]*/
     1268 	if file_key.key_type = 2			/*[]*/
     1269 	then do;					/*[]*/
     1270 		type_two_sw = "1"b;			/*[]*/
     1271 		file_desc_1.type = 1;		/* always set to 1 */
     1272 						/*[]*/
     1273 		file_desc_1.prime_key.size = file_info.size;
     1274 						/*[]*/
     1275 		file_desc_1.prime_key.offset = get_rel_offset (file_info.offset, data_name_ptr);
     1276 						/*[]*/
     1277 		if file_table.alternate_keys = 0 /*[]*/ | /*[]*/ file_table.alternate_keys = file_desc_1.alt_key_count
     1278 						/*[]*/
     1279 		then do;				/*[]*/
     1280 			call cobol_pool_ (substr (file_desc_1_area, 1, (16 + (file_desc_1.alt_key_count * 8))), 2,
     1281 			     word_offset);		/*[]*/
     1282 			file_table.file_desc_1_offset = word_offset;
     1283 						/*[]*/
     1284 			type_two_sw = "0"b;		/*[]*/
     1285 			if file_desc_1.alt_key_count > 0
     1286 						/*[]*/
     1287 			then call check_dup_offset (data_name_ptr);
     1288 						/*[]*/
     1289 			file_desc_1.alt_key_count = 0;/*[]*/
     1290 		     end;				/*[]*/
     1291 	     end;					/*[]*/
     1292 	else if file_key.key_type = 5			/*[]*/
     1293 	then do;					/*[]*/
     1294 		file_desc_1.alt_key_count = file_desc_1.alt_key_count + 1;
     1295 						/*[]*/
     1296 		i = file_table.alternate_keys - file_desc_1.alt_key_count + 1;
     1297 						/*[]*/
     1298 		file_desc_1.alt_key (i).size = file_info.size;
     1299 						/*[]*/
     1300 		file_desc_1.alt_key (i).offset = get_rel_offset (file_info.offset, data_name_ptr);
     1301 						/*[]*/
     1302 		if file_key.duplicates		/*[]*/
     1303 		then file_desc_1.alt_key (i).size = file_desc_1.alt_key (i).size * -1;
     1304 						/*[]*/
     1305 						/*[]*/
     1306 		if type_two_sw /*[]*/ & /*[]*/ file_table.alternate_keys = file_desc_1.alt_key_count
     1307 						/*[]				Last alternate record key: write table to constants section. */
     1308 						/*[]*/
     1309 		then do;				/*[]*/
     1310 			call cobol_pool_ (substr (file_desc_1_area, 1, (16 + (file_desc_1.alt_key_count * 8))), 2,
     1311 			     word_offset);		/*[]*/
     1312 			file_table.file_desc_1_offset = word_offset;
     1313 						/*[]*/
     1314 			call check_dup_offset (data_name_ptr);
     1315 						/*[]*/
     1316 			type_two_sw = "0"b;		/*[]*/
     1317 			file_desc_1.alt_key_count = 0;/*[]*/
     1318 		     end;				/*[]*/
     1319 	     end;					/*[]*/
     1320 	return;					/*[]*/
     1321      end build_file_desc;
     1322 
     1323 check_dup_offset:
     1324      proc (data_name_ptr);				/* [3.0-1] */
     1325 						/*[]*/
     1326 						/*[]*/
     1327 dcl	(j, jj)		fixed bin;		/*[]*/
     1328 dcl	data_name_ptr	ptr;			/*[]*/
     1329 						/*[]*/
     1330 						/* Check prime record key against alternates. */
     1331 						/*[]*/
     1332 						/*[]*/
     1333 	do j = 1 to file_desc_1.alt_key_count;		/*[]*/
     1334 	     if file_desc_1.prime_key.offset = file_desc_1.alt_key (j).offset
     1335 						/*[]*/
     1336 	     then do;				/*[]*/
     1337 		     call cobol_vdwf_dget (cobol_ext_$cobol_cmfp, status, fkey_ptr, recsize, file_table.r_key_info);
     1338 						/*[]*/
     1339 		     adiag.diag_number = fatal_SAME_RECORD_OFFSET;
     1340 						/*[]*/
     1341 		     adiag.line = file_key.line;	/*[]*/
     1342 		     adiag.column = file_key.column;	/*[]*/
     1343 		     call cobol_c_list (addr (adiag));	/*[]*/
     1344 		     call put_dup_offset_diag (file_desc_1.prime_key.offset, data_name_ptr);
     1345 						/*[]*/
     1346 		     go to check_alts;		/*[]*/
     1347 		end;				/*[]*/
     1348 	end;					/*[]*/
     1349 						/*[]*/
     1350 check_alts:					/*[]*/
     1351 						/*[]*/
     1352 						/* Check alternate records keys against alterrnates.  */
     1353 						/*[]*/
     1354 	do j = 1 to (file_desc_1.alt_key_count - 1);	/*[]*/
     1355 	     do jj = (j + 1) to file_desc_1.alt_key_count;/*[]*/
     1356 		if file_desc_1.alt_key (j).offset = file_desc_1.alt_key (jj).offset
     1357 						/*[]*/
     1358 						/*[]*/
     1359 		then do;				/*[]*/
     1360 			call put_dup_offset_diag (file_desc_1.alt_key (j).offset, data_name_ptr);
     1361 						/*[]*/
     1362 			return;			/*[]*/
     1363 		     end;				/*[]*/
     1364 	     end;					/*[]*/
     1365 	end;					/*[]*/
     1366      end check_dup_offset;
     1367 
     1368 put_dup_offset_diag:
     1369      proc (dup_offset, data_name_ptr);			/* [3.0-1] */
     1370 						/*[]*/
     1371 						/*[]*/
     1372 dcl	dup_offset	fixed bin;		/*[]*/
     1373 dcl	data_name_ptr	ptr;			/*[]*/
     1374 						/*[]*/
     1375 	key = file_table.alt_key_info;		/*[]*/
     1376 	do while (key ^= null_key);			/*[]*/
     1377 	     call cobol_vdwf_dget (cobol_ext_$cobol_cmfp, status, fkey_ptr, recsize, key);
     1378 						/*[]*/
     1379 						/*[]*/
     1380 	     if get_rel_offset (file_info.offset, data_name_ptr) = dup_offset
     1381 						/*[]*/
     1382 	     then do;
     1383 		     adiag.diag_number = fatal_SAME_RECORD_OFFSET;
     1384 						/*[]*/
     1385 		     adiag.line = file_key.line;	/*[]*/
     1386 		     adiag.column = file_key.column;	/*[]*/
     1387 		     call cobol_c_list (addr (adiag));	/*[]*/
     1388 		end;				/*[]*/
     1389 	     key = file_key.next_alt;			/*[]*/
     1390 	end;					/*[]*/
     1391      end put_dup_offset_diag;
     1392 
     1393 
     1394 get_rel_offset:
     1395      proc (input_offset, data_name_ptr) /* [3.0-1] */ /*[]*/ returns (fixed bin (24));
     1396 						/*[]*/
     1397 						/*[]*/
     1398 dcl	input_offset	fixed bin (24);		/*[]*/
     1399 dcl	rel_offset	fixed bin (24);		/*[]*/
     1400 dcl	data_name_ptr	ptr;			/*[]*/
     1401 						/*[]*/
     1402 	work_ptr = data_name_ptr;			/*[]*/
     1403 	if work_ptr -> data_name.level > 1		/*[]*/
     1404 	then do;
     1405 		work_ptr = work_ptr -> data_name.prev_rec;
     1406 						/*[]*/
     1407 		continue = "1"b;			/*[]*/
     1408 		do while (continue);		/*[]*/
     1409 		     if work_ptr -> data_name.level = 1 /*[]*/
     1410 		     then continue = "0"b;		/*[]*/
     1411 		     else work_ptr = work_ptr -> data_name.prev_rec;
     1412 						/*[]*/
     1413 		end;				/*[]*/
     1414 		rel_offset = input_offset - (work_ptr -> data_name.offset);
     1415 						/*[]*/
     1416 		file_table.abs_record_offset = work_ptr -> data_name.offset;
     1417 						/*[]*/
     1418 	     end;					/*[]*/
     1419 	else do;					/*[]*/
     1420 		rel_offset = 0;			/*[]*/
     1421 		file_table.abs_record_offset = work_ptr -> data_name.offset;
     1422 						/*[]*/
     1423 	     end;					/*[]*/
     1424 						/*[]*/
     1425 						/*[]*/
     1426 	return (rel_offset);			/*[]*/
     1427      end get_rel_offset;
     1428 
  1     1 
  1     2 /* BEGIN INCLUDE FILE ... cobol_type9.incl.pl1 */
  1     3 /* Last modified on 11/19/76 by ORN */
  1     4 
  1     5 /*
  1     6*A type 9 data name token is entered into the name table by the data
  1     7*division syntax phase for each data name described in the data division.
  1     8*The replacement phase subsequently replaces type 8 user word references
  1     9*to data names in the procedure division minpral file with the corresponding
  1    10*type 9 tokens from the name table.
  1    11**/
  1    12 
  1    13 /* dcl dn_ptr ptr; */
  1    14 
  1    15 /* BEGIN DECLARATION OF TYPE9 (DATA NAME) TOKEN */
  1    16 dcl 1 data_name based (dn_ptr),
  2     1 
  2     2 /* begin include file ... cobol_TYPE9.incl.pl1 */
  2     3 /* Last modified on 06/19/77 by ORN */
  2     4 /* Last modified on 12/28/76 by FCH */
  2     5 
  2     6 		/* header */
  2     7 		2 size fixed bin,
  2     8 		2 line fixed bin,
  2     9 		2 column fixed bin,
  2    10 		2 type fixed bin,
  2    11 		/* body */
  2    12 		2 string_ptr ptr,
  2    13 		2 prev_rec ptr,
  2    14 		2 searched bit (1),
  2    15 		2 duplicate bit (1),
  2    16 		2 saved bit (1),
  2    17 		2 debug_ind bit (1),
  2    18 		2 filler2 bit (3),
  2    19 		2 used_as_sub bit (1),
  2    20 		2 def_line fixed bin,
  2    21 		2 level fixed bin,
  2    22 		2 linkage fixed bin,
  2    23 		2 file_num fixed bin,
  2    24 		2 size_rtn fixed bin,
  2    25 		2 item_length fixed bin(24),
  2    26 		2 places_left fixed bin,
  2    27 		2 places_right fixed bin,
  2    28 		/* description */
  2    29 		2 file_section bit (1),
  2    30 		2 working_storage bit (1),
  2    31 		2 constant_section bit (1),
  2    32 		2 linkage_section bit (1),
  2    33 		2 communication_section bit (1),
  2    34 		2 report_section bit (1),
  2    35 		2 level_77 bit (1),
  2    36 		2 level_01 bit (1),
  2    37 		2 non_elementary bit (1),
  2    38 		2 elementary bit (1),
  2    39 		2 filler_item bit (1),
  2    40 		2 s_of_rdf bit (1),
  2    41 		2 o_of_rdf bit (1),
  2    42 		2 bin_18 bit (1),
  2    43 		2 bin_36 bit (1),
  2    44 		2 pic_has_l bit (1),
  2    45 		2 pic_is_do bit (1),
  2    46 		2 numeric bit (1),
  2    47 		2 numeric_edited bit (1),
  2    48 		2 alphanum bit (1),
  2    49 		2 alphanum_edited bit (1),
  2    50 		2 alphabetic bit (1),
  2    51 		2 alphabetic_edited bit (1),
  2    52 		2 pic_has_p bit (1),
  2    53 		2 pic_has_ast bit (1),
  2    54 		2 item_signed bit(1),
  2    55 		2 sign_separate bit (1),
  2    56 		2 display bit (1),
  2    57 		2 comp bit (1),
  2    58 		2 ascii_packed_dec_h bit (1),	/* as of 8/16/76  this field used for comp8. */
  2    59 		2 ascii_packed_dec bit (1),
  2    60 		2 ebcdic_packed_dec bit (1),
  2    61 		2 bin_16 bit (1),
  2    62 		2 bin_32 bit (1),
  2    63 		2 usage_index bit (1),
  2    64 		2 just_right bit (1),
  2    65 		2 compare_argument bit (1),
  2    66 		2 sync bit (1),
  2    67 		2 temporary bit (1),
  2    68 		2 bwz bit (1),
  2    69 		2 variable_length bit (1),
  2    70 		2 subscripted bit (1),
  2    71 		2 occurs_do bit (1),
  2    72 		2 key_a bit (1),
  2    73 		2 key_d bit (1),
  2    74 		2 indexed_by bit (1),
  2    75 		2 value_numeric bit (1),
  2    76 		2 value_non_numeric bit (1),
  2    77 		2 value_signed bit (1),
  2    78 		2 sign_type bit (3),
  2    79 		2 pic_integer bit (1),
  2    80 		2 ast_when_zero bit (1),
  2    81 		2 label_record bit (1),
  2    82 		2 sign_clause_occurred bit (1),
  2    83 		2 okey_dn bit (1),
  2    84 		2 subject_of_keyis bit (1),
  2    85 		2 exp_redefining bit (1),
  2    86 		2 sync_in_rec bit (1),
  2    87 		2 rounded bit (1),
  2    88 		2 ad_bit bit (1),
  2    89 		2 debug_all bit (1),
  2    90 		2 overlap bit (1),
  2    91 		2 sum_counter bit (1),
  2    92 		2 exp_occurs bit (1),
  2    93 		2 linage_counter bit (1),
  2    94 		2 rnm_01 bit (1),
  2    95 		2 aligned bit (1),
  2    96 		2 not_user_writable bit (1),
  2    97 		2 database_key bit (1),
  2    98 		2 database_data_item bit (1),
  2    99 		2 seg_num fixed bin,
  2   100 		2 offset fixed bin(24),
  2   101 		2 initial_ptr fixed bin,
  2   102 		2 edit_ptr fixed bin,
  2   103 		2 occurs_ptr fixed bin,
  2   104 		2 do_rec char(5),
  2   105 		2 bitt bit (1),
  2   106 		2 byte bit (1),
  2   107 		2 half_word bit (1),
  2   108 		2 word bit (1),
  2   109 		2 double_word bit (1),
  2   110 		2 half_byte bit (1),
  2   111 		2 filler5 bit (1),
  2   112 		2 bit_offset bit (4),
  2   113 		2 son_cnt bit (16),
  2   114 		2 max_red_size fixed bin(24),
  2   115 		2 name_size fixed bin,
  2   116 		2 name char(0 refer(data_name.name_size));	
  2   117 
  2   118 
  2   119 
  2   120 /* end include file ... cobol_TYPE9.incl.pl1 */
  2   121 
  1    17 
  1    18 /* END DECLARATION OF TYPE9 (DATA NAME) TOKEN */
  1    19 
  1    20 /* END INCLUDE FILE ... cobol_type9.incl.pl1 */
  1    21 
     1429 
     1430      end process_keys;
     1431 
     1432 
     1433 issue_diag:
     1434      proc;
     1435 	call cobol_swf_put (cobol_ext_$cobol_curr_out, status, addr (adiag), adiag.size);
     1436      end issue_diag;
     1437 
     1438 
     1439 
     1440 
     1441 
     1442 lev_diag:
     1443      proc (diag_num);
     1444 
     1445 declare	diag_num		fixed bin,
     1446 	lev_diag_ptr	ptr;
     1447 
     1448 declare	1 lev_diag_item,
     1449 	  2 size		fixed bin,
     1450 	  2 line		fixed bin,
     1451 	  2 column	fixed bin,
     1452 	  2 type		fixed bin,
     1453 	  2 run		fixed bin,
     1454 	  2 number	fixed bin,
     1455 	  2 info		bit (36);
     1456 
     1457 declare	1 auser_wd	based,
     1458 	  2 size		fixed bin,
     1459 	  2 line		fixed bin,
     1460 	  2 column	fixed bin,
     1461 	  2 type		fixed bin,
     1462 	  2 info_bit	bit (8),
     1463 	  2 length	fixed bin,
     1464 	  2 name		char (30);
     1465 
     1466 	lev_diag_item.size = 28;
     1467 	lev_diag_item.type = 5;
     1468 	lev_diag_item.run = 9;
     1469 	lev_diag_item.info = "0"b;
     1470 	lev_diag_item.line = stackbegptr -> auser_wd.line;
     1471 	lev_diag_item.column = stackbegptr -> auser_wd.column;
     1472 	lev_diag_item.number = diag_num;
     1473 
     1474 	lev_diag_ptr = addr (lev_diag_item);
     1475 
     1476 	call cobol_c_list (lev_diag_ptr);
     1477 
     1478      end;
     1479 
  3     1 
  3     2 /* BEGIN INCLUDE FILE ... cobol_ext_.incl.pl1 */
  3     3 /* Last modified on 06/17/76 by ORN */
  3     4 /* Last modified on 12/28/76 by FCH */
  3     5 /* Last modified on 12/01/80 by FCH */
  3     6 
  3     7 /*    <<<   SHARED EXTERNALS INCLUDE FILE   >>>    */
  3     8 
  3     9 
  3    10 dcl     cobol_ext_$cobol_afp ptr ext;
  3    11 dcl     cobol_afp ptr defined (  cobol_ext_$cobol_afp);
  3    12 dcl     cobol_ext_$cobol_analin_fileno ptr ext;
  3    13 dcl     cobol_analin_fileno ptr defined (  cobol_ext_$cobol_analin_fileno);
  3    14 dcl     cobol_ext_$report_first_token ptr ext;
  3    15 dcl     report_first_token ptr defined( cobol_ext_$report_first_token);
  3    16 dcl     cobol_ext_$report_last_token ptr ext;
  3    17 dcl     report_last_token ptr defined ( cobol_ext_$report_last_token);
  3    18 dcl     cobol_ext_$cobol_eltp ptr ext;
  3    19 dcl     cobol_eltp ptr defined (  cobol_ext_$cobol_eltp);
  3    20 dcl     cobol_ext_$cobol_cmfp ptr ext;
  3    21 dcl     cobol_cmfp ptr defined (  cobol_ext_$cobol_cmfp);
  3    22 dcl     cobol_ext_$cobol_com_fileno ptr ext;
  3    23 dcl     cobol_com_fileno ptr defined (  cobol_ext_$cobol_com_fileno);
  3    24 dcl     cobol_ext_$cobol_com_ptr ptr ext;
  3    25 dcl     cobol_com_ptr ptr defined (  cobol_ext_$cobol_com_ptr);
  3    26 dcl     cobol_ext_$cobol_dfp ptr ext;
  3    27 dcl     cobol_dfp ptr defined (  cobol_ext_$cobol_dfp);
  3    28 dcl     cobol_ext_$cobol_hfp ptr ext;
  3    29 dcl     cobol_hfp ptr defined (  cobol_ext_$cobol_hfp);
  3    30 dcl     cobol_ext_$cobol_m1fp ptr ext;
  3    31 dcl     cobol_m1fp ptr defined (  cobol_ext_$cobol_m1fp);
  3    32 dcl     cobol_ext_$cobol_m2fp ptr ext;
  3    33 dcl     cobol_m2fp ptr defined (  cobol_ext_$cobol_m2fp);
  3    34 dcl     cobol_ext_$cobol_min1_fileno ptr ext;
  3    35 dcl     cobol_min1_fileno ptr defined (  cobol_ext_$cobol_min1_fileno);
  3    36 dcl     cobol_ext_$cobol_min2_fileno_ptr ptr ext;
  3    37 dcl     cobol_min2_fileno_ptr ptr defined (  cobol_ext_$cobol_min2_fileno_ptr);
  3    38 dcl     cobol_ext_$cobol_name_fileno ptr ext;
  3    39 dcl     cobol_name_fileno ptr defined (  cobol_ext_$cobol_name_fileno);
  3    40 dcl     cobol_ext_$cobol_name_fileno_ptr ptr ext;
  3    41 dcl     cobol_name_fileno_ptr ptr defined (  cobol_ext_$cobol_name_fileno_ptr);
  3    42 dcl     cobol_ext_$cobol_ntfp ptr ext;
  3    43 dcl     cobol_ntfp ptr defined (  cobol_ext_$cobol_ntfp);
  3    44 dcl     cobol_ext_$cobol_pdofp ptr ext;
  3    45 dcl     cobol_pdofp ptr defined (  cobol_ext_$cobol_pdofp);
  3    46 dcl     cobol_ext_$cobol_pfp ptr ext;
  3    47 dcl     cobol_pfp ptr defined (  cobol_ext_$cobol_pfp);
  3    48 dcl     cobol_ext_$cobol_rm2fp ptr ext;
  3    49 dcl     cobol_rm2fp ptr defined (  cobol_ext_$cobol_rm2fp);
  3    50 dcl     cobol_ext_$cobol_rmin2fp ptr ext;
  3    51 dcl     cobol_rmin2fp ptr defined (  cobol_ext_$cobol_rmin2fp);
  3    52 dcl     cobol_ext_$cobol_curr_in ptr ext;
  3    53 dcl     cobol_curr_in ptr defined (  cobol_ext_$cobol_curr_in);
  3    54 dcl     cobol_ext_$cobol_curr_out ptr ext;
  3    55 dcl     cobol_curr_out ptr defined (  cobol_ext_$cobol_curr_out);
  3    56 dcl     cobol_ext_$cobol_sfp ptr ext;
  3    57 dcl     cobol_sfp ptr defined (  cobol_ext_$cobol_sfp);
  3    58 dcl     cobol_ext_$cobol_w1p ptr ext;
  3    59 dcl     cobol_w1p ptr defined (  cobol_ext_$cobol_w1p);
  3    60 dcl     cobol_ext_$cobol_w2p ptr ext;
  3    61 dcl     cobol_w2p ptr defined (  cobol_ext_$cobol_w2p);
  3    62 dcl     cobol_ext_$cobol_w3p ptr ext;
  3    63 dcl     cobol_w3p ptr defined (  cobol_ext_$cobol_w3p);
  3    64 dcl     cobol_ext_$cobol_w5p ptr ext;
  3    65 dcl     cobol_w5p ptr defined (  cobol_ext_$cobol_w5p);
  3    66 dcl     cobol_ext_$cobol_w6p ptr ext;
  3    67 dcl     cobol_w6p ptr defined (  cobol_ext_$cobol_w6p);
  3    68 dcl     cobol_ext_$cobol_w7p ptr ext;
  3    69 dcl     cobol_w7p ptr defined (  cobol_ext_$cobol_w7p);
  3    70 dcl     cobol_ext_$cobol_x3fp ptr ext;
  3    71 dcl     cobol_x3fp ptr defined (  cobol_ext_$cobol_x3fp);
  3    72 dcl	cobol_ext_$cobol_rwdd ptr ext;
  3    73 dcl	cobol_rwdd ptr defined(cobol_ext_$cobol_rwdd);
  3    74 dcl	cobol_ext_$cobol_rwpd ptr ext;
  3    75 dcl	cobol_rwpd ptr defined(cobol_ext_$cobol_rwpd);
  3    76 
  3    77 
  3    78 dcl     cobol_ext_$cobol_fileno1 fixed bin(24)ext;
  3    79 dcl     cobol_fileno1 fixed bin(24)defined (  cobol_ext_$cobol_fileno1);				
  3    80 dcl     cobol_ext_$cobol_options_len fixed bin(24)ext;
  3    81 dcl     cobol_options_len fixed bin(24)defined (  cobol_ext_$cobol_options_len);
  3    82 dcl     cobol_ext_$cobol_pdout_fileno fixed bin(24)ext;
  3    83 dcl     cobol_pdout_fileno fixed bin(24)defined (  cobol_ext_$cobol_pdout_fileno);			
  3    84 dcl     cobol_ext_$cobol_print_fileno fixed bin(24)ext;
  3    85 dcl     cobol_print_fileno fixed bin(24)defined (  cobol_ext_$cobol_print_fileno);			
  3    86 dcl     cobol_ext_$cobol_rmin2_fileno fixed bin(24)ext;
  3    87 dcl     cobol_rmin2_fileno fixed bin(24)defined (  cobol_ext_$cobol_rmin2_fileno);
  3    88 dcl     cobol_ext_$cobol_x1_fileno fixed bin(24)ext;
  3    89 dcl     cobol_x1_fileno fixed bin(24)defined (  cobol_ext_$cobol_x1_fileno);				
  3    90 dcl     cobol_ext_$cobol_x2_fileno fixed bin(24)ext;
  3    91 dcl     cobol_x2_fileno fixed bin(24)defined (  cobol_ext_$cobol_x2_fileno);
  3    92 dcl     cobol_ext_$cobol_x3_fileno fixed bin(24)ext;
  3    93 dcl     cobol_x3_fileno fixed bin(24)defined (  cobol_ext_$cobol_x3_fileno);
  3    94 
  3    95 dcl     cobol_ext_$cobol_lpr char (5) ext;
  3    96 dcl     cobol_lpr char (5) defined (  cobol_ext_$cobol_lpr);				/* -2- */
  3    97 dcl     cobol_ext_$cobol_options char (120) ext;
  3    98 dcl     cobol_options char (120) defined (  cobol_ext_$cobol_options);          			/* -30- */
  3    99 
  3   100 dcl     cobol_ext_$cobol_xlast8 bit (1) ext;
  3   101 dcl     cobol_xlast8 bit (1) defined (  cobol_ext_$cobol_xlast8);				/* -1- */
  3   102 dcl     cobol_ext_$report_exists bit (1) ext;
  3   103 dcl     report_exists bit (1) defined (  cobol_ext_$report_exists);
  3   104 
  3   105 
  3   106 /*    <<<   END OF SHARED EXTERNALS INCLUDE FILE   >>>    */
  3   107 /* END INCLUDE FILE ... cobol_ext_.incl.pl1 */
  3   108 
     1480 
  4     1 
  4     2 /* BEGIN INCLUDE FILE ...   cobol_file_table.incl.pl1 */
  4     3 /*     <<<   INCLUDE FILE FOR FILE TABLE IN COMMON   >>>     */
  4     4 
  4     5 /* Modified on 09/30/80 by FCH, [4.4-1], density is 6250 is supported */
  4     6 /* Modified on 12/05/78 by RAL, [3.0-3], added dupl_alt from dummy102 */
  4     7 /* Modified on 11/21/78 by RAL, [3.0-2], added space for abs_record_offset from filler */
  4     8 /* Modified on 10/26/78 by RAL, [3.0-1], added space for file_desc_1 table offset from filler */
  4     9 /*     <<<   LAST MODIFIED ON 06-02-77 by GM         >>>	*/
  4    10 /*     <<<   LAST MODIFIED ON 05-31-77 by GM         >>>	*/
  4    11 /*     <<<   LAST MODIFIED  ON 06-30-76 by GM        >>>	*/
  4    12 /*     <<<   LAST MODIFIED ON 06-07-76 by GM    >>>     */
  4    13 /*     <<<   LAST MODIFIED ON 11-29-74 by orn   >>>     */
  4    14 
  4    15 /*
  4    16*A file table is created in variable common for each file selected in the
  4    17*environment division.  The fields of a given file table provide information
  4    18*about the specific file for which the file table is generated.  The
  4    19*addresses which may be contained in the various "info" fields of the file
  4    20*table are addresses in variable common.
  4    21**/
  4    22 
  4    23 /*   THE FILE TABLE STRUCTURE   */
  4    24 
  4    25 dcl	1 file_table based (ft_ptr),
  4    26 		2 next char (5),
  4    27 		2 ifn char (16),
  4    28 		2 attach_options_info char(5),	/*06/02/77*/
  4    29 		2 replacement_info char(5),		/*06/02/77*/
  4    30 		2 file_id_info char(5),		/*05/31/77*/
  4    31 		2 retention_info char(5),		/*05/31/77*/
  4    32 		2 filler0 char (3) ,			/* [3.0-1] */
  4    33 		2 file_desc_1_offset fixed bin (24),		/* [3.0-1] */
  4    34 		2 abs_record_offset fixed bin (24),		/* [3.-02] */
  4    35 		2 filler char(5),		/* this area is available.*/
  4    36 		2 padding_char char (1),
  4    37 		2 banner_char char (1),
  4    38 		2 file_status_info char (5),
  4    39 		2 extra_status_info char (5),
  4    40 		2 cat_id_info char (5),
  4    41 		2 r_key_info char (5),
  4    42 		2 alt_key_info char (5),
  4    43 		2 rec_do_info char (5),
  4    44 		2 label_info char (5),
  4    45 		2 data_info char (5),
  4    46 		2 report_info char (5),
  4    47 		2 linage_info char (5),
  4    48 		2 optional bit (1),						/*06/07/76*/
  4    49 		2 external bit (1),
  4    50 		2 file_status bit (1),
  4    51 		2 extra_status bit (1),
  4    52 		2 sysin bit (1),
  4    53 		2 sysout bit (1),
  4    54 		2 move_mode bit (1),
  4    55 		2 locate_mode bit (1),
  4    56 		2 fixed_recs bit (1),
  4    57 		2 variable_recs bit (1),
  4    58 		2 spanned_recs bit (1),				/*06/07/76*/
  4    59 		2 interchange bit (1),				/*06/07/76*/
  4    60 		2 relative_key bit (1),
  4    61 		2 record_key bit (1),
  4    62 		2 even_parity bit (1),
  4    63 		2 odd_parity bit (1),
  4    64 		2 padding bit (1),
  4    65 		2 banner bit (1),
  4    66 		2 random bit (1),
  4    67 		2 no_file_lockout bit (1),
  4    68 		2 no_write_check bit (1),
  4    69 		2 no_resident_index bit (1),
  4    70 		2 same_file bit (1),
  4    71 		2 sort_file bit (1),
  4    72 		2 rec_do bit (1),
  4    73 		2 linage bit (1),
  4    74 		2 code_set_clause bit (1),
  4    75 		/* history */
  4    76 		2 close bit (1),
  4    77 		2 delete bit (1),
  4    78 		2 open_in bit (1),
  4    79 		2 open_out bit (1),
  4    80 		2 open_io bit (1),
  4    81 		2 open_ext bit (1),
  4    82 		2 read bit (1),
  4    83 		2 release bit (1),
  4    84 		2 return_bit bit (1),
  4    85 		2 rewrite bit (1),
  4    86 		2 sort bit (1),
  4    87 		2 start bit (1),
  4    88 		2 use_error bit (1),
  4    89 		2 write bit (1),
  4    90 		2 read_next bit (1),
  4    91 		2 read_key bit (1),
  4    92 		2 accept bit (1),
  4    93 		2 display bit (1),
  4    94 		2 unequal_recs bit (1),
  4    95 		2 dummy_sysin bit (1),
  4    96 		2 dummy_sysout bit (1),
  4    97 		2 file_no fixed bin,
  4    98 		2 uca_offset fixed bin(24),
  4    99 		2 cra_seg fixed bin,
  4   100 		2 cra_offset fixed bin(24),
  4   101 		2 max_cra_size fixed bin(24),
  4   102 		2 catalogued fixed bin,
  4   103 		2 organization fixed bin,
  4   104 		2 org_qual fixed bin,
  4   105 		2 access fixed bin,
  4   106 		2 buffers fixed bin,
  4   107 		2 device fixed bin,
  4   108 		2 record_prefix fixed bin,				/*06/07/76*/
  4   109 		2 alternate_keys fixed bin,
  4   110 		2 record_format fixed bin,
  4   111 		2 label_format fixed bin,
  4   112 		2 key_location fixed bin,
  4   113 		2 key_size fixed bin,
  4   114 		2 temporary fixed bin,
  4   115 		2 address_format fixed bin,
  4   116 		2 same_area_clause fixed bin,
  4   117 		2 same_rec_clause fixed bin,
  4   118 		2 same_sort_clause fixed bin,
  4   119 		2 mult_clause_no fixed bin,
  4   120 		2 mult_position_no fixed bin,
  4   121 		2 block_desc fixed bin,
  4   122 		2 block_min fixed bin(24),
  4   123 		2 block_max fixed bin(24),
  4   124 		2 rec_min fixed bin(24),
  4   125 		2 rec_max fixed bin(24),
  4   126 		2 label_count fixed bin,
  4   127 		2 ifn_size fixed bin,
  4   128 		2 data_count fixed bin,
  4   129 		2 report_count fixed bin,
  4   130 		2 code_set fixed bin,
  4   131 		2 error_exit fixed bin,
  4   132 		2 prefix_size fixed bin,
  4   133 		2 blocked bit (1),
  4   134 		2 variable bit (1),
  4   135 		2 unbannered bit (1),
  4   136 		2 prefix_clause bit (1),
  4   137 		2 symbolic bit (1),
  4   138 		2 address_format_bit bit (1),
  4   139 		2 bsn bit(1),						/*06/07/76*/
  4   140 		2 process_area bit(1),					/*06/07/76*/
  4   141 		2 dupl_alt bit (1),			/* [3.0-3] */
  4   142 		2 dummy102 bit (23),
  4   143 		2 name_size fixed bin,
  4   144 		2 name char(32),
  4   145 		2 id char(32),
  4   146 		2 temp bit(1) ,
  4   147 		2 perm bit(1) ,
  4   148 		2 attach bit(1) ,
  4   149 		2 detach bit(1) ,
  4   150 		2 fsb ,		/* file state block */
  4   151 		     3 seg fixed bin(24), /* internal addr */
  4   152 		     3 off fixed bin(24),
  4   153 		2 tape,
  4   154 		     3 density bit(1) ,	/* 0-hi 1-lo */
  4   155 		     3 retain bit(1),	/* 0 not retained across attachment, 1 retained */
  4   156 		     3 force bit(1),	/* 0 check retention date, 1 no check */
  4   157 		     3 protect bit(1) ,	/* 0-no 1-yes */
  4   158 		     3 den_6250 bit(1),	/* 0-no 1-yes */		/*[4.4-1]*/
  4   159 		2 cat_nm char(200),
  4   160 		2 ao_len fixed bin(24),		/* attach options */
  4   161 		2 ao_string char(256),
  4   162 		2 output_mode fixed bin,	/*	0 not specified
  4   163*						1 generation
  4   164*						2 modification
  4   165*						3 replacement literal
  4   166*						4 replacement dataname	*/
  4   167 		2 om_len	fixed bin,		/* length of output mode */
  4   168 		2 om_string char(17),
  4   169 		2 tape_device fixed bin,	/*	0 not specified
  4   170*						1 integer
  4   171*						2 dataname	*/
  4   172 		2 tape_device_num fixed bin,
  4   173 		2 tape_device_key char(5),
  4   174 		2 add_cat_key char(5);
  4   175 
  4   176 
  4   177 /* END INCLUDE FILE ...   cobol_file_table.incl.pl1 */
  4   178 
     1481 
  5     1 
  5     2 /* BEGIN INCLUDE FILE ... cobol_type12.incl.pl1 */
  5     3 /* Last modified on 11/19/76 by ORN */
  5     4 
  5     5 /*
  5     6*A type 12 file name token is entered into the name table by the data
  5     7*division syntax phase for each file name appearing in the data division.
  5     8*When the replacement phase processes the procedure division minpral file,
  5     9*each reference to a file name is replaced with the type 12 token created
  5    10*for that file name.
  5    11**/
  5    12 
  5    13 /* dcl name_ptr ptr; */
  5    14 
  5    15 /* BEGIN DECLARATION OF TYPE12 (FILE NAME) TOKEN */
  5    16 dcl 	1 fd_token based (name_ptr),
  6     1 
  6     2 /* begin include file ... cobol_TYPE12.incl.pl1 */
  6     3 /* Last modified on 11/17/76 by ORN */
  6     4 
  6     5 		/* header */
  6     6 		2 size fixed bin,
  6     7 		2 line fixed bin,
  6     8 		2 column fixed bin,
  6     9 		2 type fixed bin,
  6    10 		/* body */
  6    11 		2 string_ptr ptr,
  6    12 		2 prev_rec ptr,
  6    13 		2 info bit (8),
  6    14 		2 def_line fixed bin,
  6    15 		2 file_no fixed bin,
  6    16 		2 name_size fixed bin,
  6    17 		2 name char(0 refer(fd_token.name_size));	
  6    18 
  6    19 /* end include file ... cobol_TYPE12.incl.pl1 */
  6    20 
  5    17 
  5    18 /* END DECLARATION OF TYPE12 (FILE NAME) TOKEN */
  5    19 
  5    20 
  5    21 /* END INCLUDE FILE ... cobol_type12.incl.pl1 */
  5    22 
     1482 
  7     1 
  7     2 /* BEGIN INCLUDE FILE ... cobol_file_key.incl.pl1 */
  7     3 /* Last modified on 03/30/78 by FCH */
  7     4 
  7     5 /*
  7     6*A file key record is created in variable common for any one of several
  7     7*data items which may be associated with a file name.  The key_type field in
  7     8*the file key record identifies the type of item for which the record is
  7     9*created.  The name in a file key record is resolved by the replacement
  7    10*phase, and a section of the type 9 entry in the name table for the
  7    11*specified data item is stored in the file key record.  The stored
  7    12*description is subsequently used by the generator phase.
  7    13**/
  7    14 
  7    15 /*   THE FILE KEY RECORD STRUCTURE   */
  7    16 
  7    17 dcl 	1 file_key based (fkey_ptr),
  7    18 		2 next char(5),
  7    19 		2 next_alt char(5),
  7    20 		2 qual char(5),
  7    21 		2 info,
  7    22 		3 duplicates bit(1),
  7    23 		3 filler bit(7),
  7    24 		2 file_no fixed bin,
  7    25 		2 key_type fixed bin,
  7    26 		2 line fixed bin,
  7    27 		2 column fixed bin,
  7    28 		2 temp_seg fixed bin,
  7    29 		2 temp_offset fixed bin(24),
  7    30 		2 desc char(40),
  7    31 		2 name_size fixed bin,
  7    32 		2 name char(0 refer(file_key.name_size));
  7    33 
  7    34 /* END INCLUDE FILE ... cobol_file_key.incl.pl1 */
  7    35 
     1483 
  8     1 
  8     2 /* BEGIN INCLUDE FILE ...   cobol_linage_rec.incl.pl1 */
  8     3 /*     <<< LAST MODIFIED ON 7-29-74 by FCH   >>>     */
  8     4 
  8     5 /*	***STRUCTURE SIZE INFORMATION***        */
  8     6 /*     THE SIZE OF THIS STRUCTURE IN BYTES, (EXCLUDING VARIABLE
  8     7*       LENGTH ENTITIES), FOR EACH HARDWARE IMPLEMENTATION IS:
  8     8*
  8     9*	HARDWARE	|	SIZE (BYTES)
  8    10*	---------------------------------
  8    11*	645/6180	|	64
  8    12*	---------------------------------
  8    13**/
  8    14 
  8    15 /*
  8    16*A linage record is entered into variable common for each linage clause
  8    17*specified in the data division.
  8    18**/
  8    19 
  8    20 /*   THE LINAGE RECORD STRUCTURE   */
  8    21 
  8    22 dcl	1 linage_rec based (linage_ptr),
  8    23 		2 body fixed bin (15),
  8    24 		2 footing fixed bin (15),
  8    25 		2 top fixed bin (15),
  8    26 		2 bottom fixed bin (15),
  8    27 		2 body_int fixed bin (31),
  8    28 		2 footing_int fixed bin (31),
  8    29 		2 top_int fixed bin (31),
  8    30 		2 bottom_int fixed bin (31),
  8    31 		2 body_name char (5),
  8    32 		2 footing_name char (5),
  8    33 		2 top_name char (5),
  8    34 		2 bottom_name char (5),
  8    35 		2 name_count fixed bin (15),
  8    36 		2 gen_seg fixed bin (15),
  8    37 		2 gen_offset fixed bin (31),
  8    38 		2 name_desc(0 refer(linage_rec.name_count)) char(40);
  8    39 
  8    40 
  8    41 
  8    42 /* END INCLUDE FILE ...   cobol_linage_rec.incl.pl1 */
  8    43 
     1484 
  9     1 
  9     2 /* BEGIN INCLUDE FILE ...   cobol_fixed_common.incl.pl1 */
  9     3 /* Modified on 10/27/82 by FCH, [5.1-1], cobol_cln added to save last line num, BUG543(phx13643) */
  9     4 /* Modified on 07/31/80 by FCH, [4.3-1], use_reporting field added for Report Writer */
  9     5 /* Modified on 03/30/79 by FCH, [4.1-1], -card option added */
  9     6 /* Modified on 03/30/79 by FCH, [4.0-2], -svNM option added */
  9     7 /* Modified on 03/02/79 by FCH, [4.0-1], -levNM option added */
  9     8 /* Modified by RAL on 10/13/78, [4.0-0], Added option exp from fil2. */
  9     9 /* Modified by BC on 06/20/77, descriptor added.	*/
  9    10 /* Modified by BC on 06/02/77, init_cd_seg, init_cd_offset added.	*/
  9    11 /* Modified by BC  on 1/21/77, options.profile added.	*/
  9    12 /* Modified by FCH on 7/6/76, sysin_fno & sysout_fno deleted, accept_device & display_device added */
  9    13 /* Modified by FCH on 5/20/77, comp_level added */
  9    14 
  9    15 
  9    16 /*     THE SIZE OF THIS STRUCTURE IN BYTES, (EXCLUDING VARIABLE
  9    17*   LENGTH ENTITIES), FOR EACH HARDWARE IMPLEMENTATION IS:
  9    18*
  9    19*   HARDWARE	|	SIZE (BYTES)
  9    20*   ---------------------------------
  9    21*   645/6180	|	464
  9    22*   P7		|	396
  9    23*   ---------------------------------
  9    24*   */
  9    25 
  9    26 dcl 	1 fixed_common based (  cobol_com_ptr),
  9    27     		2 prog_name char (30),
  9    28    		2 compiler_rev_no char (25),
  9    29     		2 phase_name char (6),
  9    30     		2 currency char (1),
  9    31     		2 fatal_no fixed bin,
  9    32     		2 warn_no fixed bin,
  9    33     		2 proc_counter fixed bin,
  9    34     		2 spec_tag_counter fixed bin,
  9    35     		2 file_count fixed bin,
  9    36     		2 filedescr_offsets (20) char (5),
  9    37     		2 perf_alter_info char (5),
  9    38     		2 another_perform_info char (5),
  9    39     		2 sort_in_info char (5),
  9    40     		2 odo_info char (5),
  9    41     		2 size_seg fixed bin,
  9    42     		2 size_offset fixed bin(24),
  9    43     		2 size_perform_info char (5),
  9    44     		2 rename_info char (5),
  9    45     		2 report_names char (5),
  9    46     		2 rw_buf_seg fixed bin,
  9    47     		2 rw_buf_offset fixed bin(24),
  9    48     		2 rw_buf_length fixed bin(24),
  9    49     		2 file_keys char (5),
  9    50     		2 search_keys char (5),
  9    51     		2 dd_seg_size fixed bin(24),
  9    52     		2 pd_seg_size fixed bin(24),
  9    53     		2 seg_limit fixed bin ,
  9    54     		2 number_of_dd_segs fixed bin,
  9    55     		2 seg_info char (5),
  9    56     		2 number_of_ls_pointers fixed bin,
  9    57     		2 link_sec_seg fixed bin,
  9    58     		2 link_sec_offset fixed bin(24),
  9    59     		2 sra_clauses fixed bin,
  9    60     		2 fix_up_info char (5),
  9    61     		2 linage_info char (5),
  9    62     		2 first_dd_item char (5),
  9    63     		2 sort_out_info char (5),
  9    64     		2 db_info char (5),
  9    65     		2 realm_info char (5),
  9    66     		2 rc_realm_info char (5),
  9    67     		2 last_file_key char (5),
  9    68     		2 prog_coll_seq fixed bin,
  9    69 		2 init_cd_seg fixed bin,
  9    70 		2 init_cd_offset fixed bin(24),
  9    71     		2 input_error_exit fixed bin,
  9    72    		2 output_error_exit fixed bin,
  9    73     		2 i_o_error_exit fixed bin,
  9    74     		2 extend_error_exit fixed bin,
  9    75     		2 dummy15 fixed bin,
  9    76     		2 options,
  9    77       			3 cu bit (1),
  9    78       			3 st bit (1),
  9    79       			3 wn bit (1),
  9    80       			3 obs bit (1),
  9    81       			3 dm bit (1),
  9    82       			3 xrl bit (1),
  9    83       			3 xrn bit (1),
  9    84       			3 src bit (1),
  9    85       			3 obj bit (1),
  9    86       			3 exs bit (1),
  9    87       			3 sck bit (1),
  9    88       			3 rno bit (1),
  9    89 			3 u_l bit (1),
  9    90 			3 cnv bit (1),
  9    91 			3 cos bit (1),
  9    92 			3 fmt bit (1),
  9    93 			3 profile bit(1),
  9    94 			3 nw bit (1),
  9    95 			3 exp bit (1),		/* [4.0-0] */
  9    96 			3 card bit (1),  /*[4.1-1]*/
  9    97 			3 fil2 bit (5),
  9    98 			3 m_map bit (1),
  9    99 			3 m_bf bit (1),
  9   100 			3 m_fat bit (1),
  9   101 			3 m_wn bit (1),
  9   102 			3 m_obs bit(1),
  9   103 			3 pd bit(1),
  9   104       			3 oc bit(1),
  9   105     		2 supervisor bit (1),
  9   106     		2 dec_comma bit (1),
  9   107     		2 init_cd bit (1),
  9   108     		2 corr bit (1),
  9   109     		2 initl bit (1),
  9   110     		2 debug bit (1),
  9   111     		2 report bit (1),
  9   112     		2 sync_in_prog bit (1),
  9   113     		2 pd_section bit (1),
  9   114     		2 list_switch bit (1),
  9   115     		2 alpha_cond bit (1),
  9   116     		2 num_cond bit (1),
  9   117     		2 spec_sysin bit (1),
  9   118     		2 spec_sysout bit (1),
  9   119     		2 cpl_files bit (1),
  9   120     		2 obj_dec_comma bit (1),
  9   121 		2 default_sign_type bit (3),
  9   122 		2 use_debug bit(1),
  9   123 		2 syntax_trace bit(1),
  9   124 		2 comp_defaults,
  9   125 			3 comp	bit(1),
  9   126 			3 comp_1	bit(1),
  9   127 			3 comp_2	bit(1),
  9   128 			3 comp_3	bit(1),
  9   129 			3 comp_4	bit(1),
  9   130 			3 comp_5	bit(1),
  9   131 			3 comp_6	bit(1),
  9   132 			3 comp_7	bit(1),
  9   133 			3 comp_8 bit(1),
  9   134 		2 disp_defaults,
  9   135 			3 disp	bit(1),
  9   136 			3 disp_1	bit(1),
  9   137 			3 disp_2	bit(1),
  9   138 			3 disp_3	bit(1),
  9   139 			3 disp_4	bit(1),
  9   140 			3 disp_5  bit(1),
  9   141 			3 disp_6  bit(1),
  9   142 			3 disp_7  bit(1),
  9   143 		2 descriptor bit(2),
  9   144 		2 levsv  bit(3),		/*[4.0-1]*/
  9   145 		2 use_reporting bit(1),	/*[4.3-1]*/
  9   146 		2 cd bit(1),		/*[4.4-1]*/
  9   147 		2 dummy17 bit(3),
  9   148    		2 lvl_rstr bit(32),
  9   149    		2 inst_rstr bit(32),
  9   150 		2 comp_level char(1),
  9   151 		2 dummy18 char(30),
  9   152 		2 object_sign char (1),
  9   153     		2 last_print_rec char (5),
  9   154     		2 coll_seq_info char (5),
  9   155     		2 sys_status_seg fixed bin,
  9   156    		2 sys_status_offset fixed bin(24),
  9   157    		2 compiler_id fixed bin,
  9   158    		2 date_comp_ln fixed bin,
  9   159    		2 compile_mode bit(36),
  9   160    		2 default_temp fixed bin,
  9   161    		2 accept_device fixed bin,
  9   162    		2 display_device fixed bin,
  9   163    		2 cobol_cln fixed bin,	/*[5.1-1]*/
  9   164 		2 alphabet_offset fixed bin;
  9   165 
  9   166 
  9   167 
  9   168 /* END INCLUDE FILE ...   cobol_fixed_common.incl.pl1 */
  9   169 
     1485 
 10     1 
 10     2 /* BEGIN INCLUDE FILE ...   cobol_com2.incl.pl1 */
 10     3 /**********NEW COM2 INCLUDE FILE*************************************************/
 10     4 dcl 1 odo_rec based(com2_ptr),
 10     5      2 next char(5),
 10     6      2 descr char(5),
 10     7     2 seg_no fixed bin(15),
 10     8     2 offset_l fixed bin(31),
 10     9     2 offset_r fixed bin(31),
 10    10      2 info bit(8);
 10    11 dcl 1 occ_key based(com2_ptr),
 10    12 	2 next char(5),
 10    13 	2 first_key char(5),
 10    14 	2 rec_no char(5),
 10    15 	2 ntble fixed bin(15),
 10    16 	2 lineno fixed bin(15),
 10    17 	2 info bit(8);
 10    18 dcl 1 skey_rec based(com2_ptr),
 10    19      2 next char(5),
 10    20      2 qual char(5),
 10    21      2 key_number fixed bin(15),
 10    22    2 asc_dsc fixed bin(15),
 10    23      2 ref_line fixed bin(15),
 10    24    2 ref_column fixed bin(15),
 10    25      2 info bit(8),
 10    26      2 size fixed bin(7),
 10    27      2 name char(30);
 10    28 dcl 1 rename_rec based(com2_ptr),
 10    29    2 repl_ptr ptr,
 10    30      2 next char(5),
 10    31      2 obj1 char(5),
 10    32      2 obj2 char(5),
 10    33      2 lineno_01 fixed bin(15),
 10    34      2 lineno_66 fixed bin(15),
 10    35      2 rec_no_66 char(5),
 10    36      2 info bit(8),
 10    37      2 size fixed bin(7),
 10    38      2 name char(30);
 10    39 dcl 1 qual_rec based (com2_ptr),
 10    40       2 next char(5),
 10    41      2 line fixed bin(15),
 10    42      2 column fixed bin(15),
 10    43       2 size fixed bin (7),
 10    44       2 name char (30);
 10    45 dcl 1 report_rec based(com2_ptr),
 10    46      2 next char(5),
 10    47      2 line fixed bin(15),
 10    48      2 column fixed bin(15),
 10    49      2 fileno fixed bin(7),
 10    50      2 defined bit(1),
 10    51      2 size fixed bin(7),
 10    52      2 name char(30);
 10    53 
 10    54 dcl 1 occurs based(com2_ptr),
 10    55     2 keyed fixed bin(15),
 10    56     2 key_number fixed bin(15),
 10    57     2 dimensions fixed bin(15),
 10    58     2 level (occurs.dimensions),
 10    59 	3 indexedno fixed bin(15),
 10    60 	3 min fixed bin(15),
 10    61 	3 max fixed bin(15),
 10    62 	3 struclength fixed bin(15),
 10    63 	3 cswdx fixed bin(15),
 10    64 	3 csws fixed bin(31);
 10    65 dcl 1 obj_rec based(com2_ptr),
 10    66      2 qual char(5),
 10    67      2 line fixed bin(15),
 10    68      2 column fixed bin(15),
 10    69      2 repl fixed bin(15),
 10    70      2 size fixed bin(7),
 10    71      2 name char(30);
 10    72 dcl 1  linage_name_rec based(com2_ptr),     /* 1st record is pointed by linage_info */
 10    73      2 next char(5),
 10    74      2 line fixed bin(15),
 10    75      2 column fixed bin(15),
 10    76      2 fileno fixed bin(7),
 10    77      2 desc fixed bin(7),     /* body=1, footing=2, top=3, bottom=4 */
 10    78      2 unused fixed bin(15),
 10    79      2 size fixed bin(7),
 10    80      2 name char(30);
 10    81 
 10    82 /* END INCLUDE FILE ...   cobol_com2.incl.pl1 */
 10    83 
     1486 
 11     1 
 11     2 /* BEGIN INCLUDE FILE ...   cobol_cirst.incl.pl1 */
 11     3 /*******************  COMMON INPUT RECORD of SORT TABLE  *********************/
 11     4 dcl  1  cirst based(com2_ptr),
 11     5 		2  s_ptr  char(5),	/* points to next entry */
 11     6 		2  s_start_size  fixed bin(15),  /* section_name_1's name size */
 11     7  		2  s_start  char(30),  /*  section_name_1 */
 11     8       	2  s_stop_size  fixed bin(15),  /* section_name_2's name size */
 11     9      	2  s_stop  char(30),  /* section_name_2 */
 11    10 	2  s_savesecnum fixed bin(15),   /* used by PDSYNTAX */
 11    11      	2  s_srtfilename_size  fixed bin(15),  /* filename_1's name size */
 11    12      	2  s_srtfilename  char(30),  /* file_name_1 */
 11    13      	2  s_sio  bit(1),  /* set to 0 */
 11    14      	2  s_rel  bit(1),  /* used by PDSYNTAX */
 11    15      	2  s_ret  bit(1),  /* used by PDSYNTAX */
 11    16 		2 s_info,	/* used by Replacement*/
 11    17 			3 s_info1 bit(1),
 11    18 			3 s_info2 bit(1),
 11    19 			3 s_info3 bit(1),
 11    20 			3 s_info4 bit(1),
 11    21 			3 s_info5 bit(1);
 11    22 
 11    23 
 11    24 /* The DCL for corst( COMMON OUTPUT RECORD of SORT TABLE ) is exactly the same, but using section_name_3 and
 11    25*    section_name_4. Also s_sio will be set to 1. */
 11    26 
 11    27 
 11    28 /* END INCLUDE FILE ...   cobol_cirst.incl.pl1 */
 11    29 
     1487 
 12     1 
 12     2 /* BEGIN INCLUDE FILE ...   cobol_io_info.incl.pl1 */
 12     3 
 12     4 /*  EXTERNAL COBOL I/O ENTRIES  */
 12     5 
 12     6 dcl   cobol_vdwf_open ext entry (ptr, bit(32));
 12     7 dcl   cobol_swf_open ext entry (ptr,bit(32),ptr,fixed bin,char(2));
 12     8 
 12     9 dcl   cobol_swf_get ext entry(ptr,bit(32),ptr,fixed bin);
 12    10 
 12    11 dcl   cobol_swf_put ext entry(ptr,bit(32),ptr,fixed bin);
 12    12 
 12    13 dcl   cobol_swf_close ext entry(ptr,bit(32),ptr,fixed bin);
 12    14 
 12    15 dcl   cobol_vdwf_sget ext entry(ptr,bit(32),ptr,fixed bin,char(5));
 12    16 
 12    17 dcl   cobol_vdwf_sput ext entry (ptr,bit(32),ptr,fixed bin,char(5));
 12    18 
 12    19 dcl   cobol_vdwf_dget ext entry(ptr,bit(32),ptr,fixed bin,char(5));
 12    20 
 12    21 dcl   cobol_vdwf_dput ext entry(ptr,bit(32),ptr,fixed bin,char(5));
 12    22 
 12    23 dcl   cobol_vdwf_close ext entry(ptr,bit(32),ptr,fixed bin);
 12    24 
 12    25 
 12    26 /*  DECLARATION OF SOME VARIABLES USED IN COMPILER I/O CALLS  */
 12    27 
 12    28 dcl keyno char(5);
 12    29 dcl key1 char(5);
 12    30 dcl curr_input ptr;
 12    31 dcl curr_output ptr;
 12    32 dcl recsize fixed bin;
 12    33 dcl recsize2 fixed bin;
 12    34 dcl status bit(32);
 12    35 
 12    36 
 12    37 
 12    38 dcl	1 status_word based(st_ptr),
 12    39 		2 status_left bit(16),
 12    40 		2 status_right bit(16);
 12    41 
 12    42 dcl st_ptr ptr;
 12    43 
 12    44 
 12    45 /* END INCLUDE FILE ...   cobol_io_info.incl.pl1 */
 12    46 
     1488 
 13     1 
 13     2 /* BEGIN INCLUDE FILE ... cobol_.incl.pl1 */
 13     3 /* last modified Feb 4, 1977 by ORN  */
 13     4 
 13     5 /* This file defines all external data used in the generator phase of Multics Cobol */
 13     6 
 13     7 /* POINTERS */
 13     8 dcl cobol_$text_base_ptr ptr  ext;
 13     9 dcl text_base_ptr ptr  defined (cobol_$text_base_ptr);
 13    10 dcl cobol_$con_end_ptr ptr  ext;
 13    11 dcl con_end_ptr ptr  defined (cobol_$con_end_ptr);
 13    12 dcl cobol_$def_base_ptr ptr  ext;
 13    13 dcl def_base_ptr ptr  defined (cobol_$def_base_ptr);
 13    14 dcl cobol_$link_base_ptr ptr  ext;
 13    15 dcl link_base_ptr ptr  defined (cobol_$link_base_ptr);
 13    16 dcl cobol_$sym_base_ptr ptr  ext;
 13    17 dcl sym_base_ptr ptr  defined (cobol_$sym_base_ptr);
 13    18 dcl cobol_$reloc_text_base_ptr ptr  ext;
 13    19 dcl reloc_text_base_ptr ptr  defined (cobol_$reloc_text_base_ptr);
 13    20 dcl cobol_$reloc_def_base_ptr ptr  ext;
 13    21 dcl reloc_def_base_ptr ptr  defined (cobol_$reloc_def_base_ptr);
 13    22 dcl cobol_$reloc_link_base_ptr ptr  ext;
 13    23 dcl reloc_link_base_ptr ptr  defined (cobol_$reloc_link_base_ptr);
 13    24 dcl cobol_$reloc_sym_base_ptr ptr  ext;
 13    25 dcl reloc_sym_base_ptr ptr  defined (cobol_$reloc_sym_base_ptr);
 13    26 dcl cobol_$reloc_work_base_ptr ptr  ext;
 13    27 dcl reloc_work_base_ptr ptr  defined (cobol_$reloc_work_base_ptr);
 13    28 dcl cobol_$pd_map_ptr ptr  ext;
 13    29 dcl pd_map_ptr ptr  defined (cobol_$pd_map_ptr);
 13    30 dcl cobol_$fixup_ptr ptr  ext;
 13    31 dcl fixup_ptr ptr  defined (cobol_$fixup_ptr);
 13    32 dcl cobol_$initval_base_ptr ptr  ext;
 13    33 dcl initval_base_ptr ptr  defined (cobol_$initval_base_ptr);
 13    34 dcl cobol_$initval_file_ptr ptr  ext;
 13    35 dcl initval_file_ptr ptr  defined (cobol_$initval_file_ptr);
 13    36 dcl cobol_$perform_list_ptr ptr  ext;
 13    37 dcl perform_list_ptr ptr  defined (cobol_$perform_list_ptr);
 13    38 dcl cobol_$alter_list_ptr ptr  ext;
 13    39 dcl alter_list_ptr ptr  defined (cobol_$alter_list_ptr);
 13    40 dcl cobol_$seg_init_list_ptr ptr  ext;
 13    41 dcl seg_init_list_ptr ptr  defined (cobol_$seg_init_list_ptr);
 13    42 dcl cobol_$temp_token_area_ptr ptr  ext;
 13    43 dcl temp_token_area_ptr ptr  defined (cobol_$temp_token_area_ptr);
 13    44 dcl cobol_$temp_token_ptr ptr  ext;
 13    45 dcl temp_token_ptr ptr  defined (cobol_$temp_token_ptr);
 13    46 dcl cobol_$token_block1_ptr ptr  ext;
 13    47 dcl token_block1_ptr ptr  defined (cobol_$token_block1_ptr);
 13    48 dcl cobol_$token_block2_ptr ptr  ext;
 13    49 dcl token_block2_ptr ptr  defined (cobol_$token_block2_ptr);
 13    50 dcl cobol_$minpral5_ptr ptr  ext;
 13    51 dcl minpral5_ptr ptr  defined (cobol_$minpral5_ptr);
 13    52 dcl cobol_$tag_table_ptr ptr  ext;
 13    53 dcl tag_table_ptr ptr  defined (cobol_$tag_table_ptr);
 13    54 dcl cobol_$map_data_ptr ptr  ext;
 13    55 dcl map_data_ptr ptr  defined (cobol_$map_data_ptr);
 13    56 dcl cobol_$ptr_status_ptr ptr  ext;
 13    57 dcl ptr_status_ptr ptr  defined (cobol_$ptr_status_ptr);
 13    58 dcl cobol_$reg_status_ptr ptr  ext;
 13    59 dcl reg_status_ptr ptr  defined (cobol_$reg_status_ptr);
 13    60 dcl cobol_$misc_base_ptr ptr ext;
 13    61 dcl misc_base_ptr ptr defined (cobol_$misc_base_ptr);
 13    62 dcl cobol_$misc_end_ptr ptr ext;
 13    63 dcl misc_end_ptr ptr defined (cobol_$misc_end_ptr);
 13    64 dcl cobol_$list_ptr ptr ext;
 13    65 dcl list_ptr ptr defined (cobol_$list_ptr);
 13    66 dcl cobol_$allo1_ptr ptr ext;
 13    67 dcl allo1_ptr ptr defined (cobol_$allo1_ptr);
 13    68 dcl cobol_$eln_ptr ptr ext;
 13    69 dcl eln_ptr ptr defined (cobol_$eln_ptr);
 13    70 dcl cobol_$diag_ptr ptr ext;
 13    71 dcl diag_ptr ptr defined (cobol_$diag_ptr);
 13    72 dcl cobol_$xref_token_ptr ptr ext;
 13    73 dcl xref_token_ptr ptr defined (cobol_$xref_token_ptr);
 13    74 dcl cobol_$xref_chain_ptr ptr ext;
 13    75 dcl xref_chain_ptr ptr defined (cobol_$xref_chain_ptr);
 13    76 dcl cobol_$statement_info_ptr ptr ext;
 13    77 dcl statement_info_ptr ptr defined (cobol_$statement_info_ptr);
 13    78 dcl cobol_$reswd_ptr ptr ext;
 13    79 dcl reswd_ptr ptr defined (cobol_$reswd_ptr);
 13    80 dcl cobol_$op_con_ptr ptr ext;
 13    81 dcl op_con_ptr ptr defined (cobol_$op_con_ptr);
 13    82 dcl cobol_$ntbuf_ptr ptr ext;
 13    83 dcl ntbuf_ptr ptr defined (cobol_$ntbuf_ptr);
 13    84 dcl cobol_$main_pcs_ptr ptr ext;
 13    85 dcl main_pcs_ptr ptr defined (cobol_$main_pcs_ptr);
 13    86 dcl cobol_$include_info_ptr ptr ext;
 13    87 dcl include_info_ptr ptr defined (cobol_$include_info_ptr);
 13    88 
 13    89 /* FIXED BIN */
 13    90 dcl cobol_$text_wd_off fixed bin  ext;
 13    91 dcl text_wd_off fixed bin  defined (cobol_$text_wd_off);
 13    92 dcl cobol_$con_wd_off fixed bin  ext;
 13    93 dcl con_wd_off fixed bin  defined (cobol_$con_wd_off);
 13    94 dcl cobol_$def_wd_off fixed bin  ext;
 13    95 dcl def_wd_off fixed bin  defined (cobol_$def_wd_off);
 13    96 dcl cobol_$def_max fixed bin  ext;
 13    97 dcl def_max fixed bin  defined (cobol_$def_max);
 13    98 dcl cobol_$link_wd_off fixed bin  ext;
 13    99 dcl link_wd_off fixed bin  defined (cobol_$link_wd_off);
 13   100 dcl cobol_$link_max fixed bin  ext;
 13   101 dcl link_max fixed bin  defined (cobol_$link_max);
 13   102 dcl cobol_$sym_wd_off fixed bin  ext;
 13   103 dcl sym_wd_off fixed bin  defined (cobol_$sym_wd_off);
 13   104 dcl cobol_$sym_max fixed bin  ext;
 13   105 dcl sym_max fixed bin  defined (cobol_$sym_max);
 13   106 dcl cobol_$reloc_text_max fixed bin(24)  ext;
 13   107 dcl reloc_text_max fixed bin(24)  defined (cobol_$reloc_text_max);
 13   108 dcl cobol_$reloc_def_max fixed bin(24)  ext;
 13   109 dcl reloc_def_max fixed bin(24)  defined (cobol_$reloc_def_max);
 13   110 dcl cobol_$reloc_link_max fixed bin(24)  ext;
 13   111 dcl reloc_link_max fixed bin(24)  defined (cobol_$reloc_link_max);
 13   112 dcl cobol_$reloc_sym_max fixed bin(24)  ext;
 13   113 dcl reloc_sym_max fixed bin(24)  defined (cobol_$reloc_sym_max);
 13   114 dcl cobol_$reloc_work_max fixed bin(24)  ext;
 13   115 dcl reloc_work_max fixed bin(24)  defined (cobol_$reloc_work_max);
 13   116 dcl cobol_$pd_map_index fixed bin  ext;
 13   117 dcl pd_map_index fixed bin  defined (cobol_$pd_map_index);
 13   118 dcl cobol_$cobol_data_wd_off fixed bin  ext;
 13   119 dcl cobol_data_wd_off fixed bin  defined (cobol_$cobol_data_wd_off);
 13   120 dcl cobol_$stack_off fixed bin  ext;
 13   121 dcl stack_off fixed bin  defined (cobol_$stack_off);
 13   122 dcl cobol_$max_stack_off fixed bin  ext;
 13   123 dcl max_stack_off fixed bin  defined (cobol_$max_stack_off);
 13   124 dcl cobol_$init_stack_off fixed bin  ext;
 13   125 dcl init_stack_off fixed bin  defined (cobol_$init_stack_off);
 13   126 dcl cobol_$pd_map_sw fixed bin  ext;
 13   127 dcl pd_map_sw fixed bin  defined (cobol_$pd_map_sw);
 13   128 dcl cobol_$next_tag fixed bin  ext;
 13   129 dcl next_tag fixed bin  defined (cobol_$next_tag);
 13   130 dcl cobol_$data_init_flag fixed bin  ext;
 13   131 dcl data_init_flag fixed bin  defined (cobol_$data_init_flag);
 13   132 dcl cobol_$seg_init_flag fixed bin  ext;
 13   133 dcl seg_init_flag fixed bin  defined (cobol_$seg_init_flag);
 13   134 dcl cobol_$alter_flag fixed bin  ext;
 13   135 dcl alter_flag fixed bin  defined (cobol_$alter_flag);
 13   136 dcl cobol_$sect_eop_flag fixed bin  ext;
 13   137 dcl sect_eop_flag fixed bin  defined (cobol_$sect_eop_flag);
 13   138 dcl cobol_$para_eop_flag fixed bin  ext;
 13   139 dcl para_eop_flag fixed bin  defined (cobol_$para_eop_flag);
 13   140 dcl cobol_$priority_no fixed bin  ext;
 13   141 dcl priority_no fixed bin  defined (cobol_$priority_no);
 13   142 dcl cobol_$compile_count fixed bin ext;
 13   143 dcl compile_count fixed bin defined (cobol_$compile_count);
 13   144 dcl cobol_$ptr_assumption_ind fixed bin ext;
 13   145 dcl ptr_assumption_ind fixed bin defined (cobol_$ptr_assumption_ind);
 13   146 dcl cobol_$reg_assumption_ind fixed bin ext;
 13   147 dcl reg_assumption_ind fixed bin defined (cobol_$reg_assumption_ind);
 13   148 dcl cobol_$perform_para_index fixed bin ext;
 13   149 dcl perform_para_index fixed bin defined (cobol_$perform_para_index);
 13   150 dcl cobol_$perform_sect_index fixed bin ext;
 13   151 dcl perform_sect_index fixed bin defined (cobol_$perform_sect_index);
 13   152 dcl cobol_$alter_index fixed bin ext;
 13   153 dcl alter_index fixed bin defined (cobol_$alter_index);
 13   154 dcl cobol_$list_off fixed bin ext;
 13   155 dcl list_off fixed bin defined (cobol_$list_off);
 13   156 dcl cobol_$constant_offset fixed bin ext;
 13   157 dcl constant_offset fixed bin defined (cobol_$constant_offset);
 13   158 dcl cobol_$misc_max fixed bin ext;
 13   159 dcl misc_max fixed bin defined (cobol_$misc_max);
 13   160 dcl cobol_$pd_map_max fixed bin ext;
 13   161 dcl pd_map_max fixed bin defined (cobol_$pd_map_max);
 13   162 dcl cobol_$map_data_max fixed bin ext;
 13   163 dcl map_data_max fixed bin defined (cobol_$map_data_max);
 13   164 dcl cobol_$fixup_max fixed bin ext;
 13   165 dcl fixup_max fixed bin defined (cobol_$fixup_max);
 13   166 dcl cobol_$tag_table_max fixed bin ext;
 13   167 dcl tag_table_max fixed bin defined (cobol_$tag_table_max);
 13   168 dcl cobol_$temp_token_max fixed bin ext;
 13   169 dcl temp_token_max fixed bin defined (cobol_$temp_token_max);
 13   170 dcl cobol_$allo1_max fixed bin ext;
 13   171 dcl allo1_max fixed bin defined (cobol_$allo1_max);
 13   172 dcl cobol_$eln_max fixed bin ext;
 13   173 dcl eln_max fixed bin defined (cobol_$eln_max);
 13   174 dcl cobol_$debug_enable fixed bin ext;
 13   175 dcl debug_enable fixed bin defined (cobol_$debug_enable);
 13   176 dcl cobol_$non_source_offset fixed bin ext;
 13   177 dcl non_source_offset fixed bin defined (cobol_$non_source_offset);
 13   178 dcl cobol_$initval_flag fixed bin ext;
 13   179 dcl initval_flag fixed bin defined (cobol_$initval_flag);
 13   180 dcl cobol_$date_compiled_sw fixed bin ext;
 13   181 dcl date_compiled_sw fixed bin defined (cobol_$date_compiled_sw);
 13   182 dcl cobol_$include_cnt fixed bin ext;
 13   183 dcl include_cnt fixed bin defined (cobol_$include_cnt);
 13   184 dcl cobol_$fs_charcnt fixed bin ext;
 13   185 dcl fs_charcnt fixed bin defined (cobol_$fs_charcnt);
 13   186 dcl cobol_$ws_charcnt fixed bin ext;
 13   187 dcl ws_charcnt fixed bin defined (cobol_$ws_charcnt);
 13   188 dcl cobol_$coms_charcnt fixed bin ext;
 13   189 dcl coms_charcnt fixed bin defined (cobol_$coms_charcnt);
 13   190 dcl cobol_$ls_charcnt fixed bin ext;
 13   191 dcl ls_charcnt fixed bin defined (cobol_$ls_charcnt);
 13   192 dcl cobol_$cons_charcnt fixed bin ext;
 13   193 dcl cons_charcnt fixed bin defined (cobol_$cons_charcnt);
 13   194 dcl cobol_$value_cnt fixed bin ext;
 13   195 dcl value_cnt fixed bin defined (cobol_$value_cnt);
 13   196 dcl cobol_$cd_cnt fixed bin ext;
 13   197 dcl cd_cnt fixed bin defined (cobol_$cd_cnt);
 13   198 dcl cobol_$fs_wdoff fixed bin ext;
 13   199 dcl fs_wdoff fixed bin defined (cobol_$fs_wdoff);
 13   200 dcl cobol_$ws_wdoff fixed bin ext;
 13   201 dcl ws_wdoff fixed bin defined (cobol_$ws_wdoff);
 13   202 dcl cobol_$coms_wdoff fixed bin ext;
 13   203 dcl coms_wdoff fixed bin defined (cobol_$coms_wdoff);
 13   204 
 13   205 /* CHARACTER */
 13   206 dcl cobol_$scratch_dir char (168)   aligned ext;
 13   207 dcl scratch_dir char (168)   aligned defined (cobol_$scratch_dir);			/* -42- */
 13   208 dcl cobol_$obj_seg_name char (32)   aligned ext;
 13   209 dcl obj_seg_name char (32)   aligned defined (cobol_$obj_seg_name);		/* -8- */
 13   210 
 13   211 /* BIT */
 13   212 dcl cobol_$xref_bypass bit(1) aligned ext;
 13   213 dcl xref_bypass bit(1) aligned defined (cobol_$xref_bypass);			/* -1- */
 13   214 dcl cobol_$same_sort_merge_proc bit(1) aligned ext;
 13   215 dcl same_sort_merge_proc bit(1) aligned defined (cobol_$same_sort_merge_proc);		/* -1- */
 13   216 
 13   217 
 13   218 /* END INCLUDE FILE ... cobol_incl.pl1*/
 13   219 
 13   220 
     1489 
 14     1 
 14     2 /* BEGIN INCLUDE FILE ...   cobol_xref.incl.pl1 */
 14     3 
 14     4 dcl	mcobol		bit(1);
 14     5 dcl	mcobol_xref	bit(1);
 14     6 
 14     7 dcl	1 token_area	based(  cobol_$xref_token_ptr),
 14     8 	 2 token_count	fixed bin(35),
 14     9 	 2 element(10000),
 14    10 	  3 token_ptr	ptr,
 14    11 	  3 name_ptr	ptr;
 14    12 
 14    13 dcl	1 chain_area	based(  cobol_$xref_chain_ptr),
 14    14 	 2 chain_count	fixed bin(35),
 14    15 	 2 element(80000),
 14    16 	  3 ref_line	fixed bin(17) unaligned,
 14    17 	  3 next		fixed bin(17) unaligned;
 14    18 
 14    19 dcl	xref_ptr		ptr;
 14    20 
 14    21 dcl	1 xref_chain	based(xref_ptr),
 14    22 	 2 first		fixed bin(17) unaligned,
 14    23 	 2 last		fixed bin(17) unaligned;
 14    24 
 14    25 /* END INCLUDE FILE ...   cobol_xref.incl.pl1 */
 14    26 
     1490 
 15     1 
 15     2 /* BEGIN INCLUDE FILE ... cobol_repl_diag_values.incl.pl1 */
 15     3 /* Modified on 11/02/78/ by RAL, [3.0-1], Implement alternate record keys for MR7.0 */
 15     4 /* Last modified on 11/19/76 by ORN */
 15     5 
 15     6 dcl fatal_AMBIGUOUS_UNQUAL_REF	fixed bin static options(constant) init(1);
 15     7 dcl fatal_DATANAME_NOT_DECLARED	fixed bin static options(constant) init(2);
 15     8 dcl fatal_AMBIGUOUS_QUAL_REF		fixed bin static options(constant) init(3);
 15     9 dcl fatal_PROCNAME_NOT_DECLARED	fixed bin static options(constant) init(4);
 15    10 dcl fatal_PROCNAME_MULTIPLY_DECLARED	fixed bin static options(constant) init(5);
 15    11 dcl fatal_DATANAME_MULTIPLY_DECLARED	fixed bin static options(constant) init(6);
 15    12 
 15    13 dcl obs_KEY_IN_RECORD		fixed bin static options(constant) init(21);
 15    14 dcl obs_KEY_NOT_IN_RECORD		fixed bin static options(constant) init(23);
 15    15 dcl warn_BAD_STATUS_KEY		fixed bin static options(constant) init(24);
 15    16 dcl warn_DATANAME_NOT_ALPHANUM	fixed bin static options(constant) init(25);
 15    17 
 15    18 dcl fatal_MNEMONIC_NAME_QUALIFIER	fixed bin static options(constant) init(32);
 15    19 dcl fatal_INDEX_NAME_QUALIFIER	fixed bin static options(constant) init(33);
 15    20 dcl fatal_ALPHABET_NAME_QUALIFIER	fixed bin static options(constant) init(34);
 15    21 dcl fatal_INVALID_QUALIFIER		fixed bin static options(constant) init(35);
 15    22 dcl fatal_MNEMONIC_NAME_EXPECTED	fixed bin static options(constant) init(36);
 15    23 dcl warn_OBSOLETE_MNEMONIC_NAME	fixed bin static options(constant) init(37);
 15    24 dcl obs_SPECIAL_NAMES_NOTE		fixed bin static options(constant) init(38);
 15    25 dcl warn_SPECIAL_NAMES_RECOVERY	fixed bin static options(constant) init(39);
 15    26 dcl fatal_FILENAME_MULTIPLY_DECLARED	fixed bin static options(constant) init(40);
 15    27 dcl fatal_NO_LINAGE_FOR_THIS_FILE	fixed bin static options(constant) init(41);
 15    28 dcl fatal_NO_LINAGE_FOR_ANY_FILE	fixed bin static options(constant) init(42);
 15    29 dcl fatal_AMBIGUOUS_LINAGE_REF	fixed bin static options(constant) init(43);
 15    30 dcl fatal_AMBIGUOUS_PROCNAME_REF	fixed bin static options(constant) init(44);
 15    31 dcl fatal_FILE_NAME_EXPECTED		fixed bin static options(constant) init(45);
 15    32 dcl fatal_DATANAME_EXPECTED		fixed bin static options(constant) init(46);
 15    33 dcl fatal_DATANAME_NOT_NUMERIC	fixed bin static options(constant) init(47);
 15    34 dcl warn_DATANAME_NOT_INTEGER		fixed bin static options(constant) init(48);
 15    35 dcl warn_ODO_RANGE			fixed bin static options(constant) init(49);
 15    36 dcl warn_CONSTANT_ILLOGICAL		fixed bin static options(constant) init(50);
 15    37 dcl fatal_DATANAME_SUBSCRIPTED	fixed bin static options(constant) init(51);
 15    38 dcl warn_DATANAME_VARLEN		fixed bin static options(constant) init(52);
 15    39 dcl warn_ITEM_IN_FILE_SECTION		fixed bin static options(constant) init(53);
 15    40 dcl fatal_ITEM_IN_COM_SECTION		fixed bin static options(constant) init(54);
 15    41 dcl fatal_ITEM_IN_REPORT_SECTION	fixed bin static options(constant) init(55);
 15    42 dcl fatal_ITEM_IN_CONSTANT_SECTION	fixed bin static options(constant) init(56);
 15    43 dcl warn_BAD_CATALOG_NAME		fixed bin static options(constant) init(57);
 15    44 dcl warn_BAD_TAPE_CATALOG_NAME	fixed bin static options(constant) init(58);
 15    45 dcl warn_BAD_ATTACH_OPTIONS		fixed bin static options(constant) init(59);
 15    46 dcl warn_BAD_VALUE_OF_ID		fixed bin static options(constant) init(60);
 15    47 dcl warn_BAD_VALUE_OF_RETENTION	fixed bin static options(constant) init(61);
 15    48 dcl fatal_CDNAME_MULTIPLY_DECLARED	fixed bin static options(constant) init(62);
 15    49 dcl fatal_KEY_NOT_IN_RECORD		fixed bin static options(constant) init(63);	/* [3.0-1] */
 15    50 dcl fatal_SAME_RECORD_OFFSET		fixed bin static options(constant) init(64);	/* [3.0-1] */
 15    51 
 15    52 /* END INCLUDE FILE ... cobol_repl_diag_values.incl.pl1 */
 15    53 
     1491 
 16     1 
 16     2 /* BEGIN INCLUDE FILE ... cobol_size_values.incl.pl1 */
 16     3 /* Last modified on 11/18/76 by ORN */
 16     4 
 16     5 /* This include file contains constant values associated with
 16     6*the fixed sizes of Multics COBOL tokens and other data */
 16     7 
 16     8 dcl size_COMHDR fixed bin		static options(constant) init(56);
 16     9 dcl size_NAMESIZE fixed bin		static options(constant) init(4);
 16    10 
 16    11 dcl size_TOKEN (40) fixed bin		static options(constant) init(
 16    12 /* TOKEN NUMBER	NAME			STRUCTURE		PTR	SIZE (fixed portion in bytes) */
 16    13 /*	1	reserved word		reserved_word	rw_ptr	*/	28,
 16    14 /*	2	numeric literal		numeric_lit	nlit_ptr	*/	36,
 16    15 /*	3	alphanumeric literal	alphanum_lit	alit_ptr	*/	24,
 16    16 /*	4							*/	0,
 16    17 /*	5	diagnostic message		message		message_ptr */	32,
 16    18 /*	6							*/	0,
 16    19 /*	7	procedure definition	proc_def		proc_def_ptr */	52,
 16    20 /*	8	user word			user_word			*/	24,
 16    21 /*	9	data name			data_name		dn_ptr	*/	112,
 16    22 /*	10	index name		index_name	ind_ptr	*/	80,
 16    23 /*	11							*/	52,
 16    24 /*	12	file name			fd_token		name_ptr	*/	48,
 16    25 /*	13	communication name		cdtoken		cdtoken_ptr */	64,
 16    26 /*	14							*/	100,
 16    27 /*	15							*/	68,
 16    28 /*	16	sort file name		(use type 12 structure)	*/		48,
 16    29 /*	17	mnemonic name		mnemonic_name	name_ptr	*/	56,
 16    30 /*	18	procedure reference		proc_ref		proc_ref_ptr */	52,
 16    31 /*	19	end statement		end_stmt		eos_ptr	*/	38,
 16    32 /*	20							*/	120,
 16    33 /*	21							*/	84,
 16    34 /*	22							*/	56,
 16    35 /*	23							*/	0,
 16    36 /*	24							*/	0,
 16    37 /*	25							*/	0,
 16    38 /*	26							*/	0,
 16    39 /*	27							*/	0,
 16    40 /*	28							*/	0,
 16    41 /*	29							*/	0,
 16    42 /*	30	internal tag		int_tag		tag_ptr	*/	49,
 16    43 /*	31	equate tag		equate_tags	equate_ptr */	37,
 16    44 /*	32							*/	0,
 16    45 /*	33							*/	0,
 16    46 /*	34							*/	0,
 16    47 /*	35							*/	0,
 16    48 /*	36							*/	0,
 16    49 /*	37							*/	0,
 16    50 /*	38							*/	0,
 16    51 /*	39							*/	0,
 16    52 /*	40	alphabet name		alphabet_name	alpha_name_ptr */	580);
 16    53 /*	100	internal register		cobol_type100	cobol_type100_ptr	17 */
 16    54 /*	102	immediate constant		immed_const	immed_const_ptr	20 */
 16    55 
 16    56 /* END INCLUDE FILE ... cobol_size_values.incl.pl1 */
 16    57 
     1492 
 17     1 /* BEGIN INCLUDE FILE ... cobol_file_desc_1.incl.pl1 */
 17     2 /* Last Modified on Oct. 14, 1978 by FCH */
 17     3 
 17     4 dcl file_desc_1_type fixed bin static init(1) options(constant);
 17     5 dcl file_desc_1_ptr ptr;
 17     6 
 17     7 dcl 1 file_desc_1 based(file_desc_1_ptr),
 17     8     2 type fixed bin,
 17     9     2 alt_key_count fixed bin,
 17    10     2 prime_key,
 17    11     3  offset fixed bin,
 17    12     3  size fixed bin,
 17    13     2 alt_key(0 refer(file_desc_1.alt_key_count)),
 17    14     3  offset fixed bin,
 17    15     3  size fixed bin;
 17    16 
 17    17 /*
 17    18*
 17    19*FIELD		CONTENTS
 17    20*
 17    21*type		file type
 17    22*alt_key_count	alternate_key_count
 17    23*prime key		prime record key
 17    24*alt_key		alternate record keys
 17    25*offset		offset (in bytes) of key field in record
 17    26*size		size (in bytes) of key field in record
 17    27*		negative if duplicates legal
 17    28*
 17    29**/
 17    30 
 17    31 /* END INCLUDE FILE ... cobol_file_desc_1.incl.pl1 */
     1493 
     1494 
     1495      end cobol_repl3;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/24/89  0835.4  cobol_repl3.pl1                   >spec>install>MR12.3-1048>cobol_repl3.pl1
1429         1    03/27/82  0439.9  cobol_type9.incl.pl1              >ldd>include>cobol_type9.incl.pl1
1-17         2    11/11/82  1712.7  cobol_TYPE9.incl.pl1              >ldd>include>cobol_TYPE9.incl.pl1
1480         3    03/27/82  0431.3  cobol_ext_.incl.pl1               >ldd>include>cobol_ext_.incl.pl1
1481         4    11/11/82  1712.7  cobol_file_table.incl.pl1         >ldd>include>cobol_file_table.incl.pl1
1482         5    11/11/82  1712.8  cobol_type12.incl.pl1             >ldd>include>cobol_type12.incl.pl1
5-17         6    03/27/82  0439.6  cobol_TYPE12.incl.pl1             >ldd>include>cobol_TYPE12.incl.pl1
1483         7    11/11/82  1712.8  cobol_file_key.incl.pl1           >ldd>include>cobol_file_key.incl.pl1
1484         8    11/11/82  1712.8  cobol_linage_rec.incl.pl1         >ldd>include>cobol_linage_rec.incl.pl1
1485         9    11/11/82  1712.8  cobol_fixed_common.incl.pl1       >ldd>include>cobol_fixed_common.incl.pl1
1486        10    03/27/82  0439.6  cobol_com2.incl.pl1               >ldd>include>cobol_com2.incl.pl1
1487        11    03/27/82  0439.6  cobol_cirst.incl.pl1              >ldd>include>cobol_cirst.incl.pl1
1488        12    03/27/82  0439.7  cobol_io_info.incl.pl1            >ldd>include>cobol_io_info.incl.pl1
1489        13    11/11/82  1712.7  cobol_.incl.pl1                   >ldd>include>cobol_.incl.pl1
1490        14    03/27/82  0439.9  cobol_xref.incl.pl1               >ldd>include>cobol_xref.incl.pl1
1491        15    03/27/82  0439.4  cobol_repl_diag_values.incl.pl1   >ldd>include>cobol_repl_diag_values.incl.pl1
1492        16    03/27/82  0439.8  cobol_size_values.incl.pl1        >ldd>include>cobol_size_values.incl.pl1
1493        17    03/27/82  0439.4  cobol_file_desc_1.incl.pl1        >ldd>include>cobol_file_desc_1.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
abs_record_offset        14            based           fixed bin(24,0)          level 2 dcl 4-25 set ref 1416* 1421*
addr                                                   builtin function         dcl 173 ref 204 206 279 279 335 366 366 381 381 381
                                                                                  381 462 462 462 462 534 534 556 556 579 605 605
                                                                                  621 622 654 661 669 669 669 669 695 695 695 695
                                                                                  710 710 710 710 795 795 811 811 822 822 822 822
                                                                                  847 918 919 950 950 950 950 1183 1214 1214 1214
                                                                                  1214 1229 1229 1343 1343 1387 1387 1435 1435 1474
addrel                                                 builtin function         dcl 174 ref 228 247 261 263 619 738 1208
adiag                           000010 internal static structure                level 1 unaligned dcl 157 set ref 1229 1229 1343
                                                                                  1343 1387 1387 1435 1435
alphanum                 21(19)        based           bit(1)                   level 2 packed packed unaligned dcl 1-16 ref 1070
                                                                                  1100 1114 1119 1125 1131
alt_key                   4            based           structure                array level 2 unaligned dcl 17-7
alt_key_count             1            based           fixed bin(17,0)          level 2 dcl 17-7 set ref 1023* 1277 1280 1280 1285
                                                                                  1289* 1294* 1294 1296 1306 1310 1310 1317* 1333
                                                                                  1350 1355
alt_key_info             23(27)        based           char(5)                  level 2 packed packed unaligned dcl 4-25 ref 1375
alternate_keys           51            based           fixed bin(17,0)          level 2 dcl 4-25 ref 1078 1277 1277 1296 1306
anarea                                 based           structure                level 1 unaligned dcl 75
arrpntr                         000116 automatic       pointer                  array dcl 61 set ref 220* 257 259* 279 279 381 381
                                                                                  462 462 576* 597 600* 669 669 695 695 710 710 822
                                                                                  822 950 950 1214 1214
asc_dsc                   4            based           fixed bin(15,0)          level 2 dcl 10-18 ref 839
auser_wd                               based           structure                level 1 unaligned dcl 1457 in procedure "lev_diag"
auser_wd                               based           structure                level 1 unaligned dcl 897 in procedure "repl3ln"
auser_wd                               based           structure                level 1 unaligned dcl 289 in procedure "repl3a"
auser_wd                               based           structure                level 1 unaligned dcl 1009 in procedure
                                                                                  "process_keys"
auser_wd                               based           structure                level 1 unaligned dcl 756 in procedure "repl3sk"
bit_ntarea                             based           structure                level 1 unaligned dcl 81
bname                           002703 automatic       char(30)                 packed unaligned dcl 183 in procedure "cobol_repl3"
                                                                                  set ref 251* 254
bname                           005635 automatic       char(30)                 packed unaligned dcl 564 in procedure "load_01_66"
                                                                                  set ref 590* 594
bottom                    3            based           fixed bin(17,0)          level 2 dcl 880 ref 962
chain_area                             based           structure                level 1 unaligned dcl 14-13
chain_count                            based           fixed bin(35,0)          level 2 dcl 14-13 set ref 213*
cirst                                  based           structure                level 1 unaligned dcl 11-4
cm_ptr                          004772 automatic       pointer                  dcl 286 set ref 323* 324 342* 350 363* 364 378* 445*
                                                                                  541*
cn1                             002713 automatic       char(4)                  packed unaligned dcl 184 set ref 249* 250 587* 588
cobol_$same_sort_merge_proc     000062 external static bit(1)                   dcl 13-214 set ref 733*
cobol_$xref_bypass              000060 external static bit(1)                   dcl 13-212 set ref 211*
cobol_$xref_chain_ptr           000056 external static pointer                  dcl 13-74 ref 213
cobol_$xref_token_ptr           000054 external static pointer                  dcl 13-72 ref 212 245 245 246 246 247 247
cobol_c_list                    000024 constant        entry                    external dcl 187 ref 1229 1343 1387 1476
cobol_com_ptr                          defined         pointer                  dcl 3-25 ref 208 216 266 268 270 272 274 274 276 276
                                                                                  323 771 925 937 1022 1061 1084 1155
cobol_ext_$cobol_cmfp           000030 external static pointer                  dcl 3-20 set ref 323* 342* 363* 378* 445* 541* 658*
                                                                                  772* 775* 801* 818* 867* 925* 937* 946* 976* 986*
                                                                                  989* 1026* 1038* 1157* 1158* 1168* 1337* 1377*
cobol_ext_$cobol_com_ptr        000032 external static pointer                  dcl 3-24 ref 208 208 216 216 266 266 268 268 270 270
                                                                                  272 272 274 274 274 274 276 276 276 276 323 323
                                                                                  771 771 925 925 937 937 1022 1022 1061 1061 1084
                                                                                  1084 1155 1155
cobol_ext_$cobol_curr_out       000036 external static pointer                  dcl 3-54 set ref 1435*
cobol_ext_$cobol_name_fileno_ptr
                                000034 external static pointer                  dcl 3-40 set ref 225* 531* 543* 545* 582* 609*
cobol_pool_                     000064 constant        entry                    external dcl 1265 ref 1280 1310
cobol_read_ft_                  000026 constant        entry                    external dcl 188 ref 1073 1110
cobol_replb                     000022 constant        entry                    external dcl 94 ref 279
cobol_swf_put                   000042 constant        entry                    external dcl 12-11 ref 1435
cobol_usrwd                     000020 constant        entry                    external dcl 87 ref 381 462 669 695 710 822 950 1214
cobol_vdwf_close                000052 constant        entry                    external dcl 12-23 ref 543
cobol_vdwf_dget                 000046 constant        entry                    external dcl 12-19 ref 323 342 363 445 541 582 658
                                                                                  772 775 801 818 867 925 937 946 976 1026 1038 1157
                                                                                  1158 1168 1337 1377
cobol_vdwf_dput                 000050 constant        entry                    external dcl 12-21 ref 531 986 989
cobol_vdwf_open                 000040 constant        entry                    external dcl 12-6 ref 545
cobol_vdwf_sget                 000044 constant        entry                    external dcl 12-15 ref 225 378 609
column                    2     000010 internal static fixed bin(17,0)          level 2 in structure "adiag" dcl 157 in procedure
                                                                                  "cobol_repl3" set ref 391* 437* 471* 501* 525*
                                                                                  833* 859* 970* 1228* 1342* 1386*
column                    3            based           fixed bin(15,0)          level 2 in structure "linage_name_rec" dcl 10-72
                                                                                  in procedure "cobol_repl3" ref 930 980
column                    7            based           fixed bin(17,0)          level 2 in structure "file_key" dcl 7-17
                                                                                  in procedure "cobol_repl3" ref 1032 1342 1386
column                    2            based           fixed bin(17,0)          level 2 in structure "auser_wd" dcl 1457
                                                                                  in procedure "lev_diag" ref 1471
column                    2     006224 automatic       fixed bin(17,0)          level 2 in structure "lev_diag_item" dcl 1448
                                                                                  in procedure "lev_diag" set ref 1471*
column                    3            based           fixed bin(15,0)          level 2 in structure "qual_rec" dcl 10-39
                                                                                  in procedure "cobol_repl3" ref 1170
column                    2            based           fixed bin(17,0)          level 2 in structure "data_name" dcl 96 in procedure
                                                                                  "cobol_repl3" ref 391 471 501 525
column                    3            based           fixed bin(15,0)          level 2 in structure "obj_rec" dcl 10-65
                                                                                  in procedure "cobol_repl3" ref 437 1162
column                    2            based           fixed bin(17,0)          level 2 in structure "auser_wd" dcl 1009
                                                                                  in procedure "process_keys" set ref 1032* 1162*
                                                                                  1170* 1228
com2_ptr                        000104 automatic       pointer                  dcl 52 set ref 324* 326 327 328 329 330 342 350* 351
                                                                                  352 358 363 364* 367 368 373 378 436 437 658* 659
                                                                                  660 660 664 666 667 673 675 678 680 682 683 686
                                                                                  687 690 691 691 692 699 700 701 706 708 709 714
                                                                                  715 722 724 772* 774 775* 775 783 784 785 786 788
                                                                                  798 801* 801 804 806 814 818* 818 829 837 839 848
                                                                                  852 867* 925* 926 927 928 929 930 931 932 976* 977
                                                                                  978 979 980 981 982 983 985 1038* 1039 1040 1042
                                                                                  1158* 1161 1162 1163 1164 1166 1168* 1169 1170
                                                                                  1171 1172 1174
communication_section
                         21(04)        based           bit(1)                   level 2 packed packed unaligned dcl 1-16 ref 1251
comp_level              137            based           char(1)                  level 2 packed packed unaligned dcl 9-26 ref 1061
                                                                                  1084
constant_section         21(02)        based           bit(1)                   level 2 packed packed unaligned dcl 1-16 ref 1193
                                                                                  1249
continue                        002714 automatic       bit(1)                   packed unaligned dcl 189 set ref 1407* 1408 1409*
counter                         002273 automatic       fixed bin(17,0)          dcl 88 set ref 344* 371* 371 372 381* 449* 462* 558*
                                                                                  558 559 777* 792* 792 793 808* 808 809 822* 1029*
                                                                                  1159* 1206* 1206 1207 1214*
cur_fileno                      005772 automatic       fixed bin(17,0)          dcl 911 set ref 927* 937 983 985*
data_name                              based           structure                level 1 unaligned dcl 1-16 in procedure
                                                                                  "process_keys"
data_name                              based           structure                level 1 unaligned dcl 96 in procedure "cobol_repl3"
data_name_ptr                          parameter       pointer                  dcl 1373 in procedure "put_dup_offset_diag" set ref
                                                                                  1368 1380*
data_name_ptr                          parameter       pointer                  dcl 1328 in procedure "check_dup_offset" set ref
                                                                                  1323 1344* 1360*
data_name_ptr                          parameter       pointer                  dcl 1262 in procedure "build_file_desc" set ref 1258
                                                                                  1275* 1285* 1300* 1314*
data_name_ptr                          parameter       pointer                  dcl 1400 in procedure "get_rel_offset" ref 1394 1402
desc                      5            based           fixed bin(7,0)           level 2 in structure "linage_name_rec" dcl 10-72
                                                                                  in procedure "cobol_repl3" ref 928 978
desc                     12            based           char(40)                 level 2 in structure "file_key" packed packed
                                                                                  unaligned dcl 7-17 in procedure "cobol_repl3" set
                                                                                  ref 1051*
descr                     1(09)        based           char(5)                  level 2 packed packed unaligned dcl 10-4 set ref
                                                                                  1158* 1183*
descr1                   22(28)        based           bit(8)                   level 2 packed packed unaligned dcl 96 ref 387
descr_bit                21            based           bit(64)                  level 2 packed packed unaligned dcl 96 set ref 387
                                                                                  400 403 429 479* 514* 515* 516* 839* 841*
device                   47            based           fixed bin(17,0)          level 2 dcl 4-25 ref 1111
diag                                   parameter       fixed bin(17,0)          dcl 1225 ref 1223 1226
diag_no                         002270 automatic       fixed bin(17,0)          dcl 88 set ref 381* 433 435 462* 521 523 669* 695*
                                                                                  710* 822* 857 950* 968 1214* 1219 1219
diag_num                               parameter       fixed bin(17,0)          dcl 1445 ref 1442 1472
diag_number               5     000010 internal static fixed bin(17,0)          level 2 dcl 157 set ref 389* 433* 435* 469* 498*
                                                                                  508* 521* 523* 831* 855* 857* 966* 968* 1226*
                                                                                  1339* 1383*
divide                                                 builtin function         dcl 175 ref 228 247 261 263 619 738 1208
dn_key                                 based           structure                level 1 packed packed unaligned dcl 1004
dn_ptr                          006072 automatic       pointer                  dcl 1003 set ref 1048 1051 1057 1070 1074 1091* 1097
                                                                                  1100 1100 1114 1114 1114 1119 1119 1125 1125 1131
                                                                                  1131 1140 1180 1183 1187 1189 1189 1189 1193 1214*
                                                                                  1235 1237 1242 1244 1244 1249 1251 1253
dup_offset                             parameter       fixed bin(17,0)          dcl 1372 ref 1368 1380
duplicates                3(27)        based           bit(1)                   level 3 packed packed unaligned dcl 7-17 ref 1302
edit_ptr                 26            based           fixed bin(17,0)          level 2 dcl 96 set ref 405 410 490*
element                   2            based           structure                array level 2 unaligned dcl 14-7
extension_bit                   005032 automatic       bit(1)                   packed unaligned dcl 305 set ref 407* 482 484*
extension_size                  005033 automatic       fixed bin(17,0)          dcl 306 set ref 413* 414 418* 419 492 492
extension_temp                  005034 automatic       char(434)                packed unaligned dcl 307 set ref 414* 419* 492
fatal_DATANAME_EXPECTED         000064 constant        fixed bin(17,0)          initial dcl 15-32 set ref 1048* 1180*
fatal_DATANAME_NOT_DECLARED            constant        fixed bin(17,0)          initial dcl 15-7 set ref 966 1216*
fatal_DATANAME_NOT_NUMERIC      000063 constant        fixed bin(17,0)          initial dcl 15-33 set ref 1242*
fatal_DATANAME_SUBSCRIPTED      000061 constant        fixed bin(17,0)          initial dcl 15-37 set ref 1235*
fatal_ITEM_IN_COM_SECTION       000056 constant        fixed bin(17,0)          initial dcl 15-40 set ref 1251*
fatal_ITEM_IN_CONSTANT_SECTION         constant        fixed bin(17,0)          initial dcl 15-42 set ref 1249*
fatal_ITEM_IN_REPORT_SECTION    000055 constant        fixed bin(17,0)          initial dcl 15-41 set ref 1253*
fatal_KEY_NOT_IN_RECORD         000050 constant        fixed bin(17,0)          initial dcl 15-49 set ref 1082*
fatal_SAME_RECORD_OFFSET               constant        fixed bin(17,0)          initial dcl 15-50 ref 1339 1383
fd_token                               based           structure                level 1 unaligned dcl 5-16
file_desc_1                            based           structure                level 1 unaligned dcl 17-7
file_desc_1_area                002716 automatic       char(4200)               packed unaligned dcl 191 set ref 204 1280 1280 1310
                                                                                  1310
file_desc_1_offset       13            based           fixed bin(24,0)          level 2 dcl 4-25 set ref 1282* 1312*
file_desc_1_ptr                 004760 automatic       pointer                  dcl 17-5 set ref 204* 1023 1271 1273 1275 1277 1280
                                                                                  1280 1285 1289 1294 1294 1296 1298 1300 1302 1302
                                                                                  1306 1310 1310 1317 1333 1334 1334 1344 1350 1355
                                                                                  1356 1356 1360
file_info                              based           structure                level 1 unaligned dcl 192
file_key                               based           structure                level 1 unaligned dcl 7-17
file_keys                74            based           char(5)                  level 2 packed packed unaligned dcl 9-26 ref 270
                                                                                  1022
file_no                  12            based           fixed bin(17,0)          level 2 in structure "fd_token" dcl 5-16
                                                                                  in procedure "cobol_repl3" ref 715
file_no                   4            based           fixed bin(17,0)          level 2 in structure "file_key" dcl 7-17
                                                                                  in procedure "cobol_repl3" set ref 1057 1073* 1074
                                                                                  1110*
file_num                 14            based           fixed bin(17,0)          level 2 dcl 1-16 ref 1057 1074
file_section             21            based           bit(1)                   level 2 packed packed unaligned dcl 1-16 ref 1097
file_table                             based           structure                level 1 unaligned dcl 4-25
filedescr_offsets        25            based           char(5)                  array level 2 packed packed unaligned dcl 9-26 set
                                                                                  ref 937*
fileno                    4            based           fixed bin(7,0)           level 2 dcl 10-72 ref 927 983 985
fill_sort_info                  005670 automatic       bit(1)                   packed unaligned dcl 639 set ref 660* 718
first                                  based           fixed bin(17,0)          level 2 packed packed unaligned dcl 14-21 set ref
                                                                                  229*
first_key                 1(09)        based           char(5)                  level 2 packed packed unaligned dcl 10-11 set ref
                                                                                  775*
fixed                                                  builtin function         dcl 176 ref 250 254 588 594 1219 1219
fixed_common                           based           structure                level 1 unaligned dcl 9-26
fkey_ptr                        000102 automatic       pointer                  dcl 50 set ref 1026* 1027 1031 1032 1033 1034 1036
                                                                                  1051 1053 1057 1067 1067 1073 1074 1095 1103 1103
                                                                                  1108 1108 1110 1123 1128 1128 1134 1138 1147 1268
                                                                                  1273 1275 1292 1298 1300 1302 1337* 1341 1342
                                                                                  1377* 1380 1385 1386 1389
flag_66                         005646 automatic       bit(1)                   packed unaligned dcl 564 set ref 573* 604* 613
footing                   1            based           fixed bin(17,0)          level 2 dcl 880 ref 958
ft_ptr                          000100 automatic       pointer                  dcl 50 set ref 937* 944 946 1073* 1078 1110* 1111
                                                                                  1277 1277 1282 1296 1306 1312 1337 1375 1416 1421
hashno                          002262 automatic       fixed bin(17,0)          dcl 66 set ref 252* 254* 254 256* 256 257 259 592*
                                                                                  594* 594 596* 596 597 600
i                               006153 automatic       fixed bin(17,0)          dcl 1263 in procedure "build_file_desc" set ref
                                                                                  1296* 1298 1300 1302 1302
i                               005632 automatic       fixed bin(17,0)          dcl 564 in procedure "load_01_66" set ref 575* 576*
                                                                                  593* 594*
i                               002700 automatic       fixed bin(17,0)          dcl 182 in procedure "cobol_repl3" set ref 219* 220*
                                                                                  253* 254*
info                      7            based           bit(8)                   level 2 in structure "skey_rec" packed packed
                                                                                  unaligned dcl 10-18 in procedure "cobol_repl3" set
                                                                                  ref 829 837* 852
info                      3(27)        based           structure                level 2 in structure "file_key" packed packed
                                                                                  unaligned dcl 7-17 in procedure "cobol_repl3"
info                      6     006224 automatic       bit(36)                  level 2 in structure "lev_diag_item" packed packed
                                                                                  unaligned dcl 1448 in procedure "lev_diag" set ref
                                                                                  1469*
info1                    10            based           bit(1)                   level 2 packed packed unaligned dcl 96 set ref 231*
info2                    10(01)        based           bit(1)                   level 2 packed packed unaligned dcl 96 set ref 232*
info3                    10(02)        based           bit(1)                   level 2 packed packed unaligned dcl 96 set ref 233*
info4                    10(03)        based           bit(5)                   level 2 packed packed unaligned dcl 96 set ref 236*
init_ptr                 25            based           fixed bin(17,0)          level 2 dcl 96 set ref 405 409 488*
input_offset                           parameter       fixed bin(24,0)          dcl 1398 ref 1394 1414
input_proc                             parameter       bit(1)                   packed unaligned dcl 636 ref 632 729
item_length              16            based           fixed bin(24,0)          level 2 dcl 1-16 ref 1100 1114 1119 1125 1131 1140
                                                                                  1189
j                               006162 automatic       fixed bin(17,0)          dcl 1327 set ref 1333* 1334* 1350* 1355 1356 1360*
jj                              006163 automatic       fixed bin(17,0)          dcl 1327 set ref 1355* 1356*
k66area                                based           char(1)                  array packed unaligned dcl 316 set ref 534 605
key                             004774 automatic       char(5)                  packed unaligned dcl 287 in procedure "repl3a" set
                                                                                  ref 327* 333 537 582*
key                             006074 automatic       char(5)                  packed unaligned dcl 1007 in procedure
                                                                                  "process_keys" set ref 1022* 1025 1026* 1147*
                                                                                  1155* 1156 1157* 1197* 1375* 1376 1377* 1389*
key1                            004750 automatic       char(5)                  packed unaligned dcl 12-29 set ref 225* 606 609*
key66_area                      005217 automatic       char(1000)               packed unaligned dcl 315 set ref 335 534 605 622
key66ptr                        005612 automatic       pointer                  dcl 318 set ref 335* 531 534* 605* 606 622*
key_number                1            based           fixed bin(15,0)          level 2 in structure "occurs" dcl 10-54 in procedure
                                                                                  "cobol_repl3" set ref 848*
key_number                3            based           fixed bin(15,0)          level 2 in structure "skey_rec" dcl 10-18
                                                                                  in procedure "cobol_repl3" ref 848
key_type                  5            based           fixed bin(17,0)          level 2 dcl 7-17 ref 1027 1053 1067 1067 1095 1103
                                                                                  1103 1108 1108 1123 1128 1128 1134 1138 1268 1292
keychars                  1            based           char(2)                  level 2 packed packed unaligned dcl 1004 ref 1183
keyvalue                               based           char(5)                  packed unaligned dcl 317 set ref 531* 606*
last                      0(18)        based           fixed bin(17,0)          level 2 packed packed unaligned dcl 14-21 set ref
                                                                                  230*
length                    5            based           fixed bin(17,0)          level 2 in structure "auser_wd" dcl 897 in procedure
                                                                                  "repl3ln" set ref 931* 981*
length                   16            based           fixed bin(24,0)          level 2 in structure "data_name" dcl 96 in procedure
                                                                                  "cobol_repl3" set ref 397 427 476* 513*
length                    5            based           fixed bin(17,0)          level 2 in structure "auser_wd" dcl 1009
                                                                                  in procedure "process_keys" set ref 1033* 1039*
                                                                                  1163* 1164 1164 1171* 1172 1172 1208
length                    5            based           fixed bin(17,0)          level 2 in structure "auser_wd" dcl 756 in procedure
                                                                                  "repl3sk" set ref 785* 786 786 787 804* 806 806
                                                                                  807
length                    5            based           fixed bin(17,0)          level 2 in structure "auser_wd" dcl 289 in procedure
                                                                                  "repl3a" set ref 351* 352 352 353 367* 368 368 369
                                                                                  455* 457
lev_diag_item                   006224 automatic       structure                level 1 unaligned dcl 1448 set ref 1474
lev_diag_ptr                    006222 automatic       pointer                  dcl 1445 set ref 1474* 1476*
level                    12            based           fixed bin(17,0)          level 2 in structure "data_name" dcl 1-16
                                                                                  in procedure "process_keys" ref 1403 1409
level                    12            based           fixed bin(17,0)          level 2 in structure "data_name" dcl 96 in procedure
                                                                                  "cobol_repl3" ref 396 426 601
levlim                          005645 automatic       fixed bin(17,0)          dcl 564 set ref 601* 602 615
linage_info             112(09)        based           char(5)                  level 2 in structure "fixed_common" packed packed
                                                                                  unaligned dcl 9-26 in procedure "cobol_repl3" set
                                                                                  ref 266 925*
linage_info              32            based           char(5)                  level 2 in structure "file_table" packed packed
                                                                                  unaligned dcl 4-25 in procedure "cobol_repl3" set
                                                                                  ref 944 946*
linage_name_rec                        based           structure                level 1 unaligned dcl 10-72
linage_ptr                      005764 automatic       pointer                  dcl 906 set ref 946* 948
linage_temp                            based           structure                level 1 unaligned dcl 880
line                      1     006224 automatic       fixed bin(17,0)          level 2 in structure "lev_diag_item" dcl 1448
                                                                                  in procedure "lev_diag" set ref 1470*
line                      1     000010 internal static fixed bin(17,0)          level 2 in structure "adiag" dcl 157 in procedure
                                                                                  "cobol_repl3" set ref 390* 436* 470* 499* 524*
                                                                                  832* 858* 969* 1227* 1341* 1385*
line                      2            based           fixed bin(15,0)          level 2 in structure "linage_name_rec" dcl 10-72
                                                                                  in procedure "cobol_repl3" ref 929 979
line                      2            based           fixed bin(15,0)          level 2 in structure "obj_rec" dcl 10-65
                                                                                  in procedure "cobol_repl3" ref 436 1161
line                      6            based           fixed bin(17,0)          level 2 in structure "file_key" dcl 7-17
                                                                                  in procedure "cobol_repl3" ref 1031 1341 1385
line                      1            based           fixed bin(17,0)          level 2 in structure "data_name" dcl 96 in procedure
                                                                                  "cobol_repl3" ref 390 470 499 524
line                      1            based           fixed bin(17,0)          level 2 in structure "auser_wd" dcl 1009
                                                                                  in procedure "process_keys" set ref 1031* 1161*
                                                                                  1169* 1227
line                      2            based           fixed bin(15,0)          level 2 in structure "qual_rec" dcl 10-39
                                                                                  in procedure "cobol_repl3" ref 1169
line                      1            based           fixed bin(17,0)          level 2 in structure "auser_wd" dcl 1457
                                                                                  in procedure "lev_diag" ref 1470
ln                              005771 automatic       fixed bin(17,0)          dcl 910 in procedure "repl3ln" set ref 946* 986*
                                                                                  989*
ln                              002272 automatic       fixed bin(17,0)          dcl 88 in procedure "cobol_repl3" set ref 323* 342*
                                                                                  363* 378* 445* 541* 1158* 1168*
lname_ptr                       005760 automatic       pointer                  dcl 906 set ref 919* 920 931 932 981 982
lnamearea                       005742 automatic       char(56)                 packed unaligned dcl 905 set ref 919
mcobol                          004754 automatic       bit(1)                   packed unaligned dcl 14-4 set ref 207*
mcobol_xref                     004755 automatic       bit(1)                   packed unaligned dcl 14-5 set ref 208* 209 243 550
mem_size                               parameter       fixed bin(24,0)          dcl 44 ref 38
mod                                                    builtin function         dcl 177 ref 256 370 486 557 596 794 810
n                               005211 automatic       fixed bin(17,0)          dcl 308 in procedure "repl3a" set ref 485* 486* 486
                                                                                  486 487* 487 488 490 492
n                               002701 automatic       fixed bin(17,0)          dcl 182 in procedure "cobol_repl3" set ref 242* 247
                                                                                  249 251
n                               005633 automatic       fixed bin(17,0)          dcl 564 in procedure "load_01_66" set ref 585* 587
                                                                                  590
n1                              005634 automatic       fixed bin(17,0)          dcl 564 in procedure "load_01_66" set ref 588* 590
                                                                                  593
n1                              002702 automatic       fixed bin(17,0)          dcl 182 in procedure "cobol_repl3" set ref 250* 251
                                                                                  253
n66                             005614 automatic       fixed bin(17,0)          dcl 319 set ref 336* 532* 532 534 605 607* 607 624*
name                      5            based           char(30)                 level 2 in structure "qual_rec" packed packed
                                                                                  unaligned dcl 10-39 in procedure "cobol_repl3" ref
                                                                                  368 806 1172
name                     11            based           char(30)                 level 2 in structure "skey_rec" packed packed
                                                                                  unaligned dcl 10-18 in procedure "cobol_repl3" ref
                                                                                  786
name                      6            based           char(30)                 level 2 in structure "auser_wd" packed packed
                                                                                  unaligned dcl 1009 in procedure "process_keys" set
                                                                                  ref 1034* 1040* 1164* 1172*
name                      6            based           char(30)                 level 2 in structure "auser_wd" packed packed
                                                                                  unaligned dcl 897 in procedure "repl3ln" set ref
                                                                                  932* 982*
name                     25            based           char                     level 2 in structure "file_key" packed packed
                                                                                  unaligned dcl 7-17 in procedure "cobol_repl3" ref
                                                                                  1034
name                      6            based           char(30)                 level 2 in structure "auser_wd" packed packed
                                                                                  unaligned dcl 289 in procedure "repl3a" set ref
                                                                                  352* 368* 456*
name                      6            based           char(30)                 level 2 in structure "obj_rec" packed packed
                                                                                  unaligned dcl 10-65 in procedure "cobol_repl3" ref
                                                                                  352 1164
name                     13            based           char(30)                 level 2 in structure "rename_rec" packed packed
                                                                                  unaligned dcl 10-28 in procedure "cobol_repl3" ref
                                                                                  330
name                      6            based           char(30)                 level 2 in structure "auser_wd" packed packed
                                                                                  unaligned dcl 756 in procedure "repl3sk" set ref
                                                                                  786* 806*
name                     10            based           char(30)                 level 2 in structure "linage_name_rec" packed packed
                                                                                  unaligned dcl 10-72 in procedure "cobol_repl3" ref
                                                                                  932 982
name                      3            based           char(30)                 level 2 in structure "qual_rec1" packed packed
                                                                                  unaligned dcl 998 in procedure "process_keys" ref
                                                                                  1040
name_desc                20            based           char(40)                 array level 2 packed packed unaligned dcl 880 set
                                                                                  ref 956* 958* 960* 962*
name_ptr                  4            based           pointer                  array level 3 dcl 14-7 set ref 247*
name_size                24            based           fixed bin(17,0)          level 2 in structure "file_key" dcl 7-17
                                                                                  in procedure "cobol_repl3" ref 1033 1034
name_size                33            based           fixed bin(17,0)          level 2 in structure "data_name" dcl 96 in procedure
                                                                                  "cobol_repl3" ref 408 485
name_stack_overflow             002302 automatic       bit(1)                   packed unaligned dcl 92 set ref 348* 453* 781*
next                                   based           char(5)                  level 2 in structure "linage_name_rec" packed packed
                                                                                  unaligned dcl 10-72 in procedure "cobol_repl3" ref
                                                                                  926 977
next                      2            based           char(5)                  level 2 in structure "rename_rec" packed packed
                                                                                  unaligned dcl 10-28 in procedure "cobol_repl3" ref
                                                                                  326
next                                   based           char(5)                  level 2 in structure "file_key" packed packed
                                                                                  unaligned dcl 7-17 in procedure "cobol_repl3" ref
                                                                                  1147
next                                   based           char(5)                  level 2 in structure "skey_rec" packed packed
                                                                                  unaligned dcl 10-18 in procedure "cobol_repl3" ref
                                                                                  788
next                                   based           char(5)                  level 2 in structure "occ_key" packed packed
                                                                                  unaligned dcl 10-11 in procedure "cobol_repl3" ref
                                                                                  774
next                                   based           char(5)                  level 2 in structure "qual_rec" packed packed
                                                                                  unaligned dcl 10-39 in procedure "cobol_repl3" set
                                                                                  ref 373 378* 814 818* 1042 1174
next                                   based           char(5)                  level 2 in structure "odo_rec" packed packed
                                                                                  unaligned dcl 10-4 in procedure "cobol_repl3" ref
                                                                                  1197
next_alt                  1(09)        based           char(5)                  level 2 packed packed unaligned dcl 7-17 ref 1389
next_key                        004776 automatic       char(5)                  packed unaligned dcl 287 set ref 326* 535 541*
nextln                          005774 automatic       char(5)                  packed unaligned dcl 912 set ref 926* 973 976* 977*
nextocc                         005730 automatic       char(5)                  packed unaligned dcl 764 set ref 771* 772* 774* 872
nextsk                          005726 automatic       char(5)                  packed unaligned dcl 764 set ref 788* 863 867*
not_done                        005671 automatic       bit(1)                   packed unaligned dcl 640 set ref 720* 721 739* 741*
                                                                                  743*
not_found                       002305 automatic       bit(1)                   packed unaligned dcl 92 set ref 381* 462* 669* 695*
                                                                                  710* 822* 855 950* 966 1214* 1216
ntarea                    2            based           char(64000)              level 2 packed packed unaligned dcl 75 set ref 579
                                                                                  621 661
ntarea_bits               2            based           bit(64000)               level 2 packed packed unaligned dcl 81 set ref 550*
ntbuff_ptr                             parameter       pointer                  dcl 47 ref 38 550 579 621 661
ntendptr                        000114 automatic       pointer                  dcl 56 set ref 263* 279* 381* 462* 619* 669* 695*
                                                                                  710* 739 822* 950* 1214*
ntprevptr                       000110 automatic       pointer                  dcl 56 set ref 222* 258 260* 580* 598 599*
ntptr                           000106 automatic       pointer                  dcl 56 set ref 225* 228 231 232 233 234 236 239 240
                                                                                  242 246 247 249 251 257 258 259 260 261* 261 263
                                                                                  386* 387 387 390 391 396 397 398 399 400 401 402
                                                                                  403 405 405 408 409 410 413 414 418 419 426 427
                                                                                  428 429 466* 470 471 476 477 478 479 480 481 485
                                                                                  488 490 492 499 501 511 512 513 514 515 516 524
                                                                                  525 530 531* 543* 579* 581 582* 585 587 590 597
                                                                                  598 599 600 601 609* 619 621* 669* 674 675 695*
                                                                                  700 710* 715 838* 839 841 844 845 847 955* 956 958
                                                                                  960 962
ntptr2                          002266 automatic       pointer                  dcl 71 set ref 381* 386 462* 466
ntptrln                         005762 automatic       pointer                  dcl 906 set ref 950* 955
ntshiftptr                      000112 automatic       pointer                  dcl 56 set ref 581*
null                                                   builtin function         dcl 178 ref 220 222 576 580
null_key                        000070 constant        char(5)                  initial packed unaligned dcl 186 ref 216 266 268 270
                                                                                  272 274 276 322 358 373 403 440 446 535 657 798
                                                                                  814 863 872 973 1025 1037 1156 1167 1376
number                    5     006224 automatic       fixed bin(17,0)          level 2 dcl 1448 set ref 1472*
numeric                  21(17)        based           bit(1)                   level 2 packed packed unaligned dcl 1-16 ref 1114
                                                                                  1242
obj1                      3(09)        based           char(5)                  level 2 packed packed unaligned dcl 10-28 set ref
                                                                                  342*
obj1_descr_bit                  005212 automatic       bit(64)                  packed unaligned dcl 310 set ref 400* 479 514
obj1_edit_ptr                   005027 automatic       fixed bin(17,0)          dcl 303 set ref 410* 418 419 490
obj1_flag                       005216 automatic       bit(1)                   packed unaligned dcl 312 set ref 321* 343* 394 447*
                                                                                  474 527*
obj1_init_ptr                   005026 automatic       fixed bin(17,0)          dcl 303 set ref 409* 411 413 414 488
obj1_length                     005020 automatic       fixed bin(17,0)          dcl 301 set ref 397* 476
obj1_level                      005016 automatic       fixed bin(17,0)          dcl 301 set ref 396* 467 467
obj1_name_size                  005025 automatic       fixed bin(17,0)          dcl 301 set ref 408*
obj1_offset                     005023 automatic       fixed bin(17,0)          dcl 301 set ref 399* 478 505 512 513
obj1_pleft                      005030 automatic       fixed bin(17,0)          dcl 303 set ref 401* 480
obj1_pright                     005031 automatic       fixed bin(17,0)          dcl 303 set ref 402* 481
obj1_seg_num                    005022 automatic       fixed bin(17,0)          dcl 301 set ref 398* 477 511
obj2                      4(18)        based           char(5)                  level 2 packed packed unaligned dcl 10-28 ref 328
obj2_descr_bit                  005214 automatic       bit(64)                  packed unaligned dcl 310 set ref 429*
obj2_key                        005014 automatic       char(5)                  packed unaligned dcl 300 set ref 328* 403 440 445*
                                                                                  446*
obj2_length                     005021 automatic       fixed bin(17,0)          dcl 301 set ref 427* 513
obj2_level                      005017 automatic       fixed bin(17,0)          dcl 301 set ref 426* 496 496
obj2_offset                     005024 automatic       fixed bin(17,0)          dcl 301 set ref 428* 505 513
obj_rec                                based           structure                level 1 unaligned dcl 10-65
obs_KEY_NOT_IN_RECORD           000066 constant        fixed bin(17,0)          initial dcl 15-14 set ref 1059* 1078*
occ_key                                based           structure                level 1 unaligned dcl 10-11
occurs                                 based           structure                level 1 unaligned dcl 10-54
occurs_ptr               27            based           fixed bin(17,0)          level 2 dcl 96 ref 845 847
odo_info                 61(27)        based           char(5)                  level 2 packed packed unaligned dcl 9-26 ref 268
                                                                                  1155
odo_ptr                         006070 automatic       pointer                  dcl 1002 set ref 1157* 1158 1183 1189 1189 1197
odo_rec                                based           structure                level 1 unaligned dcl 10-4
offset                   24            based           fixed bin(24,0)          level 2 in structure "data_name" dcl 1-16
                                                                                  in procedure "process_keys" ref 1189 1189 1414
                                                                                  1416 1421
offset                   24            based           fixed bin(24,0)          level 2 in structure "data_name" dcl 96 in procedure
                                                                                  "cobol_repl3" set ref 399 428 478* 512*
offset                    4            based           fixed bin(17,0)          array level 3 in structure "file_desc_1" dcl 17-7
                                                                                  in procedure "cobol_repl3" set ref 1300* 1334 1356
                                                                                  1356 1360*
offset                    2            based           fixed bin(17,0)          level 3 in structure "file_desc_1" dcl 17-7
                                                                                  in procedure "cobol_repl3" set ref 1275* 1334
                                                                                  1344*
offset                   23            based           fixed bin(24,0)          level 2 in structure "file_info" dcl 192
                                                                                  in procedure "cobol_repl3" set ref 1275* 1300*
                                                                                  1380*
offset_l                  4            based           fixed bin(31,0)          level 2 dcl 10-4 ref 1189
offset_r                  5            based           fixed bin(31,0)          level 2 dcl 10-4 ref 1189
options                 133            based           structure                level 2 packed packed unaligned dcl 9-26
outkey                          005776 automatic       char(5)                  packed unaligned dcl 913 set ref 944* 986* 989*
pic_integer              22(16)        based           bit(1)                   level 2 packed packed unaligned dcl 1-16 ref 1244
places_left              17            based           fixed bin(17,0)          level 2 dcl 96 set ref 401 480*
places_right             20            based           fixed bin(17,0)          level 2 dcl 96 set ref 402 481*
prev_key                        005000 automatic       char(5)                  packed unaligned dcl 287 set ref 322* 333 537*
prev_rec                  6            based           pointer                  level 2 in structure "data_name" dcl 1-16
                                                                                  in procedure "process_keys" ref 1405 1411
prev_rec                  6            based           pointer                  level 2 in structure "procname" dcl 96 in procedure
                                                                                  "cobol_repl3" set ref 258* 598*
prime_key                 2            based           structure                level 2 unaligned dcl 17-7
procname                               based           structure                level 1 unaligned dcl 96
ptrtable                        002116 automatic       pointer                  array dcl 64 set ref 372* 381 381 462 462 559* 655*
                                                                                  669 669 695 695 710 710 793* 809* 822 822 920* 950
                                                                                  950 1207* 1214 1214
qual                      1(09)        based           char(5)                  level 2 in structure "skey_rec" packed packed
                                                                                  unaligned dcl 10-18 in procedure "cobol_repl3" set
                                                                                  ref 798 801*
qual                      2(18)        based           char(5)                  level 2 in structure "file_key" packed packed
                                                                                  unaligned dcl 7-17 in procedure "cobol_repl3" ref
                                                                                  1036
qual                                   based           char(5)                  level 2 in structure "obj_rec" packed packed
                                                                                  unaligned dcl 10-65 in procedure "cobol_repl3" set
                                                                                  ref 358 363* 1166
qual_key                        006076 automatic       char(5)                  packed unaligned dcl 1008 set ref 1036* 1037 1038*
                                                                                  1042* 1166* 1167 1168* 1174*
qual_rec                               based           structure                level 1 unaligned dcl 10-39
qual_rec1                              based           structure                level 1 unaligned dcl 998
r_key_info               22(18)        based           char(5)                  level 2 packed packed unaligned dcl 4-25 set ref
                                                                                  1337*
rec_no_66                10            based           char(5)                  level 2 packed packed unaligned dcl 10-28 ref 327
recsize                         004752 automatic       fixed bin(17,0)          dcl 12-32 set ref 225* 228 249 251 261 263 414 419
                                                                                  492 530* 531* 582* 587 590 609* 619 658* 772* 775*
                                                                                  801* 818* 867* 925* 937* 976* 1026* 1038* 1157*
                                                                                  1337* 1377*
recsize2                        005013 automatic       fixed bin(17,0)          dcl 299 in procedure "repl3a" set ref 353* 369* 370
                                                                                  370 457* 557 557
recsize2                        005724 automatic       fixed bin(17,0)          dcl 755 in procedure "repl3sk" set ref 787* 794 794
                                                                                  807* 810 810
ref_column                6            based           fixed bin(15,0)          level 2 dcl 10-18 ref 784
ref_line                  5            based           fixed bin(15,0)          level 2 dcl 10-18 ref 783
rel_offset                      006204 automatic       fixed bin(24,0)          dcl 1399 set ref 1414* 1420* 1426
rename_info              66(09)        based           char(5)                  level 2 packed packed unaligned dcl 9-26 set ref 216
                                                                                  323*
rename_rec                             based           structure                level 1 unaligned dcl 10-28
rename_tempname                 005003 automatic       char(30)                 packed unaligned dcl 298 set ref 330* 456
rename_tempsize                 005002 automatic       fixed bin(17,0)          dcl 297 set ref 329* 330 455 456 456
repl_bits                10(27)        based           bit(8)                   level 2 packed packed unaligned dcl 96 set ref 240*
                                                                                  724* 727* 729* 732* 733 733
report_section           21(05)        based           bit(1)                   level 2 packed packed unaligned dcl 1-16 ref 1253
run                       4     006224 automatic       fixed bin(17,0)          level 2 dcl 1448 set ref 1468*
s                               002263 automatic       fixed bin(24,0)          dcl 67 set ref 550 574*
s_info                   35(21)        based           structure                level 2 packed packed unaligned dcl 11-4
s_info1                  35(21)        based           bit(1)                   level 3 packed packed unaligned dcl 11-4 set ref 660
                                                                                  664 673*
s_info2                  35(22)        based           bit(1)                   level 3 packed packed unaligned dcl 11-4 set ref 660
                                                                                  678 682* 690* 699*
s_info3                  35(23)        based           bit(1)                   level 3 packed packed unaligned dcl 11-4 set ref 706
                                                                                  714*
s_info4                  35(24)        based           bit(1)                   level 3 packed packed unaligned dcl 11-4 ref 724
s_ptr                                  based           char(5)                  level 2 packed packed unaligned dcl 11-4 ref 659
s_srtfilename            26            based           char(30)                 level 2 packed packed unaligned dcl 11-4 ref 709
s_srtfilename_size       25            based           fixed bin(15,0)          level 2 dcl 11-4 set ref 708 715*
s_start                   3            based           char(30)                 level 2 packed packed unaligned dcl 11-4 ref 667
s_start_size              2            based           fixed bin(15,0)          level 2 dcl 11-4 set ref 666 675* 683 691 692 722
s_stop                   14            based           char(30)                 level 2 packed packed unaligned dcl 11-4 ref 687
s_stop_size              13            based           fixed bin(15,0)          level 2 dcl 11-4 set ref 680 686 691* 700* 701
save_column                     005770 automatic       fixed bin(17,0)          dcl 908 in procedure "repl3ln" set ref 930* 970 980*
save_column                     005733 automatic       fixed bin(17,0)          dcl 765 in procedure "repl3sk" set ref 784* 833 859
save_desc                       005766 automatic       fixed bin(17,0)          dcl 908 set ref 928* 956 958 960 978*
save_line                       005732 automatic       fixed bin(17,0)          dcl 765 in procedure "repl3sk" set ref 783* 832 858
save_line                       005767 automatic       fixed bin(17,0)          dcl 908 in procedure "repl3ln" set ref 929* 969 979*
search_keys              75(09)        based           char(5)                  level 2 packed packed unaligned dcl 9-26 ref 272 771
section_num              11            based           fixed bin(17,0)          level 2 dcl 96 ref 675 700 722 743
sectno                          002271 automatic       fixed bin(17,0)          dcl 88 set ref 381* 462* 822* 950*
seg_num                  23            based           fixed bin(17,0)          level 2 in structure "data_name" dcl 96 in procedure
                                                                                  "cobol_repl3" set ref 398 477* 511*
seg_num                  23            based           fixed bin(17,0)          level 2 in structure "data_name" dcl 1-16
                                                                                  in procedure "process_keys" ref 1187
sign_type                22(13)        based           bit(3)                   level 2 packed packed unaligned dcl 1-16 ref 1244
size                      5            based           fixed bin(17,0)          array level 3 in structure "file_desc_1" dcl 17-7
                                                                                  in procedure "cobol_repl3" set ref 1298* 1302*
                                                                                  1302
size                      7            based           fixed bin(7,0)           level 2 in structure "linage_name_rec" dcl 10-72
                                                                                  in procedure "cobol_repl3" ref 931 981
size                      2            based           fixed bin(17,0)          level 2 in structure "qual_rec1" dcl 998
                                                                                  in procedure "process_keys" ref 1039
size                            000010 internal static fixed bin(17,0)          initial level 2 in structure "adiag" dcl 157
                                                                                  in procedure "cobol_repl3" set ref 1435*
size                                   based           fixed bin(17,0)          level 2 in structure "procname" dcl 96 in procedure
                                                                                  "cobol_repl3" ref 738
size                     15            based           fixed bin(24,0)          level 2 in structure "file_info" dcl 192
                                                                                  in procedure "cobol_repl3" ref 1273 1298
size                      3            based           fixed bin(17,0)          level 3 in structure "file_desc_1" dcl 17-7
                                                                                  in procedure "cobol_repl3" set ref 1273*
size                     10            based           fixed bin(7,0)           level 2 in structure "skey_rec" dcl 10-18
                                                                                  in procedure "cobol_repl3" ref 785
size                      4            based           fixed bin(7,0)           level 2 in structure "qual_rec" dcl 10-39
                                                                                  in procedure "cobol_repl3" ref 367 804 1171
size                     12            based           fixed bin(7,0)           level 2 in structure "rename_rec" dcl 10-28
                                                                                  in procedure "cobol_repl3" ref 329
size                      5            based           fixed bin(7,0)           level 2 in structure "obj_rec" dcl 10-65
                                                                                  in procedure "cobol_repl3" ref 351 1163
size                            006224 automatic       fixed bin(17,0)          level 2 in structure "lev_diag_item" dcl 1448
                                                                                  in procedure "lev_diag" set ref 1466*
size                                   based           fixed bin(17,0)          level 2 in structure "data_name" dcl 96 in procedure
                                                                                  "cobol_repl3" ref 413 418 530
size_TOKEN                      000000 constant        fixed bin(17,0)          initial array dcl 16-11 ref 242 485 585 1208
skey_rec                               based           structure                level 1 unaligned dcl 10-18
skptr                           005722 automatic       pointer                  dcl 754 set ref 822* 838
slength                   5            based           fixed bin(17,0)          level 2 dcl 645 set ref 666* 667 686* 687 708* 709
sname                     6            based           char(30)                 level 2 packed packed unaligned dcl 645 set ref 667*
                                                                                  668 687* 688 709*
snamearea                       005673 automatic       char(56)                 packed unaligned dcl 643 set ref 654
sort_in_info             60(18)        based           char(5)                  level 2 packed packed unaligned dcl 9-26 set ref 274
                                                                                  274*
sort_info_key                          parameter       char(5)                  packed unaligned dcl 635 ref 632 656
sort_out_info           114(27)        based           char(5)                  level 2 packed packed unaligned dcl 9-26 set ref 276
                                                                                  276*
sortnext                        005656 automatic       char(5)                  packed unaligned dcl 637 set ref 656* 657 658* 659*
srtname                                based           structure                level 1 unaligned dcl 645
srtptr                          005712 automatic       pointer                  dcl 644 set ref 654* 655 666 667 667 668 686 687 687
                                                                                  688 708 709 709
stack                           002306 automatic       char(1000)               packed unaligned dcl 170 set ref 206 366 556 795 811
stackbegptr                     002300 automatic       pointer                  dcl 90 set ref 206* 347 452 780 1030 1160 1227 1228
                                                                                  1470 1471
stackptr                        002276 automatic       pointer                  dcl 90 set ref 347* 351 352 352 352 353 366* 367 368
                                                                                  368 368 369 372 452* 455 456 457 556* 559 780* 785
                                                                                  786 786 786 787 793 795* 804 806 806 806 807 809
                                                                                  811* 1030* 1031 1032 1033 1034 1039 1040 1160*
                                                                                  1161 1162 1163 1164 1164 1164 1169 1170 1171 1172
                                                                                  1172 1172 1207 1208* 1208 1208
start_name                      005660 automatic       char(30)                 packed unaligned dcl 638 set ref 662* 668* 688
status                          004753 automatic       bit(32)                  packed unaligned dcl 12-34 set ref 223* 224 225* 226
                                                                                  323* 342* 363* 378* 445* 531* 541* 543* 545* 582*
                                                                                  609* 610 658* 772* 775* 801* 818* 867* 925* 937*
                                                                                  946* 976* 986* 989* 1026* 1038* 1157* 1158* 1168*
                                                                                  1337* 1377* 1435*
stop_sec_num                    005672 automatic       fixed bin(17,0)          dcl 641 set ref 663* 683* 692* 701* 743
string_ptr                4            based           pointer                  level 2 dcl 96 set ref 257* 597*
subscripted              22(05)        based           bit(1)                   level 2 packed packed unaligned dcl 1-16 ref 1235
substr                                                 builtin function         dcl 179 set ref 249 251 254 330* 352* 352 368* 368
                                                                                  387 387 403 414 419 456* 456 492* 492 514* 514
                                                                                  515* 516* 550* 587 590 594 667 687 709 724* 727*
                                                                                  729* 732* 733 733 786* 786 806* 806 829 837* 839*
                                                                                  841* 852 1164* 1164 1172* 1172 1280 1280 1310 1310
temp_desc                13            based           char(40)                 level 2 packed packed unaligned dcl 165 ref 956 958
                                                                                  960 962 1051
temp_fld                               based           structure                level 1 packed packed unaligned dcl 165
temp_in                                based           char(200)                packed unaligned dcl 914 ref 948
temp_stack                             based           char(1)                  array packed unaligned dcl 171 set ref 366 556 795
                                                                                  811
template                               based           char                     packed unaligned dcl 185 in procedure "cobol_repl3"
                                                                                  ref 249 251
template                               based           char                     packed unaligned dcl 309 in procedure "repl3a" set
                                                                                  ref 414 419 492*
template                        006000 automatic       char(200)                packed unaligned dcl 915 in procedure "repl3ln" set
                                                                                  ref 918 948*
template                               based           char                     packed unaligned dcl 564 in procedure "load_01_66"
                                                                                  ref 587 590
template                               based           char(1)                  array packed unaligned dcl 767 in procedure
                                                                                  "repl3sk" set ref 847
token_area                             based           structure                level 1 unaligned dcl 14-7
token_count                            based           fixed bin(35,0)          level 2 dcl 14-7 set ref 212* 245* 245 246 247
token_ptr                 2            based           pointer                  array level 3 dcl 14-7 set ref 246*
too_many_qualifiers             002303 automatic       bit(1)                   packed unaligned dcl 92 set ref 349* 454* 782*
top                       2            based           fixed bin(17,0)          level 2 dcl 880 ref 960
topstack                        002274 automatic       fixed bin(17,0)          dcl 88 set ref 346* 366 370* 370 451* 556 557* 557
                                                                                  779* 794* 794 795 810* 810 811
type                      3     006224 automatic       fixed bin(17,0)          level 2 in structure "lev_diag_item" dcl 1448
                                                                                  in procedure "lev_diag" set ref 1467*
type                                   based           fixed bin(17,0)          level 2 in structure "file_desc_1" dcl 17-7
                                                                                  in procedure "cobol_repl3" set ref 1271*
type                      3            based           fixed bin(17,0)          level 2 in structure "data_name" dcl 1-16
                                                                                  in procedure "process_keys" ref 1048 1180
type                      3            based           fixed bin(17,0)          level 2 in structure "procname" dcl 96 in procedure
                                                                                  "cobol_repl3" set ref 234 239* 242 585 741
type_two_sw                     002715 automatic       bit(1)                   packed unaligned dcl 190 set ref 1024* 1270* 1284*
                                                                                  1306 1316*
unspec                                                 builtin function         dcl 180 ref 250 254 588 594
variable_length          22(04)        based           bit(1)                   level 2 packed packed unaligned dcl 1-16 ref 1237
warn_BAD_ATTACH_OPTIONS         000053 constant        fixed bin(17,0)          initial dcl 15-45 set ref 1125*
warn_BAD_CATALOG_NAME           000054 constant        fixed bin(17,0)          initial dcl 15-43 set ref 1119*
warn_BAD_STATUS_KEY                    constant        fixed bin(17,0)          initial dcl 15-15 set ref 1100*
warn_BAD_TAPE_CATALOG_NAME             constant        fixed bin(17,0)          initial dcl 15-44 set ref 1114*
warn_BAD_VALUE_OF_ID            000052 constant        fixed bin(17,0)          initial dcl 15-46 set ref 1131*
warn_BAD_VALUE_OF_RETENTION     000051 constant        fixed bin(17,0)          initial dcl 15-47 set ref 1140*
warn_CONSTANT_ILLOGICAL         000062 constant        fixed bin(17,0)          initial dcl 15-36 set ref 1193*
warn_DATANAME_NOT_ALPHANUM      000065 constant        fixed bin(17,0)          initial dcl 15-16 set ref 1070*
warn_DATANAME_NOT_INTEGER              constant        fixed bin(17,0)          initial dcl 15-34 set ref 1244*
warn_DATANAME_VARLEN            000060 constant        fixed bin(17,0)          initial dcl 15-38 set ref 1237*
warn_ITEM_IN_FILE_SECTION       000057 constant        fixed bin(17,0)          initial dcl 15-39 set ref 1097*
warn_ODO_RANGE                         constant        fixed bin(17,0)          initial dcl 15-35 set ref 1189*
was_found                       002304 automatic       bit(1)                   packed unaligned dcl 92 set ref 381* 384 462* 464
                                                                                  669* 671 695* 697 710* 712 822* 827 950* 953 1046
                                                                                  1178 1214* 1216
word_offset                     006152 automatic       fixed bin(24,0)          dcl 1263 set ref 1280* 1282 1310* 1312
work_ptr                        002264 automatic       pointer                  dcl 70 set ref 661* 674* 722 724 727 729 732 733 733
                                                                                  738* 738 738 739 741 743 844* 847* 847 848 918*
                                                                                  956 958 958 960 960 962 962 986* 989* 1402* 1403
                                                                                  1405* 1405 1409 1411* 1411 1414 1416 1421
xref_chain                             based           structure                level 1 packed packed unaligned dcl 14-21
xref_ptr                        004756 automatic       pointer                  dcl 14-19 set ref 228* 229 230
xrn                     133(06)        based           bit(1)                   level 3 packed packed unaligned dcl 9-26 ref 208

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
allo1_max                              defined         fixed bin(17,0)          dcl 13-171
allo1_ptr                              defined         pointer                  dcl 13-67
alter_flag                             defined         fixed bin(17,0)          dcl 13-135
alter_index                            defined         fixed bin(17,0)          dcl 13-153
alter_list_ptr                         defined         pointer                  dcl 13-39
auxptr1                                automatic       pointer                  dcl 56
cd_cnt                                 defined         fixed bin(17,0)          dcl 13-197
cobol_$allo1_max                       external static fixed bin(17,0)          dcl 13-170
cobol_$allo1_ptr                       external static pointer                  dcl 13-66
cobol_$alter_flag                      external static fixed bin(17,0)          dcl 13-134
cobol_$alter_index                     external static fixed bin(17,0)          dcl 13-152
cobol_$alter_list_ptr                  external static pointer                  dcl 13-38
cobol_$cd_cnt                          external static fixed bin(17,0)          dcl 13-196
cobol_$cobol_data_wd_off               external static fixed bin(17,0)          dcl 13-118
cobol_$compile_count                   external static fixed bin(17,0)          dcl 13-142
cobol_$coms_charcnt                    external static fixed bin(17,0)          dcl 13-188
cobol_$coms_wdoff                      external static fixed bin(17,0)          dcl 13-202
cobol_$con_end_ptr                     external static pointer                  dcl 13-10
cobol_$con_wd_off                      external static fixed bin(17,0)          dcl 13-92
cobol_$cons_charcnt                    external static fixed bin(17,0)          dcl 13-192
cobol_$constant_offset                 external static fixed bin(17,0)          dcl 13-156
cobol_$data_init_flag                  external static fixed bin(17,0)          dcl 13-130
cobol_$date_compiled_sw                external static fixed bin(17,0)          dcl 13-180
cobol_$debug_enable                    external static fixed bin(17,0)          dcl 13-174
cobol_$def_base_ptr                    external static pointer                  dcl 13-12
cobol_$def_max                         external static fixed bin(17,0)          dcl 13-96
cobol_$def_wd_off                      external static fixed bin(17,0)          dcl 13-94
cobol_$diag_ptr                        external static pointer                  dcl 13-70
cobol_$eln_max                         external static fixed bin(17,0)          dcl 13-172
cobol_$eln_ptr                         external static pointer                  dcl 13-68
cobol_$fixup_max                       external static fixed bin(17,0)          dcl 13-164
cobol_$fixup_ptr                       external static pointer                  dcl 13-30
cobol_$fs_charcnt                      external static fixed bin(17,0)          dcl 13-184
cobol_$fs_wdoff                        external static fixed bin(17,0)          dcl 13-198
cobol_$include_cnt                     external static fixed bin(17,0)          dcl 13-182
cobol_$include_info_ptr                external static pointer                  dcl 13-86
cobol_$init_stack_off                  external static fixed bin(17,0)          dcl 13-124
cobol_$initval_base_ptr                external static pointer                  dcl 13-32
cobol_$initval_file_ptr                external static pointer                  dcl 13-34
cobol_$initval_flag                    external static fixed bin(17,0)          dcl 13-178
cobol_$link_base_ptr                   external static pointer                  dcl 13-14
cobol_$link_max                        external static fixed bin(17,0)          dcl 13-100
cobol_$link_wd_off                     external static fixed bin(17,0)          dcl 13-98
cobol_$list_off                        external static fixed bin(17,0)          dcl 13-154
cobol_$list_ptr                        external static pointer                  dcl 13-64
cobol_$ls_charcnt                      external static fixed bin(17,0)          dcl 13-190
cobol_$main_pcs_ptr                    external static pointer                  dcl 13-84
cobol_$map_data_max                    external static fixed bin(17,0)          dcl 13-162
cobol_$map_data_ptr                    external static pointer                  dcl 13-54
cobol_$max_stack_off                   external static fixed bin(17,0)          dcl 13-122
cobol_$minpral5_ptr                    external static pointer                  dcl 13-50
cobol_$misc_base_ptr                   external static pointer                  dcl 13-60
cobol_$misc_end_ptr                    external static pointer                  dcl 13-62
cobol_$misc_max                        external static fixed bin(17,0)          dcl 13-158
cobol_$next_tag                        external static fixed bin(17,0)          dcl 13-128
cobol_$non_source_offset               external static fixed bin(17,0)          dcl 13-176
cobol_$ntbuf_ptr                       external static pointer                  dcl 13-82
cobol_$obj_seg_name                    external static char(32)                 dcl 13-208
cobol_$op_con_ptr                      external static pointer                  dcl 13-80
cobol_$para_eop_flag                   external static fixed bin(17,0)          dcl 13-138
cobol_$pd_map_index                    external static fixed bin(17,0)          dcl 13-116
cobol_$pd_map_max                      external static fixed bin(17,0)          dcl 13-160
cobol_$pd_map_ptr                      external static pointer                  dcl 13-28
cobol_$pd_map_sw                       external static fixed bin(17,0)          dcl 13-126
cobol_$perform_list_ptr                external static pointer                  dcl 13-36
cobol_$perform_para_index              external static fixed bin(17,0)          dcl 13-148
cobol_$perform_sect_index              external static fixed bin(17,0)          dcl 13-150
cobol_$priority_no                     external static fixed bin(17,0)          dcl 13-140
cobol_$ptr_assumption_ind              external static fixed bin(17,0)          dcl 13-144
cobol_$ptr_status_ptr                  external static pointer                  dcl 13-56
cobol_$reg_assumption_ind              external static fixed bin(17,0)          dcl 13-146
cobol_$reg_status_ptr                  external static pointer                  dcl 13-58
cobol_$reloc_def_base_ptr              external static pointer                  dcl 13-20
cobol_$reloc_def_max                   external static fixed bin(24,0)          dcl 13-108
cobol_$reloc_link_base_ptr             external static pointer                  dcl 13-22
cobol_$reloc_link_max                  external static fixed bin(24,0)          dcl 13-110
cobol_$reloc_sym_base_ptr              external static pointer                  dcl 13-24
cobol_$reloc_sym_max                   external static fixed bin(24,0)          dcl 13-112
cobol_$reloc_text_base_ptr             external static pointer                  dcl 13-18
cobol_$reloc_text_max                  external static fixed bin(24,0)          dcl 13-106
cobol_$reloc_work_base_ptr             external static pointer                  dcl 13-26
cobol_$reloc_work_max                  external static fixed bin(24,0)          dcl 13-114
cobol_$reswd_ptr                       external static pointer                  dcl 13-78
cobol_$scratch_dir                     external static char(168)                dcl 13-206
cobol_$sect_eop_flag                   external static fixed bin(17,0)          dcl 13-136
cobol_$seg_init_flag                   external static fixed bin(17,0)          dcl 13-132
cobol_$seg_init_list_ptr               external static pointer                  dcl 13-40
cobol_$stack_off                       external static fixed bin(17,0)          dcl 13-120
cobol_$statement_info_ptr              external static pointer                  dcl 13-76
cobol_$sym_base_ptr                    external static pointer                  dcl 13-16
cobol_$sym_max                         external static fixed bin(17,0)          dcl 13-104
cobol_$sym_wd_off                      external static fixed bin(17,0)          dcl 13-102
cobol_$tag_table_max                   external static fixed bin(17,0)          dcl 13-166
cobol_$tag_table_ptr                   external static pointer                  dcl 13-52
cobol_$temp_token_area_ptr             external static pointer                  dcl 13-42
cobol_$temp_token_max                  external static fixed bin(17,0)          dcl 13-168
cobol_$temp_token_ptr                  external static pointer                  dcl 13-44
cobol_$text_base_ptr                   external static pointer                  dcl 13-8
cobol_$text_wd_off                     external static fixed bin(17,0)          dcl 13-90
cobol_$token_block1_ptr                external static pointer                  dcl 13-46
cobol_$token_block2_ptr                external static pointer                  dcl 13-48
cobol_$value_cnt                       external static fixed bin(17,0)          dcl 13-194
cobol_$ws_charcnt                      external static fixed bin(17,0)          dcl 13-186
cobol_$ws_wdoff                        external static fixed bin(17,0)          dcl 13-200
cobol_afp                              defined         pointer                  dcl 3-11
cobol_analin_fileno                    defined         pointer                  dcl 3-13
cobol_cmfp                             defined         pointer                  dcl 3-21
cobol_com_fileno                       defined         pointer                  dcl 3-23
cobol_curr_in                          defined         pointer                  dcl 3-53
cobol_curr_out                         defined         pointer                  dcl 3-55
cobol_data_wd_off                      defined         fixed bin(17,0)          dcl 13-119
cobol_dfp                              defined         pointer                  dcl 3-27
cobol_eltp                             defined         pointer                  dcl 3-19
cobol_ext_$cobol_afp                   external static pointer                  dcl 3-10
cobol_ext_$cobol_analin_fileno         external static pointer                  dcl 3-12
cobol_ext_$cobol_com_fileno            external static pointer                  dcl 3-22
cobol_ext_$cobol_curr_in               external static pointer                  dcl 3-52
cobol_ext_$cobol_dfp                   external static pointer                  dcl 3-26
cobol_ext_$cobol_eltp                  external static pointer                  dcl 3-18
cobol_ext_$cobol_fileno1               external static fixed bin(24,0)          dcl 3-78
cobol_ext_$cobol_hfp                   external static pointer                  dcl 3-28
cobol_ext_$cobol_lpr                   external static char(5)                  packed unaligned dcl 3-95
cobol_ext_$cobol_m1fp                  external static pointer                  dcl 3-30
cobol_ext_$cobol_m2fp                  external static pointer                  dcl 3-32
cobol_ext_$cobol_min1_fileno           external static pointer                  dcl 3-34
cobol_ext_$cobol_min2_fileno_ptr       external static pointer                  dcl 3-36
cobol_ext_$cobol_name_fileno           external static pointer                  dcl 3-38
cobol_ext_$cobol_ntfp                  external static pointer                  dcl 3-42
cobol_ext_$cobol_options               external static char(120)                packed unaligned dcl 3-97
cobol_ext_$cobol_options_len           external static fixed bin(24,0)          dcl 3-80
cobol_ext_$cobol_pdofp                 external static pointer                  dcl 3-44
cobol_ext_$cobol_pdout_fileno          external static fixed bin(24,0)          dcl 3-82
cobol_ext_$cobol_pfp                   external static pointer                  dcl 3-46
cobol_ext_$cobol_print_fileno          external static fixed bin(24,0)          dcl 3-84
cobol_ext_$cobol_rm2fp                 external static pointer                  dcl 3-48
cobol_ext_$cobol_rmin2_fileno          external static fixed bin(24,0)          dcl 3-86
cobol_ext_$cobol_rmin2fp               external static pointer                  dcl 3-50
cobol_ext_$cobol_rwdd                  external static pointer                  dcl 3-72
cobol_ext_$cobol_rwpd                  external static pointer                  dcl 3-74
cobol_ext_$cobol_sfp                   external static pointer                  dcl 3-56
cobol_ext_$cobol_w1p                   external static pointer                  dcl 3-58
cobol_ext_$cobol_w2p                   external static pointer                  dcl 3-60
cobol_ext_$cobol_w3p                   external static pointer                  dcl 3-62
cobol_ext_$cobol_w5p                   external static pointer                  dcl 3-64
cobol_ext_$cobol_w6p                   external static pointer                  dcl 3-66
cobol_ext_$cobol_w7p                   external static pointer                  dcl 3-68
cobol_ext_$cobol_x1_fileno             external static fixed bin(24,0)          dcl 3-88
cobol_ext_$cobol_x2_fileno             external static fixed bin(24,0)          dcl 3-90
cobol_ext_$cobol_x3_fileno             external static fixed bin(24,0)          dcl 3-92
cobol_ext_$cobol_x3fp                  external static pointer                  dcl 3-70
cobol_ext_$cobol_xlast8                external static bit(1)                   packed unaligned dcl 3-100
cobol_ext_$report_exists               external static bit(1)                   packed unaligned dcl 3-102
cobol_ext_$report_first_token          external static pointer                  dcl 3-14
cobol_ext_$report_last_token           external static pointer                  dcl 3-16
cobol_fileno1                          defined         fixed bin(24,0)          dcl 3-79
cobol_hfp                              defined         pointer                  dcl 3-29
cobol_lpr                              defined         char(5)                  packed unaligned dcl 3-96
cobol_m1fp                             defined         pointer                  dcl 3-31
cobol_m2fp                             defined         pointer                  dcl 3-33
cobol_min1_fileno                      defined         pointer                  dcl 3-35
cobol_min2_fileno_ptr                  defined         pointer                  dcl 3-37
cobol_name_fileno                      defined         pointer                  dcl 3-39
cobol_name_fileno_ptr                  defined         pointer                  dcl 3-41
cobol_ntfp                             defined         pointer                  dcl 3-43
cobol_options                          defined         char(120)                packed unaligned dcl 3-98
cobol_options_len                      defined         fixed bin(24,0)          dcl 3-81
cobol_pdofp                            defined         pointer                  dcl 3-45
cobol_pdout_fileno                     defined         fixed bin(24,0)          dcl 3-83
cobol_pfp                              defined         pointer                  dcl 3-47
cobol_print_fileno                     defined         fixed bin(24,0)          dcl 3-85
cobol_rm2fp                            defined         pointer                  dcl 3-49
cobol_rmin2_fileno                     defined         fixed bin(24,0)          dcl 3-87
cobol_rmin2fp                          defined         pointer                  dcl 3-51
cobol_rwdd                             defined         pointer                  dcl 3-73
cobol_rwpd                             defined         pointer                  dcl 3-75
cobol_sfp                              defined         pointer                  dcl 3-57
cobol_swf_close                 000000 constant        entry                    external dcl 12-13
cobol_swf_get                   000000 constant        entry                    external dcl 12-9
cobol_swf_open                  000000 constant        entry                    external dcl 12-7
cobol_vdwf_sput                 000000 constant        entry                    external dcl 12-17
cobol_w1p                              defined         pointer                  dcl 3-59
cobol_w2p                              defined         pointer                  dcl 3-61
cobol_w3p                              defined         pointer                  dcl 3-63
cobol_w5p                              defined         pointer                  dcl 3-65
cobol_w6p                              defined         pointer                  dcl 3-67
cobol_w7p                              defined         pointer                  dcl 3-69
cobol_x1_fileno                        defined         fixed bin(24,0)          dcl 3-89
cobol_x2_fileno                        defined         fixed bin(24,0)          dcl 3-91
cobol_x3_fileno                        defined         fixed bin(24,0)          dcl 3-93
cobol_x3fp                             defined         pointer                  dcl 3-71
cobol_xlast8                           defined         bit(1)                   packed unaligned dcl 3-101
compile_count                          defined         fixed bin(17,0)          dcl 13-143
coms_charcnt                           defined         fixed bin(17,0)          dcl 13-189
coms_wdoff                             defined         fixed bin(17,0)          dcl 13-203
con_end_ptr                            defined         pointer                  dcl 13-11
con_wd_off                             defined         fixed bin(17,0)          dcl 13-93
cons_charcnt                           defined         fixed bin(17,0)          dcl 13-193
constant_offset                        defined         fixed bin(17,0)          dcl 13-157
curr_input                             automatic       pointer                  dcl 12-30
curr_output                            automatic       pointer                  dcl 12-31
curr_work                              automatic       pointer                  dcl 169
data_init_flag                         defined         fixed bin(17,0)          dcl 13-131
date_compiled_sw                       defined         fixed bin(17,0)          dcl 13-181
debug_enable                           defined         fixed bin(17,0)          dcl 13-175
def_base_ptr                           defined         pointer                  dcl 13-13
def_max                                defined         fixed bin(17,0)          dcl 13-97
def_wd_off                             defined         fixed bin(17,0)          dcl 13-95
diag_count                             automatic       fixed bin(17,0)          dcl 88
diag_ptr                               defined         pointer                  dcl 13-71
eln_max                                defined         fixed bin(17,0)          dcl 13-173
eln_ptr                                defined         pointer                  dcl 13-69
fatal_ALPHABET_NAME_QUALIFIER          internal static fixed bin(17,0)          initial dcl 15-20
fatal_AMBIGUOUS_LINAGE_REF             internal static fixed bin(17,0)          initial dcl 15-29
fatal_AMBIGUOUS_PROCNAME_REF           internal static fixed bin(17,0)          initial dcl 15-30
fatal_AMBIGUOUS_QUAL_REF               internal static fixed bin(17,0)          initial dcl 15-8
fatal_AMBIGUOUS_UNQUAL_REF             internal static fixed bin(17,0)          initial dcl 15-6
fatal_CDNAME_MULTIPLY_DECLARED         internal static fixed bin(17,0)          initial dcl 15-48
fatal_DATANAME_MULTIPLY_DECLARED       internal static fixed bin(17,0)          initial dcl 15-11
fatal_FILENAME_MULTIPLY_DECLARED       internal static fixed bin(17,0)          initial dcl 15-26
fatal_FILE_NAME_EXPECTED               internal static fixed bin(17,0)          initial dcl 15-31
fatal_INDEX_NAME_QUALIFIER             internal static fixed bin(17,0)          initial dcl 15-19
fatal_INVALID_QUALIFIER                internal static fixed bin(17,0)          initial dcl 15-21
fatal_MNEMONIC_NAME_EXPECTED           internal static fixed bin(17,0)          initial dcl 15-22
fatal_MNEMONIC_NAME_QUALIFIER          internal static fixed bin(17,0)          initial dcl 15-18
fatal_NO_LINAGE_FOR_ANY_FILE           internal static fixed bin(17,0)          initial dcl 15-28
fatal_NO_LINAGE_FOR_THIS_FILE          internal static fixed bin(17,0)          initial dcl 15-27
fatal_PROCNAME_MULTIPLY_DECLARED       internal static fixed bin(17,0)          initial dcl 15-10
fatal_PROCNAME_NOT_DECLARED            internal static fixed bin(17,0)          initial dcl 15-9
file_desc_1_type                       internal static fixed bin(17,0)          initial dcl 17-4
fixup_max                              defined         fixed bin(17,0)          dcl 13-165
fixup_ptr                              defined         pointer                  dcl 13-31
fs_charcnt                             defined         fixed bin(17,0)          dcl 13-185
fs_wdoff                               defined         fixed bin(17,0)          dcl 13-199
include_cnt                            defined         fixed bin(17,0)          dcl 13-183
include_info_ptr                       defined         pointer                  dcl 13-87
init_stack_off                         defined         fixed bin(17,0)          dcl 13-125
initval_base_ptr                       defined         pointer                  dcl 13-33
initval_file_ptr                       defined         pointer                  dcl 13-35
initval_flag                           defined         fixed bin(17,0)          dcl 13-179
ioa_                            000000 constant        entry                    external dcl 86
keyno                                  automatic       char(5)                  packed unaligned dcl 12-28
linage_ptr                             automatic       pointer                  dcl 50
linage_rec                             based           structure                level 1 unaligned dcl 8-22
link_base_ptr                          defined         pointer                  dcl 13-15
link_max                               defined         fixed bin(17,0)          dcl 13-101
link_wd_off                            defined         fixed bin(17,0)          dcl 13-99
list_off                               defined         fixed bin(17,0)          dcl 13-155
list_ptr                               defined         pointer                  dcl 13-65
ls_charcnt                             defined         fixed bin(17,0)          dcl 13-191
main_pcs_ptr                           defined         pointer                  dcl 13-85
map_data_max                           defined         fixed bin(17,0)          dcl 13-163
map_data_ptr                           defined         pointer                  dcl 13-55
max_stack_off                          defined         fixed bin(17,0)          dcl 13-123
minpral5_ptr                           defined         pointer                  dcl 13-51
misc_base_ptr                          defined         pointer                  dcl 13-61
misc_end_ptr                           defined         pointer                  dcl 13-63
misc_max                               defined         fixed bin(17,0)          dcl 13-159
n2                                     automatic       fixed bin(17,0)          dcl 564
name_ptr                               automatic       pointer                  dcl 50
newrecord                              based           char                     packed unaligned dcl 564
next_tag                               defined         fixed bin(17,0)          dcl 13-129
non_source_offset                      defined         fixed bin(17,0)          dcl 13-177
ntbuf_ptr                              defined         pointer                  dcl 13-83
obj1ptr                                automatic       pointer                  dcl 313
obj2ptr                                automatic       pointer                  dcl 313
obj_seg_name                           defined         char(32)                 dcl 13-209
obs_KEY_IN_RECORD                      internal static fixed bin(17,0)          initial dcl 15-13
obs_SPECIAL_NAMES_NOTE                 internal static fixed bin(17,0)          initial dcl 15-24
odo_ptr                                automatic       pointer                  dcl 72
op_con_ptr                             defined         pointer                  dcl 13-81
para_eop_flag                          defined         fixed bin(17,0)          dcl 13-139
pd_map_index                           defined         fixed bin(17,0)          dcl 13-117
pd_map_max                             defined         fixed bin(17,0)          dcl 13-161
pd_map_ptr                             defined         pointer                  dcl 13-29
pd_map_sw                              defined         fixed bin(17,0)          dcl 13-127
perform_list_ptr                       defined         pointer                  dcl 13-37
perform_para_index                     defined         fixed bin(17,0)          dcl 13-149
perform_sect_index                     defined         fixed bin(17,0)          dcl 13-151
priority_no                            defined         fixed bin(17,0)          dcl 13-141
ptr1                                   automatic       pointer                  dcl 564
ptr_assumption_ind                     defined         fixed bin(17,0)          dcl 13-145
ptr_status_ptr                         defined         pointer                  dcl 13-57
recsize2                               automatic       fixed bin(17,0)          dcl 12-33
reg_assumption_ind                     defined         fixed bin(17,0)          dcl 13-147
reg_status_ptr                         defined         pointer                  dcl 13-59
reloc_def_base_ptr                     defined         pointer                  dcl 13-21
reloc_def_max                          defined         fixed bin(24,0)          dcl 13-109
reloc_link_base_ptr                    defined         pointer                  dcl 13-23
reloc_link_max                         defined         fixed bin(24,0)          dcl 13-111
reloc_sym_base_ptr                     defined         pointer                  dcl 13-25
reloc_sym_max                          defined         fixed bin(24,0)          dcl 13-113
reloc_text_base_ptr                    defined         pointer                  dcl 13-19
reloc_text_max                         defined         fixed bin(24,0)          dcl 13-107
reloc_work_base_ptr                    defined         pointer                  dcl 13-27
reloc_work_max                         defined         fixed bin(24,0)          dcl 13-115
rename_ptr                             automatic       pointer                  dcl 313
repla_abort                            automatic       bit(1)                   packed unaligned dcl 155
report_exists                          defined         bit(1)                   packed unaligned dcl 3-103
report_first_token                     defined         pointer                  dcl 3-15
report_last_token                      defined         pointer                  dcl 3-17
report_rec                             based           structure                level 1 unaligned dcl 10-45
reswd_ptr                              defined         pointer                  dcl 13-79
same_sort_merge_proc                   defined         bit(1)                   dcl 13-215
save_last_column                       automatic       fixed bin(17,0)          dcl 154
save_last_line                         automatic       fixed bin(17,0)          dcl 153
scratch_dir                            defined         char(168)                dcl 13-207
sect_eop_flag                          defined         fixed bin(17,0)          dcl 13-137
seg_init_flag                          defined         fixed bin(17,0)          dcl 13-133
seg_init_list_ptr                      defined         pointer                  dcl 13-41
size_COMHDR                            internal static fixed bin(17,0)          initial dcl 16-8
size_NAMESIZE                          internal static fixed bin(17,0)          initial dcl 16-9
st_ptr                                 automatic       pointer                  dcl 12-42
stack_off                              defined         fixed bin(17,0)          dcl 13-121
statement_info_ptr                     defined         pointer                  dcl 13-77
status_word                            based           structure                level 1 packed packed unaligned dcl 12-38
sym_base_ptr                           defined         pointer                  dcl 13-17
sym_max                                defined         fixed bin(17,0)          dcl 13-105
sym_wd_off                             defined         fixed bin(17,0)          dcl 13-103
tag_table_max                          defined         fixed bin(17,0)          dcl 13-167
tag_table_ptr                          defined         pointer                  dcl 13-53
tb_counter                             automatic       fixed bin(17,0)          dcl 564
temp_token_area_ptr                    defined         pointer                  dcl 13-43
temp_token_max                         defined         fixed bin(17,0)          dcl 13-169
temp_token_ptr                         defined         pointer                  dcl 13-45
template                               based           char(1)                  array packed unaligned dcl 642
text_base_ptr                          defined         pointer                  dcl 13-9
text_wd_off                            defined         fixed bin(17,0)          dcl 13-91
tntarea                                based           structure                level 1 unaligned dcl 78
token_block1_ptr                       defined         pointer                  dcl 13-47
token_block2_ptr                       defined         pointer                  dcl 13-49
value_cnt                              defined         fixed bin(17,0)          dcl 13-195
warn_OBSOLETE_MNEMONIC_NAME            internal static fixed bin(17,0)          initial dcl 15-23
warn_SPECIAL_NAMES_RECOVERY            internal static fixed bin(17,0)          initial dcl 15-25
ws_charcnt                             defined         fixed bin(17,0)          dcl 13-187
ws_wdoff                               defined         fixed bin(17,0)          dcl 13-201
xref_bypass                            defined         bit(1)                   dcl 13-213
xref_chain_ptr                         defined         pointer                  dcl 13-75
xref_token_ptr                         defined         pointer                  dcl 13-73

NAMES DECLARED BY EXPLICIT CONTEXT.
build_file_desc                 004657 constant        entry                    internal dcl 1258 ref 1091
check_alts                      005226 constant        label                    dcl 1350 ref 1346
check_cnst_com_rprt_section     004633 constant        entry                    internal dcl 1247 ref 1055 1069 1099 1105
check_dataname                  004574 constant        entry                    internal dcl 1233 ref 1052 1185
check_dup_offset                005126 constant        entry                    internal dcl 1323 ref 1285 1314
check_integer                   004612 constant        entry                    internal dcl 1240 ref 1056 1106 1136 1142 1186
cobol_repl3                     000114 constant        entry                    external dcl 38
end1                            002056 constant        label                    dcl 622
find                            004472 constant        entry                    internal dcl 1212 ref 1045 1177
finish_up                       002042 constant        label                    dcl 619 ref 610 615
get_rel_offset                  005407 constant        entry                    internal dcl 1394 ref 1275 1300 1380
issue_diag                      005460 constant        entry                    internal dcl 1433 ref 392 438 472 502 526 834 860
                                                                                  971
l2                              001671 constant        label                    dcl 582
l3                              001710 constant        label                    dcl 585 ref 618
la                              000555 constant        label                    dcl 324 ref 542
la1                             000637 constant        label                    dcl 344 ref 448
la2                             000707 constant        label                    dcl 364 ref 379
lb1                             000771 constant        label                    dcl 381 ref 358 373
lc1                             001223 constant        label                    dcl 449 ref 440
lc2                             001553 constant        label                    dcl 543 ref 535
lev_diag                        005501 constant        entry                    internal dcl 1442 ref 1061 1084
lloop                           003240 constant        label                    dcl 937 ref 987
lloop1                          003315 constant        label                    dcl 950 ref 983
lloop2                          003452 constant        label                    dcl 973 ref 963
load_01_66                      001642 constant        entry                    internal dcl 562 ref 337
process_file_keys               003564 constant        entry                    internal dcl 1019 ref 270
process_keys                    003562 constant        entry                    internal dcl 994
process_odo_keys                004225 constant        entry                    internal dcl 1152 ref 268
push                            004455 constant        entry                    internal dcl 1204 ref 1035 1041 1165 1173
pushx                           001615 constant        entry                    internal dcl 554 ref 357 458
put                             004551 constant        entry                    internal dcl 1223 ref 1048 1059 1070 1078 1082 1097
                                                                                  1100 1114 1119 1125 1131 1140 1180 1189 1193 1216
                                                                                  1219 1235 1237 1242 1244 1249 1251 1253
put_dup_offset_diag             005303 constant        entry                    internal dcl 1368 ref 1344 1360
repl3a                          000526 constant        entry                    internal dcl 284 ref 216
repl3ln                         003165 constant        entry                    internal dcl 878 ref 266
repl3s                          002063 constant        entry                    internal dcl 632 ref 274 276
repl3sk                         002537 constant        entry                    internal dcl 751 ref 272
s_diag                          001415 constant        label                    dcl 499 ref 509
s_exit                          001453 constant        label                    dcl 517 ref 503
s_recover                       001515 constant        label                    dcl 532 ref 528
skexit                          003160 constant        label                    dcl 872 ref 863
skloop                          002615 constant        label                    dcl 777 set ref 870
skloop1                         002666 constant        label                    dcl 798
skloop2                         002716 constant        label                    dcl 804 ref 819
skloop3                         002776 constant        label                    dcl 822 ref 798 814
skloop4                         003134 constant        label                    dcl 863 ref 835 852
sklop                           002550 constant        label                    dcl 772 ref 872
start                           000121 constant        label                    dcl 204

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      6152        6240    5714        6162
Length      7100    5714        66         624     236          10

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cobol_repl3                        3544 external procedure  is an external procedure.  
repl3a                                  internal procedure  shares stack frame of external procedure cobol_repl3.  
pushx                                   internal procedure  shares stack frame of external procedure cobol_repl3.  
load_01_66                              internal procedure  shares stack frame of external procedure cobol_repl3.  
repl3s                                  internal procedure  shares stack frame of external procedure cobol_repl3.  
repl3sk                                 internal procedure  shares stack frame of external procedure cobol_repl3.  
repl3ln                                 internal procedure  shares stack frame of external procedure cobol_repl3.  
process_keys                            internal procedure  shares stack frame of external procedure cobol_repl3.  
push                                    internal procedure  shares stack frame of external procedure cobol_repl3.  
find                                    internal procedure  shares stack frame of external procedure cobol_repl3.  
put                                     internal procedure  shares stack frame of external procedure cobol_repl3.  
check_dataname                          internal procedure  shares stack frame of external procedure cobol_repl3.  
check_integer                           internal procedure  shares stack frame of external procedure cobol_repl3.  
check_cnst_com_rprt_section             internal procedure  shares stack frame of external procedure cobol_repl3.  
build_file_desc                         internal procedure  shares stack frame of external procedure cobol_repl3.  
check_dup_offset                        internal procedure  shares stack frame of external procedure cobol_repl3.  
put_dup_offset_diag                     internal procedure  shares stack frame of external procedure cobol_repl3.  
get_rel_offset                          internal procedure  shares stack frame of external procedure cobol_repl3.  
issue_diag                              internal procedure  shares stack frame of external procedure cobol_repl3.  
lev_diag                                internal procedure  shares stack frame of external procedure cobol_repl3.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 adiag                       cobol_repl3

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cobol_repl3              000100 ft_ptr                      cobol_repl3
                         000102 fkey_ptr                    cobol_repl3
                         000104 com2_ptr                    cobol_repl3
                         000106 ntptr                       cobol_repl3
                         000110 ntprevptr                   cobol_repl3
                         000112 ntshiftptr                  cobol_repl3
                         000114 ntendptr                    cobol_repl3
                         000116 arrpntr                     cobol_repl3
                         002116 ptrtable                    cobol_repl3
                         002262 hashno                      cobol_repl3
                         002263 s                           cobol_repl3
                         002264 work_ptr                    cobol_repl3
                         002266 ntptr2                      cobol_repl3
                         002270 diag_no                     cobol_repl3
                         002271 sectno                      cobol_repl3
                         002272 ln                          cobol_repl3
                         002273 counter                     cobol_repl3
                         002274 topstack                    cobol_repl3
                         002276 stackptr                    cobol_repl3
                         002300 stackbegptr                 cobol_repl3
                         002302 name_stack_overflow         cobol_repl3
                         002303 too_many_qualifiers         cobol_repl3
                         002304 was_found                   cobol_repl3
                         002305 not_found                   cobol_repl3
                         002306 stack                       cobol_repl3
                         002700 i                           cobol_repl3
                         002701 n                           cobol_repl3
                         002702 n1                          cobol_repl3
                         002703 bname                       cobol_repl3
                         002713 cn1                         cobol_repl3
                         002714 continue                    cobol_repl3
                         002715 type_two_sw                 cobol_repl3
                         002716 file_desc_1_area            cobol_repl3
                         004750 key1                        cobol_repl3
                         004752 recsize                     cobol_repl3
                         004753 status                      cobol_repl3
                         004754 mcobol                      cobol_repl3
                         004755 mcobol_xref                 cobol_repl3
                         004756 xref_ptr                    cobol_repl3
                         004760 file_desc_1_ptr             cobol_repl3
                         004772 cm_ptr                      repl3a
                         004774 key                         repl3a
                         004776 next_key                    repl3a
                         005000 prev_key                    repl3a
                         005002 rename_tempsize             repl3a
                         005003 rename_tempname             repl3a
                         005013 recsize2                    repl3a
                         005014 obj2_key                    repl3a
                         005016 obj1_level                  repl3a
                         005017 obj2_level                  repl3a
                         005020 obj1_length                 repl3a
                         005021 obj2_length                 repl3a
                         005022 obj1_seg_num                repl3a
                         005023 obj1_offset                 repl3a
                         005024 obj2_offset                 repl3a
                         005025 obj1_name_size              repl3a
                         005026 obj1_init_ptr               repl3a
                         005027 obj1_edit_ptr               repl3a
                         005030 obj1_pleft                  repl3a
                         005031 obj1_pright                 repl3a
                         005032 extension_bit               repl3a
                         005033 extension_size              repl3a
                         005034 extension_temp              repl3a
                         005211 n                           repl3a
                         005212 obj1_descr_bit              repl3a
                         005214 obj2_descr_bit              repl3a
                         005216 obj1_flag                   repl3a
                         005217 key66_area                  repl3a
                         005612 key66ptr                    repl3a
                         005614 n66                         repl3a
                         005632 i                           load_01_66
                         005633 n                           load_01_66
                         005634 n1                          load_01_66
                         005635 bname                       load_01_66
                         005645 levlim                      load_01_66
                         005646 flag_66                     load_01_66
                         005656 sortnext                    repl3s
                         005660 start_name                  repl3s
                         005670 fill_sort_info              repl3s
                         005671 not_done                    repl3s
                         005672 stop_sec_num                repl3s
                         005673 snamearea                   repl3s
                         005712 srtptr                      repl3s
                         005722 skptr                       repl3sk
                         005724 recsize2                    repl3sk
                         005726 nextsk                      repl3sk
                         005730 nextocc                     repl3sk
                         005732 save_line                   repl3sk
                         005733 save_column                 repl3sk
                         005742 lnamearea                   repl3ln
                         005760 lname_ptr                   repl3ln
                         005762 ntptrln                     repl3ln
                         005764 linage_ptr                  repl3ln
                         005766 save_desc                   repl3ln
                         005767 save_line                   repl3ln
                         005770 save_column                 repl3ln
                         005771 ln                          repl3ln
                         005772 cur_fileno                  repl3ln
                         005774 nextln                      repl3ln
                         005776 outkey                      repl3ln
                         006000 template                    repl3ln
                         006070 odo_ptr                     process_keys
                         006072 dn_ptr                      process_keys
                         006074 key                         process_keys
                         006076 qual_key                    process_keys
                         006152 word_offset                 build_file_desc
                         006153 i                           build_file_desc
                         006162 j                           check_dup_offset
                         006163 jj                          check_dup_offset
                         006204 rel_offset                  get_rel_offset
                         006222 lev_diag_ptr                lev_diag
                         006224 lev_diag_item               lev_diag

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_char_temp     call_ext_out_desc   call_ext_out        return_mac          mdfx1               shorten_stack
ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cobol_c_list                  cobol_pool_                   cobol_read_ft_                cobol_replb
cobol_swf_put                 cobol_usrwd                   cobol_vdwf_close              cobol_vdwf_dget
cobol_vdwf_dput               cobol_vdwf_open               cobol_vdwf_sget

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
cobol_$same_sort_merge_proc   cobol_$xref_bypass            cobol_$xref_chain_ptr         cobol_$xref_token_ptr
cobol_ext_$cobol_cmfp         cobol_ext_$cobol_com_ptr      cobol_ext_$cobol_curr_out
cobol_ext_$cobol_name_fileno_ptr




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     38 000110       204 000121       206 000123       207 000125       208 000127       209 000135       211 000136
    212 000137       213 000141       216 000143       219 000152       220 000157       221 000163       222 000165
    223 000167       224 000170       225 000173       226 000212       228 000215       229 000223       230 000226
    231 000231       232 000234       233 000236       234 000240       236 000243       237 000245       239 000246
    240 000250       242 000252       243 000256       245 000260       246 000266       247 000271       249 000301
    250 000305       251 000310       252 000315       253 000316       254 000325       255 000335       256 000337
    257 000344       258 000350       259 000352       260 000353       261 000354       262 000362       263 000363
    264 000372       266 000373       268 000405       270 000416       272 000427       274 000441       276 000466
    279 000512       281 000525       284 000526       321 000527       322 000530       323 000532       324 000555
    326 000557       327 000564       328 000570       329 000575       330 000577       333 000602       335 000606
    336 000610       337 000612       342 000613       343 000635       344 000637       346 000640       347 000642
    348 000644       349 000645       350 000646       351 000650       352 000654       353 000657       357 000661
    358 000662       363 000670       364 000707       366 000711       367 000716       368 000721       369 000724
    370 000726       371 000736       372 000737       373 000743       378 000751       379 000770       381 000771
    384 001030       386 001033       387 001035       389 001041       390 001044       391 001046       392 001050
    394 001051       396 001053       397 001056       398 001060       399 001062       400 001064       401 001070
    402 001072       403 001074       405 001103       407 001107       408 001111       409 001113       410 001115
    411 001117       413 001121       414 001124       416 001130       418 001131       419 001134       424 001140
    426 001141       427 001144       428 001146       429 001150       431 001154       433 001155       435 001163
    436 001165       437 001170       438 001172       440 001173       445 001177       446 001216       447 001221
    448 001222       449 001223       451 001224       452 001226       453 001230       454 001231       455 001232
    456 001235       457 001240       458 001242       462 001243       464 001302       466 001305       467 001307
    469 001314       470 001317       471 001322       472 001324       474 001325       476 001327       477 001332
    478 001334       479 001336       480 001344       481 001346       482 001350       484 001353       485 001354
    486 001357       487 001366       488 001367       490 001373       492 001377       494 001404       496 001405
    498 001412       499 001415       501 001421       502 001423       503 001424       505 001425       508 001430
    509 001433       511 001434       512 001437       513 001441       514 001445       515 001447       516 001451
    519 001453       521 001454       523 001462       524 001464       525 001467       526 001471       527 001472
    528 001473       530 001474       531 001476       532 001515       534 001517       535 001524       537 001530
    541 001533       542 001552       543 001553       545 001571       550 001602       553 001614       554 001615
    556 001616       557 001623       558 001634       559 001635       560 001641       562 001642       573 001643
    574 001644       575 001646       576 001653       577 001657       579 001661       580 001666       581 001670
    582 001671       585 001710       587 001715       588 001720       590 001723       592 001730       593 001731
    594 001741       595 001750       596 001752       597 001757       598 001763       599 001766       600 001770
    601 001771       602 001774       604 001776       605 002000       606 002005       607 002010       609 002012
    610 002031       613 002034       615 002036       618 002041       619 002042       621 002051       622 002056
    624 002060       625 002062       632 002063       654 002065       655 002067       656 002070       657 002075
    658 002102       659 002121       660 002126       661 002140       662 002145       663 002150       664 002152
    666 002156       667 002161       668 002164       669 002167       671 002231       673 002234       674 002237
    675 002241       678 002245       680 002251       682 002253       683 002255       684 002257       686 002260
    687 002262       688 002265       690 002271       691 002273       692 002275       693 002277       695 002300
    697 002342       699 002345       700 002350       701 002353       706 002354       708 002360       709 002363
    710 002366       712 002430       714 002433       715 002436       718 002441       720 002443       721 002445
    722 002450       724 002455       727 002463       729 002465       732 002476       733 002500       738 002507
    739 002515       741 002523       743 002530       745 002534       747 002535       749 002536       751 002537
    771 002540       772 002550       774 002567       775 002574       777 002615       779 002616       780 002620
    781 002622       782 002623       783 002624       784 002627       785 002631       786 002634       787 002637
    788 002641       792 002645       793 002646       794 002651       795 002662       798 002666       801 002675
    804 002716       806 002722       807 002725       808 002727       809 002730       810 002733       811 002744
    814 002750       818 002756       819 002775       822 002776       827 003035       829 003040       831 003044
    832 003047       833 003051       834 003053       835 003054       837 003055       838 003057       839 003061
    841 003071       844 003074       845 003075       847 003100       848 003105       850 003110       852 003111
    855 003115       857 003124       858 003127       859 003131       860 003133       863 003134       867 003140
    870 003157       872 003160       876 003164       878 003165       918 003166       919 003170       920 003172
    925 003173       926 003216       927 003222       928 003224       929 003226       930 003230       931 003232
    932 003235       937 003240       944 003265       946 003272       948 003311       950 003315       953 003356
    955 003361       956 003363       958 003374       960 003407       962 003422       963 003432       966 003433
    968 003442       969 003445       970 003447       971 003451       973 003452       976 003456       977 003475
    978 003502       979 003504       980 003506       981 003510       982 003513       983 003516       985 003521
    986 003522       987 003541       989 003542       990 003561       994 003562       996 003563      1019 003564
   1022 003565      1023 003574      1024 003576      1025 003577      1026 003604      1027 003623      1029 003627
   1030 003630      1031 003632      1032 003635      1033 003637      1034 003641      1035 003645      1036 003646
   1037 003654      1038 003660      1039 003677      1040 003703      1041 003706      1042 003707      1043 003714
   1045 003715      1046 003716      1048 003721      1051 003730      1052 003734      1053 003735      1055 003741
   1056 003742      1057 003743      1059 003750      1061 003752      1066 003765      1067 003766      1069 003772
   1070 003773      1073 004001      1074 004013      1078 004020      1082 004026      1084 004030      1091 004043
   1094 004045      1095 004046      1097 004050      1099 004057      1100 004060      1102 004071      1103 004072
   1105 004076      1106 004077      1107 004100      1108 004101      1110 004105      1111 004116      1114 004122
   1117 004133      1119 004134      1122 004145      1123 004146      1125 004150      1127 004161      1128 004162
   1131 004166      1133 004177      1134 004200      1136 004202      1137 004203      1138 004204      1140 004206
   1142 004215      1147 004216      1148 004223      1149 004224      1152 004225      1155 004226      1156 004236
   1157 004242      1158 004261      1159 004303      1160 004304      1161 004306      1162 004312      1163 004314
   1164 004316      1165 004321      1166 004322      1167 004327      1168 004334      1169 004353      1170 004357
   1171 004361      1172 004363      1173 004366      1174 004367      1175 004374      1177 004375      1178 004376
   1180 004401      1183 004410      1185 004421      1186 004422      1187 004423      1189 004427      1192 004440
   1193 004441      1197 004446      1198 004453      1199 004454      1204 004455      1206 004456      1207 004457
   1208 004463      1209 004471      1212 004472      1214 004473      1216 004533      1219 004544      1220 004550
   1223 004551      1226 004553      1227 004556      1228 004561      1229 004563      1230 004573      1233 004574
   1235 004575      1237 004603      1239 004611      1240 004612      1242 004613      1244 004622      1246 004632
   1247 004633      1249 004634      1251 004643      1253 004651      1255 004656      1258 004657      1268 004661
   1270 004665      1271 004667      1273 004671      1275 004674      1277 004712      1280 004717      1282 004754
   1284 004760      1285 004761      1289 004773      1291 004775      1292 004776      1294 005000      1296 005002
   1298 005007      1300 005013      1302 005035      1306 005044      1310 005052      1312 005107      1314 005113
   1316 005122      1317 005123      1320 005125      1323 005126      1333 005130      1334 005141      1337 005147
   1339 005171      1341 005174      1342 005177      1343 005201      1344 005211      1346 005223      1348 005224
   1350 005226      1355 005237      1356 005251      1360 005264      1362 005275      1364 005276      1365 005300
   1366 005302      1368 005303      1375 005305      1376 005313      1377 005320      1380 005337      1383 005357
   1385 005362      1386 005365      1387 005367      1389 005377      1390 005405      1391 005406      1394 005407
   1402 005411      1403 005414      1405 005417      1407 005421      1408 005423      1409 005426      1411 005434
   1413 005436      1414 005437      1416 005444      1418 005447      1420 005450      1421 005451      1426 005454
   1433 005460      1435 005461      1436 005500      1442 005501      1466 005503      1467 005505      1468 005507
   1469 005511      1470 005512      1471 005515      1472 005517      1474 005521      1476 005523      1478 005532


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
