	COMPILATION LISTING OF SEGMENT gtss_derail_processor_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/10/84  1225.1 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   *                                                         *
        4*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        5*   *                                                         *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 /* *************************************************************
       10*   *						   *
       11*   * Copyright (c) 1979 by Honeywell Information Systems, Inc. *
       12*   *						   *
       13*   ************************************************************* */
       14 
       15 gtss_derail_processor_: proc (mcpp, fault_name, dummy1, dummy2, continue);
       16 dcl  mcpp ptr parm;
       17 dcl  fault_name char (*)parm;
       18 dcl  dummy1 ptr parm;
       19 dcl  dummy2 ptr parm;
       20 dcl  continue bit (1)aligned parm;
       21 	mcp = mcpp;
       22 
       23 /*
       24*   This procedure is called by sct_manager_ when a DRL condition is
       25*   raised  in  the  current ring. This procedure will make sure the
       26*   DRL is in the GCOS slave segment and then process it.
       27*
       28*   The  faulting  instruction  (DRL)  is  located  in  the  machine
       29*   conditions,  and  is  examined for request type (as given in the
       30*   computed address.) The
       31*   appropriate drl handler is called with a
       32*   ptr to the machine conditions. When  the  drl  handler  returns,
       33*   this  procedure  will  modify  the machine conditions to force a
       34*   transfer to the proper location,  skipping  over  any  parameter
       35*   words  that  followed  the drl, and then it will return, causing
       36*   the modified machine conditions to be restored and the execution
       37*   of the slave program to be resumed.
       38*
       39*
       40*   Author:	Robert J. Grimes	Created
       41*   Albert N. Kepner	  1978
       42*   Robert M. May
       43*   David B. Ward
       44*   Changed:	Dave Ward		02/23/79 t.cfio
       45*   Changed:         Mel Wilson          March/79 drl jsts, snumb, spawn
       46*   Changed:	Al Dupuis		June/79 drl pdio.
       47*   Changed:	Ron Barstad	83-07-25  To 4JS3 with DRLs to  71
       48*   * */
       49 
       50 /*
       51*   This procedure is called as a static handler for the condition DRL in the current ring.
       52*   After making sure the DRL is in the GCOS segment and initializing some data
       53*   items we process the DRL.
       54**/
       55 
       56 	scup = addr (mc.scu);
       57 	gseg = gtss_ext_$gtss_slave_area_seg (gtss_ext_$stack_level_);
       58 
       59 	if fixed (baseno (gseg), 18, 0) ^= fixed (scu.ppr.psr, 15, 0) then do;
       60 	     if gtss_ext_$sig_ptr ^= null () then
       61 		call cu_$ptr_call (gtss_ext_$sig_ptr, mcp, fault_name, dummy1, dummy2, continue);
       62 	     return;
       63 	end;
       64 	continue = "0"b;
       65 
       66 	derail_ptr = addrel (gseg, scu.ilc);
       67 	drl_number = drl_numb;			/* Local value. Note derails are signed integers. */
       68 
       69 /*
       70*   Check to see if the DRL number is in the ball park.  If not abort the user.
       71**/
       72 	if drl_number < lbound (drl_handler, 1) | drl_number > hbound (drl_handler, 1) then do;
       73 	     call gtss_abort_subsystem_ (mcp,
       74 		"gtss_derail_processor_",
       75 		5,
       76 		gtss_pnterr.err5,
       77 		fixed (scu.ilc, 18));
       78 	     scu.rfi = "1"b;
       79 	     scu.if = "1"b;
       80 	     return;
       81 	end;
       82 
       83 /* Print name and location of derail if appropriate */
       84 	if gse_ext_$modes.drl then do;
       85 	     on quit;
       86 	     call ioa_ ("Derail ^7a at ^6o", DRL_NAME (drl_number), fixed (scu.ilc, 18));
       87 	     revert quit;
       88 	end;
       89 
       90 /* save registers */
       91 	gtss_spa.lostr.regs = mc.regs;
       92 						/* save eis registers */
       93 	gtss_spa.leisa = mc.eis_info;
       94 						/* save drl type and location */
       95 	gtss_ust.ldrl.code = drl_number;
       96 	gtss_ust.ldrl.ilc = scu.ilc;
       97 	gtss_spa.losti.ilc = scu.ilc;
       98 						/* save indicator registers */
       99 	gtss_spa.losti.ir = scu.ir;
      100 						/* do some accounting for the guy -- to be done */
      101 	increment = 0;
      102 	gtss_ext_$statistics.count (drl_number) = gtss_ext_$statistics.count (drl_number) + 1; /* bump usage count */
      103 	initial_cpu_time = virtual_cpu_time_ ();
      104 
      105 /* Save instruction counter value. On return if it has been changed
      106*   it indicates a user's wrapup routine is to be called. */
      107 	saved_ilc = scu.ilc;
      108 
      109 	gtss_ext_$dispose_of_drl = dispose_of_derail;
      110 	gtss_ext_$flags.drl_in_progress = "1"b;
      111 	gtss_ext_$flags.dispose_of_drl_on_pi = disposable_derail (drl_number);
      112 
      113 /*
      114*   Call the appropriate DRL processor .
      115**/
      116 	if drl_handler (drl_number) = gtss_abort_subsystem_$not_imp
      117 	then increment = drl_number;
      118 	call drl_handler (drl_number) (mcp, increment);
      119 
      120 /* put code in here to measure drl activity */
      121 	gtss_ext_$statistics.total_time (drl_number) = gtss_ext_$statistics.total_time (drl_number) +
      122 	     virtual_cpu_time_ ()- initial_cpu_time;	/* count total time used by a drl */
      123 
      124 /*
      125*   Modify the machine conditions to skip the DRL and any arguments
      126*   to it.  This is accomplished by modifying the IC (scu.ilc) and forcing
      127*   the processor to refetch the instruction pair.
      128**/
      129 /* However, if scu.ilc has already been changed, it will be left alone,
      130*   since this means user's wrapup code is about to be executed. */
      131 	if saved_ilc = scu.ilc then do;
      132 	     increment = increment + 1 + fixed (scu.ilc, 18);
      133 	     scu.ilc = substr (unspec (increment), 19, 18);
      134 	end;
      135 
      136 /* Update saved machine registers in user's slave prefix. */
      137 	call gtss_update_safe_store_ (mcp);
      138 dispose_of_derail: ;
      139 	scu.rfi = "1"b;
      140 	scu.if = "1"b;
      141 	gtss_ext_$dispose_of_drl = gtss_ext_$bad_drl_rtrn;
      142 	gtss_ext_$restart_from_pi = gtss_ext_$bad_drl_rtrn;
      143 	gtss_ext_$flags.dispose_of_drl_on_pi = "0"b;
      144 	gtss_ext_$flags.drl_in_progress = "0"b;
      145 	if gtss_ext_$flags.popup_from_pi then do;
      146 	     gtss_ext_$flags.popup_from_pi = "0"b;
      147 	     gtss_ext_$flags.unfinished_drl = "0"b;
      148 	     go to gtss_ext_$popup_from_pi;
      149 	end;
      150 	if gtss_ext_$flags.unfinished_drl then do;
      151 	     gtss_ext_$flags.unfinished_drl = "0"b;
      152 	     call gtss_break_vector_ ();
      153 	end;
      154 	return;
      155 
      156 set: entry;
      157 
      158 /* *	Entry to set drl_handler entry variable.	* */
      159 
      160 /*    octal name
      161*   ===== ==== */
      162 	drl_handler (-10) = gtss_drl_msub_;		/* DRL -012 Call Multics sub. */
      163 	drl_handler (-09) = gtss_abort_subsystem_$not_imp; /* DRL -011 */
      164 	drl_handler (-08) = gtss_abort_subsystem_$not_imp; /* DRL -010 */
      165 	drl_handler (-07) = gtss_abort_subsystem_$not_imp; /* DRL -007 */
      166 	drl_handler (-06) = gtss_abort_subsystem_$not_imp; /* DRL -006 */
      167 	drl_handler (-05) = gtss_abort_subsystem_$not_imp; /* DRL -005 */
      168 	drl_handler (-04) = gtss_abort_subsystem_$not_imp; /* DRL -004 */
      169 	drl_handler (-03) = gtss_abort_subsystem_$not_imp; /* DRL -003 */
      170 	drl_handler (-02) = gtss_abort_subsystem_$not_imp; /* DRL -002 */
      171 	drl_handler (-01) = gtss_abort_subsystem_$not_imp; /* DRL -001 */
      172 	drl_handler (000) = gtss_abort_subsystem_$not_imp; /* DRL 0000 -not available- */
      173 	drl_handler (001) = gtss_drl_dio_;		/* DRL 0001 dio */
      174 	drl_handler (002) = gtss_drl_kotnow_$gtss_drl_kout_; /* DRL 0002 kout */
      175 	drl_handler (003) = gtss_drl_koutn_;		/* DRL 0003 koutn */
      176 	drl_handler (004) = gtss_drl_kin_;		/* DRL 0004 kin */
      177 	drl_handler (005) = gtss_drl_return_;		/* DRL 0005 return */
      178 	drl_handler (006) = gtss_drl_defil_;		/* DRL 0006 defil */
      179 	drl_handler (007) = gtss_drl_abort_;		/* DRL 0007 abort */
      180 	drl_handler (008) = gtss_drl_setswh_;		/* DRL 0010 setswh */
      181 	drl_handler (009) = gtss_drl_rstswh_;		/* DRL 0011 rstswh */
      182 	drl_handler (010) = gtss_drl_rew_;		/* DRL 0012 rew */
      183 	drl_handler (011) = gtss_drl_filsp_;		/* DRL 0013 filsp */
      184 	drl_handler (012) = gtss_drl_retfil_;		/* DRL 0014 retfil */
      185 	drl_handler (013) = gtss_drl_relmem_;		/* DRL 0015 relmem */
      186 	drl_handler (014) = gtss_drl_addmem_;		/* DRL 0016 addmem */
      187 	drl_handler (015) = gtss_drl_corfil_;		/* DRL 0017 corfil */
      188 	drl_handler (016) = gtss_drl_snumb_;		/* DRL 0020 snumb */
      189 	drl_handler (017) = gtss_drl_time_;		/* DRL 0021 time */
      190 	drl_handler (018) = gtss_drl_pasaft_;		/* DRL 0022 pasaft */
      191 	drl_handler (019) = gtss_drl_termtp_;		/* DRL 0023 termtp */
      192 	drl_handler (020) = gtss_drl_pdio_;		/* DRL 0024  */
      193 	drl_handler (021) = gtss_drl_restor_;		/* DRL 0025 restor */
      194 	drl_handler (022) = gtss_drl_spawn_;		/* DRL 0026 spawn */
      195 	drl_handler (023) = gtss_drl_tapein_;		/* DRL 0027 */
      196 	drl_handler (024) = gtss_drl_callss_;		/* DRL 0030 callss */
      197 	drl_handler (025) = gtss_abort_subsystem_$not_imp; /* DRL 0031 */
      198 	drl_handler (026) = gtss_abort_subsystem_$not_imp; /* DRL 0032 */
      199 	drl_handler (027) = gtss_drl_pasust_;		/* DRL 0033  pasust */
      200 	drl_handler (028) = gtss_drl_morlnk_;		/* DRL 0034 morlnk */
      201 	drl_handler (029) = gtss_abort_subsystem_$not_imp; /* DRL 0035 */
      202 	drl_handler (030) = gtss_drl_filact_;		/* DRL 0036 filact */
      203 	drl_handler (031) = gtss_drl_setlno_;		/* DRL 0037 setlno */
      204 	drl_handler (032) = gtss_drl_sysret_;		/* DRL 0040 sysret */
      205 	drl_handler (033) = gtss_abort_subsystem_$not_imp; /* DRL 0041 */
      206 	drl_handler (034) = gtss_abort_subsystem_$not_imp; /* DRL 0042 */
      207 	drl_handler (035) = gtss_abort_subsystem_$not_imp; /* DRL 0043 */
      208 	drl_handler (036) = gtss_drl_pasdes_;		/* DRL 0044 pasdes */
      209 	drl_handler (037) = gtss_drl_jsts_;		/* DRL 0045 jsts */
      210 	drl_handler (038) = gtss_abort_subsystem_$not_imp; /* DRL 0046 */
      211 	drl_handler (039) = gtss_drl_part_;		/* DRL 0047 part */
      212 	drl_handler (040) = gtss_drl_grow_;		/* DRL 0050 grow */
      213 	drl_handler (041) = gtss_abort_subsystem_$not_imp; /* DRL 0051 */
      214 	drl_handler (042) = gtss_abort_subsystem_$not_imp; /* DRL 0052 */
      215 	drl_handler (043) = gtss_drl_switch_;		/* DRL 0053 */
      216 	drl_handler (044) = gtss_drl_drlimt_;		/* DRL 0054 drlimt */
      217 	drl_handler (045) = gtss_abort_subsystem_$not_imp; /* DRL 0055 */
      218 	drl_handler (046) = gtss_drl_kotnow_;		/* DRL 0056 kotnow */
      219 	drl_handler (047) = gtss_drl_objtim_;		/* DRL 0057 objtim */
      220 	drl_handler (048) = gtss_drl_spawn_$gtss_drl_pasflr_; /* DRL 0060 pasflr */
      221 	drl_handler (049) = gtss_drl_stoppt_;		/* DRL 0061 */
      222 	drl_handler (050) = gtss_drl_drlsav_;		/* DRL 0062 drlsav */
      223 	drl_handler (051) = gtss_drl_task_;		/* DRL 0063 task */
      224 	drl_handler (052) = gtss_drl_pseudo_;		/* DRL 0064 pseudo */
      225 	drl_handler (053) = gtss_drl_prgdes_;		/* DRL 0065 prgdes */
      226 	drl_handler (054) = gtss_drl_gwake_;		/* DRL 0066 gwake */
      227 	drl_handler (055) = gtss_abort_subsystem_$not_imp; /* DRL 0067 */
      228 	drl_handler (056) = gtss_abort_subsystem_$not_imp; /* DRL 0070 */
      229 	drl_handler (057) = gtss_abort_subsystem_$not_imp; /* DRL 0071 */
      230 	drl_handler (058) = gtss_drl_t_goto_;		/* DRL 0072 t.goto */
      231 	drl_handler (059) = gtss_drl_t_cmov_;		/* DRL 0073 t.cmov */
      232 	drl_handler (060) = gtss_drl_t_linl_;		/* DRL 0074 t.linl */
      233 	drl_handler (061) = gtss_abort_subsystem_$not_imp; /* DRL 0075 */
      234 	drl_handler (062) = gtss_abort_subsystem_$not_imp; /* DRL 0076 */
      235 	drl_handler (063) = gtss_drl_t_cfio_;		/* DRL 0077 t.cfio */
      236 	drl_handler (064) = gtss_abort_subsystem_$not_imp; /* DRL 0100 */
      237 	drl_handler (065) = gtss_drl_t_rscc_;		/* DRL 0101 t.rscc */
      238 	drl_handler (066) = gtss_abort_subsystem_$not_imp; /* DRL 0102 */
      239 	drl_handler (067) = gtss_drl_t_err_;		/* DRL 0103 t.err */
      240 	drl_handler (068) = gtss_abort_subsystem_$not_imp; /* DRL 0104 */
      241 	drl_handler (069) = gtss_abort_subsystem_$not_imp; /* DRL 0105 */
      242 	drl_handler (070) = gtss_abort_subsystem_$not_imp; /* DRL 0106 */
      243 	drl_handler (071) = gtss_abort_subsystem_$not_imp; /* DRL 0107 */
      244 	return;
      245 
      246 /* *  Declarations for gtss_derail_processor_:
      247*   IDENTIFIER		ATTRIBUTES	* */
      248 dcl  addr builtin;
      249 dcl  baseno builtin;
      250 dcl  cu_$ptr_call entry options (variable);
      251 dcl 1 derail aligned based (derail_ptr),
      252     2 drl_numb fixed bin (17) unal,			/* drl_numb is fixed bin(17) to allow for negative derails */
      253     2 drl_op bit (18) unal;
      254 dcl  derail_ptr ptr init (null ());
      255 dcl  drl_number fixed bin (17);
      256 dcl  drl_handler (-10:71)entry (ptr, fixed bin (24))static;
      257 dcl  fixed builtin;
      258 dcl  gseg ptr init (null ());
      259 dcl  hbound builtin;
      260 dcl  increment fixed bin (24);
      261 dcl  initial_cpu_time fixed bin (71);
      262 dcl  ioa_ entry options (variable);
      263 dcl  lbound builtin;
      264 dcl  quit_flag bit (1);
      265 dcl  quit condition;
      266 dcl  saved_ilc bit (18);
      267 dcl  substr builtin;
      268 dcl  unspec builtin;
      269 dcl  virtual_cpu_time_ entry returns (fixed bin (71));
      270 
      271 dcl  disposable_derail (-10:71)
      272      bit (1) unal static int options (constant) init (
      273     (12) (1)"0"b,					/* -12 to +01 (octal) */
      274      "1"b,					/* DRL KOUT (02 octal) */
      275      "1"b,					/* DRL KOUTN (03 octal) */
      276     (42) (1)"0"b,					/* 04 to 55 (octal) */
      277      "1"b,					/* DRL KOTNOW (56 octal) */
      278     (25) (1)"0"b);						/* 57 to 107 (octal) */
      279 
  1     1 /* BEGIN INCLUDE FILE gtss_spa.incl.pl1 */
  1     2 /*
  1     3*  Created: (Grimes SMP)  04/15/78
  1     4*   Changed	6/22/78	A. Kepner		add labrt
  1     5*   Changed	6/28/78	D. Ward		lwrap defined (lrap)
  1     6*   Changed	10/16/79  Al Dupuis		lsztm was off by two words.
  1     7*   Changed          84-02-27  Ron Barstad         added hex ir bit
  1     8*   */
  1     9 dcl 1 gtss_spa aligned based (gseg),
  1    10       3 fault_vector (0:9) bit(36),
  1    11       3 lhstr char (8) unal,
  1    12       3 lbrk,
  1    13         4 ic	bit(18) unal,
  1    14         4 ir	bit(18) unal,
  1    15         4 tra_addr	bit(18) unal,
  1    16         4 tra_op	bit(18) unal,
  1    17       3 fill1 (0:1) bit(36),
  1    18       3 lsztm,
  1    19         4 ic_ir,
  1    20 	5 IC	bit(18)unal,
  1    21 	5 IR	bit(16)unal,
  1    22 	5 b34	bit(1)unal,
  1    23 	5 b35	bit(1)unal,
  1    24         4 tra	bit(36)unal,
  1    25       3 losti unal,
  1    26         4 ilc	bit(18) unal,
  1    27         4 ir unal,				/* INDICATOR  REGISTERS */
  1    28 	5 zero	bit(1) unal,			/* zero indicator */
  1    29 	5 neg	bit(1) unal,			/* negative indicator */
  1    30 	5 carry	bit(1) unal,			/* carryry indicator */
  1    31 	5 ovfl	bit(1) unal,			/* overflow indicator */
  1    32 	5 eovf	bit(1) unal,			/* eponent overflow */
  1    33 	5 eufl	bit(1) unal,			/* exponent underflow */
  1    34 	5 oflm	bit(1) unal,			/* overflow mask */
  1    35 	5 tro	bit(1) unal,			/* tally runout */
  1    36 	5 par	bit(1) unal,			/* parity error */
  1    37 	5 parm	bit(1) unal,			/* parity mask */
  1    38 	5 bm	bit(1) unal,			/* ^bar mode */
  1    39 	5 tru	bit(1) unal,			/* truncation mode */
  1    40 	5 mif	bit(1) unal,			/* multi-word instruction mode */
  1    41 	5 abs	bit(1) unal,			/* absolute mode */
  1    42           5 hex     bit(1) unal,                            /* hexadecimalexponent mode */
  1    43 	5 pad	bit(3) unal,
  1    44       3 lnam	bit(36),			/* Library name (bcd). */
  1    45       3 labrt,
  1    46         4 b0_17	bit(18) unal,
  1    47         4 b18_35 fixed bin (17) unal,
  1    48       3 fill2	bit(36),
  1    49       3 lfig	bit(36),
  1    50       3 lwrap,
  1    51 	5 b0_17	bit(1) unal,
  1    52 	5 b18	bit(1) unal,
  1    53 	5 b19	bit(1) unal,
  1    54 	5 b20	bit(1) unal,
  1    55 	5 b21	bit(1) unal,
  1    56 	5 b22	bit(1) unal,
  1    57 	5 b23	bit(1) unal,
  1    58 	5 b24	bit(1) unal,
  1    59 	5 b25	bit(1) unal,
  1    60 	5 b26	bit(1) unal,
  1    61 	5 b27	bit(1) unal,
  1    62 	5 b28	bit(1) unal,
  1    63 	5 b29	bit(1) unal,
  1    64 	5 b30	bit(1) unal,
  1    65 	5 b31	bit(1) unal,
  1    66 	5 b32	bit(1) unal,
  1    67 	5 b33	bit(1) unal,
  1    68 	5 b34	bit(1) unal,
  1    69 	5 b35	bit(1) unal,
  1    70       3 lsid	bit(36),
  1    71       3 lftst	bit(36),
  1    72       3 lpcal (0:3) bit(36),
  1    73       3 lpcnt fixed bin (35) unal,
  1    74       3 lhole,
  1    75         4 high fixed bin (17) unal,
  1    76         4 total fixed bin (17) unal,
  1    77       3 lostr unal,
  1    78         4 regs unal,				/* registers */
  1    79 	5 x (0:7) bit(18) unal,			/* index registers */
  1    80 	5 a	bit(36),			/* accumulator */
  1    81 	5 q	bit(36),			/* q-register */
  1    82 	5 e	bit(8) unal,			/* exponent */
  1    83 	5 pad1	bit(28) unal,
  1    84 	5 t	bit(27) unal,			/* timer register */
  1    85 	5 pad2	bit(6) unal,
  1    86 	5 ralr	bit(3) unal,			/* ring alarm register */
  1    87       3 leisa	(0:7) bit(36),
  1    88       3 leisp	(0:7) bit(36),
  1    89       3 fill3	(0:35) bit(36);
  1    90 
  1    91 /*   END INCLUDE FILE gtss_spa.incl.pl1 */
      280 
      281 
  2     1 /* BEGIN INCLUDE FILE gtss_ust_ext_.incl.pl1 */
  2     2 /* UST: User Status Table 
  2     3*   definitions based on 
  2     4*   System Tables, Order number DD14-01E, January 1981
  2     5*   Section 15, Time Sharing System
  2     6*
  2     7*   Authors: Robert J. Grimes	Created
  2     8*   -	  Albert N. Kepner	  1978
  2     9*   -	  Robert M. May
  2    10*   -	  David B. Ward
  2    11*   Change:  Dave Ward	02/23/79 Level 4 numbering.
  2    12*   Change:  Ron Barstad  83-07-12 Repaired damaged formating and word offset comments
  2    13*                                  Brought up to 4JS3 functionality
  2    14**/
  2    15 /* octal word offsets of entries */
  2    16 dcl 1 gtss_ust_ext_$ust aligned ext,
  2    17       3 gtss_ust,
  2    18 /* 0-1  */	4 lid		bit (72),
  2    19 /* 2    */	4 lstp		bit (36),
  2    20 /* 3    */	4 ltin		bit (36),
  2    21 /* 4    */	4 lstio,
  2    22 			5 no_of_chars_by_8  fixed bin (18) uns unal,
  2    23 			5 no_of_disk_io     fixed bin (18) uns unal,
  2    24 /* 5    */	4 lsnub		bit (36),
  2    25 /* 6-7  */	4 lchg		bit (72),
  2    26 /* 10   */	4 lbuf,
  2    27 			5 address		bit (18)unaligned,
  2    28 			5 tally		bit (1)unaligned,
  2    29 			5 terminal_type	bit (5)unaligned,
  2    30 			5 station_id	bit (12)unaligned,
  2    31 /* 11-12 */	4 liost (0:1)	bit (36),
  2    32 /* 13   */	4 lcc		bit (36),
  2    33 /* 14   */	4 lback,
  2    34 			5 fill1		bit (18) unaligned,
  2    35 			5 gwake		fixed bin (17) unaligned,
  2    36 /* 15   */	4 lflag,
  2    37 			5 mp_list		bit (18) unaligned,
  2    38 			5 flags unaligned,
  2    39 				6 b18		bit (1) unaligned,
  2    40 				6 b19		bit (1) unaligned,
  2    41 				6 b20		bit (1) unaligned,
  2    42 				6 b21		bit (1) unaligned,
  2    43 				6 b22		bit (1) unaligned,
  2    44 				6 b23		bit (1) unaligned,
  2    45 				6 b24		bit (1) unaligned,
  2    46 				6 b25		bit (1) unaligned,
  2    47 				6 b26		bit (1) unaligned,
  2    48 				6 b27		bit (1) unaligned,
  2    49 				6 b28		bit (1) unaligned,
  2    50 				6 b29		bit (1) unaligned,
  2    51 				6 b30		bit (1) unaligned,
  2    52 				6 b31		bit (1) unaligned,
  2    53 				6 b32		bit (1) unaligned,
  2    54 				6 b33		bit (1) unaligned,
  2    55 				6 b34		bit (1) unaligned,
  2    56 				6 b35		bit (1) unaligned,
  2    57 /* 16   */	4 lkdss		bit (36),
  2    58 /* 17   */	4 lfile,
  2    59 			5 program_stack	fixed bin (17) unal,
  2    60 			5 file_list_ptr	bit (18) unal,
  2    61 /* 20   */	4 lttys		bit (36),
  2    62 /* 21   */	4 lswth,
  2    63 			5 b0		bit (1) unaligned,
  2    64 			5 b1		bit (1) unaligned,
  2    65 			5 b2		bit (1) unaligned,
  2    66 			5 b3		bit (1) unaligned,
  2    67 			5 b4		bit (1) unaligned,
  2    68 			5 b5		bit (1) unaligned,
  2    69 			5 b6		bit (1) unaligned,
  2    70 			5 b7		bit (1) unaligned,
  2    71 			5 b8		bit (1) unaligned,
  2    72 			5 b9		bit (1) unaligned,
  2    73 			5 b10		bit (1) unaligned,
  2    74 			5 b11		bit (1) unaligned,
  2    75 			5 b12		bit (1) unaligned,
  2    76 			5 b13		bit (1) unaligned,
  2    77 			5 b14		bit (1) unaligned,
  2    78 			5 b15		bit (1) unaligned,
  2    79 			5 b16		bit (1) unaligned,
  2    80 			5 b17		bit (1) unaligned,
  2    81 			5 b18		bit (1) unaligned,
  2    82 			5 b19		bit (1) unaligned,
  2    83 			5 b20		bit (1) unaligned,
  2    84 			5 b21		bit (1) unaligned,
  2    85 			5 b22		bit (1) unaligned,
  2    86 			5 b23		bit (1) unaligned,
  2    87 			5 b24		bit (1) unaligned,
  2    88 			5 b25		bit (1) unaligned,
  2    89 			5 b26		bit (1) unaligned,
  2    90 			5 b27		bit (1) unaligned,
  2    91 			5 b28		bit (1) unaligned,
  2    92 			5 b29		bit (1) unaligned,
  2    93 			5 b30		bit (1) unaligned,
  2    94 			5 b31		bit (1) unaligned,
  2    95 			5 b32		bit (1) unaligned,
  2    96 			5 b33		bit (1) unaligned,
  2    97 			5 b34		bit (1) unaligned,
  2    98 			5 b35		bit (1) unaligned,
  2    99 /* 22   */	4 lsize,
  2   100 			5 bar		fixed bin (17) unaligned,
  2   101 			5 limit		bit (18) unaligned,
  2   102 /* 23... */	4 lswap,
  2   103 			5 fill		bit (18) unal,
  2   104 			5 size		bit (18) unal,
  2   105 /* ...24 */	4 transfer_cell	bit (36) unal,
  2   106 /* 25   */	4 lerrm		bit (36),
  2   107 /* 26-37 */	4 lcfil (0:9)	bit (36),
  2   108 /* 40   */	4 lsybc,
  2   109 			5 b0_17		fixed bin (17) unaligned,
  2   110 			5 b18_35		fixed bin (17) unaligned,
  2   111 /* 41-42 */	4 lstem (0:1)	bit (36),
  2   112 /* 43    */	4 lcals,
  2   113 			5 b0_17		fixed bin (17) unaligned,
  2   114 			5 b18_35		bit (18) unaligned,
  2   115 /* 44-51 */	4 subsystems (3),
  2   116 			5 content_lswap,
  2   117 				6 fill		bit (18) unal,
  2   118 				6 size		bit (18) unal,
  2   119 			5 tally_address	fixed bin (17) unaligned,
  2   120 			5 ss_flags	bit (18) unaligned,
  2   121 /* 52   */	4 ltalc,
  2   122 			5 tod		fixed bin (17) unaligned,
  2   123 			5 startup		fixed bin (17) unaligned,
  2   124 /* 53   */	4 lspts		fixed bin (35),
  2   125 /* 54   */	4 lflg2,
  2   126 			5 b0		bit (1) unaligned,
  2   127 			5 b1		bit (1) unaligned,
  2   128 			5 b2		bit (1) unaligned,
  2   129 			5 b3		bit (1) unaligned,
  2   130 			5 b4		bit (1) unaligned,
  2   131 			5 b5		bit (1) unaligned,
  2   132 			5 b6		bit (1) unaligned,
  2   133 			5 b7		bit (1) unaligned,
  2   134 			5 b8		bit (1) unaligned,
  2   135 			5 b9		bit (1) unaligned,
  2   136 			5 b10		bit (1) unaligned,
  2   137 			5 b11		bit (1) unaligned,
  2   138 			5 b12		bit (1) unaligned,
  2   139 			5 b13		bit (1) unaligned,
  2   140 			5 b14		bit (1) unaligned,
  2   141 			5 b15		bit (1) unaligned,
  2   142 			5 b16		bit (1) unaligned,
  2   143 			5 b17		bit (1) unaligned,
  2   144 			5 b18		bit (1) unaligned,
  2   145 			5 b19		bit (1) unaligned,
  2   146 			5 b20		bit (1) unaligned,
  2   147 			5 b21		bit (1) unaligned,
  2   148 			5 b22		bit (1) unaligned,
  2   149 			5 b23		bit (1) unaligned,
  2   150 			5 b24		bit (1) unaligned,
  2   151 			5 b25		bit (1) unaligned,
  2   152 			5 b26		bit (1) unaligned,
  2   153 			5 b27		bit (1) unaligned,
  2   154 			5 b28		bit (1) unaligned,
  2   155 			5 b29		bit (1) unaligned,
  2   156 			5 b30		bit (1) unaligned,
  2   157 			5 b31		bit (1) unaligned,
  2   158 			5 b32		bit (1) unaligned,
  2   159 			5 b33		bit (1) unaligned,
  2   160 			5 b34		bit (1) unaligned,
  2   161 			5 b35		bit (1) unaligned,
  2   162 /* 55-60 */	4 lsftm (0:3)	bit (36),
  2   163 /* 61    */	4 lsprt		fixed bin (35),
  2   164 /* 62    */	4 ltrm		bit (36),
  2   165 /* 63    */	4 linno		fixed bin (35),
  2   166 /* 64    */	4 lincr		fixed bin (35),
  2   167 /* 65    */	4 ltdes		bit (36),
  2   168 /* 66    */	4 lbptr		bit (36),
  2   169 /* 67    */	4 lpptr,
  2   170 			5 last_file_pat_ptr	bin (18) uns unal,
  2   171 			5 lpptr_reserved	bin (18) uns unal,
  2   172 /* 70    */	4 lsclp		bit (36),
  2   173 /* 71    */	4 limit		fixed bin (35),
  2   174 /* 72    */	4 lacpt,
  2   175 			5 jout_pat_offset	bit (18) unal,
  2   176 			5 permissions unal,
  2   177 				6 lodx		bit (1) unal,
  2   178 				6 cardin		bit (1) unal,
  2   179 				6 talk		bit (1) unal,
  2   180 				6 lods		bit (1) unal,
  2   181 			5 cardin_urgency	bit (14) unal,
  2   182 /* 73    */	4 ldrl,
  2   183 			5 ilc		bit (18) unaligned,
  2   184 			5 code		fixed bin (17) unaligned,
  2   185 /* 74    */	4 ljsnb		bit (36),
  2   186 /* 75    */	4 ltm0		bit (36),
  2   187 /* 76    */	4 ltm1		bit (36),
  2   188 /* 77    */	4 ltm2		bit (36),
  2   189 /* 100   */	4 ltm3		bit (36),
  2   190 /* 101   */	4 ltm4		bit (36),
  2   191 /* 102   */	4 ltm5		bit (36),
  2   192 /* 103   */	4 ltmwt		bit (36),
  2   193 /* 104   */	4 ltmrs		bit (36),
  2   194 /* 105   */	4 ltc0		bit (36),
  2   195 /* 106   */	4 ltc1		bit (36),
  2   196 /* 107   */	4 ltc2		bit (36),
  2   197 /* 110   */	4 lct3		bit (36),
  2   198 /* 111   */	4 ltc4		bit (36),
  2   199 /* 112   */	4 ltc5		bit (36),
  2   200 /* 113   */	4 ltcw		bit (36),
  2   201 /* 114   */	4 lkst		bit (36),
  2   202 /* 115   */	4 lkst2		bit (36),
  2   203 /* 116   */	4 lkcc		bit (36),
  2   204 /* 117   */	4 lkms		bit (36),
  2   205 /* 120-121 */	4 lksdc (0:1)	bit (36),
  2   206 /* 122   */	4 lkntp		bit (36),
  2   207 /* 123   */	4 lkrdc		bit (36),
  2   208 /* 124   */	4 lpqf		bit (36),
  2   209 /* 125   */	4 lpqb		bit (36),
  2   210 /* 126   */	4 lustl		bit (36),
  2   211 /* 127   */	4 ltemp		bit (36),
  2   212 /* 130   */	4 lrtll,
  2   213 			5 word_length	fixed bin unaligned,
  2   214 			5 char_length	fixed bin unaligned,
  2   215 /* 131   */	4 ltim		bit (36),
  2   216 /* 132   */	4 lcfio,
  2   217 			5 sect_out	fixed bin(18)unsigned unal,
  2   218 			5 sect_in		fixed bin(18)unsigned unal,
  2   219 /* 133   */	4 lcfst,
  2   220 			5 initial_sect_out	fixed bin(18)unsigned unal,
  2   221 			5 start_term	fixed bin(18)unsigned unal,
  2   222 /* 134   */	4 lcmpt		bit (36),
  2   223 /* 135   */	4 lcjid		bit (36),
  2   224 /* 136-137 */	4 lrcal (0:1)	bit (36),
  2   225 /* 140   */	4 lrdta		bit (36),
  2   226 /* 141   */	4 lrrsk		bit (36),
  2   227 /* 142   */	4 lrskd		bit (36),
  2   228 /* 143   */	4 lrcc		bit (36),
  2   229 /* 144-145 */	4 lrsts (0:1)	bit (36),
  2   230 /* 146   */	4 lrtm		bit (36),
  2   231 /* 147   */	4 lswt2,
  2   232 			5 b0		bit (1) unaligned,
  2   233 			5 b1		bit (1) unaligned,
  2   234 			5 b2		bit (1) unaligned,
  2   235 			5 b3		bit (1) unaligned,
  2   236 			5 b4		bit (1) unaligned,
  2   237 			5 b5		bit (1) unaligned,
  2   238 			5 b6		bit (1) unaligned,
  2   239 			5 b7		bit (1) unaligned,
  2   240 			5 b8		bit (1) unaligned,
  2   241 			5 b9		bit (1) unaligned,
  2   242 			5 b10		bit (1) unaligned,
  2   243 			5 b11		bit (1) unaligned,
  2   244 			5 b12		bit (1) unaligned,
  2   245 			5 b13		bit (1) unaligned,
  2   246 			5 b14		bit (1) unaligned,
  2   247 			5 b15		bit (1) unaligned,
  2   248 			5 b16		bit (1) unaligned,
  2   249 			5 b17		bit (1) unaligned,
  2   250 			5 b18		bit (1) unaligned,
  2   251 			5 b19		bit (1) unaligned,
  2   252 			5 b20		bit (1) unaligned,
  2   253 			5 b21		bit (1) unaligned,
  2   254 			5 b22		bit (1) unaligned,
  2   255 			5 b23		bit (1) unaligned,
  2   256 			5 b24		bit (1) unaligned,
  2   257 			5 b25		bit (1) unaligned,
  2   258 			5 b26		bit (1) unaligned,
  2   259 			5 b27		bit (1) unaligned,
  2   260 			5 b28		bit (1) unaligned,
  2   261 			5 b29		bit (1) unaligned,
  2   262 			5 b30		bit (1) unaligned,
  2   263 			5 b31		bit (1) unaligned,
  2   264 			5 b32		bit (1) unaligned,
  2   265 			5 b33		bit (1) unaligned,
  2   266 			5 b34		bit (1) unaligned,
  2   267 			5 b35		bit (1) unaligned,
  2   268 /* 150   */	4 llsnb		bit (36),
  2   269 /* 151   */	4 lesq		bit (36),
  2   270 /* 152-153 */	4 lumc (0:1)	bit (36),
  2   271 /* 154-155 */	4 lfnam (0:1)	bit (36),
  2   272 /* 156   */	4 lopts		bit (36),
  2   273 /* 157   */	4 licec,
  2   274 			5 b0_17		bit (18) unaligned,
  2   275 			5 b18_35		fixed bin (17) unaligned,
  2   276 /* 160   */	4 lflg3,
  2   277 			5 b0		bit (1) unaligned,
  2   278 			5 b1		bit (1) unaligned,
  2   279 			5 b2		bit (1) unaligned,
  2   280 			5 b3		bit (1) unaligned,
  2   281 			5 b4		bit (1) unaligned,
  2   282 			5 b5		bit (1) unaligned,
  2   283 			5 b6		bit (1) unaligned,
  2   284 			5 b7		bit (1) unaligned,
  2   285 			5 b8		bit (1) unaligned,
  2   286 			5 b9		bit (1) unaligned,
  2   287 			5 b10		bit (1) unaligned,
  2   288 			5 b11		bit (1) unaligned,
  2   289 			5 b12		bit (1) unaligned,
  2   290 			5 b13		bit (1) unaligned,
  2   291 			5 b14		bit (1) unaligned,
  2   292 			5 b15		bit (1) unaligned,
  2   293 			5 b16		bit (1) unaligned,
  2   294 			5 b17		bit (1) unaligned,
  2   295 			5 b18		bit (1) unaligned,
  2   296 			5 b19		bit (1) unaligned,
  2   297 			5 b20		bit (1) unaligned,
  2   298 			5 b21		bit (1) unaligned,
  2   299 			5 b22		bit (1) unaligned,
  2   300 			5 b23		bit (1) unaligned,
  2   301 			5 b24		bit (1) unaligned,
  2   302 			5 b25		bit (1) unaligned,
  2   303 			5 b26		bit (1) unaligned,
  2   304 			5 b27		bit (1) unaligned,
  2   305 			5 b28		bit (1) unaligned,
  2   306 			5 b29		bit (1) unaligned,
  2   307 			5 b30		bit (1) unaligned,
  2   308 			5 b31		bit (1) unaligned,
  2   309 			5 b32		bit (1) unaligned,
  2   310 			5 b33		bit (1) unaligned,
  2   311 			5 b34		bit (1) unaligned,
  2   312 			5 b35		bit (1) unaligned,
  2   313 /* 161-163 */	4 lpage (0:2)	bit (36),
  2   314 /* 164   */	4 lsit1		bit (36),
  2   315 /* 165   */	4 lsit2		bit (36),
  2   316 /* 166   */	4 lsit3		bit (36),
  2   317 /* 167   */	4 lsit4		bit (36),
  2   318 /* The following entries are maintained by gtss and are not found in TSS UST */
  2   319 /* 170   */	4 lxxx, /* program stack index, offset from gtss_ust */
  2   320 			5 b0_17		fixed bin (17) unaligned,
  2   321 			5 b18_35		bit (18) unaligned, /* not used */
  2   322 /* 171-175 */	4 lprgs (5),
  2   323 			5 b0_17		fixed bin (17) unaligned,
  2   324 			5 b18_35		fixed bin (17) unaligned,
  2   325 /* 176   */	4 fill	bit (36),
  2   326 /* 177   */	4 remote_io_buffer aligned,
  2   327 			5 buffer_control_word,
  2   328 				6 current_line_pointer  bit (18)unal,
  2   329 				6 buffer_threshold_address  bit (18)unal,
  2   330 			5 number_words_transmitted	fixed bin (17)unal,
  2   331 			5 FILL1			fixed bin (17)unal,
  2   332 			5 count_of_characters_transmitted fixed bin (17)unal,
  2   333 			5 FILL2			fixed bin (17)unal,
  2   334 			5 characters_transmitted (244) char (1) unal,
  2   335 /* 277   */	4 word_after_ust		bit (36) aligned;
  2   336 
  2   337 /*   END INCLUDE FILE gtss_ust_ext_.incl.pl1 */
      282 
      283 
  3     1 /* BEGIN INCLUDE FILE gtss_drl_names.incl.pl1 */
  3     2 /*
  3     3*  Created: (Grimes SMP)  04/15/78 0933.7 mst Sat 
  3     4*  Changed:  Dave Ward  06/08/78  Made attributes constant
  3     5*  Changed:  Ron Barstad 83-07-25  Updated to 4JS3
  3     6**/
  3     7 dcl  DRL_NAME (-10:71) char (7) varying static int options(constant) initial (
  3     8      "USER-10",					/* USER-10 	USER DEFINED		-10	*/
  3     9      "USER-9",					/* USER-9		USER DEFINED		-9	*/
  3    10      "USER-8",					/* USER-8		USER DEFINED		-8	*/
  3    11      "USER-7",					/* USER-7		USER DEFINED		-7	*/
  3    12      "USER-6",					/* USER-6		USER DEFINED		-6	*/
  3    13      "USER-5",					/* USER-5		USER DEFINED		-5	*/
  3    14      "USER-4",					/* USER-4		USER DEFINED		-4	*/
  3    15      "USER-3",					/* USER-3		USER DEFINED		-3	*/
  3    16      "USER-2",					/* USER-2		USER DEFINED		-2	*/
  3    17      "USER-1",					/* USER-1		USER DEFINED		-1	*/
  3    18      "ZERO",					/*		MUST ALWAYS BE AN ERROR 	0	*/
  3    19      "DIO",					/* T.DIO     Do I/O on User's File                  1    */
  3    20      "KOUT",					/* T.KOUT    Keyboard Output                        2    */
  3    21      "KOUTN",					/* T.OTIN    Keyboard Output Then Input             3    */
  3    22      "KIN",					/* T.KIN     Keyboard Input Last Line               4    */
  3    23      "RETURN",					/* T.RTRN    Return to Primitive List               5    */
  3    24      "DEFIL",					/* T.DFIL    Define and Access a Temporary File     6    */
  3    25      "ABORT",					/* T.ABRT    Abort                                  7    */
  3    26      "SETSWH",					/* T.SETS    Set Switch Word                        10   */
  3    27      "RSTSWH",					/* T.RSTS    Reset Switch Word                      11   */
  3    28      "REW",					/* T.RWND    Rewind a Linked File                   12   */
  3    29      "FILSP",					/* T.FLSP    Space a Linked File                    13   */
  3    30      "RETFIL",					/* T.RFIL    Return a File                          14   */
  3    31      "RELMEM",					/* T.RMEM    Release Memory                         15   */
  3    32      "ADDMEM",					/* T.AMEM    Add Memory                             16   */
  3    33      "CORFIL",					/* T.CFIL    Data From/To Core File                 17   */
  3    34      "SNUMB",					/* T.SNUM    Obtain SNUMB                           20   */
  3    35      "TIME",					/* T.TIME    Obtain Proc.  Time and Time of Day     21   */
  3    36      "PASAFT",					/* T.PAFT    Pass List of Files to Subsystem        22   */
  3    37      "TERMTP",					/* T.TTYP    Terminal Type and Line Number          23   */
  3    38      "PDIO",					/* T.PDIO    Do I/O on a System File                24   */
  3    39      "RESTOR",					/* T.RSTR    Overlay-Load a Subsystem               25   */
  3    40      "SPAWN",					/* T.SPWN    Pass File to Batch Processor           26   */
  3    41      "TAPEIN",					/* T.TPIN    Start Paper Tape Input                 27   */
  3    42      "CALLSS",					/* T.CLSS    Internal Call to Another Subsystem     30   */
  3    43      "USERID",					/* T.USID    Pass USERID and Priority */
  3    44 						/*   to Executive                           31 */
  3    45      "TERM",					/* T.TERM    Clean Up UST After User Termination    32 */
  3    46      "PASUST",					/* T.PUST    Pass UST to Subsystem                  33   */
  3    47      "MORLNK",					/* T.MLNK    Add Links to Temporary File            34   */
  3    48      "NEWUSR",					/* T.NEWU    Log-on New User Without Disconnect     35 */
  3    49      "FILACT",					/* T.FLAC    Permanent File Activities              36   */
  3    50      "SETLNO",					/* T.SETL    Set Line Number/Increment in UST       37   */
  3    51      "SYSRET",					/* T.SRET    Return to System                       40   */
  3    52      "STPSYS",					/* T.STPS    Stop Execution of Master Subsystem     41   */
  3    53      "STATUS",					/* T.STUS    Check I/O Status (not implemented)     42 */
  3    54      "DRLDSC",					/* T.DISC    Disconnect Terminal                    43   */
  3    55      "PASDES",					/* T.DESC    Pass AFT File Names and Descriptions   44   */
  3    56      "JSTS",					/* T.JSTS    Obtain Job Status                      45   */
  3    57      "CGROUT",					/* T.ROUT    Process Line Switch                    46   */
  3    58      "PART",					/* T.PART    Partial Release of Temporary File      47   */
  3    59      "GROW",					/* T.GROW    Grow a Permanent or Temporary File     50   */
  3    60      "ABTJOB",					/* T.ABTJ    Abort Batch Job                        51   */
  3    61      "CONSOL",					/* T.CONS    Talk to System Console                 52   */
  3    62      "SWITCH",					/* T.SWIT    Switch Temporary File Names            53   */
  3    63      "DRLIMT",					/* T.LIMT    Store Processor Time Limit             54   */
  3    64      "JOUT",					/* T.JOUT    Batch Output Request                   55 */
  3    65      "KOTNOW",					/* T.OUTN    Keyboard Output from Unfilled Buffer   56   */
  3    66      "OBJTIM",					/* T.OBJT    Processor Time and Memory Size Limit   57   */
  3    67      "PASFLR",					/* T.PASF    Pass File to Remote Batch Processor    60   */
  3    68      "STOPPT",					/* T.SPPT    Stop Paper Tape Input                  61   */
  3    69      "DRLSAV",					/* T.SAVE    Save Program on Permanent File         62   */
  3    70      "TASK",					/* T.TASK    Spawn A Special Batch Activity         63   */
  3    71      "PSEUDO",					/* T.SUDO    Simulated Keyboard Input               64   */
  3    72      "PRGDES",					/* T.PDES    Pass Program Descriptor to Subsystem   65   */
  3    73      "GWAKE",					/* T.WAKE    Wake Me Later                          66   */
  3    74      "IDS",					/* T.IDS	no longer supported			67  */
  3    75      "ATTRI",					/* T.ATRB    Pick up User's Attributes               70  */
  3    76      "T.STAT",					/* T.STAT    Write Statistical Collection File      71   */
  3    77      "T.GOTO",					/* T.GOTO    Call from One Subsystem to Another     72   */
  3    78      "T.CMOV",					/* T.CMOV    Examine Areas of Memory                73 */
  3    79      "T.LINL",					/* T.LINL    Change Terminal Input Line Length      74   */
  3    80      "T.SYOT",					/* T.SYOT    Pass Data File to Backdoor SYSOUT      75   */
  3    81      "T.CONN",					/* T.CONN    Activate a Disconnected User           76 */
  3    82      "T.CFIO",					/* T.CFIO    Command File and Deferred */
  3    83 						/* Processing Support                     77   */
  3    84      "T.EXEC",					/* T.EXEC    Execute Code on behalf of the */
  3    85 						/* Executive 100 */
  3    86      "T.RSCC",					/* T.RSCC    Read System Controller Clock          101   */
  3    87      "T.MAIL",					/* T.MAIL   Mail Message Sent                     102   */
  3    88      "T.ERR",					/* T.ERR    Error Detected                        103   */
  3    89      "T.PAGE",	/* T.PAGE    Set page characteristics  104 */
  3    90      "T.FAST",	/* T.FAST    Error for fast derail processing  105 */
  3    91      "T.MODS",	/* T.MODS    Enable hex mode   106 */
  3    92      "T.MODR"	/* T.MODR    Disable hex mode   107 */
  3    93      );
  3    94 
  3    95 /*   END INCLUDE FILE gtss_drl_names.incl.pl1 */
      284 
      285 
  4     1 /* BEGIN INCLUDE FILE gtss_pnterr.incl.pl1 */
  4     2 /*
  4     3*  Created: (Grimes SMP)  04/15/78 0933.2 mst Sat 
  4     4*   Change: Dave Ward	06/08/78 made attributes constant.
  4     5*   Change: Dave Ward	08/17/81 made lengths same as constans.
  4     6*   Change: Ron Barstad  83-03-29  fixed err 53, add missing err 56
  4     7*   Change: Ron Barstad  84-02-27  changed back to all same length because of based array in gtss_abort_subsystem_
  4     8**/
  4     9 dcl 1 gtss_pnterr static int options (constant),
  4    10     2 err1   char(50) init("001-INCORRECT PRIMITIVE"),
  4    11     2 err2   char(50) init("002-(^6o)INVALID FILE I/O COMMAND"),
  4    12     2 err3   char(50) init("003-(^6o)INVALID DCW"),
  4    13     2 err4   char(50) init("004-(^6o)INVALID DRL ARGUMENT"),
  4    14     2 err5   char(50) init("005-(^6o)INVALID DRL CODE"),
  4    15     2 err6   char(50) init("006-LEVEL OF CONTROL TOO DEEP"),
  4    16     2 err7   char(50) init("007-BAP PROG. DESC."),
  4    17     2 err8   char(50) init("008-LOOP IN PRIMITIVES"),
  4    18     2 err9   char(50) init("009-SYSTEM UNKNOWN"),
  4    19     2 err10  char(50) init("010-PROGRAM TOO LARGE TO SWAP"),
  4    20     2 err11  char(50) init("011-(^6o)INCORRECT CORE FILE USAGE"),
  4    21     2 err12  char(50) init("012-(^6o)PRIVILEGED I/O ATTEMPTED"),
  4    22     2 err13  char(50) init("013-(^6o)DRL USERID NOT PERMITTED"),
  4    23     2 err14  char(50) init("(^6o)ILLEGAL DRL RELMEM REQUEST"),
  4    24     2 err15  char(50) init("015-(^6o)CANNOT RESET USER ID"),
  4    25     2 err16  char(50) init("016-(^6o)OVERFLOW FAULT"),
  4    26     2 err17  char(50) init("017-(^6o)ILLEGAL OP CODE"),
  4    27     2 err18  char(50) init("018-(^6o)MEMORY FAULT"),
  4    28     2 err19  char(50) init("019-(^6o)FAULT TAG FAULT"),
  4    29     2 err20  char(50) init("020-(^6o)DIVIDE CHECK FAULT"),
  4    30     2 err21  char(50) init("021-(^6o)BAD STATUS - SWAP OUT"),
  4    31     2 err22  char(50) init("022-(^6o)BAD STATUS - SWAP IN"),
  4    32     2 err23  char(50) init("023-(^6o)BAD STATUS - LOAD"),
  4    33     2 err24  char(50) init("(^6o)TALK PERMISSION NOT GRANTED"),
  4    34     2 err25  char(50) init("(^6o)WRITE ATTEMPTED ON READ-ONLY FILE - ^8a"),
  4    35     2 err26  char(50) init("(^6o)READ ATTEMPTED ON EXECUTE-ONLY FILE - ^8a"),
  4    36     2 err27  char(50) init("024-(^6o)MME FAULT"),
  4    37     2 err28  char(50) init("028-(^6o)REWIND ATTEMPTED FOR RANDOM FILE - ^8a"),
  4    38     2 err29  char(50) init("029-ILLEGAL SYSTEM SELECTION"),
  4    39     2 err30  char(50) init("134-(^6o)INVALID DRL FILACT FUNCTION #^i"),
  4    40     2 err31  char(50) init("135-(^6o)PRIVILEGED DRL FILACT REQUEST"),
  4    41     2 err32  char(50) init("138-(^6o)NO TAP* FILE FOR DRL TAPEIN"),
  4    42     2 err33  char(50) init("139-ERROR IN WRITING TAP* FILE"),
  4    43     2 err34  char(50) init("(^6o)DRL ABORT - CANNOT WRITE ABRT FILE"),
  4    44     2 err35  char(50) init("(^6o)DRL ABORT - ABRT FILE WRITTEN"),
  4    45     2 err36  char(50) init("NOT ENOUGH CORE TO RUN JOB"),
  4    46     2 err37  char(50) init("SORRY-OUT OF SWAP SPACE. TRY AGAIN."),
  4    47     2 err38  char(50) init("(^6o)FILE ADDRESS ERROR"),
  4    48     2 err39  char(50) init("(^6o)DRL ABORT - ABRT FILE I/O ERROR"),
  4    49     2 err40  char(50) init("(^6o)DRL ABORT - ABRT FILE TOO SMALL"),
  4    50     2 err41  char(50) init("(^6o)BAD STATUS FOR DRL SAVE/RESTOR - ^8a"),
  4    51     2 err42  char(50) init("(^6o)H* FILE NOT IN AFT - ^8a"),
  4    52     2 err43  char(50) init("064-EXECUTE TIME LIMIT EXCEEDED"),
  4    53     2 err44  char(50) init("025-(^6o)LOCKUP FAULT"),
  4    54     2 err45  char(50) init("065-OBJECT PROGRAM SIZE LIMIT EXCEEDED"),
  4    55     2 err46  char(50) init("(^6o)INCORRECT ENTRY TO DRL TASK"),
  4    56     2 err47  char(50) init("(^6o)H* PROGRAM NAME UNDEFINED - ^8a"),
  4    57     2 err48  char(50) init("(^6o)H* FILE CATALOG FULL - ^8a"),
  4    58     2 err49  char(50) init("(^6o)TALLY OR CHARACTER COUNT INCORRECT"),
  4    59     2 err50  char(50) init("(^6o)BAD DRL SAVE DATA LOC"),
  4    60     2 err51  char(50) init("(^6o)H* FILE NOT INITITALIZED - ^8a"),
  4    61     2 err52  char(50) init("(^6o)H* FILE MUST BE RANDOM - ^8a"),
  4    62     2 err53  char(50) init("026-(^6o)OP-NOT-COMPLETE FAULT"),
  4    63     2 err54  char(50) init("(^6o)H* FILE PROGRAM NAME REQUIRED - ^8a"),
  4    64     2 err55  char(50) init("027-(^6o)COMMAND FAULT"),
  4    65     2 err56  char(50) init("(^6o)LINKED FILE I/O CANNOT SPAN >63 LLINKS - ^8a"),
  4    66     2 err57  char(50) init("UNASSIGNED"),
  4    67     2 err58  char(50) init("(^6o)INVALID TIME FOR DRL GWAKE"),
  4    68     2 err59  char(50) init("UNASSIGNED"),
  4    69     2 err60  char(50) init("(^6o)INVALID SNUMB FOR DRL JOUT"),
  4    70     2 err61  char(50) init("(^6o)PRIVILEGED DRL"),
  4    71     2 err62  char(50) init("(^6o)INVALID DRL JOUT FUNCTION"),
  4    72     2 err63  char(50) init("MEMORY PARITY ERROR"),
  4    73     2 err64  char(50) init("SY** I/O ERROR"),
  4    74 /* The following error messages are artifacts of gtss and are not found in TSS */
  4    75     2 err100 char(50) init("DRL ADDMEM ERROR at (^6o)"),
  4    76     2 err101 char(50) init("DRL RELMEM ERROR TRUNCATE SEGMENT at (^6o)"),
  4    77     2 err102 char(50) init("DRL RELMEM ERROR SET MAX SEGMENT LENGTH"),
  4    78     2 err103 char(50) init("UNIMPLEMENTED DRL FILACT FUNCTION (^i)"),
  4    79     2 err999 char(50) init("dummy");
  4    80 
  4    81 /*   END INCLUDE FILE gtss_pnterr.incl.pl1 */
      286 
      287 
  5     1 /* BEGIN INCLUDE FILE gtss_ext_.incl.pl1 */
  5     2 /*
  5     3*  Created: (Wardd Multics)  05/20/78 1307.6 mst Sat 
  5     4*  Modified: Ward            1981     add suspended_process dcl
  5     5*  Modified: Ron Barstad  83-07-21  Fixed level number on mcfc to 3
  5     6*  Modified: Ron Barstad  83-07-25  Fixed derail range in statistics to 4js3 number
  5     7**/
  5     8 dcl  gtss_ext_$aem                   fixed bin static ext	/* >0 Print "additional" error information. */;
  5     9 dcl  gtss_ext_$bad_drl_rtrn          static ext label	/* Default for drl_rtrn. */;
  5    10 dcl  gtss_ext_$db                    (72)bit(1)unal static ext;
  5    11 dcl  gtss_ext_$deferred_catalogs_ptr ptr ext;
  5    12 dcl  gtss_ext_$dispose_of_drl        static ext label	/* quit handlers for some derails use this label to abort */;
  5    13 dcl  gtss_ext_$drl_rtrn              (4)static ext label	/* where to return at subsystem end */;
  5    14 dcl  gtss_ext_$drm_path              char(168)static ext	/* gtss_expand_pathname_stores drm_path */;
  5    15 dcl  gtss_ext_$drun_jid              char (5) static ext	/* valid only for DRUN executing under absentee */;
  5    16 dcl  gtss_ext_$event_channel         fixed bin (71) static ext	/* used for DABT signals */;
  5    17 dcl  gtss_ext_$finished              static ext label	/* Return to gtss for normal conclusion. */;
  5    18 dcl  gtss_ext_$gdb_name              char(8)ext	/* Name H* module to debug. */;
  5    19 dcl  gtss_ext_$get_line              entry(ptr,ptr,fixed bin(21),fixed bin(21),fixed bin(35))variable ext /* Build mode input procedure. */;
  5    20 dcl  gtss_ext_$gtss_slave_area_seg   (4) ext static ptr	/* pointer to gtss slave area segment */;
  5    21 dcl  gtss_ext_$hcs_work_area_ptr     ptr ext static		/* Temp seg for acl lists. */;
  5    22 dcl  gtss_ext_$homedir               char (64) static ext /* user's home dir */;
  5    23 dcl  gtss_ext_$last_k_was_out        bit (1)aligned ext static	/* "1"b => last tty output was output. */;
  5    24 dcl  gtss_ext_$pdir                  char (168) varying ext static	/* pathname of process directory */;
  5    25 dcl  gtss_ext_$popup_from_pi         static ext label	/* transfer to this label after pi simulates popup primitive */;
  5    26 dcl  gtss_ext_$process_type          fixed bin (17) static ext;
  5    27 dcl  gtss_ext_$put_chars             entry(ptr,ptr,fixed bin(24),fixed bin(35)) variable ext	/* Terminal output procedure. */;
  5    28 dcl  gtss_ext_$restart_from_pi       static ext label	/* transfer to this label after pi restores machine conditions */;
  5    29 dcl  gtss_ext_$restart_seg_ptr       ptr static ext	/* points to DRUN restart file when exec under absentee */;
  5    30 dcl  gtss_ext_$sig_ptr               ext static ptr	/* saved ptr to signal_ */;
  5    31 dcl  gtss_ext_$stack_level_          fixed bin ext static;
  5    32 dcl  gtss_ext_$suspended_process     bit(1) ext static;
  5    33 dcl  gtss_ext_$SYstarstar_file_no    fixed bin (24) static ext;
  5    34 dcl  gtss_ext_$user_id               char (26)var ext;
  5    35 dcl  gtss_ext_$work_area_ptr         ptr ext;
  5    36 
  5    37 dcl  1 gtss_ext_$CFP_bits aligned static external
  5    38      , 3 no_input_yet bit (1) unaligned         /* used in gtss_CFP_input_, gtss_read_starCFP_ */
  5    39      , 3 rtn_bits bit (4) unaligned             /* used in gtss_CFP_input_, gtss_CFP_output_ */
  5    40      , 3 cpos_called bit (1) unaligned          /* used in gtss_CFP_input_, gtss_drl_t_cfio_, gtss_abandon_CFP_ */
  5    41      , 3 cout_called bit (1) unaligned          /* used in gtss_read_starCFP_, gtss_abandon_CFP_ */
  5    42      , 3 build_mode bit (1) unaligned	        /* used in gtss_build_, gtss_dsd_process_ */
  5    43      ;
  5    44 
  5    45 dcl 1 gtss_ext_$com_reg aligned static ext,
  5    46        3 tsdmx,
  5    47          4 dst fixed bin (18) unsigned unaligned,
  5    48          4 dit fixed bin (18) unsigned unaligned,
  5    49        3 tsdpt fixed bin (36) unsigned unaligned,
  5    50        3 tsddt fixed bin (36) unsigned unaligned,
  5    51        3 tsdid bit (72) unaligned,
  5    52        3 tsdsd bit (36) unaligned,
  5    53        3 tsdst fixed bin (36) unsigned unaligned,
  5    54        3 tsdjb fixed bin (35) unaligned,
  5    55        3 tsdgt,
  5    56          4 ust_loc fixed bin (18) unsigned unaligned,
  5    57          4 gating_ctl fixed bin (18) unsigned unaligned,
  5    58        3 tcdfr bit (36) unaligned;
  5    59 
  5    60 dcl 1 gtss_ext_$flags aligned static ext
  5    61      , 3 dispose_of_drl_on_pi	bit (01) unal	/* 1 => drl that should be aborted after quit-pi sequence */
  5    62      , 3 drl_in_progress	bit (01) unal	/* 1 => drl handler executing; 0 => gcos code executing */
  5    63      , 3 popup_from_pi	bit (01) unal	/* 1 => derail processor will simulate Gcos break instead of returning */
  5    64      , 3 unfinished_drl	bit (01) unal	/* 1 => subsystem is handling breaks and quit was raised during a drl */
  5    65      , 3 ss_time_limit_set	bit (01) unal	/* 1 => exec time limit set for subsystem */
  5    66      , 3 timer_ranout	bit (01) unal	/* 1 => user is executing timer runout code */
  5    67      , 3 gtss_com_err_sw      bit (01) unal       /* 1 => stop com_err_ string from going to terminal */   
  5    68      , 3 available		bit (65) unal
  5    69      ;
  5    70 
  5    71 
  5    72 dcl 1 gtss_ext_$statistics aligned static ext,		/* Derail usage statistics */
  5    73       3 total_time (-10:71)fixed bin (71),
  5    74       3 count (-10:71)fixed bin (17);
  5    75 
  5    76 /* 	Declaration of Available File Table
  5    77*   */
  5    78 dcl 1 gtss_ext_$aft aligned ext,			/* aft structure */
  5    79 
  5    80       3 start_list (0:102) fixed bin (24),		/* >0 => 1st aft_entry row to start of next entry chain. */
  5    81 
  5    82       3 aft_entry (20),
  5    83         4 altname char (8),				/* altname name for attaching this file */
  5    84         4 next_entry fixed bin (24),			/* Next aft_entry in hash chain. */
  5    85         4 previous_add fixed bin (24),			/* Previously added entry. */
  5    86         4 next_add fixed bin (24),			/* Entry added after this one. */
  5    87         4 used bit (1) unal,				/* "1"b => aft_entry contains AFT value. */
  5    88         4 forced bit(1) unal,				/* "1"b => gtss_verify_access_ forced access on this file. */
  5    89 
  5    90       3 free_space fixed bin (24),			/* Index of start of free space list for aft entries. */
  5    91       3 first_added fixed bin (24),			/* >0  => start of chain in add order. */
  5    92       3 last_added fixed bin (24)			/* >0 => end of chain in added order. */;
  5    93 
  5    94 dcl  gtss_ext_$ppt                   ptr ext /*  switch name for tapein drl */;
  5    95 /**	Data structure to provide access to installed
  5    96*   subsystems fast library load.
  5    97*   **/
  5    98 dcl 1 gtss_ext_$fast_lib aligned ext
  5    99      , 3 fast_lib_fcb ptr				/* Pointer to msf fcb.	*/
  5   100      , 3 fast_lib_ncp fixed bin (24)			/* Number of components. */
  5   101      , 3 comp_ptr (0:9)ptr				/* Pointer to component. */
  5   102      , 3 comp_wds (0:9)fixed bin (24)			/* Component length (words). */
  5   103      ;
  5   104 
  5   105 /* Pointers to segments to regulate multipler
  5   106*   callers to files. Same segments are used to regulate
  5   107*   all simulator callers.
  5   108**/
  5   109 dcl 1 gtss_ext_$mcfc	aligned ext,
  5   110       3 multics_lock_id	bit(36),
  5   111       3 wait_time		fixed bin,
  5   112       3 files_ptr		ptr,
  5   113       3 names_ptr		ptr,
  5   114       3 callers_ptr		(0:3)ptr
  5   115 ;
  5   116 
  5   117 /*   END INCLUDE FILE gtss_ext_.incl.pl1 */
      288 
      289 
  6     1 /*  */
  6     2 /* BEGIN INCLUDE FILE  mc.incl.pl1   Created Dec 72 for 6180 - WSS. */
  6     3 /* Modified 06/07/76 by Greenberg for mc.resignal */
  6     4 /* Modified 07/07/76 by Morris for fault register data */
  6     5 /* Modified 08/28/80 by J. A. Bush for the DPS8/70M CVPU */
  6     6 /* Modified '82 to make values constant */
  6     7 
  6     8 /* words 0-15 pointer registers */
  6     9 
  6    10 dcl  mcp ptr;
  6    11 
  6    12 dcl 1 mc based (mcp) aligned,
  6    13     2 prs (0:7) ptr,				/* POINTER  REGISTERS */
  6    14    (2 regs,					/* registers */
  6    15       3 x (0:7) bit (18),				/* index registers */
  6    16       3 a bit (36),					/* accumulator */
  6    17       3 q bit (36),					/* q-register */
  6    18       3 e bit (8),					/* exponent */
  6    19       3 pad1 bit (28),
  6    20       3 t bit (27),					/* timer register */
  6    21       3 pad2 bit (6),
  6    22       3 ralr bit (3),				/* ring alarm register */
  6    23 
  6    24     2 scu (0:7) bit (36),
  6    25 
  6    26     2 mask bit (72),				/* mem controller mask at time of fault */
  6    27     2 ips_temp bit (36),				/* Temporary storage for IPS info */
  6    28     2 errcode fixed bin (35),				/* fault handler's error code */
  6    29     2 fim_temp,
  6    30       3 unique_index bit (18) unal,			/* unique index for restarting faults */
  6    31       3 resignal bit (1) unal,			/* recompute signal name with fcode below */
  6    32       3 fcode bit (17) unal,				/* fault code used as index to FIM table and SCT */
  6    33     2 fault_reg bit (36),				/* fault register */
  6    34     2 pad2 bit (1),
  6    35     2 cpu_type fixed bin (2) unsigned,			/* L68 = 0, DPS8/70M = 1 */
  6    36     2 ext_fault_reg bit (15),				/* extended fault reg for DPS8/70M CPU */
  6    37     2 fault_time bit (54),				/* time of fault */
  6    38 
  6    39     2 eis_info (0:7) bit (36)) unaligned;
  6    40 
  6    41 
  6    42 dcl (apx fixed bin init (0),
  6    43      abx fixed bin init (1),
  6    44      bpx fixed bin init (2),
  6    45      bbx fixed bin init (3),
  6    46      lpx fixed bin init (4),
  6    47      lbx fixed bin init (5),
  6    48      spx fixed bin init (6),
  6    49      sbx fixed bin init (7)) internal static options (constant);
  6    50 
  6    51 
  6    52 
  6    53 
  6    54 dcl  scup ptr;
  6    55 
  6    56 dcl 1 scu based (scup) aligned,			/* SCU DATA */
  6    57 
  6    58 
  6    59 /*	WORD (0)		*/
  6    60 
  6    61    (2 ppr,					/* PROCEDURE POINTER REGISTER */
  6    62       3 prr bit (3),				/* procedure ring register */
  6    63       3 psr bit (15),				/* procedure segment register */
  6    64       3 p bit (1),					/* procedure privileged bit */
  6    65 
  6    66     2 apu,					/* APPENDING UNIT STATUS */
  6    67       3 xsf bit (1),				/* ext seg flag - IT modification */
  6    68       3 sdwm bit (1),				/* match in SDW Ass. Mem. */
  6    69       3 sd_on bit (1),				/* SDW Ass. Mem.  ON */
  6    70       3 ptwm bit (1),				/* match in PTW Ass. Mem. */
  6    71       3 pt_on bit (1),				/* PTW Ass. Mem.  ON */
  6    72       3 pi_ap bit (1),				/* Instr Fetch or Append cycle */
  6    73       3 dsptw bit (1),				/* Fetch of DSPTW */
  6    74       3 sdwnp bit (1),				/* Fetch of SDW non paged */
  6    75       3 sdwp bit (1),				/* Fetch of SDW paged */
  6    76       3 ptw bit (1),				/* Fetch of PTW */
  6    77       3 ptw2 bit (1),				/* Fetch of pre-paged PTW */
  6    78       3 fap bit (1),				/* Fetch of final address paged */
  6    79       3 fanp bit (1),				/* Fetch of final address non-paged */
  6    80       3 fabs bit (1),				/* Fetch of final address absolute */
  6    81 
  6    82     2 fault_cntr bit (3),				/* number of retrys of EIS instructions */
  6    83 
  6    84 
  6    85 /*	WORD (1)		*/
  6    86 
  6    87     2 fd,						/* FAULT  DATA */
  6    88       3 iro bit (1),				/* illegal ring order */
  6    89       3 oeb bit (1),				/* out of execute bracket */
  6    90       3 e_off bit (1),				/* no execute */
  6    91       3 orb bit (1),				/* out of read bracket */
  6    92       3 r_off bit (1),				/* no read */
  6    93       3 owb bit (1),				/* out of write bracket */
  6    94       3 w_off bit (1),				/* no write */
  6    95       3 no_ga bit (1),				/* not a gate */
  6    96       3 ocb bit (1),				/* out of call bracket */
  6    97       3 ocall bit (1),				/* outward call */
  6    98       3 boc bit (1),				/* bad outward call */
  6    99       3 inret bit (1),				/* inward return */
  6   100       3 crt bit (1),				/* cross ring transfer */
  6   101       3 ralr bit (1),				/* ring alarm register */
  6   102       3 am_er bit (1),				/* associative memory fault */
  6   103       3 oosb bit (1),				/* out of segment bounds */
  6   104       3 paru bit (1),				/* processor parity upper */
  6   105       3 parl bit (1),				/* processor parity lower */
  6   106       3 onc_1 bit (1),				/* op not complete type 1 */
  6   107       3 onc_2 bit (1),				/* op not complete type 2 */
  6   108 
  6   109     2 port_stat,					/* PORT  STATUS */
  6   110       3 ial bit (4),				/* illegal action lines */
  6   111       3 iac bit (3),				/* illegal action channel */
  6   112       3 con_chan bit (3),				/* connect channel */
  6   113 
  6   114     2 fi_num bit (5),				/* (fault/interrupt)  number */
  6   115     2 fi_flag bit (1),				/*  1 => fault,  0 => interrupt  */
  6   116 
  6   117 
  6   118 /*	WORD (2)		*/
  6   119 
  6   120     2 tpr,					/* TEMPORARY POINTER REGISTER */
  6   121       3 trr bit (3),				/* temporary ring register */
  6   122       3 tsr bit (15),				/* temporary segment register */
  6   123 
  6   124     2 pad2 bit (9),
  6   125 
  6   126     2 cpu_no bit (3),				/* CPU number */
  6   127 
  6   128     2 delta bit (6),				/* tally modification DELTA */
  6   129 
  6   130 
  6   131 /*	WORD (3)		*/
  6   132 
  6   133     2 word3 bit (18),
  6   134 
  6   135     2 tsr_stat,					/* TSR STATUS for 1,2,&3 word instructions */
  6   136       3 tsna,					/* Word 1 status */
  6   137         4 prn bit (3),				/* Word 1  PR  number */
  6   138         4 prv bit (1),				/* Word 1  PR  valid bit */
  6   139       3 tsnb,					/* Word 2  status */
  6   140         4 prn bit (3),				/* Word 2  PR  number */
  6   141         4 prv bit (1),				/* Word 2  PR  valid bit */
  6   142       3 tsnc,					/* Word 3  status */
  6   143         4 prn bit (3),				/* Word 3  PR  number */
  6   144         4 prv bit (1),				/* Word 3  PR  valid bit */
  6   145 
  6   146     2 tpr_tbr bit (6),				/* TPR.TBR  field */
  6   147 
  6   148 
  6   149 /* 	WORD (4)		*/
  6   150 
  6   151     2 ilc bit (18),					/* INSTRUCTION  COUNTER */
  6   152 
  6   153     2 ir,						/* INDICATOR  REGISTERS */
  6   154       3 zero bit (1),				/* zero indicator */
  6   155       3 neg bit (1),				/* negative indicator */
  6   156       3 carry bit (1),				/* carryry indicator */
  6   157       3 ovfl bit (1),				/* overflow indicator */
  6   158       3 eovf bit (1),				/* eponent overflow */
  6   159       3 eufl bit (1),				/* exponent underflow */
  6   160       3 oflm bit (1),				/* overflow mask */
  6   161       3 tro bit (1),				/* tally runout */
  6   162       3 par bit (1),				/* parity error */
  6   163       3 parm bit (1),				/* parity mask */
  6   164       3 bm bit (1),					/* ^bar mode */
  6   165       3 tru bit (1),				/* truncation mode */
  6   166       3 mif bit (1),				/* multi-word instruction mode */
  6   167       3 abs bit (1),				/* absolute mode */
  6   168       3 hex bit (1),				/* hexadecimal exponent mode */
  6   169       3 pad bit (3),
  6   170 
  6   171 
  6   172 /*	WORD (5)		*/
  6   173 
  6   174     2 ca bit (18),					/* COMPUTED  ADDRESS */
  6   175 
  6   176     2 cu,						/* CONTROL UNIT STATUS */
  6   177       3 rf bit (1),					/* on first cycle of repeat instr */
  6   178       3 rpt bit (1),				/* repeat instruction */
  6   179       3 rd bit (1),					/* repeat double instruction */
  6   180       3 rl bit (1),					/* repeat link instruciton */
  6   181       3 pot bit (1),				/* IT  modification */
  6   182       3 pon bit (1),				/* return type instruction */
  6   183       3 xde bit (1),				/* XDE from Even location */
  6   184       3 xdo bit (1),				/* XDE from Odd  location */
  6   185       3 poa bit (1),				/* operation preparation */
  6   186       3 rfi bit (1),				/* tells CPU to refetch instruction */
  6   187       3 its bit (1),				/* ITS modification */
  6   188       3 if bit (1),					/* fault occured during instruction fetch */
  6   189 
  6   190     2 cpu_tag bit (6)) unaligned,			/* computed tag field */
  6   191 
  6   192 
  6   193 /*	WORDS (6,7)	*/
  6   194 
  6   195     2 even_inst bit (36),				/* even instruction of faulting pair */
  6   196 
  6   197     2 odd_inst bit (36);				/* odd  instruction of faulting pair */
  6   198 
  6   199 
  6   200 
  6   201 
  6   202 
  6   203 
  6   204 /*	ALTERNATE   SCU  DECLARATION		*/
  6   205 
  6   206 
  6   207 dcl 1 scux based (scup) aligned,
  6   208 
  6   209    (2 pad0 bit (36),
  6   210 
  6   211     2 fd,						/* GROUP II  FAULT DATA */
  6   212       3 isn bit (1),				/* illegal segment number */
  6   213       3 ioc bit (1),				/* illegal op  code  */
  6   214       3 ia_am bit (1),				/* illegal address - modifier */
  6   215       3 isp bit (1),				/* illegal slave  procedure */
  6   216       3 ipr bit (1),				/* illegal procedure */
  6   217       3 nea bit (1),				/* non existent address */
  6   218       3 oobb bit (1),				/* out of bounds */
  6   219       3 pad bit (29),
  6   220 
  6   221     2 pad2 bit (36),
  6   222 
  6   223     2 pad3a bit (18),
  6   224 
  6   225     2 tsr_stat (0:2),				/* TSR  STATUS  as an  ARRAY */
  6   226       3 prn bit (3),				/* PR  number */
  6   227       3 prv bit (1),				/* PR  valid bit */
  6   228 
  6   229     2 pad3b bit (6)) unaligned,
  6   230 
  6   231     2 pad45 (0:1) bit (36),
  6   232 
  6   233     2 instr (0:1) bit (36);				/* Instruction ARRAY */
  6   234 
  6   235 
  6   236 
  6   237 /*  END INCLUDE FILE   mc.incl.pl1 */
      290 
      291 
  7     1 /* BEGIN INCLUDE FILE gtss_entry_dcls.incl.pl1 */
  7     2 /*
  7     3*  Created: (Wardd Multics)  06/30/78 1624.8 mst Fri 
  7     4*  Modified: Ron Barstad  84-02-24  Fixed wrong and obsolete entries
  7     5**/
  7     6 
  7     7 /**  gtss external entry variables.		**/
  7     8 dcl  com_err_                                   entry() options(variable);
  7     9 dcl  gtss_CFP_abort_                            entry options(variable);
  7    10 dcl  gtss_CFP_break_                            entry options(variable);
  7    11 dcl  gtss_CFP_input_                            entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  7    12 dcl  gtss_CFP_output_                           entry (ptr, ptr, fixed bin(21), fixed bin(35));
  7    13 dcl  gtss_abandon_CFP_                          entry options(variable);
  7    14 dcl  gtss_abort_dump_                           entry (fixed bin(18));
  7    15 dcl  gtss_abort_subsystem_                      entry options (variable);
  7    16 dcl  gtss_abort_subsystem_$not_imp              entry (ptr, fixed bin(24));
  7    17 dcl  gtss_abs_login_banner_		        entry() returns(char(*));
  7    18 dcl  gtss_abs_logout_banner_		        entry() returns(char(*));
  7    19 dcl  gtss_abs_$abs_equiv                        entry options(variable);
  7    20 dcl  gtss_abs_$cpu_runout		        entry (ptr, char(4));
  7    21 dcl  gtss_abs_$create_absin                     entry() returns(char(*));
  7    22 dcl  gtss_abs_$dabt_check		        entry (ptr, char(4));
  7    23 dcl  gtss_abs_$get_id                           entry (char(5)) returns(char(19));
  7    24 dcl  gtss_abs_$get_drm                          entry() returns(char(*));
  7    25 dcl  gtss_adjust_size_                          entry (ptr);
  7    26 dcl  gtss_aft_$add                              entry (char(8), fixed bin(24), fixed bin(35));
  7    27 dcl  gtss_aft_$delete                           entry (char(8), fixed bin(24), fixed bin(35));
  7    28 dcl  gtss_aft_$find                             entry (char(8), fixed bin(24), fixed bin(35));
  7    29 dcl  gtss_aft_$initialize                       entry (fixed bin(35));
  7    30 dcl  gtss_ascii_bcd_                            entry (ptr, fixed bin, ptr);
  7    31 dcl  gtss_attributes_mgr_$get                   entry (ptr, fixed bin(35));
  7    32 dcl  gtss_attributes_mgr_$set                   entry (ptr, fixed bin(35));
  7    33 dcl  gtss_bcd_ascii_                            entry (ptr, fixed bin(24), ptr);
  7    34 dcl  gtss_bcd_ascii_$lc                         entry (ptr, fixed bin(24), ptr);
  7    35 dcl  gtss_break_vector_                         entry ();
  7    36 dcl  gtss_break_vector_$drl_in_progress         entry() returns(bit(1));
  7    37 dcl  gtss_break_vector_$status                  entry() returns(bit(1));
  7    38 dcl  gtss_build_                                entry options(variable);
  7    39 dcl  gtss_com_err_                              entry options(variable);
  7    40 dcl  gtss_derail_processor_                     entry (ptr, char(*), ptr, ptr, bit(1) aligned) /* called at fault time instead of signal_ */;
  7    41 dcl  gtss_derail_processor_$set                 entry options(variable);
  7    42 dcl  gtss_dq_$catp                              entry (char (5), ptr, fixed bin (18) unsigned);
  7    43 dcl  gtss_dq_$create                            entry (bit(1));
  7    44 dcl  gtss_dq_$dibp                              entry (char(5), ptr);
  7    45 dcl  gtss_dq_$entries_info		        entry (ptr, fixed bin (18) unsigned, fixed bin (18) unsigned);
  7    46 dcl  gtss_dq_$hdrp                              entry (ptr);
  7    47 dcl  gtss_dq_$mod_js		        entry (char(5), fixed bin (6) unsigned, bit (1));
  7    48 dcl  gtss_dq_$open_exc		        entry (bit(1));
  7    49 dcl  gtss_dq_$open_gen		        entry (bit(1));
  7    50 dcl  gtss_drl_abort_                            entry (ptr, fixed bin);
  7    51 dcl  gtss_drl_addmem_                           entry (ptr, fixed bin);
  7    52 dcl  gtss_drl_callss_                           entry (ptr, fixed bin);
  7    53 dcl  gtss_drl_corfil_                           entry (ptr, fixed bin);
  7    54 dcl  gtss_drl_defil_                            entry (ptr, fixed bin);
  7    55 dcl  gtss_drl_defil_$subr                       entry (ptr, ptr, ptr);
  7    56 dcl  gtss_drl_dio_                              entry (ptr, fixed bin);
  7    57 dcl  gtss_drl_drlimt_                           entry (ptr, fixed bin);
  7    58 dcl  gtss_drl_drlsav_                           entry (ptr, fixed bin);
  7    59 dcl  gtss_drl_filact_                           entry (ptr, fixed bin);
  7    60 dcl  gtss_drl_filsp_                            entry (ptr, fixed bin);
  7    61 dcl  gtss_drl_grow_                             entry (ptr, fixed bin);
  7    62 dcl  gtss_drl_gwake_                            entry (ptr, fixed bin);
  7    63 dcl  gtss_drl_jsts_                             entry (ptr, fixed bin);
  7    64 dcl  gtss_drl_kin_                              entry (ptr, fixed bin);
  7    65 dcl  gtss_drl_kotnow_                           entry (ptr, fixed bin);
  7    66 dcl  gtss_drl_kotnow_$gtss_drl_kout_            entry (ptr, fixed bin);
  7    67 dcl  gtss_drl_koutn_                            entry (ptr, fixed bin);
  7    68 dcl  gtss_drl_morlnk_                           entry (ptr, fixed bin);
  7    69 dcl  gtss_drl_msub_                             entry (ptr, fixed bin);
  7    70 dcl  gtss_drl_objtim_                           entry (ptr, fixed bin);
  7    71 dcl  gtss_drl_part_                             entry (ptr, fixed bin);
  7    72 dcl  gtss_drl_pasaft_                           entry (ptr, fixed bin);
  7    73 dcl  gtss_drl_pasdes_                           entry (ptr, fixed bin);
  7    74 dcl  gtss_drl_pasust_                           entry (ptr, fixed bin);
  7    75 dcl  gtss_drl_pdio_                             entry (ptr, fixed bin);
  7    76 dcl  gtss_drl_prgdes_                           entry (ptr, fixed bin);
  7    77 dcl  gtss_drl_pseudo_                           entry (ptr, fixed bin);
  7    78 dcl  gtss_drl_relmem_                           entry (ptr, fixed bin);
  7    79 dcl  gtss_drl_restor_                           entry (ptr, fixed bin);
  7    80 dcl  gtss_drl_retfil_                           entry (ptr, fixed bin);
  7    81 dcl  gtss_drl_return_                           entry (ptr, fixed bin);
  7    82 dcl  gtss_drl_rew_                              entry (ptr, fixed bin);
  7    83 dcl  gtss_drl_rstswh_                           entry (ptr, fixed bin);
  7    84 dcl  gtss_drl_setlno_                           entry (ptr, fixed bin);
  7    85 dcl  gtss_drl_setswh_                           entry (ptr, fixed bin);
  7    86 dcl  gtss_drl_snumb_                            entry (ptr, fixed bin);
  7    87 dcl  gtss_drl_spawn_                            entry (ptr, fixed bin);
  7    88 dcl  gtss_drl_spawn_$gtss_drl_pasflr_           entry (ptr, fixed bin);
  7    89 dcl  gtss_drl_stoppt_                           entry (ptr, fixed bin);
  7    90 dcl  gtss_drl_switch_                           entry (ptr, fixed bin);
  7    91 dcl  gtss_drl_sysret_                           entry (ptr, fixed bin);
  7    92 dcl  gtss_drl_t_cfio_                           entry (ptr, fixed bin);
  7    93 dcl  gtss_drl_t_cmov_                           entry (ptr, fixed bin);
  7    94 dcl  gtss_drl_t_err_                            entry (ptr, fixed bin);
  7    95 dcl  gtss_drl_t_goto_                           entry (ptr, fixed bin);
  7    96 dcl  gtss_drl_t_linl_                           entry (ptr, fixed bin);
  7    97 dcl  gtss_drl_t_rscc_                           entry (ptr, fixed bin);
  7    98 dcl  gtss_drl_tapein_                           entry (ptr, fixed bin);
  7    99 dcl  gtss_drl_task_                             entry (ptr, fixed bin);
  7   100 dcl  gtss_drl_termtp_                           entry (ptr, fixed bin);
  7   101 dcl  gtss_drl_time_                             entry (ptr, fixed bin);
  7   102 dcl  gtss_drun_                                 entry (bit(1));
  7   103 dcl  gtss_dsd_lookup_                           entry (char(8) var) returns(fixed bin(24));
  7   104 dcl  gtss_dsd_process_                          entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  7   105 dcl  gtss_edit_dsd_                             entry (ptr, fixed bin(21)) returns(fixed bin(24));
  7   106 dcl  gtss_mcfc_empty                            entry (char(*) var);
  7   107 dcl  gtss_expand_pathname_                      entry (ptr, char(*), char(*), fixed bin(35));
  7   108 dcl  gtss_expand_pathname_$verify_umc           entry (ptr, char(*), char(*), bit(18), fixed bin(35));
  7   109 dcl  gtss_fault_processor_                      entry options(variable);
  7   110 dcl  gtss_find_cond_frame_		        entry (char(32) var) returns(ptr);
  7   111 dcl  gtss_fault_processor_$timer_runout         entry (ptr, char(*));
  7   112 dcl  gtss_filact_error_status_                  entry (fixed bin(35))returns(bit(12));
  7   113 dcl  gtss_filact_funct02_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  7   114 dcl  gtss_filact_funct03_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  7   115 dcl  gtss_filact_funct04_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  7   116 dcl  gtss_filact_funct05_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  7   117 dcl  gtss_filact_funct08_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  7   118 dcl  gtss_filact_funct10_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  7   119 dcl  gtss_filact_funct11_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  7   120 dcl  gtss_filact_funct14_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  7   121 dcl  gtss_filact_funct18_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  7   122 dcl  gtss_filact_funct19_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  7   123 dcl  gtss_filact_funct21_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  7   124 dcl  gtss_filact_funct22_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  7   125 dcl  gtss_mcfc_init_                            entry (char(*) var);
  7   126 dcl  gtss_interp_prim_                          entry options(variable);
  7   127 dcl  gtss_interp_prim_$callss                   entry (char(4), ptr);
  7   128 dcl  gtss_interp_prim_$sysret                   entry options(variable);
  7   129 dcl  gtss_interp_prim_$t_goto                   entry (char(4));
  7   130 dcl  gtss_ios_change_size_                      entry (fixed bin(24), fixed bin(24), bit(1), fixed bin(24), fixed bin(35));
  7   131 dcl  gtss_ios_close_                            entry (fixed bin(24), ptr, fixed bin(35));
  7   132 dcl  gtss_ios_exchange_names_                   entry (fixed bin(24), fixed bin(24), fixed bin(24), fixed bin(35));
  7   133 dcl  gtss_ios_initialize_                       entry options(variable);
  7   134 dcl  gtss_ios_io_                               entry (fixed bin(24), ptr, ptr, fixed bin(24), fixed bin(24), fixed bin(35));
  7   135 dcl  gtss_ios_open_                             entry (fixed bin(24), char(168), char(32), bit(6), bit(1), ptr, ptr, fixed bin(35));
  7   136 dcl  gtss_ios_position_                         entry (fixed bin(24), fixed bin(24), fixed bin(24), bit(6), ptr);
  7   137 dcl  gtss_mcfc_$delete		        entry (fixed bin(24), char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  7   138 dcl  gtss_mcfc_$open                            entry (char(*), char(*), bit(6), bit(36) aligned, ptr, fixed bin(35));
  7   139 dcl  gtss_mcfc_$close                           entry (char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  7   140 dcl  gtss_read_starCFP_                         entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  7   141 dcl  gtss_read_starCFP_$last_os                 entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  7   142 dcl  gtss_run_subsystem_                        entry (fixed bin(24));
  7   143 dcl  gtss_run_subsystem_$finish                 entry options(variable);
  7   144 dcl  gtss_run_subsystem_$restor                 entry (fixed bin(24), ptr);
  7   145 dcl  gtss_run_subsystem_$restor_perm            entry (fixed bin(24), ptr, fixed bin(18));
  7   146 dcl  gtss_set_slave_                            entry (fixed bin (24), ptr);
  7   147 dcl  gtss_set_slave_$load_bar                   entry (fixed bin (17));
  7   148 dcl  gtss_update_safe_store_                    entry (ptr);
  7   149 dcl  gtss_verify_access_		        entry (char(*), char(*), fixed bin(24), bit(6), bit(12) aligned);
  7   150 dcl  gtss_verify_access_$check_forced_access    entry (char(*), char(*), fixed bin(24));
  7   151 dcl  gtss_write_starCFP_                        entry (ptr, ptr, fixed bin(21), fixed bin(35));
  7   152 /*   END INCLUDE FILE gtss_entry_dcls.incl.pl1 */
      292 
      293 
  8     1 /* BEGIN INCLUDE FILE gse_ext_.incl.pl1 */
  8     2 /*
  8     3*  Created:  Kepner  78-12-01
  8     4**/
  8     5 
  8     6 dcl gse_ext_$drm_rule	fixed bin(24) ext;
  8     7 
  8     8 /* $drm_rule:
  8     9*   0 => rule not set
  8    10*   1 => umc_dir_mode
  8    11*   2 => working_dir_mode
  8    12*   3 => smc_dir_mode
  8    13**/
  8    14 
  8    15 dcl gse_ext_$gcos_debug_pathname       char(168)  /* pathname for the gcos debugger control file */ ext;
  8    16 dcl gse_ext_$smc_pathname              char(168) 	/* root directory used with smc_dir mapping rule */ ext;
  8    17 dcl gse_ext_$umc_name                  char(12) 	/* User Master Catalog name specified by user with gse command */ ext;
  8    18 dcl 1 gse_ext_$modes	aligned ext,
  8    19        3 ast		bit(01) unal, 	/* 1 => use asterisk as prompt character */
  8    20        3 drl		bit(01) unal, 	/* 1 => cause trace info on each derail to be printed */
  8    21        3 gdb		bit(01) unal, 	/* 1 => use gcos debugger (gdb) */
  8    22        3 mcmd		bit(01) unal, 	/* 1 => allow use of e request at GTSS command level */
  8    23        3 mquit		bit(01) unal, 	/* 1 => quit causes entry to new Multics command level */
  8    24        3 ss		bit(01) unal, 	/* 1 => cause trace info on each subsystem to be printed */
  8    25        3 fill		bit(30) unal; 
  8    26 
  8    27 /*   END INCLUDE FILE gse_ext_.incl.pl1 */
      294 
      295 
      296 end gtss_derail_processor_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/10/84  1042.9  gtss_derail_processor_.pl1        >spec>on>7105>gtss_derail_processor_.pl1
280          1    12/10/84  1029.8  gtss_spa.incl.pl1                 >spec>on>7105>gtss_spa.incl.pl1
282          2    09/09/83  1714.3  gtss_ust_ext_.incl.pl1            >ldd>include>gtss_ust_ext_.incl.pl1
284          3    09/09/83  1713.3  gtss_drl_names.incl.pl1           >ldd>include>gtss_drl_names.incl.pl1
286          4    12/10/84  1029.8  gtss_pnterr.incl.pl1              >spec>on>7105>gtss_pnterr.incl.pl1
288          5    09/09/83  1713.8  gtss_ext_.incl.pl1                >ldd>include>gtss_ext_.incl.pl1
290          6    12/15/83  1100.4  mc.incl.pl1                       >ldd>include>mc.incl.pl1
292          7    12/10/84  1029.7  gtss_entry_dcls.incl.pl1          >spec>on>7105>gtss_entry_dcls.incl.pl1
294          8    09/09/83  1713.4  gse_ext_.incl.pl1                 >ldd>include>gse_ext_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
DRL_NAME                        001537 constant        varying char(7)          initial array dcl 3-7 set ref 86*
addr                                                   builtin function         dcl 248 ref 56
baseno                                                 builtin function         dcl 249 ref 59
code                     73(18) 000526 external static fixed bin(17,0)          level 4 packed unaligned dcl 2-16 set ref 95*
continue                               parameter       bit(1)                   dcl 20 set ref 15 60* 64*
count                   244     000550 external static fixed bin(17,0)          array level 2 dcl 5-72 set ref 102* 102
cu                        5(18)        based           structure                level 2 packed unaligned dcl 6-56
cu_$ptr_call                    000520 constant        entry                    external dcl 250 ref 60
derail                                 based           structure                level 1 dcl 251
derail_ptr                      000100 automatic       pointer                  initial dcl 254 set ref 66* 67 254*
disposable_derail               002125 constant        bit(1)                   initial array unaligned dcl 271 ref 111
dispose_of_drl_on_pi            000546 external static bit(1)                   level 2 packed unaligned dcl 5-60 set ref 111* 143*
drl                       0(01) 000730 external static bit(1)                   level 2 packed unaligned dcl 8-18 ref 84
drl_handler                     000010 internal static entry variable           array dcl 256 set ref 72 72 116 118 162* 163* 164*
                                                                                  165* 166* 167* 168* 169* 170* 171* 172* 173* 174*
                                                                                  175* 176* 177* 178* 179* 180* 181* 182* 183* 184*
                                                                                  185* 186* 187* 188* 189* 190* 191* 192* 193* 194*
                                                                                  195* 196* 197* 198* 199* 200* 201* 202* 203* 204*
                                                                                  205* 206* 207* 208* 209* 210* 211* 212* 213* 214*
                                                                                  215* 216* 217* 218* 219* 220* 221* 222* 223* 224*
                                                                                  225* 226* 227* 228* 229* 230* 231* 232* 233* 234*
                                                                                  235* 236* 237* 238* 239* 240* 241* 242* 243*
drl_in_progress           0(01) 000546 external static bit(1)                   level 2 packed unaligned dcl 5-60 set ref 110* 144*
drl_numb                               based           fixed bin(17,0)          level 2 packed unaligned dcl 251 ref 67
drl_number                      000102 automatic       fixed bin(17,0)          dcl 255 set ref 67* 72 72 86 95 102 102 111 116 116
                                                                                  118 121 121
dummy1                                 parameter       pointer                  dcl 18 set ref 15 60*
dummy2                                 parameter       pointer                  dcl 19 set ref 15 60*
eis_info                 50            based           bit(36)                  array level 2 packed unaligned dcl 6-12 ref 93
err5                     62     000000 constant        char(50)                 initial level 2 packed unaligned dcl 4-9 set ref 73*
fault_name                             parameter       char                     unaligned dcl 17 set ref 15 60*
fixed                                                  builtin function         dcl 257 ref 59 59 73 73 86 86 132
gse_ext_$modes                  000730 external static structure                level 1 dcl 8-18
gseg                            000104 automatic       pointer                  initial dcl 258 set ref 57* 59 66 91 93 97 99 258*
gtss_abort_subsystem_           000552 constant        entry                    external dcl 7-15 ref 73
gtss_abort_subsystem_$not_imp   000554 constant        entry                    external dcl 7-16 ref 116 163 164 165 166 167 168
                                                                                  169 170 171 172 197 198 201 205 206 207 210 213
                                                                                  214 217 227 228 229 233 234 236 238 240 241 242
                                                                                  243
gtss_break_vector_              000556 constant        entry                    external dcl 7-35 ref 152
gtss_drl_abort_                 000560 constant        entry                    external dcl 7-50 ref 179
gtss_drl_addmem_                000562 constant        entry                    external dcl 7-51 ref 186
gtss_drl_callss_                000564 constant        entry                    external dcl 7-52 ref 196
gtss_drl_corfil_                000566 constant        entry                    external dcl 7-53 ref 187
gtss_drl_defil_                 000570 constant        entry                    external dcl 7-54 ref 178
gtss_drl_dio_                   000572 constant        entry                    external dcl 7-56 ref 173
gtss_drl_drlimt_                000574 constant        entry                    external dcl 7-57 ref 216
gtss_drl_drlsav_                000576 constant        entry                    external dcl 7-58 ref 222
gtss_drl_filact_                000600 constant        entry                    external dcl 7-59 ref 202
gtss_drl_filsp_                 000602 constant        entry                    external dcl 7-60 ref 183
gtss_drl_grow_                  000604 constant        entry                    external dcl 7-61 ref 212
gtss_drl_gwake_                 000606 constant        entry                    external dcl 7-62 ref 226
gtss_drl_jsts_                  000610 constant        entry                    external dcl 7-63 ref 209
gtss_drl_kin_                   000612 constant        entry                    external dcl 7-64 ref 176
gtss_drl_kotnow_                000614 constant        entry                    external dcl 7-65 ref 218
gtss_drl_kotnow_$gtss_drl_kout_ 000616 constant        entry                    external dcl 7-66 ref 174
gtss_drl_koutn_                 000620 constant        entry                    external dcl 7-67 ref 175
gtss_drl_morlnk_                000622 constant        entry                    external dcl 7-68 ref 200
gtss_drl_msub_                  000624 constant        entry                    external dcl 7-69 ref 162
gtss_drl_objtim_                000626 constant        entry                    external dcl 7-70 ref 219
gtss_drl_part_                  000630 constant        entry                    external dcl 7-71 ref 211
gtss_drl_pasaft_                000632 constant        entry                    external dcl 7-72 ref 190
gtss_drl_pasdes_                000634 constant        entry                    external dcl 7-73 ref 208
gtss_drl_pasust_                000636 constant        entry                    external dcl 7-74 ref 199
gtss_drl_pdio_                  000640 constant        entry                    external dcl 7-75 ref 192
gtss_drl_prgdes_                000642 constant        entry                    external dcl 7-76 ref 225
gtss_drl_pseudo_                000644 constant        entry                    external dcl 7-77 ref 224
gtss_drl_relmem_                000646 constant        entry                    external dcl 7-78 ref 185
gtss_drl_restor_                000650 constant        entry                    external dcl 7-79 ref 193
gtss_drl_retfil_                000652 constant        entry                    external dcl 7-80 ref 184
gtss_drl_return_                000654 constant        entry                    external dcl 7-81 ref 177
gtss_drl_rew_                   000656 constant        entry                    external dcl 7-82 ref 182
gtss_drl_rstswh_                000660 constant        entry                    external dcl 7-83 ref 181
gtss_drl_setlno_                000662 constant        entry                    external dcl 7-84 ref 203
gtss_drl_setswh_                000664 constant        entry                    external dcl 7-85 ref 180
gtss_drl_snumb_                 000666 constant        entry                    external dcl 7-86 ref 188
gtss_drl_spawn_                 000670 constant        entry                    external dcl 7-87 ref 194
gtss_drl_spawn_$gtss_drl_pasflr_
                                000672 constant        entry                    external dcl 7-88 ref 220
gtss_drl_stoppt_                000674 constant        entry                    external dcl 7-89 ref 221
gtss_drl_switch_                000676 constant        entry                    external dcl 7-90 ref 215
gtss_drl_sysret_                000700 constant        entry                    external dcl 7-91 ref 204
gtss_drl_t_cfio_                000702 constant        entry                    external dcl 7-92 ref 235
gtss_drl_t_cmov_                000704 constant        entry                    external dcl 7-93 ref 231
gtss_drl_t_err_                 000706 constant        entry                    external dcl 7-94 ref 239
gtss_drl_t_goto_                000710 constant        entry                    external dcl 7-95 ref 230
gtss_drl_t_linl_                000712 constant        entry                    external dcl 7-96 ref 232
gtss_drl_t_rscc_                000714 constant        entry                    external dcl 7-97 ref 237
gtss_drl_tapein_                000716 constant        entry                    external dcl 7-98 ref 195
gtss_drl_task_                  000720 constant        entry                    external dcl 7-99 ref 223
gtss_drl_termtp_                000722 constant        entry                    external dcl 7-100 ref 191
gtss_drl_time_                  000724 constant        entry                    external dcl 7-101 ref 189
gtss_ext_$bad_drl_rtrn          000530 external static label variable           dcl 5-9 ref 141 142
gtss_ext_$dispose_of_drl        000532 external static label variable           dcl 5-12 set ref 109* 141*
gtss_ext_$flags                 000546 external static structure                level 1 dcl 5-60
gtss_ext_$gtss_slave_area_seg   000534 external static pointer                  array dcl 5-20 ref 57
gtss_ext_$popup_from_pi         000536 external static label variable           dcl 5-25 ref 148
gtss_ext_$restart_from_pi       000540 external static label variable           dcl 5-28 set ref 142*
gtss_ext_$sig_ptr               000542 external static pointer                  dcl 5-30 set ref 60 60*
gtss_ext_$stack_level_          000544 external static fixed bin(17,0)          dcl 5-31 ref 57
gtss_ext_$statistics            000550 external static structure                level 1 dcl 5-72
gtss_pnterr                     000000 constant        structure                level 1 packed unaligned dcl 4-9
gtss_spa                               based           structure                level 1 dcl 1-9
gtss_update_safe_store_         000726 constant        entry                    external dcl 7-148 ref 137
gtss_ust                        000526 external static structure                level 2 dcl 2-16
gtss_ust_ext_$ust               000526 external static structure                level 1 dcl 2-16
hbound                                                 builtin function         dcl 259 ref 72
if                        5(29)        based           bit(1)                   level 3 packed unaligned dcl 6-56 set ref 79* 140*
ilc                      73     000526 external static bit(18)                  level 4 in structure "gtss_ust_ext_$ust" packed
                                                                                  unaligned dcl 2-16 in procedure
                                                                                  "gtss_derail_processor_" set ref 96*
ilc                      22            based           bit(18)                  level 3 in structure "gtss_spa" packed unaligned
                                                                                  dcl 1-9 in procedure "gtss_derail_processor_" set
                                                                                  ref 97*
ilc                       4            based           bit(18)                  level 2 in structure "scu" packed unaligned dcl 6-56
                                                                                  in procedure "gtss_derail_processor_" set ref 66
                                                                                  73 73 86 86 96 97 107 131 132 133*
increment                       000106 automatic       fixed bin(24,0)          dcl 260 set ref 101* 116* 118* 132* 132 133
initial_cpu_time                000110 automatic       fixed bin(71,0)          dcl 261 set ref 103* 121
ioa_                            000522 constant        entry                    external dcl 262 ref 86
ir                        4(18)        based           structure                level 2 in structure "scu" packed unaligned dcl 6-56
                                                                                  in procedure "gtss_derail_processor_" ref 99
ir                       22(18)        based           structure                level 3 in structure "gtss_spa" packed unaligned
                                                                                  dcl 1-9 in procedure "gtss_derail_processor_" set
                                                                                  ref 99*
lbound                                                 builtin function         dcl 263 ref 72
ldrl                     73     000526 external static structure                level 3 dcl 2-16
leisa                    50            based           bit(36)                  array level 2 dcl 1-9 set ref 93*
losti                    22            based           structure                level 2 packed unaligned dcl 1-9
lostr                    40            based           structure                level 2 packed unaligned dcl 1-9
mc                                     based           structure                level 1 dcl 6-12
mcp                             000122 automatic       pointer                  dcl 6-10 set ref 21* 56 60* 73* 91 93 118* 137*
mcpp                                   parameter       pointer                  dcl 16 ref 15 21
popup_from_pi             0(02) 000546 external static bit(1)                   level 2 packed unaligned dcl 5-60 set ref 145 146*
ppr                                    based           structure                level 2 packed unaligned dcl 6-56
psr                       0(03)        based           bit(15)                  level 3 packed unaligned dcl 6-56 ref 59
quit                            000112 stack reference condition                dcl 265 ref 85 87
regs                     20            based           structure                level 2 in structure "mc" packed unaligned dcl 6-12
                                                                                  in procedure "gtss_derail_processor_" ref 91
regs                     40            based           structure                level 3 in structure "gtss_spa" packed unaligned
                                                                                  dcl 1-9 in procedure "gtss_derail_processor_" set
                                                                                  ref 91*
rfi                       5(27)        based           bit(1)                   level 3 packed unaligned dcl 6-56 set ref 78* 139*
saved_ilc                       000120 automatic       bit(18)                  unaligned dcl 266 set ref 107* 131
scu                                    based           structure                level 1 dcl 6-56 in procedure
                                                                                  "gtss_derail_processor_"
scu                      30            based           bit(36)                  array level 2 in structure "mc" packed unaligned
                                                                                  dcl 6-12 in procedure "gtss_derail_processor_" set
                                                                                  ref 56
scup                            000124 automatic       pointer                  dcl 6-54 set ref 56* 59 66 73 73 78 79 86 86 96 97
                                                                                  99 107 131 132 133 139 140
substr                                                 builtin function         dcl 267 ref 133
total_time                      000550 external static fixed bin(71,0)          array level 2 dcl 5-72 set ref 121* 121
unfinished_drl            0(03) 000546 external static bit(1)                   level 2 packed unaligned dcl 5-60 set ref 147* 150
                                                                                  151*
unspec                                                 builtin function         dcl 268 ref 133
virtual_cpu_time_               000524 constant        entry                    external dcl 269 ref 103 121

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
abx                                    internal static fixed bin(17,0)          initial dcl 6-42
apx                                    internal static fixed bin(17,0)          initial dcl 6-42
bbx                                    internal static fixed bin(17,0)          initial dcl 6-42
bpx                                    internal static fixed bin(17,0)          initial dcl 6-42
com_err_                        000000 constant        entry                    external dcl 7-8
gse_ext_$drm_rule                      external static fixed bin(24,0)          dcl 8-6
gse_ext_$gcos_debug_pathname           external static char(168)                unaligned dcl 8-15
gse_ext_$smc_pathname                  external static char(168)                unaligned dcl 8-16
gse_ext_$umc_name                      external static char(12)                 unaligned dcl 8-17
gtss_CFP_abort_                 000000 constant        entry                    external dcl 7-9
gtss_CFP_break_                 000000 constant        entry                    external dcl 7-10
gtss_CFP_input_                 000000 constant        entry                    external dcl 7-11
gtss_CFP_output_                000000 constant        entry                    external dcl 7-12
gtss_abandon_CFP_               000000 constant        entry                    external dcl 7-13
gtss_abort_dump_                000000 constant        entry                    external dcl 7-14
gtss_abs_$abs_equiv             000000 constant        entry                    external dcl 7-19
gtss_abs_$cpu_runout            000000 constant        entry                    external dcl 7-20
gtss_abs_$create_absin          000000 constant        entry                    external dcl 7-21
gtss_abs_$dabt_check            000000 constant        entry                    external dcl 7-22
gtss_abs_$get_drm               000000 constant        entry                    external dcl 7-24
gtss_abs_$get_id                000000 constant        entry                    external dcl 7-23
gtss_abs_login_banner_          000000 constant        entry                    external dcl 7-17
gtss_abs_logout_banner_         000000 constant        entry                    external dcl 7-18
gtss_adjust_size_               000000 constant        entry                    external dcl 7-25
gtss_aft_$add                   000000 constant        entry                    external dcl 7-26
gtss_aft_$delete                000000 constant        entry                    external dcl 7-27
gtss_aft_$find                  000000 constant        entry                    external dcl 7-28
gtss_aft_$initialize            000000 constant        entry                    external dcl 7-29
gtss_ascii_bcd_                 000000 constant        entry                    external dcl 7-30
gtss_attributes_mgr_$get        000000 constant        entry                    external dcl 7-31
gtss_attributes_mgr_$set        000000 constant        entry                    external dcl 7-32
gtss_bcd_ascii_                 000000 constant        entry                    external dcl 7-33
gtss_bcd_ascii_$lc              000000 constant        entry                    external dcl 7-34
gtss_break_vector_$drl_in_progress
                                000000 constant        entry                    external dcl 7-36
gtss_break_vector_$status       000000 constant        entry                    external dcl 7-37
gtss_build_                     000000 constant        entry                    external dcl 7-38
gtss_com_err_                   000000 constant        entry                    external dcl 7-39
gtss_derail_processor_          000000 constant        entry                    external dcl 7-40
gtss_derail_processor_$set      000000 constant        entry                    external dcl 7-41
gtss_dq_$catp                   000000 constant        entry                    external dcl 7-42
gtss_dq_$create                 000000 constant        entry                    external dcl 7-43
gtss_dq_$dibp                   000000 constant        entry                    external dcl 7-44
gtss_dq_$entries_info           000000 constant        entry                    external dcl 7-45
gtss_dq_$hdrp                   000000 constant        entry                    external dcl 7-46
gtss_dq_$mod_js                 000000 constant        entry                    external dcl 7-47
gtss_dq_$open_exc               000000 constant        entry                    external dcl 7-48
gtss_dq_$open_gen               000000 constant        entry                    external dcl 7-49
gtss_drl_defil_$subr            000000 constant        entry                    external dcl 7-55
gtss_drun_                      000000 constant        entry                    external dcl 7-102
gtss_dsd_lookup_                000000 constant        entry                    external dcl 7-103
gtss_dsd_process_               000000 constant        entry                    external dcl 7-104
gtss_edit_dsd_                  000000 constant        entry                    external dcl 7-105
gtss_expand_pathname_           000000 constant        entry                    external dcl 7-107
gtss_expand_pathname_$verify_umc
                                000000 constant        entry                    external dcl 7-108
gtss_ext_$CFP_bits                     external static structure                level 1 dcl 5-37
gtss_ext_$SYstarstar_file_no           external static fixed bin(24,0)          dcl 5-33
gtss_ext_$aem                          external static fixed bin(17,0)          dcl 5-8
gtss_ext_$aft                          external static structure                level 1 dcl 5-78
gtss_ext_$com_reg                      external static structure                level 1 dcl 5-45
gtss_ext_$db                           external static bit(1)                   array unaligned dcl 5-10
gtss_ext_$deferred_catalogs_ptr        external static pointer                  dcl 5-11
gtss_ext_$drl_rtrn                     external static label variable           array dcl 5-13
gtss_ext_$drm_path                     external static char(168)                unaligned dcl 5-14
gtss_ext_$drun_jid                     external static char(5)                  unaligned dcl 5-15
gtss_ext_$event_channel                external static fixed bin(71,0)          dcl 5-16
gtss_ext_$fast_lib                     external static structure                level 1 dcl 5-98
gtss_ext_$finished                     external static label variable           dcl 5-17
gtss_ext_$gdb_name                     external static char(8)                  unaligned dcl 5-18
gtss_ext_$get_line                     external static entry variable           dcl 5-19
gtss_ext_$hcs_work_area_ptr            external static pointer                  dcl 5-21
gtss_ext_$homedir                      external static char(64)                 unaligned dcl 5-22
gtss_ext_$last_k_was_out               external static bit(1)                   dcl 5-23
gtss_ext_$mcfc                         external static structure                level 1 dcl 5-109
gtss_ext_$pdir                         external static varying char(168)        dcl 5-24
gtss_ext_$ppt                          external static pointer                  dcl 5-94
gtss_ext_$process_type                 external static fixed bin(17,0)          dcl 5-26
gtss_ext_$put_chars                    external static entry variable           dcl 5-27
gtss_ext_$restart_seg_ptr              external static pointer                  dcl 5-29
gtss_ext_$suspended_process            external static bit(1)                   unaligned dcl 5-32
gtss_ext_$user_id                      external static varying char(26)         dcl 5-34
gtss_ext_$work_area_ptr                external static pointer                  dcl 5-35
gtss_fault_processor_           000000 constant        entry                    external dcl 7-109
gtss_fault_processor_$timer_runout
                                000000 constant        entry                    external dcl 7-111
gtss_filact_error_status_       000000 constant        entry                    external dcl 7-112
gtss_filact_funct02_            000000 constant        entry                    external dcl 7-113
gtss_filact_funct03_            000000 constant        entry                    external dcl 7-114
gtss_filact_funct04_            000000 constant        entry                    external dcl 7-115
gtss_filact_funct05_            000000 constant        entry                    external dcl 7-116
gtss_filact_funct08_            000000 constant        entry                    external dcl 7-117
gtss_filact_funct10_            000000 constant        entry                    external dcl 7-118
gtss_filact_funct11_            000000 constant        entry                    external dcl 7-119
gtss_filact_funct14_            000000 constant        entry                    external dcl 7-120
gtss_filact_funct18_            000000 constant        entry                    external dcl 7-121
gtss_filact_funct19_            000000 constant        entry                    external dcl 7-122
gtss_filact_funct21_            000000 constant        entry                    external dcl 7-123
gtss_filact_funct22_            000000 constant        entry                    external dcl 7-124
gtss_find_cond_frame_           000000 constant        entry                    external dcl 7-110
gtss_interp_prim_               000000 constant        entry                    external dcl 7-126
gtss_interp_prim_$callss        000000 constant        entry                    external dcl 7-127
gtss_interp_prim_$sysret        000000 constant        entry                    external dcl 7-128
gtss_interp_prim_$t_goto        000000 constant        entry                    external dcl 7-129
gtss_ios_change_size_           000000 constant        entry                    external dcl 7-130
gtss_ios_close_                 000000 constant        entry                    external dcl 7-131
gtss_ios_exchange_names_        000000 constant        entry                    external dcl 7-132
gtss_ios_initialize_            000000 constant        entry                    external dcl 7-133
gtss_ios_io_                    000000 constant        entry                    external dcl 7-134
gtss_ios_open_                  000000 constant        entry                    external dcl 7-135
gtss_ios_position_              000000 constant        entry                    external dcl 7-136
gtss_mcfc_$close                000000 constant        entry                    external dcl 7-139
gtss_mcfc_$delete               000000 constant        entry                    external dcl 7-137
gtss_mcfc_$open                 000000 constant        entry                    external dcl 7-138
gtss_mcfc_empty                 000000 constant        entry                    external dcl 7-106
gtss_mcfc_init_                 000000 constant        entry                    external dcl 7-125
gtss_read_starCFP_              000000 constant        entry                    external dcl 7-140
gtss_read_starCFP_$last_os      000000 constant        entry                    external dcl 7-141
gtss_run_subsystem_             000000 constant        entry                    external dcl 7-142
gtss_run_subsystem_$finish      000000 constant        entry                    external dcl 7-143
gtss_run_subsystem_$restor      000000 constant        entry                    external dcl 7-144
gtss_run_subsystem_$restor_perm 000000 constant        entry                    external dcl 7-145
gtss_set_slave_                 000000 constant        entry                    external dcl 7-146
gtss_set_slave_$load_bar        000000 constant        entry                    external dcl 7-147
gtss_verify_access_             000000 constant        entry                    external dcl 7-149
gtss_verify_access_$check_forced_access
                                000000 constant        entry                    external dcl 7-150
gtss_write_starCFP_             000000 constant        entry                    external dcl 7-151
lbx                                    internal static fixed bin(17,0)          initial dcl 6-42
lpx                                    internal static fixed bin(17,0)          initial dcl 6-42
quit_flag                              automatic       bit(1)                   unaligned dcl 264
sbx                                    internal static fixed bin(17,0)          initial dcl 6-42
scux                                   based           structure                level 1 dcl 6-207
spx                                    internal static fixed bin(17,0)          initial dcl 6-42

NAMES DECLARED BY EXPLICIT CONTEXT.
dispose_of_derail               002640 constant        label                    dcl 138 set ref 109
gtss_derail_processor_          002200 constant        entry                    external dcl 15
set                             002712 constant        entry                    external dcl 156

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addrel                                                 builtin function         ref 66
null                                                   builtin function         ref 60 254 258

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      4344        5276    3275        4354
Length      6010    3275       732         475    1046         510

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gtss_derail_processor_              142 external procedure  is an external procedure.  
on unit on line 85                   64 on unit               

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 drl_handler                 gtss_derail_processor_

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gtss_derail_processor_   000100 derail_ptr                  gtss_derail_processor_
                         000102 drl_number                  gtss_derail_processor_
                         000104 gseg                        gtss_derail_processor_
                         000106 increment                   gtss_derail_processor_
                         000110 initial_cpu_time            gtss_derail_processor_
                         000120 saved_ilc                   gtss_derail_processor_
                         000122 mcp                         gtss_derail_processor_
                         000124 scup                        gtss_derail_processor_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_var            call_ext_out_desc   call_ext_out        return              tra_label_var       enable
ext_entry           ext_entry_desc      int_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cu_$ptr_call                  gtss_abort_subsystem_         gtss_abort_subsystem_$not_imp gtss_break_vector_
gtss_drl_abort_               gtss_drl_addmem_              gtss_drl_callss_              gtss_drl_corfil_
gtss_drl_defil_               gtss_drl_dio_                 gtss_drl_drlimt_              gtss_drl_drlsav_
gtss_drl_filact_              gtss_drl_filsp_               gtss_drl_grow_                gtss_drl_gwake_
gtss_drl_jsts_                gtss_drl_kin_                 gtss_drl_kotnow_
gtss_drl_kotnow_$gtss_drl_kout_                             gtss_drl_koutn_               gtss_drl_morlnk_
gtss_drl_msub_                gtss_drl_objtim_              gtss_drl_part_                gtss_drl_pasaft_
gtss_drl_pasdes_              gtss_drl_pasust_              gtss_drl_pdio_                gtss_drl_prgdes_
gtss_drl_pseudo_              gtss_drl_relmem_              gtss_drl_restor_              gtss_drl_retfil_
gtss_drl_return_              gtss_drl_rew_                 gtss_drl_rstswh_              gtss_drl_setlno_
gtss_drl_setswh_              gtss_drl_snumb_               gtss_drl_spawn_
gtss_drl_spawn_$gtss_drl_pasflr_                            gtss_drl_stoppt_              gtss_drl_switch_
gtss_drl_sysret_              gtss_drl_t_cfio_              gtss_drl_t_cmov_              gtss_drl_t_err_
gtss_drl_t_goto_              gtss_drl_t_linl_              gtss_drl_t_rscc_              gtss_drl_tapein_
gtss_drl_task_                gtss_drl_termtp_              gtss_drl_time_                gtss_update_safe_store_
ioa_                          virtual_cpu_time_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
gse_ext_$modes                gtss_ext_$bad_drl_rtrn        gtss_ext_$dispose_of_drl      gtss_ext_$flags
gtss_ext_$gtss_slave_area_seg gtss_ext_$popup_from_pi       gtss_ext_$restart_from_pi     gtss_ext_$sig_ptr
gtss_ext_$stack_level_        gtss_ext_$statistics          gtss_ust_ext_$ust




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
    254 002166       258 002170        15 002173        21 002214        56 002220        57 002222        59 002230
     60 002241        62 002277        64 002300        66 002301        67 002306        72 002312        73 002316
     78 002356        79 002361        80 002363        84 002364        85 002367        86 002404        87 002441
     91 002442        93 002452        95 002465        96 002471        97 002474        99 002476       101 002505
    102 002506       103 002510       107 002516       109 002522       110 002527       111 002531       116 002537
    118 002561       121 002571       131 002614       132 002621       133 002627       137 002632       138 002640
    139 002641       140 002644       141 002646       142 002655       143 002662       144 002664       145 002666
    146 002671       147 002673       148 002675       150 002677       151 002702       152 002704       154 002710
    156 002711       162 002720       163 002725       164 002730       165 002732       166 002734       167 002736
    168 002740       169 002742       170 002744       171 002746       172 002750       173 002752       174 002755
    175 002760       176 002763       177 002766       178 002771       179 002774       180 002777       181 003002
    182 003005       183 003010       184 003013       185 003016       186 003021       187 003024       188 003027
    189 003032       190 003035       191 003040       192 003043       193 003046       194 003051       195 003054
    196 003057       197 003062       198 003065       199 003067       200 003072       201 003075       202 003100
    203 003103       204 003106       205 003111       206 003114       207 003116       208 003120       209 003123
    210 003126       211 003131       212 003134       213 003137       214 003142       215 003144       216 003147
    217 003152       218 003155       219 003160       220 003163       221 003166       222 003171       223 003174
    224 003177       225 003202       226 003205       227 003210       228 003213       229 003215       230 003217
    231 003222       232 003225       233 003230       234 003233       235 003235       236 003240       237 003243
    238 003246       239 003251       240 003254       241 003257       242 003261       243 003263       244 003265


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
