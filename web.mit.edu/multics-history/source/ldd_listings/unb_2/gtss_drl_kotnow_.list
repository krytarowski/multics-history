	COMPILATION LISTING OF SEGMENT gtss_drl_kotnow_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/10/84  1236.5 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   *                                                         *
        4*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        5*   *                                                         *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 /* *************************************************************
       10*   *						   *
       11*   * Copyright (c) 1979 by Honeywell Information Systems, Inc. *
       12*   *						   *
       13*   ************************************************************* */
       14 gtss_drl_kotnow_: gtss_drl_kout_: proc (mcpp, increment);
       15 
       16 /* Immediate (not buffered) terminal output.
       17*   Note: gtss implements kout derail to be
       18*   the same as kotnow.
       19*
       20*   Authors: Robert J. Grimes	Created
       21*   -	  Albert N. Kepner	  1978
       22*   -	  Robert M. May
       23*   -	  David B. Ward
       24*   Change: Dave Ward	03/20/79 put_chars.
       25*   Change: Bob Alvarado	08/22/79 added output char count to ust.
       26*   Change: Dave Ward	08/19/81 %page;, do_print on error_output, entry before procs.
       27*   Change: Dave Ward	10/07/81 Corrected fallacious pl1 statement, removed prefix include usage.
       28*   */
       29 dcl  increment                fixed bin parm;
       30 dcl  mcpp                     ptr parm;
       31 	mcp = mcpp;
       32 
       33 /*
       34*
       35*   DRL KOTNOW, KEYBOARD OUTPUT FROM UNFILLED BUFFER (octal 56)
       36*
       37*
       38*   8_________1_6_____________________
       39*
       40*   DRL      KOTNOW
       41*   ZERO     L(tally),L(char)
       42*
       43*   The call for KOTNOW is the same as the call for  KOUT.   The
       44*   action  is  also  the  same,  except  that KOTNOW forces keyboard
       45*   output from a partially filled buffer rather than  waiting  until
       46*   the  buffer  has filled.  This feature allows users to substitute
       47*   KOTNOW for KOUT in subsystems  with  low  output,  where  several
       48*   messages may stack up in the buffer before its content is sent to
       49*   the remote terminal by KOUT.
       50*
       51*
       52*   KOTNOW  is  a  separate  entry  point  to  the  KOUT coding,
       53*   primarily for setting a flag and providing the test and  decision
       54*   logic  to  retain  control within the derail until the buffer has
       55*   been emptied.
       56*
       57*
       58*   The KOTNOW flag is tested immediately after the KOUTN  test.
       59*   If  the flag has not been set, normal processing continues with a
       60*   return to the subsystem.  If the flag has been set by an entry at
       61*   KOTNOW, the buffer is emptied and the allocator notified that I/O
       62*   is in progress.  An exit is then made to LINSRV.
       63*   */
       64 
       65 /*
       66*
       67*   DRL KOUT, KEYBOARD OUTPUT (octal 2)
       68*
       69*
       70*   8_________1_6_____________________
       71*
       72*   DRL      KOUT
       73*   ZERO     L(tally), L(char)
       74*
       75*   The field L(tally) points to a driver tally word pointing in
       76*   turn to a list of TALLY/TALLYB words that  define  each  line  of
       77*   output  of  BCI/ASCII characters to be sent to the terminal.  The
       78*   driver tally has the count of the line tallies in the list.  This
       79*   procedure  allows  the  user  to  define  scattered   lines   not
       80*   necessarily starting at word boundaries.
       81*
       82*
       83*   It  should  be  noted that the derail processor utilizes the
       84*   tally  words  and  that  they  are  modified  on  return  to  the
       85*   subsystem.   Therefore,  they  must  be  refreshed  prior to each
       86*   execution.
       87*
       88*   The optional field L(char) points to a word containing up to
       89*   four characters that will be appended to the end  of  the  output
       90*   defined by each line tally.  These characters could be line feed,
       91*   carriage  return,  etc.   If  this  field  is  not present in the
       92*   calling sequence, characters are not  added.   If  the  field  is
       93*   present,  the  first  character  of  zero  (000)  terminates  the
       94*   appending  of  characters.   In  any  case,  no  more  than  four
       95*   characters will be appended.
       96*
       97*
       98*   Example:
       99*
      100*
      101*   DRL     KOUT
      102*   ZERO    DRIVER
      103*   .
      104*   .
      105*   .
      106*   DRIVER   TALLY   *+1,2
      107*   TALLYB  CRLF,4
      108*   TALLY   BCDMSG,16
      109*   BCDMSG   BCI     3,THIS IS BCD TEXT
      110*   CRLF     OCT     015012177177     CR,LF,RO,RO
      111*
      112*
      113*   This  sequence  prints a line preceded by a carriage return,
      114*   line feed and two rubouts.
      115*
      116*
      117*   NOTE:  Because of timing considerations  and  character  set
      118*   differences   between   terminal  types,  it  may  be
      119*   necessary to follow the carriage return, or line feed
      120*   characters,  with  a  number   of   delete   (rubout)
      121*   characters.
      122*   */
      123 
      124 	increment = 1;
      125 	scup = addr (mc.scu);
      126 	gseg = gtss_ext_$gtss_slave_area_seg (gtss_ext_$stack_level_);
      127 	arg_ptr = addrel (gseg, fixed (scu.ilc)+1);
      128 
      129 /* Prepare end of line character string	*/
      130 	no_eol_chars = 0;
      131 	if arglist.eol ^= "0"b then do;
      132 	     if (fixed (arglist.eol)) > fixed (gtss_ust.lsize.limit, 18) then do;
      133 		call gtss_abort_subsystem_ (mcp,
      134 		     "gtss_drl_kotnow_",
      135 		     4,
      136 		     "EOL word outside memory at (^6o)",
      137 		     fixed (scu.ilc, 18));
      138 		return;
      139 	     end;
      140 	     eol_ptr = addrel (gseg, fixed (arglist.eol));
      141 	     no_eol_chars = search (eol_chars, NUL)-1;
      142 	     if no_eol_chars<0 then no_eol_chars = length (eol_chars);
      143 	end;
      144 
      145 	if arglist.tally = "0"b then do;		/* => There is no tally list. */
      146 	     if no_eol_chars>0 then			/* Output end of line characters. */
      147 		call output (eol_ptr, no_eol_chars);
      148 	     return;
      149 	end;
      150 
      151 	if (fixed (arglist.tally)) > fixed (gtss_ust.lsize.limit, 18) then do;
      152 	     call gtss_abort_subsystem_ (mcp,
      153 		"gtss_drl_kotnow_",
      154 		4,
      155 		"Print drive tally outside memory at (^6o)",
      156 		fixed (scu.ilc, 18));
      157 	     return;
      158 	end;
      159 	tally_ptr = addrel (gseg, fixed (arglist.tally));
      160 	tally_address_ptrs = fixed (tally.address) ;
      161 	num_tally = fixed (tally.chars);
      162 	tally_address = fixed (tally.address) -1;
      163 	call tally_id (tally_ptr);
      164 
      165 	do i = 1 to num_tally;
      166 	     if (fixed (tally_address+i)) > fixed (gtss_ust.lsize.limit, 18) then do;
      167 		call gtss_abort_subsystem_ (mcp,
      168 		     "gtss_drl_kotnow_",
      169 		     4,
      170 		     "Print tally outside memory at (^6o)",
      171 		     fixed (scu.ilc, 18));
      172 		return;
      173 	     end;
      174 	     tally_ptr = addrel (gseg, tally_address+i);
      175 	     if (fixed (tally.address)) > fixed (gtss_ust.lsize.limit, 18) then do;
      176 		call gtss_abort_subsystem_ (mcp,
      177 		     "gtss_drl_kotnow_",
      178 		     4,
      179 		     "Tally of print string out of memory at (^6o)",
      180 		     fixed (scu.ilc, 18));
      181 		return;
      182 	     end;
      183 	     line_len = fixed (tally.chars);
      184 	     line_ptr = addrel (gseg, fixed (tally.address));
      185 	     if tally.type = "100"b then do;		/* ASCII input. */
      186 		line_ptr = addr (line_buffer (fixed (tally.offset)+1));
      187 		call tallyb_sc (tally_ptr);
      188 
      189 print_line:	;
      190 		call output (line_ptr, line_len);
      191 	     end;
      192 	     else
      193 	     if tally.type = "000"b then do;		/* BCD input. */
      194 		call gtss_bcd_ascii_ (
      195 		     addr (bcd_buffer (fixed (tally.offset)+1))
      196 		     , line_len
      197 		     , addr (ascii_line));
      198 		line_ptr = addr (ascii_line);
      199 		call tally_sc (tally_ptr);
      200 		goto print_line;
      201 	     end;
      202 	     else do;
      203 		call gtss_abort_subsystem_ (mcp,
      204 		     "gtss_drl_kotnow_",
      205 		     49,
      206 		     gtss_pnterr.err49,
      207 		     fixed (scu.ilc, 18));
      208 		return;
      209 	     end;
      210 
      211 	     if no_eol_chars>0 then			/* Output end of line characters. */
      212 		call output (eol_ptr, no_eol_chars);
      213 	end;
      214 	return;
      215 
      216 nop:	entry;
      217 
      218 /**	Switch do print flag (nop => no output). */
      219 	do_print = ^do_print;
      220 	return;
      221 
      222 output:	proc (outptr, outlen);
      223 dcl  outlen                   fixed bin (24) parm;
      224 dcl  outptr                   ptr parm;
      225 	     if gtss_ext_$last_k_was_out then do;
      226 		if do_print then do;
      227 		     call gtss_ext_$put_chars (
      228 			iox_$user_output,
      229 			outptr,
      230 			outlen,
      231 			code);
      232 		     if code ^= 0 then do;
      233 error_out:		;
      234 			call gtss_abort_subsystem_
      235 			     (mcp
      236 			     , "gtss_drl_kotnow_"
      237 			     , 4
      238 			     , "unable to output to terminal"
      239 			     );
      240 			return;
      241 		     end;
      242 		end;
      243 		no_of_chars_by_8 = no_of_chars_by_8 + divide (outlen, 8, 24);
      244 		return;
      245 	     end;
      246 
      247 /* The last I/O was input which means that Multics (in LF echo mode) has
      248*   issued an extra line feed to the terminal. */
      249 
      250 /* We are about to do an output so set the flag. */
      251 	     gtss_ext_$last_k_was_out = "1"b;
      252 	     gtss_ust.lbuf.tally = "1"b;
      253 
      254 /* Move output from user's space to automatic buffer. */
      255 	     bufptr = addr (buffer);
      256 	     l = outlen;
      257 	     M = outptr -> M;
      258 
      259 /* Find the first line feed in the buffer and change it to
      260*   a rubout character */
      261 	     i = verify (M, look_past_chars);
      262 	     if i > 0 then
      263 		if substr (M, i, 1) = LF then
      264 		     substr (M, i, 1) = rubout;
      265 
      266 /* Do the output */
      267 	     if do_print then do;
      268 		call gtss_ext_$put_chars (
      269 		     iox_$user_output,
      270 		     bufptr,
      271 		     l,
      272 		     code);
      273 		if code ^= 0 then goto error_out;
      274 	     end;
      275 	     no_of_chars_by_8 = no_of_chars_by_8 + divide (l, 8, 24);
      276 	     return;
      277 
      278 dcl  buffer                   char (4096);
      279 dcl  bufptr                   ptr init(null());
      280 dcl  i                        fixed bin (24);
      281 dcl  l                        fixed bin (24);
      282 dcl  M                        char (l) based (addr (buffer));
      283 dcl  rubout                   char (1) static int options (constant) init ("")  /* octal 177. */;
      284 
      285 dcl  look_past_chars          char(3) internal static options(constant)
      286 			   init(" ");						/* Rubout, NULL, CR */
      287 dcl  LF                       char (1) static int options (constant) init ("
      288 ");						/* octal 012. */
      289 	end output;
      290 
      291 tally_id:	proc (p);
      292 
      293 /* Procedure to update a TALLy word to simulate ID
      294*   modification until tally runout. */
      295 
      296 dcl  p                        ptr parm;
      297 
      298 	     tally_ptr = p;				/* use local pointer */
      299 	     result = fixed (address) + fixed (tally_count);
      300 	     address = result_r18;
      301 	     tally_count = "0"b;
      302 
      303 dcl 1 tally based (tally_ptr) aligned,
      304     2 address bit (18) unal,
      305     2 tally_count bit (12) unal,
      306     2 filler bit (6) unal;
      307 dcl  result                   fixed bin (24);
      308 dcl  tally_ptr                ptr init(null());
      309 dcl 1 result_ov based (addr (result)),
      310     2 result_l18 bit (18),
      311     2 result_r18 bit (18);
      312 
      313 	end tally_id ;
      314 
      315 tally_sc:	proc (p);
      316 
      317 /* Procedure to update a TALLY word to simulate SC
      318*   modification until tally runout. (Processing 6 bit BCD characters.) */
      319 
      320 dcl  p                        ptr parm;
      321 
      322 	     tally_ptr = p;				/* use local pointer */
      323 	     word_address = fixed (address);
      324 	     count = fixed (tally_count);
      325 	     position = fixed (char_pos);
      326 	     result = mod (position + count, 6);
      327 	     char_pos = substr (result_overlay, 34, 3);
      328 	     result = word_address + divide (position + count, 6, 24, 0);
      329 	     address = substr (result_overlay, 19, 18);
      330 	     tally_count = "0"b;
      331 
      332 dcl  tally_ptr                ptr init(null());
      333 dcl 1 tally based (addr (tally_ptr)) aligned,
      334     2 address bit (18) unal,
      335     2 tally_count bit (12) unal,
      336     2 filler bit (3) unal,
      337     2 char_pos bit (3) unal;
      338 dcl  count                    fixed bin (24);
      339 dcl  position                 fixed bin (24);
      340 dcl  result                   fixed bin (24);
      341 dcl  result_overlay           bit (36) aligned based (addr (result));
      342 dcl  word_address             fixed bin (24);
      343 
      344 	end tally_sc ;
      345 
      346 tallyb_sc: proc (p);
      347 
      348 /* Procedure to update a TALLYB tally word to simulate
      349*   SC modification until tally runout. */
      350 
      351 dcl  p                        ptr parm;
      352 
      353 	     tally_ptr = p;				/* use local pointer */
      354 	     new_byte_address = fixed (address||char_pos) + fixed (tally_count);
      355 	     address = new_address;
      356 	     char_pos = new_char_pos;
      357 	     tally_count = "0"b;
      358 
      359 dcl 1 tallyb based (tally_ptr) aligned,
      360     2 address bit (18) unal,
      361     2 tally_count bit (12) unal,
      362     2 filler bit (4) unal,
      363     2 char_pos bit (2) unal;
      364 
      365 dcl  new_byte_address         fixed bin (24);
      366 dcl  tally_ptr                ptr init(null());
      367 dcl 1 new_byte_addres_ov based (addr (new_byte_address)) aligned,
      368     2 filler bit (16) unal,
      369     2 new_address bit (18) unal,
      370     2 new_char_pos bit (2) unal;
      371 
      372 	end tallyb_sc ;
      373 
      374 /*   Variables for gtss_drl_kotnow_:		 */
      375 /*   IDENTIFIER		ATTRIBUTES	 */
      376 dcl  addr                     builtin;
      377 dcl  addrel                   builtin;
      378 dcl  arg_ptr                  ptr init (null ());
      379 dcl  ascii_line               char (1000)aligned;
      380 dcl  bcd_buffer               (1000) bit(6) unal based(line_ptr);
      381 dcl  code                     fixed binary (35);
      382 dcl  do_print                 bit(1)static int init("1"b);
      383 dcl  eol_chars                char (4) aligned based (eol_ptr);
      384 dcl  eol_ptr                  ptr init (null ());
      385 dcl  fixed                    builtin;
      386 dcl  gseg                     ptr init(null());
      387 dcl  i                        fixed bin;
      388 dcl  iox_$user_output         ptr ext static;
      389 dcl  line_buffer              (1000)char (1)unal based (line_ptr);
      390 dcl  line_len                 fixed bin (24);
      391 dcl  line_ptr                 ptr init (null ());
      392 dcl  no_eol_chars             fixed bin (24);
      393 dcl  NUL                      char (1)static int options (constant)init (" ")	/* octal 000. */;
      394 dcl  null                     builtin;
      395 dcl  num_tally                fixed bin;
      396 dcl  num_tally_ptrs           fixed binary;
      397 dcl  search                   builtin;
      398 dcl  substr                   builtin;
      399 dcl  tally_address            fixed bin;
      400 dcl  tally_address_ptrs       fixed binary;
      401 dcl  tally_ptr                ptr init (null ());
      402 
      403 dcl 1 arglist aligned based (arg_ptr),
      404     2 tally bit (18) unaligned,
      405     2 eol bit (18) unaligned;
      406 
      407 dcl 1 tally aligned based (tally_ptr),
      408     2 address bit (18) unaligned,
      409     2 chars bit (12) unaligned,
      410     2 type bit (3) unaligned,
      411     2 offset bit (3) unaligned;
      412 
  1     1 /*  */
  1     2 /* BEGIN INCLUDE FILE  mc.incl.pl1   Created Dec 72 for 6180 - WSS. */
  1     3 /* Modified 06/07/76 by Greenberg for mc.resignal */
  1     4 /* Modified 07/07/76 by Morris for fault register data */
  1     5 /* Modified 08/28/80 by J. A. Bush for the DPS8/70M CVPU */
  1     6 /* Modified '82 to make values constant */
  1     7 
  1     8 /* words 0-15 pointer registers */
  1     9 
  1    10 dcl  mcp ptr;
  1    11 
  1    12 dcl 1 mc based (mcp) aligned,
  1    13     2 prs (0:7) ptr,				/* POINTER  REGISTERS */
  1    14    (2 regs,					/* registers */
  1    15       3 x (0:7) bit (18),				/* index registers */
  1    16       3 a bit (36),					/* accumulator */
  1    17       3 q bit (36),					/* q-register */
  1    18       3 e bit (8),					/* exponent */
  1    19       3 pad1 bit (28),
  1    20       3 t bit (27),					/* timer register */
  1    21       3 pad2 bit (6),
  1    22       3 ralr bit (3),				/* ring alarm register */
  1    23 
  1    24     2 scu (0:7) bit (36),
  1    25 
  1    26     2 mask bit (72),				/* mem controller mask at time of fault */
  1    27     2 ips_temp bit (36),				/* Temporary storage for IPS info */
  1    28     2 errcode fixed bin (35),				/* fault handler's error code */
  1    29     2 fim_temp,
  1    30       3 unique_index bit (18) unal,			/* unique index for restarting faults */
  1    31       3 resignal bit (1) unal,			/* recompute signal name with fcode below */
  1    32       3 fcode bit (17) unal,				/* fault code used as index to FIM table and SCT */
  1    33     2 fault_reg bit (36),				/* fault register */
  1    34     2 pad2 bit (1),
  1    35     2 cpu_type fixed bin (2) unsigned,			/* L68 = 0, DPS8/70M = 1 */
  1    36     2 ext_fault_reg bit (15),				/* extended fault reg for DPS8/70M CPU */
  1    37     2 fault_time bit (54),				/* time of fault */
  1    38 
  1    39     2 eis_info (0:7) bit (36)) unaligned;
  1    40 
  1    41 
  1    42 dcl (apx fixed bin init (0),
  1    43      abx fixed bin init (1),
  1    44      bpx fixed bin init (2),
  1    45      bbx fixed bin init (3),
  1    46      lpx fixed bin init (4),
  1    47      lbx fixed bin init (5),
  1    48      spx fixed bin init (6),
  1    49      sbx fixed bin init (7)) internal static options (constant);
  1    50 
  1    51 
  1    52 
  1    53 
  1    54 dcl  scup ptr;
  1    55 
  1    56 dcl 1 scu based (scup) aligned,			/* SCU DATA */
  1    57 
  1    58 
  1    59 /*	WORD (0)		*/
  1    60 
  1    61    (2 ppr,					/* PROCEDURE POINTER REGISTER */
  1    62       3 prr bit (3),				/* procedure ring register */
  1    63       3 psr bit (15),				/* procedure segment register */
  1    64       3 p bit (1),					/* procedure privileged bit */
  1    65 
  1    66     2 apu,					/* APPENDING UNIT STATUS */
  1    67       3 xsf bit (1),				/* ext seg flag - IT modification */
  1    68       3 sdwm bit (1),				/* match in SDW Ass. Mem. */
  1    69       3 sd_on bit (1),				/* SDW Ass. Mem.  ON */
  1    70       3 ptwm bit (1),				/* match in PTW Ass. Mem. */
  1    71       3 pt_on bit (1),				/* PTW Ass. Mem.  ON */
  1    72       3 pi_ap bit (1),				/* Instr Fetch or Append cycle */
  1    73       3 dsptw bit (1),				/* Fetch of DSPTW */
  1    74       3 sdwnp bit (1),				/* Fetch of SDW non paged */
  1    75       3 sdwp bit (1),				/* Fetch of SDW paged */
  1    76       3 ptw bit (1),				/* Fetch of PTW */
  1    77       3 ptw2 bit (1),				/* Fetch of pre-paged PTW */
  1    78       3 fap bit (1),				/* Fetch of final address paged */
  1    79       3 fanp bit (1),				/* Fetch of final address non-paged */
  1    80       3 fabs bit (1),				/* Fetch of final address absolute */
  1    81 
  1    82     2 fault_cntr bit (3),				/* number of retrys of EIS instructions */
  1    83 
  1    84 
  1    85 /*	WORD (1)		*/
  1    86 
  1    87     2 fd,						/* FAULT  DATA */
  1    88       3 iro bit (1),				/* illegal ring order */
  1    89       3 oeb bit (1),				/* out of execute bracket */
  1    90       3 e_off bit (1),				/* no execute */
  1    91       3 orb bit (1),				/* out of read bracket */
  1    92       3 r_off bit (1),				/* no read */
  1    93       3 owb bit (1),				/* out of write bracket */
  1    94       3 w_off bit (1),				/* no write */
  1    95       3 no_ga bit (1),				/* not a gate */
  1    96       3 ocb bit (1),				/* out of call bracket */
  1    97       3 ocall bit (1),				/* outward call */
  1    98       3 boc bit (1),				/* bad outward call */
  1    99       3 inret bit (1),				/* inward return */
  1   100       3 crt bit (1),				/* cross ring transfer */
  1   101       3 ralr bit (1),				/* ring alarm register */
  1   102       3 am_er bit (1),				/* associative memory fault */
  1   103       3 oosb bit (1),				/* out of segment bounds */
  1   104       3 paru bit (1),				/* processor parity upper */
  1   105       3 parl bit (1),				/* processor parity lower */
  1   106       3 onc_1 bit (1),				/* op not complete type 1 */
  1   107       3 onc_2 bit (1),				/* op not complete type 2 */
  1   108 
  1   109     2 port_stat,					/* PORT  STATUS */
  1   110       3 ial bit (4),				/* illegal action lines */
  1   111       3 iac bit (3),				/* illegal action channel */
  1   112       3 con_chan bit (3),				/* connect channel */
  1   113 
  1   114     2 fi_num bit (5),				/* (fault/interrupt)  number */
  1   115     2 fi_flag bit (1),				/*  1 => fault,  0 => interrupt  */
  1   116 
  1   117 
  1   118 /*	WORD (2)		*/
  1   119 
  1   120     2 tpr,					/* TEMPORARY POINTER REGISTER */
  1   121       3 trr bit (3),				/* temporary ring register */
  1   122       3 tsr bit (15),				/* temporary segment register */
  1   123 
  1   124     2 pad2 bit (9),
  1   125 
  1   126     2 cpu_no bit (3),				/* CPU number */
  1   127 
  1   128     2 delta bit (6),				/* tally modification DELTA */
  1   129 
  1   130 
  1   131 /*	WORD (3)		*/
  1   132 
  1   133     2 word3 bit (18),
  1   134 
  1   135     2 tsr_stat,					/* TSR STATUS for 1,2,&3 word instructions */
  1   136       3 tsna,					/* Word 1 status */
  1   137         4 prn bit (3),				/* Word 1  PR  number */
  1   138         4 prv bit (1),				/* Word 1  PR  valid bit */
  1   139       3 tsnb,					/* Word 2  status */
  1   140         4 prn bit (3),				/* Word 2  PR  number */
  1   141         4 prv bit (1),				/* Word 2  PR  valid bit */
  1   142       3 tsnc,					/* Word 3  status */
  1   143         4 prn bit (3),				/* Word 3  PR  number */
  1   144         4 prv bit (1),				/* Word 3  PR  valid bit */
  1   145 
  1   146     2 tpr_tbr bit (6),				/* TPR.TBR  field */
  1   147 
  1   148 
  1   149 /* 	WORD (4)		*/
  1   150 
  1   151     2 ilc bit (18),					/* INSTRUCTION  COUNTER */
  1   152 
  1   153     2 ir,						/* INDICATOR  REGISTERS */
  1   154       3 zero bit (1),				/* zero indicator */
  1   155       3 neg bit (1),				/* negative indicator */
  1   156       3 carry bit (1),				/* carryry indicator */
  1   157       3 ovfl bit (1),				/* overflow indicator */
  1   158       3 eovf bit (1),				/* eponent overflow */
  1   159       3 eufl bit (1),				/* exponent underflow */
  1   160       3 oflm bit (1),				/* overflow mask */
  1   161       3 tro bit (1),				/* tally runout */
  1   162       3 par bit (1),				/* parity error */
  1   163       3 parm bit (1),				/* parity mask */
  1   164       3 bm bit (1),					/* ^bar mode */
  1   165       3 tru bit (1),				/* truncation mode */
  1   166       3 mif bit (1),				/* multi-word instruction mode */
  1   167       3 abs bit (1),				/* absolute mode */
  1   168       3 hex bit (1),				/* hexadecimal exponent mode */
  1   169       3 pad bit (3),
  1   170 
  1   171 
  1   172 /*	WORD (5)		*/
  1   173 
  1   174     2 ca bit (18),					/* COMPUTED  ADDRESS */
  1   175 
  1   176     2 cu,						/* CONTROL UNIT STATUS */
  1   177       3 rf bit (1),					/* on first cycle of repeat instr */
  1   178       3 rpt bit (1),				/* repeat instruction */
  1   179       3 rd bit (1),					/* repeat double instruction */
  1   180       3 rl bit (1),					/* repeat link instruciton */
  1   181       3 pot bit (1),				/* IT  modification */
  1   182       3 pon bit (1),				/* return type instruction */
  1   183       3 xde bit (1),				/* XDE from Even location */
  1   184       3 xdo bit (1),				/* XDE from Odd  location */
  1   185       3 poa bit (1),				/* operation preparation */
  1   186       3 rfi bit (1),				/* tells CPU to refetch instruction */
  1   187       3 its bit (1),				/* ITS modification */
  1   188       3 if bit (1),					/* fault occured during instruction fetch */
  1   189 
  1   190     2 cpu_tag bit (6)) unaligned,			/* computed tag field */
  1   191 
  1   192 
  1   193 /*	WORDS (6,7)	*/
  1   194 
  1   195     2 even_inst bit (36),				/* even instruction of faulting pair */
  1   196 
  1   197     2 odd_inst bit (36);				/* odd  instruction of faulting pair */
  1   198 
  1   199 
  1   200 
  1   201 
  1   202 
  1   203 
  1   204 /*	ALTERNATE   SCU  DECLARATION		*/
  1   205 
  1   206 
  1   207 dcl 1 scux based (scup) aligned,
  1   208 
  1   209    (2 pad0 bit (36),
  1   210 
  1   211     2 fd,						/* GROUP II  FAULT DATA */
  1   212       3 isn bit (1),				/* illegal segment number */
  1   213       3 ioc bit (1),				/* illegal op  code  */
  1   214       3 ia_am bit (1),				/* illegal address - modifier */
  1   215       3 isp bit (1),				/* illegal slave  procedure */
  1   216       3 ipr bit (1),				/* illegal procedure */
  1   217       3 nea bit (1),				/* non existent address */
  1   218       3 oobb bit (1),				/* out of bounds */
  1   219       3 pad bit (29),
  1   220 
  1   221     2 pad2 bit (36),
  1   222 
  1   223     2 pad3a bit (18),
  1   224 
  1   225     2 tsr_stat (0:2),				/* TSR  STATUS  as an  ARRAY */
  1   226       3 prn bit (3),				/* PR  number */
  1   227       3 prv bit (1),				/* PR  valid bit */
  1   228 
  1   229     2 pad3b bit (6)) unaligned,
  1   230 
  1   231     2 pad45 (0:1) bit (36),
  1   232 
  1   233     2 instr (0:1) bit (36);				/* Instruction ARRAY */
  1   234 
  1   235 
  1   236 
  1   237 /*  END INCLUDE FILE   mc.incl.pl1 */
      413 
      414 
  2     1 /* BEGIN INCLUDE FILE gtss_ext_.incl.pl1 */
  2     2 /*
  2     3*  Created: (Wardd Multics)  05/20/78 1307.6 mst Sat 
  2     4*  Modified: Ward            1981     add suspended_process dcl
  2     5*  Modified: Ron Barstad  83-07-21  Fixed level number on mcfc to 3
  2     6*  Modified: Ron Barstad  83-07-25  Fixed derail range in statistics to 4js3 number
  2     7**/
  2     8 dcl  gtss_ext_$aem                   fixed bin static ext	/* >0 Print "additional" error information. */;
  2     9 dcl  gtss_ext_$bad_drl_rtrn          static ext label	/* Default for drl_rtrn. */;
  2    10 dcl  gtss_ext_$db                    (72)bit(1)unal static ext;
  2    11 dcl  gtss_ext_$deferred_catalogs_ptr ptr ext;
  2    12 dcl  gtss_ext_$dispose_of_drl        static ext label	/* quit handlers for some derails use this label to abort */;
  2    13 dcl  gtss_ext_$drl_rtrn              (4)static ext label	/* where to return at subsystem end */;
  2    14 dcl  gtss_ext_$drm_path              char(168)static ext	/* gtss_expand_pathname_stores drm_path */;
  2    15 dcl  gtss_ext_$drun_jid              char (5) static ext	/* valid only for DRUN executing under absentee */;
  2    16 dcl  gtss_ext_$event_channel         fixed bin (71) static ext	/* used for DABT signals */;
  2    17 dcl  gtss_ext_$finished              static ext label	/* Return to gtss for normal conclusion. */;
  2    18 dcl  gtss_ext_$gdb_name              char(8)ext	/* Name H* module to debug. */;
  2    19 dcl  gtss_ext_$get_line              entry(ptr,ptr,fixed bin(21),fixed bin(21),fixed bin(35))variable ext /* Build mode input procedure. */;
  2    20 dcl  gtss_ext_$gtss_slave_area_seg   (4) ext static ptr	/* pointer to gtss slave area segment */;
  2    21 dcl  gtss_ext_$hcs_work_area_ptr     ptr ext static		/* Temp seg for acl lists. */;
  2    22 dcl  gtss_ext_$homedir               char (64) static ext /* user's home dir */;
  2    23 dcl  gtss_ext_$last_k_was_out        bit (1)aligned ext static	/* "1"b => last tty output was output. */;
  2    24 dcl  gtss_ext_$pdir                  char (168) varying ext static	/* pathname of process directory */;
  2    25 dcl  gtss_ext_$popup_from_pi         static ext label	/* transfer to this label after pi simulates popup primitive */;
  2    26 dcl  gtss_ext_$process_type          fixed bin (17) static ext;
  2    27 dcl  gtss_ext_$put_chars             entry(ptr,ptr,fixed bin(24),fixed bin(35)) variable ext	/* Terminal output procedure. */;
  2    28 dcl  gtss_ext_$restart_from_pi       static ext label	/* transfer to this label after pi restores machine conditions */;
  2    29 dcl  gtss_ext_$restart_seg_ptr       ptr static ext	/* points to DRUN restart file when exec under absentee */;
  2    30 dcl  gtss_ext_$sig_ptr               ext static ptr	/* saved ptr to signal_ */;
  2    31 dcl  gtss_ext_$stack_level_          fixed bin ext static;
  2    32 dcl  gtss_ext_$suspended_process     bit(1) ext static;
  2    33 dcl  gtss_ext_$SYstarstar_file_no    fixed bin (24) static ext;
  2    34 dcl  gtss_ext_$user_id               char (26)var ext;
  2    35 dcl  gtss_ext_$work_area_ptr         ptr ext;
  2    36 
  2    37 dcl  1 gtss_ext_$CFP_bits aligned static external
  2    38      , 3 no_input_yet bit (1) unaligned         /* used in gtss_CFP_input_, gtss_read_starCFP_ */
  2    39      , 3 rtn_bits bit (4) unaligned             /* used in gtss_CFP_input_, gtss_CFP_output_ */
  2    40      , 3 cpos_called bit (1) unaligned          /* used in gtss_CFP_input_, gtss_drl_t_cfio_, gtss_abandon_CFP_ */
  2    41      , 3 cout_called bit (1) unaligned          /* used in gtss_read_starCFP_, gtss_abandon_CFP_ */
  2    42      , 3 build_mode bit (1) unaligned	        /* used in gtss_build_, gtss_dsd_process_ */
  2    43      ;
  2    44 
  2    45 dcl 1 gtss_ext_$com_reg aligned static ext,
  2    46        3 tsdmx,
  2    47          4 dst fixed bin (18) unsigned unaligned,
  2    48          4 dit fixed bin (18) unsigned unaligned,
  2    49        3 tsdpt fixed bin (36) unsigned unaligned,
  2    50        3 tsddt fixed bin (36) unsigned unaligned,
  2    51        3 tsdid bit (72) unaligned,
  2    52        3 tsdsd bit (36) unaligned,
  2    53        3 tsdst fixed bin (36) unsigned unaligned,
  2    54        3 tsdjb fixed bin (35) unaligned,
  2    55        3 tsdgt,
  2    56          4 ust_loc fixed bin (18) unsigned unaligned,
  2    57          4 gating_ctl fixed bin (18) unsigned unaligned,
  2    58        3 tcdfr bit (36) unaligned;
  2    59 
  2    60 dcl 1 gtss_ext_$flags aligned static ext
  2    61      , 3 dispose_of_drl_on_pi	bit (01) unal	/* 1 => drl that should be aborted after quit-pi sequence */
  2    62      , 3 drl_in_progress	bit (01) unal	/* 1 => drl handler executing; 0 => gcos code executing */
  2    63      , 3 popup_from_pi	bit (01) unal	/* 1 => derail processor will simulate Gcos break instead of returning */
  2    64      , 3 unfinished_drl	bit (01) unal	/* 1 => subsystem is handling breaks and quit was raised during a drl */
  2    65      , 3 ss_time_limit_set	bit (01) unal	/* 1 => exec time limit set for subsystem */
  2    66      , 3 timer_ranout	bit (01) unal	/* 1 => user is executing timer runout code */
  2    67      , 3 gtss_com_err_sw      bit (01) unal       /* 1 => stop com_err_ string from going to terminal */   
  2    68      , 3 available		bit (65) unal
  2    69      ;
  2    70 
  2    71 
  2    72 dcl 1 gtss_ext_$statistics aligned static ext,		/* Derail usage statistics */
  2    73       3 total_time (-10:71)fixed bin (71),
  2    74       3 count (-10:71)fixed bin (17);
  2    75 
  2    76 /* 	Declaration of Available File Table
  2    77*   */
  2    78 dcl 1 gtss_ext_$aft aligned ext,			/* aft structure */
  2    79 
  2    80       3 start_list (0:102) fixed bin (24),		/* >0 => 1st aft_entry row to start of next entry chain. */
  2    81 
  2    82       3 aft_entry (20),
  2    83         4 altname char (8),				/* altname name for attaching this file */
  2    84         4 next_entry fixed bin (24),			/* Next aft_entry in hash chain. */
  2    85         4 previous_add fixed bin (24),			/* Previously added entry. */
  2    86         4 next_add fixed bin (24),			/* Entry added after this one. */
  2    87         4 used bit (1) unal,				/* "1"b => aft_entry contains AFT value. */
  2    88         4 forced bit(1) unal,				/* "1"b => gtss_verify_access_ forced access on this file. */
  2    89 
  2    90       3 free_space fixed bin (24),			/* Index of start of free space list for aft entries. */
  2    91       3 first_added fixed bin (24),			/* >0  => start of chain in add order. */
  2    92       3 last_added fixed bin (24)			/* >0 => end of chain in added order. */;
  2    93 
  2    94 dcl  gtss_ext_$ppt                   ptr ext /*  switch name for tapein drl */;
  2    95 /**	Data structure to provide access to installed
  2    96*   subsystems fast library load.
  2    97*   **/
  2    98 dcl 1 gtss_ext_$fast_lib aligned ext
  2    99      , 3 fast_lib_fcb ptr				/* Pointer to msf fcb.	*/
  2   100      , 3 fast_lib_ncp fixed bin (24)			/* Number of components. */
  2   101      , 3 comp_ptr (0:9)ptr				/* Pointer to component. */
  2   102      , 3 comp_wds (0:9)fixed bin (24)			/* Component length (words). */
  2   103      ;
  2   104 
  2   105 /* Pointers to segments to regulate multipler
  2   106*   callers to files. Same segments are used to regulate
  2   107*   all simulator callers.
  2   108**/
  2   109 dcl 1 gtss_ext_$mcfc	aligned ext,
  2   110       3 multics_lock_id	bit(36),
  2   111       3 wait_time		fixed bin,
  2   112       3 files_ptr		ptr,
  2   113       3 names_ptr		ptr,
  2   114       3 callers_ptr		(0:3)ptr
  2   115 ;
  2   116 
  2   117 /*   END INCLUDE FILE gtss_ext_.incl.pl1 */
      415 
      416 
  3     1 /* BEGIN INCLUDE FILE gtss_pnterr.incl.pl1 */
  3     2 /*
  3     3*  Created: (Grimes SMP)  04/15/78 0933.2 mst Sat 
  3     4*   Change: Dave Ward	06/08/78 made attributes constant.
  3     5*   Change: Dave Ward	08/17/81 made lengths same as constans.
  3     6*   Change: Ron Barstad  83-03-29  fixed err 53, add missing err 56
  3     7*   Change: Ron Barstad  84-02-27  changed back to all same length because of based array in gtss_abort_subsystem_
  3     8**/
  3     9 dcl 1 gtss_pnterr static int options (constant),
  3    10     2 err1   char(50) init("001-INCORRECT PRIMITIVE"),
  3    11     2 err2   char(50) init("002-(^6o)INVALID FILE I/O COMMAND"),
  3    12     2 err3   char(50) init("003-(^6o)INVALID DCW"),
  3    13     2 err4   char(50) init("004-(^6o)INVALID DRL ARGUMENT"),
  3    14     2 err5   char(50) init("005-(^6o)INVALID DRL CODE"),
  3    15     2 err6   char(50) init("006-LEVEL OF CONTROL TOO DEEP"),
  3    16     2 err7   char(50) init("007-BAP PROG. DESC."),
  3    17     2 err8   char(50) init("008-LOOP IN PRIMITIVES"),
  3    18     2 err9   char(50) init("009-SYSTEM UNKNOWN"),
  3    19     2 err10  char(50) init("010-PROGRAM TOO LARGE TO SWAP"),
  3    20     2 err11  char(50) init("011-(^6o)INCORRECT CORE FILE USAGE"),
  3    21     2 err12  char(50) init("012-(^6o)PRIVILEGED I/O ATTEMPTED"),
  3    22     2 err13  char(50) init("013-(^6o)DRL USERID NOT PERMITTED"),
  3    23     2 err14  char(50) init("(^6o)ILLEGAL DRL RELMEM REQUEST"),
  3    24     2 err15  char(50) init("015-(^6o)CANNOT RESET USER ID"),
  3    25     2 err16  char(50) init("016-(^6o)OVERFLOW FAULT"),
  3    26     2 err17  char(50) init("017-(^6o)ILLEGAL OP CODE"),
  3    27     2 err18  char(50) init("018-(^6o)MEMORY FAULT"),
  3    28     2 err19  char(50) init("019-(^6o)FAULT TAG FAULT"),
  3    29     2 err20  char(50) init("020-(^6o)DIVIDE CHECK FAULT"),
  3    30     2 err21  char(50) init("021-(^6o)BAD STATUS - SWAP OUT"),
  3    31     2 err22  char(50) init("022-(^6o)BAD STATUS - SWAP IN"),
  3    32     2 err23  char(50) init("023-(^6o)BAD STATUS - LOAD"),
  3    33     2 err24  char(50) init("(^6o)TALK PERMISSION NOT GRANTED"),
  3    34     2 err25  char(50) init("(^6o)WRITE ATTEMPTED ON READ-ONLY FILE - ^8a"),
  3    35     2 err26  char(50) init("(^6o)READ ATTEMPTED ON EXECUTE-ONLY FILE - ^8a"),
  3    36     2 err27  char(50) init("024-(^6o)MME FAULT"),
  3    37     2 err28  char(50) init("028-(^6o)REWIND ATTEMPTED FOR RANDOM FILE - ^8a"),
  3    38     2 err29  char(50) init("029-ILLEGAL SYSTEM SELECTION"),
  3    39     2 err30  char(50) init("134-(^6o)INVALID DRL FILACT FUNCTION #^i"),
  3    40     2 err31  char(50) init("135-(^6o)PRIVILEGED DRL FILACT REQUEST"),
  3    41     2 err32  char(50) init("138-(^6o)NO TAP* FILE FOR DRL TAPEIN"),
  3    42     2 err33  char(50) init("139-ERROR IN WRITING TAP* FILE"),
  3    43     2 err34  char(50) init("(^6o)DRL ABORT - CANNOT WRITE ABRT FILE"),
  3    44     2 err35  char(50) init("(^6o)DRL ABORT - ABRT FILE WRITTEN"),
  3    45     2 err36  char(50) init("NOT ENOUGH CORE TO RUN JOB"),
  3    46     2 err37  char(50) init("SORRY-OUT OF SWAP SPACE. TRY AGAIN."),
  3    47     2 err38  char(50) init("(^6o)FILE ADDRESS ERROR"),
  3    48     2 err39  char(50) init("(^6o)DRL ABORT - ABRT FILE I/O ERROR"),
  3    49     2 err40  char(50) init("(^6o)DRL ABORT - ABRT FILE TOO SMALL"),
  3    50     2 err41  char(50) init("(^6o)BAD STATUS FOR DRL SAVE/RESTOR - ^8a"),
  3    51     2 err42  char(50) init("(^6o)H* FILE NOT IN AFT - ^8a"),
  3    52     2 err43  char(50) init("064-EXECUTE TIME LIMIT EXCEEDED"),
  3    53     2 err44  char(50) init("025-(^6o)LOCKUP FAULT"),
  3    54     2 err45  char(50) init("065-OBJECT PROGRAM SIZE LIMIT EXCEEDED"),
  3    55     2 err46  char(50) init("(^6o)INCORRECT ENTRY TO DRL TASK"),
  3    56     2 err47  char(50) init("(^6o)H* PROGRAM NAME UNDEFINED - ^8a"),
  3    57     2 err48  char(50) init("(^6o)H* FILE CATALOG FULL - ^8a"),
  3    58     2 err49  char(50) init("(^6o)TALLY OR CHARACTER COUNT INCORRECT"),
  3    59     2 err50  char(50) init("(^6o)BAD DRL SAVE DATA LOC"),
  3    60     2 err51  char(50) init("(^6o)H* FILE NOT INITITALIZED - ^8a"),
  3    61     2 err52  char(50) init("(^6o)H* FILE MUST BE RANDOM - ^8a"),
  3    62     2 err53  char(50) init("026-(^6o)OP-NOT-COMPLETE FAULT"),
  3    63     2 err54  char(50) init("(^6o)H* FILE PROGRAM NAME REQUIRED - ^8a"),
  3    64     2 err55  char(50) init("027-(^6o)COMMAND FAULT"),
  3    65     2 err56  char(50) init("(^6o)LINKED FILE I/O CANNOT SPAN >63 LLINKS - ^8a"),
  3    66     2 err57  char(50) init("UNASSIGNED"),
  3    67     2 err58  char(50) init("(^6o)INVALID TIME FOR DRL GWAKE"),
  3    68     2 err59  char(50) init("UNASSIGNED"),
  3    69     2 err60  char(50) init("(^6o)INVALID SNUMB FOR DRL JOUT"),
  3    70     2 err61  char(50) init("(^6o)PRIVILEGED DRL"),
  3    71     2 err62  char(50) init("(^6o)INVALID DRL JOUT FUNCTION"),
  3    72     2 err63  char(50) init("MEMORY PARITY ERROR"),
  3    73     2 err64  char(50) init("SY** I/O ERROR"),
  3    74 /* The following error messages are artifacts of gtss and are not found in TSS */
  3    75     2 err100 char(50) init("DRL ADDMEM ERROR at (^6o)"),
  3    76     2 err101 char(50) init("DRL RELMEM ERROR TRUNCATE SEGMENT at (^6o)"),
  3    77     2 err102 char(50) init("DRL RELMEM ERROR SET MAX SEGMENT LENGTH"),
  3    78     2 err103 char(50) init("UNIMPLEMENTED DRL FILACT FUNCTION (^i)"),
  3    79     2 err999 char(50) init("dummy");
  3    80 
  3    81 /*   END INCLUDE FILE gtss_pnterr.incl.pl1 */
      417 
      418 
  4     1 /* BEGIN INCLUDE FILE gtss_ust_ext_.incl.pl1 */
  4     2 /* UST: User Status Table 
  4     3*   definitions based on 
  4     4*   System Tables, Order number DD14-01E, January 1981
  4     5*   Section 15, Time Sharing System
  4     6*
  4     7*   Authors: Robert J. Grimes	Created
  4     8*   -	  Albert N. Kepner	  1978
  4     9*   -	  Robert M. May
  4    10*   -	  David B. Ward
  4    11*   Change:  Dave Ward	02/23/79 Level 4 numbering.
  4    12*   Change:  Ron Barstad  83-07-12 Repaired damaged formating and word offset comments
  4    13*                                  Brought up to 4JS3 functionality
  4    14**/
  4    15 /* octal word offsets of entries */
  4    16 dcl 1 gtss_ust_ext_$ust aligned ext,
  4    17       3 gtss_ust,
  4    18 /* 0-1  */	4 lid		bit (72),
  4    19 /* 2    */	4 lstp		bit (36),
  4    20 /* 3    */	4 ltin		bit (36),
  4    21 /* 4    */	4 lstio,
  4    22 			5 no_of_chars_by_8  fixed bin (18) uns unal,
  4    23 			5 no_of_disk_io     fixed bin (18) uns unal,
  4    24 /* 5    */	4 lsnub		bit (36),
  4    25 /* 6-7  */	4 lchg		bit (72),
  4    26 /* 10   */	4 lbuf,
  4    27 			5 address		bit (18)unaligned,
  4    28 			5 tally		bit (1)unaligned,
  4    29 			5 terminal_type	bit (5)unaligned,
  4    30 			5 station_id	bit (12)unaligned,
  4    31 /* 11-12 */	4 liost (0:1)	bit (36),
  4    32 /* 13   */	4 lcc		bit (36),
  4    33 /* 14   */	4 lback,
  4    34 			5 fill1		bit (18) unaligned,
  4    35 			5 gwake		fixed bin (17) unaligned,
  4    36 /* 15   */	4 lflag,
  4    37 			5 mp_list		bit (18) unaligned,
  4    38 			5 flags unaligned,
  4    39 				6 b18		bit (1) unaligned,
  4    40 				6 b19		bit (1) unaligned,
  4    41 				6 b20		bit (1) unaligned,
  4    42 				6 b21		bit (1) unaligned,
  4    43 				6 b22		bit (1) unaligned,
  4    44 				6 b23		bit (1) unaligned,
  4    45 				6 b24		bit (1) unaligned,
  4    46 				6 b25		bit (1) unaligned,
  4    47 				6 b26		bit (1) unaligned,
  4    48 				6 b27		bit (1) unaligned,
  4    49 				6 b28		bit (1) unaligned,
  4    50 				6 b29		bit (1) unaligned,
  4    51 				6 b30		bit (1) unaligned,
  4    52 				6 b31		bit (1) unaligned,
  4    53 				6 b32		bit (1) unaligned,
  4    54 				6 b33		bit (1) unaligned,
  4    55 				6 b34		bit (1) unaligned,
  4    56 				6 b35		bit (1) unaligned,
  4    57 /* 16   */	4 lkdss		bit (36),
  4    58 /* 17   */	4 lfile,
  4    59 			5 program_stack	fixed bin (17) unal,
  4    60 			5 file_list_ptr	bit (18) unal,
  4    61 /* 20   */	4 lttys		bit (36),
  4    62 /* 21   */	4 lswth,
  4    63 			5 b0		bit (1) unaligned,
  4    64 			5 b1		bit (1) unaligned,
  4    65 			5 b2		bit (1) unaligned,
  4    66 			5 b3		bit (1) unaligned,
  4    67 			5 b4		bit (1) unaligned,
  4    68 			5 b5		bit (1) unaligned,
  4    69 			5 b6		bit (1) unaligned,
  4    70 			5 b7		bit (1) unaligned,
  4    71 			5 b8		bit (1) unaligned,
  4    72 			5 b9		bit (1) unaligned,
  4    73 			5 b10		bit (1) unaligned,
  4    74 			5 b11		bit (1) unaligned,
  4    75 			5 b12		bit (1) unaligned,
  4    76 			5 b13		bit (1) unaligned,
  4    77 			5 b14		bit (1) unaligned,
  4    78 			5 b15		bit (1) unaligned,
  4    79 			5 b16		bit (1) unaligned,
  4    80 			5 b17		bit (1) unaligned,
  4    81 			5 b18		bit (1) unaligned,
  4    82 			5 b19		bit (1) unaligned,
  4    83 			5 b20		bit (1) unaligned,
  4    84 			5 b21		bit (1) unaligned,
  4    85 			5 b22		bit (1) unaligned,
  4    86 			5 b23		bit (1) unaligned,
  4    87 			5 b24		bit (1) unaligned,
  4    88 			5 b25		bit (1) unaligned,
  4    89 			5 b26		bit (1) unaligned,
  4    90 			5 b27		bit (1) unaligned,
  4    91 			5 b28		bit (1) unaligned,
  4    92 			5 b29		bit (1) unaligned,
  4    93 			5 b30		bit (1) unaligned,
  4    94 			5 b31		bit (1) unaligned,
  4    95 			5 b32		bit (1) unaligned,
  4    96 			5 b33		bit (1) unaligned,
  4    97 			5 b34		bit (1) unaligned,
  4    98 			5 b35		bit (1) unaligned,
  4    99 /* 22   */	4 lsize,
  4   100 			5 bar		fixed bin (17) unaligned,
  4   101 			5 limit		bit (18) unaligned,
  4   102 /* 23... */	4 lswap,
  4   103 			5 fill		bit (18) unal,
  4   104 			5 size		bit (18) unal,
  4   105 /* ...24 */	4 transfer_cell	bit (36) unal,
  4   106 /* 25   */	4 lerrm		bit (36),
  4   107 /* 26-37 */	4 lcfil (0:9)	bit (36),
  4   108 /* 40   */	4 lsybc,
  4   109 			5 b0_17		fixed bin (17) unaligned,
  4   110 			5 b18_35		fixed bin (17) unaligned,
  4   111 /* 41-42 */	4 lstem (0:1)	bit (36),
  4   112 /* 43    */	4 lcals,
  4   113 			5 b0_17		fixed bin (17) unaligned,
  4   114 			5 b18_35		bit (18) unaligned,
  4   115 /* 44-51 */	4 subsystems (3),
  4   116 			5 content_lswap,
  4   117 				6 fill		bit (18) unal,
  4   118 				6 size		bit (18) unal,
  4   119 			5 tally_address	fixed bin (17) unaligned,
  4   120 			5 ss_flags	bit (18) unaligned,
  4   121 /* 52   */	4 ltalc,
  4   122 			5 tod		fixed bin (17) unaligned,
  4   123 			5 startup		fixed bin (17) unaligned,
  4   124 /* 53   */	4 lspts		fixed bin (35),
  4   125 /* 54   */	4 lflg2,
  4   126 			5 b0		bit (1) unaligned,
  4   127 			5 b1		bit (1) unaligned,
  4   128 			5 b2		bit (1) unaligned,
  4   129 			5 b3		bit (1) unaligned,
  4   130 			5 b4		bit (1) unaligned,
  4   131 			5 b5		bit (1) unaligned,
  4   132 			5 b6		bit (1) unaligned,
  4   133 			5 b7		bit (1) unaligned,
  4   134 			5 b8		bit (1) unaligned,
  4   135 			5 b9		bit (1) unaligned,
  4   136 			5 b10		bit (1) unaligned,
  4   137 			5 b11		bit (1) unaligned,
  4   138 			5 b12		bit (1) unaligned,
  4   139 			5 b13		bit (1) unaligned,
  4   140 			5 b14		bit (1) unaligned,
  4   141 			5 b15		bit (1) unaligned,
  4   142 			5 b16		bit (1) unaligned,
  4   143 			5 b17		bit (1) unaligned,
  4   144 			5 b18		bit (1) unaligned,
  4   145 			5 b19		bit (1) unaligned,
  4   146 			5 b20		bit (1) unaligned,
  4   147 			5 b21		bit (1) unaligned,
  4   148 			5 b22		bit (1) unaligned,
  4   149 			5 b23		bit (1) unaligned,
  4   150 			5 b24		bit (1) unaligned,
  4   151 			5 b25		bit (1) unaligned,
  4   152 			5 b26		bit (1) unaligned,
  4   153 			5 b27		bit (1) unaligned,
  4   154 			5 b28		bit (1) unaligned,
  4   155 			5 b29		bit (1) unaligned,
  4   156 			5 b30		bit (1) unaligned,
  4   157 			5 b31		bit (1) unaligned,
  4   158 			5 b32		bit (1) unaligned,
  4   159 			5 b33		bit (1) unaligned,
  4   160 			5 b34		bit (1) unaligned,
  4   161 			5 b35		bit (1) unaligned,
  4   162 /* 55-60 */	4 lsftm (0:3)	bit (36),
  4   163 /* 61    */	4 lsprt		fixed bin (35),
  4   164 /* 62    */	4 ltrm		bit (36),
  4   165 /* 63    */	4 linno		fixed bin (35),
  4   166 /* 64    */	4 lincr		fixed bin (35),
  4   167 /* 65    */	4 ltdes		bit (36),
  4   168 /* 66    */	4 lbptr		bit (36),
  4   169 /* 67    */	4 lpptr,
  4   170 			5 last_file_pat_ptr	bin (18) uns unal,
  4   171 			5 lpptr_reserved	bin (18) uns unal,
  4   172 /* 70    */	4 lsclp		bit (36),
  4   173 /* 71    */	4 limit		fixed bin (35),
  4   174 /* 72    */	4 lacpt,
  4   175 			5 jout_pat_offset	bit (18) unal,
  4   176 			5 permissions unal,
  4   177 				6 lodx		bit (1) unal,
  4   178 				6 cardin		bit (1) unal,
  4   179 				6 talk		bit (1) unal,
  4   180 				6 lods		bit (1) unal,
  4   181 			5 cardin_urgency	bit (14) unal,
  4   182 /* 73    */	4 ldrl,
  4   183 			5 ilc		bit (18) unaligned,
  4   184 			5 code		fixed bin (17) unaligned,
  4   185 /* 74    */	4 ljsnb		bit (36),
  4   186 /* 75    */	4 ltm0		bit (36),
  4   187 /* 76    */	4 ltm1		bit (36),
  4   188 /* 77    */	4 ltm2		bit (36),
  4   189 /* 100   */	4 ltm3		bit (36),
  4   190 /* 101   */	4 ltm4		bit (36),
  4   191 /* 102   */	4 ltm5		bit (36),
  4   192 /* 103   */	4 ltmwt		bit (36),
  4   193 /* 104   */	4 ltmrs		bit (36),
  4   194 /* 105   */	4 ltc0		bit (36),
  4   195 /* 106   */	4 ltc1		bit (36),
  4   196 /* 107   */	4 ltc2		bit (36),
  4   197 /* 110   */	4 lct3		bit (36),
  4   198 /* 111   */	4 ltc4		bit (36),
  4   199 /* 112   */	4 ltc5		bit (36),
  4   200 /* 113   */	4 ltcw		bit (36),
  4   201 /* 114   */	4 lkst		bit (36),
  4   202 /* 115   */	4 lkst2		bit (36),
  4   203 /* 116   */	4 lkcc		bit (36),
  4   204 /* 117   */	4 lkms		bit (36),
  4   205 /* 120-121 */	4 lksdc (0:1)	bit (36),
  4   206 /* 122   */	4 lkntp		bit (36),
  4   207 /* 123   */	4 lkrdc		bit (36),
  4   208 /* 124   */	4 lpqf		bit (36),
  4   209 /* 125   */	4 lpqb		bit (36),
  4   210 /* 126   */	4 lustl		bit (36),
  4   211 /* 127   */	4 ltemp		bit (36),
  4   212 /* 130   */	4 lrtll,
  4   213 			5 word_length	fixed bin unaligned,
  4   214 			5 char_length	fixed bin unaligned,
  4   215 /* 131   */	4 ltim		bit (36),
  4   216 /* 132   */	4 lcfio,
  4   217 			5 sect_out	fixed bin(18)unsigned unal,
  4   218 			5 sect_in		fixed bin(18)unsigned unal,
  4   219 /* 133   */	4 lcfst,
  4   220 			5 initial_sect_out	fixed bin(18)unsigned unal,
  4   221 			5 start_term	fixed bin(18)unsigned unal,
  4   222 /* 134   */	4 lcmpt		bit (36),
  4   223 /* 135   */	4 lcjid		bit (36),
  4   224 /* 136-137 */	4 lrcal (0:1)	bit (36),
  4   225 /* 140   */	4 lrdta		bit (36),
  4   226 /* 141   */	4 lrrsk		bit (36),
  4   227 /* 142   */	4 lrskd		bit (36),
  4   228 /* 143   */	4 lrcc		bit (36),
  4   229 /* 144-145 */	4 lrsts (0:1)	bit (36),
  4   230 /* 146   */	4 lrtm		bit (36),
  4   231 /* 147   */	4 lswt2,
  4   232 			5 b0		bit (1) unaligned,
  4   233 			5 b1		bit (1) unaligned,
  4   234 			5 b2		bit (1) unaligned,
  4   235 			5 b3		bit (1) unaligned,
  4   236 			5 b4		bit (1) unaligned,
  4   237 			5 b5		bit (1) unaligned,
  4   238 			5 b6		bit (1) unaligned,
  4   239 			5 b7		bit (1) unaligned,
  4   240 			5 b8		bit (1) unaligned,
  4   241 			5 b9		bit (1) unaligned,
  4   242 			5 b10		bit (1) unaligned,
  4   243 			5 b11		bit (1) unaligned,
  4   244 			5 b12		bit (1) unaligned,
  4   245 			5 b13		bit (1) unaligned,
  4   246 			5 b14		bit (1) unaligned,
  4   247 			5 b15		bit (1) unaligned,
  4   248 			5 b16		bit (1) unaligned,
  4   249 			5 b17		bit (1) unaligned,
  4   250 			5 b18		bit (1) unaligned,
  4   251 			5 b19		bit (1) unaligned,
  4   252 			5 b20		bit (1) unaligned,
  4   253 			5 b21		bit (1) unaligned,
  4   254 			5 b22		bit (1) unaligned,
  4   255 			5 b23		bit (1) unaligned,
  4   256 			5 b24		bit (1) unaligned,
  4   257 			5 b25		bit (1) unaligned,
  4   258 			5 b26		bit (1) unaligned,
  4   259 			5 b27		bit (1) unaligned,
  4   260 			5 b28		bit (1) unaligned,
  4   261 			5 b29		bit (1) unaligned,
  4   262 			5 b30		bit (1) unaligned,
  4   263 			5 b31		bit (1) unaligned,
  4   264 			5 b32		bit (1) unaligned,
  4   265 			5 b33		bit (1) unaligned,
  4   266 			5 b34		bit (1) unaligned,
  4   267 			5 b35		bit (1) unaligned,
  4   268 /* 150   */	4 llsnb		bit (36),
  4   269 /* 151   */	4 lesq		bit (36),
  4   270 /* 152-153 */	4 lumc (0:1)	bit (36),
  4   271 /* 154-155 */	4 lfnam (0:1)	bit (36),
  4   272 /* 156   */	4 lopts		bit (36),
  4   273 /* 157   */	4 licec,
  4   274 			5 b0_17		bit (18) unaligned,
  4   275 			5 b18_35		fixed bin (17) unaligned,
  4   276 /* 160   */	4 lflg3,
  4   277 			5 b0		bit (1) unaligned,
  4   278 			5 b1		bit (1) unaligned,
  4   279 			5 b2		bit (1) unaligned,
  4   280 			5 b3		bit (1) unaligned,
  4   281 			5 b4		bit (1) unaligned,
  4   282 			5 b5		bit (1) unaligned,
  4   283 			5 b6		bit (1) unaligned,
  4   284 			5 b7		bit (1) unaligned,
  4   285 			5 b8		bit (1) unaligned,
  4   286 			5 b9		bit (1) unaligned,
  4   287 			5 b10		bit (1) unaligned,
  4   288 			5 b11		bit (1) unaligned,
  4   289 			5 b12		bit (1) unaligned,
  4   290 			5 b13		bit (1) unaligned,
  4   291 			5 b14		bit (1) unaligned,
  4   292 			5 b15		bit (1) unaligned,
  4   293 			5 b16		bit (1) unaligned,
  4   294 			5 b17		bit (1) unaligned,
  4   295 			5 b18		bit (1) unaligned,
  4   296 			5 b19		bit (1) unaligned,
  4   297 			5 b20		bit (1) unaligned,
  4   298 			5 b21		bit (1) unaligned,
  4   299 			5 b22		bit (1) unaligned,
  4   300 			5 b23		bit (1) unaligned,
  4   301 			5 b24		bit (1) unaligned,
  4   302 			5 b25		bit (1) unaligned,
  4   303 			5 b26		bit (1) unaligned,
  4   304 			5 b27		bit (1) unaligned,
  4   305 			5 b28		bit (1) unaligned,
  4   306 			5 b29		bit (1) unaligned,
  4   307 			5 b30		bit (1) unaligned,
  4   308 			5 b31		bit (1) unaligned,
  4   309 			5 b32		bit (1) unaligned,
  4   310 			5 b33		bit (1) unaligned,
  4   311 			5 b34		bit (1) unaligned,
  4   312 			5 b35		bit (1) unaligned,
  4   313 /* 161-163 */	4 lpage (0:2)	bit (36),
  4   314 /* 164   */	4 lsit1		bit (36),
  4   315 /* 165   */	4 lsit2		bit (36),
  4   316 /* 166   */	4 lsit3		bit (36),
  4   317 /* 167   */	4 lsit4		bit (36),
  4   318 /* The following entries are maintained by gtss and are not found in TSS UST */
  4   319 /* 170   */	4 lxxx, /* program stack index, offset from gtss_ust */
  4   320 			5 b0_17		fixed bin (17) unaligned,
  4   321 			5 b18_35		bit (18) unaligned, /* not used */
  4   322 /* 171-175 */	4 lprgs (5),
  4   323 			5 b0_17		fixed bin (17) unaligned,
  4   324 			5 b18_35		fixed bin (17) unaligned,
  4   325 /* 176   */	4 fill	bit (36),
  4   326 /* 177   */	4 remote_io_buffer aligned,
  4   327 			5 buffer_control_word,
  4   328 				6 current_line_pointer  bit (18)unal,
  4   329 				6 buffer_threshold_address  bit (18)unal,
  4   330 			5 number_words_transmitted	fixed bin (17)unal,
  4   331 			5 FILL1			fixed bin (17)unal,
  4   332 			5 count_of_characters_transmitted fixed bin (17)unal,
  4   333 			5 FILL2			fixed bin (17)unal,
  4   334 			5 characters_transmitted (244) char (1) unal,
  4   335 /* 277   */	4 word_after_ust		bit (36) aligned;
  4   336 
  4   337 /*   END INCLUDE FILE gtss_ust_ext_.incl.pl1 */
      419 
      420 
  5     1 /* BEGIN INCLUDE FILE gtss_entry_dcls.incl.pl1 */
  5     2 /*
  5     3*  Created: (Wardd Multics)  06/30/78 1624.8 mst Fri 
  5     4*  Modified: Ron Barstad  84-02-24  Fixed wrong and obsolete entries
  5     5**/
  5     6 
  5     7 /**  gtss external entry variables.		**/
  5     8 dcl  com_err_                                   entry() options(variable);
  5     9 dcl  gtss_CFP_abort_                            entry options(variable);
  5    10 dcl  gtss_CFP_break_                            entry options(variable);
  5    11 dcl  gtss_CFP_input_                            entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  5    12 dcl  gtss_CFP_output_                           entry (ptr, ptr, fixed bin(21), fixed bin(35));
  5    13 dcl  gtss_abandon_CFP_                          entry options(variable);
  5    14 dcl  gtss_abort_dump_                           entry (fixed bin(18));
  5    15 dcl  gtss_abort_subsystem_                      entry options (variable);
  5    16 dcl  gtss_abort_subsystem_$not_imp              entry (ptr, fixed bin(24));
  5    17 dcl  gtss_abs_login_banner_		        entry() returns(char(*));
  5    18 dcl  gtss_abs_logout_banner_		        entry() returns(char(*));
  5    19 dcl  gtss_abs_$abs_equiv                        entry options(variable);
  5    20 dcl  gtss_abs_$cpu_runout		        entry (ptr, char(4));
  5    21 dcl  gtss_abs_$create_absin                     entry() returns(char(*));
  5    22 dcl  gtss_abs_$dabt_check		        entry (ptr, char(4));
  5    23 dcl  gtss_abs_$get_id                           entry (char(5)) returns(char(19));
  5    24 dcl  gtss_abs_$get_drm                          entry() returns(char(*));
  5    25 dcl  gtss_adjust_size_                          entry (ptr);
  5    26 dcl  gtss_aft_$add                              entry (char(8), fixed bin(24), fixed bin(35));
  5    27 dcl  gtss_aft_$delete                           entry (char(8), fixed bin(24), fixed bin(35));
  5    28 dcl  gtss_aft_$find                             entry (char(8), fixed bin(24), fixed bin(35));
  5    29 dcl  gtss_aft_$initialize                       entry (fixed bin(35));
  5    30 dcl  gtss_ascii_bcd_                            entry (ptr, fixed bin, ptr);
  5    31 dcl  gtss_attributes_mgr_$get                   entry (ptr, fixed bin(35));
  5    32 dcl  gtss_attributes_mgr_$set                   entry (ptr, fixed bin(35));
  5    33 dcl  gtss_bcd_ascii_                            entry (ptr, fixed bin(24), ptr);
  5    34 dcl  gtss_bcd_ascii_$lc                         entry (ptr, fixed bin(24), ptr);
  5    35 dcl  gtss_break_vector_                         entry ();
  5    36 dcl  gtss_break_vector_$drl_in_progress         entry() returns(bit(1));
  5    37 dcl  gtss_break_vector_$status                  entry() returns(bit(1));
  5    38 dcl  gtss_build_                                entry options(variable);
  5    39 dcl  gtss_com_err_                              entry options(variable);
  5    40 dcl  gtss_derail_processor_                     entry (ptr, char(*), ptr, ptr, bit(1) aligned) /* called at fault time instead of signal_ */;
  5    41 dcl  gtss_derail_processor_$set                 entry options(variable);
  5    42 dcl  gtss_dq_$catp                              entry (char (5), ptr, fixed bin (18) unsigned);
  5    43 dcl  gtss_dq_$create                            entry (bit(1));
  5    44 dcl  gtss_dq_$dibp                              entry (char(5), ptr);
  5    45 dcl  gtss_dq_$entries_info		        entry (ptr, fixed bin (18) unsigned, fixed bin (18) unsigned);
  5    46 dcl  gtss_dq_$hdrp                              entry (ptr);
  5    47 dcl  gtss_dq_$mod_js		        entry (char(5), fixed bin (6) unsigned, bit (1));
  5    48 dcl  gtss_dq_$open_exc		        entry (bit(1));
  5    49 dcl  gtss_dq_$open_gen		        entry (bit(1));
  5    50 dcl  gtss_drl_abort_                            entry (ptr, fixed bin);
  5    51 dcl  gtss_drl_addmem_                           entry (ptr, fixed bin);
  5    52 dcl  gtss_drl_callss_                           entry (ptr, fixed bin);
  5    53 dcl  gtss_drl_corfil_                           entry (ptr, fixed bin);
  5    54 dcl  gtss_drl_defil_                            entry (ptr, fixed bin);
  5    55 dcl  gtss_drl_defil_$subr                       entry (ptr, ptr, ptr);
  5    56 dcl  gtss_drl_dio_                              entry (ptr, fixed bin);
  5    57 dcl  gtss_drl_drlimt_                           entry (ptr, fixed bin);
  5    58 dcl  gtss_drl_drlsav_                           entry (ptr, fixed bin);
  5    59 dcl  gtss_drl_filact_                           entry (ptr, fixed bin);
  5    60 dcl  gtss_drl_filsp_                            entry (ptr, fixed bin);
  5    61 dcl  gtss_drl_grow_                             entry (ptr, fixed bin);
  5    62 dcl  gtss_drl_gwake_                            entry (ptr, fixed bin);
  5    63 dcl  gtss_drl_jsts_                             entry (ptr, fixed bin);
  5    64 dcl  gtss_drl_kin_                              entry (ptr, fixed bin);
  5    65 dcl  gtss_drl_kotnow_                           entry (ptr, fixed bin);
  5    66 dcl  gtss_drl_kotnow_$gtss_drl_kout_            entry (ptr, fixed bin);
  5    67 dcl  gtss_drl_koutn_                            entry (ptr, fixed bin);
  5    68 dcl  gtss_drl_morlnk_                           entry (ptr, fixed bin);
  5    69 dcl  gtss_drl_msub_                             entry (ptr, fixed bin);
  5    70 dcl  gtss_drl_objtim_                           entry (ptr, fixed bin);
  5    71 dcl  gtss_drl_part_                             entry (ptr, fixed bin);
  5    72 dcl  gtss_drl_pasaft_                           entry (ptr, fixed bin);
  5    73 dcl  gtss_drl_pasdes_                           entry (ptr, fixed bin);
  5    74 dcl  gtss_drl_pasust_                           entry (ptr, fixed bin);
  5    75 dcl  gtss_drl_pdio_                             entry (ptr, fixed bin);
  5    76 dcl  gtss_drl_prgdes_                           entry (ptr, fixed bin);
  5    77 dcl  gtss_drl_pseudo_                           entry (ptr, fixed bin);
  5    78 dcl  gtss_drl_relmem_                           entry (ptr, fixed bin);
  5    79 dcl  gtss_drl_restor_                           entry (ptr, fixed bin);
  5    80 dcl  gtss_drl_retfil_                           entry (ptr, fixed bin);
  5    81 dcl  gtss_drl_return_                           entry (ptr, fixed bin);
  5    82 dcl  gtss_drl_rew_                              entry (ptr, fixed bin);
  5    83 dcl  gtss_drl_rstswh_                           entry (ptr, fixed bin);
  5    84 dcl  gtss_drl_setlno_                           entry (ptr, fixed bin);
  5    85 dcl  gtss_drl_setswh_                           entry (ptr, fixed bin);
  5    86 dcl  gtss_drl_snumb_                            entry (ptr, fixed bin);
  5    87 dcl  gtss_drl_spawn_                            entry (ptr, fixed bin);
  5    88 dcl  gtss_drl_spawn_$gtss_drl_pasflr_           entry (ptr, fixed bin);
  5    89 dcl  gtss_drl_stoppt_                           entry (ptr, fixed bin);
  5    90 dcl  gtss_drl_switch_                           entry (ptr, fixed bin);
  5    91 dcl  gtss_drl_sysret_                           entry (ptr, fixed bin);
  5    92 dcl  gtss_drl_t_cfio_                           entry (ptr, fixed bin);
  5    93 dcl  gtss_drl_t_cmov_                           entry (ptr, fixed bin);
  5    94 dcl  gtss_drl_t_err_                            entry (ptr, fixed bin);
  5    95 dcl  gtss_drl_t_goto_                           entry (ptr, fixed bin);
  5    96 dcl  gtss_drl_t_linl_                           entry (ptr, fixed bin);
  5    97 dcl  gtss_drl_t_rscc_                           entry (ptr, fixed bin);
  5    98 dcl  gtss_drl_tapein_                           entry (ptr, fixed bin);
  5    99 dcl  gtss_drl_task_                             entry (ptr, fixed bin);
  5   100 dcl  gtss_drl_termtp_                           entry (ptr, fixed bin);
  5   101 dcl  gtss_drl_time_                             entry (ptr, fixed bin);
  5   102 dcl  gtss_drun_                                 entry (bit(1));
  5   103 dcl  gtss_dsd_lookup_                           entry (char(8) var) returns(fixed bin(24));
  5   104 dcl  gtss_dsd_process_                          entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  5   105 dcl  gtss_edit_dsd_                             entry (ptr, fixed bin(21)) returns(fixed bin(24));
  5   106 dcl  gtss_mcfc_empty                            entry (char(*) var);
  5   107 dcl  gtss_expand_pathname_                      entry (ptr, char(*), char(*), fixed bin(35));
  5   108 dcl  gtss_expand_pathname_$verify_umc           entry (ptr, char(*), char(*), bit(18), fixed bin(35));
  5   109 dcl  gtss_fault_processor_                      entry options(variable);
  5   110 dcl  gtss_find_cond_frame_		        entry (char(32) var) returns(ptr);
  5   111 dcl  gtss_fault_processor_$timer_runout         entry (ptr, char(*));
  5   112 dcl  gtss_filact_error_status_                  entry (fixed bin(35))returns(bit(12));
  5   113 dcl  gtss_filact_funct02_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   114 dcl  gtss_filact_funct03_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   115 dcl  gtss_filact_funct04_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   116 dcl  gtss_filact_funct05_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   117 dcl  gtss_filact_funct08_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   118 dcl  gtss_filact_funct10_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   119 dcl  gtss_filact_funct11_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   120 dcl  gtss_filact_funct14_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   121 dcl  gtss_filact_funct18_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   122 dcl  gtss_filact_funct19_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   123 dcl  gtss_filact_funct21_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   124 dcl  gtss_filact_funct22_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   125 dcl  gtss_mcfc_init_                            entry (char(*) var);
  5   126 dcl  gtss_interp_prim_                          entry options(variable);
  5   127 dcl  gtss_interp_prim_$callss                   entry (char(4), ptr);
  5   128 dcl  gtss_interp_prim_$sysret                   entry options(variable);
  5   129 dcl  gtss_interp_prim_$t_goto                   entry (char(4));
  5   130 dcl  gtss_ios_change_size_                      entry (fixed bin(24), fixed bin(24), bit(1), fixed bin(24), fixed bin(35));
  5   131 dcl  gtss_ios_close_                            entry (fixed bin(24), ptr, fixed bin(35));
  5   132 dcl  gtss_ios_exchange_names_                   entry (fixed bin(24), fixed bin(24), fixed bin(24), fixed bin(35));
  5   133 dcl  gtss_ios_initialize_                       entry options(variable);
  5   134 dcl  gtss_ios_io_                               entry (fixed bin(24), ptr, ptr, fixed bin(24), fixed bin(24), fixed bin(35));
  5   135 dcl  gtss_ios_open_                             entry (fixed bin(24), char(168), char(32), bit(6), bit(1), ptr, ptr, fixed bin(35));
  5   136 dcl  gtss_ios_position_                         entry (fixed bin(24), fixed bin(24), fixed bin(24), bit(6), ptr);
  5   137 dcl  gtss_mcfc_$delete		        entry (fixed bin(24), char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  5   138 dcl  gtss_mcfc_$open                            entry (char(*), char(*), bit(6), bit(36) aligned, ptr, fixed bin(35));
  5   139 dcl  gtss_mcfc_$close                           entry (char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  5   140 dcl  gtss_read_starCFP_                         entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  5   141 dcl  gtss_read_starCFP_$last_os                 entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  5   142 dcl  gtss_run_subsystem_                        entry (fixed bin(24));
  5   143 dcl  gtss_run_subsystem_$finish                 entry options(variable);
  5   144 dcl  gtss_run_subsystem_$restor                 entry (fixed bin(24), ptr);
  5   145 dcl  gtss_run_subsystem_$restor_perm            entry (fixed bin(24), ptr, fixed bin(18));
  5   146 dcl  gtss_set_slave_                            entry (fixed bin (24), ptr);
  5   147 dcl  gtss_set_slave_$load_bar                   entry (fixed bin (17));
  5   148 dcl  gtss_update_safe_store_                    entry (ptr);
  5   149 dcl  gtss_verify_access_		        entry (char(*), char(*), fixed bin(24), bit(6), bit(12) aligned);
  5   150 dcl  gtss_verify_access_$check_forced_access    entry (char(*), char(*), fixed bin(24));
  5   151 dcl  gtss_write_starCFP_                        entry (ptr, ptr, fixed bin(21), fixed bin(35));
  5   152 /*   END INCLUDE FILE gtss_entry_dcls.incl.pl1 */
      421 
      422      end gtss_drl_kotnow_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/10/84  1043.2  gtss_drl_kotnow_.pl1              >spec>on>7105>gtss_drl_kotnow_.pl1
413          1    12/15/83  1100.4  mc.incl.pl1                       >ldd>include>mc.incl.pl1
415          2    09/09/83  1713.8  gtss_ext_.incl.pl1                >ldd>include>gtss_ext_.incl.pl1
417          3    12/10/84  1029.8  gtss_pnterr.incl.pl1              >spec>on>7105>gtss_pnterr.incl.pl1
419          4    09/09/83  1714.3  gtss_ust_ext_.incl.pl1            >ldd>include>gtss_ust_ext_.incl.pl1
421          5    12/10/84  1029.7  gtss_entry_dcls.incl.pl1          >spec>on>7105>gtss_entry_dcls.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
LF                              003434 constant        char(1)                  initial unaligned dcl 287 ref 262
M                                      based           char                     unaligned dcl 282 set ref 257* 257 261 262 262*
NUL                                    constant        char(1)                  initial unaligned dcl 393 ref 141
addr                                                   builtin function         dcl 376 ref 125 186 194 194 194 194 198 255 257 261
                                                                                  262 262 300 323 324 325 327 327 329 329 330 355
                                                                                  356
addrel                                                 builtin function         dcl 377 ref 127 140 159 174 184
address                                based           bit(18)                  level 2 in structure "tallyb" packed unaligned
                                                                                  dcl 359 in procedure "tallyb_sc" set ref 354 355*
address                                based           bit(18)                  level 2 in structure "tally" packed unaligned
                                                                                  dcl 407 in procedure "gtss_drl_kout_" ref 160 162
                                                                                  175 184
address                                based           bit(18)                  level 2 in structure "tally" packed unaligned
                                                                                  dcl 303 in procedure "tally_id" set ref 299 300*
address                                based           bit(18)                  level 2 in structure "tally" packed unaligned
                                                                                  dcl 333 in procedure "tally_sc" set ref 323 329*
arg_ptr                         000100 automatic       pointer                  initial dcl 378 set ref 127* 131 132 140 145 151 159
                                                                                  378*
arglist                                based           structure                level 1 dcl 403
ascii_line                      000102 automatic       char(1000)               dcl 379 set ref 194 194 198
bcd_buffer                             based           bit(6)                   array unaligned dcl 380 set ref 194 194
buffer                          000530 automatic       char(4096)               unaligned dcl 278 set ref 255 257 261 262 262
bufptr                          002530 automatic       pointer                  initial dcl 279 set ref 255* 268* 279*
char_pos                  0(33)        based           bit(3)                   level 2 in structure "tally" packed unaligned
                                                                                  dcl 333 in procedure "tally_sc" set ref 325 327*
char_pos                  0(34)        based           bit(2)                   level 2 in structure "tallyb" packed unaligned
                                                                                  dcl 359 in procedure "tallyb_sc" set ref 354 356*
chars                     0(18)        based           bit(12)                  level 2 packed unaligned dcl 407 ref 161 183
code                            000474 automatic       fixed bin(35,0)          dcl 381 set ref 227* 232 268* 273
count                           002556 automatic       fixed bin(24,0)          dcl 338 set ref 324* 326 328
do_print                        000010 internal static bit(1)                   initial unaligned dcl 382 set ref 219* 219 226 267
eol                       0(18)        based           bit(18)                  level 2 packed unaligned dcl 403 ref 131 132 140
eol_chars                              based           char(4)                  dcl 383 ref 141 142
eol_ptr                         000476 automatic       pointer                  initial dcl 384 set ref 140* 141 142 146* 211* 384*
err49                  1130     000000 constant        char(50)                 initial level 2 packed unaligned dcl 3-9 set ref
                                                                                  203*
fixed                                                  builtin function         dcl 385 ref 127 132 132 133 133 140 151 151 152 152
                                                                                  159 160 161 162 166 166 167 167 175 175 176 176
                                                                                  183 184 186 194 194 203 203 299 299 323 324 325
                                                                                  354 354
gseg                            000500 automatic       pointer                  initial dcl 386 set ref 126* 127 140 159 174 184
                                                                                  386*
gtss_abort_subsystem_           000026 constant        entry                    external dcl 5-15 ref 133 152 167 176 203 234
gtss_bcd_ascii_                 000030 constant        entry                    external dcl 5-33 ref 194
gtss_ext_$gtss_slave_area_seg   000014 external static pointer                  array dcl 2-20 ref 126
gtss_ext_$last_k_was_out        000016 external static bit(1)                   dcl 2-23 set ref 225 251*
gtss_ext_$put_chars             000020 external static entry variable           dcl 2-27 ref 227 268
gtss_ext_$stack_level_          000022 external static fixed bin(17,0)          dcl 2-31 ref 126
gtss_pnterr                     000000 constant        structure                level 1 packed unaligned dcl 3-9
gtss_ust                        000024 external static structure                level 2 dcl 4-16
gtss_ust_ext_$ust               000024 external static structure                level 1 dcl 4-16
i                               000502 automatic       fixed bin(17,0)          dcl 387 in procedure "gtss_drl_kout_" set ref 165*
                                                                                  166 174*
i                               002532 automatic       fixed bin(24,0)          dcl 280 in procedure "output" set ref 261* 262 262
                                                                                  262
ilc                       4            based           bit(18)                  level 2 packed unaligned dcl 1-56 ref 127 133 133
                                                                                  152 152 167 167 176 176 203 203
increment                              parameter       fixed bin(17,0)          dcl 29 set ref 14 14 124*
iox_$user_output                000012 external static pointer                  dcl 388 set ref 227* 268*
l                               002533 automatic       fixed bin(24,0)          dcl 281 set ref 256* 257 257 261 262 262 268* 275
lbuf                     10     000024 external static structure                level 3 dcl 4-16
limit                    22(18) 000024 external static bit(18)                  level 4 packed unaligned dcl 4-16 ref 132 151 166
                                                                                  175
line_buffer                            based           char(1)                  array unaligned dcl 389 set ref 186
line_len                        000503 automatic       fixed bin(24,0)          dcl 390 set ref 183* 190* 194*
line_ptr                        000504 automatic       pointer                  initial dcl 391 set ref 184* 186* 186 190* 194 194
                                                                                  198* 391*
look_past_chars                 001537 constant        char(3)                  initial unaligned dcl 285 ref 261
lsize                    22     000024 external static structure                level 3 dcl 4-16
lstio                     4     000024 external static structure                level 3 dcl 4-16
mc                                     based           structure                level 1 dcl 1-12
mcp                             000514 automatic       pointer                  dcl 1-10 set ref 31* 125 133* 152* 167* 176* 203*
                                                                                  234*
mcpp                                   parameter       pointer                  dcl 30 ref 14 14 31
new_address               0(16)        based           bit(18)                  level 2 packed unaligned dcl 367 ref 355
new_byte_addres_ov                     based           structure                level 1 dcl 367
new_byte_address                002570 automatic       fixed bin(24,0)          dcl 365 set ref 354* 355 356
new_char_pos              0(34)        based           bit(2)                   level 2 packed unaligned dcl 367 ref 356
no_eol_chars                    000506 automatic       fixed bin(24,0)          dcl 392 set ref 130* 141* 142 142* 146 146* 211 211*
no_of_chars_by_8          4     000024 external static fixed bin(18,0)          level 4 packed unsigned unaligned dcl 4-16 set ref
                                                                                  243* 243 275* 275
null                                                   builtin function         dcl 394 ref 279 308 332 366 378 384 386 391 401
num_tally                       000507 automatic       fixed bin(17,0)          dcl 395 set ref 161* 165
offset                    0(33)        based           bit(3)                   level 2 packed unaligned dcl 407 ref 186 194 194
outlen                                 parameter       fixed bin(24,0)          dcl 223 set ref 222 227* 243 256
outptr                                 parameter       pointer                  dcl 224 set ref 222 227* 257
p                                      parameter       pointer                  dcl 320 in procedure "tally_sc" ref 315 322
p                                      parameter       pointer                  dcl 351 in procedure "tallyb_sc" ref 346 353
p                                      parameter       pointer                  dcl 296 in procedure "tally_id" ref 291 298
position                        002557 automatic       fixed bin(24,0)          dcl 339 set ref 325* 326 328
result                          002560 automatic       fixed bin(24,0)          dcl 340 in procedure "tally_sc" set ref 326* 327
                                                                                  328* 329
result                          002542 automatic       fixed bin(24,0)          dcl 307 in procedure "tally_id" set ref 299* 300
result_ov                              based           structure                level 1 packed unaligned dcl 309
result_overlay                         based           bit(36)                  dcl 341 ref 327 329
result_r18                0(18)        based           bit(18)                  level 2 packed unaligned dcl 309 ref 300
rubout                                 constant        char(1)                  initial unaligned dcl 283 ref 262
scu                                    based           structure                level 1 dcl 1-56 in procedure "gtss_drl_kout_"
scu                      30            based           bit(36)                  array level 2 in structure "mc" packed unaligned
                                                                                  dcl 1-12 in procedure "gtss_drl_kout_" set ref 125
scup                            000516 automatic       pointer                  dcl 1-54 set ref 125* 127 133 133 152 152 167 167
                                                                                  176 176 203 203
search                                                 builtin function         dcl 397 ref 141
substr                                                 builtin function         dcl 398 set ref 262 262* 327 329
tally                    10(18) 000024 external static bit(1)                   level 4 in structure "gtss_ust_ext_$ust" packed
                                                                                  unaligned dcl 4-16 in procedure "gtss_drl_kout_"
                                                                                  set ref 252*
tally                                  based           structure                level 1 dcl 407 in procedure "gtss_drl_kout_"
tally                                  based           structure                level 1 dcl 333 in procedure "tally_sc"
tally                                  based           structure                level 1 dcl 303 in procedure "tally_id"
tally                                  based           bit(18)                  level 2 in structure "arglist" packed unaligned
                                                                                  dcl 403 in procedure "gtss_drl_kout_" ref 145 151
                                                                                  159
tally_address                   000510 automatic       fixed bin(17,0)          dcl 399 set ref 162* 166 174
tally_address_ptrs              000511 automatic       fixed bin(17,0)          dcl 400 set ref 160*
tally_count               0(18)        based           bit(12)                  level 2 in structure "tallyb" packed unaligned
                                                                                  dcl 359 in procedure "tallyb_sc" set ref 354 357*
tally_count               0(18)        based           bit(12)                  level 2 in structure "tally" packed unaligned
                                                                                  dcl 333 in procedure "tally_sc" set ref 324 330*
tally_count               0(18)        based           bit(12)                  level 2 in structure "tally" packed unaligned
                                                                                  dcl 303 in procedure "tally_id" set ref 299 301*
tally_ptr                       002572 automatic       pointer                  initial dcl 366 in procedure "tallyb_sc" set ref
                                                                                  353* 354 354 354 355 356 357 366*
tally_ptr                       002554 automatic       pointer                  initial dcl 332 in procedure "tally_sc" set ref 322*
                                                                                  323 324 325 327 329 330 332*
tally_ptr                       002544 automatic       pointer                  initial dcl 308 in procedure "tally_id" set ref 298*
                                                                                  299 299 300 301 308*
tally_ptr                       000512 automatic       pointer                  initial dcl 401 in procedure "gtss_drl_kout_" set
                                                                                  ref 159* 160 161 162 163* 174* 175 183 184 185 186
                                                                                  187* 192 194 194 199* 401*
tallyb                                 based           structure                level 1 dcl 359
type                      0(30)        based           bit(3)                   level 2 packed unaligned dcl 407 ref 185 192
word_address                    002561 automatic       fixed bin(24,0)          dcl 342 set ref 323* 328

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
abx                                    internal static fixed bin(17,0)          initial dcl 1-42
apx                                    internal static fixed bin(17,0)          initial dcl 1-42
bbx                                    internal static fixed bin(17,0)          initial dcl 1-42
bpx                                    internal static fixed bin(17,0)          initial dcl 1-42
com_err_                        000000 constant        entry                    external dcl 5-8
gtss_CFP_abort_                 000000 constant        entry                    external dcl 5-9
gtss_CFP_break_                 000000 constant        entry                    external dcl 5-10
gtss_CFP_input_                 000000 constant        entry                    external dcl 5-11
gtss_CFP_output_                000000 constant        entry                    external dcl 5-12
gtss_abandon_CFP_               000000 constant        entry                    external dcl 5-13
gtss_abort_dump_                000000 constant        entry                    external dcl 5-14
gtss_abort_subsystem_$not_imp   000000 constant        entry                    external dcl 5-16
gtss_abs_$abs_equiv             000000 constant        entry                    external dcl 5-19
gtss_abs_$cpu_runout            000000 constant        entry                    external dcl 5-20
gtss_abs_$create_absin          000000 constant        entry                    external dcl 5-21
gtss_abs_$dabt_check            000000 constant        entry                    external dcl 5-22
gtss_abs_$get_drm               000000 constant        entry                    external dcl 5-24
gtss_abs_$get_id                000000 constant        entry                    external dcl 5-23
gtss_abs_login_banner_          000000 constant        entry                    external dcl 5-17
gtss_abs_logout_banner_         000000 constant        entry                    external dcl 5-18
gtss_adjust_size_               000000 constant        entry                    external dcl 5-25
gtss_aft_$add                   000000 constant        entry                    external dcl 5-26
gtss_aft_$delete                000000 constant        entry                    external dcl 5-27
gtss_aft_$find                  000000 constant        entry                    external dcl 5-28
gtss_aft_$initialize            000000 constant        entry                    external dcl 5-29
gtss_ascii_bcd_                 000000 constant        entry                    external dcl 5-30
gtss_attributes_mgr_$get        000000 constant        entry                    external dcl 5-31
gtss_attributes_mgr_$set        000000 constant        entry                    external dcl 5-32
gtss_bcd_ascii_$lc              000000 constant        entry                    external dcl 5-34
gtss_break_vector_              000000 constant        entry                    external dcl 5-35
gtss_break_vector_$drl_in_progress
                                000000 constant        entry                    external dcl 5-36
gtss_break_vector_$status       000000 constant        entry                    external dcl 5-37
gtss_build_                     000000 constant        entry                    external dcl 5-38
gtss_com_err_                   000000 constant        entry                    external dcl 5-39
gtss_derail_processor_          000000 constant        entry                    external dcl 5-40
gtss_derail_processor_$set      000000 constant        entry                    external dcl 5-41
gtss_dq_$catp                   000000 constant        entry                    external dcl 5-42
gtss_dq_$create                 000000 constant        entry                    external dcl 5-43
gtss_dq_$dibp                   000000 constant        entry                    external dcl 5-44
gtss_dq_$entries_info           000000 constant        entry                    external dcl 5-45
gtss_dq_$hdrp                   000000 constant        entry                    external dcl 5-46
gtss_dq_$mod_js                 000000 constant        entry                    external dcl 5-47
gtss_dq_$open_exc               000000 constant        entry                    external dcl 5-48
gtss_dq_$open_gen               000000 constant        entry                    external dcl 5-49
gtss_drl_abort_                 000000 constant        entry                    external dcl 5-50
gtss_drl_addmem_                000000 constant        entry                    external dcl 5-51
gtss_drl_callss_                000000 constant        entry                    external dcl 5-52
gtss_drl_corfil_                000000 constant        entry                    external dcl 5-53
gtss_drl_defil_                 000000 constant        entry                    external dcl 5-54
gtss_drl_defil_$subr            000000 constant        entry                    external dcl 5-55
gtss_drl_dio_                   000000 constant        entry                    external dcl 5-56
gtss_drl_drlimt_                000000 constant        entry                    external dcl 5-57
gtss_drl_drlsav_                000000 constant        entry                    external dcl 5-58
gtss_drl_filact_                000000 constant        entry                    external dcl 5-59
gtss_drl_filsp_                 000000 constant        entry                    external dcl 5-60
gtss_drl_grow_                  000000 constant        entry                    external dcl 5-61
gtss_drl_gwake_                 000000 constant        entry                    external dcl 5-62
gtss_drl_jsts_                  000000 constant        entry                    external dcl 5-63
gtss_drl_kin_                   000000 constant        entry                    external dcl 5-64
gtss_drl_kotnow_                000000 constant        entry                    external dcl 5-65
gtss_drl_kotnow_$gtss_drl_kout_ 000000 constant        entry                    external dcl 5-66
gtss_drl_koutn_                 000000 constant        entry                    external dcl 5-67
gtss_drl_morlnk_                000000 constant        entry                    external dcl 5-68
gtss_drl_msub_                  000000 constant        entry                    external dcl 5-69
gtss_drl_objtim_                000000 constant        entry                    external dcl 5-70
gtss_drl_part_                  000000 constant        entry                    external dcl 5-71
gtss_drl_pasaft_                000000 constant        entry                    external dcl 5-72
gtss_drl_pasdes_                000000 constant        entry                    external dcl 5-73
gtss_drl_pasust_                000000 constant        entry                    external dcl 5-74
gtss_drl_pdio_                  000000 constant        entry                    external dcl 5-75
gtss_drl_prgdes_                000000 constant        entry                    external dcl 5-76
gtss_drl_pseudo_                000000 constant        entry                    external dcl 5-77
gtss_drl_relmem_                000000 constant        entry                    external dcl 5-78
gtss_drl_restor_                000000 constant        entry                    external dcl 5-79
gtss_drl_retfil_                000000 constant        entry                    external dcl 5-80
gtss_drl_return_                000000 constant        entry                    external dcl 5-81
gtss_drl_rew_                   000000 constant        entry                    external dcl 5-82
gtss_drl_rstswh_                000000 constant        entry                    external dcl 5-83
gtss_drl_setlno_                000000 constant        entry                    external dcl 5-84
gtss_drl_setswh_                000000 constant        entry                    external dcl 5-85
gtss_drl_snumb_                 000000 constant        entry                    external dcl 5-86
gtss_drl_spawn_                 000000 constant        entry                    external dcl 5-87
gtss_drl_spawn_$gtss_drl_pasflr_
                                000000 constant        entry                    external dcl 5-88
gtss_drl_stoppt_                000000 constant        entry                    external dcl 5-89
gtss_drl_switch_                000000 constant        entry                    external dcl 5-90
gtss_drl_sysret_                000000 constant        entry                    external dcl 5-91
gtss_drl_t_cfio_                000000 constant        entry                    external dcl 5-92
gtss_drl_t_cmov_                000000 constant        entry                    external dcl 5-93
gtss_drl_t_err_                 000000 constant        entry                    external dcl 5-94
gtss_drl_t_goto_                000000 constant        entry                    external dcl 5-95
gtss_drl_t_linl_                000000 constant        entry                    external dcl 5-96
gtss_drl_t_rscc_                000000 constant        entry                    external dcl 5-97
gtss_drl_tapein_                000000 constant        entry                    external dcl 5-98
gtss_drl_task_                  000000 constant        entry                    external dcl 5-99
gtss_drl_termtp_                000000 constant        entry                    external dcl 5-100
gtss_drl_time_                  000000 constant        entry                    external dcl 5-101
gtss_drun_                      000000 constant        entry                    external dcl 5-102
gtss_dsd_lookup_                000000 constant        entry                    external dcl 5-103
gtss_dsd_process_               000000 constant        entry                    external dcl 5-104
gtss_edit_dsd_                  000000 constant        entry                    external dcl 5-105
gtss_expand_pathname_           000000 constant        entry                    external dcl 5-107
gtss_expand_pathname_$verify_umc
                                000000 constant        entry                    external dcl 5-108
gtss_ext_$CFP_bits                     external static structure                level 1 dcl 2-37
gtss_ext_$SYstarstar_file_no           external static fixed bin(24,0)          dcl 2-33
gtss_ext_$aem                          external static fixed bin(17,0)          dcl 2-8
gtss_ext_$aft                          external static structure                level 1 dcl 2-78
gtss_ext_$bad_drl_rtrn                 external static label variable           dcl 2-9
gtss_ext_$com_reg                      external static structure                level 1 dcl 2-45
gtss_ext_$db                           external static bit(1)                   array unaligned dcl 2-10
gtss_ext_$deferred_catalogs_ptr        external static pointer                  dcl 2-11
gtss_ext_$dispose_of_drl               external static label variable           dcl 2-12
gtss_ext_$drl_rtrn                     external static label variable           array dcl 2-13
gtss_ext_$drm_path                     external static char(168)                unaligned dcl 2-14
gtss_ext_$drun_jid                     external static char(5)                  unaligned dcl 2-15
gtss_ext_$event_channel                external static fixed bin(71,0)          dcl 2-16
gtss_ext_$fast_lib                     external static structure                level 1 dcl 2-98
gtss_ext_$finished                     external static label variable           dcl 2-17
gtss_ext_$flags                        external static structure                level 1 dcl 2-60
gtss_ext_$gdb_name                     external static char(8)                  unaligned dcl 2-18
gtss_ext_$get_line                     external static entry variable           dcl 2-19
gtss_ext_$hcs_work_area_ptr            external static pointer                  dcl 2-21
gtss_ext_$homedir                      external static char(64)                 unaligned dcl 2-22
gtss_ext_$mcfc                         external static structure                level 1 dcl 2-109
gtss_ext_$pdir                         external static varying char(168)        dcl 2-24
gtss_ext_$popup_from_pi                external static label variable           dcl 2-25
gtss_ext_$ppt                          external static pointer                  dcl 2-94
gtss_ext_$process_type                 external static fixed bin(17,0)          dcl 2-26
gtss_ext_$restart_from_pi              external static label variable           dcl 2-28
gtss_ext_$restart_seg_ptr              external static pointer                  dcl 2-29
gtss_ext_$sig_ptr                      external static pointer                  dcl 2-30
gtss_ext_$statistics                   external static structure                level 1 dcl 2-72
gtss_ext_$suspended_process            external static bit(1)                   unaligned dcl 2-32
gtss_ext_$user_id                      external static varying char(26)         dcl 2-34
gtss_ext_$work_area_ptr                external static pointer                  dcl 2-35
gtss_fault_processor_           000000 constant        entry                    external dcl 5-109
gtss_fault_processor_$timer_runout
                                000000 constant        entry                    external dcl 5-111
gtss_filact_error_status_       000000 constant        entry                    external dcl 5-112
gtss_filact_funct02_            000000 constant        entry                    external dcl 5-113
gtss_filact_funct03_            000000 constant        entry                    external dcl 5-114
gtss_filact_funct04_            000000 constant        entry                    external dcl 5-115
gtss_filact_funct05_            000000 constant        entry                    external dcl 5-116
gtss_filact_funct08_            000000 constant        entry                    external dcl 5-117
gtss_filact_funct10_            000000 constant        entry                    external dcl 5-118
gtss_filact_funct11_            000000 constant        entry                    external dcl 5-119
gtss_filact_funct14_            000000 constant        entry                    external dcl 5-120
gtss_filact_funct18_            000000 constant        entry                    external dcl 5-121
gtss_filact_funct19_            000000 constant        entry                    external dcl 5-122
gtss_filact_funct21_            000000 constant        entry                    external dcl 5-123
gtss_filact_funct22_            000000 constant        entry                    external dcl 5-124
gtss_find_cond_frame_           000000 constant        entry                    external dcl 5-110
gtss_interp_prim_               000000 constant        entry                    external dcl 5-126
gtss_interp_prim_$callss        000000 constant        entry                    external dcl 5-127
gtss_interp_prim_$sysret        000000 constant        entry                    external dcl 5-128
gtss_interp_prim_$t_goto        000000 constant        entry                    external dcl 5-129
gtss_ios_change_size_           000000 constant        entry                    external dcl 5-130
gtss_ios_close_                 000000 constant        entry                    external dcl 5-131
gtss_ios_exchange_names_        000000 constant        entry                    external dcl 5-132
gtss_ios_initialize_            000000 constant        entry                    external dcl 5-133
gtss_ios_io_                    000000 constant        entry                    external dcl 5-134
gtss_ios_open_                  000000 constant        entry                    external dcl 5-135
gtss_ios_position_              000000 constant        entry                    external dcl 5-136
gtss_mcfc_$close                000000 constant        entry                    external dcl 5-139
gtss_mcfc_$delete               000000 constant        entry                    external dcl 5-137
gtss_mcfc_$open                 000000 constant        entry                    external dcl 5-138
gtss_mcfc_empty                 000000 constant        entry                    external dcl 5-106
gtss_mcfc_init_                 000000 constant        entry                    external dcl 5-125
gtss_read_starCFP_              000000 constant        entry                    external dcl 5-140
gtss_read_starCFP_$last_os      000000 constant        entry                    external dcl 5-141
gtss_run_subsystem_             000000 constant        entry                    external dcl 5-142
gtss_run_subsystem_$finish      000000 constant        entry                    external dcl 5-143
gtss_run_subsystem_$restor      000000 constant        entry                    external dcl 5-144
gtss_run_subsystem_$restor_perm 000000 constant        entry                    external dcl 5-145
gtss_set_slave_                 000000 constant        entry                    external dcl 5-146
gtss_set_slave_$load_bar        000000 constant        entry                    external dcl 5-147
gtss_update_safe_store_         000000 constant        entry                    external dcl 5-148
gtss_verify_access_             000000 constant        entry                    external dcl 5-149
gtss_verify_access_$check_forced_access
                                000000 constant        entry                    external dcl 5-150
gtss_write_starCFP_             000000 constant        entry                    external dcl 5-151
lbx                                    internal static fixed bin(17,0)          initial dcl 1-42
lpx                                    internal static fixed bin(17,0)          initial dcl 1-42
num_tally_ptrs                         automatic       fixed bin(17,0)          dcl 396
sbx                                    internal static fixed bin(17,0)          initial dcl 1-42
scux                                   based           structure                level 1 dcl 1-207
spx                                    internal static fixed bin(17,0)          initial dcl 1-42

NAMES DECLARED BY EXPLICIT CONTEXT.
error_out                       002514 constant        label                    dcl 233 set ref 273
gtss_drl_kotnow_                001672 constant        entry                    external dcl 14
gtss_drl_kout_                  001661 constant        entry                    external dcl 14
nop                             002451 constant        entry                    external dcl 216
output                          002464 constant        entry                    internal dcl 222 ref 146 190 211
print_line                      002336 constant        label                    dcl 189 ref 200
tally_id                        002663 constant        entry                    internal dcl 291 ref 163
tally_sc                        002710 constant        entry                    internal dcl 315 ref 199
tallyb_sc                       002754 constant        entry                    internal dcl 346 ref 187

NAMES DECLARED BY CONTEXT OR IMPLICATION.
divide                                                 builtin function         ref 243 275 328
length                                                 builtin function         ref 142
mod                                                    builtin function         ref 326
verify                                                 builtin function         ref 261

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      3576        3630    3436        3606
Length      4116    3436        32         252     140           2

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gtss_drl_kout_                     1516 external procedure  is an external procedure.  
output                                  internal procedure  shares stack frame of external procedure gtss_drl_kout_.  
tally_id                                internal procedure  shares stack frame of external procedure gtss_drl_kout_.  
tally_sc                                internal procedure  shares stack frame of external procedure gtss_drl_kout_.  
tallyb_sc                               internal procedure  shares stack frame of external procedure gtss_drl_kout_.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 do_print                    gtss_drl_kout_

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gtss_drl_kout_           000100 arg_ptr                     gtss_drl_kout_
                         000102 ascii_line                  gtss_drl_kout_
                         000474 code                        gtss_drl_kout_
                         000476 eol_ptr                     gtss_drl_kout_
                         000500 gseg                        gtss_drl_kout_
                         000502 i                           gtss_drl_kout_
                         000503 line_len                    gtss_drl_kout_
                         000504 line_ptr                    gtss_drl_kout_
                         000506 no_eol_chars                gtss_drl_kout_
                         000507 num_tally                   gtss_drl_kout_
                         000510 tally_address               gtss_drl_kout_
                         000511 tally_address_ptrs          gtss_drl_kout_
                         000512 tally_ptr                   gtss_drl_kout_
                         000514 mcp                         gtss_drl_kout_
                         000516 scup                        gtss_drl_kout_
                         000530 buffer                      output
                         002530 bufptr                      output
                         002532 i                           output
                         002533 l                           output
                         002542 result                      tally_id
                         002544 tally_ptr                   tally_id
                         002554 tally_ptr                   tally_sc
                         002556 count                       tally_sc
                         002557 position                    tally_sc
                         002560 result                      tally_sc
                         002561 word_address                tally_sc
                         002570 new_byte_address            tallyb_sc
                         002572 tally_ptr                   tallyb_sc

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_var            call_ext_out_desc   call_ext_out        return              mpfx2               mod_fx1
ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
gtss_abort_subsystem_         gtss_bcd_ascii_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
gtss_ext_$gtss_slave_area_seg gtss_ext_$last_k_was_out      gtss_ext_$put_chars           gtss_ext_$stack_level_
gtss_ust_ext_$ust             iox_$user_output




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
    378 001645       384 001647       386 001650       391 001651       401 001652        14 001655        31 001700
    124 001704       125 001706       126 001710       127 001716       130 001726       131 001727       132 001733
    133 001744       138 002010       140 002011       141 002015       142 002026       145 002031       146 002035
    148 002041       151 002042       152 002053       157 002117       159 002120       160 002124       161 002127
    162 002134       163 002140       165 002142       166 002151       167 002163       172 002230       174 002231
    175 002234       176 002243       181 002310       183 002311       184 002315       185 002321       186 002327
    187 002334       189 002336       190 002337       191 002341       192 002342       194 002344       198 002371
    199 002373       200 002375       203 002376       208 002440       211 002441       213 002445       214 002447
    216 002450       219 002457       220 002463       222 002464       279 002466       225 002470       226 002473
    227 002475       232 002512       233 002514       234 002515       240 002553       243 002554       244 002567
    251 002570       252 002572       255 002575       256 002577       257 002601       261 002606       262 002620
    267 002630       268 002632       273 002646       275 002650       276 002662       291 002663       308 002665
    298 002667       299 002672       300 002702       301 002705       313 002707       315 002710       332 002712
    322 002714       323 002717       324 002722       325 002726       326 002731       327 002736       328 002742
    329 002746       330 002751       344 002753       346 002754       366 002756       353 002760       354 002763
    355 003001       356 003004       357 003010       372 003012


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
