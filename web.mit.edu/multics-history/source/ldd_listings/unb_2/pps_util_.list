	COMPILATION LISTING OF SEGMENT pps_util_
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/18/82  1649.6 mst Thu
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 pps_util_: proc ();
       12 
       13 
       14 	return;
       15 
       16 /*		PARAMETERS		*/
       17 
       18 
       19 dcl  a_ppscb_dir char (*);
       20 dcl  a_ppscb_entry char (*);
       21 dcl  a_ppscb_name char (*);
       22 dcl  a_ppscb_ptr ptr;
       23 dcl  a_ppscb_rec_len fixed bin;
       24 dcl  a_ppscb_rec_ptr ptr;
       25 dcl  code fixed bin (35);
       26 
       27 
       28 /*		ENTRY CONSTANTS		*/
       29 
       30 
       31 dcl  hcs_$initiate entry (char (*), char (*), char (*), fixed bin (1), fixed bin (2), ptr, fixed bin (35));
       32 
       33 
       34 /*		EXTERNAL DATA		*/
       35 
       36 
       37 
       38 
       39 /*		BUILTIN FUNCTIONS		*/
       40 
       41 
       42 dcl  null builtin;
       43 
       44 
       45 /*		AUTOMATIC STORAGE		*/
       46 
       47 
       48 
       49 
       50 /*		CONSTANTS			*/
       51 
       52 
       53 
       54 
       55 /*		INTERNAL STATIC		*/
       56 
       57 
       58 
       59 
       60 /*		BASED VARIABLES		*/
       61 
       62 find_ppscb: entry (a_ppscb_dir, a_ppscb_entry, a_ppscb_name, a_ppscb_ptr, code);
       63 
       64 
       65 	a_ppscb_ptr = null ();
       66 	code = 0;
       67 
       68 
       69 /*
       70*
       71*   First we need the segment in which the control block supposedly resides.
       72*
       73**/
       74 
       75 
       76 	call hcs_$initiate (a_ppscb_dir, a_ppscb_entry, "", 0, 0, ppscb_ptr, code);
       77 	if code ^= 0 then return;
       78 
       79 
       80 /*
       81*
       82*   Now find the particular control block in the spcified segment.
       83*
       84**/
       85 
       86 
       87 	code = 99;				/* Not yet implemented. */
       88 
       89 
       90 	return;
       91 
       92 make_ppscb_record: entry (a_ppscb_ptr, a_ppscb_rec_ptr, a_ppscb_rec_len, code);
       93 
       94 
       95 	ppscb_ptr = a_ppscb_ptr;
       96 	ppscb_rec_ptr = a_ppscb_rec_ptr;
       97 
       98 
       99 /* move data from the ppscb structure to ppscb_rec structure */
      100 
      101 
      102 	a_ppscb_rec_len = 0;
      103 
      104 
      105 	return;
      106 
  1     1 /*  Begin include file  ...  pps_control_block.incl.pl1  */
  1     2 
  1     3 
  1     4 dcl  ppscb_ptr ptr;
  1     5 
  1     6 dcl 1 ppscb aligned based (ppscb_ptr),
  1     7     2 version fixed bin,				/* should be 1 */
  1     8     2 name char (32),
  1     9     2 cv_ppscb_version fixed bin,
  1    10     2 job_name char (17),
  1    11     2 pause bit (1),
  1    12     2 pps_only bit (1),
  1    13     2 vfu_tape_code char (1),
  1    14     2 job_description char (40),
  1    15     2 stacker_algorithm fixed bin,
  1    16     2 primary_character_generator fixed bin,
  1    17     2 fixed_print_algorithm_code fixed bin,
  1    18     2 paper_width fixed dec (4, 1),
  1    19     2 sheet_length fixed dec (4, 1),
  1    20     2 lines_per_inch fixed bin,
  1    21     2 num_copies fixed bin,
  1    22     2 num_copies_before_blanking fixed bin,
  1    23     2 character_size fixed bin,
  1    24     2 code_conversion fixed bin,
  1    25     2 preprinted_form_number fixed bin,
  1    26     2 toner_configuration fixed bin,
  1    27     2 routing_placement_control fixed bin,
  1    28     2 punch_code fixed bin,
  1    29     2 forms_control (93) fixed bin (8) unal,
  1    30     2 page_format (210) aligned,
  1    31       3 operation fixed bin (3) unal,
  1    32       3 line_num fixed bin (8) unal,
  1    33       3 char_num fixed bin (8) unal,
  1    34     2 routing_count (29) fixed bin,
  1    35     2 routing_data char (1024);
  1    36 
  1    37 
  1    38 dcl 1 DEFAULT_PPS_CONTROL_BLOCK aligned static internal options (constant),
  1    39     2 version fixed bin init (1),			/* should be 1 */
  1    40     2 name char (32) init (""),
  1    41     2 cv_ppscb_version fixed bin init (1),
  1    42     2 job_name char (17) init (""),
  1    43     2 pause bit (1) init ("0"b),
  1    44     2 pps_only bit (1) init ("0"b),
  1    45     2 vfu_tape_code char (1) init ("a"),
  1    46     2 job_description char (40) init (""),
  1    47     2 stacker_algorithm fixed bin init (0),
  1    48     2 primary_character_generator fixed bin init (0),
  1    49     2 fixed_print_algorithm_code fixed bin init (0),
  1    50     2 paper_width fixed dec (4, 1) init (11.0),
  1    51     2 sheet_length fixed dec (4, 1) init (8.5),
  1    52     2 lines_per_inch fixed bin init (8),
  1    53     2 num_copies fixed bin init (1),
  1    54     2 num_copies_before_blanking fixed bin init (0),
  1    55     2 character_size fixed bin init (0),
  1    56     2 code_conversion fixed bin init (3),
  1    57     2 preprinted_form_number fixed bin init (0),
  1    58     2 toner_configuration fixed bin init (0),
  1    59     2 routing_placement_control fixed bin init (2),
  1    60     2 punch_code fixed bin init (0),
  1    61     2 forms_control (93) fixed bin (8) unal init ((2)0, 1, (90)0),
  1    62     2 page_format (210) aligned,
  1    63       3 operation fixed bin (3) unal init ((210)0),
  1    64       3 line_num fixed bin (8) unal init ((210)0),
  1    65       3 char_num fixed bin (8) unal init ((210)0),
  1    66     2 routing_count (29) fixed bin init ((29)0),
  1    67     2 routing_data char (1024);
  1    68 
  1    69 
  1    70 /*  End include file  ...  pps_control_block.incl.pl1  */
      107 
      108 
  2     1 /*  Begin include file  ...  pps_control_block_rec.incl.pl1  */
  2     2 
  2     3 
  2     4 dcl  ppscb_rec_ptr ptr;
  2     5 
  2     6 dcl 1 ppscb_rec aligned based (ppscb_rec_ptr),
  2     7     2 version fixed bin,				/* should be 1 */
  2     8     2 blk_len bit (36),
  2     9     2 rec_len_1 bit (36),
  2    10     2 job_name,
  2    11       3 id,
  2    12         4 text char (7),
  2    13         4 support_version pic "99",
  2    14       3 job_name char (17),
  2    15       3 host_id char (8),
  2    16     2 rec_len_2 bit (36),
  2    17     2 job_descriptor,
  2    18       3 pause_control char (1),
  2    19       3 impact_compat char (1),
  2    20       3 vfu_format_code char (1),
  2    21       3 pad bit (5*9),
  2    22       3 job_description char (40),
  2    23     2 rec_len_3 bit (36),
  2    24     2 control_param,
  2    25       3 stacker_algorithm fixed bin (8),
  2    26       3 char_gen_code fixed bin (8),
  2    27       3 fdrum_algorithm fixed bin (8),
  2    28       3 paper_width fixed bin (8),
  2    29       3 forms_len_and_lpi bit (18),
  2    30       3 sheet_length fixed bin (8),
  2    31       3 num_copies bit (18),
  2    32       3 before_blanking bit (18),
  2    33       3 char_size fixed bin (8),
  2    34       3 pad bit (9),
  2    35       3 code_conversion fixed bin (8),
  2    36       3 drum_num fixed bin (8),
  2    37       3 toner_config fixed bin (8),
  2    38       3 routing_placement fixed bin (8),
  2    39     2 rec_len_4 bit (36),
  2    40     2 form_control (93) fixed bin (8),
  2    41     2 rec_len_5 bit (36),
  2    42     2 page_format (210),
  2    43       3 char_1,
  2    44         4 pad bit (3),
  2    45         4 char_num_high bit (3),
  2    46         4 start bit (1),
  2    47         4 operation bit (2),
  2    48       3 char_2,
  2    49         4 pad bit (3),
  2    50         4 line_num_high bit (1),
  2    51         4 char_num_low bit (5),
  2    52       3 char_3,
  2    53         4 pad bit (3),
  2    54         4 line_num_low bit (6),
  2    55     2 rec_len_6 bit (18),
  2    56     2 routing_count (29) bit (18),
  2    57     2 rec_len_7 bit (7),
  2    58     2 routing_data char (1024);
  2    59 
  2    60 
  2    61 /*  End include file  ...  pps_control_block_rec.incl.pl1  */
      109 
      110 
      111 
      112      end pps_util_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/18/82  1629.4  pps_util_.pl1                     >dumps>old>recomp>pps_util_.pl1
107          1    03/27/82  0438.0  pps_control_block.incl.pl1        >ldd>include>pps_control_block.incl.pl1
109          2    03/27/82  0438.1  pps_control_block_rec.incl.pl1    >ldd>include>pps_control_block_rec.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
a_ppscb_dir                            parameter       char                     unaligned dcl 19 set ref 62 76*
a_ppscb_entry                          parameter       char                     unaligned dcl 20 set ref 62 76*
a_ppscb_name                           parameter       char                     unaligned dcl 21 ref 62
a_ppscb_ptr                            parameter       pointer                  dcl 22 set ref 62 65* 92 95
a_ppscb_rec_len                        parameter       fixed bin(17,0)          dcl 23 set ref 92 102*
a_ppscb_rec_ptr                        parameter       pointer                  dcl 24 ref 92 96
code                                   parameter       fixed bin(35,0)          dcl 25 set ref 62 66* 76* 77 87* 92
hcs_$initiate                   000010 constant        entry                    external dcl 31 ref 76
null                                                   builtin function         dcl 42 ref 65
ppscb_ptr                       000100 automatic       pointer                  dcl 1-4 set ref 76* 95*
ppscb_rec_ptr                   000102 automatic       pointer                  dcl 2-4 set ref 96*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
DEFAULT_PPS_CONTROL_BLOCK              internal static structure                level 1 dcl 1-38
ppscb                                  based           structure                level 1 dcl 1-6
ppscb_rec                              based           structure                level 1 dcl 2-6

NAMES DECLARED BY EXPLICIT CONTEXT.
find_ppscb                      000026 constant        entry                    external dcl 62
make_ppscb_record               000142 constant        entry                    external dcl 92
pps_util_                       000013 constant        entry                    external dcl 11

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       240         252     165         250
Length       454     165        12         165      52           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
pps_util_                           108 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
pps_util_                000100 ppscb_ptr                   pps_util_
                         000102 ppscb_rec_ptr               pps_util_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   return              ext_entry           ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
hcs_$initiate

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000012        14 000020        62 000021        65 000060        66 000062        76 000063        77 000130
     87 000132        90 000134        92 000135        95 000154        96 000157       102 000163       105 000164


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
