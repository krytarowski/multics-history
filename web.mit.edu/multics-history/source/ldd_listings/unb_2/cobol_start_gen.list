	COMPILATION LISTING OF SEGMENT cobol_start_gen
	Compiled by: Multics PL/I Compiler, Release 31b, of April 24, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 05/24/89  0953.8 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
       17*     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
       18*     MCR8060 cobol_start_gen.pl1 Reformatted code to new Cobol standard.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 /* Modifile on 08/27/79 by PRP, [4.0-2] new operator for alternate keys*/
       23 /* Modified on 06/27/79 by FCH, [4.0-1], not option added for debug */
       24 /* Modified on 11/1/78 by FCH,[3.0-1], alt rec keys added */
       25 /* Modifies since Version 3.0 */
       26 
       27 /* format: style3 */
       28 cobol_start_gen:
       29      proc (mp_ptr, passed_tag);
       30 
       31 dcl	passed_tag	fixed bin;		/* for  in-line error handling */
       32 dcl	ptag		fixed bin;
       33 dcl	mp_ptr		ptr;
       34 dcl	1 mp		based (mp_ptr),
       35 	  2 n		fixed bin,		/* from 3 to 4 */
       36 	  2 pt		(0 refer (mp.n)) ptr;	/* pt(1) pts to type1 token for START */
       37 						/* pt(2) pts to type 12 token for the file in question */
       38 						/* pt(3) pts to type9 token for key IF end_stmt.a = "1"b */
       39 						/* pt(n) pts to type19 token (eos) */
       40 
       41 dcl	1 args,
       42 	  2 entryno	fixed bin,
       43 	  2 arglist_off	fixed bin,
       44 	  2 stacktemp_off	fixed bin,
       45 	  2 n		fixed bin,
       46 	  2 arg		(4),
       47 	    3 pt		ptr,
       48 	    3 type	fixed bin,
       49 	    3 off1	fixed bin,
       50 	    3 off2	fixed bin,
       51 	    3 value	bit (18) unal,
       52 	    3 indirect	bit (1) unal,
       53 	    3 overlay	bit (1) unal,
       54 	    3 repeat_nogen	bit (1) unal,
       55 	    3 regsw	bit (1) unal,
       56 	    3 regno	bit (3) unal;
       57 
       58 dcl	file_key_desc	char (40) based;
       59 dcl	argb		(4) bit (216) based (addr (args.arg (1)));
       60 dcl	text		(0:10000) bit (36) based (cobol_$text_base_ptr);
       61 
       62 dcl	ft_ptr		ptr;
       63 dcl	fkey_ptr		ptr;
       64 dcl	name_ptr		ptr;
       65 dcl	dn_ptr		ptr;
       66 dcl	arg_ptr		ptr;
       67 dcl	ioerror_ptr	ptr;
       68 
       69 dcl	aloff		fixed bin;
       70 dcl	size		fixed bin;
       71 dcl	reclen_off	fixed bin;
       72 dcl	order_off		fixed bin;
       73 dcl	relation_off	fixed bin;
       74 dcl	keylen_off	fixed bin;
       75 dcl	key_off		fixed bin;
       76 dcl	ntag		fixed bin;
       77 dcl	errno		fixed bin;
       78 dcl	alt_sw		bit (1);
       79 
       80 dcl	seek_head_sw	bit (1);
       81 dcl	temp_bit2		bit (2);
       82 
       83 /*[3.0-1]*/
       84 dcl	char5		char (5),
       85 	key_ctr		fixed bin;
       86 
       87 /*************************************/
       88 /*************************************/
       89 /* INITIALIZATION */
       90 start:
       91 	rw_ptr = mp.pt (1);
       92 	eos_ptr = mp.pt (mp.n);
       93 	ioerror_ptr = addr (ioerror);
       94 	ioerror.cobol_code = 0;
       95 	ioerror.type1_ptr = mp.pt (1);
       96 	ioerror.mode = 0;
       97 
       98 	if end_stmt.b = "1"b
       99 	then do;					/* in-line error coding follows */
      100 		ioerror.is_tag = cobol_$next_tag;	/* to be defined at end of generated code for WRITE */
      101 		ptag, passed_tag = cobol_$next_tag + 1; /* to be defined by gen driver at end of in-line coding */
      102 		ioerror.ns_tag = ptag;
      103 		cobol_$next_tag = cobol_$next_tag + 2;
      104 	     end;
      105 	else do;
      106 		ioerror.is_tag = 0;
      107 		ptag = 0;
      108 		ioerror.ns_tag = cobol_$next_tag;	/* to be defined at end of generated code */
      109 		cobol_$next_tag = cobol_$next_tag + 1;
      110 	     end;
      111 
      112 	arg_ptr = addr (args);
      113 	iocb_arg.pt = addr (iocb_basic_struct);
      114 
      115 	call cobol_read_ft (mp.pt (2) -> fd_token.file_no, ft_ptr);
      116 
      117 	call cobol_alloc$stack (368, 2, aloff);		/* enough for 92 words - aloff is a wd offset */
      118 	args.arglist_off = aloff;
      119 	argb (1) = unspec (iocb_arg);
      120 	reclen_off = aloff + 22;
      121 	order_off = aloff + 23;
      122 	relation_off = aloff + 26;
      123 	keylen_off = aloff + 27;
      124 	key_off = aloff + 28;
      125 
      126 
      127 /*************************************/
      128 /* START CODE GENERATION */
      129 start_codegen:					/* MAKE SURE FILE IS OPEN */
      130 	ioerror.retry_tag = cobol_$next_tag;
      131 	ntag = cobol_$next_tag + 1;
      132 	cobol_$next_tag = cobol_$next_tag + 2;
      133 
      134 	call cobol_define_tag (ioerror.retry_tag);
      135 
      136 	call cobol_set_fsbptr (ft_ptr);		/* OPERATOR21(init_start) */
      137 	call cobol_call_op (21, ntag);		/* INT_START_OP */
      138 
      139 	call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      140 
      141 	call cobol_define_tag (ntag);
      142 
      143 /*[3.0-1]*/
      144 	alt_sw = file_table.organization = 3 /* ind */ /*[3.0-1]*/ & /*[3.0-1]*/ file_table.alternate_keys ^= 0;
      145 
      146 	if file_table.external | file_table.open_out
      147 	then do;
      148 
      149 		ntag = cobol_$next_tag;
      150 		cobol_$next_tag = cobol_$next_tag + 1;
      151 
      152 		call cobol_io_util$bypass_mode_error (ntag, "11"b);
      153 
      154 		if (file_table.external | file_table.rewrite | file_table.delete) & file_table.access < 2
      155 		then call cobol_io_util$move_direct ("001"b, fsb_keylen_sw, 4, 1, ""b);
      156 						/* zero the switch */
      157 						/* OPERATOR54(delete error) */
      158 		call cobol_call_op (54, ntag);	/* ERROR_OP */
      159 
      160 		call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      161 
      162 		call cobol_define_tag (ntag);
      163 
      164 	     end;
      165 
      166 /*[3.0-1]*/
      167 	if alt_sw & end_stmt.e ^= 511			/*[3.0-1]*/
      168 	then do;
      169 		char5 = file_table.alt_key_info;	/*[3.0-1]*/
      170 						/*[3.0-1]*/
      171 		do key_ctr = 1 by 1 to end_stmt.e;	/*[3.0-1]*/
      172 						/*[3.0-1]*/
      173 		     call cobol_read_rand (1, char5, fkey_ptr);
      174 						/*[3.0-1]*/
      175 		     char5 = file_key.next_alt;	/*[3.0-1]*/
      176 						/*[3.0-1]*/
      177 		end;				/*[3.0-1]*/
      178 	     end;
      179 
      180 	else call cobol_read_rand (1, file_table.r_key_info, fkey_ptr);
      181 
      182 	addr (fkey_type9.file_key_info) -> file_key_desc = file_key.desc;
      183 
      184 	seek_head_sw = "0"b;
      185 
      186 
      187 	if end_stmt.a ^= "0"b
      188 	then do;
      189 
      190 		if end_stmt.d = "00"b
      191 		then if mp.pt (3) -> data_name.item_length = fkey_type9.size
      192 		     then ;			/* = whole key */
      193 		     else seek_head_sw = "1"b;
      194 		else seek_head_sw = "1"b;
      195 
      196 	     end;
      197 
      198 	if ^seek_head_sw
      199 	then do;
      200 
      201 		mpout.pt1 = mp.pt (1);
      202 		mpout.pt2 = addr (fkey_type9);
      203 
      204 		if file_table.organization = 2
      205 		then do;				/* relative */
      206 			mpout.pt3 = addr (num_type9);
      207 			size, num_type9.size, num_type9.places_left = 16;
      208 			num_type9.seg = 5001;	/* from PR1 */
      209 			num_type9.off = file_table.fsb.off + fsb_key;
      210 		     end;
      211 		else do;				/* indexed */
      212 			mpout.pt3 = addr (alpha_type9);
      213 			size, alpha_type9.size = fkey_type9.size;
      214 			alpha_type9.seg = 5001;	/* from PR1 */
      215 			alpha_type9.off = file_table.fsb.off + fsb_key;
      216 		     end;
      217 
      218 		mpout.pt4 = addr (type19);
      219 
      220 		call cobol_move_gen (addr (mpout));
      221 
      222 		call cobol_io_util$move_direct ("001"b, fsb_keylen_sw, 4, 1, substr (unspec (size), 19, 18));
      223 
      224 		ntag = cobol_$next_tag;
      225 
      226 /*[3.0-1]*/
      227 		if alt_sw				/*[3.0-1]*/
      228 		then do;
      229 			call cobol_io_util$key_loc (0, 0);
      230 						/*[3.0-1]*/
      231 			call alt_start (84);	/*[3.0-1]*/
      232 		     end;
      233 
      234 		cobol_$next_tag = cobol_$next_tag + 1;
      235 
      236 		call cobol_set_fsbptr (ft_ptr);
      237 
      238 		call cobol_ioop_util$set_icode;	/* OPERATOR67(read_seek_key) */
      239 		call cobol_call_op (67, ntag);	/* iox_$seek_key */
      240 
      241 		call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      242 
      243 		call cobol_define_tag (ntag);
      244 
      245 		errno = seek_errno;
      246 
      247 	     end;
      248 	else do;					/* must call iox_$control */
      249 
      250 
      251 		temp_bit2 = end_stmt.d;		/* relational code */
      252 
      253 		call cobol_io_util$move_direct ("110"b, relation_off * 4, 4, 1, (16)"0"b || temp_bit2);
      254 
      255 		mpout.pt1 = mp.pt (1);
      256 		mpout.pt2 = addr (fkey_type9);
      257 
      258 		if file_table.organization = 2
      259 		then do;				/* relative */
      260 			mpout.pt3 = addr (num_type9);
      261 			size, num_type9.size, num_type9.places_left = 16;
      262 			num_type9.seg = 1000;	/* stack */
      263 			num_type9.off = key_off * 4;
      264 		     end;
      265 		else do;				/* indexed */
      266 			mpout.pt3 = addr (alpha_type9);
      267 			size, alpha_type9.size = mp.pt (3) -> data_name.item_length;
      268 			alpha_type9.seg = 1000;	/* stack */
      269 			alpha_type9.off = key_off * 4;
      270 		     end;
      271 
      272 		mpout.pt4 = addr (type19);
      273 
      274 		call cobol_move_gen (addr (mpout));
      275 
      276 		call cobol_io_util$move_direct ("110"b, keylen_off * 4, 4, 1, substr (unspec (size), 19, 18));
      277 
      278 /*[3.0-1]*/
      279 		if alt_sw				/*[3.0-1]*/
      280 		then do;
      281 			call cobol_io_util$key_loc (1, relation_off);
      282 						/*[3.0-1]*/
      283 			call alt_start (82);	/*[3.0-1]*/
      284 		     end;
      285 
      286 /* CALL iox_$control(iocb_ptr,order_name,struc_ptr,code)  where:
      287*				     order_name char(*) - "seek_head",
      288*				     struc_ptr ptr -> 1 struc,
      289*						     2 relation fixed bin,
      290*						     2 keylen fixed bin,
      291*						     2 key char(0 refer (keylen));
      292*				relation:	0 - head = key
      293*					1 - head >= key
      294*					2 - head > key			*/
      295 
      296 		ntag = cobol_$next_tag;
      297 		cobol_$next_tag = cobol_$next_tag + 1;
      298 
      299 		call cobol_set_fsbptr (ft_ptr);
      300 
      301 		call cobol_ioop_util$set_icode;
      302 
      303 		call cobol_ioop_util$ldaldx5 (9, reclen_off);
      304 						/* OPERATOR23(start_control) */
      305 		if alt_sw
      306 		then call cobol_call_op (83, ntag);	/*[4.0-2]  iox_$control for alternate keys */
      307 		else call cobol_call_op (23, ntag);	/* iox_$control */
      308 
      309 		call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      310 
      311 		call cobol_define_tag (ntag);
      312 
      313 		errno = control_errno;
      314 
      315 	     end;
      316 
      317 	if (file_table.external | file_table.delete | file_table.rewrite) & file_table.access < 2
      318 	then do;
      319 
      320 		call cobol_set_fsbptr (ft_ptr);
      321 
      322 		call cobol_io_util$move_direct ("001"b, fsb_keylen_sw, 4, 1, ""b);
      323 						/* zero the switch */
      324 
      325 	     end;
      326 
      327 /*[3.0-1]*/
      328 	if alt_sw					/*[3.0-1]*/
      329 	then do;
      330 		call cobol_io_util$file_desc (file_table.file_desc_1_offset);
      331 						/*[3.0-1]*/
      332 		call cobol_call_op (79, 0);		/*[3.0-1]*/
      333 	     end;
      334 
      335 	call cobol_reg_manager$after_op (4095 + ioerror.cobol_code);
      336 
      337 /*[4.0-1]*/
      338 	if end_stmt.f = "01"b			/*[4.0-1]*/
      339 	then passed_tag = ioerror.is_tag;		/*[4.0-1]*/
      340 	else call cobol_gen_ioerror$finish_up (ft_ptr, ioerror_ptr);
      341 
      342 	return;
      343 
      344 alt_start:
      345      proc (i);
      346 
      347 /*[3.0-1]*/
      348 declare	i		fixed bin;
      349 
      350 /*[3.0-1]*/
      351 	call cobol_io_util$file_desc (file_table.file_desc_1_offset);
      352 						/*[3.0-1]*/
      353 	call cobol_io_util$key_num (end_stmt.e);	/*[3.0-1]*/
      354 	call cobol_call_op (i, 0);			/* OPERATORi(*) */
      355      end;
      356 
      357 
      358 
      359 /*************************************/
  1     1 /*
  1     2*
  1     3*	The procedure cobol_start_gen generates code which realizes the COBOL
  1     4*start statement.
  1     5*
  1     6*	START fn id eos
  1     7*
  1     8*		eos	b=0	no INVALID
  1     9*			   1	INVALID
  1    10*
  1    11*			a=000	no KEY
  1    12*			  001	KEY
  1    13*
  1    14*			d=00	=
  1    15*			  01	>=
  1    16*			  10	>
  1    17*
  1    18*			e	key number
  1    19*
  1    20*			f=00	no NOT
  1    21*			  01	NOT
  1    22*
  1    23*	1 mp based(mp_ptr)
  1    24*	2  n	fixed bin
  1    25*	2  pt(0 refer(mp.n)) ptr
  1    26*
  1    27*		pt(1)	type-1("START")
  1    28*		pt(2)	type-12(file-name)
  1    29*		pt(3)	type-9(key, if end_stmt.a="1"b)
  1    30*		pt(n)	type-19(eos)
  1    31*
  1    32*Flow Chart
  1    33*
  1    34*TAG(ioerror.retry_tag):
  1    35*
  1    36*	OP21(init_start,ntag);GEN_IOERROR
  1    37*
  1    38*TAG(ntag):
  1    39*
  1    40*	if	file_table.external
  1    41*		|
  1    42*		file_table.open_out
  1    43*
  1    44*	then	do;	INCR_NTAG
  1    45*
  1    46*			OP54(delete_error,ntag);GEN_IOERROR
  1    47*
  1    48*TAG(ntag):
  1    49*
  1    50*		end;
  1    51*
  1    52*	alt_sw =	file_table.organization = 3
  1    53*		&
  1    54*		file_table.alternate_keys ^= 0
  1    55*
  1    56*	seek_head_sw = "0"b
  1    57*
  1    58*	if end_stmt.a ^= "0"b
  1    59*	then	do;	if end_stmt.d = "00"b
  1    60*			then	if	WHOLE_KEY
  1    61*				then;
  1    62*				else	seek_head_sw = "1"b;
  1    63*			else	seek_head_sw = "1"b;
  1    64*		end;
  1    65*
  1    66*	MOVE_KEY_TO_FSB
  1    67*
  1    68*	if	^seek_head_sw
  1    69*	then	do;	if alt_sw then call alt_start
  1    70*
  1    71*			INCR_NTAG
  1    72*
  1    73*			SET_FSBPTR;OP67(read_seek_key,ntag);GEN_IOERROR
  1    74*
  1    75*TAG(ntag):
  1    76*		end;
  1    77*	else	do;	if alt_sw then call alt_start
  1    78*
  1    79*			INCR_NTAG
  1    80*
  1    81*			SET_FSBPTR;
  1    82*			if alt_sw
  1    83*			then OP83(alt_start_control,ntag);
  1    84*			else OP23(start_control,ntag);
  1    85*			GEN_IOERROT;
  1    86*
  1    87*TAG(ntag):
  1    88*		end;
  1    89*
  1    90*
  1    91*	if alt_sw then IO_UTIL$FILE_DESC;OP79(alt_start,0)
  1    92*
  1    93*	return;
  1    94*
  1    95*alt_start:	proc;
  1    96*
  1    97*	IO_UTIL$FILE_DESC
  1    98*	IO_UTIL$KEY_NUM
  1    99*	OP82(alt_seek_key,0)
  1   100*
  1   101*end;
  1   102*
  1   103**/
  1   104 
  2     1 /*
  2     2*cobol_operators_: start_statement
  2     3*
  2     4*	OP21(init_start)
  2     5*
  2     6*	OP23(start_control)
  2     7*
  2     8*		iox_$control("seek_head")
  2     9*		RTS(11)
  2    10*
  2    11*	OP54(delete_error)		read,delete,rewrite
  2    12*
  2    13*		RTS(16)
  2    14*
  2    15*	OP67(read_seek_key)	read
  2    16*
  2    17*		SUBR_SEEK_OP(16)
  2    18*
  2    19*	OP79(alt_start)
  2    20*
  2    21*		set FSB fields for start statement
  2    22*		RTS(48)
  2    23*
  2    24*	OP82(alt_seek_key)			read
  2    25*
  2    26*		move fsbskel.key in FSB one position to right
  2    27*		prefix by key number, increment size
  2    28*		RTS(54)
  2    29*
  2    30*	SUBR_SEEK_OP(i)		67,[41,57,58]
  2    31*
  2    32*		iox_$seek_key
  2    33*		RTS(i)
  2    34*
  2    35**/
  1   105 
  1   106 
      360 
  3     1 
  3     2 /* STATIC DATA */
  3     3 
  3     4 
  3     5 dcl 1 iocb_arg static,
  3     6      2 pt ptr init(null()),	/* initialized to address of basic structure */
  3     7      2 zeros bit(144) init(""b);
  3     8 dcl 1 temp_arg static,
  3     9      2 pt ptr init(null()),	/* always null */
  3    10      2 type fixed bin init(3),
  3    11      2 zeros bit(108) init(""b);
  3    12 dcl 1 status_arg static,
  3    13      2 pt ptr init(null()),	/* always null */
  3    14      2 type fixed bin init(3),
  3    15      2 off1 fixed bin init(40),
  3    16      2 zeros bit(72) init(""b);
  3    17 dcl 1 fsb_arg static,
  3    18      2 pt ptr init(null()),	/* always null */
  3    19      2 type fixed bin init(3),
  3    20      2 off1 fixed bin,	/* set each time to wd offset in fsb */
  3    21      2 off2 fixed bin init(0),  /* not used */
  3    22      2 bits bit(36) init("0000000000000000000001001"b);	/* pr1 */
  3    23 
  3    24 dcl 1 pr1_struct static,
  3    25      2 pr1 fixed bin init(1),
  3    26      2 pointer_no bit(3),
  3    27      2 lock fixed bin init(1),
  3    28      2 switch fixed bin init(0),
  3    29      2 segno fixed bin,
  3    30      2 offset fixed bin,
  3    31      2 reset fixed bin;
  3    32 dcl 1 x1_struct static,
  3    33      2 x1 fixed bin init(11),
  3    34      2 reg_no bit(4),
  3    35      2 lock fixed bin init(0),
  3    36      2 already_there fixed bin,
  3    37      2 contains fixed bin init(0),
  3    38      2 null_ptr ptr init(null()),
  3    39      2 fill bit(18) unaligned init((18)"0"b),
  3    40      2 literal bit(18) unaligned;
  3    41 dcl 1 aq_struct static,
  3    42      2 aq fixed bin init(3),
  3    43      2 reg_no bit(4),
  3    44      2 lock fixed bin init(0),
  3    45      2 already_there fixed bin,
  3    46      2 contains fixed bin init(0),
  3    47      2 null_ptr ptr init(null()),
  3    48      2 fill bit(18) unaligned init((18)"0"b),
  3    49      2 literal bit(18) unaligned;
  3    50 
  3    51 dcl 1 control_desc static,
  3    52      2 iocb_ptr_desc bit(36) init(	"100110100000000000000000000000000000"b),
  3    53      2 char9_desc bit(36) init(	"101010100000000000000000000000001001"b),
  3    54      2 info_ptr_desc bit(36) init(	"100110100000000000000000000000000000"b),
  3    55      2 status_desc bit(36) init(	"100000100000000000000000000000100011"b);
  3    56 dcl 1 iocb_basic_struct static,
  3    57      2 type fixed bin init(1),
  3    58      2 operand_no fixed bin init(0),
  3    59      2 lock fixed bin init(0),
  3    60      2 seg fixed bin,
  3    61      2 off fixed bin,
  3    62      2 send_receive fixed bin init(0);
  3    63 
  3    64 dcl 1 mpout static,
  3    65      2 n fixed bin init(4),
  3    66      2 pt1 ptr,
  3    67      2 pt2 ptr,
  3    68      2 pt3 ptr,
  3    69      2 pt4 ptr;
  3    70 dcl 1 num_type9 static,
  3    71      2 header (4) fixed bin init(112,0,0,9),
  3    72      2 repl_ptr (2) ptr init((2)null()),
  3    73      2 fill1  bit(108) init(""b),
  3    74      2 file_key_info,
  3    75 	3 fb1 (3) fixed bin init(0,0,0),
  3    76 	3 size fixed bin init(0),
  3    77 	3 places_left fixed bin,
  3    78 	3 places_right fixed bin init(0),
  3    79 	3 flags1 bit(36) init("010000100100000001000000000100000000"b),
  3    80 	3 flags2 bit(36) init(""b),
  3    81 	3 seg fixed bin init(0),
  3    82 	3 off fixed bin,
  3    83      2 fill2 (7) fixed bin init(0,0,0,0,0,0,0);
  3    84 dcl 1 alpha_type9 static,
  3    85      2 header (4) fixed bin init(112,0,0,9),
  3    86      2 repl_ptr (2) ptr init((2)null()),
  3    87      2 fill1  bit(108) init(""b),
  3    88      2 file_key_info,
  3    89 	3 fb1 (3) fixed bin init(0,0,0),
  3    90 	3 size fixed bin init(0),
  3    91 	3 fb2 (2) fixed bin init(0,0),
  3    92 	3 flags1 bit(36) init("010000100100000000010000000100000000"b),
  3    93 	3 flags2 bit(36) init(""b),
  3    94 	3 seg fixed bin init(0),
  3    95 	3 off fixed bin,
  3    96      2 fill2 (7) fixed bin init(0,0,0,0,0,0,0);
  3    97 dcl 1 fkey_type9 static,
  3    98      2 header (4) fixed bin init(112,0,0,9),
  3    99      2 repl_ptr (2) ptr init((2)null()),
  3   100      2 fill1  bit(108) init(""b),
  3   101      2 file_key_info,
  3   102 	3 fb1 (3) fixed bin init(0,0,0),
  3   103 	3 size fixed bin init(0),
  3   104 	3 fb2 (2) fixed bin init(0,0),
  3   105 	3 flags1 bit(36) init(""b),
  3   106 	3 flags2 bit(36) init(""b),
  3   107 	3 seg fixed bin,
  3   108 	3 off fixed bin,
  3   109      2 fill2 (7) fixed bin init(0,0,0,0,0,0,0);
  3   110 dcl 1 type19 static,
  3   111      2 size fixed bin init(38),
  3   112      2 line fixed bin init(0),
  3   113      2 column fixed bin init(0),
  3   114      2 type fixed bin init(19),
  3   115      2 verb fixed bin init(18),	 	/* verb number */
  3   116      2 e fixed bin init(1),
  3   117      2 h fixed bin init(0),
  3   118      2 i fixed bin init(0),
  3   119      2 j fixed bin init(0),
  3   120      2 a bit(3) init(""b),
  3   121      2 b bit(1) init(""b),
  3   122      2 c bit(1) init(""b),
  3   123      2 d bit(2) init(""b),
  3   124      2 f bit(2) init(""b),
  3   125      2 g bit(2) init(""b),
  3   126      2 k bit(5) init(""b);
  3   127 
  3   128 dcl 1 ioerror static,
  3   129 
  3   130      2 cobol_code fixed bin,
  3   131      2 retry_tag fixed bin,
  3   132      2 is_tag fixed bin,
  3   133      2 ns_tag fixed bin,
  3   134      2 type1_ptr ptr,
  3   135      2 mode fixed bin;
  3   136 dcl 1 seek_special static,
  3   137      2 n fixed bin init(1),
  3   138      2 link1 aligned,
  3   139 	3 name char(32) init("no_record"),
  3   140 	3 status2 char(4) init("6623"),
  3   141 	3 status1 char(2) init("23");
  3   142 dcl 1 control_special static,
  3   143      2 n fixed bin init(1),
  3   144      2 link1 aligned,
  3   145 	3 name char(32) init("no_record"),
  3   146 	3 status2 char(4) init("6723"),
  3   147 	3 status1 char(2) init("23");
  3   148 dcl 1 unopen_error static,
  3   149      2 n fixed bin init(1),
  3   150      2 link1 aligned,
  3   151 	3 name char(32) init(""),
  3   152 	3 status2 char(4) init("6031"),
  3   153 	3 status1 char(2) init("30");
  3   154 dcl 1 output_error static,
  3   155      2 n fixed bin init(1),
  3   156      2 link1 aligned,
  3   157 	3 name char(32) init(""),
  3   158 	3 status2 char(4) init("6032"),
  3   159 	3 status1 char(2) init("30");
  3   160 dcl 1 seek_error static,
  3   161      2 n fixed bin init(2),
  3   162      2 link1 aligned,
  3   163 	3 name char(32) init("no_operation"),
  3   164 	3 status2 char(4) init("6632"),
  3   165 	3 status1 char(2) init("30"),
  3   166      2 link2 aligned,
  3   167 	3 name char(32) init(""),
  3   168 	3 status2 char(4) init("6630"),
  3   169 	3 status1 char(2) init("30");
  3   170 dcl 1 control_error static,
  3   171      2 n fixed bin init(2),
  3   172      2 link1 aligned,
  3   173 	3 name char(32) init("no_operation"),
  3   174 	3 status2 char(4) init("6732"),
  3   175 	3 status1 char(2) init("30"),
  3   176      2 link2 aligned,
  3   177 	3 name char(32) init(""),
  3   178 	3 status2 char(4) init("6730"),
  3   179 	3 status1 char(2) init("30");
  3   180 
  3   181 dcl mcode_off fixed bin static init(40);
  3   182 dcl fsb_keylen_sw fixed bin static init(24);	/* offset 6 */
  3   183 dcl fsb_key fixed bin static init(28);		/* offset 7 */
  3   184 dcl fsb_key_wdoff fixed bin static init(7);
  3   185 dcl seek_errno fixed bin static init(37);	/* Unable to seek key for start */
  3   186 dcl output_errno fixed bin static init(36);	/* Attempt to start an output file */
  3   187 dcl control_errno fixed bin static init(38);	/* Unable to start file with specified key relation */
  3   188 
  3   189 
  3   190 /* EXTERNAL ENTRY NAMES */
  3   191 
  3   192 dcl cobol_ioop_util$ldaldx5 entry(fixed bin, fixed bin);
  3   193 dcl cobol_ioop_util$set_icode entry;
  3   194 dcl cobol_alloc$stack entry(fixed bin,fixed bin,fixed bin);
  3   195 dcl cobol_read_ft entry(fixed bin,ptr);
  3   196 dcl cobol_read_rand entry(fixed bin,char(5),ptr);
  3   197 dcl cobol_pointer_register$call entry;
  3   198 dcl cobol_pointer_register$get entry(ptr);
  3   199 dcl cobol_register$load entry(ptr);
  3   200 dcl cobol_define_tag entry(fixed bin);
  3   201 
  3   202 /* sub-generators */
  3   203 dcl cobol_move_gen entry(ptr);
  3   204 dcl cobol_call_op entry(fixed bin, fixed bin);
  3   205 dcl cobol_gen_ioerror entry(ptr, ptr);
  3   206 dcl cobol_gen_ioerror$finish_up entry(ptr, ptr);
  3   207 dcl cobol_reg_manager$after_op entry(fixed bin);
  3   208 dcl cobol_set_fsbptr entry(ptr);
  3   209 dcl cobol_io_util$key_loc entry(fixed bin,fixed bin);
  3   210 dcl cobol_io_util$file_desc entry(fixed bin(24));
  3   211 dcl cobol_io_util$move_direct entry(bit(3) aligned,fixed bin,fixed bin,fixed bin,bit(18) aligned);
  3   212 dcl cobol_io_util$move_lit entry(bit(3) aligned,fixed bin,fixed bin,char(*));
  3   213 dcl cobol_io_util$bypass_error entry(fixed bin,fixed bin);
  3   214 dcl cobol_io_util$bypass_mode_error entry(fixed bin,bit(2) aligned);
  3   215 dcl cobol_io_util$key_num entry(fixed bin);
  3   216 dcl cobol_open_util$check_open entry(ptr,fixed bin,ptr);
  3   217 
  3   218 /* BUILTIN FUNCTIONS */
  3   219 
  3   220 	dcl (substr,addr) builtin;
  3   221 
  3   222 
  3   223 
  3   224 
  4     1 
  4     2 /* BEGIN INCLUDE FILE ...   cobol_file_table.incl.pl1 */
  4     3 /*     <<<   INCLUDE FILE FOR FILE TABLE IN COMMON   >>>     */
  4     4 
  4     5 /* Modified on 09/30/80 by FCH, [4.4-1], density is 6250 is supported */
  4     6 /* Modified on 12/05/78 by RAL, [3.0-3], added dupl_alt from dummy102 */
  4     7 /* Modified on 11/21/78 by RAL, [3.0-2], added space for abs_record_offset from filler */
  4     8 /* Modified on 10/26/78 by RAL, [3.0-1], added space for file_desc_1 table offset from filler */
  4     9 /*     <<<   LAST MODIFIED ON 06-02-77 by GM         >>>	*/
  4    10 /*     <<<   LAST MODIFIED ON 05-31-77 by GM         >>>	*/
  4    11 /*     <<<   LAST MODIFIED  ON 06-30-76 by GM        >>>	*/
  4    12 /*     <<<   LAST MODIFIED ON 06-07-76 by GM    >>>     */
  4    13 /*     <<<   LAST MODIFIED ON 11-29-74 by orn   >>>     */
  4    14 
  4    15 /*
  4    16*A file table is created in variable common for each file selected in the
  4    17*environment division.  The fields of a given file table provide information
  4    18*about the specific file for which the file table is generated.  The
  4    19*addresses which may be contained in the various "info" fields of the file
  4    20*table are addresses in variable common.
  4    21**/
  4    22 
  4    23 /*   THE FILE TABLE STRUCTURE   */
  4    24 
  4    25 dcl	1 file_table based (ft_ptr),
  4    26 		2 next char (5),
  4    27 		2 ifn char (16),
  4    28 		2 attach_options_info char(5),	/*06/02/77*/
  4    29 		2 replacement_info char(5),		/*06/02/77*/
  4    30 		2 file_id_info char(5),		/*05/31/77*/
  4    31 		2 retention_info char(5),		/*05/31/77*/
  4    32 		2 filler0 char (3) ,			/* [3.0-1] */
  4    33 		2 file_desc_1_offset fixed bin (24),		/* [3.0-1] */
  4    34 		2 abs_record_offset fixed bin (24),		/* [3.-02] */
  4    35 		2 filler char(5),		/* this area is available.*/
  4    36 		2 padding_char char (1),
  4    37 		2 banner_char char (1),
  4    38 		2 file_status_info char (5),
  4    39 		2 extra_status_info char (5),
  4    40 		2 cat_id_info char (5),
  4    41 		2 r_key_info char (5),
  4    42 		2 alt_key_info char (5),
  4    43 		2 rec_do_info char (5),
  4    44 		2 label_info char (5),
  4    45 		2 data_info char (5),
  4    46 		2 report_info char (5),
  4    47 		2 linage_info char (5),
  4    48 		2 optional bit (1),						/*06/07/76*/
  4    49 		2 external bit (1),
  4    50 		2 file_status bit (1),
  4    51 		2 extra_status bit (1),
  4    52 		2 sysin bit (1),
  4    53 		2 sysout bit (1),
  4    54 		2 move_mode bit (1),
  4    55 		2 locate_mode bit (1),
  4    56 		2 fixed_recs bit (1),
  4    57 		2 variable_recs bit (1),
  4    58 		2 spanned_recs bit (1),				/*06/07/76*/
  4    59 		2 interchange bit (1),				/*06/07/76*/
  4    60 		2 relative_key bit (1),
  4    61 		2 record_key bit (1),
  4    62 		2 even_parity bit (1),
  4    63 		2 odd_parity bit (1),
  4    64 		2 padding bit (1),
  4    65 		2 banner bit (1),
  4    66 		2 random bit (1),
  4    67 		2 no_file_lockout bit (1),
  4    68 		2 no_write_check bit (1),
  4    69 		2 no_resident_index bit (1),
  4    70 		2 same_file bit (1),
  4    71 		2 sort_file bit (1),
  4    72 		2 rec_do bit (1),
  4    73 		2 linage bit (1),
  4    74 		2 code_set_clause bit (1),
  4    75 		/* history */
  4    76 		2 close bit (1),
  4    77 		2 delete bit (1),
  4    78 		2 open_in bit (1),
  4    79 		2 open_out bit (1),
  4    80 		2 open_io bit (1),
  4    81 		2 open_ext bit (1),
  4    82 		2 read bit (1),
  4    83 		2 release bit (1),
  4    84 		2 return_bit bit (1),
  4    85 		2 rewrite bit (1),
  4    86 		2 sort bit (1),
  4    87 		2 start bit (1),
  4    88 		2 use_error bit (1),
  4    89 		2 write bit (1),
  4    90 		2 read_next bit (1),
  4    91 		2 read_key bit (1),
  4    92 		2 accept bit (1),
  4    93 		2 display bit (1),
  4    94 		2 unequal_recs bit (1),
  4    95 		2 dummy_sysin bit (1),
  4    96 		2 dummy_sysout bit (1),
  4    97 		2 file_no fixed bin,
  4    98 		2 uca_offset fixed bin(24),
  4    99 		2 cra_seg fixed bin,
  4   100 		2 cra_offset fixed bin(24),
  4   101 		2 max_cra_size fixed bin(24),
  4   102 		2 catalogued fixed bin,
  4   103 		2 organization fixed bin,
  4   104 		2 org_qual fixed bin,
  4   105 		2 access fixed bin,
  4   106 		2 buffers fixed bin,
  4   107 		2 device fixed bin,
  4   108 		2 record_prefix fixed bin,				/*06/07/76*/
  4   109 		2 alternate_keys fixed bin,
  4   110 		2 record_format fixed bin,
  4   111 		2 label_format fixed bin,
  4   112 		2 key_location fixed bin,
  4   113 		2 key_size fixed bin,
  4   114 		2 temporary fixed bin,
  4   115 		2 address_format fixed bin,
  4   116 		2 same_area_clause fixed bin,
  4   117 		2 same_rec_clause fixed bin,
  4   118 		2 same_sort_clause fixed bin,
  4   119 		2 mult_clause_no fixed bin,
  4   120 		2 mult_position_no fixed bin,
  4   121 		2 block_desc fixed bin,
  4   122 		2 block_min fixed bin(24),
  4   123 		2 block_max fixed bin(24),
  4   124 		2 rec_min fixed bin(24),
  4   125 		2 rec_max fixed bin(24),
  4   126 		2 label_count fixed bin,
  4   127 		2 ifn_size fixed bin,
  4   128 		2 data_count fixed bin,
  4   129 		2 report_count fixed bin,
  4   130 		2 code_set fixed bin,
  4   131 		2 error_exit fixed bin,
  4   132 		2 prefix_size fixed bin,
  4   133 		2 blocked bit (1),
  4   134 		2 variable bit (1),
  4   135 		2 unbannered bit (1),
  4   136 		2 prefix_clause bit (1),
  4   137 		2 symbolic bit (1),
  4   138 		2 address_format_bit bit (1),
  4   139 		2 bsn bit(1),						/*06/07/76*/
  4   140 		2 process_area bit(1),					/*06/07/76*/
  4   141 		2 dupl_alt bit (1),			/* [3.0-3] */
  4   142 		2 dummy102 bit (23),
  4   143 		2 name_size fixed bin,
  4   144 		2 name char(32),
  4   145 		2 id char(32),
  4   146 		2 temp bit(1) ,
  4   147 		2 perm bit(1) ,
  4   148 		2 attach bit(1) ,
  4   149 		2 detach bit(1) ,
  4   150 		2 fsb ,		/* file state block */
  4   151 		     3 seg fixed bin(24), /* internal addr */
  4   152 		     3 off fixed bin(24),
  4   153 		2 tape,
  4   154 		     3 density bit(1) ,	/* 0-hi 1-lo */
  4   155 		     3 retain bit(1),	/* 0 not retained across attachment, 1 retained */
  4   156 		     3 force bit(1),	/* 0 check retention date, 1 no check */
  4   157 		     3 protect bit(1) ,	/* 0-no 1-yes */
  4   158 		     3 den_6250 bit(1),	/* 0-no 1-yes */		/*[4.4-1]*/
  4   159 		2 cat_nm char(200),
  4   160 		2 ao_len fixed bin(24),		/* attach options */
  4   161 		2 ao_string char(256),
  4   162 		2 output_mode fixed bin,	/*	0 not specified
  4   163*						1 generation
  4   164*						2 modification
  4   165*						3 replacement literal
  4   166*						4 replacement dataname	*/
  4   167 		2 om_len	fixed bin,		/* length of output mode */
  4   168 		2 om_string char(17),
  4   169 		2 tape_device fixed bin,	/*	0 not specified
  4   170*						1 integer
  4   171*						2 dataname	*/
  4   172 		2 tape_device_num fixed bin,
  4   173 		2 tape_device_key char(5),
  4   174 		2 add_cat_key char(5);
  4   175 
  4   176 
  4   177 /* END INCLUDE FILE ...   cobol_file_table.incl.pl1 */
  4   178 
  3   225 
  5     1 
  5     2 /* BEGIN INCLUDE FILE ... cobol_file_key.incl.pl1 */
  5     3 /* Last modified on 03/30/78 by FCH */
  5     4 
  5     5 /*
  5     6*A file key record is created in variable common for any one of several
  5     7*data items which may be associated with a file name.  The key_type field in
  5     8*the file key record identifies the type of item for which the record is
  5     9*created.  The name in a file key record is resolved by the replacement
  5    10*phase, and a section of the type 9 entry in the name table for the
  5    11*specified data item is stored in the file key record.  The stored
  5    12*description is subsequently used by the generator phase.
  5    13**/
  5    14 
  5    15 /*   THE FILE KEY RECORD STRUCTURE   */
  5    16 
  5    17 dcl 	1 file_key based (fkey_ptr),
  5    18 		2 next char(5),
  5    19 		2 next_alt char(5),
  5    20 		2 qual char(5),
  5    21 		2 info,
  5    22 		3 duplicates bit(1),
  5    23 		3 filler bit(7),
  5    24 		2 file_no fixed bin,
  5    25 		2 key_type fixed bin,
  5    26 		2 line fixed bin,
  5    27 		2 column fixed bin,
  5    28 		2 temp_seg fixed bin,
  5    29 		2 temp_offset fixed bin(24),
  5    30 		2 desc char(40),
  5    31 		2 name_size fixed bin,
  5    32 		2 name char(0 refer(file_key.name_size));
  5    33 
  5    34 /* END INCLUDE FILE ... cobol_file_key.incl.pl1 */
  5    35 
  3   226 
  6     1 
  6     2 /* BEGIN INCLUDE FILE ... cobol_type1.incl.pl1 */
  6     3 /* Last modified on 11/19/76 by ORN */
  6     4 
  6     5 /*
  6     6*A reserved word token is created in the minpral files for each occurrence
  6     7*of a reserved word in the source program.  The value of the key field
  6     8*indicates the specific reserved word which a type 1 token represents.
  6     9**/
  6    10 
  6    11 dcl rw_ptr ptr;
  6    12 
  6    13 /* BEGIN DECLARATION OF TYPE1 (RESERVED WORD) TOKEN */
  6    14 dcl	1 reserved_word based (rw_ptr),
  7     1 
  7     2 /* begin include file ... cobol_TYPE1.incl.pl1 */
  7     3 /* Last modified on 11/17/76 by ORN */
  7     4 /* Last modified on 12/28/76 by FCH */
  7     5 /* Last modified on 12/16/80 by FCH */
  7     6 
  7     7 		/* header */
  7     8 		2 size fixed bin,
  7     9 		2 line fixed bin,
  7    10 		2 column fixed bin,
  7    11 		2 type fixed bin,
  7    12 		/* body */
  7    13 		2 key fixed bin,
  7    14 		/* procedure division class bits */
  7    15 		2 verb bit (1),
  7    16 		2 arith_op bit (1),
  7    17 		2 figcon bit (1),
  7    18 		2 terminator bit (1),
  7    19 		2 end_dec bit (1),
  7    20 		2 rel_op bit (1),
  7    21 		2 imper_verb bit (1),
  7    22 		2 end_cobol bit (1),
  7    23 		/* data division class bits */
  7    24 		2 section_header bit (1),
  7    25 		2 fs_ind bit (1),
  7    26 		2 fd_clause bit (1),
  7    27 		2 dd_clause bit (1),
  7    28 		2 cd_input bit (1),
  7    29 		2 cd_output bit (1),
  7    30 		2 cset_name bit (1),
  7    31 		2 ss_division bit (1),
  7    32 		2 repl_jump_ind bit (4),
  7    33 		2 ided_recovery bit (1),
  7    34 		2 report_writer bit (5),
  7    35 		2 ss_desc_entry bit (1),
  7    36 		2 jump_index fixed bin,
  7    37 		2 length fixed bin,
  7    38 		2 name char(0 refer(reserved_word.length));
  7    39 
  7    40 
  7    41 
  7    42 /* end include file ... cobol_TYPE1.incl.pl1 */
  7    43 
  6    15 
  6    16 /* END DECLARATION OF TYPE1 (RESERVED WORD) TOKEN */
  6    17 
  6    18 /* END INCLUDE FILE ... cobol_type1.incl.pl1 */
  6    19 
  3   227 
  8     1 
  8     2 /* BEGIN INCLUDE FILE ... cobol_type9.incl.pl1 */
  8     3 /* Last modified on 11/19/76 by ORN */
  8     4 
  8     5 /*
  8     6*A type 9 data name token is entered into the name table by the data
  8     7*division syntax phase for each data name described in the data division.
  8     8*The replacement phase subsequently replaces type 8 user word references
  8     9*to data names in the procedure division minpral file with the corresponding
  8    10*type 9 tokens from the name table.
  8    11**/
  8    12 
  8    13 /* dcl dn_ptr ptr; */
  8    14 
  8    15 /* BEGIN DECLARATION OF TYPE9 (DATA NAME) TOKEN */
  8    16 dcl 1 data_name based (dn_ptr),
  9     1 
  9     2 /* begin include file ... cobol_TYPE9.incl.pl1 */
  9     3 /* Last modified on 06/19/77 by ORN */
  9     4 /* Last modified on 12/28/76 by FCH */
  9     5 
  9     6 		/* header */
  9     7 		2 size fixed bin,
  9     8 		2 line fixed bin,
  9     9 		2 column fixed bin,
  9    10 		2 type fixed bin,
  9    11 		/* body */
  9    12 		2 string_ptr ptr,
  9    13 		2 prev_rec ptr,
  9    14 		2 searched bit (1),
  9    15 		2 duplicate bit (1),
  9    16 		2 saved bit (1),
  9    17 		2 debug_ind bit (1),
  9    18 		2 filler2 bit (3),
  9    19 		2 used_as_sub bit (1),
  9    20 		2 def_line fixed bin,
  9    21 		2 level fixed bin,
  9    22 		2 linkage fixed bin,
  9    23 		2 file_num fixed bin,
  9    24 		2 size_rtn fixed bin,
  9    25 		2 item_length fixed bin(24),
  9    26 		2 places_left fixed bin,
  9    27 		2 places_right fixed bin,
  9    28 		/* description */
  9    29 		2 file_section bit (1),
  9    30 		2 working_storage bit (1),
  9    31 		2 constant_section bit (1),
  9    32 		2 linkage_section bit (1),
  9    33 		2 communication_section bit (1),
  9    34 		2 report_section bit (1),
  9    35 		2 level_77 bit (1),
  9    36 		2 level_01 bit (1),
  9    37 		2 non_elementary bit (1),
  9    38 		2 elementary bit (1),
  9    39 		2 filler_item bit (1),
  9    40 		2 s_of_rdf bit (1),
  9    41 		2 o_of_rdf bit (1),
  9    42 		2 bin_18 bit (1),
  9    43 		2 bin_36 bit (1),
  9    44 		2 pic_has_l bit (1),
  9    45 		2 pic_is_do bit (1),
  9    46 		2 numeric bit (1),
  9    47 		2 numeric_edited bit (1),
  9    48 		2 alphanum bit (1),
  9    49 		2 alphanum_edited bit (1),
  9    50 		2 alphabetic bit (1),
  9    51 		2 alphabetic_edited bit (1),
  9    52 		2 pic_has_p bit (1),
  9    53 		2 pic_has_ast bit (1),
  9    54 		2 item_signed bit(1),
  9    55 		2 sign_separate bit (1),
  9    56 		2 display bit (1),
  9    57 		2 comp bit (1),
  9    58 		2 ascii_packed_dec_h bit (1),	/* as of 8/16/76  this field used for comp8. */
  9    59 		2 ascii_packed_dec bit (1),
  9    60 		2 ebcdic_packed_dec bit (1),
  9    61 		2 bin_16 bit (1),
  9    62 		2 bin_32 bit (1),
  9    63 		2 usage_index bit (1),
  9    64 		2 just_right bit (1),
  9    65 		2 compare_argument bit (1),
  9    66 		2 sync bit (1),
  9    67 		2 temporary bit (1),
  9    68 		2 bwz bit (1),
  9    69 		2 variable_length bit (1),
  9    70 		2 subscripted bit (1),
  9    71 		2 occurs_do bit (1),
  9    72 		2 key_a bit (1),
  9    73 		2 key_d bit (1),
  9    74 		2 indexed_by bit (1),
  9    75 		2 value_numeric bit (1),
  9    76 		2 value_non_numeric bit (1),
  9    77 		2 value_signed bit (1),
  9    78 		2 sign_type bit (3),
  9    79 		2 pic_integer bit (1),
  9    80 		2 ast_when_zero bit (1),
  9    81 		2 label_record bit (1),
  9    82 		2 sign_clause_occurred bit (1),
  9    83 		2 okey_dn bit (1),
  9    84 		2 subject_of_keyis bit (1),
  9    85 		2 exp_redefining bit (1),
  9    86 		2 sync_in_rec bit (1),
  9    87 		2 rounded bit (1),
  9    88 		2 ad_bit bit (1),
  9    89 		2 debug_all bit (1),
  9    90 		2 overlap bit (1),
  9    91 		2 sum_counter bit (1),
  9    92 		2 exp_occurs bit (1),
  9    93 		2 linage_counter bit (1),
  9    94 		2 rnm_01 bit (1),
  9    95 		2 aligned bit (1),
  9    96 		2 not_user_writable bit (1),
  9    97 		2 database_key bit (1),
  9    98 		2 database_data_item bit (1),
  9    99 		2 seg_num fixed bin,
  9   100 		2 offset fixed bin(24),
  9   101 		2 initial_ptr fixed bin,
  9   102 		2 edit_ptr fixed bin,
  9   103 		2 occurs_ptr fixed bin,
  9   104 		2 do_rec char(5),
  9   105 		2 bitt bit (1),
  9   106 		2 byte bit (1),
  9   107 		2 half_word bit (1),
  9   108 		2 word bit (1),
  9   109 		2 double_word bit (1),
  9   110 		2 half_byte bit (1),
  9   111 		2 filler5 bit (1),
  9   112 		2 bit_offset bit (4),
  9   113 		2 son_cnt bit (16),
  9   114 		2 max_red_size fixed bin(24),
  9   115 		2 name_size fixed bin,
  9   116 		2 name char(0 refer(data_name.name_size));	
  9   117 
  9   118 
  9   119 
  9   120 /* end include file ... cobol_TYPE9.incl.pl1 */
  9   121 
  8    17 
  8    18 /* END DECLARATION OF TYPE9 (DATA NAME) TOKEN */
  8    19 
  8    20 /* END INCLUDE FILE ... cobol_type9.incl.pl1 */
  8    21 
  3   228 
 10     1 
 10     2 /* BEGIN INCLUDE FILE ... cobol_type12.incl.pl1 */
 10     3 /* Last modified on 11/19/76 by ORN */
 10     4 
 10     5 /*
 10     6*A type 12 file name token is entered into the name table by the data
 10     7*division syntax phase for each file name appearing in the data division.
 10     8*When the replacement phase processes the procedure division minpral file,
 10     9*each reference to a file name is replaced with the type 12 token created
 10    10*for that file name.
 10    11**/
 10    12 
 10    13 /* dcl name_ptr ptr; */
 10    14 
 10    15 /* BEGIN DECLARATION OF TYPE12 (FILE NAME) TOKEN */
 10    16 dcl 	1 fd_token based (name_ptr),
 11     1 
 11     2 /* begin include file ... cobol_TYPE12.incl.pl1 */
 11     3 /* Last modified on 11/17/76 by ORN */
 11     4 
 11     5 		/* header */
 11     6 		2 size fixed bin,
 11     7 		2 line fixed bin,
 11     8 		2 column fixed bin,
 11     9 		2 type fixed bin,
 11    10 		/* body */
 11    11 		2 string_ptr ptr,
 11    12 		2 prev_rec ptr,
 11    13 		2 info bit (8),
 11    14 		2 def_line fixed bin,
 11    15 		2 file_no fixed bin,
 11    16 		2 name_size fixed bin,
 11    17 		2 name char(0 refer(fd_token.name_size));	
 11    18 
 11    19 /* end include file ... cobol_TYPE12.incl.pl1 */
 11    20 
 10    17 
 10    18 /* END DECLARATION OF TYPE12 (FILE NAME) TOKEN */
 10    19 
 10    20 
 10    21 /* END INCLUDE FILE ... cobol_type12.incl.pl1 */
 10    22 
  3   229 
 12     1 
 12     2 /* BEGIN INCLUDE FILE ... cobol_type19.incl.pl1 */
 12     3 /* last modified on 11/19/76 by ORN */
 12     4 
 12     5 /*
 12     6*A type 19 end of statement token is created in the procedure division
 12     7*minpral file at the end of each minpral statement generated by the
 12     8*procedure division syntax phase.  A minpral statement may be a complete or
 12     9*partial source language statement.  A type 19 token contains information
 12    10*describing the statement which it delimits.
 12    11**/
 12    12 
 12    13 dcl eos_ptr ptr;
 12    14 
 12    15 /* BEGIN DECLARATION OF TYPE19 (END STATEMENT) TOKEN */
 12    16 dcl	1 end_stmt based (eos_ptr),
 13     1 
 13     2 /* begin include file ... cobol_TYPE19.incl.pl1 */
 13     3 /* Last modified on 11/17/76 by ORN */
 13     4 
 13     5 		/* header */
 13     6 		2 size fixed bin,
 13     7 		2 line fixed bin,
 13     8 		2 column fixed bin,
 13     9 		2 type fixed bin,
 13    10 		/* body */
 13    11 		2 verb fixed bin,
 13    12 		2 e fixed bin,
 13    13 		2 h fixed bin,
 13    14 		2 i fixed bin,
 13    15 		2 j fixed bin,
 13    16 		2 a bit (3),
 13    17 		2 b bit (1),
 13    18 		2 c bit (1),
 13    19 		2 d bit (2),
 13    20 		2 f bit (2),
 13    21 		2 g bit (2),
 13    22 		2 k bit (5),
 13    23 		2 always_an bit (1);
 13    24 
 13    25 /* end include file ... cobol_TYPE19.incl.pl1 */
 13    26 
 12    17 
 12    18 /* END DECLARATION OF TYPE19 (END STATEMENT) TOKEN */
 12    19 
 12    20 /*
 12    21*FIELD		CONTENTS
 12    22*
 12    23*size		The total size in bytes of this end of statement token.
 12    24*line		0
 12    25*column		0
 12    26*type		19
 12    27*verb		A value indicating the verb in this statement
 12    28*		 1 = accept
 12    29*		 2 = add
 12    30*		 3 = on size error
 12    31*		 4 = alter
 12    32*		 5 = call
 12    33*		 7 = cancel
 12    34*		 8 = close
 12    35*		 9 = divide
 12    36*		10 = multiply
 12    37*		11 = subtract
 12    38*		12 = exit
 12    39*		14 = go
 12    40*		15 = merge
 12    41*		16 = initiate
 12    42*		17 = inspect
 12    43*		18 = move
 12    44*		19 = open
 12    45*		20 = perform
 12    46*		21 = read
 12    47*		23 = receive
 12    48*		24 = release
 12    49*		25 = return
 12    50*		26 = search
 12    51*		27 = rewrite
 12    52*		29 = seek
 12    53*		30 = send
 12    54*		31 = set
 12    55*		33 = stop
 12    56*		34 = string
 12    57*		35 = suspend
 12    58*		36 = terminate
 12    59*		37 = unstring
 12    60*		38 = write
 12    61*		39 = use
 12    62*		40 = compute
 12    63*		41 = disable
 12    64*		42 = display
 12    65*		43 = enable
 12    66*		45 = generate
 12    67*		46 = hold
 12    68*		48 = process
 12    69*		49 = sort
 12    70*		52 = procedure
 12    71*		53 = declaratives
 12    72*		54 = section name
 12    73*		55 = paragraph name
 12    74*		98 = end
 12    75*e,h,i,j		The significance of these fields differs with each
 12    76*		statement.  These fields are normally used as counters.
 12    77*a,b,c,d,f,g,k	The significance of these fields differs with each
 12    78*		statement.  These fields are normally used as indicators.
 12    79**/
 12    80 
 12    81 /* END INCLUDE FILE ... cobol_type19.incl.pl1 */
 12    82 
  3   230 
 14     1 
 14     2 /* BEGIN INCLUDE FILE ... cobol_.incl.pl1 */
 14     3 /* last modified Feb 4, 1977 by ORN  */
 14     4 
 14     5 /* This file defines all external data used in the generator phase of Multics Cobol */
 14     6 
 14     7 /* POINTERS */
 14     8 dcl cobol_$text_base_ptr ptr  ext;
 14     9 dcl text_base_ptr ptr  defined (cobol_$text_base_ptr);
 14    10 dcl cobol_$con_end_ptr ptr  ext;
 14    11 dcl con_end_ptr ptr  defined (cobol_$con_end_ptr);
 14    12 dcl cobol_$def_base_ptr ptr  ext;
 14    13 dcl def_base_ptr ptr  defined (cobol_$def_base_ptr);
 14    14 dcl cobol_$link_base_ptr ptr  ext;
 14    15 dcl link_base_ptr ptr  defined (cobol_$link_base_ptr);
 14    16 dcl cobol_$sym_base_ptr ptr  ext;
 14    17 dcl sym_base_ptr ptr  defined (cobol_$sym_base_ptr);
 14    18 dcl cobol_$reloc_text_base_ptr ptr  ext;
 14    19 dcl reloc_text_base_ptr ptr  defined (cobol_$reloc_text_base_ptr);
 14    20 dcl cobol_$reloc_def_base_ptr ptr  ext;
 14    21 dcl reloc_def_base_ptr ptr  defined (cobol_$reloc_def_base_ptr);
 14    22 dcl cobol_$reloc_link_base_ptr ptr  ext;
 14    23 dcl reloc_link_base_ptr ptr  defined (cobol_$reloc_link_base_ptr);
 14    24 dcl cobol_$reloc_sym_base_ptr ptr  ext;
 14    25 dcl reloc_sym_base_ptr ptr  defined (cobol_$reloc_sym_base_ptr);
 14    26 dcl cobol_$reloc_work_base_ptr ptr  ext;
 14    27 dcl reloc_work_base_ptr ptr  defined (cobol_$reloc_work_base_ptr);
 14    28 dcl cobol_$pd_map_ptr ptr  ext;
 14    29 dcl pd_map_ptr ptr  defined (cobol_$pd_map_ptr);
 14    30 dcl cobol_$fixup_ptr ptr  ext;
 14    31 dcl fixup_ptr ptr  defined (cobol_$fixup_ptr);
 14    32 dcl cobol_$initval_base_ptr ptr  ext;
 14    33 dcl initval_base_ptr ptr  defined (cobol_$initval_base_ptr);
 14    34 dcl cobol_$initval_file_ptr ptr  ext;
 14    35 dcl initval_file_ptr ptr  defined (cobol_$initval_file_ptr);
 14    36 dcl cobol_$perform_list_ptr ptr  ext;
 14    37 dcl perform_list_ptr ptr  defined (cobol_$perform_list_ptr);
 14    38 dcl cobol_$alter_list_ptr ptr  ext;
 14    39 dcl alter_list_ptr ptr  defined (cobol_$alter_list_ptr);
 14    40 dcl cobol_$seg_init_list_ptr ptr  ext;
 14    41 dcl seg_init_list_ptr ptr  defined (cobol_$seg_init_list_ptr);
 14    42 dcl cobol_$temp_token_area_ptr ptr  ext;
 14    43 dcl temp_token_area_ptr ptr  defined (cobol_$temp_token_area_ptr);
 14    44 dcl cobol_$temp_token_ptr ptr  ext;
 14    45 dcl temp_token_ptr ptr  defined (cobol_$temp_token_ptr);
 14    46 dcl cobol_$token_block1_ptr ptr  ext;
 14    47 dcl token_block1_ptr ptr  defined (cobol_$token_block1_ptr);
 14    48 dcl cobol_$token_block2_ptr ptr  ext;
 14    49 dcl token_block2_ptr ptr  defined (cobol_$token_block2_ptr);
 14    50 dcl cobol_$minpral5_ptr ptr  ext;
 14    51 dcl minpral5_ptr ptr  defined (cobol_$minpral5_ptr);
 14    52 dcl cobol_$tag_table_ptr ptr  ext;
 14    53 dcl tag_table_ptr ptr  defined (cobol_$tag_table_ptr);
 14    54 dcl cobol_$map_data_ptr ptr  ext;
 14    55 dcl map_data_ptr ptr  defined (cobol_$map_data_ptr);
 14    56 dcl cobol_$ptr_status_ptr ptr  ext;
 14    57 dcl ptr_status_ptr ptr  defined (cobol_$ptr_status_ptr);
 14    58 dcl cobol_$reg_status_ptr ptr  ext;
 14    59 dcl reg_status_ptr ptr  defined (cobol_$reg_status_ptr);
 14    60 dcl cobol_$misc_base_ptr ptr ext;
 14    61 dcl misc_base_ptr ptr defined (cobol_$misc_base_ptr);
 14    62 dcl cobol_$misc_end_ptr ptr ext;
 14    63 dcl misc_end_ptr ptr defined (cobol_$misc_end_ptr);
 14    64 dcl cobol_$list_ptr ptr ext;
 14    65 dcl list_ptr ptr defined (cobol_$list_ptr);
 14    66 dcl cobol_$allo1_ptr ptr ext;
 14    67 dcl allo1_ptr ptr defined (cobol_$allo1_ptr);
 14    68 dcl cobol_$eln_ptr ptr ext;
 14    69 dcl eln_ptr ptr defined (cobol_$eln_ptr);
 14    70 dcl cobol_$diag_ptr ptr ext;
 14    71 dcl diag_ptr ptr defined (cobol_$diag_ptr);
 14    72 dcl cobol_$xref_token_ptr ptr ext;
 14    73 dcl xref_token_ptr ptr defined (cobol_$xref_token_ptr);
 14    74 dcl cobol_$xref_chain_ptr ptr ext;
 14    75 dcl xref_chain_ptr ptr defined (cobol_$xref_chain_ptr);
 14    76 dcl cobol_$statement_info_ptr ptr ext;
 14    77 dcl statement_info_ptr ptr defined (cobol_$statement_info_ptr);
 14    78 dcl cobol_$reswd_ptr ptr ext;
 14    79 dcl reswd_ptr ptr defined (cobol_$reswd_ptr);
 14    80 dcl cobol_$op_con_ptr ptr ext;
 14    81 dcl op_con_ptr ptr defined (cobol_$op_con_ptr);
 14    82 dcl cobol_$ntbuf_ptr ptr ext;
 14    83 dcl ntbuf_ptr ptr defined (cobol_$ntbuf_ptr);
 14    84 dcl cobol_$main_pcs_ptr ptr ext;
 14    85 dcl main_pcs_ptr ptr defined (cobol_$main_pcs_ptr);
 14    86 dcl cobol_$include_info_ptr ptr ext;
 14    87 dcl include_info_ptr ptr defined (cobol_$include_info_ptr);
 14    88 
 14    89 /* FIXED BIN */
 14    90 dcl cobol_$text_wd_off fixed bin  ext;
 14    91 dcl text_wd_off fixed bin  defined (cobol_$text_wd_off);
 14    92 dcl cobol_$con_wd_off fixed bin  ext;
 14    93 dcl con_wd_off fixed bin  defined (cobol_$con_wd_off);
 14    94 dcl cobol_$def_wd_off fixed bin  ext;
 14    95 dcl def_wd_off fixed bin  defined (cobol_$def_wd_off);
 14    96 dcl cobol_$def_max fixed bin  ext;
 14    97 dcl def_max fixed bin  defined (cobol_$def_max);
 14    98 dcl cobol_$link_wd_off fixed bin  ext;
 14    99 dcl link_wd_off fixed bin  defined (cobol_$link_wd_off);
 14   100 dcl cobol_$link_max fixed bin  ext;
 14   101 dcl link_max fixed bin  defined (cobol_$link_max);
 14   102 dcl cobol_$sym_wd_off fixed bin  ext;
 14   103 dcl sym_wd_off fixed bin  defined (cobol_$sym_wd_off);
 14   104 dcl cobol_$sym_max fixed bin  ext;
 14   105 dcl sym_max fixed bin  defined (cobol_$sym_max);
 14   106 dcl cobol_$reloc_text_max fixed bin(24)  ext;
 14   107 dcl reloc_text_max fixed bin(24)  defined (cobol_$reloc_text_max);
 14   108 dcl cobol_$reloc_def_max fixed bin(24)  ext;
 14   109 dcl reloc_def_max fixed bin(24)  defined (cobol_$reloc_def_max);
 14   110 dcl cobol_$reloc_link_max fixed bin(24)  ext;
 14   111 dcl reloc_link_max fixed bin(24)  defined (cobol_$reloc_link_max);
 14   112 dcl cobol_$reloc_sym_max fixed bin(24)  ext;
 14   113 dcl reloc_sym_max fixed bin(24)  defined (cobol_$reloc_sym_max);
 14   114 dcl cobol_$reloc_work_max fixed bin(24)  ext;
 14   115 dcl reloc_work_max fixed bin(24)  defined (cobol_$reloc_work_max);
 14   116 dcl cobol_$pd_map_index fixed bin  ext;
 14   117 dcl pd_map_index fixed bin  defined (cobol_$pd_map_index);
 14   118 dcl cobol_$cobol_data_wd_off fixed bin  ext;
 14   119 dcl cobol_data_wd_off fixed bin  defined (cobol_$cobol_data_wd_off);
 14   120 dcl cobol_$stack_off fixed bin  ext;
 14   121 dcl stack_off fixed bin  defined (cobol_$stack_off);
 14   122 dcl cobol_$max_stack_off fixed bin  ext;
 14   123 dcl max_stack_off fixed bin  defined (cobol_$max_stack_off);
 14   124 dcl cobol_$init_stack_off fixed bin  ext;
 14   125 dcl init_stack_off fixed bin  defined (cobol_$init_stack_off);
 14   126 dcl cobol_$pd_map_sw fixed bin  ext;
 14   127 dcl pd_map_sw fixed bin  defined (cobol_$pd_map_sw);
 14   128 dcl cobol_$next_tag fixed bin  ext;
 14   129 dcl next_tag fixed bin  defined (cobol_$next_tag);
 14   130 dcl cobol_$data_init_flag fixed bin  ext;
 14   131 dcl data_init_flag fixed bin  defined (cobol_$data_init_flag);
 14   132 dcl cobol_$seg_init_flag fixed bin  ext;
 14   133 dcl seg_init_flag fixed bin  defined (cobol_$seg_init_flag);
 14   134 dcl cobol_$alter_flag fixed bin  ext;
 14   135 dcl alter_flag fixed bin  defined (cobol_$alter_flag);
 14   136 dcl cobol_$sect_eop_flag fixed bin  ext;
 14   137 dcl sect_eop_flag fixed bin  defined (cobol_$sect_eop_flag);
 14   138 dcl cobol_$para_eop_flag fixed bin  ext;
 14   139 dcl para_eop_flag fixed bin  defined (cobol_$para_eop_flag);
 14   140 dcl cobol_$priority_no fixed bin  ext;
 14   141 dcl priority_no fixed bin  defined (cobol_$priority_no);
 14   142 dcl cobol_$compile_count fixed bin ext;
 14   143 dcl compile_count fixed bin defined (cobol_$compile_count);
 14   144 dcl cobol_$ptr_assumption_ind fixed bin ext;
 14   145 dcl ptr_assumption_ind fixed bin defined (cobol_$ptr_assumption_ind);
 14   146 dcl cobol_$reg_assumption_ind fixed bin ext;
 14   147 dcl reg_assumption_ind fixed bin defined (cobol_$reg_assumption_ind);
 14   148 dcl cobol_$perform_para_index fixed bin ext;
 14   149 dcl perform_para_index fixed bin defined (cobol_$perform_para_index);
 14   150 dcl cobol_$perform_sect_index fixed bin ext;
 14   151 dcl perform_sect_index fixed bin defined (cobol_$perform_sect_index);
 14   152 dcl cobol_$alter_index fixed bin ext;
 14   153 dcl alter_index fixed bin defined (cobol_$alter_index);
 14   154 dcl cobol_$list_off fixed bin ext;
 14   155 dcl list_off fixed bin defined (cobol_$list_off);
 14   156 dcl cobol_$constant_offset fixed bin ext;
 14   157 dcl constant_offset fixed bin defined (cobol_$constant_offset);
 14   158 dcl cobol_$misc_max fixed bin ext;
 14   159 dcl misc_max fixed bin defined (cobol_$misc_max);
 14   160 dcl cobol_$pd_map_max fixed bin ext;
 14   161 dcl pd_map_max fixed bin defined (cobol_$pd_map_max);
 14   162 dcl cobol_$map_data_max fixed bin ext;
 14   163 dcl map_data_max fixed bin defined (cobol_$map_data_max);
 14   164 dcl cobol_$fixup_max fixed bin ext;
 14   165 dcl fixup_max fixed bin defined (cobol_$fixup_max);
 14   166 dcl cobol_$tag_table_max fixed bin ext;
 14   167 dcl tag_table_max fixed bin defined (cobol_$tag_table_max);
 14   168 dcl cobol_$temp_token_max fixed bin ext;
 14   169 dcl temp_token_max fixed bin defined (cobol_$temp_token_max);
 14   170 dcl cobol_$allo1_max fixed bin ext;
 14   171 dcl allo1_max fixed bin defined (cobol_$allo1_max);
 14   172 dcl cobol_$eln_max fixed bin ext;
 14   173 dcl eln_max fixed bin defined (cobol_$eln_max);
 14   174 dcl cobol_$debug_enable fixed bin ext;
 14   175 dcl debug_enable fixed bin defined (cobol_$debug_enable);
 14   176 dcl cobol_$non_source_offset fixed bin ext;
 14   177 dcl non_source_offset fixed bin defined (cobol_$non_source_offset);
 14   178 dcl cobol_$initval_flag fixed bin ext;
 14   179 dcl initval_flag fixed bin defined (cobol_$initval_flag);
 14   180 dcl cobol_$date_compiled_sw fixed bin ext;
 14   181 dcl date_compiled_sw fixed bin defined (cobol_$date_compiled_sw);
 14   182 dcl cobol_$include_cnt fixed bin ext;
 14   183 dcl include_cnt fixed bin defined (cobol_$include_cnt);
 14   184 dcl cobol_$fs_charcnt fixed bin ext;
 14   185 dcl fs_charcnt fixed bin defined (cobol_$fs_charcnt);
 14   186 dcl cobol_$ws_charcnt fixed bin ext;
 14   187 dcl ws_charcnt fixed bin defined (cobol_$ws_charcnt);
 14   188 dcl cobol_$coms_charcnt fixed bin ext;
 14   189 dcl coms_charcnt fixed bin defined (cobol_$coms_charcnt);
 14   190 dcl cobol_$ls_charcnt fixed bin ext;
 14   191 dcl ls_charcnt fixed bin defined (cobol_$ls_charcnt);
 14   192 dcl cobol_$cons_charcnt fixed bin ext;
 14   193 dcl cons_charcnt fixed bin defined (cobol_$cons_charcnt);
 14   194 dcl cobol_$value_cnt fixed bin ext;
 14   195 dcl value_cnt fixed bin defined (cobol_$value_cnt);
 14   196 dcl cobol_$cd_cnt fixed bin ext;
 14   197 dcl cd_cnt fixed bin defined (cobol_$cd_cnt);
 14   198 dcl cobol_$fs_wdoff fixed bin ext;
 14   199 dcl fs_wdoff fixed bin defined (cobol_$fs_wdoff);
 14   200 dcl cobol_$ws_wdoff fixed bin ext;
 14   201 dcl ws_wdoff fixed bin defined (cobol_$ws_wdoff);
 14   202 dcl cobol_$coms_wdoff fixed bin ext;
 14   203 dcl coms_wdoff fixed bin defined (cobol_$coms_wdoff);
 14   204 
 14   205 /* CHARACTER */
 14   206 dcl cobol_$scratch_dir char (168)   aligned ext;
 14   207 dcl scratch_dir char (168)   aligned defined (cobol_$scratch_dir);			/* -42- */
 14   208 dcl cobol_$obj_seg_name char (32)   aligned ext;
 14   209 dcl obj_seg_name char (32)   aligned defined (cobol_$obj_seg_name);		/* -8- */
 14   210 
 14   211 /* BIT */
 14   212 dcl cobol_$xref_bypass bit(1) aligned ext;
 14   213 dcl xref_bypass bit(1) aligned defined (cobol_$xref_bypass);			/* -1- */
 14   214 dcl cobol_$same_sort_merge_proc bit(1) aligned ext;
 14   215 dcl same_sort_merge_proc bit(1) aligned defined (cobol_$same_sort_merge_proc);		/* -1- */
 14   216 
 14   217 
 14   218 /* END INCLUDE FILE ... cobol_incl.pl1*/
 14   219 
 14   220 
  3   231 
  3   232 
      361 
      362      end cobol_start_gen;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/24/89  0832.5  cobol_start_gen.pl1               >spec>install>MR12.3-1048>cobol_start_gen.pl1
360          1    03/27/82  0439.3  cobol_start_gen_info.incl.pl1     >ldd>include>cobol_start_gen_info.incl.pl1
1-105        2    03/27/82  0439.5  cobol_opr_start.incl.pl1          >ldd>include>cobol_opr_start.incl.pl1
361          3    03/27/82  0437.8  cobol_start_gen_data.incl.pl1     >ldd>include>cobol_start_gen_data.incl.pl1
3-225        4    11/11/82  1712.7  cobol_file_table.incl.pl1         >ldd>include>cobol_file_table.incl.pl1
3-226        5    11/11/82  1712.8  cobol_file_key.incl.pl1           >ldd>include>cobol_file_key.incl.pl1
3-227        6    03/27/82  0439.8  cobol_type1.incl.pl1              >ldd>include>cobol_type1.incl.pl1
6-15         7    11/11/82  1712.8  cobol_TYPE1.incl.pl1              >ldd>include>cobol_TYPE1.incl.pl1
3-228        8    03/27/82  0439.9  cobol_type9.incl.pl1              >ldd>include>cobol_type9.incl.pl1
8-17         9    11/11/82  1712.7  cobol_TYPE9.incl.pl1              >ldd>include>cobol_TYPE9.incl.pl1
3-229       10    11/11/82  1712.8  cobol_type12.incl.pl1             >ldd>include>cobol_type12.incl.pl1
10-17       11    03/27/82  0439.6  cobol_TYPE12.incl.pl1             >ldd>include>cobol_TYPE12.incl.pl1
3-230       12    03/27/82  0439.8  cobol_type19.incl.pl1             >ldd>include>cobol_type19.incl.pl1
12-17       13    03/27/82  0439.6  cobol_TYPE19.incl.pl1             >ldd>include>cobol_TYPE19.incl.pl1
3-231       14    11/11/82  1712.7  cobol_.incl.pl1                   >ldd>include>cobol_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
a                        11            based           bit(3)                   level 2 packed packed unaligned dcl 12-16 ref 187
access                   45            based           fixed bin(17,0)          level 2 dcl 4-25 ref 154 317
addr                                                   builtin function         dcl 3-220 ref 93 112 113 119 182 202 206 212 218 220
                                                                                  220 256 260 266 272 274 274
aloff                           000146 automatic       fixed bin(17,0)          dcl 69 set ref 117* 118 120 121 122 123 124
alpha_type9                     000072 internal static structure                level 1 unaligned dcl 3-84 set ref 212 266
alt_key_info             23(27)        based           char(5)                  level 2 packed packed unaligned dcl 4-25 ref 169
alt_sw                          000157 automatic       bit(1)                   packed unaligned dcl 78 set ref 144* 167 227 279 305
                                                                                  328
alternate_keys           51            based           fixed bin(17,0)          level 2 dcl 4-25 ref 144
arg                       4     000102 automatic       structure                array level 2 unaligned dcl 41 set ref 119
arg_ptr                         000142 automatic       pointer                  dcl 66 set ref 112*
argb                                   based           bit(216)                 array packed unaligned dcl 59 set ref 119*
arglist_off               1     000102 automatic       fixed bin(17,0)          level 2 dcl 41 set ref 118*
args                            000102 automatic       structure                level 1 unaligned dcl 41 set ref 112
b                        11(03)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 ref 98
char5                           000162 automatic       char(5)                  packed unaligned dcl 84 set ref 169* 173* 175*
cobol_$next_tag                 000246 external static fixed bin(17,0)          dcl 14-128 set ref 100 101 103* 103 108 109* 109 129
                                                                                  131 132* 132 149 150* 150 224 234* 234 296 297*
                                                                                  297
cobol_alloc$stack               000210 constant        entry                    external dcl 3-194 ref 117
cobol_call_op                   000222 constant        entry                    external dcl 3-204 ref 137 158 239 305 307 332 354
cobol_code                      000174 internal static fixed bin(17,0)          level 2 dcl 3-128 set ref 94* 335
cobol_define_tag                000216 constant        entry                    external dcl 3-200 ref 134 141 162 243 311
cobol_gen_ioerror               000224 constant        entry                    external dcl 3-205 ref 139 160 241 309
cobol_gen_ioerror$finish_up     000226 constant        entry                    external dcl 3-206 ref 340
cobol_io_util$bypass_mode_error 000242 constant        entry                    external dcl 3-214 ref 152
cobol_io_util$file_desc         000236 constant        entry                    external dcl 3-210 ref 330 351
cobol_io_util$key_loc           000234 constant        entry                    external dcl 3-209 ref 229 281
cobol_io_util$key_num           000244 constant        entry                    external dcl 3-215 ref 353
cobol_io_util$move_direct       000240 constant        entry                    external dcl 3-211 ref 154 222 253 276 322
cobol_ioop_util$ldaldx5         000204 constant        entry                    external dcl 3-192 ref 303
cobol_ioop_util$set_icode       000206 constant        entry                    external dcl 3-193 ref 238 301
cobol_move_gen                  000220 constant        entry                    external dcl 3-203 ref 220 274
cobol_read_ft                   000212 constant        entry                    external dcl 3-195 ref 115
cobol_read_rand                 000214 constant        entry                    external dcl 3-196 ref 173 180
cobol_reg_manager$after_op      000230 constant        entry                    external dcl 3-207 ref 335
cobol_set_fsbptr                000232 constant        entry                    external dcl 3-208 ref 136 236 299 320
control_errno                          constant        fixed bin(17,0)          initial dcl 3-187 ref 313
d                        11(05)        based           bit(2)                   level 2 packed packed unaligned dcl 12-16 ref 190
                                                                                  251
data_name                              based           structure                level 1 unaligned dcl 8-16
delete                   34(01)        based           bit(1)                   level 2 packed packed unaligned dcl 4-25 ref 154 317
desc                     12            based           char(40)                 level 2 packed packed unaligned dcl 5-17 ref 182
e                         5            based           fixed bin(17,0)          level 2 dcl 12-16 set ref 167 171 353*
end_stmt                               based           structure                level 1 unaligned dcl 12-16
eos_ptr                         000170 automatic       pointer                  dcl 12-13 set ref 92* 98 167 171 187 190 251 338 353
errno                           000156 automatic       fixed bin(17,0)          dcl 77 set ref 245* 313*
external                 33(10)        based           bit(1)                   level 2 packed packed unaligned dcl 4-25 ref 146 154
                                                                                  317
f                        11(07)        based           bit(2)                   level 2 packed packed unaligned dcl 12-16 ref 338
fd_token                               based           structure                level 1 unaligned dcl 10-16
file_desc_1_offset       13            based           fixed bin(24,0)          level 2 dcl 4-25 set ref 330* 351*
file_key                               based           structure                level 1 unaligned dcl 5-17
file_key_desc                          based           char(40)                 packed unaligned dcl 58 set ref 182*
file_key_info            13     000072 internal static structure                level 2 in structure "alpha_type9" unaligned
                                                                                  dcl 3-84 in procedure "cobol_start_gen"
file_key_info            13     000126 internal static structure                level 2 in structure "fkey_type9" unaligned dcl 3-97
                                                                                  in procedure "cobol_start_gen" set ref 182
file_key_info            13     000036 internal static structure                level 2 in structure "num_type9" unaligned dcl 3-70
                                                                                  in procedure "cobol_start_gen"
file_no                  12            based           fixed bin(17,0)          level 2 dcl 10-16 set ref 115*
file_table                             based           structure                level 1 unaligned dcl 4-25
fkey_ptr                        000140 automatic       pointer                  dcl 63 set ref 173* 175 180* 182
fkey_type9                      000126 internal static structure                level 1 unaligned dcl 3-97 set ref 202 256
fsb                     124            based           structure                level 2 unaligned dcl 4-25
fsb_key                                constant        fixed bin(17,0)          initial dcl 3-183 ref 209 215
fsb_keylen_sw                   000203 internal static fixed bin(17,0)          initial dcl 3-182 set ref 154* 222* 322*
ft_ptr                          000136 automatic       pointer                  dcl 62 set ref 115* 136* 139* 144 144 146 146 154
                                                                                  154 154 154 160* 169 180 204 209 215 236* 241* 258
                                                                                  299* 309* 317 317 317 317 320* 330 340* 351
i                                      parameter       fixed bin(17,0)          dcl 348 set ref 344 354*
iocb_arg                        000010 internal static structure                level 1 unaligned dcl 3-5 set ref 119
iocb_basic_struct               000016 internal static structure                level 1 unaligned dcl 3-56 set ref 113
ioerror                         000174 internal static structure                level 1 unaligned dcl 3-128 set ref 93
ioerror_ptr                     000144 automatic       pointer                  dcl 67 set ref 93* 139* 160* 241* 309* 340*
is_tag                    2     000174 internal static fixed bin(17,0)          level 2 dcl 3-128 set ref 100* 106* 338
item_length              16            based           fixed bin(24,0)          level 2 dcl 8-16 ref 190 267
key_ctr                         000164 automatic       fixed bin(17,0)          dcl 84 set ref 171*
key_off                         000154 automatic       fixed bin(17,0)          dcl 75 set ref 124* 263 269
keylen_off                      000153 automatic       fixed bin(17,0)          dcl 74 set ref 123* 276
mode                      6     000174 internal static fixed bin(17,0)          level 2 dcl 3-128 set ref 96*
mp                                     based           structure                level 1 unaligned dcl 34
mp_ptr                                 parameter       pointer                  dcl 33 ref 28 90 92 92 95 115 190 201 255 267
mpout                           000024 internal static structure                level 1 unaligned dcl 3-64 set ref 220 220 274 274
n                                      based           fixed bin(17,0)          level 2 dcl 34 ref 92
next_alt                  1(09)        based           char(5)                  level 2 packed packed unaligned dcl 5-17 ref 175
ns_tag                    3     000174 internal static fixed bin(17,0)          level 2 dcl 3-128 set ref 102* 108*
ntag                            000155 automatic       fixed bin(17,0)          dcl 76 set ref 131* 137* 141* 149* 152* 158* 162*
                                                                                  224* 239* 243* 296* 305* 307* 311*
num_type9                       000036 internal static structure                level 1 unaligned dcl 3-70 set ref 206 260
off                      24     000072 internal static fixed bin(17,0)          level 3 in structure "alpha_type9" dcl 3-84
                                                                                  in procedure "cobol_start_gen" set ref 215* 269*
off                     125            based           fixed bin(24,0)          level 3 in structure "file_table" dcl 4-25
                                                                                  in procedure "cobol_start_gen" ref 209 215
off                      24     000036 internal static fixed bin(17,0)          level 3 in structure "num_type9" dcl 3-70
                                                                                  in procedure "cobol_start_gen" set ref 209* 263*
open_out                 34(03)        based           bit(1)                   level 2 packed packed unaligned dcl 4-25 ref 146
order_off                       000151 automatic       fixed bin(17,0)          dcl 72 set ref 121*
organization             43            based           fixed bin(17,0)          level 2 dcl 4-25 ref 144 204 258
passed_tag                             parameter       fixed bin(17,0)          dcl 31 set ref 28 101* 338*
places_left              17     000036 internal static fixed bin(17,0)          level 3 dcl 3-70 set ref 207* 261*
pt                              000010 internal static pointer                  initial level 2 in structure "iocb_arg" dcl 3-5
                                                                                  in procedure "cobol_start_gen" set ref 113*
pt                        2            based           pointer                  array level 2 in structure "mp" dcl 34 in procedure
                                                                                  "cobol_start_gen" ref 90 92 95 115 190 201 255 267
pt1                       2     000024 internal static pointer                  level 2 dcl 3-64 set ref 201* 255*
pt2                       4     000024 internal static pointer                  level 2 dcl 3-64 set ref 202* 256*
pt3                       6     000024 internal static pointer                  level 2 dcl 3-64 set ref 206* 212* 260* 266*
pt4                      10     000024 internal static pointer                  level 2 dcl 3-64 set ref 218* 272*
ptag                            000100 automatic       fixed bin(17,0)          dcl 32 set ref 101* 102 107*
r_key_info               22(18)        based           char(5)                  level 2 packed packed unaligned dcl 4-25 set ref
                                                                                  180*
reclen_off                      000150 automatic       fixed bin(17,0)          dcl 71 set ref 120* 303*
relation_off                    000152 automatic       fixed bin(17,0)          dcl 73 set ref 122* 253 281*
retry_tag                 1     000174 internal static fixed bin(17,0)          level 2 dcl 3-128 set ref 129* 134*
rewrite                  34(09)        based           bit(1)                   level 2 packed packed unaligned dcl 4-25 ref 154 317
rw_ptr                          000166 automatic       pointer                  dcl 6-11 set ref 90*
seek_errno                             constant        fixed bin(17,0)          initial dcl 3-185 ref 245
seek_head_sw                    000160 automatic       bit(1)                   packed unaligned dcl 80 set ref 184* 193* 194* 198
seg                      23     000036 internal static fixed bin(17,0)          initial level 3 in structure "num_type9" dcl 3-70
                                                                                  in procedure "cobol_start_gen" set ref 208* 262*
seg                      23     000072 internal static fixed bin(17,0)          initial level 3 in structure "alpha_type9" dcl 3-84
                                                                                  in procedure "cobol_start_gen" set ref 214* 268*
size                     16     000072 internal static fixed bin(17,0)          initial level 3 in structure "alpha_type9" dcl 3-84
                                                                                  in procedure "cobol_start_gen" set ref 213* 267*
size                            000147 automatic       fixed bin(17,0)          dcl 70 in procedure "cobol_start_gen" set ref 207*
                                                                                  213* 222 222 261* 267* 276 276
size                     16     000126 internal static fixed bin(17,0)          initial level 3 in structure "fkey_type9" dcl 3-97
                                                                                  in procedure "cobol_start_gen" set ref 190 213
size                     16     000036 internal static fixed bin(17,0)          initial level 3 in structure "num_type9" dcl 3-70
                                                                                  in procedure "cobol_start_gen" set ref 207* 261*
substr                                                 builtin function         dcl 3-220 ref 222 222 276 276
temp_bit2                       000161 automatic       bit(2)                   packed unaligned dcl 81 set ref 251* 253
type19                          000162 internal static structure                level 1 unaligned dcl 3-110 set ref 218 272
type1_ptr                 4     000174 internal static pointer                  level 2 dcl 3-128 set ref 95*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
allo1_max                              defined         fixed bin(17,0)          dcl 14-171
allo1_ptr                              defined         pointer                  dcl 14-67
alter_flag                             defined         fixed bin(17,0)          dcl 14-135
alter_index                            defined         fixed bin(17,0)          dcl 14-153
alter_list_ptr                         defined         pointer                  dcl 14-39
aq_struct                              internal static structure                level 1 unaligned dcl 3-41
cd_cnt                                 defined         fixed bin(17,0)          dcl 14-197
cobol_$allo1_max                       external static fixed bin(17,0)          dcl 14-170
cobol_$allo1_ptr                       external static pointer                  dcl 14-66
cobol_$alter_flag                      external static fixed bin(17,0)          dcl 14-134
cobol_$alter_index                     external static fixed bin(17,0)          dcl 14-152
cobol_$alter_list_ptr                  external static pointer                  dcl 14-38
cobol_$cd_cnt                          external static fixed bin(17,0)          dcl 14-196
cobol_$cobol_data_wd_off               external static fixed bin(17,0)          dcl 14-118
cobol_$compile_count                   external static fixed bin(17,0)          dcl 14-142
cobol_$coms_charcnt                    external static fixed bin(17,0)          dcl 14-188
cobol_$coms_wdoff                      external static fixed bin(17,0)          dcl 14-202
cobol_$con_end_ptr                     external static pointer                  dcl 14-10
cobol_$con_wd_off                      external static fixed bin(17,0)          dcl 14-92
cobol_$cons_charcnt                    external static fixed bin(17,0)          dcl 14-192
cobol_$constant_offset                 external static fixed bin(17,0)          dcl 14-156
cobol_$data_init_flag                  external static fixed bin(17,0)          dcl 14-130
cobol_$date_compiled_sw                external static fixed bin(17,0)          dcl 14-180
cobol_$debug_enable                    external static fixed bin(17,0)          dcl 14-174
cobol_$def_base_ptr                    external static pointer                  dcl 14-12
cobol_$def_max                         external static fixed bin(17,0)          dcl 14-96
cobol_$def_wd_off                      external static fixed bin(17,0)          dcl 14-94
cobol_$diag_ptr                        external static pointer                  dcl 14-70
cobol_$eln_max                         external static fixed bin(17,0)          dcl 14-172
cobol_$eln_ptr                         external static pointer                  dcl 14-68
cobol_$fixup_max                       external static fixed bin(17,0)          dcl 14-164
cobol_$fixup_ptr                       external static pointer                  dcl 14-30
cobol_$fs_charcnt                      external static fixed bin(17,0)          dcl 14-184
cobol_$fs_wdoff                        external static fixed bin(17,0)          dcl 14-198
cobol_$include_cnt                     external static fixed bin(17,0)          dcl 14-182
cobol_$include_info_ptr                external static pointer                  dcl 14-86
cobol_$init_stack_off                  external static fixed bin(17,0)          dcl 14-124
cobol_$initval_base_ptr                external static pointer                  dcl 14-32
cobol_$initval_file_ptr                external static pointer                  dcl 14-34
cobol_$initval_flag                    external static fixed bin(17,0)          dcl 14-178
cobol_$link_base_ptr                   external static pointer                  dcl 14-14
cobol_$link_max                        external static fixed bin(17,0)          dcl 14-100
cobol_$link_wd_off                     external static fixed bin(17,0)          dcl 14-98
cobol_$list_off                        external static fixed bin(17,0)          dcl 14-154
cobol_$list_ptr                        external static pointer                  dcl 14-64
cobol_$ls_charcnt                      external static fixed bin(17,0)          dcl 14-190
cobol_$main_pcs_ptr                    external static pointer                  dcl 14-84
cobol_$map_data_max                    external static fixed bin(17,0)          dcl 14-162
cobol_$map_data_ptr                    external static pointer                  dcl 14-54
cobol_$max_stack_off                   external static fixed bin(17,0)          dcl 14-122
cobol_$minpral5_ptr                    external static pointer                  dcl 14-50
cobol_$misc_base_ptr                   external static pointer                  dcl 14-60
cobol_$misc_end_ptr                    external static pointer                  dcl 14-62
cobol_$misc_max                        external static fixed bin(17,0)          dcl 14-158
cobol_$non_source_offset               external static fixed bin(17,0)          dcl 14-176
cobol_$ntbuf_ptr                       external static pointer                  dcl 14-82
cobol_$obj_seg_name                    external static char(32)                 dcl 14-208
cobol_$op_con_ptr                      external static pointer                  dcl 14-80
cobol_$para_eop_flag                   external static fixed bin(17,0)          dcl 14-138
cobol_$pd_map_index                    external static fixed bin(17,0)          dcl 14-116
cobol_$pd_map_max                      external static fixed bin(17,0)          dcl 14-160
cobol_$pd_map_ptr                      external static pointer                  dcl 14-28
cobol_$pd_map_sw                       external static fixed bin(17,0)          dcl 14-126
cobol_$perform_list_ptr                external static pointer                  dcl 14-36
cobol_$perform_para_index              external static fixed bin(17,0)          dcl 14-148
cobol_$perform_sect_index              external static fixed bin(17,0)          dcl 14-150
cobol_$priority_no                     external static fixed bin(17,0)          dcl 14-140
cobol_$ptr_assumption_ind              external static fixed bin(17,0)          dcl 14-144
cobol_$ptr_status_ptr                  external static pointer                  dcl 14-56
cobol_$reg_assumption_ind              external static fixed bin(17,0)          dcl 14-146
cobol_$reg_status_ptr                  external static pointer                  dcl 14-58
cobol_$reloc_def_base_ptr              external static pointer                  dcl 14-20
cobol_$reloc_def_max                   external static fixed bin(24,0)          dcl 14-108
cobol_$reloc_link_base_ptr             external static pointer                  dcl 14-22
cobol_$reloc_link_max                  external static fixed bin(24,0)          dcl 14-110
cobol_$reloc_sym_base_ptr              external static pointer                  dcl 14-24
cobol_$reloc_sym_max                   external static fixed bin(24,0)          dcl 14-112
cobol_$reloc_text_base_ptr             external static pointer                  dcl 14-18
cobol_$reloc_text_max                  external static fixed bin(24,0)          dcl 14-106
cobol_$reloc_work_base_ptr             external static pointer                  dcl 14-26
cobol_$reloc_work_max                  external static fixed bin(24,0)          dcl 14-114
cobol_$reswd_ptr                       external static pointer                  dcl 14-78
cobol_$same_sort_merge_proc            external static bit(1)                   dcl 14-214
cobol_$scratch_dir                     external static char(168)                dcl 14-206
cobol_$sect_eop_flag                   external static fixed bin(17,0)          dcl 14-136
cobol_$seg_init_flag                   external static fixed bin(17,0)          dcl 14-132
cobol_$seg_init_list_ptr               external static pointer                  dcl 14-40
cobol_$stack_off                       external static fixed bin(17,0)          dcl 14-120
cobol_$statement_info_ptr              external static pointer                  dcl 14-76
cobol_$sym_base_ptr                    external static pointer                  dcl 14-16
cobol_$sym_max                         external static fixed bin(17,0)          dcl 14-104
cobol_$sym_wd_off                      external static fixed bin(17,0)          dcl 14-102
cobol_$tag_table_max                   external static fixed bin(17,0)          dcl 14-166
cobol_$tag_table_ptr                   external static pointer                  dcl 14-52
cobol_$temp_token_area_ptr             external static pointer                  dcl 14-42
cobol_$temp_token_max                  external static fixed bin(17,0)          dcl 14-168
cobol_$temp_token_ptr                  external static pointer                  dcl 14-44
cobol_$text_base_ptr                   external static pointer                  dcl 14-8
cobol_$text_wd_off                     external static fixed bin(17,0)          dcl 14-90
cobol_$token_block1_ptr                external static pointer                  dcl 14-46
cobol_$token_block2_ptr                external static pointer                  dcl 14-48
cobol_$value_cnt                       external static fixed bin(17,0)          dcl 14-194
cobol_$ws_charcnt                      external static fixed bin(17,0)          dcl 14-186
cobol_$ws_wdoff                        external static fixed bin(17,0)          dcl 14-200
cobol_$xref_bypass                     external static bit(1)                   dcl 14-212
cobol_$xref_chain_ptr                  external static pointer                  dcl 14-74
cobol_$xref_token_ptr                  external static pointer                  dcl 14-72
cobol_data_wd_off                      defined         fixed bin(17,0)          dcl 14-119
cobol_io_util$bypass_error      000000 constant        entry                    external dcl 3-213
cobol_io_util$move_lit          000000 constant        entry                    external dcl 3-212
cobol_open_util$check_open      000000 constant        entry                    external dcl 3-216
cobol_pointer_register$call     000000 constant        entry                    external dcl 3-197
cobol_pointer_register$get      000000 constant        entry                    external dcl 3-198
cobol_register$load             000000 constant        entry                    external dcl 3-199
compile_count                          defined         fixed bin(17,0)          dcl 14-143
coms_charcnt                           defined         fixed bin(17,0)          dcl 14-189
coms_wdoff                             defined         fixed bin(17,0)          dcl 14-203
con_end_ptr                            defined         pointer                  dcl 14-11
con_wd_off                             defined         fixed bin(17,0)          dcl 14-93
cons_charcnt                           defined         fixed bin(17,0)          dcl 14-193
constant_offset                        defined         fixed bin(17,0)          dcl 14-157
control_desc                           internal static structure                level 1 packed packed unaligned dcl 3-51
control_error                          internal static structure                level 1 unaligned dcl 3-170
control_special                        internal static structure                level 1 unaligned dcl 3-142
data_init_flag                         defined         fixed bin(17,0)          dcl 14-131
date_compiled_sw                       defined         fixed bin(17,0)          dcl 14-181
debug_enable                           defined         fixed bin(17,0)          dcl 14-175
def_base_ptr                           defined         pointer                  dcl 14-13
def_max                                defined         fixed bin(17,0)          dcl 14-97
def_wd_off                             defined         fixed bin(17,0)          dcl 14-95
diag_ptr                               defined         pointer                  dcl 14-71
dn_ptr                                 automatic       pointer                  dcl 65
eln_max                                defined         fixed bin(17,0)          dcl 14-173
eln_ptr                                defined         pointer                  dcl 14-69
fixup_max                              defined         fixed bin(17,0)          dcl 14-165
fixup_ptr                              defined         pointer                  dcl 14-31
fs_charcnt                             defined         fixed bin(17,0)          dcl 14-185
fs_wdoff                               defined         fixed bin(17,0)          dcl 14-199
fsb_arg                                internal static structure                level 1 unaligned dcl 3-17
fsb_key_wdoff                          internal static fixed bin(17,0)          initial dcl 3-184
include_cnt                            defined         fixed bin(17,0)          dcl 14-183
include_info_ptr                       defined         pointer                  dcl 14-87
init_stack_off                         defined         fixed bin(17,0)          dcl 14-125
initval_base_ptr                       defined         pointer                  dcl 14-33
initval_file_ptr                       defined         pointer                  dcl 14-35
initval_flag                           defined         fixed bin(17,0)          dcl 14-179
link_base_ptr                          defined         pointer                  dcl 14-15
link_max                               defined         fixed bin(17,0)          dcl 14-101
link_wd_off                            defined         fixed bin(17,0)          dcl 14-99
list_off                               defined         fixed bin(17,0)          dcl 14-155
list_ptr                               defined         pointer                  dcl 14-65
ls_charcnt                             defined         fixed bin(17,0)          dcl 14-191
main_pcs_ptr                           defined         pointer                  dcl 14-85
map_data_max                           defined         fixed bin(17,0)          dcl 14-163
map_data_ptr                           defined         pointer                  dcl 14-55
max_stack_off                          defined         fixed bin(17,0)          dcl 14-123
mcode_off                              internal static fixed bin(17,0)          initial dcl 3-181
minpral5_ptr                           defined         pointer                  dcl 14-51
misc_base_ptr                          defined         pointer                  dcl 14-61
misc_end_ptr                           defined         pointer                  dcl 14-63
misc_max                               defined         fixed bin(17,0)          dcl 14-159
name_ptr                               automatic       pointer                  dcl 64
next_tag                               defined         fixed bin(17,0)          dcl 14-129
non_source_offset                      defined         fixed bin(17,0)          dcl 14-177
ntbuf_ptr                              defined         pointer                  dcl 14-83
obj_seg_name                           defined         char(32)                 dcl 14-209
op_con_ptr                             defined         pointer                  dcl 14-81
output_errno                           internal static fixed bin(17,0)          initial dcl 3-186
output_error                           internal static structure                level 1 unaligned dcl 3-154
para_eop_flag                          defined         fixed bin(17,0)          dcl 14-139
pd_map_index                           defined         fixed bin(17,0)          dcl 14-117
pd_map_max                             defined         fixed bin(17,0)          dcl 14-161
pd_map_ptr                             defined         pointer                  dcl 14-29
pd_map_sw                              defined         fixed bin(17,0)          dcl 14-127
perform_list_ptr                       defined         pointer                  dcl 14-37
perform_para_index                     defined         fixed bin(17,0)          dcl 14-149
perform_sect_index                     defined         fixed bin(17,0)          dcl 14-151
pr1_struct                             internal static structure                level 1 unaligned dcl 3-24
priority_no                            defined         fixed bin(17,0)          dcl 14-141
ptr_assumption_ind                     defined         fixed bin(17,0)          dcl 14-145
ptr_status_ptr                         defined         pointer                  dcl 14-57
reg_assumption_ind                     defined         fixed bin(17,0)          dcl 14-147
reg_status_ptr                         defined         pointer                  dcl 14-59
reloc_def_base_ptr                     defined         pointer                  dcl 14-21
reloc_def_max                          defined         fixed bin(24,0)          dcl 14-109
reloc_link_base_ptr                    defined         pointer                  dcl 14-23
reloc_link_max                         defined         fixed bin(24,0)          dcl 14-111
reloc_sym_base_ptr                     defined         pointer                  dcl 14-25
reloc_sym_max                          defined         fixed bin(24,0)          dcl 14-113
reloc_text_base_ptr                    defined         pointer                  dcl 14-19
reloc_text_max                         defined         fixed bin(24,0)          dcl 14-107
reloc_work_base_ptr                    defined         pointer                  dcl 14-27
reloc_work_max                         defined         fixed bin(24,0)          dcl 14-115
reserved_word                          based           structure                level 1 unaligned dcl 6-14
reswd_ptr                              defined         pointer                  dcl 14-79
same_sort_merge_proc                   defined         bit(1)                   dcl 14-215
scratch_dir                            defined         char(168)                dcl 14-207
sect_eop_flag                          defined         fixed bin(17,0)          dcl 14-137
seek_error                             internal static structure                level 1 unaligned dcl 3-160
seek_special                           internal static structure                level 1 unaligned dcl 3-136
seg_init_flag                          defined         fixed bin(17,0)          dcl 14-133
seg_init_list_ptr                      defined         pointer                  dcl 14-41
stack_off                              defined         fixed bin(17,0)          dcl 14-121
statement_info_ptr                     defined         pointer                  dcl 14-77
status_arg                             internal static structure                level 1 unaligned dcl 3-12
sym_base_ptr                           defined         pointer                  dcl 14-17
sym_max                                defined         fixed bin(17,0)          dcl 14-105
sym_wd_off                             defined         fixed bin(17,0)          dcl 14-103
tag_table_max                          defined         fixed bin(17,0)          dcl 14-167
tag_table_ptr                          defined         pointer                  dcl 14-53
temp_arg                               internal static structure                level 1 unaligned dcl 3-8
temp_token_area_ptr                    defined         pointer                  dcl 14-43
temp_token_max                         defined         fixed bin(17,0)          dcl 14-169
temp_token_ptr                         defined         pointer                  dcl 14-45
text                                   based           bit(36)                  array packed unaligned dcl 60
text_base_ptr                          defined         pointer                  dcl 14-9
text_wd_off                            defined         fixed bin(17,0)          dcl 14-91
token_block1_ptr                       defined         pointer                  dcl 14-47
token_block2_ptr                       defined         pointer                  dcl 14-49
unopen_error                           internal static structure                level 1 unaligned dcl 3-148
value_cnt                              defined         fixed bin(17,0)          dcl 14-195
ws_charcnt                             defined         fixed bin(17,0)          dcl 14-187
ws_wdoff                               defined         fixed bin(17,0)          dcl 14-201
x1_struct                              internal static structure                level 1 unaligned dcl 3-32
xref_bypass                            defined         bit(1)                   dcl 14-213
xref_chain_ptr                         defined         pointer                  dcl 14-75
xref_token_ptr                         defined         pointer                  dcl 14-73

NAMES DECLARED BY EXPLICIT CONTEXT.
alt_start                       001335 constant        entry                    internal dcl 344 ref 231 283
cobol_start_gen                 000006 constant        entry                    external dcl 28
start                           000013 constant        label                    dcl 90
start_codegen                   000144 constant        label                    dcl 129

NAME DECLARED BY CONTEXT OR IMPLICATION.
unspec                                                 builtin function         ref 119 222 222 276 276

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1634        2104    1400        1644
Length      2640    1400       250         517     233         174

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cobol_start_gen                     174 external procedure  is an external procedure.  
alt_start                               internal procedure  shares stack frame of external procedure cobol_start_gen.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 iocb_arg                    cobol_start_gen
000016 iocb_basic_struct           cobol_start_gen
000024 mpout                       cobol_start_gen
000036 num_type9                   cobol_start_gen
000072 alpha_type9                 cobol_start_gen
000126 fkey_type9                  cobol_start_gen
000162 type19                      cobol_start_gen
000174 ioerror                     cobol_start_gen
000203 fsb_keylen_sw               cobol_start_gen

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cobol_start_gen          000100 ptag                        cobol_start_gen
                         000102 args                        cobol_start_gen
                         000136 ft_ptr                      cobol_start_gen
                         000140 fkey_ptr                    cobol_start_gen
                         000142 arg_ptr                     cobol_start_gen
                         000144 ioerror_ptr                 cobol_start_gen
                         000146 aloff                       cobol_start_gen
                         000147 size                        cobol_start_gen
                         000150 reclen_off                  cobol_start_gen
                         000151 order_off                   cobol_start_gen
                         000152 relation_off                cobol_start_gen
                         000153 keylen_off                  cobol_start_gen
                         000154 key_off                     cobol_start_gen
                         000155 ntag                        cobol_start_gen
                         000156 errno                       cobol_start_gen
                         000157 alt_sw                      cobol_start_gen
                         000160 seek_head_sw                cobol_start_gen
                         000161 temp_bit2                   cobol_start_gen
                         000162 char5                       cobol_start_gen
                         000164 key_ctr                     cobol_start_gen
                         000166 rw_ptr                      cobol_start_gen
                         000170 eos_ptr                     cobol_start_gen

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
r_e_as              r_ne_as             call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cobol_alloc$stack             cobol_call_op                 cobol_define_tag              cobol_gen_ioerror
cobol_gen_ioerror$finish_up   cobol_io_util$bypass_mode_error                             cobol_io_util$file_desc
cobol_io_util$key_loc         cobol_io_util$key_num         cobol_io_util$move_direct     cobol_ioop_util$ldaldx5
cobol_ioop_util$set_icode     cobol_move_gen                cobol_read_ft                 cobol_read_rand
cobol_reg_manager$after_op    cobol_set_fsbptr

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
cobol_$next_tag




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     28 000002        90 000013        92 000020        93 000024        94 000026        95 000027        96 000030
     98 000031       100 000037       101 000041       102 000045       103 000046       104 000050       106 000051
    107 000052       108 000053       109 000055       112 000056       113 000060       115 000062       117 000075
    118 000114       119 000116       120 000125       121 000130       122 000133       123 000136       124 000141
    129 000144       131 000146       132 000151       134 000153       136 000161       137 000170       139 000203
    141 000214       144 000223       146 000234       149 000242       150 000245       152 000246       154 000260
    158 000321       160 000334       162 000345       167 000354       169 000362       171 000367       173 000377
    175 000414       177 000422       178 000424       180 000425       182 000445       184 000452       187 000453
    190 000457       193 000472       194 000475       198 000477       201 000501       202 000506       204 000510
    206 000514       207 000516       208 000522       209 000524       210 000527       212 000530       213 000532
    214 000535       215 000537       218 000542       220 000544       222 000554       224 000604       227 000607
    229 000611       231 000623       234 000627       236 000631       238 000637       239 000644       241 000657
    243 000670       245 000677       247 000701       251 000702       253 000706       255 000740       256 000746
    258 000750       260 000754       261 000756       262 000762       263 000764       264 000767       266 000770
    267 000772       268 001000       269 001002       272 001005       274 001007       276 001017       279 001052
    281 001054       283 001067       296 001073       297 001076       299 001077       301 001105       303 001112
    305 001125       307 001143       309 001156       311 001167       313 001176       317 001200       320 001212
    322 001221       328 001250       330 001252       332 001262       335 001276       338 001310       340 001323
    342 001334       344 001335       351 001337       353 001347       354 001357       355 001372


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
