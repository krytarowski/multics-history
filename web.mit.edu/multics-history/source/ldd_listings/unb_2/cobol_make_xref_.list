	COMPILATION LISTING OF SEGMENT cobol_make_xref_
	Compiled by: Multics PL/I Compiler, Release 31b, of April 24, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 05/24/89  0945.2 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
       17*     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
       18*     MCR8060 cobol_make_xref_.pl1 Reformatted code to new Cobol standard.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 /* Modified on 11/03/81 by FCH, char6 replaced by char8, [5.1-1], phx10955(BUG496) */
       23 /* Modified on 05/16/80 by FCH, [4.2-1], decl for tag_addr corrected */
       24 /* Modified on 07/08/77 by GM to fix  binary output on cross ref. */
       25 /* Modified on 02/10/77 by ORN to include cd-name info and misc changes */
       26 /* Modified on 01/19/77 by ORN to give occurs info and full class description */
       27 /* Modified since Version 2.0 */
       28 
       29 /* format: style3 */
       30 cobol_make_xref_:
       31      proc;
       32 
       33 /* Produces an Cross-Reference Listing in the List segment when "symbols" option is specified. */
       34 
       35 dcl	(p, q)		ptr;
       36 dcl	line_ptr		ptr;
       37 dcl	dn_ptr		ptr;
       38 dcl	name_ptr		ptr;
       39 dcl	ft_ptr		ptr;
       40 dcl	(ff, nl)		char (1);			/*[5.1-1]*/
       41 dcl	char8		char (8);
       42 dcl	char9		char (9);
       43 dcl	p_type		char (1);
       44 dcl	picture_string	char (15);
       45 dcl	noxref		char (35);
       46 dcl	c		char (4) based (q);
       47 dcl	name_string	char (30) varying;
       48 dcl	bit9		bit (9) based;
       49 dcl	bit36		bit (36) based (addr (number));
       50 dcl	(i, n, t)		fixed bin;
       51 dcl	char_off		fixed bin (21);
       52 dcl	char_offset	fixed bin;
       53 dcl	c_off		fixed bin;
       54 dcl	cv_length		fixed bin;
       55 dcl	fl_length		fixed bin;
       56 dcl	cv_off		fixed bin;
       57 dcl	name_length	fixed bin;
       58 dcl	left		fixed bin;
       59 dcl	tag_loc		fixed bin;
       60 dcl	number		fixed bin (35);
       61 dcl	s		fixed bin (35);
       62 dcl	mcode		fixed bin (35);		/*[4.2-1]*/
       63 declare	1 DEF		aligned based (cobol_$tag_table_ptr),
       64 						/*[4.2-1]*/
       65 	  2 tag_max	fixed bin,		/*[4.2-1]*/
       66 	  2 TAG		(32767),			/*[4.2-1]*/
       67 	    3 tag_addr	fixed bin (17) unal,	/*[4.2-1]*/
       68 	    3 tag_no	fixed bin (17) unal;
       69 dcl	code_generated	bit (1);
       70 dcl	alpha		bit (1);
       71 dcl	numeric		bit (1);
       72 dcl	edited		bit (1);
       73 dcl	varying		bit (1);
       74 dcl	fixed_binary	bit (1);
       75 dcl	char_string	char (1048576) based (cobol_$list_ptr);
       76 dcl	line		char (120) based (line_ptr);
       77 dcl	maxlen_id		char (23) based (line_ptr);
       78 dcl	1 print_line	unaligned based (line_ptr),
       79 	  2 identifier	char (18),
       80 	  2 filler1	char (2),
       81 	  2 level_no	char (2),
       82 	  2 filler2	char (2),
       83 	  2 type		char (4),
       84 	  2 filler3	char (2),
       85 	  2 offset	char (6),
       86 	  2 bit_offset	char (4),
       87 	  2 redef		char (1),
       88 	  2 filler4	char (1),
       89 	  2 usage		char (15),
       90 	  2 filler5	char (1),
       91 	  2 occ		char (2),
       92 	  2 filler6	char (2),
       93 	  2 pic_string	char (15),
       94 	  2 filler7	char (2);
       95 dcl	def_ref		char (100) based (line_ptr);
       96 dcl	1 header_line	unaligned based (line_ptr),
       97 	  2 form_feed_char	char (1),
       98 	  2 new_line_char1	char (1),
       99 	  2 header_field	char (82),
      100 	  2 new_line_char2	char (1),
      101 	  2 new_line_char3	char (1);
      102 dcl	1 token		based,
      103 	  2 size		fixed bin (15),
      104 	  2 line		fixed bin (15),
      105 	  2 column	fixed bin (15),
      106 	  2 type		fixed bin (15);
      107 dcl	1 c_n		based (p),
      108 	  2 size		fixed bin (15),
      109 	  2 line		fixed bin (15),
      110 	  2 column	fixed bin (7),
      111 	  2 type		fixed bin (7),		/* type = 11 */
      112 	  2 string_ptr	ptr,
      113 	  2 prev_rec	ptr,
      114 	  2 info		bit (8),
      115 	  2 def_line	fixed bin (15),
      116 	  2 level		fixed bin (7),
      117 	  2 num_lits	fixed bin (15),
      118 	  2 name_size	fixed bin (7),
      119 	  2 name		char (c_n.name_size);
      120 
      121 dcl	display_sign	(0:4) char (6) static init ("eric", " trovr", " ldovr", " trsep", " ldsep");
      122 
      123 dcl	hcs_$set_bc_seg	entry (ptr, fixed bin (24), fixed bin (35));
      124 dcl	cobol_read_ft	entry (fixed bin, ptr);
      125 dcl	ioa_		entry options (variable);
      126 
      127 dcl	addr		builtin;
      128 dcl	addrel		builtin;
      129 dcl	divide		builtin;
      130 dcl	fixed		builtin;
      131 dcl	length		builtin;
      132 dcl	mod		builtin;
      133 dcl	substr		builtin;
      134 
      135 dcl	dn		(1000) char (1) based (dn_ptr);
      136 						/* used for calculating type 9 extension offsets */
      137 
      138 
      139 
      140 /*************************************/
      141 start:
      142 	call sort_tokens;
      143 
      144 	addr (ff) -> bit9 = "000001100"b;		/* form feed char */
      145 	addr (nl) -> bit9 = "000001010"b;		/* new line char */
      146 	q = addr (s);
      147 	code_generated = fixed_common.fatal_no = 0;
      148 	char_off = cobol_$list_off;
      149 	line_ptr = addr (substr (char_string, char_off, 1));
      150 	if cobol_$xref_bypass
      151 	then do;
      152 		noxref = "NO CROSS-REFERENCE LISTING PRODUCED";
      153 		line = nl || noxref || nl;
      154 		char_off = char_off + 37;
      155 		go to finish_up;
      156 	     end;
      157 	header_line.form_feed_char = ff;
      158 	header_line.new_line_char1 = nl;
      159 	header_line.header_field =
      160 	     "IDENTIFIER	LN  TYPE  OFFSET	  USAGE/CLASS     DM  PICTURE          DEF. REF. LINES";
      161 	header_line.new_line_char2 = nl;
      162 	header_line.new_line_char3 = nl;
      163 	char_off = char_off + 86;
      164 	line_ptr = addr (substr (char_string, char_off, 1));
      165 	line = " ";
      166 	do i = 1 to token_count;
      167 	     p = token_ptr (i);
      168 	     go to token_type (p -> token.type);
      169 
      170 token_type (7):					/* Procedure Definition (label) */
      171 token_type (18):					/* Procedure Reference (label reference) */
      172 	     proc_def_ptr = p;
      173 	     name_string = proc_def.name;
      174 	     call fill_identifier (23);
      175 	     print_line.type = "TEXT";
      176 	     if code_generated
      177 	     then do;
      178 		     tag_loc = cobol_$tag_table_ptr -> tag_addr (proc_def.proc_num);
      179 		     do while (tag_loc < 0);
      180 			tag_loc = cobol_$tag_table_ptr -> tag_addr (-tag_loc);
      181 		     end;
      182 		     number = cobol_$constant_offset + tag_loc;
      183 		     call convert_word_offset;
      184 		end;
      185 	     if proc_def.section_name
      186 	     then print_line.usage = "section-name";
      187 	     else print_line.usage = "paragraph-name";
      188 	     eln_index = proc_def.def_line;
      189 	     go to next;
      190 
      191 token_type (9):					/* Data-Name */
      192 	     dn_ptr = p;
      193 	     if data_name.name = "FILLER"
      194 	     then go to token_type (0);
      195 	     if data_name.name = "SYSTEM-STATUS" | data_name.name = "TALLY" | data_name.name = "LINAGE-COUNTER"
      196 	     then go to token_type (0);
      197 	     fixed_binary = "0"b;
      198 	     name_string = data_name.name;
      199 	     call fill_identifier (19);
      200 	     number = data_name.level;
      201 	     call convert10;			/*[5.1-1]*/
      202 	     print_line.level_no = substr (char8, 7, 2);
      203 	     if data_name.working_storage
      204 	     then do;
      205 		     print_line.type = "DATA";
      206 		     number = data_name.offset;
      207 		     call convert_offset;
      208 		end;
      209 	     else if data_name.constant_section
      210 	     then do;
      211 		     print_line.type = "CNST";
      212 		     if code_generated
      213 		     then do;
      214 			     number = data_name.offset;
      215 			     char_offset = fixed (substr (bit36, 35, 2), 17);
      216 			     number = cobol_$constant_offset - fixed (substr (bit36, 1, 34), 35);
      217 			     call convert_word_offset;
      218 			     call convert_bit_offset;
      219 			end;
      220 		end;
      221 	     else if data_name.file_section
      222 	     then do;
      223 		     print_line.type = "FREC";
      224 		     number = data_name.offset;
      225 		     call convert_offset;
      226 		end;
      227 	     else if data_name.communication_section
      228 	     then do;
      229 		     print_line.type = "CREC";
      230 		     number = data_name.offset;
      231 		     call convert_offset;
      232 		end;
      233 	     else if data_name.linkage_section
      234 	     then do;
      235 		     print_line.type = "PARM";
      236 		     number = data_name.offset;
      237 		     call convert_offset;
      238 		     number = data_name.linkage;
      239 		     call convert10;
      240 		     if data_name.level = 01 | data_name.level = 77
      241 		     then do;
      242 			     print_line.bit_offset = "";
      243 			     print_line.offset = substr (char8, cv_off, cv_length);
      244 			end;
      245 		     else if substr (print_line.offset, 1, cv_length + 1) = substr ("000000", 1, cv_length + 1)
      246 		     then substr (print_line.offset, 1, cv_length + 1) = substr (char8, cv_off, cv_length) || "/";
      247 		     else do;
      248 			     print_line.bit_offset = "";
      249 			     print_line.offset = substr (char8, cv_off, cv_length) || "/.....";
      250 			end;
      251 		end;
      252 	     if data_name.display
      253 	     then do;
      254 		     if data_name.numeric
      255 		     then print_line.usage = "DSPLY num" || display_sign (fixed (data_name.sign_type, 17));
      256 		     else if data_name.alphanum
      257 		     then print_line.usage = "DSPLY alphanum";
      258 		     else if data_name.numeric_edited
      259 		     then print_line.usage = "DSPLY num-edit";
      260 		     else if data_name.alphabetic
      261 		     then print_line.usage = "DSPLY alphabet";
      262 		     else print_line.usage = "DSPLY alph-edit";
      263 		end;
      264 	     else if data_name.non_elementary
      265 	     then print_line.usage = "GROUP alphanum";
      266 	     else if data_name.usage_index
      267 	     then print_line.usage = "INDEX";
      268 	     else if data_name.ascii_packed_dec_h
      269 	     then print_line.usage = "COMP8 numeric";
      270 	     else if data_name.ascii_packed_dec
      271 	     then print_line.usage = "COMP5 numeric";
      272 	     else if data_name.bin_18
      273 	     then do;
      274 		     print_line.usage = "COMP7 numeric";
      275 		     print_line.pic_string = "S9(6)  bin(17)";
      276 		     fixed_binary = "1"b;
      277 		end;
      278 	     else if data_name.bin_36
      279 	     then do;
      280 		     print_line.usage = "COMP6 numeric";
      281 		     print_line.pic_string = "S9(11)  bin(35)";
      282 		     fixed_binary = "1"b;
      283 		end;
      284 	     else if data_name.ebcdic_packed_dec
      285 	     then print_line.usage = "COMP3 numeric";
      286 	     else if data_name.bin_16
      287 	     then do;
      288 		     print_line.usage = "COMP1 numeric";
      289 		     print_line.pic_string = "S9(5)  bin(15)";
      290 		     fixed_binary = "1"b;
      291 		end;
      292 	     else if data_name.bin_32
      293 	     then do;
      294 		     print_line.usage = "COMP2 numeric";
      295 		     print_line.pic_string = "S9(9)  bin(31)";
      296 		     fixed_binary = "1"b;
      297 		end;
      298 	     if data_name.occurs_ptr ^= 0
      299 	     then do;
      300 		     occurs_ptr = addr (dn (data_name.occurs_ptr));
      301 		     if occurs.dimensions = 1
      302 		     then print_line.occ = " 1";
      303 		     else if occurs.dimensions = 2
      304 		     then print_line.occ = " 2";
      305 		     else print_line.occ = " 3";
      306 		     if data_name.occurs_do
      307 		     then substr (print_line.occ, 1, 1) = "*";
      308 		end;
      309 	     else print_line.occ = "";
      310 
      311 	     if data_name.s_of_rdf
      312 	     then print_line.redef = "r";
      313 	     else print_line.redef = "";
      314 
      315 	     if ^fixed_binary
      316 	     then do;
      317 		     edited = data_name.alphanum_edited | data_name.alphabetic_edited | data_name.numeric_edited;
      318 		     varying = data_name.pic_has_l | data_name.pic_is_do;
      319 		     if edited & varying
      320 		     then print_line.pic_string = "EDITED,VARYING";
      321 		     else do;
      322 			     alpha = "0"b;
      323 			     numeric = "0"b;
      324 			     if data_name.alphanum | data_name.alphanum_edited | data_name.non_elementary
      325 			     then do;
      326 				     alpha = "1"b;
      327 				     picture_string = "X(";
      328 				     c_off = 3;
      329 				end;
      330 			     else if data_name.alphabetic | data_name.alphabetic_edited
      331 			     then do;
      332 				     alpha = "1"b;
      333 				     picture_string = "A(";
      334 				     c_off = 3;
      335 				end;
      336 			     else do;
      337 				     numeric = data_name.numeric | data_name.numeric_edited;
      338 				     picture_string = " ";
      339 				     c_off = 1;
      340 				end;
      341 			     if alpha
      342 			     then do;
      343 				     number = data_name.item_length;
      344 				     call convert10;
      345 				     substr (picture_string, c_off, cv_length + 1) =
      346 					substr (char8, cv_off, cv_length) || ")";
      347 				     c_off = c_off + cv_length + 1;
      348 				end;
      349 			     else if numeric
      350 			     then do;
      351 				     left = data_name.places_left;
      352 				     if data_name.numeric
      353 				     then if data_name.item_signed
      354 					then if data_name.display | data_name.ascii_packed_dec
      355 						| data_name.ascii_packed_dec_h
      356 					     then do;
      357 						     substr (picture_string, c_off, 1) = "S";
      358 						     c_off = 2;
      359 						end;
      360 				     if left < 0
      361 				     then do;
      362 					     p_type = "P";
      363 					     number = -left;
      364 					     call fill_pic_field;
      365 					end;
      366 				     else if left > 0 & data_name.places_right > 0
      367 				     then do;
      368 					     p_type = "9";
      369 					     number = left;
      370 					     call fill_pic_field;
      371 					     left = 0;
      372 					end;
      373 				     if left = 0
      374 				     then do;
      375 					     substr (picture_string, c_off, 1) = "V";
      376 					     c_off = c_off + 1;
      377 					end;
      378 				     p_type = "9";
      379 				     number = left + data_name.places_right;
      380 				     call fill_pic_field;
      381 				     if data_name.places_right < 0
      382 				     then do;
      383 					     p_type = "P";
      384 					     number = -data_name.places_right;
      385 					     call fill_pic_field;
      386 					end;
      387 				end;
      388 			     if edited
      389 			     then if c_off > 12
      390 				then picture_string = "EDITED";
      391 				else if c_off > 10
      392 				then substr (picture_string, c_off) = "EDIT";
      393 				else substr (picture_string, c_off) = "EDITED";
      394 			     else if varying
      395 			     then if c_off > 13
      396 				then picture_string = "VARYING";
      397 				else if c_off > 9
      398 				then substr (picture_string, c_off) = "VAR";
      399 				else substr (picture_string, c_off) = "VARYING";
      400 			     print_line.pic_string = picture_string;
      401 			end;
      402 		end;
      403 	     eln_index = data_name.def_line;
      404 	     go to next;
      405 
      406 
      407 token_type (10):					/* Index-Name */
      408 	     ind_ptr = p;
      409 	     name_string = substr (index_name.name, 1, index_name.name_size);
      410 	     call fill_identifier (23);
      411 	     print_line.type = "DATA";
      412 	     number = index_name.offset;
      413 	     call convert_offset;
      414 	     print_line.usage = "index-name";
      415 	     eln_index = index_name.def_line;
      416 	     go to next;
      417 
      418 token_type (11):					/* Condition Name */
      419 	     name_string = c_n.name;
      420 	     call fill_identifier (19);
      421 	     print_line.level_no = "88";
      422 	     print_line.usage = "CONDITION NAME";
      423 	     eln_index = c_n.def_line;
      424 	     go to next;
      425 
      426 token_type (12):					/* File Name */
      427 	     print_line.level_no = "FD";
      428 join_file:
      429 	     name_ptr = p;
      430 	     name_string = fd_token.name;
      431 	     call fill_identifier (19);
      432 	     call cobol_read_ft (fd_token.file_no, ft_ptr);
      433 	     print_line.type = "FILE";
      434 	     number = file_table.cra_offset;
      435 	     call convert_offset;
      436 	     if p -> token.type = 16
      437 	     then print_line.usage = "SORT";
      438 	     else do;				/* Fill in file organization and access. */
      439 		     go to org (file_table.organization);
      440 org (0):
      441 org (1):
      442 		     print_line.usage = "SEQ";
      443 		     go to fill_access;
      444 org (2):
      445 		     print_line.usage = "REL";
      446 		     go to fill_access;
      447 org (3):
      448 		     print_line.usage = "INX";
      449 		     go to fill_access;
      450 org (4):
      451 org (5):
      452 		     print_line.usage = "STR";
      453 		     go to fill_access;
      454 fill_access:
      455 		     go to acc (file_table.access);
      456 acc (0):
      457 acc (1):
      458 		     substr (print_line.usage, 4, 4) = "/SEQ";
      459 		     go to fill_device;
      460 acc (2):
      461 		     substr (print_line.usage, 4, 4) = "/RND";
      462 		     go to fill_device;
      463 acc (3):
      464 		     substr (print_line.usage, 4, 4) = "/DYN";
      465 		     go to fill_device;
      466 fill_device:
      467 		     go to dev (file_table.device);
      468 dev (0):
      469 dev (6):
      470 		     substr (print_line.usage, 8, 8) = " virtual";
      471 		     go to end_fd;
      472 dev (1):
      473 		     substr (print_line.usage, 8, 8) = " printer";
      474 		     go to end_fd;
      475 dev (2):
      476 		     substr (print_line.usage, 8, 8) = " cardrdr";
      477 		     go to end_fd;
      478 dev (3):
      479 		     substr (print_line.usage, 8, 8) = " cardpch";
      480 		     go to end_fd;
      481 dev (4):
      482 		     substr (print_line.usage, 8, 8) = " disk";
      483 		     go to end_fd;
      484 dev (5):
      485 		     substr (print_line.usage, 8, 8) = " tape";
      486 		     go to end_fd;
      487 dev (7):
      488 dev (8):
      489 dev (9):
      490 dev (10):
      491 end_fd:
      492 		     if file_table.external
      493 		     then substr (print_line.usage, 14, 3) = "ext";
      494 		     picture_string = "X(";
      495 		     c_off = 3;
      496 		     number = file_table.max_cra_size;
      497 		     call convert10;
      498 		     substr (picture_string, c_off, cv_length + 1) = substr (char8, cv_off, cv_length) || ")";
      499 		     c_off = c_off + cv_length + 1;
      500 		     print_line.pic_string = picture_string;
      501 		end;
      502 	     eln_index = fd_token.def_line;
      503 	     go to next;
      504 
      505 token_type (13):
      506 	     cdtoken_ptr = p;
      507 	     print_line.level_no = "CD";
      508 	     name_string = cdtoken.name;
      509 	     call fill_identifier (19);
      510 	     print_line.type = "COMM";
      511 	     if cdtoken.options.input
      512 	     then print_line.usage = "cd-name(input)";
      513 	     else print_line.usage = "cd-name(output)";
      514 	     eln_index = cdtoken.def_line;
      515 	     go to next;
      516 token_type (16):
      517 	     print_line.level_no = "SD";
      518 	     go to join_file;
      519 
      520 token_type (17):
      521 	     name_ptr = p;
      522 	     name_string = mnemonic_name.name;
      523 	     call fill_identifier (23);
      524 	     print_line.type = "SYS";
      525 	     print_line.usage = "mnemonic-name";
      526 	     eln_index = mnemonic_name.def_line;
      527 	     go to next;
      528 
      529 token_type (40):
      530 	     alpha_name_ptr = p;
      531 	     name_string = alphabet_name.name;
      532 	     call fill_identifier (23);
      533 	     if alphabet_name.iw_key ^= 0
      534 	     then print_line.type = "SYS";
      535 	     else print_line.type = "CNST";
      536 	     print_line.usage = "alphabet-name";
      537 	     eln_index = alphabet_name.def_line;
      538 	     go to next;
      539 
      540 
      541 next:
      542 	     call fill_def_ref;
      543 	     line_ptr = addr (substr (char_string, char_off, 1));
      544 	     line = " ";
      545 
      546 token_type (0):
      547 token_type (1):
      548 token_type (2):
      549 token_type (3):
      550 token_type (4):
      551 token_type (5):
      552 token_type (6):
      553 token_type (8):
      554 token_type (14):
      555 token_type (15):
      556 token_type (19):
      557 token_type (20):
      558 	end;
      559 
      560 finish_up:
      561 	cobol_$list_off = char_off;
      562 	call hcs_$set_bc_seg (cobol_$list_ptr, 9 * (cobol_$list_off - 1), mcode);
      563 exit:
      564 	return;
      565 
      566 
      567 
      568 /*************************************/
      569 fill_def_ref:
      570      proc;
      571 
      572 	char_off = char_off + 79;
      573 	line_ptr = addr (substr (char_string, char_off, 1));
      574 	substr (def_ref, 1, 4) = "def ";
      575 	call file_line;
      576 	substr (def_ref, 5, fl_length) = substr (char9, 1, fl_length);
      577 	c_off = fl_length + 6;
      578 	n = addrel (p, divide (p -> token.size + 3, 4, 17, 0)) -> xref_chain.first;
      579 	if n = 0
      580 	then do;
      581 		substr (def_ref, c_off, 5) = "NOREF";
      582 		c_off = c_off + 5;
      583 	     end;
      584 	else do;
      585 		substr (def_ref, c_off, 3) = "ref";
      586 		c_off = c_off + 3;
      587 		do while (n > 0);
      588 		     eln_index = ref_line (n);
      589 		     call file_line;
      590 		     if c_off + fl_length > 39
      591 		     then do;			/* close this line and start new line */
      592 			     substr (def_ref, c_off, 1) = nl;
      593 			     char_off = char_off + c_off;
      594 			     substr (char_string, char_off, 16) = (7)"	" || (9)" ";
      595 						/* 7 tabs + 9 spaces */
      596 			     char_off = char_off + 16;
      597 			     line_ptr = addr (substr (char_string, char_off, 1));
      598 			     def_ref = " ";
      599 			     c_off = 1;
      600 			end;
      601 		     else c_off = c_off + 1;		/* insert space between def-ref line nos */
      602 		     substr (def_ref, c_off, fl_length) = substr (char9, 1, fl_length);
      603 		     c_off = c_off + fl_length;
      604 		     n = chain_area.next (n);
      605 		end;
      606 	     end;
      607 	substr (def_ref, c_off, 1) = nl;
      608 	char_off = char_off + c_off;
      609 
      610      end fill_def_ref;
      611 
      612 file_line:
      613      proc;
      614 
      615 	fl_length = 0;
      616 	if eln_index ^= 0
      617 	then number = eln_tab.fno (eln_index);
      618 	else number = 0;
      619 	if number > 0
      620 	then do;
      621 		call convert10;
      622 		substr (char9, 1, cv_length) = substr (char8, cv_off, cv_length);
      623 		fl_length = cv_length + 1;
      624 		substr (char9, fl_length, 1) = "-";
      625 	     end;
      626 	if eln_index ^= 0
      627 	then number = eln_tab.lno (eln_index);
      628 	else number = 1;
      629 	call convert10;
      630 	substr (char9, fl_length + 1, cv_length) = substr (char8, cv_off, cv_length);
      631 	fl_length = fl_length + cv_length;
      632 
      633      end file_line;
      634 
      635 fill_pic_field:
      636      proc;
      637 
      638 	substr (picture_string, c_off, 1) = p_type;
      639 	c_off = c_off + 1;
      640 	substr (picture_string, c_off, 1) = "(";
      641 	c_off = c_off + 1;
      642 	call convert10;
      643 	substr (picture_string, c_off, cv_length) = substr (char8, cv_off, cv_length);
      644 	c_off = c_off + cv_length;
      645 	substr (picture_string, c_off, 1) = ")";
      646 	c_off = c_off + 1;
      647 
      648      end fill_pic_field;
      649 
      650 fill_identifier:
      651      proc (max);
      652 dcl	max		fixed bin parameter;
      653 
      654 	name_length = length (name_string);
      655 	if name_length > max
      656 	then do;
      657 		line = name_string || nl;
      658 		char_off = char_off + name_length + 1;
      659 		line_ptr = addr (substr (char_string, char_off, 1));
      660 		line = " ";
      661 	     end;
      662 	else substr (maxlen_id, 1, max) = name_string;
      663 
      664      end fill_identifier;
      665 
      666 convert_offset:
      667      proc;
      668 
      669 	char_offset = fixed (substr (bit36, 35, 2), 17);
      670 	number = fixed (substr (bit36, 1, 34), 35);
      671 	call convert_word_offset;
      672 
      673 convert_bit_offset:
      674      entry;
      675 	if p -> data_name.type = 9
      676 	then if data_name.bit_offset ^= ""b
      677 	     then go to half_byte_off (char_offset);
      678 	go to byte_off (char_offset);
      679 byte_off (1):
      680 	print_line.bit_offset = "(9)";
      681 	return;
      682 half_byte_off (1):
      683 	print_line.bit_offset = "(14)";
      684 	return;
      685 byte_off (2):
      686 	print_line.bit_offset = "(18)";
      687 	return;
      688 half_byte_off (2):
      689 	print_line.bit_offset = "(23)";
      690 	return;
      691 byte_off (3):
      692 	print_line.bit_offset = "(27)";
      693 	return;
      694 half_byte_off (3):
      695 	print_line.bit_offset = "(32)";
      696 	return;
      697 byte_off (0):
      698 	return;
      699 half_byte_off (0):
      700 	print_line.bit_offset = "(5)";
      701 	return;
      702 
      703      end convert_offset;
      704 
      705 convert_word_offset:
      706      proc;
      707 
      708 	print_line.offset = "000000";
      709 	do t = 6 to 1 by -1 while (number > 0);
      710 	     s = fixed (substr (bit36, 34, 3), 35) + 48;
      711 	     substr (print_line.offset, t, 1) = substr (c, 4, 1);
      712 	     number = fixed (substr (bit36, 1, 33), 35);
      713 	end;
      714 
      715      end convert_word_offset;
      716 
      717 convert10:
      718      proc;
      719 
      720 	char8 = (8)"0";				/*[5.1-1]*/
      721 	do t = 8 to 1 by -1 while (number > 0);
      722 	     s = mod (number, 10) + 48;
      723 	     substr (char8, t, 1) = substr (c, 4, 1);
      724 	     number = divide (number, 10, 35, 0);
      725 	     cv_off = t;
      726 	end;					/*[5.1-1]*/
      727 	cv_length = 9 - cv_off;
      728 
      729      end convert10;
      730 
      731 sort_tokens:
      732      proc;
      733 
      734 /* This routine sorts the array of ptrs to Name-Table tokens.
      735*		   It does a Shell sort alphabetizing on the name in the token. */
      736 
      737 dcl	(d, i, j, k)	fixed bin;
      738 dcl	(p, p1, p2)	ptr;
      739 dcl	name_string	char (30) varying based;
      740 
      741 	d = token_count;
      742 
      743 down:
      744 	d = 2 * divide (d, 4, 17, 0) + 1;
      745 
      746 	do i = 1 to token_count - d;
      747 	     k = i + d;
      748 	     p2 = token_area.name_ptr (k);
      749 
      750 up:
      751 	     j = k - d;
      752 	     p1 = token_area.name_ptr (j);
      753 
      754 	     if p1 -> name_string > p2 -> name_string
      755 	     then do;
      756 		     token_area.name_ptr (k) = p1;
      757 		     token_area.name_ptr (j) = p2;
      758 		     p = token_ptr (k);
      759 		     token_ptr (k) = token_ptr (j);
      760 		     token_ptr (j) = p;
      761 
      762 		     if j > d
      763 		     then do;
      764 			     k = j;
      765 			     go to up;
      766 			end;
      767 		end;
      768 	end;
      769 
      770 	if d > 1
      771 	then go to down;
      772 
      773      end sort_tokens;
      774 
  1     1 
  1     2 /* BEGIN INCLUDE FILE ... cobol_.incl.pl1 */
  1     3 /* last modified Feb 4, 1977 by ORN  */
  1     4 
  1     5 /* This file defines all external data used in the generator phase of Multics Cobol */
  1     6 
  1     7 /* POINTERS */
  1     8 dcl cobol_$text_base_ptr ptr  ext;
  1     9 dcl text_base_ptr ptr  defined (cobol_$text_base_ptr);
  1    10 dcl cobol_$con_end_ptr ptr  ext;
  1    11 dcl con_end_ptr ptr  defined (cobol_$con_end_ptr);
  1    12 dcl cobol_$def_base_ptr ptr  ext;
  1    13 dcl def_base_ptr ptr  defined (cobol_$def_base_ptr);
  1    14 dcl cobol_$link_base_ptr ptr  ext;
  1    15 dcl link_base_ptr ptr  defined (cobol_$link_base_ptr);
  1    16 dcl cobol_$sym_base_ptr ptr  ext;
  1    17 dcl sym_base_ptr ptr  defined (cobol_$sym_base_ptr);
  1    18 dcl cobol_$reloc_text_base_ptr ptr  ext;
  1    19 dcl reloc_text_base_ptr ptr  defined (cobol_$reloc_text_base_ptr);
  1    20 dcl cobol_$reloc_def_base_ptr ptr  ext;
  1    21 dcl reloc_def_base_ptr ptr  defined (cobol_$reloc_def_base_ptr);
  1    22 dcl cobol_$reloc_link_base_ptr ptr  ext;
  1    23 dcl reloc_link_base_ptr ptr  defined (cobol_$reloc_link_base_ptr);
  1    24 dcl cobol_$reloc_sym_base_ptr ptr  ext;
  1    25 dcl reloc_sym_base_ptr ptr  defined (cobol_$reloc_sym_base_ptr);
  1    26 dcl cobol_$reloc_work_base_ptr ptr  ext;
  1    27 dcl reloc_work_base_ptr ptr  defined (cobol_$reloc_work_base_ptr);
  1    28 dcl cobol_$pd_map_ptr ptr  ext;
  1    29 dcl pd_map_ptr ptr  defined (cobol_$pd_map_ptr);
  1    30 dcl cobol_$fixup_ptr ptr  ext;
  1    31 dcl fixup_ptr ptr  defined (cobol_$fixup_ptr);
  1    32 dcl cobol_$initval_base_ptr ptr  ext;
  1    33 dcl initval_base_ptr ptr  defined (cobol_$initval_base_ptr);
  1    34 dcl cobol_$initval_file_ptr ptr  ext;
  1    35 dcl initval_file_ptr ptr  defined (cobol_$initval_file_ptr);
  1    36 dcl cobol_$perform_list_ptr ptr  ext;
  1    37 dcl perform_list_ptr ptr  defined (cobol_$perform_list_ptr);
  1    38 dcl cobol_$alter_list_ptr ptr  ext;
  1    39 dcl alter_list_ptr ptr  defined (cobol_$alter_list_ptr);
  1    40 dcl cobol_$seg_init_list_ptr ptr  ext;
  1    41 dcl seg_init_list_ptr ptr  defined (cobol_$seg_init_list_ptr);
  1    42 dcl cobol_$temp_token_area_ptr ptr  ext;
  1    43 dcl temp_token_area_ptr ptr  defined (cobol_$temp_token_area_ptr);
  1    44 dcl cobol_$temp_token_ptr ptr  ext;
  1    45 dcl temp_token_ptr ptr  defined (cobol_$temp_token_ptr);
  1    46 dcl cobol_$token_block1_ptr ptr  ext;
  1    47 dcl token_block1_ptr ptr  defined (cobol_$token_block1_ptr);
  1    48 dcl cobol_$token_block2_ptr ptr  ext;
  1    49 dcl token_block2_ptr ptr  defined (cobol_$token_block2_ptr);
  1    50 dcl cobol_$minpral5_ptr ptr  ext;
  1    51 dcl minpral5_ptr ptr  defined (cobol_$minpral5_ptr);
  1    52 dcl cobol_$tag_table_ptr ptr  ext;
  1    53 dcl tag_table_ptr ptr  defined (cobol_$tag_table_ptr);
  1    54 dcl cobol_$map_data_ptr ptr  ext;
  1    55 dcl map_data_ptr ptr  defined (cobol_$map_data_ptr);
  1    56 dcl cobol_$ptr_status_ptr ptr  ext;
  1    57 dcl ptr_status_ptr ptr  defined (cobol_$ptr_status_ptr);
  1    58 dcl cobol_$reg_status_ptr ptr  ext;
  1    59 dcl reg_status_ptr ptr  defined (cobol_$reg_status_ptr);
  1    60 dcl cobol_$misc_base_ptr ptr ext;
  1    61 dcl misc_base_ptr ptr defined (cobol_$misc_base_ptr);
  1    62 dcl cobol_$misc_end_ptr ptr ext;
  1    63 dcl misc_end_ptr ptr defined (cobol_$misc_end_ptr);
  1    64 dcl cobol_$list_ptr ptr ext;
  1    65 dcl list_ptr ptr defined (cobol_$list_ptr);
  1    66 dcl cobol_$allo1_ptr ptr ext;
  1    67 dcl allo1_ptr ptr defined (cobol_$allo1_ptr);
  1    68 dcl cobol_$eln_ptr ptr ext;
  1    69 dcl eln_ptr ptr defined (cobol_$eln_ptr);
  1    70 dcl cobol_$diag_ptr ptr ext;
  1    71 dcl diag_ptr ptr defined (cobol_$diag_ptr);
  1    72 dcl cobol_$xref_token_ptr ptr ext;
  1    73 dcl xref_token_ptr ptr defined (cobol_$xref_token_ptr);
  1    74 dcl cobol_$xref_chain_ptr ptr ext;
  1    75 dcl xref_chain_ptr ptr defined (cobol_$xref_chain_ptr);
  1    76 dcl cobol_$statement_info_ptr ptr ext;
  1    77 dcl statement_info_ptr ptr defined (cobol_$statement_info_ptr);
  1    78 dcl cobol_$reswd_ptr ptr ext;
  1    79 dcl reswd_ptr ptr defined (cobol_$reswd_ptr);
  1    80 dcl cobol_$op_con_ptr ptr ext;
  1    81 dcl op_con_ptr ptr defined (cobol_$op_con_ptr);
  1    82 dcl cobol_$ntbuf_ptr ptr ext;
  1    83 dcl ntbuf_ptr ptr defined (cobol_$ntbuf_ptr);
  1    84 dcl cobol_$main_pcs_ptr ptr ext;
  1    85 dcl main_pcs_ptr ptr defined (cobol_$main_pcs_ptr);
  1    86 dcl cobol_$include_info_ptr ptr ext;
  1    87 dcl include_info_ptr ptr defined (cobol_$include_info_ptr);
  1    88 
  1    89 /* FIXED BIN */
  1    90 dcl cobol_$text_wd_off fixed bin  ext;
  1    91 dcl text_wd_off fixed bin  defined (cobol_$text_wd_off);
  1    92 dcl cobol_$con_wd_off fixed bin  ext;
  1    93 dcl con_wd_off fixed bin  defined (cobol_$con_wd_off);
  1    94 dcl cobol_$def_wd_off fixed bin  ext;
  1    95 dcl def_wd_off fixed bin  defined (cobol_$def_wd_off);
  1    96 dcl cobol_$def_max fixed bin  ext;
  1    97 dcl def_max fixed bin  defined (cobol_$def_max);
  1    98 dcl cobol_$link_wd_off fixed bin  ext;
  1    99 dcl link_wd_off fixed bin  defined (cobol_$link_wd_off);
  1   100 dcl cobol_$link_max fixed bin  ext;
  1   101 dcl link_max fixed bin  defined (cobol_$link_max);
  1   102 dcl cobol_$sym_wd_off fixed bin  ext;
  1   103 dcl sym_wd_off fixed bin  defined (cobol_$sym_wd_off);
  1   104 dcl cobol_$sym_max fixed bin  ext;
  1   105 dcl sym_max fixed bin  defined (cobol_$sym_max);
  1   106 dcl cobol_$reloc_text_max fixed bin(24)  ext;
  1   107 dcl reloc_text_max fixed bin(24)  defined (cobol_$reloc_text_max);
  1   108 dcl cobol_$reloc_def_max fixed bin(24)  ext;
  1   109 dcl reloc_def_max fixed bin(24)  defined (cobol_$reloc_def_max);
  1   110 dcl cobol_$reloc_link_max fixed bin(24)  ext;
  1   111 dcl reloc_link_max fixed bin(24)  defined (cobol_$reloc_link_max);
  1   112 dcl cobol_$reloc_sym_max fixed bin(24)  ext;
  1   113 dcl reloc_sym_max fixed bin(24)  defined (cobol_$reloc_sym_max);
  1   114 dcl cobol_$reloc_work_max fixed bin(24)  ext;
  1   115 dcl reloc_work_max fixed bin(24)  defined (cobol_$reloc_work_max);
  1   116 dcl cobol_$pd_map_index fixed bin  ext;
  1   117 dcl pd_map_index fixed bin  defined (cobol_$pd_map_index);
  1   118 dcl cobol_$cobol_data_wd_off fixed bin  ext;
  1   119 dcl cobol_data_wd_off fixed bin  defined (cobol_$cobol_data_wd_off);
  1   120 dcl cobol_$stack_off fixed bin  ext;
  1   121 dcl stack_off fixed bin  defined (cobol_$stack_off);
  1   122 dcl cobol_$max_stack_off fixed bin  ext;
  1   123 dcl max_stack_off fixed bin  defined (cobol_$max_stack_off);
  1   124 dcl cobol_$init_stack_off fixed bin  ext;
  1   125 dcl init_stack_off fixed bin  defined (cobol_$init_stack_off);
  1   126 dcl cobol_$pd_map_sw fixed bin  ext;
  1   127 dcl pd_map_sw fixed bin  defined (cobol_$pd_map_sw);
  1   128 dcl cobol_$next_tag fixed bin  ext;
  1   129 dcl next_tag fixed bin  defined (cobol_$next_tag);
  1   130 dcl cobol_$data_init_flag fixed bin  ext;
  1   131 dcl data_init_flag fixed bin  defined (cobol_$data_init_flag);
  1   132 dcl cobol_$seg_init_flag fixed bin  ext;
  1   133 dcl seg_init_flag fixed bin  defined (cobol_$seg_init_flag);
  1   134 dcl cobol_$alter_flag fixed bin  ext;
  1   135 dcl alter_flag fixed bin  defined (cobol_$alter_flag);
  1   136 dcl cobol_$sect_eop_flag fixed bin  ext;
  1   137 dcl sect_eop_flag fixed bin  defined (cobol_$sect_eop_flag);
  1   138 dcl cobol_$para_eop_flag fixed bin  ext;
  1   139 dcl para_eop_flag fixed bin  defined (cobol_$para_eop_flag);
  1   140 dcl cobol_$priority_no fixed bin  ext;
  1   141 dcl priority_no fixed bin  defined (cobol_$priority_no);
  1   142 dcl cobol_$compile_count fixed bin ext;
  1   143 dcl compile_count fixed bin defined (cobol_$compile_count);
  1   144 dcl cobol_$ptr_assumption_ind fixed bin ext;
  1   145 dcl ptr_assumption_ind fixed bin defined (cobol_$ptr_assumption_ind);
  1   146 dcl cobol_$reg_assumption_ind fixed bin ext;
  1   147 dcl reg_assumption_ind fixed bin defined (cobol_$reg_assumption_ind);
  1   148 dcl cobol_$perform_para_index fixed bin ext;
  1   149 dcl perform_para_index fixed bin defined (cobol_$perform_para_index);
  1   150 dcl cobol_$perform_sect_index fixed bin ext;
  1   151 dcl perform_sect_index fixed bin defined (cobol_$perform_sect_index);
  1   152 dcl cobol_$alter_index fixed bin ext;
  1   153 dcl alter_index fixed bin defined (cobol_$alter_index);
  1   154 dcl cobol_$list_off fixed bin ext;
  1   155 dcl list_off fixed bin defined (cobol_$list_off);
  1   156 dcl cobol_$constant_offset fixed bin ext;
  1   157 dcl constant_offset fixed bin defined (cobol_$constant_offset);
  1   158 dcl cobol_$misc_max fixed bin ext;
  1   159 dcl misc_max fixed bin defined (cobol_$misc_max);
  1   160 dcl cobol_$pd_map_max fixed bin ext;
  1   161 dcl pd_map_max fixed bin defined (cobol_$pd_map_max);
  1   162 dcl cobol_$map_data_max fixed bin ext;
  1   163 dcl map_data_max fixed bin defined (cobol_$map_data_max);
  1   164 dcl cobol_$fixup_max fixed bin ext;
  1   165 dcl fixup_max fixed bin defined (cobol_$fixup_max);
  1   166 dcl cobol_$tag_table_max fixed bin ext;
  1   167 dcl tag_table_max fixed bin defined (cobol_$tag_table_max);
  1   168 dcl cobol_$temp_token_max fixed bin ext;
  1   169 dcl temp_token_max fixed bin defined (cobol_$temp_token_max);
  1   170 dcl cobol_$allo1_max fixed bin ext;
  1   171 dcl allo1_max fixed bin defined (cobol_$allo1_max);
  1   172 dcl cobol_$eln_max fixed bin ext;
  1   173 dcl eln_max fixed bin defined (cobol_$eln_max);
  1   174 dcl cobol_$debug_enable fixed bin ext;
  1   175 dcl debug_enable fixed bin defined (cobol_$debug_enable);
  1   176 dcl cobol_$non_source_offset fixed bin ext;
  1   177 dcl non_source_offset fixed bin defined (cobol_$non_source_offset);
  1   178 dcl cobol_$initval_flag fixed bin ext;
  1   179 dcl initval_flag fixed bin defined (cobol_$initval_flag);
  1   180 dcl cobol_$date_compiled_sw fixed bin ext;
  1   181 dcl date_compiled_sw fixed bin defined (cobol_$date_compiled_sw);
  1   182 dcl cobol_$include_cnt fixed bin ext;
  1   183 dcl include_cnt fixed bin defined (cobol_$include_cnt);
  1   184 dcl cobol_$fs_charcnt fixed bin ext;
  1   185 dcl fs_charcnt fixed bin defined (cobol_$fs_charcnt);
  1   186 dcl cobol_$ws_charcnt fixed bin ext;
  1   187 dcl ws_charcnt fixed bin defined (cobol_$ws_charcnt);
  1   188 dcl cobol_$coms_charcnt fixed bin ext;
  1   189 dcl coms_charcnt fixed bin defined (cobol_$coms_charcnt);
  1   190 dcl cobol_$ls_charcnt fixed bin ext;
  1   191 dcl ls_charcnt fixed bin defined (cobol_$ls_charcnt);
  1   192 dcl cobol_$cons_charcnt fixed bin ext;
  1   193 dcl cons_charcnt fixed bin defined (cobol_$cons_charcnt);
  1   194 dcl cobol_$value_cnt fixed bin ext;
  1   195 dcl value_cnt fixed bin defined (cobol_$value_cnt);
  1   196 dcl cobol_$cd_cnt fixed bin ext;
  1   197 dcl cd_cnt fixed bin defined (cobol_$cd_cnt);
  1   198 dcl cobol_$fs_wdoff fixed bin ext;
  1   199 dcl fs_wdoff fixed bin defined (cobol_$fs_wdoff);
  1   200 dcl cobol_$ws_wdoff fixed bin ext;
  1   201 dcl ws_wdoff fixed bin defined (cobol_$ws_wdoff);
  1   202 dcl cobol_$coms_wdoff fixed bin ext;
  1   203 dcl coms_wdoff fixed bin defined (cobol_$coms_wdoff);
  1   204 
  1   205 /* CHARACTER */
  1   206 dcl cobol_$scratch_dir char (168)   aligned ext;
  1   207 dcl scratch_dir char (168)   aligned defined (cobol_$scratch_dir);			/* -42- */
  1   208 dcl cobol_$obj_seg_name char (32)   aligned ext;
  1   209 dcl obj_seg_name char (32)   aligned defined (cobol_$obj_seg_name);		/* -8- */
  1   210 
  1   211 /* BIT */
  1   212 dcl cobol_$xref_bypass bit(1) aligned ext;
  1   213 dcl xref_bypass bit(1) aligned defined (cobol_$xref_bypass);			/* -1- */
  1   214 dcl cobol_$same_sort_merge_proc bit(1) aligned ext;
  1   215 dcl same_sort_merge_proc bit(1) aligned defined (cobol_$same_sort_merge_proc);		/* -1- */
  1   216 
  1   217 
  1   218 /* END INCLUDE FILE ... cobol_incl.pl1*/
  1   219 
  1   220 
      775 
  2     1 
  2     2 /* BEGIN INCLUDE FILE ... cobol_ext_.incl.pl1 */
  2     3 /* Last modified on 06/17/76 by ORN */
  2     4 /* Last modified on 12/28/76 by FCH */
  2     5 /* Last modified on 12/01/80 by FCH */
  2     6 
  2     7 /*    <<<   SHARED EXTERNALS INCLUDE FILE   >>>    */
  2     8 
  2     9 
  2    10 dcl     cobol_ext_$cobol_afp ptr ext;
  2    11 dcl     cobol_afp ptr defined (  cobol_ext_$cobol_afp);
  2    12 dcl     cobol_ext_$cobol_analin_fileno ptr ext;
  2    13 dcl     cobol_analin_fileno ptr defined (  cobol_ext_$cobol_analin_fileno);
  2    14 dcl     cobol_ext_$report_first_token ptr ext;
  2    15 dcl     report_first_token ptr defined( cobol_ext_$report_first_token);
  2    16 dcl     cobol_ext_$report_last_token ptr ext;
  2    17 dcl     report_last_token ptr defined ( cobol_ext_$report_last_token);
  2    18 dcl     cobol_ext_$cobol_eltp ptr ext;
  2    19 dcl     cobol_eltp ptr defined (  cobol_ext_$cobol_eltp);
  2    20 dcl     cobol_ext_$cobol_cmfp ptr ext;
  2    21 dcl     cobol_cmfp ptr defined (  cobol_ext_$cobol_cmfp);
  2    22 dcl     cobol_ext_$cobol_com_fileno ptr ext;
  2    23 dcl     cobol_com_fileno ptr defined (  cobol_ext_$cobol_com_fileno);
  2    24 dcl     cobol_ext_$cobol_com_ptr ptr ext;
  2    25 dcl     cobol_com_ptr ptr defined (  cobol_ext_$cobol_com_ptr);
  2    26 dcl     cobol_ext_$cobol_dfp ptr ext;
  2    27 dcl     cobol_dfp ptr defined (  cobol_ext_$cobol_dfp);
  2    28 dcl     cobol_ext_$cobol_hfp ptr ext;
  2    29 dcl     cobol_hfp ptr defined (  cobol_ext_$cobol_hfp);
  2    30 dcl     cobol_ext_$cobol_m1fp ptr ext;
  2    31 dcl     cobol_m1fp ptr defined (  cobol_ext_$cobol_m1fp);
  2    32 dcl     cobol_ext_$cobol_m2fp ptr ext;
  2    33 dcl     cobol_m2fp ptr defined (  cobol_ext_$cobol_m2fp);
  2    34 dcl     cobol_ext_$cobol_min1_fileno ptr ext;
  2    35 dcl     cobol_min1_fileno ptr defined (  cobol_ext_$cobol_min1_fileno);
  2    36 dcl     cobol_ext_$cobol_min2_fileno_ptr ptr ext;
  2    37 dcl     cobol_min2_fileno_ptr ptr defined (  cobol_ext_$cobol_min2_fileno_ptr);
  2    38 dcl     cobol_ext_$cobol_name_fileno ptr ext;
  2    39 dcl     cobol_name_fileno ptr defined (  cobol_ext_$cobol_name_fileno);
  2    40 dcl     cobol_ext_$cobol_name_fileno_ptr ptr ext;
  2    41 dcl     cobol_name_fileno_ptr ptr defined (  cobol_ext_$cobol_name_fileno_ptr);
  2    42 dcl     cobol_ext_$cobol_ntfp ptr ext;
  2    43 dcl     cobol_ntfp ptr defined (  cobol_ext_$cobol_ntfp);
  2    44 dcl     cobol_ext_$cobol_pdofp ptr ext;
  2    45 dcl     cobol_pdofp ptr defined (  cobol_ext_$cobol_pdofp);
  2    46 dcl     cobol_ext_$cobol_pfp ptr ext;
  2    47 dcl     cobol_pfp ptr defined (  cobol_ext_$cobol_pfp);
  2    48 dcl     cobol_ext_$cobol_rm2fp ptr ext;
  2    49 dcl     cobol_rm2fp ptr defined (  cobol_ext_$cobol_rm2fp);
  2    50 dcl     cobol_ext_$cobol_rmin2fp ptr ext;
  2    51 dcl     cobol_rmin2fp ptr defined (  cobol_ext_$cobol_rmin2fp);
  2    52 dcl     cobol_ext_$cobol_curr_in ptr ext;
  2    53 dcl     cobol_curr_in ptr defined (  cobol_ext_$cobol_curr_in);
  2    54 dcl     cobol_ext_$cobol_curr_out ptr ext;
  2    55 dcl     cobol_curr_out ptr defined (  cobol_ext_$cobol_curr_out);
  2    56 dcl     cobol_ext_$cobol_sfp ptr ext;
  2    57 dcl     cobol_sfp ptr defined (  cobol_ext_$cobol_sfp);
  2    58 dcl     cobol_ext_$cobol_w1p ptr ext;
  2    59 dcl     cobol_w1p ptr defined (  cobol_ext_$cobol_w1p);
  2    60 dcl     cobol_ext_$cobol_w2p ptr ext;
  2    61 dcl     cobol_w2p ptr defined (  cobol_ext_$cobol_w2p);
  2    62 dcl     cobol_ext_$cobol_w3p ptr ext;
  2    63 dcl     cobol_w3p ptr defined (  cobol_ext_$cobol_w3p);
  2    64 dcl     cobol_ext_$cobol_w5p ptr ext;
  2    65 dcl     cobol_w5p ptr defined (  cobol_ext_$cobol_w5p);
  2    66 dcl     cobol_ext_$cobol_w6p ptr ext;
  2    67 dcl     cobol_w6p ptr defined (  cobol_ext_$cobol_w6p);
  2    68 dcl     cobol_ext_$cobol_w7p ptr ext;
  2    69 dcl     cobol_w7p ptr defined (  cobol_ext_$cobol_w7p);
  2    70 dcl     cobol_ext_$cobol_x3fp ptr ext;
  2    71 dcl     cobol_x3fp ptr defined (  cobol_ext_$cobol_x3fp);
  2    72 dcl	cobol_ext_$cobol_rwdd ptr ext;
  2    73 dcl	cobol_rwdd ptr defined(cobol_ext_$cobol_rwdd);
  2    74 dcl	cobol_ext_$cobol_rwpd ptr ext;
  2    75 dcl	cobol_rwpd ptr defined(cobol_ext_$cobol_rwpd);
  2    76 
  2    77 
  2    78 dcl     cobol_ext_$cobol_fileno1 fixed bin(24)ext;
  2    79 dcl     cobol_fileno1 fixed bin(24)defined (  cobol_ext_$cobol_fileno1);				
  2    80 dcl     cobol_ext_$cobol_options_len fixed bin(24)ext;
  2    81 dcl     cobol_options_len fixed bin(24)defined (  cobol_ext_$cobol_options_len);
  2    82 dcl     cobol_ext_$cobol_pdout_fileno fixed bin(24)ext;
  2    83 dcl     cobol_pdout_fileno fixed bin(24)defined (  cobol_ext_$cobol_pdout_fileno);			
  2    84 dcl     cobol_ext_$cobol_print_fileno fixed bin(24)ext;
  2    85 dcl     cobol_print_fileno fixed bin(24)defined (  cobol_ext_$cobol_print_fileno);			
  2    86 dcl     cobol_ext_$cobol_rmin2_fileno fixed bin(24)ext;
  2    87 dcl     cobol_rmin2_fileno fixed bin(24)defined (  cobol_ext_$cobol_rmin2_fileno);
  2    88 dcl     cobol_ext_$cobol_x1_fileno fixed bin(24)ext;
  2    89 dcl     cobol_x1_fileno fixed bin(24)defined (  cobol_ext_$cobol_x1_fileno);				
  2    90 dcl     cobol_ext_$cobol_x2_fileno fixed bin(24)ext;
  2    91 dcl     cobol_x2_fileno fixed bin(24)defined (  cobol_ext_$cobol_x2_fileno);
  2    92 dcl     cobol_ext_$cobol_x3_fileno fixed bin(24)ext;
  2    93 dcl     cobol_x3_fileno fixed bin(24)defined (  cobol_ext_$cobol_x3_fileno);
  2    94 
  2    95 dcl     cobol_ext_$cobol_lpr char (5) ext;
  2    96 dcl     cobol_lpr char (5) defined (  cobol_ext_$cobol_lpr);				/* -2- */
  2    97 dcl     cobol_ext_$cobol_options char (120) ext;
  2    98 dcl     cobol_options char (120) defined (  cobol_ext_$cobol_options);          			/* -30- */
  2    99 
  2   100 dcl     cobol_ext_$cobol_xlast8 bit (1) ext;
  2   101 dcl     cobol_xlast8 bit (1) defined (  cobol_ext_$cobol_xlast8);				/* -1- */
  2   102 dcl     cobol_ext_$report_exists bit (1) ext;
  2   103 dcl     report_exists bit (1) defined (  cobol_ext_$report_exists);
  2   104 
  2   105 
  2   106 /*    <<<   END OF SHARED EXTERNALS INCLUDE FILE   >>>    */
  2   107 /* END INCLUDE FILE ... cobol_ext_.incl.pl1 */
  2   108 
      776 
  3     1 
  3     2 /* BEGIN INCLUDE FILE ...   cobol_fixed_common.incl.pl1 */
  3     3 /* Modified on 10/27/82 by FCH, [5.1-1], cobol_cln added to save last line num, BUG543(phx13643) */
  3     4 /* Modified on 07/31/80 by FCH, [4.3-1], use_reporting field added for Report Writer */
  3     5 /* Modified on 03/30/79 by FCH, [4.1-1], -card option added */
  3     6 /* Modified on 03/30/79 by FCH, [4.0-2], -svNM option added */
  3     7 /* Modified on 03/02/79 by FCH, [4.0-1], -levNM option added */
  3     8 /* Modified by RAL on 10/13/78, [4.0-0], Added option exp from fil2. */
  3     9 /* Modified by BC on 06/20/77, descriptor added.	*/
  3    10 /* Modified by BC on 06/02/77, init_cd_seg, init_cd_offset added.	*/
  3    11 /* Modified by BC  on 1/21/77, options.profile added.	*/
  3    12 /* Modified by FCH on 7/6/76, sysin_fno & sysout_fno deleted, accept_device & display_device added */
  3    13 /* Modified by FCH on 5/20/77, comp_level added */
  3    14 
  3    15 
  3    16 /*     THE SIZE OF THIS STRUCTURE IN BYTES, (EXCLUDING VARIABLE
  3    17*   LENGTH ENTITIES), FOR EACH HARDWARE IMPLEMENTATION IS:
  3    18*
  3    19*   HARDWARE	|	SIZE (BYTES)
  3    20*   ---------------------------------
  3    21*   645/6180	|	464
  3    22*   P7		|	396
  3    23*   ---------------------------------
  3    24*   */
  3    25 
  3    26 dcl 	1 fixed_common based (  cobol_com_ptr),
  3    27     		2 prog_name char (30),
  3    28    		2 compiler_rev_no char (25),
  3    29     		2 phase_name char (6),
  3    30     		2 currency char (1),
  3    31     		2 fatal_no fixed bin,
  3    32     		2 warn_no fixed bin,
  3    33     		2 proc_counter fixed bin,
  3    34     		2 spec_tag_counter fixed bin,
  3    35     		2 file_count fixed bin,
  3    36     		2 filedescr_offsets (20) char (5),
  3    37     		2 perf_alter_info char (5),
  3    38     		2 another_perform_info char (5),
  3    39     		2 sort_in_info char (5),
  3    40     		2 odo_info char (5),
  3    41     		2 size_seg fixed bin,
  3    42     		2 size_offset fixed bin(24),
  3    43     		2 size_perform_info char (5),
  3    44     		2 rename_info char (5),
  3    45     		2 report_names char (5),
  3    46     		2 rw_buf_seg fixed bin,
  3    47     		2 rw_buf_offset fixed bin(24),
  3    48     		2 rw_buf_length fixed bin(24),
  3    49     		2 file_keys char (5),
  3    50     		2 search_keys char (5),
  3    51     		2 dd_seg_size fixed bin(24),
  3    52     		2 pd_seg_size fixed bin(24),
  3    53     		2 seg_limit fixed bin ,
  3    54     		2 number_of_dd_segs fixed bin,
  3    55     		2 seg_info char (5),
  3    56     		2 number_of_ls_pointers fixed bin,
  3    57     		2 link_sec_seg fixed bin,
  3    58     		2 link_sec_offset fixed bin(24),
  3    59     		2 sra_clauses fixed bin,
  3    60     		2 fix_up_info char (5),
  3    61     		2 linage_info char (5),
  3    62     		2 first_dd_item char (5),
  3    63     		2 sort_out_info char (5),
  3    64     		2 db_info char (5),
  3    65     		2 realm_info char (5),
  3    66     		2 rc_realm_info char (5),
  3    67     		2 last_file_key char (5),
  3    68     		2 prog_coll_seq fixed bin,
  3    69 		2 init_cd_seg fixed bin,
  3    70 		2 init_cd_offset fixed bin(24),
  3    71     		2 input_error_exit fixed bin,
  3    72    		2 output_error_exit fixed bin,
  3    73     		2 i_o_error_exit fixed bin,
  3    74     		2 extend_error_exit fixed bin,
  3    75     		2 dummy15 fixed bin,
  3    76     		2 options,
  3    77       			3 cu bit (1),
  3    78       			3 st bit (1),
  3    79       			3 wn bit (1),
  3    80       			3 obs bit (1),
  3    81       			3 dm bit (1),
  3    82       			3 xrl bit (1),
  3    83       			3 xrn bit (1),
  3    84       			3 src bit (1),
  3    85       			3 obj bit (1),
  3    86       			3 exs bit (1),
  3    87       			3 sck bit (1),
  3    88       			3 rno bit (1),
  3    89 			3 u_l bit (1),
  3    90 			3 cnv bit (1),
  3    91 			3 cos bit (1),
  3    92 			3 fmt bit (1),
  3    93 			3 profile bit(1),
  3    94 			3 nw bit (1),
  3    95 			3 exp bit (1),		/* [4.0-0] */
  3    96 			3 card bit (1),  /*[4.1-1]*/
  3    97 			3 fil2 bit (5),
  3    98 			3 m_map bit (1),
  3    99 			3 m_bf bit (1),
  3   100 			3 m_fat bit (1),
  3   101 			3 m_wn bit (1),
  3   102 			3 m_obs bit(1),
  3   103 			3 pd bit(1),
  3   104       			3 oc bit(1),
  3   105     		2 supervisor bit (1),
  3   106     		2 dec_comma bit (1),
  3   107     		2 init_cd bit (1),
  3   108     		2 corr bit (1),
  3   109     		2 initl bit (1),
  3   110     		2 debug bit (1),
  3   111     		2 report bit (1),
  3   112     		2 sync_in_prog bit (1),
  3   113     		2 pd_section bit (1),
  3   114     		2 list_switch bit (1),
  3   115     		2 alpha_cond bit (1),
  3   116     		2 num_cond bit (1),
  3   117     		2 spec_sysin bit (1),
  3   118     		2 spec_sysout bit (1),
  3   119     		2 cpl_files bit (1),
  3   120     		2 obj_dec_comma bit (1),
  3   121 		2 default_sign_type bit (3),
  3   122 		2 use_debug bit(1),
  3   123 		2 syntax_trace bit(1),
  3   124 		2 comp_defaults,
  3   125 			3 comp	bit(1),
  3   126 			3 comp_1	bit(1),
  3   127 			3 comp_2	bit(1),
  3   128 			3 comp_3	bit(1),
  3   129 			3 comp_4	bit(1),
  3   130 			3 comp_5	bit(1),
  3   131 			3 comp_6	bit(1),
  3   132 			3 comp_7	bit(1),
  3   133 			3 comp_8 bit(1),
  3   134 		2 disp_defaults,
  3   135 			3 disp	bit(1),
  3   136 			3 disp_1	bit(1),
  3   137 			3 disp_2	bit(1),
  3   138 			3 disp_3	bit(1),
  3   139 			3 disp_4	bit(1),
  3   140 			3 disp_5  bit(1),
  3   141 			3 disp_6  bit(1),
  3   142 			3 disp_7  bit(1),
  3   143 		2 descriptor bit(2),
  3   144 		2 levsv  bit(3),		/*[4.0-1]*/
  3   145 		2 use_reporting bit(1),	/*[4.3-1]*/
  3   146 		2 cd bit(1),		/*[4.4-1]*/
  3   147 		2 dummy17 bit(3),
  3   148    		2 lvl_rstr bit(32),
  3   149    		2 inst_rstr bit(32),
  3   150 		2 comp_level char(1),
  3   151 		2 dummy18 char(30),
  3   152 		2 object_sign char (1),
  3   153     		2 last_print_rec char (5),
  3   154     		2 coll_seq_info char (5),
  3   155     		2 sys_status_seg fixed bin,
  3   156    		2 sys_status_offset fixed bin(24),
  3   157    		2 compiler_id fixed bin,
  3   158    		2 date_comp_ln fixed bin,
  3   159    		2 compile_mode bit(36),
  3   160    		2 default_temp fixed bin,
  3   161    		2 accept_device fixed bin,
  3   162    		2 display_device fixed bin,
  3   163    		2 cobol_cln fixed bin,	/*[5.1-1]*/
  3   164 		2 alphabet_offset fixed bin;
  3   165 
  3   166 
  3   167 
  3   168 /* END INCLUDE FILE ...   cobol_fixed_common.incl.pl1 */
  3   169 
      777 
  4     1 
  4     2 /* BEGIN INCLUDE FILE ...   cobol_xref.incl.pl1 */
  4     3 
  4     4 dcl	mcobol		bit(1);
  4     5 dcl	mcobol_xref	bit(1);
  4     6 
  4     7 dcl	1 token_area	based(  cobol_$xref_token_ptr),
  4     8 	 2 token_count	fixed bin(35),
  4     9 	 2 element(10000),
  4    10 	  3 token_ptr	ptr,
  4    11 	  3 name_ptr	ptr;
  4    12 
  4    13 dcl	1 chain_area	based(  cobol_$xref_chain_ptr),
  4    14 	 2 chain_count	fixed bin(35),
  4    15 	 2 element(80000),
  4    16 	  3 ref_line	fixed bin(17) unaligned,
  4    17 	  3 next		fixed bin(17) unaligned;
  4    18 
  4    19 dcl	xref_ptr		ptr;
  4    20 
  4    21 dcl	1 xref_chain	based(xref_ptr),
  4    22 	 2 first		fixed bin(17) unaligned,
  4    23 	 2 last		fixed bin(17) unaligned;
  4    24 
  4    25 /* END INCLUDE FILE ...   cobol_xref.incl.pl1 */
  4    26 
      778 
  5     1 
  5     2 /* BEGIN INCLUDE FILE ...   cobol_eln_table.incl.pl1 */
  5     3 
  5     4 dcl 1 eln_tab(20000)	based(  cobol_$eln_ptr),
  5     5      2 fno		fixed bin(17) unaligned,
  5     6      2 lno		fixed bin(17) unaligned;
  5     7 
  5     8 dcl eln_index		fixed bin;
  5     9 
  5    10 dcl 1 statement_info(20000)	based(  cobol_$statement_info_ptr),
  5    11      2 start		fixed bin(24) unaligned,
  5    12      2 length		fixed bin(8) unaligned;
  5    13 
  5    14 /* END INCLUDE FILE ...   cobol_eln_table.incl.pl1 */
  5    15 
      779 
  6     1 
  6     2 /* BEGIN INCLUDE FILE ... cobol_type7.incl.pl1 */
  6     3 /* Last modified on 11/19/76 by ORN */
  6     4 
  6     5 /*
  6     6*A type 7 procedure definition token is entered into the name table and into
  6     7*the procedure division minpral file by the lexical analysis phase for each
  6     8*procedure definition found in the source program.
  6     9**/
  6    10 
  6    11 dcl proc_def_ptr ptr;
  6    12 
  6    13 /* BEGIN DECLARATION OF TYPE7 (PROCEDURE DEFINITION) TOKEN */
  6    14 dcl  1 proc_def based (proc_def_ptr),
  7     1 
  7     2 /* begin include file ... cobol_TYPE7.incl.pl1 */
  7     3 /* Last modified on 11/17/76 by ORN */
  7     4 /* Last modified on 12/28/76 by FCH */
  7     5 
  7     6 		/* header */
  7     7 		2 size fixed bin,
  7     8 		2 line fixed bin,
  7     9 		2 column fixed bin,
  7    10 		2 type fixed bin,
  7    11 		/* body */
  7    12 		2 string_ptr ptr,
  7    13 		2 prev_rec ptr,
  7    14 		2 searched bit (1),
  7    15 		2 duplicate bit (1),
  7    16 		2 filler1 bit (1),
  7    17 		2 debug_ind bit (1),
  7    18 		2 section_name bit (1),
  7    19 		2 declarative_proc bit (1),
  7    20 		2 filler2 bit (1),
  7    21 		2 alterable bit (1),
  7    22 		2 priority char (2),
  7    23 		2 sort_range bit (1),
  7    24 		2 input_range bit (1),
  7    25 		2 output_range bit (1),
  7    26 		2 merge_range bit(1),
  7    27 		2 filler3 bit (5),
  7    28 		2 section_num fixed bin,
  7    29 		2 proc_num fixed bin,
  7    30 		2 def_line fixed bin,
  7    31 		2 name_size fixed bin,
  7    32 		2 name char(0 refer(proc_def.name_size));	
  7    33 
  7    34 
  7    35 
  7    36 /* end include file ... cobol_TYPE7.incl.pl1 */
  7    37 
  6    15 
  6    16 /* END DECLARATION OF TYPE7 (PROCEDURE DEFINITION) TOKEN */
  6    17 
  6    18 /* END INCLUDE FILE ... cobol_type7.incl.pl1 */
  6    19 
      780 
  8     1 
  8     2 /* BEGIN INCLUDE FILE ... cobol_type9.incl.pl1 */
  8     3 /* Last modified on 11/19/76 by ORN */
  8     4 
  8     5 /*
  8     6*A type 9 data name token is entered into the name table by the data
  8     7*division syntax phase for each data name described in the data division.
  8     8*The replacement phase subsequently replaces type 8 user word references
  8     9*to data names in the procedure division minpral file with the corresponding
  8    10*type 9 tokens from the name table.
  8    11**/
  8    12 
  8    13 /* dcl dn_ptr ptr; */
  8    14 
  8    15 /* BEGIN DECLARATION OF TYPE9 (DATA NAME) TOKEN */
  8    16 dcl 1 data_name based (dn_ptr),
  9     1 
  9     2 /* begin include file ... cobol_TYPE9.incl.pl1 */
  9     3 /* Last modified on 06/19/77 by ORN */
  9     4 /* Last modified on 12/28/76 by FCH */
  9     5 
  9     6 		/* header */
  9     7 		2 size fixed bin,
  9     8 		2 line fixed bin,
  9     9 		2 column fixed bin,
  9    10 		2 type fixed bin,
  9    11 		/* body */
  9    12 		2 string_ptr ptr,
  9    13 		2 prev_rec ptr,
  9    14 		2 searched bit (1),
  9    15 		2 duplicate bit (1),
  9    16 		2 saved bit (1),
  9    17 		2 debug_ind bit (1),
  9    18 		2 filler2 bit (3),
  9    19 		2 used_as_sub bit (1),
  9    20 		2 def_line fixed bin,
  9    21 		2 level fixed bin,
  9    22 		2 linkage fixed bin,
  9    23 		2 file_num fixed bin,
  9    24 		2 size_rtn fixed bin,
  9    25 		2 item_length fixed bin(24),
  9    26 		2 places_left fixed bin,
  9    27 		2 places_right fixed bin,
  9    28 		/* description */
  9    29 		2 file_section bit (1),
  9    30 		2 working_storage bit (1),
  9    31 		2 constant_section bit (1),
  9    32 		2 linkage_section bit (1),
  9    33 		2 communication_section bit (1),
  9    34 		2 report_section bit (1),
  9    35 		2 level_77 bit (1),
  9    36 		2 level_01 bit (1),
  9    37 		2 non_elementary bit (1),
  9    38 		2 elementary bit (1),
  9    39 		2 filler_item bit (1),
  9    40 		2 s_of_rdf bit (1),
  9    41 		2 o_of_rdf bit (1),
  9    42 		2 bin_18 bit (1),
  9    43 		2 bin_36 bit (1),
  9    44 		2 pic_has_l bit (1),
  9    45 		2 pic_is_do bit (1),
  9    46 		2 numeric bit (1),
  9    47 		2 numeric_edited bit (1),
  9    48 		2 alphanum bit (1),
  9    49 		2 alphanum_edited bit (1),
  9    50 		2 alphabetic bit (1),
  9    51 		2 alphabetic_edited bit (1),
  9    52 		2 pic_has_p bit (1),
  9    53 		2 pic_has_ast bit (1),
  9    54 		2 item_signed bit(1),
  9    55 		2 sign_separate bit (1),
  9    56 		2 display bit (1),
  9    57 		2 comp bit (1),
  9    58 		2 ascii_packed_dec_h bit (1),	/* as of 8/16/76  this field used for comp8. */
  9    59 		2 ascii_packed_dec bit (1),
  9    60 		2 ebcdic_packed_dec bit (1),
  9    61 		2 bin_16 bit (1),
  9    62 		2 bin_32 bit (1),
  9    63 		2 usage_index bit (1),
  9    64 		2 just_right bit (1),
  9    65 		2 compare_argument bit (1),
  9    66 		2 sync bit (1),
  9    67 		2 temporary bit (1),
  9    68 		2 bwz bit (1),
  9    69 		2 variable_length bit (1),
  9    70 		2 subscripted bit (1),
  9    71 		2 occurs_do bit (1),
  9    72 		2 key_a bit (1),
  9    73 		2 key_d bit (1),
  9    74 		2 indexed_by bit (1),
  9    75 		2 value_numeric bit (1),
  9    76 		2 value_non_numeric bit (1),
  9    77 		2 value_signed bit (1),
  9    78 		2 sign_type bit (3),
  9    79 		2 pic_integer bit (1),
  9    80 		2 ast_when_zero bit (1),
  9    81 		2 label_record bit (1),
  9    82 		2 sign_clause_occurred bit (1),
  9    83 		2 okey_dn bit (1),
  9    84 		2 subject_of_keyis bit (1),
  9    85 		2 exp_redefining bit (1),
  9    86 		2 sync_in_rec bit (1),
  9    87 		2 rounded bit (1),
  9    88 		2 ad_bit bit (1),
  9    89 		2 debug_all bit (1),
  9    90 		2 overlap bit (1),
  9    91 		2 sum_counter bit (1),
  9    92 		2 exp_occurs bit (1),
  9    93 		2 linage_counter bit (1),
  9    94 		2 rnm_01 bit (1),
  9    95 		2 aligned bit (1),
  9    96 		2 not_user_writable bit (1),
  9    97 		2 database_key bit (1),
  9    98 		2 database_data_item bit (1),
  9    99 		2 seg_num fixed bin,
  9   100 		2 offset fixed bin(24),
  9   101 		2 initial_ptr fixed bin,
  9   102 		2 edit_ptr fixed bin,
  9   103 		2 occurs_ptr fixed bin,
  9   104 		2 do_rec char(5),
  9   105 		2 bitt bit (1),
  9   106 		2 byte bit (1),
  9   107 		2 half_word bit (1),
  9   108 		2 word bit (1),
  9   109 		2 double_word bit (1),
  9   110 		2 half_byte bit (1),
  9   111 		2 filler5 bit (1),
  9   112 		2 bit_offset bit (4),
  9   113 		2 son_cnt bit (16),
  9   114 		2 max_red_size fixed bin(24),
  9   115 		2 name_size fixed bin,
  9   116 		2 name char(0 refer(data_name.name_size));	
  9   117 
  9   118 
  9   119 
  9   120 /* end include file ... cobol_TYPE9.incl.pl1 */
  9   121 
  8    17 
  8    18 /* END DECLARATION OF TYPE9 (DATA NAME) TOKEN */
  8    19 
  8    20 /* END INCLUDE FILE ... cobol_type9.incl.pl1 */
  8    21 
      781 
 10     1 
 10     2 /* BEGIN INCLUDE FILE ... cobol_type10.incl.pl1 */
 10     3 /* Last modified on 11/19/76 by ORN */
 10     4 /*
 10     5*A type 10 index name token is entered into the name table by the data
 10     6*division syntax phase for each index name appearing in the data division.
 10     7*An index name is declared in the indexed by phrase of an occurs clause.
 10     8*maintain the binary byte offset, within the array, corresponding to the
 10     9*current setting of the index name.  The right-most two bytes contain the
 10    10*binary occurrence number to which the index name is set.
 10    11*When the replacement phase processes the procedure division minpral file,
 10    12*each reference to an index name is replaced with the type 10 token created
 10    13*for that index name.
 10    14**/
 10    15 
 10    16 dcl ind_ptr ptr;
 10    17 
 10    18 /* BEGIN DECLARATION OF TYPE10 (INDEX NAME) TOKEN */
 10    19 dcl	1 index_name based (ind_ptr),
 11     1 
 11     2 /* begin include file ... cobol_TYPE10.incl.pl1
 11     3*/* Last modified on 01/25/77 by ORN */
 11     4 
 11     5 	/* header */
 11     6 	2 size fixed bin,
 11     7 	2 line fixed bin,
 11     8 	2 column fixed bin,
 11     9 	2 type fixed bin,
 11    10 	/* body */
 11    11 	2 string_ptr ptr,
 11    12 	2 prev_rec ptr,
 11    13 	2 searched bit(1),
 11    14 	2 duplicate bit(1),
 11    15 	2 saved bit(1),
 11    16 	2 debug_ind bit(1),
 11    17 	2 filler1 bit(3),
 11    18 	2 subscript bit(1),
 11    19 	2 def_line fixed bin,
 11    20 	2 level fixed bin,
 11    21 	2 seg_num fixed bin,
 11    22 	2 offset fixed bin(24),
 11    23 	2 index_no fixed bin,
 11    24 	2 min fixed bin,
 11    25 	2 max fixed bin,
 11    26 	2 struc_length fixed bin,
 11    27 	2 cswd_seg fixed bin,
 11    28 	2 cswd_offset fixed bin(24),
 11    29 	2 name_size fixed bin,
 11    30 	2 name char(0 refer(index_name.name_size));
 11    31 
 11    32 
 11    33 
 11    34 /* end include file ... cobol_TYPE10.incl.pl1 */
 11    35 
 10    20 
 10    21 /* END DECLARATION OF TYPE10 (INDEX NAME) TOKEN */
 10    22 
 10    23 /* END INCLUDE FILE ... cobol_type10.incl.pl1 */
 10    24 
      782 
 12     1 
 12     2 /* BEGIN INCLUDE FILE ... cobol_type12.incl.pl1 */
 12     3 /* Last modified on 11/19/76 by ORN */
 12     4 
 12     5 /*
 12     6*A type 12 file name token is entered into the name table by the data
 12     7*division syntax phase for each file name appearing in the data division.
 12     8*When the replacement phase processes the procedure division minpral file,
 12     9*each reference to a file name is replaced with the type 12 token created
 12    10*for that file name.
 12    11**/
 12    12 
 12    13 /* dcl name_ptr ptr; */
 12    14 
 12    15 /* BEGIN DECLARATION OF TYPE12 (FILE NAME) TOKEN */
 12    16 dcl 	1 fd_token based (name_ptr),
 13     1 
 13     2 /* begin include file ... cobol_TYPE12.incl.pl1 */
 13     3 /* Last modified on 11/17/76 by ORN */
 13     4 
 13     5 		/* header */
 13     6 		2 size fixed bin,
 13     7 		2 line fixed bin,
 13     8 		2 column fixed bin,
 13     9 		2 type fixed bin,
 13    10 		/* body */
 13    11 		2 string_ptr ptr,
 13    12 		2 prev_rec ptr,
 13    13 		2 info bit (8),
 13    14 		2 def_line fixed bin,
 13    15 		2 file_no fixed bin,
 13    16 		2 name_size fixed bin,
 13    17 		2 name char(0 refer(fd_token.name_size));	
 13    18 
 13    19 /* end include file ... cobol_TYPE12.incl.pl1 */
 13    20 
 12    17 
 12    18 /* END DECLARATION OF TYPE12 (FILE NAME) TOKEN */
 12    19 
 12    20 
 12    21 /* END INCLUDE FILE ... cobol_type12.incl.pl1 */
 12    22 
      783 
 14     1 
 14     2 /* BEGIN INCLUDE FILE ...   cobol_file_table.incl.pl1 */
 14     3 /*     <<<   INCLUDE FILE FOR FILE TABLE IN COMMON   >>>     */
 14     4 
 14     5 /* Modified on 09/30/80 by FCH, [4.4-1], density is 6250 is supported */
 14     6 /* Modified on 12/05/78 by RAL, [3.0-3], added dupl_alt from dummy102 */
 14     7 /* Modified on 11/21/78 by RAL, [3.0-2], added space for abs_record_offset from filler */
 14     8 /* Modified on 10/26/78 by RAL, [3.0-1], added space for file_desc_1 table offset from filler */
 14     9 /*     <<<   LAST MODIFIED ON 06-02-77 by GM         >>>	*/
 14    10 /*     <<<   LAST MODIFIED ON 05-31-77 by GM         >>>	*/
 14    11 /*     <<<   LAST MODIFIED  ON 06-30-76 by GM        >>>	*/
 14    12 /*     <<<   LAST MODIFIED ON 06-07-76 by GM    >>>     */
 14    13 /*     <<<   LAST MODIFIED ON 11-29-74 by orn   >>>     */
 14    14 
 14    15 /*
 14    16*A file table is created in variable common for each file selected in the
 14    17*environment division.  The fields of a given file table provide information
 14    18*about the specific file for which the file table is generated.  The
 14    19*addresses which may be contained in the various "info" fields of the file
 14    20*table are addresses in variable common.
 14    21**/
 14    22 
 14    23 /*   THE FILE TABLE STRUCTURE   */
 14    24 
 14    25 dcl	1 file_table based (ft_ptr),
 14    26 		2 next char (5),
 14    27 		2 ifn char (16),
 14    28 		2 attach_options_info char(5),	/*06/02/77*/
 14    29 		2 replacement_info char(5),		/*06/02/77*/
 14    30 		2 file_id_info char(5),		/*05/31/77*/
 14    31 		2 retention_info char(5),		/*05/31/77*/
 14    32 		2 filler0 char (3) ,			/* [3.0-1] */
 14    33 		2 file_desc_1_offset fixed bin (24),		/* [3.0-1] */
 14    34 		2 abs_record_offset fixed bin (24),		/* [3.-02] */
 14    35 		2 filler char(5),		/* this area is available.*/
 14    36 		2 padding_char char (1),
 14    37 		2 banner_char char (1),
 14    38 		2 file_status_info char (5),
 14    39 		2 extra_status_info char (5),
 14    40 		2 cat_id_info char (5),
 14    41 		2 r_key_info char (5),
 14    42 		2 alt_key_info char (5),
 14    43 		2 rec_do_info char (5),
 14    44 		2 label_info char (5),
 14    45 		2 data_info char (5),
 14    46 		2 report_info char (5),
 14    47 		2 linage_info char (5),
 14    48 		2 optional bit (1),						/*06/07/76*/
 14    49 		2 external bit (1),
 14    50 		2 file_status bit (1),
 14    51 		2 extra_status bit (1),
 14    52 		2 sysin bit (1),
 14    53 		2 sysout bit (1),
 14    54 		2 move_mode bit (1),
 14    55 		2 locate_mode bit (1),
 14    56 		2 fixed_recs bit (1),
 14    57 		2 variable_recs bit (1),
 14    58 		2 spanned_recs bit (1),				/*06/07/76*/
 14    59 		2 interchange bit (1),				/*06/07/76*/
 14    60 		2 relative_key bit (1),
 14    61 		2 record_key bit (1),
 14    62 		2 even_parity bit (1),
 14    63 		2 odd_parity bit (1),
 14    64 		2 padding bit (1),
 14    65 		2 banner bit (1),
 14    66 		2 random bit (1),
 14    67 		2 no_file_lockout bit (1),
 14    68 		2 no_write_check bit (1),
 14    69 		2 no_resident_index bit (1),
 14    70 		2 same_file bit (1),
 14    71 		2 sort_file bit (1),
 14    72 		2 rec_do bit (1),
 14    73 		2 linage bit (1),
 14    74 		2 code_set_clause bit (1),
 14    75 		/* history */
 14    76 		2 close bit (1),
 14    77 		2 delete bit (1),
 14    78 		2 open_in bit (1),
 14    79 		2 open_out bit (1),
 14    80 		2 open_io bit (1),
 14    81 		2 open_ext bit (1),
 14    82 		2 read bit (1),
 14    83 		2 release bit (1),
 14    84 		2 return_bit bit (1),
 14    85 		2 rewrite bit (1),
 14    86 		2 sort bit (1),
 14    87 		2 start bit (1),
 14    88 		2 use_error bit (1),
 14    89 		2 write bit (1),
 14    90 		2 read_next bit (1),
 14    91 		2 read_key bit (1),
 14    92 		2 accept bit (1),
 14    93 		2 display bit (1),
 14    94 		2 unequal_recs bit (1),
 14    95 		2 dummy_sysin bit (1),
 14    96 		2 dummy_sysout bit (1),
 14    97 		2 file_no fixed bin,
 14    98 		2 uca_offset fixed bin(24),
 14    99 		2 cra_seg fixed bin,
 14   100 		2 cra_offset fixed bin(24),
 14   101 		2 max_cra_size fixed bin(24),
 14   102 		2 catalogued fixed bin,
 14   103 		2 organization fixed bin,
 14   104 		2 org_qual fixed bin,
 14   105 		2 access fixed bin,
 14   106 		2 buffers fixed bin,
 14   107 		2 device fixed bin,
 14   108 		2 record_prefix fixed bin,				/*06/07/76*/
 14   109 		2 alternate_keys fixed bin,
 14   110 		2 record_format fixed bin,
 14   111 		2 label_format fixed bin,
 14   112 		2 key_location fixed bin,
 14   113 		2 key_size fixed bin,
 14   114 		2 temporary fixed bin,
 14   115 		2 address_format fixed bin,
 14   116 		2 same_area_clause fixed bin,
 14   117 		2 same_rec_clause fixed bin,
 14   118 		2 same_sort_clause fixed bin,
 14   119 		2 mult_clause_no fixed bin,
 14   120 		2 mult_position_no fixed bin,
 14   121 		2 block_desc fixed bin,
 14   122 		2 block_min fixed bin(24),
 14   123 		2 block_max fixed bin(24),
 14   124 		2 rec_min fixed bin(24),
 14   125 		2 rec_max fixed bin(24),
 14   126 		2 label_count fixed bin,
 14   127 		2 ifn_size fixed bin,
 14   128 		2 data_count fixed bin,
 14   129 		2 report_count fixed bin,
 14   130 		2 code_set fixed bin,
 14   131 		2 error_exit fixed bin,
 14   132 		2 prefix_size fixed bin,
 14   133 		2 blocked bit (1),
 14   134 		2 variable bit (1),
 14   135 		2 unbannered bit (1),
 14   136 		2 prefix_clause bit (1),
 14   137 		2 symbolic bit (1),
 14   138 		2 address_format_bit bit (1),
 14   139 		2 bsn bit(1),						/*06/07/76*/
 14   140 		2 process_area bit(1),					/*06/07/76*/
 14   141 		2 dupl_alt bit (1),			/* [3.0-3] */
 14   142 		2 dummy102 bit (23),
 14   143 		2 name_size fixed bin,
 14   144 		2 name char(32),
 14   145 		2 id char(32),
 14   146 		2 temp bit(1) ,
 14   147 		2 perm bit(1) ,
 14   148 		2 attach bit(1) ,
 14   149 		2 detach bit(1) ,
 14   150 		2 fsb ,		/* file state block */
 14   151 		     3 seg fixed bin(24), /* internal addr */
 14   152 		     3 off fixed bin(24),
 14   153 		2 tape,
 14   154 		     3 density bit(1) ,	/* 0-hi 1-lo */
 14   155 		     3 retain bit(1),	/* 0 not retained across attachment, 1 retained */
 14   156 		     3 force bit(1),	/* 0 check retention date, 1 no check */
 14   157 		     3 protect bit(1) ,	/* 0-no 1-yes */
 14   158 		     3 den_6250 bit(1),	/* 0-no 1-yes */		/*[4.4-1]*/
 14   159 		2 cat_nm char(200),
 14   160 		2 ao_len fixed bin(24),		/* attach options */
 14   161 		2 ao_string char(256),
 14   162 		2 output_mode fixed bin,	/*	0 not specified
 14   163*						1 generation
 14   164*						2 modification
 14   165*						3 replacement literal
 14   166*						4 replacement dataname	*/
 14   167 		2 om_len	fixed bin,		/* length of output mode */
 14   168 		2 om_string char(17),
 14   169 		2 tape_device fixed bin,	/*	0 not specified
 14   170*						1 integer
 14   171*						2 dataname	*/
 14   172 		2 tape_device_num fixed bin,
 14   173 		2 tape_device_key char(5),
 14   174 		2 add_cat_key char(5);
 14   175 
 14   176 
 14   177 /* END INCLUDE FILE ...   cobol_file_table.incl.pl1 */
 14   178 
      784 
 15     1 
 15     2 /* BEGIN INCLUDE FILE ... cobol_type13.incl.pl1 */
 15     3 /* Last modified on 11/19/76 by ORN */
 15     4 
 15     5 dcl cdtoken_ptr ptr;
 15     6 
 15     7 /* BEGIN DECLARATION OF TYPE13 (CD NAME) TOKEN */
 15     8 dcl 1 cdtoken based(cdtoken_ptr),
 16     1 
 16     2 /* begin include file ... cobol_TYPE13.incl.pl1
 16     3*/* Last modified on 11/18/76 by ORN */
 16     4 
 16     5 		/* header */
 16     6      2 size fixed bin,
 16     7      2 line fixed bin,
 16     8      2 column fixed bin,
 16     9      2 type fixed bin,     /* cd = 13 */
 16    10 		/* body */
 16    11      2 string_ptr ptr,
 16    12      2 prev_rec ptr,
 16    13      2 info,
 16    14 	3 searched bit(1),
 16    15 	3 duplicate bit(1),
 16    16 	3 filler1 bit(6),
 16    17      2 options,
 16    18 	3 input bit(1),
 16    19 	3 output bit(1),
 16    20 	3 initial bit(1),
 16    21      2 def_line fixed bin,
 16    22      2 cd_num fixed bin,
 16    23      2 cd_seg fixed bin,
 16    24      2 cd_off fixed bin(24),
 16    25      2 max_redef fixed bin,
 16    26      2 mdest fixed bin,
 16    27      2 name_size fixed bin,
 16    28      2 name char(0 refer(cdtoken.name_size));
 16    29 
 16    30 /* end include file ... cobol_TYPE13.incl.pl1 */
 16    31 
 15     9 
 15    10 /* END DECLARATION OF TYPE13 (CD NAME) TOKEN */
 15    11 
 15    12 
 15    13 /* END INCLUDE FILE ... cobol_type13.incl.pl1 */
 15    14 
      785 
 17     1 
 17     2 /* BEGIN INCLUDE FILE ... cobol_type17.incl.pl1 */
 17     3 /* Last modified on 11/19/76 by ORN */
 17     4 
 17     5 /*
 17     6*A mnemonic name token is created for each user-defined mnemonic name
 17     7*specified in the special-names paragraph.
 17     8**/
 17     9 
 17    10 /* dcl name_ptr ptr;  */
 17    11 
 17    12 /* BEGIN DECLARATION OF TYPE17 (MNEMONIC NAME) TOKEN */
 17    13 dcl	1 mnemonic_name based (name_ptr),
 18     1 
 18     2 /* begin include file ... cobol_TYPE17.incl.pl1 */
 18     3 /* Last modified on 11/17/76 by ORN */
 18     4 
 18     5 		/* header */
 18     6 		2 size fixed bin,
 18     7 		2 line fixed bin,
 18     8 		2 column fixed bin,
 18     9 		2 type fixed bin,
 18    10 		/* body */
 18    11 		2 string_ptr ptr,
 18    12 		2 prev_rec ptr,
 18    13 		2 info bit(8),
 18    14 		2 class,
 18    15 		     3 switch_condition bit(1),
 18    16 		     3 switch_name bit(1),
 18    17 		     3 accept_device bit(1),
 18    18 		     3 display_device bit(1),
 18    19 		     3 printer_control bit(1),
 18    20 		     3 alphabet_name bit(1),
 18    21 		2 on_status bit(1),
 18    22 		2 off_status bit(1),
 18    23 		2 def_line fixed bin,
 18    24 		2 iw_key fixed bin,
 18    25 		2 reserved bit(36),
 18    26 		2 alphabet_offset fixed bin,
 18    27 		2 name_size fixed bin,
 18    28 		2 name char(0 refer (mnemonic_name.name_size));
 18    29 
 18    30 
 18    31 /* end include file ... cobol_TYPE17.incl.pl1 */
 18    32 
 17    14 
 17    15 /* END DECLARATION OF TYPE17 (MNEMONIC NAME) TOKEN */
 17    16 
 17    17 /* END INCLUDE FILE ... cobol_type17.incl.pl1 */
 17    18 
      786 
 19     1 
 19     2 /* BEGIN INCLUDE FILE ... cobol_type40.incl.pl1 */
 19     3 /* Last modified on 11/19/76 by ORN */
 19     4 
 19     5 /*
 19     6*A type 40 token is entered into the name table by the IDED syntax.
 19     7*This token contains the information for the alphabet name.
 19     8**/
 19     9 
 19    10 dcl	alpha_name_ptr	ptr;
 19    11 
 19    12 /* BEGIN DECLARATION OF TYPE40 (ALPHABET NAME) TOKEN */
 19    13 dcl 1 alphabet_name based (alpha_name_ptr),
 20     1 
 20     2 /* begin include file ... cobol_TYPE40.incl.pl1 */
 20     3 /* Last modified on 11/17/76 by ORN */
 20     4 
 20     5 		/* header */
 20     6 		2 size fixed bin,
 20     7 		2 line fixed bin,
 20     8 		2 column fixed bin,
 20     9 		2 type fixed bin,
 20    10 		/* body */
 20    11 		2 string_ptr ptr,
 20    12 		2 prev_rec ptr,
 20    13 		2 info,
 20    14 			3 repl bit(8),
 20    15 			3 one_one bit(1),
 20    16 			3 onto bit(1),
 20    17 		2 hival_char char(1),
 20    18 		2 loval_char char(1),
 20    19 		2 iw_key fixed bin,
 20    20 		2 def_line fixed bin,
 20    21 		2 char_size fixed bin,
 20    22 		2 hi_value char(1),
 20    23 		2 segno fixed bin,
 20    24 		2 offset fixed bin,
 20    25 		2 dn_offset fixed bin,
 20    26 		2 table char(512),
 20    27 		2 name_size fixed bin,
 20    28 		2 name char(0 refer(alphabet_name.name_size));
 20    29 
 20    30 /* end include file ... cobol_TYPE40.incl.pl1 */
 20    31 
 19    14 
 19    15 /* END DECLARATION OF TYPE40 (ALPHABET NAME) TOKEN */
 19    16 
 19    17 /* END INCLUDE FILE ... cobol_type40.incl.pl1 */
 19    18 
      787 
 21     1 
 21     2 /* BEGIN INCLUDE FILE ... cobol_occurs_ext.incl.pl1 */
 21     3 /* Last modified on 01/19/77 by ORN */
 21     4 
 21     5 /*
 21     6*An occurs extension is included in a type 9 data name token when the data
 21     7*name is described with an occurs clause or is subordinate to an item
 21     8*described with an occurs clause.
 21     9**/
 21    10 
 21    11 /*	***STRUCTURE SIZE INFORMATION***	*/
 21    12 /*     THE SIZE OF THIS STRUCTURE IN BYTES, (EXCLUDING VARIABLE
 21    13*       LENGTH ENTITIES), FOR EACH HARDWARE IMPLEMENTATION IS:
 21    14*
 21    15*	HARDWARE	|	SIZE (BYTES)
 21    16*	---------------------------------
 21    17*	6180	|	12 + 24 * dimensions
 21    18*	P7	|	6 + 14 * dimensions
 21    19*	---------------------------------
 21    20**/
 21    21 
 21    22 /*   THE OCCURS EXTENSION STRUCTURE   */
 21    23 
 21    24 dcl occurs_ptr ptr;
 21    25 
 21    26 dcl	1 occurs based (occurs_ptr),
 21    27 		2 keyed fixed bin,
 21    28 		2 key_number fixed bin,
 21    29 		2 dimensions fixed bin,
 21    30 		2 level (occurs.dimensions),
 21    31 			3 index_no fixed bin,
 21    32 			3 min fixed bin,
 21    33 			3 max fixed bin,
 21    34 			3 struc_length fixed bin,
 21    35 			3 cswd_seg fixed bin,
 21    36 			3 cswd_offset fixed bin(24);
 21    37 
 21    38 
 21    39 
 21    40 /* END INCLUDE FILE ...   cobol_occurs_ext.incl.pl1 */
 21    41 
      788 
      789 
      790      end cobol_make_xref_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/24/89  0830.5  cobol_make_xref_.pl1              >spec>install>MR12.3-1048>cobol_make_xref_.pl1
775          1    11/11/82  1712.7  cobol_.incl.pl1                   >ldd>include>cobol_.incl.pl1
776          2    03/27/82  0431.3  cobol_ext_.incl.pl1               >ldd>include>cobol_ext_.incl.pl1
777          3    11/11/82  1712.8  cobol_fixed_common.incl.pl1       >ldd>include>cobol_fixed_common.incl.pl1
778          4    03/27/82  0439.9  cobol_xref.incl.pl1               >ldd>include>cobol_xref.incl.pl1
779          5    03/27/82  0439.7  cobol_eln_table.incl.pl1          >ldd>include>cobol_eln_table.incl.pl1
780          6    03/27/82  0439.9  cobol_type7.incl.pl1              >ldd>include>cobol_type7.incl.pl1
6-15         7    11/11/82  1712.7  cobol_TYPE7.incl.pl1              >ldd>include>cobol_TYPE7.incl.pl1
781          8    03/27/82  0439.9  cobol_type9.incl.pl1              >ldd>include>cobol_type9.incl.pl1
8-17         9    11/11/82  1712.7  cobol_TYPE9.incl.pl1              >ldd>include>cobol_TYPE9.incl.pl1
782         10    03/27/82  0439.8  cobol_type10.incl.pl1             >ldd>include>cobol_type10.incl.pl1
10-20       11    11/11/82  1712.7  cobol_TYPE10.incl.pl1             >ldd>include>cobol_TYPE10.incl.pl1
783         12    11/11/82  1712.8  cobol_type12.incl.pl1             >ldd>include>cobol_type12.incl.pl1
12-17       13    03/27/82  0439.6  cobol_TYPE12.incl.pl1             >ldd>include>cobol_TYPE12.incl.pl1
784         14    11/11/82  1712.7  cobol_file_table.incl.pl1         >ldd>include>cobol_file_table.incl.pl1
785         15    11/11/82  1712.8  cobol_type13.incl.pl1             >ldd>include>cobol_type13.incl.pl1
15-9        16    03/27/82  0439.6  cobol_TYPE13.incl.pl1             >ldd>include>cobol_TYPE13.incl.pl1
786         17    03/27/82  0439.8  cobol_type17.incl.pl1             >ldd>include>cobol_type17.incl.pl1
17-14       18    11/11/82  1712.8  cobol_TYPE17.incl.pl1             >ldd>include>cobol_TYPE17.incl.pl1
787         19    03/27/82  0439.8  cobol_type40.incl.pl1             >ldd>include>cobol_type40.incl.pl1
19-14       20    11/11/82  1712.8  cobol_TYPE40.incl.pl1             >ldd>include>cobol_TYPE40.incl.pl1
788         21    11/11/82  1712.7  cobol_occurs_ext.incl.pl1         >ldd>include>cobol_occurs_ext.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
DEF                                    based           structure                level 1 dcl 63
TAG                       1            based           structure                array level 2 dcl 63
access                   45            based           fixed bin(17,0)          level 2 dcl 14-25 ref 454
addr                                                   builtin function         dcl 127 ref 144 145 146 149 164 215 216 300 543 573
                                                                                  597 659 669 670 710 712
addrel                                                 builtin function         dcl 128 ref 578
alpha                           000172 automatic       bit(1)                   packed unaligned dcl 70 set ref 322* 326* 332* 341
alpha_name_ptr                  000206 automatic       pointer                  dcl 19-10 set ref 529* 531 533 537
alphabet_name                          based           structure                level 1 unaligned dcl 19-13
alphabetic               21(21)        based           bit(1)                   level 2 packed packed unaligned dcl 8-16 ref 260 330
alphabetic_edited        21(22)        based           bit(1)                   level 2 packed packed unaligned dcl 8-16 ref 317 330
alphanum                 21(19)        based           bit(1)                   level 2 packed packed unaligned dcl 8-16 ref 256 324
alphanum_edited          21(20)        based           bit(1)                   level 2 packed packed unaligned dcl 8-16 ref 317 324
ascii_packed_dec         21(30)        based           bit(1)                   level 2 packed packed unaligned dcl 8-16 ref 270 352
ascii_packed_dec_h       21(29)        based           bit(1)                   level 2 packed packed unaligned dcl 8-16 ref 268 352
bin_16                   21(32)        based           bit(1)                   level 2 packed packed unaligned dcl 8-16 ref 286
bin_18                   21(13)        based           bit(1)                   level 2 packed packed unaligned dcl 8-16 ref 272
bin_32                   21(33)        based           bit(1)                   level 2 packed packed unaligned dcl 8-16 ref 292
bin_36                   21(14)        based           bit(1)                   level 2 packed packed unaligned dcl 8-16 ref 278
bit36                                  based           bit(36)                  packed unaligned dcl 49 ref 215 216 669 670 710 712
bit9                                   based           bit(9)                   packed unaligned dcl 48 set ref 144* 145*
bit_offset               11            based           char(4)                  level 2 in structure "print_line" packed packed
                                                                                  unaligned dcl 78 in procedure "cobol_make_xref_"
                                                                                  set ref 242* 248* 679* 682* 685* 688* 691* 694*
                                                                                  699*
bit_offset               31(16)        based           bit(4)                   level 2 in structure "data_name" packed packed
                                                                                  unaligned dcl 8-16 in procedure "cobol_make_xref_"
                                                                                  ref 675
c                                      based           char(4)                  packed unaligned dcl 46 ref 711 723
c_n                                    based           structure                level 1 unaligned dcl 107
c_off                           000157 automatic       fixed bin(17,0)          dcl 53 set ref 328* 334* 339* 345 347* 347 357 358*
                                                                                  375 376* 376 388 391 391 393 394 397 397 399 495*
                                                                                  498 499* 499 577* 581 582* 582 585 586* 586 590
                                                                                  592 593 599* 601* 601 602 603* 603 607 608 638
                                                                                  639* 639 640 641* 641 643 644* 644 645 646* 646
cdtoken                                based           structure                level 1 unaligned dcl 15-8
cdtoken_ptr                     000204 automatic       pointer                  dcl 15-5 set ref 505* 508 511 514
chain_area                             based           structure                level 1 unaligned dcl 4-13
char8                           000116 automatic       char(8)                  packed unaligned dcl 41 set ref 202 243 245 249 345
                                                                                  498 622 630 643 720* 723*
char9                           000120 automatic       char(9)                  packed unaligned dcl 42 set ref 576 602 622* 624*
                                                                                  630*
char_off                        000155 automatic       fixed bin(21,0)          dcl 51 set ref 148* 149 154* 154 163* 163 164 543
                                                                                  560 572* 572 573 593* 593 594 596* 596 597 608*
                                                                                  608 658* 658 659
char_offset                     000156 automatic       fixed bin(17,0)          dcl 52 set ref 215* 669* 675 678
char_string                            based           char(1048576)            packed unaligned dcl 75 set ref 149 164 543 573 594*
                                                                                  597 659
cobol_$constant_offset          000030 external static fixed bin(17,0)          dcl 1-156 ref 182 216
cobol_$eln_ptr                  000020 external static pointer                  dcl 1-68 ref 616 626
cobol_$list_off                 000026 external static fixed bin(17,0)          dcl 1-154 set ref 148 560* 562
cobol_$list_ptr                 000016 external static pointer                  dcl 1-64 set ref 149 164 543 562* 573 594 597 659
cobol_$tag_table_ptr            000014 external static pointer                  dcl 1-52 ref 178 180
cobol_$xref_bypass              000032 external static bit(1)                   dcl 1-212 ref 150
cobol_$xref_chain_ptr           000024 external static pointer                  dcl 1-74 ref 588 604
cobol_$xref_token_ptr           000022 external static pointer                  dcl 1-72 ref 166 167 741 746 748 752 756 757 758 759
                                                                                  759 760
cobol_com_ptr                          defined         pointer                  dcl 2-25 ref 147
cobol_ext_$cobol_com_ptr        000034 external static pointer                  dcl 2-24 ref 147 147
cobol_read_ft                   000012 constant        entry                    external dcl 124 ref 432
code_generated                  000171 automatic       bit(1)                   packed unaligned dcl 69 set ref 147* 176 212
communication_section
                         21(04)        based           bit(1)                   level 2 packed packed unaligned dcl 8-16 ref 227
constant_section         21(02)        based           bit(1)                   level 2 packed packed unaligned dcl 8-16 ref 209
cra_offset               40            based           fixed bin(24,0)          level 2 dcl 14-25 ref 434
cv_length                       000160 automatic       fixed bin(17,0)          dcl 54 set ref 243 245 245 245 245 249 345 345 347
                                                                                  498 498 499 622 622 623 630 630 631 643 643 644
                                                                                  727*
cv_off                          000162 automatic       fixed bin(17,0)          dcl 56 set ref 243 245 249 345 498 622 630 643 725*
                                                                                  727
d                               000274 automatic       fixed bin(17,0)          dcl 737 set ref 741* 743* 743 746 747 750 762 770
data_name                              based           structure                level 1 unaligned dcl 8-16
def_line                 11            based           fixed bin(17,0)          level 2 in structure "index_name" dcl 10-19
                                                                                  in procedure "cobol_make_xref_" ref 415
def_line                 11            based           fixed bin(17,0)          level 2 in structure "mnemonic_name" dcl 17-13
                                                                                  in procedure "cobol_make_xref_" ref 526
def_line                 11            based           fixed bin(17,0)          level 2 in structure "data_name" dcl 8-16
                                                                                  in procedure "cobol_make_xref_" ref 403
def_line                 13            based           fixed bin(17,0)          level 2 in structure "proc_def" dcl 6-14
                                                                                  in procedure "cobol_make_xref_" ref 188
def_line                 11            based           fixed bin(17,0)          level 2 in structure "cdtoken" dcl 15-8 in procedure
                                                                                  "cobol_make_xref_" ref 514
def_line                 12            based           fixed bin(17,0)          level 2 in structure "alphabet_name" dcl 19-13
                                                                                  in procedure "cobol_make_xref_" ref 537
def_line                 11            based           fixed bin(15,0)          level 2 in structure "c_n" dcl 107 in procedure
                                                                                  "cobol_make_xref_" ref 423
def_line                 11            based           fixed bin(17,0)          level 2 in structure "fd_token" dcl 12-16
                                                                                  in procedure "cobol_make_xref_" ref 502
def_ref                                based           char(100)                packed unaligned dcl 95 set ref 574* 576* 581* 585*
                                                                                  592* 598* 602* 607*
device                   47            based           fixed bin(17,0)          level 2 dcl 14-25 ref 466
dimensions                2            based           fixed bin(17,0)          level 2 dcl 21-26 ref 301 303
display                  21(27)        based           bit(1)                   level 2 packed packed unaligned dcl 8-16 ref 252 352
display_sign                    000106 constant        char(6)                  initial array packed unaligned dcl 121 ref 254
divide                                                 builtin function         dcl 129 ref 578 724 743
dn                                     based           char(1)                  array packed unaligned dcl 135 set ref 300
dn_ptr                          000106 automatic       pointer                  dcl 37 set ref 191* 193 195 195 195 198 200 203 206
                                                                                  209 214 221 224 227 230 233 236 238 240 240 252
                                                                                  254 254 256 258 260 264 266 268 270 272 278 284
                                                                                  286 292 298 300 300 306 311 317 317 317 318 318
                                                                                  324 324 324 330 330 337 337 343 351 352 352 352
                                                                                  352 352 366 379 381 384 403 675
ebcdic_packed_dec        21(31)        based           bit(1)                   level 2 packed packed unaligned dcl 8-16 ref 284
edited                          000174 automatic       bit(1)                   packed unaligned dcl 72 set ref 317* 319 388
element                   1            based           structure                array level 2 in structure "chain_area" packed
                                                                                  packed unaligned dcl 4-13 in procedure
                                                                                  "cobol_make_xref_"
element                   2            based           structure                array level 2 in structure "token_area" unaligned
                                                                                  dcl 4-7 in procedure "cobol_make_xref_"
eln_index                       000177 automatic       fixed bin(17,0)          dcl 5-8 set ref 188* 403* 415* 423* 502* 514* 526*
                                                                                  537* 588* 616 616 626 626
eln_tab                                based           structure                array level 1 packed packed unaligned dcl 5-4
external                 33(10)        based           bit(1)                   level 2 packed packed unaligned dcl 14-25 ref 487
fatal_no                 20            based           fixed bin(17,0)          level 2 dcl 3-26 ref 147
fd_token                               based           structure                level 1 unaligned dcl 12-16
ff                              000114 automatic       char(1)                  packed unaligned dcl 40 set ref 144 157
file_no                  12            based           fixed bin(17,0)          level 2 dcl 12-16 set ref 432*
file_section             21            based           bit(1)                   level 2 packed packed unaligned dcl 8-16 ref 221
file_table                             based           structure                level 1 unaligned dcl 14-25
first                                  based           fixed bin(17,0)          level 2 packed packed unaligned dcl 4-21 ref 578
fixed                                                  builtin function         dcl 130 ref 215 216 254 669 670 710 712
fixed_binary                    000176 automatic       bit(1)                   packed unaligned dcl 74 set ref 197* 276* 282* 290*
                                                                                  296* 315
fixed_common                           based           structure                level 1 unaligned dcl 3-26
fl_length                       000161 automatic       fixed bin(17,0)          dcl 55 set ref 576 576 577 590 602 602 603 615* 623*
                                                                                  624 630 631* 631
fno                                    based           fixed bin(17,0)          array level 2 packed packed unaligned dcl 5-4 ref
                                                                                  616
form_feed_char                         based           char(1)                  level 2 packed packed unaligned dcl 96 set ref 157*
ft_ptr                          000112 automatic       pointer                  dcl 39 set ref 432* 434 439 454 466 487 496
hcs_$set_bc_seg                 000010 constant        entry                    external dcl 123 ref 562
header_field              0(18)        based           char(82)                 level 2 packed packed unaligned dcl 96 set ref 159*
header_line                            based           structure                level 1 packed packed unaligned dcl 96
i                               000152 automatic       fixed bin(17,0)          dcl 50 in procedure "cobol_make_xref_" set ref 166*
                                                                                  167*
i                               000275 automatic       fixed bin(17,0)          dcl 737 in procedure "sort_tokens" set ref 746* 747*
ind_ptr                         000202 automatic       pointer                  dcl 10-16 set ref 407* 409 409 412 415
index_name                             based           structure                level 1 unaligned dcl 10-19
input                    10(08)        based           bit(1)                   level 3 packed packed unaligned dcl 15-8 ref 511
item_length              16            based           fixed bin(24,0)          level 2 dcl 8-16 ref 343
item_signed              21(25)        based           bit(1)                   level 2 packed packed unaligned dcl 8-16 ref 352
iw_key                   11            based           fixed bin(17,0)          level 2 dcl 19-13 ref 533
j                               000276 automatic       fixed bin(17,0)          dcl 737 set ref 750* 752 757 759 760 762 764
k                               000277 automatic       fixed bin(17,0)          dcl 737 set ref 747* 748 750 756 758 759 764*
left                            000164 automatic       fixed bin(17,0)          dcl 58 set ref 351* 360 363 366 369 371* 373 379
length                                                 builtin function         dcl 131 ref 654
level                    12            based           fixed bin(17,0)          level 2 dcl 8-16 ref 200 240 240
level_no                  5            based           char(2)                  level 2 packed packed unaligned dcl 78 set ref 202*
                                                                                  421* 426* 507* 516*
line                                   based           char(120)                packed unaligned dcl 76 set ref 153* 165* 544* 657*
                                                                                  660*
line_ptr                        000104 automatic       pointer                  dcl 36 set ref 149* 153 157 158 159 161 162 164* 165
                                                                                  175 185 187 202 205 211 223 229 235 242 243 245
                                                                                  245 248 249 254 256 258 260 262 264 266 268 270
                                                                                  274 275 280 281 284 288 289 294 295 301 303 305
                                                                                  306 309 311 313 319 400 411 414 421 422 426 433
                                                                                  436 440 444 447 450 456 460 463 468 472 475 478
                                                                                  481 484 487 500 507 510 511 513 516 524 525 533
                                                                                  535 536 543* 544 573* 574 576 581 585 592 597* 598
                                                                                  602 607 657 659* 660 662 679 682 685 688 691 694
                                                                                  699 708 711
linkage                  13            based           fixed bin(17,0)          level 2 dcl 8-16 ref 238
linkage_section          21(03)        based           bit(1)                   level 2 packed packed unaligned dcl 8-16 ref 233
lno                       0(18)        based           fixed bin(17,0)          array level 2 packed packed unaligned dcl 5-4 ref
                                                                                  626
max                                    parameter       fixed bin(17,0)          dcl 652 ref 650 655 662
max_cra_size             41            based           fixed bin(24,0)          level 2 dcl 14-25 ref 496
maxlen_id                              based           char(23)                 packed unaligned dcl 77 set ref 662*
mcode                           000170 automatic       fixed bin(35,0)          dcl 62 set ref 562*
mnemonic_name                          based           structure                level 1 unaligned dcl 17-13
mod                                                    builtin function         dcl 132 ref 722
n                               000153 automatic       fixed bin(17,0)          dcl 50 set ref 578* 579 587 588 604* 604
name                     34            based           char                     level 2 in structure "data_name" packed packed
                                                                                  unaligned dcl 8-16 in procedure "cobol_make_xref_"
                                                                                  ref 193 195 195 195 198
name                     24            based           char                     level 2 in structure "index_name" packed packed
                                                                                  unaligned dcl 10-19 in procedure
                                                                                  "cobol_make_xref_" ref 409
name                     15            based           char                     level 2 in structure "proc_def" packed packed
                                                                                  unaligned dcl 6-14 in procedure "cobol_make_xref_"
                                                                                  ref 173
name                     15            based           char                     level 2 in structure "c_n" packed packed unaligned
                                                                                  dcl 107 in procedure "cobol_make_xref_" ref 418
name                     16            based           char                     level 2 in structure "mnemonic_name" packed packed
                                                                                  unaligned dcl 17-13 in procedure
                                                                                  "cobol_make_xref_" ref 522
name                     20            based           char                     level 2 in structure "cdtoken" packed packed
                                                                                  unaligned dcl 15-8 in procedure "cobol_make_xref_"
                                                                                  ref 508
name                     14            based           char                     level 2 in structure "fd_token" packed packed
                                                                                  unaligned dcl 12-16 in procedure
                                                                                  "cobol_make_xref_" ref 430
name                    221            based           char                     level 2 in structure "alphabet_name" packed packed
                                                                                  unaligned dcl 19-13 in procedure
                                                                                  "cobol_make_xref_" ref 531
name_length                     000163 automatic       fixed bin(17,0)          dcl 57 set ref 654* 655 658
name_ptr                        000110 automatic       pointer                  dcl 38 in procedure "cobol_make_xref_" set ref 428*
                                                                                  430 432 502 520* 522 526
name_ptr                  4            based           pointer                  array level 3 in structure "token_area" dcl 4-7
                                                                                  in procedure "cobol_make_xref_" set ref 748 752
                                                                                  756* 757*
name_size                33            based           fixed bin(17,0)          level 2 in structure "data_name" dcl 8-16
                                                                                  in procedure "cobol_make_xref_" ref 193 195 195
                                                                                  195 198
name_size                14            based           fixed bin(17,0)          level 2 in structure "proc_def" dcl 6-14
                                                                                  in procedure "cobol_make_xref_" ref 173
name_size                13            based           fixed bin(17,0)          level 2 in structure "fd_token" dcl 12-16
                                                                                  in procedure "cobol_make_xref_" ref 430
name_size                14            based           fixed bin(7,0)           level 2 in structure "c_n" dcl 107 in procedure
                                                                                  "cobol_make_xref_" ref 418
name_size               220            based           fixed bin(17,0)          level 2 in structure "alphabet_name" dcl 19-13
                                                                                  in procedure "cobol_make_xref_" ref 531
name_size                17            based           fixed bin(17,0)          level 2 in structure "cdtoken" dcl 15-8 in procedure
                                                                                  "cobol_make_xref_" ref 508
name_size                23            based           fixed bin(17,0)          level 2 in structure "index_name" dcl 10-19
                                                                                  in procedure "cobol_make_xref_" ref 409 409
name_size                15            based           fixed bin(17,0)          level 2 in structure "mnemonic_name" dcl 17-13
                                                                                  in procedure "cobol_make_xref_" ref 522
name_string                            based           varying char(30)         dcl 739 in procedure "sort_tokens" ref 754 754
name_string                     000141 automatic       varying char(30)         dcl 47 in procedure "cobol_make_xref_" set ref 173*
                                                                                  198* 409* 418* 430* 508* 522* 531* 654 657 662
new_line_char1            0(09)        based           char(1)                  level 2 packed packed unaligned dcl 96 set ref 158*
new_line_char2           25            based           char(1)                  level 2 packed packed unaligned dcl 96 set ref 161*
new_line_char3           25(09)        based           char(1)                  level 2 packed packed unaligned dcl 96 set ref 162*
next                      1(18)        based           fixed bin(17,0)          array level 3 packed packed unaligned dcl 4-13 ref
                                                                                  604
nl                              000115 automatic       char(1)                  packed unaligned dcl 40 set ref 145 153 153 158 161
                                                                                  162 592 607 657
non_elementary           21(08)        based           bit(1)                   level 2 packed packed unaligned dcl 8-16 ref 264 324
noxref                          000130 automatic       char(35)                 packed unaligned dcl 45 set ref 152* 153
number                          000166 automatic       fixed bin(35,0)          dcl 60 set ref 182* 200* 206* 214* 215 216* 216 224*
                                                                                  230* 236* 238* 343* 363* 369* 379* 384* 412* 434*
                                                                                  496* 616* 618* 619 626* 628* 669 670* 670 709 710
                                                                                  712* 712 721 722 724* 724
numeric                         000173 automatic       bit(1)                   packed unaligned dcl 71 in procedure
                                                                                  "cobol_make_xref_" set ref 323* 337* 349
numeric                  21(17)        based           bit(1)                   level 2 in structure "data_name" packed packed
                                                                                  unaligned dcl 8-16 in procedure "cobol_make_xref_"
                                                                                  ref 254 337 352
numeric_edited           21(18)        based           bit(1)                   level 2 packed packed unaligned dcl 8-16 ref 258 317
                                                                                  337
occ                      16(18)        based           char(2)                  level 2 packed packed unaligned dcl 78 set ref 301*
                                                                                  303* 305* 306* 309*
occurs                                 based           structure                level 1 unaligned dcl 21-26
occurs_do                22(06)        based           bit(1)                   level 2 packed packed unaligned dcl 8-16 ref 306
occurs_ptr               27            based           fixed bin(17,0)          level 2 in structure "data_name" dcl 8-16
                                                                                  in procedure "cobol_make_xref_" ref 298 300
occurs_ptr                      000210 automatic       pointer                  dcl 21-24 in procedure "cobol_make_xref_" set ref
                                                                                  300* 301 303
offset                   24            based           fixed bin(24,0)          level 2 in structure "data_name" dcl 8-16
                                                                                  in procedure "cobol_make_xref_" ref 206 214 224
                                                                                  230 236
offset                   14            based           fixed bin(24,0)          level 2 in structure "index_name" dcl 10-19
                                                                                  in procedure "cobol_make_xref_" ref 412
offset                    7(18)        based           char(6)                  level 2 in structure "print_line" packed packed
                                                                                  unaligned dcl 78 in procedure "cobol_make_xref_"
                                                                                  set ref 243* 245 245* 249* 708* 711*
options                  10(08)        based           structure                level 2 packed packed unaligned dcl 15-8
organization             43            based           fixed bin(17,0)          level 2 dcl 14-25 ref 439
p                               000300 automatic       pointer                  dcl 738 in procedure "sort_tokens" set ref 758* 760
p                               000100 automatic       pointer                  dcl 35 in procedure "cobol_make_xref_" set ref 167*
                                                                                  168 170 191 407 418 418 423 428 436 505 520 529
                                                                                  578 578 675
p1                              000302 automatic       pointer                  dcl 738 set ref 752* 754 756
p2                              000304 automatic       pointer                  dcl 738 set ref 748* 754 757
p_type                          000123 automatic       char(1)                  packed unaligned dcl 43 set ref 362* 368* 378* 383*
                                                                                  638
pic_has_l                21(15)        based           bit(1)                   level 2 packed packed unaligned dcl 8-16 ref 318
pic_is_do                21(16)        based           bit(1)                   level 2 packed packed unaligned dcl 8-16 ref 318
pic_string               17(18)        based           char(15)                 level 2 packed packed unaligned dcl 78 set ref 275*
                                                                                  281* 289* 295* 319* 400* 500*
picture_string                  000124 automatic       char(15)                 packed unaligned dcl 44 set ref 327* 333* 338* 345*
                                                                                  357* 375* 388* 391* 393* 394* 397* 399* 400 494*
                                                                                  498* 500 638* 640* 643* 645*
places_left              17            based           fixed bin(17,0)          level 2 dcl 8-16 ref 351
places_right             20            based           fixed bin(17,0)          level 2 dcl 8-16 ref 366 379 381 384
print_line                             based           structure                level 1 packed packed unaligned dcl 78
proc_def                               based           structure                level 1 unaligned dcl 6-14
proc_def_ptr                    000200 automatic       pointer                  dcl 6-11 set ref 170* 173 178 185 188
proc_num                 12            based           fixed bin(17,0)          level 2 dcl 6-14 ref 178
q                               000102 automatic       pointer                  dcl 35 set ref 146* 711 723
redef                    12            based           char(1)                  level 2 packed packed unaligned dcl 78 set ref 311*
                                                                                  313*
ref_line                  1            based           fixed bin(17,0)          array level 3 packed packed unaligned dcl 4-13 ref
                                                                                  588
s                               000167 automatic       fixed bin(35,0)          dcl 61 set ref 146 710* 722*
s_of_rdf                 21(11)        based           bit(1)                   level 2 packed packed unaligned dcl 8-16 ref 311
section_name             10(04)        based           bit(1)                   level 2 packed packed unaligned dcl 6-14 ref 185
sign_type                22(13)        based           bit(3)                   level 2 packed packed unaligned dcl 8-16 ref 254
size                                   based           fixed bin(15,0)          level 2 dcl 102 ref 578
substr                                                 builtin function         dcl 133 set ref 149 164 202 215 216 243 245 245 245*
                                                                                  245 249 306* 345* 345 357* 375* 391* 393* 397*
                                                                                  399* 409 456* 460* 463* 468* 472* 475* 478* 481*
                                                                                  484* 487* 498* 498 543 573 574* 576* 576 581* 585*
                                                                                  592* 594* 597 602* 602 607* 622* 622 624* 630* 630
                                                                                  638* 640* 643* 643 645* 659 662* 669 670 710 711*
                                                                                  711 712 723* 723
t                               000154 automatic       fixed bin(17,0)          dcl 50 set ref 709* 711* 721* 723 725*
tag_addr                  1            based           fixed bin(17,0)          array level 3 packed packed unaligned dcl 63 ref 178
                                                                                  180
tag_loc                         000165 automatic       fixed bin(17,0)          dcl 59 set ref 178* 179 180* 180 182
token                                  based           structure                level 1 unaligned dcl 102
token_area                             based           structure                level 1 unaligned dcl 4-7
token_count                            based           fixed bin(35,0)          level 2 dcl 4-7 ref 166 741 746
token_ptr                 2            based           pointer                  array level 3 dcl 4-7 set ref 167 758 759* 759 760*
type                      3            based           fixed bin(15,0)          level 2 in structure "token" dcl 102 in procedure
                                                                                  "cobol_make_xref_" ref 168 436
type                      3            based           fixed bin(17,0)          level 2 in structure "data_name" dcl 8-16
                                                                                  in procedure "cobol_make_xref_" ref 675
type                      6            based           char(4)                  level 2 in structure "print_line" packed packed
                                                                                  unaligned dcl 78 in procedure "cobol_make_xref_"
                                                                                  set ref 175* 205* 211* 223* 229* 235* 411* 433*
                                                                                  510* 524* 533* 535*
usage                    12(18)        based           char(15)                 level 2 packed packed unaligned dcl 78 set ref 185*
                                                                                  187* 254* 256* 258* 260* 262* 264* 266* 268* 270*
                                                                                  274* 280* 284* 288* 294* 414* 422* 436* 440* 444*
                                                                                  447* 450* 456* 460* 463* 468* 472* 475* 478* 481*
                                                                                  484* 487* 511* 513* 525* 536*
usage_index              21(34)        based           bit(1)                   level 2 packed packed unaligned dcl 8-16 ref 266
varying                         000175 automatic       bit(1)                   packed unaligned dcl 73 set ref 318* 319 394
working_storage          21(01)        based           bit(1)                   level 2 packed packed unaligned dcl 8-16 ref 203
xref_chain                             based           structure                level 1 packed packed unaligned dcl 4-21

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
allo1_max                              defined         fixed bin(17,0)          dcl 1-171
allo1_ptr                              defined         pointer                  dcl 1-67
alter_flag                             defined         fixed bin(17,0)          dcl 1-135
alter_index                            defined         fixed bin(17,0)          dcl 1-153
alter_list_ptr                         defined         pointer                  dcl 1-39
cd_cnt                                 defined         fixed bin(17,0)          dcl 1-197
cobol_$allo1_max                       external static fixed bin(17,0)          dcl 1-170
cobol_$allo1_ptr                       external static pointer                  dcl 1-66
cobol_$alter_flag                      external static fixed bin(17,0)          dcl 1-134
cobol_$alter_index                     external static fixed bin(17,0)          dcl 1-152
cobol_$alter_list_ptr                  external static pointer                  dcl 1-38
cobol_$cd_cnt                          external static fixed bin(17,0)          dcl 1-196
cobol_$cobol_data_wd_off               external static fixed bin(17,0)          dcl 1-118
cobol_$compile_count                   external static fixed bin(17,0)          dcl 1-142
cobol_$coms_charcnt                    external static fixed bin(17,0)          dcl 1-188
cobol_$coms_wdoff                      external static fixed bin(17,0)          dcl 1-202
cobol_$con_end_ptr                     external static pointer                  dcl 1-10
cobol_$con_wd_off                      external static fixed bin(17,0)          dcl 1-92
cobol_$cons_charcnt                    external static fixed bin(17,0)          dcl 1-192
cobol_$data_init_flag                  external static fixed bin(17,0)          dcl 1-130
cobol_$date_compiled_sw                external static fixed bin(17,0)          dcl 1-180
cobol_$debug_enable                    external static fixed bin(17,0)          dcl 1-174
cobol_$def_base_ptr                    external static pointer                  dcl 1-12
cobol_$def_max                         external static fixed bin(17,0)          dcl 1-96
cobol_$def_wd_off                      external static fixed bin(17,0)          dcl 1-94
cobol_$diag_ptr                        external static pointer                  dcl 1-70
cobol_$eln_max                         external static fixed bin(17,0)          dcl 1-172
cobol_$fixup_max                       external static fixed bin(17,0)          dcl 1-164
cobol_$fixup_ptr                       external static pointer                  dcl 1-30
cobol_$fs_charcnt                      external static fixed bin(17,0)          dcl 1-184
cobol_$fs_wdoff                        external static fixed bin(17,0)          dcl 1-198
cobol_$include_cnt                     external static fixed bin(17,0)          dcl 1-182
cobol_$include_info_ptr                external static pointer                  dcl 1-86
cobol_$init_stack_off                  external static fixed bin(17,0)          dcl 1-124
cobol_$initval_base_ptr                external static pointer                  dcl 1-32
cobol_$initval_file_ptr                external static pointer                  dcl 1-34
cobol_$initval_flag                    external static fixed bin(17,0)          dcl 1-178
cobol_$link_base_ptr                   external static pointer                  dcl 1-14
cobol_$link_max                        external static fixed bin(17,0)          dcl 1-100
cobol_$link_wd_off                     external static fixed bin(17,0)          dcl 1-98
cobol_$ls_charcnt                      external static fixed bin(17,0)          dcl 1-190
cobol_$main_pcs_ptr                    external static pointer                  dcl 1-84
cobol_$map_data_max                    external static fixed bin(17,0)          dcl 1-162
cobol_$map_data_ptr                    external static pointer                  dcl 1-54
cobol_$max_stack_off                   external static fixed bin(17,0)          dcl 1-122
cobol_$minpral5_ptr                    external static pointer                  dcl 1-50
cobol_$misc_base_ptr                   external static pointer                  dcl 1-60
cobol_$misc_end_ptr                    external static pointer                  dcl 1-62
cobol_$misc_max                        external static fixed bin(17,0)          dcl 1-158
cobol_$next_tag                        external static fixed bin(17,0)          dcl 1-128
cobol_$non_source_offset               external static fixed bin(17,0)          dcl 1-176
cobol_$ntbuf_ptr                       external static pointer                  dcl 1-82
cobol_$obj_seg_name                    external static char(32)                 dcl 1-208
cobol_$op_con_ptr                      external static pointer                  dcl 1-80
cobol_$para_eop_flag                   external static fixed bin(17,0)          dcl 1-138
cobol_$pd_map_index                    external static fixed bin(17,0)          dcl 1-116
cobol_$pd_map_max                      external static fixed bin(17,0)          dcl 1-160
cobol_$pd_map_ptr                      external static pointer                  dcl 1-28
cobol_$pd_map_sw                       external static fixed bin(17,0)          dcl 1-126
cobol_$perform_list_ptr                external static pointer                  dcl 1-36
cobol_$perform_para_index              external static fixed bin(17,0)          dcl 1-148
cobol_$perform_sect_index              external static fixed bin(17,0)          dcl 1-150
cobol_$priority_no                     external static fixed bin(17,0)          dcl 1-140
cobol_$ptr_assumption_ind              external static fixed bin(17,0)          dcl 1-144
cobol_$ptr_status_ptr                  external static pointer                  dcl 1-56
cobol_$reg_assumption_ind              external static fixed bin(17,0)          dcl 1-146
cobol_$reg_status_ptr                  external static pointer                  dcl 1-58
cobol_$reloc_def_base_ptr              external static pointer                  dcl 1-20
cobol_$reloc_def_max                   external static fixed bin(24,0)          dcl 1-108
cobol_$reloc_link_base_ptr             external static pointer                  dcl 1-22
cobol_$reloc_link_max                  external static fixed bin(24,0)          dcl 1-110
cobol_$reloc_sym_base_ptr              external static pointer                  dcl 1-24
cobol_$reloc_sym_max                   external static fixed bin(24,0)          dcl 1-112
cobol_$reloc_text_base_ptr             external static pointer                  dcl 1-18
cobol_$reloc_text_max                  external static fixed bin(24,0)          dcl 1-106
cobol_$reloc_work_base_ptr             external static pointer                  dcl 1-26
cobol_$reloc_work_max                  external static fixed bin(24,0)          dcl 1-114
cobol_$reswd_ptr                       external static pointer                  dcl 1-78
cobol_$same_sort_merge_proc            external static bit(1)                   dcl 1-214
cobol_$scratch_dir                     external static char(168)                dcl 1-206
cobol_$sect_eop_flag                   external static fixed bin(17,0)          dcl 1-136
cobol_$seg_init_flag                   external static fixed bin(17,0)          dcl 1-132
cobol_$seg_init_list_ptr               external static pointer                  dcl 1-40
cobol_$stack_off                       external static fixed bin(17,0)          dcl 1-120
cobol_$statement_info_ptr              external static pointer                  dcl 1-76
cobol_$sym_base_ptr                    external static pointer                  dcl 1-16
cobol_$sym_max                         external static fixed bin(17,0)          dcl 1-104
cobol_$sym_wd_off                      external static fixed bin(17,0)          dcl 1-102
cobol_$tag_table_max                   external static fixed bin(17,0)          dcl 1-166
cobol_$temp_token_area_ptr             external static pointer                  dcl 1-42
cobol_$temp_token_max                  external static fixed bin(17,0)          dcl 1-168
cobol_$temp_token_ptr                  external static pointer                  dcl 1-44
cobol_$text_base_ptr                   external static pointer                  dcl 1-8
cobol_$text_wd_off                     external static fixed bin(17,0)          dcl 1-90
cobol_$token_block1_ptr                external static pointer                  dcl 1-46
cobol_$token_block2_ptr                external static pointer                  dcl 1-48
cobol_$value_cnt                       external static fixed bin(17,0)          dcl 1-194
cobol_$ws_charcnt                      external static fixed bin(17,0)          dcl 1-186
cobol_$ws_wdoff                        external static fixed bin(17,0)          dcl 1-200
cobol_afp                              defined         pointer                  dcl 2-11
cobol_analin_fileno                    defined         pointer                  dcl 2-13
cobol_cmfp                             defined         pointer                  dcl 2-21
cobol_com_fileno                       defined         pointer                  dcl 2-23
cobol_curr_in                          defined         pointer                  dcl 2-53
cobol_curr_out                         defined         pointer                  dcl 2-55
cobol_data_wd_off                      defined         fixed bin(17,0)          dcl 1-119
cobol_dfp                              defined         pointer                  dcl 2-27
cobol_eltp                             defined         pointer                  dcl 2-19
cobol_ext_$cobol_afp                   external static pointer                  dcl 2-10
cobol_ext_$cobol_analin_fileno         external static pointer                  dcl 2-12
cobol_ext_$cobol_cmfp                  external static pointer                  dcl 2-20
cobol_ext_$cobol_com_fileno            external static pointer                  dcl 2-22
cobol_ext_$cobol_curr_in               external static pointer                  dcl 2-52
cobol_ext_$cobol_curr_out              external static pointer                  dcl 2-54
cobol_ext_$cobol_dfp                   external static pointer                  dcl 2-26
cobol_ext_$cobol_eltp                  external static pointer                  dcl 2-18
cobol_ext_$cobol_fileno1               external static fixed bin(24,0)          dcl 2-78
cobol_ext_$cobol_hfp                   external static pointer                  dcl 2-28
cobol_ext_$cobol_lpr                   external static char(5)                  packed unaligned dcl 2-95
cobol_ext_$cobol_m1fp                  external static pointer                  dcl 2-30
cobol_ext_$cobol_m2fp                  external static pointer                  dcl 2-32
cobol_ext_$cobol_min1_fileno           external static pointer                  dcl 2-34
cobol_ext_$cobol_min2_fileno_ptr       external static pointer                  dcl 2-36
cobol_ext_$cobol_name_fileno           external static pointer                  dcl 2-38
cobol_ext_$cobol_name_fileno_ptr       external static pointer                  dcl 2-40
cobol_ext_$cobol_ntfp                  external static pointer                  dcl 2-42
cobol_ext_$cobol_options               external static char(120)                packed unaligned dcl 2-97
cobol_ext_$cobol_options_len           external static fixed bin(24,0)          dcl 2-80
cobol_ext_$cobol_pdofp                 external static pointer                  dcl 2-44
cobol_ext_$cobol_pdout_fileno          external static fixed bin(24,0)          dcl 2-82
cobol_ext_$cobol_pfp                   external static pointer                  dcl 2-46
cobol_ext_$cobol_print_fileno          external static fixed bin(24,0)          dcl 2-84
cobol_ext_$cobol_rm2fp                 external static pointer                  dcl 2-48
cobol_ext_$cobol_rmin2_fileno          external static fixed bin(24,0)          dcl 2-86
cobol_ext_$cobol_rmin2fp               external static pointer                  dcl 2-50
cobol_ext_$cobol_rwdd                  external static pointer                  dcl 2-72
cobol_ext_$cobol_rwpd                  external static pointer                  dcl 2-74
cobol_ext_$cobol_sfp                   external static pointer                  dcl 2-56
cobol_ext_$cobol_w1p                   external static pointer                  dcl 2-58
cobol_ext_$cobol_w2p                   external static pointer                  dcl 2-60
cobol_ext_$cobol_w3p                   external static pointer                  dcl 2-62
cobol_ext_$cobol_w5p                   external static pointer                  dcl 2-64
cobol_ext_$cobol_w6p                   external static pointer                  dcl 2-66
cobol_ext_$cobol_w7p                   external static pointer                  dcl 2-68
cobol_ext_$cobol_x1_fileno             external static fixed bin(24,0)          dcl 2-88
cobol_ext_$cobol_x2_fileno             external static fixed bin(24,0)          dcl 2-90
cobol_ext_$cobol_x3_fileno             external static fixed bin(24,0)          dcl 2-92
cobol_ext_$cobol_x3fp                  external static pointer                  dcl 2-70
cobol_ext_$cobol_xlast8                external static bit(1)                   packed unaligned dcl 2-100
cobol_ext_$report_exists               external static bit(1)                   packed unaligned dcl 2-102
cobol_ext_$report_first_token          external static pointer                  dcl 2-14
cobol_ext_$report_last_token           external static pointer                  dcl 2-16
cobol_fileno1                          defined         fixed bin(24,0)          dcl 2-79
cobol_hfp                              defined         pointer                  dcl 2-29
cobol_lpr                              defined         char(5)                  packed unaligned dcl 2-96
cobol_m1fp                             defined         pointer                  dcl 2-31
cobol_m2fp                             defined         pointer                  dcl 2-33
cobol_min1_fileno                      defined         pointer                  dcl 2-35
cobol_min2_fileno_ptr                  defined         pointer                  dcl 2-37
cobol_name_fileno                      defined         pointer                  dcl 2-39
cobol_name_fileno_ptr                  defined         pointer                  dcl 2-41
cobol_ntfp                             defined         pointer                  dcl 2-43
cobol_options                          defined         char(120)                packed unaligned dcl 2-98
cobol_options_len                      defined         fixed bin(24,0)          dcl 2-81
cobol_pdofp                            defined         pointer                  dcl 2-45
cobol_pdout_fileno                     defined         fixed bin(24,0)          dcl 2-83
cobol_pfp                              defined         pointer                  dcl 2-47
cobol_print_fileno                     defined         fixed bin(24,0)          dcl 2-85
cobol_rm2fp                            defined         pointer                  dcl 2-49
cobol_rmin2_fileno                     defined         fixed bin(24,0)          dcl 2-87
cobol_rmin2fp                          defined         pointer                  dcl 2-51
cobol_rwdd                             defined         pointer                  dcl 2-73
cobol_rwpd                             defined         pointer                  dcl 2-75
cobol_sfp                              defined         pointer                  dcl 2-57
cobol_w1p                              defined         pointer                  dcl 2-59
cobol_w2p                              defined         pointer                  dcl 2-61
cobol_w3p                              defined         pointer                  dcl 2-63
cobol_w5p                              defined         pointer                  dcl 2-65
cobol_w6p                              defined         pointer                  dcl 2-67
cobol_w7p                              defined         pointer                  dcl 2-69
cobol_x1_fileno                        defined         fixed bin(24,0)          dcl 2-89
cobol_x2_fileno                        defined         fixed bin(24,0)          dcl 2-91
cobol_x3_fileno                        defined         fixed bin(24,0)          dcl 2-93
cobol_x3fp                             defined         pointer                  dcl 2-71
cobol_xlast8                           defined         bit(1)                   packed unaligned dcl 2-101
compile_count                          defined         fixed bin(17,0)          dcl 1-143
coms_charcnt                           defined         fixed bin(17,0)          dcl 1-189
coms_wdoff                             defined         fixed bin(17,0)          dcl 1-203
con_end_ptr                            defined         pointer                  dcl 1-11
con_wd_off                             defined         fixed bin(17,0)          dcl 1-93
cons_charcnt                           defined         fixed bin(17,0)          dcl 1-193
constant_offset                        defined         fixed bin(17,0)          dcl 1-157
data_init_flag                         defined         fixed bin(17,0)          dcl 1-131
date_compiled_sw                       defined         fixed bin(17,0)          dcl 1-181
debug_enable                           defined         fixed bin(17,0)          dcl 1-175
def_base_ptr                           defined         pointer                  dcl 1-13
def_max                                defined         fixed bin(17,0)          dcl 1-97
def_wd_off                             defined         fixed bin(17,0)          dcl 1-95
diag_ptr                               defined         pointer                  dcl 1-71
eln_max                                defined         fixed bin(17,0)          dcl 1-173
eln_ptr                                defined         pointer                  dcl 1-69
fixup_max                              defined         fixed bin(17,0)          dcl 1-165
fixup_ptr                              defined         pointer                  dcl 1-31
fs_charcnt                             defined         fixed bin(17,0)          dcl 1-185
fs_wdoff                               defined         fixed bin(17,0)          dcl 1-199
include_cnt                            defined         fixed bin(17,0)          dcl 1-183
include_info_ptr                       defined         pointer                  dcl 1-87
init_stack_off                         defined         fixed bin(17,0)          dcl 1-125
initval_base_ptr                       defined         pointer                  dcl 1-33
initval_file_ptr                       defined         pointer                  dcl 1-35
initval_flag                           defined         fixed bin(17,0)          dcl 1-179
ioa_                            000000 constant        entry                    external dcl 125
link_base_ptr                          defined         pointer                  dcl 1-15
link_max                               defined         fixed bin(17,0)          dcl 1-101
link_wd_off                            defined         fixed bin(17,0)          dcl 1-99
list_off                               defined         fixed bin(17,0)          dcl 1-155
list_ptr                               defined         pointer                  dcl 1-65
ls_charcnt                             defined         fixed bin(17,0)          dcl 1-191
main_pcs_ptr                           defined         pointer                  dcl 1-85
map_data_max                           defined         fixed bin(17,0)          dcl 1-163
map_data_ptr                           defined         pointer                  dcl 1-55
max_stack_off                          defined         fixed bin(17,0)          dcl 1-123
mcobol                                 automatic       bit(1)                   packed unaligned dcl 4-4
mcobol_xref                            automatic       bit(1)                   packed unaligned dcl 4-5
minpral5_ptr                           defined         pointer                  dcl 1-51
misc_base_ptr                          defined         pointer                  dcl 1-61
misc_end_ptr                           defined         pointer                  dcl 1-63
misc_max                               defined         fixed bin(17,0)          dcl 1-159
next_tag                               defined         fixed bin(17,0)          dcl 1-129
non_source_offset                      defined         fixed bin(17,0)          dcl 1-177
ntbuf_ptr                              defined         pointer                  dcl 1-83
obj_seg_name                           defined         char(32)                 dcl 1-209
op_con_ptr                             defined         pointer                  dcl 1-81
para_eop_flag                          defined         fixed bin(17,0)          dcl 1-139
pd_map_index                           defined         fixed bin(17,0)          dcl 1-117
pd_map_max                             defined         fixed bin(17,0)          dcl 1-161
pd_map_ptr                             defined         pointer                  dcl 1-29
pd_map_sw                              defined         fixed bin(17,0)          dcl 1-127
perform_list_ptr                       defined         pointer                  dcl 1-37
perform_para_index                     defined         fixed bin(17,0)          dcl 1-149
perform_sect_index                     defined         fixed bin(17,0)          dcl 1-151
priority_no                            defined         fixed bin(17,0)          dcl 1-141
ptr_assumption_ind                     defined         fixed bin(17,0)          dcl 1-145
ptr_status_ptr                         defined         pointer                  dcl 1-57
reg_assumption_ind                     defined         fixed bin(17,0)          dcl 1-147
reg_status_ptr                         defined         pointer                  dcl 1-59
reloc_def_base_ptr                     defined         pointer                  dcl 1-21
reloc_def_max                          defined         fixed bin(24,0)          dcl 1-109
reloc_link_base_ptr                    defined         pointer                  dcl 1-23
reloc_link_max                         defined         fixed bin(24,0)          dcl 1-111
reloc_sym_base_ptr                     defined         pointer                  dcl 1-25
reloc_sym_max                          defined         fixed bin(24,0)          dcl 1-113
reloc_text_base_ptr                    defined         pointer                  dcl 1-19
reloc_text_max                         defined         fixed bin(24,0)          dcl 1-107
reloc_work_base_ptr                    defined         pointer                  dcl 1-27
reloc_work_max                         defined         fixed bin(24,0)          dcl 1-115
report_exists                          defined         bit(1)                   packed unaligned dcl 2-103
report_first_token                     defined         pointer                  dcl 2-15
report_last_token                      defined         pointer                  dcl 2-17
reswd_ptr                              defined         pointer                  dcl 1-79
same_sort_merge_proc                   defined         bit(1)                   dcl 1-215
scratch_dir                            defined         char(168)                dcl 1-207
sect_eop_flag                          defined         fixed bin(17,0)          dcl 1-137
seg_init_flag                          defined         fixed bin(17,0)          dcl 1-133
seg_init_list_ptr                      defined         pointer                  dcl 1-41
stack_off                              defined         fixed bin(17,0)          dcl 1-121
statement_info                         based           structure                array level 1 packed packed unaligned dcl 5-10
statement_info_ptr                     defined         pointer                  dcl 1-77
sym_base_ptr                           defined         pointer                  dcl 1-17
sym_max                                defined         fixed bin(17,0)          dcl 1-105
sym_wd_off                             defined         fixed bin(17,0)          dcl 1-103
tag_table_max                          defined         fixed bin(17,0)          dcl 1-167
tag_table_ptr                          defined         pointer                  dcl 1-53
temp_token_area_ptr                    defined         pointer                  dcl 1-43
temp_token_max                         defined         fixed bin(17,0)          dcl 1-169
temp_token_ptr                         defined         pointer                  dcl 1-45
text_base_ptr                          defined         pointer                  dcl 1-9
text_wd_off                            defined         fixed bin(17,0)          dcl 1-91
token_block1_ptr                       defined         pointer                  dcl 1-47
token_block2_ptr                       defined         pointer                  dcl 1-49
value_cnt                              defined         fixed bin(17,0)          dcl 1-195
ws_charcnt                             defined         fixed bin(17,0)          dcl 1-187
ws_wdoff                               defined         fixed bin(17,0)          dcl 1-201
xref_bypass                            defined         bit(1)                   dcl 1-213
xref_chain_ptr                         defined         pointer                  dcl 1-75
xref_ptr                               automatic       pointer                  dcl 4-19
xref_token_ptr                         defined         pointer                  dcl 1-73

NAMES DECLARED BY EXPLICIT CONTEXT.
acc                             000057 constant        label                    array(0:3) dcl 456 ref 454
byte_off                        000076 constant        label                    array(0:3) dcl 679 ref 678
cobol_make_xref_                000432 constant        entry                    external dcl 30
convert10                       003214 constant        entry                    internal dcl 717 ref 201 239 344 497 621 629 642
convert_bit_offset              003073 constant        entry                    internal dcl 673 ref 218
convert_offset                  003062 constant        entry                    internal dcl 666 ref 207 225 231 237 413 435
convert_word_offset             003154 constant        entry                    internal dcl 705 ref 183 217 671
dev                             000063 constant        label                    array(0:10) dcl 468 set ref 466
down                            003261 constant        label                    dcl 743 ref 770
end_fd                          002230 constant        label                    dcl 487 ref 471 474 477 480 483 486
exit                            002505 constant        label                    dcl 563
file_line                       002666 constant        entry                    internal dcl 612 ref 575 589
fill_access                     002160 constant        label                    dcl 454 ref 443 446 449 453
fill_def_ref                    002506 constant        entry                    internal dcl 569 ref 541
fill_device                     002176 constant        label                    dcl 466 ref 459 462 465
fill_identifier                 003007 constant        entry                    internal dcl 650 ref 174 199 410 420 431 509 523 532
fill_pic_field                  002755 constant        entry                    internal dcl 635 ref 364 370 380 385
finish_up                       002465 constant        label                    dcl 560 ref 155
half_byte_off                   000102 constant        label                    array(0:3) dcl 682 ref 675
join_file                       002057 constant        label                    dcl 428 ref 518
next                            002447 constant        label                    dcl 541 ref 189 404 416 424 503 515 527 538
org                             000051 constant        label                    array(0:5) dcl 440 ref 439
sort_tokens                     003254 constant        entry                    internal dcl 731 ref 141
start                           000437 constant        label                    dcl 141
token_type                      000000 constant        label                    array(0:40) dcl 170 ref 168 193 195
up                              003315 constant        label                    dcl 750 ref 765

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      3560        3616    3413        3570
Length      4440    3413        36         605     144           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cobol_make_xref_                    221 external procedure  is an external procedure.  
fill_def_ref                            internal procedure  shares stack frame of external procedure cobol_make_xref_.  
file_line                               internal procedure  shares stack frame of external procedure cobol_make_xref_.  
fill_pic_field                          internal procedure  shares stack frame of external procedure cobol_make_xref_.  
fill_identifier                         internal procedure  shares stack frame of external procedure cobol_make_xref_.  
convert_offset                          internal procedure  shares stack frame of external procedure cobol_make_xref_.  
convert_word_offset                     internal procedure  shares stack frame of external procedure cobol_make_xref_.  
convert10                               internal procedure  shares stack frame of external procedure cobol_make_xref_.  
sort_tokens                             internal procedure  shares stack frame of external procedure cobol_make_xref_.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cobol_make_xref_         000100 p                           cobol_make_xref_
                         000102 q                           cobol_make_xref_
                         000104 line_ptr                    cobol_make_xref_
                         000106 dn_ptr                      cobol_make_xref_
                         000110 name_ptr                    cobol_make_xref_
                         000112 ft_ptr                      cobol_make_xref_
                         000114 ff                          cobol_make_xref_
                         000115 nl                          cobol_make_xref_
                         000116 char8                       cobol_make_xref_
                         000120 char9                       cobol_make_xref_
                         000123 p_type                      cobol_make_xref_
                         000124 picture_string              cobol_make_xref_
                         000130 noxref                      cobol_make_xref_
                         000141 name_string                 cobol_make_xref_
                         000152 i                           cobol_make_xref_
                         000153 n                           cobol_make_xref_
                         000154 t                           cobol_make_xref_
                         000155 char_off                    cobol_make_xref_
                         000156 char_offset                 cobol_make_xref_
                         000157 c_off                       cobol_make_xref_
                         000160 cv_length                   cobol_make_xref_
                         000161 fl_length                   cobol_make_xref_
                         000162 cv_off                      cobol_make_xref_
                         000163 name_length                 cobol_make_xref_
                         000164 left                        cobol_make_xref_
                         000165 tag_loc                     cobol_make_xref_
                         000166 number                      cobol_make_xref_
                         000167 s                           cobol_make_xref_
                         000170 mcode                       cobol_make_xref_
                         000171 code_generated              cobol_make_xref_
                         000172 alpha                       cobol_make_xref_
                         000173 numeric                     cobol_make_xref_
                         000174 edited                      cobol_make_xref_
                         000175 varying                     cobol_make_xref_
                         000176 fixed_binary                cobol_make_xref_
                         000177 eln_index                   cobol_make_xref_
                         000200 proc_def_ptr                cobol_make_xref_
                         000202 ind_ptr                     cobol_make_xref_
                         000204 cdtoken_ptr                 cobol_make_xref_
                         000206 alpha_name_ptr              cobol_make_xref_
                         000210 occurs_ptr                  cobol_make_xref_
                         000274 d                           sort_tokens
                         000275 i                           sort_tokens
                         000276 j                           sort_tokens
                         000277 k                           sort_tokens
                         000300 p                           sort_tokens
                         000302 p1                          sort_tokens
                         000304 p2                          sort_tokens

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
r_e_as              alloc_char_temp     cat_realloc_chars   call_ext_out        return_mac          mdfx1
shorten_stack       ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cobol_read_ft                 hcs_$set_bc_seg

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
cobol_$constant_offset        cobol_$eln_ptr                cobol_$list_off               cobol_$list_ptr
cobol_$tag_table_ptr          cobol_$xref_bypass            cobol_$xref_chain_ptr         cobol_$xref_token_ptr
cobol_ext_$cobol_com_ptr




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     30 000431       141 000437       144 000440       145 000442       146 000444       147 000446       148 000454
    149 000456       150 000464       152 000466       153 000471       154 000512       155 000515       157 000516
    158 000521       159 000524       161 000527       162 000532       163 000535       164 000537       165 000544
    166 000547       167 000557       168 000565       170 000567       173 000570       174 000601       175 000605
    176 000611       178 000613       179 000622       180 000624       181 000632       182 000633       183 000636
    185 000637       187 000650       188 000654       189 000656       191 000657       193 000660       195 000666
    197 000702       198 000703       199 000713       200 000717       201 000722       202 000723       203 000727
    205 000733       206 000736       207 000740       208 000741       209 000742       211 000745       212 000750
    214 000752       215 000754       216 000757       217 000771       218 000772       220 000773       221 000774
    223 000777       224 001002       225 001004       226 001005       227 001006       229 001011       230 001014
    231 001016       232 001017       233 001020       235 001023       236 001026       237 001030       238 001031
    239 001034       240 001035       242 001043       243 001047       244 001054       245 001055       247 001105
    248 001106       249 001111       250 001127       252 001130       254 001136       256 001155       258 001165
    260 001175       262 001205       263 001211       264 001212       266 001222       268 001232       270 001242
    272 001252       274 001255       275 001261       276 001264       277 001266       278 001267       280 001272
    281 001276       282 001301       283 001303       284 001304       286 001314       288 001317       289 001323
    290 001326       291 001330       292 001331       294 001334       295 001340       296 001343       298 001345
    300 001347       301 001353       303 001363       305 001372       306 001376       308 001404       309 001405
    311 001411       313 001420       315 001423       317 001425       318 001444       319 001455       322 001464
    323 001465       324 001466       326 001476       327 001500       328 001503       329 001505       330 001506
    332 001513       333 001515       334 001520       335 001522       337 001523       338 001530       339 001533
    341 001535       343 001537       344 001541       345 001542       347 001564       348 001571       349 001572
    351 001574       352 001576       357 001611       358 001615       360 001617       362 001621       363 001623
    364 001625       365 001626       366 001627       368 001632       369 001634       370 001636       371 001637
    373 001640       375 001642       376 001646       378 001647       379 001651       380 001654       381 001655
    383 001660       384 001662       385 001664       388 001665       391 001676       393 001711       394 001722
    397 001733       399 001746       400 001756       403 001762       404 001765       407 001766       409 001767
    410 002000       411 002004       412 002010       413 002013       414 002014       415 002020       416 002023
    418 002024       420 002034       421 002040       422 002044       423 002047       424 002052       426 002053
    428 002057       430 002061       431 002072       432 002076       433 002110       434 002114       435 002117
    436 002120       439 002131       440 002134       443 002140       444 002141       446 002145       447 002146
    449 002152       450 002153       453 002157       454 002160       456 002162       459 002165       460 002166
    462 002171       463 002172       465 002175       466 002176       468 002200       471 002203       472 002204
    474 002207       475 002210       477 002213       478 002214       480 002217       481 002220       483 002223
    484 002224       486 002227       487 002230       494 002236       495 002241       496 002243       497 002245
    498 002246       499 002270       500 002275       502 002301       503 002304       505 002305       507 002306
    508 002312       509 002323       510 002327       511 002333       513 002343       514 002346       515 002350
    516 002351       518 002355       520 002356       522 002357       523 002370       524 002374       525 002400
    526 002403       527 002406       529 002407       531 002410       532 002421       533 002425       535 002435
    536 002441       537 002444       538 002446       541 002447       543 002450       544 002460       546 002463
    560 002465       562 002470       563 002505       569 002506       572 002507       573 002511       574 002521
    575 002524       576 002525       577 002532       578 002535       579 002550       581 002551       582 002555
    583 002557       585 002560       586 002564       587 002566       588 002570       589 002575       590 002576
    592 002602       593 002607       594 002611       596 002620       597 002622       598 002627       599 002632
    600 002634       601 002635       602 002636       603 002644       604 002646       605 002655       607 002656
    608 002663       610 002665       612 002666       615 002667       616 002670       618 002705       619 002706
    621 002710       622 002711       623 002716       624 002721       626 002724       628 002741       629 002743
    630 002744       631 002752       633 002754       635 002755       638 002756       639 002762       640 002763
    641 002767       642 002770       643 002771       644 002777       645 003001       646 003005       648 003006
    650 003007       654 003011       655 003013       657 003015       658 003033       659 003040       660 003047
    661 003052       662 003053       664 003061       666 003062       669 003063       670 003066       671 003071
    673 003072       675 003074       678 003106       679 003110       681 003114       682 003115       684 003121
    685 003122       687 003126       688 003127       690 003133       691 003134       693 003140       694 003141
    696 003145       697 003146       699 003147       701 003153       705 003154       708 003155       709 003161
    710 003171       711 003177       712 003205       713 003210       715 003213       717 003214       720 003215
    721 003217       722 003227       723 003233       724 003240       725 003243       726 003245       727 003250
    729 003253       731 003254       741 003255       743 003261       746 003266       747 003304       748 003307
    750 003315       752 003320       754 003326       756 003337       757 003343       758 003345       759 003350
    760 003352       762 003354       764 003357       765 003360       768 003361       770 003363       773 003366


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
