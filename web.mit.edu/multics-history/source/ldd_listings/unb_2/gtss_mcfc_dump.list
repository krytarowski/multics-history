	COMPILATION LISTING OF SEGMENT gtss_mcfc_dump
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/10/84  1355.6 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   *                                                         *
        4*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        5*   *                                                         *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 gtss_mcfc_dump: mcfcd: proc;
       10 
       11 /* Dump the GCOS mcfc data base.
       12*
       13*   Author: Dave Ward	08/08/79
       14**/
       15 	nhe = "0"b;				/* => Do print header info. */
       16 
       17 	call cu_$arg_ptr (1, ap, al, c);
       18 	if c = 0 then do;
       19 	     if arg = "-nhe" | arg = "-no_header" then nhe = "1"b;
       20 	     else do;
       21 		call com_err_ (
       22 		     c
       23 		     , "gtss_mcfc_dump"
       24 		     , "Only -nhe (-no_header) allowed ""^a"""
       25 		     , arg
       26 		     );
       27 		return;
       28 	     end;
       29 	end;
       30 
       31 	call gtss_mcfc_init_ (rs);
       32 	if rs = "false" then return;
       33 
       34 	if ^nhe then do;
       35 	     call ioa_ ("DUMP OF MULTIPLE CALLER'S FILE CONTROL (wait ^i, lock_id ^w):"
       36 		, gtss_ext_$mcfc.wait_time
       37 		, gtss_ext_$mcfc.multics_lock_id
       38 		);
       39 
       40 /* Print pathnames of mcfc segments. */
       41 	     do i = 1 to hbound (mo, 1);
       42 		call hcs_$fs_get_path_name (
       43 		     mo (i)
       44 		     , dn
       45 		     , dnl
       46 		     , en
       47 		     , c
       48 		     );
       49 		if c ^= 0 then do;
       50 		     call com_err_ (
       51 			c
       52 			, "gtss_mcfc_dump"
       53 			, "Pointer ^i (^p)"
       54 			, i
       55 			, mo (i)
       56 			);
       57 		     return;
       58 		end;
       59 		call ioa_ ("^a>^a", substr (dn, 1, dnl), en);
       60 	     end;
       61 	end;
       62 
       63 
       64 /* Measure available chains. */
       65 	cul, cl, count = 0;
       66 	do i = lbound (mcfc.start_list, 1) to hbound (mcfc.start_list, 1);
       67 	     if mcfc.start_list (i).files.first ^= 0 then nfiu = "0"b; /* Atleast 1 chain. */
       68 	     if mcfc.start_list (i).avail.lock = "0"b then do;
       69 		cul = cul+1;
       70 		l = trace (mcfc.start_list (i).avail.first);
       71 		count (l) = count (l)+1;
       72 	     end;
       73 	     else
       74 	     cl = cl+1;
       75 	end;
       76 
       77 /* Print available statistics. */
       78 	call ioa_ ("Available: locked ^i unlocked ^i length distribution"
       79 	     , cl
       80 	     , cul
       81 	     );
       82 	do i = lbound (count, 1) to hbound (count, 1);
       83 	     if count (i) ^= 0 then
       84 		call ioa_$nnl (" ^i-^i", i, count (i));
       85 	end;
       86 	if nfiu then call ioa_$nnl (" NO FILES IN USE.");
       87 	call ioa_$nnl ("^/");
       88 
       89 /* Print file chains. */
       90 	do i = lbound (mcfc.start_list, 1) to hbound (mcfc.start_list, 1);
       91 	     if mcfc.start_list (i).files.first>0 then do;
       92 		call ioa_$nnl ("^/[Chain ^4i]", i);
       93 		if mcfc.start_list (i).files.lock = "0"b then call ioa_$nnl ("     locked");
       94 		else call ioa_$nnl (" not locked");
       95 		n = mcfc.start_list (i).files.first;
       96 		mn = 0;
       97 		do while ((n ^= 0)& (mn <= 100));
       98 		     call ioa_$nnl (" uid ^w lock ^w del ^1b ^i>100^/(^4i) ""^a""^/"
       99 			, file_entry (n).unique_id
      100 			, file_entry (n).file_lock
      101 			, file_entry (n).delete
      102 			, file_entry (n).number_who_could_not_call
      103 			, n
      104 			, fnn
      105 			);
      106 
      107 /* Print list of callers. */
      108 		     call get_caller_index (n, caller_ptr, e);
      109 		     do k = 1 to file_entry (n).number_callers;
      110 			call ioa_$nnl (" (^i ^w ^2o)"
      111 			     , k
      112 			     , caller (e).lock_id (k)
      113 			     , caller (e).gcos_access (k)
      114 			     );
      115 		     end;
      116 		     call ioa_$nnl ("^/");
      117 
      118 		     mn = mn+1;
      119 		     n = file_entry (n).link;
      120 		end;
      121 	     end;
      122 	end;
      123 	return;
      124 
      125 trace:	proc (i)returns (fixed bin);
      126 
      127 /* Trace length of chain starting at i. */
      128 dcl  i                        fixed bin(24) parm;
      129 	     n = i;
      130 	     k = 0;
      131 	     do while ((n ^= 0)& (k<hbound (count, 1)));
      132 		k = k+1;
      133 		n = file_entry (n).link;
      134 	     end;
      135 	     return (k);
      136 dcl  n                        fixed bin(24);
      137 dcl  k                        fixed bin(24);
      138 	end					/* trace */;
      139 
  1     1 /* BEGIN INCLUDE FILE gtss_mcfc_gci.incl.pl1 */
  1     2 /*
  1     3*  Created: (Wardd Multics)  11/09/79 1225.7 mst Fri 
  1     4**/
  1     5 get_caller_index: proc (f, cp, cx);
  1     6 
  1     7 /* Map file_entry index (f) to set pointer
  1     8*   (cp) to appropiate caller segment and
  1     9*   set index (cx) to corresponding caller
  1    10*   array index.
  1    11**/
  1    12 dcl  f                        fixed bin(24) parm;
  1    13 dcl  cp                       ptr parm;
  1    14 dcl  cx                       fixed bin(24) parm;
  1    15 	     j = divide (f-1, hbound (caller, 1)+1, 24);
  1    16 	     cp = gtss_ext_$mcfc.callers_ptr (j);
  1    17 	     cx = mod (f-1, hbound (caller, 1)+1);
  1    18 	     return;
  1    19 dcl  j                        fixed bin(24);
  1    20 	end					/* get_caller_index */;
  1    21 /*   END INCLUDE FILE gtss_mcfc_gci.incl.pl1 */
      140 
      141 
      142 /* Variables for gtss_mcfc_dump:
      143*   IDENTIFIER		ATTRIBUTES	*/
      144 dcl  al                       fixed bin(24);
      145 dcl  ap                       ptr;
      146 dcl  arg                      char(al)unal based(ap);
      147 dcl  c                        fixed bin(35);
      148 dcl  cl                       fixed bin(24);
      149 dcl  com_err_                 entry options(variable);
      150 dcl  count                    (0:8000)fixed bin(24);
      151 dcl  cul                      fixed bin(24);
      152 dcl  cu_$arg_ptr              entry(fixed bin(24),ptr,fixed bin(24),fixed bin(35));
      153 dcl  dn                       char(168);
      154 dcl  dnl                      fixed bin;
      155 dcl  e                        fixed bin(24);
      156 dcl  en                       char(32);
      157 dcl  fnn                      char(namel(n))unal based(pointer(nameo(n),names));
      158 dcl  gtss_mcfc_init_          entry(char(*)var);
      159 dcl  hcs_$fs_get_path_name    entry(ptr,char(*),fixed bin,char(*),fixed bin(35));
      160 dcl  i                        fixed bin(24);
      161 dcl  ioa_                     entry options(variable);
      162 dcl  ioa_$nnl                 entry options(variable);
      163 dcl  j                        fixed bin(24);
      164 dcl  k                        fixed bin(24);
      165 dcl  l                        fixed bin(24);
      166 dcl  mn                       fixed bin(24);
      167 dcl  mo                       (6)ptr based(addr(gtss_ext_$mcfc.files_ptr));
      168 dcl  n                        fixed bin(24);
      169 dcl  nfiu                     bit(1)init("1"b);
      170 dcl  nhe                      bit(1);
      171 dcl  rs                       char(5)var;
      172 
  2     1 /* BEGIN INCLUDE FILE gtss_mcfc.incl.pl1 */
  2     2 /*
  2     3*  Created: (Wardd Multics)  08/01/79 1454.6 mst Wed 
  2     4**/
  2     5 /* Changed: Dave Ward, Mel Wilson       11/14/79 providing concurrency lock for names area
  2     6**/
  2     7 
  2     8 /** Data structures used to regulate gcos
  2     9*   simulator "callers" of files (multiple caller file control - mcfc).
  2    10*
  2    11*   Given: gcos file (D => Multics directory, E => entry,
  2    12*   U => Multics unique file id)
  2    13*   h=mod(U,size(start_list))
  2    14*   start_list(h) => start of chain for list of files
  2    15*                    (file_entry's) and a lock word to
  2    16*                    regulate use of the chain, corresponding
  2    17*                    values for list of available entries.
  2    18**/
  2    19 
  2    20 dcl 1 mcfc                    aligned based(gtss_ext_$mcfc.files_ptr)
  2    21 ,     2 version               fixed bin
  2    22 
  2    23 ,     2 start_list            (0:1020)
  2    24 ,       3 files
  2    25 ,         4 lock              bit(36)
  2    26 ,         4 first             fixed bin(24)
  2    27 ,       3 avail               like mcfc.start_list.files
  2    28 
  2    29 ,     2 file_entry            (8000)
  2    30 ,       3 link                fixed bin(24)
  2    31 ,       3 nameo               offset(names)
  2    32 ,       3 namel               fixed bin
  2    33 ,       3 unique_id           bit(36)
  2    34 ,       3 file_lock           bit(36)
  2    35 ,       3 number_callers      fixed bin(24)
  2    36 ,       3 delete bit unal
  2    37 ,       3 fill bit (17) unal
  2    38 ,       3 number_who_could_not_call fixed bin (18) unsigned unal
  2    39 ;
  2    40 
  2    41 dcl caller_ptr                ptr;
  2    42 dcl 1 caller                  (0:1999)aligned based(caller_ptr)
  2    43 ,     2 lock_id               (0:99)bit(36)
  2    44 ,     2 gcos_access           (0:99)bit(6)unal
  2    45 ;
  2    46 
  2    47 dcl 1 mcfc_names aligned based (gtss_ext_$mcfc.names_ptr),
  2    48     2 names_lock bit (36),
  2    49     2 pad bit (36),
  2    50     2 names area (261118);
  2    51 
  2    52 /*   END INCLUDE FILE gtss_mcfc.incl.pl1 */
      173 
      174 
  3     1 /* BEGIN INCLUDE FILE gtss_ext_.incl.pl1 */
  3     2 /*
  3     3*  Created: (Wardd Multics)  05/20/78 1307.6 mst Sat 
  3     4*  Modified: Ward            1981     add suspended_process dcl
  3     5*  Modified: Ron Barstad  83-07-21  Fixed level number on mcfc to 3
  3     6*  Modified: Ron Barstad  83-07-25  Fixed derail range in statistics to 4js3 number
  3     7**/
  3     8 dcl  gtss_ext_$aem                   fixed bin static ext	/* >0 Print "additional" error information. */;
  3     9 dcl  gtss_ext_$bad_drl_rtrn          static ext label	/* Default for drl_rtrn. */;
  3    10 dcl  gtss_ext_$db                    (72)bit(1)unal static ext;
  3    11 dcl  gtss_ext_$deferred_catalogs_ptr ptr ext;
  3    12 dcl  gtss_ext_$dispose_of_drl        static ext label	/* quit handlers for some derails use this label to abort */;
  3    13 dcl  gtss_ext_$drl_rtrn              (4)static ext label	/* where to return at subsystem end */;
  3    14 dcl  gtss_ext_$drm_path              char(168)static ext	/* gtss_expand_pathname_stores drm_path */;
  3    15 dcl  gtss_ext_$drun_jid              char (5) static ext	/* valid only for DRUN executing under absentee */;
  3    16 dcl  gtss_ext_$event_channel         fixed bin (71) static ext	/* used for DABT signals */;
  3    17 dcl  gtss_ext_$finished              static ext label	/* Return to gtss for normal conclusion. */;
  3    18 dcl  gtss_ext_$gdb_name              char(8)ext	/* Name H* module to debug. */;
  3    19 dcl  gtss_ext_$get_line              entry(ptr,ptr,fixed bin(21),fixed bin(21),fixed bin(35))variable ext /* Build mode input procedure. */;
  3    20 dcl  gtss_ext_$gtss_slave_area_seg   (4) ext static ptr	/* pointer to gtss slave area segment */;
  3    21 dcl  gtss_ext_$hcs_work_area_ptr     ptr ext static		/* Temp seg for acl lists. */;
  3    22 dcl  gtss_ext_$homedir               char (64) static ext /* user's home dir */;
  3    23 dcl  gtss_ext_$last_k_was_out        bit (1)aligned ext static	/* "1"b => last tty output was output. */;
  3    24 dcl  gtss_ext_$pdir                  char (168) varying ext static	/* pathname of process directory */;
  3    25 dcl  gtss_ext_$popup_from_pi         static ext label	/* transfer to this label after pi simulates popup primitive */;
  3    26 dcl  gtss_ext_$process_type          fixed bin (17) static ext;
  3    27 dcl  gtss_ext_$put_chars             entry(ptr,ptr,fixed bin(24),fixed bin(35)) variable ext	/* Terminal output procedure. */;
  3    28 dcl  gtss_ext_$restart_from_pi       static ext label	/* transfer to this label after pi restores machine conditions */;
  3    29 dcl  gtss_ext_$restart_seg_ptr       ptr static ext	/* points to DRUN restart file when exec under absentee */;
  3    30 dcl  gtss_ext_$sig_ptr               ext static ptr	/* saved ptr to signal_ */;
  3    31 dcl  gtss_ext_$stack_level_          fixed bin ext static;
  3    32 dcl  gtss_ext_$suspended_process     bit(1) ext static;
  3    33 dcl  gtss_ext_$SYstarstar_file_no    fixed bin (24) static ext;
  3    34 dcl  gtss_ext_$user_id               char (26)var ext;
  3    35 dcl  gtss_ext_$work_area_ptr         ptr ext;
  3    36 
  3    37 dcl  1 gtss_ext_$CFP_bits aligned static external
  3    38      , 3 no_input_yet bit (1) unaligned         /* used in gtss_CFP_input_, gtss_read_starCFP_ */
  3    39      , 3 rtn_bits bit (4) unaligned             /* used in gtss_CFP_input_, gtss_CFP_output_ */
  3    40      , 3 cpos_called bit (1) unaligned          /* used in gtss_CFP_input_, gtss_drl_t_cfio_, gtss_abandon_CFP_ */
  3    41      , 3 cout_called bit (1) unaligned          /* used in gtss_read_starCFP_, gtss_abandon_CFP_ */
  3    42      , 3 build_mode bit (1) unaligned	        /* used in gtss_build_, gtss_dsd_process_ */
  3    43      ;
  3    44 
  3    45 dcl 1 gtss_ext_$com_reg aligned static ext,
  3    46        3 tsdmx,
  3    47          4 dst fixed bin (18) unsigned unaligned,
  3    48          4 dit fixed bin (18) unsigned unaligned,
  3    49        3 tsdpt fixed bin (36) unsigned unaligned,
  3    50        3 tsddt fixed bin (36) unsigned unaligned,
  3    51        3 tsdid bit (72) unaligned,
  3    52        3 tsdsd bit (36) unaligned,
  3    53        3 tsdst fixed bin (36) unsigned unaligned,
  3    54        3 tsdjb fixed bin (35) unaligned,
  3    55        3 tsdgt,
  3    56          4 ust_loc fixed bin (18) unsigned unaligned,
  3    57          4 gating_ctl fixed bin (18) unsigned unaligned,
  3    58        3 tcdfr bit (36) unaligned;
  3    59 
  3    60 dcl 1 gtss_ext_$flags aligned static ext
  3    61      , 3 dispose_of_drl_on_pi	bit (01) unal	/* 1 => drl that should be aborted after quit-pi sequence */
  3    62      , 3 drl_in_progress	bit (01) unal	/* 1 => drl handler executing; 0 => gcos code executing */
  3    63      , 3 popup_from_pi	bit (01) unal	/* 1 => derail processor will simulate Gcos break instead of returning */
  3    64      , 3 unfinished_drl	bit (01) unal	/* 1 => subsystem is handling breaks and quit was raised during a drl */
  3    65      , 3 ss_time_limit_set	bit (01) unal	/* 1 => exec time limit set for subsystem */
  3    66      , 3 timer_ranout	bit (01) unal	/* 1 => user is executing timer runout code */
  3    67      , 3 gtss_com_err_sw      bit (01) unal       /* 1 => stop com_err_ string from going to terminal */   
  3    68      , 3 available		bit (65) unal
  3    69      ;
  3    70 
  3    71 
  3    72 dcl 1 gtss_ext_$statistics aligned static ext,		/* Derail usage statistics */
  3    73       3 total_time (-10:71)fixed bin (71),
  3    74       3 count (-10:71)fixed bin (17);
  3    75 
  3    76 /* 	Declaration of Available File Table
  3    77*   */
  3    78 dcl 1 gtss_ext_$aft aligned ext,			/* aft structure */
  3    79 
  3    80       3 start_list (0:102) fixed bin (24),		/* >0 => 1st aft_entry row to start of next entry chain. */
  3    81 
  3    82       3 aft_entry (20),
  3    83         4 altname char (8),				/* altname name for attaching this file */
  3    84         4 next_entry fixed bin (24),			/* Next aft_entry in hash chain. */
  3    85         4 previous_add fixed bin (24),			/* Previously added entry. */
  3    86         4 next_add fixed bin (24),			/* Entry added after this one. */
  3    87         4 used bit (1) unal,				/* "1"b => aft_entry contains AFT value. */
  3    88         4 forced bit(1) unal,				/* "1"b => gtss_verify_access_ forced access on this file. */
  3    89 
  3    90       3 free_space fixed bin (24),			/* Index of start of free space list for aft entries. */
  3    91       3 first_added fixed bin (24),			/* >0  => start of chain in add order. */
  3    92       3 last_added fixed bin (24)			/* >0 => end of chain in added order. */;
  3    93 
  3    94 dcl  gtss_ext_$ppt                   ptr ext /*  switch name for tapein drl */;
  3    95 /**	Data structure to provide access to installed
  3    96*   subsystems fast library load.
  3    97*   **/
  3    98 dcl 1 gtss_ext_$fast_lib aligned ext
  3    99      , 3 fast_lib_fcb ptr				/* Pointer to msf fcb.	*/
  3   100      , 3 fast_lib_ncp fixed bin (24)			/* Number of components. */
  3   101      , 3 comp_ptr (0:9)ptr				/* Pointer to component. */
  3   102      , 3 comp_wds (0:9)fixed bin (24)			/* Component length (words). */
  3   103      ;
  3   104 
  3   105 /* Pointers to segments to regulate multipler
  3   106*   callers to files. Same segments are used to regulate
  3   107*   all simulator callers.
  3   108**/
  3   109 dcl 1 gtss_ext_$mcfc	aligned ext,
  3   110       3 multics_lock_id	bit(36),
  3   111       3 wait_time		fixed bin,
  3   112       3 files_ptr		ptr,
  3   113       3 names_ptr		ptr,
  3   114       3 callers_ptr		(0:3)ptr
  3   115 ;
  3   116 
  3   117 /*   END INCLUDE FILE gtss_ext_.incl.pl1 */
      175 
      176      end						/* gtss_mcfc_dump */;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/10/84  1044.3  gtss_mcfc_dump.pl1                >spec>on>7105>gtss_mcfc_dump.pl1
140          1    09/09/83  1714.0  gtss_mcfc_gci.incl.pl1            >ldd>include>gtss_mcfc_gci.incl.pl1
173          2    09/09/83  1714.0  gtss_mcfc.incl.pl1                >ldd>include>gtss_mcfc.incl.pl1
175          3    09/09/83  1713.8  gtss_ext_.incl.pl1                >ldd>include>gtss_ext_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
al                              000100 automatic       fixed bin(24,0)          dcl 144 set ref 17* 19 19 21 21
ap                              000102 automatic       pointer                  dcl 145 set ref 17* 19 19 21
arg                                    based           char                     unaligned dcl 146 set ref 19 19 21*
avail                     3            based           structure                array level 3 dcl 2-20
c                               000104 automatic       fixed bin(35,0)          dcl 147 set ref 17* 18 21* 42* 49 50*
caller                                 based           structure                array level 1 dcl 2-42 set ref 1-15 1-17
caller_ptr                      017706 automatic       pointer                  dcl 2-41 set ref 108* 110 110 1-15 1-17
callers_ptr               6     000024 external static pointer                  array level 2 dcl 3-109 ref 1-16
cl                              000105 automatic       fixed bin(24,0)          dcl 148 set ref 65* 73* 73 78*
com_err_                        000010 constant        entry                    external dcl 149 ref 21 50
count                           000106 automatic       fixed bin(24,0)          array dcl 150 set ref 65* 71* 71 82 82 83 83* 131
cp                                     parameter       pointer                  dcl 1-13 set ref 1-5 1-16*
cu_$arg_ptr                     000012 constant        entry                    external dcl 152 ref 17
cul                             017607 automatic       fixed bin(24,0)          dcl 151 set ref 65* 69* 69 78*
cx                                     parameter       fixed bin(24,0)          dcl 1-14 set ref 1-5 1-17*
delete                 7773            based           bit(1)                   array level 3 packed unaligned dcl 2-20 set ref 98*
dn                              017610 automatic       char(168)                unaligned dcl 153 set ref 42* 59 59
dnl                             017662 automatic       fixed bin(17,0)          dcl 154 set ref 42* 59 59
e                               017663 automatic       fixed bin(24,0)          dcl 155 set ref 108* 110 110
en                              017664 automatic       char(32)                 unaligned dcl 156 set ref 42* 59*
f                                      parameter       fixed bin(24,0)          dcl 1-12 ref 1-5 1-15 1-17
file_entry             7765            based           structure                array level 2 dcl 2-20
file_lock              7771            based           bit(36)                  array level 3 dcl 2-20 set ref 98*
files                     1            based           structure                array level 3 dcl 2-20
files_ptr                 2     000024 external static pointer                  level 2 dcl 3-109 set ref 41 42 50 66 66 67 68 70 90
                                                                                  90 91 93 95 98 98 98 98 98 98 98 109 119 133
first                     4            based           fixed bin(24,0)          array level 4 in structure "mcfc" dcl 2-20
                                                                                  in procedure "mcfcd" set ref 70*
first                     2            based           fixed bin(24,0)          array level 4 in structure "mcfc" dcl 2-20
                                                                                  in procedure "mcfcd" ref 67 91 95
fnn                                    based           char                     unaligned dcl 157 set ref 98*
gcos_access             144            based           bit(6)                   array level 2 packed unaligned dcl 2-42 set ref 110*
gtss_ext_$mcfc                  000024 external static structure                level 1 dcl 3-109
gtss_mcfc_init_                 000014 constant        entry                    external dcl 158 ref 31
hcs_$fs_get_path_name           000016 constant        entry                    external dcl 159 ref 42
i                                      parameter       fixed bin(24,0)          dcl 128 in procedure "trace" ref 125 129
i                               017674 automatic       fixed bin(24,0)          dcl 160 in procedure "mcfcd" set ref 41* 42 50* 50*
                                                                                  66* 67 68 70* 82* 83 83* 83* 90* 91 92* 93 95*
ioa_                            000020 constant        entry                    external dcl 161 ref 35 59 78
ioa_$nnl                        000022 constant        entry                    external dcl 162 ref 83 86 87 92 93 94 98 110 116
j                               017730 automatic       fixed bin(24,0)          dcl 1-19 set ref 1-15* 1-16
k                               017675 automatic       fixed bin(24,0)          dcl 164 in procedure "mcfcd" set ref 109* 110* 110
                                                                                  110*
k                               017721 automatic       fixed bin(24,0)          dcl 137 in procedure "trace" set ref 130* 131 132*
                                                                                  132 135
l                               017676 automatic       fixed bin(24,0)          dcl 165 set ref 70* 71 71
link                   7765            based           fixed bin(24,0)          array level 3 dcl 2-20 ref 119 133
lock                      1            based           bit(36)                  array level 4 in structure "mcfc" dcl 2-20
                                                                                  in procedure "mcfcd" ref 93
lock                      3            based           bit(36)                  array level 4 in structure "mcfc" dcl 2-20
                                                                                  in procedure "mcfcd" ref 68
lock_id                                based           bit(36)                  array level 2 dcl 2-42 set ref 110*
mcfc                                   based           structure                level 1 dcl 2-20
mcfc_names                             based           structure                level 1 dcl 2-47
mn                              017677 automatic       fixed bin(24,0)          dcl 166 set ref 96* 97 118* 118
mo                                     based           pointer                  array dcl 167 set ref 41 42* 50*
multics_lock_id                 000024 external static bit(36)                  level 2 dcl 3-109 set ref 35*
n                               017700 automatic       fixed bin(24,0)          dcl 168 in procedure "mcfcd" set ref 95* 97 98 98 98
                                                                                  98 98* 98 98 98 108* 109 119* 119
n                               017720 automatic       fixed bin(24,0)          dcl 136 in procedure "trace" set ref 129* 131 133*
                                                                                  133
namel                  7767            based           fixed bin(17,0)          array level 3 dcl 2-20 ref 98 98
nameo                  7766            based           offset                   array level 3 dcl 2-20 ref 98
names                     2            based           area(261118)             level 2 dcl 2-47 ref 98
names_ptr                 4     000024 external static pointer                  level 2 dcl 3-109 ref 98
nfiu                            017701 automatic       bit(1)                   initial unaligned dcl 169 set ref 67* 86 169*
nhe                             017702 automatic       bit(1)                   unaligned dcl 170 set ref 15* 19* 34
number_callers         7772            based           fixed bin(24,0)          array level 3 dcl 2-20 ref 109
number_who_could_not_call
                       7773(18)        based           fixed bin(18,0)          array level 3 packed unsigned unaligned dcl 2-20 set
                                                                                  ref 98*
rs                              017703 automatic       varying char(5)          dcl 171 set ref 31* 32
start_list                1            based           structure                array level 2 dcl 2-20 set ref 66 66 90 90
unique_id              7770            based           bit(36)                  array level 3 dcl 2-20 set ref 98*
wait_time                 1     000024 external static fixed bin(17,0)          level 2 dcl 3-109 set ref 35*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
gtss_ext_$CFP_bits                     external static structure                level 1 dcl 3-37
gtss_ext_$SYstarstar_file_no           external static fixed bin(24,0)          dcl 3-33
gtss_ext_$aem                          external static fixed bin(17,0)          dcl 3-8
gtss_ext_$aft                          external static structure                level 1 dcl 3-78
gtss_ext_$bad_drl_rtrn                 external static label variable           dcl 3-9
gtss_ext_$com_reg                      external static structure                level 1 dcl 3-45
gtss_ext_$db                           external static bit(1)                   array unaligned dcl 3-10
gtss_ext_$deferred_catalogs_ptr        external static pointer                  dcl 3-11
gtss_ext_$dispose_of_drl               external static label variable           dcl 3-12
gtss_ext_$drl_rtrn                     external static label variable           array dcl 3-13
gtss_ext_$drm_path                     external static char(168)                unaligned dcl 3-14
gtss_ext_$drun_jid                     external static char(5)                  unaligned dcl 3-15
gtss_ext_$event_channel                external static fixed bin(71,0)          dcl 3-16
gtss_ext_$fast_lib                     external static structure                level 1 dcl 3-98
gtss_ext_$finished                     external static label variable           dcl 3-17
gtss_ext_$flags                        external static structure                level 1 dcl 3-60
gtss_ext_$gdb_name                     external static char(8)                  unaligned dcl 3-18
gtss_ext_$get_line                     external static entry variable           dcl 3-19
gtss_ext_$gtss_slave_area_seg          external static pointer                  array dcl 3-20
gtss_ext_$hcs_work_area_ptr            external static pointer                  dcl 3-21
gtss_ext_$homedir                      external static char(64)                 unaligned dcl 3-22
gtss_ext_$last_k_was_out               external static bit(1)                   dcl 3-23
gtss_ext_$pdir                         external static varying char(168)        dcl 3-24
gtss_ext_$popup_from_pi                external static label variable           dcl 3-25
gtss_ext_$ppt                          external static pointer                  dcl 3-94
gtss_ext_$process_type                 external static fixed bin(17,0)          dcl 3-26
gtss_ext_$put_chars                    external static entry variable           dcl 3-27
gtss_ext_$restart_from_pi              external static label variable           dcl 3-28
gtss_ext_$restart_seg_ptr              external static pointer                  dcl 3-29
gtss_ext_$sig_ptr                      external static pointer                  dcl 3-30
gtss_ext_$stack_level_                 external static fixed bin(17,0)          dcl 3-31
gtss_ext_$statistics                   external static structure                level 1 dcl 3-72
gtss_ext_$suspended_process            external static bit(1)                   unaligned dcl 3-32
gtss_ext_$user_id                      external static varying char(26)         dcl 3-34
gtss_ext_$work_area_ptr                external static pointer                  dcl 3-35
j                                      automatic       fixed bin(24,0)          dcl 163

NAMES DECLARED BY EXPLICIT CONTEXT.
get_caller_index                001234 constant        entry                    internal dcl 1-5 ref 108
gtss_mcfc_dump                  000176 constant        entry                    external dcl 9
mcfcd                           000166 constant        entry                    external dcl 9
trace                           001205 constant        entry                    internal dcl 125 ref 70

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 41 42 50
divide                                                 builtin function         ref 1-15
hbound                                                 builtin function         ref 41 66 82 90 131 1-15 1-17
lbound                                                 builtin function         ref 66 82 90
mod                                                    builtin function         ref 1-17
pointer                                                builtin function         ref 98
substr                                                 builtin function         ref 59 59

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1400        1426    1270        1410
Length      1662    1270        26         220     110           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
mcfcd                              8266 external procedure  is an external procedure.  
trace                                   internal procedure  shares stack frame of external procedure mcfcd.  
get_caller_index                        internal procedure  shares stack frame of external procedure mcfcd.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
mcfcd                    000100 al                          mcfcd
                         000102 ap                          mcfcd
                         000104 c                           mcfcd
                         000105 cl                          mcfcd
                         000106 count                       mcfcd
                         017607 cul                         mcfcd
                         017610 dn                          mcfcd
                         017662 dnl                         mcfcd
                         017663 e                           mcfcd
                         017664 en                          mcfcd
                         017674 i                           mcfcd
                         017675 k                           mcfcd
                         017676 l                           mcfcd
                         017677 mn                          mcfcd
                         017700 n                           mcfcd
                         017701 nfiu                        mcfcd
                         017702 nhe                         mcfcd
                         017703 rs                          mcfcd
                         017706 caller_ptr                  mcfcd
                         017720 n                           trace
                         017721 k                           trace
                         017730 j                           get_caller_index

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_cs            call_ext_out_desc   call_ext_out        return              mod_fx1             shorten_stack
ext_entry           pointer_hard

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      cu_$arg_ptr                   gtss_mcfc_init_               hcs_$fs_get_path_name
ioa_                          ioa_$nnl

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
gtss_ext_$mcfc




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
    169 000161         9 000165        15 000204        17 000205        18 000224        19 000226        21 000243
     27 000302        31 000303        32 000314        34 000321        35 000323        41 000350        42 000355
     49 000410        50 000412        57 000454        59 000455        60 000507        65 000512        66 000524
     67 000531        68 000541        69 000544        70 000545        71 000557        72 000560        73 000561
     75 000562        78 000564        82 000607        83 000613        85 000640        86 000642        87 000663
     90 000676        91 000703        92 000711        93 000731        94 000756        95 000773        96 001001
     97 001002        98 001007       108 001071       109 001073       110 001107       115 001154       116 001156
    118 001171       119 001172       120 001201       122 001202       123 001204       125 001205       129 001207
    130 001211       131 001212       132 001217       133 001220       134 001227       135 001230    1    5 001234
 1   15 001236    1   16 001245    1   17 001252    1   18 001257


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
