	COMPILATION LISTING OF SEGMENT gtss_set_db_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/10/84  1358.2 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   *                                                         *
        4*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        5*   *                                                         *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 gtss_set_db_: proc;
       10 
       11 /** Regulate and display debugging switches.
       12*
       13*    Author: Dave Ward	08/15/79
       14*    Change: Dave Ward	12/04/80 added switch for kin.
       15**/
       16 
       17 	sub_entry = "0"b;
       18 dcl  sub_entry                bit(1);
       19 	goto cont;
       20 arg_ptr:	entry (db, pa);
       21 
       22 /* Subroutine entry. */
       23 dcl  db                       (72)bit(1)parm;
       24 dcl  pa                       ptr parm;
       25 	sub_entry = "1"b;
       26 
       27 cont:	;
       28 
       29 	do i = 1 by 1;
       30 	     if sub_entry then
       31 		call cu_$arg_ptr_rel (i, ap, al, code, pa);
       32 	     else
       33 	     call cu_$arg_ptr (i, ap, al, code);
       34 	     if code ^= 0 then do;			/* Arguments concluded. */
       35 		if i = 1 then
       36 		     call com_err_ (code, "gtss",
       37 		     "^/<arg> ... Where <arg> is -print | name | ^name");
       38 		string (gtss_ext_$db) = string (db_bits);
       39 		if sub_entry then string (db) = string (db_bits);
       40 		return;
       41 	     end;
       42 
       43 	     if cmd_arg = "-print" then do;		/* Display settings. */
       44 		do j = 1 to hbound (name, 1);
       45 		     call ioa_ (
       46 			"^3i. ^3a gtss_^a_"
       47 			, j
       48 			, off_on (fixed (db_bits (value (j)), 17))
       49 			, name (j)
       50 			);
       51 		end;
       52 	     end;
       53 	     else do;				/* Switch to set. */
       54 		if substr (cmd_arg, 1, 1) = "^" then do; /* OFF. */
       55 		     dbs = "0"b;
       56 		     fc = 2;
       57 		end;
       58 		else do;				/* ON. */
       59 		     dbs = "1"b;
       60 		     fc = 1;
       61 		end;
       62 
       63 		call set_db (dbs, substr (cmd_arg, fc));
       64 	     end;
       65 	end;
       66 
       67 set_db:	proc (b, n);
       68 
       69 /* Set db bit named by (n) to value (b). */
       70 dcl  b                        bit(1)parm;
       71 dcl  n                        char(*)parm;
       72 	     l = length (n);
       73 	     if substr (n, l, 1) = "_" then l = l-1;	/* Remove right underline. */
       74 	     f = 1;
       75 	     if l>length ("gtss_") then
       76 		if substr (n, 1, length ("gtss_")) = "gtss_" then
       77 		     f = length ("gtss_")+1;
       78 	     fst = 1;
       79 	     lst = hbound (name, 1);
       80 	     do while (fst <= lst);
       81 		mid = divide (fst+lst, 2, 17);
       82 		if substr (n, f, l-f+1) = name (mid) then do; /* Found. */
       83 		     db_bits (value (mid)) = b;
       84 		     return;
       85 		end;
       86 		if substr (n, f, l-f+1)<name (mid) then lst = mid-1;
       87 		else fst = mid+1;
       88 	     end;
       89 
       90 	     call com_err_ (0, "gtss",
       91 		"""^a"" unknown debug switch name (-print provides names).",
       92 		n);
       93 	     return;
       94 
       95 dcl  f                        fixed bin;
       96 dcl  fst                      fixed bin;
       97 dcl  l                        fixed bin;
       98 dcl  lst                      fixed bin;
       99 dcl  mid                      fixed bin;
      100 	end					/* set_db */;
      101 
      102 /* Variables for gtss_set_db_:
      103*   IDENTIFIER		ATTRIBUTES	*/
      104 dcl  al                       fixed bin (24);
      105 dcl  ap                       ptr;
      106 dcl  cmd_arg                  char (al)based (ap)unal;
      107 dcl  code                     fixed bin(35);
      108 dcl  com_err_                 entry options(variable);
      109 dcl  cu_$arg_ptr              entry (fixed bin (24), ptr, fixed bin (24), fixed bin (35));
      110 dcl  cu_$arg_ptr_rel          entry (fixed bin (24), ptr, fixed bin (24), fixed bin (35),ptr);
      111 dcl  dbs                      bit (1);
      112 dcl  db_bits                  (72)bit (1)static int init ((72) (1)"0"b);
      113 dcl  fc                       fixed bin (24);
      114 dcl  hbound                   builtin;
      115 dcl  i                        fixed bin(24);
      116 dcl  ioa_                     entry options(variable);
      117 dcl  j                        fixed bin(24);
      118 dcl  off_on                   (0:1)char (3)static int options (constant) init ("off", "on");
      119 
  1     1 /* BEGIN INCLUDE FILE gtss_ext_.incl.pl1 */
  1     2 /*
  1     3*  Created: (Wardd Multics)  05/20/78 1307.6 mst Sat 
  1     4*  Modified: Ward            1981     add suspended_process dcl
  1     5*  Modified: Ron Barstad  83-07-21  Fixed level number on mcfc to 3
  1     6*  Modified: Ron Barstad  83-07-25  Fixed derail range in statistics to 4js3 number
  1     7**/
  1     8 dcl  gtss_ext_$aem                   fixed bin static ext	/* >0 Print "additional" error information. */;
  1     9 dcl  gtss_ext_$bad_drl_rtrn          static ext label	/* Default for drl_rtrn. */;
  1    10 dcl  gtss_ext_$db                    (72)bit(1)unal static ext;
  1    11 dcl  gtss_ext_$deferred_catalogs_ptr ptr ext;
  1    12 dcl  gtss_ext_$dispose_of_drl        static ext label	/* quit handlers for some derails use this label to abort */;
  1    13 dcl  gtss_ext_$drl_rtrn              (4)static ext label	/* where to return at subsystem end */;
  1    14 dcl  gtss_ext_$drm_path              char(168)static ext	/* gtss_expand_pathname_stores drm_path */;
  1    15 dcl  gtss_ext_$drun_jid              char (5) static ext	/* valid only for DRUN executing under absentee */;
  1    16 dcl  gtss_ext_$event_channel         fixed bin (71) static ext	/* used for DABT signals */;
  1    17 dcl  gtss_ext_$finished              static ext label	/* Return to gtss for normal conclusion. */;
  1    18 dcl  gtss_ext_$gdb_name              char(8)ext	/* Name H* module to debug. */;
  1    19 dcl  gtss_ext_$get_line              entry(ptr,ptr,fixed bin(21),fixed bin(21),fixed bin(35))variable ext /* Build mode input procedure. */;
  1    20 dcl  gtss_ext_$gtss_slave_area_seg   (4) ext static ptr	/* pointer to gtss slave area segment */;
  1    21 dcl  gtss_ext_$hcs_work_area_ptr     ptr ext static		/* Temp seg for acl lists. */;
  1    22 dcl  gtss_ext_$homedir               char (64) static ext /* user's home dir */;
  1    23 dcl  gtss_ext_$last_k_was_out        bit (1)aligned ext static	/* "1"b => last tty output was output. */;
  1    24 dcl  gtss_ext_$pdir                  char (168) varying ext static	/* pathname of process directory */;
  1    25 dcl  gtss_ext_$popup_from_pi         static ext label	/* transfer to this label after pi simulates popup primitive */;
  1    26 dcl  gtss_ext_$process_type          fixed bin (17) static ext;
  1    27 dcl  gtss_ext_$put_chars             entry(ptr,ptr,fixed bin(24),fixed bin(35)) variable ext	/* Terminal output procedure. */;
  1    28 dcl  gtss_ext_$restart_from_pi       static ext label	/* transfer to this label after pi restores machine conditions */;
  1    29 dcl  gtss_ext_$restart_seg_ptr       ptr static ext	/* points to DRUN restart file when exec under absentee */;
  1    30 dcl  gtss_ext_$sig_ptr               ext static ptr	/* saved ptr to signal_ */;
  1    31 dcl  gtss_ext_$stack_level_          fixed bin ext static;
  1    32 dcl  gtss_ext_$suspended_process     bit(1) ext static;
  1    33 dcl  gtss_ext_$SYstarstar_file_no    fixed bin (24) static ext;
  1    34 dcl  gtss_ext_$user_id               char (26)var ext;
  1    35 dcl  gtss_ext_$work_area_ptr         ptr ext;
  1    36 
  1    37 dcl  1 gtss_ext_$CFP_bits aligned static external
  1    38      , 3 no_input_yet bit (1) unaligned         /* used in gtss_CFP_input_, gtss_read_starCFP_ */
  1    39      , 3 rtn_bits bit (4) unaligned             /* used in gtss_CFP_input_, gtss_CFP_output_ */
  1    40      , 3 cpos_called bit (1) unaligned          /* used in gtss_CFP_input_, gtss_drl_t_cfio_, gtss_abandon_CFP_ */
  1    41      , 3 cout_called bit (1) unaligned          /* used in gtss_read_starCFP_, gtss_abandon_CFP_ */
  1    42      , 3 build_mode bit (1) unaligned	        /* used in gtss_build_, gtss_dsd_process_ */
  1    43      ;
  1    44 
  1    45 dcl 1 gtss_ext_$com_reg aligned static ext,
  1    46        3 tsdmx,
  1    47          4 dst fixed bin (18) unsigned unaligned,
  1    48          4 dit fixed bin (18) unsigned unaligned,
  1    49        3 tsdpt fixed bin (36) unsigned unaligned,
  1    50        3 tsddt fixed bin (36) unsigned unaligned,
  1    51        3 tsdid bit (72) unaligned,
  1    52        3 tsdsd bit (36) unaligned,
  1    53        3 tsdst fixed bin (36) unsigned unaligned,
  1    54        3 tsdjb fixed bin (35) unaligned,
  1    55        3 tsdgt,
  1    56          4 ust_loc fixed bin (18) unsigned unaligned,
  1    57          4 gating_ctl fixed bin (18) unsigned unaligned,
  1    58        3 tcdfr bit (36) unaligned;
  1    59 
  1    60 dcl 1 gtss_ext_$flags aligned static ext
  1    61      , 3 dispose_of_drl_on_pi	bit (01) unal	/* 1 => drl that should be aborted after quit-pi sequence */
  1    62      , 3 drl_in_progress	bit (01) unal	/* 1 => drl handler executing; 0 => gcos code executing */
  1    63      , 3 popup_from_pi	bit (01) unal	/* 1 => derail processor will simulate Gcos break instead of returning */
  1    64      , 3 unfinished_drl	bit (01) unal	/* 1 => subsystem is handling breaks and quit was raised during a drl */
  1    65      , 3 ss_time_limit_set	bit (01) unal	/* 1 => exec time limit set for subsystem */
  1    66      , 3 timer_ranout	bit (01) unal	/* 1 => user is executing timer runout code */
  1    67      , 3 gtss_com_err_sw      bit (01) unal       /* 1 => stop com_err_ string from going to terminal */   
  1    68      , 3 available		bit (65) unal
  1    69      ;
  1    70 
  1    71 
  1    72 dcl 1 gtss_ext_$statistics aligned static ext,		/* Derail usage statistics */
  1    73       3 total_time (-10:71)fixed bin (71),
  1    74       3 count (-10:71)fixed bin (17);
  1    75 
  1    76 /* 	Declaration of Available File Table
  1    77*   */
  1    78 dcl 1 gtss_ext_$aft aligned ext,			/* aft structure */
  1    79 
  1    80       3 start_list (0:102) fixed bin (24),		/* >0 => 1st aft_entry row to start of next entry chain. */
  1    81 
  1    82       3 aft_entry (20),
  1    83         4 altname char (8),				/* altname name for attaching this file */
  1    84         4 next_entry fixed bin (24),			/* Next aft_entry in hash chain. */
  1    85         4 previous_add fixed bin (24),			/* Previously added entry. */
  1    86         4 next_add fixed bin (24),			/* Entry added after this one. */
  1    87         4 used bit (1) unal,				/* "1"b => aft_entry contains AFT value. */
  1    88         4 forced bit(1) unal,				/* "1"b => gtss_verify_access_ forced access on this file. */
  1    89 
  1    90       3 free_space fixed bin (24),			/* Index of start of free space list for aft entries. */
  1    91       3 first_added fixed bin (24),			/* >0  => start of chain in add order. */
  1    92       3 last_added fixed bin (24)			/* >0 => end of chain in added order. */;
  1    93 
  1    94 dcl  gtss_ext_$ppt                   ptr ext /*  switch name for tapein drl */;
  1    95 /**	Data structure to provide access to installed
  1    96*   subsystems fast library load.
  1    97*   **/
  1    98 dcl 1 gtss_ext_$fast_lib aligned ext
  1    99      , 3 fast_lib_fcb ptr				/* Pointer to msf fcb.	*/
  1   100      , 3 fast_lib_ncp fixed bin (24)			/* Number of components. */
  1   101      , 3 comp_ptr (0:9)ptr				/* Pointer to component. */
  1   102      , 3 comp_wds (0:9)fixed bin (24)			/* Component length (words). */
  1   103      ;
  1   104 
  1   105 /* Pointers to segments to regulate multipler
  1   106*   callers to files. Same segments are used to regulate
  1   107*   all simulator callers.
  1   108**/
  1   109 dcl 1 gtss_ext_$mcfc	aligned ext,
  1   110       3 multics_lock_id	bit(36),
  1   111       3 wait_time		fixed bin,
  1   112       3 files_ptr		ptr,
  1   113       3 names_ptr		ptr,
  1   114       3 callers_ptr		(0:3)ptr
  1   115 ;
  1   116 
  1   117 /*   END INCLUDE FILE gtss_ext_.incl.pl1 */
      120 
      121 
  2     1 /* BEGIN INCLUDE FILE gtss_db_names.incl.pl1 */
  2     2 /*
  2     3*  Created:  (Wardd Multics)  03/29/79 1909.1 mst Thu 
  2     4**/
  2     5 
  2     6 /* To provide a new debugging switch:
  2     7*
  2     8*   1) Locate the comment "Insert next entry above this comment".
  2     9*
  2    10*   2) Place a new declaration for a db_ variable just
  2    11*      above this comment, in the same manner as the
  2    12*      current declaration just above the comment, using
  2    13*      the next integer gtss_ext_$db index.
  2    14*
  2    15*   3) Execute the gtss|db_names ted macro (this updates
  2    16*      the sorted name table).
  2    17*
  2    18*   4) Example use:
  2    19*
  2    20*      if db_drl_grow then do;
  2    21*      .
  2    22*      .
  2    23*      .
  2    24*      debug i/o statements using com_err_ or ioa_
  2    25*      .
  2    26*      .
  2    27*      .
  2    28*      end;
  2    29*
  2    30**/
  2    31 
  2    32 dcl (
  2    33  db_		bit(1) defined(gtss_ext_$db(01))
  2    34 ,db_CFP_input	bit(1) defined(gtss_ext_$db(02))
  2    35 ,db_drl_addmem	bit(1) defined(gtss_ext_$db(03))
  2    36 ,db_drl_defil	bit(1) defined(gtss_ext_$db(04))
  2    37 ,db_drl_filact	bit(1) defined(gtss_ext_$db(05))
  2    38 ,db_drl_filsp	bit(1) defined(gtss_ext_$db(06))
  2    39 ,db_drl_grow	bit(1) defined(gtss_ext_$db(07))
  2    40 ,db_drl_rew	bit(1) defined(gtss_ext_$db(08))
  2    41 ,db_filact_funct02	bit(1) defined(gtss_ext_$db(09))
  2    42 ,db_filact_funct03	bit(1) defined(gtss_ext_$db(10))
  2    43 ,db_filact_funct04	bit(1) defined(gtss_ext_$db(11))
  2    44 ,db_filact_funct05	bit(1) defined(gtss_ext_$db(12))
  2    45 ,db_filact_funct10	bit(1) defined(gtss_ext_$db(13))
  2    46 ,db_filact_funct11	bit(1) defined(gtss_ext_$db(14))
  2    47 ,db_filact_funct14	bit(1) defined(gtss_ext_$db(15))
  2    48 ,db_filact_funct18	bit(1) defined(gtss_ext_$db(16))
  2    49 ,db_filact_funct19	bit(1) defined(gtss_ext_$db(17))
  2    50 ,db_filact_funct21	bit(1) defined(gtss_ext_$db(18))
  2    51 ,db_filact_funct22	bit(1) defined(gtss_ext_$db(19))
  2    52 ,db_interp_prim	bit(1) defined(gtss_ext_$db(20))
  2    53 ,db_ios		bit(1) defined(gtss_ext_$db(21))
  2    54 ,db_run_subsystem	bit(1) defined(gtss_ext_$db(22))
  2    55 ,db_drl_t_cfio	bit(1) defined(gtss_ext_$db(23))
  2    56 ,db_drl_switch	bit(1) defined(gtss_ext_$db(24))
  2    57 ,db_drl_dio	bit(1) defined(gtss_ext_$db(25))
  2    58 ,db_drl_retfil	bit(1) defined(gtss_ext_$db(26))
  2    59 ,db_drl_msub	bit(1) defined(gtss_ext_$db(27))
  2    60 ,db_drl_callss	bit(1) defined(gtss_ext_$db(28))
  2    61 ,db_drl_rstswh	bit(1) defined(gtss_ext_$db(29))
  2    62 ,db_drl_setswh	bit(1) defined(gtss_ext_$db(30))
  2    63 ,db_mcfc		bit(1) defined(gtss_ext_$db(31))
  2    64 ,db_dq		bit(1) defined(gtss_ext_$db(32))
  2    65 ,db_abs		bit(1) defined(gtss_ext_$db(33))
  2    66 ,db_attributes_mgr	bit(1) defined(gtss_ext_$db(34))
  2    67 ,db_expand_pathname bit(1) defined(gtss_ext_$db(35))
  2    68 ,db_drl_part	bit(1) defined(gtss_ext_$db(36))
  2    69 ,db_drl_morlnk	bit(1) defined(gtss_ext_$db(37))
  2    70 ,db_drl_kin	bit(1) defined(gtss_ext_$db(38))
  2    71 /* Insert next entry above this comment. */
  2    72 );
  2    73 
  2    74 /* Table of sorted names. */
  2    75 dcl 1 debug_bit_names (38) static int options(constant)
  2    76 ,     2 name char(18)var init(
  2    77          "" ,"CFP_input" ,"abs" ,"attributes_mgr" ,"dq" ,"drl_addmem"
  2    78          ,"drl_callss" ,"drl_defil" ,"drl_dio" ,"drl_filact" ,"drl_filsp"
  2    79          ,"drl_grow" ,"drl_kin" ,"drl_morlnk" ,"drl_msub" ,"drl_part"
  2    80          ,"drl_retfil" ,"drl_rew" ,"drl_rstswh" ,"drl_setswh" ,"drl_switch"
  2    81          ,"drl_t_cfio" ,"expand_pathname" ,"filact_funct02" ,"filact_funct03"
  2    82          ,"filact_funct04" ,"filact_funct05" ,"filact_funct10" ,"filact_funct11"
  2    83          ,"filact_funct14" ,"filact_funct18" ,"filact_funct19" ,"filact_funct21"
  2    84          ,"filact_funct22" ,"interp_prim" ,"ios" ,"mcfc" ,"run_subsystem"
  2    85 			)
  2    86 ,     2 value fixed bin init(
  2    87          01 ,02 ,33 ,34 ,32 ,03 ,28 ,04 ,25 ,05 ,06 ,07 ,38 ,37 ,27 ,36 ,26 ,08
  2    88          ,29 ,30 ,24 ,23 ,35 ,09 ,10 ,11 ,12 ,13 ,14 ,15 ,16 ,17 ,18 ,19 ,20 ,21
  2    89          ,31 ,22
  2    90 			);
  2    91 /* End of table. */
  2    92 /*   END INCLUDE FILE gtss_db_names.incl.pl1 */
      122 
      123      end						/* gtss_set_db_ */;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/10/84  1044.5  gtss_set_db_.pl1                  >spec>on>7105>gtss_set_db_.pl1
120          1    09/09/83  1713.8  gtss_ext_.incl.pl1                >ldd>include>gtss_ext_.incl.pl1
122          2    09/09/83  1713.6  gtss_db_names.incl.pl1            >ldd>include>gtss_db_names.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
al                              000101 automatic       fixed bin(24,0)          dcl 104 set ref 30* 32* 43 54 63 63
ap                              000102 automatic       pointer                  dcl 105 set ref 30* 32* 43 54 63 63
b                                      parameter       bit(1)                   unaligned dcl 70 ref 67 83
cmd_arg                                based           char                     unaligned dcl 106 ref 43 54 63 63
code                            000104 automatic       fixed bin(35,0)          dcl 107 set ref 30* 32* 34 35*
com_err_                        000012 constant        entry                    external dcl 108 ref 35 90
cu_$arg_ptr                     000014 constant        entry                    external dcl 109 ref 32
cu_$arg_ptr_rel                 000016 constant        entry                    external dcl 110 ref 30
db                                     parameter       bit(1)                   array unaligned dcl 23 set ref 20 39*
db_bits                         000010 internal static bit(1)                   initial array unaligned dcl 112 set ref 38 39 45 83*
dbs                             000105 automatic       bit(1)                   unaligned dcl 111 set ref 55* 59* 63*
debug_bit_names                 000000 constant        structure                array level 1 unaligned dcl 2-75
f                               000100 automatic       fixed bin(17,0)          dcl 95 set ref 74* 75* 82 82 86 86
fc                              000106 automatic       fixed bin(24,0)          dcl 113 set ref 56* 60* 63 63
fst                             000101 automatic       fixed bin(17,0)          dcl 96 set ref 78* 80 81 87*
gtss_ext_$db                    000022 external static bit(1)                   array unaligned dcl 1-10 set ref 38*
hbound                                                 builtin function         dcl 114 ref 44 79
i                               000107 automatic       fixed bin(24,0)          dcl 115 set ref 29* 30* 32* 35*
ioa_                            000020 constant        entry                    external dcl 116 ref 45
j                               000110 automatic       fixed bin(24,0)          dcl 117 set ref 44* 45* 45 45*
l                               000102 automatic       fixed bin(17,0)          dcl 97 set ref 72* 73 73* 73 75 82 86
lst                             000103 automatic       fixed bin(17,0)          dcl 98 set ref 79* 80 81 86*
mid                             000104 automatic       fixed bin(17,0)          dcl 99 set ref 81* 82 83 86 86 87
n                                      parameter       char                     unaligned dcl 71 set ref 67 72 73 75 82 86 90*
name                            000000 constant        varying char(18)         initial array level 2 dcl 2-75 set ref 44 45* 79 82
                                                                                  86
off_on                          000412 constant        char(3)                  initial array unaligned dcl 118 set ref 45*
pa                                     parameter       pointer                  dcl 24 set ref 20 30*
sub_entry                       000100 automatic       bit(1)                   unaligned dcl 18 set ref 17* 25* 30 39
value                     6     000000 constant        fixed bin(17,0)          initial array level 2 dcl 2-75 ref 45 83

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
db_                                    defined         bit(1)                   unaligned dcl 2-32
db_CFP_input                           defined         bit(1)                   unaligned dcl 2-32
db_abs                                 defined         bit(1)                   unaligned dcl 2-32
db_attributes_mgr                      defined         bit(1)                   unaligned dcl 2-32
db_dq                                  defined         bit(1)                   unaligned dcl 2-32
db_drl_addmem                          defined         bit(1)                   unaligned dcl 2-32
db_drl_callss                          defined         bit(1)                   unaligned dcl 2-32
db_drl_defil                           defined         bit(1)                   unaligned dcl 2-32
db_drl_dio                             defined         bit(1)                   unaligned dcl 2-32
db_drl_filact                          defined         bit(1)                   unaligned dcl 2-32
db_drl_filsp                           defined         bit(1)                   unaligned dcl 2-32
db_drl_grow                            defined         bit(1)                   unaligned dcl 2-32
db_drl_kin                             defined         bit(1)                   unaligned dcl 2-32
db_drl_morlnk                          defined         bit(1)                   unaligned dcl 2-32
db_drl_msub                            defined         bit(1)                   unaligned dcl 2-32
db_drl_part                            defined         bit(1)                   unaligned dcl 2-32
db_drl_retfil                          defined         bit(1)                   unaligned dcl 2-32
db_drl_rew                             defined         bit(1)                   unaligned dcl 2-32
db_drl_rstswh                          defined         bit(1)                   unaligned dcl 2-32
db_drl_setswh                          defined         bit(1)                   unaligned dcl 2-32
db_drl_switch                          defined         bit(1)                   unaligned dcl 2-32
db_drl_t_cfio                          defined         bit(1)                   unaligned dcl 2-32
db_expand_pathname                     defined         bit(1)                   unaligned dcl 2-32
db_filact_funct02                      defined         bit(1)                   unaligned dcl 2-32
db_filact_funct03                      defined         bit(1)                   unaligned dcl 2-32
db_filact_funct04                      defined         bit(1)                   unaligned dcl 2-32
db_filact_funct05                      defined         bit(1)                   unaligned dcl 2-32
db_filact_funct10                      defined         bit(1)                   unaligned dcl 2-32
db_filact_funct11                      defined         bit(1)                   unaligned dcl 2-32
db_filact_funct14                      defined         bit(1)                   unaligned dcl 2-32
db_filact_funct18                      defined         bit(1)                   unaligned dcl 2-32
db_filact_funct19                      defined         bit(1)                   unaligned dcl 2-32
db_filact_funct21                      defined         bit(1)                   unaligned dcl 2-32
db_filact_funct22                      defined         bit(1)                   unaligned dcl 2-32
db_interp_prim                         defined         bit(1)                   unaligned dcl 2-32
db_ios                                 defined         bit(1)                   unaligned dcl 2-32
db_mcfc                                defined         bit(1)                   unaligned dcl 2-32
db_run_subsystem                       defined         bit(1)                   unaligned dcl 2-32
gtss_ext_$CFP_bits                     external static structure                level 1 dcl 1-37
gtss_ext_$SYstarstar_file_no           external static fixed bin(24,0)          dcl 1-33
gtss_ext_$aem                          external static fixed bin(17,0)          dcl 1-8
gtss_ext_$aft                          external static structure                level 1 dcl 1-78
gtss_ext_$bad_drl_rtrn                 external static label variable           dcl 1-9
gtss_ext_$com_reg                      external static structure                level 1 dcl 1-45
gtss_ext_$deferred_catalogs_ptr        external static pointer                  dcl 1-11
gtss_ext_$dispose_of_drl               external static label variable           dcl 1-12
gtss_ext_$drl_rtrn                     external static label variable           array dcl 1-13
gtss_ext_$drm_path                     external static char(168)                unaligned dcl 1-14
gtss_ext_$drun_jid                     external static char(5)                  unaligned dcl 1-15
gtss_ext_$event_channel                external static fixed bin(71,0)          dcl 1-16
gtss_ext_$fast_lib                     external static structure                level 1 dcl 1-98
gtss_ext_$finished                     external static label variable           dcl 1-17
gtss_ext_$flags                        external static structure                level 1 dcl 1-60
gtss_ext_$gdb_name                     external static char(8)                  unaligned dcl 1-18
gtss_ext_$get_line                     external static entry variable           dcl 1-19
gtss_ext_$gtss_slave_area_seg          external static pointer                  array dcl 1-20
gtss_ext_$hcs_work_area_ptr            external static pointer                  dcl 1-21
gtss_ext_$homedir                      external static char(64)                 unaligned dcl 1-22
gtss_ext_$last_k_was_out               external static bit(1)                   dcl 1-23
gtss_ext_$mcfc                         external static structure                level 1 dcl 1-109
gtss_ext_$pdir                         external static varying char(168)        dcl 1-24
gtss_ext_$popup_from_pi                external static label variable           dcl 1-25
gtss_ext_$ppt                          external static pointer                  dcl 1-94
gtss_ext_$process_type                 external static fixed bin(17,0)          dcl 1-26
gtss_ext_$put_chars                    external static entry variable           dcl 1-27
gtss_ext_$restart_from_pi              external static label variable           dcl 1-28
gtss_ext_$restart_seg_ptr              external static pointer                  dcl 1-29
gtss_ext_$sig_ptr                      external static pointer                  dcl 1-30
gtss_ext_$stack_level_                 external static fixed bin(17,0)          dcl 1-31
gtss_ext_$statistics                   external static structure                level 1 dcl 1-72
gtss_ext_$suspended_process            external static bit(1)                   unaligned dcl 1-32
gtss_ext_$user_id                      external static varying char(26)         dcl 1-34
gtss_ext_$work_area_ptr                external static pointer                  dcl 1-35

NAMES DECLARED BY EXPLICIT CONTEXT.
arg_ptr                         000515 constant        entry                    external dcl 20
cont                            000524 constant        label                    dcl 27 ref 19
gtss_set_db_                    000502 constant        entry                    external dcl 9
set_db                          000775 constant        entry                    internal dcl 67 ref 63

NAMES DECLARED BY CONTEXT OR IMPLICATION.
divide                                                 builtin function         ref 81
fixed                                                  builtin function         ref 45
length                                                 builtin function         ref 72 75 75 75
string                                                 builtin function         set ref 38 38 39* 39
substr                                                 builtin function         ref 54 63 63 73 75 82 86

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1242        1266    1147        1252
Length      1474    1147        24         172      73           2

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gtss_set_db_                        122 external procedure  is an external procedure.  
set_db                              104 internal procedure  is called during a stack extension.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 db_bits                     gtss_set_db_

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gtss_set_db_             000100 sub_entry                   gtss_set_db_
                         000101 al                          gtss_set_db_
                         000102 ap                          gtss_set_db_
                         000104 code                        gtss_set_db_
                         000105 dbs                         gtss_set_db_
                         000106 fc                          gtss_set_db_
                         000107 i                           gtss_set_db_
                         000110 j                           gtss_set_db_
set_db                   000100 f                           set_db
                         000101 fst                         set_db
                         000102 l                           set_db
                         000103 lst                         set_db
                         000104 mid                         set_db

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_cs            call_ext_out_desc   call_ext_out        call_int_this_desc  return              shorten_stack
ext_entry           int_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      cu_$arg_ptr                   cu_$arg_ptr_rel               ioa_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
gtss_ext_$db




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      9 000501        17 000507        19 000510        20 000511        25 000522        27 000524        29 000525
     30 000530        32 000553        34 000570        35 000572        38 000623        39 000630        40 000637
     43 000640        44 000646        45 000653        51 000721        52 000723        54 000724        55 000730
     56 000731        57 000733        59 000734        60 000736        63 000740        64 000770        65 000771
    123 000773        67 000774        72 001010        73 001011        74 001021        75 001023        78 001034
     79 001036        80 001040        81 001043        82 001046        83 001067        84 001075        86 001076
     87 001103        88 001106        90 001107        93 001144


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
