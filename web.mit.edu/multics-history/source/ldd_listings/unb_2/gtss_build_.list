	COMPILATION LISTING OF SEGMENT gtss_build_
	Compiled by: Multics PL/I Compiler, Release 33e, of October 6, 1992
	Compiled at: CGI                             
	Compiled on: 2000-04-18_1120.62_Tue_mdt
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   *                                                         *
        4*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        5*   *                                                         *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 /* *************************************************************
       10*   *						   *
       11*   * Copyright (c) 1979 by Honeywell Information Systems, Inc. *
       12*   *						   *
       13*   ************************************************************* */
       14 
       15 gtss_build_: proc;
       16 
       17 /**	gtss "build" mode.
       18*
       19*   Authors: Robert J. Grimes	Created
       20*   -	  Albert N. Kepner	  1978
       21*   -	  Robert M. May
       22*   -	  David B. Ward
       23*   Changed: Dave Ward		02/21/79 New get_line.
       24*   Changed: Dave Ward		03/27/79 Convert put_chars.
       25*   Changed: Al Kepner		03/30/79 fix problem with
       26*   				an cc driving gtss which exits with &quit.
       27*   Changed: Bob Alvarado		05/15/79 added return back to primitive
       28*   				interp. for processing of #(commands).
       29*   Changed: Al Dupuis		06/21/79 add call to gtss_CFP_break_
       30*   Changed: Al Dupuis		06/14/79 to set external indicator to
       31*   			          show if in build mode.
       32*   Changed: Dave Ward		06/27/79 Corrected quit handling.
       33*   Changed: Dave Ward		06/30/79 Retransmit message.
       34*   Changed: Bob Alvarado		08/23/79 commented out ref to lswth.b10.
       35*				08/31/79 added #auto and #autox code.
       36*				09/04/79 reworked #auto code to accept
       37*				line count and line incr.
       38*   Changed: Bob Alvarado		11/26/79 removed all code simulating
       39*				#auto and added a call to drl_callss.
       40*				The auto subsystem is now processing 
       41*				#auto.
       42*   Changed: Scott C. Akers		08/17/81 Reset tty_modes on QUIT.
       43* **/
       44 
       45 /**	gtss_build_ accumulates all input terminal line
       46*   (up to the capacity of the SY** accumulator structure)
       47*   and only writes the data to the SY** under two
       48*   circumstances:
       49*
       50*   1. Returning to the primitive interpreter
       51*   (i.e., a non-line number input).
       52*
       53*   2. SY** accumulator full (2 llinks, i.e., 640 words).
       54*   **/
       55 	in_pound_sign_build = "0"b;
       56 	i = gtss_ust.lxxx.b0_17 - fixed (rel (addr (gtss_ust.lxxx)))+ fixed (rel (addr (gtss_ust)));
       57 	if gtss_ust.lprgs (i).b0_17 = gtss_prgdes_ext_$edbn then do;
       58 
       59 	/**	Build is being called by the editor. **/
       60 	     in_edit = "1"b;
       61 	end;
       62 	else in_edit = "0"b;
       63 	build_mode = "1"b;
       64 	first8 = " ";
       65 
       66 /**	Initialize gtss_SYstarstar.	**/
       67 	unspec (gtss_SYstarstar_$FILE.RECORD) = "0"b;	/* Clear all SY** records. */
       68 	call init_RECORD (1);
       69 	rx = 1;					/* Current RECORD. */
       70 	line_numb_len = 0;				/* => Auto[x] mode not on yet. */
       71 	star_count = 0;				/* No begin of line star output yet. */
       72 /* b10 will not be set by build  */
       73 	/*	gtss_ust.lswth.b10, */ gtss_ust.lswth.b17 = "0"b; /* No data on SY** */
       74 
       75 	on quit begin;
       76 	     on quit call gtss_fix_tty_modes_;
       77 	     call gtss_fix_tty_modes_;
       78 	     gtss_ext_$restart_from_pi = restart;
       79 	     gtss_ext_$last_k_was_out = "0"b;
       80 	     gtss_ust.lbuf.tally = "0"b;
       81 /* if in command file processing and break label specified set it's sector no */
       82 	     if gtss_ust.lflg2.b8 then call gtss_CFP_break_;
       83 	     if gse_ext_$modes.mquit then do;
       84 		call ioa_ ("QUIT");
       85 		call cu_$cl ();
       86 	     end;
       87 	     else signal program_interrupt;
       88 restart:	     ;
       89 	     gtss_ext_$restart_from_pi = gtss_ext_$bad_drl_rtrn;
       90 	end;
       91 
       92 	on program_interrupt go to next_asterisk;
       93 
       94 next_line: ;
       95 
       96 /**	Examine if SY** "full".	**/
       97 	if rx >= hbound (gtss_SYstarstar_$FILE.RECORD, 1) then /* In final SY** record. */
       98 	     if ((hbound (tty_data, 2)-tdw)*4) < gtss_ust.lrtll.char_length then do;
       99 /* Not enough room in SY** for a maximum length record. */
      100 		call write_SYstarstar;		/* Move tty lines to SY** file. */
      101 
      102 /**	Place the SY** full "command" in UST remove i/o buffer. **/
      103 		count_of_characters_transmitted = divide (length (SYstarstar_full)+8, 9, 17, 0);
      104 		number_words_transmitted = divide (length (SYstarstar_full)+35, 17, 0);
      105 		addr (characters_transmitted (1)) -> full_bits = SYstarstar_full;
      106 		build_mode = "0"b;
      107 		return;
      108 	     end;
      109 
      110 	if star_count = 0 then
      111 	     if gtss_ext_$last_k_was_out then
      112 		call gtss_ext_$put_chars (		/* Extra LF needed. */
      113 		iox_$user_output
      114 		, addr (LF)
      115 		, 1
      116 		, code);
      117 
      118 next_asterisk: ;
      119 	if gse_ext_$modes.ast then do;
      120 	     call gtss_ext_$put_chars (		/* Output "*" on caller's terminal at the beginning of a line. */
      121 		iox_$user_output
      122 		, addr (CR_ASTERISK)
      123 		, 2
      124 		, code);
      125 	     star_count = star_count+1;
      126 	end;
      127 
      128 after_asterisk: ;
      129 
      130 	if gtss_ust.lflg2.b25 then do;		/* => AUTO[X] mode => provide line number. */
      131 	     l = gtss_ust.linno;
      132 	     if gtss_ust.lflg2.b24 then do;		/* No space => autox. */
      133 		if l>99999999 then do;
      134 		     call com_err_ (0, "gtss_build_", "mode terminated. line number too long.");
      135 		     gtss_ust.lflg2.b25 = "0"b;
      136 		     line_numb_len = 0;
      137 		     goto next_line;
      138 		end;
      139 		if l>9999 then do;
      140 		     p8 = l;
      141 		     line_numb_ptr = addr (p8);
      142 		     line_numb_len = 8;
      143 		end;
      144 		else do;
      145 		     p4 = l;
      146 		     line_numb_ptr = addr (p4);
      147 		     line_numb_len = 4;
      148 		end;
      149 	     end;
      150 	     else do;				/* Space => auto. */
      151 		if l>9999999 then do;
      152 		     call com_err_ (0, "gtss_build_", "mode terminated. line number too long.");
      153 		     gtss_ust.lflg2.b25 = "0"b;
      154 		     line_numb_len = 0;
      155 		     goto next_line;
      156 		end;
      157 		if l>999 then do;
      158 		     p7 = l;
      159 		     line_numb_ptr = addr (p7space);
      160 		     p7space.space = " ";
      161 		     line_numb_len = 8;
      162 		end;
      163 		else do;
      164 		     p3 = l;
      165 		     line_numb_ptr = addr (p3space);
      166 		     p3space.space = " ";
      167 		     line_numb_len = 4;
      168 		end;
      169 	     end;
      170 	     gtss_ust.linno = l + gtss_ust.lincr;	/* Increment the line number. */
      171 
      172 	     call gtss_ext_$put_chars (		/* Print the line number on the caller's terminal. */
      173 		iox_$user_output
      174 		, line_numb_ptr
      175 		, (line_numb_len)
      176 		, code);
      177 
      178 	     addr (characters_transmitted) -> MLN = line_numb_ptr -> MLN; /* Move line number to remote buffer. */
      179 	end;
      180 
      181 	gtss_ext_$last_k_was_out = "0"b;
      182 	gtss_ust.lbuf.tally = "0"b;
      183 
      184 reinput:	;
      185 	call gtss_ext_$get_line (			/* Obtain next input line. */
      186 	     iox_$user_input
      187 	     , addr (characters_transmitted (line_numb_len+1))
      188 	     , min (gtss_ust.lrtll.char_length, hbound (characters_transmitted, 1))-line_numb_len
      189 	     , bytes_input
      190 	     , code);
      191 	if code ^= 0 then do;
      192 	     if code = error_table_$end_of_info then go to after_asterisk;
      193 	     if code = error_table_$long_record then do;
      194 		call iox_$control (
      195 		     iox_$user_input
      196 		     , "resetread"
      197 		     , null ()
      198 		     , code
      199 		     );
      200 dcl  iox_$control             entry (ptr, char (*), ptr, fixed bin (35));
      201 		call gtss_ext_$put_chars (		/* Print retry message. */
      202 		     iox_$user_output
      203 		     , addr (retry_message)
      204 		     , length (retry_message)
      205 		     , code);
      206 		goto reinput;
      207 	     end;
      208 	     call com_err_ (code, "gtss_build_", "Terminal failure.");
      209 	     signal cond (gtss_fail);
      210 	end;
      211 
      212 	if bytes_input = 0 then go to after_asterisk;
      213 
      214 	if bytes_input = 1 then do;			/* No characters input (just a newline). */
      215 	     if gtss_ust.lflg2.b25 then do;		/* Turn auto[x] mode off. */
      216 		gtss_ust.linno = gtss_ust.linno-gtss_ust.lincr; /* Use current linno as next. */
      217 		gtss_ust.lflg2.b25 = "0"b;
      218 		line_numb_len = 0;
      219 	     end;
      220 	     count_of_characters_transmitted = length (CR4);
      221 	     number_words_transmitted = divide (length (CR4)+3, 4, 17, 0);
      222 	     addr (characters_transmitted (1)) -> CR4chars = CR4;
      223 	     goto fin;
      224 	end;
      225 
      226 	if in_edit then do;
      227 	     if bytes_input>1 then
      228 		if characters_transmitted (1) = "#" then /* Special processing. */
      229 		     if bytes_input>2 then
      230 			if characters_transmitted (2) ^= "#" then do; /* Examine for command. */
      231 check_for_command:		     ;
      232 			     build_mode = "0"b;
      233 			     pound_sign_cmd = substr (string (characters_transmitted), 2, 4);
      234 			     if pound_sign_cmd ^= "auto" then do;
      235 				call write_SYstarstar;
      236 				return;
      237 			     end;
      238 			     count_of_characters_transmitted = bytes_input;
      239 			     gtss_ext_$stack_level_ = gtss_ext_$stack_level_ - 1;
      240 			     characters_transmitted (bytes_input) = CR;
      241 			     call gtss_drl_callss_$callss_pound_sign_comd (addr (pound_sign_cmd), 1);
      242 			     gtss_ext_$stack_level_ = gtss_ext_$stack_level_ + 1;
      243 			     in_pound_sign_build = "1"b;
      244 			     goto next_line;
      245 
      246 /*
      247*   if gtss_interp_prim_$is_command(substr(string(characters_transmitted),1,4)) then goto fin;
      248**/
      249 			end;
      250 			else			/* 2nd character is a "#". */
      251 /**  ??
      252*if terminal type = VIP
      253*     &
      254*   in CF mode then goto check_for_command;
      255**/			;
      256 	end;
      257 	else					/* => Not in editor. */
      258 	if gse_ext_$modes.mcmd then
      259 	     if bytes_input>2 then			/* Examine for escape to multics line. */
      260 		if characters_transmitted (line_numb_len+1) = "e" then
      261 		     if search (SP_TAB, characters_transmitted (line_numb_len+2))>0 then begin;
      262 			call cu_$cp (addr (characters_transmitted (line_numb_len+3)), bytes_input-2, code);
      263 			if gtss_ust.lflg2.b25 then
      264 			     gtss_ust.linno = gtss_ust.linno-gtss_ust.lincr; /* Use current linno as next. */
      265 
      266 /* Update gtss_ust.lid in case user has changed working_directory or
      267*   used the gcos_set_environment command. */
      268 			if gse_ext_$drm_rule = 2 then do; /* wd mapping rule */
      269 						/* .LID in the UST will be set to the first
      270*						   12 characters of the working_dir name. */
      271 			     call expand_pathname_ (get_wdir_ (), "", wd_name, code);
      272 			     if code ^= 0 then do;
      273 				call com_err_ (code, "gtss_build_",
      274 				     "Failed attempting to get entry name portion of working_dir");
      275 				signal cond (gtss_fail);
      276 			     end;
      277 			     call gtss_ascii_bcd_ (addr (wd_name), 12, addr (gtss_ust.lid));
      278 			end;
      279 			else do;			/* umc or smc mapping rule */
      280 			     call gtss_ascii_bcd_ (addr (gse_ext_$umc_name), 12, addr (gtss_ust.lid));
      281 			end;
      282 			goto next_line;
      283 		     end;
      284 
      285 	count_of_characters_transmitted,
      286 	     bytes_read = line_numb_len + bytes_input;
      287 	number_words_transmitted =
      288 	     divide ((bytes_read+3), 4, 17, 0);
      289 	characters_transmitted (bytes_read) = CR;
      290 
      291 	if ^in_edit then
      292 	     if line_numb_len = 0 then do;		/* Check if caller typed line number. */
      293 		i = verify (first8, " ");
      294 		if i <= 0 then do;			/* First 8 character of terminal line blank. */
      295 fin:		     ;
      296 		     if in_pound_sign_build then do;
      297 			in_pound_sign_build = "0"b;
      298 			goto next_line;
      299 		     end;
      300 		     call write_SYstarstar;
      301 		     build_mode = "0"b;
      302 		     return;
      303 		end;
      304 		if (search (characters_transmitted (i), "0123456789") = 0) then goto fin; /* Terminal line not numbered. */
      305 	     end;
      306 
      307 /**	Move terminal line into SY** accumulator.	**/
      308 
      309 /**	Indicate SY** contains data.	**/
      310 	bytes_read = bytes_read-1;			/* Exclude CR from SY** record. */
      311 	tw =					/* Total words to SY** record. */
      312 	     divide ((bytes_read+3), 4, 24, 0);
      313 	if (tw+2)> (hbound (tty_data, 2)-tdw) then do;	/* Proceed to next SY**. */
      314 	     RECORD (rx).number_words = tdw;		/* Record number of words in record. */
      315 	     rx = rx+1;
      316 	     call init_RECORD (rx);
      317 	end;
      318 	p = addr (RECORD (rx).tty_data (tdw));		/*  => start where file mark was. */
      319 	p -> number_record_words = tw;
      320 	j = mod (bytes_read, 4);
      321 	p -> next_available_char_in_last_word = j2;	/* j2 => j. */
      322 	p -> file_mark = "0"b;
      323 	p -> zeroes = "0"b;
      324 	p -> media_code = "0110"b;			/* => 6 => ASCII. */
      325 	p -> report_code = "0"b;
      326 	addrel (p, tw) -> b36 = (4)"177"b3;		/* First fill last data word with octal 177's. */
      327 	addrel (p, 1) -> MS = addr (characters_transmitted) -> MS; /* Move data characters to remote buffer. */
      328 	tdw = tdw+tw+1;				/* Data words + 1 RCW. */
      329 
      330 	goto next_line;
      331 
      332 init_RECORD: proc (r);
      333 
      334 /**	Initialize RECORD( r )	**/
      335 dcl  r                        fixed bin (24)parm;
      336 	     tdw = 1;				/* Current tty_data word. */
      337 	     RECORD (r).relative_block_count = r-1;
      338 	     return;
      339 	end					/* init_RECORD */;
      340 
      341 write_SYstarstar: proc;
      342 
      343 /**	Write the SY** accumulator out to the SY** file.	**/
      344 	     if (rx = 1) & (tdw = 1) then return;	/* Still no data on SY**. */
      345 /* b10 will not be set by build */
      346 	     /* gtss_ust.lswth.b10, */ gtss_ust.lswth.b17 = "1"b; /* Data to merge in SY**. */
      347 	     gtss_SYstarstar_$FILE.Seek_Address = 0;
      348 	     RECORD (rx).number_words = tdw;		/* Record number words for final record. */
      349 	     tty_data (rx, tdw) = "0"b;
      350 	     addr (tty_data (rx, tdw)) -> file_mark = "1111"b; /* Provide file mark in final word. */
      351 	     call gtss_ios_io_ (
      352 		gtss_ext_$SYstarstar_file_no
      353 		, addr (gtss_SYstarstar_$FILE.select_sequence)
      354 		, addr (gtss_SYstarstar_$FILE.select_sequence)
      355 		, fixed (rel (addr (tty_data (hbound (tty_data, 1), hbound (tty_data, 2))))) /* Last word of accumulator (offset) available. */
      356 		, status
      357 		, code);
      358 	     if status ^= 0 then do;
      359 		call com_err_ (code, "gtss_build_",
      360 		     "Unable to write SY**, gtss_ios_ status=^i", status);
      361 		signal cond (gtss_fail);
      362 	     end;
      363 
      364 /**	Initialize gtss_SYstarstar.	**/
      365 	     call init_RECORD (1);
      366 	     rx = 1;				/* Current RECORD. */
      367 	     return;
      368 	end					/* write_SYstarstar */;
      369 
      370 /**	Variables for gtss_build_
      371*   IDENTIFIER	ATTRIBUTES	**/
      372 dcl  addr                     builtin;
      373 dcl  pound_sign_cmd		char(4);
      374 dcl  b36                      bit (36)aligned based;
      375 dcl  bytes_input              fixed bin (21);
      376 dcl  bytes_read               fixed bin (21);
      377 dcl  code                     fixed bin (35);
      378 dcl  CR4chars                 char(length(CR4))based;
      379 dcl  cu_$cl                   ext entry ();
      380 dcl  cu_$cp                   ext entry (ptr, fixed bin, fixed bin (35));
      381 dcl  divide                   builtin;
      382 dcl  error_table_$end_of_info fixed bin (35) ext;
      383 dcl  error_table_$long_record fixed bin (35) ext;
      384 dcl  expand_pathname_         entry (char(*), char(*), char(*), fixed bin(35));
      385 dcl  first3                   pic"(3)9" based (addr (characters_transmitted));
      386 dcl  first7                   pic"(7)9" based (addr (characters_transmitted));
      387 dcl  first8                   char (8)aligned based (addr (characters_transmitted));
      388 dcl  full_bits                bit(length(SYstarstar_full))based;
      389 dcl  get_wdir_                entry returns(char(168));
      390 dcl  gtss_fail                condition ext;
      391 dcl  gtss_fix_tty_modes_	ext entry;
      392 dcl  gtss_interp_prim_$re_enter_prim entry;
      393 dcl  gtss_prgdes_ext_$edbn    fixed bin (24)ext;
      394 dcl  i                        fixed bin;
      395 dcl  in_pound_sign_build		bit(1);
      396 dcl  in_edit                  bit(1);
      397 dcl  ioa_                     ext entry options (variable);
      398 dcl  ioa_$nnl                 ext entry options (variable);
      399 dcl  iox_$get_line            entry (ptr, ptr,fixed bin(21),fixed bin(21),fixed bin(35));
      400 dcl  iox_$user_input          ext ptr;
      401 dcl  iox_$user_output         ext ptr;
      402 dcl  j                        fixed bin (35);
      403 dcl  l                        fixed bin (24);
      404 dcl  line_numb_len            fixed bin (24);
      405 dcl  line_numb_ptr            ptr init(null());
      406 dcl  min                      builtin;
      407 dcl  MLN                      char (line_numb_len)aligned based;
      408 dcl  MS                       char (bytes_read)aligned based;
      409 dcl  p                        ptr init(null());
      410 dcl  p4                       pic"(4)9";
      411 dcl  p8                       pic"(8)9";
      412 dcl  program_interrupt        cond ext;
      413 dcl  gtss_drl_callss_$callss_pound_sign_comd	entry(ptr,fixed bin);
      414 dcl  quit                     condition ext;
      415 dcl  rel                      builtin;
      416 dcl  rtrim		builtin;
      417 dcl  rx                       fixed bin (24);
      418 dcl  search                   builtin;
      419 dcl  SP                       char (1)static int options (constant)init (" ");
      420 dcl  SP_TAB                   char (2)static int options (constant)init (" 	");
      421 dcl  star_count               fixed bin (24);
      422 dcl  status                   fixed bin (24);
      423 dcl  substr                   builtin;
      424 dcl  SYstarstar_full          bit(72)static int options(constant)init("004004004001015015015015"b3);
      425 dcl  tdw                      fixed bin (24);
      426 dcl  tw                       fixed bin (24);
      427 dcl  wd_name                  char (32);
      428 
      429 dcl  retry_message            char(21)static int options(constant)init("RETRANSMIT LAST LINE
      430 ");
      431 
      432 dcl 1 p3space aligned
      433      , 3 p3 pic"(3)9" unal
      434      , 3 space char (1)unal
      435      ;
      436 
      437 dcl 1 p7space aligned
      438      , 3 p7 pic"(7)9" unal
      439      , 3 space char (1)unal
      440      ;
      441 
      442 dcl 1 j_overlay aligned based (addr (j)),
      443     2 l_34 bit (34)unal,
      444     2 j2 bit (2)unal;
      445 
      446 dcl  HTAB			char(1)static int options(constant)init("	");
      447 dcl
      448 	CR4 char(4)static int options(constant)init((4)"");
      449 
      450 dcl
      451      CR_ASTERISK char (2) static int options (constant) init ("*");
      452 dcl
      453      CR char (1) static int options (constant) init ("");
      454 dcl  LF                       char (1)static int options (constant)init ("
      455 ");
      456 
  1     1 /* BEGIN INCLUDE FILE gtss_ust_ext_.incl.pl1 */
  1     2 /* UST: User Status Table 
  1     3*   definitions based on 
  1     4*   System Tables, Order number DD14-01E, January 1981
  1     5*   Section 15, Time Sharing System
  1     6*
  1     7*   Authors: Robert J. Grimes	Created
  1     8*   -	  Albert N. Kepner	  1978
  1     9*   -	  Robert M. May
  1    10*   -	  David B. Ward
  1    11*   Change:  Dave Ward	02/23/79 Level 4 numbering.
  1    12*   Change:  Ron Barstad  83-07-12 Repaired damaged formating and word offset comments
  1    13*                                  Brought up to 4JS3 functionality
  1    14**/
  1    15 /* octal word offsets of entries */
  1    16 dcl 1 gtss_ust_ext_$ust aligned ext,
  1    17       3 gtss_ust,
  1    18 /* 0-1  */	4 lid		bit (72),
  1    19 /* 2    */	4 lstp		bit (36),
  1    20 /* 3    */	4 ltin		bit (36),
  1    21 /* 4    */	4 lstio,
  1    22 			5 no_of_chars_by_8  fixed bin (18) uns unal,
  1    23 			5 no_of_disk_io     fixed bin (18) uns unal,
  1    24 /* 5    */	4 lsnub		bit (36),
  1    25 /* 6-7  */	4 lchg		bit (72),
  1    26 /* 10   */	4 lbuf,
  1    27 			5 address		bit (18)unaligned,
  1    28 			5 tally		bit (1)unaligned,
  1    29 			5 terminal_type	bit (5)unaligned,
  1    30 			5 station_id	bit (12)unaligned,
  1    31 /* 11-12 */	4 liost (0:1)	bit (36),
  1    32 /* 13   */	4 lcc		bit (36),
  1    33 /* 14   */	4 lback,
  1    34 			5 fill1		bit (18) unaligned,
  1    35 			5 gwake		fixed bin (17) unaligned,
  1    36 /* 15   */	4 lflag,
  1    37 			5 mp_list		bit (18) unaligned,
  1    38 			5 flags unaligned,
  1    39 				6 b18		bit (1) unaligned,
  1    40 				6 b19		bit (1) unaligned,
  1    41 				6 b20		bit (1) unaligned,
  1    42 				6 b21		bit (1) unaligned,
  1    43 				6 b22		bit (1) unaligned,
  1    44 				6 b23		bit (1) unaligned,
  1    45 				6 b24		bit (1) unaligned,
  1    46 				6 b25		bit (1) unaligned,
  1    47 				6 b26		bit (1) unaligned,
  1    48 				6 b27		bit (1) unaligned,
  1    49 				6 b28		bit (1) unaligned,
  1    50 				6 b29		bit (1) unaligned,
  1    51 				6 b30		bit (1) unaligned,
  1    52 				6 b31		bit (1) unaligned,
  1    53 				6 b32		bit (1) unaligned,
  1    54 				6 b33		bit (1) unaligned,
  1    55 				6 b34		bit (1) unaligned,
  1    56 				6 b35		bit (1) unaligned,
  1    57 /* 16   */	4 lkdss		bit (36),
  1    58 /* 17   */	4 lfile,
  1    59 			5 program_stack	fixed bin (17) unal,
  1    60 			5 file_list_ptr	bit (18) unal,
  1    61 /* 20   */	4 lttys		bit (36),
  1    62 /* 21   */	4 lswth,
  1    63 			5 b0		bit (1) unaligned,
  1    64 			5 b1		bit (1) unaligned,
  1    65 			5 b2		bit (1) unaligned,
  1    66 			5 b3		bit (1) unaligned,
  1    67 			5 b4		bit (1) unaligned,
  1    68 			5 b5		bit (1) unaligned,
  1    69 			5 b6		bit (1) unaligned,
  1    70 			5 b7		bit (1) unaligned,
  1    71 			5 b8		bit (1) unaligned,
  1    72 			5 b9		bit (1) unaligned,
  1    73 			5 b10		bit (1) unaligned,
  1    74 			5 b11		bit (1) unaligned,
  1    75 			5 b12		bit (1) unaligned,
  1    76 			5 b13		bit (1) unaligned,
  1    77 			5 b14		bit (1) unaligned,
  1    78 			5 b15		bit (1) unaligned,
  1    79 			5 b16		bit (1) unaligned,
  1    80 			5 b17		bit (1) unaligned,
  1    81 			5 b18		bit (1) unaligned,
  1    82 			5 b19		bit (1) unaligned,
  1    83 			5 b20		bit (1) unaligned,
  1    84 			5 b21		bit (1) unaligned,
  1    85 			5 b22		bit (1) unaligned,
  1    86 			5 b23		bit (1) unaligned,
  1    87 			5 b24		bit (1) unaligned,
  1    88 			5 b25		bit (1) unaligned,
  1    89 			5 b26		bit (1) unaligned,
  1    90 			5 b27		bit (1) unaligned,
  1    91 			5 b28		bit (1) unaligned,
  1    92 			5 b29		bit (1) unaligned,
  1    93 			5 b30		bit (1) unaligned,
  1    94 			5 b31		bit (1) unaligned,
  1    95 			5 b32		bit (1) unaligned,
  1    96 			5 b33		bit (1) unaligned,
  1    97 			5 b34		bit (1) unaligned,
  1    98 			5 b35		bit (1) unaligned,
  1    99 /* 22   */	4 lsize,
  1   100 			5 bar		fixed bin (17) unaligned,
  1   101 			5 limit		bit (18) unaligned,
  1   102 /* 23... */	4 lswap,
  1   103 			5 fill		bit (18) unal,
  1   104 			5 size		bit (18) unal,
  1   105 /* ...24 */	4 transfer_cell	bit (36) unal,
  1   106 /* 25   */	4 lerrm		bit (36),
  1   107 /* 26-37 */	4 lcfil (0:9)	bit (36),
  1   108 /* 40   */	4 lsybc,
  1   109 			5 b0_17		fixed bin (17) unaligned,
  1   110 			5 b18_35		fixed bin (17) unaligned,
  1   111 /* 41-42 */	4 lstem (0:1)	bit (36),
  1   112 /* 43    */	4 lcals,
  1   113 			5 b0_17		fixed bin (17) unaligned,
  1   114 			5 b18_35		bit (18) unaligned,
  1   115 /* 44-51 */	4 subsystems (3),
  1   116 			5 content_lswap,
  1   117 				6 fill		bit (18) unal,
  1   118 				6 size		bit (18) unal,
  1   119 			5 tally_address	fixed bin (17) unaligned,
  1   120 			5 ss_flags	bit (18) unaligned,
  1   121 /* 52   */	4 ltalc,
  1   122 			5 tod		fixed bin (17) unaligned,
  1   123 			5 startup		fixed bin (17) unaligned,
  1   124 /* 53   */	4 lspts		fixed bin (35),
  1   125 /* 54   */	4 lflg2,
  1   126 			5 b0		bit (1) unaligned,
  1   127 			5 b1		bit (1) unaligned,
  1   128 			5 b2		bit (1) unaligned,
  1   129 			5 b3		bit (1) unaligned,
  1   130 			5 b4		bit (1) unaligned,
  1   131 			5 b5		bit (1) unaligned,
  1   132 			5 b6		bit (1) unaligned,
  1   133 			5 b7		bit (1) unaligned,
  1   134 			5 b8		bit (1) unaligned,
  1   135 			5 b9		bit (1) unaligned,
  1   136 			5 b10		bit (1) unaligned,
  1   137 			5 b11		bit (1) unaligned,
  1   138 			5 b12		bit (1) unaligned,
  1   139 			5 b13		bit (1) unaligned,
  1   140 			5 b14		bit (1) unaligned,
  1   141 			5 b15		bit (1) unaligned,
  1   142 			5 b16		bit (1) unaligned,
  1   143 			5 b17		bit (1) unaligned,
  1   144 			5 b18		bit (1) unaligned,
  1   145 			5 b19		bit (1) unaligned,
  1   146 			5 b20		bit (1) unaligned,
  1   147 			5 b21		bit (1) unaligned,
  1   148 			5 b22		bit (1) unaligned,
  1   149 			5 b23		bit (1) unaligned,
  1   150 			5 b24		bit (1) unaligned,
  1   151 			5 b25		bit (1) unaligned,
  1   152 			5 b26		bit (1) unaligned,
  1   153 			5 b27		bit (1) unaligned,
  1   154 			5 b28		bit (1) unaligned,
  1   155 			5 b29		bit (1) unaligned,
  1   156 			5 b30		bit (1) unaligned,
  1   157 			5 b31		bit (1) unaligned,
  1   158 			5 b32		bit (1) unaligned,
  1   159 			5 b33		bit (1) unaligned,
  1   160 			5 b34		bit (1) unaligned,
  1   161 			5 b35		bit (1) unaligned,
  1   162 /* 55-60 */	4 lsftm (0:3)	bit (36),
  1   163 /* 61    */	4 lsprt		fixed bin (35),
  1   164 /* 62    */	4 ltrm		bit (36),
  1   165 /* 63    */	4 linno		fixed bin (35),
  1   166 /* 64    */	4 lincr		fixed bin (35),
  1   167 /* 65    */	4 ltdes		bit (36),
  1   168 /* 66    */	4 lbptr		bit (36),
  1   169 /* 67    */	4 lpptr,
  1   170 			5 last_file_pat_ptr	bin (18) uns unal,
  1   171 			5 lpptr_reserved	bin (18) uns unal,
  1   172 /* 70    */	4 lsclp		bit (36),
  1   173 /* 71    */	4 limit		fixed bin (35),
  1   174 /* 72    */	4 lacpt,
  1   175 			5 jout_pat_offset	bit (18) unal,
  1   176 			5 permissions unal,
  1   177 				6 lodx		bit (1) unal,
  1   178 				6 cardin		bit (1) unal,
  1   179 				6 talk		bit (1) unal,
  1   180 				6 lods		bit (1) unal,
  1   181 			5 cardin_urgency	bit (14) unal,
  1   182 /* 73    */	4 ldrl,
  1   183 			5 ilc		bit (18) unaligned,
  1   184 			5 code		fixed bin (17) unaligned,
  1   185 /* 74    */	4 ljsnb		bit (36),
  1   186 /* 75    */	4 ltm0		bit (36),
  1   187 /* 76    */	4 ltm1		bit (36),
  1   188 /* 77    */	4 ltm2		bit (36),
  1   189 /* 100   */	4 ltm3		bit (36),
  1   190 /* 101   */	4 ltm4		bit (36),
  1   191 /* 102   */	4 ltm5		bit (36),
  1   192 /* 103   */	4 ltmwt		bit (36),
  1   193 /* 104   */	4 ltmrs		bit (36),
  1   194 /* 105   */	4 ltc0		bit (36),
  1   195 /* 106   */	4 ltc1		bit (36),
  1   196 /* 107   */	4 ltc2		bit (36),
  1   197 /* 110   */	4 lct3		bit (36),
  1   198 /* 111   */	4 ltc4		bit (36),
  1   199 /* 112   */	4 ltc5		bit (36),
  1   200 /* 113   */	4 ltcw		bit (36),
  1   201 /* 114   */	4 lkst		bit (36),
  1   202 /* 115   */	4 lkst2		bit (36),
  1   203 /* 116   */	4 lkcc		bit (36),
  1   204 /* 117   */	4 lkms		bit (36),
  1   205 /* 120-121 */	4 lksdc (0:1)	bit (36),
  1   206 /* 122   */	4 lkntp		bit (36),
  1   207 /* 123   */	4 lkrdc		bit (36),
  1   208 /* 124   */	4 lpqf		bit (36),
  1   209 /* 125   */	4 lpqb		bit (36),
  1   210 /* 126   */	4 lustl		bit (36),
  1   211 /* 127   */	4 ltemp		bit (36),
  1   212 /* 130   */	4 lrtll,
  1   213 			5 word_length	fixed bin unaligned,
  1   214 			5 char_length	fixed bin unaligned,
  1   215 /* 131   */	4 ltim		bit (36),
  1   216 /* 132   */	4 lcfio,
  1   217 			5 sect_out	fixed bin(18)unsigned unal,
  1   218 			5 sect_in		fixed bin(18)unsigned unal,
  1   219 /* 133   */	4 lcfst,
  1   220 			5 initial_sect_out	fixed bin(18)unsigned unal,
  1   221 			5 start_term	fixed bin(18)unsigned unal,
  1   222 /* 134   */	4 lcmpt		bit (36),
  1   223 /* 135   */	4 lcjid		bit (36),
  1   224 /* 136-137 */	4 lrcal (0:1)	bit (36),
  1   225 /* 140   */	4 lrdta		bit (36),
  1   226 /* 141   */	4 lrrsk		bit (36),
  1   227 /* 142   */	4 lrskd		bit (36),
  1   228 /* 143   */	4 lrcc		bit (36),
  1   229 /* 144-145 */	4 lrsts (0:1)	bit (36),
  1   230 /* 146   */	4 lrtm		bit (36),
  1   231 /* 147   */	4 lswt2,
  1   232 			5 b0		bit (1) unaligned,
  1   233 			5 b1		bit (1) unaligned,
  1   234 			5 b2		bit (1) unaligned,
  1   235 			5 b3		bit (1) unaligned,
  1   236 			5 b4		bit (1) unaligned,
  1   237 			5 b5		bit (1) unaligned,
  1   238 			5 b6		bit (1) unaligned,
  1   239 			5 b7		bit (1) unaligned,
  1   240 			5 b8		bit (1) unaligned,
  1   241 			5 b9		bit (1) unaligned,
  1   242 			5 b10		bit (1) unaligned,
  1   243 			5 b11		bit (1) unaligned,
  1   244 			5 b12		bit (1) unaligned,
  1   245 			5 b13		bit (1) unaligned,
  1   246 			5 b14		bit (1) unaligned,
  1   247 			5 b15		bit (1) unaligned,
  1   248 			5 b16		bit (1) unaligned,
  1   249 			5 b17		bit (1) unaligned,
  1   250 			5 b18		bit (1) unaligned,
  1   251 			5 b19		bit (1) unaligned,
  1   252 			5 b20		bit (1) unaligned,
  1   253 			5 b21		bit (1) unaligned,
  1   254 			5 b22		bit (1) unaligned,
  1   255 			5 b23		bit (1) unaligned,
  1   256 			5 b24		bit (1) unaligned,
  1   257 			5 b25		bit (1) unaligned,
  1   258 			5 b26		bit (1) unaligned,
  1   259 			5 b27		bit (1) unaligned,
  1   260 			5 b28		bit (1) unaligned,
  1   261 			5 b29		bit (1) unaligned,
  1   262 			5 b30		bit (1) unaligned,
  1   263 			5 b31		bit (1) unaligned,
  1   264 			5 b32		bit (1) unaligned,
  1   265 			5 b33		bit (1) unaligned,
  1   266 			5 b34		bit (1) unaligned,
  1   267 			5 b35		bit (1) unaligned,
  1   268 /* 150   */	4 llsnb		bit (36),
  1   269 /* 151   */	4 lesq		bit (36),
  1   270 /* 152-153 */	4 lumc (0:1)	bit (36),
  1   271 /* 154-155 */	4 lfnam (0:1)	bit (36),
  1   272 /* 156   */	4 lopts		bit (36),
  1   273 /* 157   */	4 licec,
  1   274 			5 b0_17		bit (18) unaligned,
  1   275 			5 b18_35		fixed bin (17) unaligned,
  1   276 /* 160   */	4 lflg3,
  1   277 			5 b0		bit (1) unaligned,
  1   278 			5 b1		bit (1) unaligned,
  1   279 			5 b2		bit (1) unaligned,
  1   280 			5 b3		bit (1) unaligned,
  1   281 			5 b4		bit (1) unaligned,
  1   282 			5 b5		bit (1) unaligned,
  1   283 			5 b6		bit (1) unaligned,
  1   284 			5 b7		bit (1) unaligned,
  1   285 			5 b8		bit (1) unaligned,
  1   286 			5 b9		bit (1) unaligned,
  1   287 			5 b10		bit (1) unaligned,
  1   288 			5 b11		bit (1) unaligned,
  1   289 			5 b12		bit (1) unaligned,
  1   290 			5 b13		bit (1) unaligned,
  1   291 			5 b14		bit (1) unaligned,
  1   292 			5 b15		bit (1) unaligned,
  1   293 			5 b16		bit (1) unaligned,
  1   294 			5 b17		bit (1) unaligned,
  1   295 			5 b18		bit (1) unaligned,
  1   296 			5 b19		bit (1) unaligned,
  1   297 			5 b20		bit (1) unaligned,
  1   298 			5 b21		bit (1) unaligned,
  1   299 			5 b22		bit (1) unaligned,
  1   300 			5 b23		bit (1) unaligned,
  1   301 			5 b24		bit (1) unaligned,
  1   302 			5 b25		bit (1) unaligned,
  1   303 			5 b26		bit (1) unaligned,
  1   304 			5 b27		bit (1) unaligned,
  1   305 			5 b28		bit (1) unaligned,
  1   306 			5 b29		bit (1) unaligned,
  1   307 			5 b30		bit (1) unaligned,
  1   308 			5 b31		bit (1) unaligned,
  1   309 			5 b32		bit (1) unaligned,
  1   310 			5 b33		bit (1) unaligned,
  1   311 			5 b34		bit (1) unaligned,
  1   312 			5 b35		bit (1) unaligned,
  1   313 /* 161-163 */	4 lpage (0:2)	bit (36),
  1   314 /* 164   */	4 lsit1		bit (36),
  1   315 /* 165   */	4 lsit2		bit (36),
  1   316 /* 166   */	4 lsit3		bit (36),
  1   317 /* 167   */	4 lsit4		bit (36),
  1   318 /* The following entries are maintained by gtss and are not found in TSS UST */
  1   319 /* 170   */	4 lxxx, /* program stack index, offset from gtss_ust */
  1   320 			5 b0_17		fixed bin (17) unaligned,
  1   321 			5 b18_35		bit (18) unaligned, /* not used */
  1   322 /* 171-175 */	4 lprgs (5),
  1   323 			5 b0_17		fixed bin (17) unaligned,
  1   324 			5 b18_35		fixed bin (17) unaligned,
  1   325 /* 176   */	4 fill	bit (36),
  1   326 /* 177   */	4 remote_io_buffer aligned,
  1   327 			5 buffer_control_word,
  1   328 				6 current_line_pointer  bit (18)unal,
  1   329 				6 buffer_threshold_address  bit (18)unal,
  1   330 			5 number_words_transmitted	fixed bin (17)unal,
  1   331 			5 FILL1			fixed bin (17)unal,
  1   332 			5 count_of_characters_transmitted fixed bin (17)unal,
  1   333 			5 FILL2			fixed bin (17)unal,
  1   334 			5 characters_transmitted (244) char (1) unal,
  1   335 /* 277   */	4 word_after_ust		bit (36) aligned;
  1   336 
  1   337 /*   END INCLUDE FILE gtss_ust_ext_.incl.pl1 */
      457 
      458 
  2     1 /* BEGIN INCLUDE FILE gtss_ext_.incl.pl1 */
  2     2 /*
  2     3*  Created: (Wardd Multics)  05/20/78 1307.6 mst Sat 
  2     4*  Modified: Ward            1981     add suspended_process dcl
  2     5*  Modified: Ron Barstad  83-07-21  Fixed level number on mcfc to 3
  2     6*  Modified: Ron Barstad  83-07-25  Fixed derail range in statistics to 4js3 number
  2     7**/
  2     8 dcl  gtss_ext_$aem                   fixed bin static ext	/* >0 Print "additional" error information. */;
  2     9 dcl  gtss_ext_$bad_drl_rtrn          static ext label	/* Default for drl_rtrn. */;
  2    10 dcl  gtss_ext_$db                    (72)bit(1)unal static ext;
  2    11 dcl  gtss_ext_$deferred_catalogs_ptr ptr ext;
  2    12 dcl  gtss_ext_$dispose_of_drl        static ext label	/* quit handlers for some derails use this label to abort */;
  2    13 dcl  gtss_ext_$drl_rtrn              (4)static ext label	/* where to return at subsystem end */;
  2    14 dcl  gtss_ext_$drm_path              char(168)static ext	/* gtss_expand_pathname_stores drm_path */;
  2    15 dcl  gtss_ext_$drun_jid              char (5) static ext	/* valid only for DRUN executing under absentee */;
  2    16 dcl  gtss_ext_$event_channel         fixed bin (71) static ext	/* used for DABT signals */;
  2    17 dcl  gtss_ext_$finished              static ext label	/* Return to gtss for normal conclusion. */;
  2    18 dcl  gtss_ext_$gdb_name              char(8)ext	/* Name H* module to debug. */;
  2    19 dcl  gtss_ext_$get_line              entry(ptr,ptr,fixed bin(21),fixed bin(21),fixed bin(35))variable ext /* Build mode input procedure. */;
  2    20 dcl  gtss_ext_$gtss_slave_area_seg   (4) ext static ptr	/* pointer to gtss slave area segment */;
  2    21 dcl  gtss_ext_$hcs_work_area_ptr     ptr ext static		/* Temp seg for acl lists. */;
  2    22 dcl  gtss_ext_$homedir               char (64) static ext /* user's home dir */;
  2    23 dcl  gtss_ext_$last_k_was_out        bit (1)aligned ext static	/* "1"b => last tty output was output. */;
  2    24 dcl  gtss_ext_$pdir                  char (168) varying ext static	/* pathname of process directory */;
  2    25 dcl  gtss_ext_$popup_from_pi         static ext label	/* transfer to this label after pi simulates popup primitive */;
  2    26 dcl  gtss_ext_$process_type          fixed bin (17) static ext;
  2    27 dcl  gtss_ext_$put_chars             entry(ptr,ptr,fixed bin(24),fixed bin(35)) variable ext	/* Terminal output procedure. */;
  2    28 dcl  gtss_ext_$restart_from_pi       static ext label	/* transfer to this label after pi restores machine conditions */;
  2    29 dcl  gtss_ext_$restart_seg_ptr       ptr static ext	/* points to DRUN restart file when exec under absentee */;
  2    30 dcl  gtss_ext_$sig_ptr               ext static ptr	/* saved ptr to signal_ */;
  2    31 dcl  gtss_ext_$stack_level_          fixed bin ext static;
  2    32 dcl  gtss_ext_$suspended_process     bit(1) ext static;
  2    33 dcl  gtss_ext_$SYstarstar_file_no    fixed bin (24) static ext;
  2    34 dcl  gtss_ext_$user_id               char (26)var ext;
  2    35 dcl  gtss_ext_$work_area_ptr         ptr ext;
  2    36 
  2    37 dcl  1 gtss_ext_$CFP_bits aligned static external
  2    38      , 3 no_input_yet bit (1) unaligned         /* used in gtss_CFP_input_, gtss_read_starCFP_ */
  2    39      , 3 rtn_bits bit (4) unaligned             /* used in gtss_CFP_input_, gtss_CFP_output_ */
  2    40      , 3 cpos_called bit (1) unaligned          /* used in gtss_CFP_input_, gtss_drl_t_cfio_, gtss_abandon_CFP_ */
  2    41      , 3 cout_called bit (1) unaligned          /* used in gtss_read_starCFP_, gtss_abandon_CFP_ */
  2    42      , 3 build_mode bit (1) unaligned	        /* used in gtss_build_, gtss_dsd_process_ */
  2    43      ;
  2    44 
  2    45 dcl 1 gtss_ext_$com_reg aligned static ext,
  2    46        3 tsdmx,
  2    47          4 dst fixed bin (18) unsigned unaligned,
  2    48          4 dit fixed bin (18) unsigned unaligned,
  2    49        3 tsdpt fixed bin (36) unsigned unaligned,
  2    50        3 tsddt fixed bin (36) unsigned unaligned,
  2    51        3 tsdid bit (72) unaligned,
  2    52        3 tsdsd bit (36) unaligned,
  2    53        3 tsdst fixed bin (36) unsigned unaligned,
  2    54        3 tsdjb fixed bin (35) unaligned,
  2    55        3 tsdgt,
  2    56          4 ust_loc fixed bin (18) unsigned unaligned,
  2    57          4 gating_ctl fixed bin (18) unsigned unaligned,
  2    58        3 tcdfr bit (36) unaligned;
  2    59 
  2    60 dcl 1 gtss_ext_$flags aligned static ext
  2    61      , 3 dispose_of_drl_on_pi	bit (01) unal	/* 1 => drl that should be aborted after quit-pi sequence */
  2    62      , 3 drl_in_progress	bit (01) unal	/* 1 => drl handler executing; 0 => gcos code executing */
  2    63      , 3 popup_from_pi	bit (01) unal	/* 1 => derail processor will simulate Gcos break instead of returning */
  2    64      , 3 unfinished_drl	bit (01) unal	/* 1 => subsystem is handling breaks and quit was raised during a drl */
  2    65      , 3 ss_time_limit_set	bit (01) unal	/* 1 => exec time limit set for subsystem */
  2    66      , 3 timer_ranout	bit (01) unal	/* 1 => user is executing timer runout code */
  2    67      , 3 gtss_com_err_sw      bit (01) unal       /* 1 => stop com_err_ string from going to terminal */   
  2    68      , 3 available		bit (65) unal
  2    69      ;
  2    70 
  2    71 
  2    72 dcl 1 gtss_ext_$statistics aligned static ext,		/* Derail usage statistics */
  2    73       3 total_time (-10:71)fixed bin (71),
  2    74       3 count (-10:71)fixed bin (17);
  2    75 
  2    76 /* 	Declaration of Available File Table
  2    77*   */
  2    78 dcl 1 gtss_ext_$aft aligned ext,			/* aft structure */
  2    79 
  2    80       3 start_list (0:102) fixed bin (24),		/* >0 => 1st aft_entry row to start of next entry chain. */
  2    81 
  2    82       3 aft_entry (20),
  2    83         4 altname char (8),				/* altname name for attaching this file */
  2    84         4 next_entry fixed bin (24),			/* Next aft_entry in hash chain. */
  2    85         4 previous_add fixed bin (24),			/* Previously added entry. */
  2    86         4 next_add fixed bin (24),			/* Entry added after this one. */
  2    87         4 used bit (1) unal,				/* "1"b => aft_entry contains AFT value. */
  2    88         4 forced bit(1) unal,				/* "1"b => gtss_verify_access_ forced access on this file. */
  2    89 
  2    90       3 free_space fixed bin (24),			/* Index of start of free space list for aft entries. */
  2    91       3 first_added fixed bin (24),			/* >0  => start of chain in add order. */
  2    92       3 last_added fixed bin (24)			/* >0 => end of chain in added order. */;
  2    93 
  2    94 dcl  gtss_ext_$ppt                   ptr ext /*  switch name for tapein drl */;
  2    95 /**	Data structure to provide access to installed
  2    96*   subsystems fast library load.
  2    97*   **/
  2    98 dcl 1 gtss_ext_$fast_lib aligned ext
  2    99      , 3 fast_lib_fcb ptr				/* Pointer to msf fcb.	*/
  2   100      , 3 fast_lib_ncp fixed bin (24)			/* Number of components. */
  2   101      , 3 comp_ptr (0:9)ptr				/* Pointer to component. */
  2   102      , 3 comp_wds (0:9)fixed bin (24)			/* Component length (words). */
  2   103      ;
  2   104 
  2   105 /* Pointers to segments to regulate multipler
  2   106*   callers to files. Same segments are used to regulate
  2   107*   all simulator callers.
  2   108**/
  2   109 dcl 1 gtss_ext_$mcfc	aligned ext,
  2   110       3 multics_lock_id	bit(36),
  2   111       3 wait_time		fixed bin,
  2   112       3 files_ptr		ptr,
  2   113       3 names_ptr		ptr,
  2   114       3 callers_ptr		(0:3)ptr
  2   115 ;
  2   116 
  2   117 /*   END INCLUDE FILE gtss_ext_.incl.pl1 */
      459 
      460 
  3     1 /*  */
  3     2 /* BEGIN INCLUDE FILE  mc.incl.pl1   Created Dec 72 for 6180 - WSS. */
  3     3 /* Modified 06/07/76 by Greenberg for mc.resignal */
  3     4 /* Modified 07/07/76 by Morris for fault register data */
  3     5 /* Modified 08/28/80 by J. A. Bush for the DPS8/70M CVPU */
  3     6 /* Modified '82 to make values constant */
  3     7 
  3     8 /* words 0-15 pointer registers */
  3     9 
  3    10 dcl  mcp ptr;
  3    11 
  3    12 dcl 1 mc based (mcp) aligned,
  3    13     2 prs (0:7) ptr,				/* POINTER  REGISTERS */
  3    14    (2 regs,					/* registers */
  3    15       3 x (0:7) bit (18),				/* index registers */
  3    16       3 a bit (36),					/* accumulator */
  3    17       3 q bit (36),					/* q-register */
  3    18       3 e bit (8),					/* exponent */
  3    19       3 pad1 bit (28),
  3    20       3 t bit (27),					/* timer register */
  3    21       3 pad2 bit (6),
  3    22       3 ralr bit (3),				/* ring alarm register */
  3    23 
  3    24     2 scu (0:7) bit (36),
  3    25 
  3    26     2 mask bit (72),				/* mem controller mask at time of fault */
  3    27     2 ips_temp bit (36),				/* Temporary storage for IPS info */
  3    28     2 errcode fixed bin (35),				/* fault handler's error code */
  3    29     2 fim_temp,
  3    30       3 unique_index bit (18) unal,			/* unique index for restarting faults */
  3    31       3 resignal bit (1) unal,			/* recompute signal name with fcode below */
  3    32       3 fcode bit (17) unal,				/* fault code used as index to FIM table and SCT */
  3    33     2 fault_reg bit (36),				/* fault register */
  3    34     2 pad2 bit (1),
  3    35     2 cpu_type fixed bin (2) unsigned,			/* L68 = 0, DPS8/70M = 1 */
  3    36     2 ext_fault_reg bit (15),				/* extended fault reg for DPS8/70M CPU */
  3    37     2 fault_time bit (54),				/* time of fault */
  3    38 
  3    39     2 eis_info (0:7) bit (36)) unaligned;
  3    40 
  3    41 
  3    42 dcl (apx fixed bin init (0),
  3    43      abx fixed bin init (1),
  3    44      bpx fixed bin init (2),
  3    45      bbx fixed bin init (3),
  3    46      lpx fixed bin init (4),
  3    47      lbx fixed bin init (5),
  3    48      spx fixed bin init (6),
  3    49      sbx fixed bin init (7)) internal static options (constant);
  3    50 
  3    51 
  3    52 
  3    53 
  3    54 dcl  scup ptr;
  3    55 
  3    56 dcl 1 scu based (scup) aligned,			/* SCU DATA */
  3    57 
  3    58 
  3    59 /*	WORD (0)		*/
  3    60 
  3    61    (2 ppr,					/* PROCEDURE POINTER REGISTER */
  3    62       3 prr bit (3),				/* procedure ring register */
  3    63       3 psr bit (15),				/* procedure segment register */
  3    64       3 p bit (1),					/* procedure privileged bit */
  3    65 
  3    66     2 apu,					/* APPENDING UNIT STATUS */
  3    67       3 xsf bit (1),				/* ext seg flag - IT modification */
  3    68       3 sdwm bit (1),				/* match in SDW Ass. Mem. */
  3    69       3 sd_on bit (1),				/* SDW Ass. Mem.  ON */
  3    70       3 ptwm bit (1),				/* match in PTW Ass. Mem. */
  3    71       3 pt_on bit (1),				/* PTW Ass. Mem.  ON */
  3    72       3 pi_ap bit (1),				/* Instr Fetch or Append cycle */
  3    73       3 dsptw bit (1),				/* Fetch of DSPTW */
  3    74       3 sdwnp bit (1),				/* Fetch of SDW non paged */
  3    75       3 sdwp bit (1),				/* Fetch of SDW paged */
  3    76       3 ptw bit (1),				/* Fetch of PTW */
  3    77       3 ptw2 bit (1),				/* Fetch of pre-paged PTW */
  3    78       3 fap bit (1),				/* Fetch of final address paged */
  3    79       3 fanp bit (1),				/* Fetch of final address non-paged */
  3    80       3 fabs bit (1),				/* Fetch of final address absolute */
  3    81 
  3    82     2 fault_cntr bit (3),				/* number of retrys of EIS instructions */
  3    83 
  3    84 
  3    85 /*	WORD (1)		*/
  3    86 
  3    87     2 fd,						/* FAULT  DATA */
  3    88       3 iro bit (1),				/* illegal ring order */
  3    89       3 oeb bit (1),				/* out of execute bracket */
  3    90       3 e_off bit (1),				/* no execute */
  3    91       3 orb bit (1),				/* out of read bracket */
  3    92       3 r_off bit (1),				/* no read */
  3    93       3 owb bit (1),				/* out of write bracket */
  3    94       3 w_off bit (1),				/* no write */
  3    95       3 no_ga bit (1),				/* not a gate */
  3    96       3 ocb bit (1),				/* out of call bracket */
  3    97       3 ocall bit (1),				/* outward call */
  3    98       3 boc bit (1),				/* bad outward call */
  3    99       3 inret bit (1),				/* inward return */
  3   100       3 crt bit (1),				/* cross ring transfer */
  3   101       3 ralr bit (1),				/* ring alarm register */
  3   102       3 am_er bit (1),				/* associative memory fault */
  3   103       3 oosb bit (1),				/* out of segment bounds */
  3   104       3 paru bit (1),				/* processor parity upper */
  3   105       3 parl bit (1),				/* processor parity lower */
  3   106       3 onc_1 bit (1),				/* op not complete type 1 */
  3   107       3 onc_2 bit (1),				/* op not complete type 2 */
  3   108 
  3   109     2 port_stat,					/* PORT  STATUS */
  3   110       3 ial bit (4),				/* illegal action lines */
  3   111       3 iac bit (3),				/* illegal action channel */
  3   112       3 con_chan bit (3),				/* connect channel */
  3   113 
  3   114     2 fi_num bit (5),				/* (fault/interrupt)  number */
  3   115     2 fi_flag bit (1),				/*  1 => fault,  0 => interrupt  */
  3   116 
  3   117 
  3   118 /*	WORD (2)		*/
  3   119 
  3   120     2 tpr,					/* TEMPORARY POINTER REGISTER */
  3   121       3 trr bit (3),				/* temporary ring register */
  3   122       3 tsr bit (15),				/* temporary segment register */
  3   123 
  3   124     2 pad2 bit (9),
  3   125 
  3   126     2 cpu_no bit (3),				/* CPU number */
  3   127 
  3   128     2 delta bit (6),				/* tally modification DELTA */
  3   129 
  3   130 
  3   131 /*	WORD (3)		*/
  3   132 
  3   133     2 word3 bit (18),
  3   134 
  3   135     2 tsr_stat,					/* TSR STATUS for 1,2,&3 word instructions */
  3   136       3 tsna,					/* Word 1 status */
  3   137         4 prn bit (3),				/* Word 1  PR  number */
  3   138         4 prv bit (1),				/* Word 1  PR  valid bit */
  3   139       3 tsnb,					/* Word 2  status */
  3   140         4 prn bit (3),				/* Word 2  PR  number */
  3   141         4 prv bit (1),				/* Word 2  PR  valid bit */
  3   142       3 tsnc,					/* Word 3  status */
  3   143         4 prn bit (3),				/* Word 3  PR  number */
  3   144         4 prv bit (1),				/* Word 3  PR  valid bit */
  3   145 
  3   146     2 tpr_tbr bit (6),				/* TPR.TBR  field */
  3   147 
  3   148 
  3   149 /* 	WORD (4)		*/
  3   150 
  3   151     2 ilc bit (18),					/* INSTRUCTION  COUNTER */
  3   152 
  3   153     2 ir,						/* INDICATOR  REGISTERS */
  3   154       3 zero bit (1),				/* zero indicator */
  3   155       3 neg bit (1),				/* negative indicator */
  3   156       3 carry bit (1),				/* carryry indicator */
  3   157       3 ovfl bit (1),				/* overflow indicator */
  3   158       3 eovf bit (1),				/* eponent overflow */
  3   159       3 eufl bit (1),				/* exponent underflow */
  3   160       3 oflm bit (1),				/* overflow mask */
  3   161       3 tro bit (1),				/* tally runout */
  3   162       3 par bit (1),				/* parity error */
  3   163       3 parm bit (1),				/* parity mask */
  3   164       3 bm bit (1),					/* ^bar mode */
  3   165       3 tru bit (1),				/* truncation mode */
  3   166       3 mif bit (1),				/* multi-word instruction mode */
  3   167       3 abs bit (1),				/* absolute mode */
  3   168       3 hex bit (1),				/* hexadecimal exponent mode */
  3   169       3 pad bit (3),
  3   170 
  3   171 
  3   172 /*	WORD (5)		*/
  3   173 
  3   174     2 ca bit (18),					/* COMPUTED  ADDRESS */
  3   175 
  3   176     2 cu,						/* CONTROL UNIT STATUS */
  3   177       3 rf bit (1),					/* on first cycle of repeat instr */
  3   178       3 rpt bit (1),				/* repeat instruction */
  3   179       3 rd bit (1),					/* repeat double instruction */
  3   180       3 rl bit (1),					/* repeat link instruciton */
  3   181       3 pot bit (1),				/* IT  modification */
  3   182       3 pon bit (1),				/* return type instruction */
  3   183       3 xde bit (1),				/* XDE from Even location */
  3   184       3 xdo bit (1),				/* XDE from Odd  location */
  3   185       3 poa bit (1),				/* operation preparation */
  3   186       3 rfi bit (1),				/* tells CPU to refetch instruction */
  3   187       3 its bit (1),				/* ITS modification */
  3   188       3 if bit (1),					/* fault occured during instruction fetch */
  3   189 
  3   190     2 cpu_tag bit (6)) unaligned,			/* computed tag field */
  3   191 
  3   192 
  3   193 /*	WORDS (6,7)	*/
  3   194 
  3   195     2 even_inst bit (36),				/* even instruction of faulting pair */
  3   196 
  3   197     2 odd_inst bit (36);				/* odd  instruction of faulting pair */
  3   198 
  3   199 
  3   200 
  3   201 
  3   202 
  3   203 
  3   204 /*	ALTERNATE   SCU  DECLARATION		*/
  3   205 
  3   206 
  3   207 dcl 1 scux based (scup) aligned,
  3   208 
  3   209    (2 pad0 bit (36),
  3   210 
  3   211     2 fd,						/* GROUP II  FAULT DATA */
  3   212       3 isn bit (1),				/* illegal segment number */
  3   213       3 ioc bit (1),				/* illegal op  code  */
  3   214       3 ia_am bit (1),				/* illegal address - modifier */
  3   215       3 isp bit (1),				/* illegal slave  procedure */
  3   216       3 ipr bit (1),				/* illegal procedure */
  3   217       3 nea bit (1),				/* non existent address */
  3   218       3 oobb bit (1),				/* out of bounds */
  3   219       3 pad bit (29),
  3   220 
  3   221     2 pad2 bit (36),
  3   222 
  3   223     2 pad3a bit (18),
  3   224 
  3   225     2 tsr_stat (0:2),				/* TSR  STATUS  as an  ARRAY */
  3   226       3 prn bit (3),				/* PR  number */
  3   227       3 prv bit (1),				/* PR  valid bit */
  3   228 
  3   229     2 pad3b bit (6)) unaligned,
  3   230 
  3   231     2 pad45 (0:1) bit (36),
  3   232 
  3   233     2 instr (0:1) bit (36);				/* Instruction ARRAY */
  3   234 
  3   235 
  3   236 
  3   237 /*  END INCLUDE FILE   mc.incl.pl1 */
      461 
      462 
  4     1 /* BEGIN INCLUDE FILE gtss_SYstarstar_.incl.pl1 */
  4     2 /*
  4     3*  Created:  (Wardd Multics)  06/13/78 1612.8 mst Tue 
  4     4**/
  4     5 
  4     6 /**	gtss_build_ data structure to accumulate
  4     7*	terminal input to be output to the SY**
  4     8*	file.
  4     9* **/
  4    10 dcl	1 gtss_SYstarstar_$FILE	aligned static ext
  4    11 ,	  3 select_sequence
  4    12 ,	    4 OP1			/* Seek operation. */
  4    13 ,	      5 Device_Command	bit(06)unal
  4    14 ,	      5 zeroes_1		bit(12)unal
  4    15 ,	      5 IOC_Command		bit(05)unal
  4    16 ,	      5 zeroes_2		bit(01)unal
  4    17 ,	      5 Control		bit(06)unal
  4    18 ,	      5 Count		bit(06)unal
  4    19 
  4    20 ,	    4 ID1
  4    21 ,	      5 fcb_loc		bit(18)unal
  4    22 ,	      5 DCW_list_loc	bit(18)unal
  4    23 
  4    24 ,	    4 OP2			/* Write opteration. */
  4    25 ,	      5 Device_Command	bit(06)unal
  4    26 ,	      5 zeroes_1		bit(12)unal
  4    27 ,	      5 IOC_Command		bit(05)unal
  4    28 ,	      5 zeroes_2		bit(01)unal
  4    29 ,	      5 Control		bit(06)unal
  4    30 ,	      5 Count		bit(06)unal
  4    31 
  4    32 ,	    4 ID2
  4    33 ,	      5 fcb_loc		bit(18)unal
  4    34 ,	      5 DCW_list_loc	bit(18)unal
  4    35 
  4    36 ,	    4 RETURN_WORD
  4    37 ,	      5 Status_loc		bit(18)unal
  4    38 ,	      5 Courtesy_Call_loc	bit(18)unal
  4    39 
  4    40 ,	  3 Seek_Word
  4    41 ,	    4 Seek_loc		bit(18)unal
  4    42 ,	    4 Seek_count		fixed bin(17)unal
  4    43 ,	  3 Seek_Address		fixed bin(35)
  4    44 ,	  3 STATUS		bit(72)
  4    45 
  4    46 ,	  3 DCW
  4    47 ,	    4 memory_loc		bit(18)unal
  4    48 ,	    4 zeroes_3		bit(03)unal
  4    49 ,	    4 action_code		bit(03)unal
  4    50 ,	    4 word_count		bit(12)unal
  4    51 
  4    52 ,	  3 Current_Rec		fixed bin(35)
  4    53 
  4    54 ,	  3 RECORD		(10)
  4    55 ,	    4 record_control_word
  4    56 ,	      5 number_words	fixed bin(17)unal
  4    57 ,	      5 relative_block_count	fixed bin(17)unal
  4    58 ,	    4 tty_data		(63)bit(36)aligned
  4    59 
  4    60 ,           3 SYss			char(8)
  4    61 ;
  4    62 /*   END INCLUDE FILE gtss_SYstarstar_.incl.pl1 */
      463 
      464 
  5     1 /* BEGIN INCLUDE FILE gtss_rec_control_word.incl.pl1 */
  5     2 /*
  5     3*  Created: (Wardd Multics)  06/13/78 1942.8 mst Tue 
  5     4**/
  5     5 
  5     6 /**	GCOS Record Control Word structure.
  5     7* **/
  5     8 dcl	1 RCW		aligned based
  5     9 ,	  3 number_record_words		fixed bin(17)unal
  5    10 ,	  3 next_available_char_in_last_word	bit(2)unal /* 00=> 4 chars used.
  5    11*						    01=> 1 char used.
  5    12*						    10=> 2 chars used.
  5    13*						    11=> 3 chars used. */
  5    14 ,	  3 file_mark			bit(4)unal/* octal 17 (EOF) if num. words 0. */
  5    15 ,	  3 zeroes			bit(2)unal
  5    16 ,	  3 media_code			bit(4)unal/* 0 Print-line with no slew (BCD)
  5    17*						   1 Binary record
  5    18*						   2 BCD
  5    19*						   3 Print-line BCD
  5    20*						   4 Reserved for user
  5    21*						   5 TSS ASCII (old format)
  5    22*						   6 ASCII standard system format
  5    23*						   7 ASCII print-line (with slew control word)
  5    24*						   8 TSS info. record (1st record)
  5    25*						   9-15 Undefined */
  5    26 ,	  3 report_code			bit(6)unal
  5    27 ;
  5    28 
  5    29 /**	Block Control Word (BCW)
  5    30* **/
  5    31 dcl	1 block_control_word		aligned
  5    32 ,	  3 block_serial_number		fixed bin(17)unal
  5    33 ,	  3 block_size			fixed bin(17)unal
  5    34 ;
  5    35 /*   END INCLUDE FILE gtss_rec_control_word.incl.pl1 */
      465 
      466 
  6     1 /* BEGIN INCLUDE FILE gtss_entry_dcls.incl.pl1 */
  6     2 /*
  6     3*  Created: (Wardd Multics)  06/30/78 1624.8 mst Fri 
  6     4*  Modified: Ron Barstad  84-02-24  Fixed wrong and obsolete entries
  6     5**/
  6     6 
  6     7 /**  gtss external entry variables.		**/
  6     8 dcl  com_err_                                   entry() options(variable);
  6     9 dcl  gtss_CFP_abort_                            entry options(variable);
  6    10 dcl  gtss_CFP_break_                            entry options(variable);
  6    11 dcl  gtss_CFP_input_                            entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  6    12 dcl  gtss_CFP_output_                           entry (ptr, ptr, fixed bin(21), fixed bin(35));
  6    13 dcl  gtss_abandon_CFP_                          entry options(variable);
  6    14 dcl  gtss_abort_dump_                           entry (fixed bin(18));
  6    15 dcl  gtss_abort_subsystem_                      entry options (variable);
  6    16 dcl  gtss_abort_subsystem_$not_imp              entry (ptr, fixed bin(24));
  6    17 dcl  gtss_abs_login_banner_		        entry() returns(char(*));
  6    18 dcl  gtss_abs_logout_banner_		        entry() returns(char(*));
  6    19 dcl  gtss_abs_$abs_equiv                        entry options(variable);
  6    20 dcl  gtss_abs_$cpu_runout		        entry (ptr, char(4));
  6    21 dcl  gtss_abs_$create_absin                     entry() returns(char(*));
  6    22 dcl  gtss_abs_$dabt_check		        entry (ptr, char(4));
  6    23 dcl  gtss_abs_$get_id                           entry (char(5)) returns(char(19));
  6    24 dcl  gtss_abs_$get_drm                          entry() returns(char(*));
  6    25 dcl  gtss_adjust_size_                          entry (ptr);
  6    26 dcl  gtss_aft_$add                              entry (char(8), fixed bin(24), fixed bin(35));
  6    27 dcl  gtss_aft_$delete                           entry (char(8), fixed bin(24), fixed bin(35));
  6    28 dcl  gtss_aft_$find                             entry (char(8), fixed bin(24), fixed bin(35));
  6    29 dcl  gtss_aft_$initialize                       entry (fixed bin(35));
  6    30 dcl  gtss_ascii_bcd_                            entry (ptr, fixed bin, ptr);
  6    31 dcl  gtss_attributes_mgr_$get                   entry (ptr, fixed bin(35));
  6    32 dcl  gtss_attributes_mgr_$set                   entry (ptr, fixed bin(35));
  6    33 dcl  gtss_bcd_ascii_                            entry (ptr, fixed bin(24), ptr);
  6    34 dcl  gtss_bcd_ascii_$lc                         entry (ptr, fixed bin(24), ptr);
  6    35 dcl  gtss_break_vector_                         entry ();
  6    36 dcl  gtss_break_vector_$drl_in_progress         entry() returns(bit(1));
  6    37 dcl  gtss_break_vector_$status                  entry() returns(bit(1));
  6    38 dcl  gtss_build_                                entry options(variable);
  6    39 dcl  gtss_com_err_                              entry options(variable);
  6    40 dcl  gtss_derail_processor_                     entry (ptr, char(*), ptr, ptr, bit(1) aligned) /* called at fault time instead of signal_ */;
  6    41 dcl  gtss_derail_processor_$set                 entry options(variable);
  6    42 dcl  gtss_dq_$catp                              entry (char (5), ptr, fixed bin (18) unsigned);
  6    43 dcl  gtss_dq_$create                            entry (bit(1));
  6    44 dcl  gtss_dq_$dibp                              entry (char(5), ptr);
  6    45 dcl  gtss_dq_$entries_info		        entry (ptr, fixed bin (18) unsigned, fixed bin (18) unsigned);
  6    46 dcl  gtss_dq_$hdrp                              entry (ptr);
  6    47 dcl  gtss_dq_$mod_js		        entry (char(5), fixed bin (6) unsigned, bit (1));
  6    48 dcl  gtss_dq_$open_exc		        entry (bit(1));
  6    49 dcl  gtss_dq_$open_gen		        entry (bit(1));
  6    50 dcl  gtss_drl_abort_                            entry (ptr, fixed bin);
  6    51 dcl  gtss_drl_addmem_                           entry (ptr, fixed bin);
  6    52 dcl  gtss_drl_callss_                           entry (ptr, fixed bin);
  6    53 dcl  gtss_drl_corfil_                           entry (ptr, fixed bin);
  6    54 dcl  gtss_drl_defil_                            entry (ptr, fixed bin);
  6    55 dcl  gtss_drl_defil_$subr                       entry (ptr, ptr, ptr);
  6    56 dcl  gtss_drl_dio_                              entry (ptr, fixed bin);
  6    57 dcl  gtss_drl_drlimt_                           entry (ptr, fixed bin);
  6    58 dcl  gtss_drl_drlsav_                           entry (ptr, fixed bin);
  6    59 dcl  gtss_drl_filact_                           entry (ptr, fixed bin);
  6    60 dcl  gtss_drl_filsp_                            entry (ptr, fixed bin);
  6    61 dcl  gtss_drl_grow_                             entry (ptr, fixed bin);
  6    62 dcl  gtss_drl_gwake_                            entry (ptr, fixed bin);
  6    63 dcl  gtss_drl_jsts_                             entry (ptr, fixed bin);
  6    64 dcl  gtss_drl_kin_                              entry (ptr, fixed bin);
  6    65 dcl  gtss_drl_kotnow_                           entry (ptr, fixed bin);
  6    66 dcl  gtss_drl_kotnow_$gtss_drl_kout_            entry (ptr, fixed bin);
  6    67 dcl  gtss_drl_koutn_                            entry (ptr, fixed bin);
  6    68 dcl  gtss_drl_morlnk_                           entry (ptr, fixed bin);
  6    69 dcl  gtss_drl_msub_                             entry (ptr, fixed bin);
  6    70 dcl  gtss_drl_objtim_                           entry (ptr, fixed bin);
  6    71 dcl  gtss_drl_part_                             entry (ptr, fixed bin);
  6    72 dcl  gtss_drl_pasaft_                           entry (ptr, fixed bin);
  6    73 dcl  gtss_drl_pasdes_                           entry (ptr, fixed bin);
  6    74 dcl  gtss_drl_pasust_                           entry (ptr, fixed bin);
  6    75 dcl  gtss_drl_pdio_                             entry (ptr, fixed bin);
  6    76 dcl  gtss_drl_prgdes_                           entry (ptr, fixed bin);
  6    77 dcl  gtss_drl_pseudo_                           entry (ptr, fixed bin);
  6    78 dcl  gtss_drl_relmem_                           entry (ptr, fixed bin);
  6    79 dcl  gtss_drl_restor_                           entry (ptr, fixed bin);
  6    80 dcl  gtss_drl_retfil_                           entry (ptr, fixed bin);
  6    81 dcl  gtss_drl_return_                           entry (ptr, fixed bin);
  6    82 dcl  gtss_drl_rew_                              entry (ptr, fixed bin);
  6    83 dcl  gtss_drl_rstswh_                           entry (ptr, fixed bin);
  6    84 dcl  gtss_drl_setlno_                           entry (ptr, fixed bin);
  6    85 dcl  gtss_drl_setswh_                           entry (ptr, fixed bin);
  6    86 dcl  gtss_drl_snumb_                            entry (ptr, fixed bin);
  6    87 dcl  gtss_drl_spawn_                            entry (ptr, fixed bin);
  6    88 dcl  gtss_drl_spawn_$gtss_drl_pasflr_           entry (ptr, fixed bin);
  6    89 dcl  gtss_drl_stoppt_                           entry (ptr, fixed bin);
  6    90 dcl  gtss_drl_switch_                           entry (ptr, fixed bin);
  6    91 dcl  gtss_drl_sysret_                           entry (ptr, fixed bin);
  6    92 dcl  gtss_drl_t_cfio_                           entry (ptr, fixed bin);
  6    93 dcl  gtss_drl_t_cmov_                           entry (ptr, fixed bin);
  6    94 dcl  gtss_drl_t_err_                            entry (ptr, fixed bin);
  6    95 dcl  gtss_drl_t_goto_                           entry (ptr, fixed bin);
  6    96 dcl  gtss_drl_t_linl_                           entry (ptr, fixed bin);
  6    97 dcl  gtss_drl_t_rscc_                           entry (ptr, fixed bin);
  6    98 dcl  gtss_drl_tapein_                           entry (ptr, fixed bin);
  6    99 dcl  gtss_drl_task_                             entry (ptr, fixed bin);
  6   100 dcl  gtss_drl_termtp_                           entry (ptr, fixed bin);
  6   101 dcl  gtss_drl_time_                             entry (ptr, fixed bin);
  6   102 dcl  gtss_drun_                                 entry (bit(1));
  6   103 dcl  gtss_dsd_lookup_                           entry (char(8) var) returns(fixed bin(24));
  6   104 dcl  gtss_dsd_process_                          entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  6   105 dcl  gtss_edit_dsd_                             entry (ptr, fixed bin(21)) returns(fixed bin(24));
  6   106 dcl  gtss_mcfc_empty                            entry (char(*) var);
  6   107 dcl  gtss_expand_pathname_                      entry (ptr, char(*), char(*), fixed bin(35));
  6   108 dcl  gtss_expand_pathname_$verify_umc           entry (ptr, char(*), char(*), bit(18), fixed bin(35));
  6   109 dcl  gtss_fault_processor_                      entry options(variable);
  6   110 dcl  gtss_find_cond_frame_		        entry (char(32) var) returns(ptr);
  6   111 dcl  gtss_fault_processor_$timer_runout         entry (ptr, char(*));
  6   112 dcl  gtss_filact_error_status_                  entry (fixed bin(35))returns(bit(12));
  6   113 dcl  gtss_filact_funct02_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   114 dcl  gtss_filact_funct03_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   115 dcl  gtss_filact_funct04_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   116 dcl  gtss_filact_funct05_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   117 dcl  gtss_filact_funct08_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   118 dcl  gtss_filact_funct10_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   119 dcl  gtss_filact_funct11_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   120 dcl  gtss_filact_funct14_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   121 dcl  gtss_filact_funct18_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   122 dcl  gtss_filact_funct19_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   123 dcl  gtss_filact_funct21_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   124 dcl  gtss_filact_funct22_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   125 dcl  gtss_mcfc_init_                            entry (char(*) var);
  6   126 dcl  gtss_interp_prim_                          entry options(variable);
  6   127 dcl  gtss_interp_prim_$callss                   entry (char(4), ptr);
  6   128 dcl  gtss_interp_prim_$sysret                   entry options(variable);
  6   129 dcl  gtss_interp_prim_$t_goto                   entry (char(4));
  6   130 dcl  gtss_ios_change_size_                      entry (fixed bin(24), fixed bin(24), bit(1), fixed bin(24), fixed bin(35));
  6   131 dcl  gtss_ios_close_                            entry (fixed bin(24), ptr, fixed bin(35));
  6   132 dcl  gtss_ios_exchange_names_                   entry (fixed bin(24), fixed bin(24), fixed bin(24), fixed bin(35));
  6   133 dcl  gtss_ios_initialize_                       entry options(variable);
  6   134 dcl  gtss_ios_io_                               entry (fixed bin(24), ptr, ptr, fixed bin(24), fixed bin(24), fixed bin(35));
  6   135 dcl  gtss_ios_open_                             entry (fixed bin(24), char(168), char(32), bit(6), bit(1), ptr, ptr, fixed bin(35));
  6   136 dcl  gtss_ios_position_                         entry (fixed bin(24), fixed bin(24), fixed bin(24), bit(6), ptr);
  6   137 dcl  gtss_mcfc_$delete		        entry (fixed bin(24), char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  6   138 dcl  gtss_mcfc_$open                            entry (char(*), char(*), bit(6), bit(36) aligned, ptr, fixed bin(35));
  6   139 dcl  gtss_mcfc_$close                           entry (char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  6   140 dcl  gtss_read_starCFP_                         entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  6   141 dcl  gtss_read_starCFP_$last_os                 entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  6   142 dcl  gtss_run_subsystem_                        entry (fixed bin(24));
  6   143 dcl  gtss_run_subsystem_$finish                 entry options(variable);
  6   144 dcl  gtss_run_subsystem_$restor                 entry (fixed bin(24), ptr);
  6   145 dcl  gtss_run_subsystem_$restor_perm            entry (fixed bin(24), ptr, fixed bin(18));
  6   146 dcl  gtss_set_slave_                            entry (fixed bin (24), ptr);
  6   147 dcl  gtss_set_slave_$load_bar                   entry (fixed bin (17));
  6   148 dcl  gtss_update_safe_store_                    entry (ptr);
  6   149 dcl  gtss_verify_access_		        entry (char(*), char(*), fixed bin(24), bit(6), bit(12) aligned);
  6   150 dcl  gtss_verify_access_$check_forced_access    entry (char(*), char(*), fixed bin(24));
  6   151 dcl  gtss_write_starCFP_                        entry (ptr, ptr, fixed bin(21), fixed bin(35));
  6   152 /*   END INCLUDE FILE gtss_entry_dcls.incl.pl1 */
      467 
      468 
  7     1 /* BEGIN INCLUDE FILE gse_ext_.incl.pl1 */
  7     2 /*
  7     3*  Created:  Kepner  78-12-01
  7     4**/
  7     5 
  7     6 dcl gse_ext_$drm_rule	fixed bin(24) ext;
  7     7 
  7     8 /* $drm_rule:
  7     9*   0 => rule not set
  7    10*   1 => umc_dir_mode
  7    11*   2 => working_dir_mode
  7    12*   3 => smc_dir_mode
  7    13**/
  7    14 
  7    15 dcl gse_ext_$gcos_debug_pathname       char(168)  /* pathname for the gcos debugger control file */ ext;
  7    16 dcl gse_ext_$smc_pathname              char(168) 	/* root directory used with smc_dir mapping rule */ ext;
  7    17 dcl gse_ext_$umc_name                  char(12) 	/* User Master Catalog name specified by user with gse command */ ext;
  7    18 dcl 1 gse_ext_$modes	aligned ext,
  7    19        3 ast		bit(01) unal, 	/* 1 => use asterisk as prompt character */
  7    20        3 drl		bit(01) unal, 	/* 1 => cause trace info on each derail to be printed */
  7    21        3 gdb		bit(01) unal, 	/* 1 => use gcos debugger (gdb) */
  7    22        3 mcmd		bit(01) unal, 	/* 1 => allow use of e request at GTSS command level */
  7    23        3 mquit		bit(01) unal, 	/* 1 => quit causes entry to new Multics command level */
  7    24        3 ss		bit(01) unal, 	/* 1 => cause trace info on each subsystem to be printed */
  7    25        3 fill		bit(30) unal; 
  7    26 
  7    27 /*   END INCLUDE FILE gse_ext_.incl.pl1 */
      469 
      470 /**  **/
  8     1 /* BEGIN INCLUDE FILE gtss_starCF_.incl.pl1 */
  8     2 /*
  8     3*  Created: (Wardd Multics)  03/20/79 1816.6 mst Tue 
  8     4**/
  8     5 
  8     6 /*
  8     7*   gtss_CFP_input_ data structure to provide
  8     8*   for accessing the current command file.
  8     9*
  8    10*   Changed: Al Dupuis 05/17/79 to get rid of nested get_line, put_chars concept.
  8    11**/
  8    12 dcl	1 gtss_starCF_$FILE	aligned static ext
  8    13 ,	  3 select_sequence
  8    14 ,	    4 OP1			/* Seek operation. */
  8    15 ,	      5 Device_Command	bit(06)unal
  8    16 ,	      5 zeroes_1		fixed bin(12)unsigned unal
  8    17 ,	      5 IOC_Command		bit(05)unal
  8    18 ,	      5 zeroes_2		fixed bin(01)unsigned unal
  8    19 ,	      5 Control		fixed bin(06)unsigned unal
  8    20 ,	      5 Count		fixed bin(06)unsigned unal
  8    21 
  8    22 ,	    4 ID1
  8    23 ,	      5 fcb_loc		bit(18)unal
  8    24 ,	      5 DCW_list_loc	bit(18)unal
  8    25 
  8    26 ,	    4 OP2			/* Write opteration. */
  8    27 ,	      5 Device_Command	bit(06)unal
  8    28 ,	      5 zeroes_1		fixed bin(12)unsigned unal
  8    29 ,	      5 IOC_Command		bit(05)unal
  8    30 ,	      5 zeroes_2		fixed bin(01)unsigned unal
  8    31 ,	      5 Control		fixed bin(06)unsigned unal
  8    32 ,	      5 Count		fixed bin(06)unsigned unal
  8    33 
  8    34 ,	    4 ID2
  8    35 ,	      5 fcb_loc		bit(18)unal
  8    36 ,	      5 DCW_list_loc	bit(18)unal
  8    37 
  8    38 ,	    4 RETURN_WORD
  8    39 ,	      5 Status_loc		bit(18)unal
  8    40 ,	      5 Courtesy_Call_loc	bit(18)unal
  8    41 
  8    42 ,	  3 Seek_Word
  8    43 ,	    4 Seek_loc		bit(18)unal
  8    44 ,	    4 Seek_count		fixed bin(18)unsigned unal
  8    45 ,	  3 Seek_Address		fixed bin(35)
  8    46 ,	  3 STATUS		bit(72) unal
  8    47 
  8    48 ,	  3 DCW
  8    49 ,	    4 memory_loc		bit(18)unal
  8    50 ,	    4 zeroes_3		fixed bin(03)unsigned unal
  8    51 ,	    4 action_code		fixed bin(03)unsigned unal
  8    52 ,	    4 word_count		fixed bin(12)unsigned unal
  8    53 
  8    54 ,	  3 RECORD
  8    55 ,	    4 no_characters		fixed bin(18)unsigned unal
  8    56 ,	    4 zeroes_4		bit(18)unal
  8    57 ,	    4 chars		char(252)
  8    58 
  8    59 /* Stack to accomodate nested command file processing. */
  8    60 ,	  3 cf
  8    61 ,	    4 top			fixed bin(24)
  8    62 ,	    4 aft_indx		fixed bin(24)
  8    63 ,             4 first_time		bit (1) unaligned
  8    64 ,             4 exclude_on    	bit (1) unaligned
  8    65 ;
  8    66 
  8    67 /*   END INCLUDE FILE gtss_starCF_.incl.pl1 */
      471 
      472      end						/* gtss_build_ */;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    04/18/00  1120.6  gtss_build_.pl1                   >udd>sm>ds>w>ml>gtss_build_.pl1
457          1    09/09/83  1814.3  gtss_ust_ext_.incl.pl1            >ldd>incl>gtss_ust_ext_.incl.pl1
459          2    09/09/83  1813.8  gtss_ext_.incl.pl1                >ldd>incl>gtss_ext_.incl.pl1
461          3    12/15/83  1200.4  mc.incl.pl1                       >ldd>incl>mc.incl.pl1
463          4    09/09/83  1813.5  gtss_SYstarstar_.incl.pl1         >ldd>incl>gtss_SYstarstar_.incl.pl1
465          5    09/09/83  1814.1  gtss_rec_control_word.incl.pl1    >ldd>incl>gtss_rec_control_word.incl.pl1
467          6    12/11/84  1520.0  gtss_entry_dcls.incl.pl1          >ldd>incl>gtss_entry_dcls.incl.pl1
469          7    09/09/83  1813.4  gse_ext_.incl.pl1                 >ldd>incl>gse_ext_.incl.pl1
471          8    09/09/83  1814.2  gtss_starCF_.incl.pl1             >ldd>incl>gtss_starCF_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
CR                                     constant        char(1)                  initial packed unaligned dcl 452 ref 240 289
CR4                             000002 constant        char(4)                  initial packed unaligned dcl 447 ref 220 221 222 222
CR4chars                               based           char                     packed unaligned dcl 378 set ref 222*
CR_ASTERISK                     000001 constant        char(2)                  initial packed unaligned dcl 450 set ref 120 120
LF                              000000 constant        char(1)                  initial packed unaligned dcl 454 set ref 110 110
MLN                                    based           char                     dcl 407 set ref 178* 178
MS                                     based           char                     dcl 408 set ref 327* 327
RCW                                    based           structure                level 1 dcl 5-8
RECORD                   13     000064 external static structure                array level 2 dcl 4-10 set ref 67* 97
SP_TAB                          002066 constant        char(2)                  initial packed unaligned dcl 420 ref 257
SYstarstar_full                 000012 constant        bit(72)                  initial packed unaligned dcl 424 ref 103 104 105 105
Seek_Address              6     000064 external static fixed bin(35,0)          level 2 dcl 4-10 set ref 347*
addr                                                   builtin function         dcl 372 ref 56 56 64 105 110 110 120 120 141 146 159
                                                                                  165 178 185 185 201 201 222 241 241 262 262 277
                                                                                  277 277 277 280 280 280 280 293 318 321 327 350
                                                                                  351 351 351 351 351 351
ast                             000102 external static bit(1)                   level 2 packed packed unaligned dcl 7-18 ref 119
b0_17                   171     000042 external static fixed bin(17,0)          array level 4 in structure "gtss_ust_ext_$ust"
                                                                                  packed packed unaligned dcl 1-16 in procedure
                                                                                  "gtss_build_" set ref 57
b0_17                   170     000042 external static fixed bin(17,0)          level 4 in structure "gtss_ust_ext_$ust" packed
                                                                                  packed unaligned dcl 1-16 in procedure
                                                                                  "gtss_build_" set ref 56
b17                      21(17) 000042 external static bit(1)                   level 4 packed packed unaligned dcl 1-16 set ref 73*
                                                                                  346*
b24                      54(24) 000042 external static bit(1)                   level 4 packed packed unaligned dcl 1-16 set ref 132
b25                      54(25) 000042 external static bit(1)                   level 4 packed packed unaligned dcl 1-16 set ref 130
                                                                                  135* 153* 215 217* 263
b36                                    based           bit(36)                  dcl 374 set ref 326*
b8                       54(08) 000042 external static bit(1)                   level 4 packed packed unaligned dcl 1-16 set ref 82
build_mode                0(07) 000062 external static bit(1)                   level 2 packed packed unaligned dcl 2-37 set ref 63*
                                                                                  106* 232* 301*
bytes_input                     000101 automatic       fixed bin(21,0)          dcl 375 set ref 185* 212 214 227 227 238 240 257 262
                                                                                  285
bytes_read                      000102 automatic       fixed bin(21,0)          dcl 376 set ref 285* 287 289 310* 310 311 320 327
                                                                                  327
char_length             130(18) 000042 external static fixed bin(17,0)          level 4 packed packed unaligned dcl 1-16 set ref 97
                                                                                  185
characters_transmitted
                        202     000042 external static char(1)                  array level 4 packed packed unaligned dcl 1-16 set
                                                                                  ref 64 105 178 185 185 185 222 227 227 233 240*
                                                                                  257 257 262 262 289* 293 304 327
code                            000103 automatic       fixed bin(35,0)          dcl 377 set ref 110* 120* 172* 185* 191 192 193 194*
                                                                                  201* 208* 262* 271* 272 273* 351* 359*
com_err_                        000066 constant        entry                    external dcl 6-8 ref 134 152 208 273 359
count_of_characters_transmitted
                        201     000042 external static fixed bin(17,0)          level 4 packed packed unaligned dcl 1-16 set ref
                                                                                  103* 220* 238* 285*
cu_$cl                          000012 constant        entry                    external dcl 379 ref 85
cu_$cp                          000014 constant        entry                    external dcl 380 ref 262
divide                                                 builtin function         dcl 381 ref 103 104 221 287 311
error_table_$end_of_info        000016 external static fixed bin(35,0)          dcl 382 ref 192
error_table_$long_record        000020 external static fixed bin(35,0)          dcl 383 ref 193
expand_pathname_                000022 constant        entry                    external dcl 384 ref 271
file_mark                 0(20)        based           bit(4)                   level 2 packed packed unaligned dcl 5-8 set ref 322*
                                                                                  350*
first8                                 based           char(8)                  dcl 387 set ref 64* 293
full_bits                              based           bit                      packed unaligned dcl 388 set ref 105*
get_wdir_                       000024 constant        entry                    external dcl 389 ref 271 271
gse_ext_$drm_rule               000076 external static fixed bin(24,0)          dcl 7-6 ref 268
gse_ext_$modes                  000102 external static structure                level 1 dcl 7-18
gse_ext_$umc_name               000100 external static char(12)                 packed unaligned dcl 7-17 set ref 280 280
gtss_CFP_break_                 000070 constant        entry                    external dcl 6-10 ref 82
gtss_SYstarstar_$FILE           000064 external static structure                level 1 dcl 4-10
gtss_ascii_bcd_                 000072 constant        entry                    external dcl 6-30 ref 277 280
gtss_drl_callss_$callss_pound_sign_comd
                                000040 constant        entry                    external dcl 413 ref 241
gtss_ext_$CFP_bits              000062 external static structure                level 1 dcl 2-37
gtss_ext_$SYstarstar_file_no    000060 external static fixed bin(24,0)          dcl 2-33 set ref 351*
gtss_ext_$bad_drl_rtrn          000044 external static label variable           dcl 2-9 ref 89
gtss_ext_$get_line              000046 external static entry variable           dcl 2-19 ref 185
gtss_ext_$last_k_was_out        000050 external static bit(1)                   dcl 2-23 set ref 79* 110 181*
gtss_ext_$put_chars             000052 external static entry variable           dcl 2-27 ref 110 120 172 201
gtss_ext_$restart_from_pi       000054 external static label variable           dcl 2-28 set ref 78* 89*
gtss_ext_$stack_level_          000056 external static fixed bin(17,0)          dcl 2-31 set ref 239* 239 242* 242
gtss_fail                       000104 stack reference condition                dcl 390 ref 209 275 361
gtss_fix_tty_modes_             000026 constant        entry                    external dcl 391 ref 76 77
gtss_ios_io_                    000074 constant        entry                    external dcl 6-134 ref 351
gtss_prgdes_ext_$edbn           000030 external static fixed bin(24,0)          dcl 393 ref 57
gtss_ust                        000042 external static structure                level 2 dcl 1-16 set ref 56
gtss_ust_ext_$ust               000042 external static structure                level 1 dcl 1-16
i                               000112 automatic       fixed bin(17,0)          dcl 394 set ref 56* 57 293* 294 304
in_edit                         000114 automatic       bit(1)                   packed unaligned dcl 396 set ref 60* 62* 226 291
in_pound_sign_build             000113 automatic       bit(1)                   packed unaligned dcl 395 set ref 55* 243* 296 297*
ioa_                            000032 constant        entry                    external dcl 397 ref 84
iox_$control                    000010 constant        entry                    external dcl 200 ref 194
iox_$user_input                 000034 external static pointer                  dcl 400 set ref 185* 194*
iox_$user_output                000036 external static pointer                  dcl 401 set ref 110* 120* 172* 201*
j                               000115 automatic       fixed bin(35,0)          dcl 402 set ref 320* 321
j2                        0(34)        based           bit(2)                   level 2 packed packed unaligned dcl 442 ref 321
j_overlay                              based           structure                level 1 dcl 442
l                               000116 automatic       fixed bin(24,0)          dcl 403 set ref 131* 133 139 140 145 151 157 158 164
                                                                                  170
lbuf                     10     000042 external static structure                level 3 dcl 1-16
lflg2                    54     000042 external static structure                level 3 dcl 1-16
lid                             000042 external static bit(72)                  level 3 dcl 1-16 set ref 277 277 280 280
lincr                    64     000042 external static fixed bin(35,0)          level 3 dcl 1-16 set ref 170 216 263
line_numb_len                   000117 automatic       fixed bin(24,0)          dcl 404 set ref 70* 136* 142* 147* 154* 161* 167*
                                                                                  172 178 178 185 185 185 218* 257 257 262 262 285
                                                                                  291
line_numb_ptr                   000120 automatic       pointer                  initial dcl 405 set ref 141* 146* 159* 165* 172* 178
                                                                                  405*
linno                    63     000042 external static fixed bin(35,0)          level 3 dcl 1-16 set ref 131 170* 216* 216 263* 263
lprgs                   171     000042 external static structure                array level 3 dcl 1-16
lrtll                   130     000042 external static structure                level 3 dcl 1-16
lswth                    21     000042 external static structure                level 3 dcl 1-16
lxxx                    170     000042 external static structure                level 3 dcl 1-16 set ref 56
mcmd                      0(03) 000102 external static bit(1)                   level 2 packed packed unaligned dcl 7-18 ref 257
media_code                0(26)        based           bit(4)                   level 2 packed packed unaligned dcl 5-8 set ref 324*
min                                                    builtin function         dcl 406 ref 185
mquit                     0(04) 000102 external static bit(1)                   level 2 packed packed unaligned dcl 7-18 ref 83
next_available_char_in_last_word
                          0(18)        based           bit(2)                   level 2 packed packed unaligned dcl 5-8 set ref 321*
number_record_words                    based           fixed bin(17,0)          level 2 packed packed unaligned dcl 5-8 set ref 319*
number_words             13     000064 external static fixed bin(17,0)          array level 4 packed packed unaligned dcl 4-10 set
                                                                                  ref 314* 348*
number_words_transmitted
                        200     000042 external static fixed bin(17,0)          level 4 packed packed unaligned dcl 1-16 set ref
                                                                                  104* 221* 287*
p                               000122 automatic       pointer                  initial dcl 409 set ref 318* 319 321 322 323 324 325
                                                                                  326 327 409*
p3                              000161 automatic       picture(3)               level 2 packed packed unaligned dcl 432 set ref 164*
p3space                         000161 automatic       structure                level 1 dcl 432 set ref 165
p4                              000124 automatic       picture(4)               packed unaligned dcl 410 set ref 145* 146
p7                              000162 automatic       picture(7)               level 2 packed packed unaligned dcl 437 set ref 158*
p7space                         000162 automatic       structure                level 1 dcl 437 set ref 159
p8                              000126 automatic       picture(8)               packed unaligned dcl 411 set ref 140* 141
pound_sign_cmd                  000100 automatic       char(4)                  packed unaligned dcl 373 set ref 233* 234 241 241
program_interrupt               000130 stack reference condition                dcl 412 ref 87 92
quit                            000136 stack reference condition                dcl 414 ref 75 76
r                                      parameter       fixed bin(24,0)          dcl 335 ref 332 337 337
record_control_word      13     000064 external static structure                array level 3 dcl 4-10
rel                                                    builtin function         dcl 415 ref 56 56 351 351
relative_block_count     13(18) 000064 external static fixed bin(17,0)          array level 4 packed packed unaligned dcl 4-10 set
                                                                                  ref 337*
remote_io_buffer        177     000042 external static structure                level 3 dcl 1-16
report_code               0(30)        based           bit(6)                   level 2 packed packed unaligned dcl 5-8 set ref 325*
retry_message                   000003 constant        char(21)                 initial packed unaligned dcl 429 set ref 201 201 201
                                                                                  201
rx                              000144 automatic       fixed bin(24,0)          dcl 417 set ref 69* 97 314 315* 315 316* 318 344 348
                                                                                  349 350 366*
search                                                 builtin function         dcl 418 ref 257 304
select_sequence                 000064 external static structure                level 2 dcl 4-10 set ref 351 351 351 351
space                     0(27) 000161 automatic       char(1)                  level 2 in structure "p3space" packed packed
                                                                                  unaligned dcl 432 in procedure "gtss_build_" set
                                                                                  ref 166*
space                     1(27) 000162 automatic       char(1)                  level 2 in structure "p7space" packed packed
                                                                                  unaligned dcl 437 in procedure "gtss_build_" set
                                                                                  ref 160*
star_count                      000145 automatic       fixed bin(24,0)          dcl 421 set ref 71* 110 125* 125
status                          000146 automatic       fixed bin(24,0)          dcl 422 set ref 351* 358 359*
substr                                                 builtin function         dcl 423 ref 233
tally                    10(18) 000042 external static bit(1)                   level 4 packed packed unaligned dcl 1-16 set ref 80*
                                                                                  182*
tdw                             000147 automatic       fixed bin(24,0)          dcl 425 set ref 97 313 314 318 328* 328 336* 344 348
                                                                                  349 350
tty_data                 14     000064 external static bit(36)                  array level 3 dcl 4-10 set ref 97 313 318 349* 350
                                                                                  351 351 351 351 351 351
tw                              000150 automatic       fixed bin(24,0)          dcl 426 set ref 311* 313 319 326 328
wd_name                         000151 automatic       char(32)                 packed unaligned dcl 427 set ref 271* 277 277
zeroes                    0(24)        based           bit(2)                   level 2 packed packed unaligned dcl 5-8 set ref 323*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
HTAB                                   internal static char(1)                  initial packed unaligned dcl 446
SP                                     internal static char(1)                  initial packed unaligned dcl 419
abx                                    internal static fixed bin(17,0)          initial dcl 3-42
apx                                    internal static fixed bin(17,0)          initial dcl 3-42
bbx                                    internal static fixed bin(17,0)          initial dcl 3-42
block_control_word                     automatic       structure                level 1 dcl 5-31
bpx                                    internal static fixed bin(17,0)          initial dcl 3-42
first3                                 based           picture(3)               packed unaligned dcl 385
first7                                 based           picture(7)               packed unaligned dcl 386
gse_ext_$gcos_debug_pathname           external static char(168)                packed unaligned dcl 7-15
gse_ext_$smc_pathname                  external static char(168)                packed unaligned dcl 7-16
gtss_CFP_abort_                 000000 constant        entry                    external dcl 6-9
gtss_CFP_input_                 000000 constant        entry                    external dcl 6-11
gtss_CFP_output_                000000 constant        entry                    external dcl 6-12
gtss_abandon_CFP_               000000 constant        entry                    external dcl 6-13
gtss_abort_dump_                000000 constant        entry                    external dcl 6-14
gtss_abort_subsystem_           000000 constant        entry                    external dcl 6-15
gtss_abort_subsystem_$not_imp   000000 constant        entry                    external dcl 6-16
gtss_abs_$abs_equiv             000000 constant        entry                    external dcl 6-19
gtss_abs_$cpu_runout            000000 constant        entry                    external dcl 6-20
gtss_abs_$create_absin          000000 constant        entry                    external dcl 6-21
gtss_abs_$dabt_check            000000 constant        entry                    external dcl 6-22
gtss_abs_$get_drm               000000 constant        entry                    external dcl 6-24
gtss_abs_$get_id                000000 constant        entry                    external dcl 6-23
gtss_abs_login_banner_          000000 constant        entry                    external dcl 6-17
gtss_abs_logout_banner_         000000 constant        entry                    external dcl 6-18
gtss_adjust_size_               000000 constant        entry                    external dcl 6-25
gtss_aft_$add                   000000 constant        entry                    external dcl 6-26
gtss_aft_$delete                000000 constant        entry                    external dcl 6-27
gtss_aft_$find                  000000 constant        entry                    external dcl 6-28
gtss_aft_$initialize            000000 constant        entry                    external dcl 6-29
gtss_attributes_mgr_$get        000000 constant        entry                    external dcl 6-31
gtss_attributes_mgr_$set        000000 constant        entry                    external dcl 6-32
gtss_bcd_ascii_                 000000 constant        entry                    external dcl 6-33
gtss_bcd_ascii_$lc              000000 constant        entry                    external dcl 6-34
gtss_break_vector_              000000 constant        entry                    external dcl 6-35
gtss_break_vector_$drl_in_progress
                                000000 constant        entry                    external dcl 6-36
gtss_break_vector_$status       000000 constant        entry                    external dcl 6-37
gtss_build_                     000000 constant        entry                    external dcl 6-38
gtss_com_err_                   000000 constant        entry                    external dcl 6-39
gtss_derail_processor_          000000 constant        entry                    external dcl 6-40
gtss_derail_processor_$set      000000 constant        entry                    external dcl 6-41
gtss_dq_$catp                   000000 constant        entry                    external dcl 6-42
gtss_dq_$create                 000000 constant        entry                    external dcl 6-43
gtss_dq_$dibp                   000000 constant        entry                    external dcl 6-44
gtss_dq_$entries_info           000000 constant        entry                    external dcl 6-45
gtss_dq_$hdrp                   000000 constant        entry                    external dcl 6-46
gtss_dq_$mod_js                 000000 constant        entry                    external dcl 6-47
gtss_dq_$open_exc               000000 constant        entry                    external dcl 6-48
gtss_dq_$open_gen               000000 constant        entry                    external dcl 6-49
gtss_drl_abort_                 000000 constant        entry                    external dcl 6-50
gtss_drl_addmem_                000000 constant        entry                    external dcl 6-51
gtss_drl_callss_                000000 constant        entry                    external dcl 6-52
gtss_drl_corfil_                000000 constant        entry                    external dcl 6-53
gtss_drl_defil_                 000000 constant        entry                    external dcl 6-54
gtss_drl_defil_$subr            000000 constant        entry                    external dcl 6-55
gtss_drl_dio_                   000000 constant        entry                    external dcl 6-56
gtss_drl_drlimt_                000000 constant        entry                    external dcl 6-57
gtss_drl_drlsav_                000000 constant        entry                    external dcl 6-58
gtss_drl_filact_                000000 constant        entry                    external dcl 6-59
gtss_drl_filsp_                 000000 constant        entry                    external dcl 6-60
gtss_drl_grow_                  000000 constant        entry                    external dcl 6-61
gtss_drl_gwake_                 000000 constant        entry                    external dcl 6-62
gtss_drl_jsts_                  000000 constant        entry                    external dcl 6-63
gtss_drl_kin_                   000000 constant        entry                    external dcl 6-64
gtss_drl_kotnow_                000000 constant        entry                    external dcl 6-65
gtss_drl_kotnow_$gtss_drl_kout_ 000000 constant        entry                    external dcl 6-66
gtss_drl_koutn_                 000000 constant        entry                    external dcl 6-67
gtss_drl_morlnk_                000000 constant        entry                    external dcl 6-68
gtss_drl_msub_                  000000 constant        entry                    external dcl 6-69
gtss_drl_objtim_                000000 constant        entry                    external dcl 6-70
gtss_drl_part_                  000000 constant        entry                    external dcl 6-71
gtss_drl_pasaft_                000000 constant        entry                    external dcl 6-72
gtss_drl_pasdes_                000000 constant        entry                    external dcl 6-73
gtss_drl_pasust_                000000 constant        entry                    external dcl 6-74
gtss_drl_pdio_                  000000 constant        entry                    external dcl 6-75
gtss_drl_prgdes_                000000 constant        entry                    external dcl 6-76
gtss_drl_pseudo_                000000 constant        entry                    external dcl 6-77
gtss_drl_relmem_                000000 constant        entry                    external dcl 6-78
gtss_drl_restor_                000000 constant        entry                    external dcl 6-79
gtss_drl_retfil_                000000 constant        entry                    external dcl 6-80
gtss_drl_return_                000000 constant        entry                    external dcl 6-81
gtss_drl_rew_                   000000 constant        entry                    external dcl 6-82
gtss_drl_rstswh_                000000 constant        entry                    external dcl 6-83
gtss_drl_setlno_                000000 constant        entry                    external dcl 6-84
gtss_drl_setswh_                000000 constant        entry                    external dcl 6-85
gtss_drl_snumb_                 000000 constant        entry                    external dcl 6-86
gtss_drl_spawn_                 000000 constant        entry                    external dcl 6-87
gtss_drl_spawn_$gtss_drl_pasflr_
                                000000 constant        entry                    external dcl 6-88
gtss_drl_stoppt_                000000 constant        entry                    external dcl 6-89
gtss_drl_switch_                000000 constant        entry                    external dcl 6-90
gtss_drl_sysret_                000000 constant        entry                    external dcl 6-91
gtss_drl_t_cfio_                000000 constant        entry                    external dcl 6-92
gtss_drl_t_cmov_                000000 constant        entry                    external dcl 6-93
gtss_drl_t_err_                 000000 constant        entry                    external dcl 6-94
gtss_drl_t_goto_                000000 constant        entry                    external dcl 6-95
gtss_drl_t_linl_                000000 constant        entry                    external dcl 6-96
gtss_drl_t_rscc_                000000 constant        entry                    external dcl 6-97
gtss_drl_tapein_                000000 constant        entry                    external dcl 6-98
gtss_drl_task_                  000000 constant        entry                    external dcl 6-99
gtss_drl_termtp_                000000 constant        entry                    external dcl 6-100
gtss_drl_time_                  000000 constant        entry                    external dcl 6-101
gtss_drun_                      000000 constant        entry                    external dcl 6-102
gtss_dsd_lookup_                000000 constant        entry                    external dcl 6-103
gtss_dsd_process_               000000 constant        entry                    external dcl 6-104
gtss_edit_dsd_                  000000 constant        entry                    external dcl 6-105
gtss_expand_pathname_           000000 constant        entry                    external dcl 6-107
gtss_expand_pathname_$verify_umc
                                000000 constant        entry                    external dcl 6-108
gtss_ext_$aem                          external static fixed bin(17,0)          dcl 2-8
gtss_ext_$aft                          external static structure                level 1 dcl 2-78
gtss_ext_$com_reg                      external static structure                level 1 dcl 2-45
gtss_ext_$db                           external static bit(1)                   array packed unaligned dcl 2-10
gtss_ext_$deferred_catalogs_ptr        external static pointer                  dcl 2-11
gtss_ext_$dispose_of_drl               external static label variable           dcl 2-12
gtss_ext_$drl_rtrn                     external static label variable           array dcl 2-13
gtss_ext_$drm_path                     external static char(168)                packed unaligned dcl 2-14
gtss_ext_$drun_jid                     external static char(5)                  packed unaligned dcl 2-15
gtss_ext_$event_channel                external static fixed bin(71,0)          dcl 2-16
gtss_ext_$fast_lib                     external static structure                level 1 dcl 2-98
gtss_ext_$finished                     external static label variable           dcl 2-17
gtss_ext_$flags                        external static structure                level 1 dcl 2-60
gtss_ext_$gdb_name                     external static char(8)                  packed unaligned dcl 2-18
gtss_ext_$gtss_slave_area_seg          external static pointer                  array dcl 2-20
gtss_ext_$hcs_work_area_ptr            external static pointer                  dcl 2-21
gtss_ext_$homedir                      external static char(64)                 packed unaligned dcl 2-22
gtss_ext_$mcfc                         external static structure                level 1 dcl 2-109
gtss_ext_$pdir                         external static varying char(168)        dcl 2-24
gtss_ext_$popup_from_pi                external static label variable           dcl 2-25
gtss_ext_$ppt                          external static pointer                  dcl 2-94
gtss_ext_$process_type                 external static fixed bin(17,0)          dcl 2-26
gtss_ext_$restart_seg_ptr              external static pointer                  dcl 2-29
gtss_ext_$sig_ptr                      external static pointer                  dcl 2-30
gtss_ext_$statistics                   external static structure                level 1 dcl 2-72
gtss_ext_$suspended_process            external static bit(1)                   packed unaligned dcl 2-32
gtss_ext_$user_id                      external static varying char(26)         dcl 2-34
gtss_ext_$work_area_ptr                external static pointer                  dcl 2-35
gtss_fault_processor_           000000 constant        entry                    external dcl 6-109
gtss_fault_processor_$timer_runout
                                000000 constant        entry                    external dcl 6-111
gtss_filact_error_status_       000000 constant        entry                    external dcl 6-112
gtss_filact_funct02_            000000 constant        entry                    external dcl 6-113
gtss_filact_funct03_            000000 constant        entry                    external dcl 6-114
gtss_filact_funct04_            000000 constant        entry                    external dcl 6-115
gtss_filact_funct05_            000000 constant        entry                    external dcl 6-116
gtss_filact_funct08_            000000 constant        entry                    external dcl 6-117
gtss_filact_funct10_            000000 constant        entry                    external dcl 6-118
gtss_filact_funct11_            000000 constant        entry                    external dcl 6-119
gtss_filact_funct14_            000000 constant        entry                    external dcl 6-120
gtss_filact_funct18_            000000 constant        entry                    external dcl 6-121
gtss_filact_funct19_            000000 constant        entry                    external dcl 6-122
gtss_filact_funct21_            000000 constant        entry                    external dcl 6-123
gtss_filact_funct22_            000000 constant        entry                    external dcl 6-124
gtss_find_cond_frame_           000000 constant        entry                    external dcl 6-110
gtss_interp_prim_               000000 constant        entry                    external dcl 6-126
gtss_interp_prim_$callss        000000 constant        entry                    external dcl 6-127
gtss_interp_prim_$re_enter_prim 000000 constant        entry                    external dcl 392
gtss_interp_prim_$sysret        000000 constant        entry                    external dcl 6-128
gtss_interp_prim_$t_goto        000000 constant        entry                    external dcl 6-129
gtss_ios_change_size_           000000 constant        entry                    external dcl 6-130
gtss_ios_close_                 000000 constant        entry                    external dcl 6-131
gtss_ios_exchange_names_        000000 constant        entry                    external dcl 6-132
gtss_ios_initialize_            000000 constant        entry                    external dcl 6-133
gtss_ios_open_                  000000 constant        entry                    external dcl 6-135
gtss_ios_position_              000000 constant        entry                    external dcl 6-136
gtss_mcfc_$close                000000 constant        entry                    external dcl 6-139
gtss_mcfc_$delete               000000 constant        entry                    external dcl 6-137
gtss_mcfc_$open                 000000 constant        entry                    external dcl 6-138
gtss_mcfc_empty                 000000 constant        entry                    external dcl 6-106
gtss_mcfc_init_                 000000 constant        entry                    external dcl 6-125
gtss_read_starCFP_              000000 constant        entry                    external dcl 6-140
gtss_read_starCFP_$last_os      000000 constant        entry                    external dcl 6-141
gtss_run_subsystem_             000000 constant        entry                    external dcl 6-142
gtss_run_subsystem_$finish      000000 constant        entry                    external dcl 6-143
gtss_run_subsystem_$restor      000000 constant        entry                    external dcl 6-144
gtss_run_subsystem_$restor_perm 000000 constant        entry                    external dcl 6-145
gtss_set_slave_                 000000 constant        entry                    external dcl 6-146
gtss_set_slave_$load_bar        000000 constant        entry                    external dcl 6-147
gtss_starCF_$FILE                      external static structure                level 1 dcl 8-12
gtss_update_safe_store_         000000 constant        entry                    external dcl 6-148
gtss_verify_access_             000000 constant        entry                    external dcl 6-149
gtss_verify_access_$check_forced_access
                                000000 constant        entry                    external dcl 6-150
gtss_write_starCFP_             000000 constant        entry                    external dcl 6-151
ioa_$nnl                        000000 constant        entry                    external dcl 398
iox_$get_line                   000000 constant        entry                    external dcl 399
lbx                                    internal static fixed bin(17,0)          initial dcl 3-42
lpx                                    internal static fixed bin(17,0)          initial dcl 3-42
mc                                     based           structure                level 1 dcl 3-12
mcp                                    automatic       pointer                  dcl 3-10
rtrim                                                  builtin function         dcl 416
sbx                                    internal static fixed bin(17,0)          initial dcl 3-42
scu                                    based           structure                level 1 dcl 3-56
scup                                   automatic       pointer                  dcl 3-54
scux                                   based           structure                level 1 dcl 3-207
spx                                    internal static fixed bin(17,0)          initial dcl 3-42

NAMES DECLARED BY EXPLICIT CONTEXT.
after_asterisk                  000507 constant        label                    dcl 128 ref 192 212
check_for_command               001201 constant        label                    dcl 231
fin                             001531 constant        label                    dcl 295 ref 223 304
gtss_build_                     000143 constant        entry                    external dcl 15
init_RECORD                     001661 constant        entry                    internal dcl 332 ref 68 316 365
next_asterisk                   000461 constant        label                    dcl 118 ref 92
next_line                       000373 constant        label                    dcl 94 ref 137 155 244 282 298 330
reinput                         000745 constant        label                    dcl 184 set ref 206
restart                         000343 constant        label                    dcl 88 ref 78
write_SYstarstar                001677 constant        entry                    internal dcl 341 ref 100 235 300

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addrel                                                 builtin function         ref 326 327
fixed                                                  builtin function         ref 56 56 351 351
hbound                                                 builtin function         ref 97 97 185 313 351 351 351 351
length                                                 builtin function         ref 103 104 105 201 201 220 221 222
mod                                                    builtin function         ref 320
null                                                   builtin function         ref 194 194 405 409
string                                                 builtin function         ref 233
unspec                                                 builtin function         ref 67
verify                                                 builtin function         ref 293

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      2470        2574    2071        2500
Length      3204    2071       104         373     377           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gtss_build_                         330 external procedure  is an external procedure.  
on unit on line 75                   84 on unit             enables or reverts conditions.  
on unit on line 76                   64 on unit               
on unit on line 92                   64 on unit               
begin block on line 257                 begin block         shares stack frame of external procedure gtss_build_.  
init_RECORD                             internal procedure  shares stack frame of external procedure gtss_build_.  
write_SYstarstar                        internal procedure  shares stack frame of external procedure gtss_build_.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gtss_build_              000100 pound_sign_cmd              gtss_build_
                         000101 bytes_input                 gtss_build_
                         000102 bytes_read                  gtss_build_
                         000103 code                        gtss_build_
                         000112 i                           gtss_build_
                         000113 in_pound_sign_build         gtss_build_
                         000114 in_edit                     gtss_build_
                         000115 j                           gtss_build_
                         000116 l                           gtss_build_
                         000117 line_numb_len               gtss_build_
                         000120 line_numb_ptr               gtss_build_
                         000122 p                           gtss_build_
                         000124 p4                          gtss_build_
                         000126 p8                          gtss_build_
                         000144 rx                          gtss_build_
                         000145 star_count                  gtss_build_
                         000146 status                      gtss_build_
                         000147 tdw                         gtss_build_
                         000150 tw                          gtss_build_
                         000151 wd_name                     gtss_build_
                         000161 p3space                     gtss_build_
                         000162 p7space                     gtss_build_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ent_var        call_ext_out_desc   call_ext_out        return_mac          tra_ext_1           mdfx1
signal_op           enable_op           ext_entry           int_entry           search_eis

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      cu_$cl                        cu_$cp                        expand_pathname_
get_wdir_                     gtss_CFP_break_               gtss_ascii_bcd_
gtss_drl_callss_$callss_pound_sign_comd                     gtss_fix_tty_modes_           gtss_ios_io_
ioa_                          iox_$control

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$end_of_info      error_table_$long_record      gse_ext_$drm_rule             gse_ext_$modes
gse_ext_$umc_name             gtss_SYstarstar_$FILE         gtss_ext_$CFP_bits            gtss_ext_$SYstarstar_file_no
gtss_ext_$bad_drl_rtrn        gtss_ext_$get_line            gtss_ext_$last_k_was_out      gtss_ext_$put_chars
gtss_ext_$restart_from_pi     gtss_ext_$stack_level_        gtss_prgdes_ext_$edbn         gtss_ust_ext_$ust
iox_$user_input               iox_$user_output




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     15 000142       405 000150       409 000152        55 000153        56 000154        57 000173        60 000201
     61 000203        62 000204        63 000205        64 000207        67 000212        68 000216        69 000222
     70 000224        71 000225        73 000226        75 000232        76 000246        77 000267        78 000274
     79 000301        80 000302        82 000305        83 000314        84 000320        85 000332        86 000337
     87 000340        88 000343        89 000344        90 000353        92 000354        94 000373        97 000374
    100 000412       103 000413       104 000421       105 000425       106 000431       107 000433       110 000434
    118 000461       119 000462       120 000466       125 000506       128 000507       130 000510       131 000515
    132 000517       133 000522       134 000524       135 000554       136 000560       137 000561       139 000562
    140 000564       141 000573       142 000575       143 000577       145 000600       146 000607       147 000611
    149 000613       151 000614       152 000616       153 000646       154 000652       155 000653       157 000654
    158 000656       159 000665       160 000667       161 000671       162 000673       164 000674       165 000703
    166 000705       167 000707       170 000711       172 000715       178 000733       181 000742       182 000743
    184 000745       185 000746       191 001002       192 001004       193 001007       194 001011       201 001043
    206 001064       208 001065       209 001117       212 001122       214 001124       215 001126       216 001133
    217 001141       218 001143       220 001144       221 001146       222 001152       223 001156       226 001157
    227 001161       231 001201       232 001202       233 001204       234 001210       235 001212       236 001213
    238 001214       239 001217       240 001221       241 001225       242 001241       243 001243       244 001245
    256 001246       257 001247       262 001274       263 001320       268 001333       271 001336       272 001371
    273 001373       275 001423       277 001426       278 001447       280 001450       282 001470       285 001471
    287 001502       289 001506       291 001512       293 001516       294 001530       295 001531       296 001532
    297 001534       298 001535       300 001536       301 001537       302 001542       304 001543       310 001553
    311 001555       313 001561       314 001570       315 001600       316 001601       318 001603       319 001612
    320 001615       321 001621       322 001626       323 001630       324 001632       325 001636       326 001640
    327 001645       328 001654       330 001660       332 001661       336 001663       337 001665       338 001676
    341 001677       344 001700       346 001707       347 001713       348 001715       349 001724       350 001731
    351 001734       358 001766       359 001770       361 002024       365 002027       366 002033       367 002035


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
