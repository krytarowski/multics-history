	COMPILATION LISTING OF SEGMENT gtss_drl_prgdes_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/10/84  1242.5 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   *                                                         *
        4*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        5*   *                                                         *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 /* *************************************************************
       10*   *						   *
       11*   * Copyright (c) 1979 by Honeywell Information Systems, Inc. *
       12*   *						   *
       13*   ************************************************************* */
       14 gtss_drl_prgdes_: proc (mcpp, increment);
       15 
       16 /* *	gtss move program descriptor information to caller.
       17*
       18*	Authors:	Robert J. Grimes	Created
       19*		Albert N. Kepner	  1978
       20*		Robert M. May
       21*		David B. Ward
       22*   * */
       23 dcl  mcpp ptr parm;
       24 dcl  increment fixed bin parm;
       25 	mcp = mcpp;
       26 
       27 /* *
       28*
       29*   DRL PRGDES, PASS PROGRAM DESCRIPTOR TO SUBSYSTEM (octal 65)
       30*
       31*
       32*   8_________1_6_____________________
       33*
       34*   DRL      PRGDES
       35*   ASCII    1,ssname
       36*   ZERO     L(buf),0
       37*
       38*   (See TSS SYSTEM PROGRAMMER'S
       39*   REFERENCE MANUAL DD17C, Rev. 0, July 1976
       40*   Page 3-19)
       41*
       42**/
       43 
       44 	increment = 2 ;				/* Two arguments */
       45 	scup = addr (mc.scu);
       46 	gseg = gtss_ext_$gtss_slave_area_seg (gtss_ext_$stack_level_);
       47 	arg_list_ptr = addrel (gseg, fixed (scu.ilc)+1);	/* get addres of arg_list */
       48 
       49 /* *	Obtain pointer to caller's buffer.	* */
       50 	if (fixed (L_buf, 18)+8) > fixed (gtss_ust.lsize.limit, 18) then do;
       51 	     call gtss_abort_subsystem_ (mcp,
       52 		"gtss_drl_prgdes_",
       53 		4,
       54 		"DRL_PRGDES: Buffer outside memory at (^6o)",
       55 		fixed (scu.ilc, 18));
       56 	     return;
       57 	end;
       58 	buf_ptr = addrel (gseg, L_buf);
       59 
       60 	addr (A_reg) -> b36 = "0"b;			/* A register zero as default. */
       61 
       62 /* *	Look up callers subsystem name.	* */
       63 	sub_system = ssname;			/* Local value. */
       64 	do i = 1 to hbound (gtss_prgdes_ext_$prgdes, 1);
       65 	     if sub_system = ss_name (i) then do;	/* Found. */
       66 		buf = first_9_words (i);
       67 
       68 /* *	Examine name of first primitive.	* */
       69 
       70 /* Locate command language for this subsystem */
       71 		cmd_list_len = gtss_prgdes_ext_$prgdes (i).cmd_lang_len;
       72 		cmd_list_ptr = addr (gtss_prgdes_ext_$primitives
       73 		     (gtss_prgdes_ext_$prgdes (i).cmd_lang_offset));
       74 		cmd_prim_list_ptr = addrel (cmd_list_ptr, 2*cmd_list_len);
       75 
       76 /* get 1st primitive */
       77 		primitive = gtss_prgdes_ext_$primitives (cmd_list_len+1);
       78 		if primitive_overlay.prim_op = 1 then	/* CALLP primitive. */
       79 		     A_reg =
       80 		     gtss_prgdes_ext_$prgdes (callp_desc).ss_name;
       81 		return;
       82 	     end;
       83 	end;
       84 
       85 /* *	Not found.	* */
       86 	buf_9_zeroes = 0;
       87 	return;
       88 
       89 /* *	Variables for gtss_drl_prgdes_:
       90*   IDENTIFIER		ATTRIBUTES	* */
       91 dcl  addrel builtin;
       92 dcl  arg_list_ptr ptr init(null());
       93 dcl  A_reg char (4)aligned based (addr (mc.regs.a));
       94 dcl  b36 bit (36)aligned based;
       95 dcl  buf char (36)aligned based (buf_ptr);
       96 dcl  buf_9_zeroes (9)fixed bin (24)aligned based (buf_ptr);
       97 dcl  buf_ptr ptr init(null());
       98 dcl  code fixed bin (35);
       99 dcl  gseg ptr init(null());
      100 dcl  i fixed bin (24);
      101 dcl  status fixed bin (24);
      102 dcl  sub_system char (4)aligned;
      103 
      104 dcl 1 arg_list aligned based (arg_list_ptr)
      105      , 2 ssname char (4)
      106      , 2 L_buf bit (18)unal
      107      , 2 zero fixed bin (17)unal
      108      ;
      109 
  1     1 /* BEGIN INCLUDE FILE gtss_ext_.incl.pl1 */
  1     2 /*
  1     3*  Created: (Wardd Multics)  05/20/78 1307.6 mst Sat 
  1     4*  Modified: Ward            1981     add suspended_process dcl
  1     5*  Modified: Ron Barstad  83-07-21  Fixed level number on mcfc to 3
  1     6*  Modified: Ron Barstad  83-07-25  Fixed derail range in statistics to 4js3 number
  1     7**/
  1     8 dcl  gtss_ext_$aem                   fixed bin static ext	/* >0 Print "additional" error information. */;
  1     9 dcl  gtss_ext_$bad_drl_rtrn          static ext label	/* Default for drl_rtrn. */;
  1    10 dcl  gtss_ext_$db                    (72)bit(1)unal static ext;
  1    11 dcl  gtss_ext_$deferred_catalogs_ptr ptr ext;
  1    12 dcl  gtss_ext_$dispose_of_drl        static ext label	/* quit handlers for some derails use this label to abort */;
  1    13 dcl  gtss_ext_$drl_rtrn              (4)static ext label	/* where to return at subsystem end */;
  1    14 dcl  gtss_ext_$drm_path              char(168)static ext	/* gtss_expand_pathname_stores drm_path */;
  1    15 dcl  gtss_ext_$drun_jid              char (5) static ext	/* valid only for DRUN executing under absentee */;
  1    16 dcl  gtss_ext_$event_channel         fixed bin (71) static ext	/* used for DABT signals */;
  1    17 dcl  gtss_ext_$finished              static ext label	/* Return to gtss for normal conclusion. */;
  1    18 dcl  gtss_ext_$gdb_name              char(8)ext	/* Name H* module to debug. */;
  1    19 dcl  gtss_ext_$get_line              entry(ptr,ptr,fixed bin(21),fixed bin(21),fixed bin(35))variable ext /* Build mode input procedure. */;
  1    20 dcl  gtss_ext_$gtss_slave_area_seg   (4) ext static ptr	/* pointer to gtss slave area segment */;
  1    21 dcl  gtss_ext_$hcs_work_area_ptr     ptr ext static		/* Temp seg for acl lists. */;
  1    22 dcl  gtss_ext_$homedir               char (64) static ext /* user's home dir */;
  1    23 dcl  gtss_ext_$last_k_was_out        bit (1)aligned ext static	/* "1"b => last tty output was output. */;
  1    24 dcl  gtss_ext_$pdir                  char (168) varying ext static	/* pathname of process directory */;
  1    25 dcl  gtss_ext_$popup_from_pi         static ext label	/* transfer to this label after pi simulates popup primitive */;
  1    26 dcl  gtss_ext_$process_type          fixed bin (17) static ext;
  1    27 dcl  gtss_ext_$put_chars             entry(ptr,ptr,fixed bin(24),fixed bin(35)) variable ext	/* Terminal output procedure. */;
  1    28 dcl  gtss_ext_$restart_from_pi       static ext label	/* transfer to this label after pi restores machine conditions */;
  1    29 dcl  gtss_ext_$restart_seg_ptr       ptr static ext	/* points to DRUN restart file when exec under absentee */;
  1    30 dcl  gtss_ext_$sig_ptr               ext static ptr	/* saved ptr to signal_ */;
  1    31 dcl  gtss_ext_$stack_level_          fixed bin ext static;
  1    32 dcl  gtss_ext_$suspended_process     bit(1) ext static;
  1    33 dcl  gtss_ext_$SYstarstar_file_no    fixed bin (24) static ext;
  1    34 dcl  gtss_ext_$user_id               char (26)var ext;
  1    35 dcl  gtss_ext_$work_area_ptr         ptr ext;
  1    36 
  1    37 dcl  1 gtss_ext_$CFP_bits aligned static external
  1    38      , 3 no_input_yet bit (1) unaligned         /* used in gtss_CFP_input_, gtss_read_starCFP_ */
  1    39      , 3 rtn_bits bit (4) unaligned             /* used in gtss_CFP_input_, gtss_CFP_output_ */
  1    40      , 3 cpos_called bit (1) unaligned          /* used in gtss_CFP_input_, gtss_drl_t_cfio_, gtss_abandon_CFP_ */
  1    41      , 3 cout_called bit (1) unaligned          /* used in gtss_read_starCFP_, gtss_abandon_CFP_ */
  1    42      , 3 build_mode bit (1) unaligned	        /* used in gtss_build_, gtss_dsd_process_ */
  1    43      ;
  1    44 
  1    45 dcl 1 gtss_ext_$com_reg aligned static ext,
  1    46        3 tsdmx,
  1    47          4 dst fixed bin (18) unsigned unaligned,
  1    48          4 dit fixed bin (18) unsigned unaligned,
  1    49        3 tsdpt fixed bin (36) unsigned unaligned,
  1    50        3 tsddt fixed bin (36) unsigned unaligned,
  1    51        3 tsdid bit (72) unaligned,
  1    52        3 tsdsd bit (36) unaligned,
  1    53        3 tsdst fixed bin (36) unsigned unaligned,
  1    54        3 tsdjb fixed bin (35) unaligned,
  1    55        3 tsdgt,
  1    56          4 ust_loc fixed bin (18) unsigned unaligned,
  1    57          4 gating_ctl fixed bin (18) unsigned unaligned,
  1    58        3 tcdfr bit (36) unaligned;
  1    59 
  1    60 dcl 1 gtss_ext_$flags aligned static ext
  1    61      , 3 dispose_of_drl_on_pi	bit (01) unal	/* 1 => drl that should be aborted after quit-pi sequence */
  1    62      , 3 drl_in_progress	bit (01) unal	/* 1 => drl handler executing; 0 => gcos code executing */
  1    63      , 3 popup_from_pi	bit (01) unal	/* 1 => derail processor will simulate Gcos break instead of returning */
  1    64      , 3 unfinished_drl	bit (01) unal	/* 1 => subsystem is handling breaks and quit was raised during a drl */
  1    65      , 3 ss_time_limit_set	bit (01) unal	/* 1 => exec time limit set for subsystem */
  1    66      , 3 timer_ranout	bit (01) unal	/* 1 => user is executing timer runout code */
  1    67      , 3 gtss_com_err_sw      bit (01) unal       /* 1 => stop com_err_ string from going to terminal */   
  1    68      , 3 available		bit (65) unal
  1    69      ;
  1    70 
  1    71 
  1    72 dcl 1 gtss_ext_$statistics aligned static ext,		/* Derail usage statistics */
  1    73       3 total_time (-10:71)fixed bin (71),
  1    74       3 count (-10:71)fixed bin (17);
  1    75 
  1    76 /* 	Declaration of Available File Table
  1    77*   */
  1    78 dcl 1 gtss_ext_$aft aligned ext,			/* aft structure */
  1    79 
  1    80       3 start_list (0:102) fixed bin (24),		/* >0 => 1st aft_entry row to start of next entry chain. */
  1    81 
  1    82       3 aft_entry (20),
  1    83         4 altname char (8),				/* altname name for attaching this file */
  1    84         4 next_entry fixed bin (24),			/* Next aft_entry in hash chain. */
  1    85         4 previous_add fixed bin (24),			/* Previously added entry. */
  1    86         4 next_add fixed bin (24),			/* Entry added after this one. */
  1    87         4 used bit (1) unal,				/* "1"b => aft_entry contains AFT value. */
  1    88         4 forced bit(1) unal,				/* "1"b => gtss_verify_access_ forced access on this file. */
  1    89 
  1    90       3 free_space fixed bin (24),			/* Index of start of free space list for aft entries. */
  1    91       3 first_added fixed bin (24),			/* >0  => start of chain in add order. */
  1    92       3 last_added fixed bin (24)			/* >0 => end of chain in added order. */;
  1    93 
  1    94 dcl  gtss_ext_$ppt                   ptr ext /*  switch name for tapein drl */;
  1    95 /**	Data structure to provide access to installed
  1    96*   subsystems fast library load.
  1    97*   **/
  1    98 dcl 1 gtss_ext_$fast_lib aligned ext
  1    99      , 3 fast_lib_fcb ptr				/* Pointer to msf fcb.	*/
  1   100      , 3 fast_lib_ncp fixed bin (24)			/* Number of components. */
  1   101      , 3 comp_ptr (0:9)ptr				/* Pointer to component. */
  1   102      , 3 comp_wds (0:9)fixed bin (24)			/* Component length (words). */
  1   103      ;
  1   104 
  1   105 /* Pointers to segments to regulate multipler
  1   106*   callers to files. Same segments are used to regulate
  1   107*   all simulator callers.
  1   108**/
  1   109 dcl 1 gtss_ext_$mcfc	aligned ext,
  1   110       3 multics_lock_id	bit(36),
  1   111       3 wait_time		fixed bin,
  1   112       3 files_ptr		ptr,
  1   113       3 names_ptr		ptr,
  1   114       3 callers_ptr		(0:3)ptr
  1   115 ;
  1   116 
  1   117 /*   END INCLUDE FILE gtss_ext_.incl.pl1 */
      110 
      111 
  2     1 /*  */
  2     2 /* BEGIN INCLUDE FILE  mc.incl.pl1   Created Dec 72 for 6180 - WSS. */
  2     3 /* Modified 06/07/76 by Greenberg for mc.resignal */
  2     4 /* Modified 07/07/76 by Morris for fault register data */
  2     5 /* Modified 08/28/80 by J. A. Bush for the DPS8/70M CVPU */
  2     6 /* Modified '82 to make values constant */
  2     7 
  2     8 /* words 0-15 pointer registers */
  2     9 
  2    10 dcl  mcp ptr;
  2    11 
  2    12 dcl 1 mc based (mcp) aligned,
  2    13     2 prs (0:7) ptr,				/* POINTER  REGISTERS */
  2    14    (2 regs,					/* registers */
  2    15       3 x (0:7) bit (18),				/* index registers */
  2    16       3 a bit (36),					/* accumulator */
  2    17       3 q bit (36),					/* q-register */
  2    18       3 e bit (8),					/* exponent */
  2    19       3 pad1 bit (28),
  2    20       3 t bit (27),					/* timer register */
  2    21       3 pad2 bit (6),
  2    22       3 ralr bit (3),				/* ring alarm register */
  2    23 
  2    24     2 scu (0:7) bit (36),
  2    25 
  2    26     2 mask bit (72),				/* mem controller mask at time of fault */
  2    27     2 ips_temp bit (36),				/* Temporary storage for IPS info */
  2    28     2 errcode fixed bin (35),				/* fault handler's error code */
  2    29     2 fim_temp,
  2    30       3 unique_index bit (18) unal,			/* unique index for restarting faults */
  2    31       3 resignal bit (1) unal,			/* recompute signal name with fcode below */
  2    32       3 fcode bit (17) unal,				/* fault code used as index to FIM table and SCT */
  2    33     2 fault_reg bit (36),				/* fault register */
  2    34     2 pad2 bit (1),
  2    35     2 cpu_type fixed bin (2) unsigned,			/* L68 = 0, DPS8/70M = 1 */
  2    36     2 ext_fault_reg bit (15),				/* extended fault reg for DPS8/70M CPU */
  2    37     2 fault_time bit (54),				/* time of fault */
  2    38 
  2    39     2 eis_info (0:7) bit (36)) unaligned;
  2    40 
  2    41 
  2    42 dcl (apx fixed bin init (0),
  2    43      abx fixed bin init (1),
  2    44      bpx fixed bin init (2),
  2    45      bbx fixed bin init (3),
  2    46      lpx fixed bin init (4),
  2    47      lbx fixed bin init (5),
  2    48      spx fixed bin init (6),
  2    49      sbx fixed bin init (7)) internal static options (constant);
  2    50 
  2    51 
  2    52 
  2    53 
  2    54 dcl  scup ptr;
  2    55 
  2    56 dcl 1 scu based (scup) aligned,			/* SCU DATA */
  2    57 
  2    58 
  2    59 /*	WORD (0)		*/
  2    60 
  2    61    (2 ppr,					/* PROCEDURE POINTER REGISTER */
  2    62       3 prr bit (3),				/* procedure ring register */
  2    63       3 psr bit (15),				/* procedure segment register */
  2    64       3 p bit (1),					/* procedure privileged bit */
  2    65 
  2    66     2 apu,					/* APPENDING UNIT STATUS */
  2    67       3 xsf bit (1),				/* ext seg flag - IT modification */
  2    68       3 sdwm bit (1),				/* match in SDW Ass. Mem. */
  2    69       3 sd_on bit (1),				/* SDW Ass. Mem.  ON */
  2    70       3 ptwm bit (1),				/* match in PTW Ass. Mem. */
  2    71       3 pt_on bit (1),				/* PTW Ass. Mem.  ON */
  2    72       3 pi_ap bit (1),				/* Instr Fetch or Append cycle */
  2    73       3 dsptw bit (1),				/* Fetch of DSPTW */
  2    74       3 sdwnp bit (1),				/* Fetch of SDW non paged */
  2    75       3 sdwp bit (1),				/* Fetch of SDW paged */
  2    76       3 ptw bit (1),				/* Fetch of PTW */
  2    77       3 ptw2 bit (1),				/* Fetch of pre-paged PTW */
  2    78       3 fap bit (1),				/* Fetch of final address paged */
  2    79       3 fanp bit (1),				/* Fetch of final address non-paged */
  2    80       3 fabs bit (1),				/* Fetch of final address absolute */
  2    81 
  2    82     2 fault_cntr bit (3),				/* number of retrys of EIS instructions */
  2    83 
  2    84 
  2    85 /*	WORD (1)		*/
  2    86 
  2    87     2 fd,						/* FAULT  DATA */
  2    88       3 iro bit (1),				/* illegal ring order */
  2    89       3 oeb bit (1),				/* out of execute bracket */
  2    90       3 e_off bit (1),				/* no execute */
  2    91       3 orb bit (1),				/* out of read bracket */
  2    92       3 r_off bit (1),				/* no read */
  2    93       3 owb bit (1),				/* out of write bracket */
  2    94       3 w_off bit (1),				/* no write */
  2    95       3 no_ga bit (1),				/* not a gate */
  2    96       3 ocb bit (1),				/* out of call bracket */
  2    97       3 ocall bit (1),				/* outward call */
  2    98       3 boc bit (1),				/* bad outward call */
  2    99       3 inret bit (1),				/* inward return */
  2   100       3 crt bit (1),				/* cross ring transfer */
  2   101       3 ralr bit (1),				/* ring alarm register */
  2   102       3 am_er bit (1),				/* associative memory fault */
  2   103       3 oosb bit (1),				/* out of segment bounds */
  2   104       3 paru bit (1),				/* processor parity upper */
  2   105       3 parl bit (1),				/* processor parity lower */
  2   106       3 onc_1 bit (1),				/* op not complete type 1 */
  2   107       3 onc_2 bit (1),				/* op not complete type 2 */
  2   108 
  2   109     2 port_stat,					/* PORT  STATUS */
  2   110       3 ial bit (4),				/* illegal action lines */
  2   111       3 iac bit (3),				/* illegal action channel */
  2   112       3 con_chan bit (3),				/* connect channel */
  2   113 
  2   114     2 fi_num bit (5),				/* (fault/interrupt)  number */
  2   115     2 fi_flag bit (1),				/*  1 => fault,  0 => interrupt  */
  2   116 
  2   117 
  2   118 /*	WORD (2)		*/
  2   119 
  2   120     2 tpr,					/* TEMPORARY POINTER REGISTER */
  2   121       3 trr bit (3),				/* temporary ring register */
  2   122       3 tsr bit (15),				/* temporary segment register */
  2   123 
  2   124     2 pad2 bit (9),
  2   125 
  2   126     2 cpu_no bit (3),				/* CPU number */
  2   127 
  2   128     2 delta bit (6),				/* tally modification DELTA */
  2   129 
  2   130 
  2   131 /*	WORD (3)		*/
  2   132 
  2   133     2 word3 bit (18),
  2   134 
  2   135     2 tsr_stat,					/* TSR STATUS for 1,2,&3 word instructions */
  2   136       3 tsna,					/* Word 1 status */
  2   137         4 prn bit (3),				/* Word 1  PR  number */
  2   138         4 prv bit (1),				/* Word 1  PR  valid bit */
  2   139       3 tsnb,					/* Word 2  status */
  2   140         4 prn bit (3),				/* Word 2  PR  number */
  2   141         4 prv bit (1),				/* Word 2  PR  valid bit */
  2   142       3 tsnc,					/* Word 3  status */
  2   143         4 prn bit (3),				/* Word 3  PR  number */
  2   144         4 prv bit (1),				/* Word 3  PR  valid bit */
  2   145 
  2   146     2 tpr_tbr bit (6),				/* TPR.TBR  field */
  2   147 
  2   148 
  2   149 /* 	WORD (4)		*/
  2   150 
  2   151     2 ilc bit (18),					/* INSTRUCTION  COUNTER */
  2   152 
  2   153     2 ir,						/* INDICATOR  REGISTERS */
  2   154       3 zero bit (1),				/* zero indicator */
  2   155       3 neg bit (1),				/* negative indicator */
  2   156       3 carry bit (1),				/* carryry indicator */
  2   157       3 ovfl bit (1),				/* overflow indicator */
  2   158       3 eovf bit (1),				/* eponent overflow */
  2   159       3 eufl bit (1),				/* exponent underflow */
  2   160       3 oflm bit (1),				/* overflow mask */
  2   161       3 tro bit (1),				/* tally runout */
  2   162       3 par bit (1),				/* parity error */
  2   163       3 parm bit (1),				/* parity mask */
  2   164       3 bm bit (1),					/* ^bar mode */
  2   165       3 tru bit (1),				/* truncation mode */
  2   166       3 mif bit (1),				/* multi-word instruction mode */
  2   167       3 abs bit (1),				/* absolute mode */
  2   168       3 hex bit (1),				/* hexadecimal exponent mode */
  2   169       3 pad bit (3),
  2   170 
  2   171 
  2   172 /*	WORD (5)		*/
  2   173 
  2   174     2 ca bit (18),					/* COMPUTED  ADDRESS */
  2   175 
  2   176     2 cu,						/* CONTROL UNIT STATUS */
  2   177       3 rf bit (1),					/* on first cycle of repeat instr */
  2   178       3 rpt bit (1),				/* repeat instruction */
  2   179       3 rd bit (1),					/* repeat double instruction */
  2   180       3 rl bit (1),					/* repeat link instruciton */
  2   181       3 pot bit (1),				/* IT  modification */
  2   182       3 pon bit (1),				/* return type instruction */
  2   183       3 xde bit (1),				/* XDE from Even location */
  2   184       3 xdo bit (1),				/* XDE from Odd  location */
  2   185       3 poa bit (1),				/* operation preparation */
  2   186       3 rfi bit (1),				/* tells CPU to refetch instruction */
  2   187       3 its bit (1),				/* ITS modification */
  2   188       3 if bit (1),					/* fault occured during instruction fetch */
  2   189 
  2   190     2 cpu_tag bit (6)) unaligned,			/* computed tag field */
  2   191 
  2   192 
  2   193 /*	WORDS (6,7)	*/
  2   194 
  2   195     2 even_inst bit (36),				/* even instruction of faulting pair */
  2   196 
  2   197     2 odd_inst bit (36);				/* odd  instruction of faulting pair */
  2   198 
  2   199 
  2   200 
  2   201 
  2   202 
  2   203 
  2   204 /*	ALTERNATE   SCU  DECLARATION		*/
  2   205 
  2   206 
  2   207 dcl 1 scux based (scup) aligned,
  2   208 
  2   209    (2 pad0 bit (36),
  2   210 
  2   211     2 fd,						/* GROUP II  FAULT DATA */
  2   212       3 isn bit (1),				/* illegal segment number */
  2   213       3 ioc bit (1),				/* illegal op  code  */
  2   214       3 ia_am bit (1),				/* illegal address - modifier */
  2   215       3 isp bit (1),				/* illegal slave  procedure */
  2   216       3 ipr bit (1),				/* illegal procedure */
  2   217       3 nea bit (1),				/* non existent address */
  2   218       3 oobb bit (1),				/* out of bounds */
  2   219       3 pad bit (29),
  2   220 
  2   221     2 pad2 bit (36),
  2   222 
  2   223     2 pad3a bit (18),
  2   224 
  2   225     2 tsr_stat (0:2),				/* TSR  STATUS  as an  ARRAY */
  2   226       3 prn bit (3),				/* PR  number */
  2   227       3 prv bit (1),				/* PR  valid bit */
  2   228 
  2   229     2 pad3b bit (6)) unaligned,
  2   230 
  2   231     2 pad45 (0:1) bit (36),
  2   232 
  2   233     2 instr (0:1) bit (36);				/* Instruction ARRAY */
  2   234 
  2   235 
  2   236 
  2   237 /*  END INCLUDE FILE   mc.incl.pl1 */
      112 
      113 
  3     1 /* BEGIN INCLUDE FILE gtss_primitives_.incl.pl1 */
  3     2 /*
  3     3*  Created:  Kepner  04/12/78
  3     4* Modified:  Ron Barstad  82-08-11  to change size of primitives array for 4js3
  3     5* Modified:  Ron Barstad  83-05-19  change size of primitives for update 7
  3     6**/
  3     7 
  3     8 /* This array contains the command language lists and
  3     9*   primitive sequences. */
  3    10 
  3    11 dcl  gtss_prgdes_ext_$primitives (0:1070) bit (36) aligned ext;
  3    12 
  3    13 /* This variable stores the current primitive */
  3    14 
  3    15 dcl  primitive bit (36);
  3    16 
  3    17 /* This overlay structure is used for the interpretation of most primitives.
  3    18*
  3    19*   prim_address is the offset in gtss_prgdes_ext_$primitives of a
  3    20*   primitive that may possibly be transferred to.
  3    21**/
  3    22 dcl 1 primitive_overlay aligned based (addr (primitive)),
  3    23     2 prim_address fixed bin (17) unal,
  3    24     2 switchword_bit fixed bin (11) unal,
  3    25     2 prim_op fixed bin (5) unal;
  3    26 
  3    27 
  3    28 /* This overlay structure is used for the interpretation of
  3    29*   the CALLP primitive.
  3    30*
  3    31*   callp_desc is the index in gtss_prgdes_ext_$prgdes of the program
  3    32*   descriptor being called.
  3    33**/
  3    34 dcl 1 callp_overlay aligned based (addr (primitive)),
  3    35     2 callp_desc fixed bin (17) unal,
  3    36     2 fill bit (5) unal,
  3    37     2 switchword_flag bit (1) unal,
  3    38     2 switch_ov_bit bit (6) unal,
  3    39     2 prim_ov_op fixed bin (5) unal;
  3    40 
  3    41 
  3    42 /*
  3    43*   " The    following     two     structures,     command_list     and
  3    44*   " cmd_primitive_list,  are used in scanning for command language of
  3    45*   " the current subsystem.  command_list gives  the command name  and
  3    46*   " number of valid characters (up to 4) in the command name for each
  3    47*   " command.   Once  a  particular command name has been matched, the
  3    48*   " corresponding entry in cmd_primitive_list  gives  the  offset  in
  3    49*   " gtss_prgdes_ext_$primitives  of  the  start  of  the  primitive  list to
  3    50*   " interpret this command.  The  last  entry  in  cmd_primitive_list
  3    51*   " gives   the   offset  in  gtss_prgdes_ext_$primitives  of  the  start-up
  3    52*   " primitive sequence for the current subsystem.  In  order  to  use
  3    53*   " these structures for the subsystem represented by the Ith program
  3    54*   " descriptor the following calculations are needed:
  3    55*   "
  3    56*   "           cmd_list_len = gtss_prgdes_ext_$prgdes(I).cmd_lang_len;
  3    57*   "           cmd_list_ptr = addr(gtss_prgdes_ext_$primitives
  3    58*   "                (gtss_prgdes_ext_$prgdes(I).cmd_lang_offset));
  3    59*   "           cmd_prim_list_ptr = addrel(cmd_list_ptr,2*cmd_list_len);
  3    60*   "
  3    61*   " Subsystems  which   have the common command list or BASIC command
  3    62*   " list bit set in their program descriptor make  use  of  a  common
  3    63*   " command  list  near  the  beginning  of  gtss_prgdes_ext_$primitives  in
  3    64*   " addition to their private command lists  (if  any).   The  common
  3    65*   " command  list  starts  in the third word of gtss_prgdes_ext_$primitives.
  3    66*   " The   number   of   commands   in   the   list   is   given    by
  3    67*   " gtss_prgdes_ext_$common_cmd_num.    Subsystems   which  have  the  BASIC
  3    68*   " command list bit set use only the  first  gtss_prgdes_ext_$basic_cmd_num
  3    69*   " commands of the common command list.
  3    70**/
  3    71 dcl 1 command_list (cmd_list_len) aligned based (cmd_list_ptr),
  3    72     2 cmd_word char (4),
  3    73     2 cmd_len fixed bin (17);
  3    74 
  3    75 dcl 1 cmd_primitive_list (cmd_list_len+1) aligned based (cmd_prim_list_ptr),
  3    76     2 primitive_ptr fixed bin (17) unal,
  3    77     2 filler fixed bin (17) unal;
  3    78 
  3    79 dcl  cmd_list_ptr ptr init(null());
  3    80 dcl  cmd_prim_list_ptr ptr init(null());
  3    81 dcl  cmd_list_len fixed bin (17);
  3    82 
  3    83 /* Number of commands of the common command list used for
  3    84*   BASIC and various other subsystems which specify the BASIC
  3    85*   parameter bit in their program descriptor.
  3    86**/
  3    87 dcl  gtss_prgdes_ext_$basic_cmd_num fixed bin (17, 0) ext;
  3    88 
  3    89 /* Number of commands in the common command list.
  3    90**/
  3    91 dcl  gtss_prgdes_ext_$common_cmd_num fixed bin (17, 0) ext;
  3    92 
  3    93 /*   END INCLUDE FILE gtss_primitives_.incl.pl1 */
      114 
      115 
  4     1 /* BEGIN INCLUDE FILE gtss_prgdes_.incl.pl1 */
  4     2 /*
  4     3*  Created: Kepner  04/12/78
  4     4*  Modified:  Ron Barstad  82-08-11  to change size of prgdes array for 4js3
  4     5*  Modified:  Ron Barstad  83-05-19  change size of prgdes array for update 7
  4     6**/
  4     7 
  4     8 /*
  4     9*   "     This  structure  describes  the  timesharing  subsystem   program
  4    10*   "     descriptors.
  4    11*   "
  4    12*   "     Anywhere  fixed bin(17) unal appears it should be noted that GCOS
  4    13*   "     can potentially make use of all 18 bits  and  caution  should  be
  4    14*   "     exercised.   These  items  should  be  changed  to  fixed bin(18)
  4    15*   "     usigned unal when this feature is added to the PL/I compiler.
  4    16*   "
  4    17*   "     ss_name  subsystem name
  4    18*   "
  4    19*   "     program_size  actual program size to be used in execution.
  4    20*   "
  4    21*   "     load_size  the size remaining when all leading and trailing zeros
  4    22*   "               have been eliminated. This is used to reduce  the  size
  4    23*   "               of the original copy of the program.
  4    24*   "
  4    25*   "     entry_point  address relative to zero  that  contains  the  first
  4    26*   "               executable instruction.
  4    27*   "
  4    28*   "     parameters  flags defining attributes of the subsystem. The  flag
  4    29*   "               bits  are defined below. Assume bits are numbered 1-18.
  4    30*   "		 1	cache
  4    31*   "		 2	.BSCF
  4    32*   "		 3	special size request
  4    33*   "		 4	drl t.exec permission.
  4    34*   "		 5	drl t.cmov permission
  4    35*   "		 6	special product offering.
  4    36*   "		 7	high use program file,  #p
  4    37*   "		 8	special file switch (perm/temp) allowed.
  4    38*   "		 9	ss not callable at system level.
  4    39*   "		10	subsystem allowed use of get-specific.
  4    40*   "		11	execute permission allowed for file i/o.
  4    41*   "		12	subsystem can read system master catalog.
  4    42*   "		13	basic or databasic
  4    43*   "		14	subsystem uses common command list.
  4    44*   "		15	low use subsystem (# q file)
  4    45*   "		16	subsystem must be patched when loaded.
  4    46*   "		17	master subsystem.
  4    47*   "		18	privileged subsystem.
  4    48*   "
  4    49*   "	seek_address  the word offset in the multisegment file
  4    50*   "		component where the object code for this subsystem is
  4    51*   "		stored.
  4    52*   "
  4    53*   "     initial_load_address  The address of the first  nonzero  word  in
  4    54*   "               the program.
  4    55*   "
  4    56*   "     cmd_lang_offset   The  word  offset   into   gtss_prgdes_ext_$primitives
  4    57*   "               (suitable  for use with addrel) of the command language
  4    58*   "               list for this subsystem.
  4    59*   "
  4    60*   "     cmd_lang_len  Number of command names for this subsystem.
  4    61*   "
  4    62*   "     statistics
  4    63*   "
  4    64*   "     bci_catalog_name  The GECALL name for the subsystem.
  4    65*   "
  4    66*   "	library	an integer which indicates which multisegment file
  4    67*   "		contains the object code for this subsystem.
  4    68*   "
  4    69*   "	component	an integer which indicates which component of the
  4    70*   "		multisegment file contains the object code for this
  4    71*   "		subsystem.
  4    72*   "
  4    73*   "     ss_name_len  The number of nonblank characters in the  subsystem
  4    74*   "		name.
  4    75**/
  4    76 
  4    77 dcl 1 gtss_prgdes_ext_$prgdes (302) aligned ext,
  4    78     2 ss_name char (4) aligned,
  4    79     2 program_size fixed bin (17) unal,
  4    80     2 load_size fixed bin (17) unal,
  4    81     2 entry_point fixed bin (17) unal,
  4    82     2 parameters bit (18) unal,
  4    83     2 seek_address bit(18) unal,
  4    84     2 initial_load_address fixed bin (17) unal,
  4    85     2 cmd_lang_offset fixed bin (17) unal,
  4    86     2 cmd_lang_len fixed bin (17) unal,
  4    87     2 statistics,
  4    88       3 calls fixed bin (17) unal,
  4    89       3 loads fixed bin (17) unal,
  4    90       3 filler (3) bit (36) unal,
  4    91     2 bci_catalog_name bit (36) aligned,
  4    92     2 library fixed bin (17) unal,
  4    93     2 component fixed bin (17) unal,
  4    94     2 ss_name_len fixed bin (17) aligned;
  4    95 
  4    96 
  4    97 
  4    98 /* This overlay structure is used to pass the user visible portion
  4    99*   of the program descriptor to the subsystem via DRL PRGDES. */
  4   100 dcl 1 prgdes_ov (302) aligned based (addr (gtss_prgdes_ext_$prgdes)),
  4   101     2 first_9_words char (36),			/* user visible portion */
  4   102     2 filler char (12);
  4   103 
  4   104 /*   END INCLUDE FILE gtss_prgdes_.incl.pl1 */
      116 
      117 
  5     1 /* BEGIN INCLUDE FILE gtss_entry_dcls.incl.pl1 */
  5     2 /*
  5     3*  Created: (Wardd Multics)  06/30/78 1624.8 mst Fri 
  5     4*  Modified: Ron Barstad  84-02-24  Fixed wrong and obsolete entries
  5     5**/
  5     6 
  5     7 /**  gtss external entry variables.		**/
  5     8 dcl  com_err_                                   entry() options(variable);
  5     9 dcl  gtss_CFP_abort_                            entry options(variable);
  5    10 dcl  gtss_CFP_break_                            entry options(variable);
  5    11 dcl  gtss_CFP_input_                            entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  5    12 dcl  gtss_CFP_output_                           entry (ptr, ptr, fixed bin(21), fixed bin(35));
  5    13 dcl  gtss_abandon_CFP_                          entry options(variable);
  5    14 dcl  gtss_abort_dump_                           entry (fixed bin(18));
  5    15 dcl  gtss_abort_subsystem_                      entry options (variable);
  5    16 dcl  gtss_abort_subsystem_$not_imp              entry (ptr, fixed bin(24));
  5    17 dcl  gtss_abs_login_banner_		        entry() returns(char(*));
  5    18 dcl  gtss_abs_logout_banner_		        entry() returns(char(*));
  5    19 dcl  gtss_abs_$abs_equiv                        entry options(variable);
  5    20 dcl  gtss_abs_$cpu_runout		        entry (ptr, char(4));
  5    21 dcl  gtss_abs_$create_absin                     entry() returns(char(*));
  5    22 dcl  gtss_abs_$dabt_check		        entry (ptr, char(4));
  5    23 dcl  gtss_abs_$get_id                           entry (char(5)) returns(char(19));
  5    24 dcl  gtss_abs_$get_drm                          entry() returns(char(*));
  5    25 dcl  gtss_adjust_size_                          entry (ptr);
  5    26 dcl  gtss_aft_$add                              entry (char(8), fixed bin(24), fixed bin(35));
  5    27 dcl  gtss_aft_$delete                           entry (char(8), fixed bin(24), fixed bin(35));
  5    28 dcl  gtss_aft_$find                             entry (char(8), fixed bin(24), fixed bin(35));
  5    29 dcl  gtss_aft_$initialize                       entry (fixed bin(35));
  5    30 dcl  gtss_ascii_bcd_                            entry (ptr, fixed bin, ptr);
  5    31 dcl  gtss_attributes_mgr_$get                   entry (ptr, fixed bin(35));
  5    32 dcl  gtss_attributes_mgr_$set                   entry (ptr, fixed bin(35));
  5    33 dcl  gtss_bcd_ascii_                            entry (ptr, fixed bin(24), ptr);
  5    34 dcl  gtss_bcd_ascii_$lc                         entry (ptr, fixed bin(24), ptr);
  5    35 dcl  gtss_break_vector_                         entry ();
  5    36 dcl  gtss_break_vector_$drl_in_progress         entry() returns(bit(1));
  5    37 dcl  gtss_break_vector_$status                  entry() returns(bit(1));
  5    38 dcl  gtss_build_                                entry options(variable);
  5    39 dcl  gtss_com_err_                              entry options(variable);
  5    40 dcl  gtss_derail_processor_                     entry (ptr, char(*), ptr, ptr, bit(1) aligned) /* called at fault time instead of signal_ */;
  5    41 dcl  gtss_derail_processor_$set                 entry options(variable);
  5    42 dcl  gtss_dq_$catp                              entry (char (5), ptr, fixed bin (18) unsigned);
  5    43 dcl  gtss_dq_$create                            entry (bit(1));
  5    44 dcl  gtss_dq_$dibp                              entry (char(5), ptr);
  5    45 dcl  gtss_dq_$entries_info		        entry (ptr, fixed bin (18) unsigned, fixed bin (18) unsigned);
  5    46 dcl  gtss_dq_$hdrp                              entry (ptr);
  5    47 dcl  gtss_dq_$mod_js		        entry (char(5), fixed bin (6) unsigned, bit (1));
  5    48 dcl  gtss_dq_$open_exc		        entry (bit(1));
  5    49 dcl  gtss_dq_$open_gen		        entry (bit(1));
  5    50 dcl  gtss_drl_abort_                            entry (ptr, fixed bin);
  5    51 dcl  gtss_drl_addmem_                           entry (ptr, fixed bin);
  5    52 dcl  gtss_drl_callss_                           entry (ptr, fixed bin);
  5    53 dcl  gtss_drl_corfil_                           entry (ptr, fixed bin);
  5    54 dcl  gtss_drl_defil_                            entry (ptr, fixed bin);
  5    55 dcl  gtss_drl_defil_$subr                       entry (ptr, ptr, ptr);
  5    56 dcl  gtss_drl_dio_                              entry (ptr, fixed bin);
  5    57 dcl  gtss_drl_drlimt_                           entry (ptr, fixed bin);
  5    58 dcl  gtss_drl_drlsav_                           entry (ptr, fixed bin);
  5    59 dcl  gtss_drl_filact_                           entry (ptr, fixed bin);
  5    60 dcl  gtss_drl_filsp_                            entry (ptr, fixed bin);
  5    61 dcl  gtss_drl_grow_                             entry (ptr, fixed bin);
  5    62 dcl  gtss_drl_gwake_                            entry (ptr, fixed bin);
  5    63 dcl  gtss_drl_jsts_                             entry (ptr, fixed bin);
  5    64 dcl  gtss_drl_kin_                              entry (ptr, fixed bin);
  5    65 dcl  gtss_drl_kotnow_                           entry (ptr, fixed bin);
  5    66 dcl  gtss_drl_kotnow_$gtss_drl_kout_            entry (ptr, fixed bin);
  5    67 dcl  gtss_drl_koutn_                            entry (ptr, fixed bin);
  5    68 dcl  gtss_drl_morlnk_                           entry (ptr, fixed bin);
  5    69 dcl  gtss_drl_msub_                             entry (ptr, fixed bin);
  5    70 dcl  gtss_drl_objtim_                           entry (ptr, fixed bin);
  5    71 dcl  gtss_drl_part_                             entry (ptr, fixed bin);
  5    72 dcl  gtss_drl_pasaft_                           entry (ptr, fixed bin);
  5    73 dcl  gtss_drl_pasdes_                           entry (ptr, fixed bin);
  5    74 dcl  gtss_drl_pasust_                           entry (ptr, fixed bin);
  5    75 dcl  gtss_drl_pdio_                             entry (ptr, fixed bin);
  5    76 dcl  gtss_drl_prgdes_                           entry (ptr, fixed bin);
  5    77 dcl  gtss_drl_pseudo_                           entry (ptr, fixed bin);
  5    78 dcl  gtss_drl_relmem_                           entry (ptr, fixed bin);
  5    79 dcl  gtss_drl_restor_                           entry (ptr, fixed bin);
  5    80 dcl  gtss_drl_retfil_                           entry (ptr, fixed bin);
  5    81 dcl  gtss_drl_return_                           entry (ptr, fixed bin);
  5    82 dcl  gtss_drl_rew_                              entry (ptr, fixed bin);
  5    83 dcl  gtss_drl_rstswh_                           entry (ptr, fixed bin);
  5    84 dcl  gtss_drl_setlno_                           entry (ptr, fixed bin);
  5    85 dcl  gtss_drl_setswh_                           entry (ptr, fixed bin);
  5    86 dcl  gtss_drl_snumb_                            entry (ptr, fixed bin);
  5    87 dcl  gtss_drl_spawn_                            entry (ptr, fixed bin);
  5    88 dcl  gtss_drl_spawn_$gtss_drl_pasflr_           entry (ptr, fixed bin);
  5    89 dcl  gtss_drl_stoppt_                           entry (ptr, fixed bin);
  5    90 dcl  gtss_drl_switch_                           entry (ptr, fixed bin);
  5    91 dcl  gtss_drl_sysret_                           entry (ptr, fixed bin);
  5    92 dcl  gtss_drl_t_cfio_                           entry (ptr, fixed bin);
  5    93 dcl  gtss_drl_t_cmov_                           entry (ptr, fixed bin);
  5    94 dcl  gtss_drl_t_err_                            entry (ptr, fixed bin);
  5    95 dcl  gtss_drl_t_goto_                           entry (ptr, fixed bin);
  5    96 dcl  gtss_drl_t_linl_                           entry (ptr, fixed bin);
  5    97 dcl  gtss_drl_t_rscc_                           entry (ptr, fixed bin);
  5    98 dcl  gtss_drl_tapein_                           entry (ptr, fixed bin);
  5    99 dcl  gtss_drl_task_                             entry (ptr, fixed bin);
  5   100 dcl  gtss_drl_termtp_                           entry (ptr, fixed bin);
  5   101 dcl  gtss_drl_time_                             entry (ptr, fixed bin);
  5   102 dcl  gtss_drun_                                 entry (bit(1));
  5   103 dcl  gtss_dsd_lookup_                           entry (char(8) var) returns(fixed bin(24));
  5   104 dcl  gtss_dsd_process_                          entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  5   105 dcl  gtss_edit_dsd_                             entry (ptr, fixed bin(21)) returns(fixed bin(24));
  5   106 dcl  gtss_mcfc_empty                            entry (char(*) var);
  5   107 dcl  gtss_expand_pathname_                      entry (ptr, char(*), char(*), fixed bin(35));
  5   108 dcl  gtss_expand_pathname_$verify_umc           entry (ptr, char(*), char(*), bit(18), fixed bin(35));
  5   109 dcl  gtss_fault_processor_                      entry options(variable);
  5   110 dcl  gtss_find_cond_frame_		        entry (char(32) var) returns(ptr);
  5   111 dcl  gtss_fault_processor_$timer_runout         entry (ptr, char(*));
  5   112 dcl  gtss_filact_error_status_                  entry (fixed bin(35))returns(bit(12));
  5   113 dcl  gtss_filact_funct02_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   114 dcl  gtss_filact_funct03_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   115 dcl  gtss_filact_funct04_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   116 dcl  gtss_filact_funct05_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   117 dcl  gtss_filact_funct08_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   118 dcl  gtss_filact_funct10_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   119 dcl  gtss_filact_funct11_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   120 dcl  gtss_filact_funct14_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   121 dcl  gtss_filact_funct18_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   122 dcl  gtss_filact_funct19_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   123 dcl  gtss_filact_funct21_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   124 dcl  gtss_filact_funct22_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   125 dcl  gtss_mcfc_init_                            entry (char(*) var);
  5   126 dcl  gtss_interp_prim_                          entry options(variable);
  5   127 dcl  gtss_interp_prim_$callss                   entry (char(4), ptr);
  5   128 dcl  gtss_interp_prim_$sysret                   entry options(variable);
  5   129 dcl  gtss_interp_prim_$t_goto                   entry (char(4));
  5   130 dcl  gtss_ios_change_size_                      entry (fixed bin(24), fixed bin(24), bit(1), fixed bin(24), fixed bin(35));
  5   131 dcl  gtss_ios_close_                            entry (fixed bin(24), ptr, fixed bin(35));
  5   132 dcl  gtss_ios_exchange_names_                   entry (fixed bin(24), fixed bin(24), fixed bin(24), fixed bin(35));
  5   133 dcl  gtss_ios_initialize_                       entry options(variable);
  5   134 dcl  gtss_ios_io_                               entry (fixed bin(24), ptr, ptr, fixed bin(24), fixed bin(24), fixed bin(35));
  5   135 dcl  gtss_ios_open_                             entry (fixed bin(24), char(168), char(32), bit(6), bit(1), ptr, ptr, fixed bin(35));
  5   136 dcl  gtss_ios_position_                         entry (fixed bin(24), fixed bin(24), fixed bin(24), bit(6), ptr);
  5   137 dcl  gtss_mcfc_$delete		        entry (fixed bin(24), char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  5   138 dcl  gtss_mcfc_$open                            entry (char(*), char(*), bit(6), bit(36) aligned, ptr, fixed bin(35));
  5   139 dcl  gtss_mcfc_$close                           entry (char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  5   140 dcl  gtss_read_starCFP_                         entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  5   141 dcl  gtss_read_starCFP_$last_os                 entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  5   142 dcl  gtss_run_subsystem_                        entry (fixed bin(24));
  5   143 dcl  gtss_run_subsystem_$finish                 entry options(variable);
  5   144 dcl  gtss_run_subsystem_$restor                 entry (fixed bin(24), ptr);
  5   145 dcl  gtss_run_subsystem_$restor_perm            entry (fixed bin(24), ptr, fixed bin(18));
  5   146 dcl  gtss_set_slave_                            entry (fixed bin (24), ptr);
  5   147 dcl  gtss_set_slave_$load_bar                   entry (fixed bin (17));
  5   148 dcl  gtss_update_safe_store_                    entry (ptr);
  5   149 dcl  gtss_verify_access_		        entry (char(*), char(*), fixed bin(24), bit(6), bit(12) aligned);
  5   150 dcl  gtss_verify_access_$check_forced_access    entry (char(*), char(*), fixed bin(24));
  5   151 dcl  gtss_write_starCFP_                        entry (ptr, ptr, fixed bin(21), fixed bin(35));
  5   152 /*   END INCLUDE FILE gtss_entry_dcls.incl.pl1 */
      118 
      119 
  6     1 /* BEGIN INCLUDE FILE gtss_ust_ext_.incl.pl1 */
  6     2 /* UST: User Status Table 
  6     3*   definitions based on 
  6     4*   System Tables, Order number DD14-01E, January 1981
  6     5*   Section 15, Time Sharing System
  6     6*
  6     7*   Authors: Robert J. Grimes	Created
  6     8*   -	  Albert N. Kepner	  1978
  6     9*   -	  Robert M. May
  6    10*   -	  David B. Ward
  6    11*   Change:  Dave Ward	02/23/79 Level 4 numbering.
  6    12*   Change:  Ron Barstad  83-07-12 Repaired damaged formating and word offset comments
  6    13*                                  Brought up to 4JS3 functionality
  6    14**/
  6    15 /* octal word offsets of entries */
  6    16 dcl 1 gtss_ust_ext_$ust aligned ext,
  6    17       3 gtss_ust,
  6    18 /* 0-1  */	4 lid		bit (72),
  6    19 /* 2    */	4 lstp		bit (36),
  6    20 /* 3    */	4 ltin		bit (36),
  6    21 /* 4    */	4 lstio,
  6    22 			5 no_of_chars_by_8  fixed bin (18) uns unal,
  6    23 			5 no_of_disk_io     fixed bin (18) uns unal,
  6    24 /* 5    */	4 lsnub		bit (36),
  6    25 /* 6-7  */	4 lchg		bit (72),
  6    26 /* 10   */	4 lbuf,
  6    27 			5 address		bit (18)unaligned,
  6    28 			5 tally		bit (1)unaligned,
  6    29 			5 terminal_type	bit (5)unaligned,
  6    30 			5 station_id	bit (12)unaligned,
  6    31 /* 11-12 */	4 liost (0:1)	bit (36),
  6    32 /* 13   */	4 lcc		bit (36),
  6    33 /* 14   */	4 lback,
  6    34 			5 fill1		bit (18) unaligned,
  6    35 			5 gwake		fixed bin (17) unaligned,
  6    36 /* 15   */	4 lflag,
  6    37 			5 mp_list		bit (18) unaligned,
  6    38 			5 flags unaligned,
  6    39 				6 b18		bit (1) unaligned,
  6    40 				6 b19		bit (1) unaligned,
  6    41 				6 b20		bit (1) unaligned,
  6    42 				6 b21		bit (1) unaligned,
  6    43 				6 b22		bit (1) unaligned,
  6    44 				6 b23		bit (1) unaligned,
  6    45 				6 b24		bit (1) unaligned,
  6    46 				6 b25		bit (1) unaligned,
  6    47 				6 b26		bit (1) unaligned,
  6    48 				6 b27		bit (1) unaligned,
  6    49 				6 b28		bit (1) unaligned,
  6    50 				6 b29		bit (1) unaligned,
  6    51 				6 b30		bit (1) unaligned,
  6    52 				6 b31		bit (1) unaligned,
  6    53 				6 b32		bit (1) unaligned,
  6    54 				6 b33		bit (1) unaligned,
  6    55 				6 b34		bit (1) unaligned,
  6    56 				6 b35		bit (1) unaligned,
  6    57 /* 16   */	4 lkdss		bit (36),
  6    58 /* 17   */	4 lfile,
  6    59 			5 program_stack	fixed bin (17) unal,
  6    60 			5 file_list_ptr	bit (18) unal,
  6    61 /* 20   */	4 lttys		bit (36),
  6    62 /* 21   */	4 lswth,
  6    63 			5 b0		bit (1) unaligned,
  6    64 			5 b1		bit (1) unaligned,
  6    65 			5 b2		bit (1) unaligned,
  6    66 			5 b3		bit (1) unaligned,
  6    67 			5 b4		bit (1) unaligned,
  6    68 			5 b5		bit (1) unaligned,
  6    69 			5 b6		bit (1) unaligned,
  6    70 			5 b7		bit (1) unaligned,
  6    71 			5 b8		bit (1) unaligned,
  6    72 			5 b9		bit (1) unaligned,
  6    73 			5 b10		bit (1) unaligned,
  6    74 			5 b11		bit (1) unaligned,
  6    75 			5 b12		bit (1) unaligned,
  6    76 			5 b13		bit (1) unaligned,
  6    77 			5 b14		bit (1) unaligned,
  6    78 			5 b15		bit (1) unaligned,
  6    79 			5 b16		bit (1) unaligned,
  6    80 			5 b17		bit (1) unaligned,
  6    81 			5 b18		bit (1) unaligned,
  6    82 			5 b19		bit (1) unaligned,
  6    83 			5 b20		bit (1) unaligned,
  6    84 			5 b21		bit (1) unaligned,
  6    85 			5 b22		bit (1) unaligned,
  6    86 			5 b23		bit (1) unaligned,
  6    87 			5 b24		bit (1) unaligned,
  6    88 			5 b25		bit (1) unaligned,
  6    89 			5 b26		bit (1) unaligned,
  6    90 			5 b27		bit (1) unaligned,
  6    91 			5 b28		bit (1) unaligned,
  6    92 			5 b29		bit (1) unaligned,
  6    93 			5 b30		bit (1) unaligned,
  6    94 			5 b31		bit (1) unaligned,
  6    95 			5 b32		bit (1) unaligned,
  6    96 			5 b33		bit (1) unaligned,
  6    97 			5 b34		bit (1) unaligned,
  6    98 			5 b35		bit (1) unaligned,
  6    99 /* 22   */	4 lsize,
  6   100 			5 bar		fixed bin (17) unaligned,
  6   101 			5 limit		bit (18) unaligned,
  6   102 /* 23... */	4 lswap,
  6   103 			5 fill		bit (18) unal,
  6   104 			5 size		bit (18) unal,
  6   105 /* ...24 */	4 transfer_cell	bit (36) unal,
  6   106 /* 25   */	4 lerrm		bit (36),
  6   107 /* 26-37 */	4 lcfil (0:9)	bit (36),
  6   108 /* 40   */	4 lsybc,
  6   109 			5 b0_17		fixed bin (17) unaligned,
  6   110 			5 b18_35		fixed bin (17) unaligned,
  6   111 /* 41-42 */	4 lstem (0:1)	bit (36),
  6   112 /* 43    */	4 lcals,
  6   113 			5 b0_17		fixed bin (17) unaligned,
  6   114 			5 b18_35		bit (18) unaligned,
  6   115 /* 44-51 */	4 subsystems (3),
  6   116 			5 content_lswap,
  6   117 				6 fill		bit (18) unal,
  6   118 				6 size		bit (18) unal,
  6   119 			5 tally_address	fixed bin (17) unaligned,
  6   120 			5 ss_flags	bit (18) unaligned,
  6   121 /* 52   */	4 ltalc,
  6   122 			5 tod		fixed bin (17) unaligned,
  6   123 			5 startup		fixed bin (17) unaligned,
  6   124 /* 53   */	4 lspts		fixed bin (35),
  6   125 /* 54   */	4 lflg2,
  6   126 			5 b0		bit (1) unaligned,
  6   127 			5 b1		bit (1) unaligned,
  6   128 			5 b2		bit (1) unaligned,
  6   129 			5 b3		bit (1) unaligned,
  6   130 			5 b4		bit (1) unaligned,
  6   131 			5 b5		bit (1) unaligned,
  6   132 			5 b6		bit (1) unaligned,
  6   133 			5 b7		bit (1) unaligned,
  6   134 			5 b8		bit (1) unaligned,
  6   135 			5 b9		bit (1) unaligned,
  6   136 			5 b10		bit (1) unaligned,
  6   137 			5 b11		bit (1) unaligned,
  6   138 			5 b12		bit (1) unaligned,
  6   139 			5 b13		bit (1) unaligned,
  6   140 			5 b14		bit (1) unaligned,
  6   141 			5 b15		bit (1) unaligned,
  6   142 			5 b16		bit (1) unaligned,
  6   143 			5 b17		bit (1) unaligned,
  6   144 			5 b18		bit (1) unaligned,
  6   145 			5 b19		bit (1) unaligned,
  6   146 			5 b20		bit (1) unaligned,
  6   147 			5 b21		bit (1) unaligned,
  6   148 			5 b22		bit (1) unaligned,
  6   149 			5 b23		bit (1) unaligned,
  6   150 			5 b24		bit (1) unaligned,
  6   151 			5 b25		bit (1) unaligned,
  6   152 			5 b26		bit (1) unaligned,
  6   153 			5 b27		bit (1) unaligned,
  6   154 			5 b28		bit (1) unaligned,
  6   155 			5 b29		bit (1) unaligned,
  6   156 			5 b30		bit (1) unaligned,
  6   157 			5 b31		bit (1) unaligned,
  6   158 			5 b32		bit (1) unaligned,
  6   159 			5 b33		bit (1) unaligned,
  6   160 			5 b34		bit (1) unaligned,
  6   161 			5 b35		bit (1) unaligned,
  6   162 /* 55-60 */	4 lsftm (0:3)	bit (36),
  6   163 /* 61    */	4 lsprt		fixed bin (35),
  6   164 /* 62    */	4 ltrm		bit (36),
  6   165 /* 63    */	4 linno		fixed bin (35),
  6   166 /* 64    */	4 lincr		fixed bin (35),
  6   167 /* 65    */	4 ltdes		bit (36),
  6   168 /* 66    */	4 lbptr		bit (36),
  6   169 /* 67    */	4 lpptr,
  6   170 			5 last_file_pat_ptr	bin (18) uns unal,
  6   171 			5 lpptr_reserved	bin (18) uns unal,
  6   172 /* 70    */	4 lsclp		bit (36),
  6   173 /* 71    */	4 limit		fixed bin (35),
  6   174 /* 72    */	4 lacpt,
  6   175 			5 jout_pat_offset	bit (18) unal,
  6   176 			5 permissions unal,
  6   177 				6 lodx		bit (1) unal,
  6   178 				6 cardin		bit (1) unal,
  6   179 				6 talk		bit (1) unal,
  6   180 				6 lods		bit (1) unal,
  6   181 			5 cardin_urgency	bit (14) unal,
  6   182 /* 73    */	4 ldrl,
  6   183 			5 ilc		bit (18) unaligned,
  6   184 			5 code		fixed bin (17) unaligned,
  6   185 /* 74    */	4 ljsnb		bit (36),
  6   186 /* 75    */	4 ltm0		bit (36),
  6   187 /* 76    */	4 ltm1		bit (36),
  6   188 /* 77    */	4 ltm2		bit (36),
  6   189 /* 100   */	4 ltm3		bit (36),
  6   190 /* 101   */	4 ltm4		bit (36),
  6   191 /* 102   */	4 ltm5		bit (36),
  6   192 /* 103   */	4 ltmwt		bit (36),
  6   193 /* 104   */	4 ltmrs		bit (36),
  6   194 /* 105   */	4 ltc0		bit (36),
  6   195 /* 106   */	4 ltc1		bit (36),
  6   196 /* 107   */	4 ltc2		bit (36),
  6   197 /* 110   */	4 lct3		bit (36),
  6   198 /* 111   */	4 ltc4		bit (36),
  6   199 /* 112   */	4 ltc5		bit (36),
  6   200 /* 113   */	4 ltcw		bit (36),
  6   201 /* 114   */	4 lkst		bit (36),
  6   202 /* 115   */	4 lkst2		bit (36),
  6   203 /* 116   */	4 lkcc		bit (36),
  6   204 /* 117   */	4 lkms		bit (36),
  6   205 /* 120-121 */	4 lksdc (0:1)	bit (36),
  6   206 /* 122   */	4 lkntp		bit (36),
  6   207 /* 123   */	4 lkrdc		bit (36),
  6   208 /* 124   */	4 lpqf		bit (36),
  6   209 /* 125   */	4 lpqb		bit (36),
  6   210 /* 126   */	4 lustl		bit (36),
  6   211 /* 127   */	4 ltemp		bit (36),
  6   212 /* 130   */	4 lrtll,
  6   213 			5 word_length	fixed bin unaligned,
  6   214 			5 char_length	fixed bin unaligned,
  6   215 /* 131   */	4 ltim		bit (36),
  6   216 /* 132   */	4 lcfio,
  6   217 			5 sect_out	fixed bin(18)unsigned unal,
  6   218 			5 sect_in		fixed bin(18)unsigned unal,
  6   219 /* 133   */	4 lcfst,
  6   220 			5 initial_sect_out	fixed bin(18)unsigned unal,
  6   221 			5 start_term	fixed bin(18)unsigned unal,
  6   222 /* 134   */	4 lcmpt		bit (36),
  6   223 /* 135   */	4 lcjid		bit (36),
  6   224 /* 136-137 */	4 lrcal (0:1)	bit (36),
  6   225 /* 140   */	4 lrdta		bit (36),
  6   226 /* 141   */	4 lrrsk		bit (36),
  6   227 /* 142   */	4 lrskd		bit (36),
  6   228 /* 143   */	4 lrcc		bit (36),
  6   229 /* 144-145 */	4 lrsts (0:1)	bit (36),
  6   230 /* 146   */	4 lrtm		bit (36),
  6   231 /* 147   */	4 lswt2,
  6   232 			5 b0		bit (1) unaligned,
  6   233 			5 b1		bit (1) unaligned,
  6   234 			5 b2		bit (1) unaligned,
  6   235 			5 b3		bit (1) unaligned,
  6   236 			5 b4		bit (1) unaligned,
  6   237 			5 b5		bit (1) unaligned,
  6   238 			5 b6		bit (1) unaligned,
  6   239 			5 b7		bit (1) unaligned,
  6   240 			5 b8		bit (1) unaligned,
  6   241 			5 b9		bit (1) unaligned,
  6   242 			5 b10		bit (1) unaligned,
  6   243 			5 b11		bit (1) unaligned,
  6   244 			5 b12		bit (1) unaligned,
  6   245 			5 b13		bit (1) unaligned,
  6   246 			5 b14		bit (1) unaligned,
  6   247 			5 b15		bit (1) unaligned,
  6   248 			5 b16		bit (1) unaligned,
  6   249 			5 b17		bit (1) unaligned,
  6   250 			5 b18		bit (1) unaligned,
  6   251 			5 b19		bit (1) unaligned,
  6   252 			5 b20		bit (1) unaligned,
  6   253 			5 b21		bit (1) unaligned,
  6   254 			5 b22		bit (1) unaligned,
  6   255 			5 b23		bit (1) unaligned,
  6   256 			5 b24		bit (1) unaligned,
  6   257 			5 b25		bit (1) unaligned,
  6   258 			5 b26		bit (1) unaligned,
  6   259 			5 b27		bit (1) unaligned,
  6   260 			5 b28		bit (1) unaligned,
  6   261 			5 b29		bit (1) unaligned,
  6   262 			5 b30		bit (1) unaligned,
  6   263 			5 b31		bit (1) unaligned,
  6   264 			5 b32		bit (1) unaligned,
  6   265 			5 b33		bit (1) unaligned,
  6   266 			5 b34		bit (1) unaligned,
  6   267 			5 b35		bit (1) unaligned,
  6   268 /* 150   */	4 llsnb		bit (36),
  6   269 /* 151   */	4 lesq		bit (36),
  6   270 /* 152-153 */	4 lumc (0:1)	bit (36),
  6   271 /* 154-155 */	4 lfnam (0:1)	bit (36),
  6   272 /* 156   */	4 lopts		bit (36),
  6   273 /* 157   */	4 licec,
  6   274 			5 b0_17		bit (18) unaligned,
  6   275 			5 b18_35		fixed bin (17) unaligned,
  6   276 /* 160   */	4 lflg3,
  6   277 			5 b0		bit (1) unaligned,
  6   278 			5 b1		bit (1) unaligned,
  6   279 			5 b2		bit (1) unaligned,
  6   280 			5 b3		bit (1) unaligned,
  6   281 			5 b4		bit (1) unaligned,
  6   282 			5 b5		bit (1) unaligned,
  6   283 			5 b6		bit (1) unaligned,
  6   284 			5 b7		bit (1) unaligned,
  6   285 			5 b8		bit (1) unaligned,
  6   286 			5 b9		bit (1) unaligned,
  6   287 			5 b10		bit (1) unaligned,
  6   288 			5 b11		bit (1) unaligned,
  6   289 			5 b12		bit (1) unaligned,
  6   290 			5 b13		bit (1) unaligned,
  6   291 			5 b14		bit (1) unaligned,
  6   292 			5 b15		bit (1) unaligned,
  6   293 			5 b16		bit (1) unaligned,
  6   294 			5 b17		bit (1) unaligned,
  6   295 			5 b18		bit (1) unaligned,
  6   296 			5 b19		bit (1) unaligned,
  6   297 			5 b20		bit (1) unaligned,
  6   298 			5 b21		bit (1) unaligned,
  6   299 			5 b22		bit (1) unaligned,
  6   300 			5 b23		bit (1) unaligned,
  6   301 			5 b24		bit (1) unaligned,
  6   302 			5 b25		bit (1) unaligned,
  6   303 			5 b26		bit (1) unaligned,
  6   304 			5 b27		bit (1) unaligned,
  6   305 			5 b28		bit (1) unaligned,
  6   306 			5 b29		bit (1) unaligned,
  6   307 			5 b30		bit (1) unaligned,
  6   308 			5 b31		bit (1) unaligned,
  6   309 			5 b32		bit (1) unaligned,
  6   310 			5 b33		bit (1) unaligned,
  6   311 			5 b34		bit (1) unaligned,
  6   312 			5 b35		bit (1) unaligned,
  6   313 /* 161-163 */	4 lpage (0:2)	bit (36),
  6   314 /* 164   */	4 lsit1		bit (36),
  6   315 /* 165   */	4 lsit2		bit (36),
  6   316 /* 166   */	4 lsit3		bit (36),
  6   317 /* 167   */	4 lsit4		bit (36),
  6   318 /* The following entries are maintained by gtss and are not found in TSS UST */
  6   319 /* 170   */	4 lxxx, /* program stack index, offset from gtss_ust */
  6   320 			5 b0_17		fixed bin (17) unaligned,
  6   321 			5 b18_35		bit (18) unaligned, /* not used */
  6   322 /* 171-175 */	4 lprgs (5),
  6   323 			5 b0_17		fixed bin (17) unaligned,
  6   324 			5 b18_35		fixed bin (17) unaligned,
  6   325 /* 176   */	4 fill	bit (36),
  6   326 /* 177   */	4 remote_io_buffer aligned,
  6   327 			5 buffer_control_word,
  6   328 				6 current_line_pointer  bit (18)unal,
  6   329 				6 buffer_threshold_address  bit (18)unal,
  6   330 			5 number_words_transmitted	fixed bin (17)unal,
  6   331 			5 FILL1			fixed bin (17)unal,
  6   332 			5 count_of_characters_transmitted fixed bin (17)unal,
  6   333 			5 FILL2			fixed bin (17)unal,
  6   334 			5 characters_transmitted (244) char (1) unal,
  6   335 /* 277   */	4 word_after_ust		bit (36) aligned;
  6   336 
  6   337 /*   END INCLUDE FILE gtss_ust_ext_.incl.pl1 */
      120 
      121      end						/* gtss_drl_prgdes_ */;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/10/84  1043.3  gtss_drl_prgdes_.pl1              >spec>on>7105>gtss_drl_prgdes_.pl1
110          1    09/09/83  1713.8  gtss_ext_.incl.pl1                >ldd>include>gtss_ext_.incl.pl1
112          2    12/15/83  1100.4  mc.incl.pl1                       >ldd>include>mc.incl.pl1
114          3    09/09/83  1714.1  gtss_primitives_.incl.pl1         >ldd>include>gtss_primitives_.incl.pl1
116          4    09/09/83  1714.0  gtss_prgdes_.incl.pl1             >ldd>include>gtss_prgdes_.incl.pl1
118          5    12/10/84  1029.7  gtss_entry_dcls.incl.pl1          >spec>on>7105>gtss_entry_dcls.incl.pl1
120          6    09/09/83  1714.3  gtss_ust_ext_.incl.pl1            >ldd>include>gtss_ust_ext_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
A_reg                                  based           char(4)                  dcl 93 set ref 60 78*
L_buf                     1            based           bit(18)                  level 2 packed unaligned dcl 104 ref 50 58
a                        24            based           bit(36)                  level 3 packed unaligned dcl 2-12 set ref 60 78
addrel                                                 builtin function         dcl 91 ref 47 58 74
arg_list                               based           structure                level 1 dcl 104
arg_list_ptr                    000100 automatic       pointer                  initial dcl 92 set ref 47* 50 58 63 92*
b36                                    based           bit(36)                  dcl 94 set ref 60*
buf                                    based           char(36)                 dcl 95 set ref 66*
buf_9_zeroes                           based           fixed bin(24,0)          array dcl 96 set ref 86*
buf_ptr                         000102 automatic       pointer                  initial dcl 97 set ref 58* 66 86 97*
callp_desc                             based           fixed bin(17,0)          level 2 packed unaligned dcl 3-34 ref 78
callp_overlay                          based           structure                level 1 dcl 3-34
cmd_lang_len              4(18) 000016 external static fixed bin(17,0)          array level 2 packed unaligned dcl 4-77 set ref 71
cmd_lang_offset           4     000016 external static fixed bin(17,0)          array level 2 packed unaligned dcl 4-77 set ref 72
cmd_list_len                    000122 automatic       fixed bin(17,0)          dcl 3-81 set ref 71* 74 77
cmd_list_ptr                    000116 automatic       pointer                  initial dcl 3-79 set ref 72* 74 3-79*
cmd_prim_list_ptr               000120 automatic       pointer                  initial dcl 3-80 set ref 74* 3-80*
first_9_words                          based           char(36)                 array level 2 dcl 4-100 ref 66
gseg                            000104 automatic       pointer                  initial dcl 99 set ref 46* 47 58 99*
gtss_abort_subsystem_           000020 constant        entry                    external dcl 5-15 ref 51
gtss_ext_$gtss_slave_area_seg   000010 external static pointer                  array dcl 1-20 ref 46
gtss_ext_$stack_level_          000012 external static fixed bin(17,0)          dcl 1-31 ref 46
gtss_prgdes_ext_$prgdes         000016 external static structure                array level 1 dcl 4-77 set ref 64 66
gtss_prgdes_ext_$primitives     000014 external static bit(36)                  array dcl 3-11 set ref 72 77
gtss_ust                        000022 external static structure                level 2 dcl 6-16
gtss_ust_ext_$ust               000022 external static structure                level 1 dcl 6-16
i                               000106 automatic       fixed bin(24,0)          dcl 100 set ref 64* 65 66 71 72*
ilc                       4            based           bit(18)                  level 2 packed unaligned dcl 2-56 ref 47 51 51
increment                              parameter       fixed bin(17,0)          dcl 24 set ref 14 44*
limit                    22(18) 000022 external static bit(18)                  level 4 packed unaligned dcl 6-16 ref 50
lsize                    22     000022 external static structure                level 3 dcl 6-16
mc                                     based           structure                level 1 dcl 2-12
mcp                             000110 automatic       pointer                  dcl 2-10 set ref 25* 45 51* 60 78
mcpp                                   parameter       pointer                  dcl 23 ref 14 25
prgdes_ov                              based           structure                array level 1 dcl 4-100
prim_op                   0(30)        based           fixed bin(5,0)           level 2 packed unaligned dcl 3-22 ref 78
primitive                       000114 automatic       bit(36)                  unaligned dcl 3-15 set ref 77* 78 78
primitive_overlay                      based           structure                level 1 dcl 3-22
regs                     20            based           structure                level 2 packed unaligned dcl 2-12
scu                                    based           structure                level 1 dcl 2-56 in procedure "gtss_drl_prgdes_"
scu                      30            based           bit(36)                  array level 2 in structure "mc" packed unaligned
                                                                                  dcl 2-12 in procedure "gtss_drl_prgdes_" set ref
                                                                                  45
scup                            000112 automatic       pointer                  dcl 2-54 set ref 45* 47 51 51
ss_name                         000016 external static char(4)                  array level 2 dcl 4-77 set ref 65 78
ssname                                 based           char(4)                  level 2 dcl 104 ref 63
sub_system                      000107 automatic       char(4)                  dcl 102 set ref 63* 65

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
abx                                    internal static fixed bin(17,0)          initial dcl 2-42
apx                                    internal static fixed bin(17,0)          initial dcl 2-42
bbx                                    internal static fixed bin(17,0)          initial dcl 2-42
bpx                                    internal static fixed bin(17,0)          initial dcl 2-42
cmd_primitive_list                     based           structure                array level 1 dcl 3-75
code                                   automatic       fixed bin(35,0)          dcl 98
com_err_                        000000 constant        entry                    external dcl 5-8
command_list                           based           structure                array level 1 dcl 3-71
gtss_CFP_abort_                 000000 constant        entry                    external dcl 5-9
gtss_CFP_break_                 000000 constant        entry                    external dcl 5-10
gtss_CFP_input_                 000000 constant        entry                    external dcl 5-11
gtss_CFP_output_                000000 constant        entry                    external dcl 5-12
gtss_abandon_CFP_               000000 constant        entry                    external dcl 5-13
gtss_abort_dump_                000000 constant        entry                    external dcl 5-14
gtss_abort_subsystem_$not_imp   000000 constant        entry                    external dcl 5-16
gtss_abs_$abs_equiv             000000 constant        entry                    external dcl 5-19
gtss_abs_$cpu_runout            000000 constant        entry                    external dcl 5-20
gtss_abs_$create_absin          000000 constant        entry                    external dcl 5-21
gtss_abs_$dabt_check            000000 constant        entry                    external dcl 5-22
gtss_abs_$get_drm               000000 constant        entry                    external dcl 5-24
gtss_abs_$get_id                000000 constant        entry                    external dcl 5-23
gtss_abs_login_banner_          000000 constant        entry                    external dcl 5-17
gtss_abs_logout_banner_         000000 constant        entry                    external dcl 5-18
gtss_adjust_size_               000000 constant        entry                    external dcl 5-25
gtss_aft_$add                   000000 constant        entry                    external dcl 5-26
gtss_aft_$delete                000000 constant        entry                    external dcl 5-27
gtss_aft_$find                  000000 constant        entry                    external dcl 5-28
gtss_aft_$initialize            000000 constant        entry                    external dcl 5-29
gtss_ascii_bcd_                 000000 constant        entry                    external dcl 5-30
gtss_attributes_mgr_$get        000000 constant        entry                    external dcl 5-31
gtss_attributes_mgr_$set        000000 constant        entry                    external dcl 5-32
gtss_bcd_ascii_                 000000 constant        entry                    external dcl 5-33
gtss_bcd_ascii_$lc              000000 constant        entry                    external dcl 5-34
gtss_break_vector_              000000 constant        entry                    external dcl 5-35
gtss_break_vector_$drl_in_progress
                                000000 constant        entry                    external dcl 5-36
gtss_break_vector_$status       000000 constant        entry                    external dcl 5-37
gtss_build_                     000000 constant        entry                    external dcl 5-38
gtss_com_err_                   000000 constant        entry                    external dcl 5-39
gtss_derail_processor_          000000 constant        entry                    external dcl 5-40
gtss_derail_processor_$set      000000 constant        entry                    external dcl 5-41
gtss_dq_$catp                   000000 constant        entry                    external dcl 5-42
gtss_dq_$create                 000000 constant        entry                    external dcl 5-43
gtss_dq_$dibp                   000000 constant        entry                    external dcl 5-44
gtss_dq_$entries_info           000000 constant        entry                    external dcl 5-45
gtss_dq_$hdrp                   000000 constant        entry                    external dcl 5-46
gtss_dq_$mod_js                 000000 constant        entry                    external dcl 5-47
gtss_dq_$open_exc               000000 constant        entry                    external dcl 5-48
gtss_dq_$open_gen               000000 constant        entry                    external dcl 5-49
gtss_drl_abort_                 000000 constant        entry                    external dcl 5-50
gtss_drl_addmem_                000000 constant        entry                    external dcl 5-51
gtss_drl_callss_                000000 constant        entry                    external dcl 5-52
gtss_drl_corfil_                000000 constant        entry                    external dcl 5-53
gtss_drl_defil_                 000000 constant        entry                    external dcl 5-54
gtss_drl_defil_$subr            000000 constant        entry                    external dcl 5-55
gtss_drl_dio_                   000000 constant        entry                    external dcl 5-56
gtss_drl_drlimt_                000000 constant        entry                    external dcl 5-57
gtss_drl_drlsav_                000000 constant        entry                    external dcl 5-58
gtss_drl_filact_                000000 constant        entry                    external dcl 5-59
gtss_drl_filsp_                 000000 constant        entry                    external dcl 5-60
gtss_drl_grow_                  000000 constant        entry                    external dcl 5-61
gtss_drl_gwake_                 000000 constant        entry                    external dcl 5-62
gtss_drl_jsts_                  000000 constant        entry                    external dcl 5-63
gtss_drl_kin_                   000000 constant        entry                    external dcl 5-64
gtss_drl_kotnow_                000000 constant        entry                    external dcl 5-65
gtss_drl_kotnow_$gtss_drl_kout_ 000000 constant        entry                    external dcl 5-66
gtss_drl_koutn_                 000000 constant        entry                    external dcl 5-67
gtss_drl_morlnk_                000000 constant        entry                    external dcl 5-68
gtss_drl_msub_                  000000 constant        entry                    external dcl 5-69
gtss_drl_objtim_                000000 constant        entry                    external dcl 5-70
gtss_drl_part_                  000000 constant        entry                    external dcl 5-71
gtss_drl_pasaft_                000000 constant        entry                    external dcl 5-72
gtss_drl_pasdes_                000000 constant        entry                    external dcl 5-73
gtss_drl_pasust_                000000 constant        entry                    external dcl 5-74
gtss_drl_pdio_                  000000 constant        entry                    external dcl 5-75
gtss_drl_prgdes_                000000 constant        entry                    external dcl 5-76
gtss_drl_pseudo_                000000 constant        entry                    external dcl 5-77
gtss_drl_relmem_                000000 constant        entry                    external dcl 5-78
gtss_drl_restor_                000000 constant        entry                    external dcl 5-79
gtss_drl_retfil_                000000 constant        entry                    external dcl 5-80
gtss_drl_return_                000000 constant        entry                    external dcl 5-81
gtss_drl_rew_                   000000 constant        entry                    external dcl 5-82
gtss_drl_rstswh_                000000 constant        entry                    external dcl 5-83
gtss_drl_setlno_                000000 constant        entry                    external dcl 5-84
gtss_drl_setswh_                000000 constant        entry                    external dcl 5-85
gtss_drl_snumb_                 000000 constant        entry                    external dcl 5-86
gtss_drl_spawn_                 000000 constant        entry                    external dcl 5-87
gtss_drl_spawn_$gtss_drl_pasflr_
                                000000 constant        entry                    external dcl 5-88
gtss_drl_stoppt_                000000 constant        entry                    external dcl 5-89
gtss_drl_switch_                000000 constant        entry                    external dcl 5-90
gtss_drl_sysret_                000000 constant        entry                    external dcl 5-91
gtss_drl_t_cfio_                000000 constant        entry                    external dcl 5-92
gtss_drl_t_cmov_                000000 constant        entry                    external dcl 5-93
gtss_drl_t_err_                 000000 constant        entry                    external dcl 5-94
gtss_drl_t_goto_                000000 constant        entry                    external dcl 5-95
gtss_drl_t_linl_                000000 constant        entry                    external dcl 5-96
gtss_drl_t_rscc_                000000 constant        entry                    external dcl 5-97
gtss_drl_tapein_                000000 constant        entry                    external dcl 5-98
gtss_drl_task_                  000000 constant        entry                    external dcl 5-99
gtss_drl_termtp_                000000 constant        entry                    external dcl 5-100
gtss_drl_time_                  000000 constant        entry                    external dcl 5-101
gtss_drun_                      000000 constant        entry                    external dcl 5-102
gtss_dsd_lookup_                000000 constant        entry                    external dcl 5-103
gtss_dsd_process_               000000 constant        entry                    external dcl 5-104
gtss_edit_dsd_                  000000 constant        entry                    external dcl 5-105
gtss_expand_pathname_           000000 constant        entry                    external dcl 5-107
gtss_expand_pathname_$verify_umc
                                000000 constant        entry                    external dcl 5-108
gtss_ext_$CFP_bits                     external static structure                level 1 dcl 1-37
gtss_ext_$SYstarstar_file_no           external static fixed bin(24,0)          dcl 1-33
gtss_ext_$aem                          external static fixed bin(17,0)          dcl 1-8
gtss_ext_$aft                          external static structure                level 1 dcl 1-78
gtss_ext_$bad_drl_rtrn                 external static label variable           dcl 1-9
gtss_ext_$com_reg                      external static structure                level 1 dcl 1-45
gtss_ext_$db                           external static bit(1)                   array unaligned dcl 1-10
gtss_ext_$deferred_catalogs_ptr        external static pointer                  dcl 1-11
gtss_ext_$dispose_of_drl               external static label variable           dcl 1-12
gtss_ext_$drl_rtrn                     external static label variable           array dcl 1-13
gtss_ext_$drm_path                     external static char(168)                unaligned dcl 1-14
gtss_ext_$drun_jid                     external static char(5)                  unaligned dcl 1-15
gtss_ext_$event_channel                external static fixed bin(71,0)          dcl 1-16
gtss_ext_$fast_lib                     external static structure                level 1 dcl 1-98
gtss_ext_$finished                     external static label variable           dcl 1-17
gtss_ext_$flags                        external static structure                level 1 dcl 1-60
gtss_ext_$gdb_name                     external static char(8)                  unaligned dcl 1-18
gtss_ext_$get_line                     external static entry variable           dcl 1-19
gtss_ext_$hcs_work_area_ptr            external static pointer                  dcl 1-21
gtss_ext_$homedir                      external static char(64)                 unaligned dcl 1-22
gtss_ext_$last_k_was_out               external static bit(1)                   dcl 1-23
gtss_ext_$mcfc                         external static structure                level 1 dcl 1-109
gtss_ext_$pdir                         external static varying char(168)        dcl 1-24
gtss_ext_$popup_from_pi                external static label variable           dcl 1-25
gtss_ext_$ppt                          external static pointer                  dcl 1-94
gtss_ext_$process_type                 external static fixed bin(17,0)          dcl 1-26
gtss_ext_$put_chars                    external static entry variable           dcl 1-27
gtss_ext_$restart_from_pi              external static label variable           dcl 1-28
gtss_ext_$restart_seg_ptr              external static pointer                  dcl 1-29
gtss_ext_$sig_ptr                      external static pointer                  dcl 1-30
gtss_ext_$statistics                   external static structure                level 1 dcl 1-72
gtss_ext_$suspended_process            external static bit(1)                   unaligned dcl 1-32
gtss_ext_$user_id                      external static varying char(26)         dcl 1-34
gtss_ext_$work_area_ptr                external static pointer                  dcl 1-35
gtss_fault_processor_           000000 constant        entry                    external dcl 5-109
gtss_fault_processor_$timer_runout
                                000000 constant        entry                    external dcl 5-111
gtss_filact_error_status_       000000 constant        entry                    external dcl 5-112
gtss_filact_funct02_            000000 constant        entry                    external dcl 5-113
gtss_filact_funct03_            000000 constant        entry                    external dcl 5-114
gtss_filact_funct04_            000000 constant        entry                    external dcl 5-115
gtss_filact_funct05_            000000 constant        entry                    external dcl 5-116
gtss_filact_funct08_            000000 constant        entry                    external dcl 5-117
gtss_filact_funct10_            000000 constant        entry                    external dcl 5-118
gtss_filact_funct11_            000000 constant        entry                    external dcl 5-119
gtss_filact_funct14_            000000 constant        entry                    external dcl 5-120
gtss_filact_funct18_            000000 constant        entry                    external dcl 5-121
gtss_filact_funct19_            000000 constant        entry                    external dcl 5-122
gtss_filact_funct21_            000000 constant        entry                    external dcl 5-123
gtss_filact_funct22_            000000 constant        entry                    external dcl 5-124
gtss_find_cond_frame_           000000 constant        entry                    external dcl 5-110
gtss_interp_prim_               000000 constant        entry                    external dcl 5-126
gtss_interp_prim_$callss        000000 constant        entry                    external dcl 5-127
gtss_interp_prim_$sysret        000000 constant        entry                    external dcl 5-128
gtss_interp_prim_$t_goto        000000 constant        entry                    external dcl 5-129
gtss_ios_change_size_           000000 constant        entry                    external dcl 5-130
gtss_ios_close_                 000000 constant        entry                    external dcl 5-131
gtss_ios_exchange_names_        000000 constant        entry                    external dcl 5-132
gtss_ios_initialize_            000000 constant        entry                    external dcl 5-133
gtss_ios_io_                    000000 constant        entry                    external dcl 5-134
gtss_ios_open_                  000000 constant        entry                    external dcl 5-135
gtss_ios_position_              000000 constant        entry                    external dcl 5-136
gtss_mcfc_$close                000000 constant        entry                    external dcl 5-139
gtss_mcfc_$delete               000000 constant        entry                    external dcl 5-137
gtss_mcfc_$open                 000000 constant        entry                    external dcl 5-138
gtss_mcfc_empty                 000000 constant        entry                    external dcl 5-106
gtss_mcfc_init_                 000000 constant        entry                    external dcl 5-125
gtss_prgdes_ext_$basic_cmd_num         external static fixed bin(17,0)          dcl 3-87
gtss_prgdes_ext_$common_cmd_num        external static fixed bin(17,0)          dcl 3-91
gtss_read_starCFP_              000000 constant        entry                    external dcl 5-140
gtss_read_starCFP_$last_os      000000 constant        entry                    external dcl 5-141
gtss_run_subsystem_             000000 constant        entry                    external dcl 5-142
gtss_run_subsystem_$finish      000000 constant        entry                    external dcl 5-143
gtss_run_subsystem_$restor      000000 constant        entry                    external dcl 5-144
gtss_run_subsystem_$restor_perm 000000 constant        entry                    external dcl 5-145
gtss_set_slave_                 000000 constant        entry                    external dcl 5-146
gtss_set_slave_$load_bar        000000 constant        entry                    external dcl 5-147
gtss_update_safe_store_         000000 constant        entry                    external dcl 5-148
gtss_verify_access_             000000 constant        entry                    external dcl 5-149
gtss_verify_access_$check_forced_access
                                000000 constant        entry                    external dcl 5-150
gtss_write_starCFP_             000000 constant        entry                    external dcl 5-151
lbx                                    internal static fixed bin(17,0)          initial dcl 2-42
lpx                                    internal static fixed bin(17,0)          initial dcl 2-42
sbx                                    internal static fixed bin(17,0)          initial dcl 2-42
scux                                   based           structure                level 1 dcl 2-207
spx                                    internal static fixed bin(17,0)          initial dcl 2-42
status                                 automatic       fixed bin(24,0)          dcl 101

NAME DECLARED BY EXPLICIT CONTEXT.
gtss_drl_prgdes_                000037 constant        entry                    external dcl 14

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 45 60 60 66 72 78 78 78
fixed                                                  builtin function         ref 47 50 50 51 51
hbound                                                 builtin function         ref 64
null                                                   builtin function         ref 92 97 99 3-79 3-80

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       376         422     264         406
Length       712     264        24         253     111           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gtss_drl_prgdes_                    128 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gtss_drl_prgdes_         000100 arg_list_ptr                gtss_drl_prgdes_
                         000102 buf_ptr                     gtss_drl_prgdes_
                         000104 gseg                        gtss_drl_prgdes_
                         000106 i                           gtss_drl_prgdes_
                         000107 sub_system                  gtss_drl_prgdes_
                         000110 mcp                         gtss_drl_prgdes_
                         000112 scup                        gtss_drl_prgdes_
                         000114 primitive                   gtss_drl_prgdes_
                         000116 cmd_list_ptr                gtss_drl_prgdes_
                         000120 cmd_prim_list_ptr           gtss_drl_prgdes_
                         000122 cmd_list_len                gtss_drl_prgdes_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
gtss_abort_subsystem_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
gtss_ext_$gtss_slave_area_seg gtss_ext_$stack_level_        gtss_prgdes_ext_$prgdes       gtss_prgdes_ext_$primitives
gtss_ust_ext_$ust




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     14 000033        92 000044        97 000046        99 000047    3   79 000050    3   80 000051        25 000052
     44 000056        45 000060        46 000062        47 000067        50 000077        51 000113        56 000157
     58 000160        60 000164        63 000166        64 000170        65 000175        66 000204        71 000211
     72 000215        74 000221        77 000225        78 000231        81 000247        83 000250        86 000252
     87 000263


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
