	COMPILATION LISTING OF SEGMENT gtss_drl_filact_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/10/84  1232.4 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   *                                                         *
        4*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        5*   *                                                         *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 /* *************************************************************
       10*   *						   *
       11*   * Copyright (c) 1979 by Honeywell Information Systems, Inc. *
       12*   *						   *
       13*   ************************************************************* */
       14 gtss_drl_filact_: proc (mcp, increment);
       15 
       16 /**	gtss permanent file facilities
       17*
       18*   Authors: Robert J. Grimes	Created
       19*   -	  Albert N. Kepner	  1978
       20*   -	  Robert M. May
       21*   -	  David B. Ward
       22*   Change:  Dave Ward	02/24/79 $db debug switch.
       23*   Changed: Bob Alvarado      07/22/79 added call to funct08_
       24*   Changed: Dave Ward         1981     sorted dcl, added %page
       25***/
       26 
       27 /**
       28*
       29*   DRL FILACT, PERMANENT FILE ACTIVITIES (octal 36)
       30*
       31*   Grouped under DRL FILACT are the  following  permanent  file
       32*   functions:
       33*
       34*   Create Catalog (CC)
       35*   Create File (CF)
       36*   Access File (AF)
       37*   Purge Catalog (PC)
       38*   Purge File (PF)
       39*   Release File (RF)
       40*   Modify Catalog (MC)
       41*   Modify File (MF)
       42*   Special Access to Relocatable Subroutine Library
       43*
       44*   They  are differentiated by a function number that is passed
       45*   in the upper half of word 3 of the  calling  sequence.   The  DRL
       46*   FILACT  handles all permanent file requests with the exception of
       47*   file deaccesses.  These are handled by DRL RETFIL.
       48*
       49*    (See TSS SYSTEM PROGRAMMER'S
       50*         REFERENCE MANUAL DD17C, Rev. 0, July 1976
       51*         Page 3-36)
       52*
       53***/
       54 
       55 /*		P R O C E D U R E 			*/
       56 
       57 	scup = addr (mc.scu);			/* Get the system conditions */
       58 
       59 	high_b = gtss_ust.lsize.limit;		/* Highest memory offset available. */
       60 	high_i = fixed (high_b, 18);			/* (also as fixed binary) */
       61 	increment = 2;				/* All routines have two filact_args */
       62 
       63 /**	Obtain pointer to GCOS caller's "memory"	**/
       64 	gseg = gtss_ext_$gtss_slave_area_seg (gtss_ext_$stack_level_);
       65 
       66 /**	Obtain filact derail calling sequence parameters.		**/
       67 	if ((fixed (scu.ilc, 18)+1) < low_i) |
       68 	((fixed (scu.ilc, 18)+2)>high_i) then do;	/* Outside of memory. */
       69 return_err4:   ;
       70 	     call gtss_abort_subsystem_ (
       71 		mcp
       72 		, "gtss_drl_filact_"
       73 		, 4
       74 		, gtss_pnterr.err4
       75 		, fixed (scu.ilc, 18)
       76 		);
       77 	     goto ret;
       78 	end;
       79 	arg_ptr = addrel (gseg, fixed (scu.ilc, 18)+1);
       80 
       81 /**	Assure that the filact function number is in range.	**/
       82 	if (Function_number >= lbound (function, 1)) & (Function_number <= hbound (function, 1)) then do;
       83 	     if have_buffer (Function_number) then do;
       84 
       85 
       86 /**	Verify caller's buffer within acceptable memory.	**/
       87 		if (every_entry.L_buffer<low_b) |
       88 		((fixed (every_entry.L_buffer, 18) +size (callers_buffer)-1) > high_i) then goto return_err4;
       89 
       90 /**	Assure the caller's arg list does not fall within his buffer.	**/
       91 		if (every_entry.L_arglist >= every_entry.L_buffer) &
       92 		((fixed (every_entry.L_arglist, 18)+1) < (fixed (every_entry.L_buffer, 18) + size (callers_buffer))) then goto return_err4;
       93 
       94 		buffer_ptr = addrel (gseg, every_entry.L_buffer);
       95 		unspec (callers_buffer) = "0"b;	/* Zero caller's buffer. */
       96 
       97 	     end;
       98 	     else buffer_ptr = null ();
       99 
      100 	     if db_drl_filact then
      101 		call gtss_dump_filact_args_ (arg_ptr);
      102 	     goto function (Function_number);		/* goto the appropriate function processor */
      103 
      104 
      105 	end;
      106 
      107 /*		NEVER IMPLEMENTED			*/
      108 function (00): ;
      109 	call gtss_abort_subsystem_ (
      110 	     mcp
      111 	     , "gtss_drl_filact_"
      112 	     , 30
      113 	     , gtss_pnterr.err30
      114 	     , fixed (scu.ilc, 18)
      115 	     , Function_number
      116 	     );
      117 
      118 ret:	;
      119 
      120 	return;
      121 
      122 /*		NOT IMPLEMENTED FUNCTIONS		*/
      123 function (01): ;
      124 
      125 	call gtss_abort_subsystem_ (
      126 	     mcp
      127 	     , "gtss_drl_filact_"
      128 	     , 0
      129 	     , gtss_pnterr.err103
      130 	     , Function_number
      131 	     );
      132 	return;
      133 
      134 /* 		(CF) Create Catalog		*/
      135 function (02): ;
      136 
      137 	call gtss_filact_funct02_ (
      138 	     mcp
      139 	     , high_b
      140 	     , gseg
      141 	     , arg_ptr
      142 	     , buffer_ptr
      143 	     , code
      144 	     );
      145 	if code = 4 then goto return_err4;
      146 	return;
      147 
      148 /*		(CF) Create File			*/
      149 function (03): ;
      150 
      151 	call gtss_filact_funct03_ (
      152 	     mcp
      153 	     , high_b
      154 	     , gseg
      155 	     , arg_ptr
      156 	     , buffer_ptr
      157 	     , code
      158 	     );
      159 	if code = 4 then goto return_err4;
      160 	return;
      161 
      162 /*		(AF) Access File			*/
      163 function (04): ;
      164 
      165 	call gtss_filact_funct04_ (
      166 	     mcp
      167 	     , high_b
      168 	     , gseg
      169 	     , arg_ptr
      170 	     , buffer_ptr
      171 	     , code
      172 	     );
      173 	if code = 4 then goto return_err4;
      174 	return;
      175 
      176 /*		Access Subroutine Libraries		*/
      177 function (05): ;
      178 
      179 	call gtss_filact_funct05_ (
      180 	     mcp
      181 	     , high_b
      182 	     , gseg
      183 	     , arg_ptr
      184 	     , buffer_ptr
      185 	     , code
      186 	     );
      187 	if code = 4 then goto return_err4;
      188 	return;
      189 
      190 function (06): ;
      191 	goto function (00);
      192 
      193 function (07): ;
      194 	goto function (00);
      195 
      196 
      197 /*	(PC) Purge Catalog.	*/
      198 function (08): ;
      199 	call gtss_filact_funct08_ (
      200 		mcp
      201 		, high_b
      202 		, gseg
      203 		, arg_ptr
      204 		, buffer_ptr
      205 		, code
      206 		);
      207 	if code = 4 then goto return_err4;
      208 	return;
      209 
      210 
      211 /*	(PF) Purge File.	*/
      212 function (09): ;
      213 	goto function (22);
      214 
      215 
      216 /*		(MC) Modify Catalog			*/
      217 function (10): ;
      218 
      219 	call gtss_filact_funct10_ (
      220 	     mcp
      221 	     , high_b
      222 	     , gseg
      223 	     , arg_ptr
      224 	     , buffer_ptr
      225 	     , code
      226 	     );
      227 	if code = 4 then goto return_err4;
      228 	return;
      229 
      230 /*		(MF) Modify File			*/
      231 function (11): ;
      232 
      233 	call gtss_filact_funct11_ (
      234 	     mcp
      235 	     , high_b
      236 	     , gseg
      237 	     , arg_ptr
      238 	     , buffer_ptr
      239 	     , code
      240 	     );
      241 	if code = 4 then goto return_err4;
      242 	return;
      243 
      244 function (12): ;
      245 	goto function (01);
      246 
      247 function (13): ;
      248 	goto function (01);
      249 
      250 /*		System Master Catalog Query		*/
      251 function (14): ;
      252 
      253 	call gtss_filact_funct14_ (
      254 	     mcp
      255 	     , high_b
      256 	     , gseg
      257 	     , arg_ptr
      258 	     , buffer_ptr
      259 	     , code
      260 	     );
      261 	if code = 4 then goto return_err4;
      262 	return;
      263 
      264 function (15): ;
      265 	goto function (01);
      266 
      267 function (16): ;
      268 	goto function (01);
      269 
      270 function (17): ;
      271 	goto function (01);
      272 
      273 /*		Get Current			*/
      274 function (18): ;
      275 
      276 	call gtss_filact_funct18_ (
      277 	     mcp
      278 	     , high_b
      279 	     , gseg
      280 	     , arg_ptr
      281 	     , buffer_ptr
      282 	     , code
      283 	     );
      284 	if code = 4 then goto return_err4;
      285 	return;
      286 
      287 /*		Get First			*/
      288 function (19): ;
      289 
      290 	call gtss_filact_funct19_ (
      291 	     mcp
      292 	     , (high_b)
      293 	     , gseg
      294 	     , arg_ptr
      295 	     , buffer_ptr
      296 	     , code
      297 	     );
      298 	if code = 4 then goto return_err4;
      299 	return;
      300 
      301 function (20): ;
      302 	goto function (01);
      303 
      304 function (21): ;
      305 
      306 	call gtss_filact_funct21_ (
      307 	     mcp
      308 	     , high_b
      309 	     , gseg
      310 	     , arg_ptr
      311 	     , buffer_ptr
      312 	     , code
      313 	     );
      314 	if code = 4 then goto return_err4;
      315 	return;
      316 
      317 
      318 /*	(RF) Release File.	*/
      319 function (22): ;
      320 
      321 	call gtss_filact_funct22_ (
      322 	     mcp
      323 	     , high_b
      324 	     , gseg
      325 	     , arg_ptr
      326 	     , buffer_ptr
      327 	     , code
      328 	     );
      329 	if code = 4 then goto return_err4;
      330 	return;
      331 
      332 /** Declarations for gtss_drl_filact_:
      333*     IDENTIFIER		ATTRIBUTES	**/
      334 dcl  arg_ptr                  ptr init(null());
      335 dcl  code                     fixed bin(35);
      336 dcl  gseg                     ptr init(null());
      337 dcl  gtss_dump_filact_args_	entry(ptr);
      338 dcl  high_b                   bit(18);
      339 dcl  high_i                   fixed bin(18)aligned;
      340 dcl  increment                fixed bin(24)parm;
      341 dcl  lbound                   builtin;
      342 dcl  low_b                    bit(18)aligned static int options(constant)init("000147"b3) /* 103 dec. */;
      343 dcl  low_i                    fixed bin(18)aligned static int options(constant)init(103);
      344 dcl  null			builtin;
      345 dcl  size                     builtin;
      346 
      347 dcl  1 every_entry		aligned based(arg_ptr)
      348 ,      3 zero		bit(18)unal
      349 ,      3 L_arglist		bit(18)unal
      350 ,      3 Function_number	fixed bin(17)unal
      351 ,      3 L_buffer		bit(18)unal;
      352 
      353 dcl  have_buffer              (00:22)bit(1)static int options(constant)init(
      354   /* 00 */	"0"b
      355 , /* 01 */	"0"b
      356 , /* 02 */	"1"b
      357 , /* 03 */	"1"b
      358 , /* 04 */	"1"b
      359 , /* 05 */	"0"b
      360 , /* 06 */	"0"b
      361 , /* 07 */	"0"b
      362 , /* 08 */	"1"b
      363 , /* 09 */	"1"b
      364 , /* 10 */	"1"b
      365 , /* 11 */	"1"b
      366 , /* 12 */	"0"b
      367 , /* 13 */	"0"b
      368 , /* 14 */	"1"b
      369 , /* 15 */	"0"b
      370 , /* 16 */	"0"b
      371 , /* 17 */	"0"b
      372 , /* 18 */	"1"b
      373 , /* 19 */	"1"b
      374 , /* 20 */	"0"b
      375 , /* 21 */	"1"b
      376 , /* 22 */	"1"b
      377 
      378 );
      379 
  1     1 /* BEGIN INCLUDE FILE gtss_ust_ext_.incl.pl1 */
  1     2 /* UST: User Status Table 
  1     3*   definitions based on 
  1     4*   System Tables, Order number DD14-01E, January 1981
  1     5*   Section 15, Time Sharing System
  1     6*
  1     7*   Authors: Robert J. Grimes	Created
  1     8*   -	  Albert N. Kepner	  1978
  1     9*   -	  Robert M. May
  1    10*   -	  David B. Ward
  1    11*   Change:  Dave Ward	02/23/79 Level 4 numbering.
  1    12*   Change:  Ron Barstad  83-07-12 Repaired damaged formating and word offset comments
  1    13*                                  Brought up to 4JS3 functionality
  1    14**/
  1    15 /* octal word offsets of entries */
  1    16 dcl 1 gtss_ust_ext_$ust aligned ext,
  1    17       3 gtss_ust,
  1    18 /* 0-1  */	4 lid		bit (72),
  1    19 /* 2    */	4 lstp		bit (36),
  1    20 /* 3    */	4 ltin		bit (36),
  1    21 /* 4    */	4 lstio,
  1    22 			5 no_of_chars_by_8  fixed bin (18) uns unal,
  1    23 			5 no_of_disk_io     fixed bin (18) uns unal,
  1    24 /* 5    */	4 lsnub		bit (36),
  1    25 /* 6-7  */	4 lchg		bit (72),
  1    26 /* 10   */	4 lbuf,
  1    27 			5 address		bit (18)unaligned,
  1    28 			5 tally		bit (1)unaligned,
  1    29 			5 terminal_type	bit (5)unaligned,
  1    30 			5 station_id	bit (12)unaligned,
  1    31 /* 11-12 */	4 liost (0:1)	bit (36),
  1    32 /* 13   */	4 lcc		bit (36),
  1    33 /* 14   */	4 lback,
  1    34 			5 fill1		bit (18) unaligned,
  1    35 			5 gwake		fixed bin (17) unaligned,
  1    36 /* 15   */	4 lflag,
  1    37 			5 mp_list		bit (18) unaligned,
  1    38 			5 flags unaligned,
  1    39 				6 b18		bit (1) unaligned,
  1    40 				6 b19		bit (1) unaligned,
  1    41 				6 b20		bit (1) unaligned,
  1    42 				6 b21		bit (1) unaligned,
  1    43 				6 b22		bit (1) unaligned,
  1    44 				6 b23		bit (1) unaligned,
  1    45 				6 b24		bit (1) unaligned,
  1    46 				6 b25		bit (1) unaligned,
  1    47 				6 b26		bit (1) unaligned,
  1    48 				6 b27		bit (1) unaligned,
  1    49 				6 b28		bit (1) unaligned,
  1    50 				6 b29		bit (1) unaligned,
  1    51 				6 b30		bit (1) unaligned,
  1    52 				6 b31		bit (1) unaligned,
  1    53 				6 b32		bit (1) unaligned,
  1    54 				6 b33		bit (1) unaligned,
  1    55 				6 b34		bit (1) unaligned,
  1    56 				6 b35		bit (1) unaligned,
  1    57 /* 16   */	4 lkdss		bit (36),
  1    58 /* 17   */	4 lfile,
  1    59 			5 program_stack	fixed bin (17) unal,
  1    60 			5 file_list_ptr	bit (18) unal,
  1    61 /* 20   */	4 lttys		bit (36),
  1    62 /* 21   */	4 lswth,
  1    63 			5 b0		bit (1) unaligned,
  1    64 			5 b1		bit (1) unaligned,
  1    65 			5 b2		bit (1) unaligned,
  1    66 			5 b3		bit (1) unaligned,
  1    67 			5 b4		bit (1) unaligned,
  1    68 			5 b5		bit (1) unaligned,
  1    69 			5 b6		bit (1) unaligned,
  1    70 			5 b7		bit (1) unaligned,
  1    71 			5 b8		bit (1) unaligned,
  1    72 			5 b9		bit (1) unaligned,
  1    73 			5 b10		bit (1) unaligned,
  1    74 			5 b11		bit (1) unaligned,
  1    75 			5 b12		bit (1) unaligned,
  1    76 			5 b13		bit (1) unaligned,
  1    77 			5 b14		bit (1) unaligned,
  1    78 			5 b15		bit (1) unaligned,
  1    79 			5 b16		bit (1) unaligned,
  1    80 			5 b17		bit (1) unaligned,
  1    81 			5 b18		bit (1) unaligned,
  1    82 			5 b19		bit (1) unaligned,
  1    83 			5 b20		bit (1) unaligned,
  1    84 			5 b21		bit (1) unaligned,
  1    85 			5 b22		bit (1) unaligned,
  1    86 			5 b23		bit (1) unaligned,
  1    87 			5 b24		bit (1) unaligned,
  1    88 			5 b25		bit (1) unaligned,
  1    89 			5 b26		bit (1) unaligned,
  1    90 			5 b27		bit (1) unaligned,
  1    91 			5 b28		bit (1) unaligned,
  1    92 			5 b29		bit (1) unaligned,
  1    93 			5 b30		bit (1) unaligned,
  1    94 			5 b31		bit (1) unaligned,
  1    95 			5 b32		bit (1) unaligned,
  1    96 			5 b33		bit (1) unaligned,
  1    97 			5 b34		bit (1) unaligned,
  1    98 			5 b35		bit (1) unaligned,
  1    99 /* 22   */	4 lsize,
  1   100 			5 bar		fixed bin (17) unaligned,
  1   101 			5 limit		bit (18) unaligned,
  1   102 /* 23... */	4 lswap,
  1   103 			5 fill		bit (18) unal,
  1   104 			5 size		bit (18) unal,
  1   105 /* ...24 */	4 transfer_cell	bit (36) unal,
  1   106 /* 25   */	4 lerrm		bit (36),
  1   107 /* 26-37 */	4 lcfil (0:9)	bit (36),
  1   108 /* 40   */	4 lsybc,
  1   109 			5 b0_17		fixed bin (17) unaligned,
  1   110 			5 b18_35		fixed bin (17) unaligned,
  1   111 /* 41-42 */	4 lstem (0:1)	bit (36),
  1   112 /* 43    */	4 lcals,
  1   113 			5 b0_17		fixed bin (17) unaligned,
  1   114 			5 b18_35		bit (18) unaligned,
  1   115 /* 44-51 */	4 subsystems (3),
  1   116 			5 content_lswap,
  1   117 				6 fill		bit (18) unal,
  1   118 				6 size		bit (18) unal,
  1   119 			5 tally_address	fixed bin (17) unaligned,
  1   120 			5 ss_flags	bit (18) unaligned,
  1   121 /* 52   */	4 ltalc,
  1   122 			5 tod		fixed bin (17) unaligned,
  1   123 			5 startup		fixed bin (17) unaligned,
  1   124 /* 53   */	4 lspts		fixed bin (35),
  1   125 /* 54   */	4 lflg2,
  1   126 			5 b0		bit (1) unaligned,
  1   127 			5 b1		bit (1) unaligned,
  1   128 			5 b2		bit (1) unaligned,
  1   129 			5 b3		bit (1) unaligned,
  1   130 			5 b4		bit (1) unaligned,
  1   131 			5 b5		bit (1) unaligned,
  1   132 			5 b6		bit (1) unaligned,
  1   133 			5 b7		bit (1) unaligned,
  1   134 			5 b8		bit (1) unaligned,
  1   135 			5 b9		bit (1) unaligned,
  1   136 			5 b10		bit (1) unaligned,
  1   137 			5 b11		bit (1) unaligned,
  1   138 			5 b12		bit (1) unaligned,
  1   139 			5 b13		bit (1) unaligned,
  1   140 			5 b14		bit (1) unaligned,
  1   141 			5 b15		bit (1) unaligned,
  1   142 			5 b16		bit (1) unaligned,
  1   143 			5 b17		bit (1) unaligned,
  1   144 			5 b18		bit (1) unaligned,
  1   145 			5 b19		bit (1) unaligned,
  1   146 			5 b20		bit (1) unaligned,
  1   147 			5 b21		bit (1) unaligned,
  1   148 			5 b22		bit (1) unaligned,
  1   149 			5 b23		bit (1) unaligned,
  1   150 			5 b24		bit (1) unaligned,
  1   151 			5 b25		bit (1) unaligned,
  1   152 			5 b26		bit (1) unaligned,
  1   153 			5 b27		bit (1) unaligned,
  1   154 			5 b28		bit (1) unaligned,
  1   155 			5 b29		bit (1) unaligned,
  1   156 			5 b30		bit (1) unaligned,
  1   157 			5 b31		bit (1) unaligned,
  1   158 			5 b32		bit (1) unaligned,
  1   159 			5 b33		bit (1) unaligned,
  1   160 			5 b34		bit (1) unaligned,
  1   161 			5 b35		bit (1) unaligned,
  1   162 /* 55-60 */	4 lsftm (0:3)	bit (36),
  1   163 /* 61    */	4 lsprt		fixed bin (35),
  1   164 /* 62    */	4 ltrm		bit (36),
  1   165 /* 63    */	4 linno		fixed bin (35),
  1   166 /* 64    */	4 lincr		fixed bin (35),
  1   167 /* 65    */	4 ltdes		bit (36),
  1   168 /* 66    */	4 lbptr		bit (36),
  1   169 /* 67    */	4 lpptr,
  1   170 			5 last_file_pat_ptr	bin (18) uns unal,
  1   171 			5 lpptr_reserved	bin (18) uns unal,
  1   172 /* 70    */	4 lsclp		bit (36),
  1   173 /* 71    */	4 limit		fixed bin (35),
  1   174 /* 72    */	4 lacpt,
  1   175 			5 jout_pat_offset	bit (18) unal,
  1   176 			5 permissions unal,
  1   177 				6 lodx		bit (1) unal,
  1   178 				6 cardin		bit (1) unal,
  1   179 				6 talk		bit (1) unal,
  1   180 				6 lods		bit (1) unal,
  1   181 			5 cardin_urgency	bit (14) unal,
  1   182 /* 73    */	4 ldrl,
  1   183 			5 ilc		bit (18) unaligned,
  1   184 			5 code		fixed bin (17) unaligned,
  1   185 /* 74    */	4 ljsnb		bit (36),
  1   186 /* 75    */	4 ltm0		bit (36),
  1   187 /* 76    */	4 ltm1		bit (36),
  1   188 /* 77    */	4 ltm2		bit (36),
  1   189 /* 100   */	4 ltm3		bit (36),
  1   190 /* 101   */	4 ltm4		bit (36),
  1   191 /* 102   */	4 ltm5		bit (36),
  1   192 /* 103   */	4 ltmwt		bit (36),
  1   193 /* 104   */	4 ltmrs		bit (36),
  1   194 /* 105   */	4 ltc0		bit (36),
  1   195 /* 106   */	4 ltc1		bit (36),
  1   196 /* 107   */	4 ltc2		bit (36),
  1   197 /* 110   */	4 lct3		bit (36),
  1   198 /* 111   */	4 ltc4		bit (36),
  1   199 /* 112   */	4 ltc5		bit (36),
  1   200 /* 113   */	4 ltcw		bit (36),
  1   201 /* 114   */	4 lkst		bit (36),
  1   202 /* 115   */	4 lkst2		bit (36),
  1   203 /* 116   */	4 lkcc		bit (36),
  1   204 /* 117   */	4 lkms		bit (36),
  1   205 /* 120-121 */	4 lksdc (0:1)	bit (36),
  1   206 /* 122   */	4 lkntp		bit (36),
  1   207 /* 123   */	4 lkrdc		bit (36),
  1   208 /* 124   */	4 lpqf		bit (36),
  1   209 /* 125   */	4 lpqb		bit (36),
  1   210 /* 126   */	4 lustl		bit (36),
  1   211 /* 127   */	4 ltemp		bit (36),
  1   212 /* 130   */	4 lrtll,
  1   213 			5 word_length	fixed bin unaligned,
  1   214 			5 char_length	fixed bin unaligned,
  1   215 /* 131   */	4 ltim		bit (36),
  1   216 /* 132   */	4 lcfio,
  1   217 			5 sect_out	fixed bin(18)unsigned unal,
  1   218 			5 sect_in		fixed bin(18)unsigned unal,
  1   219 /* 133   */	4 lcfst,
  1   220 			5 initial_sect_out	fixed bin(18)unsigned unal,
  1   221 			5 start_term	fixed bin(18)unsigned unal,
  1   222 /* 134   */	4 lcmpt		bit (36),
  1   223 /* 135   */	4 lcjid		bit (36),
  1   224 /* 136-137 */	4 lrcal (0:1)	bit (36),
  1   225 /* 140   */	4 lrdta		bit (36),
  1   226 /* 141   */	4 lrrsk		bit (36),
  1   227 /* 142   */	4 lrskd		bit (36),
  1   228 /* 143   */	4 lrcc		bit (36),
  1   229 /* 144-145 */	4 lrsts (0:1)	bit (36),
  1   230 /* 146   */	4 lrtm		bit (36),
  1   231 /* 147   */	4 lswt2,
  1   232 			5 b0		bit (1) unaligned,
  1   233 			5 b1		bit (1) unaligned,
  1   234 			5 b2		bit (1) unaligned,
  1   235 			5 b3		bit (1) unaligned,
  1   236 			5 b4		bit (1) unaligned,
  1   237 			5 b5		bit (1) unaligned,
  1   238 			5 b6		bit (1) unaligned,
  1   239 			5 b7		bit (1) unaligned,
  1   240 			5 b8		bit (1) unaligned,
  1   241 			5 b9		bit (1) unaligned,
  1   242 			5 b10		bit (1) unaligned,
  1   243 			5 b11		bit (1) unaligned,
  1   244 			5 b12		bit (1) unaligned,
  1   245 			5 b13		bit (1) unaligned,
  1   246 			5 b14		bit (1) unaligned,
  1   247 			5 b15		bit (1) unaligned,
  1   248 			5 b16		bit (1) unaligned,
  1   249 			5 b17		bit (1) unaligned,
  1   250 			5 b18		bit (1) unaligned,
  1   251 			5 b19		bit (1) unaligned,
  1   252 			5 b20		bit (1) unaligned,
  1   253 			5 b21		bit (1) unaligned,
  1   254 			5 b22		bit (1) unaligned,
  1   255 			5 b23		bit (1) unaligned,
  1   256 			5 b24		bit (1) unaligned,
  1   257 			5 b25		bit (1) unaligned,
  1   258 			5 b26		bit (1) unaligned,
  1   259 			5 b27		bit (1) unaligned,
  1   260 			5 b28		bit (1) unaligned,
  1   261 			5 b29		bit (1) unaligned,
  1   262 			5 b30		bit (1) unaligned,
  1   263 			5 b31		bit (1) unaligned,
  1   264 			5 b32		bit (1) unaligned,
  1   265 			5 b33		bit (1) unaligned,
  1   266 			5 b34		bit (1) unaligned,
  1   267 			5 b35		bit (1) unaligned,
  1   268 /* 150   */	4 llsnb		bit (36),
  1   269 /* 151   */	4 lesq		bit (36),
  1   270 /* 152-153 */	4 lumc (0:1)	bit (36),
  1   271 /* 154-155 */	4 lfnam (0:1)	bit (36),
  1   272 /* 156   */	4 lopts		bit (36),
  1   273 /* 157   */	4 licec,
  1   274 			5 b0_17		bit (18) unaligned,
  1   275 			5 b18_35		fixed bin (17) unaligned,
  1   276 /* 160   */	4 lflg3,
  1   277 			5 b0		bit (1) unaligned,
  1   278 			5 b1		bit (1) unaligned,
  1   279 			5 b2		bit (1) unaligned,
  1   280 			5 b3		bit (1) unaligned,
  1   281 			5 b4		bit (1) unaligned,
  1   282 			5 b5		bit (1) unaligned,
  1   283 			5 b6		bit (1) unaligned,
  1   284 			5 b7		bit (1) unaligned,
  1   285 			5 b8		bit (1) unaligned,
  1   286 			5 b9		bit (1) unaligned,
  1   287 			5 b10		bit (1) unaligned,
  1   288 			5 b11		bit (1) unaligned,
  1   289 			5 b12		bit (1) unaligned,
  1   290 			5 b13		bit (1) unaligned,
  1   291 			5 b14		bit (1) unaligned,
  1   292 			5 b15		bit (1) unaligned,
  1   293 			5 b16		bit (1) unaligned,
  1   294 			5 b17		bit (1) unaligned,
  1   295 			5 b18		bit (1) unaligned,
  1   296 			5 b19		bit (1) unaligned,
  1   297 			5 b20		bit (1) unaligned,
  1   298 			5 b21		bit (1) unaligned,
  1   299 			5 b22		bit (1) unaligned,
  1   300 			5 b23		bit (1) unaligned,
  1   301 			5 b24		bit (1) unaligned,
  1   302 			5 b25		bit (1) unaligned,
  1   303 			5 b26		bit (1) unaligned,
  1   304 			5 b27		bit (1) unaligned,
  1   305 			5 b28		bit (1) unaligned,
  1   306 			5 b29		bit (1) unaligned,
  1   307 			5 b30		bit (1) unaligned,
  1   308 			5 b31		bit (1) unaligned,
  1   309 			5 b32		bit (1) unaligned,
  1   310 			5 b33		bit (1) unaligned,
  1   311 			5 b34		bit (1) unaligned,
  1   312 			5 b35		bit (1) unaligned,
  1   313 /* 161-163 */	4 lpage (0:2)	bit (36),
  1   314 /* 164   */	4 lsit1		bit (36),
  1   315 /* 165   */	4 lsit2		bit (36),
  1   316 /* 166   */	4 lsit3		bit (36),
  1   317 /* 167   */	4 lsit4		bit (36),
  1   318 /* The following entries are maintained by gtss and are not found in TSS UST */
  1   319 /* 170   */	4 lxxx, /* program stack index, offset from gtss_ust */
  1   320 			5 b0_17		fixed bin (17) unaligned,
  1   321 			5 b18_35		bit (18) unaligned, /* not used */
  1   322 /* 171-175 */	4 lprgs (5),
  1   323 			5 b0_17		fixed bin (17) unaligned,
  1   324 			5 b18_35		fixed bin (17) unaligned,
  1   325 /* 176   */	4 fill	bit (36),
  1   326 /* 177   */	4 remote_io_buffer aligned,
  1   327 			5 buffer_control_word,
  1   328 				6 current_line_pointer  bit (18)unal,
  1   329 				6 buffer_threshold_address  bit (18)unal,
  1   330 			5 number_words_transmitted	fixed bin (17)unal,
  1   331 			5 FILL1			fixed bin (17)unal,
  1   332 			5 count_of_characters_transmitted fixed bin (17)unal,
  1   333 			5 FILL2			fixed bin (17)unal,
  1   334 			5 characters_transmitted (244) char (1) unal,
  1   335 /* 277   */	4 word_after_ust		bit (36) aligned;
  1   336 
  1   337 /*   END INCLUDE FILE gtss_ust_ext_.incl.pl1 */
      380 
      381 
  2     1 /* BEGIN INCLUDE FILE gtss_ext_.incl.pl1 */
  2     2 /*
  2     3*  Created: (Wardd Multics)  05/20/78 1307.6 mst Sat 
  2     4*  Modified: Ward            1981     add suspended_process dcl
  2     5*  Modified: Ron Barstad  83-07-21  Fixed level number on mcfc to 3
  2     6*  Modified: Ron Barstad  83-07-25  Fixed derail range in statistics to 4js3 number
  2     7**/
  2     8 dcl  gtss_ext_$aem                   fixed bin static ext	/* >0 Print "additional" error information. */;
  2     9 dcl  gtss_ext_$bad_drl_rtrn          static ext label	/* Default for drl_rtrn. */;
  2    10 dcl  gtss_ext_$db                    (72)bit(1)unal static ext;
  2    11 dcl  gtss_ext_$deferred_catalogs_ptr ptr ext;
  2    12 dcl  gtss_ext_$dispose_of_drl        static ext label	/* quit handlers for some derails use this label to abort */;
  2    13 dcl  gtss_ext_$drl_rtrn              (4)static ext label	/* where to return at subsystem end */;
  2    14 dcl  gtss_ext_$drm_path              char(168)static ext	/* gtss_expand_pathname_stores drm_path */;
  2    15 dcl  gtss_ext_$drun_jid              char (5) static ext	/* valid only for DRUN executing under absentee */;
  2    16 dcl  gtss_ext_$event_channel         fixed bin (71) static ext	/* used for DABT signals */;
  2    17 dcl  gtss_ext_$finished              static ext label	/* Return to gtss for normal conclusion. */;
  2    18 dcl  gtss_ext_$gdb_name              char(8)ext	/* Name H* module to debug. */;
  2    19 dcl  gtss_ext_$get_line              entry(ptr,ptr,fixed bin(21),fixed bin(21),fixed bin(35))variable ext /* Build mode input procedure. */;
  2    20 dcl  gtss_ext_$gtss_slave_area_seg   (4) ext static ptr	/* pointer to gtss slave area segment */;
  2    21 dcl  gtss_ext_$hcs_work_area_ptr     ptr ext static		/* Temp seg for acl lists. */;
  2    22 dcl  gtss_ext_$homedir               char (64) static ext /* user's home dir */;
  2    23 dcl  gtss_ext_$last_k_was_out        bit (1)aligned ext static	/* "1"b => last tty output was output. */;
  2    24 dcl  gtss_ext_$pdir                  char (168) varying ext static	/* pathname of process directory */;
  2    25 dcl  gtss_ext_$popup_from_pi         static ext label	/* transfer to this label after pi simulates popup primitive */;
  2    26 dcl  gtss_ext_$process_type          fixed bin (17) static ext;
  2    27 dcl  gtss_ext_$put_chars             entry(ptr,ptr,fixed bin(24),fixed bin(35)) variable ext	/* Terminal output procedure. */;
  2    28 dcl  gtss_ext_$restart_from_pi       static ext label	/* transfer to this label after pi restores machine conditions */;
  2    29 dcl  gtss_ext_$restart_seg_ptr       ptr static ext	/* points to DRUN restart file when exec under absentee */;
  2    30 dcl  gtss_ext_$sig_ptr               ext static ptr	/* saved ptr to signal_ */;
  2    31 dcl  gtss_ext_$stack_level_          fixed bin ext static;
  2    32 dcl  gtss_ext_$suspended_process     bit(1) ext static;
  2    33 dcl  gtss_ext_$SYstarstar_file_no    fixed bin (24) static ext;
  2    34 dcl  gtss_ext_$user_id               char (26)var ext;
  2    35 dcl  gtss_ext_$work_area_ptr         ptr ext;
  2    36 
  2    37 dcl  1 gtss_ext_$CFP_bits aligned static external
  2    38      , 3 no_input_yet bit (1) unaligned         /* used in gtss_CFP_input_, gtss_read_starCFP_ */
  2    39      , 3 rtn_bits bit (4) unaligned             /* used in gtss_CFP_input_, gtss_CFP_output_ */
  2    40      , 3 cpos_called bit (1) unaligned          /* used in gtss_CFP_input_, gtss_drl_t_cfio_, gtss_abandon_CFP_ */
  2    41      , 3 cout_called bit (1) unaligned          /* used in gtss_read_starCFP_, gtss_abandon_CFP_ */
  2    42      , 3 build_mode bit (1) unaligned	        /* used in gtss_build_, gtss_dsd_process_ */
  2    43      ;
  2    44 
  2    45 dcl 1 gtss_ext_$com_reg aligned static ext,
  2    46        3 tsdmx,
  2    47          4 dst fixed bin (18) unsigned unaligned,
  2    48          4 dit fixed bin (18) unsigned unaligned,
  2    49        3 tsdpt fixed bin (36) unsigned unaligned,
  2    50        3 tsddt fixed bin (36) unsigned unaligned,
  2    51        3 tsdid bit (72) unaligned,
  2    52        3 tsdsd bit (36) unaligned,
  2    53        3 tsdst fixed bin (36) unsigned unaligned,
  2    54        3 tsdjb fixed bin (35) unaligned,
  2    55        3 tsdgt,
  2    56          4 ust_loc fixed bin (18) unsigned unaligned,
  2    57          4 gating_ctl fixed bin (18) unsigned unaligned,
  2    58        3 tcdfr bit (36) unaligned;
  2    59 
  2    60 dcl 1 gtss_ext_$flags aligned static ext
  2    61      , 3 dispose_of_drl_on_pi	bit (01) unal	/* 1 => drl that should be aborted after quit-pi sequence */
  2    62      , 3 drl_in_progress	bit (01) unal	/* 1 => drl handler executing; 0 => gcos code executing */
  2    63      , 3 popup_from_pi	bit (01) unal	/* 1 => derail processor will simulate Gcos break instead of returning */
  2    64      , 3 unfinished_drl	bit (01) unal	/* 1 => subsystem is handling breaks and quit was raised during a drl */
  2    65      , 3 ss_time_limit_set	bit (01) unal	/* 1 => exec time limit set for subsystem */
  2    66      , 3 timer_ranout	bit (01) unal	/* 1 => user is executing timer runout code */
  2    67      , 3 gtss_com_err_sw      bit (01) unal       /* 1 => stop com_err_ string from going to terminal */   
  2    68      , 3 available		bit (65) unal
  2    69      ;
  2    70 
  2    71 
  2    72 dcl 1 gtss_ext_$statistics aligned static ext,		/* Derail usage statistics */
  2    73       3 total_time (-10:71)fixed bin (71),
  2    74       3 count (-10:71)fixed bin (17);
  2    75 
  2    76 /* 	Declaration of Available File Table
  2    77*   */
  2    78 dcl 1 gtss_ext_$aft aligned ext,			/* aft structure */
  2    79 
  2    80       3 start_list (0:102) fixed bin (24),		/* >0 => 1st aft_entry row to start of next entry chain. */
  2    81 
  2    82       3 aft_entry (20),
  2    83         4 altname char (8),				/* altname name for attaching this file */
  2    84         4 next_entry fixed bin (24),			/* Next aft_entry in hash chain. */
  2    85         4 previous_add fixed bin (24),			/* Previously added entry. */
  2    86         4 next_add fixed bin (24),			/* Entry added after this one. */
  2    87         4 used bit (1) unal,				/* "1"b => aft_entry contains AFT value. */
  2    88         4 forced bit(1) unal,				/* "1"b => gtss_verify_access_ forced access on this file. */
  2    89 
  2    90       3 free_space fixed bin (24),			/* Index of start of free space list for aft entries. */
  2    91       3 first_added fixed bin (24),			/* >0  => start of chain in add order. */
  2    92       3 last_added fixed bin (24)			/* >0 => end of chain in added order. */;
  2    93 
  2    94 dcl  gtss_ext_$ppt                   ptr ext /*  switch name for tapein drl */;
  2    95 /**	Data structure to provide access to installed
  2    96*   subsystems fast library load.
  2    97*   **/
  2    98 dcl 1 gtss_ext_$fast_lib aligned ext
  2    99      , 3 fast_lib_fcb ptr				/* Pointer to msf fcb.	*/
  2   100      , 3 fast_lib_ncp fixed bin (24)			/* Number of components. */
  2   101      , 3 comp_ptr (0:9)ptr				/* Pointer to component. */
  2   102      , 3 comp_wds (0:9)fixed bin (24)			/* Component length (words). */
  2   103      ;
  2   104 
  2   105 /* Pointers to segments to regulate multipler
  2   106*   callers to files. Same segments are used to regulate
  2   107*   all simulator callers.
  2   108**/
  2   109 dcl 1 gtss_ext_$mcfc	aligned ext,
  2   110       3 multics_lock_id	bit(36),
  2   111       3 wait_time		fixed bin,
  2   112       3 files_ptr		ptr,
  2   113       3 names_ptr		ptr,
  2   114       3 callers_ptr		(0:3)ptr
  2   115 ;
  2   116 
  2   117 /*   END INCLUDE FILE gtss_ext_.incl.pl1 */
      382 
      383 
  3     1 /* BEGIN INCLUDE FILE gtss_pnterr.incl.pl1 */
  3     2 /*
  3     3*  Created: (Grimes SMP)  04/15/78 0933.2 mst Sat 
  3     4*   Change: Dave Ward	06/08/78 made attributes constant.
  3     5*   Change: Dave Ward	08/17/81 made lengths same as constans.
  3     6*   Change: Ron Barstad  83-03-29  fixed err 53, add missing err 56
  3     7*   Change: Ron Barstad  84-02-27  changed back to all same length because of based array in gtss_abort_subsystem_
  3     8**/
  3     9 dcl 1 gtss_pnterr static int options (constant),
  3    10     2 err1   char(50) init("001-INCORRECT PRIMITIVE"),
  3    11     2 err2   char(50) init("002-(^6o)INVALID FILE I/O COMMAND"),
  3    12     2 err3   char(50) init("003-(^6o)INVALID DCW"),
  3    13     2 err4   char(50) init("004-(^6o)INVALID DRL ARGUMENT"),
  3    14     2 err5   char(50) init("005-(^6o)INVALID DRL CODE"),
  3    15     2 err6   char(50) init("006-LEVEL OF CONTROL TOO DEEP"),
  3    16     2 err7   char(50) init("007-BAP PROG. DESC."),
  3    17     2 err8   char(50) init("008-LOOP IN PRIMITIVES"),
  3    18     2 err9   char(50) init("009-SYSTEM UNKNOWN"),
  3    19     2 err10  char(50) init("010-PROGRAM TOO LARGE TO SWAP"),
  3    20     2 err11  char(50) init("011-(^6o)INCORRECT CORE FILE USAGE"),
  3    21     2 err12  char(50) init("012-(^6o)PRIVILEGED I/O ATTEMPTED"),
  3    22     2 err13  char(50) init("013-(^6o)DRL USERID NOT PERMITTED"),
  3    23     2 err14  char(50) init("(^6o)ILLEGAL DRL RELMEM REQUEST"),
  3    24     2 err15  char(50) init("015-(^6o)CANNOT RESET USER ID"),
  3    25     2 err16  char(50) init("016-(^6o)OVERFLOW FAULT"),
  3    26     2 err17  char(50) init("017-(^6o)ILLEGAL OP CODE"),
  3    27     2 err18  char(50) init("018-(^6o)MEMORY FAULT"),
  3    28     2 err19  char(50) init("019-(^6o)FAULT TAG FAULT"),
  3    29     2 err20  char(50) init("020-(^6o)DIVIDE CHECK FAULT"),
  3    30     2 err21  char(50) init("021-(^6o)BAD STATUS - SWAP OUT"),
  3    31     2 err22  char(50) init("022-(^6o)BAD STATUS - SWAP IN"),
  3    32     2 err23  char(50) init("023-(^6o)BAD STATUS - LOAD"),
  3    33     2 err24  char(50) init("(^6o)TALK PERMISSION NOT GRANTED"),
  3    34     2 err25  char(50) init("(^6o)WRITE ATTEMPTED ON READ-ONLY FILE - ^8a"),
  3    35     2 err26  char(50) init("(^6o)READ ATTEMPTED ON EXECUTE-ONLY FILE - ^8a"),
  3    36     2 err27  char(50) init("024-(^6o)MME FAULT"),
  3    37     2 err28  char(50) init("028-(^6o)REWIND ATTEMPTED FOR RANDOM FILE - ^8a"),
  3    38     2 err29  char(50) init("029-ILLEGAL SYSTEM SELECTION"),
  3    39     2 err30  char(50) init("134-(^6o)INVALID DRL FILACT FUNCTION #^i"),
  3    40     2 err31  char(50) init("135-(^6o)PRIVILEGED DRL FILACT REQUEST"),
  3    41     2 err32  char(50) init("138-(^6o)NO TAP* FILE FOR DRL TAPEIN"),
  3    42     2 err33  char(50) init("139-ERROR IN WRITING TAP* FILE"),
  3    43     2 err34  char(50) init("(^6o)DRL ABORT - CANNOT WRITE ABRT FILE"),
  3    44     2 err35  char(50) init("(^6o)DRL ABORT - ABRT FILE WRITTEN"),
  3    45     2 err36  char(50) init("NOT ENOUGH CORE TO RUN JOB"),
  3    46     2 err37  char(50) init("SORRY-OUT OF SWAP SPACE. TRY AGAIN."),
  3    47     2 err38  char(50) init("(^6o)FILE ADDRESS ERROR"),
  3    48     2 err39  char(50) init("(^6o)DRL ABORT - ABRT FILE I/O ERROR"),
  3    49     2 err40  char(50) init("(^6o)DRL ABORT - ABRT FILE TOO SMALL"),
  3    50     2 err41  char(50) init("(^6o)BAD STATUS FOR DRL SAVE/RESTOR - ^8a"),
  3    51     2 err42  char(50) init("(^6o)H* FILE NOT IN AFT - ^8a"),
  3    52     2 err43  char(50) init("064-EXECUTE TIME LIMIT EXCEEDED"),
  3    53     2 err44  char(50) init("025-(^6o)LOCKUP FAULT"),
  3    54     2 err45  char(50) init("065-OBJECT PROGRAM SIZE LIMIT EXCEEDED"),
  3    55     2 err46  char(50) init("(^6o)INCORRECT ENTRY TO DRL TASK"),
  3    56     2 err47  char(50) init("(^6o)H* PROGRAM NAME UNDEFINED - ^8a"),
  3    57     2 err48  char(50) init("(^6o)H* FILE CATALOG FULL - ^8a"),
  3    58     2 err49  char(50) init("(^6o)TALLY OR CHARACTER COUNT INCORRECT"),
  3    59     2 err50  char(50) init("(^6o)BAD DRL SAVE DATA LOC"),
  3    60     2 err51  char(50) init("(^6o)H* FILE NOT INITITALIZED - ^8a"),
  3    61     2 err52  char(50) init("(^6o)H* FILE MUST BE RANDOM - ^8a"),
  3    62     2 err53  char(50) init("026-(^6o)OP-NOT-COMPLETE FAULT"),
  3    63     2 err54  char(50) init("(^6o)H* FILE PROGRAM NAME REQUIRED - ^8a"),
  3    64     2 err55  char(50) init("027-(^6o)COMMAND FAULT"),
  3    65     2 err56  char(50) init("(^6o)LINKED FILE I/O CANNOT SPAN >63 LLINKS - ^8a"),
  3    66     2 err57  char(50) init("UNASSIGNED"),
  3    67     2 err58  char(50) init("(^6o)INVALID TIME FOR DRL GWAKE"),
  3    68     2 err59  char(50) init("UNASSIGNED"),
  3    69     2 err60  char(50) init("(^6o)INVALID SNUMB FOR DRL JOUT"),
  3    70     2 err61  char(50) init("(^6o)PRIVILEGED DRL"),
  3    71     2 err62  char(50) init("(^6o)INVALID DRL JOUT FUNCTION"),
  3    72     2 err63  char(50) init("MEMORY PARITY ERROR"),
  3    73     2 err64  char(50) init("SY** I/O ERROR"),
  3    74 /* The following error messages are artifacts of gtss and are not found in TSS */
  3    75     2 err100 char(50) init("DRL ADDMEM ERROR at (^6o)"),
  3    76     2 err101 char(50) init("DRL RELMEM ERROR TRUNCATE SEGMENT at (^6o)"),
  3    77     2 err102 char(50) init("DRL RELMEM ERROR SET MAX SEGMENT LENGTH"),
  3    78     2 err103 char(50) init("UNIMPLEMENTED DRL FILACT FUNCTION (^i)"),
  3    79     2 err999 char(50) init("dummy");
  3    80 
  3    81 /*   END INCLUDE FILE gtss_pnterr.incl.pl1 */
      384 
      385 
  4     1 /*  */
  4     2 /* BEGIN INCLUDE FILE  mc.incl.pl1   Created Dec 72 for 6180 - WSS. */
  4     3 /* Modified 06/07/76 by Greenberg for mc.resignal */
  4     4 /* Modified 07/07/76 by Morris for fault register data */
  4     5 /* Modified 08/28/80 by J. A. Bush for the DPS8/70M CVPU */
  4     6 /* Modified '82 to make values constant */
  4     7 
  4     8 /* words 0-15 pointer registers */
  4     9 
  4    10 dcl  mcp ptr;
  4    11 
  4    12 dcl 1 mc based (mcp) aligned,
  4    13     2 prs (0:7) ptr,				/* POINTER  REGISTERS */
  4    14    (2 regs,					/* registers */
  4    15       3 x (0:7) bit (18),				/* index registers */
  4    16       3 a bit (36),					/* accumulator */
  4    17       3 q bit (36),					/* q-register */
  4    18       3 e bit (8),					/* exponent */
  4    19       3 pad1 bit (28),
  4    20       3 t bit (27),					/* timer register */
  4    21       3 pad2 bit (6),
  4    22       3 ralr bit (3),				/* ring alarm register */
  4    23 
  4    24     2 scu (0:7) bit (36),
  4    25 
  4    26     2 mask bit (72),				/* mem controller mask at time of fault */
  4    27     2 ips_temp bit (36),				/* Temporary storage for IPS info */
  4    28     2 errcode fixed bin (35),				/* fault handler's error code */
  4    29     2 fim_temp,
  4    30       3 unique_index bit (18) unal,			/* unique index for restarting faults */
  4    31       3 resignal bit (1) unal,			/* recompute signal name with fcode below */
  4    32       3 fcode bit (17) unal,				/* fault code used as index to FIM table and SCT */
  4    33     2 fault_reg bit (36),				/* fault register */
  4    34     2 pad2 bit (1),
  4    35     2 cpu_type fixed bin (2) unsigned,			/* L68 = 0, DPS8/70M = 1 */
  4    36     2 ext_fault_reg bit (15),				/* extended fault reg for DPS8/70M CPU */
  4    37     2 fault_time bit (54),				/* time of fault */
  4    38 
  4    39     2 eis_info (0:7) bit (36)) unaligned;
  4    40 
  4    41 
  4    42 dcl (apx fixed bin init (0),
  4    43      abx fixed bin init (1),
  4    44      bpx fixed bin init (2),
  4    45      bbx fixed bin init (3),
  4    46      lpx fixed bin init (4),
  4    47      lbx fixed bin init (5),
  4    48      spx fixed bin init (6),
  4    49      sbx fixed bin init (7)) internal static options (constant);
  4    50 
  4    51 
  4    52 
  4    53 
  4    54 dcl  scup ptr;
  4    55 
  4    56 dcl 1 scu based (scup) aligned,			/* SCU DATA */
  4    57 
  4    58 
  4    59 /*	WORD (0)		*/
  4    60 
  4    61    (2 ppr,					/* PROCEDURE POINTER REGISTER */
  4    62       3 prr bit (3),				/* procedure ring register */
  4    63       3 psr bit (15),				/* procedure segment register */
  4    64       3 p bit (1),					/* procedure privileged bit */
  4    65 
  4    66     2 apu,					/* APPENDING UNIT STATUS */
  4    67       3 xsf bit (1),				/* ext seg flag - IT modification */
  4    68       3 sdwm bit (1),				/* match in SDW Ass. Mem. */
  4    69       3 sd_on bit (1),				/* SDW Ass. Mem.  ON */
  4    70       3 ptwm bit (1),				/* match in PTW Ass. Mem. */
  4    71       3 pt_on bit (1),				/* PTW Ass. Mem.  ON */
  4    72       3 pi_ap bit (1),				/* Instr Fetch or Append cycle */
  4    73       3 dsptw bit (1),				/* Fetch of DSPTW */
  4    74       3 sdwnp bit (1),				/* Fetch of SDW non paged */
  4    75       3 sdwp bit (1),				/* Fetch of SDW paged */
  4    76       3 ptw bit (1),				/* Fetch of PTW */
  4    77       3 ptw2 bit (1),				/* Fetch of pre-paged PTW */
  4    78       3 fap bit (1),				/* Fetch of final address paged */
  4    79       3 fanp bit (1),				/* Fetch of final address non-paged */
  4    80       3 fabs bit (1),				/* Fetch of final address absolute */
  4    81 
  4    82     2 fault_cntr bit (3),				/* number of retrys of EIS instructions */
  4    83 
  4    84 
  4    85 /*	WORD (1)		*/
  4    86 
  4    87     2 fd,						/* FAULT  DATA */
  4    88       3 iro bit (1),				/* illegal ring order */
  4    89       3 oeb bit (1),				/* out of execute bracket */
  4    90       3 e_off bit (1),				/* no execute */
  4    91       3 orb bit (1),				/* out of read bracket */
  4    92       3 r_off bit (1),				/* no read */
  4    93       3 owb bit (1),				/* out of write bracket */
  4    94       3 w_off bit (1),				/* no write */
  4    95       3 no_ga bit (1),				/* not a gate */
  4    96       3 ocb bit (1),				/* out of call bracket */
  4    97       3 ocall bit (1),				/* outward call */
  4    98       3 boc bit (1),				/* bad outward call */
  4    99       3 inret bit (1),				/* inward return */
  4   100       3 crt bit (1),				/* cross ring transfer */
  4   101       3 ralr bit (1),				/* ring alarm register */
  4   102       3 am_er bit (1),				/* associative memory fault */
  4   103       3 oosb bit (1),				/* out of segment bounds */
  4   104       3 paru bit (1),				/* processor parity upper */
  4   105       3 parl bit (1),				/* processor parity lower */
  4   106       3 onc_1 bit (1),				/* op not complete type 1 */
  4   107       3 onc_2 bit (1),				/* op not complete type 2 */
  4   108 
  4   109     2 port_stat,					/* PORT  STATUS */
  4   110       3 ial bit (4),				/* illegal action lines */
  4   111       3 iac bit (3),				/* illegal action channel */
  4   112       3 con_chan bit (3),				/* connect channel */
  4   113 
  4   114     2 fi_num bit (5),				/* (fault/interrupt)  number */
  4   115     2 fi_flag bit (1),				/*  1 => fault,  0 => interrupt  */
  4   116 
  4   117 
  4   118 /*	WORD (2)		*/
  4   119 
  4   120     2 tpr,					/* TEMPORARY POINTER REGISTER */
  4   121       3 trr bit (3),				/* temporary ring register */
  4   122       3 tsr bit (15),				/* temporary segment register */
  4   123 
  4   124     2 pad2 bit (9),
  4   125 
  4   126     2 cpu_no bit (3),				/* CPU number */
  4   127 
  4   128     2 delta bit (6),				/* tally modification DELTA */
  4   129 
  4   130 
  4   131 /*	WORD (3)		*/
  4   132 
  4   133     2 word3 bit (18),
  4   134 
  4   135     2 tsr_stat,					/* TSR STATUS for 1,2,&3 word instructions */
  4   136       3 tsna,					/* Word 1 status */
  4   137         4 prn bit (3),				/* Word 1  PR  number */
  4   138         4 prv bit (1),				/* Word 1  PR  valid bit */
  4   139       3 tsnb,					/* Word 2  status */
  4   140         4 prn bit (3),				/* Word 2  PR  number */
  4   141         4 prv bit (1),				/* Word 2  PR  valid bit */
  4   142       3 tsnc,					/* Word 3  status */
  4   143         4 prn bit (3),				/* Word 3  PR  number */
  4   144         4 prv bit (1),				/* Word 3  PR  valid bit */
  4   145 
  4   146     2 tpr_tbr bit (6),				/* TPR.TBR  field */
  4   147 
  4   148 
  4   149 /* 	WORD (4)		*/
  4   150 
  4   151     2 ilc bit (18),					/* INSTRUCTION  COUNTER */
  4   152 
  4   153     2 ir,						/* INDICATOR  REGISTERS */
  4   154       3 zero bit (1),				/* zero indicator */
  4   155       3 neg bit (1),				/* negative indicator */
  4   156       3 carry bit (1),				/* carryry indicator */
  4   157       3 ovfl bit (1),				/* overflow indicator */
  4   158       3 eovf bit (1),				/* eponent overflow */
  4   159       3 eufl bit (1),				/* exponent underflow */
  4   160       3 oflm bit (1),				/* overflow mask */
  4   161       3 tro bit (1),				/* tally runout */
  4   162       3 par bit (1),				/* parity error */
  4   163       3 parm bit (1),				/* parity mask */
  4   164       3 bm bit (1),					/* ^bar mode */
  4   165       3 tru bit (1),				/* truncation mode */
  4   166       3 mif bit (1),				/* multi-word instruction mode */
  4   167       3 abs bit (1),				/* absolute mode */
  4   168       3 hex bit (1),				/* hexadecimal exponent mode */
  4   169       3 pad bit (3),
  4   170 
  4   171 
  4   172 /*	WORD (5)		*/
  4   173 
  4   174     2 ca bit (18),					/* COMPUTED  ADDRESS */
  4   175 
  4   176     2 cu,						/* CONTROL UNIT STATUS */
  4   177       3 rf bit (1),					/* on first cycle of repeat instr */
  4   178       3 rpt bit (1),				/* repeat instruction */
  4   179       3 rd bit (1),					/* repeat double instruction */
  4   180       3 rl bit (1),					/* repeat link instruciton */
  4   181       3 pot bit (1),				/* IT  modification */
  4   182       3 pon bit (1),				/* return type instruction */
  4   183       3 xde bit (1),				/* XDE from Even location */
  4   184       3 xdo bit (1),				/* XDE from Odd  location */
  4   185       3 poa bit (1),				/* operation preparation */
  4   186       3 rfi bit (1),				/* tells CPU to refetch instruction */
  4   187       3 its bit (1),				/* ITS modification */
  4   188       3 if bit (1),					/* fault occured during instruction fetch */
  4   189 
  4   190     2 cpu_tag bit (6)) unaligned,			/* computed tag field */
  4   191 
  4   192 
  4   193 /*	WORDS (6,7)	*/
  4   194 
  4   195     2 even_inst bit (36),				/* even instruction of faulting pair */
  4   196 
  4   197     2 odd_inst bit (36);				/* odd  instruction of faulting pair */
  4   198 
  4   199 
  4   200 
  4   201 
  4   202 
  4   203 
  4   204 /*	ALTERNATE   SCU  DECLARATION		*/
  4   205 
  4   206 
  4   207 dcl 1 scux based (scup) aligned,
  4   208 
  4   209    (2 pad0 bit (36),
  4   210 
  4   211     2 fd,						/* GROUP II  FAULT DATA */
  4   212       3 isn bit (1),				/* illegal segment number */
  4   213       3 ioc bit (1),				/* illegal op  code  */
  4   214       3 ia_am bit (1),				/* illegal address - modifier */
  4   215       3 isp bit (1),				/* illegal slave  procedure */
  4   216       3 ipr bit (1),				/* illegal procedure */
  4   217       3 nea bit (1),				/* non existent address */
  4   218       3 oobb bit (1),				/* out of bounds */
  4   219       3 pad bit (29),
  4   220 
  4   221     2 pad2 bit (36),
  4   222 
  4   223     2 pad3a bit (18),
  4   224 
  4   225     2 tsr_stat (0:2),				/* TSR  STATUS  as an  ARRAY */
  4   226       3 prn bit (3),				/* PR  number */
  4   227       3 prv bit (1),				/* PR  valid bit */
  4   228 
  4   229     2 pad3b bit (6)) unaligned,
  4   230 
  4   231     2 pad45 (0:1) bit (36),
  4   232 
  4   233     2 instr (0:1) bit (36);				/* Instruction ARRAY */
  4   234 
  4   235 
  4   236 
  4   237 /*  END INCLUDE FILE   mc.incl.pl1 */
      386 
      387 
  5     1 /* BEGIN INCLUDE FILE gtss_entry_dcls.incl.pl1 */
  5     2 /*
  5     3*  Created: (Wardd Multics)  06/30/78 1624.8 mst Fri 
  5     4*  Modified: Ron Barstad  84-02-24  Fixed wrong and obsolete entries
  5     5**/
  5     6 
  5     7 /**  gtss external entry variables.		**/
  5     8 dcl  com_err_                                   entry() options(variable);
  5     9 dcl  gtss_CFP_abort_                            entry options(variable);
  5    10 dcl  gtss_CFP_break_                            entry options(variable);
  5    11 dcl  gtss_CFP_input_                            entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  5    12 dcl  gtss_CFP_output_                           entry (ptr, ptr, fixed bin(21), fixed bin(35));
  5    13 dcl  gtss_abandon_CFP_                          entry options(variable);
  5    14 dcl  gtss_abort_dump_                           entry (fixed bin(18));
  5    15 dcl  gtss_abort_subsystem_                      entry options (variable);
  5    16 dcl  gtss_abort_subsystem_$not_imp              entry (ptr, fixed bin(24));
  5    17 dcl  gtss_abs_login_banner_		        entry() returns(char(*));
  5    18 dcl  gtss_abs_logout_banner_		        entry() returns(char(*));
  5    19 dcl  gtss_abs_$abs_equiv                        entry options(variable);
  5    20 dcl  gtss_abs_$cpu_runout		        entry (ptr, char(4));
  5    21 dcl  gtss_abs_$create_absin                     entry() returns(char(*));
  5    22 dcl  gtss_abs_$dabt_check		        entry (ptr, char(4));
  5    23 dcl  gtss_abs_$get_id                           entry (char(5)) returns(char(19));
  5    24 dcl  gtss_abs_$get_drm                          entry() returns(char(*));
  5    25 dcl  gtss_adjust_size_                          entry (ptr);
  5    26 dcl  gtss_aft_$add                              entry (char(8), fixed bin(24), fixed bin(35));
  5    27 dcl  gtss_aft_$delete                           entry (char(8), fixed bin(24), fixed bin(35));
  5    28 dcl  gtss_aft_$find                             entry (char(8), fixed bin(24), fixed bin(35));
  5    29 dcl  gtss_aft_$initialize                       entry (fixed bin(35));
  5    30 dcl  gtss_ascii_bcd_                            entry (ptr, fixed bin, ptr);
  5    31 dcl  gtss_attributes_mgr_$get                   entry (ptr, fixed bin(35));
  5    32 dcl  gtss_attributes_mgr_$set                   entry (ptr, fixed bin(35));
  5    33 dcl  gtss_bcd_ascii_                            entry (ptr, fixed bin(24), ptr);
  5    34 dcl  gtss_bcd_ascii_$lc                         entry (ptr, fixed bin(24), ptr);
  5    35 dcl  gtss_break_vector_                         entry ();
  5    36 dcl  gtss_break_vector_$drl_in_progress         entry() returns(bit(1));
  5    37 dcl  gtss_break_vector_$status                  entry() returns(bit(1));
  5    38 dcl  gtss_build_                                entry options(variable);
  5    39 dcl  gtss_com_err_                              entry options(variable);
  5    40 dcl  gtss_derail_processor_                     entry (ptr, char(*), ptr, ptr, bit(1) aligned) /* called at fault time instead of signal_ */;
  5    41 dcl  gtss_derail_processor_$set                 entry options(variable);
  5    42 dcl  gtss_dq_$catp                              entry (char (5), ptr, fixed bin (18) unsigned);
  5    43 dcl  gtss_dq_$create                            entry (bit(1));
  5    44 dcl  gtss_dq_$dibp                              entry (char(5), ptr);
  5    45 dcl  gtss_dq_$entries_info		        entry (ptr, fixed bin (18) unsigned, fixed bin (18) unsigned);
  5    46 dcl  gtss_dq_$hdrp                              entry (ptr);
  5    47 dcl  gtss_dq_$mod_js		        entry (char(5), fixed bin (6) unsigned, bit (1));
  5    48 dcl  gtss_dq_$open_exc		        entry (bit(1));
  5    49 dcl  gtss_dq_$open_gen		        entry (bit(1));
  5    50 dcl  gtss_drl_abort_                            entry (ptr, fixed bin);
  5    51 dcl  gtss_drl_addmem_                           entry (ptr, fixed bin);
  5    52 dcl  gtss_drl_callss_                           entry (ptr, fixed bin);
  5    53 dcl  gtss_drl_corfil_                           entry (ptr, fixed bin);
  5    54 dcl  gtss_drl_defil_                            entry (ptr, fixed bin);
  5    55 dcl  gtss_drl_defil_$subr                       entry (ptr, ptr, ptr);
  5    56 dcl  gtss_drl_dio_                              entry (ptr, fixed bin);
  5    57 dcl  gtss_drl_drlimt_                           entry (ptr, fixed bin);
  5    58 dcl  gtss_drl_drlsav_                           entry (ptr, fixed bin);
  5    59 dcl  gtss_drl_filact_                           entry (ptr, fixed bin);
  5    60 dcl  gtss_drl_filsp_                            entry (ptr, fixed bin);
  5    61 dcl  gtss_drl_grow_                             entry (ptr, fixed bin);
  5    62 dcl  gtss_drl_gwake_                            entry (ptr, fixed bin);
  5    63 dcl  gtss_drl_jsts_                             entry (ptr, fixed bin);
  5    64 dcl  gtss_drl_kin_                              entry (ptr, fixed bin);
  5    65 dcl  gtss_drl_kotnow_                           entry (ptr, fixed bin);
  5    66 dcl  gtss_drl_kotnow_$gtss_drl_kout_            entry (ptr, fixed bin);
  5    67 dcl  gtss_drl_koutn_                            entry (ptr, fixed bin);
  5    68 dcl  gtss_drl_morlnk_                           entry (ptr, fixed bin);
  5    69 dcl  gtss_drl_msub_                             entry (ptr, fixed bin);
  5    70 dcl  gtss_drl_objtim_                           entry (ptr, fixed bin);
  5    71 dcl  gtss_drl_part_                             entry (ptr, fixed bin);
  5    72 dcl  gtss_drl_pasaft_                           entry (ptr, fixed bin);
  5    73 dcl  gtss_drl_pasdes_                           entry (ptr, fixed bin);
  5    74 dcl  gtss_drl_pasust_                           entry (ptr, fixed bin);
  5    75 dcl  gtss_drl_pdio_                             entry (ptr, fixed bin);
  5    76 dcl  gtss_drl_prgdes_                           entry (ptr, fixed bin);
  5    77 dcl  gtss_drl_pseudo_                           entry (ptr, fixed bin);
  5    78 dcl  gtss_drl_relmem_                           entry (ptr, fixed bin);
  5    79 dcl  gtss_drl_restor_                           entry (ptr, fixed bin);
  5    80 dcl  gtss_drl_retfil_                           entry (ptr, fixed bin);
  5    81 dcl  gtss_drl_return_                           entry (ptr, fixed bin);
  5    82 dcl  gtss_drl_rew_                              entry (ptr, fixed bin);
  5    83 dcl  gtss_drl_rstswh_                           entry (ptr, fixed bin);
  5    84 dcl  gtss_drl_setlno_                           entry (ptr, fixed bin);
  5    85 dcl  gtss_drl_setswh_                           entry (ptr, fixed bin);
  5    86 dcl  gtss_drl_snumb_                            entry (ptr, fixed bin);
  5    87 dcl  gtss_drl_spawn_                            entry (ptr, fixed bin);
  5    88 dcl  gtss_drl_spawn_$gtss_drl_pasflr_           entry (ptr, fixed bin);
  5    89 dcl  gtss_drl_stoppt_                           entry (ptr, fixed bin);
  5    90 dcl  gtss_drl_switch_                           entry (ptr, fixed bin);
  5    91 dcl  gtss_drl_sysret_                           entry (ptr, fixed bin);
  5    92 dcl  gtss_drl_t_cfio_                           entry (ptr, fixed bin);
  5    93 dcl  gtss_drl_t_cmov_                           entry (ptr, fixed bin);
  5    94 dcl  gtss_drl_t_err_                            entry (ptr, fixed bin);
  5    95 dcl  gtss_drl_t_goto_                           entry (ptr, fixed bin);
  5    96 dcl  gtss_drl_t_linl_                           entry (ptr, fixed bin);
  5    97 dcl  gtss_drl_t_rscc_                           entry (ptr, fixed bin);
  5    98 dcl  gtss_drl_tapein_                           entry (ptr, fixed bin);
  5    99 dcl  gtss_drl_task_                             entry (ptr, fixed bin);
  5   100 dcl  gtss_drl_termtp_                           entry (ptr, fixed bin);
  5   101 dcl  gtss_drl_time_                             entry (ptr, fixed bin);
  5   102 dcl  gtss_drun_                                 entry (bit(1));
  5   103 dcl  gtss_dsd_lookup_                           entry (char(8) var) returns(fixed bin(24));
  5   104 dcl  gtss_dsd_process_                          entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  5   105 dcl  gtss_edit_dsd_                             entry (ptr, fixed bin(21)) returns(fixed bin(24));
  5   106 dcl  gtss_mcfc_empty                            entry (char(*) var);
  5   107 dcl  gtss_expand_pathname_                      entry (ptr, char(*), char(*), fixed bin(35));
  5   108 dcl  gtss_expand_pathname_$verify_umc           entry (ptr, char(*), char(*), bit(18), fixed bin(35));
  5   109 dcl  gtss_fault_processor_                      entry options(variable);
  5   110 dcl  gtss_find_cond_frame_		        entry (char(32) var) returns(ptr);
  5   111 dcl  gtss_fault_processor_$timer_runout         entry (ptr, char(*));
  5   112 dcl  gtss_filact_error_status_                  entry (fixed bin(35))returns(bit(12));
  5   113 dcl  gtss_filact_funct02_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   114 dcl  gtss_filact_funct03_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   115 dcl  gtss_filact_funct04_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   116 dcl  gtss_filact_funct05_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   117 dcl  gtss_filact_funct08_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   118 dcl  gtss_filact_funct10_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   119 dcl  gtss_filact_funct11_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   120 dcl  gtss_filact_funct14_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   121 dcl  gtss_filact_funct18_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   122 dcl  gtss_filact_funct19_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   123 dcl  gtss_filact_funct21_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   124 dcl  gtss_filact_funct22_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  5   125 dcl  gtss_mcfc_init_                            entry (char(*) var);
  5   126 dcl  gtss_interp_prim_                          entry options(variable);
  5   127 dcl  gtss_interp_prim_$callss                   entry (char(4), ptr);
  5   128 dcl  gtss_interp_prim_$sysret                   entry options(variable);
  5   129 dcl  gtss_interp_prim_$t_goto                   entry (char(4));
  5   130 dcl  gtss_ios_change_size_                      entry (fixed bin(24), fixed bin(24), bit(1), fixed bin(24), fixed bin(35));
  5   131 dcl  gtss_ios_close_                            entry (fixed bin(24), ptr, fixed bin(35));
  5   132 dcl  gtss_ios_exchange_names_                   entry (fixed bin(24), fixed bin(24), fixed bin(24), fixed bin(35));
  5   133 dcl  gtss_ios_initialize_                       entry options(variable);
  5   134 dcl  gtss_ios_io_                               entry (fixed bin(24), ptr, ptr, fixed bin(24), fixed bin(24), fixed bin(35));
  5   135 dcl  gtss_ios_open_                             entry (fixed bin(24), char(168), char(32), bit(6), bit(1), ptr, ptr, fixed bin(35));
  5   136 dcl  gtss_ios_position_                         entry (fixed bin(24), fixed bin(24), fixed bin(24), bit(6), ptr);
  5   137 dcl  gtss_mcfc_$delete		        entry (fixed bin(24), char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  5   138 dcl  gtss_mcfc_$open                            entry (char(*), char(*), bit(6), bit(36) aligned, ptr, fixed bin(35));
  5   139 dcl  gtss_mcfc_$close                           entry (char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  5   140 dcl  gtss_read_starCFP_                         entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  5   141 dcl  gtss_read_starCFP_$last_os                 entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  5   142 dcl  gtss_run_subsystem_                        entry (fixed bin(24));
  5   143 dcl  gtss_run_subsystem_$finish                 entry options(variable);
  5   144 dcl  gtss_run_subsystem_$restor                 entry (fixed bin(24), ptr);
  5   145 dcl  gtss_run_subsystem_$restor_perm            entry (fixed bin(24), ptr, fixed bin(18));
  5   146 dcl  gtss_set_slave_                            entry (fixed bin (24), ptr);
  5   147 dcl  gtss_set_slave_$load_bar                   entry (fixed bin (17));
  5   148 dcl  gtss_update_safe_store_                    entry (ptr);
  5   149 dcl  gtss_verify_access_		        entry (char(*), char(*), fixed bin(24), bit(6), bit(12) aligned);
  5   150 dcl  gtss_verify_access_$check_forced_access    entry (char(*), char(*), fixed bin(24));
  5   151 dcl  gtss_write_starCFP_                        entry (ptr, ptr, fixed bin(21), fixed bin(35));
  5   152 /*   END INCLUDE FILE gtss_entry_dcls.incl.pl1 */
      388 
      389 
  6     1 /* BEGIN INCLUDE FILE gtss_FMS_catalog.incl.pl1  */
  6     2 /*
  6     3*  Created: (Wardd Multics)  09/14/78 1813.7 mst Thu 
  6     4*  Change:	Paul Benjamin	10/12/79	Further break down FS0_PBK_05 
  6     5**/
  6     6 
  6     7 /**	The structure FMS_catalog1 is from
  6     8*	FMS PROGRAM LOGIC MANUAL
  6     9*	DC26, Rev. 0, January 1974
  6    10*	Page 4-9
  6    11***/
  6    12 dcl  FMS_cat_ptr              ptr init(null());
  6    13 dcl  1 FMS_catalog		aligned based(FMS_cat_ptr)
  6    14 ,     3 FSnTYP_0
  6    15 ,       4 bits00_05		bit(06)unal
  6    16 ,       4 bits06_10		bit(05)unal
  6    17 ,       4 bits11_17		bit(07)unal
  6    18 ,       4 bits18_35		bit(18)unal
  6    19 ,     3 FSnNLL_1
  6    20 ,       4 bits00_17		bit(18)unal
  6    21 ,       4 bits18_35		bit(18)unal
  6    22 ,     3 FSnPLL_2
  6    23 ,       4 bits00_17		bit(18)unal
  6    24 ,       4 bits18_35		bit(18)unal
  6    25 ,     3 FSnPTP_3
  6    26 ,       4 bits00_17		bit(18)unal
  6    27 ,       4 bits18_35		bit(18)unal
  6    28 ,     3 FSnCBK_4
  6    29 ,       4 bits00_17		bit(18)unal
  6    30 ,       4 bits18_35		bit(18)unal
  6    31 ;
  6    32 
  6    33 /**	Page 4-10.	**/
  6    34 dcl  1 Type_0_Catalog	aligned based(FMS_cat_ptr)
  6    35 ,     3 FS0_TYP_00		bit(36)
  6    36 ,     3 FS0_NLL_01
  6    37 ,       4 bits00_17		bit(18)unal
  6    38 ,       4 bits18_35		bit(18)unal
  6    39 ,     3 FS0_PLL_02		bit(36)
  6    40 ,     3 FS0_PTP_03
  6    41 ,       4 bits00_17		fixed bin(17)unal
  6    42 ,       4 bits18_35		bit(18)unal
  6    43 ,     3 FS0_CBK_04
  6    44 ,       4 bits00_17		fixed bin(17)unal
  6    45 ,       4 bits18_35		bit(18)unal
  6    46 ,     3 FS0_PBK_05
  6    47 ,       4 bits00_17		bit(18)unal
  6    48 ,       4 bits18_35		bit(18)unal
  6    49 ,     3 FS0_CNM_06_07	bit(72)
  6    50 ,     3 FS0_ORG_10_11	bit(72)
  6    51 ,     3 FS0_PWD_12_13	bit(72)
  6    52 ,     3 FS0_CDT_14		bit(36)
  6    53 ,     3 FS0_MOD_15		bit(36)
  6    54 ,     3 FS0_IND_16		bit(36)
  6    55 ,     3 FS0_PER_17
  6    56 ,       4 bits00_11		bit(12)unal
  6    57 ,       4 bits12_14		bit(03)unal
  6    58 ,       4 bit15		bit(01)unal
  6    59 ,       4 bit16		bit(01)unal
  6    60 ,       4 bit17		bit(01)unal
  6    61 ,       4 bits18_35		bit(18)unal
  6    62 ,     3 FS0_OP1_20		bit(36)
  6    63 ,     3 FS0_OP2_21		bit(36)
  6    64 ,     3 FS0_VAR_22_76	(15)
  6    65 ,       4 FS0_SNM_00_01	bit(72)
  6    66 ,       4 FS0_SPT_02
  6    67 ,         5 bit00		bit(01)unal
  6    68 ,         5 bit01		bit(01)unal
  6    69 ,         5 bits02_17	bit(16)unal
  6    70 ,         5 bits18_35	bit(18)unal
  6    71 ,     3 checksum_77		bit(36)
  6    72 ;
  6    73 
  6    74 /* Condensed form of type 0 record. */
  6    75 dcl 1 t0c			aligned based(FMS_cat_ptr)
  6    76 ,     2 fill		(0:17)bit(36)
  6    77 ,     2 name		(15)
  6    78 ,       3 bcd		bit(72)
  6    79 ,       3 more		bit(36)
  6    80 ;
  6    81 
  6    82 /**	Page 4-10.	**/
  6    83 dcl  Type_1_ptr               ptr init(null());
  6    84 dcl  1 Type_1_Catalog	aligned based(Type_1_ptr)
  6    85 ,     3 FS1_TYP_00		bit(36)
  6    86 ,     3 FS1_NLL_01
  6    87 ,       4 bits00_17		bit(18)unal
  6    88 ,       4 bits18_35		bit(18)unal
  6    89 ,     3 FS1_PLL_02		bit(36)
  6    90 ,     3 FS1_PTP_03
  6    91 ,       4 bits00_17		fixed bin(17)unal
  6    92 ,       4 bits18_35		bit(18)unal
  6    93 ,     3 FS1_CBK_04
  6    94 ,       4 bits00_17		bit(18)unal
  6    95 ,       4 bits18_35		bit(18)unal
  6    96 ,     3 FS1_OPN_05		bit(36)
  6    97 ,     3 FS1_VAR_06_76	(19)
  6    98 ,       4 FS1_SNM_00_01	bit(72)
  6    99 ,       4 FS1_SPT_02
  6   100 ,         5 bit00		bit(01)unal
  6   101 ,         5 bit01		bit(01)unal
  6   102 ,         5 bits02_17	bit(16)unal
  6   103 ,         5 bits18_35	bit(18)unal
  6   104 ,     3 checksum_77		bit(36)
  6   105 ;
  6   106 
  6   107 /* Condensed form of type 1 record. */
  6   108 dcl 1 t1c			aligned based(FMS_cat_ptr)
  6   109 ,     2 fill		(0:5)bit(36)
  6   110 ,     2 name		(19) like t0c.name
  6   111 ;
  6   112 
  6   113 /**	Page 4-11.	**/
  6   114 dcl  1 Type_2_Catalog	aligned based(FMS_cat_ptr)
  6   115 ,     3 FS2_TYP_00		bit(36)
  6   116 ,     3 FS2_NLL_01		bit(36)
  6   117 ,     3 FS2_PLL_02		bit(36)
  6   118 ,     3 FS2_PTP_03		bit(36)
  6   119 ,     3 FS2_CBK_04		bit(36)
  6   120 ,     3 FS2_PBK_05
  6   121 ,       4 bits00_17		bit(18)unal
  6   122 ,       4 bits18_35		bit(18)unal
  6   123 ,     3 FS2_FNM_06_07	bit(72)
  6   124 ,     3 FS2_ORG_10_11	bit(72)
  6   125 ,     3 FS2_PWD_12_13	bit(72)
  6   126 ,     3 FS2_CDT_14		bit(36)
  6   127 ,     3 FS2_MOD_15		bit(36)
  6   128 ,     3 FS2_IND_16		bit(36)
  6   129 ,     3 FS2_PER_17
  6   130 ,       4 bits00_11		bit(12)unal
  6   131 ,       4 bits12_15		bit(04)unal
  6   132 ,       4 bit16		bit(01)unal
  6   133 ,       4 bit17		bit(01)unal
  6   134 ,       4 bits18_35		bit(18)unal
  6   135 ,     3 FS2_MTR_20_21	bit(72)
  6   136 ,     3 FS2_FU1_22
  6   137 ,       4 bit00		bit(01)unal
  6   138 ,       4 bit01		bit(01)unal
  6   139 ,       4 bit02		bit(01)unal
  6   140 ,       4 bit03		bit(01)unal
  6   141 ,       4 bit04		bit(01)unal
  6   142 ,       4 bit05		bit(01)unal
  6   143 ,       4 bit06		bit(01)unal
  6   144 ,       4 bit07		bit(01)unal
  6   145 ,       4 bit08		bit(01)unal
  6   146 ,       4 bit09		bit(01)unal
  6   147 ,       4 bits10_11		bit(02)unal
  6   148 ,       4 bits12_17		bit(06)unal
  6   149 ,       4 bits18_35		bit(18)unal
  6   150 ,     3 FS2_FUS_23
  6   151 ,       4 bits00_17		bit(18)unal
  6   152 ,       4 bit18		bit(01)unal
  6   153 ,       4 bit19		bit(01)unal
  6   154 ,       4 bit20		bit(01)unal
  6   155 ,       4 bit21		bit(01)unal
  6   156 ,       4 bit22		bit(01)unal
  6   157 ,       4 bit23		bit(01)unal
  6   158 ,       4 bit24		bit(01)unal
  6   159 ,       4 bit25		bit(01)unal
  6   160 ,       4 bit26		bit(01)unal
  6   161 ,       4 bit27		bit(01)unal
  6   162 ,       4 bit28		bit(01)unal
  6   163 ,       4 bit29		bit(01)unal
  6   164 ,       4 bits30_35		bit(06)unal
  6   165 ,     3 FS2_USI_24
  6   166 ,       4 bit00		bit(01)unal
  6   167 ,       4 bits01_35		bit(35)unal
  6   168 ,     3 FS2_FU2_25
  6   169 ,       4 bit00		bit(01)unal
  6   170 ,       4 bit01		bit(01)unal
  6   171 ,       4 bit02		bit(01)unal
  6   172 ,       4 bit03		bit(01)unal
  6   173 ,       4 bit04		bit(01)unal
  6   174 ,       4 bit05		bit(01)unal
  6   175 ,       4 bit06		bit(01)unal
  6   176 ,       4 bit07		bit(01)unal
  6   177 ,       4 bit08		bit(01)unal
  6   178 ,       4 bit09		bit(01)unal
  6   179 ,       4 bit10		bit(01)unal
  6   180 ,       4 bit11		bit(01)unal
  6   181 ,       4 bit12		bit(01)unal
  6   182 ,       4 bit13		bit(01)unal
  6   183 ,       4 bit14		bit(01)unal
  6   184 ,       4 bit15		bit(01)unal
  6   185 ,       4 bit16		bit(01)unal
  6   186 ,       4 bit17		bit(01)unal
  6   187 ,       4 bits18_35		bit(18)unal
  6   188 ,     3 FS2_LCD_26		bit(36)
  6   189 ,     3 FS2_LAD_27		bit(36)
  6   190 ,     3 FS2_LST_30
  6   191 ,       4 bits00_05		bit(06)unal
  6   192 ,       4 bits06_35		bit(30)unal
  6   193 ,     3 FS2_ATB_31		bit(36)
  6   194 ,     3 FS2_PDF_32		bit(36)
  6   195 ,     3 FS2_STC_33		bit(36)
  6   196 ,     3 FS2_BSY_34		bit(36)
  6   197 ,     3 FS2_TBC_35		bit(36)
  6   198 ,     3 FS2_OP2_7_36_43	(2:7)bit(36)
  6   199 ,     3 FS2_VAR_44_75
  6   200 ,       4 Device_descriptor
  6   201 ,         5 bits00_03	bit(04)unal	/* 0101 */
  6   202 ,         5 bits04_05	bit(02)unal
  6   203 ,         5 bits06_35	bit(30)unal
  6   204 ,       4 Space_descriptor
  6   205 ,         5 bit00		bit(01)unal
  6   206 ,         5 bit01		bit(01)unal	/* =0 => space desc. */
  6   207 ,         5 bit02		bit(01)unal
  6   208 ,         5 bits03_17	bit(15)unal
  6   209 ,         5 bits18_35	bit(18)unal
  6   210 ,       4 zero		(24)bit(36)
  6   211 ,     3 zero_76		bit(36)
  6   212 ,     3 checksum_77		bit(36)
  6   213 ;
  6   214 
  6   215 /**	Page 4-13.	**/
  6   216 dcl  Type_4_ptr               ptr init(null());
  6   217 dcl  1 Type_4_Catalog	aligned based(Type_4_ptr)
  6   218 ,     3 FS4_TYP_00		bit(36)
  6   219 ,     3 FS4_NLL_01		bit(36)
  6   220 ,     3 FS4_PLL_02		bit(36)
  6   221 ,     3 FS4_PTP_03		bit(36)
  6   222 ,     3 FS4_CBK_04		bit(36)
  6   223 ,     3 FS4_OP1_2_05_06	bit(72)
  6   224 ,     3 FS4_VAR_07_75	bit(1980)	/* 1980 = 55 * 36bits @ */
  6   225 ,     3 zero		bit(36)
  6   226 ,     3 checksum_77		bit(36)
  6   227 ;
  6   228 
  6   229 /**	Page 2-69		**/
  6   230 dcl  buffer_ptr               ptr init(null());
  6   231 dcl 1 callers_buffer	aligned based(buffer_ptr)
  6   232 ,     3 first25		(25)bit(36)	/* Work area for  ???. */
  6   233 /**	Next 35 words. FMS work area.	**/
  6   234 ,     3 W00_FSCODE		bit(036)
  6   235 ,     3 W01_02_FSCALL	bit(072)
  6   236 ,     3 W03		bit(036)
  6   237 ,     3 W04_06		bit(108)
  6   238 ,     3 W07		bit(036)
  6   239 ,     3 W10		bit(036)
  6   240 ,     3 W11_12		bit(072)
  6   241 ,     3 W13_FSSSLV		bit(036)
  6   242 ,     3 W14_15		bit(072)
  6   243 ,     3 W16_FSFBSY		bit(036)
  6   244 ,     3 W17_FSRETP		bit(036)
  6   245 ,     3 W20
  6   246 ,       4 FSMME		unal
  6   247 ,         5 bits00_17	bit(18)unal
  6   248 ,       4 FSARG		unal
  6   249 ,         5 bits18_35	bit(18)unal
  6   250 ,     3 W21_FSCPOS
  6   251 ,       4 bits00_17		bit(18)unal
  6   252 ,       4 bits18_35		bit(18)unal
  6   253 ,     3 W22_FSCCFP
  6   254 ,       4 bits00_17		bit(18)unal
  6   255 ,       4 bits18_35		bit(18)unal
  6   256 ,     3 W23_FSPCFP
  6   257 ,       4 bits00_17		bit(18)unal
  6   258 ,       4 bits18_35		bit(18)unal
  6   259 ,     3 W24
  6   260 ,       4 FSREGU		unal
  6   261 ,         5 bits00_17	bit(18)unal
  6   262 ,       4 FSREGL		unal
  6   263 ,         5 bits18_35	bit(18)unal
  6   264 ,     3 W25_FSCDEV
  6   265 ,       4 bits00_15		bit(16)unal
  6   266 ,       4 bit16		bit(01)unal
  6   267 ,       4 bit17		bit(01)unal
  6   268 ,       4 bits18_35		bit(18)unal
  6   269 ,     3 W26_FSDDEV
  6   270 ,       4 bits00_15		bit(16)unal
  6   271 ,       4 bit16		bit(01)unal
  6   272 ,       4 bit17		bit(01)unal
  6   273 ,       4 bits18_35		bit(18)unal
  6   274 ,     3 W27_FSENDT		bit(036)
  6   275 ,     3 W30_FSCPAT		bit(036)
  6   276 ,     3 W31_FSPERM		bit(036)
  6   277 ,     3 W32_FSDDCW		bit(036)
  6   278 ,     3 W33_FSDCWP		bit(036)
  6   279 ,     3 W34_FSDUPD		bit(036)
  6   280 ,     3 W35_FSAVBL		bit(036)
  6   281 ,     3 W36_FSTEMP		bit(036)
  6   282 ,     3 W37_FSCKSM		bit(036)
  6   283 ,     3 W40_FSIOS1		bit(036)
  6   284 ,     3 W41_FSSRW1		bit(036)
  6   285 ,     3 W42_FSSRW2		bit(036)
  6   286 ,     3 W43_FSBFER		bit(036)	/* Starting location of buffer for catalog record(s). */
  6   287 ,     3 remainder_of_buffer	(319)bit(36)
  6   288 ;
  6   289 
  6   290 /*   END INCLUDE FILE gtss_FMS_catalog.incl.pl1 */
      390 
      391 
  7     1 /* BEGIN INCLUDE FILE gtss_db_names.incl.pl1 */
  7     2 /*
  7     3*  Created:  (Wardd Multics)  03/29/79 1909.1 mst Thu 
  7     4**/
  7     5 
  7     6 /* To provide a new debugging switch:
  7     7*
  7     8*   1) Locate the comment "Insert next entry above this comment".
  7     9*
  7    10*   2) Place a new declaration for a db_ variable just
  7    11*      above this comment, in the same manner as the
  7    12*      current declaration just above the comment, using
  7    13*      the next integer gtss_ext_$db index.
  7    14*
  7    15*   3) Execute the gtss|db_names ted macro (this updates
  7    16*      the sorted name table).
  7    17*
  7    18*   4) Example use:
  7    19*
  7    20*      if db_drl_grow then do;
  7    21*      .
  7    22*      .
  7    23*      .
  7    24*      debug i/o statements using com_err_ or ioa_
  7    25*      .
  7    26*      .
  7    27*      .
  7    28*      end;
  7    29*
  7    30**/
  7    31 
  7    32 dcl (
  7    33  db_		bit(1) defined(gtss_ext_$db(01))
  7    34 ,db_CFP_input	bit(1) defined(gtss_ext_$db(02))
  7    35 ,db_drl_addmem	bit(1) defined(gtss_ext_$db(03))
  7    36 ,db_drl_defil	bit(1) defined(gtss_ext_$db(04))
  7    37 ,db_drl_filact	bit(1) defined(gtss_ext_$db(05))
  7    38 ,db_drl_filsp	bit(1) defined(gtss_ext_$db(06))
  7    39 ,db_drl_grow	bit(1) defined(gtss_ext_$db(07))
  7    40 ,db_drl_rew	bit(1) defined(gtss_ext_$db(08))
  7    41 ,db_filact_funct02	bit(1) defined(gtss_ext_$db(09))
  7    42 ,db_filact_funct03	bit(1) defined(gtss_ext_$db(10))
  7    43 ,db_filact_funct04	bit(1) defined(gtss_ext_$db(11))
  7    44 ,db_filact_funct05	bit(1) defined(gtss_ext_$db(12))
  7    45 ,db_filact_funct10	bit(1) defined(gtss_ext_$db(13))
  7    46 ,db_filact_funct11	bit(1) defined(gtss_ext_$db(14))
  7    47 ,db_filact_funct14	bit(1) defined(gtss_ext_$db(15))
  7    48 ,db_filact_funct18	bit(1) defined(gtss_ext_$db(16))
  7    49 ,db_filact_funct19	bit(1) defined(gtss_ext_$db(17))
  7    50 ,db_filact_funct21	bit(1) defined(gtss_ext_$db(18))
  7    51 ,db_filact_funct22	bit(1) defined(gtss_ext_$db(19))
  7    52 ,db_interp_prim	bit(1) defined(gtss_ext_$db(20))
  7    53 ,db_ios		bit(1) defined(gtss_ext_$db(21))
  7    54 ,db_run_subsystem	bit(1) defined(gtss_ext_$db(22))
  7    55 ,db_drl_t_cfio	bit(1) defined(gtss_ext_$db(23))
  7    56 ,db_drl_switch	bit(1) defined(gtss_ext_$db(24))
  7    57 ,db_drl_dio	bit(1) defined(gtss_ext_$db(25))
  7    58 ,db_drl_retfil	bit(1) defined(gtss_ext_$db(26))
  7    59 ,db_drl_msub	bit(1) defined(gtss_ext_$db(27))
  7    60 ,db_drl_callss	bit(1) defined(gtss_ext_$db(28))
  7    61 ,db_drl_rstswh	bit(1) defined(gtss_ext_$db(29))
  7    62 ,db_drl_setswh	bit(1) defined(gtss_ext_$db(30))
  7    63 ,db_mcfc		bit(1) defined(gtss_ext_$db(31))
  7    64 ,db_dq		bit(1) defined(gtss_ext_$db(32))
  7    65 ,db_abs		bit(1) defined(gtss_ext_$db(33))
  7    66 ,db_attributes_mgr	bit(1) defined(gtss_ext_$db(34))
  7    67 ,db_expand_pathname bit(1) defined(gtss_ext_$db(35))
  7    68 ,db_drl_part	bit(1) defined(gtss_ext_$db(36))
  7    69 ,db_drl_morlnk	bit(1) defined(gtss_ext_$db(37))
  7    70 ,db_drl_kin	bit(1) defined(gtss_ext_$db(38))
  7    71 /* Insert next entry above this comment. */
  7    72 );
  7    73 
  7    74 /* Table of sorted names. */
  7    75 dcl 1 debug_bit_names (38) static int options(constant)
  7    76 ,     2 name char(18)var init(
  7    77          "" ,"CFP_input" ,"abs" ,"attributes_mgr" ,"dq" ,"drl_addmem"
  7    78          ,"drl_callss" ,"drl_defil" ,"drl_dio" ,"drl_filact" ,"drl_filsp"
  7    79          ,"drl_grow" ,"drl_kin" ,"drl_morlnk" ,"drl_msub" ,"drl_part"
  7    80          ,"drl_retfil" ,"drl_rew" ,"drl_rstswh" ,"drl_setswh" ,"drl_switch"
  7    81          ,"drl_t_cfio" ,"expand_pathname" ,"filact_funct02" ,"filact_funct03"
  7    82          ,"filact_funct04" ,"filact_funct05" ,"filact_funct10" ,"filact_funct11"
  7    83          ,"filact_funct14" ,"filact_funct18" ,"filact_funct19" ,"filact_funct21"
  7    84          ,"filact_funct22" ,"interp_prim" ,"ios" ,"mcfc" ,"run_subsystem"
  7    85 			)
  7    86 ,     2 value fixed bin init(
  7    87          01 ,02 ,33 ,34 ,32 ,03 ,28 ,04 ,25 ,05 ,06 ,07 ,38 ,37 ,27 ,36 ,26 ,08
  7    88          ,29 ,30 ,24 ,23 ,35 ,09 ,10 ,11 ,12 ,13 ,14 ,15 ,16 ,17 ,18 ,19 ,20 ,21
  7    89          ,31 ,22
  7    90 			);
  7    91 /* End of table. */
  7    92 /*   END INCLUDE FILE gtss_db_names.incl.pl1 */
      392 
      393      end						/* gtss_drl_filact_ */;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/10/84  1043.1  gtss_drl_filact_.pl1              >spec>on>7105>gtss_drl_filact_.pl1
380          1    09/09/83  1714.3  gtss_ust_ext_.incl.pl1            >ldd>include>gtss_ust_ext_.incl.pl1
382          2    09/09/83  1713.8  gtss_ext_.incl.pl1                >ldd>include>gtss_ext_.incl.pl1
384          3    12/10/84  1029.8  gtss_pnterr.incl.pl1              >spec>on>7105>gtss_pnterr.incl.pl1
386          4    12/15/83  1100.4  mc.incl.pl1                       >ldd>include>mc.incl.pl1
388          5    12/10/84  1029.7  gtss_entry_dcls.incl.pl1          >spec>on>7105>gtss_entry_dcls.incl.pl1
390          6    09/09/83  1713.5  gtss_FMS_catalog.incl.pl1         >ldd>include>gtss_FMS_catalog.incl.pl1
392          7    09/09/83  1713.6  gtss_db_names.incl.pl1            >ldd>include>gtss_db_names.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
FMS_cat_ptr                     000112 automatic       pointer                  initial dcl 6-12 set ref 6-12*
Function_number           1            based           fixed bin(17,0)          level 2 packed unaligned dcl 347 set ref 82 82 83
                                                                                  102 109* 125*
L_arglist                 0(18)        based           bit(18)                  level 2 packed unaligned dcl 347 ref 91 91
L_buffer                  1(18)        based           bit(18)                  level 2 packed unaligned dcl 347 ref 87 87 91 91 94
Type_1_ptr                      000114 automatic       pointer                  initial dcl 6-83 set ref 6-83*
Type_4_ptr                      000116 automatic       pointer                  initial dcl 6-216 set ref 6-216*
arg_ptr                         000100 automatic       pointer                  initial dcl 334 set ref 79* 82 82 83 87 87 91 91 91
                                                                                  91 94 100* 102 109 125 137* 151* 165* 179* 199*
                                                                                  219* 233* 253* 276* 290* 306* 321* 334*
buffer_ptr                      000120 automatic       pointer                  initial dcl 6-230 set ref 87 91 94* 95 98* 137* 151*
                                                                                  165* 179* 199* 219* 233* 253* 276* 290* 306* 321*
                                                                                  6-230*
callers_buffer                         based           structure                level 1 dcl 6-231 set ref 87 91 95*
code                            000102 automatic       fixed bin(35,0)          dcl 335 set ref 137* 145 151* 159 165* 173 179* 187
                                                                                  199* 207 219* 227 233* 241 253* 261 276* 284 290*
                                                                                  298 306* 314 321* 329
db_drl_filact                          defined         bit(1)                   unaligned dcl 7-32 ref 100
err103                 1505(18) 000027 constant        char(50)                 initial level 2 packed unaligned dcl 3-9 set ref
                                                                                  125*
err30                   552(18) 000027 constant        char(50)                 initial level 2 packed unaligned dcl 3-9 set ref
                                                                                  109*
err4                     45(18) 000027 constant        char(50)                 initial level 2 packed unaligned dcl 3-9 set ref 70*
every_entry                            based           structure                level 1 dcl 347
gseg                            000104 automatic       pointer                  initial dcl 336 set ref 64* 79 94 137* 151* 165*
                                                                                  179* 199* 219* 233* 253* 276* 290* 306* 321* 336*
gtss_abort_subsystem_           000022 constant        entry                    external dcl 5-15 ref 70 109 125
gtss_dump_filact_args_          000010 constant        entry                    external dcl 337 ref 100
gtss_ext_$db                    000014 external static bit(1)                   array unaligned dcl 2-10 ref 100 100
gtss_ext_$gtss_slave_area_seg   000016 external static pointer                  array dcl 2-20 ref 64
gtss_ext_$stack_level_          000020 external static fixed bin(17,0)          dcl 2-31 ref 64
gtss_filact_funct02_            000024 constant        entry                    external dcl 5-113 ref 137
gtss_filact_funct03_            000026 constant        entry                    external dcl 5-114 ref 151
gtss_filact_funct04_            000030 constant        entry                    external dcl 5-115 ref 165
gtss_filact_funct05_            000032 constant        entry                    external dcl 5-116 ref 179
gtss_filact_funct08_            000034 constant        entry                    external dcl 5-117 ref 199
gtss_filact_funct10_            000036 constant        entry                    external dcl 5-118 ref 219
gtss_filact_funct11_            000040 constant        entry                    external dcl 5-119 ref 233
gtss_filact_funct14_            000042 constant        entry                    external dcl 5-120 ref 253
gtss_filact_funct18_            000044 constant        entry                    external dcl 5-121 ref 276
gtss_filact_funct19_            000046 constant        entry                    external dcl 5-122 ref 290
gtss_filact_funct21_            000050 constant        entry                    external dcl 5-123 ref 306
gtss_filact_funct22_            000052 constant        entry                    external dcl 5-124 ref 321
gtss_pnterr                     000027 constant        structure                level 1 packed unaligned dcl 3-9
gtss_ust                        000012 external static structure                level 2 dcl 1-16
gtss_ust_ext_$ust               000012 external static structure                level 1 dcl 1-16
have_buffer                     001566 constant        bit(1)                   initial array unaligned dcl 353 ref 83
high_b                          000106 automatic       bit(18)                  unaligned dcl 338 set ref 59* 60 137* 151* 165* 179*
                                                                                  199* 219* 233* 253* 276* 290 306* 321*
high_i                          000107 automatic       fixed bin(18,0)          dcl 339 set ref 60* 67 87
ilc                       4            based           bit(18)                  level 2 packed unaligned dcl 4-56 ref 67 67 70 70 79
                                                                                  109 109
increment                              parameter       fixed bin(24,0)          dcl 340 set ref 14 61*
lbound                                                 builtin function         dcl 341 ref 82
limit                    22(18) 000012 external static bit(18)                  level 4 packed unaligned dcl 1-16 ref 59
low_b                                  constant        bit(18)                  initial dcl 342 ref 87
low_i                                  constant        fixed bin(18,0)          initial dcl 343 ref 67
lsize                    22     000012 external static structure                level 3 dcl 1-16
mc                                     based           structure                level 1 dcl 4-12
mcp                                    parameter       pointer                  dcl 4-10 set ref 14 57 70* 109* 125* 137* 151* 165*
                                                                                  179* 199* 219* 233* 253* 276* 290* 306* 321*
name                     22            based           structure                array level 2 dcl 6-75
null                                                   builtin function         dcl 344 ref 98 334 336 6-12 6-83 6-216 6-230
scu                                    based           structure                level 1 dcl 4-56 in procedure "gtss_drl_filact_"
scu                      30            based           bit(36)                  array level 2 in structure "mc" packed unaligned
                                                                                  dcl 4-12 in procedure "gtss_drl_filact_" set ref
                                                                                  57
scup                            000110 automatic       pointer                  dcl 4-54 set ref 57* 67 67 70 70 79 109 109
size                                                   builtin function         dcl 345 ref 87 91
t0c                                    based           structure                level 1 dcl 6-75

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
FMS_catalog                            based           structure                level 1 dcl 6-13
Type_0_Catalog                         based           structure                level 1 dcl 6-34
Type_1_Catalog                         based           structure                level 1 dcl 6-84
Type_2_Catalog                         based           structure                level 1 dcl 6-114
Type_4_Catalog                         based           structure                level 1 dcl 6-217
abx                                    internal static fixed bin(17,0)          initial dcl 4-42
apx                                    internal static fixed bin(17,0)          initial dcl 4-42
bbx                                    internal static fixed bin(17,0)          initial dcl 4-42
bpx                                    internal static fixed bin(17,0)          initial dcl 4-42
com_err_                        000000 constant        entry                    external dcl 5-8
db_                                    defined         bit(1)                   unaligned dcl 7-32
db_CFP_input                           defined         bit(1)                   unaligned dcl 7-32
db_abs                                 defined         bit(1)                   unaligned dcl 7-32
db_attributes_mgr                      defined         bit(1)                   unaligned dcl 7-32
db_dq                                  defined         bit(1)                   unaligned dcl 7-32
db_drl_addmem                          defined         bit(1)                   unaligned dcl 7-32
db_drl_callss                          defined         bit(1)                   unaligned dcl 7-32
db_drl_defil                           defined         bit(1)                   unaligned dcl 7-32
db_drl_dio                             defined         bit(1)                   unaligned dcl 7-32
db_drl_filsp                           defined         bit(1)                   unaligned dcl 7-32
db_drl_grow                            defined         bit(1)                   unaligned dcl 7-32
db_drl_kin                             defined         bit(1)                   unaligned dcl 7-32
db_drl_morlnk                          defined         bit(1)                   unaligned dcl 7-32
db_drl_msub                            defined         bit(1)                   unaligned dcl 7-32
db_drl_part                            defined         bit(1)                   unaligned dcl 7-32
db_drl_retfil                          defined         bit(1)                   unaligned dcl 7-32
db_drl_rew                             defined         bit(1)                   unaligned dcl 7-32
db_drl_rstswh                          defined         bit(1)                   unaligned dcl 7-32
db_drl_setswh                          defined         bit(1)                   unaligned dcl 7-32
db_drl_switch                          defined         bit(1)                   unaligned dcl 7-32
db_drl_t_cfio                          defined         bit(1)                   unaligned dcl 7-32
db_expand_pathname                     defined         bit(1)                   unaligned dcl 7-32
db_filact_funct02                      defined         bit(1)                   unaligned dcl 7-32
db_filact_funct03                      defined         bit(1)                   unaligned dcl 7-32
db_filact_funct04                      defined         bit(1)                   unaligned dcl 7-32
db_filact_funct05                      defined         bit(1)                   unaligned dcl 7-32
db_filact_funct10                      defined         bit(1)                   unaligned dcl 7-32
db_filact_funct11                      defined         bit(1)                   unaligned dcl 7-32
db_filact_funct14                      defined         bit(1)                   unaligned dcl 7-32
db_filact_funct18                      defined         bit(1)                   unaligned dcl 7-32
db_filact_funct19                      defined         bit(1)                   unaligned dcl 7-32
db_filact_funct21                      defined         bit(1)                   unaligned dcl 7-32
db_filact_funct22                      defined         bit(1)                   unaligned dcl 7-32
db_interp_prim                         defined         bit(1)                   unaligned dcl 7-32
db_ios                                 defined         bit(1)                   unaligned dcl 7-32
db_mcfc                                defined         bit(1)                   unaligned dcl 7-32
db_run_subsystem                       defined         bit(1)                   unaligned dcl 7-32
debug_bit_names                        internal static structure                array level 1 unaligned dcl 7-75
gtss_CFP_abort_                 000000 constant        entry                    external dcl 5-9
gtss_CFP_break_                 000000 constant        entry                    external dcl 5-10
gtss_CFP_input_                 000000 constant        entry                    external dcl 5-11
gtss_CFP_output_                000000 constant        entry                    external dcl 5-12
gtss_abandon_CFP_               000000 constant        entry                    external dcl 5-13
gtss_abort_dump_                000000 constant        entry                    external dcl 5-14
gtss_abort_subsystem_$not_imp   000000 constant        entry                    external dcl 5-16
gtss_abs_$abs_equiv             000000 constant        entry                    external dcl 5-19
gtss_abs_$cpu_runout            000000 constant        entry                    external dcl 5-20
gtss_abs_$create_absin          000000 constant        entry                    external dcl 5-21
gtss_abs_$dabt_check            000000 constant        entry                    external dcl 5-22
gtss_abs_$get_drm               000000 constant        entry                    external dcl 5-24
gtss_abs_$get_id                000000 constant        entry                    external dcl 5-23
gtss_abs_login_banner_          000000 constant        entry                    external dcl 5-17
gtss_abs_logout_banner_         000000 constant        entry                    external dcl 5-18
gtss_adjust_size_               000000 constant        entry                    external dcl 5-25
gtss_aft_$add                   000000 constant        entry                    external dcl 5-26
gtss_aft_$delete                000000 constant        entry                    external dcl 5-27
gtss_aft_$find                  000000 constant        entry                    external dcl 5-28
gtss_aft_$initialize            000000 constant        entry                    external dcl 5-29
gtss_ascii_bcd_                 000000 constant        entry                    external dcl 5-30
gtss_attributes_mgr_$get        000000 constant        entry                    external dcl 5-31
gtss_attributes_mgr_$set        000000 constant        entry                    external dcl 5-32
gtss_bcd_ascii_                 000000 constant        entry                    external dcl 5-33
gtss_bcd_ascii_$lc              000000 constant        entry                    external dcl 5-34
gtss_break_vector_              000000 constant        entry                    external dcl 5-35
gtss_break_vector_$drl_in_progress
                                000000 constant        entry                    external dcl 5-36
gtss_break_vector_$status       000000 constant        entry                    external dcl 5-37
gtss_build_                     000000 constant        entry                    external dcl 5-38
gtss_com_err_                   000000 constant        entry                    external dcl 5-39
gtss_derail_processor_          000000 constant        entry                    external dcl 5-40
gtss_derail_processor_$set      000000 constant        entry                    external dcl 5-41
gtss_dq_$catp                   000000 constant        entry                    external dcl 5-42
gtss_dq_$create                 000000 constant        entry                    external dcl 5-43
gtss_dq_$dibp                   000000 constant        entry                    external dcl 5-44
gtss_dq_$entries_info           000000 constant        entry                    external dcl 5-45
gtss_dq_$hdrp                   000000 constant        entry                    external dcl 5-46
gtss_dq_$mod_js                 000000 constant        entry                    external dcl 5-47
gtss_dq_$open_exc               000000 constant        entry                    external dcl 5-48
gtss_dq_$open_gen               000000 constant        entry                    external dcl 5-49
gtss_drl_abort_                 000000 constant        entry                    external dcl 5-50
gtss_drl_addmem_                000000 constant        entry                    external dcl 5-51
gtss_drl_callss_                000000 constant        entry                    external dcl 5-52
gtss_drl_corfil_                000000 constant        entry                    external dcl 5-53
gtss_drl_defil_                 000000 constant        entry                    external dcl 5-54
gtss_drl_defil_$subr            000000 constant        entry                    external dcl 5-55
gtss_drl_dio_                   000000 constant        entry                    external dcl 5-56
gtss_drl_drlimt_                000000 constant        entry                    external dcl 5-57
gtss_drl_drlsav_                000000 constant        entry                    external dcl 5-58
gtss_drl_filact_                000000 constant        entry                    external dcl 5-59
gtss_drl_filsp_                 000000 constant        entry                    external dcl 5-60
gtss_drl_grow_                  000000 constant        entry                    external dcl 5-61
gtss_drl_gwake_                 000000 constant        entry                    external dcl 5-62
gtss_drl_jsts_                  000000 constant        entry                    external dcl 5-63
gtss_drl_kin_                   000000 constant        entry                    external dcl 5-64
gtss_drl_kotnow_                000000 constant        entry                    external dcl 5-65
gtss_drl_kotnow_$gtss_drl_kout_ 000000 constant        entry                    external dcl 5-66
gtss_drl_koutn_                 000000 constant        entry                    external dcl 5-67
gtss_drl_morlnk_                000000 constant        entry                    external dcl 5-68
gtss_drl_msub_                  000000 constant        entry                    external dcl 5-69
gtss_drl_objtim_                000000 constant        entry                    external dcl 5-70
gtss_drl_part_                  000000 constant        entry                    external dcl 5-71
gtss_drl_pasaft_                000000 constant        entry                    external dcl 5-72
gtss_drl_pasdes_                000000 constant        entry                    external dcl 5-73
gtss_drl_pasust_                000000 constant        entry                    external dcl 5-74
gtss_drl_pdio_                  000000 constant        entry                    external dcl 5-75
gtss_drl_prgdes_                000000 constant        entry                    external dcl 5-76
gtss_drl_pseudo_                000000 constant        entry                    external dcl 5-77
gtss_drl_relmem_                000000 constant        entry                    external dcl 5-78
gtss_drl_restor_                000000 constant        entry                    external dcl 5-79
gtss_drl_retfil_                000000 constant        entry                    external dcl 5-80
gtss_drl_return_                000000 constant        entry                    external dcl 5-81
gtss_drl_rew_                   000000 constant        entry                    external dcl 5-82
gtss_drl_rstswh_                000000 constant        entry                    external dcl 5-83
gtss_drl_setlno_                000000 constant        entry                    external dcl 5-84
gtss_drl_setswh_                000000 constant        entry                    external dcl 5-85
gtss_drl_snumb_                 000000 constant        entry                    external dcl 5-86
gtss_drl_spawn_                 000000 constant        entry                    external dcl 5-87
gtss_drl_spawn_$gtss_drl_pasflr_
                                000000 constant        entry                    external dcl 5-88
gtss_drl_stoppt_                000000 constant        entry                    external dcl 5-89
gtss_drl_switch_                000000 constant        entry                    external dcl 5-90
gtss_drl_sysret_                000000 constant        entry                    external dcl 5-91
gtss_drl_t_cfio_                000000 constant        entry                    external dcl 5-92
gtss_drl_t_cmov_                000000 constant        entry                    external dcl 5-93
gtss_drl_t_err_                 000000 constant        entry                    external dcl 5-94
gtss_drl_t_goto_                000000 constant        entry                    external dcl 5-95
gtss_drl_t_linl_                000000 constant        entry                    external dcl 5-96
gtss_drl_t_rscc_                000000 constant        entry                    external dcl 5-97
gtss_drl_tapein_                000000 constant        entry                    external dcl 5-98
gtss_drl_task_                  000000 constant        entry                    external dcl 5-99
gtss_drl_termtp_                000000 constant        entry                    external dcl 5-100
gtss_drl_time_                  000000 constant        entry                    external dcl 5-101
gtss_drun_                      000000 constant        entry                    external dcl 5-102
gtss_dsd_lookup_                000000 constant        entry                    external dcl 5-103
gtss_dsd_process_               000000 constant        entry                    external dcl 5-104
gtss_edit_dsd_                  000000 constant        entry                    external dcl 5-105
gtss_expand_pathname_           000000 constant        entry                    external dcl 5-107
gtss_expand_pathname_$verify_umc
                                000000 constant        entry                    external dcl 5-108
gtss_ext_$CFP_bits                     external static structure                level 1 dcl 2-37
gtss_ext_$SYstarstar_file_no           external static fixed bin(24,0)          dcl 2-33
gtss_ext_$aem                          external static fixed bin(17,0)          dcl 2-8
gtss_ext_$aft                          external static structure                level 1 dcl 2-78
gtss_ext_$bad_drl_rtrn                 external static label variable           dcl 2-9
gtss_ext_$com_reg                      external static structure                level 1 dcl 2-45
gtss_ext_$deferred_catalogs_ptr        external static pointer                  dcl 2-11
gtss_ext_$dispose_of_drl               external static label variable           dcl 2-12
gtss_ext_$drl_rtrn                     external static label variable           array dcl 2-13
gtss_ext_$drm_path                     external static char(168)                unaligned dcl 2-14
gtss_ext_$drun_jid                     external static char(5)                  unaligned dcl 2-15
gtss_ext_$event_channel                external static fixed bin(71,0)          dcl 2-16
gtss_ext_$fast_lib                     external static structure                level 1 dcl 2-98
gtss_ext_$finished                     external static label variable           dcl 2-17
gtss_ext_$flags                        external static structure                level 1 dcl 2-60
gtss_ext_$gdb_name                     external static char(8)                  unaligned dcl 2-18
gtss_ext_$get_line                     external static entry variable           dcl 2-19
gtss_ext_$hcs_work_area_ptr            external static pointer                  dcl 2-21
gtss_ext_$homedir                      external static char(64)                 unaligned dcl 2-22
gtss_ext_$last_k_was_out               external static bit(1)                   dcl 2-23
gtss_ext_$mcfc                         external static structure                level 1 dcl 2-109
gtss_ext_$pdir                         external static varying char(168)        dcl 2-24
gtss_ext_$popup_from_pi                external static label variable           dcl 2-25
gtss_ext_$ppt                          external static pointer                  dcl 2-94
gtss_ext_$process_type                 external static fixed bin(17,0)          dcl 2-26
gtss_ext_$put_chars                    external static entry variable           dcl 2-27
gtss_ext_$restart_from_pi              external static label variable           dcl 2-28
gtss_ext_$restart_seg_ptr              external static pointer                  dcl 2-29
gtss_ext_$sig_ptr                      external static pointer                  dcl 2-30
gtss_ext_$statistics                   external static structure                level 1 dcl 2-72
gtss_ext_$suspended_process            external static bit(1)                   unaligned dcl 2-32
gtss_ext_$user_id                      external static varying char(26)         dcl 2-34
gtss_ext_$work_area_ptr                external static pointer                  dcl 2-35
gtss_fault_processor_           000000 constant        entry                    external dcl 5-109
gtss_fault_processor_$timer_runout
                                000000 constant        entry                    external dcl 5-111
gtss_filact_error_status_       000000 constant        entry                    external dcl 5-112
gtss_find_cond_frame_           000000 constant        entry                    external dcl 5-110
gtss_interp_prim_               000000 constant        entry                    external dcl 5-126
gtss_interp_prim_$callss        000000 constant        entry                    external dcl 5-127
gtss_interp_prim_$sysret        000000 constant        entry                    external dcl 5-128
gtss_interp_prim_$t_goto        000000 constant        entry                    external dcl 5-129
gtss_ios_change_size_           000000 constant        entry                    external dcl 5-130
gtss_ios_close_                 000000 constant        entry                    external dcl 5-131
gtss_ios_exchange_names_        000000 constant        entry                    external dcl 5-132
gtss_ios_initialize_            000000 constant        entry                    external dcl 5-133
gtss_ios_io_                    000000 constant        entry                    external dcl 5-134
gtss_ios_open_                  000000 constant        entry                    external dcl 5-135
gtss_ios_position_              000000 constant        entry                    external dcl 5-136
gtss_mcfc_$close                000000 constant        entry                    external dcl 5-139
gtss_mcfc_$delete               000000 constant        entry                    external dcl 5-137
gtss_mcfc_$open                 000000 constant        entry                    external dcl 5-138
gtss_mcfc_empty                 000000 constant        entry                    external dcl 5-106
gtss_mcfc_init_                 000000 constant        entry                    external dcl 5-125
gtss_read_starCFP_              000000 constant        entry                    external dcl 5-140
gtss_read_starCFP_$last_os      000000 constant        entry                    external dcl 5-141
gtss_run_subsystem_             000000 constant        entry                    external dcl 5-142
gtss_run_subsystem_$finish      000000 constant        entry                    external dcl 5-143
gtss_run_subsystem_$restor      000000 constant        entry                    external dcl 5-144
gtss_run_subsystem_$restor_perm 000000 constant        entry                    external dcl 5-145
gtss_set_slave_                 000000 constant        entry                    external dcl 5-146
gtss_set_slave_$load_bar        000000 constant        entry                    external dcl 5-147
gtss_update_safe_store_         000000 constant        entry                    external dcl 5-148
gtss_verify_access_             000000 constant        entry                    external dcl 5-149
gtss_verify_access_$check_forced_access
                                000000 constant        entry                    external dcl 5-150
gtss_write_starCFP_             000000 constant        entry                    external dcl 5-151
lbx                                    internal static fixed bin(17,0)          initial dcl 4-42
lpx                                    internal static fixed bin(17,0)          initial dcl 4-42
sbx                                    internal static fixed bin(17,0)          initial dcl 4-42
scux                                   based           structure                level 1 dcl 4-207
spx                                    internal static fixed bin(17,0)          initial dcl 4-42
t1c                                    based           structure                level 1 dcl 6-108

NAMES DECLARED BY EXPLICIT CONTEXT.
function                        000000 constant        label                    array(0:22) dcl 108 ref 82 82 102 191 194 213 245
                                                                                  248 265 268 271 302
gtss_drl_filact_                001614 constant        entry                    external dcl 14
ret                             002101 constant        label                    dcl 118 ref 77
return_err4                     001665 constant        label                    dcl 69 ref 87 91 145 159 173 187 207 227 241 261 284
                                                                                  298 314 329

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 57
addrel                                                 builtin function         ref 79 94
fixed                                                  builtin function         ref 60 67 67 70 70 79 87 91 91 109 109
hbound                                                 builtin function         ref 82
unspec                                                 builtin function         ref 95

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      3102        3156    2620        3112
Length      3512    2620        54         320     262           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gtss_drl_filact_                    138 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gtss_drl_filact_         000100 arg_ptr                     gtss_drl_filact_
                         000102 code                        gtss_drl_filact_
                         000104 gseg                        gtss_drl_filact_
                         000106 high_b                      gtss_drl_filact_
                         000107 high_i                      gtss_drl_filact_
                         000110 scup                        gtss_drl_filact_
                         000112 FMS_cat_ptr                 gtss_drl_filact_
                         000114 Type_1_ptr                  gtss_drl_filact_
                         000116 Type_4_ptr                  gtss_drl_filact_
                         000120 buffer_ptr                  gtss_drl_filact_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
gtss_abort_subsystem_         gtss_dump_filact_args_        gtss_filact_funct02_          gtss_filact_funct03_
gtss_filact_funct04_          gtss_filact_funct05_          gtss_filact_funct08_          gtss_filact_funct10_
gtss_filact_funct11_          gtss_filact_funct14_          gtss_filact_funct18_          gtss_filact_funct19_
gtss_filact_funct21_          gtss_filact_funct22_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
gtss_ext_$db                  gtss_ext_$gtss_slave_area_seg gtss_ext_$stack_level_        gtss_ust_ext_$ust




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     14 001610       334 001621       336 001623    6   12 001624    6   83 001625    6  216 001626    6  230 001627
     57 001630        59 001635        60 001641        61 001643        64 001645        67 001652        69 001665
     70 001666        77 001734        79 001735        82 001741        83 001747        87 001754        91 001770
     94 002001        95 002005        97 002010       100 002011       102 002022       108 002025       109 002026
    118 002101       120 002102       123 002103       125 002104       132 002146       135 002147       137 002150
    145 002172       146 002175       149 002176       151 002177       159 002221       160 002224       163 002225
    165 002226       173 002250       174 002253       177 002254       179 002255       187 002277       188 002302
    190 002303       191 002304       193 002305       194 002306       198 002307       199 002310       207 002332
    208 002335       212 002336       213 002337       217 002340       219 002341       227 002363       228 002366
    231 002367       233 002370       241 002412       242 002415       244 002416       245 002417       247 002420
    248 002421       251 002422       253 002423       261 002445       262 002450       264 002451       265 002452
    267 002453       268 002454       270 002455       271 002456       274 002457       276 002460       284 002502
    285 002505       288 002506       290 002507       298 002534       299 002537       301 002540       302 002541
    304 002542       306 002543       314 002565       315 002570       319 002571       321 002572       329 002614
    330 002617


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
