	COMPILATION LISTING OF SEGMENT !BBBJmCwlXZkNxC
	Compiled by: Multics PL/I Compiler, Release 33e, of October 6, 1992
	Compiled at: CGI                             
	Compiled on: 2000-04-18_1121.93_Tue_mdt
	    Options: table map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 gtss_ust_ext_:proc;
        7 
        8 /* Generate object for "gtss_ust_ext_" data.
        9*
       10*   Author:    Dave Ward 1981
       11*   Modified:  Ron Barstad  83-07-21  Remove dependency on ted_com, add include file
       12* */
       13 /** Initialize cds_args **/
       14 
       15 	cds_args_ptr=addr(space_for_cds_args);
       16 	unspec(space_for_cds_args)="0"b;
       17 
       18 /** Reference structure input to cds to assure it is in runtime table. **/
       19 
       20 	if addr(gtss_ust_ext_)=null() then ;
       21 
       22 /** No text section **/
       23 	cds_args_ptr -> cds_args.sections (1).p = null ();
       24 	cds_args_ptr -> cds_args.sections (1).len = 0;
       25 	cds_args_ptr -> cds_args.sections (1).struct_name = "NO_TEXT";
       26 
       27 /** Static section **/
       28 	cds_args_ptr -> cds_args.sections (2).p = addr (gtss_ust_ext_);	/* Caller's data. */
       29 	cds_args_ptr -> cds_args.sections (2).len = size (gtss_ust_ext_);	/* No. words in data structure. */
       30 	cds_args_ptr -> cds_args.sections (2).struct_name = "gtss_ust_ext_";
       31 
       32 	cds_args_ptr -> cds_args.seg_name = "gtss_ust_ext_";	/* Entryname of object segment. */
       33 	cds_args_ptr -> cds_args.num_exclude_names = 0;		/* All level 2 names are entry points. */
       34 	cds_args_ptr -> cds_args.exclude_array_ptr = null ();
       35 	cds_args_ptr -> cds_args.switches.defs_in_link = "0"b;	/* Definitions contiguous to text section. */
       36 	cds_args_ptr -> cds_args.switches.separate_static = "0"b;	/* Static in linkage section (to bind). */
       37 	cds_args_ptr -> cds_args.switches.have_text = "0"b;	/* No text section. */
       38 	cds_args_ptr -> cds_args.switches.have_static = "1"b;	/* There is a static section. */
       39 	cds_args_ptr -> cds_args.switches.pad = "0"b;		/* Must be zeroes (see create_data_segment_). */
       40 
       41 	call create_data_segment_ (cds_args_ptr, code);
       42 	if code ^= 0 
       43 	   then 
       44 	      call com_err_ (code, "cds_gtss_ust_ext_");
       45 	   else 
       46 	      call com_err_( 0,"gtss_ust_ext_","Object for gtss_ust_ext_ created [^i words].",size(gtss_ust_ext_));
       47 
       48 	return;
       49 
       50 /** Data for cds **/
       51 dcl  addr                     builtin;
       52 dcl  cds_args_ptr             ptr init(null());
       53 dcl  code                     fixed bin(35);
       54 dcl  com_err_                 entry options(variable);
       55 dcl  create_data_segment_     entry(ptr,fixed bin(35));
       56 dcl  null                     builtin;
       57 dcl  size                     builtin;
       58 dcl  unspec                   builtin;
       59 dcl  1 space_for_cds_args     aligned like cds_args;
       60 
       61 /** This data structure must exactly match that of gtss_ust_ext_.incl.pl1 **/
       62 
       63 dcl 1 gtss_ust_ext_ aligned,
       64       2 ust like gtss_ust_ext_$ust;
       65 
  1     1 /* BEGIN INCLUDE FILE gtss_ust_ext_.incl.pl1 */
  1     2 /* UST: User Status Table 
  1     3*   definitions based on 
  1     4*   System Tables, Order number DD14-01E, January 1981
  1     5*   Section 15, Time Sharing System
  1     6*
  1     7*   Authors: Robert J. Grimes	Created
  1     8*   -	  Albert N. Kepner	  1978
  1     9*   -	  Robert M. May
  1    10*   -	  David B. Ward
  1    11*   Change:  Dave Ward	02/23/79 Level 4 numbering.
  1    12*   Change:  Ron Barstad  83-07-12 Repaired damaged formating and word offset comments
  1    13*                                  Brought up to 4JS3 functionality
  1    14**/
  1    15 /* octal word offsets of entries */
  1    16 dcl 1 gtss_ust_ext_$ust aligned ext,
  1    17       3 gtss_ust,
  1    18 /* 0-1  */	4 lid		bit (72),
  1    19 /* 2    */	4 lstp		bit (36),
  1    20 /* 3    */	4 ltin		bit (36),
  1    21 /* 4    */	4 lstio,
  1    22 			5 no_of_chars_by_8  fixed bin (18) uns unal,
  1    23 			5 no_of_disk_io     fixed bin (18) uns unal,
  1    24 /* 5    */	4 lsnub		bit (36),
  1    25 /* 6-7  */	4 lchg		bit (72),
  1    26 /* 10   */	4 lbuf,
  1    27 			5 address		bit (18)unaligned,
  1    28 			5 tally		bit (1)unaligned,
  1    29 			5 terminal_type	bit (5)unaligned,
  1    30 			5 station_id	bit (12)unaligned,
  1    31 /* 11-12 */	4 liost (0:1)	bit (36),
  1    32 /* 13   */	4 lcc		bit (36),
  1    33 /* 14   */	4 lback,
  1    34 			5 fill1		bit (18) unaligned,
  1    35 			5 gwake		fixed bin (17) unaligned,
  1    36 /* 15   */	4 lflag,
  1    37 			5 mp_list		bit (18) unaligned,
  1    38 			5 flags unaligned,
  1    39 				6 b18		bit (1) unaligned,
  1    40 				6 b19		bit (1) unaligned,
  1    41 				6 b20		bit (1) unaligned,
  1    42 				6 b21		bit (1) unaligned,
  1    43 				6 b22		bit (1) unaligned,
  1    44 				6 b23		bit (1) unaligned,
  1    45 				6 b24		bit (1) unaligned,
  1    46 				6 b25		bit (1) unaligned,
  1    47 				6 b26		bit (1) unaligned,
  1    48 				6 b27		bit (1) unaligned,
  1    49 				6 b28		bit (1) unaligned,
  1    50 				6 b29		bit (1) unaligned,
  1    51 				6 b30		bit (1) unaligned,
  1    52 				6 b31		bit (1) unaligned,
  1    53 				6 b32		bit (1) unaligned,
  1    54 				6 b33		bit (1) unaligned,
  1    55 				6 b34		bit (1) unaligned,
  1    56 				6 b35		bit (1) unaligned,
  1    57 /* 16   */	4 lkdss		bit (36),
  1    58 /* 17   */	4 lfile,
  1    59 			5 program_stack	fixed bin (17) unal,
  1    60 			5 file_list_ptr	bit (18) unal,
  1    61 /* 20   */	4 lttys		bit (36),
  1    62 /* 21   */	4 lswth,
  1    63 			5 b0		bit (1) unaligned,
  1    64 			5 b1		bit (1) unaligned,
  1    65 			5 b2		bit (1) unaligned,
  1    66 			5 b3		bit (1) unaligned,
  1    67 			5 b4		bit (1) unaligned,
  1    68 			5 b5		bit (1) unaligned,
  1    69 			5 b6		bit (1) unaligned,
  1    70 			5 b7		bit (1) unaligned,
  1    71 			5 b8		bit (1) unaligned,
  1    72 			5 b9		bit (1) unaligned,
  1    73 			5 b10		bit (1) unaligned,
  1    74 			5 b11		bit (1) unaligned,
  1    75 			5 b12		bit (1) unaligned,
  1    76 			5 b13		bit (1) unaligned,
  1    77 			5 b14		bit (1) unaligned,
  1    78 			5 b15		bit (1) unaligned,
  1    79 			5 b16		bit (1) unaligned,
  1    80 			5 b17		bit (1) unaligned,
  1    81 			5 b18		bit (1) unaligned,
  1    82 			5 b19		bit (1) unaligned,
  1    83 			5 b20		bit (1) unaligned,
  1    84 			5 b21		bit (1) unaligned,
  1    85 			5 b22		bit (1) unaligned,
  1    86 			5 b23		bit (1) unaligned,
  1    87 			5 b24		bit (1) unaligned,
  1    88 			5 b25		bit (1) unaligned,
  1    89 			5 b26		bit (1) unaligned,
  1    90 			5 b27		bit (1) unaligned,
  1    91 			5 b28		bit (1) unaligned,
  1    92 			5 b29		bit (1) unaligned,
  1    93 			5 b30		bit (1) unaligned,
  1    94 			5 b31		bit (1) unaligned,
  1    95 			5 b32		bit (1) unaligned,
  1    96 			5 b33		bit (1) unaligned,
  1    97 			5 b34		bit (1) unaligned,
  1    98 			5 b35		bit (1) unaligned,
  1    99 /* 22   */	4 lsize,
  1   100 			5 bar		fixed bin (17) unaligned,
  1   101 			5 limit		bit (18) unaligned,
  1   102 /* 23... */	4 lswap,
  1   103 			5 fill		bit (18) unal,
  1   104 			5 size		bit (18) unal,
  1   105 /* ...24 */	4 transfer_cell	bit (36) unal,
  1   106 /* 25   */	4 lerrm		bit (36),
  1   107 /* 26-37 */	4 lcfil (0:9)	bit (36),
  1   108 /* 40   */	4 lsybc,
  1   109 			5 b0_17		fixed bin (17) unaligned,
  1   110 			5 b18_35		fixed bin (17) unaligned,
  1   111 /* 41-42 */	4 lstem (0:1)	bit (36),
  1   112 /* 43    */	4 lcals,
  1   113 			5 b0_17		fixed bin (17) unaligned,
  1   114 			5 b18_35		bit (18) unaligned,
  1   115 /* 44-51 */	4 subsystems (3),
  1   116 			5 content_lswap,
  1   117 				6 fill		bit (18) unal,
  1   118 				6 size		bit (18) unal,
  1   119 			5 tally_address	fixed bin (17) unaligned,
  1   120 			5 ss_flags	bit (18) unaligned,
  1   121 /* 52   */	4 ltalc,
  1   122 			5 tod		fixed bin (17) unaligned,
  1   123 			5 startup		fixed bin (17) unaligned,
  1   124 /* 53   */	4 lspts		fixed bin (35),
  1   125 /* 54   */	4 lflg2,
  1   126 			5 b0		bit (1) unaligned,
  1   127 			5 b1		bit (1) unaligned,
  1   128 			5 b2		bit (1) unaligned,
  1   129 			5 b3		bit (1) unaligned,
  1   130 			5 b4		bit (1) unaligned,
  1   131 			5 b5		bit (1) unaligned,
  1   132 			5 b6		bit (1) unaligned,
  1   133 			5 b7		bit (1) unaligned,
  1   134 			5 b8		bit (1) unaligned,
  1   135 			5 b9		bit (1) unaligned,
  1   136 			5 b10		bit (1) unaligned,
  1   137 			5 b11		bit (1) unaligned,
  1   138 			5 b12		bit (1) unaligned,
  1   139 			5 b13		bit (1) unaligned,
  1   140 			5 b14		bit (1) unaligned,
  1   141 			5 b15		bit (1) unaligned,
  1   142 			5 b16		bit (1) unaligned,
  1   143 			5 b17		bit (1) unaligned,
  1   144 			5 b18		bit (1) unaligned,
  1   145 			5 b19		bit (1) unaligned,
  1   146 			5 b20		bit (1) unaligned,
  1   147 			5 b21		bit (1) unaligned,
  1   148 			5 b22		bit (1) unaligned,
  1   149 			5 b23		bit (1) unaligned,
  1   150 			5 b24		bit (1) unaligned,
  1   151 			5 b25		bit (1) unaligned,
  1   152 			5 b26		bit (1) unaligned,
  1   153 			5 b27		bit (1) unaligned,
  1   154 			5 b28		bit (1) unaligned,
  1   155 			5 b29		bit (1) unaligned,
  1   156 			5 b30		bit (1) unaligned,
  1   157 			5 b31		bit (1) unaligned,
  1   158 			5 b32		bit (1) unaligned,
  1   159 			5 b33		bit (1) unaligned,
  1   160 			5 b34		bit (1) unaligned,
  1   161 			5 b35		bit (1) unaligned,
  1   162 /* 55-60 */	4 lsftm (0:3)	bit (36),
  1   163 /* 61    */	4 lsprt		fixed bin (35),
  1   164 /* 62    */	4 ltrm		bit (36),
  1   165 /* 63    */	4 linno		fixed bin (35),
  1   166 /* 64    */	4 lincr		fixed bin (35),
  1   167 /* 65    */	4 ltdes		bit (36),
  1   168 /* 66    */	4 lbptr		bit (36),
  1   169 /* 67    */	4 lpptr,
  1   170 			5 last_file_pat_ptr	bin (18) uns unal,
  1   171 			5 lpptr_reserved	bin (18) uns unal,
  1   172 /* 70    */	4 lsclp		bit (36),
  1   173 /* 71    */	4 limit		fixed bin (35),
  1   174 /* 72    */	4 lacpt,
  1   175 			5 jout_pat_offset	bit (18) unal,
  1   176 			5 permissions unal,
  1   177 				6 lodx		bit (1) unal,
  1   178 				6 cardin		bit (1) unal,
  1   179 				6 talk		bit (1) unal,
  1   180 				6 lods		bit (1) unal,
  1   181 			5 cardin_urgency	bit (14) unal,
  1   182 /* 73    */	4 ldrl,
  1   183 			5 ilc		bit (18) unaligned,
  1   184 			5 code		fixed bin (17) unaligned,
  1   185 /* 74    */	4 ljsnb		bit (36),
  1   186 /* 75    */	4 ltm0		bit (36),
  1   187 /* 76    */	4 ltm1		bit (36),
  1   188 /* 77    */	4 ltm2		bit (36),
  1   189 /* 100   */	4 ltm3		bit (36),
  1   190 /* 101   */	4 ltm4		bit (36),
  1   191 /* 102   */	4 ltm5		bit (36),
  1   192 /* 103   */	4 ltmwt		bit (36),
  1   193 /* 104   */	4 ltmrs		bit (36),
  1   194 /* 105   */	4 ltc0		bit (36),
  1   195 /* 106   */	4 ltc1		bit (36),
  1   196 /* 107   */	4 ltc2		bit (36),
  1   197 /* 110   */	4 lct3		bit (36),
  1   198 /* 111   */	4 ltc4		bit (36),
  1   199 /* 112   */	4 ltc5		bit (36),
  1   200 /* 113   */	4 ltcw		bit (36),
  1   201 /* 114   */	4 lkst		bit (36),
  1   202 /* 115   */	4 lkst2		bit (36),
  1   203 /* 116   */	4 lkcc		bit (36),
  1   204 /* 117   */	4 lkms		bit (36),
  1   205 /* 120-121 */	4 lksdc (0:1)	bit (36),
  1   206 /* 122   */	4 lkntp		bit (36),
  1   207 /* 123   */	4 lkrdc		bit (36),
  1   208 /* 124   */	4 lpqf		bit (36),
  1   209 /* 125   */	4 lpqb		bit (36),
  1   210 /* 126   */	4 lustl		bit (36),
  1   211 /* 127   */	4 ltemp		bit (36),
  1   212 /* 130   */	4 lrtll,
  1   213 			5 word_length	fixed bin unaligned,
  1   214 			5 char_length	fixed bin unaligned,
  1   215 /* 131   */	4 ltim		bit (36),
  1   216 /* 132   */	4 lcfio,
  1   217 			5 sect_out	fixed bin(18)unsigned unal,
  1   218 			5 sect_in		fixed bin(18)unsigned unal,
  1   219 /* 133   */	4 lcfst,
  1   220 			5 initial_sect_out	fixed bin(18)unsigned unal,
  1   221 			5 start_term	fixed bin(18)unsigned unal,
  1   222 /* 134   */	4 lcmpt		bit (36),
  1   223 /* 135   */	4 lcjid		bit (36),
  1   224 /* 136-137 */	4 lrcal (0:1)	bit (36),
  1   225 /* 140   */	4 lrdta		bit (36),
  1   226 /* 141   */	4 lrrsk		bit (36),
  1   227 /* 142   */	4 lrskd		bit (36),
  1   228 /* 143   */	4 lrcc		bit (36),
  1   229 /* 144-145 */	4 lrsts (0:1)	bit (36),
  1   230 /* 146   */	4 lrtm		bit (36),
  1   231 /* 147   */	4 lswt2,
  1   232 			5 b0		bit (1) unaligned,
  1   233 			5 b1		bit (1) unaligned,
  1   234 			5 b2		bit (1) unaligned,
  1   235 			5 b3		bit (1) unaligned,
  1   236 			5 b4		bit (1) unaligned,
  1   237 			5 b5		bit (1) unaligned,
  1   238 			5 b6		bit (1) unaligned,
  1   239 			5 b7		bit (1) unaligned,
  1   240 			5 b8		bit (1) unaligned,
  1   241 			5 b9		bit (1) unaligned,
  1   242 			5 b10		bit (1) unaligned,
  1   243 			5 b11		bit (1) unaligned,
  1   244 			5 b12		bit (1) unaligned,
  1   245 			5 b13		bit (1) unaligned,
  1   246 			5 b14		bit (1) unaligned,
  1   247 			5 b15		bit (1) unaligned,
  1   248 			5 b16		bit (1) unaligned,
  1   249 			5 b17		bit (1) unaligned,
  1   250 			5 b18		bit (1) unaligned,
  1   251 			5 b19		bit (1) unaligned,
  1   252 			5 b20		bit (1) unaligned,
  1   253 			5 b21		bit (1) unaligned,
  1   254 			5 b22		bit (1) unaligned,
  1   255 			5 b23		bit (1) unaligned,
  1   256 			5 b24		bit (1) unaligned,
  1   257 			5 b25		bit (1) unaligned,
  1   258 			5 b26		bit (1) unaligned,
  1   259 			5 b27		bit (1) unaligned,
  1   260 			5 b28		bit (1) unaligned,
  1   261 			5 b29		bit (1) unaligned,
  1   262 			5 b30		bit (1) unaligned,
  1   263 			5 b31		bit (1) unaligned,
  1   264 			5 b32		bit (1) unaligned,
  1   265 			5 b33		bit (1) unaligned,
  1   266 			5 b34		bit (1) unaligned,
  1   267 			5 b35		bit (1) unaligned,
  1   268 /* 150   */	4 llsnb		bit (36),
  1   269 /* 151   */	4 lesq		bit (36),
  1   270 /* 152-153 */	4 lumc (0:1)	bit (36),
  1   271 /* 154-155 */	4 lfnam (0:1)	bit (36),
  1   272 /* 156   */	4 lopts		bit (36),
  1   273 /* 157   */	4 licec,
  1   274 			5 b0_17		bit (18) unaligned,
  1   275 			5 b18_35		fixed bin (17) unaligned,
  1   276 /* 160   */	4 lflg3,
  1   277 			5 b0		bit (1) unaligned,
  1   278 			5 b1		bit (1) unaligned,
  1   279 			5 b2		bit (1) unaligned,
  1   280 			5 b3		bit (1) unaligned,
  1   281 			5 b4		bit (1) unaligned,
  1   282 			5 b5		bit (1) unaligned,
  1   283 			5 b6		bit (1) unaligned,
  1   284 			5 b7		bit (1) unaligned,
  1   285 			5 b8		bit (1) unaligned,
  1   286 			5 b9		bit (1) unaligned,
  1   287 			5 b10		bit (1) unaligned,
  1   288 			5 b11		bit (1) unaligned,
  1   289 			5 b12		bit (1) unaligned,
  1   290 			5 b13		bit (1) unaligned,
  1   291 			5 b14		bit (1) unaligned,
  1   292 			5 b15		bit (1) unaligned,
  1   293 			5 b16		bit (1) unaligned,
  1   294 			5 b17		bit (1) unaligned,
  1   295 			5 b18		bit (1) unaligned,
  1   296 			5 b19		bit (1) unaligned,
  1   297 			5 b20		bit (1) unaligned,
  1   298 			5 b21		bit (1) unaligned,
  1   299 			5 b22		bit (1) unaligned,
  1   300 			5 b23		bit (1) unaligned,
  1   301 			5 b24		bit (1) unaligned,
  1   302 			5 b25		bit (1) unaligned,
  1   303 			5 b26		bit (1) unaligned,
  1   304 			5 b27		bit (1) unaligned,
  1   305 			5 b28		bit (1) unaligned,
  1   306 			5 b29		bit (1) unaligned,
  1   307 			5 b30		bit (1) unaligned,
  1   308 			5 b31		bit (1) unaligned,
  1   309 			5 b32		bit (1) unaligned,
  1   310 			5 b33		bit (1) unaligned,
  1   311 			5 b34		bit (1) unaligned,
  1   312 			5 b35		bit (1) unaligned,
  1   313 /* 161-163 */	4 lpage (0:2)	bit (36),
  1   314 /* 164   */	4 lsit1		bit (36),
  1   315 /* 165   */	4 lsit2		bit (36),
  1   316 /* 166   */	4 lsit3		bit (36),
  1   317 /* 167   */	4 lsit4		bit (36),
  1   318 /* The following entries are maintained by gtss and are not found in TSS UST */
  1   319 /* 170   */	4 lxxx, /* program stack index, offset from gtss_ust */
  1   320 			5 b0_17		fixed bin (17) unaligned,
  1   321 			5 b18_35		bit (18) unaligned, /* not used */
  1   322 /* 171-175 */	4 lprgs (5),
  1   323 			5 b0_17		fixed bin (17) unaligned,
  1   324 			5 b18_35		fixed bin (17) unaligned,
  1   325 /* 176   */	4 fill	bit (36),
  1   326 /* 177   */	4 remote_io_buffer aligned,
  1   327 			5 buffer_control_word,
  1   328 				6 current_line_pointer  bit (18)unal,
  1   329 				6 buffer_threshold_address  bit (18)unal,
  1   330 			5 number_words_transmitted	fixed bin (17)unal,
  1   331 			5 FILL1			fixed bin (17)unal,
  1   332 			5 count_of_characters_transmitted fixed bin (17)unal,
  1   333 			5 FILL2			fixed bin (17)unal,
  1   334 			5 characters_transmitted (244) char (1) unal,
  1   335 /* 277   */	4 word_after_ust		bit (36) aligned;
  1   336 
  1   337 /*   END INCLUDE FILE gtss_ust_ext_.incl.pl1 */
       66 
       67 
  2     1 /* BEGIN INCLUDE FILE cds_args.incl.pl1 */
  2     2 
  2     3 dcl 1 cds_args based aligned,
  2     4     2 sections (2),
  2     5       3 p ptr,					/* pointer to data for text/static section */
  2     6       3 len fixed bin (18),				/* size of text/static section */
  2     7       3 struct_name char (32),			/* name of declared structure for this section */
  2     8     2 seg_name char (32),				/* name to create segment by */
  2     9     2 num_exclude_names fixed bin,			/* number of names in exclude array */
  2    10     2 exclude_array_ptr ptr,				/* pointer to array of exclude names */
  2    11     2 switches,					/* control switches */
  2    12       3 defs_in_link bit (1) unal,			/* says put defs in linkage */
  2    13       3 separate_static bit (1) unal,			/* says separate static section is wanted */
  2    14       3 have_text bit (1) unal,			/* ON if text section given */
  2    15       3 have_static bit (1) unal,			/* ON if static section given */
  2    16       3 pad bit (32) unal;
  2    17 
  2    18 dcl  exclude_names (1) char (32) based;			/* pointed to be cds_args.exclude_array_ptr */
  2    19 
  2    20 /* END INCLUDE FILE cds_args.incl.pl1 */
       68 
       69 end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    04/18/00  1121.9  !BBBJmCwlXZkNxC.pl1               >udd>sm>ds>w>ml>gtss_ust_ext_.cds
66           1    09/09/83  1814.3  gtss_ust_ext_.incl.pl1            >ldd>incl>gtss_ust_ext_.incl.pl1
68           2    04/01/76  2309.5  cds_args.incl.pl1                 >ldd>incl>cds_args.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 51 ref 15 20 28
cds_args                               based           structure                level 1 dcl 2-3
cds_args_ptr                    000100 automatic       pointer                  initial dcl 52 set ref 15* 23 24 25 28 29 30 32 33
                                                                                  34 35 36 37 38 39 41* 52*
code                            000102 automatic       fixed bin(35,0)          dcl 53 set ref 41* 42 42*
com_err_                        000012 constant        entry                    external dcl 54 ref 42 45
create_data_segment_            000014 constant        entry                    external dcl 55 ref 41
defs_in_link             44            based           bit(1)                   level 3 packed packed unaligned dcl 2-3 set ref 35*
exclude_array_ptr        42            based           pointer                  level 2 dcl 2-3 set ref 34*
gtss_ust_ext_                   000151 automatic       structure                level 1 dcl 63 set ref 20 28 29 45 45
gtss_ust_ext_$ust               000016 external static structure                level 1 dcl 1-16
have_static              44(03)        based           bit(1)                   level 3 packed packed unaligned dcl 2-3 set ref 38*
have_text                44(02)        based           bit(1)                   level 3 packed packed unaligned dcl 2-3 set ref 37*
len                       2            based           fixed bin(18,0)          array level 3 dcl 2-3 set ref 24* 29*
null                                                   builtin function         dcl 56 ref 20 23 34 52
num_exclude_names        40            based           fixed bin(17,0)          level 2 dcl 2-3 set ref 33*
p                                      based           pointer                  array level 3 dcl 2-3 set ref 23* 28*
pad                      44(04)        based           bit(32)                  level 3 packed packed unaligned dcl 2-3 set ref 39*
sections                               based           structure                array level 2 dcl 2-3
seg_name                 30            based           char(32)                 level 2 dcl 2-3 set ref 32*
separate_static          44(01)        based           bit(1)                   level 3 packed packed unaligned dcl 2-3 set ref 36*
size                                                   builtin function         dcl 57 ref 29 45 45
space_for_cds_args              000104 automatic       structure                level 1 dcl 59 set ref 15 16*
struct_name               3            based           char(32)                 array level 3 dcl 2-3 set ref 25* 30*
switches                 44            based           structure                level 2 dcl 2-3
unspec                                                 builtin function         dcl 58 set ref 16*

NAME DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
exclude_names                          based           char(32)                 array packed unaligned dcl 2-18

NAME DECLARED BY EXPLICIT CONTEXT.
gtss_ust_ext_                   000037 constant        entry                    external dcl 6

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       276         316     217         306
Length     12426     217        20       12074      57           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gtss_ust_ext_                       346 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gtss_ust_ext_            000100 cds_args_ptr                gtss_ust_ext_
                         000102 code                        gtss_ust_ext_
                         000104 space_for_cds_args          gtss_ust_ext_
                         000151 gtss_ust_ext_               gtss_ust_ext_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      create_data_segment_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
gtss_ust_ext_$ust




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      6 000036        52 000044        15 000046        16 000050        20 000053        23 000061        24 000063
     25 000064        28 000067        29 000071        30 000073        32 000076        33 000101        34 000102
     35 000104        36 000106        37 000110        38 000112        39 000114        41 000116        42 000126
     45 000154        48 000213


Object Segment >udd>sm>ds>w>ml>gtss_ust_ext_
Created on 04/18/00  1122.0 mdt Tue
by Schroth.SysMaint.m
using create_data_segment_, Version II of Friday, May 18, 1990

        Object    Text    Defs    Link    Symb  Static
Start        0       0       0      26     336      36
Length     524       0      26     310     152     300


3 Definitions:


segname:    gtss_ust_ext_

symb|0          symbol_table
link|10         ust


No Links.





                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
