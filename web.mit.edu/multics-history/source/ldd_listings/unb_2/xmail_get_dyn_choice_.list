	COMPILATION LISTING OF SEGMENT xmail_get_dyn_choice_
	Compiled by: Multics PL/I Compiler, Release 30, of February 16, 1988
	Compiled at: Honeywell Bull, Phoenix AZ, SysM
	Compiled on: 09/02/88  0748.4 mst Fri
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 xmail_get_dyn_choice_: proc (P_dyn_menup, P_index, P_code);
       12 
       13 /* Author unknown
       14*
       15*   83-07-07  DJ Schimke: Removed unreferenced dcl of FIRST_MENU, HELP, 
       16*   PREV_MENU, QUIT.
       17**/
       18 
       19 /* Parameter */
       20 
       21 	dcl     P_code		 fixed bin (35);
       22 	dcl     P_dyn_menup		 ptr;
       23 	dcl     P_index		 fixed bin;
       24 	dcl     P_trailer		 bit (1) aligned;
       25 
       26 /* Automatic */
       27 
       28 	dcl     choice		 fixed bin;
       29 	dcl     fkey		 bit (1) aligned;
       30 	dcl     menu_index		 fixed bin;
       31 	dcl     n_trailers		 fixed bin;
       32 	dcl     option_index	 fixed bin;
       33 	dcl     total_options	 fixed bin;
       34 	dcl     trailer_included	 bit (1) aligned;
       35 
       36 	dcl     1 auto_dyn_menu_req	 like dyn_menu_req;
       37 
       38 /* Entries */
       39 
       40 	dcl     window_$bell	 entry (ptr, fixed bin (35));
       41 	dcl     window_$clear_window	 entry (ptr, fixed bin (35));
       42 	dcl     xmail_dyn_menu_$display entry (ptr, fixed bin, fixed bin (35));
       43 	dcl     xmail_dyn_menu_$get_choice entry (ptr, fixed bin, fixed bin, bit (1) aligned, fixed bin (35));
       44 	dcl     xmail_dyn_menu_$info	 entry (ptr, ptr, fixed bin (35));
       45 	dcl     xmail_redisplay_$all	 entry options (variable);
       46 
       47 /* Constant */
       48 
       49 	dcl     REDISPLAY		 init (5) fixed bin int static options (constant);
       50 	dcl     SCROLL_UP		 init (7) fixed bin int static options (constant);
       51 	dcl     SCROLL_DOWN		 init (6) fixed bin int static options (constant);
       52 
       53 /* Builtin */
       54 
       55 	dcl     (addr, divide, mod)	 builtin;
       56 
       57 	trailer_included = "0"b;
       58 	call MAIN;
       59 	return;
       60 
       61 trailer: entry (P_dyn_menup, P_index, P_trailer, P_code);
       62 
       63 	trailer_included = "1"b;
       64 	call MAIN;
       65 	return;
       66 
       67 MAIN: proc ();
       68 	call xmail_dyn_menu_$info (P_dyn_menup, addr (auto_dyn_menu_req), P_code);
       69 	if P_code ^= 0 then go to EXIT;
       70 
       71 	menu_index = 0;
       72 
       73 	do while ("1"b);
       74 	     call xmail_dyn_menu_$display (P_dyn_menup, menu_index, P_code);
       75 	     if P_code ^= 0 then go to EXIT;
       76 	     call xmail_dyn_menu_$get_choice (P_dyn_menup, menu_index, choice, fkey, P_code);
       77 	     if P_code ^= 0 then go to EXIT;
       78 	     if ^fkey
       79 	     then do;
       80 		option_index = menu_index * auto_dyn_menu_req.options_per_menu + choice;
       81 		if ^trailer_included
       82 		then do;
       83 		     P_index = option_index;
       84 		     go to EXIT;
       85 		end;
       86 		total_options = auto_dyn_menu_req.options_per_menu * (auto_dyn_menu_req.n_menus - 1) + auto_dyn_menu_req.options_last_menu;
       87 		if option_index = total_options
       88 		then do;				/* trailer opt selected */
       89 		     P_index = 0;
       90 		     P_trailer = "1"b;
       91 		     go to EXIT;
       92 		end;
       93 		if mod (option_index, auto_dyn_menu_req.options_per_menu) = 0
       94 		then do;				/* trailer opt selected */
       95 		     P_index = 0;
       96 		     P_trailer = "1"b;
       97 		     go to EXIT;
       98 		end;
       99 						/* regular opt selected */
      100 		n_trailers = divide (option_index, auto_dyn_menu_req.options_per_menu, 17, 0);
      101 		P_index = option_index - n_trailers;
      102 		P_trailer = "0"b;
      103 		go to EXIT;
      104 	     end;
      105 	     else if choice = REDISPLAY
      106 	     then call xmail_redisplay_$all ();
      107 	     else if choice = SCROLL_UP
      108 	     then menu_index = mod (menu_index + 1, auto_dyn_menu_req.n_menus);
      109 	     else if choice = SCROLL_DOWN
      110 	     then menu_index = mod (menu_index - 1, auto_dyn_menu_req.n_menus);
      111 	     else call window_$bell (xmail_windows.bottom.iocb, (0)); /* ignore code */
      112 	end;					/* do while ...*/
      113 
      114 EXIT:
      115 
      116 	call window_$clear_window (xmail_windows.bottom.iocb, (0)); /* ignore code */
      117      end MAIN;
      118 
      119 
  1     1 /* BEGIN INCLUDE FILE: xmail_data.incl.pl1 */
  1     2 
  1     3 
  1     4 /****^  HISTORY COMMENTS:
  1     5*  1) change(85-12-20,Blair), approve(86-03-06,MCR7358),
  1     6*     audit(86-04-21,RBarstad), install(86-05-28,MR12.0-1062):
  1     7*     Modified 03/15/85 by Joanne Backs adding confirm_print flag.
  1     8*  2) change(85-12-20,LJAdams), approve(86-03-06,MCR7358),
  1     9*     audit(86-04-21,RBarstad), install(86-05-28,MR12.0-1062):
  1    10*     Adding switch to indicate request for menu display came from general help.
  1    11*     This is so general help menu will be displayed in top screen.
  1    12*  3) change(86-01-10,Blair), approve(86-03-06,MCR7358),
  1    13*     audit(86-04-21,RBarstad), install(86-05-28,MR12.0-1062):
  1    14*     Add switch to indicate whether or not it is permissible to process mail
  1    15*     in other users' mailboxes (foreign_mailbox).
  1    16*  4) change(86-01-13,Blair), approve(86-03-06,MCR7358),
  1    17*     audit(86-04-21,RBarstad), install(86-05-28,MR12.0-1062):
  1    18*     Add bit to indicate whether or not this is a true cleanup condition.
  1    19*  5) change(86-02-06,Blair), approve(86-03-06,MCR7358),
  1    20*     audit(86-04-21,RBarstad), install(86-05-28,MR12.0-1062):
  1    21*     Rearrange to group all the bit flags together in one word with a pad.
  1    22*  6) change(86-03-05,Blair), approve(86-03-05,MCR7358),
  1    23*     audit(86-04-21,RBarstad), install(86-05-28,MR12.0-1062):
  1    24*     Change value_seg ptr to value_seg_pathname to avoid the situation where
  1    25*     you keep around a pointer to a structure which no longer exists.
  1    26*  7) change(87-01-16,Blair), approve(87-02-05,MCR7618),
  1    27*     audit(87-04-15,RBarstad), install(87-04-26,MR12.1-1025):
  1    28*     Add a field to indicate whether or not we should process interactive msgs.
  1    29*     Increment version to 4.1 so default value will get set.
  1    30*  8) change(87-02-13,Blair), approve(87-02-13,MCR7618),
  1    31*     audit(87-04-15,RBarstad), install(87-04-26,MR12.1-1025):
  1    32*     Add a field to indicate whether or not we're processing a reply so that we
  1    33*     will be able to rebuild the screens properly after a disconnect occurs.
  1    34*     Error_list #114.
  1    35*  9) change(88-07-26,Blair), approve(88-07-26,MCR7959),
  1    36*     audit(88-08-25,RBarstad), install(88-09-02,MR12.2-1098):
  1    37*     Add a bit to indicate whether or not the error segment had to be created
  1    38*     in the pdir (because we didn't have sma access to the mlsys_dir).
  1    39*                                                   END HISTORY COMMENTS */
  1    40 
  1    41 
  1    42 /* Written 5/13/81 by Paul H. Kyzivat */
  1    43 /* Modified 12/16/81 by S. Krupp to delete unused parts of structure
  1    44*   and to add n_fkeys_used */
  1    45 /* Modified 12/14/82 by Dave Schimke to make the xmail version a 10 character
  1    46*   varying string.  */
  1    47 /* Modified 09/12/83 by Dave Schimke adding interactive_msgs flag */
  1    48 /* Modified 09/14/83 by Dave Schimke adding moved_user_io */
  1    49 /* Modified 09/06/84 by Joanne Backs adding lists_as_menus flag */
  1    50 /* Modified 09/21/84 by Joanne Backs adding remove_menus flag */
  1    51 
  1    52      dcl xmail_data_ptr external static ptr init (null);
  1    53 
  1    54      dcl 1 xmail_data aligned based (xmail_data_ptr),
  1    55            2 mail_dir char (168) varying,
  1    56 	 2 first_label label,
  1    57 	 2 quit_label label,
  1    58 	 2 value_seg_pathname char (168) varying,
  1    59            2 moved_user_io ptr,
  1    60 	 2 normal_usage char (80) unal,
  1    61 	 2 function_key_info,
  1    62 	   3 function_key_data_ptr ptr,
  1    63 	   3 n_fkeys_used fixed bin,
  1    64            2 actee,
  1    65 	   3 person char(32) varying,
  1    66 	   3 project char(32) varying,
  1    67 	 2 flags aligned,
  1    68 	     3 mail_in_incoming   bit (1) unal,
  1    69                3 lists_as_menus     bit (1) unal, /* personalization */
  1    70 	     3 remove_menus       bit (1) unal, /* personalization */
  1    71 	     3 confirm_print      bit (1) unal, /* personalization */
  1    72 	     3 multics_mode bit (1) unal, /* personalization */
  1    73 	     3 interactive_msgs bit (1) unal, /* personalization */
  1    74 	     3 foreign_mailbox    bit (1) unal, /* read others' mailboxes */
  1    75                3 general_help       bit (1) unal, /* indicated requesting gen help*/
  1    76 	     3 cleanup_signalled  bit (1) unal,  /* on when true cleanup condition */
  1    77                3 msgs_as_mail       bit (1)  unal, /* on for include_msgs */
  1    78                3 reply_request      bit (1)  unal, /* on if we're doing a reply */
  1    79                3 error_seg_in_pdir  bit (1)  unal, /* on if the error_seg is in the pdir */
  1    80                3 pad                bit (24) unal;
  1    81 	
  1    82 	 
  1    83 
  1    84 dcl xmail_version char(10) var static options(constant) init("4.1");
  1    85 
  1    86 /* END INCLUDE FILE: xmail_data.incl.pl1 */
      120 
      121 
  2     1 /* Begin include file: xmail_windows.incl.pl1 */
  2     2 /* Created 6/24/81 by Paul Kyzivat */
  2     3 /* Mofified 6/20/84 by DJ Schimke to add the mm_status window */
  2     4 
  2     5      dcl 1 xmail_windows aligned external static,
  2     6            2 initial_position fixed bin,
  2     7            2 min_lines_needed fixed bin,
  2     8            2 (status, mm_status, menu, bottom) aligned like xmail_window_info_format;
  2     9 
  2    10      dcl 1 xmail_window_info_format aligned based,
  2    11            2 iocb ptr,
  2    12 	 2 position aligned like window_position_info;
  2    13 
  3     1 /* BEGIN INCLUDE FILE ... window_control_info.incl.pl1 JRD  */
  3     2 /* format: style3 */
  3     3 
  3     4 /* Modified 26 January 1982 by William York to add the set_more_handler
  3     5*   and reset_more_handler control orders. */
  3     6 /* Modified October 1982 by WMY to add set and get_token_characters,
  3     7*   set and get_more_prompt. */
  3     8 /* Modified February 1983 by WMY to add the line_editor_key_binding_info
  3     9*   structure. */
  3    10 /* Modified 30 September 1983 by Jon A. Rochlis to add the origin.column for
  3    11*   partial screen width windows. */
  3    12 /* Modified 9 October 1983 by JR to add version 1 window_edit_line_info. 
  3    13*   This should be removed when window_info.incl.pl1 is created. */
  3    14 /* Modified 29 February 1984 by Barmar to add version 1 
  3    15*   get_editor_key_bindings_info. */
  3    16 /* Modified 1 March 1984 by Barmar to add version 1 
  3    17*   set_editor_key_bindings_info. */
  3    18 /* Modified 2 March 1984 by Barmar to upgrade to version 3
  3    19*   line_editor_key_bindings_info, which includes the name, description, and
  3    20*   info path */
  3    21 
  3    22 /* structure for the set_window_info and get_window_info
  3    23*   control orders. */
  3    24 
  3    25 dcl	1 window_position_info
  3    26 			based (window_position_info_ptr),
  3    27 	  2 version	fixed bin,
  3    28 	  2 origin,
  3    29 	    3 column	fixed bin,
  3    30 	    3 line	fixed bin,
  3    31 	  2 extent,
  3    32 	    3 width	fixed bin,
  3    33 	    3 height	fixed bin;
  3    34 
  3    35 dcl	(window_position_info_version, window_position_info_version_1)
  3    36 			fixed bin internal static init (1) options (constant);
  3    37 dcl	window_position_info_ptr
  3    38 			pointer;
  3    39 
  3    40 /* structure for the set_window_status and get_window_status
  3    41*   control orders */
  3    42 
  3    43 declare	window_status_info_ptr
  3    44 			pointer;
  3    45 declare	1 window_status_info
  3    46 			aligned based (window_status_info_ptr),
  3    47 	  2 version	fixed bin,
  3    48 	  2 status_string	bit (36) aligned;		/* string (window_status) */
  3    49 /* see window_status.incl.pl1 for the contents of this string */
  3    50 
  3    51 
  3    52 declare	(window_status_version, window_status_version_1)
  3    53 			fixed bin internal static init (1) options (constant);
  3    54 
  3    55 /* info structure for the set_more_responses and get_more_responses control 
  3    56*   orders */
  3    57 
  3    58 
  3    59 dcl	1 more_responses_info
  3    60 			aligned based (more_responses_info_ptr),
  3    61 	  2 version	fixed bin,
  3    62 	  2 n_yeses	fixed bin, /* how many valid characters in the strings below */
  3    63 	  2 n_noes	fixed bin,
  3    64 	  2 yeses		char (32) unaligned,
  3    65 	  2 noes		char (32) unaligned;
  3    66 
  3    67 dcl	(more_responses_info_version_1, more_responses_version)
  3    68 			fixed bin internal static init (1) options (constant);
  3    69 dcl	more_responses_info_ptr
  3    70 			pointer;
  3    71 
  3    72 /* structure for the set_break_table and get_break_table
  3    73*   control orders */
  3    74 
  3    75 declare	break_table_ptr	pointer;
  3    76 declare	1 break_table_info	aligned based (break_table_ptr),
  3    77 	  2 version	fixed bin,
  3    78 	  2 breaks	(0:127) bit (1) unaligned;
  3    79 
  3    80 declare	(break_table_info_version, break_table_info_version_1)
  3    81 			fixed bin init (1) internal static options (constant);
  3    82 
  3    83 declare	1 more_handler_info aligned based (more_handler_info_ptr),
  3    84 	  2 version	fixed bin,
  3    85 	  2 flags		unaligned,
  3    86 	    3 old_handler_valid
  3    87 			bit(1),
  3    88 	    3 pad		bit(35),
  3    89 	  2 more_handler	entry (pointer, bit(1) aligned),
  3    90 	  2 old_more_handler entry (pointer, bit(1) aligned);
  3    91 
  3    92 declare	more_handler_info_ptr pointer;
  3    93 
  3    94 declare	(more_handler_info_version, more_handler_info_version_3)
  3    95 			fixed bin internal static options (constant) init (3);
  3    96 			
  3    97 declare   1 token_characters_info aligned based (token_characters_info_ptr),
  3    98 	  2 version	char(8),
  3    99 	  2 token_character_count
  3   100 			fixed bin,
  3   101 	  2 token_characters
  3   102 			char (128) unaligned;
  3   103 
  3   104 declare   token_characters_info_ptr pointer;
  3   105 
  3   106 declare   token_characters_info_version_1 char(8) internal static options (constant) init ("wtci0001");
  3   107 
  3   108 declare   1 more_prompt_info	aligned based (more_prompt_info_ptr),
  3   109 	  2 version	char(8),
  3   110 	  2 more_prompt	char(80);
  3   111 
  3   112 declare   more_prompt_info_ptr pointer;
  3   113 
  3   114 declare   more_prompt_info_version_1 char(8) static options (constant) init ("wsmp0001");
  3   115 
  3   116 /* Line editor stuff ... */
  3   117 
  3   118 dcl  line_editor_key_binding_info_ptr
  3   119 			pointer;
  3   120 
  3   121 dcl  line_editor_binding_count
  3   122 			fixed bin;
  3   123 dcl  line_editor_longest_sequence
  3   124 			fixed bin;
  3   125 /* For each binding, action defines what to do for that sequence. Constants
  3   126*   are defined in window_editor_values.incl.pl1. Only if action is set to
  3   127*   EXTERNAL_ROUTINE does the editor_routine entry variable get examined. */
  3   128 
  3   129 dcl  1 line_editor_key_binding_info
  3   130 			aligned based (line_editor_key_binding_info_ptr),
  3   131        2 version		char(8),
  3   132        2 binding_count	fixed bin,
  3   133        2 longest_sequence	fixed bin,
  3   134        2 bindings		(line_editor_binding_count refer
  3   135 			(line_editor_key_binding_info.binding_count)),
  3   136          3 sequence		char(line_editor_longest_sequence refer
  3   137 			(line_editor_key_binding_info.longest_sequence)) varying,
  3   138          3 action		fixed bin,
  3   139          3 numarg_action      fixed binary,
  3   140          3 editor_routine	entry (pointer, fixed bin(35)),
  3   141          3 name		char (64) varying unaligned,
  3   142          3 description	char (256) varying unaligned,
  3   143          3 info_path	unaligned,
  3   144 	 4 info_dir	char (168),
  3   145 	 4 info_entry	char (32);
  3   146 	
  3   147 
  3   148 dcl  line_editor_key_binding_info_version_3
  3   149 			char(8) static options (constant) init ("lekbi003");
  3   150 
  3   151 dcl 1 get_editor_key_bindings_info	aligned based (get_editor_key_bindings_info_ptr),
  3   152       2 version			char (8),
  3   153       2 flags,
  3   154         3 entire_state		bit (1) unaligned,
  3   155         3 mbz			bit (35) unaligned,
  3   156       2 key_binding_info_ptr		ptr,
  3   157       2 entire_state_ptr		ptr;
  3   158 
  3   159 dcl get_editor_key_bindings_info_ptr	ptr;
  3   160 dcl get_editor_key_bindings_info_version_1 char (8) int static options (constant) init ("gekbi_01");
  3   161 
  3   162 dcl 1 set_editor_key_bindings_info	aligned
  3   163 				based (set_editor_key_bindings_info_ptr),
  3   164       2 version			char (8),
  3   165       2 flags,
  3   166         3 replace			bit (1) unaligned,
  3   167         3 update			bit (1) unaligned,
  3   168         3 mbz			bit (34) unaligned,
  3   169       2 key_binding_info_ptr		ptr;
  3   170 
  3   171 dcl set_editor_key_bindings_info_ptr	ptr;
  3   172 dcl set_editor_key_bindings_info_version_1 char (8) int static options (constant) init ("sekbi_01");
  3   173 
  3   174 /* This should be moved to window_info.incl.pl1 when that include file is
  3   175*   created.  JR 2/1/84 */
  3   176 
  3   177 dcl	1 window_edit_line_info
  3   178 			based (window_edit_line_info_ptr),
  3   179 	  2 version	char (8),
  3   180 	  2 line_ptr	ptr,
  3   181 	  2 line_length	fixed bin (21);		/* later we will hack initial cursor position, key bindings, etc. */
  3   182 
  3   183 dcl	window_edit_line_info_version_1
  3   184 			char (8) static options (constant) init ("wedl0001");
  3   185 
  3   186 dcl	window_edit_line_info_ptr
  3   187 			ptr;
  3   188 
  3   189 /* END INCLUDE FILE window_control_info.incl.pl1 */
  2    14 
  2    15 
  2    16 /* End include file: xmail_windows.incl.pl1 */
      122 
      123 
  4     1 dcl 1 dyn_menu_req aligned based(dyn_menu_reqp),
  4     2       2 options_per_menu fixed bin,
  4     3       2 options_last_menu fixed bin,
  4     4       2 n_menus fixed bin;
  4     5 
  4     6 dcl dyn_menu_reqp ptr;
      125 
      126      end xmail_get_dyn_choice_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    09/02/88  0748.4  xmail_get_dyn_choice_.pl1         >spec>install>MR12.2-1098>xmail_get_dyn_choice_.pl1
120          1    09/02/88  0743.4  xmail_data.incl.pl1               >spec>install>MR12.2-1098>xmail_data.incl.pl1
122          2    12/02/84  1132.9  xmail_windows.incl.pl1            >ldd>include>xmail_windows.incl.pl1
2-14         3    09/12/84  0916.7  window_control_info.incl.pl1      >ldd>include>window_control_info.incl.pl1
124          4    06/08/82  1329.4  xmail_dyn_menu_dcls.incl.pl1      >ldd>include>xmail_dyn_menu_dcls.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
P_code                                 parameter       fixed bin(35,0)          dcl 21 set ref 11 61 68* 69 74* 75 76* 77
P_dyn_menup                            parameter       pointer                  dcl 22 set ref 11 61 68* 74* 76*
P_index                                parameter       fixed bin(17,0)          dcl 23 set ref 11 61 83* 89* 95* 101*
P_trailer                              parameter       bit(1)                   dcl 24 set ref 61 90* 96* 102*
REDISPLAY                              constant        fixed bin(17,0)          initial dcl 49 ref 105
SCROLL_DOWN                            constant        fixed bin(17,0)          initial dcl 51 ref 109
SCROLL_UP                              constant        fixed bin(17,0)          initial dcl 50 ref 107
addr                                                   builtin function         dcl 55 ref 68 68
auto_dyn_menu_req               000107 automatic       structure                level 1 unaligned dcl 36 set ref 68 68
bottom                   32     000024 external static structure                level 2 dcl 2-5
choice                          000100 automatic       fixed bin(17,0)          dcl 28 set ref 76* 80 105 107 109
divide                                                 builtin function         dcl 55 ref 100
dyn_menu_req                           based           structure                level 1 dcl 4-1
fkey                            000101 automatic       bit(1)                   dcl 29 set ref 76* 78
iocb                     32     000024 external static pointer                  level 3 dcl 2-5 set ref 111* 114*
menu_index                      000102 automatic       fixed bin(17,0)          dcl 30 set ref 71* 74* 76* 80 107* 107 109* 109
mod                                                    builtin function         dcl 55 ref 93 107 109
n_menus                   2     000107 automatic       fixed bin(17,0)          level 2 dcl 36 set ref 86 107 109
n_trailers                      000103 automatic       fixed bin(17,0)          dcl 31 set ref 100* 101
option_index                    000104 automatic       fixed bin(17,0)          dcl 32 set ref 80* 83 87 93 100 101
options_last_menu         1     000107 automatic       fixed bin(17,0)          level 2 dcl 36 set ref 86
options_per_menu                000107 automatic       fixed bin(17,0)          level 2 dcl 36 set ref 80 86 93 100
total_options                   000105 automatic       fixed bin(17,0)          dcl 33 set ref 86* 87
trailer_included                000106 automatic       bit(1)                   dcl 34 set ref 57* 63* 81
window_$bell                    000010 constant        entry                    external dcl 40 ref 111
window_$clear_window            000012 constant        entry                    external dcl 41 ref 114
window_position_info                   based           structure                level 1 unaligned dcl 3-25
xmail_dyn_menu_$display         000014 constant        entry                    external dcl 42 ref 74
xmail_dyn_menu_$get_choice      000016 constant        entry                    external dcl 43 ref 76
xmail_dyn_menu_$info            000020 constant        entry                    external dcl 44 ref 68
xmail_redisplay_$all            000022 constant        entry                    external dcl 45 ref 105
xmail_window_info_format               based           structure                level 1 dcl 2-10
xmail_windows                   000024 external static structure                level 1 dcl 2-5

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
break_table_info                       based           structure                level 1 dcl 3-76
break_table_info_version               internal static fixed bin(17,0)          initial dcl 3-80
break_table_info_version_1             internal static fixed bin(17,0)          initial dcl 3-80
break_table_ptr                        automatic       pointer                  dcl 3-75
dyn_menu_reqp                          automatic       pointer                  dcl 4-6
get_editor_key_bindings_info           based           structure                level 1 dcl 3-151
get_editor_key_bindings_info_ptr       automatic       pointer                  dcl 3-159
get_editor_key_bindings_info_version_1 internal static char(8)                  initial packed unaligned dcl 3-160
line_editor_binding_count              automatic       fixed bin(17,0)          dcl 3-121
line_editor_key_binding_info           based           structure                level 1 dcl 3-129
line_editor_key_binding_info_ptr       automatic       pointer                  dcl 3-118
line_editor_key_binding_info_version_3 internal static char(8)                  initial packed unaligned dcl 3-148
line_editor_longest_sequence           automatic       fixed bin(17,0)          dcl 3-123
more_handler_info                      based           structure                level 1 dcl 3-83
more_handler_info_ptr                  automatic       pointer                  dcl 3-92
more_handler_info_version              internal static fixed bin(17,0)          initial dcl 3-94
more_handler_info_version_3            internal static fixed bin(17,0)          initial dcl 3-94
more_prompt_info                       based           structure                level 1 dcl 3-108
more_prompt_info_ptr                   automatic       pointer                  dcl 3-112
more_prompt_info_version_1             internal static char(8)                  initial packed unaligned dcl 3-114
more_responses_info                    based           structure                level 1 dcl 3-59
more_responses_info_ptr                automatic       pointer                  dcl 3-69
more_responses_info_version_1          internal static fixed bin(17,0)          initial dcl 3-67
more_responses_version                 internal static fixed bin(17,0)          initial dcl 3-67
set_editor_key_bindings_info           based           structure                level 1 dcl 3-162
set_editor_key_bindings_info_ptr       automatic       pointer                  dcl 3-171
set_editor_key_bindings_info_version_1 internal static char(8)                  initial packed unaligned dcl 3-172
token_characters_info                  based           structure                level 1 dcl 3-97
token_characters_info_ptr              automatic       pointer                  dcl 3-104
token_characters_info_version_1        internal static char(8)                  initial packed unaligned dcl 3-106
window_edit_line_info                  based           structure                level 1 unaligned dcl 3-177
window_edit_line_info_ptr              automatic       pointer                  dcl 3-186
window_edit_line_info_version_1        internal static char(8)                  initial packed unaligned dcl 3-183
window_position_info_ptr               automatic       pointer                  dcl 3-37
window_position_info_version           internal static fixed bin(17,0)          initial dcl 3-35
window_position_info_version_1         internal static fixed bin(17,0)          initial dcl 3-35
window_status_info                     based           structure                level 1 dcl 3-45
window_status_info_ptr                 automatic       pointer                  dcl 3-43
window_status_version                  internal static fixed bin(17,0)          initial dcl 3-52
window_status_version_1                internal static fixed bin(17,0)          initial dcl 3-52
xmail_data                             based           structure                level 1 dcl 1-54
xmail_data_ptr                         external static pointer                  initial dcl 1-52
xmail_version                          internal static varying char(10)         initial dcl 1-84

NAMES DECLARED BY EXPLICIT CONTEXT.
EXIT                            000250 constant        label                    dcl 114 set ref 69 75 77 84 91 97 103
MAIN                            000044 constant        entry                    internal dcl 67 ref 58 64
trailer                         000030 constant        entry                    external dcl 61
xmail_get_dyn_choice_           000010 constant        entry                    external dcl 11

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       404         432     264         414
Length       712     264        26         243     120           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
xmail_get_dyn_choice_               105 external procedure  is an external procedure.  
MAIN                                    internal procedure  shares stack frame of external procedure xmail_get_dyn_choice_.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
xmail_get_dyn_choice_    000100 choice                      xmail_get_dyn_choice_
                         000101 fkey                        xmail_get_dyn_choice_
                         000102 menu_index                  xmail_get_dyn_choice_
                         000103 n_trailers                  xmail_get_dyn_choice_
                         000104 option_index                xmail_get_dyn_choice_
                         000105 total_options               xmail_get_dyn_choice_
                         000106 trailer_included            xmail_get_dyn_choice_
                         000107 auto_dyn_menu_req           xmail_get_dyn_choice_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return_mac          mdfx1               ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
window_$bell                  window_$clear_window          xmail_dyn_menu_$display       xmail_dyn_menu_$get_choice
xmail_dyn_menu_$info          xmail_redisplay_$all

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
xmail_windows




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000004        57 000020        58 000021        59 000022        61 000023        63 000040        64 000042
     65 000043        67 000044        68 000045        69 000063        71 000065        74 000066        75 000102
     76 000104        77 000124        78 000126        80 000131        81 000137        83 000141        84 000144
     86 000145        87 000152        89 000154        90 000156        91 000160        93 000161        95 000165
     96 000167        97 000171       100 000172       101 000175       102 000201       103 000202       105 000203
    107 000214       109 000224       111 000234       112 000247       114 000250       117 000263


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
