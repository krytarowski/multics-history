LISTING FOR  >spec>on>11/30/82>heath19.ctl
COMPILED BY Multics LISP Compiler, Version hc9.2, June 5, 1981
ON 11/30/82  1529.3 mst Tue
IN BEHALF OF Holmstedt.SysMaint.a



;;; ***********************************************************
;;; *                                                         *
;;; * Copyright, (C) Honeywell Information Systems Inc., 1982 *
;;; *                                                         *
;;; * Copyright (c) 1978 by Massachusetts Institute of        *
;;; * Technology and Honeywell Information Systems, Inc.      *
;;; *                                                         *
;;; ***********************************************************
;;;
;;;
;;;	H19 control package
;;;	BSG 3/21/78 from DD4000ctl
;;;	CAH 7/18/79 from vt52ctl
;;;	WMY 8/27/80 to add insert-mode stuff
;;;       AEB 9/17/80 Added delays to delete/insert lines and delete chars
;;;

(declare (special X Y ospeed screenheight screenlinelen))
(declare (special idel-lines-availablep idel-chars-availablep tty-type))
(declare (special DCTL-prologue-availablep DCTL-epilogue-availablep
	        DCTL-insert-mode-on))

; Initialize terminal and terminal control package.

(defun DCTL-init ()
       (setq idel-lines-availablep t idel-chars-availablep t)
       (setq DCTL-prologue-availablep t DCTL-epilogue-availablep t)
       (setq screenheight 24. screenlinelen 79.)
       (setq tty-type 'h19)
       (Rtyo 33)(Rprinc "H")(Rtyo 33)(Rprinc "J")
       (setq X 0 Y 0)
       (DCTL-prologue))

;;; Prologue
(defun DCTL-prologue ()
       (setq DCTL-insert-mode-on nil)
       (Rtyo 33) (Rprinc "O"))	; turn off insert-mode

;;; Epilogue
(defun DCTL-epilogue ()
       (setq DCTL-insert-mode-on nil)
       (Rtyo 33) (Rprinc "O"))

; Move terminal's cursor to desired position.

(defun DCTL-position-cursor (x y)
       (cond ((and (= x X)(= y Y))
              nil)
             ((and (= x 0)(= y 0))
              (Rtyo 33)(Rprinc "H")
              (setq X 0 Y 0))
             ((and (< (+ (abs (- X x))(abs (- Y y))) 4))
              (cond ((< X x)
                     (do ex X (1+ ex)(= ex x)(Rtyo 33)(Rprinc "C")))
                    ((< x X)
                     (do ex x (1+ ex)(= ex X)(Rtyo 010))))
              (cond ((< Y y)
                     (do wy Y (1+ wy)(= wy y)(Rtyo 33)(Rprinc "B")))
                    ((< y Y)
                     (do wy y (1+ wy)(= wy Y)(Rtyo 33)(Rprinc "A"))))
              (setq X x Y y))
;; Direct Cursor Addressing is best.
             (t (setq X x Y y)
	      (Rtyo 33)(Rprinc "Y")(Rtyo (+ 40 y))(Rtyo (+ 40 x))
                    )))


; Output string.

(defun DCTL-display-char-string (string)
       (cond (DCTL-insert-mode-on
	     (setq DCTL-insert-mode-on nil)
	     (Rtyo 33) (Rprinc "O")))
       (setq X (+ X (stringlength string)))
       (Rprinc string))


; Clear to end of screen.

(defun DCTL-clear-rest-of-screen ()
       (Rtyo 33)(Rprinc "J"))


; Clear to end of line.

(defun DCTL-kill-line ()
       (Rtyo 33)(Rprinc "K"))

; Insert character string at current position.

(defun DCTL-insert-char-string (str)
       (cond ((not DCTL-insert-mode-on)
	    (setq DCTL-insert-mode-on t)
	    (Rtyo 33)(Rprinc "@")))
       (Rprinc str)
       (let ((len (stringlength str)))
	  (DCTL-pad (* len 1050.))
	  (setq X (+ X len))))

;;; Delete characters from current position in line.

(defun DCTL-delete-chars (n)
       (do i 1 (1+ i) (> i n)
	 (Rtyo 33) (Rprinc "N"))
	 (DCTL-pad (* n 2900.)))

;;; Insert n blank lines at current position.

(defun DCTL-insert-lines (n)
       (do i 1 (1+ i) (> i n)
	 (Rtyo 33) (Rprinc "L") (DCTL-pad 24000.))
       (setq X 0))

;;; Delete n lines at current position.

(defun DCTL-delete-lines (n)
       (do i 1 (1+ i) (> i n)
	 (Rtyo 33) (Rprinc "M") (DCTL-pad 24000.))
       (setq X 0))

; Send pad characters

(defun DCTL-pad (n)
       (do i (// (* n ospeed) 1000000.) (1- i) (= i 0)
	 (Rtyo 0)))

			Functions Defined

Name			Offset		Offset		Name


DCTL-clear-rest-of-screen        400		   0		DCTL-init
DCTL-delete-chars                474		   54		DCTL-prologue
DCTL-delete-lines                574		   72		DCTL-epilogue
DCTL-display-char-string         344		   110		DCTL-position-cursor
DCTL-epilogue                    72		   344		DCTL-display-char-string
DCTL-init                        0		   400		DCTL-clear-rest-of-screen
DCTL-insert-char-string          430		   414		DCTL-kill-line
DCTL-insert-lines                532		   430		DCTL-insert-char-string
DCTL-kill-line                   414		   474		DCTL-delete-chars
DCTL-pad                         636		   532		DCTL-insert-lines
DCTL-position-cursor             110		   574		DCTL-delete-lines
DCTL-prologue                    54		   636		DCTL-pad





			Functions Referenced

DCTL-prologue                           Rprinc                                  stringlength
DCTL-pad                                Rtyo                                    


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
