ASSEMBLY LISTING OF SEGMENT >special_ldd>install>MR12.0-1206>tederror_table_.alm             
ASSEMBLED ON:	11/05/86  1106.9 mst Wed
OPTIONS USED:	list 
ASSEMBLED BY:	ALM Version  6.7  October 1986  
ASSEMBLER CREATED:	10/08/86  1557.5 mst Wed

                                     1  	include	et_macros
                                   1-1  " Begin include file ...... et_macros.incl.alm
                                   1-2  "	Written 6/15/77 by Noel I. Morris
                                   1-3  "	Modified '82 so error code entries are in first page of segment.
                                   1-4  
                                   1-5  " This include file contains macros for generating error tables
                                   1-6  " for both system and non-system use.
                                   1-7  
                                   1-8  " ET MACRO
                                   1-9  "
                                  1-10  " This macro is used to initialize the error table for either
                                  1-11  " system or non-system use.  It is invoked at the beginning of
                                  1-12  " the error table as follows:
                                  1-13  "
                                  1-14  "	et	table_name{,system}
                                  1-15  "
                                  1-16  
                                  1-17  macro	et
                              1   1-18  	maclist	on
                              2   1-19  
                              3   1-20  	name	&1
                              4   1-21  
                              5   1-22  &^=&2,system&[
                              6   1-23  
                              7   1-24  	include	stack_header
                              8   1-25  
                              9   1-26  
                             10   1-27  
                             11   1-28  	use	codes
                             12   1-29  .code_start:
                             13   1-30  
                             14   1-31  	use	past_codes
                             15   1-32  .code_end:
                             16   1-33  
                             17   1-34  	join	/link/codes,past_codes
                             18   1-35  
                             19   1-36  	use	messages
                             20   1-37  
                             21   1-38  .trapproc:
                             22   1-39  	epaq	0,ic
                             23   1-40  	eax0	0,au
                             24   1-41  	epbpsb	sp|0
                             25   1-42  	lprplp	sb|stack_header.lot_ptr,*au
                             26   1-43  	eax1	.code_start         
                             27   1-44  .loop:	stx0	lp|0,x1
                             28   1-45  	eax1	1,x1
                             29   1-46  	cmpx1	.code_end,du
                             30   1-47  	tmi	.loop-*,ic
                             31   1-48  	short_return
                             32   1-49  
                             33   1-50  	firstref	<*text>|.trapproc
                             34   1-51  
                             35   1-52  &;	use	codes
                             36   1-53  	use	messages
                             37   1-54  
                             38   1-55  	join	/text/codes,messages
                             39   1-56  
                             40   1-57  &]
                             41   1-58  
                             42   1-59  	bool	.segno,77777
                             43   1-60  
                             44   1-61  	maclist	off
                             45   1-62  
                             46   1-63  	&end
                                  1-64  
                                  1-65  
                                  1-66  
                                  1-67  " EC MACRO
                                  1-68  "
                                  1-69  " This macro is used to define an error code as shown:
                                  1-70  "
                                  1-71  "	ec	name,{short_mess},(long_mess)
                                  1-72  "
                                  1-73  " If more than a single name is to be defined for a given message,
                                  1-74  " a list of names separated by commas and enclosed in parentheses
                                  1-75  " must be given.   short_mess must be 8 or less characters.  If omitted,
                                  1-76  " the short_mess will be set to the name.  long_mess is enclosed
                                  1-77  " in parentheses in order to cause ALM to ignore embedded blanks.  Please
                                  1-78  " note that double quote characters in either short_mess or long_mess
                                  1-79  " must be doubled in order to make the ALM assembly work properly.
                                  1-80  " Note that a macro invocation line terminated by a comma will cause that
                                  1-81  " statement to be continued on the next line.
                                  1-82  
                                  1-83  macro	ec
                              1   1-84  	use	codes
                              2   1-85  
                              3   1-86  	maclist	on,save
                              4   1-87  &(1	segdef  &i
                              5   1-88  &)	maclist	restore
                              6   1-89  &(1&i:
                              7   1-90  &)	maclist	object,save
                              8   1-91  	zero	.segno,&U
                              9   1-92  	maclist	restore
                             10   1-93  	use	messages
                             11   1-94  &^=&l2,0&[	shortname    &2
                             12   1-95  &;	shortname    &1
                             13   1-96  &]
                             14   1-97  &U:
                             15   1-98  	maclist	on,save
                             16   1-99  	acc  "&3"
                             17  1-100  
                             18  1-101  	maclist	restore
                             19  1-102  	&end
                                 1-103  
                                 1-104  macro	shortname
                              1  1-105  	maclist	on,save
                              2  1-106  	aci  "&1",8
                              3  1-107  	maclist	restore
                              4  1-108  	&end
                                 1-109  
                                 1-110  
                                 1-111  
                                 1-112  " A typical error table source program might have the following format:
                                 1-113  "
                                 1-114  "	include	et_macros
                                 1-115  "
                                 1-116  "	et	name_of_error_table
                                 1-117  "
                                 1-118  "	ec	error_code_1,ecode1,(This is error code 1.)
                                 1-119  "
                                 1-120  "	ec	error_code_2,ecode2,(This is error code 2.)
                                 1-121  "
                                 1-122  "	:	     :	      :		:
                                 1-123  "
                                 1-124  "	ec	error_code_n,ecoden,(This is the nth error code.)
                                 1-125  "
                                 1-126  "	end
                                 1-127  "
                                 1-128  
                                 1-129  " End of include file ...... et_macros.incl.alm
                                 1-130  
                                     2  
                                     3  	et	tederror_table_
                                        
    000000                              	name	tederror_table_
                                        
                                        
                                        
                                        	include	stack_header
                                   2-1  "	BEGIN INCLUDE FILE ... stack_header.incl.alm  3/72  Bill Silver
                                   2-2  "
                                   2-3  "	modified 7/76 by M. Weaver for *system links and more system use of areas
                                   2-4  "	modified 3/77 by M. Weaver  to add rnt_ptr
                                   2-5  "	modified 7/77 by S. Webber to add run_unit_depth and assign_linkage_ptr
                                   2-6  "	modified 6/83 by J. Ives to add trace_frames and in_trace.
                                   2-7  
                                   2-8  " HISTORY COMMENTS:
                                   2-9  "  1) change(86-06-24,DGHowe), approve(86-06-24,MCR7396),
                                  2-10  "     audit(86-08-05,Schroth), install(86-11-03,MR12.0-1206):
                                  2-11  "     added the heap_header_ptr definition
                                  2-12  "  2) change(86-08-12,Kissel), approve(86-08-12,MCR7473),
                                  2-13  "     audit(86-10-10,Fawcett), install(86-11-03,MR12.0-1206):
                                  2-14  "     Modified to support control point management.  These changes were
                                  2-15  "     actually made in February 1985 by G. Palter.
                                  2-16  "  3) change(86-10-22,Fawcett), approve(86-10-22,MCR7473),
                                  2-17  "     audit(86-10-22,Farley), install(86-11-03,MR12.0-1206):
                                  2-18  "     Remove the old_lot pointer and replace it with cpm_data_ptr. Use the 18
                                  2-19  "     bit pad after cur_lot_size for the cpm_enabled. This was done to save
                                  2-20  "     some space int the stack header and change the cpd_ptr unal to
                                  2-21  "     cpm_data_ptr (ITS pair).
                                  2-22  "                                                      END HISTORY COMMENTS
                                  2-23  
                        000004    2-24  	equ	stack_header.cpm_data_ptr,4		ptr to control point for this stack
                        000006    2-25  	equ	stack_header.combined_stat_ptr,6	ptr to separate static area
                                  2-26  
                        000010    2-27  	equ	stack_header.clr_ptr,8		ptr to area containing linkage sections
                        000012    2-28  	equ	stack_header.max_lot_size,10		number of words allowed in lot (DU)
                        000012    2-29  	equ	stack_header.main_proc_invoked,10	nonzero if main proc was invoked in run unit (DL)
                        000012    2-30  	equ	stack_header.run_unit_depth,10	number of active run units stacked (DL)
                        000013    2-31  	equ	stack_header.cur_lot_size,11		DU number of words (entries) in lot
                        000013    2-32            equ	stack_header.cpm_enabled,11		DL  non-zero if control point management is enabled
                        000014    2-33  	equ	stack_header.system_free_ptr,12	ptr to system storage area
                        000016    2-34  	equ	stack_header.user_free_ptr,14		ptr to user storage area
                                  2-35  
                        000020    2-36  	equ	stack_header.parent_ptr,16		ptr to parent stack or null
                        000022    2-37  	equ	stack_header.stack_begin_ptr,18	ptr to first stack frame
                        000024    2-38  	equ	stack_header.stack_end_ptr,20		ptr to next useable stack frame
                        000026    2-39  	equ	stack_header.lot_ptr,22		ptr to the lot for the current ring
                                  2-40  
                        000030    2-41  	equ	stack_header.signal_ptr,24		ptr to signal proc for current ring
                        000032    2-42  	equ	stack_header.bar_mode_sp,26		value of sp before entering bar mode
                        000034    2-43  	equ	stack_header.pl1_operators_ptr,28	ptr: pl1_operators_$operator_table
                        000036    2-44  	equ	stack_header.call_op_ptr,30		ptr to standard call operator
                                  2-45  
                        000040    2-46  	equ	stack_header.push_op_ptr,32		ptr to standard push operator
                        000042    2-47  	equ	stack_header.return_op_ptr,34		ptr to standard return operator
                        000044    2-48  	equ	stack_header.ret_no_pop_op_ptr,36	ptr: stand. return/ no pop operator
                        000046    2-49  	equ	stack_header.entry_op_ptr,38		ptr to standard entry operator
                                  2-50  
                        000050    2-51  	equ	stack_header.trans_op_tv_ptr,40	ptr to table of translator operator ptrs
                        000052    2-52  	equ	stack_header.isot_ptr,42		pointer to ISOT
                        000054    2-53  	equ	stack_header.sct_ptr,44		pointer to System Condition Table
                        000056    2-54  	equ	stack_header.unwinder_ptr,46		pointer to unwinder for current ring
                                  2-55  
                        000060    2-56  	equ	stack_header.sys_link_info_ptr,48	ptr to *system link name table
                        000062    2-57  	equ	stack_header.rnt_ptr,50		ptr to reference name table
                        000064    2-58  	equ	stack_header.ect_ptr,52		ptr to event channel table
                        000066    2-59  	equ	stack_header.assign_linkage_ptr,54	ptr to area for hcs_$assign_linkage calls
                        000070    2-60  	equ	stack_header.heap_header_ptr,56	ptr to heap header.
                        000072    2-61  	equ	stack_header.trace_frames,58		stack of trace_catch_ frames
                        000073    2-62  	equ	stach_header.trace_top_ptr,59		trace pointer
                        000074    2-63  	equ	stack_header.in_trace,60		trace antirecurse bit
                        000100    2-64  	equ	stack_header_end,64			length of stack header
                                  2-65  
                                  2-66  
                                  2-67  
                                  2-68  
                        000000    2-69  	equ	trace_frames.count,0		number of trace frames on stack
                        000001    2-70  	equ	trace_frames.top_ptr,1		packed pointer to top one
                                  2-71  
                                  2-72  "	The  following constant is an offset within the  pl1  operators table.
                                  2-73  "	It  references a  transfer vector table.
                                  2-74  
                        000551    2-75  	bool	tv_offset,551
                                  2-76  
                                  2-77  
                                  2-78  "	The  following constants are offsets within this transfer vector table.
                                  2-79  
                        001170    2-80  	equ	call_offset,tv_offset+271
                        001171    2-81  	equ	push_offset,tv_offset+272
                        001172    2-82  	equ	return_offset,tv_offset+273
                        001173    2-83  	equ	return_no_pop_offset,tv_offset+274
                        001174    2-84  	equ	entry_offset,tv_offset+275
                                  2-85  
                                  2-86  
                                  2-87  " 	END INCLUDE FILE stack_header.incl.alm
                                        
                                        
                                        
                                        	use	codes
    000010                              .code_start:
                                        
                                        	use	past_codes
    000021                              .code_end:
                                        
                                        	join	/link/codes,past_codes
                                        
                                        	use	messages
                                        
    000000                              .trapproc:
    000000  aa   000000 2130 04         	epaq	0,ic
    000001  aa   000000 6200 01         	eax0	0,au
    000002  aa  6 00000 3731 00         	epbpsb	sp|0
    000003  aa  7 00026 7641 61         	lprplp	sb|stack_header.lot_ptr,*au
    000004  8a   000010 6210 00         	eax1	.code_start         
    000005  aa  4 00000 7401 11         .loop:	stx0	lp|0,x1
    000006  aa   000001 6210 11         	eax1	1,x1
    000007  8a   000021 1010 03         	cmpx1	.code_end,du
    000010  aa   777775 6040 04         	tmi	.loop-*,ic
    000011  aa  7 00044 7101 20         	short_return
                                        
    000012                              	firstref	<*text>|.trapproc
                                        
                                        
                                        
                        077777          	bool	.segno,77777
                                        
                                     4  
                                     5  ec           ted_com_abort,(tedabort),(Error in ted_com with -abort specified.)
                        000010          	segdef  ted_com_abort
    000010  a0   077777 000014 
    000012  aa  164 145 144 141         	aci  "tedabort",8
    000013  aa  142 157 162 164
    000014  aa  047 105 162 162         	acc  "Error in ted_com with -abort specified."
    000015  aa  157 162 040 151
    000016  aa  156 040 164 145
    000017  aa  144 137 143 157
    000020  aa  155 040 167 151
    000021  aa  164 150 040 055
    000022  aa  141 142 157 162
    000023  aa  164 040 163 160
    000024  aa  145 143 151 146
    000025  aa  151 145 144 056
                                        
                                     6  ec                Copy_Set,(copy_set),(Copy_Set)
                        000011          	segdef  Copy_Set
    000011  a0   077777 000030 
    000026  aa  143 157 160 171         	aci  "copy_set",8
    000027  aa  137 163 145 164
    000030  aa  010 103 157 160         	acc  "Copy_Set"
    000031  aa  171 137 123 145
    000032  aa  164 000 000 000
                                        
                                     7  ec                NoChange,(nochange),(NoChange)
                        000012          	segdef  NoChange
    000012  a0   077777 000035 
    000033  aa  156 157 143 150         	aci  "nochange",8
    000034  aa  141 156 147 145
    000035  aa  010 116 157 103         	acc  "NoChange"
    000036  aa  150 141 156 147
    000037  aa  145 000 000 000
                                        
                                     8  ec                     Set,(set     ),(Set)
                        000013          	segdef  Set
    000013  a0   077777 000042 
    000040  aa  163 145 164 040         	aci  "set",8
    000041  aa  040 040 040 040
    000042  aa  003 123 145 164         	acc  "Set"
                                        
                                     9  ec               Error_Msg,(err_msg ),(Error_Msg)
                        000014          	segdef  Error_Msg
    000014  a0   077777 000045 
    000043  aa  145 162 162 137         	aci  "err_msg",8
    000044  aa  155 163 147 040
    000045  aa  011 105 162 162         	acc  "Error_Msg"
    000046  aa  157 162 137 115
    000047  aa  163 147 000 000
                                        
                                    10  ec               No_Delim1,(no1delim),(No 1st delimiter.)
                        000015          	segdef  No_Delim1
    000015  a0   077777 000052 
    000050  aa  156 157 061 144         	aci  "no1delim",8
    000051  aa  145 154 151 155
    000052  aa  021 116 157 040         	acc  "No 1st delimiter."
    000053  aa  061 163 164 040
    000054  aa  144 145 154 151
    000055  aa  155 151 164 145
    000056  aa  162 056 000 000
                                        
                                    11  ec               No_Delim2,(no2delim),(No 2nd delimiter.)
                        000016          	segdef  No_Delim2
    000016  a0   077777 000061 
    000057  aa  156 157 062 144         	aci  "no2delim",8
    000060  aa  145 154 151 155
    000061  aa  021 116 157 040         	acc  "No 2nd delimiter."
    000062  aa  062 156 144 040
    000063  aa  144 145 154 151
    000064  aa  155 151 164 145
    000065  aa  162 056 000 000
                                        
                                    12  ec               No_Delim3,(no3delim),(No 3rd delimiter.)
                        000017          	segdef  No_Delim3
    000017  a0   077777 000070 
    000066  aa  156 157 063 144         	aci  "no3delim",8
    000067  aa  145 154 151 155
    000070  aa  021 116 157 040         	acc  "No 3rd delimiter."
    000071  aa  063 162 144 040
    000072  aa  144 145 154 151
    000073  aa  155 151 164 145
    000074  aa  162 056 000 000
                                        
                                    13  ec      zero_length_buffer,(zerobufl),(Zero length buffer.)
                        000020          	segdef  zero_length_buffer
    000020  a0   077777 000077 
    000075  aa  172 145 162 157         	aci  "zerobufl",8
    000076  aa  142 165 146 154
    000077  aa  023 132 145 162         	acc  "Zero length buffer."
    000100  aa  157 040 154 145
    000101  aa  156 147 164 150
    000102  aa  040 142 165 146
    000103  aa  146 145 162 056
                                        
                                    14  	end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    000104  5a   000003 000000 
    000105  5a   000110 600000 
    000106  aa   000000 000000 
    000107  55   000012 000002 
    000110  5a   000002 400003 
    000111  55   000006 000012 
    000112  aa  017 164 145 144
    000113  aa  145 162 162 157
    000114  aa  162 137 164 141
    000115  aa  142 154 145 137
    000116  55   000022 000003 
    000117  2a   000020 400001 
    000120  55   000015 000003 
    000121  aa  022 172 145 162         zero_length_buffer
    000122  aa  157 137 154 145
    000123  aa  156 147 164 150
    000124  aa  137 142 165 146
    000125  aa  146 145 162 000
    000126  55   000030 000012 
    000127  2a   000017 400001 
    000130  55   000025 000003 
    000131  aa  011 116 157 137         No_Delim3
    000132  aa  104 145 154 151
    000133  aa  155 063 000 000
    000134  55   000036 000022 
    000135  2a   000016 400001 
    000136  55   000033 000003 
    000137  aa  011 116 157 137         No_Delim2
    000140  aa  104 145 154 151
    000141  aa  155 062 000 000
    000142  55   000044 000030 
    000143  2a   000015 400001 
    000144  55   000041 000003 
    000145  aa  011 116 157 137         No_Delim1
    000146  aa  104 145 154 151
    000147  aa  155 061 000 000
    000150  55   000052 000036 
    000151  2a   000014 400001 
    000152  55   000047 000003 
    000153  aa  011 105 162 162         Error_Msg
    000154  aa  157 162 137 115
    000155  aa  163 147 000 000
    000156  55   000056 000044 
    000157  2a   000013 400001 
    000160  55   000055 000003 
    000161  aa  003 123 145 164         Set
    000162  55   000064 000052 
    000163  2a   000012 400001 
    000164  55   000061 000003 
    000165  aa  010 116 157 103         NoChange
    000166  aa  150 141 156 147
    000167  aa  145 000 000 000
    000170  55   000072 000056 
    000171  2a   000011 400001 
    000172  55   000067 000003 
    000173  aa  010 103 157 160         Copy_Set
    000174  aa  171 137 123 145
    000175  aa  164 000 000 000
    000176  55   000101 000064 
    000177  2a   000010 400001 
    000200  55   000075 000003 
    000201  aa  015 164 145 144         ted_com_abort
    000202  aa  137 143 157 155
    000203  aa  137 141 142 157
    000204  aa  162 164 000 000
    000205  55   000002 000072 
    000206  6a   000000 400002 
    000207  55   000104 000003 
    000210  aa  014 163 171 155         symbol_table
    000211  aa  142 157 154 137
    000212  aa  164 141 142 154
    000213  aa  145 000 000 000

DEFINITIONS HASH TABLE

    000214  aa   000000 000015 
    000215  aa   000000 000000 
    000216  5a   000064 000000 
    000217  aa   000000 000000 
    000220  5a   000052 000000 
    000221  5a   000012 000000 
    000222  aa   000000 000000 
    000223  5a   000101 000000 
    000224  5a   000022 000000 
    000225  5a   000030 000000 
    000226  5a   000036 000000 
    000227  5a   000056 000000 
    000230  5a   000044 000000 
    000231  5a   000072 000000 

NO EXTERNAL NAMES

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    000232  aa   000001 000000 
    000233  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    000234  50   000126 000000 
    000235  aa   000000 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  02   000104 000024 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000022 000027 
    000007  a2   000000 000012 
    000022  9a   777756 0000 46         *text|       
    000023  5a   000130 0000 00

FIRST REFERENCE TRAP LIST
     
    000024  aa   000000 000001 
    000025  aa   000000 000001 
    000026  2a   000022 000000 
    000027  aa   000000 000000 
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000004 
    000004  aa   000000 114732 
    000005  aa   732732 062314 
    000006  aa   000000 114775 
    000007  aa   701361 771577 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000171 
    000020  aa   000000 000145 
    000021  aa   000000 000153 
    000022  aa   000161 000145 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   040066 056067 
    000030  aa   040040 117143 
    000031  aa   164157 142145 
    000032  aa   162040 061071 
    000033  aa   070066 040040 
    000034  aa   107112 157150 
    000035  aa   156163 157156 
    000036  aa   056123 171163 
    000037  aa   115141 151156 
    000040  aa   164056 141040 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   154151 163164 
    000045  aa   040040 040040 
    000046  aa   040040 040040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040040 040040 
    000057  aa   040040 040040 
    000060  aa   040040 040040 
    000061  aa   040040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000003 
    000066  aa   000102 000064 
    000067  aa   147740 446217 
    000070  aa   000000 114774 
    000071  aa   461032 000000 
    000072  aa   000117 000037 
    000073  aa   120665 316464 
    000074  aa   000000 112067 
    000075  aa   253504 600000 
    000076  aa   000127 000066 
    000077  aa   147714 750316 
    000100  aa   000000 114774 
    000101  aa   453561 000000 
    000102  aa   076163 160145          >special_ldd>install>MR12.0-1206>tederror_table_.alm
    000103  aa   143151 141154 
    000104  aa   137154 144144 
    000105  aa   076151 156163 
    000106  aa   164141 154154 
    000107  aa   076115 122061 
    000110  aa   062056 060055 
    000111  aa   061062 060066 
    000112  aa   076164 145144 
    000113  aa   145162 162157 
    000114  aa   162137 164141 
    000115  aa   142154 145137 
    000116  aa   056141 154155 
    000117  aa   076154 144144          >ldd>include>et_macros.incl.alm
    000120  aa   076151 156143 
    000121  aa   154165 144145 
    000122  aa   076145 164137 
    000123  aa   155141 143162 
    000124  aa   157163 056151 
    000125  aa   156143 154056 
    000126  aa   141154 155040 
    000127  aa   076163 160145          >special_ldd>install>MR12.0-1206>stack_header.incl.alm
    000130  aa   143151 141154 
    000131  aa   137154 144144 
    000132  aa   076151 156163 
    000133  aa   164141 154154 
    000134  aa   076115 122061 
    000135  aa   062056 060055 
    000136  aa   061062 060066 
    000137  aa   076163 164141 
    000140  aa   143153 137150 
    000141  aa   145141 144145 
    000142  aa   162056 151156 
    000143  aa   143154 056141 
    000144  aa   154155 040040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

                *text                    tederror_table_:      3.
          14    .._00000                 tederror_table_:      5.
          30    .._00001                 tederror_table_:      6.
          35    .._00002                 tederror_table_:      7.
          42    .._00003                 tederror_table_:      8.
          45    .._00004                 tederror_table_:      9.
          52    .._00005                 tederror_table_:     10.
          61    .._00006                 tederror_table_:     11.
          70    .._00007                 tederror_table_:     12.
          77    .._00010                 tederror_table_:     13.
          21    .code_end                tederror_table_:      3.
          10    .code_start              tederror_table_:      3.
           5    .loop                    tederror_table_:      3.
       77777    .segno                   tederror_table_:      3,    5,    6,    7,    8,    9,   10,   11,   12,   13.
           0    .trapproc                tederror_table_:      3.
        1170    call_offset              stack_header:        80.
          10    codes                    tederror_table_:      3,    5,    6,    7,    8,    9,   10,   11,   12,   13.
          11    Copy_Set                 tederror_table_:      6.
        1174    entry_offset             stack_header:        84.
          14    Error_Msg                tederror_table_:      9.
           0    messages                 tederror_table_:      3,    5,    6,    7,    8,    9,   10,   11,   12,   13.
          12    NoChange                 tederror_table_:      7.
          15    No_Delim1                tederror_table_:     10.
          16    No_Delim2                tederror_table_:     11.
          17    No_Delim3                tederror_table_:     12.
          21    past_codes               tederror_table_:      3.
        1171    push_offset              stack_header:        81.
        1173    return_no_pop_offset     stack_header:        83.
        1172    return_offset            stack_header:        82.
          13    Set                      tederror_table_:      8.
          73    stach_header.trace_top_ptr     stack_header:        62.
          66    stack_header.assign_linkage_ptr      stack_header:        59.
          32    stack_header.bar_mode_sp       stack_header:        42.
          36    stack_header.call_op_ptr       stack_header:        44.
          10    stack_header.clr_ptr     stack_header:        27.
           6    stack_header.combined_stat_ptr       stack_header:        25.
           4    stack_header.cpm_data_ptr      stack_header:        24.
          13    stack_header.cpm_enabled       stack_header:        32.
          13    stack_header.cur_lot_size      stack_header:        31.
          64    stack_header.ect_ptr     stack_header:        58.
          46    stack_header.entry_op_ptr      stack_header:        49.
          70    stack_header.heap_header_ptr   stack_header:        60.
          74    stack_header.in_trace    stack_header:        63.
          52    stack_header.isot_ptr    stack_header:        52.
          26    stack_header.lot_ptr     tederror_table_:      3,
                                         stack_header:        39.
          12    stack_header.main_proc_invoked       stack_header:        29.
          12    stack_header.max_lot_size      stack_header:        28.
          20    stack_header.parent_ptr  stack_header:        36.
          34    stack_header.pl1_operators_ptr       stack_header:        43.
          40    stack_header.push_op_ptr       stack_header:        46.
          42    stack_header.return_op_ptr     stack_header:        47.
          44    stack_header.ret_no_pop_op_ptr       stack_header:        48.
          62    stack_header.rnt_ptr     stack_header:        57.
          12    stack_header.run_unit_depth    stack_header:        30.
          54    stack_header.sct_ptr     stack_header:        53.
          30    stack_header.signal_ptr  stack_header:        41.
          22    stack_header.stack_begin_ptr   stack_header:        37.
          24    stack_header.stack_end_ptr     stack_header:        38.
          14    stack_header.system_free_ptr   stack_header:        33.
          60    stack_header.sys_link_info_ptr       stack_header:        56.
          72    stack_header.trace_frames      stack_header:        61.
          50    stack_header.trans_op_tv_ptr   stack_header:        51.
          56    stack_header.unwinder_ptr      stack_header:        54.
          16    stack_header.user_free_ptr     stack_header:        34.
         100    stack_header_end         stack_header:        64.
          10    ted_com_abort            tederror_table_:      5.
           0    trace_frames.count       stack_header:        69.
           1    trace_frames.top_ptr     stack_header:        70.
         551    tv_offset                stack_header:        75,   80,   81,   82,   83,   84.
          20    zero_length_buffer       tederror_table_:     13.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
