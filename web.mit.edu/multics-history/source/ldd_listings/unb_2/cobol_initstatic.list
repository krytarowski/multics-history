	COMPILATION LISTING OF SEGMENT cobol_initstatic
	Compiled by: Multics PL/I Compiler, Release 31b, of April 24, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 05/24/89  1009.4 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
       17*     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
       18*     MCR8060 cobol_initstatic.pl1 Reformatted code to new Cobol standard.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 /* Modified on 08/17/81 by FCH, [5.0-1], dds_internal changed to based from static, phx07089(BUG475) */
       23 /*  1/4/77, FCH, fixed bin decls standardized */
       24 /* Modified since Version 2.0 */
       25 
       26 /* format: style3 */
       27 cobol_initstatic:
       28      proc;
       29 
       30 declare	csv		(m) fixed bin (24) based (cobol_sv_ptr);
       31 declare	cptrs		(21) ptr based (cobol_sv_ptr);
       32 declare	keys_ptr		ptr,
       33 	m		fixed bin;
       34 declare	ckeys		(355) char (1) based (keys_ptr);
       35 
       36 /*[5.0-1]*/
       37 dcl	cobol$alloc	entry (fixed bin) returns (ptr);
       38 
       39 declare	(addr, fixed, substr, unspec, size, collate, length)
       40 			builtin;
       41 
       42 /*[5.0-1]*/
       43 	cobol_sv_ptr = cobol$alloc (size (dds));
       44 
       45 	m = size (dds);
       46 	csv = 0;
       47 	keys_ptr = addr (cm_key);
       48 
       49 	ckeys = "0";
       50 	fixed_common.init_cd = "0"b;			/* not needed when lex fix made */
       51 	cptrs = null_func;
       52 
       53 	coll_ptr = addr (coll_seq);
       54 	coll_seq = collate ();
       55 
       56 	call char (50);
       57 
       58 	do i = 1 by 1 to 256;
       59 
       60 	     dds.transltble (i) = ch;
       61 
       62 	end;
       63 
       64 	call ord_num ("(");
       65 	dds.transltble (on) = "(";
       66 
       67 	call ord_num (")");
       68 	dds.transltble (on) = ")";
       69 
       70 	ch_str = "12345678";
       71 	call char (127);
       72 
       73 	do i = 1 by 1 to length (ch_str);
       74 
       75 	     call ord_num (substr (ch_str, i, 1));
       76 	     dds.transltble (on) = ch;
       77 
       78 	end;
       79 
       80 	ch_str = "BV,.CDEZ9*9P9l0+999-999" || fixed_common.currency || "999SXA9";
       81 
       82 	do i = 1 by 1 to length (ch_str);
       83 
       84 	     call ord_num (substr (ch_str, i, 1));
       85 	     call char (i);
       86 	     dds.transltble (on) = ch;
       87 
       88 	end;
       89 
       90 	ch_str = ":\|[]{}_^~`<>?%&'EFGHIJKMNOQTUWTh";
       91 
       92 	on = index (ch_str, fixed_common.currency);
       93 
       94 	if on = 1
       95 	then substr (ch_str, 1, 1) = substr (ch_str, 2, 1);
       96 	else if on ^= 0
       97 	then substr (ch_str, on, 1) = substr (ch_str, 1, 1);
       98 
       99 	call char (1);
      100 
      101 	call ord_num ("/");
      102 	dds.transltble (on) = ch;
      103 
      104 	do i = 1 by 1 to length (ch_str);
      105 
      106 	     call ord_num (substr (ch_str, i, 1));
      107 	     dds.transltble (on) = ch;
      108 
      109 	end;
      110 
      111 	call char (32);
      112 	stopper = ch;
      113 
      114 	dds.ptr5 = addr (dds.vector_part);
      115 	fd_clauses_ptr = addr (fd_clauses);
      116 
      117 	dds.mask1x = "00000000000000000000000000001110"b;
      118 	dds.mask2x = "00000000000000000000000000000010"b;
      119 	dds.mask3x = "00000000000000000000000000000100"b;
      120 
      121 	dds.prectble (1) = "00001110000101001000100010010001"b;
      122 	dds.prectble (2) = "01011110101010001010101010101101"b;
      123 	dds.prectble (3) = "00001110000101001000100010011101"b;
      124 	dds.prectble (4) = "01011110101111001010101010111101"b;
      125 	dds.prectble (5) = "00001110000001011111111010011101"b;
      126 	dds.prectble (6) = "00001110000001011111111010011101"b;
      127 	dds.prectble (7) = "10101111111111001110111111111101"b;
      128 	dds.prectble (8) = "01011110111111001110111011111111"b;
      129 	dds.prectble (9) = "00001110011101001110111011111111"b;
      130 	dds.prectble (10) = "01011111101111001110111011111111"b;
      131 	dds.prectble (11) = "00001111100101001110111011111111"b;
      132 	dds.prectble (12) = "01011110101010001010101010101101"b;
      133 	dds.prectble (13) = "10111111111100101110111011101111"b;
      134 	dds.prectble (14) = "11111111111111111111111111111111"b;
      135 	dds.prectble (15) = "00001110000101001000100010010001"b;
      136 	dds.prectble (16) = "11111111111111111111111111111111"b;
      137 	dds.prectble (17) = "00001100000001011111111010011101"b;
      138 	dds.prectble (18) = "01011111111111011011111011111111"b;
      139 	dds.prectble (19) = "00001111111101011001111011111111"b;
      140 	dds.prectble (20) = "11111111111111111111111111111111"b;
      141 	dds.prectble (21) = "00001100000001011111111010011101"b;
      142 	dds.prectble (22) = "01011111111111011111101011111111"b;
      143 	dds.prectble (23) = "00001111111101011111100011111111"b;
      144 	dds.prectble (24) = "11111111111111101110111111111111"b;
      145 	dds.prectble (25) = "11111111111111111111111111111111"b;
      146 	dds.prectble (26) = "01011111111111001110111110111111"b;
      147 	dds.prectble (27) = "00001111111101001110111110011111"b;
      148 	dds.prectble (28) = "11111111111110111111111111111111"b;
      149 	dds.prectble (29) = "01111111111110011111111111110001"b;
      150 	dds.prectble (30) = "01111111111110011111111111110001"b;
      151 	dds.prectble (31) = "00001100000100001010101010100001"b;
      152 	dds.prectble (32) = "00000000000000000000000010000001"b;
      153 	dds.inftble (1) = "10011000"b;
      154 	dds.inftble (2) = "00010000"b;
      155 	dds.inftble (3) = "10011000"b;
      156 	dds.inftble (4) = "00011000"b;
      157 	dds.inftble (5) = "00001000"b;
      158 	dds.inftble (6) = "00001000"b;
      159 	dds.inftble (7) = "00001000"b;
      160 
      161 	do fixbin7 = 8 to 11;
      162 	     dds.inftble (fixbin7) = "11001100"b;
      163 	end;
      164 
      165 	dds.inftble (12) = "11000000"b;
      166 	dds.inftble (13) = "11000000"b;
      167 	dds.inftble (14) = "00000000"b;
      168 	dds.inftble (15) = "10011000"b;
      169 	dds.inftble (16) = "11101000"b;
      170 	dds.inftble (17) = "11101000"b;
      171 	dds.inftble (18) = "11101100"b;
      172 	dds.inftble (19) = "11101100"b;
      173 	dds.inftble (20) = "11101000"b;
      174 	dds.inftble (21) = "11101000"b;
      175 	dds.inftble (22) = "11101100"b;
      176 	dds.inftble (23) = "11101100"b;
      177 	dds.inftble (24) = "11101000"b;
      178 	dds.inftble (25) = "11101000"b;
      179 	dds.inftble (26) = "11101100"b;
      180 	dds.inftble (27) = "11101100"b;
      181 	dds.inftble (28) = "00000000"b;
      182 
      183 	do fixbin7 = 29 to 31;
      184 	     dds.inftble (fixbin7) = "10001100"b;
      185 	end;
      186 
      187 	dds.inftble (32) = "00000000"b;
      188 
      189 	return;
      190 
      191 ord_num:
      192      proc (ch);
      193 
      194 declare	ch		char (1);
      195 
      196 	on = index (coll_seq, ch) - 1;
      197 
      198      end;
      199 
      200 char:
      201      proc (val);
      202 
      203 declare	val		fixed bin;
      204 
      205 	ch = coll_array (val + 1);
      206 
      207      end;
      208 
      209 declare	(i, on)		fixed bin;
      210 declare	ch		char (1),
      211 	coll_seq		char (128);
      212 declare	coll_ptr		ptr;
      213 
      214 declare	coll_array	(128) char (1) based (coll_ptr);
      215 
  1     1 
  1     2 /* BEGIN INCLUDE FILE ... cobol_ext_.incl.pl1 */
  1     3 /* Last modified on 06/17/76 by ORN */
  1     4 /* Last modified on 12/28/76 by FCH */
  1     5 /* Last modified on 12/01/80 by FCH */
  1     6 
  1     7 /*    <<<   SHARED EXTERNALS INCLUDE FILE   >>>    */
  1     8 
  1     9 
  1    10 dcl     cobol_ext_$cobol_afp ptr ext;
  1    11 dcl     cobol_afp ptr defined (  cobol_ext_$cobol_afp);
  1    12 dcl     cobol_ext_$cobol_analin_fileno ptr ext;
  1    13 dcl     cobol_analin_fileno ptr defined (  cobol_ext_$cobol_analin_fileno);
  1    14 dcl     cobol_ext_$report_first_token ptr ext;
  1    15 dcl     report_first_token ptr defined( cobol_ext_$report_first_token);
  1    16 dcl     cobol_ext_$report_last_token ptr ext;
  1    17 dcl     report_last_token ptr defined ( cobol_ext_$report_last_token);
  1    18 dcl     cobol_ext_$cobol_eltp ptr ext;
  1    19 dcl     cobol_eltp ptr defined (  cobol_ext_$cobol_eltp);
  1    20 dcl     cobol_ext_$cobol_cmfp ptr ext;
  1    21 dcl     cobol_cmfp ptr defined (  cobol_ext_$cobol_cmfp);
  1    22 dcl     cobol_ext_$cobol_com_fileno ptr ext;
  1    23 dcl     cobol_com_fileno ptr defined (  cobol_ext_$cobol_com_fileno);
  1    24 dcl     cobol_ext_$cobol_com_ptr ptr ext;
  1    25 dcl     cobol_com_ptr ptr defined (  cobol_ext_$cobol_com_ptr);
  1    26 dcl     cobol_ext_$cobol_dfp ptr ext;
  1    27 dcl     cobol_dfp ptr defined (  cobol_ext_$cobol_dfp);
  1    28 dcl     cobol_ext_$cobol_hfp ptr ext;
  1    29 dcl     cobol_hfp ptr defined (  cobol_ext_$cobol_hfp);
  1    30 dcl     cobol_ext_$cobol_m1fp ptr ext;
  1    31 dcl     cobol_m1fp ptr defined (  cobol_ext_$cobol_m1fp);
  1    32 dcl     cobol_ext_$cobol_m2fp ptr ext;
  1    33 dcl     cobol_m2fp ptr defined (  cobol_ext_$cobol_m2fp);
  1    34 dcl     cobol_ext_$cobol_min1_fileno ptr ext;
  1    35 dcl     cobol_min1_fileno ptr defined (  cobol_ext_$cobol_min1_fileno);
  1    36 dcl     cobol_ext_$cobol_min2_fileno_ptr ptr ext;
  1    37 dcl     cobol_min2_fileno_ptr ptr defined (  cobol_ext_$cobol_min2_fileno_ptr);
  1    38 dcl     cobol_ext_$cobol_name_fileno ptr ext;
  1    39 dcl     cobol_name_fileno ptr defined (  cobol_ext_$cobol_name_fileno);
  1    40 dcl     cobol_ext_$cobol_name_fileno_ptr ptr ext;
  1    41 dcl     cobol_name_fileno_ptr ptr defined (  cobol_ext_$cobol_name_fileno_ptr);
  1    42 dcl     cobol_ext_$cobol_ntfp ptr ext;
  1    43 dcl     cobol_ntfp ptr defined (  cobol_ext_$cobol_ntfp);
  1    44 dcl     cobol_ext_$cobol_pdofp ptr ext;
  1    45 dcl     cobol_pdofp ptr defined (  cobol_ext_$cobol_pdofp);
  1    46 dcl     cobol_ext_$cobol_pfp ptr ext;
  1    47 dcl     cobol_pfp ptr defined (  cobol_ext_$cobol_pfp);
  1    48 dcl     cobol_ext_$cobol_rm2fp ptr ext;
  1    49 dcl     cobol_rm2fp ptr defined (  cobol_ext_$cobol_rm2fp);
  1    50 dcl     cobol_ext_$cobol_rmin2fp ptr ext;
  1    51 dcl     cobol_rmin2fp ptr defined (  cobol_ext_$cobol_rmin2fp);
  1    52 dcl     cobol_ext_$cobol_curr_in ptr ext;
  1    53 dcl     cobol_curr_in ptr defined (  cobol_ext_$cobol_curr_in);
  1    54 dcl     cobol_ext_$cobol_curr_out ptr ext;
  1    55 dcl     cobol_curr_out ptr defined (  cobol_ext_$cobol_curr_out);
  1    56 dcl     cobol_ext_$cobol_sfp ptr ext;
  1    57 dcl     cobol_sfp ptr defined (  cobol_ext_$cobol_sfp);
  1    58 dcl     cobol_ext_$cobol_w1p ptr ext;
  1    59 dcl     cobol_w1p ptr defined (  cobol_ext_$cobol_w1p);
  1    60 dcl     cobol_ext_$cobol_w2p ptr ext;
  1    61 dcl     cobol_w2p ptr defined (  cobol_ext_$cobol_w2p);
  1    62 dcl     cobol_ext_$cobol_w3p ptr ext;
  1    63 dcl     cobol_w3p ptr defined (  cobol_ext_$cobol_w3p);
  1    64 dcl     cobol_ext_$cobol_w5p ptr ext;
  1    65 dcl     cobol_w5p ptr defined (  cobol_ext_$cobol_w5p);
  1    66 dcl     cobol_ext_$cobol_w6p ptr ext;
  1    67 dcl     cobol_w6p ptr defined (  cobol_ext_$cobol_w6p);
  1    68 dcl     cobol_ext_$cobol_w7p ptr ext;
  1    69 dcl     cobol_w7p ptr defined (  cobol_ext_$cobol_w7p);
  1    70 dcl     cobol_ext_$cobol_x3fp ptr ext;
  1    71 dcl     cobol_x3fp ptr defined (  cobol_ext_$cobol_x3fp);
  1    72 dcl	cobol_ext_$cobol_rwdd ptr ext;
  1    73 dcl	cobol_rwdd ptr defined(cobol_ext_$cobol_rwdd);
  1    74 dcl	cobol_ext_$cobol_rwpd ptr ext;
  1    75 dcl	cobol_rwpd ptr defined(cobol_ext_$cobol_rwpd);
  1    76 
  1    77 
  1    78 dcl     cobol_ext_$cobol_fileno1 fixed bin(24)ext;
  1    79 dcl     cobol_fileno1 fixed bin(24)defined (  cobol_ext_$cobol_fileno1);				
  1    80 dcl     cobol_ext_$cobol_options_len fixed bin(24)ext;
  1    81 dcl     cobol_options_len fixed bin(24)defined (  cobol_ext_$cobol_options_len);
  1    82 dcl     cobol_ext_$cobol_pdout_fileno fixed bin(24)ext;
  1    83 dcl     cobol_pdout_fileno fixed bin(24)defined (  cobol_ext_$cobol_pdout_fileno);			
  1    84 dcl     cobol_ext_$cobol_print_fileno fixed bin(24)ext;
  1    85 dcl     cobol_print_fileno fixed bin(24)defined (  cobol_ext_$cobol_print_fileno);			
  1    86 dcl     cobol_ext_$cobol_rmin2_fileno fixed bin(24)ext;
  1    87 dcl     cobol_rmin2_fileno fixed bin(24)defined (  cobol_ext_$cobol_rmin2_fileno);
  1    88 dcl     cobol_ext_$cobol_x1_fileno fixed bin(24)ext;
  1    89 dcl     cobol_x1_fileno fixed bin(24)defined (  cobol_ext_$cobol_x1_fileno);				
  1    90 dcl     cobol_ext_$cobol_x2_fileno fixed bin(24)ext;
  1    91 dcl     cobol_x2_fileno fixed bin(24)defined (  cobol_ext_$cobol_x2_fileno);
  1    92 dcl     cobol_ext_$cobol_x3_fileno fixed bin(24)ext;
  1    93 dcl     cobol_x3_fileno fixed bin(24)defined (  cobol_ext_$cobol_x3_fileno);
  1    94 
  1    95 dcl     cobol_ext_$cobol_lpr char (5) ext;
  1    96 dcl     cobol_lpr char (5) defined (  cobol_ext_$cobol_lpr);				/* -2- */
  1    97 dcl     cobol_ext_$cobol_options char (120) ext;
  1    98 dcl     cobol_options char (120) defined (  cobol_ext_$cobol_options);          			/* -30- */
  1    99 
  1   100 dcl     cobol_ext_$cobol_xlast8 bit (1) ext;
  1   101 dcl     cobol_xlast8 bit (1) defined (  cobol_ext_$cobol_xlast8);				/* -1- */
  1   102 dcl     cobol_ext_$report_exists bit (1) ext;
  1   103 dcl     report_exists bit (1) defined (  cobol_ext_$report_exists);
  1   104 
  1   105 
  1   106 /*    <<<   END OF SHARED EXTERNALS INCLUDE FILE   >>>    */
  1   107 /* END INCLUDE FILE ... cobol_ext_.incl.pl1 */
  1   108 
      216 
      217 /* %include cobol_segdata_ddsyn;  */
  2     1 
  2     2 /* BEGIN INCLUDE FILE ...   cobol_fixed_common.incl.pl1 */
  2     3 /* Modified on 10/27/82 by FCH, [5.1-1], cobol_cln added to save last line num, BUG543(phx13643) */
  2     4 /* Modified on 07/31/80 by FCH, [4.3-1], use_reporting field added for Report Writer */
  2     5 /* Modified on 03/30/79 by FCH, [4.1-1], -card option added */
  2     6 /* Modified on 03/30/79 by FCH, [4.0-2], -svNM option added */
  2     7 /* Modified on 03/02/79 by FCH, [4.0-1], -levNM option added */
  2     8 /* Modified by RAL on 10/13/78, [4.0-0], Added option exp from fil2. */
  2     9 /* Modified by BC on 06/20/77, descriptor added.	*/
  2    10 /* Modified by BC on 06/02/77, init_cd_seg, init_cd_offset added.	*/
  2    11 /* Modified by BC  on 1/21/77, options.profile added.	*/
  2    12 /* Modified by FCH on 7/6/76, sysin_fno & sysout_fno deleted, accept_device & display_device added */
  2    13 /* Modified by FCH on 5/20/77, comp_level added */
  2    14 
  2    15 
  2    16 /*     THE SIZE OF THIS STRUCTURE IN BYTES, (EXCLUDING VARIABLE
  2    17*   LENGTH ENTITIES), FOR EACH HARDWARE IMPLEMENTATION IS:
  2    18*
  2    19*   HARDWARE	|	SIZE (BYTES)
  2    20*   ---------------------------------
  2    21*   645/6180	|	464
  2    22*   P7		|	396
  2    23*   ---------------------------------
  2    24*   */
  2    25 
  2    26 dcl 	1 fixed_common based (  cobol_com_ptr),
  2    27     		2 prog_name char (30),
  2    28    		2 compiler_rev_no char (25),
  2    29     		2 phase_name char (6),
  2    30     		2 currency char (1),
  2    31     		2 fatal_no fixed bin,
  2    32     		2 warn_no fixed bin,
  2    33     		2 proc_counter fixed bin,
  2    34     		2 spec_tag_counter fixed bin,
  2    35     		2 file_count fixed bin,
  2    36     		2 filedescr_offsets (20) char (5),
  2    37     		2 perf_alter_info char (5),
  2    38     		2 another_perform_info char (5),
  2    39     		2 sort_in_info char (5),
  2    40     		2 odo_info char (5),
  2    41     		2 size_seg fixed bin,
  2    42     		2 size_offset fixed bin(24),
  2    43     		2 size_perform_info char (5),
  2    44     		2 rename_info char (5),
  2    45     		2 report_names char (5),
  2    46     		2 rw_buf_seg fixed bin,
  2    47     		2 rw_buf_offset fixed bin(24),
  2    48     		2 rw_buf_length fixed bin(24),
  2    49     		2 file_keys char (5),
  2    50     		2 search_keys char (5),
  2    51     		2 dd_seg_size fixed bin(24),
  2    52     		2 pd_seg_size fixed bin(24),
  2    53     		2 seg_limit fixed bin ,
  2    54     		2 number_of_dd_segs fixed bin,
  2    55     		2 seg_info char (5),
  2    56     		2 number_of_ls_pointers fixed bin,
  2    57     		2 link_sec_seg fixed bin,
  2    58     		2 link_sec_offset fixed bin(24),
  2    59     		2 sra_clauses fixed bin,
  2    60     		2 fix_up_info char (5),
  2    61     		2 linage_info char (5),
  2    62     		2 first_dd_item char (5),
  2    63     		2 sort_out_info char (5),
  2    64     		2 db_info char (5),
  2    65     		2 realm_info char (5),
  2    66     		2 rc_realm_info char (5),
  2    67     		2 last_file_key char (5),
  2    68     		2 prog_coll_seq fixed bin,
  2    69 		2 init_cd_seg fixed bin,
  2    70 		2 init_cd_offset fixed bin(24),
  2    71     		2 input_error_exit fixed bin,
  2    72    		2 output_error_exit fixed bin,
  2    73     		2 i_o_error_exit fixed bin,
  2    74     		2 extend_error_exit fixed bin,
  2    75     		2 dummy15 fixed bin,
  2    76     		2 options,
  2    77       			3 cu bit (1),
  2    78       			3 st bit (1),
  2    79       			3 wn bit (1),
  2    80       			3 obs bit (1),
  2    81       			3 dm bit (1),
  2    82       			3 xrl bit (1),
  2    83       			3 xrn bit (1),
  2    84       			3 src bit (1),
  2    85       			3 obj bit (1),
  2    86       			3 exs bit (1),
  2    87       			3 sck bit (1),
  2    88       			3 rno bit (1),
  2    89 			3 u_l bit (1),
  2    90 			3 cnv bit (1),
  2    91 			3 cos bit (1),
  2    92 			3 fmt bit (1),
  2    93 			3 profile bit(1),
  2    94 			3 nw bit (1),
  2    95 			3 exp bit (1),		/* [4.0-0] */
  2    96 			3 card bit (1),  /*[4.1-1]*/
  2    97 			3 fil2 bit (5),
  2    98 			3 m_map bit (1),
  2    99 			3 m_bf bit (1),
  2   100 			3 m_fat bit (1),
  2   101 			3 m_wn bit (1),
  2   102 			3 m_obs bit(1),
  2   103 			3 pd bit(1),
  2   104       			3 oc bit(1),
  2   105     		2 supervisor bit (1),
  2   106     		2 dec_comma bit (1),
  2   107     		2 init_cd bit (1),
  2   108     		2 corr bit (1),
  2   109     		2 initl bit (1),
  2   110     		2 debug bit (1),
  2   111     		2 report bit (1),
  2   112     		2 sync_in_prog bit (1),
  2   113     		2 pd_section bit (1),
  2   114     		2 list_switch bit (1),
  2   115     		2 alpha_cond bit (1),
  2   116     		2 num_cond bit (1),
  2   117     		2 spec_sysin bit (1),
  2   118     		2 spec_sysout bit (1),
  2   119     		2 cpl_files bit (1),
  2   120     		2 obj_dec_comma bit (1),
  2   121 		2 default_sign_type bit (3),
  2   122 		2 use_debug bit(1),
  2   123 		2 syntax_trace bit(1),
  2   124 		2 comp_defaults,
  2   125 			3 comp	bit(1),
  2   126 			3 comp_1	bit(1),
  2   127 			3 comp_2	bit(1),
  2   128 			3 comp_3	bit(1),
  2   129 			3 comp_4	bit(1),
  2   130 			3 comp_5	bit(1),
  2   131 			3 comp_6	bit(1),
  2   132 			3 comp_7	bit(1),
  2   133 			3 comp_8 bit(1),
  2   134 		2 disp_defaults,
  2   135 			3 disp	bit(1),
  2   136 			3 disp_1	bit(1),
  2   137 			3 disp_2	bit(1),
  2   138 			3 disp_3	bit(1),
  2   139 			3 disp_4	bit(1),
  2   140 			3 disp_5  bit(1),
  2   141 			3 disp_6  bit(1),
  2   142 			3 disp_7  bit(1),
  2   143 		2 descriptor bit(2),
  2   144 		2 levsv  bit(3),		/*[4.0-1]*/
  2   145 		2 use_reporting bit(1),	/*[4.3-1]*/
  2   146 		2 cd bit(1),		/*[4.4-1]*/
  2   147 		2 dummy17 bit(3),
  2   148    		2 lvl_rstr bit(32),
  2   149    		2 inst_rstr bit(32),
  2   150 		2 comp_level char(1),
  2   151 		2 dummy18 char(30),
  2   152 		2 object_sign char (1),
  2   153     		2 last_print_rec char (5),
  2   154     		2 coll_seq_info char (5),
  2   155     		2 sys_status_seg fixed bin,
  2   156    		2 sys_status_offset fixed bin(24),
  2   157    		2 compiler_id fixed bin,
  2   158    		2 date_comp_ln fixed bin,
  2   159    		2 compile_mode bit(36),
  2   160    		2 default_temp fixed bin,
  2   161    		2 accept_device fixed bin,
  2   162    		2 display_device fixed bin,
  2   163    		2 cobol_cln fixed bin,	/*[5.1-1]*/
  2   164 		2 alphabet_offset fixed bin;
  2   165 
  2   166 
  2   167 
  2   168 /* END INCLUDE FILE ...   cobol_fixed_common.incl.pl1 */
  2   169 
      218 
      219 
      220 declare	x		char (1);
      221 declare	y		char (1);
      222 declare	char1		char (1);
      223 
      224 declare	fixbin7		fixed bin;
      225 declare	null_func		ptr internal static init (null ());
      226 declare	one_word_in_bits	bit (36);
      227 
      228 declare	1 dds		based (cobol_sv_ptr),
  3     1 
  3     2 /* BEGIN INCLUDE FILE ...   cobol_shared_var.incl.pl1 */
  3     3 	2 min_ptr ptr,
  3     4 	2 ft_ptr ptr,
  3     5 	2 skey_ptr ptr,
  3     6 	2 linage_ptr ptr,
  3     7 	2 fkey_ptr ptr,
  3     8 	2 rnt_ptr ptr,
  3     9 	2 modnt_ptr ptr,
  3    10 	2 ptr1 ptr,
  3    11 	2 save_ptr ptr,
  3    12 	2 save_ptr1 ptr,	/*used only for cond value thru clause*/
  3    13 	2 ptr3 ptr,
  3    14 	2 ptr2 ptr,
  3    15 	2 dn_ptr ptr,	/*to type9 token, usually in wkbuf1*/
  3    16 	2 w2_ptr ptr,	/*to various tokens and records in wkbuf2*/
  3    17 	2 cdtoken_ptr ptr,	/* ptr to cd token */
  3    18 	2 save_w2 ptr,
  3    19 	2 com2_ptr ptr,
  3    20 	2 cm_ptr  ptr,
  3    21 	2 ptr5 ptr,
  3    22 	2 ptr4 ptr,
  3    23 	2 ptr_to_char_tbl ptr,
  3    24 	2 fd_clauses_ptr ptr,
  3    25 	2 nt_fno fixed bin(24),
  3    26 	2 temp_bin1 fixed bin(24),
  3    27 	2 temp_bin2 fixed bin(24),
  3    28 	2 offset_ct fixed bin(24),
  3    29 	2 save_offsets(49) fixed bin(24),
  3    30 	2 bnw fixed bin,	/*indicates wkbuf1 contains unwritten type9*/
  3    31 	2 nl fixed bin,
  3    32 	2 al fixed bin,
  3    33 	2 nsa_index fixed bin,
  3    34 	2 nsa_index_last_fd fixed bin,
  3    35 	2 nsa_work_index fixed bin,
  3    36 	2 name_string_index fixed bin,
  3    37 	2 ul fixed bin,
  3    38 	2 rnt_size fixed bin,
  3    39 	2 min_size_r fixed bin,
  3    40 	2 niv fixed bin,
  3    41 	2 aiv fixed bin,
  3    42 	2 odim fixed bin,
  3    43 	2 index_ct fixed bin,
  3    44 	2 sn fixed bin,
  3    45 	2 h fixed bin,
  3    46 	2 fh fixed bin,
  3    47 	2 hh fixed bin,
  3    48 	2 keycount fixed bin,
  3    49 	2 save_h fixed bin,
  3    50 	2 save_block_desc fixed bin,
  3    51 	2 save_block_min fixed bin,
  3    52 	2 save_block_max fixed bin,
  3    53 	2 save_record_min fixed bin,
  3    54 	2 save_record_max fixed bin,
  3    55 	2 save_line fixed bin,
  3    56 	2 save_line_for66 fixed bin,
  3    57 	2 save_occno fixed bin,
  3    58 	2 dnl fixed bin ,
  3    59 	2 nt_size fixed bin,
  3    60 	2 cm_size fixed bin,
  3    61 	2 rdf_size  fixed bin ,
  3    62 	2 counter1 fixed bin ,
  3    63 	2 counter2 fixed bin ,
  3    64 	2 file_number fixed bin ,
  3    65 	2 cd_index fixed bin,
  3    66 	2 cdno fixed bin,
  3    67 	2 save_cdo fixed bin,
  3    68 	2 rnm_obj12 fixed bin,
  3    69 	2 ixix fixed bin,
  3    70 	2 no_of_88s fixed bin,	/*consecutive type11 tokens beginning at save_wkey*/
  3    71 	2 ix_ino (50) fixed bin,
  3    72 	2 asc_des fixed bin,
  3    73 	2 next_level fixed bin,
  3    74 	2 save_level fixed bin,
  3    75 	2 rdf_level fixed bin,
  3    76 	2 save_column fixed bin,
  3    77 	2 cd_size(12) fixed bin,
  3    78 	2 nsa_name_index (256) fixed bin,
  3    79 	2 nsa_name_length (256) fixed bin,
  3    80 	2 name_string char(300),
  3    81 	2  transltble(256) char(1),
  3    82 	2 one_char_of_zero_bits char(1),
  3    83 	2 cd_name(12) char(32),
  3    84 	2 save_dname char(30),
  3    85 
  3    86 	2 ch_str char(128) varying,
  3    87 	2 rdf_tbl (49) char(30) varying,
  3    88 	2 stopper char(1),
  3    89 	2 cm_key char(5),
  3    90 	2 rnt_key char(5),
  3    91 	2 mod_key char(5),
  3    92 	2 w_key char(5),
  3    93 	2 rcm_key char(5),
  3    94 	2 save_fd char(5),
  3    95 	2 save_wkey char(5),
  3    96 	2 save_77 char(5),
  3    97 	2 save_01 char(5),
  3    98 	2 save_11 char(5),
  3    99 	2 rdf_01_sav char(5) ,
  3   100 	2 save_01_for66 char(5),
  3   101 	2 prior_odo_rec char(5),
  3   102 	2 prior_obj_rec char(5),
  3   103 	2 prior_report_rec char(5),
  3   104 	2 prior_qual_rec char(5),
  3   105 	2 prior_occ_key char(5),
  3   106 	2 prior_linage_name_rec char(5),
  3   107 	2 prior_skey_rec char(5),
  3   108 	2 prior_rename_rec char(5),
  3   109 	2 prior_fkey_rec char(5),
  3   110 	2 ix_key (50) char(5),
  3   111 	2 fd_clauses bit(36),	/*must be byte aligned*/
  3   112 	2 cd_clauses bit(12),
  3   113 	2 mask1x bit(32),	/*ba*/
  3   114 	2 mask2x bit(32),	/*ba*/
  3   115 	2 mask3x bit(32),	/*ba*/
  3   116 	2 inftble (32) bit(8),	/*ba*/
  3   117 	2 prectble  (32) bit(32),	/*ba*/
  3   118 	2 E_tbl bit(64),	/*ba*/
  3   119 	2 vector_part bit(128),	/*ba*/
  3   120 	2 nsa_lbl_rec (256) bit(1),	/*ba*/
  3   121 	2 nsa_cancelled (256) bit(1),
  3   122 	2 ll01 bit(1),
  3   123 	2 ll77 bit(1),
  3   124 	2 cd_initial bit(1),
  3   125 	2 min_eof bit(1),
  3   126 	2 csline bit(40),	/*ba*/
  3   127 	2 section_ind bit(8),	/*ba*/
  3   128 	2 sync_rdf bit(1),
  3   129 	2 sign_type_temp bit(3),
  3   130 	2 save_switch_88 bit(1),
  3   131 	2 pre_end_sw bit(1),
  3   132 	2 comp_end_sw bit(1),
  3   133 	2 qual_sw bit(1),
  3   134 	2 file_key_area(128) fixed bin(35),
  3   135 	2 prev_qual_key char(5),
  3   136 	2 common_key char(5),
  3   137 	2 com_status bit(32),
  3   138 	2 file_key_size fixed bin,
  3   139 	2 key_qual_size fixed bin,
  3   140 	2 label_field_num fixed bin,
  3   141 	2 tf fixed bin,
  3   142 	2 all_ind fixed bin,
  3   143 	2 file_ptr ptr,
  3   144 	2 work_ptr ptr,
  3   145 	2 qual_ptr ptr,
  3   146 	2 save_lev_line fixed bin,
  3   147  	2 save_lev_col fixed bin;
  3   148 /* END INCLUDE FILE ...   cobol_shared_var.incl.pl1 */
  3   149 
      229 
  4     1 
  4     2 /* BEGIN INCLUDE FILE ... cobol_ext_ddsyn.incl.pl1 */
  4     3 /* Last modified on 06/18/76 by ORN */
  4     4 
  4     5 /**********>UDD>L2COBOL>INCLUDE>A_COBOL_EXT_DDSYN INCLUDE FILE**********/
  4     6 dcl     cobol_ext_ddsyn$cobol_sv_ptr ptr ext;
  4     7 dcl     cobol_sv_ptr ptr defined (  cobol_ext_ddsyn$cobol_sv_ptr);	/*to shared_variables*/
  4     8 dcl 1     cobol_ext_ddsyn$cobol_wkbuf1_tbl ext like   cobol_wkbuf1_tbl;
  4     9 dcl 1     cobol_wkbuf1_tbl defined (  cobol_ext_ddsyn$cobol_wkbuf1_tbl),	/* -250- */
  4    10 	2 wkbuf1 char(1000);
  4    11 dcl 1     cobol_ext_ddsyn$cobol_wkbuf2_tbl ext like   cobol_wkbuf2_tbl;
  4    12 dcl 1     cobol_wkbuf2_tbl defined (  cobol_ext_ddsyn$cobol_wkbuf2_tbl),	/* -125- */
  4    13 	2 wkbuf2 char(500);
  4    14 dcl 1     cobol_ext_ddsyn$cobol_htbl (49) ext like   cobol_htbl;
  4    15 dcl 1     cobol_htbl (49) defined (  cobol_ext_ddsyn$cobol_htbl),	/* -343- */	/*hierarchy table*/
  4    16 	2 level fixed bin,	/*level*/
  4    17 	2 item_length fixed bin,	/*byte length*/
  4    18 	2 occno fixed bin,	/*number of occurrences per OCCURS clause*/
  4    19 	2 nt_rec char(5),	/*write ads in NT*/
  4    20 	2 do_rec char(5),	/*write ads in COM for object of length or occurs DEPENDING*/
  4    21 	2 minivector bit(18),	/*store vector bits not in type9token for inheritance*/
  4    22 	2 nt_rec_valid bit(1),	/*set if nt_rec has been set*/
  4    23 	2 do_rec_valid bit(1),	/*set if do_rec has been set*/
  4    24 	2 occurs_clause bit(1),	/*set for item has OCCURS*/
  4    25 	2 odo_switch bit(1),	/*set for item has occurs depending clause*/
  4    26 	2 occurs_ext bit(1),	/*set for item has occurs extension*/
  4    27 	2 switch_88 bit(1),	/*set for item has associated level 88 items*/
  4    28 	2 exp_redefining bit(1);	/*set for subject of REDEFINES*/
  4    29 /*
  4    30*		3 of_no_interest1 bit(4),
  4    31*		3 value_clause bit(1),
  4    32*		3 of_no_interest2 bit(4),
  4    33*		3 inherit_value bit(1),
  4    34*		3 code_set bit(1),
  4    35*		3 assoc_with_pic_s bit(1),
  4    36*		3 unused  bit(6);
  4    37**/
  4    38 /* END INCLUDE FILE ... cobol_ext_ddsyn.incl.pl1 */
  4    39 
      230 
      231      end cobol_initstatic;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/24/89  0835.1  cobol_initstatic.pl1              >spec>install>MR12.3-1048>cobol_initstatic.pl1
216          1    03/27/82  0431.3  cobol_ext_.incl.pl1               >ldd>include>cobol_ext_.incl.pl1
218          2    11/11/82  1712.8  cobol_fixed_common.incl.pl1       >ldd>include>cobol_fixed_common.incl.pl1
229          3    03/27/82  0439.8  cobol_shared_var.incl.pl1         >ldd>include>cobol_shared_var.incl.pl1
230          4    03/27/82  0439.7  cobol_ext_ddsyn.incl.pl1          >ldd>include>cobol_ext_ddsyn.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 39 ref 47 53 114 115
ch                                     parameter       char(1)                  packed unaligned dcl 194 in procedure "ord_num" ref
                                                                                  191 196
ch                              000105 automatic       char(1)                  packed unaligned dcl 210 in procedure
                                                                                  "cobol_initstatic" set ref 60 76 86 102 107 112
                                                                                  205*
ch_str                 1700            based           varying char(128)        level 2 dcl 228 set ref 70* 73 75 75 80* 82 84 84
                                                                                  90* 92 94* 94 96* 96 104 106 106
ckeys                                  based           char(1)                  array packed unaligned dcl 34 set ref 49*
cm_key                 2632(09)        based           char(5)                  level 2 packed packed unaligned dcl 228 set ref 47
cobol$alloc                     000010 constant        entry                    external dcl 37 ref 43
cobol_com_ptr                          defined         pointer                  dcl 1-25 ref 50 80 92
cobol_ext_$cobol_com_ptr        000012 external static pointer                  dcl 1-24 ref 50 50 80 80 92 92
cobol_ext_ddsyn$cobol_sv_ptr    000014 external static pointer                  dcl 4-6 set ref 43* 43 43 43 43 43 45 45 46 46 47 47
                                                                                  51 51 60 60 65 65 68 68 70 70 73 73 75 75 75 75 76
                                                                                  76 80 80 82 82 84 84 84 84 86 86 90 90 92 92 94 94
                                                                                  94 94 96 96 96 96 102 102 104 104 106 106 106 106
                                                                                  107 107 112 112 114 114 114 114 115 115 115 115
                                                                                  117 117 118 118 119 119 121 121 122 122 123 123
                                                                                  124 124 125 125 126 126 127 127 128 128 129 129
                                                                                  130 130 131 131 132 132 133 133 134 134 135 135
                                                                                  136 136 137 137 138 138 139 139 140 140 141 141
                                                                                  142 142 143 143 144 144 145 145 146 146 147 147
                                                                                  148 148 149 149 150 150 151 151 152 152 153 153
                                                                                  154 154 155 155 156 156 157 157 158 158 159 159
                                                                                  162 162 165 165 166 166 167 167 168 168 169 169
                                                                                  170 170 171 171 172 172 173 173 174 174 175 175
                                                                                  176 176 177 177 178 178 179 179 180 180 181 181
                                                                                  184 184 187 187
cobol_htbl                             defined         structure                array level 1 unaligned dcl 4-15
cobol_sv_ptr                           defined         pointer                  dcl 4-7 set ref 43* 43 43 45 46 47 51 60 65 68 70 73
                                                                                  75 75 76 80 82 84 84 86 90 92 94 94 96 96 102 104
                                                                                  106 106 107 112 114 114 115 115 117 118 119 121
                                                                                  122 123 124 125 126 127 128 129 130 131 132 133
                                                                                  134 135 136 137 138 139 140 141 142 143 144 145
                                                                                  146 147 148 149 150 151 152 153 154 155 156 157
                                                                                  158 159 162 165 166 167 168 169 170 171 172 173
                                                                                  174 175 176 177 178 179 180 181 184 187
cobol_wkbuf1_tbl                       defined         structure                level 1 packed packed unaligned dcl 4-9
cobol_wkbuf2_tbl                       defined         structure                level 1 packed packed unaligned dcl 4-12
coll_array                             based           char(1)                  array packed unaligned dcl 214 ref 205
coll_ptr                        000146 automatic       pointer                  dcl 212 set ref 53* 205
coll_seq                        000106 automatic       char(128)                packed unaligned dcl 210 set ref 53 54* 196
collate                                                builtin function         dcl 39 ref 54
cptrs                                  based           pointer                  array dcl 31 set ref 51*
csv                                    based           fixed bin(24,0)          array dcl 30 set ref 46*
currency                 17(09)        based           char(1)                  level 2 packed packed unaligned dcl 2-26 ref 80 92
dds                                    based           structure                level 1 unaligned dcl 228 set ref 43 43 45
fd_clauses             2763            based           bit(36)                  level 2 packed packed unaligned dcl 228 set ref 115
fd_clauses_ptr           52            based           pointer                  level 2 dcl 228 set ref 115*
fixbin7                         000150 automatic       fixed bin(17,0)          dcl 224 set ref 161* 162* 183* 184*
fixed_common                           based           structure                level 1 unaligned dcl 2-26
i                               000103 automatic       fixed bin(17,0)          dcl 209 set ref 58* 60* 73* 75 75* 82* 84 84 85*
                                                                                  104* 106 106*
inftble                2767            based           bit(8)                   array level 2 packed packed unaligned dcl 228 set
                                                                                  ref 153* 154* 155* 156* 157* 158* 159* 162* 165*
                                                                                  166* 167* 168* 169* 170* 171* 172* 173* 174* 175*
                                                                                  176* 177* 178* 179* 180* 181* 184* 187*
init_cd                 133(34)        based           bit(1)                   level 2 packed packed unaligned dcl 2-26 set ref 50*
keys_ptr                        000100 automatic       pointer                  dcl 32 set ref 47* 49
length                                                 builtin function         dcl 39 ref 73 82 104
m                               000102 automatic       fixed bin(17,0)          dcl 32 set ref 45* 46
mask1x                 2764(12)        based           bit(32)                  level 2 packed packed unaligned dcl 228 set ref 117*
mask2x                 2765(08)        based           bit(32)                  level 2 packed packed unaligned dcl 228 set ref 118*
mask3x                 2766(04)        based           bit(32)                  level 2 packed packed unaligned dcl 228 set ref 119*
null_func                       000000 constant        pointer                  initial dcl 225 ref 51
on                              000104 automatic       fixed bin(17,0)          dcl 209 set ref 65 68 76 86 92* 94 96 96 102 107
                                                                                  196*
prectble               2776(04)        based           bit(32)                  array level 2 packed packed unaligned dcl 228 set
                                                                                  ref 121* 122* 123* 124* 125* 126* 127* 128* 129*
                                                                                  130* 131* 132* 133* 134* 135* 136* 137* 138* 139*
                                                                                  140* 141* 142* 143* 144* 145* 146* 147* 148* 149*
                                                                                  150* 151* 152*
ptr5                     44            based           pointer                  level 2 dcl 228 set ref 114*
size                                                   builtin function         dcl 39 ref 43 43 45
stopper                2632            based           char(1)                  level 2 packed packed unaligned dcl 228 set ref 112*
substr                                                 builtin function         dcl 39 set ref 75 75 84 84 94* 94 96* 96 106 106
transltble             1430            based           char(1)                  array level 2 packed packed unaligned dcl 228 set
                                                                                  ref 60* 65* 68* 76* 86* 102* 107*
val                                    parameter       fixed bin(17,0)          dcl 203 ref 200 205
vector_part            3034(12)        based           bit(128)                 level 2 packed packed unaligned dcl 228 set ref 114

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
char1                                  automatic       char(1)                  packed unaligned dcl 222
cobol_afp                              defined         pointer                  dcl 1-11
cobol_analin_fileno                    defined         pointer                  dcl 1-13
cobol_cmfp                             defined         pointer                  dcl 1-21
cobol_com_fileno                       defined         pointer                  dcl 1-23
cobol_curr_in                          defined         pointer                  dcl 1-53
cobol_curr_out                         defined         pointer                  dcl 1-55
cobol_dfp                              defined         pointer                  dcl 1-27
cobol_eltp                             defined         pointer                  dcl 1-19
cobol_ext_$cobol_afp                   external static pointer                  dcl 1-10
cobol_ext_$cobol_analin_fileno         external static pointer                  dcl 1-12
cobol_ext_$cobol_cmfp                  external static pointer                  dcl 1-20
cobol_ext_$cobol_com_fileno            external static pointer                  dcl 1-22
cobol_ext_$cobol_curr_in               external static pointer                  dcl 1-52
cobol_ext_$cobol_curr_out              external static pointer                  dcl 1-54
cobol_ext_$cobol_dfp                   external static pointer                  dcl 1-26
cobol_ext_$cobol_eltp                  external static pointer                  dcl 1-18
cobol_ext_$cobol_fileno1               external static fixed bin(24,0)          dcl 1-78
cobol_ext_$cobol_hfp                   external static pointer                  dcl 1-28
cobol_ext_$cobol_lpr                   external static char(5)                  packed unaligned dcl 1-95
cobol_ext_$cobol_m1fp                  external static pointer                  dcl 1-30
cobol_ext_$cobol_m2fp                  external static pointer                  dcl 1-32
cobol_ext_$cobol_min1_fileno           external static pointer                  dcl 1-34
cobol_ext_$cobol_min2_fileno_ptr       external static pointer                  dcl 1-36
cobol_ext_$cobol_name_fileno           external static pointer                  dcl 1-38
cobol_ext_$cobol_name_fileno_ptr       external static pointer                  dcl 1-40
cobol_ext_$cobol_ntfp                  external static pointer                  dcl 1-42
cobol_ext_$cobol_options               external static char(120)                packed unaligned dcl 1-97
cobol_ext_$cobol_options_len           external static fixed bin(24,0)          dcl 1-80
cobol_ext_$cobol_pdofp                 external static pointer                  dcl 1-44
cobol_ext_$cobol_pdout_fileno          external static fixed bin(24,0)          dcl 1-82
cobol_ext_$cobol_pfp                   external static pointer                  dcl 1-46
cobol_ext_$cobol_print_fileno          external static fixed bin(24,0)          dcl 1-84
cobol_ext_$cobol_rm2fp                 external static pointer                  dcl 1-48
cobol_ext_$cobol_rmin2_fileno          external static fixed bin(24,0)          dcl 1-86
cobol_ext_$cobol_rmin2fp               external static pointer                  dcl 1-50
cobol_ext_$cobol_rwdd                  external static pointer                  dcl 1-72
cobol_ext_$cobol_rwpd                  external static pointer                  dcl 1-74
cobol_ext_$cobol_sfp                   external static pointer                  dcl 1-56
cobol_ext_$cobol_w1p                   external static pointer                  dcl 1-58
cobol_ext_$cobol_w2p                   external static pointer                  dcl 1-60
cobol_ext_$cobol_w3p                   external static pointer                  dcl 1-62
cobol_ext_$cobol_w5p                   external static pointer                  dcl 1-64
cobol_ext_$cobol_w6p                   external static pointer                  dcl 1-66
cobol_ext_$cobol_w7p                   external static pointer                  dcl 1-68
cobol_ext_$cobol_x1_fileno             external static fixed bin(24,0)          dcl 1-88
cobol_ext_$cobol_x2_fileno             external static fixed bin(24,0)          dcl 1-90
cobol_ext_$cobol_x3_fileno             external static fixed bin(24,0)          dcl 1-92
cobol_ext_$cobol_x3fp                  external static pointer                  dcl 1-70
cobol_ext_$cobol_xlast8                external static bit(1)                   packed unaligned dcl 1-100
cobol_ext_$report_exists               external static bit(1)                   packed unaligned dcl 1-102
cobol_ext_$report_first_token          external static pointer                  dcl 1-14
cobol_ext_$report_last_token           external static pointer                  dcl 1-16
cobol_ext_ddsyn$cobol_htbl             external static structure                array level 1 unaligned dcl 4-14
cobol_ext_ddsyn$cobol_wkbuf1_tbl       external static structure                level 1 packed packed unaligned dcl 4-8
cobol_ext_ddsyn$cobol_wkbuf2_tbl       external static structure                level 1 packed packed unaligned dcl 4-11
cobol_fileno1                          defined         fixed bin(24,0)          dcl 1-79
cobol_hfp                              defined         pointer                  dcl 1-29
cobol_lpr                              defined         char(5)                  packed unaligned dcl 1-96
cobol_m1fp                             defined         pointer                  dcl 1-31
cobol_m2fp                             defined         pointer                  dcl 1-33
cobol_min1_fileno                      defined         pointer                  dcl 1-35
cobol_min2_fileno_ptr                  defined         pointer                  dcl 1-37
cobol_name_fileno                      defined         pointer                  dcl 1-39
cobol_name_fileno_ptr                  defined         pointer                  dcl 1-41
cobol_ntfp                             defined         pointer                  dcl 1-43
cobol_options                          defined         char(120)                packed unaligned dcl 1-98
cobol_options_len                      defined         fixed bin(24,0)          dcl 1-81
cobol_pdofp                            defined         pointer                  dcl 1-45
cobol_pdout_fileno                     defined         fixed bin(24,0)          dcl 1-83
cobol_pfp                              defined         pointer                  dcl 1-47
cobol_print_fileno                     defined         fixed bin(24,0)          dcl 1-85
cobol_rm2fp                            defined         pointer                  dcl 1-49
cobol_rmin2_fileno                     defined         fixed bin(24,0)          dcl 1-87
cobol_rmin2fp                          defined         pointer                  dcl 1-51
cobol_rwdd                             defined         pointer                  dcl 1-73
cobol_rwpd                             defined         pointer                  dcl 1-75
cobol_sfp                              defined         pointer                  dcl 1-57
cobol_w1p                              defined         pointer                  dcl 1-59
cobol_w2p                              defined         pointer                  dcl 1-61
cobol_w3p                              defined         pointer                  dcl 1-63
cobol_w5p                              defined         pointer                  dcl 1-65
cobol_w6p                              defined         pointer                  dcl 1-67
cobol_w7p                              defined         pointer                  dcl 1-69
cobol_x1_fileno                        defined         fixed bin(24,0)          dcl 1-89
cobol_x2_fileno                        defined         fixed bin(24,0)          dcl 1-91
cobol_x3_fileno                        defined         fixed bin(24,0)          dcl 1-93
cobol_x3fp                             defined         pointer                  dcl 1-71
cobol_xlast8                           defined         bit(1)                   packed unaligned dcl 1-101
fixed                                                  builtin function         dcl 39
one_word_in_bits                       automatic       bit(36)                  packed unaligned dcl 226
report_exists                          defined         bit(1)                   packed unaligned dcl 1-103
report_first_token                     defined         pointer                  dcl 1-15
report_last_token                      defined         pointer                  dcl 1-17
unspec                                                 builtin function         dcl 39
x                                      automatic       char(1)                  packed unaligned dcl 220
y                                      automatic       char(1)                  packed unaligned dcl 221

NAMES DECLARED BY EXPLICIT CONTEXT.
char                            001275 constant        entry                    internal dcl 200 ref 56 71 85 99 111
cobol_initstatic                000120 constant        entry                    external dcl 27
ord_num                         001261 constant        entry                    internal dcl 191 ref 64 67 75 84 101 106

NAME DECLARED BY CONTEXT OR IMPLICATION.
index                                                  builtin function         ref 92 196

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1532        1550    1447        1542
Length      2024    1447        16         237      62           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cobol_initstatic                    132 external procedure  is an external procedure.  
ord_num                                 internal procedure  shares stack frame of external procedure cobol_initstatic.  
char                                    internal procedure  shares stack frame of external procedure cobol_initstatic.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cobol_initstatic         000100 keys_ptr                    cobol_initstatic
                         000102 m                           cobol_initstatic
                         000103 i                           cobol_initstatic
                         000104 on                          cobol_initstatic
                         000105 ch                          cobol_initstatic
                         000106 coll_seq                    cobol_initstatic
                         000146 coll_ptr                    cobol_initstatic
                         000150 fixbin7                     cobol_initstatic

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_char_temp     cat_realloc_chars   call_ext_out        return_mac          shorten_stack       ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cobol$alloc

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
cobol_ext_$cobol_com_ptr      cobol_ext_ddsyn$cobol_sv_ptr




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     27 000117        43 000125        45 000137        46 000141        47 000155        49 000163        50 000177
     51 000204        53 000223        54 000225        56 000230        58 000234        60 000241        62 000247
     64 000251        65 000255        67 000264        68 000270        70 000277        71 000304        73 000310
     75 000323        76 000334        78 000343        80 000345        82 000374        84 000405        85 000416
     86 000420        88 000427        90 000431        92 000441        94 000455        96 000463        99 000470
    101 000474       102 000500       104 000507       106 000517       107 000530       109 000537       111 000541
    112 000545       114 000552       115 000556       117 000562       118 000572       119 000600       121 000604
    122 000610       123 000614       124 000622       125 000630       126 000636       127 000644       128 000652
    129 000660       130 000666       131 000672       132 000676       133 000704       134 000712       135 000715
    136 000723       137 000726       138 000734       139 000742       140 000746       141 000750       142 000756
    143 000764       144 000772       145 001000       146 001003       147 001011       148 001017       149 001023
    150 001027       151 001035       152 001043       153 001051       154 001055       155 001061       156 001065
    157 001071       158 001077       159 001103       161 001107       162 001115       163 001124       165 001126
    166 001135       167 001141       168 001144       169 001150       170 001154       171 001160       172 001164
    173 001170       174 001174       175 001200       176 001204       177 001212       178 001216       179 001222
    180 001226       181 001232       183 001234       184 001241       185 001250       187 001252       189 001260
    191 001261       196 001263       198 001274       200 001275       205 001277       207 001305


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
