LISTING FOR  >spec>install>1141>versaterm.ctl
COMPILED BY Multics LISP Compiler, Version 2.13c, July 11, 1983
ON 10/07/88  1209.0 mst Fri
IN BEHALF OF Hirneisen.SysMaint.a



;;; ******************************************************
;;; *                                                    *
;;; * Copyright, (C) Honeywell Bull Inc., 1988           *
;;; *                                                    *
;;; * Copyright (c) 1978 by Massachusetts Institute of   *
;;; * Technology and Honeywell Information Systems, Inc. *
;;; *                                                    *
;;; ******************************************************

;;; HISTORY COMMENTS:
;;;  1) change(86-08-15,Coppola), approve(86-08-15,MCR7516),
;;;     audit(86-09-02,GDixon), install(86-09-04,MR12.0-1146):
;;;     Add Emacs ctl for Versaterm (Macintosh VT100 Term.)
;;;  2) change(88-01-16,GDixon), approve(88-09-20,MCR8002),
;;;     audit(88-10-07,Blair), install(88-10-07,MR12.2-1141):
;;;      A) Added support for longer versaterm line and page lengths.  The
;;;         user's current tty_ page and line length modes are used by Emacs.
;;;      B) Changed DCTL-clear-rest-of-screen to reset scroll mode.  This
;;;         allows escape via ^X CR to scroll up the Emacs buffers as nonEmacs
;;;         output appears.
;;;      C) Changed all places which reset scroll mode to use the proper
;;;         terminal size (either 80 char lines or 132 char lines).
;;;      D) Remove all region scrolling functions, as they have never worked
;;;         and were never enabled.  Emacs does not properly maintain X and Y
;;;         variables, which the scrolling software depends upon.
;;;                                                      END HISTORY COMMENTS

;;;
;;;
;;;	VersaTerm control package (Macintosh VT100/102 Terminal Emulator)
;;;	 Created:  20 May 1983 by B. Margolin from VT132 CTL
;;;	 Modified: 2 November 1984 by B. Margolin to remove unexecuted
;;;		 forms from DCTL-clear-rest-of-screen and DCTL-kill-line.
;;;
;;;                  May, 1986 by R. Coppola for VersaTerm (tm). Works only for
;;;		 VersaTerm Rev2.20 and higher.

(%include e-macros)

(declare (*expr Rprinc Rtyo DCTL-standard-set-modes))
(declare (special X Y screenheight screenlinelen ospeed given-tty-type))
(declare (special idel-lines-availablep idel-chars-availablep tty-type))
(declare (special DCTL-prologue-availablep DCTL-epilogue-availablep
	        DCTL-underline-mask))
(declare (special region-scroll-availablep scroll-region-top scroll-region-bottom DCTL-insert-mode-on))
(declare (special DCTL-oflow-enabled DCTL-have-nonstandard-setmodes))

(declare (defpl1 not_ascii_ "" (char (*) aligned) (return bit (1) aligned)))
(declare (defpl1 get-screen-size "vt1xx_ctl_util_$get_screen_size" (return fixed bin)
	       (return fixed bin)))
(declare (defpl1 vt1xx_ctl_util_$re_enable_oflow ""))


;;; Macro to output escape sequence
(defun vt102-escape macro (form)
       (list 'Rprinc
	   (apply 'catenate
		(cons (ItoC 33)
		      (cons "[" (cdr form))))))

;;; Output n to the terminal in decimal.
(defun DCTL-outdec (n)			;BSG 3/23/79
       (let ((have-output))
	  (do digi '(1000. 100. 10. 1) (cdr digi) (null digi)
	      ((lambda (rem)
		     (cond ((or have-output (> rem 0) (= (car digi) 1))
			  (Rtyo (+ 60 rem))
			  (setq have-output t)))
		     (setq n (\ n (car digi))))
	       (// n (car digi))))))


;;; Output padding, based on n pad characters at 9600-baud
(defun DCTL-pad (n)
       (or DCTL-oflow-enabled			;flow control should do it
	 (do-times (// (* n ospeed) 960.)
		 (Rtyo 0))))

;;; Initialize terminal and terminal control package.
(defun DCTL-init ()
   (let ((screensize (get-screen-size)))
       (setq DCTL-prologue-availablep t DCTL-epilogue-availablep t)
       (setq DCTL-underline-mask t)
       (setq screenheight (cadr screensize)
	   screenlinelen (car screensize))
       (setq idel-lines-availablep t
	   idel-chars-availablep t)
       (setq DCTL-oflow-enabled
	   (memq given-tty-type
	      '(versaterm_oflow versaterm_132c_oflow versaterm220_oflow versaterm220_132c_oflow)))
       (setq tty-type 'versaterm)
       (DCTL-prologue)
       (DCTL-home-cursor)
       (DCTL-clear-rest-of-screen)))

;;; Initialization that must also be done after a QUIT
(defun DCTL-prologue ()
       (Rtyo 33) (Rprinc "<")			;set ANSI mode from VT52 mode
       (vt102-escape "?4l")			;reset scroll mode (jump)
       (vt102-escape "?6l")			;reset absolute origin mode
       (vt102-escape "r")			;reset scroll region
       (vt102-escape "20l")			;turn off auto-CRLF
       (cond ((> screenlinelen 100.)
	    (vt102-escape "?3h"))
	   (t (vt102-escape "?3l")))
       (DCTL-pad 102.)
       (setq DCTL-insert-mode-on nil)
       (and DCTL-oflow-enabled (vt1xx_ctl_util_$re_enable_oflow)))


;;; Restore terminal to outside state
(defun DCTL-epilogue ()
       (vt102-escape "?4l")			;reset scroll mode (jump)
       (vt102-escape "?6l")			;reset absolute origin mode
       (vt102-escape "r")			;reset scroll region
       (DCTL-pad 4)
       (setq DCTL-insert-mode-on nil))


;;; Move terminal's cursor to desired position.
(defun DCTL-position-cursor (x y)
       (vt102-absolute-position x y)
       (setq X x Y y))


;;; Perform absolute cursor positioning
(defun vt102-absolute-position (x y)
       (vt102-escape)
       (if (not (= y 0))
	 (DCTL-outdec (1+ y)))
       (if (not (= x 0))
	 (Rprinc ";")
	 (DCTL-outdec (1+ x)))
       (Rprinc "H"))


;;; Output string.
(defun DCTL-display-char-string (string)
       (let ((strx (stringlength string)))
	  (cond ((= strx 0))		;bug in redisplay calls with no string
	        (t (cond (DCTL-insert-mode-on
		         (setq DCTL-insert-mode-on nil)))
		 (DCTL-output-underlined-string string)
		 (setq X (+ X strx))))))

(defun DCTL-output-underlined-string (string)
       (cond ((zerop (not_ascii_ string))	;optimize standard string
	    (Rprinc string))
	   (t (let ((un nil))
		 (mapc
		   '(lambda (ch)
			  (cond ((< (CtoI ch) 400)	;normal char
			         (and un
				    (vt102-escape "m"))	;out of underline mode
			         (setq un nil)
			         (Rprinc ch))
			        (t	;underlined char (400-bit set)
				(or un (vt102-escape "4m"))
				(setq un t)
				(Rtyo (- (CtoI ch) 400)))))
		   (explodec string))
		 (and un (vt102-escape "m"))))))

;;; Home cursor to upper left corner.
(defun DCTL-home-cursor ()
       (setq X 0 Y 0)
       (vt102-escape H))

;;; Clear to end of screen.
(defun DCTL-clear-rest-of-screen ()
       (vt102-escape "?4l")			;reset scroll mode (jump)
       (vt102-escape "?6l")			;reset absolute origin mode
       (vt102-escape "r")			;reset scroll region
       (vt102-escape J)
       (cond ((> screenlinelen 100.)		;set proper screen width
	    (vt102-escape "?3h"))
	   (t (vt102-escape "?3l"))))


;;; Clear to end of line.
(defun DCTL-kill-line ()
       (vt102-escape K))

;;; Insert n lines at the current cursor position
(defun DCTL-insert-lines (n)
       (do-times n
       (vt102-escape "L")))


;;; Delete n lines at the current cursor position
(defun DCTL-delete-lines (n)
       (do-times n
       (vt102-escape "M")))


;;; Insert given text at the cursor
(defun DCTL-insert-char-string (string)
       (vt102-escape)
       (DCTL-outdec (stringlength string))
       (Rprinc "@")
       (DCTL-output-underlined-string string)
       (setq X (+ X (stringlength string))))


;;; Delete N characters at the cursor
(defun DCTL-delete-chars (n)
       (vt102-escape)
       (and (> n 1) (DCTL-outdec n))
       (Rprinc "P")))


;;; Replacement for e_pl1_$set_emacs_tty_modes that enables oflow if necessary
(or (and (boundp 'DCTL-have-nonstandard-setmodes)
         DCTL-have-nonstandard-setmodes)
    (progn (putprop 'DCTL-standard-set-modes
		(get 'e_pl1_$set_emacs_tty_modes 'subr)
		'subr)
	 (setq DCTL-have-nonstandard-setmodes t)))

(defun e_pl1_$set_emacs_tty_modes ()
       (DCTL-standard-set-modes)
       (and DCTL-oflow-enabled (vt1xx_ctl_util_$re_enable_oflow)))

(setq DCTL-oflow-enabled nil)			;above gets called once before DCTL-init


;;; Load in special key definitions for VT1XX terminals
(cond ((status feature Emacs)			;but only in Emacs
       (load (list (car (namelist (truename infile))) "vt1xx_keys_"))))


;;; REGION SCROLLING DOESN'T WORK because X and Y variables aren't maintained properly by emacs.
;;; Define the bounds of the scroll region.  Relative cursor
;;; movement can only be done within this region.
;;;(defun DCTL-define-scroll-region (top bottom)
;;;       (cond ((and (= top scroll-region-top) (= bottom scroll-region-bottom)))
;;;	   (t (setq scroll-region-top top scroll-region-bottom bottom)
;;;	      (Rtyo 33) (Rprinc "7")		;push cursor position
;;;	      (Rtyo 33) (Rprinc "[")		;redefine scroll region (homes)
;;;	      (cond ((not (= top 0))
;;;		   (DCTL-outdec (1+ top))))
;;;	      (cond ((not (= bottom (1- screenheight)))
;;;		   (Rprinc ";")
;;;		   (DCTL-outdec (1+ bottom))))
;;;	      (Rprinc "r")
;;;	      (Rtyo 33) (Rprinc "8")	;pop cursor position
;;;	      (DCTL-pad 5.))))

;;; Move text in scroll region up n lines (inserts whitespace at bottom)
;;;(defun DCTL-scroll-up-region (nlines bottom)
;;;       (DCTL-define-scroll-region Y bottom)
;;;       (let ((oldy Y))
;;;	  (Rtyo 33) (Rprinc "7")		;save cursor position
;;;	  (DCTL-position-cursor 0 bottom)
;;;	  (do-times nlines
;;;		  (Rtyo 12) (DCTL-pad 5.))
;;;	  (Rtyo 33) (Rprinc "8")
;;;	  (setq Y oldy)))

;;; Move text in scroll region down n lines (inserts whitespace at top)
;;;(defun DCTL-scroll-down-region (nlines bottom)
;;;       (DCTL-define-scroll-region Y bottom)
;;;       (do-times nlines
;;;	       (Rtyo 33) (Rprinc "M") (DCTL-pad 5.)))

INCLUDE FILE >ldd>include>e-macros.incl.lisp

;;; BEGIN INCLUDE FILE e-macros.incl.lisp

;;; Declares for use by Emacs programs and extenstions.  Also loads
;;; in e_macros_, which contains macro definitions.

;;; HISTORY COMMENTS:
;;;  1) change(85-01-01,Margolin), approve(86-02-24,MCR7186),
;;;     audit(86-08-12,Harvey), install(86-08-20,MR12.0-1136):
;;;     Written: New Year's Day 1985, by excerpting the old e-macros.incl.lisp
;;;     and leaving out all the definitions and qwerty junk (don't ask).
;;;  2) change(86-02-24,Margolin), approve(86-02-24,MCR7325),
;;;     audit(86-08-12,Harvey), install(86-08-20,MR12.0-1136):
;;;     Alphabetized declarations, and added more declarations for documented
;;;     functions, and also for some undocumented functions.
;;;                                                      END HISTORY COMMENTS

(%include backquote)

(declare					;basic editor stuff
  (*expr apply-catenate
         assert-minor-mode backward-char backward-n-chars charlisten
         charset-member command-abort command-quit
         copy-region cur-hpos curline-as-string curbuf-as-string curchar
         curline-as-string delete-char delete-word destroy-buffer-contents
         dont-notice-modified-buffer e_cline_ e_lap_$reverse-search-string
         e_lap_$trim empty-buffer-p error_table_ establish-local-var
         exchange-point-and-mark firstlinep forward-char forward-n-chars
         forward-regexp-search-in-line forward-search forward-search-in-line
         get-char get-search-string go-to-beginning-of-buffer
         go-to-beginning-of-line go-to-buffer go-to-end-of-buffer
         go-to-end-of-line go-to-hpos go-to-mark go-to-or-create-buffer
         insert-char insert-string kill-backwards-to-mark kill-forward-to-mark
         kill-pop kill-to-end-of-line killsave-string lastlinep loadfile
         looking-at lowercase map-over-emacs-commands mark-on-current-line-p
         mark-reached merge-kills-forward merge-kills-reverse move-mark
         minibuf-response minibuffer-clear
         negate-minor-mode new-line next-line nullstringp pathname_
         pathname_$component point-mark-to-string
         point>markp prev-line printable process-char produce-named-mark-list
         read-in-file release-mark reverse-search
         register-local-var reverse-search-in-line
         search-back-first-charset-line
         search-back-first-not-charset-line search-failure-annunciator
         search-for-first-charset-line search-for-first-not-charset-line
         set-emacs-epilogue-handler set-buffer-self-destruct set-key
         set-mark-here set-mark set-perm-key set-the-mark set-the-mark-here
         skip-to-whitespace skip-to-whitespace-in-line
         wipe-point-mark wipe-region write-out-file
         trim-minibuf-response yesp yank)
  (*fexpr define-autoload-lib))

(declare					;redisplay stuff
  (*expr end-local-displays init-local-displays ring-tty-bell
         local-display-generator local-display-generator-nnl
         next-screen prev-screen local-display-current-line
         find-buffer-in-window select-buffer-window window-info
         select-buffer-find-window select-other-window select-window
         buffer-on-display-in-window redisplay full-redisplay))

(declare					;extended stuff
  (*expr forward-word backward-word skip-over-whitespace skip-back-whitespace
         skip-over-whitespace-in-line skip-back-whitespace-in-line
         skip-back-to-whitespace skip-to-whitespace rubout-char date
         display-buffer-as-printout delete-white-sides lefthand-char
         format-to-col whitespace-to-hpos line-is-blank decimal-rep
         register-option minibuffer-clear))

(declare (*lexpr display-error display-com-error display-error-noabort
	       display-error-remark comout-get-output
	       display-com-error-noabort minibuffer-print
	       minibuffer-response trim-minibuffer-response
	       intern-minibuffer-response minibuffer-remark
	       minibuffer-print-noclear report-error report-error-noabort))

(declare (special TAB NL SPACE ESC curpointpos current-buffer dont-stash
	        numarg der-wahrer-mark fpathname fill-column completion-list
	        curlinel BACKSPACE read-only-flag buffer-modified-flag
	        previous-buffer current-buffer-mode env-dir process-dir
	        minibuffer-end-string NLCHARSTRING undo null-pointer))

;;; Load in macro packages
(eval-when (eval compile)
  (or (status feature e-defcom)
      (progn (load (catenate (car (namelist (truename infile))) ">e_define_command_"))
	   (sstatus feature e-defcom)))
  (or (status feature e-macros)
      (load (catenate (car (namelist (truename infile))) ">e_macros_"))))

;;; END INCLUDE FILE e-macros.incl.lisp

INCLUDE FILE >ldd>include>backquote.incl.lisp

;;;
;;; backquote.incl.lisp - BSG 10/9/79
;;; Loads lisp_backquote_ into either the compiler or interpreter
;;; environment.
;;;
;;; Modified 10/30/82 by Richard Lamson to use eval-when and
;;;				   (status feature backquote)
;;;
(eval-when (eval compile)
  (or (status feature backquote)
      (load (catenate (car (namelist (truename infile))) ">lisp_backquote_"))))

			Functions Defined

Name			Offset		Offset		Name


DCTL-clear-rest-of-screen        626		   0		not_ascii_
DCTL-delete-chars                763		   32		get-screen-size
DCTL-delete-lines                710		   74		vt1xx_ctl_util_$re_enable_oflow
DCTL-display-char-string         443		   104		DCTL-outdec
DCTL-epilogue                    342		   160		DCTL-pad
DCTL-home-cursor                 612		   212		DCTL-init
DCTL-init                        212		   257		DCTL-prologue
DCTL-insert-char-string          730		   342		DCTL-epilogue
DCTL-insert-lines                670		   370		DCTL-position-cursor
DCTL-kill-line                   663		   404		vt102-absolute-position
DCTL-outdec                      104		   443		DCTL-display-char-string
DCTL-output-underlined-string    474		   474		DCTL-output-underlined-string
DCTL-pad                         160		   612		DCTL-home-cursor
DCTL-position-cursor             370		   626		DCTL-clear-rest-of-screen
DCTL-prologue                    257		   663		DCTL-kill-line
e_pl1_$set_emacs_tty_modes       1004		   670		DCTL-insert-lines
get-screen-size                  32		   710		DCTL-delete-lines
not_ascii_                       0		   730		DCTL-insert-char-string
vt102-absolute-position          404		   763		DCTL-delete-chars
vt1xx_ctl_util_$re_enable_oflow    74		   1004		e_pl1_$set_emacs_tty_modes





			Functions Referenced

CtoI                                    DCTL-prologue                           get-screen-size
DCTL-clear-rest-of-screen               DCTL-standard-set-modes                 not_ascii_
DCTL-home-cursor                        Rprinc                                  stringlength
DCTL-outdec                             Rtyo                                    vt102-absolute-position
DCTL-output-underlined-string           explodec                                vt1xx_ctl_util_$re_enable_oflow
DCTL-pad                                                                        


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
