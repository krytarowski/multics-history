	COMPILATION LISTING OF SEGMENT cobol_print_diag
	Compiled by: Multics PL/I Compiler, Release 31b, of April 24, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 05/24/89  1017.1 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
       17*     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
       18*     MCR8060 cobol_print_diag.pl1 Reformatted code to new Cobol standard.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 /* Modified on 10/29/82 by FCH, [5.1-3], last diag was being suppressed, BUG542(phx13372) */
       23 /* Modified on 12/28/81 by FCH, [5.1-2], print generated RW source line if diags, phx12121(BUG525) */
       24 /* Modified on 11/25/81 by FCH, [5.1-1], add main prog to include file table, BUG519(phx11818) */
       25 /* Modified on 09/01/81 by FCH, [5.0-1], check for eof while ignoring report writer lines, BUG498 */
       26 /* Modified on 12/26/79 by MHD, [4.2-3], change to aid readability */
       27 /* Modified on 12/06/79 by MHD, [4.2-2], set 1INX leveling message to high */
       28 /* Modified on 11/20/79 by MHD, [4.2-1], check for eof when ignoring debug lines */
       29 /* Modified on 10/18/79 by MHD, [4.1-1], deleted unused parameter */
       30 /* Modified on 07/11/79 by FCH, [4.0-3], debug statement */
       31 /* Modified on 04/09/78 by FCH, [4.0-2], [3.0-2] wiped out */
       32 /* Modified on 02/26/79 by FCH, [4.0-1], option -levsv added */
       33 /* Modified on 10/31/78 by RAL, [3.0-2], Added leveling from expand_cobol_source for listing */
       34 /* Modified on 07/26/78 by RAL, [3.0-1], Corrected length of diag */
       35 /* Modified since Version 3.0.     */
       36 
       37 
       38 
       39 
       40 
       41 
       42 
       43 /* format: style3 */
       44 cobol_print_diag:
       45      proc;
       46 
       47 
       48 /* This program accepts as input a pointer to a source or diag token.  Information from the source token starts */
       49 /* a stack, and all diags for that source line are added to the stack  in column number, diag number order. */
       50 /* When a new source token is encountered, the stack is put out  as a source line, diag reference line and */
       51 /* diags(if any), and the new source starts another stack.  The diags are looked up in a separate diag */
       52 /* file, which is creates and maintained by a separate program ("dfile").  A diag may contain 1 parameter. */
       53 /* Page headers are put out as required.  Any diags not associated with the current source line are put out */
       54 /* immediatly after the line number and column number. */
       55 
       56 /*	1	1NUC(1)		2	2NUC(3)
       57*	3	1TBL(1)		4	2TBL(3)
       58*	5	1SRT(3)		6	2SRT(4)
       59*	7	1SEG(2)		8	2SEG(4)
       60*	9	1LIB(2)		10	2LIB(4)
       61*	11	1DEB(2)		12	2DEB(3)
       62*	13	1IPC(2)		14	2IPC(3)
       63*	15	1SEQ(1)		16	2SEQ(3)
       64*	17	1REL(2)		18	2REL(3)
       65*	19	1INX(4)		20	2INX(4)
       66*	21	1RPW(4)		22	2RPW(4)
       67*	23	1COM(3)		24	2COM(3)
       68*	25	1EXT(5)		26	2EXT(5)
       69**/
       70 
       71 declare	fm_name		(26) char (4)
       72 			init ("1NUC", "2NUC", "1TBL", "2TBL", "1SRT", "2SRT", "1SEG", "2SEG", "1LIB", "2LIB",
       73 			"1DEB", "2DEB", "1IPC", "2IPC", "1SEQ", "2SEQ", "1REL", "2REL", "1INX", "2INX", "1RPW",
       74 			"2RPW", "1COM", "2COM", "1EXT", "2EXT");
       75 
       76 declare	level_num		(26) fixed bin init (1, 3, 1, 3, 3, 4, 2, 4, 2, 4, 2, 3, 2, 3, 1, 3,
       77 						/*[4.2-2]*/
       78 			2, 3, 4, 4, 4, 4, 3, 3, 5, 5);
       79 
       80 
       81 
       82 	pbuf_ptr = addr (p_buf);
       83 	st_ptr = addr (status);
       84 
       85 	do i = 1 to 8;
       86 	     dno_run_index (i) = 0;
       87 	end;
       88 
       89 	dno_count = 0;
       90 	t_flag = "0"b;
       91 	run_no = 0;
       92 	all_done = "0"b;
       93 	eof_prt = "0"b;
       94 	no_diag = "0"b;
       95 	addr (new_line_character) -> bit9 = "000001010"b;
       96 
       97 	i = 0;
       98 	s = 1;
       99 
      100 	call sort_diag;
      101 
      102 	if no_diag & ^fixed_common.options.exs
      103 	then return;
      104 
      105 	d_ref = "0"b;
      106 	l_first = null ();
      107 	l_current = null ();
      108 	ad_nl = addr (nl);
      109 	ad_hof = addr (hof);
      110 
      111 	d_string_ptr = addr (diag_file.diag_table (d_t_size + 1));
      112 
      113 	if fixed_common.options.exs
      114 	then do;
      115 
      116 		call cobol_version$header (multics_hdr, multics_hdr_len);
      117 		call cobol_put_rec (st, cobol_ext_$cobol_hfp, 0, addr (multics_hdr), multics_hdr_len);
      118 
      119 	     end;
      120 
      121 	i_limit = i;
      122 	i = 1;
      123 
      124 	do while ("1"b);
      125 
      126 rd:
      127 	     call cobol_swf_get (cobol_pfp, status, in_ptr, ln);
      128 
      129 /*[4.2-1]*/
      130 	     if status_right ^= "0"b			/*[4.2-1]*/
      131 	     then eof_prt = "1"b;			/*[4.2-1]*/
      132 	     else if substr (source.image, 1, 6) = "~~~~~~"
      133 						/*[4.2-1]*/
      134 	     then go to rd;				/*[5.1-3]*/
      135 	     else if i <= i_limit			/*[5.1-2]*/
      136 	     then if substr (source.image, 1, 6) = "::::::"
      137 						/*[5.1-2]*/
      138 		then if ^sev3 ()			/*[5.1-2]*/
      139 		     then go to rd;			/*[5.1-2]*/
      140 		     else ;			/*[5.1-2]*/
      141 		else ;				/*[5.1-2]*/
      142 	     else if substr (source.image, 1, 6) = "::::::"
      143 						/*[5.1-2]*/
      144 	     then go to rd;
      145 
      146 	     call proc_source;
      147 
      148 	     if status_right ^= "0"b
      149 	     then do;
      150 		     call close_it;
      151 		     return;
      152 		end;
      153 
      154 /*[5.1-3]*/
      155 	     if i <= i_limit
      156 	     then if ptr_array (i) -> message.line = l_source.line
      157 		then call proc_diag;
      158 
      159 	end;					/* END MAIN LOOP */
      160 
      161 sev3:
      162      proc returns (bit (1));
      163 
      164 /*[5.1-2]*/
      165 dcl	(j, N, R)		fixed bin,
      166 	P		ptr;
      167 
      168 /*[5.1-2]*/
      169 	do j = i by 1 to i_limit;
      170 
      171 /*[5.1-2]*/
      172 	     P = ptr_array (j);
      173 
      174 /*[5.1-2]*/
      175 	     if source.line > P -> message.line
      176 	     then return ("0"b);
      177 
      178 /*[5.1-2]*/
      179 	     R = P -> message.run;			/*[5.1-2]*/
      180 	     N = P -> message.number;
      181 
      182 /*[5.1-2]*/
      183 	     if diag_file.diag_table.d_type (diag_file.run_table.base (R) + N) = 3
      184 	     then return ("1"b);
      185 
      186 /*[5.1-2]*/
      187 	end;
      188 
      189 /*[5.1-2]*/
      190 	return ("0"b);
      191 
      192      end;
      193 
      194 
      195 proc_diag:
      196      proc;
      197 
      198 /* Process diagnostic token. */
      199 
      200 	l_current = l_first;
      201 
      202 	do while ("1"b);
      203 
      204 	     diag_cnt = diag_cnt + 1;
      205 
      206 	     if diag_cnt > 9
      207 	     then do while ("1"b);
      208 
      209 		     i = i + 1;
      210 
      211 /*[5.1-3]*/
      212 		     if i > i_limit
      213 		     then return;
      214 
      215 		     if ptr_array (i) -> message.line ^= l_diag.line
      216 		     then return;
      217 
      218 		end;
      219 
      220 	     p = l_current;
      221 	     l_current = l_diag.next;
      222 
      223 	     if l_current = null ()
      224 	     then do;
      225 		     p2 = l_current;
      226 		     old_sw = "1"b;
      227 
      228 		     call al_dt;
      229 
      230 		     p -> l_diag.next = l_current;
      231 		     l_diag.next = p2;
      232 		end;
      233 
      234 	     i = i + 1;
      235 
      236 /*[5.1-3]*/
      237 	     if i > i_limit
      238 	     then return;
      239 
      240 	     if ptr_array (i) -> message.line ^= l_diag.line
      241 	     then return;
      242 
      243 	end;
      244 
      245      end;
      246 
      247 
      248 
      249 proc_source:
      250      proc;
      251 
      252 
      253 	if l_first ^= null ()
      254 	then do;					/* Put out the previous source and diagnostics. */
      255 
      256 		call start_proc_source;
      257 
      258 /* Construct the diagnostic in a temp. */
      259 
      260 		l_current = l_source.next;
      261 		diag_sw = "0"b;
      262 
      263 		if l_current = null ()
      264 		then call last_diag;
      265 		else call next_diag;
      266 
      267 	     end;					/* Start a new stack with a new source line. */
      268 
      269 	if eof_prt
      270 	then do;
      271 		status_right = "1"b;
      272 		return;
      273 	     end;
      274 
      275 	if in_ptr = null ()
      276 	then return;
      277 
      278 	if fixed_common.date_comp_ln ^= 0
      279 	then if source.line = fixed_common.date_comp_ln
      280 	     then do;
      281 
      282 		     call date_time_ (cobol_$sym_base_ptr -> symbol_block_header.object_creation_time, date_time);
      283 
      284 		     s_start = index (source.image, "-") + 9;
      285 		     s_length = s_start + 27;
      286 
      287 		end;
      288 
      289 	     else s_length = source.length;
      290 
      291 	else s_length = source.length;
      292 
      293 	call cobol_allo_tm (l_ptr, 24 + s_length);
      294 
      295 	l_first = l_ptr;
      296 	l_source.next = null ();
      297 	l_source.type = source.type;
      298 	l_source.line = source.line;
      299 	l_source.info = source.info;
      300 	l_source.length = s_length;
      301 
      302 	substr (l_source.image, 1, s_length) = substr (source.image, 1, s_length);
      303 
      304 	if fixed_common.date_comp_ln ^= 0
      305 	then if source.line = fixed_common.date_comp_ln
      306 	     then substr (l_source.image, s_start, 28) = ". " || date_time || "." || new_line_character;
      307 
      308 	diag_cnt = 0;
      309 
      310      end;
      311 
      312 sort_diag:
      313      proc;
      314 
      315 declare	(LINE, ICOL, JCOL, ILEN, JLEN)
      316 			fixed bin;
      317 
      318 declare	p		ptr;
      319 
      320 declare	1 fake_message,
      321 	  2 size		fixed bin,
      322 	  2 line		fixed bin,
      323 	  2 column	fixed bin;
      324 
      325 	p = addr (fake_message);
      326 	p -> message.line = 0;
      327 	p -> message.column = 0;
      328 	ptr_array (0) = p;
      329 
      330 /*[4.2-3]*/
      331 /* Rewrote to aid readability */
      332 
      333 	do i = 1 by 1 to 3000;
      334 
      335 	     LINE = 0;
      336 
      337 	     do while (LINE = 0);
      338 
      339 		call cobol_swf_get (cobol_dfp, status, in_ptr, ln);
      340 
      341 		if status_right ^= "0"b
      342 		then do;
      343 			if i = 1
      344 			then no_diag = "1"b;	/*[5.3-1]*/
      345 			i = i - 1;
      346 			return;
      347 		     end;
      348 
      349 		LINE = in_ptr -> message.line;
      350 
      351 
      352 	     end;
      353 
      354 
      355 	     if i ^= 1
      356 	     then do;
      357 		     j = i - 1;
      358 
      359 		     ILEN = in_ptr -> message.line;
      360 		     JLEN = ptr_array (j) -> message.line;
      361 		     ICOL = in_ptr -> message.column;
      362 		     JCOL = ptr_array (j) -> message.column;
      363 
      364 		     do while (ILEN < JLEN | (ILEN = JLEN & ICOL < JCOL));
      365 
      366 			ptr_array (j + 1) = ptr_array (j);
      367 
      368 			j = j - 1;
      369 
      370 			JLEN = ptr_array (j) -> message.line;
      371 			JCOL = ptr_array (j) -> message.column;
      372 
      373 		     end;
      374 
      375 		     ptr_array (j + 1) = in_ptr;
      376 		end;
      377 
      378 	     else ptr_array (1) = in_ptr;
      379 
      380 	end;
      381 
      382 	call ioa_ ("cobol: There are over 3000 diagnostics in this program, only the first 3000 will be printed");
      383 
      384      end;
      385 
      386 
      387 start_proc_source:
      388      proc;
      389 
      390 /* set up the print line */
      391 
      392 	string (source_ln.front) = "";
      393 
      394 	if l_source.line > 0
      395 	then do;
      396 		eln_index = l_source.line;
      397 		reln_ptr = addr (eln_tab (eln_index));
      398 		part1 = " ";
      399 		t_fno = eln_tab.fno (eln_index);
      400 
      401 		if t_fno ^= 0
      402 		then call ioa_$rsnnl ("^d", part1, 4, t_fno);
      403 
      404 		source_ln.margin = part1;
      405 		t_lno = eln_tab.lno (eln_index);
      406 
      407 		call ioa_$rsnnl ("^d", source_ln.isn, 7, t_lno);
      408 
      409 	     end;
      410 
      411 	if l_source.next ^= null ()			/* set up diag reference line */
      412 	then do;
      413 		l_current = l_source.next;
      414 		diag_ref = 0;
      415 		save_col = 0;
      416 		ref_line = " ";
      417 
      418 		do while (l_current ^= null ());	/* scan the diags in the stack */
      419 
      420 		     if l_diag.col = 0
      421 		     then l_diag.col = 1;
      422 
      423 		     if save_col ^= l_diag.col
      424 		     then do;			/* set a ref no if col no different */
      425 
      426 			     diag_ref = diag_ref + 1;
      427 			     call ioa_$rsnnl ("^d", ch1, ioa_len, diag_ref);
      428 
      429 			     substr (ref_line, l_diag.col, 1) = ch1;
      430 			     save_col = l_diag.col;
      431 
      432 			end;
      433 
      434 		     call ioa_$rsnnl ("^d", l_diag.ref, ioa_len, diag_ref);
      435 
      436 		     l_current = l_diag.next;
      437 		end;
      438 
      439 		ref_cur_char = 1;
      440 
      441 	     end;
      442 
      443 	cur_char = 1;
      444 
      445 /* put the source line in as many print lines as necessary */
      446 
      447 	do while ("1"b);
      448 
      449 	     str_len = l_source.length;
      450 	     substr (source_ln.text, 1, str_len) = substr (l_source.image, cur_char, str_len);
      451 	     pbuf_len = str_len + 12;
      452 
      453 	     if fixed_common.options.exs
      454 	     then do;
      455 
      456 		     if substr (l_source.image, 7, 1) = "/"
      457 		     then if str_len > 6
      458 			then call cobol_put_rec (st, cobol_ext_$cobol_hfp, 0, addr (ff_char), 1);
      459 
      460 		     call cobol_put_rec (st, cobol_ext_$cobol_hfp, 0, pbuf_ptr, pbuf_len);
      461 
      462 		end;
      463 
      464 	     if l_source.next ^= null ()
      465 	     then do;				/* Put source and diag reference line out. */
      466 
      467 		     t_buf = p_buf;
      468 		     len_t1 = pbuf_len;		/* [3.0-1] */
      469 		     t_flag = "1"b;
      470 		     string (source_ln.front) = "";
      471 
      472 		     substr (source_ln.text, 1, str_len) = substr (ref_line, ref_cur_char, str_len);
      473 
      474 		     pbuf_len = str_len + 12;
      475 
      476 /*[4.0-1]*/
      477 		     if fixed_common.options.exs & diag_ref > 0
      478 		     then call cobol_put_rec (st, cobol_ext_$cobol_hfp, 0, pbuf_ptr, pbuf_len);
      479 
      480 		     len_t2 = pbuf_len;
      481 		     ref_cur_char = ref_cur_char + str_len;
      482 
      483 		end;
      484 
      485 	     l_source.length = l_source.length - str_len;
      486 
      487 	     if l_source.length = 0
      488 	     then return;
      489 
      490 	     string (source_ln.front) = "";
      491 	     cur_char = cur_char + str_len;
      492 	end;
      493 
      494      end;
      495 
      496 next_diag:
      497      proc;
      498 
      499 	do while ("1"b);
      500 
      501 	     if l_current = null ()
      502 	     then do;
      503 		     call last_diag;
      504 		     return;
      505 		end;
      506 	     else call proc_dt;
      507 
      508 	end;
      509      end;
      510 
      511 last_diag:
      512      proc;
      513 
      514 	if l_first ^= null ()
      515 	then do;
      516 		l_ptr = l_first;
      517 		call cobol_allo_tm$free_tm (l_ptr);
      518 
      519 	     end;
      520 
      521 	if diag_sw
      522 	then do;
      523 		string (source_ln.front) = "";
      524 
      525 /*[4.0-1]*/
      526 		if fixed_common.options.exs & diag_ref > 0
      527 		then call cobol_put_rec (st, cobol_ext_$cobol_hfp, 0, pbuf_ptr, 1);
      528 
      529 	     end;
      530 
      531      end;
      532 
      533 proc_dt:
      534      proc;
      535 
      536 /* This routine formats and issues a diagnostic to the listing file */
      537 
      538 	run_no = l_diag.run;
      539 
      540 	if run_no < 0 | run_no > diag_file.r_t_size
      541 	then do;
      542 		call DEL_DIAG_ENTRY;
      543 		return;
      544 	     end;
      545 
      546 	if l_diag.num > diag_file.run_table.size (run_no) | l_diag.num < 0
      547 	then do;
      548 		call DEL_DIAG_ENTRY;
      549 		return;
      550 	     end;
      551 
      552 	ac_diag = diag_file.run_table.base (run_no) + l_diag.num;
      553 
      554 	if l_diag.num ^= 0
      555 	then if diag_table.d_len (ac_diag) = 0
      556 	     then do;
      557 		     call DEL_DIAG_ENTRY;
      558 		     return;
      559 		end;
      560 
      561 /* Set up beginning of print line. */
      562 
      563 	string (source_ln.front) = "";
      564 
      565 /*	if ^diag_sw
      566*/*	then do;
      567*/*		pbuf_len = 2;
      568*/*		if  fixed_common.options.exs
      569*/*			then call cobol_put_rec(st,cobol_ext_$cobol_hfp,0,pbuf_ptr,pbuf_len);
      570*/*		end;
      571*/* */
      572 
      573 	diag_sw = "1"b;
      574 	diag_line.ref = l_diag.ref;
      575 
      576 	if run_no ^= 9				/*[4.0-3]*/
      577 	then do;
      578 		if run_no > 15
      579 		then run_no = 15;			/*[4.0-3]*/
      580 		diag_line.run = substr ("12345678LDXXXXX", run_no, 1);
      581 						/*[4.0-3]*/
      582 	     end;
      583 	else do;
      584 		diag_line.run = "L";
      585 		mod_num = fixed (l_diag.info, 27);
      586 
      587 		if mod_num = 0
      588 		then mod_num = diag_table.d_type (ac_diag);
      589 	     end;
      590 
      591 	diag_line.dash = "-";
      592 
      593 	call ioa_$rsnnl ("^d", diag_line.diag_no, ioa_len, l_diag.num);
      594 
      595 	if l_diag.num = 0
      596 	then do;					/* Pick up diag text from the stack entry. */
      597 
      598 		d_temp = substr (l_diag.image, 1, l_diag.length);
      599 		d_temp_len = l_diag.length;
      600 		diag_line.type = "   *";
      601 
      602 		call put_diag;
      603 
      604 		return;
      605 
      606 	     end;
      607 
      608 	if run_no ^= 9				/*[4.0-1]*/
      609 	then do;
      610 		diag_ref = diag_table.d_type (ac_diag);
      611 
      612 /*[4.0-1]*/
      613 		if fixed_common.comp_level < "5"	/*[4.0-1]*/
      614 		then if diag_ref < 3
      615 		     then diag_ref = 0;		/*[4.0-1]*/
      616 	     end;					/*[4.0-1]*/
      617 	else do;
      618 		if substr (fixed_common.levsv, 1, 1)	/*[4.0-1]*/
      619 		then diag_ref = 1;			/*[4.0-1]*/
      620 		else if substr (fixed_common.levsv, 2, 1)
      621 						/*[4.0-1]*/
      622 		then diag_ref = 2;			/*[4.0-1]*/
      623 		else diag_ref = 3;			/*[4.0-1]*/
      624 	     end;
      625 
      626 	if diag_ref = 2
      627 	then fixed_common.warn_no = fixed_common.warn_no + 1;
      628 
      629 	diag_line.type = substr ("   ****", diag_ref, 4);
      630 	dline_1_sw = "1"b;
      631 
      632 	if substr (l_diag.info, 1, 1)
      633 	then do;					/* Insert the parameter. */
      634 
      635 		if diag_table.d_param (ac_diag) = 0
      636 		then do;
      637 			call no_param;
      638 			return;
      639 		     end;
      640 
      641 		if l_diag.run = 6 & l_diag.num = 39
      642 		then do;
      643 			d_temp =
      644 			     substr (d_string, diag_table.d_start (ac_diag), diag_table.d_param (ac_diag) - 1)
      645 			     || substr (l_diag.image, 1, l_diag.length) || " IS "
      646 			     || substr (l_diag.image, 1, l_diag.length)
      647 			     ||
      648 			     substr (d_string, diag_table.d_start (ac_diag) + diag_table.d_param (ac_diag),
      649 			     diag_table.d_len (ac_diag) - diag_table.d_param (ac_diag));
      650 
      651 			d_temp_len = diag_table.d_len (ac_diag) + l_diag.length * 2 + 4;
      652 
      653 			call put_diag;
      654 
      655 			return;
      656 
      657 		     end;
      658 
      659 		if l_diag.run = 3 & l_diag.num = 9	/* ddsyntax special diag */
      660 		then do;
      661 			substr (char_13, 4, 11) = l_diag.image;
      662 			BL = " ";
      663 
      664 			do k = 1 to 28 while (BL = " ");
      665 
      666 			     bsi = 28 - k;
      667 
      668 			     BL = substr (d3_9p (cobol_d3_9.p1), bsi, 1);
      669 
      670 			end;
      671 
      672 			l_diag.length = bsi + 4;
      673 			l_diag.image = d3_9p (cobol_d3_9.p1);
      674 			l_diag.image = substr (l_diag.image, 1, bsi) || ":
      675 		";
      676 			do jj = 1 to 83;
      677 
      678 			     if cobol_d3_9.pv (jj)
      679 			     then do;
      680 
      681 				     BL = " ";
      682 
      683 				     do k = 1 to 28 while (BL = " ");
      684 
      685 					bsi = 28 - k;
      686 					BL = substr (d3_9p (jj), bsi, 1);
      687 
      688 				     end;
      689 
      690 				     plen = bsi + 4;
      691 
      692 				     if l_diag.length + plen <= 200
      693 				     then do;
      694 					     substr (l_diag.image, l_diag.length + 1, plen) = d3_9p (jj) || ",";
      695 					     l_diag.length = l_diag.length + plen;
      696 					end;
      697 
      698 				end;
      699 			end;
      700 
      701 			substr (l_diag.image, l_diag.length - 1, 1) = ".";
      702 
      703 		     end;
      704 
      705 		d_temp =
      706 		     substr (d_string, diag_table.d_start (ac_diag), diag_table.d_param (ac_diag) - 1)
      707 		     || substr (l_diag.image, 1, l_diag.length)
      708 		     ||
      709 		     substr (d_string, diag_table.d_start (ac_diag) + diag_table.d_param (ac_diag),
      710 		     diag_table.d_len (ac_diag) - diag_table.d_param (ac_diag));
      711 
      712 		d_temp_len = diag_table.d_len (ac_diag) + l_diag.length;
      713 
      714 	     end;
      715 
      716 	else do;
      717 		call no_param;
      718 		return;
      719 	     end;
      720 
      721 	call put_diag;
      722 
      723      end;
      724 
      725 no_param:
      726      proc;
      727 
      728 	d_temp_len = diag_table.d_len (ac_diag);
      729 	d_temp_st = diag_table.d_start (ac_diag);
      730 
      731 	if run_no ^= 9
      732 	then d_temp = substr (d_string, d_temp_st, d_temp_len);
      733 	else call lev_diag;
      734 
      735 	call put_diag;
      736 
      737      end;
      738 
      739 lev_diag:
      740      proc;
      741 
      742 declare	lev_nam		char (20) varying;
      743 declare	lev_mess		char (256) varying;
      744 
      745 	lev_mess = substr (d_string, d_temp_st, d_temp_len);
      746 
      747 	sev_lev = level_num (mod_num);
      748 
      749 	go to L (sev_lev);
      750 
      751 L (1):						/* low */
      752 	lev_nam = "low";
      753 
      754 	go to L1;
      755 
      756 L (2):						/* low intermediate */
      757 	lev_nam = "low intermediate";
      758 
      759 	go to L1;
      760 
      761 L (3):						/* high intermediate */
      762 	lev_nam = "high intermediate";
      763 
      764 	go to L1;
      765 
      766 L (4):						/* high */
      767 	lev_nam = "high";
      768 
      769 	go to L1;
      770 
      771 L (5):						/* extension */
      772 	lev_mess = "FIPS level restriction [extension]: " || lev_mess;
      773 
      774 	go to L2;
      775 
      776 L1:
      777 	lev_mess = "FIPS level restriction [" || fm_name (mod_num) || "- " || lev_nam || " level]: " || lev_mess;
      778 
      779 L2:
      780 	d_temp_len = length (lev_mess);
      781 	d_temp = substr (lev_mess, 1, d_temp_len);
      782 
      783      end;
      784 
      785 put_diag:
      786      proc;
      787 
      788 /* put the diag in as many print lines as necessary */
      789 
      790 	cur_char = 1;
      791 	dup = "0"b;
      792 
      793 	if m_bf
      794 	then do;
      795 		not_done = "1"b;
      796 		di = dno_run_index (run_no);
      797 
      798 		if di = 0				/* first diag */
      799 		then do;
      800 			dno_count = dno_count + 1;
      801 
      802 			if dno_count <= 60		/* start diag number chain */
      803 			then do;
      804 				dno_run_index (run_no) = dno_count;
      805 				dno (dno_count) = l_diag.num;
      806 				dno_next (dno_count) = 0;
      807 
      808 			     end;
      809 		     end;
      810 
      811 		else do while (not_done);		/* search chain for match */
      812 
      813 			if dno (di) = l_diag.num
      814 			then do;
      815 				not_done = "0"b;
      816 				dup = "1"b;
      817 			     end;
      818 			else if dno_next (di) = 0	/* search exhausted */
      819 			then do;
      820 				not_done = "0"b;
      821 				dno_count = dno_count + 1;
      822 
      823 				if dno_count <= 60
      824 				then do;
      825 					dno_next (di) = dno_count;
      826 					dno (dno_count) = l_diag.num;
      827 					dno_next (dno_count) = 0;
      828 				     end;
      829 			     end;
      830 
      831 			else di = dno_next (di);	/* continue search */
      832 
      833 		     end;
      834 	     end;
      835 
      836 	do while ("1"b);
      837 
      838 	     str_len = d_temp_len;
      839 	     substr (diag_line.text, 1, str_len) = substr (d_temp, cur_char, str_len);
      840 	     diag_line.fill2 = " ";
      841 	     pbuf_len = str_len + 13;
      842 
      843 /*[4.0-1]*/
      844 	     if fixed_common.options.exs & diag_ref > 0
      845 	     then call cobol_put_rec (st, cobol_ext_$cobol_hfp, 0, pbuf_ptr, pbuf_len);
      846 
      847 	     if dup
      848 	     then do;
      849 		     pbuf_len = 13;
      850 		     str_len = 13;
      851 		     d_temp_len = 13;
      852 		end;
      853 
      854 	     if (m_fat & diag_ref = 3) | (m_wn & diag_ref = 2) | (m_obs & diag_ref = 1)
      855 	     then do;				/* Print the diag on the user-console. */
      856 
      857 		     if t_flag = "1"b
      858 		     then do;
      859 			     t_flag = "0"b;
      860 			     call ioa_ ("^/^a", substr (t_buf, 1, len_t1));
      861 			     call ioa_ ("^12x^a", substr (ref_line, 1, len_t2));
      862 
      863 			end;
      864 
      865 		     call ioa_ ("^a", substr (p_buf, 1, pbuf_len));
      866 		end;
      867 
      868 	     d_temp_len = d_temp_len - str_len;
      869 
      870 	     if d_temp_len = 0
      871 	     then do;
      872 		     call del_diag_entry;
      873 		     return;
      874 		end;
      875 
      876 	     string (source_ln.front) = "";
      877 	     cur_char = cur_char + str_len;
      878 
      879 	end;
      880 
      881      end;
      882 
      883 DEL_DIAG_ENTRY:
      884      proc;
      885 
      886 	call del_diag_entry;
      887 
      888 	string (source_ln.front) = "";
      889 	cur_char = cur_char + str_len;
      890 
      891      end;
      892 
      893 del_diag_entry:
      894      proc;
      895 
      896 	p = l_diag.next;
      897 	l_ptr = l_current;
      898 
      899 /* remove this diag entry from stack */
      900 
      901 	call cobol_allo_tm$free_tm (l_ptr);
      902 
      903 	l_current = p;
      904 
      905      end;
      906 
      907 al_dt:
      908      proc;
      909 
      910 /* This routine allocates a token in the current or out-of-line diagnostic stack. */
      911 
      912 dcl	tempbit		bit (1);
      913 dcl	tempmno		fixed bin;
      914 
      915 	tempbit = substr (ptr_array (i) -> message.info, 1, 1);
      916 	tempmno = ptr_array (i) -> message.number;
      917 
      918 	if tempbit | tempmno = 0
      919 	then do;					/* get diag parameter or whole diag */
      920 
      921 		call cobol_allo_tm (l_ptr, 232);	/* 200 is for DDSYNTAX special diags */
      922 
      923 		l_current = l_ptr;
      924 		l_diag.length = ptr_array (i) -> message.image_size;
      925 		l_diag.image = substr (ptr_array (i) -> message.image, 1, ptr_array (i) -> message.image_size);
      926 
      927 	     end;
      928 	else do;
      929 		call cobol_allo_tm (l_ptr, 32);
      930 		l_current = l_ptr;
      931 		l_diag.length = 0;
      932 	     end;
      933 
      934 
      935 	l_diag.next = null ();
      936 	l_diag.line = ptr_array (i) -> message.line;
      937 
      938 	if (ptr_array (i) -> message.column < 0) | (ptr_array (i) -> message.column > l_source.length)
      939 	then l_diag.col = 0;
      940 	else l_diag.col = ptr_array (i) -> message.column;
      941 
      942 
      943 	l_diag.run = ptr_array (i) -> message.run;
      944 
      945 	if l_diag.run ^= 9
      946 	then l_diag.info = ptr_array (i) -> message.info;
      947 	else l_diag.info = ptr_array (i) -> message.module;
      948 
      949 	l_diag.num = ptr_array (i) -> message.number;
      950 	l_diag.ref = " ";
      951 
      952      end al_dt;
      953 
      954 close_it:
      955      proc;
      956 
      957 	if cobol_$include_cnt > 0
      958 	then if fixed_common.options.exs
      959 	     then do;
      960 
      961 		     call cobol_put_rec (st, cobol_ext_$cobol_hfp, 0, addr (incl_hdr), 73);
      962 
      963 /*[5.1-1]*/
      964 		     do i = 0 to cobol_$include_cnt;
      965 
      966 			call hcs_$fs_get_path_name (include_ptr (i), dirname, ldn, ename, code);
      967 			call hcs_$fs_get_ref_name (include_ptr (i), 1, rname, code);
      968 
      969 			if rname = (32)" "
      970 			then rname = ename;
      971 
      972 			call ioa_$rs ("^7d^3x^6d^4x^40a^a", incl_line, incl_line_len,
      973 			     fixed (rel (include_ptr (i)), 17), i, rname, substr (dirname, 1, ldn) || ">" || ename);
      974 
      975 			call cobol_put_rec (st, cobol_ext_$cobol_hfp, 0, addr (incl_line), incl_line_len);
      976 
      977 		     end;
      978 
      979 		end;
      980 
      981      end;
      982 
      983 declare	(BL, ch1)		char (1);
      984 declare	dbin		char (13);
      985 declare	(sev_lev, mod_num)	fixed bin;
      986 
      987 dcl	1 source		based (in_ptr),
      988 	  2 size		fixed bin,
      989 	  2 line		fixed bin,
      990 	  2 column	fixed bin,
      991 	  2 type		fixed bin,		/* = 6 */
      992 	  2 info		bit (8),
      993 	  2 length	fixed bin,
      994 	  2 image		char (120);
      995 
      996 dcl	diag_sw		bit (1) static;
      997 dcl	old_sw		bit (1) static;
      998 
      999 dcl	hof		bit (9) static init ("000001100"b);
     1000 
     1001 dcl	ad_hof		pointer static;
     1002 dcl	st		bit (32);
     1003 dcl	cobol_allo_tm	entry (ptr, fixed bin) ext;
     1004 dcl	cobol_allo_tm$free_tm
     1005 			entry (ptr) ext;
     1006 dcl	date_time_	entry (fixed bin (71), char (*));
     1007 dcl	date_time		char (24);
     1008 dcl	new_line_character	char (1);
     1009 dcl	bit9		bit (9) based;
     1010 
     1011 dcl	s_length		fixed bin;
     1012 dcl	s_start		fixed bin;
     1013 dcl	(l_current, l_first, p, p2)
     1014 			pointer static;
     1015 dcl	l_ptr		ptr;
     1016 dcl	1 l_source	based (l_first),		/* stack source entry */
     1017 	  2 next		pointer,
     1018 	  2 type		fixed bin,
     1019 	  2 line		fixed bin,
     1020 	  2 info		bit (8),
     1021 	  2 length	fixed bin,
     1022 	  2 image		char (120);
     1023 dcl	1 l_diag		based (l_current),		/* stack diag entry */
     1024 	  2 next		pointer,
     1025 	  2 line		fixed bin,
     1026 	  2 col		fixed bin,
     1027 	  2 run		fixed bin,
     1028 	  2 num		fixed bin,
     1029 	  2 ref		char (1),
     1030 	  2 info		bit (27),
     1031 	  2 length	fixed bin,
     1032 	  2 image		char (120);
     1033 
     1034 dcl	p_buf		char (255);
     1035 
     1036 
     1037 dcl	nl		bit (9) static init ("000001010"b);
     1038 
     1039 dcl	ad_nl		pointer static;
     1040 dcl	dline_1_sw	bit (1) static;
     1041 dcl	1 source_ln	based (pbuf_ptr),		/* source print line */
     1042 	  2 front,
     1043 	    3 margin	char (4),
     1044 	    3 isn		char (7),
     1045 	    3 fill	char (1),
     1046 	  2 text		char (247);
     1047 dcl	1 diag_line	based (pbuf_ptr),		/* diag print line */
     1048 	  2 type		char (4),
     1049 	  2 fill1		char (1),
     1050 	  2 ref		char (1),
     1051 	  2 fill3		char (1),
     1052 	  2 run		char (1),
     1053 	  2 dash		char (1),
     1054 	  2 diag_no	char (3),
     1055 	  2 fill2		char (1),
     1056 	  2 text		char (1);
     1057 dcl	ref_line		char (200);
     1058 dcl	ref_cur_char	fixed bin static;
     1059 dcl	(diag_ref, cur_char, str_len, save_col)
     1060 			fixed bin static;
     1061 dcl	db_len		fixed bin;
     1062 dcl	t_flag		bit (1);
     1063 dcl	(len_t1, len_t2, ioa_len)
     1064 			fixed bin;
     1065 
     1066 dcl	t_buf		char (255);
     1067 dcl	d_string		char (100000) based (d_string_ptr);
     1068 dcl	d_string_ptr	ptr;
     1069 
     1070 dcl	d_ref		bit (64) static;
     1071 dcl	(run_no, d_temp_len, d_temp_st, ac_diag, diag_cnt, plen, bsi)
     1072 			fixed bin static;
     1073 dcl	1 cobol_d3_9	static,
     1074 	  2 p1		fixed bin init (0),
     1075 	  2 pv		(88) bit (1) init ((88) (1)""b);
     1076 dcl	char_13		char (15) based (addr (cobol_d3_9.p1));
     1077 
     1078 
     1079 dcl	d3_9p		(88) char (28) static
     1080 			init ("FILE section item", "WORKING-STORAGE section item", "CONSTANT section item",
     1081 			"LINKAGE section item", "COMMUNICATION section item", "REPORT section item", "77 level",
     1082 			"01 level", "non-elementary", "elementary", "FILLER", "subject of redefines",
     1083 			"object of redefines", "usage comp-7", "usage comp-6", "picture contains l",
     1084 			"picture is depending on", "numeric", "numeric-edited", "alphanumeric",
     1085 			"alphanumeric-edited", "alphabetic", "alphabetic-edited", "picture contains p",
     1086 			"* suppresion", "signed", "sign is separate", "usage display", "usage comp", "usage comp-8",
     1087 			"usage comp-5", "usage comp-3", "usage comp-1", "usage comp-2", "usage index",
     1088 			"justified right", "level 88", "sync", "temporary", "blank when zero", "variable length",
     1089 			"subscripted", "occurences depending on", "key ascending", "key descending", "indexed by",
     1090 			"numeric value", "non-numeric value", "signed value", " ", " ", " ", "integer",
     1091 			"asterisk when zero", "label", " ", "occurs key data-name", "subject of key is clause",
     1092 			"subject of redefines clause", "synchronized", "rounded", "sort on ascending key",
     1093 			"debug all", "overlap", "sum counter", "occurrence", "linage counter",
     1094 			"level 01 object of renames", "aligned", "not user writable", "database key",
     1095 			"database data item", "unsigned", "picture clause exists", "sign clause exists",
     1096 			"code set class 1", "value clause exists", "usage clause exists", "no picture clause",
     1097 			"no value clause", "figurative zero value", "value clause applies",
     1098 			"FD has code-set clause", "associated with picture s", " ", " ", " ", " ");
     1099 
     1100 
     1101 dcl	d_temp		char (200) static;
     1102 dcl	t_isn		char (13) static;
     1103 dcl	temp_ptr		ptr;
     1104 dcl	eof_prt		bit (1);
     1105 dcl	(t_fno, t_lno)	fixed bin;
     1106 dcl	part1		char (4);
     1107 
     1108 /*  EXTERNAL COBOL I/O ENTRIES  */
     1109 
     1110 dcl	cobol_swf_get	ext entry (ptr, bit (32), ptr, fixed bin);
     1111 
     1112 /*  DECLARATION OF SOME VARIABLES USED IN COMPILER I/O CALLS  */
     1113 
     1114 dcl	keyno		char (5);
     1115 dcl	key1		char (5);
     1116 dcl	curr_input	ptr;
     1117 dcl	curr_output	ptr;
     1118 dcl	recsize		fixed bin;
     1119 dcl	recsize2		fixed bin;
     1120 dcl	status		bit (32);
     1121 dcl	1 status_word	based (st_ptr),
     1122 	  2 status_left	bit (16),
     1123 	  2 status_right	bit (16);
     1124 
     1125 dcl	st_ptr		ptr;
     1126 
     1127 dcl	sarea		char (10000) based (sarea_ptr),
     1128 	ptr_array		(0:3000) ptr,
     1129 	(sarea_ptr, in_ptr) ptr,
     1130 	template		char (ln) based (sarea_ptr),
     1131 	in_record		char (ln) based (in_ptr),
     1132 	(ln, i, j, k, s, i_limit, jj)
     1133 			fixed bin;
     1134 dcl	no_diag		bit (1);
     1135 dcl	all_done		bit (1);
     1136 
     1137 declare	(addr, divide, fixed, rel, string, index, mod, null)
     1138 			builtin;
     1139 declare	(substr, length)	builtin;
     1140 
     1141 declare	ioa_$rs		entry options (variable);
     1142 declare	ioa_$rsnnl	entry options (variable);
     1143 
     1144 dcl	dup		bit (1);
     1145 dcl	not_done		bit (1);
     1146 dcl	di		fixed bin;
     1147 dcl	dno_run_index	(8) fixed bin;
     1148 dcl	dno_count		fixed bin;
     1149 dcl	1 dno_element	(60),
     1150 	  2 dno		fixed bin,
     1151 	  2 dno_next	fixed bin;
     1152 
     1153 dcl	elng_sw		bit (1);
     1154 dcl	reln_ptr		ptr;
     1155 dcl	code		fixed bin (35);
     1156 dcl	ioa_		entry options (variable);
     1157 
     1158 dcl	pbuf_ptr		ptr;
     1159 dcl	pbuf_len		fixed bin;
     1160 dcl	ff_char		char (1) static options (constant) init ("");
     1161 dcl	multics_hdr	char (256);
     1162 dcl	multics_hdr_len	fixed bin;
     1163 dcl	cobol_version$header
     1164 			entry (char (*), fixed bin);
     1165 dcl	cobol_put_rec	entry (bit (32), ptr, fixed bin, ptr, fixed bin);
     1166 dcl	hcs_$fs_get_path_name
     1167 			entry (ptr, char (*), fixed bin, char (*), fixed bin (35));
     1168 dcl	hcs_$fs_get_ref_name
     1169 			entry (ptr, fixed bin, char (*), fixed bin (35));
     1170 						/*[5.1-1]*/
     1171 dcl	include_ptr	(0:1000) ptr based (cobol_$include_info_ptr);
     1172 dcl	dirname		char (168),
     1173 	ename		char (32),
     1174 	rname		char (32),
     1175 	incl_line		char (150),
     1176 	incl_line_len	fixed bin,
     1177 	ldn		fixed bin;
     1178 dcl	incl_hdr		char (73) static init ("	INCLUDE FILES USED IN THIS COMPILATION.
     1179 
     1180   LINE	NUMBER	NAME				PATHNAME");
     1181 
     1182 
     1183 
     1184 /*************************************/
     1185 /* INCLUDE FILES */
  1     1 
  1     2 /* BEGIN INCLUDE FILE ... cobol_diag_file.incl.pl1 */
  1     3 /* Last modified on 06/18/76 by ORN */
  1     4 
  1     5 /* This include file serves as a template for the file
  1     6*   (segment) containg MCOBOL diagnostic messages:
  1     7*   cobol_diag_table_$cobol_diag_table_ */
  1     8 
  1     9 dcl 1 diag_file based(cobol_$diag_ptr),
  1    10      2 r_t_size fixed bin,
  1    11      2 d_t_size fixed bin,
  1    12      2 d_s_size fixed bin,
  1    13      2 run_table (11),
  1    14 	3 base fixed bin,
  1    15 	3 size fixed bin,
  1    16      2 diag_table(0 refer(diag_file.d_t_size)),
  1    17 	3 d_start fixed bin,
  1    18 	3 d_len fixed bin,
  1    19 	3 d_type fixed bin,
  1    20 	3 d_param fixed bin;
  1    21 
  1    22 /* END INCLUDE FILE ... cobol_diag_file.incl.pl1 */
  1    23 
     1186 
  2     1 
  2     2 /* BEGIN INCLUDE FILE ... cobol_type5.incl.pl1 */
  2     3 /* Last modified on 11/19/76 by ORN */
  2     4 
  2     5 /*
  2     6*A diag message token is created by each of the front end modules
  2     7*when an error is discovered.  It is output sequentially to the cobol_diags_ file
  2     8*via the utility program cobol_c_list and later processed by the cobol_print_diag
  2     9*phase.
  2    10**/
  2    11 
  2    12 dcl message_ptr ptr;
  2    13 
  2    14 /* BEGIN DECLARATION OF TYPE5 (DIAG MESSAGE) TOKEN */
  2    15 dcl 1 message based (message_ptr),
  3     1 
  3     2 /* begin include file ... cobol_TYPE5.incl.pl1 */
  3     3 /* Last modified on 7/26/77 by FCH */
  3     4 
  3     5 		/* header */
  3     6 		2 size fixed bin,
  3     7 		2 line fixed bin,
  3     8 		2 column fixed bin,
  3     9 		2 type fixed bin,
  3    10 		/* body */
  3    11 		2 run fixed bin,
  3    12 		2 number fixed bin,
  3    13 		2 info bit(9),
  3    14 		2 module bit(27),
  3    15 		2 image_size fixed bin,
  3    16 		2 image char(0 refer(message.image_size));
  3    17 
  3    18 /* end include file ... cobol_TYPE5.incl.pl1 */
  3    19 
  2    16 
  2    17 /* END DECLARATION OF TYPE5 (DIAG MESSAGE) TOKEN */
  2    18 
  2    19 /* END INCLUDE FILE ... cobol_type5.incl.pl1 */
  2    20 
     1187 
  4     1 
  4     2 /* BEGIN INCLUDE FILE ... cobol_ext_.incl.pl1 */
  4     3 /* Last modified on 06/17/76 by ORN */
  4     4 /* Last modified on 12/28/76 by FCH */
  4     5 /* Last modified on 12/01/80 by FCH */
  4     6 
  4     7 /*    <<<   SHARED EXTERNALS INCLUDE FILE   >>>    */
  4     8 
  4     9 
  4    10 dcl     cobol_ext_$cobol_afp ptr ext;
  4    11 dcl     cobol_afp ptr defined (  cobol_ext_$cobol_afp);
  4    12 dcl     cobol_ext_$cobol_analin_fileno ptr ext;
  4    13 dcl     cobol_analin_fileno ptr defined (  cobol_ext_$cobol_analin_fileno);
  4    14 dcl     cobol_ext_$report_first_token ptr ext;
  4    15 dcl     report_first_token ptr defined( cobol_ext_$report_first_token);
  4    16 dcl     cobol_ext_$report_last_token ptr ext;
  4    17 dcl     report_last_token ptr defined ( cobol_ext_$report_last_token);
  4    18 dcl     cobol_ext_$cobol_eltp ptr ext;
  4    19 dcl     cobol_eltp ptr defined (  cobol_ext_$cobol_eltp);
  4    20 dcl     cobol_ext_$cobol_cmfp ptr ext;
  4    21 dcl     cobol_cmfp ptr defined (  cobol_ext_$cobol_cmfp);
  4    22 dcl     cobol_ext_$cobol_com_fileno ptr ext;
  4    23 dcl     cobol_com_fileno ptr defined (  cobol_ext_$cobol_com_fileno);
  4    24 dcl     cobol_ext_$cobol_com_ptr ptr ext;
  4    25 dcl     cobol_com_ptr ptr defined (  cobol_ext_$cobol_com_ptr);
  4    26 dcl     cobol_ext_$cobol_dfp ptr ext;
  4    27 dcl     cobol_dfp ptr defined (  cobol_ext_$cobol_dfp);
  4    28 dcl     cobol_ext_$cobol_hfp ptr ext;
  4    29 dcl     cobol_hfp ptr defined (  cobol_ext_$cobol_hfp);
  4    30 dcl     cobol_ext_$cobol_m1fp ptr ext;
  4    31 dcl     cobol_m1fp ptr defined (  cobol_ext_$cobol_m1fp);
  4    32 dcl     cobol_ext_$cobol_m2fp ptr ext;
  4    33 dcl     cobol_m2fp ptr defined (  cobol_ext_$cobol_m2fp);
  4    34 dcl     cobol_ext_$cobol_min1_fileno ptr ext;
  4    35 dcl     cobol_min1_fileno ptr defined (  cobol_ext_$cobol_min1_fileno);
  4    36 dcl     cobol_ext_$cobol_min2_fileno_ptr ptr ext;
  4    37 dcl     cobol_min2_fileno_ptr ptr defined (  cobol_ext_$cobol_min2_fileno_ptr);
  4    38 dcl     cobol_ext_$cobol_name_fileno ptr ext;
  4    39 dcl     cobol_name_fileno ptr defined (  cobol_ext_$cobol_name_fileno);
  4    40 dcl     cobol_ext_$cobol_name_fileno_ptr ptr ext;
  4    41 dcl     cobol_name_fileno_ptr ptr defined (  cobol_ext_$cobol_name_fileno_ptr);
  4    42 dcl     cobol_ext_$cobol_ntfp ptr ext;
  4    43 dcl     cobol_ntfp ptr defined (  cobol_ext_$cobol_ntfp);
  4    44 dcl     cobol_ext_$cobol_pdofp ptr ext;
  4    45 dcl     cobol_pdofp ptr defined (  cobol_ext_$cobol_pdofp);
  4    46 dcl     cobol_ext_$cobol_pfp ptr ext;
  4    47 dcl     cobol_pfp ptr defined (  cobol_ext_$cobol_pfp);
  4    48 dcl     cobol_ext_$cobol_rm2fp ptr ext;
  4    49 dcl     cobol_rm2fp ptr defined (  cobol_ext_$cobol_rm2fp);
  4    50 dcl     cobol_ext_$cobol_rmin2fp ptr ext;
  4    51 dcl     cobol_rmin2fp ptr defined (  cobol_ext_$cobol_rmin2fp);
  4    52 dcl     cobol_ext_$cobol_curr_in ptr ext;
  4    53 dcl     cobol_curr_in ptr defined (  cobol_ext_$cobol_curr_in);
  4    54 dcl     cobol_ext_$cobol_curr_out ptr ext;
  4    55 dcl     cobol_curr_out ptr defined (  cobol_ext_$cobol_curr_out);
  4    56 dcl     cobol_ext_$cobol_sfp ptr ext;
  4    57 dcl     cobol_sfp ptr defined (  cobol_ext_$cobol_sfp);
  4    58 dcl     cobol_ext_$cobol_w1p ptr ext;
  4    59 dcl     cobol_w1p ptr defined (  cobol_ext_$cobol_w1p);
  4    60 dcl     cobol_ext_$cobol_w2p ptr ext;
  4    61 dcl     cobol_w2p ptr defined (  cobol_ext_$cobol_w2p);
  4    62 dcl     cobol_ext_$cobol_w3p ptr ext;
  4    63 dcl     cobol_w3p ptr defined (  cobol_ext_$cobol_w3p);
  4    64 dcl     cobol_ext_$cobol_w5p ptr ext;
  4    65 dcl     cobol_w5p ptr defined (  cobol_ext_$cobol_w5p);
  4    66 dcl     cobol_ext_$cobol_w6p ptr ext;
  4    67 dcl     cobol_w6p ptr defined (  cobol_ext_$cobol_w6p);
  4    68 dcl     cobol_ext_$cobol_w7p ptr ext;
  4    69 dcl     cobol_w7p ptr defined (  cobol_ext_$cobol_w7p);
  4    70 dcl     cobol_ext_$cobol_x3fp ptr ext;
  4    71 dcl     cobol_x3fp ptr defined (  cobol_ext_$cobol_x3fp);
  4    72 dcl	cobol_ext_$cobol_rwdd ptr ext;
  4    73 dcl	cobol_rwdd ptr defined(cobol_ext_$cobol_rwdd);
  4    74 dcl	cobol_ext_$cobol_rwpd ptr ext;
  4    75 dcl	cobol_rwpd ptr defined(cobol_ext_$cobol_rwpd);
  4    76 
  4    77 
  4    78 dcl     cobol_ext_$cobol_fileno1 fixed bin(24)ext;
  4    79 dcl     cobol_fileno1 fixed bin(24)defined (  cobol_ext_$cobol_fileno1);				
  4    80 dcl     cobol_ext_$cobol_options_len fixed bin(24)ext;
  4    81 dcl     cobol_options_len fixed bin(24)defined (  cobol_ext_$cobol_options_len);
  4    82 dcl     cobol_ext_$cobol_pdout_fileno fixed bin(24)ext;
  4    83 dcl     cobol_pdout_fileno fixed bin(24)defined (  cobol_ext_$cobol_pdout_fileno);			
  4    84 dcl     cobol_ext_$cobol_print_fileno fixed bin(24)ext;
  4    85 dcl     cobol_print_fileno fixed bin(24)defined (  cobol_ext_$cobol_print_fileno);			
  4    86 dcl     cobol_ext_$cobol_rmin2_fileno fixed bin(24)ext;
  4    87 dcl     cobol_rmin2_fileno fixed bin(24)defined (  cobol_ext_$cobol_rmin2_fileno);
  4    88 dcl     cobol_ext_$cobol_x1_fileno fixed bin(24)ext;
  4    89 dcl     cobol_x1_fileno fixed bin(24)defined (  cobol_ext_$cobol_x1_fileno);				
  4    90 dcl     cobol_ext_$cobol_x2_fileno fixed bin(24)ext;
  4    91 dcl     cobol_x2_fileno fixed bin(24)defined (  cobol_ext_$cobol_x2_fileno);
  4    92 dcl     cobol_ext_$cobol_x3_fileno fixed bin(24)ext;
  4    93 dcl     cobol_x3_fileno fixed bin(24)defined (  cobol_ext_$cobol_x3_fileno);
  4    94 
  4    95 dcl     cobol_ext_$cobol_lpr char (5) ext;
  4    96 dcl     cobol_lpr char (5) defined (  cobol_ext_$cobol_lpr);				/* -2- */
  4    97 dcl     cobol_ext_$cobol_options char (120) ext;
  4    98 dcl     cobol_options char (120) defined (  cobol_ext_$cobol_options);          			/* -30- */
  4    99 
  4   100 dcl     cobol_ext_$cobol_xlast8 bit (1) ext;
  4   101 dcl     cobol_xlast8 bit (1) defined (  cobol_ext_$cobol_xlast8);				/* -1- */
  4   102 dcl     cobol_ext_$report_exists bit (1) ext;
  4   103 dcl     report_exists bit (1) defined (  cobol_ext_$report_exists);
  4   104 
  4   105 
  4   106 /*    <<<   END OF SHARED EXTERNALS INCLUDE FILE   >>>    */
  4   107 /* END INCLUDE FILE ... cobol_ext_.incl.pl1 */
  4   108 
     1188 
  5     1 
  5     2 /* BEGIN INCLUDE FILE ... cobol_.incl.pl1 */
  5     3 /* last modified Feb 4, 1977 by ORN  */
  5     4 
  5     5 /* This file defines all external data used in the generator phase of Multics Cobol */
  5     6 
  5     7 /* POINTERS */
  5     8 dcl cobol_$text_base_ptr ptr  ext;
  5     9 dcl text_base_ptr ptr  defined (cobol_$text_base_ptr);
  5    10 dcl cobol_$con_end_ptr ptr  ext;
  5    11 dcl con_end_ptr ptr  defined (cobol_$con_end_ptr);
  5    12 dcl cobol_$def_base_ptr ptr  ext;
  5    13 dcl def_base_ptr ptr  defined (cobol_$def_base_ptr);
  5    14 dcl cobol_$link_base_ptr ptr  ext;
  5    15 dcl link_base_ptr ptr  defined (cobol_$link_base_ptr);
  5    16 dcl cobol_$sym_base_ptr ptr  ext;
  5    17 dcl sym_base_ptr ptr  defined (cobol_$sym_base_ptr);
  5    18 dcl cobol_$reloc_text_base_ptr ptr  ext;
  5    19 dcl reloc_text_base_ptr ptr  defined (cobol_$reloc_text_base_ptr);
  5    20 dcl cobol_$reloc_def_base_ptr ptr  ext;
  5    21 dcl reloc_def_base_ptr ptr  defined (cobol_$reloc_def_base_ptr);
  5    22 dcl cobol_$reloc_link_base_ptr ptr  ext;
  5    23 dcl reloc_link_base_ptr ptr  defined (cobol_$reloc_link_base_ptr);
  5    24 dcl cobol_$reloc_sym_base_ptr ptr  ext;
  5    25 dcl reloc_sym_base_ptr ptr  defined (cobol_$reloc_sym_base_ptr);
  5    26 dcl cobol_$reloc_work_base_ptr ptr  ext;
  5    27 dcl reloc_work_base_ptr ptr  defined (cobol_$reloc_work_base_ptr);
  5    28 dcl cobol_$pd_map_ptr ptr  ext;
  5    29 dcl pd_map_ptr ptr  defined (cobol_$pd_map_ptr);
  5    30 dcl cobol_$fixup_ptr ptr  ext;
  5    31 dcl fixup_ptr ptr  defined (cobol_$fixup_ptr);
  5    32 dcl cobol_$initval_base_ptr ptr  ext;
  5    33 dcl initval_base_ptr ptr  defined (cobol_$initval_base_ptr);
  5    34 dcl cobol_$initval_file_ptr ptr  ext;
  5    35 dcl initval_file_ptr ptr  defined (cobol_$initval_file_ptr);
  5    36 dcl cobol_$perform_list_ptr ptr  ext;
  5    37 dcl perform_list_ptr ptr  defined (cobol_$perform_list_ptr);
  5    38 dcl cobol_$alter_list_ptr ptr  ext;
  5    39 dcl alter_list_ptr ptr  defined (cobol_$alter_list_ptr);
  5    40 dcl cobol_$seg_init_list_ptr ptr  ext;
  5    41 dcl seg_init_list_ptr ptr  defined (cobol_$seg_init_list_ptr);
  5    42 dcl cobol_$temp_token_area_ptr ptr  ext;
  5    43 dcl temp_token_area_ptr ptr  defined (cobol_$temp_token_area_ptr);
  5    44 dcl cobol_$temp_token_ptr ptr  ext;
  5    45 dcl temp_token_ptr ptr  defined (cobol_$temp_token_ptr);
  5    46 dcl cobol_$token_block1_ptr ptr  ext;
  5    47 dcl token_block1_ptr ptr  defined (cobol_$token_block1_ptr);
  5    48 dcl cobol_$token_block2_ptr ptr  ext;
  5    49 dcl token_block2_ptr ptr  defined (cobol_$token_block2_ptr);
  5    50 dcl cobol_$minpral5_ptr ptr  ext;
  5    51 dcl minpral5_ptr ptr  defined (cobol_$minpral5_ptr);
  5    52 dcl cobol_$tag_table_ptr ptr  ext;
  5    53 dcl tag_table_ptr ptr  defined (cobol_$tag_table_ptr);
  5    54 dcl cobol_$map_data_ptr ptr  ext;
  5    55 dcl map_data_ptr ptr  defined (cobol_$map_data_ptr);
  5    56 dcl cobol_$ptr_status_ptr ptr  ext;
  5    57 dcl ptr_status_ptr ptr  defined (cobol_$ptr_status_ptr);
  5    58 dcl cobol_$reg_status_ptr ptr  ext;
  5    59 dcl reg_status_ptr ptr  defined (cobol_$reg_status_ptr);
  5    60 dcl cobol_$misc_base_ptr ptr ext;
  5    61 dcl misc_base_ptr ptr defined (cobol_$misc_base_ptr);
  5    62 dcl cobol_$misc_end_ptr ptr ext;
  5    63 dcl misc_end_ptr ptr defined (cobol_$misc_end_ptr);
  5    64 dcl cobol_$list_ptr ptr ext;
  5    65 dcl list_ptr ptr defined (cobol_$list_ptr);
  5    66 dcl cobol_$allo1_ptr ptr ext;
  5    67 dcl allo1_ptr ptr defined (cobol_$allo1_ptr);
  5    68 dcl cobol_$eln_ptr ptr ext;
  5    69 dcl eln_ptr ptr defined (cobol_$eln_ptr);
  5    70 dcl cobol_$diag_ptr ptr ext;
  5    71 dcl diag_ptr ptr defined (cobol_$diag_ptr);
  5    72 dcl cobol_$xref_token_ptr ptr ext;
  5    73 dcl xref_token_ptr ptr defined (cobol_$xref_token_ptr);
  5    74 dcl cobol_$xref_chain_ptr ptr ext;
  5    75 dcl xref_chain_ptr ptr defined (cobol_$xref_chain_ptr);
  5    76 dcl cobol_$statement_info_ptr ptr ext;
  5    77 dcl statement_info_ptr ptr defined (cobol_$statement_info_ptr);
  5    78 dcl cobol_$reswd_ptr ptr ext;
  5    79 dcl reswd_ptr ptr defined (cobol_$reswd_ptr);
  5    80 dcl cobol_$op_con_ptr ptr ext;
  5    81 dcl op_con_ptr ptr defined (cobol_$op_con_ptr);
  5    82 dcl cobol_$ntbuf_ptr ptr ext;
  5    83 dcl ntbuf_ptr ptr defined (cobol_$ntbuf_ptr);
  5    84 dcl cobol_$main_pcs_ptr ptr ext;
  5    85 dcl main_pcs_ptr ptr defined (cobol_$main_pcs_ptr);
  5    86 dcl cobol_$include_info_ptr ptr ext;
  5    87 dcl include_info_ptr ptr defined (cobol_$include_info_ptr);
  5    88 
  5    89 /* FIXED BIN */
  5    90 dcl cobol_$text_wd_off fixed bin  ext;
  5    91 dcl text_wd_off fixed bin  defined (cobol_$text_wd_off);
  5    92 dcl cobol_$con_wd_off fixed bin  ext;
  5    93 dcl con_wd_off fixed bin  defined (cobol_$con_wd_off);
  5    94 dcl cobol_$def_wd_off fixed bin  ext;
  5    95 dcl def_wd_off fixed bin  defined (cobol_$def_wd_off);
  5    96 dcl cobol_$def_max fixed bin  ext;
  5    97 dcl def_max fixed bin  defined (cobol_$def_max);
  5    98 dcl cobol_$link_wd_off fixed bin  ext;
  5    99 dcl link_wd_off fixed bin  defined (cobol_$link_wd_off);
  5   100 dcl cobol_$link_max fixed bin  ext;
  5   101 dcl link_max fixed bin  defined (cobol_$link_max);
  5   102 dcl cobol_$sym_wd_off fixed bin  ext;
  5   103 dcl sym_wd_off fixed bin  defined (cobol_$sym_wd_off);
  5   104 dcl cobol_$sym_max fixed bin  ext;
  5   105 dcl sym_max fixed bin  defined (cobol_$sym_max);
  5   106 dcl cobol_$reloc_text_max fixed bin(24)  ext;
  5   107 dcl reloc_text_max fixed bin(24)  defined (cobol_$reloc_text_max);
  5   108 dcl cobol_$reloc_def_max fixed bin(24)  ext;
  5   109 dcl reloc_def_max fixed bin(24)  defined (cobol_$reloc_def_max);
  5   110 dcl cobol_$reloc_link_max fixed bin(24)  ext;
  5   111 dcl reloc_link_max fixed bin(24)  defined (cobol_$reloc_link_max);
  5   112 dcl cobol_$reloc_sym_max fixed bin(24)  ext;
  5   113 dcl reloc_sym_max fixed bin(24)  defined (cobol_$reloc_sym_max);
  5   114 dcl cobol_$reloc_work_max fixed bin(24)  ext;
  5   115 dcl reloc_work_max fixed bin(24)  defined (cobol_$reloc_work_max);
  5   116 dcl cobol_$pd_map_index fixed bin  ext;
  5   117 dcl pd_map_index fixed bin  defined (cobol_$pd_map_index);
  5   118 dcl cobol_$cobol_data_wd_off fixed bin  ext;
  5   119 dcl cobol_data_wd_off fixed bin  defined (cobol_$cobol_data_wd_off);
  5   120 dcl cobol_$stack_off fixed bin  ext;
  5   121 dcl stack_off fixed bin  defined (cobol_$stack_off);
  5   122 dcl cobol_$max_stack_off fixed bin  ext;
  5   123 dcl max_stack_off fixed bin  defined (cobol_$max_stack_off);
  5   124 dcl cobol_$init_stack_off fixed bin  ext;
  5   125 dcl init_stack_off fixed bin  defined (cobol_$init_stack_off);
  5   126 dcl cobol_$pd_map_sw fixed bin  ext;
  5   127 dcl pd_map_sw fixed bin  defined (cobol_$pd_map_sw);
  5   128 dcl cobol_$next_tag fixed bin  ext;
  5   129 dcl next_tag fixed bin  defined (cobol_$next_tag);
  5   130 dcl cobol_$data_init_flag fixed bin  ext;
  5   131 dcl data_init_flag fixed bin  defined (cobol_$data_init_flag);
  5   132 dcl cobol_$seg_init_flag fixed bin  ext;
  5   133 dcl seg_init_flag fixed bin  defined (cobol_$seg_init_flag);
  5   134 dcl cobol_$alter_flag fixed bin  ext;
  5   135 dcl alter_flag fixed bin  defined (cobol_$alter_flag);
  5   136 dcl cobol_$sect_eop_flag fixed bin  ext;
  5   137 dcl sect_eop_flag fixed bin  defined (cobol_$sect_eop_flag);
  5   138 dcl cobol_$para_eop_flag fixed bin  ext;
  5   139 dcl para_eop_flag fixed bin  defined (cobol_$para_eop_flag);
  5   140 dcl cobol_$priority_no fixed bin  ext;
  5   141 dcl priority_no fixed bin  defined (cobol_$priority_no);
  5   142 dcl cobol_$compile_count fixed bin ext;
  5   143 dcl compile_count fixed bin defined (cobol_$compile_count);
  5   144 dcl cobol_$ptr_assumption_ind fixed bin ext;
  5   145 dcl ptr_assumption_ind fixed bin defined (cobol_$ptr_assumption_ind);
  5   146 dcl cobol_$reg_assumption_ind fixed bin ext;
  5   147 dcl reg_assumption_ind fixed bin defined (cobol_$reg_assumption_ind);
  5   148 dcl cobol_$perform_para_index fixed bin ext;
  5   149 dcl perform_para_index fixed bin defined (cobol_$perform_para_index);
  5   150 dcl cobol_$perform_sect_index fixed bin ext;
  5   151 dcl perform_sect_index fixed bin defined (cobol_$perform_sect_index);
  5   152 dcl cobol_$alter_index fixed bin ext;
  5   153 dcl alter_index fixed bin defined (cobol_$alter_index);
  5   154 dcl cobol_$list_off fixed bin ext;
  5   155 dcl list_off fixed bin defined (cobol_$list_off);
  5   156 dcl cobol_$constant_offset fixed bin ext;
  5   157 dcl constant_offset fixed bin defined (cobol_$constant_offset);
  5   158 dcl cobol_$misc_max fixed bin ext;
  5   159 dcl misc_max fixed bin defined (cobol_$misc_max);
  5   160 dcl cobol_$pd_map_max fixed bin ext;
  5   161 dcl pd_map_max fixed bin defined (cobol_$pd_map_max);
  5   162 dcl cobol_$map_data_max fixed bin ext;
  5   163 dcl map_data_max fixed bin defined (cobol_$map_data_max);
  5   164 dcl cobol_$fixup_max fixed bin ext;
  5   165 dcl fixup_max fixed bin defined (cobol_$fixup_max);
  5   166 dcl cobol_$tag_table_max fixed bin ext;
  5   167 dcl tag_table_max fixed bin defined (cobol_$tag_table_max);
  5   168 dcl cobol_$temp_token_max fixed bin ext;
  5   169 dcl temp_token_max fixed bin defined (cobol_$temp_token_max);
  5   170 dcl cobol_$allo1_max fixed bin ext;
  5   171 dcl allo1_max fixed bin defined (cobol_$allo1_max);
  5   172 dcl cobol_$eln_max fixed bin ext;
  5   173 dcl eln_max fixed bin defined (cobol_$eln_max);
  5   174 dcl cobol_$debug_enable fixed bin ext;
  5   175 dcl debug_enable fixed bin defined (cobol_$debug_enable);
  5   176 dcl cobol_$non_source_offset fixed bin ext;
  5   177 dcl non_source_offset fixed bin defined (cobol_$non_source_offset);
  5   178 dcl cobol_$initval_flag fixed bin ext;
  5   179 dcl initval_flag fixed bin defined (cobol_$initval_flag);
  5   180 dcl cobol_$date_compiled_sw fixed bin ext;
  5   181 dcl date_compiled_sw fixed bin defined (cobol_$date_compiled_sw);
  5   182 dcl cobol_$include_cnt fixed bin ext;
  5   183 dcl include_cnt fixed bin defined (cobol_$include_cnt);
  5   184 dcl cobol_$fs_charcnt fixed bin ext;
  5   185 dcl fs_charcnt fixed bin defined (cobol_$fs_charcnt);
  5   186 dcl cobol_$ws_charcnt fixed bin ext;
  5   187 dcl ws_charcnt fixed bin defined (cobol_$ws_charcnt);
  5   188 dcl cobol_$coms_charcnt fixed bin ext;
  5   189 dcl coms_charcnt fixed bin defined (cobol_$coms_charcnt);
  5   190 dcl cobol_$ls_charcnt fixed bin ext;
  5   191 dcl ls_charcnt fixed bin defined (cobol_$ls_charcnt);
  5   192 dcl cobol_$cons_charcnt fixed bin ext;
  5   193 dcl cons_charcnt fixed bin defined (cobol_$cons_charcnt);
  5   194 dcl cobol_$value_cnt fixed bin ext;
  5   195 dcl value_cnt fixed bin defined (cobol_$value_cnt);
  5   196 dcl cobol_$cd_cnt fixed bin ext;
  5   197 dcl cd_cnt fixed bin defined (cobol_$cd_cnt);
  5   198 dcl cobol_$fs_wdoff fixed bin ext;
  5   199 dcl fs_wdoff fixed bin defined (cobol_$fs_wdoff);
  5   200 dcl cobol_$ws_wdoff fixed bin ext;
  5   201 dcl ws_wdoff fixed bin defined (cobol_$ws_wdoff);
  5   202 dcl cobol_$coms_wdoff fixed bin ext;
  5   203 dcl coms_wdoff fixed bin defined (cobol_$coms_wdoff);
  5   204 
  5   205 /* CHARACTER */
  5   206 dcl cobol_$scratch_dir char (168)   aligned ext;
  5   207 dcl scratch_dir char (168)   aligned defined (cobol_$scratch_dir);			/* -42- */
  5   208 dcl cobol_$obj_seg_name char (32)   aligned ext;
  5   209 dcl obj_seg_name char (32)   aligned defined (cobol_$obj_seg_name);		/* -8- */
  5   210 
  5   211 /* BIT */
  5   212 dcl cobol_$xref_bypass bit(1) aligned ext;
  5   213 dcl xref_bypass bit(1) aligned defined (cobol_$xref_bypass);			/* -1- */
  5   214 dcl cobol_$same_sort_merge_proc bit(1) aligned ext;
  5   215 dcl same_sort_merge_proc bit(1) aligned defined (cobol_$same_sort_merge_proc);		/* -1- */
  5   216 
  5   217 
  5   218 /* END INCLUDE FILE ... cobol_incl.pl1*/
  5   219 
  5   220 
     1189 
  6     1 
  6     2 /* BEGIN INCLUDE FILE ...   cobol_sbh.incl.pl1 */
  6     3 /* Created by GM; Last modified July 17, 1974 by ORN */
  6     4 
  6     5 dcl sym_ptr ptr;
  6     6 dcl	1 symbol_block_header aligned based(sym_ptr),
  6     7 	  2 decl_vers fixed bin ,
  6     8 	  2 identifier char(8) aligned,
  6     9 	  2 gen_version_number fixed bin,
  6    10 	  2 gen_creation_time fixed bin(71),
  6    11 	  2 object_creation_time fixed bin(71),
  6    12 	  2 generator char(8) aligned,
  6    13 	  2 gen_version_name_relp bit(18) unaligned,
  6    14 	  2 gen_version_name_length bit(18) unaligned,
  6    15 	  2 userid_relp bit(18) unaligned,
  6    16 	  2 userid_length bit(18) unaligned,
  6    17 	  2 comment_relp bit(18) unaligned,
  6    18 	  2 comment_length bit(18) unaligned,
  6    19 	  2 text_boundary bit(18) unaligned,
  6    20 	  2 stat_boundary bit(18) unaligned,
  6    21 	  2 source_map_relp bit(18) unaligned,
  6    22 	  2 area_relp bit(18) unaligned,
  6    23 	  2 section_relp bit(18) unaligned,
  6    24 	  2 block_size bit(18) unaligned,
  6    25 	  2 next_block_thread bit(18) unaligned,
  6    26 	  2 text_relocation_relp bit(18) unaligned,
  6    27 	  2 def_relocation_relp bit(18) unaligned,
  6    28 	  2 link_relocation_relp bit(18) unaligned,
  6    29 	  2 symbol_relocation_relp bit(18) unaligned,
  6    30 	  2 default_truncate bit(18) unaligned,
  6    31 	  2 optional_truncate bit(18) unaligned;
  6    32 
  6    33 /* END INCLUDE FILE ...   cobol_sbh.incl.pl1 */
  6    34 
     1190 
  7     1 
  7     2 /* BEGIN INCLUDE FILE ...   cobol_eln_table.incl.pl1 */
  7     3 
  7     4 dcl 1 eln_tab(20000)	based(  cobol_$eln_ptr),
  7     5      2 fno		fixed bin(17) unaligned,
  7     6      2 lno		fixed bin(17) unaligned;
  7     7 
  7     8 dcl eln_index		fixed bin;
  7     9 
  7    10 dcl 1 statement_info(20000)	based(  cobol_$statement_info_ptr),
  7    11      2 start		fixed bin(24) unaligned,
  7    12      2 length		fixed bin(8) unaligned;
  7    13 
  7    14 /* END INCLUDE FILE ...   cobol_eln_table.incl.pl1 */
  7    15 
     1191 
  8     1 
  8     2 /* BEGIN INCLUDE FILE ...   cobol_fixed_common.incl.pl1 */
  8     3 /* Modified on 10/27/82 by FCH, [5.1-1], cobol_cln added to save last line num, BUG543(phx13643) */
  8     4 /* Modified on 07/31/80 by FCH, [4.3-1], use_reporting field added for Report Writer */
  8     5 /* Modified on 03/30/79 by FCH, [4.1-1], -card option added */
  8     6 /* Modified on 03/30/79 by FCH, [4.0-2], -svNM option added */
  8     7 /* Modified on 03/02/79 by FCH, [4.0-1], -levNM option added */
  8     8 /* Modified by RAL on 10/13/78, [4.0-0], Added option exp from fil2. */
  8     9 /* Modified by BC on 06/20/77, descriptor added.	*/
  8    10 /* Modified by BC on 06/02/77, init_cd_seg, init_cd_offset added.	*/
  8    11 /* Modified by BC  on 1/21/77, options.profile added.	*/
  8    12 /* Modified by FCH on 7/6/76, sysin_fno & sysout_fno deleted, accept_device & display_device added */
  8    13 /* Modified by FCH on 5/20/77, comp_level added */
  8    14 
  8    15 
  8    16 /*     THE SIZE OF THIS STRUCTURE IN BYTES, (EXCLUDING VARIABLE
  8    17*   LENGTH ENTITIES), FOR EACH HARDWARE IMPLEMENTATION IS:
  8    18*
  8    19*   HARDWARE	|	SIZE (BYTES)
  8    20*   ---------------------------------
  8    21*   645/6180	|	464
  8    22*   P7		|	396
  8    23*   ---------------------------------
  8    24*   */
  8    25 
  8    26 dcl 	1 fixed_common based (  cobol_com_ptr),
  8    27     		2 prog_name char (30),
  8    28    		2 compiler_rev_no char (25),
  8    29     		2 phase_name char (6),
  8    30     		2 currency char (1),
  8    31     		2 fatal_no fixed bin,
  8    32     		2 warn_no fixed bin,
  8    33     		2 proc_counter fixed bin,
  8    34     		2 spec_tag_counter fixed bin,
  8    35     		2 file_count fixed bin,
  8    36     		2 filedescr_offsets (20) char (5),
  8    37     		2 perf_alter_info char (5),
  8    38     		2 another_perform_info char (5),
  8    39     		2 sort_in_info char (5),
  8    40     		2 odo_info char (5),
  8    41     		2 size_seg fixed bin,
  8    42     		2 size_offset fixed bin(24),
  8    43     		2 size_perform_info char (5),
  8    44     		2 rename_info char (5),
  8    45     		2 report_names char (5),
  8    46     		2 rw_buf_seg fixed bin,
  8    47     		2 rw_buf_offset fixed bin(24),
  8    48     		2 rw_buf_length fixed bin(24),
  8    49     		2 file_keys char (5),
  8    50     		2 search_keys char (5),
  8    51     		2 dd_seg_size fixed bin(24),
  8    52     		2 pd_seg_size fixed bin(24),
  8    53     		2 seg_limit fixed bin ,
  8    54     		2 number_of_dd_segs fixed bin,
  8    55     		2 seg_info char (5),
  8    56     		2 number_of_ls_pointers fixed bin,
  8    57     		2 link_sec_seg fixed bin,
  8    58     		2 link_sec_offset fixed bin(24),
  8    59     		2 sra_clauses fixed bin,
  8    60     		2 fix_up_info char (5),
  8    61     		2 linage_info char (5),
  8    62     		2 first_dd_item char (5),
  8    63     		2 sort_out_info char (5),
  8    64     		2 db_info char (5),
  8    65     		2 realm_info char (5),
  8    66     		2 rc_realm_info char (5),
  8    67     		2 last_file_key char (5),
  8    68     		2 prog_coll_seq fixed bin,
  8    69 		2 init_cd_seg fixed bin,
  8    70 		2 init_cd_offset fixed bin(24),
  8    71     		2 input_error_exit fixed bin,
  8    72    		2 output_error_exit fixed bin,
  8    73     		2 i_o_error_exit fixed bin,
  8    74     		2 extend_error_exit fixed bin,
  8    75     		2 dummy15 fixed bin,
  8    76     		2 options,
  8    77       			3 cu bit (1),
  8    78       			3 st bit (1),
  8    79       			3 wn bit (1),
  8    80       			3 obs bit (1),
  8    81       			3 dm bit (1),
  8    82       			3 xrl bit (1),
  8    83       			3 xrn bit (1),
  8    84       			3 src bit (1),
  8    85       			3 obj bit (1),
  8    86       			3 exs bit (1),
  8    87       			3 sck bit (1),
  8    88       			3 rno bit (1),
  8    89 			3 u_l bit (1),
  8    90 			3 cnv bit (1),
  8    91 			3 cos bit (1),
  8    92 			3 fmt bit (1),
  8    93 			3 profile bit(1),
  8    94 			3 nw bit (1),
  8    95 			3 exp bit (1),		/* [4.0-0] */
  8    96 			3 card bit (1),  /*[4.1-1]*/
  8    97 			3 fil2 bit (5),
  8    98 			3 m_map bit (1),
  8    99 			3 m_bf bit (1),
  8   100 			3 m_fat bit (1),
  8   101 			3 m_wn bit (1),
  8   102 			3 m_obs bit(1),
  8   103 			3 pd bit(1),
  8   104       			3 oc bit(1),
  8   105     		2 supervisor bit (1),
  8   106     		2 dec_comma bit (1),
  8   107     		2 init_cd bit (1),
  8   108     		2 corr bit (1),
  8   109     		2 initl bit (1),
  8   110     		2 debug bit (1),
  8   111     		2 report bit (1),
  8   112     		2 sync_in_prog bit (1),
  8   113     		2 pd_section bit (1),
  8   114     		2 list_switch bit (1),
  8   115     		2 alpha_cond bit (1),
  8   116     		2 num_cond bit (1),
  8   117     		2 spec_sysin bit (1),
  8   118     		2 spec_sysout bit (1),
  8   119     		2 cpl_files bit (1),
  8   120     		2 obj_dec_comma bit (1),
  8   121 		2 default_sign_type bit (3),
  8   122 		2 use_debug bit(1),
  8   123 		2 syntax_trace bit(1),
  8   124 		2 comp_defaults,
  8   125 			3 comp	bit(1),
  8   126 			3 comp_1	bit(1),
  8   127 			3 comp_2	bit(1),
  8   128 			3 comp_3	bit(1),
  8   129 			3 comp_4	bit(1),
  8   130 			3 comp_5	bit(1),
  8   131 			3 comp_6	bit(1),
  8   132 			3 comp_7	bit(1),
  8   133 			3 comp_8 bit(1),
  8   134 		2 disp_defaults,
  8   135 			3 disp	bit(1),
  8   136 			3 disp_1	bit(1),
  8   137 			3 disp_2	bit(1),
  8   138 			3 disp_3	bit(1),
  8   139 			3 disp_4	bit(1),
  8   140 			3 disp_5  bit(1),
  8   141 			3 disp_6  bit(1),
  8   142 			3 disp_7  bit(1),
  8   143 		2 descriptor bit(2),
  8   144 		2 levsv  bit(3),		/*[4.0-1]*/
  8   145 		2 use_reporting bit(1),	/*[4.3-1]*/
  8   146 		2 cd bit(1),		/*[4.4-1]*/
  8   147 		2 dummy17 bit(3),
  8   148    		2 lvl_rstr bit(32),
  8   149    		2 inst_rstr bit(32),
  8   150 		2 comp_level char(1),
  8   151 		2 dummy18 char(30),
  8   152 		2 object_sign char (1),
  8   153     		2 last_print_rec char (5),
  8   154     		2 coll_seq_info char (5),
  8   155     		2 sys_status_seg fixed bin,
  8   156    		2 sys_status_offset fixed bin(24),
  8   157    		2 compiler_id fixed bin,
  8   158    		2 date_comp_ln fixed bin,
  8   159    		2 compile_mode bit(36),
  8   160    		2 default_temp fixed bin,
  8   161    		2 accept_device fixed bin,
  8   162    		2 display_device fixed bin,
  8   163    		2 cobol_cln fixed bin,	/*[5.1-1]*/
  8   164 		2 alphabet_offset fixed bin;
  8   165 
  8   166 
  8   167 
  8   168 /* END INCLUDE FILE ...   cobol_fixed_common.incl.pl1 */
  8   169 
     1192 
     1193 
     1194      end cobol_print_diag;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/24/89  0835.7  cobol_print_diag.pl1              >spec>install>MR12.3-1048>cobol_print_diag.pl1
1186         1    03/27/82  0439.7  cobol_diag_file.incl.pl1          >ldd>include>cobol_diag_file.incl.pl1
1187         2    03/27/82  0439.8  cobol_type5.incl.pl1              >ldd>include>cobol_type5.incl.pl1
2-16         3    03/27/82  0439.6  cobol_TYPE5.incl.pl1              >ldd>include>cobol_TYPE5.incl.pl1
1188         4    03/27/82  0431.3  cobol_ext_.incl.pl1               >ldd>include>cobol_ext_.incl.pl1
1189         5    11/11/82  1712.7  cobol_.incl.pl1                   >ldd>include>cobol_.incl.pl1
1190         6    11/11/82  1712.7  cobol_sbh.incl.pl1                >ldd>include>cobol_sbh.incl.pl1
1191         7    03/27/82  0439.7  cobol_eln_table.incl.pl1          >ldd>include>cobol_eln_table.incl.pl1
1192         8    11/11/82  1712.8  cobol_fixed_common.incl.pl1       >ldd>include>cobol_fixed_common.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
BL                              000164 automatic       char(1)                  packed unaligned dcl 983 set ref 662* 664 668* 681*
                                                                                  683 686*
ICOL                            015025 automatic       fixed bin(17,0)          dcl 315 set ref 361* 364
ILEN                            015027 automatic       fixed bin(17,0)          dcl 315 set ref 359* 364 364
JCOL                            015026 automatic       fixed bin(17,0)          dcl 315 set ref 362* 364 371*
JLEN                            015030 automatic       fixed bin(17,0)          dcl 315 set ref 360* 364 364 370*
LINE                            015024 automatic       fixed bin(17,0)          dcl 315 set ref 335* 337 349*
N                               014773 automatic       fixed bin(17,0)          dcl 165 set ref 180* 183
P                               014776 automatic       pointer                  dcl 165 set ref 172* 175 179 180
R                               014774 automatic       fixed bin(17,0)          dcl 165 set ref 179* 183
ac_diag                         000045 internal static fixed bin(17,0)          dcl 1071 set ref 552* 554 587 610 635 643 643 643
                                                                                  643 643 643 651 705 705 705 705 705 705 712 728
                                                                                  729
ad_hof                          000014 internal static pointer                  dcl 1001 set ref 109*
ad_nl                           000030 internal static pointer                  dcl 1039 set ref 108*
addr                                                   builtin function         dcl 1137 ref 82 83 95 108 109 111 117 117 325 397
                                                                                  456 456 661 961 961 975 975
all_done                        014300 automatic       bit(1)                   packed unaligned dcl 1135 set ref 92*
base                      3            based           fixed bin(17,0)          array level 3 dcl 1-9 ref 183 552
bit9                                   based           bit(9)                   packed unaligned dcl 1009 set ref 95*
bsi                             000050 internal static fixed bin(17,0)          dcl 1071 set ref 666* 668 672 674 685* 686 690
ch1                             000165 automatic       char(1)                  packed unaligned dcl 983 set ref 427* 429
char_13                                based           char(15)                 packed unaligned dcl 1076 set ref 661*
cobol_$diag_ptr                 000224 external static pointer                  dcl 5-70 ref 111 111 183 183 540 546 552 554 587 610
                                                                                  635 643 643 643 643 643 643 651 705 705 705 705
                                                                                  705 705 712 728 729
cobol_$eln_ptr                  000222 external static pointer                  dcl 5-68 ref 397 399 405
cobol_$include_cnt              000230 external static fixed bin(17,0)          dcl 5-182 ref 957 964
cobol_$include_info_ptr         000226 external static pointer                  dcl 5-86 ref 966 967 972 972
cobol_$sym_base_ptr             000220 external static pointer                  dcl 5-16 ref 282
cobol_allo_tm                   000162 constant        entry                    external dcl 1003 ref 293 921 929
cobol_allo_tm$free_tm           000164 constant        entry                    external dcl 1004 ref 517 901
cobol_com_ptr                          defined         pointer                  dcl 4-25 ref 102 113 278 278 304 304 453 477 526 613
                                                                                  618 620 626 626 793 844 854 854 854 957
cobol_d3_9                      000051 internal static structure                level 1 unaligned dcl 1073
cobol_dfp                              defined         pointer                  dcl 4-27 set ref 339*
cobol_ext_$cobol_com_ptr        000210 external static pointer                  dcl 4-24 ref 102 102 113 113 278 278 278 278 304 304
                                                                                  304 304 453 453 477 477 526 526 613 613 618 618
                                                                                  620 620 626 626 626 626 793 793 844 844 854 854
                                                                                  854 854 854 854 957 957
cobol_ext_$cobol_dfp            000212 external static pointer                  dcl 4-26 ref 339 339
cobol_ext_$cobol_hfp            000214 external static pointer                  dcl 4-28 set ref 117* 456* 460* 477* 526* 844* 961*
                                                                                  975*
cobol_ext_$cobol_pfp            000216 external static pointer                  dcl 4-46 ref 126 126
cobol_pfp                              defined         pointer                  dcl 4-47 set ref 126*
cobol_put_rec                   000202 constant        entry                    external dcl 1165 ref 117 456 460 477 526 844 961
                                                                                  975
cobol_swf_get                   000170 constant        entry                    external dcl 1110 ref 126 339
cobol_version$header            000200 constant        entry                    external dcl 1163 ref 116
code                            014510 automatic       fixed bin(35,0)          dcl 1155 set ref 966* 967*
col                       3            based           fixed bin(17,0)          level 2 dcl 1023 set ref 420 420* 423 429 430 938*
                                                                                  940*
column                    2            based           fixed bin(17,0)          level 2 dcl 2-15 set ref 327* 361 362 371 938 938
                                                                                  940
comp_level              137            based           char(1)                  level 2 packed packed unaligned dcl 8-26 ref 613
cur_char                        000035 internal static fixed bin(17,0)          dcl 1059 set ref 443* 450 491* 491 790* 839 877* 877
                                                                                  889* 889
d3_9p                           000006 constant        char(28)                 initial array packed unaligned dcl 1079 ref 668 673
                                                                                  686 694
d_len                    32            based           fixed bin(17,0)          array level 3 dcl 1-9 set ref 554 643 651 705 712
                                                                                  728
d_param                  34            based           fixed bin(17,0)          array level 3 dcl 1-9 set ref 635 643 643 643 705
                                                                                  705 705
d_ref                           000040 internal static bit(64)                  packed unaligned dcl 1070 set ref 105*
d_start                  31            based           fixed bin(17,0)          array level 3 dcl 1-9 set ref 643 643 705 705 729
d_string                               based           char(100000)             packed unaligned dcl 1067 ref 643 643 705 705 731
                                                                                  745
d_string_ptr                    000472 automatic       pointer                  dcl 1068 set ref 111* 643 643 705 705 731 745
d_t_size                  1            based           fixed bin(17,0)          level 2 dcl 1-9 ref 111
d_temp                          000055 internal static char(200)                packed unaligned dcl 1101 set ref 598* 643* 705*
                                                                                  731* 781* 839
d_temp_len                      000043 internal static fixed bin(17,0)          dcl 1071 set ref 599* 651* 712* 728* 731 745 779*
                                                                                  781 838 851* 868* 868 870
d_temp_st                       000044 internal static fixed bin(17,0)          dcl 1071 set ref 729* 731 745
d_type                   33            based           fixed bin(17,0)          array level 3 dcl 1-9 set ref 183 587 610
dash                      2            based           char(1)                  level 2 packed packed unaligned dcl 1047 set ref
                                                                                  591*
date_comp_ln            155            based           fixed bin(17,0)          level 2 dcl 8-26 ref 278 278 304 304
date_time                       000171 automatic       char(24)                 packed unaligned dcl 1007 set ref 282* 304
date_time_                      000166 constant        entry                    external dcl 1006 ref 282
di                              014303 automatic       fixed bin(17,0)          dcl 1146 set ref 796* 798 813 818 825 831* 831
diag_cnt                        000046 internal static fixed bin(17,0)          dcl 1071 set ref 204* 204 206 308*
diag_file                              based           structure                level 1 unaligned dcl 1-9
diag_line                              based           structure                level 1 packed packed unaligned dcl 1047
diag_no                   2(09)        based           char(3)                  level 2 packed packed unaligned dcl 1047 set ref
                                                                                  593*
diag_ref                        000034 internal static fixed bin(17,0)          dcl 1059 set ref 414* 426* 426 427* 434* 477 526
                                                                                  610* 613 613* 618* 620* 623* 626 629 844 854 854
                                                                                  854
diag_sw                         000010 internal static bit(1)                   packed unaligned dcl 996 set ref 261* 521 573*
diag_table               31            based           structure                array level 2 unaligned dcl 1-9 set ref 111
dirname                         014616 automatic       char(168)                packed unaligned dcl 1172 set ref 966* 972
dline_1_sw                      000032 internal static bit(1)                   packed unaligned dcl 1040 set ref 630*
dno                             014315 automatic       fixed bin(17,0)          array level 2 dcl 1149 set ref 805* 813 826*
dno_count                       014314 automatic       fixed bin(17,0)          dcl 1148 set ref 89* 800* 800 802 804 805 806 821*
                                                                                  821 823 825 826 827
dno_element                     014315 automatic       structure                array level 1 unaligned dcl 1149
dno_next                  1     014315 automatic       fixed bin(17,0)          array level 2 dcl 1149 set ref 806* 818 825* 827*
                                                                                  831
dno_run_index                   014304 automatic       fixed bin(17,0)          array dcl 1147 set ref 86* 796 804*
dup                             014301 automatic       bit(1)                   packed unaligned dcl 1144 set ref 791* 816* 847
eln_index                       014760 automatic       fixed bin(17,0)          dcl 7-8 set ref 396* 397 399 405
eln_tab                                based           structure                array level 1 packed packed unaligned dcl 7-4 set
                                                                                  ref 397
ename                           014670 automatic       char(32)                 packed unaligned dcl 1172 set ref 966* 969 972
eof_prt                         000474 automatic       bit(1)                   packed unaligned dcl 1104 set ref 93* 130* 269
exs                     133(09)        based           bit(1)                   level 3 packed packed unaligned dcl 8-26 ref 102 113
                                                                                  453 477 526 844 957
fake_message                    015034 automatic       structure                level 1 unaligned dcl 320 set ref 325
ff_char                         000005 constant        char(1)                  initial packed unaligned dcl 1160 set ref 456 456
fill2                     3            based           char(1)                  level 2 packed packed unaligned dcl 1047 set ref
                                                                                  840*
fixed                                                  builtin function         dcl 1137 ref 585 972 972
fixed_common                           based           structure                level 1 unaligned dcl 8-26
fm_name                         000100 automatic       char(4)                  initial array packed unaligned dcl 71 set ref 71*
                                                                                  71* 71* 71* 71* 71* 71* 71* 71* 71* 71* 71* 71*
                                                                                  71* 71* 71* 71* 71* 71* 71* 71* 71* 71* 71* 71*
                                                                                  71* 776
fno                                    based           fixed bin(17,0)          array level 2 packed packed unaligned dcl 7-4 set
                                                                                  ref 399
front                                  based           structure                level 2 packed packed unaligned dcl 1041 set ref
                                                                                  392* 470* 490* 523* 563* 876* 888*
hcs_$fs_get_path_name           000204 constant        entry                    external dcl 1166 ref 966
hcs_$fs_get_ref_name            000206 constant        entry                    external dcl 1168 ref 967
hof                             000012 internal static bit(9)                   initial packed unaligned dcl 999 set ref 109
i                               014271 automatic       fixed bin(17,0)          dcl 1127 set ref 85* 86* 97* 121 122* 135 155 155
                                                                                  169 209* 209 212 215 234* 234 237 240 333* 343
                                                                                  345* 345 355 357* 915 916 924 925 925 936 938 938
                                                                                  940 943 945 947 949 964* 966 967 972 972 972*
i_limit                         014275 automatic       fixed bin(17,0)          dcl 1127 set ref 121* 135 155 169 212 237
image                     6            based           char(120)                level 2 in structure "source" packed packed
                                                                                  unaligned dcl 987 in procedure "cobol_print_diag"
                                                                                  ref 132 135 142 284 302
image                    10            based           char                     level 2 in structure "message" packed packed
                                                                                  unaligned dcl 2-15 in procedure "cobol_print_diag"
                                                                                  ref 925
image                     6            based           char(120)                level 2 in structure "l_source" packed packed
                                                                                  unaligned dcl 1016 in procedure "cobol_print_diag"
                                                                                  set ref 302* 304* 450 456
image                    10            based           char(120)                level 2 in structure "l_diag" packed packed
                                                                                  unaligned dcl 1023 in procedure "cobol_print_diag"
                                                                                  set ref 598 643 643 661 673* 674* 674 694* 701*
                                                                                  705 925*
image_size                7            based           fixed bin(17,0)          level 2 dcl 2-15 ref 924 925 925
in_ptr                          014266 automatic       pointer                  dcl 1127 set ref 126* 132 135 142 175 275 278 284
                                                                                  289 291 297 298 299 302 304 339* 349 359 361 375
                                                                                  378
incl_hdr                        000137 internal static char(73)                 initial packed unaligned dcl 1178 set ref 961 961
incl_line                       014710 automatic       char(150)                packed unaligned dcl 1172 set ref 972* 975 975
incl_line_len                   014756 automatic       fixed bin(17,0)          dcl 1172 set ref 972* 975*
include_ptr                            based           pointer                  array dcl 1171 set ref 966* 967* 972 972
index                                                  builtin function         dcl 1137 ref 284
info                      6            based           bit(9)                   level 2 in structure "message" packed packed
                                                                                  unaligned dcl 2-15 in procedure "cobol_print_diag"
                                                                                  ref 915 945
info                      6(09)        based           bit(27)                  level 2 in structure "l_diag" packed packed
                                                                                  unaligned dcl 1023 in procedure "cobol_print_diag"
                                                                                  set ref 585 632 945* 947*
info                      4            based           bit(8)                   level 2 in structure "l_source" packed packed
                                                                                  unaligned dcl 1016 in procedure "cobol_print_diag"
                                                                                  set ref 299*
info                      4            based           bit(8)                   level 2 in structure "source" packed packed
                                                                                  unaligned dcl 987 in procedure "cobol_print_diag"
                                                                                  ref 299
ioa_                            000176 constant        entry                    external dcl 1156 ref 382 860 861 865
ioa_$rs                         000172 constant        entry                    external dcl 1141 ref 972
ioa_$rsnnl                      000174 constant        entry                    external dcl 1142 ref 401 407 427 434 593
ioa_len                         000371 automatic       fixed bin(17,0)          dcl 1063 set ref 427* 434* 593*
isn                       1            based           char(7)                  level 3 packed packed unaligned dcl 1041 set ref
                                                                                  407*
j                               014772 automatic       fixed bin(17,0)          dcl 165 in procedure "sev3" set ref 169* 172*
j                               014272 automatic       fixed bin(17,0)          dcl 1127 in procedure "cobol_print_diag" set ref
                                                                                  357* 360 362 366 366 368* 368 370 371 375
jj                              014276 automatic       fixed bin(17,0)          dcl 1127 set ref 676* 678 686 694*
k                               014273 automatic       fixed bin(17,0)          dcl 1127 set ref 664* 666* 683* 685*
l_current                       000016 internal static pointer                  dcl 1013 set ref 107* 200* 215 220 221* 221 223 225
                                                                                  230 231 240 260* 263 413* 418 420 420 423 429 430
                                                                                  434 436* 436 501 538 546 546 552 554 574 585 593
                                                                                  595 598 598 599 632 641 641 643 643 643 643 651
                                                                                  659 659 661 672 673 674 674 692 694 694 695 695
                                                                                  701 701 705 705 712 805 813 826 896 897 903* 923*
                                                                                  924 925 930* 931 935 936 938 940 943 945 945 947
                                                                                  949 950
l_diag                                 based           structure                level 1 unaligned dcl 1023
l_first                         000020 internal static pointer                  dcl 1013 set ref 106* 155 200 253 260 295* 296 297
                                                                                  298 299 300 302 304 394 396 411 413 449 450 456
                                                                                  464 485 485 487 514 516 938
l_ptr                           000202 automatic       pointer                  dcl 1015 set ref 293* 295 516* 517* 897* 901* 921*
                                                                                  923 929* 930
l_source                               based           structure                level 1 unaligned dcl 1016
ldn                             014757 automatic       fixed bin(17,0)          dcl 1172 set ref 966* 972
len_t1                          000367 automatic       fixed bin(17,0)          dcl 1063 set ref 468* 860 860
len_t2                          000370 automatic       fixed bin(17,0)          dcl 1063 set ref 480* 861 861
length                    7            based           fixed bin(17,0)          level 2 in structure "l_diag" dcl 1023 in procedure
                                                                                  "cobol_print_diag" set ref 598 599 643 643 651
                                                                                  672* 692 694 695* 695 701 705 712 924* 931*
length                                                 builtin function         dcl 1139 in procedure "cobol_print_diag" ref 779
length                    5            based           fixed bin(17,0)          level 2 in structure "source" dcl 987 in procedure
                                                                                  "cobol_print_diag" ref 289 291
length                    5            based           fixed bin(17,0)          level 2 in structure "l_source" dcl 1016
                                                                                  in procedure "cobol_print_diag" set ref 300* 449
                                                                                  485* 485 487 938
lev_mess                        015112 automatic       varying char(256)        dcl 743 set ref 745* 771* 771 776* 776 779 781
lev_nam                         015104 automatic       varying char(20)         dcl 742 set ref 751* 756* 761* 766* 776
level_num                       000132 automatic       fixed bin(17,0)          initial array dcl 76 set ref 76* 76* 76* 76* 76* 76*
                                                                                  76* 76* 76* 76* 76* 76* 76* 76* 76* 76* 76* 76*
                                                                                  76* 76* 76* 76* 76* 76* 76* 76* 747
levsv                   135            based           bit(3)                   level 2 packed packed unaligned dcl 8-26 ref 618 620
line                      1            based           fixed bin(17,0)          level 2 in structure "message" dcl 2-15 in procedure
                                                                                  "cobol_print_diag" set ref 155 175 215 240 326*
                                                                                  349 359 360 370 936
line                      2            based           fixed bin(17,0)          level 2 in structure "l_diag" dcl 1023 in procedure
                                                                                  "cobol_print_diag" set ref 215 240 936*
line                      3            based           fixed bin(17,0)          level 2 in structure "l_source" dcl 1016
                                                                                  in procedure "cobol_print_diag" set ref 155 298*
                                                                                  394 396
line                      1            based           fixed bin(17,0)          level 2 in structure "source" dcl 987 in procedure
                                                                                  "cobol_print_diag" ref 175 278 298 304
ln                              014270 automatic       fixed bin(17,0)          dcl 1127 set ref 126* 339*
lno                       0(18)        based           fixed bin(17,0)          array level 2 packed packed unaligned dcl 7-4 set
                                                                                  ref 405
m_bf                    133(26)        based           bit(1)                   level 3 packed packed unaligned dcl 8-26 ref 793
m_fat                   133(27)        based           bit(1)                   level 3 packed packed unaligned dcl 8-26 ref 854
m_obs                   133(29)        based           bit(1)                   level 3 packed packed unaligned dcl 8-26 ref 854
m_wn                    133(28)        based           bit(1)                   level 3 packed packed unaligned dcl 8-26 ref 854
margin                                 based           char(4)                  level 3 packed packed unaligned dcl 1041 set ref
                                                                                  404*
message                                based           structure                level 1 unaligned dcl 2-15
mod_num                         000167 automatic       fixed bin(17,0)          dcl 985 set ref 585* 587 587* 747 776
module                    6(09)        based           bit(27)                  level 2 packed packed unaligned dcl 2-15 ref 947
multics_hdr                     014515 automatic       char(256)                packed unaligned dcl 1161 set ref 116* 117 117
multics_hdr_len                 014615 automatic       fixed bin(17,0)          dcl 1162 set ref 116* 117*
new_line_character              000177 automatic       char(1)                  packed unaligned dcl 1008 set ref 95 304
next                                   based           pointer                  level 2 in structure "l_diag" dcl 1023 in procedure
                                                                                  "cobol_print_diag" set ref 221 230* 231* 436 896
                                                                                  935*
next                                   based           pointer                  level 2 in structure "l_source" dcl 1016
                                                                                  in procedure "cobol_print_diag" set ref 260 296*
                                                                                  411 413 464
nl                              000026 internal static bit(9)                   initial packed unaligned dcl 1037 set ref 108
no_diag                         014277 automatic       bit(1)                   packed unaligned dcl 1134 set ref 94* 102 343*
not_done                        014302 automatic       bit(1)                   packed unaligned dcl 1145 set ref 795* 811 815* 820*
null                                                   builtin function         dcl 1137 ref 106 107 223 253 263 275 296 411 418 464
                                                                                  501 514 935
num                       5            based           fixed bin(17,0)          level 2 dcl 1023 set ref 546 546 552 554 593* 595
                                                                                  641 659 805 813 826 949*
number                    5            based           fixed bin(17,0)          level 2 dcl 2-15 ref 180 916 949
object_creation_time      6            based           fixed bin(71,0)          level 2 dcl 6-6 set ref 282*
old_sw                          000011 internal static bit(1)                   packed unaligned dcl 997 set ref 226*
options                 133            based           structure                level 2 packed packed unaligned dcl 8-26
p                               000022 internal static pointer                  dcl 1013 in procedure "cobol_print_diag" set ref
                                                                                  220* 230 896* 903
p                               015032 automatic       pointer                  dcl 318 in procedure "sort_diag" set ref 325* 326
                                                                                  327 328
p1                              000051 internal static fixed bin(17,0)          initial level 2 dcl 1073 set ref 661 668 673
p2                              000024 internal static pointer                  dcl 1013 set ref 225* 231
p_buf                           000204 automatic       char(255)                packed unaligned dcl 1034 set ref 82 467 865 865
part1                           000477 automatic       char(4)                  packed unaligned dcl 1106 set ref 398* 401* 404
pbuf_len                        014514 automatic       fixed bin(17,0)          dcl 1159 set ref 451* 460* 468 474* 477* 480 841*
                                                                                  844* 849* 865 865
pbuf_ptr                        014512 automatic       pointer                  dcl 1158 set ref 82* 392 404 407 450 460* 470 472
                                                                                  477* 490 523 526* 563 574 580 584 591 593 600 629
                                                                                  839 840 844* 876 888
plen                            000047 internal static fixed bin(17,0)          dcl 1071 set ref 690* 692 694 695
ptr_array                       000504 automatic       pointer                  array dcl 1127 set ref 155 172 215 240 328* 360 362
                                                                                  366* 366 370 371 375* 378* 915 916 924 925 925 936
                                                                                  938 938 940 943 945 947 949
pv                        1     000051 internal static bit(1)                   initial array level 2 packed packed unaligned
                                                                                  dcl 1073 ref 678
r_t_size                               based           fixed bin(17,0)          level 2 dcl 1-9 ref 540
ref                       6            based           char(1)                  level 2 in structure "l_diag" packed packed
                                                                                  unaligned dcl 1023 in procedure "cobol_print_diag"
                                                                                  set ref 434* 574 950*
ref                       1(09)        based           char(1)                  level 2 in structure "diag_line" packed packed
                                                                                  unaligned dcl 1047 in procedure "cobol_print_diag"
                                                                                  set ref 574*
ref_cur_char                    000033 internal static fixed bin(17,0)          dcl 1058 set ref 439* 472 481* 481
ref_line                        000304 automatic       char(200)                packed unaligned dcl 1057 set ref 416* 429* 472 861
                                                                                  861
rel                                                    builtin function         dcl 1137 ref 972 972
reln_ptr                        014506 automatic       pointer                  dcl 1154 set ref 397*
rname                           014700 automatic       char(32)                 packed unaligned dcl 1172 set ref 967* 969 969* 972*
run                       4            based           fixed bin(17,0)          level 2 in structure "l_diag" dcl 1023 in procedure
                                                                                  "cobol_print_diag" set ref 538 641 659 943* 945
run                       4            based           fixed bin(17,0)          level 2 in structure "message" dcl 2-15 in procedure
                                                                                  "cobol_print_diag" ref 179 943
run                       1(27)        based           char(1)                  level 2 in structure "diag_line" packed packed
                                                                                  unaligned dcl 1047 in procedure "cobol_print_diag"
                                                                                  set ref 580* 584*
run_no                          000042 internal static fixed bin(17,0)          dcl 1071 set ref 91* 538* 540 540 546 552 576 578
                                                                                  578* 580 608 731 796 804
run_table                 3            based           structure                array level 2 unaligned dcl 1-9
s                               014274 automatic       fixed bin(17,0)          dcl 1127 set ref 98*
s_length                        000200 automatic       fixed bin(17,0)          dcl 1011 set ref 285* 289* 291* 293 300 302 302
s_start                         000201 automatic       fixed bin(17,0)          dcl 1012 set ref 284* 285 304
save_col                        000037 internal static fixed bin(17,0)          dcl 1059 set ref 415* 423 430*
sev_lev                         000166 automatic       fixed bin(17,0)          dcl 985 set ref 747* 749
size                      4            based           fixed bin(17,0)          array level 3 dcl 1-9 ref 546
source                                 based           structure                level 1 unaligned dcl 987
source_ln                              based           structure                level 1 packed packed unaligned dcl 1041
st                              000170 automatic       bit(32)                  packed unaligned dcl 1002 set ref 117* 456* 460*
                                                                                  477* 526* 844* 961* 975*
st_ptr                          000502 automatic       pointer                  dcl 1125 set ref 83* 130 148 271 341
status                          000500 automatic       bit(32)                  packed unaligned dcl 1120 set ref 83 126* 339*
status_right              0(16)        based           bit(16)                  level 2 packed packed unaligned dcl 1121 set ref 130
                                                                                  148 271* 341
status_word                            based           structure                level 1 packed packed unaligned dcl 1121
str_len                         000036 internal static fixed bin(17,0)          dcl 1059 set ref 449* 450 450 451 456 472 472 474
                                                                                  481 485 491 838* 839 839 841 850* 868 877 889
string                                                 builtin function         dcl 1137 set ref 392* 470* 490* 523* 563* 876* 888*
substr                                                 builtin function         dcl 1139 set ref 132 135 142 302* 302 304* 429* 450*
                                                                                  450 456 472* 472 580 598 618 620 629 632 643 643
                                                                                  643 643 661* 668 674 686 694* 701* 705 705 705 731
                                                                                  745 781 839* 839 860 860 861 861 865 865 915 925
                                                                                  972
symbol_block_header                    based           structure                level 1 dcl 6-6
t_buf                           000372 automatic       char(255)                packed unaligned dcl 1066 set ref 467* 860 860
t_flag                          000366 automatic       bit(1)                   packed unaligned dcl 1062 set ref 90* 469* 857 859*
t_fno                           000475 automatic       fixed bin(17,0)          dcl 1105 set ref 399* 401 401*
t_lno                           000476 automatic       fixed bin(17,0)          dcl 1105 set ref 405* 407*
tempbit                         015244 automatic       bit(1)                   packed unaligned dcl 912 set ref 915* 918
tempmno                         015245 automatic       fixed bin(17,0)          dcl 913 set ref 916* 918
text                      3(09)        based           char(1)                  level 2 in structure "diag_line" packed packed
                                                                                  unaligned dcl 1047 in procedure "cobol_print_diag"
                                                                                  set ref 839*
text                      3            based           char(247)                level 2 in structure "source_ln" packed packed
                                                                                  unaligned dcl 1041 in procedure "cobol_print_diag"
                                                                                  set ref 450* 472*
type                      2            based           fixed bin(17,0)          level 2 in structure "l_source" dcl 1016
                                                                                  in procedure "cobol_print_diag" set ref 297*
type                      3            based           fixed bin(17,0)          level 2 in structure "source" dcl 987 in procedure
                                                                                  "cobol_print_diag" ref 297
type                                   based           char(4)                  level 2 in structure "diag_line" packed packed
                                                                                  unaligned dcl 1047 in procedure "cobol_print_diag"
                                                                                  set ref 600* 629*
warn_no                  21            based           fixed bin(17,0)          level 2 dcl 8-26 set ref 626* 626

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
allo1_max                              defined         fixed bin(17,0)          dcl 5-171
allo1_ptr                              defined         pointer                  dcl 5-67
alter_flag                             defined         fixed bin(17,0)          dcl 5-135
alter_index                            defined         fixed bin(17,0)          dcl 5-153
alter_list_ptr                         defined         pointer                  dcl 5-39
cd_cnt                                 defined         fixed bin(17,0)          dcl 5-197
cobol_$allo1_max                       external static fixed bin(17,0)          dcl 5-170
cobol_$allo1_ptr                       external static pointer                  dcl 5-66
cobol_$alter_flag                      external static fixed bin(17,0)          dcl 5-134
cobol_$alter_index                     external static fixed bin(17,0)          dcl 5-152
cobol_$alter_list_ptr                  external static pointer                  dcl 5-38
cobol_$cd_cnt                          external static fixed bin(17,0)          dcl 5-196
cobol_$cobol_data_wd_off               external static fixed bin(17,0)          dcl 5-118
cobol_$compile_count                   external static fixed bin(17,0)          dcl 5-142
cobol_$coms_charcnt                    external static fixed bin(17,0)          dcl 5-188
cobol_$coms_wdoff                      external static fixed bin(17,0)          dcl 5-202
cobol_$con_end_ptr                     external static pointer                  dcl 5-10
cobol_$con_wd_off                      external static fixed bin(17,0)          dcl 5-92
cobol_$cons_charcnt                    external static fixed bin(17,0)          dcl 5-192
cobol_$constant_offset                 external static fixed bin(17,0)          dcl 5-156
cobol_$data_init_flag                  external static fixed bin(17,0)          dcl 5-130
cobol_$date_compiled_sw                external static fixed bin(17,0)          dcl 5-180
cobol_$debug_enable                    external static fixed bin(17,0)          dcl 5-174
cobol_$def_base_ptr                    external static pointer                  dcl 5-12
cobol_$def_max                         external static fixed bin(17,0)          dcl 5-96
cobol_$def_wd_off                      external static fixed bin(17,0)          dcl 5-94
cobol_$eln_max                         external static fixed bin(17,0)          dcl 5-172
cobol_$fixup_max                       external static fixed bin(17,0)          dcl 5-164
cobol_$fixup_ptr                       external static pointer                  dcl 5-30
cobol_$fs_charcnt                      external static fixed bin(17,0)          dcl 5-184
cobol_$fs_wdoff                        external static fixed bin(17,0)          dcl 5-198
cobol_$init_stack_off                  external static fixed bin(17,0)          dcl 5-124
cobol_$initval_base_ptr                external static pointer                  dcl 5-32
cobol_$initval_file_ptr                external static pointer                  dcl 5-34
cobol_$initval_flag                    external static fixed bin(17,0)          dcl 5-178
cobol_$link_base_ptr                   external static pointer                  dcl 5-14
cobol_$link_max                        external static fixed bin(17,0)          dcl 5-100
cobol_$link_wd_off                     external static fixed bin(17,0)          dcl 5-98
cobol_$list_off                        external static fixed bin(17,0)          dcl 5-154
cobol_$list_ptr                        external static pointer                  dcl 5-64
cobol_$ls_charcnt                      external static fixed bin(17,0)          dcl 5-190
cobol_$main_pcs_ptr                    external static pointer                  dcl 5-84
cobol_$map_data_max                    external static fixed bin(17,0)          dcl 5-162
cobol_$map_data_ptr                    external static pointer                  dcl 5-54
cobol_$max_stack_off                   external static fixed bin(17,0)          dcl 5-122
cobol_$minpral5_ptr                    external static pointer                  dcl 5-50
cobol_$misc_base_ptr                   external static pointer                  dcl 5-60
cobol_$misc_end_ptr                    external static pointer                  dcl 5-62
cobol_$misc_max                        external static fixed bin(17,0)          dcl 5-158
cobol_$next_tag                        external static fixed bin(17,0)          dcl 5-128
cobol_$non_source_offset               external static fixed bin(17,0)          dcl 5-176
cobol_$ntbuf_ptr                       external static pointer                  dcl 5-82
cobol_$obj_seg_name                    external static char(32)                 dcl 5-208
cobol_$op_con_ptr                      external static pointer                  dcl 5-80
cobol_$para_eop_flag                   external static fixed bin(17,0)          dcl 5-138
cobol_$pd_map_index                    external static fixed bin(17,0)          dcl 5-116
cobol_$pd_map_max                      external static fixed bin(17,0)          dcl 5-160
cobol_$pd_map_ptr                      external static pointer                  dcl 5-28
cobol_$pd_map_sw                       external static fixed bin(17,0)          dcl 5-126
cobol_$perform_list_ptr                external static pointer                  dcl 5-36
cobol_$perform_para_index              external static fixed bin(17,0)          dcl 5-148
cobol_$perform_sect_index              external static fixed bin(17,0)          dcl 5-150
cobol_$priority_no                     external static fixed bin(17,0)          dcl 5-140
cobol_$ptr_assumption_ind              external static fixed bin(17,0)          dcl 5-144
cobol_$ptr_status_ptr                  external static pointer                  dcl 5-56
cobol_$reg_assumption_ind              external static fixed bin(17,0)          dcl 5-146
cobol_$reg_status_ptr                  external static pointer                  dcl 5-58
cobol_$reloc_def_base_ptr              external static pointer                  dcl 5-20
cobol_$reloc_def_max                   external static fixed bin(24,0)          dcl 5-108
cobol_$reloc_link_base_ptr             external static pointer                  dcl 5-22
cobol_$reloc_link_max                  external static fixed bin(24,0)          dcl 5-110
cobol_$reloc_sym_base_ptr              external static pointer                  dcl 5-24
cobol_$reloc_sym_max                   external static fixed bin(24,0)          dcl 5-112
cobol_$reloc_text_base_ptr             external static pointer                  dcl 5-18
cobol_$reloc_text_max                  external static fixed bin(24,0)          dcl 5-106
cobol_$reloc_work_base_ptr             external static pointer                  dcl 5-26
cobol_$reloc_work_max                  external static fixed bin(24,0)          dcl 5-114
cobol_$reswd_ptr                       external static pointer                  dcl 5-78
cobol_$same_sort_merge_proc            external static bit(1)                   dcl 5-214
cobol_$scratch_dir                     external static char(168)                dcl 5-206
cobol_$sect_eop_flag                   external static fixed bin(17,0)          dcl 5-136
cobol_$seg_init_flag                   external static fixed bin(17,0)          dcl 5-132
cobol_$seg_init_list_ptr               external static pointer                  dcl 5-40
cobol_$stack_off                       external static fixed bin(17,0)          dcl 5-120
cobol_$statement_info_ptr              external static pointer                  dcl 5-76
cobol_$sym_max                         external static fixed bin(17,0)          dcl 5-104
cobol_$sym_wd_off                      external static fixed bin(17,0)          dcl 5-102
cobol_$tag_table_max                   external static fixed bin(17,0)          dcl 5-166
cobol_$tag_table_ptr                   external static pointer                  dcl 5-52
cobol_$temp_token_area_ptr             external static pointer                  dcl 5-42
cobol_$temp_token_max                  external static fixed bin(17,0)          dcl 5-168
cobol_$temp_token_ptr                  external static pointer                  dcl 5-44
cobol_$text_base_ptr                   external static pointer                  dcl 5-8
cobol_$text_wd_off                     external static fixed bin(17,0)          dcl 5-90
cobol_$token_block1_ptr                external static pointer                  dcl 5-46
cobol_$token_block2_ptr                external static pointer                  dcl 5-48
cobol_$value_cnt                       external static fixed bin(17,0)          dcl 5-194
cobol_$ws_charcnt                      external static fixed bin(17,0)          dcl 5-186
cobol_$ws_wdoff                        external static fixed bin(17,0)          dcl 5-200
cobol_$xref_bypass                     external static bit(1)                   dcl 5-212
cobol_$xref_chain_ptr                  external static pointer                  dcl 5-74
cobol_$xref_token_ptr                  external static pointer                  dcl 5-72
cobol_afp                              defined         pointer                  dcl 4-11
cobol_analin_fileno                    defined         pointer                  dcl 4-13
cobol_cmfp                             defined         pointer                  dcl 4-21
cobol_com_fileno                       defined         pointer                  dcl 4-23
cobol_curr_in                          defined         pointer                  dcl 4-53
cobol_curr_out                         defined         pointer                  dcl 4-55
cobol_data_wd_off                      defined         fixed bin(17,0)          dcl 5-119
cobol_eltp                             defined         pointer                  dcl 4-19
cobol_ext_$cobol_afp                   external static pointer                  dcl 4-10
cobol_ext_$cobol_analin_fileno         external static pointer                  dcl 4-12
cobol_ext_$cobol_cmfp                  external static pointer                  dcl 4-20
cobol_ext_$cobol_com_fileno            external static pointer                  dcl 4-22
cobol_ext_$cobol_curr_in               external static pointer                  dcl 4-52
cobol_ext_$cobol_curr_out              external static pointer                  dcl 4-54
cobol_ext_$cobol_eltp                  external static pointer                  dcl 4-18
cobol_ext_$cobol_fileno1               external static fixed bin(24,0)          dcl 4-78
cobol_ext_$cobol_lpr                   external static char(5)                  packed unaligned dcl 4-95
cobol_ext_$cobol_m1fp                  external static pointer                  dcl 4-30
cobol_ext_$cobol_m2fp                  external static pointer                  dcl 4-32
cobol_ext_$cobol_min1_fileno           external static pointer                  dcl 4-34
cobol_ext_$cobol_min2_fileno_ptr       external static pointer                  dcl 4-36
cobol_ext_$cobol_name_fileno           external static pointer                  dcl 4-38
cobol_ext_$cobol_name_fileno_ptr       external static pointer                  dcl 4-40
cobol_ext_$cobol_ntfp                  external static pointer                  dcl 4-42
cobol_ext_$cobol_options               external static char(120)                packed unaligned dcl 4-97
cobol_ext_$cobol_options_len           external static fixed bin(24,0)          dcl 4-80
cobol_ext_$cobol_pdofp                 external static pointer                  dcl 4-44
cobol_ext_$cobol_pdout_fileno          external static fixed bin(24,0)          dcl 4-82
cobol_ext_$cobol_print_fileno          external static fixed bin(24,0)          dcl 4-84
cobol_ext_$cobol_rm2fp                 external static pointer                  dcl 4-48
cobol_ext_$cobol_rmin2_fileno          external static fixed bin(24,0)          dcl 4-86
cobol_ext_$cobol_rmin2fp               external static pointer                  dcl 4-50
cobol_ext_$cobol_rwdd                  external static pointer                  dcl 4-72
cobol_ext_$cobol_rwpd                  external static pointer                  dcl 4-74
cobol_ext_$cobol_sfp                   external static pointer                  dcl 4-56
cobol_ext_$cobol_w1p                   external static pointer                  dcl 4-58
cobol_ext_$cobol_w2p                   external static pointer                  dcl 4-60
cobol_ext_$cobol_w3p                   external static pointer                  dcl 4-62
cobol_ext_$cobol_w5p                   external static pointer                  dcl 4-64
cobol_ext_$cobol_w6p                   external static pointer                  dcl 4-66
cobol_ext_$cobol_w7p                   external static pointer                  dcl 4-68
cobol_ext_$cobol_x1_fileno             external static fixed bin(24,0)          dcl 4-88
cobol_ext_$cobol_x2_fileno             external static fixed bin(24,0)          dcl 4-90
cobol_ext_$cobol_x3_fileno             external static fixed bin(24,0)          dcl 4-92
cobol_ext_$cobol_x3fp                  external static pointer                  dcl 4-70
cobol_ext_$cobol_xlast8                external static bit(1)                   packed unaligned dcl 4-100
cobol_ext_$report_exists               external static bit(1)                   packed unaligned dcl 4-102
cobol_ext_$report_first_token          external static pointer                  dcl 4-14
cobol_ext_$report_last_token           external static pointer                  dcl 4-16
cobol_fileno1                          defined         fixed bin(24,0)          dcl 4-79
cobol_hfp                              defined         pointer                  dcl 4-29
cobol_lpr                              defined         char(5)                  packed unaligned dcl 4-96
cobol_m1fp                             defined         pointer                  dcl 4-31
cobol_m2fp                             defined         pointer                  dcl 4-33
cobol_min1_fileno                      defined         pointer                  dcl 4-35
cobol_min2_fileno_ptr                  defined         pointer                  dcl 4-37
cobol_name_fileno                      defined         pointer                  dcl 4-39
cobol_name_fileno_ptr                  defined         pointer                  dcl 4-41
cobol_ntfp                             defined         pointer                  dcl 4-43
cobol_options                          defined         char(120)                packed unaligned dcl 4-98
cobol_options_len                      defined         fixed bin(24,0)          dcl 4-81
cobol_pdofp                            defined         pointer                  dcl 4-45
cobol_pdout_fileno                     defined         fixed bin(24,0)          dcl 4-83
cobol_print_fileno                     defined         fixed bin(24,0)          dcl 4-85
cobol_rm2fp                            defined         pointer                  dcl 4-49
cobol_rmin2_fileno                     defined         fixed bin(24,0)          dcl 4-87
cobol_rmin2fp                          defined         pointer                  dcl 4-51
cobol_rwdd                             defined         pointer                  dcl 4-73
cobol_rwpd                             defined         pointer                  dcl 4-75
cobol_sfp                              defined         pointer                  dcl 4-57
cobol_w1p                              defined         pointer                  dcl 4-59
cobol_w2p                              defined         pointer                  dcl 4-61
cobol_w3p                              defined         pointer                  dcl 4-63
cobol_w5p                              defined         pointer                  dcl 4-65
cobol_w6p                              defined         pointer                  dcl 4-67
cobol_w7p                              defined         pointer                  dcl 4-69
cobol_x1_fileno                        defined         fixed bin(24,0)          dcl 4-89
cobol_x2_fileno                        defined         fixed bin(24,0)          dcl 4-91
cobol_x3_fileno                        defined         fixed bin(24,0)          dcl 4-93
cobol_x3fp                             defined         pointer                  dcl 4-71
cobol_xlast8                           defined         bit(1)                   packed unaligned dcl 4-101
compile_count                          defined         fixed bin(17,0)          dcl 5-143
coms_charcnt                           defined         fixed bin(17,0)          dcl 5-189
coms_wdoff                             defined         fixed bin(17,0)          dcl 5-203
con_end_ptr                            defined         pointer                  dcl 5-11
con_wd_off                             defined         fixed bin(17,0)          dcl 5-93
cons_charcnt                           defined         fixed bin(17,0)          dcl 5-193
constant_offset                        defined         fixed bin(17,0)          dcl 5-157
curr_input                             automatic       pointer                  dcl 1116
curr_output                            automatic       pointer                  dcl 1117
data_init_flag                         defined         fixed bin(17,0)          dcl 5-131
date_compiled_sw                       defined         fixed bin(17,0)          dcl 5-181
db_len                                 automatic       fixed bin(17,0)          dcl 1061
dbin                                   automatic       char(13)                 packed unaligned dcl 984
debug_enable                           defined         fixed bin(17,0)          dcl 5-175
def_base_ptr                           defined         pointer                  dcl 5-13
def_max                                defined         fixed bin(17,0)          dcl 5-97
def_wd_off                             defined         fixed bin(17,0)          dcl 5-95
diag_ptr                               defined         pointer                  dcl 5-71
divide                                                 builtin function         dcl 1137
eln_max                                defined         fixed bin(17,0)          dcl 5-173
eln_ptr                                defined         pointer                  dcl 5-69
elng_sw                                automatic       bit(1)                   packed unaligned dcl 1153
fixup_max                              defined         fixed bin(17,0)          dcl 5-165
fixup_ptr                              defined         pointer                  dcl 5-31
fs_charcnt                             defined         fixed bin(17,0)          dcl 5-185
fs_wdoff                               defined         fixed bin(17,0)          dcl 5-199
in_record                              based           char                     packed unaligned dcl 1127
include_cnt                            defined         fixed bin(17,0)          dcl 5-183
include_info_ptr                       defined         pointer                  dcl 5-87
init_stack_off                         defined         fixed bin(17,0)          dcl 5-125
initval_base_ptr                       defined         pointer                  dcl 5-33
initval_file_ptr                       defined         pointer                  dcl 5-35
initval_flag                           defined         fixed bin(17,0)          dcl 5-179
key1                                   automatic       char(5)                  packed unaligned dcl 1115
keyno                                  automatic       char(5)                  packed unaligned dcl 1114
link_base_ptr                          defined         pointer                  dcl 5-15
link_max                               defined         fixed bin(17,0)          dcl 5-101
link_wd_off                            defined         fixed bin(17,0)          dcl 5-99
list_off                               defined         fixed bin(17,0)          dcl 5-155
list_ptr                               defined         pointer                  dcl 5-65
ls_charcnt                             defined         fixed bin(17,0)          dcl 5-191
main_pcs_ptr                           defined         pointer                  dcl 5-85
map_data_max                           defined         fixed bin(17,0)          dcl 5-163
map_data_ptr                           defined         pointer                  dcl 5-55
max_stack_off                          defined         fixed bin(17,0)          dcl 5-123
message_ptr                            automatic       pointer                  dcl 2-12
minpral5_ptr                           defined         pointer                  dcl 5-51
misc_base_ptr                          defined         pointer                  dcl 5-61
misc_end_ptr                           defined         pointer                  dcl 5-63
misc_max                               defined         fixed bin(17,0)          dcl 5-159
mod                                                    builtin function         dcl 1137
next_tag                               defined         fixed bin(17,0)          dcl 5-129
non_source_offset                      defined         fixed bin(17,0)          dcl 5-177
ntbuf_ptr                              defined         pointer                  dcl 5-83
obj_seg_name                           defined         char(32)                 dcl 5-209
op_con_ptr                             defined         pointer                  dcl 5-81
para_eop_flag                          defined         fixed bin(17,0)          dcl 5-139
pd_map_index                           defined         fixed bin(17,0)          dcl 5-117
pd_map_max                             defined         fixed bin(17,0)          dcl 5-161
pd_map_ptr                             defined         pointer                  dcl 5-29
pd_map_sw                              defined         fixed bin(17,0)          dcl 5-127
perform_list_ptr                       defined         pointer                  dcl 5-37
perform_para_index                     defined         fixed bin(17,0)          dcl 5-149
perform_sect_index                     defined         fixed bin(17,0)          dcl 5-151
priority_no                            defined         fixed bin(17,0)          dcl 5-141
ptr_assumption_ind                     defined         fixed bin(17,0)          dcl 5-145
ptr_status_ptr                         defined         pointer                  dcl 5-57
recsize                                automatic       fixed bin(17,0)          dcl 1118
recsize2                               automatic       fixed bin(17,0)          dcl 1119
reg_assumption_ind                     defined         fixed bin(17,0)          dcl 5-147
reg_status_ptr                         defined         pointer                  dcl 5-59
reloc_def_base_ptr                     defined         pointer                  dcl 5-21
reloc_def_max                          defined         fixed bin(24,0)          dcl 5-109
reloc_link_base_ptr                    defined         pointer                  dcl 5-23
reloc_link_max                         defined         fixed bin(24,0)          dcl 5-111
reloc_sym_base_ptr                     defined         pointer                  dcl 5-25
reloc_sym_max                          defined         fixed bin(24,0)          dcl 5-113
reloc_text_base_ptr                    defined         pointer                  dcl 5-19
reloc_text_max                         defined         fixed bin(24,0)          dcl 5-107
reloc_work_base_ptr                    defined         pointer                  dcl 5-27
reloc_work_max                         defined         fixed bin(24,0)          dcl 5-115
report_exists                          defined         bit(1)                   packed unaligned dcl 4-103
report_first_token                     defined         pointer                  dcl 4-15
report_last_token                      defined         pointer                  dcl 4-17
reswd_ptr                              defined         pointer                  dcl 5-79
same_sort_merge_proc                   defined         bit(1)                   dcl 5-215
sarea                                  based           char(10000)              packed unaligned dcl 1127
sarea_ptr                              automatic       pointer                  dcl 1127
scratch_dir                            defined         char(168)                dcl 5-207
sect_eop_flag                          defined         fixed bin(17,0)          dcl 5-137
seg_init_flag                          defined         fixed bin(17,0)          dcl 5-133
seg_init_list_ptr                      defined         pointer                  dcl 5-41
stack_off                              defined         fixed bin(17,0)          dcl 5-121
statement_info                         based           structure                array level 1 packed packed unaligned dcl 7-10
statement_info_ptr                     defined         pointer                  dcl 5-77
sym_base_ptr                           defined         pointer                  dcl 5-17
sym_max                                defined         fixed bin(17,0)          dcl 5-105
sym_ptr                                automatic       pointer                  dcl 6-5
sym_wd_off                             defined         fixed bin(17,0)          dcl 5-103
t_isn                                  internal static char(13)                 packed unaligned dcl 1102
tag_table_max                          defined         fixed bin(17,0)          dcl 5-167
tag_table_ptr                          defined         pointer                  dcl 5-53
temp_ptr                               automatic       pointer                  dcl 1103
temp_token_area_ptr                    defined         pointer                  dcl 5-43
temp_token_max                         defined         fixed bin(17,0)          dcl 5-169
temp_token_ptr                         defined         pointer                  dcl 5-45
template                               based           char                     packed unaligned dcl 1127
text_base_ptr                          defined         pointer                  dcl 5-9
text_wd_off                            defined         fixed bin(17,0)          dcl 5-91
token_block1_ptr                       defined         pointer                  dcl 5-47
token_block2_ptr                       defined         pointer                  dcl 5-49
value_cnt                              defined         fixed bin(17,0)          dcl 5-195
ws_charcnt                             defined         fixed bin(17,0)          dcl 5-187
ws_wdoff                               defined         fixed bin(17,0)          dcl 5-201
xref_bypass                            defined         bit(1)                   dcl 5-213
xref_chain_ptr                         defined         pointer                  dcl 5-75
xref_token_ptr                         defined         pointer                  dcl 5-73

NAMES DECLARED BY EXPLICIT CONTEXT.
DEL_DIAG_ENTRY                  005004 constant        entry                    internal dcl 883 ref 542 548 557
L                               000000 constant        label                    array(5) dcl 751 ref 749
L1                              004374 constant        label                    dcl 776 ref 754 759 764 769
L2                              004453 constant        label                    dcl 779 ref 774
al_dt                           005037 constant        entry                    internal dcl 907 ref 228
close_it                        005211 constant        entry                    internal dcl 954 ref 150
cobol_print_diag                001346 constant        entry                    external dcl 44
del_diag_entry                  005016 constant        entry                    internal dcl 893 ref 872 886
last_diag                       003340 constant        entry                    internal dcl 511 ref 263 503
lev_diag                        004303 constant        entry                    internal dcl 739 ref 733
next_diag                       003324 constant        entry                    internal dcl 496 ref 265
no_param                        004253 constant        entry                    internal dcl 725 ref 637 717
proc_diag                       002203 constant        entry                    internal dcl 195 ref 155
proc_dt                         003416 constant        entry                    internal dcl 533 ref 506
proc_source                     002274 constant        entry                    internal dcl 249 ref 146
put_diag                        004462 constant        entry                    internal dcl 785 ref 602 653 721 735
rd                              002020 constant        label                    dcl 126 ref 132 135 142
sev3                            002120 constant        entry                    internal dcl 161 ref 135
sort_diag                       002500 constant        entry                    internal dcl 312 ref 100
start_proc_source               002652 constant        entry                    internal dcl 387 ref 256

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      5756        6210    5522        5766
Length      6700    5522       232         454     234         152

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cobol_print_diag                   7066 external procedure  is an external procedure.  
sev3                                    internal procedure  shares stack frame of external procedure cobol_print_diag.  
proc_diag                               internal procedure  shares stack frame of external procedure cobol_print_diag.  
proc_source                             internal procedure  shares stack frame of external procedure cobol_print_diag.  
sort_diag                               internal procedure  shares stack frame of external procedure cobol_print_diag.  
start_proc_source                       internal procedure  shares stack frame of external procedure cobol_print_diag.  
next_diag                               internal procedure  shares stack frame of external procedure cobol_print_diag.  
last_diag                               internal procedure  shares stack frame of external procedure cobol_print_diag.  
proc_dt                                 internal procedure  shares stack frame of external procedure cobol_print_diag.  
no_param                                internal procedure  shares stack frame of external procedure cobol_print_diag.  
lev_diag                                internal procedure  shares stack frame of external procedure cobol_print_diag.  
put_diag                                internal procedure  shares stack frame of external procedure cobol_print_diag.  
DEL_DIAG_ENTRY                          internal procedure  shares stack frame of external procedure cobol_print_diag.  
del_diag_entry                          internal procedure  shares stack frame of external procedure cobol_print_diag.  
al_dt                                   internal procedure  shares stack frame of external procedure cobol_print_diag.  
close_it                                internal procedure  shares stack frame of external procedure cobol_print_diag.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 diag_sw                     cobol_print_diag
000011 old_sw                      cobol_print_diag
000012 hof                         cobol_print_diag
000014 ad_hof                      cobol_print_diag
000016 l_current                   cobol_print_diag
000020 l_first                     cobol_print_diag
000022 p                           cobol_print_diag
000024 p2                          cobol_print_diag
000026 nl                          cobol_print_diag
000030 ad_nl                       cobol_print_diag
000032 dline_1_sw                  cobol_print_diag
000033 ref_cur_char                cobol_print_diag
000034 diag_ref                    cobol_print_diag
000035 cur_char                    cobol_print_diag
000036 str_len                     cobol_print_diag
000037 save_col                    cobol_print_diag
000040 d_ref                       cobol_print_diag
000042 run_no                      cobol_print_diag
000043 d_temp_len                  cobol_print_diag
000044 d_temp_st                   cobol_print_diag
000045 ac_diag                     cobol_print_diag
000046 diag_cnt                    cobol_print_diag
000047 plen                        cobol_print_diag
000050 bsi                         cobol_print_diag
000051 cobol_d3_9                  cobol_print_diag
000055 d_temp                      cobol_print_diag
000137 incl_hdr                    cobol_print_diag

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cobol_print_diag         000100 fm_name                     cobol_print_diag
                         000132 level_num                   cobol_print_diag
                         000164 BL                          cobol_print_diag
                         000165 ch1                         cobol_print_diag
                         000166 sev_lev                     cobol_print_diag
                         000167 mod_num                     cobol_print_diag
                         000170 st                          cobol_print_diag
                         000171 date_time                   cobol_print_diag
                         000177 new_line_character          cobol_print_diag
                         000200 s_length                    cobol_print_diag
                         000201 s_start                     cobol_print_diag
                         000202 l_ptr                       cobol_print_diag
                         000204 p_buf                       cobol_print_diag
                         000304 ref_line                    cobol_print_diag
                         000366 t_flag                      cobol_print_diag
                         000367 len_t1                      cobol_print_diag
                         000370 len_t2                      cobol_print_diag
                         000371 ioa_len                     cobol_print_diag
                         000372 t_buf                       cobol_print_diag
                         000472 d_string_ptr                cobol_print_diag
                         000474 eof_prt                     cobol_print_diag
                         000475 t_fno                       cobol_print_diag
                         000476 t_lno                       cobol_print_diag
                         000477 part1                       cobol_print_diag
                         000500 status                      cobol_print_diag
                         000502 st_ptr                      cobol_print_diag
                         000504 ptr_array                   cobol_print_diag
                         014266 in_ptr                      cobol_print_diag
                         014270 ln                          cobol_print_diag
                         014271 i                           cobol_print_diag
                         014272 j                           cobol_print_diag
                         014273 k                           cobol_print_diag
                         014274 s                           cobol_print_diag
                         014275 i_limit                     cobol_print_diag
                         014276 jj                          cobol_print_diag
                         014277 no_diag                     cobol_print_diag
                         014300 all_done                    cobol_print_diag
                         014301 dup                         cobol_print_diag
                         014302 not_done                    cobol_print_diag
                         014303 di                          cobol_print_diag
                         014304 dno_run_index               cobol_print_diag
                         014314 dno_count                   cobol_print_diag
                         014315 dno_element                 cobol_print_diag
                         014506 reln_ptr                    cobol_print_diag
                         014510 code                        cobol_print_diag
                         014512 pbuf_ptr                    cobol_print_diag
                         014514 pbuf_len                    cobol_print_diag
                         014515 multics_hdr                 cobol_print_diag
                         014615 multics_hdr_len             cobol_print_diag
                         014616 dirname                     cobol_print_diag
                         014670 ename                       cobol_print_diag
                         014700 rname                       cobol_print_diag
                         014710 incl_line                   cobol_print_diag
                         014756 incl_line_len               cobol_print_diag
                         014757 ldn                         cobol_print_diag
                         014760 eln_index                   cobol_print_diag
                         014772 j                           sev3
                         014773 N                           sev3
                         014774 R                           sev3
                         014776 P                           sev3
                         015024 LINE                        sort_diag
                         015025 ICOL                        sort_diag
                         015026 JCOL                        sort_diag
                         015027 ILEN                        sort_diag
                         015030 JLEN                        sort_diag
                         015032 p                           sort_diag
                         015034 fake_message                sort_diag
                         015104 lev_nam                     lev_diag
                         015112 lev_mess                    lev_diag
                         015244 tempbit                     al_dt
                         015245 tempmno                     al_dt

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_char_temp     cat_realloc_chars   call_ext_out_desc   call_ext_out        return_mac          shorten_stack
ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cobol_allo_tm                 cobol_allo_tm$free_tm         cobol_put_rec                 cobol_swf_get
cobol_version$header          date_time_                    hcs_$fs_get_path_name         hcs_$fs_get_ref_name
ioa_                          ioa_$rs                       ioa_$rsnnl

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
cobol_$diag_ptr               cobol_$eln_ptr                cobol_$include_cnt            cobol_$include_info_ptr
cobol_$sym_base_ptr           cobol_ext_$cobol_com_ptr      cobol_ext_$cobol_dfp          cobol_ext_$cobol_hfp
cobol_ext_$cobol_pfp




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     44 001345        71 001353        76 001524        82 001667        83 001671        85 001673        86 001701
     87 001702        89 001704        90 001705        91 001706        92 001710        93 001711        94 001712
     95 001713        97 001715        98 001716       100 001720       102 001721       105 001734       106 001736
    107 001740       108 001741       109 001743       111 001745       113 001753       116 001755       117 001771
    121 002013       122 002015       124 002017       126 002020       130 002035       132 002045       135 002053
    141 002067       142 002070       146 002073       148 002074       150 002101       151 002102       155 002103
    159 002116      1194 002117       161 002120       169 002122       172 002131       175 002134       179 002146
    180 002150       183 002152       187 002173       190 002175       195 002203       200 002204       202 002207
    204 002210       206 002212       209 002216       212 002217       215 002223       218 002233       220 002234
    221 002237       223 002241       225 002245       226 002246       228 002250       230 002251       231 002254
    234 002256       237 002257       240 002263       243 002272       245 002273       249 002274       253 002275
    256 002302       260 002303       261 002307       263 002310       265 002316       269 002317       271 002321
    272 002325       275 002326       278 002333       282 002343       284 002361       285 002373       287 002375
    289 002376       291 002401       293 002404       295 002417       296 002422       297 002424       298 002430
    299 002432       300 002434       302 002436       304 002441       308 002475       310 002477       312 002500
    325 002501       326 002503       327 002504       328 002505       333 002506       335 002513       337 002514
    339 002516       341 002533       343 002540       345 002545       346 002547       349 002550       352 002553
    355 002554       357 002557       359 002561       360 002564       361 002572       362 002574       364 002576
    366 002605       368 002611       370 002613       371 002621       373 002623       375 002624       376 002630
    378 002631       380 002633       382 002635       384 002651       387 002652       392 002653       394 002657
    396 002663       397 002664       398 002670       399 002672       401 002701       404 002732       405 002736
    407 002751       411 003001       413 003006       414 003011       415 003012       416 003013       418 003016
    420 003023       423 003030       426 003033       427 003034       429 003061       430 003067       434 003071
    436 003116       437 003122       439 003123       443 003125       447 003127       449 003130       450 003134
    451 003141       453 003143       456 003150       460 003203       464 003223       467 003230       468 003233
    469 003235       470 003237       472 003243       474 003250       477 003253       480 003301       481 003303
    485 003306       487 003311       490 003314       491 003320       492 003322       494 003323       496 003324
    499 003325       501 003326       503 003333       504 003334       506 003335       508 003336       509 003337
    511 003340       514 003341       516 003346       517 003350       521 003356       523 003361       526 003365
    531 003415       533 003416       538 003417       540 003423       542 003427       543 003430       546 003431
    548 003442       549 003443       552 003444       554 003446       557 003454       558 003455       563 003456
    573 003462       574 003464       576 003467       578 003472       580 003476       582 003501       584 003502
    585 003505       587 003510       591 003516       593 003521       595 003550       598 003554       599 003560
    600 003562       602 003566       604 003567       608 003570       610 003573       613 003601       616 003613
    618 003614       620 003624       623 003632       626 003634       629 003642       630 003647       632 003651
    635 003654       637 003663       638 003664       641 003665       643 003673       651 003756       653 003764
    655 003765       659 003766       661 003774       662 003777       664 004001       666 004012       668 004016
    670 004030       672 004032       673 004037       674 004045       676 004062       678 004071       681 004076
    683 004100       685 004110       686 004114       688 004126       690 004130       692 004134       694 004140
    695 004161       699 004164       701 004166       705 004174       712 004242       714 004246       717 004247
    718 004250       721 004251       723 004252       725 004253       728 004254       729 004264       731 004266
    733 004300       735 004301       737 004302       739 004303       745 004304       747 004317       749 004322
    751 004323       754 004327       756 004330       759 004335       761 004336       764 004343       766 004344
    769 004350       771 004351       774 004372       776 004374       779 004453       781 004456       783 004461
    785 004462       790 004463       791 004466       793 004467       795 004474       796 004476       798 004501
    800 004502       802 004503       804 004506       805 004507       806 004514       809 004515       811 004516
    813 004520       815 004530       816 004531       817 004533       818 004534       820 004537       821 004540
    823 004541       825 004544       826 004545       827 004551       829 004552       831 004553       833 004554
    836 004555       838 004556       839 004561       840 004566       841 004571       844 004573       847 004621
    849 004623       850 004625       851 004627       854 004630       857 004655       859 004660       860 004661
    861 004706       863 004735       865 004736       866 004764       868 004765       870 004770       872 004772
    873 004773       876 004774       877 005000       879 005002       881 005003       883 005004       886 005005
    888 005006       889 005012       891 005015       893 005016       896 005017       897 005023       901 005025
    903 005033       905 005036       907 005037       915 005040       916 005047       918 005051       921 005055
    923 005070       924 005073       925 005101       927 005110       929 005111       930 005124       931 005127
    935 005131       936 005133       938 005141       940 005154       943 005155       945 005162       947 005174
    949 005201       950 005206       952 005210       954 005211       957 005212       961 005222       964 005245
    966 005255       967 005310       969 005343       972 005352       975 005451       977 005474       981 005476


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
