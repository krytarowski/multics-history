	COMPILATION LISTING OF SEGMENT cobol_set_pr
	Compiled by: Multics PL/I Compiler, Release 31b, of April 24, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 05/24/89  0954.6 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
       17*     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
       18*     MCR8060 cobol_set_pr.pl1 Added Trace statements.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 /* Modified on 09/23/83 by FCH, [5.2...], trace added */
       23 /* Modified on 09/25/80 by FCH, [4.4-1], values in array epp_instr were being changed, BUG445 */
       24 /* Modified on 01/12/78 by FCH, [3.0-1], a9db_instr changed from static to automatic */
       25 /* Changes made since Version 3.0 */
       26 
       27 /* format: style3 */
       28 cobol_set_pr:
       29      proc (struc_ptr, dn_ptr);
       30 
       31 dcl	struc_ptr		ptr;			/* pts to a structure identical to that used by cobol_pointer_register */
       32 dcl	dn_ptr		ptr;			/* pts to a type 9 token */
       33 
       34 /* This routine is passed an input structure identical to that
       35*passed to cobol_pointer_register$get and additionally a pointer
       36*to a type 9 token.  The pointer register specified in the
       37*structure is set to point to the data item described by the type 9
       38*token (to the byte).  The switch field in the input structure
       39*should be set to 0.  If it is not, a call to this routine
       40*is no different than a call to cobol_pointer_register$get, i.e.
       41*the ptr to the type 9 token is ignored and the segno and offset
       42*fields in the structure are used instead. */
       43 
       44 dcl	1 structure	based (struc_ptr),
       45 	  2 what_pointer	fixed bin,
       46 	  2 pointer_no	bit (3),
       47 	  2 lock		fixed bin,
       48 	  2 switch	fixed bin,
       49 	  2 segno		fixed bin,
       50 	  2 offset	fixed bin (24),
       51 	  2 reset		fixed bin;
       52 
       53 /*
       54* what_pointer specifies the pointer register to be obtained.
       55*	(input)
       56*	0-7 - get this pointer register.
       57*	 10 - get any temporary pointer register.
       58* pointer_no is the register that is assigned, in the
       59*	range 0-7. (output)
       60* lock	can have the following values. (input)
       61*	0 - do not change the lock or unlock status
       62*	    of this pointer.
       63*	1 - lock the pointer register.
       64*	2 - unlock all pointer registers.
       65*	3 - unlock all pointer registers and A register
       66*	    and Q register and all index registers.
       67* switch	has the following values. (input)
       68*	0 - the dn_ptr is to be used to set the pointer
       69*	    register rather than segno and offset
       70*	    fields which follow.  In this case the value
       71*	    is not meaningful for register optimization.
       72*	    Segment number and offset are meaningless.
       73*	1 - a segment number and word offset are supplied.
       74*	2 - a segment number and character offset are supplied
       75* segno 	is the segment number. (input)
       76*	values recognized are:
       77*	    2 - cobol data.
       78*	 1000 - stack.
       79*	 3000 - constants.
       80*	 3002 - multics linkage.
       81*	 4000 - pl1 operators.
       82*	2nnnn - cobol linkage.
       83*	   -n - link in multics linkage.
       84* offset	is the word or character offset (depending on switch).
       85*	Any case when the offset is meaningless a 0 value
       86*	must be used. 
       87*	If a character offset is provided only the word
       88*	portion is meaningful. (input)
       89* reset	specifies that the caller has requested a register
       90*	that must have a preset value. For example a preset
       91*	register to cobol data or the pointer to pl/1 operators
       92*	(likely). This is only of interest to callers
       93*	who request a specific register (what_pointer = 0-7)
       94*	Such callers should test reset. If it is 1, a call to
       95*	cobol_reset_r should be made in order
       96*	to emit instructions to reload the register to
       97*	its proper value.
       98*/*}*/
       99 
      100 dcl	1 addr_struc	static,
      101 	  2 type		fixed bin,
      102 	  2 operand_no	fixed bin init (1),
      103 	  2 lock		fixed bin init (0),
      104 	  2 operand,
      105 	    3 token_ptr	ptr,
      106 	    3 send_receive	fixed bin init (0),
      107 	    3 ic_mod	fixed bin,
      108 	    3 size_sw	fixed bin init (1);		/* don't bother with size */
      109 
      110 /*[4.4-1]*/
      111 dcl	instr		bit (36);
      112 
      113 dcl	epp_instr		(0:7) bit (36) static
      114 			init ("000000000000000000011101000000000000"b, "000000000000000000011101001100000000"b,
      115 			"000000000000000000011101010000000000"b, "000000000000000000011101011100000000"b,
      116 			"000000000000000000011111000000000000"b, "000000000000000000011111001100000000"b,
      117 			"000000000000000000011111010000000000"b, "000000000000000000011111011100000000"b)
      118 			options (constant);
      119 dcl	a9bd_instr	bit (36);			/*[3.0-1]*/
      120 dcl	omit_sign_instr	(2) bit (36) static init ("000000000000000001010010010000000011"b,
      121 						/* ldx2	1,du	*/
      122 			"010000000000000000101000000101001010"b) /* a9bd	pr2|0,2	*/ options (constant);
      123 
      124 dcl	reloc		(2) bit (5) aligned;
      125 dcl	reloc_ptr		ptr;
      126 dcl	instr_ptr		ptr;
      127 dcl	addr_struc_ptr	ptr;
      128 dcl	i		fixed bin;
      129 dcl	backup		fixed bin;
      130 dcl	subsw		bit (1);
      131 dcl	omitsw		bit (1);
      132 
      133 dcl	cobol_emit	entry (ptr, ptr, fixed bin);
      134 dcl	cobol_addr	entry (ptr, ptr, ptr);
      135 dcl	cobol_pointer_register$get
      136 			entry (ptr);
      137 
      138 
      139 
      140 	/***.....	dcl cobol_gen_driver_$Tr_Beg entry(char(*));/**/
      141 	/***.....	dcl cobol_gen_driver_$Tr_End entry(char(*));/**/
      142 
      143 	/***.....	dcl Trace_Bit bit(1) static external;/**/
      144 	/***.....	dcl Trace_Lev fixed bin static external;/**/
      145 	/***.....	dcl Trace_Line char(36) static external;/**/
      146 	/***.....	dcl ioa_ entry options(variable); /**/
      147 	/***..... dcl MY_NAME char (12) int static init ("COBOL_SET_PR");/**/
      148 
      149 
      150 /*************************************/
      151 
      152 	/***.....if Trace_Bit then call cobol_gen_driver_$Tr_Beg(MY_NAME);/**/
      153 
      154 	omitsw = "0"b;
      155 	go to start;
      156 
      157 omit_sign:
      158      entry (struc_ptr, dn_ptr);
      159 
      160 	/***..... dcl LOCAL_NAME char (10) int static init ("$OMIT_SIGN");/**/
      161 	/***.....	if Trace_Bit then call cobol_gen_driver_$Tr_Beg(MY_NAME||LOCAL_NAME);/**/
      162 
      163 	omitsw = "1"b;
      164 
      165 start:
      166 	if structure.switch ^= 0 | dn_ptr = null ()
      167 	then do;
      168 
      169 		call cobol_pointer_register$get (struc_ptr);
      170 		go to pr_done;
      171 
      172 	     end;
      173 
      174 
      175 
      176 	if data_name.subscripted
      177 	then do;
      178 
      179 		subsw = "1"b;
      180 		data_name.subscripted = "0"b;
      181 		occurs_ptr = addrel (dn_ptr, substr (unspec (data_name.occurs_ptr), 17, 18));
      182 		backup = 0;
      183 
      184 		do i = 1 to occurs.dimensions;
      185 		     backup = backup + divide (occurs.level.struc_length (i), 2, 35, 0);
      186 						/* accumulate size of each dimension */
      187 		end;
      188 
      189 		data_name.offset = data_name.offset - backup;
      190 						/* backup to zeroth element */
      191 
      192 
      193 	     end;
      194 	else subsw = "0"b;
      195 
      196 	call cobol_pointer_register$get (struc_ptr);
      197 
      198 	addr_struc.type = 2;
      199 	addr_struc.operand.token_ptr = dn_ptr;
      200 	addr_struc_ptr = addr (addr_struc);
      201 
      202 /*[4.4-1]*/
      203 	instr_ptr = addr (instr);			/*[4.4-1]*/
      204 	instr = epp_instr (fixed (structure.pointer_no, 3));
      205 
      206 	reloc_ptr = addr (reloc);
      207 
      208 	call cobol_addr (addr_struc_ptr, instr_ptr, reloc_ptr);
      209 	call cobol_emit (instr_ptr, reloc_ptr, 1);
      210 
      211 	a9bd_instr = "000000000000000000101000000100000000"b;
      212 						/*[3.0-1]*/
      213 
      214 	if subsw
      215 	then do;
      216 
      217 		data_name.subscripted = "1"b;
      218 		substr (a9bd_instr, 1, 3) = structure.pointer_no;
      219 		addr_struc.type = 7;
      220 		instr_ptr = addr (a9bd_instr);
      221 
      222 		call cobol_addr (addr_struc_ptr, instr_ptr, reloc_ptr);
      223 		call cobol_emit (instr_ptr, reloc_ptr, 1);
      224 
      225 		data_name.offset = data_name.offset + backup;
      226 						/* readjust offset to base of array */
      227 
      228 	     end;
      229 	else if mod (data_name.offset, 4) ^= 0
      230 	then do;					/* non-word-aligned scalar data */
      231 
      232 		substr (a9bd_instr, 1, 3) = structure.pointer_no;
      233 		addr_struc.type = 7;
      234 		instr_ptr = addr (a9bd_instr);
      235 
      236 		call cobol_addr (addr_struc_ptr, instr_ptr, reloc_ptr);
      237 		call cobol_emit (instr_ptr, reloc_ptr, 1);
      238 
      239 	     end;
      240 
      241 	if omitsw
      242 	then if data_name.sign_separate
      243 	     then call cobol_emit (addr (omit_sign_instr), null (), 2);
      244 						/* adjust pr */
      245 
      246 pr_done:	/***.....if Trace_Bit then call cobol_gen_driver_$Tr_End(MY_NAME);/**/
      247 	return;
      248 
      249 
      250 /*************************************/
      251 
      252 /*****	Declaration for builtin function	*****/
      253 
      254 dcl	(substr, mod, binary, fixed, addr, addrel, rel, length, string, unspec, null, index)
      255 			builtin;
      256 
      257 /*****	End of declaration for builtin function	*****/
      258 
  1     1 
  1     2 /* BEGIN INCLUDE FILE ... cobol_occurs_ext.incl.pl1 */
  1     3 /* Last modified on 01/19/77 by ORN */
  1     4 
  1     5 /*
  1     6*An occurs extension is included in a type 9 data name token when the data
  1     7*name is described with an occurs clause or is subordinate to an item
  1     8*described with an occurs clause.
  1     9**/
  1    10 
  1    11 /*	***STRUCTURE SIZE INFORMATION***	*/
  1    12 /*     THE SIZE OF THIS STRUCTURE IN BYTES, (EXCLUDING VARIABLE
  1    13*       LENGTH ENTITIES), FOR EACH HARDWARE IMPLEMENTATION IS:
  1    14*
  1    15*	HARDWARE	|	SIZE (BYTES)
  1    16*	---------------------------------
  1    17*	6180	|	12 + 24 * dimensions
  1    18*	P7	|	6 + 14 * dimensions
  1    19*	---------------------------------
  1    20**/
  1    21 
  1    22 /*   THE OCCURS EXTENSION STRUCTURE   */
  1    23 
  1    24 dcl occurs_ptr ptr;
  1    25 
  1    26 dcl	1 occurs based (occurs_ptr),
  1    27 		2 keyed fixed bin,
  1    28 		2 key_number fixed bin,
  1    29 		2 dimensions fixed bin,
  1    30 		2 level (occurs.dimensions),
  1    31 			3 index_no fixed bin,
  1    32 			3 min fixed bin,
  1    33 			3 max fixed bin,
  1    34 			3 struc_length fixed bin,
  1    35 			3 cswd_seg fixed bin,
  1    36 			3 cswd_offset fixed bin(24);
  1    37 
  1    38 
  1    39 
  1    40 /* END INCLUDE FILE ...   cobol_occurs_ext.incl.pl1 */
  1    41 
      259 
  2     1 
  2     2 /* BEGIN INCLUDE FILE ... cobol_type9.incl.pl1 */
  2     3 /* Last modified on 11/19/76 by ORN */
  2     4 
  2     5 /*
  2     6*A type 9 data name token is entered into the name table by the data
  2     7*division syntax phase for each data name described in the data division.
  2     8*The replacement phase subsequently replaces type 8 user word references
  2     9*to data names in the procedure division minpral file with the corresponding
  2    10*type 9 tokens from the name table.
  2    11**/
  2    12 
  2    13 /* dcl dn_ptr ptr; */
  2    14 
  2    15 /* BEGIN DECLARATION OF TYPE9 (DATA NAME) TOKEN */
  2    16 dcl 1 data_name based (dn_ptr),
  3     1 
  3     2 /* begin include file ... cobol_TYPE9.incl.pl1 */
  3     3 /* Last modified on 06/19/77 by ORN */
  3     4 /* Last modified on 12/28/76 by FCH */
  3     5 
  3     6 		/* header */
  3     7 		2 size fixed bin,
  3     8 		2 line fixed bin,
  3     9 		2 column fixed bin,
  3    10 		2 type fixed bin,
  3    11 		/* body */
  3    12 		2 string_ptr ptr,
  3    13 		2 prev_rec ptr,
  3    14 		2 searched bit (1),
  3    15 		2 duplicate bit (1),
  3    16 		2 saved bit (1),
  3    17 		2 debug_ind bit (1),
  3    18 		2 filler2 bit (3),
  3    19 		2 used_as_sub bit (1),
  3    20 		2 def_line fixed bin,
  3    21 		2 level fixed bin,
  3    22 		2 linkage fixed bin,
  3    23 		2 file_num fixed bin,
  3    24 		2 size_rtn fixed bin,
  3    25 		2 item_length fixed bin(24),
  3    26 		2 places_left fixed bin,
  3    27 		2 places_right fixed bin,
  3    28 		/* description */
  3    29 		2 file_section bit (1),
  3    30 		2 working_storage bit (1),
  3    31 		2 constant_section bit (1),
  3    32 		2 linkage_section bit (1),
  3    33 		2 communication_section bit (1),
  3    34 		2 report_section bit (1),
  3    35 		2 level_77 bit (1),
  3    36 		2 level_01 bit (1),
  3    37 		2 non_elementary bit (1),
  3    38 		2 elementary bit (1),
  3    39 		2 filler_item bit (1),
  3    40 		2 s_of_rdf bit (1),
  3    41 		2 o_of_rdf bit (1),
  3    42 		2 bin_18 bit (1),
  3    43 		2 bin_36 bit (1),
  3    44 		2 pic_has_l bit (1),
  3    45 		2 pic_is_do bit (1),
  3    46 		2 numeric bit (1),
  3    47 		2 numeric_edited bit (1),
  3    48 		2 alphanum bit (1),
  3    49 		2 alphanum_edited bit (1),
  3    50 		2 alphabetic bit (1),
  3    51 		2 alphabetic_edited bit (1),
  3    52 		2 pic_has_p bit (1),
  3    53 		2 pic_has_ast bit (1),
  3    54 		2 item_signed bit(1),
  3    55 		2 sign_separate bit (1),
  3    56 		2 display bit (1),
  3    57 		2 comp bit (1),
  3    58 		2 ascii_packed_dec_h bit (1),	/* as of 8/16/76  this field used for comp8. */
  3    59 		2 ascii_packed_dec bit (1),
  3    60 		2 ebcdic_packed_dec bit (1),
  3    61 		2 bin_16 bit (1),
  3    62 		2 bin_32 bit (1),
  3    63 		2 usage_index bit (1),
  3    64 		2 just_right bit (1),
  3    65 		2 compare_argument bit (1),
  3    66 		2 sync bit (1),
  3    67 		2 temporary bit (1),
  3    68 		2 bwz bit (1),
  3    69 		2 variable_length bit (1),
  3    70 		2 subscripted bit (1),
  3    71 		2 occurs_do bit (1),
  3    72 		2 key_a bit (1),
  3    73 		2 key_d bit (1),
  3    74 		2 indexed_by bit (1),
  3    75 		2 value_numeric bit (1),
  3    76 		2 value_non_numeric bit (1),
  3    77 		2 value_signed bit (1),
  3    78 		2 sign_type bit (3),
  3    79 		2 pic_integer bit (1),
  3    80 		2 ast_when_zero bit (1),
  3    81 		2 label_record bit (1),
  3    82 		2 sign_clause_occurred bit (1),
  3    83 		2 okey_dn bit (1),
  3    84 		2 subject_of_keyis bit (1),
  3    85 		2 exp_redefining bit (1),
  3    86 		2 sync_in_rec bit (1),
  3    87 		2 rounded bit (1),
  3    88 		2 ad_bit bit (1),
  3    89 		2 debug_all bit (1),
  3    90 		2 overlap bit (1),
  3    91 		2 sum_counter bit (1),
  3    92 		2 exp_occurs bit (1),
  3    93 		2 linage_counter bit (1),
  3    94 		2 rnm_01 bit (1),
  3    95 		2 aligned bit (1),
  3    96 		2 not_user_writable bit (1),
  3    97 		2 database_key bit (1),
  3    98 		2 database_data_item bit (1),
  3    99 		2 seg_num fixed bin,
  3   100 		2 offset fixed bin(24),
  3   101 		2 initial_ptr fixed bin,
  3   102 		2 edit_ptr fixed bin,
  3   103 		2 occurs_ptr fixed bin,
  3   104 		2 do_rec char(5),
  3   105 		2 bitt bit (1),
  3   106 		2 byte bit (1),
  3   107 		2 half_word bit (1),
  3   108 		2 word bit (1),
  3   109 		2 double_word bit (1),
  3   110 		2 half_byte bit (1),
  3   111 		2 filler5 bit (1),
  3   112 		2 bit_offset bit (4),
  3   113 		2 son_cnt bit (16),
  3   114 		2 max_red_size fixed bin(24),
  3   115 		2 name_size fixed bin,
  3   116 		2 name char(0 refer(data_name.name_size));	
  3   117 
  3   118 
  3   119 
  3   120 /* end include file ... cobol_TYPE9.incl.pl1 */
  3   121 
  2    17 
  2    18 /* END DECLARATION OF TYPE9 (DATA NAME) TOKEN */
  2    19 
  2    20 /* END INCLUDE FILE ... cobol_type9.incl.pl1 */
  2    21 
      260 
  4     1 
  4     2 /* BEGIN INCLUDE FILE ... cobol_.incl.pl1 */
  4     3 /* last modified Feb 4, 1977 by ORN  */
  4     4 
  4     5 /* This file defines all external data used in the generator phase of Multics Cobol */
  4     6 
  4     7 /* POINTERS */
  4     8 dcl cobol_$text_base_ptr ptr  ext;
  4     9 dcl text_base_ptr ptr  defined (cobol_$text_base_ptr);
  4    10 dcl cobol_$con_end_ptr ptr  ext;
  4    11 dcl con_end_ptr ptr  defined (cobol_$con_end_ptr);
  4    12 dcl cobol_$def_base_ptr ptr  ext;
  4    13 dcl def_base_ptr ptr  defined (cobol_$def_base_ptr);
  4    14 dcl cobol_$link_base_ptr ptr  ext;
  4    15 dcl link_base_ptr ptr  defined (cobol_$link_base_ptr);
  4    16 dcl cobol_$sym_base_ptr ptr  ext;
  4    17 dcl sym_base_ptr ptr  defined (cobol_$sym_base_ptr);
  4    18 dcl cobol_$reloc_text_base_ptr ptr  ext;
  4    19 dcl reloc_text_base_ptr ptr  defined (cobol_$reloc_text_base_ptr);
  4    20 dcl cobol_$reloc_def_base_ptr ptr  ext;
  4    21 dcl reloc_def_base_ptr ptr  defined (cobol_$reloc_def_base_ptr);
  4    22 dcl cobol_$reloc_link_base_ptr ptr  ext;
  4    23 dcl reloc_link_base_ptr ptr  defined (cobol_$reloc_link_base_ptr);
  4    24 dcl cobol_$reloc_sym_base_ptr ptr  ext;
  4    25 dcl reloc_sym_base_ptr ptr  defined (cobol_$reloc_sym_base_ptr);
  4    26 dcl cobol_$reloc_work_base_ptr ptr  ext;
  4    27 dcl reloc_work_base_ptr ptr  defined (cobol_$reloc_work_base_ptr);
  4    28 dcl cobol_$pd_map_ptr ptr  ext;
  4    29 dcl pd_map_ptr ptr  defined (cobol_$pd_map_ptr);
  4    30 dcl cobol_$fixup_ptr ptr  ext;
  4    31 dcl fixup_ptr ptr  defined (cobol_$fixup_ptr);
  4    32 dcl cobol_$initval_base_ptr ptr  ext;
  4    33 dcl initval_base_ptr ptr  defined (cobol_$initval_base_ptr);
  4    34 dcl cobol_$initval_file_ptr ptr  ext;
  4    35 dcl initval_file_ptr ptr  defined (cobol_$initval_file_ptr);
  4    36 dcl cobol_$perform_list_ptr ptr  ext;
  4    37 dcl perform_list_ptr ptr  defined (cobol_$perform_list_ptr);
  4    38 dcl cobol_$alter_list_ptr ptr  ext;
  4    39 dcl alter_list_ptr ptr  defined (cobol_$alter_list_ptr);
  4    40 dcl cobol_$seg_init_list_ptr ptr  ext;
  4    41 dcl seg_init_list_ptr ptr  defined (cobol_$seg_init_list_ptr);
  4    42 dcl cobol_$temp_token_area_ptr ptr  ext;
  4    43 dcl temp_token_area_ptr ptr  defined (cobol_$temp_token_area_ptr);
  4    44 dcl cobol_$temp_token_ptr ptr  ext;
  4    45 dcl temp_token_ptr ptr  defined (cobol_$temp_token_ptr);
  4    46 dcl cobol_$token_block1_ptr ptr  ext;
  4    47 dcl token_block1_ptr ptr  defined (cobol_$token_block1_ptr);
  4    48 dcl cobol_$token_block2_ptr ptr  ext;
  4    49 dcl token_block2_ptr ptr  defined (cobol_$token_block2_ptr);
  4    50 dcl cobol_$minpral5_ptr ptr  ext;
  4    51 dcl minpral5_ptr ptr  defined (cobol_$minpral5_ptr);
  4    52 dcl cobol_$tag_table_ptr ptr  ext;
  4    53 dcl tag_table_ptr ptr  defined (cobol_$tag_table_ptr);
  4    54 dcl cobol_$map_data_ptr ptr  ext;
  4    55 dcl map_data_ptr ptr  defined (cobol_$map_data_ptr);
  4    56 dcl cobol_$ptr_status_ptr ptr  ext;
  4    57 dcl ptr_status_ptr ptr  defined (cobol_$ptr_status_ptr);
  4    58 dcl cobol_$reg_status_ptr ptr  ext;
  4    59 dcl reg_status_ptr ptr  defined (cobol_$reg_status_ptr);
  4    60 dcl cobol_$misc_base_ptr ptr ext;
  4    61 dcl misc_base_ptr ptr defined (cobol_$misc_base_ptr);
  4    62 dcl cobol_$misc_end_ptr ptr ext;
  4    63 dcl misc_end_ptr ptr defined (cobol_$misc_end_ptr);
  4    64 dcl cobol_$list_ptr ptr ext;
  4    65 dcl list_ptr ptr defined (cobol_$list_ptr);
  4    66 dcl cobol_$allo1_ptr ptr ext;
  4    67 dcl allo1_ptr ptr defined (cobol_$allo1_ptr);
  4    68 dcl cobol_$eln_ptr ptr ext;
  4    69 dcl eln_ptr ptr defined (cobol_$eln_ptr);
  4    70 dcl cobol_$diag_ptr ptr ext;
  4    71 dcl diag_ptr ptr defined (cobol_$diag_ptr);
  4    72 dcl cobol_$xref_token_ptr ptr ext;
  4    73 dcl xref_token_ptr ptr defined (cobol_$xref_token_ptr);
  4    74 dcl cobol_$xref_chain_ptr ptr ext;
  4    75 dcl xref_chain_ptr ptr defined (cobol_$xref_chain_ptr);
  4    76 dcl cobol_$statement_info_ptr ptr ext;
  4    77 dcl statement_info_ptr ptr defined (cobol_$statement_info_ptr);
  4    78 dcl cobol_$reswd_ptr ptr ext;
  4    79 dcl reswd_ptr ptr defined (cobol_$reswd_ptr);
  4    80 dcl cobol_$op_con_ptr ptr ext;
  4    81 dcl op_con_ptr ptr defined (cobol_$op_con_ptr);
  4    82 dcl cobol_$ntbuf_ptr ptr ext;
  4    83 dcl ntbuf_ptr ptr defined (cobol_$ntbuf_ptr);
  4    84 dcl cobol_$main_pcs_ptr ptr ext;
  4    85 dcl main_pcs_ptr ptr defined (cobol_$main_pcs_ptr);
  4    86 dcl cobol_$include_info_ptr ptr ext;
  4    87 dcl include_info_ptr ptr defined (cobol_$include_info_ptr);
  4    88 
  4    89 /* FIXED BIN */
  4    90 dcl cobol_$text_wd_off fixed bin  ext;
  4    91 dcl text_wd_off fixed bin  defined (cobol_$text_wd_off);
  4    92 dcl cobol_$con_wd_off fixed bin  ext;
  4    93 dcl con_wd_off fixed bin  defined (cobol_$con_wd_off);
  4    94 dcl cobol_$def_wd_off fixed bin  ext;
  4    95 dcl def_wd_off fixed bin  defined (cobol_$def_wd_off);
  4    96 dcl cobol_$def_max fixed bin  ext;
  4    97 dcl def_max fixed bin  defined (cobol_$def_max);
  4    98 dcl cobol_$link_wd_off fixed bin  ext;
  4    99 dcl link_wd_off fixed bin  defined (cobol_$link_wd_off);
  4   100 dcl cobol_$link_max fixed bin  ext;
  4   101 dcl link_max fixed bin  defined (cobol_$link_max);
  4   102 dcl cobol_$sym_wd_off fixed bin  ext;
  4   103 dcl sym_wd_off fixed bin  defined (cobol_$sym_wd_off);
  4   104 dcl cobol_$sym_max fixed bin  ext;
  4   105 dcl sym_max fixed bin  defined (cobol_$sym_max);
  4   106 dcl cobol_$reloc_text_max fixed bin(24)  ext;
  4   107 dcl reloc_text_max fixed bin(24)  defined (cobol_$reloc_text_max);
  4   108 dcl cobol_$reloc_def_max fixed bin(24)  ext;
  4   109 dcl reloc_def_max fixed bin(24)  defined (cobol_$reloc_def_max);
  4   110 dcl cobol_$reloc_link_max fixed bin(24)  ext;
  4   111 dcl reloc_link_max fixed bin(24)  defined (cobol_$reloc_link_max);
  4   112 dcl cobol_$reloc_sym_max fixed bin(24)  ext;
  4   113 dcl reloc_sym_max fixed bin(24)  defined (cobol_$reloc_sym_max);
  4   114 dcl cobol_$reloc_work_max fixed bin(24)  ext;
  4   115 dcl reloc_work_max fixed bin(24)  defined (cobol_$reloc_work_max);
  4   116 dcl cobol_$pd_map_index fixed bin  ext;
  4   117 dcl pd_map_index fixed bin  defined (cobol_$pd_map_index);
  4   118 dcl cobol_$cobol_data_wd_off fixed bin  ext;
  4   119 dcl cobol_data_wd_off fixed bin  defined (cobol_$cobol_data_wd_off);
  4   120 dcl cobol_$stack_off fixed bin  ext;
  4   121 dcl stack_off fixed bin  defined (cobol_$stack_off);
  4   122 dcl cobol_$max_stack_off fixed bin  ext;
  4   123 dcl max_stack_off fixed bin  defined (cobol_$max_stack_off);
  4   124 dcl cobol_$init_stack_off fixed bin  ext;
  4   125 dcl init_stack_off fixed bin  defined (cobol_$init_stack_off);
  4   126 dcl cobol_$pd_map_sw fixed bin  ext;
  4   127 dcl pd_map_sw fixed bin  defined (cobol_$pd_map_sw);
  4   128 dcl cobol_$next_tag fixed bin  ext;
  4   129 dcl next_tag fixed bin  defined (cobol_$next_tag);
  4   130 dcl cobol_$data_init_flag fixed bin  ext;
  4   131 dcl data_init_flag fixed bin  defined (cobol_$data_init_flag);
  4   132 dcl cobol_$seg_init_flag fixed bin  ext;
  4   133 dcl seg_init_flag fixed bin  defined (cobol_$seg_init_flag);
  4   134 dcl cobol_$alter_flag fixed bin  ext;
  4   135 dcl alter_flag fixed bin  defined (cobol_$alter_flag);
  4   136 dcl cobol_$sect_eop_flag fixed bin  ext;
  4   137 dcl sect_eop_flag fixed bin  defined (cobol_$sect_eop_flag);
  4   138 dcl cobol_$para_eop_flag fixed bin  ext;
  4   139 dcl para_eop_flag fixed bin  defined (cobol_$para_eop_flag);
  4   140 dcl cobol_$priority_no fixed bin  ext;
  4   141 dcl priority_no fixed bin  defined (cobol_$priority_no);
  4   142 dcl cobol_$compile_count fixed bin ext;
  4   143 dcl compile_count fixed bin defined (cobol_$compile_count);
  4   144 dcl cobol_$ptr_assumption_ind fixed bin ext;
  4   145 dcl ptr_assumption_ind fixed bin defined (cobol_$ptr_assumption_ind);
  4   146 dcl cobol_$reg_assumption_ind fixed bin ext;
  4   147 dcl reg_assumption_ind fixed bin defined (cobol_$reg_assumption_ind);
  4   148 dcl cobol_$perform_para_index fixed bin ext;
  4   149 dcl perform_para_index fixed bin defined (cobol_$perform_para_index);
  4   150 dcl cobol_$perform_sect_index fixed bin ext;
  4   151 dcl perform_sect_index fixed bin defined (cobol_$perform_sect_index);
  4   152 dcl cobol_$alter_index fixed bin ext;
  4   153 dcl alter_index fixed bin defined (cobol_$alter_index);
  4   154 dcl cobol_$list_off fixed bin ext;
  4   155 dcl list_off fixed bin defined (cobol_$list_off);
  4   156 dcl cobol_$constant_offset fixed bin ext;
  4   157 dcl constant_offset fixed bin defined (cobol_$constant_offset);
  4   158 dcl cobol_$misc_max fixed bin ext;
  4   159 dcl misc_max fixed bin defined (cobol_$misc_max);
  4   160 dcl cobol_$pd_map_max fixed bin ext;
  4   161 dcl pd_map_max fixed bin defined (cobol_$pd_map_max);
  4   162 dcl cobol_$map_data_max fixed bin ext;
  4   163 dcl map_data_max fixed bin defined (cobol_$map_data_max);
  4   164 dcl cobol_$fixup_max fixed bin ext;
  4   165 dcl fixup_max fixed bin defined (cobol_$fixup_max);
  4   166 dcl cobol_$tag_table_max fixed bin ext;
  4   167 dcl tag_table_max fixed bin defined (cobol_$tag_table_max);
  4   168 dcl cobol_$temp_token_max fixed bin ext;
  4   169 dcl temp_token_max fixed bin defined (cobol_$temp_token_max);
  4   170 dcl cobol_$allo1_max fixed bin ext;
  4   171 dcl allo1_max fixed bin defined (cobol_$allo1_max);
  4   172 dcl cobol_$eln_max fixed bin ext;
  4   173 dcl eln_max fixed bin defined (cobol_$eln_max);
  4   174 dcl cobol_$debug_enable fixed bin ext;
  4   175 dcl debug_enable fixed bin defined (cobol_$debug_enable);
  4   176 dcl cobol_$non_source_offset fixed bin ext;
  4   177 dcl non_source_offset fixed bin defined (cobol_$non_source_offset);
  4   178 dcl cobol_$initval_flag fixed bin ext;
  4   179 dcl initval_flag fixed bin defined (cobol_$initval_flag);
  4   180 dcl cobol_$date_compiled_sw fixed bin ext;
  4   181 dcl date_compiled_sw fixed bin defined (cobol_$date_compiled_sw);
  4   182 dcl cobol_$include_cnt fixed bin ext;
  4   183 dcl include_cnt fixed bin defined (cobol_$include_cnt);
  4   184 dcl cobol_$fs_charcnt fixed bin ext;
  4   185 dcl fs_charcnt fixed bin defined (cobol_$fs_charcnt);
  4   186 dcl cobol_$ws_charcnt fixed bin ext;
  4   187 dcl ws_charcnt fixed bin defined (cobol_$ws_charcnt);
  4   188 dcl cobol_$coms_charcnt fixed bin ext;
  4   189 dcl coms_charcnt fixed bin defined (cobol_$coms_charcnt);
  4   190 dcl cobol_$ls_charcnt fixed bin ext;
  4   191 dcl ls_charcnt fixed bin defined (cobol_$ls_charcnt);
  4   192 dcl cobol_$cons_charcnt fixed bin ext;
  4   193 dcl cons_charcnt fixed bin defined (cobol_$cons_charcnt);
  4   194 dcl cobol_$value_cnt fixed bin ext;
  4   195 dcl value_cnt fixed bin defined (cobol_$value_cnt);
  4   196 dcl cobol_$cd_cnt fixed bin ext;
  4   197 dcl cd_cnt fixed bin defined (cobol_$cd_cnt);
  4   198 dcl cobol_$fs_wdoff fixed bin ext;
  4   199 dcl fs_wdoff fixed bin defined (cobol_$fs_wdoff);
  4   200 dcl cobol_$ws_wdoff fixed bin ext;
  4   201 dcl ws_wdoff fixed bin defined (cobol_$ws_wdoff);
  4   202 dcl cobol_$coms_wdoff fixed bin ext;
  4   203 dcl coms_wdoff fixed bin defined (cobol_$coms_wdoff);
  4   204 
  4   205 /* CHARACTER */
  4   206 dcl cobol_$scratch_dir char (168)   aligned ext;
  4   207 dcl scratch_dir char (168)   aligned defined (cobol_$scratch_dir);			/* -42- */
  4   208 dcl cobol_$obj_seg_name char (32)   aligned ext;
  4   209 dcl obj_seg_name char (32)   aligned defined (cobol_$obj_seg_name);		/* -8- */
  4   210 
  4   211 /* BIT */
  4   212 dcl cobol_$xref_bypass bit(1) aligned ext;
  4   213 dcl xref_bypass bit(1) aligned defined (cobol_$xref_bypass);			/* -1- */
  4   214 dcl cobol_$same_sort_merge_proc bit(1) aligned ext;
  4   215 dcl same_sort_merge_proc bit(1) aligned defined (cobol_$same_sort_merge_proc);		/* -1- */
  4   216 
  4   217 
  4   218 /* END INCLUDE FILE ... cobol_incl.pl1*/
  4   219 
  4   220 
      261 
      262      end cobol_set_pr;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/24/89  0832.5  cobol_set_pr.pl1                  >spec>install>MR12.3-1048>cobol_set_pr.pl1
259          1    11/11/82  1712.7  cobol_occurs_ext.incl.pl1         >ldd>include>cobol_occurs_ext.incl.pl1
260          2    03/27/82  0439.9  cobol_type9.incl.pl1              >ldd>include>cobol_type9.incl.pl1
2-17         3    11/11/82  1712.7  cobol_TYPE9.incl.pl1              >ldd>include>cobol_TYPE9.incl.pl1
261          4    11/11/82  1712.7  cobol_.incl.pl1                   >ldd>include>cobol_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
a9bd_instr                      000101 automatic       bit(36)                  packed unaligned dcl 119 set ref 211* 218* 220 232*
                                                                                  234
addr                                                   builtin function         dcl 254 ref 200 203 206 220 234 241 241
addr_struc                      000010 internal static structure                level 1 unaligned dcl 100 set ref 200
addr_struc_ptr                  000110 automatic       pointer                  dcl 127 set ref 200* 208* 222* 236*
addrel                                                 builtin function         dcl 254 ref 181
backup                          000113 automatic       fixed bin(17,0)          dcl 129 set ref 182* 185* 185 189 225
cobol_addr                      000024 constant        entry                    external dcl 134 ref 208 222 236
cobol_emit                      000022 constant        entry                    external dcl 133 ref 209 223 237 241
cobol_pointer_register$get      000026 constant        entry                    external dcl 135 ref 169 196
data_name                              based           structure                level 1 unaligned dcl 2-16
dimensions                2            based           fixed bin(17,0)          level 2 dcl 1-26 ref 184
dn_ptr                                 parameter       pointer                  dcl 32 ref 28 157 165 176 180 181 181 189 189 199
                                                                                  217 225 225 229 241
epp_instr                       000002 constant        bit(36)                  initial array packed unaligned dcl 113 ref 204
fixed                                                  builtin function         dcl 254 ref 204
i                               000112 automatic       fixed bin(17,0)          dcl 128 set ref 184* 185*
instr                           000100 automatic       bit(36)                  packed unaligned dcl 111 set ref 203 204*
instr_ptr                       000106 automatic       pointer                  dcl 126 set ref 203* 208* 209* 220* 222* 223* 234*
                                                                                  236* 237*
level                     3            based           structure                array level 2 unaligned dcl 1-26
mod                                                    builtin function         dcl 254 ref 229
null                                                   builtin function         dcl 254 ref 165 241 241
occurs                                 based           structure                level 1 unaligned dcl 1-26
occurs_ptr                      000116 automatic       pointer                  dcl 1-24 in procedure "cobol_set_pr" set ref 181*
                                                                                  184 185
occurs_ptr               27            based           fixed bin(17,0)          level 2 in structure "data_name" dcl 2-16
                                                                                  in procedure "cobol_set_pr" ref 181
offset                   24            based           fixed bin(24,0)          level 2 dcl 2-16 set ref 189* 189 225* 225 229
omit_sign_instr                 000000 constant        bit(36)                  initial array packed unaligned dcl 120 set ref 241
                                                                                  241
omitsw                          000115 automatic       bit(1)                   packed unaligned dcl 131 set ref 154* 163* 241
operand                   4     000010 internal static structure                level 2 unaligned dcl 100
pointer_no                1            based           bit(3)                   level 2 packed packed unaligned dcl 44 ref 204 218
                                                                                  232
reloc                           000102 automatic       bit(5)                   array dcl 124 set ref 206
reloc_ptr                       000104 automatic       pointer                  dcl 125 set ref 206* 208* 209* 222* 223* 236* 237*
sign_separate            21(26)        based           bit(1)                   level 2 packed packed unaligned dcl 2-16 ref 241
struc_length              6            based           fixed bin(17,0)          array level 3 dcl 1-26 ref 185
struc_ptr                              parameter       pointer                  dcl 31 set ref 28 157 165 169* 196* 204 218 232
structure                              based           structure                level 1 unaligned dcl 44
subscripted              22(05)        based           bit(1)                   level 2 packed packed unaligned dcl 2-16 set ref 176
                                                                                  180* 217*
substr                                                 builtin function         dcl 254 set ref 181 218* 232*
subsw                           000114 automatic       bit(1)                   packed unaligned dcl 130 set ref 179* 194* 214
switch                    3            based           fixed bin(17,0)          level 2 dcl 44 ref 165
token_ptr                 4     000010 internal static pointer                  level 3 dcl 100 set ref 199*
type                            000010 internal static fixed bin(17,0)          level 2 dcl 100 set ref 198* 219* 233*
unspec                                                 builtin function         dcl 254 ref 181

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
allo1_max                              defined         fixed bin(17,0)          dcl 4-171
allo1_ptr                              defined         pointer                  dcl 4-67
alter_flag                             defined         fixed bin(17,0)          dcl 4-135
alter_index                            defined         fixed bin(17,0)          dcl 4-153
alter_list_ptr                         defined         pointer                  dcl 4-39
binary                                                 builtin function         dcl 254
cd_cnt                                 defined         fixed bin(17,0)          dcl 4-197
cobol_$allo1_max                       external static fixed bin(17,0)          dcl 4-170
cobol_$allo1_ptr                       external static pointer                  dcl 4-66
cobol_$alter_flag                      external static fixed bin(17,0)          dcl 4-134
cobol_$alter_index                     external static fixed bin(17,0)          dcl 4-152
cobol_$alter_list_ptr                  external static pointer                  dcl 4-38
cobol_$cd_cnt                          external static fixed bin(17,0)          dcl 4-196
cobol_$cobol_data_wd_off               external static fixed bin(17,0)          dcl 4-118
cobol_$compile_count                   external static fixed bin(17,0)          dcl 4-142
cobol_$coms_charcnt                    external static fixed bin(17,0)          dcl 4-188
cobol_$coms_wdoff                      external static fixed bin(17,0)          dcl 4-202
cobol_$con_end_ptr                     external static pointer                  dcl 4-10
cobol_$con_wd_off                      external static fixed bin(17,0)          dcl 4-92
cobol_$cons_charcnt                    external static fixed bin(17,0)          dcl 4-192
cobol_$constant_offset                 external static fixed bin(17,0)          dcl 4-156
cobol_$data_init_flag                  external static fixed bin(17,0)          dcl 4-130
cobol_$date_compiled_sw                external static fixed bin(17,0)          dcl 4-180
cobol_$debug_enable                    external static fixed bin(17,0)          dcl 4-174
cobol_$def_base_ptr                    external static pointer                  dcl 4-12
cobol_$def_max                         external static fixed bin(17,0)          dcl 4-96
cobol_$def_wd_off                      external static fixed bin(17,0)          dcl 4-94
cobol_$diag_ptr                        external static pointer                  dcl 4-70
cobol_$eln_max                         external static fixed bin(17,0)          dcl 4-172
cobol_$eln_ptr                         external static pointer                  dcl 4-68
cobol_$fixup_max                       external static fixed bin(17,0)          dcl 4-164
cobol_$fixup_ptr                       external static pointer                  dcl 4-30
cobol_$fs_charcnt                      external static fixed bin(17,0)          dcl 4-184
cobol_$fs_wdoff                        external static fixed bin(17,0)          dcl 4-198
cobol_$include_cnt                     external static fixed bin(17,0)          dcl 4-182
cobol_$include_info_ptr                external static pointer                  dcl 4-86
cobol_$init_stack_off                  external static fixed bin(17,0)          dcl 4-124
cobol_$initval_base_ptr                external static pointer                  dcl 4-32
cobol_$initval_file_ptr                external static pointer                  dcl 4-34
cobol_$initval_flag                    external static fixed bin(17,0)          dcl 4-178
cobol_$link_base_ptr                   external static pointer                  dcl 4-14
cobol_$link_max                        external static fixed bin(17,0)          dcl 4-100
cobol_$link_wd_off                     external static fixed bin(17,0)          dcl 4-98
cobol_$list_off                        external static fixed bin(17,0)          dcl 4-154
cobol_$list_ptr                        external static pointer                  dcl 4-64
cobol_$ls_charcnt                      external static fixed bin(17,0)          dcl 4-190
cobol_$main_pcs_ptr                    external static pointer                  dcl 4-84
cobol_$map_data_max                    external static fixed bin(17,0)          dcl 4-162
cobol_$map_data_ptr                    external static pointer                  dcl 4-54
cobol_$max_stack_off                   external static fixed bin(17,0)          dcl 4-122
cobol_$minpral5_ptr                    external static pointer                  dcl 4-50
cobol_$misc_base_ptr                   external static pointer                  dcl 4-60
cobol_$misc_end_ptr                    external static pointer                  dcl 4-62
cobol_$misc_max                        external static fixed bin(17,0)          dcl 4-158
cobol_$next_tag                        external static fixed bin(17,0)          dcl 4-128
cobol_$non_source_offset               external static fixed bin(17,0)          dcl 4-176
cobol_$ntbuf_ptr                       external static pointer                  dcl 4-82
cobol_$obj_seg_name                    external static char(32)                 dcl 4-208
cobol_$op_con_ptr                      external static pointer                  dcl 4-80
cobol_$para_eop_flag                   external static fixed bin(17,0)          dcl 4-138
cobol_$pd_map_index                    external static fixed bin(17,0)          dcl 4-116
cobol_$pd_map_max                      external static fixed bin(17,0)          dcl 4-160
cobol_$pd_map_ptr                      external static pointer                  dcl 4-28
cobol_$pd_map_sw                       external static fixed bin(17,0)          dcl 4-126
cobol_$perform_list_ptr                external static pointer                  dcl 4-36
cobol_$perform_para_index              external static fixed bin(17,0)          dcl 4-148
cobol_$perform_sect_index              external static fixed bin(17,0)          dcl 4-150
cobol_$priority_no                     external static fixed bin(17,0)          dcl 4-140
cobol_$ptr_assumption_ind              external static fixed bin(17,0)          dcl 4-144
cobol_$ptr_status_ptr                  external static pointer                  dcl 4-56
cobol_$reg_assumption_ind              external static fixed bin(17,0)          dcl 4-146
cobol_$reg_status_ptr                  external static pointer                  dcl 4-58
cobol_$reloc_def_base_ptr              external static pointer                  dcl 4-20
cobol_$reloc_def_max                   external static fixed bin(24,0)          dcl 4-108
cobol_$reloc_link_base_ptr             external static pointer                  dcl 4-22
cobol_$reloc_link_max                  external static fixed bin(24,0)          dcl 4-110
cobol_$reloc_sym_base_ptr              external static pointer                  dcl 4-24
cobol_$reloc_sym_max                   external static fixed bin(24,0)          dcl 4-112
cobol_$reloc_text_base_ptr             external static pointer                  dcl 4-18
cobol_$reloc_text_max                  external static fixed bin(24,0)          dcl 4-106
cobol_$reloc_work_base_ptr             external static pointer                  dcl 4-26
cobol_$reloc_work_max                  external static fixed bin(24,0)          dcl 4-114
cobol_$reswd_ptr                       external static pointer                  dcl 4-78
cobol_$same_sort_merge_proc            external static bit(1)                   dcl 4-214
cobol_$scratch_dir                     external static char(168)                dcl 4-206
cobol_$sect_eop_flag                   external static fixed bin(17,0)          dcl 4-136
cobol_$seg_init_flag                   external static fixed bin(17,0)          dcl 4-132
cobol_$seg_init_list_ptr               external static pointer                  dcl 4-40
cobol_$stack_off                       external static fixed bin(17,0)          dcl 4-120
cobol_$statement_info_ptr              external static pointer                  dcl 4-76
cobol_$sym_base_ptr                    external static pointer                  dcl 4-16
cobol_$sym_max                         external static fixed bin(17,0)          dcl 4-104
cobol_$sym_wd_off                      external static fixed bin(17,0)          dcl 4-102
cobol_$tag_table_max                   external static fixed bin(17,0)          dcl 4-166
cobol_$tag_table_ptr                   external static pointer                  dcl 4-52
cobol_$temp_token_area_ptr             external static pointer                  dcl 4-42
cobol_$temp_token_max                  external static fixed bin(17,0)          dcl 4-168
cobol_$temp_token_ptr                  external static pointer                  dcl 4-44
cobol_$text_base_ptr                   external static pointer                  dcl 4-8
cobol_$text_wd_off                     external static fixed bin(17,0)          dcl 4-90
cobol_$token_block1_ptr                external static pointer                  dcl 4-46
cobol_$token_block2_ptr                external static pointer                  dcl 4-48
cobol_$value_cnt                       external static fixed bin(17,0)          dcl 4-194
cobol_$ws_charcnt                      external static fixed bin(17,0)          dcl 4-186
cobol_$ws_wdoff                        external static fixed bin(17,0)          dcl 4-200
cobol_$xref_bypass                     external static bit(1)                   dcl 4-212
cobol_$xref_chain_ptr                  external static pointer                  dcl 4-74
cobol_$xref_token_ptr                  external static pointer                  dcl 4-72
cobol_data_wd_off                      defined         fixed bin(17,0)          dcl 4-119
compile_count                          defined         fixed bin(17,0)          dcl 4-143
coms_charcnt                           defined         fixed bin(17,0)          dcl 4-189
coms_wdoff                             defined         fixed bin(17,0)          dcl 4-203
con_end_ptr                            defined         pointer                  dcl 4-11
con_wd_off                             defined         fixed bin(17,0)          dcl 4-93
cons_charcnt                           defined         fixed bin(17,0)          dcl 4-193
constant_offset                        defined         fixed bin(17,0)          dcl 4-157
data_init_flag                         defined         fixed bin(17,0)          dcl 4-131
date_compiled_sw                       defined         fixed bin(17,0)          dcl 4-181
debug_enable                           defined         fixed bin(17,0)          dcl 4-175
def_base_ptr                           defined         pointer                  dcl 4-13
def_max                                defined         fixed bin(17,0)          dcl 4-97
def_wd_off                             defined         fixed bin(17,0)          dcl 4-95
diag_ptr                               defined         pointer                  dcl 4-71
eln_max                                defined         fixed bin(17,0)          dcl 4-173
eln_ptr                                defined         pointer                  dcl 4-69
fixup_max                              defined         fixed bin(17,0)          dcl 4-165
fixup_ptr                              defined         pointer                  dcl 4-31
fs_charcnt                             defined         fixed bin(17,0)          dcl 4-185
fs_wdoff                               defined         fixed bin(17,0)          dcl 4-199
include_cnt                            defined         fixed bin(17,0)          dcl 4-183
include_info_ptr                       defined         pointer                  dcl 4-87
index                                                  builtin function         dcl 254
init_stack_off                         defined         fixed bin(17,0)          dcl 4-125
initval_base_ptr                       defined         pointer                  dcl 4-33
initval_file_ptr                       defined         pointer                  dcl 4-35
initval_flag                           defined         fixed bin(17,0)          dcl 4-179
length                                                 builtin function         dcl 254
link_base_ptr                          defined         pointer                  dcl 4-15
link_max                               defined         fixed bin(17,0)          dcl 4-101
link_wd_off                            defined         fixed bin(17,0)          dcl 4-99
list_off                               defined         fixed bin(17,0)          dcl 4-155
list_ptr                               defined         pointer                  dcl 4-65
ls_charcnt                             defined         fixed bin(17,0)          dcl 4-191
main_pcs_ptr                           defined         pointer                  dcl 4-85
map_data_max                           defined         fixed bin(17,0)          dcl 4-163
map_data_ptr                           defined         pointer                  dcl 4-55
max_stack_off                          defined         fixed bin(17,0)          dcl 4-123
minpral5_ptr                           defined         pointer                  dcl 4-51
misc_base_ptr                          defined         pointer                  dcl 4-61
misc_end_ptr                           defined         pointer                  dcl 4-63
misc_max                               defined         fixed bin(17,0)          dcl 4-159
next_tag                               defined         fixed bin(17,0)          dcl 4-129
non_source_offset                      defined         fixed bin(17,0)          dcl 4-177
ntbuf_ptr                              defined         pointer                  dcl 4-83
obj_seg_name                           defined         char(32)                 dcl 4-209
op_con_ptr                             defined         pointer                  dcl 4-81
para_eop_flag                          defined         fixed bin(17,0)          dcl 4-139
pd_map_index                           defined         fixed bin(17,0)          dcl 4-117
pd_map_max                             defined         fixed bin(17,0)          dcl 4-161
pd_map_ptr                             defined         pointer                  dcl 4-29
pd_map_sw                              defined         fixed bin(17,0)          dcl 4-127
perform_list_ptr                       defined         pointer                  dcl 4-37
perform_para_index                     defined         fixed bin(17,0)          dcl 4-149
perform_sect_index                     defined         fixed bin(17,0)          dcl 4-151
priority_no                            defined         fixed bin(17,0)          dcl 4-141
ptr_assumption_ind                     defined         fixed bin(17,0)          dcl 4-145
ptr_status_ptr                         defined         pointer                  dcl 4-57
reg_assumption_ind                     defined         fixed bin(17,0)          dcl 4-147
reg_status_ptr                         defined         pointer                  dcl 4-59
rel                                                    builtin function         dcl 254
reloc_def_base_ptr                     defined         pointer                  dcl 4-21
reloc_def_max                          defined         fixed bin(24,0)          dcl 4-109
reloc_link_base_ptr                    defined         pointer                  dcl 4-23
reloc_link_max                         defined         fixed bin(24,0)          dcl 4-111
reloc_sym_base_ptr                     defined         pointer                  dcl 4-25
reloc_sym_max                          defined         fixed bin(24,0)          dcl 4-113
reloc_text_base_ptr                    defined         pointer                  dcl 4-19
reloc_text_max                         defined         fixed bin(24,0)          dcl 4-107
reloc_work_base_ptr                    defined         pointer                  dcl 4-27
reloc_work_max                         defined         fixed bin(24,0)          dcl 4-115
reswd_ptr                              defined         pointer                  dcl 4-79
same_sort_merge_proc                   defined         bit(1)                   dcl 4-215
scratch_dir                            defined         char(168)                dcl 4-207
sect_eop_flag                          defined         fixed bin(17,0)          dcl 4-137
seg_init_flag                          defined         fixed bin(17,0)          dcl 4-133
seg_init_list_ptr                      defined         pointer                  dcl 4-41
stack_off                              defined         fixed bin(17,0)          dcl 4-121
statement_info_ptr                     defined         pointer                  dcl 4-77
string                                                 builtin function         dcl 254
sym_base_ptr                           defined         pointer                  dcl 4-17
sym_max                                defined         fixed bin(17,0)          dcl 4-105
sym_wd_off                             defined         fixed bin(17,0)          dcl 4-103
tag_table_max                          defined         fixed bin(17,0)          dcl 4-167
tag_table_ptr                          defined         pointer                  dcl 4-53
temp_token_area_ptr                    defined         pointer                  dcl 4-43
temp_token_max                         defined         fixed bin(17,0)          dcl 4-169
temp_token_ptr                         defined         pointer                  dcl 4-45
text_base_ptr                          defined         pointer                  dcl 4-9
text_wd_off                            defined         fixed bin(17,0)          dcl 4-91
token_block1_ptr                       defined         pointer                  dcl 4-47
token_block2_ptr                       defined         pointer                  dcl 4-49
value_cnt                              defined         fixed bin(17,0)          dcl 4-195
ws_charcnt                             defined         fixed bin(17,0)          dcl 4-187
ws_wdoff                               defined         fixed bin(17,0)          dcl 4-201
xref_bypass                            defined         bit(1)                   dcl 4-213
xref_chain_ptr                         defined         pointer                  dcl 4-75
xref_token_ptr                         defined         pointer                  dcl 4-73

NAMES DECLARED BY EXPLICIT CONTEXT.
cobol_set_pr                    000022 constant        entry                    external dcl 28
omit_sign                       000033 constant        entry                    external dcl 157
pr_done                         000375 constant        label                    dcl 246 set ref 170
start                           000042 constant        label                    dcl 165 ref 155

NAME DECLARED BY CONTEXT OR IMPLICATION.
divide                                                 builtin function         ref 185

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       462         512     400         472
Length       752     400        30         224      61          12

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cobol_set_pr                         98 external procedure  is an external procedure.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 addr_struc                  cobol_set_pr

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cobol_set_pr             000100 instr                       cobol_set_pr
                         000101 a9bd_instr                  cobol_set_pr
                         000102 reloc                       cobol_set_pr
                         000104 reloc_ptr                   cobol_set_pr
                         000106 instr_ptr                   cobol_set_pr
                         000110 addr_struc_ptr              cobol_set_pr
                         000112 i                           cobol_set_pr
                         000113 backup                      cobol_set_pr
                         000114 subsw                       cobol_set_pr
                         000115 omitsw                      cobol_set_pr
                         000116 occurs_ptr                  cobol_set_pr

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return_mac          mdfx1               ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cobol_addr                    cobol_emit                    cobol_pointer_register$get

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     28 000016       154 000027       155 000030       157 000031       163 000040       165 000042       169 000053
    170 000062       176 000063       179 000070       180 000072       181 000074       182 000101       184 000102
    185 000111       187 000120       189 000122       193 000127       194 000130       196 000131       198 000140
    199 000143       200 000147       203 000151       204 000153       206 000161       208 000163       209 000175
    211 000212       214 000214       217 000216       218 000223       219 000231       220 000234       222 000236
    223 000250       225 000265       228 000272       229 000273       232 000302       233 000310       234 000313
    236 000315       237 000327       241 000344       246 000375


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
