	COMPILATION LISTING OF SEGMENT cobol_patch
	Compiled by: Multics PL/I Compiler, Release 31b, of April 24, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 05/24/89  0959.9 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
       17*     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
       18*     MCR8060 cobol_patch.pl1 Reformatted code to new Cobol standard.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 /* Modified on 07/18/78 by RAL, [3.0-1], changed cobol_linkage_header.incl.pl1 */
       23 /* Modified since 3.0 */
       24 /*{*/
       25 /* format: style3 */
       26 cobol_patch:
       27      proc (value_ptr);
       28 
       29 /* This procedure is called by cobol_fixup_driver_
       30*to perform all fixed patches to the object segment.
       31*These are as follows:
       32*
       33*  In the text section:
       34*
       35*     1) set instruction address field (offset 1, lower half)
       36*        to maximum stack size used modulo 16.
       37*
       38*
       39*     In the definition section:
       40*
       41*     1) add to the value field in the Type 0 definition the
       42*        word length of the constants.
       43*
       44*     2) if flags.descr_sw = "1"b in the Type 0 definition,
       45*        add to each descriptor relp the word length of the
       46*        constants.
       47*
       48*
       49*  In the linkage section:
       50*
       51*     1) In the header, set def_section_relp to the word length
       52*        of the constants plus the word length of the text section.
       53*
       54*     2) In the header, set linkage_section_length to the word
       55*        length of then linkage section.
       56*
       57*     3) In the static data area, set stat.data_len to the word
       58*        length of the cobol data used modulo 4.
       59*/*}*/
       60 dcl	utemp		fixed bin;
       61 dcl	(i, temp)		fixed bin;
       62 
       63 
       64 /*************************************/
       65 start:
       66 	utemp = cobol_$max_stack_off + 15;		/*6/14/76*/
       67 	text_ptr = cobol_$text_base_ptr;
       68 	substr (entry_seq.eax7, 1, 18) = substr (unspec (utemp), 19, 14) || "0000"b;
       69 						/* modulo 16 */
       70 
       71 	def_ptr = addrel (cobol_$def_base_ptr, fixed (def_header.def_list_relp, 18));
       72 	do while (definition.class ^= "000"b);
       73 	     def_ptr = addrel (cobol_$def_base_ptr, fixed (definition.forward_thread, 18));
       74 	end;
       75 	do while (definition.class = "000"b);
       76 	     text_ptr = addrel (cobol_$text_base_ptr, fixed (definition.value, 28) - 2);
       77 	     value.exec_off = fixed (definition.value, 28) - 2;
       78 	     utemp = fixed (definition.value, 18) + value.con_len;
       79 	     definition.value = substr (unspec (utemp), 19, 18);
       80 	     if entry_seq.flags.has_descriptors
       81 	     then do;
       82 		     utemp = fixed (entry_seq.descr_relp_offset, 18) + 1;
       83 		     parm_desc_ptr = addrel (cobol_$con_end_ptr, utemp);
       84 		     do i = 1 to parm_desc.n_args;
       85 			utemp = fixed (parm_desc.descriptor_relp (i), 18) + value.con_len;
       86 			parm_desc.descriptor_relp (i) = substr (unspec (utemp), 19, 18);
       87 		     end;
       88 		     utemp = fixed (entry_seq.descr_relp_offset, 18) + value.con_len;
       89 		     entry_seq.descr_relp_offset = substr (unspec (utemp), 19, 18);
       90 		end;
       91 	     def_ptr = addrel (cobol_$def_base_ptr, fixed (definition.forward_thread, 18));
       92 	end;
       93 
       94 	linkage_header.def_section_relp = substr (unspec (value.text_len), 19, 18);
       95 	linkage_header.linkage_section_length = substr (unspec (value.link_len), 19, 18);
       96 	stat_ptr = addrel (cobol_$link_base_ptr, 8);
       97 	utemp = cobol_$cobol_data_wd_off + 3;		/*08-26-77*/
       98 	stat.data_len = fixed (substr (unspec (utemp), 17, 18), 18) * 4;
       99 						/* modulo 4 */
      100 
      101 	return;
      102 
      103 /*************************************/
      104 
      105 /*****	Declaration for builtin function	*****/
      106 
      107 dcl	(substr, mod, binary, fixed, addr, addrel, rel, length, string, unspec, null, index)
      108 			builtin;
      109 
      110 /*****	End of declaration for builtin function	*****/
      111 
  1     1 
  1     2 /* BEGIN INCLUDE FILE ...   cobol_fixup_value.incl.pl1 */
  1     3 /* Last modified on Dec 18, 1974 by ORN */
  1     4 
  1     5 dcl value_ptr ptr;
  1     6 dcl 1 value based(value_ptr) aligned,
  1     7      2 con_len fixed bin aligned,
  1     8      2 code_len fixed bin aligned,
  1     9      2 text_len fixed bin aligned,
  1    10      2 def_len fixed bin aligned,
  1    11      2 link_len fixed bin aligned,
  1    12      2 sym_len fixed bin aligned,
  1    13      2 int_storage_len fixed bin aligned,
  1    14      2 exec_off fixed bin aligned;
  1    15 
  1    16 /* END INCLUDE FILE ...   cobol_fixup_value.incl.pl1 */
  1    17 
      112 
      113 
  2     1 
  2     2 /*  BEGIN INCLUDE FILE ...   cobol_entry_seq.incl.pl1		  */
  2     3 /*  Created May 22, 1976 by BC.		*/
  2     4 
  2     5 declare	parm_desc_ptr	ptr;
  2     6 
  2     7 declare	1 parm_desc	aligned based(parm_desc_ptr),
  2     8 	 2 n_args	fixed bin unaligned,
  2     9 	 2 descriptor_relp	(0 refer(parm_desc.n_args)) bit(18) unaligned;
  2    10 
  2    11 
  2    12 dcl	text_ptr	ptr;
  2    13 
  2    14 dcl	1 entry_seq aligned based(text_ptr),
  2    15 	 2 descr_relp_offset bit(18) unaligned,
  2    16 	 2 reserved bit(18) unaligned,
  2    17 	 2 def_relp bit(18) unaligned,			/* set to offset of definition section */
  2    18 	 2 flags	unaligned,
  2    19 	   3 basic_indicator	bit(1) unaligned,
  2    20 	   3 revision_1		bit(1) unaligned,
  2    21 	   3 has_descriptors	bit(1) unaligned,
  2    22 	   3 variable		bit(1) unaligned,
  2    23 	   3 function		bit(1) unaligned,
  2    24 	   3 pad			bit(13) unaligned,
  2    25 	 2 eax7 bit(36) aligned,			/* addr field set to max stack size mod 16 */
  2    26 	 2 epp2 bit(36) aligned,				/* preset */
  2    27 	 2 tsp2 bit(36) aligned,				/* preset */
  2    28 	 2 zero_fill	bit(18) unaligned,			/* preset */
  2    29 	 2 trace_cntrl_relp bit(18) unaligned,		/* set to 6 + length of internal static (32) */
  2    30 	 2 link_relp	bit(18) unaligned,
  2    31 	 2 block_relp	bit(18) unaligned;
  2    32 
  2    33 
  2    34 /*  END INCLUDE FILE ...   cobol_entry_seq.incl.pl1		  */
  2    35 
      114 
  3     1 
  3     2 /*  BEGIN INCLUDE FILE ...   cobol_definitions.incl.pl1		  */
  3     3 
  3     4 /*  Last modified June 27, 1974 by AEG			  */
  3     5 
  3     6 
  3     7 declare	1 def_header aligned based(def_base_ptr),
  3     8 	  2 def_list_relp bit(18) unaligned,
  3     9 	  2 unused bit(36) unaligned,
  3    10 	  2 flags unaligned,
  3    11 	    3 new_format bit(1) unaligned,
  3    12 	    3 ignore bit(1) unaligned,
  3    13 	    3 unused bit(16) unaligned;
  3    14 
  3    15 
  3    16 /*  Non-Class-3 Definitions				  */
  3    17 
  3    18 
  3    19 declare	def_ptr ptr;
  3    20 
  3    21 
  3    22 declare	1 definition aligned based(def_ptr),
  3    23 	  2 forward_thread bit(18) unaligned,
  3    24 	  2 backward_thread bit(18) unaligned,
  3    25 	  2 value bit(18) unaligned,
  3    26 	  2 flags unaligned,
  3    27 	    3 new_format bit(1) unaligned,
  3    28 	    3 ignore bit(1) unaligned,
  3    29 	    3 entrypoint bit(1) unaligned,
  3    30 	    3 retain bit(1) unaligned,
  3    31 	    3 descr_sw bit(1) unaligned,
  3    32 	    3 unused bit(10) unaligned,
  3    33 	  2 class bit(3) unaligned,
  3    34 	  2 symbol_relp bit(18) unaligned,
  3    35 	  2 segname_relp bit(18) unaligned,
  3    36 	  2 n_args fixed bin(17) unaligned,
  3    37 	  2 descriptor (0 refer(definition.n_args)) bit(18) unaligned;
  3    38 
  3    39 
  3    40 /*  Class-3 Definition				  */
  3    41 
  3    42 
  3    43 declare	1 segname aligned based(def_ptr),
  3    44 	  2 forward_thread bit(18) unaligned,
  3    45 	  2 backward_thread bit(18) unaligned,
  3    46 	  2 segname_thread bit(18) unaligned,
  3    47 	  2 flags bit(15) unaligned,
  3    48 	  2 class bit(3) unaligned,
  3    49 	  2 symbol_relp bit(18) unaligned,
  3    50 	  2 first_relp bit(18) unaligned;
  3    51 
  3    52 
  3    53 
  3    54 /*  END INCLUDE FILE ...   cobol_definitions.incl.pl1		  */
  3    55 
      115 
  4     1 
  4     2 /*  BEGIN INCLUDE FILE ...   cobol_linkage_header.incl.pl1  */
  4     3 
  4     4 /*  Last modified 07/19/78 by RAL to conform with MULTICS standard linkage map */
  4     5 /*  Last modified June 26, 1974 by AEG              */
  4     6 
  4     7 
  4     8 
  4     9 declare	1 linkage_header aligned based(link_base_ptr),
  4    10 	  2 pad bit(36),
  4    11 	  2 def_section_relp bit(18) unaligned,
  4    12 	  2 first_reference_relp bit(18) unaligned,
  4    13 	  2 obsolete_ptr ptr unal,
  4    14 	  2 original_linkage_ptr ptr unal,
  4    15 	  2 unused bit (72),
  4    16 	  2 links_relp bit(18) unaligned,
  4    17 	  2 linkage_section_length bit(18) unaligned,
  4    18 	  2 object_seg bit(18) unaligned,
  4    19 	  2 obsolete_length bit(18) unaligned;
  4    20 
  4    21 
  4    22 /*
  4    23*link_base_ptr		is a pointer to the base of the
  4    24*			linkage section and is an element
  4    25*			of the structure   cobol_ located in
  4    26*			  cobol_external_seg.
  4    27*
  4    28*pad			is reserved for future use and
  4    29*			must be zero.
  4    30*
  4    31*def_section_relp		is a pointer (relative to the base
  4    32*			of the object segment) to the base
  4    33*			of the definition section.
  4    34*
  4    35*first_reference_relp	is a pointer (relative to the base
  4    36*			of the linkage section) to the
  4    37*			array of first-reference traps.
  4    38*			If the value of this item is "0"b
  4    39*			then there are no first-reference
  4    40*			traps.
  4    41*
  4    42*obsolete_ptr		for historical reasons, linkage
  4    43*			sections are sometimes threaded
  4    44*			together to form a linkage list.
  4    45*			This variable is a pointer to the
  4    46*			next linkage section on the thread.
  4    47*			This variable is described for 
  4    48*			completemess;  it is not intended
  4    49*			for general use.
  4    50*
  4    51*original_linkage_ptr	is a pointer to the original link-
  4    52*			age section within the object seg-
  4    53*			ment.  It is used by the link un-
  4    54*			snapping mechanism.  It is init-
  4    55*			ialized by the linker.
  4    56*
  4    57*links_relp		is a pointer (retative to the base
  4    58*			of the linkage section) to the
  4    59*			first link (the base of the link
  4    60*			structure).
  4    61*
  4    62*linkage_section_length	is the length in words of the
  4    63*			linkage section.
  4    64*
  4    65*object_seg		is the segment number of the object
  4    66*			segment.  It is initialized by the
  4    67*			linker.
  4    68*
  4    69*obsolete_length		when several linkage sections are
  4    70*			combined into a list, this item
  4    71*			(in the first linkage section in
  4    72*			the list) contains the length of
  4    73*			the entire list.  See the above
  4    74*			discussion under obsolete_ptr.
  4    75*						  */
  4    76 /*  END INCLUDE FILE ...   cobol_linkage_header.incl.pl1		  */
  4    77 
      116 
      117 /* [3.0-1] */
  5     1 
  5     2 /* BEGIN INCLUDE FILE ...   cobol_fixed_static.incl.pl1 */
  5     3 /* Last Modified May 5, 1977 by BC */
  5     4 
  5     5 /* This structure exists in the static data portion of the
  5     6*linkage section of each cobol object segment.  This
  5     7*include file provides a "based" template for it. */
  5     8 
  5     9 /*  This include file also contains internal static initialized
  5    10*variables that define the offset of each field in this static
  5    11*data portion of the linkage section from the  
  5    12*pointer upon which it is based.  */
  5    13 
  5    14 
  5    15 /*  WARNING:  The fields in this structure,data_ptr
  5    16*up to, but not including reserved,
  5    17*must retain their positions in this structure forever.
  5    18*No new fields not having space already allocated may be
  5    19*defined as the position of the first link which follows
  5    20*this fixed static area (to cobol_rts_) is in a fixed location
  5    21*known to cobol_operators_. */
  5    22 dcl stat_ptr ptr;
  5    23 dcl 1 stat based(stat_ptr) aligned,
  5    24      2 data_ptr ptr aligned,
  5    25      2 control_ptr ptr aligned,
  5    26      2 file_info_ptr ptr aligned,
  5    27      2 call_cnt fixed bin aligned,
  5    28      2 data_len fixed bin aligned,
  5    29      2 entry_pt_ptr ptr aligned,
  5    30      2 prog_id_len fixed bin aligned,
  5    31      2 prog_id char(65) aligned,
  5    32      2 line_no (2) fixed bin aligned,
  5    33      2 fo_flag fixed bin aligned,
  5    34      2 fo_disp fixed bin aligned,
  5    35      2 main_prog_sw fixed bin aligned,
  5    36      2 sort_merge_sw fixed bin aligned,
  5    37      2 ind_mask bit(36),	/* overflow masking indicator bits.	*/
  5    38      2 pr3_save ptr,
  5    39      2 pr5_save ptr,
  5    40      2 user_output_ptr ptr,
  5    41      2 error_output_ptr ptr,
  5    42      2 user_input_ptr ptr,
  5    43      2 error_con char(30) varying,
  5    44     2 trace_control_word fixed bin aligned;
  5    45 
  5    46 
  5    47 /*  INTERNAL STATIC INITIALIZED VARIABLES THAT DEFINE THE
  5    48*OFFSET OF EACH FIELD IN THE STATIC PORTION OF THE LINKAGE
  5    49*SEGMENT.  */
  5    50 
  5    51 dcl fixed_static_length		fixed bin static options(constant) init(56);
  5    52 dcl first_link_offset		fixed bin static options(constant) init(64);
  5    53 /*dcl stat_data_ptr_off		fixed bin static options(constant) init(0);
  5    54*/*dcl stat_control_ptr_off		fixed bin static options(constant) init(2);
  5    55*/*dcl stat_file_info_ptr_off		fixed bin static options(constant) init(4);
  5    56*/*dcl stat_call_cnt_off		fixed bin static options(constant) init(6);
  5    57*/*dcl stat_data_len_off		fixed bin static options(constant) init(7);
  5    58*/*dcl stat_entry_pt_ptr_off		fixed bin static options(constant) init(8);
  5    59*/*dcl stat_prog_id_len_off		fixed bin static options(constant) init(10);
  5    60*/*dcl stat_prog_id_off		fixed bin static options(constant) init(11);
  5    61*/*dcl stat_line_no_off		fixed bin static options(constant) init(28);
  5    62*/*dcl stat_fo_flag_off		fixed bin static options(constant) init(30);
  5    63*/*dcl stat_fo_disp_off		fixed bin static options(constant) init(31);
  5    64*/*dcl stat_main_prog_sw_off		fixed bin static options(constant) init(32);
  5    65*/*dcl stat_pr3_ptr_off		fixed bin static options(constant) init(34);
  5    66*/*dcl stat_pr5_ptr_off		fixed bin static options(constant) init(36);
  5    67*/*dcl stat_user_output_ptr_off		fixed bin static options(constant) init(38);
  5    68*/*dcl stat_error_output_ptr_off		fixed bin static options(constant) init(40);
  5    69*/*dcl stat_user_input_ptr_off		fixed bin static options(constant) init(42);
  5    70*/*dcl stat_error_con_off		fixed bin static options(constant) init(44);
  5    71*/*dcl stat_trace_control_word_off	fixed bin static options(constant) init(53);
  5    72*/**/
  5    73 
  5    74 /* END INCLUDE FILE ...   cobol_fixed_static.incl.pl1 */
  5    75 
      118 
  6     1 
  6     2 /* BEGIN INCLUDE FILE ... cobol_.incl.pl1 */
  6     3 /* last modified Feb 4, 1977 by ORN  */
  6     4 
  6     5 /* This file defines all external data used in the generator phase of Multics Cobol */
  6     6 
  6     7 /* POINTERS */
  6     8 dcl cobol_$text_base_ptr ptr  ext;
  6     9 dcl text_base_ptr ptr  defined (cobol_$text_base_ptr);
  6    10 dcl cobol_$con_end_ptr ptr  ext;
  6    11 dcl con_end_ptr ptr  defined (cobol_$con_end_ptr);
  6    12 dcl cobol_$def_base_ptr ptr  ext;
  6    13 dcl def_base_ptr ptr  defined (cobol_$def_base_ptr);
  6    14 dcl cobol_$link_base_ptr ptr  ext;
  6    15 dcl link_base_ptr ptr  defined (cobol_$link_base_ptr);
  6    16 dcl cobol_$sym_base_ptr ptr  ext;
  6    17 dcl sym_base_ptr ptr  defined (cobol_$sym_base_ptr);
  6    18 dcl cobol_$reloc_text_base_ptr ptr  ext;
  6    19 dcl reloc_text_base_ptr ptr  defined (cobol_$reloc_text_base_ptr);
  6    20 dcl cobol_$reloc_def_base_ptr ptr  ext;
  6    21 dcl reloc_def_base_ptr ptr  defined (cobol_$reloc_def_base_ptr);
  6    22 dcl cobol_$reloc_link_base_ptr ptr  ext;
  6    23 dcl reloc_link_base_ptr ptr  defined (cobol_$reloc_link_base_ptr);
  6    24 dcl cobol_$reloc_sym_base_ptr ptr  ext;
  6    25 dcl reloc_sym_base_ptr ptr  defined (cobol_$reloc_sym_base_ptr);
  6    26 dcl cobol_$reloc_work_base_ptr ptr  ext;
  6    27 dcl reloc_work_base_ptr ptr  defined (cobol_$reloc_work_base_ptr);
  6    28 dcl cobol_$pd_map_ptr ptr  ext;
  6    29 dcl pd_map_ptr ptr  defined (cobol_$pd_map_ptr);
  6    30 dcl cobol_$fixup_ptr ptr  ext;
  6    31 dcl fixup_ptr ptr  defined (cobol_$fixup_ptr);
  6    32 dcl cobol_$initval_base_ptr ptr  ext;
  6    33 dcl initval_base_ptr ptr  defined (cobol_$initval_base_ptr);
  6    34 dcl cobol_$initval_file_ptr ptr  ext;
  6    35 dcl initval_file_ptr ptr  defined (cobol_$initval_file_ptr);
  6    36 dcl cobol_$perform_list_ptr ptr  ext;
  6    37 dcl perform_list_ptr ptr  defined (cobol_$perform_list_ptr);
  6    38 dcl cobol_$alter_list_ptr ptr  ext;
  6    39 dcl alter_list_ptr ptr  defined (cobol_$alter_list_ptr);
  6    40 dcl cobol_$seg_init_list_ptr ptr  ext;
  6    41 dcl seg_init_list_ptr ptr  defined (cobol_$seg_init_list_ptr);
  6    42 dcl cobol_$temp_token_area_ptr ptr  ext;
  6    43 dcl temp_token_area_ptr ptr  defined (cobol_$temp_token_area_ptr);
  6    44 dcl cobol_$temp_token_ptr ptr  ext;
  6    45 dcl temp_token_ptr ptr  defined (cobol_$temp_token_ptr);
  6    46 dcl cobol_$token_block1_ptr ptr  ext;
  6    47 dcl token_block1_ptr ptr  defined (cobol_$token_block1_ptr);
  6    48 dcl cobol_$token_block2_ptr ptr  ext;
  6    49 dcl token_block2_ptr ptr  defined (cobol_$token_block2_ptr);
  6    50 dcl cobol_$minpral5_ptr ptr  ext;
  6    51 dcl minpral5_ptr ptr  defined (cobol_$minpral5_ptr);
  6    52 dcl cobol_$tag_table_ptr ptr  ext;
  6    53 dcl tag_table_ptr ptr  defined (cobol_$tag_table_ptr);
  6    54 dcl cobol_$map_data_ptr ptr  ext;
  6    55 dcl map_data_ptr ptr  defined (cobol_$map_data_ptr);
  6    56 dcl cobol_$ptr_status_ptr ptr  ext;
  6    57 dcl ptr_status_ptr ptr  defined (cobol_$ptr_status_ptr);
  6    58 dcl cobol_$reg_status_ptr ptr  ext;
  6    59 dcl reg_status_ptr ptr  defined (cobol_$reg_status_ptr);
  6    60 dcl cobol_$misc_base_ptr ptr ext;
  6    61 dcl misc_base_ptr ptr defined (cobol_$misc_base_ptr);
  6    62 dcl cobol_$misc_end_ptr ptr ext;
  6    63 dcl misc_end_ptr ptr defined (cobol_$misc_end_ptr);
  6    64 dcl cobol_$list_ptr ptr ext;
  6    65 dcl list_ptr ptr defined (cobol_$list_ptr);
  6    66 dcl cobol_$allo1_ptr ptr ext;
  6    67 dcl allo1_ptr ptr defined (cobol_$allo1_ptr);
  6    68 dcl cobol_$eln_ptr ptr ext;
  6    69 dcl eln_ptr ptr defined (cobol_$eln_ptr);
  6    70 dcl cobol_$diag_ptr ptr ext;
  6    71 dcl diag_ptr ptr defined (cobol_$diag_ptr);
  6    72 dcl cobol_$xref_token_ptr ptr ext;
  6    73 dcl xref_token_ptr ptr defined (cobol_$xref_token_ptr);
  6    74 dcl cobol_$xref_chain_ptr ptr ext;
  6    75 dcl xref_chain_ptr ptr defined (cobol_$xref_chain_ptr);
  6    76 dcl cobol_$statement_info_ptr ptr ext;
  6    77 dcl statement_info_ptr ptr defined (cobol_$statement_info_ptr);
  6    78 dcl cobol_$reswd_ptr ptr ext;
  6    79 dcl reswd_ptr ptr defined (cobol_$reswd_ptr);
  6    80 dcl cobol_$op_con_ptr ptr ext;
  6    81 dcl op_con_ptr ptr defined (cobol_$op_con_ptr);
  6    82 dcl cobol_$ntbuf_ptr ptr ext;
  6    83 dcl ntbuf_ptr ptr defined (cobol_$ntbuf_ptr);
  6    84 dcl cobol_$main_pcs_ptr ptr ext;
  6    85 dcl main_pcs_ptr ptr defined (cobol_$main_pcs_ptr);
  6    86 dcl cobol_$include_info_ptr ptr ext;
  6    87 dcl include_info_ptr ptr defined (cobol_$include_info_ptr);
  6    88 
  6    89 /* FIXED BIN */
  6    90 dcl cobol_$text_wd_off fixed bin  ext;
  6    91 dcl text_wd_off fixed bin  defined (cobol_$text_wd_off);
  6    92 dcl cobol_$con_wd_off fixed bin  ext;
  6    93 dcl con_wd_off fixed bin  defined (cobol_$con_wd_off);
  6    94 dcl cobol_$def_wd_off fixed bin  ext;
  6    95 dcl def_wd_off fixed bin  defined (cobol_$def_wd_off);
  6    96 dcl cobol_$def_max fixed bin  ext;
  6    97 dcl def_max fixed bin  defined (cobol_$def_max);
  6    98 dcl cobol_$link_wd_off fixed bin  ext;
  6    99 dcl link_wd_off fixed bin  defined (cobol_$link_wd_off);
  6   100 dcl cobol_$link_max fixed bin  ext;
  6   101 dcl link_max fixed bin  defined (cobol_$link_max);
  6   102 dcl cobol_$sym_wd_off fixed bin  ext;
  6   103 dcl sym_wd_off fixed bin  defined (cobol_$sym_wd_off);
  6   104 dcl cobol_$sym_max fixed bin  ext;
  6   105 dcl sym_max fixed bin  defined (cobol_$sym_max);
  6   106 dcl cobol_$reloc_text_max fixed bin(24)  ext;
  6   107 dcl reloc_text_max fixed bin(24)  defined (cobol_$reloc_text_max);
  6   108 dcl cobol_$reloc_def_max fixed bin(24)  ext;
  6   109 dcl reloc_def_max fixed bin(24)  defined (cobol_$reloc_def_max);
  6   110 dcl cobol_$reloc_link_max fixed bin(24)  ext;
  6   111 dcl reloc_link_max fixed bin(24)  defined (cobol_$reloc_link_max);
  6   112 dcl cobol_$reloc_sym_max fixed bin(24)  ext;
  6   113 dcl reloc_sym_max fixed bin(24)  defined (cobol_$reloc_sym_max);
  6   114 dcl cobol_$reloc_work_max fixed bin(24)  ext;
  6   115 dcl reloc_work_max fixed bin(24)  defined (cobol_$reloc_work_max);
  6   116 dcl cobol_$pd_map_index fixed bin  ext;
  6   117 dcl pd_map_index fixed bin  defined (cobol_$pd_map_index);
  6   118 dcl cobol_$cobol_data_wd_off fixed bin  ext;
  6   119 dcl cobol_data_wd_off fixed bin  defined (cobol_$cobol_data_wd_off);
  6   120 dcl cobol_$stack_off fixed bin  ext;
  6   121 dcl stack_off fixed bin  defined (cobol_$stack_off);
  6   122 dcl cobol_$max_stack_off fixed bin  ext;
  6   123 dcl max_stack_off fixed bin  defined (cobol_$max_stack_off);
  6   124 dcl cobol_$init_stack_off fixed bin  ext;
  6   125 dcl init_stack_off fixed bin  defined (cobol_$init_stack_off);
  6   126 dcl cobol_$pd_map_sw fixed bin  ext;
  6   127 dcl pd_map_sw fixed bin  defined (cobol_$pd_map_sw);
  6   128 dcl cobol_$next_tag fixed bin  ext;
  6   129 dcl next_tag fixed bin  defined (cobol_$next_tag);
  6   130 dcl cobol_$data_init_flag fixed bin  ext;
  6   131 dcl data_init_flag fixed bin  defined (cobol_$data_init_flag);
  6   132 dcl cobol_$seg_init_flag fixed bin  ext;
  6   133 dcl seg_init_flag fixed bin  defined (cobol_$seg_init_flag);
  6   134 dcl cobol_$alter_flag fixed bin  ext;
  6   135 dcl alter_flag fixed bin  defined (cobol_$alter_flag);
  6   136 dcl cobol_$sect_eop_flag fixed bin  ext;
  6   137 dcl sect_eop_flag fixed bin  defined (cobol_$sect_eop_flag);
  6   138 dcl cobol_$para_eop_flag fixed bin  ext;
  6   139 dcl para_eop_flag fixed bin  defined (cobol_$para_eop_flag);
  6   140 dcl cobol_$priority_no fixed bin  ext;
  6   141 dcl priority_no fixed bin  defined (cobol_$priority_no);
  6   142 dcl cobol_$compile_count fixed bin ext;
  6   143 dcl compile_count fixed bin defined (cobol_$compile_count);
  6   144 dcl cobol_$ptr_assumption_ind fixed bin ext;
  6   145 dcl ptr_assumption_ind fixed bin defined (cobol_$ptr_assumption_ind);
  6   146 dcl cobol_$reg_assumption_ind fixed bin ext;
  6   147 dcl reg_assumption_ind fixed bin defined (cobol_$reg_assumption_ind);
  6   148 dcl cobol_$perform_para_index fixed bin ext;
  6   149 dcl perform_para_index fixed bin defined (cobol_$perform_para_index);
  6   150 dcl cobol_$perform_sect_index fixed bin ext;
  6   151 dcl perform_sect_index fixed bin defined (cobol_$perform_sect_index);
  6   152 dcl cobol_$alter_index fixed bin ext;
  6   153 dcl alter_index fixed bin defined (cobol_$alter_index);
  6   154 dcl cobol_$list_off fixed bin ext;
  6   155 dcl list_off fixed bin defined (cobol_$list_off);
  6   156 dcl cobol_$constant_offset fixed bin ext;
  6   157 dcl constant_offset fixed bin defined (cobol_$constant_offset);
  6   158 dcl cobol_$misc_max fixed bin ext;
  6   159 dcl misc_max fixed bin defined (cobol_$misc_max);
  6   160 dcl cobol_$pd_map_max fixed bin ext;
  6   161 dcl pd_map_max fixed bin defined (cobol_$pd_map_max);
  6   162 dcl cobol_$map_data_max fixed bin ext;
  6   163 dcl map_data_max fixed bin defined (cobol_$map_data_max);
  6   164 dcl cobol_$fixup_max fixed bin ext;
  6   165 dcl fixup_max fixed bin defined (cobol_$fixup_max);
  6   166 dcl cobol_$tag_table_max fixed bin ext;
  6   167 dcl tag_table_max fixed bin defined (cobol_$tag_table_max);
  6   168 dcl cobol_$temp_token_max fixed bin ext;
  6   169 dcl temp_token_max fixed bin defined (cobol_$temp_token_max);
  6   170 dcl cobol_$allo1_max fixed bin ext;
  6   171 dcl allo1_max fixed bin defined (cobol_$allo1_max);
  6   172 dcl cobol_$eln_max fixed bin ext;
  6   173 dcl eln_max fixed bin defined (cobol_$eln_max);
  6   174 dcl cobol_$debug_enable fixed bin ext;
  6   175 dcl debug_enable fixed bin defined (cobol_$debug_enable);
  6   176 dcl cobol_$non_source_offset fixed bin ext;
  6   177 dcl non_source_offset fixed bin defined (cobol_$non_source_offset);
  6   178 dcl cobol_$initval_flag fixed bin ext;
  6   179 dcl initval_flag fixed bin defined (cobol_$initval_flag);
  6   180 dcl cobol_$date_compiled_sw fixed bin ext;
  6   181 dcl date_compiled_sw fixed bin defined (cobol_$date_compiled_sw);
  6   182 dcl cobol_$include_cnt fixed bin ext;
  6   183 dcl include_cnt fixed bin defined (cobol_$include_cnt);
  6   184 dcl cobol_$fs_charcnt fixed bin ext;
  6   185 dcl fs_charcnt fixed bin defined (cobol_$fs_charcnt);
  6   186 dcl cobol_$ws_charcnt fixed bin ext;
  6   187 dcl ws_charcnt fixed bin defined (cobol_$ws_charcnt);
  6   188 dcl cobol_$coms_charcnt fixed bin ext;
  6   189 dcl coms_charcnt fixed bin defined (cobol_$coms_charcnt);
  6   190 dcl cobol_$ls_charcnt fixed bin ext;
  6   191 dcl ls_charcnt fixed bin defined (cobol_$ls_charcnt);
  6   192 dcl cobol_$cons_charcnt fixed bin ext;
  6   193 dcl cons_charcnt fixed bin defined (cobol_$cons_charcnt);
  6   194 dcl cobol_$value_cnt fixed bin ext;
  6   195 dcl value_cnt fixed bin defined (cobol_$value_cnt);
  6   196 dcl cobol_$cd_cnt fixed bin ext;
  6   197 dcl cd_cnt fixed bin defined (cobol_$cd_cnt);
  6   198 dcl cobol_$fs_wdoff fixed bin ext;
  6   199 dcl fs_wdoff fixed bin defined (cobol_$fs_wdoff);
  6   200 dcl cobol_$ws_wdoff fixed bin ext;
  6   201 dcl ws_wdoff fixed bin defined (cobol_$ws_wdoff);
  6   202 dcl cobol_$coms_wdoff fixed bin ext;
  6   203 dcl coms_wdoff fixed bin defined (cobol_$coms_wdoff);
  6   204 
  6   205 /* CHARACTER */
  6   206 dcl cobol_$scratch_dir char (168)   aligned ext;
  6   207 dcl scratch_dir char (168)   aligned defined (cobol_$scratch_dir);			/* -42- */
  6   208 dcl cobol_$obj_seg_name char (32)   aligned ext;
  6   209 dcl obj_seg_name char (32)   aligned defined (cobol_$obj_seg_name);		/* -8- */
  6   210 
  6   211 /* BIT */
  6   212 dcl cobol_$xref_bypass bit(1) aligned ext;
  6   213 dcl xref_bypass bit(1) aligned defined (cobol_$xref_bypass);			/* -1- */
  6   214 dcl cobol_$same_sort_merge_proc bit(1) aligned ext;
  6   215 dcl same_sort_merge_proc bit(1) aligned defined (cobol_$same_sort_merge_proc);		/* -1- */
  6   216 
  6   217 
  6   218 /* END INCLUDE FILE ... cobol_incl.pl1*/
  6   219 
  6   220 
      119 
      120      end cobol_patch;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/24/89  0832.7  cobol_patch.pl1                   >spec>install>MR12.3-1048>cobol_patch.pl1
112          1    03/27/82  0439.7  cobol_fixup_value.incl.pl1        >ldd>include>cobol_fixup_value.incl.pl1
114          2    11/11/82  1712.7  cobol_entry_seq.incl.pl1          >ldd>include>cobol_entry_seq.incl.pl1
115          3    11/11/82  1712.7  cobol_definitions.incl.pl1        >ldd>include>cobol_definitions.incl.pl1
116          4    03/27/82  0439.4  cobol_linkage_header.incl.pl1     >ldd>include>cobol_linkage_header.incl.pl1
118          5    10/10/83  1730.8  cobol_fixed_static.incl.pl1       >ldd>include>cobol_fixed_static.incl.pl1
119          6    11/11/82  1712.7  cobol_.incl.pl1                   >ldd>include>cobol_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addrel                                                 builtin function         dcl 107 ref 71 73 76 83 91 96
class                     1(33)        based           bit(3)                   level 2 packed packed unaligned dcl 3-22 ref 72 75
cobol_$cobol_data_wd_off        000020 external static fixed bin(17,0)          dcl 6-118 ref 97
cobol_$con_end_ptr              000012 external static pointer                  dcl 6-10 ref 83
cobol_$def_base_ptr             000014 external static pointer                  dcl 6-12 ref 71 71 71 73 91
cobol_$link_base_ptr            000016 external static pointer                  dcl 6-14 ref 94 94 95 95 96
cobol_$max_stack_off            000022 external static fixed bin(17,0)          dcl 6-122 ref 65
cobol_$text_base_ptr            000010 external static pointer                  dcl 6-8 ref 67 76
con_len                                based           fixed bin(17,0)          level 2 dcl 1-6 ref 78 85 88
data_len                  7            based           fixed bin(17,0)          level 2 dcl 5-23 set ref 98*
def_base_ptr                           defined         pointer                  dcl 6-13 ref 71
def_header                             based           structure                level 1 dcl 3-7
def_list_relp                          based           bit(18)                  level 2 packed packed unaligned dcl 3-7 ref 71
def_ptr                         000106 automatic       pointer                  dcl 3-19 set ref 71* 72 73* 73 75 76 77 78 79 91* 91
def_section_relp          1            based           bit(18)                  level 2 packed packed unaligned dcl 4-9 set ref 94*
definition                             based           structure                level 1 dcl 3-22
descr_relp_offset                      based           bit(18)                  level 2 packed packed unaligned dcl 2-14 set ref 82
                                                                                  88 89*
descriptor_relp           0(18)        based           bit(18)                  array level 2 packed packed unaligned dcl 2-7 set
                                                                                  ref 85 86*
eax7                      2            based           bit(36)                  level 2 dcl 2-14 set ref 68*
entry_seq                              based           structure                level 1 dcl 2-14
exec_off                  7            based           fixed bin(17,0)          level 2 dcl 1-6 set ref 77*
fixed                                                  builtin function         dcl 107 ref 71 73 76 77 78 82 85 88 91 98
flags                     1(18)        based           structure                level 2 packed packed unaligned dcl 2-14
forward_thread                         based           bit(18)                  level 2 packed packed unaligned dcl 3-22 ref 73 91
has_descriptors           1(20)        based           bit(1)                   level 3 packed packed unaligned dcl 2-14 ref 80
i                               000101 automatic       fixed bin(17,0)          dcl 61 set ref 84* 85 86*
link_base_ptr                          defined         pointer                  dcl 6-15 ref 94 95
link_len                  4            based           fixed bin(17,0)          level 2 dcl 1-6 ref 95
linkage_header                         based           structure                level 1 dcl 4-9
linkage_section_length
                          6(18)        based           bit(18)                  level 2 packed packed unaligned dcl 4-9 set ref 95*
n_args                                 based           fixed bin(17,0)          level 2 packed packed unaligned dcl 2-7 ref 84
parm_desc                              based           structure                level 1 dcl 2-7
parm_desc_ptr                   000102 automatic       pointer                  dcl 2-5 set ref 83* 84 85 86
stat                                   based           structure                level 1 dcl 5-23
stat_ptr                        000110 automatic       pointer                  dcl 5-22 set ref 96* 98
substr                                                 builtin function         dcl 107 set ref 68* 68 79 86 89 94 95 98
text_len                  2            based           fixed bin(17,0)          level 2 dcl 1-6 ref 94
text_ptr                        000104 automatic       pointer                  dcl 2-12 set ref 67* 68 76* 80 82 88 89
unspec                                                 builtin function         dcl 107 ref 68 79 86 89 94 95 98
utemp                           000100 automatic       fixed bin(17,0)          dcl 60 set ref 65* 68 78* 79 82* 83 85* 86 88* 89
                                                                                  97* 98
value                                  based           structure                level 1 dcl 1-6 in procedure "cobol_patch"
value                     1            based           bit(18)                  level 2 in structure "definition" packed packed
                                                                                  unaligned dcl 3-22 in procedure "cobol_patch" set
                                                                                  ref 76 77 78 79*
value_ptr                              parameter       pointer                  dcl 1-5 ref 26 77 78 85 88 94 95

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
addr                                                   builtin function         dcl 107
allo1_max                              defined         fixed bin(17,0)          dcl 6-171
allo1_ptr                              defined         pointer                  dcl 6-67
alter_flag                             defined         fixed bin(17,0)          dcl 6-135
alter_index                            defined         fixed bin(17,0)          dcl 6-153
alter_list_ptr                         defined         pointer                  dcl 6-39
binary                                                 builtin function         dcl 107
cd_cnt                                 defined         fixed bin(17,0)          dcl 6-197
cobol_$allo1_max                       external static fixed bin(17,0)          dcl 6-170
cobol_$allo1_ptr                       external static pointer                  dcl 6-66
cobol_$alter_flag                      external static fixed bin(17,0)          dcl 6-134
cobol_$alter_index                     external static fixed bin(17,0)          dcl 6-152
cobol_$alter_list_ptr                  external static pointer                  dcl 6-38
cobol_$cd_cnt                          external static fixed bin(17,0)          dcl 6-196
cobol_$compile_count                   external static fixed bin(17,0)          dcl 6-142
cobol_$coms_charcnt                    external static fixed bin(17,0)          dcl 6-188
cobol_$coms_wdoff                      external static fixed bin(17,0)          dcl 6-202
cobol_$con_wd_off                      external static fixed bin(17,0)          dcl 6-92
cobol_$cons_charcnt                    external static fixed bin(17,0)          dcl 6-192
cobol_$constant_offset                 external static fixed bin(17,0)          dcl 6-156
cobol_$data_init_flag                  external static fixed bin(17,0)          dcl 6-130
cobol_$date_compiled_sw                external static fixed bin(17,0)          dcl 6-180
cobol_$debug_enable                    external static fixed bin(17,0)          dcl 6-174
cobol_$def_max                         external static fixed bin(17,0)          dcl 6-96
cobol_$def_wd_off                      external static fixed bin(17,0)          dcl 6-94
cobol_$diag_ptr                        external static pointer                  dcl 6-70
cobol_$eln_max                         external static fixed bin(17,0)          dcl 6-172
cobol_$eln_ptr                         external static pointer                  dcl 6-68
cobol_$fixup_max                       external static fixed bin(17,0)          dcl 6-164
cobol_$fixup_ptr                       external static pointer                  dcl 6-30
cobol_$fs_charcnt                      external static fixed bin(17,0)          dcl 6-184
cobol_$fs_wdoff                        external static fixed bin(17,0)          dcl 6-198
cobol_$include_cnt                     external static fixed bin(17,0)          dcl 6-182
cobol_$include_info_ptr                external static pointer                  dcl 6-86
cobol_$init_stack_off                  external static fixed bin(17,0)          dcl 6-124
cobol_$initval_base_ptr                external static pointer                  dcl 6-32
cobol_$initval_file_ptr                external static pointer                  dcl 6-34
cobol_$initval_flag                    external static fixed bin(17,0)          dcl 6-178
cobol_$link_max                        external static fixed bin(17,0)          dcl 6-100
cobol_$link_wd_off                     external static fixed bin(17,0)          dcl 6-98
cobol_$list_off                        external static fixed bin(17,0)          dcl 6-154
cobol_$list_ptr                        external static pointer                  dcl 6-64
cobol_$ls_charcnt                      external static fixed bin(17,0)          dcl 6-190
cobol_$main_pcs_ptr                    external static pointer                  dcl 6-84
cobol_$map_data_max                    external static fixed bin(17,0)          dcl 6-162
cobol_$map_data_ptr                    external static pointer                  dcl 6-54
cobol_$minpral5_ptr                    external static pointer                  dcl 6-50
cobol_$misc_base_ptr                   external static pointer                  dcl 6-60
cobol_$misc_end_ptr                    external static pointer                  dcl 6-62
cobol_$misc_max                        external static fixed bin(17,0)          dcl 6-158
cobol_$next_tag                        external static fixed bin(17,0)          dcl 6-128
cobol_$non_source_offset               external static fixed bin(17,0)          dcl 6-176
cobol_$ntbuf_ptr                       external static pointer                  dcl 6-82
cobol_$obj_seg_name                    external static char(32)                 dcl 6-208
cobol_$op_con_ptr                      external static pointer                  dcl 6-80
cobol_$para_eop_flag                   external static fixed bin(17,0)          dcl 6-138
cobol_$pd_map_index                    external static fixed bin(17,0)          dcl 6-116
cobol_$pd_map_max                      external static fixed bin(17,0)          dcl 6-160
cobol_$pd_map_ptr                      external static pointer                  dcl 6-28
cobol_$pd_map_sw                       external static fixed bin(17,0)          dcl 6-126
cobol_$perform_list_ptr                external static pointer                  dcl 6-36
cobol_$perform_para_index              external static fixed bin(17,0)          dcl 6-148
cobol_$perform_sect_index              external static fixed bin(17,0)          dcl 6-150
cobol_$priority_no                     external static fixed bin(17,0)          dcl 6-140
cobol_$ptr_assumption_ind              external static fixed bin(17,0)          dcl 6-144
cobol_$ptr_status_ptr                  external static pointer                  dcl 6-56
cobol_$reg_assumption_ind              external static fixed bin(17,0)          dcl 6-146
cobol_$reg_status_ptr                  external static pointer                  dcl 6-58
cobol_$reloc_def_base_ptr              external static pointer                  dcl 6-20
cobol_$reloc_def_max                   external static fixed bin(24,0)          dcl 6-108
cobol_$reloc_link_base_ptr             external static pointer                  dcl 6-22
cobol_$reloc_link_max                  external static fixed bin(24,0)          dcl 6-110
cobol_$reloc_sym_base_ptr              external static pointer                  dcl 6-24
cobol_$reloc_sym_max                   external static fixed bin(24,0)          dcl 6-112
cobol_$reloc_text_base_ptr             external static pointer                  dcl 6-18
cobol_$reloc_text_max                  external static fixed bin(24,0)          dcl 6-106
cobol_$reloc_work_base_ptr             external static pointer                  dcl 6-26
cobol_$reloc_work_max                  external static fixed bin(24,0)          dcl 6-114
cobol_$reswd_ptr                       external static pointer                  dcl 6-78
cobol_$same_sort_merge_proc            external static bit(1)                   dcl 6-214
cobol_$scratch_dir                     external static char(168)                dcl 6-206
cobol_$sect_eop_flag                   external static fixed bin(17,0)          dcl 6-136
cobol_$seg_init_flag                   external static fixed bin(17,0)          dcl 6-132
cobol_$seg_init_list_ptr               external static pointer                  dcl 6-40
cobol_$stack_off                       external static fixed bin(17,0)          dcl 6-120
cobol_$statement_info_ptr              external static pointer                  dcl 6-76
cobol_$sym_base_ptr                    external static pointer                  dcl 6-16
cobol_$sym_max                         external static fixed bin(17,0)          dcl 6-104
cobol_$sym_wd_off                      external static fixed bin(17,0)          dcl 6-102
cobol_$tag_table_max                   external static fixed bin(17,0)          dcl 6-166
cobol_$tag_table_ptr                   external static pointer                  dcl 6-52
cobol_$temp_token_area_ptr             external static pointer                  dcl 6-42
cobol_$temp_token_max                  external static fixed bin(17,0)          dcl 6-168
cobol_$temp_token_ptr                  external static pointer                  dcl 6-44
cobol_$text_wd_off                     external static fixed bin(17,0)          dcl 6-90
cobol_$token_block1_ptr                external static pointer                  dcl 6-46
cobol_$token_block2_ptr                external static pointer                  dcl 6-48
cobol_$value_cnt                       external static fixed bin(17,0)          dcl 6-194
cobol_$ws_charcnt                      external static fixed bin(17,0)          dcl 6-186
cobol_$ws_wdoff                        external static fixed bin(17,0)          dcl 6-200
cobol_$xref_bypass                     external static bit(1)                   dcl 6-212
cobol_$xref_chain_ptr                  external static pointer                  dcl 6-74
cobol_$xref_token_ptr                  external static pointer                  dcl 6-72
cobol_data_wd_off                      defined         fixed bin(17,0)          dcl 6-119
compile_count                          defined         fixed bin(17,0)          dcl 6-143
coms_charcnt                           defined         fixed bin(17,0)          dcl 6-189
coms_wdoff                             defined         fixed bin(17,0)          dcl 6-203
con_end_ptr                            defined         pointer                  dcl 6-11
con_wd_off                             defined         fixed bin(17,0)          dcl 6-93
cons_charcnt                           defined         fixed bin(17,0)          dcl 6-193
constant_offset                        defined         fixed bin(17,0)          dcl 6-157
data_init_flag                         defined         fixed bin(17,0)          dcl 6-131
date_compiled_sw                       defined         fixed bin(17,0)          dcl 6-181
debug_enable                           defined         fixed bin(17,0)          dcl 6-175
def_max                                defined         fixed bin(17,0)          dcl 6-97
def_wd_off                             defined         fixed bin(17,0)          dcl 6-95
diag_ptr                               defined         pointer                  dcl 6-71
eln_max                                defined         fixed bin(17,0)          dcl 6-173
eln_ptr                                defined         pointer                  dcl 6-69
first_link_offset                      internal static fixed bin(17,0)          initial dcl 5-52
fixed_static_length                    internal static fixed bin(17,0)          initial dcl 5-51
fixup_max                              defined         fixed bin(17,0)          dcl 6-165
fixup_ptr                              defined         pointer                  dcl 6-31
fs_charcnt                             defined         fixed bin(17,0)          dcl 6-185
fs_wdoff                               defined         fixed bin(17,0)          dcl 6-199
include_cnt                            defined         fixed bin(17,0)          dcl 6-183
include_info_ptr                       defined         pointer                  dcl 6-87
index                                                  builtin function         dcl 107
init_stack_off                         defined         fixed bin(17,0)          dcl 6-125
initval_base_ptr                       defined         pointer                  dcl 6-33
initval_file_ptr                       defined         pointer                  dcl 6-35
initval_flag                           defined         fixed bin(17,0)          dcl 6-179
length                                                 builtin function         dcl 107
link_max                               defined         fixed bin(17,0)          dcl 6-101
link_wd_off                            defined         fixed bin(17,0)          dcl 6-99
list_off                               defined         fixed bin(17,0)          dcl 6-155
list_ptr                               defined         pointer                  dcl 6-65
ls_charcnt                             defined         fixed bin(17,0)          dcl 6-191
main_pcs_ptr                           defined         pointer                  dcl 6-85
map_data_max                           defined         fixed bin(17,0)          dcl 6-163
map_data_ptr                           defined         pointer                  dcl 6-55
max_stack_off                          defined         fixed bin(17,0)          dcl 6-123
minpral5_ptr                           defined         pointer                  dcl 6-51
misc_base_ptr                          defined         pointer                  dcl 6-61
misc_end_ptr                           defined         pointer                  dcl 6-63
misc_max                               defined         fixed bin(17,0)          dcl 6-159
mod                                                    builtin function         dcl 107
next_tag                               defined         fixed bin(17,0)          dcl 6-129
non_source_offset                      defined         fixed bin(17,0)          dcl 6-177
ntbuf_ptr                              defined         pointer                  dcl 6-83
null                                                   builtin function         dcl 107
obj_seg_name                           defined         char(32)                 dcl 6-209
op_con_ptr                             defined         pointer                  dcl 6-81
para_eop_flag                          defined         fixed bin(17,0)          dcl 6-139
pd_map_index                           defined         fixed bin(17,0)          dcl 6-117
pd_map_max                             defined         fixed bin(17,0)          dcl 6-161
pd_map_ptr                             defined         pointer                  dcl 6-29
pd_map_sw                              defined         fixed bin(17,0)          dcl 6-127
perform_list_ptr                       defined         pointer                  dcl 6-37
perform_para_index                     defined         fixed bin(17,0)          dcl 6-149
perform_sect_index                     defined         fixed bin(17,0)          dcl 6-151
priority_no                            defined         fixed bin(17,0)          dcl 6-141
ptr_assumption_ind                     defined         fixed bin(17,0)          dcl 6-145
ptr_status_ptr                         defined         pointer                  dcl 6-57
reg_assumption_ind                     defined         fixed bin(17,0)          dcl 6-147
reg_status_ptr                         defined         pointer                  dcl 6-59
rel                                                    builtin function         dcl 107
reloc_def_base_ptr                     defined         pointer                  dcl 6-21
reloc_def_max                          defined         fixed bin(24,0)          dcl 6-109
reloc_link_base_ptr                    defined         pointer                  dcl 6-23
reloc_link_max                         defined         fixed bin(24,0)          dcl 6-111
reloc_sym_base_ptr                     defined         pointer                  dcl 6-25
reloc_sym_max                          defined         fixed bin(24,0)          dcl 6-113
reloc_text_base_ptr                    defined         pointer                  dcl 6-19
reloc_text_max                         defined         fixed bin(24,0)          dcl 6-107
reloc_work_base_ptr                    defined         pointer                  dcl 6-27
reloc_work_max                         defined         fixed bin(24,0)          dcl 6-115
reswd_ptr                              defined         pointer                  dcl 6-79
same_sort_merge_proc                   defined         bit(1)                   dcl 6-215
scratch_dir                            defined         char(168)                dcl 6-207
sect_eop_flag                          defined         fixed bin(17,0)          dcl 6-137
seg_init_flag                          defined         fixed bin(17,0)          dcl 6-133
seg_init_list_ptr                      defined         pointer                  dcl 6-41
segname                                based           structure                level 1 dcl 3-43
stack_off                              defined         fixed bin(17,0)          dcl 6-121
statement_info_ptr                     defined         pointer                  dcl 6-77
string                                                 builtin function         dcl 107
sym_base_ptr                           defined         pointer                  dcl 6-17
sym_max                                defined         fixed bin(17,0)          dcl 6-105
sym_wd_off                             defined         fixed bin(17,0)          dcl 6-103
tag_table_max                          defined         fixed bin(17,0)          dcl 6-167
tag_table_ptr                          defined         pointer                  dcl 6-53
temp                                   automatic       fixed bin(17,0)          dcl 61
temp_token_area_ptr                    defined         pointer                  dcl 6-43
temp_token_max                         defined         fixed bin(17,0)          dcl 6-169
temp_token_ptr                         defined         pointer                  dcl 6-45
text_base_ptr                          defined         pointer                  dcl 6-9
text_wd_off                            defined         fixed bin(17,0)          dcl 6-91
token_block1_ptr                       defined         pointer                  dcl 6-47
token_block2_ptr                       defined         pointer                  dcl 6-49
value_cnt                              defined         fixed bin(17,0)          dcl 6-195
ws_charcnt                             defined         fixed bin(17,0)          dcl 6-187
ws_wdoff                               defined         fixed bin(17,0)          dcl 6-201
xref_bypass                            defined         bit(1)                   dcl 6-213
xref_chain_ptr                         defined         pointer                  dcl 6-75
xref_token_ptr                         defined         pointer                  dcl 6-73

NAMES DECLARED BY EXPLICIT CONTEXT.
cobol_patch                     000004 constant        entry                    external dcl 26
start                           000011 constant        label                    dcl 65

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       326         352     225         336
Length       650     225        24         262     100           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cobol_patch                          94 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cobol_patch              000100 utemp                       cobol_patch
                         000101 i                           cobol_patch
                         000102 parm_desc_ptr               cobol_patch
                         000104 text_ptr                    cobol_patch
                         000106 def_ptr                     cobol_patch
                         000110 stat_ptr                    cobol_patch

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
return_mac          ext_entry

NO EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
cobol_$cobol_data_wd_off      cobol_$con_end_ptr            cobol_$def_base_ptr           cobol_$link_base_ptr
cobol_$max_stack_off          cobol_$text_base_ptr




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     26 000001        65 000011        67 000014        68 000017        71 000027        72 000036        73 000042
     74 000051        75 000052        76 000056        77 000071        78 000077        79 000103        80 000106
     82 000111        83 000115        84 000121        85 000131        86 000145        87 000151        88 000153
     89 000161        91 000165        92 000174        94 000175        95 000206        96 000210        97 000214
     98 000217       101 000224


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
