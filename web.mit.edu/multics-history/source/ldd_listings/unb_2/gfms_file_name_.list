	COMPILATION LISTING OF SEGMENT gfms_file_name_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/10/84  1206.6 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 gfms_file_name_: proc (nf, fn)returns (bit (1));
        7 
        8 /* Hash file name "fn" as selected or not
        9*   selected (nf="0"b or nt="1"b).
       10*   Return "1"b if failure.
       11*
       12*   Author: Dave Ward	10/19/80
       13*   Change: Dave Ward	10/30/80 provide catalog (/) and file name.
       14**/
       15 dcl  fn                       char(*)parm;
       16 dcl  nf                       bit(1)parm;
       17 	if number_names >= hbound (file_name, 1) then do;
       18 	     if number_names = hbound (file_name, 1) then
       19 		call com_err_ (
       20 		0
       21 		, "gfms_file_name_"
       22 		, "Exhausted ^i entries available in file name list."
       23 		, hbound (file_name, 1)
       24 		);
       25 	     number_names = number_names+1;
       26 	     return ("1"b);				/* Failure. */
       27 	end;
       28 	if index (fn, "/")>0 then sp = addr (cat_start);
       29 	else sp = addr (file_start);
       30 	uc_fn = translate (
       31 	     fn
       32 	     , "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
       33 	     , "abcdefghijklmnopqrstuvwxyz"
       34 	     );
       35 	k = gfms_hash_ ((uc_fn), hbound (start, 1)+1);
       36 	number_names = number_names+1;
       37 	file_name (number_names).not = nf;
       38 	file_name (number_names).link = start (k);
       39 	start (k) = number_names;
       40 	file_name (number_names).name = uc_fn;
       41 	return ("0"b);				/* Success. */
       42 
       43 /*   Variables for gfms_file_name_:		*/
       44 /*   IDENTIFIER		ATTRIBUTES	*/
       45 dcl  com_err_                 entry() options(variable);
       46 dcl  gfms_hash_               entry (char(*), fixed bin) returns(fixed bin);
       47 dcl  index                    builtin;
       48 dcl  k                        fixed bin;
       49 dcl  sp                       ptr;
       50 dcl  start                    (0:1020)fixed bin based(sp);
       51 dcl  translate                builtin;
       52 dcl  uc_fn                    char(168)var;
       53 
  1     1 /* BEGIN INCLUDE FILE gfms_do_files.incl.pl1   (Wardd Multics)  10/19/80 2212.5 mst Sun */
  1     2 
  1     3 /* Hash list of files specified in -file, -no_file
  1     4*   control arguments and in the file designated by
  1     5*   the -input_file.
  1     6**/
  1     7 dcl 1 file_names		aligned based(inp)
  1     8 ,     3 number_names	fixed bin
  1     9 ,     3 cat_start		(0:1020)fixed bin
  1    10 ,     3 file_start		(0:1020)fixed bin
  1    11 ,     3 file_name		(4500)
  1    12 ,       4 not		bit(1)unal
  1    13 ,       4 fill		bit(17)unal
  1    14 ,       4 link		fixed bin(17)unal
  1    15 ,       4 name		char(168)var
  1    16 ;
  1    17 
  1    18 /*   END INCLUDE FILE gfms_do_files.incl.pl1 */
       54 
       55 
  2     1 /* BEGIN INCLUDE FILE gfms_ext.incl.pl1   (Wardd Multics)  10/07/80 2142.2 mst Tue */
  2     2 /* Modified by:	S. C. Akers	02/08/82	Add gfms_ext$working_dir,
  2     3*						   mapping_rule,
  2     4*						   umc_name 
  2     5*   Modified  Ron Barstad  83-06-03  attach_desc from 40 to 80 char
  2     6**/
  2     7 
  2     8 dcl 1 gfms_ext$print_routines	aligned ext
  2     9 ,     3 ioa		entry variable options(variable)
  2    10 ,     3 ioa_nnl		entry variable options(variable)
  2    11 ;
  2    12 
  2    13 dcl 1 gfms_ext$temp_segs	aligned ext
  2    14 ,     3 dtp		ptr
  2    15 ,     3 nlp		ptr
  2    16 ,     3 inp		ptr
  2    17 ;
  2    18 
  2    19 dcl 1 gfms_ext$tape_file	aligned ext
  2    20 ,     3 cbp		ptr
  2    21 ,     3 attach_description	char(80)unal
  2    22 ,     3 density
  2    23 ,       4 ftd		fixed bin	/* First tape density to attempt. */
  2    24 ,       4 ltd		fixed bin	/* Last tape density to attempt. */
  2    25 ,     3 tape_reel_information
  2    26 ,       4 reel_serial_num	char(6)
  2    27 ,       4 file_serial_num	char(6)
  2    28 ,       4 reel_sequence_num	char(6)
  2    29 ;
  2    30 
  2    31 dcl 1 gfms_ext$options	aligned ext
  2    32 ,     3 close		bit(1)unal	/* perform iox close. */
  2    33 ,     3 detach		bit(1)unal	/* perform iox detach. */
  2    34 ,     3 dump		bit(1)unal	/* dump tape records/information. */
  2    35 ,     3 gf		bit(1)unal	/* provide gtss file attributes. */
  2    36 ,     3 prfn		bit(1)unal	/* print file names. */
  2    37 ,     3 scan_ss		bit(1)unal	/* scan substructure, display, quit. */
  2    38 ,     3 tll		bit(1)unal	/* print totals of llinks. */
  2    39 ,     3 unload		bit(1)unal	/* unload files. */
  2    40 ,     3 NOT_IN_USE		bit(28)unal
  2    41 ;
  2    42 
  2    43 dcl  gfms_ext$working_dir	char (168) var ext static;	/* Where to restore the files.
  2    44*						   It may be the user's working
  2    45*						   directory, or the UMC or SMC directory. */
  2    46 
  2    47 dcl  gfms_ext$mapping_rule	char(3) external static;
  2    48 
  2    49 dcl  gfms_ext$umc_name	char(12) external static;
  2    50 
  2    51 /*   END INCLUDE FILE gfms_ext.incl.pl1 */
       56 
       57      end gfms_file_name_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/10/84  1041.9  gfms_file_name_.pl1               >spec>on>7105>gfms_file_name_.pl1
54           1    03/27/82  0424.8  gfms_do_files.incl.pl1            >ldd>include>gfms_do_files.incl.pl1
56           2    10/24/83  1642.4  gfms_ext.incl.pl1                 >ldd>include>gfms_ext.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
cat_start                 1            based           fixed bin(17,0)          array level 2 dcl 1-7 set ref 28
com_err_                        000010 constant        entry                    external dcl 45 ref 18
file_name              3773            based           structure                array level 2 dcl 1-7 set ref 17 18 18 18
file_names                             based           structure                level 1 dcl 1-7
file_start             1776            based           fixed bin(17,0)          array level 2 dcl 1-7 set ref 29
fn                                     parameter       char                     unaligned dcl 15 ref 6 28 30
gfms_ext$temp_segs              000014 external static structure                level 1 dcl 2-13
gfms_hash_                      000012 constant        entry                    external dcl 46 ref 35
index                                                  builtin function         dcl 47 ref 28
inp                       4     000014 external static pointer                  level 2 dcl 2-13 ref 17 17 18 18 18 18 25 25 28 29
                                                                                  36 36 37 37 38 38 39 40 40
k                               000100 automatic       fixed bin(17,0)          dcl 48 set ref 35* 38 39
link                   3773(18)        based           fixed bin(17,0)          array level 3 packed unaligned dcl 1-7 set ref 38*
name                   3774            based           varying char(168)        array level 3 dcl 1-7 set ref 40*
nf                                     parameter       bit(1)                   unaligned dcl 16 ref 6 37
not                    3773            based           bit(1)                   array level 3 packed unaligned dcl 1-7 set ref 37*
number_names                           based           fixed bin(17,0)          level 2 dcl 1-7 set ref 17 18 25* 25 36* 36 37 38 39
                                                                                  40
sp                              000102 automatic       pointer                  dcl 49 set ref 28* 29* 35 38 39
start                                  based           fixed bin(17,0)          array dcl 50 set ref 35 38 39*
translate                                              builtin function         dcl 51 ref 30
uc_fn                           000104 automatic       varying char(168)        dcl 52 set ref 30* 35 40

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
gfms_ext$mapping_rule                  external static char(3)                  unaligned dcl 2-47
gfms_ext$options                       external static structure                level 1 dcl 2-31
gfms_ext$print_routines                external static structure                level 1 dcl 2-8
gfms_ext$tape_file                     external static structure                level 1 dcl 2-19
gfms_ext$umc_name                      external static char(12)                 unaligned dcl 2-49
gfms_ext$working_dir                   external static varying char(168)        dcl 2-43

NAME DECLARED BY EXPLICIT CONTEXT.
gfms_file_name_                 000053 constant        entry                    external dcl 6

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 28 29
hbound                                                 builtin function         ref 17 18 18 18 35

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       552         570     477         562
Length       770     477        16         163      52           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gfms_file_name_                     152 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gfms_file_name_          000100 k                           gfms_file_name_
                         000102 sp                          gfms_file_name_
                         000104 uc_fn                       gfms_file_name_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_cs            call_ext_out_desc   return              shorten_stack       ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      gfms_hash_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
gfms_ext$temp_segs




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      6 000047        17 000066        18 000072        25 000131        26 000134        28 000142        29 000162
     30 000165        35 000202        36 000234        37 000240        38 000251        39 000257        40 000261
     41 000272


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
