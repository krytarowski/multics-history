LISTING FOR  >spec>on>11/30/82>owl1200.ctl
COMPILED BY Multics LISP Compiler, Version hc9.2, June 5, 1981
ON 11/30/82  1529.9 mst Tue
IN BEHALF OF Holmstedt.SysMaint.a



;;; ***********************************************************
;;; *                                                         *
;;; * Copyright, (C) Honeywell Information Systems Inc., 1982 *
;;; *                                                         *
;;; * Copyright (c) 1981 by Massachusetts Institute of        *
;;; * Technology and Honeywell Information Systems, Inc.      *
;;; *                                                         *
;;; ***********************************************************
;;;
;;;
;;;	OWL 1200 control pachage
;;;	Richard Lamson, 05/13/81 from TELERAY 1061 control package
;;;				GMP, 08/14/78 from VT52 package
;;;

(eval-when (compile eval) (setsyntax '/# 'macro 'sharp-macro)

(defun sharp-macro ()
       (let ((ch (tyi)))
	  (or (= ch 57)			; #/ is the only # macro here
	      (error "Unknown # character: " (ItoC ch) 'fail-act))
	  (tyi)))				; return character number

)

(declare (special X Y screenheight screenlinelen ospeed %DCTL-escape-char))
(declare (special idel-lines-availablep idel-chars-availablep tty-type))


;;; Initialize terminal and terminal control package.
(defun DCTL-init ()
       (setq idel-lines-availablep t idel-chars-availablep t
             screenheight 24. screenlinelen 79.
             tty-type 'teleray1061
             X -777 Y -777
	   %DCTL-escape-char 33)
       (DCTL-position-cursor 0 0)
       (DCTL-clear-rest-of-screen))


;;; Move terminal's cursor to desired position.
(defun DCTL-position-cursor (x y)
       (cond ((and (= x X) (= y Y))
	    nil)
	   ((and (= x 0) (= y 0))
	    (Rtyo %DCTL-escape-char) (Rtyo #/H)
	    (setq X 0 Y 0))
	   (t				; must actually set X and Y
	       (cond ((= x (1- X)) (Rtyo 10))
		   ((= (1+ x) (1- X)) (Rtyo 10) (Rtyo 10))
		   ((= X (1- x)) (Rtyo %DCTL-escape-char) (Rtyo #/C))
		   (t (Rtyo %DCTL-escape-char) (Rtyo #/Y) (Rtyo y)))
	       (cond ((= y (1- Y)) (Rtyo %DCTL-escape-char) (Rtyo #/A))
		   ((= Y (1- y)) (Rtyo %DCTL-escape-char) (Rtyo #/B))
		   (t (Rtyo %DCTL-escape-char) (Rtyo #/X) (Rtyo y)))
	       (setq X x Y x))))


;;; Output string.
(defun DCTL-display-char-string (string)
       (setq X (+ X (stringlength string)))
       (Rprinc string))


;;; Clear to end of screen.
(defun DCTL-clear-rest-of-screen ()
       (Rtyo %DCTL-escape-char) (Rtyo #/J) (DCTL-pad 132.))


;;; Clear to end of line.
(defun DCTL-kill-line ()
       (Rtyo %DCTL-escape-char) (Rtyo #/K) (DCTL-pad 6.))


;;; Insert character string in line at current position.
(defun DCTL-insert-char-string (str)
       (let ((stringlength (stringlength str)))
	  (cond ((= 0 stringlength))
	        (t
		  (do i 1 (1+ i) (= i stringlength)
		      (Rtyo %DCTL-escape-char) (Rtyo #/N) (Rprinc (substr str i 1)))
		  (setq X (+ X stringlength))))))


;;; Delete characters from current position in line.
(defun DCTL-delete-chars (n)
       (do i 1 (1+ i) (> i n)
	 (Rtyo %DCTL-escape-char) (Rtyo #/O)))


;;; Insert n blank lines at current position.
(defun DCTL-insert-lines (n)
       (do i 1 (1+ i) (> i n)
	 (Rtyo %DCTL-escape-char) (Rtyo #/L))
       (DCTL-pad (* 6. n))
       (setq X 0))


;;; Delete n lines at current position.
(defun DCTL-delete-lines (n)
       (do i 1 (1+ i) (> i n)
	 (Rtyo %DCTL-escape-char) (Rtyo #/M))
       (DCTL-pad (* 6. n))
       (setq X 0))


;;; Send pad characters to wait specified number of milliseconds
(defun DCTL-pad (n)
       (do i (1+ (// (* n ospeed) 1000.)) (1- i) (= i 0)
           (Rtyo 0)))

			Functions Defined

Name			Offset		Offset		Name


DCTL-clear-rest-of-screen        276		   0		DCTL-init
DCTL-delete-chars                420		   42		DCTL-position-cursor
DCTL-delete-lines                512		   262		DCTL-display-char-string
DCTL-display-char-string         262		   276		DCTL-clear-rest-of-screen
DCTL-init                        0		   320		DCTL-kill-line
DCTL-insert-char-string          342		   342		DCTL-insert-char-string
DCTL-insert-lines                450		   420		DCTL-delete-chars
DCTL-kill-line                   320		   450		DCTL-insert-lines
DCTL-pad                         554		   512		DCTL-delete-lines
DCTL-position-cursor             42		   554		DCTL-pad





			Functions Referenced

DCTL-clear-rest-of-screen               Rprinc                                  stringlength
DCTL-pad                                Rtyo                                    substr
DCTL-position-cursor                                                            


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
