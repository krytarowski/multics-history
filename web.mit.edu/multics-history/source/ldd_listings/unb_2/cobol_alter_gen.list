	COMPILATION LISTING OF SEGMENT cobol_alter_gen
	Compiled by: Multics PL/I Compiler, Release 31b, of April 24, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 05/24/89  0939.9 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
       17*     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
       18*     MCR8060 cobol_alter_gen.pl1 Reformatted code to new Cobol standard.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 /*{*/
       23 
       24 /* format: style3 */
       25 cobol_alter_gen:
       26      proc (in_token_ptr);
       27 
       28 /*
       29*The procedure cobol_alter_gen generates the code necessary to imple-
       30*ment ALTER statements of the following format;
       31*
       32*  A_L_T_E_R_ procedure-name-1 T_O_ [P_R_O_C_E_E_D__T_O_] procedure-name-2
       33*
       34*ALTER statements in the source program which are not in this 
       35*format are modified by PD Syntax to conform.  For example, the 
       36*statement,
       37*
       38*  ALTER a1 TO b1, a2 TO b2,
       39*
       40*is changed into the two statements,
       41*
       42*  ALTER a1 TO b1  ALTER a2 TO b2.
       43*
       44*
       45*U__s_a_g_e:_
       46*
       47*     declare cobol_alter_gen(ptr);
       48*
       49*     call cobol_alter_gen(in_token_ptr);
       50*
       51*     						   */
       52 
  1     1 
  1     2 /*  BEGIN INCLUDE FILE ...   cobol_in_token.incl.pl1		  */
  1     3 
  1     4 /*  Last modified August 22, 1974 by AEG		  */
  1     5 
  1     6 
  1     7 declare in_token_ptr ptr;
  1     8 
  1     9 declare 1 in_token aligned based(in_token_ptr),
  1    10 	2 n fixed bin aligned,
  1    11 	2 code fixed bin aligned,
  1    12 	2 token_ptr(0 refer(in_token.n)) ptr aligned;
  1    13 
  1    14 
  1    15 /*  END INCLUDE FILE ...   cobol_in_token.incl.pl1		  */
  1    16 
       53 
       54 
       55 /*
       56*G__e_n_e_r_a_t_e_d_C__o_d_e:_
       57*
       58*Code Sequence 1, below, is generated if the COBOL segment con- 
       59*taining procedure-name-2 does not require initialization before
       60*control is transferred to procedure-name-2.  Code Sequence 2, be-
       61*low, is generated if initialization is required.  Initialization
       62*is not required if procedure-name-1 and procedure-name-2 are in
       63*the same COBOL segment, if procedure-name-2 is in a fixed COBOL
       64*segment, or if procedure-name-2 is in an independent COBOL seg-
       65*ment which contains no alterable GO's.  The term "alterable GO"
       66*is used here to designate a GO that is referenced by an ALTER
       67*statement.
       68*
       69*     Sequence 1
       70*
       71*  eax2   pn2_relp,ic
       72*  sxl2   target_a_pn1
       73*
       74*     Sequence 2
       75*
       76*  eax2   s(pn2)_init_relp,ic
       77*  sxl2   target_a_pn1
       78*  eax2   pn2_relp,ic
       79*  stx2   target_a_pn1
       80*
       81*where:
       82*
       83*pn2_relp	       is the offset, relative to the instruction in
       84*	       which it appears, of the first instruction of
       85*	       procedure-name-2.
       86*
       87*target_a_pn1     is a 36-bit variable, allocated in COBOL data on
       88*	       a word boundary and uniquely associated with
       89*	       procedure-name-1 (see alter_list), which con-
       90*	       tains transfer address data.
       91*
       92*s(pn2)_init_relp is the offset, relative to the instruction in
       93*	       which it appears, of the first instruction of a
       94*	       code sequence provided to initialize the alter-
       95*	       able GO's in the segment containing procedure-
       96*	       name-2.
       97*
       98*R__e_l_o_c_a_t_i_o_n_I__n_f_o_r_m_a_t_i_o_n:_
       99*
      100*All instructions directly generated by procedure cobol_alter_gen (as
      101*opposed to being generated by a utility called by cobol_alter_gen)
      102*are non-relocatable.
      103*
      104*D__a_t_a:_
      105*
      106*     % include cobol_;
      107*
      108*	Items in cobol_$incl.pl1 used (u) and/or set (s) by
      109*	cobol_alter_gen:
      110*
      111*	     cobol_ptr (u)
      112*	     alter_list_ptr (u)
      113*	     seg_init_list_ptr (u)
      114*	     text_wd_off (u)
      115*
      116*						   */
      117 
  2     1 
  2     2 /*  BEGIN INCLUDE FILE ...   cobol_alter_list.incl.pl1		   */
  2     3 
  2     4 /*  Last modified July 17, 1974 by AEG			   */
  2     5 
  2     6 
  2     7 declare 1 alter_list aligned based(  cobol_$alter_list_ptr),
  2     8 	2 n fixed bin aligned,
  2     9 	2 goto (0 refer(alter_list.n)) aligned,
  2    10 	  3 proc_num fixed bin aligned,
  2    11 	  3 priority fixed bin aligned,
  2    12 	  3 target_a_segno fixed bin aligned,
  2    13 	  3 target_a_offset fixed bin(24) aligned;
  2    14 
  2    15 
  2    16 /*
  2    17*alter_list_ptr is a pointer upon which the structure alter_list
  2    18*	     is based.  It is declared in mc_.incl.pl1.
  2    19*
  2    20*n	     is the number of alterable GO's in the source 
  2    21*	     program.
  2    22*
  2    23*goto	     is an array of alter_list.n structures containing 
  2    24*	     information about the alterable GO's.
  2    25*
  2    26*proc_num	     is the tag number associated with a COBOL procedure
  2    27*	     containing an alterable GO.
  2    28*
  2    29*priority	     is the COBOL segment number of the section con-
  2    30*	     taining COBOL procedure proc_num.
  2    31*
  2    32*target_a_segno and target_a_offset are the artificial MCOBOL
  2    33*	     segment number and character offset, respectively,
  2    34*	     of a 36-bit variable, allocated in the COBOL data
  2    35*	     segment on a word boundary, which contains trans-
  2    36*	     fer address information for the alterable GO con-
  2    37*	     tained in COBOL procedure proc_num.
  2    38*
  2    39*						   */
  2    40 /*  END INCLUDE FILE ...   cobol_alter_list.incl.pl1		   */
  2    41 
      118 
  3     1 
  3     2 /*  BEGIN INCLUDE FILE ...   cobol_seg_init_list.incl.pl1		   */
  3     3 
  3     4 /*  Last modified July 17, 1974 by AEG			   */
  3     5 
  3     6 
  3     7 declare 1 seg_init_list aligned based(  cobol_$seg_init_list_ptr),
  3     8 	2 n fixed bin aligned,
  3     9 	2 extra fixed bin aligned,
  3    10 	2 seg (0 refer(seg_init_list.n)) aligned,
  3    11 	  3 priority fixed bin aligned,
  3    12 	  3 int_tag_no fixed bin aligned,
  3    13 	  3 no_gos fixed bin aligned,
  3    14 	  3 next_init_no fixed bin aligned,
  3    15 	  3 init_ptr ptr aligned;
  3    16 
  3    17 
  3    18 /*
  3    19*seg_init_list_ptr is a pointer upon which the structure
  3    20*	        seg_init_list is based.  It is declared in
  3    21*	          cobol_.incl.pl1
  3    22*
  3    23*n	        is the number of COBOL segments containing
  3    24*	        alterable GO's.  All fixed segments are counted
  3    25*	        as one segment and assigned segment number 0.
  3    26*
  3    27*extra	        available for future use.
  3    28*
  3    29*seg	        is an array of seg_init_list.n structures which
  3    30*	        contain information about the segments contain-
  3    31*	        ing alterable GO's.  seg(1) always conatins
  3    32*	        information about fixed segments if there are
  3    33*	        any in the procedure.
  3    34*
  3    35*priority	        is the COBOL segment number associated with
  3    36*	        the "alterable" segment.
  3    37*
  3    38*int_tag_no        is an internal tag number associated with the
  3    39*	        first instruction of the code sequence generat-
  3    40*	        ed to initialize the alterable GO's in the seg-
  3    41*	        ment whose segment number is priority.  For
  3    42*	        priority = 0, int_tag_no = 0 since initializa-
  3    43*	        tion of alterable GO's in fixed segments is
  3    44*	        accomplished by   cobol_prologue_gen.
  3    45*
  3    46*no_gos	        is the number of alterable GO's in the segment
  3    47*	        whose segment number is priority.
  3    48*
  3    49*next_init_no      is the number of the next alterable GO in the
  3    50*	        segment whose segment number is priority for
  3    51*	        which initialization data entries are to be
  3    52*	        made in an area reserved for that purpose.  The
  3    53*	        base of this area is located by init_ptr.
  3    54*	        1<_next_init_no<_no_gos.
  3    55*
  3    56*init_ptr	        is a pointer to a block of 3 times no_gos words
  3    57*	        reserved for the storage of initialization data
  3    58*	        for the alterable GO's in the segment whose
  3    59*	        segment number is priority.
  3    60*
  3    61*
  3    62*						   */
  3    63 /*  END INCLUDE FILE ...   cobol_seg_init_list.incl.pl1		   */
  3    64 
      119 
  4     1 
  4     2 /* BEGIN INCLUDE FILE ... cobol_type18.incl.pl1 */
  4     3 /* Last modified on 11/19/76 by ORN */
  4     4 
  4     5 /*
  4     6*A type 18 procedure reference token is entered into the procedure division
  4     7*minpral file by the replacement phase to replace each type 8 user word
  4     8*reference to a procedure name.  A type 18 token is constructed by changing
  4     9*the type field of the appropriate type 7 procedure definition token from
  4    10*the name table to 18.
  4    11**/
  4    12 
  4    13 dcl proc_ref_ptr ptr;
  4    14 
  4    15 /* BEGIN DECLARATION OF TYPE18 (PROCEDURE REFERENCE) TOKEN */
  4    16 dcl 	1 proc_ref based (proc_ref_ptr),
  5     1 
  5     2 /* begin include file ... cobol_TYPE18.incl.pl1 */
  5     3 /* Last modified on 11/7/76 by ORN */
  5     4 
  5     5 		/* header */
  5     6 		2 size fixed bin,
  5     7 		2 line fixed bin,
  5     8 		2 column fixed bin,
  5     9 		2 type fixed bin,
  5    10 		/* body */
  5    11 		2 string_ptr ptr,
  5    12 		2 prev_rec ptr,
  5    13 		2 searched bit (1),
  5    14 		2 duplicate bit (1),
  5    15 		2 filler1 bit (1),
  5    16 		2 debug_ind bit (1),
  5    17 		2 section_name bit (1),
  5    18 		2 declarative_proc bit (1),
  5    19 		2 filler2 bit (1),
  5    20 		2 alterable bit (1),
  5    21 		2 priority char (2),
  5    22 		2 sort_range bit (1),
  5    23 		2 input_range bit (1),
  5    24 		2 output_range bit (1),
  5    25 		2 merge_range bit(1),
  5    26 		2 filler3 bit (5),
  5    27 		2 section_num fixed bin,
  5    28 		2 proc_num fixed bin,
  5    29 		2 def_line fixed bin,
  5    30 		2 name_size fixed bin,
  5    31 		2 name char (30);
  5    32 
  5    33 /* end include file ... cobol_TYPE18.incl.pl1 */
  5    34 
  4    17 
  4    18 /* END DECLARATION OF TYPE18 (PROCEDURE REFERENCE) TOKEN */
  4    19 
  4    20 /* END INCLUDE FILE ... cobol_type18.incl.pl1 */
  4    21 
      120 
      121 
      122 
      123 /*  Input structures for cobol_addr			   */
      124 
      125 declare	1 target		aligned static,
      126 	  2 type		fixed bin aligned init (1),
      127 	  2 operand_no	fixed bin aligned init (0),
      128 	  2 lock		fixed bin aligned init (0),
      129 	  2 segno		fixed bin aligned,
      130 	  2 char_offset	fixed bin (24) aligned,
      131 	  2 send_receive	fixed bin aligned init (0);
      132 
      133 /*
      134*type	   indicates type of addressing requested.  Type 1
      135*	   indicates basic; i.e., data to be addressed is
      136*	   specified by segno and char_offset.
      137*
      138*operand_no   not applicable to type 1.
      139*
      140*lock	   indicates lock requirements for registers used in
      141*	   addressing;
      142*	     0 - do not lock registers used.
      143*	     1 - lock registers used.
      144*
      145*segno	   is the compiler designation of the segment in which
      146*	   the data to be addressed is located.
      147*
      148*char_offset  is the character offset within segno of the data to
      149*	   be addressed.
      150*
      151*send_receive indicates whether the data being addressed is a
      152*	   sending or receiving field for the instruction whose
      153*	   address field is being set; 0 indicates sending.
      154*						   */
      155 
      156 
      157 /*  Input structure for cobol_register$load		   */
      158 
      159 declare	1 register_request	aligned static,
      160 	  2 requested_reg	fixed bin aligned init (12),
      161 	  2 assigned_reg	bit (4) aligned,
      162 	  2 lock		fixed bin aligned init (0),
      163 	  2 reg_set_now	fixed bin aligned,
      164 	  2 use_code	fixed bin aligned init (0),
      165 	  2 adjust_ptr_addr fixed bin aligned init (0),
      166 	  2 content_ptr	ptr aligned init (null),
      167 	  2 literal_content bit (36) aligned init ((36)"0"b);
      168 
      169 /*
      170*requested_reg   is a code designating the register requested;
      171*		0  - a- or q- or any index-register
      172*		1  - a-register
      173*		2  - q-register
      174*		3  - a- and q-register
      175*		4  - a- or q-register
      176*		5  - any index-register
      177*		1n - index-register n
      178*
      179*assigned_reg    is a code designating the register assigned.  It
      180*	      has no significance if a specific register is
      181*	      requested.
      182*
      183*lock	      indicates locking requirements; 0 requests that
      184*	      no change be made in register status.
      185*
      186*reg_set_now     not applicable for use_code = 0.
      187*
      188*use_code 	      specifies how the register is to be used by the
      189*	      requester; 0 signifies that such information is
      190*	      not meaningful for register optimization.
      191*
      192*adjust_ptr_addr inserted to make evident that since all pointers
      193*	      must be allocated on even word boundaries, the
      194*	      pl1 compiler will allocate structures containing
      195*	      pointers and all pointers therein on even word  
      196*	      boundaries leaving "gaps" where necessary.
      197*
      198*content_ptr     not applicable for use_code = 0.
      199*
      200*literal_content not applicable for use_code = 0.
      201*						   */
      202 
      203 dcl	inst_seq		(8) bit (18) unaligned static init ("000000000000000000"b, "110010010000000100"b,
      204 						/*  eax2   0,ic   */
      205 			"000000000000000000"b, "100100010001000000"b,
      206 						/*  sxl2   pr0|0  */
      207 			"000000000000000000"b, "110010010000000100"b,
      208 						/*  eax2   0,ic   */
      209 			"000000000000000000"b, "111100010001000000"b);
      210 						/*  stx2   pr0|0  */
      211 
      212 declare	pn1_num		fixed bin,		/* Procedure no (tag) of procedure-name-1. */
      213 	pn2_num		fixed bin,		/* procedure no (tag) of procedure-name-2. */
      214 	pn2_pri		fixed bin,		/* COBOL segment no of procedure-name-1.   */
      215 	index		fixed bin,		/* Do loop index.			   */
      216 	no_inst		fixed bin;		/* No of instructions generated.	   */
      217 
      218 /*
      219*P__r_o_c_e_d_u_r_e_s_C__a_l_l_e_d:_
      220*						   */
      221 
      222 dcl	cobol_addr	entry (ptr, ptr, ptr),
      223 	cobol_emit	entry (ptr, ptr, fixed bin),
      224 	cobol_make_tagref	entry (fixed bin, fixed bin, ptr),
      225 	cobol_register$load entry (ptr);
      226 
      227 /*
      228*B__u_i_l_t-__i_n_F__u_n_c_t_i_o_n_s_U__s_e_d:_
      229*						   */
      230 
      231 dcl	addr		builtin,
      232 	binary		builtin,
      233 	null		builtin,
      234 	unspec		builtin;
      235 
      236 /*}*/
      237 
  6     1 
  6     2 /* BEGIN INCLUDE FILE ... cobol_.incl.pl1 */
  6     3 /* last modified Feb 4, 1977 by ORN  */
  6     4 
  6     5 /* This file defines all external data used in the generator phase of Multics Cobol */
  6     6 
  6     7 /* POINTERS */
  6     8 dcl cobol_$text_base_ptr ptr  ext;
  6     9 dcl text_base_ptr ptr  defined (cobol_$text_base_ptr);
  6    10 dcl cobol_$con_end_ptr ptr  ext;
  6    11 dcl con_end_ptr ptr  defined (cobol_$con_end_ptr);
  6    12 dcl cobol_$def_base_ptr ptr  ext;
  6    13 dcl def_base_ptr ptr  defined (cobol_$def_base_ptr);
  6    14 dcl cobol_$link_base_ptr ptr  ext;
  6    15 dcl link_base_ptr ptr  defined (cobol_$link_base_ptr);
  6    16 dcl cobol_$sym_base_ptr ptr  ext;
  6    17 dcl sym_base_ptr ptr  defined (cobol_$sym_base_ptr);
  6    18 dcl cobol_$reloc_text_base_ptr ptr  ext;
  6    19 dcl reloc_text_base_ptr ptr  defined (cobol_$reloc_text_base_ptr);
  6    20 dcl cobol_$reloc_def_base_ptr ptr  ext;
  6    21 dcl reloc_def_base_ptr ptr  defined (cobol_$reloc_def_base_ptr);
  6    22 dcl cobol_$reloc_link_base_ptr ptr  ext;
  6    23 dcl reloc_link_base_ptr ptr  defined (cobol_$reloc_link_base_ptr);
  6    24 dcl cobol_$reloc_sym_base_ptr ptr  ext;
  6    25 dcl reloc_sym_base_ptr ptr  defined (cobol_$reloc_sym_base_ptr);
  6    26 dcl cobol_$reloc_work_base_ptr ptr  ext;
  6    27 dcl reloc_work_base_ptr ptr  defined (cobol_$reloc_work_base_ptr);
  6    28 dcl cobol_$pd_map_ptr ptr  ext;
  6    29 dcl pd_map_ptr ptr  defined (cobol_$pd_map_ptr);
  6    30 dcl cobol_$fixup_ptr ptr  ext;
  6    31 dcl fixup_ptr ptr  defined (cobol_$fixup_ptr);
  6    32 dcl cobol_$initval_base_ptr ptr  ext;
  6    33 dcl initval_base_ptr ptr  defined (cobol_$initval_base_ptr);
  6    34 dcl cobol_$initval_file_ptr ptr  ext;
  6    35 dcl initval_file_ptr ptr  defined (cobol_$initval_file_ptr);
  6    36 dcl cobol_$perform_list_ptr ptr  ext;
  6    37 dcl perform_list_ptr ptr  defined (cobol_$perform_list_ptr);
  6    38 dcl cobol_$alter_list_ptr ptr  ext;
  6    39 dcl alter_list_ptr ptr  defined (cobol_$alter_list_ptr);
  6    40 dcl cobol_$seg_init_list_ptr ptr  ext;
  6    41 dcl seg_init_list_ptr ptr  defined (cobol_$seg_init_list_ptr);
  6    42 dcl cobol_$temp_token_area_ptr ptr  ext;
  6    43 dcl temp_token_area_ptr ptr  defined (cobol_$temp_token_area_ptr);
  6    44 dcl cobol_$temp_token_ptr ptr  ext;
  6    45 dcl temp_token_ptr ptr  defined (cobol_$temp_token_ptr);
  6    46 dcl cobol_$token_block1_ptr ptr  ext;
  6    47 dcl token_block1_ptr ptr  defined (cobol_$token_block1_ptr);
  6    48 dcl cobol_$token_block2_ptr ptr  ext;
  6    49 dcl token_block2_ptr ptr  defined (cobol_$token_block2_ptr);
  6    50 dcl cobol_$minpral5_ptr ptr  ext;
  6    51 dcl minpral5_ptr ptr  defined (cobol_$minpral5_ptr);
  6    52 dcl cobol_$tag_table_ptr ptr  ext;
  6    53 dcl tag_table_ptr ptr  defined (cobol_$tag_table_ptr);
  6    54 dcl cobol_$map_data_ptr ptr  ext;
  6    55 dcl map_data_ptr ptr  defined (cobol_$map_data_ptr);
  6    56 dcl cobol_$ptr_status_ptr ptr  ext;
  6    57 dcl ptr_status_ptr ptr  defined (cobol_$ptr_status_ptr);
  6    58 dcl cobol_$reg_status_ptr ptr  ext;
  6    59 dcl reg_status_ptr ptr  defined (cobol_$reg_status_ptr);
  6    60 dcl cobol_$misc_base_ptr ptr ext;
  6    61 dcl misc_base_ptr ptr defined (cobol_$misc_base_ptr);
  6    62 dcl cobol_$misc_end_ptr ptr ext;
  6    63 dcl misc_end_ptr ptr defined (cobol_$misc_end_ptr);
  6    64 dcl cobol_$list_ptr ptr ext;
  6    65 dcl list_ptr ptr defined (cobol_$list_ptr);
  6    66 dcl cobol_$allo1_ptr ptr ext;
  6    67 dcl allo1_ptr ptr defined (cobol_$allo1_ptr);
  6    68 dcl cobol_$eln_ptr ptr ext;
  6    69 dcl eln_ptr ptr defined (cobol_$eln_ptr);
  6    70 dcl cobol_$diag_ptr ptr ext;
  6    71 dcl diag_ptr ptr defined (cobol_$diag_ptr);
  6    72 dcl cobol_$xref_token_ptr ptr ext;
  6    73 dcl xref_token_ptr ptr defined (cobol_$xref_token_ptr);
  6    74 dcl cobol_$xref_chain_ptr ptr ext;
  6    75 dcl xref_chain_ptr ptr defined (cobol_$xref_chain_ptr);
  6    76 dcl cobol_$statement_info_ptr ptr ext;
  6    77 dcl statement_info_ptr ptr defined (cobol_$statement_info_ptr);
  6    78 dcl cobol_$reswd_ptr ptr ext;
  6    79 dcl reswd_ptr ptr defined (cobol_$reswd_ptr);
  6    80 dcl cobol_$op_con_ptr ptr ext;
  6    81 dcl op_con_ptr ptr defined (cobol_$op_con_ptr);
  6    82 dcl cobol_$ntbuf_ptr ptr ext;
  6    83 dcl ntbuf_ptr ptr defined (cobol_$ntbuf_ptr);
  6    84 dcl cobol_$main_pcs_ptr ptr ext;
  6    85 dcl main_pcs_ptr ptr defined (cobol_$main_pcs_ptr);
  6    86 dcl cobol_$include_info_ptr ptr ext;
  6    87 dcl include_info_ptr ptr defined (cobol_$include_info_ptr);
  6    88 
  6    89 /* FIXED BIN */
  6    90 dcl cobol_$text_wd_off fixed bin  ext;
  6    91 dcl text_wd_off fixed bin  defined (cobol_$text_wd_off);
  6    92 dcl cobol_$con_wd_off fixed bin  ext;
  6    93 dcl con_wd_off fixed bin  defined (cobol_$con_wd_off);
  6    94 dcl cobol_$def_wd_off fixed bin  ext;
  6    95 dcl def_wd_off fixed bin  defined (cobol_$def_wd_off);
  6    96 dcl cobol_$def_max fixed bin  ext;
  6    97 dcl def_max fixed bin  defined (cobol_$def_max);
  6    98 dcl cobol_$link_wd_off fixed bin  ext;
  6    99 dcl link_wd_off fixed bin  defined (cobol_$link_wd_off);
  6   100 dcl cobol_$link_max fixed bin  ext;
  6   101 dcl link_max fixed bin  defined (cobol_$link_max);
  6   102 dcl cobol_$sym_wd_off fixed bin  ext;
  6   103 dcl sym_wd_off fixed bin  defined (cobol_$sym_wd_off);
  6   104 dcl cobol_$sym_max fixed bin  ext;
  6   105 dcl sym_max fixed bin  defined (cobol_$sym_max);
  6   106 dcl cobol_$reloc_text_max fixed bin(24)  ext;
  6   107 dcl reloc_text_max fixed bin(24)  defined (cobol_$reloc_text_max);
  6   108 dcl cobol_$reloc_def_max fixed bin(24)  ext;
  6   109 dcl reloc_def_max fixed bin(24)  defined (cobol_$reloc_def_max);
  6   110 dcl cobol_$reloc_link_max fixed bin(24)  ext;
  6   111 dcl reloc_link_max fixed bin(24)  defined (cobol_$reloc_link_max);
  6   112 dcl cobol_$reloc_sym_max fixed bin(24)  ext;
  6   113 dcl reloc_sym_max fixed bin(24)  defined (cobol_$reloc_sym_max);
  6   114 dcl cobol_$reloc_work_max fixed bin(24)  ext;
  6   115 dcl reloc_work_max fixed bin(24)  defined (cobol_$reloc_work_max);
  6   116 dcl cobol_$pd_map_index fixed bin  ext;
  6   117 dcl pd_map_index fixed bin  defined (cobol_$pd_map_index);
  6   118 dcl cobol_$cobol_data_wd_off fixed bin  ext;
  6   119 dcl cobol_data_wd_off fixed bin  defined (cobol_$cobol_data_wd_off);
  6   120 dcl cobol_$stack_off fixed bin  ext;
  6   121 dcl stack_off fixed bin  defined (cobol_$stack_off);
  6   122 dcl cobol_$max_stack_off fixed bin  ext;
  6   123 dcl max_stack_off fixed bin  defined (cobol_$max_stack_off);
  6   124 dcl cobol_$init_stack_off fixed bin  ext;
  6   125 dcl init_stack_off fixed bin  defined (cobol_$init_stack_off);
  6   126 dcl cobol_$pd_map_sw fixed bin  ext;
  6   127 dcl pd_map_sw fixed bin  defined (cobol_$pd_map_sw);
  6   128 dcl cobol_$next_tag fixed bin  ext;
  6   129 dcl next_tag fixed bin  defined (cobol_$next_tag);
  6   130 dcl cobol_$data_init_flag fixed bin  ext;
  6   131 dcl data_init_flag fixed bin  defined (cobol_$data_init_flag);
  6   132 dcl cobol_$seg_init_flag fixed bin  ext;
  6   133 dcl seg_init_flag fixed bin  defined (cobol_$seg_init_flag);
  6   134 dcl cobol_$alter_flag fixed bin  ext;
  6   135 dcl alter_flag fixed bin  defined (cobol_$alter_flag);
  6   136 dcl cobol_$sect_eop_flag fixed bin  ext;
  6   137 dcl sect_eop_flag fixed bin  defined (cobol_$sect_eop_flag);
  6   138 dcl cobol_$para_eop_flag fixed bin  ext;
  6   139 dcl para_eop_flag fixed bin  defined (cobol_$para_eop_flag);
  6   140 dcl cobol_$priority_no fixed bin  ext;
  6   141 dcl priority_no fixed bin  defined (cobol_$priority_no);
  6   142 dcl cobol_$compile_count fixed bin ext;
  6   143 dcl compile_count fixed bin defined (cobol_$compile_count);
  6   144 dcl cobol_$ptr_assumption_ind fixed bin ext;
  6   145 dcl ptr_assumption_ind fixed bin defined (cobol_$ptr_assumption_ind);
  6   146 dcl cobol_$reg_assumption_ind fixed bin ext;
  6   147 dcl reg_assumption_ind fixed bin defined (cobol_$reg_assumption_ind);
  6   148 dcl cobol_$perform_para_index fixed bin ext;
  6   149 dcl perform_para_index fixed bin defined (cobol_$perform_para_index);
  6   150 dcl cobol_$perform_sect_index fixed bin ext;
  6   151 dcl perform_sect_index fixed bin defined (cobol_$perform_sect_index);
  6   152 dcl cobol_$alter_index fixed bin ext;
  6   153 dcl alter_index fixed bin defined (cobol_$alter_index);
  6   154 dcl cobol_$list_off fixed bin ext;
  6   155 dcl list_off fixed bin defined (cobol_$list_off);
  6   156 dcl cobol_$constant_offset fixed bin ext;
  6   157 dcl constant_offset fixed bin defined (cobol_$constant_offset);
  6   158 dcl cobol_$misc_max fixed bin ext;
  6   159 dcl misc_max fixed bin defined (cobol_$misc_max);
  6   160 dcl cobol_$pd_map_max fixed bin ext;
  6   161 dcl pd_map_max fixed bin defined (cobol_$pd_map_max);
  6   162 dcl cobol_$map_data_max fixed bin ext;
  6   163 dcl map_data_max fixed bin defined (cobol_$map_data_max);
  6   164 dcl cobol_$fixup_max fixed bin ext;
  6   165 dcl fixup_max fixed bin defined (cobol_$fixup_max);
  6   166 dcl cobol_$tag_table_max fixed bin ext;
  6   167 dcl tag_table_max fixed bin defined (cobol_$tag_table_max);
  6   168 dcl cobol_$temp_token_max fixed bin ext;
  6   169 dcl temp_token_max fixed bin defined (cobol_$temp_token_max);
  6   170 dcl cobol_$allo1_max fixed bin ext;
  6   171 dcl allo1_max fixed bin defined (cobol_$allo1_max);
  6   172 dcl cobol_$eln_max fixed bin ext;
  6   173 dcl eln_max fixed bin defined (cobol_$eln_max);
  6   174 dcl cobol_$debug_enable fixed bin ext;
  6   175 dcl debug_enable fixed bin defined (cobol_$debug_enable);
  6   176 dcl cobol_$non_source_offset fixed bin ext;
  6   177 dcl non_source_offset fixed bin defined (cobol_$non_source_offset);
  6   178 dcl cobol_$initval_flag fixed bin ext;
  6   179 dcl initval_flag fixed bin defined (cobol_$initval_flag);
  6   180 dcl cobol_$date_compiled_sw fixed bin ext;
  6   181 dcl date_compiled_sw fixed bin defined (cobol_$date_compiled_sw);
  6   182 dcl cobol_$include_cnt fixed bin ext;
  6   183 dcl include_cnt fixed bin defined (cobol_$include_cnt);
  6   184 dcl cobol_$fs_charcnt fixed bin ext;
  6   185 dcl fs_charcnt fixed bin defined (cobol_$fs_charcnt);
  6   186 dcl cobol_$ws_charcnt fixed bin ext;
  6   187 dcl ws_charcnt fixed bin defined (cobol_$ws_charcnt);
  6   188 dcl cobol_$coms_charcnt fixed bin ext;
  6   189 dcl coms_charcnt fixed bin defined (cobol_$coms_charcnt);
  6   190 dcl cobol_$ls_charcnt fixed bin ext;
  6   191 dcl ls_charcnt fixed bin defined (cobol_$ls_charcnt);
  6   192 dcl cobol_$cons_charcnt fixed bin ext;
  6   193 dcl cons_charcnt fixed bin defined (cobol_$cons_charcnt);
  6   194 dcl cobol_$value_cnt fixed bin ext;
  6   195 dcl value_cnt fixed bin defined (cobol_$value_cnt);
  6   196 dcl cobol_$cd_cnt fixed bin ext;
  6   197 dcl cd_cnt fixed bin defined (cobol_$cd_cnt);
  6   198 dcl cobol_$fs_wdoff fixed bin ext;
  6   199 dcl fs_wdoff fixed bin defined (cobol_$fs_wdoff);
  6   200 dcl cobol_$ws_wdoff fixed bin ext;
  6   201 dcl ws_wdoff fixed bin defined (cobol_$ws_wdoff);
  6   202 dcl cobol_$coms_wdoff fixed bin ext;
  6   203 dcl coms_wdoff fixed bin defined (cobol_$coms_wdoff);
  6   204 
  6   205 /* CHARACTER */
  6   206 dcl cobol_$scratch_dir char (168)   aligned ext;
  6   207 dcl scratch_dir char (168)   aligned defined (cobol_$scratch_dir);			/* -42- */
  6   208 dcl cobol_$obj_seg_name char (32)   aligned ext;
  6   209 dcl obj_seg_name char (32)   aligned defined (cobol_$obj_seg_name);		/* -8- */
  6   210 
  6   211 /* BIT */
  6   212 dcl cobol_$xref_bypass bit(1) aligned ext;
  6   213 dcl xref_bypass bit(1) aligned defined (cobol_$xref_bypass);			/* -1- */
  6   214 dcl cobol_$same_sort_merge_proc bit(1) aligned ext;
  6   215 dcl same_sort_merge_proc bit(1) aligned defined (cobol_$same_sort_merge_proc);		/* -1- */
  6   216 
  6   217 
  6   218 /* END INCLUDE FILE ... cobol_incl.pl1*/
  6   219 
  6   220 
      238 
      239 
      240 
      241 start:
      242 	pn1_num = in_token.token_ptr (2) -> proc_ref.proc_num;
      243 	pn2_num = in_token.token_ptr (3) -> proc_ref.proc_num;
      244 	pn2_pri = binary (unspec (in_token.token_ptr (3) -> proc_ref.priority), 17);
      245 
      246 	do index = 1 to alter_list.n;
      247 	     if pn1_num = alter_list.goto.proc_num (index)
      248 	     then do;
      249 		     target.segno = alter_list.goto.target_a_segno (index);
      250 		     target.char_offset = alter_list.goto.target_a_offset (index);
      251 		     goto found;
      252 		end;
      253 
      254 	end;
      255 
      256 found:
      257 	call cobol_addr (addr (target), addr (inst_seq (3)), null);
      258 	call cobol_register$load (addr (register_request));
      259 	if pn2_pri ^= binary (unspec (in_token.token_ptr (2) -> proc_ref.priority), 17)
      260 	then if pn2_pri > 49
      261 	     then do index = 1 to seg_init_list.n;
      262 		     if seg_init_list.seg.priority (index) = pn2_pri
      263 		     then do;
      264 			     inst_seq (7) = inst_seq (3);
      265 			     call cobol_make_tagref (seg_init_list.seg.int_tag_no (index), cobol_$text_wd_off,
      266 				addr (inst_seq));
      267 			     no_inst = 4;
      268 			     goto emit;
      269 			end;
      270 
      271 		end;
      272 
      273 	no_inst = 2;
      274 
      275 emit:
      276 	call cobol_emit (addr (inst_seq), null, no_inst);
      277 	call cobol_make_tagref (pn2_num, cobol_$text_wd_off - 2, null);
      278 	return;
      279 
      280      end cobol_alter_gen;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/24/89  0830.4  cobol_alter_gen.pl1               >spec>install>MR12.3-1048>cobol_alter_gen.pl1
53           1    11/11/82  1712.7  cobol_in_token.incl.pl1           >ldd>include>cobol_in_token.incl.pl1
118          2    03/27/82  0439.6  cobol_alter_list.incl.pl1         >ldd>include>cobol_alter_list.incl.pl1
119          3    03/27/82  0439.8  cobol_seg_init_list.incl.pl1      >ldd>include>cobol_seg_init_list.incl.pl1
120          4    11/11/82  1712.8  cobol_type18.incl.pl1             >ldd>include>cobol_type18.incl.pl1
4-17         5    03/27/82  0439.6  cobol_TYPE18.incl.pl1             >ldd>include>cobol_TYPE18.incl.pl1
238          6    11/11/82  1712.7  cobol_.incl.pl1                   >ldd>include>cobol_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 231 ref 256 256 256 256 258 258 265 265 275 275
alter_list                             based           structure                level 1 dcl 2-7
binary                                                 builtin function         dcl 231 ref 244 259
char_offset               4     000010 internal static fixed bin(24,0)          level 2 dcl 125 set ref 250*
cobol_$alter_list_ptr           000044 external static pointer                  dcl 6-38 ref 246 247 249 250
cobol_$seg_init_list_ptr        000046 external static pointer                  dcl 6-40 ref 259 262 265
cobol_$text_wd_off              000050 external static fixed bin(17,0)          dcl 6-90 set ref 265* 277
cobol_addr                      000034 constant        entry                    external dcl 222 ref 256
cobol_emit                      000036 constant        entry                    external dcl 222 ref 275
cobol_make_tagref               000040 constant        entry                    external dcl 222 ref 265 277
cobol_register$load             000042 constant        entry                    external dcl 222 ref 258
goto                      1            based           structure                array level 2 dcl 2-7
in_token                               based           structure                level 1 dcl 1-9
in_token_ptr                           parameter       pointer                  dcl 1-7 ref 25 241 243 244 259
index                           000103 automatic       fixed bin(17,0)          dcl 212 set ref 246* 247 249 250* 259* 262 265*
inst_seq                        000027 internal static bit(18)                  initial array packed unaligned dcl 203 set ref 256
                                                                                  256 264* 264 265 265 275 275
int_tag_no                3            based           fixed bin(17,0)          array level 3 dcl 3-7 set ref 265*
n                                      based           fixed bin(17,0)          level 2 in structure "alter_list" dcl 2-7
                                                                                  in procedure "cobol_alter_gen" ref 246
n                                      based           fixed bin(17,0)          level 2 in structure "seg_init_list" dcl 3-7
                                                                                  in procedure "cobol_alter_gen" ref 259
no_inst                         000104 automatic       fixed bin(17,0)          dcl 212 set ref 267* 273* 275*
null                                                   builtin function         dcl 231 ref 256 256 275 275 277 277
pn1_num                         000100 automatic       fixed bin(17,0)          dcl 212 set ref 241* 247
pn2_num                         000101 automatic       fixed bin(17,0)          dcl 212 set ref 243* 277*
pn2_pri                         000102 automatic       fixed bin(17,0)          dcl 212 set ref 244* 259 259 262
priority                 10(09)        based           char(2)                  level 2 in structure "proc_ref" packed packed
                                                                                  unaligned dcl 4-16 in procedure "cobol_alter_gen"
                                                                                  ref 244 259
priority                  2            based           fixed bin(17,0)          array level 3 in structure "seg_init_list" dcl 3-7
                                                                                  in procedure "cobol_alter_gen" ref 262
proc_num                 12            based           fixed bin(17,0)          level 2 in structure "proc_ref" dcl 4-16
                                                                                  in procedure "cobol_alter_gen" ref 241 243
proc_num                  1            based           fixed bin(17,0)          array level 3 in structure "alter_list" dcl 2-7
                                                                                  in procedure "cobol_alter_gen" ref 247
proc_ref                               based           structure                level 1 unaligned dcl 4-16
register_request                000016 internal static structure                level 1 dcl 159 set ref 258 258
seg                       2            based           structure                array level 2 dcl 3-7
seg_init_list                          based           structure                level 1 dcl 3-7
segno                     3     000010 internal static fixed bin(17,0)          level 2 dcl 125 set ref 249*
target                          000010 internal static structure                level 1 dcl 125 set ref 256 256
target_a_offset           4            based           fixed bin(24,0)          array level 3 dcl 2-7 ref 250
target_a_segno            3            based           fixed bin(17,0)          array level 3 dcl 2-7 ref 249
token_ptr                 2            based           pointer                  array level 2 dcl 1-9 ref 241 243 244 259
unspec                                                 builtin function         dcl 231 ref 244 259

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
allo1_max                              defined         fixed bin(17,0)          dcl 6-171
allo1_ptr                              defined         pointer                  dcl 6-67
alter_flag                             defined         fixed bin(17,0)          dcl 6-135
alter_index                            defined         fixed bin(17,0)          dcl 6-153
alter_list_ptr                         defined         pointer                  dcl 6-39
cd_cnt                                 defined         fixed bin(17,0)          dcl 6-197
cobol_$allo1_max                       external static fixed bin(17,0)          dcl 6-170
cobol_$allo1_ptr                       external static pointer                  dcl 6-66
cobol_$alter_flag                      external static fixed bin(17,0)          dcl 6-134
cobol_$alter_index                     external static fixed bin(17,0)          dcl 6-152
cobol_$cd_cnt                          external static fixed bin(17,0)          dcl 6-196
cobol_$cobol_data_wd_off               external static fixed bin(17,0)          dcl 6-118
cobol_$compile_count                   external static fixed bin(17,0)          dcl 6-142
cobol_$coms_charcnt                    external static fixed bin(17,0)          dcl 6-188
cobol_$coms_wdoff                      external static fixed bin(17,0)          dcl 6-202
cobol_$con_end_ptr                     external static pointer                  dcl 6-10
cobol_$con_wd_off                      external static fixed bin(17,0)          dcl 6-92
cobol_$cons_charcnt                    external static fixed bin(17,0)          dcl 6-192
cobol_$constant_offset                 external static fixed bin(17,0)          dcl 6-156
cobol_$data_init_flag                  external static fixed bin(17,0)          dcl 6-130
cobol_$date_compiled_sw                external static fixed bin(17,0)          dcl 6-180
cobol_$debug_enable                    external static fixed bin(17,0)          dcl 6-174
cobol_$def_base_ptr                    external static pointer                  dcl 6-12
cobol_$def_max                         external static fixed bin(17,0)          dcl 6-96
cobol_$def_wd_off                      external static fixed bin(17,0)          dcl 6-94
cobol_$diag_ptr                        external static pointer                  dcl 6-70
cobol_$eln_max                         external static fixed bin(17,0)          dcl 6-172
cobol_$eln_ptr                         external static pointer                  dcl 6-68
cobol_$fixup_max                       external static fixed bin(17,0)          dcl 6-164
cobol_$fixup_ptr                       external static pointer                  dcl 6-30
cobol_$fs_charcnt                      external static fixed bin(17,0)          dcl 6-184
cobol_$fs_wdoff                        external static fixed bin(17,0)          dcl 6-198
cobol_$include_cnt                     external static fixed bin(17,0)          dcl 6-182
cobol_$include_info_ptr                external static pointer                  dcl 6-86
cobol_$init_stack_off                  external static fixed bin(17,0)          dcl 6-124
cobol_$initval_base_ptr                external static pointer                  dcl 6-32
cobol_$initval_file_ptr                external static pointer                  dcl 6-34
cobol_$initval_flag                    external static fixed bin(17,0)          dcl 6-178
cobol_$link_base_ptr                   external static pointer                  dcl 6-14
cobol_$link_max                        external static fixed bin(17,0)          dcl 6-100
cobol_$link_wd_off                     external static fixed bin(17,0)          dcl 6-98
cobol_$list_off                        external static fixed bin(17,0)          dcl 6-154
cobol_$list_ptr                        external static pointer                  dcl 6-64
cobol_$ls_charcnt                      external static fixed bin(17,0)          dcl 6-190
cobol_$main_pcs_ptr                    external static pointer                  dcl 6-84
cobol_$map_data_max                    external static fixed bin(17,0)          dcl 6-162
cobol_$map_data_ptr                    external static pointer                  dcl 6-54
cobol_$max_stack_off                   external static fixed bin(17,0)          dcl 6-122
cobol_$minpral5_ptr                    external static pointer                  dcl 6-50
cobol_$misc_base_ptr                   external static pointer                  dcl 6-60
cobol_$misc_end_ptr                    external static pointer                  dcl 6-62
cobol_$misc_max                        external static fixed bin(17,0)          dcl 6-158
cobol_$next_tag                        external static fixed bin(17,0)          dcl 6-128
cobol_$non_source_offset               external static fixed bin(17,0)          dcl 6-176
cobol_$ntbuf_ptr                       external static pointer                  dcl 6-82
cobol_$obj_seg_name                    external static char(32)                 dcl 6-208
cobol_$op_con_ptr                      external static pointer                  dcl 6-80
cobol_$para_eop_flag                   external static fixed bin(17,0)          dcl 6-138
cobol_$pd_map_index                    external static fixed bin(17,0)          dcl 6-116
cobol_$pd_map_max                      external static fixed bin(17,0)          dcl 6-160
cobol_$pd_map_ptr                      external static pointer                  dcl 6-28
cobol_$pd_map_sw                       external static fixed bin(17,0)          dcl 6-126
cobol_$perform_list_ptr                external static pointer                  dcl 6-36
cobol_$perform_para_index              external static fixed bin(17,0)          dcl 6-148
cobol_$perform_sect_index              external static fixed bin(17,0)          dcl 6-150
cobol_$priority_no                     external static fixed bin(17,0)          dcl 6-140
cobol_$ptr_assumption_ind              external static fixed bin(17,0)          dcl 6-144
cobol_$ptr_status_ptr                  external static pointer                  dcl 6-56
cobol_$reg_assumption_ind              external static fixed bin(17,0)          dcl 6-146
cobol_$reg_status_ptr                  external static pointer                  dcl 6-58
cobol_$reloc_def_base_ptr              external static pointer                  dcl 6-20
cobol_$reloc_def_max                   external static fixed bin(24,0)          dcl 6-108
cobol_$reloc_link_base_ptr             external static pointer                  dcl 6-22
cobol_$reloc_link_max                  external static fixed bin(24,0)          dcl 6-110
cobol_$reloc_sym_base_ptr              external static pointer                  dcl 6-24
cobol_$reloc_sym_max                   external static fixed bin(24,0)          dcl 6-112
cobol_$reloc_text_base_ptr             external static pointer                  dcl 6-18
cobol_$reloc_text_max                  external static fixed bin(24,0)          dcl 6-106
cobol_$reloc_work_base_ptr             external static pointer                  dcl 6-26
cobol_$reloc_work_max                  external static fixed bin(24,0)          dcl 6-114
cobol_$reswd_ptr                       external static pointer                  dcl 6-78
cobol_$same_sort_merge_proc            external static bit(1)                   dcl 6-214
cobol_$scratch_dir                     external static char(168)                dcl 6-206
cobol_$sect_eop_flag                   external static fixed bin(17,0)          dcl 6-136
cobol_$seg_init_flag                   external static fixed bin(17,0)          dcl 6-132
cobol_$stack_off                       external static fixed bin(17,0)          dcl 6-120
cobol_$statement_info_ptr              external static pointer                  dcl 6-76
cobol_$sym_base_ptr                    external static pointer                  dcl 6-16
cobol_$sym_max                         external static fixed bin(17,0)          dcl 6-104
cobol_$sym_wd_off                      external static fixed bin(17,0)          dcl 6-102
cobol_$tag_table_max                   external static fixed bin(17,0)          dcl 6-166
cobol_$tag_table_ptr                   external static pointer                  dcl 6-52
cobol_$temp_token_area_ptr             external static pointer                  dcl 6-42
cobol_$temp_token_max                  external static fixed bin(17,0)          dcl 6-168
cobol_$temp_token_ptr                  external static pointer                  dcl 6-44
cobol_$text_base_ptr                   external static pointer                  dcl 6-8
cobol_$token_block1_ptr                external static pointer                  dcl 6-46
cobol_$token_block2_ptr                external static pointer                  dcl 6-48
cobol_$value_cnt                       external static fixed bin(17,0)          dcl 6-194
cobol_$ws_charcnt                      external static fixed bin(17,0)          dcl 6-186
cobol_$ws_wdoff                        external static fixed bin(17,0)          dcl 6-200
cobol_$xref_bypass                     external static bit(1)                   dcl 6-212
cobol_$xref_chain_ptr                  external static pointer                  dcl 6-74
cobol_$xref_token_ptr                  external static pointer                  dcl 6-72
cobol_data_wd_off                      defined         fixed bin(17,0)          dcl 6-119
compile_count                          defined         fixed bin(17,0)          dcl 6-143
coms_charcnt                           defined         fixed bin(17,0)          dcl 6-189
coms_wdoff                             defined         fixed bin(17,0)          dcl 6-203
con_end_ptr                            defined         pointer                  dcl 6-11
con_wd_off                             defined         fixed bin(17,0)          dcl 6-93
cons_charcnt                           defined         fixed bin(17,0)          dcl 6-193
constant_offset                        defined         fixed bin(17,0)          dcl 6-157
data_init_flag                         defined         fixed bin(17,0)          dcl 6-131
date_compiled_sw                       defined         fixed bin(17,0)          dcl 6-181
debug_enable                           defined         fixed bin(17,0)          dcl 6-175
def_base_ptr                           defined         pointer                  dcl 6-13
def_max                                defined         fixed bin(17,0)          dcl 6-97
def_wd_off                             defined         fixed bin(17,0)          dcl 6-95
diag_ptr                               defined         pointer                  dcl 6-71
eln_max                                defined         fixed bin(17,0)          dcl 6-173
eln_ptr                                defined         pointer                  dcl 6-69
fixup_max                              defined         fixed bin(17,0)          dcl 6-165
fixup_ptr                              defined         pointer                  dcl 6-31
fs_charcnt                             defined         fixed bin(17,0)          dcl 6-185
fs_wdoff                               defined         fixed bin(17,0)          dcl 6-199
include_cnt                            defined         fixed bin(17,0)          dcl 6-183
include_info_ptr                       defined         pointer                  dcl 6-87
init_stack_off                         defined         fixed bin(17,0)          dcl 6-125
initval_base_ptr                       defined         pointer                  dcl 6-33
initval_file_ptr                       defined         pointer                  dcl 6-35
initval_flag                           defined         fixed bin(17,0)          dcl 6-179
link_base_ptr                          defined         pointer                  dcl 6-15
link_max                               defined         fixed bin(17,0)          dcl 6-101
link_wd_off                            defined         fixed bin(17,0)          dcl 6-99
list_off                               defined         fixed bin(17,0)          dcl 6-155
list_ptr                               defined         pointer                  dcl 6-65
ls_charcnt                             defined         fixed bin(17,0)          dcl 6-191
main_pcs_ptr                           defined         pointer                  dcl 6-85
map_data_max                           defined         fixed bin(17,0)          dcl 6-163
map_data_ptr                           defined         pointer                  dcl 6-55
max_stack_off                          defined         fixed bin(17,0)          dcl 6-123
minpral5_ptr                           defined         pointer                  dcl 6-51
misc_base_ptr                          defined         pointer                  dcl 6-61
misc_end_ptr                           defined         pointer                  dcl 6-63
misc_max                               defined         fixed bin(17,0)          dcl 6-159
next_tag                               defined         fixed bin(17,0)          dcl 6-129
non_source_offset                      defined         fixed bin(17,0)          dcl 6-177
ntbuf_ptr                              defined         pointer                  dcl 6-83
obj_seg_name                           defined         char(32)                 dcl 6-209
op_con_ptr                             defined         pointer                  dcl 6-81
para_eop_flag                          defined         fixed bin(17,0)          dcl 6-139
pd_map_index                           defined         fixed bin(17,0)          dcl 6-117
pd_map_max                             defined         fixed bin(17,0)          dcl 6-161
pd_map_ptr                             defined         pointer                  dcl 6-29
pd_map_sw                              defined         fixed bin(17,0)          dcl 6-127
perform_list_ptr                       defined         pointer                  dcl 6-37
perform_para_index                     defined         fixed bin(17,0)          dcl 6-149
perform_sect_index                     defined         fixed bin(17,0)          dcl 6-151
priority_no                            defined         fixed bin(17,0)          dcl 6-141
proc_ref_ptr                           automatic       pointer                  dcl 4-13
ptr_assumption_ind                     defined         fixed bin(17,0)          dcl 6-145
ptr_status_ptr                         defined         pointer                  dcl 6-57
reg_assumption_ind                     defined         fixed bin(17,0)          dcl 6-147
reg_status_ptr                         defined         pointer                  dcl 6-59
reloc_def_base_ptr                     defined         pointer                  dcl 6-21
reloc_def_max                          defined         fixed bin(24,0)          dcl 6-109
reloc_link_base_ptr                    defined         pointer                  dcl 6-23
reloc_link_max                         defined         fixed bin(24,0)          dcl 6-111
reloc_sym_base_ptr                     defined         pointer                  dcl 6-25
reloc_sym_max                          defined         fixed bin(24,0)          dcl 6-113
reloc_text_base_ptr                    defined         pointer                  dcl 6-19
reloc_text_max                         defined         fixed bin(24,0)          dcl 6-107
reloc_work_base_ptr                    defined         pointer                  dcl 6-27
reloc_work_max                         defined         fixed bin(24,0)          dcl 6-115
reswd_ptr                              defined         pointer                  dcl 6-79
same_sort_merge_proc                   defined         bit(1)                   dcl 6-215
scratch_dir                            defined         char(168)                dcl 6-207
sect_eop_flag                          defined         fixed bin(17,0)          dcl 6-137
seg_init_flag                          defined         fixed bin(17,0)          dcl 6-133
seg_init_list_ptr                      defined         pointer                  dcl 6-41
stack_off                              defined         fixed bin(17,0)          dcl 6-121
statement_info_ptr                     defined         pointer                  dcl 6-77
sym_base_ptr                           defined         pointer                  dcl 6-17
sym_max                                defined         fixed bin(17,0)          dcl 6-105
sym_wd_off                             defined         fixed bin(17,0)          dcl 6-103
tag_table_max                          defined         fixed bin(17,0)          dcl 6-167
tag_table_ptr                          defined         pointer                  dcl 6-53
temp_token_area_ptr                    defined         pointer                  dcl 6-43
temp_token_max                         defined         fixed bin(17,0)          dcl 6-169
temp_token_ptr                         defined         pointer                  dcl 6-45
text_base_ptr                          defined         pointer                  dcl 6-9
text_wd_off                            defined         fixed bin(17,0)          dcl 6-91
token_block1_ptr                       defined         pointer                  dcl 6-47
token_block2_ptr                       defined         pointer                  dcl 6-49
value_cnt                              defined         fixed bin(17,0)          dcl 6-195
ws_charcnt                             defined         fixed bin(17,0)          dcl 6-187
ws_wdoff                               defined         fixed bin(17,0)          dcl 6-201
xref_bypass                            defined         bit(1)                   dcl 6-213
xref_chain_ptr                         defined         pointer                  dcl 6-75
xref_token_ptr                         defined         pointer                  dcl 6-73

NAMES DECLARED BY EXPLICIT CONTEXT.
cobol_alter_gen                 000007 constant        entry                    external dcl 25
emit                            000177 constant        label                    dcl 275 ref 268
found                           000061 constant        label                    dcl 256 ref 251
start                           000014 constant        label                    dcl 241

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       350         422     237         360
Length       724     237        52         266     111          24

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cobol_alter_gen                      86 external procedure  is an external procedure.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 target                      cobol_alter_gen
000016 register_request            cobol_alter_gen
000027 inst_seq                    cobol_alter_gen

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cobol_alter_gen          000100 pn1_num                     cobol_alter_gen
                         000101 pn2_num                     cobol_alter_gen
                         000102 pn2_pri                     cobol_alter_gen
                         000103 index                       cobol_alter_gen
                         000104 no_inst                     cobol_alter_gen

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cobol_addr                    cobol_emit                    cobol_make_tagref             cobol_register$load

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
cobol_$alter_list_ptr         cobol_$seg_init_list_ptr      cobol_$text_wd_off




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     25 000004       241 000014       243 000022       244 000025       246 000031       247 000041       249 000052
    250 000054       251 000056       254 000057       256 000061       258 000102       259 000113       262 000141
    264 000151       265 000153       267 000170       268 000172       271 000173       273 000175       275 000177
    277 000216       278 000236


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
