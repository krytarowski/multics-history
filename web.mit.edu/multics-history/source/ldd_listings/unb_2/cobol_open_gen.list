	COMPILATION LISTING OF SEGMENT cobol_open_gen
	Compiled by: Multics PL/I Compiler, Release 31b, of April 24, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 05/24/89  0942.2 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8091),
       17*     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
       18*     MCR8091 cobol_open_gen.pl1 Stop VALUE OF FILE-ID and VALUE OF RETENTION
       19*     from being ignored.
       20*                                                   END HISTORY COMMENTS */
       21 
       22 
       23 /* Modified on 12/10/84 by FCH, [5.3-1], BUG574(phx18559), VALUE OF FILE-ID and RETENTION */
       24 /* Modified on 11/28/84 by FCH, [5.3...], trace added */
       25 /* Modified on 10/28/82 by FCH, [5.1-1], length of attach options string incorrect, BUG544(phx12991) */
       26 /* Modified on 09/30/80 by FCH, [4.4-1], density is 6250 supported, BUG447(TR7681) */
       27 /* Modified on 09/08/79 by FCH, [4.0-2], implement apply attach-options are data-name */
       28 /* Modified on 03/12/79 by FCH, [4.0-1], fix preattach for internal files */
       29 /* Modified on 10/31/78 by witches and hobgoblins, [3.0-3], alt rec keys */
       30 /* Modified on 12/15/77 by FCH, [3.0-2], ioa_ used in NUMS */
       31 /* Modified on 12/13/77 by FCH, [3.0-1], org is ibm-(os,dos) implemented */
       32 /* Modified since version 3.0 */
       33 
       34 
       35 
       36 
       37 /* format: style3 */
       38 cobol_open_gen:
       39      proc (mp_ptr);
       40 
       41 dcl	mp_ptr		ptr;
       42 
       43 dcl	1 mp		based (mp_ptr),
       44 	  2 n		fixed bin,		/* always 3 */
       45 	  2 pt1		ptr,			/* pts to type1 token for OPEN */
       46 	  2 pt2		ptr,			/* pts to type12 token for the file */
       47 	  2 pt3		ptr;			/* pts to type19 token */
       48 
       49 dcl	1 args,
       50 	  2 entryno	fixed bin,
       51 	  2 arglist_off	fixed bin,
       52 	  2 stacktemp_off	fixed bin,
       53 	  2 n		fixed bin,
       54 	  2 arg		(5),
       55 	    3 pt		ptr,
       56 	    3 type	fixed bin,
       57 	    3 off1	fixed bin,
       58 	    3 off2	fixed bin,
       59 	    3 value	bit (18) unal,
       60 	    3 indirecy	bit (1) unal,
       61 	    3 overlay	bit (1) unal,
       62 	    3 repeat_nogen	bit (1) unal;
       63 
       64 
       65 dcl	1 mpout,
       66 	  2 n		fixed bin,
       67 	  2 pt1		ptr,
       68 	  2 pt2		ptr,
       69 	  2 pt3		ptr,
       70 	  2 pt4		ptr;
       71 
       72 dcl	file_key_desc	char (40) based;
       73 dcl	atd_string	char (150) varying init ((150)" ");
       74 dcl	buf_off		fixed bin;
       75 dcl	ft_max_cra_size	fixed bin;
       76 dcl	ft_work		char (6) init ((6)" ");
       77 dcl	ft_format		char (4) var init (" fb ");
       78 dcl	ft_protect	char (5) var init ((5)" ");
       79 dcl	ft_retain		char (11) var init (" -ret none ");
       80 dcl	ft_force		char (5) var init ((5)" ");
       81 dcl	ft_output_mode	char (17) var init ((17)" ");
       82 dcl	ft_density_num	fixed bin init (800);
       83 dcl	ft_position_num	fixed bin init (1);
       84 dcl	ft_block_num	fixed bin init (1);
       85 dcl	ft_device_num	fixed bin init (1);
       86 dcl	ft_extend		char (8) var init ((8)" ");
       87 dcl	mcode_off		fixed bin static init (40);
       88 dcl	good_tag		fixed bin;
       89 dcl	iocb_tag		fixed bin;
       90 dcl	attach_tag	fixed bin;
       91 dcl	open_tag		fixed bin;
       92 dcl	open_tag1		fixed bin;
       93 dcl	open_tag2		fixed bin;
       94 dcl	stream_tag	fixed bin;
       95 dcl	ioname_off	fixed bin static init (46);
       96 dcl	ubits_off		fixed bin static init (42);
       97 dcl	uchars_off	fixed bin static init (44);
       98 dcl	len_off		fixed bin static init (52);
       99 
      100 /*[5.3-1]*/
      101 dcl	ft_expire		char (9) var init ((9)" ");	/*[5.3-1]*/
      102 dcl	handler		char (12) init ((12)" ");	/*[6.3-1]*/
      103 dcl	om		char (6) var init ((6)" ");
      104 
      105 dcl	argb		(5) bit (216) based (addr (args.arg (1)));
      106 dcl	instr		(0:10000) bit (36) based (cobol_$text_base_ptr);
      107 dcl	char4b		char (4) based;
      108 dcl	char8b		char (8) based;
      109 
      110 dcl	(extend_sw, alt_sw, alt_output)
      111 			bit (1) aligned;
      112 
      113 dcl	arg_ptr		ptr;
      114 dcl	linage_ptr	ptr;
      115 dcl	com2_ptr		ptr;
      116 dcl	ioerror_ptr	ptr;
      117 dcl	ft_ptr		ptr;
      118 dcl	fkey_ptr		ptr;
      119 dcl	basic_ptr		ptr;
      120 dcl	name_ptr		ptr;
      121 dcl	dn_ptr		ptr;
      122 
      123 dcl	segname		char (36) init ("");
      124 declare	append_size	fixed bin,
      125 	append_string	char (16) var init ((16)" ");
      126 
      127 dcl	namelen		fixed bin;
      128 dcl	atd_len		fixed bin;
      129 dcl	atd_off		fixed bin;
      130 dcl	atd_charoff	fixed bin;
      131 dcl	aloff		fixed bin;
      132 dcl	buflen_off	fixed bin;
      133 dcl	define_detach	fixed bin;
      134 dcl	ioname_len	fixed bin;
      135 dcl	cobol_mode	fixed bin;
      136 dcl	multics_mode	fixed bin;
      137 dcl	file_id		char (17) var init ((17)" ");
      138 dcl	cata_name		char (200) var init ((200)" ");
      139 dcl	key_sz		fixed bin;
      140 dcl	temp		fixed bin;
      141 dcl	utemp		fixed bin;
      142 dcl	(i, typ)		fixed bin;
      143 
      144 /*[5.3-1]*/
      145 dcl	clock_		entry returns (fixed bin (71));
      146 						/*[5.3-1]*/
      147 dcl	date_time_	entry (fixed bin (71), char (*));
      148 
      149 /*[5.3-1]*/
      150 dcl	f_ifn		char (16) var;		/*[5.3-1]*/
      151 dcl	f_nm		char (32) var;		/*[5.3-1]*/
      152 dcl	fc_nm		char (30) var;		/*[5.3-1]*/
      153 dcl	vf		char (12) init ("vfile_");	/*[5.3-1]*/
      154 dcl	(cata_name_loc, atd_string_loc, append_string_loc)
      155 			ptr;
      156 
      157 
      158 /*************************************/
      159 /* INITIALIZATION */
      160 
      161 start:						/* set up  return tags. */
      162 	/***.....	if Trace_Bit then call cobol_gen_driver_$Tr_Beg(cog);/**/
      163 						/*[5.3-1]*/
      164 	cata_name_loc = addr (cata_name);
      165 	atd_string_loc = addr (atd_string);
      166 	append_string_loc = addr (append_string);
      167 	ioerror.retry_tag = cobol_$next_tag;
      168 	ioerror.ns_tag = cobol_$next_tag + 1;
      169 	good_tag = cobol_$next_tag + 2;
      170 	iocb_tag = cobol_$next_tag + 3;
      171 	attach_tag = cobol_$next_tag + 4;
      172 	open_tag = cobol_$next_tag + 5;
      173 	open_tag1 = cobol_$next_tag + 6;
      174 	open_tag2 = cobol_$next_tag + 7;
      175 	cobol_$next_tag = cobol_$next_tag + 8;		/* initialize ioerror structure for cobol_gen_ioerror. */
      176 	ioerror_ptr = addr (ioerror);
      177 	ioerror.cobol_code = 0;
      178 	ioerror.type1_ptr = mp.pt1;
      179 	ioerror.is_tag = 0;
      180 	ioerror.mode = 0;
      181 	basic_ptr, basic_arg.pt = addr (basic_struct);
      182 
      183 	call cobol_read_ft (mp.pt2 -> fd_token.file_no, ft_ptr);
      184 
      185 	basic_struct.seg = file_table.fsb.seg;
      186 	basic_struct.offset = file_table.fsb.off;
      187 
      188 	call cobol_iomode (ft_ptr, mp.pt3, cobol_mode, multics_mode, extend_sw);
      189 
      190 	call cobol_alloc$stack (500, 2, aloff);		/* for both max arglist and atd */
      191 
      192 	atd_off = aloff;
      193 	atd_len = 0;
      194 	ioname_off = aloff;
      195 	buflen_off = 80;
      196 
      197 /*[5.3-1]*/
      198 	call cv (addr (file_table.ifn), 16, addr (f_ifn));/*[5.3-1]*/
      199 	call cv (addr (fixed_common.prog_name), 30, addr (fc_nm));
      200 						/*[5.3-1]*/
      201 	call cv (addr (file_table.cat_nm), 200, addr (cata_name));
      202 
      203 /*[5.3-1]*/
      204 	f_nm = substr (file_table.name, 1, file_table.name_size);
      205 
      206 /*[5.3-1]*/
      207 	if file_table.catalogued = 2
      208 	then call test_cata_name;
      209 
      210 
      211 /*************************************/
      212 /* START CODE GENERATION */
      213 
      214 start_codegen:					/* CHECK CURRENT FILE STATUS */
      215 						/* [3.0-3] */
      216 	alt_sw = file_table.organization = 3 /* ind */ /* [3.0-3] */ & /* [3.0-3] */ file_table.alternate_keys ^= 0;
      217 						/* [3.0-3] */
      218 	alt_output = alt_sw /* [3.0-3] */ & /* [3.0-3] */ cobol_mode = 61;
      219 
      220 	call cobol_define_tag (ioerror.retry_tag);
      221 	call cobol_set_fsbptr (ft_ptr);		/* generates  epp1  pr4|54,*  */
      222 
      223 	if file_table.external			/* EXT_OPEN_OP */
      224 	then do;
      225 		call cobol_ioop_util$lda (cobol_mode);	/* OPERATOR 30: open_ext_file */
      226 		call cobol_call_op (30, good_tag);
      227 		call cobol_ioop_util$tra (ioerror.ns_tag);
      228 		call cobol_make_tagref (ioerror.ns_tag, cobol_$text_wd_off - 1, null ());
      229 
      230 	     end;					/* OPERATOR 31: open_int_file */
      231 	else call cobol_call_op (31, good_tag);
      232 
      233 	call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      234 	call cobol_define_tag (good_tag);
      235 
      236 	ioname_len = index (file_table.id, " ") - 1;
      237 	if ioname_len < 0
      238 	then ioname_len = 16;
      239 
      240 	temp = divide (ioname_len + 3, 4, 17, 0) * 4;	/* make it easy for cobol_io_util */
      241 	call ML (4 * (ioname_off + 4), temp, addr (file_table.id));
      242 	call cobol_ioop_util$ldaldx5 (ioname_len, ioname_off);
      243 						/* generates  lda/ldx5 ioname_len/stack_offset  */
      244 
      245 /* LOCATE OR CREATE IOCB VIA iox_$find_iocb */
      246 /* OPERATOR 32: find_iocb */
      247 
      248 	call cobol_call_op (32, iocb_tag);
      249 	call cobol_gen_ioerror (ft_ptr, ioerror_ptr);	/* cobol code=7 unable to establish IOCb */
      250 	call cobol_define_tag (iocb_tag);
      251 
      252 /* CHECK CURRENT ATTACHMENT OF IO-SWITCH */
      253 /* Operator 33: check_attach */
      254 
      255 /*[4.0-1]*/
      256 	call cobol_call_op (33, attach_tag);
      257 
      258 
      259 /* GENERATE ERROR FOR "DEVICE IS UNATTACHED" */
      260 
      261 	if file_table.device = 7
      262 	then do;
      263 		ioerror.cobol_code = 10;		/* error if not attached */
      264 		call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      265 		call opfin;
      266 		go to cogx;
      267 	     end;					/* PREPARE FOR ATTACHING IO-SWITCH */
      268 
      269 	atd_charoff = 4 * atd_off;
      270 
      271 	if file_table.ao_len > 0
      272 	then typ = 1;
      273 	else if file_table.attach_options_info ^= "00000"
      274 	then typ = 2;
      275 	else typ = 3;
      276 
      277 	go to op (typ);
      278 
      279 
      280 op (1):
      281 	atd_len = file_table.ao_len;
      282 	call ML (atd_charoff + 16, atd_len, addr (file_table.ao_string));
      283 
      284 	go to opx;
      285 
      286 op (2):						/*[4.0-2]*/
      287 	call MOVE (file_table.attach_options_info, 16);	/*[4.0-2]*/
      288 	atd_len = key_sz;
      289 
      290 	go to opx;
      291 
      292 op (3):						/* BUILD ATTACH DESCRIPTION - "vfile_  <name> [-extend]" */
      293 	if file_table.catalogued < 2 & file_table.device ^= 5
      294 						/* no pathname given */
      295 	then do;
      296 		segname = fc_nm || "." || f_ifn;
      297 		namelen = length (fc_nm) + length (f_ifn) + 1;
      298 
      299 		if file_table.temp & file_table.device ^= 1 & file_table.device ^= 3
      300 		then do;
      301 			temp = 4 * divide (namelen + 4, 4, 35, 0);
      302 
      303 			call cobol_alloc$stack (80, 2, len_off);
      304 
      305 			uchars_off = len_off + 2;
      306 			call ML (uchars_off * 4, temp, addr (segname));
      307 
      308 /* USE CURRENT PROCESS DIRECTORY || ">" || UNIQUE_SEGNAME */
      309 
      310 			args.entryno = 0;		/* entry constant */
      311 			args.arglist_off = uchars_off + 8;
      312 			argb (1) = unspec (name_arg);
      313 			argb (2) = unspec (temp_arg);
      314 			args.n = 2;
      315 			arg.pt (1) = addr (get_pdir_vstring);
      316 			arg.off1 (2) = atd_off + 7;
      317 			arg.repeat_nogen (2) = "0"b;
      318 
      319 			call cobol_iocall (addr (args), null ());
      320 			call cobol_set_fsbptr (ft_ptr);
      321 			call cobol_open_util$make_pdir_path (atd_off + 7, len_off, uchars_off, namelen);
      322 
      323 			atd_len = 202;
      324 
      325 		     end;
      326 		else do;
      327 
      328 /* USE UNIQUE_SEGNAME ONLY (vfile_ will expand it at execution) */
      329 
      330 			atd_len = namelen;
      331 			call ML (atd_charoff + 28, atd_len, addr (segname));
      332 
      333 		     end;
      334 	     end;
      335 	else do;					/* cat name specified */
      336 						/* USE PATHNAME GIVEN */
      337 
      338 		if file_table.catalogued = 2		/* given as a literal */
      339 		then do;
      340 			atd_len = 4 * divide (length (cata_name) + 3, 4, 35, 0);
      341 
      342 			call ML (atd_charoff + 28, atd_len, addr (cata_name_loc -> vch.ch));
      343 
      344 		     end;
      345 		else if file_table.catalogued = 3
      346 		then do;				/* given as a data_name */
      347 
      348 			if file_table.device = 5
      349 			then do;
      350 				atd_type9.file_key_info.fb (4) = 6;
      351 				atd_len = 6;
      352 			     end;
      353 			else atd_len = 200;
      354 
      355 
      356 /*[4.0-2]*/
      357 			call MOVE (file_table.cat_id_info, 28);
      358 
      359 		     end;
      360 
      361 	     end;
      362 
      363 	if file_table.device = 5
      364 	then do;
      365 		atd_len = atd_len + 12;
      366 
      367 		if file_table.catalogued < 2 | file_table.temp
      368 		then ft_work = "work  ";
      369 		if multics_mode = 5
      370 		then ft_output_mode = " -cr ";
      371 
      372 		ft_max_cra_size = file_table.max_cra_size;
      373 
      374 		if file_table.block_desc = 1
      375 		then ft_block_num = divide (file_table.block_max, ft_max_cra_size, 17, 0);
      376 		if file_table.spanned_recs
      377 		then do;
      378 			ft_format = " s  ";
      379 			ft_max_cra_size = ft_max_cra_size + 5;
      380 		     end;
      381 		else if file_table.variable
      382 		then do;
      383 			ft_format = " d  ";
      384 			ft_max_cra_size = ft_max_cra_size + 4;
      385 		     end;
      386 		else ft_format = " f  ";
      387 
      388 		if file_table.block_desc ^= 0
      389 		then substr (ft_format, 3, 1) = "b";
      390 
      391 		if file_table.open_out | file_table.open_ext | multics_mode = 5
      392 		then ft_protect = " -rg ";
      393 		if file_table.tape.protect
      394 		then ft_protect = "";
      395 
      396 		if file_table.tape.retain
      397 		then ft_retain = " -ret all ";
      398 		if file_table.tape.force
      399 		then ft_force = " -fc ";
      400 
      401 		if file_table.tape.density
      402 		then ft_density_num = 1600;		/*[4.4-1]*/
      403 		else if file_table.tape.den_6250
      404 		then ft_density_num = 6250;
      405 
      406 		if file_table.mult_position_no > 0
      407 		then ft_position_num = file_table.mult_position_no;
      408 
      409 		if file_table.block_desc = 0
      410 		then ft_block_num = ft_max_cra_size;
      411 		else if file_table.block_desc = 1
      412 		then if file_table.spanned_recs
      413 		     then ft_block_num = file_table.block_max;
      414 		     else ft_block_num = ft_block_num * ft_max_cra_size;
      415 		else ft_block_num = file_table.block_max * ft_max_cra_size;
      416 
      417 		if file_table.output_mode < 5
      418 		then do;
      419 			go to o_m (file_table.output_mode);
      420 
      421 o_m (1):
      422 			om = " -gen ";		/* generation */
      423 			go to omx;
      424 
      425 o_m (2):
      426 			om = " -mod ";		/* modification */
      427 			go to omx;
      428 
      429 o_m (3):
      430 o_m (4):						/* replacement */
      431 			call set_replacement_info;
      432 			go to omx;
      433 
      434 o_m (0):
      435 omx:
      436 		     end;
      437 
      438 		if file_table.tape_device > 0
      439 		then if file_table.tape_device = 1
      440 		     then ft_device_num = file_table.tape_device_num;
      441 		     else ;
      442 		else ft_device_num = 1;
      443 
      444 		if extend_sw
      445 		then do;
      446 			ft_extend = " -extend";
      447 			ft_output_mode = "";	/* extend and create don't mix. */
      448 		     end;
      449 
      450 /*[5.3-1]*/
      451 		if file_table.retention_info ^= "00000"
      452 		then call set_retention_info;
      453 
      454 /*[5.3-1]*/
      455 		if file_table.catalogued = 2		/*[5.3-1]*/
      456 		then if file_id = ""		/*[5.3-1]*/
      457 		     then call set_file_id;		/*[5.3-1]*/
      458 		     else ;			/*[5.3-1]*/
      459 		else call set_file_id;
      460 
      461 /*[5.3-1]*/
      462 		atd_string = ft_work;
      463 
      464 /*[5.3-1]*/
      465 		if file_table.label_format = 1
      466 		then call set_atd1;
      467 		else call set_atd2;			/*[5.3-1]*/
      468 		temp = length (atd_string);
      469 		call ML (atd_charoff + 16 + atd_len, temp, addr (atd_string_loc -> vch.ch));
      470 						/*[5.3-1]*/
      471 		if file_table.org_qual ^= 5 & file_table.org_qual ^= 7 & file_table.label_format = 1
      472 						/*[5.3-1]*/
      473 		then handler = "tape_ansi_  ";	/*[5.3-1]*/
      474 		else handler = "tape_ibm_  ";
      475 
      476 /*[5.3-1]*/
      477 		call ML (atd_charoff + 16, 12, addr (handler));
      478 						/*[5.3-1]*/
      479 		atd_len = atd_len + length (atd_string);
      480 
      481 	     end;
      482 	else do;
      483 
      484 /*[3.0-3]*/
      485 		if file_table.dupl_alt | extend_sw	/*[3.0-3]*/
      486 		then do;
      487 			if file_table.dupl_alt & extend_sw
      488 						/*[3.0-3]*/
      489 			then append_string = " -extend -dup_ok";
      490 						/*[3.0-3]*/
      491 			else /*[3.0-3]*/
      492 			     if extend_sw		/*[3.0-3]*/
      493 			then append_string = " -extend";
      494 						/*[3.0-3]*/
      495 			else append_string = " -dup_ok";
      496 						/*[3.0-3]*/
      497 						/*[3.0-3]*/
      498 			append_size = length (append_string);
      499 						/*[3.0-3]*/
      500 			atd_len = atd_len + append_size;
      501 						/*[3.0-3]*/
      502 						/*[3.0-3]*/
      503 			call ML (atd_charoff + atd_len + 20, append_size, addr (append_string_loc -> vch.ch));
      504 
      505 /**/
      506 		     end;
      507 
      508 		call ML (atd_charoff + 16, 12, addr (vf));
      509 		atd_len = atd_len + 12;
      510 
      511 	     end;
      512 
      513 	go to opx;
      514 
      515 
      516 
      517 
      518 
      519 opx:						/* ATTACH THE IO-SWITCH VIA iox_$attach_iocb */
      520 	temp = divide (atd_charoff, 4, 17, 0);
      521 	call cobol_ioop_util$ldaldx5 (atd_len, temp);
      522 
      523 	if file_table.ao_len > 0
      524 	then temp = 14;				/* Unable to attach I/O switch with specified options */
      525 	else if file_table.catalogued < 2
      526 	then temp = 13;				/* Unable to attach I/O switch */
      527 	else temp = 51;				/* - possible invalid catalogue-name */
      528 
      529 	call opfin;
      530 	go to cogx;
      531 
      532 opfin:
      533      proc;
      534 
      535 /* operator 34: attach_iocb */
      536 	call cobol_call_op (34, attach_tag);		/*ATTACH_IOCB_OP*/
      537 
      538 	ioerror.cobol_code = temp;
      539 	call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      540 	call cobol_define_tag (attach_tag);		/* OPEN THE FILE VIA iox_$open */
      541 						/* OPERATOR37(check_file) */
      542 
      543 	call cobol_call_op (37, open_tag1);		/*CHECK_NONCOBOL_OP*/
      544 
      545 	if alt_output | cobol_mode = 59 | cobol_mode = 63 /* open output; close; then open update */
      546 	then do;					/* OPERATOR36(open_close_file) */
      547 
      548 		call cobol_call_op (36, open_tag2);	/*OPEN_OP output*/
      549 		call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      550 
      551 
      552 	     end;
      553 
      554 	call cobol_define_tag (open_tag2);
      555 	call cobol_set_fsbptr (ft_ptr);
      556 
      557 	if (multics_mode = 6 & extend_sw = "1"b & file_table.device = 5)
      558 	then multics_mode = 5;			/* [3.0-3] */
      559 	if alt_output
      560 	then multics_mode = 10;
      561 
      562 	call cobol_ioop_util$open_clean_up (ft_ptr, cobol_mode, multics_mode);
      563 						/* operator 35: open_file */
      564 	call cobol_call_op (35, open_tag1);
      565 
      566 	if alt_output | multics_mode = 10 | (multics_mode = 13 & cobol_mode < 48) | multics_mode = 7
      567 	then do;					/* OPEN FILE VIA iox_$open FOR INDEXED_SEQUENTIAL_OUTPUT or DIRECT OUTPUT */
      568 
      569 		temp = multics_mode - 1;
      570 		if temp = 6
      571 		then temp = 5;
      572 
      573 /* CLOSE FILE VIA iox_$close */
      574 
      575 		call cobol_ioop_util$set_stz;
      576 		call cobol_set_fsbptr (ft_ptr);
      577 		call cobol_ioop_util$open_clean_up (ft_ptr, cobol_mode, temp);
      578 
      579 /* OPERATOR 29: close_op_file */
      580 
      581 		call cobol_call_op (29, open_tag2);
      582 
      583 	     end;
      584 
      585 	call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      586 	call cobol_define_tag (open_tag1);
      587 
      588 /* [3.0-3] */
      589 	if alt_sw					/* [3.0-3] */
      590 	then do;
      591 		call cobol_io_util$file_desc (file_table.file_desc_1_offset);
      592 
      593 /* [3.0-3] */
      594 		call cobol_call_op (78, 0);		/* [3.0-3] */
      595 		call cobol_set_fsbptr (ft_ptr);	/* [3.0-3] */
      596 	     end;
      597 
      598 /* RECORD OPENING IN FSB RUN_UNIT CONTROL_SEG */
      599 
      600 	if file_table.linage			/* LINAGE initialization */
      601 	then do;
      602 		call cobol_set_fsbptr (ft_ptr);
      603 		call cobol_read_rand (1, file_table.linage_info, linage_ptr);
      604 
      605 		stream_tag = cobol_$next_tag;
      606 		cobol_$next_tag = cobol_$next_tag + 1;
      607 
      608 		if linage_rec.body > 0
      609 		then if linage_rec.body ^= 5
      610 		     then call linage_init (linage_rec.body, 92 * 4);
      611 		     else call cobol_ioop_util$set_fsb (linage_rec.body_int, 92);
      612 		else do;
      613 			linage_rec.body_int = 66;	/* default  should no reach this point. */
      614 			linage_rec.body = 5;
      615 			call cobol_ioop_util$set_fsb (linage_rec.body_int, 92);
      616 		     end;
      617 
      618 		if linage_rec.footing > 0
      619 		then if linage_rec.footing ^= 5
      620 		     then call linage_init (linage_rec.footing, 93 * 4);
      621 		     else if linage_rec.footing_int = 0
      622 		     then call cobol_ioop_util$set_fsb (linage_rec.body_int, 135);
      623 		     else call cobol_ioop_util$set_fsb (linage_rec.footing_int, 93);
      624 		else if linage_rec.body ^= 5
      625 		then call linage_init (linage_rec.body, 93 * 4);
      626 		else call cobol_ioop_util$set_fsb (linage_rec.body_int, 93);
      627 
      628 		if linage_rec.top > 0
      629 		then do;
      630 			if linage_rec.top ^= 5
      631 			then call linage_init (linage_rec.top, 94 * 4);
      632 			else call cobol_ioop_util$set_fsb (linage_rec.top_int, 94);
      633 
      634 			call cobol_alloc$stack (120, 2, buf_off);
      635 			call cobol_ioop_util$disp (buf_off);
      636 		     end;
      637 		else call cobol_ioop_util$set_fsb (0, 94);
      638 
      639 		if linage_rec.bottom > 0
      640 		then if linage_rec.bottom ^= 5
      641 		     then call linage_init (linage_rec.bottom, 95 * 4);
      642 		     else call cobol_ioop_util$set_fsb (linage_rec.bottom_int, 95);
      643 		else call cobol_ioop_util$set_fsb (0, 95);
      644 						/* OPERATOR24(set_line_file_status) */
      645 		call cobol_file_util$open (mp.pt2, 1);
      646 
      647 	     end;					/* OPERATOR25(set_file_status) */
      648 	else call cobol_file_util$open (mp.pt2, 0);
      649 
      650 	call cobol_reg_manager$after_op (4095 + ioerror.cobol_code);
      651 	call cobol_gen_ioerror$finish_up (ft_ptr, ioerror_ptr);
      652 
      653      end;
      654 
      655 cogx:	/***.....	if Trace_Bit then call cobol_gen_driver_$Tr_End(cog);/**/
      656 	return;
      657 
      658 
      659 set_atd1:
      660      proc;					/* STANDARD LABELS */
      661 
      662 /*[5.3-1]*/
      663 	atd_string = atd_string || " -nm " || file_id;	/*[5.3-1]*/
      664 	atd_string = atd_string || om;		/*[5.3-1]*/
      665 	atd_string = atd_string || ft_retain || ft_force || ft_extend;
      666 						/*[5.3-1]*/
      667 	atd_string = atd_string || " -rec " || NUMS (ft_max_cra_size);
      668 						/*[5.3-1]*/
      669 	atd_string = atd_string || ft_output_mode;
      670 
      671 /*[5.3-1]*/
      672 	call set_atd;
      673 
      674      end;
      675 
      676 
      677 
      678 set_atd2:
      679      proc;					/* NO LABELS */
      680 
      681 /*[5.3-1]*/
      682 	ft_format = " u ";				/*[5.3-1]*/
      683 	call set_atd;
      684 
      685      end;
      686 
      687 
      688 
      689 set_atd:
      690      proc;					/* initialize attach descr */
      691 
      692 /*[5.3-1]*/
      693 	if ft_expire ^= ""
      694 	then atd_string = atd_string || " -exp " || ft_expire;
      695 
      696 /*[5.3-1]*/
      697 	atd_string = atd_string || " -fmt " || ft_format;
      698 
      699 /*[5.3-1]*/
      700 	if ft_protect ^= ""
      701 	then atd_string = atd_string || ft_protect;
      702 
      703 /*[5.3-1]*/
      704 	atd_string = atd_string || " -den " || NUMS (ft_density_num);
      705 						/*[5.3-1]*/
      706 	atd_string = atd_string || " -nb " || NUMS (ft_position_num);
      707 						/*[5.3-1]*/
      708 	atd_string = atd_string || " -bk " || NUMS (ft_block_num);
      709 						/*[5.3-1]*/
      710 	atd_string = atd_string || " -dv " || NUMS (ft_device_num);
      711 
      712 /*[5.3-1]*/
      713 	if file_table.org_qual = 5
      714 	then atd_string = atd_string || " -dos ";
      715 
      716      end;
      717 
      718 ML:
      719      proc (off, len, str_loc);
      720 
      721 /*[5.3-1]*/
      722 dcl	(off, len)	fixed bin,
      723 	str_loc		ptr;
      724 
      725 /*[5.3-1]*/
      726 dcl	str		char (1024) based (str_loc);
      727 
      728 /*[5.3-1]*/
      729 	call cobol_io_util$move_lit ("110"b, off, len, substr (str, 1, len));
      730 
      731      end;
      732 
      733 
      734 get_info:
      735      proc (ch5);
      736 
      737 /*[5.3-1]*/
      738 dcl	ch5		char (5);
      739 
      740 /*[5.3-1]*/
      741 	call cobol_read_rand (1, ch5, fkey_ptr);
      742 
      743      end;
      744 
      745 set_file_id:
      746      proc;					/* FILE-ID clause */
      747 
      748 /*[5.3-1]*/
      749 	if file_table.file_id_info = "00000"		/* not present */
      750 						/*[5.3-1]*/
      751 	then do;
      752 		if file_table.mult_position_no = 0	/*[5.3-1]*/
      753 		then file_id = f_ifn;		/*[5.3-1]*/
      754 		else file_id = f_nm;
      755 
      756 /*[5.3-1]*/
      757 		return;				/*[5.3-1]*/
      758 	     end;
      759 
      760 /*[5.3-1]*/
      761 	call get_info (file_table.file_id_info);
      762 
      763 /*[5.3-1]*/
      764 	if file_key.key_type = 113			/* literal */
      765 						/*[5.3-1]*/
      766 	then do;
      767 		file_id = substr (file_key.name, 1, file_key.name_size);
      768 
      769 /*[5.3-1]*/
      770 		return;				/*[5.3-1]*/
      771 	     end;
      772 
      773      end;
      774 
      775 set_retention_info:
      776      proc;					/* RETENTION cluse */
      777 
      778 /*[5.3-1]*/
      779 dcl	tm		fixed bin (71);		/*[5.3-1]*/
      780 dcl	dt		char (32);
      781 
      782 /*[5.3-1]*/
      783 	call get_info (file_table.retention_info);
      784 
      785 /*[5.3-1]*/
      786 	if file_key.key_type = 114			/* literal */
      787 						/*[5.3-1]*/
      788 	then do;
      789 		tm = clock_ ();
      790 
      791 /*[5.3-1]*/
      792 		tm = tm + 24 * 3600 * 1000000 * fixed (substr (file_key.name, 1, file_key.name_size));
      793 
      794 /*[5.3-1]*/
      795 		call date_time_ (tm, dt);		/*[5.3-1]*/
      796 		ft_expire = substr (dt, 1, 9);	/*[5.3-1]*/
      797 	     end;
      798 
      799      end;
      800 
      801 set_replacement_info:
      802      proc;					/* REPLACEMENT phrase */
      803 
      804 /*[5.3-1]*/
      805 	om = " -rpl ";
      806 
      807 /*[5.3-1]*/
      808 	if file_table.replacement_info = "00000"	/* no phrase */
      809 						/*[5.3-1]*/
      810 	then do;
      811 		ft_output_mode = f_ifn;		/*[5.3-1]*/
      812 		return;				/*[5.3-1]*/
      813 	     end;
      814 
      815 /*[5.3-1]*/
      816 	call get_info (file_table.replacement_info);
      817 
      818 /*[5.3-1]*/
      819 	if file_key.key_type = 109			/* literal */
      820 						/*[5.3-1]*/
      821 	then do;
      822 		ft_output_mode = substr (file_key.name, 1, file_key.name_size);
      823 						/*[5.3-1]*/
      824 		return;				/*[5.3-1]*/
      825 	     end;
      826 
      827      end;
      828 
      829 cv:
      830      proc (fch_loc, sz, vch_loc);			/* convert to char varying */
      831 
      832 /*[5.3-1]*/
      833 dcl	(fch_loc, vch_loc)	ptr,
      834 	(i, sz)		fixed bin;
      835 
      836 /*[5.3-1]*/
      837 dcl	fch		char (2048) based (fch_loc);	/*[5.3-1]*/
      838 dcl	vch		char (2048) varying based (vch_loc);
      839 
      840 /*[5.3-1]*/
      841 	do i = sz by -1 to 1;
      842 
      843 /*[5.3-1]*/
      844 	     if substr (fch, i, 1) ^= " "		/*[5.3-1]*/
      845 	     then do;
      846 		     vch = substr (fch, 1, i);	/*[5.3-1]*/
      847 		     return;			/*[5.3-1]*/
      848 		end;
      849 
      850 /*[5.3-1]*/
      851 	end;
      852 
      853 /*[5.3-1]*/
      854 	vch = "";
      855 
      856      end;
      857 
      858 test_cata_name:
      859      proc;					/* test for ` in cata name (obsolete) */
      860 
      861 /*[5.3-1]*/
      862 dcl	(l, i)		fixed bin;
      863 
      864 /*[5.3-1]*/
      865 	l = length (cata_name);
      866 	if l = 0
      867 	then return;				/*[5.3-1]*/
      868 	i = index (cata_name, "`");
      869 	if i = 0
      870 	then return;
      871 
      872 /*[5.3-1]*/
      873 	if i = l					/*[5.3-1]*/
      874 	then do;
      875 		if l = 1				/*[5.3-1]*/
      876 		then cata_name = "";		/*[5.3-1]*/
      877 		else cata_name = substr (cata_name, 1, l - 1);
      878 
      879 /*[5.3-1]*/
      880 		return;				/*[5.3-1]*/
      881 	     end;
      882 
      883 /*[5.3-1]*/
      884 	if i = 1					/*[5.3-1]*/
      885 	then do;
      886 		file_id = substr (cata_name, 2);	/*[5.3-1]*/
      887 		cata_name = "";
      888 
      889 /*[5.3-1]*/
      890 		return;				/*[5.3-1]*/
      891 	     end;
      892 
      893 /*[5.3-1]*/
      894 	file_id = substr (cata_name, i + 1);		/*[5.3-1]*/
      895 	cata_name = substr (cata_name, 1, i - 1);
      896 
      897      end;
      898 
      899 linage_init:
      900      proc (index_value, fsb_offset);
      901 
      902 dcl	index_value	fixed bin (15);
      903 dcl	fsb_offset	fixed bin;
      904 
      905 	addr (fkey_type9.file_key_info) -> file_key_desc = linage_rec.name_desc (index_value);
      906 
      907 	mpout.n = 4;
      908 	mpout.pt1 = mp.pt1;
      909 	mpout.pt2 = addr (fkey_type9);
      910 	mpout.pt3 = addr (comp6_type9);
      911 
      912 	comp6_type9.size, comp6_type9.places_left = 4;
      913 	comp6_type9.seg = 5001;			/* TO PR1 */
      914 	comp6_type9.off = file_table.fsb.off + fsb_offset;
      915 
      916 	mpout.pt4 = addr (type19);
      917 
      918 	call cobol_move_gen (addr (mpout));
      919 	return;
      920 
      921      end linage_init;
      922 
      923 MOVE:
      924      proc (ch5, offset);
      925 
      926 /*[4.0-2]*/
      927 declare	ch5		char (5),
      928 	offset		fixed bin;		/*[4.0-2]*/
      929 declare	p		ptr;
      930 
      931 /*[4.0-2]*/
      932 declare	1 desc		based (p),		/*[4.0-2]*/
      933 	  2 linkage	fixed bin,		/*[4.0-2]*/
      934 	  2 file_num	fixed bin,		/*[4.0-2]*/
      935 	  2 size_rtn	fixed bin,		/*[4.0-2]*/
      936 	  2 item_length	fixed bin (24),		/*[4.0-2]*/
      937 	  2 places_left	fixed bin,		/*[4.0-2]*/
      938 	  2 places_right	fixed bin;
      939 
      940 /*[4.0-2]*/
      941 	call cobol_read_rand (1, ch5, fkey_ptr);
      942 
      943 /*[4.0-2]*/
      944 	mpout.n = 4;				/*[4.0-2]*/
      945 	mpout.pt1 = mp.pt1;				/*[4.0-2]*/
      946 	mpout.pt2 = addr (catid_type9);		/*[4.0-2]*/
      947 	mpout.pt3 = addr (atd_type9);			/*[4.0-2]*/
      948 	mpout.pt4 = addr (type19);
      949 
      950 /*[4.0-2]*/
      951 	unspec (catid_type9.file_key_info) = unspec (file_key.desc);
      952 						/*[4.0-2]*/
      953 	mpout.pt3 -> data_name.offset = atd_charoff + offset;
      954 
      955 /*[4.0-2]*/
      956 	call cobol_move_gen (addr (mpout));
      957 
      958 /*[4.0-2]*/
      959 	p = addr (file_key.desc);			/*[5.1-1]*/
      960 	key_sz = desc.item_length;
      961 
      962      end;
      963 
      964 NUMS:
      965      proc (v) returns (char (13) var);
      966 
      967 declare	v		fixed bin;		/*[3.0-2]*/
      968 declare	ioa_$rsnnl	entry options (variable);	/*[3.0-2]*/
      969 declare	S		char (13) varying,
      970 	len		fixed bin;		/*[3.0-2]*/
      971 
      972 	call ioa_$rsnnl ("^d", S, len, v);		/*[3.0-2]*/
      973 
      974 	return (substr (S, 1, len));			/*[3.0-2]*/
      975 
      976      end;
      977 
      978 /*[5.3-1]*/
      979 dcl	1 vch		based,			/*[5.3-1]*/
      980 	  2 sz		fixed bin (35),		/*[5.3-1]*/
      981 	  2 ch		char (1);
      982 
      983 	/***.....	dcl cog char(14) init("COBOL_OPEN_GEN");/**/
      984 
      985 	/***.....	dcl cobol_gen_driver_$Tr_Beg entry(char(*));/**/
      986 	/***.....	dcl cobol_gen_driver_$Tr_End entry(char(*));/**/
      987 
      988 	/***.....	dcl Trace_Bit bit(1) static external;/**/
      989 	/***.....	dcl Trace_Lev fixed bin static external;/**/
      990 	/***.....	dcl Trace_Line char(36) static external;/**/
      991 	/***.....	dcl ioa_ entry options(variable); /**/
      992 
      993 
      994 
      995 
      996 /* STATIC DECLARATIONS */
      997 
      998 dcl	1 basic_arg	static,
      999 	  2 pt		ptr init (null ()),		/* initialized to address of basic structure */
     1000 	  2 zeros		bit (144) init (""b);
     1001 dcl	1 name_arg	static,
     1002 	  2 pt		ptr init (null ()),		/* set each time to pt to varying char string containing name of program to be called */
     1003 	  2 type		fixed bin init (6),
     1004 	  2 zeros		bit (108) init (""b);
     1005 dcl	1 temp_arg	static,
     1006 	  2 pt		ptr init (null ()),		/* always null */
     1007 	  2 type		fixed bin init (3),
     1008 	  2 zeros		bit (108) init (""b);
     1009 dcl	1 value_arg	static,
     1010 	  2 pt		ptr init (null ()),		/* always null */
     1011 	  2 type		fixed bin init (1),
     1012 	  2 zeros		bit (108) init (""b);
     1013 dcl	1 upper_value_arg	static,
     1014 	  2 pt		ptr init (null ()),		/* always null */
     1015 	  2 type		fixed bin init (2),
     1016 	  2 zeros		bit (108) init (""b);
     1017 dcl	1 status_arg	static,
     1018 	  2 pt		ptr init (null ()),		/* always null */
     1019 	  2 type		fixed bin init (3),
     1020 	  2 off1		fixed bin init (40),
     1021 	  2 zeros		bit (72) init (""b);
     1022 
     1023 dcl	1 pr1_struct	static,
     1024 	  2 pr1		fixed bin init (1),
     1025 	  2 pointer_no	bit (3),
     1026 	  2 lock		fixed bin init (0),
     1027 	  2 switch	fixed bin init (0),
     1028 	  2 segno		fixed bin,
     1029 	  2 offset	fixed bin,
     1030 	  2 reset		fixed bin;
     1031 dcl	1 x5_struct	static,
     1032 	  2 x5		fixed bin init (15),
     1033 	  2 reg_no	bit (4),
     1034 	  2 lock		fixed bin init (0),
     1035 	  2 already_there	fixed bin,
     1036 	  2 contains	fixed bin init (0),
     1037 	  2 null_ptr	ptr init (null ()),
     1038 	  2 fill		bit (18) unaligned init ((18)"0"b),
     1039 	  2 literal	bit (18) unaligned;
     1040 dcl	1 aq_struct	static,
     1041 	  2 aq		fixed bin init (3),
     1042 	  2 reg_no	bit (4),
     1043 	  2 lock		fixed bin init (0),
     1044 	  2 already_there	fixed bin,
     1045 	  2 contains	fixed bin init (0),
     1046 	  2 null_ptr	ptr init (null ()),
     1047 	  2 fill		bit (18) unaligned init ((18)"0"b),
     1048 	  2 literal	bit (18) unaligned;
     1049 
     1050 dcl	1 basic_struct	static,
     1051 	  2 type		fixed bin init (1),
     1052 	  2 operand_no	fixed bin init (0),
     1053 	  2 lock		fixed bin init (0),
     1054 	  2 seg		fixed bin,
     1055 	  2 offset	fixed bin,
     1056 	  2 send_receive	fixed bin init (0);
     1057 dcl	1 atd_type9	static,
     1058 	  2 header	(4) fixed bin init (112, 0, 0, 9),
     1059 	  2 repl_ptr	(2) ptr init ((2) null ()),
     1060 	  2 fill1		bit (108) init (""b),
     1061 	  2 file_key_info,
     1062 	    3 fb		(6) fixed bin init (0, 0, 0, 200, 0, 0),
     1063 	    3 flags1	bit (36) init ("000000100100000000010000000100000000"b),
     1064 	    3 flags2	bit (36) init (""b),
     1065 	    3 seg		fixed bin init (1000),
     1066 	    3 off		fixed bin,
     1067 	  2 fill2		(7) fixed bin init (0, 0, 0, 0, 0, 0, 0);
     1068 dcl	1 catid_type9	static,
     1069 	  2 header	(4) fixed bin init (112, 0, 0, 9),
     1070 	  2 repl_ptr	(2) ptr init ((2) null ()),
     1071 	  2 fill1		bit (108) init (""b),
     1072 	  2 file_key_info,
     1073 	    3 fb		(6) fixed bin init (0, 0, 0, 0, 0, 0),
     1074 	    3 flags1	bit (36) init (""b),
     1075 	    3 flags2	bit (36) init (""b),
     1076 	    3 seg		fixed bin,
     1077 	    3 off		fixed bin,
     1078 	  2 fill2		(7) fixed bin init (0, 0, 0, 0, 0, 0, 0);
     1079 dcl	1 comp6_type9	static,
     1080 	  2 header	(4) fixed bin init (112, 0, 0, 9),
     1081 	  2 repl_ptr	(2) ptr init ((2) null ()),
     1082 	  2 fill1		bit (108) init (""b),
     1083 	  2 file_key_info,
     1084 	    3 fb1		(3) fixed bin init (0, 0, 0),
     1085 	    3 size	fixed bin init (0),
     1086 	    3 places_left	fixed bin,
     1087 	    3 places_right	fixed bin init (0),
     1088 	    3 flags1	bit (36) init ("010000100100001001000000000000000000"b),
     1089 	    3 flags2	bit (36) init (""b),
     1090 	    3 seg		fixed bin init (0),
     1091 	    3 off		fixed bin,
     1092 	  2 fill2		(7) fixed bin init (0, 0, 0, 0, 0, 0, 0);
     1093 dcl	1 fkey_type9	static,
     1094 	  2 header	(4) fixed bin init (112, 0, 0, 9),
     1095 	  2 repl_ptr	(2) ptr init ((2) null ()),
     1096 	  2 fill1		bit (108) init (""b),
     1097 	  2 file_key_info,
     1098 	    3 fb1		(3) fixed bin init (0, 0, 0),
     1099 	    3 size	fixed bin init (0),
     1100 	    3 fb2		(2) fixed bin init (0, 0),
     1101 	    3 flags1	bit (36) init (""b),
     1102 	    3 flags2	bit (36) init (""b),
     1103 	    3 seg		fixed bin,
     1104 	    3 off		fixed bin,
     1105 	  2 fill2		(7) fixed bin init (0, 0, 0, 0, 0, 0, 0);
     1106 dcl	1 type19		static,
     1107 	  2 wd0		fixed bin init (38),
     1108 	  2 wd1		fixed bin init (0),
     1109 	  2 wd2		fixed bin init (0),
     1110 	  2 wd3		fixed bin init (19),
     1111 	  2 wd4		fixed bin init (18),	/* verb number */
     1112 	  2 e		fixed bin init (1),		/* one operand after TO */
     1113 	  2 h		fixed bin,
     1114 	  2 j		fixed bin,
     1115 	  2 a		bit (3),
     1116 	  2 b		bit (1),
     1117 	  2 c		bit (1),
     1118 	  2 d		bit (2),
     1119 	  2 f		bit (2),
     1120 	  2 g		bit (2),
     1121 	  2 k		bit (5);
     1122 
     1123 dcl	1 ioerror		static,
     1124 	  2 cobol_code	fixed bin,
     1125 	  2 retry_tag	fixed bin,
     1126 	  2 is_tag	fixed bin,
     1127 	  2 ns_tag	fixed bin,
     1128 	  2 type1_ptr	ptr,
     1129 	  2 mode		fixed bin;
     1130 
     1131 dcl	unique_bits_vstring char (12) varying static init ("unique_bits_");
     1132 dcl	unique_chars_vstring
     1133 			char (13) varying static init ("unique_chars_");
     1134 dcl	get_pdir_vstring	char (9) varying static init ("get_pdir_");
     1135 
     1136 
     1137 /* EXTERNAL ENTRY NAMES */
     1138 
     1139 dcl	cobol_ioop_util$set_stz
     1140 			entry;
     1141 dcl	cobol_make_tagref	entry (fixed bin, fixed bin, ptr);
     1142 dcl	cobol_ioop_util$disp
     1143 			entry (fixed bin);
     1144 dcl	cobol_ioop_util$lda entry (fixed bin);
     1145 dcl	cobol_ioop_util$tra entry (fixed bin);
     1146 dcl	cobol_ioop_util$open_clean_up
     1147 			entry (ptr, fixed bin, fixed bin);
     1148 dcl	cobol_ioop_util$ldaldx5
     1149 			entry (fixed bin, fixed bin);
     1150 dcl	cobol_ioop_util$set_fsb
     1151 			entry (fixed bin (31), fixed bin);
     1152 dcl	cobol_gen_ioerror	entry (ptr, ptr);
     1153 dcl	cobol_gen_ioerror$finish_up
     1154 			entry (ptr, ptr);
     1155 dcl	cobol_call_op	entry (fixed bin, fixed bin);
     1156 dcl	cobol_reg_manager$after_op
     1157 			entry (fixed bin);
     1158 dcl	cobol_set_fsbptr	entry (ptr);
     1159 dcl	cobol_alloc$stack	entry (fixed bin, fixed bin, fixed bin);
     1160 dcl	cobol_read_ft	entry (fixed bin, ptr);
     1161 dcl	cobol_read_rand	entry (fixed bin, char (5), ptr);
     1162 dcl	cobol_define_tag	entry (fixed bin);
     1163 dcl	cobol_iomode	entry (ptr, ptr, fixed bin, fixed bin, bit (1) aligned);
     1164 
     1165 /* sub-generators */
     1166 dcl	cobol_move_gen	entry (ptr);
     1167 dcl	cobol_file_util$open
     1168 			entry (ptr, fixed bin);
     1169 dcl	cobol_io_util$move_lit
     1170 			entry (bit (3) aligned, fixed bin, fixed bin, char (*));
     1171 dcl	cobol_iocall	entry (ptr, ptr);
     1172 dcl	cobol_io_util$move	entry (bit (3) aligned, fixed bin, fixed bin, bit (3) aligned, fixed bin, fixed bin);
     1173 dcl	cobol_io_util$file_desc
     1174 			entry (fixed bin (24));
     1175 dcl	cobol_open_util$make_pdir_path
     1176 			entry (fixed bin, fixed bin, fixed bin, fixed bin);
     1177 
     1178 /* BUILTIN FUNCTIONS */
     1179 
     1180 /*****	Declaration for builtin function	*****/
     1181 
     1182 dcl	(substr, mod, binary, fixed, addr, addrel, rel, length, string, unspec, null, index)
     1183 			builtin;
     1184 
     1185 
     1186 
     1187 
     1188 
  1     1 
  1     2 /* BEGIN INCLUDE FILE ...   cobol_file_table.incl.pl1 */
  1     3 /*     <<<   INCLUDE FILE FOR FILE TABLE IN COMMON   >>>     */
  1     4 
  1     5 /* Modified on 09/30/80 by FCH, [4.4-1], density is 6250 is supported */
  1     6 /* Modified on 12/05/78 by RAL, [3.0-3], added dupl_alt from dummy102 */
  1     7 /* Modified on 11/21/78 by RAL, [3.0-2], added space for abs_record_offset from filler */
  1     8 /* Modified on 10/26/78 by RAL, [3.0-1], added space for file_desc_1 table offset from filler */
  1     9 /*     <<<   LAST MODIFIED ON 06-02-77 by GM         >>>	*/
  1    10 /*     <<<   LAST MODIFIED ON 05-31-77 by GM         >>>	*/
  1    11 /*     <<<   LAST MODIFIED  ON 06-30-76 by GM        >>>	*/
  1    12 /*     <<<   LAST MODIFIED ON 06-07-76 by GM    >>>     */
  1    13 /*     <<<   LAST MODIFIED ON 11-29-74 by orn   >>>     */
  1    14 
  1    15 /*
  1    16*A file table is created in variable common for each file selected in the
  1    17*environment division.  The fields of a given file table provide information
  1    18*about the specific file for which the file table is generated.  The
  1    19*addresses which may be contained in the various "info" fields of the file
  1    20*table are addresses in variable common.
  1    21**/
  1    22 
  1    23 /*   THE FILE TABLE STRUCTURE   */
  1    24 
  1    25 dcl	1 file_table based (ft_ptr),
  1    26 		2 next char (5),
  1    27 		2 ifn char (16),
  1    28 		2 attach_options_info char(5),	/*06/02/77*/
  1    29 		2 replacement_info char(5),		/*06/02/77*/
  1    30 		2 file_id_info char(5),		/*05/31/77*/
  1    31 		2 retention_info char(5),		/*05/31/77*/
  1    32 		2 filler0 char (3) ,			/* [3.0-1] */
  1    33 		2 file_desc_1_offset fixed bin (24),		/* [3.0-1] */
  1    34 		2 abs_record_offset fixed bin (24),		/* [3.-02] */
  1    35 		2 filler char(5),		/* this area is available.*/
  1    36 		2 padding_char char (1),
  1    37 		2 banner_char char (1),
  1    38 		2 file_status_info char (5),
  1    39 		2 extra_status_info char (5),
  1    40 		2 cat_id_info char (5),
  1    41 		2 r_key_info char (5),
  1    42 		2 alt_key_info char (5),
  1    43 		2 rec_do_info char (5),
  1    44 		2 label_info char (5),
  1    45 		2 data_info char (5),
  1    46 		2 report_info char (5),
  1    47 		2 linage_info char (5),
  1    48 		2 optional bit (1),						/*06/07/76*/
  1    49 		2 external bit (1),
  1    50 		2 file_status bit (1),
  1    51 		2 extra_status bit (1),
  1    52 		2 sysin bit (1),
  1    53 		2 sysout bit (1),
  1    54 		2 move_mode bit (1),
  1    55 		2 locate_mode bit (1),
  1    56 		2 fixed_recs bit (1),
  1    57 		2 variable_recs bit (1),
  1    58 		2 spanned_recs bit (1),				/*06/07/76*/
  1    59 		2 interchange bit (1),				/*06/07/76*/
  1    60 		2 relative_key bit (1),
  1    61 		2 record_key bit (1),
  1    62 		2 even_parity bit (1),
  1    63 		2 odd_parity bit (1),
  1    64 		2 padding bit (1),
  1    65 		2 banner bit (1),
  1    66 		2 random bit (1),
  1    67 		2 no_file_lockout bit (1),
  1    68 		2 no_write_check bit (1),
  1    69 		2 no_resident_index bit (1),
  1    70 		2 same_file bit (1),
  1    71 		2 sort_file bit (1),
  1    72 		2 rec_do bit (1),
  1    73 		2 linage bit (1),
  1    74 		2 code_set_clause bit (1),
  1    75 		/* history */
  1    76 		2 close bit (1),
  1    77 		2 delete bit (1),
  1    78 		2 open_in bit (1),
  1    79 		2 open_out bit (1),
  1    80 		2 open_io bit (1),
  1    81 		2 open_ext bit (1),
  1    82 		2 read bit (1),
  1    83 		2 release bit (1),
  1    84 		2 return_bit bit (1),
  1    85 		2 rewrite bit (1),
  1    86 		2 sort bit (1),
  1    87 		2 start bit (1),
  1    88 		2 use_error bit (1),
  1    89 		2 write bit (1),
  1    90 		2 read_next bit (1),
  1    91 		2 read_key bit (1),
  1    92 		2 accept bit (1),
  1    93 		2 display bit (1),
  1    94 		2 unequal_recs bit (1),
  1    95 		2 dummy_sysin bit (1),
  1    96 		2 dummy_sysout bit (1),
  1    97 		2 file_no fixed bin,
  1    98 		2 uca_offset fixed bin(24),
  1    99 		2 cra_seg fixed bin,
  1   100 		2 cra_offset fixed bin(24),
  1   101 		2 max_cra_size fixed bin(24),
  1   102 		2 catalogued fixed bin,
  1   103 		2 organization fixed bin,
  1   104 		2 org_qual fixed bin,
  1   105 		2 access fixed bin,
  1   106 		2 buffers fixed bin,
  1   107 		2 device fixed bin,
  1   108 		2 record_prefix fixed bin,				/*06/07/76*/
  1   109 		2 alternate_keys fixed bin,
  1   110 		2 record_format fixed bin,
  1   111 		2 label_format fixed bin,
  1   112 		2 key_location fixed bin,
  1   113 		2 key_size fixed bin,
  1   114 		2 temporary fixed bin,
  1   115 		2 address_format fixed bin,
  1   116 		2 same_area_clause fixed bin,
  1   117 		2 same_rec_clause fixed bin,
  1   118 		2 same_sort_clause fixed bin,
  1   119 		2 mult_clause_no fixed bin,
  1   120 		2 mult_position_no fixed bin,
  1   121 		2 block_desc fixed bin,
  1   122 		2 block_min fixed bin(24),
  1   123 		2 block_max fixed bin(24),
  1   124 		2 rec_min fixed bin(24),
  1   125 		2 rec_max fixed bin(24),
  1   126 		2 label_count fixed bin,
  1   127 		2 ifn_size fixed bin,
  1   128 		2 data_count fixed bin,
  1   129 		2 report_count fixed bin,
  1   130 		2 code_set fixed bin,
  1   131 		2 error_exit fixed bin,
  1   132 		2 prefix_size fixed bin,
  1   133 		2 blocked bit (1),
  1   134 		2 variable bit (1),
  1   135 		2 unbannered bit (1),
  1   136 		2 prefix_clause bit (1),
  1   137 		2 symbolic bit (1),
  1   138 		2 address_format_bit bit (1),
  1   139 		2 bsn bit(1),						/*06/07/76*/
  1   140 		2 process_area bit(1),					/*06/07/76*/
  1   141 		2 dupl_alt bit (1),			/* [3.0-3] */
  1   142 		2 dummy102 bit (23),
  1   143 		2 name_size fixed bin,
  1   144 		2 name char(32),
  1   145 		2 id char(32),
  1   146 		2 temp bit(1) ,
  1   147 		2 perm bit(1) ,
  1   148 		2 attach bit(1) ,
  1   149 		2 detach bit(1) ,
  1   150 		2 fsb ,		/* file state block */
  1   151 		     3 seg fixed bin(24), /* internal addr */
  1   152 		     3 off fixed bin(24),
  1   153 		2 tape,
  1   154 		     3 density bit(1) ,	/* 0-hi 1-lo */
  1   155 		     3 retain bit(1),	/* 0 not retained across attachment, 1 retained */
  1   156 		     3 force bit(1),	/* 0 check retention date, 1 no check */
  1   157 		     3 protect bit(1) ,	/* 0-no 1-yes */
  1   158 		     3 den_6250 bit(1),	/* 0-no 1-yes */		/*[4.4-1]*/
  1   159 		2 cat_nm char(200),
  1   160 		2 ao_len fixed bin(24),		/* attach options */
  1   161 		2 ao_string char(256),
  1   162 		2 output_mode fixed bin,	/*	0 not specified
  1   163*						1 generation
  1   164*						2 modification
  1   165*						3 replacement literal
  1   166*						4 replacement dataname	*/
  1   167 		2 om_len	fixed bin,		/* length of output mode */
  1   168 		2 om_string char(17),
  1   169 		2 tape_device fixed bin,	/*	0 not specified
  1   170*						1 integer
  1   171*						2 dataname	*/
  1   172 		2 tape_device_num fixed bin,
  1   173 		2 tape_device_key char(5),
  1   174 		2 add_cat_key char(5);
  1   175 
  1   176 
  1   177 /* END INCLUDE FILE ...   cobol_file_table.incl.pl1 */
  1   178 
     1189 
  2     1 
  2     2 /* BEGIN INCLUDE FILE ... cobol_file_key.incl.pl1 */
  2     3 /* Last modified on 03/30/78 by FCH */
  2     4 
  2     5 /*
  2     6*A file key record is created in variable common for any one of several
  2     7*data items which may be associated with a file name.  The key_type field in
  2     8*the file key record identifies the type of item for which the record is
  2     9*created.  The name in a file key record is resolved by the replacement
  2    10*phase, and a section of the type 9 entry in the name table for the
  2    11*specified data item is stored in the file key record.  The stored
  2    12*description is subsequently used by the generator phase.
  2    13**/
  2    14 
  2    15 /*   THE FILE KEY RECORD STRUCTURE   */
  2    16 
  2    17 dcl 	1 file_key based (fkey_ptr),
  2    18 		2 next char(5),
  2    19 		2 next_alt char(5),
  2    20 		2 qual char(5),
  2    21 		2 info,
  2    22 		3 duplicates bit(1),
  2    23 		3 filler bit(7),
  2    24 		2 file_no fixed bin,
  2    25 		2 key_type fixed bin,
  2    26 		2 line fixed bin,
  2    27 		2 column fixed bin,
  2    28 		2 temp_seg fixed bin,
  2    29 		2 temp_offset fixed bin(24),
  2    30 		2 desc char(40),
  2    31 		2 name_size fixed bin,
  2    32 		2 name char(0 refer(file_key.name_size));
  2    33 
  2    34 /* END INCLUDE FILE ... cobol_file_key.incl.pl1 */
  2    35 
     1190 
  3     1 
  3     2 /* BEGIN INCLUDE FILE ...   cobol_linage_rec.incl.pl1 */
  3     3 /*     <<< LAST MODIFIED ON 7-29-74 by FCH   >>>     */
  3     4 
  3     5 /*	***STRUCTURE SIZE INFORMATION***        */
  3     6 /*     THE SIZE OF THIS STRUCTURE IN BYTES, (EXCLUDING VARIABLE
  3     7*       LENGTH ENTITIES), FOR EACH HARDWARE IMPLEMENTATION IS:
  3     8*
  3     9*	HARDWARE	|	SIZE (BYTES)
  3    10*	---------------------------------
  3    11*	645/6180	|	64
  3    12*	---------------------------------
  3    13**/
  3    14 
  3    15 /*
  3    16*A linage record is entered into variable common for each linage clause
  3    17*specified in the data division.
  3    18**/
  3    19 
  3    20 /*   THE LINAGE RECORD STRUCTURE   */
  3    21 
  3    22 dcl	1 linage_rec based (linage_ptr),
  3    23 		2 body fixed bin (15),
  3    24 		2 footing fixed bin (15),
  3    25 		2 top fixed bin (15),
  3    26 		2 bottom fixed bin (15),
  3    27 		2 body_int fixed bin (31),
  3    28 		2 footing_int fixed bin (31),
  3    29 		2 top_int fixed bin (31),
  3    30 		2 bottom_int fixed bin (31),
  3    31 		2 body_name char (5),
  3    32 		2 footing_name char (5),
  3    33 		2 top_name char (5),
  3    34 		2 bottom_name char (5),
  3    35 		2 name_count fixed bin (15),
  3    36 		2 gen_seg fixed bin (15),
  3    37 		2 gen_offset fixed bin (31),
  3    38 		2 name_desc(0 refer(linage_rec.name_count)) char(40);
  3    39 
  3    40 
  3    41 
  3    42 /* END INCLUDE FILE ...   cobol_linage_rec.incl.pl1 */
  3    43 
     1191 
  4     1 
  4     2 /* BEGIN INCLUDE FILE ... cobol_type1.incl.pl1 */
  4     3 /* Last modified on 11/19/76 by ORN */
  4     4 
  4     5 /*
  4     6*A reserved word token is created in the minpral files for each occurrence
  4     7*of a reserved word in the source program.  The value of the key field
  4     8*indicates the specific reserved word which a type 1 token represents.
  4     9**/
  4    10 
  4    11 dcl rw_ptr ptr;
  4    12 
  4    13 /* BEGIN DECLARATION OF TYPE1 (RESERVED WORD) TOKEN */
  4    14 dcl	1 reserved_word based (rw_ptr),
  5     1 
  5     2 /* begin include file ... cobol_TYPE1.incl.pl1 */
  5     3 /* Last modified on 11/17/76 by ORN */
  5     4 /* Last modified on 12/28/76 by FCH */
  5     5 /* Last modified on 12/16/80 by FCH */
  5     6 
  5     7 		/* header */
  5     8 		2 size fixed bin,
  5     9 		2 line fixed bin,
  5    10 		2 column fixed bin,
  5    11 		2 type fixed bin,
  5    12 		/* body */
  5    13 		2 key fixed bin,
  5    14 		/* procedure division class bits */
  5    15 		2 verb bit (1),
  5    16 		2 arith_op bit (1),
  5    17 		2 figcon bit (1),
  5    18 		2 terminator bit (1),
  5    19 		2 end_dec bit (1),
  5    20 		2 rel_op bit (1),
  5    21 		2 imper_verb bit (1),
  5    22 		2 end_cobol bit (1),
  5    23 		/* data division class bits */
  5    24 		2 section_header bit (1),
  5    25 		2 fs_ind bit (1),
  5    26 		2 fd_clause bit (1),
  5    27 		2 dd_clause bit (1),
  5    28 		2 cd_input bit (1),
  5    29 		2 cd_output bit (1),
  5    30 		2 cset_name bit (1),
  5    31 		2 ss_division bit (1),
  5    32 		2 repl_jump_ind bit (4),
  5    33 		2 ided_recovery bit (1),
  5    34 		2 report_writer bit (5),
  5    35 		2 ss_desc_entry bit (1),
  5    36 		2 jump_index fixed bin,
  5    37 		2 length fixed bin,
  5    38 		2 name char(0 refer(reserved_word.length));
  5    39 
  5    40 
  5    41 
  5    42 /* end include file ... cobol_TYPE1.incl.pl1 */
  5    43 
  4    15 
  4    16 /* END DECLARATION OF TYPE1 (RESERVED WORD) TOKEN */
  4    17 
  4    18 /* END INCLUDE FILE ... cobol_type1.incl.pl1 */
  4    19 
     1192 
  6     1 
  6     2 /* BEGIN INCLUDE FILE ... cobol_type9.incl.pl1 */
  6     3 /* Last modified on 11/19/76 by ORN */
  6     4 
  6     5 /*
  6     6*A type 9 data name token is entered into the name table by the data
  6     7*division syntax phase for each data name described in the data division.
  6     8*The replacement phase subsequently replaces type 8 user word references
  6     9*to data names in the procedure division minpral file with the corresponding
  6    10*type 9 tokens from the name table.
  6    11**/
  6    12 
  6    13 /* dcl dn_ptr ptr; */
  6    14 
  6    15 /* BEGIN DECLARATION OF TYPE9 (DATA NAME) TOKEN */
  6    16 dcl 1 data_name based (dn_ptr),
  7     1 
  7     2 /* begin include file ... cobol_TYPE9.incl.pl1 */
  7     3 /* Last modified on 06/19/77 by ORN */
  7     4 /* Last modified on 12/28/76 by FCH */
  7     5 
  7     6 		/* header */
  7     7 		2 size fixed bin,
  7     8 		2 line fixed bin,
  7     9 		2 column fixed bin,
  7    10 		2 type fixed bin,
  7    11 		/* body */
  7    12 		2 string_ptr ptr,
  7    13 		2 prev_rec ptr,
  7    14 		2 searched bit (1),
  7    15 		2 duplicate bit (1),
  7    16 		2 saved bit (1),
  7    17 		2 debug_ind bit (1),
  7    18 		2 filler2 bit (3),
  7    19 		2 used_as_sub bit (1),
  7    20 		2 def_line fixed bin,
  7    21 		2 level fixed bin,
  7    22 		2 linkage fixed bin,
  7    23 		2 file_num fixed bin,
  7    24 		2 size_rtn fixed bin,
  7    25 		2 item_length fixed bin(24),
  7    26 		2 places_left fixed bin,
  7    27 		2 places_right fixed bin,
  7    28 		/* description */
  7    29 		2 file_section bit (1),
  7    30 		2 working_storage bit (1),
  7    31 		2 constant_section bit (1),
  7    32 		2 linkage_section bit (1),
  7    33 		2 communication_section bit (1),
  7    34 		2 report_section bit (1),
  7    35 		2 level_77 bit (1),
  7    36 		2 level_01 bit (1),
  7    37 		2 non_elementary bit (1),
  7    38 		2 elementary bit (1),
  7    39 		2 filler_item bit (1),
  7    40 		2 s_of_rdf bit (1),
  7    41 		2 o_of_rdf bit (1),
  7    42 		2 bin_18 bit (1),
  7    43 		2 bin_36 bit (1),
  7    44 		2 pic_has_l bit (1),
  7    45 		2 pic_is_do bit (1),
  7    46 		2 numeric bit (1),
  7    47 		2 numeric_edited bit (1),
  7    48 		2 alphanum bit (1),
  7    49 		2 alphanum_edited bit (1),
  7    50 		2 alphabetic bit (1),
  7    51 		2 alphabetic_edited bit (1),
  7    52 		2 pic_has_p bit (1),
  7    53 		2 pic_has_ast bit (1),
  7    54 		2 item_signed bit(1),
  7    55 		2 sign_separate bit (1),
  7    56 		2 display bit (1),
  7    57 		2 comp bit (1),
  7    58 		2 ascii_packed_dec_h bit (1),	/* as of 8/16/76  this field used for comp8. */
  7    59 		2 ascii_packed_dec bit (1),
  7    60 		2 ebcdic_packed_dec bit (1),
  7    61 		2 bin_16 bit (1),
  7    62 		2 bin_32 bit (1),
  7    63 		2 usage_index bit (1),
  7    64 		2 just_right bit (1),
  7    65 		2 compare_argument bit (1),
  7    66 		2 sync bit (1),
  7    67 		2 temporary bit (1),
  7    68 		2 bwz bit (1),
  7    69 		2 variable_length bit (1),
  7    70 		2 subscripted bit (1),
  7    71 		2 occurs_do bit (1),
  7    72 		2 key_a bit (1),
  7    73 		2 key_d bit (1),
  7    74 		2 indexed_by bit (1),
  7    75 		2 value_numeric bit (1),
  7    76 		2 value_non_numeric bit (1),
  7    77 		2 value_signed bit (1),
  7    78 		2 sign_type bit (3),
  7    79 		2 pic_integer bit (1),
  7    80 		2 ast_when_zero bit (1),
  7    81 		2 label_record bit (1),
  7    82 		2 sign_clause_occurred bit (1),
  7    83 		2 okey_dn bit (1),
  7    84 		2 subject_of_keyis bit (1),
  7    85 		2 exp_redefining bit (1),
  7    86 		2 sync_in_rec bit (1),
  7    87 		2 rounded bit (1),
  7    88 		2 ad_bit bit (1),
  7    89 		2 debug_all bit (1),
  7    90 		2 overlap bit (1),
  7    91 		2 sum_counter bit (1),
  7    92 		2 exp_occurs bit (1),
  7    93 		2 linage_counter bit (1),
  7    94 		2 rnm_01 bit (1),
  7    95 		2 aligned bit (1),
  7    96 		2 not_user_writable bit (1),
  7    97 		2 database_key bit (1),
  7    98 		2 database_data_item bit (1),
  7    99 		2 seg_num fixed bin,
  7   100 		2 offset fixed bin(24),
  7   101 		2 initial_ptr fixed bin,
  7   102 		2 edit_ptr fixed bin,
  7   103 		2 occurs_ptr fixed bin,
  7   104 		2 do_rec char(5),
  7   105 		2 bitt bit (1),
  7   106 		2 byte bit (1),
  7   107 		2 half_word bit (1),
  7   108 		2 word bit (1),
  7   109 		2 double_word bit (1),
  7   110 		2 half_byte bit (1),
  7   111 		2 filler5 bit (1),
  7   112 		2 bit_offset bit (4),
  7   113 		2 son_cnt bit (16),
  7   114 		2 max_red_size fixed bin(24),
  7   115 		2 name_size fixed bin,
  7   116 		2 name char(0 refer(data_name.name_size));	
  7   117 
  7   118 
  7   119 
  7   120 /* end include file ... cobol_TYPE9.incl.pl1 */
  7   121 
  6    17 
  6    18 /* END DECLARATION OF TYPE9 (DATA NAME) TOKEN */
  6    19 
  6    20 /* END INCLUDE FILE ... cobol_type9.incl.pl1 */
  6    21 
     1193 
  8     1 
  8     2 /* BEGIN INCLUDE FILE ... cobol_type12.incl.pl1 */
  8     3 /* Last modified on 11/19/76 by ORN */
  8     4 
  8     5 /*
  8     6*A type 12 file name token is entered into the name table by the data
  8     7*division syntax phase for each file name appearing in the data division.
  8     8*When the replacement phase processes the procedure division minpral file,
  8     9*each reference to a file name is replaced with the type 12 token created
  8    10*for that file name.
  8    11**/
  8    12 
  8    13 /* dcl name_ptr ptr; */
  8    14 
  8    15 /* BEGIN DECLARATION OF TYPE12 (FILE NAME) TOKEN */
  8    16 dcl 	1 fd_token based (name_ptr),
  9     1 
  9     2 /* begin include file ... cobol_TYPE12.incl.pl1 */
  9     3 /* Last modified on 11/17/76 by ORN */
  9     4 
  9     5 		/* header */
  9     6 		2 size fixed bin,
  9     7 		2 line fixed bin,
  9     8 		2 column fixed bin,
  9     9 		2 type fixed bin,
  9    10 		/* body */
  9    11 		2 string_ptr ptr,
  9    12 		2 prev_rec ptr,
  9    13 		2 info bit (8),
  9    14 		2 def_line fixed bin,
  9    15 		2 file_no fixed bin,
  9    16 		2 name_size fixed bin,
  9    17 		2 name char(0 refer(fd_token.name_size));	
  9    18 
  9    19 /* end include file ... cobol_TYPE12.incl.pl1 */
  9    20 
  8    17 
  8    18 /* END DECLARATION OF TYPE12 (FILE NAME) TOKEN */
  8    19 
  8    20 
  8    21 /* END INCLUDE FILE ... cobol_type12.incl.pl1 */
  8    22 
     1194 
 10     1 
 10     2 /* BEGIN INCLUDE FILE ... cobol_type19.incl.pl1 */
 10     3 /* last modified on 11/19/76 by ORN */
 10     4 
 10     5 /*
 10     6*A type 19 end of statement token is created in the procedure division
 10     7*minpral file at the end of each minpral statement generated by the
 10     8*procedure division syntax phase.  A minpral statement may be a complete or
 10     9*partial source language statement.  A type 19 token contains information
 10    10*describing the statement which it delimits.
 10    11**/
 10    12 
 10    13 dcl eos_ptr ptr;
 10    14 
 10    15 /* BEGIN DECLARATION OF TYPE19 (END STATEMENT) TOKEN */
 10    16 dcl	1 end_stmt based (eos_ptr),
 11     1 
 11     2 /* begin include file ... cobol_TYPE19.incl.pl1 */
 11     3 /* Last modified on 11/17/76 by ORN */
 11     4 
 11     5 		/* header */
 11     6 		2 size fixed bin,
 11     7 		2 line fixed bin,
 11     8 		2 column fixed bin,
 11     9 		2 type fixed bin,
 11    10 		/* body */
 11    11 		2 verb fixed bin,
 11    12 		2 e fixed bin,
 11    13 		2 h fixed bin,
 11    14 		2 i fixed bin,
 11    15 		2 j fixed bin,
 11    16 		2 a bit (3),
 11    17 		2 b bit (1),
 11    18 		2 c bit (1),
 11    19 		2 d bit (2),
 11    20 		2 f bit (2),
 11    21 		2 g bit (2),
 11    22 		2 k bit (5),
 11    23 		2 always_an bit (1);
 11    24 
 11    25 /* end include file ... cobol_TYPE19.incl.pl1 */
 11    26 
 10    17 
 10    18 /* END DECLARATION OF TYPE19 (END STATEMENT) TOKEN */
 10    19 
 10    20 /*
 10    21*FIELD		CONTENTS
 10    22*
 10    23*size		The total size in bytes of this end of statement token.
 10    24*line		0
 10    25*column		0
 10    26*type		19
 10    27*verb		A value indicating the verb in this statement
 10    28*		 1 = accept
 10    29*		 2 = add
 10    30*		 3 = on size error
 10    31*		 4 = alter
 10    32*		 5 = call
 10    33*		 7 = cancel
 10    34*		 8 = close
 10    35*		 9 = divide
 10    36*		10 = multiply
 10    37*		11 = subtract
 10    38*		12 = exit
 10    39*		14 = go
 10    40*		15 = merge
 10    41*		16 = initiate
 10    42*		17 = inspect
 10    43*		18 = move
 10    44*		19 = open
 10    45*		20 = perform
 10    46*		21 = read
 10    47*		23 = receive
 10    48*		24 = release
 10    49*		25 = return
 10    50*		26 = search
 10    51*		27 = rewrite
 10    52*		29 = seek
 10    53*		30 = send
 10    54*		31 = set
 10    55*		33 = stop
 10    56*		34 = string
 10    57*		35 = suspend
 10    58*		36 = terminate
 10    59*		37 = unstring
 10    60*		38 = write
 10    61*		39 = use
 10    62*		40 = compute
 10    63*		41 = disable
 10    64*		42 = display
 10    65*		43 = enable
 10    66*		45 = generate
 10    67*		46 = hold
 10    68*		48 = process
 10    69*		49 = sort
 10    70*		52 = procedure
 10    71*		53 = declaratives
 10    72*		54 = section name
 10    73*		55 = paragraph name
 10    74*		98 = end
 10    75*e,h,i,j		The significance of these fields differs with each
 10    76*		statement.  These fields are normally used as counters.
 10    77*a,b,c,d,f,g,k	The significance of these fields differs with each
 10    78*		statement.  These fields are normally used as indicators.
 10    79**/
 10    80 
 10    81 /* END INCLUDE FILE ... cobol_type19.incl.pl1 */
 10    82 
     1195 
 12     1 
 12     2 /* BEGIN INCLUDE FILE ...   cobol_fixed_common.incl.pl1 */
 12     3 /* Modified on 10/27/82 by FCH, [5.1-1], cobol_cln added to save last line num, BUG543(phx13643) */
 12     4 /* Modified on 07/31/80 by FCH, [4.3-1], use_reporting field added for Report Writer */
 12     5 /* Modified on 03/30/79 by FCH, [4.1-1], -card option added */
 12     6 /* Modified on 03/30/79 by FCH, [4.0-2], -svNM option added */
 12     7 /* Modified on 03/02/79 by FCH, [4.0-1], -levNM option added */
 12     8 /* Modified by RAL on 10/13/78, [4.0-0], Added option exp from fil2. */
 12     9 /* Modified by BC on 06/20/77, descriptor added.	*/
 12    10 /* Modified by BC on 06/02/77, init_cd_seg, init_cd_offset added.	*/
 12    11 /* Modified by BC  on 1/21/77, options.profile added.	*/
 12    12 /* Modified by FCH on 7/6/76, sysin_fno & sysout_fno deleted, accept_device & display_device added */
 12    13 /* Modified by FCH on 5/20/77, comp_level added */
 12    14 
 12    15 
 12    16 /*     THE SIZE OF THIS STRUCTURE IN BYTES, (EXCLUDING VARIABLE
 12    17*   LENGTH ENTITIES), FOR EACH HARDWARE IMPLEMENTATION IS:
 12    18*
 12    19*   HARDWARE	|	SIZE (BYTES)
 12    20*   ---------------------------------
 12    21*   645/6180	|	464
 12    22*   P7		|	396
 12    23*   ---------------------------------
 12    24*   */
 12    25 
 12    26 dcl 	1 fixed_common based (  cobol_com_ptr),
 12    27     		2 prog_name char (30),
 12    28    		2 compiler_rev_no char (25),
 12    29     		2 phase_name char (6),
 12    30     		2 currency char (1),
 12    31     		2 fatal_no fixed bin,
 12    32     		2 warn_no fixed bin,
 12    33     		2 proc_counter fixed bin,
 12    34     		2 spec_tag_counter fixed bin,
 12    35     		2 file_count fixed bin,
 12    36     		2 filedescr_offsets (20) char (5),
 12    37     		2 perf_alter_info char (5),
 12    38     		2 another_perform_info char (5),
 12    39     		2 sort_in_info char (5),
 12    40     		2 odo_info char (5),
 12    41     		2 size_seg fixed bin,
 12    42     		2 size_offset fixed bin(24),
 12    43     		2 size_perform_info char (5),
 12    44     		2 rename_info char (5),
 12    45     		2 report_names char (5),
 12    46     		2 rw_buf_seg fixed bin,
 12    47     		2 rw_buf_offset fixed bin(24),
 12    48     		2 rw_buf_length fixed bin(24),
 12    49     		2 file_keys char (5),
 12    50     		2 search_keys char (5),
 12    51     		2 dd_seg_size fixed bin(24),
 12    52     		2 pd_seg_size fixed bin(24),
 12    53     		2 seg_limit fixed bin ,
 12    54     		2 number_of_dd_segs fixed bin,
 12    55     		2 seg_info char (5),
 12    56     		2 number_of_ls_pointers fixed bin,
 12    57     		2 link_sec_seg fixed bin,
 12    58     		2 link_sec_offset fixed bin(24),
 12    59     		2 sra_clauses fixed bin,
 12    60     		2 fix_up_info char (5),
 12    61     		2 linage_info char (5),
 12    62     		2 first_dd_item char (5),
 12    63     		2 sort_out_info char (5),
 12    64     		2 db_info char (5),
 12    65     		2 realm_info char (5),
 12    66     		2 rc_realm_info char (5),
 12    67     		2 last_file_key char (5),
 12    68     		2 prog_coll_seq fixed bin,
 12    69 		2 init_cd_seg fixed bin,
 12    70 		2 init_cd_offset fixed bin(24),
 12    71     		2 input_error_exit fixed bin,
 12    72    		2 output_error_exit fixed bin,
 12    73     		2 i_o_error_exit fixed bin,
 12    74     		2 extend_error_exit fixed bin,
 12    75     		2 dummy15 fixed bin,
 12    76     		2 options,
 12    77       			3 cu bit (1),
 12    78       			3 st bit (1),
 12    79       			3 wn bit (1),
 12    80       			3 obs bit (1),
 12    81       			3 dm bit (1),
 12    82       			3 xrl bit (1),
 12    83       			3 xrn bit (1),
 12    84       			3 src bit (1),
 12    85       			3 obj bit (1),
 12    86       			3 exs bit (1),
 12    87       			3 sck bit (1),
 12    88       			3 rno bit (1),
 12    89 			3 u_l bit (1),
 12    90 			3 cnv bit (1),
 12    91 			3 cos bit (1),
 12    92 			3 fmt bit (1),
 12    93 			3 profile bit(1),
 12    94 			3 nw bit (1),
 12    95 			3 exp bit (1),		/* [4.0-0] */
 12    96 			3 card bit (1),  /*[4.1-1]*/
 12    97 			3 fil2 bit (5),
 12    98 			3 m_map bit (1),
 12    99 			3 m_bf bit (1),
 12   100 			3 m_fat bit (1),
 12   101 			3 m_wn bit (1),
 12   102 			3 m_obs bit(1),
 12   103 			3 pd bit(1),
 12   104       			3 oc bit(1),
 12   105     		2 supervisor bit (1),
 12   106     		2 dec_comma bit (1),
 12   107     		2 init_cd bit (1),
 12   108     		2 corr bit (1),
 12   109     		2 initl bit (1),
 12   110     		2 debug bit (1),
 12   111     		2 report bit (1),
 12   112     		2 sync_in_prog bit (1),
 12   113     		2 pd_section bit (1),
 12   114     		2 list_switch bit (1),
 12   115     		2 alpha_cond bit (1),
 12   116     		2 num_cond bit (1),
 12   117     		2 spec_sysin bit (1),
 12   118     		2 spec_sysout bit (1),
 12   119     		2 cpl_files bit (1),
 12   120     		2 obj_dec_comma bit (1),
 12   121 		2 default_sign_type bit (3),
 12   122 		2 use_debug bit(1),
 12   123 		2 syntax_trace bit(1),
 12   124 		2 comp_defaults,
 12   125 			3 comp	bit(1),
 12   126 			3 comp_1	bit(1),
 12   127 			3 comp_2	bit(1),
 12   128 			3 comp_3	bit(1),
 12   129 			3 comp_4	bit(1),
 12   130 			3 comp_5	bit(1),
 12   131 			3 comp_6	bit(1),
 12   132 			3 comp_7	bit(1),
 12   133 			3 comp_8 bit(1),
 12   134 		2 disp_defaults,
 12   135 			3 disp	bit(1),
 12   136 			3 disp_1	bit(1),
 12   137 			3 disp_2	bit(1),
 12   138 			3 disp_3	bit(1),
 12   139 			3 disp_4	bit(1),
 12   140 			3 disp_5  bit(1),
 12   141 			3 disp_6  bit(1),
 12   142 			3 disp_7  bit(1),
 12   143 		2 descriptor bit(2),
 12   144 		2 levsv  bit(3),		/*[4.0-1]*/
 12   145 		2 use_reporting bit(1),	/*[4.3-1]*/
 12   146 		2 cd bit(1),		/*[4.4-1]*/
 12   147 		2 dummy17 bit(3),
 12   148    		2 lvl_rstr bit(32),
 12   149    		2 inst_rstr bit(32),
 12   150 		2 comp_level char(1),
 12   151 		2 dummy18 char(30),
 12   152 		2 object_sign char (1),
 12   153     		2 last_print_rec char (5),
 12   154     		2 coll_seq_info char (5),
 12   155     		2 sys_status_seg fixed bin,
 12   156    		2 sys_status_offset fixed bin(24),
 12   157    		2 compiler_id fixed bin,
 12   158    		2 date_comp_ln fixed bin,
 12   159    		2 compile_mode bit(36),
 12   160    		2 default_temp fixed bin,
 12   161    		2 accept_device fixed bin,
 12   162    		2 display_device fixed bin,
 12   163    		2 cobol_cln fixed bin,	/*[5.1-1]*/
 12   164 		2 alphabet_offset fixed bin;
 12   165 
 12   166 
 12   167 
 12   168 /* END INCLUDE FILE ...   cobol_fixed_common.incl.pl1 */
 12   169 
     1196 
 13     1 
 13     2 /* BEGIN INCLUDE FILE ... cobol_ext_.incl.pl1 */
 13     3 /* Last modified on 06/17/76 by ORN */
 13     4 /* Last modified on 12/28/76 by FCH */
 13     5 /* Last modified on 12/01/80 by FCH */
 13     6 
 13     7 /*    <<<   SHARED EXTERNALS INCLUDE FILE   >>>    */
 13     8 
 13     9 
 13    10 dcl     cobol_ext_$cobol_afp ptr ext;
 13    11 dcl     cobol_afp ptr defined (  cobol_ext_$cobol_afp);
 13    12 dcl     cobol_ext_$cobol_analin_fileno ptr ext;
 13    13 dcl     cobol_analin_fileno ptr defined (  cobol_ext_$cobol_analin_fileno);
 13    14 dcl     cobol_ext_$report_first_token ptr ext;
 13    15 dcl     report_first_token ptr defined( cobol_ext_$report_first_token);
 13    16 dcl     cobol_ext_$report_last_token ptr ext;
 13    17 dcl     report_last_token ptr defined ( cobol_ext_$report_last_token);
 13    18 dcl     cobol_ext_$cobol_eltp ptr ext;
 13    19 dcl     cobol_eltp ptr defined (  cobol_ext_$cobol_eltp);
 13    20 dcl     cobol_ext_$cobol_cmfp ptr ext;
 13    21 dcl     cobol_cmfp ptr defined (  cobol_ext_$cobol_cmfp);
 13    22 dcl     cobol_ext_$cobol_com_fileno ptr ext;
 13    23 dcl     cobol_com_fileno ptr defined (  cobol_ext_$cobol_com_fileno);
 13    24 dcl     cobol_ext_$cobol_com_ptr ptr ext;
 13    25 dcl     cobol_com_ptr ptr defined (  cobol_ext_$cobol_com_ptr);
 13    26 dcl     cobol_ext_$cobol_dfp ptr ext;
 13    27 dcl     cobol_dfp ptr defined (  cobol_ext_$cobol_dfp);
 13    28 dcl     cobol_ext_$cobol_hfp ptr ext;
 13    29 dcl     cobol_hfp ptr defined (  cobol_ext_$cobol_hfp);
 13    30 dcl     cobol_ext_$cobol_m1fp ptr ext;
 13    31 dcl     cobol_m1fp ptr defined (  cobol_ext_$cobol_m1fp);
 13    32 dcl     cobol_ext_$cobol_m2fp ptr ext;
 13    33 dcl     cobol_m2fp ptr defined (  cobol_ext_$cobol_m2fp);
 13    34 dcl     cobol_ext_$cobol_min1_fileno ptr ext;
 13    35 dcl     cobol_min1_fileno ptr defined (  cobol_ext_$cobol_min1_fileno);
 13    36 dcl     cobol_ext_$cobol_min2_fileno_ptr ptr ext;
 13    37 dcl     cobol_min2_fileno_ptr ptr defined (  cobol_ext_$cobol_min2_fileno_ptr);
 13    38 dcl     cobol_ext_$cobol_name_fileno ptr ext;
 13    39 dcl     cobol_name_fileno ptr defined (  cobol_ext_$cobol_name_fileno);
 13    40 dcl     cobol_ext_$cobol_name_fileno_ptr ptr ext;
 13    41 dcl     cobol_name_fileno_ptr ptr defined (  cobol_ext_$cobol_name_fileno_ptr);
 13    42 dcl     cobol_ext_$cobol_ntfp ptr ext;
 13    43 dcl     cobol_ntfp ptr defined (  cobol_ext_$cobol_ntfp);
 13    44 dcl     cobol_ext_$cobol_pdofp ptr ext;
 13    45 dcl     cobol_pdofp ptr defined (  cobol_ext_$cobol_pdofp);
 13    46 dcl     cobol_ext_$cobol_pfp ptr ext;
 13    47 dcl     cobol_pfp ptr defined (  cobol_ext_$cobol_pfp);
 13    48 dcl     cobol_ext_$cobol_rm2fp ptr ext;
 13    49 dcl     cobol_rm2fp ptr defined (  cobol_ext_$cobol_rm2fp);
 13    50 dcl     cobol_ext_$cobol_rmin2fp ptr ext;
 13    51 dcl     cobol_rmin2fp ptr defined (  cobol_ext_$cobol_rmin2fp);
 13    52 dcl     cobol_ext_$cobol_curr_in ptr ext;
 13    53 dcl     cobol_curr_in ptr defined (  cobol_ext_$cobol_curr_in);
 13    54 dcl     cobol_ext_$cobol_curr_out ptr ext;
 13    55 dcl     cobol_curr_out ptr defined (  cobol_ext_$cobol_curr_out);
 13    56 dcl     cobol_ext_$cobol_sfp ptr ext;
 13    57 dcl     cobol_sfp ptr defined (  cobol_ext_$cobol_sfp);
 13    58 dcl     cobol_ext_$cobol_w1p ptr ext;
 13    59 dcl     cobol_w1p ptr defined (  cobol_ext_$cobol_w1p);
 13    60 dcl     cobol_ext_$cobol_w2p ptr ext;
 13    61 dcl     cobol_w2p ptr defined (  cobol_ext_$cobol_w2p);
 13    62 dcl     cobol_ext_$cobol_w3p ptr ext;
 13    63 dcl     cobol_w3p ptr defined (  cobol_ext_$cobol_w3p);
 13    64 dcl     cobol_ext_$cobol_w5p ptr ext;
 13    65 dcl     cobol_w5p ptr defined (  cobol_ext_$cobol_w5p);
 13    66 dcl     cobol_ext_$cobol_w6p ptr ext;
 13    67 dcl     cobol_w6p ptr defined (  cobol_ext_$cobol_w6p);
 13    68 dcl     cobol_ext_$cobol_w7p ptr ext;
 13    69 dcl     cobol_w7p ptr defined (  cobol_ext_$cobol_w7p);
 13    70 dcl     cobol_ext_$cobol_x3fp ptr ext;
 13    71 dcl     cobol_x3fp ptr defined (  cobol_ext_$cobol_x3fp);
 13    72 dcl	cobol_ext_$cobol_rwdd ptr ext;
 13    73 dcl	cobol_rwdd ptr defined(cobol_ext_$cobol_rwdd);
 13    74 dcl	cobol_ext_$cobol_rwpd ptr ext;
 13    75 dcl	cobol_rwpd ptr defined(cobol_ext_$cobol_rwpd);
 13    76 
 13    77 
 13    78 dcl     cobol_ext_$cobol_fileno1 fixed bin(24)ext;
 13    79 dcl     cobol_fileno1 fixed bin(24)defined (  cobol_ext_$cobol_fileno1);				
 13    80 dcl     cobol_ext_$cobol_options_len fixed bin(24)ext;
 13    81 dcl     cobol_options_len fixed bin(24)defined (  cobol_ext_$cobol_options_len);
 13    82 dcl     cobol_ext_$cobol_pdout_fileno fixed bin(24)ext;
 13    83 dcl     cobol_pdout_fileno fixed bin(24)defined (  cobol_ext_$cobol_pdout_fileno);			
 13    84 dcl     cobol_ext_$cobol_print_fileno fixed bin(24)ext;
 13    85 dcl     cobol_print_fileno fixed bin(24)defined (  cobol_ext_$cobol_print_fileno);			
 13    86 dcl     cobol_ext_$cobol_rmin2_fileno fixed bin(24)ext;
 13    87 dcl     cobol_rmin2_fileno fixed bin(24)defined (  cobol_ext_$cobol_rmin2_fileno);
 13    88 dcl     cobol_ext_$cobol_x1_fileno fixed bin(24)ext;
 13    89 dcl     cobol_x1_fileno fixed bin(24)defined (  cobol_ext_$cobol_x1_fileno);				
 13    90 dcl     cobol_ext_$cobol_x2_fileno fixed bin(24)ext;
 13    91 dcl     cobol_x2_fileno fixed bin(24)defined (  cobol_ext_$cobol_x2_fileno);
 13    92 dcl     cobol_ext_$cobol_x3_fileno fixed bin(24)ext;
 13    93 dcl     cobol_x3_fileno fixed bin(24)defined (  cobol_ext_$cobol_x3_fileno);
 13    94 
 13    95 dcl     cobol_ext_$cobol_lpr char (5) ext;
 13    96 dcl     cobol_lpr char (5) defined (  cobol_ext_$cobol_lpr);				/* -2- */
 13    97 dcl     cobol_ext_$cobol_options char (120) ext;
 13    98 dcl     cobol_options char (120) defined (  cobol_ext_$cobol_options);          			/* -30- */
 13    99 
 13   100 dcl     cobol_ext_$cobol_xlast8 bit (1) ext;
 13   101 dcl     cobol_xlast8 bit (1) defined (  cobol_ext_$cobol_xlast8);				/* -1- */
 13   102 dcl     cobol_ext_$report_exists bit (1) ext;
 13   103 dcl     report_exists bit (1) defined (  cobol_ext_$report_exists);
 13   104 
 13   105 
 13   106 /*    <<<   END OF SHARED EXTERNALS INCLUDE FILE   >>>    */
 13   107 /* END INCLUDE FILE ... cobol_ext_.incl.pl1 */
 13   108 
     1197 
 14     1 
 14     2 /* BEGIN INCLUDE FILE ... cobol_.incl.pl1 */
 14     3 /* last modified Feb 4, 1977 by ORN  */
 14     4 
 14     5 /* This file defines all external data used in the generator phase of Multics Cobol */
 14     6 
 14     7 /* POINTERS */
 14     8 dcl cobol_$text_base_ptr ptr  ext;
 14     9 dcl text_base_ptr ptr  defined (cobol_$text_base_ptr);
 14    10 dcl cobol_$con_end_ptr ptr  ext;
 14    11 dcl con_end_ptr ptr  defined (cobol_$con_end_ptr);
 14    12 dcl cobol_$def_base_ptr ptr  ext;
 14    13 dcl def_base_ptr ptr  defined (cobol_$def_base_ptr);
 14    14 dcl cobol_$link_base_ptr ptr  ext;
 14    15 dcl link_base_ptr ptr  defined (cobol_$link_base_ptr);
 14    16 dcl cobol_$sym_base_ptr ptr  ext;
 14    17 dcl sym_base_ptr ptr  defined (cobol_$sym_base_ptr);
 14    18 dcl cobol_$reloc_text_base_ptr ptr  ext;
 14    19 dcl reloc_text_base_ptr ptr  defined (cobol_$reloc_text_base_ptr);
 14    20 dcl cobol_$reloc_def_base_ptr ptr  ext;
 14    21 dcl reloc_def_base_ptr ptr  defined (cobol_$reloc_def_base_ptr);
 14    22 dcl cobol_$reloc_link_base_ptr ptr  ext;
 14    23 dcl reloc_link_base_ptr ptr  defined (cobol_$reloc_link_base_ptr);
 14    24 dcl cobol_$reloc_sym_base_ptr ptr  ext;
 14    25 dcl reloc_sym_base_ptr ptr  defined (cobol_$reloc_sym_base_ptr);
 14    26 dcl cobol_$reloc_work_base_ptr ptr  ext;
 14    27 dcl reloc_work_base_ptr ptr  defined (cobol_$reloc_work_base_ptr);
 14    28 dcl cobol_$pd_map_ptr ptr  ext;
 14    29 dcl pd_map_ptr ptr  defined (cobol_$pd_map_ptr);
 14    30 dcl cobol_$fixup_ptr ptr  ext;
 14    31 dcl fixup_ptr ptr  defined (cobol_$fixup_ptr);
 14    32 dcl cobol_$initval_base_ptr ptr  ext;
 14    33 dcl initval_base_ptr ptr  defined (cobol_$initval_base_ptr);
 14    34 dcl cobol_$initval_file_ptr ptr  ext;
 14    35 dcl initval_file_ptr ptr  defined (cobol_$initval_file_ptr);
 14    36 dcl cobol_$perform_list_ptr ptr  ext;
 14    37 dcl perform_list_ptr ptr  defined (cobol_$perform_list_ptr);
 14    38 dcl cobol_$alter_list_ptr ptr  ext;
 14    39 dcl alter_list_ptr ptr  defined (cobol_$alter_list_ptr);
 14    40 dcl cobol_$seg_init_list_ptr ptr  ext;
 14    41 dcl seg_init_list_ptr ptr  defined (cobol_$seg_init_list_ptr);
 14    42 dcl cobol_$temp_token_area_ptr ptr  ext;
 14    43 dcl temp_token_area_ptr ptr  defined (cobol_$temp_token_area_ptr);
 14    44 dcl cobol_$temp_token_ptr ptr  ext;
 14    45 dcl temp_token_ptr ptr  defined (cobol_$temp_token_ptr);
 14    46 dcl cobol_$token_block1_ptr ptr  ext;
 14    47 dcl token_block1_ptr ptr  defined (cobol_$token_block1_ptr);
 14    48 dcl cobol_$token_block2_ptr ptr  ext;
 14    49 dcl token_block2_ptr ptr  defined (cobol_$token_block2_ptr);
 14    50 dcl cobol_$minpral5_ptr ptr  ext;
 14    51 dcl minpral5_ptr ptr  defined (cobol_$minpral5_ptr);
 14    52 dcl cobol_$tag_table_ptr ptr  ext;
 14    53 dcl tag_table_ptr ptr  defined (cobol_$tag_table_ptr);
 14    54 dcl cobol_$map_data_ptr ptr  ext;
 14    55 dcl map_data_ptr ptr  defined (cobol_$map_data_ptr);
 14    56 dcl cobol_$ptr_status_ptr ptr  ext;
 14    57 dcl ptr_status_ptr ptr  defined (cobol_$ptr_status_ptr);
 14    58 dcl cobol_$reg_status_ptr ptr  ext;
 14    59 dcl reg_status_ptr ptr  defined (cobol_$reg_status_ptr);
 14    60 dcl cobol_$misc_base_ptr ptr ext;
 14    61 dcl misc_base_ptr ptr defined (cobol_$misc_base_ptr);
 14    62 dcl cobol_$misc_end_ptr ptr ext;
 14    63 dcl misc_end_ptr ptr defined (cobol_$misc_end_ptr);
 14    64 dcl cobol_$list_ptr ptr ext;
 14    65 dcl list_ptr ptr defined (cobol_$list_ptr);
 14    66 dcl cobol_$allo1_ptr ptr ext;
 14    67 dcl allo1_ptr ptr defined (cobol_$allo1_ptr);
 14    68 dcl cobol_$eln_ptr ptr ext;
 14    69 dcl eln_ptr ptr defined (cobol_$eln_ptr);
 14    70 dcl cobol_$diag_ptr ptr ext;
 14    71 dcl diag_ptr ptr defined (cobol_$diag_ptr);
 14    72 dcl cobol_$xref_token_ptr ptr ext;
 14    73 dcl xref_token_ptr ptr defined (cobol_$xref_token_ptr);
 14    74 dcl cobol_$xref_chain_ptr ptr ext;
 14    75 dcl xref_chain_ptr ptr defined (cobol_$xref_chain_ptr);
 14    76 dcl cobol_$statement_info_ptr ptr ext;
 14    77 dcl statement_info_ptr ptr defined (cobol_$statement_info_ptr);
 14    78 dcl cobol_$reswd_ptr ptr ext;
 14    79 dcl reswd_ptr ptr defined (cobol_$reswd_ptr);
 14    80 dcl cobol_$op_con_ptr ptr ext;
 14    81 dcl op_con_ptr ptr defined (cobol_$op_con_ptr);
 14    82 dcl cobol_$ntbuf_ptr ptr ext;
 14    83 dcl ntbuf_ptr ptr defined (cobol_$ntbuf_ptr);
 14    84 dcl cobol_$main_pcs_ptr ptr ext;
 14    85 dcl main_pcs_ptr ptr defined (cobol_$main_pcs_ptr);
 14    86 dcl cobol_$include_info_ptr ptr ext;
 14    87 dcl include_info_ptr ptr defined (cobol_$include_info_ptr);
 14    88 
 14    89 /* FIXED BIN */
 14    90 dcl cobol_$text_wd_off fixed bin  ext;
 14    91 dcl text_wd_off fixed bin  defined (cobol_$text_wd_off);
 14    92 dcl cobol_$con_wd_off fixed bin  ext;
 14    93 dcl con_wd_off fixed bin  defined (cobol_$con_wd_off);
 14    94 dcl cobol_$def_wd_off fixed bin  ext;
 14    95 dcl def_wd_off fixed bin  defined (cobol_$def_wd_off);
 14    96 dcl cobol_$def_max fixed bin  ext;
 14    97 dcl def_max fixed bin  defined (cobol_$def_max);
 14    98 dcl cobol_$link_wd_off fixed bin  ext;
 14    99 dcl link_wd_off fixed bin  defined (cobol_$link_wd_off);
 14   100 dcl cobol_$link_max fixed bin  ext;
 14   101 dcl link_max fixed bin  defined (cobol_$link_max);
 14   102 dcl cobol_$sym_wd_off fixed bin  ext;
 14   103 dcl sym_wd_off fixed bin  defined (cobol_$sym_wd_off);
 14   104 dcl cobol_$sym_max fixed bin  ext;
 14   105 dcl sym_max fixed bin  defined (cobol_$sym_max);
 14   106 dcl cobol_$reloc_text_max fixed bin(24)  ext;
 14   107 dcl reloc_text_max fixed bin(24)  defined (cobol_$reloc_text_max);
 14   108 dcl cobol_$reloc_def_max fixed bin(24)  ext;
 14   109 dcl reloc_def_max fixed bin(24)  defined (cobol_$reloc_def_max);
 14   110 dcl cobol_$reloc_link_max fixed bin(24)  ext;
 14   111 dcl reloc_link_max fixed bin(24)  defined (cobol_$reloc_link_max);
 14   112 dcl cobol_$reloc_sym_max fixed bin(24)  ext;
 14   113 dcl reloc_sym_max fixed bin(24)  defined (cobol_$reloc_sym_max);
 14   114 dcl cobol_$reloc_work_max fixed bin(24)  ext;
 14   115 dcl reloc_work_max fixed bin(24)  defined (cobol_$reloc_work_max);
 14   116 dcl cobol_$pd_map_index fixed bin  ext;
 14   117 dcl pd_map_index fixed bin  defined (cobol_$pd_map_index);
 14   118 dcl cobol_$cobol_data_wd_off fixed bin  ext;
 14   119 dcl cobol_data_wd_off fixed bin  defined (cobol_$cobol_data_wd_off);
 14   120 dcl cobol_$stack_off fixed bin  ext;
 14   121 dcl stack_off fixed bin  defined (cobol_$stack_off);
 14   122 dcl cobol_$max_stack_off fixed bin  ext;
 14   123 dcl max_stack_off fixed bin  defined (cobol_$max_stack_off);
 14   124 dcl cobol_$init_stack_off fixed bin  ext;
 14   125 dcl init_stack_off fixed bin  defined (cobol_$init_stack_off);
 14   126 dcl cobol_$pd_map_sw fixed bin  ext;
 14   127 dcl pd_map_sw fixed bin  defined (cobol_$pd_map_sw);
 14   128 dcl cobol_$next_tag fixed bin  ext;
 14   129 dcl next_tag fixed bin  defined (cobol_$next_tag);
 14   130 dcl cobol_$data_init_flag fixed bin  ext;
 14   131 dcl data_init_flag fixed bin  defined (cobol_$data_init_flag);
 14   132 dcl cobol_$seg_init_flag fixed bin  ext;
 14   133 dcl seg_init_flag fixed bin  defined (cobol_$seg_init_flag);
 14   134 dcl cobol_$alter_flag fixed bin  ext;
 14   135 dcl alter_flag fixed bin  defined (cobol_$alter_flag);
 14   136 dcl cobol_$sect_eop_flag fixed bin  ext;
 14   137 dcl sect_eop_flag fixed bin  defined (cobol_$sect_eop_flag);
 14   138 dcl cobol_$para_eop_flag fixed bin  ext;
 14   139 dcl para_eop_flag fixed bin  defined (cobol_$para_eop_flag);
 14   140 dcl cobol_$priority_no fixed bin  ext;
 14   141 dcl priority_no fixed bin  defined (cobol_$priority_no);
 14   142 dcl cobol_$compile_count fixed bin ext;
 14   143 dcl compile_count fixed bin defined (cobol_$compile_count);
 14   144 dcl cobol_$ptr_assumption_ind fixed bin ext;
 14   145 dcl ptr_assumption_ind fixed bin defined (cobol_$ptr_assumption_ind);
 14   146 dcl cobol_$reg_assumption_ind fixed bin ext;
 14   147 dcl reg_assumption_ind fixed bin defined (cobol_$reg_assumption_ind);
 14   148 dcl cobol_$perform_para_index fixed bin ext;
 14   149 dcl perform_para_index fixed bin defined (cobol_$perform_para_index);
 14   150 dcl cobol_$perform_sect_index fixed bin ext;
 14   151 dcl perform_sect_index fixed bin defined (cobol_$perform_sect_index);
 14   152 dcl cobol_$alter_index fixed bin ext;
 14   153 dcl alter_index fixed bin defined (cobol_$alter_index);
 14   154 dcl cobol_$list_off fixed bin ext;
 14   155 dcl list_off fixed bin defined (cobol_$list_off);
 14   156 dcl cobol_$constant_offset fixed bin ext;
 14   157 dcl constant_offset fixed bin defined (cobol_$constant_offset);
 14   158 dcl cobol_$misc_max fixed bin ext;
 14   159 dcl misc_max fixed bin defined (cobol_$misc_max);
 14   160 dcl cobol_$pd_map_max fixed bin ext;
 14   161 dcl pd_map_max fixed bin defined (cobol_$pd_map_max);
 14   162 dcl cobol_$map_data_max fixed bin ext;
 14   163 dcl map_data_max fixed bin defined (cobol_$map_data_max);
 14   164 dcl cobol_$fixup_max fixed bin ext;
 14   165 dcl fixup_max fixed bin defined (cobol_$fixup_max);
 14   166 dcl cobol_$tag_table_max fixed bin ext;
 14   167 dcl tag_table_max fixed bin defined (cobol_$tag_table_max);
 14   168 dcl cobol_$temp_token_max fixed bin ext;
 14   169 dcl temp_token_max fixed bin defined (cobol_$temp_token_max);
 14   170 dcl cobol_$allo1_max fixed bin ext;
 14   171 dcl allo1_max fixed bin defined (cobol_$allo1_max);
 14   172 dcl cobol_$eln_max fixed bin ext;
 14   173 dcl eln_max fixed bin defined (cobol_$eln_max);
 14   174 dcl cobol_$debug_enable fixed bin ext;
 14   175 dcl debug_enable fixed bin defined (cobol_$debug_enable);
 14   176 dcl cobol_$non_source_offset fixed bin ext;
 14   177 dcl non_source_offset fixed bin defined (cobol_$non_source_offset);
 14   178 dcl cobol_$initval_flag fixed bin ext;
 14   179 dcl initval_flag fixed bin defined (cobol_$initval_flag);
 14   180 dcl cobol_$date_compiled_sw fixed bin ext;
 14   181 dcl date_compiled_sw fixed bin defined (cobol_$date_compiled_sw);
 14   182 dcl cobol_$include_cnt fixed bin ext;
 14   183 dcl include_cnt fixed bin defined (cobol_$include_cnt);
 14   184 dcl cobol_$fs_charcnt fixed bin ext;
 14   185 dcl fs_charcnt fixed bin defined (cobol_$fs_charcnt);
 14   186 dcl cobol_$ws_charcnt fixed bin ext;
 14   187 dcl ws_charcnt fixed bin defined (cobol_$ws_charcnt);
 14   188 dcl cobol_$coms_charcnt fixed bin ext;
 14   189 dcl coms_charcnt fixed bin defined (cobol_$coms_charcnt);
 14   190 dcl cobol_$ls_charcnt fixed bin ext;
 14   191 dcl ls_charcnt fixed bin defined (cobol_$ls_charcnt);
 14   192 dcl cobol_$cons_charcnt fixed bin ext;
 14   193 dcl cons_charcnt fixed bin defined (cobol_$cons_charcnt);
 14   194 dcl cobol_$value_cnt fixed bin ext;
 14   195 dcl value_cnt fixed bin defined (cobol_$value_cnt);
 14   196 dcl cobol_$cd_cnt fixed bin ext;
 14   197 dcl cd_cnt fixed bin defined (cobol_$cd_cnt);
 14   198 dcl cobol_$fs_wdoff fixed bin ext;
 14   199 dcl fs_wdoff fixed bin defined (cobol_$fs_wdoff);
 14   200 dcl cobol_$ws_wdoff fixed bin ext;
 14   201 dcl ws_wdoff fixed bin defined (cobol_$ws_wdoff);
 14   202 dcl cobol_$coms_wdoff fixed bin ext;
 14   203 dcl coms_wdoff fixed bin defined (cobol_$coms_wdoff);
 14   204 
 14   205 /* CHARACTER */
 14   206 dcl cobol_$scratch_dir char (168)   aligned ext;
 14   207 dcl scratch_dir char (168)   aligned defined (cobol_$scratch_dir);			/* -42- */
 14   208 dcl cobol_$obj_seg_name char (32)   aligned ext;
 14   209 dcl obj_seg_name char (32)   aligned defined (cobol_$obj_seg_name);		/* -8- */
 14   210 
 14   211 /* BIT */
 14   212 dcl cobol_$xref_bypass bit(1) aligned ext;
 14   213 dcl xref_bypass bit(1) aligned defined (cobol_$xref_bypass);			/* -1- */
 14   214 dcl cobol_$same_sort_merge_proc bit(1) aligned ext;
 14   215 dcl same_sort_merge_proc bit(1) aligned defined (cobol_$same_sort_merge_proc);		/* -1- */
 14   216 
 14   217 
 14   218 /* END INCLUDE FILE ... cobol_incl.pl1*/
 14   219 
 14   220 
     1198 
     1199 
     1200      end cobol_open_gen;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/24/89  0830.4  cobol_open_gen.pl1                >spec>install>MR12.3-1048>cobol_open_gen.pl1
1189         1    11/11/82  1712.7  cobol_file_table.incl.pl1         >ldd>include>cobol_file_table.incl.pl1
1190         2    11/11/82  1712.8  cobol_file_key.incl.pl1           >ldd>include>cobol_file_key.incl.pl1
1191         3    11/11/82  1712.8  cobol_linage_rec.incl.pl1         >ldd>include>cobol_linage_rec.incl.pl1
1192         4    03/27/82  0439.8  cobol_type1.incl.pl1              >ldd>include>cobol_type1.incl.pl1
4-15         5    11/11/82  1712.8  cobol_TYPE1.incl.pl1              >ldd>include>cobol_TYPE1.incl.pl1
1193         6    03/27/82  0439.9  cobol_type9.incl.pl1              >ldd>include>cobol_type9.incl.pl1
6-17         7    11/11/82  1712.7  cobol_TYPE9.incl.pl1              >ldd>include>cobol_TYPE9.incl.pl1
1194         8    11/11/82  1712.8  cobol_type12.incl.pl1             >ldd>include>cobol_type12.incl.pl1
8-17         9    03/27/82  0439.6  cobol_TYPE12.incl.pl1             >ldd>include>cobol_TYPE12.incl.pl1
1195        10    03/27/82  0439.8  cobol_type19.incl.pl1             >ldd>include>cobol_type19.incl.pl1
10-17       11    03/27/82  0439.6  cobol_TYPE19.incl.pl1             >ldd>include>cobol_TYPE19.incl.pl1
1196        12    11/11/82  1712.8  cobol_fixed_common.incl.pl1       >ldd>include>cobol_fixed_common.incl.pl1
1197        13    03/27/82  0431.3  cobol_ext_.incl.pl1               >ldd>include>cobol_ext_.incl.pl1
1198        14    11/11/82  1712.7  cobol_.incl.pl1                   >ldd>include>cobol_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
S                               000650 automatic       varying char(13)         dcl 969 set ref 972* 974
addr                                                   builtin function         dcl 1182 ref 161 165 166 176 181 198 198 198 198 199
                                                                                  199 199 199 201 201 201 201 241 241 282 282 306
                                                                                  306 312 313 315 319 319 331 331 342 342 469 469
                                                                                  477 477 503 503 508 508 905 909 910 916 918 918
                                                                                  946 947 948 956 956 959
aloff                           000343 automatic       fixed bin(17,0)          dcl 131 set ref 190* 192 194
alt_output                      000304 automatic       bit(1)                   dcl 110 set ref 218* 545 559 566
alt_sw                          000303 automatic       bit(1)                   dcl 110 set ref 214* 218 589
alternate_keys           51            based           fixed bin(17,0)          level 2 dcl 1-25 ref 214
ao_len                  211            based           fixed bin(24,0)          level 2 dcl 1-25 ref 271 280 523
ao_string               212            based           char(256)                level 2 packed packed unaligned dcl 1-25 set ref 282
                                                                                  282
append_size                     000331 automatic       fixed bin(17,0)          dcl 124 set ref 498* 500 503*
append_string                   000332 automatic       varying char(16)         initial dcl 124 set ref 124* 166 487* 491* 495* 498
append_string_loc               000502 automatic       pointer                  dcl 154 set ref 166* 503 503
arg                       4     000100 automatic       structure                array level 2 unaligned dcl 49 set ref 312 313
argb                                   based           bit(216)                 array packed unaligned dcl 105 set ref 312* 313*
arglist_off               1     000100 automatic       fixed bin(17,0)          level 2 dcl 49 set ref 311*
args                            000100 automatic       structure                level 1 unaligned dcl 49 set ref 319 319
atd_charoff                     000342 automatic       fixed bin(17,0)          dcl 130 set ref 269* 282 331 342 469 477 503 508 519
                                                                                  953
atd_len                         000340 automatic       fixed bin(17,0)          dcl 128 set ref 193* 280* 282* 288* 323* 330* 331*
                                                                                  340* 342* 351* 353* 365* 365 469 479* 479 500* 500
                                                                                  503 509* 509 521*
atd_off                         000341 automatic       fixed bin(17,0)          dcl 129 set ref 192* 269 316 321
atd_string                      000154 automatic       varying char(150)        initial dcl 73 set ref 73* 165 462* 468 479 663* 663
                                                                                  664* 664 665* 665 667* 667 669* 669 693* 693 697*
                                                                                  697 700* 700 704* 704 706* 706 708* 708 710* 710
                                                                                  713* 713
atd_string_loc                  000500 automatic       pointer                  dcl 154 set ref 165* 469 469
atd_type9                       000030 internal static structure                level 1 unaligned dcl 1057 set ref 947
attach_options_info       5(09)        based           char(5)                  level 2 packed packed unaligned dcl 1-25 set ref 273
                                                                                  286*
attach_tag                      000263 automatic       fixed bin(17,0)          dcl 90 set ref 171* 256* 536* 540*
basic_arg                       000014 internal static structure                level 1 unaligned dcl 998
basic_ptr                       000316 automatic       pointer                  dcl 119 set ref 181*
basic_struct                    000022 internal static structure                level 1 unaligned dcl 1050 set ref 181
block_desc               65            based           fixed bin(17,0)          level 2 dcl 1-25 ref 374 388 409 411
block_max                67            based           fixed bin(24,0)          level 2 dcl 1-25 ref 374 411 415
body                                   based           fixed bin(15,0)          level 2 dcl 3-22 set ref 608 608 608* 614* 624 624*
body_int                  4            based           fixed bin(31,0)          level 2 dcl 3-22 set ref 611* 613* 615* 621* 626*
bottom                    3            based           fixed bin(15,0)          level 2 dcl 3-22 set ref 639 639 639*
bottom_int                7            based           fixed bin(31,0)          level 2 dcl 3-22 set ref 642*
buf_off                         000223 automatic       fixed bin(17,0)          dcl 74 set ref 634* 635*
buflen_off                      000344 automatic       fixed bin(17,0)          dcl 132 set ref 195*
cat_id_info              21(09)        based           char(5)                  level 2 packed packed unaligned dcl 1-25 set ref
                                                                                  357*
cat_nm                  126(09)        based           char(200)                level 2 packed packed unaligned dcl 1-25 set ref 201
                                                                                  201
cata_name                       000356 automatic       varying char(200)        initial dcl 138 set ref 138* 161 201 201 340 865 868
                                                                                  875* 877* 877 886 887* 894 895* 895
cata_name_loc                   000476 automatic       pointer                  dcl 154 set ref 161* 342 342
catalogued               42            based           fixed bin(17,0)          level 2 dcl 1-25 ref 207 292 338 345 367 455 525
catid_type9                     000064 internal static structure                level 1 unaligned dcl 1068 set ref 946
ch                        1            based           char(1)                  level 2 packed packed unaligned dcl 979 set ref 342
                                                                                  342 469 469 503 503
ch5                                    parameter       char(5)                  packed unaligned dcl 738 in procedure "get_info" set
                                                                                  ref 734 741*
ch5                                    parameter       char(5)                  packed unaligned dcl 927 in procedure "MOVE" set ref
                                                                                  923 941*
clock_                          000236 constant        entry                    external dcl 145 ref 789
cobol_$next_tag                 000326 external static fixed bin(17,0)          dcl 14-128 set ref 167 168 169 170 171 172 173 174
                                                                                  175* 175 605 606* 606
cobol_$text_wd_off              000324 external static fixed bin(17,0)          dcl 14-90 ref 228
cobol_alloc$stack               000274 constant        entry                    external dcl 1159 ref 190 303 634
cobol_call_op                   000266 constant        entry                    external dcl 1155 ref 226 231 248 256 536 543 548
                                                                                  564 581 594
cobol_code                      000222 internal static fixed bin(17,0)          level 2 dcl 1123 set ref 177* 263* 538* 650
cobol_com_ptr                          defined         pointer                  dcl 13-25 ref 199 199
cobol_define_tag                000302 constant        entry                    external dcl 1162 ref 220 234 250 540 554 586
cobol_ext_$cobol_com_ptr        000322 external static pointer                  dcl 13-24 ref 199 199 199 199
cobol_file_util$open            000310 constant        entry                    external dcl 1167 ref 645 648
cobol_gen_ioerror               000262 constant        entry                    external dcl 1152 ref 233 249 264 539 549 585
cobol_gen_ioerror$finish_up     000264 constant        entry                    external dcl 1153 ref 651
cobol_io_util$file_desc         000316 constant        entry                    external dcl 1173 ref 591
cobol_io_util$move_lit          000312 constant        entry                    external dcl 1169 ref 729
cobol_iocall                    000314 constant        entry                    external dcl 1171 ref 319
cobol_iomode                    000304 constant        entry                    external dcl 1163 ref 188
cobol_ioop_util$disp            000246 constant        entry                    external dcl 1142 ref 635
cobol_ioop_util$lda             000250 constant        entry                    external dcl 1144 ref 225
cobol_ioop_util$ldaldx5         000256 constant        entry                    external dcl 1148 ref 242 521
cobol_ioop_util$open_clean_up   000254 constant        entry                    external dcl 1146 ref 562 577
cobol_ioop_util$set_fsb         000260 constant        entry                    external dcl 1150 ref 611 615 621 623 626 632 637
                                                                                  642 643
cobol_ioop_util$set_stz         000242 constant        entry                    external dcl 1139 ref 575
cobol_ioop_util$tra             000252 constant        entry                    external dcl 1145 ref 227
cobol_make_tagref               000244 constant        entry                    external dcl 1141 ref 228
cobol_mode                      000346 automatic       fixed bin(17,0)          dcl 135 set ref 188* 218 225* 545 545 562* 566 577*
cobol_move_gen                  000306 constant        entry                    external dcl 1166 ref 918 956
cobol_open_util$make_pdir_path  000320 constant        entry                    external dcl 1175 ref 321
cobol_read_ft                   000276 constant        entry                    external dcl 1160 ref 183
cobol_read_rand                 000300 constant        entry                    external dcl 1161 ref 603 741 941
cobol_reg_manager$after_op      000270 constant        entry                    external dcl 1156 ref 650
cobol_set_fsbptr                000272 constant        entry                    external dcl 1158 ref 221 320 555 576 595 602
comp6_type9                     000120 internal static structure                level 1 unaligned dcl 1079 set ref 910
data_name                              based           structure                level 1 unaligned dcl 6-16
date_time_                      000240 constant        entry                    external dcl 147 ref 795
den_6250                126(04)        based           bit(1)                   level 3 packed packed unaligned dcl 1-25 ref 403
density                 126            based           bit(1)                   level 3 packed packed unaligned dcl 1-25 ref 401
desc                                   based           structure                level 1 unaligned dcl 932 in procedure "MOVE"
desc                     12            based           char(40)                 level 2 in structure "file_key" packed packed
                                                                                  unaligned dcl 2-17 in procedure "cobol_open_gen"
                                                                                  set ref 951 959
device                   47            based           fixed bin(17,0)          level 2 dcl 1-25 ref 261 292 299 299 348 363 557
dt                              000566 automatic       char(32)                 packed unaligned dcl 780 set ref 795* 796
dupl_alt                101(08)        based           bit(1)                   level 2 packed packed unaligned dcl 1-25 ref 485 487
entryno                         000100 automatic       fixed bin(17,0)          level 2 dcl 49 set ref 310*
extend_sw                       000302 automatic       bit(1)                   dcl 110 set ref 188* 444 485 487 491 557
external                 33(10)        based           bit(1)                   level 2 packed packed unaligned dcl 1-25 ref 223
f_ifn                           000444 automatic       varying char(16)         dcl 150 set ref 198 198 296 297 752 811
f_nm                            000451 automatic       varying char(32)         dcl 151 set ref 204* 754
fb                       13     000030 internal static fixed bin(17,0)          initial array level 3 dcl 1057 set ref 350*
fc_nm                           000462 automatic       varying char(30)         dcl 152 set ref 199 199 296 297
fch                                    based           char(2048)               packed unaligned dcl 837 ref 844 846
fch_loc                                parameter       pointer                  dcl 833 ref 829 844 846
fd_token                               based           structure                level 1 unaligned dcl 8-16
file_desc_1_offset       13            based           fixed bin(24,0)          level 2 dcl 1-25 set ref 591*
file_id                         000350 automatic       varying char(17)         initial dcl 137 set ref 137* 455 663 752* 754* 767*
                                                                                  886* 894*
file_id_info              7(27)        based           char(5)                  level 2 packed packed unaligned dcl 1-25 set ref 749
                                                                                  761*
file_key                               based           structure                level 1 unaligned dcl 2-17
file_key_desc                          based           char(40)                 packed unaligned dcl 72 set ref 905*
file_key_info            13     000030 internal static structure                level 2 in structure "atd_type9" unaligned dcl 1057
                                                                                  in procedure "cobol_open_gen"
file_key_info            13     000154 internal static structure                level 2 in structure "fkey_type9" unaligned dcl 1093
                                                                                  in procedure "cobol_open_gen" set ref 905
file_key_info            13     000064 internal static structure                level 2 in structure "catid_type9" unaligned
                                                                                  dcl 1068 in procedure "cobol_open_gen" set ref
                                                                                  951*
file_key_info            13     000120 internal static structure                level 2 in structure "comp6_type9" unaligned
                                                                                  dcl 1079 in procedure "cobol_open_gen"
file_no                  12            based           fixed bin(17,0)          level 2 dcl 8-16 set ref 183*
file_table                             based           structure                level 1 unaligned dcl 1-25
fixed                                                  builtin function         dcl 1182 ref 792
fixed_common                           based           structure                level 1 unaligned dcl 12-26
fkey_ptr                        000314 automatic       pointer                  dcl 118 set ref 741* 764 767 767 786 792 792 819 822
                                                                                  822 941* 951 959
fkey_type9                      000154 internal static structure                level 1 unaligned dcl 1093 set ref 909
footing                   1            based           fixed bin(15,0)          level 2 dcl 3-22 set ref 618 618 618*
footing_int               5            based           fixed bin(31,0)          level 2 dcl 3-22 set ref 621 623*
force                   126(02)        based           bit(1)                   level 3 packed packed unaligned dcl 1-25 ref 398
fsb                     124            based           structure                level 2 unaligned dcl 1-25
fsb_offset                             parameter       fixed bin(17,0)          dcl 903 ref 899 914
ft_block_num                    000254 automatic       fixed bin(17,0)          initial dcl 84 set ref 84* 374* 409* 411* 414* 414
                                                                                  415* 708*
ft_density_num                  000252 automatic       fixed bin(17,0)          initial dcl 82 set ref 82* 401* 403* 704*
ft_device_num                   000255 automatic       fixed bin(17,0)          initial dcl 85 set ref 85* 438* 442* 710*
ft_expire                       000270 automatic       varying char(9)          initial dcl 101 set ref 101* 693 693 796*
ft_extend                       000256 automatic       varying char(8)          initial dcl 86 set ref 86* 446* 665
ft_force                        000241 automatic       varying char(5)          initial dcl 80 set ref 80* 398* 665
ft_format                       000230 automatic       varying char(4)          initial dcl 77 set ref 77* 378* 383* 386* 388* 682*
                                                                                  697
ft_max_cra_size                 000224 automatic       fixed bin(17,0)          dcl 75 set ref 372* 374 379* 379 384* 384 409 414
                                                                                  415 667*
ft_output_mode                  000244 automatic       varying char(17)         initial dcl 81 set ref 81* 369* 447* 669 811* 822*
ft_position_num                 000253 automatic       fixed bin(17,0)          initial dcl 83 set ref 83* 406* 706*
ft_protect                      000232 automatic       varying char(5)          initial dcl 78 set ref 78* 391* 393* 700 700
ft_ptr                          000312 automatic       pointer                  dcl 117 set ref 183* 185 186 188* 198 198 201 201
                                                                                  204 204 207 214 214 221* 223 233* 236 241 241 249*
                                                                                  261 264* 271 273 280 282 282 286 292 292 299 299
                                                                                  299 320* 338 345 348 357 363 367 367 372 374 374
                                                                                  376 381 388 391 391 393 396 398 401 403 406 406
                                                                                  409 411 411 411 415 417 419 438 438 438 451 455
                                                                                  465 471 471 471 485 487 523 525 539* 549* 555* 557
                                                                                  562* 576* 577* 585* 591 595* 600 602* 603 651* 713
                                                                                  749 752 761 783 808 816 914
ft_retain                       000235 automatic       varying char(11)         initial dcl 79 set ref 79* 396* 665
ft_work                         000226 automatic       char(6)                  initial packed unaligned dcl 76 set ref 76* 367* 462
get_pdir_vstring                000231 internal static varying char(9)          initial dcl 1134 set ref 315
good_tag                        000261 automatic       fixed bin(17,0)          dcl 88 set ref 169* 226* 231* 234*
handler                         000274 automatic       char(12)                 initial packed unaligned dcl 102 set ref 102* 471*
                                                                                  474* 477 477
i                               000612 automatic       fixed bin(17,0)          dcl 833 in procedure "cv" set ref 841* 844 846*
i                               000623 automatic       fixed bin(17,0)          dcl 862 in procedure "test_cata_name" set ref 868*
                                                                                  869 873 884 894 895
id                      113            based           char(32)                 level 2 packed packed unaligned dcl 1-25 set ref 236
                                                                                  241 241
ifn                       1(09)        based           char(16)                 level 2 packed packed unaligned dcl 1-25 set ref 198
                                                                                  198
index                                                  builtin function         dcl 1182 ref 236 868
index_value                            parameter       fixed bin(15,0)          dcl 902 ref 899 905
ioa_$rsnnl                      000330 constant        entry                    external dcl 968 ref 972
iocb_tag                        000262 automatic       fixed bin(17,0)          dcl 89 set ref 170* 248* 250*
ioerror                         000222 internal static structure                level 1 unaligned dcl 1123 set ref 176
ioerror_ptr                     000310 automatic       pointer                  dcl 116 set ref 176* 233* 249* 264* 539* 549* 585*
                                                                                  651*
ioname_len                      000345 automatic       fixed bin(17,0)          dcl 134 set ref 236* 237 237* 240 242*
ioname_off                      000010 internal static fixed bin(17,0)          initial dcl 95 set ref 194* 241 242*
is_tag                    2     000222 internal static fixed bin(17,0)          level 2 dcl 1123 set ref 179*
item_length               3            based           fixed bin(24,0)          level 2 dcl 932 ref 960
key_sz                          000441 automatic       fixed bin(17,0)          dcl 139 set ref 288 960*
key_type                  5            based           fixed bin(17,0)          level 2 dcl 2-17 ref 764 786 819
l                               000622 automatic       fixed bin(17,0)          dcl 862 set ref 865* 866 873 875 877
label_format             53            based           fixed bin(17,0)          level 2 dcl 1-25 ref 465 471
len                                    parameter       fixed bin(17,0)          dcl 722 in procedure "ML" set ref 718 729* 729 729
len                             000655 automatic       fixed bin(17,0)          dcl 969 in procedure "NUMS" set ref 972* 974
len_off                         000012 internal static fixed bin(17,0)          initial dcl 98 set ref 303* 305 321*
length                                                 builtin function         dcl 1182 ref 297 297 340 468 479 498 865
linage                   33(34)        based           bit(1)                   level 2 packed packed unaligned dcl 1-25 ref 600
linage_info              32            based           char(5)                  level 2 packed packed unaligned dcl 1-25 set ref
                                                                                  603*
linage_ptr                      000306 automatic       pointer                  dcl 114 set ref 603* 608 608 608 611 613 614 615 618
                                                                                  618 618 621 621 623 624 624 626 628 630 630 632
                                                                                  639 639 639 642 905
linage_rec                             based           structure                level 1 unaligned dcl 3-22
max_cra_size             41            based           fixed bin(24,0)          level 2 dcl 1-25 ref 372
mode                      6     000222 internal static fixed bin(17,0)          level 2 dcl 1123 set ref 180*
mp                                     based           structure                level 1 unaligned dcl 43
mp_ptr                                 parameter       pointer                  dcl 41 ref 38 178 183 188 645 648 908 945
mpout                           000142 automatic       structure                level 1 unaligned dcl 65 set ref 918 918 956 956
mult_position_no         64            based           fixed bin(17,0)          level 2 dcl 1-25 ref 406 406 752
multics_mode                    000347 automatic       fixed bin(17,0)          dcl 136 set ref 188* 369 391 557 557* 559* 562* 566
                                                                                  566 566 569
n                               000142 automatic       fixed bin(17,0)          level 2 in structure "mpout" dcl 65 in procedure
                                                                                  "cobol_open_gen" set ref 907* 944*
n                         3     000100 automatic       fixed bin(17,0)          level 2 in structure "args" dcl 49 in procedure
                                                                                  "cobol_open_gen" set ref 314*
name                    103            based           char(32)                 level 2 in structure "file_table" packed packed
                                                                                  unaligned dcl 1-25 in procedure "cobol_open_gen"
                                                                                  ref 204
name                     25            based           char                     level 2 in structure "file_key" packed packed
                                                                                  unaligned dcl 2-17 in procedure "cobol_open_gen"
                                                                                  ref 767 792 822
name_arg                        000010 constant        structure                level 1 unaligned dcl 1001 ref 312
name_desc                20            based           char(40)                 array level 2 packed packed unaligned dcl 3-22 ref
                                                                                  905
name_size                24            based           fixed bin(17,0)          level 2 in structure "file_key" dcl 2-17
                                                                                  in procedure "cobol_open_gen" ref 767 767 792 792
                                                                                  822 822
name_size               102            based           fixed bin(17,0)          level 2 in structure "file_table" dcl 1-25
                                                                                  in procedure "cobol_open_gen" ref 204
namelen                         000337 automatic       fixed bin(17,0)          dcl 127 set ref 297* 301 321* 330
ns_tag                    3     000222 internal static fixed bin(17,0)          level 2 dcl 1123 set ref 168* 227* 228*
null                                                   builtin function         dcl 1182 ref 228 228 319 319
off                                    parameter       fixed bin(17,0)          dcl 722 in procedure "ML" set ref 718 729*
off                     125            based           fixed bin(24,0)          level 3 in structure "file_table" dcl 1-25
                                                                                  in procedure "cobol_open_gen" ref 186 914
off                      24     000120 internal static fixed bin(17,0)          level 3 in structure "comp6_type9" dcl 1079
                                                                                  in procedure "cobol_open_gen" set ref 914*
off1                      7     000100 automatic       fixed bin(17,0)          array level 3 dcl 49 set ref 316*
offset                   24            based           fixed bin(24,0)          level 2 in structure "data_name" dcl 6-16
                                                                                  in procedure "cobol_open_gen" set ref 953*
offset                                 parameter       fixed bin(17,0)          dcl 927 in procedure "MOVE" ref 923 953
offset                    4     000022 internal static fixed bin(17,0)          level 2 in structure "basic_struct" dcl 1050
                                                                                  in procedure "cobol_open_gen" set ref 186*
om                              000277 automatic       varying char(6)          initial dcl 103 set ref 103* 421* 425* 664 805*
open_ext                 34(05)        based           bit(1)                   level 2 packed packed unaligned dcl 1-25 ref 391
open_out                 34(03)        based           bit(1)                   level 2 packed packed unaligned dcl 1-25 ref 391
open_tag                        000264 automatic       fixed bin(17,0)          dcl 91 set ref 172*
open_tag1                       000265 automatic       fixed bin(17,0)          dcl 92 set ref 173* 543* 564* 586*
open_tag2                       000266 automatic       fixed bin(17,0)          dcl 93 set ref 174* 548* 554* 581*
org_qual                 44            based           fixed bin(17,0)          level 2 dcl 1-25 ref 471 471 713
organization             43            based           fixed bin(17,0)          level 2 dcl 1-25 ref 214
output_mode             312            based           fixed bin(17,0)          level 2 dcl 1-25 ref 417 419
p                               000640 automatic       pointer                  dcl 929 set ref 959* 960
places_left              17     000120 internal static fixed bin(17,0)          level 3 dcl 1079 set ref 912*
prog_name                              based           char(30)                 level 2 packed packed unaligned dcl 12-26 set ref
                                                                                  199 199
protect                 126(03)        based           bit(1)                   level 3 packed packed unaligned dcl 1-25 ref 393
pt                        4     000100 automatic       pointer                  array level 3 in structure "args" dcl 49
                                                                                  in procedure "cobol_open_gen" set ref 315*
pt                              000014 internal static pointer                  initial level 2 in structure "basic_arg" dcl 998
                                                                                  in procedure "cobol_open_gen" set ref 181*
pt1                       2            based           pointer                  level 2 in structure "mp" dcl 43 in procedure
                                                                                  "cobol_open_gen" ref 178 908 945
pt1                       2     000142 automatic       pointer                  level 2 in structure "mpout" dcl 65 in procedure
                                                                                  "cobol_open_gen" set ref 908* 945*
pt2                       4     000142 automatic       pointer                  level 2 in structure "mpout" dcl 65 in procedure
                                                                                  "cobol_open_gen" set ref 909* 946*
pt2                       4            based           pointer                  level 2 in structure "mp" dcl 43 in procedure
                                                                                  "cobol_open_gen" set ref 183 645* 648*
pt3                       6            based           pointer                  level 2 in structure "mp" dcl 43 in procedure
                                                                                  "cobol_open_gen" set ref 188*
pt3                       6     000142 automatic       pointer                  level 2 in structure "mpout" dcl 65 in procedure
                                                                                  "cobol_open_gen" set ref 910* 947* 953
pt4                      10     000142 automatic       pointer                  level 2 dcl 65 set ref 916* 948*
repeat_nogen             11(20) 000100 automatic       bit(1)                   array level 3 packed packed unaligned dcl 49 set ref
                                                                                  317*
replacement_info          6(18)        based           char(5)                  level 2 packed packed unaligned dcl 1-25 set ref 808
                                                                                  816*
retain                  126(01)        based           bit(1)                   level 3 packed packed unaligned dcl 1-25 ref 396
retention_info           11            based           char(5)                  level 2 packed packed unaligned dcl 1-25 set ref 451
                                                                                  783*
retry_tag                 1     000222 internal static fixed bin(17,0)          level 2 dcl 1123 set ref 167* 220*
seg                     124            based           fixed bin(24,0)          level 3 in structure "file_table" dcl 1-25
                                                                                  in procedure "cobol_open_gen" ref 185
seg                       3     000022 internal static fixed bin(17,0)          level 2 in structure "basic_struct" dcl 1050
                                                                                  in procedure "cobol_open_gen" set ref 185*
seg                      23     000120 internal static fixed bin(17,0)          initial level 3 in structure "comp6_type9" dcl 1079
                                                                                  in procedure "cobol_open_gen" set ref 913*
segname                         000320 automatic       char(36)                 initial packed unaligned dcl 123 set ref 123* 296*
                                                                                  306 306 331 331
size                     16     000120 internal static fixed bin(17,0)          initial level 3 dcl 1079 set ref 912*
spanned_recs             33(19)        based           bit(1)                   level 2 packed packed unaligned dcl 1-25 ref 376 411
str                                    based           char(1024)               packed unaligned dcl 726 ref 729 729
str_loc                                parameter       pointer                  dcl 722 ref 718 729 729
stream_tag                      000267 automatic       fixed bin(17,0)          dcl 94 set ref 605*
substr                                                 builtin function         dcl 1182 set ref 204 388* 729 729 767 792 796 822
                                                                                  844 846 877 886 894 895 974
sz                                     parameter       fixed bin(17,0)          dcl 833 ref 829 841
tape                    126            based           structure                level 2 packed packed unaligned dcl 1-25
tape_device             321            based           fixed bin(17,0)          level 2 dcl 1-25 ref 438 438
tape_device_num         322            based           fixed bin(17,0)          level 2 dcl 1-25 ref 438
temp                    123            based           bit(1)                   level 2 in structure "file_table" packed packed
                                                                                  unaligned dcl 1-25 in procedure "cobol_open_gen"
                                                                                  ref 299 367
temp                            000442 automatic       fixed bin(17,0)          dcl 140 in procedure "cobol_open_gen" set ref 240*
                                                                                  241* 301* 306* 468* 469* 519* 521* 523* 525* 527*
                                                                                  538 569* 570 570* 577*
temp_arg                        000016 constant        structure                level 1 unaligned dcl 1005 ref 313
tm                              000564 automatic       fixed bin(71,0)          dcl 779 set ref 789* 792* 792 795*
top                       2            based           fixed bin(15,0)          level 2 dcl 3-22 set ref 628 630 630*
top_int                   6            based           fixed bin(31,0)          level 2 dcl 3-22 set ref 632*
typ                             000443 automatic       fixed bin(17,0)          dcl 142 set ref 271* 273* 275* 277
type19                          000210 internal static structure                level 1 unaligned dcl 1106 set ref 916 948
type1_ptr                 4     000222 internal static pointer                  level 2 dcl 1123 set ref 178*
uchars_off                      000011 internal static fixed bin(17,0)          initial dcl 97 set ref 305* 306 311 321*
unspec                                                 builtin function         dcl 1182 set ref 312 313 951* 951
v                                      parameter       fixed bin(17,0)          dcl 967 set ref 964 972*
variable                101(01)        based           bit(1)                   level 2 packed packed unaligned dcl 1-25 ref 381
vch                                    based           structure                level 1 unaligned dcl 979 in procedure
                                                                                  "cobol_open_gen"
vch                                    based           varying char(2048)       dcl 838 in procedure "cv" set ref 846* 854*
vch_loc                                parameter       pointer                  dcl 833 ref 829 846 854
vf                              000473 automatic       char(12)                 initial packed unaligned dcl 153 set ref 153* 508
                                                                                  508

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
addrel                                                 builtin function         dcl 1182
allo1_max                              defined         fixed bin(17,0)          dcl 14-171
allo1_ptr                              defined         pointer                  dcl 14-67
alter_flag                             defined         fixed bin(17,0)          dcl 14-135
alter_index                            defined         fixed bin(17,0)          dcl 14-153
alter_list_ptr                         defined         pointer                  dcl 14-39
aq_struct                              internal static structure                level 1 unaligned dcl 1040
arg_ptr                                automatic       pointer                  dcl 113
binary                                                 builtin function         dcl 1182
cd_cnt                                 defined         fixed bin(17,0)          dcl 14-197
char4b                                 based           char(4)                  packed unaligned dcl 107
char8b                                 based           char(8)                  packed unaligned dcl 108
cobol_$allo1_max                       external static fixed bin(17,0)          dcl 14-170
cobol_$allo1_ptr                       external static pointer                  dcl 14-66
cobol_$alter_flag                      external static fixed bin(17,0)          dcl 14-134
cobol_$alter_index                     external static fixed bin(17,0)          dcl 14-152
cobol_$alter_list_ptr                  external static pointer                  dcl 14-38
cobol_$cd_cnt                          external static fixed bin(17,0)          dcl 14-196
cobol_$cobol_data_wd_off               external static fixed bin(17,0)          dcl 14-118
cobol_$compile_count                   external static fixed bin(17,0)          dcl 14-142
cobol_$coms_charcnt                    external static fixed bin(17,0)          dcl 14-188
cobol_$coms_wdoff                      external static fixed bin(17,0)          dcl 14-202
cobol_$con_end_ptr                     external static pointer                  dcl 14-10
cobol_$con_wd_off                      external static fixed bin(17,0)          dcl 14-92
cobol_$cons_charcnt                    external static fixed bin(17,0)          dcl 14-192
cobol_$constant_offset                 external static fixed bin(17,0)          dcl 14-156
cobol_$data_init_flag                  external static fixed bin(17,0)          dcl 14-130
cobol_$date_compiled_sw                external static fixed bin(17,0)          dcl 14-180
cobol_$debug_enable                    external static fixed bin(17,0)          dcl 14-174
cobol_$def_base_ptr                    external static pointer                  dcl 14-12
cobol_$def_max                         external static fixed bin(17,0)          dcl 14-96
cobol_$def_wd_off                      external static fixed bin(17,0)          dcl 14-94
cobol_$diag_ptr                        external static pointer                  dcl 14-70
cobol_$eln_max                         external static fixed bin(17,0)          dcl 14-172
cobol_$eln_ptr                         external static pointer                  dcl 14-68
cobol_$fixup_max                       external static fixed bin(17,0)          dcl 14-164
cobol_$fixup_ptr                       external static pointer                  dcl 14-30
cobol_$fs_charcnt                      external static fixed bin(17,0)          dcl 14-184
cobol_$fs_wdoff                        external static fixed bin(17,0)          dcl 14-198
cobol_$include_cnt                     external static fixed bin(17,0)          dcl 14-182
cobol_$include_info_ptr                external static pointer                  dcl 14-86
cobol_$init_stack_off                  external static fixed bin(17,0)          dcl 14-124
cobol_$initval_base_ptr                external static pointer                  dcl 14-32
cobol_$initval_file_ptr                external static pointer                  dcl 14-34
cobol_$initval_flag                    external static fixed bin(17,0)          dcl 14-178
cobol_$link_base_ptr                   external static pointer                  dcl 14-14
cobol_$link_max                        external static fixed bin(17,0)          dcl 14-100
cobol_$link_wd_off                     external static fixed bin(17,0)          dcl 14-98
cobol_$list_off                        external static fixed bin(17,0)          dcl 14-154
cobol_$list_ptr                        external static pointer                  dcl 14-64
cobol_$ls_charcnt                      external static fixed bin(17,0)          dcl 14-190
cobol_$main_pcs_ptr                    external static pointer                  dcl 14-84
cobol_$map_data_max                    external static fixed bin(17,0)          dcl 14-162
cobol_$map_data_ptr                    external static pointer                  dcl 14-54
cobol_$max_stack_off                   external static fixed bin(17,0)          dcl 14-122
cobol_$minpral5_ptr                    external static pointer                  dcl 14-50
cobol_$misc_base_ptr                   external static pointer                  dcl 14-60
cobol_$misc_end_ptr                    external static pointer                  dcl 14-62
cobol_$misc_max                        external static fixed bin(17,0)          dcl 14-158
cobol_$non_source_offset               external static fixed bin(17,0)          dcl 14-176
cobol_$ntbuf_ptr                       external static pointer                  dcl 14-82
cobol_$obj_seg_name                    external static char(32)                 dcl 14-208
cobol_$op_con_ptr                      external static pointer                  dcl 14-80
cobol_$para_eop_flag                   external static fixed bin(17,0)          dcl 14-138
cobol_$pd_map_index                    external static fixed bin(17,0)          dcl 14-116
cobol_$pd_map_max                      external static fixed bin(17,0)          dcl 14-160
cobol_$pd_map_ptr                      external static pointer                  dcl 14-28
cobol_$pd_map_sw                       external static fixed bin(17,0)          dcl 14-126
cobol_$perform_list_ptr                external static pointer                  dcl 14-36
cobol_$perform_para_index              external static fixed bin(17,0)          dcl 14-148
cobol_$perform_sect_index              external static fixed bin(17,0)          dcl 14-150
cobol_$priority_no                     external static fixed bin(17,0)          dcl 14-140
cobol_$ptr_assumption_ind              external static fixed bin(17,0)          dcl 14-144
cobol_$ptr_status_ptr                  external static pointer                  dcl 14-56
cobol_$reg_assumption_ind              external static fixed bin(17,0)          dcl 14-146
cobol_$reg_status_ptr                  external static pointer                  dcl 14-58
cobol_$reloc_def_base_ptr              external static pointer                  dcl 14-20
cobol_$reloc_def_max                   external static fixed bin(24,0)          dcl 14-108
cobol_$reloc_link_base_ptr             external static pointer                  dcl 14-22
cobol_$reloc_link_max                  external static fixed bin(24,0)          dcl 14-110
cobol_$reloc_sym_base_ptr              external static pointer                  dcl 14-24
cobol_$reloc_sym_max                   external static fixed bin(24,0)          dcl 14-112
cobol_$reloc_text_base_ptr             external static pointer                  dcl 14-18
cobol_$reloc_text_max                  external static fixed bin(24,0)          dcl 14-106
cobol_$reloc_work_base_ptr             external static pointer                  dcl 14-26
cobol_$reloc_work_max                  external static fixed bin(24,0)          dcl 14-114
cobol_$reswd_ptr                       external static pointer                  dcl 14-78
cobol_$same_sort_merge_proc            external static bit(1)                   dcl 14-214
cobol_$scratch_dir                     external static char(168)                dcl 14-206
cobol_$sect_eop_flag                   external static fixed bin(17,0)          dcl 14-136
cobol_$seg_init_flag                   external static fixed bin(17,0)          dcl 14-132
cobol_$seg_init_list_ptr               external static pointer                  dcl 14-40
cobol_$stack_off                       external static fixed bin(17,0)          dcl 14-120
cobol_$statement_info_ptr              external static pointer                  dcl 14-76
cobol_$sym_base_ptr                    external static pointer                  dcl 14-16
cobol_$sym_max                         external static fixed bin(17,0)          dcl 14-104
cobol_$sym_wd_off                      external static fixed bin(17,0)          dcl 14-102
cobol_$tag_table_max                   external static fixed bin(17,0)          dcl 14-166
cobol_$tag_table_ptr                   external static pointer                  dcl 14-52
cobol_$temp_token_area_ptr             external static pointer                  dcl 14-42
cobol_$temp_token_max                  external static fixed bin(17,0)          dcl 14-168
cobol_$temp_token_ptr                  external static pointer                  dcl 14-44
cobol_$text_base_ptr                   external static pointer                  dcl 14-8
cobol_$token_block1_ptr                external static pointer                  dcl 14-46
cobol_$token_block2_ptr                external static pointer                  dcl 14-48
cobol_$value_cnt                       external static fixed bin(17,0)          dcl 14-194
cobol_$ws_charcnt                      external static fixed bin(17,0)          dcl 14-186
cobol_$ws_wdoff                        external static fixed bin(17,0)          dcl 14-200
cobol_$xref_bypass                     external static bit(1)                   dcl 14-212
cobol_$xref_chain_ptr                  external static pointer                  dcl 14-74
cobol_$xref_token_ptr                  external static pointer                  dcl 14-72
cobol_afp                              defined         pointer                  dcl 13-11
cobol_analin_fileno                    defined         pointer                  dcl 13-13
cobol_cmfp                             defined         pointer                  dcl 13-21
cobol_com_fileno                       defined         pointer                  dcl 13-23
cobol_curr_in                          defined         pointer                  dcl 13-53
cobol_curr_out                         defined         pointer                  dcl 13-55
cobol_data_wd_off                      defined         fixed bin(17,0)          dcl 14-119
cobol_dfp                              defined         pointer                  dcl 13-27
cobol_eltp                             defined         pointer                  dcl 13-19
cobol_ext_$cobol_afp                   external static pointer                  dcl 13-10
cobol_ext_$cobol_analin_fileno         external static pointer                  dcl 13-12
cobol_ext_$cobol_cmfp                  external static pointer                  dcl 13-20
cobol_ext_$cobol_com_fileno            external static pointer                  dcl 13-22
cobol_ext_$cobol_curr_in               external static pointer                  dcl 13-52
cobol_ext_$cobol_curr_out              external static pointer                  dcl 13-54
cobol_ext_$cobol_dfp                   external static pointer                  dcl 13-26
cobol_ext_$cobol_eltp                  external static pointer                  dcl 13-18
cobol_ext_$cobol_fileno1               external static fixed bin(24,0)          dcl 13-78
cobol_ext_$cobol_hfp                   external static pointer                  dcl 13-28
cobol_ext_$cobol_lpr                   external static char(5)                  packed unaligned dcl 13-95
cobol_ext_$cobol_m1fp                  external static pointer                  dcl 13-30
cobol_ext_$cobol_m2fp                  external static pointer                  dcl 13-32
cobol_ext_$cobol_min1_fileno           external static pointer                  dcl 13-34
cobol_ext_$cobol_min2_fileno_ptr       external static pointer                  dcl 13-36
cobol_ext_$cobol_name_fileno           external static pointer                  dcl 13-38
cobol_ext_$cobol_name_fileno_ptr       external static pointer                  dcl 13-40
cobol_ext_$cobol_ntfp                  external static pointer                  dcl 13-42
cobol_ext_$cobol_options               external static char(120)                packed unaligned dcl 13-97
cobol_ext_$cobol_options_len           external static fixed bin(24,0)          dcl 13-80
cobol_ext_$cobol_pdofp                 external static pointer                  dcl 13-44
cobol_ext_$cobol_pdout_fileno          external static fixed bin(24,0)          dcl 13-82
cobol_ext_$cobol_pfp                   external static pointer                  dcl 13-46
cobol_ext_$cobol_print_fileno          external static fixed bin(24,0)          dcl 13-84
cobol_ext_$cobol_rm2fp                 external static pointer                  dcl 13-48
cobol_ext_$cobol_rmin2_fileno          external static fixed bin(24,0)          dcl 13-86
cobol_ext_$cobol_rmin2fp               external static pointer                  dcl 13-50
cobol_ext_$cobol_rwdd                  external static pointer                  dcl 13-72
cobol_ext_$cobol_rwpd                  external static pointer                  dcl 13-74
cobol_ext_$cobol_sfp                   external static pointer                  dcl 13-56
cobol_ext_$cobol_w1p                   external static pointer                  dcl 13-58
cobol_ext_$cobol_w2p                   external static pointer                  dcl 13-60
cobol_ext_$cobol_w3p                   external static pointer                  dcl 13-62
cobol_ext_$cobol_w5p                   external static pointer                  dcl 13-64
cobol_ext_$cobol_w6p                   external static pointer                  dcl 13-66
cobol_ext_$cobol_w7p                   external static pointer                  dcl 13-68
cobol_ext_$cobol_x1_fileno             external static fixed bin(24,0)          dcl 13-88
cobol_ext_$cobol_x2_fileno             external static fixed bin(24,0)          dcl 13-90
cobol_ext_$cobol_x3_fileno             external static fixed bin(24,0)          dcl 13-92
cobol_ext_$cobol_x3fp                  external static pointer                  dcl 13-70
cobol_ext_$cobol_xlast8                external static bit(1)                   packed unaligned dcl 13-100
cobol_ext_$report_exists               external static bit(1)                   packed unaligned dcl 13-102
cobol_ext_$report_first_token          external static pointer                  dcl 13-14
cobol_ext_$report_last_token           external static pointer                  dcl 13-16
cobol_fileno1                          defined         fixed bin(24,0)          dcl 13-79
cobol_hfp                              defined         pointer                  dcl 13-29
cobol_io_util$move              000000 constant        entry                    external dcl 1172
cobol_lpr                              defined         char(5)                  packed unaligned dcl 13-96
cobol_m1fp                             defined         pointer                  dcl 13-31
cobol_m2fp                             defined         pointer                  dcl 13-33
cobol_min1_fileno                      defined         pointer                  dcl 13-35
cobol_min2_fileno_ptr                  defined         pointer                  dcl 13-37
cobol_name_fileno                      defined         pointer                  dcl 13-39
cobol_name_fileno_ptr                  defined         pointer                  dcl 13-41
cobol_ntfp                             defined         pointer                  dcl 13-43
cobol_options                          defined         char(120)                packed unaligned dcl 13-98
cobol_options_len                      defined         fixed bin(24,0)          dcl 13-81
cobol_pdofp                            defined         pointer                  dcl 13-45
cobol_pdout_fileno                     defined         fixed bin(24,0)          dcl 13-83
cobol_pfp                              defined         pointer                  dcl 13-47
cobol_print_fileno                     defined         fixed bin(24,0)          dcl 13-85
cobol_rm2fp                            defined         pointer                  dcl 13-49
cobol_rmin2_fileno                     defined         fixed bin(24,0)          dcl 13-87
cobol_rmin2fp                          defined         pointer                  dcl 13-51
cobol_rwdd                             defined         pointer                  dcl 13-73
cobol_rwpd                             defined         pointer                  dcl 13-75
cobol_sfp                              defined         pointer                  dcl 13-57
cobol_w1p                              defined         pointer                  dcl 13-59
cobol_w2p                              defined         pointer                  dcl 13-61
cobol_w3p                              defined         pointer                  dcl 13-63
cobol_w5p                              defined         pointer                  dcl 13-65
cobol_w6p                              defined         pointer                  dcl 13-67
cobol_w7p                              defined         pointer                  dcl 13-69
cobol_x1_fileno                        defined         fixed bin(24,0)          dcl 13-89
cobol_x2_fileno                        defined         fixed bin(24,0)          dcl 13-91
cobol_x3_fileno                        defined         fixed bin(24,0)          dcl 13-93
cobol_x3fp                             defined         pointer                  dcl 13-71
cobol_xlast8                           defined         bit(1)                   packed unaligned dcl 13-101
com2_ptr                               automatic       pointer                  dcl 115
compile_count                          defined         fixed bin(17,0)          dcl 14-143
coms_charcnt                           defined         fixed bin(17,0)          dcl 14-189
coms_wdoff                             defined         fixed bin(17,0)          dcl 14-203
con_end_ptr                            defined         pointer                  dcl 14-11
con_wd_off                             defined         fixed bin(17,0)          dcl 14-93
cons_charcnt                           defined         fixed bin(17,0)          dcl 14-193
constant_offset                        defined         fixed bin(17,0)          dcl 14-157
data_init_flag                         defined         fixed bin(17,0)          dcl 14-131
date_compiled_sw                       defined         fixed bin(17,0)          dcl 14-181
debug_enable                           defined         fixed bin(17,0)          dcl 14-175
def_base_ptr                           defined         pointer                  dcl 14-13
def_max                                defined         fixed bin(17,0)          dcl 14-97
def_wd_off                             defined         fixed bin(17,0)          dcl 14-95
define_detach                          automatic       fixed bin(17,0)          dcl 133
diag_ptr                               defined         pointer                  dcl 14-71
dn_ptr                                 automatic       pointer                  dcl 121
eln_max                                defined         fixed bin(17,0)          dcl 14-173
eln_ptr                                defined         pointer                  dcl 14-69
end_stmt                               based           structure                level 1 unaligned dcl 10-16
eos_ptr                                automatic       pointer                  dcl 10-13
fixup_max                              defined         fixed bin(17,0)          dcl 14-165
fixup_ptr                              defined         pointer                  dcl 14-31
fs_charcnt                             defined         fixed bin(17,0)          dcl 14-185
fs_wdoff                               defined         fixed bin(17,0)          dcl 14-199
i                                      automatic       fixed bin(17,0)          dcl 142
include_cnt                            defined         fixed bin(17,0)          dcl 14-183
include_info_ptr                       defined         pointer                  dcl 14-87
init_stack_off                         defined         fixed bin(17,0)          dcl 14-125
initval_base_ptr                       defined         pointer                  dcl 14-33
initval_file_ptr                       defined         pointer                  dcl 14-35
initval_flag                           defined         fixed bin(17,0)          dcl 14-179
instr                                  based           bit(36)                  array packed unaligned dcl 106
link_base_ptr                          defined         pointer                  dcl 14-15
link_max                               defined         fixed bin(17,0)          dcl 14-101
link_wd_off                            defined         fixed bin(17,0)          dcl 14-99
list_off                               defined         fixed bin(17,0)          dcl 14-155
list_ptr                               defined         pointer                  dcl 14-65
ls_charcnt                             defined         fixed bin(17,0)          dcl 14-191
main_pcs_ptr                           defined         pointer                  dcl 14-85
map_data_max                           defined         fixed bin(17,0)          dcl 14-163
map_data_ptr                           defined         pointer                  dcl 14-55
max_stack_off                          defined         fixed bin(17,0)          dcl 14-123
mcode_off                              internal static fixed bin(17,0)          initial dcl 87
minpral5_ptr                           defined         pointer                  dcl 14-51
misc_base_ptr                          defined         pointer                  dcl 14-61
misc_end_ptr                           defined         pointer                  dcl 14-63
misc_max                               defined         fixed bin(17,0)          dcl 14-159
mod                                                    builtin function         dcl 1182
name_ptr                               automatic       pointer                  dcl 120
next_tag                               defined         fixed bin(17,0)          dcl 14-129
non_source_offset                      defined         fixed bin(17,0)          dcl 14-177
ntbuf_ptr                              defined         pointer                  dcl 14-83
obj_seg_name                           defined         char(32)                 dcl 14-209
op_con_ptr                             defined         pointer                  dcl 14-81
para_eop_flag                          defined         fixed bin(17,0)          dcl 14-139
pd_map_index                           defined         fixed bin(17,0)          dcl 14-117
pd_map_max                             defined         fixed bin(17,0)          dcl 14-161
pd_map_ptr                             defined         pointer                  dcl 14-29
pd_map_sw                              defined         fixed bin(17,0)          dcl 14-127
perform_list_ptr                       defined         pointer                  dcl 14-37
perform_para_index                     defined         fixed bin(17,0)          dcl 14-149
perform_sect_index                     defined         fixed bin(17,0)          dcl 14-151
pr1_struct                             internal static structure                level 1 unaligned dcl 1023
priority_no                            defined         fixed bin(17,0)          dcl 14-141
ptr_assumption_ind                     defined         fixed bin(17,0)          dcl 14-145
ptr_status_ptr                         defined         pointer                  dcl 14-57
reg_assumption_ind                     defined         fixed bin(17,0)          dcl 14-147
reg_status_ptr                         defined         pointer                  dcl 14-59
rel                                                    builtin function         dcl 1182
reloc_def_base_ptr                     defined         pointer                  dcl 14-21
reloc_def_max                          defined         fixed bin(24,0)          dcl 14-109
reloc_link_base_ptr                    defined         pointer                  dcl 14-23
reloc_link_max                         defined         fixed bin(24,0)          dcl 14-111
reloc_sym_base_ptr                     defined         pointer                  dcl 14-25
reloc_sym_max                          defined         fixed bin(24,0)          dcl 14-113
reloc_text_base_ptr                    defined         pointer                  dcl 14-19
reloc_text_max                         defined         fixed bin(24,0)          dcl 14-107
reloc_work_base_ptr                    defined         pointer                  dcl 14-27
reloc_work_max                         defined         fixed bin(24,0)          dcl 14-115
report_exists                          defined         bit(1)                   packed unaligned dcl 13-103
report_first_token                     defined         pointer                  dcl 13-15
report_last_token                      defined         pointer                  dcl 13-17
reserved_word                          based           structure                level 1 unaligned dcl 4-14
reswd_ptr                              defined         pointer                  dcl 14-79
rw_ptr                                 automatic       pointer                  dcl 4-11
same_sort_merge_proc                   defined         bit(1)                   dcl 14-215
scratch_dir                            defined         char(168)                dcl 14-207
sect_eop_flag                          defined         fixed bin(17,0)          dcl 14-137
seg_init_flag                          defined         fixed bin(17,0)          dcl 14-133
seg_init_list_ptr                      defined         pointer                  dcl 14-41
stack_off                              defined         fixed bin(17,0)          dcl 14-121
statement_info_ptr                     defined         pointer                  dcl 14-77
status_arg                             internal static structure                level 1 unaligned dcl 1017
string                                                 builtin function         dcl 1182
sym_base_ptr                           defined         pointer                  dcl 14-17
sym_max                                defined         fixed bin(17,0)          dcl 14-105
sym_wd_off                             defined         fixed bin(17,0)          dcl 14-103
tag_table_max                          defined         fixed bin(17,0)          dcl 14-167
tag_table_ptr                          defined         pointer                  dcl 14-53
temp_token_area_ptr                    defined         pointer                  dcl 14-43
temp_token_max                         defined         fixed bin(17,0)          dcl 14-169
temp_token_ptr                         defined         pointer                  dcl 14-45
text_base_ptr                          defined         pointer                  dcl 14-9
text_wd_off                            defined         fixed bin(17,0)          dcl 14-91
token_block1_ptr                       defined         pointer                  dcl 14-47
token_block2_ptr                       defined         pointer                  dcl 14-49
ubits_off                              internal static fixed bin(17,0)          initial dcl 96
unique_bits_vstring                    internal static varying char(12)         initial dcl 1131
unique_chars_vstring                   internal static varying char(13)         initial dcl 1132
upper_value_arg                        internal static structure                level 1 unaligned dcl 1013
utemp                                  automatic       fixed bin(17,0)          dcl 141
value_arg                              internal static structure                level 1 unaligned dcl 1009
value_cnt                              defined         fixed bin(17,0)          dcl 14-195
ws_charcnt                             defined         fixed bin(17,0)          dcl 14-187
ws_wdoff                               defined         fixed bin(17,0)          dcl 14-201
x5_struct                              internal static structure                level 1 unaligned dcl 1031
xref_bypass                            defined         bit(1)                   dcl 14-213
xref_chain_ptr                         defined         pointer                  dcl 14-75
xref_token_ptr                         defined         pointer                  dcl 14-73

NAMES DECLARED BY EXPLICIT CONTEXT.
ML                              003605 constant        entry                    internal dcl 718 ref 241 282 306 331 342 469 477 503
                                                                                  508
MOVE                            004315 constant        entry                    internal dcl 923 ref 286 357
NUMS                            004402 constant        entry                    internal dcl 964 ref 667 704 706 708 710
cobol_open_gen                  000150 constant        entry                    external dcl 38
cogx                            002055 constant        label                    dcl 655 ref 266 530
cv                              004111 constant        entry                    internal dcl 829 ref 198 199 201
get_info                        003651 constant        entry                    internal dcl 734 ref 761 783 816
linage_init                     004245 constant        entry                    internal dcl 899 ref 608 618 624 630 639
o_m                             000003 constant        label                    array(0:4) dcl 421 set ref 419
omx                             001576 constant        label                    dcl 434 ref 423 427 432
op                              000000 constant        label                    array(3) dcl 280 ref 277
opfin                           002056 constant        entry                    internal dcl 532 ref 265 529
opx                             002021 constant        label                    dcl 519 ref 284 290 513
set_atd                         003253 constant        entry                    internal dcl 689 ref 672 683
set_atd1                        003052 constant        entry                    internal dcl 659 ref 465
set_atd2                        003244 constant        entry                    internal dcl 678 ref 467
set_file_id                     003672 constant        entry                    internal dcl 745 ref 455 459
set_replacement_info            004041 constant        entry                    internal dcl 801 ref 429
set_retention_info              003750 constant        entry                    internal dcl 775 ref 451
start                           000272 constant        label                    dcl 161
start_codegen                   000514 constant        label                    dcl 214
test_cata_name                  004151 constant        entry                    internal dcl 858 ref 207

NAME DECLARED BY CONTEXT OR IMPLICATION.
divide                                                 builtin function         ref 240 301 340 374 519

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      5336        5670    4760        5346
Length      6446    4760       332         542     355         226

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cobol_open_gen                      750 external procedure  is an external procedure.  
opfin                                   internal procedure  shares stack frame of external procedure cobol_open_gen.  
set_atd1                                internal procedure  shares stack frame of external procedure cobol_open_gen.  
set_atd2                                internal procedure  shares stack frame of external procedure cobol_open_gen.  
set_atd                                 internal procedure  shares stack frame of external procedure cobol_open_gen.  
ML                                      internal procedure  shares stack frame of external procedure cobol_open_gen.  
get_info                                internal procedure  shares stack frame of external procedure cobol_open_gen.  
set_file_id                             internal procedure  shares stack frame of external procedure cobol_open_gen.  
set_retention_info                      internal procedure  shares stack frame of external procedure cobol_open_gen.  
set_replacement_info                    internal procedure  shares stack frame of external procedure cobol_open_gen.  
cv                                      internal procedure  shares stack frame of external procedure cobol_open_gen.  
test_cata_name                          internal procedure  shares stack frame of external procedure cobol_open_gen.  
linage_init                             internal procedure  shares stack frame of external procedure cobol_open_gen.  
MOVE                                    internal procedure  shares stack frame of external procedure cobol_open_gen.  
NUMS                                    internal procedure  shares stack frame of external procedure cobol_open_gen.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 ioname_off                  cobol_open_gen
000011 uchars_off                  cobol_open_gen
000012 len_off                     cobol_open_gen
000014 basic_arg                   cobol_open_gen
000022 basic_struct                cobol_open_gen
000030 atd_type9                   cobol_open_gen
000064 catid_type9                 cobol_open_gen
000120 comp6_type9                 cobol_open_gen
000154 fkey_type9                  cobol_open_gen
000210 type19                      cobol_open_gen
000222 ioerror                     cobol_open_gen
000231 get_pdir_vstring            cobol_open_gen

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cobol_open_gen           000100 args                        cobol_open_gen
                         000142 mpout                       cobol_open_gen
                         000154 atd_string                  cobol_open_gen
                         000223 buf_off                     cobol_open_gen
                         000224 ft_max_cra_size             cobol_open_gen
                         000226 ft_work                     cobol_open_gen
                         000230 ft_format                   cobol_open_gen
                         000232 ft_protect                  cobol_open_gen
                         000235 ft_retain                   cobol_open_gen
                         000241 ft_force                    cobol_open_gen
                         000244 ft_output_mode              cobol_open_gen
                         000252 ft_density_num              cobol_open_gen
                         000253 ft_position_num             cobol_open_gen
                         000254 ft_block_num                cobol_open_gen
                         000255 ft_device_num               cobol_open_gen
                         000256 ft_extend                   cobol_open_gen
                         000261 good_tag                    cobol_open_gen
                         000262 iocb_tag                    cobol_open_gen
                         000263 attach_tag                  cobol_open_gen
                         000264 open_tag                    cobol_open_gen
                         000265 open_tag1                   cobol_open_gen
                         000266 open_tag2                   cobol_open_gen
                         000267 stream_tag                  cobol_open_gen
                         000270 ft_expire                   cobol_open_gen
                         000274 handler                     cobol_open_gen
                         000277 om                          cobol_open_gen
                         000302 extend_sw                   cobol_open_gen
                         000303 alt_sw                      cobol_open_gen
                         000304 alt_output                  cobol_open_gen
                         000306 linage_ptr                  cobol_open_gen
                         000310 ioerror_ptr                 cobol_open_gen
                         000312 ft_ptr                      cobol_open_gen
                         000314 fkey_ptr                    cobol_open_gen
                         000316 basic_ptr                   cobol_open_gen
                         000320 segname                     cobol_open_gen
                         000331 append_size                 cobol_open_gen
                         000332 append_string               cobol_open_gen
                         000337 namelen                     cobol_open_gen
                         000340 atd_len                     cobol_open_gen
                         000341 atd_off                     cobol_open_gen
                         000342 atd_charoff                 cobol_open_gen
                         000343 aloff                       cobol_open_gen
                         000344 buflen_off                  cobol_open_gen
                         000345 ioname_len                  cobol_open_gen
                         000346 cobol_mode                  cobol_open_gen
                         000347 multics_mode                cobol_open_gen
                         000350 file_id                     cobol_open_gen
                         000356 cata_name                   cobol_open_gen
                         000441 key_sz                      cobol_open_gen
                         000442 temp                        cobol_open_gen
                         000443 typ                         cobol_open_gen
                         000444 f_ifn                       cobol_open_gen
                         000451 f_nm                        cobol_open_gen
                         000462 fc_nm                       cobol_open_gen
                         000473 vf                          cobol_open_gen
                         000476 cata_name_loc               cobol_open_gen
                         000500 atd_string_loc              cobol_open_gen
                         000502 append_string_loc           cobol_open_gen
                         000564 tm                          set_retention_info
                         000566 dt                          set_retention_info
                         000612 i                           cv
                         000622 l                           test_cata_name
                         000623 i                           test_cata_name
                         000640 p                           MOVE
                         000650 S                           NUMS
                         000655 len                         NUMS

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
r_e_as              r_ne_as             alloc_char_temp     cat_realloc_chars   call_ext_out_desc   call_ext_out
return_mac          shorten_stack       ext_entry           any_to_any_truncate_

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
clock_                        cobol_alloc$stack             cobol_call_op                 cobol_define_tag
cobol_file_util$open          cobol_gen_ioerror             cobol_gen_ioerror$finish_up   cobol_io_util$file_desc
cobol_io_util$move_lit        cobol_iocall                  cobol_iomode                  cobol_ioop_util$disp
cobol_ioop_util$lda           cobol_ioop_util$ldaldx5       cobol_ioop_util$open_clean_up cobol_ioop_util$set_fsb
cobol_ioop_util$set_stz       cobol_ioop_util$tra           cobol_make_tagref             cobol_move_gen
cobol_open_util$make_pdir_path                              cobol_read_ft                 cobol_read_rand
cobol_reg_manager$after_op    cobol_set_fsbptr              date_time_                    ioa_$rsnnl

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
cobol_$next_tag               cobol_$text_wd_off            cobol_ext_$cobol_com_ptr




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     38 000145        73 000155        76 000162        77 000164        78 000170        79 000175        80 000202
     81 000206        82 000213        83 000215        84 000217        85 000220        86 000221       101 000227
    102 000234       103 000241       123 000245       124 000250       137 000255       138 000262       153 000267
    161 000272       165 000274       166 000276       167 000300       168 000302       169 000305       170 000310
    171 000313       172 000316       173 000321       174 000324       175 000327       176 000331       177 000333
    178 000334       179 000341       180 000342       181 000343       183 000347       185 000362       186 000366
    188 000370       190 000411       192 000430       193 000432       194 000433       195 000435       198 000437
    199 000452       201 000464       204 000477       207 000510       214 000514       218 000525       220 000532
    221 000541       223 000550       225 000554       226 000563       227 000576       228 000605       230 000625
    231 000626       233 000641       234 000652       236 000661       237 000672       240 000675       241 000701
    242 000712       248 000723       249 000736       250 000747       256 000756       261 000771       263 000775
    264 001000       265 001010       266 001011       269 001012       271 001015       273 001022       275 001033
    277 001035       280 001036       282 001040       284 001047       286 001050       288 001064       290 001066
    292 001067       296 001075       297 001125       299 001132       301 001142       303 001147       305 001166
    306 001172       310 001200       311 001201       312 001205       313 001213       314 001221       315 001223
    316 001225       317 001230       319 001232       320 001246       321 001255       323 001275       325 001277
    330 001300       331 001302       334 001311       338 001312       340 001315       342 001322       344 001332
    345 001333       348 001335       350 001340       351 001343       352 001344       353 001345       357 001347
    363 001363       365 001367       367 001371       369 001401       372 001411       374 001413       376 001421
    378 001426       379 001432       380 001434       381 001435       383 001440       384 001444       385 001446
    386 001447       388 001453       391 001457       393 001472       396 001476       398 001506       401 001515
    403 001523       406 001530       409 001533       411 001540       414 001547       415 001553       417 001556
    419 001561       421 001562       423 001566       425 001567       427 001573       429 001574       432 001575
    438 001576       441 001605       442 001606       444 001610       446 001613       447 001620       451 001621
    455 001627       458 001641       459 001642       462 001643       465 001650       467 001656       468 001657
    469 001661       471 001672       474 001711       477 001714       479 001725       481 001727       485 001730
    487 001740       491 001753       495 001764       498 001771       500 001773       503 001774       508 002005
    509 002016       513 002020       519 002021       521 002024       523 002035       525 002043       527 002051
    529 002053       530 002054       655 002055       532 002056       536 002057       538 002072       539 002075
    540 002105       543 002114       545 002127       548 002136       549 002151       554 002162       555 002171
    557 002200       559 002215       562 002221       564 002234       566 002247       569 002264       570 002267
    575 002273       576 002300       577 002307       581 002322       585 002335       586 002346       589 002355
    591 002357       594 002367       595 002403       600 002412       602 002416       603 002425       605 002443
    606 002446       608 002447       611 002466       613 002502       614 002505       615 002507       618 002521
    621 002541       623 002557       624 002573       626 002611       628 002624       630 002627       632 002644
    634 002657       635 002676       636 002705       637 002706       639 002722       642 002742       643 002756
    645 002772       647 003010       648 003011       650 003026       651 003040       653 003051       659 003052
    663 003053       664 003107       665 003122       667 003170       669 003227       672 003242       674 003243
    678 003244       682 003245       683 003251       685 003252       689 003253       693 003254       697 003315
    700 003352       704 003372       706 003430       708 003467       710 003526       713 003565       716 003604
    718 003605       729 003607       731 003647       734 003651       741 003653       743 003671       745 003672
    749 003673       752 003701       754 003711       757 003721       761 003722       764 003732       767 003736
    770 003746       773 003747       775 003750       783 003751       786 003760       789 003764       792 003773
    795 004016       796 004033       799 004040       801 004041       805 004042       808 004046       811 004055
    812 004062       816 004063       819 004073       822 004077       824 004107       827 004110       829 004111
    841 004113       844 004121       846 004130       847 004141       851 004142       854 004145       856 004150
    858 004151       865 004152       866 004154       868 004156       869 004170       873 004172       875 004174
    877 004201       880 004206       884 004207       886 004211       887 004222       890 004223       894 004224
    895 004236       897 004244       899 004245       905 004247       907 004257       908 004261       909 004266
    910 004270       912 004272       913 004274       914 004276       916 004302       918 004304       919 004314
    923 004315       941 004317       944 004335       945 004337       946 004344       947 004347       948 004351
    951 004353       953 004357       956 004364       959 004374       960 004377       962 004401       964 004402
    972 004404       974 004433


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
