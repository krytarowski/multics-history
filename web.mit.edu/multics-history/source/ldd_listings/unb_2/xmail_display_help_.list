	COMPILATION LISTING OF SEGMENT xmail_display_help_
	Compiled by: Multics PL/I Compiler, Release 30, of February 16, 1988
	Compiled at: Honeywell Bull, Phoenix AZ, SysM
	Compiled on: 09/13/88  1322.6 mst Tue
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1987                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 /****^  HISTORY COMMENTS:
       15*  1) change(86-01-22,LJAdams), approve(86-01-22,MCR7327),
       16*     audit(86-04-22,RBarstad), install(86-04-25,MR12.0-1048):
       17*     Added ssu references so subsystem calls to help_ will work properly.
       18*     Added include files "help_args" and "xmail_data".
       19*  2) change(86-04-21,Blair), approve(86-04-21,MCR7358),
       20*     audit(86-04-22,RBarstad), install(86-05-28,MR12.0-1062):
       21*     Changed to use a cds segment to provide the help dir pathname. This has
       22*     caused xmail_help.incl.pl1 to be replaced by xmail_help_data_.incl.pl1.
       23*  3) change(87-09-03,LJAdams), approve(87-09-03,MCR7766),
       24*     audit(88-08-04,GDixon), install(88-09-13,MR12.2-1109):
       25*     Changed Vhelp_args_2 to Vhelp_args_3.
       26*                                                   END HISTORY COMMENTS */
       27 
       28 xmail_display_help_: proc (P_seg_name, P_info_name, P_code);
       29 
       30 	dcl     (P_seg_name, P_info_name) char (*);
       31 	dcl     P_code		 fixed bin (35);
       32 
       33 	dcl     code		 fixed bin (35);
       34 	dcl     ME_CHAR		 char (19) init ("xmail_display_help_") int static options (constant);
       35           dcl     ME_HELP_SUFFIX         char (10) init ("info") int static options (constant);
       36           dcl     ME_SEARCH_LIST         char (4) init ("info") int static options (constant);
       37 	dcl     (error_table_$nomatch, xmail_err_$no_help_available, xmail_err_$unable_to_get_help) fixed bin (35) ext;
       38 
       39 	dcl     (addr, dim, null)		builtin;
       40 
       41           dcl     cleanup condition;
       42 		 
       43 
       44 	P_code = 0;
       45           Phelp_args = null;
       46 	
       47           on cleanup
       48              call help_$term ("xmail", Phelp_args, (0));
       49 	
       50 	call help_$init (ME_CHAR, ME_SEARCH_LIST, "", Vhelp_args_3, Phelp_args, code);
       51 	if code ^= 0 then go to DH_ERR;
       52 
       53 	help_args.Nsearch_dirs = dim(xmail_HELP_DIRS.path, 1);
       54 	help_args.search_dirs  = xmail_HELP_DIRS.path;
       55 	help_args.Sctl.all = "1"b;			/* No questions asked */
       56 	help_args.Npaths = 1;
       57 	help_args.path (1).value = P_seg_name;
       58 	help_args.path (1).info_name = P_info_name;
       59 	help_args.path (1).S.pn_ctl_arg = "0"b;
       60 	help_args.path (1).S.info_name_not_starname = "0"b;
       61 	
       62 	call help_ (ME_CHAR, Phelp_args, ME_HELP_SUFFIX, (0), code);
       63 	if code ^= 0 then go to DH_ERR;
       64 
       65 	go to DH_EXIT;
       66 
       67 DH_ERR:
       68 
       69 	if code = error_table_$nomatch
       70 	then P_code = xmail_err_$no_help_available;
       71 	else P_code = xmail_err_$unable_to_get_help;
       72 
       73 DH_EXIT:
       74 
       75           call help_$term ("xmail", Phelp_args, (0));
       76 
       77 
  1     1 /* BEGIN INCLUDE FILE xmail_help_data_.incl.pl1                          */
  1     2 
  1     3 /****^  HISTORY COMMENTS:
  1     4*  1) change(86-03-21,Blair), approve(86-03-21,MCR7358),
  1     5*     audit(86-04-22,RBarstad), install(86-05-28,MR12.0-1062):
  1     6*     Structure defining the help search paths that will be used by xmail.
  1     7*                                                   END HISTORY COMMENTS */
  1     8 
  1     9 /* Created 06/17/81 by Suzanne Krupp */
  1    10 
  1    11 dcl xmail_data_$help_dirs         fixed bin ext static;
  1    12 
  1    13 dcl 1 xmail_HELP_DIRS                  based (addr(xmail_data_$help_dirs)),
  1    14       2 N                              fixed bin,
  1    15       2 path (0 refer (xmail_HELP_DIRS.N)) char (168);
  1    16 
  1    17 /* END INCLUDE FILE xmail_help_data_.incl.pl1                            */
       78 
       79 
  2     1 /*  BEGIN:   help_args_.incl.pl1			  *  *  *  *  *  */
  2     2 
  2     3 /*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  2     4 /*									*/
  2     5 /* Name:   help_args_.incl.pl1						*/
  2     6 /*									*/
  2     7 /* This include file declares the structure used by the help command and other subsystems	*/
  2     8 /* to pass info segment selection and printing control information to the help_		*/
  2     9 /* subroutine.  This based structure is NEVER allocated.  Instead, the caller of help_	*/
  2    10 /* must call help_$init to get a pointer to a temporary segment which is used for	*/
  2    11 /* storage for the structure.  The structure contains 5 arrays with refer extents,	*/
  2    12 /* allowing complete freedom in the numbers of selection values given.  Typically, the	*/
  2    13 /* caller fills in the arrays at the top of the structure first, growing the arrays	*/
  2    14 /* as each new element is added.  After each array is filled, the caller begins filling	*/
  2    15 /* in the next array.  Note that, on return from help_$init, all of the arrays have 0	*/
  2    16 /* extents, except that the search_dirs array contains the list of directories to be	*/
  2    17 /* searched in to find info segments, as defined by the search facility.  The caller	*/
  2    18 /* may of course change or replace these search directories.			*/
  2    19 /*									*/
  2    20 /* A legend describing the variable naming convention follows.			*/
  2    21 /*									*/
  2    22 /*   STARTING LETTER	STANDS FOR					*/
  2    23 /*	P		pointer to					*/
  2    24 /*	L		length of						*/
  2    25 /*	D		descriptor of					*/
  2    26 /*	S		switch						*/
  2    27 /*	V		version						*/
  2    28 /*									*/
  2    29 /* Status									*/
  2    30 /*									*/
  2    31 /* 0) Created:   October, 1978    by Gary Dixon					*/
  2    32 /* 1) Modified:  June 4, 1983	    by Gary Dixon - add Sctl.inhibit_errors flag.		*/
  2    33 /* 2) Modified:  April, 1985      by L.Adams - use Vhelp_args_2.			*/
  2    34 /*									*/
  2    35 /*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  2    36 
  2    37 /****^  HISTORY COMMENTS:
  2    38*  1) change(86-03-07,LJAdams), approve(86-03-07,MCR7327),
  2    39*     audit(86-03-10,Lippard), install(86-04-24,MR12.0-1048):
  2    40*     Declares structure used by the help command and other subsystems to pass
  2    41*     info segment selection and printing control information the help_
  2    42*     subroutine.
  2    43*  2) change(87-01-26,LJAdams), approve(87-09-03,MCR7766),
  2    44*     audit(88-05-03,GDixon), install(88-09-13,MR12.2-1109):
  2    45*     Added lep to Sctl.
  2    46*     Added Sctl.cs to indicate if search or section requests are to be case
  2    47*     sensitive or not.
  2    48*     Changed version to Vhelp_args_3.
  2    49*  3) change(88-02-12,LJAdams), approve(88-03-07,MCR7857),
  2    50*     audit(88-05-03,GDixon), install(88-09-13,MR12.2-1109):
  2    51*     Added help_data_ptr to point to a second help_args structure that will be
  2    52*     used for list_requests.
  2    53*                                                   END HISTORY COMMENTS */
  2    54 
  2    55      dcl	1 help_args aligned based (Phelp_args),		/* help's input arguments.			*/
  2    56 	  2 version		fixed bin,	/* = 3, currently. Use Vhelp_args_3.		*/
  2    57 						/*	(set by help_$init, checked by caller)	*/
  2    58 	  2 Sctl,					/* control argument switches.			*/
  2    59 						/*	(SET BY CALLER OF help_)		*/
  2    60 	   (3 he_only,				/*   print only a heading, nothing else.	*/
  2    61 	    3 he_pn,				/*   when heading printed, include info pathname.	*/
  2    62 	    3 he_info_name,				/*   when heading printed, include info_name.	*/
  2    63 	    3 he_counts,				/*   when heading printed, include line counts.	*/
  2    64 						/*   If none of the 3 switches above are set,	*/
  2    65 						/*   then only info header is incl. in heading.	*/
  2    66 	    3 title,				/*   -title				*/
  2    67 	    3 scn,				/*   -section				*/
  2    68 	    3 srh,				/*   -search				*/
  2    69 	    3 bf,					/*   -brief				*/
  2    70 	    3 ca,					/*   -control_arg				*/
  2    71 	    3 ep,					/*   -entry_point				*/
  2    72 	    3 all,				/*   -all					*/
  2    73               3 lep,				/*   -lep 				*/
  2    74               3 cs,                                         /*   -case_sensitive                              */
  2    75 	    3 inhibit_errors)			/*   inhibits error diagnostics when desired	*/
  2    76 						/*     information is not found.  Useful for	*/
  2    77 						/*     subsystems like ted that want to diagnose	*/
  2    78 						/*     their own errors.			*/
  2    79 				bit(1) unal,
  2    80 	    3 mbz1		bit(22) unal,
  2    81 	  2 Nsearch_dirs		fixed bin,	/* number of info_segment (or other) search dirs.	*/
  2    82 						/*	(set by help_$init, CALLER CAN CHANGE)	*/
  2    83 	  2 Npaths		fixed bin,	/* number of info segment names.		*/
  2    84 						/*	(SET BY CALLER OF help_)		*/
  2    85 	  2 Ncas			fixed bin,	/* number of control arg names given with -ca	*/
  2    86 						/*	(SET BY CALLER OF help_)		*/
  2    87 	  2 Nscns			fixed bin,	/* number of section substrings.		*/
  2    88 						/*	(SET BY CALLER OF help_)		*/
  2    89 	  2 Nsrhs			fixed bin,	/* number of search strings.			*/
  2    90 						/*	(SET BY CALLER OF help_)		*/
  2    91 	  2 min_Lpgh		fixed bin,	/* minimum length of a paragraph.		*/
  2    92 						/*	(set by help_$init, CALLER CAN CHANGE)	*/
  2    93 	  2 max_Lpgh		fixed bin,	/* maximum lines in group of aggregated paragraphs*/
  2    94 						/* or in paragraphs constructed by help_.	*/
  2    95 						/*	(set by help_$init, CALLER CAN CHANGE)	*/
  2    96 	  2 Lspace_between_infos	fixed bin,	/* spaces inserted between infos when several	*/
  2    97 						/* printed by one invocation.			*/
  2    98 						/*	(set by help_$init, CALLER CAN CHANGE)	*/
  2    99 	  2 min_date_time		fixed bin(71),	/* do not process infos modified before this date.*/
  2   100 						/*	(SET BY CALLER OF help_)		*/
  2   101 	  2 sci_ptr		ptr,		/* sci_ptr when help_ is invoked by a subsystem.	*/
  2   102 						/*   This must be set to null when not invoked 	*/
  2   103 						/*   from a subsystem.			*/
  2   104             2 help_data_ptr             ptr,                /* ptr to second help_args (used for list rqts)   */
  2   105 	  2 pad2 (6) 		fixed bin,	/* reserved for future expansion.		*/
  2   106 
  2   107 	/*		End of fixed-length part of the structure.				*/
  2   108 
  2   109 	  2 search_dirs (0 refer (help_args.Nsearch_dirs))
  2   110 				char (168) unal,	/* directories help_ will look in to find info	*/
  2   111 						/*   segments when relative paths (without < or >)*/
  2   112 						/*   are given.  When help_$init is called, the	*/
  2   113 						/*   current search rules (from a search list of	*/
  2   114 						/*   caller's choice) will be given here.  Caller	*/
  2   115 						/*   may modify this list if desired before	*/
  2   116 						/*   calling help_.				*/
  2   117 	  2 path (0 refer (help_args.Npaths)),		/* names of sought info segments.		*/
  2   118 	    3 value		char(425) varying,	/*   These are the args themselves, without	*/
  2   119 	    					/*   processing by expand_pathname_, etc.	*/
  2   120 						/*   Their length is length(path) + length("$")	*/
  2   121 						/*   + length(entry_point_name).		*/
  2   122 						/*   Note that entry_point_names can be 256 chars.*/
  2   123 						/*	(SET BY CALLER OF help_)		*/
  2   124 	    3 info_name		char(32) unal,	/*   name of logical info to be printed.	*/
  2   125 						/*	(SET BY CALLER OF help_)		*/
  2   126 						/*   "" = help_ should set this to entry part	*/
  2   127 						/*        of path.value, minus the suffix.	*/
  2   128 						/*   other = logical info name not a name on the	*/
  2   129 						/* 	   physical info segment.		*/
  2   130 	    3 dir (1)		char(168) unal,	/*   dir part of a pathname (set by help_).	*/
  2   131 	    3 ent			char(32) unal,	/*   ent part of name (set by help_).		*/
  2   132 	    3 ep			char(32) varying,	/*   entry point part of name. (set by help_)	*/
  2   133 	    3 code		fixed bin(35),	/*   error code while processing this path.	*/
  2   134 						/*     (set by help_)			*/
  2   135 	    3 S,					/*   switches indicating path type.		*/
  2   136 	     (4 pn_ctl_arg,				/*     -pn ctl given before this path. 		*/
  2   137 						/*     	(SET BY CALLER OF help_)		*/
  2   138 	      4 info_name_not_starname,		/*     caller-supplied path.info_name is not a	*/
  2   139 						/*       star name, even if it has * or ? chars.	*/
  2   140 						/*     	(SET BY CALLER OF help_)		*/
  2   141 	      4 less_greater,			/*     A < or > appears in path.value.		*/
  2   142 						/*     	(set by help_)			*/
  2   143 	      4 starname_ent,			/*     on if ent is a starname.		*/
  2   144 						/*	(set by help_)			*/
  2   145 	      4 starname_info_name,			/*     on if info_name is a starname.		*/
  2   146 						/*	(set by help_)			*/
  2   147 	      4 separate_info_name) 	bit(1) unal,	/*     on if info_name given by caller.		*/
  2   148 						/*	(set by help_)			*/
  2   149 	      4 pad3	 	bit(30) unal,
  2   150 	  2 ca (0 refer (help_args.Ncas))		/* the ctl_arg names, without leading - just as	*/
  2   151 				char(32) varying,	/*   req'd by the -ca ctl_arg of help.		*/
  2   152 						/*	(SET BY CALLER OF help_)		*/
  2   153 	  2 scn (0 refer (help_args.Nscns))		/* substrings sought in section titles.		*/
  2   154 				char(80) varying,	/*	(SET BY CALLER OF help_)		*/
  2   155 	  2 srh (0 refer (help_args.Nsrhs))		/* search strings.				*/
  2   156 				char(80) varying,	/*	(SET BY CALLER OF help_)		*/
  2   157 	Phelp_args		ptr,
  2   158 	Vhelp_args_3		fixed bin int static options(constant) init(3);
  2   159 
  2   160      dcl	help_			entry (char(*), ptr, char(*), fixed bin, fixed bin(35)),
  2   161 	help_$init		entry (char(*), char(*), char(*), fixed bin, ptr, fixed bin(35)),
  2   162 	help_$term		entry (char(*), ptr, fixed bin(35));
  2   163 
  2   164 /*  END OF:  help_args_.incl.pl1			  *  *  *  *  *  */
       80 
       81 
  3     1 /* BEGIN INCLUDE FILE: xmail_data.incl.pl1 */
  3     2 
  3     3 
  3     4 /****^  HISTORY COMMENTS:
  3     5*  1) change(85-12-20,Blair), approve(86-03-06,MCR7358),
  3     6*     audit(86-04-21,RBarstad), install(86-05-28,MR12.0-1062):
  3     7*     Modified 03/15/85 by Joanne Backs adding confirm_print flag.
  3     8*  2) change(85-12-20,LJAdams), approve(86-03-06,MCR7358),
  3     9*     audit(86-04-21,RBarstad), install(86-05-28,MR12.0-1062):
  3    10*     Adding switch to indicate request for menu display came from general help.
  3    11*     This is so general help menu will be displayed in top screen.
  3    12*  3) change(86-01-10,Blair), approve(86-03-06,MCR7358),
  3    13*     audit(86-04-21,RBarstad), install(86-05-28,MR12.0-1062):
  3    14*     Add switch to indicate whether or not it is permissible to process mail
  3    15*     in other users' mailboxes (foreign_mailbox).
  3    16*  4) change(86-01-13,Blair), approve(86-03-06,MCR7358),
  3    17*     audit(86-04-21,RBarstad), install(86-05-28,MR12.0-1062):
  3    18*     Add bit to indicate whether or not this is a true cleanup condition.
  3    19*  5) change(86-02-06,Blair), approve(86-03-06,MCR7358),
  3    20*     audit(86-04-21,RBarstad), install(86-05-28,MR12.0-1062):
  3    21*     Rearrange to group all the bit flags together in one word with a pad.
  3    22*  6) change(86-03-05,Blair), approve(86-03-05,MCR7358),
  3    23*     audit(86-04-21,RBarstad), install(86-05-28,MR12.0-1062):
  3    24*     Change value_seg ptr to value_seg_pathname to avoid the situation where
  3    25*     you keep around a pointer to a structure which no longer exists.
  3    26*  7) change(87-01-16,Blair), approve(87-02-05,MCR7618),
  3    27*     audit(87-04-15,RBarstad), install(87-04-26,MR12.1-1025):
  3    28*     Add a field to indicate whether or not we should process interactive msgs.
  3    29*     Increment version to 4.1 so default value will get set.
  3    30*  8) change(87-02-13,Blair), approve(87-02-13,MCR7618),
  3    31*     audit(87-04-15,RBarstad), install(87-04-26,MR12.1-1025):
  3    32*     Add a field to indicate whether or not we're processing a reply so that we
  3    33*     will be able to rebuild the screens properly after a disconnect occurs.
  3    34*     Error_list #114.
  3    35*  9) change(88-07-26,Blair), approve(88-07-26,MCR7959),
  3    36*     audit(88-08-25,RBarstad), install(88-09-02,MR12.2-1098):
  3    37*     Add a bit to indicate whether or not the error segment had to be created
  3    38*     in the pdir (because we didn't have sma access to the mlsys_dir).
  3    39*                                                   END HISTORY COMMENTS */
  3    40 
  3    41 
  3    42 /* Written 5/13/81 by Paul H. Kyzivat */
  3    43 /* Modified 12/16/81 by S. Krupp to delete unused parts of structure
  3    44*   and to add n_fkeys_used */
  3    45 /* Modified 12/14/82 by Dave Schimke to make the xmail version a 10 character
  3    46*   varying string.  */
  3    47 /* Modified 09/12/83 by Dave Schimke adding interactive_msgs flag */
  3    48 /* Modified 09/14/83 by Dave Schimke adding moved_user_io */
  3    49 /* Modified 09/06/84 by Joanne Backs adding lists_as_menus flag */
  3    50 /* Modified 09/21/84 by Joanne Backs adding remove_menus flag */
  3    51 
  3    52      dcl xmail_data_ptr external static ptr init (null);
  3    53 
  3    54      dcl 1 xmail_data aligned based (xmail_data_ptr),
  3    55            2 mail_dir char (168) varying,
  3    56 	 2 first_label label,
  3    57 	 2 quit_label label,
  3    58 	 2 value_seg_pathname char (168) varying,
  3    59            2 moved_user_io ptr,
  3    60 	 2 normal_usage char (80) unal,
  3    61 	 2 function_key_info,
  3    62 	   3 function_key_data_ptr ptr,
  3    63 	   3 n_fkeys_used fixed bin,
  3    64            2 actee,
  3    65 	   3 person char(32) varying,
  3    66 	   3 project char(32) varying,
  3    67 	 2 flags aligned,
  3    68 	     3 mail_in_incoming   bit (1) unal,
  3    69                3 lists_as_menus     bit (1) unal, /* personalization */
  3    70 	     3 remove_menus       bit (1) unal, /* personalization */
  3    71 	     3 confirm_print      bit (1) unal, /* personalization */
  3    72 	     3 multics_mode bit (1) unal, /* personalization */
  3    73 	     3 interactive_msgs bit (1) unal, /* personalization */
  3    74 	     3 foreign_mailbox    bit (1) unal, /* read others' mailboxes */
  3    75                3 general_help       bit (1) unal, /* indicated requesting gen help*/
  3    76 	     3 cleanup_signalled  bit (1) unal,  /* on when true cleanup condition */
  3    77                3 msgs_as_mail       bit (1)  unal, /* on for include_msgs */
  3    78                3 reply_request      bit (1)  unal, /* on if we're doing a reply */
  3    79                3 error_seg_in_pdir  bit (1)  unal, /* on if the error_seg is in the pdir */
  3    80                3 pad                bit (24) unal;
  3    81 	
  3    82 	 
  3    83 
  3    84 dcl xmail_version char(10) var static options(constant) init("4.1");
  3    85 
  3    86 /* END INCLUDE FILE: xmail_data.incl.pl1 */
       82 
       83 
  4     1 /* --------------- BEGIN include file iox_dcls.incl.pl1 --------------- */
  4     2 
  4     3 /* Written 05/04/78 by C. D. Tavares */
  4     4 /* Fixed declaration of iox_$find_iocb_n 05/07/80 by R. Holmstedt */
  4     5 /* Modified 5/83 by S. Krupp to add declarations for:  iox_$open_file,
  4     6*     iox_$close_file, iox_$detach and iox_$attach_loud entries. */
  4     7 
  4     8 dcl  iox_$attach_name entry (char (*), pointer, char (*), pointer, fixed bin (35)),
  4     9      iox_$attach_ptr entry (pointer, char (*), pointer, fixed bin (35)),
  4    10      iox_$close entry (pointer, fixed bin (35)),
  4    11      iox_$control entry (pointer, char (*), pointer, fixed bin (35)),
  4    12      iox_$delete_record entry (pointer, fixed bin (35)),
  4    13      iox_$destroy_iocb entry (pointer, fixed bin (35)),
  4    14      iox_$detach_iocb entry (pointer, fixed bin (35)),
  4    15      iox_$err_not_attached entry options (variable),
  4    16      iox_$err_not_closed entry options (variable),
  4    17      iox_$err_no_operation entry options (variable),
  4    18      iox_$err_not_open entry options (variable),
  4    19      iox_$find_iocb entry (char (*), pointer, fixed bin (35)),
  4    20      iox_$find_iocb_n entry (fixed bin, ptr, fixed bin(35)),
  4    21      iox_$get_chars entry (pointer, pointer, fixed bin (21), fixed bin (21), fixed bin (35)),
  4    22      iox_$get_line entry (pointer, pointer, fixed bin (21), fixed bin (21), fixed bin (35)),
  4    23      iox_$look_iocb entry (char (*), pointer, fixed bin (35)),
  4    24      iox_$modes entry (pointer, char (*), char (*), fixed bin (35)),
  4    25      iox_$move_attach entry (pointer, pointer, fixed bin (35)),
  4    26      iox_$open entry (pointer, fixed bin, bit (1) aligned, fixed bin (35)),
  4    27      iox_$position entry (pointer, fixed bin, fixed bin (21), fixed bin (35)),
  4    28      iox_$propagate entry (pointer),
  4    29      iox_$put_chars entry (pointer, pointer, fixed bin (21), fixed bin (35)),
  4    30      iox_$read_key entry (pointer, char (256) varying, fixed bin (21), fixed bin (35)),
  4    31      iox_$read_length entry (pointer, fixed bin (21), fixed bin (35)),
  4    32      iox_$read_record entry (pointer, pointer, fixed bin (21), fixed bin (21), fixed bin (35)),
  4    33      iox_$rewrite_record entry (pointer, pointer, fixed bin (21), fixed bin (35)),
  4    34      iox_$seek_key entry (pointer, char (256) varying, fixed bin (21), fixed bin (35)),
  4    35      iox_$write_record entry (pointer, pointer, fixed bin (21), fixed bin (35)),
  4    36      iox_$open_file entry(ptr, fixed bin, char(*), bit(1) aligned, fixed bin(35)),
  4    37      iox_$close_file entry(ptr, char(*), fixed bin(35)),
  4    38      iox_$detach entry(ptr, char(*), fixed bin(35)),
  4    39      iox_$attach_loud entry(ptr, char(*), ptr, fixed bin(35));
  4    40 
  4    41 dcl (iox_$user_output,
  4    42      iox_$user_input,
  4    43      iox_$user_io,
  4    44      iox_$error_output) external static pointer;
  4    45 
  4    46 /* ---------------- END include file iox_dcls.incl.pl1 ---------------- */
       84 
       85 
       86      end xmail_display_help_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    09/13/88  1312.2  xmail_display_help_.pl1           >spec>install>MR12.2-1109>xmail_display_help_.pl1
78           1    05/28/86  1117.7  xmail_help_data_.incl.pl1         >ldd>include>xmail_help_data_.incl.pl1
80           2    09/13/88  1257.6  help_args_.incl.pl1               >spec>install>MR12.2-1109>help_args_.incl.pl1
82           3    09/08/88  2010.9  xmail_data.incl.pl1               >ldd>include>xmail_data.incl.pl1
84           4    05/23/83  0916.6  iox_dcls.incl.pl1                 >ldd>include>iox_dcls.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
ME_CHAR                         000003 constant        char(19)                 initial packed unaligned dcl 34 set ref 50* 62*
ME_HELP_SUFFIX                  000000 constant        char(10)                 initial packed unaligned dcl 35 set ref 62*
ME_SEARCH_LIST                  000000 constant        char(4)                  initial packed unaligned dcl 36 set ref 50*
N                                      based           fixed bin(17,0)          level 2 dcl 1-13 ref 53 54 54 54 54
Npaths                    3            based           fixed bin(17,0)          level 2 dcl 2-55 set ref 56*
Nsearch_dirs              2            based           fixed bin(17,0)          level 2 dcl 2-55 set ref 53* 54 57 58 59 60
P_code                                 parameter       fixed bin(35,0)          dcl 31 set ref 28 44* 67* 71*
P_info_name                            parameter       char                     packed unaligned dcl 30 ref 28 58
P_seg_name                             parameter       char                     packed unaligned dcl 30 ref 28 57
Phelp_args                      000110 automatic       pointer                  dcl 2-55 set ref 45* 47* 50* 53 54 55 56 57 58 59 60
                                                                                  62* 73*
S                                      based           structure                array level 3 dcl 2-55
Sctl                      1            based           structure                level 2 dcl 2-55
Vhelp_args_3                    000017 constant        fixed bin(17,0)          initial dcl 2-55 set ref 50*
addr                                                   builtin function         dcl 39 ref 53 54
all                       1(10)        based           bit(1)                   level 3 packed packed unaligned dcl 2-55 set ref 55*
cleanup                         000102 stack reference condition                dcl 41 ref 47
code                            000100 automatic       fixed bin(35,0)          dcl 33 set ref 50* 51 62* 63 67
dim                                                    builtin function         dcl 39 ref 53
error_table_$nomatch            000010 external static fixed bin(35,0)          dcl 37 ref 67
help_                           000020 constant        entry                    external dcl 2-160 ref 62
help_$init                      000022 constant        entry                    external dcl 2-160 ref 50
help_$term                      000024 constant        entry                    external dcl 2-160 ref 47 73
help_args                              based           structure                level 1 dcl 2-55
info_name                              based           char(32)                 array level 3 packed packed unaligned dcl 2-55 set
                                                                                  ref 58*
info_name_not_starname                 based           bit(1)                   array level 4 packed packed unaligned dcl 2-55 set
                                                                                  ref 60*
null                                                   builtin function         dcl 39 ref 45
path                                   based           structure                array level 2 in structure "help_args" dcl 2-55
                                                                                  in procedure "xmail_display_help_"
path                      1            based           char(168)                array level 2 in structure "xmail_HELP_DIRS" packed
                                                                                  packed unaligned dcl 1-13 in procedure
                                                                                  "xmail_display_help_" ref 53 54
pn_ctl_arg                             based           bit(1)                   array level 4 packed packed unaligned dcl 2-55 set
                                                                                  ref 59*
search_dirs              26            based           char(168)                array level 2 packed packed unaligned dcl 2-55 set
                                                                                  ref 54*
value                                  based           varying char(425)        array level 3 dcl 2-55 set ref 57*
xmail_HELP_DIRS                        based           structure                level 1 unaligned dcl 1-13
xmail_data_$help_dirs           000016 external static fixed bin(17,0)          dcl 1-11 set ref 53 54
xmail_err_$no_help_available    000012 external static fixed bin(35,0)          dcl 37 ref 67
xmail_err_$unable_to_get_help   000014 external static fixed bin(35,0)          dcl 37 ref 71

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
iox_$attach_loud                000000 constant        entry                    external dcl 4-8
iox_$attach_name                000000 constant        entry                    external dcl 4-8
iox_$attach_ptr                 000000 constant        entry                    external dcl 4-8
iox_$close                      000000 constant        entry                    external dcl 4-8
iox_$close_file                 000000 constant        entry                    external dcl 4-8
iox_$control                    000000 constant        entry                    external dcl 4-8
iox_$delete_record              000000 constant        entry                    external dcl 4-8
iox_$destroy_iocb               000000 constant        entry                    external dcl 4-8
iox_$detach                     000000 constant        entry                    external dcl 4-8
iox_$detach_iocb                000000 constant        entry                    external dcl 4-8
iox_$err_no_operation           000000 constant        entry                    external dcl 4-8
iox_$err_not_attached           000000 constant        entry                    external dcl 4-8
iox_$err_not_closed             000000 constant        entry                    external dcl 4-8
iox_$err_not_open               000000 constant        entry                    external dcl 4-8
iox_$error_output                      external static pointer                  dcl 4-41
iox_$find_iocb                  000000 constant        entry                    external dcl 4-8
iox_$find_iocb_n                000000 constant        entry                    external dcl 4-8
iox_$get_chars                  000000 constant        entry                    external dcl 4-8
iox_$get_line                   000000 constant        entry                    external dcl 4-8
iox_$look_iocb                  000000 constant        entry                    external dcl 4-8
iox_$modes                      000000 constant        entry                    external dcl 4-8
iox_$move_attach                000000 constant        entry                    external dcl 4-8
iox_$open                       000000 constant        entry                    external dcl 4-8
iox_$open_file                  000000 constant        entry                    external dcl 4-8
iox_$position                   000000 constant        entry                    external dcl 4-8
iox_$propagate                  000000 constant        entry                    external dcl 4-8
iox_$put_chars                  000000 constant        entry                    external dcl 4-8
iox_$read_key                   000000 constant        entry                    external dcl 4-8
iox_$read_length                000000 constant        entry                    external dcl 4-8
iox_$read_record                000000 constant        entry                    external dcl 4-8
iox_$rewrite_record             000000 constant        entry                    external dcl 4-8
iox_$seek_key                   000000 constant        entry                    external dcl 4-8
iox_$user_input                        external static pointer                  dcl 4-41
iox_$user_io                           external static pointer                  dcl 4-41
iox_$user_output                       external static pointer                  dcl 4-41
iox_$write_record               000000 constant        entry                    external dcl 4-8
xmail_data                             based           structure                level 1 dcl 3-54
xmail_data_ptr                         external static pointer                  initial dcl 3-52
xmail_version                          internal static varying char(10)         initial dcl 3-84

NAMES DECLARED BY EXPLICIT CONTEXT.
DH_ERR                          000335 constant        label                    dcl 67 ref 51 63
DH_EXIT                         000347 constant        label                    dcl 73 set ref 65
xmail_display_help_             000034 constant        entry                    external dcl 28

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       516         544     376         526
Length      1016     376        26         235     120           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
xmail_display_help_                 106 external procedure  is an external procedure.  
on unit on line 47                   82 on unit               

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
xmail_display_help_      000100 code                        xmail_display_help_
                         000110 Phelp_args                  xmail_display_help_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_temp          call_ext_out_desc   return_mac          bound_ck_signal     enable_op           shorten_stack
ext_entry_desc      int_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
help_                         help_$init                    help_$term

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$nomatch          xmail_data_$help_dirs         xmail_err_$no_help_available  xmail_err_$unable_to_get_help




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     28 000030        44 000054        45 000056        47 000060        50 000121        51 000156        53 000160
     54 000164        55 000237        56 000243        57 000245        58 000263        59 000271        60 000273
     62 000300        63 000332        65 000334        67 000335        71 000344        73 000347        86 000373


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
