	COMPILATION LISTING OF SEGMENT forum_accept_notifications
	Compiled by: Multics PL/I Compiler, Release 33e, of October 6, 1992
	Compiled at: CGI                             
	Compiled on: 2000-04-18_1144.59_Tue_mdt
	    Options: optimize map

        1 /* ***************************************************************
        2*   *						     *
        3*   *						     *
        4*   * Copyright (c) 1982 by Massachusetts Institute of Technology *
        5*   *						     *
        6*   *						     *
        7*   *************************************************************** */
        8 
        9 forum_accept_notifications:
       10 fant:	proc ();
       11 
       12 /* Jay Pattin 03/26/82 turns forum notifications on and off */
       13 
       14 declare	arg_count			fixed bin,
       15 	status			fixed bin (35);
       16 
       17 declare	(com_err_, com_err_$suppress_name)
       18 				entry options (variable),
       19 	cu_$arg_count		entry (fixed bin, fixed bin (35)),
       20 	forum_$accept_notifications	entry (fixed bin (35)),
       21 	forum_$refuse_notifications	entry (fixed bin (35));
       22 
       23 	call cu_$arg_count (arg_count, status);
       24 	if status ^= 0 then do;
       25 	     call com_err_ (status, "forum_accept_notifications");
       26 	     return;
       27 	end;
       28 
       29 	if arg_count > 0 then do;
       30 	     call com_err_$suppress_name (0, "", "Usage:  fant");
       31 	     return;
       32 	end;
       33 
       34 	call forum_$accept_notifications (status);
       35 	if status ^= 0 then call com_err_ (status, "forum_accept_notifications");
       36 
       37 	return;
       38 
       39 forum_refuse_notifications:
       40 frnt:	entry ();
       41 
       42 
       43 	call cu_$arg_count (arg_count, status);
       44 	if status ^= 0 then do;
       45 	     call com_err_ (status, "forum_refuse_notifications");
       46 	     return;
       47 	end;
       48 
       49 	if arg_count > 0 then do;
       50 	     call com_err_$suppress_name (0, "", "Usage:  frnt");
       51 	     return;
       52 	end;
       53 
       54 	call forum_$refuse_notifications (status);
       55 	if status ^= 0 then call com_err_ (status, "forum_refuse_notifications");
       56 
       57 	return;
       58      end forum_accept_notifications;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    04/18/00  1144.6  forum_accept_notifications.pl1    >udd>sm>ds>w>ml>forum_accept_notifications.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
arg_count                       000100 automatic       fixed bin(17,0)          dcl 14 set ref 23* 29 43* 49
com_err_                        000010 constant        entry                    external dcl 17 ref 25 35 45 55
com_err_$suppress_name          000012 constant        entry                    external dcl 17 ref 30 50
cu_$arg_count                   000014 constant        entry                    external dcl 17 ref 23 43
forum_$accept_notifications     000016 constant        entry                    external dcl 17 ref 34
forum_$refuse_notifications     000020 constant        entry                    external dcl 17 ref 54
status                          000101 automatic       fixed bin(35,0)          dcl 14 set ref 23* 24 25* 34* 35 35* 43* 44 45* 54*
                                                                                  55 55*

NAMES DECLARED BY EXPLICIT CONTEXT.
fant                            000032 constant        entry                    external dcl 9
forum_accept_notifications      000041 constant        entry                    external dcl 9
forum_refuse_notifications      000174 constant        entry                    external dcl 39
frnt                            000165 constant        entry                    external dcl 39

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       446         470     321         456
Length       656     321        22         151     124           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
fant                                106 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
fant                     000100 arg_count                   fant
                         000101 status                      fant

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      com_err_$suppress_name        cu_$arg_count                 forum_$accept_notifications
forum_$refuse_notifications

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      9 000031        23 000046        24 000056        25 000060        26 000100        29 000101        30 000103
     31 000131        34 000132        35 000141        37 000163        39 000164        43 000201        44 000212
     45 000214        46 000234        49 000235        50 000237        51 000266        54 000267        55 000276
     57 000320


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
