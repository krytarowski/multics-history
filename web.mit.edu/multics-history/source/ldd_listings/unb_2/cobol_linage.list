	COMPILATION LISTING OF SEGMENT cobol_linage
	Compiled by: Multics PL/I Compiler, Release 31b, of April 24, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 05/24/89  0947.4 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
       17*     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
       18*     MCR8060 cobol_linage.pl1 Reformatted code to new Cobol standard.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 /* Modified on 02/10/81 by FCH, cobol_abort_error changed not to emit tra instr, [4.4-1], BUG462(TR8970) */
       23 /* Modified on 08/23/80 by FCH, [4.3-1], after advancing data-name with linage clause generates bad code, BUG441(SQ431) */
       24 /* Modified since Version 4.3 */
       25 
       26 /* format: style3 */
       27 cobol_linage:
       28      proc (ft_ptr, mp_ptr, buflen_off, buf_off, ioerror_ptr);
       29 
       30 dcl	page_sw		bit (1) init ("0"b);
       31 dcl	ioerror_ptr	ptr;
       32 dcl	pr5_struct_ptr	ptr;
       33 dcl	ft_ptr		ptr;
       34 dcl	mp_ptr		ptr;
       35 dcl	good_tag		fixed bin;
       36 dcl	advancing_count	fixed bin;
       37 dcl	buflen_off	fixed bin;		/* stack offset in words (input) */
       38 dcl	buf_off		fixed bin;		/* stack offset in words (output) */
       39 
       40 dcl	1 mp		based (mp_ptr),
       41 	  2 n		fixed bin,
       42 	  2 pt		(0 refer (mp.n)) ptr;
       43 
       44 dcl	linage_before	bit (1);
       45 dcl	mrl		bit (36) static init ("000000000000000000001000001100000000"b);
       46 dcl	mlr		bit (36) static init ("000000000000000000001000000100000000"b);
       47 dcl	mlr_q		bit (36) static init ("000001101001000110001000000100000000"b);
       48 dcl	szn		bit (12) static init ("010011100001"b);
       49 dcl	aos		bit (12) static init ("000101100001"b);
       50 dcl	lxl5		bit (12) static init ("111010101001"b);
       51 dcl	adq		bit (12) static init ("000111110001"b);
       52 dcl	stq		bit (12) static init ("111101110001"b);
       53 dcl	lda		bit (12) static init ("010011101001"b);
       54 dcl	ldq		bit (12) static init ("010011110001"b);
       55 dcl	sbq		bit (12) static init ("001111110001"b);
       56 dcl	adq_dlmod		bit (18) static init ("000111110000000111"b);
       57 dcl	ldq_dlmod		bit (18) static init ("010011110000000111"b);
       58 dcl	ldq_dumod		bit (18) static init ("010011110000000011"b);
       59 dcl	tra_icmod		bit (18) static init ("111001000000000100"b);
       60 dcl	tnz_icmod		bit (18) static init ("110000001000000100"b);
       61 dcl	num_check_instr	(4) bit (36) static init ("110000000001010000010011101001000000"b,
       62 						/* lda	pr6|120	*/
       63 			"110000000000110001010011110001000000"b,
       64 						/* ldq	pr6|lenoff	*/
       65 			"000000000001111001001001110000000111"b,
       66 						/* cmpq	171,dl		*/
       67 			"000000000000000000110000100000000100"b);
       68 						/* tmi	[bypass_error]);ic	*/
       69 
       70 
       71 dcl	1 ioerror		based (ioerror_ptr),
       72 	  2 cobol_code	fixed bin,
       73 	  2 retry_tag	fixed bin,
       74 	  2 is_tag	fixed bin,
       75 	  2 ns_tag	fixed bin,
       76 	  2 type1_ptr	ptr,
       77 	  2 mode		fixed bin;
       78 
       79 dcl	1 pr5_struct	static,
       80 	  2 pr5		fixed bin init (5),
       81 	  2 pointer_no	bit (3),
       82 	  2 lock		fixed bin init (0),
       83 	  2 switch	fixed bin init (0),
       84 	  2 segno		fixed bin init (0),
       85 	  2 offset	fixed bin init (0),
       86 	  2 reset		fixed bin;
       87 dcl	1 mlr_struct,
       88 	  2 type		fixed bin init (5),
       89 	  2 operand_no	fixed bin init (2),
       90 	  2 lock		fixed bin init (0),
       91 	  2 operand1,
       92 	    3 token_ptr	ptr,			/* always set */
       93 	    3 send_receive	fixed bin init (0),
       94 	    3 ic_mod	fixed bin,
       95 	    3 size_sw	fixed bin init (1),
       96 	  2 operand2,
       97 	    3 token_ptr	ptr init (null ()),
       98 	    3 send_receive	fixed bin,
       99 	    3 ic_mod	fixed bin,
      100 	    3 size_sw	fixed bin;
      101 
      102 dcl	1 zero_token	static,			/*06-16-77*/
      103 	  2 size		fixed bin init (40),	/*06-16-77*/
      104 	  2 line		fixed bin init (0),		/*06-16-77*/
      105 	  2 column	fixed bin init (0),		/*06-16-77*/
      106 	  2 type		fixed bin init (2),		/*06-16-77*/
      107 	  2 integral	bit (1) init ("0"b),	/*06-16-77*/
      108 	  2 floating	bit (1) init ("0"b),	/*06-16-77*/
      109 	  2 seg_range	bit (1) init ("0"b),	/*06-16-77*/
      110 	  2 filler1	bit (4) init ("0"b),	/*06-16-77*/
      111 	  2 subscript	bit (1) init ("0"b),	/*06-16-77*/
      112 	  2 sign		char (1) init ("0"),	/*06-16-77*/
      113 	  2 exp_sign	char (1) init ("0"),	/*06-16-77*/
      114 	  2 exp_places	fixed bin init (0),		/*06-16-77*/
      115 	  2 places_left	fixed bin init (0),		/*06-16-77*/
      116 	  2 places_right	fixed bin init (0),		/*06-16-77*/
      117 	  2 places	fixed bin init (1),		/*06-16-77*/
      118 	  2 literal	char (1) init ("0");
      119 dcl	instr		(6) bit (36);
      120 dcl	text		(0:100000) bit (36) based (cobol_$text_base_ptr);
      121 
      122 /* slew characters.	03-02-77	*/
      123 dcl	pr_ctl		char (5) static int init ("c  ");
      124 dcl	chan_no		fixed bin;
      125 dcl	convert_no	(10:16) char (2) static int init ("10", "11", "12", "13", "14", "15", "16");
      126 dcl	convert_no1	(9) char (1) static int init ("1", "2", "3", "4", "5", "6", "7", "8", "9");
      127 
      128 dcl	nls		char (120) static init ((120)"
      129 ");
      130 dcl	advancing_error	fixed bin static init (23);
      131 dcl	len_off		fixed bin static init (49);
      132 
      133 dcl	dn_ptr		ptr;
      134 dcl	name_ptr		ptr;
      135 dcl	dn_ptr_linage	ptr;
      136 dcl	instr_ptr		ptr;
      137 dcl	mlr_struct_ptr	ptr;
      138 
      139 dcl	bnum		fixed bin;
      140 dcl	anum		fixed bin;
      141 dcl	ba_sw		fixed bin;
      142 dcl	bvalue		bit (18) aligned;
      143 dcl	avalue		bit (18) aligned;
      144 dcl	temp		fixed bin;
      145 dcl	utemp		fixed bin;
      146 dcl	restartad		fixed bin;
      147 dcl	patch_ic		fixed bin;
      148 
      149 dcl	cobol_define_tag	entry (fixed bin);
      150 dcl	cobol_pool	entry (char (*), fixed bin, fixed bin);
      151 dcl	cobol_set_pr	entry (ptr, ptr);
      152 dcl	cobol_call_op	entry (fixed bin, fixed bin);
      153 dcl	cobol_gen_ioerror	entry (ptr, ptr);
      154 dcl	cobol_ioop_util$set_var_adv
      155 			entry;
      156 dcl	cobol_ioop_util$set_value
      157 			entry (fixed bin);
      158 dcl	signal_		entry (char (*), ptr, ptr);
      159 dcl	cobol_alloc$stack	entry (fixed bin, fixed bin, fixed bin);
      160 dcl	cobol_emit	entry (ptr, ptr, fixed bin);
      161 dcl	cobol_addr	entry (ptr, ptr, ptr);
      162 dcl	ioa_$rsnnl	entry options (variable);	/* sub-generators */
      163 dcl	cobol_io_util$move_direct
      164 			entry (bit (3) aligned, fixed bin, fixed bin, fixed bin, bit (18) aligned);
      165 dcl	cobol_io_util$fixed_add
      166 			entry (bit (3) aligned, fixed bin, fixed bin, bit (3) aligned, fixed bin);
      167 dcl	cobol_io_util$move_lit
      168 			entry (bit (3) aligned, fixed bin, fixed bin, char (*));
      169 dcl	cobol_io_util$t9dec_to_bin
      170 			entry (bit (3) aligned, fixed bin, ptr);
      171 dcl	cobol_ioerror_abort entry (fixed bin, fixed bin, fixed bin, fixed bin, fixed bin);
      172 
      173 
      174 /*************************************/
      175 /* Note: code is generated under the assumption that the A register
      176*   is set with the length of the sending  field unless the item has
      177*   variable length.  */
      178 
      179 start:
      180 	linage_before = "0"b;
      181 	dn_ptr = mp.pt (mp.n - 1);
      182 	dn_ptr_linage = mp.pt (mp.n - 2);
      183 	eos_ptr = mp.pt (mp.n);
      184 	mlr_struct.operand1.token_ptr = mp.pt (2);
      185 
      186 	if ^file_table.variable
      187 	then mp.pt (2) -> data_name.variable_length = "0"b;
      188 
      189 	instr_ptr = addr (instr);
      190 	mlr_struct_ptr = addr (mlr_struct);
      191 	pr5_struct_ptr = addr (pr5_struct);
      192 	good_tag = cobol_$next_tag;
      193 	cobol_$next_tag = cobol_$next_tag + 1;
      194 
      195 
      196 	if data_name.type = 17
      197 	then call cobol_alloc$stack (121, 2, buf_off);	/* allocate 121 only*/
      198 	else call cobol_alloc$stack (data_name.item_length + 120, 2, buf_off);
      199 						/* allow up to 120 new-lines */
      200 
      201 start_codegen:
      202 	anum, bnum = 0;
      203 
      204 	if buflen_off = 0
      205 	then do;					/* special call from cobol_open_gen to output first TOP skips for linage. */
      206 
      207 		call move_buf_con;
      208 		return;
      209 
      210 	     end;
      211 
      212 	if data_name.type = 1
      213 	then /*06-16-77*/
      214 	     if dn_ptr -> reserved_word.key = reswd_ZERO
      215 	     then /*06-16-77*/
      216 		dn_ptr = addr (zero_token);		/*06-16-77*/
      217 
      218 	if end_stmt.d = "00"b
      219 	then do;					/* no ADVANCING clause - same as AFTER 1 */
      220 
      221 		dn_ptr_linage = mp.pt (mp.n - 1);
      222 
      223 		if file_table.device = 1
      224 		then do;				/* COBOL rules - after advancing 1 */
      225 
      226 			bvalue = "000001010000001010"b;
      227 			bnum = 1;
      228 
      229 		     end;
      230 		else do;				/* MULTICS rules - before advancing 1 */
      231 
      232 			avalue = "000001010000001010"b;
      233 			anum = 1;
      234 
      235 		     end;
      236 
      237 		call move_buf_con;
      238 	     end;
      239 
      240 	else if end_stmt.d = "10"b
      241 	then do;					/* AFTER ADVANCING ... specified */
      242 
      243 		if data_name.type = 2
      244 		then do;				/* AFTER ADVANCING literal */
      245 
      246 			bnum = fixed (dn_ptr -> numeric_lit.literal, 17);
      247 
      248 			if bnum > 120
      249 			then go to litsize_error;
      250 
      251 			bvalue = "000001010000001010"b;
      252 
      253 			call move_buf_con;
      254 
      255 		     end;
      256 		else if data_name.type = 9
      257 		then do;				/* AFTER ADVANCING data-name */
      258 
      259 			ba_sw = 0;
      260 
      261 			call move_buf_var;
      262 
      263 		     end;
      264 		else if data_name.type = 1 | data_name.type = 17
      265 		then do;				/* AFTER ADVANCING PAGE or mnemonic-name */
      266 
      267 			if data_name.type = 17 | (data_name.type = 1 & ^file_table.linage)
      268 			then do;
      269 
      270 				chan_no = dn_ptr -> mnemonic_name.iw_key - 210;
      271 
      272 				if chan_no < 17 & chan_no > 9
      273 				then do;
      274 					bnum = 5;
      275 					substr (pr_ctl, 3, 2) = convert_no (chan_no);
      276 				     end;
      277 				else if chan_no > 0 & chan_no < 10
      278 				then do;
      279 					bnum = 4;
      280 					substr (pr_ctl, 3, 2) = convert_no1 (chan_no) || "";
      281 				     end;
      282 				else do;
      283 					bvalue = "000001100"b;
      284 					bnum = 1;
      285 				     end;
      286 
      287 				call move_buf_con;
      288 
      289 			     end;
      290 			else if file_table.linage
      291 			then do;
      292 
      293 				bvalue = "000001010"b;
      294 				bnum = 1;
      295 				page_sw = "1"b;
      296 
      297 				call move_buf_con;
      298 
      299 			     end;
      300 		     end;
      301 	     end;
      302 	else do;					/* BEFORE ADVANCING ... specified */
      303 
      304 		linage_before = "1"b;
      305 
      306 		if data_name.type = 2
      307 		then do;				/* BEFORE ADVANCING literal */
      308 
      309 			avalue = "000001010"b;
      310 
      311 			anum = fixed (dn_ptr -> numeric_lit.literal, 17);
      312 
      313 			if anum > 120
      314 			then go to litsize_error;
      315 
      316 			call move_buf_con;
      317 
      318 		     end;
      319 		else if data_name.type = 9
      320 		then do;				/* BEFORE ADVANCING data-name */
      321 
      322 			ba_sw = 1;
      323 
      324 			call move_buf_var;
      325 
      326 		     end;
      327 		else if data_name.type = 1 | data_name.type = 17
      328 		then do;				/* BEFORE ADVANCING PAGE or mnemonic-name */
      329 
      330 			if data_name.type = 17 | (data_name.type = 1 & ^file_table.linage)
      331 			then do;
      332 
      333 				chan_no = dn_ptr -> mnemonic_name.iw_key - 210;
      334 
      335 				if chan_no < 17 & chan_no > 9
      336 				then do;
      337 					anum = 5;
      338 					substr (pr_ctl, 3, 2) = convert_no (chan_no);
      339 				     end;
      340 				else if chan_no > 0 & chan_no < 10
      341 				then do;
      342 					anum = 4;
      343 					substr (pr_ctl, 3, 2) = convert_no1 (chan_no) || "";
      344 				     end;
      345 				else do;
      346 					avalue = "000001100"b;
      347 					anum = 1;
      348 				     end;
      349 
      350 				call move_buf_con;
      351 
      352 			     end;
      353 			else if file_table.linage
      354 			then do;
      355 
      356 				avalue = "000001010"b;
      357 				anum = 1;
      358 				page_sw = "1"b;
      359 
      360 				call move_buf_con;
      361 
      362 			     end;
      363 		     end;
      364 	     end;
      365 exit:
      366 	return;
      367 
      368 
      369 /*************************************/
      370 /* SUBROUTINES */
      371 /*************************************/
      372 
      373 move_buf_con:
      374      proc;					/* LINAGE CODE FOLLOWS */
      375 
      376 	if file_table.linage & buflen_off ^= 0
      377 	then do;
      378 
      379 		call cobol_set_pr (pr5_struct_ptr, dn_ptr_linage);
      380 
      381 		if page_sw
      382 		then call cobol_ioop_util$set_value (1000);
      383 						/* temp high value for PAGE */
      384 		else call cobol_ioop_util$set_value (bnum + anum);
      385 
      386 		call cobol_call_op (52, good_tag);	/* LINAGE_OP */
      387 		call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      388 		call cobol_define_tag (good_tag);
      389 
      390 	     end;
      391 
      392 /* 	else call cobol_ioop_util$set_value(0); */
      393 /* no linage clause specified */
      394 
      395 	if bnum > 0
      396 	then do;
      397 
      398 		if bnum < 3
      399 		then call cobol_io_util$move_direct ("110"b, buf_off * 4, 4, 0, bvalue);
      400 		else if data_name.type = 17
      401 		then call cobol_io_util$move_lit ("110"b, buf_off * 4, bnum, substr (pr_ctl, 1, bnum));
      402 		else call cobol_io_util$move_lit ("110"b, buf_off * 4, bnum, substr (nls, 1, bnum));
      403 
      404 		instr (1) = "110"b || substr (unspec (buflen_off), 22, 15) || lda;
      405 
      406 		call cobol_emit (instr_ptr, null (), 1);
      407 
      408 	     end;
      409 	else if file_table.rec_do
      410 	then do;					/* in this case A will not be already set */
      411 
      412 		instr (1) = "110"b || substr (unspec (buflen_off), 22, 15) || lda;
      413 
      414 		call cobol_emit (instr_ptr, null (), 1);
      415 	     end;
      416 
      417 	if anum = 0
      418 	then if file_table.device = 1
      419 	     then do;				/*print file - append CR if necessary */
      420 
      421 		     anum = 1;
      422 
      423 		     if file_table.linage
      424 		     then avalue = "000001010"b;	/* octal 012 top bottom */
      425 		     else avalue = "000001101"b;	/* octal 015 = Carriage Return */
      426 
      427 		end;
      428 	if anum > 0
      429 	then do;
      430 
      431 		if file_table.linage
      432 		then do;
      433 
      434 			if bnum = 0
      435 			then do;
      436 				temp = 5130;
      437 				instr (1) = substr (unspec (temp), 19, 18) || ldq_dumod;
      438 				temp = buf_off * 4 + 1;
      439 				instr (2) = "110"b || substr (unspec (temp), 22, 15) || stq;
      440 
      441 				call cobol_emit (instr_ptr, null (), 2);
      442 
      443 			     end;
      444 			temp = buflen_off + 1;
      445 			instr (1) = "110"b || substr (unspec (temp), 22, 15) || ldq;
      446 
      447 			call cobol_emit (instr_ptr, null (), 1);
      448 
      449 		     end;
      450 		else if data_name.type ^= 17 | anum = 1
      451 		then do;
      452 
      453 			instr (1) = substr (unspec (anum), 19, 18) || ldq_dlmod;
      454 			instr (2) = "110"b || substr (unspec (buflen_off), 22, 15) || adq;
      455 
      456 			call cobol_emit (instr_ptr, null (), 2);
      457 
      458 		     end;
      459 	     end;
      460 
      461 	if file_table.linage & ^linage_before
      462 	then do;
      463 		instr (1) = mrl;
      464 		temp = buf_off * 4;
      465 	     end;
      466 	else do;
      467 		instr (1) = mlr;
      468 		temp = buf_off * 4 + bnum;
      469 	     end;
      470 
      471 	call cobol_addr (mlr_struct_ptr, instr_ptr, null ());
      472 
      473 	substr (instr (3), 1, 20) = "110"b || substr (unspec (temp), 20, 17);
      474 	substr (instr (2), 21, 16) = "0000000000000101"b; /* sending length in A */
      475 	substr (instr (1), 12, 2) = "11"b;		/* length of receiving in A or Q */
      476 	substr (instr (1), 31, 1) = "1"b;		/* length of sending in A */
      477 
      478 	if anum = 0
      479 	then substr (instr (3), 21, 16) = substr (instr (2), 21, 16);
      480 	else do;
      481 
      482 		substr (instr (1), 1, 9) = avalue;
      483 		substr (instr (3), 21, 16) = "0000000000000110"b;
      484 
      485 	     end;
      486 
      487 	if data_name.type = 17 & anum > 1
      488 	then do;
      489 
      490 		substr (instr (1), 1, 9) = "000000000"b;
      491 		substr (instr (3), 21, 16) = "0000000000000101"b;
      492 
      493 		call cobol_emit (addr (instr (1)), null (), 3);
      494 		call cobol_pool (substr (pr_ctl, 1, anum), 1, temp);
      495 
      496 		substr (instr (1), 12, 7) = "1000101"b;
      497 		substr (instr (1), 30, 7) = "0000100"b;
      498 		temp = -cobol_$text_wd_off - temp;
      499 		substr (instr (2), 1, 18) = substr (unspec (temp), 19, 18);
      500 		substr (instr (2), 19, 18) = substr (unspec (anum), 19, 18);
      501 		substr (instr (3), 21, 16) = substr (unspec (anum), 21, 16);
      502 
      503 	     end;
      504 
      505 	call cobol_emit (addr (instr (1)), null (), 3);
      506 
      507 	if file_table.linage & ^linage_before
      508 	then do;
      509 
      510 		instr (1) = mlr_q;
      511 		instr (2) = (36)"0"b;
      512 		substr (instr (3), 33, 4) = "0001"b;
      513 
      514 		call cobol_emit (addr (instr (1)), null (), 3);
      515 
      516 		instr (1) = "000000000000000001000111110000000111"b;
      517 
      518 		call cobol_emit (addr (instr (1)), null (), 1);
      519 
      520 	     end;
      521 
      522 	temp = anum + bnum;
      523 
      524 	if ^file_table.linage & temp > 0
      525 	then call cobol_io_util$fixed_add ("110"b, buflen_off * 4, temp, "000"b, 0);
      526 
      527 	else if temp > 0
      528 	then do;
      529 
      530 		instr (1) = "110"b || substr (unspec (buflen_off), 22, 15) || stq;
      531 
      532 		instr (2) = "110"b || substr (unspec (buflen_off), 22, 15) || lda;
      533 
      534 		call cobol_emit (addr (instr), null (), 2);
      535 
      536 	     end;
      537 
      538 	return;
      539      end move_buf_con;
      540 
      541 
      542 move_buf_var:
      543      proc;
      544 
      545 	restartad = cobol_$text_wd_off;
      546 
      547 	call cobol_io_util$t9dec_to_bin ("110"b, len_off * 4, mp.pt (mp.n - 1));
      548 
      549 	patch_ic = cobol_$text_wd_off + 3;
      550 
      551 	call cobol_emit (addr (num_check_instr), null (), 4);
      552 	call cobol_ioerror_abort (advancing_error, mp.pt (1) -> reserved_word.line, 0, restartad, 0);
      553 
      554 /*[4.4-1]*/
      555 /*cobol_$text_wd_off = cobol_$text_wd_off-1;*/
      556 /* erase the transfer */
      557 	instr (1) = "110"b || substr (unspec (buflen_off), 22, 15) || lda;
      558 	utemp = restartad - (cobol_$text_wd_off + 1);
      559 	instr (2) = substr (unspec (utemp), 19, 18) || tra_icmod;
      560 
      561 	call cobol_emit (instr_ptr, null (), 2);
      562 
      563 	utemp = cobol_$text_wd_off - patch_ic;
      564 	substr (text (patch_ic), 1, 18) = substr (unspec (utemp), 19, 18);
      565 
      566 	if file_table.rec_do
      567 	then do;					/* in this case, A will not be already set */
      568 
      569 /*	     instr(1) = "110"b||substr(unspec(buflen_off),22,15)||lda;  */
      570 /* already done */
      571 
      572 		call cobol_emit (instr_ptr, null (), 1);
      573 	     end;
      574 
      575 	if file_table.linage & buflen_off ^= 0
      576 	then do;
      577 
      578 		call cobol_set_pr (pr5_struct_ptr, dn_ptr_linage);
      579 		call cobol_ioop_util$set_var_adv;
      580 
      581 		call cobol_call_op (52, good_tag);	/* LINAGE_OP */
      582 		call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      583 		call cobol_define_tag (good_tag);
      584 
      585 	     end;
      586 
      587 	if ba_sw = 0
      588 	then do;					/* AFTER specified */
      589 
      590 /*[4.3-1]*/
      591 		if file_table.linage		/*[4.3-1]*/
      592 		then do;
      593 
      594 /*[4.3-1]*/
      595 			temp = buflen_off + 1;
      596 
      597 /*[4.3-1]*/
      598 			instr (1) = "110"b || substr (unspec (temp), 22, 15) || ldq;
      599 						/*[4.3-1]*/
      600 			instr (2) = "110"b || substr (unspec (buflen_off), 22, 15) || sbq;
      601 
      602 /*[4.3-1]*/
      603 			call cobol_emit (instr_ptr, null (), 2);
      604 
      605 /*[4.3-1]*/
      606 		     end;
      607 
      608 		instr (1) = mlr;
      609 		instr (2) = ""b;
      610 		instr (3) = "110"b || substr (unspec (buf_off), 22, 15) || "000000000000000110"b;
      611 						/* len in Q reg */
      612 
      613 		substr (instr (1), 1, 18) = "000001010001100000"b;
      614 
      615 		call cobol_emit (instr_ptr, null (), 3);
      616 
      617 		if file_table.device = 1		/* print file - append carriage return */
      618 		then do;
      619 
      620 			instr (1) = "110"b || substr (unspec (buflen_off), 22, 15) || aos;
      621 			instr (2) = substr (instr (1), 1, 18) || lxl5;
      622 						/* and load it in X5 */
      623 
      624 			call cobol_emit (instr_ptr, null (), 2);
      625 
      626 		     end;
      627 
      628 		instr (1) = mlr;
      629 
      630 		call cobol_addr (mlr_struct_ptr, addr (instr (1)), null ());
      631 
      632 		substr (instr (1), 1, 18) = "000001101"b || "00"b || "1100110"b;
      633 						/* CR fill, var length, indexed by Q */
      634 		substr (instr (2), 21, 16) = "0000000000000101"b;
      635 						/* sending length in A */
      636 		instr (3) = "110"b || substr (unspec (buf_off), 22, 15);
      637 
      638 		if file_table.device = 1
      639 		then substr (instr (3), 19, 18) = "000000000000001101"b;
      640 						/* length in X5 */
      641 		else substr (instr (3), 19, 18) = "000000000000000101"b;
      642 						/* length in A */
      643 
      644 		substr (instr (1), 31, 1) = "1"b;
      645 		instr (4) = "110"b || substr (unspec (buflen_off), 22, 15) || adq;
      646 		instr (5) = substr (instr (4), 1, 18) || stq;
      647 
      648 		call cobol_emit (instr_ptr, null (), 5);
      649 
      650 	     end;
      651 	else do;
      652 
      653 		if file_table.linage
      654 		then do;
      655 			utemp = buflen_off + 1;
      656 			instr (1) = "110"b || substr (unspec (utemp), 22, 15) || ldq;
      657 		     end;
      658 		else do;
      659 			utemp = buflen_off;
      660 			instr (1) = "110"b || substr (unspec (utemp), 22, 15) || adq;
      661 		     end;
      662 
      663 		instr (2) = mlr;
      664 
      665 		call cobol_addr (mlr_struct_ptr, addr (instr (2)), null ());
      666 
      667 		substr (instr (3), 21, 16) = "0000000000000101"b;
      668 		instr (4) = "110"b || substr (unspec (buf_off), 22, 15) || "000000000000000110"b;
      669 		substr (instr (2), 1, 18) = "000001010001100000"b;
      670 		substr (instr (2), 31, 1) = "1"b;
      671 		instr (5) = "110"b || substr (unspec (buflen_off), 22, 15) || stq;
      672 
      673 		call cobol_emit (instr_ptr, null (), 5);
      674 
      675 		if file_table.device = 1
      676 		then do;				/* print file - assure carriage return */
      677 
      678 			instr (1) = "110"b || substr (unspec (len_off), 22, 15) || szn;
      679 			instr (2) = "000000000000000101"b || tnz_icmod;
      680 						/* OK if at least one NL */
      681 			instr (3) = mlr;		/* otherwise append CR */
      682 			substr (instr (3), 1, 18) = "000001101"b || "00"b || "100"b || "0110"b;
      683 						/* CR fill at offset in Q */
      684 			instr (4) = ""b;		/* for fill only */
      685 			instr (5) = "110"b || substr (unspec (buf_off), 22, 15) || "000000000000000001"b;
      686 			instr (6) = "110"b || substr (unspec (buflen_off), 22, 15) || aos;
      687 						/* increment length field */
      688 
      689 			call cobol_emit (instr_ptr, null (), 6);
      690 
      691 		     end;
      692 	     end;
      693 	return;
      694      end move_buf_var;
      695 
      696 
      697 /*************************************/
      698 nyi_error:
      699 	call ioa_$rsnnl ("""ADVANCING mnemonic-name"" clause specified on line ^d not yet implemented", message,
      700 	     message_len, mp.pt (1) -> reserved_word.line);
      701 	go to error;
      702 
      703 litsize_error:
      704 	call ioa_$rsnnl ("Literal specified in ""ADVANCING"" clause on line ^d is too large - ^a", message, message_len,
      705 	     mp.pt (1) -> reserved_word.line, dn_ptr -> numeric_lit.literal);
      706 	go to error;
      707 
      708 error:
      709 	error_info.name = "cobol_linage";
      710 	call signal_ ("command_abort_", null (), addr (error_info));
      711 	return;
      712 
      713 
      714 /*************************************/
      715 
      716 /*****	Declaration for builtin function	*****/
      717 
      718 dcl	(substr, mod, binary, fixed, addr, addrel, rel, length, string, unspec, null, index)
      719 			builtin;
      720 
      721 /*****	End of declaration for builtin function	*****/
      722 
  1     1 
  1     2 /* BEGIN INCLUDE FILE ...   cobol_error_info.incl.pl1 */
  1     3 /* Last modified  July 8, 1974 by ORN */
  1     4 
  1     5 dcl 1 error_info,
  1     6      2 name char(32),
  1     7      2 message_len fixed bin,
  1     8      2 message char(128);
  1     9 
  1    10 
  1    11 /*
  1    12*name		the name of the program signalling the error.
  1    13*
  1    14*message_len	the number of valid characters in message.
  1    15*
  1    16*message		the text of the message to be issued.
  1    17**/
  1    18 
  1    19 /* END INCLUDE FILE ...   cobol_error_info.incl.pl1 */
  1    20 
      723 
  2     1 
  2     2 /* BEGIN INCLUDE FILE ... cobol_type1.incl.pl1 */
  2     3 /* Last modified on 11/19/76 by ORN */
  2     4 
  2     5 /*
  2     6*A reserved word token is created in the minpral files for each occurrence
  2     7*of a reserved word in the source program.  The value of the key field
  2     8*indicates the specific reserved word which a type 1 token represents.
  2     9**/
  2    10 
  2    11 dcl rw_ptr ptr;
  2    12 
  2    13 /* BEGIN DECLARATION OF TYPE1 (RESERVED WORD) TOKEN */
  2    14 dcl	1 reserved_word based (rw_ptr),
  3     1 
  3     2 /* begin include file ... cobol_TYPE1.incl.pl1 */
  3     3 /* Last modified on 11/17/76 by ORN */
  3     4 /* Last modified on 12/28/76 by FCH */
  3     5 /* Last modified on 12/16/80 by FCH */
  3     6 
  3     7 		/* header */
  3     8 		2 size fixed bin,
  3     9 		2 line fixed bin,
  3    10 		2 column fixed bin,
  3    11 		2 type fixed bin,
  3    12 		/* body */
  3    13 		2 key fixed bin,
  3    14 		/* procedure division class bits */
  3    15 		2 verb bit (1),
  3    16 		2 arith_op bit (1),
  3    17 		2 figcon bit (1),
  3    18 		2 terminator bit (1),
  3    19 		2 end_dec bit (1),
  3    20 		2 rel_op bit (1),
  3    21 		2 imper_verb bit (1),
  3    22 		2 end_cobol bit (1),
  3    23 		/* data division class bits */
  3    24 		2 section_header bit (1),
  3    25 		2 fs_ind bit (1),
  3    26 		2 fd_clause bit (1),
  3    27 		2 dd_clause bit (1),
  3    28 		2 cd_input bit (1),
  3    29 		2 cd_output bit (1),
  3    30 		2 cset_name bit (1),
  3    31 		2 ss_division bit (1),
  3    32 		2 repl_jump_ind bit (4),
  3    33 		2 ided_recovery bit (1),
  3    34 		2 report_writer bit (5),
  3    35 		2 ss_desc_entry bit (1),
  3    36 		2 jump_index fixed bin,
  3    37 		2 length fixed bin,
  3    38 		2 name char(0 refer(reserved_word.length));
  3    39 
  3    40 
  3    41 
  3    42 /* end include file ... cobol_TYPE1.incl.pl1 */
  3    43 
  2    15 
  2    16 /* END DECLARATION OF TYPE1 (RESERVED WORD) TOKEN */
  2    17 
  2    18 /* END INCLUDE FILE ... cobol_type1.incl.pl1 */
  2    19 
      724 
  4     1 
  4     2 /* BEGIN INCLUDE FILE ... cobol_type2.incl.pl1 */
  4     3 /* Last modified on 11/19/76 by ORN */
  4     4 
  4     5 /*
  4     6*A type 2 numeric literal token is entered into the minpral file by the
  4     7*lexical analysis phase for each numeric literal encountered in the source
  4     8*program.
  4     9**/
  4    10 
  4    11 dcl nlit_ptr ptr;
  4    12 
  4    13 /* BEGIN DECLARATION OF TYPE2 (NUMERIC LITERAL) TOKEN */
  4    14 dcl 1 numeric_lit based (nlit_ptr),
  5     1 
  5     2 /* begin include file ... cobol_TYPE2.incl.pl1 */
  5     3 /* Last modified on 12/28/76 by FCH */
  5     4 
  5     5 		/* header */
  5     6 		2 size fixed bin,
  5     7 		2 line fixed bin,
  5     8 		2 column fixed bin,
  5     9 		2 type fixed bin,
  5    10 		/* body */
  5    11 		2 integral bit(1),
  5    12 		2 floating bit(1),
  5    13 		2 seg_range bit(1),
  5    14 		2 filler1 bit(4),
  5    15 		2 subscript bit(1),
  5    16 		2 sign char(1),
  5    17 		2 exp_sign char(1),
  5    18 		2 exp_places fixed bin,
  5    19 		2 places_left fixed bin,
  5    20 		2 places_right fixed bin,
  5    21 		2 places fixed bin,
  5    22 		2 literal char(0 refer(numeric_lit.places));	
  5    23 
  5    24 
  5    25 
  5    26 /* end include file ... cobol_TYPE2.incl.pl1 */
  5    27 
  4    15 
  4    16 /* END DECLARATION OF TYPE2 (NUMERIC LITERAL) TOKEN */
  4    17 
  4    18 /* END INCLUDE FILE ... cobol_type2.incl.pl1 */
  4    19 
      725 
  6     1 
  6     2 /* BEGIN INCLUDE FILE ... cobol_type9.incl.pl1 */
  6     3 /* Last modified on 11/19/76 by ORN */
  6     4 
  6     5 /*
  6     6*A type 9 data name token is entered into the name table by the data
  6     7*division syntax phase for each data name described in the data division.
  6     8*The replacement phase subsequently replaces type 8 user word references
  6     9*to data names in the procedure division minpral file with the corresponding
  6    10*type 9 tokens from the name table.
  6    11**/
  6    12 
  6    13 /* dcl dn_ptr ptr; */
  6    14 
  6    15 /* BEGIN DECLARATION OF TYPE9 (DATA NAME) TOKEN */
  6    16 dcl 1 data_name based (dn_ptr),
  7     1 
  7     2 /* begin include file ... cobol_TYPE9.incl.pl1 */
  7     3 /* Last modified on 06/19/77 by ORN */
  7     4 /* Last modified on 12/28/76 by FCH */
  7     5 
  7     6 		/* header */
  7     7 		2 size fixed bin,
  7     8 		2 line fixed bin,
  7     9 		2 column fixed bin,
  7    10 		2 type fixed bin,
  7    11 		/* body */
  7    12 		2 string_ptr ptr,
  7    13 		2 prev_rec ptr,
  7    14 		2 searched bit (1),
  7    15 		2 duplicate bit (1),
  7    16 		2 saved bit (1),
  7    17 		2 debug_ind bit (1),
  7    18 		2 filler2 bit (3),
  7    19 		2 used_as_sub bit (1),
  7    20 		2 def_line fixed bin,
  7    21 		2 level fixed bin,
  7    22 		2 linkage fixed bin,
  7    23 		2 file_num fixed bin,
  7    24 		2 size_rtn fixed bin,
  7    25 		2 item_length fixed bin(24),
  7    26 		2 places_left fixed bin,
  7    27 		2 places_right fixed bin,
  7    28 		/* description */
  7    29 		2 file_section bit (1),
  7    30 		2 working_storage bit (1),
  7    31 		2 constant_section bit (1),
  7    32 		2 linkage_section bit (1),
  7    33 		2 communication_section bit (1),
  7    34 		2 report_section bit (1),
  7    35 		2 level_77 bit (1),
  7    36 		2 level_01 bit (1),
  7    37 		2 non_elementary bit (1),
  7    38 		2 elementary bit (1),
  7    39 		2 filler_item bit (1),
  7    40 		2 s_of_rdf bit (1),
  7    41 		2 o_of_rdf bit (1),
  7    42 		2 bin_18 bit (1),
  7    43 		2 bin_36 bit (1),
  7    44 		2 pic_has_l bit (1),
  7    45 		2 pic_is_do bit (1),
  7    46 		2 numeric bit (1),
  7    47 		2 numeric_edited bit (1),
  7    48 		2 alphanum bit (1),
  7    49 		2 alphanum_edited bit (1),
  7    50 		2 alphabetic bit (1),
  7    51 		2 alphabetic_edited bit (1),
  7    52 		2 pic_has_p bit (1),
  7    53 		2 pic_has_ast bit (1),
  7    54 		2 item_signed bit(1),
  7    55 		2 sign_separate bit (1),
  7    56 		2 display bit (1),
  7    57 		2 comp bit (1),
  7    58 		2 ascii_packed_dec_h bit (1),	/* as of 8/16/76  this field used for comp8. */
  7    59 		2 ascii_packed_dec bit (1),
  7    60 		2 ebcdic_packed_dec bit (1),
  7    61 		2 bin_16 bit (1),
  7    62 		2 bin_32 bit (1),
  7    63 		2 usage_index bit (1),
  7    64 		2 just_right bit (1),
  7    65 		2 compare_argument bit (1),
  7    66 		2 sync bit (1),
  7    67 		2 temporary bit (1),
  7    68 		2 bwz bit (1),
  7    69 		2 variable_length bit (1),
  7    70 		2 subscripted bit (1),
  7    71 		2 occurs_do bit (1),
  7    72 		2 key_a bit (1),
  7    73 		2 key_d bit (1),
  7    74 		2 indexed_by bit (1),
  7    75 		2 value_numeric bit (1),
  7    76 		2 value_non_numeric bit (1),
  7    77 		2 value_signed bit (1),
  7    78 		2 sign_type bit (3),
  7    79 		2 pic_integer bit (1),
  7    80 		2 ast_when_zero bit (1),
  7    81 		2 label_record bit (1),
  7    82 		2 sign_clause_occurred bit (1),
  7    83 		2 okey_dn bit (1),
  7    84 		2 subject_of_keyis bit (1),
  7    85 		2 exp_redefining bit (1),
  7    86 		2 sync_in_rec bit (1),
  7    87 		2 rounded bit (1),
  7    88 		2 ad_bit bit (1),
  7    89 		2 debug_all bit (1),
  7    90 		2 overlap bit (1),
  7    91 		2 sum_counter bit (1),
  7    92 		2 exp_occurs bit (1),
  7    93 		2 linage_counter bit (1),
  7    94 		2 rnm_01 bit (1),
  7    95 		2 aligned bit (1),
  7    96 		2 not_user_writable bit (1),
  7    97 		2 database_key bit (1),
  7    98 		2 database_data_item bit (1),
  7    99 		2 seg_num fixed bin,
  7   100 		2 offset fixed bin(24),
  7   101 		2 initial_ptr fixed bin,
  7   102 		2 edit_ptr fixed bin,
  7   103 		2 occurs_ptr fixed bin,
  7   104 		2 do_rec char(5),
  7   105 		2 bitt bit (1),
  7   106 		2 byte bit (1),
  7   107 		2 half_word bit (1),
  7   108 		2 word bit (1),
  7   109 		2 double_word bit (1),
  7   110 		2 half_byte bit (1),
  7   111 		2 filler5 bit (1),
  7   112 		2 bit_offset bit (4),
  7   113 		2 son_cnt bit (16),
  7   114 		2 max_red_size fixed bin(24),
  7   115 		2 name_size fixed bin,
  7   116 		2 name char(0 refer(data_name.name_size));	
  7   117 
  7   118 
  7   119 
  7   120 /* end include file ... cobol_TYPE9.incl.pl1 */
  7   121 
  6    17 
  6    18 /* END DECLARATION OF TYPE9 (DATA NAME) TOKEN */
  6    19 
  6    20 /* END INCLUDE FILE ... cobol_type9.incl.pl1 */
  6    21 
      726 
  8     1 
  8     2 /* BEGIN INCLUDE FILE ... cobol_type19.incl.pl1 */
  8     3 /* last modified on 11/19/76 by ORN */
  8     4 
  8     5 /*
  8     6*A type 19 end of statement token is created in the procedure division
  8     7*minpral file at the end of each minpral statement generated by the
  8     8*procedure division syntax phase.  A minpral statement may be a complete or
  8     9*partial source language statement.  A type 19 token contains information
  8    10*describing the statement which it delimits.
  8    11**/
  8    12 
  8    13 dcl eos_ptr ptr;
  8    14 
  8    15 /* BEGIN DECLARATION OF TYPE19 (END STATEMENT) TOKEN */
  8    16 dcl	1 end_stmt based (eos_ptr),
  9     1 
  9     2 /* begin include file ... cobol_TYPE19.incl.pl1 */
  9     3 /* Last modified on 11/17/76 by ORN */
  9     4 
  9     5 		/* header */
  9     6 		2 size fixed bin,
  9     7 		2 line fixed bin,
  9     8 		2 column fixed bin,
  9     9 		2 type fixed bin,
  9    10 		/* body */
  9    11 		2 verb fixed bin,
  9    12 		2 e fixed bin,
  9    13 		2 h fixed bin,
  9    14 		2 i fixed bin,
  9    15 		2 j fixed bin,
  9    16 		2 a bit (3),
  9    17 		2 b bit (1),
  9    18 		2 c bit (1),
  9    19 		2 d bit (2),
  9    20 		2 f bit (2),
  9    21 		2 g bit (2),
  9    22 		2 k bit (5),
  9    23 		2 always_an bit (1);
  9    24 
  9    25 /* end include file ... cobol_TYPE19.incl.pl1 */
  9    26 
  8    17 
  8    18 /* END DECLARATION OF TYPE19 (END STATEMENT) TOKEN */
  8    19 
  8    20 /*
  8    21*FIELD		CONTENTS
  8    22*
  8    23*size		The total size in bytes of this end of statement token.
  8    24*line		0
  8    25*column		0
  8    26*type		19
  8    27*verb		A value indicating the verb in this statement
  8    28*		 1 = accept
  8    29*		 2 = add
  8    30*		 3 = on size error
  8    31*		 4 = alter
  8    32*		 5 = call
  8    33*		 7 = cancel
  8    34*		 8 = close
  8    35*		 9 = divide
  8    36*		10 = multiply
  8    37*		11 = subtract
  8    38*		12 = exit
  8    39*		14 = go
  8    40*		15 = merge
  8    41*		16 = initiate
  8    42*		17 = inspect
  8    43*		18 = move
  8    44*		19 = open
  8    45*		20 = perform
  8    46*		21 = read
  8    47*		23 = receive
  8    48*		24 = release
  8    49*		25 = return
  8    50*		26 = search
  8    51*		27 = rewrite
  8    52*		29 = seek
  8    53*		30 = send
  8    54*		31 = set
  8    55*		33 = stop
  8    56*		34 = string
  8    57*		35 = suspend
  8    58*		36 = terminate
  8    59*		37 = unstring
  8    60*		38 = write
  8    61*		39 = use
  8    62*		40 = compute
  8    63*		41 = disable
  8    64*		42 = display
  8    65*		43 = enable
  8    66*		45 = generate
  8    67*		46 = hold
  8    68*		48 = process
  8    69*		49 = sort
  8    70*		52 = procedure
  8    71*		53 = declaratives
  8    72*		54 = section name
  8    73*		55 = paragraph name
  8    74*		98 = end
  8    75*e,h,i,j		The significance of these fields differs with each
  8    76*		statement.  These fields are normally used as counters.
  8    77*a,b,c,d,f,g,k	The significance of these fields differs with each
  8    78*		statement.  These fields are normally used as indicators.
  8    79**/
  8    80 
  8    81 /* END INCLUDE FILE ... cobol_type19.incl.pl1 */
  8    82 
      727 
 10     1 
 10     2 /* BEGIN INCLUDE FILE ...   cobol_file_table.incl.pl1 */
 10     3 /*     <<<   INCLUDE FILE FOR FILE TABLE IN COMMON   >>>     */
 10     4 
 10     5 /* Modified on 09/30/80 by FCH, [4.4-1], density is 6250 is supported */
 10     6 /* Modified on 12/05/78 by RAL, [3.0-3], added dupl_alt from dummy102 */
 10     7 /* Modified on 11/21/78 by RAL, [3.0-2], added space for abs_record_offset from filler */
 10     8 /* Modified on 10/26/78 by RAL, [3.0-1], added space for file_desc_1 table offset from filler */
 10     9 /*     <<<   LAST MODIFIED ON 06-02-77 by GM         >>>	*/
 10    10 /*     <<<   LAST MODIFIED ON 05-31-77 by GM         >>>	*/
 10    11 /*     <<<   LAST MODIFIED  ON 06-30-76 by GM        >>>	*/
 10    12 /*     <<<   LAST MODIFIED ON 06-07-76 by GM    >>>     */
 10    13 /*     <<<   LAST MODIFIED ON 11-29-74 by orn   >>>     */
 10    14 
 10    15 /*
 10    16*A file table is created in variable common for each file selected in the
 10    17*environment division.  The fields of a given file table provide information
 10    18*about the specific file for which the file table is generated.  The
 10    19*addresses which may be contained in the various "info" fields of the file
 10    20*table are addresses in variable common.
 10    21**/
 10    22 
 10    23 /*   THE FILE TABLE STRUCTURE   */
 10    24 
 10    25 dcl	1 file_table based (ft_ptr),
 10    26 		2 next char (5),
 10    27 		2 ifn char (16),
 10    28 		2 attach_options_info char(5),	/*06/02/77*/
 10    29 		2 replacement_info char(5),		/*06/02/77*/
 10    30 		2 file_id_info char(5),		/*05/31/77*/
 10    31 		2 retention_info char(5),		/*05/31/77*/
 10    32 		2 filler0 char (3) ,			/* [3.0-1] */
 10    33 		2 file_desc_1_offset fixed bin (24),		/* [3.0-1] */
 10    34 		2 abs_record_offset fixed bin (24),		/* [3.-02] */
 10    35 		2 filler char(5),		/* this area is available.*/
 10    36 		2 padding_char char (1),
 10    37 		2 banner_char char (1),
 10    38 		2 file_status_info char (5),
 10    39 		2 extra_status_info char (5),
 10    40 		2 cat_id_info char (5),
 10    41 		2 r_key_info char (5),
 10    42 		2 alt_key_info char (5),
 10    43 		2 rec_do_info char (5),
 10    44 		2 label_info char (5),
 10    45 		2 data_info char (5),
 10    46 		2 report_info char (5),
 10    47 		2 linage_info char (5),
 10    48 		2 optional bit (1),						/*06/07/76*/
 10    49 		2 external bit (1),
 10    50 		2 file_status bit (1),
 10    51 		2 extra_status bit (1),
 10    52 		2 sysin bit (1),
 10    53 		2 sysout bit (1),
 10    54 		2 move_mode bit (1),
 10    55 		2 locate_mode bit (1),
 10    56 		2 fixed_recs bit (1),
 10    57 		2 variable_recs bit (1),
 10    58 		2 spanned_recs bit (1),				/*06/07/76*/
 10    59 		2 interchange bit (1),				/*06/07/76*/
 10    60 		2 relative_key bit (1),
 10    61 		2 record_key bit (1),
 10    62 		2 even_parity bit (1),
 10    63 		2 odd_parity bit (1),
 10    64 		2 padding bit (1),
 10    65 		2 banner bit (1),
 10    66 		2 random bit (1),
 10    67 		2 no_file_lockout bit (1),
 10    68 		2 no_write_check bit (1),
 10    69 		2 no_resident_index bit (1),
 10    70 		2 same_file bit (1),
 10    71 		2 sort_file bit (1),
 10    72 		2 rec_do bit (1),
 10    73 		2 linage bit (1),
 10    74 		2 code_set_clause bit (1),
 10    75 		/* history */
 10    76 		2 close bit (1),
 10    77 		2 delete bit (1),
 10    78 		2 open_in bit (1),
 10    79 		2 open_out bit (1),
 10    80 		2 open_io bit (1),
 10    81 		2 open_ext bit (1),
 10    82 		2 read bit (1),
 10    83 		2 release bit (1),
 10    84 		2 return_bit bit (1),
 10    85 		2 rewrite bit (1),
 10    86 		2 sort bit (1),
 10    87 		2 start bit (1),
 10    88 		2 use_error bit (1),
 10    89 		2 write bit (1),
 10    90 		2 read_next bit (1),
 10    91 		2 read_key bit (1),
 10    92 		2 accept bit (1),
 10    93 		2 display bit (1),
 10    94 		2 unequal_recs bit (1),
 10    95 		2 dummy_sysin bit (1),
 10    96 		2 dummy_sysout bit (1),
 10    97 		2 file_no fixed bin,
 10    98 		2 uca_offset fixed bin(24),
 10    99 		2 cra_seg fixed bin,
 10   100 		2 cra_offset fixed bin(24),
 10   101 		2 max_cra_size fixed bin(24),
 10   102 		2 catalogued fixed bin,
 10   103 		2 organization fixed bin,
 10   104 		2 org_qual fixed bin,
 10   105 		2 access fixed bin,
 10   106 		2 buffers fixed bin,
 10   107 		2 device fixed bin,
 10   108 		2 record_prefix fixed bin,				/*06/07/76*/
 10   109 		2 alternate_keys fixed bin,
 10   110 		2 record_format fixed bin,
 10   111 		2 label_format fixed bin,
 10   112 		2 key_location fixed bin,
 10   113 		2 key_size fixed bin,
 10   114 		2 temporary fixed bin,
 10   115 		2 address_format fixed bin,
 10   116 		2 same_area_clause fixed bin,
 10   117 		2 same_rec_clause fixed bin,
 10   118 		2 same_sort_clause fixed bin,
 10   119 		2 mult_clause_no fixed bin,
 10   120 		2 mult_position_no fixed bin,
 10   121 		2 block_desc fixed bin,
 10   122 		2 block_min fixed bin(24),
 10   123 		2 block_max fixed bin(24),
 10   124 		2 rec_min fixed bin(24),
 10   125 		2 rec_max fixed bin(24),
 10   126 		2 label_count fixed bin,
 10   127 		2 ifn_size fixed bin,
 10   128 		2 data_count fixed bin,
 10   129 		2 report_count fixed bin,
 10   130 		2 code_set fixed bin,
 10   131 		2 error_exit fixed bin,
 10   132 		2 prefix_size fixed bin,
 10   133 		2 blocked bit (1),
 10   134 		2 variable bit (1),
 10   135 		2 unbannered bit (1),
 10   136 		2 prefix_clause bit (1),
 10   137 		2 symbolic bit (1),
 10   138 		2 address_format_bit bit (1),
 10   139 		2 bsn bit(1),						/*06/07/76*/
 10   140 		2 process_area bit(1),					/*06/07/76*/
 10   141 		2 dupl_alt bit (1),			/* [3.0-3] */
 10   142 		2 dummy102 bit (23),
 10   143 		2 name_size fixed bin,
 10   144 		2 name char(32),
 10   145 		2 id char(32),
 10   146 		2 temp bit(1) ,
 10   147 		2 perm bit(1) ,
 10   148 		2 attach bit(1) ,
 10   149 		2 detach bit(1) ,
 10   150 		2 fsb ,		/* file state block */
 10   151 		     3 seg fixed bin(24), /* internal addr */
 10   152 		     3 off fixed bin(24),
 10   153 		2 tape,
 10   154 		     3 density bit(1) ,	/* 0-hi 1-lo */
 10   155 		     3 retain bit(1),	/* 0 not retained across attachment, 1 retained */
 10   156 		     3 force bit(1),	/* 0 check retention date, 1 no check */
 10   157 		     3 protect bit(1) ,	/* 0-no 1-yes */
 10   158 		     3 den_6250 bit(1),	/* 0-no 1-yes */		/*[4.4-1]*/
 10   159 		2 cat_nm char(200),
 10   160 		2 ao_len fixed bin(24),		/* attach options */
 10   161 		2 ao_string char(256),
 10   162 		2 output_mode fixed bin,	/*	0 not specified
 10   163*						1 generation
 10   164*						2 modification
 10   165*						3 replacement literal
 10   166*						4 replacement dataname	*/
 10   167 		2 om_len	fixed bin,		/* length of output mode */
 10   168 		2 om_string char(17),
 10   169 		2 tape_device fixed bin,	/*	0 not specified
 10   170*						1 integer
 10   171*						2 dataname	*/
 10   172 		2 tape_device_num fixed bin,
 10   173 		2 tape_device_key char(5),
 10   174 		2 add_cat_key char(5);
 10   175 
 10   176 
 10   177 /* END INCLUDE FILE ...   cobol_file_table.incl.pl1 */
 10   178 
      728 
 11     1 
 11     2 /* BEGIN INCLUDE FILE ... cobol_.incl.pl1 */
 11     3 /* last modified Feb 4, 1977 by ORN  */
 11     4 
 11     5 /* This file defines all external data used in the generator phase of Multics Cobol */
 11     6 
 11     7 /* POINTERS */
 11     8 dcl cobol_$text_base_ptr ptr  ext;
 11     9 dcl text_base_ptr ptr  defined (cobol_$text_base_ptr);
 11    10 dcl cobol_$con_end_ptr ptr  ext;
 11    11 dcl con_end_ptr ptr  defined (cobol_$con_end_ptr);
 11    12 dcl cobol_$def_base_ptr ptr  ext;
 11    13 dcl def_base_ptr ptr  defined (cobol_$def_base_ptr);
 11    14 dcl cobol_$link_base_ptr ptr  ext;
 11    15 dcl link_base_ptr ptr  defined (cobol_$link_base_ptr);
 11    16 dcl cobol_$sym_base_ptr ptr  ext;
 11    17 dcl sym_base_ptr ptr  defined (cobol_$sym_base_ptr);
 11    18 dcl cobol_$reloc_text_base_ptr ptr  ext;
 11    19 dcl reloc_text_base_ptr ptr  defined (cobol_$reloc_text_base_ptr);
 11    20 dcl cobol_$reloc_def_base_ptr ptr  ext;
 11    21 dcl reloc_def_base_ptr ptr  defined (cobol_$reloc_def_base_ptr);
 11    22 dcl cobol_$reloc_link_base_ptr ptr  ext;
 11    23 dcl reloc_link_base_ptr ptr  defined (cobol_$reloc_link_base_ptr);
 11    24 dcl cobol_$reloc_sym_base_ptr ptr  ext;
 11    25 dcl reloc_sym_base_ptr ptr  defined (cobol_$reloc_sym_base_ptr);
 11    26 dcl cobol_$reloc_work_base_ptr ptr  ext;
 11    27 dcl reloc_work_base_ptr ptr  defined (cobol_$reloc_work_base_ptr);
 11    28 dcl cobol_$pd_map_ptr ptr  ext;
 11    29 dcl pd_map_ptr ptr  defined (cobol_$pd_map_ptr);
 11    30 dcl cobol_$fixup_ptr ptr  ext;
 11    31 dcl fixup_ptr ptr  defined (cobol_$fixup_ptr);
 11    32 dcl cobol_$initval_base_ptr ptr  ext;
 11    33 dcl initval_base_ptr ptr  defined (cobol_$initval_base_ptr);
 11    34 dcl cobol_$initval_file_ptr ptr  ext;
 11    35 dcl initval_file_ptr ptr  defined (cobol_$initval_file_ptr);
 11    36 dcl cobol_$perform_list_ptr ptr  ext;
 11    37 dcl perform_list_ptr ptr  defined (cobol_$perform_list_ptr);
 11    38 dcl cobol_$alter_list_ptr ptr  ext;
 11    39 dcl alter_list_ptr ptr  defined (cobol_$alter_list_ptr);
 11    40 dcl cobol_$seg_init_list_ptr ptr  ext;
 11    41 dcl seg_init_list_ptr ptr  defined (cobol_$seg_init_list_ptr);
 11    42 dcl cobol_$temp_token_area_ptr ptr  ext;
 11    43 dcl temp_token_area_ptr ptr  defined (cobol_$temp_token_area_ptr);
 11    44 dcl cobol_$temp_token_ptr ptr  ext;
 11    45 dcl temp_token_ptr ptr  defined (cobol_$temp_token_ptr);
 11    46 dcl cobol_$token_block1_ptr ptr  ext;
 11    47 dcl token_block1_ptr ptr  defined (cobol_$token_block1_ptr);
 11    48 dcl cobol_$token_block2_ptr ptr  ext;
 11    49 dcl token_block2_ptr ptr  defined (cobol_$token_block2_ptr);
 11    50 dcl cobol_$minpral5_ptr ptr  ext;
 11    51 dcl minpral5_ptr ptr  defined (cobol_$minpral5_ptr);
 11    52 dcl cobol_$tag_table_ptr ptr  ext;
 11    53 dcl tag_table_ptr ptr  defined (cobol_$tag_table_ptr);
 11    54 dcl cobol_$map_data_ptr ptr  ext;
 11    55 dcl map_data_ptr ptr  defined (cobol_$map_data_ptr);
 11    56 dcl cobol_$ptr_status_ptr ptr  ext;
 11    57 dcl ptr_status_ptr ptr  defined (cobol_$ptr_status_ptr);
 11    58 dcl cobol_$reg_status_ptr ptr  ext;
 11    59 dcl reg_status_ptr ptr  defined (cobol_$reg_status_ptr);
 11    60 dcl cobol_$misc_base_ptr ptr ext;
 11    61 dcl misc_base_ptr ptr defined (cobol_$misc_base_ptr);
 11    62 dcl cobol_$misc_end_ptr ptr ext;
 11    63 dcl misc_end_ptr ptr defined (cobol_$misc_end_ptr);
 11    64 dcl cobol_$list_ptr ptr ext;
 11    65 dcl list_ptr ptr defined (cobol_$list_ptr);
 11    66 dcl cobol_$allo1_ptr ptr ext;
 11    67 dcl allo1_ptr ptr defined (cobol_$allo1_ptr);
 11    68 dcl cobol_$eln_ptr ptr ext;
 11    69 dcl eln_ptr ptr defined (cobol_$eln_ptr);
 11    70 dcl cobol_$diag_ptr ptr ext;
 11    71 dcl diag_ptr ptr defined (cobol_$diag_ptr);
 11    72 dcl cobol_$xref_token_ptr ptr ext;
 11    73 dcl xref_token_ptr ptr defined (cobol_$xref_token_ptr);
 11    74 dcl cobol_$xref_chain_ptr ptr ext;
 11    75 dcl xref_chain_ptr ptr defined (cobol_$xref_chain_ptr);
 11    76 dcl cobol_$statement_info_ptr ptr ext;
 11    77 dcl statement_info_ptr ptr defined (cobol_$statement_info_ptr);
 11    78 dcl cobol_$reswd_ptr ptr ext;
 11    79 dcl reswd_ptr ptr defined (cobol_$reswd_ptr);
 11    80 dcl cobol_$op_con_ptr ptr ext;
 11    81 dcl op_con_ptr ptr defined (cobol_$op_con_ptr);
 11    82 dcl cobol_$ntbuf_ptr ptr ext;
 11    83 dcl ntbuf_ptr ptr defined (cobol_$ntbuf_ptr);
 11    84 dcl cobol_$main_pcs_ptr ptr ext;
 11    85 dcl main_pcs_ptr ptr defined (cobol_$main_pcs_ptr);
 11    86 dcl cobol_$include_info_ptr ptr ext;
 11    87 dcl include_info_ptr ptr defined (cobol_$include_info_ptr);
 11    88 
 11    89 /* FIXED BIN */
 11    90 dcl cobol_$text_wd_off fixed bin  ext;
 11    91 dcl text_wd_off fixed bin  defined (cobol_$text_wd_off);
 11    92 dcl cobol_$con_wd_off fixed bin  ext;
 11    93 dcl con_wd_off fixed bin  defined (cobol_$con_wd_off);
 11    94 dcl cobol_$def_wd_off fixed bin  ext;
 11    95 dcl def_wd_off fixed bin  defined (cobol_$def_wd_off);
 11    96 dcl cobol_$def_max fixed bin  ext;
 11    97 dcl def_max fixed bin  defined (cobol_$def_max);
 11    98 dcl cobol_$link_wd_off fixed bin  ext;
 11    99 dcl link_wd_off fixed bin  defined (cobol_$link_wd_off);
 11   100 dcl cobol_$link_max fixed bin  ext;
 11   101 dcl link_max fixed bin  defined (cobol_$link_max);
 11   102 dcl cobol_$sym_wd_off fixed bin  ext;
 11   103 dcl sym_wd_off fixed bin  defined (cobol_$sym_wd_off);
 11   104 dcl cobol_$sym_max fixed bin  ext;
 11   105 dcl sym_max fixed bin  defined (cobol_$sym_max);
 11   106 dcl cobol_$reloc_text_max fixed bin(24)  ext;
 11   107 dcl reloc_text_max fixed bin(24)  defined (cobol_$reloc_text_max);
 11   108 dcl cobol_$reloc_def_max fixed bin(24)  ext;
 11   109 dcl reloc_def_max fixed bin(24)  defined (cobol_$reloc_def_max);
 11   110 dcl cobol_$reloc_link_max fixed bin(24)  ext;
 11   111 dcl reloc_link_max fixed bin(24)  defined (cobol_$reloc_link_max);
 11   112 dcl cobol_$reloc_sym_max fixed bin(24)  ext;
 11   113 dcl reloc_sym_max fixed bin(24)  defined (cobol_$reloc_sym_max);
 11   114 dcl cobol_$reloc_work_max fixed bin(24)  ext;
 11   115 dcl reloc_work_max fixed bin(24)  defined (cobol_$reloc_work_max);
 11   116 dcl cobol_$pd_map_index fixed bin  ext;
 11   117 dcl pd_map_index fixed bin  defined (cobol_$pd_map_index);
 11   118 dcl cobol_$cobol_data_wd_off fixed bin  ext;
 11   119 dcl cobol_data_wd_off fixed bin  defined (cobol_$cobol_data_wd_off);
 11   120 dcl cobol_$stack_off fixed bin  ext;
 11   121 dcl stack_off fixed bin  defined (cobol_$stack_off);
 11   122 dcl cobol_$max_stack_off fixed bin  ext;
 11   123 dcl max_stack_off fixed bin  defined (cobol_$max_stack_off);
 11   124 dcl cobol_$init_stack_off fixed bin  ext;
 11   125 dcl init_stack_off fixed bin  defined (cobol_$init_stack_off);
 11   126 dcl cobol_$pd_map_sw fixed bin  ext;
 11   127 dcl pd_map_sw fixed bin  defined (cobol_$pd_map_sw);
 11   128 dcl cobol_$next_tag fixed bin  ext;
 11   129 dcl next_tag fixed bin  defined (cobol_$next_tag);
 11   130 dcl cobol_$data_init_flag fixed bin  ext;
 11   131 dcl data_init_flag fixed bin  defined (cobol_$data_init_flag);
 11   132 dcl cobol_$seg_init_flag fixed bin  ext;
 11   133 dcl seg_init_flag fixed bin  defined (cobol_$seg_init_flag);
 11   134 dcl cobol_$alter_flag fixed bin  ext;
 11   135 dcl alter_flag fixed bin  defined (cobol_$alter_flag);
 11   136 dcl cobol_$sect_eop_flag fixed bin  ext;
 11   137 dcl sect_eop_flag fixed bin  defined (cobol_$sect_eop_flag);
 11   138 dcl cobol_$para_eop_flag fixed bin  ext;
 11   139 dcl para_eop_flag fixed bin  defined (cobol_$para_eop_flag);
 11   140 dcl cobol_$priority_no fixed bin  ext;
 11   141 dcl priority_no fixed bin  defined (cobol_$priority_no);
 11   142 dcl cobol_$compile_count fixed bin ext;
 11   143 dcl compile_count fixed bin defined (cobol_$compile_count);
 11   144 dcl cobol_$ptr_assumption_ind fixed bin ext;
 11   145 dcl ptr_assumption_ind fixed bin defined (cobol_$ptr_assumption_ind);
 11   146 dcl cobol_$reg_assumption_ind fixed bin ext;
 11   147 dcl reg_assumption_ind fixed bin defined (cobol_$reg_assumption_ind);
 11   148 dcl cobol_$perform_para_index fixed bin ext;
 11   149 dcl perform_para_index fixed bin defined (cobol_$perform_para_index);
 11   150 dcl cobol_$perform_sect_index fixed bin ext;
 11   151 dcl perform_sect_index fixed bin defined (cobol_$perform_sect_index);
 11   152 dcl cobol_$alter_index fixed bin ext;
 11   153 dcl alter_index fixed bin defined (cobol_$alter_index);
 11   154 dcl cobol_$list_off fixed bin ext;
 11   155 dcl list_off fixed bin defined (cobol_$list_off);
 11   156 dcl cobol_$constant_offset fixed bin ext;
 11   157 dcl constant_offset fixed bin defined (cobol_$constant_offset);
 11   158 dcl cobol_$misc_max fixed bin ext;
 11   159 dcl misc_max fixed bin defined (cobol_$misc_max);
 11   160 dcl cobol_$pd_map_max fixed bin ext;
 11   161 dcl pd_map_max fixed bin defined (cobol_$pd_map_max);
 11   162 dcl cobol_$map_data_max fixed bin ext;
 11   163 dcl map_data_max fixed bin defined (cobol_$map_data_max);
 11   164 dcl cobol_$fixup_max fixed bin ext;
 11   165 dcl fixup_max fixed bin defined (cobol_$fixup_max);
 11   166 dcl cobol_$tag_table_max fixed bin ext;
 11   167 dcl tag_table_max fixed bin defined (cobol_$tag_table_max);
 11   168 dcl cobol_$temp_token_max fixed bin ext;
 11   169 dcl temp_token_max fixed bin defined (cobol_$temp_token_max);
 11   170 dcl cobol_$allo1_max fixed bin ext;
 11   171 dcl allo1_max fixed bin defined (cobol_$allo1_max);
 11   172 dcl cobol_$eln_max fixed bin ext;
 11   173 dcl eln_max fixed bin defined (cobol_$eln_max);
 11   174 dcl cobol_$debug_enable fixed bin ext;
 11   175 dcl debug_enable fixed bin defined (cobol_$debug_enable);
 11   176 dcl cobol_$non_source_offset fixed bin ext;
 11   177 dcl non_source_offset fixed bin defined (cobol_$non_source_offset);
 11   178 dcl cobol_$initval_flag fixed bin ext;
 11   179 dcl initval_flag fixed bin defined (cobol_$initval_flag);
 11   180 dcl cobol_$date_compiled_sw fixed bin ext;
 11   181 dcl date_compiled_sw fixed bin defined (cobol_$date_compiled_sw);
 11   182 dcl cobol_$include_cnt fixed bin ext;
 11   183 dcl include_cnt fixed bin defined (cobol_$include_cnt);
 11   184 dcl cobol_$fs_charcnt fixed bin ext;
 11   185 dcl fs_charcnt fixed bin defined (cobol_$fs_charcnt);
 11   186 dcl cobol_$ws_charcnt fixed bin ext;
 11   187 dcl ws_charcnt fixed bin defined (cobol_$ws_charcnt);
 11   188 dcl cobol_$coms_charcnt fixed bin ext;
 11   189 dcl coms_charcnt fixed bin defined (cobol_$coms_charcnt);
 11   190 dcl cobol_$ls_charcnt fixed bin ext;
 11   191 dcl ls_charcnt fixed bin defined (cobol_$ls_charcnt);
 11   192 dcl cobol_$cons_charcnt fixed bin ext;
 11   193 dcl cons_charcnt fixed bin defined (cobol_$cons_charcnt);
 11   194 dcl cobol_$value_cnt fixed bin ext;
 11   195 dcl value_cnt fixed bin defined (cobol_$value_cnt);
 11   196 dcl cobol_$cd_cnt fixed bin ext;
 11   197 dcl cd_cnt fixed bin defined (cobol_$cd_cnt);
 11   198 dcl cobol_$fs_wdoff fixed bin ext;
 11   199 dcl fs_wdoff fixed bin defined (cobol_$fs_wdoff);
 11   200 dcl cobol_$ws_wdoff fixed bin ext;
 11   201 dcl ws_wdoff fixed bin defined (cobol_$ws_wdoff);
 11   202 dcl cobol_$coms_wdoff fixed bin ext;
 11   203 dcl coms_wdoff fixed bin defined (cobol_$coms_wdoff);
 11   204 
 11   205 /* CHARACTER */
 11   206 dcl cobol_$scratch_dir char (168)   aligned ext;
 11   207 dcl scratch_dir char (168)   aligned defined (cobol_$scratch_dir);			/* -42- */
 11   208 dcl cobol_$obj_seg_name char (32)   aligned ext;
 11   209 dcl obj_seg_name char (32)   aligned defined (cobol_$obj_seg_name);		/* -8- */
 11   210 
 11   211 /* BIT */
 11   212 dcl cobol_$xref_bypass bit(1) aligned ext;
 11   213 dcl xref_bypass bit(1) aligned defined (cobol_$xref_bypass);			/* -1- */
 11   214 dcl cobol_$same_sort_merge_proc bit(1) aligned ext;
 11   215 dcl same_sort_merge_proc bit(1) aligned defined (cobol_$same_sort_merge_proc);		/* -1- */
 11   216 
 11   217 
 11   218 /* END INCLUDE FILE ... cobol_incl.pl1*/
 11   219 
 11   220 
      729 
 12     1 
 12     2 /* BEGIN INCLUDE FILE ... cobol_type17.incl.pl1 */
 12     3 /* Last modified on 11/19/76 by ORN */
 12     4 
 12     5 /*
 12     6*A mnemonic name token is created for each user-defined mnemonic name
 12     7*specified in the special-names paragraph.
 12     8**/
 12     9 
 12    10 /* dcl name_ptr ptr;  */
 12    11 
 12    12 /* BEGIN DECLARATION OF TYPE17 (MNEMONIC NAME) TOKEN */
 12    13 dcl	1 mnemonic_name based (name_ptr),
 13     1 
 13     2 /* begin include file ... cobol_TYPE17.incl.pl1 */
 13     3 /* Last modified on 11/17/76 by ORN */
 13     4 
 13     5 		/* header */
 13     6 		2 size fixed bin,
 13     7 		2 line fixed bin,
 13     8 		2 column fixed bin,
 13     9 		2 type fixed bin,
 13    10 		/* body */
 13    11 		2 string_ptr ptr,
 13    12 		2 prev_rec ptr,
 13    13 		2 info bit(8),
 13    14 		2 class,
 13    15 		     3 switch_condition bit(1),
 13    16 		     3 switch_name bit(1),
 13    17 		     3 accept_device bit(1),
 13    18 		     3 display_device bit(1),
 13    19 		     3 printer_control bit(1),
 13    20 		     3 alphabet_name bit(1),
 13    21 		2 on_status bit(1),
 13    22 		2 off_status bit(1),
 13    23 		2 def_line fixed bin,
 13    24 		2 iw_key fixed bin,
 13    25 		2 reserved bit(36),
 13    26 		2 alphabet_offset fixed bin,
 13    27 		2 name_size fixed bin,
 13    28 		2 name char(0 refer (mnemonic_name.name_size));
 13    29 
 13    30 
 13    31 /* end include file ... cobol_TYPE17.incl.pl1 */
 13    32 
 12    14 
 12    15 /* END DECLARATION OF TYPE17 (MNEMONIC NAME) TOKEN */
 12    16 
 12    17 /* END INCLUDE FILE ... cobol_type17.incl.pl1 */
 12    18 
      730 
 14     1 
 14     2 /* BEGIN INCLUDE FILE ... cobol_reswd_values.incl.pl1 */
 14     3 /* CREATED ON 06/15/76 BY ORN */
 14     4 
 14     5 /* This include file contains the value associated with each reserved word
 14     6*   used by the Multics COBOL compiler.  These are declared as constants
 14     7*   and are not allocated unless referenced.  Eash name is in the form:
 14     8*
 14     9*	reswd_<reserved word name>
 14    10*     or
 14    11*	reschar_<special character name>
 14    12*
 14    13*   where <reserved word name> is the upper case transliteration of the
 14    14*   reserved word with any hyphens replaced by underscores and
 14    15*   <special character name> is the upper case name of the one
 14    16*   character reserved words (e.g. EQ, GT, MINUS, LPARENS, etc.)  */
 14    17 
 14    18 
 14    19 dcl reswd_ACCEPT		fixed bin static options(constant) init(001);
 14    20 dcl reswd_ADD		fixed bin static options(constant) init(002);
 14    21 dcl reswd_ERROR		fixed bin static options(constant) init(003);
 14    22 dcl reswd_ALTER		fixed bin static options(constant) init(004);
 14    23 dcl reswd_CALL		fixed bin static options(constant) init(005);
 14    24 dcl reswd_OVERFLOW		fixed bin static options(constant) init(006);
 14    25 dcl reswd_CANCEL		fixed bin static options(constant) init(007);
 14    26 dcl reswd_CLOSE		fixed bin static options(constant) init(008);
 14    27 dcl reswd_DIVIDE		fixed bin static options(constant) init(009);
 14    28 dcl reswd_MULTIPLY		fixed bin static options(constant) init(010);
 14    29 dcl reswd_SUBTRACT		fixed bin static options(constant) init(011);
 14    30 dcl reswd_EXIT		fixed bin static options(constant) init(012);
 14    31 dcl reswd_INITIALIZE	fixed bin static options(constant) init(013);
 14    32 dcl reswd_GO		fixed bin static options(constant) init(014);
 14    33 dcl reswd_MERGE		fixed bin static options(constant) init(015);
 14    34 dcl reswd_INITIATE		fixed bin static options(constant) init(016);
 14    35 dcl reswd_INSPECT		fixed bin static options(constant) init(017);
 14    36 dcl reswd_MOVE		fixed bin static options(constant) init(018);
 14    37 dcl reswd_OPEN		fixed bin static options(constant) init(019);
 14    38 dcl reswd_PERFORM		fixed bin static options(constant) init(020);
 14    39 dcl reswd_READ		fixed bin static options(constant) init(021);
 14    40 dcl reswd_DELETE		fixed bin static options(constant) init(022);
 14    41 dcl reswd_RECEIVE		fixed bin static options(constant) init(023);
 14    42 dcl reswd_RELEASE		fixed bin static options(constant) init(024);
 14    43 dcl reswd_RETURN		fixed bin static options(constant) init(025);
 14    44 dcl reswd_SEARCH		fixed bin static options(constant) init(026);
 14    45 dcl reswd_REWRITE		fixed bin static options(constant) init(027);
 14    46 /* 028 029 */
 14    47 dcl reswd_SEND		fixed bin static options(constant) init(030);
 14    48 dcl reswd_SET		fixed bin static options(constant) init(031);
 14    49 /* 032 */
 14    50 dcl reswd_STOP		fixed bin static options(constant) init(033);
 14    51 dcl reswd_STRING		fixed bin static options(constant) init(034);
 14    52 dcl reswd_SUSPEND		fixed bin static options(constant) init(035);
 14    53 dcl reswd_TERMINATE		fixed bin static options(constant) init(036);
 14    54 dcl reswd_UNSTRING		fixed bin static options(constant) init(037);
 14    55 dcl reswd_WRITE		fixed bin static options(constant) init(038);
 14    56 dcl reswd_USE		fixed bin static options(constant) init(039);
 14    57 dcl reswd_COMPUTE		fixed bin static options(constant) init(040);
 14    58 dcl reswd_DISABLE		fixed bin static options(constant) init(041);
 14    59 dcl reswd_DISPLAY		fixed bin static options(constant) init(042);
 14    60 dcl reswd_ENABLE		fixed bin static options(constant) init(043);
 14    61 dcl reswd_ENTER		fixed bin static options(constant) init(044);
 14    62 dcl reswd_GENERATE		fixed bin static options(constant) init(045);
 14    63 dcl reswd_HOLD		fixed bin static options(constant) init(046);
 14    64 dcl reswd_IF		fixed bin static options(constant) init(047);
 14    65 dcl reswd_PROCESS		fixed bin static options(constant) init(048);
 14    66 dcl reswd_SORT		fixed bin static options(constant) init(049);
 14    67 dcl reswd_EXAMINE		fixed bin static options(constant) init(050);
 14    68 dcl reswd_TRANSFORM		fixed bin static options(constant) init(051);
 14    69 /* 052 053 054 055 */
 14    70 dcl reswd_START		fixed bin static options(constant) init(056);
 14    71 dcl reswd_SUPPRESS		fixed bin static options(constant) init(057);
 14    72 dcl reswd_PURGE		fixed bin static options(constant) init(058);
 14    73 /* 059 060 061 062 063 064 065 066 067 068 069 070 */
 14    74 dcl reswd_ADVANCING		fixed bin static options(constant) init(071);
 14    75 dcl reswd_AFTER		fixed bin static options(constant) init(072);
 14    76 dcl reswd_ALL		fixed bin static options(constant) init(073);
 14    77 dcl reswd_ALPHABETIC	fixed bin static options(constant) init(074);
 14    78 dcl reswd_ALPHANUMERIC	fixed bin static options(constant) init(075);
 14    79 dcl reswd_ALPHANUMERIC_EDITED	fixed bin static options(constant) init(076);
 14    80 dcl reswd_AND		fixed bin static options(constant) init(077);
 14    81 dcl reswd_ASCENDING		fixed bin static options(constant) init(078);
 14    82 dcl reswd_AT		fixed bin static options(constant) init(079);
 14    83 dcl reswd_BEFORE		fixed bin static options(constant) init(080);
 14    84 dcl reswd_BEGINNING		fixed bin static options(constant) init(081);
 14    85 dcl reswd_BY		fixed bin static options(constant) init(082);
 14    86 dcl (reswd_CHARACTER,
 14    87      reswd_CHARACTERS)	fixed bin static options(constant) init(083);
 14    88 dcl reswd_COUNT		fixed bin static options(constant) init(084);
 14    89 dcl reswd_SSF		fixed bin static options(constant) init(085);
 14    90 dcl reswd_DATE		fixed bin static options(constant) init(086);
 14    91 dcl reswd_DAY		fixed bin static options(constant) init(087);
 14    92 dcl reswd_DEBUGGING		fixed bin static options(constant) init(088);
 14    93 dcl reswd_DECLARATIVES	fixed bin static options(constant) init(089);
 14    94 dcl reswd_DELIMITED		fixed bin static options(constant) init(090);
 14    95 dcl reswd_DELIMITER		fixed bin static options(constant) init(091);
 14    96 dcl reswd_DEPENDING		fixed bin static options(constant) init(092);
 14    97 dcl reswd_DESCENDING	fixed bin static options(constant) init(093);
 14    98 dcl reswd_DIVISION		fixed bin static options(constant) init(094);
 14    99 dcl reswd_DOWN		fixed bin static options(constant) init(095);
 14   100 dcl (reswd_ALSO,
 14   101      reswd_ELSE)		fixed bin static options(constant) init(096);
 14   102 dcl reswd_EMI		fixed bin static options(constant) init(097);
 14   103 dcl reswd_END		fixed bin static options(constant) init(098);
 14   104 dcl reswd_ENDING		fixed bin static options(constant) init(099);
 14   105 dcl (reswd_END_OF_PAGE,
 14   106      reswd_EOP)		fixed bin static options(constant) init(100);
 14   107 dcl reswd_IN		fixed bin static options(constant) init(101);
 14   108 dcl (reschar_EQ,
 14   109      reswd_EQUAL,
 14   110      reswd_EQUALS)		fixed bin static options(constant) init(102);
 14   111 /* 103 104 */
 14   112 dcl reswd_ESI		fixed bin static options(constant) init(105);
 14   113 dcl (reswd_COMP,
 14   114      reswd_COMPUTATIONAL)	fixed bin static options(constant) init(106);
 14   115 dcl reswd_EXCEPTION		fixed bin static options(constant) init(107);
 14   116 dcl reswd_FILE		fixed bin static options(constant) init(108);
 14   117 dcl reswd_FIRST		fixed bin static options(constant) init(109);
 14   118 dcl reswd_FOR		fixed bin static options(constant) init(110);
 14   119 dcl reswd_FROM		fixed bin static options(constant) init(111);
 14   120 dcl reswd_GIVING		fixed bin static options(constant) init(112);
 14   121 dcl (reschar_GT,
 14   122      reswd_EXCEEDS,
 14   123      reswd_GREATER)		fixed bin static options(constant) init(113);
 14   124 dcl reswd_INITIAL		fixed bin static options(constant) init(114);
 14   125 dcl reswd_INPUT		fixed bin static options(constant) init(115);
 14   126 dcl reswd_INTO		fixed bin static options(constant) init(116);
 14   127 dcl reswd_INVALID		fixed bin static options(constant) init(117);
 14   128 dcl (reswd_ARE,
 14   129      reswd_IS)		fixed bin static options(constant) init(118);
 14   130 dcl (reswd_I_O,
 14   131      reswd_INPUT_OUTPUT)	fixed bin static options(constant) init(119);
 14   132 dcl reswd_KEY		fixed bin static options(constant) init(120);
 14   133 dcl reswd_LABEL		fixed bin static options(constant) init(121);
 14   134 dcl reswd_LEADING		fixed bin static options(constant) init(122);
 14   135 dcl (reschar_LT,
 14   136      reswd_LESS)		fixed bin static options(constant) init(123);
 14   137 dcl (reswd_LINE,
 14   138      reswd_LINES)		fixed bin static options(constant) init(124);
 14   139 dcl reswd_LOCK		fixed bin static options(constant) init(125);
 14   140 dcl reswd_MESSAGE		fixed bin static options(constant) init(126);
 14   141 dcl reswd_NEGATIVE		fixed bin static options(constant) init(127);
 14   142 dcl reswd_NEXT		fixed bin static options(constant) init(128);
 14   143 dcl reswd_NO		fixed bin static options(constant) init(129);
 14   144 dcl reswd_NOT		fixed bin static options(constant) init(130);
 14   145 dcl reswd_NUMERIC		fixed bin static options(constant) init(131);
 14   146 dcl reswd_NUMERIC_EDITED	fixed bin static options(constant) init(132);
 14   147 dcl reswd_OF		fixed bin static options(constant) init(133);
 14   148 dcl reswd_ON		fixed bin static options(constant) init(134);
 14   149 dcl reswd_OR		fixed bin static options(constant) init(135);
 14   150 /* 136 */
 14   151 dcl reswd_OUTPUT		fixed bin static options(constant) init(137);
 14   152 dcl reswd_BOOLEAN		fixed bin static options(constant) init(138);
 14   153 dcl reswd_PAGE		fixed bin static options(constant) init(139);
 14   154 dcl reswd_POINTER		fixed bin static options(constant) init(140);
 14   155 dcl reswd_POSITIVE		fixed bin static options(constant) init(141);
 14   156 dcl reswd_PROCEDURE		fixed bin static options(constant) init(142);
 14   157 dcl reswd_PROCEDURES	fixed bin static options(constant) init(143);
 14   158 dcl reswd_PROCEED		fixed bin static options(constant) init(144);
 14   159 dcl reswd_PROCESSING	fixed bin static options(constant) init(145);
 14   160 dcl reswd_PROGRAM		fixed bin static options(constant) init(146);
 14   161 dcl reswd_RANDOM		fixed bin static options(constant) init(147);
 14   162 dcl reswd_RECORD		fixed bin static options(constant) init(148);
 14   163 dcl reswd_REEL		fixed bin static options(constant) init(149);
 14   164 dcl reswd_REFERENCES	fixed bin static options(constant) init(150);
 14   165 dcl reswd_REMAINDER		fixed bin static options(constant) init(151);
 14   166 dcl reswd_REPLACING		fixed bin static options(constant) init(152);
 14   167 dcl reswd_REPORTING		fixed bin static options(constant) init(153);
 14   168 dcl reswd_REVERSED		fixed bin static options(constant) init(154);
 14   169 dcl reswd_REWIND		fixed bin static options(constant) init(155);
 14   170 dcl reswd_ROUNDED		fixed bin static options(constant) init(156);
 14   171 dcl reswd_RUN		fixed bin static options(constant) init(157);
 14   172 dcl reswd_SECTION		fixed bin static options(constant) init(158);
 14   173 dcl reswd_SEGMENT		fixed bin static options(constant) init(159);
 14   174 dcl reswd_SENTENCE		fixed bin static options(constant) init(160);
 14   175 dcl reswd_SIZE		fixed bin static options(constant) init(161);
 14   176 dcl reswd_STANDARD		fixed bin static options(constant) init(162);
 14   177 dcl reswd_TALLYING		fixed bin static options(constant) init(163);
 14   178 dcl reswd_TERMINAL		fixed bin static options(constant) init(164);
 14   179 dcl reswd_THAN		fixed bin static options(constant) init(165);
 14   180 dcl (reswd_THROUGH,
 14   181      reswd_THRU)		fixed bin static options(constant) init(166);
 14   182 dcl reswd_RELATIVE		fixed bin static options(constant) init(167);
 14   183 dcl (reswd_TIME,
 14   184      reswd_TIMES)		fixed bin static options(constant) init(168);
 14   185 dcl reswd_DYNAMIC		fixed bin static options(constant) init(169);
 14   186 dcl reswd_TO		fixed bin static options(constant) init(170);
 14   187 dcl reswd_UNEQUAL		fixed bin static options(constant) init(171);
 14   188 dcl reswd_UNIT		fixed bin static options(constant) init(172);
 14   189 dcl reswd_UNTIL		fixed bin static options(constant) init(173);
 14   190 dcl reswd_UP		fixed bin static options(constant) init(174);
 14   191 dcl reswd_UPON		fixed bin static options(constant) init(175);
 14   192 dcl reswd_USING		fixed bin static options(constant) init(176);
 14   193 dcl reswd_VARYING		fixed bin static options(constant) init(177);
 14   194 dcl reswd_WHEN		fixed bin static options(constant) init(178);
 14   195 dcl reswd_WITH		fixed bin static options(constant) init(179);
 14   196 dcl (reswd_ZERO,
 14   197      reswd_ZEROES,
 14   198      reswd_ZEROS)		fixed bin static options(constant) init(180);
 14   199 dcl reswd_ORGANIZATION	fixed bin static options(constant) init(181);
 14   200 dcl reschar_PLUS		fixed bin static options(constant) init(182);
 14   201 dcl reschar_MINUS		fixed bin static options(constant) init(183);
 14   202 dcl reschar_STAR		fixed bin static options(constant) init(184);
 14   203 dcl reschar_SLASH		fixed bin static options(constant) init(185);
 14   204 dcl reschar_2STARs		fixed bin static options(constant) init(186);
 14   205 dcl reschar_LPARENS		fixed bin static options(constant) init(187);
 14   206 dcl reschar_RPARENS		fixed bin static options(constant) init(188);
 14   207 dcl reschar_PERIOD		fixed bin static options(constant) init(189);
 14   208 dcl reswd_TOP		fixed bin static options(constant) init(190);
 14   209 dcl reswd_COBOL		fixed bin static options(constant) init(191);
 14   210 dcl (reswd_SPACE,
 14   211      reswd_SPACES)		fixed bin static options(constant) init(192);
 14   212 dcl reswd_TALLY		fixed bin static options(constant) init(193);
 14   213 dcl (reswd_BIT,
 14   214      reswd_BITS)		fixed bin static options(constant) init(194);
 14   215 dcl reswd_RECORDS		fixed bin static options(constant) init(195);
 14   216 dcl reswd_DATA		fixed bin static options(constant) init(196);
 14   217 /* 197 198 199 */
 14   218 dcl reswd_VLR		fixed bin static options(constant) init(201);
 14   219 dcl (reswd_AREA,
 14   220      reswd_AREAS)		fixed bin static options(constant) init(202);
 14   221 dcl reswd_OMITTED		fixed bin static options(constant) init(203);
 14   222 dcl reswd_BLANK		fixed bin static options(constant) init(204);
 14   223 dcl reswd_BLOCK		fixed bin static options(constant) init(205);
 14   224 dcl reswd_CD		fixed bin static options(constant) init(206);
 14   225 dcl reswd_COMMUNICATION	fixed bin static options(constant) init(207);
 14   226 dcl reswd_STANDARD_2	fixed bin static options(constant) init(208);
 14   227 dcl (reswd_COMP_4,
 14   228      reswd_COMPUTATIONAL_4)	fixed bin static options(constant) init(209);
 14   229 dcl (reswd_COMP_5,
 14   230      reswd_COMPUTATIONAL_5)	fixed bin static options(constant) init(210);
 14   231 dcl (reswd_COMP_3,
 14   232      reswd_COMPUTATIONAL_3)	fixed bin static options(constant) init(211);
 14   233 dcl (reswd_COMP_1,
 14   234      reswd_COMPUTATIONAL_1)	fixed bin static options(constant) init(212);
 14   235 dcl (reswd_COMP_2,
 14   236      reswd_COMPUTATIONAL_2)	fixed bin static options(constant) init(213);
 14   237 dcl reswd_CONSTANT		fixed bin static options(constant) init(214);
 14   238 dcl reswd_CONTAINS		fixed bin static options(constant) init(215);
 14   239 dcl reswd_EXTEND		fixed bin static options(constant) init(216);
 14   240 /* 217 */
 14   241 dcl reswd_DESTINATION	fixed bin static options(constant) init(218);
 14   242 dcl reswd_FD		fixed bin static options(constant) init(219);
 14   243 dcl reswd_FILLER		fixed bin static options(constant) init(220);
 14   244 dcl (reswd_HIGH_VALUE,
 14   245      reswd_HIGH_VALUES)	fixed bin static options(constant) init(221);
 14   246 dcl reswd_INDEX		fixed bin static options(constant) init(222);
 14   247 dcl reswd_INDEXED		fixed bin static options(constant) init(223);
 14   248 dcl (reswd_JUST,
 14   249      reswd_JUSTIFIED)	fixed bin static options(constant) init(224);
 14   250 dcl reswd_LEFT		fixed bin static options(constant) init(225);
 14   251 dcl reswd_LENGTH		fixed bin static options(constant) init(226);
 14   252 dcl reswd_DUPLICATES	fixed bin static options(constant) init(227);
 14   253 dcl reswd_LINKAGE		fixed bin static options(constant) init(228);
 14   254 dcl (reswd_LOW_VALUE,
 14   255      reswd_LOW_VALUES)	fixed bin static options(constant) init(229);
 14   256 dcl reswd_MODE		fixed bin static options(constant) init(230);
 14   257 dcl reswd_OCCURS		fixed bin static options(constant) init(231);
 14   258 dcl (reswd_PIC,
 14   259      reswd_PICTURE)		fixed bin static options(constant) init(232);
 14   260 dcl reswd_EGI		fixed bin static options(constant) init(233);
 14   261 dcl reswd_QUEUE		fixed bin static options(constant) init(234);
 14   262 dcl (reswd_QUOTE,
 14   263      reswd_QUOTES)		fixed bin static options(constant) init(235);
 14   264 dcl reswd_BOTTOM		fixed bin static options(constant) init(236);
 14   265 dcl reswd_RECORDING		fixed bin static options(constant) init(237);
 14   266 dcl reswd_REDEFINES		fixed bin static options(constant) init(238);
 14   267 dcl reswd_RENAMES		fixed bin static options(constant) init(239);
 14   268 dcl (reswd_REPORT,
 14   269      reswd_REPORTS)		fixed bin static options(constant) init(240);
 14   270 dcl reswd_RIGHT		fixed bin static options(constant) init(241);
 14   271 dcl reswd_SA		fixed bin static options(constant) init(242);
 14   272 dcl reswd_SD		fixed bin static options(constant) init(243);
 14   273 dcl reswd_SEPARATE		fixed bin static options(constant) init(244);
 14   274 dcl reswd_SIGN		fixed bin static options(constant) init(245);
 14   275 dcl reswd_SOURCE		fixed bin static options(constant) init(246);
 14   276 dcl reswd_STATUS		fixed bin static options(constant) init(247);
 14   277 dcl reswd_SUB_QUEUE_1	fixed bin static options(constant) init(248);
 14   278 dcl reswd_SUB_QUEUE_2	fixed bin static options(constant) init(249);
 14   279 dcl reswd_SUB_QUEUE_3	fixed bin static options(constant) init(250);
 14   280 dcl reswd_SYMBOLIC		fixed bin static options(constant) init(251);
 14   281 dcl (reswd_SYNC,
 14   282      reswd_SYNCHRONIZED)	fixed bin static options(constant) init(252);
 14   283 dcl reswd_TABLE		fixed bin static options(constant) init(253);
 14   284 /* 254 */
 14   285 dcl reswd_TRAILING		fixed bin static options(constant) init(255);
 14   286 dcl reschar_2EQs		fixed bin static options(constant) init(256);
 14   287 dcl reswd_USAGE		fixed bin static options(constant) init(257);
 14   288 dcl (reswd_VALUE,
 14   289      reswd_VALUES)		fixed bin static options(constant) init(258);
 14   290 dcl reswd_WORKING_STORAGE	fixed bin static options(constant) init(259);
 14   291 dcl reswd_REMOVAL		fixed bin static options(constant) init(260);
 14   292 /* 261 */
 14   293 /* (262 263 264 265) */
 14   294 /* 266 */
 14   295 /* (267 268 269 270 271) */
 14   296 dcl reswd_FLR		fixed bin static options(constant) init(272);
 14   297 /* 273 274 275 276 277 */
 14   298 /* (278) */
 14   299 dcl reswd_FILES		fixed bin static options(constant) init(279);
 14   300 /* 280 281 282 283 284 285 */
 14   301 /* (286) */
 14   302 /* 287 */
 14   303 dcl reswd_NATIVE		fixed bin static options(constant) init(288);
 14   304 /* 289 */
 14   305 dcl (reswd_COMP_7,
 14   306      reswd_COMPUTATIONAL_7)	fixed bin static options(constant) init(290);
 14   307 dcl reswd_OBJECT		fixed bin static options(constant) init(291);
 14   308 dcl (reswd_COMP_6,
 14   309      reswd_COMPUTATIONAL_6)	fixed bin static options(constant) init(292);
 14   310 /* (293) */
 14   311 /* 294 */
 14   312 dcl reswd_DEFAULT		fixed bin static options(constant) init(295);
 14   313 /* 296 207 298 299 300 301 302 303 304 305 */
 14   314 dcl reswd_CODE_SET		fixed bin static options(constant) init(306);
 14   315 dcl reswd_EXTERNAL		fixed bin static options(constant) init(307);
 14   316 /* 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 */
 14   317 dcl reswd_DAY_OF_WEEK	fixed bin static options(constant) init(326);
 14   318 dcl reswd_INTERCHANGE	fixed bin static options(constant) init(327);
 14   319 /* 328 */
 14   320 dcl reswd_PROCESS_AREA	fixed bin static options(constant) init(329);
 14   321 /* 330 */
 14   322 dcl (reswd_CATALOG_NAME,
 14   323      reswd_CATALOGUE_NAME)	fixed bin static options(constant) init(331);
 14   324 /* 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 */
 14   325 /* 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 */
 14   326 /* 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 */
 14   327 /* 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 */
 14   328 dcl reswd_STREAM		fixed bin static options(constant) init(407);
 14   329 /* 408 409 410 411 412 413 */
 14   330 dcl reswd_BSN		fixed bin static options(constant) init(413);
 14   331 /* 414 415 */
 14   332 dcl reswd_KEYED		fixed bin static options(constant) init(416);
 14   333 /* 417 418 419 420 421 422 */
 14   334 dcl reswd_IDS_II		fixed bin static options(constant) init(423);
 14   335 /* 424 */
 14   336 dcl reswd_REPLACE		fixed bin static options(constant) init(425);
 14   337 /* 426 427 428 429 430 431 432 433 434 */
 14   338 dcl reswd_SUBSTITUTION	fixed bin static options(constant) init(435);
 14   339 /* 436 437 438 439 440 441 442 443 444 445 446 447 448 449 */
 14   340 /* 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 */
 14   341 /* 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 */
 14   342 /* 490 491 492 493 494 495 496 497 498 499 500 */
 14   343 dcl reswd_ACCESS		fixed bin static options(constant) init(501);
 14   344 /* 502 */
 14   345 dcl reswd_ADDRESS		fixed bin static options(constant) init(503);
 14   346 dcl reswd_ALPHABET		fixed bin static options(constant) init(504);
 14   347 dcl reswd_STANDARD_1	fixed bin static options(constant) init(505);
 14   348 /* 506 */
 14   349 dcl reswd_ALTERNATE		fixed bin static options(constant) init(507);
 14   350 dcl reswd_APPLY		fixed bin static options(constant) init(508);
 14   351 dcl reswd_ASSIGN		fixed bin static options(constant) init(509);
 14   352 dcl reswd_AUTHOR		fixed bin static options(constant) init(510);
 14   353 dcl reswd_CF		fixed bin static options(constant) init(511);
 14   354 dcl reswd_CH		fixed bin static options(constant) init(512);
 14   355 dcl reswd_CLOCK_UNITS	fixed bin static options(constant) init(513);
 14   356 dcl reswd_CODE		fixed bin static options(constant) init(514);
 14   357 dcl reswd_COLLATING		fixed bin static options(constant) init(515);
 14   358 dcl reswd_COLUMN		fixed bin static options(constant) init(516);
 14   359 dcl reswd_COMMA		fixed bin static options(constant) init(517);
 14   360 dcl reswd_CONFIGURATION	fixed bin static options(constant) init(518);
 14   361 dcl reswd_CONVERSION	fixed bin static options(constant) init(519);
 14   362 dcl reswd_CONTROL		fixed bin static options(constant) init(520);
 14   363 dcl reswd_CONTROLS		fixed bin static options(constant) init(521);
 14   364 dcl reswd_COPY		fixed bin static options(constant) init(522);
 14   365 dcl (reswd_CORR,
 14   366      reswd_CORRESPONDING)	fixed bin static options(constant) init(524);
 14   367 dcl reswd_CURRENCY		fixed bin static options(constant) init(525);
 14   368 /* 526 */
 14   369 dcl reswd_DATE_COMPILED	fixed bin static options(constant) init(527);
 14   370 dcl reswd_DATE_WRITTEN	fixed bin static options(constant) init(528);
 14   371 dcl reswd_DE		fixed bin static options(constant) init(529);
 14   372 dcl reswd_DEBUG_CONTENTS	fixed bin static options(constant) init(530);
 14   373 dcl reswd_DEBUG_ITEM	fixed bin static options(constant) init(531);
 14   374 dcl reswd_DEBUG_LINE	fixed bin static options(constant) init(532);
 14   375 dcl reswd_DEBUG_SUB_1	fixed bin static options(constant) init(533);
 14   376 dcl reswd_DEBUG_SUB_2	fixed bin static options(constant) init(534);
 14   377 dcl reswd_DEBUG_SUB_3	fixed bin static options(constant) init(535);
 14   378 /* 536 */
 14   379 dcl reswd_DEBUG_NAME	fixed bin static options(constant) init(537);
 14   380 dcl reswd_DECIMAL_POINT	fixed bin static options(constant) init(538);
 14   381 dcl reswd_DETAIL		fixed bin static options(constant) init(539);
 14   382 dcl reswd_ENVIRONMENT	fixed bin static options(constant) init(540);
 14   383 /* 541 */
 14   384 dcl reswd_EVERY		fixed bin static options(constant) init(542);
 14   385 dcl reswd_FILE_CONTROL	fixed bin static options(constant) init(543);
 14   386 /* 544 545 */
 14   387 dcl reswd_FINAL		fixed bin static options(constant) init(546);
 14   388 dcl reswd_FOOTING		fixed bin static options(constant) init(547);
 14   389 dcl reswd_HEADING		fixed bin static options(constant) init(548);
 14   390 dcl reswd_GROUP		fixed bin static options(constant) init(549);
 14   391 /* 550 */
 14   392 dcl reswd_I_O_CONTROL	fixed bin static options(constant) init(551);
 14   393 dcl reswd_IDENTIFICATION	fixed bin static options(constant) init(552);
 14   394 dcl reswd_INDICATE		fixed bin static options(constant) init(553);
 14   395 dcl reswd_INSTALLATION	fixed bin static options(constant) init(554);
 14   396 /* 555 */
 14   397 dcl reswd_LAST		fixed bin static options(constant) init(556);
 14   398 /* 557 558 */
 14   399 dcl reswd_PRINTING		fixed bin static options(constant) init(559);
 14   400 /* 560 */
 14   401 dcl reswd_LIMIT		fixed bin static options(constant) init(561);
 14   402 dcl reswd_LIMITS		fixed bin static options(constant) init(562);
 14   403 dcl reswd_LINAGE		fixed bin static options(constant) init(563);
 14   404 dcl reswd_LINAGE_COUNTER	fixed bin static options(constant) init(564);
 14   405 dcl reswd_LINE_COUNTER	fixed bin static options(constant) init(565);
 14   406 /* 566 567 */
 14   407 dcl reswd_MEMORY		fixed bin static options(constant) init(568);
 14   408 dcl reswd_MODULES		fixed bin static options(constant) init(569);
 14   409 dcl reswd_MULTIPLE		fixed bin static options(constant) init(570);
 14   410 dcl reswd_NUMBER		fixed bin static options(constant) init(571);
 14   411 dcl reswd_OBJECT_COMPUTER	fixed bin static options(constant) init(572);
 14   412 /* 573 */
 14   413 dcl reswd_OFF		fixed bin static options(constant) init(574);
 14   414 /* 575 */
 14   415 dcl reswd_OPTIONAL		fixed bin static options(constant) init(576);
 14   416 /* 577 */
 14   417 dcl reswd_PAGE_COUNTER	fixed bin static options(constant) init(578);
 14   418 dcl reswd_PF		fixed bin static options(constant) init(579);
 14   419 dcl reswd_PH		fixed bin static options(constant) init(580);
 14   420 dcl reswd_PLUS		fixed bin static options(constant) init(581);
 14   421 dcl reswd_POSITION		fixed bin static options(constant) init(582);
 14   422 dcl reswd_PROGRAM_ID	fixed bin static options(constant) init(583);
 14   423 dcl reswd_RD		fixed bin static options(constant) init(584);
 14   424 /* 585 586 */
 14   425 dcl reswd_SEQUENCE		fixed bin static options(constant) init(587);
 14   426 dcl reswd_RERUN		fixed bin static options(constant) init(588);
 14   427 dcl reswd_RESERVE		fixed bin static options(constant) init(589);
 14   428 dcl reswd_RESET		fixed bin static options(constant) init(590);
 14   429 dcl reswd_RF		fixed bin static options(constant) init(591);
 14   430 dcl reswd_RH		fixed bin static options(constant) init(592);
 14   431 dcl reswd_SAME		fixed bin static options(constant) init(593);
 14   432 dcl reswd_SECURITY		fixed bin static options(constant) init(594);
 14   433 dcl reswd_SEGMENT_LIMIT	fixed bin static options(constant) init(595);
 14   434 dcl reswd_SELECT		fixed bin static options(constant) init(596);
 14   435 dcl reswd_SEQUENTIAL	fixed bin static options(constant) init(597);
 14   436 dcl reswd_SORT_MERGE	fixed bin static options(constant) init(598);
 14   437 dcl reswd_SOURCE_COMPUTER	fixed bin static options(constant) init(599);
 14   438 dcl reswd_SPECIAL_NAMES	fixed bin static options(constant) init(600);
 14   439 dcl reswd_SPANNED		fixed bin static options(constant) init(601);
 14   440 /* (602) */
 14   441 dcl reswd_SUM		fixed bin static options(constant) init(603);
 14   442 dcl reswd_EXOR		fixed bin static options(constant) init(604);
 14   443 /* 605 */
 14   444 dcl reswd_TAPE		fixed bin static options(constant) init(606);
 14   445 dcl reswd_TEXT		fixed bin static options(constant) init(607);
 14   446 dcl reswd_TYPE		fixed bin static options(constant) init(608);
 14   447 dcl reswd_WORDS		fixed bin static options(constant) init(609);
 14   448 dcl (reswd_COMP_8,
 14   449      reswd_COMPUTATIONAL_8)	fixed bin static options(constant) init(610);
 14   450 /* DATABASE WORDS
 14   451*dcl reswd_ALIAS		fixed bin static options(constant) init(263);
 14   452*dcl reswd_ALIGN		fixed bin static options(constant) init(278);
 14   453*dcl reswd_ALTERING		fixed bin static options(constant) init(268);
 14   454*dcl reswd_BECOMES		fixed bin static options(constant) init(267);
 14   455*dcl reswd_CHECK		fixed bin static options(constant) init(264);
 14   456*dcl reswd_INVOKING		fixed bin static options(constant) init(269);
 14   457*dcl reswd_KEY_LOCATION	fixed bin static options(constant) init(286);
 14   458*dcl reswd_LOCKS		fixed bin static options(constant) init(125);
 14   459*dcl reswd_PREFIX		fixed bin static options(constant) init(293);
 14   460*dcl reswd_REALM		fixed bin static options(constant) init(265);
 14   461*dcl reswd_REALM_ID		fixed bin static options(constant) init(270);
 14   462*dcl reswd_SELECTION		fixed bin static options(constant) init(271);
 14   463*dcl reswd_SYMBOLS		fixed bin static options(constant) init(602);
 14   464*dcl reswd_VIA		fixed bin static options(constant) init(262);
 14   465*END DATABASE WORDS */
 14   466 
 14   467 
 14   468 /* END INCLUDE FILE ... cobol_reswd_values.incl.pl1 */
 14   469 
      731 
      732 
      733      end cobol_linage;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/24/89  0830.7  cobol_linage.pl1                  >spec>install>MR12.3-1048>cobol_linage.pl1
723          1    03/27/82  0439.7  cobol_error_info.incl.pl1         >ldd>include>cobol_error_info.incl.pl1
724          2    03/27/82  0439.8  cobol_type1.incl.pl1              >ldd>include>cobol_type1.incl.pl1
2-15         3    11/11/82  1712.8  cobol_TYPE1.incl.pl1              >ldd>include>cobol_TYPE1.incl.pl1
725          4    03/27/82  0439.8  cobol_type2.incl.pl1              >ldd>include>cobol_type2.incl.pl1
4-15         5    11/11/82  1712.8  cobol_TYPE2.incl.pl1              >ldd>include>cobol_TYPE2.incl.pl1
726          6    03/27/82  0439.9  cobol_type9.incl.pl1              >ldd>include>cobol_type9.incl.pl1
6-17         7    11/11/82  1712.7  cobol_TYPE9.incl.pl1              >ldd>include>cobol_TYPE9.incl.pl1
727          8    03/27/82  0439.8  cobol_type19.incl.pl1             >ldd>include>cobol_type19.incl.pl1
8-17         9    03/27/82  0439.6  cobol_TYPE19.incl.pl1             >ldd>include>cobol_TYPE19.incl.pl1
728         10    11/11/82  1712.7  cobol_file_table.incl.pl1         >ldd>include>cobol_file_table.incl.pl1
729         11    11/11/82  1712.7  cobol_.incl.pl1                   >ldd>include>cobol_.incl.pl1
730         12    03/27/82  0439.8  cobol_type17.incl.pl1             >ldd>include>cobol_type17.incl.pl1
12-14       13    11/11/82  1712.8  cobol_TYPE17.incl.pl1             >ldd>include>cobol_TYPE17.incl.pl1
731         14    03/27/82  0439.8  cobol_reswd_values.incl.pl1       >ldd>include>cobol_reswd_values.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 718 ref 189 190 191 212 493 493 505 505 514 514
                                                                                  518 518 534 534 551 551 630 630 665 665 710 710
adq                                    constant        bit(12)                  initial packed unaligned dcl 51 ref 454 645 660
advancing_error                 000040 internal static fixed bin(17,0)          initial dcl 130 set ref 552*
anum                            000145 automatic       fixed bin(17,0)          dcl 140 set ref 201* 233* 311* 313 337* 342* 347*
                                                                                  357* 384 417 421* 428 450 453 478 487 494 494 500
                                                                                  501 522
aos                                    constant        bit(12)                  initial packed unaligned dcl 49 ref 620 686
avalue                          000150 automatic       bit(18)                  dcl 143 set ref 232* 309* 346* 356* 423* 425* 482
ba_sw                           000146 automatic       fixed bin(17,0)          dcl 141 set ref 259* 322* 587
bnum                            000144 automatic       fixed bin(17,0)          dcl 139 set ref 201* 227* 246* 248 274* 279* 284*
                                                                                  294* 384 395 398 400* 400 400 402* 402 402 434 468
                                                                                  522
buf_off                                parameter       fixed bin(17,0)          dcl 38 set ref 27 196* 198* 398 400 402 438 464 468
                                                                                  610 636 668 685
buflen_off                             parameter       fixed bin(17,0)          dcl 37 ref 27 204 376 404 412 444 454 524 530 532
                                                                                  557 575 595 600 620 645 655 659 671 686
bvalue                          000147 automatic       bit(18)                  dcl 142 set ref 226* 251* 283* 293* 398*
chan_no                         000133 automatic       fixed bin(17,0)          dcl 124 set ref 270* 272 272 275 277 277 280 333*
                                                                                  335 335 338 340 340 343
cobol_$next_tag                 000110 external static fixed bin(17,0)          dcl 11-128 set ref 192 193* 193
cobol_$text_base_ptr            000104 external static pointer                  dcl 11-8 ref 564
cobol_$text_wd_off              000106 external static fixed bin(17,0)          dcl 11-90 ref 498 545 549 558 563
cobol_addr                      000066 constant        entry                    external dcl 161 ref 471 630 665
cobol_alloc$stack               000062 constant        entry                    external dcl 159 ref 196 198
cobol_call_op                   000050 constant        entry                    external dcl 152 ref 386 581
cobol_define_tag                000042 constant        entry                    external dcl 149 ref 388 583
cobol_emit                      000064 constant        entry                    external dcl 160 ref 406 414 441 447 456 493 505 514
                                                                                  518 534 551 561 572 603 615 624 648 673 689
cobol_gen_ioerror               000052 constant        entry                    external dcl 153 ref 387 582
cobol_io_util$fixed_add         000074 constant        entry                    external dcl 165 ref 524
cobol_io_util$move_direct       000072 constant        entry                    external dcl 163 ref 398
cobol_io_util$move_lit          000076 constant        entry                    external dcl 167 ref 400 402
cobol_io_util$t9dec_to_bin      000100 constant        entry                    external dcl 169 ref 547
cobol_ioerror_abort             000102 constant        entry                    external dcl 171 ref 552
cobol_ioop_util$set_value       000056 constant        entry                    external dcl 156 ref 381 384
cobol_ioop_util$set_var_adv     000054 constant        entry                    external dcl 154 ref 579
cobol_pool                      000044 constant        entry                    external dcl 150 ref 494
cobol_set_pr                    000046 constant        entry                    external dcl 151 ref 379 578
convert_no                      000003 constant        char(2)                  initial array packed unaligned dcl 125 ref 275 338
convert_no1                     000000 constant        char(1)                  initial array packed unaligned dcl 126 ref 280 343
d                        11(05)        based           bit(2)                   level 2 packed packed unaligned dcl 8-16 ref 218 240
data_name                              based           structure                level 1 unaligned dcl 6-16
device                   47            based           fixed bin(17,0)          level 2 dcl 10-25 ref 223 417 617 638 675
dn_ptr                          000134 automatic       pointer                  dcl 133 set ref 181* 196 198 212 212 212* 243 246
                                                                                  256 264 264 267 267 270 306 311 319 327 327 330
                                                                                  330 333 400 450 487 703
dn_ptr_linage                   000136 automatic       pointer                  dcl 135 set ref 182* 221* 379* 578*
end_stmt                               based           structure                level 1 unaligned dcl 8-16
eos_ptr                         000226 automatic       pointer                  dcl 8-13 set ref 183* 218 240
error_info                      000155 automatic       structure                level 1 unaligned dcl 1-5 set ref 710 710
file_table                             based           structure                level 1 unaligned dcl 10-25
fixed                                                  builtin function         dcl 718 ref 246 311
ft_ptr                                 parameter       pointer                  dcl 33 set ref 27 186 223 267 290 330 353 376 387*
                                                                                  409 417 423 431 461 507 524 566 575 582* 591 617
                                                                                  638 653 675
good_tag                        000104 automatic       fixed bin(17,0)          dcl 35 set ref 192* 386* 388* 581* 583*
instr                           000125 automatic       bit(36)                  array packed unaligned dcl 119 set ref 189 404* 412*
                                                                                  437* 439* 445* 453* 454* 463* 467* 473* 474* 475*
                                                                                  476* 478* 478 482* 483* 490* 491* 493 493 496*
                                                                                  497* 499* 500* 501* 505 505 510* 511* 512* 514 514
                                                                                  516* 518 518 530* 532* 534 534 557* 559* 598* 600*
                                                                                  608* 609* 610* 613* 620* 621* 621 628* 630 630
                                                                                  632* 634* 636* 638* 641* 644* 645* 646* 646 656*
                                                                                  660* 663* 665 665 667* 668* 669* 670* 671* 678*
                                                                                  679* 681* 682* 684* 685* 686*
instr_ptr                       000140 automatic       pointer                  dcl 136 set ref 189* 406* 414* 441* 447* 456* 471*
                                                                                  561* 572* 603* 615* 624* 648* 673* 689*
ioa_$rsnnl                      000070 constant        entry                    external dcl 162 ref 698 703
ioerror_ptr                            parameter       pointer                  dcl 31 set ref 27 387* 582*
item_length              16            based           fixed bin(24,0)          level 2 dcl 6-16 ref 198
iw_key                   12            based           fixed bin(17,0)          level 2 dcl 12-13 ref 270 333
key                       4            based           fixed bin(17,0)          level 2 dcl 2-14 ref 212
lda                                    constant        bit(12)                  initial packed unaligned dcl 53 ref 404 412 532 557
ldq                                    constant        bit(12)                  initial packed unaligned dcl 54 ref 445 598 656
ldq_dlmod                              constant        bit(18)                  initial packed unaligned dcl 57 ref 453
ldq_dumod                              constant        bit(18)                  initial packed unaligned dcl 58 ref 437
len_off                         003115 constant        fixed bin(17,0)          initial dcl 131 ref 547 678
linage                   33(34)        based           bit(1)                   level 2 packed packed unaligned dcl 10-25 ref 267
                                                                                  290 330 353 376 423 431 461 507 524 575 591 653
linage_before                   000105 automatic       bit(1)                   packed unaligned dcl 44 set ref 179* 304* 461 507
line                      1            based           fixed bin(17,0)          level 2 dcl 2-14 set ref 552* 698* 703*
literal                  11            based           char                     level 2 packed packed unaligned dcl 4-14 set ref 246
                                                                                  311 703*
lock                      2     000106 automatic       fixed bin(17,0)          initial level 2 dcl 87 set ref 87*
lxl5                                   constant        bit(12)                  initial packed unaligned dcl 50 ref 621
message                  11     000155 automatic       char(128)                level 2 packed packed unaligned dcl 1-5 set ref 698*
                                                                                  703*
message_len              10     000155 automatic       fixed bin(17,0)          level 2 dcl 1-5 set ref 698* 703*
mlr                                    constant        bit(36)                  initial packed unaligned dcl 46 ref 467 608 628 663
                                                                                  681
mlr_q                           000007 constant        bit(36)                  initial packed unaligned dcl 47 ref 510
mlr_struct                      000106 automatic       structure                level 1 unaligned dcl 87 set ref 190
mlr_struct_ptr                  000142 automatic       pointer                  dcl 137 set ref 190* 471* 630* 665*
mnemonic_name                          based           structure                level 1 unaligned dcl 12-13
mp                                     based           structure                level 1 unaligned dcl 40
mp_ptr                                 parameter       pointer                  dcl 34 ref 27 181 181 182 182 183 183 184 186 221
                                                                                  221 547 547 552 698 703
mrl                                    constant        bit(36)                  initial packed unaligned dcl 45 ref 463
n                                      based           fixed bin(17,0)          level 2 dcl 40 ref 181 182 183 221 547
name                            000155 automatic       char(32)                 level 2 packed packed unaligned dcl 1-5 set ref 708*
nls                             003116 constant        char(120)                initial packed unaligned dcl 128 ref 402 402
null                                                   builtin function         dcl 718 ref 87 406 406 414 414 441 441 447 447 456
                                                                                  456 471 471 493 493 505 505 514 514 518 518 534
                                                                                  534 551 551 561 561 572 572 603 603 615 615 624
                                                                                  624 630 630 648 648 665 665 673 673 689 689 710
                                                                                  710
num_check_instr                 000010 internal static bit(36)                  initial array packed unaligned dcl 61 set ref 551
                                                                                  551
numeric_lit                            based           structure                level 1 unaligned dcl 4-14
operand1                  4     000106 automatic       structure                level 2 unaligned dcl 87
operand2                 12     000106 automatic       structure                level 2 unaligned dcl 87
operand_no                1     000106 automatic       fixed bin(17,0)          initial level 2 dcl 87 set ref 87*
page_sw                         000100 automatic       bit(1)                   initial packed unaligned dcl 30 set ref 30* 295*
                                                                                  358* 381
patch_ic                        000154 automatic       fixed bin(17,0)          dcl 147 set ref 549* 563 564
places                   10            based           fixed bin(17,0)          level 2 dcl 4-14 ref 246 311 703 703
pr5_struct                      000014 internal static structure                level 1 unaligned dcl 79 set ref 191
pr5_struct_ptr                  000102 automatic       pointer                  dcl 32 set ref 191* 379* 578*
pr_ctl                          000036 internal static char(5)                  initial packed unaligned dcl 123 set ref 275* 280*
                                                                                  338* 343* 400 400 494 494
pt                        2            based           pointer                  array level 2 dcl 40 set ref 181 182 183 184 186 221
                                                                                  547* 552 698 703
rec_do                   33(33)        based           bit(1)                   level 2 packed packed unaligned dcl 10-25 ref 409
                                                                                  566
reserved_word                          based           structure                level 1 unaligned dcl 2-14
restartad                       000153 automatic       fixed bin(17,0)          dcl 146 set ref 545* 552* 558
reswd_ZERO                             constant        fixed bin(17,0)          initial dcl 14-196 ref 212
sbq                                    constant        bit(12)                  initial packed unaligned dcl 55 ref 600
send_receive              6     000106 automatic       fixed bin(17,0)          initial level 3 dcl 87 set ref 87*
signal_                         000060 constant        entry                    external dcl 158 ref 710
size_sw                  10     000106 automatic       fixed bin(17,0)          initial level 3 dcl 87 set ref 87*
stq                                    constant        bit(12)                  initial packed unaligned dcl 52 ref 439 530 646 671
substr                                                 builtin function         dcl 718 set ref 275* 280* 338* 343* 400 400 402 402
                                                                                  404 412 437 439 445 453 454 473* 473 474* 475*
                                                                                  476* 478* 478 482* 483* 490* 491* 494 494 496*
                                                                                  497* 499* 499 500* 500 501* 501 512* 530 532 557
                                                                                  559 564* 564 598 600 610 613* 620 621 632* 634*
                                                                                  636 638* 641* 644* 645 646 656 660 667* 668 669*
                                                                                  670* 671 678 682* 685 686
szn                                    constant        bit(12)                  initial packed unaligned dcl 48 ref 678
temp                            000151 automatic       fixed bin(17,0)          dcl 144 set ref 436* 437 438* 439 444* 445 464* 468*
                                                                                  473 494* 498* 498 499 522* 524 524* 527 595* 598
text                                   based           bit(36)                  array packed unaligned dcl 120 set ref 564*
tnz_icmod                              constant        bit(18)                  initial packed unaligned dcl 60 ref 679
token_ptr                 4     000106 automatic       pointer                  level 3 in structure "mlr_struct" dcl 87
                                                                                  in procedure "cobol_linage" set ref 184*
token_ptr                12     000106 automatic       pointer                  initial level 3 in structure "mlr_struct" dcl 87
                                                                                  in procedure "cobol_linage" set ref 87*
tra_icmod                              constant        bit(18)                  initial packed unaligned dcl 59 ref 559
type                      3            based           fixed bin(17,0)          level 2 in structure "data_name" dcl 6-16
                                                                                  in procedure "cobol_linage" ref 196 212 243 256
                                                                                  264 264 267 267 306 319 327 327 330 330 400 450
                                                                                  487
type                            000106 automatic       fixed bin(17,0)          initial level 2 in structure "mlr_struct" dcl 87
                                                                                  in procedure "cobol_linage" set ref 87*
unspec                                                 builtin function         dcl 718 ref 404 412 437 439 445 453 454 473 499 500
                                                                                  501 530 532 557 559 564 598 600 610 620 636 645
                                                                                  656 660 668 671 678 685 686
utemp                           000152 automatic       fixed bin(17,0)          dcl 145 set ref 558* 559 563* 564 655* 656 659* 660
variable                101(01)        based           bit(1)                   level 2 packed packed unaligned dcl 10-25 ref 186
variable_length          22(04)        based           bit(1)                   level 2 packed packed unaligned dcl 6-16 set ref
                                                                                  186*
zero_token                      000023 internal static structure                level 1 unaligned dcl 102 set ref 212

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
addrel                                                 builtin function         dcl 718
adq_dlmod                              internal static bit(18)                  initial packed unaligned dcl 56
advancing_count                        automatic       fixed bin(17,0)          dcl 36
allo1_max                              defined         fixed bin(17,0)          dcl 11-171
allo1_ptr                              defined         pointer                  dcl 11-67
alter_flag                             defined         fixed bin(17,0)          dcl 11-135
alter_index                            defined         fixed bin(17,0)          dcl 11-153
alter_list_ptr                         defined         pointer                  dcl 11-39
binary                                                 builtin function         dcl 718
cd_cnt                                 defined         fixed bin(17,0)          dcl 11-197
cobol_$allo1_max                       external static fixed bin(17,0)          dcl 11-170
cobol_$allo1_ptr                       external static pointer                  dcl 11-66
cobol_$alter_flag                      external static fixed bin(17,0)          dcl 11-134
cobol_$alter_index                     external static fixed bin(17,0)          dcl 11-152
cobol_$alter_list_ptr                  external static pointer                  dcl 11-38
cobol_$cd_cnt                          external static fixed bin(17,0)          dcl 11-196
cobol_$cobol_data_wd_off               external static fixed bin(17,0)          dcl 11-118
cobol_$compile_count                   external static fixed bin(17,0)          dcl 11-142
cobol_$coms_charcnt                    external static fixed bin(17,0)          dcl 11-188
cobol_$coms_wdoff                      external static fixed bin(17,0)          dcl 11-202
cobol_$con_end_ptr                     external static pointer                  dcl 11-10
cobol_$con_wd_off                      external static fixed bin(17,0)          dcl 11-92
cobol_$cons_charcnt                    external static fixed bin(17,0)          dcl 11-192
cobol_$constant_offset                 external static fixed bin(17,0)          dcl 11-156
cobol_$data_init_flag                  external static fixed bin(17,0)          dcl 11-130
cobol_$date_compiled_sw                external static fixed bin(17,0)          dcl 11-180
cobol_$debug_enable                    external static fixed bin(17,0)          dcl 11-174
cobol_$def_base_ptr                    external static pointer                  dcl 11-12
cobol_$def_max                         external static fixed bin(17,0)          dcl 11-96
cobol_$def_wd_off                      external static fixed bin(17,0)          dcl 11-94
cobol_$diag_ptr                        external static pointer                  dcl 11-70
cobol_$eln_max                         external static fixed bin(17,0)          dcl 11-172
cobol_$eln_ptr                         external static pointer                  dcl 11-68
cobol_$fixup_max                       external static fixed bin(17,0)          dcl 11-164
cobol_$fixup_ptr                       external static pointer                  dcl 11-30
cobol_$fs_charcnt                      external static fixed bin(17,0)          dcl 11-184
cobol_$fs_wdoff                        external static fixed bin(17,0)          dcl 11-198
cobol_$include_cnt                     external static fixed bin(17,0)          dcl 11-182
cobol_$include_info_ptr                external static pointer                  dcl 11-86
cobol_$init_stack_off                  external static fixed bin(17,0)          dcl 11-124
cobol_$initval_base_ptr                external static pointer                  dcl 11-32
cobol_$initval_file_ptr                external static pointer                  dcl 11-34
cobol_$initval_flag                    external static fixed bin(17,0)          dcl 11-178
cobol_$link_base_ptr                   external static pointer                  dcl 11-14
cobol_$link_max                        external static fixed bin(17,0)          dcl 11-100
cobol_$link_wd_off                     external static fixed bin(17,0)          dcl 11-98
cobol_$list_off                        external static fixed bin(17,0)          dcl 11-154
cobol_$list_ptr                        external static pointer                  dcl 11-64
cobol_$ls_charcnt                      external static fixed bin(17,0)          dcl 11-190
cobol_$main_pcs_ptr                    external static pointer                  dcl 11-84
cobol_$map_data_max                    external static fixed bin(17,0)          dcl 11-162
cobol_$map_data_ptr                    external static pointer                  dcl 11-54
cobol_$max_stack_off                   external static fixed bin(17,0)          dcl 11-122
cobol_$minpral5_ptr                    external static pointer                  dcl 11-50
cobol_$misc_base_ptr                   external static pointer                  dcl 11-60
cobol_$misc_end_ptr                    external static pointer                  dcl 11-62
cobol_$misc_max                        external static fixed bin(17,0)          dcl 11-158
cobol_$non_source_offset               external static fixed bin(17,0)          dcl 11-176
cobol_$ntbuf_ptr                       external static pointer                  dcl 11-82
cobol_$obj_seg_name                    external static char(32)                 dcl 11-208
cobol_$op_con_ptr                      external static pointer                  dcl 11-80
cobol_$para_eop_flag                   external static fixed bin(17,0)          dcl 11-138
cobol_$pd_map_index                    external static fixed bin(17,0)          dcl 11-116
cobol_$pd_map_max                      external static fixed bin(17,0)          dcl 11-160
cobol_$pd_map_ptr                      external static pointer                  dcl 11-28
cobol_$pd_map_sw                       external static fixed bin(17,0)          dcl 11-126
cobol_$perform_list_ptr                external static pointer                  dcl 11-36
cobol_$perform_para_index              external static fixed bin(17,0)          dcl 11-148
cobol_$perform_sect_index              external static fixed bin(17,0)          dcl 11-150
cobol_$priority_no                     external static fixed bin(17,0)          dcl 11-140
cobol_$ptr_assumption_ind              external static fixed bin(17,0)          dcl 11-144
cobol_$ptr_status_ptr                  external static pointer                  dcl 11-56
cobol_$reg_assumption_ind              external static fixed bin(17,0)          dcl 11-146
cobol_$reg_status_ptr                  external static pointer                  dcl 11-58
cobol_$reloc_def_base_ptr              external static pointer                  dcl 11-20
cobol_$reloc_def_max                   external static fixed bin(24,0)          dcl 11-108
cobol_$reloc_link_base_ptr             external static pointer                  dcl 11-22
cobol_$reloc_link_max                  external static fixed bin(24,0)          dcl 11-110
cobol_$reloc_sym_base_ptr              external static pointer                  dcl 11-24
cobol_$reloc_sym_max                   external static fixed bin(24,0)          dcl 11-112
cobol_$reloc_text_base_ptr             external static pointer                  dcl 11-18
cobol_$reloc_text_max                  external static fixed bin(24,0)          dcl 11-106
cobol_$reloc_work_base_ptr             external static pointer                  dcl 11-26
cobol_$reloc_work_max                  external static fixed bin(24,0)          dcl 11-114
cobol_$reswd_ptr                       external static pointer                  dcl 11-78
cobol_$same_sort_merge_proc            external static bit(1)                   dcl 11-214
cobol_$scratch_dir                     external static char(168)                dcl 11-206
cobol_$sect_eop_flag                   external static fixed bin(17,0)          dcl 11-136
cobol_$seg_init_flag                   external static fixed bin(17,0)          dcl 11-132
cobol_$seg_init_list_ptr               external static pointer                  dcl 11-40
cobol_$stack_off                       external static fixed bin(17,0)          dcl 11-120
cobol_$statement_info_ptr              external static pointer                  dcl 11-76
cobol_$sym_base_ptr                    external static pointer                  dcl 11-16
cobol_$sym_max                         external static fixed bin(17,0)          dcl 11-104
cobol_$sym_wd_off                      external static fixed bin(17,0)          dcl 11-102
cobol_$tag_table_max                   external static fixed bin(17,0)          dcl 11-166
cobol_$tag_table_ptr                   external static pointer                  dcl 11-52
cobol_$temp_token_area_ptr             external static pointer                  dcl 11-42
cobol_$temp_token_max                  external static fixed bin(17,0)          dcl 11-168
cobol_$temp_token_ptr                  external static pointer                  dcl 11-44
cobol_$token_block1_ptr                external static pointer                  dcl 11-46
cobol_$token_block2_ptr                external static pointer                  dcl 11-48
cobol_$value_cnt                       external static fixed bin(17,0)          dcl 11-194
cobol_$ws_charcnt                      external static fixed bin(17,0)          dcl 11-186
cobol_$ws_wdoff                        external static fixed bin(17,0)          dcl 11-200
cobol_$xref_bypass                     external static bit(1)                   dcl 11-212
cobol_$xref_chain_ptr                  external static pointer                  dcl 11-74
cobol_$xref_token_ptr                  external static pointer                  dcl 11-72
cobol_data_wd_off                      defined         fixed bin(17,0)          dcl 11-119
compile_count                          defined         fixed bin(17,0)          dcl 11-143
coms_charcnt                           defined         fixed bin(17,0)          dcl 11-189
coms_wdoff                             defined         fixed bin(17,0)          dcl 11-203
con_end_ptr                            defined         pointer                  dcl 11-11
con_wd_off                             defined         fixed bin(17,0)          dcl 11-93
cons_charcnt                           defined         fixed bin(17,0)          dcl 11-193
constant_offset                        defined         fixed bin(17,0)          dcl 11-157
data_init_flag                         defined         fixed bin(17,0)          dcl 11-131
date_compiled_sw                       defined         fixed bin(17,0)          dcl 11-181
debug_enable                           defined         fixed bin(17,0)          dcl 11-175
def_base_ptr                           defined         pointer                  dcl 11-13
def_max                                defined         fixed bin(17,0)          dcl 11-97
def_wd_off                             defined         fixed bin(17,0)          dcl 11-95
diag_ptr                               defined         pointer                  dcl 11-71
eln_max                                defined         fixed bin(17,0)          dcl 11-173
eln_ptr                                defined         pointer                  dcl 11-69
fixup_max                              defined         fixed bin(17,0)          dcl 11-165
fixup_ptr                              defined         pointer                  dcl 11-31
fs_charcnt                             defined         fixed bin(17,0)          dcl 11-185
fs_wdoff                               defined         fixed bin(17,0)          dcl 11-199
include_cnt                            defined         fixed bin(17,0)          dcl 11-183
include_info_ptr                       defined         pointer                  dcl 11-87
index                                                  builtin function         dcl 718
init_stack_off                         defined         fixed bin(17,0)          dcl 11-125
initval_base_ptr                       defined         pointer                  dcl 11-33
initval_file_ptr                       defined         pointer                  dcl 11-35
initval_flag                           defined         fixed bin(17,0)          dcl 11-179
ioerror                                based           structure                level 1 unaligned dcl 71
length                                                 builtin function         dcl 718
link_base_ptr                          defined         pointer                  dcl 11-15
link_max                               defined         fixed bin(17,0)          dcl 11-101
link_wd_off                            defined         fixed bin(17,0)          dcl 11-99
list_off                               defined         fixed bin(17,0)          dcl 11-155
list_ptr                               defined         pointer                  dcl 11-65
ls_charcnt                             defined         fixed bin(17,0)          dcl 11-191
main_pcs_ptr                           defined         pointer                  dcl 11-85
map_data_max                           defined         fixed bin(17,0)          dcl 11-163
map_data_ptr                           defined         pointer                  dcl 11-55
max_stack_off                          defined         fixed bin(17,0)          dcl 11-123
minpral5_ptr                           defined         pointer                  dcl 11-51
misc_base_ptr                          defined         pointer                  dcl 11-61
misc_end_ptr                           defined         pointer                  dcl 11-63
misc_max                               defined         fixed bin(17,0)          dcl 11-159
mod                                                    builtin function         dcl 718
name_ptr                               automatic       pointer                  dcl 134
next_tag                               defined         fixed bin(17,0)          dcl 11-129
nlit_ptr                               automatic       pointer                  dcl 4-11
non_source_offset                      defined         fixed bin(17,0)          dcl 11-177
ntbuf_ptr                              defined         pointer                  dcl 11-83
obj_seg_name                           defined         char(32)                 dcl 11-209
op_con_ptr                             defined         pointer                  dcl 11-81
para_eop_flag                          defined         fixed bin(17,0)          dcl 11-139
pd_map_index                           defined         fixed bin(17,0)          dcl 11-117
pd_map_max                             defined         fixed bin(17,0)          dcl 11-161
pd_map_ptr                             defined         pointer                  dcl 11-29
pd_map_sw                              defined         fixed bin(17,0)          dcl 11-127
perform_list_ptr                       defined         pointer                  dcl 11-37
perform_para_index                     defined         fixed bin(17,0)          dcl 11-149
perform_sect_index                     defined         fixed bin(17,0)          dcl 11-151
priority_no                            defined         fixed bin(17,0)          dcl 11-141
ptr_assumption_ind                     defined         fixed bin(17,0)          dcl 11-145
ptr_status_ptr                         defined         pointer                  dcl 11-57
reg_assumption_ind                     defined         fixed bin(17,0)          dcl 11-147
reg_status_ptr                         defined         pointer                  dcl 11-59
rel                                                    builtin function         dcl 718
reloc_def_base_ptr                     defined         pointer                  dcl 11-21
reloc_def_max                          defined         fixed bin(24,0)          dcl 11-109
reloc_link_base_ptr                    defined         pointer                  dcl 11-23
reloc_link_max                         defined         fixed bin(24,0)          dcl 11-111
reloc_sym_base_ptr                     defined         pointer                  dcl 11-25
reloc_sym_max                          defined         fixed bin(24,0)          dcl 11-113
reloc_text_base_ptr                    defined         pointer                  dcl 11-19
reloc_text_max                         defined         fixed bin(24,0)          dcl 11-107
reloc_work_base_ptr                    defined         pointer                  dcl 11-27
reloc_work_max                         defined         fixed bin(24,0)          dcl 11-115
reschar_2EQs                           internal static fixed bin(17,0)          initial dcl 14-286
reschar_2STARs                         internal static fixed bin(17,0)          initial dcl 14-204
reschar_EQ                             internal static fixed bin(17,0)          initial dcl 14-108
reschar_GT                             internal static fixed bin(17,0)          initial dcl 14-121
reschar_LPARENS                        internal static fixed bin(17,0)          initial dcl 14-205
reschar_LT                             internal static fixed bin(17,0)          initial dcl 14-135
reschar_MINUS                          internal static fixed bin(17,0)          initial dcl 14-201
reschar_PERIOD                         internal static fixed bin(17,0)          initial dcl 14-207
reschar_PLUS                           internal static fixed bin(17,0)          initial dcl 14-200
reschar_RPARENS                        internal static fixed bin(17,0)          initial dcl 14-206
reschar_SLASH                          internal static fixed bin(17,0)          initial dcl 14-203
reschar_STAR                           internal static fixed bin(17,0)          initial dcl 14-202
reswd_ACCEPT                           internal static fixed bin(17,0)          initial dcl 14-19
reswd_ACCESS                           internal static fixed bin(17,0)          initial dcl 14-343
reswd_ADD                              internal static fixed bin(17,0)          initial dcl 14-20
reswd_ADDRESS                          internal static fixed bin(17,0)          initial dcl 14-345
reswd_ADVANCING                        internal static fixed bin(17,0)          initial dcl 14-74
reswd_AFTER                            internal static fixed bin(17,0)          initial dcl 14-75
reswd_ALL                              internal static fixed bin(17,0)          initial dcl 14-76
reswd_ALPHABET                         internal static fixed bin(17,0)          initial dcl 14-346
reswd_ALPHABETIC                       internal static fixed bin(17,0)          initial dcl 14-77
reswd_ALPHANUMERIC                     internal static fixed bin(17,0)          initial dcl 14-78
reswd_ALPHANUMERIC_EDITED              internal static fixed bin(17,0)          initial dcl 14-79
reswd_ALSO                             internal static fixed bin(17,0)          initial dcl 14-100
reswd_ALTER                            internal static fixed bin(17,0)          initial dcl 14-22
reswd_ALTERNATE                        internal static fixed bin(17,0)          initial dcl 14-349
reswd_AND                              internal static fixed bin(17,0)          initial dcl 14-80
reswd_APPLY                            internal static fixed bin(17,0)          initial dcl 14-350
reswd_ARE                              internal static fixed bin(17,0)          initial dcl 14-128
reswd_AREA                             internal static fixed bin(17,0)          initial dcl 14-219
reswd_AREAS                            internal static fixed bin(17,0)          initial dcl 14-219
reswd_ASCENDING                        internal static fixed bin(17,0)          initial dcl 14-81
reswd_ASSIGN                           internal static fixed bin(17,0)          initial dcl 14-351
reswd_AT                               internal static fixed bin(17,0)          initial dcl 14-82
reswd_AUTHOR                           internal static fixed bin(17,0)          initial dcl 14-352
reswd_BEFORE                           internal static fixed bin(17,0)          initial dcl 14-83
reswd_BEGINNING                        internal static fixed bin(17,0)          initial dcl 14-84
reswd_BIT                              internal static fixed bin(17,0)          initial dcl 14-213
reswd_BITS                             internal static fixed bin(17,0)          initial dcl 14-213
reswd_BLANK                            internal static fixed bin(17,0)          initial dcl 14-222
reswd_BLOCK                            internal static fixed bin(17,0)          initial dcl 14-223
reswd_BOOLEAN                          internal static fixed bin(17,0)          initial dcl 14-152
reswd_BOTTOM                           internal static fixed bin(17,0)          initial dcl 14-264
reswd_BSN                              internal static fixed bin(17,0)          initial dcl 14-330
reswd_BY                               internal static fixed bin(17,0)          initial dcl 14-85
reswd_CALL                             internal static fixed bin(17,0)          initial dcl 14-23
reswd_CANCEL                           internal static fixed bin(17,0)          initial dcl 14-25
reswd_CATALOGUE_NAME                   internal static fixed bin(17,0)          initial dcl 14-322
reswd_CATALOG_NAME                     internal static fixed bin(17,0)          initial dcl 14-322
reswd_CD                               internal static fixed bin(17,0)          initial dcl 14-224
reswd_CF                               internal static fixed bin(17,0)          initial dcl 14-353
reswd_CH                               internal static fixed bin(17,0)          initial dcl 14-354
reswd_CHARACTER                        internal static fixed bin(17,0)          initial dcl 14-86
reswd_CHARACTERS                       internal static fixed bin(17,0)          initial dcl 14-86
reswd_CLOCK_UNITS                      internal static fixed bin(17,0)          initial dcl 14-355
reswd_CLOSE                            internal static fixed bin(17,0)          initial dcl 14-26
reswd_COBOL                            internal static fixed bin(17,0)          initial dcl 14-209
reswd_CODE                             internal static fixed bin(17,0)          initial dcl 14-356
reswd_CODE_SET                         internal static fixed bin(17,0)          initial dcl 14-314
reswd_COLLATING                        internal static fixed bin(17,0)          initial dcl 14-357
reswd_COLUMN                           internal static fixed bin(17,0)          initial dcl 14-358
reswd_COMMA                            internal static fixed bin(17,0)          initial dcl 14-359
reswd_COMMUNICATION                    internal static fixed bin(17,0)          initial dcl 14-225
reswd_COMP                             internal static fixed bin(17,0)          initial dcl 14-113
reswd_COMPUTATIONAL                    internal static fixed bin(17,0)          initial dcl 14-113
reswd_COMPUTATIONAL_1                  internal static fixed bin(17,0)          initial dcl 14-233
reswd_COMPUTATIONAL_2                  internal static fixed bin(17,0)          initial dcl 14-235
reswd_COMPUTATIONAL_3                  internal static fixed bin(17,0)          initial dcl 14-231
reswd_COMPUTATIONAL_4                  internal static fixed bin(17,0)          initial dcl 14-227
reswd_COMPUTATIONAL_5                  internal static fixed bin(17,0)          initial dcl 14-229
reswd_COMPUTATIONAL_6                  internal static fixed bin(17,0)          initial dcl 14-308
reswd_COMPUTATIONAL_7                  internal static fixed bin(17,0)          initial dcl 14-305
reswd_COMPUTATIONAL_8                  internal static fixed bin(17,0)          initial dcl 14-448
reswd_COMPUTE                          internal static fixed bin(17,0)          initial dcl 14-57
reswd_COMP_1                           internal static fixed bin(17,0)          initial dcl 14-233
reswd_COMP_2                           internal static fixed bin(17,0)          initial dcl 14-235
reswd_COMP_3                           internal static fixed bin(17,0)          initial dcl 14-231
reswd_COMP_4                           internal static fixed bin(17,0)          initial dcl 14-227
reswd_COMP_5                           internal static fixed bin(17,0)          initial dcl 14-229
reswd_COMP_6                           internal static fixed bin(17,0)          initial dcl 14-308
reswd_COMP_7                           internal static fixed bin(17,0)          initial dcl 14-305
reswd_COMP_8                           internal static fixed bin(17,0)          initial dcl 14-448
reswd_CONFIGURATION                    internal static fixed bin(17,0)          initial dcl 14-360
reswd_CONSTANT                         internal static fixed bin(17,0)          initial dcl 14-237
reswd_CONTAINS                         internal static fixed bin(17,0)          initial dcl 14-238
reswd_CONTROL                          internal static fixed bin(17,0)          initial dcl 14-362
reswd_CONTROLS                         internal static fixed bin(17,0)          initial dcl 14-363
reswd_CONVERSION                       internal static fixed bin(17,0)          initial dcl 14-361
reswd_COPY                             internal static fixed bin(17,0)          initial dcl 14-364
reswd_CORR                             internal static fixed bin(17,0)          initial dcl 14-365
reswd_CORRESPONDING                    internal static fixed bin(17,0)          initial dcl 14-365
reswd_COUNT                            internal static fixed bin(17,0)          initial dcl 14-88
reswd_CURRENCY                         internal static fixed bin(17,0)          initial dcl 14-367
reswd_DATA                             internal static fixed bin(17,0)          initial dcl 14-216
reswd_DATE                             internal static fixed bin(17,0)          initial dcl 14-90
reswd_DATE_COMPILED                    internal static fixed bin(17,0)          initial dcl 14-369
reswd_DATE_WRITTEN                     internal static fixed bin(17,0)          initial dcl 14-370
reswd_DAY                              internal static fixed bin(17,0)          initial dcl 14-91
reswd_DAY_OF_WEEK                      internal static fixed bin(17,0)          initial dcl 14-317
reswd_DE                               internal static fixed bin(17,0)          initial dcl 14-371
reswd_DEBUGGING                        internal static fixed bin(17,0)          initial dcl 14-92
reswd_DEBUG_CONTENTS                   internal static fixed bin(17,0)          initial dcl 14-372
reswd_DEBUG_ITEM                       internal static fixed bin(17,0)          initial dcl 14-373
reswd_DEBUG_LINE                       internal static fixed bin(17,0)          initial dcl 14-374
reswd_DEBUG_NAME                       internal static fixed bin(17,0)          initial dcl 14-379
reswd_DEBUG_SUB_1                      internal static fixed bin(17,0)          initial dcl 14-375
reswd_DEBUG_SUB_2                      internal static fixed bin(17,0)          initial dcl 14-376
reswd_DEBUG_SUB_3                      internal static fixed bin(17,0)          initial dcl 14-377
reswd_DECIMAL_POINT                    internal static fixed bin(17,0)          initial dcl 14-380
reswd_DECLARATIVES                     internal static fixed bin(17,0)          initial dcl 14-93
reswd_DEFAULT                          internal static fixed bin(17,0)          initial dcl 14-312
reswd_DELETE                           internal static fixed bin(17,0)          initial dcl 14-40
reswd_DELIMITED                        internal static fixed bin(17,0)          initial dcl 14-94
reswd_DELIMITER                        internal static fixed bin(17,0)          initial dcl 14-95
reswd_DEPENDING                        internal static fixed bin(17,0)          initial dcl 14-96
reswd_DESCENDING                       internal static fixed bin(17,0)          initial dcl 14-97
reswd_DESTINATION                      internal static fixed bin(17,0)          initial dcl 14-241
reswd_DETAIL                           internal static fixed bin(17,0)          initial dcl 14-381
reswd_DISABLE                          internal static fixed bin(17,0)          initial dcl 14-58
reswd_DISPLAY                          internal static fixed bin(17,0)          initial dcl 14-59
reswd_DIVIDE                           internal static fixed bin(17,0)          initial dcl 14-27
reswd_DIVISION                         internal static fixed bin(17,0)          initial dcl 14-98
reswd_DOWN                             internal static fixed bin(17,0)          initial dcl 14-99
reswd_DUPLICATES                       internal static fixed bin(17,0)          initial dcl 14-252
reswd_DYNAMIC                          internal static fixed bin(17,0)          initial dcl 14-185
reswd_EGI                              internal static fixed bin(17,0)          initial dcl 14-260
reswd_ELSE                             internal static fixed bin(17,0)          initial dcl 14-100
reswd_EMI                              internal static fixed bin(17,0)          initial dcl 14-102
reswd_ENABLE                           internal static fixed bin(17,0)          initial dcl 14-60
reswd_END                              internal static fixed bin(17,0)          initial dcl 14-103
reswd_ENDING                           internal static fixed bin(17,0)          initial dcl 14-104
reswd_END_OF_PAGE                      internal static fixed bin(17,0)          initial dcl 14-105
reswd_ENTER                            internal static fixed bin(17,0)          initial dcl 14-61
reswd_ENVIRONMENT                      internal static fixed bin(17,0)          initial dcl 14-382
reswd_EOP                              internal static fixed bin(17,0)          initial dcl 14-105
reswd_EQUAL                            internal static fixed bin(17,0)          initial dcl 14-108
reswd_EQUALS                           internal static fixed bin(17,0)          initial dcl 14-108
reswd_ERROR                            internal static fixed bin(17,0)          initial dcl 14-21
reswd_ESI                              internal static fixed bin(17,0)          initial dcl 14-112
reswd_EVERY                            internal static fixed bin(17,0)          initial dcl 14-384
reswd_EXAMINE                          internal static fixed bin(17,0)          initial dcl 14-67
reswd_EXCEEDS                          internal static fixed bin(17,0)          initial dcl 14-121
reswd_EXCEPTION                        internal static fixed bin(17,0)          initial dcl 14-115
reswd_EXIT                             internal static fixed bin(17,0)          initial dcl 14-30
reswd_EXOR                             internal static fixed bin(17,0)          initial dcl 14-442
reswd_EXTEND                           internal static fixed bin(17,0)          initial dcl 14-239
reswd_EXTERNAL                         internal static fixed bin(17,0)          initial dcl 14-315
reswd_FD                               internal static fixed bin(17,0)          initial dcl 14-242
reswd_FILE                             internal static fixed bin(17,0)          initial dcl 14-116
reswd_FILES                            internal static fixed bin(17,0)          initial dcl 14-299
reswd_FILE_CONTROL                     internal static fixed bin(17,0)          initial dcl 14-385
reswd_FILLER                           internal static fixed bin(17,0)          initial dcl 14-243
reswd_FINAL                            internal static fixed bin(17,0)          initial dcl 14-387
reswd_FIRST                            internal static fixed bin(17,0)          initial dcl 14-117
reswd_FLR                              internal static fixed bin(17,0)          initial dcl 14-296
reswd_FOOTING                          internal static fixed bin(17,0)          initial dcl 14-388
reswd_FOR                              internal static fixed bin(17,0)          initial dcl 14-118
reswd_FROM                             internal static fixed bin(17,0)          initial dcl 14-119
reswd_GENERATE                         internal static fixed bin(17,0)          initial dcl 14-62
reswd_GIVING                           internal static fixed bin(17,0)          initial dcl 14-120
reswd_GO                               internal static fixed bin(17,0)          initial dcl 14-32
reswd_GREATER                          internal static fixed bin(17,0)          initial dcl 14-121
reswd_GROUP                            internal static fixed bin(17,0)          initial dcl 14-390
reswd_HEADING                          internal static fixed bin(17,0)          initial dcl 14-389
reswd_HIGH_VALUE                       internal static fixed bin(17,0)          initial dcl 14-244
reswd_HIGH_VALUES                      internal static fixed bin(17,0)          initial dcl 14-244
reswd_HOLD                             internal static fixed bin(17,0)          initial dcl 14-63
reswd_IDENTIFICATION                   internal static fixed bin(17,0)          initial dcl 14-393
reswd_IDS_II                           internal static fixed bin(17,0)          initial dcl 14-334
reswd_IF                               internal static fixed bin(17,0)          initial dcl 14-64
reswd_IN                               internal static fixed bin(17,0)          initial dcl 14-107
reswd_INDEX                            internal static fixed bin(17,0)          initial dcl 14-246
reswd_INDEXED                          internal static fixed bin(17,0)          initial dcl 14-247
reswd_INDICATE                         internal static fixed bin(17,0)          initial dcl 14-394
reswd_INITIAL                          internal static fixed bin(17,0)          initial dcl 14-124
reswd_INITIALIZE                       internal static fixed bin(17,0)          initial dcl 14-31
reswd_INITIATE                         internal static fixed bin(17,0)          initial dcl 14-34
reswd_INPUT                            internal static fixed bin(17,0)          initial dcl 14-125
reswd_INPUT_OUTPUT                     internal static fixed bin(17,0)          initial dcl 14-130
reswd_INSPECT                          internal static fixed bin(17,0)          initial dcl 14-35
reswd_INSTALLATION                     internal static fixed bin(17,0)          initial dcl 14-395
reswd_INTERCHANGE                      internal static fixed bin(17,0)          initial dcl 14-318
reswd_INTO                             internal static fixed bin(17,0)          initial dcl 14-126
reswd_INVALID                          internal static fixed bin(17,0)          initial dcl 14-127
reswd_IS                               internal static fixed bin(17,0)          initial dcl 14-128
reswd_I_O                              internal static fixed bin(17,0)          initial dcl 14-130
reswd_I_O_CONTROL                      internal static fixed bin(17,0)          initial dcl 14-392
reswd_JUST                             internal static fixed bin(17,0)          initial dcl 14-248
reswd_JUSTIFIED                        internal static fixed bin(17,0)          initial dcl 14-248
reswd_KEY                              internal static fixed bin(17,0)          initial dcl 14-132
reswd_KEYED                            internal static fixed bin(17,0)          initial dcl 14-332
reswd_LABEL                            internal static fixed bin(17,0)          initial dcl 14-133
reswd_LAST                             internal static fixed bin(17,0)          initial dcl 14-397
reswd_LEADING                          internal static fixed bin(17,0)          initial dcl 14-134
reswd_LEFT                             internal static fixed bin(17,0)          initial dcl 14-250
reswd_LENGTH                           internal static fixed bin(17,0)          initial dcl 14-251
reswd_LESS                             internal static fixed bin(17,0)          initial dcl 14-135
reswd_LIMIT                            internal static fixed bin(17,0)          initial dcl 14-401
reswd_LIMITS                           internal static fixed bin(17,0)          initial dcl 14-402
reswd_LINAGE                           internal static fixed bin(17,0)          initial dcl 14-403
reswd_LINAGE_COUNTER                   internal static fixed bin(17,0)          initial dcl 14-404
reswd_LINE                             internal static fixed bin(17,0)          initial dcl 14-137
reswd_LINES                            internal static fixed bin(17,0)          initial dcl 14-137
reswd_LINE_COUNTER                     internal static fixed bin(17,0)          initial dcl 14-405
reswd_LINKAGE                          internal static fixed bin(17,0)          initial dcl 14-253
reswd_LOCK                             internal static fixed bin(17,0)          initial dcl 14-139
reswd_LOW_VALUE                        internal static fixed bin(17,0)          initial dcl 14-254
reswd_LOW_VALUES                       internal static fixed bin(17,0)          initial dcl 14-254
reswd_MEMORY                           internal static fixed bin(17,0)          initial dcl 14-407
reswd_MERGE                            internal static fixed bin(17,0)          initial dcl 14-33
reswd_MESSAGE                          internal static fixed bin(17,0)          initial dcl 14-140
reswd_MODE                             internal static fixed bin(17,0)          initial dcl 14-256
reswd_MODULES                          internal static fixed bin(17,0)          initial dcl 14-408
reswd_MOVE                             internal static fixed bin(17,0)          initial dcl 14-36
reswd_MULTIPLE                         internal static fixed bin(17,0)          initial dcl 14-409
reswd_MULTIPLY                         internal static fixed bin(17,0)          initial dcl 14-28
reswd_NATIVE                           internal static fixed bin(17,0)          initial dcl 14-303
reswd_NEGATIVE                         internal static fixed bin(17,0)          initial dcl 14-141
reswd_NEXT                             internal static fixed bin(17,0)          initial dcl 14-142
reswd_NO                               internal static fixed bin(17,0)          initial dcl 14-143
reswd_NOT                              internal static fixed bin(17,0)          initial dcl 14-144
reswd_NUMBER                           internal static fixed bin(17,0)          initial dcl 14-410
reswd_NUMERIC                          internal static fixed bin(17,0)          initial dcl 14-145
reswd_NUMERIC_EDITED                   internal static fixed bin(17,0)          initial dcl 14-146
reswd_OBJECT                           internal static fixed bin(17,0)          initial dcl 14-307
reswd_OBJECT_COMPUTER                  internal static fixed bin(17,0)          initial dcl 14-411
reswd_OCCURS                           internal static fixed bin(17,0)          initial dcl 14-257
reswd_OF                               internal static fixed bin(17,0)          initial dcl 14-147
reswd_OFF                              internal static fixed bin(17,0)          initial dcl 14-413
reswd_OMITTED                          internal static fixed bin(17,0)          initial dcl 14-221
reswd_ON                               internal static fixed bin(17,0)          initial dcl 14-148
reswd_OPEN                             internal static fixed bin(17,0)          initial dcl 14-37
reswd_OPTIONAL                         internal static fixed bin(17,0)          initial dcl 14-415
reswd_OR                               internal static fixed bin(17,0)          initial dcl 14-149
reswd_ORGANIZATION                     internal static fixed bin(17,0)          initial dcl 14-199
reswd_OUTPUT                           internal static fixed bin(17,0)          initial dcl 14-151
reswd_OVERFLOW                         internal static fixed bin(17,0)          initial dcl 14-24
reswd_PAGE                             internal static fixed bin(17,0)          initial dcl 14-153
reswd_PAGE_COUNTER                     internal static fixed bin(17,0)          initial dcl 14-417
reswd_PERFORM                          internal static fixed bin(17,0)          initial dcl 14-38
reswd_PF                               internal static fixed bin(17,0)          initial dcl 14-418
reswd_PH                               internal static fixed bin(17,0)          initial dcl 14-419
reswd_PIC                              internal static fixed bin(17,0)          initial dcl 14-258
reswd_PICTURE                          internal static fixed bin(17,0)          initial dcl 14-258
reswd_PLUS                             internal static fixed bin(17,0)          initial dcl 14-420
reswd_POINTER                          internal static fixed bin(17,0)          initial dcl 14-154
reswd_POSITION                         internal static fixed bin(17,0)          initial dcl 14-421
reswd_POSITIVE                         internal static fixed bin(17,0)          initial dcl 14-155
reswd_PRINTING                         internal static fixed bin(17,0)          initial dcl 14-399
reswd_PROCEDURE                        internal static fixed bin(17,0)          initial dcl 14-156
reswd_PROCEDURES                       internal static fixed bin(17,0)          initial dcl 14-157
reswd_PROCEED                          internal static fixed bin(17,0)          initial dcl 14-158
reswd_PROCESS                          internal static fixed bin(17,0)          initial dcl 14-65
reswd_PROCESSING                       internal static fixed bin(17,0)          initial dcl 14-159
reswd_PROCESS_AREA                     internal static fixed bin(17,0)          initial dcl 14-320
reswd_PROGRAM                          internal static fixed bin(17,0)          initial dcl 14-160
reswd_PROGRAM_ID                       internal static fixed bin(17,0)          initial dcl 14-422
reswd_PURGE                            internal static fixed bin(17,0)          initial dcl 14-72
reswd_QUEUE                            internal static fixed bin(17,0)          initial dcl 14-261
reswd_QUOTE                            internal static fixed bin(17,0)          initial dcl 14-262
reswd_QUOTES                           internal static fixed bin(17,0)          initial dcl 14-262
reswd_RANDOM                           internal static fixed bin(17,0)          initial dcl 14-161
reswd_RD                               internal static fixed bin(17,0)          initial dcl 14-423
reswd_READ                             internal static fixed bin(17,0)          initial dcl 14-39
reswd_RECEIVE                          internal static fixed bin(17,0)          initial dcl 14-41
reswd_RECORD                           internal static fixed bin(17,0)          initial dcl 14-162
reswd_RECORDING                        internal static fixed bin(17,0)          initial dcl 14-265
reswd_RECORDS                          internal static fixed bin(17,0)          initial dcl 14-215
reswd_REDEFINES                        internal static fixed bin(17,0)          initial dcl 14-266
reswd_REEL                             internal static fixed bin(17,0)          initial dcl 14-163
reswd_REFERENCES                       internal static fixed bin(17,0)          initial dcl 14-164
reswd_RELATIVE                         internal static fixed bin(17,0)          initial dcl 14-182
reswd_RELEASE                          internal static fixed bin(17,0)          initial dcl 14-42
reswd_REMAINDER                        internal static fixed bin(17,0)          initial dcl 14-165
reswd_REMOVAL                          internal static fixed bin(17,0)          initial dcl 14-291
reswd_RENAMES                          internal static fixed bin(17,0)          initial dcl 14-267
reswd_REPLACE                          internal static fixed bin(17,0)          initial dcl 14-336
reswd_REPLACING                        internal static fixed bin(17,0)          initial dcl 14-166
reswd_REPORT                           internal static fixed bin(17,0)          initial dcl 14-268
reswd_REPORTING                        internal static fixed bin(17,0)          initial dcl 14-167
reswd_REPORTS                          internal static fixed bin(17,0)          initial dcl 14-268
reswd_RERUN                            internal static fixed bin(17,0)          initial dcl 14-426
reswd_RESERVE                          internal static fixed bin(17,0)          initial dcl 14-427
reswd_RESET                            internal static fixed bin(17,0)          initial dcl 14-428
reswd_RETURN                           internal static fixed bin(17,0)          initial dcl 14-43
reswd_REVERSED                         internal static fixed bin(17,0)          initial dcl 14-168
reswd_REWIND                           internal static fixed bin(17,0)          initial dcl 14-169
reswd_REWRITE                          internal static fixed bin(17,0)          initial dcl 14-45
reswd_RF                               internal static fixed bin(17,0)          initial dcl 14-429
reswd_RH                               internal static fixed bin(17,0)          initial dcl 14-430
reswd_RIGHT                            internal static fixed bin(17,0)          initial dcl 14-270
reswd_ROUNDED                          internal static fixed bin(17,0)          initial dcl 14-170
reswd_RUN                              internal static fixed bin(17,0)          initial dcl 14-171
reswd_SA                               internal static fixed bin(17,0)          initial dcl 14-271
reswd_SAME                             internal static fixed bin(17,0)          initial dcl 14-431
reswd_SD                               internal static fixed bin(17,0)          initial dcl 14-272
reswd_SEARCH                           internal static fixed bin(17,0)          initial dcl 14-44
reswd_SECTION                          internal static fixed bin(17,0)          initial dcl 14-172
reswd_SECURITY                         internal static fixed bin(17,0)          initial dcl 14-432
reswd_SEGMENT                          internal static fixed bin(17,0)          initial dcl 14-173
reswd_SEGMENT_LIMIT                    internal static fixed bin(17,0)          initial dcl 14-433
reswd_SELECT                           internal static fixed bin(17,0)          initial dcl 14-434
reswd_SEND                             internal static fixed bin(17,0)          initial dcl 14-47
reswd_SENTENCE                         internal static fixed bin(17,0)          initial dcl 14-174
reswd_SEPARATE                         internal static fixed bin(17,0)          initial dcl 14-273
reswd_SEQUENCE                         internal static fixed bin(17,0)          initial dcl 14-425
reswd_SEQUENTIAL                       internal static fixed bin(17,0)          initial dcl 14-435
reswd_SET                              internal static fixed bin(17,0)          initial dcl 14-48
reswd_SIGN                             internal static fixed bin(17,0)          initial dcl 14-274
reswd_SIZE                             internal static fixed bin(17,0)          initial dcl 14-175
reswd_SORT                             internal static fixed bin(17,0)          initial dcl 14-66
reswd_SORT_MERGE                       internal static fixed bin(17,0)          initial dcl 14-436
reswd_SOURCE                           internal static fixed bin(17,0)          initial dcl 14-275
reswd_SOURCE_COMPUTER                  internal static fixed bin(17,0)          initial dcl 14-437
reswd_SPACE                            internal static fixed bin(17,0)          initial dcl 14-210
reswd_SPACES                           internal static fixed bin(17,0)          initial dcl 14-210
reswd_SPANNED                          internal static fixed bin(17,0)          initial dcl 14-439
reswd_SPECIAL_NAMES                    internal static fixed bin(17,0)          initial dcl 14-438
reswd_SSF                              internal static fixed bin(17,0)          initial dcl 14-89
reswd_STANDARD                         internal static fixed bin(17,0)          initial dcl 14-176
reswd_STANDARD_1                       internal static fixed bin(17,0)          initial dcl 14-347
reswd_STANDARD_2                       internal static fixed bin(17,0)          initial dcl 14-226
reswd_START                            internal static fixed bin(17,0)          initial dcl 14-70
reswd_STATUS                           internal static fixed bin(17,0)          initial dcl 14-276
reswd_STOP                             internal static fixed bin(17,0)          initial dcl 14-50
reswd_STREAM                           internal static fixed bin(17,0)          initial dcl 14-328
reswd_STRING                           internal static fixed bin(17,0)          initial dcl 14-51
reswd_SUBSTITUTION                     internal static fixed bin(17,0)          initial dcl 14-338
reswd_SUBTRACT                         internal static fixed bin(17,0)          initial dcl 14-29
reswd_SUB_QUEUE_1                      internal static fixed bin(17,0)          initial dcl 14-277
reswd_SUB_QUEUE_2                      internal static fixed bin(17,0)          initial dcl 14-278
reswd_SUB_QUEUE_3                      internal static fixed bin(17,0)          initial dcl 14-279
reswd_SUM                              internal static fixed bin(17,0)          initial dcl 14-441
reswd_SUPPRESS                         internal static fixed bin(17,0)          initial dcl 14-71
reswd_SUSPEND                          internal static fixed bin(17,0)          initial dcl 14-52
reswd_SYMBOLIC                         internal static fixed bin(17,0)          initial dcl 14-280
reswd_SYNC                             internal static fixed bin(17,0)          initial dcl 14-281
reswd_SYNCHRONIZED                     internal static fixed bin(17,0)          initial dcl 14-281
reswd_TABLE                            internal static fixed bin(17,0)          initial dcl 14-283
reswd_TALLY                            internal static fixed bin(17,0)          initial dcl 14-212
reswd_TALLYING                         internal static fixed bin(17,0)          initial dcl 14-177
reswd_TAPE                             internal static fixed bin(17,0)          initial dcl 14-444
reswd_TERMINAL                         internal static fixed bin(17,0)          initial dcl 14-178
reswd_TERMINATE                        internal static fixed bin(17,0)          initial dcl 14-53
reswd_TEXT                             internal static fixed bin(17,0)          initial dcl 14-445
reswd_THAN                             internal static fixed bin(17,0)          initial dcl 14-179
reswd_THROUGH                          internal static fixed bin(17,0)          initial dcl 14-180
reswd_THRU                             internal static fixed bin(17,0)          initial dcl 14-180
reswd_TIME                             internal static fixed bin(17,0)          initial dcl 14-183
reswd_TIMES                            internal static fixed bin(17,0)          initial dcl 14-183
reswd_TO                               internal static fixed bin(17,0)          initial dcl 14-186
reswd_TOP                              internal static fixed bin(17,0)          initial dcl 14-208
reswd_TRAILING                         internal static fixed bin(17,0)          initial dcl 14-285
reswd_TRANSFORM                        internal static fixed bin(17,0)          initial dcl 14-68
reswd_TYPE                             internal static fixed bin(17,0)          initial dcl 14-446
reswd_UNEQUAL                          internal static fixed bin(17,0)          initial dcl 14-187
reswd_UNIT                             internal static fixed bin(17,0)          initial dcl 14-188
reswd_UNSTRING                         internal static fixed bin(17,0)          initial dcl 14-54
reswd_UNTIL                            internal static fixed bin(17,0)          initial dcl 14-189
reswd_UP                               internal static fixed bin(17,0)          initial dcl 14-190
reswd_UPON                             internal static fixed bin(17,0)          initial dcl 14-191
reswd_USAGE                            internal static fixed bin(17,0)          initial dcl 14-287
reswd_USE                              internal static fixed bin(17,0)          initial dcl 14-56
reswd_USING                            internal static fixed bin(17,0)          initial dcl 14-192
reswd_VALUE                            internal static fixed bin(17,0)          initial dcl 14-288
reswd_VALUES                           internal static fixed bin(17,0)          initial dcl 14-288
reswd_VARYING                          internal static fixed bin(17,0)          initial dcl 14-193
reswd_VLR                              internal static fixed bin(17,0)          initial dcl 14-218
reswd_WHEN                             internal static fixed bin(17,0)          initial dcl 14-194
reswd_WITH                             internal static fixed bin(17,0)          initial dcl 14-195
reswd_WORDS                            internal static fixed bin(17,0)          initial dcl 14-447
reswd_WORKING_STORAGE                  internal static fixed bin(17,0)          initial dcl 14-290
reswd_WRITE                            internal static fixed bin(17,0)          initial dcl 14-55
reswd_ZEROES                           internal static fixed bin(17,0)          initial dcl 14-196
reswd_ZEROS                            internal static fixed bin(17,0)          initial dcl 14-196
reswd_ptr                              defined         pointer                  dcl 11-79
rw_ptr                                 automatic       pointer                  dcl 2-11
same_sort_merge_proc                   defined         bit(1)                   dcl 11-215
scratch_dir                            defined         char(168)                dcl 11-207
sect_eop_flag                          defined         fixed bin(17,0)          dcl 11-137
seg_init_flag                          defined         fixed bin(17,0)          dcl 11-133
seg_init_list_ptr                      defined         pointer                  dcl 11-41
stack_off                              defined         fixed bin(17,0)          dcl 11-121
statement_info_ptr                     defined         pointer                  dcl 11-77
string                                                 builtin function         dcl 718
sym_base_ptr                           defined         pointer                  dcl 11-17
sym_max                                defined         fixed bin(17,0)          dcl 11-105
sym_wd_off                             defined         fixed bin(17,0)          dcl 11-103
tag_table_max                          defined         fixed bin(17,0)          dcl 11-167
tag_table_ptr                          defined         pointer                  dcl 11-53
temp_token_area_ptr                    defined         pointer                  dcl 11-43
temp_token_max                         defined         fixed bin(17,0)          dcl 11-169
temp_token_ptr                         defined         pointer                  dcl 11-45
text_base_ptr                          defined         pointer                  dcl 11-9
text_wd_off                            defined         fixed bin(17,0)          dcl 11-91
token_block1_ptr                       defined         pointer                  dcl 11-47
token_block2_ptr                       defined         pointer                  dcl 11-49
value_cnt                              defined         fixed bin(17,0)          dcl 11-195
ws_charcnt                             defined         fixed bin(17,0)          dcl 11-187
ws_wdoff                               defined         fixed bin(17,0)          dcl 11-201
xref_bypass                            defined         bit(1)                   dcl 11-213
xref_chain_ptr                         defined         pointer                  dcl 11-75
xref_token_ptr                         defined         pointer                  dcl 11-73

NAMES DECLARED BY EXPLICIT CONTEXT.
cobol_linage                    000104 constant        entry                    external dcl 27
error                           000713 constant        label                    dcl 708 ref 701 706
exit                            000612 constant        label                    dcl 365
litsize_error                   000647 constant        label                    dcl 703 ref 248 313
move_buf_con                    000751 constant        entry                    internal dcl 373 ref 207 237 253 287 297 316 350 360
move_buf_var                    002132 constant        entry                    internal dcl 542 ref 261 324
nyi_error                       000613 constant        label                    dcl 698
start                           000124 constant        label                    dcl 179
start_codegen                   000227 constant        label                    dcl 201

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      3420        3532    3154        3430
Length      4252    3154       112         504     243          32

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cobol_linage                        426 external procedure  is an external procedure.  
move_buf_con                            internal procedure  shares stack frame of external procedure cobol_linage.  
move_buf_var                            internal procedure  shares stack frame of external procedure cobol_linage.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 num_check_instr             cobol_linage
000014 pr5_struct                  cobol_linage
000023 zero_token                  cobol_linage
000036 pr_ctl                      cobol_linage
000040 advancing_error             cobol_linage

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cobol_linage             000100 page_sw                     cobol_linage
                         000102 pr5_struct_ptr              cobol_linage
                         000104 good_tag                    cobol_linage
                         000105 linage_before               cobol_linage
                         000106 mlr_struct                  cobol_linage
                         000125 instr                       cobol_linage
                         000133 chan_no                     cobol_linage
                         000134 dn_ptr                      cobol_linage
                         000136 dn_ptr_linage               cobol_linage
                         000140 instr_ptr                   cobol_linage
                         000142 mlr_struct_ptr              cobol_linage
                         000144 bnum                        cobol_linage
                         000145 anum                        cobol_linage
                         000146 ba_sw                       cobol_linage
                         000147 bvalue                      cobol_linage
                         000150 avalue                      cobol_linage
                         000151 temp                        cobol_linage
                         000152 utemp                       cobol_linage
                         000153 restartad                   cobol_linage
                         000154 patch_ic                    cobol_linage
                         000155 error_info                  cobol_linage
                         000226 eos_ptr                     cobol_linage

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
r_e_as              alloc_char_temp     call_ext_out_desc   call_ext_out        return_mac          shorten_stack
ext_entry           any_to_any_truncate_

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cobol_addr                    cobol_alloc$stack             cobol_call_op                 cobol_define_tag
cobol_emit                    cobol_gen_ioerror             cobol_io_util$fixed_add       cobol_io_util$move_direct
cobol_io_util$move_lit        cobol_io_util$t9dec_to_bin    cobol_ioerror_abort           cobol_ioop_util$set_value
cobol_ioop_util$set_var_adv   cobol_pool                    cobol_set_pr                  ioa_$rsnnl
signal_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
cobol_$next_tag               cobol_$text_base_ptr          cobol_$text_wd_off




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     27 000077        30 000111        87 000112       179 000124       181 000125       182 000134       183 000136
    184 000140       186 000142       189 000154       190 000156       191 000160       192 000162       193 000164
    196 000165       198 000210       201 000227       204 000231       207 000234       208 000235       212 000236
    218 000250       221 000256       223 000264       226 000271       227 000273       229 000275       232 000276
    233 000300       237 000302       238 000303       240 000304       243 000306       246 000312       248 000326
    251 000331       253 000333       255 000334       256 000335       259 000337       261 000340       263 000341
    264 000342       267 000353       270 000367       272 000372       274 000376       275 000400       276 000406
    277 000407       279 000413       280 000415       281 000426       283 000427       284 000431       287 000433
    289 000434       290 000435       293 000437       294 000441       295 000443       297 000445       301 000446
    304 000447       306 000451       309 000455       311 000457       313 000473       316 000476       318 000477
    319 000500       322 000502       324 000504       326 000505       327 000506       330 000517       333 000533
    335 000536       337 000542       338 000544       339 000552       340 000553       342 000557       343 000561
    344 000572       346 000573       347 000575       350 000577       352 000600       353 000601       356 000603
    357 000605       358 000607       360 000611       365 000612       698 000613       701 000646       703 000647
    706 000712       708 000713       710 000716       711 000750       373 000751       376 000752       379 000762
    381 000773       384 001007       386 001021       387 001034       388 001046       395 001055       398 001057
    400 001112       402 001160       404 001222       406 001234       408 001253       409 001254       412 001262
    414 001272       417 001311       421 001321       423 001323       425 001331       428 001333       431 001335
    434 001343       436 001345       437 001347       438 001355       439 001361       441 001371       444 001410
    445 001414       447 001424       449 001443       450 001444       453 001453       454 001461       456 001471
    461 001510       463 001522       464 001524       465 001527       467 001530       468 001532       471 001537
    473 001554       474 001563       475 001567       476 001571       478 001573       482 001602       483 001604
    487 001610       490 001617       491 001621       493 001625       494 001646       496 001677       497 001704
    498 001710       499 001713       500 001716       501 001720       505 001724       507 001745       510 001755
    511 001757       512 001760       514 001764       516 002005       518 002007       522 002030       524 002033
    527 002073       530 002075       532 002105       534 002110       538 002131       542 002132       545 002133
    547 002136       549 002161       551 002165       552 002205       557 002232       558 002243       559 002252
    561 002260       563 002276       564 002302       566 002311       572 002317       575 002335       578 002345
    579 002356       581 002363       582 002376       583 002410       587 002417       591 002421       595 002427
    598 002432       600 002442       603 002452       608 002471       609 002473       610 002474       613 002505
    615 002507       617 002526       620 002534       621 002544       624 002552       628 002571       630 002573
    632 002612       634 002614       636 002620       638 002626       641 002636       644 002640       645 002642
    646 002652       648 002660       650 002677       653 002700       655 002706       656 002711       657 002721
    659 002722       660 002724       663 002734       665 002736       667 002755       668 002761       669 002772
    670 002774       671 002776       673 003006       675 003025       678 003033       679 003043       681 003046
    682 003050       684 003052       685 003053       686 003063       689 003073       693 003112


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
