	COMPILATION LISTING OF SEGMENT cobol_res_words
	Compiled by: Multics PL/I Compiler, Release 31b, of April 24, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 05/24/89  1013.5 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
       17*     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
       18*     MCR8060 cobol_res_words.pl1 Reformatted code to new Cobol standard.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 /* Modified on 07/11/83 by FCH, [5.2-1], SUPPRESS verb does not work, BUG553(phx15481) */
       23 /* Modified on 01/04/82 by FCH, [5.1-1], call special debug io entries only once, phx11819(BUG517) */
       24 /* Modified on 06/30/81 by FCH, [4.4-2], reserved word token formed incorrectly, BUG480(phx09696) */
       25 /* Modified on 06/14/80 by FCH, [4.4-1], REPORT WRITER facility */
       26 /* Modified on 12/12/79 by MHD, [4.2-1], added lex_proc(14) - reconize SD and save sort file name */
       27 /* Modified on 10/11/79 by MHD, [4.1-1], deleted lines 653,657 - don't diag multiple DATA (it assumes DIVISION) */
       28 /* Modified on 02/15/79 by FCH, [4.0-1],  debug statement */
       29 /* Modified on 10/31/78 by RAL, [3.0-2], have REPLACE trigger proc_copy like COPY for copy replacing */
       30 /* Modified on 05/17/78 by FCH, [3.0-1], fix bug for priority onumber */
       31 /* Modified since Version 3.0 */
       32 
       33 
       34 
       35 
       36 
       37 /* format: style3 */
       38 cobol_res_words:
       39      proc;
       40 
       41 /* This run checks each user word for a reserved word and initiates any special processing required */
       42 
       43 
       44 /*************************************/
       45 
       46 start:
       47 	if firsttime
       48 	then do;
       49 
       50 		call hcs_$make_ptr (null (), "cobol_reswd_table_", "cobol_reswd_table_", reswd_table_ptr, mcode);
       51 
       52 		if reswd_table_ptr = null ()
       53 		then do;
       54 			call ioa_ ("HELP");
       55 			return;
       56 		     end;
       57 
       58 		do i = 1 to 30;
       59 		     g2_ptr (i) = addrel (reswd_table_ptr, reswd_table.g2_offset (i));
       60 		end;
       61 
       62 		firsttime = "0"b;			/*[4.0-1]*/
       63 		DS = "0"b;			/*[4.2-1]*/
       64 		last_sort_file = 0;
       65 	     end;
       66 
       67 
       68 
       69 	if cobol_rwt_init_sw = "1"b
       70 	then do;
       71 		cobol_rwt_init_sw = "0"b;
       72 		area_a_sw = "0"b;
       73 		user_word.line = 1;
       74 		procname.type = 7;
       75 		procname.repl_bits = "00000000"b;
       76 		ad_attn = addr (fixed_common.options);
       77 		fixed_common.phase_name = "LEX";
       78 		h_w_count = 0;
       79 		dclr_sec = 0;
       80 		increment_dclr_sec = "0"b;
       81 		secint = 0;
       82 
       83 		if substr (user_word.word, 1, user_word.length) = "copy"
       84 		then c_f_sw = "1"b;			/* if COPY first word in program... */
       85 		else c_f_sw = "0"b;
       86 
       87 	     end;
       88 
       89 	if c_f_sw
       90 	then goto start_search;			/* if copy first line in prog and still scanning it... */
       91 
       92 	if cobol_head_words (1) = "0"b
       93 	then do;
       94 ck_ci:
       95 		if substr (user_word.word, 1, user_word.length) ^= "control"
       96 		then if substr (user_word.word, 1, user_word.length) ^= "identification"
       97 		     then do;
       98 			     len = 2;
       99 
      100 			     call gen_head;
      101 
      102 			     cobol_head_words (1) = "1"b;
      103 			     cobol_head_words (2) = "1"b;
      104 			end;
      105 	     end;
      106 
      107 start_search:
      108 	reswd_len, len = user_word.length;
      109 	g1_off = g2_ptr (reswd_len) -> g2 (fixed (unspec (substr (user_word.word, 1, 1))));
      110 
      111 	if g1_off = 0
      112 	then go to fail;
      113 
      114 	g1_ptr = addrel (reswd_table_ptr, g1_off);
      115 
      116 /*[4.0-1]*/
      117 	if g1.name = substr (user_word.word, 1, reswd_len)
      118 	then go to tph;
      119 
      120 	do while (g1.name < substr (user_word.word, 1, reswd_len));
      121 
      122 	     g1_ptr = addr (g1.next);
      123 
      124 	end;
      125 
      126 	if g1_stop = stop_bits | g1.name ^= substr (user_word.word, 1, reswd_len)
      127 	then go to fail;
      128 
      129 tph:						/*[4.4-1]*/
      130 	if g3.key >= 530 & g3.key <= 537		/* debug register */
      131 						/*[4.4-1]*/
      132 	then do;
      133 		if cobol_debug_mode & fixed_common.comp_level < "2" & DS
      134 						/*[4.4-1]*/
      135 		then call diag (g3.key - 329);	/*[4.4-1]*/
      136 	     end;					/*[4.4-1]*/
      137 	else if g3.key = 565			/* line-counter */
      138 						/*[4.4-1]*/
      139 	then ;					/*[4.4-1]*/
      140 	else if g3.key = 578			/* page-counter */
      141 						/*[4.4-1]*/
      142 	then ;					/*[4.4-1]*/
      143 	else go to hit;
      144 
      145 
      146 
      147 
      148 /* 
      149*   * * * * *
      150*   SPECIAL PROCESSING FOR USER WORDS
      151*   * * * * *
      152*    */
      153 
      154 
      155 
      156 
      157 fail:						/* still a user word */
      158 	if cobol_head_words (5) = "0"b
      159 	then return;				/* exit--not in procedure division */
      160 
      161 	if user_word.column < 12
      162 	then do;					/* paragraph name */
      163 		if p_n
      164 		then return;
      165 
      166 		p_n = "1"b;			/* bypass this code for recursive calls */
      167 
      168 next_pn:
      169 		procname.line = user_word.line;
      170 		procname.def_line = procname.line;
      171 		procname.column = user_word.column;
      172 		procname.length = user_word.length;
      173 
      174 		substr (procname.name, 1, procname.length) = substr (user_word.word, 1, procname.length);
      175 
      176 		procname.size = 52 + procname.length;
      177 		procname.info = "0"b;
      178 		procname.proc_num = cobol_name_number;
      179 		procname.section_num = cobol_section_number;
      180 						/* [3.0-1] */
      181 
      182 		if cobol_stack_sw = "0"b
      183 		then substr (user_word.l_info, 3, 1) = "1"b;
      184 
      185 		p = cobol_current;
      186 
      187 		call cobol_insert_token (7, procname.length);
      188 
      189 		addr (user_word.size) -> tmvr = tmvr;
      190 
      191 		if cobol_stack_sw = "1"b
      192 		then call cobol_delete_tokens (p, p);
      193 
      194 		area_a_sw = "1"b;
      195 
      196 		call cobol_gns1;
      197 
      198 /* a [.] [goto | section [#] | note ] [.] */
      199 
      200 		if reserved_word.type = 1
      201 		then if reserved_word.key = reschar_PERIOD
      202 		     then call cobol_gns1;
      203 
      204 		if token.type = 1
      205 		then if reserved_word.key = reswd_GO
      206 		     then do;			/* check for alterable go */
      207 
      208 			     call cobol_gns1;
      209 
      210 			     if token.type = 1
      211 			     then if reserved_word.key = reswd_TO
      212 				then do;
      213 
      214 					call cobol_gns1;
      215 
      216 					if token.type = 1
      217 					then if reserved_word.key = reschar_PERIOD
      218 					     then do;
      219 						     if fixed_common.comp_level < "3"
      220 						/* for leveling, An alterable GO TO */
      221 						     then call diag (27);
      222 						     call cobol_gns1;
      223 						end;
      224 
      225 					if token.type = 8 | token.type = 2
      226 					then if token.column < 12
      227 						/* another paragraph or section name */
      228 					     then substr (procname.info, 8, 1) = "1"b;
      229 						/* alterable */
      230 					     else do;
      231 
      232 						     call cobol_gns1;
      233 
      234 						     if token.type = 1
      235 						     then if reserved_word.key = 101 /* "IN" */
      236 							     | reserved_word.key = 133
      237 						/* "OF" */
      238 							then do;
      239 						/* qualified */
      240 
      241 								call cobol_gns1;
      242 
      243 								if token.type = 8 | token.type = 2
      244 								then if token.column > 11
      245 								     then do;
      246 									     call cobol_gns1;
      247 									     if token.type = 1
      248 									     then if reserved_word.key
      249 										     = reschar_PERIOD
      250 										then call cobol_gns1;
      251 
      252 									     if token.type = 8
      253 										| token.type = 2
      254 									     then if token.column < 12
      255 										then substr (procname
      256 											.info, 8, 1)
      257 											= "1"b;
      258 										else ;
      259 									     else if token.type = 1
      260 									     then if reserved_word.key
      261 										     = 89
      262 										     | reserved_word
      263 										     .key = 191
      264 										then substr (procname
      265 											.info, 8, 1)
      266 											= "1"b;
      267 									end;
      268 							     end;
      269 							else do;
      270 								if reserved_word.key = reschar_PERIOD
      271 								then call cobol_gns1;
      272 
      273 								if token.type = 8 | token.type = 2
      274 								then if token.column < 12
      275 						/* another parag or sec */
      276 								     then substr (procname.info, 8, 1) =
      277 									     "1"b;
      278 						/* alterable */
      279 								     else ;
      280 								else if token.type = 1
      281 								then if reserved_word.key
      282 									= 89 /* end DECLARATIVES */
      283 									| reserved_word.key = 191
      284 						/* end COBOL */
      285 								     then substr (procname.info, 8, 1) =
      286 									     "1"b;
      287 							     end;
      288 						end;
      289 					else if token.type = 1
      290 					then if reserved_word.key = 89 /* end DECLARATIVES */
      291 						| reserved_word.key = 191
      292 						/* end COBOL */
      293 					     then substr (procname.info, 8, 1) = "1"b;
      294 						/* alterable */
      295 				     end;
      296 			end;
      297 		     else if reserved_word.key = reswd_SECTION
      298 		     then do;			/* a section name */
      299 
      300 			     cobol_section_number = cobol_name_number;
      301 			     substr (procname.info, 5, 1) = "1"b;
      302 						/* indicate section name */
      303 			     save_stsw = cobol_stack_sw;
      304 			     cobol_stack_sw = "1"b;
      305 
      306 			     call cobol_gns1;
      307 
      308 			     cobol_stack_sw = save_stsw;
      309 
      310 			     if reserved_word.type = 1 & reserved_word.key = reschar_PERIOD
      311 			     then p = user_word.back_link;
      312 			     else p = cobol_current;
      313 
      314 			     secint = 0;		/* convert section number */
      315 
      316 			     if p -> numeric_lit.type = 2
      317 			     then do;
      318 
      319 				     do i = 1 to p -> numeric_lit.places;
      320 
      321 					secint =
      322 					     10 * secint
      323 					     + fixed (unspec (substr (p -> numeric_lit.literial, i, 1)), 15)
      324 					     - 48;/* [3.0-1] */
      325 
      326 				     end;
      327 
      328 				     if secint > 99 | p -> numeric_lit.sign = "-"
      329 				     then secint = 100;
      330 				     else substr (p -> numeric_lit.info, 3, 1) = "1"b;
      331 
      332 				end;
      333 
      334 			end;
      335 p_n_exit:
      336 		if dclr_sec = 1
      337 		then substr (procname.info, 6, 1) = "1"b;
      338 						/* indicate if declr sec */
      339 
      340 		if increment_dclr_sec
      341 		then do;				/* increment dclr_sec....END DECLARATIVES already processed. */
      342 
      343 			dclr_sec = dclr_sec + 1;
      344 			increment_dclr_sec = "0"b;
      345 		     end;
      346 
      347 		procname.priority = sint.char2;
      348 		procname.section_num = cobol_section_number;
      349 		procname.proc_num = cobol_name_number;
      350 
      351 /* Update fixed_common fields here every time, in case this paragraph/section name
      352*		   immediately preceeds "end cobol". */
      353 
      354 		fixed_common.proc_counter = cobol_name_number;
      355 		fixed_common.spec_tag_counter = cobol_name_number;
      356 		cobol_name_number = cobol_name_number + 1;
      357 
      358 		call cobol_vdwf_sput (cobol_ntfp, st, addr (procname.size), procname.size, rec_ad);
      359 
      360 		if token.line ^= procname.line
      361 		then if token.type = 8
      362 		     then if token.column < 12
      363 			then go to next_pn;
      364 
      365 		p_n = "0"b;
      366 		area_a_sw = "0"b;
      367 	     end;
      368 	return;
      369 
      370 initialize:
      371      entry;
      372 
      373 /*[4.0-1]*/
      374 	ph_num = 1;
      375 	p_n = "0"b;				/*[5.1-1]*/
      376 	string (indicators) = "111111"b;
      377 
      378 
      379 /*[4.0-1]*/
      380 	state = 0;				/*[4.0-1]*/
      381 	fixed_common.debug, fixed_common.use_debug, cobol_debug_mode = "0"b;
      382 
      383 /*[4.0-1]*/
      384 	return;
      385 
      386 /* 
      387*   * * * * *
      388*   SPECIAL PROCESSING FOR RESERVED WORDS
      389*   * * * * *
      390*    */
      391 
      392 hit:						/* located a reserved word */
      393 	if g3.rfi
      394 	then do;
      395 		if g3.key = reswd_COMP_1
      396 		then reserved_word.key = reswd_COMP_7;
      397 		else if g3.key = reswd_COMP_2
      398 		then reserved_word.key = reswd_COMP_6;
      399 		else do;
      400 			call cobol_lexerr (24, "1"b, 0, " ");
      401 			return;
      402 		     end;
      403 	     end;
      404 	else reserved_word.key = g3.key;
      405 
      406 /*[4.4-1]*/
      407 	if report_exists				/*[4.4-2]*/
      408 	then do;
      409 		rwl = user_word.length;
      410 
      411 /*[4.4-2]*/
      412 		substr (reserved_word.name, 1, rwl) = substr (user_word.word, 1, rwl);
      413 
      414 /*[4.4-2]*/
      415 		reserved_word.size = 32 + rwl;	/*[4.4-2]*/
      416 		reserved_word.length = rwl;
      417 
      418 /*[4.4-1]*/
      419 	     end;					/*[4.4-1]*/
      420 	else reserved_word.size = 28;
      421 
      422 	reserved_word.type = 1;
      423 	reserved_word.class.pd = g3.class.pd;
      424 	reserved_word.class.dd = g3.class.dd;
      425 
      426 	string (reserved_word.class.others) = string (g3.class.others);
      427 
      428 	reserved_word.jump_index = fixed (g3.ji);
      429 
      430 	if cobol_head_words (5) = "1"b
      431 	then /* if in procedure division... */
      432 	     if reserved_word.column < 12
      433 	     then /* if in area A... */
      434 		if (reserved_word.key ^= 98)
      435 		then /* if not END... */
      436 		     if (reserved_word.key ^= 89)
      437 		     then /* if not DECLARATIVES... */
      438 			if (reserved_word.key ^= 522)
      439 			then /* if not COPY... */
      440 			     if (reserved_word.key ^= 425)
      441 			     then /* in not REPLACE... */ /* [3.0-2]*/
      442 				if g3.s_p_key = "0"b
      443 				then return;	/* return if no special processing */
      444 
      445 	s_p_i = 0;
      446 
      447 s_p_loop:
      448 	s_p_i = s_p_i + 1;				/* select each special process indicated */
      449 
      450 	if s_p_i > 6
      451 	then return;
      452 
      453 	if substr (g3.s_p_key, s_p_i, 1) = "0"b
      454 	then goto s_p_loop;
      455 
      456 	goto s_p_proc (s_p_i);
      457 
      458 /* SPECIAL PROCESSING FOR GROUPS OF RESERVED WORDS */
      459 
      460 s_p_proc (1):					/* major reserved word, further processing by	*/
      461 						/* cobol_output_tokens			*/
      462 						/*[4.4-1]*/
      463 	substr (reserved_word.l_info, 8, 1) = "1"b;
      464 	goto s_p_loop;
      465 
      466 s_p_proc (2):
      467 	goto s_p_loop;
      468 
      469 s_p_proc (3):					/* attention words */
      470 						/* corr,debugging,initialize,section */
      471 	if cobol_head_words (2) & ^cobol_head_words (3)
      472 	then goto s_p_loop;
      473 
      474 /* if in identification division... */
      475 
      476 	if g3.attn = "1001"b /* 9 */ & ^cobol_head_words (5)
      477 	then go to s_p_loop;			/* section in procedure division only */
      478 
      479 /*[4.0-1]*/
      480 	if g3.attn = "0110"b
      481 	then go to s_p_loop;
      482 	else at_wd (fixed (g3.attn)) = "1"b;
      483 
      484 	goto s_p_loop;
      485 
      486 s_p_proc (4):					/* missing division detection */
      487 						/* add,go,move,perform */
      488 	tm_d_ck = fixed (m_d_ck, 15);
      489 
      490 	if cobol_head_words (tm_d_ck)
      491 	then goto s_p_loop;				/* ignore if not in right division */
      492 
      493 	h_w_count = h_w_count + 1;
      494 
      495 	if h_w_count > 3
      496 	then do;
      497 		h_w_count = 0;
      498 		len = tm_d_ck;
      499 		goto gen_hdr;
      500 	     end;
      501 
      502 	goto s_p_loop;
      503 
      504 s_p_proc (5):					/* division headers */
      505 	tm_d_ck = fixed (m_d_ck, 15);
      506 
      507 	if cobol_head_words (tm_d_ck)
      508 	then do;
      509 		goto s_p_loop;
      510 	     end;
      511 
      512 	h_w_count = 0;				/* reset missing division header detector */
      513 
      514 /*[4.0-1]*/
      515 	if tm_d_ck <= 5				/*[4.0-1]*/
      516 	then do;
      517 		go to MDH (tm_d_ck);
      518 
      519 MDH (1):
      520 MDH (2):
      521 MDH (3):						/*[4.0-1]*/
      522 		ph_num = 1;
      523 		go to MD;
      524 
      525 MDH (4):						/*[4.0-1]*/
      526 		ph_num = 2;
      527 		go to MD;
      528 
      529 MDH (5):						/*[4.0-1]*/
      530 		ph_num = 3;
      531 		go to MD;
      532 
      533 MD:
      534 		cobol_head_words (tm_d_ck) = "1"b;
      535 
      536 /*[4.0-1]*/
      537 	     end;
      538 
      539 	if (tm_d_ck = 1) | (tm_d_ck = 2)
      540 	then goto div_head (tm_d_ck);
      541 
      542 	len = tm_d_ck - 1;
      543 
      544 	if cobol_head_words (len) = "0"b		/* if previous header is not present... */
      545 	then do;
      546 gen_hdr:
      547 		do len = 2 to tm_d_ck - 1;		/*-09/17/76-*/
      548 
      549 		     if ^cobol_head_words (len)
      550 		     then do;
      551 			     call gen_head;
      552 			     cobol_head_words (len) = "1"b;
      553 						/*						tm_d_ck = len;	*/
      554 			end;
      555 		end;
      556 	     end;
      557 
      558 	goto div_head (tm_d_ck);
      559 
      560 
      561 s_p_proc (6):					/* individual word processing */
      562 	goto lex_proc (fixed (g3.indv));
      563 
      564 /* SPECIAL PROCESSING FOR DIVISION HEADERS */
      565 
      566 div_head (1):					/* control division */
      567 	cobol_head_words (1) = "1"b;			/*[4.0-1]*/
      568 	goto s_p_loop;
      569 
      570 div_head (2):					/* identification division */
      571 	cobol_head_words (1) = "1"b;
      572 	cobol_head_words (2) = "1"b;			/*[4.0-1]*/
      573 
      574 div_head (3):					/* environment division */
      575 div_head (4):					/* data division */
      576 	goto s_p_loop;
      577 
      578 div_head (5):					/* procedure division */
      579 						/*[4.4-1]*/
      580 	if processing_report
      581 	then go to s_p_loop;
      582 
      583 
      584 	cobol_stack_sw = "1"b;
      585 	cobol_mfp = cobol_m2fp;			/* Put out all before procedure division and open new minpral. */
      586 	call cobol_gns1;
      587 
      588 	if ^(reserved_word.type = 1 & reserved_word.key = reswd_DIVISION)
      589 	then do;					/* Error in "procedure division" header. */
      590 		len = 5;
      591 		call gen_head;
      592 	     end;
      593 
      594 	cobol_head_words (5) = "1"b;
      595 
      596 /*[4.0-1]*/
      597 	ph_num = 3;
      598 
      599 /*[4.0-1]*/
      600 	if fixed_common.debug & decl_bit		/*[5.1-1]*/
      601 	then do;
      602 		if ss_2
      603 		then do;
      604 			call cobol_io_$set_state (2);
      605 			ss_2 = "0"b;
      606 		     end;				/* set cobol_get_rec to use cobol_db_phase$get_tok */
      607 						/*[4.0-1]*/
      608 		decl_bit = "0"b;			/*[4.0-1]*/
      609 	     end;
      610 
      611 	call cobol_gns1;
      612 
      613 	cobol_stack_sw = "0"b;
      614 
      615 	goto s_p_loop;
      616 
      617 /* SPECIAL PROCESSING FOR INDIVIDUAL RESERVED WORDS */
      618 
      619 lex_proc (1):					/* picture */
      620 	if ^cobol_head_words (4) | cobol_head_words (5)
      621 	then goto s_p_loop;				/* if not in data division... */
      622 	cobol_pic_switch = "1"b;
      623 
      624 	call cobol_gns1;
      625 
      626 	if reserved_word.type = 1
      627 	then if reserved_word.key = reswd_IS
      628 	     then call cobol_gns1;
      629 
      630 	cobol_pic_switch = "0"b;
      631 
      632 	goto s_p_loop;
      633 
      634 lex_proc (2):					/* decimal point */
      635 	if ^cobol_head_words (3) | cobol_head_words (4)
      636 	then goto s_p_loop;				/* if not in environment division... */
      637 						/*bypass DECIMAL-POINT in OBJECT IS phrase*/
      638 	if cobol_dp_sw
      639 	then goto s_p_loop;				/*if already processed "decimal-point is..."*/
      640 
      641 l_p2a:
      642 	cobol_dp_sw = "1"b;				/*bypass this code for recursive calls*/
      643 
      644 	call cobol_gns1;
      645 
      646 	cobol_dp_sw = "0"b;				/*re-enable*/
      647 
      648 	if reserved_word.type = 1
      649 	then do;
      650 		if reserved_word.key = 118		/* IS */
      651 		then do;
      652 			cobol_dp_sw = "1"b;		/*disable*/
      653 
      654 			call cobol_gns1;
      655 
      656 			cobol_dp_sw = "0"b;		/*re-enable*/
      657 
      658 			if reserved_word.type ^= 1
      659 			then goto l_p2c;
      660 		     end;
      661 
      662 		if reserved_word.key = 517		/*COMMA*/
      663 		then do;
      664 			cobol_decimal_point_character = ",";
      665 			cobol_comma_character = ".";
      666 			fixed_common.dec_comma = "1"b;
      667 l_p2b:
      668 			cobol_dp_sw = "1"b;		/*see lex_proc(2)*/
      669 			goto s_p_loop;
      670 		     end;
      671 
      672 
      673 
      674 		if reserved_word.key = 538
      675 		then goto l_p2b;			/*DECIMAL-POINT*/
      676 	     end;
      677 
      678 l_p2c:
      679 	call cobol_lexerr (22, "0"b, 13, "DECIMAL-POINT");
      680 
      681 	goto s_p_loop;
      682 
      683 lex_proc (3):					/* copy,replace */
      684 	call cobol_proc_copy;
      685 
      686 	c_f_sw = "0"b;
      687 
      688 	goto s_p_loop;
      689 
      690 lex_proc (4):					/* merge,sort */
      691 	if ^cobol_head_words (5)
      692 	then goto s_p_loop;				/* if not in procedure division... */
      693 
      694 	call cobol_proc_sort;
      695 
      696 	goto s_p_loop;
      697 
      698 lex_proc (5):					/* ASSIGN processing */
      699 	if ^cobol_head_words (3) | cobol_head_words (4)
      700 	then goto s_p_loop;
      701 
      702 /*if not environment division... */
      703 	cobol_lu_sw = "0"b;
      704 
      705 	call cobol_gns1;
      706 
      707 	if user_word.type = 8
      708 	then if user_word.length = 2
      709 	     then if substr (user_word.word, 1, 2) = "TO" | substr (user_word.word, 1, 2) = "to"
      710 		then do;
      711 			substr (user_word.l_info, 3, 1) = "1"b;
      712 			call cobol_gns1;
      713 		     end;
      714 
      715 	if reserved_word.type = 1 & reserved_word.key = reswd_TO
      716 	then call cobol_gns1;
      717 
      718 	cobol_lu_sw = "1"b;
      719 
      720 	goto s_p_loop;
      721 
      722 lex_proc (6):					/* declaratives */
      723 	if ^cobol_head_words (5)
      724 	then goto s_p_loop;				/* if not in procedure division... */
      725 
      726 /* If we are processing a paragraph or section name then do not increment dclr_sec.
      727*	   We want to mark the present paragraph/section name as being in the declaritive section.
      728*	   dclr_sec will be incremented after paragraph/section name is so marked. */
      729 
      730 /*[4.0-1]*/
      731 	DS = "1"b;
      732 
      733 	if p_n
      734 	then increment_dclr_sec = "1"b;
      735 	else dclr_sec = dclr_sec + 1;
      736 
      737 	goto s_p_loop;
      738 
      739 lex_proc (7):					/* end */
      740 	cobol_stack_sw = "1"b;
      741 
      742 	call cobol_gns1;
      743 
      744 	p = cobol_frst;
      745 
      746 	if reserved_word.type = 1
      747 	then do;
      748 
      749 		if reserved_word.key = 89		/* declaratives */
      750 		then do;
      751 
      752 			substr (p -> reserved_word.class.pd, 4, 1) = "1"b;
      753 						/*-11/15/76-*/
      754 			substr (p -> reserved_word.class.pd, 5, 1) = "1"b;
      755 						/*-11/15/76-*/
      756 
      757 /*[5.1-1]*/
      758 			if ss_3
      759 			then do;
      760 				call cobol_io_$set_state (3);
      761 				ss_3 = "0"b;
      762 			     end;			/* set cobol_get_rec to use cobol_db_phase$get_perf */
      763 
      764 		     end;
      765 
      766 		else if reserved_word.key = 191	/* cobol */
      767 		then do;
      768 
      769 			substr (p -> reserved_word.class.pd, 4, 1) = "1"b;
      770 						/*-11/15/76-*/
      771 			substr (p -> reserved_word.class.pd, 8, 1) = "1"b;
      772 						/*-11/15/76-*/
      773 
      774 /* end of program processing */
      775 
      776 			token.line = token.line - 1;
      777 
      778 			do len = 2 to 5;
      779 
      780 			     if ^cobol_head_words (len)
      781 			     then do;
      782 				     if len = 5
      783 				     then cobol_mfp = cobol_m2fp;
      784 				     call gen_head;
      785 				end;
      786 			end;
      787 			token.line = token.line + 1;
      788 
      789 /*[4.4-1]*/
      790 			if report_exists & ^real_end_report
      791 						/*[4.4-1]*/
      792 			then do;
      793 				token.l_info = "00100000"b;
      794 				p -> token.l_info = "00100000"b;
      795 			     end;
      796 			else /*do nothing*/
      797 			     ;
      798 			cobol_endprog_sw = "1"b;	/*[4.0-1]*/
      799 			if fixed_common.debug & db_bit/*[4.0-1]*/
      800 			then call cobol_lexerr (37, "0"b, 0, " ");
      801 
      802 		     end;
      803 	     end;
      804 
      805 	cobol_stack_sw = "0"b;
      806 
      807 	goto s_p_loop;
      808 
      809 lex_proc (8):					/* date compiled */
      810 	if ^cobol_head_words (2) | cobol_head_words (3)
      811 	then goto s_p_loop;
      812 
      813 /* if not in identification division... */
      814 
      815 	if reserved_word.column > 11
      816 	then goto s_p_loop;
      817 
      818 	fixed_common.date_comp_ln = reserved_word.line;
      819 	cobol_$date_compiled_sw = 1;
      820 
      821 	goto scanoff_id;
      822 
      823 lex_proc (9):					/* currency sign */
      824 	if ^cobol_head_words (3) | cobol_head_words (4)
      825 	then goto s_p_loop;
      826 
      827 /* if not in environment division... */
      828 
      829 l_p9a:
      830 	call cobol_gns1;
      831 
      832 	if reserved_word.type = 1
      833 	then do;
      834 		if reserved_word.key = 118
      835 		then goto l_p9a;
      836 		if reserved_word.key = 245
      837 		then goto l_p9a;
      838 	     end;
      839 
      840 	if alphanum_lit.type ^= 3
      841 	then do;
      842 		call cobol_lexerr (22, "0"b, 13, "CURRENCY SIGN");
      843 		goto s_p_loop;
      844 	     end;
      845 
      846 	fixed_common.currency = alphanum_lit.string;
      847 
      848 	goto s_p_loop;
      849 
      850 lex_proc (10):					/* debugging */
      851 						/*[4.0-1]*/
      852 	if cobol_head_words (3) & ^cobol_head_words (4)	/*[4.0-1]*/
      853 	then do;
      854 		call cobol_gns1;			/* ED */
      855 
      856 /*[4.0-1]*/
      857 		if reserved_word.type = 1 & reserved_word.key = 230
      858 						/*DEBUGGING MODE */
      859 						/*[4.4-1]*/
      860 		then do;
      861 			fixed_common.debug = "1"b;
      862 
      863 /*[4.4-1]*/
      864 			cobol_debug_mode = "1"b;	/* used by cobol_merge */
      865 						/*[4.0-1]*/
      866 		     end;
      867 
      868 /*[4.0-1]*/
      869 	     end;
      870 
      871 
      872 /*[4.0-1]*/
      873 	if cobol_head_words (5)			/*[4.0-1]*/
      874 	then do;
      875 		fixed_common.use_debug = "1"b;	/* USE FOR DEBUGGING */
      876 
      877 /*[4.0-1]*/
      878 		if fixed_common.debug		/*[4.0-1]*/
      879 		then do;
      880 			call cobol_output_tokens$proc_def_ptr (PDF);
      881 
      882 /*[4.0-1]*/
      883 			call cobol_db_phase$proc_def_ptr (PDF);
      884 						/*[4.0-1]*/
      885 		     end;
      886 
      887 /*[4.0-1]*/
      888 	     end;
      889 
      890 	goto s_p_loop;
      891 
      892 lex_proc (11):					/* program-id */
      893 	if ^cobol_head_words (2) | cobol_head_words (3)
      894 	then goto s_p_loop;
      895 
      896 	if reserved_word.column > 11
      897 	then goto s_p_loop;
      898 
      899 	call cobol_gns1;
      900 
      901 	if reserved_word.type ^= 1
      902 	then goto l_p11a;
      903 
      904 	if reserved_word.key ^= reschar_PERIOD
      905 	then goto l_p11a;
      906 
      907 	cobol_lu_sw = "0"b;
      908 
      909 	if fixed_common.compiler_id = 3
      910 	then cobol_progid_sw = "1"b;
      911 
      912 	call cobol_gns1;
      913 
      914 	cobol_progid_sw = "0"b;
      915 
      916 	if reserved_word.type ^= 8
      917 	then do;
      918 l_p11a:
      919 		call cobol_lexerr (22, "0"b, 10, "PROGRAM-ID");
      920 	     end;
      921 	else fixed_common.prog_name = substr (user_word.word, 1, user_word.length);
      922 
      923 	cobol_lu_sw = "1"b;
      924 
      925 	goto scanoff_id;
      926 
      927 lex_proc (12):					/* identification division comment scanoff routine */
      928 						/* author,date-written,installation,security */
      929 	if ^cobol_head_words (2) | cobol_head_words (3)
      930 	then goto s_p_loop;
      931 
      932 	if reserved_word.column > 11
      933 	then goto s_p_loop;
      934 
      935 scanoff_id:
      936 	cobol_scanoff_sw = "1"b;
      937 
      938 	call cobol_gns;
      939 
      940 	cobol_scanoff_sw = "0"b;
      941 	cobol_$date_compiled_sw = 0;
      942 
      943 	goto s_p_loop;
      944 
      945 lex_proc (13):					/* working-storage */
      946 						/*[4.0-1]*/
      947 	if cobol_head_words (4) & ^cobol_head_words (5) & reserved_word.column <= 11
      948 						/*[4.0-1]*/
      949 	then do;
      950 		call cobol_gns1;
      951 
      952 /*[4.0-1]*/
      953 		if reserved_word.type ^= 1
      954 		then go to s_p_loop;		/*[4.0-1]*/
      955 		if reserved_word.key ^= reswd_SECTION
      956 		then go to s_p_loop;
      957 
      958 /*[5.1-1] */
      959 		if ss_1
      960 		then do;
      961 			call cobol_io_$set_state (1);
      962 			ss_1 = "0"b;
      963 		     end;				/* set cobol_get_rec to use cobol_db_phase$get_rec */
      964 
      965 /*[4.0-1]*/
      966 		call cobol_gns1;			/* . */
      967 
      968 /*[4.0-1]*/
      969 		if reserved_word.type ^= 1
      970 		then go to s_p_loop;		/*[4.0-1]*/
      971 		if reserved_word.key ^= 189
      972 		then go to s_p_loop;		/* . */
      973 
      974 /*[4.0-1]*/
      975 		db_bit = "0"b;
      976 
      977 /*[4.0-1]*/
      978 	     end;
      979 
      980 /*[4.0-1]*/
      981 	go to s_p_loop;
      982 
      983 /*[4.2-1]*/
      984 
      985 /* Following added to help diagnosis sort errors.  Gets the file name associated with the SD and saves
      986*   in in  sort_file_list.  Maximum of SD pre program */
      987 /* SD */
      988 lex_proc (14):
      989 	if ^cobol_head_words (4) | cobol_head_words (5)
      990 	then goto s_p_loop;
      991 
      992 	if reserved_word.column > 11
      993 	then goto s_p_loop;
      994 
      995 	call cobol_gns1;
      996 
      997 	last_sort_file = last_sort_file + 1;
      998 	sort_file_list (last_sort_file) = substr (user_word.word, 1, user_word.length);
      999 
     1000 
     1001 	goto s_p_loop;
     1002 
     1003 lex_proc (15):					/* REPORT, REPORTING, GENERATE, TERMINATE, INITIATE, SUPPRESS */
     1004 						/*[4.4-1]*/
     1005 	if reserved_word.key = reswd_REPORT		/* REPORT */
     1006 						/*[4.4-1]*/
     1007 	then do;
     1008 
     1009 
     1010 /*[4.4-1]*/
     1011 		if cobol_head_words (4) & ^cobol_head_words (5) & reserved_word.column <= 11
     1012 						/*[4.4-1]*/
     1013 		then do;
     1014 
     1015 /*[4.4-1]*/
     1016 			call cobol_gns1;
     1017 
     1018 /*[4.4-1]*/
     1019 			if reserved_word.type ^= 1
     1020 			then go to s_p_loop;
     1021 
     1022 /*[4.4-1]*/
     1023 			if reserved_word.key ^= reswd_SECTION
     1024 			then go to s_p_loop;
     1025 
     1026 /*[4.4-1]*/
     1027 			call cobol_gns1;
     1028 
     1029 			if reserved_word.type ^= 1
     1030 			then go to s_p_loop;
     1031 
     1032 /*[4.4-1]*/
     1033 			if reserved_word.key ^= reschar_PERIOD
     1034 			then go to s_p_loop;
     1035 
     1036 /*[4.4-1]*/
     1037 			if report_exists		/*[4.4-1]*/
     1038 			then call cobol_lexerr (39, "0"b, 6, "REPORT");
     1039 						/*[4.4-1]*/
     1040 			else report_exists, fixed_common.report = "1"b;
     1041 
     1042 /*[4.4-1]*/
     1043 		     end;				/*[4.4-1]*/
     1044 	     end;					/*[4.4-1]*/
     1045 	else /*[4.4-1]*/
     1046 	     if reserved_word.key = reswd_REPORTING	/* REPORTING */
     1047 						/*[4.4-1]*/
     1048 	then do;
     1049 
     1050 /*[4.4-1]*/
     1051 		if cobol_head_words (5)		/*[4.4-1]*/
     1052 		then do;
     1053 			fixed_common.use_reporting = "1"b;
     1054 						/* USE BEFORE REPORTING */
     1055 
     1056 /*[4.4-1]*/
     1057 			if report_exists		/*[4.4-1]*/
     1058 			then do;
     1059 				call cobol_output_tokens$proc_def_ptr (PDF);
     1060 
     1061 /*[4.4-1]*/
     1062 				call cobol_db_phase$proc_def_ptr (PDF);
     1063 						/*[4.4-1]*/
     1064 			     end;
     1065 
     1066 /*[4.4-1]*/
     1067 			call prefix_qual_name;
     1068 
     1069 /*[4.4-1]*/
     1070 		     end;
     1071 
     1072 /*[4.4-1]*/
     1073 	     end;					/*[4.4-1]*/
     1074 	else /*[4.4-1]*/
     1075 	     if reserved_word.key = reswd_INITIATE	/* INITIATE */
     1076 						/*[4.4-1]*/
     1077 	then do;
     1078 		if ^cobol_head_words (5)
     1079 		then go to s_p_loop;		/* not in PD */
     1080 
     1081 
     1082 /*[4.4-1]*/
     1083 		call name_seq ("I");		/*[4.4-1]*/
     1084 	     end;					/*[4.4-1]*/
     1085 	else /*[4.4-1]*/
     1086 	     if reserved_word.key = reswd_TERMINATE	/* TERMINATE */
     1087 						/*[4.4-1]*/
     1088 	then do;
     1089 		if ^cobol_head_words (5)
     1090 		then go to s_p_loop;		/* not in PD */
     1091 
     1092 /*[4.4-1]*/
     1093 		call name_seq ("T");		/*[4.4-1]*/
     1094 	     end;					/*[4.4-1]*/
     1095 	else /*[4.4-1]*/
     1096 	     if reserved_word.key = reswd_GENERATE	/* GENERATE */
     1097 						/*[4.4-1]*/
     1098 	then do;					/*[4.4-1]*/
     1099 		if cobol_head_words (5)
     1100 		then call prefix_qual_name;		/*[4.4-1]*/
     1101 	     end;					/*[4.4-1]*/
     1102 	else /*[4.4-1]*/
     1103 	     if reserved_word.key = reswd_SUPPRESS	/*[4.4-1]*/
     1104 	then do;
     1105 		if ^cobol_head_words (5)
     1106 		then go to s_p_loop;
     1107 
     1108 /*[5.2-1]*/
     1109 /* call cobol_gns1; */
     1110 /*[5.2-1]*/
     1111 /* if reserved_word.type ^= 1 then go to s_p_loop; */
     1112 /*[5.2-1]*/
     1113 /* if reserved_word.key ^= reswd_PRINTING then go to s_p_loop; */
     1114 
     1115 /*[4.4-1]*/
     1116 		user_word.type = 8;			/* change to type 8 token */
     1117 						/*[4.4-2]*/
     1118 		user_word.length = 2;		/*[4.4-1]*/
     1119 		user_word.size = 26;		/*[4.4-1]*/
     1120 		substr (user_word.word, 1, 2) = "SS";	/*[4.4-1]*/
     1121 	     end;
     1122 
     1123 /*[4.4-1]*/
     1124 	go to s_p_loop;
     1125 
     1126 prefix_name:
     1127      proc (ch);
     1128 
     1129 /*[4.4-1]*/
     1130 declare	ch		char (1),
     1131 	len		fixed bin;
     1132 
     1133 /*[4.4-1]*/
     1134 	len = user_word.length;			/*[4.4-1]*/
     1135 	substr (user_word.word, 1, len + 1) = ch || substr (user_word.word, 1, len);
     1136 						/*[4.4-1]*/
     1137 	user_word.length = len + 1;
     1138 	user_word.size = user_word.size + 1;
     1139 
     1140      end;
     1141 
     1142 prefix_qual_name:
     1143      proc;
     1144 
     1145 /*[4.4-1]*/
     1146 	call cobol_gns1;
     1147 
     1148 /*[4.4-1]*/
     1149 	if user_word.type ^= 8
     1150 	then return;
     1151 
     1152 /*[4.4-1]*/
     1153 	if report_exists
     1154 	then call prefix_name ("G");
     1155 	else call prefix_name ("g");
     1156 
     1157 /*[4.4-1]*/
     1158 	call cobol_gns1;
     1159 
     1160 /*[4.4-1]*/
     1161 	if reserved_word.type ^= 1
     1162 	then return;
     1163 
     1164 /*[4.4-1]*/
     1165 	if reserved_word.key ^= reswd_OF & reserved_word.key ^= reswd_IN
     1166 	then return;				/*[4.4-1]*/
     1167 	call cobol_gns1;
     1168 
     1169 /*[4.4-1]*/
     1170 	if user_word.type ^= 8
     1171 	then return;
     1172 
     1173 /*[4.4-1]*/
     1174 	if report_exists
     1175 	then call prefix_name ("R");
     1176 	else call prefix_name ("r");
     1177 
     1178      end;
     1179 
     1180 name_seq:
     1181      proc (ch);
     1182 
     1183 /*[4.4-1]*/
     1184 declare	ch		char (1);
     1185 
     1186 /*[4.4-1]*/
     1187 	do while ("1"b);
     1188 
     1189 /*[4.4-1]*/
     1190 	     call cobol_gns1;			/*[4.4-1]*/
     1191 	     if user_word.type ^= 8
     1192 	     then return;
     1193 
     1194 /*[4.4-1]*/
     1195 	     call prefix_name (ch);
     1196 
     1197 /*[4.4-1]*/
     1198 	end;
     1199 
     1200      end;
     1201 
     1202 /* This routine generates missing headers and inserts them at the beginning of the token stack */
     1203 
     1204 gen_head:
     1205      proc;
     1206 
     1207 dcl	div_no		fixed bin;
     1208 dcl	h_key		(5) fixed bin static init (520, 552, 540, 196, 142);
     1209 dcl	h_class		(5) bit (26) static
     1210 			init ("00000000000000000001"b, "00000000000000000011"b, "00000000000000000011"b,
     1211 			"000000000010000000011"b, "000000001000000000101"b);
     1212 dcl	h_ji		(5) fixed bin static init (0, 0, 0, 0, 6);
     1213 
     1214 	if fixed_common.comp_level < "5"
     1215 	then call diag (160);			/* for levelling, A DIVISION is missing*/
     1216 	tfirst = cobol_frst;
     1217 	tcurrent = cobol_current;
     1218 	ttop = cobol_top;
     1219 	save_stsw = cobol_stack_sw;
     1220 	cobol_stack_sw = "1"b;
     1221 	cobol_frst = null ();
     1222 
     1223 	if len = 5
     1224 	then call cobol_lexerr (21, "0"b, hdr_len (len), (hdr (len)));
     1225 	else call cobol_lexerr (19, "0"b, hdr_len (len), (hdr (len)));
     1226 
     1227 /* 		call cobol_insert_token(6, 18 + hdr_lngth(len));
     1228*/* 		source.column = 0;
     1229*/* 		source.length = 18 + hdr_lngth(len);
     1230*/* 		source.image = "	  " || substr(hdr(len),1,hdr_lngth(len))
     1231*/*			 || " DIVISION." || cobol_new_line_character;
     1232*/**/
     1233 
     1234 
     1235 	call cobol_insert_token (1, 0);
     1236 
     1237 	source.column = 8;
     1238 	reserved_word.key = h_key (len);
     1239 	string (reserved_word.class) = h_class (len);	/*-11/15/76-*/
     1240 	reserved_word.jump_index = h_ji (len);
     1241 
     1242 	call cobol_insert_token (1, 0);
     1243 
     1244 	source.column = 23;
     1245 	reserved_word.key = reswd_DIVISION;
     1246 	reserved_word.class.mer = "0011"b;		/*-11/15/76-*/
     1247 
     1248 	call cobol_insert_token (1, 0);
     1249 
     1250 	source.column = 31;
     1251 	reserved_word.key = reschar_PERIOD;
     1252 	string (reserved_word.class) = "0001"b;		/*-11/15/76-*/
     1253 
     1254 	call cobol_output_tokens;
     1255 
     1256 	cobol_frst = tfirst;
     1257 	cobol_current = tcurrent;
     1258 	cobol_top = ttop;
     1259 	cobol_stack_sw = save_stsw;
     1260 
     1261      end gen_head;
     1262 
     1263 /*[4.2-1]*/
     1264 
     1265 /* This entry is used by idedsyn and checks to see if sort_name is a
     1266*   file that was mentioned in a SD clause */
     1267 
     1268 check_sort_list:
     1269      entry (sort_name) returns (bit (1));
     1270 
     1271 dcl	sort_name		char (*);
     1272 
     1273 	do i = 1 to last_sort_file;
     1274 
     1275 	     if sort_name = sort_file_list (i)
     1276 	     then return ("1"b);
     1277 
     1278 	end;
     1279 
     1280 	return ("0"b);
     1281 
     1282 
     1283 /*======================================*/
     1284 
     1285 
     1286 /* general token */
     1287 
     1288 dcl	1 token		based (cobol_current),
     1289 	  2 fwd_link	ptr,
     1290 	  2 back_link	ptr,
     1291 	  2 rep_link	ptr,
     1292 	  2 l_info	bit (8),
     1293 	  2 size		fixed bin,
     1294 	  2 line		fixed bin,
     1295 	  2 column	fixed bin,
     1296 	  2 type		fixed bin;
     1297 
     1298 /*   source    */
     1299 dcl	1 source		based (cobol_current),
     1300 	  2 fwd_link	pointer,
     1301 	  2 back_link	pointer,
     1302 	  2 rep_link	pointer,
     1303 	  2 l_info	bit (8),
     1304 	  2 size		fixed bin,
     1305 	  2 line		fixed bin,
     1306 	  2 column	fixed bin,
     1307 	  2 type		fixed bin,		/* = 6 */
     1308 	  2 info		bit (8),
     1309 	  2 length	fixed bin,
     1310 	  2 image		char (source.length);
     1311 
     1312 
     1313 /*   user_word    */
     1314 dcl	1 user_word	based (cobol_current),
     1315 	  2 fwd_link	pointer,
     1316 	  2 back_link	pointer,
     1317 	  2 rep_link	pointer,
     1318 	  2 l_info	bit (8),
     1319 	  2 size		fixed bin,
     1320 	  2 line		fixed bin,
     1321 	  2 column	fixed bin,
     1322 	  2 type		fixed bin,		/* = 8 */
     1323 	  2 info		bit (8),
     1324 	  2 length	fixed bin,
     1325 	  2 word		char (30);
     1326 
     1327 
     1328 /*   procname    */
     1329 dcl	1 procname	static,
     1330 	  2 size		fixed bin,
     1331 	  2 line		fixed bin,
     1332 	  2 column	fixed bin,
     1333 	  2 type		fixed bin,		/* = 7 */
     1334 	  2 st_ptr_1	fixed bin,
     1335 	  2 st_ptr_2	fixed bin,
     1336 	  2 pr_rec_1	fixed bin,
     1337 	  2 pr_rec_2	fixed bin,
     1338 	  2 info		bit (8),
     1339 	  2 priority	char (2),
     1340 	  2 repl_bits	bit (8),
     1341 	  2 section_num	fixed bin,
     1342 	  2 proc_num	fixed bin,
     1343 	  2 def_line	fixed bin,
     1344 	  2 length	fixed bin,
     1345 	  2 name		char (30);
     1346 
     1347 /*   reserved_word    */
     1348 dcl	1 reserved_word	based (cobol_current),
     1349 	  2 fwd_link	pointer,
     1350 	  2 back_link	pointer,
     1351 	  2 rep_link	pointer,
     1352 	  2 l_info	bit (8),
     1353 	  2 size		fixed bin,
     1354 	  2 line		fixed bin,
     1355 	  2 column	fixed bin,
     1356 	  2 type		fixed bin,		/* = 1 */
     1357 	  2 key		fixed bin,
     1358 	  2 class		aligned,
     1359 	    3 pd		bit (8) unal,
     1360 	    3 dd		bit (8) unal,
     1361 	    3 others	unal,
     1362 	      4 mer	bit (4) unal,
     1363 	      4 ie	bit (1) unal,
     1364 	      4 rw	bit (5) unal,
     1365 	  2 jump_index	fixed bin aligned,		/*[4.4-1]*/
     1366 	  2 length	fixed bin,		/*[4.4-1]*/
     1367 	  2 name		char (32);		/*   alphanum_lit    */
     1368 dcl	1 alphanum_lit	based (cobol_current),
     1369 	  2 fwd_link	pointer,
     1370 	  2 back_link	pointer,
     1371 	  2 rep_link	pointer,
     1372 	  2 l_info	bit (8),
     1373 	  2 size		fixed bin,
     1374 	  2 line		fixed bin,
     1375 	  2 column	fixed bin,
     1376 	  2 type		fixed bin,		/* = 3 */
     1377 	  2 info		bit (8),
     1378 	  2 length	fixed bin,
     1379 	  2 string	char (200);
     1380 
     1381 /*   numeric_lit    */
     1382 dcl	1 numeric_lit	based (cobol_current),
     1383 	  2 fwd_link	pointer,
     1384 	  2 back_link	pointer,
     1385 	  2 rep_link	pointer,
     1386 	  2 l_info	bit (8),
     1387 	  2 size		fixed bin,
     1388 	  2 line		fixed bin,
     1389 	  2 column	fixed bin,
     1390 	  2 type		fixed bin,		/* = 2 */
     1391 	  2 info		bit (8),
     1392 	  2 sign		char (1),
     1393 	  2 exp_sign	char (1),
     1394 	  2 exp_places	fixed bin,
     1395 	  2 places_left	fixed bin,
     1396 	  2 places_right	fixed bin,
     1397 	  2 places	fixed bin,
     1398 	  2 literial	char (30);
     1399 
     1400 dcl	cobol_io_$set_state entry (fixed bin);
     1401 dcl	cobol_lexerr	entry (fixed bin, bit (1), fixed bin, char (60)) external;
     1402 dcl	(cobol_gns1, cobol_gns, cobol_proc_sort, cobol_output_tokens)
     1403 			entry external;
     1404 dcl	cobol_vdwf_sput	entry (ptr, bit (32), ptr, fixed bin, char (5)) ext;
     1405 dcl	cobol_insert_token	entry (fixed bin, fixed bin) external;
     1406 dcl	cobol_delete_tokens entry (pointer, pointer) external;
     1407 dcl	cobol_proc_copy	entry external;		/*[4.0-1]*/
     1408 declare	cobol_db_phase$initialize
     1409 			entry;			/*[4.0-1]*/
     1410 declare	cobol_output_tokens$proc_def_ptr
     1411 			entry (ptr);		/*[4.0-1]*/
     1412 declare	cobol_db_phase$proc_def_ptr
     1413 			entry (ptr);
     1414 dcl	xdepending_key	fixed bin static init (92);
     1415 dcl	xnote_key		fixed bin static init (201);
     1416 dcl	xcomma_key	fixed bin static init (517);
     1417 dcl	tcur		ptr;
     1418 dcl	rw_dscr		(200) char (9) based;
     1419 dcl	dscr_indx		fixed bin;		/*[4.0-1]*/
     1420 declare	PDF		ptr;
     1421 dcl	dscr_indx_b	char (4) based (addr (dscr_indx));
     1422 dcl	hv1c		char (1) static;
     1423 dcl	st		bit (32);
     1424 dcl	save_stsw		bit (1);
     1425 dcl	init_error	bit (1);
     1426 dcl	rec_ad		char (5);
     1427 dcl	tmvr		char (procname.size) based (addr (procname));
     1428 dcl	base		fixed bin static;
     1429 dcl	len		fixed bin static;
     1430 dcl	delta		fixed bin static;
     1431 dcl	mult_adj		fixed bin;
     1432 dcl	p_n		bit (1) static init ("0"b),	/* paragraph name processing in progress */
     1433 	init_tab		bit (1) static init ("1"b),
     1434 	c_f_sw		bit (1) static,
     1435 	area_a_sw		bit (1) static,
     1436 	(p, dt1, dt2)	pointer static,
     1437 	(secint, i)	fixed bin static;
     1438 dcl	1 f_c_ind		based (ad_attn),
     1439 	  2 std_opts	bit (32),
     1440 	  2 at_wd		(9) bit (1);
     1441 dcl	1 sint		based (addr (secint)),
     1442 	  2 fill		char (2),
     1443 	  2 char2		char (2);
     1444 dcl	(h_w_count, dclr_sec, tm_d_ck)
     1445 			fixed bin static;
     1446 dcl	increment_dclr_sec	bit (1) static;
     1447 dcl	(tfirst, tcurrent, ttop, ad_attn)
     1448 			ptr static;
     1449 dcl	hdr		(5) char (14) init ("CONTROL", "IDENTIFICATION", "ENVIRONMENT", "DATA", "PROCEDURE")
     1450 			static options (constant);
     1451 dcl	hdr_len		(5) fixed bin init (7, 14, 11, 4, 9) static options (constant);
     1452 dcl	hdr_lngth		(5) fixed bin static init (7, 14, 11, 4, 9);
     1453 dcl	s_p_i		fixed bin static;
     1454 
     1455 
     1456 dcl	addr		builtin;
     1457 dcl	fixed		builtin;
     1458 dcl	mod		builtin;
     1459 dcl	null		builtin;
     1460 dcl	substr		builtin;
     1461 dcl	unspec		builtin;
     1462 
     1463 
     1464 /*[5.1-1]*/
     1465 dcl	1 indicators	static int,		/*[5.1-1]*/
     1466 	  2 decl_bit	bit (1),			/*[5.1-1]*/
     1467 	  2 firsttime	bit (1),			/*[5.1-1]*/
     1468 	  2 db_bit	bit (1),			/*[5.1-1]*/
     1469 	  2 ss_1		bit (1),			/*[5.1-1]*/
     1470 	  2 ss_2		bit (1),			/*[5.1-1]*/
     1471 	  2 ss_3		bit (1);
     1472 
     1473 dcl	state		fixed bin static int;
     1474 dcl	reswd_len		fixed bin;
     1475 dcl	reswd_table_ptr	ptr static init (null ());
     1476 dcl	1 reswd_table	based (reswd_table_ptr),
     1477 	  2 stop_word	bit (36),
     1478 	  2 g2_offset	(30) fixed bin;
     1479 dcl	g2_ptr		(30) ptr static;		/*[4.0-1]*/
     1480 declare	DS		bit (1) internal static;
     1481 dcl	g2		(48:122) fixed bin based;
     1482 dcl	g1_ptr		ptr;
     1483 dcl	g1_stop		bit (36) based (g1_ptr) aligned;
     1484 dcl	stop_bits		bit (36) static options (constant) init ((36)"1"b);
     1485 
     1486 declare	1 shdr		based (cobol_m1fp),
     1487 	  2 x1		char (12),
     1488 	  2 next		fixed bin;
     1489 
     1490 
     1491 dcl	1 g1		based (g1_ptr) aligned,
     1492 	  2 name		char (reswd_len) aligned,
     1493 	  2 g3		aligned,			/* item in reserved word table */
     1494 	    3 key		fixed bin (17) unal,
     1495 	    3 class	unal,
     1496 	      4 pd	bit (7) unal,
     1497 	      4 dd	bit (6) unal,
     1498 	      4 others	unal,
     1499 	        5 mer	bit (4) unal,
     1500 	        5 ie	bit (1) unal,
     1501 	        5 rw	bit (5) unal,
     1502 	    3 ji		bit (4) unal,
     1503 	    3 s_p_key	bit (6) unal,
     1504 	    3 old_lvl_rstr	unal,
     1505 	      4 non_ansi	bit (1) unal,
     1506 	      4 lvl_rstr	bit (3) unal,
     1507 	    3 inst_rstr	bit (4) unal,
     1508 	    3 attn	bit (4) unal,
     1509 	    3 m_d_ck	bit (4) unal,
     1510 	    3 indv	bit (4) unal,
     1511 	    3 rfi		bit (1) unal,
     1512 	    3 division	bit (3) unal,
     1513 	    3 dialect	bit (5) unal,
     1514 	  2 next		aligned;
     1515 dcl	mcode		fixed bin (35);
     1516 dcl	(g1_off, rwl)	fixed bin;
     1517 
     1518 dcl	ioa_		entry options (variable);
     1519 dcl	hcs_$make_ptr	entry (ptr, char (*), char (*), ptr, fixed bin (35));
     1520 
     1521 dcl	string		builtin;
     1522 
     1523 
     1524 /*[4.2-1]*/
     1525 dcl	sort_file_list	(20) char (30) varying internal static,
     1526 	last_sort_file	fixed bin internal static;
     1527 
     1528 dcl	cobol_c_list	entry (ptr);
     1529 dcl	lev_message_ptr	ptr;
     1530 dcl	1 lev_message	internal static,
     1531 	  2 size		fixed bin init (28),
     1532 	  2 line		fixed bin init (0),
     1533 	  2 column	fixed bin init (0),
     1534 	  2 type		fixed bin init (5),
     1535 	  2 run		fixed bin init (9),
     1536 	  2 number	fixed bin init (0),
     1537 	  2 info		bit (32) init ("0"b);
     1538 diag:
     1539      proc (num);
     1540 dcl	num		fixed bin;
     1541 
     1542 	lev_message.line = user_word.line;
     1543 	lev_message.column = user_word.column;
     1544 	lev_message.number = num;
     1545 	lev_message_ptr = addr (lev_message);
     1546 
     1547 	call cobol_c_list (lev_message_ptr);
     1548 
     1549      end;
     1550 
     1551 
  1     1 
  1     2 /* BEGIN INCLUDE FILE ... cobol_reswd_values.incl.pl1 */
  1     3 /* CREATED ON 06/15/76 BY ORN */
  1     4 
  1     5 /* This include file contains the value associated with each reserved word
  1     6*   used by the Multics COBOL compiler.  These are declared as constants
  1     7*   and are not allocated unless referenced.  Eash name is in the form:
  1     8*
  1     9*	reswd_<reserved word name>
  1    10*     or
  1    11*	reschar_<special character name>
  1    12*
  1    13*   where <reserved word name> is the upper case transliteration of the
  1    14*   reserved word with any hyphens replaced by underscores and
  1    15*   <special character name> is the upper case name of the one
  1    16*   character reserved words (e.g. EQ, GT, MINUS, LPARENS, etc.)  */
  1    17 
  1    18 
  1    19 dcl reswd_ACCEPT		fixed bin static options(constant) init(001);
  1    20 dcl reswd_ADD		fixed bin static options(constant) init(002);
  1    21 dcl reswd_ERROR		fixed bin static options(constant) init(003);
  1    22 dcl reswd_ALTER		fixed bin static options(constant) init(004);
  1    23 dcl reswd_CALL		fixed bin static options(constant) init(005);
  1    24 dcl reswd_OVERFLOW		fixed bin static options(constant) init(006);
  1    25 dcl reswd_CANCEL		fixed bin static options(constant) init(007);
  1    26 dcl reswd_CLOSE		fixed bin static options(constant) init(008);
  1    27 dcl reswd_DIVIDE		fixed bin static options(constant) init(009);
  1    28 dcl reswd_MULTIPLY		fixed bin static options(constant) init(010);
  1    29 dcl reswd_SUBTRACT		fixed bin static options(constant) init(011);
  1    30 dcl reswd_EXIT		fixed bin static options(constant) init(012);
  1    31 dcl reswd_INITIALIZE	fixed bin static options(constant) init(013);
  1    32 dcl reswd_GO		fixed bin static options(constant) init(014);
  1    33 dcl reswd_MERGE		fixed bin static options(constant) init(015);
  1    34 dcl reswd_INITIATE		fixed bin static options(constant) init(016);
  1    35 dcl reswd_INSPECT		fixed bin static options(constant) init(017);
  1    36 dcl reswd_MOVE		fixed bin static options(constant) init(018);
  1    37 dcl reswd_OPEN		fixed bin static options(constant) init(019);
  1    38 dcl reswd_PERFORM		fixed bin static options(constant) init(020);
  1    39 dcl reswd_READ		fixed bin static options(constant) init(021);
  1    40 dcl reswd_DELETE		fixed bin static options(constant) init(022);
  1    41 dcl reswd_RECEIVE		fixed bin static options(constant) init(023);
  1    42 dcl reswd_RELEASE		fixed bin static options(constant) init(024);
  1    43 dcl reswd_RETURN		fixed bin static options(constant) init(025);
  1    44 dcl reswd_SEARCH		fixed bin static options(constant) init(026);
  1    45 dcl reswd_REWRITE		fixed bin static options(constant) init(027);
  1    46 /* 028 029 */
  1    47 dcl reswd_SEND		fixed bin static options(constant) init(030);
  1    48 dcl reswd_SET		fixed bin static options(constant) init(031);
  1    49 /* 032 */
  1    50 dcl reswd_STOP		fixed bin static options(constant) init(033);
  1    51 dcl reswd_STRING		fixed bin static options(constant) init(034);
  1    52 dcl reswd_SUSPEND		fixed bin static options(constant) init(035);
  1    53 dcl reswd_TERMINATE		fixed bin static options(constant) init(036);
  1    54 dcl reswd_UNSTRING		fixed bin static options(constant) init(037);
  1    55 dcl reswd_WRITE		fixed bin static options(constant) init(038);
  1    56 dcl reswd_USE		fixed bin static options(constant) init(039);
  1    57 dcl reswd_COMPUTE		fixed bin static options(constant) init(040);
  1    58 dcl reswd_DISABLE		fixed bin static options(constant) init(041);
  1    59 dcl reswd_DISPLAY		fixed bin static options(constant) init(042);
  1    60 dcl reswd_ENABLE		fixed bin static options(constant) init(043);
  1    61 dcl reswd_ENTER		fixed bin static options(constant) init(044);
  1    62 dcl reswd_GENERATE		fixed bin static options(constant) init(045);
  1    63 dcl reswd_HOLD		fixed bin static options(constant) init(046);
  1    64 dcl reswd_IF		fixed bin static options(constant) init(047);
  1    65 dcl reswd_PROCESS		fixed bin static options(constant) init(048);
  1    66 dcl reswd_SORT		fixed bin static options(constant) init(049);
  1    67 dcl reswd_EXAMINE		fixed bin static options(constant) init(050);
  1    68 dcl reswd_TRANSFORM		fixed bin static options(constant) init(051);
  1    69 /* 052 053 054 055 */
  1    70 dcl reswd_START		fixed bin static options(constant) init(056);
  1    71 dcl reswd_SUPPRESS		fixed bin static options(constant) init(057);
  1    72 dcl reswd_PURGE		fixed bin static options(constant) init(058);
  1    73 /* 059 060 061 062 063 064 065 066 067 068 069 070 */
  1    74 dcl reswd_ADVANCING		fixed bin static options(constant) init(071);
  1    75 dcl reswd_AFTER		fixed bin static options(constant) init(072);
  1    76 dcl reswd_ALL		fixed bin static options(constant) init(073);
  1    77 dcl reswd_ALPHABETIC	fixed bin static options(constant) init(074);
  1    78 dcl reswd_ALPHANUMERIC	fixed bin static options(constant) init(075);
  1    79 dcl reswd_ALPHANUMERIC_EDITED	fixed bin static options(constant) init(076);
  1    80 dcl reswd_AND		fixed bin static options(constant) init(077);
  1    81 dcl reswd_ASCENDING		fixed bin static options(constant) init(078);
  1    82 dcl reswd_AT		fixed bin static options(constant) init(079);
  1    83 dcl reswd_BEFORE		fixed bin static options(constant) init(080);
  1    84 dcl reswd_BEGINNING		fixed bin static options(constant) init(081);
  1    85 dcl reswd_BY		fixed bin static options(constant) init(082);
  1    86 dcl (reswd_CHARACTER,
  1    87      reswd_CHARACTERS)	fixed bin static options(constant) init(083);
  1    88 dcl reswd_COUNT		fixed bin static options(constant) init(084);
  1    89 dcl reswd_SSF		fixed bin static options(constant) init(085);
  1    90 dcl reswd_DATE		fixed bin static options(constant) init(086);
  1    91 dcl reswd_DAY		fixed bin static options(constant) init(087);
  1    92 dcl reswd_DEBUGGING		fixed bin static options(constant) init(088);
  1    93 dcl reswd_DECLARATIVES	fixed bin static options(constant) init(089);
  1    94 dcl reswd_DELIMITED		fixed bin static options(constant) init(090);
  1    95 dcl reswd_DELIMITER		fixed bin static options(constant) init(091);
  1    96 dcl reswd_DEPENDING		fixed bin static options(constant) init(092);
  1    97 dcl reswd_DESCENDING	fixed bin static options(constant) init(093);
  1    98 dcl reswd_DIVISION		fixed bin static options(constant) init(094);
  1    99 dcl reswd_DOWN		fixed bin static options(constant) init(095);
  1   100 dcl (reswd_ALSO,
  1   101      reswd_ELSE)		fixed bin static options(constant) init(096);
  1   102 dcl reswd_EMI		fixed bin static options(constant) init(097);
  1   103 dcl reswd_END		fixed bin static options(constant) init(098);
  1   104 dcl reswd_ENDING		fixed bin static options(constant) init(099);
  1   105 dcl (reswd_END_OF_PAGE,
  1   106      reswd_EOP)		fixed bin static options(constant) init(100);
  1   107 dcl reswd_IN		fixed bin static options(constant) init(101);
  1   108 dcl (reschar_EQ,
  1   109      reswd_EQUAL,
  1   110      reswd_EQUALS)		fixed bin static options(constant) init(102);
  1   111 /* 103 104 */
  1   112 dcl reswd_ESI		fixed bin static options(constant) init(105);
  1   113 dcl (reswd_COMP,
  1   114      reswd_COMPUTATIONAL)	fixed bin static options(constant) init(106);
  1   115 dcl reswd_EXCEPTION		fixed bin static options(constant) init(107);
  1   116 dcl reswd_FILE		fixed bin static options(constant) init(108);
  1   117 dcl reswd_FIRST		fixed bin static options(constant) init(109);
  1   118 dcl reswd_FOR		fixed bin static options(constant) init(110);
  1   119 dcl reswd_FROM		fixed bin static options(constant) init(111);
  1   120 dcl reswd_GIVING		fixed bin static options(constant) init(112);
  1   121 dcl (reschar_GT,
  1   122      reswd_EXCEEDS,
  1   123      reswd_GREATER)		fixed bin static options(constant) init(113);
  1   124 dcl reswd_INITIAL		fixed bin static options(constant) init(114);
  1   125 dcl reswd_INPUT		fixed bin static options(constant) init(115);
  1   126 dcl reswd_INTO		fixed bin static options(constant) init(116);
  1   127 dcl reswd_INVALID		fixed bin static options(constant) init(117);
  1   128 dcl (reswd_ARE,
  1   129      reswd_IS)		fixed bin static options(constant) init(118);
  1   130 dcl (reswd_I_O,
  1   131      reswd_INPUT_OUTPUT)	fixed bin static options(constant) init(119);
  1   132 dcl reswd_KEY		fixed bin static options(constant) init(120);
  1   133 dcl reswd_LABEL		fixed bin static options(constant) init(121);
  1   134 dcl reswd_LEADING		fixed bin static options(constant) init(122);
  1   135 dcl (reschar_LT,
  1   136      reswd_LESS)		fixed bin static options(constant) init(123);
  1   137 dcl (reswd_LINE,
  1   138      reswd_LINES)		fixed bin static options(constant) init(124);
  1   139 dcl reswd_LOCK		fixed bin static options(constant) init(125);
  1   140 dcl reswd_MESSAGE		fixed bin static options(constant) init(126);
  1   141 dcl reswd_NEGATIVE		fixed bin static options(constant) init(127);
  1   142 dcl reswd_NEXT		fixed bin static options(constant) init(128);
  1   143 dcl reswd_NO		fixed bin static options(constant) init(129);
  1   144 dcl reswd_NOT		fixed bin static options(constant) init(130);
  1   145 dcl reswd_NUMERIC		fixed bin static options(constant) init(131);
  1   146 dcl reswd_NUMERIC_EDITED	fixed bin static options(constant) init(132);
  1   147 dcl reswd_OF		fixed bin static options(constant) init(133);
  1   148 dcl reswd_ON		fixed bin static options(constant) init(134);
  1   149 dcl reswd_OR		fixed bin static options(constant) init(135);
  1   150 /* 136 */
  1   151 dcl reswd_OUTPUT		fixed bin static options(constant) init(137);
  1   152 dcl reswd_BOOLEAN		fixed bin static options(constant) init(138);
  1   153 dcl reswd_PAGE		fixed bin static options(constant) init(139);
  1   154 dcl reswd_POINTER		fixed bin static options(constant) init(140);
  1   155 dcl reswd_POSITIVE		fixed bin static options(constant) init(141);
  1   156 dcl reswd_PROCEDURE		fixed bin static options(constant) init(142);
  1   157 dcl reswd_PROCEDURES	fixed bin static options(constant) init(143);
  1   158 dcl reswd_PROCEED		fixed bin static options(constant) init(144);
  1   159 dcl reswd_PROCESSING	fixed bin static options(constant) init(145);
  1   160 dcl reswd_PROGRAM		fixed bin static options(constant) init(146);
  1   161 dcl reswd_RANDOM		fixed bin static options(constant) init(147);
  1   162 dcl reswd_RECORD		fixed bin static options(constant) init(148);
  1   163 dcl reswd_REEL		fixed bin static options(constant) init(149);
  1   164 dcl reswd_REFERENCES	fixed bin static options(constant) init(150);
  1   165 dcl reswd_REMAINDER		fixed bin static options(constant) init(151);
  1   166 dcl reswd_REPLACING		fixed bin static options(constant) init(152);
  1   167 dcl reswd_REPORTING		fixed bin static options(constant) init(153);
  1   168 dcl reswd_REVERSED		fixed bin static options(constant) init(154);
  1   169 dcl reswd_REWIND		fixed bin static options(constant) init(155);
  1   170 dcl reswd_ROUNDED		fixed bin static options(constant) init(156);
  1   171 dcl reswd_RUN		fixed bin static options(constant) init(157);
  1   172 dcl reswd_SECTION		fixed bin static options(constant) init(158);
  1   173 dcl reswd_SEGMENT		fixed bin static options(constant) init(159);
  1   174 dcl reswd_SENTENCE		fixed bin static options(constant) init(160);
  1   175 dcl reswd_SIZE		fixed bin static options(constant) init(161);
  1   176 dcl reswd_STANDARD		fixed bin static options(constant) init(162);
  1   177 dcl reswd_TALLYING		fixed bin static options(constant) init(163);
  1   178 dcl reswd_TERMINAL		fixed bin static options(constant) init(164);
  1   179 dcl reswd_THAN		fixed bin static options(constant) init(165);
  1   180 dcl (reswd_THROUGH,
  1   181      reswd_THRU)		fixed bin static options(constant) init(166);
  1   182 dcl reswd_RELATIVE		fixed bin static options(constant) init(167);
  1   183 dcl (reswd_TIME,
  1   184      reswd_TIMES)		fixed bin static options(constant) init(168);
  1   185 dcl reswd_DYNAMIC		fixed bin static options(constant) init(169);
  1   186 dcl reswd_TO		fixed bin static options(constant) init(170);
  1   187 dcl reswd_UNEQUAL		fixed bin static options(constant) init(171);
  1   188 dcl reswd_UNIT		fixed bin static options(constant) init(172);
  1   189 dcl reswd_UNTIL		fixed bin static options(constant) init(173);
  1   190 dcl reswd_UP		fixed bin static options(constant) init(174);
  1   191 dcl reswd_UPON		fixed bin static options(constant) init(175);
  1   192 dcl reswd_USING		fixed bin static options(constant) init(176);
  1   193 dcl reswd_VARYING		fixed bin static options(constant) init(177);
  1   194 dcl reswd_WHEN		fixed bin static options(constant) init(178);
  1   195 dcl reswd_WITH		fixed bin static options(constant) init(179);
  1   196 dcl (reswd_ZERO,
  1   197      reswd_ZEROES,
  1   198      reswd_ZEROS)		fixed bin static options(constant) init(180);
  1   199 dcl reswd_ORGANIZATION	fixed bin static options(constant) init(181);
  1   200 dcl reschar_PLUS		fixed bin static options(constant) init(182);
  1   201 dcl reschar_MINUS		fixed bin static options(constant) init(183);
  1   202 dcl reschar_STAR		fixed bin static options(constant) init(184);
  1   203 dcl reschar_SLASH		fixed bin static options(constant) init(185);
  1   204 dcl reschar_2STARs		fixed bin static options(constant) init(186);
  1   205 dcl reschar_LPARENS		fixed bin static options(constant) init(187);
  1   206 dcl reschar_RPARENS		fixed bin static options(constant) init(188);
  1   207 dcl reschar_PERIOD		fixed bin static options(constant) init(189);
  1   208 dcl reswd_TOP		fixed bin static options(constant) init(190);
  1   209 dcl reswd_COBOL		fixed bin static options(constant) init(191);
  1   210 dcl (reswd_SPACE,
  1   211      reswd_SPACES)		fixed bin static options(constant) init(192);
  1   212 dcl reswd_TALLY		fixed bin static options(constant) init(193);
  1   213 dcl (reswd_BIT,
  1   214      reswd_BITS)		fixed bin static options(constant) init(194);
  1   215 dcl reswd_RECORDS		fixed bin static options(constant) init(195);
  1   216 dcl reswd_DATA		fixed bin static options(constant) init(196);
  1   217 /* 197 198 199 */
  1   218 dcl reswd_VLR		fixed bin static options(constant) init(201);
  1   219 dcl (reswd_AREA,
  1   220      reswd_AREAS)		fixed bin static options(constant) init(202);
  1   221 dcl reswd_OMITTED		fixed bin static options(constant) init(203);
  1   222 dcl reswd_BLANK		fixed bin static options(constant) init(204);
  1   223 dcl reswd_BLOCK		fixed bin static options(constant) init(205);
  1   224 dcl reswd_CD		fixed bin static options(constant) init(206);
  1   225 dcl reswd_COMMUNICATION	fixed bin static options(constant) init(207);
  1   226 dcl reswd_STANDARD_2	fixed bin static options(constant) init(208);
  1   227 dcl (reswd_COMP_4,
  1   228      reswd_COMPUTATIONAL_4)	fixed bin static options(constant) init(209);
  1   229 dcl (reswd_COMP_5,
  1   230      reswd_COMPUTATIONAL_5)	fixed bin static options(constant) init(210);
  1   231 dcl (reswd_COMP_3,
  1   232      reswd_COMPUTATIONAL_3)	fixed bin static options(constant) init(211);
  1   233 dcl (reswd_COMP_1,
  1   234      reswd_COMPUTATIONAL_1)	fixed bin static options(constant) init(212);
  1   235 dcl (reswd_COMP_2,
  1   236      reswd_COMPUTATIONAL_2)	fixed bin static options(constant) init(213);
  1   237 dcl reswd_CONSTANT		fixed bin static options(constant) init(214);
  1   238 dcl reswd_CONTAINS		fixed bin static options(constant) init(215);
  1   239 dcl reswd_EXTEND		fixed bin static options(constant) init(216);
  1   240 /* 217 */
  1   241 dcl reswd_DESTINATION	fixed bin static options(constant) init(218);
  1   242 dcl reswd_FD		fixed bin static options(constant) init(219);
  1   243 dcl reswd_FILLER		fixed bin static options(constant) init(220);
  1   244 dcl (reswd_HIGH_VALUE,
  1   245      reswd_HIGH_VALUES)	fixed bin static options(constant) init(221);
  1   246 dcl reswd_INDEX		fixed bin static options(constant) init(222);
  1   247 dcl reswd_INDEXED		fixed bin static options(constant) init(223);
  1   248 dcl (reswd_JUST,
  1   249      reswd_JUSTIFIED)	fixed bin static options(constant) init(224);
  1   250 dcl reswd_LEFT		fixed bin static options(constant) init(225);
  1   251 dcl reswd_LENGTH		fixed bin static options(constant) init(226);
  1   252 dcl reswd_DUPLICATES	fixed bin static options(constant) init(227);
  1   253 dcl reswd_LINKAGE		fixed bin static options(constant) init(228);
  1   254 dcl (reswd_LOW_VALUE,
  1   255      reswd_LOW_VALUES)	fixed bin static options(constant) init(229);
  1   256 dcl reswd_MODE		fixed bin static options(constant) init(230);
  1   257 dcl reswd_OCCURS		fixed bin static options(constant) init(231);
  1   258 dcl (reswd_PIC,
  1   259      reswd_PICTURE)		fixed bin static options(constant) init(232);
  1   260 dcl reswd_EGI		fixed bin static options(constant) init(233);
  1   261 dcl reswd_QUEUE		fixed bin static options(constant) init(234);
  1   262 dcl (reswd_QUOTE,
  1   263      reswd_QUOTES)		fixed bin static options(constant) init(235);
  1   264 dcl reswd_BOTTOM		fixed bin static options(constant) init(236);
  1   265 dcl reswd_RECORDING		fixed bin static options(constant) init(237);
  1   266 dcl reswd_REDEFINES		fixed bin static options(constant) init(238);
  1   267 dcl reswd_RENAMES		fixed bin static options(constant) init(239);
  1   268 dcl (reswd_REPORT,
  1   269      reswd_REPORTS)		fixed bin static options(constant) init(240);
  1   270 dcl reswd_RIGHT		fixed bin static options(constant) init(241);
  1   271 dcl reswd_SA		fixed bin static options(constant) init(242);
  1   272 dcl reswd_SD		fixed bin static options(constant) init(243);
  1   273 dcl reswd_SEPARATE		fixed bin static options(constant) init(244);
  1   274 dcl reswd_SIGN		fixed bin static options(constant) init(245);
  1   275 dcl reswd_SOURCE		fixed bin static options(constant) init(246);
  1   276 dcl reswd_STATUS		fixed bin static options(constant) init(247);
  1   277 dcl reswd_SUB_QUEUE_1	fixed bin static options(constant) init(248);
  1   278 dcl reswd_SUB_QUEUE_2	fixed bin static options(constant) init(249);
  1   279 dcl reswd_SUB_QUEUE_3	fixed bin static options(constant) init(250);
  1   280 dcl reswd_SYMBOLIC		fixed bin static options(constant) init(251);
  1   281 dcl (reswd_SYNC,
  1   282      reswd_SYNCHRONIZED)	fixed bin static options(constant) init(252);
  1   283 dcl reswd_TABLE		fixed bin static options(constant) init(253);
  1   284 /* 254 */
  1   285 dcl reswd_TRAILING		fixed bin static options(constant) init(255);
  1   286 dcl reschar_2EQs		fixed bin static options(constant) init(256);
  1   287 dcl reswd_USAGE		fixed bin static options(constant) init(257);
  1   288 dcl (reswd_VALUE,
  1   289      reswd_VALUES)		fixed bin static options(constant) init(258);
  1   290 dcl reswd_WORKING_STORAGE	fixed bin static options(constant) init(259);
  1   291 dcl reswd_REMOVAL		fixed bin static options(constant) init(260);
  1   292 /* 261 */
  1   293 /* (262 263 264 265) */
  1   294 /* 266 */
  1   295 /* (267 268 269 270 271) */
  1   296 dcl reswd_FLR		fixed bin static options(constant) init(272);
  1   297 /* 273 274 275 276 277 */
  1   298 /* (278) */
  1   299 dcl reswd_FILES		fixed bin static options(constant) init(279);
  1   300 /* 280 281 282 283 284 285 */
  1   301 /* (286) */
  1   302 /* 287 */
  1   303 dcl reswd_NATIVE		fixed bin static options(constant) init(288);
  1   304 /* 289 */
  1   305 dcl (reswd_COMP_7,
  1   306      reswd_COMPUTATIONAL_7)	fixed bin static options(constant) init(290);
  1   307 dcl reswd_OBJECT		fixed bin static options(constant) init(291);
  1   308 dcl (reswd_COMP_6,
  1   309      reswd_COMPUTATIONAL_6)	fixed bin static options(constant) init(292);
  1   310 /* (293) */
  1   311 /* 294 */
  1   312 dcl reswd_DEFAULT		fixed bin static options(constant) init(295);
  1   313 /* 296 207 298 299 300 301 302 303 304 305 */
  1   314 dcl reswd_CODE_SET		fixed bin static options(constant) init(306);
  1   315 dcl reswd_EXTERNAL		fixed bin static options(constant) init(307);
  1   316 /* 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 */
  1   317 dcl reswd_DAY_OF_WEEK	fixed bin static options(constant) init(326);
  1   318 dcl reswd_INTERCHANGE	fixed bin static options(constant) init(327);
  1   319 /* 328 */
  1   320 dcl reswd_PROCESS_AREA	fixed bin static options(constant) init(329);
  1   321 /* 330 */
  1   322 dcl (reswd_CATALOG_NAME,
  1   323      reswd_CATALOGUE_NAME)	fixed bin static options(constant) init(331);
  1   324 /* 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 */
  1   325 /* 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 */
  1   326 /* 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 */
  1   327 /* 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 */
  1   328 dcl reswd_STREAM		fixed bin static options(constant) init(407);
  1   329 /* 408 409 410 411 412 413 */
  1   330 dcl reswd_BSN		fixed bin static options(constant) init(413);
  1   331 /* 414 415 */
  1   332 dcl reswd_KEYED		fixed bin static options(constant) init(416);
  1   333 /* 417 418 419 420 421 422 */
  1   334 dcl reswd_IDS_II		fixed bin static options(constant) init(423);
  1   335 /* 424 */
  1   336 dcl reswd_REPLACE		fixed bin static options(constant) init(425);
  1   337 /* 426 427 428 429 430 431 432 433 434 */
  1   338 dcl reswd_SUBSTITUTION	fixed bin static options(constant) init(435);
  1   339 /* 436 437 438 439 440 441 442 443 444 445 446 447 448 449 */
  1   340 /* 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 */
  1   341 /* 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 */
  1   342 /* 490 491 492 493 494 495 496 497 498 499 500 */
  1   343 dcl reswd_ACCESS		fixed bin static options(constant) init(501);
  1   344 /* 502 */
  1   345 dcl reswd_ADDRESS		fixed bin static options(constant) init(503);
  1   346 dcl reswd_ALPHABET		fixed bin static options(constant) init(504);
  1   347 dcl reswd_STANDARD_1	fixed bin static options(constant) init(505);
  1   348 /* 506 */
  1   349 dcl reswd_ALTERNATE		fixed bin static options(constant) init(507);
  1   350 dcl reswd_APPLY		fixed bin static options(constant) init(508);
  1   351 dcl reswd_ASSIGN		fixed bin static options(constant) init(509);
  1   352 dcl reswd_AUTHOR		fixed bin static options(constant) init(510);
  1   353 dcl reswd_CF		fixed bin static options(constant) init(511);
  1   354 dcl reswd_CH		fixed bin static options(constant) init(512);
  1   355 dcl reswd_CLOCK_UNITS	fixed bin static options(constant) init(513);
  1   356 dcl reswd_CODE		fixed bin static options(constant) init(514);
  1   357 dcl reswd_COLLATING		fixed bin static options(constant) init(515);
  1   358 dcl reswd_COLUMN		fixed bin static options(constant) init(516);
  1   359 dcl reswd_COMMA		fixed bin static options(constant) init(517);
  1   360 dcl reswd_CONFIGURATION	fixed bin static options(constant) init(518);
  1   361 dcl reswd_CONVERSION	fixed bin static options(constant) init(519);
  1   362 dcl reswd_CONTROL		fixed bin static options(constant) init(520);
  1   363 dcl reswd_CONTROLS		fixed bin static options(constant) init(521);
  1   364 dcl reswd_COPY		fixed bin static options(constant) init(522);
  1   365 dcl (reswd_CORR,
  1   366      reswd_CORRESPONDING)	fixed bin static options(constant) init(524);
  1   367 dcl reswd_CURRENCY		fixed bin static options(constant) init(525);
  1   368 /* 526 */
  1   369 dcl reswd_DATE_COMPILED	fixed bin static options(constant) init(527);
  1   370 dcl reswd_DATE_WRITTEN	fixed bin static options(constant) init(528);
  1   371 dcl reswd_DE		fixed bin static options(constant) init(529);
  1   372 dcl reswd_DEBUG_CONTENTS	fixed bin static options(constant) init(530);
  1   373 dcl reswd_DEBUG_ITEM	fixed bin static options(constant) init(531);
  1   374 dcl reswd_DEBUG_LINE	fixed bin static options(constant) init(532);
  1   375 dcl reswd_DEBUG_SUB_1	fixed bin static options(constant) init(533);
  1   376 dcl reswd_DEBUG_SUB_2	fixed bin static options(constant) init(534);
  1   377 dcl reswd_DEBUG_SUB_3	fixed bin static options(constant) init(535);
  1   378 /* 536 */
  1   379 dcl reswd_DEBUG_NAME	fixed bin static options(constant) init(537);
  1   380 dcl reswd_DECIMAL_POINT	fixed bin static options(constant) init(538);
  1   381 dcl reswd_DETAIL		fixed bin static options(constant) init(539);
  1   382 dcl reswd_ENVIRONMENT	fixed bin static options(constant) init(540);
  1   383 /* 541 */
  1   384 dcl reswd_EVERY		fixed bin static options(constant) init(542);
  1   385 dcl reswd_FILE_CONTROL	fixed bin static options(constant) init(543);
  1   386 /* 544 545 */
  1   387 dcl reswd_FINAL		fixed bin static options(constant) init(546);
  1   388 dcl reswd_FOOTING		fixed bin static options(constant) init(547);
  1   389 dcl reswd_HEADING		fixed bin static options(constant) init(548);
  1   390 dcl reswd_GROUP		fixed bin static options(constant) init(549);
  1   391 /* 550 */
  1   392 dcl reswd_I_O_CONTROL	fixed bin static options(constant) init(551);
  1   393 dcl reswd_IDENTIFICATION	fixed bin static options(constant) init(552);
  1   394 dcl reswd_INDICATE		fixed bin static options(constant) init(553);
  1   395 dcl reswd_INSTALLATION	fixed bin static options(constant) init(554);
  1   396 /* 555 */
  1   397 dcl reswd_LAST		fixed bin static options(constant) init(556);
  1   398 /* 557 558 */
  1   399 dcl reswd_PRINTING		fixed bin static options(constant) init(559);
  1   400 /* 560 */
  1   401 dcl reswd_LIMIT		fixed bin static options(constant) init(561);
  1   402 dcl reswd_LIMITS		fixed bin static options(constant) init(562);
  1   403 dcl reswd_LINAGE		fixed bin static options(constant) init(563);
  1   404 dcl reswd_LINAGE_COUNTER	fixed bin static options(constant) init(564);
  1   405 dcl reswd_LINE_COUNTER	fixed bin static options(constant) init(565);
  1   406 /* 566 567 */
  1   407 dcl reswd_MEMORY		fixed bin static options(constant) init(568);
  1   408 dcl reswd_MODULES		fixed bin static options(constant) init(569);
  1   409 dcl reswd_MULTIPLE		fixed bin static options(constant) init(570);
  1   410 dcl reswd_NUMBER		fixed bin static options(constant) init(571);
  1   411 dcl reswd_OBJECT_COMPUTER	fixed bin static options(constant) init(572);
  1   412 /* 573 */
  1   413 dcl reswd_OFF		fixed bin static options(constant) init(574);
  1   414 /* 575 */
  1   415 dcl reswd_OPTIONAL		fixed bin static options(constant) init(576);
  1   416 /* 577 */
  1   417 dcl reswd_PAGE_COUNTER	fixed bin static options(constant) init(578);
  1   418 dcl reswd_PF		fixed bin static options(constant) init(579);
  1   419 dcl reswd_PH		fixed bin static options(constant) init(580);
  1   420 dcl reswd_PLUS		fixed bin static options(constant) init(581);
  1   421 dcl reswd_POSITION		fixed bin static options(constant) init(582);
  1   422 dcl reswd_PROGRAM_ID	fixed bin static options(constant) init(583);
  1   423 dcl reswd_RD		fixed bin static options(constant) init(584);
  1   424 /* 585 586 */
  1   425 dcl reswd_SEQUENCE		fixed bin static options(constant) init(587);
  1   426 dcl reswd_RERUN		fixed bin static options(constant) init(588);
  1   427 dcl reswd_RESERVE		fixed bin static options(constant) init(589);
  1   428 dcl reswd_RESET		fixed bin static options(constant) init(590);
  1   429 dcl reswd_RF		fixed bin static options(constant) init(591);
  1   430 dcl reswd_RH		fixed bin static options(constant) init(592);
  1   431 dcl reswd_SAME		fixed bin static options(constant) init(593);
  1   432 dcl reswd_SECURITY		fixed bin static options(constant) init(594);
  1   433 dcl reswd_SEGMENT_LIMIT	fixed bin static options(constant) init(595);
  1   434 dcl reswd_SELECT		fixed bin static options(constant) init(596);
  1   435 dcl reswd_SEQUENTIAL	fixed bin static options(constant) init(597);
  1   436 dcl reswd_SORT_MERGE	fixed bin static options(constant) init(598);
  1   437 dcl reswd_SOURCE_COMPUTER	fixed bin static options(constant) init(599);
  1   438 dcl reswd_SPECIAL_NAMES	fixed bin static options(constant) init(600);
  1   439 dcl reswd_SPANNED		fixed bin static options(constant) init(601);
  1   440 /* (602) */
  1   441 dcl reswd_SUM		fixed bin static options(constant) init(603);
  1   442 dcl reswd_EXOR		fixed bin static options(constant) init(604);
  1   443 /* 605 */
  1   444 dcl reswd_TAPE		fixed bin static options(constant) init(606);
  1   445 dcl reswd_TEXT		fixed bin static options(constant) init(607);
  1   446 dcl reswd_TYPE		fixed bin static options(constant) init(608);
  1   447 dcl reswd_WORDS		fixed bin static options(constant) init(609);
  1   448 dcl (reswd_COMP_8,
  1   449      reswd_COMPUTATIONAL_8)	fixed bin static options(constant) init(610);
  1   450 /* DATABASE WORDS
  1   451*dcl reswd_ALIAS		fixed bin static options(constant) init(263);
  1   452*dcl reswd_ALIGN		fixed bin static options(constant) init(278);
  1   453*dcl reswd_ALTERING		fixed bin static options(constant) init(268);
  1   454*dcl reswd_BECOMES		fixed bin static options(constant) init(267);
  1   455*dcl reswd_CHECK		fixed bin static options(constant) init(264);
  1   456*dcl reswd_INVOKING		fixed bin static options(constant) init(269);
  1   457*dcl reswd_KEY_LOCATION	fixed bin static options(constant) init(286);
  1   458*dcl reswd_LOCKS		fixed bin static options(constant) init(125);
  1   459*dcl reswd_PREFIX		fixed bin static options(constant) init(293);
  1   460*dcl reswd_REALM		fixed bin static options(constant) init(265);
  1   461*dcl reswd_REALM_ID		fixed bin static options(constant) init(270);
  1   462*dcl reswd_SELECTION		fixed bin static options(constant) init(271);
  1   463*dcl reswd_SYMBOLS		fixed bin static options(constant) init(602);
  1   464*dcl reswd_VIA		fixed bin static options(constant) init(262);
  1   465*END DATABASE WORDS */
  1   466 
  1   467 
  1   468 /* END INCLUDE FILE ... cobol_reswd_values.incl.pl1 */
  1   469 
     1552 
  2     1 
  2     2 /* BEGIN INCLUDE FILE ... cobol_ext_.incl.pl1 */
  2     3 /* Last modified on 06/17/76 by ORN */
  2     4 /* Last modified on 12/28/76 by FCH */
  2     5 /* Last modified on 12/01/80 by FCH */
  2     6 
  2     7 /*    <<<   SHARED EXTERNALS INCLUDE FILE   >>>    */
  2     8 
  2     9 
  2    10 dcl     cobol_ext_$cobol_afp ptr ext;
  2    11 dcl     cobol_afp ptr defined (  cobol_ext_$cobol_afp);
  2    12 dcl     cobol_ext_$cobol_analin_fileno ptr ext;
  2    13 dcl     cobol_analin_fileno ptr defined (  cobol_ext_$cobol_analin_fileno);
  2    14 dcl     cobol_ext_$report_first_token ptr ext;
  2    15 dcl     report_first_token ptr defined( cobol_ext_$report_first_token);
  2    16 dcl     cobol_ext_$report_last_token ptr ext;
  2    17 dcl     report_last_token ptr defined ( cobol_ext_$report_last_token);
  2    18 dcl     cobol_ext_$cobol_eltp ptr ext;
  2    19 dcl     cobol_eltp ptr defined (  cobol_ext_$cobol_eltp);
  2    20 dcl     cobol_ext_$cobol_cmfp ptr ext;
  2    21 dcl     cobol_cmfp ptr defined (  cobol_ext_$cobol_cmfp);
  2    22 dcl     cobol_ext_$cobol_com_fileno ptr ext;
  2    23 dcl     cobol_com_fileno ptr defined (  cobol_ext_$cobol_com_fileno);
  2    24 dcl     cobol_ext_$cobol_com_ptr ptr ext;
  2    25 dcl     cobol_com_ptr ptr defined (  cobol_ext_$cobol_com_ptr);
  2    26 dcl     cobol_ext_$cobol_dfp ptr ext;
  2    27 dcl     cobol_dfp ptr defined (  cobol_ext_$cobol_dfp);
  2    28 dcl     cobol_ext_$cobol_hfp ptr ext;
  2    29 dcl     cobol_hfp ptr defined (  cobol_ext_$cobol_hfp);
  2    30 dcl     cobol_ext_$cobol_m1fp ptr ext;
  2    31 dcl     cobol_m1fp ptr defined (  cobol_ext_$cobol_m1fp);
  2    32 dcl     cobol_ext_$cobol_m2fp ptr ext;
  2    33 dcl     cobol_m2fp ptr defined (  cobol_ext_$cobol_m2fp);
  2    34 dcl     cobol_ext_$cobol_min1_fileno ptr ext;
  2    35 dcl     cobol_min1_fileno ptr defined (  cobol_ext_$cobol_min1_fileno);
  2    36 dcl     cobol_ext_$cobol_min2_fileno_ptr ptr ext;
  2    37 dcl     cobol_min2_fileno_ptr ptr defined (  cobol_ext_$cobol_min2_fileno_ptr);
  2    38 dcl     cobol_ext_$cobol_name_fileno ptr ext;
  2    39 dcl     cobol_name_fileno ptr defined (  cobol_ext_$cobol_name_fileno);
  2    40 dcl     cobol_ext_$cobol_name_fileno_ptr ptr ext;
  2    41 dcl     cobol_name_fileno_ptr ptr defined (  cobol_ext_$cobol_name_fileno_ptr);
  2    42 dcl     cobol_ext_$cobol_ntfp ptr ext;
  2    43 dcl     cobol_ntfp ptr defined (  cobol_ext_$cobol_ntfp);
  2    44 dcl     cobol_ext_$cobol_pdofp ptr ext;
  2    45 dcl     cobol_pdofp ptr defined (  cobol_ext_$cobol_pdofp);
  2    46 dcl     cobol_ext_$cobol_pfp ptr ext;
  2    47 dcl     cobol_pfp ptr defined (  cobol_ext_$cobol_pfp);
  2    48 dcl     cobol_ext_$cobol_rm2fp ptr ext;
  2    49 dcl     cobol_rm2fp ptr defined (  cobol_ext_$cobol_rm2fp);
  2    50 dcl     cobol_ext_$cobol_rmin2fp ptr ext;
  2    51 dcl     cobol_rmin2fp ptr defined (  cobol_ext_$cobol_rmin2fp);
  2    52 dcl     cobol_ext_$cobol_curr_in ptr ext;
  2    53 dcl     cobol_curr_in ptr defined (  cobol_ext_$cobol_curr_in);
  2    54 dcl     cobol_ext_$cobol_curr_out ptr ext;
  2    55 dcl     cobol_curr_out ptr defined (  cobol_ext_$cobol_curr_out);
  2    56 dcl     cobol_ext_$cobol_sfp ptr ext;
  2    57 dcl     cobol_sfp ptr defined (  cobol_ext_$cobol_sfp);
  2    58 dcl     cobol_ext_$cobol_w1p ptr ext;
  2    59 dcl     cobol_w1p ptr defined (  cobol_ext_$cobol_w1p);
  2    60 dcl     cobol_ext_$cobol_w2p ptr ext;
  2    61 dcl     cobol_w2p ptr defined (  cobol_ext_$cobol_w2p);
  2    62 dcl     cobol_ext_$cobol_w3p ptr ext;
  2    63 dcl     cobol_w3p ptr defined (  cobol_ext_$cobol_w3p);
  2    64 dcl     cobol_ext_$cobol_w5p ptr ext;
  2    65 dcl     cobol_w5p ptr defined (  cobol_ext_$cobol_w5p);
  2    66 dcl     cobol_ext_$cobol_w6p ptr ext;
  2    67 dcl     cobol_w6p ptr defined (  cobol_ext_$cobol_w6p);
  2    68 dcl     cobol_ext_$cobol_w7p ptr ext;
  2    69 dcl     cobol_w7p ptr defined (  cobol_ext_$cobol_w7p);
  2    70 dcl     cobol_ext_$cobol_x3fp ptr ext;
  2    71 dcl     cobol_x3fp ptr defined (  cobol_ext_$cobol_x3fp);
  2    72 dcl	cobol_ext_$cobol_rwdd ptr ext;
  2    73 dcl	cobol_rwdd ptr defined(cobol_ext_$cobol_rwdd);
  2    74 dcl	cobol_ext_$cobol_rwpd ptr ext;
  2    75 dcl	cobol_rwpd ptr defined(cobol_ext_$cobol_rwpd);
  2    76 
  2    77 
  2    78 dcl     cobol_ext_$cobol_fileno1 fixed bin(24)ext;
  2    79 dcl     cobol_fileno1 fixed bin(24)defined (  cobol_ext_$cobol_fileno1);				
  2    80 dcl     cobol_ext_$cobol_options_len fixed bin(24)ext;
  2    81 dcl     cobol_options_len fixed bin(24)defined (  cobol_ext_$cobol_options_len);
  2    82 dcl     cobol_ext_$cobol_pdout_fileno fixed bin(24)ext;
  2    83 dcl     cobol_pdout_fileno fixed bin(24)defined (  cobol_ext_$cobol_pdout_fileno);			
  2    84 dcl     cobol_ext_$cobol_print_fileno fixed bin(24)ext;
  2    85 dcl     cobol_print_fileno fixed bin(24)defined (  cobol_ext_$cobol_print_fileno);			
  2    86 dcl     cobol_ext_$cobol_rmin2_fileno fixed bin(24)ext;
  2    87 dcl     cobol_rmin2_fileno fixed bin(24)defined (  cobol_ext_$cobol_rmin2_fileno);
  2    88 dcl     cobol_ext_$cobol_x1_fileno fixed bin(24)ext;
  2    89 dcl     cobol_x1_fileno fixed bin(24)defined (  cobol_ext_$cobol_x1_fileno);				
  2    90 dcl     cobol_ext_$cobol_x2_fileno fixed bin(24)ext;
  2    91 dcl     cobol_x2_fileno fixed bin(24)defined (  cobol_ext_$cobol_x2_fileno);
  2    92 dcl     cobol_ext_$cobol_x3_fileno fixed bin(24)ext;
  2    93 dcl     cobol_x3_fileno fixed bin(24)defined (  cobol_ext_$cobol_x3_fileno);
  2    94 
  2    95 dcl     cobol_ext_$cobol_lpr char (5) ext;
  2    96 dcl     cobol_lpr char (5) defined (  cobol_ext_$cobol_lpr);				/* -2- */
  2    97 dcl     cobol_ext_$cobol_options char (120) ext;
  2    98 dcl     cobol_options char (120) defined (  cobol_ext_$cobol_options);          			/* -30- */
  2    99 
  2   100 dcl     cobol_ext_$cobol_xlast8 bit (1) ext;
  2   101 dcl     cobol_xlast8 bit (1) defined (  cobol_ext_$cobol_xlast8);				/* -1- */
  2   102 dcl     cobol_ext_$report_exists bit (1) ext;
  2   103 dcl     report_exists bit (1) defined (  cobol_ext_$report_exists);
  2   104 
  2   105 
  2   106 /*    <<<   END OF SHARED EXTERNALS INCLUDE FILE   >>>    */
  2   107 /* END INCLUDE FILE ... cobol_ext_.incl.pl1 */
  2   108 
     1553 
  3     1 
  3     2 /* BEGIN INCLUDE FILE ...   cobol_fixed_common.incl.pl1 */
  3     3 /* Modified on 10/27/82 by FCH, [5.1-1], cobol_cln added to save last line num, BUG543(phx13643) */
  3     4 /* Modified on 07/31/80 by FCH, [4.3-1], use_reporting field added for Report Writer */
  3     5 /* Modified on 03/30/79 by FCH, [4.1-1], -card option added */
  3     6 /* Modified on 03/30/79 by FCH, [4.0-2], -svNM option added */
  3     7 /* Modified on 03/02/79 by FCH, [4.0-1], -levNM option added */
  3     8 /* Modified by RAL on 10/13/78, [4.0-0], Added option exp from fil2. */
  3     9 /* Modified by BC on 06/20/77, descriptor added.	*/
  3    10 /* Modified by BC on 06/02/77, init_cd_seg, init_cd_offset added.	*/
  3    11 /* Modified by BC  on 1/21/77, options.profile added.	*/
  3    12 /* Modified by FCH on 7/6/76, sysin_fno & sysout_fno deleted, accept_device & display_device added */
  3    13 /* Modified by FCH on 5/20/77, comp_level added */
  3    14 
  3    15 
  3    16 /*     THE SIZE OF THIS STRUCTURE IN BYTES, (EXCLUDING VARIABLE
  3    17*   LENGTH ENTITIES), FOR EACH HARDWARE IMPLEMENTATION IS:
  3    18*
  3    19*   HARDWARE	|	SIZE (BYTES)
  3    20*   ---------------------------------
  3    21*   645/6180	|	464
  3    22*   P7		|	396
  3    23*   ---------------------------------
  3    24*   */
  3    25 
  3    26 dcl 	1 fixed_common based (  cobol_com_ptr),
  3    27     		2 prog_name char (30),
  3    28    		2 compiler_rev_no char (25),
  3    29     		2 phase_name char (6),
  3    30     		2 currency char (1),
  3    31     		2 fatal_no fixed bin,
  3    32     		2 warn_no fixed bin,
  3    33     		2 proc_counter fixed bin,
  3    34     		2 spec_tag_counter fixed bin,
  3    35     		2 file_count fixed bin,
  3    36     		2 filedescr_offsets (20) char (5),
  3    37     		2 perf_alter_info char (5),
  3    38     		2 another_perform_info char (5),
  3    39     		2 sort_in_info char (5),
  3    40     		2 odo_info char (5),
  3    41     		2 size_seg fixed bin,
  3    42     		2 size_offset fixed bin(24),
  3    43     		2 size_perform_info char (5),
  3    44     		2 rename_info char (5),
  3    45     		2 report_names char (5),
  3    46     		2 rw_buf_seg fixed bin,
  3    47     		2 rw_buf_offset fixed bin(24),
  3    48     		2 rw_buf_length fixed bin(24),
  3    49     		2 file_keys char (5),
  3    50     		2 search_keys char (5),
  3    51     		2 dd_seg_size fixed bin(24),
  3    52     		2 pd_seg_size fixed bin(24),
  3    53     		2 seg_limit fixed bin ,
  3    54     		2 number_of_dd_segs fixed bin,
  3    55     		2 seg_info char (5),
  3    56     		2 number_of_ls_pointers fixed bin,
  3    57     		2 link_sec_seg fixed bin,
  3    58     		2 link_sec_offset fixed bin(24),
  3    59     		2 sra_clauses fixed bin,
  3    60     		2 fix_up_info char (5),
  3    61     		2 linage_info char (5),
  3    62     		2 first_dd_item char (5),
  3    63     		2 sort_out_info char (5),
  3    64     		2 db_info char (5),
  3    65     		2 realm_info char (5),
  3    66     		2 rc_realm_info char (5),
  3    67     		2 last_file_key char (5),
  3    68     		2 prog_coll_seq fixed bin,
  3    69 		2 init_cd_seg fixed bin,
  3    70 		2 init_cd_offset fixed bin(24),
  3    71     		2 input_error_exit fixed bin,
  3    72    		2 output_error_exit fixed bin,
  3    73     		2 i_o_error_exit fixed bin,
  3    74     		2 extend_error_exit fixed bin,
  3    75     		2 dummy15 fixed bin,
  3    76     		2 options,
  3    77       			3 cu bit (1),
  3    78       			3 st bit (1),
  3    79       			3 wn bit (1),
  3    80       			3 obs bit (1),
  3    81       			3 dm bit (1),
  3    82       			3 xrl bit (1),
  3    83       			3 xrn bit (1),
  3    84       			3 src bit (1),
  3    85       			3 obj bit (1),
  3    86       			3 exs bit (1),
  3    87       			3 sck bit (1),
  3    88       			3 rno bit (1),
  3    89 			3 u_l bit (1),
  3    90 			3 cnv bit (1),
  3    91 			3 cos bit (1),
  3    92 			3 fmt bit (1),
  3    93 			3 profile bit(1),
  3    94 			3 nw bit (1),
  3    95 			3 exp bit (1),		/* [4.0-0] */
  3    96 			3 card bit (1),  /*[4.1-1]*/
  3    97 			3 fil2 bit (5),
  3    98 			3 m_map bit (1),
  3    99 			3 m_bf bit (1),
  3   100 			3 m_fat bit (1),
  3   101 			3 m_wn bit (1),
  3   102 			3 m_obs bit(1),
  3   103 			3 pd bit(1),
  3   104       			3 oc bit(1),
  3   105     		2 supervisor bit (1),
  3   106     		2 dec_comma bit (1),
  3   107     		2 init_cd bit (1),
  3   108     		2 corr bit (1),
  3   109     		2 initl bit (1),
  3   110     		2 debug bit (1),
  3   111     		2 report bit (1),
  3   112     		2 sync_in_prog bit (1),
  3   113     		2 pd_section bit (1),
  3   114     		2 list_switch bit (1),
  3   115     		2 alpha_cond bit (1),
  3   116     		2 num_cond bit (1),
  3   117     		2 spec_sysin bit (1),
  3   118     		2 spec_sysout bit (1),
  3   119     		2 cpl_files bit (1),
  3   120     		2 obj_dec_comma bit (1),
  3   121 		2 default_sign_type bit (3),
  3   122 		2 use_debug bit(1),
  3   123 		2 syntax_trace bit(1),
  3   124 		2 comp_defaults,
  3   125 			3 comp	bit(1),
  3   126 			3 comp_1	bit(1),
  3   127 			3 comp_2	bit(1),
  3   128 			3 comp_3	bit(1),
  3   129 			3 comp_4	bit(1),
  3   130 			3 comp_5	bit(1),
  3   131 			3 comp_6	bit(1),
  3   132 			3 comp_7	bit(1),
  3   133 			3 comp_8 bit(1),
  3   134 		2 disp_defaults,
  3   135 			3 disp	bit(1),
  3   136 			3 disp_1	bit(1),
  3   137 			3 disp_2	bit(1),
  3   138 			3 disp_3	bit(1),
  3   139 			3 disp_4	bit(1),
  3   140 			3 disp_5  bit(1),
  3   141 			3 disp_6  bit(1),
  3   142 			3 disp_7  bit(1),
  3   143 		2 descriptor bit(2),
  3   144 		2 levsv  bit(3),		/*[4.0-1]*/
  3   145 		2 use_reporting bit(1),	/*[4.3-1]*/
  3   146 		2 cd bit(1),		/*[4.4-1]*/
  3   147 		2 dummy17 bit(3),
  3   148    		2 lvl_rstr bit(32),
  3   149    		2 inst_rstr bit(32),
  3   150 		2 comp_level char(1),
  3   151 		2 dummy18 char(30),
  3   152 		2 object_sign char (1),
  3   153     		2 last_print_rec char (5),
  3   154     		2 coll_seq_info char (5),
  3   155     		2 sys_status_seg fixed bin,
  3   156    		2 sys_status_offset fixed bin(24),
  3   157    		2 compiler_id fixed bin,
  3   158    		2 date_comp_ln fixed bin,
  3   159    		2 compile_mode bit(36),
  3   160    		2 default_temp fixed bin,
  3   161    		2 accept_device fixed bin,
  3   162    		2 display_device fixed bin,
  3   163    		2 cobol_cln fixed bin,	/*[5.1-1]*/
  3   164 		2 alphabet_offset fixed bin;
  3   165 
  3   166 
  3   167 
  3   168 /* END INCLUDE FILE ...   cobol_fixed_common.incl.pl1 */
  3   169 
     1554 
  4     1 
  4     2 /* BEGIN INCLUDE FILE ... cobol_ext_lex.incl.pl1 */
  4     3 /* Last modified on 06/18/76 by ORN */
  4     4 
  4     5 /*   * * *   LEX EXTERNAL DATA   * * *   */
  4     6 
  4     7 /* Pointers */
  4     8 
  4     9 dcl     cobol_ext_lex$cobol_current ptr ext;
  4    10 dcl     cobol_current ptr defined (  cobol_ext_lex$cobol_current);
  4    11 dcl     cobol_ext_lex$cobol_top ptr ext;
  4    12 dcl     cobol_top ptr defined (  cobol_ext_lex$cobol_top);
  4    13 dcl     cobol_ext_lex$cobol_frst ptr ext;
  4    14 dcl     cobol_frst ptr defined (  cobol_ext_lex$cobol_frst);
  4    15 dcl     cobol_ext_lex$cobol_mfp ptr ext;
  4    16 dcl     cobol_mfp ptr defined (  cobol_ext_lex$cobol_mfp);
  4    17 dcl     cobol_ext_lex$cobol_rt_ptr ptr ext;
  4    18 dcl     cobol_rt_ptr ptr defined (  cobol_ext_lex$cobol_rt_ptr);
  4    19 dcl     cobol_ext_lex$cobol_cfp ptr ext;
  4    20 dcl     cobol_cfp ptr defined (  cobol_ext_lex$cobol_cfp);
  4    21 dcl     cobol_ext_lex$cobol_ta_ptr ptr ext;
  4    22 dcl     cobol_ta_ptr ptr defined (  cobol_ext_lex$cobol_ta_ptr);
  4    23 dcl     cobol_ext_lex$cobol_elt_buf_ptr ptr ext;
  4    24 dcl     cobol_elt_buf_ptr ptr defined (  cobol_ext_lex$cobol_elt_buf_ptr);
  4    25 dcl     cobol_ext_lex$cobol_lex_exit /*[*/ label /*]*/ /*[[[ entry static ]]]*/ ext;
  4    26 dcl     cobol_lex_exit /*[*/ label /*]*/ /*[[[ entry static ]]]*/ defined(  cobol_ext_lex$cobol_lex_exit); /* -6- */
  4    27 
  4    28 /* Character */
  4    29 
  4    30 dcl     cobol_ext_lex$cobol_tarea char (300) ext;
  4    31 dcl     cobol_tarea char (300) defined (  cobol_ext_lex$cobol_tarea);    /* -75- */
  4    32 dcl     cobol_ext_lex$cobol_comma_character char (1) ext;
  4    33 dcl     cobol_comma_character char (1) defined (  cobol_ext_lex$cobol_comma_character);
  4    34 dcl     cobol_ext_lex$cobol_decimal_point_character char (1) ext;
  4    35 dcl     cobol_decimal_point_character char (1) defined (  cobol_ext_lex$cobol_decimal_point_character);
  4    36 dcl     cobol_ext_lex$cobol_new_line_character char (1) ext;
  4    37 dcl     cobol_new_line_character char (1) defined (  cobol_ext_lex$cobol_new_line_character);
  4    38 dcl     cobol_ext_lex$cobol_si_key char (5) ext;
  4    39 dcl     cobol_si_key char (5) defined (  cobol_ext_lex$cobol_si_key);     /* -2- */
  4    40 dcl     cobol_ext_lex$cobol_so_key char (5) ext;
  4    41 dcl     cobol_so_key char (5) defined (  cobol_ext_lex$cobol_so_key);     /* -2- */
  4    42 
  4    43 /* Fixed bin */
  4    44 
  4    45 dcl    cobol_ext_lex$ph_num fixed bin ext;
  4    46 dcl     ph_num fixed bin defined(cobol_ext_lex$ph_num );
  4    47 dcl     cobol_ext_lex$cobol_c_l_n fixed bin ext;
  4    48 dcl     cobol_c_l_n fixed bin defined (  cobol_ext_lex$cobol_c_l_n);
  4    49 dcl     cobol_ext_lex$cobol_save_cln fixed bin ext;
  4    50 dcl     cobol_save_cln fixed bin defined (  cobol_ext_lex$cobol_save_cln);
  4    51 dcl     cobol_ext_lex$cobol_save_col fixed bin ext;
  4    52 dcl     cobol_save_col fixed bin defined (  cobol_ext_lex$cobol_save_col);
  4    53 dcl     cobol_ext_lex$cobol_name_number fixed bin ext;
  4    54 dcl     cobol_name_number fixed bin defined (  cobol_ext_lex$cobol_name_number);
  4    55 dcl     cobol_ext_lex$cobol_section_number fixed bin ext;
  4    56 dcl     cobol_section_number fixed bin defined (  cobol_ext_lex$cobol_section_number);
  4    57 dcl     cobol_ext_lex$cobol_sr fixed bin ext;
  4    58 dcl     cobol_sr fixed bin defined (  cobol_ext_lex$cobol_sr);
  4    59 dcl     cobol_ext_lex$cobol_elt_idx fixed bin ext;
  4    60 dcl     cobol_elt_idx fixed bin defined (  cobol_ext_lex$cobol_elt_idx);
  4    61 
  4    62 /* Structures */
  4    63 
  4    64 dcl 1     cobol_ext_lex$cobol_cards ext like   cobol_cards;
  4    65 dcl 1     cobol_cards defined (  cobol_ext_lex$cobol_cards),     /* -67- */
  4    66     2 column fixed bin,
  4    67     2 tblanks fixed bin,
  4    68     2 nr_char fixed bin,
  4    69     2 name char (256);
  4    70 
  4    71 /* Bits */
  4    72 
  4    73 dcl cobol_ext_lex$processing_report bit(1) ext;
  4    74 dcl processing_report bit (1) defined (cobol_ext_lex$processing_report);
  4    75 dcl cobol_ext_lex$real_end_report bit (1) ext;
  4    76 dcl real_end_report bit (1) defined (cobol_ext_lex$real_end_report);
  4    77 dcl     cobol_ext_lex$cobol_continuation bit (1) ext;
  4    78 dcl     cobol_continuation bit (1) defined (  cobol_ext_lex$cobol_continuation);
  4    79 dcl     cobol_ext_lex$cobol_pic_switch bit (1) ext;
  4    80 dcl     cobol_pic_switch bit (1) defined (  cobol_ext_lex$cobol_pic_switch);
  4    81 dcl     cobol_ext_lex$cobol_allo_init_sw bit (1) ext;
  4    82 dcl     cobol_allo_init_sw bit (1) defined (  cobol_ext_lex$cobol_allo_init_sw);
  4    83 dcl     cobol_ext_lex$cobol_lu_sw bit (1) ext;
  4    84 dcl     cobol_lu_sw bit (1) defined (  cobol_ext_lex$cobol_lu_sw);
  4    85 dcl     cobol_ext_lex$cobol_scanoff_sw bit (1) ext;
  4    86 dcl     cobol_scanoff_sw bit (1) defined (  cobol_ext_lex$cobol_scanoff_sw);
  4    87 dcl     cobol_ext_lex$cobol_output_sw bit (1) ext;
  4    88 dcl     cobol_output_sw bit (1) defined (  cobol_ext_lex$cobol_output_sw);
  4    89 dcl     cobol_ext_lex$cobol_stack_sw bit (1) ext;
  4    90 dcl     cobol_stack_sw bit (1) defined (  cobol_ext_lex$cobol_stack_sw);
  4    91 dcl     cobol_ext_lex$cobol_copy_found bit (1) ext;
  4    92 dcl     cobol_copy_found bit (1) defined (  cobol_ext_lex$cobol_copy_found);
  4    93 dcl     cobol_ext_lex$cobol_head_words (5) bit (1) ext;
  4    94 dcl     cobol_head_words (5) bit (1) defined (  cobol_ext_lex$cobol_head_words);
  4    95 dcl     cobol_ext_lex$cobol_elnp_sw bit (1) ext;
  4    96 dcl     cobol_elnp_sw bit (1) defined (  cobol_ext_lex$cobol_elnp_sw);
  4    97 dcl     cobol_ext_lex$cobol_dp_sw bit (1) ext;
  4    98 dcl     cobol_dp_sw bit (1) defined (  cobol_ext_lex$cobol_dp_sw);
  4    99 dcl     cobol_ext_lex$cobol_endprog_sw bit (1) ext;
  4   100 dcl     cobol_endprog_sw bit (1) defined (  cobol_ext_lex$cobol_endprog_sw);
  4   101 dcl     cobol_ext_lex$cobol_debug_mode bit (1) ext;
  4   102 dcl     cobol_debug_mode bit (1) defined (  cobol_ext_lex$cobol_debug_mode);
  4   103 dcl     cobol_ext_lex$cobol_rwt_init_sw bit (1) ext;
  4   104 dcl     cobol_rwt_init_sw bit (1) defined (  cobol_ext_lex$cobol_rwt_init_sw);
  4   105 dcl     cobol_ext_lex$cobol_init_ta_sw bit (1) ext;
  4   106 dcl     cobol_init_ta_sw bit (1) defined (  cobol_ext_lex$cobol_init_ta_sw);
  4   107 dcl     cobol_ext_lex$cobol_rep_sw bit (1) ext;
  4   108 dcl     cobol_rep_sw bit (1) defined (  cobol_ext_lex$cobol_rep_sw);
  4   109 dcl     cobol_ext_lex$cobol_copy_active bit (1) ext;
  4   110 dcl     cobol_copy_active bit (1) defined (  cobol_ext_lex$cobol_copy_active);
  4   111 dcl     cobol_ext_lex$cobol_ln_sw (2) bit (1) ext;
  4   112 dcl     cobol_ln_sw (2) bit (1) defined (  cobol_ext_lex$cobol_ln_sw);
  4   113 dcl     cobol_ext_lex$cobol_prime_sw bit (1) ext;
  4   114 dcl     cobol_prime_sw bit (1) defined (  cobol_ext_lex$cobol_prime_sw);
  4   115 dcl     cobol_ext_lex$cobol_rec1_sw (2) bit (1) ext;
  4   116 dcl     cobol_rec1_sw (2) bit (1) defined (  cobol_ext_lex$cobol_rec1_sw);
  4   117 dcl     cobol_ext_lex$cobol_progid_sw bit(1) ext;
  4   118 dcl     cobol_progid_sw bit(1) defined (  cobol_ext_lex$cobol_progid_sw);
  4   119 
  4   120 
  4   121 /*   * * *   END LEX EXTERNAL DATA   * * *   */
  4   122 /* END INCLUDE FILE ... cobol_ext_lex.incl.pl1 */
  4   123 
     1555 
  5     1 
  5     2 /* BEGIN INCLUDE FILE ... cobol_.incl.pl1 */
  5     3 /* last modified Feb 4, 1977 by ORN  */
  5     4 
  5     5 /* This file defines all external data used in the generator phase of Multics Cobol */
  5     6 
  5     7 /* POINTERS */
  5     8 dcl cobol_$text_base_ptr ptr  ext;
  5     9 dcl text_base_ptr ptr  defined (cobol_$text_base_ptr);
  5    10 dcl cobol_$con_end_ptr ptr  ext;
  5    11 dcl con_end_ptr ptr  defined (cobol_$con_end_ptr);
  5    12 dcl cobol_$def_base_ptr ptr  ext;
  5    13 dcl def_base_ptr ptr  defined (cobol_$def_base_ptr);
  5    14 dcl cobol_$link_base_ptr ptr  ext;
  5    15 dcl link_base_ptr ptr  defined (cobol_$link_base_ptr);
  5    16 dcl cobol_$sym_base_ptr ptr  ext;
  5    17 dcl sym_base_ptr ptr  defined (cobol_$sym_base_ptr);
  5    18 dcl cobol_$reloc_text_base_ptr ptr  ext;
  5    19 dcl reloc_text_base_ptr ptr  defined (cobol_$reloc_text_base_ptr);
  5    20 dcl cobol_$reloc_def_base_ptr ptr  ext;
  5    21 dcl reloc_def_base_ptr ptr  defined (cobol_$reloc_def_base_ptr);
  5    22 dcl cobol_$reloc_link_base_ptr ptr  ext;
  5    23 dcl reloc_link_base_ptr ptr  defined (cobol_$reloc_link_base_ptr);
  5    24 dcl cobol_$reloc_sym_base_ptr ptr  ext;
  5    25 dcl reloc_sym_base_ptr ptr  defined (cobol_$reloc_sym_base_ptr);
  5    26 dcl cobol_$reloc_work_base_ptr ptr  ext;
  5    27 dcl reloc_work_base_ptr ptr  defined (cobol_$reloc_work_base_ptr);
  5    28 dcl cobol_$pd_map_ptr ptr  ext;
  5    29 dcl pd_map_ptr ptr  defined (cobol_$pd_map_ptr);
  5    30 dcl cobol_$fixup_ptr ptr  ext;
  5    31 dcl fixup_ptr ptr  defined (cobol_$fixup_ptr);
  5    32 dcl cobol_$initval_base_ptr ptr  ext;
  5    33 dcl initval_base_ptr ptr  defined (cobol_$initval_base_ptr);
  5    34 dcl cobol_$initval_file_ptr ptr  ext;
  5    35 dcl initval_file_ptr ptr  defined (cobol_$initval_file_ptr);
  5    36 dcl cobol_$perform_list_ptr ptr  ext;
  5    37 dcl perform_list_ptr ptr  defined (cobol_$perform_list_ptr);
  5    38 dcl cobol_$alter_list_ptr ptr  ext;
  5    39 dcl alter_list_ptr ptr  defined (cobol_$alter_list_ptr);
  5    40 dcl cobol_$seg_init_list_ptr ptr  ext;
  5    41 dcl seg_init_list_ptr ptr  defined (cobol_$seg_init_list_ptr);
  5    42 dcl cobol_$temp_token_area_ptr ptr  ext;
  5    43 dcl temp_token_area_ptr ptr  defined (cobol_$temp_token_area_ptr);
  5    44 dcl cobol_$temp_token_ptr ptr  ext;
  5    45 dcl temp_token_ptr ptr  defined (cobol_$temp_token_ptr);
  5    46 dcl cobol_$token_block1_ptr ptr  ext;
  5    47 dcl token_block1_ptr ptr  defined (cobol_$token_block1_ptr);
  5    48 dcl cobol_$token_block2_ptr ptr  ext;
  5    49 dcl token_block2_ptr ptr  defined (cobol_$token_block2_ptr);
  5    50 dcl cobol_$minpral5_ptr ptr  ext;
  5    51 dcl minpral5_ptr ptr  defined (cobol_$minpral5_ptr);
  5    52 dcl cobol_$tag_table_ptr ptr  ext;
  5    53 dcl tag_table_ptr ptr  defined (cobol_$tag_table_ptr);
  5    54 dcl cobol_$map_data_ptr ptr  ext;
  5    55 dcl map_data_ptr ptr  defined (cobol_$map_data_ptr);
  5    56 dcl cobol_$ptr_status_ptr ptr  ext;
  5    57 dcl ptr_status_ptr ptr  defined (cobol_$ptr_status_ptr);
  5    58 dcl cobol_$reg_status_ptr ptr  ext;
  5    59 dcl reg_status_ptr ptr  defined (cobol_$reg_status_ptr);
  5    60 dcl cobol_$misc_base_ptr ptr ext;
  5    61 dcl misc_base_ptr ptr defined (cobol_$misc_base_ptr);
  5    62 dcl cobol_$misc_end_ptr ptr ext;
  5    63 dcl misc_end_ptr ptr defined (cobol_$misc_end_ptr);
  5    64 dcl cobol_$list_ptr ptr ext;
  5    65 dcl list_ptr ptr defined (cobol_$list_ptr);
  5    66 dcl cobol_$allo1_ptr ptr ext;
  5    67 dcl allo1_ptr ptr defined (cobol_$allo1_ptr);
  5    68 dcl cobol_$eln_ptr ptr ext;
  5    69 dcl eln_ptr ptr defined (cobol_$eln_ptr);
  5    70 dcl cobol_$diag_ptr ptr ext;
  5    71 dcl diag_ptr ptr defined (cobol_$diag_ptr);
  5    72 dcl cobol_$xref_token_ptr ptr ext;
  5    73 dcl xref_token_ptr ptr defined (cobol_$xref_token_ptr);
  5    74 dcl cobol_$xref_chain_ptr ptr ext;
  5    75 dcl xref_chain_ptr ptr defined (cobol_$xref_chain_ptr);
  5    76 dcl cobol_$statement_info_ptr ptr ext;
  5    77 dcl statement_info_ptr ptr defined (cobol_$statement_info_ptr);
  5    78 dcl cobol_$reswd_ptr ptr ext;
  5    79 dcl reswd_ptr ptr defined (cobol_$reswd_ptr);
  5    80 dcl cobol_$op_con_ptr ptr ext;
  5    81 dcl op_con_ptr ptr defined (cobol_$op_con_ptr);
  5    82 dcl cobol_$ntbuf_ptr ptr ext;
  5    83 dcl ntbuf_ptr ptr defined (cobol_$ntbuf_ptr);
  5    84 dcl cobol_$main_pcs_ptr ptr ext;
  5    85 dcl main_pcs_ptr ptr defined (cobol_$main_pcs_ptr);
  5    86 dcl cobol_$include_info_ptr ptr ext;
  5    87 dcl include_info_ptr ptr defined (cobol_$include_info_ptr);
  5    88 
  5    89 /* FIXED BIN */
  5    90 dcl cobol_$text_wd_off fixed bin  ext;
  5    91 dcl text_wd_off fixed bin  defined (cobol_$text_wd_off);
  5    92 dcl cobol_$con_wd_off fixed bin  ext;
  5    93 dcl con_wd_off fixed bin  defined (cobol_$con_wd_off);
  5    94 dcl cobol_$def_wd_off fixed bin  ext;
  5    95 dcl def_wd_off fixed bin  defined (cobol_$def_wd_off);
  5    96 dcl cobol_$def_max fixed bin  ext;
  5    97 dcl def_max fixed bin  defined (cobol_$def_max);
  5    98 dcl cobol_$link_wd_off fixed bin  ext;
  5    99 dcl link_wd_off fixed bin  defined (cobol_$link_wd_off);
  5   100 dcl cobol_$link_max fixed bin  ext;
  5   101 dcl link_max fixed bin  defined (cobol_$link_max);
  5   102 dcl cobol_$sym_wd_off fixed bin  ext;
  5   103 dcl sym_wd_off fixed bin  defined (cobol_$sym_wd_off);
  5   104 dcl cobol_$sym_max fixed bin  ext;
  5   105 dcl sym_max fixed bin  defined (cobol_$sym_max);
  5   106 dcl cobol_$reloc_text_max fixed bin(24)  ext;
  5   107 dcl reloc_text_max fixed bin(24)  defined (cobol_$reloc_text_max);
  5   108 dcl cobol_$reloc_def_max fixed bin(24)  ext;
  5   109 dcl reloc_def_max fixed bin(24)  defined (cobol_$reloc_def_max);
  5   110 dcl cobol_$reloc_link_max fixed bin(24)  ext;
  5   111 dcl reloc_link_max fixed bin(24)  defined (cobol_$reloc_link_max);
  5   112 dcl cobol_$reloc_sym_max fixed bin(24)  ext;
  5   113 dcl reloc_sym_max fixed bin(24)  defined (cobol_$reloc_sym_max);
  5   114 dcl cobol_$reloc_work_max fixed bin(24)  ext;
  5   115 dcl reloc_work_max fixed bin(24)  defined (cobol_$reloc_work_max);
  5   116 dcl cobol_$pd_map_index fixed bin  ext;
  5   117 dcl pd_map_index fixed bin  defined (cobol_$pd_map_index);
  5   118 dcl cobol_$cobol_data_wd_off fixed bin  ext;
  5   119 dcl cobol_data_wd_off fixed bin  defined (cobol_$cobol_data_wd_off);
  5   120 dcl cobol_$stack_off fixed bin  ext;
  5   121 dcl stack_off fixed bin  defined (cobol_$stack_off);
  5   122 dcl cobol_$max_stack_off fixed bin  ext;
  5   123 dcl max_stack_off fixed bin  defined (cobol_$max_stack_off);
  5   124 dcl cobol_$init_stack_off fixed bin  ext;
  5   125 dcl init_stack_off fixed bin  defined (cobol_$init_stack_off);
  5   126 dcl cobol_$pd_map_sw fixed bin  ext;
  5   127 dcl pd_map_sw fixed bin  defined (cobol_$pd_map_sw);
  5   128 dcl cobol_$next_tag fixed bin  ext;
  5   129 dcl next_tag fixed bin  defined (cobol_$next_tag);
  5   130 dcl cobol_$data_init_flag fixed bin  ext;
  5   131 dcl data_init_flag fixed bin  defined (cobol_$data_init_flag);
  5   132 dcl cobol_$seg_init_flag fixed bin  ext;
  5   133 dcl seg_init_flag fixed bin  defined (cobol_$seg_init_flag);
  5   134 dcl cobol_$alter_flag fixed bin  ext;
  5   135 dcl alter_flag fixed bin  defined (cobol_$alter_flag);
  5   136 dcl cobol_$sect_eop_flag fixed bin  ext;
  5   137 dcl sect_eop_flag fixed bin  defined (cobol_$sect_eop_flag);
  5   138 dcl cobol_$para_eop_flag fixed bin  ext;
  5   139 dcl para_eop_flag fixed bin  defined (cobol_$para_eop_flag);
  5   140 dcl cobol_$priority_no fixed bin  ext;
  5   141 dcl priority_no fixed bin  defined (cobol_$priority_no);
  5   142 dcl cobol_$compile_count fixed bin ext;
  5   143 dcl compile_count fixed bin defined (cobol_$compile_count);
  5   144 dcl cobol_$ptr_assumption_ind fixed bin ext;
  5   145 dcl ptr_assumption_ind fixed bin defined (cobol_$ptr_assumption_ind);
  5   146 dcl cobol_$reg_assumption_ind fixed bin ext;
  5   147 dcl reg_assumption_ind fixed bin defined (cobol_$reg_assumption_ind);
  5   148 dcl cobol_$perform_para_index fixed bin ext;
  5   149 dcl perform_para_index fixed bin defined (cobol_$perform_para_index);
  5   150 dcl cobol_$perform_sect_index fixed bin ext;
  5   151 dcl perform_sect_index fixed bin defined (cobol_$perform_sect_index);
  5   152 dcl cobol_$alter_index fixed bin ext;
  5   153 dcl alter_index fixed bin defined (cobol_$alter_index);
  5   154 dcl cobol_$list_off fixed bin ext;
  5   155 dcl list_off fixed bin defined (cobol_$list_off);
  5   156 dcl cobol_$constant_offset fixed bin ext;
  5   157 dcl constant_offset fixed bin defined (cobol_$constant_offset);
  5   158 dcl cobol_$misc_max fixed bin ext;
  5   159 dcl misc_max fixed bin defined (cobol_$misc_max);
  5   160 dcl cobol_$pd_map_max fixed bin ext;
  5   161 dcl pd_map_max fixed bin defined (cobol_$pd_map_max);
  5   162 dcl cobol_$map_data_max fixed bin ext;
  5   163 dcl map_data_max fixed bin defined (cobol_$map_data_max);
  5   164 dcl cobol_$fixup_max fixed bin ext;
  5   165 dcl fixup_max fixed bin defined (cobol_$fixup_max);
  5   166 dcl cobol_$tag_table_max fixed bin ext;
  5   167 dcl tag_table_max fixed bin defined (cobol_$tag_table_max);
  5   168 dcl cobol_$temp_token_max fixed bin ext;
  5   169 dcl temp_token_max fixed bin defined (cobol_$temp_token_max);
  5   170 dcl cobol_$allo1_max fixed bin ext;
  5   171 dcl allo1_max fixed bin defined (cobol_$allo1_max);
  5   172 dcl cobol_$eln_max fixed bin ext;
  5   173 dcl eln_max fixed bin defined (cobol_$eln_max);
  5   174 dcl cobol_$debug_enable fixed bin ext;
  5   175 dcl debug_enable fixed bin defined (cobol_$debug_enable);
  5   176 dcl cobol_$non_source_offset fixed bin ext;
  5   177 dcl non_source_offset fixed bin defined (cobol_$non_source_offset);
  5   178 dcl cobol_$initval_flag fixed bin ext;
  5   179 dcl initval_flag fixed bin defined (cobol_$initval_flag);
  5   180 dcl cobol_$date_compiled_sw fixed bin ext;
  5   181 dcl date_compiled_sw fixed bin defined (cobol_$date_compiled_sw);
  5   182 dcl cobol_$include_cnt fixed bin ext;
  5   183 dcl include_cnt fixed bin defined (cobol_$include_cnt);
  5   184 dcl cobol_$fs_charcnt fixed bin ext;
  5   185 dcl fs_charcnt fixed bin defined (cobol_$fs_charcnt);
  5   186 dcl cobol_$ws_charcnt fixed bin ext;
  5   187 dcl ws_charcnt fixed bin defined (cobol_$ws_charcnt);
  5   188 dcl cobol_$coms_charcnt fixed bin ext;
  5   189 dcl coms_charcnt fixed bin defined (cobol_$coms_charcnt);
  5   190 dcl cobol_$ls_charcnt fixed bin ext;
  5   191 dcl ls_charcnt fixed bin defined (cobol_$ls_charcnt);
  5   192 dcl cobol_$cons_charcnt fixed bin ext;
  5   193 dcl cons_charcnt fixed bin defined (cobol_$cons_charcnt);
  5   194 dcl cobol_$value_cnt fixed bin ext;
  5   195 dcl value_cnt fixed bin defined (cobol_$value_cnt);
  5   196 dcl cobol_$cd_cnt fixed bin ext;
  5   197 dcl cd_cnt fixed bin defined (cobol_$cd_cnt);
  5   198 dcl cobol_$fs_wdoff fixed bin ext;
  5   199 dcl fs_wdoff fixed bin defined (cobol_$fs_wdoff);
  5   200 dcl cobol_$ws_wdoff fixed bin ext;
  5   201 dcl ws_wdoff fixed bin defined (cobol_$ws_wdoff);
  5   202 dcl cobol_$coms_wdoff fixed bin ext;
  5   203 dcl coms_wdoff fixed bin defined (cobol_$coms_wdoff);
  5   204 
  5   205 /* CHARACTER */
  5   206 dcl cobol_$scratch_dir char (168)   aligned ext;
  5   207 dcl scratch_dir char (168)   aligned defined (cobol_$scratch_dir);			/* -42- */
  5   208 dcl cobol_$obj_seg_name char (32)   aligned ext;
  5   209 dcl obj_seg_name char (32)   aligned defined (cobol_$obj_seg_name);		/* -8- */
  5   210 
  5   211 /* BIT */
  5   212 dcl cobol_$xref_bypass bit(1) aligned ext;
  5   213 dcl xref_bypass bit(1) aligned defined (cobol_$xref_bypass);			/* -1- */
  5   214 dcl cobol_$same_sort_merge_proc bit(1) aligned ext;
  5   215 dcl same_sort_merge_proc bit(1) aligned defined (cobol_$same_sort_merge_proc);		/* -1- */
  5   216 
  5   217 
  5   218 /* END INCLUDE FILE ... cobol_incl.pl1*/
  5   219 
  5   220 
     1556 
     1557 
     1558      end cobol_res_words;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/24/89  0835.3  cobol_res_words.pl1               >spec>install>MR12.3-1048>cobol_res_words.pl1
1552         1    03/27/82  0439.8  cobol_reswd_values.incl.pl1       >ldd>include>cobol_reswd_values.incl.pl1
1553         2    03/27/82  0431.3  cobol_ext_.incl.pl1               >ldd>include>cobol_ext_.incl.pl1
1554         3    11/11/82  1712.8  cobol_fixed_common.incl.pl1       >ldd>include>cobol_fixed_common.incl.pl1
1555         4    03/27/82  0431.6  cobol_ext_lex.incl.pl1            >ldd>include>cobol_ext_lex.incl.pl1
1556         5    11/11/82  1712.7  cobol_.incl.pl1                   >ldd>include>cobol_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
DS                              000164 internal static bit(1)                   packed unaligned dcl 1480 set ref 63* 133 731*
PDF                             000100 automatic       pointer                  dcl 1420 set ref 880* 883* 1059* 1062*
ad_attn                         000060 internal static pointer                  dcl 1447 set ref 76* 482
addr                                                   builtin function         dcl 1456 ref 76 122 189 189 347 358 358 1545
alphanum_lit                           based           structure                level 1 unaligned dcl 1368
area_a_sw                       000040 internal static bit(1)                   packed unaligned dcl 1432 set ref 72* 194* 366*
at_wd                     0(32)        based           bit(1)                   array level 2 packed packed unaligned dcl 1438 set
                                                                                  ref 482*
attn                                   based           bit(4)                   level 3 packed packed unaligned dcl 1491 ref 476 480
                                                                                  482
back_link                 2            based           pointer                  level 2 dcl 1314 ref 310
c_f_sw                          000037 internal static bit(1)                   packed unaligned dcl 1432 set ref 83* 85* 89 686*
ch                                     parameter       char(1)                  packed unaligned dcl 1184 in procedure "name_seq"
                                                                                  set ref 1180 1195*
ch                                     parameter       char(1)                  packed unaligned dcl 1130 in procedure "prefix_name"
                                                                                  ref 1126 1135
char2                     0(18)        based           char(2)                  level 2 packed packed unaligned dcl 1441 ref 347
class                                  based           structure                level 3 in structure "g1" packed packed unaligned
                                                                                  dcl 1491 in procedure "cobol_res_words"
class                    14            based           structure                level 2 in structure "reserved_word" dcl 1348
                                                                                  in procedure "cobol_res_words" set ref 1239* 1252*
cobol_$date_compiled_sw         000602 external static fixed bin(17,0)          dcl 5-180 set ref 819* 941*
cobol_c_list                    000516 constant        entry                    external dcl 1528 ref 1547
cobol_cards                            defined         structure                level 1 unaligned dcl 4-65
cobol_com_ptr                          defined         pointer                  dcl 2-25 ref 76 77 133 219 354 355 381 381 600 666
                                                                                  799 818 846 861 875 878 909 921 1040 1053 1214
cobol_comma_character                  defined         char(1)                  packed unaligned dcl 4-33 set ref 665*
cobol_current                          defined         pointer                  dcl 4-10 set ref 73 83 83 94 94 94 94 107 109 117
                                                                                  120 126 161 168 171 172 174 182 185 189 200 200
                                                                                  204 204 210 210 216 216 225 225 225 234 234 234
                                                                                  243 243 243 247 247 252 252 252 259 259 259 270
                                                                                  273 273 273 280 280 280 289 289 289 297 310 310
                                                                                  310 312 360 360 360 395 397 404 409 412 412 415
                                                                                  416 420 422 423 424 426 428 430 430 430 430 430
                                                                                  460 588 588 626 626 648 650 658 662 674 707 707
                                                                                  707 707 711 715 715 746 749 766 776 776 787 787
                                                                                  793 815 818 832 834 836 840 846 857 857 896 901
                                                                                  904 916 921 921 932 945 953 955 969 971 992 998
                                                                                  998 1003 1011 1019 1023 1029 1033 1045 1074 1085
                                                                                  1095 1102 1116 1118 1119 1120 1134 1135 1135 1137
                                                                                  1138 1138 1149 1161 1165 1165 1170 1191 1217 1237
                                                                                  1238 1239 1240 1244 1245 1246 1250 1251 1252 1257*
                                                                                  1542 1543
cobol_db_phase$proc_def_ptr     000510 constant        entry                    external dcl 1412 ref 883 1062
cobol_debug_mode                       defined         bit(1)                   packed unaligned dcl 4-102 set ref 133 381* 864*
cobol_decimal_point_character          defined         char(1)                  packed unaligned dcl 4-35 set ref 664*
cobol_delete_tokens             000502 constant        entry                    external dcl 1406 ref 191
cobol_dp_sw                            defined         bit(1)                   packed unaligned dcl 4-98 set ref 638 641* 646* 652*
                                                                                  656* 667*
cobol_endprog_sw                       defined         bit(1)                   packed unaligned dcl 4-100 set ref 798*
cobol_ext_$cobol_com_ptr        000520 external static pointer                  dcl 2-24 ref 76 76 77 77 133 133 219 219 354 354 355
                                                                                  355 381 381 381 381 600 600 666 666 799 799 818
                                                                                  818 846 846 861 861 875 875 878 878 909 909 921
                                                                                  921 1040 1040 1053 1053 1214 1214
cobol_ext_$cobol_m2fp           000522 external static pointer                  dcl 2-32 ref 585 585 782 782
cobol_ext_$cobol_ntfp           000524 external static pointer                  dcl 2-42 ref 358 358
cobol_ext_$report_exists        000526 external static bit(1)                   packed unaligned dcl 2-102 set ref 407 407 790 790
                                                                                  1037 1037 1040* 1040 1057 1057 1153 1153 1174 1174
cobol_ext_lex$cobol_comma_character
                                000540 external static char(1)                  packed unaligned dcl 4-32 set ref 665* 665
cobol_ext_lex$cobol_current     000530 external static pointer                  dcl 4-9 set ref 73 73 83 83 83 83 94 94 94 94 94 94
                                                                                  94 94 107 107 109 109 117 117 120 120 126 126 161
                                                                                  161 168 168 171 171 172 172 174 174 182 182 185
                                                                                  185 189 189 200 200 200 200 204 204 204 204 210
                                                                                  210 210 210 216 216 216 216 225 225 225 225 225
                                                                                  225 234 234 234 234 234 234 243 243 243 243 243
                                                                                  243 247 247 247 247 252 252 252 252 252 252 259
                                                                                  259 259 259 259 259 270 270 273 273 273 273 273
                                                                                  273 280 280 280 280 280 280 289 289 289 289 289
                                                                                  289 297 297 310 310 310 310 310 310 312 312 360
                                                                                  360 360 360 360 360 395 395 397 397 404 404 409
                                                                                  409 412 412 412 412 415 415 416 416 420 420 422
                                                                                  422 423 423 424 424 426 426 428 428 430 430 430
                                                                                  430 430 430 430 430 430 430 460 460 588 588 588
                                                                                  588 626 626 626 626 648 648 650 650 658 658 662
                                                                                  662 674 674 707 707 707 707 707 707 707 707 711
                                                                                  711 715 715 715 715 746 746 749 749 766 766 776
                                                                                  776 776 776 787 787 787 787 793 793 815 815 818
                                                                                  818 832 832 834 834 836 836 840 840 846 846 857
                                                                                  857 857 857 896 896 901 901 904 904 916 916 921
                                                                                  921 921 921 932 932 945 945 953 953 955 955 969
                                                                                  969 971 971 992 992 998 998 998 998 1003 1003 1011
                                                                                  1011 1019 1019 1023 1023 1029 1029 1033 1033 1045
                                                                                  1045 1074 1074 1085 1085 1095 1095 1102 1102 1116
                                                                                  1116 1118 1118 1119 1119 1120 1120 1134 1134 1135
                                                                                  1135 1135 1135 1137 1137 1138 1138 1138 1138 1149
                                                                                  1149 1161 1161 1165 1165 1165 1165 1170 1170 1191
                                                                                  1191 1217 1217 1237 1237 1238 1238 1239 1239 1240
                                                                                  1240 1244 1244 1245 1245 1246 1246 1250 1250 1251
                                                                                  1251 1252 1252 1257* 1257 1542 1542 1543 1543
cobol_ext_lex$cobol_debug_mode  000574 external static bit(1)                   packed unaligned dcl 4-101 set ref 133 133 381* 381
                                                                                  864* 864
cobol_ext_lex$cobol_decimal_point_character
                                000542 external static char(1)                  packed unaligned dcl 4-34 set ref 664* 664
cobol_ext_lex$cobol_dp_sw       000570 external static bit(1)                   packed unaligned dcl 4-97 set ref 638 638 641* 641
                                                                                  646* 646 652* 652 656* 656 667* 667
cobol_ext_lex$cobol_endprog_sw  000572 external static bit(1)                   packed unaligned dcl 4-99 set ref 798* 798
cobol_ext_lex$cobol_frst        000534 external static pointer                  dcl 4-13 set ref 744 744 1216 1216 1221* 1221 1256*
                                                                                  1256
cobol_ext_lex$cobol_head_words  000566 external static bit(1)                   array packed unaligned dcl 4-93 set ref 92 92 102*
                                                                                  102 103* 103 157 157 430 430 469 469 469 469 476
                                                                                  476 490 490 507 507 533* 533 544 544 549 549 552*
                                                                                  552 566* 566 570* 570 572* 572 594* 594 619 619
                                                                                  619 619 634 634 634 634 690 690 698 698 698 698
                                                                                  722 722 780 780 809 809 809 809 823 823 823 823
                                                                                  850 850 850 850 873 873 892 892 892 892 927 927
                                                                                  927 927 945 945 945 945 988 988 988 988 1011 1011
                                                                                  1011 1011 1051 1051 1078 1078 1089 1089 1099 1099
                                                                                  1105 1105
cobol_ext_lex$cobol_lu_sw       000560 external static bit(1)                   packed unaligned dcl 4-83 set ref 703* 703 718* 718
                                                                                  907* 907 923* 923
cobol_ext_lex$cobol_mfp         000536 external static pointer                  dcl 4-15 set ref 585* 585 782* 782
cobol_ext_lex$cobol_name_number 000546 external static fixed bin(17,0)          dcl 4-53 set ref 178 178 300 300 349 349 354 354 355
                                                                                  355 356* 356 356 356
cobol_ext_lex$cobol_pic_switch  000556 external static bit(1)                   packed unaligned dcl 4-79 set ref 622* 622 630* 630
cobol_ext_lex$cobol_progid_sw   000600 external static bit(1)                   packed unaligned dcl 4-117 set ref 909* 909 914* 914
cobol_ext_lex$cobol_rwt_init_sw 000576 external static bit(1)                   packed unaligned dcl 4-103 set ref 69 69 71* 71
cobol_ext_lex$cobol_scanoff_sw  000562 external static bit(1)                   packed unaligned dcl 4-85 set ref 935* 935 940* 940
cobol_ext_lex$cobol_section_number
                                000550 external static fixed bin(17,0)          dcl 4-55 set ref 179 179 300* 300 348 348
cobol_ext_lex$cobol_stack_sw    000564 external static bit(1)                   packed unaligned dcl 4-89 set ref 182 182 191 191
                                                                                  303 303 304* 304 308* 308 584* 584 613* 613 739*
                                                                                  739 805* 805 1219 1219 1220* 1220 1259* 1259
cobol_ext_lex$cobol_top         000532 external static pointer                  dcl 4-11 set ref 1218 1218 1258* 1258
cobol_ext_lex$ph_num            000544 external static fixed bin(17,0)          dcl 4-45 set ref 374* 374 519* 519 525* 525 529* 529
                                                                                  597* 597
cobol_ext_lex$processing_report 000552 external static bit(1)                   packed unaligned dcl 4-73 ref 578 578
cobol_ext_lex$real_end_report   000554 external static bit(1)                   packed unaligned dcl 4-75 ref 790 790
cobol_frst                             defined         pointer                  dcl 4-14 set ref 744 1216 1221* 1256*
cobol_gns                       000470 constant        entry                    external dcl 1402 ref 938
cobol_gns1                      000466 constant        entry                    external dcl 1402 ref 196 200 208 214 222 232 241
                                                                                  246 247 270 306 586 611 624 626 644 654 705 712
                                                                                  715 742 829 854 899 912 950 966 995 1016 1027 1146
                                                                                  1158 1167 1190
cobol_head_words                       defined         bit(1)                   array packed unaligned dcl 4-94 set ref 92 102* 103*
                                                                                  157 430 469 469 476 490 507 533* 544 549 552* 566*
                                                                                  570* 572* 594* 619 619 634 634 690 698 698 722 780
                                                                                  809 809 823 823 850 850 873 892 892 927 927 945
                                                                                  945 988 988 1011 1011 1051 1078 1089 1099 1105
cobol_insert_token              000500 constant        entry                    external dcl 1405 ref 187 1235 1242 1248
cobol_io_$set_state             000462 constant        entry                    external dcl 1400 ref 604 760 961
cobol_lexerr                    000464 constant        entry                    external dcl 1401 ref 400 678 799 842 918 1037 1223
                                                                                  1225
cobol_lu_sw                            defined         bit(1)                   packed unaligned dcl 4-84 set ref 703* 718* 907*
                                                                                  923*
cobol_m2fp                             defined         pointer                  dcl 2-33 ref 585 782
cobol_mfp                              defined         pointer                  dcl 4-16 set ref 585* 782*
cobol_name_number                      defined         fixed bin(17,0)          dcl 4-54 set ref 178 300 349 354 355 356* 356
cobol_ntfp                             defined         pointer                  dcl 2-43 set ref 358*
cobol_output_tokens             000474 constant        entry                    external dcl 1402 ref 1254
cobol_output_tokens$proc_def_ptr
                                000506 constant        entry                    external dcl 1410 ref 880 1059
cobol_pic_switch                       defined         bit(1)                   packed unaligned dcl 4-80 set ref 622* 630*
cobol_proc_copy                 000504 constant        entry                    external dcl 1407 ref 683
cobol_proc_sort                 000472 constant        entry                    external dcl 1402 ref 694
cobol_progid_sw                        defined         bit(1)                   packed unaligned dcl 4-118 set ref 909* 914*
cobol_rwt_init_sw                      defined         bit(1)                   packed unaligned dcl 4-104 set ref 69 71*
cobol_scanoff_sw                       defined         bit(1)                   packed unaligned dcl 4-86 set ref 935* 940*
cobol_section_number                   defined         fixed bin(17,0)          dcl 4-56 set ref 179 300* 348
cobol_stack_sw                         defined         bit(1)                   packed unaligned dcl 4-90 set ref 182 191 303 304*
                                                                                  308* 584* 613* 739* 805* 1219 1220* 1259*
cobol_top                              defined         pointer                  dcl 4-12 set ref 1218 1258*
cobol_vdwf_sput                 000476 constant        entry                    external dcl 1404 ref 358
column                   11            based           fixed bin(17,0)          level 2 in structure "token" dcl 1288 in procedure
                                                                                  "cobol_res_words" ref 225 243 252 273 360
column                   11            based           fixed bin(17,0)          level 2 in structure "reserved_word" dcl 1348
                                                                                  in procedure "cobol_res_words" ref 430 815 896 932
                                                                                  945 992 1011
column                   11            based           fixed bin(17,0)          level 2 in structure "source" dcl 1299 in procedure
                                                                                  "cobol_res_words" set ref 1237* 1244* 1250*
column                   11            based           fixed bin(17,0)          level 2 in structure "user_word" dcl 1314
                                                                                  in procedure "cobol_res_words" ref 161 171 1543
column                    2     000452 internal static fixed bin(17,0)          initial level 2 in structure "lev_message" dcl 1530
                                                                                  in procedure "cobol_res_words" set ref 1543*
column                    2     000010 internal static fixed bin(17,0)          level 2 in structure "procname" dcl 1329
                                                                                  in procedure "cobol_res_words" set ref 171*
comp_level              137            based           char(1)                  level 2 packed packed unaligned dcl 3-26 ref 133 219
                                                                                  1214
compiler_id             154            based           fixed bin(17,0)          level 2 dcl 3-26 ref 909
currency                 17(09)        based           char(1)                  level 2 packed packed unaligned dcl 3-26 set ref
                                                                                  846*
date_comp_ln            155            based           fixed bin(17,0)          level 2 dcl 3-26 set ref 818*
db_bit                    0(02) 000063 internal static bit(1)                   level 2 packed packed unaligned dcl 1465 set ref 799
                                                                                  975*
dclr_sec                        000047 internal static fixed bin(17,0)          dcl 1444 set ref 79* 335 343* 343 735* 735
dd                       14(08)        based           bit(8)                   level 3 in structure "reserved_word" packed packed
                                                                                  unaligned dcl 1348 in procedure "cobol_res_words"
                                                                                  set ref 424*
dd                                     based           bit(6)                   level 4 in structure "g1" packed packed unaligned
                                                                                  dcl 1491 in procedure "cobol_res_words" ref 424
debug                   134(01)        based           bit(1)                   level 2 packed packed unaligned dcl 3-26 set ref
                                                                                  381* 600 799 861* 878
dec_comma               133(33)        based           bit(1)                   level 2 packed packed unaligned dcl 3-26 set ref
                                                                                  666*
decl_bit                        000063 internal static bit(1)                   level 2 packed packed unaligned dcl 1465 set ref 600
                                                                                  608*
def_line                 13     000010 internal static fixed bin(17,0)          level 2 dcl 1329 set ref 170*
f_c_ind                                based           structure                level 1 packed packed unaligned dcl 1438
firsttime                 0(01) 000063 internal static bit(1)                   level 2 packed packed unaligned dcl 1465 set ref 46
                                                                                  62*
fixed                                                  builtin function         dcl 1457 ref 109 321 428 482 486 504 561
fixed_common                           based           structure                level 1 unaligned dcl 3-26
g1                                     based           structure                level 1 dcl 1491
g1_off                          000113 automatic       fixed bin(17,0)          dcl 1516 set ref 109* 111 114
g1_ptr                          000110 automatic       pointer                  dcl 1482 set ref 114* 117 120 122* 122 126 126 129
                                                                                  129 133 137 140 392 395 397 404 423 424 426 428
                                                                                  430 453 476 480 482 486 504 561
g1_stop                                based           bit(36)                  dcl 1483 ref 126
g2                                     based           fixed bin(17,0)          array dcl 1481 ref 109
g2_offset                 1            based           fixed bin(17,0)          array level 2 dcl 1476 ref 59
g2_ptr                          000070 internal static pointer                  array dcl 1479 set ref 59* 109
g3                                     based           structure                level 2 dcl 1491
h_class                         000044 constant        bit(26)                  initial array packed unaligned dcl 1209 ref 1239
h_ji                            000037 constant        fixed bin(17,0)          initial array dcl 1212 ref 1240
h_key                           000050 constant        fixed bin(17,0)          initial array dcl 1208 ref 1238
h_w_count                       000046 internal static fixed bin(17,0)          dcl 1444 set ref 78* 493* 493 495 497* 512*
hcs_$make_ptr                   000514 constant        entry                    external dcl 1519 ref 50
hdr                             000062 constant        char(14)                 initial array packed unaligned dcl 1449 ref 1223
                                                                                  1225
hdr_len                         000055 constant        fixed bin(17,0)          initial array dcl 1451 set ref 1223* 1225*
i                               000045 internal static fixed bin(17,0)          dcl 1432 set ref 58* 59 59* 319* 321* 1273* 1275*
increment_dclr_sec              000051 internal static bit(1)                   packed unaligned dcl 1446 set ref 80* 340 344* 733*
indicators                      000063 internal static structure                level 1 packed packed unaligned dcl 1465 set ref
                                                                                  376*
indv                                   based           bit(4)                   level 3 packed packed unaligned dcl 1491 ref 561
info                     13            based           bit(8)                   level 2 in structure "numeric_lit" packed packed
                                                                                  unaligned dcl 1382 in procedure "cobol_res_words"
                                                                                  set ref 330*
info                     10     000010 internal static bit(8)                   level 2 in structure "procname" packed packed
                                                                                  unaligned dcl 1329 in procedure "cobol_res_words"
                                                                                  set ref 177* 225* 252* 259* 273* 280* 289* 301*
                                                                                  335*
ioa_                            000512 constant        entry                    external dcl 1518 ref 54
ji                                     based           bit(4)                   level 3 packed packed unaligned dcl 1491 ref 428
jump_index               15            based           fixed bin(17,0)          level 2 dcl 1348 set ref 428* 1240*
key                                    based           fixed bin(17,0)          level 3 in structure "g1" packed packed unaligned
                                                                                  dcl 1491 in procedure "cobol_res_words" ref 129
                                                                                  129 133 137 140 395 397 404
key                      13            based           fixed bin(17,0)          level 2 in structure "reserved_word" dcl 1348
                                                                                  in procedure "cobol_res_words" set ref 200 204 210
                                                                                  216 234 234 247 259 259 270 280 280 289 289 297
                                                                                  310 395* 397* 404* 430 430 430 430 588 626 650 662
                                                                                  674 715 749 766 834 836 857 904 955 971 1003 1023
                                                                                  1033 1045 1074 1085 1095 1102 1165 1165 1238*
                                                                                  1245* 1251*
l_info                    6            based           bit(8)                   level 2 in structure "token" packed packed unaligned
                                                                                  dcl 1288 in procedure "cobol_res_words" set ref
                                                                                  793* 794*
l_info                    6            based           bit(8)                   level 2 in structure "user_word" packed packed
                                                                                  unaligned dcl 1314 in procedure "cobol_res_words"
                                                                                  set ref 182* 711*
l_info                    6            based           bit(8)                   level 2 in structure "reserved_word" packed packed
                                                                                  unaligned dcl 1348 in procedure "cobol_res_words"
                                                                                  set ref 460*
last_sort_file                  000451 internal static fixed bin(17,0)          dcl 1525 set ref 64* 997* 997 998 1273
len                             000035 internal static fixed bin(17,0)          dcl 1429 in procedure "cobol_res_words" set ref 98*
                                                                                  107* 498* 542* 544 546* 549 552* 590* 778* 780
                                                                                  782* 1223 1223 1223 1225 1225 1238 1239 1240
len                             000132 automatic       fixed bin(17,0)          dcl 1130 in procedure "prefix_name" set ref 1134*
                                                                                  1135 1135 1137
length                   14            based           fixed bin(17,0)          level 2 in structure "user_word" dcl 1314
                                                                                  in procedure "cobol_res_words" set ref 83 94 94
                                                                                  107 172 409 707 921 998 1118* 1134 1137*
length                   16            based           fixed bin(17,0)          level 2 in structure "reserved_word" dcl 1348
                                                                                  in procedure "cobol_res_words" set ref 416*
length                   14     000010 internal static fixed bin(17,0)          level 2 in structure "procname" dcl 1329
                                                                                  in procedure "cobol_res_words" set ref 172* 174
                                                                                  174 176 187*
lev_message                     000452 internal static structure                level 1 unaligned dcl 1530 set ref 1545
lev_message_ptr                 000116 automatic       pointer                  dcl 1529 set ref 1545* 1547*
line                     10            based           fixed bin(17,0)          level 2 in structure "reserved_word" dcl 1348
                                                                                  in procedure "cobol_res_words" ref 818
line                     10            based           fixed bin(17,0)          level 2 in structure "token" dcl 1288 in procedure
                                                                                  "cobol_res_words" set ref 360 776* 776 787* 787
line                      1     000452 internal static fixed bin(17,0)          initial level 2 in structure "lev_message" dcl 1530
                                                                                  in procedure "cobol_res_words" set ref 1542*
line                      1     000010 internal static fixed bin(17,0)          level 2 in structure "procname" dcl 1329
                                                                                  in procedure "cobol_res_words" set ref 168* 170
                                                                                  360
line                     10            based           fixed bin(17,0)          level 2 in structure "user_word" dcl 1314
                                                                                  in procedure "cobol_res_words" set ref 73* 168
                                                                                  1542
literial                 20            based           char(30)                 level 2 packed packed unaligned dcl 1382 ref 321
m_d_ck                                 based           bit(4)                   level 3 packed packed unaligned dcl 1491 ref 486 504
mcode                           000112 automatic       fixed bin(35,0)          dcl 1515 set ref 50*
mer                      14(16)        based           bit(4)                   level 4 packed packed unaligned dcl 1348 set ref
                                                                                  1246*
name                     15     000010 internal static char(30)                 level 2 in structure "procname" packed packed
                                                                                  unaligned dcl 1329 in procedure "cobol_res_words"
                                                                                  set ref 174*
name                     17            based           char(32)                 level 2 in structure "reserved_word" packed packed
                                                                                  unaligned dcl 1348 in procedure "cobol_res_words"
                                                                                  set ref 412*
name                                   based           char                     level 2 in structure "g1" dcl 1491 in procedure
                                                                                  "cobol_res_words" ref 117 120 126
next                                   based           fixed bin(17,0)          level 2 dcl 1491 set ref 122
null                                                   builtin function         dcl 1459 ref 50 50 52 1221
num                                    parameter       fixed bin(17,0)          dcl 1540 ref 1538 1544
number                    5     000452 internal static fixed bin(17,0)          initial level 2 dcl 1530 set ref 1544*
numeric_lit                            based           structure                level 1 unaligned dcl 1382
options                 133            based           structure                level 2 packed packed unaligned dcl 3-26 set ref 76
others                   14(16)        based           structure                level 3 in structure "reserved_word" packed packed
                                                                                  unaligned dcl 1348 in procedure "cobol_res_words"
                                                                                  set ref 426*
others                                 based           structure                level 4 in structure "g1" packed packed unaligned
                                                                                  dcl 1491 in procedure "cobol_res_words" ref 426
p                               000042 internal static pointer                  dcl 1432 set ref 185* 191* 191* 310* 312* 316 319
                                                                                  321 328 330 744* 752 754 769 771 794
p_n                             000036 internal static bit(1)                   initial packed unaligned dcl 1432 set ref 163 166*
                                                                                  365* 375* 733
pd                       14            based           bit(8)                   level 3 in structure "reserved_word" packed packed
                                                                                  unaligned dcl 1348 in procedure "cobol_res_words"
                                                                                  set ref 423* 752* 754* 769* 771*
pd                                     based           bit(7)                   level 4 in structure "g1" packed packed unaligned
                                                                                  dcl 1491 in procedure "cobol_res_words" ref 423
ph_num                                 defined         fixed bin(17,0)          dcl 4-46 set ref 374* 519* 525* 529* 597*
phase_name               15(27)        based           char(6)                  level 2 packed packed unaligned dcl 3-26 set ref 77*
places                   17            based           fixed bin(17,0)          level 2 dcl 1382 ref 319
priority                 10(09) 000010 internal static char(2)                  level 2 packed packed unaligned dcl 1329 set ref
                                                                                  347*
proc_counter             22            based           fixed bin(17,0)          level 2 dcl 3-26 set ref 354*
proc_num                 12     000010 internal static fixed bin(17,0)          level 2 dcl 1329 set ref 178* 349*
processing_report                      defined         bit(1)                   packed unaligned dcl 4-74 ref 578
procname                        000010 internal static structure                level 1 unaligned dcl 1329 set ref 189
prog_name                              based           char(30)                 level 2 packed packed unaligned dcl 3-26 set ref
                                                                                  921*
real_end_report                        defined         bit(1)                   packed unaligned dcl 4-76 ref 790
rec_ad                          000104 automatic       char(5)                  packed unaligned dcl 1426 set ref 358*
repl_bits                10(27) 000010 internal static bit(8)                   level 2 packed packed unaligned dcl 1329 set ref 75*
report                  134(02)        based           bit(1)                   level 2 packed packed unaligned dcl 3-26 set ref
                                                                                  1040*
report_exists                          defined         bit(1)                   packed unaligned dcl 2-103 set ref 407 790 1037
                                                                                  1040* 1057 1153 1174
reschar_PERIOD                         constant        fixed bin(17,0)          initial dcl 1-207 ref 200 216 247 270 310 904 1033
                                                                                  1251
reserved_word                          based           structure                level 1 unaligned dcl 1348
reswd_COMP_1                           constant        fixed bin(17,0)          initial dcl 1-233 ref 395
reswd_COMP_2                           constant        fixed bin(17,0)          initial dcl 1-235 ref 397
reswd_COMP_6                           constant        fixed bin(17,0)          initial dcl 1-308 ref 397
reswd_COMP_7                           constant        fixed bin(17,0)          initial dcl 1-305 ref 395
reswd_DIVISION                         constant        fixed bin(17,0)          initial dcl 1-98 ref 588 1245
reswd_GENERATE                         constant        fixed bin(17,0)          initial dcl 1-62 ref 1095
reswd_GO                               constant        fixed bin(17,0)          initial dcl 1-32 ref 204
reswd_IN                               constant        fixed bin(17,0)          initial dcl 1-107 ref 1165
reswd_INITIATE                         constant        fixed bin(17,0)          initial dcl 1-34 ref 1074
reswd_IS                               constant        fixed bin(17,0)          initial dcl 1-128 ref 626
reswd_OF                               constant        fixed bin(17,0)          initial dcl 1-147 ref 1165
reswd_REPORT                           constant        fixed bin(17,0)          initial dcl 1-268 ref 1003
reswd_REPORTING                        constant        fixed bin(17,0)          initial dcl 1-167 ref 1045
reswd_SECTION                          constant        fixed bin(17,0)          initial dcl 1-172 ref 297 955 1023
reswd_SUPPRESS                         constant        fixed bin(17,0)          initial dcl 1-71 ref 1102
reswd_TERMINATE                        constant        fixed bin(17,0)          initial dcl 1-53 ref 1085
reswd_TO                               constant        fixed bin(17,0)          initial dcl 1-186 ref 210 715
reswd_len                       000106 automatic       fixed bin(17,0)          dcl 1474 set ref 107* 109 117 117 120 120 122 126
                                                                                  126 129 129 133 137 140 392 395 397 404 423 424
                                                                                  426 428 430 453 476 480 482 486 504 561
reswd_table                            based           structure                level 1 unaligned dcl 1476
reswd_table_ptr                 000066 internal static pointer                  initial dcl 1475 set ref 50* 52 59 59 114
rfi                                    based           bit(1)                   level 3 packed packed unaligned dcl 1491 ref 392
rwl                             000114 automatic       fixed bin(17,0)          dcl 1516 set ref 409* 412 412 415 416
s_p_i                           000062 internal static fixed bin(17,0)          dcl 1453 set ref 445* 447* 447 450 453 456
s_p_key                                based           bit(6)                   level 3 packed packed unaligned dcl 1491 ref 430 453
save_stsw                       000103 automatic       bit(1)                   packed unaligned dcl 1424 set ref 303* 308 1219*
                                                                                  1259
secint                          000044 internal static fixed bin(17,0)          dcl 1432 set ref 81* 314* 321* 321 328 328* 347
section_num              11     000010 internal static fixed bin(17,0)          level 2 dcl 1329 set ref 179* 348*
sign                     13(09)        based           char(1)                  level 2 packed packed unaligned dcl 1382 ref 328
sint                                   based           structure                level 1 packed packed unaligned dcl 1441
size                      7            based           fixed bin(17,0)          level 2 in structure "user_word" dcl 1314
                                                                                  in procedure "cobol_res_words" set ref 189 1119*
                                                                                  1138* 1138
size                      7            based           fixed bin(17,0)          level 2 in structure "reserved_word" dcl 1348
                                                                                  in procedure "cobol_res_words" set ref 415* 420*
size                            000010 internal static fixed bin(17,0)          level 2 in structure "procname" dcl 1329
                                                                                  in procedure "cobol_res_words" set ref 176* 189
                                                                                  189 358 358 358*
sort_file_list                  000165 internal static varying char(30)         array dcl 1525 set ref 998* 1275
sort_name                              parameter       char                     packed unaligned dcl 1271 ref 1268 1275
source                                 based           structure                level 1 unaligned dcl 1299
spec_tag_counter         23            based           fixed bin(17,0)          level 2 dcl 3-26 set ref 355*
ss_1                      0(03) 000063 internal static bit(1)                   level 2 packed packed unaligned dcl 1465 set ref 959
                                                                                  962*
ss_2                      0(04) 000063 internal static bit(1)                   level 2 packed packed unaligned dcl 1465 set ref 602
                                                                                  605*
ss_3                      0(05) 000063 internal static bit(1)                   level 2 packed packed unaligned dcl 1465 set ref 758
                                                                                  761*
st                              000102 automatic       bit(32)                  packed unaligned dcl 1423 set ref 358*
state                           000064 internal static fixed bin(17,0)          dcl 1473 set ref 380*
stop_bits                       004321 constant        bit(36)                  initial packed unaligned dcl 1484 ref 126
string                                                 builtin function         dcl 1521 in procedure "cobol_res_words" set ref 376*
                                                                                  426* 426 1239* 1252*
string                   15            based           char(200)                level 2 in structure "alphanum_lit" packed packed
                                                                                  unaligned dcl 1368 in procedure "cobol_res_words"
                                                                                  ref 846
substr                                                 builtin function         dcl 1460 set ref 83 94 94 109 117 120 126 174* 174
                                                                                  182* 225* 252* 259* 273* 280* 289* 301* 321 330*
                                                                                  335* 412* 412 453 460* 707 707 711* 752* 754* 769*
                                                                                  771* 921 998 1120* 1135* 1135
tcurrent                        000054 internal static pointer                  dcl 1447 set ref 1217* 1257
tfirst                          000052 internal static pointer                  dcl 1447 set ref 1216* 1256
tm_d_ck                         000050 internal static fixed bin(17,0)          dcl 1444 set ref 486* 490 498 504* 507 515 517 533
                                                                                  539 539 539 542 546 558
tmvr                                   based           char                     packed unaligned dcl 1427 set ref 189* 189
token                                  based           structure                level 1 unaligned dcl 1288
ttop                            000056 internal static pointer                  dcl 1447 set ref 1218* 1258
type                      3     000010 internal static fixed bin(17,0)          level 2 in structure "procname" dcl 1329
                                                                                  in procedure "cobol_res_words" set ref 74*
type                     12            based           fixed bin(17,0)          level 2 in structure "alphanum_lit" dcl 1368
                                                                                  in procedure "cobol_res_words" ref 840
type                     12            based           fixed bin(17,0)          level 2 in structure "reserved_word" dcl 1348
                                                                                  in procedure "cobol_res_words" set ref 200 310
                                                                                  422* 588 626 648 658 715 746 832 857 901 916 953
                                                                                  969 1019 1029 1161
type                     12            based           fixed bin(17,0)          level 2 in structure "token" dcl 1288 in procedure
                                                                                  "cobol_res_words" ref 204 210 216 225 225 234 243
                                                                                  243 247 252 252 259 273 273 280 289 360
type                     12            based           fixed bin(17,0)          level 2 in structure "user_word" dcl 1314
                                                                                  in procedure "cobol_res_words" set ref 707 1116*
                                                                                  1149 1170 1191
type                     12            based           fixed bin(17,0)          level 2 in structure "numeric_lit" dcl 1382
                                                                                  in procedure "cobol_res_words" ref 316
unspec                                                 builtin function         dcl 1461 ref 109 321
use_debug               134(15)        based           bit(1)                   level 2 packed packed unaligned dcl 3-26 set ref
                                                                                  381* 875*
use_reporting           135(03)        based           bit(1)                   level 2 packed packed unaligned dcl 3-26 set ref
                                                                                  1053*
user_word                              based           structure                level 1 unaligned dcl 1314
word                     15            based           char(30)                 level 2 packed packed unaligned dcl 1314 set ref 83
                                                                                  94 94 109 117 120 126 174 412 707 707 921 998
                                                                                  1120* 1135* 1135

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
allo1_max                              defined         fixed bin(17,0)          dcl 5-171
allo1_ptr                              defined         pointer                  dcl 5-67
alter_flag                             defined         fixed bin(17,0)          dcl 5-135
alter_index                            defined         fixed bin(17,0)          dcl 5-153
alter_list_ptr                         defined         pointer                  dcl 5-39
base                                   internal static fixed bin(17,0)          dcl 1428
cd_cnt                                 defined         fixed bin(17,0)          dcl 5-197
cobol_$allo1_max                       external static fixed bin(17,0)          dcl 5-170
cobol_$allo1_ptr                       external static pointer                  dcl 5-66
cobol_$alter_flag                      external static fixed bin(17,0)          dcl 5-134
cobol_$alter_index                     external static fixed bin(17,0)          dcl 5-152
cobol_$alter_list_ptr                  external static pointer                  dcl 5-38
cobol_$cd_cnt                          external static fixed bin(17,0)          dcl 5-196
cobol_$cobol_data_wd_off               external static fixed bin(17,0)          dcl 5-118
cobol_$compile_count                   external static fixed bin(17,0)          dcl 5-142
cobol_$coms_charcnt                    external static fixed bin(17,0)          dcl 5-188
cobol_$coms_wdoff                      external static fixed bin(17,0)          dcl 5-202
cobol_$con_end_ptr                     external static pointer                  dcl 5-10
cobol_$con_wd_off                      external static fixed bin(17,0)          dcl 5-92
cobol_$cons_charcnt                    external static fixed bin(17,0)          dcl 5-192
cobol_$constant_offset                 external static fixed bin(17,0)          dcl 5-156
cobol_$data_init_flag                  external static fixed bin(17,0)          dcl 5-130
cobol_$debug_enable                    external static fixed bin(17,0)          dcl 5-174
cobol_$def_base_ptr                    external static pointer                  dcl 5-12
cobol_$def_max                         external static fixed bin(17,0)          dcl 5-96
cobol_$def_wd_off                      external static fixed bin(17,0)          dcl 5-94
cobol_$diag_ptr                        external static pointer                  dcl 5-70
cobol_$eln_max                         external static fixed bin(17,0)          dcl 5-172
cobol_$eln_ptr                         external static pointer                  dcl 5-68
cobol_$fixup_max                       external static fixed bin(17,0)          dcl 5-164
cobol_$fixup_ptr                       external static pointer                  dcl 5-30
cobol_$fs_charcnt                      external static fixed bin(17,0)          dcl 5-184
cobol_$fs_wdoff                        external static fixed bin(17,0)          dcl 5-198
cobol_$include_cnt                     external static fixed bin(17,0)          dcl 5-182
cobol_$include_info_ptr                external static pointer                  dcl 5-86
cobol_$init_stack_off                  external static fixed bin(17,0)          dcl 5-124
cobol_$initval_base_ptr                external static pointer                  dcl 5-32
cobol_$initval_file_ptr                external static pointer                  dcl 5-34
cobol_$initval_flag                    external static fixed bin(17,0)          dcl 5-178
cobol_$link_base_ptr                   external static pointer                  dcl 5-14
cobol_$link_max                        external static fixed bin(17,0)          dcl 5-100
cobol_$link_wd_off                     external static fixed bin(17,0)          dcl 5-98
cobol_$list_off                        external static fixed bin(17,0)          dcl 5-154
cobol_$list_ptr                        external static pointer                  dcl 5-64
cobol_$ls_charcnt                      external static fixed bin(17,0)          dcl 5-190
cobol_$main_pcs_ptr                    external static pointer                  dcl 5-84
cobol_$map_data_max                    external static fixed bin(17,0)          dcl 5-162
cobol_$map_data_ptr                    external static pointer                  dcl 5-54
cobol_$max_stack_off                   external static fixed bin(17,0)          dcl 5-122
cobol_$minpral5_ptr                    external static pointer                  dcl 5-50
cobol_$misc_base_ptr                   external static pointer                  dcl 5-60
cobol_$misc_end_ptr                    external static pointer                  dcl 5-62
cobol_$misc_max                        external static fixed bin(17,0)          dcl 5-158
cobol_$next_tag                        external static fixed bin(17,0)          dcl 5-128
cobol_$non_source_offset               external static fixed bin(17,0)          dcl 5-176
cobol_$ntbuf_ptr                       external static pointer                  dcl 5-82
cobol_$obj_seg_name                    external static char(32)                 dcl 5-208
cobol_$op_con_ptr                      external static pointer                  dcl 5-80
cobol_$para_eop_flag                   external static fixed bin(17,0)          dcl 5-138
cobol_$pd_map_index                    external static fixed bin(17,0)          dcl 5-116
cobol_$pd_map_max                      external static fixed bin(17,0)          dcl 5-160
cobol_$pd_map_ptr                      external static pointer                  dcl 5-28
cobol_$pd_map_sw                       external static fixed bin(17,0)          dcl 5-126
cobol_$perform_list_ptr                external static pointer                  dcl 5-36
cobol_$perform_para_index              external static fixed bin(17,0)          dcl 5-148
cobol_$perform_sect_index              external static fixed bin(17,0)          dcl 5-150
cobol_$priority_no                     external static fixed bin(17,0)          dcl 5-140
cobol_$ptr_assumption_ind              external static fixed bin(17,0)          dcl 5-144
cobol_$ptr_status_ptr                  external static pointer                  dcl 5-56
cobol_$reg_assumption_ind              external static fixed bin(17,0)          dcl 5-146
cobol_$reg_status_ptr                  external static pointer                  dcl 5-58
cobol_$reloc_def_base_ptr              external static pointer                  dcl 5-20
cobol_$reloc_def_max                   external static fixed bin(24,0)          dcl 5-108
cobol_$reloc_link_base_ptr             external static pointer                  dcl 5-22
cobol_$reloc_link_max                  external static fixed bin(24,0)          dcl 5-110
cobol_$reloc_sym_base_ptr              external static pointer                  dcl 5-24
cobol_$reloc_sym_max                   external static fixed bin(24,0)          dcl 5-112
cobol_$reloc_text_base_ptr             external static pointer                  dcl 5-18
cobol_$reloc_text_max                  external static fixed bin(24,0)          dcl 5-106
cobol_$reloc_work_base_ptr             external static pointer                  dcl 5-26
cobol_$reloc_work_max                  external static fixed bin(24,0)          dcl 5-114
cobol_$reswd_ptr                       external static pointer                  dcl 5-78
cobol_$same_sort_merge_proc            external static bit(1)                   dcl 5-214
cobol_$scratch_dir                     external static char(168)                dcl 5-206
cobol_$sect_eop_flag                   external static fixed bin(17,0)          dcl 5-136
cobol_$seg_init_flag                   external static fixed bin(17,0)          dcl 5-132
cobol_$seg_init_list_ptr               external static pointer                  dcl 5-40
cobol_$stack_off                       external static fixed bin(17,0)          dcl 5-120
cobol_$statement_info_ptr              external static pointer                  dcl 5-76
cobol_$sym_base_ptr                    external static pointer                  dcl 5-16
cobol_$sym_max                         external static fixed bin(17,0)          dcl 5-104
cobol_$sym_wd_off                      external static fixed bin(17,0)          dcl 5-102
cobol_$tag_table_max                   external static fixed bin(17,0)          dcl 5-166
cobol_$tag_table_ptr                   external static pointer                  dcl 5-52
cobol_$temp_token_area_ptr             external static pointer                  dcl 5-42
cobol_$temp_token_max                  external static fixed bin(17,0)          dcl 5-168
cobol_$temp_token_ptr                  external static pointer                  dcl 5-44
cobol_$text_base_ptr                   external static pointer                  dcl 5-8
cobol_$text_wd_off                     external static fixed bin(17,0)          dcl 5-90
cobol_$token_block1_ptr                external static pointer                  dcl 5-46
cobol_$token_block2_ptr                external static pointer                  dcl 5-48
cobol_$value_cnt                       external static fixed bin(17,0)          dcl 5-194
cobol_$ws_charcnt                      external static fixed bin(17,0)          dcl 5-186
cobol_$ws_wdoff                        external static fixed bin(17,0)          dcl 5-200
cobol_$xref_bypass                     external static bit(1)                   dcl 5-212
cobol_$xref_chain_ptr                  external static pointer                  dcl 5-74
cobol_$xref_token_ptr                  external static pointer                  dcl 5-72
cobol_afp                              defined         pointer                  dcl 2-11
cobol_allo_init_sw                     defined         bit(1)                   packed unaligned dcl 4-82
cobol_analin_fileno                    defined         pointer                  dcl 2-13
cobol_c_l_n                            defined         fixed bin(17,0)          dcl 4-48
cobol_cfp                              defined         pointer                  dcl 4-20
cobol_cmfp                             defined         pointer                  dcl 2-21
cobol_com_fileno                       defined         pointer                  dcl 2-23
cobol_continuation                     defined         bit(1)                   packed unaligned dcl 4-78
cobol_copy_active                      defined         bit(1)                   packed unaligned dcl 4-110
cobol_copy_found                       defined         bit(1)                   packed unaligned dcl 4-92
cobol_curr_in                          defined         pointer                  dcl 2-53
cobol_curr_out                         defined         pointer                  dcl 2-55
cobol_data_wd_off                      defined         fixed bin(17,0)          dcl 5-119
cobol_db_phase$initialize       000000 constant        entry                    external dcl 1408
cobol_dfp                              defined         pointer                  dcl 2-27
cobol_elnp_sw                          defined         bit(1)                   packed unaligned dcl 4-96
cobol_elt_buf_ptr                      defined         pointer                  dcl 4-24
cobol_elt_idx                          defined         fixed bin(17,0)          dcl 4-60
cobol_eltp                             defined         pointer                  dcl 2-19
cobol_ext_$cobol_afp                   external static pointer                  dcl 2-10
cobol_ext_$cobol_analin_fileno         external static pointer                  dcl 2-12
cobol_ext_$cobol_cmfp                  external static pointer                  dcl 2-20
cobol_ext_$cobol_com_fileno            external static pointer                  dcl 2-22
cobol_ext_$cobol_curr_in               external static pointer                  dcl 2-52
cobol_ext_$cobol_curr_out              external static pointer                  dcl 2-54
cobol_ext_$cobol_dfp                   external static pointer                  dcl 2-26
cobol_ext_$cobol_eltp                  external static pointer                  dcl 2-18
cobol_ext_$cobol_fileno1               external static fixed bin(24,0)          dcl 2-78
cobol_ext_$cobol_hfp                   external static pointer                  dcl 2-28
cobol_ext_$cobol_lpr                   external static char(5)                  packed unaligned dcl 2-95
cobol_ext_$cobol_m1fp                  external static pointer                  dcl 2-30
cobol_ext_$cobol_min1_fileno           external static pointer                  dcl 2-34
cobol_ext_$cobol_min2_fileno_ptr       external static pointer                  dcl 2-36
cobol_ext_$cobol_name_fileno           external static pointer                  dcl 2-38
cobol_ext_$cobol_name_fileno_ptr       external static pointer                  dcl 2-40
cobol_ext_$cobol_options               external static char(120)                packed unaligned dcl 2-97
cobol_ext_$cobol_options_len           external static fixed bin(24,0)          dcl 2-80
cobol_ext_$cobol_pdofp                 external static pointer                  dcl 2-44
cobol_ext_$cobol_pdout_fileno          external static fixed bin(24,0)          dcl 2-82
cobol_ext_$cobol_pfp                   external static pointer                  dcl 2-46
cobol_ext_$cobol_print_fileno          external static fixed bin(24,0)          dcl 2-84
cobol_ext_$cobol_rm2fp                 external static pointer                  dcl 2-48
cobol_ext_$cobol_rmin2_fileno          external static fixed bin(24,0)          dcl 2-86
cobol_ext_$cobol_rmin2fp               external static pointer                  dcl 2-50
cobol_ext_$cobol_rwdd                  external static pointer                  dcl 2-72
cobol_ext_$cobol_rwpd                  external static pointer                  dcl 2-74
cobol_ext_$cobol_sfp                   external static pointer                  dcl 2-56
cobol_ext_$cobol_w1p                   external static pointer                  dcl 2-58
cobol_ext_$cobol_w2p                   external static pointer                  dcl 2-60
cobol_ext_$cobol_w3p                   external static pointer                  dcl 2-62
cobol_ext_$cobol_w5p                   external static pointer                  dcl 2-64
cobol_ext_$cobol_w6p                   external static pointer                  dcl 2-66
cobol_ext_$cobol_w7p                   external static pointer                  dcl 2-68
cobol_ext_$cobol_x1_fileno             external static fixed bin(24,0)          dcl 2-88
cobol_ext_$cobol_x2_fileno             external static fixed bin(24,0)          dcl 2-90
cobol_ext_$cobol_x3_fileno             external static fixed bin(24,0)          dcl 2-92
cobol_ext_$cobol_x3fp                  external static pointer                  dcl 2-70
cobol_ext_$cobol_xlast8                external static bit(1)                   packed unaligned dcl 2-100
cobol_ext_$report_first_token          external static pointer                  dcl 2-14
cobol_ext_$report_last_token           external static pointer                  dcl 2-16
cobol_ext_lex$cobol_allo_init_sw       external static bit(1)                   packed unaligned dcl 4-81
cobol_ext_lex$cobol_c_l_n              external static fixed bin(17,0)          dcl 4-47
cobol_ext_lex$cobol_cards              external static structure                level 1 unaligned dcl 4-64
cobol_ext_lex$cobol_cfp                external static pointer                  dcl 4-19
cobol_ext_lex$cobol_continuation       external static bit(1)                   packed unaligned dcl 4-77
cobol_ext_lex$cobol_copy_active        external static bit(1)                   packed unaligned dcl 4-109
cobol_ext_lex$cobol_copy_found         external static bit(1)                   packed unaligned dcl 4-91
cobol_ext_lex$cobol_elnp_sw            external static bit(1)                   packed unaligned dcl 4-95
cobol_ext_lex$cobol_elt_buf_ptr        external static pointer                  dcl 4-23
cobol_ext_lex$cobol_elt_idx            external static fixed bin(17,0)          dcl 4-59
cobol_ext_lex$cobol_init_ta_sw         external static bit(1)                   packed unaligned dcl 4-105
cobol_ext_lex$cobol_lex_exit           external static label variable           dcl 4-25
cobol_ext_lex$cobol_ln_sw              external static bit(1)                   array packed unaligned dcl 4-111
cobol_ext_lex$cobol_new_line_character external static char(1)                  packed unaligned dcl 4-36
cobol_ext_lex$cobol_output_sw          external static bit(1)                   packed unaligned dcl 4-87
cobol_ext_lex$cobol_prime_sw           external static bit(1)                   packed unaligned dcl 4-113
cobol_ext_lex$cobol_rec1_sw            external static bit(1)                   array packed unaligned dcl 4-115
cobol_ext_lex$cobol_rep_sw             external static bit(1)                   packed unaligned dcl 4-107
cobol_ext_lex$cobol_rt_ptr             external static pointer                  dcl 4-17
cobol_ext_lex$cobol_save_cln           external static fixed bin(17,0)          dcl 4-49
cobol_ext_lex$cobol_save_col           external static fixed bin(17,0)          dcl 4-51
cobol_ext_lex$cobol_si_key             external static char(5)                  packed unaligned dcl 4-38
cobol_ext_lex$cobol_so_key             external static char(5)                  packed unaligned dcl 4-40
cobol_ext_lex$cobol_sr                 external static fixed bin(17,0)          dcl 4-57
cobol_ext_lex$cobol_ta_ptr             external static pointer                  dcl 4-21
cobol_ext_lex$cobol_tarea              external static char(300)                packed unaligned dcl 4-30
cobol_fileno1                          defined         fixed bin(24,0)          dcl 2-79
cobol_hfp                              defined         pointer                  dcl 2-29
cobol_init_ta_sw                       defined         bit(1)                   packed unaligned dcl 4-106
cobol_lex_exit                         defined         label variable           dcl 4-26
cobol_ln_sw                            defined         bit(1)                   array packed unaligned dcl 4-112
cobol_lpr                              defined         char(5)                  packed unaligned dcl 2-96
cobol_m1fp                             defined         pointer                  dcl 2-31
cobol_min1_fileno                      defined         pointer                  dcl 2-35
cobol_min2_fileno_ptr                  defined         pointer                  dcl 2-37
cobol_name_fileno                      defined         pointer                  dcl 2-39
cobol_name_fileno_ptr                  defined         pointer                  dcl 2-41
cobol_new_line_character               defined         char(1)                  packed unaligned dcl 4-37
cobol_options                          defined         char(120)                packed unaligned dcl 2-98
cobol_options_len                      defined         fixed bin(24,0)          dcl 2-81
cobol_output_sw                        defined         bit(1)                   packed unaligned dcl 4-88
cobol_pdofp                            defined         pointer                  dcl 2-45
cobol_pdout_fileno                     defined         fixed bin(24,0)          dcl 2-83
cobol_pfp                              defined         pointer                  dcl 2-47
cobol_prime_sw                         defined         bit(1)                   packed unaligned dcl 4-114
cobol_print_fileno                     defined         fixed bin(24,0)          dcl 2-85
cobol_rec1_sw                          defined         bit(1)                   array packed unaligned dcl 4-116
cobol_rep_sw                           defined         bit(1)                   packed unaligned dcl 4-108
cobol_rm2fp                            defined         pointer                  dcl 2-49
cobol_rmin2_fileno                     defined         fixed bin(24,0)          dcl 2-87
cobol_rmin2fp                          defined         pointer                  dcl 2-51
cobol_rt_ptr                           defined         pointer                  dcl 4-18
cobol_rwdd                             defined         pointer                  dcl 2-73
cobol_rwpd                             defined         pointer                  dcl 2-75
cobol_save_cln                         defined         fixed bin(17,0)          dcl 4-50
cobol_save_col                         defined         fixed bin(17,0)          dcl 4-52
cobol_sfp                              defined         pointer                  dcl 2-57
cobol_si_key                           defined         char(5)                  packed unaligned dcl 4-39
cobol_so_key                           defined         char(5)                  packed unaligned dcl 4-41
cobol_sr                               defined         fixed bin(17,0)          dcl 4-58
cobol_ta_ptr                           defined         pointer                  dcl 4-22
cobol_tarea                            defined         char(300)                packed unaligned dcl 4-31
cobol_w1p                              defined         pointer                  dcl 2-59
cobol_w2p                              defined         pointer                  dcl 2-61
cobol_w3p                              defined         pointer                  dcl 2-63
cobol_w5p                              defined         pointer                  dcl 2-65
cobol_w6p                              defined         pointer                  dcl 2-67
cobol_w7p                              defined         pointer                  dcl 2-69
cobol_x1_fileno                        defined         fixed bin(24,0)          dcl 2-89
cobol_x2_fileno                        defined         fixed bin(24,0)          dcl 2-91
cobol_x3_fileno                        defined         fixed bin(24,0)          dcl 2-93
cobol_x3fp                             defined         pointer                  dcl 2-71
cobol_xlast8                           defined         bit(1)                   packed unaligned dcl 2-101
compile_count                          defined         fixed bin(17,0)          dcl 5-143
coms_charcnt                           defined         fixed bin(17,0)          dcl 5-189
coms_wdoff                             defined         fixed bin(17,0)          dcl 5-203
con_end_ptr                            defined         pointer                  dcl 5-11
con_wd_off                             defined         fixed bin(17,0)          dcl 5-93
cons_charcnt                           defined         fixed bin(17,0)          dcl 5-193
constant_offset                        defined         fixed bin(17,0)          dcl 5-157
data_init_flag                         defined         fixed bin(17,0)          dcl 5-131
date_compiled_sw                       defined         fixed bin(17,0)          dcl 5-181
debug_enable                           defined         fixed bin(17,0)          dcl 5-175
def_base_ptr                           defined         pointer                  dcl 5-13
def_max                                defined         fixed bin(17,0)          dcl 5-97
def_wd_off                             defined         fixed bin(17,0)          dcl 5-95
delta                                  internal static fixed bin(17,0)          dcl 1430
diag_ptr                               defined         pointer                  dcl 5-71
div_no                                 automatic       fixed bin(17,0)          dcl 1207
dscr_indx                              automatic       fixed bin(17,0)          dcl 1419
dscr_indx_b                            based           char(4)                  packed unaligned dcl 1421
dt1                                    internal static pointer                  dcl 1432
dt2                                    internal static pointer                  dcl 1432
eln_max                                defined         fixed bin(17,0)          dcl 5-173
eln_ptr                                defined         pointer                  dcl 5-69
fixup_max                              defined         fixed bin(17,0)          dcl 5-165
fixup_ptr                              defined         pointer                  dcl 5-31
fs_charcnt                             defined         fixed bin(17,0)          dcl 5-185
fs_wdoff                               defined         fixed bin(17,0)          dcl 5-199
hdr_lngth                              internal static fixed bin(17,0)          initial array dcl 1452
hv1c                                   internal static char(1)                  packed unaligned dcl 1422
include_cnt                            defined         fixed bin(17,0)          dcl 5-183
include_info_ptr                       defined         pointer                  dcl 5-87
init_error                             automatic       bit(1)                   packed unaligned dcl 1425
init_stack_off                         defined         fixed bin(17,0)          dcl 5-125
init_tab                               internal static bit(1)                   initial packed unaligned dcl 1432
initval_base_ptr                       defined         pointer                  dcl 5-33
initval_file_ptr                       defined         pointer                  dcl 5-35
initval_flag                           defined         fixed bin(17,0)          dcl 5-179
link_base_ptr                          defined         pointer                  dcl 5-15
link_max                               defined         fixed bin(17,0)          dcl 5-101
link_wd_off                            defined         fixed bin(17,0)          dcl 5-99
list_off                               defined         fixed bin(17,0)          dcl 5-155
list_ptr                               defined         pointer                  dcl 5-65
ls_charcnt                             defined         fixed bin(17,0)          dcl 5-191
main_pcs_ptr                           defined         pointer                  dcl 5-85
map_data_max                           defined         fixed bin(17,0)          dcl 5-163
map_data_ptr                           defined         pointer                  dcl 5-55
max_stack_off                          defined         fixed bin(17,0)          dcl 5-123
minpral5_ptr                           defined         pointer                  dcl 5-51
misc_base_ptr                          defined         pointer                  dcl 5-61
misc_end_ptr                           defined         pointer                  dcl 5-63
misc_max                               defined         fixed bin(17,0)          dcl 5-159
mod                                                    builtin function         dcl 1458
mult_adj                               automatic       fixed bin(17,0)          dcl 1431
next_tag                               defined         fixed bin(17,0)          dcl 5-129
non_source_offset                      defined         fixed bin(17,0)          dcl 5-177
ntbuf_ptr                              defined         pointer                  dcl 5-83
obj_seg_name                           defined         char(32)                 dcl 5-209
op_con_ptr                             defined         pointer                  dcl 5-81
para_eop_flag                          defined         fixed bin(17,0)          dcl 5-139
pd_map_index                           defined         fixed bin(17,0)          dcl 5-117
pd_map_max                             defined         fixed bin(17,0)          dcl 5-161
pd_map_ptr                             defined         pointer                  dcl 5-29
pd_map_sw                              defined         fixed bin(17,0)          dcl 5-127
perform_list_ptr                       defined         pointer                  dcl 5-37
perform_para_index                     defined         fixed bin(17,0)          dcl 5-149
perform_sect_index                     defined         fixed bin(17,0)          dcl 5-151
priority_no                            defined         fixed bin(17,0)          dcl 5-141
ptr_assumption_ind                     defined         fixed bin(17,0)          dcl 5-145
ptr_status_ptr                         defined         pointer                  dcl 5-57
reg_assumption_ind                     defined         fixed bin(17,0)          dcl 5-147
reg_status_ptr                         defined         pointer                  dcl 5-59
reloc_def_base_ptr                     defined         pointer                  dcl 5-21
reloc_def_max                          defined         fixed bin(24,0)          dcl 5-109
reloc_link_base_ptr                    defined         pointer                  dcl 5-23
reloc_link_max                         defined         fixed bin(24,0)          dcl 5-111
reloc_sym_base_ptr                     defined         pointer                  dcl 5-25
reloc_sym_max                          defined         fixed bin(24,0)          dcl 5-113
reloc_text_base_ptr                    defined         pointer                  dcl 5-19
reloc_text_max                         defined         fixed bin(24,0)          dcl 5-107
reloc_work_base_ptr                    defined         pointer                  dcl 5-27
reloc_work_max                         defined         fixed bin(24,0)          dcl 5-115
report_first_token                     defined         pointer                  dcl 2-15
report_last_token                      defined         pointer                  dcl 2-17
reschar_2EQs                           internal static fixed bin(17,0)          initial dcl 1-286
reschar_2STARs                         internal static fixed bin(17,0)          initial dcl 1-204
reschar_EQ                             internal static fixed bin(17,0)          initial dcl 1-108
reschar_GT                             internal static fixed bin(17,0)          initial dcl 1-121
reschar_LPARENS                        internal static fixed bin(17,0)          initial dcl 1-205
reschar_LT                             internal static fixed bin(17,0)          initial dcl 1-135
reschar_MINUS                          internal static fixed bin(17,0)          initial dcl 1-201
reschar_PLUS                           internal static fixed bin(17,0)          initial dcl 1-200
reschar_RPARENS                        internal static fixed bin(17,0)          initial dcl 1-206
reschar_SLASH                          internal static fixed bin(17,0)          initial dcl 1-203
reschar_STAR                           internal static fixed bin(17,0)          initial dcl 1-202
reswd_ACCEPT                           internal static fixed bin(17,0)          initial dcl 1-19
reswd_ACCESS                           internal static fixed bin(17,0)          initial dcl 1-343
reswd_ADD                              internal static fixed bin(17,0)          initial dcl 1-20
reswd_ADDRESS                          internal static fixed bin(17,0)          initial dcl 1-345
reswd_ADVANCING                        internal static fixed bin(17,0)          initial dcl 1-74
reswd_AFTER                            internal static fixed bin(17,0)          initial dcl 1-75
reswd_ALL                              internal static fixed bin(17,0)          initial dcl 1-76
reswd_ALPHABET                         internal static fixed bin(17,0)          initial dcl 1-346
reswd_ALPHABETIC                       internal static fixed bin(17,0)          initial dcl 1-77
reswd_ALPHANUMERIC                     internal static fixed bin(17,0)          initial dcl 1-78
reswd_ALPHANUMERIC_EDITED              internal static fixed bin(17,0)          initial dcl 1-79
reswd_ALSO                             internal static fixed bin(17,0)          initial dcl 1-100
reswd_ALTER                            internal static fixed bin(17,0)          initial dcl 1-22
reswd_ALTERNATE                        internal static fixed bin(17,0)          initial dcl 1-349
reswd_AND                              internal static fixed bin(17,0)          initial dcl 1-80
reswd_APPLY                            internal static fixed bin(17,0)          initial dcl 1-350
reswd_ARE                              internal static fixed bin(17,0)          initial dcl 1-128
reswd_AREA                             internal static fixed bin(17,0)          initial dcl 1-219
reswd_AREAS                            internal static fixed bin(17,0)          initial dcl 1-219
reswd_ASCENDING                        internal static fixed bin(17,0)          initial dcl 1-81
reswd_ASSIGN                           internal static fixed bin(17,0)          initial dcl 1-351
reswd_AT                               internal static fixed bin(17,0)          initial dcl 1-82
reswd_AUTHOR                           internal static fixed bin(17,0)          initial dcl 1-352
reswd_BEFORE                           internal static fixed bin(17,0)          initial dcl 1-83
reswd_BEGINNING                        internal static fixed bin(17,0)          initial dcl 1-84
reswd_BIT                              internal static fixed bin(17,0)          initial dcl 1-213
reswd_BITS                             internal static fixed bin(17,0)          initial dcl 1-213
reswd_BLANK                            internal static fixed bin(17,0)          initial dcl 1-222
reswd_BLOCK                            internal static fixed bin(17,0)          initial dcl 1-223
reswd_BOOLEAN                          internal static fixed bin(17,0)          initial dcl 1-152
reswd_BOTTOM                           internal static fixed bin(17,0)          initial dcl 1-264
reswd_BSN                              internal static fixed bin(17,0)          initial dcl 1-330
reswd_BY                               internal static fixed bin(17,0)          initial dcl 1-85
reswd_CALL                             internal static fixed bin(17,0)          initial dcl 1-23
reswd_CANCEL                           internal static fixed bin(17,0)          initial dcl 1-25
reswd_CATALOGUE_NAME                   internal static fixed bin(17,0)          initial dcl 1-322
reswd_CATALOG_NAME                     internal static fixed bin(17,0)          initial dcl 1-322
reswd_CD                               internal static fixed bin(17,0)          initial dcl 1-224
reswd_CF                               internal static fixed bin(17,0)          initial dcl 1-353
reswd_CH                               internal static fixed bin(17,0)          initial dcl 1-354
reswd_CHARACTER                        internal static fixed bin(17,0)          initial dcl 1-86
reswd_CHARACTERS                       internal static fixed bin(17,0)          initial dcl 1-86
reswd_CLOCK_UNITS                      internal static fixed bin(17,0)          initial dcl 1-355
reswd_CLOSE                            internal static fixed bin(17,0)          initial dcl 1-26
reswd_COBOL                            internal static fixed bin(17,0)          initial dcl 1-209
reswd_CODE                             internal static fixed bin(17,0)          initial dcl 1-356
reswd_CODE_SET                         internal static fixed bin(17,0)          initial dcl 1-314
reswd_COLLATING                        internal static fixed bin(17,0)          initial dcl 1-357
reswd_COLUMN                           internal static fixed bin(17,0)          initial dcl 1-358
reswd_COMMA                            internal static fixed bin(17,0)          initial dcl 1-359
reswd_COMMUNICATION                    internal static fixed bin(17,0)          initial dcl 1-225
reswd_COMP                             internal static fixed bin(17,0)          initial dcl 1-113
reswd_COMPUTATIONAL                    internal static fixed bin(17,0)          initial dcl 1-113
reswd_COMPUTATIONAL_1                  internal static fixed bin(17,0)          initial dcl 1-233
reswd_COMPUTATIONAL_2                  internal static fixed bin(17,0)          initial dcl 1-235
reswd_COMPUTATIONAL_3                  internal static fixed bin(17,0)          initial dcl 1-231
reswd_COMPUTATIONAL_4                  internal static fixed bin(17,0)          initial dcl 1-227
reswd_COMPUTATIONAL_5                  internal static fixed bin(17,0)          initial dcl 1-229
reswd_COMPUTATIONAL_6                  internal static fixed bin(17,0)          initial dcl 1-308
reswd_COMPUTATIONAL_7                  internal static fixed bin(17,0)          initial dcl 1-305
reswd_COMPUTATIONAL_8                  internal static fixed bin(17,0)          initial dcl 1-448
reswd_COMPUTE                          internal static fixed bin(17,0)          initial dcl 1-57
reswd_COMP_3                           internal static fixed bin(17,0)          initial dcl 1-231
reswd_COMP_4                           internal static fixed bin(17,0)          initial dcl 1-227
reswd_COMP_5                           internal static fixed bin(17,0)          initial dcl 1-229
reswd_COMP_8                           internal static fixed bin(17,0)          initial dcl 1-448
reswd_CONFIGURATION                    internal static fixed bin(17,0)          initial dcl 1-360
reswd_CONSTANT                         internal static fixed bin(17,0)          initial dcl 1-237
reswd_CONTAINS                         internal static fixed bin(17,0)          initial dcl 1-238
reswd_CONTROL                          internal static fixed bin(17,0)          initial dcl 1-362
reswd_CONTROLS                         internal static fixed bin(17,0)          initial dcl 1-363
reswd_CONVERSION                       internal static fixed bin(17,0)          initial dcl 1-361
reswd_COPY                             internal static fixed bin(17,0)          initial dcl 1-364
reswd_CORR                             internal static fixed bin(17,0)          initial dcl 1-365
reswd_CORRESPONDING                    internal static fixed bin(17,0)          initial dcl 1-365
reswd_COUNT                            internal static fixed bin(17,0)          initial dcl 1-88
reswd_CURRENCY                         internal static fixed bin(17,0)          initial dcl 1-367
reswd_DATA                             internal static fixed bin(17,0)          initial dcl 1-216
reswd_DATE                             internal static fixed bin(17,0)          initial dcl 1-90
reswd_DATE_COMPILED                    internal static fixed bin(17,0)          initial dcl 1-369
reswd_DATE_WRITTEN                     internal static fixed bin(17,0)          initial dcl 1-370
reswd_DAY                              internal static fixed bin(17,0)          initial dcl 1-91
reswd_DAY_OF_WEEK                      internal static fixed bin(17,0)          initial dcl 1-317
reswd_DE                               internal static fixed bin(17,0)          initial dcl 1-371
reswd_DEBUGGING                        internal static fixed bin(17,0)          initial dcl 1-92
reswd_DEBUG_CONTENTS                   internal static fixed bin(17,0)          initial dcl 1-372
reswd_DEBUG_ITEM                       internal static fixed bin(17,0)          initial dcl 1-373
reswd_DEBUG_LINE                       internal static fixed bin(17,0)          initial dcl 1-374
reswd_DEBUG_NAME                       internal static fixed bin(17,0)          initial dcl 1-379
reswd_DEBUG_SUB_1                      internal static fixed bin(17,0)          initial dcl 1-375
reswd_DEBUG_SUB_2                      internal static fixed bin(17,0)          initial dcl 1-376
reswd_DEBUG_SUB_3                      internal static fixed bin(17,0)          initial dcl 1-377
reswd_DECIMAL_POINT                    internal static fixed bin(17,0)          initial dcl 1-380
reswd_DECLARATIVES                     internal static fixed bin(17,0)          initial dcl 1-93
reswd_DEFAULT                          internal static fixed bin(17,0)          initial dcl 1-312
reswd_DELETE                           internal static fixed bin(17,0)          initial dcl 1-40
reswd_DELIMITED                        internal static fixed bin(17,0)          initial dcl 1-94
reswd_DELIMITER                        internal static fixed bin(17,0)          initial dcl 1-95
reswd_DEPENDING                        internal static fixed bin(17,0)          initial dcl 1-96
reswd_DESCENDING                       internal static fixed bin(17,0)          initial dcl 1-97
reswd_DESTINATION                      internal static fixed bin(17,0)          initial dcl 1-241
reswd_DETAIL                           internal static fixed bin(17,0)          initial dcl 1-381
reswd_DISABLE                          internal static fixed bin(17,0)          initial dcl 1-58
reswd_DISPLAY                          internal static fixed bin(17,0)          initial dcl 1-59
reswd_DIVIDE                           internal static fixed bin(17,0)          initial dcl 1-27
reswd_DOWN                             internal static fixed bin(17,0)          initial dcl 1-99
reswd_DUPLICATES                       internal static fixed bin(17,0)          initial dcl 1-252
reswd_DYNAMIC                          internal static fixed bin(17,0)          initial dcl 1-185
reswd_EGI                              internal static fixed bin(17,0)          initial dcl 1-260
reswd_ELSE                             internal static fixed bin(17,0)          initial dcl 1-100
reswd_EMI                              internal static fixed bin(17,0)          initial dcl 1-102
reswd_ENABLE                           internal static fixed bin(17,0)          initial dcl 1-60
reswd_END                              internal static fixed bin(17,0)          initial dcl 1-103
reswd_ENDING                           internal static fixed bin(17,0)          initial dcl 1-104
reswd_END_OF_PAGE                      internal static fixed bin(17,0)          initial dcl 1-105
reswd_ENTER                            internal static fixed bin(17,0)          initial dcl 1-61
reswd_ENVIRONMENT                      internal static fixed bin(17,0)          initial dcl 1-382
reswd_EOP                              internal static fixed bin(17,0)          initial dcl 1-105
reswd_EQUAL                            internal static fixed bin(17,0)          initial dcl 1-108
reswd_EQUALS                           internal static fixed bin(17,0)          initial dcl 1-108
reswd_ERROR                            internal static fixed bin(17,0)          initial dcl 1-21
reswd_ESI                              internal static fixed bin(17,0)          initial dcl 1-112
reswd_EVERY                            internal static fixed bin(17,0)          initial dcl 1-384
reswd_EXAMINE                          internal static fixed bin(17,0)          initial dcl 1-67
reswd_EXCEEDS                          internal static fixed bin(17,0)          initial dcl 1-121
reswd_EXCEPTION                        internal static fixed bin(17,0)          initial dcl 1-115
reswd_EXIT                             internal static fixed bin(17,0)          initial dcl 1-30
reswd_EXOR                             internal static fixed bin(17,0)          initial dcl 1-442
reswd_EXTEND                           internal static fixed bin(17,0)          initial dcl 1-239
reswd_EXTERNAL                         internal static fixed bin(17,0)          initial dcl 1-315
reswd_FD                               internal static fixed bin(17,0)          initial dcl 1-242
reswd_FILE                             internal static fixed bin(17,0)          initial dcl 1-116
reswd_FILES                            internal static fixed bin(17,0)          initial dcl 1-299
reswd_FILE_CONTROL                     internal static fixed bin(17,0)          initial dcl 1-385
reswd_FILLER                           internal static fixed bin(17,0)          initial dcl 1-243
reswd_FINAL                            internal static fixed bin(17,0)          initial dcl 1-387
reswd_FIRST                            internal static fixed bin(17,0)          initial dcl 1-117
reswd_FLR                              internal static fixed bin(17,0)          initial dcl 1-296
reswd_FOOTING                          internal static fixed bin(17,0)          initial dcl 1-388
reswd_FOR                              internal static fixed bin(17,0)          initial dcl 1-118
reswd_FROM                             internal static fixed bin(17,0)          initial dcl 1-119
reswd_GIVING                           internal static fixed bin(17,0)          initial dcl 1-120
reswd_GREATER                          internal static fixed bin(17,0)          initial dcl 1-121
reswd_GROUP                            internal static fixed bin(17,0)          initial dcl 1-390
reswd_HEADING                          internal static fixed bin(17,0)          initial dcl 1-389
reswd_HIGH_VALUE                       internal static fixed bin(17,0)          initial dcl 1-244
reswd_HIGH_VALUES                      internal static fixed bin(17,0)          initial dcl 1-244
reswd_HOLD                             internal static fixed bin(17,0)          initial dcl 1-63
reswd_IDENTIFICATION                   internal static fixed bin(17,0)          initial dcl 1-393
reswd_IDS_II                           internal static fixed bin(17,0)          initial dcl 1-334
reswd_IF                               internal static fixed bin(17,0)          initial dcl 1-64
reswd_INDEX                            internal static fixed bin(17,0)          initial dcl 1-246
reswd_INDEXED                          internal static fixed bin(17,0)          initial dcl 1-247
reswd_INDICATE                         internal static fixed bin(17,0)          initial dcl 1-394
reswd_INITIAL                          internal static fixed bin(17,0)          initial dcl 1-124
reswd_INITIALIZE                       internal static fixed bin(17,0)          initial dcl 1-31
reswd_INPUT                            internal static fixed bin(17,0)          initial dcl 1-125
reswd_INPUT_OUTPUT                     internal static fixed bin(17,0)          initial dcl 1-130
reswd_INSPECT                          internal static fixed bin(17,0)          initial dcl 1-35
reswd_INSTALLATION                     internal static fixed bin(17,0)          initial dcl 1-395
reswd_INTERCHANGE                      internal static fixed bin(17,0)          initial dcl 1-318
reswd_INTO                             internal static fixed bin(17,0)          initial dcl 1-126
reswd_INVALID                          internal static fixed bin(17,0)          initial dcl 1-127
reswd_I_O                              internal static fixed bin(17,0)          initial dcl 1-130
reswd_I_O_CONTROL                      internal static fixed bin(17,0)          initial dcl 1-392
reswd_JUST                             internal static fixed bin(17,0)          initial dcl 1-248
reswd_JUSTIFIED                        internal static fixed bin(17,0)          initial dcl 1-248
reswd_KEY                              internal static fixed bin(17,0)          initial dcl 1-132
reswd_KEYED                            internal static fixed bin(17,0)          initial dcl 1-332
reswd_LABEL                            internal static fixed bin(17,0)          initial dcl 1-133
reswd_LAST                             internal static fixed bin(17,0)          initial dcl 1-397
reswd_LEADING                          internal static fixed bin(17,0)          initial dcl 1-134
reswd_LEFT                             internal static fixed bin(17,0)          initial dcl 1-250
reswd_LENGTH                           internal static fixed bin(17,0)          initial dcl 1-251
reswd_LESS                             internal static fixed bin(17,0)          initial dcl 1-135
reswd_LIMIT                            internal static fixed bin(17,0)          initial dcl 1-401
reswd_LIMITS                           internal static fixed bin(17,0)          initial dcl 1-402
reswd_LINAGE                           internal static fixed bin(17,0)          initial dcl 1-403
reswd_LINAGE_COUNTER                   internal static fixed bin(17,0)          initial dcl 1-404
reswd_LINE                             internal static fixed bin(17,0)          initial dcl 1-137
reswd_LINES                            internal static fixed bin(17,0)          initial dcl 1-137
reswd_LINE_COUNTER                     internal static fixed bin(17,0)          initial dcl 1-405
reswd_LINKAGE                          internal static fixed bin(17,0)          initial dcl 1-253
reswd_LOCK                             internal static fixed bin(17,0)          initial dcl 1-139
reswd_LOW_VALUE                        internal static fixed bin(17,0)          initial dcl 1-254
reswd_LOW_VALUES                       internal static fixed bin(17,0)          initial dcl 1-254
reswd_MEMORY                           internal static fixed bin(17,0)          initial dcl 1-407
reswd_MERGE                            internal static fixed bin(17,0)          initial dcl 1-33
reswd_MESSAGE                          internal static fixed bin(17,0)          initial dcl 1-140
reswd_MODE                             internal static fixed bin(17,0)          initial dcl 1-256
reswd_MODULES                          internal static fixed bin(17,0)          initial dcl 1-408
reswd_MOVE                             internal static fixed bin(17,0)          initial dcl 1-36
reswd_MULTIPLE                         internal static fixed bin(17,0)          initial dcl 1-409
reswd_MULTIPLY                         internal static fixed bin(17,0)          initial dcl 1-28
reswd_NATIVE                           internal static fixed bin(17,0)          initial dcl 1-303
reswd_NEGATIVE                         internal static fixed bin(17,0)          initial dcl 1-141
reswd_NEXT                             internal static fixed bin(17,0)          initial dcl 1-142
reswd_NO                               internal static fixed bin(17,0)          initial dcl 1-143
reswd_NOT                              internal static fixed bin(17,0)          initial dcl 1-144
reswd_NUMBER                           internal static fixed bin(17,0)          initial dcl 1-410
reswd_NUMERIC                          internal static fixed bin(17,0)          initial dcl 1-145
reswd_NUMERIC_EDITED                   internal static fixed bin(17,0)          initial dcl 1-146
reswd_OBJECT                           internal static fixed bin(17,0)          initial dcl 1-307
reswd_OBJECT_COMPUTER                  internal static fixed bin(17,0)          initial dcl 1-411
reswd_OCCURS                           internal static fixed bin(17,0)          initial dcl 1-257
reswd_OFF                              internal static fixed bin(17,0)          initial dcl 1-413
reswd_OMITTED                          internal static fixed bin(17,0)          initial dcl 1-221
reswd_ON                               internal static fixed bin(17,0)          initial dcl 1-148
reswd_OPEN                             internal static fixed bin(17,0)          initial dcl 1-37
reswd_OPTIONAL                         internal static fixed bin(17,0)          initial dcl 1-415
reswd_OR                               internal static fixed bin(17,0)          initial dcl 1-149
reswd_ORGANIZATION                     internal static fixed bin(17,0)          initial dcl 1-199
reswd_OUTPUT                           internal static fixed bin(17,0)          initial dcl 1-151
reswd_OVERFLOW                         internal static fixed bin(17,0)          initial dcl 1-24
reswd_PAGE                             internal static fixed bin(17,0)          initial dcl 1-153
reswd_PAGE_COUNTER                     internal static fixed bin(17,0)          initial dcl 1-417
reswd_PERFORM                          internal static fixed bin(17,0)          initial dcl 1-38
reswd_PF                               internal static fixed bin(17,0)          initial dcl 1-418
reswd_PH                               internal static fixed bin(17,0)          initial dcl 1-419
reswd_PIC                              internal static fixed bin(17,0)          initial dcl 1-258
reswd_PICTURE                          internal static fixed bin(17,0)          initial dcl 1-258
reswd_PLUS                             internal static fixed bin(17,0)          initial dcl 1-420
reswd_POINTER                          internal static fixed bin(17,0)          initial dcl 1-154
reswd_POSITION                         internal static fixed bin(17,0)          initial dcl 1-421
reswd_POSITIVE                         internal static fixed bin(17,0)          initial dcl 1-155
reswd_PRINTING                         internal static fixed bin(17,0)          initial dcl 1-399
reswd_PROCEDURE                        internal static fixed bin(17,0)          initial dcl 1-156
reswd_PROCEDURES                       internal static fixed bin(17,0)          initial dcl 1-157
reswd_PROCEED                          internal static fixed bin(17,0)          initial dcl 1-158
reswd_PROCESS                          internal static fixed bin(17,0)          initial dcl 1-65
reswd_PROCESSING                       internal static fixed bin(17,0)          initial dcl 1-159
reswd_PROCESS_AREA                     internal static fixed bin(17,0)          initial dcl 1-320
reswd_PROGRAM                          internal static fixed bin(17,0)          initial dcl 1-160
reswd_PROGRAM_ID                       internal static fixed bin(17,0)          initial dcl 1-422
reswd_PURGE                            internal static fixed bin(17,0)          initial dcl 1-72
reswd_QUEUE                            internal static fixed bin(17,0)          initial dcl 1-261
reswd_QUOTE                            internal static fixed bin(17,0)          initial dcl 1-262
reswd_QUOTES                           internal static fixed bin(17,0)          initial dcl 1-262
reswd_RANDOM                           internal static fixed bin(17,0)          initial dcl 1-161
reswd_RD                               internal static fixed bin(17,0)          initial dcl 1-423
reswd_READ                             internal static fixed bin(17,0)          initial dcl 1-39
reswd_RECEIVE                          internal static fixed bin(17,0)          initial dcl 1-41
reswd_RECORD                           internal static fixed bin(17,0)          initial dcl 1-162
reswd_RECORDING                        internal static fixed bin(17,0)          initial dcl 1-265
reswd_RECORDS                          internal static fixed bin(17,0)          initial dcl 1-215
reswd_REDEFINES                        internal static fixed bin(17,0)          initial dcl 1-266
reswd_REEL                             internal static fixed bin(17,0)          initial dcl 1-163
reswd_REFERENCES                       internal static fixed bin(17,0)          initial dcl 1-164
reswd_RELATIVE                         internal static fixed bin(17,0)          initial dcl 1-182
reswd_RELEASE                          internal static fixed bin(17,0)          initial dcl 1-42
reswd_REMAINDER                        internal static fixed bin(17,0)          initial dcl 1-165
reswd_REMOVAL                          internal static fixed bin(17,0)          initial dcl 1-291
reswd_RENAMES                          internal static fixed bin(17,0)          initial dcl 1-267
reswd_REPLACE                          internal static fixed bin(17,0)          initial dcl 1-336
reswd_REPLACING                        internal static fixed bin(17,0)          initial dcl 1-166
reswd_REPORTS                          internal static fixed bin(17,0)          initial dcl 1-268
reswd_RERUN                            internal static fixed bin(17,0)          initial dcl 1-426
reswd_RESERVE                          internal static fixed bin(17,0)          initial dcl 1-427
reswd_RESET                            internal static fixed bin(17,0)          initial dcl 1-428
reswd_RETURN                           internal static fixed bin(17,0)          initial dcl 1-43
reswd_REVERSED                         internal static fixed bin(17,0)          initial dcl 1-168
reswd_REWIND                           internal static fixed bin(17,0)          initial dcl 1-169
reswd_REWRITE                          internal static fixed bin(17,0)          initial dcl 1-45
reswd_RF                               internal static fixed bin(17,0)          initial dcl 1-429
reswd_RH                               internal static fixed bin(17,0)          initial dcl 1-430
reswd_RIGHT                            internal static fixed bin(17,0)          initial dcl 1-270
reswd_ROUNDED                          internal static fixed bin(17,0)          initial dcl 1-170
reswd_RUN                              internal static fixed bin(17,0)          initial dcl 1-171
reswd_SA                               internal static fixed bin(17,0)          initial dcl 1-271
reswd_SAME                             internal static fixed bin(17,0)          initial dcl 1-431
reswd_SD                               internal static fixed bin(17,0)          initial dcl 1-272
reswd_SEARCH                           internal static fixed bin(17,0)          initial dcl 1-44
reswd_SECURITY                         internal static fixed bin(17,0)          initial dcl 1-432
reswd_SEGMENT                          internal static fixed bin(17,0)          initial dcl 1-173
reswd_SEGMENT_LIMIT                    internal static fixed bin(17,0)          initial dcl 1-433
reswd_SELECT                           internal static fixed bin(17,0)          initial dcl 1-434
reswd_SEND                             internal static fixed bin(17,0)          initial dcl 1-47
reswd_SENTENCE                         internal static fixed bin(17,0)          initial dcl 1-174
reswd_SEPARATE                         internal static fixed bin(17,0)          initial dcl 1-273
reswd_SEQUENCE                         internal static fixed bin(17,0)          initial dcl 1-425
reswd_SEQUENTIAL                       internal static fixed bin(17,0)          initial dcl 1-435
reswd_SET                              internal static fixed bin(17,0)          initial dcl 1-48
reswd_SIGN                             internal static fixed bin(17,0)          initial dcl 1-274
reswd_SIZE                             internal static fixed bin(17,0)          initial dcl 1-175
reswd_SORT                             internal static fixed bin(17,0)          initial dcl 1-66
reswd_SORT_MERGE                       internal static fixed bin(17,0)          initial dcl 1-436
reswd_SOURCE                           internal static fixed bin(17,0)          initial dcl 1-275
reswd_SOURCE_COMPUTER                  internal static fixed bin(17,0)          initial dcl 1-437
reswd_SPACE                            internal static fixed bin(17,0)          initial dcl 1-210
reswd_SPACES                           internal static fixed bin(17,0)          initial dcl 1-210
reswd_SPANNED                          internal static fixed bin(17,0)          initial dcl 1-439
reswd_SPECIAL_NAMES                    internal static fixed bin(17,0)          initial dcl 1-438
reswd_SSF                              internal static fixed bin(17,0)          initial dcl 1-89
reswd_STANDARD                         internal static fixed bin(17,0)          initial dcl 1-176
reswd_STANDARD_1                       internal static fixed bin(17,0)          initial dcl 1-347
reswd_STANDARD_2                       internal static fixed bin(17,0)          initial dcl 1-226
reswd_START                            internal static fixed bin(17,0)          initial dcl 1-70
reswd_STATUS                           internal static fixed bin(17,0)          initial dcl 1-276
reswd_STOP                             internal static fixed bin(17,0)          initial dcl 1-50
reswd_STREAM                           internal static fixed bin(17,0)          initial dcl 1-328
reswd_STRING                           internal static fixed bin(17,0)          initial dcl 1-51
reswd_SUBSTITUTION                     internal static fixed bin(17,0)          initial dcl 1-338
reswd_SUBTRACT                         internal static fixed bin(17,0)          initial dcl 1-29
reswd_SUB_QUEUE_1                      internal static fixed bin(17,0)          initial dcl 1-277
reswd_SUB_QUEUE_2                      internal static fixed bin(17,0)          initial dcl 1-278
reswd_SUB_QUEUE_3                      internal static fixed bin(17,0)          initial dcl 1-279
reswd_SUM                              internal static fixed bin(17,0)          initial dcl 1-441
reswd_SUSPEND                          internal static fixed bin(17,0)          initial dcl 1-52
reswd_SYMBOLIC                         internal static fixed bin(17,0)          initial dcl 1-280
reswd_SYNC                             internal static fixed bin(17,0)          initial dcl 1-281
reswd_SYNCHRONIZED                     internal static fixed bin(17,0)          initial dcl 1-281
reswd_TABLE                            internal static fixed bin(17,0)          initial dcl 1-283
reswd_TALLY                            internal static fixed bin(17,0)          initial dcl 1-212
reswd_TALLYING                         internal static fixed bin(17,0)          initial dcl 1-177
reswd_TAPE                             internal static fixed bin(17,0)          initial dcl 1-444
reswd_TERMINAL                         internal static fixed bin(17,0)          initial dcl 1-178
reswd_TEXT                             internal static fixed bin(17,0)          initial dcl 1-445
reswd_THAN                             internal static fixed bin(17,0)          initial dcl 1-179
reswd_THROUGH                          internal static fixed bin(17,0)          initial dcl 1-180
reswd_THRU                             internal static fixed bin(17,0)          initial dcl 1-180
reswd_TIME                             internal static fixed bin(17,0)          initial dcl 1-183
reswd_TIMES                            internal static fixed bin(17,0)          initial dcl 1-183
reswd_TOP                              internal static fixed bin(17,0)          initial dcl 1-208
reswd_TRAILING                         internal static fixed bin(17,0)          initial dcl 1-285
reswd_TRANSFORM                        internal static fixed bin(17,0)          initial dcl 1-68
reswd_TYPE                             internal static fixed bin(17,0)          initial dcl 1-446
reswd_UNEQUAL                          internal static fixed bin(17,0)          initial dcl 1-187
reswd_UNIT                             internal static fixed bin(17,0)          initial dcl 1-188
reswd_UNSTRING                         internal static fixed bin(17,0)          initial dcl 1-54
reswd_UNTIL                            internal static fixed bin(17,0)          initial dcl 1-189
reswd_UP                               internal static fixed bin(17,0)          initial dcl 1-190
reswd_UPON                             internal static fixed bin(17,0)          initial dcl 1-191
reswd_USAGE                            internal static fixed bin(17,0)          initial dcl 1-287
reswd_USE                              internal static fixed bin(17,0)          initial dcl 1-56
reswd_USING                            internal static fixed bin(17,0)          initial dcl 1-192
reswd_VALUE                            internal static fixed bin(17,0)          initial dcl 1-288
reswd_VALUES                           internal static fixed bin(17,0)          initial dcl 1-288
reswd_VARYING                          internal static fixed bin(17,0)          initial dcl 1-193
reswd_VLR                              internal static fixed bin(17,0)          initial dcl 1-218
reswd_WHEN                             internal static fixed bin(17,0)          initial dcl 1-194
reswd_WITH                             internal static fixed bin(17,0)          initial dcl 1-195
reswd_WORDS                            internal static fixed bin(17,0)          initial dcl 1-447
reswd_WORKING_STORAGE                  internal static fixed bin(17,0)          initial dcl 1-290
reswd_WRITE                            internal static fixed bin(17,0)          initial dcl 1-55
reswd_ZERO                             internal static fixed bin(17,0)          initial dcl 1-196
reswd_ZEROES                           internal static fixed bin(17,0)          initial dcl 1-196
reswd_ZEROS                            internal static fixed bin(17,0)          initial dcl 1-196
reswd_ptr                              defined         pointer                  dcl 5-79
rw_dscr                                based           char(9)                  array packed unaligned dcl 1418
same_sort_merge_proc                   defined         bit(1)                   dcl 5-215
scratch_dir                            defined         char(168)                dcl 5-207
sect_eop_flag                          defined         fixed bin(17,0)          dcl 5-137
seg_init_flag                          defined         fixed bin(17,0)          dcl 5-133
seg_init_list_ptr                      defined         pointer                  dcl 5-41
shdr                                   based           structure                level 1 unaligned dcl 1486
stack_off                              defined         fixed bin(17,0)          dcl 5-121
statement_info_ptr                     defined         pointer                  dcl 5-77
sym_base_ptr                           defined         pointer                  dcl 5-17
sym_max                                defined         fixed bin(17,0)          dcl 5-105
sym_wd_off                             defined         fixed bin(17,0)          dcl 5-103
tag_table_max                          defined         fixed bin(17,0)          dcl 5-167
tag_table_ptr                          defined         pointer                  dcl 5-53
tcur                                   automatic       pointer                  dcl 1417
temp_token_area_ptr                    defined         pointer                  dcl 5-43
temp_token_max                         defined         fixed bin(17,0)          dcl 5-169
temp_token_ptr                         defined         pointer                  dcl 5-45
text_base_ptr                          defined         pointer                  dcl 5-9
text_wd_off                            defined         fixed bin(17,0)          dcl 5-91
token_block1_ptr                       defined         pointer                  dcl 5-47
token_block2_ptr                       defined         pointer                  dcl 5-49
value_cnt                              defined         fixed bin(17,0)          dcl 5-195
ws_charcnt                             defined         fixed bin(17,0)          dcl 5-187
ws_wdoff                               defined         fixed bin(17,0)          dcl 5-201
xcomma_key                             internal static fixed bin(17,0)          initial dcl 1416
xdepending_key                         internal static fixed bin(17,0)          initial dcl 1414
xnote_key                              internal static fixed bin(17,0)          initial dcl 1415
xref_bypass                            defined         bit(1)                   dcl 5-213
xref_chain_ptr                         defined         pointer                  dcl 5-75
xref_token_ptr                         defined         pointer                  dcl 5-73

NAMES DECLARED BY EXPLICIT CONTEXT.
MD                              001751 constant        label                    dcl 533 ref 523 527 531
MDH                             000006 constant        label                    array(5) dcl 519 ref 517
check_sort_list                 003514 constant        entry                    external dcl 1268
ck_ci                           000353 constant        label                    dcl 94
cobol_res_words                 000161 constant        entry                    external dcl 38
diag                            004240 constant        entry                    internal dcl 1538 ref 133 219 1214
div_head                        000013 constant        label                    array(5) dcl 566 ref 539 558
fail                            000513 constant        label                    dcl 157 ref 111 126
gen_hdr                         001771 constant        label                    dcl 546 ref 499
gen_head                        003775 constant        entry                    internal dcl 1204 ref 100 551 591 784
hit                             001405 constant        label                    dcl 392 ref 140
initialize                      001350 constant        entry                    external dcl 370
l_p11a                          003060 constant        label                    dcl 918 ref 901 904
l_p2a                           002202 constant        label                    dcl 641
l_p2b                           002260 constant        label                    dcl 667 ref 674
l_p2c                           002266 constant        label                    dcl 678 ref 658
l_p9a                           002643 constant        label                    dcl 829 ref 834 836
lex_proc                        000020 constant        label                    array(15) dcl 619 ref 561
name_seq                        003746 constant        entry                    internal dcl 1180 ref 1083 1093
next_pn                         000546 constant        label                    dcl 168 ref 360
p_n_exit                        001253 constant        label                    dcl 335
prefix_name                     003605 constant        entry                    internal dcl 1126 ref 1153 1155 1174 1176 1195
prefix_qual_name                003643 constant        entry                    internal dcl 1142 ref 1067 1099
s_p_loop                        001603 constant        label                    dcl 447 ref 453 464 466 469 476 480 484 490 502 509
                                                                                  568 574 578 615 619 632 634 638 669 681 688 690
                                                                                  696 698 720 722 737 807 809 815 823 843 848 890
                                                                                  892 896 927 932 943 953 955 969 971 981 988 992
                                                                                  1001 1019 1023 1029 1033 1078 1089 1105 1124
s_p_proc                        000000 constant        label                    array(6) dcl 460 ref 456
scanoff_id                      003133 constant        label                    dcl 935 ref 821 925
start                           000170 constant        label                    dcl 46
start_search                    000376 constant        label                    dcl 107 ref 89
tph                             000452 constant        label                    dcl 129 ref 117

NAME DECLARED BY CONTEXT OR IMPLICATION.
addrel                                                 builtin function         ref 59 114

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      5046        5652    4322        5056
Length      6412    4322       604         524     524         452

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cobol_res_words                     208 external procedure  is an external procedure.  
prefix_name                             internal procedure  shares stack frame of external procedure cobol_res_words.  
prefix_qual_name                        internal procedure  shares stack frame of external procedure cobol_res_words.  
name_seq                                internal procedure  shares stack frame of external procedure cobol_res_words.  
gen_head                                internal procedure  shares stack frame of external procedure cobol_res_words.  
diag                                    internal procedure  shares stack frame of external procedure cobol_res_words.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 procname                    cobol_res_words
000035 len                         cobol_res_words
000036 p_n                         cobol_res_words
000037 c_f_sw                      cobol_res_words
000040 area_a_sw                   cobol_res_words
000042 p                           cobol_res_words
000044 secint                      cobol_res_words
000045 i                           cobol_res_words
000046 h_w_count                   cobol_res_words
000047 dclr_sec                    cobol_res_words
000050 tm_d_ck                     cobol_res_words
000051 increment_dclr_sec          cobol_res_words
000052 tfirst                      cobol_res_words
000054 tcurrent                    cobol_res_words
000056 ttop                        cobol_res_words
000060 ad_attn                     cobol_res_words
000062 s_p_i                       cobol_res_words
000063 indicators                  cobol_res_words
000064 state                       cobol_res_words
000066 reswd_table_ptr             cobol_res_words
000070 g2_ptr                      cobol_res_words
000164 DS                          cobol_res_words
000165 sort_file_list              cobol_res_words
000451 last_sort_file              cobol_res_words
000452 lev_message                 cobol_res_words

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cobol_res_words          000100 PDF                         cobol_res_words
                         000102 st                          cobol_res_words
                         000103 save_stsw                   cobol_res_words
                         000104 rec_ad                      cobol_res_words
                         000106 reswd_len                   cobol_res_words
                         000110 g1_ptr                      cobol_res_words
                         000112 mcode                       cobol_res_words
                         000113 g1_off                      cobol_res_words
                         000114 rwl                         cobol_res_words
                         000116 lev_message_ptr             cobol_res_words
                         000132 len                         prefix_name

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_char_temp     call_ext_out_desc   call_ext_out        return_mac          signal_op           shorten_stack
ext_entry           ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cobol_c_list                  cobol_db_phase$proc_def_ptr   cobol_delete_tokens           cobol_gns
cobol_gns1                    cobol_insert_token            cobol_io_$set_state           cobol_lexerr
cobol_output_tokens           cobol_output_tokens$proc_def_ptr                            cobol_proc_copy
cobol_proc_sort               cobol_vdwf_sput               hcs_$make_ptr                 ioa_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
cobol_$date_compiled_sw       cobol_ext_$cobol_com_ptr      cobol_ext_$cobol_m2fp         cobol_ext_$cobol_ntfp
cobol_ext_$report_exists      cobol_ext_lex$cobol_comma_character                         cobol_ext_lex$cobol_current
cobol_ext_lex$cobol_debug_mode                              cobol_ext_lex$cobol_decimal_point_character
cobol_ext_lex$cobol_dp_sw     cobol_ext_lex$cobol_endprog_sw                              cobol_ext_lex$cobol_frst
cobol_ext_lex$cobol_head_words                              cobol_ext_lex$cobol_lu_sw     cobol_ext_lex$cobol_mfp
cobol_ext_lex$cobol_name_number                             cobol_ext_lex$cobol_pic_switch
cobol_ext_lex$cobol_progid_sw cobol_ext_lex$cobol_rwt_init_sw
cobol_ext_lex$cobol_scanoff_sw                              cobol_ext_lex$cobol_section_number
cobol_ext_lex$cobol_stack_sw  cobol_ext_lex$cobol_top       cobol_ext_lex$ph_num
cobol_ext_lex$processing_report                             cobol_ext_lex$real_end_report




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     38 000160        46 000170        50 000173        52 000231        54 000236        55 000250        58 000257
     59 000266        60 000275        62 000277        63 000301        64 000302        69 000303        71 000307
     72 000311        73 000312        74 000316        75 000320        76 000322        77 000326        78 000331
     79 000332        80 000333        81 000334        83 000335        85 000345        89 000346        92 000350
     94 000353        98 000366       100 000370       102 000371       103 000374       107 000376       109 000403
    111 000412       114 000413       117 000416       120 000423       122 000435       124 000442       126 000443
    129 000452       133 000465       136 000505       137 000506       140 000511       157 000513       161 000526
    163 000533       166 000544       168 000546       170 000553       171 000554       172 000556       174 000560
    176 000563       177 000565       178 000567       179 000571       182 000573       185 000600       187 000601
    189 000613       191 000622       194 000635       196 000640       200 000644       204 000661       208 000672
    210 000676       214 000707       216 000713       219 000724       222 000736       225 000743       232 000761
    234 000765       241 001000       243 001004       246 001017       247 001023       252 001040       258 001055
    259 001056       268 001067       270 001070       273 001076       279 001113       280 001114       288 001125
    289 001126       296 001137       297 001140       300 001142       301 001144       303 001146       304 001151
    306 001153       308 001157       310 001164       312 001177       314 001200       316 001201       319 001205
    321 001216       326 001233       328 001235       330 001251       335 001253       340 001260       343 001262
    344 001263       347 001264       348 001267       349 001271       354 001273       355 001277       356 001301
    358 001302       360 001322       365 001336       366 001337       368 001340       370 001347       374 001357
    375 001362       376 001363       380 001365       381 001366       384 001376       392 001405       395 001412
    397 001421       400 001430       401 001454       403 001463       404 001464       407 001467       409 001473
    412 001477       415 001502       416 001504       419 001506       420 001507       422 001513       423 001517
    424 001526       426 001534       428 001543       430 001547       445 001602       447 001603       450 001605
    453 001617       456 001635       460 001637       464 001643       466 001644       469 001645       476 001653
    480 001665       482 001670       484 001675       486 001676       490 001703       493 001710       495 001711
    497 001714       498 001715       499 001717       502 001720       504 001721       507 001726       509 001733
    512 001734       515 001735       517 001737       519 001740       523 001742       525 001743       527 001745
    529 001746       531 001750       533 001751       539 001755       542 001763       544 001765       546 001771
    549 002002       551 002007       552 002010       555 002016       558 002020       561 002022       566 002027
    568 002031       570 002032       572 002034       574 002036       578 002037       584 002042       585 002044
    586 002047       588 002053       590 002064       591 002066       594 002067       597 002072       600 002074
    602 002104       604 002107       605 002117       608 002122       611 002124       613 002130       615 002133
    619 002134       622 002142       624 002144       626 002150       630 002165       632 002170       634 002171
    638 002177       641 002202       644 002204       646 002210       648 002213       650 002220       652 002223
    654 002225       656 002231       658 002234       662 002241       664 002246       665 002251       666 002254
    667 002260       669 002263       674 002264       678 002266       681 002313       683 002314       686 002320
    688 002322       690 002323       694 002326       696 002332       698 002333       703 002341       705 002343
    707 002347       711 002367       712 002371       715 002375       718 002412       720 002415       722 002416
    731 002421       733 002423       735 002430       737 002431       739 002432       742 002434       744 002440
    746 002444       749 002451       752 002454       754 002456       758 002460       760 002463       761 002473
    764 002476       766 002477       769 002501       771 002503       776 002505       778 002507       780 002516
    782 002523       784 002530       786 002531       787 002534       790 002537       793 002545       794 002547
    798 002551       799 002553       805 002607       807 002612       809 002613       815 002621       818 002626
    819 002632       821 002634       823 002635       829 002643       832 002650       834 002656       836 002661
    840 002663       842 002666       843 002713       846 002714       848 002721       850 002722       854 002730
    857 002734       861 002745       864 002751       873 002753       875 002756       878 002762       880 002765
    883 002773       890 003002       892 003003       896 003011       899 003016       901 003022       904 003030
    907 003033       909 003035       912 003044       914 003050       916 003053       918 003060       920 003105
    921 003106       923 003114       925 003117       927 003120       932 003126       935 003133       938 003135
    940 003141       941 003144       943 003145       945 003146       950 003161       953 003165       955 003173
    959 003176       961 003201       962 003211       966 003214       969 003220       971 003226       975 003231
    981 003233       988 003234       992 003242       995 003247       997 003253       998 003255      1001 003273
   1003 003274      1011 003301      1016 003312      1019 003316      1023 003324      1027 003327      1029 003333
   1033 003341      1037 003344      1040 003375      1044 003403      1045 003404      1051 003406      1053 003411
   1057 003415      1059 003420      1062 003426      1067 003435      1073 003436      1074 003437      1078 003441
   1083 003444      1084 003450      1085 003451      1089 003453      1093 003456      1094 003462      1095 003463
   1099 003465      1101 003471      1102 003472      1105 003474      1116 003477      1118 003501      1119 003503
   1120 003505      1124 003507      1268 003510      1273 003530      1275 003542      1278 003567      1280 003571
   1126 003605      1134 003607      1135 003614      1137 003635      1138 003641      1140 003642      1142 003643
   1146 003644      1149 003651      1153 003660      1155 003670      1158 003674      1161 003701      1165 003710
   1167 003716      1170 003722      1174 003731      1176 003741      1178 003745      1180 003746      1190 003750
   1191 003755      1195 003764      1198 003773      1200 003774      1204 003775      1214 003776      1216 004011
   1217 004015      1218 004020      1219 004023      1220 004026      1221 004030      1223 004032      1225 004064
   1235 004112      1237 004126      1238 004133      1239 004136      1240 004144      1242 004146      1244 004161
   1245 004166      1246 004170      1248 004174      1250 004207      1251 004214      1252 004216      1254 004220
   1256 004224      1257 004227      1258 004231      1259 004233      1261 004237      1538 004240      1542 004242
   1543 004247      1544 004251      1545 004253      1547 004255      1549 004263


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
