	COMPILATION LISTING OF SEGMENT cobol_set_gen
	Compiled by: Multics PL/I Compiler, Release 31b, of April 24, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 05/24/89  0954.8 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
       17*     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
       18*     MCR8060 cobol_set_gen.pl1 Reformatted code to new Cobol standard.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 /* Modified on 04/05/80/ by FCH, [4.2-1], fix out-of range checking, BUG430(TR4533) */
       23 /* Modified since Version 4.2 */
       24 /*{*/
       25 /* format: style3 */
       26 cobol_set_gen:
       27      proc (in_token_ptr);
       28 
       29 dcl	opno		fixed bin;
       30 dcl	ok_tag		fixed bin;
       31 dcl	retry_tag		fixed bin;
       32 dcl	slen		fixed bin;
       33 dcl	(i, j)		fixed bin;
       34 dcl	temp		fixed bin;
       35 dcl	value		fixed bin;
       36 dcl	litoff		fixed bin;
       37 
       38 dcl	temp_numlit	char (18);
       39 dcl	char4		char (4) based;
       40 dcl	char8		char (8) based;
       41 
       42 dcl	done		bit (1);
       43 dcl	ocsw		bit (1);
       44 dcl	subsw		bit (1);
       45 
       46 dcl	iptr		ptr;
       47 dcl	s1p		ptr;
       48 dcl	r1p		ptr;
       49 dcl	s2p		ptr;
       50 dcl	r2p		ptr;
       51 dcl	dn_ptr		ptr;
       52 dcl	name_ptr		ptr;
       53 
       54 dcl	rterror_SET_RANGE	fixed bin static options (constant) init (61);
       55 dcl	A		fixed bin static options (constant) init (1);
       56 dcl	Q		fixed bin static options (constant) init (2);
       57 dcl	AQ		fixed bin static options (constant) init (3);
       58 dcl	X5		fixed bin static options (constant) init (15);
       59 
       60 dcl	ADQ		bit (11) static options (constant) init ("00011111000"b);
       61 dcl	CWL		bit (11) static options (constant) init ("00100100100"b);
       62 dcl	LDA		bit (11) static options (constant) init ("01001110100"b);
       63 dcl	LDQ		bit (11) static options (constant) init ("01001111000"b);
       64 dcl	LCQ		bit (11) static options (constant) init ("01101111000"b);
       65 dcl	LDAQ		bit (11) static options (constant) init ("01001111100"b);
       66 dcl	STAQ		bit (11) static options (constant) init ("11110111100"b);
       67 dcl	STA		bit (11) static options (constant) init ("11110110100"b);
       68 dcl	STQ		bit (11) static options (constant) init ("11110111000"b);
       69 dcl	STBQ		bit (11) static options (constant) init ("10110101000"b);
       70 dcl	LXL5		bit (11) static options (constant) init ("11101010100"b);
       71 dcl	LDX5		bit (11) static options (constant) init ("01001010100"b);
       72 dcl	STX5		bit (11) static options (constant) init ("11110010100"b);
       73 dcl	AOS		bit (11) static options (constant) init ("00010110000"b);
       74 dcl	STBQ_MASK		bit (6) static options (constant) init ("110000"b);
       75 
       76 dcl	set_seq		(2) bit (36) static options (constant) init ("000000000000000001010011101000000111"b,
       77 						/* lda 1,dl */
       78 			"100000000000001010011101010001010000"b);
       79 						/*epp2 pr4|12,**/
       80 dcl	set_reloc		(4) bit (5) aligned static options (constant) init ("00000"b, "00000"b, "11001"b, "00000"b);
       81 dcl	QRS_instr		bit (36) static options (constant) init ("000000000000010010111011010000000000"b);
       82 						/* qrs	22 */
       83 dcl	QLS_instr		bit (36) static options (constant) init ("000000000000010010111011110000000000"b);
       84 						/* qls	22 */
       85 dcl	ANQ1_instr	bit (36) static options (constant) init ("000000000000000000011111110000000011"b);
       86 						/* anq	0,du */
       87 dcl	qls_instr		bit (36) static init ("000000000000000000111011110000000000"b);
       88 						/* qls	X */
       89 dcl	sta_instr		bit (36) static init ("010000000000000000111101101001000000"b);
       90 						/* sta 2|x */
       91 dcl	stz_instr		bit (36) static init ("010000000000000000100101000001000000"b);
       92 						/* stz 2|x */
       93 dcl	mpy_instr		bit (36) static init ("000000000000000000100000010000000111"b);
       94 						/* mpy	X,dl */
       95 dcl	tze_instr		bit (36) static init ("000000000000000000110000000000000100"b);
       96 						/* tze X */
       97 dcl	ldaq_ic_instr	bit (36) static init ("000000000000000000010011111000000100"b);
       98 						/* ldaq X,ic */
       99 dcl	ldq_ic_instr	bit (36) static init ("000000000000000000010011110000000100"b);
      100 						/* ldq X,ic */
      101 dcl	ldq_dl_instr	bit (36) static init ("000000000000000000010011110000000111"b);
      102 						/* ldq X,dl */
      103 dcl	lcq_ic_instr	bit (36) static init ("000000000000000000011011110000000100"b);
      104 						/* lcq X,ic */
      105 dcl	lcq_dl_instr	bit (36) static init ("000000000000000000011011110000000111"b);
      106 						/* lcq X,dl */
      107 
      108 dcl	reloc		(2) bit (5);
      109 dcl	1 instr,
      110 	  2 address,
      111 	    3 regno	bit (3),
      112 	    3 offset	bit (15),
      113 	  2 op		bit (11),
      114 	  2 reg		bit (1),
      115 	  2 tag		bit (12);
      116 
      117 dcl	1 out_token,
      118 	  2 n		fixed bin,
      119 	  2 fill		fixed bin,
      120 	  2 ptr		(4) ptr;
      121 
      122 dcl	1 pool,
      123 	  2 num1		fixed bin (35),
      124 	  2 num2		fixed bin (35);
      125 
      126 
      127 dcl	1 add_eos		static options (constant),
      128 	  2 size		fixed bin init (10),
      129 	  2 line		fixed bin init (0),
      130 	  2 column	fixed bin init (0),
      131 	  2 type		fixed bin init (19),
      132 	  2 verb		fixed bin init (2),
      133 	  2 e		fixed bin init (1),
      134 	  2 h		fixed bin init (1),
      135 	  2 i		fixed bin init (0),
      136 	  2 j		fixed bin init (0),
      137 	  2 a		bit (3) init (""b),
      138 	  2 b		bit (1) init (""b),
      139 	  2 c		bit (1) init (""b),
      140 	  2 d		bit (2) init (""b),
      141 	  2 f		bit (2) init (""b),
      142 	  2 g		bit (2) init (""b),
      143 	  2 k		bit (5) init (""b);
      144 
      145 dcl	1 subtract_eos	static options (constant),
      146 	  2 size		fixed bin init (10),
      147 	  2 line		fixed bin init (0),
      148 	  2 column	fixed bin init (0),
      149 	  2 type		fixed bin init (19),
      150 	  2 verb		fixed bin init (11),
      151 	  2 e		fixed bin init (1),
      152 	  2 h		fixed bin init (1),
      153 	  2 i		fixed bin init (0),
      154 	  2 j		fixed bin init (0),
      155 	  2 a		bit (3) init (""b),
      156 	  2 b		bit (1) init (""b),
      157 	  2 c		bit (1) init (""b),
      158 	  2 d		bit (2) init (""b),
      159 	  2 f		bit (2) init (""b),
      160 	  2 g		bit (2) init (""b),
      161 	  2 k		bit (5) init (""b);
      162 
      163 dcl	1 move_eos	static options (constant),
      164 	  2 size		fixed bin init (10),
      165 	  2 line		fixed bin init (0),
      166 	  2 column	fixed bin init (0),
      167 	  2 type		fixed bin init (19),
      168 	  2 verb		fixed bin init (18),
      169 	  2 e		fixed bin init (1),
      170 	  2 h		fixed bin init (0),
      171 	  2 i		fixed bin init (0),
      172 	  2 j		fixed bin init (0),
      173 	  2 a		bit (3) init (""b),
      174 	  2 b		bit (1) init (""b),
      175 	  2 c		bit (1) init (""b),
      176 	  2 d		bit (2) init (""b),
      177 	  2 f		bit (2) init (""b),
      178 	  2 g		bit (2) init (""b),
      179 	  2 k		bit (5) init (""b);
      180 
      181 dcl	1 reg		aligned static,
      182 	  2 num		fixed bin,
      183 	  2 assigned_reg	bit (4),
      184 	  2 lock		fixed bin init (1),
      185 	  2 reg_set_now	fixed bin,
      186 	  2 use_code	fixed bin init (0),
      187 	  2 content_ptr	ptr init (null ()),
      188 	  2 literal_content bit (36) init (""b);
      189 
      190 dcl	1 ss1		aligned static,
      191 	  2 type		fixed bin init (1),
      192 	  2 operand_no	fixed bin init (0),
      193 	  2 lock		fixed bin init (0),
      194 	  2 segno		fixed bin,
      195 	  2 offset	fixed bin (24),
      196 	  2 send_receive	fixed bin init (0);
      197 
      198 dcl	1 rs1		aligned static,
      199 	  2 type		fixed bin init (1),
      200 	  2 operand_no	fixed bin init (0),
      201 	  2 lock		fixed bin init (0),
      202 	  2 segno		fixed bin,
      203 	  2 offset	fixed bin (24),
      204 	  2 send_receive	fixed bin init (1);
      205 
      206 dcl	1 ss2		aligned static,
      207 	  2 type		fixed bin init (2),
      208 	  2 operand_no	fixed bin init (1),
      209 	  2 lock		fixed bin init (0),
      210 	  2 operand,
      211 	    3 token_ptr	ptr init (null ()),
      212 	    3 send_receive	fixed bin init (0),
      213 	    3 ic_mod	fixed bin,
      214 	    3 size_sw	fixed bin init (1);
      215 
      216 dcl	1 rs2		aligned static,
      217 	  2 type		fixed bin init (2),
      218 	  2 operand_no	fixed bin init (1),
      219 	  2 lock		fixed bin init (0),
      220 	  2 operand,
      221 	    3 token_ptr	ptr init (null ()),
      222 	    3 send_receive	fixed bin init (1),
      223 	    3 ic_mod	fixed bin,
      224 	    3 size_sw	fixed bin init (1);
      225 
      226 declare	1 ptr_register_request
      227 			aligned static,
      228 	  2 what_pointer	fixed bin aligned init (2),
      229 	  2 assigned_ptr	fixed bin aligned,
      230 	  2 lock		fixed bin aligned init (1),
      231 	  2 switch	fixed bin aligned init (0),
      232 	  2 segno		fixed bin aligned init (0),
      233 	  2 offset	fixed bin aligned init (0),
      234 	  2 reset		fixed bin aligned;
      235 
      236 dcl	cobol_pool	entry (char (*), fixed bin, fixed bin);
      237 dcl	cobol_addr	entry (ptr, ptr, ptr);
      238 dcl	cobol_emit	entry (ptr, ptr, fixed bin);
      239 dcl	cobol_register$load entry (ptr);
      240 dcl	cobol_register$release
      241 			entry (ptr);
      242 dcl	cobol_pointer_register$get
      243 			entry (ptr);
      244 dcl	cobol_pointer_register$priority
      245 			entry (fixed bin, fixed bin, bit (3));
      246 dcl	cobol_make_type9$long_bin
      247 			entry (ptr, fixed bin, fixed bin (24));
      248 dcl	cobol_move_gen	entry (ptr);
      249 dcl	cobol_add_gen	entry (ptr);
      250 dcl	cobol_subtract_gen	entry (ptr);
      251 dcl	cobol_define_tag	entry (fixed bin);
      252 dcl	cobol_make_tagref	entry (fixed bin, fixed bin, ptr);
      253 dcl	cobol_gen_error	entry (fixed bin, fixed bin);
      254 
      255 dcl	addr		builtin,
      256 	binary		builtin,
      257 	null		builtin,
      258 	substr		builtin,
      259 	unspec		builtin,
      260 	fixed		builtin;
      261 
      262 /*************************************/
      263 start:
      264 	ocsw = fixed_common.options.oc;
      265 	eos_ptr = in_token.token_ptr (in_token.n);
      266 	opno = end_stmt.e;
      267 	dn_ptr = in_token.token_ptr (opno + 2);
      268 	s1p = addr (ss1);
      269 	r1p = addr (rs1);
      270 	s2p = addr (ss2);
      271 	r2p = addr (rs2);
      272 	go to format (binary (end_stmt.a));
      273 
      274 /*************************************/
      275 format (0):					/* set {IN | IDN | ID} to {IN | IDN | ID | LIT} */
      276 start0:
      277 	if data_name.type = 10
      278 	then do;					/* set x to IN */
      279 		ind_ptr = dn_ptr;
      280 		ss1.segno = index_name.seg_num;
      281 		ss1.offset = index_name.offset;
      282 		slen = index_name.struc_length;
      283 		do i = 1 to opno;
      284 		     dn_ptr = in_token.token_ptr (i + 1);
      285 		     if data_name.type = 10
      286 		     then do;			/* set IN to IN */
      287 			     ind_ptr = dn_ptr;
      288 			     rs1.segno = index_name.seg_num;
      289 			     rs1.offset = index_name.offset + 4;
      290 			     if ocsw
      291 			     then call oc_start;
      292 			     if slen = index_name.struc_length
      293 			     then do;		/* equal element lengths */
      294 				     call addr_emit (s1p, LDAQ);
      295 				     call reg_lock (AQ);
      296 				     rs1.offset = rs1.offset - 4;
      297 				     call addr_emit (r1p, STAQ);
      298 				     call reg_unlock (AQ);
      299 				end;
      300 			     else do;		/* unequal element lengths */
      301 				     ss1.offset = ss1.offset + 4;
      302 				     call addr_emit (s1p, LDQ);
      303 				     ss1.offset = ss1.offset - 4;
      304 				     call reg_lock (AQ);
      305 				     ;
      306 				     call addr_emit (r1p, STQ);
      307 				     call mpy;
      308 				     call adj_emit (-1, STQ);
      309 				     call reg_unlock (AQ);
      310 				end;
      311 			     if ocsw
      312 			     then call oc_finish;
      313 			end;
      314 		     else if data_name.type = 9
      315 		     then if data_name.usage_index
      316 			then do;			/* set IDN to IN */
      317 				rs2.token_ptr = dn_ptr;
      318 				call addr_emit (s1p, LDA);
      319 				call adj_emit (1, LXL5);
      320 				call reg_lock (A);
      321 				call reg_lock (X5);
      322 				call addr_emit (r2p, STA);
      323 				call adj_emit (1, STX5);
      324 				call reg_unlock (A);
      325 				call reg_unlock (X5);
      326 			     end;
      327 			else do;			/* set ID to IN */
      328 				out_token.n = 4;
      329 				out_token.ptr (1) = in_token.token_ptr (1);
      330 				out_token.ptr (2) = null ();
      331 				out_token.ptr (3) = dn_ptr;
      332 				out_token.ptr (4) = addr (move_eos);
      333 				call cobol_make_type9$long_bin (out_token.ptr (2), ss1.segno, ss1.offset + 4);
      334 				call cobol_move_gen (addr (out_token));
      335 			     end;
      336 		end;
      337 	     end;
      338 
      339 	else if data_name.type = 9
      340 	then if data_name.usage_index
      341 	     then do;				/* set x to IDN */
      342 		     ss2.token_ptr = dn_ptr;
      343 		     do i = 1 to opno;
      344 			dn_ptr = in_token.token_ptr (i + 1);
      345 			if data_name.type = 10
      346 			then do;			/* set IN to IDN */
      347 				ind_ptr = dn_ptr;
      348 				rs1.segno = index_name.seg_num;
      349 				rs1.offset = index_name.offset;
      350 				if ocsw
      351 				then call oc_start;
      352 				call addr_emit (s2p, LDAQ);
      353 				call reg_lock (AQ);
      354 				call cobol_emit (addr (QRS_instr), null (), 1);
      355 				call addr_emit (r1p, STAQ);
      356 				call reg_unlock (AQ);
      357 				if ocsw
      358 				then do;
      359 					call oc_finish;
      360 					call oc_finish_idn;
      361 				     end;
      362 			     end;
      363 			else do;			/* set IDN to IDN */
      364 				rs2.token_ptr = dn_ptr;
      365 				if data_name.subscripted
      366 				then do;		/* can't use STBQ instruction */
      367 					call addr_emit (s2p, LDA);
      368 					call adj_emit (1, LDX5);
      369 					call reg_lock (A);
      370 					call reg_lock (X5);
      371 					call addr_emit (r2p, STA);
      372 					call adj_emit (1, STX5);
      373 					call reg_unlock (A);
      374 					call reg_unlock (X5);
      375 				     end;
      376 				else do;
      377 					call addr_emit (s2p, LDAQ);
      378 					call reg_lock (AQ);
      379 					call addr_emit (r2p, STA);
      380 					instr.tag = STBQ_MASK;
      381 					call adj_emit (1, STBQ);
      382 					call reg_unlock (AQ);
      383 				     end;
      384 			     end;
      385 		     end;
      386 		end;
      387 
      388 	     else if (data_name.bin_18 & ^data_name.subscripted) /* set IN to ID(short binary) */ | data_name.bin_36
      389 	     then do;				/* set to ID(long binary) */
      390 		     ss2.token_ptr = dn_ptr;
      391 		     do i = 1 to opno;
      392 			ind_ptr = in_token.token_ptr (i + 1);
      393 			rs1.segno = index_name.seg_num;
      394 			rs1.offset = index_name.offset + 4;
      395 			if ocsw
      396 			then call oc_start;
      397 			call addr_emit (s2p, LDQ);
      398 			call reg_lock (Q);
      399 			if data_name.bin_18
      400 			then do;
      401 				if mod (data_name.offset, 4) ^= 0 & ^data_name.linkage_section
      402 				then call cobol_emit (addr (QLS_instr), null (), 1);
      403 				call cobol_emit (addr (QRS_instr), null (), 1);
      404 			     end;
      405 			call addr_emit (r1p, STQ);
      406 			call mpy;
      407 			call adj_emit (-1, STQ);
      408 			call reg_unlock (Q);
      409 			;
      410 			if ocsw
      411 			then call oc_finish;
      412 		     end;
      413 		end;
      414 
      415 	     else do;				/* set IN to ID(general) */
      416 		     out_token.n = 4;
      417 		     out_token.ptr = in_token.token_ptr (1);
      418 		     out_token.ptr (2) = dn_ptr;
      419 		     out_token.ptr (4) = addr (move_eos);
      420 		     do i = 1 to opno;
      421 			ind_ptr = in_token.token_ptr (i + 1);
      422 			rs1.segno = index_name.seg_num;
      423 			rs1.offset = index_name.offset + 4;
      424 			if ocsw
      425 			then call oc_start;
      426 			out_token.ptr (3) = null ();
      427 			call cobol_make_type9$long_bin (out_token.ptr (3), rs1.segno, rs1.offset);
      428 			call cobol_move_gen (addr (out_token));
      429 			call addr_emit (r1p, LDQ);
      430 			call reg_lock (Q);
      431 			call mpy;
      432 			call adj_emit (-1, STQ);
      433 			call reg_unlock (Q);
      434 			if ocsw
      435 			then call oc_finish;
      436 		     end;
      437 		end;
      438 
      439 	else do;					/* set IN to LIT */
      440 		nlit_ptr = dn_ptr;
      441 		temp_numlit = (18)"0";
      442 		substr (temp_numlit, 19 - numeric_lit.places_left, numeric_lit.places) = numeric_lit.literal;
      443 		pool.num2 = fixed (temp_numlit);
      444 		if pool.num2 = 0
      445 		then call oc_unconditional;
      446 		else do i = 1 to opno;
      447 			ind_ptr = in_token.token_ptr (i + 1);
      448 			rs1.segno = index_name.seg_num;
      449 			rs1.offset = index_name.offset;
      450 						/*[4.2-1]*/
      451 			if pool.num2 < 1 | pool.num2 > index_name.max
      452 			then call oc_unconditional;
      453 			else do;
      454 				pool.num1 = pool.num2 * index_name.struc_length;
      455 				call cobol_pool (addr (pool) -> char8, 2, litoff);
      456 				temp = -(cobol_$text_wd_off + litoff);
      457 				substr (ldaq_ic_instr, 1, 18) = substr (unspec (temp), 19, 18);
      458 				call cobol_emit (addr (ldaq_ic_instr), null (), 1);
      459 				call reg_lock (AQ);
      460 				call addr_emit (r1p, STAQ);
      461 				call reg_unlock (AQ);
      462 				;
      463 			     end;
      464 		     end;
      465 	     end;
      466 	return;
      467 
      468 
      469 /*************************************/
      470 format (1):					/* set IN {up | down} {ID | LIT} */
      471 start1:
      472 	dn_ptr = in_token.token_ptr (opno + 2);
      473 	if data_name.type = 9
      474 	then do;
      475 		if (data_name.bin_18 & ^data_name.subscripted) /* set IN up | down ID(short binary) */
      476 		     | data_name.bin_36
      477 		then do;				/* set IN up | down ID(long binary) */
      478 			ss2.token_ptr = dn_ptr;
      479 			do i = 1 to opno;
      480 			     ind_ptr = in_token.token_ptr (i + 1);
      481 			     rs1.segno = index_name.seg_num;
      482 			     rs1.offset = index_name.offset + 4;
      483 			     if ocsw
      484 			     then call oc_start;
      485 			     if end_stmt.b
      486 			     then call addr_emit (s2p, LCQ);
      487 						/* DOWN */
      488 			     else call addr_emit (s2p, LDQ);
      489 						/* UP */
      490 			     call reg_lock (Q);
      491 			     if data_name.bin_18
      492 			     then do;
      493 				     if mod (data_name.offset, 4) ^= 0 & ^data_name.linkage_section
      494 				     then call cobol_emit (addr (QLS_instr), null (), 1);
      495 				     call cobol_emit (addr (QRS_instr), null (), 1);
      496 				end;
      497 			     call addr_emit (r1p, ADQ);
      498 			     call adj_emit (0, STQ);
      499 			     call mpy;
      500 			     call adj_emit (-1, STQ);
      501 			     call reg_unlock (Q);
      502 			     if ocsw
      503 			     then call oc_finish;
      504 			end;
      505 		     end;
      506 		else do;				/* set IN up | down ID(general) */
      507 			out_token.n = 4;
      508 			out_token.ptr (1) = in_token.token_ptr (1);
      509 			out_token.ptr (2) = dn_ptr;
      510 			do i = 1 to opno;
      511 			     ind_ptr = in_token.token_ptr (i + 1);
      512 			     rs1.segno = index_name.seg_num;
      513 			     rs1.offset = index_name.offset + 4;
      514 			     if ocsw
      515 			     then call oc_start;
      516 			     out_token.ptr (3) = null ();
      517 			     call cobol_make_type9$long_bin (out_token.ptr (3), rs1.segno, rs1.offset);
      518 			     if end_stmt.b
      519 			     then do;		/* DOWN */
      520 				     out_token.ptr (4) = addr (subtract_eos);
      521 				     call cobol_subtract_gen (addr (out_token));
      522 				end;
      523 			     else do;
      524 				     out_token.ptr (4) = addr (add_eos);
      525 				     call cobol_add_gen (addr (out_token));
      526 				end;
      527 			     call addr_emit (r1p, LDQ);
      528 			     call reg_lock (Q);
      529 			     call mpy;
      530 			     call adj_emit (-1, STQ);
      531 			     call reg_unlock (Q);
      532 			     if ocsw
      533 			     then call oc_finish;
      534 			end;
      535 		     end;
      536 	     end;
      537 
      538 	else do;					/* set IN up | down LIT */
      539 		nlit_ptr = dn_ptr;
      540 		temp_numlit = (18)"0";
      541 		substr (temp_numlit, 19 - numeric_lit.places_left, numeric_lit.places) = numeric_lit.literal;
      542 		value = fixed (temp_numlit);
      543 		if numeric_lit.sign = "-"
      544 		then subsw = ^end_stmt.b;
      545 		else subsw = end_stmt.b;
      546 		if value > 1 | subsw
      547 		then do i = 1 to opno;
      548 			ind_ptr = in_token.token_ptr (i + 1);
      549 			rs1.segno = index_name.seg_num;
      550 			rs1.offset = index_name.offset + 4;
      551 			if ocsw
      552 			then call oc_start;
      553 			if value < 262144
      554 			then do;
      555 				if subsw
      556 				then do;
      557 					substr (lcq_dl_instr, 1, 18) = substr (unspec (value), 19, 18);
      558 					call cobol_emit (addr (lcq_dl_instr), null (), 1);
      559 				     end;
      560 				else do;
      561 					substr (ldq_dl_instr, 1, 18) = substr (unspec (value), 19, 18);
      562 					call cobol_emit (addr (ldq_dl_instr), null (), 1);
      563 				     end;
      564 			     end;
      565 			else do;
      566 				call cobol_pool (addr (value) -> char4, 1, litoff);
      567 				temp = -(cobol_$text_wd_off + litoff);
      568 				if subsw
      569 				then do;
      570 					substr (lcq_ic_instr, 1, 18) = substr (unspec (temp), 19, 18);
      571 					call cobol_emit (addr (lcq_ic_instr), null (), 1);
      572 				     end;
      573 				else do;
      574 					substr (ldq_ic_instr, 1, 18) = substr (unspec (temp), 19, 18);
      575 					call cobol_emit (addr (ldq_ic_instr), null (), 1);
      576 				     end;
      577 			     end;
      578 			call reg_lock (Q);
      579 			call addr_emit (r1p, ADQ);
      580 			call adj_emit (0, STQ);
      581 			call mpy;
      582 			call adj_emit (-1, STQ);
      583 			call reg_unlock (Q);
      584 			if ocsw
      585 			then call oc_finish;
      586 		     end;
      587 		else if value = 1
      588 		then do i = 1 to opno;
      589 			ind_ptr = in_token.token_ptr (i + 1);
      590 			rs1.segno = index_name.seg_num;
      591 			rs1.offset = index_name.offset + 4;
      592 			if ocsw
      593 			then call oc_start;
      594 			call addr_emit (r1p, AOS);
      595 			if index_name.struc_length = 1
      596 			then call adj_emit (-1, AOS);
      597 			else do;
      598 				call reg_lock (Q);
      599 				call adj_emit (0, LDQ);
      600 				call mpy;
      601 				call adj_emit (-1, STQ);
      602 				call reg_unlock (Q);
      603 			     end;
      604 			if ocsw
      605 			then call oc_finish;
      606 		     end;
      607 	     end;
      608 	return;
      609 
      610 
      611 /*************************************/
      612 format (2):
      613 start2:
      614 	call cobol_pointer_register$get (addr (ptr_register_request));
      615 	if end_stmt.c = "1"b
      616 	then do;
      617 		call cobol_emit (addr (set_seq (1)), addr (set_reloc (1)), 2);
      618 		string (instr) = sta_instr;
      619 	     end;
      620 	else do;					/* OFF */
      621 		call cobol_emit (addr (set_seq (2)), addr (set_reloc (3)), 1);
      622 		string (instr) = stz_instr;
      623 	     end;
      624 	do i = 1 to opno;
      625 	     name_ptr = in_token.token_ptr (i + 1);
      626 	     temp = mnemonic_name.iw_key - 1;
      627 	     instr.offset = substr (unspec (temp), 22, 15);
      628 	     call cobol_emit (addr (instr), null (), 1);
      629 	end;
      630 	call cobol_pointer_register$priority (2, 0, "010"b);
      631 	return;
      632 
      633 
      634 /*************************************/
      635 /* INTERNAL PROCEDURES */
      636 
      637 adj_emit:
      638      proc (n, opcode);
      639 dcl	n		fixed bin;
      640 dcl	opcode		bit (11);
      641 start:
      642 	temp = fixed (instr.offset) + n;
      643 	instr.offset = substr (unspec (temp), 22, 15);
      644 	instr.op = opcode;
      645 	call cobol_emit (addr (instr), null (), 1);
      646 	return;
      647      end adj_emit;
      648 
      649 addr_emit:
      650      proc (struc_ptr, opcode);
      651 dcl	struc_ptr		ptr;
      652 dcl	opcode		bit (11);
      653 start:
      654 	instr.op = opcode;
      655 	call cobol_addr (struc_ptr, addr (instr), addr (reloc (1)));
      656 	call cobol_emit (addr (instr), addr (reloc (1)), 1);
      657 	return;
      658      end addr_emit;
      659 
      660 mpy:
      661      proc;
      662 dcl	n		fixed bin (35);
      663 start:
      664 	n = index_name.struc_length;
      665 	if n ^= 1
      666 	then do;
      667 		done = "0"b;
      668 		do j = 19 to 36 while (^done);
      669 		     if substr (unspec (n), j, 1) = "1"b
      670 		     then do;
      671 			     if substr (unspec (n), j + 1) = ""b
      672 			     then do;
      673 				     temp = 36 - j;
      674 				     substr (qls_instr, 1, 18) = substr (unspec (temp), 19, 18);
      675 				     iptr = addr (qls_instr);
      676 				end;
      677 			     else do;
      678 				     substr (mpy_instr, 1, 18) = substr (unspec (n), 19, 18);
      679 				     iptr = addr (mpy_instr);
      680 				end;
      681 			     done = "1"b;
      682 			end;
      683 		end;
      684 		if ^done
      685 		then iptr = addr (ANQ1_instr);
      686 		call cobol_emit (iptr, null (), 1);
      687 	     end;
      688 	return;
      689      end mpy;
      690 
      691 reg_lock:
      692      proc (regno);
      693 dcl	regno		fixed bin;
      694 start:
      695 	reg.num = regno;
      696 	call cobol_register$load (addr (reg));
      697 	return;
      698      end reg_lock;
      699 
      700 reg_unlock:
      701      proc (regno);
      702 dcl	regno		fixed bin;
      703 start:
      704 	if regno >= 10
      705 	then temp = regno - 2;
      706 	else temp = regno;
      707 	reg.assigned_reg = substr (unspec (temp), 33, 4);
      708 	reg.num = regno;
      709 	call cobol_register$release (addr (reg));
      710 	return;
      711      end reg_unlock;
      712 
      713 oc_start:
      714      proc;
      715 start:
      716 	ok_tag = cobol_$next_tag;
      717 	retry_tag = cobol_$next_tag + 1;
      718 	cobol_$next_tag = cobol_$next_tag + 2;
      719 	call cobol_define_tag (retry_tag);
      720 	return;
      721      end oc_start;
      722 
      723 oc_finish:
      724      proc;
      725 start:						/*[4.2-1]*/
      726 	pool.num1 = 1;
      727 	if pool.num1 = 0
      728 	then pool.num1 = 1;
      729 	pool.num2 = index_name.max;
      730 	call cobol_pool (addr (pool) -> char8, 2, litoff);
      731 	temp = -(cobol_$text_wd_off + litoff);
      732 	substr (ldaq_ic_instr, 1, 18) = substr (unspec (temp), 19, 18);
      733 	call cobol_emit (addr (ldaq_ic_instr), null (), 1);
      734 	rs1.offset = index_name.offset + 4;
      735 	call reg_lock (AQ);
      736 	call addr_emit (r1p, CWL);
      737 	call reg_unlock (AQ);
      738 	call cobol_emit (addr (tze_instr), null (), 1);
      739 	call cobol_make_tagref (ok_tag, cobol_$text_wd_off - 1, null ());
      740 	call cobol_gen_error (rterror_SET_RANGE, retry_tag);
      741 	call cobol_define_tag (ok_tag);
      742 	return;
      743      end oc_finish;
      744 
      745 oc_finish_idn:
      746      proc;
      747 start:
      748 	ok_tag = cobol_$next_tag;
      749 	cobol_$next_tag = cobol_$next_tag + 1;
      750 	if index_name.struc_length ^= 1
      751 	then do;					/* otherwise AQ will be already loaded */
      752 		pool.num1 = pool.num1 * index_name.struc_length;
      753 		pool.num2 = pool.num2 * index_name.struc_length;
      754 		call cobol_pool (addr (pool) -> char8, 2, litoff);
      755 		temp = -(cobol_$text_wd_off + litoff);
      756 		substr (ldaq_ic_instr, 1, 18) = substr (unspec (temp), 19, 18);
      757 		call cobol_emit (addr (ldaq_ic_instr), null (), 1);
      758 	     end;
      759 	call reg_lock (AQ);
      760 	rs1.offset = rs1.offset - 4;
      761 	call addr_emit (r1p, CWL);
      762 	call reg_unlock (AQ);
      763 	call cobol_emit (addr (tze_instr), null (), 1);
      764 	call cobol_make_tagref (ok_tag, cobol_$text_wd_off - 1, null ());
      765 	call cobol_gen_error (rterror_SET_RANGE, retry_tag);
      766 	call cobol_define_tag (ok_tag);
      767 	return;
      768      end oc_finish_idn;
      769 
      770 oc_unconditional:
      771      proc;
      772 	retry_tag = cobol_$next_tag;
      773 	cobol_$next_tag = cobol_$next_tag + 1;
      774 	call cobol_define_tag (retry_tag);		/* no escape */
      775 	call cobol_gen_error (rterror_SET_RANGE, retry_tag);
      776 	return;
      777      end oc_unconditional;
      778 
      779 
      780 /*************************************/
      781 /* INCLUDE FILES */
  1     1 
  1     2 /*  BEGIN INCLUDE FILE ...   cobol_in_token.incl.pl1		  */
  1     3 
  1     4 /*  Last modified August 22, 1974 by AEG		  */
  1     5 
  1     6 
  1     7 declare in_token_ptr ptr;
  1     8 
  1     9 declare 1 in_token aligned based(in_token_ptr),
  1    10 	2 n fixed bin aligned,
  1    11 	2 code fixed bin aligned,
  1    12 	2 token_ptr(0 refer(in_token.n)) ptr aligned;
  1    13 
  1    14 
  1    15 /*  END INCLUDE FILE ...   cobol_in_token.incl.pl1		  */
  1    16 
      782 
  2     1 
  2     2 /* BEGIN INCLUDE FILE ... cobol_type2.incl.pl1 */
  2     3 /* Last modified on 11/19/76 by ORN */
  2     4 
  2     5 /*
  2     6*A type 2 numeric literal token is entered into the minpral file by the
  2     7*lexical analysis phase for each numeric literal encountered in the source
  2     8*program.
  2     9**/
  2    10 
  2    11 dcl nlit_ptr ptr;
  2    12 
  2    13 /* BEGIN DECLARATION OF TYPE2 (NUMERIC LITERAL) TOKEN */
  2    14 dcl 1 numeric_lit based (nlit_ptr),
  3     1 
  3     2 /* begin include file ... cobol_TYPE2.incl.pl1 */
  3     3 /* Last modified on 12/28/76 by FCH */
  3     4 
  3     5 		/* header */
  3     6 		2 size fixed bin,
  3     7 		2 line fixed bin,
  3     8 		2 column fixed bin,
  3     9 		2 type fixed bin,
  3    10 		/* body */
  3    11 		2 integral bit(1),
  3    12 		2 floating bit(1),
  3    13 		2 seg_range bit(1),
  3    14 		2 filler1 bit(4),
  3    15 		2 subscript bit(1),
  3    16 		2 sign char(1),
  3    17 		2 exp_sign char(1),
  3    18 		2 exp_places fixed bin,
  3    19 		2 places_left fixed bin,
  3    20 		2 places_right fixed bin,
  3    21 		2 places fixed bin,
  3    22 		2 literal char(0 refer(numeric_lit.places));	
  3    23 
  3    24 
  3    25 
  3    26 /* end include file ... cobol_TYPE2.incl.pl1 */
  3    27 
  2    15 
  2    16 /* END DECLARATION OF TYPE2 (NUMERIC LITERAL) TOKEN */
  2    17 
  2    18 /* END INCLUDE FILE ... cobol_type2.incl.pl1 */
  2    19 
      783 
  4     1 
  4     2 /* BEGIN INCLUDE FILE ... cobol_type9.incl.pl1 */
  4     3 /* Last modified on 11/19/76 by ORN */
  4     4 
  4     5 /*
  4     6*A type 9 data name token is entered into the name table by the data
  4     7*division syntax phase for each data name described in the data division.
  4     8*The replacement phase subsequently replaces type 8 user word references
  4     9*to data names in the procedure division minpral file with the corresponding
  4    10*type 9 tokens from the name table.
  4    11**/
  4    12 
  4    13 /* dcl dn_ptr ptr; */
  4    14 
  4    15 /* BEGIN DECLARATION OF TYPE9 (DATA NAME) TOKEN */
  4    16 dcl 1 data_name based (dn_ptr),
  5     1 
  5     2 /* begin include file ... cobol_TYPE9.incl.pl1 */
  5     3 /* Last modified on 06/19/77 by ORN */
  5     4 /* Last modified on 12/28/76 by FCH */
  5     5 
  5     6 		/* header */
  5     7 		2 size fixed bin,
  5     8 		2 line fixed bin,
  5     9 		2 column fixed bin,
  5    10 		2 type fixed bin,
  5    11 		/* body */
  5    12 		2 string_ptr ptr,
  5    13 		2 prev_rec ptr,
  5    14 		2 searched bit (1),
  5    15 		2 duplicate bit (1),
  5    16 		2 saved bit (1),
  5    17 		2 debug_ind bit (1),
  5    18 		2 filler2 bit (3),
  5    19 		2 used_as_sub bit (1),
  5    20 		2 def_line fixed bin,
  5    21 		2 level fixed bin,
  5    22 		2 linkage fixed bin,
  5    23 		2 file_num fixed bin,
  5    24 		2 size_rtn fixed bin,
  5    25 		2 item_length fixed bin(24),
  5    26 		2 places_left fixed bin,
  5    27 		2 places_right fixed bin,
  5    28 		/* description */
  5    29 		2 file_section bit (1),
  5    30 		2 working_storage bit (1),
  5    31 		2 constant_section bit (1),
  5    32 		2 linkage_section bit (1),
  5    33 		2 communication_section bit (1),
  5    34 		2 report_section bit (1),
  5    35 		2 level_77 bit (1),
  5    36 		2 level_01 bit (1),
  5    37 		2 non_elementary bit (1),
  5    38 		2 elementary bit (1),
  5    39 		2 filler_item bit (1),
  5    40 		2 s_of_rdf bit (1),
  5    41 		2 o_of_rdf bit (1),
  5    42 		2 bin_18 bit (1),
  5    43 		2 bin_36 bit (1),
  5    44 		2 pic_has_l bit (1),
  5    45 		2 pic_is_do bit (1),
  5    46 		2 numeric bit (1),
  5    47 		2 numeric_edited bit (1),
  5    48 		2 alphanum bit (1),
  5    49 		2 alphanum_edited bit (1),
  5    50 		2 alphabetic bit (1),
  5    51 		2 alphabetic_edited bit (1),
  5    52 		2 pic_has_p bit (1),
  5    53 		2 pic_has_ast bit (1),
  5    54 		2 item_signed bit(1),
  5    55 		2 sign_separate bit (1),
  5    56 		2 display bit (1),
  5    57 		2 comp bit (1),
  5    58 		2 ascii_packed_dec_h bit (1),	/* as of 8/16/76  this field used for comp8. */
  5    59 		2 ascii_packed_dec bit (1),
  5    60 		2 ebcdic_packed_dec bit (1),
  5    61 		2 bin_16 bit (1),
  5    62 		2 bin_32 bit (1),
  5    63 		2 usage_index bit (1),
  5    64 		2 just_right bit (1),
  5    65 		2 compare_argument bit (1),
  5    66 		2 sync bit (1),
  5    67 		2 temporary bit (1),
  5    68 		2 bwz bit (1),
  5    69 		2 variable_length bit (1),
  5    70 		2 subscripted bit (1),
  5    71 		2 occurs_do bit (1),
  5    72 		2 key_a bit (1),
  5    73 		2 key_d bit (1),
  5    74 		2 indexed_by bit (1),
  5    75 		2 value_numeric bit (1),
  5    76 		2 value_non_numeric bit (1),
  5    77 		2 value_signed bit (1),
  5    78 		2 sign_type bit (3),
  5    79 		2 pic_integer bit (1),
  5    80 		2 ast_when_zero bit (1),
  5    81 		2 label_record bit (1),
  5    82 		2 sign_clause_occurred bit (1),
  5    83 		2 okey_dn bit (1),
  5    84 		2 subject_of_keyis bit (1),
  5    85 		2 exp_redefining bit (1),
  5    86 		2 sync_in_rec bit (1),
  5    87 		2 rounded bit (1),
  5    88 		2 ad_bit bit (1),
  5    89 		2 debug_all bit (1),
  5    90 		2 overlap bit (1),
  5    91 		2 sum_counter bit (1),
  5    92 		2 exp_occurs bit (1),
  5    93 		2 linage_counter bit (1),
  5    94 		2 rnm_01 bit (1),
  5    95 		2 aligned bit (1),
  5    96 		2 not_user_writable bit (1),
  5    97 		2 database_key bit (1),
  5    98 		2 database_data_item bit (1),
  5    99 		2 seg_num fixed bin,
  5   100 		2 offset fixed bin(24),
  5   101 		2 initial_ptr fixed bin,
  5   102 		2 edit_ptr fixed bin,
  5   103 		2 occurs_ptr fixed bin,
  5   104 		2 do_rec char(5),
  5   105 		2 bitt bit (1),
  5   106 		2 byte bit (1),
  5   107 		2 half_word bit (1),
  5   108 		2 word bit (1),
  5   109 		2 double_word bit (1),
  5   110 		2 half_byte bit (1),
  5   111 		2 filler5 bit (1),
  5   112 		2 bit_offset bit (4),
  5   113 		2 son_cnt bit (16),
  5   114 		2 max_red_size fixed bin(24),
  5   115 		2 name_size fixed bin,
  5   116 		2 name char(0 refer(data_name.name_size));	
  5   117 
  5   118 
  5   119 
  5   120 /* end include file ... cobol_TYPE9.incl.pl1 */
  5   121 
  4    17 
  4    18 /* END DECLARATION OF TYPE9 (DATA NAME) TOKEN */
  4    19 
  4    20 /* END INCLUDE FILE ... cobol_type9.incl.pl1 */
  4    21 
      784 
  6     1 
  6     2 /* BEGIN INCLUDE FILE ... cobol_type10.incl.pl1 */
  6     3 /* Last modified on 11/19/76 by ORN */
  6     4 /*
  6     5*A type 10 index name token is entered into the name table by the data
  6     6*division syntax phase for each index name appearing in the data division.
  6     7*An index name is declared in the indexed by phrase of an occurs clause.
  6     8*maintain the binary byte offset, within the array, corresponding to the
  6     9*current setting of the index name.  The right-most two bytes contain the
  6    10*binary occurrence number to which the index name is set.
  6    11*When the replacement phase processes the procedure division minpral file,
  6    12*each reference to an index name is replaced with the type 10 token created
  6    13*for that index name.
  6    14**/
  6    15 
  6    16 dcl ind_ptr ptr;
  6    17 
  6    18 /* BEGIN DECLARATION OF TYPE10 (INDEX NAME) TOKEN */
  6    19 dcl	1 index_name based (ind_ptr),
  7     1 
  7     2 /* begin include file ... cobol_TYPE10.incl.pl1
  7     3*/* Last modified on 01/25/77 by ORN */
  7     4 
  7     5 	/* header */
  7     6 	2 size fixed bin,
  7     7 	2 line fixed bin,
  7     8 	2 column fixed bin,
  7     9 	2 type fixed bin,
  7    10 	/* body */
  7    11 	2 string_ptr ptr,
  7    12 	2 prev_rec ptr,
  7    13 	2 searched bit(1),
  7    14 	2 duplicate bit(1),
  7    15 	2 saved bit(1),
  7    16 	2 debug_ind bit(1),
  7    17 	2 filler1 bit(3),
  7    18 	2 subscript bit(1),
  7    19 	2 def_line fixed bin,
  7    20 	2 level fixed bin,
  7    21 	2 seg_num fixed bin,
  7    22 	2 offset fixed bin(24),
  7    23 	2 index_no fixed bin,
  7    24 	2 min fixed bin,
  7    25 	2 max fixed bin,
  7    26 	2 struc_length fixed bin,
  7    27 	2 cswd_seg fixed bin,
  7    28 	2 cswd_offset fixed bin(24),
  7    29 	2 name_size fixed bin,
  7    30 	2 name char(0 refer(index_name.name_size));
  7    31 
  7    32 
  7    33 
  7    34 /* end include file ... cobol_TYPE10.incl.pl1 */
  7    35 
  6    20 
  6    21 /* END DECLARATION OF TYPE10 (INDEX NAME) TOKEN */
  6    22 
  6    23 /* END INCLUDE FILE ... cobol_type10.incl.pl1 */
  6    24 
      785 
  8     1 
  8     2 /* BEGIN INCLUDE FILE ... cobol_type17.incl.pl1 */
  8     3 /* Last modified on 11/19/76 by ORN */
  8     4 
  8     5 /*
  8     6*A mnemonic name token is created for each user-defined mnemonic name
  8     7*specified in the special-names paragraph.
  8     8**/
  8     9 
  8    10 /* dcl name_ptr ptr;  */
  8    11 
  8    12 /* BEGIN DECLARATION OF TYPE17 (MNEMONIC NAME) TOKEN */
  8    13 dcl	1 mnemonic_name based (name_ptr),
  9     1 
  9     2 /* begin include file ... cobol_TYPE17.incl.pl1 */
  9     3 /* Last modified on 11/17/76 by ORN */
  9     4 
  9     5 		/* header */
  9     6 		2 size fixed bin,
  9     7 		2 line fixed bin,
  9     8 		2 column fixed bin,
  9     9 		2 type fixed bin,
  9    10 		/* body */
  9    11 		2 string_ptr ptr,
  9    12 		2 prev_rec ptr,
  9    13 		2 info bit(8),
  9    14 		2 class,
  9    15 		     3 switch_condition bit(1),
  9    16 		     3 switch_name bit(1),
  9    17 		     3 accept_device bit(1),
  9    18 		     3 display_device bit(1),
  9    19 		     3 printer_control bit(1),
  9    20 		     3 alphabet_name bit(1),
  9    21 		2 on_status bit(1),
  9    22 		2 off_status bit(1),
  9    23 		2 def_line fixed bin,
  9    24 		2 iw_key fixed bin,
  9    25 		2 reserved bit(36),
  9    26 		2 alphabet_offset fixed bin,
  9    27 		2 name_size fixed bin,
  9    28 		2 name char(0 refer (mnemonic_name.name_size));
  9    29 
  9    30 
  9    31 /* end include file ... cobol_TYPE17.incl.pl1 */
  9    32 
  8    14 
  8    15 /* END DECLARATION OF TYPE17 (MNEMONIC NAME) TOKEN */
  8    16 
  8    17 /* END INCLUDE FILE ... cobol_type17.incl.pl1 */
  8    18 
      786 
 10     1 
 10     2 /* BEGIN INCLUDE FILE ... cobol_type19.incl.pl1 */
 10     3 /* last modified on 11/19/76 by ORN */
 10     4 
 10     5 /*
 10     6*A type 19 end of statement token is created in the procedure division
 10     7*minpral file at the end of each minpral statement generated by the
 10     8*procedure division syntax phase.  A minpral statement may be a complete or
 10     9*partial source language statement.  A type 19 token contains information
 10    10*describing the statement which it delimits.
 10    11**/
 10    12 
 10    13 dcl eos_ptr ptr;
 10    14 
 10    15 /* BEGIN DECLARATION OF TYPE19 (END STATEMENT) TOKEN */
 10    16 dcl	1 end_stmt based (eos_ptr),
 11     1 
 11     2 /* begin include file ... cobol_TYPE19.incl.pl1 */
 11     3 /* Last modified on 11/17/76 by ORN */
 11     4 
 11     5 		/* header */
 11     6 		2 size fixed bin,
 11     7 		2 line fixed bin,
 11     8 		2 column fixed bin,
 11     9 		2 type fixed bin,
 11    10 		/* body */
 11    11 		2 verb fixed bin,
 11    12 		2 e fixed bin,
 11    13 		2 h fixed bin,
 11    14 		2 i fixed bin,
 11    15 		2 j fixed bin,
 11    16 		2 a bit (3),
 11    17 		2 b bit (1),
 11    18 		2 c bit (1),
 11    19 		2 d bit (2),
 11    20 		2 f bit (2),
 11    21 		2 g bit (2),
 11    22 		2 k bit (5),
 11    23 		2 always_an bit (1);
 11    24 
 11    25 /* end include file ... cobol_TYPE19.incl.pl1 */
 11    26 
 10    17 
 10    18 /* END DECLARATION OF TYPE19 (END STATEMENT) TOKEN */
 10    19 
 10    20 /*
 10    21*FIELD		CONTENTS
 10    22*
 10    23*size		The total size in bytes of this end of statement token.
 10    24*line		0
 10    25*column		0
 10    26*type		19
 10    27*verb		A value indicating the verb in this statement
 10    28*		 1 = accept
 10    29*		 2 = add
 10    30*		 3 = on size error
 10    31*		 4 = alter
 10    32*		 5 = call
 10    33*		 7 = cancel
 10    34*		 8 = close
 10    35*		 9 = divide
 10    36*		10 = multiply
 10    37*		11 = subtract
 10    38*		12 = exit
 10    39*		14 = go
 10    40*		15 = merge
 10    41*		16 = initiate
 10    42*		17 = inspect
 10    43*		18 = move
 10    44*		19 = open
 10    45*		20 = perform
 10    46*		21 = read
 10    47*		23 = receive
 10    48*		24 = release
 10    49*		25 = return
 10    50*		26 = search
 10    51*		27 = rewrite
 10    52*		29 = seek
 10    53*		30 = send
 10    54*		31 = set
 10    55*		33 = stop
 10    56*		34 = string
 10    57*		35 = suspend
 10    58*		36 = terminate
 10    59*		37 = unstring
 10    60*		38 = write
 10    61*		39 = use
 10    62*		40 = compute
 10    63*		41 = disable
 10    64*		42 = display
 10    65*		43 = enable
 10    66*		45 = generate
 10    67*		46 = hold
 10    68*		48 = process
 10    69*		49 = sort
 10    70*		52 = procedure
 10    71*		53 = declaratives
 10    72*		54 = section name
 10    73*		55 = paragraph name
 10    74*		98 = end
 10    75*e,h,i,j		The significance of these fields differs with each
 10    76*		statement.  These fields are normally used as counters.
 10    77*a,b,c,d,f,g,k	The significance of these fields differs with each
 10    78*		statement.  These fields are normally used as indicators.
 10    79**/
 10    80 
 10    81 /* END INCLUDE FILE ... cobol_type19.incl.pl1 */
 10    82 
      787 
 12     1 
 12     2 /* BEGIN INCLUDE FILE ...   cobol_fixed_common.incl.pl1 */
 12     3 /* Modified on 10/27/82 by FCH, [5.1-1], cobol_cln added to save last line num, BUG543(phx13643) */
 12     4 /* Modified on 07/31/80 by FCH, [4.3-1], use_reporting field added for Report Writer */
 12     5 /* Modified on 03/30/79 by FCH, [4.1-1], -card option added */
 12     6 /* Modified on 03/30/79 by FCH, [4.0-2], -svNM option added */
 12     7 /* Modified on 03/02/79 by FCH, [4.0-1], -levNM option added */
 12     8 /* Modified by RAL on 10/13/78, [4.0-0], Added option exp from fil2. */
 12     9 /* Modified by BC on 06/20/77, descriptor added.	*/
 12    10 /* Modified by BC on 06/02/77, init_cd_seg, init_cd_offset added.	*/
 12    11 /* Modified by BC  on 1/21/77, options.profile added.	*/
 12    12 /* Modified by FCH on 7/6/76, sysin_fno & sysout_fno deleted, accept_device & display_device added */
 12    13 /* Modified by FCH on 5/20/77, comp_level added */
 12    14 
 12    15 
 12    16 /*     THE SIZE OF THIS STRUCTURE IN BYTES, (EXCLUDING VARIABLE
 12    17*   LENGTH ENTITIES), FOR EACH HARDWARE IMPLEMENTATION IS:
 12    18*
 12    19*   HARDWARE	|	SIZE (BYTES)
 12    20*   ---------------------------------
 12    21*   645/6180	|	464
 12    22*   P7		|	396
 12    23*   ---------------------------------
 12    24*   */
 12    25 
 12    26 dcl 	1 fixed_common based (  cobol_com_ptr),
 12    27     		2 prog_name char (30),
 12    28    		2 compiler_rev_no char (25),
 12    29     		2 phase_name char (6),
 12    30     		2 currency char (1),
 12    31     		2 fatal_no fixed bin,
 12    32     		2 warn_no fixed bin,
 12    33     		2 proc_counter fixed bin,
 12    34     		2 spec_tag_counter fixed bin,
 12    35     		2 file_count fixed bin,
 12    36     		2 filedescr_offsets (20) char (5),
 12    37     		2 perf_alter_info char (5),
 12    38     		2 another_perform_info char (5),
 12    39     		2 sort_in_info char (5),
 12    40     		2 odo_info char (5),
 12    41     		2 size_seg fixed bin,
 12    42     		2 size_offset fixed bin(24),
 12    43     		2 size_perform_info char (5),
 12    44     		2 rename_info char (5),
 12    45     		2 report_names char (5),
 12    46     		2 rw_buf_seg fixed bin,
 12    47     		2 rw_buf_offset fixed bin(24),
 12    48     		2 rw_buf_length fixed bin(24),
 12    49     		2 file_keys char (5),
 12    50     		2 search_keys char (5),
 12    51     		2 dd_seg_size fixed bin(24),
 12    52     		2 pd_seg_size fixed bin(24),
 12    53     		2 seg_limit fixed bin ,
 12    54     		2 number_of_dd_segs fixed bin,
 12    55     		2 seg_info char (5),
 12    56     		2 number_of_ls_pointers fixed bin,
 12    57     		2 link_sec_seg fixed bin,
 12    58     		2 link_sec_offset fixed bin(24),
 12    59     		2 sra_clauses fixed bin,
 12    60     		2 fix_up_info char (5),
 12    61     		2 linage_info char (5),
 12    62     		2 first_dd_item char (5),
 12    63     		2 sort_out_info char (5),
 12    64     		2 db_info char (5),
 12    65     		2 realm_info char (5),
 12    66     		2 rc_realm_info char (5),
 12    67     		2 last_file_key char (5),
 12    68     		2 prog_coll_seq fixed bin,
 12    69 		2 init_cd_seg fixed bin,
 12    70 		2 init_cd_offset fixed bin(24),
 12    71     		2 input_error_exit fixed bin,
 12    72    		2 output_error_exit fixed bin,
 12    73     		2 i_o_error_exit fixed bin,
 12    74     		2 extend_error_exit fixed bin,
 12    75     		2 dummy15 fixed bin,
 12    76     		2 options,
 12    77       			3 cu bit (1),
 12    78       			3 st bit (1),
 12    79       			3 wn bit (1),
 12    80       			3 obs bit (1),
 12    81       			3 dm bit (1),
 12    82       			3 xrl bit (1),
 12    83       			3 xrn bit (1),
 12    84       			3 src bit (1),
 12    85       			3 obj bit (1),
 12    86       			3 exs bit (1),
 12    87       			3 sck bit (1),
 12    88       			3 rno bit (1),
 12    89 			3 u_l bit (1),
 12    90 			3 cnv bit (1),
 12    91 			3 cos bit (1),
 12    92 			3 fmt bit (1),
 12    93 			3 profile bit(1),
 12    94 			3 nw bit (1),
 12    95 			3 exp bit (1),		/* [4.0-0] */
 12    96 			3 card bit (1),  /*[4.1-1]*/
 12    97 			3 fil2 bit (5),
 12    98 			3 m_map bit (1),
 12    99 			3 m_bf bit (1),
 12   100 			3 m_fat bit (1),
 12   101 			3 m_wn bit (1),
 12   102 			3 m_obs bit(1),
 12   103 			3 pd bit(1),
 12   104       			3 oc bit(1),
 12   105     		2 supervisor bit (1),
 12   106     		2 dec_comma bit (1),
 12   107     		2 init_cd bit (1),
 12   108     		2 corr bit (1),
 12   109     		2 initl bit (1),
 12   110     		2 debug bit (1),
 12   111     		2 report bit (1),
 12   112     		2 sync_in_prog bit (1),
 12   113     		2 pd_section bit (1),
 12   114     		2 list_switch bit (1),
 12   115     		2 alpha_cond bit (1),
 12   116     		2 num_cond bit (1),
 12   117     		2 spec_sysin bit (1),
 12   118     		2 spec_sysout bit (1),
 12   119     		2 cpl_files bit (1),
 12   120     		2 obj_dec_comma bit (1),
 12   121 		2 default_sign_type bit (3),
 12   122 		2 use_debug bit(1),
 12   123 		2 syntax_trace bit(1),
 12   124 		2 comp_defaults,
 12   125 			3 comp	bit(1),
 12   126 			3 comp_1	bit(1),
 12   127 			3 comp_2	bit(1),
 12   128 			3 comp_3	bit(1),
 12   129 			3 comp_4	bit(1),
 12   130 			3 comp_5	bit(1),
 12   131 			3 comp_6	bit(1),
 12   132 			3 comp_7	bit(1),
 12   133 			3 comp_8 bit(1),
 12   134 		2 disp_defaults,
 12   135 			3 disp	bit(1),
 12   136 			3 disp_1	bit(1),
 12   137 			3 disp_2	bit(1),
 12   138 			3 disp_3	bit(1),
 12   139 			3 disp_4	bit(1),
 12   140 			3 disp_5  bit(1),
 12   141 			3 disp_6  bit(1),
 12   142 			3 disp_7  bit(1),
 12   143 		2 descriptor bit(2),
 12   144 		2 levsv  bit(3),		/*[4.0-1]*/
 12   145 		2 use_reporting bit(1),	/*[4.3-1]*/
 12   146 		2 cd bit(1),		/*[4.4-1]*/
 12   147 		2 dummy17 bit(3),
 12   148    		2 lvl_rstr bit(32),
 12   149    		2 inst_rstr bit(32),
 12   150 		2 comp_level char(1),
 12   151 		2 dummy18 char(30),
 12   152 		2 object_sign char (1),
 12   153     		2 last_print_rec char (5),
 12   154     		2 coll_seq_info char (5),
 12   155     		2 sys_status_seg fixed bin,
 12   156    		2 sys_status_offset fixed bin(24),
 12   157    		2 compiler_id fixed bin,
 12   158    		2 date_comp_ln fixed bin,
 12   159    		2 compile_mode bit(36),
 12   160    		2 default_temp fixed bin,
 12   161    		2 accept_device fixed bin,
 12   162    		2 display_device fixed bin,
 12   163    		2 cobol_cln fixed bin,	/*[5.1-1]*/
 12   164 		2 alphabet_offset fixed bin;
 12   165 
 12   166 
 12   167 
 12   168 /* END INCLUDE FILE ...   cobol_fixed_common.incl.pl1 */
 12   169 
      788 
 13     1 
 13     2 /* BEGIN INCLUDE FILE ... cobol_.incl.pl1 */
 13     3 /* last modified Feb 4, 1977 by ORN  */
 13     4 
 13     5 /* This file defines all external data used in the generator phase of Multics Cobol */
 13     6 
 13     7 /* POINTERS */
 13     8 dcl cobol_$text_base_ptr ptr  ext;
 13     9 dcl text_base_ptr ptr  defined (cobol_$text_base_ptr);
 13    10 dcl cobol_$con_end_ptr ptr  ext;
 13    11 dcl con_end_ptr ptr  defined (cobol_$con_end_ptr);
 13    12 dcl cobol_$def_base_ptr ptr  ext;
 13    13 dcl def_base_ptr ptr  defined (cobol_$def_base_ptr);
 13    14 dcl cobol_$link_base_ptr ptr  ext;
 13    15 dcl link_base_ptr ptr  defined (cobol_$link_base_ptr);
 13    16 dcl cobol_$sym_base_ptr ptr  ext;
 13    17 dcl sym_base_ptr ptr  defined (cobol_$sym_base_ptr);
 13    18 dcl cobol_$reloc_text_base_ptr ptr  ext;
 13    19 dcl reloc_text_base_ptr ptr  defined (cobol_$reloc_text_base_ptr);
 13    20 dcl cobol_$reloc_def_base_ptr ptr  ext;
 13    21 dcl reloc_def_base_ptr ptr  defined (cobol_$reloc_def_base_ptr);
 13    22 dcl cobol_$reloc_link_base_ptr ptr  ext;
 13    23 dcl reloc_link_base_ptr ptr  defined (cobol_$reloc_link_base_ptr);
 13    24 dcl cobol_$reloc_sym_base_ptr ptr  ext;
 13    25 dcl reloc_sym_base_ptr ptr  defined (cobol_$reloc_sym_base_ptr);
 13    26 dcl cobol_$reloc_work_base_ptr ptr  ext;
 13    27 dcl reloc_work_base_ptr ptr  defined (cobol_$reloc_work_base_ptr);
 13    28 dcl cobol_$pd_map_ptr ptr  ext;
 13    29 dcl pd_map_ptr ptr  defined (cobol_$pd_map_ptr);
 13    30 dcl cobol_$fixup_ptr ptr  ext;
 13    31 dcl fixup_ptr ptr  defined (cobol_$fixup_ptr);
 13    32 dcl cobol_$initval_base_ptr ptr  ext;
 13    33 dcl initval_base_ptr ptr  defined (cobol_$initval_base_ptr);
 13    34 dcl cobol_$initval_file_ptr ptr  ext;
 13    35 dcl initval_file_ptr ptr  defined (cobol_$initval_file_ptr);
 13    36 dcl cobol_$perform_list_ptr ptr  ext;
 13    37 dcl perform_list_ptr ptr  defined (cobol_$perform_list_ptr);
 13    38 dcl cobol_$alter_list_ptr ptr  ext;
 13    39 dcl alter_list_ptr ptr  defined (cobol_$alter_list_ptr);
 13    40 dcl cobol_$seg_init_list_ptr ptr  ext;
 13    41 dcl seg_init_list_ptr ptr  defined (cobol_$seg_init_list_ptr);
 13    42 dcl cobol_$temp_token_area_ptr ptr  ext;
 13    43 dcl temp_token_area_ptr ptr  defined (cobol_$temp_token_area_ptr);
 13    44 dcl cobol_$temp_token_ptr ptr  ext;
 13    45 dcl temp_token_ptr ptr  defined (cobol_$temp_token_ptr);
 13    46 dcl cobol_$token_block1_ptr ptr  ext;
 13    47 dcl token_block1_ptr ptr  defined (cobol_$token_block1_ptr);
 13    48 dcl cobol_$token_block2_ptr ptr  ext;
 13    49 dcl token_block2_ptr ptr  defined (cobol_$token_block2_ptr);
 13    50 dcl cobol_$minpral5_ptr ptr  ext;
 13    51 dcl minpral5_ptr ptr  defined (cobol_$minpral5_ptr);
 13    52 dcl cobol_$tag_table_ptr ptr  ext;
 13    53 dcl tag_table_ptr ptr  defined (cobol_$tag_table_ptr);
 13    54 dcl cobol_$map_data_ptr ptr  ext;
 13    55 dcl map_data_ptr ptr  defined (cobol_$map_data_ptr);
 13    56 dcl cobol_$ptr_status_ptr ptr  ext;
 13    57 dcl ptr_status_ptr ptr  defined (cobol_$ptr_status_ptr);
 13    58 dcl cobol_$reg_status_ptr ptr  ext;
 13    59 dcl reg_status_ptr ptr  defined (cobol_$reg_status_ptr);
 13    60 dcl cobol_$misc_base_ptr ptr ext;
 13    61 dcl misc_base_ptr ptr defined (cobol_$misc_base_ptr);
 13    62 dcl cobol_$misc_end_ptr ptr ext;
 13    63 dcl misc_end_ptr ptr defined (cobol_$misc_end_ptr);
 13    64 dcl cobol_$list_ptr ptr ext;
 13    65 dcl list_ptr ptr defined (cobol_$list_ptr);
 13    66 dcl cobol_$allo1_ptr ptr ext;
 13    67 dcl allo1_ptr ptr defined (cobol_$allo1_ptr);
 13    68 dcl cobol_$eln_ptr ptr ext;
 13    69 dcl eln_ptr ptr defined (cobol_$eln_ptr);
 13    70 dcl cobol_$diag_ptr ptr ext;
 13    71 dcl diag_ptr ptr defined (cobol_$diag_ptr);
 13    72 dcl cobol_$xref_token_ptr ptr ext;
 13    73 dcl xref_token_ptr ptr defined (cobol_$xref_token_ptr);
 13    74 dcl cobol_$xref_chain_ptr ptr ext;
 13    75 dcl xref_chain_ptr ptr defined (cobol_$xref_chain_ptr);
 13    76 dcl cobol_$statement_info_ptr ptr ext;
 13    77 dcl statement_info_ptr ptr defined (cobol_$statement_info_ptr);
 13    78 dcl cobol_$reswd_ptr ptr ext;
 13    79 dcl reswd_ptr ptr defined (cobol_$reswd_ptr);
 13    80 dcl cobol_$op_con_ptr ptr ext;
 13    81 dcl op_con_ptr ptr defined (cobol_$op_con_ptr);
 13    82 dcl cobol_$ntbuf_ptr ptr ext;
 13    83 dcl ntbuf_ptr ptr defined (cobol_$ntbuf_ptr);
 13    84 dcl cobol_$main_pcs_ptr ptr ext;
 13    85 dcl main_pcs_ptr ptr defined (cobol_$main_pcs_ptr);
 13    86 dcl cobol_$include_info_ptr ptr ext;
 13    87 dcl include_info_ptr ptr defined (cobol_$include_info_ptr);
 13    88 
 13    89 /* FIXED BIN */
 13    90 dcl cobol_$text_wd_off fixed bin  ext;
 13    91 dcl text_wd_off fixed bin  defined (cobol_$text_wd_off);
 13    92 dcl cobol_$con_wd_off fixed bin  ext;
 13    93 dcl con_wd_off fixed bin  defined (cobol_$con_wd_off);
 13    94 dcl cobol_$def_wd_off fixed bin  ext;
 13    95 dcl def_wd_off fixed bin  defined (cobol_$def_wd_off);
 13    96 dcl cobol_$def_max fixed bin  ext;
 13    97 dcl def_max fixed bin  defined (cobol_$def_max);
 13    98 dcl cobol_$link_wd_off fixed bin  ext;
 13    99 dcl link_wd_off fixed bin  defined (cobol_$link_wd_off);
 13   100 dcl cobol_$link_max fixed bin  ext;
 13   101 dcl link_max fixed bin  defined (cobol_$link_max);
 13   102 dcl cobol_$sym_wd_off fixed bin  ext;
 13   103 dcl sym_wd_off fixed bin  defined (cobol_$sym_wd_off);
 13   104 dcl cobol_$sym_max fixed bin  ext;
 13   105 dcl sym_max fixed bin  defined (cobol_$sym_max);
 13   106 dcl cobol_$reloc_text_max fixed bin(24)  ext;
 13   107 dcl reloc_text_max fixed bin(24)  defined (cobol_$reloc_text_max);
 13   108 dcl cobol_$reloc_def_max fixed bin(24)  ext;
 13   109 dcl reloc_def_max fixed bin(24)  defined (cobol_$reloc_def_max);
 13   110 dcl cobol_$reloc_link_max fixed bin(24)  ext;
 13   111 dcl reloc_link_max fixed bin(24)  defined (cobol_$reloc_link_max);
 13   112 dcl cobol_$reloc_sym_max fixed bin(24)  ext;
 13   113 dcl reloc_sym_max fixed bin(24)  defined (cobol_$reloc_sym_max);
 13   114 dcl cobol_$reloc_work_max fixed bin(24)  ext;
 13   115 dcl reloc_work_max fixed bin(24)  defined (cobol_$reloc_work_max);
 13   116 dcl cobol_$pd_map_index fixed bin  ext;
 13   117 dcl pd_map_index fixed bin  defined (cobol_$pd_map_index);
 13   118 dcl cobol_$cobol_data_wd_off fixed bin  ext;
 13   119 dcl cobol_data_wd_off fixed bin  defined (cobol_$cobol_data_wd_off);
 13   120 dcl cobol_$stack_off fixed bin  ext;
 13   121 dcl stack_off fixed bin  defined (cobol_$stack_off);
 13   122 dcl cobol_$max_stack_off fixed bin  ext;
 13   123 dcl max_stack_off fixed bin  defined (cobol_$max_stack_off);
 13   124 dcl cobol_$init_stack_off fixed bin  ext;
 13   125 dcl init_stack_off fixed bin  defined (cobol_$init_stack_off);
 13   126 dcl cobol_$pd_map_sw fixed bin  ext;
 13   127 dcl pd_map_sw fixed bin  defined (cobol_$pd_map_sw);
 13   128 dcl cobol_$next_tag fixed bin  ext;
 13   129 dcl next_tag fixed bin  defined (cobol_$next_tag);
 13   130 dcl cobol_$data_init_flag fixed bin  ext;
 13   131 dcl data_init_flag fixed bin  defined (cobol_$data_init_flag);
 13   132 dcl cobol_$seg_init_flag fixed bin  ext;
 13   133 dcl seg_init_flag fixed bin  defined (cobol_$seg_init_flag);
 13   134 dcl cobol_$alter_flag fixed bin  ext;
 13   135 dcl alter_flag fixed bin  defined (cobol_$alter_flag);
 13   136 dcl cobol_$sect_eop_flag fixed bin  ext;
 13   137 dcl sect_eop_flag fixed bin  defined (cobol_$sect_eop_flag);
 13   138 dcl cobol_$para_eop_flag fixed bin  ext;
 13   139 dcl para_eop_flag fixed bin  defined (cobol_$para_eop_flag);
 13   140 dcl cobol_$priority_no fixed bin  ext;
 13   141 dcl priority_no fixed bin  defined (cobol_$priority_no);
 13   142 dcl cobol_$compile_count fixed bin ext;
 13   143 dcl compile_count fixed bin defined (cobol_$compile_count);
 13   144 dcl cobol_$ptr_assumption_ind fixed bin ext;
 13   145 dcl ptr_assumption_ind fixed bin defined (cobol_$ptr_assumption_ind);
 13   146 dcl cobol_$reg_assumption_ind fixed bin ext;
 13   147 dcl reg_assumption_ind fixed bin defined (cobol_$reg_assumption_ind);
 13   148 dcl cobol_$perform_para_index fixed bin ext;
 13   149 dcl perform_para_index fixed bin defined (cobol_$perform_para_index);
 13   150 dcl cobol_$perform_sect_index fixed bin ext;
 13   151 dcl perform_sect_index fixed bin defined (cobol_$perform_sect_index);
 13   152 dcl cobol_$alter_index fixed bin ext;
 13   153 dcl alter_index fixed bin defined (cobol_$alter_index);
 13   154 dcl cobol_$list_off fixed bin ext;
 13   155 dcl list_off fixed bin defined (cobol_$list_off);
 13   156 dcl cobol_$constant_offset fixed bin ext;
 13   157 dcl constant_offset fixed bin defined (cobol_$constant_offset);
 13   158 dcl cobol_$misc_max fixed bin ext;
 13   159 dcl misc_max fixed bin defined (cobol_$misc_max);
 13   160 dcl cobol_$pd_map_max fixed bin ext;
 13   161 dcl pd_map_max fixed bin defined (cobol_$pd_map_max);
 13   162 dcl cobol_$map_data_max fixed bin ext;
 13   163 dcl map_data_max fixed bin defined (cobol_$map_data_max);
 13   164 dcl cobol_$fixup_max fixed bin ext;
 13   165 dcl fixup_max fixed bin defined (cobol_$fixup_max);
 13   166 dcl cobol_$tag_table_max fixed bin ext;
 13   167 dcl tag_table_max fixed bin defined (cobol_$tag_table_max);
 13   168 dcl cobol_$temp_token_max fixed bin ext;
 13   169 dcl temp_token_max fixed bin defined (cobol_$temp_token_max);
 13   170 dcl cobol_$allo1_max fixed bin ext;
 13   171 dcl allo1_max fixed bin defined (cobol_$allo1_max);
 13   172 dcl cobol_$eln_max fixed bin ext;
 13   173 dcl eln_max fixed bin defined (cobol_$eln_max);
 13   174 dcl cobol_$debug_enable fixed bin ext;
 13   175 dcl debug_enable fixed bin defined (cobol_$debug_enable);
 13   176 dcl cobol_$non_source_offset fixed bin ext;
 13   177 dcl non_source_offset fixed bin defined (cobol_$non_source_offset);
 13   178 dcl cobol_$initval_flag fixed bin ext;
 13   179 dcl initval_flag fixed bin defined (cobol_$initval_flag);
 13   180 dcl cobol_$date_compiled_sw fixed bin ext;
 13   181 dcl date_compiled_sw fixed bin defined (cobol_$date_compiled_sw);
 13   182 dcl cobol_$include_cnt fixed bin ext;
 13   183 dcl include_cnt fixed bin defined (cobol_$include_cnt);
 13   184 dcl cobol_$fs_charcnt fixed bin ext;
 13   185 dcl fs_charcnt fixed bin defined (cobol_$fs_charcnt);
 13   186 dcl cobol_$ws_charcnt fixed bin ext;
 13   187 dcl ws_charcnt fixed bin defined (cobol_$ws_charcnt);
 13   188 dcl cobol_$coms_charcnt fixed bin ext;
 13   189 dcl coms_charcnt fixed bin defined (cobol_$coms_charcnt);
 13   190 dcl cobol_$ls_charcnt fixed bin ext;
 13   191 dcl ls_charcnt fixed bin defined (cobol_$ls_charcnt);
 13   192 dcl cobol_$cons_charcnt fixed bin ext;
 13   193 dcl cons_charcnt fixed bin defined (cobol_$cons_charcnt);
 13   194 dcl cobol_$value_cnt fixed bin ext;
 13   195 dcl value_cnt fixed bin defined (cobol_$value_cnt);
 13   196 dcl cobol_$cd_cnt fixed bin ext;
 13   197 dcl cd_cnt fixed bin defined (cobol_$cd_cnt);
 13   198 dcl cobol_$fs_wdoff fixed bin ext;
 13   199 dcl fs_wdoff fixed bin defined (cobol_$fs_wdoff);
 13   200 dcl cobol_$ws_wdoff fixed bin ext;
 13   201 dcl ws_wdoff fixed bin defined (cobol_$ws_wdoff);
 13   202 dcl cobol_$coms_wdoff fixed bin ext;
 13   203 dcl coms_wdoff fixed bin defined (cobol_$coms_wdoff);
 13   204 
 13   205 /* CHARACTER */
 13   206 dcl cobol_$scratch_dir char (168)   aligned ext;
 13   207 dcl scratch_dir char (168)   aligned defined (cobol_$scratch_dir);			/* -42- */
 13   208 dcl cobol_$obj_seg_name char (32)   aligned ext;
 13   209 dcl obj_seg_name char (32)   aligned defined (cobol_$obj_seg_name);		/* -8- */
 13   210 
 13   211 /* BIT */
 13   212 dcl cobol_$xref_bypass bit(1) aligned ext;
 13   213 dcl xref_bypass bit(1) aligned defined (cobol_$xref_bypass);			/* -1- */
 13   214 dcl cobol_$same_sort_merge_proc bit(1) aligned ext;
 13   215 dcl same_sort_merge_proc bit(1) aligned defined (cobol_$same_sort_merge_proc);		/* -1- */
 13   216 
 13   217 
 13   218 /* END INCLUDE FILE ... cobol_incl.pl1*/
 13   219 
 13   220 
      789 
 14     1 
 14     2 /* BEGIN INCLUDE FILE ... cobol_ext_.incl.pl1 */
 14     3 /* Last modified on 06/17/76 by ORN */
 14     4 /* Last modified on 12/28/76 by FCH */
 14     5 /* Last modified on 12/01/80 by FCH */
 14     6 
 14     7 /*    <<<   SHARED EXTERNALS INCLUDE FILE   >>>    */
 14     8 
 14     9 
 14    10 dcl     cobol_ext_$cobol_afp ptr ext;
 14    11 dcl     cobol_afp ptr defined (  cobol_ext_$cobol_afp);
 14    12 dcl     cobol_ext_$cobol_analin_fileno ptr ext;
 14    13 dcl     cobol_analin_fileno ptr defined (  cobol_ext_$cobol_analin_fileno);
 14    14 dcl     cobol_ext_$report_first_token ptr ext;
 14    15 dcl     report_first_token ptr defined( cobol_ext_$report_first_token);
 14    16 dcl     cobol_ext_$report_last_token ptr ext;
 14    17 dcl     report_last_token ptr defined ( cobol_ext_$report_last_token);
 14    18 dcl     cobol_ext_$cobol_eltp ptr ext;
 14    19 dcl     cobol_eltp ptr defined (  cobol_ext_$cobol_eltp);
 14    20 dcl     cobol_ext_$cobol_cmfp ptr ext;
 14    21 dcl     cobol_cmfp ptr defined (  cobol_ext_$cobol_cmfp);
 14    22 dcl     cobol_ext_$cobol_com_fileno ptr ext;
 14    23 dcl     cobol_com_fileno ptr defined (  cobol_ext_$cobol_com_fileno);
 14    24 dcl     cobol_ext_$cobol_com_ptr ptr ext;
 14    25 dcl     cobol_com_ptr ptr defined (  cobol_ext_$cobol_com_ptr);
 14    26 dcl     cobol_ext_$cobol_dfp ptr ext;
 14    27 dcl     cobol_dfp ptr defined (  cobol_ext_$cobol_dfp);
 14    28 dcl     cobol_ext_$cobol_hfp ptr ext;
 14    29 dcl     cobol_hfp ptr defined (  cobol_ext_$cobol_hfp);
 14    30 dcl     cobol_ext_$cobol_m1fp ptr ext;
 14    31 dcl     cobol_m1fp ptr defined (  cobol_ext_$cobol_m1fp);
 14    32 dcl     cobol_ext_$cobol_m2fp ptr ext;
 14    33 dcl     cobol_m2fp ptr defined (  cobol_ext_$cobol_m2fp);
 14    34 dcl     cobol_ext_$cobol_min1_fileno ptr ext;
 14    35 dcl     cobol_min1_fileno ptr defined (  cobol_ext_$cobol_min1_fileno);
 14    36 dcl     cobol_ext_$cobol_min2_fileno_ptr ptr ext;
 14    37 dcl     cobol_min2_fileno_ptr ptr defined (  cobol_ext_$cobol_min2_fileno_ptr);
 14    38 dcl     cobol_ext_$cobol_name_fileno ptr ext;
 14    39 dcl     cobol_name_fileno ptr defined (  cobol_ext_$cobol_name_fileno);
 14    40 dcl     cobol_ext_$cobol_name_fileno_ptr ptr ext;
 14    41 dcl     cobol_name_fileno_ptr ptr defined (  cobol_ext_$cobol_name_fileno_ptr);
 14    42 dcl     cobol_ext_$cobol_ntfp ptr ext;
 14    43 dcl     cobol_ntfp ptr defined (  cobol_ext_$cobol_ntfp);
 14    44 dcl     cobol_ext_$cobol_pdofp ptr ext;
 14    45 dcl     cobol_pdofp ptr defined (  cobol_ext_$cobol_pdofp);
 14    46 dcl     cobol_ext_$cobol_pfp ptr ext;
 14    47 dcl     cobol_pfp ptr defined (  cobol_ext_$cobol_pfp);
 14    48 dcl     cobol_ext_$cobol_rm2fp ptr ext;
 14    49 dcl     cobol_rm2fp ptr defined (  cobol_ext_$cobol_rm2fp);
 14    50 dcl     cobol_ext_$cobol_rmin2fp ptr ext;
 14    51 dcl     cobol_rmin2fp ptr defined (  cobol_ext_$cobol_rmin2fp);
 14    52 dcl     cobol_ext_$cobol_curr_in ptr ext;
 14    53 dcl     cobol_curr_in ptr defined (  cobol_ext_$cobol_curr_in);
 14    54 dcl     cobol_ext_$cobol_curr_out ptr ext;
 14    55 dcl     cobol_curr_out ptr defined (  cobol_ext_$cobol_curr_out);
 14    56 dcl     cobol_ext_$cobol_sfp ptr ext;
 14    57 dcl     cobol_sfp ptr defined (  cobol_ext_$cobol_sfp);
 14    58 dcl     cobol_ext_$cobol_w1p ptr ext;
 14    59 dcl     cobol_w1p ptr defined (  cobol_ext_$cobol_w1p);
 14    60 dcl     cobol_ext_$cobol_w2p ptr ext;
 14    61 dcl     cobol_w2p ptr defined (  cobol_ext_$cobol_w2p);
 14    62 dcl     cobol_ext_$cobol_w3p ptr ext;
 14    63 dcl     cobol_w3p ptr defined (  cobol_ext_$cobol_w3p);
 14    64 dcl     cobol_ext_$cobol_w5p ptr ext;
 14    65 dcl     cobol_w5p ptr defined (  cobol_ext_$cobol_w5p);
 14    66 dcl     cobol_ext_$cobol_w6p ptr ext;
 14    67 dcl     cobol_w6p ptr defined (  cobol_ext_$cobol_w6p);
 14    68 dcl     cobol_ext_$cobol_w7p ptr ext;
 14    69 dcl     cobol_w7p ptr defined (  cobol_ext_$cobol_w7p);
 14    70 dcl     cobol_ext_$cobol_x3fp ptr ext;
 14    71 dcl     cobol_x3fp ptr defined (  cobol_ext_$cobol_x3fp);
 14    72 dcl	cobol_ext_$cobol_rwdd ptr ext;
 14    73 dcl	cobol_rwdd ptr defined(cobol_ext_$cobol_rwdd);
 14    74 dcl	cobol_ext_$cobol_rwpd ptr ext;
 14    75 dcl	cobol_rwpd ptr defined(cobol_ext_$cobol_rwpd);
 14    76 
 14    77 
 14    78 dcl     cobol_ext_$cobol_fileno1 fixed bin(24)ext;
 14    79 dcl     cobol_fileno1 fixed bin(24)defined (  cobol_ext_$cobol_fileno1);				
 14    80 dcl     cobol_ext_$cobol_options_len fixed bin(24)ext;
 14    81 dcl     cobol_options_len fixed bin(24)defined (  cobol_ext_$cobol_options_len);
 14    82 dcl     cobol_ext_$cobol_pdout_fileno fixed bin(24)ext;
 14    83 dcl     cobol_pdout_fileno fixed bin(24)defined (  cobol_ext_$cobol_pdout_fileno);			
 14    84 dcl     cobol_ext_$cobol_print_fileno fixed bin(24)ext;
 14    85 dcl     cobol_print_fileno fixed bin(24)defined (  cobol_ext_$cobol_print_fileno);			
 14    86 dcl     cobol_ext_$cobol_rmin2_fileno fixed bin(24)ext;
 14    87 dcl     cobol_rmin2_fileno fixed bin(24)defined (  cobol_ext_$cobol_rmin2_fileno);
 14    88 dcl     cobol_ext_$cobol_x1_fileno fixed bin(24)ext;
 14    89 dcl     cobol_x1_fileno fixed bin(24)defined (  cobol_ext_$cobol_x1_fileno);				
 14    90 dcl     cobol_ext_$cobol_x2_fileno fixed bin(24)ext;
 14    91 dcl     cobol_x2_fileno fixed bin(24)defined (  cobol_ext_$cobol_x2_fileno);
 14    92 dcl     cobol_ext_$cobol_x3_fileno fixed bin(24)ext;
 14    93 dcl     cobol_x3_fileno fixed bin(24)defined (  cobol_ext_$cobol_x3_fileno);
 14    94 
 14    95 dcl     cobol_ext_$cobol_lpr char (5) ext;
 14    96 dcl     cobol_lpr char (5) defined (  cobol_ext_$cobol_lpr);				/* -2- */
 14    97 dcl     cobol_ext_$cobol_options char (120) ext;
 14    98 dcl     cobol_options char (120) defined (  cobol_ext_$cobol_options);          			/* -30- */
 14    99 
 14   100 dcl     cobol_ext_$cobol_xlast8 bit (1) ext;
 14   101 dcl     cobol_xlast8 bit (1) defined (  cobol_ext_$cobol_xlast8);				/* -1- */
 14   102 dcl     cobol_ext_$report_exists bit (1) ext;
 14   103 dcl     report_exists bit (1) defined (  cobol_ext_$report_exists);
 14   104 
 14   105 
 14   106 /*    <<<   END OF SHARED EXTERNALS INCLUDE FILE   >>>    */
 14   107 /* END INCLUDE FILE ... cobol_ext_.incl.pl1 */
 14   108 
      790 
      791 
      792      end cobol_set_gen;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/24/89  0832.6  cobol_set_gen.pl1                 >spec>install>MR12.3-1048>cobol_set_gen.pl1
782          1    11/11/82  1712.7  cobol_in_token.incl.pl1           >ldd>include>cobol_in_token.incl.pl1
783          2    03/27/82  0439.8  cobol_type2.incl.pl1              >ldd>include>cobol_type2.incl.pl1
2-15         3    11/11/82  1712.8  cobol_TYPE2.incl.pl1              >ldd>include>cobol_TYPE2.incl.pl1
784          4    03/27/82  0439.9  cobol_type9.incl.pl1              >ldd>include>cobol_type9.incl.pl1
4-17         5    11/11/82  1712.7  cobol_TYPE9.incl.pl1              >ldd>include>cobol_TYPE9.incl.pl1
785          6    03/27/82  0439.8  cobol_type10.incl.pl1             >ldd>include>cobol_type10.incl.pl1
6-20         7    11/11/82  1712.7  cobol_TYPE10.incl.pl1             >ldd>include>cobol_TYPE10.incl.pl1
786          8    03/27/82  0439.8  cobol_type17.incl.pl1             >ldd>include>cobol_type17.incl.pl1
8-14         9    11/11/82  1712.8  cobol_TYPE17.incl.pl1             >ldd>include>cobol_TYPE17.incl.pl1
787         10    03/27/82  0439.8  cobol_type19.incl.pl1             >ldd>include>cobol_type19.incl.pl1
10-17       11    03/27/82  0439.6  cobol_TYPE19.incl.pl1             >ldd>include>cobol_TYPE19.incl.pl1
788         12    11/11/82  1712.8  cobol_fixed_common.incl.pl1       >ldd>include>cobol_fixed_common.incl.pl1
789         13    11/11/82  1712.7  cobol_.incl.pl1                   >ldd>include>cobol_.incl.pl1
790         14    03/27/82  0431.3  cobol_ext_.incl.pl1               >ldd>include>cobol_ext_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
A                                      constant        fixed bin(17,0)          initial dcl 55 set ref 320* 324* 369* 373*
ADQ                             000071 constant        bit(11)                  initial packed unaligned dcl 60 set ref 497* 579*
ANQ1_instr                      000043 constant        bit(36)                  initial packed unaligned dcl 85 set ref 684
AOS                             000054 constant        bit(11)                  initial packed unaligned dcl 73 set ref 594* 595*
AQ                              000072 constant        fixed bin(17,0)          initial dcl 57 set ref 295* 298* 304* 309* 353* 356*
                                                                                  378* 382* 459* 461* 735* 737* 759* 762*
CWL                             000070 constant        bit(11)                  initial packed unaligned dcl 61 set ref 736* 761*
LCQ                             000065 constant        bit(11)                  initial packed unaligned dcl 64 set ref 485*
LDA                             000067 constant        bit(11)                  initial packed unaligned dcl 62 set ref 318* 367*
LDAQ                            000064 constant        bit(11)                  initial packed unaligned dcl 65 set ref 294* 352*
                                                                                  377*
LDQ                             000066 constant        bit(11)                  initial packed unaligned dcl 63 set ref 302* 397*
                                                                                  429* 488* 527* 599*
LDX5                            000056 constant        bit(11)                  initial packed unaligned dcl 71 set ref 368*
LXL5                            000057 constant        bit(11)                  initial packed unaligned dcl 70 set ref 319*
Q                                      constant        fixed bin(17,0)          initial dcl 56 set ref 398* 408* 430* 433* 490* 501*
                                                                                  528* 531* 578* 583* 598* 602*
QLS_instr                       000044 constant        bit(36)                  initial packed unaligned dcl 83 set ref 401 401 493
                                                                                  493
QRS_instr                       000045 constant        bit(36)                  initial packed unaligned dcl 81 set ref 354 354 403
                                                                                  403 495 495
STA                             000062 constant        bit(11)                  initial packed unaligned dcl 67 set ref 322* 371*
                                                                                  379*
STAQ                            000063 constant        bit(11)                  initial packed unaligned dcl 66 set ref 297* 355*
                                                                                  460*
STBQ                            000060 constant        bit(11)                  initial packed unaligned dcl 69 set ref 381*
STBQ_MASK                              constant        bit(6)                   initial packed unaligned dcl 74 ref 380
STQ                             000061 constant        bit(11)                  initial packed unaligned dcl 68 set ref 306* 308*
                                                                                  405* 407* 432* 498* 500* 530* 580* 582* 601*
STX5                            000055 constant        bit(11)                  initial packed unaligned dcl 72 set ref 323* 372*
X5                                     constant        fixed bin(17,0)          initial dcl 58 set ref 321* 325* 370* 374*
a                        11            based           bit(3)                   level 2 packed packed unaligned dcl 10-16 ref 272
add_eos                         000000 constant        structure                level 1 unaligned dcl 127 set ref 524
addr                                                   builtin function         dcl 255 ref 268 269 270 271 332 334 334 354 354 401
                                                                                  401 403 403 419 428 428 455 458 458 493 493 495
                                                                                  495 520 521 521 524 525 525 558 558 562 562 566
                                                                                  571 571 575 575 612 612 617 617 617 617 621 621
                                                                                  621 621 628 628 645 645 655 655 655 655 656 656
                                                                                  656 656 675 679 684 696 696 709 709 730 733 733
                                                                                  738 738 754 757 757 763 763
address                         000142 automatic       structure                level 2 packed packed unaligned dcl 109
assigned_reg              1     000020 internal static bit(4)                   level 2 dcl 181 set ref 707*
b                        11(03)        based           bit(1)                   level 2 packed packed unaligned dcl 10-16 ref 485
                                                                                  518 543 545
bin_18                   21(13)        based           bit(1)                   level 2 packed packed unaligned dcl 4-16 ref 388 399
                                                                                  475 491
bin_36                   21(14)        based           bit(1)                   level 2 packed packed unaligned dcl 4-16 ref 388 475
binary                                                 builtin function         dcl 255 ref 272
c                        11(04)        based           bit(1)                   level 2 packed packed unaligned dcl 10-16 ref 615
char4                                  based           char(4)                  packed unaligned dcl 39 set ref 566*
char8                                  based           char(8)                  packed unaligned dcl 40 set ref 455* 730* 754*
cobol_$next_tag                 000136 external static fixed bin(17,0)          dcl 13-128 set ref 715 717 718* 718 747 749* 749 772
                                                                                  773* 773
cobol_$text_wd_off              000134 external static fixed bin(17,0)          dcl 13-90 ref 456 567 731 739 755 764
cobol_add_gen                   000122 constant        entry                    external dcl 249 ref 525
cobol_addr                      000102 constant        entry                    external dcl 237 ref 655
cobol_com_ptr                          defined         pointer                  dcl 14-25 ref 263
cobol_define_tag                000126 constant        entry                    external dcl 251 ref 719 741 766 774
cobol_emit                      000104 constant        entry                    external dcl 238 ref 354 401 403 458 493 495 558 562
                                                                                  571 575 617 621 628 645 656 686 733 738 757 763
cobol_ext_$cobol_com_ptr        000140 external static pointer                  dcl 14-24 ref 263 263
cobol_gen_error                 000132 constant        entry                    external dcl 253 ref 740 765 775
cobol_make_tagref               000130 constant        entry                    external dcl 252 ref 739 764
cobol_make_type9$long_bin       000116 constant        entry                    external dcl 246 ref 333 427 517
cobol_move_gen                  000120 constant        entry                    external dcl 248 ref 334 428
cobol_pointer_register$get      000112 constant        entry                    external dcl 242 ref 612
cobol_pointer_register$priority 000114 constant        entry                    external dcl 244 ref 630
cobol_pool                      000100 constant        entry                    external dcl 236 ref 455 566 730 754
cobol_register$load             000106 constant        entry                    external dcl 239 ref 696
cobol_register$release          000110 constant        entry                    external dcl 240 ref 709
cobol_subtract_gen              000124 constant        entry                    external dcl 250 ref 521
data_name                              based           structure                level 1 unaligned dcl 4-16
dn_ptr                          000134 automatic       pointer                  dcl 51 set ref 267* 275 279 284* 285 287 314 314 317
                                                                                  331 339 339 342 344* 345 347 364 365 388 388 388
                                                                                  390 399 401 401 418 440 470* 473 475 475 475 478
                                                                                  491 493 493 509 539
done                            000116 automatic       bit(1)                   packed unaligned dcl 42 set ref 667* 668 681* 684
e                         5            based           fixed bin(17,0)          level 2 dcl 10-16 ref 266
end_stmt                               based           structure                level 1 unaligned dcl 10-16
eos_ptr                         000164 automatic       pointer                  dcl 10-13 set ref 265* 266 272 485 518 543 545 615
fixed                                                  builtin function         dcl 255 ref 443 542 641
fixed_common                           based           structure                level 1 unaligned dcl 12-26
i                               000104 automatic       fixed bin(17,0)          dcl 33 set ref 283* 284* 343* 344* 391* 392* 420*
                                                                                  421* 446* 447* 479* 480* 510* 511* 546* 548* 587*
                                                                                  589* 624* 625*
in_token                               based           structure                level 1 dcl 1-9
in_token_ptr                           parameter       pointer                  dcl 1-7 ref 26 265 265 267 284 329 344 392 417 421
                                                                                  447 470 480 508 511 548 589 625
ind_ptr                         000162 automatic       pointer                  dcl 6-16 set ref 279* 280 281 282 287* 288 289 292
                                                                                  347* 348 349 392* 393 394 421* 422 423 447* 448
                                                                                  449 451 454 480* 481 482 511* 512 513 548* 549 550
                                                                                  589* 590 591 595 663 729 734 750 752 753
index_name                             based           structure                level 1 unaligned dcl 6-19
instr                           000142 automatic       structure                level 1 packed packed unaligned dcl 109 set ref 618*
                                                                                  622* 628 628 645 645 655 655 656 656
iptr                            000122 automatic       pointer                  dcl 46 set ref 675* 679* 684* 686*
iw_key                   12            based           fixed bin(17,0)          level 2 dcl 8-13 ref 626
j                               000105 automatic       fixed bin(17,0)          dcl 33 set ref 668* 669 671 673*
lcq_dl_instr                    000017 internal static bit(36)                  initial packed unaligned dcl 105 set ref 557* 558
                                                                                  558
lcq_ic_instr                    000016 internal static bit(36)                  initial packed unaligned dcl 103 set ref 570* 571
                                                                                  571
ldaq_ic_instr                   000013 internal static bit(36)                  initial packed unaligned dcl 97 set ref 457* 458 458
                                                                                  732* 733 733 756* 757 757
ldq_dl_instr                    000015 internal static bit(36)                  initial packed unaligned dcl 101 set ref 561* 562
                                                                                  562
ldq_ic_instr                    000014 internal static bit(36)                  initial packed unaligned dcl 99 set ref 574* 575 575
linkage_section          21(03)        based           bit(1)                   level 2 packed packed unaligned dcl 4-16 ref 401 493
literal                  11            based           char                     level 2 packed packed unaligned dcl 2-14 ref 442 541
litoff                          000110 automatic       fixed bin(17,0)          dcl 36 set ref 455* 456 566* 567 730* 731 754* 755
max                      17            based           fixed bin(17,0)          level 2 dcl 6-19 ref 451 729
mnemonic_name                          based           structure                level 1 unaligned dcl 8-13
move_eos                        000024 constant        structure                level 1 unaligned dcl 163 set ref 332 419
mpy_instr                       000011 internal static bit(36)                  initial packed unaligned dcl 93 set ref 678* 679
n                                      based           fixed bin(17,0)          level 2 in structure "in_token" dcl 1-9 in procedure
                                                                                  "cobol_set_gen" ref 265
n                               000224 automatic       fixed bin(35,0)          dcl 662 in procedure "mpy" set ref 663* 665 669 671
                                                                                  678
n                                      parameter       fixed bin(17,0)          dcl 639 in procedure "adj_emit" ref 637 641
n                               000144 automatic       fixed bin(17,0)          level 2 in structure "out_token" dcl 117
                                                                                  in procedure "cobol_set_gen" set ref 328* 416*
                                                                                  507*
name_ptr                        000136 automatic       pointer                  dcl 52 set ref 625* 626
nlit_ptr                        000160 automatic       pointer                  dcl 2-11 set ref 440* 442 442 442 539* 541 541 541
                                                                                  543
null                                                   builtin function         dcl 255 ref 330 354 354 401 401 403 403 426 458 458
                                                                                  493 493 495 495 516 558 558 562 562 571 571 575
                                                                                  575 628 628 645 645 686 686 733 733 738 738 739
                                                                                  739 757 757 763 763 764 764
num                             000020 internal static fixed bin(17,0)          level 2 dcl 181 set ref 694* 708*
num1                            000156 automatic       fixed bin(35,0)          level 2 dcl 122 set ref 454* 725* 727 727* 752* 752
num2                      1     000156 automatic       fixed bin(35,0)          level 2 dcl 122 set ref 443* 444 451 451 454 729*
                                                                                  753* 753
numeric_lit                            based           structure                level 1 unaligned dcl 2-14
oc                      133(31)        based           bit(1)                   level 3 packed packed unaligned dcl 12-26 ref 263
ocsw                            000117 automatic       bit(1)                   packed unaligned dcl 43 set ref 263* 290 311 350 357
                                                                                  395 410 424 434 483 502 514 532 551 584 592 604
offset                    4     000037 internal static fixed bin(24,0)          level 2 in structure "rs1" dcl 198 in procedure
                                                                                  "cobol_set_gen" set ref 289* 296* 296 349* 394*
                                                                                  423* 427* 449* 482* 513* 517* 550* 591* 734* 760*
                                                                                  760
offset                   14            based           fixed bin(24,0)          level 2 in structure "index_name" dcl 6-19
                                                                                  in procedure "cobol_set_gen" ref 281 289 349 394
                                                                                  423 449 482 513 550 591 734
offset                    0(03) 000142 automatic       bit(15)                  level 3 in structure "instr" packed packed unaligned
                                                                                  dcl 109 in procedure "cobol_set_gen" set ref 627*
                                                                                  641 643*
offset                   24            based           fixed bin(24,0)          level 2 in structure "data_name" dcl 4-16
                                                                                  in procedure "cobol_set_gen" ref 401 493
offset                    4     000031 internal static fixed bin(24,0)          level 2 in structure "ss1" dcl 190 in procedure
                                                                                  "cobol_set_gen" set ref 281* 301* 301 303* 303 333
ok_tag                          000101 automatic       fixed bin(17,0)          dcl 30 set ref 715* 739* 741* 747* 764* 766*
op                        0(18) 000142 automatic       bit(11)                  level 2 packed packed unaligned dcl 109 set ref 644*
                                                                                  653*
opcode                                 parameter       bit(11)                  packed unaligned dcl 652 in procedure "addr_emit"
                                                                                  ref 649 653
opcode                                 parameter       bit(11)                  packed unaligned dcl 640 in procedure "adj_emit" ref
                                                                                  637 644
operand                   4     000046 internal static structure                level 2 in structure "ss2" dcl 206 in procedure
                                                                                  "cobol_set_gen"
operand                   4     000060 internal static structure                level 2 in structure "rs2" dcl 216 in procedure
                                                                                  "cobol_set_gen"
opno                            000100 automatic       fixed bin(17,0)          dcl 29 set ref 266* 267 283 343 391 420 446 470 479
                                                                                  510 546 587 624
options                 133            based           structure                level 2 packed packed unaligned dcl 12-26
out_token                       000144 automatic       structure                level 1 unaligned dcl 117 set ref 334 334 428 428
                                                                                  521 521 525 525
places                   10            based           fixed bin(17,0)          level 2 dcl 2-14 ref 442 442 541 541
places_left               6            based           fixed bin(17,0)          level 2 dcl 2-14 ref 442 541
pool                            000156 automatic       structure                level 1 unaligned dcl 122 set ref 455 730 754
ptr                       2     000144 automatic       pointer                  array level 2 dcl 117 set ref 329* 330* 331* 332*
                                                                                  333* 417* 418* 419* 426* 427* 508* 509* 516* 517*
                                                                                  520* 524*
ptr_register_request            000071 internal static structure                level 1 dcl 226 set ref 612 612
qls_instr                       000010 internal static bit(36)                  initial packed unaligned dcl 87 set ref 674* 675
r1p                             000126 automatic       pointer                  dcl 48 set ref 269* 297* 306* 355* 405* 429* 460*
                                                                                  497* 527* 579* 594* 736* 761*
r2p                             000132 automatic       pointer                  dcl 50 set ref 271* 322* 371* 379*
reg                             000020 internal static structure                level 1 dcl 181 set ref 696 696 709 709
regno                                  parameter       fixed bin(17,0)          dcl 693 in procedure "reg_lock" ref 691 694
regno                                  parameter       fixed bin(17,0)          dcl 702 in procedure "reg_unlock" ref 700 703 703
                                                                                  706 708
reloc                           000140 automatic       bit(5)                   array packed unaligned dcl 108 set ref 655 655 656
                                                                                  656
retry_tag                       000102 automatic       fixed bin(17,0)          dcl 31 set ref 717* 719* 740* 765* 772* 774* 775*
rs1                             000037 internal static structure                level 1 dcl 198 set ref 269
rs2                             000060 internal static structure                level 1 dcl 216 set ref 271
rterror_SET_RANGE               000073 constant        fixed bin(17,0)          initial dcl 54 set ref 740* 765* 775*
s1p                             000124 automatic       pointer                  dcl 47 set ref 268* 294* 302* 318*
s2p                             000130 automatic       pointer                  dcl 49 set ref 270* 352* 367* 377* 397* 485* 488*
seg_num                  13            based           fixed bin(17,0)          level 2 dcl 6-19 ref 280 288 348 393 422 448 481 512
                                                                                  549 590
segno                     3     000031 internal static fixed bin(17,0)          level 2 in structure "ss1" dcl 190 in procedure
                                                                                  "cobol_set_gen" set ref 280* 333*
segno                     3     000037 internal static fixed bin(17,0)          level 2 in structure "rs1" dcl 198 in procedure
                                                                                  "cobol_set_gen" set ref 288* 348* 393* 422* 427*
                                                                                  448* 481* 512* 517* 549* 590*
set_reloc                       000046 constant        bit(5)                   initial array dcl 80 set ref 617 617 621 621
set_seq                         000052 constant        bit(36)                  initial array packed unaligned dcl 76 set ref 617
                                                                                  617 621 621
sign                      4(09)        based           char(1)                  level 2 packed packed unaligned dcl 2-14 ref 543
slen                            000103 automatic       fixed bin(17,0)          dcl 32 set ref 282* 292
ss1                             000031 internal static structure                level 1 dcl 190 set ref 268
ss2                             000046 internal static structure                level 1 dcl 206 set ref 270
sta_instr                       000042 constant        bit(36)                  initial packed unaligned dcl 89 ref 618
struc_length             20            based           fixed bin(17,0)          level 2 dcl 6-19 ref 282 292 454 595 663 750 752 753
struc_ptr                              parameter       pointer                  dcl 651 set ref 649 655*
stz_instr                       000041 constant        bit(36)                  initial packed unaligned dcl 91 ref 622
subscripted              22(05)        based           bit(1)                   level 2 packed packed unaligned dcl 4-16 ref 365 388
                                                                                  475
substr                                                 builtin function         dcl 255 set ref 442* 457* 457 541* 557* 557 561* 561
                                                                                  570* 570 574* 574 627 643 669 671 674* 674 678*
                                                                                  678 707 732* 732 756* 756
subsw                           000120 automatic       bit(1)                   packed unaligned dcl 44 set ref 543* 545* 546 555
                                                                                  568
subtract_eos                    000012 constant        structure                level 1 unaligned dcl 145 set ref 520
tag                       0(30) 000142 automatic       bit(12)                  level 2 packed packed unaligned dcl 109 set ref 380*
temp                            000106 automatic       fixed bin(17,0)          dcl 34 set ref 456* 457 567* 570 574 626* 627 641*
                                                                                  643 673* 674 703* 706* 707 731* 732 755* 756
temp_numlit                     000111 automatic       char(18)                 packed unaligned dcl 38 set ref 441* 442* 443 540*
                                                                                  541* 542
token_ptr                 4     000060 internal static pointer                  initial level 3 in structure "rs2" dcl 216
                                                                                  in procedure "cobol_set_gen" set ref 317* 364*
token_ptr                 4     000046 internal static pointer                  initial level 3 in structure "ss2" dcl 206
                                                                                  in procedure "cobol_set_gen" set ref 342* 390*
                                                                                  478*
token_ptr                 2            based           pointer                  array level 2 in structure "in_token" dcl 1-9
                                                                                  in procedure "cobol_set_gen" ref 265 267 284 329
                                                                                  344 392 417 421 447 470 480 508 511 548 589 625
type                      3            based           fixed bin(17,0)          level 2 dcl 4-16 ref 275 285 314 339 345 473
tze_instr                       000012 internal static bit(36)                  initial packed unaligned dcl 95 set ref 738 738 763
                                                                                  763
unspec                                                 builtin function         dcl 255 ref 457 557 561 570 574 627 643 669 671 674
                                                                                  678 707 732 756
usage_index              21(34)        based           bit(1)                   level 2 packed packed unaligned dcl 4-16 ref 314 339
value                           000107 automatic       fixed bin(17,0)          dcl 35 set ref 542* 546 553 557 561 566 587

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
allo1_max                              defined         fixed bin(17,0)          dcl 13-171
allo1_ptr                              defined         pointer                  dcl 13-67
alter_flag                             defined         fixed bin(17,0)          dcl 13-135
alter_index                            defined         fixed bin(17,0)          dcl 13-153
alter_list_ptr                         defined         pointer                  dcl 13-39
cd_cnt                                 defined         fixed bin(17,0)          dcl 13-197
cobol_$allo1_max                       external static fixed bin(17,0)          dcl 13-170
cobol_$allo1_ptr                       external static pointer                  dcl 13-66
cobol_$alter_flag                      external static fixed bin(17,0)          dcl 13-134
cobol_$alter_index                     external static fixed bin(17,0)          dcl 13-152
cobol_$alter_list_ptr                  external static pointer                  dcl 13-38
cobol_$cd_cnt                          external static fixed bin(17,0)          dcl 13-196
cobol_$cobol_data_wd_off               external static fixed bin(17,0)          dcl 13-118
cobol_$compile_count                   external static fixed bin(17,0)          dcl 13-142
cobol_$coms_charcnt                    external static fixed bin(17,0)          dcl 13-188
cobol_$coms_wdoff                      external static fixed bin(17,0)          dcl 13-202
cobol_$con_end_ptr                     external static pointer                  dcl 13-10
cobol_$con_wd_off                      external static fixed bin(17,0)          dcl 13-92
cobol_$cons_charcnt                    external static fixed bin(17,0)          dcl 13-192
cobol_$constant_offset                 external static fixed bin(17,0)          dcl 13-156
cobol_$data_init_flag                  external static fixed bin(17,0)          dcl 13-130
cobol_$date_compiled_sw                external static fixed bin(17,0)          dcl 13-180
cobol_$debug_enable                    external static fixed bin(17,0)          dcl 13-174
cobol_$def_base_ptr                    external static pointer                  dcl 13-12
cobol_$def_max                         external static fixed bin(17,0)          dcl 13-96
cobol_$def_wd_off                      external static fixed bin(17,0)          dcl 13-94
cobol_$diag_ptr                        external static pointer                  dcl 13-70
cobol_$eln_max                         external static fixed bin(17,0)          dcl 13-172
cobol_$eln_ptr                         external static pointer                  dcl 13-68
cobol_$fixup_max                       external static fixed bin(17,0)          dcl 13-164
cobol_$fixup_ptr                       external static pointer                  dcl 13-30
cobol_$fs_charcnt                      external static fixed bin(17,0)          dcl 13-184
cobol_$fs_wdoff                        external static fixed bin(17,0)          dcl 13-198
cobol_$include_cnt                     external static fixed bin(17,0)          dcl 13-182
cobol_$include_info_ptr                external static pointer                  dcl 13-86
cobol_$init_stack_off                  external static fixed bin(17,0)          dcl 13-124
cobol_$initval_base_ptr                external static pointer                  dcl 13-32
cobol_$initval_file_ptr                external static pointer                  dcl 13-34
cobol_$initval_flag                    external static fixed bin(17,0)          dcl 13-178
cobol_$link_base_ptr                   external static pointer                  dcl 13-14
cobol_$link_max                        external static fixed bin(17,0)          dcl 13-100
cobol_$link_wd_off                     external static fixed bin(17,0)          dcl 13-98
cobol_$list_off                        external static fixed bin(17,0)          dcl 13-154
cobol_$list_ptr                        external static pointer                  dcl 13-64
cobol_$ls_charcnt                      external static fixed bin(17,0)          dcl 13-190
cobol_$main_pcs_ptr                    external static pointer                  dcl 13-84
cobol_$map_data_max                    external static fixed bin(17,0)          dcl 13-162
cobol_$map_data_ptr                    external static pointer                  dcl 13-54
cobol_$max_stack_off                   external static fixed bin(17,0)          dcl 13-122
cobol_$minpral5_ptr                    external static pointer                  dcl 13-50
cobol_$misc_base_ptr                   external static pointer                  dcl 13-60
cobol_$misc_end_ptr                    external static pointer                  dcl 13-62
cobol_$misc_max                        external static fixed bin(17,0)          dcl 13-158
cobol_$non_source_offset               external static fixed bin(17,0)          dcl 13-176
cobol_$ntbuf_ptr                       external static pointer                  dcl 13-82
cobol_$obj_seg_name                    external static char(32)                 dcl 13-208
cobol_$op_con_ptr                      external static pointer                  dcl 13-80
cobol_$para_eop_flag                   external static fixed bin(17,0)          dcl 13-138
cobol_$pd_map_index                    external static fixed bin(17,0)          dcl 13-116
cobol_$pd_map_max                      external static fixed bin(17,0)          dcl 13-160
cobol_$pd_map_ptr                      external static pointer                  dcl 13-28
cobol_$pd_map_sw                       external static fixed bin(17,0)          dcl 13-126
cobol_$perform_list_ptr                external static pointer                  dcl 13-36
cobol_$perform_para_index              external static fixed bin(17,0)          dcl 13-148
cobol_$perform_sect_index              external static fixed bin(17,0)          dcl 13-150
cobol_$priority_no                     external static fixed bin(17,0)          dcl 13-140
cobol_$ptr_assumption_ind              external static fixed bin(17,0)          dcl 13-144
cobol_$ptr_status_ptr                  external static pointer                  dcl 13-56
cobol_$reg_assumption_ind              external static fixed bin(17,0)          dcl 13-146
cobol_$reg_status_ptr                  external static pointer                  dcl 13-58
cobol_$reloc_def_base_ptr              external static pointer                  dcl 13-20
cobol_$reloc_def_max                   external static fixed bin(24,0)          dcl 13-108
cobol_$reloc_link_base_ptr             external static pointer                  dcl 13-22
cobol_$reloc_link_max                  external static fixed bin(24,0)          dcl 13-110
cobol_$reloc_sym_base_ptr              external static pointer                  dcl 13-24
cobol_$reloc_sym_max                   external static fixed bin(24,0)          dcl 13-112
cobol_$reloc_text_base_ptr             external static pointer                  dcl 13-18
cobol_$reloc_text_max                  external static fixed bin(24,0)          dcl 13-106
cobol_$reloc_work_base_ptr             external static pointer                  dcl 13-26
cobol_$reloc_work_max                  external static fixed bin(24,0)          dcl 13-114
cobol_$reswd_ptr                       external static pointer                  dcl 13-78
cobol_$same_sort_merge_proc            external static bit(1)                   dcl 13-214
cobol_$scratch_dir                     external static char(168)                dcl 13-206
cobol_$sect_eop_flag                   external static fixed bin(17,0)          dcl 13-136
cobol_$seg_init_flag                   external static fixed bin(17,0)          dcl 13-132
cobol_$seg_init_list_ptr               external static pointer                  dcl 13-40
cobol_$stack_off                       external static fixed bin(17,0)          dcl 13-120
cobol_$statement_info_ptr              external static pointer                  dcl 13-76
cobol_$sym_base_ptr                    external static pointer                  dcl 13-16
cobol_$sym_max                         external static fixed bin(17,0)          dcl 13-104
cobol_$sym_wd_off                      external static fixed bin(17,0)          dcl 13-102
cobol_$tag_table_max                   external static fixed bin(17,0)          dcl 13-166
cobol_$tag_table_ptr                   external static pointer                  dcl 13-52
cobol_$temp_token_area_ptr             external static pointer                  dcl 13-42
cobol_$temp_token_max                  external static fixed bin(17,0)          dcl 13-168
cobol_$temp_token_ptr                  external static pointer                  dcl 13-44
cobol_$text_base_ptr                   external static pointer                  dcl 13-8
cobol_$token_block1_ptr                external static pointer                  dcl 13-46
cobol_$token_block2_ptr                external static pointer                  dcl 13-48
cobol_$value_cnt                       external static fixed bin(17,0)          dcl 13-194
cobol_$ws_charcnt                      external static fixed bin(17,0)          dcl 13-186
cobol_$ws_wdoff                        external static fixed bin(17,0)          dcl 13-200
cobol_$xref_bypass                     external static bit(1)                   dcl 13-212
cobol_$xref_chain_ptr                  external static pointer                  dcl 13-74
cobol_$xref_token_ptr                  external static pointer                  dcl 13-72
cobol_afp                              defined         pointer                  dcl 14-11
cobol_analin_fileno                    defined         pointer                  dcl 14-13
cobol_cmfp                             defined         pointer                  dcl 14-21
cobol_com_fileno                       defined         pointer                  dcl 14-23
cobol_curr_in                          defined         pointer                  dcl 14-53
cobol_curr_out                         defined         pointer                  dcl 14-55
cobol_data_wd_off                      defined         fixed bin(17,0)          dcl 13-119
cobol_dfp                              defined         pointer                  dcl 14-27
cobol_eltp                             defined         pointer                  dcl 14-19
cobol_ext_$cobol_afp                   external static pointer                  dcl 14-10
cobol_ext_$cobol_analin_fileno         external static pointer                  dcl 14-12
cobol_ext_$cobol_cmfp                  external static pointer                  dcl 14-20
cobol_ext_$cobol_com_fileno            external static pointer                  dcl 14-22
cobol_ext_$cobol_curr_in               external static pointer                  dcl 14-52
cobol_ext_$cobol_curr_out              external static pointer                  dcl 14-54
cobol_ext_$cobol_dfp                   external static pointer                  dcl 14-26
cobol_ext_$cobol_eltp                  external static pointer                  dcl 14-18
cobol_ext_$cobol_fileno1               external static fixed bin(24,0)          dcl 14-78
cobol_ext_$cobol_hfp                   external static pointer                  dcl 14-28
cobol_ext_$cobol_lpr                   external static char(5)                  packed unaligned dcl 14-95
cobol_ext_$cobol_m1fp                  external static pointer                  dcl 14-30
cobol_ext_$cobol_m2fp                  external static pointer                  dcl 14-32
cobol_ext_$cobol_min1_fileno           external static pointer                  dcl 14-34
cobol_ext_$cobol_min2_fileno_ptr       external static pointer                  dcl 14-36
cobol_ext_$cobol_name_fileno           external static pointer                  dcl 14-38
cobol_ext_$cobol_name_fileno_ptr       external static pointer                  dcl 14-40
cobol_ext_$cobol_ntfp                  external static pointer                  dcl 14-42
cobol_ext_$cobol_options               external static char(120)                packed unaligned dcl 14-97
cobol_ext_$cobol_options_len           external static fixed bin(24,0)          dcl 14-80
cobol_ext_$cobol_pdofp                 external static pointer                  dcl 14-44
cobol_ext_$cobol_pdout_fileno          external static fixed bin(24,0)          dcl 14-82
cobol_ext_$cobol_pfp                   external static pointer                  dcl 14-46
cobol_ext_$cobol_print_fileno          external static fixed bin(24,0)          dcl 14-84
cobol_ext_$cobol_rm2fp                 external static pointer                  dcl 14-48
cobol_ext_$cobol_rmin2_fileno          external static fixed bin(24,0)          dcl 14-86
cobol_ext_$cobol_rmin2fp               external static pointer                  dcl 14-50
cobol_ext_$cobol_rwdd                  external static pointer                  dcl 14-72
cobol_ext_$cobol_rwpd                  external static pointer                  dcl 14-74
cobol_ext_$cobol_sfp                   external static pointer                  dcl 14-56
cobol_ext_$cobol_w1p                   external static pointer                  dcl 14-58
cobol_ext_$cobol_w2p                   external static pointer                  dcl 14-60
cobol_ext_$cobol_w3p                   external static pointer                  dcl 14-62
cobol_ext_$cobol_w5p                   external static pointer                  dcl 14-64
cobol_ext_$cobol_w6p                   external static pointer                  dcl 14-66
cobol_ext_$cobol_w7p                   external static pointer                  dcl 14-68
cobol_ext_$cobol_x1_fileno             external static fixed bin(24,0)          dcl 14-88
cobol_ext_$cobol_x2_fileno             external static fixed bin(24,0)          dcl 14-90
cobol_ext_$cobol_x3_fileno             external static fixed bin(24,0)          dcl 14-92
cobol_ext_$cobol_x3fp                  external static pointer                  dcl 14-70
cobol_ext_$cobol_xlast8                external static bit(1)                   packed unaligned dcl 14-100
cobol_ext_$report_exists               external static bit(1)                   packed unaligned dcl 14-102
cobol_ext_$report_first_token          external static pointer                  dcl 14-14
cobol_ext_$report_last_token           external static pointer                  dcl 14-16
cobol_fileno1                          defined         fixed bin(24,0)          dcl 14-79
cobol_hfp                              defined         pointer                  dcl 14-29
cobol_lpr                              defined         char(5)                  packed unaligned dcl 14-96
cobol_m1fp                             defined         pointer                  dcl 14-31
cobol_m2fp                             defined         pointer                  dcl 14-33
cobol_min1_fileno                      defined         pointer                  dcl 14-35
cobol_min2_fileno_ptr                  defined         pointer                  dcl 14-37
cobol_name_fileno                      defined         pointer                  dcl 14-39
cobol_name_fileno_ptr                  defined         pointer                  dcl 14-41
cobol_ntfp                             defined         pointer                  dcl 14-43
cobol_options                          defined         char(120)                packed unaligned dcl 14-98
cobol_options_len                      defined         fixed bin(24,0)          dcl 14-81
cobol_pdofp                            defined         pointer                  dcl 14-45
cobol_pdout_fileno                     defined         fixed bin(24,0)          dcl 14-83
cobol_pfp                              defined         pointer                  dcl 14-47
cobol_print_fileno                     defined         fixed bin(24,0)          dcl 14-85
cobol_rm2fp                            defined         pointer                  dcl 14-49
cobol_rmin2_fileno                     defined         fixed bin(24,0)          dcl 14-87
cobol_rmin2fp                          defined         pointer                  dcl 14-51
cobol_rwdd                             defined         pointer                  dcl 14-73
cobol_rwpd                             defined         pointer                  dcl 14-75
cobol_sfp                              defined         pointer                  dcl 14-57
cobol_w1p                              defined         pointer                  dcl 14-59
cobol_w2p                              defined         pointer                  dcl 14-61
cobol_w3p                              defined         pointer                  dcl 14-63
cobol_w5p                              defined         pointer                  dcl 14-65
cobol_w6p                              defined         pointer                  dcl 14-67
cobol_w7p                              defined         pointer                  dcl 14-69
cobol_x1_fileno                        defined         fixed bin(24,0)          dcl 14-89
cobol_x2_fileno                        defined         fixed bin(24,0)          dcl 14-91
cobol_x3_fileno                        defined         fixed bin(24,0)          dcl 14-93
cobol_x3fp                             defined         pointer                  dcl 14-71
cobol_xlast8                           defined         bit(1)                   packed unaligned dcl 14-101
compile_count                          defined         fixed bin(17,0)          dcl 13-143
coms_charcnt                           defined         fixed bin(17,0)          dcl 13-189
coms_wdoff                             defined         fixed bin(17,0)          dcl 13-203
con_end_ptr                            defined         pointer                  dcl 13-11
con_wd_off                             defined         fixed bin(17,0)          dcl 13-93
cons_charcnt                           defined         fixed bin(17,0)          dcl 13-193
constant_offset                        defined         fixed bin(17,0)          dcl 13-157
data_init_flag                         defined         fixed bin(17,0)          dcl 13-131
date_compiled_sw                       defined         fixed bin(17,0)          dcl 13-181
debug_enable                           defined         fixed bin(17,0)          dcl 13-175
def_base_ptr                           defined         pointer                  dcl 13-13
def_max                                defined         fixed bin(17,0)          dcl 13-97
def_wd_off                             defined         fixed bin(17,0)          dcl 13-95
diag_ptr                               defined         pointer                  dcl 13-71
eln_max                                defined         fixed bin(17,0)          dcl 13-173
eln_ptr                                defined         pointer                  dcl 13-69
fixup_max                              defined         fixed bin(17,0)          dcl 13-165
fixup_ptr                              defined         pointer                  dcl 13-31
fs_charcnt                             defined         fixed bin(17,0)          dcl 13-185
fs_wdoff                               defined         fixed bin(17,0)          dcl 13-199
include_cnt                            defined         fixed bin(17,0)          dcl 13-183
include_info_ptr                       defined         pointer                  dcl 13-87
init_stack_off                         defined         fixed bin(17,0)          dcl 13-125
initval_base_ptr                       defined         pointer                  dcl 13-33
initval_file_ptr                       defined         pointer                  dcl 13-35
initval_flag                           defined         fixed bin(17,0)          dcl 13-179
link_base_ptr                          defined         pointer                  dcl 13-15
link_max                               defined         fixed bin(17,0)          dcl 13-101
link_wd_off                            defined         fixed bin(17,0)          dcl 13-99
list_off                               defined         fixed bin(17,0)          dcl 13-155
list_ptr                               defined         pointer                  dcl 13-65
ls_charcnt                             defined         fixed bin(17,0)          dcl 13-191
main_pcs_ptr                           defined         pointer                  dcl 13-85
map_data_max                           defined         fixed bin(17,0)          dcl 13-163
map_data_ptr                           defined         pointer                  dcl 13-55
max_stack_off                          defined         fixed bin(17,0)          dcl 13-123
minpral5_ptr                           defined         pointer                  dcl 13-51
misc_base_ptr                          defined         pointer                  dcl 13-61
misc_end_ptr                           defined         pointer                  dcl 13-63
misc_max                               defined         fixed bin(17,0)          dcl 13-159
next_tag                               defined         fixed bin(17,0)          dcl 13-129
non_source_offset                      defined         fixed bin(17,0)          dcl 13-177
ntbuf_ptr                              defined         pointer                  dcl 13-83
obj_seg_name                           defined         char(32)                 dcl 13-209
op_con_ptr                             defined         pointer                  dcl 13-81
para_eop_flag                          defined         fixed bin(17,0)          dcl 13-139
pd_map_index                           defined         fixed bin(17,0)          dcl 13-117
pd_map_max                             defined         fixed bin(17,0)          dcl 13-161
pd_map_ptr                             defined         pointer                  dcl 13-29
pd_map_sw                              defined         fixed bin(17,0)          dcl 13-127
perform_list_ptr                       defined         pointer                  dcl 13-37
perform_para_index                     defined         fixed bin(17,0)          dcl 13-149
perform_sect_index                     defined         fixed bin(17,0)          dcl 13-151
priority_no                            defined         fixed bin(17,0)          dcl 13-141
ptr_assumption_ind                     defined         fixed bin(17,0)          dcl 13-145
ptr_status_ptr                         defined         pointer                  dcl 13-57
reg_assumption_ind                     defined         fixed bin(17,0)          dcl 13-147
reg_status_ptr                         defined         pointer                  dcl 13-59
reloc_def_base_ptr                     defined         pointer                  dcl 13-21
reloc_def_max                          defined         fixed bin(24,0)          dcl 13-109
reloc_link_base_ptr                    defined         pointer                  dcl 13-23
reloc_link_max                         defined         fixed bin(24,0)          dcl 13-111
reloc_sym_base_ptr                     defined         pointer                  dcl 13-25
reloc_sym_max                          defined         fixed bin(24,0)          dcl 13-113
reloc_text_base_ptr                    defined         pointer                  dcl 13-19
reloc_text_max                         defined         fixed bin(24,0)          dcl 13-107
reloc_work_base_ptr                    defined         pointer                  dcl 13-27
reloc_work_max                         defined         fixed bin(24,0)          dcl 13-115
report_exists                          defined         bit(1)                   packed unaligned dcl 14-103
report_first_token                     defined         pointer                  dcl 14-15
report_last_token                      defined         pointer                  dcl 14-17
reswd_ptr                              defined         pointer                  dcl 13-79
same_sort_merge_proc                   defined         bit(1)                   dcl 13-215
scratch_dir                            defined         char(168)                dcl 13-207
sect_eop_flag                          defined         fixed bin(17,0)          dcl 13-137
seg_init_flag                          defined         fixed bin(17,0)          dcl 13-133
seg_init_list_ptr                      defined         pointer                  dcl 13-41
stack_off                              defined         fixed bin(17,0)          dcl 13-121
statement_info_ptr                     defined         pointer                  dcl 13-77
sym_base_ptr                           defined         pointer                  dcl 13-17
sym_max                                defined         fixed bin(17,0)          dcl 13-105
sym_wd_off                             defined         fixed bin(17,0)          dcl 13-103
tag_table_max                          defined         fixed bin(17,0)          dcl 13-167
tag_table_ptr                          defined         pointer                  dcl 13-53
temp_token_area_ptr                    defined         pointer                  dcl 13-43
temp_token_max                         defined         fixed bin(17,0)          dcl 13-169
temp_token_ptr                         defined         pointer                  dcl 13-45
text_base_ptr                          defined         pointer                  dcl 13-9
text_wd_off                            defined         fixed bin(17,0)          dcl 13-91
token_block1_ptr                       defined         pointer                  dcl 13-47
token_block2_ptr                       defined         pointer                  dcl 13-49
value_cnt                              defined         fixed bin(17,0)          dcl 13-195
ws_charcnt                             defined         fixed bin(17,0)          dcl 13-187
ws_wdoff                               defined         fixed bin(17,0)          dcl 13-201
xref_bypass                            defined         bit(1)                   dcl 13-213
xref_chain_ptr                         defined         pointer                  dcl 13-75
xref_token_ptr                         defined         pointer                  dcl 13-73

NAMES DECLARED BY EXPLICIT CONTEXT.
addr_emit                       002317 constant        entry                    internal dcl 649 ref 294 297 302 306 318 322 352 355
                                                                                  367 371 377 379 397 405 429 460 485 488 497 527
                                                                                  579 594 736 761
adj_emit                        002255 constant        entry                    internal dcl 637 ref 308 319 323 368 372 381 407 432
                                                                                  498 500 530 580 582 595 599 601
cobol_set_gen                   000111 constant        entry                    external dcl 26
format                          000036 constant        label                    array(0:2) dcl 275 ref 272
mpy                             002366 constant        entry                    internal dcl 660 ref 307 406 431 499 529 581 600
oc_finish                       002556 constant        entry                    internal dcl 723 ref 311 359 410 434 502 532 584 604
oc_finish_idn                   002736 constant        entry                    internal dcl 745 ref 360
oc_start                        002536 constant        entry                    internal dcl 713 ref 290 350 395 424 483 514 551 592
oc_unconditional                003121 constant        entry                    internal dcl 770 ref 444 451
reg_lock                        002470 constant        entry                    internal dcl 691 ref 295 304 320 321 353 369 370 378
                                                                                  398 430 459 490 528 578 598 735 759
reg_unlock                      002506 constant        entry                    internal dcl 700 ref 298 309 324 325 356 373 374 382
                                                                                  408 433 461 501 531 583 602 737 762
start                           002321 constant        label                    dcl 653 in procedure "addr_emit"
start                           000116 constant        label                    dcl 263 in procedure "cobol_set_gen"
start                           002472 constant        label                    dcl 694 in procedure "reg_lock"
start                           002257 constant        label                    dcl 641 in procedure "adj_emit"
start                           002537 constant        label                    dcl 715 in procedure "oc_start"
start                           002557 constant        label                    dcl 725 in procedure "oc_finish"
start                           002367 constant        label                    dcl 663 in procedure "mpy"
start                           002510 constant        label                    dcl 703 in procedure "reg_unlock"
start                           002737 constant        label                    dcl 747 in procedure "oc_finish_idn"
start0                          000155 constant        label                    dcl 275
start1                          001176 constant        label                    dcl 470
start2                          002075 constant        label                    dcl 612

NAMES DECLARED BY CONTEXT OR IMPLICATION.
mod                                                    builtin function         ref 401 493
string                                                 builtin function         set ref 618 622*

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      3634        3776    3407        3644
Length      4552    3407       142         537     225          70

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cobol_set_gen                       480 external procedure  is an external procedure.  
adj_emit                                internal procedure  shares stack frame of external procedure cobol_set_gen.  
addr_emit                               internal procedure  shares stack frame of external procedure cobol_set_gen.  
mpy                                     internal procedure  shares stack frame of external procedure cobol_set_gen.  
reg_lock                                internal procedure  shares stack frame of external procedure cobol_set_gen.  
reg_unlock                              internal procedure  shares stack frame of external procedure cobol_set_gen.  
oc_start                                internal procedure  shares stack frame of external procedure cobol_set_gen.  
oc_finish                               internal procedure  shares stack frame of external procedure cobol_set_gen.  
oc_finish_idn                           internal procedure  shares stack frame of external procedure cobol_set_gen.  
oc_unconditional                        internal procedure  shares stack frame of external procedure cobol_set_gen.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 qls_instr                   cobol_set_gen
000011 mpy_instr                   cobol_set_gen
000012 tze_instr                   cobol_set_gen
000013 ldaq_ic_instr               cobol_set_gen
000014 ldq_ic_instr                cobol_set_gen
000015 ldq_dl_instr                cobol_set_gen
000016 lcq_ic_instr                cobol_set_gen
000017 lcq_dl_instr                cobol_set_gen
000020 reg                         cobol_set_gen
000031 ss1                         cobol_set_gen
000037 rs1                         cobol_set_gen
000046 ss2                         cobol_set_gen
000060 rs2                         cobol_set_gen
000071 ptr_register_request        cobol_set_gen

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cobol_set_gen            000100 opno                        cobol_set_gen
                         000101 ok_tag                      cobol_set_gen
                         000102 retry_tag                   cobol_set_gen
                         000103 slen                        cobol_set_gen
                         000104 i                           cobol_set_gen
                         000105 j                           cobol_set_gen
                         000106 temp                        cobol_set_gen
                         000107 value                       cobol_set_gen
                         000110 litoff                      cobol_set_gen
                         000111 temp_numlit                 cobol_set_gen
                         000116 done                        cobol_set_gen
                         000117 ocsw                        cobol_set_gen
                         000120 subsw                       cobol_set_gen
                         000122 iptr                        cobol_set_gen
                         000124 s1p                         cobol_set_gen
                         000126 r1p                         cobol_set_gen
                         000130 s2p                         cobol_set_gen
                         000132 r2p                         cobol_set_gen
                         000134 dn_ptr                      cobol_set_gen
                         000136 name_ptr                    cobol_set_gen
                         000140 reloc                       cobol_set_gen
                         000142 instr                       cobol_set_gen
                         000144 out_token                   cobol_set_gen
                         000156 pool                        cobol_set_gen
                         000160 nlit_ptr                    cobol_set_gen
                         000162 ind_ptr                     cobol_set_gen
                         000164 eos_ptr                     cobol_set_gen
                         000224 n                           mpy

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return_mac          mdfx1               ext_entry           any_to_any_truncate_

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cobol_add_gen                 cobol_addr                    cobol_define_tag              cobol_emit
cobol_gen_error               cobol_make_tagref             cobol_make_type9$long_bin     cobol_move_gen
cobol_pointer_register$get    cobol_pointer_register$priority                             cobol_pool
cobol_register$load           cobol_register$release        cobol_subtract_gen

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
cobol_$next_tag               cobol_$text_wd_off            cobol_ext_$cobol_com_ptr




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     26 000106       263 000116       265 000124       266 000133       267 000135       268 000141       269 000143
    270 000145       271 000147       272 000151       275 000155       279 000161       280 000162       281 000165
    282 000167       283 000171       284 000201       285 000207       287 000212       288 000213       289 000217
    290 000222       292 000225       294 000231       295 000233       296 000235       297 000240       298 000242
    299 000244       301 000245       302 000250       303 000252       304 000255       306 000257       307 000261
    308 000262       309 000266       311 000270       313 000273       314 000274       317 000301       318 000303
    319 000305       320 000311       321 000313       322 000315       323 000317       324 000323       325 000325
    326 000327       328 000330       329 000332       330 000334       331 000336       332 000337       333 000341
    334 000357       336 000370       337 000372       339 000373       342 000400       343 000401       344 000411
    345 000417       347 000422       348 000423       349 000427       350 000431       352 000434       353 000436
    354 000440       355 000461       356 000463       357 000465       359 000467       360 000470       362 000471
    364 000472       365 000474       367 000477       368 000501       369 000505       370 000507       371 000511
    372 000513       373 000517       374 000521       375 000523       377 000524       378 000526       379 000530
    380 000532       381 000535       382 000541       385 000543       386 000545       388 000546       390 000557
    391 000560       392 000567       393 000575       394 000600       395 000603       397 000606       398 000610
    399 000612       401 000616       403 000646       405 000667       406 000671       407 000672       408 000676
    410 000700       412 000703       413 000705       416 000706       417 000710       418 000724       419 000726
    420 000730       421 000737       422 000745       423 000750       424 000753       426 000756       427 000760
    428 000773       429 001004       430 001006       431 001010       432 001011       433 001015       434 001017
    436 001022       437 001024       440 001025       441 001026       442 001031       443 001040       444 001053
    446 001057       447 001067       448 001075       449 001100       451 001102       454 001111       455 001113
    456 001134       457 001142       458 001145       459 001165       460 001167       461 001171       464 001173
    466 001175       473 001176       475 001202       478 001213       479 001214       480 001223       481 001231
    482 001234       483 001237       485 001242       488 001251       490 001253       491 001255       493 001261
    495 001311       497 001332       498 001334       499 001337       500 001340       501 001344       502 001346
    504 001351       505 001353       507 001354       508 001356       509 001360       510 001361       511 001371
    512 001377       513 001402       514 001405       516 001410       517 001412       518 001425       520 001431
    521 001433       522 001444       524 001445       525 001447       527 001460       528 001462       529 001464
    530 001465       531 001471       532 001473       534 001476       536 001500       539 001501       540 001502
    541 001505       542 001514       543 001527       545 001544       546 001551       548 001565       549 001573
    550 001576       551 001601       553 001604       555 001607       557 001611       558 001615       559 001635
    561 001636       562 001642       564 001662       566 001663       567 001705       568 001713       570 001715
    571 001720       572 001740       574 001741       575 001744       578 001764       579 001766       580 001770
    581 001773       582 001774       583 002000       584 002002       586 002005       587 002010       589 002021
    590 002027       591 002032       592 002035       594 002040       595 002042       598 002053       599 002055
    600 002060       601 002061       602 002065       604 002067       606 002072       608 002074       612 002075
    615 002105       617 002113       618 002134       619 002137       621 002140       622 002161       624 002164
    625 002173       626 002201       627 002204       628 002211       629 002232       630 002234       631 002254
    637 002255       641 002257       643 002264       644 002271       645 002275       646 002316       649 002317
    653 002321       655 002325       656 002344       657 002365       660 002366       663 002367       665 002372
    667 002374       668 002375       669 002405       671 002411       673 002420       674 002423       675 002427
    676 002431       678 002432       679 002436       681 002440       683 002442       684 002444       686 002450
    688 002467       691 002470       694 002472       696 002475       697 002505       700 002506       703 002510
    706 002516       707 002517       708 002523       709 002525       710 002535       713 002536       715 002537
    717 002542       718 002545       719 002547       720 002555       723 002556       725 002557       727 002561
    729 002563       730 002566       731 002610       732 002616       733 002621       734 002641       735 002646
    736 002650       737 002652       738 002654       739 002675       740 002715       741 002726       742 002735
    745 002736       747 002737       749 002742       750 002743       752 002747       753 002751       754 002754
    755 002775       756 003003       757 003006       759 003026       760 003030       761 003033       762 003035
    763 003037       764 003060       765 003100       766 003111       767 003120       770 003121       772 003122
    773 003125       774 003126       775 003134       776 003145


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
