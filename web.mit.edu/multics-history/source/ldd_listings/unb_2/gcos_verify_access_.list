	COMPILATION LISTING OF SEGMENT gcos_verify_access_
	Compiled by: Multics PL/I Compiler, Release 28b, of April 11, 1983
	Compiled at: Honeywell LCPD Phoenix, System M
	Compiled on: 09/09/83  1146.2 mst Fri
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 /* *******************************************************************************************
       12*   *******************************************************************************************
       13*   *
       14*   *
       15*   *	Written by M. R. Jordan, October 1977
       16*   *
       17*   *******************************************************************************************
       18*   ******************************************************************************************* */
       19 
       20 
       21 
       22 
       23 gcos_verify_access_: proc (dirname, ename, fms_perms, buf_ptr, fms_code);
       24 
       25 dcl  buf_ptr ptr;
       26 dcl  code fixed bin(35);
       27 dcl  dirname char (*);
       28 dcl  ename char (*);
       29 dcl  error_table_$no_s_permission fixed bin(35) ext;
       30 dcl  fms_code bit (72) aligned;
       31 dcl  fms_perms bit (6);
       32 dcl  gcos_et_$fms_bad_cfdesc fixed bin(35) ext;
       33 dcl  gcos_et_$fms_perms_denied fixed bin(35) ext;
       34 dcl  gcos_et_$unimp_mme fixed bin(35) ext;
       35 dcl  gcos_fms_error_ entry (fixed bin(35), ptr, bit (72) aligned);
       36 dcl  gcos_mme_bort_$system entry options (variable);
       37 dcl  hcs_$status_ entry (char (*), char (*), fixed bin(1), ptr, ptr, fixed bin(35));
       38 
       39 	call hcs_$status_ (dirname, ename, 1, addr (status_info_branch), null (), code);
       40 	if code ^= 0 & code ^= error_table_$no_s_permission then do;
       41 	     call gcos_fms_error_ (gcos_et_$fms_bad_cfdesc, buf_ptr, fms_code);
       42 	     return;
       43 	end;
       44 
       45 
       46 	goto Access (fixed (substr (fms_perms, 1, 2), 2));
       47 
       48 
       49 Access (0):					/* none - error */
       50 
       51 	call gcos_mme_bort_$system (gcos_et_$unimp_mme,
       52 	     "Request for access other than read, write or read/write are not supported.");
       53 
       54 
       55 Access (1):					/* write */
       56 Access (3):					/* read/write */
       57 
       58 	if (status_info_branch.mode & "01010"b) ^= "01010"b then
       59 	     call gcos_fms_error_ (gcos_et_$fms_perms_denied, buf_ptr, fms_code);
       60 	return;
       61 
       62 
       63 Access (2):					/* read */
       64 
       65 	if ^substr (status_info_branch.mode, 2, 1) then call gcos_fms_error_ (gcos_et_$fms_perms_denied, buf_ptr, fms_code);
       66 	return;
       67 
  1     1 /* BEGIN INCLUDE FILE status_info_branch.incl.pl1 */
  1     2 dcl	1 status_info_branch,		/* structure returned for branch	*/
  1     3 	  2 type		bit(2),		/* 0=link, 1=seg, 2=dir		*/
  1     4 	  2 nnames	bit(16),		/* number of names for this entry	*/
  1     5 	  2 nrp		bit(18),		/* ???????			*/
  1     6 	  2 dtm		bit(36),		/* date and time last modified 	*/
  1     7 	  2 dtu		bit(36),		/* date and time last used		*/
  1     8 	  2 mode		bit(5),		/* user's access mode		*/
  1     9 	  2 pad		bit(13),
  1    10 	  2 records	bit(18);		/* number of records used		*/
  1    11 /* END INCLUDE FILE status_info_branch.incl.pl1 */
       68 
       69 
       70 
       71      end gcos_verify_access_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    09/09/83  1007.1  gcos_verify_access_.pl1           >spec>on>09/07/83-gcos>gcos_verify_access_.pl1
68           1    05/06/74  1751.6  status_info_branch.incl.pl1       >ldd>include>status_info_branch.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
buf_ptr                                parameter       pointer                  dcl 25 set ref 23 41* 55* 63*
code                            000100 automatic       fixed bin(35,0)          dcl 26 set ref 39* 40 40
dirname                                parameter       char                     unaligned dcl 27 set ref 23 39*
ename                                  parameter       char                     unaligned dcl 28 set ref 23 39*
error_table_$no_s_permission    000010 external static fixed bin(35,0)          dcl 29 ref 40
fms_code                               parameter       bit(72)                  dcl 30 set ref 23 41* 55* 63*
fms_perms                              parameter       bit(6)                   unaligned dcl 31 ref 23 46
gcos_et_$fms_bad_cfdesc         000012 external static fixed bin(35,0)          dcl 32 set ref 41*
gcos_et_$fms_perms_denied       000014 external static fixed bin(35,0)          dcl 33 set ref 55* 63*
gcos_et_$unimp_mme              000016 external static fixed bin(35,0)          dcl 34 set ref 49*
gcos_fms_error_                 000020 constant        entry                    external dcl 35 ref 41 55 63
gcos_mme_bort_$system           000022 constant        entry                    external dcl 36 ref 49
hcs_$status_                    000024 constant        entry                    external dcl 37 ref 39
mode                      3     000101 automatic       bit(5)                   level 2 packed unaligned dcl 1-2 set ref 55 63
status_info_branch              000101 automatic       structure                level 1 packed unaligned dcl 1-2 set ref 39 39

NAMES DECLARED BY EXPLICIT CONTEXT.
Access                          000000 constant        label                    array(0:3) dcl 49 set ref 46
gcos_verify_access_             000046 constant        entry                    external dcl 23

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 39 39
fixed                                                  builtin function         ref 46
null                                                   builtin function         ref 39 39
substr                                                 builtin function         ref 46 63

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       362         410     242         372
Length       610     242        26         163     120           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gcos_verify_access_                 112 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gcos_verify_access_      000100 code                        gcos_verify_access_
                         000101 status_info_branch          gcos_verify_access_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
gcos_fms_error_               gcos_mme_bort_$system         hcs_$status_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$no_s_permission  gcos_et_$fms_bad_cfdesc       gcos_et_$fms_perms_denied     gcos_et_$unimp_mme




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     23 000041        39 000066        40 000130        41 000135        42 000150        46 000151        49 000161
     55 000201        60 000222        63 000223        66 000241


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
