	COMPILATION LISTING OF SEGMENT gtss_filact_funct03_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/10/84  1308.5 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   *                                                         *
        4*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        5*   *                                                         *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 /* *************************************************************
       10*   *						   *
       11*   * Copyright (c) 1979 by Honeywell Information Systems, Inc. *
       12*   *						   *
       13*   ************************************************************* */
       14 gtss_filact_funct03_: proc (mcp_val, high_val, gseg_val, arg_ptr_val, buffer_ptr_val, code);
       15 
       16 /**	Derail FILACT function 03 (CF - Create File).
       17*
       18*	All parameters are input parameters except code.
       19*
       20*	code returned 0 => Successful.
       21*	code returned 4 => GCOS err4 (see gtss_pnterr structure).
       22*	code returned other => multics error code.
       23*
       24*   Authors: Robert J. Grimes	Created
       25*   -	  Albert N. Kepner	  1978
       26*   -	  Robert M. May
       27*   -	  David B. Ward
       28*   Change:  Dave Ward	02/24/79 $db debug switch.
       29*   Change:  Dave Ward	06/21/79 faulty error &
       30*				distinguish 4026 return.
       31*   Change:  Paul Benjamin     12/17/79 Change acls to upper case &
       32*				permission mapping to closer resemble GCOS.
       33*Change: Dave Ward	08/18/81 minor cleanup.
       34***/
       35 dcl  arg_ptr_val              ptr parm;
       36 dcl  buffer_ptr_val           ptr parm;
       37 dcl  code                     fixed bin(35)parm;
       38 dcl  gseg_val                 ptr parm;
       39 dcl  high_val                 bit(18)parm;
       40 dcl  mcp_val                  ptr parm;
       41 	mcp = mcp_val;
       42 	high_b = high_val;
       43 	high_i = fixed (high_b, 18);
       44 	gseg = gseg_val;
       45 	arg_ptr = arg_ptr_val;
       46 	buffer_ptr = buffer_ptr_val;
       47 
       48 	code = 0;					/* Successful. */
       49 
       50 /**	Obtain create file arglist. */
       51 	if					/* (CF_args.L_arglist < low_b) | */
       52 	((fixed (CF_args.L_arglist, 18) +3) > high_i) then do;
       53 return_err4:   ;
       54 	     code = 4;
       55 	     return;
       56 	end;
       57 	arglist_ptr = addrel (gseg, CF_args.L_arglist);
       58 
       59 /**	Obtain return status.	**/
       60 	call validate_status (CF_arglist.L_status_return, status_ptr);
       61 
       62 	file_name_in_ascii = (CF_args.file_name_in_bcd ^= -1);
       63 	if get_ascii_file_name (
       64 	file_name_in_ascii
       65 	, CF_arglist.L_cat_filedescr
       66 	, addr (ascii_cat_file)
       67 	, gsc
       68 	) then do;
       69 	     call could_not_create_file ("0"b, gsc);	/* Could not access file. */
       70 	     return;
       71 	end;
       72 
       73 /**	Obtain permissions.	**/
       74 	if					/* (CF_arglist.L_permissions < low_b) | */
       75 	(CF_arglist.L_permissions > high_b) then goto return_err4;
       76 	permissions_ptr = addrel (gseg, CF_arglist.L_permissions);
       77 	if substr (unspec (permissionsx), 1, 10) = "0000000010"b | unspec (permissionsx) = "0"b then
       78 	     multics_access_mode = "0"b;
       79 	else multics_access_mode = "1"b||permissionsx.e||permissionsx.w;
       80 
       81 	call get_options ("1"b, CF_arglist.L_options, now);
       82 
       83 	call gtss_expand_pathname_ (
       84 	     addr (ascii_cat_file)
       85 	     , gtss_file_values.dname
       86 	     , gtss_file_values.new_ename
       87 	     , code
       88 	     );
       89 	if code ^= 0 then do;
       90 	     call could_not_create_file ("0"b, "400500"b3); /* Could not access file. */
       91 	     return;
       92 	end;
       93 
       94 	if optionsx.option_bit.k then block_factor = 1;	/* => sizes in llinks (320 words @). */
       95 	else block_factor = 12;			/* => sizes in links (3840=12*320 words @). */
       96 
       97 /* create the file */
       98 	call msf_manager_$open (			/* Create caller's data segment. */
       99 	     gtss_file_values.dname
      100 	     , gtss_file_values.new_ename
      101 	     , fcb_ptr
      102 	     , code);
      103 	if code ^= error_table_$noentry & code ^= 0 then do;
      104 	     if db_filact_funct03 then
      105 		call com_err_ (
      106 		code
      107 		, "gtss_filact_funct03_"
      108 		, """^a>^a"" is a Multics file, not a GCOS file."
      109 		, gtss_file_values.dname
      110 		, gtss_file_values.ename
      111 		);
      112 	     call could_not_create_file ("0"b, "402500"b3); /* Could not access file. */
      113 	     return;
      114 	end;
      115 
      116 	call msf_manager_$get_ptr (
      117 	     fcb_ptr
      118 	     , 0
      119 	     , "1"b
      120 	     , sptr
      121 	     , sbc
      122 	     , code
      123 	     );
      124 	if code ^= 0 then do;
      125 	     call could_not_create_file ("0"b, "402500"b3);
      126 	     return;
      127 	end;
      128 	segment_acl_space.access_name (1) =
      129 	     "*."
      130 	     ||translate (gtss_ext_$user_id, "QWERTYUIOPASDFGHJKLZXCVBNM", "qwertyuiopasdfghjklzxcvbnm")
      131 	     ||".*";
      132 	segment_acl_space.modes (1) = "111"b;
      133 	k = 1;
      134 	if multics_access_mode ^= "0"b then do;
      135 	     segment_acl_space.access_name (2) = "*.*.*";
      136 	     segment_acl_space.modes (2) = multics_access_mode;
      137 	     k = 2;
      138 	end;
      139 
      140 	if now > 0 then call get_multics_seg_acl (
      141 	     now
      142 	     , addr (optionsx.optional_specific_permissions)
      143 	     , addr (segment_acl_space)
      144 	     );
      145 	call msf_manager_$acl_add (
      146 	     fcb_ptr
      147 	     , addr (segment_acl_space)
      148 	     , k
      149 	     , code);
      150 	if code ^= 0 then do;
      151 	     call could_not_create_file ("1"b, "400500"b3); /* Could not access file. */
      152 	     return;
      153 	end;
      154 
      155 	call msf_manager_$close (fcb_ptr);
      156 
      157 	gtss_file_values.set_switch = "0"b;
      158 	gtss_file_values.set_switch.mode_random
      159 	     , gtss_file_values.set_switch.maxll
      160 	     , gtss_file_values.set_switch.curll
      161 	     , gtss_file_values.set_switch.busy
      162 	     , gtss_file_values.set_switch.attr
      163 	     , gtss_file_values.set_switch.null_file
      164 	     , gtss_file_values.set_switch.number_allocations
      165 	     , gtss_file_values.set_switch.creation_date
      166 	     = "1"b;
      167 
      168 	gtss_file_values.version = 1;
      169 	gtss_file_values.change_name = "0"b;
      170 	gtss_file_values.ename = " ";			/* => Initial setting. */
      171 
      172 	gtss_file_values.data_flags.mode_random = optionsx.option_bit.b; /* "1"=>random | "0"=>linked. */
      173 	gtss_file_values.data_fields.maxll = fixed (optionsx.max_file_size, 18)*block_factor;
      174 	gtss_file_values.data_fields.curll = fixed (optionsx.initial_file_size, 18)*block_factor;
      175 	gtss_file_values.data_flags.busy = "0"b ;	/* set file not data_flags.busy? */
      176 	if optionsx.option_bit.i then
      177 	     gtss_file_values.attributes.attr = optionsx.user_specified_attributes;
      178 	else
      179 	gtss_file_values.attributes.attr = "0"b;
      180 	gtss_file_values.data_flags.null_file = "1"b;
      181 	gtss_file_values.data_fields.number_allocations = 0;
      182 	string (date_val) = date ();
      183 	gtss_file_values.creation_date = mm||dd||yy;
      184 
      185 	call gtss_attributes_mgr_$set (addr (gtss_file_values), code);
      186 	if code ^= 0 then do;
      187 	     call could_not_create_file ("1"b, "400500"b3); /* Could not access file. */
      188 	     return;
      189 	end;
      190 
      191 /**	Following check not in use by GCOS.
      192*	if optionsx.option_bit.c = "0"b then
      193*	     status_word.status = "402600"b3;
      194*	else
      195***/
      196 	if optionsx.option_bit.d then
      197 	     status_word.status = "403100"b3;
      198 	else
      199 	status_word.status = "400000"b3;
      200 	return;
      201 
      202 /**	(CF) Create File Declarations.	**/
      203 
      204 dcl 1 CF_args		aligned based(arg_ptr)
      205 ,     3 word1
      206 ,       4 file_name_in_bcd	fixed bin(17)unal	/* -1 => file name in BCD.*/
      207 ,       4 L_arglist		bit(18)unal
      208 ,     3 word2
      209 ,       4 CF_function_no	fixed bin(17)unal
      210 ,       4 L_buffer		bit(18)unal
      211 ;
      212 
      213 dcl 1 CF_arglist		aligned based(arglist_ptr)
      214 ,     3 word1
      215 ,       4 L_status_return	bit(18)unal
      216 ,       4 zero		bit(18)unal
      217 ,     3 word2
      218 ,       4 L_cat_filedescr	bit(18)unal
      219 ,       4 L_permissions	bit(18)unal
      220 ,     3 word3
      221 ,       4 L_options		bit(18)unal
      222 ,       4 zero2		bit(18)unal
      223 ;
      224 
  1     1 /* BEGIN INCLUDE FILE gtss_filact_intp1.incl.pl1 */
  1     2 /*
  1     3*  Created: (Wardd Multics)  10/05/78 1600.9 mst Thu 
  1     4**/
  1     5 validate_status: proc (status_address, sp);
  1     6 
  1     7 dcl  status_address           bit (18)parm;
  1     8 dcl  sp                       ptr parm;
  1     9 dcl  status_pointer           ptr init(null());
  1    10 
  1    11 
  1    12 /**	Assure 2 word status not above memory.	**/
  1    13 	     if (status_address >= high_b) then goto return_err4;
  1    14 
  1    15 /**	Assure status words and arglist do not overlap.	**/
  1    16 	     if (fixed(status_address,18)+1) >= fixed(filact_args.L_arglist,18) &
  1    17 	     fixed (status_address, 18) <= (fixed (filact_args.L_arglist, 18)+ 1) then goto return_err4;
  1    18 
  1    19 /**	Obtain pointer to status words.	**/
  1    20 	     sp, status_pointer = addrel (gseg, status_address);
  1    21 	     unspec (status_pointer -> status_word) = "0"b;
  1    22 	     return;
  1    23 
  1    24 dcl 1 filact_args		aligned based(arg_ptr), /* 1st word only. */
  1    25     2 zero		bit(18)unal,
  1    26     2 L_arglist		bit(18)unal;
  1    27 	end					/* validate_status */;
  1    28 /*   END INCLUDE FILE gtss_filact_intp1.incl.pl1 */
      225 
      226 
  2     1 /* BEGIN INCLUDE FILE gtss_filact_intp2.incl.pl1 */
  2     2 /*
  2     3*  Created: (Wardd Multics)  10/05/78 1601.2 mst Thu 
  2     4**/
  2     5 
  2     6 /* Change: Dave Ward	08/18/81 correct stringrange error.
  2     7**/
  2     8 get_ascii_file_name: proc (fnia, cfdl, acfp, grc)returns (bit (1));
  2     9 
  2    10 /**	Obtain the catalog/file description
  2    11*	in ascii.
  2    12*	Reset gcos retrun code (grc) only if error.
  2    13***/
  2    14 dcl  fnia                     bit(1)parm	/* "1"b => file name in ascii. */;
  2    15 dcl  cfdl                     bit(18)parm	/* Location of catalog file description. */;
  2    16 dcl  acfp                     ptr parm	/* Pointer to ascii_cat_file structure. */;
  2    17 dcl  grc			bit(18)parm	/* GCOS return status code. */;
  2    18 
  2    19 	ap = acfp;				/* Local value. */
  2    20 	cat_filedescr_name_offset = "0"b;		/* => offset to "current" name in catalog file description. */
  2    21 
  2    22 	if					/* (cfdl < low_b) | */
  2    23 	(fixed (cfdl, 18)+5 > high_i) then do;
  2    24 	     goto return_err4;
  2    25 	end;					/* Require USERID and atleast file name. */
  2    26 	descriptor_ptr = addrel (gseg, cfdl);
  2    27 
  2    28 	if cfd2.USERID = -1 then do;			/* cfd2.USERID is that of current terminal user. */
  2    29 	     descriptor_ptr -> bit72 = gtss_ust.lid;
  2    30 	     cfd2.USERID_password = (12)"20"b3;
  2    31 	end;
  2    32 
  2    33 	cat_filedescr_name_offset = cfdl;
  2    34 
  2    35 	do nic = 0 to 5;				/* Search for end of list. */
  2    36 	     if nic = 0 then
  2    37 		if cdf4.end_of_list = -1 then do;	/* Only a USERID. */
  2    38 		     acf.nn = 1;
  2    39 		     goto gal;
  2    40 		end;
  2    41 
  2    42 	     if (fixed (cfdl, 18)+ (nic*2)+6) > high_i then do;
  2    43 		goto return_err4;
  2    44 	     end;					/* cat/filedescr entry out of memory. */
  2    45 
  2    46 	     if cfd2.end_of_list = -1 then do;		/* cat/filedescr isolated. */
  2    47 		cat_filedescr_name_offset =
  2    48 		     bit (fixed (fixed (cfdl, 18) + (nic*4) + 4, 18)); /* Offset to name entry (global). */
  2    49 		acf.nn = nic+2;
  2    50 
  2    51 gal:		;
  2    52 		do i = 1 to acf.nn;
  2    53 
  2    54 /**	Store catalog file description for expand path. **/
  2    55 
  2    56 		     if (i > 1) & (i = acf.nn) & fnia then do;
  2    57 			callers_buf.restore_switch = "000000000001"b3; /* => file name in ascii. */
  2    58 			acf.name (i) = translate (cfd3 (i).name,
  2    59 			     "abcdefghijklmnopqrstuvwxyz",
  2    60 			     "ABCDEFGHIJKLMNOPQRSTUVWXYZ");
  2    61 		     end;
  2    62 		     else
  2    63 		     call gtss_bcd_ascii_$lc (
  2    64 			addr (cfd3 (i).name)
  2    65 			, 12
  2    66 			, addr (acf.name (i))
  2    67 			);
  2    68 		end;
  2    69 
  2    70 		if substr (string (gtss_ext_$db), 09, 11) then do;
  2    71 		     call ioa_ ("cat/filedescr:");
  2    72 		     do i = 1 to acf.nn;
  2    73 			call ioa_ ("^3i. ""^a""", i, acf.name (i));
  2    74 		     end;
  2    75 		end;
  2    76 
  2    77 		if substr (acf.name (1), 1, 6) = "!!!!!!" then
  2    78 		     acf.name (1) = gse_ext_$umc_name;
  2    79 		callers_buf.file_id_in_ascii =
  2    80 		     substr (acf.name (acf.nn), 1, length (callers_buf.file_id_in_ascii));
  2    81 
  2    82 /* Determine if there are illegal characters
  2    83*   in the name.
  2    84**/
  2    85 		do i = 1 to acf.nn;
  2    86 		     if acf.name (i) = "*src" then return ("0"b);
  2    87 		     if verify (
  2    88 		     rtrim (acf.name (i))
  2    89 		     , "0123456789abcdefghijklmnopqrstuvwxyz.-_"
  2    90 		     )>0 then do;
  2    91 			grc = "403400"b3;		/* Yes, illegal characters. */
  2    92 			return ("1"b);
  2    93 		     end;
  2    94 		end;
  2    95 
  2    96 		return ("0"b);			/* Success. */
  2    97 	     end;
  2    98 	end;
  2    99 
  2   100 /**	cat/filedescr has no end of list marker. **/
  2   101 	cat_filedescr_name_offset = "0"b;
  2   102 	grc = "403500"b3;				/* Illegal cat/file desc. */
  2   103 	return ("1"b);				/* Failure. */
  2   104 
  2   105 dcl  ap                       ptr	/* Local acfp */;
  2   106 dcl 1 acf aligned based(ap) like ascii_cat_file;
  2   107 
  2   108 dcl 1 callers_buf		aligned based(buffer_ptr),
  2   109       3 restore_switch	bit(36),
  2   110       3 file_id_in_ascii	char(8);
  2   111 
  2   112 dcl 1 cfd2		aligned based(descriptor_ptr)	/* 2nd description of catalog/file list. */
  2   113 ,     3 user_master_catalog
  2   114 ,       4 USERID		fixed bin(71)
  2   115 ,       4 USERID_password	bit(72)
  2   116 ,     3 intermediate_catalogs	(nic)
  2   117 ,       4 CATALOG		bit(72)
  2   118 ,       4 CATALOG_password	bit(72)
  2   119 ,     3 file_to_be_accessed
  2   120 ,       4 FILENAME		bit(72)
  2   121 ,       4 FILENAME_password	bit(72)
  2   122 ,     3 end_of_list		fixed bin(35)
  2   123 ;
  2   124 
  2   125 dcl 1 cfd3		(7) aligned based(descriptor_ptr)	/* 3rd description of catalog/file list. */
  2   126 ,     3 name		char(8)
  2   127 ,     3 password		bit(72)
  2   128 ;
  2   129 
  2   130 dcl 1 cdf4		aligned based(descriptor_ptr)	/* 4th description of catalog/file list. */
  2   131 ,     3 user_master_catalog
  2   132 ,       4 USERID		fixed bin(71)
  2   133 ,       4 USERID_password	bit(72)
  2   134 ,     3 end_of_list		fixed bin(35)
  2   135 ;
  2   136      end						/* get_ascii_file_name */;
  2   137 
  2   138 /*   END INCLUDE FILE gtss_filact_intp2.incl.pl1 */
      227 
      228 
  3     1 /* BEGIN INCLUDE FILE gtss_filact_intp3.incl.pl1 */
  3     2 /*
  3     3*  Created: (Wardd Multics)  10/05/78 1601.4 mst Thu 
  3     4**/
  3     5 get_faulty_cat_file_entry: proc returns (bit (18));
  3     6 
  3     7 /**	Locate offset to catalog file description entry
  3     8*	that caused search failure locating Multics entry.
  3     9***/
  3    10 	     return (cat_filedescr_name_offset);
  3    11 	end					/* get_faulty_cat_file_entry */;
  3    12 /*   END INCLUDE FILE gtss_filact_intp3.incl.pl1 */
      229 
      230 
  4     1 /* BEGIN INCLUDE FILE gtss_filact_intp5.incl.pl1 */
  4     2 /*
  4     3*  Created: (Wardd Multics)  10/05/78 1602.7 mst Thu 
  4     4*  Modified  Ron Barstad  82-09-23  to fix unspec-substr err of permission bit
  4     5**/
  4     6 get_multics_seg_acl: proc (n, opp, sap);
  4     7 
  4     8 /**	Obtain a list of (n) Multics segment access mode values
  4     9*	in the segment_acl structure (based sap) from a
  4    10*	filact options list (based opp).
  4    11***/
  4    12 dcl  n                        fixed bin parm;
  4    13 dcl  opp                      ptr parm;
  4    14 dcl  sap                      ptr parm;
  4    15 
  4    16 	op = opp;
  4    17 	acl_ptr = sap;
  4    18 	acl_count = max_options;
  4    19 
  4    20 	ln = n;					/* Local n. */
  4    21 	do i = 1 to ln while (i <= max_options);
  4    22 						/* Ignore create permission.      Ignore delete also. */
  4    23 	     if substr (unspec (permission_bit (i)), 1, 10) ^= "0000000010"b & unspec (permission_bit (i)) ^= "0"b then do;
  4    24 		k = k+1;
  4    25 		if permission_bit.bits10_35 (i) = "00000001"b then segment_acl.modes (k) = "0"b; /* Exclude => null */
  4    26 		else segment_acl.modes (k) = "1"b||permission_bit.e (i)||permission_bit.w (i);
  4    27 		call gtss_bcd_ascii_ (addr (ol (i).USERID), 12, addr (id));
  4    28 		segment_acl.access_name (k) = "*."||rtrim (id)||".*";
  4    29 	     end;
  4    30 	end;
  4    31 	return;
  4    32 
  4    33 dcl 1 ol (ln)aligned based(op) like optionsx.optional_specific_permissions;
  4    34 dcl  id                       char(12)aligned;
  4    35 dcl  ln                       fixed bin;
  4    36 dcl  op                       ptr init(null());
  4    37      end						/* get_multics_seg_acl */;
  4    38 /**	Multics include file "acls".	**/
  5     1 
  5     2      declare	/*  Structures used in acl manipulation.  - J.M. Broughton 07/27/73 */
  5     3 
  5     4 
  5     5 	1 segment_acl (acl_count) based (acl_ptr) aligned,
  5     6 	  2 access_name character (32),			/* process to which this entry applies */
  5     7 	  2 modes bit (36),					/* read, execute, and write */
  5     8 	  2 zero_pad bit (36),				/* for extended acl */
  5     9 	  2 status_code fixed bin(35),			/* standard error code for this entry only */
  5    10 
  5    11 
  5    12 	1 dir_acl (acl_count) based (acl_ptr) aligned,
  5    13 	  2 access_name character (32),			/* process to which entry applys */
  5    14 	  2 dir_modes bit (36),				/* status, modify, and append */
  5    15 	  2 status_code fixed bin(35),			/* as above */
  5    16 
  5    17 
  5    18 	acl_count fixed bin,				/* number of entries in these structures */
  5    19 	acl_ptr pointer;					/* pointer to these structures */
  5    20 
  5    21 
  4    39 
  4    40 /*   END INCLUDE FILE gtss_filact_intp5.incl.pl1 */
      231 
      232 
      233 could_not_create_file: proc (df, rsc);
      234 
      235 /* Could not create gcos file. */
      236 dcl  df                       bit(1)parm;
      237 dcl  rsc                      bit(18)parm;
      238 	     if df then
      239 		call hcs_$delentry_file (
      240 		gtss_file_values.dname
      241 		, gtss_file_values.new_ename
      242 		, (code)				/* Don't set. */
      243 		);
      244 	     status_word.pd = get_faulty_cat_file_entry ();
      245 	     status_word.status = rsc;
      246 	     return;
      247 	end					/* could_not_create_file */;
      248 
      249 get_options: proc (cfua, L_options, n);
      250 
      251 /**	Isolate the options list.
      252*	Variables "options_ptr" and "now" set.
      253***/
      254 dcl  cfua                     bit(1)parm	/* "1"b => Check that user attributes word available. */;
      255 dcl  L_options                bit(18)parm;
      256 dcl  n                        fixed bin parm	/* = now global veriable. */;
      257 
      258 	     options_ptr = null ();
      259 	     n = 0;
      260 	     mnw = fixed (L_options, 18)+3;		/* min word offset for options structure. */
      261 
      262 /**	Obtain options. **/
      263 	     if					/* (L_options < low_b) | */
      264 	     (mnw > high_i) then goto return_err4;
      265 	     options_ptr = addrel (gseg, L_options);
      266 
      267 	     do now = 0 by 1;
      268 		if optionsx.end_of_list = -1 then do;
      269 		     if cfua then
      270 			if optionsx.option_bit.i then /* Verify user attributes within memory. */
      271 			     if (mnw+ (now*3)+1)>high_i then goto return_err4;
      272 		     n = now;
      273 		     return;
      274 		end;
      275 		if (mnw+ ((now+1)*3))>high_i then goto return_err4;
      276 	     end;
      277 
      278 dcl  mnw                      fixed bin(24);
      279 	end					/* get_options */;
      280 
      281 
      282 /** Declarations for gtss_drl_filact_:
      283*     IDENTIFIER		ATTRIBUTES	**/
      284 dcl  access_mode              bit (6);
      285 dcl  addr                     builtin;
      286 dcl  addrel                   builtin;
      287 dcl  aft_code                 fixed bin (35);
      288 dcl  aft_name                 char (8);
      289 dcl  altname                  char (8) aligned based (altname_ptr);
      290 dcl  altname_ptr              ptr init(null());
      291 dcl  append_mode              bit (36) static int options(constant)init ("100000000000"b3);
      292 dcl  arglist_ptr              ptr init(null());
      293 dcl  arg_ptr                  ptr init(null());
      294 dcl  attribute_segment_ptr    ptr init(null());
      295 dcl  bit                      builtin;
      296 dcl  bit72                    bit(72)aligned based;
      297 dcl  bit_count                fixed bin (24);
      298 dcl  block_factor             fixed bin;
      299 dcl  cat_filedescr_name_offset bit(18);
      300 dcl  cdate                    fixed bin (71);
      301 dcl  clim                     float bin;
      302 dcl  crf                      fixed bin(24);
      303 dcl  csp                      float bin;
      304 dcl  date                     builtin;
      305 dcl  delete_$path             entry (char (*), char (*), bit (6), char (*), fixed bin (35));
      306 dcl  descriptor_address       bit (18);
      307 dcl  descriptor_ptr           ptr init(null());
      308 dcl  dir_name                 char (168);
      309 dcl  divide                   builtin;
      310 dcl  entry_name               char (12) init (" ");
      311 dcl  error_table_$incorrect_access fixed bin (35) ext;
      312 dcl  error_table_$moderr      fixed bin (35) ext;
      313 dcl  error_table_$namedup     fixed bin (35) ext;
      314 dcl  error_table_$noentry     fixed bin (35) ext;
      315 dcl  error_table_$nomatch     fixed bin (35) ext;
      316 dcl  error_table_$not_seg_type fixed bin(35)ext;
      317 dcl  error_table_$no_dir      fixed bin (35) ext;
      318 dcl  error_table_$segknown    fixed bin (35) ext;
      319 dcl  error_table_$seg_not_found fixed bin (35) ext;
      320 dcl  execute_mode             bit (36) static int options(constant)init ("200000000000"b3);
      321 dcl  fcb_ptr                  ptr;
      322 dcl  file_name_in_ascii       bit(1);
      323 dcl  file_no                  fixed bin (24);
      324 dcl  fixed                    builtin;
      325 dcl  FMS_block_ptr            ptr init(null());
      326 dcl  four_NULS                char (4)static int options (constant)init ((4)" ") /* 4 octal 000's */;
      327 dcl  gsc                      bit(18);
      328 dcl  gseg                     ptr init(null());
      329 dcl  gtss_fail                condition;
      330 dcl  hbound                   builtin;
      331 dcl  hcs_$add_acl_entries     entry (char (*), char (*), ptr, fixed bin(24), fixed bin (35));
      332 dcl  hcs_$add_dir_acl_entries entry (char (*), char (*), ptr, fixed bin, fixed bin (35));
      333 dcl  hcs_$add_inacl_entries   entry (char (*), char (*), ptr, fixed bin, fixed bin (3), fixed bin (35));
      334 dcl  hcs_$append_branchx      entry (char (*), char (*), fixed bin (5), (3) fixed bin (3), char (*), fixed bin (1), fixed bin (1), fixed bin (24), fixed bin (35));
      335 dcl  hcs_$delentry_file       entry(char(*),char(*),fixed bin(35));
      336 dcl  hcs_$initiate            entry (char (*), char (*), char (*), fixed bin (1), fixed bin (2), ptr, fixed bin (35));
      337 dcl  hcs_$make_seg            entry (char (*), char (*), char (*), fixed bin (5), ptr, fixed bin (35));
      338 dcl  hcs_$quota_read          entry (char (*), fixed bin (18), fixed bin (71), bit (36) aligned, bit (36), fixed bin (1), fixed bin (18), fixed bin (35));
      339 dcl  hcs_$status_long         entry (char (*), char (*), fixed bin (1), ptr,ptr, fixed bin (35));
      340 dcl  high_b                   bit(18)aligned;
      341 dcl  high_i                   fixed bin(18)aligned;
      342 dcl  i                        fixed bin(24);
      343 dcl  increment                fixed bin(24);
      344 dcl  ioa_                     entry options (variable);
      345 dcl  k                        fixed bin;
      346 dcl  l                        fixed bin(24);
      347 dcl  lbound                   builtin;
      348 dcl  low_b                    bit(18)aligned static int options(constant)init("000147"b3) /* 103 dec. */;
      349 dcl  low_i                    fixed bin(18)aligned static int options(constant)init(103);
      350 dcl  max_options              fixed bin static int options(constant)init (100);
      351 dcl  max_resources            fixed bin static int options(constant)init (99999);
      352 dcl  minus_one                bit (36) static int options(constant)init ((36)"1"b);
      353 dcl  mlim                     float bin;
      354 dcl  mod                      builtin;
      355 dcl  modify_mode              bit (36) static int options(constant)init ("200000000000"b3);
      356 dcl  msf_manager_$acl_add     entry (ptr, ptr, fixed bin, fixed bin(35));
      357 dcl  msf_manager_$close       entry (ptr);
      358 dcl  msf_manager_$get_ptr     entry (ptr, fixed bin, bit(1), ptr, fixed bin(24), fixed bin(35));
      359 dcl  msf_manager_$open        entry (char(*), char(*), ptr, fixed bin(35));
      360 dcl  msp                      float bin;
      361 dcl  multics_access_mode      bit(3);
      362 dcl  nic                      fixed bin(24);
      363 dcl  path_name                char (168) varying;
      364 dcl  person_id                char (22);
      365 dcl  quota                    fixed bin (18);
      366 dcl  read_mode                bit (36) static int options(constant)init ("400000000000"b3);
      367 dcl  rel                      builtin;
      368 dcl  rings                    (3) fixed bin (3) static int options(constant)init (4, 4, 4);
      369 dcl  sbc                      fixed bin(24);
      370 dcl  seg_acl_count            fixed bin;
      371 dcl  shlim                    (0:7) float bin;
      372 dcl  shsp                     (0:7) float bin;
      373 dcl  size                     builtin;
      374 dcl  smc_entry_ptr            ptr init(null());
      375 dcl  sons_lvid                bit (36);
      376 dcl  sptr                     ptr;
      377 dcl  status                   fixed bin (24);
      378 dcl  status_mode              bit (36) static int options(constant)init ("400000000000"b3);
      379 dcl  status_ptr               ptr init(null());
      380 dcl  substr                   builtin;
      381 dcl  switches                 bit (6) static int options(constant)init ("37"b3);
      382 dcl  tacc_sw                  fixed bin (1);
      383 dcl  translate                builtin;
      384 dcl  trp                      fixed bin (71);
      385 dcl  tup                      bit (36) aligned;
      386 dcl  two_words                bit (72) based;
      387 dcl  type                     fixed bin (2);
      388 dcl  used                     fixed bin (18);
      389 dcl  user_attribute_word      bit (35);
      390 dcl  user_info_$limits        entry (float bin, float bin, fixed bin (71), fixed bin(24), (0:7) float bin, float bin, float bin, (0:7) float bin);
      391 dcl  write_mode               bit (36) static int options(constant)init ("100000000000"b3);
      392 
      393 dcl 1 date_val,
      394       2 yy char(2)unal,
      395       2 mm char(2)unal,
      396       2 dd char(2)unal;
      397 
      398 dcl 1 segment_acl_space (max_options) like segment_acl;
      399 
      400 dcl 1 status2		aligned based(status_ptr)
      401 ,     3 word1
      402 ,       4 status_code	bit(12)unal
      403 ,       4 zero1		bit(06)unal
      404 ,       4 zero2		bit(18)unal
      405 ,     3 word2
      406 ,       4 L_bcd_message	bit(18)unal
      407 ,       4 message_words	fixed bin(17)unal
      408 ;
      409 
      410 dcl  1 status_word		aligned based(status_ptr)
      411 ,      3 status		bit(18)unal
      412 ,      3 pd		bit(18)unal
      413 ,      3 null_bit		bit(01)unal
      414 ,      3 user_attributes	bit(35)unal
      415 ;
      416 
  6     1 /* BEGIN INCLUDE FILE gtss_ust_ext_.incl.pl1 */
  6     2 /* UST: User Status Table 
  6     3*   definitions based on 
  6     4*   System Tables, Order number DD14-01E, January 1981
  6     5*   Section 15, Time Sharing System
  6     6*
  6     7*   Authors: Robert J. Grimes	Created
  6     8*   -	  Albert N. Kepner	  1978
  6     9*   -	  Robert M. May
  6    10*   -	  David B. Ward
  6    11*   Change:  Dave Ward	02/23/79 Level 4 numbering.
  6    12*   Change:  Ron Barstad  83-07-12 Repaired damaged formating and word offset comments
  6    13*                                  Brought up to 4JS3 functionality
  6    14**/
  6    15 /* octal word offsets of entries */
  6    16 dcl 1 gtss_ust_ext_$ust aligned ext,
  6    17       3 gtss_ust,
  6    18 /* 0-1  */	4 lid		bit (72),
  6    19 /* 2    */	4 lstp		bit (36),
  6    20 /* 3    */	4 ltin		bit (36),
  6    21 /* 4    */	4 lstio,
  6    22 			5 no_of_chars_by_8  fixed bin (18) uns unal,
  6    23 			5 no_of_disk_io     fixed bin (18) uns unal,
  6    24 /* 5    */	4 lsnub		bit (36),
  6    25 /* 6-7  */	4 lchg		bit (72),
  6    26 /* 10   */	4 lbuf,
  6    27 			5 address		bit (18)unaligned,
  6    28 			5 tally		bit (1)unaligned,
  6    29 			5 terminal_type	bit (5)unaligned,
  6    30 			5 station_id	bit (12)unaligned,
  6    31 /* 11-12 */	4 liost (0:1)	bit (36),
  6    32 /* 13   */	4 lcc		bit (36),
  6    33 /* 14   */	4 lback,
  6    34 			5 fill1		bit (18) unaligned,
  6    35 			5 gwake		fixed bin (17) unaligned,
  6    36 /* 15   */	4 lflag,
  6    37 			5 mp_list		bit (18) unaligned,
  6    38 			5 flags unaligned,
  6    39 				6 b18		bit (1) unaligned,
  6    40 				6 b19		bit (1) unaligned,
  6    41 				6 b20		bit (1) unaligned,
  6    42 				6 b21		bit (1) unaligned,
  6    43 				6 b22		bit (1) unaligned,
  6    44 				6 b23		bit (1) unaligned,
  6    45 				6 b24		bit (1) unaligned,
  6    46 				6 b25		bit (1) unaligned,
  6    47 				6 b26		bit (1) unaligned,
  6    48 				6 b27		bit (1) unaligned,
  6    49 				6 b28		bit (1) unaligned,
  6    50 				6 b29		bit (1) unaligned,
  6    51 				6 b30		bit (1) unaligned,
  6    52 				6 b31		bit (1) unaligned,
  6    53 				6 b32		bit (1) unaligned,
  6    54 				6 b33		bit (1) unaligned,
  6    55 				6 b34		bit (1) unaligned,
  6    56 				6 b35		bit (1) unaligned,
  6    57 /* 16   */	4 lkdss		bit (36),
  6    58 /* 17   */	4 lfile,
  6    59 			5 program_stack	fixed bin (17) unal,
  6    60 			5 file_list_ptr	bit (18) unal,
  6    61 /* 20   */	4 lttys		bit (36),
  6    62 /* 21   */	4 lswth,
  6    63 			5 b0		bit (1) unaligned,
  6    64 			5 b1		bit (1) unaligned,
  6    65 			5 b2		bit (1) unaligned,
  6    66 			5 b3		bit (1) unaligned,
  6    67 			5 b4		bit (1) unaligned,
  6    68 			5 b5		bit (1) unaligned,
  6    69 			5 b6		bit (1) unaligned,
  6    70 			5 b7		bit (1) unaligned,
  6    71 			5 b8		bit (1) unaligned,
  6    72 			5 b9		bit (1) unaligned,
  6    73 			5 b10		bit (1) unaligned,
  6    74 			5 b11		bit (1) unaligned,
  6    75 			5 b12		bit (1) unaligned,
  6    76 			5 b13		bit (1) unaligned,
  6    77 			5 b14		bit (1) unaligned,
  6    78 			5 b15		bit (1) unaligned,
  6    79 			5 b16		bit (1) unaligned,
  6    80 			5 b17		bit (1) unaligned,
  6    81 			5 b18		bit (1) unaligned,
  6    82 			5 b19		bit (1) unaligned,
  6    83 			5 b20		bit (1) unaligned,
  6    84 			5 b21		bit (1) unaligned,
  6    85 			5 b22		bit (1) unaligned,
  6    86 			5 b23		bit (1) unaligned,
  6    87 			5 b24		bit (1) unaligned,
  6    88 			5 b25		bit (1) unaligned,
  6    89 			5 b26		bit (1) unaligned,
  6    90 			5 b27		bit (1) unaligned,
  6    91 			5 b28		bit (1) unaligned,
  6    92 			5 b29		bit (1) unaligned,
  6    93 			5 b30		bit (1) unaligned,
  6    94 			5 b31		bit (1) unaligned,
  6    95 			5 b32		bit (1) unaligned,
  6    96 			5 b33		bit (1) unaligned,
  6    97 			5 b34		bit (1) unaligned,
  6    98 			5 b35		bit (1) unaligned,
  6    99 /* 22   */	4 lsize,
  6   100 			5 bar		fixed bin (17) unaligned,
  6   101 			5 limit		bit (18) unaligned,
  6   102 /* 23... */	4 lswap,
  6   103 			5 fill		bit (18) unal,
  6   104 			5 size		bit (18) unal,
  6   105 /* ...24 */	4 transfer_cell	bit (36) unal,
  6   106 /* 25   */	4 lerrm		bit (36),
  6   107 /* 26-37 */	4 lcfil (0:9)	bit (36),
  6   108 /* 40   */	4 lsybc,
  6   109 			5 b0_17		fixed bin (17) unaligned,
  6   110 			5 b18_35		fixed bin (17) unaligned,
  6   111 /* 41-42 */	4 lstem (0:1)	bit (36),
  6   112 /* 43    */	4 lcals,
  6   113 			5 b0_17		fixed bin (17) unaligned,
  6   114 			5 b18_35		bit (18) unaligned,
  6   115 /* 44-51 */	4 subsystems (3),
  6   116 			5 content_lswap,
  6   117 				6 fill		bit (18) unal,
  6   118 				6 size		bit (18) unal,
  6   119 			5 tally_address	fixed bin (17) unaligned,
  6   120 			5 ss_flags	bit (18) unaligned,
  6   121 /* 52   */	4 ltalc,
  6   122 			5 tod		fixed bin (17) unaligned,
  6   123 			5 startup		fixed bin (17) unaligned,
  6   124 /* 53   */	4 lspts		fixed bin (35),
  6   125 /* 54   */	4 lflg2,
  6   126 			5 b0		bit (1) unaligned,
  6   127 			5 b1		bit (1) unaligned,
  6   128 			5 b2		bit (1) unaligned,
  6   129 			5 b3		bit (1) unaligned,
  6   130 			5 b4		bit (1) unaligned,
  6   131 			5 b5		bit (1) unaligned,
  6   132 			5 b6		bit (1) unaligned,
  6   133 			5 b7		bit (1) unaligned,
  6   134 			5 b8		bit (1) unaligned,
  6   135 			5 b9		bit (1) unaligned,
  6   136 			5 b10		bit (1) unaligned,
  6   137 			5 b11		bit (1) unaligned,
  6   138 			5 b12		bit (1) unaligned,
  6   139 			5 b13		bit (1) unaligned,
  6   140 			5 b14		bit (1) unaligned,
  6   141 			5 b15		bit (1) unaligned,
  6   142 			5 b16		bit (1) unaligned,
  6   143 			5 b17		bit (1) unaligned,
  6   144 			5 b18		bit (1) unaligned,
  6   145 			5 b19		bit (1) unaligned,
  6   146 			5 b20		bit (1) unaligned,
  6   147 			5 b21		bit (1) unaligned,
  6   148 			5 b22		bit (1) unaligned,
  6   149 			5 b23		bit (1) unaligned,
  6   150 			5 b24		bit (1) unaligned,
  6   151 			5 b25		bit (1) unaligned,
  6   152 			5 b26		bit (1) unaligned,
  6   153 			5 b27		bit (1) unaligned,
  6   154 			5 b28		bit (1) unaligned,
  6   155 			5 b29		bit (1) unaligned,
  6   156 			5 b30		bit (1) unaligned,
  6   157 			5 b31		bit (1) unaligned,
  6   158 			5 b32		bit (1) unaligned,
  6   159 			5 b33		bit (1) unaligned,
  6   160 			5 b34		bit (1) unaligned,
  6   161 			5 b35		bit (1) unaligned,
  6   162 /* 55-60 */	4 lsftm (0:3)	bit (36),
  6   163 /* 61    */	4 lsprt		fixed bin (35),
  6   164 /* 62    */	4 ltrm		bit (36),
  6   165 /* 63    */	4 linno		fixed bin (35),
  6   166 /* 64    */	4 lincr		fixed bin (35),
  6   167 /* 65    */	4 ltdes		bit (36),
  6   168 /* 66    */	4 lbptr		bit (36),
  6   169 /* 67    */	4 lpptr,
  6   170 			5 last_file_pat_ptr	bin (18) uns unal,
  6   171 			5 lpptr_reserved	bin (18) uns unal,
  6   172 /* 70    */	4 lsclp		bit (36),
  6   173 /* 71    */	4 limit		fixed bin (35),
  6   174 /* 72    */	4 lacpt,
  6   175 			5 jout_pat_offset	bit (18) unal,
  6   176 			5 permissions unal,
  6   177 				6 lodx		bit (1) unal,
  6   178 				6 cardin		bit (1) unal,
  6   179 				6 talk		bit (1) unal,
  6   180 				6 lods		bit (1) unal,
  6   181 			5 cardin_urgency	bit (14) unal,
  6   182 /* 73    */	4 ldrl,
  6   183 			5 ilc		bit (18) unaligned,
  6   184 			5 code		fixed bin (17) unaligned,
  6   185 /* 74    */	4 ljsnb		bit (36),
  6   186 /* 75    */	4 ltm0		bit (36),
  6   187 /* 76    */	4 ltm1		bit (36),
  6   188 /* 77    */	4 ltm2		bit (36),
  6   189 /* 100   */	4 ltm3		bit (36),
  6   190 /* 101   */	4 ltm4		bit (36),
  6   191 /* 102   */	4 ltm5		bit (36),
  6   192 /* 103   */	4 ltmwt		bit (36),
  6   193 /* 104   */	4 ltmrs		bit (36),
  6   194 /* 105   */	4 ltc0		bit (36),
  6   195 /* 106   */	4 ltc1		bit (36),
  6   196 /* 107   */	4 ltc2		bit (36),
  6   197 /* 110   */	4 lct3		bit (36),
  6   198 /* 111   */	4 ltc4		bit (36),
  6   199 /* 112   */	4 ltc5		bit (36),
  6   200 /* 113   */	4 ltcw		bit (36),
  6   201 /* 114   */	4 lkst		bit (36),
  6   202 /* 115   */	4 lkst2		bit (36),
  6   203 /* 116   */	4 lkcc		bit (36),
  6   204 /* 117   */	4 lkms		bit (36),
  6   205 /* 120-121 */	4 lksdc (0:1)	bit (36),
  6   206 /* 122   */	4 lkntp		bit (36),
  6   207 /* 123   */	4 lkrdc		bit (36),
  6   208 /* 124   */	4 lpqf		bit (36),
  6   209 /* 125   */	4 lpqb		bit (36),
  6   210 /* 126   */	4 lustl		bit (36),
  6   211 /* 127   */	4 ltemp		bit (36),
  6   212 /* 130   */	4 lrtll,
  6   213 			5 word_length	fixed bin unaligned,
  6   214 			5 char_length	fixed bin unaligned,
  6   215 /* 131   */	4 ltim		bit (36),
  6   216 /* 132   */	4 lcfio,
  6   217 			5 sect_out	fixed bin(18)unsigned unal,
  6   218 			5 sect_in		fixed bin(18)unsigned unal,
  6   219 /* 133   */	4 lcfst,
  6   220 			5 initial_sect_out	fixed bin(18)unsigned unal,
  6   221 			5 start_term	fixed bin(18)unsigned unal,
  6   222 /* 134   */	4 lcmpt		bit (36),
  6   223 /* 135   */	4 lcjid		bit (36),
  6   224 /* 136-137 */	4 lrcal (0:1)	bit (36),
  6   225 /* 140   */	4 lrdta		bit (36),
  6   226 /* 141   */	4 lrrsk		bit (36),
  6   227 /* 142   */	4 lrskd		bit (36),
  6   228 /* 143   */	4 lrcc		bit (36),
  6   229 /* 144-145 */	4 lrsts (0:1)	bit (36),
  6   230 /* 146   */	4 lrtm		bit (36),
  6   231 /* 147   */	4 lswt2,
  6   232 			5 b0		bit (1) unaligned,
  6   233 			5 b1		bit (1) unaligned,
  6   234 			5 b2		bit (1) unaligned,
  6   235 			5 b3		bit (1) unaligned,
  6   236 			5 b4		bit (1) unaligned,
  6   237 			5 b5		bit (1) unaligned,
  6   238 			5 b6		bit (1) unaligned,
  6   239 			5 b7		bit (1) unaligned,
  6   240 			5 b8		bit (1) unaligned,
  6   241 			5 b9		bit (1) unaligned,
  6   242 			5 b10		bit (1) unaligned,
  6   243 			5 b11		bit (1) unaligned,
  6   244 			5 b12		bit (1) unaligned,
  6   245 			5 b13		bit (1) unaligned,
  6   246 			5 b14		bit (1) unaligned,
  6   247 			5 b15		bit (1) unaligned,
  6   248 			5 b16		bit (1) unaligned,
  6   249 			5 b17		bit (1) unaligned,
  6   250 			5 b18		bit (1) unaligned,
  6   251 			5 b19		bit (1) unaligned,
  6   252 			5 b20		bit (1) unaligned,
  6   253 			5 b21		bit (1) unaligned,
  6   254 			5 b22		bit (1) unaligned,
  6   255 			5 b23		bit (1) unaligned,
  6   256 			5 b24		bit (1) unaligned,
  6   257 			5 b25		bit (1) unaligned,
  6   258 			5 b26		bit (1) unaligned,
  6   259 			5 b27		bit (1) unaligned,
  6   260 			5 b28		bit (1) unaligned,
  6   261 			5 b29		bit (1) unaligned,
  6   262 			5 b30		bit (1) unaligned,
  6   263 			5 b31		bit (1) unaligned,
  6   264 			5 b32		bit (1) unaligned,
  6   265 			5 b33		bit (1) unaligned,
  6   266 			5 b34		bit (1) unaligned,
  6   267 			5 b35		bit (1) unaligned,
  6   268 /* 150   */	4 llsnb		bit (36),
  6   269 /* 151   */	4 lesq		bit (36),
  6   270 /* 152-153 */	4 lumc (0:1)	bit (36),
  6   271 /* 154-155 */	4 lfnam (0:1)	bit (36),
  6   272 /* 156   */	4 lopts		bit (36),
  6   273 /* 157   */	4 licec,
  6   274 			5 b0_17		bit (18) unaligned,
  6   275 			5 b18_35		fixed bin (17) unaligned,
  6   276 /* 160   */	4 lflg3,
  6   277 			5 b0		bit (1) unaligned,
  6   278 			5 b1		bit (1) unaligned,
  6   279 			5 b2		bit (1) unaligned,
  6   280 			5 b3		bit (1) unaligned,
  6   281 			5 b4		bit (1) unaligned,
  6   282 			5 b5		bit (1) unaligned,
  6   283 			5 b6		bit (1) unaligned,
  6   284 			5 b7		bit (1) unaligned,
  6   285 			5 b8		bit (1) unaligned,
  6   286 			5 b9		bit (1) unaligned,
  6   287 			5 b10		bit (1) unaligned,
  6   288 			5 b11		bit (1) unaligned,
  6   289 			5 b12		bit (1) unaligned,
  6   290 			5 b13		bit (1) unaligned,
  6   291 			5 b14		bit (1) unaligned,
  6   292 			5 b15		bit (1) unaligned,
  6   293 			5 b16		bit (1) unaligned,
  6   294 			5 b17		bit (1) unaligned,
  6   295 			5 b18		bit (1) unaligned,
  6   296 			5 b19		bit (1) unaligned,
  6   297 			5 b20		bit (1) unaligned,
  6   298 			5 b21		bit (1) unaligned,
  6   299 			5 b22		bit (1) unaligned,
  6   300 			5 b23		bit (1) unaligned,
  6   301 			5 b24		bit (1) unaligned,
  6   302 			5 b25		bit (1) unaligned,
  6   303 			5 b26		bit (1) unaligned,
  6   304 			5 b27		bit (1) unaligned,
  6   305 			5 b28		bit (1) unaligned,
  6   306 			5 b29		bit (1) unaligned,
  6   307 			5 b30		bit (1) unaligned,
  6   308 			5 b31		bit (1) unaligned,
  6   309 			5 b32		bit (1) unaligned,
  6   310 			5 b33		bit (1) unaligned,
  6   311 			5 b34		bit (1) unaligned,
  6   312 			5 b35		bit (1) unaligned,
  6   313 /* 161-163 */	4 lpage (0:2)	bit (36),
  6   314 /* 164   */	4 lsit1		bit (36),
  6   315 /* 165   */	4 lsit2		bit (36),
  6   316 /* 166   */	4 lsit3		bit (36),
  6   317 /* 167   */	4 lsit4		bit (36),
  6   318 /* The following entries are maintained by gtss and are not found in TSS UST */
  6   319 /* 170   */	4 lxxx, /* program stack index, offset from gtss_ust */
  6   320 			5 b0_17		fixed bin (17) unaligned,
  6   321 			5 b18_35		bit (18) unaligned, /* not used */
  6   322 /* 171-175 */	4 lprgs (5),
  6   323 			5 b0_17		fixed bin (17) unaligned,
  6   324 			5 b18_35		fixed bin (17) unaligned,
  6   325 /* 176   */	4 fill	bit (36),
  6   326 /* 177   */	4 remote_io_buffer aligned,
  6   327 			5 buffer_control_word,
  6   328 				6 current_line_pointer  bit (18)unal,
  6   329 				6 buffer_threshold_address  bit (18)unal,
  6   330 			5 number_words_transmitted	fixed bin (17)unal,
  6   331 			5 FILL1			fixed bin (17)unal,
  6   332 			5 count_of_characters_transmitted fixed bin (17)unal,
  6   333 			5 FILL2			fixed bin (17)unal,
  6   334 			5 characters_transmitted (244) char (1) unal,
  6   335 /* 277   */	4 word_after_ust		bit (36) aligned;
  6   336 
  6   337 /*   END INCLUDE FILE gtss_ust_ext_.incl.pl1 */
      417 
      418 
  7     1 /* BEGIN INCLUDE FILE gtss_ext_.incl.pl1 */
  7     2 /*
  7     3*  Created: (Wardd Multics)  05/20/78 1307.6 mst Sat 
  7     4*  Modified: Ward            1981     add suspended_process dcl
  7     5*  Modified: Ron Barstad  83-07-21  Fixed level number on mcfc to 3
  7     6*  Modified: Ron Barstad  83-07-25  Fixed derail range in statistics to 4js3 number
  7     7**/
  7     8 dcl  gtss_ext_$aem                   fixed bin static ext	/* >0 Print "additional" error information. */;
  7     9 dcl  gtss_ext_$bad_drl_rtrn          static ext label	/* Default for drl_rtrn. */;
  7    10 dcl  gtss_ext_$db                    (72)bit(1)unal static ext;
  7    11 dcl  gtss_ext_$deferred_catalogs_ptr ptr ext;
  7    12 dcl  gtss_ext_$dispose_of_drl        static ext label	/* quit handlers for some derails use this label to abort */;
  7    13 dcl  gtss_ext_$drl_rtrn              (4)static ext label	/* where to return at subsystem end */;
  7    14 dcl  gtss_ext_$drm_path              char(168)static ext	/* gtss_expand_pathname_stores drm_path */;
  7    15 dcl  gtss_ext_$drun_jid              char (5) static ext	/* valid only for DRUN executing under absentee */;
  7    16 dcl  gtss_ext_$event_channel         fixed bin (71) static ext	/* used for DABT signals */;
  7    17 dcl  gtss_ext_$finished              static ext label	/* Return to gtss for normal conclusion. */;
  7    18 dcl  gtss_ext_$gdb_name              char(8)ext	/* Name H* module to debug. */;
  7    19 dcl  gtss_ext_$get_line              entry(ptr,ptr,fixed bin(21),fixed bin(21),fixed bin(35))variable ext /* Build mode input procedure. */;
  7    20 dcl  gtss_ext_$gtss_slave_area_seg   (4) ext static ptr	/* pointer to gtss slave area segment */;
  7    21 dcl  gtss_ext_$hcs_work_area_ptr     ptr ext static		/* Temp seg for acl lists. */;
  7    22 dcl  gtss_ext_$homedir               char (64) static ext /* user's home dir */;
  7    23 dcl  gtss_ext_$last_k_was_out        bit (1)aligned ext static	/* "1"b => last tty output was output. */;
  7    24 dcl  gtss_ext_$pdir                  char (168) varying ext static	/* pathname of process directory */;
  7    25 dcl  gtss_ext_$popup_from_pi         static ext label	/* transfer to this label after pi simulates popup primitive */;
  7    26 dcl  gtss_ext_$process_type          fixed bin (17) static ext;
  7    27 dcl  gtss_ext_$put_chars             entry(ptr,ptr,fixed bin(24),fixed bin(35)) variable ext	/* Terminal output procedure. */;
  7    28 dcl  gtss_ext_$restart_from_pi       static ext label	/* transfer to this label after pi restores machine conditions */;
  7    29 dcl  gtss_ext_$restart_seg_ptr       ptr static ext	/* points to DRUN restart file when exec under absentee */;
  7    30 dcl  gtss_ext_$sig_ptr               ext static ptr	/* saved ptr to signal_ */;
  7    31 dcl  gtss_ext_$stack_level_          fixed bin ext static;
  7    32 dcl  gtss_ext_$suspended_process     bit(1) ext static;
  7    33 dcl  gtss_ext_$SYstarstar_file_no    fixed bin (24) static ext;
  7    34 dcl  gtss_ext_$user_id               char (26)var ext;
  7    35 dcl  gtss_ext_$work_area_ptr         ptr ext;
  7    36 
  7    37 dcl  1 gtss_ext_$CFP_bits aligned static external
  7    38      , 3 no_input_yet bit (1) unaligned         /* used in gtss_CFP_input_, gtss_read_starCFP_ */
  7    39      , 3 rtn_bits bit (4) unaligned             /* used in gtss_CFP_input_, gtss_CFP_output_ */
  7    40      , 3 cpos_called bit (1) unaligned          /* used in gtss_CFP_input_, gtss_drl_t_cfio_, gtss_abandon_CFP_ */
  7    41      , 3 cout_called bit (1) unaligned          /* used in gtss_read_starCFP_, gtss_abandon_CFP_ */
  7    42      , 3 build_mode bit (1) unaligned	        /* used in gtss_build_, gtss_dsd_process_ */
  7    43      ;
  7    44 
  7    45 dcl 1 gtss_ext_$com_reg aligned static ext,
  7    46        3 tsdmx,
  7    47          4 dst fixed bin (18) unsigned unaligned,
  7    48          4 dit fixed bin (18) unsigned unaligned,
  7    49        3 tsdpt fixed bin (36) unsigned unaligned,
  7    50        3 tsddt fixed bin (36) unsigned unaligned,
  7    51        3 tsdid bit (72) unaligned,
  7    52        3 tsdsd bit (36) unaligned,
  7    53        3 tsdst fixed bin (36) unsigned unaligned,
  7    54        3 tsdjb fixed bin (35) unaligned,
  7    55        3 tsdgt,
  7    56          4 ust_loc fixed bin (18) unsigned unaligned,
  7    57          4 gating_ctl fixed bin (18) unsigned unaligned,
  7    58        3 tcdfr bit (36) unaligned;
  7    59 
  7    60 dcl 1 gtss_ext_$flags aligned static ext
  7    61      , 3 dispose_of_drl_on_pi	bit (01) unal	/* 1 => drl that should be aborted after quit-pi sequence */
  7    62      , 3 drl_in_progress	bit (01) unal	/* 1 => drl handler executing; 0 => gcos code executing */
  7    63      , 3 popup_from_pi	bit (01) unal	/* 1 => derail processor will simulate Gcos break instead of returning */
  7    64      , 3 unfinished_drl	bit (01) unal	/* 1 => subsystem is handling breaks and quit was raised during a drl */
  7    65      , 3 ss_time_limit_set	bit (01) unal	/* 1 => exec time limit set for subsystem */
  7    66      , 3 timer_ranout	bit (01) unal	/* 1 => user is executing timer runout code */
  7    67      , 3 gtss_com_err_sw      bit (01) unal       /* 1 => stop com_err_ string from going to terminal */   
  7    68      , 3 available		bit (65) unal
  7    69      ;
  7    70 
  7    71 
  7    72 dcl 1 gtss_ext_$statistics aligned static ext,		/* Derail usage statistics */
  7    73       3 total_time (-10:71)fixed bin (71),
  7    74       3 count (-10:71)fixed bin (17);
  7    75 
  7    76 /* 	Declaration of Available File Table
  7    77*   */
  7    78 dcl 1 gtss_ext_$aft aligned ext,			/* aft structure */
  7    79 
  7    80       3 start_list (0:102) fixed bin (24),		/* >0 => 1st aft_entry row to start of next entry chain. */
  7    81 
  7    82       3 aft_entry (20),
  7    83         4 altname char (8),				/* altname name for attaching this file */
  7    84         4 next_entry fixed bin (24),			/* Next aft_entry in hash chain. */
  7    85         4 previous_add fixed bin (24),			/* Previously added entry. */
  7    86         4 next_add fixed bin (24),			/* Entry added after this one. */
  7    87         4 used bit (1) unal,				/* "1"b => aft_entry contains AFT value. */
  7    88         4 forced bit(1) unal,				/* "1"b => gtss_verify_access_ forced access on this file. */
  7    89 
  7    90       3 free_space fixed bin (24),			/* Index of start of free space list for aft entries. */
  7    91       3 first_added fixed bin (24),			/* >0  => start of chain in add order. */
  7    92       3 last_added fixed bin (24)			/* >0 => end of chain in added order. */;
  7    93 
  7    94 dcl  gtss_ext_$ppt                   ptr ext /*  switch name for tapein drl */;
  7    95 /**	Data structure to provide access to installed
  7    96*   subsystems fast library load.
  7    97*   **/
  7    98 dcl 1 gtss_ext_$fast_lib aligned ext
  7    99      , 3 fast_lib_fcb ptr				/* Pointer to msf fcb.	*/
  7   100      , 3 fast_lib_ncp fixed bin (24)			/* Number of components. */
  7   101      , 3 comp_ptr (0:9)ptr				/* Pointer to component. */
  7   102      , 3 comp_wds (0:9)fixed bin (24)			/* Component length (words). */
  7   103      ;
  7   104 
  7   105 /* Pointers to segments to regulate multipler
  7   106*   callers to files. Same segments are used to regulate
  7   107*   all simulator callers.
  7   108**/
  7   109 dcl 1 gtss_ext_$mcfc	aligned ext,
  7   110       3 multics_lock_id	bit(36),
  7   111       3 wait_time		fixed bin,
  7   112       3 files_ptr		ptr,
  7   113       3 names_ptr		ptr,
  7   114       3 callers_ptr		(0:3)ptr
  7   115 ;
  7   116 
  7   117 /*   END INCLUDE FILE gtss_ext_.incl.pl1 */
      419 
      420 
  8     1 /* BEGIN INCLUDE FILE gtss_filact_status.incl.pl1 */
  8     2 /*
  8     3*  Created: (Wardd Multics)  10/10/78 0945.5 mst Tue 
  8     4**/
  8     5 
  8     6 /*
  8     7*	 4000   NO ERRORS 
  8     8*	 4001   USER-ID NOT IN MASTER CATALOG 
  8     9*	 4002   I/O ERROR ON DEVICE XXX SA = NNN......NNN 
  8    10*	 4003   PERMISSIONS DENIED 
  8    11*	 4004   FILE BUSY: TRY LATER 
  8    12*	 4005   INCORRECT CAT/FILE DESCRIPTION AT AAA......AAA 
  8    13*	 4006   NO SPACE FOR CATALOG ON DEVICE XXX 
  8    14*	 4007   UNDEFINED DEVICE YYY ZZZZZZ 
  8    15*	 4010   NO SPACE FOR FILE ON DEVICE YYY 
  8    16*	 4011   NON-UNIQUE NAME 
  8    17*	 4012   SIZE REQUEST LS THAN ALLOCATED 
  8    18*	 4013   SPACE REQUEST GR THAN ALLOWED 
  8    19*	 4014   INCORRECT OR MISSING PASSWORD-AT-AAA...AAA 
  8    20*	 4015   FILE IS ABORT LOCK 
  8    21*	 4016   FILE WRITE IN BATCH ONLY 
  8    22*	 4017   SEEK ERROR ON DEVICE XXX SA = NNN......NNN 
  8    23*	 4020   FAILURE IN NAME SCAN (IMP.) 
  8    24*	 4021   DUP CANNOT BE ON RMVBL DEVICE 
  8    25*	 4022   BAD SPACE INVENTORY ON DEVICE 
  8    26*	 4023   INVALID PARAMETER 
  8    27*	 4024   BAD SPACE TABLE FOR DEVICE ON XXX 
  8    28*	 4025   REQUESTED ENTRY NOT ON-LINE 
  8    29*	 4026   NON-STRUCTURED FILE ENTRY 
  8    30*	 4027   FILE IN DEFECTIVE STATUS 
  8    31*	 4030   ILLEGAL PACK TYPE 
  8    32*	 4031   ACCESS GRANTED TO I-D-S FILE 
  8    33*	 4032   COLLECTION FILE ERROR 
  8    34*	 4033   CAT/FILE SECURITY LOCKED 
  8    35*	 4034   ILLEGAL CHARACTER IN CAT/FILE NAME 
  8    36*	 4035   ILLEGAL CAT/FILE LIST REQUEST 
  8    37*	 4036   AFT IS FULL 
  8    38*	 4037   FILE ALREADY IN AFT 
  8    39*	 4040   MAXIMUM PAT SIZE EXCEEDED 
  8    40*	 4041   NO PROTECTION TABLE SPACE AVAILABLE 
  8    41*	 4042   INVALID FILE CODE OR PAT PTR 
  8    42*	 4043   INVALID CATALOG BLOCK ADDRESS 
  8    43*	 4044   ILLEGAL OPTIONS COMBINATION 
  8    44*	 4045   INVALID SPACE IDENTIFIER 
  8    45*	 4046   (NONE, SPECIAL TSS INTERFACE) 
  8    46*	 4047   UNACCOUNTABLE ERROR 
  8    47*	 4050   ***RESERVED for FMS*** 
  8    48*	 4051   CHECKSUM ERROR - DEVICE XXX SA = NNN......NNN 
  8    49*	 4052   DEVICE XXX RELEASED 
  8    50*	 4053   READ ACCESS DENIED - NULL FILE 
  8    51*	 4054   FILE IS WRITE LOCKED 
  8    52*	 4055   ***RESERVED*** 
  8    53*	 4056   SECURITY PARAMETER - REQUIRED 
  8    54*	 4057   SECURITY PARAMETER - INVALID 
  8    55*	 4061   $FSYS HAS BEEN ENABLED 
  8    56*	 4062   ILLEGAL SUBFUNCTION CODE 
  8    57*	 4063   FILE NOT BEING MONITORED 
  8    58*	 4064   DEADLOCK ON PAGE REQUEST 
  8    59*	 4065   PAGE CURRENTLY BUSY 
  8    60*	 4066   FILE NOT DUPLICATED 
  8    61*	 4067   TDS MON ALLOC ERROR 
  8    62*	 4070   ILLEGAL CHECKPOINT REQUEST 
  8    63*	 4071   ILLEGAL DCW SPECIFIED 
  8    64*	 4072   IMPROPER PROTECTION OPTION 
  8    65*	 4073   INVALID ARG LIST PARAMETER NO. 000 
  8    66*	 4074   SYSTEM JOURNAL NOT CONFIGURED 
  8    67*	 4075   FILE RESTORE LOCKED 
  8    68*	 4076   FILE IS TDS LOCKED 
  8    69*	 4077   ERR TDS SUBSET PAGES RELEASED 
  8    70*	 4100   UNACCOUNTABLE ERROR 
  8    71**/
  8    72 
  8    73 /*   END INCLUDE FILE gtss_filact_status.incl.pl1 */
      421 
      422 
  9     1 /* BEGIN INCLUDE FILE gtss_pnterr.incl.pl1 */
  9     2 /*
  9     3*  Created: (Grimes SMP)  04/15/78 0933.2 mst Sat 
  9     4*   Change: Dave Ward	06/08/78 made attributes constant.
  9     5*   Change: Dave Ward	08/17/81 made lengths same as constans.
  9     6*   Change: Ron Barstad  83-03-29  fixed err 53, add missing err 56
  9     7*   Change: Ron Barstad  84-02-27  changed back to all same length because of based array in gtss_abort_subsystem_
  9     8**/
  9     9 dcl 1 gtss_pnterr static int options (constant),
  9    10     2 err1   char(50) init("001-INCORRECT PRIMITIVE"),
  9    11     2 err2   char(50) init("002-(^6o)INVALID FILE I/O COMMAND"),
  9    12     2 err3   char(50) init("003-(^6o)INVALID DCW"),
  9    13     2 err4   char(50) init("004-(^6o)INVALID DRL ARGUMENT"),
  9    14     2 err5   char(50) init("005-(^6o)INVALID DRL CODE"),
  9    15     2 err6   char(50) init("006-LEVEL OF CONTROL TOO DEEP"),
  9    16     2 err7   char(50) init("007-BAP PROG. DESC."),
  9    17     2 err8   char(50) init("008-LOOP IN PRIMITIVES"),
  9    18     2 err9   char(50) init("009-SYSTEM UNKNOWN"),
  9    19     2 err10  char(50) init("010-PROGRAM TOO LARGE TO SWAP"),
  9    20     2 err11  char(50) init("011-(^6o)INCORRECT CORE FILE USAGE"),
  9    21     2 err12  char(50) init("012-(^6o)PRIVILEGED I/O ATTEMPTED"),
  9    22     2 err13  char(50) init("013-(^6o)DRL USERID NOT PERMITTED"),
  9    23     2 err14  char(50) init("(^6o)ILLEGAL DRL RELMEM REQUEST"),
  9    24     2 err15  char(50) init("015-(^6o)CANNOT RESET USER ID"),
  9    25     2 err16  char(50) init("016-(^6o)OVERFLOW FAULT"),
  9    26     2 err17  char(50) init("017-(^6o)ILLEGAL OP CODE"),
  9    27     2 err18  char(50) init("018-(^6o)MEMORY FAULT"),
  9    28     2 err19  char(50) init("019-(^6o)FAULT TAG FAULT"),
  9    29     2 err20  char(50) init("020-(^6o)DIVIDE CHECK FAULT"),
  9    30     2 err21  char(50) init("021-(^6o)BAD STATUS - SWAP OUT"),
  9    31     2 err22  char(50) init("022-(^6o)BAD STATUS - SWAP IN"),
  9    32     2 err23  char(50) init("023-(^6o)BAD STATUS - LOAD"),
  9    33     2 err24  char(50) init("(^6o)TALK PERMISSION NOT GRANTED"),
  9    34     2 err25  char(50) init("(^6o)WRITE ATTEMPTED ON READ-ONLY FILE - ^8a"),
  9    35     2 err26  char(50) init("(^6o)READ ATTEMPTED ON EXECUTE-ONLY FILE - ^8a"),
  9    36     2 err27  char(50) init("024-(^6o)MME FAULT"),
  9    37     2 err28  char(50) init("028-(^6o)REWIND ATTEMPTED FOR RANDOM FILE - ^8a"),
  9    38     2 err29  char(50) init("029-ILLEGAL SYSTEM SELECTION"),
  9    39     2 err30  char(50) init("134-(^6o)INVALID DRL FILACT FUNCTION #^i"),
  9    40     2 err31  char(50) init("135-(^6o)PRIVILEGED DRL FILACT REQUEST"),
  9    41     2 err32  char(50) init("138-(^6o)NO TAP* FILE FOR DRL TAPEIN"),
  9    42     2 err33  char(50) init("139-ERROR IN WRITING TAP* FILE"),
  9    43     2 err34  char(50) init("(^6o)DRL ABORT - CANNOT WRITE ABRT FILE"),
  9    44     2 err35  char(50) init("(^6o)DRL ABORT - ABRT FILE WRITTEN"),
  9    45     2 err36  char(50) init("NOT ENOUGH CORE TO RUN JOB"),
  9    46     2 err37  char(50) init("SORRY-OUT OF SWAP SPACE. TRY AGAIN."),
  9    47     2 err38  char(50) init("(^6o)FILE ADDRESS ERROR"),
  9    48     2 err39  char(50) init("(^6o)DRL ABORT - ABRT FILE I/O ERROR"),
  9    49     2 err40  char(50) init("(^6o)DRL ABORT - ABRT FILE TOO SMALL"),
  9    50     2 err41  char(50) init("(^6o)BAD STATUS FOR DRL SAVE/RESTOR - ^8a"),
  9    51     2 err42  char(50) init("(^6o)H* FILE NOT IN AFT - ^8a"),
  9    52     2 err43  char(50) init("064-EXECUTE TIME LIMIT EXCEEDED"),
  9    53     2 err44  char(50) init("025-(^6o)LOCKUP FAULT"),
  9    54     2 err45  char(50) init("065-OBJECT PROGRAM SIZE LIMIT EXCEEDED"),
  9    55     2 err46  char(50) init("(^6o)INCORRECT ENTRY TO DRL TASK"),
  9    56     2 err47  char(50) init("(^6o)H* PROGRAM NAME UNDEFINED - ^8a"),
  9    57     2 err48  char(50) init("(^6o)H* FILE CATALOG FULL - ^8a"),
  9    58     2 err49  char(50) init("(^6o)TALLY OR CHARACTER COUNT INCORRECT"),
  9    59     2 err50  char(50) init("(^6o)BAD DRL SAVE DATA LOC"),
  9    60     2 err51  char(50) init("(^6o)H* FILE NOT INITITALIZED - ^8a"),
  9    61     2 err52  char(50) init("(^6o)H* FILE MUST BE RANDOM - ^8a"),
  9    62     2 err53  char(50) init("026-(^6o)OP-NOT-COMPLETE FAULT"),
  9    63     2 err54  char(50) init("(^6o)H* FILE PROGRAM NAME REQUIRED - ^8a"),
  9    64     2 err55  char(50) init("027-(^6o)COMMAND FAULT"),
  9    65     2 err56  char(50) init("(^6o)LINKED FILE I/O CANNOT SPAN >63 LLINKS - ^8a"),
  9    66     2 err57  char(50) init("UNASSIGNED"),
  9    67     2 err58  char(50) init("(^6o)INVALID TIME FOR DRL GWAKE"),
  9    68     2 err59  char(50) init("UNASSIGNED"),
  9    69     2 err60  char(50) init("(^6o)INVALID SNUMB FOR DRL JOUT"),
  9    70     2 err61  char(50) init("(^6o)PRIVILEGED DRL"),
  9    71     2 err62  char(50) init("(^6o)INVALID DRL JOUT FUNCTION"),
  9    72     2 err63  char(50) init("MEMORY PARITY ERROR"),
  9    73     2 err64  char(50) init("SY** I/O ERROR"),
  9    74 /* The following error messages are artifacts of gtss and are not found in TSS */
  9    75     2 err100 char(50) init("DRL ADDMEM ERROR at (^6o)"),
  9    76     2 err101 char(50) init("DRL RELMEM ERROR TRUNCATE SEGMENT at (^6o)"),
  9    77     2 err102 char(50) init("DRL RELMEM ERROR SET MAX SEGMENT LENGTH"),
  9    78     2 err103 char(50) init("UNIMPLEMENTED DRL FILACT FUNCTION (^i)"),
  9    79     2 err999 char(50) init("dummy");
  9    80 
  9    81 /*   END INCLUDE FILE gtss_pnterr.incl.pl1 */
      423 
      424 
 10     1 /*  */
 10     2 /* BEGIN INCLUDE FILE  mc.incl.pl1   Created Dec 72 for 6180 - WSS. */
 10     3 /* Modified 06/07/76 by Greenberg for mc.resignal */
 10     4 /* Modified 07/07/76 by Morris for fault register data */
 10     5 /* Modified 08/28/80 by J. A. Bush for the DPS8/70M CVPU */
 10     6 /* Modified '82 to make values constant */
 10     7 
 10     8 /* words 0-15 pointer registers */
 10     9 
 10    10 dcl  mcp ptr;
 10    11 
 10    12 dcl 1 mc based (mcp) aligned,
 10    13     2 prs (0:7) ptr,				/* POINTER  REGISTERS */
 10    14    (2 regs,					/* registers */
 10    15       3 x (0:7) bit (18),				/* index registers */
 10    16       3 a bit (36),					/* accumulator */
 10    17       3 q bit (36),					/* q-register */
 10    18       3 e bit (8),					/* exponent */
 10    19       3 pad1 bit (28),
 10    20       3 t bit (27),					/* timer register */
 10    21       3 pad2 bit (6),
 10    22       3 ralr bit (3),				/* ring alarm register */
 10    23 
 10    24     2 scu (0:7) bit (36),
 10    25 
 10    26     2 mask bit (72),				/* mem controller mask at time of fault */
 10    27     2 ips_temp bit (36),				/* Temporary storage for IPS info */
 10    28     2 errcode fixed bin (35),				/* fault handler's error code */
 10    29     2 fim_temp,
 10    30       3 unique_index bit (18) unal,			/* unique index for restarting faults */
 10    31       3 resignal bit (1) unal,			/* recompute signal name with fcode below */
 10    32       3 fcode bit (17) unal,				/* fault code used as index to FIM table and SCT */
 10    33     2 fault_reg bit (36),				/* fault register */
 10    34     2 pad2 bit (1),
 10    35     2 cpu_type fixed bin (2) unsigned,			/* L68 = 0, DPS8/70M = 1 */
 10    36     2 ext_fault_reg bit (15),				/* extended fault reg for DPS8/70M CPU */
 10    37     2 fault_time bit (54),				/* time of fault */
 10    38 
 10    39     2 eis_info (0:7) bit (36)) unaligned;
 10    40 
 10    41 
 10    42 dcl (apx fixed bin init (0),
 10    43      abx fixed bin init (1),
 10    44      bpx fixed bin init (2),
 10    45      bbx fixed bin init (3),
 10    46      lpx fixed bin init (4),
 10    47      lbx fixed bin init (5),
 10    48      spx fixed bin init (6),
 10    49      sbx fixed bin init (7)) internal static options (constant);
 10    50 
 10    51 
 10    52 
 10    53 
 10    54 dcl  scup ptr;
 10    55 
 10    56 dcl 1 scu based (scup) aligned,			/* SCU DATA */
 10    57 
 10    58 
 10    59 /*	WORD (0)		*/
 10    60 
 10    61    (2 ppr,					/* PROCEDURE POINTER REGISTER */
 10    62       3 prr bit (3),				/* procedure ring register */
 10    63       3 psr bit (15),				/* procedure segment register */
 10    64       3 p bit (1),					/* procedure privileged bit */
 10    65 
 10    66     2 apu,					/* APPENDING UNIT STATUS */
 10    67       3 xsf bit (1),				/* ext seg flag - IT modification */
 10    68       3 sdwm bit (1),				/* match in SDW Ass. Mem. */
 10    69       3 sd_on bit (1),				/* SDW Ass. Mem.  ON */
 10    70       3 ptwm bit (1),				/* match in PTW Ass. Mem. */
 10    71       3 pt_on bit (1),				/* PTW Ass. Mem.  ON */
 10    72       3 pi_ap bit (1),				/* Instr Fetch or Append cycle */
 10    73       3 dsptw bit (1),				/* Fetch of DSPTW */
 10    74       3 sdwnp bit (1),				/* Fetch of SDW non paged */
 10    75       3 sdwp bit (1),				/* Fetch of SDW paged */
 10    76       3 ptw bit (1),				/* Fetch of PTW */
 10    77       3 ptw2 bit (1),				/* Fetch of pre-paged PTW */
 10    78       3 fap bit (1),				/* Fetch of final address paged */
 10    79       3 fanp bit (1),				/* Fetch of final address non-paged */
 10    80       3 fabs bit (1),				/* Fetch of final address absolute */
 10    81 
 10    82     2 fault_cntr bit (3),				/* number of retrys of EIS instructions */
 10    83 
 10    84 
 10    85 /*	WORD (1)		*/
 10    86 
 10    87     2 fd,						/* FAULT  DATA */
 10    88       3 iro bit (1),				/* illegal ring order */
 10    89       3 oeb bit (1),				/* out of execute bracket */
 10    90       3 e_off bit (1),				/* no execute */
 10    91       3 orb bit (1),				/* out of read bracket */
 10    92       3 r_off bit (1),				/* no read */
 10    93       3 owb bit (1),				/* out of write bracket */
 10    94       3 w_off bit (1),				/* no write */
 10    95       3 no_ga bit (1),				/* not a gate */
 10    96       3 ocb bit (1),				/* out of call bracket */
 10    97       3 ocall bit (1),				/* outward call */
 10    98       3 boc bit (1),				/* bad outward call */
 10    99       3 inret bit (1),				/* inward return */
 10   100       3 crt bit (1),				/* cross ring transfer */
 10   101       3 ralr bit (1),				/* ring alarm register */
 10   102       3 am_er bit (1),				/* associative memory fault */
 10   103       3 oosb bit (1),				/* out of segment bounds */
 10   104       3 paru bit (1),				/* processor parity upper */
 10   105       3 parl bit (1),				/* processor parity lower */
 10   106       3 onc_1 bit (1),				/* op not complete type 1 */
 10   107       3 onc_2 bit (1),				/* op not complete type 2 */
 10   108 
 10   109     2 port_stat,					/* PORT  STATUS */
 10   110       3 ial bit (4),				/* illegal action lines */
 10   111       3 iac bit (3),				/* illegal action channel */
 10   112       3 con_chan bit (3),				/* connect channel */
 10   113 
 10   114     2 fi_num bit (5),				/* (fault/interrupt)  number */
 10   115     2 fi_flag bit (1),				/*  1 => fault,  0 => interrupt  */
 10   116 
 10   117 
 10   118 /*	WORD (2)		*/
 10   119 
 10   120     2 tpr,					/* TEMPORARY POINTER REGISTER */
 10   121       3 trr bit (3),				/* temporary ring register */
 10   122       3 tsr bit (15),				/* temporary segment register */
 10   123 
 10   124     2 pad2 bit (9),
 10   125 
 10   126     2 cpu_no bit (3),				/* CPU number */
 10   127 
 10   128     2 delta bit (6),				/* tally modification DELTA */
 10   129 
 10   130 
 10   131 /*	WORD (3)		*/
 10   132 
 10   133     2 word3 bit (18),
 10   134 
 10   135     2 tsr_stat,					/* TSR STATUS for 1,2,&3 word instructions */
 10   136       3 tsna,					/* Word 1 status */
 10   137         4 prn bit (3),				/* Word 1  PR  number */
 10   138         4 prv bit (1),				/* Word 1  PR  valid bit */
 10   139       3 tsnb,					/* Word 2  status */
 10   140         4 prn bit (3),				/* Word 2  PR  number */
 10   141         4 prv bit (1),				/* Word 2  PR  valid bit */
 10   142       3 tsnc,					/* Word 3  status */
 10   143         4 prn bit (3),				/* Word 3  PR  number */
 10   144         4 prv bit (1),				/* Word 3  PR  valid bit */
 10   145 
 10   146     2 tpr_tbr bit (6),				/* TPR.TBR  field */
 10   147 
 10   148 
 10   149 /* 	WORD (4)		*/
 10   150 
 10   151     2 ilc bit (18),					/* INSTRUCTION  COUNTER */
 10   152 
 10   153     2 ir,						/* INDICATOR  REGISTERS */
 10   154       3 zero bit (1),				/* zero indicator */
 10   155       3 neg bit (1),				/* negative indicator */
 10   156       3 carry bit (1),				/* carryry indicator */
 10   157       3 ovfl bit (1),				/* overflow indicator */
 10   158       3 eovf bit (1),				/* eponent overflow */
 10   159       3 eufl bit (1),				/* exponent underflow */
 10   160       3 oflm bit (1),				/* overflow mask */
 10   161       3 tro bit (1),				/* tally runout */
 10   162       3 par bit (1),				/* parity error */
 10   163       3 parm bit (1),				/* parity mask */
 10   164       3 bm bit (1),					/* ^bar mode */
 10   165       3 tru bit (1),				/* truncation mode */
 10   166       3 mif bit (1),				/* multi-word instruction mode */
 10   167       3 abs bit (1),				/* absolute mode */
 10   168       3 hex bit (1),				/* hexadecimal exponent mode */
 10   169       3 pad bit (3),
 10   170 
 10   171 
 10   172 /*	WORD (5)		*/
 10   173 
 10   174     2 ca bit (18),					/* COMPUTED  ADDRESS */
 10   175 
 10   176     2 cu,						/* CONTROL UNIT STATUS */
 10   177       3 rf bit (1),					/* on first cycle of repeat instr */
 10   178       3 rpt bit (1),				/* repeat instruction */
 10   179       3 rd bit (1),					/* repeat double instruction */
 10   180       3 rl bit (1),					/* repeat link instruciton */
 10   181       3 pot bit (1),				/* IT  modification */
 10   182       3 pon bit (1),				/* return type instruction */
 10   183       3 xde bit (1),				/* XDE from Even location */
 10   184       3 xdo bit (1),				/* XDE from Odd  location */
 10   185       3 poa bit (1),				/* operation preparation */
 10   186       3 rfi bit (1),				/* tells CPU to refetch instruction */
 10   187       3 its bit (1),				/* ITS modification */
 10   188       3 if bit (1),					/* fault occured during instruction fetch */
 10   189 
 10   190     2 cpu_tag bit (6)) unaligned,			/* computed tag field */
 10   191 
 10   192 
 10   193 /*	WORDS (6,7)	*/
 10   194 
 10   195     2 even_inst bit (36),				/* even instruction of faulting pair */
 10   196 
 10   197     2 odd_inst bit (36);				/* odd  instruction of faulting pair */
 10   198 
 10   199 
 10   200 
 10   201 
 10   202 
 10   203 
 10   204 /*	ALTERNATE   SCU  DECLARATION		*/
 10   205 
 10   206 
 10   207 dcl 1 scux based (scup) aligned,
 10   208 
 10   209    (2 pad0 bit (36),
 10   210 
 10   211     2 fd,						/* GROUP II  FAULT DATA */
 10   212       3 isn bit (1),				/* illegal segment number */
 10   213       3 ioc bit (1),				/* illegal op  code  */
 10   214       3 ia_am bit (1),				/* illegal address - modifier */
 10   215       3 isp bit (1),				/* illegal slave  procedure */
 10   216       3 ipr bit (1),				/* illegal procedure */
 10   217       3 nea bit (1),				/* non existent address */
 10   218       3 oobb bit (1),				/* out of bounds */
 10   219       3 pad bit (29),
 10   220 
 10   221     2 pad2 bit (36),
 10   222 
 10   223     2 pad3a bit (18),
 10   224 
 10   225     2 tsr_stat (0:2),				/* TSR  STATUS  as an  ARRAY */
 10   226       3 prn bit (3),				/* PR  number */
 10   227       3 prv bit (1),				/* PR  valid bit */
 10   228 
 10   229     2 pad3b bit (6)) unaligned,
 10   230 
 10   231     2 pad45 (0:1) bit (36),
 10   232 
 10   233     2 instr (0:1) bit (36);				/* Instruction ARRAY */
 10   234 
 10   235 
 10   236 
 10   237 /*  END INCLUDE FILE   mc.incl.pl1 */
      425 
      426 
 11     1 /* BEGIN INCLUDE FILE gtss_entry_dcls.incl.pl1 */
 11     2 /*
 11     3*  Created: (Wardd Multics)  06/30/78 1624.8 mst Fri 
 11     4*  Modified: Ron Barstad  84-02-24  Fixed wrong and obsolete entries
 11     5**/
 11     6 
 11     7 /**  gtss external entry variables.		**/
 11     8 dcl  com_err_                                   entry() options(variable);
 11     9 dcl  gtss_CFP_abort_                            entry options(variable);
 11    10 dcl  gtss_CFP_break_                            entry options(variable);
 11    11 dcl  gtss_CFP_input_                            entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
 11    12 dcl  gtss_CFP_output_                           entry (ptr, ptr, fixed bin(21), fixed bin(35));
 11    13 dcl  gtss_abandon_CFP_                          entry options(variable);
 11    14 dcl  gtss_abort_dump_                           entry (fixed bin(18));
 11    15 dcl  gtss_abort_subsystem_                      entry options (variable);
 11    16 dcl  gtss_abort_subsystem_$not_imp              entry (ptr, fixed bin(24));
 11    17 dcl  gtss_abs_login_banner_		        entry() returns(char(*));
 11    18 dcl  gtss_abs_logout_banner_		        entry() returns(char(*));
 11    19 dcl  gtss_abs_$abs_equiv                        entry options(variable);
 11    20 dcl  gtss_abs_$cpu_runout		        entry (ptr, char(4));
 11    21 dcl  gtss_abs_$create_absin                     entry() returns(char(*));
 11    22 dcl  gtss_abs_$dabt_check		        entry (ptr, char(4));
 11    23 dcl  gtss_abs_$get_id                           entry (char(5)) returns(char(19));
 11    24 dcl  gtss_abs_$get_drm                          entry() returns(char(*));
 11    25 dcl  gtss_adjust_size_                          entry (ptr);
 11    26 dcl  gtss_aft_$add                              entry (char(8), fixed bin(24), fixed bin(35));
 11    27 dcl  gtss_aft_$delete                           entry (char(8), fixed bin(24), fixed bin(35));
 11    28 dcl  gtss_aft_$find                             entry (char(8), fixed bin(24), fixed bin(35));
 11    29 dcl  gtss_aft_$initialize                       entry (fixed bin(35));
 11    30 dcl  gtss_ascii_bcd_                            entry (ptr, fixed bin, ptr);
 11    31 dcl  gtss_attributes_mgr_$get                   entry (ptr, fixed bin(35));
 11    32 dcl  gtss_attributes_mgr_$set                   entry (ptr, fixed bin(35));
 11    33 dcl  gtss_bcd_ascii_                            entry (ptr, fixed bin(24), ptr);
 11    34 dcl  gtss_bcd_ascii_$lc                         entry (ptr, fixed bin(24), ptr);
 11    35 dcl  gtss_break_vector_                         entry ();
 11    36 dcl  gtss_break_vector_$drl_in_progress         entry() returns(bit(1));
 11    37 dcl  gtss_break_vector_$status                  entry() returns(bit(1));
 11    38 dcl  gtss_build_                                entry options(variable);
 11    39 dcl  gtss_com_err_                              entry options(variable);
 11    40 dcl  gtss_derail_processor_                     entry (ptr, char(*), ptr, ptr, bit(1) aligned) /* called at fault time instead of signal_ */;
 11    41 dcl  gtss_derail_processor_$set                 entry options(variable);
 11    42 dcl  gtss_dq_$catp                              entry (char (5), ptr, fixed bin (18) unsigned);
 11    43 dcl  gtss_dq_$create                            entry (bit(1));
 11    44 dcl  gtss_dq_$dibp                              entry (char(5), ptr);
 11    45 dcl  gtss_dq_$entries_info		        entry (ptr, fixed bin (18) unsigned, fixed bin (18) unsigned);
 11    46 dcl  gtss_dq_$hdrp                              entry (ptr);
 11    47 dcl  gtss_dq_$mod_js		        entry (char(5), fixed bin (6) unsigned, bit (1));
 11    48 dcl  gtss_dq_$open_exc		        entry (bit(1));
 11    49 dcl  gtss_dq_$open_gen		        entry (bit(1));
 11    50 dcl  gtss_drl_abort_                            entry (ptr, fixed bin);
 11    51 dcl  gtss_drl_addmem_                           entry (ptr, fixed bin);
 11    52 dcl  gtss_drl_callss_                           entry (ptr, fixed bin);
 11    53 dcl  gtss_drl_corfil_                           entry (ptr, fixed bin);
 11    54 dcl  gtss_drl_defil_                            entry (ptr, fixed bin);
 11    55 dcl  gtss_drl_defil_$subr                       entry (ptr, ptr, ptr);
 11    56 dcl  gtss_drl_dio_                              entry (ptr, fixed bin);
 11    57 dcl  gtss_drl_drlimt_                           entry (ptr, fixed bin);
 11    58 dcl  gtss_drl_drlsav_                           entry (ptr, fixed bin);
 11    59 dcl  gtss_drl_filact_                           entry (ptr, fixed bin);
 11    60 dcl  gtss_drl_filsp_                            entry (ptr, fixed bin);
 11    61 dcl  gtss_drl_grow_                             entry (ptr, fixed bin);
 11    62 dcl  gtss_drl_gwake_                            entry (ptr, fixed bin);
 11    63 dcl  gtss_drl_jsts_                             entry (ptr, fixed bin);
 11    64 dcl  gtss_drl_kin_                              entry (ptr, fixed bin);
 11    65 dcl  gtss_drl_kotnow_                           entry (ptr, fixed bin);
 11    66 dcl  gtss_drl_kotnow_$gtss_drl_kout_            entry (ptr, fixed bin);
 11    67 dcl  gtss_drl_koutn_                            entry (ptr, fixed bin);
 11    68 dcl  gtss_drl_morlnk_                           entry (ptr, fixed bin);
 11    69 dcl  gtss_drl_msub_                             entry (ptr, fixed bin);
 11    70 dcl  gtss_drl_objtim_                           entry (ptr, fixed bin);
 11    71 dcl  gtss_drl_part_                             entry (ptr, fixed bin);
 11    72 dcl  gtss_drl_pasaft_                           entry (ptr, fixed bin);
 11    73 dcl  gtss_drl_pasdes_                           entry (ptr, fixed bin);
 11    74 dcl  gtss_drl_pasust_                           entry (ptr, fixed bin);
 11    75 dcl  gtss_drl_pdio_                             entry (ptr, fixed bin);
 11    76 dcl  gtss_drl_prgdes_                           entry (ptr, fixed bin);
 11    77 dcl  gtss_drl_pseudo_                           entry (ptr, fixed bin);
 11    78 dcl  gtss_drl_relmem_                           entry (ptr, fixed bin);
 11    79 dcl  gtss_drl_restor_                           entry (ptr, fixed bin);
 11    80 dcl  gtss_drl_retfil_                           entry (ptr, fixed bin);
 11    81 dcl  gtss_drl_return_                           entry (ptr, fixed bin);
 11    82 dcl  gtss_drl_rew_                              entry (ptr, fixed bin);
 11    83 dcl  gtss_drl_rstswh_                           entry (ptr, fixed bin);
 11    84 dcl  gtss_drl_setlno_                           entry (ptr, fixed bin);
 11    85 dcl  gtss_drl_setswh_                           entry (ptr, fixed bin);
 11    86 dcl  gtss_drl_snumb_                            entry (ptr, fixed bin);
 11    87 dcl  gtss_drl_spawn_                            entry (ptr, fixed bin);
 11    88 dcl  gtss_drl_spawn_$gtss_drl_pasflr_           entry (ptr, fixed bin);
 11    89 dcl  gtss_drl_stoppt_                           entry (ptr, fixed bin);
 11    90 dcl  gtss_drl_switch_                           entry (ptr, fixed bin);
 11    91 dcl  gtss_drl_sysret_                           entry (ptr, fixed bin);
 11    92 dcl  gtss_drl_t_cfio_                           entry (ptr, fixed bin);
 11    93 dcl  gtss_drl_t_cmov_                           entry (ptr, fixed bin);
 11    94 dcl  gtss_drl_t_err_                            entry (ptr, fixed bin);
 11    95 dcl  gtss_drl_t_goto_                           entry (ptr, fixed bin);
 11    96 dcl  gtss_drl_t_linl_                           entry (ptr, fixed bin);
 11    97 dcl  gtss_drl_t_rscc_                           entry (ptr, fixed bin);
 11    98 dcl  gtss_drl_tapein_                           entry (ptr, fixed bin);
 11    99 dcl  gtss_drl_task_                             entry (ptr, fixed bin);
 11   100 dcl  gtss_drl_termtp_                           entry (ptr, fixed bin);
 11   101 dcl  gtss_drl_time_                             entry (ptr, fixed bin);
 11   102 dcl  gtss_drun_                                 entry (bit(1));
 11   103 dcl  gtss_dsd_lookup_                           entry (char(8) var) returns(fixed bin(24));
 11   104 dcl  gtss_dsd_process_                          entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
 11   105 dcl  gtss_edit_dsd_                             entry (ptr, fixed bin(21)) returns(fixed bin(24));
 11   106 dcl  gtss_mcfc_empty                            entry (char(*) var);
 11   107 dcl  gtss_expand_pathname_                      entry (ptr, char(*), char(*), fixed bin(35));
 11   108 dcl  gtss_expand_pathname_$verify_umc           entry (ptr, char(*), char(*), bit(18), fixed bin(35));
 11   109 dcl  gtss_fault_processor_                      entry options(variable);
 11   110 dcl  gtss_find_cond_frame_		        entry (char(32) var) returns(ptr);
 11   111 dcl  gtss_fault_processor_$timer_runout         entry (ptr, char(*));
 11   112 dcl  gtss_filact_error_status_                  entry (fixed bin(35))returns(bit(12));
 11   113 dcl  gtss_filact_funct02_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
 11   114 dcl  gtss_filact_funct03_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
 11   115 dcl  gtss_filact_funct04_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
 11   116 dcl  gtss_filact_funct05_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
 11   117 dcl  gtss_filact_funct08_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
 11   118 dcl  gtss_filact_funct10_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
 11   119 dcl  gtss_filact_funct11_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
 11   120 dcl  gtss_filact_funct14_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
 11   121 dcl  gtss_filact_funct18_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
 11   122 dcl  gtss_filact_funct19_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
 11   123 dcl  gtss_filact_funct21_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
 11   124 dcl  gtss_filact_funct22_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
 11   125 dcl  gtss_mcfc_init_                            entry (char(*) var);
 11   126 dcl  gtss_interp_prim_                          entry options(variable);
 11   127 dcl  gtss_interp_prim_$callss                   entry (char(4), ptr);
 11   128 dcl  gtss_interp_prim_$sysret                   entry options(variable);
 11   129 dcl  gtss_interp_prim_$t_goto                   entry (char(4));
 11   130 dcl  gtss_ios_change_size_                      entry (fixed bin(24), fixed bin(24), bit(1), fixed bin(24), fixed bin(35));
 11   131 dcl  gtss_ios_close_                            entry (fixed bin(24), ptr, fixed bin(35));
 11   132 dcl  gtss_ios_exchange_names_                   entry (fixed bin(24), fixed bin(24), fixed bin(24), fixed bin(35));
 11   133 dcl  gtss_ios_initialize_                       entry options(variable);
 11   134 dcl  gtss_ios_io_                               entry (fixed bin(24), ptr, ptr, fixed bin(24), fixed bin(24), fixed bin(35));
 11   135 dcl  gtss_ios_open_                             entry (fixed bin(24), char(168), char(32), bit(6), bit(1), ptr, ptr, fixed bin(35));
 11   136 dcl  gtss_ios_position_                         entry (fixed bin(24), fixed bin(24), fixed bin(24), bit(6), ptr);
 11   137 dcl  gtss_mcfc_$delete		        entry (fixed bin(24), char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
 11   138 dcl  gtss_mcfc_$open                            entry (char(*), char(*), bit(6), bit(36) aligned, ptr, fixed bin(35));
 11   139 dcl  gtss_mcfc_$close                           entry (char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
 11   140 dcl  gtss_read_starCFP_                         entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
 11   141 dcl  gtss_read_starCFP_$last_os                 entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
 11   142 dcl  gtss_run_subsystem_                        entry (fixed bin(24));
 11   143 dcl  gtss_run_subsystem_$finish                 entry options(variable);
 11   144 dcl  gtss_run_subsystem_$restor                 entry (fixed bin(24), ptr);
 11   145 dcl  gtss_run_subsystem_$restor_perm            entry (fixed bin(24), ptr, fixed bin(18));
 11   146 dcl  gtss_set_slave_                            entry (fixed bin (24), ptr);
 11   147 dcl  gtss_set_slave_$load_bar                   entry (fixed bin (17));
 11   148 dcl  gtss_update_safe_store_                    entry (ptr);
 11   149 dcl  gtss_verify_access_		        entry (char(*), char(*), fixed bin(24), bit(6), bit(12) aligned);
 11   150 dcl  gtss_verify_access_$check_forced_access    entry (char(*), char(*), fixed bin(24));
 11   151 dcl  gtss_write_starCFP_                        entry (ptr, ptr, fixed bin(21), fixed bin(35));
 11   152 /*   END INCLUDE FILE gtss_entry_dcls.incl.pl1 */
      427 
      428 
 12     1 /* BEGIN INCLUDE FILE gtss_ascii_file_names.incl.pl1 */
 12     2 /*
 12     3*  Created:  (Wardd Multics)  09/01/78 1447.3 mst Fri 
 12     4**/
 12     5 
 12     6 /**	First parameter to gtss_expand_pathname_
 12     7* **/
 12     8 dcl 1 ascii_cat_file,
 12     9     2 nn    fixed bin,	/* Number of names. */
 12    10     2 name  (7)char(12);	/* List of cat/filedescr name . */
 12    11 
 12    12 /*   END INCLUDE FILE gtss_ascii_file_names.incl.pl1 */
      429 
      430 
 13     1 /* BEGIN INCLUDE FILE gtss_file_values.incl.pl1 */
 13     2 /*
 13     3*  Created: (Wardd Multics)  09/01/78 1447.1 mst Fri 
 13     4**/
 13     5 
 13     6 /**	The gtss_file_values structure provides parameters to the
 13     7*	gtss_attributes_mgr_ subroutine.
 13     8*
 13     9*	The caller must provide space for this structure, fill in
 13    10*	the version with 1, the dname and ename with the file directory
 13    11*	and entry name, and for calls to gtss_attributes_mgr_$set,
 13    12*	fill in values to be reset and set the corresponding set_switch
 13    13*	to "1"b.
 13    14*
 13    15*	If the (Multics) file located is a directory
 13    16*	a GCOS catalog is implied.
 13    17*
 13    18*	If both ename and new_ename are set but no set_switch
 13    19*	is "1"b (and the set entry is called) this implies
 13    20*	that the existing attribute values are being renamed
 13    21*	to the new entry.
 13    22*
 13    23*	Then: call gtss_attributes_mgr_$set(addr(gtss_file_values),code);
 13    24*
 13    25*	Use of ename/new_ename combinations
 13    26*	for set entry.
 13    27*
 13    28*	-|-----------|-----------|-|-----------------|
 13    29*	|  ename   |new_ename ||    meaning     |
 13    30*	=|===========|===========|=|=================|
 13    31*	|  blanks  |  blanks  ||    illegal     |
 13    32*	-|-----------|-----------|-|-----------------|
 13    33*	|  blanks  |not blanks||    initial     |
 13    34*	|          |          ||    setting     |
 13    35*	-|-----------|-----------|-|-----------------|
 13    36*	|not blanks|  blanks  || check enames's |
 13    37*	|          |          ||attribute values|
 13    38*	|          |          ||   and reset.   |
 13    39*	-|-----------|-----------|-|-----------------|
 13    40*	|not blanks|not blanks|| delete ename's |
 13    41*	|          |          || values and put |
 13    42*	|          |          || on values for  |
 13    43*	|          |          ||  new_ename's   |
 13    44*	-|-----------|-----------|-|-----------------|
 13    45***/
 13    46 dcl  attr_name                (0:7)char(4)static int options(constant)init(
 13    47 			/* 0 */ "mode"
 13    48 ,			/* 1 */ "maxl"
 13    49 ,			/* 2 */ "curl"
 13    50 ,			/* 3 */ "busy"
 13    51 ,			/* 4 */ "attr"
 13    52 ,			/* 5 */ "null"
 13    53 ,			/* 6 */ "noal"
 13    54 ,			/* 7 */ "crdt"
 13    55 			);
 13    56 dcl 1 gtss_file_values	aligned automatic
 13    57 ,     3 version		fixed bin(17)	/* Current version is 1. (OUT) */
 13    58 ,     3 dname		char(168)unal	/* Directory name. (IN) */
 13    59 ,     3 ename		char(032)unal	/* Entry name. (IN) */
 13    60 ,     3 new_ename		char(032)unal	/* New entry name. (IN) */
 13    61 ,     3 change_name		bit(1)		/* "1"b => Change segment name. (IN) */
 13    62 ,     3 catalog		bit(1)		/* "1"b => File is a catalog (Multics directory). (OUT) */
 13    63 ,     3 info_ptr		ptr		/* hcs_$status_long (4. entry_ptr) info structure address. (OUT) */
 13    64 ,     3 set_switch				/* "1"b => Set corresponding value. (IN) */
 13    65 ,       4 mode_random	bit(01)unal	/* 0. Set the random/sequential(linked) field. */
 13    66 ,       4 maxll		bit(01)unal	/* 1. Set max size value. */
 13    67 ,       4 curll		bit(01)unal	/* 2. Set current size value. */
 13    68 ,       4 busy		bit(01)unal	/* 3. Set file as busy. */
 13    69 ,       4 attr		bit(01)unal	/* 4. Set user attributes value. */
 13    70 ,       4 null_file		bit(01)unal	/* 5. Set null file value. */
 13    71 ,       4 number_allocations	bit(01)unal	/* 6. Set or increment number of uses. */
 13    72 ,       4 creation_date	bit(01)unal	/* 7. Set file creation date. */
 13    73 ,       4 not_in_use	bit(28)unal
 13    74 			/* The above set_ variables should be declared in an order
 13    75*			   corresponding to the value in the attr_name array. */
 13    76 ,     3 data_flags				/* (OUT|IN) */
 13    77 ,       4 mode_random	bit(01)unal	/* "1"b => random. */
 13    78 ,       4 busy		bit(01)unal	/* "1"b => file is busy. */
 13    79 ,       4 null_file		bit(01)unal	/* "1"b => file is null. */
 13    80 ,       4 not_in_use2	bit(33)unal
 13    81 ,     3 data_fields				/* (OUT|IN) */
 13    82 ,       4 curll		fixed bin(35)	/* Current length in llinks (>=0). */
 13    83 ,       4 maxll		fixed bin(35)	/* Maximum length in llinks (>=0). */
 13    84 ,       4 number_allocations	fixed bin(35)	/* 0 => set | >0 => increment modulo 262144. */
 13    85 ,     3 attributes				/* (OUT|IN) */
 13    86 ,       4 not_in_use3	bit(01)unal
 13    87 ,       4 attr		bit(35)unal	/* User specified file attribute value. */
 13    88 ,     3 creation_date	char(06)		/* MMDDYY of creation. */
 13    89 ;
 13    90 
 13    91 
 13    92 /*   END INCLUDE FILE gtss_file_values.incl.pl1 */
      431 
      432 
 14     1 /* BEGIN INCLUDE FILE gtss_FMS_catalog.incl.pl1  */
 14     2 /*
 14     3*  Created: (Wardd Multics)  09/14/78 1813.7 mst Thu 
 14     4*  Change:	Paul Benjamin	10/12/79	Further break down FS0_PBK_05 
 14     5**/
 14     6 
 14     7 /**	The structure FMS_catalog1 is from
 14     8*	FMS PROGRAM LOGIC MANUAL
 14     9*	DC26, Rev. 0, January 1974
 14    10*	Page 4-9
 14    11***/
 14    12 dcl  FMS_cat_ptr              ptr init(null());
 14    13 dcl  1 FMS_catalog		aligned based(FMS_cat_ptr)
 14    14 ,     3 FSnTYP_0
 14    15 ,       4 bits00_05		bit(06)unal
 14    16 ,       4 bits06_10		bit(05)unal
 14    17 ,       4 bits11_17		bit(07)unal
 14    18 ,       4 bits18_35		bit(18)unal
 14    19 ,     3 FSnNLL_1
 14    20 ,       4 bits00_17		bit(18)unal
 14    21 ,       4 bits18_35		bit(18)unal
 14    22 ,     3 FSnPLL_2
 14    23 ,       4 bits00_17		bit(18)unal
 14    24 ,       4 bits18_35		bit(18)unal
 14    25 ,     3 FSnPTP_3
 14    26 ,       4 bits00_17		bit(18)unal
 14    27 ,       4 bits18_35		bit(18)unal
 14    28 ,     3 FSnCBK_4
 14    29 ,       4 bits00_17		bit(18)unal
 14    30 ,       4 bits18_35		bit(18)unal
 14    31 ;
 14    32 
 14    33 /**	Page 4-10.	**/
 14    34 dcl  1 Type_0_Catalog	aligned based(FMS_cat_ptr)
 14    35 ,     3 FS0_TYP_00		bit(36)
 14    36 ,     3 FS0_NLL_01
 14    37 ,       4 bits00_17		bit(18)unal
 14    38 ,       4 bits18_35		bit(18)unal
 14    39 ,     3 FS0_PLL_02		bit(36)
 14    40 ,     3 FS0_PTP_03
 14    41 ,       4 bits00_17		fixed bin(17)unal
 14    42 ,       4 bits18_35		bit(18)unal
 14    43 ,     3 FS0_CBK_04
 14    44 ,       4 bits00_17		fixed bin(17)unal
 14    45 ,       4 bits18_35		bit(18)unal
 14    46 ,     3 FS0_PBK_05
 14    47 ,       4 bits00_17		bit(18)unal
 14    48 ,       4 bits18_35		bit(18)unal
 14    49 ,     3 FS0_CNM_06_07	bit(72)
 14    50 ,     3 FS0_ORG_10_11	bit(72)
 14    51 ,     3 FS0_PWD_12_13	bit(72)
 14    52 ,     3 FS0_CDT_14		bit(36)
 14    53 ,     3 FS0_MOD_15		bit(36)
 14    54 ,     3 FS0_IND_16		bit(36)
 14    55 ,     3 FS0_PER_17
 14    56 ,       4 bits00_11		bit(12)unal
 14    57 ,       4 bits12_14		bit(03)unal
 14    58 ,       4 bit15		bit(01)unal
 14    59 ,       4 bit16		bit(01)unal
 14    60 ,       4 bit17		bit(01)unal
 14    61 ,       4 bits18_35		bit(18)unal
 14    62 ,     3 FS0_OP1_20		bit(36)
 14    63 ,     3 FS0_OP2_21		bit(36)
 14    64 ,     3 FS0_VAR_22_76	(15)
 14    65 ,       4 FS0_SNM_00_01	bit(72)
 14    66 ,       4 FS0_SPT_02
 14    67 ,         5 bit00		bit(01)unal
 14    68 ,         5 bit01		bit(01)unal
 14    69 ,         5 bits02_17	bit(16)unal
 14    70 ,         5 bits18_35	bit(18)unal
 14    71 ,     3 checksum_77		bit(36)
 14    72 ;
 14    73 
 14    74 /* Condensed form of type 0 record. */
 14    75 dcl 1 t0c			aligned based(FMS_cat_ptr)
 14    76 ,     2 fill		(0:17)bit(36)
 14    77 ,     2 name		(15)
 14    78 ,       3 bcd		bit(72)
 14    79 ,       3 more		bit(36)
 14    80 ;
 14    81 
 14    82 /**	Page 4-10.	**/
 14    83 dcl  Type_1_ptr               ptr init(null());
 14    84 dcl  1 Type_1_Catalog	aligned based(Type_1_ptr)
 14    85 ,     3 FS1_TYP_00		bit(36)
 14    86 ,     3 FS1_NLL_01
 14    87 ,       4 bits00_17		bit(18)unal
 14    88 ,       4 bits18_35		bit(18)unal
 14    89 ,     3 FS1_PLL_02		bit(36)
 14    90 ,     3 FS1_PTP_03
 14    91 ,       4 bits00_17		fixed bin(17)unal
 14    92 ,       4 bits18_35		bit(18)unal
 14    93 ,     3 FS1_CBK_04
 14    94 ,       4 bits00_17		bit(18)unal
 14    95 ,       4 bits18_35		bit(18)unal
 14    96 ,     3 FS1_OPN_05		bit(36)
 14    97 ,     3 FS1_VAR_06_76	(19)
 14    98 ,       4 FS1_SNM_00_01	bit(72)
 14    99 ,       4 FS1_SPT_02
 14   100 ,         5 bit00		bit(01)unal
 14   101 ,         5 bit01		bit(01)unal
 14   102 ,         5 bits02_17	bit(16)unal
 14   103 ,         5 bits18_35	bit(18)unal
 14   104 ,     3 checksum_77		bit(36)
 14   105 ;
 14   106 
 14   107 /* Condensed form of type 1 record. */
 14   108 dcl 1 t1c			aligned based(FMS_cat_ptr)
 14   109 ,     2 fill		(0:5)bit(36)
 14   110 ,     2 name		(19) like t0c.name
 14   111 ;
 14   112 
 14   113 /**	Page 4-11.	**/
 14   114 dcl  1 Type_2_Catalog	aligned based(FMS_cat_ptr)
 14   115 ,     3 FS2_TYP_00		bit(36)
 14   116 ,     3 FS2_NLL_01		bit(36)
 14   117 ,     3 FS2_PLL_02		bit(36)
 14   118 ,     3 FS2_PTP_03		bit(36)
 14   119 ,     3 FS2_CBK_04		bit(36)
 14   120 ,     3 FS2_PBK_05
 14   121 ,       4 bits00_17		bit(18)unal
 14   122 ,       4 bits18_35		bit(18)unal
 14   123 ,     3 FS2_FNM_06_07	bit(72)
 14   124 ,     3 FS2_ORG_10_11	bit(72)
 14   125 ,     3 FS2_PWD_12_13	bit(72)
 14   126 ,     3 FS2_CDT_14		bit(36)
 14   127 ,     3 FS2_MOD_15		bit(36)
 14   128 ,     3 FS2_IND_16		bit(36)
 14   129 ,     3 FS2_PER_17
 14   130 ,       4 bits00_11		bit(12)unal
 14   131 ,       4 bits12_15		bit(04)unal
 14   132 ,       4 bit16		bit(01)unal
 14   133 ,       4 bit17		bit(01)unal
 14   134 ,       4 bits18_35		bit(18)unal
 14   135 ,     3 FS2_MTR_20_21	bit(72)
 14   136 ,     3 FS2_FU1_22
 14   137 ,       4 bit00		bit(01)unal
 14   138 ,       4 bit01		bit(01)unal
 14   139 ,       4 bit02		bit(01)unal
 14   140 ,       4 bit03		bit(01)unal
 14   141 ,       4 bit04		bit(01)unal
 14   142 ,       4 bit05		bit(01)unal
 14   143 ,       4 bit06		bit(01)unal
 14   144 ,       4 bit07		bit(01)unal
 14   145 ,       4 bit08		bit(01)unal
 14   146 ,       4 bit09		bit(01)unal
 14   147 ,       4 bits10_11		bit(02)unal
 14   148 ,       4 bits12_17		bit(06)unal
 14   149 ,       4 bits18_35		bit(18)unal
 14   150 ,     3 FS2_FUS_23
 14   151 ,       4 bits00_17		bit(18)unal
 14   152 ,       4 bit18		bit(01)unal
 14   153 ,       4 bit19		bit(01)unal
 14   154 ,       4 bit20		bit(01)unal
 14   155 ,       4 bit21		bit(01)unal
 14   156 ,       4 bit22		bit(01)unal
 14   157 ,       4 bit23		bit(01)unal
 14   158 ,       4 bit24		bit(01)unal
 14   159 ,       4 bit25		bit(01)unal
 14   160 ,       4 bit26		bit(01)unal
 14   161 ,       4 bit27		bit(01)unal
 14   162 ,       4 bit28		bit(01)unal
 14   163 ,       4 bit29		bit(01)unal
 14   164 ,       4 bits30_35		bit(06)unal
 14   165 ,     3 FS2_USI_24
 14   166 ,       4 bit00		bit(01)unal
 14   167 ,       4 bits01_35		bit(35)unal
 14   168 ,     3 FS2_FU2_25
 14   169 ,       4 bit00		bit(01)unal
 14   170 ,       4 bit01		bit(01)unal
 14   171 ,       4 bit02		bit(01)unal
 14   172 ,       4 bit03		bit(01)unal
 14   173 ,       4 bit04		bit(01)unal
 14   174 ,       4 bit05		bit(01)unal
 14   175 ,       4 bit06		bit(01)unal
 14   176 ,       4 bit07		bit(01)unal
 14   177 ,       4 bit08		bit(01)unal
 14   178 ,       4 bit09		bit(01)unal
 14   179 ,       4 bit10		bit(01)unal
 14   180 ,       4 bit11		bit(01)unal
 14   181 ,       4 bit12		bit(01)unal
 14   182 ,       4 bit13		bit(01)unal
 14   183 ,       4 bit14		bit(01)unal
 14   184 ,       4 bit15		bit(01)unal
 14   185 ,       4 bit16		bit(01)unal
 14   186 ,       4 bit17		bit(01)unal
 14   187 ,       4 bits18_35		bit(18)unal
 14   188 ,     3 FS2_LCD_26		bit(36)
 14   189 ,     3 FS2_LAD_27		bit(36)
 14   190 ,     3 FS2_LST_30
 14   191 ,       4 bits00_05		bit(06)unal
 14   192 ,       4 bits06_35		bit(30)unal
 14   193 ,     3 FS2_ATB_31		bit(36)
 14   194 ,     3 FS2_PDF_32		bit(36)
 14   195 ,     3 FS2_STC_33		bit(36)
 14   196 ,     3 FS2_BSY_34		bit(36)
 14   197 ,     3 FS2_TBC_35		bit(36)
 14   198 ,     3 FS2_OP2_7_36_43	(2:7)bit(36)
 14   199 ,     3 FS2_VAR_44_75
 14   200 ,       4 Device_descriptor
 14   201 ,         5 bits00_03	bit(04)unal	/* 0101 */
 14   202 ,         5 bits04_05	bit(02)unal
 14   203 ,         5 bits06_35	bit(30)unal
 14   204 ,       4 Space_descriptor
 14   205 ,         5 bit00		bit(01)unal
 14   206 ,         5 bit01		bit(01)unal	/* =0 => space desc. */
 14   207 ,         5 bit02		bit(01)unal
 14   208 ,         5 bits03_17	bit(15)unal
 14   209 ,         5 bits18_35	bit(18)unal
 14   210 ,       4 zero		(24)bit(36)
 14   211 ,     3 zero_76		bit(36)
 14   212 ,     3 checksum_77		bit(36)
 14   213 ;
 14   214 
 14   215 /**	Page 4-13.	**/
 14   216 dcl  Type_4_ptr               ptr init(null());
 14   217 dcl  1 Type_4_Catalog	aligned based(Type_4_ptr)
 14   218 ,     3 FS4_TYP_00		bit(36)
 14   219 ,     3 FS4_NLL_01		bit(36)
 14   220 ,     3 FS4_PLL_02		bit(36)
 14   221 ,     3 FS4_PTP_03		bit(36)
 14   222 ,     3 FS4_CBK_04		bit(36)
 14   223 ,     3 FS4_OP1_2_05_06	bit(72)
 14   224 ,     3 FS4_VAR_07_75	bit(1980)	/* 1980 = 55 * 36bits @ */
 14   225 ,     3 zero		bit(36)
 14   226 ,     3 checksum_77		bit(36)
 14   227 ;
 14   228 
 14   229 /**	Page 2-69		**/
 14   230 dcl  buffer_ptr               ptr init(null());
 14   231 dcl 1 callers_buffer	aligned based(buffer_ptr)
 14   232 ,     3 first25		(25)bit(36)	/* Work area for  ???. */
 14   233 /**	Next 35 words. FMS work area.	**/
 14   234 ,     3 W00_FSCODE		bit(036)
 14   235 ,     3 W01_02_FSCALL	bit(072)
 14   236 ,     3 W03		bit(036)
 14   237 ,     3 W04_06		bit(108)
 14   238 ,     3 W07		bit(036)
 14   239 ,     3 W10		bit(036)
 14   240 ,     3 W11_12		bit(072)
 14   241 ,     3 W13_FSSSLV		bit(036)
 14   242 ,     3 W14_15		bit(072)
 14   243 ,     3 W16_FSFBSY		bit(036)
 14   244 ,     3 W17_FSRETP		bit(036)
 14   245 ,     3 W20
 14   246 ,       4 FSMME		unal
 14   247 ,         5 bits00_17	bit(18)unal
 14   248 ,       4 FSARG		unal
 14   249 ,         5 bits18_35	bit(18)unal
 14   250 ,     3 W21_FSCPOS
 14   251 ,       4 bits00_17		bit(18)unal
 14   252 ,       4 bits18_35		bit(18)unal
 14   253 ,     3 W22_FSCCFP
 14   254 ,       4 bits00_17		bit(18)unal
 14   255 ,       4 bits18_35		bit(18)unal
 14   256 ,     3 W23_FSPCFP
 14   257 ,       4 bits00_17		bit(18)unal
 14   258 ,       4 bits18_35		bit(18)unal
 14   259 ,     3 W24
 14   260 ,       4 FSREGU		unal
 14   261 ,         5 bits00_17	bit(18)unal
 14   262 ,       4 FSREGL		unal
 14   263 ,         5 bits18_35	bit(18)unal
 14   264 ,     3 W25_FSCDEV
 14   265 ,       4 bits00_15		bit(16)unal
 14   266 ,       4 bit16		bit(01)unal
 14   267 ,       4 bit17		bit(01)unal
 14   268 ,       4 bits18_35		bit(18)unal
 14   269 ,     3 W26_FSDDEV
 14   270 ,       4 bits00_15		bit(16)unal
 14   271 ,       4 bit16		bit(01)unal
 14   272 ,       4 bit17		bit(01)unal
 14   273 ,       4 bits18_35		bit(18)unal
 14   274 ,     3 W27_FSENDT		bit(036)
 14   275 ,     3 W30_FSCPAT		bit(036)
 14   276 ,     3 W31_FSPERM		bit(036)
 14   277 ,     3 W32_FSDDCW		bit(036)
 14   278 ,     3 W33_FSDCWP		bit(036)
 14   279 ,     3 W34_FSDUPD		bit(036)
 14   280 ,     3 W35_FSAVBL		bit(036)
 14   281 ,     3 W36_FSTEMP		bit(036)
 14   282 ,     3 W37_FSCKSM		bit(036)
 14   283 ,     3 W40_FSIOS1		bit(036)
 14   284 ,     3 W41_FSSRW1		bit(036)
 14   285 ,     3 W42_FSSRW2		bit(036)
 14   286 ,     3 W43_FSBFER		bit(036)	/* Starting location of buffer for catalog record(s). */
 14   287 ,     3 remainder_of_buffer	(319)bit(36)
 14   288 ;
 14   289 
 14   290 /*   END INCLUDE FILE gtss_FMS_catalog.incl.pl1 */
      433 
      434 
 15     1 
 15     2 declare						/* Information returned by hcs_$status_ and hcs_$status_long */
 15     3 
 15     4 
 15     5          1 branch aligned based (info_ptr),		/* information about this particular branch */
 15     6          2 type bit (2) unal,				/* "00"b = link, "01"b = segment, "10"b = directory */
 15     7          2 nnames bit (16) unal,			/* number of names this entry has */
 15     8          2 names_relp bit (18) unal,			/* pointer, relative to base of segment, to names */
 15     9          2 dtm bit (36) unal,				/* date-time the segment was last modified */
 15    10          2 dtu bit (36) unal,				/* date-time the segment was last used */
 15    11          2 mode bit (5) unal,				/* the user's access modes to the entry */
 15    12          2 padding bit (13) unal,			/* yawn */
 15    13          2 records_used bit (18) unal,			/* number of blocks actually occupied by entry */
 15    14 
 15    15 /* limit of information returned by status_ */
 15    16 
 15    17          2 dtd bit (36) unal,				/* date-time the segment was last dumped */
 15    18          2 dtbm bit (36) unal,			/* date-time the branch for the entry was modified */
 15    19          2 account bit (36) unal,			/* account to which storage is charged */
 15    20          2 current_length bit (12) unal,		/* maximum length in blocks */
 15    21          2 bit_count bit (24) unal,			/* length of entry in bits */
 15    22          2 device_id bit (4) unal,			/* device on which segment currently resides */
 15    23          2 mdid bit (4) unal,				/* device to which it is currently being moved */
 15    24          2 copy_switch bit (1) unal,			/* segment copy switch */
 15    25          2 tpd bit (1) unal,				/* transparent paging device switch */
 15    26          2 more_padding bit (8) unal,			/* yawn, yawn */
 15    27          2 ring_brackets (0:2) bit (6) unal,		/* ring brackets for entry */
 15    28          2 uid bit (36) unal,				/* unique identifier */
 15    29 
 15    30 
 15    31          1 link aligned based (info_ptr),		/* information about link entries */
 15    32          2 type bit (2) unal,				/* as above */
 15    33          2 nnames bit (16) unal,			/* number of names for this link */
 15    34          2 names_relp bit (18) unal,			/* as above */
 15    35          2 dtbm bit (36) unal,			/* date-time, entry for link was last modified */
 15    36          2 dtd bit (36) unal,				/* date-time dumped */
 15    37          2 pathname_length bit (18) unal,		/* length of link pathname */
 15    38          2 pathname_relp bit (18) unal,			/* pointer, relative to based of segment, to name */
 15    39 
 15    40          entry_names (1) character (32) aligned based (pointer (area_pointer, branch.names_relp)),
 15    41 						/* array of names returned */
 15    42          pathname character (fixed (link.pathname_length)) aligned based (pointer (area_pointer, link.pathname_relp)),
 15    43 						/* pathname a link points to */
 15    44 
 15    45          area_pointer pointer,			/* to area in which to allocate names */
 15    46          info_ptr pointer;				/* to structure returned */
 15    47 
 15    48 
      435 
      436 
 16     1 /* BEGIN INCLUDE FILE gtss_filact_options.incl.pl1 */
 16     2 /*
 16     3*  Created: (Wardd Multics)  09/08/78 1017.4 mst Fri 
 16     4**/
 16     5 dcl  now			fixed bin;
 16     6 dcl  options_ptr		ptr init(null());
 16     7 dcl 1 optionsx		aligned based(options_ptr)
 16     8 ,     3 word1
 16     9 ,       4 option_bit	unal
 16    10 ,         5 j		bit(01)unal	/* Space must be contiguous. */
 16    11 ,         5 b		bit(01)unal	/* Random  (CF only). */
 16    12 ,         5 c		bit(01)unal	/* File TSS created (CF only) */
 16    13 ,         5 d		bit(01)unal	/* I-D-S file. */
 16    14 ,         5 k		bit(01)unal	/* 320-word blocks (CF only). */
 16    15 ,         5 f		bit(01)unal	/* File already on tape or nonstructured disk pack (non-TSS). */
 16    16 ,         5 bit_06		bit(01)unal	/* (not used). */
 16    17 ,         5 h		bit(01)unal	/* Attributes present. */
 16    18 ,         5 i		bit(01)unal	/* User-specified attributes (CF & MF only). */
 16    19 ,         5 bits09_12	bit(04)unal	/* (not used). */
 16    20 ,         5 y		bit(01)unal	/* FMS protection options specified. */
 16    21 ,         5 bits14_17	bit(04)unal	/* (not used). */
 16    22 ,       4 device_name	bit(12)unal
 16    23 ,       4 device_type	bit(06)unal
 16    24 ,     3 word2
 16    25 ,       4 initial_file_size	bit(18)unal	/* (CF only). */
 16    26 ,       4 max_file_size	bit(18)unal	/* 0 => max size unlimited. */
 16    27 ,     3 words3_now		(now)
 16    28 ,       4 optional_specific_permissions
 16    29 ,         5 USERID		bit(72)unal
 16    30 ,         5 permission_bit	like permissionsx
 16    31 ,     3 word_now_plus_1
 16    32 ,       4 end_of_list	fixed bin(35)
 16    33 ,     3 word_now_plus_2
 16    34 ,       4 fill		bit(01)unal
 16    35 ,       4 user_specified_attributes bit(35)unal	/* (CF & MF only). */
 16    36 ;
 16    37 
 17     1 /* BEGIN INCLUDE FILE gtss_filact_permissions.incl.pl1 */
 17     2 /*
 17     3*  Created: (Wardd Multics)  09/08/78 1018.0 mst Fri 
 17     4**/
 17     5 dcl  permissions_ptr	ptr init(null());
 17     6 dcl 1 permissionsx		aligned based(permissions_ptr)
 17     7 ,     3 r			bit(01)unal	/* Read permission. 	*/
 17     8 ,     3 w			bit(01)unal	/* Write permission. 	*/
 17     9 ,     3 a			bit(01)unal	/* Append permission. 	*/
 17    10 ,     3 e			bit(01)unal	/* Execute permission. 	*/
 17    11 ,     3 p			bit(01)unal	/* Purge permission. 	*/
 17    12 ,     3 m			bit(01)unal	/* Modify permission. 	*/
 17    13 ,     3 l			bit(01)unal	/* Lock permission. 	*/
 17    14 ,     3 bit_07		bit(01)unal	/* (not used). */
 17    15 ,     3 c			bit(01)unal	/* Create permission. 	*/
 17    16 ,     3 x			bit(01)unal	/* Recovery permission. 	*/
 17    17 ,     3 bits10_35		bit(26)unal	/* (not used). */
 17    18 ;
 17    19 
 17    20 /*   END INCLUDE FILE gtss_filact_permissions.incl.pl1 */
 16    38 
 16    39 
 16    40 /*   END INCLUDE FILE gtss_filact_options.incl.pl1 */
      437 
      438 
 18     1 /* BEGIN INCLUDE FILE gse_ext_.incl.pl1 */
 18     2 /*
 18     3*  Created:  Kepner  78-12-01
 18     4**/
 18     5 
 18     6 dcl gse_ext_$drm_rule	fixed bin(24) ext;
 18     7 
 18     8 /* $drm_rule:
 18     9*   0 => rule not set
 18    10*   1 => umc_dir_mode
 18    11*   2 => working_dir_mode
 18    12*   3 => smc_dir_mode
 18    13**/
 18    14 
 18    15 dcl gse_ext_$gcos_debug_pathname       char(168)  /* pathname for the gcos debugger control file */ ext;
 18    16 dcl gse_ext_$smc_pathname              char(168) 	/* root directory used with smc_dir mapping rule */ ext;
 18    17 dcl gse_ext_$umc_name                  char(12) 	/* User Master Catalog name specified by user with gse command */ ext;
 18    18 dcl 1 gse_ext_$modes	aligned ext,
 18    19        3 ast		bit(01) unal, 	/* 1 => use asterisk as prompt character */
 18    20        3 drl		bit(01) unal, 	/* 1 => cause trace info on each derail to be printed */
 18    21        3 gdb		bit(01) unal, 	/* 1 => use gcos debugger (gdb) */
 18    22        3 mcmd		bit(01) unal, 	/* 1 => allow use of e request at GTSS command level */
 18    23        3 mquit		bit(01) unal, 	/* 1 => quit causes entry to new Multics command level */
 18    24        3 ss		bit(01) unal, 	/* 1 => cause trace info on each subsystem to be printed */
 18    25        3 fill		bit(30) unal; 
 18    26 
 18    27 /*   END INCLUDE FILE gse_ext_.incl.pl1 */
      439 
      440 
 19     1 /* BEGIN INCLUDE FILE gtss_db_names.incl.pl1 */
 19     2 /*
 19     3*  Created:  (Wardd Multics)  03/29/79 1909.1 mst Thu 
 19     4**/
 19     5 
 19     6 /* To provide a new debugging switch:
 19     7*
 19     8*   1) Locate the comment "Insert next entry above this comment".
 19     9*
 19    10*   2) Place a new declaration for a db_ variable just
 19    11*      above this comment, in the same manner as the
 19    12*      current declaration just above the comment, using
 19    13*      the next integer gtss_ext_$db index.
 19    14*
 19    15*   3) Execute the gtss|db_names ted macro (this updates
 19    16*      the sorted name table).
 19    17*
 19    18*   4) Example use:
 19    19*
 19    20*      if db_drl_grow then do;
 19    21*      .
 19    22*      .
 19    23*      .
 19    24*      debug i/o statements using com_err_ or ioa_
 19    25*      .
 19    26*      .
 19    27*      .
 19    28*      end;
 19    29*
 19    30**/
 19    31 
 19    32 dcl (
 19    33  db_		bit(1) defined(gtss_ext_$db(01))
 19    34 ,db_CFP_input	bit(1) defined(gtss_ext_$db(02))
 19    35 ,db_drl_addmem	bit(1) defined(gtss_ext_$db(03))
 19    36 ,db_drl_defil	bit(1) defined(gtss_ext_$db(04))
 19    37 ,db_drl_filact	bit(1) defined(gtss_ext_$db(05))
 19    38 ,db_drl_filsp	bit(1) defined(gtss_ext_$db(06))
 19    39 ,db_drl_grow	bit(1) defined(gtss_ext_$db(07))
 19    40 ,db_drl_rew	bit(1) defined(gtss_ext_$db(08))
 19    41 ,db_filact_funct02	bit(1) defined(gtss_ext_$db(09))
 19    42 ,db_filact_funct03	bit(1) defined(gtss_ext_$db(10))
 19    43 ,db_filact_funct04	bit(1) defined(gtss_ext_$db(11))
 19    44 ,db_filact_funct05	bit(1) defined(gtss_ext_$db(12))
 19    45 ,db_filact_funct10	bit(1) defined(gtss_ext_$db(13))
 19    46 ,db_filact_funct11	bit(1) defined(gtss_ext_$db(14))
 19    47 ,db_filact_funct14	bit(1) defined(gtss_ext_$db(15))
 19    48 ,db_filact_funct18	bit(1) defined(gtss_ext_$db(16))
 19    49 ,db_filact_funct19	bit(1) defined(gtss_ext_$db(17))
 19    50 ,db_filact_funct21	bit(1) defined(gtss_ext_$db(18))
 19    51 ,db_filact_funct22	bit(1) defined(gtss_ext_$db(19))
 19    52 ,db_interp_prim	bit(1) defined(gtss_ext_$db(20))
 19    53 ,db_ios		bit(1) defined(gtss_ext_$db(21))
 19    54 ,db_run_subsystem	bit(1) defined(gtss_ext_$db(22))
 19    55 ,db_drl_t_cfio	bit(1) defined(gtss_ext_$db(23))
 19    56 ,db_drl_switch	bit(1) defined(gtss_ext_$db(24))
 19    57 ,db_drl_dio	bit(1) defined(gtss_ext_$db(25))
 19    58 ,db_drl_retfil	bit(1) defined(gtss_ext_$db(26))
 19    59 ,db_drl_msub	bit(1) defined(gtss_ext_$db(27))
 19    60 ,db_drl_callss	bit(1) defined(gtss_ext_$db(28))
 19    61 ,db_drl_rstswh	bit(1) defined(gtss_ext_$db(29))
 19    62 ,db_drl_setswh	bit(1) defined(gtss_ext_$db(30))
 19    63 ,db_mcfc		bit(1) defined(gtss_ext_$db(31))
 19    64 ,db_dq		bit(1) defined(gtss_ext_$db(32))
 19    65 ,db_abs		bit(1) defined(gtss_ext_$db(33))
 19    66 ,db_attributes_mgr	bit(1) defined(gtss_ext_$db(34))
 19    67 ,db_expand_pathname bit(1) defined(gtss_ext_$db(35))
 19    68 ,db_drl_part	bit(1) defined(gtss_ext_$db(36))
 19    69 ,db_drl_morlnk	bit(1) defined(gtss_ext_$db(37))
 19    70 ,db_drl_kin	bit(1) defined(gtss_ext_$db(38))
 19    71 /* Insert next entry above this comment. */
 19    72 );
 19    73 
 19    74 /* Table of sorted names. */
 19    75 dcl 1 debug_bit_names (38) static int options(constant)
 19    76 ,     2 name char(18)var init(
 19    77          "" ,"CFP_input" ,"abs" ,"attributes_mgr" ,"dq" ,"drl_addmem"
 19    78          ,"drl_callss" ,"drl_defil" ,"drl_dio" ,"drl_filact" ,"drl_filsp"
 19    79          ,"drl_grow" ,"drl_kin" ,"drl_morlnk" ,"drl_msub" ,"drl_part"
 19    80          ,"drl_retfil" ,"drl_rew" ,"drl_rstswh" ,"drl_setswh" ,"drl_switch"
 19    81          ,"drl_t_cfio" ,"expand_pathname" ,"filact_funct02" ,"filact_funct03"
 19    82          ,"filact_funct04" ,"filact_funct05" ,"filact_funct10" ,"filact_funct11"
 19    83          ,"filact_funct14" ,"filact_funct18" ,"filact_funct19" ,"filact_funct21"
 19    84          ,"filact_funct22" ,"interp_prim" ,"ios" ,"mcfc" ,"run_subsystem"
 19    85 			)
 19    86 ,     2 value fixed bin init(
 19    87          01 ,02 ,33 ,34 ,32 ,03 ,28 ,04 ,25 ,05 ,06 ,07 ,38 ,37 ,27 ,36 ,26 ,08
 19    88          ,29 ,30 ,24 ,23 ,35 ,09 ,10 ,11 ,12 ,13 ,14 ,15 ,16 ,17 ,18 ,19 ,20 ,21
 19    89          ,31 ,22
 19    90 			);
 19    91 /* End of table. */
 19    92 /*   END INCLUDE FILE gtss_db_names.incl.pl1 */
      441 
      442      end						/* gtss_filact_funct03_ */;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/10/84  1044.0  gtss_filact_funct03_.pl1          >spec>on>7105>gtss_filact_funct03_.pl1
225          1    09/09/83  1713.8  gtss_filact_intp1.incl.pl1        >ldd>include>gtss_filact_intp1.incl.pl1
227          2    09/09/83  1713.8  gtss_filact_intp2.incl.pl1        >ldd>include>gtss_filact_intp2.incl.pl1
229          3    09/09/83  1713.9  gtss_filact_intp3.incl.pl1        >ldd>include>gtss_filact_intp3.incl.pl1
231          4    09/09/83  1713.9  gtss_filact_intp5.incl.pl1        >ldd>include>gtss_filact_intp5.incl.pl1
4-39         5    02/13/75  1618.9  acls.incl.pl1                     >ldd>include>acls.incl.pl1
417          6    09/09/83  1714.3  gtss_ust_ext_.incl.pl1            >ldd>include>gtss_ust_ext_.incl.pl1
419          7    09/09/83  1713.8  gtss_ext_.incl.pl1                >ldd>include>gtss_ext_.incl.pl1
421          8    09/09/83  1713.3  gtss_filact_status.incl.pl1       >ldd>include>gtss_filact_status.incl.pl1
423          9    12/10/84  1029.8  gtss_pnterr.incl.pl1              >spec>on>7105>gtss_pnterr.incl.pl1
425         10    12/15/83  1100.4  mc.incl.pl1                       >ldd>include>mc.incl.pl1
427         11    12/10/84  1029.7  gtss_entry_dcls.incl.pl1          >spec>on>7105>gtss_entry_dcls.incl.pl1
429         12    09/09/83  1713.5  gtss_ascii_file_names.incl.pl1    >ldd>include>gtss_ascii_file_names.incl.pl1
431         13    09/09/83  1714.0  gtss_file_values.incl.pl1         >ldd>include>gtss_file_values.incl.pl1
433         14    09/09/83  1713.5  gtss_FMS_catalog.incl.pl1         >ldd>include>gtss_FMS_catalog.incl.pl1
435         15    04/29/76  1139.2  status_info.incl.pl1              >ldd>include>status_info.incl.pl1
437         16    09/09/83  1713.9  gtss_filact_options.incl.pl1      >ldd>include>gtss_filact_options.incl.pl1
16-38       17    09/09/83  1713.9  gtss_filact_permissions.incl.pl1  >ldd>include>gtss_filact_permissions.incl.pl1
439         18    09/09/83  1713.4  gse_ext_.incl.pl1                 >ldd>include>gse_ext_.incl.pl1
441         19    09/09/83  1713.6  gtss_db_names.incl.pl1            >ldd>include>gtss_db_names.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
CF_arglist                             based           structure                level 1 dcl 213
CF_args                                based           structure                level 1 dcl 204
FMS_block_ptr                   000130 automatic       pointer                  initial dcl 325 set ref 325*
FMS_cat_ptr                     000316 automatic       pointer                  initial dcl 14-12 set ref 14-12*
L_arglist                 0(18)        based           bit(18)                  level 3 in structure "CF_args" packed unaligned
                                                                                  dcl 204 in procedure "gtss_filact_funct03_" ref 51
                                                                                  57
L_arglist                 0(18)        based           bit(18)                  level 2 in structure "filact_args" packed unaligned
                                                                                  dcl 1-24 in procedure "validate_status" ref 1-16
                                                                                  1-16
L_cat_filedescr           1            based           bit(18)                  level 3 packed unaligned dcl 213 set ref 63*
L_options                 2            based           bit(18)                  level 3 in structure "CF_arglist" packed unaligned
                                                                                  dcl 213 in procedure "gtss_filact_funct03_" set
                                                                                  ref 81*
L_options                              parameter       bit(18)                  unaligned dcl 255 in procedure "get_options" ref 249
                                                                                  260 265
L_permissions             1(18)        based           bit(18)                  level 3 packed unaligned dcl 213 ref 74 76
L_status_return                        based           bit(18)                  level 3 packed unaligned dcl 213 set ref 60*
Type_1_ptr                      000320 automatic       pointer                  initial dcl 14-83 set ref 14-83*
Type_4_ptr                      000322 automatic       pointer                  initial dcl 14-216 set ref 14-216*
USERID                                 based           fixed bin(71,0)          level 3 in structure "cfd2" dcl 2-112 in procedure
                                                                                  "get_ascii_file_name" ref 2-28
USERID                                 based           bit(72)                  array level 2 in structure "ol" packed unaligned
                                                                                  dcl 4-33 in procedure "get_multics_seg_acl" set
                                                                                  ref 4-27 4-27
USERID_password           2            based           bit(72)                  level 3 dcl 2-112 set ref 2-30*
access_name                     000156 automatic       char(32)                 array level 2 in structure "segment_acl_space"
                                                                                  packed unaligned dcl 398 in procedure
                                                                                  "gtss_filact_funct03_" set ref 128* 135*
access_name                            based           char(32)                 array level 2 in structure "segment_acl" dcl 5-2
                                                                                  in procedure "gtss_filact_funct03_" set ref 4-28*
acf                                    based           structure                level 1 dcl 2-106
acfp                                   parameter       pointer                  dcl 2-16 ref 2-8 2-19
acl_count                       000100 automatic       fixed bin(17,0)          dcl 5-2 set ref 4-18*
acl_ptr                         000102 automatic       pointer                  dcl 5-2 set ref 4-17* 4-25 4-26 4-28
addr                                                   builtin function         dcl 285 ref 63 63 83 83 140 140 140 140 145 145 185
                                                                                  185 2-62 2-62 2-62 2-62 4-27 4-27 4-27 4-27
addrel                                                 builtin function         dcl 286 ref 57 76 1-20 2-26 265
altname_ptr                     000104 automatic       pointer                  initial dcl 290 set ref 290*
ap                              000356 automatic       pointer                  dcl 2-105 set ref 2-19* 2-38 2-49 2-52 2-56 2-58
                                                                                  2-62 2-62 2-72 2-73 2-77 2-77 2-79 2-79 2-85 2-86
                                                                                  2-87
arg_ptr                         000110 automatic       pointer                  initial dcl 293 set ref 45* 51 57 62 293* 1-16 1-16
arg_ptr_val                            parameter       pointer                  dcl 35 ref 14 45
arglist_ptr                     000106 automatic       pointer                  initial dcl 292 set ref 57* 60 63 74 76 81 292*
ascii_cat_file                  000160 automatic       structure                level 1 unaligned dcl 12-8 set ref 63 63 83 83
attr                    100(04) 000206 automatic       bit(1)                   level 3 in structure "gtss_file_values" packed
                                                                                  unaligned dcl 13-56 in procedure
                                                                                  "gtss_filact_funct03_" set ref 158*
attr                    105(01) 000206 automatic       bit(35)                  level 3 in structure "gtss_file_values" packed
                                                                                  unaligned dcl 13-56 in procedure
                                                                                  "gtss_filact_funct03_" set ref 176* 178*
attribute_segment_ptr           000112 automatic       pointer                  initial dcl 294 set ref 294*
attributes              105     000206 automatic       structure                level 2 dcl 13-56
b                         0(01)        based           bit(1)                   level 4 packed unaligned dcl 16-7 ref 172
bit                                                    builtin function         dcl 295 ref 2-47
bit72                                  based           bit(72)                  dcl 296 set ref 2-29*
bits10_35                 2(10)        based           bit(26)                  array level 3 packed unaligned dcl 4-33 ref 4-25
block_factor                    000114 automatic       fixed bin(17,0)          dcl 298 set ref 94* 95* 173 174
buffer_ptr                      000324 automatic       pointer                  initial dcl 14-230 set ref 46* 14-230* 2-57 2-79
                                                                                  2-79
buffer_ptr_val                         parameter       pointer                  dcl 36 ref 14 46
busy                    100(03) 000206 automatic       bit(1)                   level 3 in structure "gtss_file_values" packed
                                                                                  unaligned dcl 13-56 in procedure
                                                                                  "gtss_filact_funct03_" set ref 158*
busy                    101(01) 000206 automatic       bit(1)                   level 3 in structure "gtss_file_values" packed
                                                                                  unaligned dcl 13-56 in procedure
                                                                                  "gtss_filact_funct03_" set ref 175*
callers_buf                            based           structure                level 1 dcl 2-108
cat_filedescr_name_offset       000115 automatic       bit(18)                  unaligned dcl 299 set ref 2-20* 2-33* 2-47* 2-101*
                                                                                  3-10
cdf4                                   based           structure                level 1 dcl 2-130
cfd2                                   based           structure                level 1 dcl 2-112
cfd3                                   based           structure                array level 1 dcl 2-125
cfdl                                   parameter       bit(18)                  unaligned dcl 2-15 ref 2-8 2-22 2-26 2-33 2-42 2-47
cfua                                   parameter       bit(1)                   unaligned dcl 254 ref 249 269
change_name              73     000206 automatic       bit(1)                   level 2 dcl 13-56 set ref 169*
code                                   parameter       fixed bin(35,0)          dcl 37 set ref 14 48* 54* 83* 89 98* 103 103 104*
                                                                                  116* 124 145* 150 185* 186 238
com_err_                        000036 constant        entry                    external dcl 11-8 ref 104
creation_date           106     000206 automatic       char(6)                  level 2 in structure "gtss_file_values" dcl 13-56
                                                                                  in procedure "gtss_filact_funct03_" set ref 183*
creation_date           100(07) 000206 automatic       bit(1)                   level 3 in structure "gtss_file_values" packed
                                                                                  unaligned dcl 13-56 in procedure
                                                                                  "gtss_filact_funct03_" set ref 158*
curll                   100(02) 000206 automatic       bit(1)                   level 3 in structure "gtss_file_values" packed
                                                                                  unaligned dcl 13-56 in procedure
                                                                                  "gtss_filact_funct03_" set ref 158*
curll                   102     000206 automatic       fixed bin(35,0)          level 3 in structure "gtss_file_values" dcl 13-56
                                                                                  in procedure "gtss_filact_funct03_" set ref 174*
d                         0(03)        based           bit(1)                   level 4 packed unaligned dcl 16-7 ref 196
data_fields             102     000206 automatic       structure                level 2 dcl 13-56
data_flags              101     000206 automatic       structure                level 2 dcl 13-56
date                                                   builtin function         dcl 304 ref 182
date_val                        000154 automatic       structure                level 1 packed unaligned dcl 393 set ref 182*
db_filact_funct03                      defined         bit(1)                   unaligned dcl 19-32 ref 104
dd                        1     000154 automatic       char(2)                  level 2 packed unaligned dcl 393 set ref 183
descriptor_ptr                  000116 automatic       pointer                  initial dcl 307 set ref 307* 2-26* 2-28 2-29 2-30
                                                                                  2-36 2-46 2-58 2-62 2-62
df                                     parameter       bit(1)                   unaligned dcl 236 ref 233 238
dname                     1     000206 automatic       char(168)                level 2 packed unaligned dcl 13-56 set ref 83* 98*
                                                                                  104* 238*
e                         0(03)        based           bit(1)                   level 2 in structure "permissionsx" packed unaligned
                                                                                  dcl 17-6 in procedure "gtss_filact_funct03_" ref
                                                                                  79
e                         2(03)        based           bit(1)                   array level 3 in structure "ol" packed unaligned
                                                                                  dcl 4-33 in procedure "get_multics_seg_acl" ref
                                                                                  4-26
ename                    53     000206 automatic       char(32)                 level 2 packed unaligned dcl 13-56 set ref 104* 170*
end_of_list                            based           fixed bin(35,0)          level 2 in structure "cfd2" dcl 2-112 in procedure
                                                                                  "get_ascii_file_name" ref 2-46
end_of_list                            based           fixed bin(35,0)          level 3 in structure "optionsx" dcl 16-7
                                                                                  in procedure "gtss_filact_funct03_" ref 268
end_of_list               4            based           fixed bin(35,0)          level 2 in structure "cdf4" dcl 2-130 in procedure
                                                                                  "get_ascii_file_name" ref 2-36
entry_name                      000120 automatic       char(12)                 initial unaligned dcl 310 set ref 310*
error_table_$noentry            000012 external static fixed bin(35,0)          dcl 314 ref 103
fcb_ptr                         000124 automatic       pointer                  dcl 321 set ref 98* 116* 145* 155*
filact_args                            based           structure                level 1 dcl 1-24
file_id_in_ascii          1            based           char(8)                  level 2 dcl 2-108 set ref 2-79* 2-79
file_name_in_ascii              000126 automatic       bit(1)                   unaligned dcl 322 set ref 62* 63*
file_name_in_bcd                       based           fixed bin(17,0)          level 3 packed unaligned dcl 204 ref 62
fixed                                                  builtin function         dcl 324 ref 43 51 173 174 1-16 1-16 1-16 1-16 2-22
                                                                                  2-42 2-47 2-47 260
fnia                                   parameter       bit(1)                   unaligned dcl 2-14 ref 2-8 2-56
grc                                    parameter       bit(18)                  unaligned dcl 2-17 set ref 2-8 2-91* 2-102*
gsc                             000132 automatic       bit(18)                  unaligned dcl 327 set ref 63* 69*
gse_ext_$umc_name               000050 external static char(12)                 unaligned dcl 18-17 ref 2-77
gseg                            000134 automatic       pointer                  initial dcl 328 set ref 44* 57 76 328* 1-20 2-26 265
gseg_val                               parameter       pointer                  dcl 38 ref 14 44
gtss_attributes_mgr_$set        000040 constant        entry                    external dcl 11-32 ref 185
gtss_bcd_ascii_                 000042 constant        entry                    external dcl 11-33 ref 4-27
gtss_bcd_ascii_$lc              000044 constant        entry                    external dcl 11-34 ref 2-62
gtss_expand_pathname_           000046 constant        entry                    external dcl 11-107 ref 83
gtss_ext_$db                    000032 external static bit(1)                   array unaligned dcl 7-10 ref 104 104 2-70
gtss_ext_$user_id               000034 external static varying char(26)         dcl 7-34 ref 128
gtss_file_values                000206 automatic       structure                level 1 dcl 13-56 set ref 185 185
gtss_ust                        000030 external static structure                level 2 dcl 6-16
gtss_ust_ext_$ust               000030 external static structure                level 1 dcl 6-16
hcs_$delentry_file              000014 constant        entry                    external dcl 335 ref 238
high_b                          000136 automatic       bit(18)                  dcl 340 set ref 42* 43 74 1-13
high_i                          000137 automatic       fixed bin(18,0)          dcl 341 set ref 43* 51 2-22 2-42 263 269 275
high_val                               parameter       bit(18)                  unaligned dcl 39 ref 14 42
i                         0(08)        based           bit(1)                   level 4 in structure "optionsx" packed unaligned
                                                                                  dcl 16-7 in procedure "gtss_filact_funct03_" ref
                                                                                  176 269
i                               000140 automatic       fixed bin(24,0)          dcl 342 in procedure "gtss_filact_funct03_" set ref
                                                                                  2-52* 2-56 2-56 2-58 2-58 2-62 2-62 2-62 2-62*
                                                                                  2-72* 2-73* 2-73* 2-85* 2-86 2-87* 4-21* 4-21*
                                                                                  4-23 4-23 4-25 4-26 4-26 4-27 4-27*
id                              000400 automatic       char(12)                 dcl 4-34 set ref 4-27 4-27 4-28
initial_file_size         1            based           bit(18)                  level 3 packed unaligned dcl 16-7 ref 174
ioa_                            000016 constant        entry                    external dcl 344 ref 2-71 2-73
k                               000141 automatic       fixed bin(17,0)          dcl 345 in procedure "gtss_filact_funct03_" set ref
                                                                                  133* 137* 145* 4-24* 4-24 4-25 4-26 4-28
k                         0(04)        based           bit(1)                   level 4 in structure "optionsx" packed unaligned
                                                                                  dcl 16-7 in procedure "gtss_filact_funct03_" ref
                                                                                  94
lid                             000030 external static bit(72)                  level 3 dcl 6-16 ref 2-29
ln                              000403 automatic       fixed bin(17,0)          dcl 4-35 set ref 4-20* 4-21
max_file_size             1(18)        based           bit(18)                  level 3 packed unaligned dcl 16-7 ref 173
max_options                            constant        fixed bin(17,0)          initial dcl 350 ref 398 4-18 4-21
maxll                   100(01) 000206 automatic       bit(1)                   level 3 in structure "gtss_file_values" packed
                                                                                  unaligned dcl 13-56 in procedure
                                                                                  "gtss_filact_funct03_" set ref 158*
maxll                   103     000206 automatic       fixed bin(35,0)          level 3 in structure "gtss_file_values" dcl 13-56
                                                                                  in procedure "gtss_filact_funct03_" set ref 173*
mcp                             000156 automatic       pointer                  dcl 10-10 set ref 41*
mcp_val                                parameter       pointer                  dcl 40 ref 14 41
mm                        0(18) 000154 automatic       char(2)                  level 2 packed unaligned dcl 393 set ref 183
mnw                             000424 automatic       fixed bin(24,0)          dcl 278 set ref 260* 263 269 275
mode_random             101     000206 automatic       bit(1)                   level 3 in structure "gtss_file_values" packed
                                                                                  unaligned dcl 13-56 in procedure
                                                                                  "gtss_filact_funct03_" set ref 172*
mode_random             100     000206 automatic       bit(1)                   level 3 in structure "gtss_file_values" packed
                                                                                  unaligned dcl 13-56 in procedure
                                                                                  "gtss_filact_funct03_" set ref 158*
modes                    10            based           bit(36)                  array level 2 in structure "segment_acl" dcl 5-2
                                                                                  in procedure "gtss_filact_funct03_" set ref 4-25*
                                                                                  4-26*
modes                    10     000156 automatic       bit(36)                  array level 2 in structure "segment_acl_space"
                                                                                  packed unaligned dcl 398 in procedure
                                                                                  "gtss_filact_funct03_" set ref 132* 136*
msf_manager_$acl_add            000020 constant        entry                    external dcl 356 ref 145
msf_manager_$close              000022 constant        entry                    external dcl 357 ref 155
msf_manager_$get_ptr            000024 constant        entry                    external dcl 358 ref 116
msf_manager_$open               000026 constant        entry                    external dcl 359 ref 98
multics_access_mode             000142 automatic       bit(3)                   unaligned dcl 361 set ref 77* 79* 134 136
n                                      parameter       fixed bin(17,0)          dcl 256 in procedure "get_options" set ref 249 259*
                                                                                  272*
n                                      parameter       fixed bin(17,0)          dcl 4-12 in procedure "get_multics_seg_acl" ref 4-6
                                                                                  4-20
name                                   based           char(8)                  array level 2 in structure "cfd3" dcl 2-125
                                                                                  in procedure "get_ascii_file_name" set ref 2-58
                                                                                  2-62 2-62
name                      1            based           char(12)                 array level 2 in structure "acf" dcl 2-106
                                                                                  in procedure "get_ascii_file_name" set ref 2-58*
                                                                                  2-62 2-62 2-73* 2-77 2-77* 2-79 2-86 2-87
name                     22            based           structure                array level 2 in structure "t0c" dcl 14-75
                                                                                  in procedure "gtss_filact_funct03_"
new_ename                63     000206 automatic       char(32)                 level 2 packed unaligned dcl 13-56 set ref 83* 98*
                                                                                  238*
nic                             000143 automatic       fixed bin(24,0)          dcl 362 set ref 2-35* 2-36 2-42 2-46 2-47 2-49*
nn                                     based           fixed bin(17,0)          level 2 dcl 2-106 set ref 2-38* 2-49* 2-52 2-56 2-72
                                                                                  2-79 2-85
now                             000326 automatic       fixed bin(17,0)          dcl 16-5 set ref 81* 140 140* 176 267* 268 269 272
                                                                                  275*
null_file               100(05) 000206 automatic       bit(1)                   level 3 in structure "gtss_file_values" packed
                                                                                  unaligned dcl 13-56 in procedure
                                                                                  "gtss_filact_funct03_" set ref 158*
null_file               101(02) 000206 automatic       bit(1)                   level 3 in structure "gtss_file_values" packed
                                                                                  unaligned dcl 13-56 in procedure
                                                                                  "gtss_filact_funct03_" set ref 180*
number_allocations      100(06) 000206 automatic       bit(1)                   level 3 in structure "gtss_file_values" packed
                                                                                  unaligned dcl 13-56 in procedure
                                                                                  "gtss_filact_funct03_" set ref 158*
number_allocations      104     000206 automatic       fixed bin(35,0)          level 3 in structure "gtss_file_values" dcl 13-56
                                                                                  in procedure "gtss_filact_funct03_" set ref 181*
ol                                     based           structure                array level 1 dcl 4-33
op                              000404 automatic       pointer                  initial dcl 4-36 set ref 4-16* 4-23 4-23 4-25 4-26
                                                                                  4-26 4-27 4-27 4-36*
opp                                    parameter       pointer                  dcl 4-13 ref 4-6 4-16
option_bit                             based           structure                level 3 packed unaligned dcl 16-7
optional_specific_permissions
                          2            based           structure                array level 3 dcl 16-7 set ref 140 140
options_ptr                     000330 automatic       pointer                  initial dcl 16-6 set ref 94 140 140 172 173 174 176
                                                                                  176 196 16-6* 258* 265* 268 269
optionsx                               based           structure                level 1 dcl 16-7
pd                        0(18)        based           bit(18)                  level 2 packed unaligned dcl 410 set ref 244*
permission_bit            2            based           structure                array level 2 dcl 4-33 ref 4-23 4-23
permissions_ptr                 000332 automatic       pointer                  initial dcl 17-5 set ref 76* 77 77 79 79 17-5*
permissionsx                           based           structure                level 1 dcl 17-6 ref 77 77
restore_switch                         based           bit(36)                  level 2 dcl 2-108 set ref 2-57*
rsc                                    parameter       bit(18)                  unaligned dcl 237 ref 233 245
sap                                    parameter       pointer                  dcl 4-14 ref 4-6 4-17
sbc                             000144 automatic       fixed bin(24,0)          dcl 369 set ref 116*
segment_acl                            based           structure                array level 1 dcl 5-2
segment_acl_space               000156 automatic       structure                array level 1 unaligned dcl 398 set ref 140 140 145
                                                                                  145
set_switch              100     000206 automatic       structure                level 2 dcl 13-56 set ref 157*
smc_entry_ptr                   000146 automatic       pointer                  initial dcl 374 set ref 374*
sp                                     parameter       pointer                  dcl 1-8 set ref 1-5 1-20*
sptr                            000150 automatic       pointer                  dcl 376 set ref 116*
status                                 based           bit(18)                  level 2 packed unaligned dcl 410 set ref 196* 198*
                                                                                  245*
status_address                         parameter       bit(18)                  unaligned dcl 1-7 ref 1-5 1-13 1-16 1-16 1-20
status_pointer                  000346 automatic       pointer                  initial dcl 1-9 set ref 1-9* 1-20* 1-21
status_ptr                      000152 automatic       pointer                  initial dcl 379 set ref 60* 196 198 244 245 379*
status_word                            based           structure                level 1 dcl 410 set ref 1-21*
substr                                                 builtin function         dcl 380 ref 77 2-70 2-77 2-79 4-23
t0c                                    based           structure                level 1 dcl 14-75
translate                                              builtin function         dcl 383 ref 128 2-58
user_master_catalog                    based           structure                level 2 dcl 2-112
user_specified_attributes              based           bit(35)                  level 3 packed unaligned dcl 16-7 ref 176
version                         000206 automatic       fixed bin(17,0)          level 2 dcl 13-56 set ref 168*
w                         2(01)        based           bit(1)                   array level 3 in structure "ol" packed unaligned
                                                                                  dcl 4-33 in procedure "get_multics_seg_acl" ref
                                                                                  4-26
w                         0(01)        based           bit(1)                   level 2 in structure "permissionsx" packed unaligned
                                                                                  dcl 17-6 in procedure "gtss_filact_funct03_" ref
                                                                                  79
word1                                  based           structure                level 2 in structure "optionsx" dcl 16-7
                                                                                  in procedure "gtss_filact_funct03_"
word1                                  based           structure                level 2 in structure "CF_arglist" dcl 213
                                                                                  in procedure "gtss_filact_funct03_"
word1                                  based           structure                level 2 in structure "CF_args" dcl 204 in procedure
                                                                                  "gtss_filact_funct03_"
word2                     1            based           structure                level 2 in structure "CF_arglist" dcl 213
                                                                                  in procedure "gtss_filact_funct03_"
word2                     1            based           structure                level 2 in structure "optionsx" dcl 16-7
                                                                                  in procedure "gtss_filact_funct03_"
word3                     2            based           structure                level 2 dcl 213
word_now_plus_1                        based           structure                level 2 dcl 16-7
word_now_plus_2                        based           structure                level 2 dcl 16-7
words3_now                2            based           structure                array level 2 dcl 16-7
yy                              000154 automatic       char(2)                  level 2 packed unaligned dcl 393 set ref 183

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
FMS_catalog                            based           structure                level 1 dcl 14-13
Type_0_Catalog                         based           structure                level 1 dcl 14-34
Type_1_Catalog                         based           structure                level 1 dcl 14-84
Type_2_Catalog                         based           structure                level 1 dcl 14-114
Type_4_Catalog                         based           structure                level 1 dcl 14-217
abx                                    internal static fixed bin(17,0)          initial dcl 10-42
access_mode                            automatic       bit(6)                   unaligned dcl 284
aft_code                               automatic       fixed bin(35,0)          dcl 287
aft_name                               automatic       char(8)                  unaligned dcl 288
altname                                based           char(8)                  dcl 289
append_mode                            internal static bit(36)                  initial unaligned dcl 291
apx                                    internal static fixed bin(17,0)          initial dcl 10-42
area_pointer                           automatic       pointer                  dcl 15-2
attr_name                              internal static char(4)                  initial array unaligned dcl 13-46
bbx                                    internal static fixed bin(17,0)          initial dcl 10-42
bit_count                              automatic       fixed bin(24,0)          dcl 297
bpx                                    internal static fixed bin(17,0)          initial dcl 10-42
branch                                 based           structure                level 1 dcl 15-2
callers_buffer                         based           structure                level 1 dcl 14-231
cdate                                  automatic       fixed bin(71,0)          dcl 300
clim                                   automatic       float bin(27)            dcl 301
crf                                    automatic       fixed bin(24,0)          dcl 302
csp                                    automatic       float bin(27)            dcl 303
db_                                    defined         bit(1)                   unaligned dcl 19-32
db_CFP_input                           defined         bit(1)                   unaligned dcl 19-32
db_abs                                 defined         bit(1)                   unaligned dcl 19-32
db_attributes_mgr                      defined         bit(1)                   unaligned dcl 19-32
db_dq                                  defined         bit(1)                   unaligned dcl 19-32
db_drl_addmem                          defined         bit(1)                   unaligned dcl 19-32
db_drl_callss                          defined         bit(1)                   unaligned dcl 19-32
db_drl_defil                           defined         bit(1)                   unaligned dcl 19-32
db_drl_dio                             defined         bit(1)                   unaligned dcl 19-32
db_drl_filact                          defined         bit(1)                   unaligned dcl 19-32
db_drl_filsp                           defined         bit(1)                   unaligned dcl 19-32
db_drl_grow                            defined         bit(1)                   unaligned dcl 19-32
db_drl_kin                             defined         bit(1)                   unaligned dcl 19-32
db_drl_morlnk                          defined         bit(1)                   unaligned dcl 19-32
db_drl_msub                            defined         bit(1)                   unaligned dcl 19-32
db_drl_part                            defined         bit(1)                   unaligned dcl 19-32
db_drl_retfil                          defined         bit(1)                   unaligned dcl 19-32
db_drl_rew                             defined         bit(1)                   unaligned dcl 19-32
db_drl_rstswh                          defined         bit(1)                   unaligned dcl 19-32
db_drl_setswh                          defined         bit(1)                   unaligned dcl 19-32
db_drl_switch                          defined         bit(1)                   unaligned dcl 19-32
db_drl_t_cfio                          defined         bit(1)                   unaligned dcl 19-32
db_expand_pathname                     defined         bit(1)                   unaligned dcl 19-32
db_filact_funct02                      defined         bit(1)                   unaligned dcl 19-32
db_filact_funct04                      defined         bit(1)                   unaligned dcl 19-32
db_filact_funct05                      defined         bit(1)                   unaligned dcl 19-32
db_filact_funct10                      defined         bit(1)                   unaligned dcl 19-32
db_filact_funct11                      defined         bit(1)                   unaligned dcl 19-32
db_filact_funct14                      defined         bit(1)                   unaligned dcl 19-32
db_filact_funct18                      defined         bit(1)                   unaligned dcl 19-32
db_filact_funct19                      defined         bit(1)                   unaligned dcl 19-32
db_filact_funct21                      defined         bit(1)                   unaligned dcl 19-32
db_filact_funct22                      defined         bit(1)                   unaligned dcl 19-32
db_interp_prim                         defined         bit(1)                   unaligned dcl 19-32
db_ios                                 defined         bit(1)                   unaligned dcl 19-32
db_mcfc                                defined         bit(1)                   unaligned dcl 19-32
db_run_subsystem                       defined         bit(1)                   unaligned dcl 19-32
debug_bit_names                        internal static structure                array level 1 unaligned dcl 19-75
delete_$path                    000000 constant        entry                    external dcl 305
descriptor_address                     automatic       bit(18)                  unaligned dcl 306
dir_acl                                based           structure                array level 1 dcl 5-2
dir_name                               automatic       char(168)                unaligned dcl 308
divide                                                 builtin function         dcl 309
entry_names                            based           char(32)                 array dcl 15-2
error_table_$incorrect_access          external static fixed bin(35,0)          dcl 311
error_table_$moderr                    external static fixed bin(35,0)          dcl 312
error_table_$namedup                   external static fixed bin(35,0)          dcl 313
error_table_$no_dir                    external static fixed bin(35,0)          dcl 317
error_table_$nomatch                   external static fixed bin(35,0)          dcl 315
error_table_$not_seg_type              external static fixed bin(35,0)          dcl 316
error_table_$seg_not_found             external static fixed bin(35,0)          dcl 319
error_table_$segknown                  external static fixed bin(35,0)          dcl 318
execute_mode                           internal static bit(36)                  initial unaligned dcl 320
file_no                                automatic       fixed bin(24,0)          dcl 323
four_NULS                              internal static char(4)                  initial unaligned dcl 326
gse_ext_$drm_rule                      external static fixed bin(24,0)          dcl 18-6
gse_ext_$gcos_debug_pathname           external static char(168)                unaligned dcl 18-15
gse_ext_$modes                         external static structure                level 1 dcl 18-18
gse_ext_$smc_pathname                  external static char(168)                unaligned dcl 18-16
gtss_CFP_abort_                 000000 constant        entry                    external dcl 11-9
gtss_CFP_break_                 000000 constant        entry                    external dcl 11-10
gtss_CFP_input_                 000000 constant        entry                    external dcl 11-11
gtss_CFP_output_                000000 constant        entry                    external dcl 11-12
gtss_abandon_CFP_               000000 constant        entry                    external dcl 11-13
gtss_abort_dump_                000000 constant        entry                    external dcl 11-14
gtss_abort_subsystem_           000000 constant        entry                    external dcl 11-15
gtss_abort_subsystem_$not_imp   000000 constant        entry                    external dcl 11-16
gtss_abs_$abs_equiv             000000 constant        entry                    external dcl 11-19
gtss_abs_$cpu_runout            000000 constant        entry                    external dcl 11-20
gtss_abs_$create_absin          000000 constant        entry                    external dcl 11-21
gtss_abs_$dabt_check            000000 constant        entry                    external dcl 11-22
gtss_abs_$get_drm               000000 constant        entry                    external dcl 11-24
gtss_abs_$get_id                000000 constant        entry                    external dcl 11-23
gtss_abs_login_banner_          000000 constant        entry                    external dcl 11-17
gtss_abs_logout_banner_         000000 constant        entry                    external dcl 11-18
gtss_adjust_size_               000000 constant        entry                    external dcl 11-25
gtss_aft_$add                   000000 constant        entry                    external dcl 11-26
gtss_aft_$delete                000000 constant        entry                    external dcl 11-27
gtss_aft_$find                  000000 constant        entry                    external dcl 11-28
gtss_aft_$initialize            000000 constant        entry                    external dcl 11-29
gtss_ascii_bcd_                 000000 constant        entry                    external dcl 11-30
gtss_attributes_mgr_$get        000000 constant        entry                    external dcl 11-31
gtss_break_vector_              000000 constant        entry                    external dcl 11-35
gtss_break_vector_$drl_in_progress
                                000000 constant        entry                    external dcl 11-36
gtss_break_vector_$status       000000 constant        entry                    external dcl 11-37
gtss_build_                     000000 constant        entry                    external dcl 11-38
gtss_com_err_                   000000 constant        entry                    external dcl 11-39
gtss_derail_processor_          000000 constant        entry                    external dcl 11-40
gtss_derail_processor_$set      000000 constant        entry                    external dcl 11-41
gtss_dq_$catp                   000000 constant        entry                    external dcl 11-42
gtss_dq_$create                 000000 constant        entry                    external dcl 11-43
gtss_dq_$dibp                   000000 constant        entry                    external dcl 11-44
gtss_dq_$entries_info           000000 constant        entry                    external dcl 11-45
gtss_dq_$hdrp                   000000 constant        entry                    external dcl 11-46
gtss_dq_$mod_js                 000000 constant        entry                    external dcl 11-47
gtss_dq_$open_exc               000000 constant        entry                    external dcl 11-48
gtss_dq_$open_gen               000000 constant        entry                    external dcl 11-49
gtss_drl_abort_                 000000 constant        entry                    external dcl 11-50
gtss_drl_addmem_                000000 constant        entry                    external dcl 11-51
gtss_drl_callss_                000000 constant        entry                    external dcl 11-52
gtss_drl_corfil_                000000 constant        entry                    external dcl 11-53
gtss_drl_defil_                 000000 constant        entry                    external dcl 11-54
gtss_drl_defil_$subr            000000 constant        entry                    external dcl 11-55
gtss_drl_dio_                   000000 constant        entry                    external dcl 11-56
gtss_drl_drlimt_                000000 constant        entry                    external dcl 11-57
gtss_drl_drlsav_                000000 constant        entry                    external dcl 11-58
gtss_drl_filact_                000000 constant        entry                    external dcl 11-59
gtss_drl_filsp_                 000000 constant        entry                    external dcl 11-60
gtss_drl_grow_                  000000 constant        entry                    external dcl 11-61
gtss_drl_gwake_                 000000 constant        entry                    external dcl 11-62
gtss_drl_jsts_                  000000 constant        entry                    external dcl 11-63
gtss_drl_kin_                   000000 constant        entry                    external dcl 11-64
gtss_drl_kotnow_                000000 constant        entry                    external dcl 11-65
gtss_drl_kotnow_$gtss_drl_kout_ 000000 constant        entry                    external dcl 11-66
gtss_drl_koutn_                 000000 constant        entry                    external dcl 11-67
gtss_drl_morlnk_                000000 constant        entry                    external dcl 11-68
gtss_drl_msub_                  000000 constant        entry                    external dcl 11-69
gtss_drl_objtim_                000000 constant        entry                    external dcl 11-70
gtss_drl_part_                  000000 constant        entry                    external dcl 11-71
gtss_drl_pasaft_                000000 constant        entry                    external dcl 11-72
gtss_drl_pasdes_                000000 constant        entry                    external dcl 11-73
gtss_drl_pasust_                000000 constant        entry                    external dcl 11-74
gtss_drl_pdio_                  000000 constant        entry                    external dcl 11-75
gtss_drl_prgdes_                000000 constant        entry                    external dcl 11-76
gtss_drl_pseudo_                000000 constant        entry                    external dcl 11-77
gtss_drl_relmem_                000000 constant        entry                    external dcl 11-78
gtss_drl_restor_                000000 constant        entry                    external dcl 11-79
gtss_drl_retfil_                000000 constant        entry                    external dcl 11-80
gtss_drl_return_                000000 constant        entry                    external dcl 11-81
gtss_drl_rew_                   000000 constant        entry                    external dcl 11-82
gtss_drl_rstswh_                000000 constant        entry                    external dcl 11-83
gtss_drl_setlno_                000000 constant        entry                    external dcl 11-84
gtss_drl_setswh_                000000 constant        entry                    external dcl 11-85
gtss_drl_snumb_                 000000 constant        entry                    external dcl 11-86
gtss_drl_spawn_                 000000 constant        entry                    external dcl 11-87
gtss_drl_spawn_$gtss_drl_pasflr_
                                000000 constant        entry                    external dcl 11-88
gtss_drl_stoppt_                000000 constant        entry                    external dcl 11-89
gtss_drl_switch_                000000 constant        entry                    external dcl 11-90
gtss_drl_sysret_                000000 constant        entry                    external dcl 11-91
gtss_drl_t_cfio_                000000 constant        entry                    external dcl 11-92
gtss_drl_t_cmov_                000000 constant        entry                    external dcl 11-93
gtss_drl_t_err_                 000000 constant        entry                    external dcl 11-94
gtss_drl_t_goto_                000000 constant        entry                    external dcl 11-95
gtss_drl_t_linl_                000000 constant        entry                    external dcl 11-96
gtss_drl_t_rscc_                000000 constant        entry                    external dcl 11-97
gtss_drl_tapein_                000000 constant        entry                    external dcl 11-98
gtss_drl_task_                  000000 constant        entry                    external dcl 11-99
gtss_drl_termtp_                000000 constant        entry                    external dcl 11-100
gtss_drl_time_                  000000 constant        entry                    external dcl 11-101
gtss_drun_                      000000 constant        entry                    external dcl 11-102
gtss_dsd_lookup_                000000 constant        entry                    external dcl 11-103
gtss_dsd_process_               000000 constant        entry                    external dcl 11-104
gtss_edit_dsd_                  000000 constant        entry                    external dcl 11-105
gtss_expand_pathname_$verify_umc
                                000000 constant        entry                    external dcl 11-108
gtss_ext_$CFP_bits                     external static structure                level 1 dcl 7-37
gtss_ext_$SYstarstar_file_no           external static fixed bin(24,0)          dcl 7-33
gtss_ext_$aem                          external static fixed bin(17,0)          dcl 7-8
gtss_ext_$aft                          external static structure                level 1 dcl 7-78
gtss_ext_$bad_drl_rtrn                 external static label variable           dcl 7-9
gtss_ext_$com_reg                      external static structure                level 1 dcl 7-45
gtss_ext_$deferred_catalogs_ptr        external static pointer                  dcl 7-11
gtss_ext_$dispose_of_drl               external static label variable           dcl 7-12
gtss_ext_$drl_rtrn                     external static label variable           array dcl 7-13
gtss_ext_$drm_path                     external static char(168)                unaligned dcl 7-14
gtss_ext_$drun_jid                     external static char(5)                  unaligned dcl 7-15
gtss_ext_$event_channel                external static fixed bin(71,0)          dcl 7-16
gtss_ext_$fast_lib                     external static structure                level 1 dcl 7-98
gtss_ext_$finished                     external static label variable           dcl 7-17
gtss_ext_$flags                        external static structure                level 1 dcl 7-60
gtss_ext_$gdb_name                     external static char(8)                  unaligned dcl 7-18
gtss_ext_$get_line                     external static entry variable           dcl 7-19
gtss_ext_$gtss_slave_area_seg          external static pointer                  array dcl 7-20
gtss_ext_$hcs_work_area_ptr            external static pointer                  dcl 7-21
gtss_ext_$homedir                      external static char(64)                 unaligned dcl 7-22
gtss_ext_$last_k_was_out               external static bit(1)                   dcl 7-23
gtss_ext_$mcfc                         external static structure                level 1 dcl 7-109
gtss_ext_$pdir                         external static varying char(168)        dcl 7-24
gtss_ext_$popup_from_pi                external static label variable           dcl 7-25
gtss_ext_$ppt                          external static pointer                  dcl 7-94
gtss_ext_$process_type                 external static fixed bin(17,0)          dcl 7-26
gtss_ext_$put_chars                    external static entry variable           dcl 7-27
gtss_ext_$restart_from_pi              external static label variable           dcl 7-28
gtss_ext_$restart_seg_ptr              external static pointer                  dcl 7-29
gtss_ext_$sig_ptr                      external static pointer                  dcl 7-30
gtss_ext_$stack_level_                 external static fixed bin(17,0)          dcl 7-31
gtss_ext_$statistics                   external static structure                level 1 dcl 7-72
gtss_ext_$suspended_process            external static bit(1)                   unaligned dcl 7-32
gtss_ext_$work_area_ptr                external static pointer                  dcl 7-35
gtss_fail                       000000 stack reference condition                dcl 329
gtss_fault_processor_           000000 constant        entry                    external dcl 11-109
gtss_fault_processor_$timer_runout
                                000000 constant        entry                    external dcl 11-111
gtss_filact_error_status_       000000 constant        entry                    external dcl 11-112
gtss_filact_funct02_            000000 constant        entry                    external dcl 11-113
gtss_filact_funct03_            000000 constant        entry                    external dcl 11-114
gtss_filact_funct04_            000000 constant        entry                    external dcl 11-115
gtss_filact_funct05_            000000 constant        entry                    external dcl 11-116
gtss_filact_funct08_            000000 constant        entry                    external dcl 11-117
gtss_filact_funct10_            000000 constant        entry                    external dcl 11-118
gtss_filact_funct11_            000000 constant        entry                    external dcl 11-119
gtss_filact_funct14_            000000 constant        entry                    external dcl 11-120
gtss_filact_funct18_            000000 constant        entry                    external dcl 11-121
gtss_filact_funct19_            000000 constant        entry                    external dcl 11-122
gtss_filact_funct21_            000000 constant        entry                    external dcl 11-123
gtss_filact_funct22_            000000 constant        entry                    external dcl 11-124
gtss_find_cond_frame_           000000 constant        entry                    external dcl 11-110
gtss_interp_prim_               000000 constant        entry                    external dcl 11-126
gtss_interp_prim_$callss        000000 constant        entry                    external dcl 11-127
gtss_interp_prim_$sysret        000000 constant        entry                    external dcl 11-128
gtss_interp_prim_$t_goto        000000 constant        entry                    external dcl 11-129
gtss_ios_change_size_           000000 constant        entry                    external dcl 11-130
gtss_ios_close_                 000000 constant        entry                    external dcl 11-131
gtss_ios_exchange_names_        000000 constant        entry                    external dcl 11-132
gtss_ios_initialize_            000000 constant        entry                    external dcl 11-133
gtss_ios_io_                    000000 constant        entry                    external dcl 11-134
gtss_ios_open_                  000000 constant        entry                    external dcl 11-135
gtss_ios_position_              000000 constant        entry                    external dcl 11-136
gtss_mcfc_$close                000000 constant        entry                    external dcl 11-139
gtss_mcfc_$delete               000000 constant        entry                    external dcl 11-137
gtss_mcfc_$open                 000000 constant        entry                    external dcl 11-138
gtss_mcfc_empty                 000000 constant        entry                    external dcl 11-106
gtss_mcfc_init_                 000000 constant        entry                    external dcl 11-125
gtss_pnterr                            internal static structure                level 1 packed unaligned dcl 9-9
gtss_read_starCFP_              000000 constant        entry                    external dcl 11-140
gtss_read_starCFP_$last_os      000000 constant        entry                    external dcl 11-141
gtss_run_subsystem_             000000 constant        entry                    external dcl 11-142
gtss_run_subsystem_$finish      000000 constant        entry                    external dcl 11-143
gtss_run_subsystem_$restor      000000 constant        entry                    external dcl 11-144
gtss_run_subsystem_$restor_perm 000000 constant        entry                    external dcl 11-145
gtss_set_slave_                 000000 constant        entry                    external dcl 11-146
gtss_set_slave_$load_bar        000000 constant        entry                    external dcl 11-147
gtss_update_safe_store_         000000 constant        entry                    external dcl 11-148
gtss_verify_access_             000000 constant        entry                    external dcl 11-149
gtss_verify_access_$check_forced_access
                                000000 constant        entry                    external dcl 11-150
gtss_write_starCFP_             000000 constant        entry                    external dcl 11-151
hbound                                                 builtin function         dcl 330
hcs_$add_acl_entries            000000 constant        entry                    external dcl 331
hcs_$add_dir_acl_entries        000000 constant        entry                    external dcl 332
hcs_$add_inacl_entries          000000 constant        entry                    external dcl 333
hcs_$append_branchx             000000 constant        entry                    external dcl 334
hcs_$initiate                   000000 constant        entry                    external dcl 336
hcs_$make_seg                   000000 constant        entry                    external dcl 337
hcs_$quota_read                 000000 constant        entry                    external dcl 338
hcs_$status_long                000000 constant        entry                    external dcl 339
increment                              automatic       fixed bin(24,0)          dcl 343
info_ptr                               automatic       pointer                  dcl 15-2
l                                      automatic       fixed bin(24,0)          dcl 346
lbound                                                 builtin function         dcl 347
lbx                                    internal static fixed bin(17,0)          initial dcl 10-42
link                                   based           structure                level 1 dcl 15-2
low_b                                  internal static bit(18)                  initial dcl 348
low_i                                  internal static fixed bin(18,0)          initial dcl 349
lpx                                    internal static fixed bin(17,0)          initial dcl 10-42
max_resources                          internal static fixed bin(17,0)          initial dcl 351
mc                                     based           structure                level 1 dcl 10-12
minus_one                              internal static bit(36)                  initial unaligned dcl 352
mlim                                   automatic       float bin(27)            dcl 353
mod                                                    builtin function         dcl 354
modify_mode                            internal static bit(36)                  initial unaligned dcl 355
msp                                    automatic       float bin(27)            dcl 360
path_name                              automatic       varying char(168)        dcl 363
pathname                               based           char                     dcl 15-2
person_id                              automatic       char(22)                 unaligned dcl 364
quota                                  automatic       fixed bin(18,0)          dcl 365
read_mode                              internal static bit(36)                  initial unaligned dcl 366
rel                                                    builtin function         dcl 367
rings                                  internal static fixed bin(3,0)           initial array dcl 368
sbx                                    internal static fixed bin(17,0)          initial dcl 10-42
scu                                    based           structure                level 1 dcl 10-56
scup                                   automatic       pointer                  dcl 10-54
scux                                   based           structure                level 1 dcl 10-207
seg_acl_count                          automatic       fixed bin(17,0)          dcl 370
shlim                                  automatic       float bin(27)            array dcl 371
shsp                                   automatic       float bin(27)            array dcl 372
size                                                   builtin function         dcl 373
sons_lvid                              automatic       bit(36)                  unaligned dcl 375
spx                                    internal static fixed bin(17,0)          initial dcl 10-42
status                                 automatic       fixed bin(24,0)          dcl 377
status2                                based           structure                level 1 dcl 400
status_mode                            internal static bit(36)                  initial unaligned dcl 378
switches                               internal static bit(6)                   initial unaligned dcl 381
t1c                                    based           structure                level 1 dcl 14-108
tacc_sw                                automatic       fixed bin(1,0)           dcl 382
trp                                    automatic       fixed bin(71,0)          dcl 384
tup                                    automatic       bit(36)                  dcl 385
two_words                              based           bit(72)                  unaligned dcl 386
type                                   automatic       fixed bin(2,0)           dcl 387
used                                   automatic       fixed bin(18,0)          dcl 388
user_attribute_word                    automatic       bit(35)                  unaligned dcl 389
user_info_$limits               000000 constant        entry                    external dcl 390
write_mode                             internal static bit(36)                  initial unaligned dcl 391

NAMES DECLARED BY EXPLICIT CONTEXT.
could_not_create_file           002024 constant        entry                    internal dcl 233 ref 69 90 112 125 151 187
gal                             001312 constant        label                    dcl 2-51 ref 2-39
get_ascii_file_name             001167 constant        entry                    internal dcl 2-8 ref 63
get_faulty_cat_file_entry       001632 constant        entry                    internal dcl 3-5 ref 244
get_multics_seg_acl             001641 constant        entry                    internal dcl 4-6 ref 140
get_options                     002076 constant        entry                    internal dcl 249 ref 81
gtss_filact_funct03_            000140 constant        entry                    external dcl 14
return_err4                     000233 constant        label                    dcl 53 ref 74 1-13 1-16 2-24 2-43 263 269 275
validate_status                 001124 constant        entry                    internal dcl 1-5 ref 60

NAMES DECLARED BY CONTEXT OR IMPLICATION.
length                                                 builtin function         ref 2-79
null                                                   builtin function         ref 290 292 293 294 307 325 328 374 379 14-12 14-83
                                                                                  14-216 14-230 16-6 17-5 1-9 4-36 258
rtrim                                                  builtin function         ref 2-87 4-28
string                                                 builtin function         ref 182 2-70
unspec                                                 builtin function         set ref 77 77 1-21* 4-23 4-23
verify                                                 builtin function         ref 2-87

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      3256        3330    3041        3266
Length      4130    3041        52         563     215           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gtss_filact_funct03_                421 external procedure  is an external procedure.  
validate_status                         internal procedure  shares stack frame of external procedure gtss_filact_funct03_.  
get_ascii_file_name                     internal procedure  shares stack frame of external procedure gtss_filact_funct03_.  
get_faulty_cat_file_entry               internal procedure  shares stack frame of external procedure gtss_filact_funct03_.  
get_multics_seg_acl                     internal procedure  shares stack frame of external procedure gtss_filact_funct03_.  
could_not_create_file                   internal procedure  shares stack frame of external procedure gtss_filact_funct03_.  
get_options                             internal procedure  shares stack frame of external procedure gtss_filact_funct03_.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gtss_filact_funct03_     000100 acl_count                   gtss_filact_funct03_
                         000102 acl_ptr                     gtss_filact_funct03_
                         000104 altname_ptr                 gtss_filact_funct03_
                         000106 arglist_ptr                 gtss_filact_funct03_
                         000110 arg_ptr                     gtss_filact_funct03_
                         000112 attribute_segment_ptr       gtss_filact_funct03_
                         000114 block_factor                gtss_filact_funct03_
                         000115 cat_filedescr_name_offset   gtss_filact_funct03_
                         000116 descriptor_ptr              gtss_filact_funct03_
                         000120 entry_name                  gtss_filact_funct03_
                         000124 fcb_ptr                     gtss_filact_funct03_
                         000126 file_name_in_ascii          gtss_filact_funct03_
                         000130 FMS_block_ptr               gtss_filact_funct03_
                         000132 gsc                         gtss_filact_funct03_
                         000134 gseg                        gtss_filact_funct03_
                         000136 high_b                      gtss_filact_funct03_
                         000137 high_i                      gtss_filact_funct03_
                         000140 i                           gtss_filact_funct03_
                         000141 k                           gtss_filact_funct03_
                         000142 multics_access_mode         gtss_filact_funct03_
                         000143 nic                         gtss_filact_funct03_
                         000144 sbc                         gtss_filact_funct03_
                         000146 smc_entry_ptr               gtss_filact_funct03_
                         000150 sptr                        gtss_filact_funct03_
                         000152 status_ptr                  gtss_filact_funct03_
                         000154 date_val                    gtss_filact_funct03_
                         000156 mcp                         gtss_filact_funct03_
                         000156 segment_acl_space           gtss_filact_funct03_
                         000160 ascii_cat_file              gtss_filact_funct03_
                         000206 gtss_file_values            gtss_filact_funct03_
                         000316 FMS_cat_ptr                 gtss_filact_funct03_
                         000320 Type_1_ptr                  gtss_filact_funct03_
                         000322 Type_4_ptr                  gtss_filact_funct03_
                         000324 buffer_ptr                  gtss_filact_funct03_
                         000326 now                         gtss_filact_funct03_
                         000330 options_ptr                 gtss_filact_funct03_
                         000332 permissions_ptr             gtss_filact_funct03_
                         000346 status_pointer              validate_status
                         000356 ap                          get_ascii_file_name
                         000400 id                          get_multics_seg_acl
                         000403 ln                          get_multics_seg_acl
                         000404 op                          get_multics_seg_acl
                         000424 mnw                         get_options

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
r_ne_as             alloc_cs            cat_realloc_cs      call_ext_out_desc   call_ext_out        return
alloc_auto_adj      shorten_stack       ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      gtss_attributes_mgr_$set      gtss_bcd_ascii_               gtss_bcd_ascii_$lc
gtss_expand_pathname_         hcs_$delentry_file            ioa_                          msf_manager_$acl_add
msf_manager_$close            msf_manager_$get_ptr          msf_manager_$open             pl1_date_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$noentry          gse_ext_$umc_name             gtss_ext_$db                  gtss_ext_$user_id
gtss_ust_ext_$ust




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     14 000132       290 000145       292 000147       293 000150       294 000151       307 000152       310 000153
    325 000156       328 000157       374 000160       379 000161       398 000162   14   12 000167   14   83 000171
14  216 000172   14  230 000173   16    6 000174   17    5 000175        41 000176        42 000202        43 000207
     44 000212        45 000215        46 000220        48 000223        51 000224        53 000233        54 000234
     55 000237        57 000240        60 000244        62 000253        63 000260        69 000304        70 000310
     74 000311        76 000317        77 000322        79 000332        81 000346        83 000362        89 000412
     90 000415        91 000423        94 000424        95 000432        98 000434       103 000461       104 000470
    112 000534       113 000542       116 000543       124 000566       125 000571       126 000577       128 000600
    132 000641       133 000645       134 000647       135 000651       136 000654       137 000655       140 000657
    145 000667       150 000707       151 000712       152 000720       155 000721       157 000730       158 000752
    168 000772       169 000774       170 000775       172 001000       173 001005       174 001012       175 001016
    176 001020       178 001033       180 001035       181 001037       182 001040       183 001047       185 001063
    186 001077       187 001102       188 001110       196 001111       198 001120       200 001123    1    5 001124
 1    9 001126    1   13 001130    1   16 001135    1   20 001155    1   21 001163    1   22 001166    2    8 001167
 2   19 001171    2   20 001174    2   22 001175    2   24 001206    2   26 001207    2   28 001213    2   29 001220
 2   30 001226    2   33 001231    2   35 001233    2   36 001237    2   38 001245    2   39 001247    2   42 001250
 2   43 001267    2   46 001270    2   47 001276    2   49 001307    2   51 001312    2   52 001313    2   56 001323
 2   57 001335    2   58 001337    2   61 001356    2   62 001357    2   68 001405    2   70 001407    2   71 001413
 2   72 001427    2   73 001437    2   74 001467    2   77 001471    2   79 001507    2   85 001516    2   86 001525
 2   87 001543    2   91 001573    2   92 001600    2   94 001605    2   96 001607    2   98 001615    2  101 001617
 2  102 001620    2  103 001625    3    5 001632    3   10 001634    4    6 001641    4   36 001643    4   16 001645
 4   17 001650    4   18 001653    4   20 001655    4   21 001657    4   23 001667    4   24 001701    4   25 001702
 4   26 001713    4   27 001733    4   28 001754    4   29 002020    4   30 002021    4   31 002023       233 002024
    238 002026       244 002057       245 002067       246 002075       249 002076       258 002100       259 002102
    260 002103       263 002113       265 002115       267 002121       268 002122       269 002130       272 002147
    273 002151       275 002152       276 002160       279 002162


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
