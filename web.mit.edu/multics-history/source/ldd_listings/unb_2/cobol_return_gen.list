	COMPILATION LISTING OF SEGMENT cobol_return_gen
	Compiled by: Multics PL/I Compiler, Release 33e, of October 6, 1992
	Compiled at: CGI                             
	Compiled on: 2000-04-18_1143.11_Tue_mdt
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
       17*     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
       18*     MCR8060 cobol_return_gen.pl1 Reformatted code to new Cobol standard.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 /* Modified on 11/20/76 by Bob Chang to handle same_sort_merge  flag.	*/
       23 /* Modified on 11/12/76 by Bob Chang to interface with merge_gen. */
       24 /* Modified since Version 2.0	*/
       25 /* format: style3 */
       26 cobol_return_gen:
       27      proc (in_token_ptr, passed_tag);
       28 
       29 /*
       30*This procedure cobol_return generates the code necessary to
       31*implement the COBOL RETURN statement. This format of the RETURN
       32*staatement is as follows:
       33*
       34*R_E_T_U_R_N_ file-name RECORD  [I_N_T_O_ identifier ];
       35*		     AT E_N_D_ imperative-statement
       36*
       37*The execution of the RETURN statement causes the next record,
       38*in the order specified by the keys listed in the SORT statement,
       39*to be made available for processing in the record areas
       40*associated with the sort file.
       41*
       42*If the INTO phrase is specified, the current record is moved
       43*from the input area to the area specified by identifier according
       44*to the rules for MOVE statement without the CORRESPONDING
       45*phrase. The implied MOVE does not occur if there is an AT END
       46*condition. Any subscripting or indexing associated with
       47*identifier is evaluated after the record has been returned and
       48*immediately before it is moved to the data item.
       49*
       50*When the INTO phrase is used, the data is available in both
       51*the input record area and the data area associated with identifier.
       52*
       53*If no next logical record exist for the file at the time of the
       54*execution of a RETURN statement, the AT END condition occurs. The
       55*contents of the record area associated with the file when the
       56*AT END condition occurs are undefined. After the execution
       57*of the imperative-statement in the AT END phrase, no RETURN
       58*statement may be executed as part of the current output
       59*procedure.
       60*
       61*NOTE:
       62*The contents of any data items which lie beyound the range of the
       63*current data record are undefined at the completion of the
       64*execution of the RETURN statement.
       65**/
       66 
       67 /*  Code and relocation sequences.		*/
       68 
       69 dcl	1 read_in_token	static,
       70 	  2 n		fixed bin init (4),
       71 	  2 code		fixed bin init (0),
       72 	  2 pt1		ptr,
       73 	  2 pt2		ptr,
       74 	  2 pt3		ptr,
       75 	  2 pt4		ptr;
       76 dcl	1 mlr_struct	static,
       77 	  2 type		fixed bin init (4),
       78 	  2 operand_no	fixed bin init (2),
       79 	  2 lock		fixed bin init (0),
       80 	  2 operand1,
       81 	    3 token_ptr	ptr init (null ()),
       82 	    3 sr		fixed bin init (0),
       83 	    3 icmod	fixed bin init (0),
       84 	    3 size_sw	fixed bin init (0),
       85 	  2 operand2,
       86 	    3 token_ptr	ptr,
       87 	    3 sr		fixed bin init (1),
       88 	    3 icmod	fixed bin,
       89 	    3 size_sw	fixed bin init (0);
       90 
       91 dcl	mlr_reg_to_reg	bit (36) init ("000100000001010000001000000101000000"b);
       92 
       93 dcl	instr		(3) bit (36) unaligned static
       94 			init ("000000000000000000000000000000000000"b, "000000000000000000000000000000000000"b,
       95 			"000000000000000000000000000000000000"b);
       96 dcl	rel_instr		(6) bit (5) aligned static
       97 			init ("00000"b, "00000"b, "00000"b, "00000"b, "00000"b, "00000"b);
       98 
       99 dcl	inst_seq1		(6) bit (18) static init ("110000000001001100"b, "010011101001000000"b,
      100 						/* lda  pr6|76	*/
      101 			"000000000000000000"b, "110000000000000100"b,
      102 						/* tze	0,ic	*/
      103 			"110000000001001010"b, "011101010001010000"b);
      104 						/* epp2	pr6|74,*	*/
      105 dcl	tra_inst		(2) bit (18) static init ("000000000000000000"b, "111001000000000100"b);
      106 						/* tra	0,ic	*/
      107 
      108 dcl	merge_check_inst	(4) bit (18) static init ("100000000000101001"b, "010011101001000000"b,
      109 						/* lda	pr4|sort_merge_sw	*/
      110 			"000000000000000000"b, "110000000000000100"b);
      111 						/* tze	sort_tag	*/
      112 dcl	rel_merge_check	(4) bit (5) aligned static init ("11001"b, "00000"b, "00000"b, "00000"b);
      113 
      114 dcl	temp_type12	char (60) static,
      115 	temp_file_ptr	ptr static,
      116 	temp_type12_ptr	ptr static,
      117 	temp_type9_ptr	ptr static;
      118 dcl	1 temp_type9	static,
      119 	  2 header	(4) fixed bin init (112, 0, 0, 9),
      120 	  2 repl_ptr	(2) ptr init ((2) null ()),
      121 	  2 fill1		bit (108) init (""b),
      122 	  2 file_key_info,
      123 	    3 fb1		(3) fixed bin init (0, 0, 0),
      124 	    3 size	fixed bin init (0),
      125 	    3 fb2		(2) fixed bin init (0, 0),
      126 	    3 flags1	bit (36) init ("000000100100000000010000000100000000"b),
      127 	    3 flags2	bit (36) init (""b),
      128 	    3 seg		fixed bin init (0),
      129 	    3 off		fixed bin,
      130 	  2 fill2		(7) fixed bin init (0, 0, 0, 0, 0, 0, 0);
      131 dcl	1 type19_read_into	static,
      132 	  2 header	(4) fixed bin init (38, 0, 0, 19),
      133 	  2 verb		fixed bin init (0),
      134 	  2 e		fixed bin init (0),
      135 	  2 h		fixed bin init (0),
      136 	  2 ij		(2) fixed bin init (0, 0),
      137 	  2 abcdfgk	bit (16) init ("0011000000000000"b);
      138 dcl	1 mpout		static,
      139 	  2 n		fixed bin init (4),
      140 	  2 pt1		ptr,
      141 	  2 pt2		ptr,
      142 	  2 pt3		ptr,
      143 	  2 pt4		ptr;
      144 dcl	file_key_desc	char (40) based;
      145 dcl	fkey_ptr		ptr;
      146 dcl	eos_buff		(5) ptr;
      147 
      148 dcl	1 fkey_type9	static,
      149 	  2 header	(4) fixed bin init (112, 0, 0, 9),
      150 	  2 repl_ptr	(2) ptr init ((2) null ()),
      151 	  2 fill1		bit (108) init (""b),
      152 	  2 file_key_info,
      153 	    3 fb1		(3) fixed bin init (0, 0, 0),
      154 	    3 size	fixed bin init (0),
      155 	    3 fb2		(2) fixed bin init (0, 0),
      156 	    3 flags1	bit (36) init (""b),
      157 	    3 flags2	bit (36) init (""b),
      158 	    3 seg		fixed bin,
      159 	    3 off		fixed bin,
      160 	  2 fill2		(7) fixed bin init (0, 0, 0, 0, 0, 0, 0);
      161 dcl	1 alpha_type9	static,
      162 	  2 header	(4) fixed bin init (112, 0, 0, 9),
      163 	  2 repl_ptr	(2) ptr init ((2) null ()),
      164 	  2 fill1		bit (108) init (""b),
      165 	  2 file_key_info,
      166 	    3 fb1		(3) fixed bin init (0, 0, 0),
      167 	    3 size	fixed bin init (0),
      168 	    3 fb2		(2) fixed bin init (0, 0),
      169 	    3 flags1	bit (36) init ("000000100100000000010000000100000000"b),
      170 	    3 flags2	bit (36) init (""b),
      171 	    3 seg		fixed bin init (0),
      172 	    3 off		fixed bin,
      173 	  2 fill2		(7) fixed bin init (0, 0, 0, 0, 0, 0, 0);
      174 dcl	1 num_type9	static,
      175 	  2 header	(4) fixed bin init (112, 0, 0, 9),
      176 	  2 repl_ptr	(2) ptr init ((2) null ()),
      177 	  2 fill1		bit (108) init (""b),
      178 	  2 file_key_info,
      179 	    3 fb1		(3) fixed bin init (0, 0, 0),
      180 	    3 size	fixed bin init (0),
      181 	    3 places_left	fixed bin,
      182 	    3 places_right	fixed bin init (0),
      183 	    3 flags1	bit (36) init ("000000100100000001000000000100000000"b),
      184 	    3 flags2	bit (36) init (""b),
      185 	    3 seg		fixed bin init (0),
      186 	    3 off		fixed bin,
      187 	  2 fill2		(7) fixed bin init (0, 0, 0, 0, 0, 0, 0);
      188 						/*
      189*Automatic data		*/
      190 
      191 dcl	retry_tag		fixed bin,
      192 	sort_tag		fixed bin,
      193 	exit_tag		fixed bin,
      194 	dn_ptr		ptr,			/* pointer to type 9 token	*/
      195 	ft_ptr		ptr,			/* pointer to the file table 	*/
      196 	name_ptr		ptr,			/* pointer to type12 token */
      197 	linkoff		fixed bin,		/* word offset of entry point link */
      198 	passed_tag	fixed bin,
      199 	def_tag		fixed bin,
      200 	hold_addr		bit (18) based,
      201 	return_error_code	fixed bin static init (53),
      202 	merge_bit		bit (1) static init ("0"b),
      203 	stackoff		fixed bin static init (0);	/* word offset in stack	*/
      204 
      205 /*
      206*Procedures Called		*/
      207 
      208 dcl	cobol_read_rand	entry (fixed bin, char (5), ptr),
      209 	cobol_read_gen	entry (ptr, fixed bin),
      210 	cobol_io_util$bin_to_dec
      211 			entry (bit (3) aligned, fixed bin, fixed bin, bit (3) aligned, fixed bin, fixed bin),
      212 	cobol_move_gen	entry (ptr),
      213 	cobol_addr	entry (ptr, ptr, ptr),
      214 	cobol_call_op	entry (fixed bin, fixed bin),
      215 	cobol_define_tag	entry (fixed bin),
      216 	cobol_merge_return_gen
      217 			entry (ptr, fixed bin),
      218 	cobol_reg_manager$after_op
      219 			entry (fixed bin),
      220 	cobol_read_ft	entry (fixed bin, ptr),
      221 	cobol_make_tagref	entry (fixed bin, fixed bin, ptr),
      222 	cobol_make_merge_file
      223 			entry (ptr, ptr, ptr, ptr),
      224 	cobol_emit	entry (ptr, ptr, fixed bin);
      225 start:
      226 	eos_ptr = in_token.token_ptr (in_token.n);
      227 	if end_stmt.f = "01"b | end_stmt.f = "00"b
      228 	then do;
      229 		passed_tag = cobol_$next_tag;
      230 		cobol_$next_tag = cobol_$next_tag + 1;
      231 		call sort;
      232 		return;
      233 	     end;
      234 	else if end_stmt.f = "10"b
      235 	then do;
      236 		call merge;
      237 		return;
      238 	     end;
      239 	else do;
      240 		sort_tag = cobol_$next_tag;
      241 		exit_tag = cobol_$next_tag + 1;
      242 		cobol_$next_tag = cobol_$next_tag + 2;
      243 		call cobol_emit (addr (merge_check_inst), addr (rel_merge_check), 2);
      244 		call cobol_make_tagref (sort_tag, cobol_$text_wd_off - 1, null ());
      245 		call merge;
      246 		call cobol_emit (addr (tra_inst), null (), 1);
      247 		call cobol_make_tagref (exit_tag, cobol_$text_wd_off - 1, null ());
      248 		call cobol_define_tag (sort_tag);
      249 		call sort;
      250 		call cobol_define_tag (exit_tag);
      251 		return;
      252 	     end;
      253 
      254 /*	BEGIN	sort	*/
      255 sort:
      256      proc;
      257 
      258 	retry_tag = cobol_$next_tag;
      259 	call cobol_define_tag (retry_tag);
      260 	cobol_$next_tag = cobol_$next_tag + 1;
      261 	eos_ptr = addr (eos_buff);
      262 	name_ptr = in_token.token_ptr (2);
      263 	def_tag = cobol_$next_tag;
      264 	cobol_$next_tag = cobol_$next_tag + 1;
      265 	call cobol_call_op (13, retry_tag);
      266 	call cobol_reg_manager$after_op (13);
      267 
      268 
      269 	call cobol_read_ft (fd_token.file_no, ft_ptr);
      270 
      271 /* Added to fix the bug for variable length item. 	*/
      272 	if file_table.rec_do
      273 	then do;
      274 		call cobol_io_util$bin_to_dec ("110"b, 328, 12, "110"b, 304, 4);
      275 		call cobol_read_rand (1, file_table.rec_do_info, fkey_ptr);
      276 		addr (fkey_type9.file_key_info) -> file_key_desc = file_key.desc;
      277 		mpout.pt1 = null ();
      278 		mpout.pt2 = addr (num_type9);
      279 		num_type9.size = 12;
      280 		num_type9.places_left = 12;
      281 		num_type9.seg = 1000;
      282 		num_type9.off = 328;
      283 		mpout.pt3 = addr (fkey_type9);
      284 		mpout.pt4 = eos_ptr;
      285 		end_stmt.e = 1;
      286 		call cobol_move_gen (addr (mpout));
      287 	     end;
      288 
      289 	call cobol_emit (addr (inst_seq1 (1)), null (), 3);
      290 	call cobol_make_tagref (def_tag, cobol_$text_wd_off - 2, null ());
      291 
      292 
      293 	alpha_type9.size = file_table.max_cra_size;
      294 	alpha_type9.seg = file_table.cra_seg;
      295 	alpha_type9.off = file_table.cra_offset;
      296 	dn_ptr = addr (alpha_type9);
      297 
      298 
      299 	instr (1) = mlr_reg_to_reg;
      300 	instr (2) = "010000000000000000000000"b || substr (unspec (file_table.max_cra_size), 25, 12);
      301 	instr (3) = ""b;
      302 
      303 	mlr_struct.operand2.token_ptr = dn_ptr;
      304 
      305 	call cobol_addr (addr (mlr_struct), addr (instr (1)), null ());
      306 
      307 	call cobol_emit (addr (instr (1)), null (), 3);
      308 	if in_token.n >= 4
      309 	then do;
      310 		mlr_struct.operand2.token_ptr = in_token.token_ptr (3);
      311 		in_token.token_ptr (3) -> data_name.numeric = "0"b;
      312 		in_token.token_ptr (3) -> data_name.alphanum = "1"b;
      313 		instr (1) = mlr_reg_to_reg;
      314 		instr (2) = "010000000000000000000000"b || substr (unspec (file_table.max_cra_size), 25, 12);
      315 		instr (3) = ""b;
      316 		call cobol_addr (addr (mlr_struct), addr (instr (1)), null ());
      317 		substr (instr (1), 1, 9) = "000100000"b;
      318 		call cobol_emit (addr (instr (1)), null (), 3);
      319 	     end;
      320 
      321 	call cobol_emit (addr (tra_inst (1)), null (), 1);
      322 
      323 /* AT END processing		*/
      324 
      325 	call cobol_make_tagref (passed_tag, cobol_$text_wd_off - 1, null ());
      326 
      327 	call cobol_define_tag (def_tag);
      328 
      329 
      330 	return;
      331      end sort;					/*	END	sort	*/
      332 
      333 /*	BEGIN	merge	*/
      334 merge:
      335      proc;
      336 	call cobol_make_merge_file (in_token.token_ptr (2), temp_file_ptr, temp_type12_ptr, temp_type9_ptr);
      337 	read_in_token.pt2 = temp_type12_ptr;
      338 	read_in_token.pt3 = in_token.token_ptr (3);
      339 	if in_token.n = 4
      340 	then do;
      341 		read_in_token.n = 4;
      342 		read_in_token.pt4 = addr (type19_read_into);
      343 	     end;
      344 	else read_in_token.n = 3;
      345 	call cobol_read_gen (addr (read_in_token), passed_tag);
      346 	return;
      347 
      348      end merge;					/*	END merge	*/
      349 
      350 
      351 
      352 
      353 
      354 /*****	Declaration for builtin function	*****/
      355 
      356 dcl	(substr, mod, binary, fixed, addr, addrel, rel, length, string, unspec, null, index)
      357 			builtin;
      358 
      359 /*****	End of declaration for builtin function	*****/
      360 
  1     1 
  1     2 /*  BEGIN INCLUDE FILE ...   cobol_in_token.incl.pl1		  */
  1     3 
  1     4 /*  Last modified August 22, 1974 by AEG		  */
  1     5 
  1     6 
  1     7 declare in_token_ptr ptr;
  1     8 
  1     9 declare 1 in_token aligned based(in_token_ptr),
  1    10 	2 n fixed bin aligned,
  1    11 	2 code fixed bin aligned,
  1    12 	2 token_ptr(0 refer(in_token.n)) ptr aligned;
  1    13 
  1    14 
  1    15 /*  END INCLUDE FILE ...   cobol_in_token.incl.pl1		  */
  1    16 
      361 
  2     1 
  2     2 /* BEGIN INCLUDE FILE ... cobol_file_key.incl.pl1 */
  2     3 /* Last modified on 03/30/78 by FCH */
  2     4 
  2     5 /*
  2     6*A file key record is created in variable common for any one of several
  2     7*data items which may be associated with a file name.  The key_type field in
  2     8*the file key record identifies the type of item for which the record is
  2     9*created.  The name in a file key record is resolved by the replacement
  2    10*phase, and a section of the type 9 entry in the name table for the
  2    11*specified data item is stored in the file key record.  The stored
  2    12*description is subsequently used by the generator phase.
  2    13**/
  2    14 
  2    15 /*   THE FILE KEY RECORD STRUCTURE   */
  2    16 
  2    17 dcl 	1 file_key based (fkey_ptr),
  2    18 		2 next char(5),
  2    19 		2 next_alt char(5),
  2    20 		2 qual char(5),
  2    21 		2 info,
  2    22 		3 duplicates bit(1),
  2    23 		3 filler bit(7),
  2    24 		2 file_no fixed bin,
  2    25 		2 key_type fixed bin,
  2    26 		2 line fixed bin,
  2    27 		2 column fixed bin,
  2    28 		2 temp_seg fixed bin,
  2    29 		2 temp_offset fixed bin(24),
  2    30 		2 desc char(40),
  2    31 		2 name_size fixed bin,
  2    32 		2 name char(0 refer(file_key.name_size));
  2    33 
  2    34 /* END INCLUDE FILE ... cobol_file_key.incl.pl1 */
  2    35 
      362 
  3     1 
  3     2 /* BEGIN INCLUDE FILE ... cobol_.incl.pl1 */
  3     3 /* last modified Feb 4, 1977 by ORN  */
  3     4 
  3     5 /* This file defines all external data used in the generator phase of Multics Cobol */
  3     6 
  3     7 /* POINTERS */
  3     8 dcl cobol_$text_base_ptr ptr  ext;
  3     9 dcl text_base_ptr ptr  defined (cobol_$text_base_ptr);
  3    10 dcl cobol_$con_end_ptr ptr  ext;
  3    11 dcl con_end_ptr ptr  defined (cobol_$con_end_ptr);
  3    12 dcl cobol_$def_base_ptr ptr  ext;
  3    13 dcl def_base_ptr ptr  defined (cobol_$def_base_ptr);
  3    14 dcl cobol_$link_base_ptr ptr  ext;
  3    15 dcl link_base_ptr ptr  defined (cobol_$link_base_ptr);
  3    16 dcl cobol_$sym_base_ptr ptr  ext;
  3    17 dcl sym_base_ptr ptr  defined (cobol_$sym_base_ptr);
  3    18 dcl cobol_$reloc_text_base_ptr ptr  ext;
  3    19 dcl reloc_text_base_ptr ptr  defined (cobol_$reloc_text_base_ptr);
  3    20 dcl cobol_$reloc_def_base_ptr ptr  ext;
  3    21 dcl reloc_def_base_ptr ptr  defined (cobol_$reloc_def_base_ptr);
  3    22 dcl cobol_$reloc_link_base_ptr ptr  ext;
  3    23 dcl reloc_link_base_ptr ptr  defined (cobol_$reloc_link_base_ptr);
  3    24 dcl cobol_$reloc_sym_base_ptr ptr  ext;
  3    25 dcl reloc_sym_base_ptr ptr  defined (cobol_$reloc_sym_base_ptr);
  3    26 dcl cobol_$reloc_work_base_ptr ptr  ext;
  3    27 dcl reloc_work_base_ptr ptr  defined (cobol_$reloc_work_base_ptr);
  3    28 dcl cobol_$pd_map_ptr ptr  ext;
  3    29 dcl pd_map_ptr ptr  defined (cobol_$pd_map_ptr);
  3    30 dcl cobol_$fixup_ptr ptr  ext;
  3    31 dcl fixup_ptr ptr  defined (cobol_$fixup_ptr);
  3    32 dcl cobol_$initval_base_ptr ptr  ext;
  3    33 dcl initval_base_ptr ptr  defined (cobol_$initval_base_ptr);
  3    34 dcl cobol_$initval_file_ptr ptr  ext;
  3    35 dcl initval_file_ptr ptr  defined (cobol_$initval_file_ptr);
  3    36 dcl cobol_$perform_list_ptr ptr  ext;
  3    37 dcl perform_list_ptr ptr  defined (cobol_$perform_list_ptr);
  3    38 dcl cobol_$alter_list_ptr ptr  ext;
  3    39 dcl alter_list_ptr ptr  defined (cobol_$alter_list_ptr);
  3    40 dcl cobol_$seg_init_list_ptr ptr  ext;
  3    41 dcl seg_init_list_ptr ptr  defined (cobol_$seg_init_list_ptr);
  3    42 dcl cobol_$temp_token_area_ptr ptr  ext;
  3    43 dcl temp_token_area_ptr ptr  defined (cobol_$temp_token_area_ptr);
  3    44 dcl cobol_$temp_token_ptr ptr  ext;
  3    45 dcl temp_token_ptr ptr  defined (cobol_$temp_token_ptr);
  3    46 dcl cobol_$token_block1_ptr ptr  ext;
  3    47 dcl token_block1_ptr ptr  defined (cobol_$token_block1_ptr);
  3    48 dcl cobol_$token_block2_ptr ptr  ext;
  3    49 dcl token_block2_ptr ptr  defined (cobol_$token_block2_ptr);
  3    50 dcl cobol_$minpral5_ptr ptr  ext;
  3    51 dcl minpral5_ptr ptr  defined (cobol_$minpral5_ptr);
  3    52 dcl cobol_$tag_table_ptr ptr  ext;
  3    53 dcl tag_table_ptr ptr  defined (cobol_$tag_table_ptr);
  3    54 dcl cobol_$map_data_ptr ptr  ext;
  3    55 dcl map_data_ptr ptr  defined (cobol_$map_data_ptr);
  3    56 dcl cobol_$ptr_status_ptr ptr  ext;
  3    57 dcl ptr_status_ptr ptr  defined (cobol_$ptr_status_ptr);
  3    58 dcl cobol_$reg_status_ptr ptr  ext;
  3    59 dcl reg_status_ptr ptr  defined (cobol_$reg_status_ptr);
  3    60 dcl cobol_$misc_base_ptr ptr ext;
  3    61 dcl misc_base_ptr ptr defined (cobol_$misc_base_ptr);
  3    62 dcl cobol_$misc_end_ptr ptr ext;
  3    63 dcl misc_end_ptr ptr defined (cobol_$misc_end_ptr);
  3    64 dcl cobol_$list_ptr ptr ext;
  3    65 dcl list_ptr ptr defined (cobol_$list_ptr);
  3    66 dcl cobol_$allo1_ptr ptr ext;
  3    67 dcl allo1_ptr ptr defined (cobol_$allo1_ptr);
  3    68 dcl cobol_$eln_ptr ptr ext;
  3    69 dcl eln_ptr ptr defined (cobol_$eln_ptr);
  3    70 dcl cobol_$diag_ptr ptr ext;
  3    71 dcl diag_ptr ptr defined (cobol_$diag_ptr);
  3    72 dcl cobol_$xref_token_ptr ptr ext;
  3    73 dcl xref_token_ptr ptr defined (cobol_$xref_token_ptr);
  3    74 dcl cobol_$xref_chain_ptr ptr ext;
  3    75 dcl xref_chain_ptr ptr defined (cobol_$xref_chain_ptr);
  3    76 dcl cobol_$statement_info_ptr ptr ext;
  3    77 dcl statement_info_ptr ptr defined (cobol_$statement_info_ptr);
  3    78 dcl cobol_$reswd_ptr ptr ext;
  3    79 dcl reswd_ptr ptr defined (cobol_$reswd_ptr);
  3    80 dcl cobol_$op_con_ptr ptr ext;
  3    81 dcl op_con_ptr ptr defined (cobol_$op_con_ptr);
  3    82 dcl cobol_$ntbuf_ptr ptr ext;
  3    83 dcl ntbuf_ptr ptr defined (cobol_$ntbuf_ptr);
  3    84 dcl cobol_$main_pcs_ptr ptr ext;
  3    85 dcl main_pcs_ptr ptr defined (cobol_$main_pcs_ptr);
  3    86 dcl cobol_$include_info_ptr ptr ext;
  3    87 dcl include_info_ptr ptr defined (cobol_$include_info_ptr);
  3    88 
  3    89 /* FIXED BIN */
  3    90 dcl cobol_$text_wd_off fixed bin  ext;
  3    91 dcl text_wd_off fixed bin  defined (cobol_$text_wd_off);
  3    92 dcl cobol_$con_wd_off fixed bin  ext;
  3    93 dcl con_wd_off fixed bin  defined (cobol_$con_wd_off);
  3    94 dcl cobol_$def_wd_off fixed bin  ext;
  3    95 dcl def_wd_off fixed bin  defined (cobol_$def_wd_off);
  3    96 dcl cobol_$def_max fixed bin  ext;
  3    97 dcl def_max fixed bin  defined (cobol_$def_max);
  3    98 dcl cobol_$link_wd_off fixed bin  ext;
  3    99 dcl link_wd_off fixed bin  defined (cobol_$link_wd_off);
  3   100 dcl cobol_$link_max fixed bin  ext;
  3   101 dcl link_max fixed bin  defined (cobol_$link_max);
  3   102 dcl cobol_$sym_wd_off fixed bin  ext;
  3   103 dcl sym_wd_off fixed bin  defined (cobol_$sym_wd_off);
  3   104 dcl cobol_$sym_max fixed bin  ext;
  3   105 dcl sym_max fixed bin  defined (cobol_$sym_max);
  3   106 dcl cobol_$reloc_text_max fixed bin(24)  ext;
  3   107 dcl reloc_text_max fixed bin(24)  defined (cobol_$reloc_text_max);
  3   108 dcl cobol_$reloc_def_max fixed bin(24)  ext;
  3   109 dcl reloc_def_max fixed bin(24)  defined (cobol_$reloc_def_max);
  3   110 dcl cobol_$reloc_link_max fixed bin(24)  ext;
  3   111 dcl reloc_link_max fixed bin(24)  defined (cobol_$reloc_link_max);
  3   112 dcl cobol_$reloc_sym_max fixed bin(24)  ext;
  3   113 dcl reloc_sym_max fixed bin(24)  defined (cobol_$reloc_sym_max);
  3   114 dcl cobol_$reloc_work_max fixed bin(24)  ext;
  3   115 dcl reloc_work_max fixed bin(24)  defined (cobol_$reloc_work_max);
  3   116 dcl cobol_$pd_map_index fixed bin  ext;
  3   117 dcl pd_map_index fixed bin  defined (cobol_$pd_map_index);
  3   118 dcl cobol_$cobol_data_wd_off fixed bin  ext;
  3   119 dcl cobol_data_wd_off fixed bin  defined (cobol_$cobol_data_wd_off);
  3   120 dcl cobol_$stack_off fixed bin  ext;
  3   121 dcl stack_off fixed bin  defined (cobol_$stack_off);
  3   122 dcl cobol_$max_stack_off fixed bin  ext;
  3   123 dcl max_stack_off fixed bin  defined (cobol_$max_stack_off);
  3   124 dcl cobol_$init_stack_off fixed bin  ext;
  3   125 dcl init_stack_off fixed bin  defined (cobol_$init_stack_off);
  3   126 dcl cobol_$pd_map_sw fixed bin  ext;
  3   127 dcl pd_map_sw fixed bin  defined (cobol_$pd_map_sw);
  3   128 dcl cobol_$next_tag fixed bin  ext;
  3   129 dcl next_tag fixed bin  defined (cobol_$next_tag);
  3   130 dcl cobol_$data_init_flag fixed bin  ext;
  3   131 dcl data_init_flag fixed bin  defined (cobol_$data_init_flag);
  3   132 dcl cobol_$seg_init_flag fixed bin  ext;
  3   133 dcl seg_init_flag fixed bin  defined (cobol_$seg_init_flag);
  3   134 dcl cobol_$alter_flag fixed bin  ext;
  3   135 dcl alter_flag fixed bin  defined (cobol_$alter_flag);
  3   136 dcl cobol_$sect_eop_flag fixed bin  ext;
  3   137 dcl sect_eop_flag fixed bin  defined (cobol_$sect_eop_flag);
  3   138 dcl cobol_$para_eop_flag fixed bin  ext;
  3   139 dcl para_eop_flag fixed bin  defined (cobol_$para_eop_flag);
  3   140 dcl cobol_$priority_no fixed bin  ext;
  3   141 dcl priority_no fixed bin  defined (cobol_$priority_no);
  3   142 dcl cobol_$compile_count fixed bin ext;
  3   143 dcl compile_count fixed bin defined (cobol_$compile_count);
  3   144 dcl cobol_$ptr_assumption_ind fixed bin ext;
  3   145 dcl ptr_assumption_ind fixed bin defined (cobol_$ptr_assumption_ind);
  3   146 dcl cobol_$reg_assumption_ind fixed bin ext;
  3   147 dcl reg_assumption_ind fixed bin defined (cobol_$reg_assumption_ind);
  3   148 dcl cobol_$perform_para_index fixed bin ext;
  3   149 dcl perform_para_index fixed bin defined (cobol_$perform_para_index);
  3   150 dcl cobol_$perform_sect_index fixed bin ext;
  3   151 dcl perform_sect_index fixed bin defined (cobol_$perform_sect_index);
  3   152 dcl cobol_$alter_index fixed bin ext;
  3   153 dcl alter_index fixed bin defined (cobol_$alter_index);
  3   154 dcl cobol_$list_off fixed bin ext;
  3   155 dcl list_off fixed bin defined (cobol_$list_off);
  3   156 dcl cobol_$constant_offset fixed bin ext;
  3   157 dcl constant_offset fixed bin defined (cobol_$constant_offset);
  3   158 dcl cobol_$misc_max fixed bin ext;
  3   159 dcl misc_max fixed bin defined (cobol_$misc_max);
  3   160 dcl cobol_$pd_map_max fixed bin ext;
  3   161 dcl pd_map_max fixed bin defined (cobol_$pd_map_max);
  3   162 dcl cobol_$map_data_max fixed bin ext;
  3   163 dcl map_data_max fixed bin defined (cobol_$map_data_max);
  3   164 dcl cobol_$fixup_max fixed bin ext;
  3   165 dcl fixup_max fixed bin defined (cobol_$fixup_max);
  3   166 dcl cobol_$tag_table_max fixed bin ext;
  3   167 dcl tag_table_max fixed bin defined (cobol_$tag_table_max);
  3   168 dcl cobol_$temp_token_max fixed bin ext;
  3   169 dcl temp_token_max fixed bin defined (cobol_$temp_token_max);
  3   170 dcl cobol_$allo1_max fixed bin ext;
  3   171 dcl allo1_max fixed bin defined (cobol_$allo1_max);
  3   172 dcl cobol_$eln_max fixed bin ext;
  3   173 dcl eln_max fixed bin defined (cobol_$eln_max);
  3   174 dcl cobol_$debug_enable fixed bin ext;
  3   175 dcl debug_enable fixed bin defined (cobol_$debug_enable);
  3   176 dcl cobol_$non_source_offset fixed bin ext;
  3   177 dcl non_source_offset fixed bin defined (cobol_$non_source_offset);
  3   178 dcl cobol_$initval_flag fixed bin ext;
  3   179 dcl initval_flag fixed bin defined (cobol_$initval_flag);
  3   180 dcl cobol_$date_compiled_sw fixed bin ext;
  3   181 dcl date_compiled_sw fixed bin defined (cobol_$date_compiled_sw);
  3   182 dcl cobol_$include_cnt fixed bin ext;
  3   183 dcl include_cnt fixed bin defined (cobol_$include_cnt);
  3   184 dcl cobol_$fs_charcnt fixed bin ext;
  3   185 dcl fs_charcnt fixed bin defined (cobol_$fs_charcnt);
  3   186 dcl cobol_$ws_charcnt fixed bin ext;
  3   187 dcl ws_charcnt fixed bin defined (cobol_$ws_charcnt);
  3   188 dcl cobol_$coms_charcnt fixed bin ext;
  3   189 dcl coms_charcnt fixed bin defined (cobol_$coms_charcnt);
  3   190 dcl cobol_$ls_charcnt fixed bin ext;
  3   191 dcl ls_charcnt fixed bin defined (cobol_$ls_charcnt);
  3   192 dcl cobol_$cons_charcnt fixed bin ext;
  3   193 dcl cons_charcnt fixed bin defined (cobol_$cons_charcnt);
  3   194 dcl cobol_$value_cnt fixed bin ext;
  3   195 dcl value_cnt fixed bin defined (cobol_$value_cnt);
  3   196 dcl cobol_$cd_cnt fixed bin ext;
  3   197 dcl cd_cnt fixed bin defined (cobol_$cd_cnt);
  3   198 dcl cobol_$fs_wdoff fixed bin ext;
  3   199 dcl fs_wdoff fixed bin defined (cobol_$fs_wdoff);
  3   200 dcl cobol_$ws_wdoff fixed bin ext;
  3   201 dcl ws_wdoff fixed bin defined (cobol_$ws_wdoff);
  3   202 dcl cobol_$coms_wdoff fixed bin ext;
  3   203 dcl coms_wdoff fixed bin defined (cobol_$coms_wdoff);
  3   204 
  3   205 /* CHARACTER */
  3   206 dcl cobol_$scratch_dir char (168)   aligned ext;
  3   207 dcl scratch_dir char (168)   aligned defined (cobol_$scratch_dir);			/* -42- */
  3   208 dcl cobol_$obj_seg_name char (32)   aligned ext;
  3   209 dcl obj_seg_name char (32)   aligned defined (cobol_$obj_seg_name);		/* -8- */
  3   210 
  3   211 /* BIT */
  3   212 dcl cobol_$xref_bypass bit(1) aligned ext;
  3   213 dcl xref_bypass bit(1) aligned defined (cobol_$xref_bypass);			/* -1- */
  3   214 dcl cobol_$same_sort_merge_proc bit(1) aligned ext;
  3   215 dcl same_sort_merge_proc bit(1) aligned defined (cobol_$same_sort_merge_proc);		/* -1- */
  3   216 
  3   217 
  3   218 /* END INCLUDE FILE ... cobol_incl.pl1*/
  3   219 
  3   220 
      363 
  4     1 
  4     2 /* BEGIN INCLUDE FILE ...   cobol_file_table.incl.pl1 */
  4     3 /*     <<<   INCLUDE FILE FOR FILE TABLE IN COMMON   >>>     */
  4     4 
  4     5 /* Modified on 09/30/80 by FCH, [4.4-1], density is 6250 is supported */
  4     6 /* Modified on 12/05/78 by RAL, [3.0-3], added dupl_alt from dummy102 */
  4     7 /* Modified on 11/21/78 by RAL, [3.0-2], added space for abs_record_offset from filler */
  4     8 /* Modified on 10/26/78 by RAL, [3.0-1], added space for file_desc_1 table offset from filler */
  4     9 /*     <<<   LAST MODIFIED ON 06-02-77 by GM         >>>	*/
  4    10 /*     <<<   LAST MODIFIED ON 05-31-77 by GM         >>>	*/
  4    11 /*     <<<   LAST MODIFIED  ON 06-30-76 by GM        >>>	*/
  4    12 /*     <<<   LAST MODIFIED ON 06-07-76 by GM    >>>     */
  4    13 /*     <<<   LAST MODIFIED ON 11-29-74 by orn   >>>     */
  4    14 
  4    15 /*
  4    16*A file table is created in variable common for each file selected in the
  4    17*environment division.  The fields of a given file table provide information
  4    18*about the specific file for which the file table is generated.  The
  4    19*addresses which may be contained in the various "info" fields of the file
  4    20*table are addresses in variable common.
  4    21**/
  4    22 
  4    23 /*   THE FILE TABLE STRUCTURE   */
  4    24 
  4    25 dcl	1 file_table based (ft_ptr),
  4    26 		2 next char (5),
  4    27 		2 ifn char (16),
  4    28 		2 attach_options_info char(5),	/*06/02/77*/
  4    29 		2 replacement_info char(5),		/*06/02/77*/
  4    30 		2 file_id_info char(5),		/*05/31/77*/
  4    31 		2 retention_info char(5),		/*05/31/77*/
  4    32 		2 filler0 char (3) ,			/* [3.0-1] */
  4    33 		2 file_desc_1_offset fixed bin (24),		/* [3.0-1] */
  4    34 		2 abs_record_offset fixed bin (24),		/* [3.-02] */
  4    35 		2 filler char(5),		/* this area is available.*/
  4    36 		2 padding_char char (1),
  4    37 		2 banner_char char (1),
  4    38 		2 file_status_info char (5),
  4    39 		2 extra_status_info char (5),
  4    40 		2 cat_id_info char (5),
  4    41 		2 r_key_info char (5),
  4    42 		2 alt_key_info char (5),
  4    43 		2 rec_do_info char (5),
  4    44 		2 label_info char (5),
  4    45 		2 data_info char (5),
  4    46 		2 report_info char (5),
  4    47 		2 linage_info char (5),
  4    48 		2 optional bit (1),						/*06/07/76*/
  4    49 		2 external bit (1),
  4    50 		2 file_status bit (1),
  4    51 		2 extra_status bit (1),
  4    52 		2 sysin bit (1),
  4    53 		2 sysout bit (1),
  4    54 		2 move_mode bit (1),
  4    55 		2 locate_mode bit (1),
  4    56 		2 fixed_recs bit (1),
  4    57 		2 variable_recs bit (1),
  4    58 		2 spanned_recs bit (1),				/*06/07/76*/
  4    59 		2 interchange bit (1),				/*06/07/76*/
  4    60 		2 relative_key bit (1),
  4    61 		2 record_key bit (1),
  4    62 		2 even_parity bit (1),
  4    63 		2 odd_parity bit (1),
  4    64 		2 padding bit (1),
  4    65 		2 banner bit (1),
  4    66 		2 random bit (1),
  4    67 		2 no_file_lockout bit (1),
  4    68 		2 no_write_check bit (1),
  4    69 		2 no_resident_index bit (1),
  4    70 		2 same_file bit (1),
  4    71 		2 sort_file bit (1),
  4    72 		2 rec_do bit (1),
  4    73 		2 linage bit (1),
  4    74 		2 code_set_clause bit (1),
  4    75 		/* history */
  4    76 		2 close bit (1),
  4    77 		2 delete bit (1),
  4    78 		2 open_in bit (1),
  4    79 		2 open_out bit (1),
  4    80 		2 open_io bit (1),
  4    81 		2 open_ext bit (1),
  4    82 		2 read bit (1),
  4    83 		2 release bit (1),
  4    84 		2 return_bit bit (1),
  4    85 		2 rewrite bit (1),
  4    86 		2 sort bit (1),
  4    87 		2 start bit (1),
  4    88 		2 use_error bit (1),
  4    89 		2 write bit (1),
  4    90 		2 read_next bit (1),
  4    91 		2 read_key bit (1),
  4    92 		2 accept bit (1),
  4    93 		2 display bit (1),
  4    94 		2 unequal_recs bit (1),
  4    95 		2 dummy_sysin bit (1),
  4    96 		2 dummy_sysout bit (1),
  4    97 		2 file_no fixed bin,
  4    98 		2 uca_offset fixed bin(24),
  4    99 		2 cra_seg fixed bin,
  4   100 		2 cra_offset fixed bin(24),
  4   101 		2 max_cra_size fixed bin(24),
  4   102 		2 catalogued fixed bin,
  4   103 		2 organization fixed bin,
  4   104 		2 org_qual fixed bin,
  4   105 		2 access fixed bin,
  4   106 		2 buffers fixed bin,
  4   107 		2 device fixed bin,
  4   108 		2 record_prefix fixed bin,				/*06/07/76*/
  4   109 		2 alternate_keys fixed bin,
  4   110 		2 record_format fixed bin,
  4   111 		2 label_format fixed bin,
  4   112 		2 key_location fixed bin,
  4   113 		2 key_size fixed bin,
  4   114 		2 temporary fixed bin,
  4   115 		2 address_format fixed bin,
  4   116 		2 same_area_clause fixed bin,
  4   117 		2 same_rec_clause fixed bin,
  4   118 		2 same_sort_clause fixed bin,
  4   119 		2 mult_clause_no fixed bin,
  4   120 		2 mult_position_no fixed bin,
  4   121 		2 block_desc fixed bin,
  4   122 		2 block_min fixed bin(24),
  4   123 		2 block_max fixed bin(24),
  4   124 		2 rec_min fixed bin(24),
  4   125 		2 rec_max fixed bin(24),
  4   126 		2 label_count fixed bin,
  4   127 		2 ifn_size fixed bin,
  4   128 		2 data_count fixed bin,
  4   129 		2 report_count fixed bin,
  4   130 		2 code_set fixed bin,
  4   131 		2 error_exit fixed bin,
  4   132 		2 prefix_size fixed bin,
  4   133 		2 blocked bit (1),
  4   134 		2 variable bit (1),
  4   135 		2 unbannered bit (1),
  4   136 		2 prefix_clause bit (1),
  4   137 		2 symbolic bit (1),
  4   138 		2 address_format_bit bit (1),
  4   139 		2 bsn bit(1),						/*06/07/76*/
  4   140 		2 process_area bit(1),					/*06/07/76*/
  4   141 		2 dupl_alt bit (1),			/* [3.0-3] */
  4   142 		2 dummy102 bit (23),
  4   143 		2 name_size fixed bin,
  4   144 		2 name char(32),
  4   145 		2 id char(32),
  4   146 		2 temp bit(1) ,
  4   147 		2 perm bit(1) ,
  4   148 		2 attach bit(1) ,
  4   149 		2 detach bit(1) ,
  4   150 		2 fsb ,		/* file state block */
  4   151 		     3 seg fixed bin(24), /* internal addr */
  4   152 		     3 off fixed bin(24),
  4   153 		2 tape,
  4   154 		     3 density bit(1) ,	/* 0-hi 1-lo */
  4   155 		     3 retain bit(1),	/* 0 not retained across attachment, 1 retained */
  4   156 		     3 force bit(1),	/* 0 check retention date, 1 no check */
  4   157 		     3 protect bit(1) ,	/* 0-no 1-yes */
  4   158 		     3 den_6250 bit(1),	/* 0-no 1-yes */		/*[4.4-1]*/
  4   159 		2 cat_nm char(200),
  4   160 		2 ao_len fixed bin(24),		/* attach options */
  4   161 		2 ao_string char(256),
  4   162 		2 output_mode fixed bin,	/*	0 not specified
  4   163*						1 generation
  4   164*						2 modification
  4   165*						3 replacement literal
  4   166*						4 replacement dataname	*/
  4   167 		2 om_len	fixed bin,		/* length of output mode */
  4   168 		2 om_string char(17),
  4   169 		2 tape_device fixed bin,	/*	0 not specified
  4   170*						1 integer
  4   171*						2 dataname	*/
  4   172 		2 tape_device_num fixed bin,
  4   173 		2 tape_device_key char(5),
  4   174 		2 add_cat_key char(5);
  4   175 
  4   176 
  4   177 /* END INCLUDE FILE ...   cobol_file_table.incl.pl1 */
  4   178 
      364 
  5     1 
  5     2 /* BEGIN INCLUDE FILE ... cobol_type1.incl.pl1 */
  5     3 /* Last modified on 11/19/76 by ORN */
  5     4 
  5     5 /*
  5     6*A reserved word token is created in the minpral files for each occurrence
  5     7*of a reserved word in the source program.  The value of the key field
  5     8*indicates the specific reserved word which a type 1 token represents.
  5     9**/
  5    10 
  5    11 dcl rw_ptr ptr;
  5    12 
  5    13 /* BEGIN DECLARATION OF TYPE1 (RESERVED WORD) TOKEN */
  5    14 dcl	1 reserved_word based (rw_ptr),
  6     1 
  6     2 /* begin include file ... cobol_TYPE1.incl.pl1 */
  6     3 /* Last modified on 11/17/76 by ORN */
  6     4 /* Last modified on 12/28/76 by FCH */
  6     5 /* Last modified on 12/16/80 by FCH */
  6     6 
  6     7 		/* header */
  6     8 		2 size fixed bin,
  6     9 		2 line fixed bin,
  6    10 		2 column fixed bin,
  6    11 		2 type fixed bin,
  6    12 		/* body */
  6    13 		2 key fixed bin,
  6    14 		/* procedure division class bits */
  6    15 		2 verb bit (1),
  6    16 		2 arith_op bit (1),
  6    17 		2 figcon bit (1),
  6    18 		2 terminator bit (1),
  6    19 		2 end_dec bit (1),
  6    20 		2 rel_op bit (1),
  6    21 		2 imper_verb bit (1),
  6    22 		2 end_cobol bit (1),
  6    23 		/* data division class bits */
  6    24 		2 section_header bit (1),
  6    25 		2 fs_ind bit (1),
  6    26 		2 fd_clause bit (1),
  6    27 		2 dd_clause bit (1),
  6    28 		2 cd_input bit (1),
  6    29 		2 cd_output bit (1),
  6    30 		2 cset_name bit (1),
  6    31 		2 ss_division bit (1),
  6    32 		2 repl_jump_ind bit (4),
  6    33 		2 ided_recovery bit (1),
  6    34 		2 report_writer bit (5),
  6    35 		2 ss_desc_entry bit (1),
  6    36 		2 jump_index fixed bin,
  6    37 		2 length fixed bin,
  6    38 		2 name char(0 refer(reserved_word.length));
  6    39 
  6    40 
  6    41 
  6    42 /* end include file ... cobol_TYPE1.incl.pl1 */
  6    43 
  5    15 
  5    16 /* END DECLARATION OF TYPE1 (RESERVED WORD) TOKEN */
  5    17 
  5    18 /* END INCLUDE FILE ... cobol_type1.incl.pl1 */
  5    19 
      365 
  7     1 
  7     2 /* BEGIN INCLUDE FILE ... cobol_type9.incl.pl1 */
  7     3 /* Last modified on 11/19/76 by ORN */
  7     4 
  7     5 /*
  7     6*A type 9 data name token is entered into the name table by the data
  7     7*division syntax phase for each data name described in the data division.
  7     8*The replacement phase subsequently replaces type 8 user word references
  7     9*to data names in the procedure division minpral file with the corresponding
  7    10*type 9 tokens from the name table.
  7    11**/
  7    12 
  7    13 /* dcl dn_ptr ptr; */
  7    14 
  7    15 /* BEGIN DECLARATION OF TYPE9 (DATA NAME) TOKEN */
  7    16 dcl 1 data_name based (dn_ptr),
  8     1 
  8     2 /* begin include file ... cobol_TYPE9.incl.pl1 */
  8     3 /* Last modified on 06/19/77 by ORN */
  8     4 /* Last modified on 12/28/76 by FCH */
  8     5 
  8     6 		/* header */
  8     7 		2 size fixed bin,
  8     8 		2 line fixed bin,
  8     9 		2 column fixed bin,
  8    10 		2 type fixed bin,
  8    11 		/* body */
  8    12 		2 string_ptr ptr,
  8    13 		2 prev_rec ptr,
  8    14 		2 searched bit (1),
  8    15 		2 duplicate bit (1),
  8    16 		2 saved bit (1),
  8    17 		2 debug_ind bit (1),
  8    18 		2 filler2 bit (3),
  8    19 		2 used_as_sub bit (1),
  8    20 		2 def_line fixed bin,
  8    21 		2 level fixed bin,
  8    22 		2 linkage fixed bin,
  8    23 		2 file_num fixed bin,
  8    24 		2 size_rtn fixed bin,
  8    25 		2 item_length fixed bin(24),
  8    26 		2 places_left fixed bin,
  8    27 		2 places_right fixed bin,
  8    28 		/* description */
  8    29 		2 file_section bit (1),
  8    30 		2 working_storage bit (1),
  8    31 		2 constant_section bit (1),
  8    32 		2 linkage_section bit (1),
  8    33 		2 communication_section bit (1),
  8    34 		2 report_section bit (1),
  8    35 		2 level_77 bit (1),
  8    36 		2 level_01 bit (1),
  8    37 		2 non_elementary bit (1),
  8    38 		2 elementary bit (1),
  8    39 		2 filler_item bit (1),
  8    40 		2 s_of_rdf bit (1),
  8    41 		2 o_of_rdf bit (1),
  8    42 		2 bin_18 bit (1),
  8    43 		2 bin_36 bit (1),
  8    44 		2 pic_has_l bit (1),
  8    45 		2 pic_is_do bit (1),
  8    46 		2 numeric bit (1),
  8    47 		2 numeric_edited bit (1),
  8    48 		2 alphanum bit (1),
  8    49 		2 alphanum_edited bit (1),
  8    50 		2 alphabetic bit (1),
  8    51 		2 alphabetic_edited bit (1),
  8    52 		2 pic_has_p bit (1),
  8    53 		2 pic_has_ast bit (1),
  8    54 		2 item_signed bit(1),
  8    55 		2 sign_separate bit (1),
  8    56 		2 display bit (1),
  8    57 		2 comp bit (1),
  8    58 		2 ascii_packed_dec_h bit (1),	/* as of 8/16/76  this field used for comp8. */
  8    59 		2 ascii_packed_dec bit (1),
  8    60 		2 ebcdic_packed_dec bit (1),
  8    61 		2 bin_16 bit (1),
  8    62 		2 bin_32 bit (1),
  8    63 		2 usage_index bit (1),
  8    64 		2 just_right bit (1),
  8    65 		2 compare_argument bit (1),
  8    66 		2 sync bit (1),
  8    67 		2 temporary bit (1),
  8    68 		2 bwz bit (1),
  8    69 		2 variable_length bit (1),
  8    70 		2 subscripted bit (1),
  8    71 		2 occurs_do bit (1),
  8    72 		2 key_a bit (1),
  8    73 		2 key_d bit (1),
  8    74 		2 indexed_by bit (1),
  8    75 		2 value_numeric bit (1),
  8    76 		2 value_non_numeric bit (1),
  8    77 		2 value_signed bit (1),
  8    78 		2 sign_type bit (3),
  8    79 		2 pic_integer bit (1),
  8    80 		2 ast_when_zero bit (1),
  8    81 		2 label_record bit (1),
  8    82 		2 sign_clause_occurred bit (1),
  8    83 		2 okey_dn bit (1),
  8    84 		2 subject_of_keyis bit (1),
  8    85 		2 exp_redefining bit (1),
  8    86 		2 sync_in_rec bit (1),
  8    87 		2 rounded bit (1),
  8    88 		2 ad_bit bit (1),
  8    89 		2 debug_all bit (1),
  8    90 		2 overlap bit (1),
  8    91 		2 sum_counter bit (1),
  8    92 		2 exp_occurs bit (1),
  8    93 		2 linage_counter bit (1),
  8    94 		2 rnm_01 bit (1),
  8    95 		2 aligned bit (1),
  8    96 		2 not_user_writable bit (1),
  8    97 		2 database_key bit (1),
  8    98 		2 database_data_item bit (1),
  8    99 		2 seg_num fixed bin,
  8   100 		2 offset fixed bin(24),
  8   101 		2 initial_ptr fixed bin,
  8   102 		2 edit_ptr fixed bin,
  8   103 		2 occurs_ptr fixed bin,
  8   104 		2 do_rec char(5),
  8   105 		2 bitt bit (1),
  8   106 		2 byte bit (1),
  8   107 		2 half_word bit (1),
  8   108 		2 word bit (1),
  8   109 		2 double_word bit (1),
  8   110 		2 half_byte bit (1),
  8   111 		2 filler5 bit (1),
  8   112 		2 bit_offset bit (4),
  8   113 		2 son_cnt bit (16),
  8   114 		2 max_red_size fixed bin(24),
  8   115 		2 name_size fixed bin,
  8   116 		2 name char(0 refer(data_name.name_size));	
  8   117 
  8   118 
  8   119 
  8   120 /* end include file ... cobol_TYPE9.incl.pl1 */
  8   121 
  7    17 
  7    18 /* END DECLARATION OF TYPE9 (DATA NAME) TOKEN */
  7    19 
  7    20 /* END INCLUDE FILE ... cobol_type9.incl.pl1 */
  7    21 
      366 
  9     1 
  9     2 /* BEGIN INCLUDE FILE ... cobol_type12.incl.pl1 */
  9     3 /* Last modified on 11/19/76 by ORN */
  9     4 
  9     5 /*
  9     6*A type 12 file name token is entered into the name table by the data
  9     7*division syntax phase for each file name appearing in the data division.
  9     8*When the replacement phase processes the procedure division minpral file,
  9     9*each reference to a file name is replaced with the type 12 token created
  9    10*for that file name.
  9    11**/
  9    12 
  9    13 /* dcl name_ptr ptr; */
  9    14 
  9    15 /* BEGIN DECLARATION OF TYPE12 (FILE NAME) TOKEN */
  9    16 dcl 	1 fd_token based (name_ptr),
 10     1 
 10     2 /* begin include file ... cobol_TYPE12.incl.pl1 */
 10     3 /* Last modified on 11/17/76 by ORN */
 10     4 
 10     5 		/* header */
 10     6 		2 size fixed bin,
 10     7 		2 line fixed bin,
 10     8 		2 column fixed bin,
 10     9 		2 type fixed bin,
 10    10 		/* body */
 10    11 		2 string_ptr ptr,
 10    12 		2 prev_rec ptr,
 10    13 		2 info bit (8),
 10    14 		2 def_line fixed bin,
 10    15 		2 file_no fixed bin,
 10    16 		2 name_size fixed bin,
 10    17 		2 name char(0 refer(fd_token.name_size));	
 10    18 
 10    19 /* end include file ... cobol_TYPE12.incl.pl1 */
 10    20 
  9    17 
  9    18 /* END DECLARATION OF TYPE12 (FILE NAME) TOKEN */
  9    19 
  9    20 
  9    21 /* END INCLUDE FILE ... cobol_type12.incl.pl1 */
  9    22 
      367 
 11     1 
 11     2 /* BEGIN INCLUDE FILE ... cobol_type19.incl.pl1 */
 11     3 /* last modified on 11/19/76 by ORN */
 11     4 
 11     5 /*
 11     6*A type 19 end of statement token is created in the procedure division
 11     7*minpral file at the end of each minpral statement generated by the
 11     8*procedure division syntax phase.  A minpral statement may be a complete or
 11     9*partial source language statement.  A type 19 token contains information
 11    10*describing the statement which it delimits.
 11    11**/
 11    12 
 11    13 dcl eos_ptr ptr;
 11    14 
 11    15 /* BEGIN DECLARATION OF TYPE19 (END STATEMENT) TOKEN */
 11    16 dcl	1 end_stmt based (eos_ptr),
 12     1 
 12     2 /* begin include file ... cobol_TYPE19.incl.pl1 */
 12     3 /* Last modified on 11/17/76 by ORN */
 12     4 
 12     5 		/* header */
 12     6 		2 size fixed bin,
 12     7 		2 line fixed bin,
 12     8 		2 column fixed bin,
 12     9 		2 type fixed bin,
 12    10 		/* body */
 12    11 		2 verb fixed bin,
 12    12 		2 e fixed bin,
 12    13 		2 h fixed bin,
 12    14 		2 i fixed bin,
 12    15 		2 j fixed bin,
 12    16 		2 a bit (3),
 12    17 		2 b bit (1),
 12    18 		2 c bit (1),
 12    19 		2 d bit (2),
 12    20 		2 f bit (2),
 12    21 		2 g bit (2),
 12    22 		2 k bit (5),
 12    23 		2 always_an bit (1);
 12    24 
 12    25 /* end include file ... cobol_TYPE19.incl.pl1 */
 12    26 
 11    17 
 11    18 /* END DECLARATION OF TYPE19 (END STATEMENT) TOKEN */
 11    19 
 11    20 /*
 11    21*FIELD		CONTENTS
 11    22*
 11    23*size		The total size in bytes of this end of statement token.
 11    24*line		0
 11    25*column		0
 11    26*type		19
 11    27*verb		A value indicating the verb in this statement
 11    28*		 1 = accept
 11    29*		 2 = add
 11    30*		 3 = on size error
 11    31*		 4 = alter
 11    32*		 5 = call
 11    33*		 7 = cancel
 11    34*		 8 = close
 11    35*		 9 = divide
 11    36*		10 = multiply
 11    37*		11 = subtract
 11    38*		12 = exit
 11    39*		14 = go
 11    40*		15 = merge
 11    41*		16 = initiate
 11    42*		17 = inspect
 11    43*		18 = move
 11    44*		19 = open
 11    45*		20 = perform
 11    46*		21 = read
 11    47*		23 = receive
 11    48*		24 = release
 11    49*		25 = return
 11    50*		26 = search
 11    51*		27 = rewrite
 11    52*		29 = seek
 11    53*		30 = send
 11    54*		31 = set
 11    55*		33 = stop
 11    56*		34 = string
 11    57*		35 = suspend
 11    58*		36 = terminate
 11    59*		37 = unstring
 11    60*		38 = write
 11    61*		39 = use
 11    62*		40 = compute
 11    63*		41 = disable
 11    64*		42 = display
 11    65*		43 = enable
 11    66*		45 = generate
 11    67*		46 = hold
 11    68*		48 = process
 11    69*		49 = sort
 11    70*		52 = procedure
 11    71*		53 = declaratives
 11    72*		54 = section name
 11    73*		55 = paragraph name
 11    74*		98 = end
 11    75*e,h,i,j		The significance of these fields differs with each
 11    76*		statement.  These fields are normally used as counters.
 11    77*a,b,c,d,f,g,k	The significance of these fields differs with each
 11    78*		statement.  These fields are normally used as indicators.
 11    79**/
 11    80 
 11    81 /* END INCLUDE FILE ... cobol_type19.incl.pl1 */
 11    82 
      368 
      369 
      370      end cobol_return_gen;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    04/18/00  1143.1  cobol_return_gen.pl1              >udd>sm>ds>w>ml>cobol_return_gen.pl1
361          1    11/11/82  1812.7  cobol_in_token.incl.pl1           >ldd>incl>cobol_in_token.incl.pl1
362          2    11/11/82  1812.8  cobol_file_key.incl.pl1           >ldd>incl>cobol_file_key.incl.pl1
363          3    11/11/82  1812.7  cobol_.incl.pl1                   >ldd>incl>cobol_.incl.pl1
364          4    11/11/82  1812.7  cobol_file_table.incl.pl1         >ldd>incl>cobol_file_table.incl.pl1
365          5    03/27/82  0539.8  cobol_type1.incl.pl1              >ldd>incl>cobol_type1.incl.pl1
5-15         6    11/11/82  1812.8  cobol_TYPE1.incl.pl1              >ldd>incl>cobol_TYPE1.incl.pl1
366          7    03/27/82  0539.9  cobol_type9.incl.pl1              >ldd>incl>cobol_type9.incl.pl1
7-17         8    11/11/82  1812.7  cobol_TYPE9.incl.pl1              >ldd>incl>cobol_TYPE9.incl.pl1
367          9    11/11/82  1812.8  cobol_type12.incl.pl1             >ldd>incl>cobol_type12.incl.pl1
9-17        10    03/27/82  0539.6  cobol_TYPE12.incl.pl1             >ldd>incl>cobol_TYPE12.incl.pl1
368         11    03/27/82  0539.8  cobol_type19.incl.pl1             >ldd>incl>cobol_type19.incl.pl1
11-17       12    03/27/82  0539.6  cobol_TYPE19.incl.pl1             >ldd>incl>cobol_TYPE19.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 356 ref 243 243 243 243 246 246 261 276 278 283
                                                                                  286 286 289 289 296 305 305 305 305 307 307 316
                                                                                  316 316 316 318 318 321 321 342 345 345
alpha_type9                     000144 internal static structure                level 1 unaligned dcl 161 set ref 296
alphanum                 21(19)        based           bit(1)                   level 2 packed packed unaligned dcl 7-16 set ref
                                                                                  312*
cobol_$next_tag                 000266 external static fixed bin(17,0)          dcl 3-128 set ref 229 230* 230 240 241 242* 242 258
                                                                                  260* 260 263 264* 264
cobol_$text_wd_off              000264 external static fixed bin(17,0)          dcl 3-90 ref 244 247 290 325
cobol_addr                      000244 constant        entry                    external dcl 208 ref 305 316
cobol_call_op                   000246 constant        entry                    external dcl 208 ref 265
cobol_define_tag                000250 constant        entry                    external dcl 208 ref 248 250 259 327
cobol_emit                      000262 constant        entry                    external dcl 208 ref 243 246 289 307 318 321
cobol_io_util$bin_to_dec        000240 constant        entry                    external dcl 208 ref 274
cobol_make_merge_file           000260 constant        entry                    external dcl 208 ref 336
cobol_make_tagref               000256 constant        entry                    external dcl 208 ref 244 247 290 325
cobol_move_gen                  000242 constant        entry                    external dcl 208 ref 286
cobol_read_ft                   000254 constant        entry                    external dcl 208 ref 269
cobol_read_gen                  000236 constant        entry                    external dcl 208 ref 345
cobol_read_rand                 000234 constant        entry                    external dcl 208 ref 275
cobol_reg_manager$after_op      000252 constant        entry                    external dcl 208 ref 266
cra_offset               40            based           fixed bin(24,0)          level 2 dcl 4-25 ref 295
cra_seg                  37            based           fixed bin(17,0)          level 2 dcl 4-25 ref 294
data_name                              based           structure                level 1 unaligned dcl 7-16
def_tag                         000130 automatic       fixed bin(17,0)          dcl 191 set ref 263* 290* 327*
desc                     12            based           char(40)                 level 2 packed packed unaligned dcl 2-17 ref 276
dn_ptr                          000122 automatic       pointer                  dcl 191 set ref 296* 303
e                         5            based           fixed bin(17,0)          level 2 dcl 11-16 set ref 285*
end_stmt                               based           structure                level 1 unaligned dcl 11-16
eos_buff                        000104 automatic       pointer                  array dcl 146 set ref 261
eos_ptr                         000132 automatic       pointer                  dcl 11-13 set ref 225* 227 227 234 261* 284 285
exit_tag                        000120 automatic       fixed bin(17,0)          dcl 191 set ref 241* 247* 250*
f                        11(07)        based           bit(2)                   level 2 packed packed unaligned dcl 11-16 ref 227
                                                                                  227 234
fd_token                               based           structure                level 1 unaligned dcl 9-16
file_key                               based           structure                level 1 unaligned dcl 2-17
file_key_desc                          based           char(40)                 packed unaligned dcl 144 set ref 276*
file_key_info            13     000144 internal static structure                level 2 in structure "alpha_type9" unaligned dcl 161
                                                                                  in procedure "cobol_return_gen"
file_key_info            13     000200 internal static structure                level 2 in structure "num_type9" unaligned dcl 174
                                                                                  in procedure "cobol_return_gen"
file_key_info            13     000110 internal static structure                level 2 in structure "fkey_type9" unaligned dcl 148
                                                                                  in procedure "cobol_return_gen" set ref 276
file_no                  12            based           fixed bin(17,0)          level 2 dcl 9-16 set ref 269*
file_table                             based           structure                level 1 unaligned dcl 4-25
fkey_ptr                        000102 automatic       pointer                  dcl 145 set ref 275* 276
fkey_type9                      000110 internal static structure                level 1 unaligned dcl 148 set ref 283
ft_ptr                          000124 automatic       pointer                  dcl 191 set ref 269* 272 275 293 294 295 300 314
in_token                               based           structure                level 1 dcl 1-9
in_token_ptr                           parameter       pointer                  dcl 1-7 ref 26 225 225 262 308 310 311 312 336 338
                                                                                  339
inst_seq1                       000044 internal static bit(18)                  initial array packed unaligned dcl 99 set ref 289
                                                                                  289
instr                           000041 internal static bit(36)                  initial array packed unaligned dcl 93 set ref 299*
                                                                                  300* 301* 305 305 307 307 313* 314* 315* 316 316
                                                                                  317* 318 318
max_cra_size             41            based           fixed bin(24,0)          level 2 dcl 4-25 ref 293 300 314
merge_check_inst                000050 internal static bit(18)                  initial array packed unaligned dcl 108 set ref 243
                                                                                  243
mlr_reg_to_reg                  000100 automatic       bit(36)                  initial packed unaligned dcl 91 set ref 91* 299 313
mlr_struct                      000022 internal static structure                level 1 unaligned dcl 76 set ref 305 305 316 316
mpout                           000076 internal static structure                level 1 unaligned dcl 138 set ref 286 286
n                               000010 internal static fixed bin(17,0)          initial level 2 in structure "read_in_token" dcl 69
                                                                                  in procedure "cobol_return_gen" set ref 341* 344*
n                                      based           fixed bin(17,0)          level 2 in structure "in_token" dcl 1-9 in procedure
                                                                                  "cobol_return_gen" ref 225 308 339
name_ptr                        000126 automatic       pointer                  dcl 191 set ref 262* 269
null                                                   builtin function         dcl 356 ref 244 244 246 246 247 247 277 289 289 290
                                                                                  290 305 305 307 307 316 316 318 318 321 321 325
                                                                                  325
num_type9                       000200 internal static structure                level 1 unaligned dcl 174 set ref 278
numeric                  21(17)        based           bit(1)                   level 2 packed packed unaligned dcl 7-16 set ref
                                                                                  311*
off                      24     000144 internal static fixed bin(17,0)          level 3 in structure "alpha_type9" dcl 161
                                                                                  in procedure "cobol_return_gen" set ref 295*
off                      24     000200 internal static fixed bin(17,0)          level 3 in structure "num_type9" dcl 174
                                                                                  in procedure "cobol_return_gen" set ref 282*
operand2                 12     000022 internal static structure                level 2 unaligned dcl 76
passed_tag                             parameter       fixed bin(17,0)          dcl 191 set ref 26 229* 325* 345*
places_left              17     000200 internal static fixed bin(17,0)          level 3 dcl 174 set ref 280*
pt1                       2     000076 internal static pointer                  level 2 dcl 138 set ref 277*
pt2                       4     000076 internal static pointer                  level 2 in structure "mpout" dcl 138 in procedure
                                                                                  "cobol_return_gen" set ref 278*
pt2                       4     000010 internal static pointer                  level 2 in structure "read_in_token" dcl 69
                                                                                  in procedure "cobol_return_gen" set ref 337*
pt3                       6     000076 internal static pointer                  level 2 in structure "mpout" dcl 138 in procedure
                                                                                  "cobol_return_gen" set ref 283*
pt3                       6     000010 internal static pointer                  level 2 in structure "read_in_token" dcl 69
                                                                                  in procedure "cobol_return_gen" set ref 338*
pt4                      10     000076 internal static pointer                  level 2 in structure "mpout" dcl 138 in procedure
                                                                                  "cobol_return_gen" set ref 284*
pt4                      10     000010 internal static pointer                  level 2 in structure "read_in_token" dcl 69
                                                                                  in procedure "cobol_return_gen" set ref 342*
read_in_token                   000010 internal static structure                level 1 unaligned dcl 69 set ref 345 345
rec_do                   33(33)        based           bit(1)                   level 2 packed packed unaligned dcl 4-25 ref 272
rec_do_info              25            based           char(5)                  level 2 packed packed unaligned dcl 4-25 set ref
                                                                                  275*
rel_merge_check                 000052 internal static bit(5)                   initial array dcl 112 set ref 243 243
retry_tag                       000116 automatic       fixed bin(17,0)          dcl 191 set ref 258* 259* 265*
seg                      23     000200 internal static fixed bin(17,0)          initial level 3 in structure "num_type9" dcl 174
                                                                                  in procedure "cobol_return_gen" set ref 281*
seg                      23     000144 internal static fixed bin(17,0)          initial level 3 in structure "alpha_type9" dcl 161
                                                                                  in procedure "cobol_return_gen" set ref 294*
size                     16     000200 internal static fixed bin(17,0)          initial level 3 in structure "num_type9" dcl 174
                                                                                  in procedure "cobol_return_gen" set ref 279*
size                     16     000144 internal static fixed bin(17,0)          initial level 3 in structure "alpha_type9" dcl 161
                                                                                  in procedure "cobol_return_gen" set ref 293*
sort_tag                        000117 automatic       fixed bin(17,0)          dcl 191 set ref 240* 244* 248*
substr                                                 builtin function         dcl 356 set ref 300 314 317*
temp_file_ptr                   000056 internal static pointer                  dcl 114 set ref 336*
temp_type12_ptr                 000060 internal static pointer                  dcl 114 set ref 336* 337
temp_type9_ptr                  000062 internal static pointer                  dcl 114 set ref 336*
token_ptr                 2            based           pointer                  array level 2 in structure "in_token" dcl 1-9
                                                                                  in procedure "cobol_return_gen" set ref 225 262
                                                                                  310 311 312 336* 338
token_ptr                12     000022 internal static pointer                  level 3 in structure "mlr_struct" dcl 76
                                                                                  in procedure "cobol_return_gen" set ref 303* 310*
tra_inst                        000047 internal static bit(18)                  initial array packed unaligned dcl 105 set ref 246
                                                                                  246 321 321
type19_read_into                000064 internal static structure                level 1 unaligned dcl 131 set ref 342
unspec                                                 builtin function         dcl 356 ref 300 314

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
addrel                                                 builtin function         dcl 356
allo1_max                              defined         fixed bin(17,0)          dcl 3-171
allo1_ptr                              defined         pointer                  dcl 3-67
alter_flag                             defined         fixed bin(17,0)          dcl 3-135
alter_index                            defined         fixed bin(17,0)          dcl 3-153
alter_list_ptr                         defined         pointer                  dcl 3-39
binary                                                 builtin function         dcl 356
cd_cnt                                 defined         fixed bin(17,0)          dcl 3-197
cobol_$allo1_max                       external static fixed bin(17,0)          dcl 3-170
cobol_$allo1_ptr                       external static pointer                  dcl 3-66
cobol_$alter_flag                      external static fixed bin(17,0)          dcl 3-134
cobol_$alter_index                     external static fixed bin(17,0)          dcl 3-152
cobol_$alter_list_ptr                  external static pointer                  dcl 3-38
cobol_$cd_cnt                          external static fixed bin(17,0)          dcl 3-196
cobol_$cobol_data_wd_off               external static fixed bin(17,0)          dcl 3-118
cobol_$compile_count                   external static fixed bin(17,0)          dcl 3-142
cobol_$coms_charcnt                    external static fixed bin(17,0)          dcl 3-188
cobol_$coms_wdoff                      external static fixed bin(17,0)          dcl 3-202
cobol_$con_end_ptr                     external static pointer                  dcl 3-10
cobol_$con_wd_off                      external static fixed bin(17,0)          dcl 3-92
cobol_$cons_charcnt                    external static fixed bin(17,0)          dcl 3-192
cobol_$constant_offset                 external static fixed bin(17,0)          dcl 3-156
cobol_$data_init_flag                  external static fixed bin(17,0)          dcl 3-130
cobol_$date_compiled_sw                external static fixed bin(17,0)          dcl 3-180
cobol_$debug_enable                    external static fixed bin(17,0)          dcl 3-174
cobol_$def_base_ptr                    external static pointer                  dcl 3-12
cobol_$def_max                         external static fixed bin(17,0)          dcl 3-96
cobol_$def_wd_off                      external static fixed bin(17,0)          dcl 3-94
cobol_$diag_ptr                        external static pointer                  dcl 3-70
cobol_$eln_max                         external static fixed bin(17,0)          dcl 3-172
cobol_$eln_ptr                         external static pointer                  dcl 3-68
cobol_$fixup_max                       external static fixed bin(17,0)          dcl 3-164
cobol_$fixup_ptr                       external static pointer                  dcl 3-30
cobol_$fs_charcnt                      external static fixed bin(17,0)          dcl 3-184
cobol_$fs_wdoff                        external static fixed bin(17,0)          dcl 3-198
cobol_$include_cnt                     external static fixed bin(17,0)          dcl 3-182
cobol_$include_info_ptr                external static pointer                  dcl 3-86
cobol_$init_stack_off                  external static fixed bin(17,0)          dcl 3-124
cobol_$initval_base_ptr                external static pointer                  dcl 3-32
cobol_$initval_file_ptr                external static pointer                  dcl 3-34
cobol_$initval_flag                    external static fixed bin(17,0)          dcl 3-178
cobol_$link_base_ptr                   external static pointer                  dcl 3-14
cobol_$link_max                        external static fixed bin(17,0)          dcl 3-100
cobol_$link_wd_off                     external static fixed bin(17,0)          dcl 3-98
cobol_$list_off                        external static fixed bin(17,0)          dcl 3-154
cobol_$list_ptr                        external static pointer                  dcl 3-64
cobol_$ls_charcnt                      external static fixed bin(17,0)          dcl 3-190
cobol_$main_pcs_ptr                    external static pointer                  dcl 3-84
cobol_$map_data_max                    external static fixed bin(17,0)          dcl 3-162
cobol_$map_data_ptr                    external static pointer                  dcl 3-54
cobol_$max_stack_off                   external static fixed bin(17,0)          dcl 3-122
cobol_$minpral5_ptr                    external static pointer                  dcl 3-50
cobol_$misc_base_ptr                   external static pointer                  dcl 3-60
cobol_$misc_end_ptr                    external static pointer                  dcl 3-62
cobol_$misc_max                        external static fixed bin(17,0)          dcl 3-158
cobol_$non_source_offset               external static fixed bin(17,0)          dcl 3-176
cobol_$ntbuf_ptr                       external static pointer                  dcl 3-82
cobol_$obj_seg_name                    external static char(32)                 dcl 3-208
cobol_$op_con_ptr                      external static pointer                  dcl 3-80
cobol_$para_eop_flag                   external static fixed bin(17,0)          dcl 3-138
cobol_$pd_map_index                    external static fixed bin(17,0)          dcl 3-116
cobol_$pd_map_max                      external static fixed bin(17,0)          dcl 3-160
cobol_$pd_map_ptr                      external static pointer                  dcl 3-28
cobol_$pd_map_sw                       external static fixed bin(17,0)          dcl 3-126
cobol_$perform_list_ptr                external static pointer                  dcl 3-36
cobol_$perform_para_index              external static fixed bin(17,0)          dcl 3-148
cobol_$perform_sect_index              external static fixed bin(17,0)          dcl 3-150
cobol_$priority_no                     external static fixed bin(17,0)          dcl 3-140
cobol_$ptr_assumption_ind              external static fixed bin(17,0)          dcl 3-144
cobol_$ptr_status_ptr                  external static pointer                  dcl 3-56
cobol_$reg_assumption_ind              external static fixed bin(17,0)          dcl 3-146
cobol_$reg_status_ptr                  external static pointer                  dcl 3-58
cobol_$reloc_def_base_ptr              external static pointer                  dcl 3-20
cobol_$reloc_def_max                   external static fixed bin(24,0)          dcl 3-108
cobol_$reloc_link_base_ptr             external static pointer                  dcl 3-22
cobol_$reloc_link_max                  external static fixed bin(24,0)          dcl 3-110
cobol_$reloc_sym_base_ptr              external static pointer                  dcl 3-24
cobol_$reloc_sym_max                   external static fixed bin(24,0)          dcl 3-112
cobol_$reloc_text_base_ptr             external static pointer                  dcl 3-18
cobol_$reloc_text_max                  external static fixed bin(24,0)          dcl 3-106
cobol_$reloc_work_base_ptr             external static pointer                  dcl 3-26
cobol_$reloc_work_max                  external static fixed bin(24,0)          dcl 3-114
cobol_$reswd_ptr                       external static pointer                  dcl 3-78
cobol_$same_sort_merge_proc            external static bit(1)                   dcl 3-214
cobol_$scratch_dir                     external static char(168)                dcl 3-206
cobol_$sect_eop_flag                   external static fixed bin(17,0)          dcl 3-136
cobol_$seg_init_flag                   external static fixed bin(17,0)          dcl 3-132
cobol_$seg_init_list_ptr               external static pointer                  dcl 3-40
cobol_$stack_off                       external static fixed bin(17,0)          dcl 3-120
cobol_$statement_info_ptr              external static pointer                  dcl 3-76
cobol_$sym_base_ptr                    external static pointer                  dcl 3-16
cobol_$sym_max                         external static fixed bin(17,0)          dcl 3-104
cobol_$sym_wd_off                      external static fixed bin(17,0)          dcl 3-102
cobol_$tag_table_max                   external static fixed bin(17,0)          dcl 3-166
cobol_$tag_table_ptr                   external static pointer                  dcl 3-52
cobol_$temp_token_area_ptr             external static pointer                  dcl 3-42
cobol_$temp_token_max                  external static fixed bin(17,0)          dcl 3-168
cobol_$temp_token_ptr                  external static pointer                  dcl 3-44
cobol_$text_base_ptr                   external static pointer                  dcl 3-8
cobol_$token_block1_ptr                external static pointer                  dcl 3-46
cobol_$token_block2_ptr                external static pointer                  dcl 3-48
cobol_$value_cnt                       external static fixed bin(17,0)          dcl 3-194
cobol_$ws_charcnt                      external static fixed bin(17,0)          dcl 3-186
cobol_$ws_wdoff                        external static fixed bin(17,0)          dcl 3-200
cobol_$xref_bypass                     external static bit(1)                   dcl 3-212
cobol_$xref_chain_ptr                  external static pointer                  dcl 3-74
cobol_$xref_token_ptr                  external static pointer                  dcl 3-72
cobol_data_wd_off                      defined         fixed bin(17,0)          dcl 3-119
cobol_merge_return_gen          000000 constant        entry                    external dcl 208
compile_count                          defined         fixed bin(17,0)          dcl 3-143
coms_charcnt                           defined         fixed bin(17,0)          dcl 3-189
coms_wdoff                             defined         fixed bin(17,0)          dcl 3-203
con_end_ptr                            defined         pointer                  dcl 3-11
con_wd_off                             defined         fixed bin(17,0)          dcl 3-93
cons_charcnt                           defined         fixed bin(17,0)          dcl 3-193
constant_offset                        defined         fixed bin(17,0)          dcl 3-157
data_init_flag                         defined         fixed bin(17,0)          dcl 3-131
date_compiled_sw                       defined         fixed bin(17,0)          dcl 3-181
debug_enable                           defined         fixed bin(17,0)          dcl 3-175
def_base_ptr                           defined         pointer                  dcl 3-13
def_max                                defined         fixed bin(17,0)          dcl 3-97
def_wd_off                             defined         fixed bin(17,0)          dcl 3-95
diag_ptr                               defined         pointer                  dcl 3-71
eln_max                                defined         fixed bin(17,0)          dcl 3-173
eln_ptr                                defined         pointer                  dcl 3-69
fixed                                                  builtin function         dcl 356
fixup_max                              defined         fixed bin(17,0)          dcl 3-165
fixup_ptr                              defined         pointer                  dcl 3-31
fs_charcnt                             defined         fixed bin(17,0)          dcl 3-185
fs_wdoff                               defined         fixed bin(17,0)          dcl 3-199
hold_addr                              based           bit(18)                  packed unaligned dcl 191
include_cnt                            defined         fixed bin(17,0)          dcl 3-183
include_info_ptr                       defined         pointer                  dcl 3-87
index                                                  builtin function         dcl 356
init_stack_off                         defined         fixed bin(17,0)          dcl 3-125
initval_base_ptr                       defined         pointer                  dcl 3-33
initval_file_ptr                       defined         pointer                  dcl 3-35
initval_flag                           defined         fixed bin(17,0)          dcl 3-179
length                                                 builtin function         dcl 356
link_base_ptr                          defined         pointer                  dcl 3-15
link_max                               defined         fixed bin(17,0)          dcl 3-101
link_wd_off                            defined         fixed bin(17,0)          dcl 3-99
linkoff                                automatic       fixed bin(17,0)          dcl 191
list_off                               defined         fixed bin(17,0)          dcl 3-155
list_ptr                               defined         pointer                  dcl 3-65
ls_charcnt                             defined         fixed bin(17,0)          dcl 3-191
main_pcs_ptr                           defined         pointer                  dcl 3-85
map_data_max                           defined         fixed bin(17,0)          dcl 3-163
map_data_ptr                           defined         pointer                  dcl 3-55
max_stack_off                          defined         fixed bin(17,0)          dcl 3-123
merge_bit                              internal static bit(1)                   initial packed unaligned dcl 191
minpral5_ptr                           defined         pointer                  dcl 3-51
misc_base_ptr                          defined         pointer                  dcl 3-61
misc_end_ptr                           defined         pointer                  dcl 3-63
misc_max                               defined         fixed bin(17,0)          dcl 3-159
mod                                                    builtin function         dcl 356
next_tag                               defined         fixed bin(17,0)          dcl 3-129
non_source_offset                      defined         fixed bin(17,0)          dcl 3-177
ntbuf_ptr                              defined         pointer                  dcl 3-83
obj_seg_name                           defined         char(32)                 dcl 3-209
op_con_ptr                             defined         pointer                  dcl 3-81
para_eop_flag                          defined         fixed bin(17,0)          dcl 3-139
pd_map_index                           defined         fixed bin(17,0)          dcl 3-117
pd_map_max                             defined         fixed bin(17,0)          dcl 3-161
pd_map_ptr                             defined         pointer                  dcl 3-29
pd_map_sw                              defined         fixed bin(17,0)          dcl 3-127
perform_list_ptr                       defined         pointer                  dcl 3-37
perform_para_index                     defined         fixed bin(17,0)          dcl 3-149
perform_sect_index                     defined         fixed bin(17,0)          dcl 3-151
priority_no                            defined         fixed bin(17,0)          dcl 3-141
ptr_assumption_ind                     defined         fixed bin(17,0)          dcl 3-145
ptr_status_ptr                         defined         pointer                  dcl 3-57
reg_assumption_ind                     defined         fixed bin(17,0)          dcl 3-147
reg_status_ptr                         defined         pointer                  dcl 3-59
rel                                                    builtin function         dcl 356
rel_instr                              internal static bit(5)                   initial array dcl 96
reloc_def_base_ptr                     defined         pointer                  dcl 3-21
reloc_def_max                          defined         fixed bin(24,0)          dcl 3-109
reloc_link_base_ptr                    defined         pointer                  dcl 3-23
reloc_link_max                         defined         fixed bin(24,0)          dcl 3-111
reloc_sym_base_ptr                     defined         pointer                  dcl 3-25
reloc_sym_max                          defined         fixed bin(24,0)          dcl 3-113
reloc_text_base_ptr                    defined         pointer                  dcl 3-19
reloc_text_max                         defined         fixed bin(24,0)          dcl 3-107
reloc_work_base_ptr                    defined         pointer                  dcl 3-27
reloc_work_max                         defined         fixed bin(24,0)          dcl 3-115
reserved_word                          based           structure                level 1 unaligned dcl 5-14
reswd_ptr                              defined         pointer                  dcl 3-79
return_error_code                      internal static fixed bin(17,0)          initial dcl 191
rw_ptr                                 automatic       pointer                  dcl 5-11
same_sort_merge_proc                   defined         bit(1)                   dcl 3-215
scratch_dir                            defined         char(168)                dcl 3-207
sect_eop_flag                          defined         fixed bin(17,0)          dcl 3-137
seg_init_flag                          defined         fixed bin(17,0)          dcl 3-133
seg_init_list_ptr                      defined         pointer                  dcl 3-41
stack_off                              defined         fixed bin(17,0)          dcl 3-121
stackoff                               internal static fixed bin(17,0)          initial dcl 191
statement_info_ptr                     defined         pointer                  dcl 3-77
string                                                 builtin function         dcl 356
sym_base_ptr                           defined         pointer                  dcl 3-17
sym_max                                defined         fixed bin(17,0)          dcl 3-105
sym_wd_off                             defined         fixed bin(17,0)          dcl 3-103
tag_table_max                          defined         fixed bin(17,0)          dcl 3-167
tag_table_ptr                          defined         pointer                  dcl 3-53
temp_token_area_ptr                    defined         pointer                  dcl 3-43
temp_token_max                         defined         fixed bin(17,0)          dcl 3-169
temp_token_ptr                         defined         pointer                  dcl 3-45
temp_type12                            internal static char(60)                 packed unaligned dcl 114
temp_type9                             internal static structure                level 1 unaligned dcl 118
text_base_ptr                          defined         pointer                  dcl 3-9
text_wd_off                            defined         fixed bin(17,0)          dcl 3-91
token_block1_ptr                       defined         pointer                  dcl 3-47
token_block2_ptr                       defined         pointer                  dcl 3-49
value_cnt                              defined         fixed bin(17,0)          dcl 3-195
ws_charcnt                             defined         fixed bin(17,0)          dcl 3-187
ws_wdoff                               defined         fixed bin(17,0)          dcl 3-201
xref_bypass                            defined         bit(1)                   dcl 3-213
xref_chain_ptr                         defined         pointer                  dcl 3-75
xref_token_ptr                         defined         pointer                  dcl 3-73

NAMES DECLARED BY EXPLICIT CONTEXT.
cobol_return_gen                000012 constant        entry                    external dcl 26
merge                           000671 constant        entry                    internal dcl 334 ref 236 245
sort                            000201 constant        entry                    internal dcl 255 ref 231 249
start                           000021 constant        label                    dcl 225

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1152        1442     751        1162
Length      2102     751       270         423     201         224

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cobol_return_gen                    166 external procedure  is an external procedure.  
sort                                    internal procedure  shares stack frame of external procedure cobol_return_gen.  
merge                                   internal procedure  shares stack frame of external procedure cobol_return_gen.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 read_in_token               cobol_return_gen
000022 mlr_struct                  cobol_return_gen
000041 instr                       cobol_return_gen
000044 inst_seq1                   cobol_return_gen
000047 tra_inst                    cobol_return_gen
000050 merge_check_inst            cobol_return_gen
000052 rel_merge_check             cobol_return_gen
000056 temp_file_ptr               cobol_return_gen
000060 temp_type12_ptr             cobol_return_gen
000062 temp_type9_ptr              cobol_return_gen
000064 type19_read_into            cobol_return_gen
000076 mpout                       cobol_return_gen
000110 fkey_type9                  cobol_return_gen
000144 alpha_type9                 cobol_return_gen
000200 num_type9                   cobol_return_gen

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cobol_return_gen         000100 mlr_reg_to_reg              cobol_return_gen
                         000102 fkey_ptr                    cobol_return_gen
                         000104 eos_buff                    cobol_return_gen
                         000116 retry_tag                   cobol_return_gen
                         000117 sort_tag                    cobol_return_gen
                         000120 exit_tag                    cobol_return_gen
                         000122 dn_ptr                      cobol_return_gen
                         000124 ft_ptr                      cobol_return_gen
                         000126 name_ptr                    cobol_return_gen
                         000130 def_tag                     cobol_return_gen
                         000132 eos_ptr                     cobol_return_gen

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cobol_addr                    cobol_call_op                 cobol_define_tag              cobol_emit
cobol_io_util$bin_to_dec      cobol_make_merge_file         cobol_make_tagref             cobol_move_gen
cobol_read_ft                 cobol_read_gen                cobol_read_rand               cobol_reg_manager$after_op

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
cobol_$next_tag               cobol_$text_wd_off




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     26 000006        91 000017       225 000021       227 000030       229 000040       230 000042       231 000043
    232 000044       234 000045       236 000047       237 000050       240 000051       241 000053       242 000055
    243 000057       244 000077       245 000117       246 000120       247 000141       248 000161       249 000170
    250 000171       251 000200       255 000201       258 000202       259 000205       260 000213       261 000215
    262 000217       263 000224       264 000226       265 000227       266 000241       269 000252       272 000264
    274 000270       275 000324       276 000342       277 000347       278 000351       279 000353       280 000355
    281 000356       282 000360       283 000362       284 000364       285 000366       286 000370       289 000400
    290 000421       293 000441       294 000445       295 000447       296 000451       299 000453       300 000455
    301 000461       303 000462       305 000463       307 000503       308 000524       310 000531       311 000535
    312 000542       313 000544       314 000546       315 000553       316 000554       317 000574       318 000577
    321 000617       325 000640       327 000661       330 000670       334 000671       336 000672       337 000712
    338 000715       339 000722       341 000726       342 000730       343 000732       344 000733       345 000735
    346 000747


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
