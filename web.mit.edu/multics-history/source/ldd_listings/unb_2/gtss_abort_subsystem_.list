	COMPILATION LISTING OF SEGMENT gtss_abort_subsystem_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/10/84  1151.3 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   *                                                         *
        4*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        5*   *                                                         *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 /** ************************************************************
       10*   *						   *
       11*   * Copyright (c) 1979 by Honeywell Information Systems, Inc. *
       12*   *						   *
       13*   ************************************************************* */
       14 gtss_abort_subsystem_: proc (mcpp, caller_name, gcos_error_code);
       15 
       16 /** Abort call to subsystem and not-implemented.
       17*
       18*   Authors: Robert J. Grimes	Created
       19*   -	  Albert N. Kepner	  1978
       20*   -	  Robert M. May
       21*   -	  David B. Ward
       22*   Changed: Dave Ward	03/27/79 null mcp, abandon.
       23*   Changed: Al Dupuis	06/12/79 to allow for transferring to special
       24*			$*$lbl ..abort when doing command file processing.
       25*   Changed: Al Dupuis         12/01/79 changed ios_ calls to com_err_, set error
       26*                              code (lcfst.start_term) for cout subsystem.
       27*   Changed: Ron Barstad       84-02-28  Changed size of error_structure to reflect gtss_pnterr
       28*   ** /
       29*
       30*/*
       31*
       32*
       33*
       34*
       35*
       36*
       37*   This routine is called by derail routines  which  detect  errors.
       38*   Under  control  of user accessible bits in spa.lwrap it prints an
       39*   error message and/or prepares for execution of the user's  wrapup
       40*   code.    If   the   wrapup   code   is   not   to   be  executed,
       41*   gtss_abort_subsystem_ does a nonlocal goto to  gtss_ext_$drl_rtrn
       42*   (gtss_ext_$stack_level_)  thus  aborting  the  subsystem.  If the
       43*   wrapup code is to  be  executed,  gtss_abort_subsystem_  modifies
       44*   scu.ilc  in  the  saved machine conditions to point to the wrapup
       45*   code and then returns.  When gtss_abort_subsystem_  returns,  its
       46*   caller  should  also  return  so  that  the  wrapup  code  can be
       47*   executed.
       48*
       49*
       50*   Usage:
       51*   dcl gtss_abort_subsystem_ entry options (variable);
       52*   call                                        gtss_abort_subsystem_
       53*   (mcp,caller_name,gcos_error_code,ioa_control_string,arg1,...argn);
       54*   Where:
       55*   1. mcp    (input)             (ptr)
       56*   is  a  pointer  to  the  machine conditions saved when the derail
       57*   fault occurred.
       58*   2. caller_name (input)        (char(*))
       59*   is  the   name   of   the   DRL   routine   which    is   calling
       60*   gtss_abort_subsystem_.
       61*   3. gcos_error_code (input)    (fixed bin(18))
       62*   is  a  gcos  timesharing  error  code as docutented for .LABRT in
       63*   DD17C Rev 0 pp.3-3.1,3.2.
       64*   (4. ioa_control_string         (input)
       65*   is an optional control string for an error message.  If no  error
       66*   message is desired only 3 parameters should be passed.
       67*   5. argi   (input)
       68*   optional arguments for use with the ioa_ control string.
       69**/
       70 dcl  addr                     builtin;
       71 dcl  arg_count                fixed bin  /* total number of args passed. */;
       72 dcl  arg_list_ptr             ptr init(null());
       73 dcl  caller_name              char (*) parm;
       74 dcl  com_err_$suppress_name   entry options (variable);
       75 dcl  cu_$arg_count            entry (fixed bin);
       76 dcl  cu_$arg_list_ptr         entry (ptr);
       77 dcl  drl_abort_code           fixed bin (18);
       78 dcl  error_structure          (69) char (50) based (addr (gtss_pnterr));
       79 dcl  gcos_error_code          fixed bin (18) parm;
       80 dcl  gseg                     ptr init(null());
       81 dcl  gtss_fail                condition;
       82 dcl  i                        fixed bin (24);
       83 dcl  instruction_counter      bit (18)  /* transfer address for user's wrapup routine */;
       84 dcl  ioa_                     ext entry options (variable);
       85 dcl  ioa_$general_rs          entry (ptr, fixed bin, fixed bin, char (*), fixed bin, bit (1) aligned, bit (1) aligned);
       86 dcl  lower_limit              bit (18);
       87 dcl  mcpp                     ptr parm;
       88 dcl  null                     builtin;
       89 dcl  rtn_string               char (256);
       90 dcl  rtn_string_len           fixed bin;
       91 dcl  upper_limit              bit (18);
       92 dcl  current_level		fixed bin (24);
       93 
       94 /* Make sure we have required arguments */
       95 	call cu_$arg_count (arg_count);
       96 	if arg_count < 3 then do;
       97 	     call com_err_ (0, "gtss_abort_subsystem_",
       98 		"Only ^i aruments supplied; Minimum 3 required", arg_count);
       99 	     signal condition (gtss_fail);
      100 	end;
      101 
      102 	if gtss_ust.lflg2.b8 then call gtss_CFP_abort_;
      103 	
      104 /* Get machine condition pointer */
      105 	mcp = mcpp;
      106 	if mcp = null () then do;
      107 	     call com_err_$suppress_name (0, "gtss_abort_subsystem_", "Machine conditions not available.");
      108 	     call pr_msg;
      109 	     call gtss_drl_sysret_ (null (), 0);
      110 	     signal cond (gtss_fail);
      111 	end;
      112 	scup = addr (mc.scu);
      113 
      114 /* Get pointer to user's segment */
      115 	gseg = gtss_ext_$gtss_slave_area_seg (gtss_ext_$stack_level_);
      116 
      117 /* If in CFP and user error, set cout termination code */
      118 	if ((gtss_ust.lflg2.b8) & (gcos_error_code ^= 0))
      119 	then do;
      120 	     gtss_ust.lcfst.start_term = 6;
      121 	     gtss_ust.lerrm = bit (fixed (gcos_error_code, 36), 36);
      122 	end;
      123 
      124 /* Write abort file only if bit 19 of .LWRAP is off */
      125 	drl_abort_code = 0;
      126 	if ^gtss_spa.lwrap.b19 then do;
      127 	     gtss_spa.lwrap.b19 = "1"b;
      128 	     call gtss_abort_dump_ (drl_abort_code);
      129 	end;
      130 
      131 /* Print error message if WRAPUP is already in progress or
      132*   bit 20 of .LWRAP is off. */
      133 	if gtss_spa.lwrap.b18 | ^gtss_spa.lwrap.b20
      134 	then do;
      135 	     if gcos_error_code = 35			/* we were called by gtss_drl_abort_ */
      136 	     & drl_abort_code ^= 0			/* gtss_abort_dump_ has been called */
      137 	     then call com_err_$suppress_name (0, "gtss_abort_subsystem_", "^/"||
      138 		error_structure (drl_abort_code), fixed (scu.ilc, 18));
      139 	     else call pr_msg;
      140 	end;
      141 
      142 /* Save instruction counter and error code in .LABRT in slave prefix */
      143 	gtss_spa.labrt.b0_17 = bit (fixed (fixed (scu.ilc, 18)+1, 18), 18);
      144 	if gcos_error_code = 35			/* we were called by gtss_drl_abort_ */
      145 	& drl_abort_code ^= 0			/* gtss_abort_dump_ has been called */
      146 	then gtss_spa.labrt.b18_35 = drl_abort_code;
      147 	else gtss_spa.labrt.b18_35 = gcos_error_code;
      148 	gtss_ust.licec = gtss_spa.labrt;
      149 
      150 /* If wrapup is already in progress it will not be paid again */
      151 	if gtss_spa.lwrap.b18 then go to
      152 	     gtss_ext_$drl_rtrn (gtss_ext_$stack_level_);
      153 
      154 /* Mark wrapup in progress */
      155 	gtss_spa.lwrap.b18 = "1"b;
      156 
      157 /* See if the user provided a valid wrapup address. */
      158 	lower_limit = bit (binary (100, 18), 18);
      159 	upper_limit = gtss_ust.lsize.limit;
      160 	instruction_counter = gtss_spa.lwrap.b0_17;
      161 
      162 /* If not, ignore wrapup request. */
      163 	if instruction_counter < lower_limit | instruction_counter >= upper_limit then
      164 	     go to gtss_ext_$drl_rtrn (gtss_ext_$stack_level_);
      165 
      166 /* Prepate to execute user's wrapup routine */
      167 	scu.ilc = instruction_counter;
      168 	return;
      169 
      170 not_imp:	entry (mcpp, drl_type);
      171 dcl  drl_type                 fixed bin parm;
      172 dcl  fixed                    builtin;
      173 	mcp = mcpp;
      174 	scup = addr (mc.scu);
      175 	i = gtss_ust.lxxx.b0_17 - fixed (rel (addr (gtss_ust.lxxx)))
      176 	     +fixed (rel (addr (gtss_ust)));
      177 	call com_err_$suppress_name (0, "gtss_abort_subsystem_",
      178 	"^/Unimplemented drl ^a at ^o from subsystem ""^a""^/"
      179 	     , DRL_NAME (drl_type)
      180 	     , fixed (scu.ilc)
      181 	     , ss_name (gtss_ust.lprgs (i).b0_17)
      182 	     );
      183 	goto gtss_ext_$drl_rtrn (gtss_ext_$stack_level_);
      184 
      185 pr_msg:	proc;
      186 
      187 /* Print callers message. */
      188 	     if arg_count > 3 then do;
      189 		call cu_$arg_list_ptr (arg_list_ptr);
      190 		call ioa_$general_rs (arg_list_ptr, 4, 5, rtn_string, rtn_string_len, "0"b, "0"b);
      191 		if rtn_string_len > 0 then
      192 		     if substr (rtn_string, 1, rtn_string_len) ^= "" then
      193 		     call com_err_$suppress_name (0, "gtss_abort_subsystem_", "^/^a", substr (rtn_string, 1, rtn_string_len));
      194 	     end;
      195 	     return;
      196 	end					/* pr_msg */;
      197 
  1     1 /* BEGIN INCLUDE FILE gtss_spa.incl.pl1 */
  1     2 /*
  1     3*  Created: (Grimes SMP)  04/15/78
  1     4*   Changed	6/22/78	A. Kepner		add labrt
  1     5*   Changed	6/28/78	D. Ward		lwrap defined (lrap)
  1     6*   Changed	10/16/79  Al Dupuis		lsztm was off by two words.
  1     7*   Changed          84-02-27  Ron Barstad         added hex ir bit
  1     8*   */
  1     9 dcl 1 gtss_spa aligned based (gseg),
  1    10       3 fault_vector (0:9) bit(36),
  1    11       3 lhstr char (8) unal,
  1    12       3 lbrk,
  1    13         4 ic	bit(18) unal,
  1    14         4 ir	bit(18) unal,
  1    15         4 tra_addr	bit(18) unal,
  1    16         4 tra_op	bit(18) unal,
  1    17       3 fill1 (0:1) bit(36),
  1    18       3 lsztm,
  1    19         4 ic_ir,
  1    20 	5 IC	bit(18)unal,
  1    21 	5 IR	bit(16)unal,
  1    22 	5 b34	bit(1)unal,
  1    23 	5 b35	bit(1)unal,
  1    24         4 tra	bit(36)unal,
  1    25       3 losti unal,
  1    26         4 ilc	bit(18) unal,
  1    27         4 ir unal,				/* INDICATOR  REGISTERS */
  1    28 	5 zero	bit(1) unal,			/* zero indicator */
  1    29 	5 neg	bit(1) unal,			/* negative indicator */
  1    30 	5 carry	bit(1) unal,			/* carryry indicator */
  1    31 	5 ovfl	bit(1) unal,			/* overflow indicator */
  1    32 	5 eovf	bit(1) unal,			/* eponent overflow */
  1    33 	5 eufl	bit(1) unal,			/* exponent underflow */
  1    34 	5 oflm	bit(1) unal,			/* overflow mask */
  1    35 	5 tro	bit(1) unal,			/* tally runout */
  1    36 	5 par	bit(1) unal,			/* parity error */
  1    37 	5 parm	bit(1) unal,			/* parity mask */
  1    38 	5 bm	bit(1) unal,			/* ^bar mode */
  1    39 	5 tru	bit(1) unal,			/* truncation mode */
  1    40 	5 mif	bit(1) unal,			/* multi-word instruction mode */
  1    41 	5 abs	bit(1) unal,			/* absolute mode */
  1    42           5 hex     bit(1) unal,                            /* hexadecimalexponent mode */
  1    43 	5 pad	bit(3) unal,
  1    44       3 lnam	bit(36),			/* Library name (bcd). */
  1    45       3 labrt,
  1    46         4 b0_17	bit(18) unal,
  1    47         4 b18_35 fixed bin (17) unal,
  1    48       3 fill2	bit(36),
  1    49       3 lfig	bit(36),
  1    50       3 lwrap,
  1    51 	5 b0_17	bit(1) unal,
  1    52 	5 b18	bit(1) unal,
  1    53 	5 b19	bit(1) unal,
  1    54 	5 b20	bit(1) unal,
  1    55 	5 b21	bit(1) unal,
  1    56 	5 b22	bit(1) unal,
  1    57 	5 b23	bit(1) unal,
  1    58 	5 b24	bit(1) unal,
  1    59 	5 b25	bit(1) unal,
  1    60 	5 b26	bit(1) unal,
  1    61 	5 b27	bit(1) unal,
  1    62 	5 b28	bit(1) unal,
  1    63 	5 b29	bit(1) unal,
  1    64 	5 b30	bit(1) unal,
  1    65 	5 b31	bit(1) unal,
  1    66 	5 b32	bit(1) unal,
  1    67 	5 b33	bit(1) unal,
  1    68 	5 b34	bit(1) unal,
  1    69 	5 b35	bit(1) unal,
  1    70       3 lsid	bit(36),
  1    71       3 lftst	bit(36),
  1    72       3 lpcal (0:3) bit(36),
  1    73       3 lpcnt fixed bin (35) unal,
  1    74       3 lhole,
  1    75         4 high fixed bin (17) unal,
  1    76         4 total fixed bin (17) unal,
  1    77       3 lostr unal,
  1    78         4 regs unal,				/* registers */
  1    79 	5 x (0:7) bit(18) unal,			/* index registers */
  1    80 	5 a	bit(36),			/* accumulator */
  1    81 	5 q	bit(36),			/* q-register */
  1    82 	5 e	bit(8) unal,			/* exponent */
  1    83 	5 pad1	bit(28) unal,
  1    84 	5 t	bit(27) unal,			/* timer register */
  1    85 	5 pad2	bit(6) unal,
  1    86 	5 ralr	bit(3) unal,			/* ring alarm register */
  1    87       3 leisa	(0:7) bit(36),
  1    88       3 leisp	(0:7) bit(36),
  1    89       3 fill3	(0:35) bit(36);
  1    90 
  1    91 /*   END INCLUDE FILE gtss_spa.incl.pl1 */
      198 
      199 
  2     1 /* BEGIN INCLUDE FILE gtss_ext_.incl.pl1 */
  2     2 /*
  2     3*  Created: (Wardd Multics)  05/20/78 1307.6 mst Sat 
  2     4*  Modified: Ward            1981     add suspended_process dcl
  2     5*  Modified: Ron Barstad  83-07-21  Fixed level number on mcfc to 3
  2     6*  Modified: Ron Barstad  83-07-25  Fixed derail range in statistics to 4js3 number
  2     7**/
  2     8 dcl  gtss_ext_$aem                   fixed bin static ext	/* >0 Print "additional" error information. */;
  2     9 dcl  gtss_ext_$bad_drl_rtrn          static ext label	/* Default for drl_rtrn. */;
  2    10 dcl  gtss_ext_$db                    (72)bit(1)unal static ext;
  2    11 dcl  gtss_ext_$deferred_catalogs_ptr ptr ext;
  2    12 dcl  gtss_ext_$dispose_of_drl        static ext label	/* quit handlers for some derails use this label to abort */;
  2    13 dcl  gtss_ext_$drl_rtrn              (4)static ext label	/* where to return at subsystem end */;
  2    14 dcl  gtss_ext_$drm_path              char(168)static ext	/* gtss_expand_pathname_stores drm_path */;
  2    15 dcl  gtss_ext_$drun_jid              char (5) static ext	/* valid only for DRUN executing under absentee */;
  2    16 dcl  gtss_ext_$event_channel         fixed bin (71) static ext	/* used for DABT signals */;
  2    17 dcl  gtss_ext_$finished              static ext label	/* Return to gtss for normal conclusion. */;
  2    18 dcl  gtss_ext_$gdb_name              char(8)ext	/* Name H* module to debug. */;
  2    19 dcl  gtss_ext_$get_line              entry(ptr,ptr,fixed bin(21),fixed bin(21),fixed bin(35))variable ext /* Build mode input procedure. */;
  2    20 dcl  gtss_ext_$gtss_slave_area_seg   (4) ext static ptr	/* pointer to gtss slave area segment */;
  2    21 dcl  gtss_ext_$hcs_work_area_ptr     ptr ext static		/* Temp seg for acl lists. */;
  2    22 dcl  gtss_ext_$homedir               char (64) static ext /* user's home dir */;
  2    23 dcl  gtss_ext_$last_k_was_out        bit (1)aligned ext static	/* "1"b => last tty output was output. */;
  2    24 dcl  gtss_ext_$pdir                  char (168) varying ext static	/* pathname of process directory */;
  2    25 dcl  gtss_ext_$popup_from_pi         static ext label	/* transfer to this label after pi simulates popup primitive */;
  2    26 dcl  gtss_ext_$process_type          fixed bin (17) static ext;
  2    27 dcl  gtss_ext_$put_chars             entry(ptr,ptr,fixed bin(24),fixed bin(35)) variable ext	/* Terminal output procedure. */;
  2    28 dcl  gtss_ext_$restart_from_pi       static ext label	/* transfer to this label after pi restores machine conditions */;
  2    29 dcl  gtss_ext_$restart_seg_ptr       ptr static ext	/* points to DRUN restart file when exec under absentee */;
  2    30 dcl  gtss_ext_$sig_ptr               ext static ptr	/* saved ptr to signal_ */;
  2    31 dcl  gtss_ext_$stack_level_          fixed bin ext static;
  2    32 dcl  gtss_ext_$suspended_process     bit(1) ext static;
  2    33 dcl  gtss_ext_$SYstarstar_file_no    fixed bin (24) static ext;
  2    34 dcl  gtss_ext_$user_id               char (26)var ext;
  2    35 dcl  gtss_ext_$work_area_ptr         ptr ext;
  2    36 
  2    37 dcl  1 gtss_ext_$CFP_bits aligned static external
  2    38      , 3 no_input_yet bit (1) unaligned         /* used in gtss_CFP_input_, gtss_read_starCFP_ */
  2    39      , 3 rtn_bits bit (4) unaligned             /* used in gtss_CFP_input_, gtss_CFP_output_ */
  2    40      , 3 cpos_called bit (1) unaligned          /* used in gtss_CFP_input_, gtss_drl_t_cfio_, gtss_abandon_CFP_ */
  2    41      , 3 cout_called bit (1) unaligned          /* used in gtss_read_starCFP_, gtss_abandon_CFP_ */
  2    42      , 3 build_mode bit (1) unaligned	        /* used in gtss_build_, gtss_dsd_process_ */
  2    43      ;
  2    44 
  2    45 dcl 1 gtss_ext_$com_reg aligned static ext,
  2    46        3 tsdmx,
  2    47          4 dst fixed bin (18) unsigned unaligned,
  2    48          4 dit fixed bin (18) unsigned unaligned,
  2    49        3 tsdpt fixed bin (36) unsigned unaligned,
  2    50        3 tsddt fixed bin (36) unsigned unaligned,
  2    51        3 tsdid bit (72) unaligned,
  2    52        3 tsdsd bit (36) unaligned,
  2    53        3 tsdst fixed bin (36) unsigned unaligned,
  2    54        3 tsdjb fixed bin (35) unaligned,
  2    55        3 tsdgt,
  2    56          4 ust_loc fixed bin (18) unsigned unaligned,
  2    57          4 gating_ctl fixed bin (18) unsigned unaligned,
  2    58        3 tcdfr bit (36) unaligned;
  2    59 
  2    60 dcl 1 gtss_ext_$flags aligned static ext
  2    61      , 3 dispose_of_drl_on_pi	bit (01) unal	/* 1 => drl that should be aborted after quit-pi sequence */
  2    62      , 3 drl_in_progress	bit (01) unal	/* 1 => drl handler executing; 0 => gcos code executing */
  2    63      , 3 popup_from_pi	bit (01) unal	/* 1 => derail processor will simulate Gcos break instead of returning */
  2    64      , 3 unfinished_drl	bit (01) unal	/* 1 => subsystem is handling breaks and quit was raised during a drl */
  2    65      , 3 ss_time_limit_set	bit (01) unal	/* 1 => exec time limit set for subsystem */
  2    66      , 3 timer_ranout	bit (01) unal	/* 1 => user is executing timer runout code */
  2    67      , 3 gtss_com_err_sw      bit (01) unal       /* 1 => stop com_err_ string from going to terminal */   
  2    68      , 3 available		bit (65) unal
  2    69      ;
  2    70 
  2    71 
  2    72 dcl 1 gtss_ext_$statistics aligned static ext,		/* Derail usage statistics */
  2    73       3 total_time (-10:71)fixed bin (71),
  2    74       3 count (-10:71)fixed bin (17);
  2    75 
  2    76 /* 	Declaration of Available File Table
  2    77*   */
  2    78 dcl 1 gtss_ext_$aft aligned ext,			/* aft structure */
  2    79 
  2    80       3 start_list (0:102) fixed bin (24),		/* >0 => 1st aft_entry row to start of next entry chain. */
  2    81 
  2    82       3 aft_entry (20),
  2    83         4 altname char (8),				/* altname name for attaching this file */
  2    84         4 next_entry fixed bin (24),			/* Next aft_entry in hash chain. */
  2    85         4 previous_add fixed bin (24),			/* Previously added entry. */
  2    86         4 next_add fixed bin (24),			/* Entry added after this one. */
  2    87         4 used bit (1) unal,				/* "1"b => aft_entry contains AFT value. */
  2    88         4 forced bit(1) unal,				/* "1"b => gtss_verify_access_ forced access on this file. */
  2    89 
  2    90       3 free_space fixed bin (24),			/* Index of start of free space list for aft entries. */
  2    91       3 first_added fixed bin (24),			/* >0  => start of chain in add order. */
  2    92       3 last_added fixed bin (24)			/* >0 => end of chain in added order. */;
  2    93 
  2    94 dcl  gtss_ext_$ppt                   ptr ext /*  switch name for tapein drl */;
  2    95 /**	Data structure to provide access to installed
  2    96*   subsystems fast library load.
  2    97*   **/
  2    98 dcl 1 gtss_ext_$fast_lib aligned ext
  2    99      , 3 fast_lib_fcb ptr				/* Pointer to msf fcb.	*/
  2   100      , 3 fast_lib_ncp fixed bin (24)			/* Number of components. */
  2   101      , 3 comp_ptr (0:9)ptr				/* Pointer to component. */
  2   102      , 3 comp_wds (0:9)fixed bin (24)			/* Component length (words). */
  2   103      ;
  2   104 
  2   105 /* Pointers to segments to regulate multipler
  2   106*   callers to files. Same segments are used to regulate
  2   107*   all simulator callers.
  2   108**/
  2   109 dcl 1 gtss_ext_$mcfc	aligned ext,
  2   110       3 multics_lock_id	bit(36),
  2   111       3 wait_time		fixed bin,
  2   112       3 files_ptr		ptr,
  2   113       3 names_ptr		ptr,
  2   114       3 callers_ptr		(0:3)ptr
  2   115 ;
  2   116 
  2   117 /*   END INCLUDE FILE gtss_ext_.incl.pl1 */
      200 
      201 
  3     1 /*  */
  3     2 /* BEGIN INCLUDE FILE  mc.incl.pl1   Created Dec 72 for 6180 - WSS. */
  3     3 /* Modified 06/07/76 by Greenberg for mc.resignal */
  3     4 /* Modified 07/07/76 by Morris for fault register data */
  3     5 /* Modified 08/28/80 by J. A. Bush for the DPS8/70M CVPU */
  3     6 /* Modified '82 to make values constant */
  3     7 
  3     8 /* words 0-15 pointer registers */
  3     9 
  3    10 dcl  mcp ptr;
  3    11 
  3    12 dcl 1 mc based (mcp) aligned,
  3    13     2 prs (0:7) ptr,				/* POINTER  REGISTERS */
  3    14    (2 regs,					/* registers */
  3    15       3 x (0:7) bit (18),				/* index registers */
  3    16       3 a bit (36),					/* accumulator */
  3    17       3 q bit (36),					/* q-register */
  3    18       3 e bit (8),					/* exponent */
  3    19       3 pad1 bit (28),
  3    20       3 t bit (27),					/* timer register */
  3    21       3 pad2 bit (6),
  3    22       3 ralr bit (3),				/* ring alarm register */
  3    23 
  3    24     2 scu (0:7) bit (36),
  3    25 
  3    26     2 mask bit (72),				/* mem controller mask at time of fault */
  3    27     2 ips_temp bit (36),				/* Temporary storage for IPS info */
  3    28     2 errcode fixed bin (35),				/* fault handler's error code */
  3    29     2 fim_temp,
  3    30       3 unique_index bit (18) unal,			/* unique index for restarting faults */
  3    31       3 resignal bit (1) unal,			/* recompute signal name with fcode below */
  3    32       3 fcode bit (17) unal,				/* fault code used as index to FIM table and SCT */
  3    33     2 fault_reg bit (36),				/* fault register */
  3    34     2 pad2 bit (1),
  3    35     2 cpu_type fixed bin (2) unsigned,			/* L68 = 0, DPS8/70M = 1 */
  3    36     2 ext_fault_reg bit (15),				/* extended fault reg for DPS8/70M CPU */
  3    37     2 fault_time bit (54),				/* time of fault */
  3    38 
  3    39     2 eis_info (0:7) bit (36)) unaligned;
  3    40 
  3    41 
  3    42 dcl (apx fixed bin init (0),
  3    43      abx fixed bin init (1),
  3    44      bpx fixed bin init (2),
  3    45      bbx fixed bin init (3),
  3    46      lpx fixed bin init (4),
  3    47      lbx fixed bin init (5),
  3    48      spx fixed bin init (6),
  3    49      sbx fixed bin init (7)) internal static options (constant);
  3    50 
  3    51 
  3    52 
  3    53 
  3    54 dcl  scup ptr;
  3    55 
  3    56 dcl 1 scu based (scup) aligned,			/* SCU DATA */
  3    57 
  3    58 
  3    59 /*	WORD (0)		*/
  3    60 
  3    61    (2 ppr,					/* PROCEDURE POINTER REGISTER */
  3    62       3 prr bit (3),				/* procedure ring register */
  3    63       3 psr bit (15),				/* procedure segment register */
  3    64       3 p bit (1),					/* procedure privileged bit */
  3    65 
  3    66     2 apu,					/* APPENDING UNIT STATUS */
  3    67       3 xsf bit (1),				/* ext seg flag - IT modification */
  3    68       3 sdwm bit (1),				/* match in SDW Ass. Mem. */
  3    69       3 sd_on bit (1),				/* SDW Ass. Mem.  ON */
  3    70       3 ptwm bit (1),				/* match in PTW Ass. Mem. */
  3    71       3 pt_on bit (1),				/* PTW Ass. Mem.  ON */
  3    72       3 pi_ap bit (1),				/* Instr Fetch or Append cycle */
  3    73       3 dsptw bit (1),				/* Fetch of DSPTW */
  3    74       3 sdwnp bit (1),				/* Fetch of SDW non paged */
  3    75       3 sdwp bit (1),				/* Fetch of SDW paged */
  3    76       3 ptw bit (1),				/* Fetch of PTW */
  3    77       3 ptw2 bit (1),				/* Fetch of pre-paged PTW */
  3    78       3 fap bit (1),				/* Fetch of final address paged */
  3    79       3 fanp bit (1),				/* Fetch of final address non-paged */
  3    80       3 fabs bit (1),				/* Fetch of final address absolute */
  3    81 
  3    82     2 fault_cntr bit (3),				/* number of retrys of EIS instructions */
  3    83 
  3    84 
  3    85 /*	WORD (1)		*/
  3    86 
  3    87     2 fd,						/* FAULT  DATA */
  3    88       3 iro bit (1),				/* illegal ring order */
  3    89       3 oeb bit (1),				/* out of execute bracket */
  3    90       3 e_off bit (1),				/* no execute */
  3    91       3 orb bit (1),				/* out of read bracket */
  3    92       3 r_off bit (1),				/* no read */
  3    93       3 owb bit (1),				/* out of write bracket */
  3    94       3 w_off bit (1),				/* no write */
  3    95       3 no_ga bit (1),				/* not a gate */
  3    96       3 ocb bit (1),				/* out of call bracket */
  3    97       3 ocall bit (1),				/* outward call */
  3    98       3 boc bit (1),				/* bad outward call */
  3    99       3 inret bit (1),				/* inward return */
  3   100       3 crt bit (1),				/* cross ring transfer */
  3   101       3 ralr bit (1),				/* ring alarm register */
  3   102       3 am_er bit (1),				/* associative memory fault */
  3   103       3 oosb bit (1),				/* out of segment bounds */
  3   104       3 paru bit (1),				/* processor parity upper */
  3   105       3 parl bit (1),				/* processor parity lower */
  3   106       3 onc_1 bit (1),				/* op not complete type 1 */
  3   107       3 onc_2 bit (1),				/* op not complete type 2 */
  3   108 
  3   109     2 port_stat,					/* PORT  STATUS */
  3   110       3 ial bit (4),				/* illegal action lines */
  3   111       3 iac bit (3),				/* illegal action channel */
  3   112       3 con_chan bit (3),				/* connect channel */
  3   113 
  3   114     2 fi_num bit (5),				/* (fault/interrupt)  number */
  3   115     2 fi_flag bit (1),				/*  1 => fault,  0 => interrupt  */
  3   116 
  3   117 
  3   118 /*	WORD (2)		*/
  3   119 
  3   120     2 tpr,					/* TEMPORARY POINTER REGISTER */
  3   121       3 trr bit (3),				/* temporary ring register */
  3   122       3 tsr bit (15),				/* temporary segment register */
  3   123 
  3   124     2 pad2 bit (9),
  3   125 
  3   126     2 cpu_no bit (3),				/* CPU number */
  3   127 
  3   128     2 delta bit (6),				/* tally modification DELTA */
  3   129 
  3   130 
  3   131 /*	WORD (3)		*/
  3   132 
  3   133     2 word3 bit (18),
  3   134 
  3   135     2 tsr_stat,					/* TSR STATUS for 1,2,&3 word instructions */
  3   136       3 tsna,					/* Word 1 status */
  3   137         4 prn bit (3),				/* Word 1  PR  number */
  3   138         4 prv bit (1),				/* Word 1  PR  valid bit */
  3   139       3 tsnb,					/* Word 2  status */
  3   140         4 prn bit (3),				/* Word 2  PR  number */
  3   141         4 prv bit (1),				/* Word 2  PR  valid bit */
  3   142       3 tsnc,					/* Word 3  status */
  3   143         4 prn bit (3),				/* Word 3  PR  number */
  3   144         4 prv bit (1),				/* Word 3  PR  valid bit */
  3   145 
  3   146     2 tpr_tbr bit (6),				/* TPR.TBR  field */
  3   147 
  3   148 
  3   149 /* 	WORD (4)		*/
  3   150 
  3   151     2 ilc bit (18),					/* INSTRUCTION  COUNTER */
  3   152 
  3   153     2 ir,						/* INDICATOR  REGISTERS */
  3   154       3 zero bit (1),				/* zero indicator */
  3   155       3 neg bit (1),				/* negative indicator */
  3   156       3 carry bit (1),				/* carryry indicator */
  3   157       3 ovfl bit (1),				/* overflow indicator */
  3   158       3 eovf bit (1),				/* eponent overflow */
  3   159       3 eufl bit (1),				/* exponent underflow */
  3   160       3 oflm bit (1),				/* overflow mask */
  3   161       3 tro bit (1),				/* tally runout */
  3   162       3 par bit (1),				/* parity error */
  3   163       3 parm bit (1),				/* parity mask */
  3   164       3 bm bit (1),					/* ^bar mode */
  3   165       3 tru bit (1),				/* truncation mode */
  3   166       3 mif bit (1),				/* multi-word instruction mode */
  3   167       3 abs bit (1),				/* absolute mode */
  3   168       3 hex bit (1),				/* hexadecimal exponent mode */
  3   169       3 pad bit (3),
  3   170 
  3   171 
  3   172 /*	WORD (5)		*/
  3   173 
  3   174     2 ca bit (18),					/* COMPUTED  ADDRESS */
  3   175 
  3   176     2 cu,						/* CONTROL UNIT STATUS */
  3   177       3 rf bit (1),					/* on first cycle of repeat instr */
  3   178       3 rpt bit (1),				/* repeat instruction */
  3   179       3 rd bit (1),					/* repeat double instruction */
  3   180       3 rl bit (1),					/* repeat link instruciton */
  3   181       3 pot bit (1),				/* IT  modification */
  3   182       3 pon bit (1),				/* return type instruction */
  3   183       3 xde bit (1),				/* XDE from Even location */
  3   184       3 xdo bit (1),				/* XDE from Odd  location */
  3   185       3 poa bit (1),				/* operation preparation */
  3   186       3 rfi bit (1),				/* tells CPU to refetch instruction */
  3   187       3 its bit (1),				/* ITS modification */
  3   188       3 if bit (1),					/* fault occured during instruction fetch */
  3   189 
  3   190     2 cpu_tag bit (6)) unaligned,			/* computed tag field */
  3   191 
  3   192 
  3   193 /*	WORDS (6,7)	*/
  3   194 
  3   195     2 even_inst bit (36),				/* even instruction of faulting pair */
  3   196 
  3   197     2 odd_inst bit (36);				/* odd  instruction of faulting pair */
  3   198 
  3   199 
  3   200 
  3   201 
  3   202 
  3   203 
  3   204 /*	ALTERNATE   SCU  DECLARATION		*/
  3   205 
  3   206 
  3   207 dcl 1 scux based (scup) aligned,
  3   208 
  3   209    (2 pad0 bit (36),
  3   210 
  3   211     2 fd,						/* GROUP II  FAULT DATA */
  3   212       3 isn bit (1),				/* illegal segment number */
  3   213       3 ioc bit (1),				/* illegal op  code  */
  3   214       3 ia_am bit (1),				/* illegal address - modifier */
  3   215       3 isp bit (1),				/* illegal slave  procedure */
  3   216       3 ipr bit (1),				/* illegal procedure */
  3   217       3 nea bit (1),				/* non existent address */
  3   218       3 oobb bit (1),				/* out of bounds */
  3   219       3 pad bit (29),
  3   220 
  3   221     2 pad2 bit (36),
  3   222 
  3   223     2 pad3a bit (18),
  3   224 
  3   225     2 tsr_stat (0:2),				/* TSR  STATUS  as an  ARRAY */
  3   226       3 prn bit (3),				/* PR  number */
  3   227       3 prv bit (1),				/* PR  valid bit */
  3   228 
  3   229     2 pad3b bit (6)) unaligned,
  3   230 
  3   231     2 pad45 (0:1) bit (36),
  3   232 
  3   233     2 instr (0:1) bit (36);				/* Instruction ARRAY */
  3   234 
  3   235 
  3   236 
  3   237 /*  END INCLUDE FILE   mc.incl.pl1 */
      202 
      203 
  4     1 /* BEGIN INCLUDE FILE gtss_prgdes_.incl.pl1 */
  4     2 /*
  4     3*  Created: Kepner  04/12/78
  4     4*  Modified:  Ron Barstad  82-08-11  to change size of prgdes array for 4js3
  4     5*  Modified:  Ron Barstad  83-05-19  change size of prgdes array for update 7
  4     6**/
  4     7 
  4     8 /*
  4     9*   "     This  structure  describes  the  timesharing  subsystem   program
  4    10*   "     descriptors.
  4    11*   "
  4    12*   "     Anywhere  fixed bin(17) unal appears it should be noted that GCOS
  4    13*   "     can potentially make use of all 18 bits  and  caution  should  be
  4    14*   "     exercised.   These  items  should  be  changed  to  fixed bin(18)
  4    15*   "     usigned unal when this feature is added to the PL/I compiler.
  4    16*   "
  4    17*   "     ss_name  subsystem name
  4    18*   "
  4    19*   "     program_size  actual program size to be used in execution.
  4    20*   "
  4    21*   "     load_size  the size remaining when all leading and trailing zeros
  4    22*   "               have been eliminated. This is used to reduce  the  size
  4    23*   "               of the original copy of the program.
  4    24*   "
  4    25*   "     entry_point  address relative to zero  that  contains  the  first
  4    26*   "               executable instruction.
  4    27*   "
  4    28*   "     parameters  flags defining attributes of the subsystem. The  flag
  4    29*   "               bits  are defined below. Assume bits are numbered 1-18.
  4    30*   "		 1	cache
  4    31*   "		 2	.BSCF
  4    32*   "		 3	special size request
  4    33*   "		 4	drl t.exec permission.
  4    34*   "		 5	drl t.cmov permission
  4    35*   "		 6	special product offering.
  4    36*   "		 7	high use program file,  #p
  4    37*   "		 8	special file switch (perm/temp) allowed.
  4    38*   "		 9	ss not callable at system level.
  4    39*   "		10	subsystem allowed use of get-specific.
  4    40*   "		11	execute permission allowed for file i/o.
  4    41*   "		12	subsystem can read system master catalog.
  4    42*   "		13	basic or databasic
  4    43*   "		14	subsystem uses common command list.
  4    44*   "		15	low use subsystem (# q file)
  4    45*   "		16	subsystem must be patched when loaded.
  4    46*   "		17	master subsystem.
  4    47*   "		18	privileged subsystem.
  4    48*   "
  4    49*   "	seek_address  the word offset in the multisegment file
  4    50*   "		component where the object code for this subsystem is
  4    51*   "		stored.
  4    52*   "
  4    53*   "     initial_load_address  The address of the first  nonzero  word  in
  4    54*   "               the program.
  4    55*   "
  4    56*   "     cmd_lang_offset   The  word  offset   into   gtss_prgdes_ext_$primitives
  4    57*   "               (suitable  for use with addrel) of the command language
  4    58*   "               list for this subsystem.
  4    59*   "
  4    60*   "     cmd_lang_len  Number of command names for this subsystem.
  4    61*   "
  4    62*   "     statistics
  4    63*   "
  4    64*   "     bci_catalog_name  The GECALL name for the subsystem.
  4    65*   "
  4    66*   "	library	an integer which indicates which multisegment file
  4    67*   "		contains the object code for this subsystem.
  4    68*   "
  4    69*   "	component	an integer which indicates which component of the
  4    70*   "		multisegment file contains the object code for this
  4    71*   "		subsystem.
  4    72*   "
  4    73*   "     ss_name_len  The number of nonblank characters in the  subsystem
  4    74*   "		name.
  4    75**/
  4    76 
  4    77 dcl 1 gtss_prgdes_ext_$prgdes (302) aligned ext,
  4    78     2 ss_name char (4) aligned,
  4    79     2 program_size fixed bin (17) unal,
  4    80     2 load_size fixed bin (17) unal,
  4    81     2 entry_point fixed bin (17) unal,
  4    82     2 parameters bit (18) unal,
  4    83     2 seek_address bit(18) unal,
  4    84     2 initial_load_address fixed bin (17) unal,
  4    85     2 cmd_lang_offset fixed bin (17) unal,
  4    86     2 cmd_lang_len fixed bin (17) unal,
  4    87     2 statistics,
  4    88       3 calls fixed bin (17) unal,
  4    89       3 loads fixed bin (17) unal,
  4    90       3 filler (3) bit (36) unal,
  4    91     2 bci_catalog_name bit (36) aligned,
  4    92     2 library fixed bin (17) unal,
  4    93     2 component fixed bin (17) unal,
  4    94     2 ss_name_len fixed bin (17) aligned;
  4    95 
  4    96 
  4    97 
  4    98 /* This overlay structure is used to pass the user visible portion
  4    99*   of the program descriptor to the subsystem via DRL PRGDES. */
  4   100 dcl 1 prgdes_ov (302) aligned based (addr (gtss_prgdes_ext_$prgdes)),
  4   101     2 first_9_words char (36),			/* user visible portion */
  4   102     2 filler char (12);
  4   103 
  4   104 /*   END INCLUDE FILE gtss_prgdes_.incl.pl1 */
      204 
      205 
  5     1 /* BEGIN INCLUDE FILE gtss_ust_ext_.incl.pl1 */
  5     2 /* UST: User Status Table 
  5     3*   definitions based on 
  5     4*   System Tables, Order number DD14-01E, January 1981
  5     5*   Section 15, Time Sharing System
  5     6*
  5     7*   Authors: Robert J. Grimes	Created
  5     8*   -	  Albert N. Kepner	  1978
  5     9*   -	  Robert M. May
  5    10*   -	  David B. Ward
  5    11*   Change:  Dave Ward	02/23/79 Level 4 numbering.
  5    12*   Change:  Ron Barstad  83-07-12 Repaired damaged formating and word offset comments
  5    13*                                  Brought up to 4JS3 functionality
  5    14**/
  5    15 /* octal word offsets of entries */
  5    16 dcl 1 gtss_ust_ext_$ust aligned ext,
  5    17       3 gtss_ust,
  5    18 /* 0-1  */	4 lid		bit (72),
  5    19 /* 2    */	4 lstp		bit (36),
  5    20 /* 3    */	4 ltin		bit (36),
  5    21 /* 4    */	4 lstio,
  5    22 			5 no_of_chars_by_8  fixed bin (18) uns unal,
  5    23 			5 no_of_disk_io     fixed bin (18) uns unal,
  5    24 /* 5    */	4 lsnub		bit (36),
  5    25 /* 6-7  */	4 lchg		bit (72),
  5    26 /* 10   */	4 lbuf,
  5    27 			5 address		bit (18)unaligned,
  5    28 			5 tally		bit (1)unaligned,
  5    29 			5 terminal_type	bit (5)unaligned,
  5    30 			5 station_id	bit (12)unaligned,
  5    31 /* 11-12 */	4 liost (0:1)	bit (36),
  5    32 /* 13   */	4 lcc		bit (36),
  5    33 /* 14   */	4 lback,
  5    34 			5 fill1		bit (18) unaligned,
  5    35 			5 gwake		fixed bin (17) unaligned,
  5    36 /* 15   */	4 lflag,
  5    37 			5 mp_list		bit (18) unaligned,
  5    38 			5 flags unaligned,
  5    39 				6 b18		bit (1) unaligned,
  5    40 				6 b19		bit (1) unaligned,
  5    41 				6 b20		bit (1) unaligned,
  5    42 				6 b21		bit (1) unaligned,
  5    43 				6 b22		bit (1) unaligned,
  5    44 				6 b23		bit (1) unaligned,
  5    45 				6 b24		bit (1) unaligned,
  5    46 				6 b25		bit (1) unaligned,
  5    47 				6 b26		bit (1) unaligned,
  5    48 				6 b27		bit (1) unaligned,
  5    49 				6 b28		bit (1) unaligned,
  5    50 				6 b29		bit (1) unaligned,
  5    51 				6 b30		bit (1) unaligned,
  5    52 				6 b31		bit (1) unaligned,
  5    53 				6 b32		bit (1) unaligned,
  5    54 				6 b33		bit (1) unaligned,
  5    55 				6 b34		bit (1) unaligned,
  5    56 				6 b35		bit (1) unaligned,
  5    57 /* 16   */	4 lkdss		bit (36),
  5    58 /* 17   */	4 lfile,
  5    59 			5 program_stack	fixed bin (17) unal,
  5    60 			5 file_list_ptr	bit (18) unal,
  5    61 /* 20   */	4 lttys		bit (36),
  5    62 /* 21   */	4 lswth,
  5    63 			5 b0		bit (1) unaligned,
  5    64 			5 b1		bit (1) unaligned,
  5    65 			5 b2		bit (1) unaligned,
  5    66 			5 b3		bit (1) unaligned,
  5    67 			5 b4		bit (1) unaligned,
  5    68 			5 b5		bit (1) unaligned,
  5    69 			5 b6		bit (1) unaligned,
  5    70 			5 b7		bit (1) unaligned,
  5    71 			5 b8		bit (1) unaligned,
  5    72 			5 b9		bit (1) unaligned,
  5    73 			5 b10		bit (1) unaligned,
  5    74 			5 b11		bit (1) unaligned,
  5    75 			5 b12		bit (1) unaligned,
  5    76 			5 b13		bit (1) unaligned,
  5    77 			5 b14		bit (1) unaligned,
  5    78 			5 b15		bit (1) unaligned,
  5    79 			5 b16		bit (1) unaligned,
  5    80 			5 b17		bit (1) unaligned,
  5    81 			5 b18		bit (1) unaligned,
  5    82 			5 b19		bit (1) unaligned,
  5    83 			5 b20		bit (1) unaligned,
  5    84 			5 b21		bit (1) unaligned,
  5    85 			5 b22		bit (1) unaligned,
  5    86 			5 b23		bit (1) unaligned,
  5    87 			5 b24		bit (1) unaligned,
  5    88 			5 b25		bit (1) unaligned,
  5    89 			5 b26		bit (1) unaligned,
  5    90 			5 b27		bit (1) unaligned,
  5    91 			5 b28		bit (1) unaligned,
  5    92 			5 b29		bit (1) unaligned,
  5    93 			5 b30		bit (1) unaligned,
  5    94 			5 b31		bit (1) unaligned,
  5    95 			5 b32		bit (1) unaligned,
  5    96 			5 b33		bit (1) unaligned,
  5    97 			5 b34		bit (1) unaligned,
  5    98 			5 b35		bit (1) unaligned,
  5    99 /* 22   */	4 lsize,
  5   100 			5 bar		fixed bin (17) unaligned,
  5   101 			5 limit		bit (18) unaligned,
  5   102 /* 23... */	4 lswap,
  5   103 			5 fill		bit (18) unal,
  5   104 			5 size		bit (18) unal,
  5   105 /* ...24 */	4 transfer_cell	bit (36) unal,
  5   106 /* 25   */	4 lerrm		bit (36),
  5   107 /* 26-37 */	4 lcfil (0:9)	bit (36),
  5   108 /* 40   */	4 lsybc,
  5   109 			5 b0_17		fixed bin (17) unaligned,
  5   110 			5 b18_35		fixed bin (17) unaligned,
  5   111 /* 41-42 */	4 lstem (0:1)	bit (36),
  5   112 /* 43    */	4 lcals,
  5   113 			5 b0_17		fixed bin (17) unaligned,
  5   114 			5 b18_35		bit (18) unaligned,
  5   115 /* 44-51 */	4 subsystems (3),
  5   116 			5 content_lswap,
  5   117 				6 fill		bit (18) unal,
  5   118 				6 size		bit (18) unal,
  5   119 			5 tally_address	fixed bin (17) unaligned,
  5   120 			5 ss_flags	bit (18) unaligned,
  5   121 /* 52   */	4 ltalc,
  5   122 			5 tod		fixed bin (17) unaligned,
  5   123 			5 startup		fixed bin (17) unaligned,
  5   124 /* 53   */	4 lspts		fixed bin (35),
  5   125 /* 54   */	4 lflg2,
  5   126 			5 b0		bit (1) unaligned,
  5   127 			5 b1		bit (1) unaligned,
  5   128 			5 b2		bit (1) unaligned,
  5   129 			5 b3		bit (1) unaligned,
  5   130 			5 b4		bit (1) unaligned,
  5   131 			5 b5		bit (1) unaligned,
  5   132 			5 b6		bit (1) unaligned,
  5   133 			5 b7		bit (1) unaligned,
  5   134 			5 b8		bit (1) unaligned,
  5   135 			5 b9		bit (1) unaligned,
  5   136 			5 b10		bit (1) unaligned,
  5   137 			5 b11		bit (1) unaligned,
  5   138 			5 b12		bit (1) unaligned,
  5   139 			5 b13		bit (1) unaligned,
  5   140 			5 b14		bit (1) unaligned,
  5   141 			5 b15		bit (1) unaligned,
  5   142 			5 b16		bit (1) unaligned,
  5   143 			5 b17		bit (1) unaligned,
  5   144 			5 b18		bit (1) unaligned,
  5   145 			5 b19		bit (1) unaligned,
  5   146 			5 b20		bit (1) unaligned,
  5   147 			5 b21		bit (1) unaligned,
  5   148 			5 b22		bit (1) unaligned,
  5   149 			5 b23		bit (1) unaligned,
  5   150 			5 b24		bit (1) unaligned,
  5   151 			5 b25		bit (1) unaligned,
  5   152 			5 b26		bit (1) unaligned,
  5   153 			5 b27		bit (1) unaligned,
  5   154 			5 b28		bit (1) unaligned,
  5   155 			5 b29		bit (1) unaligned,
  5   156 			5 b30		bit (1) unaligned,
  5   157 			5 b31		bit (1) unaligned,
  5   158 			5 b32		bit (1) unaligned,
  5   159 			5 b33		bit (1) unaligned,
  5   160 			5 b34		bit (1) unaligned,
  5   161 			5 b35		bit (1) unaligned,
  5   162 /* 55-60 */	4 lsftm (0:3)	bit (36),
  5   163 /* 61    */	4 lsprt		fixed bin (35),
  5   164 /* 62    */	4 ltrm		bit (36),
  5   165 /* 63    */	4 linno		fixed bin (35),
  5   166 /* 64    */	4 lincr		fixed bin (35),
  5   167 /* 65    */	4 ltdes		bit (36),
  5   168 /* 66    */	4 lbptr		bit (36),
  5   169 /* 67    */	4 lpptr,
  5   170 			5 last_file_pat_ptr	bin (18) uns unal,
  5   171 			5 lpptr_reserved	bin (18) uns unal,
  5   172 /* 70    */	4 lsclp		bit (36),
  5   173 /* 71    */	4 limit		fixed bin (35),
  5   174 /* 72    */	4 lacpt,
  5   175 			5 jout_pat_offset	bit (18) unal,
  5   176 			5 permissions unal,
  5   177 				6 lodx		bit (1) unal,
  5   178 				6 cardin		bit (1) unal,
  5   179 				6 talk		bit (1) unal,
  5   180 				6 lods		bit (1) unal,
  5   181 			5 cardin_urgency	bit (14) unal,
  5   182 /* 73    */	4 ldrl,
  5   183 			5 ilc		bit (18) unaligned,
  5   184 			5 code		fixed bin (17) unaligned,
  5   185 /* 74    */	4 ljsnb		bit (36),
  5   186 /* 75    */	4 ltm0		bit (36),
  5   187 /* 76    */	4 ltm1		bit (36),
  5   188 /* 77    */	4 ltm2		bit (36),
  5   189 /* 100   */	4 ltm3		bit (36),
  5   190 /* 101   */	4 ltm4		bit (36),
  5   191 /* 102   */	4 ltm5		bit (36),
  5   192 /* 103   */	4 ltmwt		bit (36),
  5   193 /* 104   */	4 ltmrs		bit (36),
  5   194 /* 105   */	4 ltc0		bit (36),
  5   195 /* 106   */	4 ltc1		bit (36),
  5   196 /* 107   */	4 ltc2		bit (36),
  5   197 /* 110   */	4 lct3		bit (36),
  5   198 /* 111   */	4 ltc4		bit (36),
  5   199 /* 112   */	4 ltc5		bit (36),
  5   200 /* 113   */	4 ltcw		bit (36),
  5   201 /* 114   */	4 lkst		bit (36),
  5   202 /* 115   */	4 lkst2		bit (36),
  5   203 /* 116   */	4 lkcc		bit (36),
  5   204 /* 117   */	4 lkms		bit (36),
  5   205 /* 120-121 */	4 lksdc (0:1)	bit (36),
  5   206 /* 122   */	4 lkntp		bit (36),
  5   207 /* 123   */	4 lkrdc		bit (36),
  5   208 /* 124   */	4 lpqf		bit (36),
  5   209 /* 125   */	4 lpqb		bit (36),
  5   210 /* 126   */	4 lustl		bit (36),
  5   211 /* 127   */	4 ltemp		bit (36),
  5   212 /* 130   */	4 lrtll,
  5   213 			5 word_length	fixed bin unaligned,
  5   214 			5 char_length	fixed bin unaligned,
  5   215 /* 131   */	4 ltim		bit (36),
  5   216 /* 132   */	4 lcfio,
  5   217 			5 sect_out	fixed bin(18)unsigned unal,
  5   218 			5 sect_in		fixed bin(18)unsigned unal,
  5   219 /* 133   */	4 lcfst,
  5   220 			5 initial_sect_out	fixed bin(18)unsigned unal,
  5   221 			5 start_term	fixed bin(18)unsigned unal,
  5   222 /* 134   */	4 lcmpt		bit (36),
  5   223 /* 135   */	4 lcjid		bit (36),
  5   224 /* 136-137 */	4 lrcal (0:1)	bit (36),
  5   225 /* 140   */	4 lrdta		bit (36),
  5   226 /* 141   */	4 lrrsk		bit (36),
  5   227 /* 142   */	4 lrskd		bit (36),
  5   228 /* 143   */	4 lrcc		bit (36),
  5   229 /* 144-145 */	4 lrsts (0:1)	bit (36),
  5   230 /* 146   */	4 lrtm		bit (36),
  5   231 /* 147   */	4 lswt2,
  5   232 			5 b0		bit (1) unaligned,
  5   233 			5 b1		bit (1) unaligned,
  5   234 			5 b2		bit (1) unaligned,
  5   235 			5 b3		bit (1) unaligned,
  5   236 			5 b4		bit (1) unaligned,
  5   237 			5 b5		bit (1) unaligned,
  5   238 			5 b6		bit (1) unaligned,
  5   239 			5 b7		bit (1) unaligned,
  5   240 			5 b8		bit (1) unaligned,
  5   241 			5 b9		bit (1) unaligned,
  5   242 			5 b10		bit (1) unaligned,
  5   243 			5 b11		bit (1) unaligned,
  5   244 			5 b12		bit (1) unaligned,
  5   245 			5 b13		bit (1) unaligned,
  5   246 			5 b14		bit (1) unaligned,
  5   247 			5 b15		bit (1) unaligned,
  5   248 			5 b16		bit (1) unaligned,
  5   249 			5 b17		bit (1) unaligned,
  5   250 			5 b18		bit (1) unaligned,
  5   251 			5 b19		bit (1) unaligned,
  5   252 			5 b20		bit (1) unaligned,
  5   253 			5 b21		bit (1) unaligned,
  5   254 			5 b22		bit (1) unaligned,
  5   255 			5 b23		bit (1) unaligned,
  5   256 			5 b24		bit (1) unaligned,
  5   257 			5 b25		bit (1) unaligned,
  5   258 			5 b26		bit (1) unaligned,
  5   259 			5 b27		bit (1) unaligned,
  5   260 			5 b28		bit (1) unaligned,
  5   261 			5 b29		bit (1) unaligned,
  5   262 			5 b30		bit (1) unaligned,
  5   263 			5 b31		bit (1) unaligned,
  5   264 			5 b32		bit (1) unaligned,
  5   265 			5 b33		bit (1) unaligned,
  5   266 			5 b34		bit (1) unaligned,
  5   267 			5 b35		bit (1) unaligned,
  5   268 /* 150   */	4 llsnb		bit (36),
  5   269 /* 151   */	4 lesq		bit (36),
  5   270 /* 152-153 */	4 lumc (0:1)	bit (36),
  5   271 /* 154-155 */	4 lfnam (0:1)	bit (36),
  5   272 /* 156   */	4 lopts		bit (36),
  5   273 /* 157   */	4 licec,
  5   274 			5 b0_17		bit (18) unaligned,
  5   275 			5 b18_35		fixed bin (17) unaligned,
  5   276 /* 160   */	4 lflg3,
  5   277 			5 b0		bit (1) unaligned,
  5   278 			5 b1		bit (1) unaligned,
  5   279 			5 b2		bit (1) unaligned,
  5   280 			5 b3		bit (1) unaligned,
  5   281 			5 b4		bit (1) unaligned,
  5   282 			5 b5		bit (1) unaligned,
  5   283 			5 b6		bit (1) unaligned,
  5   284 			5 b7		bit (1) unaligned,
  5   285 			5 b8		bit (1) unaligned,
  5   286 			5 b9		bit (1) unaligned,
  5   287 			5 b10		bit (1) unaligned,
  5   288 			5 b11		bit (1) unaligned,
  5   289 			5 b12		bit (1) unaligned,
  5   290 			5 b13		bit (1) unaligned,
  5   291 			5 b14		bit (1) unaligned,
  5   292 			5 b15		bit (1) unaligned,
  5   293 			5 b16		bit (1) unaligned,
  5   294 			5 b17		bit (1) unaligned,
  5   295 			5 b18		bit (1) unaligned,
  5   296 			5 b19		bit (1) unaligned,
  5   297 			5 b20		bit (1) unaligned,
  5   298 			5 b21		bit (1) unaligned,
  5   299 			5 b22		bit (1) unaligned,
  5   300 			5 b23		bit (1) unaligned,
  5   301 			5 b24		bit (1) unaligned,
  5   302 			5 b25		bit (1) unaligned,
  5   303 			5 b26		bit (1) unaligned,
  5   304 			5 b27		bit (1) unaligned,
  5   305 			5 b28		bit (1) unaligned,
  5   306 			5 b29		bit (1) unaligned,
  5   307 			5 b30		bit (1) unaligned,
  5   308 			5 b31		bit (1) unaligned,
  5   309 			5 b32		bit (1) unaligned,
  5   310 			5 b33		bit (1) unaligned,
  5   311 			5 b34		bit (1) unaligned,
  5   312 			5 b35		bit (1) unaligned,
  5   313 /* 161-163 */	4 lpage (0:2)	bit (36),
  5   314 /* 164   */	4 lsit1		bit (36),
  5   315 /* 165   */	4 lsit2		bit (36),
  5   316 /* 166   */	4 lsit3		bit (36),
  5   317 /* 167   */	4 lsit4		bit (36),
  5   318 /* The following entries are maintained by gtss and are not found in TSS UST */
  5   319 /* 170   */	4 lxxx, /* program stack index, offset from gtss_ust */
  5   320 			5 b0_17		fixed bin (17) unaligned,
  5   321 			5 b18_35		bit (18) unaligned, /* not used */
  5   322 /* 171-175 */	4 lprgs (5),
  5   323 			5 b0_17		fixed bin (17) unaligned,
  5   324 			5 b18_35		fixed bin (17) unaligned,
  5   325 /* 176   */	4 fill	bit (36),
  5   326 /* 177   */	4 remote_io_buffer aligned,
  5   327 			5 buffer_control_word,
  5   328 				6 current_line_pointer  bit (18)unal,
  5   329 				6 buffer_threshold_address  bit (18)unal,
  5   330 			5 number_words_transmitted	fixed bin (17)unal,
  5   331 			5 FILL1			fixed bin (17)unal,
  5   332 			5 count_of_characters_transmitted fixed bin (17)unal,
  5   333 			5 FILL2			fixed bin (17)unal,
  5   334 			5 characters_transmitted (244) char (1) unal,
  5   335 /* 277   */	4 word_after_ust		bit (36) aligned;
  5   336 
  5   337 /*   END INCLUDE FILE gtss_ust_ext_.incl.pl1 */
      206 
      207 
  6     1 /* BEGIN INCLUDE FILE gtss_drl_names.incl.pl1 */
  6     2 /*
  6     3*  Created: (Grimes SMP)  04/15/78 0933.7 mst Sat 
  6     4*  Changed:  Dave Ward  06/08/78  Made attributes constant
  6     5*  Changed:  Ron Barstad 83-07-25  Updated to 4JS3
  6     6**/
  6     7 dcl  DRL_NAME (-10:71) char (7) varying static int options(constant) initial (
  6     8      "USER-10",					/* USER-10 	USER DEFINED		-10	*/
  6     9      "USER-9",					/* USER-9		USER DEFINED		-9	*/
  6    10      "USER-8",					/* USER-8		USER DEFINED		-8	*/
  6    11      "USER-7",					/* USER-7		USER DEFINED		-7	*/
  6    12      "USER-6",					/* USER-6		USER DEFINED		-6	*/
  6    13      "USER-5",					/* USER-5		USER DEFINED		-5	*/
  6    14      "USER-4",					/* USER-4		USER DEFINED		-4	*/
  6    15      "USER-3",					/* USER-3		USER DEFINED		-3	*/
  6    16      "USER-2",					/* USER-2		USER DEFINED		-2	*/
  6    17      "USER-1",					/* USER-1		USER DEFINED		-1	*/
  6    18      "ZERO",					/*		MUST ALWAYS BE AN ERROR 	0	*/
  6    19      "DIO",					/* T.DIO     Do I/O on User's File                  1    */
  6    20      "KOUT",					/* T.KOUT    Keyboard Output                        2    */
  6    21      "KOUTN",					/* T.OTIN    Keyboard Output Then Input             3    */
  6    22      "KIN",					/* T.KIN     Keyboard Input Last Line               4    */
  6    23      "RETURN",					/* T.RTRN    Return to Primitive List               5    */
  6    24      "DEFIL",					/* T.DFIL    Define and Access a Temporary File     6    */
  6    25      "ABORT",					/* T.ABRT    Abort                                  7    */
  6    26      "SETSWH",					/* T.SETS    Set Switch Word                        10   */
  6    27      "RSTSWH",					/* T.RSTS    Reset Switch Word                      11   */
  6    28      "REW",					/* T.RWND    Rewind a Linked File                   12   */
  6    29      "FILSP",					/* T.FLSP    Space a Linked File                    13   */
  6    30      "RETFIL",					/* T.RFIL    Return a File                          14   */
  6    31      "RELMEM",					/* T.RMEM    Release Memory                         15   */
  6    32      "ADDMEM",					/* T.AMEM    Add Memory                             16   */
  6    33      "CORFIL",					/* T.CFIL    Data From/To Core File                 17   */
  6    34      "SNUMB",					/* T.SNUM    Obtain SNUMB                           20   */
  6    35      "TIME",					/* T.TIME    Obtain Proc.  Time and Time of Day     21   */
  6    36      "PASAFT",					/* T.PAFT    Pass List of Files to Subsystem        22   */
  6    37      "TERMTP",					/* T.TTYP    Terminal Type and Line Number          23   */
  6    38      "PDIO",					/* T.PDIO    Do I/O on a System File                24   */
  6    39      "RESTOR",					/* T.RSTR    Overlay-Load a Subsystem               25   */
  6    40      "SPAWN",					/* T.SPWN    Pass File to Batch Processor           26   */
  6    41      "TAPEIN",					/* T.TPIN    Start Paper Tape Input                 27   */
  6    42      "CALLSS",					/* T.CLSS    Internal Call to Another Subsystem     30   */
  6    43      "USERID",					/* T.USID    Pass USERID and Priority */
  6    44 						/*   to Executive                           31 */
  6    45      "TERM",					/* T.TERM    Clean Up UST After User Termination    32 */
  6    46      "PASUST",					/* T.PUST    Pass UST to Subsystem                  33   */
  6    47      "MORLNK",					/* T.MLNK    Add Links to Temporary File            34   */
  6    48      "NEWUSR",					/* T.NEWU    Log-on New User Without Disconnect     35 */
  6    49      "FILACT",					/* T.FLAC    Permanent File Activities              36   */
  6    50      "SETLNO",					/* T.SETL    Set Line Number/Increment in UST       37   */
  6    51      "SYSRET",					/* T.SRET    Return to System                       40   */
  6    52      "STPSYS",					/* T.STPS    Stop Execution of Master Subsystem     41   */
  6    53      "STATUS",					/* T.STUS    Check I/O Status (not implemented)     42 */
  6    54      "DRLDSC",					/* T.DISC    Disconnect Terminal                    43   */
  6    55      "PASDES",					/* T.DESC    Pass AFT File Names and Descriptions   44   */
  6    56      "JSTS",					/* T.JSTS    Obtain Job Status                      45   */
  6    57      "CGROUT",					/* T.ROUT    Process Line Switch                    46   */
  6    58      "PART",					/* T.PART    Partial Release of Temporary File      47   */
  6    59      "GROW",					/* T.GROW    Grow a Permanent or Temporary File     50   */
  6    60      "ABTJOB",					/* T.ABTJ    Abort Batch Job                        51   */
  6    61      "CONSOL",					/* T.CONS    Talk to System Console                 52   */
  6    62      "SWITCH",					/* T.SWIT    Switch Temporary File Names            53   */
  6    63      "DRLIMT",					/* T.LIMT    Store Processor Time Limit             54   */
  6    64      "JOUT",					/* T.JOUT    Batch Output Request                   55 */
  6    65      "KOTNOW",					/* T.OUTN    Keyboard Output from Unfilled Buffer   56   */
  6    66      "OBJTIM",					/* T.OBJT    Processor Time and Memory Size Limit   57   */
  6    67      "PASFLR",					/* T.PASF    Pass File to Remote Batch Processor    60   */
  6    68      "STOPPT",					/* T.SPPT    Stop Paper Tape Input                  61   */
  6    69      "DRLSAV",					/* T.SAVE    Save Program on Permanent File         62   */
  6    70      "TASK",					/* T.TASK    Spawn A Special Batch Activity         63   */
  6    71      "PSEUDO",					/* T.SUDO    Simulated Keyboard Input               64   */
  6    72      "PRGDES",					/* T.PDES    Pass Program Descriptor to Subsystem   65   */
  6    73      "GWAKE",					/* T.WAKE    Wake Me Later                          66   */
  6    74      "IDS",					/* T.IDS	no longer supported			67  */
  6    75      "ATTRI",					/* T.ATRB    Pick up User's Attributes               70  */
  6    76      "T.STAT",					/* T.STAT    Write Statistical Collection File      71   */
  6    77      "T.GOTO",					/* T.GOTO    Call from One Subsystem to Another     72   */
  6    78      "T.CMOV",					/* T.CMOV    Examine Areas of Memory                73 */
  6    79      "T.LINL",					/* T.LINL    Change Terminal Input Line Length      74   */
  6    80      "T.SYOT",					/* T.SYOT    Pass Data File to Backdoor SYSOUT      75   */
  6    81      "T.CONN",					/* T.CONN    Activate a Disconnected User           76 */
  6    82      "T.CFIO",					/* T.CFIO    Command File and Deferred */
  6    83 						/* Processing Support                     77   */
  6    84      "T.EXEC",					/* T.EXEC    Execute Code on behalf of the */
  6    85 						/* Executive 100 */
  6    86      "T.RSCC",					/* T.RSCC    Read System Controller Clock          101   */
  6    87      "T.MAIL",					/* T.MAIL   Mail Message Sent                     102   */
  6    88      "T.ERR",					/* T.ERR    Error Detected                        103   */
  6    89      "T.PAGE",	/* T.PAGE    Set page characteristics  104 */
  6    90      "T.FAST",	/* T.FAST    Error for fast derail processing  105 */
  6    91      "T.MODS",	/* T.MODS    Enable hex mode   106 */
  6    92      "T.MODR"	/* T.MODR    Disable hex mode   107 */
  6    93      );
  6    94 
  6    95 /*   END INCLUDE FILE gtss_drl_names.incl.pl1 */
      208 
      209 
  7     1 /* BEGIN INCLUDE FILE gtss_pnterr.incl.pl1 */
  7     2 /*
  7     3*  Created: (Grimes SMP)  04/15/78 0933.2 mst Sat 
  7     4*   Change: Dave Ward	06/08/78 made attributes constant.
  7     5*   Change: Dave Ward	08/17/81 made lengths same as constans.
  7     6*   Change: Ron Barstad  83-03-29  fixed err 53, add missing err 56
  7     7*   Change: Ron Barstad  84-02-27  changed back to all same length because of based array in gtss_abort_subsystem_
  7     8**/
  7     9 dcl 1 gtss_pnterr static int options (constant),
  7    10     2 err1   char(50) init("001-INCORRECT PRIMITIVE"),
  7    11     2 err2   char(50) init("002-(^6o)INVALID FILE I/O COMMAND"),
  7    12     2 err3   char(50) init("003-(^6o)INVALID DCW"),
  7    13     2 err4   char(50) init("004-(^6o)INVALID DRL ARGUMENT"),
  7    14     2 err5   char(50) init("005-(^6o)INVALID DRL CODE"),
  7    15     2 err6   char(50) init("006-LEVEL OF CONTROL TOO DEEP"),
  7    16     2 err7   char(50) init("007-BAP PROG. DESC."),
  7    17     2 err8   char(50) init("008-LOOP IN PRIMITIVES"),
  7    18     2 err9   char(50) init("009-SYSTEM UNKNOWN"),
  7    19     2 err10  char(50) init("010-PROGRAM TOO LARGE TO SWAP"),
  7    20     2 err11  char(50) init("011-(^6o)INCORRECT CORE FILE USAGE"),
  7    21     2 err12  char(50) init("012-(^6o)PRIVILEGED I/O ATTEMPTED"),
  7    22     2 err13  char(50) init("013-(^6o)DRL USERID NOT PERMITTED"),
  7    23     2 err14  char(50) init("(^6o)ILLEGAL DRL RELMEM REQUEST"),
  7    24     2 err15  char(50) init("015-(^6o)CANNOT RESET USER ID"),
  7    25     2 err16  char(50) init("016-(^6o)OVERFLOW FAULT"),
  7    26     2 err17  char(50) init("017-(^6o)ILLEGAL OP CODE"),
  7    27     2 err18  char(50) init("018-(^6o)MEMORY FAULT"),
  7    28     2 err19  char(50) init("019-(^6o)FAULT TAG FAULT"),
  7    29     2 err20  char(50) init("020-(^6o)DIVIDE CHECK FAULT"),
  7    30     2 err21  char(50) init("021-(^6o)BAD STATUS - SWAP OUT"),
  7    31     2 err22  char(50) init("022-(^6o)BAD STATUS - SWAP IN"),
  7    32     2 err23  char(50) init("023-(^6o)BAD STATUS - LOAD"),
  7    33     2 err24  char(50) init("(^6o)TALK PERMISSION NOT GRANTED"),
  7    34     2 err25  char(50) init("(^6o)WRITE ATTEMPTED ON READ-ONLY FILE - ^8a"),
  7    35     2 err26  char(50) init("(^6o)READ ATTEMPTED ON EXECUTE-ONLY FILE - ^8a"),
  7    36     2 err27  char(50) init("024-(^6o)MME FAULT"),
  7    37     2 err28  char(50) init("028-(^6o)REWIND ATTEMPTED FOR RANDOM FILE - ^8a"),
  7    38     2 err29  char(50) init("029-ILLEGAL SYSTEM SELECTION"),
  7    39     2 err30  char(50) init("134-(^6o)INVALID DRL FILACT FUNCTION #^i"),
  7    40     2 err31  char(50) init("135-(^6o)PRIVILEGED DRL FILACT REQUEST"),
  7    41     2 err32  char(50) init("138-(^6o)NO TAP* FILE FOR DRL TAPEIN"),
  7    42     2 err33  char(50) init("139-ERROR IN WRITING TAP* FILE"),
  7    43     2 err34  char(50) init("(^6o)DRL ABORT - CANNOT WRITE ABRT FILE"),
  7    44     2 err35  char(50) init("(^6o)DRL ABORT - ABRT FILE WRITTEN"),
  7    45     2 err36  char(50) init("NOT ENOUGH CORE TO RUN JOB"),
  7    46     2 err37  char(50) init("SORRY-OUT OF SWAP SPACE. TRY AGAIN."),
  7    47     2 err38  char(50) init("(^6o)FILE ADDRESS ERROR"),
  7    48     2 err39  char(50) init("(^6o)DRL ABORT - ABRT FILE I/O ERROR"),
  7    49     2 err40  char(50) init("(^6o)DRL ABORT - ABRT FILE TOO SMALL"),
  7    50     2 err41  char(50) init("(^6o)BAD STATUS FOR DRL SAVE/RESTOR - ^8a"),
  7    51     2 err42  char(50) init("(^6o)H* FILE NOT IN AFT - ^8a"),
  7    52     2 err43  char(50) init("064-EXECUTE TIME LIMIT EXCEEDED"),
  7    53     2 err44  char(50) init("025-(^6o)LOCKUP FAULT"),
  7    54     2 err45  char(50) init("065-OBJECT PROGRAM SIZE LIMIT EXCEEDED"),
  7    55     2 err46  char(50) init("(^6o)INCORRECT ENTRY TO DRL TASK"),
  7    56     2 err47  char(50) init("(^6o)H* PROGRAM NAME UNDEFINED - ^8a"),
  7    57     2 err48  char(50) init("(^6o)H* FILE CATALOG FULL - ^8a"),
  7    58     2 err49  char(50) init("(^6o)TALLY OR CHARACTER COUNT INCORRECT"),
  7    59     2 err50  char(50) init("(^6o)BAD DRL SAVE DATA LOC"),
  7    60     2 err51  char(50) init("(^6o)H* FILE NOT INITITALIZED - ^8a"),
  7    61     2 err52  char(50) init("(^6o)H* FILE MUST BE RANDOM - ^8a"),
  7    62     2 err53  char(50) init("026-(^6o)OP-NOT-COMPLETE FAULT"),
  7    63     2 err54  char(50) init("(^6o)H* FILE PROGRAM NAME REQUIRED - ^8a"),
  7    64     2 err55  char(50) init("027-(^6o)COMMAND FAULT"),
  7    65     2 err56  char(50) init("(^6o)LINKED FILE I/O CANNOT SPAN >63 LLINKS - ^8a"),
  7    66     2 err57  char(50) init("UNASSIGNED"),
  7    67     2 err58  char(50) init("(^6o)INVALID TIME FOR DRL GWAKE"),
  7    68     2 err59  char(50) init("UNASSIGNED"),
  7    69     2 err60  char(50) init("(^6o)INVALID SNUMB FOR DRL JOUT"),
  7    70     2 err61  char(50) init("(^6o)PRIVILEGED DRL"),
  7    71     2 err62  char(50) init("(^6o)INVALID DRL JOUT FUNCTION"),
  7    72     2 err63  char(50) init("MEMORY PARITY ERROR"),
  7    73     2 err64  char(50) init("SY** I/O ERROR"),
  7    74 /* The following error messages are artifacts of gtss and are not found in TSS */
  7    75     2 err100 char(50) init("DRL ADDMEM ERROR at (^6o)"),
  7    76     2 err101 char(50) init("DRL RELMEM ERROR TRUNCATE SEGMENT at (^6o)"),
  7    77     2 err102 char(50) init("DRL RELMEM ERROR SET MAX SEGMENT LENGTH"),
  7    78     2 err103 char(50) init("UNIMPLEMENTED DRL FILACT FUNCTION (^i)"),
  7    79     2 err999 char(50) init("dummy");
  7    80 
  7    81 /*   END INCLUDE FILE gtss_pnterr.incl.pl1 */
      210 
      211 
  8     1 /* BEGIN INCLUDE FILE gtss_entry_dcls.incl.pl1 */
  8     2 /*
  8     3*  Created: (Wardd Multics)  06/30/78 1624.8 mst Fri 
  8     4*  Modified: Ron Barstad  84-02-24  Fixed wrong and obsolete entries
  8     5**/
  8     6 
  8     7 /**  gtss external entry variables.		**/
  8     8 dcl  com_err_                                   entry() options(variable);
  8     9 dcl  gtss_CFP_abort_                            entry options(variable);
  8    10 dcl  gtss_CFP_break_                            entry options(variable);
  8    11 dcl  gtss_CFP_input_                            entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  8    12 dcl  gtss_CFP_output_                           entry (ptr, ptr, fixed bin(21), fixed bin(35));
  8    13 dcl  gtss_abandon_CFP_                          entry options(variable);
  8    14 dcl  gtss_abort_dump_                           entry (fixed bin(18));
  8    15 dcl  gtss_abort_subsystem_                      entry options (variable);
  8    16 dcl  gtss_abort_subsystem_$not_imp              entry (ptr, fixed bin(24));
  8    17 dcl  gtss_abs_login_banner_		        entry() returns(char(*));
  8    18 dcl  gtss_abs_logout_banner_		        entry() returns(char(*));
  8    19 dcl  gtss_abs_$abs_equiv                        entry options(variable);
  8    20 dcl  gtss_abs_$cpu_runout		        entry (ptr, char(4));
  8    21 dcl  gtss_abs_$create_absin                     entry() returns(char(*));
  8    22 dcl  gtss_abs_$dabt_check		        entry (ptr, char(4));
  8    23 dcl  gtss_abs_$get_id                           entry (char(5)) returns(char(19));
  8    24 dcl  gtss_abs_$get_drm                          entry() returns(char(*));
  8    25 dcl  gtss_adjust_size_                          entry (ptr);
  8    26 dcl  gtss_aft_$add                              entry (char(8), fixed bin(24), fixed bin(35));
  8    27 dcl  gtss_aft_$delete                           entry (char(8), fixed bin(24), fixed bin(35));
  8    28 dcl  gtss_aft_$find                             entry (char(8), fixed bin(24), fixed bin(35));
  8    29 dcl  gtss_aft_$initialize                       entry (fixed bin(35));
  8    30 dcl  gtss_ascii_bcd_                            entry (ptr, fixed bin, ptr);
  8    31 dcl  gtss_attributes_mgr_$get                   entry (ptr, fixed bin(35));
  8    32 dcl  gtss_attributes_mgr_$set                   entry (ptr, fixed bin(35));
  8    33 dcl  gtss_bcd_ascii_                            entry (ptr, fixed bin(24), ptr);
  8    34 dcl  gtss_bcd_ascii_$lc                         entry (ptr, fixed bin(24), ptr);
  8    35 dcl  gtss_break_vector_                         entry ();
  8    36 dcl  gtss_break_vector_$drl_in_progress         entry() returns(bit(1));
  8    37 dcl  gtss_break_vector_$status                  entry() returns(bit(1));
  8    38 dcl  gtss_build_                                entry options(variable);
  8    39 dcl  gtss_com_err_                              entry options(variable);
  8    40 dcl  gtss_derail_processor_                     entry (ptr, char(*), ptr, ptr, bit(1) aligned) /* called at fault time instead of signal_ */;
  8    41 dcl  gtss_derail_processor_$set                 entry options(variable);
  8    42 dcl  gtss_dq_$catp                              entry (char (5), ptr, fixed bin (18) unsigned);
  8    43 dcl  gtss_dq_$create                            entry (bit(1));
  8    44 dcl  gtss_dq_$dibp                              entry (char(5), ptr);
  8    45 dcl  gtss_dq_$entries_info		        entry (ptr, fixed bin (18) unsigned, fixed bin (18) unsigned);
  8    46 dcl  gtss_dq_$hdrp                              entry (ptr);
  8    47 dcl  gtss_dq_$mod_js		        entry (char(5), fixed bin (6) unsigned, bit (1));
  8    48 dcl  gtss_dq_$open_exc		        entry (bit(1));
  8    49 dcl  gtss_dq_$open_gen		        entry (bit(1));
  8    50 dcl  gtss_drl_abort_                            entry (ptr, fixed bin);
  8    51 dcl  gtss_drl_addmem_                           entry (ptr, fixed bin);
  8    52 dcl  gtss_drl_callss_                           entry (ptr, fixed bin);
  8    53 dcl  gtss_drl_corfil_                           entry (ptr, fixed bin);
  8    54 dcl  gtss_drl_defil_                            entry (ptr, fixed bin);
  8    55 dcl  gtss_drl_defil_$subr                       entry (ptr, ptr, ptr);
  8    56 dcl  gtss_drl_dio_                              entry (ptr, fixed bin);
  8    57 dcl  gtss_drl_drlimt_                           entry (ptr, fixed bin);
  8    58 dcl  gtss_drl_drlsav_                           entry (ptr, fixed bin);
  8    59 dcl  gtss_drl_filact_                           entry (ptr, fixed bin);
  8    60 dcl  gtss_drl_filsp_                            entry (ptr, fixed bin);
  8    61 dcl  gtss_drl_grow_                             entry (ptr, fixed bin);
  8    62 dcl  gtss_drl_gwake_                            entry (ptr, fixed bin);
  8    63 dcl  gtss_drl_jsts_                             entry (ptr, fixed bin);
  8    64 dcl  gtss_drl_kin_                              entry (ptr, fixed bin);
  8    65 dcl  gtss_drl_kotnow_                           entry (ptr, fixed bin);
  8    66 dcl  gtss_drl_kotnow_$gtss_drl_kout_            entry (ptr, fixed bin);
  8    67 dcl  gtss_drl_koutn_                            entry (ptr, fixed bin);
  8    68 dcl  gtss_drl_morlnk_                           entry (ptr, fixed bin);
  8    69 dcl  gtss_drl_msub_                             entry (ptr, fixed bin);
  8    70 dcl  gtss_drl_objtim_                           entry (ptr, fixed bin);
  8    71 dcl  gtss_drl_part_                             entry (ptr, fixed bin);
  8    72 dcl  gtss_drl_pasaft_                           entry (ptr, fixed bin);
  8    73 dcl  gtss_drl_pasdes_                           entry (ptr, fixed bin);
  8    74 dcl  gtss_drl_pasust_                           entry (ptr, fixed bin);
  8    75 dcl  gtss_drl_pdio_                             entry (ptr, fixed bin);
  8    76 dcl  gtss_drl_prgdes_                           entry (ptr, fixed bin);
  8    77 dcl  gtss_drl_pseudo_                           entry (ptr, fixed bin);
  8    78 dcl  gtss_drl_relmem_                           entry (ptr, fixed bin);
  8    79 dcl  gtss_drl_restor_                           entry (ptr, fixed bin);
  8    80 dcl  gtss_drl_retfil_                           entry (ptr, fixed bin);
  8    81 dcl  gtss_drl_return_                           entry (ptr, fixed bin);
  8    82 dcl  gtss_drl_rew_                              entry (ptr, fixed bin);
  8    83 dcl  gtss_drl_rstswh_                           entry (ptr, fixed bin);
  8    84 dcl  gtss_drl_setlno_                           entry (ptr, fixed bin);
  8    85 dcl  gtss_drl_setswh_                           entry (ptr, fixed bin);
  8    86 dcl  gtss_drl_snumb_                            entry (ptr, fixed bin);
  8    87 dcl  gtss_drl_spawn_                            entry (ptr, fixed bin);
  8    88 dcl  gtss_drl_spawn_$gtss_drl_pasflr_           entry (ptr, fixed bin);
  8    89 dcl  gtss_drl_stoppt_                           entry (ptr, fixed bin);
  8    90 dcl  gtss_drl_switch_                           entry (ptr, fixed bin);
  8    91 dcl  gtss_drl_sysret_                           entry (ptr, fixed bin);
  8    92 dcl  gtss_drl_t_cfio_                           entry (ptr, fixed bin);
  8    93 dcl  gtss_drl_t_cmov_                           entry (ptr, fixed bin);
  8    94 dcl  gtss_drl_t_err_                            entry (ptr, fixed bin);
  8    95 dcl  gtss_drl_t_goto_                           entry (ptr, fixed bin);
  8    96 dcl  gtss_drl_t_linl_                           entry (ptr, fixed bin);
  8    97 dcl  gtss_drl_t_rscc_                           entry (ptr, fixed bin);
  8    98 dcl  gtss_drl_tapein_                           entry (ptr, fixed bin);
  8    99 dcl  gtss_drl_task_                             entry (ptr, fixed bin);
  8   100 dcl  gtss_drl_termtp_                           entry (ptr, fixed bin);
  8   101 dcl  gtss_drl_time_                             entry (ptr, fixed bin);
  8   102 dcl  gtss_drun_                                 entry (bit(1));
  8   103 dcl  gtss_dsd_lookup_                           entry (char(8) var) returns(fixed bin(24));
  8   104 dcl  gtss_dsd_process_                          entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  8   105 dcl  gtss_edit_dsd_                             entry (ptr, fixed bin(21)) returns(fixed bin(24));
  8   106 dcl  gtss_mcfc_empty                            entry (char(*) var);
  8   107 dcl  gtss_expand_pathname_                      entry (ptr, char(*), char(*), fixed bin(35));
  8   108 dcl  gtss_expand_pathname_$verify_umc           entry (ptr, char(*), char(*), bit(18), fixed bin(35));
  8   109 dcl  gtss_fault_processor_                      entry options(variable);
  8   110 dcl  gtss_find_cond_frame_		        entry (char(32) var) returns(ptr);
  8   111 dcl  gtss_fault_processor_$timer_runout         entry (ptr, char(*));
  8   112 dcl  gtss_filact_error_status_                  entry (fixed bin(35))returns(bit(12));
  8   113 dcl  gtss_filact_funct02_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   114 dcl  gtss_filact_funct03_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   115 dcl  gtss_filact_funct04_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   116 dcl  gtss_filact_funct05_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   117 dcl  gtss_filact_funct08_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   118 dcl  gtss_filact_funct10_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   119 dcl  gtss_filact_funct11_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   120 dcl  gtss_filact_funct14_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   121 dcl  gtss_filact_funct18_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   122 dcl  gtss_filact_funct19_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   123 dcl  gtss_filact_funct21_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   124 dcl  gtss_filact_funct22_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  8   125 dcl  gtss_mcfc_init_                            entry (char(*) var);
  8   126 dcl  gtss_interp_prim_                          entry options(variable);
  8   127 dcl  gtss_interp_prim_$callss                   entry (char(4), ptr);
  8   128 dcl  gtss_interp_prim_$sysret                   entry options(variable);
  8   129 dcl  gtss_interp_prim_$t_goto                   entry (char(4));
  8   130 dcl  gtss_ios_change_size_                      entry (fixed bin(24), fixed bin(24), bit(1), fixed bin(24), fixed bin(35));
  8   131 dcl  gtss_ios_close_                            entry (fixed bin(24), ptr, fixed bin(35));
  8   132 dcl  gtss_ios_exchange_names_                   entry (fixed bin(24), fixed bin(24), fixed bin(24), fixed bin(35));
  8   133 dcl  gtss_ios_initialize_                       entry options(variable);
  8   134 dcl  gtss_ios_io_                               entry (fixed bin(24), ptr, ptr, fixed bin(24), fixed bin(24), fixed bin(35));
  8   135 dcl  gtss_ios_open_                             entry (fixed bin(24), char(168), char(32), bit(6), bit(1), ptr, ptr, fixed bin(35));
  8   136 dcl  gtss_ios_position_                         entry (fixed bin(24), fixed bin(24), fixed bin(24), bit(6), ptr);
  8   137 dcl  gtss_mcfc_$delete		        entry (fixed bin(24), char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  8   138 dcl  gtss_mcfc_$open                            entry (char(*), char(*), bit(6), bit(36) aligned, ptr, fixed bin(35));
  8   139 dcl  gtss_mcfc_$close                           entry (char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  8   140 dcl  gtss_read_starCFP_                         entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  8   141 dcl  gtss_read_starCFP_$last_os                 entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  8   142 dcl  gtss_run_subsystem_                        entry (fixed bin(24));
  8   143 dcl  gtss_run_subsystem_$finish                 entry options(variable);
  8   144 dcl  gtss_run_subsystem_$restor                 entry (fixed bin(24), ptr);
  8   145 dcl  gtss_run_subsystem_$restor_perm            entry (fixed bin(24), ptr, fixed bin(18));
  8   146 dcl  gtss_set_slave_                            entry (fixed bin (24), ptr);
  8   147 dcl  gtss_set_slave_$load_bar                   entry (fixed bin (17));
  8   148 dcl  gtss_update_safe_store_                    entry (ptr);
  8   149 dcl  gtss_verify_access_		        entry (char(*), char(*), fixed bin(24), bit(6), bit(12) aligned);
  8   150 dcl  gtss_verify_access_$check_forced_access    entry (char(*), char(*), fixed bin(24));
  8   151 dcl  gtss_write_starCFP_                        entry (ptr, ptr, fixed bin(21), fixed bin(35));
  8   152 /*   END INCLUDE FILE gtss_entry_dcls.incl.pl1 */
      212 
      213 
  9     1 /* BEGIN INCLUDE FILE gtss_starCF_.incl.pl1 */
  9     2 /*
  9     3*  Created: (Wardd Multics)  03/20/79 1816.6 mst Tue 
  9     4**/
  9     5 
  9     6 /*
  9     7*   gtss_CFP_input_ data structure to provide
  9     8*   for accessing the current command file.
  9     9*
  9    10*   Changed: Al Dupuis 05/17/79 to get rid of nested get_line, put_chars concept.
  9    11**/
  9    12 dcl	1 gtss_starCF_$FILE	aligned static ext
  9    13 ,	  3 select_sequence
  9    14 ,	    4 OP1			/* Seek operation. */
  9    15 ,	      5 Device_Command	bit(06)unal
  9    16 ,	      5 zeroes_1		fixed bin(12)unsigned unal
  9    17 ,	      5 IOC_Command		bit(05)unal
  9    18 ,	      5 zeroes_2		fixed bin(01)unsigned unal
  9    19 ,	      5 Control		fixed bin(06)unsigned unal
  9    20 ,	      5 Count		fixed bin(06)unsigned unal
  9    21 
  9    22 ,	    4 ID1
  9    23 ,	      5 fcb_loc		bit(18)unal
  9    24 ,	      5 DCW_list_loc	bit(18)unal
  9    25 
  9    26 ,	    4 OP2			/* Write opteration. */
  9    27 ,	      5 Device_Command	bit(06)unal
  9    28 ,	      5 zeroes_1		fixed bin(12)unsigned unal
  9    29 ,	      5 IOC_Command		bit(05)unal
  9    30 ,	      5 zeroes_2		fixed bin(01)unsigned unal
  9    31 ,	      5 Control		fixed bin(06)unsigned unal
  9    32 ,	      5 Count		fixed bin(06)unsigned unal
  9    33 
  9    34 ,	    4 ID2
  9    35 ,	      5 fcb_loc		bit(18)unal
  9    36 ,	      5 DCW_list_loc	bit(18)unal
  9    37 
  9    38 ,	    4 RETURN_WORD
  9    39 ,	      5 Status_loc		bit(18)unal
  9    40 ,	      5 Courtesy_Call_loc	bit(18)unal
  9    41 
  9    42 ,	  3 Seek_Word
  9    43 ,	    4 Seek_loc		bit(18)unal
  9    44 ,	    4 Seek_count		fixed bin(18)unsigned unal
  9    45 ,	  3 Seek_Address		fixed bin(35)
  9    46 ,	  3 STATUS		bit(72) unal
  9    47 
  9    48 ,	  3 DCW
  9    49 ,	    4 memory_loc		bit(18)unal
  9    50 ,	    4 zeroes_3		fixed bin(03)unsigned unal
  9    51 ,	    4 action_code		fixed bin(03)unsigned unal
  9    52 ,	    4 word_count		fixed bin(12)unsigned unal
  9    53 
  9    54 ,	  3 RECORD
  9    55 ,	    4 no_characters		fixed bin(18)unsigned unal
  9    56 ,	    4 zeroes_4		bit(18)unal
  9    57 ,	    4 chars		char(252)
  9    58 
  9    59 /* Stack to accomodate nested command file processing. */
  9    60 ,	  3 cf
  9    61 ,	    4 top			fixed bin(24)
  9    62 ,	    4 aft_indx		fixed bin(24)
  9    63 ,             4 first_time		bit (1) unaligned
  9    64 ,             4 exclude_on    	bit (1) unaligned
  9    65 ;
  9    66 
  9    67 /*   END INCLUDE FILE gtss_starCF_.incl.pl1 */
      214 
      215      end						/* gtss_abort_subsystem_ */;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/10/84  1028.8  gtss_abort_subsystem_.pl1         >spec>on>7105>gtss_abort_subsystem_.pl1
198          1    12/10/84  1029.8  gtss_spa.incl.pl1                 >spec>on>7105>gtss_spa.incl.pl1
200          2    09/09/83  1713.8  gtss_ext_.incl.pl1                >ldd>include>gtss_ext_.incl.pl1
202          3    12/15/83  1100.4  mc.incl.pl1                       >ldd>include>mc.incl.pl1
204          4    09/09/83  1714.0  gtss_prgdes_.incl.pl1             >ldd>include>gtss_prgdes_.incl.pl1
206          5    09/09/83  1714.3  gtss_ust_ext_.incl.pl1            >ldd>include>gtss_ust_ext_.incl.pl1
208          6    09/09/83  1713.3  gtss_drl_names.incl.pl1           >ldd>include>gtss_drl_names.incl.pl1
210          7    12/10/84  1029.8  gtss_pnterr.incl.pl1              >spec>on>7105>gtss_pnterr.incl.pl1
212          8    12/10/84  1029.7  gtss_entry_dcls.incl.pl1          >spec>on>7105>gtss_entry_dcls.incl.pl1
214          9    09/09/83  1714.2  gtss_starCF_.incl.pl1             >ldd>include>gtss_starCF_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
DRL_NAME                        001537 constant        varying char(7)          initial array dcl 6-7 set ref 177*
addr                                                   builtin function         dcl 70 ref 112 135 174 175 175
arg_count                       000100 automatic       fixed bin(17,0)          dcl 71 set ref 95* 96 97* 188
arg_list_ptr                    000102 automatic       pointer                  initial dcl 72 set ref 72* 189* 190*
b0_17                    24            based           bit(18)                  level 3 in structure "gtss_spa" packed unaligned
                                                                                  dcl 1-9 in procedure "gtss_abort_subsystem_" set
                                                                                  ref 143*
b0_17                   171     000030 external static fixed bin(17,0)          array level 4 in structure "gtss_ust_ext_$ust"
                                                                                  packed unaligned dcl 5-16 in procedure
                                                                                  "gtss_abort_subsystem_" set ref 177
b0_17                   170     000030 external static fixed bin(17,0)          level 4 in structure "gtss_ust_ext_$ust" packed
                                                                                  unaligned dcl 5-16 in procedure
                                                                                  "gtss_abort_subsystem_" set ref 175
b0_17                    27            based           bit(1)                   level 3 in structure "gtss_spa" packed unaligned
                                                                                  dcl 1-9 in procedure "gtss_abort_subsystem_" ref
                                                                                  160
b18                      27(01)        based           bit(1)                   level 3 packed unaligned dcl 1-9 set ref 133 151
                                                                                  155*
b18_35                   24(18)        based           fixed bin(17,0)          level 3 packed unaligned dcl 1-9 set ref 144* 147*
b19                      27(02)        based           bit(1)                   level 3 packed unaligned dcl 1-9 set ref 126 127*
b20                      27(03)        based           bit(1)                   level 3 packed unaligned dcl 1-9 ref 133
b8                       54(08) 000030 external static bit(1)                   level 4 packed unaligned dcl 5-16 set ref 102 118
caller_name                            parameter       char                     unaligned dcl 73 ref 14
com_err_                        000032 constant        entry                    external dcl 8-8 ref 97
com_err_$suppress_name          000010 constant        entry                    external dcl 74 ref 107 135 177 191
cu_$arg_count                   000012 constant        entry                    external dcl 75 ref 95
cu_$arg_list_ptr                000014 constant        entry                    external dcl 76 ref 189
drl_abort_code                  000104 automatic       fixed bin(18,0)          dcl 77 set ref 125* 128* 135 135 144 144
drl_type                               parameter       fixed bin(17,0)          dcl 171 ref 170 177
error_structure                        based           char(50)                 array unaligned dcl 78 ref 135
fixed                                                  builtin function         dcl 172 ref 121 135 135 143 143 175 175 177 177
gcos_error_code                        parameter       fixed bin(18,0)          dcl 79 ref 14 118 121 135 144 147
gseg                            000106 automatic       pointer                  initial dcl 80 set ref 80* 115* 126 127 133 133 143
                                                                                  144 147 148 151 155 160
gtss_CFP_abort_                 000034 constant        entry                    external dcl 8-9 ref 102
gtss_abort_dump_                000036 constant        entry                    external dcl 8-14 ref 128
gtss_drl_sysret_                000040 constant        entry                    external dcl 8-91 ref 109
gtss_ext_$drl_rtrn              000020 external static label variable           array dcl 2-13 ref 151 163 183
gtss_ext_$gtss_slave_area_seg   000022 external static pointer                  array dcl 2-20 ref 115
gtss_ext_$stack_level_          000024 external static fixed bin(17,0)          dcl 2-31 ref 115 151 163 183
gtss_fail                       000110 stack reference condition                dcl 81 ref 99 110
gtss_pnterr                     000000 constant        structure                level 1 packed unaligned dcl 7-9 set ref 135
gtss_prgdes_ext_$prgdes         000026 external static structure                array level 1 dcl 4-77
gtss_spa                               based           structure                level 1 dcl 1-9
gtss_ust                        000030 external static structure                level 2 dcl 5-16 set ref 175
gtss_ust_ext_$ust               000030 external static structure                level 1 dcl 5-16
i                               000116 automatic       fixed bin(24,0)          dcl 82 set ref 175* 177
ilc                       4            based           bit(18)                  level 2 packed unaligned dcl 3-56 set ref 135 135
                                                                                  143 167* 177 177
instruction_counter             000117 automatic       bit(18)                  unaligned dcl 83 set ref 160* 163 163 167
ioa_$general_rs                 000016 constant        entry                    external dcl 85 ref 190
labrt                    24            based           structure                level 2 dcl 1-9 set ref 148
lcfst                   133     000030 external static structure                level 3 dcl 5-16
lerrm                    25     000030 external static bit(36)                  level 3 dcl 5-16 set ref 121*
lflg2                    54     000030 external static structure                level 3 dcl 5-16
licec                   157     000030 external static structure                level 3 dcl 5-16 set ref 148*
limit                    22(18) 000030 external static bit(18)                  level 4 packed unaligned dcl 5-16 set ref 159
lower_limit                     000120 automatic       bit(18)                  unaligned dcl 86 set ref 158* 163
lprgs                   171     000030 external static structure                array level 3 dcl 5-16
lsize                    22     000030 external static structure                level 3 dcl 5-16
lwrap                    27            based           structure                level 2 dcl 1-9
lxxx                    170     000030 external static structure                level 3 dcl 5-16 set ref 175
mc                                     based           structure                level 1 dcl 3-12
mcp                             000224 automatic       pointer                  dcl 3-10 set ref 105* 106 112 173* 174
mcpp                                   parameter       pointer                  dcl 87 ref 14 105 170 173
null                                                   builtin function         dcl 88 ref 72 80 106 109 109
rtn_string                      000121 automatic       char(256)                unaligned dcl 89 set ref 190* 191 191 191
rtn_string_len                  000221 automatic       fixed bin(17,0)          dcl 90 set ref 190* 191 191 191 191
scu                                    based           structure                level 1 dcl 3-56 in procedure
                                                                                  "gtss_abort_subsystem_"
scu                      30            based           bit(36)                  array level 2 in structure "mc" packed unaligned
                                                                                  dcl 3-12 in procedure "gtss_abort_subsystem_" set
                                                                                  ref 112 174
scup                            000226 automatic       pointer                  dcl 3-54 set ref 112* 135 135 143 167 174* 177 177
ss_name                         000026 external static char(4)                  array level 2 dcl 4-77 set ref 177*
start_term              133(18) 000030 external static fixed bin(18,0)          level 4 packed unsigned unaligned dcl 5-16 set ref
                                                                                  120*
upper_limit                     000222 automatic       bit(18)                  unaligned dcl 91 set ref 159* 163

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
abx                                    internal static fixed bin(17,0)          initial dcl 3-42
apx                                    internal static fixed bin(17,0)          initial dcl 3-42
bbx                                    internal static fixed bin(17,0)          initial dcl 3-42
bpx                                    internal static fixed bin(17,0)          initial dcl 3-42
current_level                          automatic       fixed bin(24,0)          dcl 92
gtss_CFP_break_                 000000 constant        entry                    external dcl 8-10
gtss_CFP_input_                 000000 constant        entry                    external dcl 8-11
gtss_CFP_output_                000000 constant        entry                    external dcl 8-12
gtss_abandon_CFP_               000000 constant        entry                    external dcl 8-13
gtss_abort_subsystem_           000000 constant        entry                    external dcl 8-15
gtss_abort_subsystem_$not_imp   000000 constant        entry                    external dcl 8-16
gtss_abs_$abs_equiv             000000 constant        entry                    external dcl 8-19
gtss_abs_$cpu_runout            000000 constant        entry                    external dcl 8-20
gtss_abs_$create_absin          000000 constant        entry                    external dcl 8-21
gtss_abs_$dabt_check            000000 constant        entry                    external dcl 8-22
gtss_abs_$get_drm               000000 constant        entry                    external dcl 8-24
gtss_abs_$get_id                000000 constant        entry                    external dcl 8-23
gtss_abs_login_banner_          000000 constant        entry                    external dcl 8-17
gtss_abs_logout_banner_         000000 constant        entry                    external dcl 8-18
gtss_adjust_size_               000000 constant        entry                    external dcl 8-25
gtss_aft_$add                   000000 constant        entry                    external dcl 8-26
gtss_aft_$delete                000000 constant        entry                    external dcl 8-27
gtss_aft_$find                  000000 constant        entry                    external dcl 8-28
gtss_aft_$initialize            000000 constant        entry                    external dcl 8-29
gtss_ascii_bcd_                 000000 constant        entry                    external dcl 8-30
gtss_attributes_mgr_$get        000000 constant        entry                    external dcl 8-31
gtss_attributes_mgr_$set        000000 constant        entry                    external dcl 8-32
gtss_bcd_ascii_                 000000 constant        entry                    external dcl 8-33
gtss_bcd_ascii_$lc              000000 constant        entry                    external dcl 8-34
gtss_break_vector_              000000 constant        entry                    external dcl 8-35
gtss_break_vector_$drl_in_progress
                                000000 constant        entry                    external dcl 8-36
gtss_break_vector_$status       000000 constant        entry                    external dcl 8-37
gtss_build_                     000000 constant        entry                    external dcl 8-38
gtss_com_err_                   000000 constant        entry                    external dcl 8-39
gtss_derail_processor_          000000 constant        entry                    external dcl 8-40
gtss_derail_processor_$set      000000 constant        entry                    external dcl 8-41
gtss_dq_$catp                   000000 constant        entry                    external dcl 8-42
gtss_dq_$create                 000000 constant        entry                    external dcl 8-43
gtss_dq_$dibp                   000000 constant        entry                    external dcl 8-44
gtss_dq_$entries_info           000000 constant        entry                    external dcl 8-45
gtss_dq_$hdrp                   000000 constant        entry                    external dcl 8-46
gtss_dq_$mod_js                 000000 constant        entry                    external dcl 8-47
gtss_dq_$open_exc               000000 constant        entry                    external dcl 8-48
gtss_dq_$open_gen               000000 constant        entry                    external dcl 8-49
gtss_drl_abort_                 000000 constant        entry                    external dcl 8-50
gtss_drl_addmem_                000000 constant        entry                    external dcl 8-51
gtss_drl_callss_                000000 constant        entry                    external dcl 8-52
gtss_drl_corfil_                000000 constant        entry                    external dcl 8-53
gtss_drl_defil_                 000000 constant        entry                    external dcl 8-54
gtss_drl_defil_$subr            000000 constant        entry                    external dcl 8-55
gtss_drl_dio_                   000000 constant        entry                    external dcl 8-56
gtss_drl_drlimt_                000000 constant        entry                    external dcl 8-57
gtss_drl_drlsav_                000000 constant        entry                    external dcl 8-58
gtss_drl_filact_                000000 constant        entry                    external dcl 8-59
gtss_drl_filsp_                 000000 constant        entry                    external dcl 8-60
gtss_drl_grow_                  000000 constant        entry                    external dcl 8-61
gtss_drl_gwake_                 000000 constant        entry                    external dcl 8-62
gtss_drl_jsts_                  000000 constant        entry                    external dcl 8-63
gtss_drl_kin_                   000000 constant        entry                    external dcl 8-64
gtss_drl_kotnow_                000000 constant        entry                    external dcl 8-65
gtss_drl_kotnow_$gtss_drl_kout_ 000000 constant        entry                    external dcl 8-66
gtss_drl_koutn_                 000000 constant        entry                    external dcl 8-67
gtss_drl_morlnk_                000000 constant        entry                    external dcl 8-68
gtss_drl_msub_                  000000 constant        entry                    external dcl 8-69
gtss_drl_objtim_                000000 constant        entry                    external dcl 8-70
gtss_drl_part_                  000000 constant        entry                    external dcl 8-71
gtss_drl_pasaft_                000000 constant        entry                    external dcl 8-72
gtss_drl_pasdes_                000000 constant        entry                    external dcl 8-73
gtss_drl_pasust_                000000 constant        entry                    external dcl 8-74
gtss_drl_pdio_                  000000 constant        entry                    external dcl 8-75
gtss_drl_prgdes_                000000 constant        entry                    external dcl 8-76
gtss_drl_pseudo_                000000 constant        entry                    external dcl 8-77
gtss_drl_relmem_                000000 constant        entry                    external dcl 8-78
gtss_drl_restor_                000000 constant        entry                    external dcl 8-79
gtss_drl_retfil_                000000 constant        entry                    external dcl 8-80
gtss_drl_return_                000000 constant        entry                    external dcl 8-81
gtss_drl_rew_                   000000 constant        entry                    external dcl 8-82
gtss_drl_rstswh_                000000 constant        entry                    external dcl 8-83
gtss_drl_setlno_                000000 constant        entry                    external dcl 8-84
gtss_drl_setswh_                000000 constant        entry                    external dcl 8-85
gtss_drl_snumb_                 000000 constant        entry                    external dcl 8-86
gtss_drl_spawn_                 000000 constant        entry                    external dcl 8-87
gtss_drl_spawn_$gtss_drl_pasflr_
                                000000 constant        entry                    external dcl 8-88
gtss_drl_stoppt_                000000 constant        entry                    external dcl 8-89
gtss_drl_switch_                000000 constant        entry                    external dcl 8-90
gtss_drl_t_cfio_                000000 constant        entry                    external dcl 8-92
gtss_drl_t_cmov_                000000 constant        entry                    external dcl 8-93
gtss_drl_t_err_                 000000 constant        entry                    external dcl 8-94
gtss_drl_t_goto_                000000 constant        entry                    external dcl 8-95
gtss_drl_t_linl_                000000 constant        entry                    external dcl 8-96
gtss_drl_t_rscc_                000000 constant        entry                    external dcl 8-97
gtss_drl_tapein_                000000 constant        entry                    external dcl 8-98
gtss_drl_task_                  000000 constant        entry                    external dcl 8-99
gtss_drl_termtp_                000000 constant        entry                    external dcl 8-100
gtss_drl_time_                  000000 constant        entry                    external dcl 8-101
gtss_drun_                      000000 constant        entry                    external dcl 8-102
gtss_dsd_lookup_                000000 constant        entry                    external dcl 8-103
gtss_dsd_process_               000000 constant        entry                    external dcl 8-104
gtss_edit_dsd_                  000000 constant        entry                    external dcl 8-105
gtss_expand_pathname_           000000 constant        entry                    external dcl 8-107
gtss_expand_pathname_$verify_umc
                                000000 constant        entry                    external dcl 8-108
gtss_ext_$CFP_bits                     external static structure                level 1 dcl 2-37
gtss_ext_$SYstarstar_file_no           external static fixed bin(24,0)          dcl 2-33
gtss_ext_$aem                          external static fixed bin(17,0)          dcl 2-8
gtss_ext_$aft                          external static structure                level 1 dcl 2-78
gtss_ext_$bad_drl_rtrn                 external static label variable           dcl 2-9
gtss_ext_$com_reg                      external static structure                level 1 dcl 2-45
gtss_ext_$db                           external static bit(1)                   array unaligned dcl 2-10
gtss_ext_$deferred_catalogs_ptr        external static pointer                  dcl 2-11
gtss_ext_$dispose_of_drl               external static label variable           dcl 2-12
gtss_ext_$drm_path                     external static char(168)                unaligned dcl 2-14
gtss_ext_$drun_jid                     external static char(5)                  unaligned dcl 2-15
gtss_ext_$event_channel                external static fixed bin(71,0)          dcl 2-16
gtss_ext_$fast_lib                     external static structure                level 1 dcl 2-98
gtss_ext_$finished                     external static label variable           dcl 2-17
gtss_ext_$flags                        external static structure                level 1 dcl 2-60
gtss_ext_$gdb_name                     external static char(8)                  unaligned dcl 2-18
gtss_ext_$get_line                     external static entry variable           dcl 2-19
gtss_ext_$hcs_work_area_ptr            external static pointer                  dcl 2-21
gtss_ext_$homedir                      external static char(64)                 unaligned dcl 2-22
gtss_ext_$last_k_was_out               external static bit(1)                   dcl 2-23
gtss_ext_$mcfc                         external static structure                level 1 dcl 2-109
gtss_ext_$pdir                         external static varying char(168)        dcl 2-24
gtss_ext_$popup_from_pi                external static label variable           dcl 2-25
gtss_ext_$ppt                          external static pointer                  dcl 2-94
gtss_ext_$process_type                 external static fixed bin(17,0)          dcl 2-26
gtss_ext_$put_chars                    external static entry variable           dcl 2-27
gtss_ext_$restart_from_pi              external static label variable           dcl 2-28
gtss_ext_$restart_seg_ptr              external static pointer                  dcl 2-29
gtss_ext_$sig_ptr                      external static pointer                  dcl 2-30
gtss_ext_$statistics                   external static structure                level 1 dcl 2-72
gtss_ext_$suspended_process            external static bit(1)                   unaligned dcl 2-32
gtss_ext_$user_id                      external static varying char(26)         dcl 2-34
gtss_ext_$work_area_ptr                external static pointer                  dcl 2-35
gtss_fault_processor_           000000 constant        entry                    external dcl 8-109
gtss_fault_processor_$timer_runout
                                000000 constant        entry                    external dcl 8-111
gtss_filact_error_status_       000000 constant        entry                    external dcl 8-112
gtss_filact_funct02_            000000 constant        entry                    external dcl 8-113
gtss_filact_funct03_            000000 constant        entry                    external dcl 8-114
gtss_filact_funct04_            000000 constant        entry                    external dcl 8-115
gtss_filact_funct05_            000000 constant        entry                    external dcl 8-116
gtss_filact_funct08_            000000 constant        entry                    external dcl 8-117
gtss_filact_funct10_            000000 constant        entry                    external dcl 8-118
gtss_filact_funct11_            000000 constant        entry                    external dcl 8-119
gtss_filact_funct14_            000000 constant        entry                    external dcl 8-120
gtss_filact_funct18_            000000 constant        entry                    external dcl 8-121
gtss_filact_funct19_            000000 constant        entry                    external dcl 8-122
gtss_filact_funct21_            000000 constant        entry                    external dcl 8-123
gtss_filact_funct22_            000000 constant        entry                    external dcl 8-124
gtss_find_cond_frame_           000000 constant        entry                    external dcl 8-110
gtss_interp_prim_               000000 constant        entry                    external dcl 8-126
gtss_interp_prim_$callss        000000 constant        entry                    external dcl 8-127
gtss_interp_prim_$sysret        000000 constant        entry                    external dcl 8-128
gtss_interp_prim_$t_goto        000000 constant        entry                    external dcl 8-129
gtss_ios_change_size_           000000 constant        entry                    external dcl 8-130
gtss_ios_close_                 000000 constant        entry                    external dcl 8-131
gtss_ios_exchange_names_        000000 constant        entry                    external dcl 8-132
gtss_ios_initialize_            000000 constant        entry                    external dcl 8-133
gtss_ios_io_                    000000 constant        entry                    external dcl 8-134
gtss_ios_open_                  000000 constant        entry                    external dcl 8-135
gtss_ios_position_              000000 constant        entry                    external dcl 8-136
gtss_mcfc_$close                000000 constant        entry                    external dcl 8-139
gtss_mcfc_$delete               000000 constant        entry                    external dcl 8-137
gtss_mcfc_$open                 000000 constant        entry                    external dcl 8-138
gtss_mcfc_empty                 000000 constant        entry                    external dcl 8-106
gtss_mcfc_init_                 000000 constant        entry                    external dcl 8-125
gtss_read_starCFP_              000000 constant        entry                    external dcl 8-140
gtss_read_starCFP_$last_os      000000 constant        entry                    external dcl 8-141
gtss_run_subsystem_             000000 constant        entry                    external dcl 8-142
gtss_run_subsystem_$finish      000000 constant        entry                    external dcl 8-143
gtss_run_subsystem_$restor      000000 constant        entry                    external dcl 8-144
gtss_run_subsystem_$restor_perm 000000 constant        entry                    external dcl 8-145
gtss_set_slave_                 000000 constant        entry                    external dcl 8-146
gtss_set_slave_$load_bar        000000 constant        entry                    external dcl 8-147
gtss_starCF_$FILE                      external static structure                level 1 dcl 9-12
gtss_update_safe_store_         000000 constant        entry                    external dcl 8-148
gtss_verify_access_             000000 constant        entry                    external dcl 8-149
gtss_verify_access_$check_forced_access
                                000000 constant        entry                    external dcl 8-150
gtss_write_starCFP_             000000 constant        entry                    external dcl 8-151
ioa_                            000000 constant        entry                    external dcl 84
lbx                                    internal static fixed bin(17,0)          initial dcl 3-42
lpx                                    internal static fixed bin(17,0)          initial dcl 3-42
prgdes_ov                              based           structure                array level 1 dcl 4-100
sbx                                    internal static fixed bin(17,0)          initial dcl 3-42
scux                                   based           structure                level 1 dcl 3-207
spx                                    internal static fixed bin(17,0)          initial dcl 3-42

NAMES DECLARED BY EXPLICIT CONTEXT.
gtss_abort_subsystem_           002241 constant        entry                    external dcl 14
not_imp                         002644 constant        entry                    external dcl 170
pr_msg                          002767 constant        entry                    internal dcl 185 ref 108 139

NAMES DECLARED BY CONTEXT OR IMPLICATION.
binary                                                 builtin function         ref 158
bit                                                    builtin function         ref 121 143 158
rel                                                    builtin function         ref 175 175
substr                                                 builtin function         ref 191 191 191

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      3322        3364    3121        3332
Length      3746    3121        42         346     200           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gtss_abort_subsystem_               310 external procedure  is an external procedure.  
pr_msg                                  internal procedure  shares stack frame of external procedure gtss_abort_subsystem_.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gtss_abort_subsystem_    000100 arg_count                   gtss_abort_subsystem_
                         000102 arg_list_ptr                gtss_abort_subsystem_
                         000104 drl_abort_code              gtss_abort_subsystem_
                         000106 gseg                        gtss_abort_subsystem_
                         000116 i                           gtss_abort_subsystem_
                         000117 instruction_counter         gtss_abort_subsystem_
                         000120 lower_limit                 gtss_abort_subsystem_
                         000121 rtn_string                  gtss_abort_subsystem_
                         000221 rtn_string_len              gtss_abort_subsystem_
                         000222 upper_limit                 gtss_abort_subsystem_
                         000224 mcp                         gtss_abort_subsystem_
                         000226 scup                        gtss_abort_subsystem_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_cs            call_ext_out_desc   call_ext_out        return              tra_label_var       signal
shorten_stack       ext_entry           ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      com_err_$suppress_name        cu_$arg_count                 cu_$arg_list_ptr
gtss_CFP_abort_               gtss_abort_dump_              gtss_drl_sysret_              ioa_$general_rs

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
gtss_ext_$drl_rtrn            gtss_ext_$gtss_slave_area_seg gtss_ext_$stack_level_        gtss_prgdes_ext_$prgdes
gtss_ust_ext_$ust




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     72 002230        80 002232        14 002235        95 002255        96 002264        97 002267        99 002323
    102 002326       105 002337       106 002343       107 002347       108 002377       109 002400       110 002414
    112 002417       115 002422       118 002430       120 002437       121 002441       125 002447       126 002450
    127 002453       128 002455       133 002463       135 002472       139 002546       143 002547       144 002561
    147 002571       148 002573       151 002577       155 002607       158 002611       159 002616       160 002621
    163 002624       167 002636       168 002637       170 002640       173 002652       174 002656       175 002660
    177 002700       183 002761       185 002767       188 002770       189 002773       190 003002       191 003047
    194 003116       195 003117


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
