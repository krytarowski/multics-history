	COMPILATION LISTING OF SEGMENT !BBBJPMLHffdlpx
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/10/84  1133.6 mst Mon
	    Options: table map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 gtss_dfd_ext_:proc;
        7 
        8 /* Generate object for "gtss_dfd_ext_" data.
        9*
       10*   Author:    Dave Ward 1981
       11*   Modified:  Ron Barstad  83-07-21  Remove dependency on ted_com, add include file
       12* */
       13 /** Initialize cds_args **/
       14 
       15 	cds_args_ptr=addr(space_for_cds_args);
       16 	unspec(space_for_cds_args)="0"b;
       17 
       18 /** Reference structure input to cds to assure it is in runtime table. **/
       19 
       20 	if addr(gtss_dfd_ext_)=null() then ;
       21 
       22 /** No text section **/
       23 	cds_args_ptr -> cds_args.sections (1).p = null ();
       24 	cds_args_ptr -> cds_args.sections (1).len = 0;
       25 	cds_args_ptr -> cds_args.sections (1).struct_name = "NO_TEXT";
       26 
       27 /** Static section **/
       28 	cds_args_ptr -> cds_args.sections (2).p = addr (gtss_dfd_ext_);	/* Caller's data. */
       29 	cds_args_ptr -> cds_args.sections (2).len = size (gtss_dfd_ext_);	/* No. words in data structure. */
       30 	cds_args_ptr -> cds_args.sections (2).struct_name = "gtss_dfd_ext_";
       31 
       32 	cds_args_ptr -> cds_args.seg_name = "gtss_dfd_ext_";	/* Entryname of object segment. */
       33 	cds_args_ptr -> cds_args.num_exclude_names = 0;		/* All level 2 names are entry points. */
       34 	cds_args_ptr -> cds_args.exclude_array_ptr = null ();
       35 	cds_args_ptr -> cds_args.switches.defs_in_link = "0"b;	/* Definitions contiguous to text section. */
       36 	cds_args_ptr -> cds_args.switches.separate_static = "0"b;	/* Static in linkage section (to bind). */
       37 	cds_args_ptr -> cds_args.switches.have_text = "0"b;	/* No text section. */
       38 	cds_args_ptr -> cds_args.switches.have_static = "1"b;	/* There is a static section. */
       39 	cds_args_ptr -> cds_args.switches.pad = "0"b;		/* Must be zeroes (see create_data_segment_). */
       40 
       41 	call create_data_segment_ (cds_args_ptr, code);
       42 	if code ^= 0 
       43 	   then 
       44 	      call com_err_ (code, "cds_gtss_dfd_ext_");
       45 	   else 
       46 	      call com_err_( 0,"gtss_dfd_ext_","Object for gtss_dfd_ext_ created [^i words].",size(gtss_dfd_ext_));
       47 
       48 	return;
       49 
       50 /** Data for cds **/
       51 dcl  addr                     builtin;
       52 dcl  cds_args_ptr             ptr init(null());
       53 dcl  code                     fixed bin(35);
       54 dcl  com_err_                 entry options(variable);
       55 dcl  create_data_segment_     entry(ptr,fixed bin(35));
       56 dcl  null                     builtin;
       57 dcl  size                     builtin;
       58 dcl  unspec                   builtin;
       59 dcl  1 space_for_cds_args     aligned like cds_args;
       60 
       61 /** This data structure must exactly match that of gtss_dfd_ext_.incl.pl1 **/
       62 
       63 dcl 1 gtss_dfd_ext_ aligned,
       64       2 disk_file_data (41) like gtss_dfd_ext_$disk_file_data;
       65 
  1     1 /* BEGIN INCLUDE FILE gtss_dfd_ext_.incl.pl1 */
  1     2 /*
  1     3*  Created:  (Wardd Multics)  06/09/78 1650.6 mst Fri 
  1     4**/
  1     5 
  1     6 dcl 1 gtss_dfd_ext_$disk_file_data (41) aligned ext,		/* disk_file_data structure */
  1     7 
  1     8     3 gtss_disk,
  1     9       4 dir_name char (168) unal,			/* containing directory for file */
  1    10       4 entry_name char (32) unal,			/* entry name for file */
  1    11       4 fcb_ptr ptr aligned,				/* ptr to file control block */
  1    12       4 msf_array_ptr ptr,				/* Pointer to an array of pointers for a msf. Each
  1    13*						   component which has been accessed has a corresponding
  1    14*						   initialized pointer.  Currently 500 components
  1    15*						   are supported. */
  1    16       4 single_segment_ptr ptr,			/* Pointer to segment for single segment file */
  1    17       4 indicators aligned,				/* one word of flags */
  1    18 
  1    19         5 msf bit (1) unaligned,			/* 1=msf segment | 0= single segment */
  1    20         5 protected_file bit (1) unaligned,		/* 1=file uses protections | 0= unprotected */
  1    21         5 fill bit (34) unal,
  1    22 
  1    23       4 permissions aligned,
  1    24         5 read bit (1) unaligned,			/* 1=read permission  */
  1    25         5 execute bit (1) unaligned,			/* 1=execute permission */
  1    26         5 write bit (1) unaligned,			/* 1=write permission */
  1    27         5 fill2 bit (33) unaligned,			/* unused at this time */
  1    28 
  1    29       4 access_mode bit (6) aligned,			/* contains the mode by which the file was accessed */
  1    30       4 component fixed bin,				/* current component value (first component = 0) */
  1    31       4 offset fixed bin (24),			/* current word offset in the component */
  1    32       4 file_position fixed bin (30),			/* current file position in words */
  1    33       4 file_size fixed bin (30),			/* size of file in words */
  1    34       4 no_components fixed bin (24),			/* number of components for a msf */
  1    35       4 attributes_ptr ptr,				/* Pointer to the attributes structure
  1    36*						   for this file. (See gtss_file_attributes.incl.pl1) */
  1    37 
  1    38       4 pat_body,
  1    39 
  1    40         5 word_0,
  1    41 	6 defective bit (1) unal,			/* 1 = file has defective space */
  1    42 	6 io_errors bit (1) unal,			/* 1 = I/O errors encountered on file */
  1    43 	6 reserved bit (2) unal,			/* Reserved for GCOS */
  1    44 	6 sct bit (12) unal,			/* address of SCT for device on which
  1    45*						   file begins or if cataloged,
  1    46*						   for device with file catalog entry */
  1    47 	6 reserved2 bit (2) unal,			/* Reserved for GCOS */
  1    48 
  1    49         5 word_1,
  1    50 	6 io_time fixed bin (35),			/* I/O time for this file */
  1    51 
  1    52         5 word_2,
  1    53 	6 protected bit (1) unal,			/* 1 = file has protected allocation */
  1    54 	6 hash_code bit (5) unal,			/* hash code of user name under which
  1    55*						   file is cataloged */
  1    56 	6 not_cat bit (1) unal,			/* 1 = file is not cataloged */
  1    57 	6 last_desc bit (1) unal,			/* 1 = last descriptor for file is not in memory */
  1    58 	6 random bit (1) unal,			/* 1 = access to file is random */
  1    59 	6 perm bit (1) unal,			/* 1 = file space is permanently assigned */
  1    60 	6 first_desc bit (1) unal,			/* 1 = first descriptor for file is not in memory */
  1    61 	6 creator bit (1) unal,			/* 1 = user is not creator of file */
  1    62 	6 disposition bit (2) unal,			/* Abort disposition code
  1    63*						   00 = Release
  1    64*						   01 = Dismount
  1    65*						   10 = Save
  1    66*						   11 = Continue */
  1    67 	6 ids1 bit (1) unal,			/* 1 = file is an I-D-S/I file */
  1    68 	6 write_performed bit (1) unal,		/* 1 = write was performed on file */
  1    69 	6 unpermitted_access bit (1) unal,		/* 1 = unpermitted access to file attempted or seek
  1    70*						   attempted to part of file marked defective (only
  1    71*						   for procted allocation) */
  1    72 	6 purge bit (1) unal,			/* 1 = file space to be purgedbefore deallocating file. */
  1    73 	6 sector_number bit (18) unal,		/* If cataloged file, sector number of file catalog
  1    74*						   (on device with SCT referenced in word 0).  If
  1    75*						   cataloged file that is proctected (bit 0 ON in this
  1    76*						   word), memory location of table in File Management
  1    77*						   Supervisor Executive.  If user temporary file,
  1    78*						   largest size file has ever attained, in llinks.
  1    79*						   If system value equals 777777 octal, it is system
  1    80*						   file created by System Input. */
  1    81 
  1    82         5 word_3,
  1    83 	6 llink_size bit (14) unal,			/* 0-13 ^= 0, Current total file size in llinks
  1    84*						   0-13 = 0, File size is greater than 16,383 llinks,
  1    85*						   and if the file is cataloged, call to .MFS19,5 with
  1    86*						   offset to PAT pointer in index 5 will cause bits
  1    87*						   14-35 of Q-register to be set to file size. (Unless
  1    88*						   there is a Seek error on file catalog in which case
  1    89*						   zero is returned. )
  1    90*						   */
  1    91 	6 llink_position bit (22) unal,		/* Relative llink position within the space descriptors
  1    92*						   in memory. */
  1    93 
  1    94         5 word_4,
  1    95 	6 not_last_desc bit (1) unal,			/* 1 = not last descriptor in memory */
  1    96 	6 space_desc bit (1) unal,			/* 0 = this is space descriptor */
  1    97 	6 space_defective bit (1) unal,		/* 1 = Space is defective */
  1    98 	6 extent bit (15) unal,			/* Number of llinks in this extent (area defined by this
  1    99*						   descriptor) */
  1   100 	6 origin bit (18) unal;			/* device llinks number of origin of this extent */
  1   101 /*   END INCLUDE FILE gtss_dfd_ext_.incl.pl1 */
       66 
       67 
  2     1 /* BEGIN INCLUDE FILE cds_args.incl.pl1 */
  2     2 
  2     3 dcl 1 cds_args based aligned,
  2     4     2 sections (2),
  2     5       3 p ptr,					/* pointer to data for text/static section */
  2     6       3 len fixed bin (18),				/* size of text/static section */
  2     7       3 struct_name char (32),			/* name of declared structure for this section */
  2     8     2 seg_name char (32),				/* name to create segment by */
  2     9     2 num_exclude_names fixed bin,			/* number of names in exclude array */
  2    10     2 exclude_array_ptr ptr,				/* pointer to array of exclude names */
  2    11     2 switches,					/* control switches */
  2    12       3 defs_in_link bit (1) unal,			/* says put defs in linkage */
  2    13       3 separate_static bit (1) unal,			/* says separate static section is wanted */
  2    14       3 have_text bit (1) unal,			/* ON if text section given */
  2    15       3 have_static bit (1) unal,			/* ON if static section given */
  2    16       3 pad bit (32) unal;
  2    17 
  2    18 dcl  exclude_names (1) char (32) based;			/* pointed to be cds_args.exclude_array_ptr */
  2    19 
  2    20 /* END INCLUDE FILE cds_args.incl.pl1 */
       68 
       69 end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/10/84  1042.9  !BBBJPMLHffdlpx.pl1               >spec>on>7105>gtss_dfd_ext_.cds
66           1    09/09/83  1713.2  gtss_dfd_ext_.incl.pl1            >ldd>include>gtss_dfd_ext_.incl.pl1
68           2    04/01/76  2209.5  cds_args.incl.pl1                 >ldd>include>cds_args.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 51 ref 15 20 28
cds_args                               based           structure                level 1 dcl 2-3
cds_args_ptr                    000100 automatic       pointer                  initial dcl 52 set ref 15* 23 24 25 28 29 30 32 33
                                                                                  34 35 36 37 38 39 41* 52*
code                            000102 automatic       fixed bin(35,0)          dcl 53 set ref 41* 42 42*
com_err_                        000012 constant        entry                    external dcl 54 ref 42 45
create_data_segment_            000014 constant        entry                    external dcl 55 ref 41
defs_in_link             44            based           bit(1)                   level 3 packed unaligned dcl 2-3 set ref 35*
exclude_array_ptr        42            based           pointer                  level 2 dcl 2-3 set ref 34*
gtss_dfd_ext_                   000152 automatic       structure                level 1 dcl 63 set ref 20 28 29 45 45
gtss_dfd_ext_$disk_file_data    000016 external static structure                array level 1 dcl 1-6
have_static              44(03)        based           bit(1)                   level 3 packed unaligned dcl 2-3 set ref 38*
have_text                44(02)        based           bit(1)                   level 3 packed unaligned dcl 2-3 set ref 37*
len                       2            based           fixed bin(18,0)          array level 3 dcl 2-3 set ref 24* 29*
null                                                   builtin function         dcl 56 ref 20 23 34 52
num_exclude_names        40            based           fixed bin(17,0)          level 2 dcl 2-3 set ref 33*
p                                      based           pointer                  array level 3 dcl 2-3 set ref 23* 28*
pad                      44(04)        based           bit(32)                  level 3 packed unaligned dcl 2-3 set ref 39*
sections                               based           structure                array level 2 dcl 2-3
seg_name                 30            based           char(32)                 level 2 dcl 2-3 set ref 32*
separate_static          44(01)        based           bit(1)                   level 3 packed unaligned dcl 2-3 set ref 36*
size                                                   builtin function         dcl 57 ref 29 45 45
space_for_cds_args              000104 automatic       structure                level 1 dcl 59 set ref 15 16*
struct_name               3            based           char(32)                 array level 3 dcl 2-3 set ref 25* 30*
switches                 44            based           structure                level 2 dcl 2-3
unspec                                                 builtin function         dcl 58 set ref 16*

NAME DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
exclude_names                          based           char(32)                 array unaligned dcl 2-18

NAME DECLARED BY EXPLICIT CONTEXT.
gtss_dfd_ext_                   000037 constant        entry                    external dcl 6

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       302         322     217         312
Length      4034     217        20        3475      62           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gtss_dfd_ext_                      3108 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gtss_dfd_ext_            000100 cds_args_ptr                gtss_dfd_ext_
                         000102 code                        gtss_dfd_ext_
                         000104 space_for_cds_args          gtss_dfd_ext_
                         000152 gtss_dfd_ext_               gtss_dfd_ext_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      create_data_segment_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
gtss_dfd_ext_$disk_file_data




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      6 000036        52 000044        15 000046        16 000050        20 000053        23 000061        24 000063
     25 000064        28 000067        29 000071        30 000073        32 000076        33 000101        34 000102
     35 000104        36 000106        37 000110        38 000112        39 000114        41 000116        42 000126
     45 000154        48 000213


Object Segment >spec>on>7105>gtss_dfd_ext_
Created on 12/10/84  1133.8 mst Mon
by GJohnson.SysMaint.m
using create_data_segment_, Version II of Friday, November 30, 1984

        Object    Text    Defs    Link    Symb  Static
Start        0       0       0      30    5650      40
Length    6304       0      30    5620     420    5610


3 Definitions:


segname:    gtss_dfd_ext_

link|10         disk_file_data
symb|0          symbol_table


No Links.





                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
