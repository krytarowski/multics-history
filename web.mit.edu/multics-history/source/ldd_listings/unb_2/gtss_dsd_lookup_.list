	COMPILATION LISTING OF SEGMENT gtss_dsd_lookup_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/10/84  1255.6 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   *                                                         *
        4*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        5*   *                                                         *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 gtss_dsd_lookup_: proc (rt) returns (fixed bin (24));
       10 
       11 /**     This function, given a character request type,
       12*        returns the CFP_request_value as defined in the
       13*        include file gtss_CFP_request_types. The value is
       14*        set to zero if the type is not found.
       15*
       16*        Author:   Al Dupuis 04/19/79
       17***/
       18 	do while (length (rt) ^> 3);			/* pad the parameter to make it four characters */
       19 	     rt = rt || " ";
       20 	end;
       21 
       22 	string = substr (rt, 1, 4);
       23 	i = 1;
       24 	j = hbound (CFP_request_types, 1);
       25 
       26 	do while (i <= j);				/* binary table search */
       27 	     k = divide (i + j, 2, 24);
       28 	     if string = substr (CFP_request_types (k), 1, 4)
       29 	     then return (CFP_request_value (k));	/* hit */
       30 	     if string < substr (CFP_request_types (k), 1, 4)
       31 	     then j = k - 1;
       32 	     else i = k + 1;
       33 	end;
       34 
       35 	return (0);				/* miss */
       36 /**
       37*
       38*Variables for gtss_dsd_lookup_
       39***/
       40 
       41 dcl rt char (8) varying parameter;
       42 dcl string char (4);
       43 dcl (i,j,k) fixed bin (24);
       44 dcl (hbound, divide, length, substr) builtin;
       45 /** 
       46***/
  1     1 /* BEGIN INCLUDE FILE gtss_CFP_request_types.incl.pl1 */
  1     2 /*
  1     3*  Created:  (Dupuis Multics)  04/24/79 1332.2 mst Tue 
  1     4**/
  1     5 
  1     6 dcl 1 gtss_CFP_request_types static int options (constant),
  1     7 
  1     8     2 CFP_request_types (18) char (8) init (
  1     9 
  1    10 /* Request type  (1) */   "BRK",
  1    11 /* Request type  (2) */   "BUILD",      /* for Bell Canada only */
  1    12 /* Request type  (3) */   "COPY",
  1    13 /* Request type  (4) */   "DELE",
  1    14 /* Request type  (5) */   "EXECUTE",    /* for Bell Canada only */
  1    15 /* Request type  (6) */   "FILE",
  1    16 /* Request type  (7) */   "LBL",
  1    17 /* Request type  (8) */   "MARK",
  1    18 /* Request type  (9) */   "NBUILD",     /* for Bell Canada only */
  1    19 /* Request type (10) */   "NEXECUTE",   /* for Bell Canada only */
  1    20 /* Request type (11) */   "NSYS",
  1    21 /* Request type (12) */   "NULL",
  1    22 /* Request type (13) */   "QUIT",
  1    23 /* Request type (14) */   "REM",
  1    24 /* Request type (15) */   "SYSTEM",
  1    25 /* Request type (16) */   "TALK",
  1    26 /* Request type (17) */   "TRAP",
  1    27 /* Request type (18) */   "USER"),
  1    28 
  1    29 
  1    30     2 CFP_request_value (18) fixed bin (24) init (
  1    31 
  1    32 /* BRK        */    1,
  1    33 /* BUILD      */    2,
  1    34 /* COPY       */    3,
  1    35 /* DELE       */    4,
  1    36 /* EXECUTE    */    5,
  1    37 /* FILE       */    6,
  1    38 /* LBL        */    7,
  1    39 /* MARK       */    8,
  1    40 /* NBUILD     */    9,
  1    41 /* NEXECUTE   */   10,
  1    42 /* NSYS       */   11,
  1    43 /* NULL       */   12,
  1    44 /* QUIT       */   13,
  1    45 /* REM        */   14,
  1    46 /* SYSTEM     */   15,
  1    47 /* TALK       */   16,
  1    48 /* TRAP       */   17,
  1    49 /* USER       */   18);
  1    50 
  1    51 /*   END INCLUDE FILE gtss_CFP_request_types.incl.pl1 */
       47 
       48 
       49      end						/* gtss_dsd_lookup_ */;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/10/84  1043.7  gtss_dsd_lookup_.pl1              >spec>on>7105>gtss_dsd_lookup_.pl1
47           1    09/09/83  1713.5  gtss_CFP_request_types.incl.pl1   >ldd>include>gtss_CFP_request_types.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
CFP_request_types               000000 constant        char(8)                  initial array level 2 packed unaligned dcl 1-6 ref
                                                                                  24 28 30
CFP_request_value        44     000000 constant        fixed bin(24,0)          initial array level 2 dcl 1-6 ref 28
divide                                                 builtin function         dcl 44 ref 27
gtss_CFP_request_types          000000 constant        structure                level 1 unaligned dcl 1-6
hbound                                                 builtin function         dcl 44 ref 24
i                               000101 automatic       fixed bin(24,0)          dcl 43 set ref 23* 26 27 32*
j                               000102 automatic       fixed bin(24,0)          dcl 43 set ref 24* 26 27 30*
k                               000103 automatic       fixed bin(24,0)          dcl 43 set ref 27* 28 28 30 30 32
length                                                 builtin function         dcl 44 ref 18
rt                                     parameter       varying char(8)          dcl 41 set ref 9 18 19* 19 22
string                          000100 automatic       char(4)                  unaligned dcl 42 set ref 22* 28 30
substr                                                 builtin function         dcl 44 ref 22 28 30

NAME DECLARED BY EXPLICIT CONTEXT.
gtss_dsd_lookup_                000074 constant        entry                    external dcl 9

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       212         222     163         222
Length       402     163        10         144      26           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gtss_dsd_lookup_                     69 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gtss_dsd_lookup_         000100 string                      gtss_dsd_lookup_
                         000101 i                           gtss_dsd_lookup_
                         000102 j                           gtss_dsd_lookup_
                         000103 k                           gtss_dsd_lookup_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
return              ext_entry

NO EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      9 000070        18 000101        19 000107        20 000116        22 000117        23 000121        24 000123
     26 000125        27 000131        28 000134        30 000146        32 000153        33 000156        35 000157


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
