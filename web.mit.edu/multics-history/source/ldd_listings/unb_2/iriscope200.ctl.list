LISTING FOR  >spec>on>11/30/82>iriscope200.ctl
COMPILED BY Multics LISP Compiler, Version hc9.2, June 5, 1981
ON 11/30/82  1529.5 mst Tue
IN BEHALF OF Holmstedt.SysMaint.a



;;; ***********************************************************
;;; *                                                         *
;;; * Copyright, (C) Honeywell Information Systems Inc., 1982 *
;;; *                                                         *
;;; * Copyright (c) 1978 by Massachusetts Institute of        *
;;; * Technology and Honeywell Information Systems, Inc.      *
;;; *                                                         *
;;; ***********************************************************
;;;
;;;	Iriscope 200 control package
;;;       Ripped off from vt52ctl BSG 3/9/78
;;;	Ripped off from VIP7200ctl by CAH 17 July 1980
;;;

(declare (special X Y screenheight screenlinelen tty-type))
(declare (special idel-lines-availablep idel-chars-availablep))


; Initialize terminal and terminal control package.
(defun DCTL-init ()
       (setq idel-lines-availablep nil idel-chars-availablep nil)
       (setq screenheight 16. screenlinelen 80.)
       (setq tty-type 'iriscope200)
       (Rtyo 30) (Rtyo 31)
       (setq X 0 Y 0))


; Move terminal's cursor to desired position.
(defun DCTL-position-cursor (x y)
       (cond ((and				; near home position?
	      (< (DCTL-distance y 0 16.) (DCTL-distance Y y 16.))
	      (<
	        (+ (DCTL-distance x 0 80.) (DCTL-distance y 0 16.))
	        (+ (DCTL-distance X x 80.) (DCTL-distance Y y 16.))))
	    (Rtyo 31)			; yes: go there first
	    (setq X 0 Y 0)))
       (cond ((< (DCTL-distance x 0 80.) (DCTL-distance X x 80.))
	    (Rtyo 15)			; yes: go there
	    (setq X 0)))
       (cond ((< X x)
	    (cond ((< (- x X) 40.) (DCTL-rpt 25 (- x X)))
		(t (setq Y (1- Y)) (DCTL-rpt 10 (+ 80. (- X x))))))
	   (t
	     (cond ((< (- X x) 40.) (DCTL-rpt 10 (- X x)))
		 (t (setq Y (1+ Y)) (DCTL-rpt 25 (+ 80. (- x X)))))))
       (cond ((< Y y)
	    (cond ((< (- y Y) 8.) (DCTL-rpt 12 (- y Y)))
		(t (DCTL-rpt 32 (+ 16. (- Y y))))))
	   (t
	     (cond ((< (- Y y) 8.) (DCTL-rpt 32 (- Y y)))
		 (t (DCTL-rpt 12 (+ 16. (- y Y)))))))
       (setq X x Y y))


; find modular distance between two points
(defun DCTL-distance (A B Mod)
       (cond ((< (abs (- A B)) (// Mod 2)) (abs (- A B)))
	   ((< A B) (- (+ Mod A) B))
	   ((> A B) (- (+ Mod B) A))))


; send a cursor positioning string
(defun DCTL-rpt (Char Num)
 (do ex 1 (1+ ex) (> ex Num) (Rtyo Char)))


; Output string.
(defun DCTL-display-char-string (string)
       (setq X (+ X (stringlength string)))
       (Rprinc string)
       (cond ((< X 80.) nil)
             (t (setq X (- X 80.)) (setq Y (1+ Y)))))


; Clear to end of screen.
(defun DCTL-clear-rest-of-screen ()
       ((lambda (x y)
	      (Rtyo 30)
	      (setq X 0 Y 0)
	      (DCTL-position-cursor x y))
        X Y))


; Clear to end of line.
(defun DCTL-kill-line ()
       (Rtyo 26))


			Functions Defined

Name			Offset		Offset		Name


DCTL-clear-rest-of-screen        510		   0		DCTL-init
DCTL-display-char-string         462		   42		DCTL-position-cursor
DCTL-distance                    370		   370		DCTL-distance
DCTL-init                        0		   437		DCTL-rpt
DCTL-kill-line                   542		   462		DCTL-display-char-string
DCTL-position-cursor             42		   510		DCTL-clear-rest-of-screen
DCTL-rpt                         437		   542		DCTL-kill-line





			Functions Referenced

DCTL-distance                           DCTL-rpt                                Rtyo
DCTL-position-cursor                    Rprinc                                  stringlength


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
