	COMPILATION LISTING OF SEGMENT cobol_rewrite_gen
	Compiled by: Multics PL/I Compiler, Release 31b, of April 24, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 05/24/89  0956.3 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
       17*     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
       18*     MCR8060 cobol_rewrite_gen.pl1 Reformatted code to new Cobol standard.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 /* Modified on 03/18/81 by FCH, [4.4-2], rewrite with alt rec keys can cause abort, BUG470 */
       23 /* Modified on 02/18/81,[4.4-1], operator  87 replaced by operator 93 */
       24 /* Modified on 06/27/79 by FCH,[4.0-1], not option added for debug */
       25 /* Modified on 11/13/78 by FCH,[3.0-1], alt rec_keys added */
       26 /* Modified since Version 3.0 */
       27 
       28 /* format: style3 */
       29 cobol_rewrite_gen:
       30      proc (mp_ptr, passed_tag);
       31 
       32 dcl	passed_tag	fixed bin;		/* for  in-line error handling */
       33 dcl	ptag		fixed bin;
       34 dcl	mp_ptr		ptr;
       35 dcl	1 mp		based (mp_ptr),
       36 	  2 n		fixed bin,		/* from 3 to 4 */
       37 	  2 pt		(0 refer (mp.n)) ptr;	/* pt(1) pts to type1 token for REWRITE */
       38 						/* pt(2) pts to type9 token for record to be rewritten */
       39 						/* pt(3) pts to type9 token for FROM data IF end_stmt.c = "1"b */
       40 						/* pt(n) pts to type19 token (eos) */
       41 
       42 dcl	1 args,
       43 	  2 entryno	fixed bin,
       44 	  2 arglist_off	fixed bin,
       45 	  2 stacktemp_off	fixed bin,
       46 	  2 n		fixed bin,
       47 	  2 arg		(4),
       48 	    3 pt		ptr,
       49 	    3 type	fixed bin,
       50 	    3 off1	fixed bin,
       51 	    3 off2	fixed bin,
       52 	    3 value	bit (18) unal,
       53 	    3 indirect	bit (1) unal,
       54 	    3 overlay	bit (1) unal,
       55 	    3 repeat_nogen	bit (1) unal,
       56 	    3 regsw	bit (1) unal,
       57 	    3 regno	bit (3) unal;
       58 
       59 dcl	adjust_recptr_sw	bit (1);
       60 dcl	argb		(4) bit (216) based (addr (args.arg (1)));
       61 dcl	text		(0:100000) bit (36) based (cobol_$text_base_ptr);
       62 
       63 dcl	ft_ptr		ptr;
       64 dcl	fkey_ptr		ptr;
       65 dcl	name_ptr		ptr;
       66 dcl	dn_ptr		ptr;
       67 dcl	arg_ptr		ptr;
       68 dcl	ioerror_ptr	ptr;			/*[3.0-1]*/
       69 declare	alt_sw		bit (1);
       70 dcl	temp		fixed bin;
       71 dcl	aloff		fixed bin;
       72 dcl	size		fixed bin;
       73 dcl	buflen_off	fixed bin;
       74 dcl	buf_off		fixed bin;
       75 dcl	ntag		fixed bin;
       76 dcl	unopened_error_tag	fixed bin;
       77 dcl	stoff		fixed bin;
       78 dcl	hold_keylen_sw	fixed bin;
       79 dcl	hold_key_wdoff	fixed bin;
       80 
       81 /*************************************/
       82 /*************************************/
       83 /* INITIALIZATION */
       84 start:
       85 	pr5_struct_ptr = addr (pr5_struct);
       86 	adjust_recptr_sw = "0"b;
       87 	rw_ptr = mp.pt (1);
       88 	dn_ptr = mp.pt (2);
       89 	eos_ptr = mp.pt (mp.n);
       90 	ioerror_ptr = addr (ioerror);
       91 	ioerror.cobol_code = 0;
       92 	ioerror.type1_ptr = mp.pt (1);
       93 	ioerror.is_tag = 0;
       94 	ioerror.mode = 0;
       95 
       96 	if end_stmt.b = "1"b
       97 	then do;					/* in-line error coding follows */
       98 
       99 		ioerror.is_tag = cobol_$next_tag;	/* to be defined at end of generated code for WRITE */
      100 		ptag, passed_tag = cobol_$next_tag + 1; /* to be defined by gen driver at end of in-line coding */
      101 		ioerror.ns_tag = ptag;
      102 		cobol_$next_tag = cobol_$next_tag + 2;
      103 
      104 	     end;
      105 	else do;
      106 
      107 		ioerror.is_tag = 0;
      108 		ptag = 0;
      109 		ioerror.ns_tag = cobol_$next_tag;	/* to be defined at end of generated code */
      110 		cobol_$next_tag = cobol_$next_tag + 1;
      111 
      112 	     end;
      113 
      114 	arg_ptr = addr (args);
      115 
      116 	call cobol_read_ft (data_name.file_num, ft_ptr);
      117 
      118 	call cobol_alloc$stack (316, 2, aloff);		/* enough for 79 words - aloff is a wd offset */
      119 
      120 	args.arglist_off = aloff;
      121 	buflen_off = 80;
      122 
      123 
      124 /*************************************/
      125 /* START CODE GENERATION */
      126 start_codegen:					/* MAKE SURE FILE IS OPEN */
      127 	ioerror.retry_tag = cobol_$next_tag;
      128 	unopened_error_tag = cobol_$next_tag + 1;
      129 	cobol_$next_tag = cobol_$next_tag + 2;
      130 
      131 	call cobol_define_tag (ioerror.retry_tag);
      132 
      133 	call cobol_set_fsbptr (ft_ptr);
      134 
      135 
      136 /* MOVE FROM DATANAME TO BUFFER IF NECESSARY */
      137 
      138 	if end_stmt.c = "1"b
      139 	then do;					/* FROM specified */
      140 
      141 		mpout.pt1 = mp.pt (1);
      142 		mpout.pt2 = mp.pt (3);
      143 		mpout.pt3 = mp.pt (2);
      144 		mpout.pt4 = addr (type19);
      145 
      146 		call cobol_move_gen (addr (mpout));
      147 
      148 	     end;
      149 
      150 /* ESTABLISH RECORD LENGTH */
      151 	if ^file_table.variable
      152 	then do;
      153 
      154 		temp = file_table.max_cra_size;
      155 
      156 		call cobol_io_util$move_direct ("110"b, buflen_off * 4, 4, 1, substr (unspec (temp), 19, 18));
      157 
      158 	     end;
      159 	else do;
      160 
      161 		if ^file_table.rec_do
      162 		then call cobol_get_size (dn_ptr, buflen_off, reserved_word.line);
      163 		else do;
      164 
      165 			call cobol_read_rand (1, file_table.rec_do_info, fkey_ptr);
      166 
      167 			addr (fkey_type9.file_key_info) -> file_key_desc = file_key.desc;
      168 
      169 			call cobol_io_util$t9dec_to_bin ("110"b, buflen_off * 4, addr (fkey_type9));
      170 
      171 		     end;
      172 
      173 	     end;
      174 
      175 /* CONVERT IF CODE SET INDICATES SO */
      176 	if file_table.code_set_clause
      177 	then if file_table.code_set = 12
      178 	     then do;				/* 12 = ebcdic */
      179 
      180 		     call cobol_alloc$stack (data_name.size + 1, 2, stoff);
      181 						/*-10/07/76-*/
      182 
      183 		     trans_type9.seg = 1000;		/* in stack */
      184 		     trans_type9.off = stoff * 4;	/*-10/07/76-*/
      185 		     trans_type9.size = data_name.size;
      186 
      187 		     call cobol_trans_alphabet$io (dn_ptr, addr (trans_type9), fixed (file_table.code_set), 0);
      188 
      189 		     dn_ptr = addr (trans_type9);	/* set to converted record for remainder of this generator */
      190 
      191 		end;
      192 
      193 /*[3.0-1]*/
      194 	alt_sw = file_table.organization = 3 /* ind */ /*[3.0-1]*/ & /*[3.0-1]*/ file_table.alternate_keys ^= 0;
      195 
      196 	if file_table.access < 2
      197 	then do;					/* sequential access */
      198 
      199 		ntag = cobol_$next_tag;
      200 		cobol_$next_tag = cobol_$next_tag + 1;
      201 
      202 		call cobol_io_util$bypass_seqerror (ntag);
      203 
      204 		call cobol_ioop_util$set_x5 (rewrite_seq_errno);
      205 						/* OPERATOR54(delete_error) */
      206 		call cobol_call_op (54, ntag);	/* ERROR_OP */
      207 
      208 		call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      209 
      210 		call cobol_define_tag (ntag);
      211 
      212 		if file_table.organization = 3	/* indexed */
      213 		then do;				/* make sure key matches - always will for relative */
      214 
      215 			call cobol_read_rand (1, file_table.r_key_info, fkey_ptr);
      216 
      217 			addr (fkey_type9.file_key_info) -> file_key_desc = file_key.desc;
      218 
      219 			ntag = cobol_$next_tag;
      220 			cobol_$next_tag = cobol_$next_tag + 1;
      221 
      222 			call cobol_io_util$compare_key (ntag, addr (fkey_type9));
      223 
      224 			call cobol_io_util$move_direct ("001"b, fsb_keylen_sw, 4, 1, ""b);
      225 						/* zero the switch */
      226 
      227 			call cobol_ioop_util$set_x5 (key_mismatch_errno);
      228 						/* OPERATOR54(delete_error) */
      229 			call cobol_call_op (54, ntag);/* ERROR_OP */
      230 
      231 			call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      232 
      233 			call cobol_define_tag (ntag);
      234 
      235 		     end;
      236 
      237 		call cobol_io_util$move_direct ("001"b, fsb_keylen_sw, 4, 1, ""b);
      238 						/* zero the switch */
      239 
      240 		call rew_rec;
      241 
      242 	     end;
      243 
      244 	else do;					/* random or dynamic access - use specified key */
      245 
      246 
      247 		call cobol_read_rand (1, file_table.r_key_info, fkey_ptr);
      248 
      249 		addr (fkey_type9.file_key_info) -> file_key_desc = file_key.desc;
      250 		mpout.pt1 = mp.pt (1);
      251 		mpout.pt2 = addr (fkey_type9);
      252 
      253 		if file_table.organization = 2
      254 		then do;				/*relative */
      255 
      256 			mpout.pt3 = addr (num_type9);
      257 			size, num_type9.size, num_type9.places_left = 16;
      258 			num_type9.seg = 5001;	/* from PR1 */
      259 			num_type9.off = file_table.fsb.off + fsb_key;
      260 
      261 		     end;
      262 		else do;				/* indexed */
      263 
      264 			if file_table.access = 3 & (file_table.external | file_table.open_out)
      265 			then do;
      266 
      267 				ntag = cobol_$next_tag;
      268 				cobol_$next_tag = cobol_$next_tag + 1;
      269 
      270 				call cobol_io_util$bypass_mode_error (ntag, "11"b);
      271 						/* must cause error if in output mode */
      272 
      273 				call cobol_ioop_util$set_x5 (output_errno);
      274 						/* OPERATOR54(delete_error) */
      275 				call cobol_call_op (54, ntag);
      276 						/* ERROR_OP */
      277 
      278 				call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      279 
      280 				call cobol_define_tag (ntag);
      281 
      282 /*[4.4-2]*/
      283 /* call cobol_set_fsbptr(ft_ptr); */
      284 
      285 			     end;
      286 
      287 			mpout.pt3 = addr (alpha_type9);
      288 			size, alpha_type9.size = fkey_type9.size;
      289 			alpha_type9.seg = 5001;	/* from PR1 */
      290 			alpha_type9.off = file_table.fsb.off + fsb_key;
      291 
      292 		     end;
      293 
      294 /*[4.4-2]*/
      295 		call cobol_set_fsbptr (ft_ptr);	/*[4.4-2]*/
      296 		call cobol_io_util$set_fsb_loc;
      297 
      298 		if ^alt_sw & file_table.access = 3 & file_table.read_next
      299 		then do;
      300 
      301 /* read key */
      302 			call cobol_alloc$stack (260, 2, stoff);
      303 						/* area known as TEMP read key area */
      304 
      305 			call cobol_ioop_util$lda_du (stoff);
      306 
      307 			call cobol_ioop_util$set_icode;
      308 
      309 			ntag = cobol_$next_tag;
      310 			cobol_$next_tag = cobol_$next_tag + 1;
      311 
      312 			call cobol_call_op (55, ntag);/* OPERATOR55(read_key) */
      313 
      314 			call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      315 
      316 
      317 			call cobol_define_tag (ntag);
      318 
      319 			call cobol_set_fsbptr (ft_ptr);
      320 
      321 			mpout.pt4 = addr (type19);
      322 
      323 			call cobol_move_gen (addr (mpout));
      324 
      325 			call cobol_io_util$move_direct ("001"b, fsb_keylen_sw, 4, 1, substr (unspec (size), 19, 18))
      326 			     ;
      327 
      328 			ntag = cobol_$next_tag;
      329 			cobol_$next_tag = cobol_$next_tag + 1;
      330 
      331 			call cobol_ioop_util$lda_du (stoff);
      332 
      333 			call cobol_ioop_util$set_icode;
      334 
      335 			call cobol_set_pr (pr5_struct_ptr, dn_ptr);
      336 						/* OPERATOR58(special_rewrite) */
      337 			call cobol_call_op (58, ntag);/* seek_key BUFF,rewrite_record,seek_key TEMP,position if EOF*/
      338 
      339 			call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      340 
      341 			call cobol_define_tag (ntag);
      342 
      343 		     end;
      344 		else do;
      345 			ntag = cobol_$next_tag;
      346 			cobol_$next_tag = cobol_$next_tag + 1;
      347 
      348 /*[4.4-2]*/
      349 /* call cobol_set_fsbptr(ft_ptr); */
      350 
      351 			mpout.pt4 = addr (type19);
      352 
      353 			call cobol_move_gen (addr (mpout));
      354 
      355 			call cobol_io_util$move_direct ("001"b, fsb_keylen_sw, 4, 1, substr (unspec (size), 19, 18))
      356 			     ;
      357 
      358 /*[3.0-1]*/
      359 			if alt_sw			/*[4.4-2]*/
      360 			then do;
      361 				call cobol_io_util$fsb_key_loc (6);
      362 						/* epp1 pr1|6 */
      363 						/*[3.0-1]*/
      364 				call cobol_io_util$file_desc (file_table.file_desc_1_offset);
      365 
      366 /*[3.0-1]*/
      367 				call cobol_call_op (85, 0);
      368 						/* OPERATOR85(alt_special_delete) */
      369 						/*[3.0-1]*/
      370 				call cobol_set_fsbptr (ft_ptr);
      371 						/*[3.0-1]*/
      372 			     end;
      373 
      374 			call cobol_ioop_util$set_icode;
      375 
      376 			call cobol_call_op (41, ntag);/* OPERATOR41(seek_key) */
      377 
      378 			call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      379 
      380 			call cobol_define_tag (ntag);
      381 
      382 			call rew_rec;
      383 
      384 		     end;
      385 
      386 	     end;
      387 
      388 	call cobol_reg_manager$after_op (4095 + ioerror.cobol_code);
      389 
      390 /*[4.0-1]*/
      391 	if end_stmt.f = "01"b			/*[4.0-1]*/
      392 	then passed_tag = ioerror.is_tag;		/*[4.0-1]*/
      393 	else call cobol_gen_ioerror$finish_up (ft_ptr, ioerror_ptr);
      394 
      395 	return;
      396 
      397 rew_rec:
      398      proc;
      399 
      400 /*[3.0-1]*/
      401 	if alt_sw					/*[3.0-1]*/
      402 	then do;
      403 		ntag = cobol_$next_tag;		/*[3.0-1]*/
      404 		cobol_$next_tag = cobol_$next_tag + 1;	/*[4.4-1]*/
      405 		call cobol_set_pr (pr5_struct_ptr, dn_ptr);
      406 						/*[4.4-1]*/
      407 		call cobol_call_op (93, ntag);	/* OPERATOR93(alt_rewrite) */
      408 						/*[3.0-1]*/
      409 		call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      410 						/*[3.0-1]*/
      411 		call cobol_define_tag (ntag);		/*[3.0-1]*/
      412 		call cobol_set_fsbptr (ft_ptr);	/*[3.0-1]*/
      413 	     end;
      414 
      415 	ntag = cobol_$next_tag;
      416 	cobol_$next_tag = cobol_$next_tag + 1;
      417 
      418 	call cobol_set_fsbptr (ft_ptr);
      419 
      420 	call cobol_set_pr (pr5_struct_ptr, dn_ptr);
      421 
      422 	call cobol_ioop_util$set_icode;
      423 
      424 	call cobol_call_op (59, ntag);		/* OPERATOR59(rewrite) */
      425 
      426 	call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      427 
      428 	call cobol_define_tag (ntag);
      429 
      430 /*[3.0-1]*/
      431 	if alt_sw					/*[3.0-1]*/
      432 	then do;
      433 		ntag = cobol_$next_tag;		/*[3.0-1]*/
      434 		cobol_$next_tag = cobol_$next_tag + 1;
      435 
      436 /*[3.0-1]*/
      437 		call cobol_call_op (88, ntag);	/* OPERATOR88(alt_rewrite_add) */
      438 						/*[3.0-1]*/
      439 		call cobol_gen_ioerror (ft_ptr, ioerror_ptr);
      440 						/*[3.0-1]*/
      441 		call cobol_define_tag (ntag);		/*[3.0-1]*/
      442 	     end;
      443 
      444      end;
      445 
      446 /*************************************/
      447 
  1     1 
  1     2 /*
  1     3*
  1     4*	The procedure cobol_rewrite_gen.pl1 generates the code which realizes the
  1     5*COBOL rewrite statement.
  1     6*
  1     7*	REWRITE rn [id] eos
  1     8*
  1     9*		eos	a=0	no INVALID
  1    10*			  1	INVALID
  1    11*
  1    12*			c=0	no FROM
  1    13*			  1	FROM
  1    14*
  1    15*			f=00	no NOT
  1    16*			  01	NOT
  1    17*
  1    18*		verb=27
  1    19*
  1    20*	mp.n		3-4
  1    21*	mp.ptr(1)		type-1("REWRITE")
  1    22*	mp.ptr(2)		type-9(record-name)
  1    23*	mp.ptr(3)		type-9(FROM id)
  1    24*	mp.ptr(n)		eos
  1    25*
  1    26*Flow Chart
  1    27*
  1    28*TAG(ioerror.retry_tag):
  1    29*
  1    30*	alt_sw =	file_table.organization = 3	ind
  1    31*		&
  1    32*		file_table.alternate_keys ^= 0
  1    33*
  1    34*	if file_table.access < 2	seq
  1    35*	then	do;	INCR_NTAG
  1    36*
  1    37*			OP54(delete_error,ntag);GEN_IOERROR
  1    38*
  1    39*TAG(ntag):
  1    40*
  1    41*			if file_table.organization = 3	ind
  1    42*			then	do;	INCR_NTAG
  1    43*
  1    44*					OP54(delete_error,ntag);GEN_IOERROR
  1    45*
  1    46*NTAG(ntag):
  1    47*
  1    48*				end;
  1    49*
  1    50*			call REW_REC;
  1    51*
  1    52*		end;
  1    53*	else	do;	if	file_table.organization = 2	rel
  1    54*			then;
  1    55*			else	do;	if	file_table.access = 3	dyn
  1    56*						&
  1    57*						(	file_table.external
  1    58*							|
  1    59*							file_table.open_out
  1    60*						)
  1    61*					then	do;	INCR_NTAG
  1    62*							OP54(delete_error,ntag);GEN_IOERROR
  1    63*TAG(ntag):
  1    64*						end;
  1    65*				end;
  1    66*
  1    67*			if	^alt_sw
  1    68*				&
  1    69*				file_table.access = 3	dyn
  1    70*				&
  1    71*				file_table.read_next
  1    72*
  1    73*			then	do;	INCR_NTAG
  1    74*					OP55(read_key,ntag);GEN_IOERROR
  1    75*TAG(ntag):
  1    76*					INCR_NTAG
  1    77*					OP58(special_rewrite,ntag);GEN_IOERROR
  1    78*TAG(ntag):
  1    79*				end;
  1    80*			else	do;	INCR_NTAG
  1    81*					if alt_sw then IO_UTIL$FILE_DESC;OP85(alt_special_delete,0);GEN_IOERROR;SET_FSBPTR
  1    82*					OP41(seek_key,ntag);GEN_IOERROR
  1    83*TAG(ntag):
  1    84*
  1    85*					call REW_REC
  1    86*				end;
  1    87*		end;
  1    88*	return;
  1    89*
  1    90*REW_REC:	proc;
  1    91*
  1    92*	if alt_sw then	do;	INCR_NTAG
  1    93*				OP87(alt_rewrite_delete,ntag);GEN_IOERROR
  1    94*TAG(ntag):
  1    95*				SET_FSBPTR
  1    96*			end;
  1    97*	INCR_NTAG
  1    98*	OP59(rewrite,ntag);GEN_IOERROR
  1    99*TAG(ntag):
  1   100*
  1   101*	if alt_sw then	do;	INCR_NTAG
  1   102*				OP88(alt_rewrite_add,ntag);GEN_IOERROR
  1   103*TAG(ntag):
  1   104*			end;
  1   105*
  1   106*end;
  1   107*
  1   108**/
  1   109 
  2     1 /*
  2     2*cobol_operators_: rewrite statement
  2     3*
  2     4*	OP41(seek_key)
  2     5*
  2     6*	OP54(delete_error)		start,read,delete
  2     7*
  2     8*		RTS(16)
  2     9*
  2    10*	OP55(read_key)		delete
  2    11*
  2    12*		iox_$read_key
  2    13*		RTS(17)
  2    14*
  2    15*	OP58(special_rewrite)
  2    16*
  2    17*		SUBR_SEEK_OP(25)
  2    18*		iox_$rewrite_record
  2    19*
  2    20*	OP59(rewrite_record)
  2    21*
  2    22*		iox_$rewrite_record
  2    23*
  2    24*	OP85(alt_special_delete)		 delete
  2    25*
  2    26*		move fsbskel.key one position to right
  2    27*		prefix by 511, increment size
  2    28*		RTS(55)
  2    29*
  2    30*	OP93(alt_rewrite)		rewrite
  2    31*
  2    32*		$control("record_status")
  2    33*		delete alternate key values
  2    34*		RTS(52)
  2    35*
  2    36*	OP88(alt_rewrite_add)
  2    37*
  2    38*		$control("record_status")
  2    39*		add alternate record keys
  2    40*		set fields in FSB after rewrite
  2    41*		RTS(58)
  2    42*
  2    43*	SUBR_SEEK_OP(i)		58,[67,41,57]
  2    44*
  2    45*		iox_$seek_key
  2    46*		RTS(i)
  2    47*
  2    48**/
  1   110 
  1   111 
      448 
  3     1 
  3     2 /* STATIC DATA */
  3     3 
  3     4 dcl pr5_struct_ptr ptr static;
  3     5 
  3     6 dcl 1 iocb_arg static,
  3     7      2 pt ptr init(null()),	/* initialized to address of basic structure */
  3     8      2 zeros bit(144) init(""b);
  3     9 dcl 1 temp_arg static,
  3    10      2 pt ptr init(null()),	/* always null */
  3    11      2 type fixed bin init(3),
  3    12      2 zeros bit(108) init(""b);
  3    13 dcl 1 dl_arg static,
  3    14      2 pt ptr init(null()),	/* always null */
  3    15      2 type fixed bin init(1),
  3    16      2 zeros bit(108) init(""b);
  3    17 dcl 1 status_arg static,
  3    18      2 pt ptr init(null()),	/* always null */
  3    19      2 type fixed bin init(3),
  3    20      2 off1 fixed bin init(40),
  3    21      2 zeros bit(72) init(""b);
  3    22 dcl 1 buff_arg static,
  3    23      2 pt ptr init(null()),	/* set to pt to type 9 token for buffer */
  3    24      2 type fixed bin init(5),
  3    25      2 off1 fixed bin init(0),  /* not meaningful */
  3    26      2 off2 fixed bin init(42),  /* allocate ptr at sp|42 */
  3    27      2 bits bit(36) init("0000000000000000001000"b);  /* indirect */
  3    28 dcl 1 fsb_arg static,
  3    29      2 pt ptr init(null()),	/* always null */
  3    30      2 type fixed bin init(3),
  3    31      2 off1 fixed bin,	/* set each time to wd offset in fsb */
  3    32      2 off2 fixed bin init(0),  /* not used */
  3    33      2 bits bit(36) init("0000000000000000000001001"b);	/* pr1 */
  3    34 
  3    35 dcl 1 pr5_struct static,
  3    36      2 pr5 fixed bin init(5),
  3    37      2 pointer_no bit(3),
  3    38      2 lock fixed bin init(0),
  3    39      2 switch fixed bin init(0),
  3    40      2 segno fixed bin init(0),
  3    41      2 offset fixed bin init(0),
  3    42      2 reset fixed bin;
  3    43 dcl 1 x1_struct static,
  3    44      2 x1 fixed bin init(11),
  3    45      2 reg_no bit(4),
  3    46      2 lock fixed bin init(0),
  3    47      2 already_there fixed bin,
  3    48      2 contains fixed bin init(0),
  3    49      2 null_ptr ptr init(null()),
  3    50      2 fill bit(18) unaligned init((18)"0"b),
  3    51      2 literal bit(18) unaligned;
  3    52 dcl 1 aq_struct static,
  3    53      2 aq fixed bin init(3),
  3    54      2 reg_no bit(4),
  3    55      2 lock fixed bin init(0),
  3    56      2 already_there fixed bin,
  3    57      2 contains fixed bin init(0),
  3    58      2 null_ptr ptr init(null()),
  3    59      2 fill bit(18) unaligned init((18)"0"b),
  3    60      2 literal bit(18) unaligned;
  3    61 
  3    62 dcl 1 iocb_basic_struct static,
  3    63      2 type fixed bin init(1),
  3    64      2 operand_no fixed bin init(0),
  3    65      2 lock fixed bin init(0),
  3    66      2 seg fixed bin,
  3    67      2 off fixed bin,
  3    68      2 send_receive fixed bin init(0);
  3    69 
  3    70 dcl 1 mpout static,
  3    71      2 n fixed bin init(4),
  3    72      2 pt1 ptr,
  3    73      2 pt2 ptr,
  3    74      2 pt3 ptr,
  3    75      2 pt4 ptr;
  3    76 dcl file_key_desc char(40) based;
  3    77 dcl 1 num_type9 static,
  3    78      2 header (4) fixed bin init(112,0,0,9),
  3    79      2 repl_ptr (2) ptr init((2)null()),
  3    80      2 fill1  bit(108) init(""b),
  3    81      2 file_key_info,
  3    82 	3 fb1 (3) fixed bin init(0,0,0),
  3    83 	3 size fixed bin init(0),
  3    84 	3 places_left fixed bin,
  3    85 	3 places_right fixed bin init(0),
  3    86 	3 flags1 bit(36) init("010000100100000001000000000100000000"b),
  3    87 	3 flags2 bit(36) init(""b),
  3    88 	3 seg fixed bin init(0),
  3    89 	3 off fixed bin,
  3    90      2 fill2 (7) fixed bin init(0,0,0,0,0,0,0);
  3    91 dcl 1 alpha_type9 static,
  3    92      2 header (4) fixed bin init(112,0,0,9),
  3    93      2 repl_ptr (2) ptr init((2)null()),
  3    94      2 fill1  bit(108) init(""b),
  3    95      2 file_key_info,
  3    96 	3 fb1 (3) fixed bin init(0,0,0),
  3    97 	3 size fixed bin init(0),
  3    98 	3 fb2 (2) fixed bin init(0,0),
  3    99 	3 flags1 bit(36) init("010000100100000000010000000100000000"b),
  3   100 	3 flags2 bit(36) init(""b),
  3   101 	3 seg fixed bin init(0),
  3   102 	3 off fixed bin,
  3   103      2 fill2 (7) fixed bin init(0,0,0,0,0,0,0);
  3   104 dcl 1 trans_type9 static,
  3   105      2 header (4) fixed bin init(112,0,0,9),
  3   106      2 repl_ptr (2) ptr init((2)null()),
  3   107      2 fill1  bit(108) init(""b),
  3   108      2 file_key_info,
  3   109 	3 fb1 (3) fixed bin init(0,0,0),
  3   110 	3 size fixed bin init(0),
  3   111 	3 fb2 (2) fixed bin init(0,0),
  3   112 	3 flags1 bit(36) init("010000100100000000010000000100000000"b),
  3   113 	3 flags2 bit(36) init(""b),
  3   114 	3 seg fixed bin init(0),
  3   115 	3 off fixed bin,
  3   116      2 fill2 (7) fixed bin init(0,0,0,0,0,0,0);
  3   117 dcl 1 fkey_type9 static,
  3   118      2 header (4) fixed bin init(112,0,0,9),
  3   119      2 repl_ptr (2) ptr init((2)null()),
  3   120      2 fill1  bit(108) init(""b),
  3   121      2 file_key_info,
  3   122 	3 fb1 (3) fixed bin init(0,0,0),
  3   123 	3 size fixed bin init(0),
  3   124 	3 fb2 (2) fixed bin init(0,0),
  3   125 	3 flags1 bit(36) init(""b),
  3   126 	3 flags2 bit(36) init(""b),
  3   127 	3 seg fixed bin,
  3   128 	3 off fixed bin,
  3   129      2 fill2 (7) fixed bin init(0,0,0,0,0,0,0);
  3   130 dcl 1 type19 static,
  3   131      2 size fixed bin init(38),
  3   132      2 line fixed bin init(0),
  3   133      2 column fixed bin init(0),
  3   134      2 type fixed bin init(19),
  3   135      2 verb fixed bin init(18),	 	/* verb number */
  3   136      2 e fixed bin init(1),
  3   137      2 h fixed bin init(0),
  3   138      2 i fixed bin init(0),
  3   139      2 j fixed bin init(0),
  3   140      2 a bit(3) init(""b),
  3   141      2 b bit(1) init(""b),
  3   142      2 c bit(1) init(""b),
  3   143      2 d bit(2) init(""b),
  3   144      2 f bit(2) init(""b),
  3   145      2 g bit(2) init(""b),
  3   146      2 k bit(5) init(""b);
  3   147 
  3   148 dcl 1 ioerror static,
  3   149      2 cobol_code fixed bin,
  3   150      2 retry_tag fixed bin,
  3   151      2 is_tag fixed bin,
  3   152      2 ns_tag fixed bin,
  3   153      2 type1_ptr ptr,
  3   154      2 mode fixed bin;
  3   155 
  3   156 dcl mcode_off fixed bin static init(40);
  3   157 dcl fsb_keylen_sw fixed bin static init(24);	/* offset 6 */
  3   158 dcl fsb_key fixed bin static init(28);		/* offset 7 */
  3   159 dcl fsb_key_wdoff fixed bin static init(7);
  3   160 dcl rewrite_errno fixed bin static init(31);	/* Unable to rewrite record */
  3   161 dcl seek_errno fixed bin static init(32);	/* Unable to seek key for rewrite */
  3   162 dcl rewrite_seq_errno fixed bin static init(33); /* Invalid rewrite attempted - previous I/O operation was not read */
  3   163 dcl key_mismatch_errno fixed bin static init(34);
  3   164 				/* Invalid rewrite attempted - new key is not identical to old key */
  3   165 dcl record_mismatch_errno fixed bin static init(35);
  3   166 		/* Invalid rewrite attempted - new record length is not identical to old record length */
  3   167 dcl output_errno fixed bin static init(43);
  3   168 			/* Invalid I/O operation.  Attempt to rewrite in a file not opened as i-o */
  3   169 
  3   170 
  3   171 /* EXTERNAL ENTRY NAMES */
  3   172 
  3   173 dcl cobol_trans_alphabet$io entry(ptr, ptr, fixed bin, fixed bin);
  3   174 dcl cobol_ioop_util$set_icode entry;
  3   175 dcl cobol_gen_ioerror$finish_up entry(ptr, ptr);
  3   176 dcl cobol_reg_manager$after_op entry(fixed bin);
  3   177 dcl cobol_gen_ioerror entry(ptr, ptr);
  3   178 dcl cobol_call_op entry(fixed bin, fixed bin);
  3   179 dcl cobol_ioop_util$lda_du entry(fixed bin);
  3   180 dcl cobol_ioop_util$set_x5 entry(fixed bin);
  3   181 dcl cobol_alloc$stack entry(fixed bin,fixed bin,fixed bin);
  3   182 dcl cobol_read_ft entry(fixed bin,ptr);
  3   183 dcl cobol_read_rand entry(fixed bin,char(5),ptr);
  3   184 dcl cobol_define_tag entry(fixed bin);
  3   185 
  3   186 /* sub-generators */
  3   187 dcl cobol_move_gen entry(ptr);
  3   188 dcl cobol_set_pr entry(ptr, ptr);
  3   189 dcl cobol_set_fsbptr entry(ptr);
  3   190 dcl cobol_get_size entry(ptr,fixed bin,fixed bin);
  3   191 dcl cobol_io_util$file_desc entry(fixed bin(24));
  3   192 dcl cobol_io_util$t9dec_to_bin entry(bit(3) aligned,fixed bin,ptr);
  3   193 dcl cobol_io_util$move_direct entry(bit(3) aligned,fixed bin,fixed bin,fixed bin,bit(18) aligned);
  3   194 dcl cobol_io_util$bypass_error entry(fixed bin,fixed bin);
  3   195 dcl cobol_io_util$bypass_mode_error entry(fixed bin,bit(2) aligned);
  3   196 dcl cobol_io_util$bypass_seqerror entry(fixed bin);
  3   197 dcl cobol_io_util$compare_word entry(fixed bin,bit(3) aligned,fixed bin,bit(3) aligned,fixed bin,fixed bin);
  3   198 dcl cobol_io_util$compare_zero_word entry(fixed bin,bit(3) aligned,fixed bin,bit(3) aligned,fixed bin,fixed bin);
  3   199 dcl cobol_io_util$compare_key entry(fixed bin,ptr);
  3   200 dcl cobol_io_util$fsb_key_loc entry(fixed bin);
  3   201 dcl cobol_io_util$set_fsb_loc entry;
  3   202 
  3   203 /* BUILTIN FUNCTIONS */
  3   204 
  3   205 dcl	(substr,mod,binary,fixed,addr,addrel,rel,length,
  3   206 	string,unspec,null,index)		builtin;
  3   207 
  4     1 
  4     2 /* BEGIN INCLUDE FILE ...   cobol_file_table.incl.pl1 */
  4     3 /*     <<<   INCLUDE FILE FOR FILE TABLE IN COMMON   >>>     */
  4     4 
  4     5 /* Modified on 09/30/80 by FCH, [4.4-1], density is 6250 is supported */
  4     6 /* Modified on 12/05/78 by RAL, [3.0-3], added dupl_alt from dummy102 */
  4     7 /* Modified on 11/21/78 by RAL, [3.0-2], added space for abs_record_offset from filler */
  4     8 /* Modified on 10/26/78 by RAL, [3.0-1], added space for file_desc_1 table offset from filler */
  4     9 /*     <<<   LAST MODIFIED ON 06-02-77 by GM         >>>	*/
  4    10 /*     <<<   LAST MODIFIED ON 05-31-77 by GM         >>>	*/
  4    11 /*     <<<   LAST MODIFIED  ON 06-30-76 by GM        >>>	*/
  4    12 /*     <<<   LAST MODIFIED ON 06-07-76 by GM    >>>     */
  4    13 /*     <<<   LAST MODIFIED ON 11-29-74 by orn   >>>     */
  4    14 
  4    15 /*
  4    16*A file table is created in variable common for each file selected in the
  4    17*environment division.  The fields of a given file table provide information
  4    18*about the specific file for which the file table is generated.  The
  4    19*addresses which may be contained in the various "info" fields of the file
  4    20*table are addresses in variable common.
  4    21**/
  4    22 
  4    23 /*   THE FILE TABLE STRUCTURE   */
  4    24 
  4    25 dcl	1 file_table based (ft_ptr),
  4    26 		2 next char (5),
  4    27 		2 ifn char (16),
  4    28 		2 attach_options_info char(5),	/*06/02/77*/
  4    29 		2 replacement_info char(5),		/*06/02/77*/
  4    30 		2 file_id_info char(5),		/*05/31/77*/
  4    31 		2 retention_info char(5),		/*05/31/77*/
  4    32 		2 filler0 char (3) ,			/* [3.0-1] */
  4    33 		2 file_desc_1_offset fixed bin (24),		/* [3.0-1] */
  4    34 		2 abs_record_offset fixed bin (24),		/* [3.-02] */
  4    35 		2 filler char(5),		/* this area is available.*/
  4    36 		2 padding_char char (1),
  4    37 		2 banner_char char (1),
  4    38 		2 file_status_info char (5),
  4    39 		2 extra_status_info char (5),
  4    40 		2 cat_id_info char (5),
  4    41 		2 r_key_info char (5),
  4    42 		2 alt_key_info char (5),
  4    43 		2 rec_do_info char (5),
  4    44 		2 label_info char (5),
  4    45 		2 data_info char (5),
  4    46 		2 report_info char (5),
  4    47 		2 linage_info char (5),
  4    48 		2 optional bit (1),						/*06/07/76*/
  4    49 		2 external bit (1),
  4    50 		2 file_status bit (1),
  4    51 		2 extra_status bit (1),
  4    52 		2 sysin bit (1),
  4    53 		2 sysout bit (1),
  4    54 		2 move_mode bit (1),
  4    55 		2 locate_mode bit (1),
  4    56 		2 fixed_recs bit (1),
  4    57 		2 variable_recs bit (1),
  4    58 		2 spanned_recs bit (1),				/*06/07/76*/
  4    59 		2 interchange bit (1),				/*06/07/76*/
  4    60 		2 relative_key bit (1),
  4    61 		2 record_key bit (1),
  4    62 		2 even_parity bit (1),
  4    63 		2 odd_parity bit (1),
  4    64 		2 padding bit (1),
  4    65 		2 banner bit (1),
  4    66 		2 random bit (1),
  4    67 		2 no_file_lockout bit (1),
  4    68 		2 no_write_check bit (1),
  4    69 		2 no_resident_index bit (1),
  4    70 		2 same_file bit (1),
  4    71 		2 sort_file bit (1),
  4    72 		2 rec_do bit (1),
  4    73 		2 linage bit (1),
  4    74 		2 code_set_clause bit (1),
  4    75 		/* history */
  4    76 		2 close bit (1),
  4    77 		2 delete bit (1),
  4    78 		2 open_in bit (1),
  4    79 		2 open_out bit (1),
  4    80 		2 open_io bit (1),
  4    81 		2 open_ext bit (1),
  4    82 		2 read bit (1),
  4    83 		2 release bit (1),
  4    84 		2 return_bit bit (1),
  4    85 		2 rewrite bit (1),
  4    86 		2 sort bit (1),
  4    87 		2 start bit (1),
  4    88 		2 use_error bit (1),
  4    89 		2 write bit (1),
  4    90 		2 read_next bit (1),
  4    91 		2 read_key bit (1),
  4    92 		2 accept bit (1),
  4    93 		2 display bit (1),
  4    94 		2 unequal_recs bit (1),
  4    95 		2 dummy_sysin bit (1),
  4    96 		2 dummy_sysout bit (1),
  4    97 		2 file_no fixed bin,
  4    98 		2 uca_offset fixed bin(24),
  4    99 		2 cra_seg fixed bin,
  4   100 		2 cra_offset fixed bin(24),
  4   101 		2 max_cra_size fixed bin(24),
  4   102 		2 catalogued fixed bin,
  4   103 		2 organization fixed bin,
  4   104 		2 org_qual fixed bin,
  4   105 		2 access fixed bin,
  4   106 		2 buffers fixed bin,
  4   107 		2 device fixed bin,
  4   108 		2 record_prefix fixed bin,				/*06/07/76*/
  4   109 		2 alternate_keys fixed bin,
  4   110 		2 record_format fixed bin,
  4   111 		2 label_format fixed bin,
  4   112 		2 key_location fixed bin,
  4   113 		2 key_size fixed bin,
  4   114 		2 temporary fixed bin,
  4   115 		2 address_format fixed bin,
  4   116 		2 same_area_clause fixed bin,
  4   117 		2 same_rec_clause fixed bin,
  4   118 		2 same_sort_clause fixed bin,
  4   119 		2 mult_clause_no fixed bin,
  4   120 		2 mult_position_no fixed bin,
  4   121 		2 block_desc fixed bin,
  4   122 		2 block_min fixed bin(24),
  4   123 		2 block_max fixed bin(24),
  4   124 		2 rec_min fixed bin(24),
  4   125 		2 rec_max fixed bin(24),
  4   126 		2 label_count fixed bin,
  4   127 		2 ifn_size fixed bin,
  4   128 		2 data_count fixed bin,
  4   129 		2 report_count fixed bin,
  4   130 		2 code_set fixed bin,
  4   131 		2 error_exit fixed bin,
  4   132 		2 prefix_size fixed bin,
  4   133 		2 blocked bit (1),
  4   134 		2 variable bit (1),
  4   135 		2 unbannered bit (1),
  4   136 		2 prefix_clause bit (1),
  4   137 		2 symbolic bit (1),
  4   138 		2 address_format_bit bit (1),
  4   139 		2 bsn bit(1),						/*06/07/76*/
  4   140 		2 process_area bit(1),					/*06/07/76*/
  4   141 		2 dupl_alt bit (1),			/* [3.0-3] */
  4   142 		2 dummy102 bit (23),
  4   143 		2 name_size fixed bin,
  4   144 		2 name char(32),
  4   145 		2 id char(32),
  4   146 		2 temp bit(1) ,
  4   147 		2 perm bit(1) ,
  4   148 		2 attach bit(1) ,
  4   149 		2 detach bit(1) ,
  4   150 		2 fsb ,		/* file state block */
  4   151 		     3 seg fixed bin(24), /* internal addr */
  4   152 		     3 off fixed bin(24),
  4   153 		2 tape,
  4   154 		     3 density bit(1) ,	/* 0-hi 1-lo */
  4   155 		     3 retain bit(1),	/* 0 not retained across attachment, 1 retained */
  4   156 		     3 force bit(1),	/* 0 check retention date, 1 no check */
  4   157 		     3 protect bit(1) ,	/* 0-no 1-yes */
  4   158 		     3 den_6250 bit(1),	/* 0-no 1-yes */		/*[4.4-1]*/
  4   159 		2 cat_nm char(200),
  4   160 		2 ao_len fixed bin(24),		/* attach options */
  4   161 		2 ao_string char(256),
  4   162 		2 output_mode fixed bin,	/*	0 not specified
  4   163*						1 generation
  4   164*						2 modification
  4   165*						3 replacement literal
  4   166*						4 replacement dataname	*/
  4   167 		2 om_len	fixed bin,		/* length of output mode */
  4   168 		2 om_string char(17),
  4   169 		2 tape_device fixed bin,	/*	0 not specified
  4   170*						1 integer
  4   171*						2 dataname	*/
  4   172 		2 tape_device_num fixed bin,
  4   173 		2 tape_device_key char(5),
  4   174 		2 add_cat_key char(5);
  4   175 
  4   176 
  4   177 /* END INCLUDE FILE ...   cobol_file_table.incl.pl1 */
  4   178 
  3   208 
  5     1 
  5     2 /* BEGIN INCLUDE FILE ... cobol_file_key.incl.pl1 */
  5     3 /* Last modified on 03/30/78 by FCH */
  5     4 
  5     5 /*
  5     6*A file key record is created in variable common for any one of several
  5     7*data items which may be associated with a file name.  The key_type field in
  5     8*the file key record identifies the type of item for which the record is
  5     9*created.  The name in a file key record is resolved by the replacement
  5    10*phase, and a section of the type 9 entry in the name table for the
  5    11*specified data item is stored in the file key record.  The stored
  5    12*description is subsequently used by the generator phase.
  5    13**/
  5    14 
  5    15 /*   THE FILE KEY RECORD STRUCTURE   */
  5    16 
  5    17 dcl 	1 file_key based (fkey_ptr),
  5    18 		2 next char(5),
  5    19 		2 next_alt char(5),
  5    20 		2 qual char(5),
  5    21 		2 info,
  5    22 		3 duplicates bit(1),
  5    23 		3 filler bit(7),
  5    24 		2 file_no fixed bin,
  5    25 		2 key_type fixed bin,
  5    26 		2 line fixed bin,
  5    27 		2 column fixed bin,
  5    28 		2 temp_seg fixed bin,
  5    29 		2 temp_offset fixed bin(24),
  5    30 		2 desc char(40),
  5    31 		2 name_size fixed bin,
  5    32 		2 name char(0 refer(file_key.name_size));
  5    33 
  5    34 /* END INCLUDE FILE ... cobol_file_key.incl.pl1 */
  5    35 
  3   209 
  6     1 
  6     2 /* BEGIN INCLUDE FILE ... cobol_type1.incl.pl1 */
  6     3 /* Last modified on 11/19/76 by ORN */
  6     4 
  6     5 /*
  6     6*A reserved word token is created in the minpral files for each occurrence
  6     7*of a reserved word in the source program.  The value of the key field
  6     8*indicates the specific reserved word which a type 1 token represents.
  6     9**/
  6    10 
  6    11 dcl rw_ptr ptr;
  6    12 
  6    13 /* BEGIN DECLARATION OF TYPE1 (RESERVED WORD) TOKEN */
  6    14 dcl	1 reserved_word based (rw_ptr),
  7     1 
  7     2 /* begin include file ... cobol_TYPE1.incl.pl1 */
  7     3 /* Last modified on 11/17/76 by ORN */
  7     4 /* Last modified on 12/28/76 by FCH */
  7     5 /* Last modified on 12/16/80 by FCH */
  7     6 
  7     7 		/* header */
  7     8 		2 size fixed bin,
  7     9 		2 line fixed bin,
  7    10 		2 column fixed bin,
  7    11 		2 type fixed bin,
  7    12 		/* body */
  7    13 		2 key fixed bin,
  7    14 		/* procedure division class bits */
  7    15 		2 verb bit (1),
  7    16 		2 arith_op bit (1),
  7    17 		2 figcon bit (1),
  7    18 		2 terminator bit (1),
  7    19 		2 end_dec bit (1),
  7    20 		2 rel_op bit (1),
  7    21 		2 imper_verb bit (1),
  7    22 		2 end_cobol bit (1),
  7    23 		/* data division class bits */
  7    24 		2 section_header bit (1),
  7    25 		2 fs_ind bit (1),
  7    26 		2 fd_clause bit (1),
  7    27 		2 dd_clause bit (1),
  7    28 		2 cd_input bit (1),
  7    29 		2 cd_output bit (1),
  7    30 		2 cset_name bit (1),
  7    31 		2 ss_division bit (1),
  7    32 		2 repl_jump_ind bit (4),
  7    33 		2 ided_recovery bit (1),
  7    34 		2 report_writer bit (5),
  7    35 		2 ss_desc_entry bit (1),
  7    36 		2 jump_index fixed bin,
  7    37 		2 length fixed bin,
  7    38 		2 name char(0 refer(reserved_word.length));
  7    39 
  7    40 
  7    41 
  7    42 /* end include file ... cobol_TYPE1.incl.pl1 */
  7    43 
  6    15 
  6    16 /* END DECLARATION OF TYPE1 (RESERVED WORD) TOKEN */
  6    17 
  6    18 /* END INCLUDE FILE ... cobol_type1.incl.pl1 */
  6    19 
  3   210 
  8     1 
  8     2 /* BEGIN INCLUDE FILE ... cobol_type9.incl.pl1 */
  8     3 /* Last modified on 11/19/76 by ORN */
  8     4 
  8     5 /*
  8     6*A type 9 data name token is entered into the name table by the data
  8     7*division syntax phase for each data name described in the data division.
  8     8*The replacement phase subsequently replaces type 8 user word references
  8     9*to data names in the procedure division minpral file with the corresponding
  8    10*type 9 tokens from the name table.
  8    11**/
  8    12 
  8    13 /* dcl dn_ptr ptr; */
  8    14 
  8    15 /* BEGIN DECLARATION OF TYPE9 (DATA NAME) TOKEN */
  8    16 dcl 1 data_name based (dn_ptr),
  9     1 
  9     2 /* begin include file ... cobol_TYPE9.incl.pl1 */
  9     3 /* Last modified on 06/19/77 by ORN */
  9     4 /* Last modified on 12/28/76 by FCH */
  9     5 
  9     6 		/* header */
  9     7 		2 size fixed bin,
  9     8 		2 line fixed bin,
  9     9 		2 column fixed bin,
  9    10 		2 type fixed bin,
  9    11 		/* body */
  9    12 		2 string_ptr ptr,
  9    13 		2 prev_rec ptr,
  9    14 		2 searched bit (1),
  9    15 		2 duplicate bit (1),
  9    16 		2 saved bit (1),
  9    17 		2 debug_ind bit (1),
  9    18 		2 filler2 bit (3),
  9    19 		2 used_as_sub bit (1),
  9    20 		2 def_line fixed bin,
  9    21 		2 level fixed bin,
  9    22 		2 linkage fixed bin,
  9    23 		2 file_num fixed bin,
  9    24 		2 size_rtn fixed bin,
  9    25 		2 item_length fixed bin(24),
  9    26 		2 places_left fixed bin,
  9    27 		2 places_right fixed bin,
  9    28 		/* description */
  9    29 		2 file_section bit (1),
  9    30 		2 working_storage bit (1),
  9    31 		2 constant_section bit (1),
  9    32 		2 linkage_section bit (1),
  9    33 		2 communication_section bit (1),
  9    34 		2 report_section bit (1),
  9    35 		2 level_77 bit (1),
  9    36 		2 level_01 bit (1),
  9    37 		2 non_elementary bit (1),
  9    38 		2 elementary bit (1),
  9    39 		2 filler_item bit (1),
  9    40 		2 s_of_rdf bit (1),
  9    41 		2 o_of_rdf bit (1),
  9    42 		2 bin_18 bit (1),
  9    43 		2 bin_36 bit (1),
  9    44 		2 pic_has_l bit (1),
  9    45 		2 pic_is_do bit (1),
  9    46 		2 numeric bit (1),
  9    47 		2 numeric_edited bit (1),
  9    48 		2 alphanum bit (1),
  9    49 		2 alphanum_edited bit (1),
  9    50 		2 alphabetic bit (1),
  9    51 		2 alphabetic_edited bit (1),
  9    52 		2 pic_has_p bit (1),
  9    53 		2 pic_has_ast bit (1),
  9    54 		2 item_signed bit(1),
  9    55 		2 sign_separate bit (1),
  9    56 		2 display bit (1),
  9    57 		2 comp bit (1),
  9    58 		2 ascii_packed_dec_h bit (1),	/* as of 8/16/76  this field used for comp8. */
  9    59 		2 ascii_packed_dec bit (1),
  9    60 		2 ebcdic_packed_dec bit (1),
  9    61 		2 bin_16 bit (1),
  9    62 		2 bin_32 bit (1),
  9    63 		2 usage_index bit (1),
  9    64 		2 just_right bit (1),
  9    65 		2 compare_argument bit (1),
  9    66 		2 sync bit (1),
  9    67 		2 temporary bit (1),
  9    68 		2 bwz bit (1),
  9    69 		2 variable_length bit (1),
  9    70 		2 subscripted bit (1),
  9    71 		2 occurs_do bit (1),
  9    72 		2 key_a bit (1),
  9    73 		2 key_d bit (1),
  9    74 		2 indexed_by bit (1),
  9    75 		2 value_numeric bit (1),
  9    76 		2 value_non_numeric bit (1),
  9    77 		2 value_signed bit (1),
  9    78 		2 sign_type bit (3),
  9    79 		2 pic_integer bit (1),
  9    80 		2 ast_when_zero bit (1),
  9    81 		2 label_record bit (1),
  9    82 		2 sign_clause_occurred bit (1),
  9    83 		2 okey_dn bit (1),
  9    84 		2 subject_of_keyis bit (1),
  9    85 		2 exp_redefining bit (1),
  9    86 		2 sync_in_rec bit (1),
  9    87 		2 rounded bit (1),
  9    88 		2 ad_bit bit (1),
  9    89 		2 debug_all bit (1),
  9    90 		2 overlap bit (1),
  9    91 		2 sum_counter bit (1),
  9    92 		2 exp_occurs bit (1),
  9    93 		2 linage_counter bit (1),
  9    94 		2 rnm_01 bit (1),
  9    95 		2 aligned bit (1),
  9    96 		2 not_user_writable bit (1),
  9    97 		2 database_key bit (1),
  9    98 		2 database_data_item bit (1),
  9    99 		2 seg_num fixed bin,
  9   100 		2 offset fixed bin(24),
  9   101 		2 initial_ptr fixed bin,
  9   102 		2 edit_ptr fixed bin,
  9   103 		2 occurs_ptr fixed bin,
  9   104 		2 do_rec char(5),
  9   105 		2 bitt bit (1),
  9   106 		2 byte bit (1),
  9   107 		2 half_word bit (1),
  9   108 		2 word bit (1),
  9   109 		2 double_word bit (1),
  9   110 		2 half_byte bit (1),
  9   111 		2 filler5 bit (1),
  9   112 		2 bit_offset bit (4),
  9   113 		2 son_cnt bit (16),
  9   114 		2 max_red_size fixed bin(24),
  9   115 		2 name_size fixed bin,
  9   116 		2 name char(0 refer(data_name.name_size));	
  9   117 
  9   118 
  9   119 
  9   120 /* end include file ... cobol_TYPE9.incl.pl1 */
  9   121 
  8    17 
  8    18 /* END DECLARATION OF TYPE9 (DATA NAME) TOKEN */
  8    19 
  8    20 /* END INCLUDE FILE ... cobol_type9.incl.pl1 */
  8    21 
  3   211 
 10     1 
 10     2 /* BEGIN INCLUDE FILE ... cobol_type12.incl.pl1 */
 10     3 /* Last modified on 11/19/76 by ORN */
 10     4 
 10     5 /*
 10     6*A type 12 file name token is entered into the name table by the data
 10     7*division syntax phase for each file name appearing in the data division.
 10     8*When the replacement phase processes the procedure division minpral file,
 10     9*each reference to a file name is replaced with the type 12 token created
 10    10*for that file name.
 10    11**/
 10    12 
 10    13 /* dcl name_ptr ptr; */
 10    14 
 10    15 /* BEGIN DECLARATION OF TYPE12 (FILE NAME) TOKEN */
 10    16 dcl 	1 fd_token based (name_ptr),
 11     1 
 11     2 /* begin include file ... cobol_TYPE12.incl.pl1 */
 11     3 /* Last modified on 11/17/76 by ORN */
 11     4 
 11     5 		/* header */
 11     6 		2 size fixed bin,
 11     7 		2 line fixed bin,
 11     8 		2 column fixed bin,
 11     9 		2 type fixed bin,
 11    10 		/* body */
 11    11 		2 string_ptr ptr,
 11    12 		2 prev_rec ptr,
 11    13 		2 info bit (8),
 11    14 		2 def_line fixed bin,
 11    15 		2 file_no fixed bin,
 11    16 		2 name_size fixed bin,
 11    17 		2 name char(0 refer(fd_token.name_size));	
 11    18 
 11    19 /* end include file ... cobol_TYPE12.incl.pl1 */
 11    20 
 10    17 
 10    18 /* END DECLARATION OF TYPE12 (FILE NAME) TOKEN */
 10    19 
 10    20 
 10    21 /* END INCLUDE FILE ... cobol_type12.incl.pl1 */
 10    22 
  3   212 
 12     1 
 12     2 /* BEGIN INCLUDE FILE ... cobol_type19.incl.pl1 */
 12     3 /* last modified on 11/19/76 by ORN */
 12     4 
 12     5 /*
 12     6*A type 19 end of statement token is created in the procedure division
 12     7*minpral file at the end of each minpral statement generated by the
 12     8*procedure division syntax phase.  A minpral statement may be a complete or
 12     9*partial source language statement.  A type 19 token contains information
 12    10*describing the statement which it delimits.
 12    11**/
 12    12 
 12    13 dcl eos_ptr ptr;
 12    14 
 12    15 /* BEGIN DECLARATION OF TYPE19 (END STATEMENT) TOKEN */
 12    16 dcl	1 end_stmt based (eos_ptr),
 13     1 
 13     2 /* begin include file ... cobol_TYPE19.incl.pl1 */
 13     3 /* Last modified on 11/17/76 by ORN */
 13     4 
 13     5 		/* header */
 13     6 		2 size fixed bin,
 13     7 		2 line fixed bin,
 13     8 		2 column fixed bin,
 13     9 		2 type fixed bin,
 13    10 		/* body */
 13    11 		2 verb fixed bin,
 13    12 		2 e fixed bin,
 13    13 		2 h fixed bin,
 13    14 		2 i fixed bin,
 13    15 		2 j fixed bin,
 13    16 		2 a bit (3),
 13    17 		2 b bit (1),
 13    18 		2 c bit (1),
 13    19 		2 d bit (2),
 13    20 		2 f bit (2),
 13    21 		2 g bit (2),
 13    22 		2 k bit (5),
 13    23 		2 always_an bit (1);
 13    24 
 13    25 /* end include file ... cobol_TYPE19.incl.pl1 */
 13    26 
 12    17 
 12    18 /* END DECLARATION OF TYPE19 (END STATEMENT) TOKEN */
 12    19 
 12    20 /*
 12    21*FIELD		CONTENTS
 12    22*
 12    23*size		The total size in bytes of this end of statement token.
 12    24*line		0
 12    25*column		0
 12    26*type		19
 12    27*verb		A value indicating the verb in this statement
 12    28*		 1 = accept
 12    29*		 2 = add
 12    30*		 3 = on size error
 12    31*		 4 = alter
 12    32*		 5 = call
 12    33*		 7 = cancel
 12    34*		 8 = close
 12    35*		 9 = divide
 12    36*		10 = multiply
 12    37*		11 = subtract
 12    38*		12 = exit
 12    39*		14 = go
 12    40*		15 = merge
 12    41*		16 = initiate
 12    42*		17 = inspect
 12    43*		18 = move
 12    44*		19 = open
 12    45*		20 = perform
 12    46*		21 = read
 12    47*		23 = receive
 12    48*		24 = release
 12    49*		25 = return
 12    50*		26 = search
 12    51*		27 = rewrite
 12    52*		29 = seek
 12    53*		30 = send
 12    54*		31 = set
 12    55*		33 = stop
 12    56*		34 = string
 12    57*		35 = suspend
 12    58*		36 = terminate
 12    59*		37 = unstring
 12    60*		38 = write
 12    61*		39 = use
 12    62*		40 = compute
 12    63*		41 = disable
 12    64*		42 = display
 12    65*		43 = enable
 12    66*		45 = generate
 12    67*		46 = hold
 12    68*		48 = process
 12    69*		49 = sort
 12    70*		52 = procedure
 12    71*		53 = declaratives
 12    72*		54 = section name
 12    73*		55 = paragraph name
 12    74*		98 = end
 12    75*e,h,i,j		The significance of these fields differs with each
 12    76*		statement.  These fields are normally used as counters.
 12    77*a,b,c,d,f,g,k	The significance of these fields differs with each
 12    78*		statement.  These fields are normally used as indicators.
 12    79**/
 12    80 
 12    81 /* END INCLUDE FILE ... cobol_type19.incl.pl1 */
 12    82 
  3   213 
 14     1 
 14     2 /* BEGIN INCLUDE FILE ... cobol_.incl.pl1 */
 14     3 /* last modified Feb 4, 1977 by ORN  */
 14     4 
 14     5 /* This file defines all external data used in the generator phase of Multics Cobol */
 14     6 
 14     7 /* POINTERS */
 14     8 dcl cobol_$text_base_ptr ptr  ext;
 14     9 dcl text_base_ptr ptr  defined (cobol_$text_base_ptr);
 14    10 dcl cobol_$con_end_ptr ptr  ext;
 14    11 dcl con_end_ptr ptr  defined (cobol_$con_end_ptr);
 14    12 dcl cobol_$def_base_ptr ptr  ext;
 14    13 dcl def_base_ptr ptr  defined (cobol_$def_base_ptr);
 14    14 dcl cobol_$link_base_ptr ptr  ext;
 14    15 dcl link_base_ptr ptr  defined (cobol_$link_base_ptr);
 14    16 dcl cobol_$sym_base_ptr ptr  ext;
 14    17 dcl sym_base_ptr ptr  defined (cobol_$sym_base_ptr);
 14    18 dcl cobol_$reloc_text_base_ptr ptr  ext;
 14    19 dcl reloc_text_base_ptr ptr  defined (cobol_$reloc_text_base_ptr);
 14    20 dcl cobol_$reloc_def_base_ptr ptr  ext;
 14    21 dcl reloc_def_base_ptr ptr  defined (cobol_$reloc_def_base_ptr);
 14    22 dcl cobol_$reloc_link_base_ptr ptr  ext;
 14    23 dcl reloc_link_base_ptr ptr  defined (cobol_$reloc_link_base_ptr);
 14    24 dcl cobol_$reloc_sym_base_ptr ptr  ext;
 14    25 dcl reloc_sym_base_ptr ptr  defined (cobol_$reloc_sym_base_ptr);
 14    26 dcl cobol_$reloc_work_base_ptr ptr  ext;
 14    27 dcl reloc_work_base_ptr ptr  defined (cobol_$reloc_work_base_ptr);
 14    28 dcl cobol_$pd_map_ptr ptr  ext;
 14    29 dcl pd_map_ptr ptr  defined (cobol_$pd_map_ptr);
 14    30 dcl cobol_$fixup_ptr ptr  ext;
 14    31 dcl fixup_ptr ptr  defined (cobol_$fixup_ptr);
 14    32 dcl cobol_$initval_base_ptr ptr  ext;
 14    33 dcl initval_base_ptr ptr  defined (cobol_$initval_base_ptr);
 14    34 dcl cobol_$initval_file_ptr ptr  ext;
 14    35 dcl initval_file_ptr ptr  defined (cobol_$initval_file_ptr);
 14    36 dcl cobol_$perform_list_ptr ptr  ext;
 14    37 dcl perform_list_ptr ptr  defined (cobol_$perform_list_ptr);
 14    38 dcl cobol_$alter_list_ptr ptr  ext;
 14    39 dcl alter_list_ptr ptr  defined (cobol_$alter_list_ptr);
 14    40 dcl cobol_$seg_init_list_ptr ptr  ext;
 14    41 dcl seg_init_list_ptr ptr  defined (cobol_$seg_init_list_ptr);
 14    42 dcl cobol_$temp_token_area_ptr ptr  ext;
 14    43 dcl temp_token_area_ptr ptr  defined (cobol_$temp_token_area_ptr);
 14    44 dcl cobol_$temp_token_ptr ptr  ext;
 14    45 dcl temp_token_ptr ptr  defined (cobol_$temp_token_ptr);
 14    46 dcl cobol_$token_block1_ptr ptr  ext;
 14    47 dcl token_block1_ptr ptr  defined (cobol_$token_block1_ptr);
 14    48 dcl cobol_$token_block2_ptr ptr  ext;
 14    49 dcl token_block2_ptr ptr  defined (cobol_$token_block2_ptr);
 14    50 dcl cobol_$minpral5_ptr ptr  ext;
 14    51 dcl minpral5_ptr ptr  defined (cobol_$minpral5_ptr);
 14    52 dcl cobol_$tag_table_ptr ptr  ext;
 14    53 dcl tag_table_ptr ptr  defined (cobol_$tag_table_ptr);
 14    54 dcl cobol_$map_data_ptr ptr  ext;
 14    55 dcl map_data_ptr ptr  defined (cobol_$map_data_ptr);
 14    56 dcl cobol_$ptr_status_ptr ptr  ext;
 14    57 dcl ptr_status_ptr ptr  defined (cobol_$ptr_status_ptr);
 14    58 dcl cobol_$reg_status_ptr ptr  ext;
 14    59 dcl reg_status_ptr ptr  defined (cobol_$reg_status_ptr);
 14    60 dcl cobol_$misc_base_ptr ptr ext;
 14    61 dcl misc_base_ptr ptr defined (cobol_$misc_base_ptr);
 14    62 dcl cobol_$misc_end_ptr ptr ext;
 14    63 dcl misc_end_ptr ptr defined (cobol_$misc_end_ptr);
 14    64 dcl cobol_$list_ptr ptr ext;
 14    65 dcl list_ptr ptr defined (cobol_$list_ptr);
 14    66 dcl cobol_$allo1_ptr ptr ext;
 14    67 dcl allo1_ptr ptr defined (cobol_$allo1_ptr);
 14    68 dcl cobol_$eln_ptr ptr ext;
 14    69 dcl eln_ptr ptr defined (cobol_$eln_ptr);
 14    70 dcl cobol_$diag_ptr ptr ext;
 14    71 dcl diag_ptr ptr defined (cobol_$diag_ptr);
 14    72 dcl cobol_$xref_token_ptr ptr ext;
 14    73 dcl xref_token_ptr ptr defined (cobol_$xref_token_ptr);
 14    74 dcl cobol_$xref_chain_ptr ptr ext;
 14    75 dcl xref_chain_ptr ptr defined (cobol_$xref_chain_ptr);
 14    76 dcl cobol_$statement_info_ptr ptr ext;
 14    77 dcl statement_info_ptr ptr defined (cobol_$statement_info_ptr);
 14    78 dcl cobol_$reswd_ptr ptr ext;
 14    79 dcl reswd_ptr ptr defined (cobol_$reswd_ptr);
 14    80 dcl cobol_$op_con_ptr ptr ext;
 14    81 dcl op_con_ptr ptr defined (cobol_$op_con_ptr);
 14    82 dcl cobol_$ntbuf_ptr ptr ext;
 14    83 dcl ntbuf_ptr ptr defined (cobol_$ntbuf_ptr);
 14    84 dcl cobol_$main_pcs_ptr ptr ext;
 14    85 dcl main_pcs_ptr ptr defined (cobol_$main_pcs_ptr);
 14    86 dcl cobol_$include_info_ptr ptr ext;
 14    87 dcl include_info_ptr ptr defined (cobol_$include_info_ptr);
 14    88 
 14    89 /* FIXED BIN */
 14    90 dcl cobol_$text_wd_off fixed bin  ext;
 14    91 dcl text_wd_off fixed bin  defined (cobol_$text_wd_off);
 14    92 dcl cobol_$con_wd_off fixed bin  ext;
 14    93 dcl con_wd_off fixed bin  defined (cobol_$con_wd_off);
 14    94 dcl cobol_$def_wd_off fixed bin  ext;
 14    95 dcl def_wd_off fixed bin  defined (cobol_$def_wd_off);
 14    96 dcl cobol_$def_max fixed bin  ext;
 14    97 dcl def_max fixed bin  defined (cobol_$def_max);
 14    98 dcl cobol_$link_wd_off fixed bin  ext;
 14    99 dcl link_wd_off fixed bin  defined (cobol_$link_wd_off);
 14   100 dcl cobol_$link_max fixed bin  ext;
 14   101 dcl link_max fixed bin  defined (cobol_$link_max);
 14   102 dcl cobol_$sym_wd_off fixed bin  ext;
 14   103 dcl sym_wd_off fixed bin  defined (cobol_$sym_wd_off);
 14   104 dcl cobol_$sym_max fixed bin  ext;
 14   105 dcl sym_max fixed bin  defined (cobol_$sym_max);
 14   106 dcl cobol_$reloc_text_max fixed bin(24)  ext;
 14   107 dcl reloc_text_max fixed bin(24)  defined (cobol_$reloc_text_max);
 14   108 dcl cobol_$reloc_def_max fixed bin(24)  ext;
 14   109 dcl reloc_def_max fixed bin(24)  defined (cobol_$reloc_def_max);
 14   110 dcl cobol_$reloc_link_max fixed bin(24)  ext;
 14   111 dcl reloc_link_max fixed bin(24)  defined (cobol_$reloc_link_max);
 14   112 dcl cobol_$reloc_sym_max fixed bin(24)  ext;
 14   113 dcl reloc_sym_max fixed bin(24)  defined (cobol_$reloc_sym_max);
 14   114 dcl cobol_$reloc_work_max fixed bin(24)  ext;
 14   115 dcl reloc_work_max fixed bin(24)  defined (cobol_$reloc_work_max);
 14   116 dcl cobol_$pd_map_index fixed bin  ext;
 14   117 dcl pd_map_index fixed bin  defined (cobol_$pd_map_index);
 14   118 dcl cobol_$cobol_data_wd_off fixed bin  ext;
 14   119 dcl cobol_data_wd_off fixed bin  defined (cobol_$cobol_data_wd_off);
 14   120 dcl cobol_$stack_off fixed bin  ext;
 14   121 dcl stack_off fixed bin  defined (cobol_$stack_off);
 14   122 dcl cobol_$max_stack_off fixed bin  ext;
 14   123 dcl max_stack_off fixed bin  defined (cobol_$max_stack_off);
 14   124 dcl cobol_$init_stack_off fixed bin  ext;
 14   125 dcl init_stack_off fixed bin  defined (cobol_$init_stack_off);
 14   126 dcl cobol_$pd_map_sw fixed bin  ext;
 14   127 dcl pd_map_sw fixed bin  defined (cobol_$pd_map_sw);
 14   128 dcl cobol_$next_tag fixed bin  ext;
 14   129 dcl next_tag fixed bin  defined (cobol_$next_tag);
 14   130 dcl cobol_$data_init_flag fixed bin  ext;
 14   131 dcl data_init_flag fixed bin  defined (cobol_$data_init_flag);
 14   132 dcl cobol_$seg_init_flag fixed bin  ext;
 14   133 dcl seg_init_flag fixed bin  defined (cobol_$seg_init_flag);
 14   134 dcl cobol_$alter_flag fixed bin  ext;
 14   135 dcl alter_flag fixed bin  defined (cobol_$alter_flag);
 14   136 dcl cobol_$sect_eop_flag fixed bin  ext;
 14   137 dcl sect_eop_flag fixed bin  defined (cobol_$sect_eop_flag);
 14   138 dcl cobol_$para_eop_flag fixed bin  ext;
 14   139 dcl para_eop_flag fixed bin  defined (cobol_$para_eop_flag);
 14   140 dcl cobol_$priority_no fixed bin  ext;
 14   141 dcl priority_no fixed bin  defined (cobol_$priority_no);
 14   142 dcl cobol_$compile_count fixed bin ext;
 14   143 dcl compile_count fixed bin defined (cobol_$compile_count);
 14   144 dcl cobol_$ptr_assumption_ind fixed bin ext;
 14   145 dcl ptr_assumption_ind fixed bin defined (cobol_$ptr_assumption_ind);
 14   146 dcl cobol_$reg_assumption_ind fixed bin ext;
 14   147 dcl reg_assumption_ind fixed bin defined (cobol_$reg_assumption_ind);
 14   148 dcl cobol_$perform_para_index fixed bin ext;
 14   149 dcl perform_para_index fixed bin defined (cobol_$perform_para_index);
 14   150 dcl cobol_$perform_sect_index fixed bin ext;
 14   151 dcl perform_sect_index fixed bin defined (cobol_$perform_sect_index);
 14   152 dcl cobol_$alter_index fixed bin ext;
 14   153 dcl alter_index fixed bin defined (cobol_$alter_index);
 14   154 dcl cobol_$list_off fixed bin ext;
 14   155 dcl list_off fixed bin defined (cobol_$list_off);
 14   156 dcl cobol_$constant_offset fixed bin ext;
 14   157 dcl constant_offset fixed bin defined (cobol_$constant_offset);
 14   158 dcl cobol_$misc_max fixed bin ext;
 14   159 dcl misc_max fixed bin defined (cobol_$misc_max);
 14   160 dcl cobol_$pd_map_max fixed bin ext;
 14   161 dcl pd_map_max fixed bin defined (cobol_$pd_map_max);
 14   162 dcl cobol_$map_data_max fixed bin ext;
 14   163 dcl map_data_max fixed bin defined (cobol_$map_data_max);
 14   164 dcl cobol_$fixup_max fixed bin ext;
 14   165 dcl fixup_max fixed bin defined (cobol_$fixup_max);
 14   166 dcl cobol_$tag_table_max fixed bin ext;
 14   167 dcl tag_table_max fixed bin defined (cobol_$tag_table_max);
 14   168 dcl cobol_$temp_token_max fixed bin ext;
 14   169 dcl temp_token_max fixed bin defined (cobol_$temp_token_max);
 14   170 dcl cobol_$allo1_max fixed bin ext;
 14   171 dcl allo1_max fixed bin defined (cobol_$allo1_max);
 14   172 dcl cobol_$eln_max fixed bin ext;
 14   173 dcl eln_max fixed bin defined (cobol_$eln_max);
 14   174 dcl cobol_$debug_enable fixed bin ext;
 14   175 dcl debug_enable fixed bin defined (cobol_$debug_enable);
 14   176 dcl cobol_$non_source_offset fixed bin ext;
 14   177 dcl non_source_offset fixed bin defined (cobol_$non_source_offset);
 14   178 dcl cobol_$initval_flag fixed bin ext;
 14   179 dcl initval_flag fixed bin defined (cobol_$initval_flag);
 14   180 dcl cobol_$date_compiled_sw fixed bin ext;
 14   181 dcl date_compiled_sw fixed bin defined (cobol_$date_compiled_sw);
 14   182 dcl cobol_$include_cnt fixed bin ext;
 14   183 dcl include_cnt fixed bin defined (cobol_$include_cnt);
 14   184 dcl cobol_$fs_charcnt fixed bin ext;
 14   185 dcl fs_charcnt fixed bin defined (cobol_$fs_charcnt);
 14   186 dcl cobol_$ws_charcnt fixed bin ext;
 14   187 dcl ws_charcnt fixed bin defined (cobol_$ws_charcnt);
 14   188 dcl cobol_$coms_charcnt fixed bin ext;
 14   189 dcl coms_charcnt fixed bin defined (cobol_$coms_charcnt);
 14   190 dcl cobol_$ls_charcnt fixed bin ext;
 14   191 dcl ls_charcnt fixed bin defined (cobol_$ls_charcnt);
 14   192 dcl cobol_$cons_charcnt fixed bin ext;
 14   193 dcl cons_charcnt fixed bin defined (cobol_$cons_charcnt);
 14   194 dcl cobol_$value_cnt fixed bin ext;
 14   195 dcl value_cnt fixed bin defined (cobol_$value_cnt);
 14   196 dcl cobol_$cd_cnt fixed bin ext;
 14   197 dcl cd_cnt fixed bin defined (cobol_$cd_cnt);
 14   198 dcl cobol_$fs_wdoff fixed bin ext;
 14   199 dcl fs_wdoff fixed bin defined (cobol_$fs_wdoff);
 14   200 dcl cobol_$ws_wdoff fixed bin ext;
 14   201 dcl ws_wdoff fixed bin defined (cobol_$ws_wdoff);
 14   202 dcl cobol_$coms_wdoff fixed bin ext;
 14   203 dcl coms_wdoff fixed bin defined (cobol_$coms_wdoff);
 14   204 
 14   205 /* CHARACTER */
 14   206 dcl cobol_$scratch_dir char (168)   aligned ext;
 14   207 dcl scratch_dir char (168)   aligned defined (cobol_$scratch_dir);			/* -42- */
 14   208 dcl cobol_$obj_seg_name char (32)   aligned ext;
 14   209 dcl obj_seg_name char (32)   aligned defined (cobol_$obj_seg_name);		/* -8- */
 14   210 
 14   211 /* BIT */
 14   212 dcl cobol_$xref_bypass bit(1) aligned ext;
 14   213 dcl xref_bypass bit(1) aligned defined (cobol_$xref_bypass);			/* -1- */
 14   214 dcl cobol_$same_sort_merge_proc bit(1) aligned ext;
 14   215 dcl same_sort_merge_proc bit(1) aligned defined (cobol_$same_sort_merge_proc);		/* -1- */
 14   216 
 14   217 
 14   218 /* END INCLUDE FILE ... cobol_incl.pl1*/
 14   219 
 14   220 
  3   214 
      449 
      450      end cobol_rewrite_gen;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/24/89  0832.6  cobol_rewrite_gen.pl1             >spec>install>MR12.3-1048>cobol_rewrite_gen.pl1
448          1    03/27/82  0439.3  cobol_rewrite_gen_info.incl.pl1   >ldd>include>cobol_rewrite_gen_info.incl.pl1
1-110        2    03/27/82  0431.4  cobol_opr_rewrite.incl.pl1        >ldd>include>cobol_opr_rewrite.incl.pl1
449          3    03/27/82  0431.4  cobol_rewrite_gen_data.incl.pl1   >ldd>include>cobol_rewrite_gen_data.incl.pl1
3-208        4    11/11/82  1712.7  cobol_file_table.incl.pl1         >ldd>include>cobol_file_table.incl.pl1
3-209        5    11/11/82  1712.8  cobol_file_key.incl.pl1           >ldd>include>cobol_file_key.incl.pl1
3-210        6    03/27/82  0439.8  cobol_type1.incl.pl1              >ldd>include>cobol_type1.incl.pl1
6-15         7    11/11/82  1712.8  cobol_TYPE1.incl.pl1              >ldd>include>cobol_TYPE1.incl.pl1
3-211        8    03/27/82  0439.9  cobol_type9.incl.pl1              >ldd>include>cobol_type9.incl.pl1
8-17         9    11/11/82  1712.7  cobol_TYPE9.incl.pl1              >ldd>include>cobol_TYPE9.incl.pl1
3-212       10    11/11/82  1712.8  cobol_type12.incl.pl1             >ldd>include>cobol_type12.incl.pl1
10-17       11    03/27/82  0439.6  cobol_TYPE12.incl.pl1             >ldd>include>cobol_TYPE12.incl.pl1
3-213       12    03/27/82  0439.8  cobol_type19.incl.pl1             >ldd>include>cobol_type19.incl.pl1
12-17       13    03/27/82  0439.6  cobol_TYPE19.incl.pl1             >ldd>include>cobol_TYPE19.incl.pl1
3-214       14    11/11/82  1712.7  cobol_.incl.pl1                   >ldd>include>cobol_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
access                   45            based           fixed bin(17,0)          level 2 dcl 4-25 ref 196 264 298
addr                                                   builtin function         dcl 3-205 ref 84 90 114 144 146 146 167 169 169 187
                                                                                  187 189 217 222 222 249 251 256 287 321 323 323
                                                                                  351 353 353
adjust_recptr_sw                000136 automatic       bit(1)                   packed unaligned dcl 59 set ref 86*
aloff                           000154 automatic       fixed bin(17,0)          dcl 71 set ref 118* 120
alpha_type9                     000070 internal static structure                level 1 unaligned dcl 3-91 set ref 287
alt_sw                          000152 automatic       bit(1)                   packed unaligned dcl 69 set ref 194* 298 359 401 431
alternate_keys           51            based           fixed bin(17,0)          level 2 dcl 4-25 ref 194
arg_ptr                         000146 automatic       pointer                  dcl 67 set ref 114*
arglist_off               1     000102 automatic       fixed bin(17,0)          level 2 dcl 42 set ref 120*
args                            000102 automatic       structure                level 1 unaligned dcl 42 set ref 114
b                        11(03)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 ref 96
buflen_off                      000156 automatic       fixed bin(17,0)          dcl 73 set ref 121* 156 161* 169
c                        11(04)        based           bit(1)                   level 2 packed packed unaligned dcl 12-16 ref 138
cobol_$next_tag                 000322 external static fixed bin(17,0)          dcl 14-128 set ref 99 100 102* 102 109 110* 110 126
                                                                                  128 129* 129 199 200* 200 219 220* 220 267 268*
                                                                                  268 309 310* 310 328 329* 329 345 346* 346 403
                                                                                  404* 404 415 416* 416 433 434* 434
cobol_alloc$stack               000262 constant        entry                    external dcl 3-181 ref 118 180 302
cobol_call_op                   000254 constant        entry                    external dcl 3-178 ref 206 229 275 312 337 367 376
                                                                                  407 424 437
cobol_code                      000226 internal static fixed bin(17,0)          level 2 dcl 3-148 set ref 91* 388
cobol_define_tag                000270 constant        entry                    external dcl 3-184 ref 131 210 233 280 317 341 380
                                                                                  411 428 441
cobol_gen_ioerror               000252 constant        entry                    external dcl 3-177 ref 208 231 278 314 339 378 409
                                                                                  426 439
cobol_gen_ioerror$finish_up     000246 constant        entry                    external dcl 3-175 ref 393
cobol_get_size                  000300 constant        entry                    external dcl 3-190 ref 161
cobol_io_util$bypass_mode_error 000310 constant        entry                    external dcl 3-195 ref 270
cobol_io_util$bypass_seqerror   000312 constant        entry                    external dcl 3-196 ref 202
cobol_io_util$compare_key       000314 constant        entry                    external dcl 3-199 ref 222
cobol_io_util$file_desc         000302 constant        entry                    external dcl 3-191 ref 364
cobol_io_util$fsb_key_loc       000316 constant        entry                    external dcl 3-200 ref 361
cobol_io_util$move_direct       000306 constant        entry                    external dcl 3-193 ref 156 224 237 325 355
cobol_io_util$set_fsb_loc       000320 constant        entry                    external dcl 3-201 ref 296
cobol_io_util$t9dec_to_bin      000304 constant        entry                    external dcl 3-192 ref 169
cobol_ioop_util$lda_du          000256 constant        entry                    external dcl 3-179 ref 305 331
cobol_ioop_util$set_icode       000244 constant        entry                    external dcl 3-174 ref 307 333 374 422
cobol_ioop_util$set_x5          000260 constant        entry                    external dcl 3-180 ref 204 227 273
cobol_move_gen                  000272 constant        entry                    external dcl 3-187 ref 146 323 353
cobol_read_ft                   000264 constant        entry                    external dcl 3-182 ref 116
cobol_read_rand                 000266 constant        entry                    external dcl 3-183 ref 165 215 247
cobol_reg_manager$after_op      000250 constant        entry                    external dcl 3-176 ref 388
cobol_set_fsbptr                000276 constant        entry                    external dcl 3-189 ref 133 295 319 370 412 418
cobol_set_pr                    000274 constant        entry                    external dcl 3-188 ref 335 405 420
cobol_trans_alphabet$io         000242 constant        entry                    external dcl 3-173 ref 187
code_set                 76            based           fixed bin(17,0)          level 2 dcl 4-25 ref 176 187 187
code_set_clause          33(35)        based           bit(1)                   level 2 packed packed unaligned dcl 4-25 ref 176
data_name                              based           structure                level 1 unaligned dcl 8-16
desc                     12            based           char(40)                 level 2 packed packed unaligned dcl 5-17 ref 167 217
                                                                                  249
dn_ptr                          000144 automatic       pointer                  dcl 66 set ref 88* 116 161* 180 185 187* 189* 335*
                                                                                  405* 420*
end_stmt                               based           structure                level 1 unaligned dcl 12-16
eos_ptr                         000164 automatic       pointer                  dcl 12-13 set ref 89* 96 138 391
external                 33(10)        based           bit(1)                   level 2 packed packed unaligned dcl 4-25 ref 264
f                        11(07)        based           bit(2)                   level 2 packed packed unaligned dcl 12-16 ref 391
file_desc_1_offset       13            based           fixed bin(24,0)          level 2 dcl 4-25 set ref 364*
file_key                               based           structure                level 1 unaligned dcl 5-17
file_key_desc                          based           char(40)                 packed unaligned dcl 3-76 set ref 167* 217* 249*
file_key_info            13     000124 internal static structure                level 2 in structure "trans_type9" unaligned
                                                                                  dcl 3-104 in procedure "cobol_rewrite_gen"
file_key_info            13     000160 internal static structure                level 2 in structure "fkey_type9" unaligned
                                                                                  dcl 3-117 in procedure "cobol_rewrite_gen" set ref
                                                                                  167 217 249
file_key_info            13     000034 internal static structure                level 2 in structure "num_type9" unaligned dcl 3-77
                                                                                  in procedure "cobol_rewrite_gen"
file_key_info            13     000070 internal static structure                level 2 in structure "alpha_type9" unaligned
                                                                                  dcl 3-91 in procedure "cobol_rewrite_gen"
file_num                 14            based           fixed bin(17,0)          level 2 dcl 8-16 set ref 116*
file_table                             based           structure                level 1 unaligned dcl 4-25
fixed                                                  builtin function         dcl 3-205 ref 187 187
fkey_ptr                        000142 automatic       pointer                  dcl 64 set ref 165* 167 215* 217 247* 249
fkey_type9                      000160 internal static structure                level 1 unaligned dcl 3-117 set ref 169 169 222 222
                                                                                  251
fsb                     124            based           structure                level 2 unaligned dcl 4-25
fsb_key                                constant        fixed bin(17,0)          initial dcl 3-158 ref 259 290
fsb_keylen_sw                   000235 internal static fixed bin(17,0)          initial dcl 3-157 set ref 224* 237* 325* 355*
ft_ptr                          000140 automatic       pointer                  dcl 63 set ref 116* 133* 151 154 161 165 176 176 187
                                                                                  187 194 194 196 208* 212 215 231* 247 253 259 264
                                                                                  264 264 278* 290 295* 298 298 314* 319* 339* 364
                                                                                  370* 378* 393* 409* 412* 418* 426* 439*
ioerror                         000226 internal static structure                level 1 unaligned dcl 3-148 set ref 90
ioerror_ptr                     000150 automatic       pointer                  dcl 68 set ref 90* 208* 231* 278* 314* 339* 378*
                                                                                  393* 409* 426* 439*
is_tag                    2     000226 internal static fixed bin(17,0)          level 2 dcl 3-148 set ref 93* 99* 107* 391
key_mismatch_errno              000237 internal static fixed bin(17,0)          initial dcl 3-163 set ref 227*
line                      1            based           fixed bin(17,0)          level 2 dcl 6-14 set ref 161*
max_cra_size             41            based           fixed bin(24,0)          level 2 dcl 4-25 ref 154
mode                      6     000226 internal static fixed bin(17,0)          level 2 dcl 3-148 set ref 94*
mp                                     based           structure                level 1 unaligned dcl 35
mp_ptr                                 parameter       pointer                  dcl 34 ref 29 87 88 89 89 92 141 142 143 250
mpout                           000022 internal static structure                level 1 unaligned dcl 3-70 set ref 146 146 323 323
                                                                                  353 353
n                                      based           fixed bin(17,0)          level 2 dcl 35 ref 89
ns_tag                    3     000226 internal static fixed bin(17,0)          level 2 dcl 3-148 set ref 101* 109*
ntag                            000157 automatic       fixed bin(17,0)          dcl 75 set ref 199* 202* 206* 210* 219* 222* 229*
                                                                                  233* 267* 270* 275* 280* 309* 312* 317* 328* 337*
                                                                                  341* 345* 376* 380* 403* 407* 411* 415* 424* 428*
                                                                                  433* 437* 441*
num_type9                       000034 internal static structure                level 1 unaligned dcl 3-77 set ref 256
off                      24     000034 internal static fixed bin(17,0)          level 3 in structure "num_type9" dcl 3-77
                                                                                  in procedure "cobol_rewrite_gen" set ref 259*
off                     125            based           fixed bin(24,0)          level 3 in structure "file_table" dcl 4-25
                                                                                  in procedure "cobol_rewrite_gen" ref 259 290
off                      24     000070 internal static fixed bin(17,0)          level 3 in structure "alpha_type9" dcl 3-91
                                                                                  in procedure "cobol_rewrite_gen" set ref 290*
off                      24     000124 internal static fixed bin(17,0)          level 3 in structure "trans_type9" dcl 3-104
                                                                                  in procedure "cobol_rewrite_gen" set ref 184*
open_out                 34(03)        based           bit(1)                   level 2 packed packed unaligned dcl 4-25 ref 264
organization             43            based           fixed bin(17,0)          level 2 dcl 4-25 ref 194 212 253
output_errno                    000240 internal static fixed bin(17,0)          initial dcl 3-167 set ref 273*
passed_tag                             parameter       fixed bin(17,0)          dcl 32 set ref 29 100* 391*
places_left              17     000034 internal static fixed bin(17,0)          level 3 dcl 3-77 set ref 257*
pr5_struct                      000012 internal static structure                level 1 unaligned dcl 3-35 set ref 84
pr5_struct_ptr                  000010 internal static pointer                  dcl 3-4 set ref 84* 335* 405* 420*
pt                        2            based           pointer                  array level 2 dcl 35 ref 87 88 89 92 141 142 143 250
pt1                       2     000022 internal static pointer                  level 2 dcl 3-70 set ref 141* 250*
pt2                       4     000022 internal static pointer                  level 2 dcl 3-70 set ref 142* 251*
pt3                       6     000022 internal static pointer                  level 2 dcl 3-70 set ref 143* 256* 287*
pt4                      10     000022 internal static pointer                  level 2 dcl 3-70 set ref 144* 321* 351*
ptag                            000100 automatic       fixed bin(17,0)          dcl 33 set ref 100* 101 108*
r_key_info               22(18)        based           char(5)                  level 2 packed packed unaligned dcl 4-25 set ref
                                                                                  215* 247*
read_next                34(14)        based           bit(1)                   level 2 packed packed unaligned dcl 4-25 ref 298
rec_do                   33(33)        based           bit(1)                   level 2 packed packed unaligned dcl 4-25 ref 161
rec_do_info              25            based           char(5)                  level 2 packed packed unaligned dcl 4-25 set ref
                                                                                  165*
reserved_word                          based           structure                level 1 unaligned dcl 6-14
retry_tag                 1     000226 internal static fixed bin(17,0)          level 2 dcl 3-148 set ref 126* 131*
rewrite_seq_errno               000236 internal static fixed bin(17,0)          initial dcl 3-162 set ref 204*
rw_ptr                          000162 automatic       pointer                  dcl 6-11 set ref 87* 161
seg                      23     000034 internal static fixed bin(17,0)          initial level 3 in structure "num_type9" dcl 3-77
                                                                                  in procedure "cobol_rewrite_gen" set ref 258*
seg                      23     000124 internal static fixed bin(17,0)          initial level 3 in structure "trans_type9" dcl 3-104
                                                                                  in procedure "cobol_rewrite_gen" set ref 183*
seg                      23     000070 internal static fixed bin(17,0)          initial level 3 in structure "alpha_type9" dcl 3-91
                                                                                  in procedure "cobol_rewrite_gen" set ref 289*
size                     16     000070 internal static fixed bin(17,0)          initial level 3 in structure "alpha_type9" dcl 3-91
                                                                                  in procedure "cobol_rewrite_gen" set ref 288*
size                     16     000160 internal static fixed bin(17,0)          initial level 3 in structure "fkey_type9" dcl 3-117
                                                                                  in procedure "cobol_rewrite_gen" set ref 288
size                     16     000034 internal static fixed bin(17,0)          initial level 3 in structure "num_type9" dcl 3-77
                                                                                  in procedure "cobol_rewrite_gen" set ref 257*
size                            000155 automatic       fixed bin(17,0)          dcl 72 in procedure "cobol_rewrite_gen" set ref 257*
                                                                                  288* 325 325 355 355
size                                   based           fixed bin(17,0)          level 2 in structure "data_name" dcl 8-16
                                                                                  in procedure "cobol_rewrite_gen" ref 180 185
size                     16     000124 internal static fixed bin(17,0)          initial level 3 in structure "trans_type9" dcl 3-104
                                                                                  in procedure "cobol_rewrite_gen" set ref 185*
stoff                           000161 automatic       fixed bin(17,0)          dcl 77 set ref 180* 184 302* 305* 331*
substr                                                 builtin function         dcl 3-205 ref 156 156 325 325 355 355
temp                            000153 automatic       fixed bin(17,0)          dcl 70 set ref 154* 156 156
trans_type9                     000124 internal static structure                level 1 unaligned dcl 3-104 set ref 187 187 189
type19                          000214 internal static structure                level 1 unaligned dcl 3-130 set ref 144 321 351
type1_ptr                 4     000226 internal static pointer                  level 2 dcl 3-148 set ref 92*
unopened_error_tag              000160 automatic       fixed bin(17,0)          dcl 76 set ref 128*
unspec                                                 builtin function         dcl 3-205 ref 156 156 325 325 355 355
variable                101(01)        based           bit(1)                   level 2 packed packed unaligned dcl 4-25 ref 151

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
addrel                                                 builtin function         dcl 3-205
allo1_max                              defined         fixed bin(17,0)          dcl 14-171
allo1_ptr                              defined         pointer                  dcl 14-67
alter_flag                             defined         fixed bin(17,0)          dcl 14-135
alter_index                            defined         fixed bin(17,0)          dcl 14-153
alter_list_ptr                         defined         pointer                  dcl 14-39
aq_struct                              internal static structure                level 1 unaligned dcl 3-52
argb                                   based           bit(216)                 array packed unaligned dcl 60
binary                                                 builtin function         dcl 3-205
buf_off                                automatic       fixed bin(17,0)          dcl 74
buff_arg                               internal static structure                level 1 unaligned dcl 3-22
cd_cnt                                 defined         fixed bin(17,0)          dcl 14-197
cobol_$allo1_max                       external static fixed bin(17,0)          dcl 14-170
cobol_$allo1_ptr                       external static pointer                  dcl 14-66
cobol_$alter_flag                      external static fixed bin(17,0)          dcl 14-134
cobol_$alter_index                     external static fixed bin(17,0)          dcl 14-152
cobol_$alter_list_ptr                  external static pointer                  dcl 14-38
cobol_$cd_cnt                          external static fixed bin(17,0)          dcl 14-196
cobol_$cobol_data_wd_off               external static fixed bin(17,0)          dcl 14-118
cobol_$compile_count                   external static fixed bin(17,0)          dcl 14-142
cobol_$coms_charcnt                    external static fixed bin(17,0)          dcl 14-188
cobol_$coms_wdoff                      external static fixed bin(17,0)          dcl 14-202
cobol_$con_end_ptr                     external static pointer                  dcl 14-10
cobol_$con_wd_off                      external static fixed bin(17,0)          dcl 14-92
cobol_$cons_charcnt                    external static fixed bin(17,0)          dcl 14-192
cobol_$constant_offset                 external static fixed bin(17,0)          dcl 14-156
cobol_$data_init_flag                  external static fixed bin(17,0)          dcl 14-130
cobol_$date_compiled_sw                external static fixed bin(17,0)          dcl 14-180
cobol_$debug_enable                    external static fixed bin(17,0)          dcl 14-174
cobol_$def_base_ptr                    external static pointer                  dcl 14-12
cobol_$def_max                         external static fixed bin(17,0)          dcl 14-96
cobol_$def_wd_off                      external static fixed bin(17,0)          dcl 14-94
cobol_$diag_ptr                        external static pointer                  dcl 14-70
cobol_$eln_max                         external static fixed bin(17,0)          dcl 14-172
cobol_$eln_ptr                         external static pointer                  dcl 14-68
cobol_$fixup_max                       external static fixed bin(17,0)          dcl 14-164
cobol_$fixup_ptr                       external static pointer                  dcl 14-30
cobol_$fs_charcnt                      external static fixed bin(17,0)          dcl 14-184
cobol_$fs_wdoff                        external static fixed bin(17,0)          dcl 14-198
cobol_$include_cnt                     external static fixed bin(17,0)          dcl 14-182
cobol_$include_info_ptr                external static pointer                  dcl 14-86
cobol_$init_stack_off                  external static fixed bin(17,0)          dcl 14-124
cobol_$initval_base_ptr                external static pointer                  dcl 14-32
cobol_$initval_file_ptr                external static pointer                  dcl 14-34
cobol_$initval_flag                    external static fixed bin(17,0)          dcl 14-178
cobol_$link_base_ptr                   external static pointer                  dcl 14-14
cobol_$link_max                        external static fixed bin(17,0)          dcl 14-100
cobol_$link_wd_off                     external static fixed bin(17,0)          dcl 14-98
cobol_$list_off                        external static fixed bin(17,0)          dcl 14-154
cobol_$list_ptr                        external static pointer                  dcl 14-64
cobol_$ls_charcnt                      external static fixed bin(17,0)          dcl 14-190
cobol_$main_pcs_ptr                    external static pointer                  dcl 14-84
cobol_$map_data_max                    external static fixed bin(17,0)          dcl 14-162
cobol_$map_data_ptr                    external static pointer                  dcl 14-54
cobol_$max_stack_off                   external static fixed bin(17,0)          dcl 14-122
cobol_$minpral5_ptr                    external static pointer                  dcl 14-50
cobol_$misc_base_ptr                   external static pointer                  dcl 14-60
cobol_$misc_end_ptr                    external static pointer                  dcl 14-62
cobol_$misc_max                        external static fixed bin(17,0)          dcl 14-158
cobol_$non_source_offset               external static fixed bin(17,0)          dcl 14-176
cobol_$ntbuf_ptr                       external static pointer                  dcl 14-82
cobol_$obj_seg_name                    external static char(32)                 dcl 14-208
cobol_$op_con_ptr                      external static pointer                  dcl 14-80
cobol_$para_eop_flag                   external static fixed bin(17,0)          dcl 14-138
cobol_$pd_map_index                    external static fixed bin(17,0)          dcl 14-116
cobol_$pd_map_max                      external static fixed bin(17,0)          dcl 14-160
cobol_$pd_map_ptr                      external static pointer                  dcl 14-28
cobol_$pd_map_sw                       external static fixed bin(17,0)          dcl 14-126
cobol_$perform_list_ptr                external static pointer                  dcl 14-36
cobol_$perform_para_index              external static fixed bin(17,0)          dcl 14-148
cobol_$perform_sect_index              external static fixed bin(17,0)          dcl 14-150
cobol_$priority_no                     external static fixed bin(17,0)          dcl 14-140
cobol_$ptr_assumption_ind              external static fixed bin(17,0)          dcl 14-144
cobol_$ptr_status_ptr                  external static pointer                  dcl 14-56
cobol_$reg_assumption_ind              external static fixed bin(17,0)          dcl 14-146
cobol_$reg_status_ptr                  external static pointer                  dcl 14-58
cobol_$reloc_def_base_ptr              external static pointer                  dcl 14-20
cobol_$reloc_def_max                   external static fixed bin(24,0)          dcl 14-108
cobol_$reloc_link_base_ptr             external static pointer                  dcl 14-22
cobol_$reloc_link_max                  external static fixed bin(24,0)          dcl 14-110
cobol_$reloc_sym_base_ptr              external static pointer                  dcl 14-24
cobol_$reloc_sym_max                   external static fixed bin(24,0)          dcl 14-112
cobol_$reloc_text_base_ptr             external static pointer                  dcl 14-18
cobol_$reloc_text_max                  external static fixed bin(24,0)          dcl 14-106
cobol_$reloc_work_base_ptr             external static pointer                  dcl 14-26
cobol_$reloc_work_max                  external static fixed bin(24,0)          dcl 14-114
cobol_$reswd_ptr                       external static pointer                  dcl 14-78
cobol_$same_sort_merge_proc            external static bit(1)                   dcl 14-214
cobol_$scratch_dir                     external static char(168)                dcl 14-206
cobol_$sect_eop_flag                   external static fixed bin(17,0)          dcl 14-136
cobol_$seg_init_flag                   external static fixed bin(17,0)          dcl 14-132
cobol_$seg_init_list_ptr               external static pointer                  dcl 14-40
cobol_$stack_off                       external static fixed bin(17,0)          dcl 14-120
cobol_$statement_info_ptr              external static pointer                  dcl 14-76
cobol_$sym_base_ptr                    external static pointer                  dcl 14-16
cobol_$sym_max                         external static fixed bin(17,0)          dcl 14-104
cobol_$sym_wd_off                      external static fixed bin(17,0)          dcl 14-102
cobol_$tag_table_max                   external static fixed bin(17,0)          dcl 14-166
cobol_$tag_table_ptr                   external static pointer                  dcl 14-52
cobol_$temp_token_area_ptr             external static pointer                  dcl 14-42
cobol_$temp_token_max                  external static fixed bin(17,0)          dcl 14-168
cobol_$temp_token_ptr                  external static pointer                  dcl 14-44
cobol_$text_base_ptr                   external static pointer                  dcl 14-8
cobol_$text_wd_off                     external static fixed bin(17,0)          dcl 14-90
cobol_$token_block1_ptr                external static pointer                  dcl 14-46
cobol_$token_block2_ptr                external static pointer                  dcl 14-48
cobol_$value_cnt                       external static fixed bin(17,0)          dcl 14-194
cobol_$ws_charcnt                      external static fixed bin(17,0)          dcl 14-186
cobol_$ws_wdoff                        external static fixed bin(17,0)          dcl 14-200
cobol_$xref_bypass                     external static bit(1)                   dcl 14-212
cobol_$xref_chain_ptr                  external static pointer                  dcl 14-74
cobol_$xref_token_ptr                  external static pointer                  dcl 14-72
cobol_data_wd_off                      defined         fixed bin(17,0)          dcl 14-119
cobol_io_util$bypass_error      000000 constant        entry                    external dcl 3-194
cobol_io_util$compare_word      000000 constant        entry                    external dcl 3-197
cobol_io_util$compare_zero_word 000000 constant        entry                    external dcl 3-198
compile_count                          defined         fixed bin(17,0)          dcl 14-143
coms_charcnt                           defined         fixed bin(17,0)          dcl 14-189
coms_wdoff                             defined         fixed bin(17,0)          dcl 14-203
con_end_ptr                            defined         pointer                  dcl 14-11
con_wd_off                             defined         fixed bin(17,0)          dcl 14-93
cons_charcnt                           defined         fixed bin(17,0)          dcl 14-193
constant_offset                        defined         fixed bin(17,0)          dcl 14-157
data_init_flag                         defined         fixed bin(17,0)          dcl 14-131
date_compiled_sw                       defined         fixed bin(17,0)          dcl 14-181
debug_enable                           defined         fixed bin(17,0)          dcl 14-175
def_base_ptr                           defined         pointer                  dcl 14-13
def_max                                defined         fixed bin(17,0)          dcl 14-97
def_wd_off                             defined         fixed bin(17,0)          dcl 14-95
diag_ptr                               defined         pointer                  dcl 14-71
dl_arg                                 internal static structure                level 1 unaligned dcl 3-13
eln_max                                defined         fixed bin(17,0)          dcl 14-173
eln_ptr                                defined         pointer                  dcl 14-69
fd_token                               based           structure                level 1 unaligned dcl 10-16
fixup_max                              defined         fixed bin(17,0)          dcl 14-165
fixup_ptr                              defined         pointer                  dcl 14-31
fs_charcnt                             defined         fixed bin(17,0)          dcl 14-185
fs_wdoff                               defined         fixed bin(17,0)          dcl 14-199
fsb_arg                                internal static structure                level 1 unaligned dcl 3-28
fsb_key_wdoff                          internal static fixed bin(17,0)          initial dcl 3-159
hold_key_wdoff                         automatic       fixed bin(17,0)          dcl 79
hold_keylen_sw                         automatic       fixed bin(17,0)          dcl 78
include_cnt                            defined         fixed bin(17,0)          dcl 14-183
include_info_ptr                       defined         pointer                  dcl 14-87
index                                                  builtin function         dcl 3-205
init_stack_off                         defined         fixed bin(17,0)          dcl 14-125
initval_base_ptr                       defined         pointer                  dcl 14-33
initval_file_ptr                       defined         pointer                  dcl 14-35
initval_flag                           defined         fixed bin(17,0)          dcl 14-179
iocb_arg                               internal static structure                level 1 unaligned dcl 3-6
iocb_basic_struct                      internal static structure                level 1 unaligned dcl 3-62
length                                                 builtin function         dcl 3-205
link_base_ptr                          defined         pointer                  dcl 14-15
link_max                               defined         fixed bin(17,0)          dcl 14-101
link_wd_off                            defined         fixed bin(17,0)          dcl 14-99
list_off                               defined         fixed bin(17,0)          dcl 14-155
list_ptr                               defined         pointer                  dcl 14-65
ls_charcnt                             defined         fixed bin(17,0)          dcl 14-191
main_pcs_ptr                           defined         pointer                  dcl 14-85
map_data_max                           defined         fixed bin(17,0)          dcl 14-163
map_data_ptr                           defined         pointer                  dcl 14-55
max_stack_off                          defined         fixed bin(17,0)          dcl 14-123
mcode_off                              internal static fixed bin(17,0)          initial dcl 3-156
minpral5_ptr                           defined         pointer                  dcl 14-51
misc_base_ptr                          defined         pointer                  dcl 14-61
misc_end_ptr                           defined         pointer                  dcl 14-63
misc_max                               defined         fixed bin(17,0)          dcl 14-159
mod                                                    builtin function         dcl 3-205
name_ptr                               automatic       pointer                  dcl 65
next_tag                               defined         fixed bin(17,0)          dcl 14-129
non_source_offset                      defined         fixed bin(17,0)          dcl 14-177
ntbuf_ptr                              defined         pointer                  dcl 14-83
null                                                   builtin function         dcl 3-205
obj_seg_name                           defined         char(32)                 dcl 14-209
op_con_ptr                             defined         pointer                  dcl 14-81
para_eop_flag                          defined         fixed bin(17,0)          dcl 14-139
pd_map_index                           defined         fixed bin(17,0)          dcl 14-117
pd_map_max                             defined         fixed bin(17,0)          dcl 14-161
pd_map_ptr                             defined         pointer                  dcl 14-29
pd_map_sw                              defined         fixed bin(17,0)          dcl 14-127
perform_list_ptr                       defined         pointer                  dcl 14-37
perform_para_index                     defined         fixed bin(17,0)          dcl 14-149
perform_sect_index                     defined         fixed bin(17,0)          dcl 14-151
priority_no                            defined         fixed bin(17,0)          dcl 14-141
ptr_assumption_ind                     defined         fixed bin(17,0)          dcl 14-145
ptr_status_ptr                         defined         pointer                  dcl 14-57
record_mismatch_errno                  internal static fixed bin(17,0)          initial dcl 3-165
reg_assumption_ind                     defined         fixed bin(17,0)          dcl 14-147
reg_status_ptr                         defined         pointer                  dcl 14-59
rel                                                    builtin function         dcl 3-205
reloc_def_base_ptr                     defined         pointer                  dcl 14-21
reloc_def_max                          defined         fixed bin(24,0)          dcl 14-109
reloc_link_base_ptr                    defined         pointer                  dcl 14-23
reloc_link_max                         defined         fixed bin(24,0)          dcl 14-111
reloc_sym_base_ptr                     defined         pointer                  dcl 14-25
reloc_sym_max                          defined         fixed bin(24,0)          dcl 14-113
reloc_text_base_ptr                    defined         pointer                  dcl 14-19
reloc_text_max                         defined         fixed bin(24,0)          dcl 14-107
reloc_work_base_ptr                    defined         pointer                  dcl 14-27
reloc_work_max                         defined         fixed bin(24,0)          dcl 14-115
reswd_ptr                              defined         pointer                  dcl 14-79
rewrite_errno                          internal static fixed bin(17,0)          initial dcl 3-160
same_sort_merge_proc                   defined         bit(1)                   dcl 14-215
scratch_dir                            defined         char(168)                dcl 14-207
sect_eop_flag                          defined         fixed bin(17,0)          dcl 14-137
seek_errno                             internal static fixed bin(17,0)          initial dcl 3-161
seg_init_flag                          defined         fixed bin(17,0)          dcl 14-133
seg_init_list_ptr                      defined         pointer                  dcl 14-41
stack_off                              defined         fixed bin(17,0)          dcl 14-121
statement_info_ptr                     defined         pointer                  dcl 14-77
status_arg                             internal static structure                level 1 unaligned dcl 3-17
string                                                 builtin function         dcl 3-205
sym_base_ptr                           defined         pointer                  dcl 14-17
sym_max                                defined         fixed bin(17,0)          dcl 14-105
sym_wd_off                             defined         fixed bin(17,0)          dcl 14-103
tag_table_max                          defined         fixed bin(17,0)          dcl 14-167
tag_table_ptr                          defined         pointer                  dcl 14-53
temp_arg                               internal static structure                level 1 unaligned dcl 3-9
temp_token_area_ptr                    defined         pointer                  dcl 14-43
temp_token_max                         defined         fixed bin(17,0)          dcl 14-169
temp_token_ptr                         defined         pointer                  dcl 14-45
text                                   based           bit(36)                  array packed unaligned dcl 61
text_base_ptr                          defined         pointer                  dcl 14-9
text_wd_off                            defined         fixed bin(17,0)          dcl 14-91
token_block1_ptr                       defined         pointer                  dcl 14-47
token_block2_ptr                       defined         pointer                  dcl 14-49
value_cnt                              defined         fixed bin(17,0)          dcl 14-195
ws_charcnt                             defined         fixed bin(17,0)          dcl 14-187
ws_wdoff                               defined         fixed bin(17,0)          dcl 14-201
x1_struct                              internal static structure                level 1 unaligned dcl 3-43
xref_bypass                            defined         bit(1)                   dcl 14-213
xref_chain_ptr                         defined         pointer                  dcl 14-75
xref_token_ptr                         defined         pointer                  dcl 14-73

NAMES DECLARED BY EXPLICIT CONTEXT.
cobol_rewrite_gen               000006 constant        entry                    external dcl 29
rew_rec                         001543 constant        entry                    internal dcl 397 ref 240 382
start                           000013 constant        label                    dcl 84
start_codegen                   000122 constant        label                    dcl 126

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      2270        2614    1750        2300
Length      3402    1750       324         552     317         232

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cobol_rewrite_gen                   165 external procedure  is an external procedure.  
rew_rec                                 internal procedure  shares stack frame of external procedure cobol_rewrite_gen.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 pr5_struct_ptr              cobol_rewrite_gen
000012 pr5_struct                  cobol_rewrite_gen
000022 mpout                       cobol_rewrite_gen
000034 num_type9                   cobol_rewrite_gen
000070 alpha_type9                 cobol_rewrite_gen
000124 trans_type9                 cobol_rewrite_gen
000160 fkey_type9                  cobol_rewrite_gen
000214 type19                      cobol_rewrite_gen
000226 ioerror                     cobol_rewrite_gen
000235 fsb_keylen_sw               cobol_rewrite_gen
000236 rewrite_seq_errno           cobol_rewrite_gen
000237 key_mismatch_errno          cobol_rewrite_gen
000240 output_errno                cobol_rewrite_gen

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cobol_rewrite_gen        000100 ptag                        cobol_rewrite_gen
                         000102 args                        cobol_rewrite_gen
                         000136 adjust_recptr_sw            cobol_rewrite_gen
                         000140 ft_ptr                      cobol_rewrite_gen
                         000142 fkey_ptr                    cobol_rewrite_gen
                         000144 dn_ptr                      cobol_rewrite_gen
                         000146 arg_ptr                     cobol_rewrite_gen
                         000150 ioerror_ptr                 cobol_rewrite_gen
                         000152 alt_sw                      cobol_rewrite_gen
                         000153 temp                        cobol_rewrite_gen
                         000154 aloff                       cobol_rewrite_gen
                         000155 size                        cobol_rewrite_gen
                         000156 buflen_off                  cobol_rewrite_gen
                         000157 ntag                        cobol_rewrite_gen
                         000160 unopened_error_tag          cobol_rewrite_gen
                         000161 stoff                       cobol_rewrite_gen
                         000162 rw_ptr                      cobol_rewrite_gen
                         000164 eos_ptr                     cobol_rewrite_gen

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
r_e_as              r_ne_as             call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cobol_alloc$stack             cobol_call_op                 cobol_define_tag              cobol_gen_ioerror
cobol_gen_ioerror$finish_up   cobol_get_size                cobol_io_util$bypass_mode_error
cobol_io_util$bypass_seqerror cobol_io_util$compare_key     cobol_io_util$file_desc       cobol_io_util$fsb_key_loc
cobol_io_util$move_direct     cobol_io_util$set_fsb_loc     cobol_io_util$t9dec_to_bin    cobol_ioop_util$lda_du
cobol_ioop_util$set_icode     cobol_ioop_util$set_x5        cobol_move_gen                cobol_read_ft
cobol_read_rand               cobol_reg_manager$after_op    cobol_set_fsbptr              cobol_set_pr
cobol_trans_alphabet$io

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
cobol_$next_tag




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     29 000002        84 000013        86 000015        87 000016        88 000023        89 000025        90 000031
     91 000033        92 000034        93 000035        94 000036        96 000037        99 000045       100 000047
    101 000053       102 000054       104 000056       107 000057       108 000060       109 000061       110 000063
    114 000064       116 000066       118 000077       120 000116       121 000120       126 000122       128 000125
    129 000130       131 000132       133 000140       138 000147       141 000155       142 000163       143 000167
    144 000173       146 000175       151 000205       154 000211       156 000213       158 000246       161 000247
    165 000267       167 000304       169 000311       176 000332       180 000341       183 000361       184 000364
    185 000367       187 000371       189 000413       194 000416       196 000427       199 000432       200 000435
    202 000436       204 000444       206 000453       208 000466       210 000477       212 000506       215 000512
    217 000531       219 000536       220 000540       222 000541       224 000553       227 000602       229 000611
    231 000624       233 000635       237 000644       240 000673       242 000674       247 000675       249 000714
    250 000721       251 000726       253 000730       256 000734       257 000736       258 000742       259 000744
    261 000747       264 000750       267 000761       268 000763       270 000764       273 000776       275 001005
    278 001020       280 001031       287 001040       288 001043       289 001046       290 001050       295 001054
    296 001062       298 001067       302 001100       305 001117       307 001126       309 001133       310 001136
    312 001137       314 001151       317 001162       319 001171       321 001200       323 001203       325 001213
    328 001243       329 001246       331 001247       333 001255       335 001262       337 001273       339 001306
    341 001317       343 001326       345 001327       346 001332       351 001333       353 001335       355 001345
    359 001375       361 001377       364 001410       367 001420       370 001434       374 001443       376 001450
    378 001463       380 001474       382 001503       388 001504       391 001516       393 001531       395 001542
    397 001543       401 001544       403 001546       404 001551       405 001552       407 001562       409 001575
    411 001606       412 001615       415 001624       416 001627       418 001630       420 001636       422 001647
    424 001654       426 001667       428 001700       431 001707       433 001711       434 001714       437 001715
    439 001727       441 001740       444 001747


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
