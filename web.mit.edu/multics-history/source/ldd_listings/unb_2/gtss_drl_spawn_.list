	COMPILATION LISTING OF SEGMENT gtss_drl_spawn_
	Compiled by: Multics PL/I Compiler, Release 29, of July 28, 1986
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 11/05/86  1058.4 mst Wed
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   *                                                         *
        4*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        5*   *                                                         *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 gtss_drl_spawn_: proc (mcpp, increment);
       10 
       11 /* *	gtss  pass file to batch processor.
       12*
       13*   Author:	Mel Wilson			19mar79
       14*  Modified:  Ron Barstad  83-04-25  Add -userlib to gcos command line
       15*   * */
       16 dcl  mcpp                     ptr parm;
       17 dcl  increment                fixed bin parm;
       18 
       19 /* *
       20*
       21*   DRL SPAWN,  PASS FILE TO BATCH PROCESSOR (octal 26)
       22*   DRL PASFLR, PASS FILE TO REMOTE BATCH PROCESSOR (octal 60, jout option)
       23*
       24*
       25*   8_________1_6_____________________
       26*
       27*   DRL      SPAWN
       28*   ZERO     L(snumb),L(buffer)
       29*
       30*   or
       31*
       32*   DRL      PASFLR
       33*   ZERO     L(snumb),L(buffer)
       34*
       35*   additionally, on entry:
       36*   mc.a bits 0..11 if non-zero give the id for output,
       37*   mc.a bit 35 if non-zero indicates return after batch job complete
       38*   mc.q bits 0..17 point to the name of the bcd source-image file.
       39*   on exit:
       40*   mc.q gives a status code in the range 0..6 .
       41*
       42*   (See TSS SYSTEM PROGRAMMER'S
       43*   REFERENCE MANUAL DD17C, Rev. 0, July 1976
       44*   Pages 3-19, 3-26)
       45*
       46**/
       47 
       48 /*
       49*   drl snumb local declarations
       50**/
       51 dcl  arg_list_ptr             ptr;
       52 dcl 1 arg_list aligned based (arg_list_ptr),
       53     2 L_snumb fixed bin (18) unsigned unal,
       54     2 L_buffer fixed bin (18) unsigned unal;
       55 
       56 dcl 1 local_a based (addr (mc.a)),
       57       3 output_id bit (12) unal,
       58       3 fill bit (6) unal,
       59       3 fill1 bit (17) unal,
       60       3 wait_flag bit (1) unal;
       61 
       62 dcl 1 local_q based (addr (mc.q)),
       63       3 L_filename fixed bin (18) unsigned unal,
       64       3 fill3 bit (18) unal;
       65 
       66 dcl  snumb_ptr                ptr;
       67 dcl  bcd_snumb                bit (36) based (snumb_ptr);
       68 dcl  given_snumb              char (5) init ("");
       69 
       70 dcl  filename_ptr             ptr;
       71 dcl  given_filename           char (8) based (filename_ptr);
       72 
       73 dcl  c                        fixed bin (35);
       74 dcl  fn                       fixed bin (24);
       75 dcl  gseg                     ptr;
       76 dcl  home_path                char (128);
       77 dcl  i                        fixed bin;
       78 dcl  jout_request             bit;
       79 
       80 dcl  bar_mode_stack_ptr       ptr auto;						/* local storage for bar mode ptr during gcos call */
       81 
       82 /* gtss_drl_spawn_ entry (mcpp, increment); */
       83 	jout_request = "0"b;
       84 	goto common;
       85 
       86 
       87 
       88 gtss_drl_pasflr_: entry (mcpp, increment);
       89 	jout_request = "1"b;
       90 
       91 
       92 
       93 common:
       94 	mcp = mcpp;
       95 	increment = 1 ;				/* One argument */
       96 	scup = addr (mc.scu);
       97 	gseg = gtss_ext_$gtss_slave_area_seg (gtss_ext_$stack_level_);
       98 	arg_list_ptr = addrel (gseg, fixed (scu.ilc, 18)+1); /* get addres of arg_list */
       99 
      100 /* *	Obtain snumb.	* */
      101 	if L_snumb >= fixed (gtss_ust.lsize.limit, 18) then
      102 	     call gtss_abort_subsystem_ (mcp, "gtss_drl_spawn_", 0,
      103 	     "Snumb outside memory (^o)", fixed (scu.ilc, 18));
      104 	snumb_ptr = addrel (gseg, L_snumb);
      105 	call gtss_bcd_ascii_$lc (snumb_ptr, 5, addr (given_snumb));
      106 
      107 /* *	Validate file_name pointer */
      108 	if L_filename >= fixed (gtss_ust.lsize.limit, 18) - 1 then
      109 	     call gtss_abort_subsystem_ (mcp, "gtss_drl_spawn_", 0,
      110 	     "File name outside memory (^o)", fixed (scu.ilc, 18));
      111 	filename_ptr = addrel (gseg, L_filename);
      112 
      113 /** Validate file name */
      114 	call gtss_aft_$find (given_filename, fn, c);
      115 	if c = 1 then
      116 	     call spawn_error (1);			/* 'undefined file' */
      117 
      118 	call gtss_get_user_state_ (u_state_ptr);
      119 	do i = 1 to entry_count;
      120 	     if snumb (i) = given_snumb & status (i) ^= COMPLETE then
      121 		call spawn_error (3);		/* 'duplicate snumb' */
      122 	end;
      123 
      124 	do i = 1 to entry_count while (status (i) ^= COMPLETE);
      125 	end;
      126 	if i > hbound (snumb_entry, 1) then
      127 	     call spawn_error (5);			/* 'no program_number available' */
      128 
      129 	call user_info_$homedir (home_path);		/* set base directory path for gtss segment creation */
      130 
      131 /* * copy formatted temp file to gcos jcl file */
      132 	if gtss_disk (fn).msf then
      133 	     call gtss_abort_subsystem_ (mcp, "gtss_drl_spawn_", 0,
      134 	     "Can't handle multi_segment jcl files yet.");
      135 
      136 	else call copy_single_segment;
      137 
      138 /* * build gcos absin file */
      139 /* * call command processor with absentee instructions */
      140 	call make_gcos_request;
      141 
      142 /** Set job id in snumb table */
      143 	if i > entry_count then entry_count = i;
      144 	snumb (i) = given_snumb;			/* initialize new snumb entry */
      145 	jout_id (i) = output_id;
      146 	activity (i) = 0;
      147 	status (i) = INITIATED;
      148 /** wrap-up derail processing */
      149 	gtss_ust.lsnub, llsnb = bcd_snumb;
      150 	mc.q = "0"b;				/* set status code OK */
      151 
      152 exit_drl_spawn:
      153 	return;
      154 
      155 /* gtss_drl_spawn_ miscellaneous declarations */
      156 
      157 dcl  gtss_get_user_state_     entry (ptr);
      158 
      159 dcl  cu_$cp                   entry (ptr, fixed bin, fixed bin (35));
      160 dcl  hcs_$make_seg            entry (char (*), char (*), char (*), fixed bin (5), ptr, fixed bin (35));
      161 dcl  hcs_$set_bc_seg          entry (ptr, fixed bin(24), fixed bin (35));
      162 dcl  hcs_$terminate_noname    entry (ptr, fixed bin (35));
      163 dcl  user_info_$homedir       entry (char (*));
      164 
      165 spawn_error: proc (error_number);
      166 dcl  error_number             parm;
      167 
      168 	     mc.q = bit (error_number);
      169 	     goto exit_drl_spawn;
      170 	end spawn_error;
      171 
      172 copy_single_segment: proc;
      173 
      174 	     s = addrel (single_segment_ptr (fn), 320);	/* s -> temp jcl file */
      175 
      176 	     call hcs_$make_seg (home_path, given_snumb || ".gtss.gcos", "",
      177 		fixed ("01010"b), d, c);
      178 	     if d = null () then
      179 		call gtss_abort_subsystem_ (mcp, "gtss_drl_spawn_", 0,
      180 		"Error allocating .gtss.gcos, hcs_$make_path returned ^i.", c);
      181 
      182 	     prior_blk, prior_recx = 0;
      183 	     do blk = 1 by 1;			/* for each block in given file */
      184 		if rcw_size (blk, blk_size (blk)) = 0 then /* may be end_of_file */
      185 		     do recx = 1 repeat recx + rcw_size (blk, recx) + 1 while (recx <= blk_size (blk));
      186 		     if rcw_size (blk, recx) = 0 then goto found_eof_rec; /* it is */
      187 		     else do;			/* save location in case this is "***eof" */
      188 			prior_blk = blk;
      189 			prior_recx = recx;
      190 		     end;
      191 		end;
      192 	     end;
      193 
      194 found_eof_rec:
      195 	     if prior_blk = 0 then			/* input file is null */
      196 		call gtss_abort_subsystem_ (mcp, "gtss_drl_spawn_", 0,
      197 		"Null file passed to spawn.");
      198 
      199 	     file_size = prior_blk;
      200 	     d -> source_file = s -> source_file;
      201 
      202 	     d -> blk_size (prior_blk) = blk_size (prior_blk) - rcw_size (prior_blk, prior_recx) - 1; /* replace last record ("***eof") with file mark */
      203 	     d -> rcw_size (prior_blk, prior_recx) = 0;
      204 	     d -> rcw_bits (prior_blk, prior_recx) = "170000"b3;
      205 
      206 	     call hcs_$set_bc_seg (d, file_size * 320 * 36, c);
      207 	     call hcs_$terminate_noname (d, c);
      208 
      209 	     return;
      210 
      211 
      212 
      213 dcl  file_size                fixed bin init ( ((262144-320)/320) );
      214 dcl  s                        ptr;						/* pointer to input jcl */
      215 dcl  d                        ptr;						/* pointer to result jcl */
      216 dcl (recx, prior_recx) fixed bin;
      217 dcl (blk, prior_blk) fixed bin;
      218 
      219 dcl 1 source_file based (s),
      220    2 source_block (file_size),
      221       3 blk_serial fixed bin (18) unsigned unal,
      222       3 blk_size fixed bin (18) unsigned unal,
      223       3 block_rcw (319),
      224          4 rcw_size fixed bin (18) unsigned unal,
      225          4 rcw_bits bit (18) unal;
      226 
      227 	end copy_single_segment;
      228 
      229 make_gcos_request: proc;
      230 
      231 	     if wait_flag then
      232 		gcos_req_ptr = addr (gcos_direct_req);
      233 	     else do;
      234 		call hcs_$make_seg (home_path, given_snumb || ".gtss.absin", "",
      235 		     fixed ("01010"b, 5), gcos_req_ptr, c);
      236 		if gcos_req_ptr = null () then
      237 		     call gtss_abort_subsystem_ (mcp, "gtss_drl_spawn_", 0,
      238 		     "Error allocating .gtss.absin");
      239 	     end;
      240 
      241 	     gcos_req = "gcos$spawn " || rtrim (home_path) || ">" || given_snumb || ".gtss.gcos -ident -userlib";
      242 	     if jout_request then
      243 		gcos_req = rtrim (gcos_req) || " -hd";
      244 
      245 	     if wait_flag then do;
      246 		gcos_req = rtrim (gcos_req) || " -bf";
      247 
      248 /* save bar mode stack pointer before calling gcos */
      249 		sb = baseptr (baseno (addr (bar_mode_stack_ptr)));
      250 		bar_mode_stack_ptr = stack_header.bar_mode_sp;
      251 	     end;
      252 	     else do;
      253 		gcos_req = rtrim (gcos_req) || substr (collate (), 11, 1); /* append newline to absin segment */
      254 		call hcs_$set_bc_seg (gcos_req_ptr, length (rtrim (gcos_req)) * 9, c);
      255 		call hcs_$terminate_noname (gcos_req_ptr, c);
      256 		gcos_req_ptr = null;
      257 		gcos_direct_req = "ear " || rtrim (home_path) || ">" || given_snumb || ".gtss.absin -bf" ||
      258 		     substr (collate (), 11, 1);
      259 	     end;
      260 
      261 	     call cu_$cp (addr (gcos_direct_req), length (rtrim (gcos_direct_req)), c);
      262 
      263 /* restore bar mode stack pointer if necessary */
      264 	     if wait_flag then
      265 		stack_header.bar_mode_sp = bar_mode_stack_ptr;
      266 
      267 	     if c ^= 0 then
      268 		call gtss_abort_subsystem_ (mcp, "gtss_drl_spawn_", 0,
      269 		"Error returned by cu_$cp for command^/^-^a^/", gcos_direct_req);
      270 
      271 	     return;
      272 
      273 
      274 
      275 dcl  gcos_req_ptr             ptr;
      276 dcl  gcos_req                 char (256) based (gcos_req_ptr);
      277 
      278 dcl  gcos_direct_req          char (256);
      279 
      280 	end make_gcos_request;
      281 
  1     1 /* BEGIN INCLUDE FILE gtss_dfd_ext_.incl.pl1 */
  1     2 /*
  1     3*  Created:  (Wardd Multics)  06/09/78 1650.6 mst Fri 
  1     4**/
  1     5 
  1     6 dcl 1 gtss_dfd_ext_$disk_file_data (41) aligned ext,		/* disk_file_data structure */
  1     7 
  1     8     3 gtss_disk,
  1     9       4 dir_name char (168) unal,			/* containing directory for file */
  1    10       4 entry_name char (32) unal,			/* entry name for file */
  1    11       4 fcb_ptr ptr aligned,				/* ptr to file control block */
  1    12       4 msf_array_ptr ptr,				/* Pointer to an array of pointers for a msf. Each
  1    13*						   component which has been accessed has a corresponding
  1    14*						   initialized pointer.  Currently 500 components
  1    15*						   are supported. */
  1    16       4 single_segment_ptr ptr,			/* Pointer to segment for single segment file */
  1    17       4 indicators aligned,				/* one word of flags */
  1    18 
  1    19         5 msf bit (1) unaligned,			/* 1=msf segment | 0= single segment */
  1    20         5 protected_file bit (1) unaligned,		/* 1=file uses protections | 0= unprotected */
  1    21         5 fill bit (34) unal,
  1    22 
  1    23       4 permissions aligned,
  1    24         5 read bit (1) unaligned,			/* 1=read permission  */
  1    25         5 execute bit (1) unaligned,			/* 1=execute permission */
  1    26         5 write bit (1) unaligned,			/* 1=write permission */
  1    27         5 fill2 bit (33) unaligned,			/* unused at this time */
  1    28 
  1    29       4 access_mode bit (6) aligned,			/* contains the mode by which the file was accessed */
  1    30       4 component fixed bin,				/* current component value (first component = 0) */
  1    31       4 offset fixed bin (24),			/* current word offset in the component */
  1    32       4 file_position fixed bin (30),			/* current file position in words */
  1    33       4 file_size fixed bin (30),			/* size of file in words */
  1    34       4 no_components fixed bin (24),			/* number of components for a msf */
  1    35       4 attributes_ptr ptr,				/* Pointer to the attributes structure
  1    36*						   for this file. (See gtss_file_attributes.incl.pl1) */
  1    37 
  1    38       4 pat_body,
  1    39 
  1    40         5 word_0,
  1    41 	6 defective bit (1) unal,			/* 1 = file has defective space */
  1    42 	6 io_errors bit (1) unal,			/* 1 = I/O errors encountered on file */
  1    43 	6 reserved bit (2) unal,			/* Reserved for GCOS */
  1    44 	6 sct bit (12) unal,			/* address of SCT for device on which
  1    45*						   file begins or if cataloged,
  1    46*						   for device with file catalog entry */
  1    47 	6 reserved2 bit (2) unal,			/* Reserved for GCOS */
  1    48 
  1    49         5 word_1,
  1    50 	6 io_time fixed bin (35),			/* I/O time for this file */
  1    51 
  1    52         5 word_2,
  1    53 	6 protected bit (1) unal,			/* 1 = file has protected allocation */
  1    54 	6 hash_code bit (5) unal,			/* hash code of user name under which
  1    55*						   file is cataloged */
  1    56 	6 not_cat bit (1) unal,			/* 1 = file is not cataloged */
  1    57 	6 last_desc bit (1) unal,			/* 1 = last descriptor for file is not in memory */
  1    58 	6 random bit (1) unal,			/* 1 = access to file is random */
  1    59 	6 perm bit (1) unal,			/* 1 = file space is permanently assigned */
  1    60 	6 first_desc bit (1) unal,			/* 1 = first descriptor for file is not in memory */
  1    61 	6 creator bit (1) unal,			/* 1 = user is not creator of file */
  1    62 	6 disposition bit (2) unal,			/* Abort disposition code
  1    63*						   00 = Release
  1    64*						   01 = Dismount
  1    65*						   10 = Save
  1    66*						   11 = Continue */
  1    67 	6 ids1 bit (1) unal,			/* 1 = file is an I-D-S/I file */
  1    68 	6 write_performed bit (1) unal,		/* 1 = write was performed on file */
  1    69 	6 unpermitted_access bit (1) unal,		/* 1 = unpermitted access to file attempted or seek
  1    70*						   attempted to part of file marked defective (only
  1    71*						   for procted allocation) */
  1    72 	6 purge bit (1) unal,			/* 1 = file space to be purgedbefore deallocating file. */
  1    73 	6 sector_number bit (18) unal,		/* If cataloged file, sector number of file catalog
  1    74*						   (on device with SCT referenced in word 0).  If
  1    75*						   cataloged file that is proctected (bit 0 ON in this
  1    76*						   word), memory location of table in File Management
  1    77*						   Supervisor Executive.  If user temporary file,
  1    78*						   largest size file has ever attained, in llinks.
  1    79*						   If system value equals 777777 octal, it is system
  1    80*						   file created by System Input. */
  1    81 
  1    82         5 word_3,
  1    83 	6 llink_size bit (14) unal,			/* 0-13 ^= 0, Current total file size in llinks
  1    84*						   0-13 = 0, File size is greater than 16,383 llinks,
  1    85*						   and if the file is cataloged, call to .MFS19,5 with
  1    86*						   offset to PAT pointer in index 5 will cause bits
  1    87*						   14-35 of Q-register to be set to file size. (Unless
  1    88*						   there is a Seek error on file catalog in which case
  1    89*						   zero is returned. )
  1    90*						   */
  1    91 	6 llink_position bit (22) unal,		/* Relative llink position within the space descriptors
  1    92*						   in memory. */
  1    93 
  1    94         5 word_4,
  1    95 	6 not_last_desc bit (1) unal,			/* 1 = not last descriptor in memory */
  1    96 	6 space_desc bit (1) unal,			/* 0 = this is space descriptor */
  1    97 	6 space_defective bit (1) unal,		/* 1 = Space is defective */
  1    98 	6 extent bit (15) unal,			/* Number of llinks in this extent (area defined by this
  1    99*						   descriptor) */
  1   100 	6 origin bit (18) unal;			/* device llinks number of origin of this extent */
  1   101 /*   END INCLUDE FILE gtss_dfd_ext_.incl.pl1 */
      282 
      283 
  2     1 /* BEGIN INCLUDE FILE gtss_entry_dcls.incl.pl1 */
  2     2 /*
  2     3*  Created: (Wardd Multics)  06/30/78 1624.8 mst Fri 
  2     4*  Modified: Ron Barstad  84-02-24  Fixed wrong and obsolete entries
  2     5**/
  2     6 
  2     7 /**  gtss external entry variables.		**/
  2     8 dcl  com_err_                                   entry() options(variable);
  2     9 dcl  gtss_CFP_abort_                            entry options(variable);
  2    10 dcl  gtss_CFP_break_                            entry options(variable);
  2    11 dcl  gtss_CFP_input_                            entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  2    12 dcl  gtss_CFP_output_                           entry (ptr, ptr, fixed bin(21), fixed bin(35));
  2    13 dcl  gtss_abandon_CFP_                          entry options(variable);
  2    14 dcl  gtss_abort_dump_                           entry (fixed bin(18));
  2    15 dcl  gtss_abort_subsystem_                      entry options (variable);
  2    16 dcl  gtss_abort_subsystem_$not_imp              entry (ptr, fixed bin(24));
  2    17 dcl  gtss_abs_login_banner_		        entry() returns(char(*));
  2    18 dcl  gtss_abs_logout_banner_		        entry() returns(char(*));
  2    19 dcl  gtss_abs_$abs_equiv                        entry options(variable);
  2    20 dcl  gtss_abs_$cpu_runout		        entry (ptr, char(4));
  2    21 dcl  gtss_abs_$create_absin                     entry() returns(char(*));
  2    22 dcl  gtss_abs_$dabt_check		        entry (ptr, char(4));
  2    23 dcl  gtss_abs_$get_id                           entry (char(5)) returns(char(19));
  2    24 dcl  gtss_abs_$get_drm                          entry() returns(char(*));
  2    25 dcl  gtss_adjust_size_                          entry (ptr);
  2    26 dcl  gtss_aft_$add                              entry (char(8), fixed bin(24), fixed bin(35));
  2    27 dcl  gtss_aft_$delete                           entry (char(8), fixed bin(24), fixed bin(35));
  2    28 dcl  gtss_aft_$find                             entry (char(8), fixed bin(24), fixed bin(35));
  2    29 dcl  gtss_aft_$initialize                       entry (fixed bin(35));
  2    30 dcl  gtss_ascii_bcd_                            entry (ptr, fixed bin, ptr);
  2    31 dcl  gtss_attributes_mgr_$get                   entry (ptr, fixed bin(35));
  2    32 dcl  gtss_attributes_mgr_$set                   entry (ptr, fixed bin(35));
  2    33 dcl  gtss_bcd_ascii_                            entry (ptr, fixed bin(24), ptr);
  2    34 dcl  gtss_bcd_ascii_$lc                         entry (ptr, fixed bin(24), ptr);
  2    35 dcl  gtss_break_vector_                         entry ();
  2    36 dcl  gtss_break_vector_$drl_in_progress         entry() returns(bit(1));
  2    37 dcl  gtss_break_vector_$status                  entry() returns(bit(1));
  2    38 dcl  gtss_build_                                entry options(variable);
  2    39 dcl  gtss_com_err_                              entry options(variable);
  2    40 dcl  gtss_derail_processor_                     entry (ptr, char(*), ptr, ptr, bit(1) aligned) /* called at fault time instead of signal_ */;
  2    41 dcl  gtss_derail_processor_$set                 entry options(variable);
  2    42 dcl  gtss_dq_$catp                              entry (char (5), ptr, fixed bin (18) unsigned);
  2    43 dcl  gtss_dq_$create                            entry (bit(1));
  2    44 dcl  gtss_dq_$dibp                              entry (char(5), ptr);
  2    45 dcl  gtss_dq_$entries_info		        entry (ptr, fixed bin (18) unsigned, fixed bin (18) unsigned);
  2    46 dcl  gtss_dq_$hdrp                              entry (ptr);
  2    47 dcl  gtss_dq_$mod_js		        entry (char(5), fixed bin (6) unsigned, bit (1));
  2    48 dcl  gtss_dq_$open_exc		        entry (bit(1));
  2    49 dcl  gtss_dq_$open_gen		        entry (bit(1));
  2    50 dcl  gtss_drl_abort_                            entry (ptr, fixed bin);
  2    51 dcl  gtss_drl_addmem_                           entry (ptr, fixed bin);
  2    52 dcl  gtss_drl_callss_                           entry (ptr, fixed bin);
  2    53 dcl  gtss_drl_corfil_                           entry (ptr, fixed bin);
  2    54 dcl  gtss_drl_defil_                            entry (ptr, fixed bin);
  2    55 dcl  gtss_drl_defil_$subr                       entry (ptr, ptr, ptr);
  2    56 dcl  gtss_drl_dio_                              entry (ptr, fixed bin);
  2    57 dcl  gtss_drl_drlimt_                           entry (ptr, fixed bin);
  2    58 dcl  gtss_drl_drlsav_                           entry (ptr, fixed bin);
  2    59 dcl  gtss_drl_filact_                           entry (ptr, fixed bin);
  2    60 dcl  gtss_drl_filsp_                            entry (ptr, fixed bin);
  2    61 dcl  gtss_drl_grow_                             entry (ptr, fixed bin);
  2    62 dcl  gtss_drl_gwake_                            entry (ptr, fixed bin);
  2    63 dcl  gtss_drl_jsts_                             entry (ptr, fixed bin);
  2    64 dcl  gtss_drl_kin_                              entry (ptr, fixed bin);
  2    65 dcl  gtss_drl_kotnow_                           entry (ptr, fixed bin);
  2    66 dcl  gtss_drl_kotnow_$gtss_drl_kout_            entry (ptr, fixed bin);
  2    67 dcl  gtss_drl_koutn_                            entry (ptr, fixed bin);
  2    68 dcl  gtss_drl_morlnk_                           entry (ptr, fixed bin);
  2    69 dcl  gtss_drl_msub_                             entry (ptr, fixed bin);
  2    70 dcl  gtss_drl_objtim_                           entry (ptr, fixed bin);
  2    71 dcl  gtss_drl_part_                             entry (ptr, fixed bin);
  2    72 dcl  gtss_drl_pasaft_                           entry (ptr, fixed bin);
  2    73 dcl  gtss_drl_pasdes_                           entry (ptr, fixed bin);
  2    74 dcl  gtss_drl_pasust_                           entry (ptr, fixed bin);
  2    75 dcl  gtss_drl_pdio_                             entry (ptr, fixed bin);
  2    76 dcl  gtss_drl_prgdes_                           entry (ptr, fixed bin);
  2    77 dcl  gtss_drl_pseudo_                           entry (ptr, fixed bin);
  2    78 dcl  gtss_drl_relmem_                           entry (ptr, fixed bin);
  2    79 dcl  gtss_drl_restor_                           entry (ptr, fixed bin);
  2    80 dcl  gtss_drl_retfil_                           entry (ptr, fixed bin);
  2    81 dcl  gtss_drl_return_                           entry (ptr, fixed bin);
  2    82 dcl  gtss_drl_rew_                              entry (ptr, fixed bin);
  2    83 dcl  gtss_drl_rstswh_                           entry (ptr, fixed bin);
  2    84 dcl  gtss_drl_setlno_                           entry (ptr, fixed bin);
  2    85 dcl  gtss_drl_setswh_                           entry (ptr, fixed bin);
  2    86 dcl  gtss_drl_snumb_                            entry (ptr, fixed bin);
  2    87 dcl  gtss_drl_spawn_                            entry (ptr, fixed bin);
  2    88 dcl  gtss_drl_spawn_$gtss_drl_pasflr_           entry (ptr, fixed bin);
  2    89 dcl  gtss_drl_stoppt_                           entry (ptr, fixed bin);
  2    90 dcl  gtss_drl_switch_                           entry (ptr, fixed bin);
  2    91 dcl  gtss_drl_sysret_                           entry (ptr, fixed bin);
  2    92 dcl  gtss_drl_t_cfio_                           entry (ptr, fixed bin);
  2    93 dcl  gtss_drl_t_cmov_                           entry (ptr, fixed bin);
  2    94 dcl  gtss_drl_t_err_                            entry (ptr, fixed bin);
  2    95 dcl  gtss_drl_t_goto_                           entry (ptr, fixed bin);
  2    96 dcl  gtss_drl_t_linl_                           entry (ptr, fixed bin);
  2    97 dcl  gtss_drl_t_rscc_                           entry (ptr, fixed bin);
  2    98 dcl  gtss_drl_tapein_                           entry (ptr, fixed bin);
  2    99 dcl  gtss_drl_task_                             entry (ptr, fixed bin);
  2   100 dcl  gtss_drl_termtp_                           entry (ptr, fixed bin);
  2   101 dcl  gtss_drl_time_                             entry (ptr, fixed bin);
  2   102 dcl  gtss_drun_                                 entry (bit(1));
  2   103 dcl  gtss_dsd_lookup_                           entry (char(8) var) returns(fixed bin(24));
  2   104 dcl  gtss_dsd_process_                          entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  2   105 dcl  gtss_edit_dsd_                             entry (ptr, fixed bin(21)) returns(fixed bin(24));
  2   106 dcl  gtss_mcfc_empty                            entry (char(*) var);
  2   107 dcl  gtss_expand_pathname_                      entry (ptr, char(*), char(*), fixed bin(35));
  2   108 dcl  gtss_expand_pathname_$verify_umc           entry (ptr, char(*), char(*), bit(18), fixed bin(35));
  2   109 dcl  gtss_fault_processor_                      entry options(variable);
  2   110 dcl  gtss_find_cond_frame_		        entry (char(32) var) returns(ptr);
  2   111 dcl  gtss_fault_processor_$timer_runout         entry (ptr, char(*));
  2   112 dcl  gtss_filact_error_status_                  entry (fixed bin(35))returns(bit(12));
  2   113 dcl  gtss_filact_funct02_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  2   114 dcl  gtss_filact_funct03_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  2   115 dcl  gtss_filact_funct04_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  2   116 dcl  gtss_filact_funct05_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  2   117 dcl  gtss_filact_funct08_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  2   118 dcl  gtss_filact_funct10_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  2   119 dcl  gtss_filact_funct11_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  2   120 dcl  gtss_filact_funct14_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  2   121 dcl  gtss_filact_funct18_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  2   122 dcl  gtss_filact_funct19_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  2   123 dcl  gtss_filact_funct21_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  2   124 dcl  gtss_filact_funct22_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  2   125 dcl  gtss_mcfc_init_                            entry (char(*) var);
  2   126 dcl  gtss_interp_prim_                          entry options(variable);
  2   127 dcl  gtss_interp_prim_$callss                   entry (char(4), ptr);
  2   128 dcl  gtss_interp_prim_$sysret                   entry options(variable);
  2   129 dcl  gtss_interp_prim_$t_goto                   entry (char(4));
  2   130 dcl  gtss_ios_change_size_                      entry (fixed bin(24), fixed bin(24), bit(1), fixed bin(24), fixed bin(35));
  2   131 dcl  gtss_ios_close_                            entry (fixed bin(24), ptr, fixed bin(35));
  2   132 dcl  gtss_ios_exchange_names_                   entry (fixed bin(24), fixed bin(24), fixed bin(24), fixed bin(35));
  2   133 dcl  gtss_ios_initialize_                       entry options(variable);
  2   134 dcl  gtss_ios_io_                               entry (fixed bin(24), ptr, ptr, fixed bin(24), fixed bin(24), fixed bin(35));
  2   135 dcl  gtss_ios_open_                             entry (fixed bin(24), char(168), char(32), bit(6), bit(1), ptr, ptr, fixed bin(35));
  2   136 dcl  gtss_ios_position_                         entry (fixed bin(24), fixed bin(24), fixed bin(24), bit(6), ptr);
  2   137 dcl  gtss_mcfc_$delete		        entry (fixed bin(24), char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  2   138 dcl  gtss_mcfc_$open                            entry (char(*), char(*), bit(6), bit(36) aligned, ptr, fixed bin(35));
  2   139 dcl  gtss_mcfc_$close                           entry (char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  2   140 dcl  gtss_read_starCFP_                         entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  2   141 dcl  gtss_read_starCFP_$last_os                 entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  2   142 dcl  gtss_run_subsystem_                        entry (fixed bin(24));
  2   143 dcl  gtss_run_subsystem_$finish                 entry options(variable);
  2   144 dcl  gtss_run_subsystem_$restor                 entry (fixed bin(24), ptr);
  2   145 dcl  gtss_run_subsystem_$restor_perm            entry (fixed bin(24), ptr, fixed bin(18));
  2   146 dcl  gtss_set_slave_                            entry (fixed bin (24), ptr);
  2   147 dcl  gtss_set_slave_$load_bar                   entry (fixed bin (17));
  2   148 dcl  gtss_update_safe_store_                    entry (ptr);
  2   149 dcl  gtss_verify_access_		        entry (char(*), char(*), fixed bin(24), bit(6), bit(12) aligned);
  2   150 dcl  gtss_verify_access_$check_forced_access    entry (char(*), char(*), fixed bin(24));
  2   151 dcl  gtss_write_starCFP_                        entry (ptr, ptr, fixed bin(21), fixed bin(35));
  2   152 /*   END INCLUDE FILE gtss_entry_dcls.incl.pl1 */
      284 
      285 
  3     1 /* BEGIN INCLUDE FILE gtss_ext_.incl.pl1 */
  3     2 /*
  3     3*  Created: (Wardd Multics)  05/20/78 1307.6 mst Sat 
  3     4*  Modified: Ward            1981     add suspended_process dcl
  3     5*  Modified: Ron Barstad  83-07-21  Fixed level number on mcfc to 3
  3     6*  Modified: Ron Barstad  83-07-25  Fixed derail range in statistics to 4js3 number
  3     7**/
  3     8 dcl  gtss_ext_$aem                   fixed bin static ext	/* >0 Print "additional" error information. */;
  3     9 dcl  gtss_ext_$bad_drl_rtrn          static ext label	/* Default for drl_rtrn. */;
  3    10 dcl  gtss_ext_$db                    (72)bit(1)unal static ext;
  3    11 dcl  gtss_ext_$deferred_catalogs_ptr ptr ext;
  3    12 dcl  gtss_ext_$dispose_of_drl        static ext label	/* quit handlers for some derails use this label to abort */;
  3    13 dcl  gtss_ext_$drl_rtrn              (4)static ext label	/* where to return at subsystem end */;
  3    14 dcl  gtss_ext_$drm_path              char(168)static ext	/* gtss_expand_pathname_stores drm_path */;
  3    15 dcl  gtss_ext_$drun_jid              char (5) static ext	/* valid only for DRUN executing under absentee */;
  3    16 dcl  gtss_ext_$event_channel         fixed bin (71) static ext	/* used for DABT signals */;
  3    17 dcl  gtss_ext_$finished              static ext label	/* Return to gtss for normal conclusion. */;
  3    18 dcl  gtss_ext_$gdb_name              char(8)ext	/* Name H* module to debug. */;
  3    19 dcl  gtss_ext_$get_line              entry(ptr,ptr,fixed bin(21),fixed bin(21),fixed bin(35))variable ext /* Build mode input procedure. */;
  3    20 dcl  gtss_ext_$gtss_slave_area_seg   (4) ext static ptr	/* pointer to gtss slave area segment */;
  3    21 dcl  gtss_ext_$hcs_work_area_ptr     ptr ext static		/* Temp seg for acl lists. */;
  3    22 dcl  gtss_ext_$homedir               char (64) static ext /* user's home dir */;
  3    23 dcl  gtss_ext_$last_k_was_out        bit (1)aligned ext static	/* "1"b => last tty output was output. */;
  3    24 dcl  gtss_ext_$pdir                  char (168) varying ext static	/* pathname of process directory */;
  3    25 dcl  gtss_ext_$popup_from_pi         static ext label	/* transfer to this label after pi simulates popup primitive */;
  3    26 dcl  gtss_ext_$process_type          fixed bin (17) static ext;
  3    27 dcl  gtss_ext_$put_chars             entry(ptr,ptr,fixed bin(24),fixed bin(35)) variable ext	/* Terminal output procedure. */;
  3    28 dcl  gtss_ext_$restart_from_pi       static ext label	/* transfer to this label after pi restores machine conditions */;
  3    29 dcl  gtss_ext_$restart_seg_ptr       ptr static ext	/* points to DRUN restart file when exec under absentee */;
  3    30 dcl  gtss_ext_$sig_ptr               ext static ptr	/* saved ptr to signal_ */;
  3    31 dcl  gtss_ext_$stack_level_          fixed bin ext static;
  3    32 dcl  gtss_ext_$suspended_process     bit(1) ext static;
  3    33 dcl  gtss_ext_$SYstarstar_file_no    fixed bin (24) static ext;
  3    34 dcl  gtss_ext_$user_id               char (26)var ext;
  3    35 dcl  gtss_ext_$work_area_ptr         ptr ext;
  3    36 
  3    37 dcl  1 gtss_ext_$CFP_bits aligned static external
  3    38      , 3 no_input_yet bit (1) unaligned         /* used in gtss_CFP_input_, gtss_read_starCFP_ */
  3    39      , 3 rtn_bits bit (4) unaligned             /* used in gtss_CFP_input_, gtss_CFP_output_ */
  3    40      , 3 cpos_called bit (1) unaligned          /* used in gtss_CFP_input_, gtss_drl_t_cfio_, gtss_abandon_CFP_ */
  3    41      , 3 cout_called bit (1) unaligned          /* used in gtss_read_starCFP_, gtss_abandon_CFP_ */
  3    42      , 3 build_mode bit (1) unaligned	        /* used in gtss_build_, gtss_dsd_process_ */
  3    43      ;
  3    44 
  3    45 dcl 1 gtss_ext_$com_reg aligned static ext,
  3    46        3 tsdmx,
  3    47          4 dst fixed bin (18) unsigned unaligned,
  3    48          4 dit fixed bin (18) unsigned unaligned,
  3    49        3 tsdpt fixed bin (36) unsigned unaligned,
  3    50        3 tsddt fixed bin (36) unsigned unaligned,
  3    51        3 tsdid bit (72) unaligned,
  3    52        3 tsdsd bit (36) unaligned,
  3    53        3 tsdst fixed bin (36) unsigned unaligned,
  3    54        3 tsdjb fixed bin (35) unaligned,
  3    55        3 tsdgt,
  3    56          4 ust_loc fixed bin (18) unsigned unaligned,
  3    57          4 gating_ctl fixed bin (18) unsigned unaligned,
  3    58        3 tcdfr bit (36) unaligned;
  3    59 
  3    60 dcl 1 gtss_ext_$flags aligned static ext
  3    61      , 3 dispose_of_drl_on_pi	bit (01) unal	/* 1 => drl that should be aborted after quit-pi sequence */
  3    62      , 3 drl_in_progress	bit (01) unal	/* 1 => drl handler executing; 0 => gcos code executing */
  3    63      , 3 popup_from_pi	bit (01) unal	/* 1 => derail processor will simulate Gcos break instead of returning */
  3    64      , 3 unfinished_drl	bit (01) unal	/* 1 => subsystem is handling breaks and quit was raised during a drl */
  3    65      , 3 ss_time_limit_set	bit (01) unal	/* 1 => exec time limit set for subsystem */
  3    66      , 3 timer_ranout	bit (01) unal	/* 1 => user is executing timer runout code */
  3    67      , 3 gtss_com_err_sw      bit (01) unal       /* 1 => stop com_err_ string from going to terminal */   
  3    68      , 3 available		bit (65) unal
  3    69      ;
  3    70 
  3    71 
  3    72 dcl 1 gtss_ext_$statistics aligned static ext,		/* Derail usage statistics */
  3    73       3 total_time (-10:71)fixed bin (71),
  3    74       3 count (-10:71)fixed bin (17);
  3    75 
  3    76 /* 	Declaration of Available File Table
  3    77*   */
  3    78 dcl 1 gtss_ext_$aft aligned ext,			/* aft structure */
  3    79 
  3    80       3 start_list (0:102) fixed bin (24),		/* >0 => 1st aft_entry row to start of next entry chain. */
  3    81 
  3    82       3 aft_entry (20),
  3    83         4 altname char (8),				/* altname name for attaching this file */
  3    84         4 next_entry fixed bin (24),			/* Next aft_entry in hash chain. */
  3    85         4 previous_add fixed bin (24),			/* Previously added entry. */
  3    86         4 next_add fixed bin (24),			/* Entry added after this one. */
  3    87         4 used bit (1) unal,				/* "1"b => aft_entry contains AFT value. */
  3    88         4 forced bit(1) unal,				/* "1"b => gtss_verify_access_ forced access on this file. */
  3    89 
  3    90       3 free_space fixed bin (24),			/* Index of start of free space list for aft entries. */
  3    91       3 first_added fixed bin (24),			/* >0  => start of chain in add order. */
  3    92       3 last_added fixed bin (24)			/* >0 => end of chain in added order. */;
  3    93 
  3    94 dcl  gtss_ext_$ppt                   ptr ext /*  switch name for tapein drl */;
  3    95 /**	Data structure to provide access to installed
  3    96*   subsystems fast library load.
  3    97*   **/
  3    98 dcl 1 gtss_ext_$fast_lib aligned ext
  3    99      , 3 fast_lib_fcb ptr				/* Pointer to msf fcb.	*/
  3   100      , 3 fast_lib_ncp fixed bin (24)			/* Number of components. */
  3   101      , 3 comp_ptr (0:9)ptr				/* Pointer to component. */
  3   102      , 3 comp_wds (0:9)fixed bin (24)			/* Component length (words). */
  3   103      ;
  3   104 
  3   105 /* Pointers to segments to regulate multipler
  3   106*   callers to files. Same segments are used to regulate
  3   107*   all simulator callers.
  3   108**/
  3   109 dcl 1 gtss_ext_$mcfc	aligned ext,
  3   110       3 multics_lock_id	bit(36),
  3   111       3 wait_time		fixed bin,
  3   112       3 files_ptr		ptr,
  3   113       3 names_ptr		ptr,
  3   114       3 callers_ptr		(0:3)ptr
  3   115 ;
  3   116 
  3   117 /*   END INCLUDE FILE gtss_ext_.incl.pl1 */
      286 
      287 
  4     1 /* BEGIN INCLUDE FILE gtss_snumb_xref_.incl.pl1 */
  4     2 /*
  4     3*  Created: (MWilson Multics)  03/26/79 1152.0 mst Mon 
  4     4**/
  4     5 
  4     6 dcl  u_state_ptr ptr;
  4     7 dcl 1 gtss_snumb_xref_ based (u_state_ptr),
  4     8       3 snumb_sequence pic "9999",
  4     9       3 entry_count fixed bin,
  4    10       3 snumb_entry (100),
  4    11         4 snumb char (5),
  4    12         4 jout_id bit (12),
  4    13         4 activity fixed bin,
  4    14         4 status fixed bin;
  4    15 
  4    16 /* * snumb_entry.status key values * */
  4    17 
  4    18 dcl (READING_RMT, INITIATED)	init(3)		static int options(constant);
  4    19 dcl EXECUTING	init(9)		static int options(constant);
  4    20 dcl WAIT_MEDIA	init(11)		static int options(constant);
  4    21 dcl TERMINATING	init(15)		static int options(constant);
  4    22 dcl OUTPUT_WAITING	init(16)		static int options(constant);
  4    23 dcl (OUTPUT_COMPLETE, COMPLETE)	init(17)		static int options(constant);
  4    24 
  4    25 /*   END INCLUDE FILE gtss_snumb_xref_.incl.pl1 */
      288 
      289 
  5     1 /* BEGIN INCLUDE FILE gtss_ust_ext_.incl.pl1 */
  5     2 /* UST: User Status Table 
  5     3*   definitions based on 
  5     4*   System Tables, Order number DD14-01E, January 1981
  5     5*   Section 15, Time Sharing System
  5     6*
  5     7*   Authors: Robert J. Grimes	Created
  5     8*   -	  Albert N. Kepner	  1978
  5     9*   -	  Robert M. May
  5    10*   -	  David B. Ward
  5    11*   Change:  Dave Ward	02/23/79 Level 4 numbering.
  5    12*   Change:  Ron Barstad  83-07-12 Repaired damaged formating and word offset comments
  5    13*                                  Brought up to 4JS3 functionality
  5    14**/
  5    15 /* octal word offsets of entries */
  5    16 dcl 1 gtss_ust_ext_$ust aligned ext,
  5    17       3 gtss_ust,
  5    18 /* 0-1  */	4 lid		bit (72),
  5    19 /* 2    */	4 lstp		bit (36),
  5    20 /* 3    */	4 ltin		bit (36),
  5    21 /* 4    */	4 lstio,
  5    22 			5 no_of_chars_by_8  fixed bin (18) uns unal,
  5    23 			5 no_of_disk_io     fixed bin (18) uns unal,
  5    24 /* 5    */	4 lsnub		bit (36),
  5    25 /* 6-7  */	4 lchg		bit (72),
  5    26 /* 10   */	4 lbuf,
  5    27 			5 address		bit (18)unaligned,
  5    28 			5 tally		bit (1)unaligned,
  5    29 			5 terminal_type	bit (5)unaligned,
  5    30 			5 station_id	bit (12)unaligned,
  5    31 /* 11-12 */	4 liost (0:1)	bit (36),
  5    32 /* 13   */	4 lcc		bit (36),
  5    33 /* 14   */	4 lback,
  5    34 			5 fill1		bit (18) unaligned,
  5    35 			5 gwake		fixed bin (17) unaligned,
  5    36 /* 15   */	4 lflag,
  5    37 			5 mp_list		bit (18) unaligned,
  5    38 			5 flags unaligned,
  5    39 				6 b18		bit (1) unaligned,
  5    40 				6 b19		bit (1) unaligned,
  5    41 				6 b20		bit (1) unaligned,
  5    42 				6 b21		bit (1) unaligned,
  5    43 				6 b22		bit (1) unaligned,
  5    44 				6 b23		bit (1) unaligned,
  5    45 				6 b24		bit (1) unaligned,
  5    46 				6 b25		bit (1) unaligned,
  5    47 				6 b26		bit (1) unaligned,
  5    48 				6 b27		bit (1) unaligned,
  5    49 				6 b28		bit (1) unaligned,
  5    50 				6 b29		bit (1) unaligned,
  5    51 				6 b30		bit (1) unaligned,
  5    52 				6 b31		bit (1) unaligned,
  5    53 				6 b32		bit (1) unaligned,
  5    54 				6 b33		bit (1) unaligned,
  5    55 				6 b34		bit (1) unaligned,
  5    56 				6 b35		bit (1) unaligned,
  5    57 /* 16   */	4 lkdss		bit (36),
  5    58 /* 17   */	4 lfile,
  5    59 			5 program_stack	fixed bin (17) unal,
  5    60 			5 file_list_ptr	bit (18) unal,
  5    61 /* 20   */	4 lttys		bit (36),
  5    62 /* 21   */	4 lswth,
  5    63 			5 b0		bit (1) unaligned,
  5    64 			5 b1		bit (1) unaligned,
  5    65 			5 b2		bit (1) unaligned,
  5    66 			5 b3		bit (1) unaligned,
  5    67 			5 b4		bit (1) unaligned,
  5    68 			5 b5		bit (1) unaligned,
  5    69 			5 b6		bit (1) unaligned,
  5    70 			5 b7		bit (1) unaligned,
  5    71 			5 b8		bit (1) unaligned,
  5    72 			5 b9		bit (1) unaligned,
  5    73 			5 b10		bit (1) unaligned,
  5    74 			5 b11		bit (1) unaligned,
  5    75 			5 b12		bit (1) unaligned,
  5    76 			5 b13		bit (1) unaligned,
  5    77 			5 b14		bit (1) unaligned,
  5    78 			5 b15		bit (1) unaligned,
  5    79 			5 b16		bit (1) unaligned,
  5    80 			5 b17		bit (1) unaligned,
  5    81 			5 b18		bit (1) unaligned,
  5    82 			5 b19		bit (1) unaligned,
  5    83 			5 b20		bit (1) unaligned,
  5    84 			5 b21		bit (1) unaligned,
  5    85 			5 b22		bit (1) unaligned,
  5    86 			5 b23		bit (1) unaligned,
  5    87 			5 b24		bit (1) unaligned,
  5    88 			5 b25		bit (1) unaligned,
  5    89 			5 b26		bit (1) unaligned,
  5    90 			5 b27		bit (1) unaligned,
  5    91 			5 b28		bit (1) unaligned,
  5    92 			5 b29		bit (1) unaligned,
  5    93 			5 b30		bit (1) unaligned,
  5    94 			5 b31		bit (1) unaligned,
  5    95 			5 b32		bit (1) unaligned,
  5    96 			5 b33		bit (1) unaligned,
  5    97 			5 b34		bit (1) unaligned,
  5    98 			5 b35		bit (1) unaligned,
  5    99 /* 22   */	4 lsize,
  5   100 			5 bar		fixed bin (17) unaligned,
  5   101 			5 limit		bit (18) unaligned,
  5   102 /* 23... */	4 lswap,
  5   103 			5 fill		bit (18) unal,
  5   104 			5 size		bit (18) unal,
  5   105 /* ...24 */	4 transfer_cell	bit (36) unal,
  5   106 /* 25   */	4 lerrm		bit (36),
  5   107 /* 26-37 */	4 lcfil (0:9)	bit (36),
  5   108 /* 40   */	4 lsybc,
  5   109 			5 b0_17		fixed bin (17) unaligned,
  5   110 			5 b18_35		fixed bin (17) unaligned,
  5   111 /* 41-42 */	4 lstem (0:1)	bit (36),
  5   112 /* 43    */	4 lcals,
  5   113 			5 b0_17		fixed bin (17) unaligned,
  5   114 			5 b18_35		bit (18) unaligned,
  5   115 /* 44-51 */	4 subsystems (3),
  5   116 			5 content_lswap,
  5   117 				6 fill		bit (18) unal,
  5   118 				6 size		bit (18) unal,
  5   119 			5 tally_address	fixed bin (17) unaligned,
  5   120 			5 ss_flags	bit (18) unaligned,
  5   121 /* 52   */	4 ltalc,
  5   122 			5 tod		fixed bin (17) unaligned,
  5   123 			5 startup		fixed bin (17) unaligned,
  5   124 /* 53   */	4 lspts		fixed bin (35),
  5   125 /* 54   */	4 lflg2,
  5   126 			5 b0		bit (1) unaligned,
  5   127 			5 b1		bit (1) unaligned,
  5   128 			5 b2		bit (1) unaligned,
  5   129 			5 b3		bit (1) unaligned,
  5   130 			5 b4		bit (1) unaligned,
  5   131 			5 b5		bit (1) unaligned,
  5   132 			5 b6		bit (1) unaligned,
  5   133 			5 b7		bit (1) unaligned,
  5   134 			5 b8		bit (1) unaligned,
  5   135 			5 b9		bit (1) unaligned,
  5   136 			5 b10		bit (1) unaligned,
  5   137 			5 b11		bit (1) unaligned,
  5   138 			5 b12		bit (1) unaligned,
  5   139 			5 b13		bit (1) unaligned,
  5   140 			5 b14		bit (1) unaligned,
  5   141 			5 b15		bit (1) unaligned,
  5   142 			5 b16		bit (1) unaligned,
  5   143 			5 b17		bit (1) unaligned,
  5   144 			5 b18		bit (1) unaligned,
  5   145 			5 b19		bit (1) unaligned,
  5   146 			5 b20		bit (1) unaligned,
  5   147 			5 b21		bit (1) unaligned,
  5   148 			5 b22		bit (1) unaligned,
  5   149 			5 b23		bit (1) unaligned,
  5   150 			5 b24		bit (1) unaligned,
  5   151 			5 b25		bit (1) unaligned,
  5   152 			5 b26		bit (1) unaligned,
  5   153 			5 b27		bit (1) unaligned,
  5   154 			5 b28		bit (1) unaligned,
  5   155 			5 b29		bit (1) unaligned,
  5   156 			5 b30		bit (1) unaligned,
  5   157 			5 b31		bit (1) unaligned,
  5   158 			5 b32		bit (1) unaligned,
  5   159 			5 b33		bit (1) unaligned,
  5   160 			5 b34		bit (1) unaligned,
  5   161 			5 b35		bit (1) unaligned,
  5   162 /* 55-60 */	4 lsftm (0:3)	bit (36),
  5   163 /* 61    */	4 lsprt		fixed bin (35),
  5   164 /* 62    */	4 ltrm		bit (36),
  5   165 /* 63    */	4 linno		fixed bin (35),
  5   166 /* 64    */	4 lincr		fixed bin (35),
  5   167 /* 65    */	4 ltdes		bit (36),
  5   168 /* 66    */	4 lbptr		bit (36),
  5   169 /* 67    */	4 lpptr,
  5   170 			5 last_file_pat_ptr	bin (18) uns unal,
  5   171 			5 lpptr_reserved	bin (18) uns unal,
  5   172 /* 70    */	4 lsclp		bit (36),
  5   173 /* 71    */	4 limit		fixed bin (35),
  5   174 /* 72    */	4 lacpt,
  5   175 			5 jout_pat_offset	bit (18) unal,
  5   176 			5 permissions unal,
  5   177 				6 lodx		bit (1) unal,
  5   178 				6 cardin		bit (1) unal,
  5   179 				6 talk		bit (1) unal,
  5   180 				6 lods		bit (1) unal,
  5   181 			5 cardin_urgency	bit (14) unal,
  5   182 /* 73    */	4 ldrl,
  5   183 			5 ilc		bit (18) unaligned,
  5   184 			5 code		fixed bin (17) unaligned,
  5   185 /* 74    */	4 ljsnb		bit (36),
  5   186 /* 75    */	4 ltm0		bit (36),
  5   187 /* 76    */	4 ltm1		bit (36),
  5   188 /* 77    */	4 ltm2		bit (36),
  5   189 /* 100   */	4 ltm3		bit (36),
  5   190 /* 101   */	4 ltm4		bit (36),
  5   191 /* 102   */	4 ltm5		bit (36),
  5   192 /* 103   */	4 ltmwt		bit (36),
  5   193 /* 104   */	4 ltmrs		bit (36),
  5   194 /* 105   */	4 ltc0		bit (36),
  5   195 /* 106   */	4 ltc1		bit (36),
  5   196 /* 107   */	4 ltc2		bit (36),
  5   197 /* 110   */	4 lct3		bit (36),
  5   198 /* 111   */	4 ltc4		bit (36),
  5   199 /* 112   */	4 ltc5		bit (36),
  5   200 /* 113   */	4 ltcw		bit (36),
  5   201 /* 114   */	4 lkst		bit (36),
  5   202 /* 115   */	4 lkst2		bit (36),
  5   203 /* 116   */	4 lkcc		bit (36),
  5   204 /* 117   */	4 lkms		bit (36),
  5   205 /* 120-121 */	4 lksdc (0:1)	bit (36),
  5   206 /* 122   */	4 lkntp		bit (36),
  5   207 /* 123   */	4 lkrdc		bit (36),
  5   208 /* 124   */	4 lpqf		bit (36),
  5   209 /* 125   */	4 lpqb		bit (36),
  5   210 /* 126   */	4 lustl		bit (36),
  5   211 /* 127   */	4 ltemp		bit (36),
  5   212 /* 130   */	4 lrtll,
  5   213 			5 word_length	fixed bin unaligned,
  5   214 			5 char_length	fixed bin unaligned,
  5   215 /* 131   */	4 ltim		bit (36),
  5   216 /* 132   */	4 lcfio,
  5   217 			5 sect_out	fixed bin(18)unsigned unal,
  5   218 			5 sect_in		fixed bin(18)unsigned unal,
  5   219 /* 133   */	4 lcfst,
  5   220 			5 initial_sect_out	fixed bin(18)unsigned unal,
  5   221 			5 start_term	fixed bin(18)unsigned unal,
  5   222 /* 134   */	4 lcmpt		bit (36),
  5   223 /* 135   */	4 lcjid		bit (36),
  5   224 /* 136-137 */	4 lrcal (0:1)	bit (36),
  5   225 /* 140   */	4 lrdta		bit (36),
  5   226 /* 141   */	4 lrrsk		bit (36),
  5   227 /* 142   */	4 lrskd		bit (36),
  5   228 /* 143   */	4 lrcc		bit (36),
  5   229 /* 144-145 */	4 lrsts (0:1)	bit (36),
  5   230 /* 146   */	4 lrtm		bit (36),
  5   231 /* 147   */	4 lswt2,
  5   232 			5 b0		bit (1) unaligned,
  5   233 			5 b1		bit (1) unaligned,
  5   234 			5 b2		bit (1) unaligned,
  5   235 			5 b3		bit (1) unaligned,
  5   236 			5 b4		bit (1) unaligned,
  5   237 			5 b5		bit (1) unaligned,
  5   238 			5 b6		bit (1) unaligned,
  5   239 			5 b7		bit (1) unaligned,
  5   240 			5 b8		bit (1) unaligned,
  5   241 			5 b9		bit (1) unaligned,
  5   242 			5 b10		bit (1) unaligned,
  5   243 			5 b11		bit (1) unaligned,
  5   244 			5 b12		bit (1) unaligned,
  5   245 			5 b13		bit (1) unaligned,
  5   246 			5 b14		bit (1) unaligned,
  5   247 			5 b15		bit (1) unaligned,
  5   248 			5 b16		bit (1) unaligned,
  5   249 			5 b17		bit (1) unaligned,
  5   250 			5 b18		bit (1) unaligned,
  5   251 			5 b19		bit (1) unaligned,
  5   252 			5 b20		bit (1) unaligned,
  5   253 			5 b21		bit (1) unaligned,
  5   254 			5 b22		bit (1) unaligned,
  5   255 			5 b23		bit (1) unaligned,
  5   256 			5 b24		bit (1) unaligned,
  5   257 			5 b25		bit (1) unaligned,
  5   258 			5 b26		bit (1) unaligned,
  5   259 			5 b27		bit (1) unaligned,
  5   260 			5 b28		bit (1) unaligned,
  5   261 			5 b29		bit (1) unaligned,
  5   262 			5 b30		bit (1) unaligned,
  5   263 			5 b31		bit (1) unaligned,
  5   264 			5 b32		bit (1) unaligned,
  5   265 			5 b33		bit (1) unaligned,
  5   266 			5 b34		bit (1) unaligned,
  5   267 			5 b35		bit (1) unaligned,
  5   268 /* 150   */	4 llsnb		bit (36),
  5   269 /* 151   */	4 lesq		bit (36),
  5   270 /* 152-153 */	4 lumc (0:1)	bit (36),
  5   271 /* 154-155 */	4 lfnam (0:1)	bit (36),
  5   272 /* 156   */	4 lopts		bit (36),
  5   273 /* 157   */	4 licec,
  5   274 			5 b0_17		bit (18) unaligned,
  5   275 			5 b18_35		fixed bin (17) unaligned,
  5   276 /* 160   */	4 lflg3,
  5   277 			5 b0		bit (1) unaligned,
  5   278 			5 b1		bit (1) unaligned,
  5   279 			5 b2		bit (1) unaligned,
  5   280 			5 b3		bit (1) unaligned,
  5   281 			5 b4		bit (1) unaligned,
  5   282 			5 b5		bit (1) unaligned,
  5   283 			5 b6		bit (1) unaligned,
  5   284 			5 b7		bit (1) unaligned,
  5   285 			5 b8		bit (1) unaligned,
  5   286 			5 b9		bit (1) unaligned,
  5   287 			5 b10		bit (1) unaligned,
  5   288 			5 b11		bit (1) unaligned,
  5   289 			5 b12		bit (1) unaligned,
  5   290 			5 b13		bit (1) unaligned,
  5   291 			5 b14		bit (1) unaligned,
  5   292 			5 b15		bit (1) unaligned,
  5   293 			5 b16		bit (1) unaligned,
  5   294 			5 b17		bit (1) unaligned,
  5   295 			5 b18		bit (1) unaligned,
  5   296 			5 b19		bit (1) unaligned,
  5   297 			5 b20		bit (1) unaligned,
  5   298 			5 b21		bit (1) unaligned,
  5   299 			5 b22		bit (1) unaligned,
  5   300 			5 b23		bit (1) unaligned,
  5   301 			5 b24		bit (1) unaligned,
  5   302 			5 b25		bit (1) unaligned,
  5   303 			5 b26		bit (1) unaligned,
  5   304 			5 b27		bit (1) unaligned,
  5   305 			5 b28		bit (1) unaligned,
  5   306 			5 b29		bit (1) unaligned,
  5   307 			5 b30		bit (1) unaligned,
  5   308 			5 b31		bit (1) unaligned,
  5   309 			5 b32		bit (1) unaligned,
  5   310 			5 b33		bit (1) unaligned,
  5   311 			5 b34		bit (1) unaligned,
  5   312 			5 b35		bit (1) unaligned,
  5   313 /* 161-163 */	4 lpage (0:2)	bit (36),
  5   314 /* 164   */	4 lsit1		bit (36),
  5   315 /* 165   */	4 lsit2		bit (36),
  5   316 /* 166   */	4 lsit3		bit (36),
  5   317 /* 167   */	4 lsit4		bit (36),
  5   318 /* The following entries are maintained by gtss and are not found in TSS UST */
  5   319 /* 170   */	4 lxxx, /* program stack index, offset from gtss_ust */
  5   320 			5 b0_17		fixed bin (17) unaligned,
  5   321 			5 b18_35		bit (18) unaligned, /* not used */
  5   322 /* 171-175 */	4 lprgs (5),
  5   323 			5 b0_17		fixed bin (17) unaligned,
  5   324 			5 b18_35		fixed bin (17) unaligned,
  5   325 /* 176   */	4 fill	bit (36),
  5   326 /* 177   */	4 remote_io_buffer aligned,
  5   327 			5 buffer_control_word,
  5   328 				6 current_line_pointer  bit (18)unal,
  5   329 				6 buffer_threshold_address  bit (18)unal,
  5   330 			5 number_words_transmitted	fixed bin (17)unal,
  5   331 			5 FILL1			fixed bin (17)unal,
  5   332 			5 count_of_characters_transmitted fixed bin (17)unal,
  5   333 			5 FILL2			fixed bin (17)unal,
  5   334 			5 characters_transmitted (244) char (1) unal,
  5   335 /* 277   */	4 word_after_ust		bit (36) aligned;
  5   336 
  5   337 /*   END INCLUDE FILE gtss_ust_ext_.incl.pl1 */
      290 
      291 
  6     1 /*  */
  6     2 /* BEGIN INCLUDE FILE  mc.incl.pl1   Created Dec 72 for 6180 - WSS. */
  6     3 /* Modified 06/07/76 by Greenberg for mc.resignal */
  6     4 /* Modified 07/07/76 by Morris for fault register data */
  6     5 /* Modified 08/28/80 by J. A. Bush for the DPS8/70M CVPU */
  6     6 /* Modified '82 to make values constant */
  6     7 
  6     8 /* words 0-15 pointer registers */
  6     9 
  6    10 dcl  mcp ptr;
  6    11 
  6    12 dcl 1 mc based (mcp) aligned,
  6    13     2 prs (0:7) ptr,				/* POINTER  REGISTERS */
  6    14    (2 regs,					/* registers */
  6    15       3 x (0:7) bit (18),				/* index registers */
  6    16       3 a bit (36),					/* accumulator */
  6    17       3 q bit (36),					/* q-register */
  6    18       3 e bit (8),					/* exponent */
  6    19       3 pad1 bit (28),
  6    20       3 t bit (27),					/* timer register */
  6    21       3 pad2 bit (6),
  6    22       3 ralr bit (3),				/* ring alarm register */
  6    23 
  6    24     2 scu (0:7) bit (36),
  6    25 
  6    26     2 mask bit (72),				/* mem controller mask at time of fault */
  6    27     2 ips_temp bit (36),				/* Temporary storage for IPS info */
  6    28     2 errcode fixed bin (35),				/* fault handler's error code */
  6    29     2 fim_temp,
  6    30       3 unique_index bit (18) unal,			/* unique index for restarting faults */
  6    31       3 resignal bit (1) unal,			/* recompute signal name with fcode below */
  6    32       3 fcode bit (17) unal,				/* fault code used as index to FIM table and SCT */
  6    33     2 fault_reg bit (36),				/* fault register */
  6    34     2 pad2 bit (1),
  6    35     2 cpu_type fixed bin (2) unsigned,			/* L68 = 0, DPS8/70M = 1 */
  6    36     2 ext_fault_reg bit (15),				/* extended fault reg for DPS8/70M CPU */
  6    37     2 fault_time bit (54),				/* time of fault */
  6    38 
  6    39     2 eis_info (0:7) bit (36)) unaligned;
  6    40 
  6    41 
  6    42 dcl (apx fixed bin init (0),
  6    43      abx fixed bin init (1),
  6    44      bpx fixed bin init (2),
  6    45      bbx fixed bin init (3),
  6    46      lpx fixed bin init (4),
  6    47      lbx fixed bin init (5),
  6    48      spx fixed bin init (6),
  6    49      sbx fixed bin init (7)) internal static options (constant);
  6    50 
  6    51 
  6    52 
  6    53 
  6    54 dcl  scup ptr;
  6    55 
  6    56 dcl 1 scu based (scup) aligned,			/* SCU DATA */
  6    57 
  6    58 
  6    59 /*	WORD (0)		*/
  6    60 
  6    61    (2 ppr,					/* PROCEDURE POINTER REGISTER */
  6    62       3 prr bit (3),				/* procedure ring register */
  6    63       3 psr bit (15),				/* procedure segment register */
  6    64       3 p bit (1),					/* procedure privileged bit */
  6    65 
  6    66     2 apu,					/* APPENDING UNIT STATUS */
  6    67       3 xsf bit (1),				/* ext seg flag - IT modification */
  6    68       3 sdwm bit (1),				/* match in SDW Ass. Mem. */
  6    69       3 sd_on bit (1),				/* SDW Ass. Mem.  ON */
  6    70       3 ptwm bit (1),				/* match in PTW Ass. Mem. */
  6    71       3 pt_on bit (1),				/* PTW Ass. Mem.  ON */
  6    72       3 pi_ap bit (1),				/* Instr Fetch or Append cycle */
  6    73       3 dsptw bit (1),				/* Fetch of DSPTW */
  6    74       3 sdwnp bit (1),				/* Fetch of SDW non paged */
  6    75       3 sdwp bit (1),				/* Fetch of SDW paged */
  6    76       3 ptw bit (1),				/* Fetch of PTW */
  6    77       3 ptw2 bit (1),				/* Fetch of pre-paged PTW */
  6    78       3 fap bit (1),				/* Fetch of final address paged */
  6    79       3 fanp bit (1),				/* Fetch of final address non-paged */
  6    80       3 fabs bit (1),				/* Fetch of final address absolute */
  6    81 
  6    82     2 fault_cntr bit (3),				/* number of retrys of EIS instructions */
  6    83 
  6    84 
  6    85 /*	WORD (1)		*/
  6    86 
  6    87     2 fd,						/* FAULT  DATA */
  6    88       3 iro bit (1),				/* illegal ring order */
  6    89       3 oeb bit (1),				/* out of execute bracket */
  6    90       3 e_off bit (1),				/* no execute */
  6    91       3 orb bit (1),				/* out of read bracket */
  6    92       3 r_off bit (1),				/* no read */
  6    93       3 owb bit (1),				/* out of write bracket */
  6    94       3 w_off bit (1),				/* no write */
  6    95       3 no_ga bit (1),				/* not a gate */
  6    96       3 ocb bit (1),				/* out of call bracket */
  6    97       3 ocall bit (1),				/* outward call */
  6    98       3 boc bit (1),				/* bad outward call */
  6    99       3 inret bit (1),				/* inward return */
  6   100       3 crt bit (1),				/* cross ring transfer */
  6   101       3 ralr bit (1),				/* ring alarm register */
  6   102       3 am_er bit (1),				/* associative memory fault */
  6   103       3 oosb bit (1),				/* out of segment bounds */
  6   104       3 paru bit (1),				/* processor parity upper */
  6   105       3 parl bit (1),				/* processor parity lower */
  6   106       3 onc_1 bit (1),				/* op not complete type 1 */
  6   107       3 onc_2 bit (1),				/* op not complete type 2 */
  6   108 
  6   109     2 port_stat,					/* PORT  STATUS */
  6   110       3 ial bit (4),				/* illegal action lines */
  6   111       3 iac bit (3),				/* illegal action channel */
  6   112       3 con_chan bit (3),				/* connect channel */
  6   113 
  6   114     2 fi_num bit (5),				/* (fault/interrupt)  number */
  6   115     2 fi_flag bit (1),				/*  1 => fault,  0 => interrupt  */
  6   116 
  6   117 
  6   118 /*	WORD (2)		*/
  6   119 
  6   120     2 tpr,					/* TEMPORARY POINTER REGISTER */
  6   121       3 trr bit (3),				/* temporary ring register */
  6   122       3 tsr bit (15),				/* temporary segment register */
  6   123 
  6   124     2 pad2 bit (9),
  6   125 
  6   126     2 cpu_no bit (3),				/* CPU number */
  6   127 
  6   128     2 delta bit (6),				/* tally modification DELTA */
  6   129 
  6   130 
  6   131 /*	WORD (3)		*/
  6   132 
  6   133     2 word3 bit (18),
  6   134 
  6   135     2 tsr_stat,					/* TSR STATUS for 1,2,&3 word instructions */
  6   136       3 tsna,					/* Word 1 status */
  6   137         4 prn bit (3),				/* Word 1  PR  number */
  6   138         4 prv bit (1),				/* Word 1  PR  valid bit */
  6   139       3 tsnb,					/* Word 2  status */
  6   140         4 prn bit (3),				/* Word 2  PR  number */
  6   141         4 prv bit (1),				/* Word 2  PR  valid bit */
  6   142       3 tsnc,					/* Word 3  status */
  6   143         4 prn bit (3),				/* Word 3  PR  number */
  6   144         4 prv bit (1),				/* Word 3  PR  valid bit */
  6   145 
  6   146     2 tpr_tbr bit (6),				/* TPR.TBR  field */
  6   147 
  6   148 
  6   149 /* 	WORD (4)		*/
  6   150 
  6   151     2 ilc bit (18),					/* INSTRUCTION  COUNTER */
  6   152 
  6   153     2 ir,						/* INDICATOR  REGISTERS */
  6   154       3 zero bit (1),				/* zero indicator */
  6   155       3 neg bit (1),				/* negative indicator */
  6   156       3 carry bit (1),				/* carryry indicator */
  6   157       3 ovfl bit (1),				/* overflow indicator */
  6   158       3 eovf bit (1),				/* eponent overflow */
  6   159       3 eufl bit (1),				/* exponent underflow */
  6   160       3 oflm bit (1),				/* overflow mask */
  6   161       3 tro bit (1),				/* tally runout */
  6   162       3 par bit (1),				/* parity error */
  6   163       3 parm bit (1),				/* parity mask */
  6   164       3 bm bit (1),					/* ^bar mode */
  6   165       3 tru bit (1),				/* truncation mode */
  6   166       3 mif bit (1),				/* multi-word instruction mode */
  6   167       3 abs bit (1),				/* absolute mode */
  6   168       3 hex bit (1),				/* hexadecimal exponent mode */
  6   169       3 pad bit (3),
  6   170 
  6   171 
  6   172 /*	WORD (5)		*/
  6   173 
  6   174     2 ca bit (18),					/* COMPUTED  ADDRESS */
  6   175 
  6   176     2 cu,						/* CONTROL UNIT STATUS */
  6   177       3 rf bit (1),					/* on first cycle of repeat instr */
  6   178       3 rpt bit (1),				/* repeat instruction */
  6   179       3 rd bit (1),					/* repeat double instruction */
  6   180       3 rl bit (1),					/* repeat link instruciton */
  6   181       3 pot bit (1),				/* IT  modification */
  6   182       3 pon bit (1),				/* return type instruction */
  6   183       3 xde bit (1),				/* XDE from Even location */
  6   184       3 xdo bit (1),				/* XDE from Odd  location */
  6   185       3 poa bit (1),				/* operation preparation */
  6   186       3 rfi bit (1),				/* tells CPU to refetch instruction */
  6   187       3 its bit (1),				/* ITS modification */
  6   188       3 if bit (1),					/* fault occured during instruction fetch */
  6   189 
  6   190     2 cpu_tag bit (6)) unaligned,			/* computed tag field */
  6   191 
  6   192 
  6   193 /*	WORDS (6,7)	*/
  6   194 
  6   195     2 even_inst bit (36),				/* even instruction of faulting pair */
  6   196 
  6   197     2 odd_inst bit (36);				/* odd  instruction of faulting pair */
  6   198 
  6   199 
  6   200 
  6   201 
  6   202 
  6   203 
  6   204 /*	ALTERNATE   SCU  DECLARATION		*/
  6   205 
  6   206 
  6   207 dcl 1 scux based (scup) aligned,
  6   208 
  6   209    (2 pad0 bit (36),
  6   210 
  6   211     2 fd,						/* GROUP II  FAULT DATA */
  6   212       3 isn bit (1),				/* illegal segment number */
  6   213       3 ioc bit (1),				/* illegal op  code  */
  6   214       3 ia_am bit (1),				/* illegal address - modifier */
  6   215       3 isp bit (1),				/* illegal slave  procedure */
  6   216       3 ipr bit (1),				/* illegal procedure */
  6   217       3 nea bit (1),				/* non existent address */
  6   218       3 oobb bit (1),				/* out of bounds */
  6   219       3 pad bit (29),
  6   220 
  6   221     2 pad2 bit (36),
  6   222 
  6   223     2 pad3a bit (18),
  6   224 
  6   225     2 tsr_stat (0:2),				/* TSR  STATUS  as an  ARRAY */
  6   226       3 prn bit (3),				/* PR  number */
  6   227       3 prv bit (1),				/* PR  valid bit */
  6   228 
  6   229     2 pad3b bit (6)) unaligned,
  6   230 
  6   231     2 pad45 (0:1) bit (36),
  6   232 
  6   233     2 instr (0:1) bit (36);				/* Instruction ARRAY */
  6   234 
  6   235 
  6   236 
  6   237 /*  END INCLUDE FILE   mc.incl.pl1 */
      292 
  7     1 /* 	BEGIN INCLUDE FILE ... stack_header.incl.pl1 .. 3/72 Bill Silver  */
  7     2 /*	modified 7/76 by M. Weaver for *system links and more system use of areas */
  7     3 /*	modified 3/77 by M. Weaver to add rnt_ptr */
  7     4 /*	Modified April 1983 by C. Hornig for tasking */
  7     5 
  7     6 /****^  HISTORY COMMENTS:
  7     7*  1) change(86-06-24,DGHowe), approve(86-06-24,MCR7396),
  7     8*     audit(86-08-05,Schroth), install(86-11-03,MR12.0-1206):
  7     9*     added the heap_header_ptr definition.
  7    10*  2) change(86-08-12,Kissel), approve(86-08-12,MCR7473),
  7    11*     audit(86-10-10,Fawcett), install(86-11-03,MR12.0-1206):
  7    12*     Modified to support control point management.  These changes were actually
  7    13*     made in February 1985 by G. Palter.
  7    14*  3) change(86-10-22,Fawcett), approve(86-10-22,MCR7473),
  7    15*     audit(86-10-22,Farley), install(86-11-03,MR12.0-1206):
  7    16*     Remove the old_lot pointer and replace it with cpm_data_ptr. Use the 18
  7    17*     bit pad after cur_lot_size for the cpm_enabled. This was done to save some
  7    18*     space int the stack header and change the cpd_ptr unal to cpm_data_ptr
  7    19*     (ITS pair).
  7    20*                                                   END HISTORY COMMENTS */
  7    21 
  7    22 /* format: style2 */
  7    23 
  7    24      dcl	   sb		      ptr;		/* the  main pointer to the stack header */
  7    25 
  7    26      dcl	   1 stack_header	      based (sb) aligned,
  7    27 	     2 pad1	      (4) fixed bin,	/*  (0) also used as arg list by outward_call_handler  */
  7    28 	     2 cpm_data_ptr	      ptr,		/*  (4)  pointer to control point which owns this stack */
  7    29 	     2 combined_stat_ptr  ptr,		/*  (6)  pointer to area containing separate static */
  7    30 	     2 clr_ptr	      ptr,		/*  (8)  pointer to area containing linkage sections */
  7    31 	     2 max_lot_size	      fixed bin (17) unal,	/*  (10) DU  number of words allowed in lot */
  7    32 	     2 main_proc_invoked  fixed bin (11) unal,	/*  (10) DL  nonzero if main procedure invoked in run unit */
  7    33 	     2 have_static_vlas   bit (1) unal,		/*  (10) DL  "1"b if (very) large arrays are being used in static */
  7    34 	     2 pad4	      bit (2) unal,
  7    35 	     2 run_unit_depth     fixed bin (2) unal,	/*  (10) DL  number of active run units stacked */
  7    36 	     2 cur_lot_size	      fixed bin (17) unal,	/*  (11) DU  number of words (entries) in lot */
  7    37 	     2 cpm_enabled	      bit (18) unal,	/*  (11) DL  non-zero if control point management is enabled */
  7    38 	     2 system_free_ptr    ptr,		/*  (12)  pointer to system storage area */
  7    39 	     2 user_free_ptr      ptr,		/*  (14)  pointer to user storage area */
  7    40 	     2 null_ptr	      ptr,		/*  (16)  */
  7    41 	     2 stack_begin_ptr    ptr,		/*  (18)  pointer to first stack frame on the stack */
  7    42 	     2 stack_end_ptr      ptr,		/*  (20)  pointer to next useable stack frame */
  7    43 	     2 lot_ptr	      ptr,		/*  (22)  pointer to the lot for the current ring */
  7    44 	     2 signal_ptr	      ptr,		/*  (24)  pointer to signal procedure for current ring */
  7    45 	     2 bar_mode_sp	      ptr,		/*  (26)  value of sp before entering bar mode */
  7    46 	     2 pl1_operators_ptr  ptr,		/*  (28)  pointer to pl1_operators_$operator_table */
  7    47 	     2 call_op_ptr	      ptr,		/*  (30)  pointer to standard call operator */
  7    48 	     2 push_op_ptr	      ptr,		/*  (32)  pointer to standard push operator */
  7    49 	     2 return_op_ptr      ptr,		/*  (34)  pointer to standard return operator */
  7    50 	     2 return_no_pop_op_ptr
  7    51 			      ptr,		/*  (36)  pointer to standard return / no pop operator */
  7    52 	     2 entry_op_ptr	      ptr,		/*  (38)  pointer to standard entry operator */
  7    53 	     2 trans_op_tv_ptr    ptr,		/*  (40)  pointer to translator operator ptrs */
  7    54 	     2 isot_ptr	      ptr,		/*  (42)  pointer to ISOT */
  7    55 	     2 sct_ptr	      ptr,		/*  (44)  pointer to System Condition Table */
  7    56 	     2 unwinder_ptr	      ptr,		/*  (46)  pointer to unwinder for current ring */
  7    57 	     2 sys_link_info_ptr  ptr,		/*  (48)  pointer to *system link name table */
  7    58 	     2 rnt_ptr	      ptr,		/*  (50)  pointer to Reference Name Table */
  7    59 	     2 ect_ptr	      ptr,		/*  (52)  pointer to event channel table */
  7    60 	     2 assign_linkage_ptr ptr,		/*  (54)  pointer to storage for (obsolete) hcs_$assign_linkage */
  7    61 	     2 heap_header_ptr     ptr,		/*  (56)  pointer to the heap header for this ring */
  7    62 	     2 trace,
  7    63 	       3 frames,
  7    64 	         4 count	      fixed bin,		/*  (58)  number of trace frames */
  7    65 	         4 top_ptr	      ptr unal,		/*  (59)  pointer to last trace frame */
  7    66 	       3 in_trace	      bit (36) aligned,	/*  (60)  trace antirecursion flag */
  7    67 	     2 pad2	      bit (36),		/*  (61) */
  7    68                2 pad5	      pointer;		/*  (62)  pointer to future stuff */
  7    69 
  7    70 /*	The following offset refers to a table within the  pl1  operator table.  */
  7    71 
  7    72      dcl	   tv_offset	      fixed bin init (361) internal static;
  7    73 						/* (551) octal */
  7    74 
  7    75 
  7    76 /*	The following constants are offsets within this transfer vector table.  */
  7    77 
  7    78      dcl	   (
  7    79 	   call_offset	      fixed bin init (271),
  7    80 	   push_offset	      fixed bin init (272),
  7    81 	   return_offset	      fixed bin init (273),
  7    82 	   return_no_pop_offset   fixed bin init (274),
  7    83 	   entry_offset	      fixed bin init (275)
  7    84 	   )		      internal static;
  7    85 
  7    86 
  7    87 
  7    88 
  7    89 
  7    90 /*	The following declaration  is an overlay of the whole stack header.   Procedures which
  7    91*	move the whole stack header should use this overlay.
  7    92**/
  7    93 
  7    94      dcl	   stack_header_overlay   (size (stack_header)) fixed bin based (sb);
  7    95 
  7    96 
  7    97 
  7    98 /* 	END INCLUDE FILE ... stack_header.incl.pl1 */
      293 
      294 
      295 dcl (addr, addrel, baseno, baseptr, bit, collate, fixed, hbound, length, null, rtrim, substr) builtin;
      296 
      297      end gtss_drl_spawn_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/04/86  1034.2  gtss_drl_spawn_.pl1               >special_ldd>install>MR12.0-1206>gtss_drl_spawn_.pl1
282          1    09/09/83  1713.2  gtss_dfd_ext_.incl.pl1            >ldd>include>gtss_dfd_ext_.incl.pl1
284          2    12/11/84  1420.0  gtss_entry_dcls.incl.pl1          >ldd>include>gtss_entry_dcls.incl.pl1
286          3    09/09/83  1713.8  gtss_ext_.incl.pl1                >ldd>include>gtss_ext_.incl.pl1
288          4    09/09/83  1714.2  gtss_snumb_xref_.incl.pl1         >ldd>include>gtss_snumb_xref_.incl.pl1
290          5    09/09/83  1714.3  gtss_ust_ext_.incl.pl1            >ldd>include>gtss_ust_ext_.incl.pl1
292          6    12/15/83  1100.4  mc.incl.pl1                       >ldd>include>mc.incl.pl1
293          7    11/04/86  1324.3  stack_header.incl.pl1             >special_ldd>install>MR12.0-1206>stack_header.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
COMPLETE                               constant        fixed bin(17,0)          initial dcl 4-23 ref 120 124
INITIATED                              constant        fixed bin(17,0)          initial dcl 4-18 ref 147
L_filename                             based           fixed bin(18,0)          level 2 packed unsigned unaligned dcl 62 ref 108 111
L_snumb                                based           fixed bin(18,0)          level 2 packed unsigned unaligned dcl 52 ref 101 104
a                        24            based           bit(36)                  level 3 packed unaligned dcl 6-12 set ref 145 231
                                                                                  245 264
activity                  4            based           fixed bin(17,0)          array level 3 dcl 4-7 set ref 146*
addr                                                   builtin function         dcl 295 ref 96 105 105 108 111 145 231 231 245 249
                                                                                  261 261 264
addrel                                                 builtin function         dcl 295 ref 98 104 111 174
arg_list                               based           structure                level 1 dcl 52
arg_list_ptr                    000100 automatic       pointer                  dcl 51 set ref 98* 101 104
bar_mode_sp              32            based           pointer                  level 2 dcl 7-26 set ref 250 264*
bar_mode_stack_ptr              000156 automatic       pointer                  dcl 80 set ref 249 250* 264
baseno                                                 builtin function         dcl 295 ref 249
baseptr                                                builtin function         dcl 295 ref 249
bcd_snumb                              based           bit(36)                  unaligned dcl 67 ref 149
bit                                                    builtin function         dcl 295 ref 168
blk                             000216 automatic       fixed bin(17,0)          dcl 217 set ref 183* 184 184 184 186 188* 191
blk_size                  0(18)        based           fixed bin(18,0)          array level 3 packed unsigned unaligned dcl 219 set
                                                                                  ref 184 184 202* 202
block_rcw                 1            based           structure                array level 3 packed unaligned dcl 219
c                               000110 automatic       fixed bin(35,0)          dcl 73 set ref 114* 115 176* 178* 206* 207* 234*
                                                                                  254* 255* 261* 267
collate                                                builtin function         dcl 295 ref 253 257
cu_$cp                          000012 constant        entry                    external dcl 159 ref 261
d                               000212 automatic       pointer                  dcl 215 set ref 176* 178 200 202 203 204 206* 207*
entry_count               1            based           fixed bin(17,0)          level 2 dcl 4-7 set ref 119 124 143 143*
error_number                           parameter       fixed bin(17,0)          dcl 166 ref 165 168
file_size                       000206 automatic       fixed bin(17,0)          initial dcl 213 set ref 199* 200 206 213*
filename_ptr                    000106 automatic       pointer                  dcl 70 set ref 111* 114
fixed                                                  builtin function         dcl 295 ref 98 101 101 101 108 108 108 176 176 234
                                                                                  234
fn                              000111 automatic       fixed bin(24,0)          dcl 74 set ref 114* 132 174
gcos_direct_req                 000230 automatic       char(256)                unaligned dcl 278 set ref 231 257* 261 261 261 261
                                                                                  267*
gcos_req                               based           char(256)                unaligned dcl 276 set ref 241* 242* 242 246* 246
                                                                                  253* 253 254
gcos_req_ptr                    000226 automatic       pointer                  dcl 275 set ref 231* 234* 236 241 242 242 246 246
                                                                                  253 253 254* 254 255* 256*
given_filename                         based           char(8)                  unaligned dcl 71 set ref 114*
given_snumb                     000104 automatic       char(5)                  initial unaligned dcl 68 set ref 68* 105 105 120 144
                                                                                  176 234 241 257
gseg                            000112 automatic       pointer                  dcl 75 set ref 97* 98 104 111
gtss_abort_subsystem_           000026 constant        entry                    external dcl 2-15 ref 101 108 132 178 194 236 267
gtss_aft_$find                  000030 constant        entry                    external dcl 2-28 ref 114
gtss_bcd_ascii_$lc              000032 constant        entry                    external dcl 2-34 ref 105
gtss_dfd_ext_$disk_file_data    000024 external static structure                array level 1 dcl 1-6
gtss_disk                       000024 external static structure                array level 2 dcl 1-6
gtss_ext_$gtss_slave_area_seg   000034 external static pointer                  array dcl 3-20 ref 97
gtss_ext_$stack_level_          000036 external static fixed bin(17,0)          dcl 3-31 ref 97
gtss_get_user_state_            000010 constant        entry                    external dcl 157 ref 118
gtss_snumb_xref_                       based           structure                level 1 unaligned dcl 4-7
gtss_ust                        000040 external static structure                level 2 dcl 5-16
gtss_ust_ext_$ust               000040 external static structure                level 1 dcl 5-16
hbound                                                 builtin function         dcl 295 ref 126
hcs_$make_seg                   000014 constant        entry                    external dcl 160 ref 176 234
hcs_$set_bc_seg                 000016 constant        entry                    external dcl 161 ref 206 254
hcs_$terminate_noname           000020 constant        entry                    external dcl 162 ref 207 255
home_path                       000114 automatic       char(128)                unaligned dcl 76 set ref 129* 176* 234* 241 257
i                               000154 automatic       fixed bin(17,0)          dcl 77 set ref 119* 120 120* 124* 124* 126 143 143
                                                                                  144 145 146 147
ilc                       4            based           bit(18)                  level 2 packed unaligned dcl 6-56 ref 98 101 101 108
                                                                                  108
increment                              parameter       fixed bin(17,0)          dcl 17 set ref 9 88 95*
indicators               70     000024 external static structure                array level 3 dcl 1-6
jout_id                   3(09)        based           bit(12)                  array level 3 packed unaligned dcl 4-7 set ref 145*
jout_request                    000155 automatic       bit(1)                   unaligned dcl 78 set ref 83* 89* 242
length                                                 builtin function         dcl 295 ref 254 261 261
limit                    22(18) 000040 external static bit(18)                  level 4 packed unaligned dcl 5-16 ref 101 108
llsnb                   150     000040 external static bit(36)                  level 3 dcl 5-16 set ref 149*
local_a                                based           structure                level 1 packed unaligned dcl 56
local_q                                based           structure                level 1 packed unaligned dcl 62
lsize                    22     000040 external static structure                level 3 dcl 5-16
lsnub                     5     000040 external static bit(36)                  level 3 dcl 5-16 set ref 149*
mc                                     based           structure                level 1 dcl 6-12
mcp                             000162 automatic       pointer                  dcl 6-10 set ref 93* 96 101* 108 108* 111 132* 145
                                                                                  150 168 178* 194* 231 236* 245 264 267*
mcpp                                   parameter       pointer                  dcl 16 ref 9 88 93
msf                      70     000024 external static bit(1)                   array level 4 packed unaligned dcl 1-6 ref 132
null                                                   builtin function         dcl 295 ref 178 236 256
output_id                              based           bit(12)                  level 2 packed unaligned dcl 56 ref 145
prior_blk                       000217 automatic       fixed bin(17,0)          dcl 217 set ref 182* 188* 194 199 202 202 202 203
                                                                                  204
prior_recx                      000215 automatic       fixed bin(17,0)          dcl 216 set ref 182* 189* 202 203 204
q                        25            based           bit(36)                  level 3 packed unaligned dcl 6-12 set ref 108 111
                                                                                  150* 168*
rcw_bits                  1(18)        based           bit(18)                  array level 4 packed unaligned dcl 219 set ref 204*
rcw_size                  1            based           fixed bin(18,0)          array level 4 packed unsigned unaligned dcl 219 set
                                                                                  ref 184 186 191 202 203*
recx                            000214 automatic       fixed bin(17,0)          dcl 216 set ref 184* 184* 186 189* 191 191
regs                     20            based           structure                level 2 packed unaligned dcl 6-12
rtrim                                                  builtin function         dcl 295 ref 241 242 246 253 254 257 261 261
s                               000210 automatic       pointer                  dcl 214 set ref 174* 184 184 184 186 191 200 202 202
sb                              000166 automatic       pointer                  dcl 7-24 set ref 249* 250 264
scu                                    based           structure                level 1 dcl 6-56 in procedure "gtss_drl_spawn_"
scu                      30            based           bit(36)                  array level 2 in structure "mc" packed unaligned
                                                                                  dcl 6-12 in procedure "gtss_drl_spawn_" set ref 96
scup                            000164 automatic       pointer                  dcl 6-54 set ref 96* 98 101 101 108 108
single_segment_ptr       66     000024 external static pointer                  array level 3 dcl 1-6 ref 174
snumb                     2            based           char(5)                  array level 3 packed unaligned dcl 4-7 set ref 120
                                                                                  144*
snumb_entry               2            based           structure                array level 2 unaligned dcl 4-7 set ref 126
snumb_ptr                       000102 automatic       pointer                  dcl 66 set ref 104* 105* 149
source_block                           based           structure                array level 2 packed unaligned dcl 219
source_file                            based           structure                level 1 packed unaligned dcl 219 set ref 200* 200
stack_header                           based           structure                level 1 dcl 7-26
status                    5            based           fixed bin(17,0)          array level 3 dcl 4-7 set ref 120 124 147*
substr                                                 builtin function         dcl 295 ref 253 257
u_state_ptr                     000160 automatic       pointer                  dcl 4-6 set ref 118* 119 120 120 124 124 126 143 143
                                                                                  144 145 146 147
user_info_$homedir              000022 constant        entry                    external dcl 163 ref 129
wait_flag                 0(35)        based           bit(1)                   level 2 packed unaligned dcl 56 ref 231 245 264

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
EXECUTING                              internal static fixed bin(17,0)          initial dcl 4-19
OUTPUT_COMPLETE                        internal static fixed bin(17,0)          initial dcl 4-23
OUTPUT_WAITING                         internal static fixed bin(17,0)          initial dcl 4-22
READING_RMT                            internal static fixed bin(17,0)          initial dcl 4-18
TERMINATING                            internal static fixed bin(17,0)          initial dcl 4-21
WAIT_MEDIA                             internal static fixed bin(17,0)          initial dcl 4-20
abx                                    internal static fixed bin(17,0)          initial dcl 6-42
apx                                    internal static fixed bin(17,0)          initial dcl 6-42
bbx                                    internal static fixed bin(17,0)          initial dcl 6-42
bpx                                    internal static fixed bin(17,0)          initial dcl 6-42
call_offset                            internal static fixed bin(17,0)          initial dcl 7-78
com_err_                        000000 constant        entry                    external dcl 2-8
entry_offset                           internal static fixed bin(17,0)          initial dcl 7-78
gtss_CFP_abort_                 000000 constant        entry                    external dcl 2-9
gtss_CFP_break_                 000000 constant        entry                    external dcl 2-10
gtss_CFP_input_                 000000 constant        entry                    external dcl 2-11
gtss_CFP_output_                000000 constant        entry                    external dcl 2-12
gtss_abandon_CFP_               000000 constant        entry                    external dcl 2-13
gtss_abort_dump_                000000 constant        entry                    external dcl 2-14
gtss_abort_subsystem_$not_imp   000000 constant        entry                    external dcl 2-16
gtss_abs_$abs_equiv             000000 constant        entry                    external dcl 2-19
gtss_abs_$cpu_runout            000000 constant        entry                    external dcl 2-20
gtss_abs_$create_absin          000000 constant        entry                    external dcl 2-21
gtss_abs_$dabt_check            000000 constant        entry                    external dcl 2-22
gtss_abs_$get_drm               000000 constant        entry                    external dcl 2-24
gtss_abs_$get_id                000000 constant        entry                    external dcl 2-23
gtss_abs_login_banner_          000000 constant        entry                    external dcl 2-17
gtss_abs_logout_banner_         000000 constant        entry                    external dcl 2-18
gtss_adjust_size_               000000 constant        entry                    external dcl 2-25
gtss_aft_$add                   000000 constant        entry                    external dcl 2-26
gtss_aft_$delete                000000 constant        entry                    external dcl 2-27
gtss_aft_$initialize            000000 constant        entry                    external dcl 2-29
gtss_ascii_bcd_                 000000 constant        entry                    external dcl 2-30
gtss_attributes_mgr_$get        000000 constant        entry                    external dcl 2-31
gtss_attributes_mgr_$set        000000 constant        entry                    external dcl 2-32
gtss_bcd_ascii_                 000000 constant        entry                    external dcl 2-33
gtss_break_vector_              000000 constant        entry                    external dcl 2-35
gtss_break_vector_$drl_in_progress
                                000000 constant        entry                    external dcl 2-36
gtss_break_vector_$status       000000 constant        entry                    external dcl 2-37
gtss_build_                     000000 constant        entry                    external dcl 2-38
gtss_com_err_                   000000 constant        entry                    external dcl 2-39
gtss_derail_processor_          000000 constant        entry                    external dcl 2-40
gtss_derail_processor_$set      000000 constant        entry                    external dcl 2-41
gtss_dq_$catp                   000000 constant        entry                    external dcl 2-42
gtss_dq_$create                 000000 constant        entry                    external dcl 2-43
gtss_dq_$dibp                   000000 constant        entry                    external dcl 2-44
gtss_dq_$entries_info           000000 constant        entry                    external dcl 2-45
gtss_dq_$hdrp                   000000 constant        entry                    external dcl 2-46
gtss_dq_$mod_js                 000000 constant        entry                    external dcl 2-47
gtss_dq_$open_exc               000000 constant        entry                    external dcl 2-48
gtss_dq_$open_gen               000000 constant        entry                    external dcl 2-49
gtss_drl_abort_                 000000 constant        entry                    external dcl 2-50
gtss_drl_addmem_                000000 constant        entry                    external dcl 2-51
gtss_drl_callss_                000000 constant        entry                    external dcl 2-52
gtss_drl_corfil_                000000 constant        entry                    external dcl 2-53
gtss_drl_defil_                 000000 constant        entry                    external dcl 2-54
gtss_drl_defil_$subr            000000 constant        entry                    external dcl 2-55
gtss_drl_dio_                   000000 constant        entry                    external dcl 2-56
gtss_drl_drlimt_                000000 constant        entry                    external dcl 2-57
gtss_drl_drlsav_                000000 constant        entry                    external dcl 2-58
gtss_drl_filact_                000000 constant        entry                    external dcl 2-59
gtss_drl_filsp_                 000000 constant        entry                    external dcl 2-60
gtss_drl_grow_                  000000 constant        entry                    external dcl 2-61
gtss_drl_gwake_                 000000 constant        entry                    external dcl 2-62
gtss_drl_jsts_                  000000 constant        entry                    external dcl 2-63
gtss_drl_kin_                   000000 constant        entry                    external dcl 2-64
gtss_drl_kotnow_                000000 constant        entry                    external dcl 2-65
gtss_drl_kotnow_$gtss_drl_kout_ 000000 constant        entry                    external dcl 2-66
gtss_drl_koutn_                 000000 constant        entry                    external dcl 2-67
gtss_drl_morlnk_                000000 constant        entry                    external dcl 2-68
gtss_drl_msub_                  000000 constant        entry                    external dcl 2-69
gtss_drl_objtim_                000000 constant        entry                    external dcl 2-70
gtss_drl_part_                  000000 constant        entry                    external dcl 2-71
gtss_drl_pasaft_                000000 constant        entry                    external dcl 2-72
gtss_drl_pasdes_                000000 constant        entry                    external dcl 2-73
gtss_drl_pasust_                000000 constant        entry                    external dcl 2-74
gtss_drl_pdio_                  000000 constant        entry                    external dcl 2-75
gtss_drl_prgdes_                000000 constant        entry                    external dcl 2-76
gtss_drl_pseudo_                000000 constant        entry                    external dcl 2-77
gtss_drl_relmem_                000000 constant        entry                    external dcl 2-78
gtss_drl_restor_                000000 constant        entry                    external dcl 2-79
gtss_drl_retfil_                000000 constant        entry                    external dcl 2-80
gtss_drl_return_                000000 constant        entry                    external dcl 2-81
gtss_drl_rew_                   000000 constant        entry                    external dcl 2-82
gtss_drl_rstswh_                000000 constant        entry                    external dcl 2-83
gtss_drl_setlno_                000000 constant        entry                    external dcl 2-84
gtss_drl_setswh_                000000 constant        entry                    external dcl 2-85
gtss_drl_snumb_                 000000 constant        entry                    external dcl 2-86
gtss_drl_spawn_                 000000 constant        entry                    external dcl 2-87
gtss_drl_spawn_$gtss_drl_pasflr_
                                000000 constant        entry                    external dcl 2-88
gtss_drl_stoppt_                000000 constant        entry                    external dcl 2-89
gtss_drl_switch_                000000 constant        entry                    external dcl 2-90
gtss_drl_sysret_                000000 constant        entry                    external dcl 2-91
gtss_drl_t_cfio_                000000 constant        entry                    external dcl 2-92
gtss_drl_t_cmov_                000000 constant        entry                    external dcl 2-93
gtss_drl_t_err_                 000000 constant        entry                    external dcl 2-94
gtss_drl_t_goto_                000000 constant        entry                    external dcl 2-95
gtss_drl_t_linl_                000000 constant        entry                    external dcl 2-96
gtss_drl_t_rscc_                000000 constant        entry                    external dcl 2-97
gtss_drl_tapein_                000000 constant        entry                    external dcl 2-98
gtss_drl_task_                  000000 constant        entry                    external dcl 2-99
gtss_drl_termtp_                000000 constant        entry                    external dcl 2-100
gtss_drl_time_                  000000 constant        entry                    external dcl 2-101
gtss_drun_                      000000 constant        entry                    external dcl 2-102
gtss_dsd_lookup_                000000 constant        entry                    external dcl 2-103
gtss_dsd_process_               000000 constant        entry                    external dcl 2-104
gtss_edit_dsd_                  000000 constant        entry                    external dcl 2-105
gtss_expand_pathname_           000000 constant        entry                    external dcl 2-107
gtss_expand_pathname_$verify_umc
                                000000 constant        entry                    external dcl 2-108
gtss_ext_$CFP_bits                     external static structure                level 1 dcl 3-37
gtss_ext_$SYstarstar_file_no           external static fixed bin(24,0)          dcl 3-33
gtss_ext_$aem                          external static fixed bin(17,0)          dcl 3-8
gtss_ext_$aft                          external static structure                level 1 dcl 3-78
gtss_ext_$bad_drl_rtrn                 external static label variable           dcl 3-9
gtss_ext_$com_reg                      external static structure                level 1 dcl 3-45
gtss_ext_$db                           external static bit(1)                   array unaligned dcl 3-10
gtss_ext_$deferred_catalogs_ptr        external static pointer                  dcl 3-11
gtss_ext_$dispose_of_drl               external static label variable           dcl 3-12
gtss_ext_$drl_rtrn                     external static label variable           array dcl 3-13
gtss_ext_$drm_path                     external static char(168)                unaligned dcl 3-14
gtss_ext_$drun_jid                     external static char(5)                  unaligned dcl 3-15
gtss_ext_$event_channel                external static fixed bin(71,0)          dcl 3-16
gtss_ext_$fast_lib                     external static structure                level 1 dcl 3-98
gtss_ext_$finished                     external static label variable           dcl 3-17
gtss_ext_$flags                        external static structure                level 1 dcl 3-60
gtss_ext_$gdb_name                     external static char(8)                  unaligned dcl 3-18
gtss_ext_$get_line                     external static entry variable           dcl 3-19
gtss_ext_$hcs_work_area_ptr            external static pointer                  dcl 3-21
gtss_ext_$homedir                      external static char(64)                 unaligned dcl 3-22
gtss_ext_$last_k_was_out               external static bit(1)                   dcl 3-23
gtss_ext_$mcfc                         external static structure                level 1 dcl 3-109
gtss_ext_$pdir                         external static varying char(168)        dcl 3-24
gtss_ext_$popup_from_pi                external static label variable           dcl 3-25
gtss_ext_$ppt                          external static pointer                  dcl 3-94
gtss_ext_$process_type                 external static fixed bin(17,0)          dcl 3-26
gtss_ext_$put_chars                    external static entry variable           dcl 3-27
gtss_ext_$restart_from_pi              external static label variable           dcl 3-28
gtss_ext_$restart_seg_ptr              external static pointer                  dcl 3-29
gtss_ext_$sig_ptr                      external static pointer                  dcl 3-30
gtss_ext_$statistics                   external static structure                level 1 dcl 3-72
gtss_ext_$suspended_process            external static bit(1)                   unaligned dcl 3-32
gtss_ext_$user_id                      external static varying char(26)         dcl 3-34
gtss_ext_$work_area_ptr                external static pointer                  dcl 3-35
gtss_fault_processor_           000000 constant        entry                    external dcl 2-109
gtss_fault_processor_$timer_runout
                                000000 constant        entry                    external dcl 2-111
gtss_filact_error_status_       000000 constant        entry                    external dcl 2-112
gtss_filact_funct02_            000000 constant        entry                    external dcl 2-113
gtss_filact_funct03_            000000 constant        entry                    external dcl 2-114
gtss_filact_funct04_            000000 constant        entry                    external dcl 2-115
gtss_filact_funct05_            000000 constant        entry                    external dcl 2-116
gtss_filact_funct08_            000000 constant        entry                    external dcl 2-117
gtss_filact_funct10_            000000 constant        entry                    external dcl 2-118
gtss_filact_funct11_            000000 constant        entry                    external dcl 2-119
gtss_filact_funct14_            000000 constant        entry                    external dcl 2-120
gtss_filact_funct18_            000000 constant        entry                    external dcl 2-121
gtss_filact_funct19_            000000 constant        entry                    external dcl 2-122
gtss_filact_funct21_            000000 constant        entry                    external dcl 2-123
gtss_filact_funct22_            000000 constant        entry                    external dcl 2-124
gtss_find_cond_frame_           000000 constant        entry                    external dcl 2-110
gtss_interp_prim_               000000 constant        entry                    external dcl 2-126
gtss_interp_prim_$callss        000000 constant        entry                    external dcl 2-127
gtss_interp_prim_$sysret        000000 constant        entry                    external dcl 2-128
gtss_interp_prim_$t_goto        000000 constant        entry                    external dcl 2-129
gtss_ios_change_size_           000000 constant        entry                    external dcl 2-130
gtss_ios_close_                 000000 constant        entry                    external dcl 2-131
gtss_ios_exchange_names_        000000 constant        entry                    external dcl 2-132
gtss_ios_initialize_            000000 constant        entry                    external dcl 2-133
gtss_ios_io_                    000000 constant        entry                    external dcl 2-134
gtss_ios_open_                  000000 constant        entry                    external dcl 2-135
gtss_ios_position_              000000 constant        entry                    external dcl 2-136
gtss_mcfc_$close                000000 constant        entry                    external dcl 2-139
gtss_mcfc_$delete               000000 constant        entry                    external dcl 2-137
gtss_mcfc_$open                 000000 constant        entry                    external dcl 2-138
gtss_mcfc_empty                 000000 constant        entry                    external dcl 2-106
gtss_mcfc_init_                 000000 constant        entry                    external dcl 2-125
gtss_read_starCFP_              000000 constant        entry                    external dcl 2-140
gtss_read_starCFP_$last_os      000000 constant        entry                    external dcl 2-141
gtss_run_subsystem_             000000 constant        entry                    external dcl 2-142
gtss_run_subsystem_$finish      000000 constant        entry                    external dcl 2-143
gtss_run_subsystem_$restor      000000 constant        entry                    external dcl 2-144
gtss_run_subsystem_$restor_perm 000000 constant        entry                    external dcl 2-145
gtss_set_slave_                 000000 constant        entry                    external dcl 2-146
gtss_set_slave_$load_bar        000000 constant        entry                    external dcl 2-147
gtss_update_safe_store_         000000 constant        entry                    external dcl 2-148
gtss_verify_access_             000000 constant        entry                    external dcl 2-149
gtss_verify_access_$check_forced_access
                                000000 constant        entry                    external dcl 2-150
gtss_write_starCFP_             000000 constant        entry                    external dcl 2-151
lbx                                    internal static fixed bin(17,0)          initial dcl 6-42
lpx                                    internal static fixed bin(17,0)          initial dcl 6-42
push_offset                            internal static fixed bin(17,0)          initial dcl 7-78
return_no_pop_offset                   internal static fixed bin(17,0)          initial dcl 7-78
return_offset                          internal static fixed bin(17,0)          initial dcl 7-78
sbx                                    internal static fixed bin(17,0)          initial dcl 6-42
scux                                   based           structure                level 1 dcl 6-207
spx                                    internal static fixed bin(17,0)          initial dcl 6-42
stack_header_overlay                   based           fixed bin(17,0)          array dcl 7-94
tv_offset                              internal static fixed bin(17,0)          initial dcl 7-72

NAMES DECLARED BY EXPLICIT CONTEXT.
common                          000266 constant        label                    dcl 93 ref 84
copy_single_segment             000746 constant        entry                    internal dcl 172 ref 136
exit_drl_spawn                  000734 constant        label                    dcl 152 ref 169
found_eof_rec                   001207 constant        label                    dcl 194 ref 186
gtss_drl_pasflr_                000256 constant        entry                    external dcl 88
gtss_drl_spawn_                 000244 constant        entry                    external dcl 9
make_gcos_request               001362 constant        entry                    internal dcl 229 ref 140
spawn_error                     000735 constant        entry                    internal dcl 165 ref 115 120 126

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      2366        2430    2157        2376
Length      2770    2157        42         323     207           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gtss_drl_spawn_                     394 external procedure  is an external procedure.  
spawn_error                             internal procedure  shares stack frame of external procedure gtss_drl_spawn_.  
copy_single_segment                     internal procedure  shares stack frame of external procedure gtss_drl_spawn_.  
make_gcos_request                       internal procedure  shares stack frame of external procedure gtss_drl_spawn_.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gtss_drl_spawn_          000100 arg_list_ptr                gtss_drl_spawn_
                         000102 snumb_ptr                   gtss_drl_spawn_
                         000104 given_snumb                 gtss_drl_spawn_
                         000106 filename_ptr                gtss_drl_spawn_
                         000110 c                           gtss_drl_spawn_
                         000111 fn                          gtss_drl_spawn_
                         000112 gseg                        gtss_drl_spawn_
                         000114 home_path                   gtss_drl_spawn_
                         000154 i                           gtss_drl_spawn_
                         000155 jout_request                gtss_drl_spawn_
                         000156 bar_mode_stack_ptr          gtss_drl_spawn_
                         000160 u_state_ptr                 gtss_drl_spawn_
                         000162 mcp                         gtss_drl_spawn_
                         000164 scup                        gtss_drl_spawn_
                         000166 sb                          gtss_drl_spawn_
                         000206 file_size                   copy_single_segment
                         000210 s                           copy_single_segment
                         000212 d                           copy_single_segment
                         000214 recx                        copy_single_segment
                         000215 prior_recx                  copy_single_segment
                         000216 blk                         copy_single_segment
                         000217 prior_blk                   copy_single_segment
                         000226 gcos_req_ptr                make_gcos_request
                         000230 gcos_direct_req             make_gcos_request

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_char_temp     cat_realloc_chars   call_ext_out_desc   call_ext_out        return_mac          shorten_stack
ext_entry           real_to_real_truncate_

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cu_$cp                        gtss_abort_subsystem_         gtss_aft_$find                gtss_bcd_ascii_$lc
gtss_get_user_state_          hcs_$make_seg                 hcs_$set_bc_seg               hcs_$terminate_noname
user_info_$homedir

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
gtss_dfd_ext_$disk_file_data  gtss_ext_$gtss_slave_area_seg gtss_ext_$stack_level_        gtss_ust_ext_$ust




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     68 000234         9 000240        83 000252        84 000253        88 000254        89 000264        93 000266
     95 000272        96 000274        97 000276        98 000304       101 000314       104 000371       105 000376
    108 000415       111 000476       114 000504       115 000516       118 000525       119 000534       120 000545
    122 000565       124 000567       125 000604       126 000606       129 000615       132 000626       136 000674
    140 000675       143 000676       144 000703       145 000711       146 000717       147 000720       149 000722
    150 000733       152 000734       165 000735       168 000737       169 000745       172 000746       213 000747
    174 000772       176 001001       178 001045       182 001114       183 001116       184 001120       186 001161
    188 001175       189 001177       191 001201       192 001205       194 001207       199 001250       200 001252
    202 001261       203 001317       204 001323       206 001331       207 001350       209 001361       229 001362
    231 001363       234 001372       236 001437       241 001502       242 001562       245 001613       246 001620
    249 001646       250 001655       251 001657       253 001660       254 001706       255 001735       256 001746
    257 001750       259 002037       261 002040       264 002067       267 002076       271 002143


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
