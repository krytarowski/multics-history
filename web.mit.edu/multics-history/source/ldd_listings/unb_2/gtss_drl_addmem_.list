	COMPILATION LISTING OF SEGMENT gtss_drl_addmem_
	Compiled by: Multics PL/I Compiler, Release 33e, of October 6, 1992
	Compiled at: CGI                             
	Compiled on: 2000-04-18_1120.97_Tue_mdt
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   *                                                         *
        4*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        5*   *                                                         *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 /* *************************************************************
       10*   *						   *
       11*   * Copyright (c) 1979 by Honeywell Information Systems, Inc. *
       12*   *						   *
       13*   ************************************************************* */
       14 
       15 gtss_drl_addmem_: proc (mcpp, increment);
       16 
       17 /**	gtss add memory.
       18*
       19*   Authors: Robert J. Grimes	Created
       20*   -	  Albert N. Kepner	  1978
       21*   -	  Robert M. May
       22*   -	  David B. Ward
       23*   Change:  Dave Ward	02/24/79 $db switch.
       24*   Change:  Ron Barstad  02/07/83  Remove changing gtss_spa.lhole.total--the
       25*                                   real drl does not do this. Will allow B
       26*                                   program to run.
       27*   **/
       28 dcl  mcpp                     ptr parm;
       29 dcl  increment                fixed bin parm;
       30 	mcp = mcpp;
       31 
       32 /**
       33*
       34*   DRL ADDMEM, ADD MEMORY (octal 16)
       35*
       36*
       37*   8_________1_6_____________________
       38*
       39*   DRL      ADDMEM
       40*   C(A)     return location,0
       41*   C(Q)     0,number words high
       42*
       43*   (See TSS SYSTEM PROGRAMMER'S
       44*   REFERENCE MANUAL DD17C, Rev. 0, July 1976
       45*   Page 3-08)
       46*
       47**/
       48 
       49 	increment = 0 ;				/* Zero arguments */
       50 	scup = addr (mc.scu);
       51 	gseg = gtss_ext_$gtss_slave_area_seg (gtss_ext_$stack_level_);
       52 
       53 	if (AU > gtss_ust.lsize.limit) /* remove? | (fixed (AU, 18) < 100) | (AL ^= "0"b) */ then do;
       54 	     if db_drl_addmem then
       55 		call ioa_ (
       56 		"gtss_drl_addmem_"
       57 		, "Improper return address: AU=^6o AL=^6o lisize.limit=^6o"
       58 		, AU
       59 		, AL
       60 		, gtss_ust.lsize.limit
       61 		);
       62 
       63 /* Improper return address. */
       64 	     call gtss_abort_subsystem_ (
       65 		mcp
       66 		, "gtss_drl_addmem_"
       67 		, 4
       68 		, gtss_pnterr.err4
       69 		, fixed (scu.ilc, 18)
       70 		);
       71 	     return;
       72 	end;
       73 
       74 	nl = divide (fixed (QL, 18, 0), 1024, 24)*1024;	/* Number of additional memory words requested. */
       75 	ZERO_l = nl*36;				/* Number of bits to zero. */
       76 	ml = fixed (gtss_ust.lsize.limit, 18, 0) + nl;	/* set up the new limit */
       77 
       78 	if ml > gtss_install_values_$memory_limit then do;
       79 
       80 /* Exceeds installation limit. */
       81 	     call gtss_abort_subsystem_ (
       82 		mcp
       83 		, "gtss_drl_addmem_"
       84 		, 0
       85 		, gtss_pnterr.err100
       86 		, fixed (scu.ilc, 18)
       87 		);
       88 	     return;
       89 	end;
       90 	addrel (gseg, gtss_ust.lsize.limit) -> ZERO = "0"b;
       91 	gtss_ust.lswap.size, gtss_ust.lsize.limit = ml_r18; /* Save new limit in ust */
       92 /*	gtss_spa.lhole.total = ml;	NO! */		/* Save new limit in slave prefix */
       93 
       94 	gtss_ust.lsize.bar = divide (ml+511, 512, 17, 0);
       95 	call gtss_set_slave_$load_bar (fixed (gtss_ust.lsize.bar, 18, 0)); /* Reset BAR register. */
       96 
       97 	gtss_spa.losti.ilc = AU;			/* set up the return address in the slave area */
       98 	gtss_spa.losti.ir = "0"b;			/* zero the indicators */
       99 
      100 	increment = fixed (AU, 18, 0) - fixed (scu.ilc, 18, 0) -1; /* Restart execution of user's code at return location. */
      101 
      102 	if db_drl_addmem then
      103 	     call ioa_ (
      104 	     "gtss_drl_addmem_:  words added ^i, limit ^i, A-reg ^w, Q-reg ^w."
      105 	     , nl
      106 	     , ml
      107 	     , Afix
      108 	     , Qfix);
      109 	return;
      110 
      111 
      112 /**  Variables for gtss_drl_addmem_:
      113*     IDENTIFIER		ATTRIBUTES	**/
      114 dcl  Afix                     fixed bin (35)aligned based (addr (A_reg));
      115 dcl  Qfix                     fixed bin (35)aligned based (addr (Q_reg));
      116 dcl  ioa_                     entry options (variable);
      117 dcl  ZERO                     bit (ZERO_l)based;
      118 dcl  ZERO_l                   fixed bin (24);
      119 dcl  nl                       fixed bin (35);
      120 dcl  ml                       fixed bin (35);
      121 dcl  gseg                     ptr init(null());
      122 dcl  status                   fixed bin (35);
      123 
      124 dcl 1 ml_overlay aligned based (addr (ml)),
      125     2 ml_l18 bit (18)unal,
      126     2 ml_r18 bit (18)unal;
      127 
      128 dcl 1 Q_reg aligned based (addr (mc.regs.q)),
      129     2 QU bit (18)unal,
      130     2 QL bit (18)unal;
      131 
      132 dcl 1 A_reg aligned based (addr (mc.regs.a)),
      133     2 AU bit (18)unal,
      134     2 AL bit (18)unal;
      135 
  1     1 /* BEGIN INCLUDE FILE gtss_spa.incl.pl1 */
  1     2 /*
  1     3*  Created: (Grimes SMP)  04/15/78
  1     4*   Changed	6/22/78	A. Kepner		add labrt
  1     5*   Changed	6/28/78	D. Ward		lwrap defined (lrap)
  1     6*   Changed	10/16/79  Al Dupuis		lsztm was off by two words.
  1     7*   Changed          84-02-27  Ron Barstad         added hex ir bit
  1     8*   */
  1     9 dcl 1 gtss_spa aligned based (gseg),
  1    10       3 fault_vector (0:9) bit(36),
  1    11       3 lhstr char (8) unal,
  1    12       3 lbrk,
  1    13         4 ic	bit(18) unal,
  1    14         4 ir	bit(18) unal,
  1    15         4 tra_addr	bit(18) unal,
  1    16         4 tra_op	bit(18) unal,
  1    17       3 fill1 (0:1) bit(36),
  1    18       3 lsztm,
  1    19         4 ic_ir,
  1    20 	5 IC	bit(18)unal,
  1    21 	5 IR	bit(16)unal,
  1    22 	5 b34	bit(1)unal,
  1    23 	5 b35	bit(1)unal,
  1    24         4 tra	bit(36)unal,
  1    25       3 losti unal,
  1    26         4 ilc	bit(18) unal,
  1    27         4 ir unal,				/* INDICATOR  REGISTERS */
  1    28 	5 zero	bit(1) unal,			/* zero indicator */
  1    29 	5 neg	bit(1) unal,			/* negative indicator */
  1    30 	5 carry	bit(1) unal,			/* carryry indicator */
  1    31 	5 ovfl	bit(1) unal,			/* overflow indicator */
  1    32 	5 eovf	bit(1) unal,			/* eponent overflow */
  1    33 	5 eufl	bit(1) unal,			/* exponent underflow */
  1    34 	5 oflm	bit(1) unal,			/* overflow mask */
  1    35 	5 tro	bit(1) unal,			/* tally runout */
  1    36 	5 par	bit(1) unal,			/* parity error */
  1    37 	5 parm	bit(1) unal,			/* parity mask */
  1    38 	5 bm	bit(1) unal,			/* ^bar mode */
  1    39 	5 tru	bit(1) unal,			/* truncation mode */
  1    40 	5 mif	bit(1) unal,			/* multi-word instruction mode */
  1    41 	5 abs	bit(1) unal,			/* absolute mode */
  1    42           5 hex     bit(1) unal,                            /* hexadecimalexponent mode */
  1    43 	5 pad	bit(3) unal,
  1    44       3 lnam	bit(36),			/* Library name (bcd). */
  1    45       3 labrt,
  1    46         4 b0_17	bit(18) unal,
  1    47         4 b18_35 fixed bin (17) unal,
  1    48       3 fill2	bit(36),
  1    49       3 lfig	bit(36),
  1    50       3 lwrap,
  1    51 	5 b0_17	bit(1) unal,
  1    52 	5 b18	bit(1) unal,
  1    53 	5 b19	bit(1) unal,
  1    54 	5 b20	bit(1) unal,
  1    55 	5 b21	bit(1) unal,
  1    56 	5 b22	bit(1) unal,
  1    57 	5 b23	bit(1) unal,
  1    58 	5 b24	bit(1) unal,
  1    59 	5 b25	bit(1) unal,
  1    60 	5 b26	bit(1) unal,
  1    61 	5 b27	bit(1) unal,
  1    62 	5 b28	bit(1) unal,
  1    63 	5 b29	bit(1) unal,
  1    64 	5 b30	bit(1) unal,
  1    65 	5 b31	bit(1) unal,
  1    66 	5 b32	bit(1) unal,
  1    67 	5 b33	bit(1) unal,
  1    68 	5 b34	bit(1) unal,
  1    69 	5 b35	bit(1) unal,
  1    70       3 lsid	bit(36),
  1    71       3 lftst	bit(36),
  1    72       3 lpcal (0:3) bit(36),
  1    73       3 lpcnt fixed bin (35) unal,
  1    74       3 lhole,
  1    75         4 high fixed bin (17) unal,
  1    76         4 total fixed bin (17) unal,
  1    77       3 lostr unal,
  1    78         4 regs unal,				/* registers */
  1    79 	5 x (0:7) bit(18) unal,			/* index registers */
  1    80 	5 a	bit(36),			/* accumulator */
  1    81 	5 q	bit(36),			/* q-register */
  1    82 	5 e	bit(8) unal,			/* exponent */
  1    83 	5 pad1	bit(28) unal,
  1    84 	5 t	bit(27) unal,			/* timer register */
  1    85 	5 pad2	bit(6) unal,
  1    86 	5 ralr	bit(3) unal,			/* ring alarm register */
  1    87       3 leisa	(0:7) bit(36),
  1    88       3 leisp	(0:7) bit(36),
  1    89       3 fill3	(0:35) bit(36);
  1    90 
  1    91 /*   END INCLUDE FILE gtss_spa.incl.pl1 */
      136 
      137 
  2     1 /* BEGIN INCLUDE FILE gtss_ust_ext_.incl.pl1 */
  2     2 /* UST: User Status Table 
  2     3*   definitions based on 
  2     4*   System Tables, Order number DD14-01E, January 1981
  2     5*   Section 15, Time Sharing System
  2     6*
  2     7*   Authors: Robert J. Grimes	Created
  2     8*   -	  Albert N. Kepner	  1978
  2     9*   -	  Robert M. May
  2    10*   -	  David B. Ward
  2    11*   Change:  Dave Ward	02/23/79 Level 4 numbering.
  2    12*   Change:  Ron Barstad  83-07-12 Repaired damaged formating and word offset comments
  2    13*                                  Brought up to 4JS3 functionality
  2    14**/
  2    15 /* octal word offsets of entries */
  2    16 dcl 1 gtss_ust_ext_$ust aligned ext,
  2    17       3 gtss_ust,
  2    18 /* 0-1  */	4 lid		bit (72),
  2    19 /* 2    */	4 lstp		bit (36),
  2    20 /* 3    */	4 ltin		bit (36),
  2    21 /* 4    */	4 lstio,
  2    22 			5 no_of_chars_by_8  fixed bin (18) uns unal,
  2    23 			5 no_of_disk_io     fixed bin (18) uns unal,
  2    24 /* 5    */	4 lsnub		bit (36),
  2    25 /* 6-7  */	4 lchg		bit (72),
  2    26 /* 10   */	4 lbuf,
  2    27 			5 address		bit (18)unaligned,
  2    28 			5 tally		bit (1)unaligned,
  2    29 			5 terminal_type	bit (5)unaligned,
  2    30 			5 station_id	bit (12)unaligned,
  2    31 /* 11-12 */	4 liost (0:1)	bit (36),
  2    32 /* 13   */	4 lcc		bit (36),
  2    33 /* 14   */	4 lback,
  2    34 			5 fill1		bit (18) unaligned,
  2    35 			5 gwake		fixed bin (17) unaligned,
  2    36 /* 15   */	4 lflag,
  2    37 			5 mp_list		bit (18) unaligned,
  2    38 			5 flags unaligned,
  2    39 				6 b18		bit (1) unaligned,
  2    40 				6 b19		bit (1) unaligned,
  2    41 				6 b20		bit (1) unaligned,
  2    42 				6 b21		bit (1) unaligned,
  2    43 				6 b22		bit (1) unaligned,
  2    44 				6 b23		bit (1) unaligned,
  2    45 				6 b24		bit (1) unaligned,
  2    46 				6 b25		bit (1) unaligned,
  2    47 				6 b26		bit (1) unaligned,
  2    48 				6 b27		bit (1) unaligned,
  2    49 				6 b28		bit (1) unaligned,
  2    50 				6 b29		bit (1) unaligned,
  2    51 				6 b30		bit (1) unaligned,
  2    52 				6 b31		bit (1) unaligned,
  2    53 				6 b32		bit (1) unaligned,
  2    54 				6 b33		bit (1) unaligned,
  2    55 				6 b34		bit (1) unaligned,
  2    56 				6 b35		bit (1) unaligned,
  2    57 /* 16   */	4 lkdss		bit (36),
  2    58 /* 17   */	4 lfile,
  2    59 			5 program_stack	fixed bin (17) unal,
  2    60 			5 file_list_ptr	bit (18) unal,
  2    61 /* 20   */	4 lttys		bit (36),
  2    62 /* 21   */	4 lswth,
  2    63 			5 b0		bit (1) unaligned,
  2    64 			5 b1		bit (1) unaligned,
  2    65 			5 b2		bit (1) unaligned,
  2    66 			5 b3		bit (1) unaligned,
  2    67 			5 b4		bit (1) unaligned,
  2    68 			5 b5		bit (1) unaligned,
  2    69 			5 b6		bit (1) unaligned,
  2    70 			5 b7		bit (1) unaligned,
  2    71 			5 b8		bit (1) unaligned,
  2    72 			5 b9		bit (1) unaligned,
  2    73 			5 b10		bit (1) unaligned,
  2    74 			5 b11		bit (1) unaligned,
  2    75 			5 b12		bit (1) unaligned,
  2    76 			5 b13		bit (1) unaligned,
  2    77 			5 b14		bit (1) unaligned,
  2    78 			5 b15		bit (1) unaligned,
  2    79 			5 b16		bit (1) unaligned,
  2    80 			5 b17		bit (1) unaligned,
  2    81 			5 b18		bit (1) unaligned,
  2    82 			5 b19		bit (1) unaligned,
  2    83 			5 b20		bit (1) unaligned,
  2    84 			5 b21		bit (1) unaligned,
  2    85 			5 b22		bit (1) unaligned,
  2    86 			5 b23		bit (1) unaligned,
  2    87 			5 b24		bit (1) unaligned,
  2    88 			5 b25		bit (1) unaligned,
  2    89 			5 b26		bit (1) unaligned,
  2    90 			5 b27		bit (1) unaligned,
  2    91 			5 b28		bit (1) unaligned,
  2    92 			5 b29		bit (1) unaligned,
  2    93 			5 b30		bit (1) unaligned,
  2    94 			5 b31		bit (1) unaligned,
  2    95 			5 b32		bit (1) unaligned,
  2    96 			5 b33		bit (1) unaligned,
  2    97 			5 b34		bit (1) unaligned,
  2    98 			5 b35		bit (1) unaligned,
  2    99 /* 22   */	4 lsize,
  2   100 			5 bar		fixed bin (17) unaligned,
  2   101 			5 limit		bit (18) unaligned,
  2   102 /* 23... */	4 lswap,
  2   103 			5 fill		bit (18) unal,
  2   104 			5 size		bit (18) unal,
  2   105 /* ...24 */	4 transfer_cell	bit (36) unal,
  2   106 /* 25   */	4 lerrm		bit (36),
  2   107 /* 26-37 */	4 lcfil (0:9)	bit (36),
  2   108 /* 40   */	4 lsybc,
  2   109 			5 b0_17		fixed bin (17) unaligned,
  2   110 			5 b18_35		fixed bin (17) unaligned,
  2   111 /* 41-42 */	4 lstem (0:1)	bit (36),
  2   112 /* 43    */	4 lcals,
  2   113 			5 b0_17		fixed bin (17) unaligned,
  2   114 			5 b18_35		bit (18) unaligned,
  2   115 /* 44-51 */	4 subsystems (3),
  2   116 			5 content_lswap,
  2   117 				6 fill		bit (18) unal,
  2   118 				6 size		bit (18) unal,
  2   119 			5 tally_address	fixed bin (17) unaligned,
  2   120 			5 ss_flags	bit (18) unaligned,
  2   121 /* 52   */	4 ltalc,
  2   122 			5 tod		fixed bin (17) unaligned,
  2   123 			5 startup		fixed bin (17) unaligned,
  2   124 /* 53   */	4 lspts		fixed bin (35),
  2   125 /* 54   */	4 lflg2,
  2   126 			5 b0		bit (1) unaligned,
  2   127 			5 b1		bit (1) unaligned,
  2   128 			5 b2		bit (1) unaligned,
  2   129 			5 b3		bit (1) unaligned,
  2   130 			5 b4		bit (1) unaligned,
  2   131 			5 b5		bit (1) unaligned,
  2   132 			5 b6		bit (1) unaligned,
  2   133 			5 b7		bit (1) unaligned,
  2   134 			5 b8		bit (1) unaligned,
  2   135 			5 b9		bit (1) unaligned,
  2   136 			5 b10		bit (1) unaligned,
  2   137 			5 b11		bit (1) unaligned,
  2   138 			5 b12		bit (1) unaligned,
  2   139 			5 b13		bit (1) unaligned,
  2   140 			5 b14		bit (1) unaligned,
  2   141 			5 b15		bit (1) unaligned,
  2   142 			5 b16		bit (1) unaligned,
  2   143 			5 b17		bit (1) unaligned,
  2   144 			5 b18		bit (1) unaligned,
  2   145 			5 b19		bit (1) unaligned,
  2   146 			5 b20		bit (1) unaligned,
  2   147 			5 b21		bit (1) unaligned,
  2   148 			5 b22		bit (1) unaligned,
  2   149 			5 b23		bit (1) unaligned,
  2   150 			5 b24		bit (1) unaligned,
  2   151 			5 b25		bit (1) unaligned,
  2   152 			5 b26		bit (1) unaligned,
  2   153 			5 b27		bit (1) unaligned,
  2   154 			5 b28		bit (1) unaligned,
  2   155 			5 b29		bit (1) unaligned,
  2   156 			5 b30		bit (1) unaligned,
  2   157 			5 b31		bit (1) unaligned,
  2   158 			5 b32		bit (1) unaligned,
  2   159 			5 b33		bit (1) unaligned,
  2   160 			5 b34		bit (1) unaligned,
  2   161 			5 b35		bit (1) unaligned,
  2   162 /* 55-60 */	4 lsftm (0:3)	bit (36),
  2   163 /* 61    */	4 lsprt		fixed bin (35),
  2   164 /* 62    */	4 ltrm		bit (36),
  2   165 /* 63    */	4 linno		fixed bin (35),
  2   166 /* 64    */	4 lincr		fixed bin (35),
  2   167 /* 65    */	4 ltdes		bit (36),
  2   168 /* 66    */	4 lbptr		bit (36),
  2   169 /* 67    */	4 lpptr,
  2   170 			5 last_file_pat_ptr	bin (18) uns unal,
  2   171 			5 lpptr_reserved	bin (18) uns unal,
  2   172 /* 70    */	4 lsclp		bit (36),
  2   173 /* 71    */	4 limit		fixed bin (35),
  2   174 /* 72    */	4 lacpt,
  2   175 			5 jout_pat_offset	bit (18) unal,
  2   176 			5 permissions unal,
  2   177 				6 lodx		bit (1) unal,
  2   178 				6 cardin		bit (1) unal,
  2   179 				6 talk		bit (1) unal,
  2   180 				6 lods		bit (1) unal,
  2   181 			5 cardin_urgency	bit (14) unal,
  2   182 /* 73    */	4 ldrl,
  2   183 			5 ilc		bit (18) unaligned,
  2   184 			5 code		fixed bin (17) unaligned,
  2   185 /* 74    */	4 ljsnb		bit (36),
  2   186 /* 75    */	4 ltm0		bit (36),
  2   187 /* 76    */	4 ltm1		bit (36),
  2   188 /* 77    */	4 ltm2		bit (36),
  2   189 /* 100   */	4 ltm3		bit (36),
  2   190 /* 101   */	4 ltm4		bit (36),
  2   191 /* 102   */	4 ltm5		bit (36),
  2   192 /* 103   */	4 ltmwt		bit (36),
  2   193 /* 104   */	4 ltmrs		bit (36),
  2   194 /* 105   */	4 ltc0		bit (36),
  2   195 /* 106   */	4 ltc1		bit (36),
  2   196 /* 107   */	4 ltc2		bit (36),
  2   197 /* 110   */	4 lct3		bit (36),
  2   198 /* 111   */	4 ltc4		bit (36),
  2   199 /* 112   */	4 ltc5		bit (36),
  2   200 /* 113   */	4 ltcw		bit (36),
  2   201 /* 114   */	4 lkst		bit (36),
  2   202 /* 115   */	4 lkst2		bit (36),
  2   203 /* 116   */	4 lkcc		bit (36),
  2   204 /* 117   */	4 lkms		bit (36),
  2   205 /* 120-121 */	4 lksdc (0:1)	bit (36),
  2   206 /* 122   */	4 lkntp		bit (36),
  2   207 /* 123   */	4 lkrdc		bit (36),
  2   208 /* 124   */	4 lpqf		bit (36),
  2   209 /* 125   */	4 lpqb		bit (36),
  2   210 /* 126   */	4 lustl		bit (36),
  2   211 /* 127   */	4 ltemp		bit (36),
  2   212 /* 130   */	4 lrtll,
  2   213 			5 word_length	fixed bin unaligned,
  2   214 			5 char_length	fixed bin unaligned,
  2   215 /* 131   */	4 ltim		bit (36),
  2   216 /* 132   */	4 lcfio,
  2   217 			5 sect_out	fixed bin(18)unsigned unal,
  2   218 			5 sect_in		fixed bin(18)unsigned unal,
  2   219 /* 133   */	4 lcfst,
  2   220 			5 initial_sect_out	fixed bin(18)unsigned unal,
  2   221 			5 start_term	fixed bin(18)unsigned unal,
  2   222 /* 134   */	4 lcmpt		bit (36),
  2   223 /* 135   */	4 lcjid		bit (36),
  2   224 /* 136-137 */	4 lrcal (0:1)	bit (36),
  2   225 /* 140   */	4 lrdta		bit (36),
  2   226 /* 141   */	4 lrrsk		bit (36),
  2   227 /* 142   */	4 lrskd		bit (36),
  2   228 /* 143   */	4 lrcc		bit (36),
  2   229 /* 144-145 */	4 lrsts (0:1)	bit (36),
  2   230 /* 146   */	4 lrtm		bit (36),
  2   231 /* 147   */	4 lswt2,
  2   232 			5 b0		bit (1) unaligned,
  2   233 			5 b1		bit (1) unaligned,
  2   234 			5 b2		bit (1) unaligned,
  2   235 			5 b3		bit (1) unaligned,
  2   236 			5 b4		bit (1) unaligned,
  2   237 			5 b5		bit (1) unaligned,
  2   238 			5 b6		bit (1) unaligned,
  2   239 			5 b7		bit (1) unaligned,
  2   240 			5 b8		bit (1) unaligned,
  2   241 			5 b9		bit (1) unaligned,
  2   242 			5 b10		bit (1) unaligned,
  2   243 			5 b11		bit (1) unaligned,
  2   244 			5 b12		bit (1) unaligned,
  2   245 			5 b13		bit (1) unaligned,
  2   246 			5 b14		bit (1) unaligned,
  2   247 			5 b15		bit (1) unaligned,
  2   248 			5 b16		bit (1) unaligned,
  2   249 			5 b17		bit (1) unaligned,
  2   250 			5 b18		bit (1) unaligned,
  2   251 			5 b19		bit (1) unaligned,
  2   252 			5 b20		bit (1) unaligned,
  2   253 			5 b21		bit (1) unaligned,
  2   254 			5 b22		bit (1) unaligned,
  2   255 			5 b23		bit (1) unaligned,
  2   256 			5 b24		bit (1) unaligned,
  2   257 			5 b25		bit (1) unaligned,
  2   258 			5 b26		bit (1) unaligned,
  2   259 			5 b27		bit (1) unaligned,
  2   260 			5 b28		bit (1) unaligned,
  2   261 			5 b29		bit (1) unaligned,
  2   262 			5 b30		bit (1) unaligned,
  2   263 			5 b31		bit (1) unaligned,
  2   264 			5 b32		bit (1) unaligned,
  2   265 			5 b33		bit (1) unaligned,
  2   266 			5 b34		bit (1) unaligned,
  2   267 			5 b35		bit (1) unaligned,
  2   268 /* 150   */	4 llsnb		bit (36),
  2   269 /* 151   */	4 lesq		bit (36),
  2   270 /* 152-153 */	4 lumc (0:1)	bit (36),
  2   271 /* 154-155 */	4 lfnam (0:1)	bit (36),
  2   272 /* 156   */	4 lopts		bit (36),
  2   273 /* 157   */	4 licec,
  2   274 			5 b0_17		bit (18) unaligned,
  2   275 			5 b18_35		fixed bin (17) unaligned,
  2   276 /* 160   */	4 lflg3,
  2   277 			5 b0		bit (1) unaligned,
  2   278 			5 b1		bit (1) unaligned,
  2   279 			5 b2		bit (1) unaligned,
  2   280 			5 b3		bit (1) unaligned,
  2   281 			5 b4		bit (1) unaligned,
  2   282 			5 b5		bit (1) unaligned,
  2   283 			5 b6		bit (1) unaligned,
  2   284 			5 b7		bit (1) unaligned,
  2   285 			5 b8		bit (1) unaligned,
  2   286 			5 b9		bit (1) unaligned,
  2   287 			5 b10		bit (1) unaligned,
  2   288 			5 b11		bit (1) unaligned,
  2   289 			5 b12		bit (1) unaligned,
  2   290 			5 b13		bit (1) unaligned,
  2   291 			5 b14		bit (1) unaligned,
  2   292 			5 b15		bit (1) unaligned,
  2   293 			5 b16		bit (1) unaligned,
  2   294 			5 b17		bit (1) unaligned,
  2   295 			5 b18		bit (1) unaligned,
  2   296 			5 b19		bit (1) unaligned,
  2   297 			5 b20		bit (1) unaligned,
  2   298 			5 b21		bit (1) unaligned,
  2   299 			5 b22		bit (1) unaligned,
  2   300 			5 b23		bit (1) unaligned,
  2   301 			5 b24		bit (1) unaligned,
  2   302 			5 b25		bit (1) unaligned,
  2   303 			5 b26		bit (1) unaligned,
  2   304 			5 b27		bit (1) unaligned,
  2   305 			5 b28		bit (1) unaligned,
  2   306 			5 b29		bit (1) unaligned,
  2   307 			5 b30		bit (1) unaligned,
  2   308 			5 b31		bit (1) unaligned,
  2   309 			5 b32		bit (1) unaligned,
  2   310 			5 b33		bit (1) unaligned,
  2   311 			5 b34		bit (1) unaligned,
  2   312 			5 b35		bit (1) unaligned,
  2   313 /* 161-163 */	4 lpage (0:2)	bit (36),
  2   314 /* 164   */	4 lsit1		bit (36),
  2   315 /* 165   */	4 lsit2		bit (36),
  2   316 /* 166   */	4 lsit3		bit (36),
  2   317 /* 167   */	4 lsit4		bit (36),
  2   318 /* The following entries are maintained by gtss and are not found in TSS UST */
  2   319 /* 170   */	4 lxxx, /* program stack index, offset from gtss_ust */
  2   320 			5 b0_17		fixed bin (17) unaligned,
  2   321 			5 b18_35		bit (18) unaligned, /* not used */
  2   322 /* 171-175 */	4 lprgs (5),
  2   323 			5 b0_17		fixed bin (17) unaligned,
  2   324 			5 b18_35		fixed bin (17) unaligned,
  2   325 /* 176   */	4 fill	bit (36),
  2   326 /* 177   */	4 remote_io_buffer aligned,
  2   327 			5 buffer_control_word,
  2   328 				6 current_line_pointer  bit (18)unal,
  2   329 				6 buffer_threshold_address  bit (18)unal,
  2   330 			5 number_words_transmitted	fixed bin (17)unal,
  2   331 			5 FILL1			fixed bin (17)unal,
  2   332 			5 count_of_characters_transmitted fixed bin (17)unal,
  2   333 			5 FILL2			fixed bin (17)unal,
  2   334 			5 characters_transmitted (244) char (1) unal,
  2   335 /* 277   */	4 word_after_ust		bit (36) aligned;
  2   336 
  2   337 /*   END INCLUDE FILE gtss_ust_ext_.incl.pl1 */
      138 
      139 
  3     1 /* BEGIN INCLUDE FILE gtss_pnterr.incl.pl1 */
  3     2 /*
  3     3*  Created: (Grimes SMP)  04/15/78 0933.2 mst Sat 
  3     4*   Change: Dave Ward	06/08/78 made attributes constant.
  3     5*   Change: Dave Ward	08/17/81 made lengths same as constans.
  3     6*   Change: Ron Barstad  83-03-29  fixed err 53, add missing err 56
  3     7*   Change: Ron Barstad  84-02-27  changed back to all same length because of based array in gtss_abort_subsystem_
  3     8**/
  3     9 dcl 1 gtss_pnterr static int options (constant),
  3    10     2 err1   char(50) init("001-INCORRECT PRIMITIVE"),
  3    11     2 err2   char(50) init("002-(^6o)INVALID FILE I/O COMMAND"),
  3    12     2 err3   char(50) init("003-(^6o)INVALID DCW"),
  3    13     2 err4   char(50) init("004-(^6o)INVALID DRL ARGUMENT"),
  3    14     2 err5   char(50) init("005-(^6o)INVALID DRL CODE"),
  3    15     2 err6   char(50) init("006-LEVEL OF CONTROL TOO DEEP"),
  3    16     2 err7   char(50) init("007-BAP PROG. DESC."),
  3    17     2 err8   char(50) init("008-LOOP IN PRIMITIVES"),
  3    18     2 err9   char(50) init("009-SYSTEM UNKNOWN"),
  3    19     2 err10  char(50) init("010-PROGRAM TOO LARGE TO SWAP"),
  3    20     2 err11  char(50) init("011-(^6o)INCORRECT CORE FILE USAGE"),
  3    21     2 err12  char(50) init("012-(^6o)PRIVILEGED I/O ATTEMPTED"),
  3    22     2 err13  char(50) init("013-(^6o)DRL USERID NOT PERMITTED"),
  3    23     2 err14  char(50) init("(^6o)ILLEGAL DRL RELMEM REQUEST"),
  3    24     2 err15  char(50) init("015-(^6o)CANNOT RESET USER ID"),
  3    25     2 err16  char(50) init("016-(^6o)OVERFLOW FAULT"),
  3    26     2 err17  char(50) init("017-(^6o)ILLEGAL OP CODE"),
  3    27     2 err18  char(50) init("018-(^6o)MEMORY FAULT"),
  3    28     2 err19  char(50) init("019-(^6o)FAULT TAG FAULT"),
  3    29     2 err20  char(50) init("020-(^6o)DIVIDE CHECK FAULT"),
  3    30     2 err21  char(50) init("021-(^6o)BAD STATUS - SWAP OUT"),
  3    31     2 err22  char(50) init("022-(^6o)BAD STATUS - SWAP IN"),
  3    32     2 err23  char(50) init("023-(^6o)BAD STATUS - LOAD"),
  3    33     2 err24  char(50) init("(^6o)TALK PERMISSION NOT GRANTED"),
  3    34     2 err25  char(50) init("(^6o)WRITE ATTEMPTED ON READ-ONLY FILE - ^8a"),
  3    35     2 err26  char(50) init("(^6o)READ ATTEMPTED ON EXECUTE-ONLY FILE - ^8a"),
  3    36     2 err27  char(50) init("024-(^6o)MME FAULT"),
  3    37     2 err28  char(50) init("028-(^6o)REWIND ATTEMPTED FOR RANDOM FILE - ^8a"),
  3    38     2 err29  char(50) init("029-ILLEGAL SYSTEM SELECTION"),
  3    39     2 err30  char(50) init("134-(^6o)INVALID DRL FILACT FUNCTION #^i"),
  3    40     2 err31  char(50) init("135-(^6o)PRIVILEGED DRL FILACT REQUEST"),
  3    41     2 err32  char(50) init("138-(^6o)NO TAP* FILE FOR DRL TAPEIN"),
  3    42     2 err33  char(50) init("139-ERROR IN WRITING TAP* FILE"),
  3    43     2 err34  char(50) init("(^6o)DRL ABORT - CANNOT WRITE ABRT FILE"),
  3    44     2 err35  char(50) init("(^6o)DRL ABORT - ABRT FILE WRITTEN"),
  3    45     2 err36  char(50) init("NOT ENOUGH CORE TO RUN JOB"),
  3    46     2 err37  char(50) init("SORRY-OUT OF SWAP SPACE. TRY AGAIN."),
  3    47     2 err38  char(50) init("(^6o)FILE ADDRESS ERROR"),
  3    48     2 err39  char(50) init("(^6o)DRL ABORT - ABRT FILE I/O ERROR"),
  3    49     2 err40  char(50) init("(^6o)DRL ABORT - ABRT FILE TOO SMALL"),
  3    50     2 err41  char(50) init("(^6o)BAD STATUS FOR DRL SAVE/RESTOR - ^8a"),
  3    51     2 err42  char(50) init("(^6o)H* FILE NOT IN AFT - ^8a"),
  3    52     2 err43  char(50) init("064-EXECUTE TIME LIMIT EXCEEDED"),
  3    53     2 err44  char(50) init("025-(^6o)LOCKUP FAULT"),
  3    54     2 err45  char(50) init("065-OBJECT PROGRAM SIZE LIMIT EXCEEDED"),
  3    55     2 err46  char(50) init("(^6o)INCORRECT ENTRY TO DRL TASK"),
  3    56     2 err47  char(50) init("(^6o)H* PROGRAM NAME UNDEFINED - ^8a"),
  3    57     2 err48  char(50) init("(^6o)H* FILE CATALOG FULL - ^8a"),
  3    58     2 err49  char(50) init("(^6o)TALLY OR CHARACTER COUNT INCORRECT"),
  3    59     2 err50  char(50) init("(^6o)BAD DRL SAVE DATA LOC"),
  3    60     2 err51  char(50) init("(^6o)H* FILE NOT INITITALIZED - ^8a"),
  3    61     2 err52  char(50) init("(^6o)H* FILE MUST BE RANDOM - ^8a"),
  3    62     2 err53  char(50) init("026-(^6o)OP-NOT-COMPLETE FAULT"),
  3    63     2 err54  char(50) init("(^6o)H* FILE PROGRAM NAME REQUIRED - ^8a"),
  3    64     2 err55  char(50) init("027-(^6o)COMMAND FAULT"),
  3    65     2 err56  char(50) init("(^6o)LINKED FILE I/O CANNOT SPAN >63 LLINKS - ^8a"),
  3    66     2 err57  char(50) init("UNASSIGNED"),
  3    67     2 err58  char(50) init("(^6o)INVALID TIME FOR DRL GWAKE"),
  3    68     2 err59  char(50) init("UNASSIGNED"),
  3    69     2 err60  char(50) init("(^6o)INVALID SNUMB FOR DRL JOUT"),
  3    70     2 err61  char(50) init("(^6o)PRIVILEGED DRL"),
  3    71     2 err62  char(50) init("(^6o)INVALID DRL JOUT FUNCTION"),
  3    72     2 err63  char(50) init("MEMORY PARITY ERROR"),
  3    73     2 err64  char(50) init("SY** I/O ERROR"),
  3    74 /* The following error messages are artifacts of gtss and are not found in TSS */
  3    75     2 err100 char(50) init("DRL ADDMEM ERROR at (^6o)"),
  3    76     2 err101 char(50) init("DRL RELMEM ERROR TRUNCATE SEGMENT at (^6o)"),
  3    77     2 err102 char(50) init("DRL RELMEM ERROR SET MAX SEGMENT LENGTH"),
  3    78     2 err103 char(50) init("UNIMPLEMENTED DRL FILACT FUNCTION (^i)"),
  3    79     2 err999 char(50) init("dummy");
  3    80 
  3    81 /*   END INCLUDE FILE gtss_pnterr.incl.pl1 */
      140 
      141 
  4     1 /* BEGIN INCLUDE FILE gtss_ext_.incl.pl1 */
  4     2 /*
  4     3*  Created: (Wardd Multics)  05/20/78 1307.6 mst Sat 
  4     4*  Modified: Ward            1981     add suspended_process dcl
  4     5*  Modified: Ron Barstad  83-07-21  Fixed level number on mcfc to 3
  4     6*  Modified: Ron Barstad  83-07-25  Fixed derail range in statistics to 4js3 number
  4     7**/
  4     8 dcl  gtss_ext_$aem                   fixed bin static ext	/* >0 Print "additional" error information. */;
  4     9 dcl  gtss_ext_$bad_drl_rtrn          static ext label	/* Default for drl_rtrn. */;
  4    10 dcl  gtss_ext_$db                    (72)bit(1)unal static ext;
  4    11 dcl  gtss_ext_$deferred_catalogs_ptr ptr ext;
  4    12 dcl  gtss_ext_$dispose_of_drl        static ext label	/* quit handlers for some derails use this label to abort */;
  4    13 dcl  gtss_ext_$drl_rtrn              (4)static ext label	/* where to return at subsystem end */;
  4    14 dcl  gtss_ext_$drm_path              char(168)static ext	/* gtss_expand_pathname_stores drm_path */;
  4    15 dcl  gtss_ext_$drun_jid              char (5) static ext	/* valid only for DRUN executing under absentee */;
  4    16 dcl  gtss_ext_$event_channel         fixed bin (71) static ext	/* used for DABT signals */;
  4    17 dcl  gtss_ext_$finished              static ext label	/* Return to gtss for normal conclusion. */;
  4    18 dcl  gtss_ext_$gdb_name              char(8)ext	/* Name H* module to debug. */;
  4    19 dcl  gtss_ext_$get_line              entry(ptr,ptr,fixed bin(21),fixed bin(21),fixed bin(35))variable ext /* Build mode input procedure. */;
  4    20 dcl  gtss_ext_$gtss_slave_area_seg   (4) ext static ptr	/* pointer to gtss slave area segment */;
  4    21 dcl  gtss_ext_$hcs_work_area_ptr     ptr ext static		/* Temp seg for acl lists. */;
  4    22 dcl  gtss_ext_$homedir               char (64) static ext /* user's home dir */;
  4    23 dcl  gtss_ext_$last_k_was_out        bit (1)aligned ext static	/* "1"b => last tty output was output. */;
  4    24 dcl  gtss_ext_$pdir                  char (168) varying ext static	/* pathname of process directory */;
  4    25 dcl  gtss_ext_$popup_from_pi         static ext label	/* transfer to this label after pi simulates popup primitive */;
  4    26 dcl  gtss_ext_$process_type          fixed bin (17) static ext;
  4    27 dcl  gtss_ext_$put_chars             entry(ptr,ptr,fixed bin(24),fixed bin(35)) variable ext	/* Terminal output procedure. */;
  4    28 dcl  gtss_ext_$restart_from_pi       static ext label	/* transfer to this label after pi restores machine conditions */;
  4    29 dcl  gtss_ext_$restart_seg_ptr       ptr static ext	/* points to DRUN restart file when exec under absentee */;
  4    30 dcl  gtss_ext_$sig_ptr               ext static ptr	/* saved ptr to signal_ */;
  4    31 dcl  gtss_ext_$stack_level_          fixed bin ext static;
  4    32 dcl  gtss_ext_$suspended_process     bit(1) ext static;
  4    33 dcl  gtss_ext_$SYstarstar_file_no    fixed bin (24) static ext;
  4    34 dcl  gtss_ext_$user_id               char (26)var ext;
  4    35 dcl  gtss_ext_$work_area_ptr         ptr ext;
  4    36 
  4    37 dcl  1 gtss_ext_$CFP_bits aligned static external
  4    38      , 3 no_input_yet bit (1) unaligned         /* used in gtss_CFP_input_, gtss_read_starCFP_ */
  4    39      , 3 rtn_bits bit (4) unaligned             /* used in gtss_CFP_input_, gtss_CFP_output_ */
  4    40      , 3 cpos_called bit (1) unaligned          /* used in gtss_CFP_input_, gtss_drl_t_cfio_, gtss_abandon_CFP_ */
  4    41      , 3 cout_called bit (1) unaligned          /* used in gtss_read_starCFP_, gtss_abandon_CFP_ */
  4    42      , 3 build_mode bit (1) unaligned	        /* used in gtss_build_, gtss_dsd_process_ */
  4    43      ;
  4    44 
  4    45 dcl 1 gtss_ext_$com_reg aligned static ext,
  4    46        3 tsdmx,
  4    47          4 dst fixed bin (18) unsigned unaligned,
  4    48          4 dit fixed bin (18) unsigned unaligned,
  4    49        3 tsdpt fixed bin (36) unsigned unaligned,
  4    50        3 tsddt fixed bin (36) unsigned unaligned,
  4    51        3 tsdid bit (72) unaligned,
  4    52        3 tsdsd bit (36) unaligned,
  4    53        3 tsdst fixed bin (36) unsigned unaligned,
  4    54        3 tsdjb fixed bin (35) unaligned,
  4    55        3 tsdgt,
  4    56          4 ust_loc fixed bin (18) unsigned unaligned,
  4    57          4 gating_ctl fixed bin (18) unsigned unaligned,
  4    58        3 tcdfr bit (36) unaligned;
  4    59 
  4    60 dcl 1 gtss_ext_$flags aligned static ext
  4    61      , 3 dispose_of_drl_on_pi	bit (01) unal	/* 1 => drl that should be aborted after quit-pi sequence */
  4    62      , 3 drl_in_progress	bit (01) unal	/* 1 => drl handler executing; 0 => gcos code executing */
  4    63      , 3 popup_from_pi	bit (01) unal	/* 1 => derail processor will simulate Gcos break instead of returning */
  4    64      , 3 unfinished_drl	bit (01) unal	/* 1 => subsystem is handling breaks and quit was raised during a drl */
  4    65      , 3 ss_time_limit_set	bit (01) unal	/* 1 => exec time limit set for subsystem */
  4    66      , 3 timer_ranout	bit (01) unal	/* 1 => user is executing timer runout code */
  4    67      , 3 gtss_com_err_sw      bit (01) unal       /* 1 => stop com_err_ string from going to terminal */   
  4    68      , 3 available		bit (65) unal
  4    69      ;
  4    70 
  4    71 
  4    72 dcl 1 gtss_ext_$statistics aligned static ext,		/* Derail usage statistics */
  4    73       3 total_time (-10:71)fixed bin (71),
  4    74       3 count (-10:71)fixed bin (17);
  4    75 
  4    76 /* 	Declaration of Available File Table
  4    77*   */
  4    78 dcl 1 gtss_ext_$aft aligned ext,			/* aft structure */
  4    79 
  4    80       3 start_list (0:102) fixed bin (24),		/* >0 => 1st aft_entry row to start of next entry chain. */
  4    81 
  4    82       3 aft_entry (20),
  4    83         4 altname char (8),				/* altname name for attaching this file */
  4    84         4 next_entry fixed bin (24),			/* Next aft_entry in hash chain. */
  4    85         4 previous_add fixed bin (24),			/* Previously added entry. */
  4    86         4 next_add fixed bin (24),			/* Entry added after this one. */
  4    87         4 used bit (1) unal,				/* "1"b => aft_entry contains AFT value. */
  4    88         4 forced bit(1) unal,				/* "1"b => gtss_verify_access_ forced access on this file. */
  4    89 
  4    90       3 free_space fixed bin (24),			/* Index of start of free space list for aft entries. */
  4    91       3 first_added fixed bin (24),			/* >0  => start of chain in add order. */
  4    92       3 last_added fixed bin (24)			/* >0 => end of chain in added order. */;
  4    93 
  4    94 dcl  gtss_ext_$ppt                   ptr ext /*  switch name for tapein drl */;
  4    95 /**	Data structure to provide access to installed
  4    96*   subsystems fast library load.
  4    97*   **/
  4    98 dcl 1 gtss_ext_$fast_lib aligned ext
  4    99      , 3 fast_lib_fcb ptr				/* Pointer to msf fcb.	*/
  4   100      , 3 fast_lib_ncp fixed bin (24)			/* Number of components. */
  4   101      , 3 comp_ptr (0:9)ptr				/* Pointer to component. */
  4   102      , 3 comp_wds (0:9)fixed bin (24)			/* Component length (words). */
  4   103      ;
  4   104 
  4   105 /* Pointers to segments to regulate multipler
  4   106*   callers to files. Same segments are used to regulate
  4   107*   all simulator callers.
  4   108**/
  4   109 dcl 1 gtss_ext_$mcfc	aligned ext,
  4   110       3 multics_lock_id	bit(36),
  4   111       3 wait_time		fixed bin,
  4   112       3 files_ptr		ptr,
  4   113       3 names_ptr		ptr,
  4   114       3 callers_ptr		(0:3)ptr
  4   115 ;
  4   116 
  4   117 /*   END INCLUDE FILE gtss_ext_.incl.pl1 */
      142 
      143 
  5     1 /*  */
  5     2 /* BEGIN INCLUDE FILE  mc.incl.pl1   Created Dec 72 for 6180 - WSS. */
  5     3 /* Modified 06/07/76 by Greenberg for mc.resignal */
  5     4 /* Modified 07/07/76 by Morris for fault register data */
  5     5 /* Modified 08/28/80 by J. A. Bush for the DPS8/70M CVPU */
  5     6 /* Modified '82 to make values constant */
  5     7 
  5     8 /* words 0-15 pointer registers */
  5     9 
  5    10 dcl  mcp ptr;
  5    11 
  5    12 dcl 1 mc based (mcp) aligned,
  5    13     2 prs (0:7) ptr,				/* POINTER  REGISTERS */
  5    14    (2 regs,					/* registers */
  5    15       3 x (0:7) bit (18),				/* index registers */
  5    16       3 a bit (36),					/* accumulator */
  5    17       3 q bit (36),					/* q-register */
  5    18       3 e bit (8),					/* exponent */
  5    19       3 pad1 bit (28),
  5    20       3 t bit (27),					/* timer register */
  5    21       3 pad2 bit (6),
  5    22       3 ralr bit (3),				/* ring alarm register */
  5    23 
  5    24     2 scu (0:7) bit (36),
  5    25 
  5    26     2 mask bit (72),				/* mem controller mask at time of fault */
  5    27     2 ips_temp bit (36),				/* Temporary storage for IPS info */
  5    28     2 errcode fixed bin (35),				/* fault handler's error code */
  5    29     2 fim_temp,
  5    30       3 unique_index bit (18) unal,			/* unique index for restarting faults */
  5    31       3 resignal bit (1) unal,			/* recompute signal name with fcode below */
  5    32       3 fcode bit (17) unal,				/* fault code used as index to FIM table and SCT */
  5    33     2 fault_reg bit (36),				/* fault register */
  5    34     2 pad2 bit (1),
  5    35     2 cpu_type fixed bin (2) unsigned,			/* L68 = 0, DPS8/70M = 1 */
  5    36     2 ext_fault_reg bit (15),				/* extended fault reg for DPS8/70M CPU */
  5    37     2 fault_time bit (54),				/* time of fault */
  5    38 
  5    39     2 eis_info (0:7) bit (36)) unaligned;
  5    40 
  5    41 
  5    42 dcl (apx fixed bin init (0),
  5    43      abx fixed bin init (1),
  5    44      bpx fixed bin init (2),
  5    45      bbx fixed bin init (3),
  5    46      lpx fixed bin init (4),
  5    47      lbx fixed bin init (5),
  5    48      spx fixed bin init (6),
  5    49      sbx fixed bin init (7)) internal static options (constant);
  5    50 
  5    51 
  5    52 
  5    53 
  5    54 dcl  scup ptr;
  5    55 
  5    56 dcl 1 scu based (scup) aligned,			/* SCU DATA */
  5    57 
  5    58 
  5    59 /*	WORD (0)		*/
  5    60 
  5    61    (2 ppr,					/* PROCEDURE POINTER REGISTER */
  5    62       3 prr bit (3),				/* procedure ring register */
  5    63       3 psr bit (15),				/* procedure segment register */
  5    64       3 p bit (1),					/* procedure privileged bit */
  5    65 
  5    66     2 apu,					/* APPENDING UNIT STATUS */
  5    67       3 xsf bit (1),				/* ext seg flag - IT modification */
  5    68       3 sdwm bit (1),				/* match in SDW Ass. Mem. */
  5    69       3 sd_on bit (1),				/* SDW Ass. Mem.  ON */
  5    70       3 ptwm bit (1),				/* match in PTW Ass. Mem. */
  5    71       3 pt_on bit (1),				/* PTW Ass. Mem.  ON */
  5    72       3 pi_ap bit (1),				/* Instr Fetch or Append cycle */
  5    73       3 dsptw bit (1),				/* Fetch of DSPTW */
  5    74       3 sdwnp bit (1),				/* Fetch of SDW non paged */
  5    75       3 sdwp bit (1),				/* Fetch of SDW paged */
  5    76       3 ptw bit (1),				/* Fetch of PTW */
  5    77       3 ptw2 bit (1),				/* Fetch of pre-paged PTW */
  5    78       3 fap bit (1),				/* Fetch of final address paged */
  5    79       3 fanp bit (1),				/* Fetch of final address non-paged */
  5    80       3 fabs bit (1),				/* Fetch of final address absolute */
  5    81 
  5    82     2 fault_cntr bit (3),				/* number of retrys of EIS instructions */
  5    83 
  5    84 
  5    85 /*	WORD (1)		*/
  5    86 
  5    87     2 fd,						/* FAULT  DATA */
  5    88       3 iro bit (1),				/* illegal ring order */
  5    89       3 oeb bit (1),				/* out of execute bracket */
  5    90       3 e_off bit (1),				/* no execute */
  5    91       3 orb bit (1),				/* out of read bracket */
  5    92       3 r_off bit (1),				/* no read */
  5    93       3 owb bit (1),				/* out of write bracket */
  5    94       3 w_off bit (1),				/* no write */
  5    95       3 no_ga bit (1),				/* not a gate */
  5    96       3 ocb bit (1),				/* out of call bracket */
  5    97       3 ocall bit (1),				/* outward call */
  5    98       3 boc bit (1),				/* bad outward call */
  5    99       3 inret bit (1),				/* inward return */
  5   100       3 crt bit (1),				/* cross ring transfer */
  5   101       3 ralr bit (1),				/* ring alarm register */
  5   102       3 am_er bit (1),				/* associative memory fault */
  5   103       3 oosb bit (1),				/* out of segment bounds */
  5   104       3 paru bit (1),				/* processor parity upper */
  5   105       3 parl bit (1),				/* processor parity lower */
  5   106       3 onc_1 bit (1),				/* op not complete type 1 */
  5   107       3 onc_2 bit (1),				/* op not complete type 2 */
  5   108 
  5   109     2 port_stat,					/* PORT  STATUS */
  5   110       3 ial bit (4),				/* illegal action lines */
  5   111       3 iac bit (3),				/* illegal action channel */
  5   112       3 con_chan bit (3),				/* connect channel */
  5   113 
  5   114     2 fi_num bit (5),				/* (fault/interrupt)  number */
  5   115     2 fi_flag bit (1),				/*  1 => fault,  0 => interrupt  */
  5   116 
  5   117 
  5   118 /*	WORD (2)		*/
  5   119 
  5   120     2 tpr,					/* TEMPORARY POINTER REGISTER */
  5   121       3 trr bit (3),				/* temporary ring register */
  5   122       3 tsr bit (15),				/* temporary segment register */
  5   123 
  5   124     2 pad2 bit (9),
  5   125 
  5   126     2 cpu_no bit (3),				/* CPU number */
  5   127 
  5   128     2 delta bit (6),				/* tally modification DELTA */
  5   129 
  5   130 
  5   131 /*	WORD (3)		*/
  5   132 
  5   133     2 word3 bit (18),
  5   134 
  5   135     2 tsr_stat,					/* TSR STATUS for 1,2,&3 word instructions */
  5   136       3 tsna,					/* Word 1 status */
  5   137         4 prn bit (3),				/* Word 1  PR  number */
  5   138         4 prv bit (1),				/* Word 1  PR  valid bit */
  5   139       3 tsnb,					/* Word 2  status */
  5   140         4 prn bit (3),				/* Word 2  PR  number */
  5   141         4 prv bit (1),				/* Word 2  PR  valid bit */
  5   142       3 tsnc,					/* Word 3  status */
  5   143         4 prn bit (3),				/* Word 3  PR  number */
  5   144         4 prv bit (1),				/* Word 3  PR  valid bit */
  5   145 
  5   146     2 tpr_tbr bit (6),				/* TPR.TBR  field */
  5   147 
  5   148 
  5   149 /* 	WORD (4)		*/
  5   150 
  5   151     2 ilc bit (18),					/* INSTRUCTION  COUNTER */
  5   152 
  5   153     2 ir,						/* INDICATOR  REGISTERS */
  5   154       3 zero bit (1),				/* zero indicator */
  5   155       3 neg bit (1),				/* negative indicator */
  5   156       3 carry bit (1),				/* carryry indicator */
  5   157       3 ovfl bit (1),				/* overflow indicator */
  5   158       3 eovf bit (1),				/* eponent overflow */
  5   159       3 eufl bit (1),				/* exponent underflow */
  5   160       3 oflm bit (1),				/* overflow mask */
  5   161       3 tro bit (1),				/* tally runout */
  5   162       3 par bit (1),				/* parity error */
  5   163       3 parm bit (1),				/* parity mask */
  5   164       3 bm bit (1),					/* ^bar mode */
  5   165       3 tru bit (1),				/* truncation mode */
  5   166       3 mif bit (1),				/* multi-word instruction mode */
  5   167       3 abs bit (1),				/* absolute mode */
  5   168       3 hex bit (1),				/* hexadecimal exponent mode */
  5   169       3 pad bit (3),
  5   170 
  5   171 
  5   172 /*	WORD (5)		*/
  5   173 
  5   174     2 ca bit (18),					/* COMPUTED  ADDRESS */
  5   175 
  5   176     2 cu,						/* CONTROL UNIT STATUS */
  5   177       3 rf bit (1),					/* on first cycle of repeat instr */
  5   178       3 rpt bit (1),				/* repeat instruction */
  5   179       3 rd bit (1),					/* repeat double instruction */
  5   180       3 rl bit (1),					/* repeat link instruciton */
  5   181       3 pot bit (1),				/* IT  modification */
  5   182       3 pon bit (1),				/* return type instruction */
  5   183       3 xde bit (1),				/* XDE from Even location */
  5   184       3 xdo bit (1),				/* XDE from Odd  location */
  5   185       3 poa bit (1),				/* operation preparation */
  5   186       3 rfi bit (1),				/* tells CPU to refetch instruction */
  5   187       3 its bit (1),				/* ITS modification */
  5   188       3 if bit (1),					/* fault occured during instruction fetch */
  5   189 
  5   190     2 cpu_tag bit (6)) unaligned,			/* computed tag field */
  5   191 
  5   192 
  5   193 /*	WORDS (6,7)	*/
  5   194 
  5   195     2 even_inst bit (36),				/* even instruction of faulting pair */
  5   196 
  5   197     2 odd_inst bit (36);				/* odd  instruction of faulting pair */
  5   198 
  5   199 
  5   200 
  5   201 
  5   202 
  5   203 
  5   204 /*	ALTERNATE   SCU  DECLARATION		*/
  5   205 
  5   206 
  5   207 dcl 1 scux based (scup) aligned,
  5   208 
  5   209    (2 pad0 bit (36),
  5   210 
  5   211     2 fd,						/* GROUP II  FAULT DATA */
  5   212       3 isn bit (1),				/* illegal segment number */
  5   213       3 ioc bit (1),				/* illegal op  code  */
  5   214       3 ia_am bit (1),				/* illegal address - modifier */
  5   215       3 isp bit (1),				/* illegal slave  procedure */
  5   216       3 ipr bit (1),				/* illegal procedure */
  5   217       3 nea bit (1),				/* non existent address */
  5   218       3 oobb bit (1),				/* out of bounds */
  5   219       3 pad bit (29),
  5   220 
  5   221     2 pad2 bit (36),
  5   222 
  5   223     2 pad3a bit (18),
  5   224 
  5   225     2 tsr_stat (0:2),				/* TSR  STATUS  as an  ARRAY */
  5   226       3 prn bit (3),				/* PR  number */
  5   227       3 prv bit (1),				/* PR  valid bit */
  5   228 
  5   229     2 pad3b bit (6)) unaligned,
  5   230 
  5   231     2 pad45 (0:1) bit (36),
  5   232 
  5   233     2 instr (0:1) bit (36);				/* Instruction ARRAY */
  5   234 
  5   235 
  5   236 
  5   237 /*  END INCLUDE FILE   mc.incl.pl1 */
      144 
      145 
  6     1 /* BEGIN INCLUDE FILE gtss_entry_dcls.incl.pl1 */
  6     2 /*
  6     3*  Created: (Wardd Multics)  06/30/78 1624.8 mst Fri 
  6     4*  Modified: Ron Barstad  84-02-24  Fixed wrong and obsolete entries
  6     5**/
  6     6 
  6     7 /**  gtss external entry variables.		**/
  6     8 dcl  com_err_                                   entry() options(variable);
  6     9 dcl  gtss_CFP_abort_                            entry options(variable);
  6    10 dcl  gtss_CFP_break_                            entry options(variable);
  6    11 dcl  gtss_CFP_input_                            entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  6    12 dcl  gtss_CFP_output_                           entry (ptr, ptr, fixed bin(21), fixed bin(35));
  6    13 dcl  gtss_abandon_CFP_                          entry options(variable);
  6    14 dcl  gtss_abort_dump_                           entry (fixed bin(18));
  6    15 dcl  gtss_abort_subsystem_                      entry options (variable);
  6    16 dcl  gtss_abort_subsystem_$not_imp              entry (ptr, fixed bin(24));
  6    17 dcl  gtss_abs_login_banner_		        entry() returns(char(*));
  6    18 dcl  gtss_abs_logout_banner_		        entry() returns(char(*));
  6    19 dcl  gtss_abs_$abs_equiv                        entry options(variable);
  6    20 dcl  gtss_abs_$cpu_runout		        entry (ptr, char(4));
  6    21 dcl  gtss_abs_$create_absin                     entry() returns(char(*));
  6    22 dcl  gtss_abs_$dabt_check		        entry (ptr, char(4));
  6    23 dcl  gtss_abs_$get_id                           entry (char(5)) returns(char(19));
  6    24 dcl  gtss_abs_$get_drm                          entry() returns(char(*));
  6    25 dcl  gtss_adjust_size_                          entry (ptr);
  6    26 dcl  gtss_aft_$add                              entry (char(8), fixed bin(24), fixed bin(35));
  6    27 dcl  gtss_aft_$delete                           entry (char(8), fixed bin(24), fixed bin(35));
  6    28 dcl  gtss_aft_$find                             entry (char(8), fixed bin(24), fixed bin(35));
  6    29 dcl  gtss_aft_$initialize                       entry (fixed bin(35));
  6    30 dcl  gtss_ascii_bcd_                            entry (ptr, fixed bin, ptr);
  6    31 dcl  gtss_attributes_mgr_$get                   entry (ptr, fixed bin(35));
  6    32 dcl  gtss_attributes_mgr_$set                   entry (ptr, fixed bin(35));
  6    33 dcl  gtss_bcd_ascii_                            entry (ptr, fixed bin(24), ptr);
  6    34 dcl  gtss_bcd_ascii_$lc                         entry (ptr, fixed bin(24), ptr);
  6    35 dcl  gtss_break_vector_                         entry ();
  6    36 dcl  gtss_break_vector_$drl_in_progress         entry() returns(bit(1));
  6    37 dcl  gtss_break_vector_$status                  entry() returns(bit(1));
  6    38 dcl  gtss_build_                                entry options(variable);
  6    39 dcl  gtss_com_err_                              entry options(variable);
  6    40 dcl  gtss_derail_processor_                     entry (ptr, char(*), ptr, ptr, bit(1) aligned) /* called at fault time instead of signal_ */;
  6    41 dcl  gtss_derail_processor_$set                 entry options(variable);
  6    42 dcl  gtss_dq_$catp                              entry (char (5), ptr, fixed bin (18) unsigned);
  6    43 dcl  gtss_dq_$create                            entry (bit(1));
  6    44 dcl  gtss_dq_$dibp                              entry (char(5), ptr);
  6    45 dcl  gtss_dq_$entries_info		        entry (ptr, fixed bin (18) unsigned, fixed bin (18) unsigned);
  6    46 dcl  gtss_dq_$hdrp                              entry (ptr);
  6    47 dcl  gtss_dq_$mod_js		        entry (char(5), fixed bin (6) unsigned, bit (1));
  6    48 dcl  gtss_dq_$open_exc		        entry (bit(1));
  6    49 dcl  gtss_dq_$open_gen		        entry (bit(1));
  6    50 dcl  gtss_drl_abort_                            entry (ptr, fixed bin);
  6    51 dcl  gtss_drl_addmem_                           entry (ptr, fixed bin);
  6    52 dcl  gtss_drl_callss_                           entry (ptr, fixed bin);
  6    53 dcl  gtss_drl_corfil_                           entry (ptr, fixed bin);
  6    54 dcl  gtss_drl_defil_                            entry (ptr, fixed bin);
  6    55 dcl  gtss_drl_defil_$subr                       entry (ptr, ptr, ptr);
  6    56 dcl  gtss_drl_dio_                              entry (ptr, fixed bin);
  6    57 dcl  gtss_drl_drlimt_                           entry (ptr, fixed bin);
  6    58 dcl  gtss_drl_drlsav_                           entry (ptr, fixed bin);
  6    59 dcl  gtss_drl_filact_                           entry (ptr, fixed bin);
  6    60 dcl  gtss_drl_filsp_                            entry (ptr, fixed bin);
  6    61 dcl  gtss_drl_grow_                             entry (ptr, fixed bin);
  6    62 dcl  gtss_drl_gwake_                            entry (ptr, fixed bin);
  6    63 dcl  gtss_drl_jsts_                             entry (ptr, fixed bin);
  6    64 dcl  gtss_drl_kin_                              entry (ptr, fixed bin);
  6    65 dcl  gtss_drl_kotnow_                           entry (ptr, fixed bin);
  6    66 dcl  gtss_drl_kotnow_$gtss_drl_kout_            entry (ptr, fixed bin);
  6    67 dcl  gtss_drl_koutn_                            entry (ptr, fixed bin);
  6    68 dcl  gtss_drl_morlnk_                           entry (ptr, fixed bin);
  6    69 dcl  gtss_drl_msub_                             entry (ptr, fixed bin);
  6    70 dcl  gtss_drl_objtim_                           entry (ptr, fixed bin);
  6    71 dcl  gtss_drl_part_                             entry (ptr, fixed bin);
  6    72 dcl  gtss_drl_pasaft_                           entry (ptr, fixed bin);
  6    73 dcl  gtss_drl_pasdes_                           entry (ptr, fixed bin);
  6    74 dcl  gtss_drl_pasust_                           entry (ptr, fixed bin);
  6    75 dcl  gtss_drl_pdio_                             entry (ptr, fixed bin);
  6    76 dcl  gtss_drl_prgdes_                           entry (ptr, fixed bin);
  6    77 dcl  gtss_drl_pseudo_                           entry (ptr, fixed bin);
  6    78 dcl  gtss_drl_relmem_                           entry (ptr, fixed bin);
  6    79 dcl  gtss_drl_restor_                           entry (ptr, fixed bin);
  6    80 dcl  gtss_drl_retfil_                           entry (ptr, fixed bin);
  6    81 dcl  gtss_drl_return_                           entry (ptr, fixed bin);
  6    82 dcl  gtss_drl_rew_                              entry (ptr, fixed bin);
  6    83 dcl  gtss_drl_rstswh_                           entry (ptr, fixed bin);
  6    84 dcl  gtss_drl_setlno_                           entry (ptr, fixed bin);
  6    85 dcl  gtss_drl_setswh_                           entry (ptr, fixed bin);
  6    86 dcl  gtss_drl_snumb_                            entry (ptr, fixed bin);
  6    87 dcl  gtss_drl_spawn_                            entry (ptr, fixed bin);
  6    88 dcl  gtss_drl_spawn_$gtss_drl_pasflr_           entry (ptr, fixed bin);
  6    89 dcl  gtss_drl_stoppt_                           entry (ptr, fixed bin);
  6    90 dcl  gtss_drl_switch_                           entry (ptr, fixed bin);
  6    91 dcl  gtss_drl_sysret_                           entry (ptr, fixed bin);
  6    92 dcl  gtss_drl_t_cfio_                           entry (ptr, fixed bin);
  6    93 dcl  gtss_drl_t_cmov_                           entry (ptr, fixed bin);
  6    94 dcl  gtss_drl_t_err_                            entry (ptr, fixed bin);
  6    95 dcl  gtss_drl_t_goto_                           entry (ptr, fixed bin);
  6    96 dcl  gtss_drl_t_linl_                           entry (ptr, fixed bin);
  6    97 dcl  gtss_drl_t_rscc_                           entry (ptr, fixed bin);
  6    98 dcl  gtss_drl_tapein_                           entry (ptr, fixed bin);
  6    99 dcl  gtss_drl_task_                             entry (ptr, fixed bin);
  6   100 dcl  gtss_drl_termtp_                           entry (ptr, fixed bin);
  6   101 dcl  gtss_drl_time_                             entry (ptr, fixed bin);
  6   102 dcl  gtss_drun_                                 entry (bit(1));
  6   103 dcl  gtss_dsd_lookup_                           entry (char(8) var) returns(fixed bin(24));
  6   104 dcl  gtss_dsd_process_                          entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  6   105 dcl  gtss_edit_dsd_                             entry (ptr, fixed bin(21)) returns(fixed bin(24));
  6   106 dcl  gtss_mcfc_empty                            entry (char(*) var);
  6   107 dcl  gtss_expand_pathname_                      entry (ptr, char(*), char(*), fixed bin(35));
  6   108 dcl  gtss_expand_pathname_$verify_umc           entry (ptr, char(*), char(*), bit(18), fixed bin(35));
  6   109 dcl  gtss_fault_processor_                      entry options(variable);
  6   110 dcl  gtss_find_cond_frame_		        entry (char(32) var) returns(ptr);
  6   111 dcl  gtss_fault_processor_$timer_runout         entry (ptr, char(*));
  6   112 dcl  gtss_filact_error_status_                  entry (fixed bin(35))returns(bit(12));
  6   113 dcl  gtss_filact_funct02_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   114 dcl  gtss_filact_funct03_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   115 dcl  gtss_filact_funct04_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   116 dcl  gtss_filact_funct05_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   117 dcl  gtss_filact_funct08_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   118 dcl  gtss_filact_funct10_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   119 dcl  gtss_filact_funct11_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   120 dcl  gtss_filact_funct14_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   121 dcl  gtss_filact_funct18_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   122 dcl  gtss_filact_funct19_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   123 dcl  gtss_filact_funct21_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   124 dcl  gtss_filact_funct22_                       entry (ptr, bit(18), ptr, ptr, ptr, fixed bin(35));
  6   125 dcl  gtss_mcfc_init_                            entry (char(*) var);
  6   126 dcl  gtss_interp_prim_                          entry options(variable);
  6   127 dcl  gtss_interp_prim_$callss                   entry (char(4), ptr);
  6   128 dcl  gtss_interp_prim_$sysret                   entry options(variable);
  6   129 dcl  gtss_interp_prim_$t_goto                   entry (char(4));
  6   130 dcl  gtss_ios_change_size_                      entry (fixed bin(24), fixed bin(24), bit(1), fixed bin(24), fixed bin(35));
  6   131 dcl  gtss_ios_close_                            entry (fixed bin(24), ptr, fixed bin(35));
  6   132 dcl  gtss_ios_exchange_names_                   entry (fixed bin(24), fixed bin(24), fixed bin(24), fixed bin(35));
  6   133 dcl  gtss_ios_initialize_                       entry options(variable);
  6   134 dcl  gtss_ios_io_                               entry (fixed bin(24), ptr, ptr, fixed bin(24), fixed bin(24), fixed bin(35));
  6   135 dcl  gtss_ios_open_                             entry (fixed bin(24), char(168), char(32), bit(6), bit(1), ptr, ptr, fixed bin(35));
  6   136 dcl  gtss_ios_position_                         entry (fixed bin(24), fixed bin(24), fixed bin(24), bit(6), ptr);
  6   137 dcl  gtss_mcfc_$delete		        entry (fixed bin(24), char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  6   138 dcl  gtss_mcfc_$open                            entry (char(*), char(*), bit(6), bit(36) aligned, ptr, fixed bin(35));
  6   139 dcl  gtss_mcfc_$close                           entry (char(*), char(*), bit(36) aligned, ptr, fixed bin(35));
  6   140 dcl  gtss_read_starCFP_                         entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  6   141 dcl  gtss_read_starCFP_$last_os                 entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
  6   142 dcl  gtss_run_subsystem_                        entry (fixed bin(24));
  6   143 dcl  gtss_run_subsystem_$finish                 entry options(variable);
  6   144 dcl  gtss_run_subsystem_$restor                 entry (fixed bin(24), ptr);
  6   145 dcl  gtss_run_subsystem_$restor_perm            entry (fixed bin(24), ptr, fixed bin(18));
  6   146 dcl  gtss_set_slave_                            entry (fixed bin (24), ptr);
  6   147 dcl  gtss_set_slave_$load_bar                   entry (fixed bin (17));
  6   148 dcl  gtss_update_safe_store_                    entry (ptr);
  6   149 dcl  gtss_verify_access_		        entry (char(*), char(*), fixed bin(24), bit(6), bit(12) aligned);
  6   150 dcl  gtss_verify_access_$check_forced_access    entry (char(*), char(*), fixed bin(24));
  6   151 dcl  gtss_write_starCFP_                        entry (ptr, ptr, fixed bin(21), fixed bin(35));
  6   152 /*   END INCLUDE FILE gtss_entry_dcls.incl.pl1 */
      146 
      147 
  7     1 /* BEGIN INCLUDE FILE gtss_install_values_.incl.pl1 */
  7     2 /*
  7     3*  NOTE: Changes here must be relected in gtss_install_values_.cds as well.
  7     4*
  7     5*  Created: (Wardd Multics)  01/24/79 1706.9 mst Wed 
  7     6*  Modified:  Ron Barstad  83-07-21  Moved inits to cds seg
  7     7**/
  7     8 
  7     9 dcl gtss_install_values_$fast_msf     char (32) var ext; /* entry name */
  7    10 dcl gtss_install_values_$Lstar_msf    char (32) var ext; /* searched second */
  7    11 dcl gtss_install_values_$starL_msf    char (32) var ext; /* searched first */
  7    12 dcl gtss_install_values_$memory_limit fixed bin (24) ext;
  7    13 dcl gtss_install_values_$time_limit   fixed bin (24) ext;
  7    14 
  7    15 /*   END INCLUDE FILE gtss_install_values_.incl.pl1 */
      148 
      149 
  8     1 /* BEGIN INCLUDE FILE gtss_db_names.incl.pl1 */
  8     2 /*
  8     3*  Created:  (Wardd Multics)  03/29/79 1909.1 mst Thu 
  8     4**/
  8     5 
  8     6 /* To provide a new debugging switch:
  8     7*
  8     8*   1) Locate the comment "Insert next entry above this comment".
  8     9*
  8    10*   2) Place a new declaration for a db_ variable just
  8    11*      above this comment, in the same manner as the
  8    12*      current declaration just above the comment, using
  8    13*      the next integer gtss_ext_$db index.
  8    14*
  8    15*   3) Execute the gtss|db_names ted macro (this updates
  8    16*      the sorted name table).
  8    17*
  8    18*   4) Example use:
  8    19*
  8    20*      if db_drl_grow then do;
  8    21*      .
  8    22*      .
  8    23*      .
  8    24*      debug i/o statements using com_err_ or ioa_
  8    25*      .
  8    26*      .
  8    27*      .
  8    28*      end;
  8    29*
  8    30**/
  8    31 
  8    32 dcl (
  8    33  db_		bit(1) defined(gtss_ext_$db(01))
  8    34 ,db_CFP_input	bit(1) defined(gtss_ext_$db(02))
  8    35 ,db_drl_addmem	bit(1) defined(gtss_ext_$db(03))
  8    36 ,db_drl_defil	bit(1) defined(gtss_ext_$db(04))
  8    37 ,db_drl_filact	bit(1) defined(gtss_ext_$db(05))
  8    38 ,db_drl_filsp	bit(1) defined(gtss_ext_$db(06))
  8    39 ,db_drl_grow	bit(1) defined(gtss_ext_$db(07))
  8    40 ,db_drl_rew	bit(1) defined(gtss_ext_$db(08))
  8    41 ,db_filact_funct02	bit(1) defined(gtss_ext_$db(09))
  8    42 ,db_filact_funct03	bit(1) defined(gtss_ext_$db(10))
  8    43 ,db_filact_funct04	bit(1) defined(gtss_ext_$db(11))
  8    44 ,db_filact_funct05	bit(1) defined(gtss_ext_$db(12))
  8    45 ,db_filact_funct10	bit(1) defined(gtss_ext_$db(13))
  8    46 ,db_filact_funct11	bit(1) defined(gtss_ext_$db(14))
  8    47 ,db_filact_funct14	bit(1) defined(gtss_ext_$db(15))
  8    48 ,db_filact_funct18	bit(1) defined(gtss_ext_$db(16))
  8    49 ,db_filact_funct19	bit(1) defined(gtss_ext_$db(17))
  8    50 ,db_filact_funct21	bit(1) defined(gtss_ext_$db(18))
  8    51 ,db_filact_funct22	bit(1) defined(gtss_ext_$db(19))
  8    52 ,db_interp_prim	bit(1) defined(gtss_ext_$db(20))
  8    53 ,db_ios		bit(1) defined(gtss_ext_$db(21))
  8    54 ,db_run_subsystem	bit(1) defined(gtss_ext_$db(22))
  8    55 ,db_drl_t_cfio	bit(1) defined(gtss_ext_$db(23))
  8    56 ,db_drl_switch	bit(1) defined(gtss_ext_$db(24))
  8    57 ,db_drl_dio	bit(1) defined(gtss_ext_$db(25))
  8    58 ,db_drl_retfil	bit(1) defined(gtss_ext_$db(26))
  8    59 ,db_drl_msub	bit(1) defined(gtss_ext_$db(27))
  8    60 ,db_drl_callss	bit(1) defined(gtss_ext_$db(28))
  8    61 ,db_drl_rstswh	bit(1) defined(gtss_ext_$db(29))
  8    62 ,db_drl_setswh	bit(1) defined(gtss_ext_$db(30))
  8    63 ,db_mcfc		bit(1) defined(gtss_ext_$db(31))
  8    64 ,db_dq		bit(1) defined(gtss_ext_$db(32))
  8    65 ,db_abs		bit(1) defined(gtss_ext_$db(33))
  8    66 ,db_attributes_mgr	bit(1) defined(gtss_ext_$db(34))
  8    67 ,db_expand_pathname bit(1) defined(gtss_ext_$db(35))
  8    68 ,db_drl_part	bit(1) defined(gtss_ext_$db(36))
  8    69 ,db_drl_morlnk	bit(1) defined(gtss_ext_$db(37))
  8    70 ,db_drl_kin	bit(1) defined(gtss_ext_$db(38))
  8    71 /* Insert next entry above this comment. */
  8    72 );
  8    73 
  8    74 /* Table of sorted names. */
  8    75 dcl 1 debug_bit_names (38) static int options(constant)
  8    76 ,     2 name char(18)var init(
  8    77          "" ,"CFP_input" ,"abs" ,"attributes_mgr" ,"dq" ,"drl_addmem"
  8    78          ,"drl_callss" ,"drl_defil" ,"drl_dio" ,"drl_filact" ,"drl_filsp"
  8    79          ,"drl_grow" ,"drl_kin" ,"drl_morlnk" ,"drl_msub" ,"drl_part"
  8    80          ,"drl_retfil" ,"drl_rew" ,"drl_rstswh" ,"drl_setswh" ,"drl_switch"
  8    81          ,"drl_t_cfio" ,"expand_pathname" ,"filact_funct02" ,"filact_funct03"
  8    82          ,"filact_funct04" ,"filact_funct05" ,"filact_funct10" ,"filact_funct11"
  8    83          ,"filact_funct14" ,"filact_funct18" ,"filact_funct19" ,"filact_funct21"
  8    84          ,"filact_funct22" ,"interp_prim" ,"ios" ,"mcfc" ,"run_subsystem"
  8    85 			)
  8    86 ,     2 value fixed bin init(
  8    87          01 ,02 ,33 ,34 ,32 ,03 ,28 ,04 ,25 ,05 ,06 ,07 ,38 ,37 ,27 ,36 ,26 ,08
  8    88          ,29 ,30 ,24 ,23 ,35 ,09 ,10 ,11 ,12 ,13 ,14 ,15 ,16 ,17 ,18 ,19 ,20 ,21
  8    89          ,31 ,22
  8    90 			);
  8    91 /* End of table. */
  8    92 /*   END INCLUDE FILE gtss_db_names.incl.pl1 */
      150 
      151      end						/* gtss_drl_addmem_ */;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    04/18/00  1120.9  gtss_drl_addmem_.pl1              >udd>sm>ds>w>ml>gtss_drl_addmem_.pl1
136          1    12/11/84  1520.0  gtss_spa.incl.pl1                 >ldd>incl>gtss_spa.incl.pl1
138          2    09/09/83  1814.3  gtss_ust_ext_.incl.pl1            >ldd>incl>gtss_ust_ext_.incl.pl1
140          3    12/11/84  1520.0  gtss_pnterr.incl.pl1              >ldd>incl>gtss_pnterr.incl.pl1
142          4    09/09/83  1813.8  gtss_ext_.incl.pl1                >ldd>incl>gtss_ext_.incl.pl1
144          5    12/15/83  1200.4  mc.incl.pl1                       >ldd>incl>mc.incl.pl1
146          6    12/11/84  1520.0  gtss_entry_dcls.incl.pl1          >ldd>incl>gtss_entry_dcls.incl.pl1
148          7    09/09/83  1813.3  gtss_install_values_.incl.pl1     >ldd>incl>gtss_install_values_.incl.pl1
150          8    09/09/83  1813.6  gtss_db_names.incl.pl1            >ldd>incl>gtss_db_names.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
AL                        0(18)        based           bit(18)                  level 2 packed packed unaligned dcl 132 set ref 54*
AU                                     based           bit(18)                  level 2 packed packed unaligned dcl 132 set ref 53
                                                                                  54* 97 100
A_reg                                  based           structure                level 1 dcl 132 set ref 102
Afix                                   based           fixed bin(35,0)          dcl 114 set ref 102*
QL                        0(18)        based           bit(18)                  level 2 packed packed unaligned dcl 128 set ref 74
Q_reg                                  based           structure                level 1 dcl 128 set ref 102
Qfix                                   based           fixed bin(35,0)          dcl 115 set ref 102*
ZERO                                   based           bit                      packed unaligned dcl 117 set ref 90*
ZERO_l                          000100 automatic       fixed bin(24,0)          dcl 118 set ref 75* 90
a                        24            based           bit(36)                  level 3 packed packed unaligned dcl 5-12 set ref 53
                                                                                  54 54 97 100 102
bar                      22     000012 external static fixed bin(17,0)          level 4 packed packed unaligned dcl 2-16 set ref 94*
                                                                                  95 95
db_drl_addmem                          defined         bit(1)                   packed unaligned dcl 8-32 ref 54 102
err100                 1440     000000 constant        char(50)                 initial level 2 packed packed unaligned dcl 3-9 set
                                                                                  ref 81*
err4                     45(18) 000000 constant        char(50)                 initial level 2 packed packed unaligned dcl 3-9 set
                                                                                  ref 64*
gseg                            000104 automatic       pointer                  initial dcl 121 set ref 51* 90 97 98 121*
gtss_abort_subsystem_           000022 constant        entry                    external dcl 6-15 ref 64 81
gtss_ext_$db                    000014 external static bit(1)                   array packed unaligned dcl 4-10 ref 54 54 102 102
gtss_ext_$gtss_slave_area_seg   000016 external static pointer                  array dcl 4-20 ref 51
gtss_ext_$stack_level_          000020 external static fixed bin(17,0)          dcl 4-31 ref 51
gtss_install_values_$memory_limit
                                000026 external static fixed bin(24,0)          dcl 7-12 ref 78
gtss_pnterr                     000000 constant        structure                level 1 packed packed unaligned dcl 3-9
gtss_set_slave_$load_bar        000024 constant        entry                    external dcl 6-147 ref 95
gtss_spa                               based           structure                level 1 dcl 1-9
gtss_ust                        000012 external static structure                level 2 dcl 2-16
gtss_ust_ext_$ust               000012 external static structure                level 1 dcl 2-16
ilc                       4            based           bit(18)                  level 2 in structure "scu" packed packed unaligned
                                                                                  dcl 5-56 in procedure "gtss_drl_addmem_" ref 64 64
                                                                                  81 81 100
ilc                      22            based           bit(18)                  level 3 in structure "gtss_spa" packed packed
                                                                                  unaligned dcl 1-9 in procedure "gtss_drl_addmem_"
                                                                                  set ref 97*
increment                              parameter       fixed bin(17,0)          dcl 29 set ref 15 49* 100*
ioa_                            000010 constant        entry                    external dcl 116 ref 54 102
ir                       22(18)        based           structure                level 3 packed packed unaligned dcl 1-9 set ref 98*
limit                    22(18) 000012 external static bit(18)                  level 4 packed packed unaligned dcl 2-16 set ref 53
                                                                                  54* 76 90 91*
losti                    22            based           structure                level 2 packed packed unaligned dcl 1-9
lsize                    22     000012 external static structure                level 3 dcl 2-16
lswap                    23     000012 external static structure                level 3 dcl 2-16
mc                                     based           structure                level 1 dcl 5-12
mcp                             000106 automatic       pointer                  dcl 5-10 set ref 30* 50 53 54 54 64* 74 81* 97 100
                                                                                  102 102
mcpp                                   parameter       pointer                  dcl 28 ref 15 30
ml                              000102 automatic       fixed bin(35,0)          dcl 120 set ref 76* 78 91 94 102*
ml_overlay                             based           structure                level 1 dcl 124
ml_r18                    0(18)        based           bit(18)                  level 2 packed packed unaligned dcl 124 ref 91
nl                              000101 automatic       fixed bin(35,0)          dcl 119 set ref 74* 75 76 102*
q                        25            based           bit(36)                  level 3 packed packed unaligned dcl 5-12 set ref 74
                                                                                  102
regs                     20            based           structure                level 2 packed packed unaligned dcl 5-12
scu                      30            based           bit(36)                  array level 2 in structure "mc" packed packed
                                                                                  unaligned dcl 5-12 in procedure "gtss_drl_addmem_"
                                                                                  set ref 50
scu                                    based           structure                level 1 dcl 5-56 in procedure "gtss_drl_addmem_"
scup                            000110 automatic       pointer                  dcl 5-54 set ref 50* 64 64 81 81 100
size                     23(18) 000012 external static bit(18)                  level 4 packed packed unaligned dcl 2-16 set ref 91*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
abx                                    internal static fixed bin(17,0)          initial dcl 5-42
apx                                    internal static fixed bin(17,0)          initial dcl 5-42
bbx                                    internal static fixed bin(17,0)          initial dcl 5-42
bpx                                    internal static fixed bin(17,0)          initial dcl 5-42
com_err_                        000000 constant        entry                    external dcl 6-8
db_                                    defined         bit(1)                   packed unaligned dcl 8-32
db_CFP_input                           defined         bit(1)                   packed unaligned dcl 8-32
db_abs                                 defined         bit(1)                   packed unaligned dcl 8-32
db_attributes_mgr                      defined         bit(1)                   packed unaligned dcl 8-32
db_dq                                  defined         bit(1)                   packed unaligned dcl 8-32
db_drl_callss                          defined         bit(1)                   packed unaligned dcl 8-32
db_drl_defil                           defined         bit(1)                   packed unaligned dcl 8-32
db_drl_dio                             defined         bit(1)                   packed unaligned dcl 8-32
db_drl_filact                          defined         bit(1)                   packed unaligned dcl 8-32
db_drl_filsp                           defined         bit(1)                   packed unaligned dcl 8-32
db_drl_grow                            defined         bit(1)                   packed unaligned dcl 8-32
db_drl_kin                             defined         bit(1)                   packed unaligned dcl 8-32
db_drl_morlnk                          defined         bit(1)                   packed unaligned dcl 8-32
db_drl_msub                            defined         bit(1)                   packed unaligned dcl 8-32
db_drl_part                            defined         bit(1)                   packed unaligned dcl 8-32
db_drl_retfil                          defined         bit(1)                   packed unaligned dcl 8-32
db_drl_rew                             defined         bit(1)                   packed unaligned dcl 8-32
db_drl_rstswh                          defined         bit(1)                   packed unaligned dcl 8-32
db_drl_setswh                          defined         bit(1)                   packed unaligned dcl 8-32
db_drl_switch                          defined         bit(1)                   packed unaligned dcl 8-32
db_drl_t_cfio                          defined         bit(1)                   packed unaligned dcl 8-32
db_expand_pathname                     defined         bit(1)                   packed unaligned dcl 8-32
db_filact_funct02                      defined         bit(1)                   packed unaligned dcl 8-32
db_filact_funct03                      defined         bit(1)                   packed unaligned dcl 8-32
db_filact_funct04                      defined         bit(1)                   packed unaligned dcl 8-32
db_filact_funct05                      defined         bit(1)                   packed unaligned dcl 8-32
db_filact_funct10                      defined         bit(1)                   packed unaligned dcl 8-32
db_filact_funct11                      defined         bit(1)                   packed unaligned dcl 8-32
db_filact_funct14                      defined         bit(1)                   packed unaligned dcl 8-32
db_filact_funct18                      defined         bit(1)                   packed unaligned dcl 8-32
db_filact_funct19                      defined         bit(1)                   packed unaligned dcl 8-32
db_filact_funct21                      defined         bit(1)                   packed unaligned dcl 8-32
db_filact_funct22                      defined         bit(1)                   packed unaligned dcl 8-32
db_interp_prim                         defined         bit(1)                   packed unaligned dcl 8-32
db_ios                                 defined         bit(1)                   packed unaligned dcl 8-32
db_mcfc                                defined         bit(1)                   packed unaligned dcl 8-32
db_run_subsystem                       defined         bit(1)                   packed unaligned dcl 8-32
debug_bit_names                        internal static structure                array level 1 unaligned dcl 8-75
gtss_CFP_abort_                 000000 constant        entry                    external dcl 6-9
gtss_CFP_break_                 000000 constant        entry                    external dcl 6-10
gtss_CFP_input_                 000000 constant        entry                    external dcl 6-11
gtss_CFP_output_                000000 constant        entry                    external dcl 6-12
gtss_abandon_CFP_               000000 constant        entry                    external dcl 6-13
gtss_abort_dump_                000000 constant        entry                    external dcl 6-14
gtss_abort_subsystem_$not_imp   000000 constant        entry                    external dcl 6-16
gtss_abs_$abs_equiv             000000 constant        entry                    external dcl 6-19
gtss_abs_$cpu_runout            000000 constant        entry                    external dcl 6-20
gtss_abs_$create_absin          000000 constant        entry                    external dcl 6-21
gtss_abs_$dabt_check            000000 constant        entry                    external dcl 6-22
gtss_abs_$get_drm               000000 constant        entry                    external dcl 6-24
gtss_abs_$get_id                000000 constant        entry                    external dcl 6-23
gtss_abs_login_banner_          000000 constant        entry                    external dcl 6-17
gtss_abs_logout_banner_         000000 constant        entry                    external dcl 6-18
gtss_adjust_size_               000000 constant        entry                    external dcl 6-25
gtss_aft_$add                   000000 constant        entry                    external dcl 6-26
gtss_aft_$delete                000000 constant        entry                    external dcl 6-27
gtss_aft_$find                  000000 constant        entry                    external dcl 6-28
gtss_aft_$initialize            000000 constant        entry                    external dcl 6-29
gtss_ascii_bcd_                 000000 constant        entry                    external dcl 6-30
gtss_attributes_mgr_$get        000000 constant        entry                    external dcl 6-31
gtss_attributes_mgr_$set        000000 constant        entry                    external dcl 6-32
gtss_bcd_ascii_                 000000 constant        entry                    external dcl 6-33
gtss_bcd_ascii_$lc              000000 constant        entry                    external dcl 6-34
gtss_break_vector_              000000 constant        entry                    external dcl 6-35
gtss_break_vector_$drl_in_progress
                                000000 constant        entry                    external dcl 6-36
gtss_break_vector_$status       000000 constant        entry                    external dcl 6-37
gtss_build_                     000000 constant        entry                    external dcl 6-38
gtss_com_err_                   000000 constant        entry                    external dcl 6-39
gtss_derail_processor_          000000 constant        entry                    external dcl 6-40
gtss_derail_processor_$set      000000 constant        entry                    external dcl 6-41
gtss_dq_$catp                   000000 constant        entry                    external dcl 6-42
gtss_dq_$create                 000000 constant        entry                    external dcl 6-43
gtss_dq_$dibp                   000000 constant        entry                    external dcl 6-44
gtss_dq_$entries_info           000000 constant        entry                    external dcl 6-45
gtss_dq_$hdrp                   000000 constant        entry                    external dcl 6-46
gtss_dq_$mod_js                 000000 constant        entry                    external dcl 6-47
gtss_dq_$open_exc               000000 constant        entry                    external dcl 6-48
gtss_dq_$open_gen               000000 constant        entry                    external dcl 6-49
gtss_drl_abort_                 000000 constant        entry                    external dcl 6-50
gtss_drl_addmem_                000000 constant        entry                    external dcl 6-51
gtss_drl_callss_                000000 constant        entry                    external dcl 6-52
gtss_drl_corfil_                000000 constant        entry                    external dcl 6-53
gtss_drl_defil_                 000000 constant        entry                    external dcl 6-54
gtss_drl_defil_$subr            000000 constant        entry                    external dcl 6-55
gtss_drl_dio_                   000000 constant        entry                    external dcl 6-56
gtss_drl_drlimt_                000000 constant        entry                    external dcl 6-57
gtss_drl_drlsav_                000000 constant        entry                    external dcl 6-58
gtss_drl_filact_                000000 constant        entry                    external dcl 6-59
gtss_drl_filsp_                 000000 constant        entry                    external dcl 6-60
gtss_drl_grow_                  000000 constant        entry                    external dcl 6-61
gtss_drl_gwake_                 000000 constant        entry                    external dcl 6-62
gtss_drl_jsts_                  000000 constant        entry                    external dcl 6-63
gtss_drl_kin_                   000000 constant        entry                    external dcl 6-64
gtss_drl_kotnow_                000000 constant        entry                    external dcl 6-65
gtss_drl_kotnow_$gtss_drl_kout_ 000000 constant        entry                    external dcl 6-66
gtss_drl_koutn_                 000000 constant        entry                    external dcl 6-67
gtss_drl_morlnk_                000000 constant        entry                    external dcl 6-68
gtss_drl_msub_                  000000 constant        entry                    external dcl 6-69
gtss_drl_objtim_                000000 constant        entry                    external dcl 6-70
gtss_drl_part_                  000000 constant        entry                    external dcl 6-71
gtss_drl_pasaft_                000000 constant        entry                    external dcl 6-72
gtss_drl_pasdes_                000000 constant        entry                    external dcl 6-73
gtss_drl_pasust_                000000 constant        entry                    external dcl 6-74
gtss_drl_pdio_                  000000 constant        entry                    external dcl 6-75
gtss_drl_prgdes_                000000 constant        entry                    external dcl 6-76
gtss_drl_pseudo_                000000 constant        entry                    external dcl 6-77
gtss_drl_relmem_                000000 constant        entry                    external dcl 6-78
gtss_drl_restor_                000000 constant        entry                    external dcl 6-79
gtss_drl_retfil_                000000 constant        entry                    external dcl 6-80
gtss_drl_return_                000000 constant        entry                    external dcl 6-81
gtss_drl_rew_                   000000 constant        entry                    external dcl 6-82
gtss_drl_rstswh_                000000 constant        entry                    external dcl 6-83
gtss_drl_setlno_                000000 constant        entry                    external dcl 6-84
gtss_drl_setswh_                000000 constant        entry                    external dcl 6-85
gtss_drl_snumb_                 000000 constant        entry                    external dcl 6-86
gtss_drl_spawn_                 000000 constant        entry                    external dcl 6-87
gtss_drl_spawn_$gtss_drl_pasflr_
                                000000 constant        entry                    external dcl 6-88
gtss_drl_stoppt_                000000 constant        entry                    external dcl 6-89
gtss_drl_switch_                000000 constant        entry                    external dcl 6-90
gtss_drl_sysret_                000000 constant        entry                    external dcl 6-91
gtss_drl_t_cfio_                000000 constant        entry                    external dcl 6-92
gtss_drl_t_cmov_                000000 constant        entry                    external dcl 6-93
gtss_drl_t_err_                 000000 constant        entry                    external dcl 6-94
gtss_drl_t_goto_                000000 constant        entry                    external dcl 6-95
gtss_drl_t_linl_                000000 constant        entry                    external dcl 6-96
gtss_drl_t_rscc_                000000 constant        entry                    external dcl 6-97
gtss_drl_tapein_                000000 constant        entry                    external dcl 6-98
gtss_drl_task_                  000000 constant        entry                    external dcl 6-99
gtss_drl_termtp_                000000 constant        entry                    external dcl 6-100
gtss_drl_time_                  000000 constant        entry                    external dcl 6-101
gtss_drun_                      000000 constant        entry                    external dcl 6-102
gtss_dsd_lookup_                000000 constant        entry                    external dcl 6-103
gtss_dsd_process_               000000 constant        entry                    external dcl 6-104
gtss_edit_dsd_                  000000 constant        entry                    external dcl 6-105
gtss_expand_pathname_           000000 constant        entry                    external dcl 6-107
gtss_expand_pathname_$verify_umc
                                000000 constant        entry                    external dcl 6-108
gtss_ext_$CFP_bits                     external static structure                level 1 dcl 4-37
gtss_ext_$SYstarstar_file_no           external static fixed bin(24,0)          dcl 4-33
gtss_ext_$aem                          external static fixed bin(17,0)          dcl 4-8
gtss_ext_$aft                          external static structure                level 1 dcl 4-78
gtss_ext_$bad_drl_rtrn                 external static label variable           dcl 4-9
gtss_ext_$com_reg                      external static structure                level 1 dcl 4-45
gtss_ext_$deferred_catalogs_ptr        external static pointer                  dcl 4-11
gtss_ext_$dispose_of_drl               external static label variable           dcl 4-12
gtss_ext_$drl_rtrn                     external static label variable           array dcl 4-13
gtss_ext_$drm_path                     external static char(168)                packed unaligned dcl 4-14
gtss_ext_$drun_jid                     external static char(5)                  packed unaligned dcl 4-15
gtss_ext_$event_channel                external static fixed bin(71,0)          dcl 4-16
gtss_ext_$fast_lib                     external static structure                level 1 dcl 4-98
gtss_ext_$finished                     external static label variable           dcl 4-17
gtss_ext_$flags                        external static structure                level 1 dcl 4-60
gtss_ext_$gdb_name                     external static char(8)                  packed unaligned dcl 4-18
gtss_ext_$get_line                     external static entry variable           dcl 4-19
gtss_ext_$hcs_work_area_ptr            external static pointer                  dcl 4-21
gtss_ext_$homedir                      external static char(64)                 packed unaligned dcl 4-22
gtss_ext_$last_k_was_out               external static bit(1)                   dcl 4-23
gtss_ext_$mcfc                         external static structure                level 1 dcl 4-109
gtss_ext_$pdir                         external static varying char(168)        dcl 4-24
gtss_ext_$popup_from_pi                external static label variable           dcl 4-25
gtss_ext_$ppt                          external static pointer                  dcl 4-94
gtss_ext_$process_type                 external static fixed bin(17,0)          dcl 4-26
gtss_ext_$put_chars                    external static entry variable           dcl 4-27
gtss_ext_$restart_from_pi              external static label variable           dcl 4-28
gtss_ext_$restart_seg_ptr              external static pointer                  dcl 4-29
gtss_ext_$sig_ptr                      external static pointer                  dcl 4-30
gtss_ext_$statistics                   external static structure                level 1 dcl 4-72
gtss_ext_$suspended_process            external static bit(1)                   packed unaligned dcl 4-32
gtss_ext_$user_id                      external static varying char(26)         dcl 4-34
gtss_ext_$work_area_ptr                external static pointer                  dcl 4-35
gtss_fault_processor_           000000 constant        entry                    external dcl 6-109
gtss_fault_processor_$timer_runout
                                000000 constant        entry                    external dcl 6-111
gtss_filact_error_status_       000000 constant        entry                    external dcl 6-112
gtss_filact_funct02_            000000 constant        entry                    external dcl 6-113
gtss_filact_funct03_            000000 constant        entry                    external dcl 6-114
gtss_filact_funct04_            000000 constant        entry                    external dcl 6-115
gtss_filact_funct05_            000000 constant        entry                    external dcl 6-116
gtss_filact_funct08_            000000 constant        entry                    external dcl 6-117
gtss_filact_funct10_            000000 constant        entry                    external dcl 6-118
gtss_filact_funct11_            000000 constant        entry                    external dcl 6-119
gtss_filact_funct14_            000000 constant        entry                    external dcl 6-120
gtss_filact_funct18_            000000 constant        entry                    external dcl 6-121
gtss_filact_funct19_            000000 constant        entry                    external dcl 6-122
gtss_filact_funct21_            000000 constant        entry                    external dcl 6-123
gtss_filact_funct22_            000000 constant        entry                    external dcl 6-124
gtss_find_cond_frame_           000000 constant        entry                    external dcl 6-110
gtss_install_values_$Lstar_msf         external static varying char(32)         dcl 7-10
gtss_install_values_$fast_msf          external static varying char(32)         dcl 7-9
gtss_install_values_$starL_msf         external static varying char(32)         dcl 7-11
gtss_install_values_$time_limit        external static fixed bin(24,0)          dcl 7-13
gtss_interp_prim_               000000 constant        entry                    external dcl 6-126
gtss_interp_prim_$callss        000000 constant        entry                    external dcl 6-127
gtss_interp_prim_$sysret        000000 constant        entry                    external dcl 6-128
gtss_interp_prim_$t_goto        000000 constant        entry                    external dcl 6-129
gtss_ios_change_size_           000000 constant        entry                    external dcl 6-130
gtss_ios_close_                 000000 constant        entry                    external dcl 6-131
gtss_ios_exchange_names_        000000 constant        entry                    external dcl 6-132
gtss_ios_initialize_            000000 constant        entry                    external dcl 6-133
gtss_ios_io_                    000000 constant        entry                    external dcl 6-134
gtss_ios_open_                  000000 constant        entry                    external dcl 6-135
gtss_ios_position_              000000 constant        entry                    external dcl 6-136
gtss_mcfc_$close                000000 constant        entry                    external dcl 6-139
gtss_mcfc_$delete               000000 constant        entry                    external dcl 6-137
gtss_mcfc_$open                 000000 constant        entry                    external dcl 6-138
gtss_mcfc_empty                 000000 constant        entry                    external dcl 6-106
gtss_mcfc_init_                 000000 constant        entry                    external dcl 6-125
gtss_read_starCFP_              000000 constant        entry                    external dcl 6-140
gtss_read_starCFP_$last_os      000000 constant        entry                    external dcl 6-141
gtss_run_subsystem_             000000 constant        entry                    external dcl 6-142
gtss_run_subsystem_$finish      000000 constant        entry                    external dcl 6-143
gtss_run_subsystem_$restor      000000 constant        entry                    external dcl 6-144
gtss_run_subsystem_$restor_perm 000000 constant        entry                    external dcl 6-145
gtss_set_slave_                 000000 constant        entry                    external dcl 6-146
gtss_update_safe_store_         000000 constant        entry                    external dcl 6-148
gtss_verify_access_             000000 constant        entry                    external dcl 6-149
gtss_verify_access_$check_forced_access
                                000000 constant        entry                    external dcl 6-150
gtss_write_starCFP_             000000 constant        entry                    external dcl 6-151
lbx                                    internal static fixed bin(17,0)          initial dcl 5-42
lpx                                    internal static fixed bin(17,0)          initial dcl 5-42
sbx                                    internal static fixed bin(17,0)          initial dcl 5-42
scux                                   based           structure                level 1 dcl 5-207
spx                                    internal static fixed bin(17,0)          initial dcl 5-42
status                                 automatic       fixed bin(35,0)          dcl 122

NAME DECLARED BY EXPLICIT CONTEXT.
gtss_drl_addmem_                001626 constant        entry                    external dcl 15

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 50 53 54 54 74 91 97 100 102 102 102 102
addrel                                                 builtin function         ref 90
divide                                                 builtin function         ref 74 94
fixed                                                  builtin function         ref 64 64 74 76 81 81 95 95 100 100
null                                                   builtin function         ref 121

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      2400        2430    2246        2410
Length      2750    2246        30         304     131           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
gtss_drl_addmem_                    142 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
gtss_drl_addmem_         000100 ZERO_l                      gtss_drl_addmem_
                         000101 nl                          gtss_drl_addmem_
                         000102 ml                          gtss_drl_addmem_
                         000104 gseg                        gtss_drl_addmem_
                         000106 mcp                         gtss_drl_addmem_
                         000110 scup                        gtss_drl_addmem_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return_mac          ext_entry           divide_fx3

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
gtss_abort_subsystem_         gtss_set_slave_$load_bar      ioa_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
gtss_ext_$db                  gtss_ext_$gtss_slave_area_seg gtss_ext_$stack_level_
gtss_install_values_$memory_limit                           gtss_ust_ext_$ust




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     15 001622       121 001633        30 001635        49 001641        50 001642        51 001644        53 001651
     54 001664        64 001727        71 001774        74 001775        75 002002        76 002004        78 002012
     81 002014        88 002055        90 002056        91 002065        94 002071        95 002101        97 002112
     98 002116       100 002156       102 002170       109 002224


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
