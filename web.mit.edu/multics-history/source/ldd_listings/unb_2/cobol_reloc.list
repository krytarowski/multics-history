	COMPILATION LISTING OF SEGMENT cobol_reloc
	Compiled by: Multics PL/I Compiler, Release 31b, of April 24, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 05/24/89  0957.0 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
       17*     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
       18*     MCR8060 cobol_reloc.pl1 Added Trace statements.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 /* Modified on 08/21/83 by FCH, [5.2 ...], trace added */
       23 /* Modified on 01/14/77 by ORN to signal command_abort_ rather than cobol_compiler_error */
       24 /* Modified since Version 2.0 */
       25 
       26 /*{*/
       27 
       28 /* format: style3 */
       29 cobol_reloc:
       30      proc (reloc_ptr, count, code);
       31 
       32 dcl	reloc_ptr		ptr;			/* pts to array of count bit(5)'s */
       33 dcl	count		fixed bin;		/* number of half-words */
       34 dcl	code		fixed bin;		/* internal segment code */
       35 
       36 /*  This routine is called to append information to one of the
       37*relocation blocks associated with either the text, linkage,
       38*definition, or symbol section.  The argument code is the value
       39*of the internal segment number of one of the above sections
       40*(i.e. 3001, 3002, 3003, or 3004 respectively) or merely the
       41*unit position digit (i.e. 1, 2, 3, or 4).
       42*
       43*The relocation block for each of the four sections are declared
       44*identically as follows:  */
       45 
  1     1 
  1     2 /* BEGIN INCLUDE FILE ...   cobol_relinfo.incl.pl1 */
  1     3 /* Last modified July 1, 1974 by ORN */
  1     4 
  1     5 dcl relptr ptr;
  1     6 dcl 1 relinfo aligned based(relptr),
  1     7      2 decl_vers fixed bin,
  1     8      2 n_bits fixed bin,
  1     9      2 relbits bit(0 refer (relinfo.n_bits)) aligned;
  1    10 
  1    11 /*
  1    12*1) decl_vers	is the version number of the
  1    13*		structure (initialized to 2).
  1    14*
  1    15*2) n_bits		is the length (in bits) of the string
  1    16*		of relocation bits.
  1    17*
  1    18*3) relbits	is the string of relocation bits.
  1    19**/
  1    20 
  1    21 /* END INCLUDE FILE ...   cobol_relinfo.incl.pl1 */
  1    22 
       46 
       47 
       48 /* If reloc_ptr is null then it is assumed that count half-words
       49*of absolute relocation are to be added to the block.  Otherwise,
       50*reloc_ptr points to the following array:  
       51*
       52*dcl reloc (count) bit(5) aligned based(reloc_ptr);
       53*
       54*Each bit(5) field contains the relocation code
       55*for a half-word (with "00000"b indicating absolute relocation and
       56*"11110"b invalid).  Compaction of absolute relocatable half-words
       57*is handled automatically by cobol_reloc.   The relinfo.n_bits field in each
       58*block is always kept up to date.  */
       59 
       60 /*}*/
       61 /*************************************/
       62 
       63 
       64 dcl	creloc_ptr	ptr;
       65 dcl	ccount		fixed bin;
       66 dcl	reloc		(ccount) bit (5) aligned based (creloc_ptr);
       67 						/* the real one */
       68 
       69 dcl	1 seg		(4) static,
       70 	  2 pt		ptr,
       71 	  2 maxoff	fixed bin,
       72 	  2 abscnt	fixed bin;
       73 
       74 dcl	bits		bit (2359296) based;
       75 dcl	bytes		char (262144) based;
       76 
       77 dcl	(i, j, n)		fixed bin;
       78 dcl	tcnt		fixed bin;
       79 dcl	textbits		fixed bin;
       80 
       81 dcl	null		builtin;
       82 dcl	substr		builtin;
       83 dcl	addr		builtin;
       84 
       85 dcl	ioa_$rsnnl	entry options (variable);
       86 dcl	signal_		entry (char (*), ptr, ptr);
       87 dcl	bname		(4) char (10) init ("Text", "Definition", "Link", "Symbol");
       88 
       89 /*************************************/
       90 start:
       91 start_reloc:
       92 	creloc_ptr = reloc_ptr;
       93 	ccount = count;
       94 
       95 	if code > 3000
       96 	then n = code - 3000;
       97 	else n = code;
       98 
       99 	if n = 2
      100 	then n = 3;
      101 	else if n = 3
      102 	then n = 2;
      103 join:						/* cobol_emit joins code here */
      104 	if cobol_$reloc_sym_base_ptr -> relinfo.decl_vers ^= 2
      105 	then do;					/* blocks truncated to zeros by cobol driver */
      106 		seg.pt (1) = cobol_$reloc_text_base_ptr;
      107 		seg.maxoff (1) = cobol_$reloc_text_max;
      108 		seg.pt (2) = cobol_$reloc_def_base_ptr;
      109 		seg.maxoff (2) = cobol_$reloc_def_max;
      110 		seg.pt (3) = cobol_$reloc_link_base_ptr;
      111 		seg.maxoff (3) = cobol_$reloc_link_max;
      112 		seg.pt (4) = cobol_$reloc_sym_base_ptr;
      113 		seg.maxoff (4) = cobol_$reloc_sym_max;
      114 		do i = 1 to 4;
      115 		     seg.abscnt (i) = 0;
      116 		     seg.pt (i) -> relinfo.n_bits = 0;
      117 		     seg.pt (i) -> relinfo.decl_vers = 2;
      118 		end;
      119 	     end;
      120 
      121 	relptr = seg.pt (n);
      122 
      123 	if creloc_ptr = null
      124 	then do;					/* all absolute */
      125 		if seg.abscnt (n) < 15
      126 		then call start_abs (ccount);		/* no ongoing compaction */
      127 		else call cont_abs (ccount);		/* increase compaction ccount */
      128 	     end;
      129 
      130 	else do i = 1 to ccount;			/* creloc_ptr is non-null */
      131 
      132 		if reloc (i) ^= "00000"b
      133 		then do;				/* relocation other than absolute */
      134 			if n_bits + 5 > seg.maxoff (n)
      135 			then go to overflow_error;
      136 			substr (relbits, n_bits + 1, 5) = reloc (i);
      137 			n_bits = n_bits + 5;
      138 			seg.abscnt (n) = 0;
      139 		     end;
      140 		else do;
      141 			do j = i + 1 to ccount while (reloc (j) = "00000"b);
      142 			end;
      143 			if seg.abscnt (n) < 15
      144 			then call start_abs (j - i);
      145 			else call cont_abs (j - i);
      146 			i = j - 1;
      147 		     end;
      148 	     end;
      149 
      150 	return;
      151 
      152 
      153 /*************************************/
      154 
      155 start_abs:
      156      proc (pnum);
      157 
      158 dcl	pnum		fixed bin parameter;
      159 
      160 	tcnt = pnum + seg.abscnt (n);
      161 
      162 	if tcnt < 15
      163 	then call add_abs (pnum);			/* no sense compacting */
      164 	else do;
      165 		n_bits = n_bits - seg.abscnt (n);
      166 		if tcnt > 1023
      167 		then call fill_abs;			/* 1023 is max for one compaction record */
      168 		if tcnt < 15
      169 		then call add_abs (tcnt);
      170 		else do;
      171 			if n_bits + 15 > seg.maxoff (n)
      172 			then go to overflow_error;
      173 			substr (relbits, n_bits + 1, 5) = "11110"b;
      174 						/* compaction code */
      175 			substr (relbits, n_bits + 6, 10) = substr (unspec (tcnt), 27, 10);
      176 			seg.abscnt (n) = tcnt;
      177 			n_bits = n_bits + 15;
      178 		     end;
      179 	     end;
      180 	return;
      181      end start_abs;
      182 
      183 cont_abs:
      184      proc (pnum);
      185 
      186 dcl	pnum		fixed bin parameter;
      187 
      188 	tcnt = seg.abscnt (n) + pnum;
      189 
      190 	if tcnt > 1023
      191 	then do;
      192 		n_bits = n_bits - 15;
      193 		call fill_abs;
      194 		if tcnt < 15
      195 		then do;
      196 			call add_abs (tcnt);
      197 			return;
      198 		     end;
      199 		if n_bits + 15 > seg.maxoff (n)
      200 		then go to overflow_error;
      201 		substr (relbits, n_bits + 1, 5) = "11110"b;
      202 		n_bits = n_bits + 15;
      203 	     end;
      204 
      205 	substr (relbits, n_bits - 9, 10) = substr (unspec (tcnt), 27, 10);
      206 	seg.abscnt (n) = tcnt;
      207 	return;
      208 
      209      end cont_abs;
      210 
      211 add_abs:
      212      proc (pnum);
      213 
      214 dcl	pnum		fixed bin parameter;
      215 
      216 	if pnum + n_bits > seg.maxoff (n)
      217 	then go to overflow_error;
      218 
      219 	substr (relbits, n_bits + 1, pnum) = "0"b;
      220 	n_bits = n_bits + pnum;
      221 	seg.abscnt (n) = seg.abscnt (n) + pnum;
      222 	return;
      223 
      224      end add_abs;
      225 
      226 fill_abs:
      227      proc;
      228 
      229 	do while (tcnt > 1023);
      230 	     if n_bits + 15 > seg.maxoff (n)
      231 	     then go to overflow_error;
      232 	     substr (relbits, n_bits + 1, 15) = "111101111111111"b;
      233 	     tcnt = tcnt - 1023;
      234 	     seg.abscnt (n) = 0;
      235 	     n_bits = n_bits + 15;
      236 	end;
      237 	return;
      238 
      239      end fill_abs;
      240 
      241 
      242 /*************************************/
      243 /*{*/
      244 constants:
      245      entry (con_len, seg_ptr);
      246 
      247 /* This is a special entry for use by cobol_paste in order to
      248*create the relocation block for the constant portion of the
      249*text section and insert it in front of the text relocation block. */
      250 
      251 dcl	con_len		fixed bin;		/* number of words in constant section (input) */
      252 dcl	seg_ptr		ptr;			/* set to addr of seg array (output) */
      253 						/*}*/
      254 
      255 start_constants:
      256 	relptr = seg.pt (1);
      257 	n = 1;
      258 	textbits = n_bits;
      259 	n_bits = 0;
      260 	seg.abscnt (1) = 0;
      261 	substr (cobol_$reloc_work_base_ptr -> bits, 1, textbits) = substr (seg.pt (1) -> bits, 73, textbits);
      262 
      263 	call start_abs (con_len * 2);
      264 
      265 	substr (seg.pt (1) -> bits, 73 + n_bits, textbits) = substr (cobol_$reloc_work_base_ptr -> bits, 1, textbits);
      266 	n_bits = n_bits + textbits;
      267 	seg_ptr = addr (seg);
      268 	return;
      269 
      270 
      271 /*************************************/
      272 /*{*/
      273 
      274 cobol_emit:
      275      entry (wd_ptr, text_reloc_ptr, numb_wds);
      276 
      277 /* This procedure emits one or more words of information
      278*(plus relocation code) into the executable portion of the
      279*text section. */
      280 
      281 dcl	wd_ptr		ptr;
      282 dcl	text_reloc_ptr	ptr;
      283 dcl	numb_wds		fixed bin;
      284 
      285 /* dcl words (numb_wds) bit(36) based(wd_ptr);  */
      286 /* dcl text_reloc (2*numb_wds) bit(5) aligned based(text_reloc_ptr);  */
      287 
      288 /*
      289*wd_ptr		is a pointer to an array of words (input).
      290*
      291*text_reloc_ptr	is a pointer to an array of relocation
      292*		codes "text_reloc" (input).  If this pointer
      293*		is null, absolute relocation is assumed for
      294*		the next numb_wds words.
      295*
      296*numb_wds		is the number of words to be emmitted (input).
      297**/
      298 
      299 /*}*/
      300 
      301 start_emit:
      302 	if cobol_$text_wd_off + cobol_$con_wd_off + numb_wds > 131072
      303 	then go to emit_error;
      304 
      305 	i = numb_wds * 4;
      306 
      307 	/***.....	if Trace_Bit then call T1;/**/
      308 
      309 	substr (addrel (cobol_$text_base_ptr, cobol_$text_wd_off) -> bytes, 1, i) = substr (wd_ptr -> bytes, 1, i);
      310 	cobol_$text_wd_off = cobol_$text_wd_off + numb_wds;
      311 	creloc_ptr = text_reloc_ptr;			/* set common ptr */
      312 	ccount = 2 * numb_wds;			/* set common count */
      313 	n = 1;					/* text relocation block */
      314 
      315 	go to join;
      316 
      317 	/***.....	dcl Trace_Bit bit(1) static external;/**/
      318 	/***.....	dcl Trace_Lev fixed bin static external;/**/
      319 	/***.....	dcl Trace_Line char(36) static external;/**/
      320 	/***.....	dcl cobol_display_text$trace entry(ptr,fixed bin);/**/
      321 	/***.....	dcl ioa_ entry options(variable);/**/
      322 
      323 	/***.....	T1: proc;/**/
      324 	/***.....		dcl (wd,wdc) fixed bin;/**/
      325 	/***.....		dcl code(64) bit(36) based(wd_ptr);/**/
      326 	/***.....		wdc=divide(i,4,31,0);/**/
      327 	/***.....		call cobol_display_text$trace(addr(code(1)),wdc);/**/
      328 	/***.....	end;/**/
      329 
      330 
      331 /*************************************/
      332 
      333 emit_error:
      334 	error_info.name = "cobol_emit";
      335 	call ioa_$rsnnl ("Object instructions exceed 131072 words", message, message_len);
      336 	go to error;
      337 
      338 overflow_error:
      339 	error_info.name = "cobol_reloc";
      340 	call ioa_$rsnnl ("Overflow in ^a relocation block at ^d bits", message, message_len, bname (n), seg.maxoff (n));
      341 
      342 error:
      343 	call signal_ ("command_abort_", null, addr (error_info));
      344 
  2     1 
  2     2 /* BEGIN INCLUDE FILE ...   cobol_error_info.incl.pl1 */
  2     3 /* Last modified  July 8, 1974 by ORN */
  2     4 
  2     5 dcl 1 error_info,
  2     6      2 name char(32),
  2     7      2 message_len fixed bin,
  2     8      2 message char(128);
  2     9 
  2    10 
  2    11 /*
  2    12*name		the name of the program signalling the error.
  2    13*
  2    14*message_len	the number of valid characters in message.
  2    15*
  2    16*message		the text of the message to be issued.
  2    17**/
  2    18 
  2    19 /* END INCLUDE FILE ...   cobol_error_info.incl.pl1 */
  2    20 
      345 
  3     1 
  3     2 /* BEGIN INCLUDE FILE ... cobol_.incl.pl1 */
  3     3 /* last modified Feb 4, 1977 by ORN  */
  3     4 
  3     5 /* This file defines all external data used in the generator phase of Multics Cobol */
  3     6 
  3     7 /* POINTERS */
  3     8 dcl cobol_$text_base_ptr ptr  ext;
  3     9 dcl text_base_ptr ptr  defined (cobol_$text_base_ptr);
  3    10 dcl cobol_$con_end_ptr ptr  ext;
  3    11 dcl con_end_ptr ptr  defined (cobol_$con_end_ptr);
  3    12 dcl cobol_$def_base_ptr ptr  ext;
  3    13 dcl def_base_ptr ptr  defined (cobol_$def_base_ptr);
  3    14 dcl cobol_$link_base_ptr ptr  ext;
  3    15 dcl link_base_ptr ptr  defined (cobol_$link_base_ptr);
  3    16 dcl cobol_$sym_base_ptr ptr  ext;
  3    17 dcl sym_base_ptr ptr  defined (cobol_$sym_base_ptr);
  3    18 dcl cobol_$reloc_text_base_ptr ptr  ext;
  3    19 dcl reloc_text_base_ptr ptr  defined (cobol_$reloc_text_base_ptr);
  3    20 dcl cobol_$reloc_def_base_ptr ptr  ext;
  3    21 dcl reloc_def_base_ptr ptr  defined (cobol_$reloc_def_base_ptr);
  3    22 dcl cobol_$reloc_link_base_ptr ptr  ext;
  3    23 dcl reloc_link_base_ptr ptr  defined (cobol_$reloc_link_base_ptr);
  3    24 dcl cobol_$reloc_sym_base_ptr ptr  ext;
  3    25 dcl reloc_sym_base_ptr ptr  defined (cobol_$reloc_sym_base_ptr);
  3    26 dcl cobol_$reloc_work_base_ptr ptr  ext;
  3    27 dcl reloc_work_base_ptr ptr  defined (cobol_$reloc_work_base_ptr);
  3    28 dcl cobol_$pd_map_ptr ptr  ext;
  3    29 dcl pd_map_ptr ptr  defined (cobol_$pd_map_ptr);
  3    30 dcl cobol_$fixup_ptr ptr  ext;
  3    31 dcl fixup_ptr ptr  defined (cobol_$fixup_ptr);
  3    32 dcl cobol_$initval_base_ptr ptr  ext;
  3    33 dcl initval_base_ptr ptr  defined (cobol_$initval_base_ptr);
  3    34 dcl cobol_$initval_file_ptr ptr  ext;
  3    35 dcl initval_file_ptr ptr  defined (cobol_$initval_file_ptr);
  3    36 dcl cobol_$perform_list_ptr ptr  ext;
  3    37 dcl perform_list_ptr ptr  defined (cobol_$perform_list_ptr);
  3    38 dcl cobol_$alter_list_ptr ptr  ext;
  3    39 dcl alter_list_ptr ptr  defined (cobol_$alter_list_ptr);
  3    40 dcl cobol_$seg_init_list_ptr ptr  ext;
  3    41 dcl seg_init_list_ptr ptr  defined (cobol_$seg_init_list_ptr);
  3    42 dcl cobol_$temp_token_area_ptr ptr  ext;
  3    43 dcl temp_token_area_ptr ptr  defined (cobol_$temp_token_area_ptr);
  3    44 dcl cobol_$temp_token_ptr ptr  ext;
  3    45 dcl temp_token_ptr ptr  defined (cobol_$temp_token_ptr);
  3    46 dcl cobol_$token_block1_ptr ptr  ext;
  3    47 dcl token_block1_ptr ptr  defined (cobol_$token_block1_ptr);
  3    48 dcl cobol_$token_block2_ptr ptr  ext;
  3    49 dcl token_block2_ptr ptr  defined (cobol_$token_block2_ptr);
  3    50 dcl cobol_$minpral5_ptr ptr  ext;
  3    51 dcl minpral5_ptr ptr  defined (cobol_$minpral5_ptr);
  3    52 dcl cobol_$tag_table_ptr ptr  ext;
  3    53 dcl tag_table_ptr ptr  defined (cobol_$tag_table_ptr);
  3    54 dcl cobol_$map_data_ptr ptr  ext;
  3    55 dcl map_data_ptr ptr  defined (cobol_$map_data_ptr);
  3    56 dcl cobol_$ptr_status_ptr ptr  ext;
  3    57 dcl ptr_status_ptr ptr  defined (cobol_$ptr_status_ptr);
  3    58 dcl cobol_$reg_status_ptr ptr  ext;
  3    59 dcl reg_status_ptr ptr  defined (cobol_$reg_status_ptr);
  3    60 dcl cobol_$misc_base_ptr ptr ext;
  3    61 dcl misc_base_ptr ptr defined (cobol_$misc_base_ptr);
  3    62 dcl cobol_$misc_end_ptr ptr ext;
  3    63 dcl misc_end_ptr ptr defined (cobol_$misc_end_ptr);
  3    64 dcl cobol_$list_ptr ptr ext;
  3    65 dcl list_ptr ptr defined (cobol_$list_ptr);
  3    66 dcl cobol_$allo1_ptr ptr ext;
  3    67 dcl allo1_ptr ptr defined (cobol_$allo1_ptr);
  3    68 dcl cobol_$eln_ptr ptr ext;
  3    69 dcl eln_ptr ptr defined (cobol_$eln_ptr);
  3    70 dcl cobol_$diag_ptr ptr ext;
  3    71 dcl diag_ptr ptr defined (cobol_$diag_ptr);
  3    72 dcl cobol_$xref_token_ptr ptr ext;
  3    73 dcl xref_token_ptr ptr defined (cobol_$xref_token_ptr);
  3    74 dcl cobol_$xref_chain_ptr ptr ext;
  3    75 dcl xref_chain_ptr ptr defined (cobol_$xref_chain_ptr);
  3    76 dcl cobol_$statement_info_ptr ptr ext;
  3    77 dcl statement_info_ptr ptr defined (cobol_$statement_info_ptr);
  3    78 dcl cobol_$reswd_ptr ptr ext;
  3    79 dcl reswd_ptr ptr defined (cobol_$reswd_ptr);
  3    80 dcl cobol_$op_con_ptr ptr ext;
  3    81 dcl op_con_ptr ptr defined (cobol_$op_con_ptr);
  3    82 dcl cobol_$ntbuf_ptr ptr ext;
  3    83 dcl ntbuf_ptr ptr defined (cobol_$ntbuf_ptr);
  3    84 dcl cobol_$main_pcs_ptr ptr ext;
  3    85 dcl main_pcs_ptr ptr defined (cobol_$main_pcs_ptr);
  3    86 dcl cobol_$include_info_ptr ptr ext;
  3    87 dcl include_info_ptr ptr defined (cobol_$include_info_ptr);
  3    88 
  3    89 /* FIXED BIN */
  3    90 dcl cobol_$text_wd_off fixed bin  ext;
  3    91 dcl text_wd_off fixed bin  defined (cobol_$text_wd_off);
  3    92 dcl cobol_$con_wd_off fixed bin  ext;
  3    93 dcl con_wd_off fixed bin  defined (cobol_$con_wd_off);
  3    94 dcl cobol_$def_wd_off fixed bin  ext;
  3    95 dcl def_wd_off fixed bin  defined (cobol_$def_wd_off);
  3    96 dcl cobol_$def_max fixed bin  ext;
  3    97 dcl def_max fixed bin  defined (cobol_$def_max);
  3    98 dcl cobol_$link_wd_off fixed bin  ext;
  3    99 dcl link_wd_off fixed bin  defined (cobol_$link_wd_off);
  3   100 dcl cobol_$link_max fixed bin  ext;
  3   101 dcl link_max fixed bin  defined (cobol_$link_max);
  3   102 dcl cobol_$sym_wd_off fixed bin  ext;
  3   103 dcl sym_wd_off fixed bin  defined (cobol_$sym_wd_off);
  3   104 dcl cobol_$sym_max fixed bin  ext;
  3   105 dcl sym_max fixed bin  defined (cobol_$sym_max);
  3   106 dcl cobol_$reloc_text_max fixed bin(24)  ext;
  3   107 dcl reloc_text_max fixed bin(24)  defined (cobol_$reloc_text_max);
  3   108 dcl cobol_$reloc_def_max fixed bin(24)  ext;
  3   109 dcl reloc_def_max fixed bin(24)  defined (cobol_$reloc_def_max);
  3   110 dcl cobol_$reloc_link_max fixed bin(24)  ext;
  3   111 dcl reloc_link_max fixed bin(24)  defined (cobol_$reloc_link_max);
  3   112 dcl cobol_$reloc_sym_max fixed bin(24)  ext;
  3   113 dcl reloc_sym_max fixed bin(24)  defined (cobol_$reloc_sym_max);
  3   114 dcl cobol_$reloc_work_max fixed bin(24)  ext;
  3   115 dcl reloc_work_max fixed bin(24)  defined (cobol_$reloc_work_max);
  3   116 dcl cobol_$pd_map_index fixed bin  ext;
  3   117 dcl pd_map_index fixed bin  defined (cobol_$pd_map_index);
  3   118 dcl cobol_$cobol_data_wd_off fixed bin  ext;
  3   119 dcl cobol_data_wd_off fixed bin  defined (cobol_$cobol_data_wd_off);
  3   120 dcl cobol_$stack_off fixed bin  ext;
  3   121 dcl stack_off fixed bin  defined (cobol_$stack_off);
  3   122 dcl cobol_$max_stack_off fixed bin  ext;
  3   123 dcl max_stack_off fixed bin  defined (cobol_$max_stack_off);
  3   124 dcl cobol_$init_stack_off fixed bin  ext;
  3   125 dcl init_stack_off fixed bin  defined (cobol_$init_stack_off);
  3   126 dcl cobol_$pd_map_sw fixed bin  ext;
  3   127 dcl pd_map_sw fixed bin  defined (cobol_$pd_map_sw);
  3   128 dcl cobol_$next_tag fixed bin  ext;
  3   129 dcl next_tag fixed bin  defined (cobol_$next_tag);
  3   130 dcl cobol_$data_init_flag fixed bin  ext;
  3   131 dcl data_init_flag fixed bin  defined (cobol_$data_init_flag);
  3   132 dcl cobol_$seg_init_flag fixed bin  ext;
  3   133 dcl seg_init_flag fixed bin  defined (cobol_$seg_init_flag);
  3   134 dcl cobol_$alter_flag fixed bin  ext;
  3   135 dcl alter_flag fixed bin  defined (cobol_$alter_flag);
  3   136 dcl cobol_$sect_eop_flag fixed bin  ext;
  3   137 dcl sect_eop_flag fixed bin  defined (cobol_$sect_eop_flag);
  3   138 dcl cobol_$para_eop_flag fixed bin  ext;
  3   139 dcl para_eop_flag fixed bin  defined (cobol_$para_eop_flag);
  3   140 dcl cobol_$priority_no fixed bin  ext;
  3   141 dcl priority_no fixed bin  defined (cobol_$priority_no);
  3   142 dcl cobol_$compile_count fixed bin ext;
  3   143 dcl compile_count fixed bin defined (cobol_$compile_count);
  3   144 dcl cobol_$ptr_assumption_ind fixed bin ext;
  3   145 dcl ptr_assumption_ind fixed bin defined (cobol_$ptr_assumption_ind);
  3   146 dcl cobol_$reg_assumption_ind fixed bin ext;
  3   147 dcl reg_assumption_ind fixed bin defined (cobol_$reg_assumption_ind);
  3   148 dcl cobol_$perform_para_index fixed bin ext;
  3   149 dcl perform_para_index fixed bin defined (cobol_$perform_para_index);
  3   150 dcl cobol_$perform_sect_index fixed bin ext;
  3   151 dcl perform_sect_index fixed bin defined (cobol_$perform_sect_index);
  3   152 dcl cobol_$alter_index fixed bin ext;
  3   153 dcl alter_index fixed bin defined (cobol_$alter_index);
  3   154 dcl cobol_$list_off fixed bin ext;
  3   155 dcl list_off fixed bin defined (cobol_$list_off);
  3   156 dcl cobol_$constant_offset fixed bin ext;
  3   157 dcl constant_offset fixed bin defined (cobol_$constant_offset);
  3   158 dcl cobol_$misc_max fixed bin ext;
  3   159 dcl misc_max fixed bin defined (cobol_$misc_max);
  3   160 dcl cobol_$pd_map_max fixed bin ext;
  3   161 dcl pd_map_max fixed bin defined (cobol_$pd_map_max);
  3   162 dcl cobol_$map_data_max fixed bin ext;
  3   163 dcl map_data_max fixed bin defined (cobol_$map_data_max);
  3   164 dcl cobol_$fixup_max fixed bin ext;
  3   165 dcl fixup_max fixed bin defined (cobol_$fixup_max);
  3   166 dcl cobol_$tag_table_max fixed bin ext;
  3   167 dcl tag_table_max fixed bin defined (cobol_$tag_table_max);
  3   168 dcl cobol_$temp_token_max fixed bin ext;
  3   169 dcl temp_token_max fixed bin defined (cobol_$temp_token_max);
  3   170 dcl cobol_$allo1_max fixed bin ext;
  3   171 dcl allo1_max fixed bin defined (cobol_$allo1_max);
  3   172 dcl cobol_$eln_max fixed bin ext;
  3   173 dcl eln_max fixed bin defined (cobol_$eln_max);
  3   174 dcl cobol_$debug_enable fixed bin ext;
  3   175 dcl debug_enable fixed bin defined (cobol_$debug_enable);
  3   176 dcl cobol_$non_source_offset fixed bin ext;
  3   177 dcl non_source_offset fixed bin defined (cobol_$non_source_offset);
  3   178 dcl cobol_$initval_flag fixed bin ext;
  3   179 dcl initval_flag fixed bin defined (cobol_$initval_flag);
  3   180 dcl cobol_$date_compiled_sw fixed bin ext;
  3   181 dcl date_compiled_sw fixed bin defined (cobol_$date_compiled_sw);
  3   182 dcl cobol_$include_cnt fixed bin ext;
  3   183 dcl include_cnt fixed bin defined (cobol_$include_cnt);
  3   184 dcl cobol_$fs_charcnt fixed bin ext;
  3   185 dcl fs_charcnt fixed bin defined (cobol_$fs_charcnt);
  3   186 dcl cobol_$ws_charcnt fixed bin ext;
  3   187 dcl ws_charcnt fixed bin defined (cobol_$ws_charcnt);
  3   188 dcl cobol_$coms_charcnt fixed bin ext;
  3   189 dcl coms_charcnt fixed bin defined (cobol_$coms_charcnt);
  3   190 dcl cobol_$ls_charcnt fixed bin ext;
  3   191 dcl ls_charcnt fixed bin defined (cobol_$ls_charcnt);
  3   192 dcl cobol_$cons_charcnt fixed bin ext;
  3   193 dcl cons_charcnt fixed bin defined (cobol_$cons_charcnt);
  3   194 dcl cobol_$value_cnt fixed bin ext;
  3   195 dcl value_cnt fixed bin defined (cobol_$value_cnt);
  3   196 dcl cobol_$cd_cnt fixed bin ext;
  3   197 dcl cd_cnt fixed bin defined (cobol_$cd_cnt);
  3   198 dcl cobol_$fs_wdoff fixed bin ext;
  3   199 dcl fs_wdoff fixed bin defined (cobol_$fs_wdoff);
  3   200 dcl cobol_$ws_wdoff fixed bin ext;
  3   201 dcl ws_wdoff fixed bin defined (cobol_$ws_wdoff);
  3   202 dcl cobol_$coms_wdoff fixed bin ext;
  3   203 dcl coms_wdoff fixed bin defined (cobol_$coms_wdoff);
  3   204 
  3   205 /* CHARACTER */
  3   206 dcl cobol_$scratch_dir char (168)   aligned ext;
  3   207 dcl scratch_dir char (168)   aligned defined (cobol_$scratch_dir);			/* -42- */
  3   208 dcl cobol_$obj_seg_name char (32)   aligned ext;
  3   209 dcl obj_seg_name char (32)   aligned defined (cobol_$obj_seg_name);		/* -8- */
  3   210 
  3   211 /* BIT */
  3   212 dcl cobol_$xref_bypass bit(1) aligned ext;
  3   213 dcl xref_bypass bit(1) aligned defined (cobol_$xref_bypass);			/* -1- */
  3   214 dcl cobol_$same_sort_merge_proc bit(1) aligned ext;
  3   215 dcl same_sort_merge_proc bit(1) aligned defined (cobol_$same_sort_merge_proc);		/* -1- */
  3   216 
  3   217 
  3   218 /* END INCLUDE FILE ... cobol_incl.pl1*/
  3   219 
  3   220 
      346 
      347 
      348 /*************************************/
      349 /*{*/
      350 /* display: entry;
      351*/*
      352*/* This is an entry to be used for debugging purposes.
      353*It is called from command level and continues to prompt the
      354*user for the internal segment number of the relocation block he is
      355*interested in.  It informs him of the current number of
      356*bits in that block and then prompts for a starting offset
      357*from which it will display the rest of the block in 5-bit units. */
      358 /*}*/
      359 /*
      360*/*dcl read_list_$prompt entry options(variable);
      361*/*dcl ioa_ entry options(variable);
      362*/*dcl ioa_$nnl entry options(variable);
      363*/*dcl write_list_ entry options(variable);
      364*/*
      365*/*	call read_list_$prompt("Enter segment number:  ",n);
      366*/*	call ioa_("relinfo.n_bits for ^a relocation block is ^d",bname(n),seg.pt(n)->n_bits);
      367*/*	call read_list_$prompt("Enter starting offset:  ",j);
      368*/*	do i = j to seg.pt(n)->n_bits by 5;
      369*/*	     call ioa_$nnl("^3d	",i);
      370*/*	     call write_list_(substr(seg.pt(n)->relinfo.relbits,i+1,5));
      371*/*	end;
      372*/**/
      373 
      374      end cobol_reloc;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/24/89  0832.7  cobol_reloc.pl1                   >spec>install>MR12.3-1048>cobol_reloc.pl1
46           1    03/27/82  0439.8  cobol_relinfo.incl.pl1            >ldd>include>cobol_relinfo.incl.pl1
345          2    03/27/82  0439.7  cobol_error_info.incl.pl1         >ldd>include>cobol_error_info.incl.pl1
346          3    11/11/82  1712.7  cobol_.incl.pl1                   >ldd>include>cobol_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
abscnt                    3     000010 internal static fixed bin(17,0)          array level 2 dcl 69 set ref 115* 125 138* 143 160
                                                                                  165 176* 188 206* 221* 221 234* 260*
addr                                                   builtin function         dcl 83 ref 267 342 342
bits                                   based           bit(2359296)             packed unaligned dcl 74 set ref 261* 261 265* 265
bname                           000112 automatic       char(10)                 initial array packed unaligned dcl 87 set ref 87*
                                                                                  87* 87* 87* 340*
bytes                                  based           char(262144)             packed unaligned dcl 75 set ref 309* 309
ccount                          000104 automatic       fixed bin(17,0)          dcl 65 set ref 93* 125* 127* 130 141 312*
cobol_$con_wd_off               000052 external static fixed bin(17,0)          dcl 3-92 ref 301
cobol_$reloc_def_base_ptr       000040 external static pointer                  dcl 3-20 ref 108
cobol_$reloc_def_max            000056 external static fixed bin(24,0)          dcl 3-108 ref 109
cobol_$reloc_link_base_ptr      000042 external static pointer                  dcl 3-22 ref 110
cobol_$reloc_link_max           000060 external static fixed bin(24,0)          dcl 3-110 ref 111
cobol_$reloc_sym_base_ptr       000044 external static pointer                  dcl 3-24 ref 103 112
cobol_$reloc_sym_max            000062 external static fixed bin(24,0)          dcl 3-112 ref 113
cobol_$reloc_text_base_ptr      000036 external static pointer                  dcl 3-18 ref 106
cobol_$reloc_text_max           000054 external static fixed bin(24,0)          dcl 3-106 ref 107
cobol_$reloc_work_base_ptr      000046 external static pointer                  dcl 3-26 ref 261 265
cobol_$text_base_ptr            000034 external static pointer                  dcl 3-8 ref 309
cobol_$text_wd_off              000050 external static fixed bin(17,0)          dcl 3-90 set ref 301 309 310* 310
code                                   parameter       fixed bin(17,0)          dcl 34 ref 29 95 95 97
con_len                                parameter       fixed bin(17,0)          dcl 251 ref 244 263
count                                  parameter       fixed bin(17,0)          dcl 33 ref 29 93
creloc_ptr                      000102 automatic       pointer                  dcl 64 set ref 90* 123 132 136 141 311*
decl_vers                              based           fixed bin(17,0)          level 2 dcl 1-6 set ref 103 117*
error_info                      000124 automatic       structure                level 1 unaligned dcl 2-5 set ref 342 342
i                               000105 automatic       fixed bin(17,0)          dcl 77 set ref 114* 115 116 117* 130* 132 136 141
                                                                                  143 145 146* 305* 309 309
ioa_$rsnnl                      000030 constant        entry                    external dcl 85 ref 335 340
j                               000106 automatic       fixed bin(17,0)          dcl 77 set ref 141* 141* 143 145 146
maxoff                    2     000010 internal static fixed bin(17,0)          array level 2 dcl 69 set ref 107* 109* 111* 113* 134
                                                                                  171 199 216 230 340*
message                  11     000124 automatic       char(128)                level 2 packed packed unaligned dcl 2-5 set ref 335*
                                                                                  340*
message_len              10     000124 automatic       fixed bin(17,0)          level 2 dcl 2-5 set ref 335* 340*
n                               000107 automatic       fixed bin(17,0)          dcl 77 set ref 95* 97* 99 99* 101 101* 121 125 134
                                                                                  138 143 160 165 171 176 188 199 206 216 221 221
                                                                                  230 234 257* 313* 340 340
n_bits                    1            based           fixed bin(17,0)          level 2 dcl 1-6 set ref 116* 134 136 136 137* 137
                                                                                  165* 165 171 173 173 175 175 177* 177 192* 192 199
                                                                                  201 201 202* 202 205 205 216 219 219 220* 220 230
                                                                                  232 232 235* 235 258 259* 265 266* 266
name                            000124 automatic       char(32)                 level 2 packed packed unaligned dcl 2-5 set ref 333*
                                                                                  338*
null                                                   builtin function         dcl 81 ref 123 342 342
numb_wds                               parameter       fixed bin(17,0)          dcl 283 ref 274 301 305 310 312
pnum                                   parameter       fixed bin(17,0)          dcl 158 in procedure "start_abs" set ref 155 160
                                                                                  162*
pnum                                   parameter       fixed bin(17,0)          dcl 186 in procedure "cont_abs" ref 183 188
pnum                                   parameter       fixed bin(17,0)          dcl 214 in procedure "add_abs" ref 211 216 219 220
                                                                                  221
pt                              000010 internal static pointer                  array level 2 dcl 69 set ref 106* 108* 110* 112* 116
                                                                                  117 121 255 261 265
relbits                   2            based           bit                      level 2 dcl 1-6 set ref 136* 173* 175* 201* 205*
                                                                                  219* 232*
relinfo                                based           structure                level 1 dcl 1-6
reloc                                  based           bit(5)                   array dcl 66 ref 132 136 141
reloc_ptr                              parameter       pointer                  dcl 32 ref 29 90
relptr                          000100 automatic       pointer                  dcl 1-5 set ref 121* 134 136 136 137 137 165 165 171
                                                                                  173 173 175 175 177 177 192 192 199 201 201 202
                                                                                  202 205 205 216 219 219 220 220 230 232 232 235
                                                                                  235 255* 258 259 265 266 266
seg                             000010 internal static structure                array level 1 unaligned dcl 69 set ref 267
seg_ptr                                parameter       pointer                  dcl 252 set ref 244 267*
signal_                         000032 constant        entry                    external dcl 86 ref 342
substr                                                 builtin function         dcl 82 set ref 136* 173* 175* 175 201* 205* 205 219*
                                                                                  232* 261* 261 265* 265 309* 309
tcnt                            000110 automatic       fixed bin(17,0)          dcl 78 set ref 160* 162 166 168 168* 175 176 188*
                                                                                  190 194 196* 205 206 229 233* 233
text_reloc_ptr                         parameter       pointer                  dcl 282 ref 274 311
textbits                        000111 automatic       fixed bin(17,0)          dcl 79 set ref 258* 261 261 265 265 266
wd_ptr                                 parameter       pointer                  dcl 281 ref 274 309

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
allo1_max                              defined         fixed bin(17,0)          dcl 3-171
allo1_ptr                              defined         pointer                  dcl 3-67
alter_flag                             defined         fixed bin(17,0)          dcl 3-135
alter_index                            defined         fixed bin(17,0)          dcl 3-153
alter_list_ptr                         defined         pointer                  dcl 3-39
cd_cnt                                 defined         fixed bin(17,0)          dcl 3-197
cobol_$allo1_max                       external static fixed bin(17,0)          dcl 3-170
cobol_$allo1_ptr                       external static pointer                  dcl 3-66
cobol_$alter_flag                      external static fixed bin(17,0)          dcl 3-134
cobol_$alter_index                     external static fixed bin(17,0)          dcl 3-152
cobol_$alter_list_ptr                  external static pointer                  dcl 3-38
cobol_$cd_cnt                          external static fixed bin(17,0)          dcl 3-196
cobol_$cobol_data_wd_off               external static fixed bin(17,0)          dcl 3-118
cobol_$compile_count                   external static fixed bin(17,0)          dcl 3-142
cobol_$coms_charcnt                    external static fixed bin(17,0)          dcl 3-188
cobol_$coms_wdoff                      external static fixed bin(17,0)          dcl 3-202
cobol_$con_end_ptr                     external static pointer                  dcl 3-10
cobol_$cons_charcnt                    external static fixed bin(17,0)          dcl 3-192
cobol_$constant_offset                 external static fixed bin(17,0)          dcl 3-156
cobol_$data_init_flag                  external static fixed bin(17,0)          dcl 3-130
cobol_$date_compiled_sw                external static fixed bin(17,0)          dcl 3-180
cobol_$debug_enable                    external static fixed bin(17,0)          dcl 3-174
cobol_$def_base_ptr                    external static pointer                  dcl 3-12
cobol_$def_max                         external static fixed bin(17,0)          dcl 3-96
cobol_$def_wd_off                      external static fixed bin(17,0)          dcl 3-94
cobol_$diag_ptr                        external static pointer                  dcl 3-70
cobol_$eln_max                         external static fixed bin(17,0)          dcl 3-172
cobol_$eln_ptr                         external static pointer                  dcl 3-68
cobol_$fixup_max                       external static fixed bin(17,0)          dcl 3-164
cobol_$fixup_ptr                       external static pointer                  dcl 3-30
cobol_$fs_charcnt                      external static fixed bin(17,0)          dcl 3-184
cobol_$fs_wdoff                        external static fixed bin(17,0)          dcl 3-198
cobol_$include_cnt                     external static fixed bin(17,0)          dcl 3-182
cobol_$include_info_ptr                external static pointer                  dcl 3-86
cobol_$init_stack_off                  external static fixed bin(17,0)          dcl 3-124
cobol_$initval_base_ptr                external static pointer                  dcl 3-32
cobol_$initval_file_ptr                external static pointer                  dcl 3-34
cobol_$initval_flag                    external static fixed bin(17,0)          dcl 3-178
cobol_$link_base_ptr                   external static pointer                  dcl 3-14
cobol_$link_max                        external static fixed bin(17,0)          dcl 3-100
cobol_$link_wd_off                     external static fixed bin(17,0)          dcl 3-98
cobol_$list_off                        external static fixed bin(17,0)          dcl 3-154
cobol_$list_ptr                        external static pointer                  dcl 3-64
cobol_$ls_charcnt                      external static fixed bin(17,0)          dcl 3-190
cobol_$main_pcs_ptr                    external static pointer                  dcl 3-84
cobol_$map_data_max                    external static fixed bin(17,0)          dcl 3-162
cobol_$map_data_ptr                    external static pointer                  dcl 3-54
cobol_$max_stack_off                   external static fixed bin(17,0)          dcl 3-122
cobol_$minpral5_ptr                    external static pointer                  dcl 3-50
cobol_$misc_base_ptr                   external static pointer                  dcl 3-60
cobol_$misc_end_ptr                    external static pointer                  dcl 3-62
cobol_$misc_max                        external static fixed bin(17,0)          dcl 3-158
cobol_$next_tag                        external static fixed bin(17,0)          dcl 3-128
cobol_$non_source_offset               external static fixed bin(17,0)          dcl 3-176
cobol_$ntbuf_ptr                       external static pointer                  dcl 3-82
cobol_$obj_seg_name                    external static char(32)                 dcl 3-208
cobol_$op_con_ptr                      external static pointer                  dcl 3-80
cobol_$para_eop_flag                   external static fixed bin(17,0)          dcl 3-138
cobol_$pd_map_index                    external static fixed bin(17,0)          dcl 3-116
cobol_$pd_map_max                      external static fixed bin(17,0)          dcl 3-160
cobol_$pd_map_ptr                      external static pointer                  dcl 3-28
cobol_$pd_map_sw                       external static fixed bin(17,0)          dcl 3-126
cobol_$perform_list_ptr                external static pointer                  dcl 3-36
cobol_$perform_para_index              external static fixed bin(17,0)          dcl 3-148
cobol_$perform_sect_index              external static fixed bin(17,0)          dcl 3-150
cobol_$priority_no                     external static fixed bin(17,0)          dcl 3-140
cobol_$ptr_assumption_ind              external static fixed bin(17,0)          dcl 3-144
cobol_$ptr_status_ptr                  external static pointer                  dcl 3-56
cobol_$reg_assumption_ind              external static fixed bin(17,0)          dcl 3-146
cobol_$reg_status_ptr                  external static pointer                  dcl 3-58
cobol_$reloc_work_max                  external static fixed bin(24,0)          dcl 3-114
cobol_$reswd_ptr                       external static pointer                  dcl 3-78
cobol_$same_sort_merge_proc            external static bit(1)                   dcl 3-214
cobol_$scratch_dir                     external static char(168)                dcl 3-206
cobol_$sect_eop_flag                   external static fixed bin(17,0)          dcl 3-136
cobol_$seg_init_flag                   external static fixed bin(17,0)          dcl 3-132
cobol_$seg_init_list_ptr               external static pointer                  dcl 3-40
cobol_$stack_off                       external static fixed bin(17,0)          dcl 3-120
cobol_$statement_info_ptr              external static pointer                  dcl 3-76
cobol_$sym_base_ptr                    external static pointer                  dcl 3-16
cobol_$sym_max                         external static fixed bin(17,0)          dcl 3-104
cobol_$sym_wd_off                      external static fixed bin(17,0)          dcl 3-102
cobol_$tag_table_max                   external static fixed bin(17,0)          dcl 3-166
cobol_$tag_table_ptr                   external static pointer                  dcl 3-52
cobol_$temp_token_area_ptr             external static pointer                  dcl 3-42
cobol_$temp_token_max                  external static fixed bin(17,0)          dcl 3-168
cobol_$temp_token_ptr                  external static pointer                  dcl 3-44
cobol_$token_block1_ptr                external static pointer                  dcl 3-46
cobol_$token_block2_ptr                external static pointer                  dcl 3-48
cobol_$value_cnt                       external static fixed bin(17,0)          dcl 3-194
cobol_$ws_charcnt                      external static fixed bin(17,0)          dcl 3-186
cobol_$ws_wdoff                        external static fixed bin(17,0)          dcl 3-200
cobol_$xref_bypass                     external static bit(1)                   dcl 3-212
cobol_$xref_chain_ptr                  external static pointer                  dcl 3-74
cobol_$xref_token_ptr                  external static pointer                  dcl 3-72
cobol_data_wd_off                      defined         fixed bin(17,0)          dcl 3-119
compile_count                          defined         fixed bin(17,0)          dcl 3-143
coms_charcnt                           defined         fixed bin(17,0)          dcl 3-189
coms_wdoff                             defined         fixed bin(17,0)          dcl 3-203
con_end_ptr                            defined         pointer                  dcl 3-11
con_wd_off                             defined         fixed bin(17,0)          dcl 3-93
cons_charcnt                           defined         fixed bin(17,0)          dcl 3-193
constant_offset                        defined         fixed bin(17,0)          dcl 3-157
data_init_flag                         defined         fixed bin(17,0)          dcl 3-131
date_compiled_sw                       defined         fixed bin(17,0)          dcl 3-181
debug_enable                           defined         fixed bin(17,0)          dcl 3-175
def_base_ptr                           defined         pointer                  dcl 3-13
def_max                                defined         fixed bin(17,0)          dcl 3-97
def_wd_off                             defined         fixed bin(17,0)          dcl 3-95
diag_ptr                               defined         pointer                  dcl 3-71
eln_max                                defined         fixed bin(17,0)          dcl 3-173
eln_ptr                                defined         pointer                  dcl 3-69
fixup_max                              defined         fixed bin(17,0)          dcl 3-165
fixup_ptr                              defined         pointer                  dcl 3-31
fs_charcnt                             defined         fixed bin(17,0)          dcl 3-185
fs_wdoff                               defined         fixed bin(17,0)          dcl 3-199
include_cnt                            defined         fixed bin(17,0)          dcl 3-183
include_info_ptr                       defined         pointer                  dcl 3-87
init_stack_off                         defined         fixed bin(17,0)          dcl 3-125
initval_base_ptr                       defined         pointer                  dcl 3-33
initval_file_ptr                       defined         pointer                  dcl 3-35
initval_flag                           defined         fixed bin(17,0)          dcl 3-179
link_base_ptr                          defined         pointer                  dcl 3-15
link_max                               defined         fixed bin(17,0)          dcl 3-101
link_wd_off                            defined         fixed bin(17,0)          dcl 3-99
list_off                               defined         fixed bin(17,0)          dcl 3-155
list_ptr                               defined         pointer                  dcl 3-65
ls_charcnt                             defined         fixed bin(17,0)          dcl 3-191
main_pcs_ptr                           defined         pointer                  dcl 3-85
map_data_max                           defined         fixed bin(17,0)          dcl 3-163
map_data_ptr                           defined         pointer                  dcl 3-55
max_stack_off                          defined         fixed bin(17,0)          dcl 3-123
minpral5_ptr                           defined         pointer                  dcl 3-51
misc_base_ptr                          defined         pointer                  dcl 3-61
misc_end_ptr                           defined         pointer                  dcl 3-63
misc_max                               defined         fixed bin(17,0)          dcl 3-159
next_tag                               defined         fixed bin(17,0)          dcl 3-129
non_source_offset                      defined         fixed bin(17,0)          dcl 3-177
ntbuf_ptr                              defined         pointer                  dcl 3-83
obj_seg_name                           defined         char(32)                 dcl 3-209
op_con_ptr                             defined         pointer                  dcl 3-81
para_eop_flag                          defined         fixed bin(17,0)          dcl 3-139
pd_map_index                           defined         fixed bin(17,0)          dcl 3-117
pd_map_max                             defined         fixed bin(17,0)          dcl 3-161
pd_map_ptr                             defined         pointer                  dcl 3-29
pd_map_sw                              defined         fixed bin(17,0)          dcl 3-127
perform_list_ptr                       defined         pointer                  dcl 3-37
perform_para_index                     defined         fixed bin(17,0)          dcl 3-149
perform_sect_index                     defined         fixed bin(17,0)          dcl 3-151
priority_no                            defined         fixed bin(17,0)          dcl 3-141
ptr_assumption_ind                     defined         fixed bin(17,0)          dcl 3-145
ptr_status_ptr                         defined         pointer                  dcl 3-57
reg_assumption_ind                     defined         fixed bin(17,0)          dcl 3-147
reg_status_ptr                         defined         pointer                  dcl 3-59
reloc_def_base_ptr                     defined         pointer                  dcl 3-21
reloc_def_max                          defined         fixed bin(24,0)          dcl 3-109
reloc_link_base_ptr                    defined         pointer                  dcl 3-23
reloc_link_max                         defined         fixed bin(24,0)          dcl 3-111
reloc_sym_base_ptr                     defined         pointer                  dcl 3-25
reloc_sym_max                          defined         fixed bin(24,0)          dcl 3-113
reloc_text_base_ptr                    defined         pointer                  dcl 3-19
reloc_text_max                         defined         fixed bin(24,0)          dcl 3-107
reloc_work_base_ptr                    defined         pointer                  dcl 3-27
reloc_work_max                         defined         fixed bin(24,0)          dcl 3-115
reswd_ptr                              defined         pointer                  dcl 3-79
same_sort_merge_proc                   defined         bit(1)                   dcl 3-215
scratch_dir                            defined         char(168)                dcl 3-207
sect_eop_flag                          defined         fixed bin(17,0)          dcl 3-137
seg_init_flag                          defined         fixed bin(17,0)          dcl 3-133
seg_init_list_ptr                      defined         pointer                  dcl 3-41
stack_off                              defined         fixed bin(17,0)          dcl 3-121
statement_info_ptr                     defined         pointer                  dcl 3-77
sym_base_ptr                           defined         pointer                  dcl 3-17
sym_max                                defined         fixed bin(17,0)          dcl 3-105
sym_wd_off                             defined         fixed bin(17,0)          dcl 3-103
tag_table_max                          defined         fixed bin(17,0)          dcl 3-167
tag_table_ptr                          defined         pointer                  dcl 3-53
temp_token_area_ptr                    defined         pointer                  dcl 3-43
temp_token_max                         defined         fixed bin(17,0)          dcl 3-169
temp_token_ptr                         defined         pointer                  dcl 3-45
text_base_ptr                          defined         pointer                  dcl 3-9
text_wd_off                            defined         fixed bin(17,0)          dcl 3-91
token_block1_ptr                       defined         pointer                  dcl 3-47
token_block2_ptr                       defined         pointer                  dcl 3-49
value_cnt                              defined         fixed bin(17,0)          dcl 3-195
ws_charcnt                             defined         fixed bin(17,0)          dcl 3-187
ws_wdoff                               defined         fixed bin(17,0)          dcl 3-201
xref_bypass                            defined         bit(1)                   dcl 3-213
xref_chain_ptr                         defined         pointer                  dcl 3-75
xref_token_ptr                         defined         pointer                  dcl 3-73

NAMES DECLARED BY EXPLICIT CONTEXT.
add_abs                         000777 constant        entry                    internal dcl 211 ref 162 168 196
cobol_emit                      000435 constant        entry                    external dcl 274
cobol_reloc                     000120 constant        entry                    external dcl 29
constants                       000355 constant        entry                    external dcl 244
cont_abs                        000721 constant        entry                    internal dcl 183 ref 127 145
emit_error                      000502 constant        label                    dcl 333 ref 301
error                           000577 constant        label                    dcl 342 set ref 336
fill_abs                        001024 constant        entry                    internal dcl 226 ref 166 193
join                            000154 constant        label                    dcl 103 ref 315
overflow_error                  000531 constant        label                    dcl 338 ref 134 171 199 216 230
start                           000126 constant        label                    dcl 90
start_abs                       000632 constant        entry                    internal dcl 155 ref 125 143 263
start_constants                 000363 constant        label                    dcl 255
start_emit                      000443 constant        label                    dcl 301
start_reloc                     000126 constant        label                    dcl 90

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addrel                                                 builtin function         ref 309
unspec                                                 builtin function         ref 175 205

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1302        1366    1074        1312
Length      1644    1074        64         242     205          20

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cobol_reloc                         215 external procedure  is an external procedure.  
start_abs                               internal procedure  shares stack frame of external procedure cobol_reloc.  
cont_abs                                internal procedure  shares stack frame of external procedure cobol_reloc.  
add_abs                                 internal procedure  shares stack frame of external procedure cobol_reloc.  
fill_abs                                internal procedure  shares stack frame of external procedure cobol_reloc.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 seg                         cobol_reloc

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cobol_reloc              000100 relptr                      cobol_reloc
                         000102 creloc_ptr                  cobol_reloc
                         000104 ccount                      cobol_reloc
                         000105 i                           cobol_reloc
                         000106 j                           cobol_reloc
                         000107 n                           cobol_reloc
                         000110 tcnt                        cobol_reloc
                         000111 textbits                    cobol_reloc
                         000112 bname                       cobol_reloc
                         000124 error_info                  cobol_reloc

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
ioa_$rsnnl                    signal_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
cobol_$con_wd_off             cobol_$reloc_def_base_ptr     cobol_$reloc_def_max          cobol_$reloc_link_base_ptr
cobol_$reloc_link_max         cobol_$reloc_sym_base_ptr     cobol_$reloc_sym_max          cobol_$reloc_text_base_ptr
cobol_$reloc_text_max         cobol_$reloc_work_base_ptr    cobol_$text_base_ptr          cobol_$text_wd_off




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     87 000061        29 000114        90 000126        93 000132        95 000134        97 000142        99 000143
    101 000150       103 000154       106 000161       107 000164       108 000166       109 000171       110 000173
    111 000176       112 000200       113 000202       114 000204       115 000211       116 000214       117 000216
    118 000221       121 000223       123 000230       125 000235       127 000244       128 000246       130 000247
    132 000257       134 000262       136 000273       137 000301       138 000303       139 000304       141 000305
    142 000320       143 000322       145 000336       146 000343       148 000346       150 000350       244 000351
    255 000363       257 000366       258 000370       259 000373       260 000374       261 000375       263 000402
    265 000410       266 000423       267 000425       268 000430       274 000431       301 000443       305 000452
    309 000455       310 000467       311 000471       312 000474       313 000477       315 000501       333 000502
    335 000505       336 000530       338 000531       340 000534       342 000577       374 000631       155 000632
    160 000634       162 000643       165 000655       166 000660       168 000664       171 000672       173 000703
    175 000707       176 000714       177 000716       180 000720       183 000721       188 000723       190 000731
    192 000733       193 000736       194 000737       196 000742       197 000744       199 000745       201 000756
    202 000762       205 000764       206 000771       207 000776       211 000777       216 001001       219 001012
    220 001017       221 001021       222 001023       226 001024       229 001025       230 001031       232 001042
    233 001046       234 001050       235 001051       236 001053       237 001054


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
