	COMPILATION LISTING OF SEGMENT reset_cdt_meters
	Compiled by: Multics PL/I Compiler, Release 30, of February 16, 1988
	Compiled at: Honeywell Bull, Phoenix AZ, SysM
	Compiled on: 07/20/88  1041.3 mst Wed
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 /* RESET_CDT_METERS - Program to reset the meters kept by dialup_ in
       12*   the header of the Channel Definition Table, and in each CDTE.
       13*
       14*   Written 750818 by PG
       15*   cleanup handler added by F.W. Martinson June 1982
       16**/
       17 
       18 reset_cdt_meters:
       19      procedure;
       20 
       21 /* entries */
       22 
       23 dcl  cu_$arg_ptr entry (fixed bin, ptr, fixed bin (21), fixed bin (35)),
       24      com_err_ entry options (variable),
       25      expand_path_ entry (ptr, fixed bin (21), ptr, ptr, fixed bin (35)),
       26      hcs_$initiate entry (char (*), char (*), char (*), fixed bin (1), fixed bin (2), ptr, fixed bin (35)),
       27      hcs_$terminate_noname entry (ptr, fixed bin (35));
       28 
       29 /* automatic */
       30 
       31 dcl  arg_len fixed bin (21),
       32      arg_ptr ptr,
       33      cdtex fixed bin,
       34      code fixed bin (35),
       35      dname char (168),
       36      ename char (32),
       37      now fixed bin (71);
       38 
       39 /* internal static initial */
       40 
       41 dcl  my_name char (16) internal static initial ("reset_cdt_meters");
       42 
       43 /* based */
       44 
       45 dcl  arg_string char (arg_len) based (arg_ptr);
       46 
       47 /* builtins */
       48 
       49 dcl (addr, clock, null) builtin;
       50 
       51 /* conditions */
       52 
       53 dcl cleanup condition;
       54 
       55 /* include files */
       56 
  1     1 /* BEGIN INCLUDE FILE ... author_dcl.incl.pl1 */
  1     2 
  1     3 /* This include file declares the "author" substructure
  1     4*   in a form suitable for using the PL/I "like" attribute.
  1     5*
  1     6*   Written 750304 by PG
  1     7**/
  1     8 
  1     9 dcl 1 author_dcl aligned based,
  2     1 /* BEGIN INCLUDE FILE author.incl.pl1 */
  2     2 
  2     3 /* the "author" items must always be the first ones in the table. The
  2     4*   module which moves the converted table to the System Control process
  2     5*   fills in these data items and assumes them to be at the head of the segment
  2     6*   regardless of the specific table's actual declaration. The variables
  2     7*   "lock" and "last_install_time" used to be "process_id" and "ev_channel"
  2     8*    respectively. For tables installed in multiple processes, these
  2     9*    are to be used to lock out multiple installations. */
  2    10 
  2    11 /*  Lock should be used as a modification lock. Since, in general,
  2    12*    entries may not be moved in system tables, even by installations,
  2    13*    it is sufficient for only installers and programs that change threads
  2    14*    to set or respect the lock. Simply updating data in an entry
  2    15*    requires no such protection.
  2    16*
  2    17*    Last_install_time is used by readers of system tables to detect
  2    18*    installations or other serious modifications. By checking it before
  2    19*    and after copying a block of data, they can be protected against
  2    20*    modifications.
  2    21*
  2    22*    Modules that set the lock should save proc_group_id, and then
  2    23*    put their group id there for the time they hold the lock.
  2    24*    if they do not actually install the, they should restore the group id.
  2    25**/
  2    26 
  2    27     2 author aligned,				/* validation data about table's author */
  2    28       3 proc_group_id char (32),			/* process-group-id  (personid.projectid.tag) */
  2    29       3 lock bit (36),				/* installation lock */
  2    30       3 update_attributes bit (1) unal,			/* update/add/delete attributes */
  2    31       3 update_authorization bit (1) unal,		/* update only authorizations */
  2    32       3 deferral_notified bit (1) unal,			/* installer notified of deferral of installation */
  2    33       3 pad bit (33) unaligned,
  2    34       3 last_install_time fixed bin (71),
  2    35       3 table char (4),				/* name of table, e.g., SAT MGT TTT RTDT PDT etc. */
  2    36       3 w_dir char (64),				/* author's working directory */
  2    37 
  2    38 /* END INCLUDE FILE author.incl.pl1 */
  1    10 
  1    11     2 pad;
  1    12 
  1    13 /* END INCLUDE FILE ... author_dcl.incl.pl1 */
       57 
  3     1 /* BEGIN INCLUDE FILE ... cdt.incl.pl1 */
  3     2 
  3     3 /* format: style3,idind25,indcomtxt */
  3     4 
  3     5 /* Channel Definition Table.
  3     6*   This table lists all of the hardware channels (ports) connected
  3     7*   to the system, and maintains the attributes of each one.
  3     8*
  3     9*   PG 741230
  3    10*   Modified by Mike Grady 5/6/76 to add FNP info.
  3    11*   Modified by Tom Casey 7/29/76 to add more FNP info and a few other things.
  3    12*   Modified by Robert Coren 6/13/77 to make terminal types be character strings.
  3    13*   Modified July 1979 by T. Casey to add several variables for MR8.0 process preservation facility.
  3    14*   Modified December 1980 by E. N. Kittlitz to eliminate cdte.phone_no.
  3    15*   Modified March 1981 by Robert Coren to add "listening" flag for multiplexers and to add TANDD_SERVICE service_type.
  3    16*   Modified April 1981 by E. N. Kittlitz to add cdte.dial_ev_chn, cdte.recent_wakeup_time, cdte.recent_wakeup_count.
  3    17*   Modified July 1981 by T. Casey for MR9.0 to add dialup_flags.detach_after_hangup
  3    18*   Modified December 1981 by E. N. Kittlitz for cdte.leave_edited, cdte.hold_arg,
  3    19*   Modified September 1981 by Benson I. Margulies for cdt_mgr_'s tree of multiplexer's.
  3    20*   Modified August 1982 by E. N. Kittlitz for check_acs.
  3    21*   Modified January 1983 by Keith Loepere for generic_destination.
  3    22*   Modified August 1983 by Robert Coren to add mpxe.check and mpxe.retry_load.
  3    23*   Modified 831216 by E. N. Kittlitz for required_access_class.
  3    24*   Modified 84-04-01 by BIM to finish communications AIM:
  3    25*   access class ranges,
  3    26*   access_control flags.
  3    27**/
  3    28 
  3    29 
  3    30 /****^  HISTORY COMMENTS:
  3    31*  1) change(87-03-17,Beattie), approve(87-04-06,MCR7656),
  3    32*     audit(87-07-13,Parisek), install(87-08-04,MR12.1-1056):
  3    33*     Add support for answering service to use IOCBs when tty_ cannot be
  3    34*     used to service login channels.
  3    35*                                                   END HISTORY COMMENTS */
  3    36 
  3    37 
  3    38 dcl	CDT_version_5	     fixed bin internal static initial (5) options (constant);
  3    39 dcl	CDT_version	     fixed bin internal static initial (6) options (constant);
  3    40 
  3    41 dcl	(cdtp, cdtep, fnpep, mpxep)
  3    42 			     ptr;
  3    43 
  3    44 dcl	1 cdt		     based (cdtp) aligned,	/* all of the system channels */
  3    45 	  2 author	     like author_dcl.author,	/* standard header */
  3    46 	  2 max_size	     fixed bin,		/* maximum number of cdte's in 255K */
  3    47 	  2 current_size	     fixed bin,		/* number of last cdte. */
  3    48 	  2 version	     fixed bin,
  3    49 	  2 freep		     fixed bin,		/* chain of free cdte's */
  3    50 	  2 n_cdtes	     fixed bin,		/* number of used cdte's */
  3    51 	  2 meters_last_reset    fixed bin (71),	/* clock time dialup meters were reset */
  3    52 	  2 realtime_in_dialup   fixed bin (71),	/* Dialup meter */
  3    53 	  2 cpu_in_dialup	     fixed bin (71),	/* .. */
  3    54 	  2 pf_in_dialup	     fixed bin,		/* .. */
  3    55 	  2 pp_in_dialup	     fixed bin,		/* .. */
  3    56 	  2 entries_to_dialup    fixed bin,		/* .. */
  3    57 	  2 flags,
  3    58 	    3 go		     bit (1) unal,		/* ans. serv. said "go ahead and answer the phones" */
  3    59 	    3 cdt_is_live	     bit (1) unal,		/* cdt is active */
  3    60 	    3 mux_mgr_system_init
  3    61 			     bit (1) unal,		/* mux mgr has loaded top-levels */
  3    62 	    3 pad1	     bit (33) unal,
  3    63 	  2 acceptable_fnp_tbf   fixed bin,		/* acceptable minutes between FNP crashes */
  3    64 	  2 spare_channel_count  fixed bin,		/* number of extra channels to leave room for in ring0 */
  3    65 	  2 threads	     aligned like channel_threads,
  3    66 						/* root of non-fnp-top-level-multiplexers */
  3    67 	  2 pad2		     (31) bit (36) aligned,	/* pad header to 80 words */
  3    68 	  2 fnp_entry	     dim (8) like fnpe,	/* max of 8 FNPs for now */
  3    69 	  2 cdt_entry	     dim (2500) like cdte;	/* # of cdte's in 255K */
  3    70 
  3    71 
  3    72 dcl	1 cdte		     based (cdtep) aligned,	/* a channel */
  3    73 	  2 in_use	     fixed bin,		/* see dialup_values. 0=NOW_FREE */
  3    74 /**** * These variables are filled in when the CDTE is created by cv_cmf. They are not dynamic. */
  3    75 	  2 pad1		     bit (36) aligned,
  3    76 	  2 name		     char (32),		/* ASCII name of channel */
  3    77 	  2 access_class	     (2) bit (72) aligned,	/* access class range */
  3    78 	  2 comment	     char (48),		/* printable message about channel */
  3    79 	  2 charge_type	     fixed bin (17) unal,	/* billing group */
  3    80 	  2 service_type	     fixed bin (17) unal,	/* service group (AS, ftp, mc) */
  3    81 	  2 line_type	     fixed bin (17) unal,	/* tty line type (protocol) */
  3    82 	  2 baud_rate	     fixed bin (17) unal,	/* 110, 133, 150, etc. */
  3    83 	  2 modem_type	     fixed bin (17) unal,	/* type of modem on this channel */
  3    84 	  2 pad2		     bit (18) unaligned,
  3    85 	  2 answerback	     char (8),		/* answerback string expected */
  3    86 	  2 initial_terminal_type
  3    87 			     char (32) unal,	/* as specified in the CMF */
  3    88 	  2 mpx_data	     unal,		/* data used only for multiplexed channels */
  3    89 	    3 mpx_type	     fixed bin (17),	/* type of multiplexing used */
  3    90 	    3 mpx_service	     fixed bin (17),	/* service type, active or inactive */
  3    91 	  2 flags,
  3    92 	  ( 3 attributes,
  3    93 	      4 ck_answerback    bit (1),		/* ON means that ansbk must equal our records */
  3    94 	      4 audit_access_error
  3    95 			     bit (1),		/* ON means ck that person auth is inside access class range  */
  3    96 						/*    this implies that the access_class describes a range of
  3    97*						   legitimate user auths. */
  3    98 	      4 hardwired	     bit (1),		/* ON means it is */
  3    99 	      4 set_modes	     bit (1),		/* ON means to set initial modes at dialup */
  3   100 	      4 dont_read_answerback
  3   101 			     bit (1),		/* ON means don't try to read answerback */
  3   102 	      4 pada	     bit (4),
  3   103 	    3 access_control     unaligned,		/* As below */
  3   104 	      4 dial_out	     bit (1),		/* dialing user must be on ACS */
  3   105 	      4 priv_attach	     bit (1),		/* PA_ user must be on ACS */
  3   106 	      4 dial_server	     bit (1),		/* accept_dials process must be on acs */
  3   107 	      4 login	     bit (1),		/* logging in user must be on acs */
  3   108 	      4 slave_dial	     bit (1),		/* dialing user must give -user and be on acs */
  3   109 	      4 pado	     bit (3),
  3   110 	    3 options,
  3   111 	      4 execute_initial_command
  3   112 			     bit (1),		/* ON means to do it */
  3   113 	      4 attached_by_operator
  3   114 			     bit (1),		/* ON means temporary attachment. */
  3   115 	      4 private_line     bit (1),		/* ON means private_line sync modem in use */
  3   116 	      4 bsc_ebcdic	     bit (1),		/* ON means bsc would like to use ebcdic code set */
  3   117 	      4 bsc_transparent  bit (1),		/* ON means bsc is in transparent mode */
  3   118 	      4 vip_pollselect   bit (1),		/* ON means VIP line is multidrop */
  3   119 	      4 autobaud	     bit (1),		/* ON means auto baud detection this channel */
  3   120 	      4 generic_destination_present
  3   121 			     bit (1),		/* ON means that the initial_command field contains
  3   122*						   a generic destination to match on dial_out or priv attach */
  3   123 	      4 use_iocb	     bit (1),		/* ON means to use IOCB operations to support channel */
  3   124 	      4 pado	     bit (9)
  3   125 	      )		     unaligned,
  3   126 	  2 initial_command	     char (64),		/* pseudo first input line */
  3   127 /**** The following variables represent dynamic control info, and
  3   128*      are used mostly by dialup_ and asu_ */
  3   129 	  2 event		     fixed bin (71),	/* event call channel for channel events */
  3   130 	  2 current_service_type fixed bin (17) unal,	/* Current usage of line. */
  3   131 	  2 tra_vec	     fixed bin (17) unal,	/* which section of dialup_ to do next */
  3   132 	  2 count		     fixed bin (17) unal,	/* How many login tries he's had. */
  3   133 	  2 dialup_flags	     unal,		/* flag bits for dialup to maintain */
  3   134 	    3 ppm		     bit (1) unal,		/* print preaccess message for IBM terminals */
  3   135 	    3 cpo		     bit (1) unal,		/* conditional printer-off (depends on answerback */
  3   136 	    3 wakeup_handler     bit (1) unal,		/* says who is wakeup handler for this channel */
  3   137 						/* 0 = dialup_, 1 = mc_tty_ */
  3   138 	    3 save_arg	     bit (1) unal,		/* -save login arg given */
  3   139 	    3 nosave_arg	     bit (1) unal,		/* -nosave login arg given */
  3   140 	    3 detach_after_hangup
  3   141 			     bit (1) unal,		/* remember WAIT_DETACH when setting WAIT_BEFORE_HANGUP */
  3   142 	    3 leave_edited	     bit (1) unal,		/* user control of edited mode */
  3   143 	    3 hold_arg	     bit (1) unal,		/* -hold arg given */
  3   144 	    3 no_hold_arg	     bit (1) unal,		/* -no_hold arg given */
  3   145 	    3 immediate_arg	     bit (1) unal,		/* -immediate arg given */
  3   146 	    3 current_access_class_valid
  3   147 			     bit (1) unal,		/* dialup_ or lg_ctl_ has determined the current_access_class */
  3   148 	    3 pad		     bit (7) unal,
  3   149 	  2 twx		     fixed bin,		/* channel device index */
  3   150 	  2 state		     fixed bin,		/* channel state */
  3   151 	  2 tty_id_code	     char (4),		/* channel id (answerback) */
  3   152 	  2 current_terminal_type
  3   153 			     char (32) unal,	/* most recently-set terminal type */
  3   154 	  2 process	     ptr unal,		/* ptr to ATE owning this channel */
  3   155 	  2 dialed_to_procid     bit (36),		/* Dialed channels remember owner's proc id */
  3   156 	  2 next_channel	     fixed bin (17) unal,	/* cdte index of next channel for this process */
  3   157 	  2 cur_line_type	     fixed bin (17) unal,	/* line type of currently dialed terminal */
  3   158 	  2 current_access_class (2) bit (72) aligned,	/* This is a range, but at this time it must be a null range.
  3   159*						   We do not yet define multi-class connections, but we will someday. */
  3   160 	  2 disconnected_ate_index
  3   161 			     fixed bin (17) unal,	/* index of ate of disconnected process */
  3   162 	  2 dial_ctl_ring	     fixed bin (3) unsigned unaligned,
  3   163 						/* used by dial_ctl_ to record ring of priv_attach or dial_out attachments */
  3   164 	  2 dial_rq_privileged   bit (1) unaligned,	/* used by dial ctl to record comm priv from priv_attach or dial_out request */
  3   165 	  2 pad3		     bit (14) unaligned,
  3   166 /**** The following variables are kept for metering purposes. */
  3   167 	  2 n_dialups	     fixed bin,		/* number of times channel has been dialed up */
  3   168 	  2 n_logins	     fixed bin,		/* number of login sessions on this channel */
  3   169 	  2 dialed_up_time	     fixed bin (35),	/* total time channel was dialed up (seconds) */
  3   170 	  2 dialup_time	     fixed bin (71),	/* time of present dialup */
  3   171 	  2 disconnected_proc_command
  3   172 			     fixed bin (12) unsigned unal,
  3   173 						/* 1 to 5 for -list,-create,-connect,-new_proc,-destroy */
  3   174 	  2 disconnected_proc_number
  3   175 			     fixed bin (12) unsigned unal,
  3   176 						/* {N} in -connect {N}, -new_proc {N}, -destroy {N} */
  3   177 	  2 n_disconnected_procs fixed bin (12) unsigned unal,
  3   178 						/* number of disconnected processes that user has */
  3   179 	  2 recent_wakeup_count  fixed bin,		/* counter to detect channel wakeup loop */
  3   180 	  2 recent_wakeup_time   fixed bin (71),	/* time of first wakeup in suspected channel wakeup loop */
  3   181 	  2 dial_ev_chn	     fixed bin (71),	/* Dialed channels remember master's IPC channel */
  3   182 /**** cdt_mgr_ uses these to maintain the tree of channels. They ****/
  3   183 /**** really belong in the mpxe, but it is full up, and the cdte ****/
  3   184 /**** had the space. */
  3   185 	  2 threads	     aligned like channel_threads,
  3   186 /**** The use name is that of the user who gave the dial or slave ****/
  3   187 /**** preaccess request. ****/
  3   188 	  2 user_name	     unaligned,
  3   189 	    3 person	     char (20) unaligned,
  3   190 	    3 project	     char (9) unaligned,
  3   191 	    3 pad		     char (3) unaligned,	/* no tag */
  3   192 	  2 iocbp		     ptr unaligned;		/* 104 words */
  3   193 
  3   194 
  3   195 dcl	generic_destination	     based char (32);	/* used to match destinations on dial_out and priv_attach,
  3   196*						   overlays initial_command field for slave and autocall lines */
  3   197 
  3   198 
  3   199 
  3   200 dcl	1 fnpe		     based (fnpep) aligned,	/* an FNP */
  3   201 						/* These variables are filled in from the CMF */
  3   202 	  2 type		     fixed bin,		/* type of this FNP, DN355, DN6670, etc. */
  3   203 	  2 memory	     fixed bin,		/* amount of memory on this FNP */
  3   204 	  2 nlslas	     fixed bin,		/* number of lslas on this FNP */
  3   205 	  2 nhslas	     fixed bin,		/* number of hslas on this FNP */
  3   206 	  2 service_type	     fixed bin,		/* service type */
  3   207 	  2 mpx_type	     fixed bin,		/* type of multiplexer on this fnp */
  3   208 	  2 coreimage	     char (168),		/* pathname of image, maybe in >sl1 */
  3   209 /**** The following are used during system operation to remember the state of the FNP */
  3   210 	  2 boot_segp	     ptr,			/* ptr to seg used for bootload */
  3   211 	  2 boot_ev_chan	     fixed bin (71),	/* for ring0 to report crashes and bootload complete */
  3   212 	  2 mpxe		     like mpxe,		/* standard multiplexer data */
  3   213 	  2 threads	     aligned like channel_threads,
  3   214 						/* same mpx threads as channel */
  3   215 	  2 pad3		     (25) fixed bin;	/* pad to 96 words per entry */
  3   216 
  3   217 /* This structure describes the data necessary to control a multiplexer.
  3   218*   For FNP's., a copy appears in the fnpe. For communications lines, it
  3   219*   overlays the initial_command field in the cdte. */
  3   220 
  3   221 dcl	1 mpxe		     based (mpxep) aligned,
  3   222 	  2 state		     fixed bin,		/* current state, up, down, loading */
  3   223 	  2 current_service_type fixed bin,		/* usually = service type, unless cdt installation changes it */
  3   224 	  2 current_mpx_type     fixed bin,		/* type of multiplexer currently running */
  3   225 	  2 n_bootloads	     fixed bin,		/* count of load attempts */
  3   226 	  2 time_initial_load    fixed bin (71),	/* time this MPX first completed a load */
  3   227 	  2 time_last_load	     fixed bin (71),	/* time MPX last completed a bootload */
  3   228 	  2 time_last_crash	     fixed bin (71),	/* time MPX last crashed */
  3   229 	  2 time_load_start	     fixed bin (71),	/* time current load started */
  3   230 	  2 last_tbf	     fixed bin,		/* number of minutes this MPX was up last bootload */
  3   231 	  2 flags		     unal,
  3   232 	    3 go		     bit (1),		/* start MPX after it loads */
  3   233 	    3 listening	     bit (1),		/* listen has been done on subchannels */
  3   234 	    3 check	     bit (1),		/* loaded with check option */
  3   235 	    3 retry_load	     bit (1),		/* reload if load fails */
  3   236 	    3 pad1	     bit (32),
  3   237 	  2 pad2		     (2) fixed bin;		/* pad to 16 words */
  3   238 
  3   239 /* These threads define the tree of multiplexers in the cdt. */
  3   240 /* next_sister and prev_sister link nodes at the same level, ordered */
  3   241 /* by alpha sort order of the channel name. Daughter points to the */
  3   242 /* first child of this node, if any. Daughter count is the number */
  3   243 /* of children, as a consistency check. Mother is a back pointer to */
  3   244 /* the parent, present in all the children, not just the first. */
  3   245 /* threads are cdt indexes. If positive, they index the cdt_entry array */
  3   246 /* in cdt, if negative, they are the negative of an index into the fnp_entry */
  3   247 /* array. If zero, they refer to the top of the non-fnp mpx tree. */
  3   248 
  3   249 dcl	1 channel_threads	     aligned based,
  3   250 	  2 next_sister	     fixed bin unaligned,
  3   251 	  2 prev_sister	     fixed bin unaligned,
  3   252 	  2 daughter	     fixed bin unaligned,
  3   253 	  2 mother	     fixed bin unaligned,	/* negative is a fnpx, positive a cdtx */
  3   254 	  2 pad		     bit (18) unaligned,
  3   255 	  2 daughter_count	     fixed bin unaligned;
  3   256 
  3   257 /* Values for cdte.service_type field */
  3   258 
  3   259 dcl	(
  3   260 	ANS_SERVICE	     init (1),		/* login or dial */
  3   261 	FTP_SERVICE	     init (2),		/* file transfer service */
  3   262 	MC_SERVICE	     init (3),		/* message coordinator */
  3   263 	SLAVE_SERVICE	     init (4),		/* special channel */
  3   264 	DIAL_SERVICE	     init (5),		/* transient state */
  3   265 	DIAL_OUT_SERVICE	     init (6),		/* auto call line */
  3   266 	MPX_SERVICE	     init (8),		/* ring0 demultiplexed line */
  3   267 	TANDD_SERVICE	     init (9)		/* transient state, attached for T & D */
  3   268 	)		     fixed bin internal static options (constant);
  3   269 
  3   270 /* Values for service type in both cdte and fnpe */
  3   271 
  3   272 dcl	(
  3   273 	INACTIVE		     init (7),		/* not to be used, even though configured */
  3   274 	ACTIVE		     init (1)
  3   275 	) /* for FNP only, configured and to be used */
  3   276 			     fixed bin internal static options (constant);
  3   277 
  3   278 /* Value for both cdte.in_use and fnpe.state */
  3   279 
  3   280 dcl	NOT_CONFIGURED	     fixed bin int static init (-1) options (constant);
  3   281 						/* was not configured at Multics bootload time */
  3   282 
  3   283 /* NOTE: an INACTIVE channel can be made active by operator command or CDT installation,
  3   284*   but a NOT_CONFIGURED channel can not be used until its multiplexer is reloaded */
  3   285 
  3   286 /* Value for cdte.in_use */
  3   287 
  3   288 dcl	CHANNEL_DELETED	     fixed bin int static init (-2);
  3   289 						/* channel deleted by CDT installation */
  3   290 
  3   291 /* NOTE: a configured channel being deleted by a CDT installation is set to CHANNEL_DELETED.
  3   292*   multiplexer_mgr_ sets cdte.in_use to NOW_FREE at the next reload of its multiplexer.
  3   293*   A NOT_CONFIGURED channel is set to NOW_FREE immediately when deleted by a CDT installation. */
  3   294 
  3   295 
  3   296 /* Values for mpxe.state field */
  3   297 
  3   298 dcl	(
  3   299 	FNP_FREE		     init (0),		/* this fnpe is not used */
  3   300 	FNP_UNKNOWN	     init (1),		/* FNP is in some unknown state */
  3   301 	FNP_DOWN		     init (2),		/* FNP crashed, not yet reloaded */
  3   302 	FNP_BOOT		     init (3),		/* FNP has been booted, but no response yet */
  3   303 	FNP_UP		     init (4)		/* FNP is up and running fine */
  3   304 	)		     fixed bin internal static options (constant);
  3   305 
  3   306 dcl	(
  3   307 	MPX_FREE		     init (0),		/* this mpxe is not used */
  3   308 	MPX_UNKNOWN	     init (1),		/* MPX is in some unknown state */
  3   309 	MPX_DOWN		     init (2),		/* MPX crashed, not yet reloaded */
  3   310 	MPX_BOOT		     init (3),		/* MPX has been booted, but no response yet */
  3   311 	MPX_UP		     init (4)		/* MPX is up and running fine */
  3   312 	)		     fixed bin internal static options (constant);
  3   313 
  4     1 /* BEGIN INCLUDE FILE ... fnp_types.incl.pl1 */
  4     2 
  4     3 
  4     4 
  4     5 /****^  HISTORY COMMENTS:
  4     6*  1) change(88-06-15,Berno), approve(88-07-13,MCR7928),
  4     7*     audit(88-06-15,Parisek), install(88-07-19,MR12.2-1061):
  4     8*     Add data needed for the uncp multiplexer (DSA gateway) interface
  4     9*     implementation.
  4    10*                                                   END HISTORY COMMENTS */
  4    11 
  4    12 
  4    13 /* Values for fnpe.type field */
  4    14 /*
  4    15*   Created 79 May 14 by Art Beattie by splitting information out from cdt.incl.pl1
  4    16*   Added in March 1982 - DN7100.fd.
  4    17**/
  4    18 
  4    19 dcl (DN355 init (1),				/* a DataNet 355 FNP */
  4    20      DN6600 init (2),				/* a DataNet 6600 FNP */
  4    21      DN6670 init (3),				/* a Honeywell Bull Network Processor (18x) */
  4    22      DN7100 init (4)				/* The DSA Datanet architecture (DN7) */
  4    23      ) fixed bin internal static options (constant);
  4    24 
  4    25 dcl  fnp_types (4) char (8) int static options (constant)
  4    26      init ("DN355", "DN6600", "DN6670", "DN7100");
  4    27 
  4    28 dcl  fnp_models (4) fixed bin (17) int static options (constant)
  4    29      init (355, 6600, 6670, 7100);
  4    30 	
  4    31 dcl  supported_fnp (4) bit (1) int static options (constant)
  4    32      init ("0"b, "0"b, "1"b, "1"b);
  4    33 
  4    34 
  4    35 /* END INCLUDE FILE ... fnp_types.incl.pl1 */
  3   314 
  3   315 
  3   316 /* END INCLUDE FILE ... cdt.incl.pl1 */
       58 
  5     1 /* BEGIN INCLUDE FILE ... dialup_values.incl.pl1 */
  5     2 
  5     3 /* format: style4 */
  5     4 
  5     5 /* Values for "cdte.tra_vec" used by dialup_ and others. */
  5     6 
  5     7 /* Modified by T. Casey April 1976 to add WAIT_NEW_PASSWORD
  5     8*   -		in 1977 and 1978 to add WAIT_(GREETING_MSG DELETE_CHANNEL)
  5     9*   -		and in October 1979 to add WAIT_CONNECT_REQUEST
  5    10*   Modified by Robert Coren in May 1981 to add TANDD_ATTACH values and 
  5    11*		WAIT_DISCARD_WAKEUP
  5    12*   Modified by T. Casey, July 1981, for MR9.0, to add WAIT_BEFORE_HANGUP.
  5    13*   Modified by E. N. Kittlitz, July 1982, to add TTY_MASKED.
  5    14**/
  5    15 
  5    16 /****^  HISTORY COMMENTS:
  5    17*  1) change(87-04-20,GDixon), approve(87-07-13,MCR7741),
  5    18*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  5    19*     Add constant arrays naming cdte.state, cdte.tra_vec and ute.active values.
  5    20*  2) change(87-05-11,GDixon), approve(87-07-13,MCR7741),
  5    21*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  5    22*     Add named constants for instance tags.
  5    23*                                                   END HISTORY COMMENTS */
  5    24 
  5    25 dcl  (WAIT_DIALUP init (1),				/* Channel waiting for dialup. */
  5    26      WAIT_ANSWERBACK initial (2),			/* WRU sent, waiting for reply */
  5    27      WAIT_LOGIN_LINE init (3),			/* Greeting typed, wait for login command. */
  5    28      WAIT_LOGIN_ARGS init (4),			/* Want rest of login line */
  5    29      WAIT_OLD_PASSWORD init (5),			/* "-cpw" was specified. Wait for old password. */
  5    30      WAIT_PASSWORD init (6),				/* Waiting for password. (If "-cpw", repeat of new one.) */
  5    31      WAIT_NEW_PASSWORD init (7),			/* "-cpw" was specified. Wait for new password */
  5    32      WAIT_LOGOUT_SIG init (8),			/* Channel is hooked up. Wait for logout. */
  5    33      WAIT_LOGOUT init (9),				/* A logout has been requested. Wait for process to die */
  5    34      WAIT_LOGOUT_HOLD init (10),			/* As above but don't hang up when it dies. */
  5    35      WAIT_DETACH init (11),				/* As above but ignore channel afterwards. */
  5    36      WAIT_NEW_PROC init (12),				/* As above but make new process and continue. */
  5    37      WAIT_REMOVE init (13),				/* As above but completely expunge channel. */
  5    38      WAIT_FIN_PRIV_ATTACH init (14),			/* When channel dials up, connect it to user */
  5    39      WAIT_DIAL_RELEASE init (15),			/* Waiting for master process to release. */
  5    40      WAIT_DIAL_OUT init (16),				/* Waiting for auto call to complete */
  5    41      WAIT_HANGUP init (17),				/* Wait for the hangup event to occur for a channel */
  5    42      WAIT_SLAVE_REQUEST init (18),			/* Ignore line until someone asks */
  5    43      WAIT_GREETING_MSG init (19),			/* Print greeting message and wait for login line */
  5    44      WAIT_DELETE_CHANNEL init (20),			/* Channel deleted - mark cdte after process is destroyed */
  5    45      WAIT_CONNECT_REQUEST init (21),			/* logged in; awaiting request re disconnected processes */
  5    46      WAIT_TANDD_HANGUP init (22),			/* when channel hangs up, proceed with t & d attachment */
  5    47      WAIT_FIN_TANDD_ATTACH init (23),			/* when channel dials up, finish t & d attachment */
  5    48      WAIT_DISCARD_WAKEUPS init (24),			/* disregard all wakeups on channel */
  5    49      WAIT_BEFORE_HANGUP init (25),			/* allow output to print before hanging up */
  5    50      WAIT_DESTROY_REQUEST init (26),			/* waiting to continue with destroy request after process has destroyed itself */
  5    51      WAIT_NEW_PROC_REQUEST init (27)			/* waiting to continue with new_proc request after process has destroyed itself */
  5    52      ) fixed bin internal static options (constant);
  5    53 
  5    54 dcl  TRA_VEC_VALUES (0:13) char (32) aligned int static options (constant) init
  5    55 						/* names of ute.destroy_flag values */
  5    56 	("", "wait dialup", "wait answerback", "wait login line", /*  0-3  */
  5    57 	"wait login args", "wait old password", "wait password",  /*  4-6  */
  5    58 	"wait new password", "wait logout signal", "wait logout", /*  7-9  */
  5    59 	"wait logout hold", "wait detach", "wait new proc",       /* 10-12 */
  5    60 	"wait remove");				        /*   -13 */
  5    61 
  5    62 /* Values for "cdte.state", typewriter state. */
  5    63 
  5    64 dcl  (TTY_MASKED init (-1),				/* Terminal channel is there, but masked by MCS */
  5    65      TTY_HUNG init (1),				/* Terminal channel is there, but dead. */
  5    66      TTY_KNOWN init (2),				/* Channel being "listened" to, awaiting dialup. */
  5    67      TTY_DIALED init (5)				/* Channel is dialed up. This is normal state. */
  5    68      ) fixed bin internal static options (constant);
  5    69 
  5    70 dcl  STATE_VALUES (-1:5) char (15) aligned int static options (constant) init
  5    71 						/* names of cdte.state values */
  5    72 	("masked", "dead", "hung up", "listening", "", "", "dialed up");
  5    73 
  5    74 /* Values for "cdte.in_use" and "ate.active" */
  5    75 
  5    76 dcl  (NOW_FREE init (0),				/* Entry is empty. */
  5    77      NOW_HUNG_UP init (1),				/* Entry is usable but tty is hung up. */
  5    78      NOW_LISTENING init (2),				/* Entry is waiting for phone call. */
  5    79      NOW_DIALED init (3),				/* Entry is connected but login not complete. */
  5    80      NOW_LOGGED_IN init (4),				/* Entry is logged in but no process. */
  5    81      NOW_HAS_PROCESS init (5),			/* Entry has a valid process. */
  5    82      NOW_DIALING init (6),				/* Entry (auto_call line) is dialing */
  5    83      NOW_DIALED_OUT init (7)				/* Entry (auto_call line) is in use */
  5    84      ) fixed bin internal static options (constant);
  5    85 
  5    86 dcl  ACTIVE_VALUES (0:5) char (18) aligned int static options (constant) init
  5    87 						/* names of ute.active values */
  5    88 	("free", "hung-up", "listening", "dialed", "logged in, no proc", "logged in & proc");
  5    89 
  5    90 
  5    91 /**** Values for ute.tag */
  5    92 
  5    93 dcl (TAG_INTERACTIVE init("a"),
  5    94      TAG_UFT init("f"),
  5    95      TAG_ABSENTEE init("m"),
  5    96      TAG_PROXY init("p"),
  5    97      TAG_DAEMON init("z")
  5    98      ) char(1) int static options(constant);
  5    99 
  5   100 
  5   101 /**** Following are constants used to indicate to the process termination
  5   102*      handler the reason for the process termination.  They are used by
  5   103*      uc_proc_term_handler_, as well as uc_ls_new_proc_request_ and
  5   104*      uc_ls_destroy_request_. */
  5   105 
  5   106 dcl  (
  5   107      PT_FPE initial (1),
  5   108      PT_LOGOUT initial (4),
  5   109      PT_NEW_PROC_AUTH initial (13),
  5   110      PT_HANGUP initial (20),
  5   111      PT_SHUTDOWN initial (21),
  5   112      PT_BUMP initial (22),
  5   113      PT_ALARM initial (23),
  5   114      PT_DETACH initial (24),
  5   115      PT_UNBUMP initial (25),
  5   116      PT_OPERATOR_TERMINATE initial (27),
  5   117      PT_DESTROY_REQUEST initial (30),
  5   118      PT_NEW_PROC_REQUEST initial (31)
  5   119      ) fixed bin (17) internal static options (constant);
  5   120 
  5   121 /**** Values for ute.preempted:
  5   122*  -1  user unbumped after term signal sent
  5   123*   0  user unbumped; ignore alarm___
  5   124*   1  value internally used in load_ctl_
  5   125*   2  user bumped; when alarm___ comes in, send term signal
  5   126*   3  term signal sent; destroy process if termsgnl, alarm___, or cpulimit 
  5   127*      signals come in
  5   128*   4  user bumped; process sick, so destroy without sending term signal
  5   129*   5  trm_ signal sent, termsgnl received; (if still 3, we never got the 
  5   130*      termsgnl).						       */
  5   131 
  5   132 dcl  (
  5   133      PREEMPT_UNBUMP initial (-1),
  5   134      PREEMPT_UNBUMP_IGNORE_ALARM initial (0),
  5   135      PREEMPT_LOAD_CTL initial (1),
  5   136      PREEMPT_BUMPED initial (2),
  5   137      PREEMPT_TERM_SENT initial (3),
  5   138      PREEMPT_BUMPED_NO_TERM initial (4),
  5   139      PREEMPT_TERMSGNL_RECEIVED initial (5)
  5   140      ) fixed bin (17) internal static options(constant);
  5   141 
  5   142 dcl  PREEMPT_VALUES (-1:5) char(28) varying int static options(constant) init(
  5   143 	"unbumped",
  5   144 	"not bumped, ignore alarm___",
  5   145 	"load_ctl_",
  5   146 	"bumped",
  5   147 	"bumped, trm_ sent",
  5   148 	"bumped without trm_",
  5   149 	"bumped, termsgnl received");
  5   150 
  5   151 /* END INCLUDE FILE ... dialup_values.incl.pl1 */
       59 
       60 
       61 /* program */
       62 
       63 	cdtp = null;
       64           on cleanup call clean_up;
       65 	dname = ">system_control_1";
       66 	ename = "cdt";
       67 
       68 	call cu_$arg_ptr (1, arg_ptr, arg_len, code);
       69 	if code = 0 then do;
       70 	     call expand_path_ (arg_ptr, arg_len, addr (dname), addr (ename), code);
       71 	     if code ^= 0 then do;
       72 		call com_err_ (code, my_name, "^a", arg_string);
       73 		return;
       74 	     end;
       75 	end;
       76 
       77 	call hcs_$initiate (dname, ename, "", 0, 1, cdtp, code);
       78 	if cdtp = null then do;
       79 	     call com_err_ (code, my_name, "^a>^a", dname, ename);
       80 	     return;
       81 	end;
       82 
       83 	cdt.realtime_in_dialup = 0;
       84 	cdt.cpu_in_dialup = 0;
       85 	cdt.pf_in_dialup = 0;
       86 	cdt.pp_in_dialup = 0;
       87 	cdt.entries_to_dialup = 0;
       88 	now = clock ();
       89 	cdt.meters_last_reset = now;
       90 
       91 	do cdtex = 1 to cdt.current_size;
       92 	     cdtep = addr (cdt.cdt_entry (cdtex));
       93 
       94 	     cdte.n_dialups = 0;
       95 	     cdte.n_logins = 0;
       96 	     cdte.dialed_up_time = 0;
       97 	     if cdte.in_use < NOW_DIALED then
       98 		cdte.dialup_time = 0;
       99 	     else cdte.dialup_time = now;
      100 	end;
      101           call clean_up;
      102           return;
      103 
      104 clean_up: proc;
      105           if cdtp ^= null then
      106 	call hcs_$terminate_noname (cdtp, code);
      107 	return;
      108 
      109      end clean_up;
      110      end reset_cdt_meters;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    07/19/88  1536.1  reset_cdt_meters.pl1              >special_ldd>install>MR12.2-1061>reset_cdt_meters.pl1
57           1    09/09/75  2007.3  author_dcl.incl.pl1               >ldd>include>author_dcl.incl.pl1
1-10         2    04/21/82  1211.8  author.incl.pl1                   >ldd>include>author.incl.pl1
58           3    08/06/87  0913.0  cdt.incl.pl1                      >ldd>include>cdt.incl.pl1
3-314        4    07/19/88  1524.1  fnp_types.incl.pl1                >special_ldd>install>MR12.2-1061>fnp_types.incl.pl1
59           5    08/06/87  0913.4  dialup_values.incl.pl1            >ldd>include>dialup_values.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
NOW_DIALED                             constant        fixed bin(17,0)          initial dcl 5-76 ref 97
addr                                                   builtin function         dcl 49 ref 70 70 70 70 92
arg_len                         000100 automatic       fixed bin(21,0)          dcl 31 set ref 68* 70* 72 72
arg_ptr                         000102 automatic       pointer                  dcl 31 set ref 68* 70* 72
arg_string                             based           char                     packed unaligned dcl 45 set ref 72*
author                                 based           structure                level 2 dcl 1-9
author_dcl                             based           structure                level 1 dcl 1-9
cdt                                    based           structure                level 1 dcl 3-44
cdt_entry              1520            based           structure                array level 2 dcl 3-44 set ref 92
cdte                                   based           structure                level 1 dcl 3-72
cdtep                           000202 automatic       pointer                  dcl 3-41 set ref 92* 94 95 96 97 97 99
cdtex                           000104 automatic       fixed bin(17,0)          dcl 31 set ref 91* 92*
cdtp                            000200 automatic       pointer                  dcl 3-41 set ref 63* 77* 78 83 84 85 86 87 89 91 92
                                                                                  105 105*
channel_threads                        based           structure                level 1 dcl 3-249
cleanup                         000172 stack reference condition                dcl 53 ref 64
clock                                                  builtin function         dcl 49 ref 88
code                            000105 automatic       fixed bin(35,0)          dcl 31 set ref 68* 69 70* 71 72* 77* 79* 105*
com_err_                        000016 constant        entry                    external dcl 23 ref 72 79
cpu_in_dialup            46            based           fixed bin(71,0)          level 2 dcl 3-44 set ref 84*
cu_$arg_ptr                     000014 constant        entry                    external dcl 23 ref 68
current_size             36            based           fixed bin(17,0)          level 2 dcl 3-44 ref 91
dialed_up_time          123            based           fixed bin(35,0)          level 2 dcl 3-72 set ref 96*
dialup_time             124            based           fixed bin(71,0)          level 2 dcl 3-72 set ref 97* 99*
dname                           000106 automatic       char(168)                packed unaligned dcl 31 set ref 65* 70 70 77* 79*
ename                           000160 automatic       char(32)                 packed unaligned dcl 31 set ref 66* 70 70 77* 79*
entries_to_dialup        52            based           fixed bin(17,0)          level 2 dcl 3-44 set ref 87*
expand_path_                    000020 constant        entry                    external dcl 23 ref 70
fnpe                                   based           structure                level 1 dcl 3-200
hcs_$initiate                   000022 constant        entry                    external dcl 23 ref 77
hcs_$terminate_noname           000024 constant        entry                    external dcl 23 ref 105
in_use                                 based           fixed bin(17,0)          level 2 dcl 3-72 ref 97
meters_last_reset        42            based           fixed bin(71,0)          level 2 dcl 3-44 set ref 89*
mpxe                                   based           structure                level 1 dcl 3-221
my_name                         000010 internal static char(16)                 initial packed unaligned dcl 41 set ref 72* 79*
n_dialups               121            based           fixed bin(17,0)          level 2 dcl 3-72 set ref 94*
n_logins                122            based           fixed bin(17,0)          level 2 dcl 3-72 set ref 95*
now                             000170 automatic       fixed bin(71,0)          dcl 31 set ref 88* 89 99
null                                                   builtin function         dcl 49 ref 63 78 105
pf_in_dialup             50            based           fixed bin(17,0)          level 2 dcl 3-44 set ref 85*
pp_in_dialup             51            based           fixed bin(17,0)          level 2 dcl 3-44 set ref 86*
realtime_in_dialup       44            based           fixed bin(71,0)          level 2 dcl 3-44 set ref 83*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
ACTIVE                                 internal static fixed bin(17,0)          initial dcl 3-272
ACTIVE_VALUES                          internal static char(18)                 initial array dcl 5-86
ANS_SERVICE                            internal static fixed bin(17,0)          initial dcl 3-259
CDT_version                            internal static fixed bin(17,0)          initial dcl 3-39
CDT_version_5                          internal static fixed bin(17,0)          initial dcl 3-38
CHANNEL_DELETED                        internal static fixed bin(17,0)          initial dcl 3-288
DIAL_OUT_SERVICE                       internal static fixed bin(17,0)          initial dcl 3-259
DIAL_SERVICE                           internal static fixed bin(17,0)          initial dcl 3-259
DN355                                  internal static fixed bin(17,0)          initial dcl 4-19
DN6600                                 internal static fixed bin(17,0)          initial dcl 4-19
DN6670                                 internal static fixed bin(17,0)          initial dcl 4-19
DN7100                                 internal static fixed bin(17,0)          initial dcl 4-19
FNP_BOOT                               internal static fixed bin(17,0)          initial dcl 3-298
FNP_DOWN                               internal static fixed bin(17,0)          initial dcl 3-298
FNP_FREE                               internal static fixed bin(17,0)          initial dcl 3-298
FNP_UNKNOWN                            internal static fixed bin(17,0)          initial dcl 3-298
FNP_UP                                 internal static fixed bin(17,0)          initial dcl 3-298
FTP_SERVICE                            internal static fixed bin(17,0)          initial dcl 3-259
INACTIVE                               internal static fixed bin(17,0)          initial dcl 3-272
MC_SERVICE                             internal static fixed bin(17,0)          initial dcl 3-259
MPX_BOOT                               internal static fixed bin(17,0)          initial dcl 3-306
MPX_DOWN                               internal static fixed bin(17,0)          initial dcl 3-306
MPX_FREE                               internal static fixed bin(17,0)          initial dcl 3-306
MPX_SERVICE                            internal static fixed bin(17,0)          initial dcl 3-259
MPX_UNKNOWN                            internal static fixed bin(17,0)          initial dcl 3-306
MPX_UP                                 internal static fixed bin(17,0)          initial dcl 3-306
NOT_CONFIGURED                         internal static fixed bin(17,0)          initial dcl 3-280
NOW_DIALED_OUT                         internal static fixed bin(17,0)          initial dcl 5-76
NOW_DIALING                            internal static fixed bin(17,0)          initial dcl 5-76
NOW_FREE                               internal static fixed bin(17,0)          initial dcl 5-76
NOW_HAS_PROCESS                        internal static fixed bin(17,0)          initial dcl 5-76
NOW_HUNG_UP                            internal static fixed bin(17,0)          initial dcl 5-76
NOW_LISTENING                          internal static fixed bin(17,0)          initial dcl 5-76
NOW_LOGGED_IN                          internal static fixed bin(17,0)          initial dcl 5-76
PREEMPT_BUMPED                         internal static fixed bin(17,0)          initial dcl 5-132
PREEMPT_BUMPED_NO_TERM                 internal static fixed bin(17,0)          initial dcl 5-132
PREEMPT_LOAD_CTL                       internal static fixed bin(17,0)          initial dcl 5-132
PREEMPT_TERMSGNL_RECEIVED              internal static fixed bin(17,0)          initial dcl 5-132
PREEMPT_TERM_SENT                      internal static fixed bin(17,0)          initial dcl 5-132
PREEMPT_UNBUMP                         internal static fixed bin(17,0)          initial dcl 5-132
PREEMPT_UNBUMP_IGNORE_ALARM            internal static fixed bin(17,0)          initial dcl 5-132
PREEMPT_VALUES                         internal static varying char(28)         initial array dcl 5-142
PT_ALARM                               internal static fixed bin(17,0)          initial dcl 5-106
PT_BUMP                                internal static fixed bin(17,0)          initial dcl 5-106
PT_DESTROY_REQUEST                     internal static fixed bin(17,0)          initial dcl 5-106
PT_DETACH                              internal static fixed bin(17,0)          initial dcl 5-106
PT_FPE                                 internal static fixed bin(17,0)          initial dcl 5-106
PT_HANGUP                              internal static fixed bin(17,0)          initial dcl 5-106
PT_LOGOUT                              internal static fixed bin(17,0)          initial dcl 5-106
PT_NEW_PROC_AUTH                       internal static fixed bin(17,0)          initial dcl 5-106
PT_NEW_PROC_REQUEST                    internal static fixed bin(17,0)          initial dcl 5-106
PT_OPERATOR_TERMINATE                  internal static fixed bin(17,0)          initial dcl 5-106
PT_SHUTDOWN                            internal static fixed bin(17,0)          initial dcl 5-106
PT_UNBUMP                              internal static fixed bin(17,0)          initial dcl 5-106
SLAVE_SERVICE                          internal static fixed bin(17,0)          initial dcl 3-259
STATE_VALUES                           internal static char(15)                 initial array dcl 5-70
TAG_ABSENTEE                           internal static char(1)                  initial packed unaligned dcl 5-93
TAG_DAEMON                             internal static char(1)                  initial packed unaligned dcl 5-93
TAG_INTERACTIVE                        internal static char(1)                  initial packed unaligned dcl 5-93
TAG_PROXY                              internal static char(1)                  initial packed unaligned dcl 5-93
TAG_UFT                                internal static char(1)                  initial packed unaligned dcl 5-93
TANDD_SERVICE                          internal static fixed bin(17,0)          initial dcl 3-259
TRA_VEC_VALUES                         internal static char(32)                 initial array dcl 5-54
TTY_DIALED                             internal static fixed bin(17,0)          initial dcl 5-64
TTY_HUNG                               internal static fixed bin(17,0)          initial dcl 5-64
TTY_KNOWN                              internal static fixed bin(17,0)          initial dcl 5-64
TTY_MASKED                             internal static fixed bin(17,0)          initial dcl 5-64
WAIT_ANSWERBACK                        internal static fixed bin(17,0)          initial dcl 5-25
WAIT_BEFORE_HANGUP                     internal static fixed bin(17,0)          initial dcl 5-25
WAIT_CONNECT_REQUEST                   internal static fixed bin(17,0)          initial dcl 5-25
WAIT_DELETE_CHANNEL                    internal static fixed bin(17,0)          initial dcl 5-25
WAIT_DESTROY_REQUEST                   internal static fixed bin(17,0)          initial dcl 5-25
WAIT_DETACH                            internal static fixed bin(17,0)          initial dcl 5-25
WAIT_DIALUP                            internal static fixed bin(17,0)          initial dcl 5-25
WAIT_DIAL_OUT                          internal static fixed bin(17,0)          initial dcl 5-25
WAIT_DIAL_RELEASE                      internal static fixed bin(17,0)          initial dcl 5-25
WAIT_DISCARD_WAKEUPS                   internal static fixed bin(17,0)          initial dcl 5-25
WAIT_FIN_PRIV_ATTACH                   internal static fixed bin(17,0)          initial dcl 5-25
WAIT_FIN_TANDD_ATTACH                  internal static fixed bin(17,0)          initial dcl 5-25
WAIT_GREETING_MSG                      internal static fixed bin(17,0)          initial dcl 5-25
WAIT_HANGUP                            internal static fixed bin(17,0)          initial dcl 5-25
WAIT_LOGIN_ARGS                        internal static fixed bin(17,0)          initial dcl 5-25
WAIT_LOGIN_LINE                        internal static fixed bin(17,0)          initial dcl 5-25
WAIT_LOGOUT                            internal static fixed bin(17,0)          initial dcl 5-25
WAIT_LOGOUT_HOLD                       internal static fixed bin(17,0)          initial dcl 5-25
WAIT_LOGOUT_SIG                        internal static fixed bin(17,0)          initial dcl 5-25
WAIT_NEW_PASSWORD                      internal static fixed bin(17,0)          initial dcl 5-25
WAIT_NEW_PROC                          internal static fixed bin(17,0)          initial dcl 5-25
WAIT_NEW_PROC_REQUEST                  internal static fixed bin(17,0)          initial dcl 5-25
WAIT_OLD_PASSWORD                      internal static fixed bin(17,0)          initial dcl 5-25
WAIT_PASSWORD                          internal static fixed bin(17,0)          initial dcl 5-25
WAIT_REMOVE                            internal static fixed bin(17,0)          initial dcl 5-25
WAIT_SLAVE_REQUEST                     internal static fixed bin(17,0)          initial dcl 5-25
WAIT_TANDD_HANGUP                      internal static fixed bin(17,0)          initial dcl 5-25
fnp_models                             internal static fixed bin(17,0)          initial array dcl 4-28
fnp_types                              internal static char(8)                  initial array packed unaligned dcl 4-25
fnpep                                  automatic       pointer                  dcl 3-41
generic_destination                    based           char(32)                 packed unaligned dcl 3-195
mpxep                                  automatic       pointer                  dcl 3-41
supported_fnp                          internal static bit(1)                   initial array packed unaligned dcl 4-31

NAMES DECLARED BY EXPLICIT CONTEXT.
clean_up                        000350 constant        entry                    internal dcl 104 ref 64 101
reset_cdt_meters                000032 constant        entry                    external dcl 18

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       500         526     373         510
Length      1010     373        26         246     105           4

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
reset_cdt_meters                    210 external procedure  is an external procedure.  
on unit on line 64                   64 on unit               
clean_up                             70 internal procedure  is called by several nonquick procedures.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 my_name                     reset_cdt_meters

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
reset_cdt_meters         000100 arg_len                     reset_cdt_meters
                         000102 arg_ptr                     reset_cdt_meters
                         000104 cdtex                       reset_cdt_meters
                         000105 code                        reset_cdt_meters
                         000106 dname                       reset_cdt_meters
                         000160 ename                       reset_cdt_meters
                         000170 now                         reset_cdt_meters
                         000200 cdtp                        reset_cdt_meters
                         000202 cdtep                       reset_cdt_meters

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        call_int_this       call_int_other      return_mac          enable_op
ext_entry           int_entry           clock_mac

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      cu_$arg_ptr                   expand_path_                  hcs_$initiate
hcs_$terminate_noname

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     18 000031        63 000037        64 000041        65 000063        66 000066        68 000071        69 000110
     70 000112        71 000135        72 000137        73 000171        77 000172        78 000236        79 000242
     80 000275        83 000276        84 000301        85 000302        86 000303        87 000304        88 000305
     89 000307        91 000311        92 000321        94 000325        95 000326        96 000327        97 000330
     99 000336       100 000340       101 000342       102 000346       104 000347       105 000355       107 000372


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
