	COMPILATION LISTING OF SEGMENT display_any_node_name
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/15/82  1623.1 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 display_any_node_name: proc(string,p,tree_level);
       12 
       13 /*	Modified: 	26 July 1971 by PG 
       14*	Modified:		9 Oct 1975 by RAB
       15*	Modified:		25 Dec 1977 by RAB
       16*	Modified:		29 Nov 1979 by PCK to produce tree level indented output */
       17 
       18 dcl p ptr,
       19     tree_level fixed bin,
       20     ioa_ ext entry options(variable),
       21 	(fixed,hbound,null) builtin,
       22     j fixed bin(17),
       23     string char(*);
       24 
       25 dcl names(0:20) char(20) aligned int static options(constant) init(
       26     " zero"," block"," statement","n operator"," reference",
       27     " token"," symbol"," context","n array"," bound"," format value",
       28     " list"," default"," machine state"," source"," label"," cross ref",
       29     " sf par"," temporary"," label_array_element","n ILLEGAL");
       30 
  1     1 /* BEGIN INCLUDE FILE ... nodes.incl.pl1 */
  1     2 
  1     3 /* Modified: 26 Dec 1979 by PCK to implement by name assignment */
  1     4 
  1     5 dcl (	block_node		initial("000000001"b),
  1     6 	statement_node		initial("000000010"b),
  1     7 	operator_node		initial("000000011"b),
  1     8 	reference_node		initial("000000100"b),
  1     9 	token_node		initial("000000101"b),
  1    10 	symbol_node		initial("000000110"b),
  1    11 	context_node		initial("000000111"b),
  1    12 	array_node		initial("000001000"b),
  1    13 	bound_node		initial("000001001"b),
  1    14 	format_value_node		initial("000001010"b),
  1    15 	list_node			initial("000001011"b),
  1    16 	default_node		initial("000001100"b),
  1    17 	machine_state_node		initial("000001101"b),
  1    18 	source_node		initial("000001110"b),
  1    19 	label_node		initial("000001111"b),
  1    20 	cross_reference_node	initial("000010000"b),
  1    21 	sf_par_node		initial("000010001"b),
  1    22 	temporary_node		initial("000010010"b),
  1    23 	label_array_element_node	initial("000010011"b),
  1    24 	by_name_agg_node		initial("000010100"b))
  1    25 				bit(9) internal static aligned options(constant);
  1    26 
  1    27 dcl	1 node			based aligned,
  1    28 	2 type			unal bit(9),
  1    29 	2 source_id		unal structure,
  1    30 	  3 file_number		bit(8),
  1    31 	  3 line_number		bit(14),
  1    32 	  3 statement_number	bit(5);
  1    33 
  1    34 /* END INCLUDE FILE ... nodes.incl.pl1 */
       31 
       32 
       33 if p = null then do;
       34 	call ioa_("^/^vx^a NULL^/",tree_level,string);
       35 	return;
       36 	end;
       37 
       38 j = fixed(p->node.type,17,0);
       39 if j >= hbound(names,1) then j = hbound(names,1);
       40 call ioa_("^/^vx^a ^p, a^a node.^/",tree_level,string,p,names(j));
       41 return;
       42 end display_any_node_name;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/15/82  1502.7  display_any_node_name.pl1         >dumps>old>recomp>display_any_node_name.pl1
31           1    07/21/80  1546.3  nodes.incl.pl1                    >ldd>include>nodes.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
fixed                                                  builtin function         dcl 18 ref 38
hbound                                                 builtin function         dcl 18 ref 39 39
ioa_                            000010 constant        entry                    external dcl 18 ref 34 40
j                               000100 automatic       fixed bin(17,0)          dcl 18 set ref 38* 39 39* 40
names                           000000 constant        char(20)                 initial array dcl 25 set ref 39 39 40*
node                                   based           structure                level 1 dcl 1-27
null                                                   builtin function         dcl 18 ref 33
p                                      parameter       pointer                  dcl 18 set ref 11 33 38 40*
string                                 parameter       char                     unaligned dcl 18 set ref 11 34* 40*
tree_level                             parameter       fixed bin(17,0)          dcl 18 set ref 11 34* 40*
type                                   based           bit(9)                   level 2 packed unaligned dcl 1-27 ref 38

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
array_node                             internal static bit(9)                   initial dcl 1-5
block_node                             internal static bit(9)                   initial dcl 1-5
bound_node                             internal static bit(9)                   initial dcl 1-5
by_name_agg_node                       internal static bit(9)                   initial dcl 1-5
context_node                           internal static bit(9)                   initial dcl 1-5
cross_reference_node                   internal static bit(9)                   initial dcl 1-5
default_node                           internal static bit(9)                   initial dcl 1-5
format_value_node                      internal static bit(9)                   initial dcl 1-5
label_array_element_node               internal static bit(9)                   initial dcl 1-5
label_node                             internal static bit(9)                   initial dcl 1-5
list_node                              internal static bit(9)                   initial dcl 1-5
machine_state_node                     internal static bit(9)                   initial dcl 1-5
operator_node                          internal static bit(9)                   initial dcl 1-5
reference_node                         internal static bit(9)                   initial dcl 1-5
sf_par_node                            internal static bit(9)                   initial dcl 1-5
source_node                            internal static bit(9)                   initial dcl 1-5
statement_node                         internal static bit(9)                   initial dcl 1-5
symbol_node                            internal static bit(9)                   initial dcl 1-5
temporary_node                         internal static bit(9)                   initial dcl 1-5
token_node                             internal static bit(9)                   initial dcl 1-5

NAME DECLARED BY EXPLICIT CONTEXT.
display_any_node_name           000200 constant        entry                    external dcl 11

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       352         364     316         362
Length       546     316        12         145      34           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
display_any_node_name               106 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
display_any_node_name    000100 j                           display_any_node_name

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   return              ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
ioa_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000174        33 000213        34 000220        35 000244        38 000245        39 000251        40 000255
     41 000315


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
