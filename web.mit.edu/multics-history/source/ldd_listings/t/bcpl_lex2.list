Compilation listing of file >2.1spec>online>mib083074>bcpl_lex2.bcpl.
Compilation performed for Martinson.SysMaint.a at 01/24/75  0659.5 mst Fri.
Compiled by BCPL version 3.4, August 1973.  Compiler updated at 09/25/73  0959.1 mst Tue.
Options applied:  source  xref  alist  optimize  6180.

     1	//  These routines are used for initialization of the lexical analyzer.
     2	//  Last modified on 06/06/74 at 18:25:59 by R F Mabee.
     3	//  Prepared for installation with Version 3.4, R F Mabee.
     4	//  Rewritten in March 1973 to predefine reserved words rather than recognize then algorithmically (old Lookupword).
     5	//  First version installed in Version 2.7, R F Mabee.
     6	
     7	//  Copyright (c) 1974 by Massachusetts Institute of Technology and Honeywell Information Systems, Inc.
     8	
     9	//  General permission is granted to copy and use this program, but not to sell it, provided that the above
    10	//  copyright statement is given.  Contact Information Processing Services, MIT, for further information.
    11	//  Please contact R F Mabee at MIT for information on this program and versions for other machines.
    12	
    13	get "bcpl_lex_head"
	     1	//  Declarations entirely restricted to the lexical analysis phase.
	     2	//  Last modified on 07/21/73 at 23:41:22 by R F Mabee.
	     3	//  Installed on 6180 as Version 3.4, R F Mabee.
	     4	//  First installed with Version 2.7 by R F Mabee.
	     5	
	     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
	     7	//  This file may only be reproduced or modified with explicit written
	     8	//  permission of the author.  Permission is hereby extended to those
	     9	//  persons responsible for operating the Multics system to make such
	    10	//  copies as are normally required to ensure the integrity of the Multics
	    11	//  file system.  Permission is also hereby extended to those persons
	    12	//  responsible for maintaining the Multics program libraries to make such
	    13	//  copies as are normally required for online installations.
	    14	
	    15	get "bcpl_compiler_head"
		     1	//  Declarations common to the entire BCPL compiler.
		     2	//  Last modified on 07/28/73 at 03:56:32 by R F Mabee.
		     3	//  Installed on 6180 as Version 3.4, R F Mabee.
		     4	//  First installed on 645 as Version 2.7 by R F Mabee.
		     5	
		     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
		     7	//  This file may only be reproduced or modified with explicit written
		     8	//  permission of the author.  Permission is hereby extended to those
		     9	//  persons responsible for operating the Multics system to make such
		    10	//  copies as are normally required to ensure the integrity of the Multics
		    11	//  file system.  Permission is also hereby extended to those persons
		    12	//  responsible for maintaining the Multics program libraries to make such
		    13	//  copies as are normally required for online installations.
		    14	
		    15	external
		    16	     $(	Readch = "bcpl_machine_code_$Readch"		//  Library routines used by the compiler.
		    17		Writech = "bcpl_machine_code_$Writech"
		    18		WriteS = "bcpl_stream_io_$WriteS"
		    19		WriteN = "bcpl_stream_io_$WriteN"
		    20		Format = "bcpl_stream_io_$Format"
		    21		Packstring = "bcpl_machine_code_$Packstring"
		    22		Unpackstring = "bcpl_machine_code_$Unpackstring"
		    23		RemoveEscapes = "bcpl_conversions_$RemoveEscapes"
		    24		EqualString = "bcpl_strings_$EqualString"
		    25		CompareStrings = "bcpl_strings_$CompareStrings"	//  Alphabetic comparison.
		    26		Concatenate = "bcpl_strings_$Concatenate"
		    27		ConvertStoN = "bcpl_conversions_$ConvertStoN"
		    28		ConvertNtoS = "bcpl_conversions_$ConvertNtoS"
		    29		Length = "bcpl_strings_$Length"		//  Number of characters.
		    30		LengthInWords = "bcpl_strings_$LengthInWords"	//  Length of packed string.
		    31		RandomI = "bcpl_arithmetic_$RandomI"
		    32	
		    33		Newvec = "bcpl_utility$Newvec"		//  Utility routines used throughout the compiler.
		    34		Freevec = "bcpl_utility$Freevec"
		    35		List1 = "bcpl_utility$List1"
		    36		List2 = "bcpl_utility$List2"
		    37		List3 = "bcpl_utility$List3"
		    38		List4 = "bcpl_utility$List4"
		    39		List5 = "bcpl_utility$List5"
		    40		List6 = "bcpl_utility$List6"
		    41		StoreString = "bcpl_utility$StoreString"
		    42		PushInput = "bcpl_utility$PushInput"
		    43		PopInput = "bcpl_utility$PopInput"
		    44		MakeTimeString = "bcpl_utility$MakeTimeString"
		    45		Nextparam = "bcpl_utility$Nextparam"
		    46		FormCharconst = "bcpl_utility$FormCharconst"
		    47		FormStringconst = "bcpl_utility$FormStringconst"
		    48	
		    49		CaeReport = "bcpl_report$CaeReport"
		    50		Transreport = "bcpl_report$Transreport"
		    51		CGreport = "bcpl_report$CGreport"
		    52	
		    53		Nextsymb = "bcpl_lex0$Nextsymb"
		    54	
		    55		SymbolName = "bcpl_plist$SymbolName"
		    56		FindPrintName = "bcpl_plist$FindPrintName"
		    57		EnterIntoCrossreference = "bcpl_plist$EnterIntoCrossreference"
		    58	
		    59		GetVersion = "bcpl_version$GetVersion"		//  Routines used only by the driver.
		    60		UtilitiesInit = "bcpl_utility$UtilitiesInit"
		    61		Cleanup = "bcpl_utility$Cleanup"
		    62		GetStream = "bcpl_utility$GetStream"
		    63	
		    64		CAE = "bcpl_cae0$CAE"
		    65		LexInit = "bcpl_lex0$LexInit"
		    66	
		    67		Pname = "bcpl_plist$Pname"
		    68		Plist = "bcpl_plist$Plist"
		    69	
		    70		Trans = "bcpl_trans0$Trans"
		    71		CgInit = "bcpl_cg0$CgInit"
		    72		BuildObject = "bcpl_cg0$BuildObject"
		    73		WriteObjectListing = "bcpl_cg0$WriteObjectListing"
		    74	     $)
		    75	
		    76	global		//  Globals are reserved in blocks as follows:
		    77	     $(	//    0 -  31	system
		    78		//   32 -  99	library
		    79		//  100 - 149	options and other common cells
		    80		//  150 - 159	metering cells
		    81		//  160 - 169	bcpl_utility
		    82		//  170 - 199	to be assigned
		    83		//  200 - 229	lexical phase
		    84		//  230 - 249	syntax analyzer
		    85		//  250 - 299	translator
		    86		//  300 - 399	code generator
		    87	
		    88			//  Cells used for communication with the library.
		    89		OUTPUT		: 32
		    90		INPUT		: 33
		    91		MONITOR		: 34
		    92		Ch		: 36
		    93	
		    94			//  Options for this compilation.
		    95		Listing		: 100
		    96		UpperCase		: 101
		    97		PPrep		: 102
		    98		Crep		: 103
		    99		Symbols		: 104
		   100		LineMap		: 105
		   101		Optimize		: 106
		   102		Machine		: 107
		   103		Xref		: 108
		   104		OcodeSw		: 109
		   105		HaveListingFile	: 110
		   106		QuietSw		: 111
		   107	
		   108			//  Other information about this compilation.
		   109		CompilerVersionString : 120
		   110		CompilerVersionNumber : 121
		   111		CompilerDTMString	: 122
		   112		CompilerDTM	: 123
		   113		TimeNowString	: 124
		   114		TimeNow		: 125
		   115		OptionString	: 126
		   116		FileNames		: 127
		   117		FilesInfo		: 128
		   118		FileCount		: 129
		   119		ProgramName	: 130
		   120		UserID		: 131
		   121	
		   122			//  Working variables needing global scope.
		   123		LineCount		: 140
		   124		Errorsw		: 141
		   125		NAMECHAIN		: 142
		   126		Symb		: 143
		   127		DictionaryEntry	: 144
		   128		Column		: 145
		   129	     $)
		   130	manifest
		   131	     $(	GlobalTemp = 199  $)	//  Number of cell available for local, temporary use.
		   132	
		   133	manifest
		   134	     $(	Left = 18; Right = $8777777
		   135		Endofstreamch = $87777
		   136		Even = $87777777777776
		   137		Vmax = 511
		   138		LineMask = $817777; FileShift = 13	//  Breakdown of line count.
		   139		UnexpectedCase = 99		//  Error code for use throughout compiler.
		   140	     $)
	    16	get "bcpl_symbols"
		     1	//  All symbols used in the interface between any two phases of the compiler are defined here.
		     2	//  This includes all canonical symbols, syntax tree nodes, and XOCODE operators.
		     3	//  Last modified on 07/08/73 at 22:55:31 by R F Mabee.
		     4	//  Revisions installed in Version 3.4 on 6180, R F Mabee.
		     5	//  First installed with Version 2.7 by R F Mabee.
		     6	
		     7	//  Copyright (c) 1973 by the author, Robert F. Mabee.
		     8	//  This file may only be reproduced or modified with explicit written
		     9	//  permission of the author.  Permission is hereby extended to those
		    10	//  persons responsible for operating the Multics system to make such
		    11	//  copies as are normally required to ensure the integrity of the Multics
		    12	//  file system.  Permission is also hereby extended to those persons
		    13	//  responsible for maintaining the Multics program libraries to make such
		    14	//  copies as are normally required for online installations.
		    15	
		    16	manifest
		    17	     $(	AND_S = 1
		    18		ASSIGN_S = 2
		    19		BE_S = 3
		    20		BIT_S = 4
		    21		BREAK_S = 5
		    22		BY_S = 6
		    23		CALL_S = 07
		    24		CASE_S = 08
		    25	
		    26		CHAR_S = 10
		    27		CHARCONST_S = 11
		    28		COLON_S = 12
		    29		COMMA_S = 13
		    30		COND_S = 14
		    31		CONSTANT_S = 15
		    32		CONSTDEF_S = 16
		    33		DEFAULT_S = 17
		    34		DIV_F = 18
		    35	
		    36		DIV_S = 20
		    37		DO_S = 21
		    38		DOUBLE_S = 22
		    39		ENDCASE_S = 23
		    40		ENDPROG_S = 24
		    41		ERROR_S = 25
		    42		EQ_F = 26
		    43		EQ_S = 27
		    44		EQV_S = 28
		    45	
		    46		EXTERNAL_S = 30
		    47		FALSE_S = 31
		    48		FINISH_S = 32
		    49		FIXED_S = 33
		    50		FLOAT_S = 34
		    51		FNAP_S = 35
		    52		FNDEF_S = 36
		    53		FOR_S = 37
		    54		GE_F = 38
		    55	
		    56		GE_S = 40
		    57		GET_S = 41
		    58		GLOBAL_S = 42
		    59		GOTO_S = 43
		    60		GR_F = 44
		    61		GR_S = 45
		    62		IF_S = 46
		    63		IFNOT_S = 47
		    64		IFSO_S = 48
		    65	
		    66		INTO_S = 50
		    67		LABDEF_S = 51
		    68		LABEL_S = 52
		    69		LE_F = 53
		    70		LE_S = 54
		    71		LENGTH_S = 55
		    72		LET_S = 56
		    73		LIST_S = 57
		    74		LOCAL_S = 58
		    75	
		    76		LOGAND_S = 60
		    77		LOGOR_S = 61
		    78		LOOP_S = 62
		    79		LS_F = 63
		    80		LS_S = 64
		    81		LSHIFT_S = 65
		    82		LV_S = 66
		    83		LVECAP_S = 67
		    84		LV_ARG_OUT = 68
		    85	
		    86		LV_FNAP_RESULT = 70
		    87		LV_GLOBAL = 71
		    88		LV_LOCAL = 72
		    89		LV_STATIC = 73
		    90		LV_TEMP = 74
		    91		MAIN_S = 75
		    92		MANIFEST_S = 76
		    93		MINUS_F = 77
		    94		MINUS_S = 78
		    95	
		    96		MULT_F = 80
		    97		MULT_S = 81
		    98		NAME_S = 82
		    99		NEG_F = 83
		   100		NEG_S = 84
		   101		NEQV_S = 85
		   102		NE_F = 86
		   103		NE_S = 87
		   104		NIL_S = 88
		   105	
		   106		NOT_S = 90
		   107		NUMBER_S = 91
		   108		OFFSET_S = 92
		   109		OR_S = 93
		   110		PLUS_F = 94
		   111		PLUS_S = 95
		   112		POINTER_S = 96
		   113		POS_F = 97
		   114		POS_S = 98
		   115	
		   116		RBRA_S = 100
		   117		REGISTER_S = 101
		   118		REL_S = 102
		   119		REM_S = 103
		   120		REP_S = 104
		   121		REPEAT_S = 105
		   122		REPEATUNTIL_S = 106
		   123		REPEATWHILE_S = 107
		   124		RESULTIS_S = 108
		   125	
		   126		RETURN_S = 110
		   127		RKET_S = 111
		   128		RSHIFT_S = 112
		   129		RTAP_S = 113
		   130		RTDEF_S = 114
		   131		RV_S = 115
		   132		SBRA_S = 116
		   133		SECTBEGIN_S = 117
		   134		SECTBRA_S = 118
		   135	
		   136		SECTEND_S = 120
		   137		SECTKET_S = 121
		   138		SEMICOLON_S = 122
		   139		SKET_S = 123
		   140		STATIC_S = 124
		   141		STRING_S = 125
		   142		STRINGCONST_S = 126
		   143		STRUCTURE_S = 127
		   144		SWITCHON_S = 128
		   145	
		   146		TABLE_S = 130
		   147		TEMP_S = 131
		   148		TEST_S = 132
		   149		TO_S = 133
		   150		TRUE_S = 134
		   151		TYPE_S = 135
		   152		UNLESS_S = 136
		   153		UNTIL_S = 137
		   154		VALDEF_S = 138
		   155	
		   156		VALOF_S = 140
		   157		VEC_S = 141
		   158		VECAP_S = 142
		   159		WHILE_S = 143
		   160	     $)
	    17	get "bcpl_lex_codes"
		     1	//  Report codes for the lexical analyzer.
		     2	//  Last modified on 07/05/73 at 23:01:26 by R F Mabee.
		     3	//  Installed on 6180 Multics as Version 3.4 by R F Mabee.
		     4	//  First installed with Version 2.7, R F Mabee.
		     5	
		     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
		     7	//  This file may only be reproduced or modified with explicit written
		     8	//  permission of the author.  Permission is hereby extended to those
		     9	//  persons responsible for operating the Multics system to make such
		    10	//  copies as are normally required to ensure the integrity of the Multics
		    11	//  file system.  Permission is also hereby extended to those persons
		    12	//  responsible for maintaining the Multics program libraries to make such
		    13	//  copies as are normally required for online installations.
		    14	
		    15	manifest		//  100 - 149 are reserved for the lexical phase.
		    16	     $(	BadCharacter	= 100
		    17		BadDollar		= 101
		    18		BadFloat		= 102
		    19		BadNumber		= 103
		    20		BadSystemword	= 104
		    21		GetStringMissing	= 105
		    22		TokenTooLong	= 106
		    23	     $)
	    18	
	    19	external
	    20	     $(	Rch = "bcpl_lex0$Rch"
	    21		EnterIntoDictionary = "bcpl_lex0$EnterIntoDictionary"
	    22		Nsymb = "bcpl_lex1$Nsymb"
	    23		LoadDictionary = "bcpl_lex2$LoadDictionary"
	    24	     $)
	    25	global		//  200 - 229 are reserved for the lexical phase.
	    26	     $(	ST		: 200		//  Internal switches etc. for Lex.
	    27		SavedSymb		: 201
	    28		V		: 202
	    29		Vp		: 203
	    30		NLPending		: 204
	    31		Lvch		: 205
	    32		Chkind		: 206
	    33		BeginNewLine	: 207
	    34		EndCurrentLine	: 208
	    35	
	    36		EndOfAllInputReached: 210
	    37		NestingDepth	: 211
	    38		NamesTable	: 212
	    39	     $)
	    40	manifest
	    41	     $(	Ignorable	= 1		//  Codes for Chkind - always set to type of current character.
	    42		Endline	= 2
	    43		Bracket	= 3
	    44		Simple	= 4
	    45		Digit	= 6		//  Order is important from here on.
	    46		Small	= 7
	    47		Capital	= 8
	    48		UnderScore= 9
	    49	     $)
    14	
    15	
    16	//  This routine applies a given routine to all the system words and their internal codes.
    17	
    18	let MapSystemwords (MapF) be
    19	     $(	MapF ("and", AND_S)
    20	
    21		MapF ("break", BREAK_S); MapF ("be", BE_S); MapF ("begin", SECTBEGIN_S)
    22		MapF ("bit", BIT_S); MapF ("by", BY_S)
    23	
    24		MapF ("case", CASE_S); MapF ("call", CALL_S); MapF ("char", CHAR_S)
    25	
    26		MapF ("do", DO_S); MapF ("default", DEFAULT_S); MapF ("double", DOUBLE_S)
    27	
    28		MapF ("endcase", ENDCASE_S); MapF ("else", OR_S); MapF ("end", SECTEND_S)
    29		MapF ("eqv", EQV_S); MapF ("external", EXTERNAL_S); MapF ("eq", EQ_S)
    30	
    31		MapF ("for", FOR_S); MapF ("false", FALSE_S); MapF ("fixed", FIXED_S)
    32		MapF ("finish", FINISH_S); MapF ("float", FLOAT_S)
    33	
    34		MapF ("goto", GOTO_S); MapF ("ge", GE_S); MapF ("get", GET_S)
    35		MapF ("global", GLOBAL_S); MapF ("gr", GR_S)
    36	
    37		MapF ("if", IF_S); MapF ("ifso", IFSO_S); MapF ("ifnot", IFNOT_S)
    38		MapF ("into", INTO_S)
    39	
    40		MapF ("let", LET_S); MapF ("le", LE_S); MapF ("loop", LOOP_S)
    41		MapF ("logand", LOGAND_S); MapF ("logor", LOGOR_S); MapF ("length", LENGTH_S)
    42		MapF ("list", LIST_S); MapF ("lshift", LSHIFT_S); MapF ("lv", LV_S)
    43		MapF ("ls", LS_S)
    44	
    45		MapF ("manifest", MANIFEST_S); MapF ("main", MAIN_S)
    46	
    47		MapF ("nil", NIL_S); MapF ("not", NOT_S); MapF ("ne", NE_S)
    48		MapF ("neqv", NEQV_S)
    49	
    50		MapF ("or", OR_S); MapF ("offset", OFFSET_S); MapF ("otherwise", OR_S)
    51	
    52		MapF ("pointer", POINTER_S); MapF ("ptr", POINTER_S)
    53	
    54		MapF ("repeatuntil", REPEATUNTIL_S); MapF ("resultis", RESULTIS_S); MapF ("rem", REM_S)
    55		MapF ("repeatwhile", REPEATWHILE_S); MapF ("rshift", RSHIFT_S); MapF ("return", RETURN_S)
    56		MapF ("repeat", REPEAT_S); MapF ("rv", RV_S); MapF ("rep", REP_S)
    57	
    58		MapF ("static", STATIC_S); MapF ("structure", STRUCTURE_S); MapF ("switchon", SWITCHON_S)
    59		MapF ("string", STRING_S); MapF ("step", BY_S)
    60	
    61		MapF ("then", DO_S); MapF ("table", TABLE_S); MapF ("test", TEST_S)
    62		MapF ("true", TRUE_S); MapF ("type", TYPE_S); MapF ("to", TO_S)
    63	
    64		MapF ("unless", UNLESS_S); MapF ("until", UNTIL_S)
    65	
    66		MapF ("valof", VALOF_S); MapF ("vec", VEC_S)
    67	
    68		MapF ("while", WHILE_S)
    69	     $)
    70	
    71	//  Initialize the dictionary to contain all reserved words for faster lookup later.
    72	
    73	let LoadDictionary () be
    74	     $(	MapSystemwords (DefineSystemword)
    75		if UpperCase do MapSystemwords (DefineUppercaseSystemword)
    76	     $)
    77	and DefineSystemword (Word, Symbol) be
    78	     $(	Unpackstring (Word, V)
    79		EnterIntoDictionary (V, Symbol)
    80	     $)
    81	and DefineUppercaseSystemword (Word, Symbol) be
    82	     $(	Unpackstring (Word, V)
    83		for i = 1 to V!0 do V!i := MakeUpperCase (V!i)
    84		EnterIntoDictionary (V, Symbol)
    85	     $)
    86	and MakeUpperCase (c) = valof switchon c into		//  Map lower case to upper for any character set.
    87	     $(	case 'a':	resultis 'A'
    88		case 'b':	resultis 'B'
    89		case 'c': resultis 'C'
    90		case 'd': resultis 'D'
    91		case 'e': resultis 'E'
    92		case 'f': resultis 'F'
    93		case 'g': resultis 'G'
    94		case 'h': resultis 'H'
    95		case 'i': resultis 'I'
    96		case 'j': resultis 'J'
    97		case 'k': resultis 'K'
    98		case 'l': resultis 'L'
    99		case 'm': resultis 'M'
   100		case 'n': resultis 'N'
   101		case 'o': resultis 'O'
   102		case 'p': resultis 'P'
   103		case 'q': resultis 'Q'
   104		case 'r': resultis 'R'
   105		case 's': resultis 'S'
   106		case 't': resultis 'T'
   107		case 'u': resultis 'U'
   108		case 'v': resultis 'V'
   109		case 'w': resultis 'W'
   110		case 'x': resultis 'X'
   111		case 'y': resultis 'Y'
   112		case 'z': resultis 'Z'
   113		default:	resultis c	//  All others map into themselves.
   114	     $)



CAE time 3.9, 121 source lines per second.
cross reference table

AND_S			bcpl_symbols:  17, bcpl_lex2:  19

ASSIGN_S			bcpl_symbols:  18

BadCharacter		bcpl_lex_codes:  16

BadDollar			bcpl_lex_codes:  17

BadFloat			bcpl_lex_codes:  18

BadNumber			bcpl_lex_codes:  19

BadSystemword		bcpl_lex_codes:  20

BeginNewLine		bcpl_lex_head:  33

BE_S			bcpl_symbols:  19, bcpl_lex2:  21

BIT_S			bcpl_symbols:  20, bcpl_lex2:  22

Bracket			bcpl_lex_head:  43

BREAK_S			bcpl_symbols:  21, bcpl_lex2:  21

BuildObject		bcpl_compiler_head:  72

BY_S			bcpl_symbols:  22, bcpl_lex2:  22, 59

c			bcpl_lex2:  86, 86, 113

CAE			bcpl_compiler_head:  64

CaeReport			bcpl_compiler_head:  49

CALL_S			bcpl_symbols:  23, bcpl_lex2:  24

Capital			bcpl_lex_head:  47

CASE_S			bcpl_symbols:  24, bcpl_lex2:  24

CgInit			bcpl_compiler_head:  71

CGreport			bcpl_compiler_head:  51

Ch			bcpl_compiler_head:  92

CHARCONST_S		bcpl_symbols:  27

CHAR_S			bcpl_symbols:  26, bcpl_lex2:  24

Chkind			bcpl_lex_head:  32

Cleanup			bcpl_compiler_head:  61

COLON_S			bcpl_symbols:  28

Column			bcpl_compiler_head:  128

COMMA_S			bcpl_symbols:  29

CompareStrings		bcpl_compiler_head:  25

CompilerDTM		bcpl_compiler_head:  112

CompilerDTMString		bcpl_compiler_head:  111

CompilerVersionNumber	bcpl_compiler_head:  110

CompilerVersionString	bcpl_compiler_head:  109

Concatenate		bcpl_compiler_head:  26

COND_S			bcpl_symbols:  30

CONSTANT_S		bcpl_symbols:  31

CONSTDEF_S		bcpl_symbols:  32

ConvertNtoS		bcpl_compiler_head:  28

ConvertStoN		bcpl_compiler_head:  27

Crep			bcpl_compiler_head:  98

DEFAULT_S			bcpl_symbols:  33, bcpl_lex2:  26

DefineSystemword		bcpl_lex2:  74, 77

DefineUppercaseSystemword	bcpl_lex2:  75, 81

DictionaryEntry		bcpl_compiler_head:  127

Digit			bcpl_lex_head:  45

DIV_F			bcpl_symbols:  34

DIV_S			bcpl_symbols:  36

DOUBLE_S			bcpl_symbols:  38, bcpl_lex2:  26

DO_S			bcpl_symbols:  37, bcpl_lex2:  26, 61

ENDCASE_S			bcpl_symbols:  39, bcpl_lex2:  28

EndCurrentLine		bcpl_lex_head:  34

Endline			bcpl_lex_head:  42

EndOfAllInputReached	bcpl_lex_head:  36

Endofstreamch		bcpl_compiler_head:  135

ENDPROG_S			bcpl_symbols:  40

EnterIntoCrossreference	bcpl_compiler_head:  57

EnterIntoDictionary		bcpl_lex_head:  21, bcpl_lex2:  79, 84

EqualString		bcpl_compiler_head:  24

EQV_S			bcpl_symbols:  44, bcpl_lex2:  29

EQ_F			bcpl_symbols:  42

EQ_S			bcpl_symbols:  43, bcpl_lex2:  29

Errorsw			bcpl_compiler_head:  124

ERROR_S			bcpl_symbols:  41

Even			bcpl_compiler_head:  136

EXTERNAL_S		bcpl_symbols:  46, bcpl_lex2:  29

FALSE_S			bcpl_symbols:  47, bcpl_lex2:  31

FileCount			bcpl_compiler_head:  118

FileNames			bcpl_compiler_head:  116

FileShift			bcpl_compiler_head:  138

FilesInfo			bcpl_compiler_head:  117

FindPrintName		bcpl_compiler_head:  56

FINISH_S			bcpl_symbols:  48, bcpl_lex2:  32

FIXED_S			bcpl_symbols:  49, bcpl_lex2:  31

FLOAT_S			bcpl_symbols:  50, bcpl_lex2:  32

FNAP_S			bcpl_symbols:  51

FNDEF_S			bcpl_symbols:  52

Format			bcpl_compiler_head:  20

FormCharconst		bcpl_compiler_head:  46

FormStringconst		bcpl_compiler_head:  47

FOR_S			bcpl_symbols:  53, bcpl_lex2:  31

Freevec			bcpl_compiler_head:  34

GetStream			bcpl_compiler_head:  62

GetStringMissing		bcpl_lex_codes:  21

GetVersion		bcpl_compiler_head:  59

GET_S			bcpl_symbols:  57, bcpl_lex2:  34

GE_F			bcpl_symbols:  54

GE_S			bcpl_symbols:  56, bcpl_lex2:  34

GlobalTemp		bcpl_compiler_head:  131

GLOBAL_S			bcpl_symbols:  58, bcpl_lex2:  35

GOTO_S			bcpl_symbols:  59, bcpl_lex2:  34

GR_F			bcpl_symbols:  60

GR_S			bcpl_symbols:  61, bcpl_lex2:  35

HaveListingFile		bcpl_compiler_head:  105

i			bcpl_lex2:  83, 83, 83

IFNOT_S			bcpl_symbols:  63, bcpl_lex2:  37

IFSO_S			bcpl_symbols:  64, bcpl_lex2:  37

IF_S			bcpl_symbols:  62, bcpl_lex2:  37

Ignorable			bcpl_lex_head:  41

INPUT			bcpl_compiler_head:  90

INTO_S			bcpl_symbols:  66, bcpl_lex2:  38

LABDEF_S			bcpl_symbols:  67

LABEL_S			bcpl_symbols:  68

Left			bcpl_compiler_head:  134

Length			bcpl_compiler_head:  29

LengthInWords		bcpl_compiler_head:  30

LENGTH_S			bcpl_symbols:  71, bcpl_lex2:  41

LET_S			bcpl_symbols:  72, bcpl_lex2:  40

LexInit			bcpl_compiler_head:  65

LE_F			bcpl_symbols:  69

LE_S			bcpl_symbols:  70, bcpl_lex2:  40

LineCount			bcpl_compiler_head:  123

LineMap			bcpl_compiler_head:  100

LineMask			bcpl_compiler_head:  138

List1			bcpl_compiler_head:  35

List2			bcpl_compiler_head:  36

List3			bcpl_compiler_head:  37

List4			bcpl_compiler_head:  38

List5			bcpl_compiler_head:  39

List6			bcpl_compiler_head:  40

Listing			bcpl_compiler_head:  95

LIST_S			bcpl_symbols:  73, bcpl_lex2:  42

LoadDictionary		bcpl_lex_head:  23, bcpl_lex2:  73

LOCAL_S			bcpl_symbols:  74

LOGAND_S			bcpl_symbols:  76, bcpl_lex2:  41

LOGOR_S			bcpl_symbols:  77, bcpl_lex2:  41

LOOP_S			bcpl_symbols:  78, bcpl_lex2:  40

LSHIFT_S			bcpl_symbols:  81, bcpl_lex2:  42

LS_F			bcpl_symbols:  79

LS_S			bcpl_symbols:  80, bcpl_lex2:  43

Lvch			bcpl_lex_head:  31

LVECAP_S			bcpl_symbols:  83

LV_ARG_OUT		bcpl_symbols:  84

LV_FNAP_RESULT		bcpl_symbols:  86

LV_GLOBAL			bcpl_symbols:  87

LV_LOCAL			bcpl_symbols:  88

LV_S			bcpl_symbols:  82, bcpl_lex2:  42

LV_STATIC			bcpl_symbols:  89

LV_TEMP			bcpl_symbols:  90

Machine			bcpl_compiler_head:  102

MAIN_S			bcpl_symbols:  91, bcpl_lex2:  45

MakeTimeString		bcpl_compiler_head:  44

MakeUpperCase		bcpl_lex2:  83, 86

MANIFEST_S		bcpl_symbols:  92, bcpl_lex2:  45

MapF			bcpl_lex2:  18, 19, 21, 21, 21, 22, 22, 24, 24, 24, 26, 26, 26, 28, 28, 28, 29, 29, 29, 
			31, 31, 31, 32, 32, 34, 34, 34, 35, 35, 37, 37, 37, 38, 40, 40, 40, 41, 41, 41, 42, 42, 
			42, 43, 45, 45, 47, 47, 47, 48, 50, 50, 50, 52, 52, 54, 54, 54, 55, 55, 55, 56, 56, 56, 
			58, 58, 58, 59, 59, 61, 61, 61, 62, 62, 62, 64, 64, 66, 66, 68

MapSystemwords		bcpl_lex2:  18, 74, 75

MINUS_F			bcpl_symbols:  93

MINUS_S			bcpl_symbols:  94

MONITOR			bcpl_compiler_head:  91

MULT_F			bcpl_symbols:  96

MULT_S			bcpl_symbols:  97

NAMECHAIN			bcpl_compiler_head:  125

NamesTable		bcpl_lex_head:  38

NAME_S			bcpl_symbols:  98

NEG_F			bcpl_symbols:  99

NEG_S			bcpl_symbols:  100

NEQV_S			bcpl_symbols:  101, bcpl_lex2:  48

NestingDepth		bcpl_lex_head:  37

Newvec			bcpl_compiler_head:  33

Nextparam			bcpl_compiler_head:  45

Nextsymb			bcpl_compiler_head:  53

NE_F			bcpl_symbols:  102

NE_S			bcpl_symbols:  103, bcpl_lex2:  47

NIL_S			bcpl_symbols:  104, bcpl_lex2:  47

NLPending			bcpl_lex_head:  30

NOT_S			bcpl_symbols:  106, bcpl_lex2:  47

Nsymb			bcpl_lex_head:  22

NUMBER_S			bcpl_symbols:  107

OcodeSw			bcpl_compiler_head:  104

OFFSET_S			bcpl_symbols:  108, bcpl_lex2:  50

Optimize			bcpl_compiler_head:  101

OptionString		bcpl_compiler_head:  115

OR_S			bcpl_symbols:  109, bcpl_lex2:  28, 50, 50

OUTPUT			bcpl_compiler_head:  89

Packstring		bcpl_compiler_head:  21

Plist			bcpl_compiler_head:  68

PLUS_F			bcpl_symbols:  110

PLUS_S			bcpl_symbols:  111

Pname			bcpl_compiler_head:  67

POINTER_S			bcpl_symbols:  112, bcpl_lex2:  52, 52

PopInput			bcpl_compiler_head:  43

POS_F			bcpl_symbols:  113

POS_S			bcpl_symbols:  114

PPrep			bcpl_compiler_head:  97

ProgramName		bcpl_compiler_head:  119

PushInput			bcpl_compiler_head:  42

QuietSw			bcpl_compiler_head:  106

RandomI			bcpl_compiler_head:  31

RBRA_S			bcpl_symbols:  116

Rch			bcpl_lex_head:  20

Readch			bcpl_compiler_head:  16

REGISTER_S		bcpl_symbols:  117

REL_S			bcpl_symbols:  118

RemoveEscapes		bcpl_compiler_head:  23

REM_S			bcpl_symbols:  119, bcpl_lex2:  54

REPEATUNTIL_S		bcpl_symbols:  122, bcpl_lex2:  54

REPEATWHILE_S		bcpl_symbols:  123, bcpl_lex2:  55

REPEAT_S			bcpl_symbols:  121, bcpl_lex2:  56

REP_S			bcpl_symbols:  120, bcpl_lex2:  56

RESULTIS_S		bcpl_symbols:  124, bcpl_lex2:  54

RETURN_S			bcpl_symbols:  126, bcpl_lex2:  55

Right			bcpl_compiler_head:  134

RKET_S			bcpl_symbols:  127

RSHIFT_S			bcpl_symbols:  128, bcpl_lex2:  55

RTAP_S			bcpl_symbols:  129

RTDEF_S			bcpl_symbols:  130

RV_S			bcpl_symbols:  131, bcpl_lex2:  56

SavedSymb			bcpl_lex_head:  27

SBRA_S			bcpl_symbols:  132

SECTBEGIN_S		bcpl_symbols:  133, bcpl_lex2:  21

SECTBRA_S			bcpl_symbols:  134

SECTEND_S			bcpl_symbols:  136, bcpl_lex2:  28

SECTKET_S			bcpl_symbols:  137

SEMICOLON_S		bcpl_symbols:  138

Simple			bcpl_lex_head:  44

SKET_S			bcpl_symbols:  139

Small			bcpl_lex_head:  46

ST			bcpl_lex_head:  26

STATIC_S			bcpl_symbols:  140, bcpl_lex2:  58

StoreString		bcpl_compiler_head:  41

STRINGCONST_S		bcpl_symbols:  142

STRING_S			bcpl_symbols:  141, bcpl_lex2:  59

STRUCTURE_S		bcpl_symbols:  143, bcpl_lex2:  58

SWITCHON_S		bcpl_symbols:  144, bcpl_lex2:  58

Symb			bcpl_compiler_head:  126

Symbol			bcpl_lex2:  77, 79, 81, 84

SymbolName		bcpl_compiler_head:  55

Symbols			bcpl_compiler_head:  99

TABLE_S			bcpl_symbols:  146, bcpl_lex2:  61

TEMP_S			bcpl_symbols:  147

TEST_S			bcpl_symbols:  148, bcpl_lex2:  61

TimeNow			bcpl_compiler_head:  114

TimeNowString		bcpl_compiler_head:  113

TokenTooLong		bcpl_lex_codes:  22

TO_S			bcpl_symbols:  149, bcpl_lex2:  62

Trans			bcpl_compiler_head:  70

Transreport		bcpl_compiler_head:  50

TRUE_S			bcpl_symbols:  150, bcpl_lex2:  62

TYPE_S			bcpl_symbols:  151, bcpl_lex2:  62

UnderScore		bcpl_lex_head:  48

UnexpectedCase		bcpl_compiler_head:  139

UNLESS_S			bcpl_symbols:  152, bcpl_lex2:  64

Unpackstring		bcpl_compiler_head:  22, bcpl_lex2:  78, 82

UNTIL_S			bcpl_symbols:  153, bcpl_lex2:  64

UpperCase			bcpl_compiler_head:  96, bcpl_lex2:  75

UserID			bcpl_compiler_head:  120

UtilitiesInit		bcpl_compiler_head:  60

V			bcpl_lex_head:  28, bcpl_lex2:  78, 79, 82, 83, 83, 83, 84

VALDEF_S			bcpl_symbols:  154

VALOF_S			bcpl_symbols:  156, bcpl_lex2:  66

VECAP_S			bcpl_symbols:  158

VEC_S			bcpl_symbols:  157, bcpl_lex2:  66

Vmax			bcpl_compiler_head:  137

Vp			bcpl_lex_head:  29

WHILE_S			bcpl_symbols:  159, bcpl_lex2:  68

Word			bcpl_lex2:  77, 78, 81, 82

Writech			bcpl_compiler_head:  17

WriteN			bcpl_compiler_head:  19

WriteObjectListing		bcpl_compiler_head:  73

WriteS			bcpl_compiler_head:  18

Xref			bcpl_compiler_head:  103




Trans time 1.7, 657 object words per second.
	"	Begin text of MapSystemwords

aa 000000  000016 115141		zero	14,39521		" MapSystemwords
aa 000001  160123 171163		zero	57427,62067
aa 000002  164145 155167		zero	59493,55927
aa 000003  157162 144163		zero	56946,51315
			L1:
aa 000004  000000 213000  18		epaq	0		" set lp to linkage section
aa 000005  700026 764161		lprplp	sb|22,*au
aa 000006  200000 021100		adlx1	bp|0		" BCPL save
aa 000007  700000 542111		sprpbp	sb|0,x1
aa 000010  700001 544111		sprplp	sb|1,x1
aa 000011  700423 620111		eax0	sb|275,x1
aa 000012  777760 360003		anx0	-16,du
aa 000013  700025 740100		stx0	sb|21		" end of save sequence

aa 000014  001277 350004  19		eapap	L5		" "and"
aa 000015  700006 540111		sprpap	sb|6,x1
aa 000016  000001 236007		ldq	1,dl		" AND_S
aa 000017  700007 756111		stq	sb|7,x1
aa 000020  700002 760111		lprpap	sb|2,x1		" MapF
aa 000021  000000 272100		tsbbp	ap|0		" MapF
aa 000022  000004 000002		zero	4,2
aa 000023  001266 352004  21		eapbp	L6		" "break"
aa 000024  700006 542111		sprpbp	sb|6,x1
aa 000025  000005 236007		ldq	5,dl		" BREAK_S
aa 000026  700007 756111		stq	sb|7,x1
aa 000027  700002 762111		lprpbp	sb|2,x1		" MapF
aa 000030  200000 272100		tsbbp	bp|0		" MapF
aa 000031  000004 000002		zero	4,2
aa 000032  001256 351404		eapab	L7		" "be"
aa 000033  700006 541111		sprpab	sb|6,x1
aa 000034  000003 236007		ldq	3,dl		" BE_S
aa 000035  700007 756111		stq	sb|7,x1
aa 000036  700002 761111		lprpab	sb|2,x1		" MapF
aa 000037  100000 272100		tsbbp	ab|0		" MapF
aa 000040  000004 000002		zero	4,2
aa 000041  001245 353404  21		eapbb	L8		" "begin"
aa 000042  700006 543111		sprpbb	sb|6,x1
aa 000043  000165 236007		ldq	117,dl		" SECTBEGIN_S
aa 000044  700007 756111		stq	sb|7,x1
aa 000045  700002 763111		lprpbb	sb|2,x1		" MapF
aa 000046  300000 272100		tsbbp	bb|0		" MapF
aa 000047  000004 000002		zero	4,2
aa 000050  001234 371404  22		eaplb	L9		" "bit"
aa 000051  700006 545111		sprplb	sb|6,x1
aa 000052  000004 236007		ldq	4,dl		" BIT_S
aa 000053  700007 756111		stq	sb|7,x1
aa 000054  700002 765111		lprplb	sb|2,x1		" MapF
aa 000055  500000 272100		tsbbp	lb|0		" MapF
aa 000056  000004 000002		zero	4,2
aa 000057  001224 350004  22		eapap	L10		" "by"
aa 000060  700006 540111		sprpap	sb|6,x1
aa 000061  000006 236007		ldq	6,dl		" BY_S
aa 000062  700007 756111		stq	sb|7,x1
aa 000063  700002 760111		lprpap	sb|2,x1		" MapF
aa 000064  000000 272100		tsbbp	ap|0		" MapF
aa 000065  000004 000002		zero	4,2
aa 000066  001213 352004  24		eapbp	L11		" "case"
aa 000067  700006 542111		sprpbp	sb|6,x1
aa 000070  000010 236007		ldq	8,dl		" CASE_S
aa 000071  700007 756111		stq	sb|7,x1
aa 000072  700002 762111		lprpbp	sb|2,x1		" MapF
aa 000073  200000 272100		tsbbp	bp|0		" MapF
aa 000074  000004 000002		zero	4,2
aa 000075  001202 351404		eapab	L12		" "call"
aa 000076  700006 541111		sprpab	sb|6,x1
aa 000077  000007 236007		ldq	7,dl		" CALL_S
aa 000100  700007 756111		stq	sb|7,x1
aa 000101  700002 761111		lprpab	sb|2,x1		" MapF
aa 000102  100000 272100		tsbbp	ab|0		" MapF
aa 000103  000004 000002		zero	4,2
aa 000104  001171 353404  24		eapbb	L13		" "char"
aa 000105  700006 543111		sprpbb	sb|6,x1
aa 000106  000012 236007		ldq	10,dl		" CHAR_S
aa 000107  700007 756111		stq	sb|7,x1
aa 000110  700002 763111		lprpbb	sb|2,x1		" MapF
aa 000111  300000 272100		tsbbp	bb|0		" MapF
aa 000112  000004 000002		zero	4,2
aa 000113  001161 371404  26		eaplb	L14		" "do"
aa 000114  700006 545111		sprplb	sb|6,x1
aa 000115  000025 236007		ldq	21,dl		" DO_S
aa 000116  700007 756111		stq	sb|7,x1
aa 000117  700002 765111		lprplb	sb|2,x1		" MapF
aa 000120  500000 272100		tsbbp	lb|0		" MapF
aa 000121  000004 000002		zero	4,2
aa 000122  001147 350004		eapap	L15		" "default"
aa 000123  700006 540111		sprpap	sb|6,x1
aa 000124  000021 236007		ldq	17,dl		" DEFAULT_S
aa 000125  700007 756111		stq	sb|7,x1
aa 000126  700002 760111		lprpap	sb|2,x1		" MapF
aa 000127  000000 272100		tsbbp	ap|0		" MapF
aa 000130  000004 000002		zero	4,2
aa 000131  001136 352004  26		eapbp	L16		" "double"
aa 000132  700006 542111		sprpbp	sb|6,x1
aa 000133  000026 236007		ldq	22,dl		" DOUBLE_S
aa 000134  700007 756111		stq	sb|7,x1
aa 000135  700002 762111		lprpbp	sb|2,x1		" MapF
aa 000136  200000 272100		tsbbp	bp|0		" MapF
aa 000137  000004 000002		zero	4,2
aa 000140  001124 351404  28		eapab	L17		" "endcase"
aa 000141  700006 541111		sprpab	sb|6,x1
aa 000142  000027 236007		ldq	23,dl		" ENDCASE_S
aa 000143  700007 756111		stq	sb|7,x1
aa 000144  700002 761111		lprpab	sb|2,x1		" MapF
aa 000145  100000 272100		tsbbp	ab|0		" MapF
aa 000146  000004 000002		zero	4,2
aa 000147  001113 353404		eapbb	L18		" "else"
aa 000150  700006 543111		sprpbb	sb|6,x1
aa 000151  000135 236007		ldq	93,dl		" OR_S
aa 000152  700007 756111		stq	sb|7,x1
aa 000153  700002 763111		lprpbb	sb|2,x1		" MapF
aa 000154  300000 272100		tsbbp	bb|0		" MapF
aa 000155  000004 000002		zero	4,2
aa 000156  001102 371404  28		eaplb	L19		" "end"
aa 000157  700006 545111		sprplb	sb|6,x1
aa 000160  000170 236007		ldq	120,dl		" SECTEND_S
aa 000161  700007 756111		stq	sb|7,x1
aa 000162  700002 765111		lprplb	sb|2,x1		" MapF
aa 000163  500000 272100		tsbbp	lb|0		" MapF
aa 000164  000004 000002		zero	4,2
aa 000165  001071 350004  29		eapap	L20		" "eqv"
aa 000166  700006 540111		sprpap	sb|6,x1
aa 000167  000034 236007		ldq	28,dl		" EQV_S
aa 000170  700007 756111		stq	sb|7,x1
aa 000171  700002 760111		lprpap	sb|2,x1		" MapF
aa 000172  000000 272100		tsbbp	ap|0		" MapF
aa 000173  000004 000002		zero	4,2
aa 000174  001057 352004		eapbp	L21		" "external"
aa 000175  700006 542111		sprpbp	sb|6,x1
aa 000176  000036 236007		ldq	30,dl		" EXTERNAL_S
aa 000177  700007 756111		stq	sb|7,x1
aa 000200  700002 762111		lprpbp	sb|2,x1		" MapF
aa 000201  200000 272100		tsbbp	bp|0		" MapF
aa 000202  000004 000002		zero	4,2
aa 000203  001047 351404  29		eapab	L22		" "eq"
aa 000204  700006 541111		sprpab	sb|6,x1
aa 000205  000033 236007		ldq	27,dl		" EQ_S
aa 000206  700007 756111		stq	sb|7,x1
aa 000207  700002 761111		lprpab	sb|2,x1		" MapF
aa 000210  100000 272100		tsbbp	ab|0		" MapF
aa 000211  000004 000002		zero	4,2
aa 000212  001036 353404  31		eapbb	L23		" "for"
aa 000213  700006 543111		sprpbb	sb|6,x1
aa 000214  000045 236007		ldq	37,dl		" FOR_S
aa 000215  700007 756111		stq	sb|7,x1
aa 000216  700002 763111		lprpbb	sb|2,x1		" MapF
aa 000217  300000 272100		tsbbp	bb|0		" MapF
aa 000220  000004 000002		zero	4,2
aa 000221  001025 371404		eaplb	L24		" "false"
aa 000222  700006 545111		sprplb	sb|6,x1
aa 000223  000037 236007		ldq	31,dl		" FALSE_S
aa 000224  700007 756111		stq	sb|7,x1
aa 000225  700002 765111		lprplb	sb|2,x1		" MapF
aa 000226  500000 272100		tsbbp	lb|0		" MapF
aa 000227  000004 000002		zero	4,2
aa 000230  001014 350004  31		eapap	L25		" "fixed"
aa 000231  700006 540111		sprpap	sb|6,x1
aa 000232  000041 236007		ldq	33,dl		" FIXED_S
aa 000233  700007 756111		stq	sb|7,x1
aa 000234  700002 760111		lprpap	sb|2,x1		" MapF
aa 000235  000000 272100		tsbbp	ap|0		" MapF
aa 000236  000004 000002		zero	4,2
aa 000237  001003 352004  32		eapbp	L26		" "finish"
aa 000240  700006 542111		sprpbp	sb|6,x1
aa 000241  000040 236007		ldq	32,dl		" FINISH_S
aa 000242  700007 756111		stq	sb|7,x1
aa 000243  700002 762111		lprpbp	sb|2,x1		" MapF
aa 000244  200000 272100		tsbbp	bp|0		" MapF
aa 000245  000004 000002		zero	4,2
aa 000246  000772 351404  32		eapab	L27		" "float"
aa 000247  700006 541111		sprpab	sb|6,x1
aa 000250  000042 236007		ldq	34,dl		" FLOAT_S
aa 000251  700007 756111		stq	sb|7,x1
aa 000252  700002 761111		lprpab	sb|2,x1		" MapF
aa 000253  100000 272100		tsbbp	ab|0		" MapF
aa 000254  000004 000002		zero	4,2
aa 000255  000761 353404  34		eapbb	L28		" "goto"
aa 000256  700006 543111		sprpbb	sb|6,x1
aa 000257  000053 236007		ldq	43,dl		" GOTO_S
aa 000260  700007 756111		stq	sb|7,x1
aa 000261  700002 763111		lprpbb	sb|2,x1		" MapF
aa 000262  300000 272100		tsbbp	bb|0		" MapF
aa 000263  000004 000002		zero	4,2
aa 000264  000751 371404		eaplb	L29		" "ge"
aa 000265  700006 545111		sprplb	sb|6,x1
aa 000266  000050 236007		ldq	40,dl		" GE_S
aa 000267  700007 756111		stq	sb|7,x1
aa 000270  700002 765111		lprplb	sb|2,x1		" MapF
aa 000271  500000 272100		tsbbp	lb|0		" MapF
aa 000272  000004 000002		zero	4,2
aa 000273  000740 350004  34		eapap	L30		" "get"
aa 000274  700006 540111		sprpap	sb|6,x1
aa 000275  000051 236007		ldq	41,dl		" GET_S
aa 000276  700007 756111		stq	sb|7,x1
aa 000277  700002 760111		lprpap	sb|2,x1		" MapF
aa 000300  000000 272100		tsbbp	ap|0		" MapF
aa 000301  000004 000002		zero	4,2
aa 000302  000727 352004  35		eapbp	L31		" "global"
aa 000303  700006 542111		sprpbp	sb|6,x1
aa 000304  000052 236007		ldq	42,dl		" GLOBAL_S
aa 000305  700007 756111		stq	sb|7,x1
aa 000306  700002 762111		lprpbp	sb|2,x1		" MapF
aa 000307  200000 272100		tsbbp	bp|0		" MapF
aa 000310  000004 000002		zero	4,2
aa 000311  000717 351404  35		eapab	L32		" "gr"
aa 000312  700006 541111		sprpab	sb|6,x1
aa 000313  000055 236007		ldq	45,dl		" GR_S
aa 000314  700007 756111		stq	sb|7,x1
aa 000315  700002 761111		lprpab	sb|2,x1		" MapF
aa 000316  100000 272100		tsbbp	ab|0		" MapF
aa 000317  000004 000002		zero	4,2
aa 000320  000707 353404  37		eapbb	L33		" "if"
aa 000321  700006 543111		sprpbb	sb|6,x1
aa 000322  000056 236007		ldq	46,dl		" IF_S
aa 000323  700007 756111		stq	sb|7,x1
aa 000324  700002 763111		lprpbb	sb|2,x1		" MapF
aa 000325  300000 272100		tsbbp	bb|0		" MapF
aa 000326  000004 000002		zero	4,2
aa 000327  000676 371404		eaplb	L34		" "ifso"
aa 000330  700006 545111		sprplb	sb|6,x1
aa 000331  000060 236007		ldq	48,dl		" IFSO_S
aa 000332  700007 756111		stq	sb|7,x1
aa 000333  700002 765111		lprplb	sb|2,x1		" MapF
aa 000334  500000 272100		tsbbp	lb|0		" MapF
aa 000335  000004 000002		zero	4,2
aa 000336  000665 350004  37		eapap	L35		" "ifnot"
aa 000337  700006 540111		sprpap	sb|6,x1
aa 000340  000057 236007		ldq	47,dl		" IFNOT_S
aa 000341  700007 756111		stq	sb|7,x1
aa 000342  700002 760111		lprpap	sb|2,x1		" MapF
aa 000343  000000 272100		tsbbp	ap|0		" MapF
aa 000344  000004 000002		zero	4,2
aa 000345  000654 352004  38		eapbp	L36		" "into"
aa 000346  700006 542111		sprpbp	sb|6,x1
aa 000347  000062 236007		ldq	50,dl		" INTO_S
aa 000350  700007 756111		stq	sb|7,x1
aa 000351  700002 762111		lprpbp	sb|2,x1		" MapF
aa 000352  200000 272100		tsbbp	bp|0		" MapF
aa 000353  000004 000002		zero	4,2
aa 000354  000643 351404  40		eapab	L37		" "let"
aa 000355  700006 541111		sprpab	sb|6,x1
aa 000356  000070 236007		ldq	56,dl		" LET_S
aa 000357  700007 756111		stq	sb|7,x1
aa 000360  700002 761111		lprpab	sb|2,x1		" MapF
aa 000361  100000 272100		tsbbp	ab|0		" MapF
aa 000362  000004 000002		zero	4,2
aa 000363  000633 353404		eapbb	L38		" "le"
aa 000364  700006 543111		sprpbb	sb|6,x1
aa 000365  000066 236007		ldq	54,dl		" LE_S
aa 000366  700007 756111		stq	sb|7,x1
aa 000367  700002 763111		lprpbb	sb|2,x1		" MapF
aa 000370  300000 272100		tsbbp	bb|0		" MapF
aa 000371  000004 000002		zero	4,2
aa 000372  000622 371404  40		eaplb	L39		" "loop"
aa 000373  700006 545111		sprplb	sb|6,x1
aa 000374  000076 236007		ldq	62,dl		" LOOP_S
aa 000375  700007 756111		stq	sb|7,x1
aa 000376  700002 765111		lprplb	sb|2,x1		" MapF
aa 000377  500000 272100		tsbbp	lb|0		" MapF
aa 000400  000004 000002		zero	4,2
aa 000401  000611 350004  41		eapap	L40		" "logand"
aa 000402  700006 540111		sprpap	sb|6,x1
aa 000403  000074 236007		ldq	60,dl		" LOGAND_S
aa 000404  700007 756111		stq	sb|7,x1
aa 000405  700002 760111		lprpap	sb|2,x1		" MapF
aa 000406  000000 272100		tsbbp	ap|0		" MapF
aa 000407  000004 000002		zero	4,2
aa 000410  000600 352004		eapbp	L41		" "logor"
aa 000411  700006 542111		sprpbp	sb|6,x1
aa 000412  000075 236007		ldq	61,dl		" LOGOR_S
aa 000413  700007 756111		stq	sb|7,x1
aa 000414  700002 762111		lprpbp	sb|2,x1		" MapF
aa 000415  200000 272100		tsbbp	bp|0		" MapF
aa 000416  000004 000002		zero	4,2
aa 000417  000567 351404  41		eapab	L42		" "length"
aa 000420  700006 541111		sprpab	sb|6,x1
aa 000421  000067 236007		ldq	55,dl		" LENGTH_S
aa 000422  700007 756111		stq	sb|7,x1
aa 000423  700002 761111		lprpab	sb|2,x1		" MapF
aa 000424  100000 272100		tsbbp	ab|0		" MapF
aa 000425  000004 000002		zero	4,2
aa 000426  000556 353404  42		eapbb	L43		" "list"
aa 000427  700006 543111		sprpbb	sb|6,x1
aa 000430  000071 236007		ldq	57,dl		" LIST_S
aa 000431  700007 756111		stq	sb|7,x1
aa 000432  700002 763111		lprpbb	sb|2,x1		" MapF
aa 000433  300000 272100		tsbbp	bb|0		" MapF
aa 000434  000004 000002		zero	4,2
aa 000435  000545 371404		eaplb	L44		" "lshift"
aa 000436  700006 545111		sprplb	sb|6,x1
aa 000437  000101 236007		ldq	65,dl		" LSHIFT_S
aa 000440  700007 756111		stq	sb|7,x1
aa 000441  700002 765111		lprplb	sb|2,x1		" MapF
aa 000442  500000 272100		tsbbp	lb|0		" MapF
aa 000443  000004 000002		zero	4,2
aa 000444  000535 350004  42		eapap	L45		" "lv"
aa 000445  700006 540111		sprpap	sb|6,x1
aa 000446  000102 236007		ldq	66,dl		" LV_S
aa 000447  700007 756111		stq	sb|7,x1
aa 000450  700002 760111		lprpap	sb|2,x1		" MapF
aa 000451  000000 272100		tsbbp	ap|0		" MapF
aa 000452  000004 000002		zero	4,2
aa 000453  000525 352004  43		eapbp	L46		" "ls"
aa 000454  700006 542111		sprpbp	sb|6,x1
aa 000455  000100 236007		ldq	64,dl		" LS_S
aa 000456  700007 756111		stq	sb|7,x1
aa 000457  700002 762111		lprpbp	sb|2,x1		" MapF
aa 000460  200000 272100		tsbbp	bp|0		" MapF
aa 000461  000004 000002		zero	4,2
aa 000462  000513 351404  45		eapab	L47		" "manifest"
aa 000463  700006 541111		sprpab	sb|6,x1
aa 000464  000114 236007		ldq	76,dl		" MANIFEST_S
aa 000465  700007 756111		stq	sb|7,x1
aa 000466  700002 761111		lprpab	sb|2,x1		" MapF
aa 000467  100000 272100		tsbbp	ab|0		" MapF
aa 000470  000004 000002		zero	4,2
aa 000471  000502 353404  45		eapbb	L48		" "main"
aa 000472  700006 543111		sprpbb	sb|6,x1
aa 000473  000113 236007		ldq	75,dl		" MAIN_S
aa 000474  700007 756111		stq	sb|7,x1
aa 000475  700002 763111		lprpbb	sb|2,x1		" MapF
aa 000476  300000 272100		tsbbp	bb|0		" MapF
aa 000477  000004 000002		zero	4,2
aa 000500  000471 371404  47		eaplb	L49		" "nil"
aa 000501  700006 545111		sprplb	sb|6,x1
aa 000502  000130 236007		ldq	88,dl		" NIL_S
aa 000503  700007 756111		stq	sb|7,x1
aa 000504  700002 765111		lprplb	sb|2,x1		" MapF
aa 000505  500000 272100		tsbbp	lb|0		" MapF
aa 000506  000004 000002		zero	4,2
aa 000507  000460 350004		eapap	L50		" "not"
aa 000510  700006 540111		sprpap	sb|6,x1
aa 000511  000132 236007		ldq	90,dl		" NOT_S
aa 000512  700007 756111		stq	sb|7,x1
aa 000513  700002 760111		lprpap	sb|2,x1		" MapF
aa 000514  000000 272100		tsbbp	ap|0		" MapF
aa 000515  000004 000002		zero	4,2
aa 000516  000450 352004  47		eapbp	L51		" "ne"
aa 000517  700006 542111		sprpbp	sb|6,x1
aa 000520  000127 236007		ldq	87,dl		" NE_S
aa 000521  700007 756111		stq	sb|7,x1
aa 000522  700002 762111		lprpbp	sb|2,x1		" MapF
aa 000523  200000 272100		tsbbp	bp|0		" MapF
aa 000524  000004 000002		zero	4,2
aa 000525  000437 351404  48		eapab	L52		" "neqv"
aa 000526  700006 541111		sprpab	sb|6,x1
aa 000527  000125 236007		ldq	85,dl		" NEQV_S
aa 000530  700007 756111		stq	sb|7,x1
aa 000531  700002 761111		lprpab	sb|2,x1		" MapF
aa 000532  100000 272100		tsbbp	ab|0		" MapF
aa 000533  000004 000002		zero	4,2
aa 000534  000427 353404  50		eapbb	L53		" "or"
aa 000535  700006 543111		sprpbb	sb|6,x1
aa 000536  000135 236007		ldq	93,dl		" OR_S
aa 000537  700007 756111		stq	sb|7,x1
aa 000540  700002 763111		lprpbb	sb|2,x1		" MapF
aa 000541  300000 272100		tsbbp	bb|0		" MapF
aa 000542  000004 000002		zero	4,2
aa 000543  000416 371404		eaplb	L54		" "offset"
aa 000544  700006 545111		sprplb	sb|6,x1
aa 000545  000134 236007		ldq	92,dl		" OFFSET_S
aa 000546  700007 756111		stq	sb|7,x1
aa 000547  700002 765111		lprplb	sb|2,x1		" MapF
aa 000550  500000 272100		tsbbp	lb|0		" MapF
aa 000551  000004 000002		zero	4,2
aa 000552  000404 350004  50		eapap	L55		" "otherwise"
aa 000553  700006 540111		sprpap	sb|6,x1
aa 000554  000135 236007		ldq	93,dl		" OR_S
aa 000555  700007 756111		stq	sb|7,x1
aa 000556  700002 760111		lprpap	sb|2,x1		" MapF
aa 000557  000000 272100		tsbbp	ap|0		" MapF
aa 000560  000004 000002		zero	4,2
aa 000561  000372 352004  52		eapbp	L56		" "pointer"
aa 000562  700006 542111		sprpbp	sb|6,x1
aa 000563  000140 236007		ldq	96,dl		" POINTER_S
aa 000564  700007 756111		stq	sb|7,x1
aa 000565  700002 762111		lprpbp	sb|2,x1		" MapF
aa 000566  200000 272100		tsbbp	bp|0		" MapF
aa 000567  000004 000002		zero	4,2
aa 000570  000361 351404  52		eapab	L57		" "ptr"
aa 000571  700006 541111		sprpab	sb|6,x1
aa 000572  000140 236007		ldq	96,dl		" POINTER_S
aa 000573  700007 756111		stq	sb|7,x1
aa 000574  700002 761111		lprpab	sb|2,x1		" MapF
aa 000575  100000 272100		tsbbp	ab|0		" MapF
aa 000576  000004 000002		zero	4,2
aa 000577  000346 353404  54		eapbb	L58		" "repeatuntil"
aa 000600  700006 543111		sprpbb	sb|6,x1
aa 000601  000152 236007		ldq	106,dl		" REPEATUNTIL_S
aa 000602  700007 756111		stq	sb|7,x1
aa 000603  700002 763111		lprpbb	sb|2,x1		" MapF
aa 000604  300000 272100		tsbbp	bb|0		" MapF
aa 000605  000004 000002		zero	4,2
aa 000606  000334 371404		eaplb	L59		" "resultis"
aa 000607  700006 545111		sprplb	sb|6,x1
aa 000610  000154 236007		ldq	108,dl		" RESULTIS_S
aa 000611  700007 756111		stq	sb|7,x1
aa 000612  700002 765111		lprplb	sb|2,x1		" MapF
aa 000613  500000 272100		tsbbp	lb|0		" MapF
aa 000614  000004 000002		zero	4,2
aa 000615  000323 350004  54		eapap	L60		" "rem"
aa 000616  700006 540111		sprpap	sb|6,x1
aa 000617  000147 236007		ldq	103,dl		" REM_S
aa 000620  700007 756111		stq	sb|7,x1
aa 000621  700002 760111		lprpap	sb|2,x1		" MapF
aa 000622  000000 272100		tsbbp	ap|0		" MapF
aa 000623  000004 000002		zero	4,2
aa 000624  000310 352004  55		eapbp	L61		" "repeatwhile"
aa 000625  700006 542111		sprpbp	sb|6,x1
aa 000626  000153 236007		ldq	107,dl		" REPEATWHILE_S
aa 000627  700007 756111		stq	sb|7,x1
aa 000630  700002 762111		lprpbp	sb|2,x1		" MapF
aa 000631  200000 272100		tsbbp	bp|0		" MapF
aa 000632  000004 000002		zero	4,2
aa 000633  000277 351404		eapab	L62		" "rshift"
aa 000634  700006 541111		sprpab	sb|6,x1
aa 000635  000160 236007		ldq	112,dl		" RSHIFT_S
aa 000636  700007 756111		stq	sb|7,x1
aa 000637  700002 761111		lprpab	sb|2,x1		" MapF
aa 000640  100000 272100		tsbbp	ab|0		" MapF
aa 000641  000004 000002		zero	4,2
aa 000642  000266 353404  55		eapbb	L63		" "return"
aa 000643  700006 543111		sprpbb	sb|6,x1
aa 000644  000156 236007		ldq	110,dl		" RETURN_S
aa 000645  700007 756111		stq	sb|7,x1
aa 000646  700002 763111		lprpbb	sb|2,x1		" MapF
aa 000647  300000 272100		tsbbp	bb|0		" MapF
aa 000650  000004 000002		zero	4,2
aa 000651  000255 371404  56		eaplb	L64		" "repeat"
aa 000652  700006 545111		sprplb	sb|6,x1
aa 000653  000151 236007		ldq	105,dl		" REPEAT_S
aa 000654  700007 756111		stq	sb|7,x1
aa 000655  700002 765111		lprplb	sb|2,x1		" MapF
aa 000656  500000 272100		tsbbp	lb|0		" MapF
aa 000657  000004 000002		zero	4,2
aa 000660  000245 350004		eapap	L65		" "rv"
aa 000661  700006 540111		sprpap	sb|6,x1
aa 000662  000163 236007		ldq	115,dl		" RV_S
aa 000663  700007 756111		stq	sb|7,x1
aa 000664  700002 760111		lprpap	sb|2,x1		" MapF
aa 000665  000000 272100		tsbbp	ap|0		" MapF
aa 000666  000004 000002		zero	4,2
aa 000667  000234 352004  56		eapbp	L66		" "rep"
aa 000670  700006 542111		sprpbp	sb|6,x1
aa 000671  000150 236007		ldq	104,dl		" REP_S
aa 000672  700007 756111		stq	sb|7,x1
aa 000673  700002 762111		lprpbp	sb|2,x1		" MapF
aa 000674  200000 272100		tsbbp	bp|0		" MapF
aa 000675  000004 000002		zero	4,2
aa 000676  000223 351404  58		eapab	L67		" "static"
aa 000677  700006 541111		sprpab	sb|6,x1
aa 000700  000174 236007		ldq	124,dl		" STATIC_S
aa 000701  700007 756111		stq	sb|7,x1
aa 000702  700002 761111		lprpab	sb|2,x1		" MapF
aa 000703  100000 272100		tsbbp	ab|0		" MapF
aa 000704  000004 000002		zero	4,2
aa 000705  000211 353404		eapbb	L68		" "structure"
aa 000706  700006 543111		sprpbb	sb|6,x1
aa 000707  000177 236007		ldq	127,dl		" STRUCTURE_S
aa 000710  700007 756111		stq	sb|7,x1
aa 000711  700002 763111		lprpbb	sb|2,x1		" MapF
aa 000712  300000 272100		tsbbp	bb|0		" MapF
aa 000713  000004 000002		zero	4,2
aa 000714  000177 371404  58		eaplb	L69		" "switchon"
aa 000715  700006 545111		sprplb	sb|6,x1
aa 000716  000200 236007		ldq	128,dl		" SWITCHON_S
aa 000717  700007 756111		stq	sb|7,x1
aa 000720  700002 765111		lprplb	sb|2,x1		" MapF
aa 000721  500000 272100		tsbbp	lb|0		" MapF
aa 000722  000004 000002		zero	4,2
aa 000723  000166 350004  59		eapap	L70		" "string"
aa 000724  700006 540111		sprpap	sb|6,x1
aa 000725  000175 236007		ldq	125,dl		" STRING_S
aa 000726  700007 756111		stq	sb|7,x1
aa 000727  700002 760111		lprpap	sb|2,x1		" MapF
aa 000730  000000 272100		tsbbp	ap|0		" MapF
aa 000731  000004 000002		zero	4,2
aa 000732  000155 352004  59		eapbp	L71		" "step"
aa 000733  700006 542111		sprpbp	sb|6,x1
aa 000734  000006 236007		ldq	6,dl		" BY_S
aa 000735  700007 756111		stq	sb|7,x1
aa 000736  700002 762111		lprpbp	sb|2,x1		" MapF
aa 000737  200000 272100		tsbbp	bp|0		" MapF
aa 000740  000004 000002		zero	4,2
aa 000741  000144 351404  61		eapab	L72		" "then"
aa 000742  700006 541111		sprpab	sb|6,x1
aa 000743  000025 236007		ldq	21,dl		" DO_S
aa 000744  700007 756111		stq	sb|7,x1
aa 000745  700002 761111		lprpab	sb|2,x1		" MapF
aa 000746  100000 272100		tsbbp	ab|0		" MapF
aa 000747  000004 000002		zero	4,2
aa 000750  000133 353404		eapbb	L73		" "table"
aa 000751  700006 543111		sprpbb	sb|6,x1
aa 000752  000202 236007		ldq	130,dl		" TABLE_S
aa 000753  700007 756111		stq	sb|7,x1
aa 000754  700002 763111		lprpbb	sb|2,x1		" MapF
aa 000755  300000 272100		tsbbp	bb|0		" MapF
aa 000756  000004 000002		zero	4,2
aa 000757  000122 371404  61		eaplb	L74		" "test"
aa 000760  700006 545111		sprplb	sb|6,x1
aa 000761  000204 236007		ldq	132,dl		" TEST_S
aa 000762  700007 756111		stq	sb|7,x1
aa 000763  700002 765111		lprplb	sb|2,x1		" MapF
aa 000764  500000 272100		tsbbp	lb|0		" MapF
aa 000765  000004 000002		zero	4,2
aa 000766  000111 350004  62		eapap	L75		" "true"
aa 000767  700006 540111		sprpap	sb|6,x1
aa 000770  000206 236007		ldq	134,dl		" TRUE_S
aa 000771  700007 756111		stq	sb|7,x1
aa 000772  700002 760111		lprpap	sb|2,x1		" MapF
aa 000773  000000 272100		tsbbp	ap|0		" MapF
aa 000774  000004 000002		zero	4,2
aa 000775  000100 352004		eapbp	L76		" "type"
aa 000776  700006 542111		sprpbp	sb|6,x1
aa 000777  000207 236007		ldq	135,dl		" TYPE_S
aa 001000  700007 756111		stq	sb|7,x1
aa 001001  700002 762111		lprpbp	sb|2,x1		" MapF
aa 001002  200000 272100		tsbbp	bp|0		" MapF
aa 001003  000004 000002		zero	4,2
aa 001004  000070 351404  62		eapab	L77		" "to"
aa 001005  700006 541111		sprpab	sb|6,x1
aa 001006  000205 236007		ldq	133,dl		" TO_S
aa 001007  700007 756111		stq	sb|7,x1
aa 001010  700002 761111		lprpab	sb|2,x1		" MapF
aa 001011  100000 272100		tsbbp	ab|0		" MapF
aa 001012  000004 000002		zero	4,2
aa 001013  000057 353404  64		eapbb	L78		" "unless"
aa 001014  700006 543111		sprpbb	sb|6,x1
aa 001015  000210 236007		ldq	136,dl		" UNLESS_S
aa 001016  700007 756111		stq	sb|7,x1
aa 001017  700002 763111		lprpbb	sb|2,x1		" MapF
aa 001020  300000 272100		tsbbp	bb|0		" MapF
aa 001021  000004 000002		zero	4,2
aa 001022  000046 371404  64		eaplb	L79		" "until"
aa 001023  700006 545111		sprplb	sb|6,x1
aa 001024  000211 236007		ldq	137,dl		" UNTIL_S
aa 001025  700007 756111		stq	sb|7,x1
aa 001026  700002 765111		lprplb	sb|2,x1		" MapF
aa 001027  500000 272100		tsbbp	lb|0		" MapF
aa 001030  000004 000002		zero	4,2
aa 001031  000035 350004  66		eapap	L80		" "valof"
aa 001032  700006 540111		sprpap	sb|6,x1
aa 001033  000214 236007		ldq	140,dl		" VALOF_S
aa 001034  700007 756111		stq	sb|7,x1
aa 001035  700002 760111		lprpap	sb|2,x1		" MapF
aa 001036  000000 272100		tsbbp	ap|0		" MapF
aa 001037  000004 000002		zero	4,2
aa 001040  000024 352004  66		eapbp	L81		" "vec"
aa 001041  700006 542111		sprpbp	sb|6,x1
aa 001042  000215 236007		ldq	141,dl		" VEC_S
aa 001043  700007 756111		stq	sb|7,x1
aa 001044  700002 762111		lprpbp	sb|2,x1		" MapF
aa 001045  200000 272100		tsbbp	bp|0		" MapF
aa 001046  000004 000002		zero	4,2
aa 001047  000013 351404  68		eapab	L82		" "while"
aa 001050  700006 541111		sprpab	sb|6,x1
aa 001051  000217 236007		ldq	143,dl		" WHILE_S
aa 001052  700007 756111		stq	sb|7,x1
aa 001053  700002 761111		lprpab	sb|2,x1		" MapF
aa 001054  100000 272100		tsbbp	ab|0		" MapF
aa 001055  000004 000002		zero	4,2
			L4:
aa 001056  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001057  200000 121100		sblx1	bp|0
aa 001060  700001 764111		lprplp	sb|1,x1
aa 001061  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L82:
aa 001062  000005 167150		zero	5,61032		" "while"
aa 001063  151154 145000		zero	53868,51712
			L81:
aa 001064  000003 166145		zero	3,60517		" "vec"
aa 001065  143000 000000		zero	50688
			L80:
aa 001066  000005 166141		zero	5,60513		" "valof"
aa 001067  154157 146000		zero	55407,52224
			L79:
aa 001070  000005 165156		zero	5,60014		" "until"
aa 001071  164151 154000		zero	59497,55296
			L78:
aa 001072  000006 165156		zero	6,60014		" "unless"
aa 001073  154145 163163		zero	55397,58995
			L77:
aa 001074  000002 164157		zero	2,59503		" "to"
			L76:
aa 001075  000004 164171		zero	4,59513		" "type"
aa 001076  160145 000000		zero	57445
			L75:
aa 001077  000004 164162		zero	4,59506		" "true"
aa 001100  165145 000000		zero	60005
			L74:
aa 001101  000004 164145		zero	4,59493		" "test"
aa 001102  163164 000000		zero	58996
			L73:
aa 001103  000005 164141		zero	5,59489		" "table"
aa 001104  142154 145000		zero	50284,51712
			L72:
aa 001105  000004 164150		zero	4,59496		" "then"
aa 001106  145156 000000		zero	51822
			L71:
aa 001107  000004 163164		zero	4,58996		" "step"
aa 001110  145160 000000		zero	51824
			L70:
aa 001111  000006 163164		zero	6,58996		" "string"
aa 001112  162151 156147		zero	58473,56423
			L69:
aa 001113  000010 163167		zero	8,58999		" "switchon"
aa 001114  151164 143150		zero	53876,50792
aa 001115  157156 000000		zero	56942
			L68:
aa 001116  000011 163164		zero	9,58996		" "structure"
aa 001117  162165 143164		zero	58485,50804
aa 001120  165162 145000		zero	60018,51712
			L67:
aa 001121  000006 163164		zero	6,58996		" "static"
aa 001122  141164 151143		zero	49780,53859
			L66:
aa 001123  000003 162145		zero	3,58469		" "rep"
aa 001124  160000 000000		zero	57344
			L65:
aa 001125  000002 162166		zero	2,58486		" "rv"
			L64:
aa 001126  000006 162145		zero	6,58469		" "repeat"
aa 001127  160145 141164		zero	57445,49780
			L63:
aa 001130  000006 162145		zero	6,58469		" "return"
aa 001131  164165 162156		zero	59509,58478
			L62:
aa 001132  000006 162163		zero	6,58483		" "rshift"
aa 001133  150151 146164		zero	53353,52340
			L61:
aa 001134  000013 162145		zero	11,58469		" "repeatwhile"
aa 001135  160145 141164		zero	57445,49780
aa 001136  167150 151154		zero	61032,53868
aa 001137  145000 000000		zero	51712
			L60:
aa 001140  000003 162145		zero	3,58469		" "rem"
aa 001141  155000 000000		zero	55808
			L59:
aa 001142  000010 162145		zero	8,58469		" "resultis"
aa 001143  163165 154164		zero	58997,55412
aa 001144  151163 000000		zero	53875
			L58:
aa 001145  000013 162145		zero	11,58469		" "repeatuntil"
aa 001146  160145 141164		zero	57445,49780
aa 001147  165156 164151		zero	60014,59497
aa 001150  154000 000000		zero	55296
			L57:
aa 001151  000003 160164		zero	3,57460		" "ptr"
aa 001152  162000 000000		zero	58368
			L56:
aa 001153  000007 160157		zero	7,57455		" "pointer"
aa 001154  151156 164145		zero	53870,59493
aa 001155  162000 000000		zero	58368
			L55:
aa 001156  000011 157164		zero	9,56948		" "otherwise"
aa 001157  150145 162167		zero	53349,58487
aa 001160  151163 145000		zero	53875,51712
			L54:
aa 001161  000006 157146		zero	6,56934		" "offset"
aa 001162  146163 145164		zero	52339,51828
			L53:
aa 001163  000002 157162		zero	2,56946		" "or"
			L52:
aa 001164  000004 156145		zero	4,56421		" "neqv"
aa 001165  161166 000000		zero	57974
			L51:
aa 001166  000002 156145		zero	2,56421		" "ne"
			L50:
aa 001167  000003 156157		zero	3,56431		" "not"
aa 001170  164000 000000		zero	59392
			L49:
aa 001171  000003 156151		zero	3,56425		" "nil"
aa 001172  154000 000000		zero	55296
			L48:
aa 001173  000004 155141		zero	4,55905		" "main"
aa 001174  151156 000000		zero	53870
			L47:
aa 001175  000010 155141		zero	8,55905		" "manifest"
aa 001176  156151 146145		zero	56425,52325
aa 001177  163164 000000		zero	58996
			L46:
aa 001200  000002 154163		zero	2,55411		" "ls"
			L45:
aa 001201  000002 154166		zero	2,55414		" "lv"
			L44:
aa 001202  000006 154163		zero	6,55411		" "lshift"
aa 001203  150151 146164		zero	53353,52340
			L43:
aa 001204  000004 154151		zero	4,55401		" "list"
aa 001205  163164 000000		zero	58996
			L42:
aa 001206  000006 154145		zero	6,55397		" "length"
aa 001207  156147 164150		zero	56423,59496
			L41:
aa 001210  000005 154157		zero	5,55407		" "logor"
aa 001211  147157 162000		zero	52847,58368
			L40:
aa 001212  000006 154157		zero	6,55407		" "logand"
aa 001213  147141 156144		zero	52833,56420
			L39:
aa 001214  000004 154157		zero	4,55407		" "loop"
aa 001215  157160 000000		zero	56944
			L38:
aa 001216  000002 154145		zero	2,55397		" "le"
			L37:
aa 001217  000003 154145		zero	3,55397		" "let"
aa 001220  164000 000000		zero	59392
			L36:
aa 001221  000004 151156		zero	4,53870		" "into"
aa 001222  164157 000000		zero	59503
			L35:
aa 001223  000005 151146		zero	5,53862		" "ifnot"
aa 001224  156157 164000		zero	56431,59392
			L34:
aa 001225  000004 151146		zero	4,53862		" "ifso"
aa 001226  163157 000000		zero	58991
			L33:
aa 001227  000002 151146		zero	2,53862		" "if"
			L32:
aa 001230  000002 147162		zero	2,52850		" "gr"
			L31:
aa 001231  000006 147154		zero	6,52844		" "global"
aa 001232  157142 141154		zero	56930,49772
			L30:
aa 001233  000003 147145		zero	3,52837		" "get"
aa 001234  164000 000000		zero	59392
			L29:
aa 001235  000002 147145		zero	2,52837		" "ge"
			L28:
aa 001236  000004 147157		zero	4,52847		" "goto"
aa 001237  164157 000000		zero	59503
			L27:
aa 001240  000005 146154		zero	5,52332		" "float"
aa 001241  157141 164000		zero	56929,59392
			L26:
aa 001242  000006 146151		zero	6,52329		" "finish"
aa 001243  156151 163150		zero	56425,58984
			L25:
aa 001244  000005 146151		zero	5,52329		" "fixed"
aa 001245  170145 144000		zero	61541,51200
			L24:
aa 001246  000005 146141		zero	5,52321		" "false"
aa 001247  154163 145000		zero	55411,51712
			L23:
aa 001250  000003 146157		zero	3,52335		" "for"
aa 001251  162000 000000		zero	58368
			L22:
aa 001252  000002 145161		zero	2,51825		" "eq"
			L21:
aa 001253  000010 145170		zero	8,51832		" "external"
aa 001254  164145 162156		zero	59493,58478
aa 001255  141154 000000		zero	49772
			L20:
aa 001256  000003 145161		zero	3,51825		" "eqv"
aa 001257  166000 000000		zero	60416
			L19:
aa 001260  000003 145156		zero	3,51822		" "end"
aa 001261  144000 000000		zero	51200
			L18:
aa 001262  000004 145154		zero	4,51820		" "else"
aa 001263  163145 000000		zero	58981
			L17:
aa 001264  000007 145156		zero	7,51822		" "endcase"
aa 001265  144143 141163		zero	51299,49779
aa 001266  145000 000000		zero	51712
			L16:
aa 001267  000006 144157		zero	6,51311		" "double"
aa 001270  165142 154145		zero	60002,55397
			L15:
aa 001271  000007 144145		zero	7,51301		" "default"
aa 001272  146141 165154		zero	52321,60012
aa 001273  164000 000000		zero	59392
			L14:
aa 001274  000002 144157		zero	2,51311		" "do"
			L13:
aa 001275  000004 143150		zero	4,50792		" "char"
aa 001276  141162 000000		zero	49778
			L12:
aa 001277  000004 143141		zero	4,50785		" "call"
aa 001300  154154 000000		zero	55404
			L11:
aa 001301  000004 143141		zero	4,50785		" "case"
aa 001302  163145 000000		zero	58981
			L10:
aa 001303  000002 142171		zero	2,50297		" "by"
			L9:
aa 001304  000003 142151		zero	3,50281		" "bit"
aa 001305  164000 000000		zero	59392
			L8:
aa 001306  000005 142145		zero	5,50277		" "begin"
aa 001307  147151 156000		zero	52841,56320
			L7:
aa 001310  000002 142145		zero	2,50277		" "be"
			L6:
aa 001311  000005 142162		zero	5,50290		" "break"
aa 001312  145141 153000		zero	51809,54784
			L5:
aa 001313  000003 141156		zero	3,49774		" "and"
aa 001314  144000 000000		zero	51200
	"	Begin text of LoadDictionary

aa 001315  000016 114157		zero	14,39023		" LoadDictionary
aa 001316  141144 104151		zero	49764,34921
aa 001317  143164 151157		zero	50804,53871
aa 001320  156141 162171		zero	56417,58489
			L83:
aa 001321  000000 213000  73		epaq	0		" set lp to linkage section
aa 001322  700026 764161		lprplp	sb|22,*au
aa 001323  200000 021100		adlx1	bp|0		" BCPL save
aa 001324  700000 542111		sprpbp	sb|0,x1
aa 001325  700001 544111		sprplp	sb|1,x1
aa 001326  700422 620111		eax0	sb|274,x1
aa 001327  777760 360003		anx0	-16,du
aa 001330  700025 740100		stx0	sb|21		" end of save sequence

aa 001331  000023 353404  74		eapbb	L84		" DefineSystemword
aa 001332  700004 543111		sprpbb	sb|4,x1
aa 001333  776453 272004		tsbbp	L1+2		" MapSystemwords
aa 001334  000002 000001		zero	2,1
aa 001335  600145 234100  75		szn	sp|101		" UpperCase
aa 001336  000005 600004		tze	L90
aa 001337  000054 353404		eapbb	L85		" DefineUppercaseSystemword
aa 001340  700004 543111		sprpbb	sb|4,x1
aa 001341  776445 272004		tsbbp	L1+2		" MapSystemwords
aa 001342  000002 000001		zero	2,1
			L90:
			L89:
aa 001343  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001344  200000 121100		sblx1	bp|0
aa 001345  700001 764111		lprplp	sb|1,x1
aa 001346  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of DefineSystemword

aa 001347  000020 104145		zero	16,34917		" DefineSystemword
aa 001350  146151 156145		zero	52329,56421
aa 001351  123171 163164		zero	42617,58996
aa 001352  145155 167157		zero	51821,61039
aa 001353  162144 000000		zero	58468
			L84:
aa 001354  000000 213000  77		epaq	0		" set lp to linkage section
aa 001355  700026 764161		lprplp	sb|22,*au
aa 001356  200000 021100		adlx1	bp|0		" BCPL save
aa 001357  700000 542111		sprpbp	sb|0,x1
aa 001360  700001 544111		sprplp	sb|1,x1
aa 001361  700423 620111		eax0	sb|275,x1
aa 001362  777760 360003		anx0	-16,du
aa 001363  700025 740100		stx0	sb|21		" end of save sequence

aa 001364  700002 236111  78		ldq	sb|2,x1		" Word
aa 001365  700006 756111		stq	sb|6,x1
aa 001366  600312 236100		ldq	sp|202		" V
aa 001367  700007 756111		stq	sb|7,x1
4a 001370  400012 272120		tsbbp	lp|L94,*		" Unpackstring
aa 001371  000004 000002		zero	4,2
aa 001372  600312 236100  79		ldq	sp|202		" V
aa 001373  700006 756111		stq	sb|6,x1
aa 001374  700003 236111		ldq	sb|3,x1		" Symbol
aa 001375  700007 756111		stq	sb|7,x1
4a 001376  400010 272120		tsbbp	lp|L95,*		" EnterIntoDictionary
aa 001377  000004 000002		zero	4,2
			L93:
aa 001400  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001401  200000 121100		sblx1	bp|0
aa 001402  700001 764111		lprplp	sb|1,x1
aa 001403  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of DefineUppercaseSystemword

aa 001404  000031 104145		zero	25,34917		" DefineUppercaseSystemword
aa 001405  146151 156145		zero	52329,56421
aa 001406  125160 160145		zero	43632,57445
aa 001407  162143 141163		zero	58467,49779
aa 001410  145123 171163		zero	51795,62067
aa 001411  164145 155167		zero	59493,55927
aa 001412  157162 144000		zero	56946,51200
			L85:
aa 001413  000000 213000  81		epaq	0		" set lp to linkage section
aa 001414  700026 764161		lprplp	sb|22,*au
aa 001415  200000 021100		adlx1	bp|0		" BCPL save
aa 001416  700000 542111		sprpbp	sb|0,x1
aa 001417  700001 544111		sprplp	sb|1,x1
aa 001420  700423 620111		eax0	sb|275,x1
aa 001421  777760 360003		anx0	-16,du
aa 001422  700025 740100		stx0	sb|21		" end of save sequence

aa 001423  700002 236111  82		ldq	sb|2,x1		" Word
aa 001424  700012 756111		stq	sb|10,x1
aa 001425  600312 236100		ldq	sp|202		" V
aa 001426  700013 756111		stq	sb|11,x1
4a 001427  400012 272120		tsbbp	lp|L94,*		" Unpackstring
aa 001430  000010 000002		zero	8,2
aa 001431  000001 236007  83		ldq	1,dl		" 1
aa 001432  700004 756111		stq	sb|4,x1		" i
aa 001433  600312 763100		lprpbb	sp|202		" V
aa 001434  300000 236100		ldq	bb|0
aa 001435  700005 756111		stq	sb|5,x1
aa 001436  000013 710004		tra	L99
			L100:
aa 001437  700004 722111		lxl2	sb|4,x1		" i
aa 001440  600312 765100		lprplb	sp|202		" V
aa 001441  500000 236112		ldq	lb|0,x2
aa 001442  700012 756111		stq	sb|10,x1
aa 001443  000031 272004		tsbbp	L86+2		" MakeUpperCase
aa 001444  000010 000001		zero	8,1
aa 001445  700004 723111		lxl3	sb|4,x1		" i
aa 001446  600312 760100		lprpap	sp|202		" V
aa 001447  000000 756113		stq	ap|0,x3
aa 001450  700004 054111		aos	sb|4,x1		" i
			L99:
aa 001451  700004 236111		ldq	sb|4,x1		" i
aa 001452  700005 116111		cmpq	sb|5,x1
aa 001453  777764 604404		tmoz	L100
aa 001454  600312 235100  84		lda	sp|202		" V
aa 001455  700012 755111		sta	sb|10,x1
aa 001456  700003 235111		lda	sb|3,x1		" Symbol
aa 001457  700013 755111		sta	sb|11,x1
4a 001460  400010 272120		tsbbp	lp|L95,*		" EnterIntoDictionary
aa 001461  000010 000002		zero	8,2
			L98:
aa 001462  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001463  200000 121100		sblx1	bp|0
aa 001464  700001 764111		lprplp	sb|1,x1
aa 001465  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of MakeUpperCase

aa 001466  000015 115141		zero	13,39521		" MakeUpperCase
aa 001467  153145 125160		zero	54885,43632
aa 001470  160145 162103		zero	57445,58435
aa 001471  141163 145000		zero	49779,51712
			L86:
aa 001472  000000 213000  86		epaq	0		" set lp to linkage section
aa 001473  700026 764161		lprplp	sb|22,*au
aa 001474  200000 021100		adlx1	bp|0		" BCPL save
aa 001475  700000 542111		sprpbp	sb|0,x1
aa 001476  700001 544111		sprplp	sb|1,x1
aa 001477  700417 620111		eax0	sb|271,x1
aa 001500  777760 360003		anx0	-16,du
aa 001501  700025 740100		stx0	sb|21		" end of save sequence

aa 001502  000067 710004  87		tra	L105
			L106:
aa 001503  000101 235007		lda	65,dl		" 'A'
aa 001504  000124 710004  88		tra	L103
			L107:
aa 001505  000102 235007		lda	66,dl		" 'B'
aa 001506  000122 710004  89		tra	L103
			L108:
aa 001507  000103 235007		lda	67,dl		" 'C'
aa 001510  000120 710004  90		tra	L103
			L109:
aa 001511  000104 235007		lda	68,dl		" 'D'
aa 001512  000116 710004  91		tra	L103
			L110:
aa 001513  000105 235007		lda	69,dl		" 'E'
aa 001514  000114 710004  92		tra	L103
			L111:
aa 001515  000106 235007		lda	70,dl		" 'F'
aa 001516  000112 710004  93		tra	L103
			L112:
aa 001517  000107 235007		lda	71,dl		" 'G'
aa 001520  000110 710004  94		tra	L103
			L113:
aa 001521  000110 235007		lda	72,dl		" 'H'
aa 001522  000106 710004  95		tra	L103
			L114:
aa 001523  000111 235007		lda	73,dl		" 'I'
aa 001524  000104 710004  96		tra	L103
			L115:
aa 001525  000112 235007		lda	74,dl		" 'J'
aa 001526  000102 710004  97		tra	L103
			L116:
aa 001527  000113 235007		lda	75,dl		" 'K'
aa 001530  000100 710004  98		tra	L103
			L117:
aa 001531  000114 235007		lda	76,dl		" 'L'
aa 001532  000076 710004  99		tra	L103
			L118:
aa 001533  000115 235007		lda	77,dl		" 'M'
aa 001534  000074 710004  100		tra	L103
			L119:
aa 001535  000116 235007		lda	78,dl		" 'N'
aa 001536  000072 710004  101		tra	L103
			L120:
aa 001537  000117 235007		lda	79,dl		" 'O'
aa 001540  000070 710004  102		tra	L103
			L121:
aa 001541  000120 235007		lda	80,dl		" 'P'
aa 001542  000066 710004  103		tra	L103
			L122:
aa 001543  000121 235007		lda	81,dl		" 'Q'
aa 001544  000064 710004  104		tra	L103
			L123:
aa 001545  000122 235007		lda	82,dl		" 'R'
aa 001546  000062 710004  105		tra	L103
			L124:
aa 001547  000123 235007		lda	83,dl		" 'S'
aa 001550  000060 710004  106		tra	L103
			L125:
aa 001551  000124 235007		lda	84,dl		" 'T'
aa 001552  000056 710004  107		tra	L103
			L126:
aa 001553  000125 235007		lda	85,dl		" 'U'
aa 001554  000054 710004  108		tra	L103
			L127:
aa 001555  000126 235007		lda	86,dl		" 'V'
aa 001556  000052 710004  109		tra	L103
			L128:
aa 001557  000127 235007		lda	87,dl		" 'W'
aa 001560  000050 710004  110		tra	L103
			L129:
aa 001561  000130 235007		lda	88,dl		" 'X'
aa 001562  000046 710004  111		tra	L103
			L130:
aa 001563  000131 235007		lda	89,dl		" 'Y'
aa 001564  000044 710004  112		tra	L103
			L131:
aa 001565  000132 235007		lda	90,dl		" 'Z'
aa 001566  000042 710004  113		tra	L103
			L132:
aa 001567  700002 235111		lda	sb|2,x1		" c
aa 001570  000040 710004		tra	L103
			L105:

	"	Begin switchon

aa 001571  700002 235111		lda	sb|2,x1		" c
aa 001572  000141 175007		sba	97,dl
aa 001573  000032 115007		cmpa	26,dl
aa 001574  777773 603004		trc	L132
0a 001575  001576 710005		tra	L133,al
			L133:
aa 001576  777705 710004		tra	L106
aa 001577  777706 710004		tra	L107
aa 001600  777707 710004		tra	L108
aa 001601  777710 710004		tra	L109
aa 001602  777711 710004		tra	L110
aa 001603  777712 710004		tra	L111
aa 001604  777713 710004		tra	L112
aa 001605  777714 710004		tra	L113
aa 001606  777715 710004		tra	L114
aa 001607  777716 710004		tra	L115
aa 001610  777717 710004		tra	L116
aa 001611  777720 710004		tra	L117
aa 001612  777721 710004		tra	L118
aa 001613  777722 710004		tra	L119
aa 001614  777723 710004		tra	L120
aa 001615  777724 710004		tra	L121
aa 001616  777725 710004		tra	L122
aa 001617  777726 710004		tra	L123
aa 001620  777727 710004		tra	L124
aa 001621  777730 710004		tra	L125
aa 001622  777731 710004		tra	L126
aa 001623  777732 710004		tra	L127
aa 001624  777733 710004		tra	L128
aa 001625  777734 710004		tra	L129
aa 001626  777735 710004		tra	L130
aa 001627  777736 710004		tra	L131
			L104:
			L103:
aa 001630  700004 755111		sta	sb|4,x1
aa 001631  700004 235111		lda	sb|4,x1
aa 001632  000044 777000		llr	36		" exchange A and Q
aa 001633  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001634  200000 121100		sblx1	bp|0
aa 001635  700001 764111		lprplp	sb|1,x1
aa 001636  200001 710100		tra	bp|1		" end of return sequence
aa 001637  000000 000000		" padding
	"	Definition section part one - external entry points

5a 000000  000016 000000		" pointer to first definition
aa 000001  000000 600000		" flags: new format, ignore header
aa 000002  000000 000000		" list terminator

aa 000003  011142 143160		" "bcpl_lex2"
aa 000004  154137 154145
aa 000005  170062 000000
aa 000006  016114 157141		" "LoadDictionary"
aa 000007  144104 151143
aa 000010  164151 157156
aa 000011  141162 171000
aa 000012  014163 171155		" "symbol_table"
aa 000013  142157 154137
aa 000014  164141 142154
aa 000015  145000 000000

	"	Segname definition for bcpl_lex2

55 000016  000021 000002		" forward, backward threads
5a 000017  000002 400003		" value defined, class flags
55 000020  000003 000021		" name pointer, first entry def

	"	Definition for LoadDictionary

55 000021  000024 000016		" forward, backward threads
0a 000022  001321 500000		" value defined, class flags
55 000023  000006 000016		" name pointer, segname def pointer

	"	Definition for symbol_table

55 000024  000002 000021		" forward, backward threads
6a 000025  000000 400002		" value defined, class flags
55 000026  000012 000016		" name pointer, segname def pointer
	"	Definition section part two - symbolic info for external references

aa 000027  011142 143160		" "bcpl_lex0"
aa 000030  154137 154145
aa 000031  170060 000000
aa 000032  023105 156164		" "EnterIntoDictionary"
aa 000033  145162 111156
aa 000034  164157 104151
aa 000035  143164 151157
aa 000036  156141 162171
5a 000037  000040 000000
aa 000040  000004 000000
55 000041  000027 000032
aa 000042  022142 143160		" "bcpl_machine_code_"
aa 000043  154137 155141
aa 000044  143150 151156
aa 000045  145137 143157
aa 000046  144145 137000
aa 000047  014125 156160		" "Unpackstring"
aa 000050  141143 153163
aa 000051  164162 151156
aa 000052  147000 000000
5a 000053  000054 000000
aa 000054  000004 000000
55 000055  000042 000047
	"	Linkage section - static variables and external links

aa 000000  000000 000000		" linkage header
0a 000001  001640 000000		" address of defs
aa 000002  000000 000000
aa 000003  000000 000000
aa 000004  000000 000000
aa 000005  000000 000000
2a 000006  000010 000014		" offset to links, total length
aa 000007  000000 000014		" obsolete length

	"	External link pairs

			L95:
3a 000010  777770 000046		" "bcpl_lex0$EnterIntoDictionary"
5a 000011  000037 000000
			L94:
3a 000012  777766 000046		" "bcpl_machine_code_$Unpackstring"
5a 000013  000053 000000
	"	Symbol section header

aa 000000  000000 000001		" version number of header structure
aa 000001  163171 155142		" "symbtree"
aa 000002  164162 145145
aa 000003  000000 000003		" compiler version number
aa 000004  000000 101170		" date/time compiler modified
aa 000005  533311 032072		" 09/25/73  0959.1 mst Tue
aa 000006  000000 102333		" time of this compilation
aa 000007  437767 303620		" 01/24/75  0659.5 mst Fri
aa 000010  142143 160154		" "bcpl    "
aa 000011  040040 040040
aa 000012  000052 000035		" compiler version name - pointer, length
aa 000013  000062 000024		" user id - pointer, length
aa 000014  000067 000043		" comment string - pointer, length
aa 000015  000002 000002		" text and linkage boundaries
aa 000016  000024 000000		" source map, symbol tree root
7a 000017  000000 000161		" section header pointer, block size
aa 000020  000000 000161		" next block pointer, rel_text
aa 000021  000000 000167		" rel_def, rel_link
aa 000022  000173 000161		" rel_symbol, default truncate
aa 000023  000024 000000		" optional truncate, unused
aa 000024  000000 000001		" source files map: version number
aa 000025  000000 000005		"                   number of files
aa 000026  000100 000050		" bcpl_lex2
aa 000027  023333 611423		" last modified on
aa 000030  000000 102333		" 01/24/75  0647.2 mst Fri
aa 000031  432366 600000
aa 000032  000112 000044		" bcpl_lex_head
aa 000033  021607 540216		" last modified on
aa 000034  000000 101621		" 05/06/74  1740.7 mst Mon
aa 000035  351437 000000
aa 000036  000123 000051		" bcpl_compiler_head
aa 000037  021607 540214		" last modified on
aa 000040  000000 101621		" 05/06/74  1740.6 mst Mon
aa 000041  351403 200000
aa 000042  000136 000043		" bcpl_symbols
aa 000043  021607 540223		" last modified on
aa 000044  000000 101621		" 05/06/74  1740.8 mst Mon
aa 000045  351474 000000
aa 000046  000147 000045		" bcpl_lex_codes
aa 000047  021607 540215		" last modified on
aa 000050  000000 101621		" 05/06/74  1740.7 mst Mon
aa 000051  351432 600000
aa 000052  102103 120114		" "BCPL version 3.4, August 1973"
aa 000053  040166 145162
aa 000054  163151 157156
aa 000055  040063 056064
aa 000056  054040 101165
aa 000057  147165 163164
aa 000060  040061 071067
aa 000061  063040 040040
aa 000062  115141 162164		" "Martinson.SysMaint.a"
aa 000063  151156 163157
aa 000064  156056 123171
aa 000065  163115 141151
aa 000066  156164 056141
aa 000067  163157 165162		" "source  xref  alist  optimize  6180"
aa 000070  143145 040040
aa 000071  170162 145146
aa 000072  040040 141154
aa 000073  151163 164040
aa 000074  040157 160164
aa 000075  151155 151172
aa 000076  145040 040066
aa 000077  061070 060040
aa 000100  076062 056061		" ">2.1spec>online>mib083074>bcpl_lex2.bcpl"
aa 000101  163160 145143
aa 000102  076157 156154
aa 000103  151156 145076
aa 000104  155151 142060
aa 000105  070063 060067
aa 000106  064076 142143
aa 000107  160154 137154
aa 000110  145170 062056
aa 000111  142143 160154
aa 000112  076154 144144		" ">ldd>include>bcpl_lex_head.incl.bcpl"
aa 000113  076151 156143
aa 000114  154165 144145
aa 000115  076142 143160
aa 000116  154137 154145
aa 000117  170137 150145
aa 000120  141144 056151
aa 000121  156143 154056
aa 000122  142143 160154
aa 000123  076154 144144		" ">ldd>include>bcpl_compiler_head.incl.bcpl"
aa 000124  076151 156143
aa 000125  154165 144145
aa 000126  076142 143160
aa 000127  154137 143157
aa 000130  155160 151154
aa 000131  145162 137150
aa 000132  145141 144056
aa 000133  151156 143154
aa 000134  056142 143160
aa 000135  154040 040040
aa 000136  076154 144144		" ">ldd>include>bcpl_symbols.incl.bcpl"
aa 000137  076151 156143
aa 000140  154165 144145
aa 000141  076142 143160
aa 000142  154137 163171
aa 000143  155142 157154
aa 000144  163056 151156
aa 000145  143154 056142
aa 000146  143160 154040
aa 000147  076154 144144		" ">ldd>include>bcpl_lex_codes.incl.bcpl"
aa 000150  076151 156143
aa 000151  154165 144145
aa 000152  076142 143160
aa 000153  154137 154145
aa 000154  170137 143157
aa 000155  144145 163056
aa 000156  151156 143154
aa 000157  056142 143160
aa 000160  154040 040040
	"	Relocation information


	"	text section relocation bits

aa 000161  000000 000002		" version number of rel-bits structure
aa 000162  000000 000176		" length in bits
aa 000163  757777 476150
aa 000164  000247 406151
aa 000165  701432 361146
aa 000166  074105 000000
l	"	inkage relocation bits

aa 000167  000000 000002		" version number of rel-bits structure
aa 000170  000000 000060		" length in bits
aa 000171  100002 204652
aa 000172  465200 000000
s	"	ymbol relocation bits

aa 000173  000000 000002		" version number of rel-bits structure
aa 000174  000000 000043		" length in bits
aa 000175  740365 770606
	"	Object map

aa 002130  000000 000001		" version number of object_map structure
aa 002131  157142 152137		" "obj_map "
aa 002132  155141 160040
aa 002133  000000 001637		" text offset, length
aa 002134  001640 000056		" def offset, length
aa 002135  001716 000014		" link offset, length
aa 002136  001732 000176		" symbol offset, length
aa 002137  000000 000000		" break map offset, length
aa 002140  340000 000000		" flags: ^bound, relocatable, procedure, standard
aa 002141  002130 000000		" object map pointer, unused


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
