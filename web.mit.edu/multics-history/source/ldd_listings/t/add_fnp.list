	COMPILATION LISTING OF SEGMENT add_fnp
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 06/04/84  0923.0 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 /* add_fnp.pl1 command interface (perhaps interim) to FNP reconfiguration */
        7 /* format: style2 */
        8 
        9 add_fnp:
       10      procedure options (variable);
       11 
       12 	declare cu_$arg_count	 entry (fixed bin, fixed bin (35));
       13 	declare cu_$arg_ptr		 entry (fixed bin, ptr, fixed bin (21), fixed bin (35));
       14 	declare com_err_		 entry () options (variable);
       15 	declare parse_fnp_name_	 entry (character (*), fixed binary);
       16 	declare hphcs_$configure_fnp	 entry (fixed bin, fixed bin (35));
       17 	declare ioa_		 entry () options (variable);
       18 
       19 	declare ap		 ptr;
       20 	declare al		 fixed bin (21);
       21 	declare argument		 char (al) based (ap);
       22 	declare code		 fixed bin (35);
       23 	declare fnp_no		 fixed bin;
       24 	declare n_args		 fixed bin;
       25 	declare error_table_$bad_channel
       26 				 fixed bin (35) ext static;
       27 	declare ME		 char (32) init ("add_fnp") int static options (constant);
       28 
       29 
       30 	call cu_$arg_count (n_args, code);
       31 	if code ^= 0
       32 	then do;
       33 		call com_err_ (code, ME);
       34 		return;
       35 	     end;
       36 
       37 	if n_args ^= 1
       38 	then do;
       39 		call com_err_ (0, ME, "Usage: add_fnp FNP_TAG");
       40 		return;
       41 	     end;
       42 
       43 	call cu_$arg_ptr (1, ap, al, (0));
       44 	call parse_fnp_name_ (argument, fnp_no);
       45 	if fnp_no ^> 0
       46 	then do;
       47 		call com_err_ (error_table_$bad_channel, ME, "Invalid FNP name ^a.", argument);
       48 		return;
       49 	     end;
       50 	call hphcs_$configure_fnp (fnp_no, code);
       51 	if code = 0
       52 	then call ioa_ ("FNP ^a added to configuration.", argument);
       53 	else call com_err_ (code, ME, "Could not add FNP ^a to configuration");
       54 	return;
       55      end add_fnp;
       56 
       57 
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    06/01/84  1443.2  add_fnp.pl1                       >spec>temp>bce>06/01/84>add_fnp.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
ME                              000000 constant        char(32)                 initial unaligned dcl 27 set ref 33* 39* 47* 53*
al                              000102 automatic       fixed bin(21,0)          dcl 20 set ref 43* 44 44 47 47 51 51
ap                              000100 automatic       pointer                  dcl 19 set ref 43* 44 47 51
argument                               based           char                     unaligned dcl 21 set ref 44* 47* 51*
code                            000103 automatic       fixed bin(35,0)          dcl 22 set ref 30* 31 33* 50* 51 53*
com_err_                        000014 constant        entry                    external dcl 14 ref 33 39 47 53
cu_$arg_count                   000010 constant        entry                    external dcl 12 ref 30
cu_$arg_ptr                     000012 constant        entry                    external dcl 13 ref 43
error_table_$bad_channel        000024 external static fixed bin(35,0)          dcl 25 set ref 47*
fnp_no                          000104 automatic       fixed bin(17,0)          dcl 23 set ref 44* 45 50*
hphcs_$configure_fnp            000020 constant        entry                    external dcl 16 ref 50
ioa_                            000022 constant        entry                    external dcl 17 ref 51
n_args                          000105 automatic       fixed bin(17,0)          dcl 24 set ref 30* 37
parse_fnp_name_                 000016 constant        entry                    external dcl 15 ref 44

NAME DECLARED BY EXPLICIT CONTEXT.
add_fnp                         000057 constant        entry                    external dcl 9

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       436         464     332         446
Length       636     332        26         136     104           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
add_fnp                             120 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
add_fnp                  000100 ap                          add_fnp
                         000102 al                          add_fnp
                         000103 code                        add_fnp
                         000104 fnp_no                      add_fnp
                         000105 n_args                      add_fnp

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      cu_$arg_count                 cu_$arg_ptr                   hphcs_$configure_fnp
ioa_                          parse_fnp_name_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$bad_channel




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      9 000056        30 000064        31 000074        33 000076        34 000113        37 000114        39 000117
     40 000147        43 000150        44 000170        45 000210        47 000212        48 000245        50 000246
     51 000257        53 000305        54 000331


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
