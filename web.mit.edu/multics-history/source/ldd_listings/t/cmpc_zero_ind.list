ASSEMBLY LISTING OF SEGMENT >spec>on>6978-10/22/84>cmpc_zero_ind.alm               
ASSEMBLED ON:	10/22/84  1115.4 mst Mon
OPTIONS USED:	list 
ASSEMBLED BY:	ALM Version  6.6  November 1982 
ASSEMBLER CREATED:	09/21/83  1227.3 mst Wed

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Information Systems Inc., 1982 *
                                     4  " *                                                         *
                                     5  " ***********************************************************
                                     6  "
                                     7  " Modified Nov 1983 by Rich Coppola to add test for another cmpc failure
                                     8  " which is similar to the one originally covered by this test.
                                     9  	
                                    10  
    000000                          11  	name	cmpc_zero_ind
                        000000      12  	entry	cmpc_zero_ind
                                    13  	tempd	ARG
    000000                          14  cmpc_zero_ind:
    000000  aa   000060 6270 00     15  	push
    000001  aa  7 00040 2721 20
    000002  aa   000144 2230 03     16  	ldx3	100,du
    000003  aa  0 00002 3521 20     17  	eppbp	ap|2,*	"get ptr to temp seg
    000004  aa  2 00000 3521 20     18  	eppbp	bp|0,*
    000005  aa   041771 0520 03     19  	adwpbp	17401,du
    000006  aa   000100 1004 00     20  	mlr	(),(pr)
    000007  0a   000132 000040      21  	desc9a	data,32
    000010  aa   200000 000040      22  	desc9a	bp|0,32
                                    23  	
    000011  aa  0 00002 3535 20     24  	eppbb	ap|2,*
    000012  aa  3 00000 3535 20     25  	eppbb	bb|0,*
    000013  aa   041261 0530 03     26  	adwpbb	17073,du
                                    27  
                                    28  	
    000014                          29  loop:
    000014  aa  6 00000 2541 00     30  	call 	test_cpu$deactivate_tempseg     "now deactivate it
    000015  0a   000146 3500 00
    000016  4a  4 00010 3521 20
    000017  aa  6 00040 7531 00
    000020  aa  7 00036 6701 20
    000021  aa  6 00000 1731 00
    000022  aa  6 00040 0731 00
    000023  0a   000132 3520 00     31  	eppbp	data
    000024  0a   000130 2350 00     32  	lda	l1
    000025  0a   000131 2360 00     33  	ldq	l2
    000026  aa   000044 7730 00     34  	lrl	36
    000027  0a   000131 1360 00     35  	sblq	l2
    000030  aa   000002 0360 07     36  	adlq	2,dl
    000031  aa  0 00100 1205 45     37  	scd	(pr,rl,al),(pr)
    000032  aa   300000 000006      38  	desc9a	bb|0,ql
    000033  aa   200000 000000      39  	desc9a	bp|0
    000034  aa  6 00050 0001 00     40  	arg	ARG
    000035  0a   000126 6064 00     41  	ttn	scd_fail
    000036  aa   000001 0350 07     42  	adla	1,dl
    000037  aa  6 00050 0351 00     43  	adla	ARG
    000040  aa  6 00050 7551 00     44  	sta	ARG
    000041  0a   000131 2360 00     45  	ldq	l2
                                    46  
    000042  aa  6 00000 2541 00     47  	call 	test_cpu$deactivate_tempseg     "now deactivate it again
    000043  0a   000146 3500 00
    000044  4a  4 00010 3521 20
    000045  aa  6 00040 7531 00
    000046  aa  7 00036 6701 20
    000047  aa  6 00000 1731 00
    000050  aa  6 00040 0731 00
                                    48  
    000051  aa  0 00140 1065 45     49  	cmpc	(pr,rl,al),(pr,rl)
    000052  aa   377777 600006      50  	desc9a	bb|-1(3),ql
    000053  aa   200000 000006      51  	desc9a	bp|0,ql
    000054  0a   000056 6000 00     52  	tze	flush_it
    000055  aa   000000 000000      53  zop:	oct	0
                                    54  
    000056  aa  6 00000 2541 00     55  flush_it:	call 	test_cpu$deactivate_tempseg     "now deactivate it again
    000057  0a   000146 3500 00
    000060  4a  4 00010 3521 20
    000061  aa  6 00040 7531 00
    000062  aa  7 00036 6701 20
    000063  aa  6 00000 1731 00
    000064  aa  6 00040 0731 00
                                    56  
    000065  aa   777777 6230 13     57  	eax3	-1,3		"decrement loop count
    000066  0a   000014 6010 00     58  	tnz	loop
                                    59  				"Now start next test of cmpc
    000067  aa   000144 2230 03     60  	ldx3	100,du
    000070  aa  0 00002 3535 20     61  	eppbb	ap|2,*
    000071  aa  3 00000 3535 20     62  	eppbb	bb|0,*
    000072  aa  3 00000 3521 20     63  	eppbp	bb|0,*
    000073  aa  3 00000 3515 20     64  	eppab	bb|0,*
    000074  aa   010462 0530 03     65  	adwpbb	4402,du		"oct 10462
    000075  aa   761020 0510 03     66  	adwpab	254480,du		"oct 761020
    000076  aa   000375 2350 07     67  	lda	253,dl
    000077  aa   007521 2360 07     68  	ldq	3921,dl
                                    69  
    000100  aa   040140 1004 00     70  	mlr	(),(pr,rl),fill(040)
    000101  0a   000127 000003      71  	desc9a	NUM,3
    000102  aa   300000 000005      72  	desc9a	bb|0,al
                                    73  	
    000103  aa   040140 1004 00     74  	mlr	(),(pr,rl),fill(040)
    000104  0a   000127 000003      75  	desc9a	NUM,3
    000105  aa   100000 000006      76  	desc9a	ab|0,ql
                                    77  
    000106                          78  cmpc_loop:
    000106  aa  6 00000 2541 00     79  	call 	test_cpu$deactivate_tempseg     "now deactivate it
    000107  0a   000146 3500 00
    000110  4a  4 00010 3521 20
    000111  aa  6 00040 7531 00
    000112  aa  7 00036 6701 20
    000113  aa  6 00000 1731 00
    000114  aa  6 00040 0731 00
    000115  aa   000000 0110 03     80  	even
    000116  aa  0 40140 1065 40     81  	cmpc	(pr,rl),(pr,rl),fill(040)
    000117  aa   300000 000005      82  	desc9a	bb|0,al
    000120  aa   100000 000006      83  	desc9a	ab|0,ql
    000121  0a   000125 6010 00     84  	tnz	ZOP
    000122  aa   777777 6230 13     85  	eax3	-1,3			"decrement loop count
    000123  0a   000106 6010 00     86  	tnz	cmpc_loop
    000124  aa  7 00042 7101 20     87  	return
                                    88  
    000125  aa   000000 000000      89  ZOP:	oct	0
    000126  aa   000000 0070 00     90  scd_fail: mme4
                                    91  
    000127  aa   061060 061000      92  NUM:	oct	061060061000
                                    93  
    000130  aa   000000 031142      94  l1:	oct	000000031142
    000131  aa   000000 000040      95  l2:	oct	000000000040
                                    96  	even
    000132  aa  106 117 122 115     97  data:	aci	"FORM_5                          "
    000133  aa  137 065 040 040
    000134  aa  040 040 040 040
    000135  aa  040 040 040 040
    000136  aa  040 040 040 040
    000137  aa  040 040 040 040
    000140  aa  040 040 040 040
    000141  aa  040 040 040 040
                                    98  
                                    99  	end
ENTRY SEQUENCES
     
    000142  5a   000012 0000 00
    000143  aa  7 00046 2721 20
    000144  0a   000000 7100 00
LITERALS
     
    000146  aa   000000 000000 
    000147  aa   000000 000000 
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    000150  5a   000003 000000 
    000151  5a   000030 600000 
    000152  aa   000000 000000 
    000153  55   000012 000002 
    000154  5a   000002 400003 
    000155  55   000006 000012 
    000156  aa  015 143 155 160
    000157  aa  143 137 172 145
    000160  aa  162 157 137 151
    000161  aa  156 144 000 000
    000162  55   000021 000003 
    000163  0a   000143 500000 
    000164  55   000015 000003 
    000165  aa  015 143 155 160         cmpc_zero_ind
    000166  aa  143 137 172 145
    000167  aa  162 157 137 151
    000170  aa  156 144 000 000
    000171  55   000002 000012 
    000172  6a   000000 400002 
    000173  55   000024 000003 
    000174  aa  014 163 171 155         symbol_table
    000175  aa  142 157 154 137
    000176  aa  164 141 142 154
    000177  aa  145 000 000 000

DEFINITIONS HASH TABLE

    000200  aa   000000 000015 
    000201  aa   000000 000000 
    000202  aa   000000 000000 
    000203  aa   000000 000000 
    000204  aa   000000 000000 
    000205  aa   000000 000000 
    000206  aa   000000 000000 
    000207  5a   000021 000000 
    000210  aa   000000 000000 
    000211  aa   000000 000000 
    000212  aa   000000 000000 
    000213  aa   000000 000000 
    000214  aa   000000 000000 
    000215  5a   000012 000000 

EXTERNAL NAMES

    000216  aa  022 144 145 141         deactivate_tempseg
    000217  aa  143 164 151 166
    000220  aa  141 164 145 137
    000221  aa  164 145 155 160
    000222  aa  163 145 147 000
    000223  aa  010 164 145 163         test_cpu
    000224  aa  164 137 143 160
    000225  aa  165 000 000 000

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    000226  aa   000004 000000 
    000227  55   000053 000046 
    000230  aa   000001 000000 
    000231  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    000232  5a   000056 000000 
    000233  aa   000000 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   000150 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000012 
    000007  a2   000000 000000 
    000010  9a   777770 0000 46         test_cpu|deactivate_tempseg
    000011  5a   000062 0000 00
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000004 
    000004  aa   000000 112143 
    000005  aa   305203 523135 
    000006  aa   000000 113126 
    000007  aa   356002 370224 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000131 
    000020  aa   000000 000104 
    000021  aa   000000 000117 
    000022  aa   000123 000104 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   040066 056066 
    000030  aa   040040 116157 
    000031  aa   166145 155142 
    000032  aa   145162 040061 
    000033  aa   071070 062040 
    000034  aa   107112 157150 
    000035  aa   156163 157156 
    000036  aa   056123 171163 
    000037  aa   115141 151156 
    000040  aa   164056 155040 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   154151 163164 
    000045  aa   040040 040040 
    000046  aa   040040 040040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040040 040040 
    000057  aa   040040 040040 
    000060  aa   040040 040040 
    000061  aa   040040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000001 
    000066  aa   000072 000050 
    000067  aa   131232 072545 
    000070  aa   000000 113126 
    000071  aa   347555 000000 
    000072  aa   076163 160145          >spec>on>6978-10/22/84>cmpc_zero_ind.alm
    000073  aa   143076 157156 
    000074  aa   076066 071067 
    000075  aa   070055 061060 
    000076  aa   057062 062057 
    000077  aa   070064 076143 
    000100  aa   155160 143137 
    000101  aa   172145 162157 
    000102  aa   137151 156144 
    000103  aa   056141 154155 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

          50    ARG                      cmpc_zero_ind:       13,   40,   43,   44.
         106    cmpc_loop                cmpc_zero_ind:       78,   86.
           0    cmpc_zero_ind            cmpc_zero_ind:       12,   14.
         132    data                     cmpc_zero_ind:       21,   31,   97.
                deactivate_tempseg       cmpc_zero_ind:       30,   47,   55,   79.
          56    flush_it                 cmpc_zero_ind:       52,   55.
         130    l1                       cmpc_zero_ind:       32,   94.
         131    l2                       cmpc_zero_ind:       33,   35,   45,   95.
          14    loop                     cmpc_zero_ind:       29,   58.
         127    NUM                      cmpc_zero_ind:       71,   75,   92.
         126    scd_fail                 cmpc_zero_ind:       41,   90.
                test_cpu                 cmpc_zero_ind:       30,   47,   55,   79.
         125    ZOP                      cmpc_zero_ind:       84,   89.
          55    zop                      cmpc_zero_ind:       53.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
