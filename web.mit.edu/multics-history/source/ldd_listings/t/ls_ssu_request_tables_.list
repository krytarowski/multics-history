ASSEMBLY LISTING OF SEGMENT >special_ldd>install>MR12.1-1054>ls_ssu_request_tables_.alm                                                                                                             
ASSEMBLED ON:	08/04/87  1244.9 mst Tue
OPTIONS USED:	-target l68                              list symbols 
ASSEMBLED BY:	ALM Version 7.3 November 1986   
ASSEMBLER CREATED:	11/26/86  1244.2 mst Wed

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Bull Inc., 1987                *
                                     4  " *                                                         *
                                     5  " ***********************************************************
                                     6  
                                     7  "Request tables for use by login servers.
                                     8  
                                     9  " HISTORY COMMENTS:
                                    10  "  1) change(85-03-01,Coren), approve(87-07-06,MCR7679),
                                    11  "     audit(87-03-01,GDixon), install(87-08-04,MR12.1-1055):
                                    12  "     Written.
                                    13  "  2) change(87-03-04,GDixon), approve(87-07-06,MCR7679),
                                    14  "     audit(87-05-19,Parisek), install(87-08-04,MR12.1-1055):
                                    15  "      A) Add slave request, which lets the user know the slave request is not
                                    16  "         supported by the Login Server.
                                    17  "      B) Change help request to call ls_validate_user_$help, which prints
                                    18  "         information about the subsystem when the help request is invoked
                                    19  "         without arguments.
                                    20  "      C) Sort ancillary requests (eg, access_mode, echo, temrinal_type, etc)
                                    21  "         alphabetically following the more important requests of each table.
                                    22  "      D) Standarize list_request descriptions for all requests.
                                    23  "      E) Add the list_endpoints requests to the overseer_requests table.
                                    24  "      F) Add the exec_com request to the overseer_requests table.
                                    25  "  3) change(87-05-08,GDixon), approve(87-07-06,MCR7679),
                                    26  "     audit(87-05-19,Parisek), install(87-08-04,MR12.1-1055):
                                    27  "      A) Add all standard requests except abbrev, debug_mode, and execute to
                                    28  "         the overseer_requests table.
                                    29  "      B) Also, add the Multics pause and user commands to the
                                    30  "               overseer_requests table.
                                    31  "      C) Add a new endpoints_listening (epl) request to the overseer_requests
                                    32  "               table.
                                    33  "      D) Remove ready, ready_on and ready_off from the
                                    34  "         enabled_standard_requests table, since this table is now used only
                                    35  "         for the login and connect loop subsystems which do not want these
                                    36  "         requests.
                                    37  "  4) change(87-06-08,GDixon), approve(87-07-06,MCR7679),
                                    38  "     audit(87-07-06,Parisek), install(87-08-04,MR12.1-1055):
                                    39  "      A) Correct coding error in use of multics_request macro.
                                    40  "  5) change(87-06-24,GDixon), approve(87-07-06,MCR7679),
                                    41  "     audit(87-07-06,Parisek), install(87-08-04,MR12.1-1055):
                                    42  "      A) In the login_requests table, add logout as a synonym for the hangup
                                    43  "         command. But don't list or summarize logout since it is not one of
                                    44  "         the documented commands at login time.  It is only documented for
                                    45  "         use within the connect loop. (dsa 242)
                                    46  "                                                      END HISTORY COMMENTS
                                    47  
                                    48  	include	ssu_request_macros
                                   1-1  " BEGIN INCLUDE FILE ... ssu_request_macros.incl.alm
                                   1-2  " Created:  5 May 1980 by W. Olin Sibert
                                   1-3  " Modified: 25 July 1980 by G. Palter to add multics_request macro
                                   1-4  " Modified: 1 December 1981 by G. Palter to remove user_flags
                                   1-5  " Modified: 12 February 1982 by G. Palter for version 4
                                   1-6  " Modified: 28 February 1982 by G. Palter to add dont_summarize and dont_list
                                   1-7  " Modified: 2 August 1982 by Jay Pattin to add unknown_request
                                   1-8  " Modified: 24 October 1984 by G. Palter to restore user flags and add the
                                   1-9  "    set_default_flags and set_default_multics_flags macros
                                  1-10  
                                  1-11  
                                  1-12  " ALM macros used to define subsystem request tables
                                  1-13  
                                  1-14  
                                  1-15  	macro	request_table_version
                              1   1-16  	aci	"srqt_4.0",8
                              2   1-17  	&end
                                  1-18  
                                  1-19  
                                  1-20  	macro	namelist
                              1   1-21  	maclist	off,save
                              2   1-22  	vfd	36/&K
                              3   1-23  &R&(	aci	@&i@,32
                              4   1-24  &)
                              5   1-25  	maclist	restore
                              6   1-26  	&end
                                  1-27  
                                  1-28  " 
                                  1-29  
                                  1-30  " System defined per-request flags
                                  1-31  
                        400000    1-32  	bool	flags.allow_command,400000	" valid as a command
                        200000    1-33  	bool	flags.allow_af,200000	" valid as an active function
                        600000    1-34  	bool	flags.allow_both,600000	" valid as both
                                  1-35  
                        100000    1-36  	bool	flags.unimplemented,100000	" request is not yet implemented
                        040000    1-37  	bool	flags.multics_request,040000	" request is actually a Multics command
                                  1-38  
                        020000    1-39  	bool	flags.dont_summarize,020000	" summarize_requests won't list it
                        010000    1-40  	bool	flags.dont_list,010000	" list_requests won't show it without -all
                                  1-41  
                        004000    1-42  	bool	flags.unknown,004000	" request is explicitly made unknown
                                  1-43  
                                  1-44  
                                  1-45  " Macros for setting per-request flags
                                  1-46  
                                  1-47  	macro	set_flags_loop
                              1   1-48  	maclist	off,save
                              2   1-49  &(3
                              3   1-50  &=&i,default&[	set_flags_loop	&1,(0),(&2)
                              4   1-51  &;	set	&1,&1+&i
                              5   1-52  &]&)
                              6   1-53  	maclist	restore
                              7   1-54  	&end
                                  1-55  
                                  1-56  
                                  1-57  	macro	set_flags
                              1   1-58  	maclist	off,save
                              2   1-59  	set	&1,0
                              3   1-60  &=&3,&[	set_flags_loop	&1,(0),(&2)
                              4   1-61  &;	set_flags_loop	&1,(&2),(&3)
                              5   1-62  &]
                              6   1-63  	maclist	restore
                              7   1-64  	&end
                                  1-65  
                                  1-66  " 
                                  1-67  
                                  1-68  "	set_default_flags {(system-flags)},{(user-flags)}
                                  1-69  
                                  1-70  " Sets the default system and/or user flags to be used for requests:
                                  1-71  "   system-flags: defines the default general nature of requests;" the default
                                  1-72  "      default is flags.allow_command
                                  1-73  "   user-flags:  defines the default setting for the subsystem specific flags
                                  1-74  "      associated with requests;" the default default is none (0)
                                  1-75  "   Note: If either system-flags or user-flags is ommitted, the default is not
                                  1-76  "      changed from its prior value.  This action allows the use of multiple
                                  1-77  "      set_default_flags macros within a table to change system or user
                                  1-78  "      flags without affecting the other defaults
                                  1-79  
                                  1-80  	macro	set_default_flags
                              1   1-81  	maclist	off,save
                              2   1-82  &^=&1,&[	set_flags	.dft_sf,(flags.allow_command),(&1)
                              3   1-83  &]
                              4   1-84  &^=&2,&[	set_flags	.dft_uf,(0),(&2)
                              5   1-85  &]
                              6   1-86  	maclist	restore
                              7   1-87  	&end
                                  1-88  
                                  1-89  
                                  1-90  "	set_default_multics_flags {(system-flags)},{(user-flags)}
                                  1-91  
                                  1-92  " Sets the default system and/or user flags to be used for Multics commands when used as requests:
                                  1-93  "   system-flags: defines the default general nature of Multics requests;" the
                                  1-94  "      default default is flags.allow_command+flags.allow_af
                                  1-95  "   user-flags:  defines the default setting for the subsystem specific flags
                                  1-96  "      associated with Multics requests;" the default default is none (0)
                                  1-97  "   Note: If either system-flags or user-flags is ommitted, the default is not
                                  1-98  "      changed from its prior value.  This action allows the use of multiple
                                  1-99  "      set_default_multics_flags macros within a table to change system or user
                                 1-100  "      flags without affecting the other defaults
                                 1-101  
                                 1-102  	macro	set_default_multics_flags
                              1  1-103  	maclist	off,save
                              2  1-104  &^=&1,&[	set_flags	.dft_mrsf,(flags.allow_command,flags.allow_af),(&1)
                              3  1-105  &]
                              4  1-106  &^=&2,&[	set_flags	.dft_mruf,(0),(&2)
                              5  1-107  &]
                              6  1-108  	maclist	restore
                              7  1-109  	&end
                                 1-110  
                                 1-111  " 
                                 1-112  
                                 1-113  	macro	.multics_request_doc
                              1  1-114  	null
                              2  1-115  	&end
                                 1-116  
                                 1-117  
                                 1-118  	macro	dft_multics_doc_lth
                              1  1-119  	set	.multics_doc_lth,0
                              2  1-120  	&end
                                 1-121  
                                 1-122  
                                 1-123  "	set_default_multics_doc (string)
                                 1-124  
                                 1-125  " Sets the default documentation to be used for Multics commands when used as requests:
                                 1-126  "   string: is the documentation string to be used for any subsequent requests defined by
                                 1-127  "      the multics_request_macro;" all occurences of "&1" in this string will be replaced by
                                 1-128  "      the actual name of the request;" Eg:
                                 1-129  "	set_default_multics_doc (Type '.. help &1' for more information.)
                                 1-130  
                                 1-131  	macro	set_default_multics_doc
                              1  1-132  	maclist	off,save
                              2  1-133  	macro	.multics_request_doc
                              3  1-134  	aci	@&1@
                              4  1-135  	&&end
                              5  1-136  	macro	dft_multics_doc_lth
                              6  1-137  	macro	.compute
                              7  1-138  	set	.multics_doc_lth,&&&&l1
                              8  1-139  	&&&&end
                              9  1-140  	.compute (&1)
                             10  1-141  	&&end
                             11  1-142  	maclist	restore
                             12  1-143  	&end
                                 1-144  
                                 1-145  " 
                                 1-146  
                                 1-147  "	begin_table tablename
                                 1-148  
                                 1-149  " Defines a subsystem request table (multiple tables may exist in a single object segment):
                                 1-150  "   tablename: the name by which this table may be referenced externally;" references to the
                                 1-151  "      table should be of the form segname$tablename where segname is the name of this
                                 1-152  "      object segment
                                 1-153  
                                 1-154  	macro	begin_table
                              1  1-155  	segdef	&1
                              2  1-156  	maclist	object,save
                              3  1-157  	use	tables
                              4  1-158  &1:	request_table_version
                              5  1-159  	aci	@&1@,32
                              6  1-160  	dup	6
                              7  1-161  	vfd	36/0
                              8  1-162  	dupend
                              9  1-163  	vfd	36/&1.rc
                             10  1-164  	maclist	off
                             11  1-165  	set	.rc,0
                             12  1-166  	set_default_flags (default),(default)
                             13  1-167  	set_default_multics_flags (default),(default)
                             14  1-168  	maclist	restore
                             15  1-169  	&end
                                 1-170  
                                 1-171  
                                 1-172  "	end_table	tablename
                                 1-173  
                                 1-174  " Indicates the end of a subsystem request table definition:
                                 1-175  "   tablename: the name of the table which has now been completely defined
                                 1-176  
                                 1-177  	macro	end_table
                              1  1-178  	maclist	off,save
                              2  1-179  	set	&1.rc,.rc
                              3  1-180  	maclist	restore
                              4  1-181  	&end
                                 1-182  
                                 1-183  " 
                                 1-184  
                                 1-185  "	request	name,processor,({abbreviations}),{(documentation)},
                                 1-186  "		 {(system-flags)},{(user-flags)}
                                 1-187  
                                 1-188  " Defines a subsystem request:
                                 1-189  "   name: the primary name of this request
                                 1-190  "   processor: the name of the procedure which actually executes this request;" it must be
                                 1-191  "      of the form segname$entryname
                                 1-192  "   abbreviations: is the list of defined abbreviations for this request
                                 1-193  "   documentation: a short string used by the list_requests request to explain this request
                                 1-194  "   system-flags: defines the general nature of this request;" the default is
                                 1-195  "      flags.allow_command
                                 1-196  "   user-flags: allows a subsystem to provide subsystem-specific information
                                 1-197  "      with the request's definition;" the default is none (0)
                                 1-198  
                                 1-199  	macro	request
                              1  1-200  	maclist	off,save
                              2  1-201  	set	.rc,.rc+1
                              3  1-202  	maclist	object
                              4  1-203  	use	tables
                              5  1-204  	vfd	18/&U.call,18/&U.names
                              6  1-205  &=&4,&[	vfd	36/0
                              7  1-206  &;	vfd	18/&U.info,18/&l4
                              8  1-207  	maclist	off
                              9  1-208  	use	info
                             10  1-209  &U.info:	aci	@&4@
                             11  1-210  &]
                             12  1-211  	use	tables
                             13  1-212  	set_flags	.sf,(.dft_sf),(&5)
                             14  1-213  	set_flags	.uf,(.dft_uf),(&6)
                             15  1-214  	maclist	object
                             16  1-215  	vfd	18/.sf,18/.uf
                             17  1-216  	maclist	off
                             18  1-217  	use	calls
                             19  1-218  &U.call:	epaq	*
                             20  1-219  	lprp4	7|stack_header.lot_ptr,*au
                             21  1-220  	call6	&2
                             22  1-221  	use	names
                             23  1-222  &U.names:	namelist	&1&^=&3,&[,&3&]
                             24  1-223  	maclist	restore
                             25  1-224  	&end
                                 1-225  
                                 1-226  " 
                                 1-227  
                                 1-228  "	unknown_request name,(abbreviations)
                                 1-229  
                                 1-230  " Defines an unknown request: used to make the utilities not recognize a request even though
                                 1-231  " it is defined in a later request table (such as ssu_request_tables_$standard_request):
                                 1-232  "   name: the primary name of the request to be marked as unknown
                                 1-233  "   abbreviations: is the list of defined abbreviations for this request
                                 1-234  
                                 1-235  	macro	unknown_request
                              1  1-236  	maclist	off,save
                              2  1-237  	set	.rc,.rc+1
                              3  1-238  	maclist	object
                              4  1-239  	use	tables
                              5  1-240  	vfd	18/&U.call,18/&U.names
                              6  1-241  	vfd	36/0
                              7  1-242  	vfd	18/flags.unknown,18/0
                              8  1-243  	maclist	off
                              9  1-244  	use	calls
                             10  1-245  &U.call:	epaq	*
                             11  1-246  	lprp4	7|stack_header.lot_ptr,*au
                             12  1-247  	call6	ssu_$unknown_request
                             13  1-248  	use	names
                             14  1-249  &U.names: namelist	&1&^=&2,&[,&2&]
                             15  1-250  	maclist	restore
                             16  1-251  	&end
                                 1-252  
                                 1-253  " 
                                 1-254  
                                 1-255  "	multics_request name,({abbreviations}),({documenation}),{procedure},
                                 1-256  "		       {(system-flags)},{(user-flags)}
                                 1-257  
                                 1-258  " Defines that a Multics command/AF may be used as a subsystem request:
                                 1-259  "   name: the primary name of this request (usually the name of the Multics command/AF)
                                 1-260  "   abbreviations: is the list of defined abbreviations for this request
                                 1-261  "   documentation: a short string used by the list_requests request to explain this request;
                                 1-262  "      if no documentation is provided, the documentation specified by a prior use of
                                 1-263  "      set_default_multics_doc is used
                                 1-264  "   procedure: the name of the Multics command/AF which is actually executed by this
                                 1-265  "      request;" it must be of the form segname$entryname;" if not given, the default is
                                 1-266  "      name$name
                                 1-267  "   system-flags: defines the general nature of this request;" the default is
                                 1-268  "      flags.allow_command+flags.allow_af
                                 1-269  "   user-flags: allows a subsystem to provide subsystem-specific information
                                 1-270  "      with the request's definition;" the default is none (0)
                                 1-271  
                                 1-272  	macro	multics_request
                              1  1-273  	maclist	off,save
                              2  1-274  	set	.rc,.rc+1
                              3  1-275  	maclist	object
                              4  1-276  	use	tables
                              5  1-277  	vfd	18/&U.call,18/&U.names
                              6  1-278  &=&3,&[	dft_multics_doc_lth &1,(&2),(&3),(&4),(&5),(&6)
                              7  1-279  	vfd	18/&U.info,18/.multics_doc_lth
                              8  1-280  &;	vfd	18/&U.info,18/&l3
                              9  1-281  &]
                             10  1-282  	maclist	off
                             11  1-283  	use	info
                             12  1-284  &U.info:
                             13  1-285  &=&3,&[	.multics_request_doc &1,(&2),(&3),(&4),(&5),(&6)
                             14  1-286  &;	aci	@&3@
                             15  1-287  &]
                             16  1-288  	use	tables
                             17  1-289  	maclist	object
                             18  1-290  	set_flags	.sf,(.dft_mrsf),(&5)
                             19  1-291  	set_flags	.uf,(.dft_mruf),(&6)
                             20  1-292  	maclist	object
                             21  1-293  	vfd	18/.sf+flags.multics_request,18/.uf
                             22  1-294  	maclist	off
                             23  1-295  	use	calls
                             24  1-296  &U.call:	epaq	*
                             25  1-297  	lprp4	7|stack_header.lot_ptr,*au
                             26  1-298  &=&4,&[	call6	&1$&1
                             27  1-299  &;	call6	&4
                             28  1-300  &]
                             29  1-301  	use	names
                             30  1-302  &U.names:	namelist	&1&^=&2,&[,&2&]
                             31  1-303  	maclist	restore
                             32  1-304  	&end
                                 1-305  
                                 1-306  " 
                                 1-307  
                                 1-308  " Required ALM statements to make this all work
                                 1-309  
                                 1-310  	use	tables
                                 1-311  	use	calls
                                 1-312  	use	names
                                 1-313  	use	info
                                 1-314  	join	/text/tables,calls,names,info
                                 1-315  
                                 1-316  	include	stack_header
                                   2-1  "	BEGIN INCLUDE FILE ... stack_header.incl.alm  3/72  Bill Silver
                                   2-2  "
                                   2-3  "	modified 7/76 by M. Weaver for *system links and more system use of areas
                                   2-4  "	modified 3/77 by M. Weaver  to add rnt_ptr
                                   2-5  "	modified 7/77 by S. Webber to add run_unit_depth and assign_linkage_ptr
                                   2-6  "	modified 6/83 by J. Ives to add trace_frames and in_trace.
                                   2-7  
                                   2-8  " HISTORY COMMENTS:
                                   2-9  "  1) change(86-06-24,DGHowe), approve(86-06-24,MCR7396),
                                  2-10  "     audit(86-08-05,Schroth), install(86-11-03,MR12.0-1206):
                                  2-11  "     added the heap_header_ptr definition
                                  2-12  "  2) change(86-08-12,Kissel), approve(86-08-12,MCR7473),
                                  2-13  "     audit(86-10-10,Fawcett), install(86-11-03,MR12.0-1206):
                                  2-14  "     Modified to support control point management.  These changes were
                                  2-15  "     actually made in February 1985 by G. Palter.
                                  2-16  "  3) change(86-10-22,Fawcett), approve(86-10-22,MCR7473),
                                  2-17  "     audit(86-10-22,Farley), install(86-11-03,MR12.0-1206):
                                  2-18  "     Remove the old_lot pointer and replace it with cpm_data_ptr. Use the 18
                                  2-19  "     bit pad after cur_lot_size for the cpm_enabled. This was done to save
                                  2-20  "     some space int the stack header and change the cpd_ptr unal to
                                  2-21  "     cpm_data_ptr (ITS pair).
                                  2-22  "                                                      END HISTORY COMMENTS
                                  2-23  
                        000004    2-24  	equ	stack_header.cpm_data_ptr,4		ptr to control point for this stack
                        000006    2-25  	equ	stack_header.combined_stat_ptr,6	ptr to separate static area
                                  2-26  
                        000010    2-27  	equ	stack_header.clr_ptr,8		ptr to area containing linkage sections
                        000012    2-28  	equ	stack_header.max_lot_size,10		number of words allowed in lot (DU)
                        000012    2-29  	equ	stack_header.main_proc_invoked,10	nonzero if main proc was invoked in run unit (DL)
                        000012    2-30  	equ	stack_header.run_unit_depth,10	number of active run units stacked (DL)
                        000013    2-31  	equ	stack_header.cur_lot_size,11		DU number of words (entries) in lot
                        000013    2-32            equ	stack_header.cpm_enabled,11		DL  non-zero if control point management is enabled
                        000014    2-33  	equ	stack_header.system_free_ptr,12	ptr to system storage area
                        000016    2-34  	equ	stack_header.user_free_ptr,14		ptr to user storage area
                                  2-35  
                        000020    2-36  	equ	stack_header.parent_ptr,16		ptr to parent stack or null
                        000022    2-37  	equ	stack_header.stack_begin_ptr,18	ptr to first stack frame
                        000024    2-38  	equ	stack_header.stack_end_ptr,20		ptr to next useable stack frame
                        000026    2-39  	equ	stack_header.lot_ptr,22		ptr to the lot for the current ring
                                  2-40  
                        000030    2-41  	equ	stack_header.signal_ptr,24		ptr to signal proc for current ring
                        000032    2-42  	equ	stack_header.bar_mode_sp,26		value of sp before entering bar mode
                        000034    2-43  	equ	stack_header.pl1_operators_ptr,28	ptr: pl1_operators_$operator_table
                        000036    2-44  	equ	stack_header.call_op_ptr,30		ptr to standard call operator
                                  2-45  
                        000040    2-46  	equ	stack_header.push_op_ptr,32		ptr to standard push operator
                        000042    2-47  	equ	stack_header.return_op_ptr,34		ptr to standard return operator
                        000044    2-48  	equ	stack_header.ret_no_pop_op_ptr,36	ptr: stand. return/ no pop operator
                        000046    2-49  	equ	stack_header.entry_op_ptr,38		ptr to standard entry operator
                                  2-50  
                        000050    2-51  	equ	stack_header.trans_op_tv_ptr,40	ptr to table of translator operator ptrs
                        000052    2-52  	equ	stack_header.isot_ptr,42		pointer to ISOT
                        000054    2-53  	equ	stack_header.sct_ptr,44		pointer to System Condition Table
                        000056    2-54  	equ	stack_header.unwinder_ptr,46		pointer to unwinder for current ring
                                  2-55  
                        000060    2-56  	equ	stack_header.sys_link_info_ptr,48	ptr to *system link name table
                        000062    2-57  	equ	stack_header.rnt_ptr,50		ptr to reference name table
                        000064    2-58  	equ	stack_header.ect_ptr,52		ptr to event channel table
                        000066    2-59  	equ	stack_header.assign_linkage_ptr,54	ptr to area for hcs_$assign_linkage calls
                        000070    2-60  	equ	stack_header.heap_header_ptr,56	ptr to heap header.
                        000072    2-61  	equ	stack_header.trace_frames,58		stack of trace_catch_ frames
                        000073    2-62  	equ	stach_header.trace_top_ptr,59		trace pointer
                        000074    2-63  	equ	stack_header.in_trace,60		trace antirecurse bit
                        000100    2-64  	equ	stack_header_end,64			length of stack header
                                  2-65  
                                  2-66  
                                  2-67  
                                  2-68  
                        000000    2-69  	equ	trace_frames.count,0		number of trace frames on stack
                        000001    2-70  	equ	trace_frames.top_ptr,1		packed pointer to top one
                                  2-71  
                                  2-72  "	The  following constant is an offset within the  pl1  operators table.
                                  2-73  "	It  references a  transfer vector table.
                                  2-74  
                        000551    2-75  	bool	tv_offset,551
                                  2-76  
                                  2-77  
                                  2-78  "	The  following constants are offsets within this transfer vector table.
                                  2-79  
                        001170    2-80  	equ	call_offset,tv_offset+271
                        001171    2-81  	equ	push_offset,tv_offset+272
                        001172    2-82  	equ	return_offset,tv_offset+273
                        001173    2-83  	equ	return_no_pop_offset,tv_offset+274
                        001174    2-84  	equ	entry_offset,tv_offset+275
                                  2-85  
                                  2-86  
                                  2-87  " 	END INCLUDE FILE stack_header.incl.alm
                                 2-317  
                                 2-318  " END INCLUDE FILE ... ssu_request_macros.incl.alm
                                    49  
    001577                          50  	name	ls_ssu_request_tables_
                                    51  
                                    52  "
                                    53  "overseer_requests table -- used by login server process overseer. Just
                                    54  "(start stop)_login_service and disable some of the standard requests.
                                    55  
                                    56  	begin_table overseer_requests
                        000000          	segdef	overseer_requests
    000000  aa  163 162 161 164
    000001  aa  137 064 056 060
    000002  aa  157 166 145 162
    000003  aa  163 145 145 162
    000004  aa  137 162 145 161
    000005  aa  165 145 163 164
    000006  aa  163 040 040 040
    000007  aa  040 040 040 040
    000010  aa  040 040 040 040
    000011  aa  040 040 040 040
                        000006 
    000012  aa   000000 000000 
    000013  aa   000000 000000 
    000014  aa   000000 000000 
    000015  aa   000000 000000 
    000016  aa   000000 000000 
    000017  aa   000000 000000 
    000020  aa   000000 000012 
                                    57  
                                    58  	request	start_login_service,login_server_$start_service,(),
                                    59  		(Start listening for connections.)
    000021  00   000313 000522 
    000022  0a   001577 000040 
    000023  aa   400000 000000 
                                    60  
                                    61  	request	stop_login_service,login_server_$stop_service,(),
                                    62  		(Stop listening for connections.)
    000024  00   000316 000533 
    000025  0a   001607 000037 
    000026  aa   400000 000000 
                                    63  
                                    64  	request	endpoints_listening,login_server_$endpoints_listening,(epl),
                                    65  		(Return status of listening on endpoints.),
                                    66  		(flags.allow_both)
    000027  00   000321 000544 
    000030  0a   001617 000050 
    000031  aa   600000 000000 
                                    67  
                                    68  	request	list_endpoints,login_server_$list_endpoints,(lsep),
                                    69  		(List endpoints listening for connections.)
    000032  00   000324 000565 
    000033  0a   001631 000051 
    000034  aa   400000 000000 
                                    70  
                                    71  	request	quit,login_server_$quit,(q),
                                    72  		(Exit the login server subsystem.)
    000035  00   000327 000606 
    000036  0a   001644 000040 
    000037  aa   400000 000000 
                                    73  
                                    74    multics_request   pause,(),
                                    75  		(Pause for a given number of seconds.),,
                                    76  		(flags.allow_command)
    000040  00   000332 000627 
    000041  0a   001654 000044 
    000042  aa   440000 000000 
                                    77  
                                    78    multics_request   user,(),
                                    79  		(Return or print attributes of the user process.),,
                                    80  		(flags.allow_both)
    000043  00   000335 000640 
    000044  0a   001665 000057 
    000045  aa   640000 000000 
                                    81  
                                    82    unknown_request   abbrev,(ab)
    000046  00   000340 000651 
    000047  aa   000000 000000 
    000050  aa   004000 000000 
                                    83    unknown_request   debug_mode
    000051  00   000343 000672 
    000052  aa   000000 000000 
    000053  aa   004000 000000 
                                    84    unknown_request	execute,(e)
    000054  00   000346 000703 
    000055  aa   000000 000000 
    000056  aa   004000 000000 
                                    85  
                                    86  	end_table overseer_requests
                                    87  
                                    88  "
                                    89  "login_requests table -- defines those requests that can be entered in response
                                    90  "to a login banner
                                    91  
                                    92  	begin_table login_requests
                        000057          	segdef	login_requests
    000057  aa  163 162 161 164
    000060  aa  137 064 056 060
    000061  aa  154 157 147 151
    000062  aa  156 137 162 145
    000063  aa  161 165 145 163
    000064  aa  164 163 040 040
    000065  aa  040 040 040 040
    000066  aa  040 040 040 040
    000067  aa  040 040 040 040
    000070  aa  040 040 040 040
                        000006 
    000071  aa   000000 000000 
    000072  aa   000000 000000 
    000073  aa   000000 000000 
    000074  aa   000000 000000 
    000075  aa   000000 000000 
    000076  aa   000000 000000 
    000077  aa   000000 000016 
                                    93  
                                    94  	request	login,ls_validate_user_$login,(l),
                                    95  		(Login and establish a process.)
    000100  00   000351 000724 
    000101  0a   001701 000036 
    000102  aa   400000 000000 
                                    96  
                                    97  	request	enter,ls_validate_user_$enter,(e),
                                    98  		(Login an anonymous user.)
    000103  00   000354 000745 
    000104  0a   001711 000030 
    000105  aa   400000 000000 
                                    99  
                                   100  	request	enterp,ls_validate_user_$enterp,(ep),
                                   101  		(Login an anonymous user with a password.)
    000106  00   000357 000766 
    000107  0a   001717 000050 
    000110  aa   400000 000000 
                                   102  
                                   103  	request	dial,ls_validate_user_$dial,(d),
                                   104  		(Connect to a dial server.)
    000111  00   000362 001007 
    000112  0a   001731 000031 
    000113  aa   400000 000000 
                                   105  
                                   106  	request	slave,ls_validate_user_$slave,(),
                                   107  		(Change from login to slave service for duration of connection.),
                                   108  		flags.allow_command+flags.dont_summarize+flags.dont_list
    000114  00   000365 001030 
    000115  0a   001740 000076 
    000116  aa   430000 000000 
                                   109  
                                   110  	request	access_class,ls_validate_user_$access_class,(acc),
                                   111  		(Print the access class of the terminal connection.)
    000117  00   000370 001041 
    000120  0a   001760 000062 
    000121  aa   400000 000000 
                                   112  
                                   113  	request	echo,ls_validate_user_$echo,(),
                                   114  		(Echo typed characters back to the terminal.)
    000122  00   000373 001062 
    000123  0a   001775 000053 
    000124  aa   400000 000000 
                                   115  
                                   116  	request	hangup,ls_validate_user_$hangup,(),
                                   117  		(Terminate the login dialogue, hangup the terminal.)
    000125  00   000376 001073 
    000126  0a   002010 000062 
    000127  aa   400000 000000 
                                   118  
                                   119  	request	hello,ls_validate_user_$hello,(),
                                   120  		(Print login banner.)
    000130  00   000401 001104 
    000131  0a   002025 000023 
    000132  aa   400000 000000 
                                   121  
                                   122  	request	logout,ls_validate_user_$hangup,(),
                                   123  		(Terminate the login dialogue, hangup the terminal.),
                                   124  		flags.allow_command+flags.dont_summarize+flags.dont_list
    000133  00   000404 001115 
    000134  0a   002032 000062 
    000135  aa   430000 000000 
                                   125  
                                   126  	request	modes,ls_validate_user_$modes,(),
                                   127  		(Set or print the terminal modes.)
    000136  00   000407 001126 
    000137  0a   002047 000040 
    000140  aa   400000 000000 
                                   128  
                                   129  	request	noecho,ls_validate_user_$noecho,(),
                                   130  		(Do not echo typed characters back to the terminal.)
    000141  00   000412 001137 
    000142  0a   002057 000062 
    000143  aa   400000 000000 
                                   131  
                                   132  	request	terminal_id,ls_validate_user_$terminal_id,(tid),
                                   133  		(Set or print the terminal ID.)
    000144  00   000415 001150 
    000145  0a   002074 000035 
    000146  aa   400000 000000 
                                   134  
                                   135  	request	terminal_type,ls_validate_user_$terminal_type,(ttp),
                                   136  		(Set or print the terminal type.)
    000147  00   000420 001171 
    000150  0a   002104 000037 
    000151  aa   400000 000000 
                                   137  
                                   138  	end_table login_requests
                                   139  "
                                   140  "connect_requests table -- defines those requests that may be entered in the
                                   141  "'connect loop' after a user has been validated but before he has a process.
                                   142  
                                   143  	begin_table connect_requests
                        000152          	segdef	connect_requests
    000152  aa  163 162 161 164
    000153  aa  137 064 056 060
    000154  aa  143 157 156 156
    000155  aa  145 143 164 137
    000156  aa  162 145 161 165
    000157  aa  145 163 164 163
    000160  aa  040 040 040 040
    000161  aa  040 040 040 040
    000162  aa  040 040 040 040
    000163  aa  040 040 040 040
                        000006 
    000164  aa   000000 000000 
    000165  aa   000000 000000 
    000166  aa   000000 000000 
    000167  aa   000000 000000 
    000170  aa   000000 000000 
    000171  aa   000000 000000 
    000172  aa   000000 000016 
                                   144  
                                   145  	request	connect,ls_validate_user_$connect,(),
                                   146  		(Connect to an existing disconnected process.)
    000173  00   000423 001212 
    000174  0a   002114 000054 
    000175  aa   400000 000000 
                                   147  
                                   148  	request	create,ls_validate_user_$create,(cr),
                                   149  		(Create a new process.)
    000176  00   000426 001223 
    000177  0a   002127 000025 
    000200  aa   400000 000000 
                                   150  
                                   151  	request	destroy,ls_validate_user_$destroy,(),
                                   152  		(Destroy an existing disconnected process.)
    000201  00   000431 001244 
    000202  0a   002135 000051 
    000203  aa   400000 000000 
                                   153  
                                   154  	request	hangup,ls_validate_user_$hangup,(),
                                   155  		(Terminate the connect dialogue, disconnect the terminal.)
    000204  00   000434 001255 
    000205  0a   002150 000070 
    000206  aa   400000 000000 
                                   156  
                                   157  	request	list,ls_validate_user_$list,(ls),
                                   158  		(List the user's disconnected processes.)
    000207  00   000437 001266 
    000210  0a   002166 000047 
    000211  aa   400000 000000 
                                   159  
                                   160  	request	logout,ls_validate_user_$logout,(),
                                   161  		(Terminate the connect dialogue.)
    000212  00   000442 001307 
    000213  0a   002200 000037 
    000214  aa   400000 000000 
                                   162  
                                   163  	request	new_proc,ls_validate_user_$new_proc,(),
                                   164  		(Replace an existing disconnected process with a new process.)
    000215  00   000445 001320 
    000216  0a   002210 000074 
    000217  aa   400000 000000 
                                   165  
                                   166  	request	access_class,ls_validate_user_$access_class,(acc),
                                   167  		(Print the access class of the terminal connection.)
    000220  00   000450 001331 
    000221  0a   002227 000062 
    000222  aa   400000 000000 
                                   168  
                                   169  	request	echo,ls_validate_user_$echo,(),
                                   170  		(Echo typed characters back to the terminal.)
    000223  00   000453 001352 
    000224  0a   002244 000053 
    000225  aa   400000 000000 
                                   171  
                                   172  	request	hello,ls_validate_user_$hello,(),
                                   173  		(Print login banner.)
    000226  00   000456 001363 
    000227  0a   002257 000023 
    000230  aa   400000 000000 
                                   174  
                                   175  	request	modes,ls_validate_user_$modes,(),
                                   176  		(Set or print the terminal modes.)
    000231  00   000461 001374 
    000232  0a   002264 000040 
    000233  aa   400000 000000 
                                   177  
                                   178  	request	noecho,ls_validate_user_$noecho,(),
                                   179  		(Do not echo typed characters back to the terminal.)
    000234  00   000464 001405 
    000235  0a   002274 000062 
    000236  aa   400000 000000 
                                   180  
                                   181  	request	terminal_id,ls_validate_user_$terminal_id,(tid),
                                   182  		(Set or print the terminal ID.)
    000237  00   000467 001416 
    000240  0a   002311 000035 
    000241  aa   400000 000000 
                                   183  
                                   184  	request	terminal_type,ls_validate_user_$terminal_type,(ttp),
                                   185  		(Set or print the terminal type.)
    000242  00   000472 001437 
    000243  0a   002321 000037 
    000244  aa   400000 000000 
                                   186  
                                   187  	end_table connect_requests
                                   188  "
                                   189  " enabled_standard_requests table -- 
                                   190  "  contains those "standard" ssu_requests that are allowed during the login
                                   191  "  and connect dialogues.  The login_server_overseer_ request environment uses
                                   192  "  ssu_request_tables_$standard_requests instead.
                                   193  
                                   194  	begin_table enabled_standard_requests
                        000245          	segdef	enabled_standard_requests
    000245  aa  163 162 161 164
    000246  aa  137 064 056 060
    000247  aa  145 156 141 142
    000250  aa  154 145 144 137
    000251  aa  163 164 141 156
    000252  aa  144 141 162 144
    000253  aa  137 162 145 161
    000254  aa  165 145 163 164
    000255  aa  163 040 040 040
    000256  aa  040 040 040 040
                        000006 
    000257  aa   000000 000000 
    000260  aa   000000 000000 
    000261  aa   000000 000000 
    000262  aa   000000 000000 
    000263  aa   000000 000000 
    000264  aa   000000 000000 
    000265  aa   000000 000007 
                                   195  
                                   196  	request	.,ssu_requests_$self_identify,(),
                                   197  		(Identify the subsystem.)
    000266  00   000475 001460 
    000267  0a   002331 000027 
    000270  aa   400000 000000 
                                   198  
                                   199  	request	help,ls_validate_user_$help,(),
                                   200  		(Obtain detailed information about the subsystem.)
    000271  00   000500 001471 
    000272  0a   002337 000060 
    000273  aa   400000 000000 
                                   201  
                                   202  	request	list_help,ssu_requests_$list_help,(lh),
                                   203  		(List topics for which help is available.)
    000274  00   000503 001502 
    000275  0a   002353 000050 
    000276  aa   400000 000000 
                                   204  
                                   205  	request	list_requests,ssu_requests_$list_requests,(lr),
                                   206  		(Briefly describe each subsystem request.)
    000277  00   000506 001523 
    000300  0a   002365 000050 
    000301  aa   400000 000000 
                                   207  
                                   208  	request	?,ssu_requests_$summarize_requests,(),
                                   209  		(List names of subsystem requests.),
                                   210  		flags.allow_command+flags.dont_summarize
    000302  00   000511 001544 
    000303  0a   002377 000041 
    000304  aa   420000 000000 
                                   211  
                                   212  	request	subsystem_name,ssu_requests_$subsystem_name,(),
                                   213  		(Return the name of this subsystem.),
                                   214  		flags.allow_both+flags.dont_summarize+flags.dont_list
    000305  00   000514 001555 
    000306  0a   002410 000042 
    000307  aa   630000 000000 
                                   215  
                                   216  	request	subsystem_version,ssu_requests_$subsystem_version,(),
                                   217  		(Return the version number of this subsystem.),
                                   218  		flags.allow_both+flags.dont_summarize+flags.dont_list
    000310  00   000517 001566 
    000311  0a   002421 000054 
    000312  aa   630000 000000 
                                   219  
                                   220  	end_table enabled_standard_requests
                                   221  
                                   222  	end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    002434  5a   000003 000000 
    002435  5a   000064 600000 
    002436  aa   000000 000000 
    002437  55   000014 000002 
    002440  5a   000002 400003 
    002441  55   000006 000014 
    002442  aa  026 154 163 137
    002443  aa  163 163 165 137
    002444  aa  162 145 161 165
    002445  aa  145 163 164 137
    002446  aa  164 141 142 154
    002447  aa  145 163 137 000
    002450  55   000026 000003 
    002451  0a   000245 400000 
    002452  55   000017 000003 
    002453  aa  031 145 156 141         enabled_standard_requests
    002454  aa  142 154 145 144
    002455  aa  137 163 164 141
    002456  aa  156 144 141 162
    002457  aa  144 137 162 145
    002460  aa  161 165 145 163
    002461  aa  164 163 000 000
    002462  55   000036 000014 
    002463  0a   000152 400000 
    002464  55   000031 000003 
    002465  aa  020 143 157 156         connect_requests
    002466  aa  156 145 143 164
    002467  aa  137 162 145 161
    002470  aa  165 145 163 164
    002471  aa  163 000 000 000
    002472  55   000045 000026 
    002473  0a   000057 400000 
    002474  55   000041 000003 
    002475  aa  016 154 157 147         login_requests
    002476  aa  151 156 137 162
    002477  aa  145 161 165 145
    002500  aa  163 164 163 000
    002501  55   000055 000036 
    002502  0a   000000 400000 
    002503  55   000050 000003 
    002504  aa  021 157 166 145         overseer_requests
    002505  aa  162 163 145 145
    002506  aa  162 137 162 145
    002507  aa  161 165 145 163
    002510  aa  164 163 000 000
    002511  55   000002 000045 
    002512  6a   000000 400002 
    002513  55   000060 000003 
    002514  aa  014 163 171 155         symbol_table
    002515  aa  142 157 154 137
    002516  aa  164 141 142 154
    002517  aa  145 000 000 000

DEFINITIONS HASH TABLE

    002520  aa   000000 000015 
    002521  aa   000000 000000 
    002522  5a   000045 000000 
    002523  aa   000000 000000 
    002524  aa   000000 000000 
    002525  aa   000000 000000 
    002526  5a   000014 000000 
    002527  5a   000026 000000 
    002530  5a   000055 000000 
    002531  aa   000000 000000 
    002532  aa   000000 000000 
    002533  aa   000000 000000 
    002534  aa   000000 000000 
    002535  5a   000036 000000 

EXTERNAL NAMES

    002536  aa  021 163 165 142         subsystem_version
    002537  aa  163 171 163 164
    002540  aa  145 155 137 166
    002541  aa  145 162 163 151
    002542  aa  157 156 000 000
    002543  aa  016 163 165 142         subsystem_name
    002544  aa  163 171 163 164
    002545  aa  145 155 137 156
    002546  aa  141 155 145 000
    002547  aa  022 163 165 155         summarize_requests
    002550  aa  155 141 162 151
    002551  aa  172 145 137 162
    002552  aa  145 161 165 145
    002553  aa  163 164 163 000
    002554  aa  015 154 151 163         list_requests
    002555  aa  164 137 162 145
    002556  aa  161 165 145 163
    002557  aa  164 163 000 000
    002560  aa  011 154 151 163         list_help
    002561  aa  164 137 150 145
    002562  aa  154 160 000 000
    002563  aa  004 150 145 154         help
    002564  aa  160 000 000 000
    002565  aa  015 163 145 154         self_identify
    002566  aa  146 137 151 144
    002567  aa  145 156 164 151
    002570  aa  146 171 000 000
    002571  aa  015 163 163 165         ssu_requests_
    002572  aa  137 162 145 161
    002573  aa  165 145 163 164
    002574  aa  163 137 000 000
    002575  aa  010 156 145 167         new_proc
    002576  aa  137 160 162 157
    002577  aa  143 000 000 000
    002600  aa  006 154 157 147         logout
    002601  aa  157 165 164 000
    002602  aa  004 154 151 163         list
    002603  aa  164 000 000 000
    002604  aa  007 144 145 163         destroy
    002605  aa  164 162 157 171
    002606  aa  006 143 162 145         create
    002607  aa  141 164 145 000
    002610  aa  007 143 157 156         connect
    002611  aa  156 145 143 164
    002612  aa  015 164 145 162         terminal_type
    002613  aa  155 151 156 141
    002614  aa  154 137 164 171
    002615  aa  160 145 000 000
    002616  aa  013 164 145 162         terminal_id
    002617  aa  155 151 156 141
    002620  aa  154 137 151 144
    002621  aa  006 156 157 145         noecho
    002622  aa  143 150 157 000
    002623  aa  005 155 157 144         modes
    002624  aa  145 163 000 000
    002625  aa  005 150 145 154         hello
    002626  aa  154 157 000 000
    002627  aa  006 150 141 156         hangup
    002630  aa  147 165 160 000
    002631  aa  004 145 143 150         echo
    002632  aa  157 000 000 000
    002633  aa  014 141 143 143         access_class
    002634  aa  145 163 163 137
    002635  aa  143 154 141 163
    002636  aa  163 000 000 000
    002637  aa  005 163 154 141         slave
    002640  aa  166 145 000 000
    002641  aa  004 144 151 141         dial
    002642  aa  154 000 000 000
    002643  aa  006 145 156 164         enterp
    002644  aa  145 162 160 000
    002645  aa  005 145 156 164         enter
    002646  aa  145 162 000 000
    002647  aa  005 154 157 147         login
    002650  aa  151 156 000 000
    002651  aa  021 154 163 137         ls_validate_user_
    002652  aa  166 141 154 151
    002653  aa  144 141 164 145
    002654  aa  137 165 163 145
    002655  aa  162 137 000 000
    002656  aa  017 165 156 153         unknown_request
    002657  aa  156 157 167 156
    002660  aa  137 162 145 161
    002661  aa  165 145 163 164
    002662  aa  004 163 163 165         ssu_
    002663  aa  137 000 000 000
    002664  aa  004 165 163 145         user
    002665  aa  162 000 000 000
    002666  aa  005 160 141 165         pause
    002667  aa  163 145 000 000
    002670  aa  004 161 165 151         quit
    002671  aa  164 000 000 000
    002672  aa  016 154 151 163         list_endpoints
    002673  aa  164 137 145 156
    002674  aa  144 160 157 151
    002675  aa  156 164 163 000
    002676  aa  023 145 156 144         endpoints_listening
    002677  aa  160 157 151 156
    002700  aa  164 163 137 154
    002701  aa  151 163 164 145
    002702  aa  156 151 156 147
    002703  aa  014 163 164 157         stop_service
    002704  aa  160 137 163 145
    002705  aa  162 166 151 143
    002706  aa  145 000 000 000
    002707  aa  015 163 164 141         start_service
    002710  aa  162 164 137 163
    002711  aa  145 162 166 151
    002712  aa  143 145 000 000
    002713  aa  015 154 157 147         login_server_
    002714  aa  151 156 137 163
    002715  aa  145 162 166 145
    002716  aa  162 137 000 000

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    002717  aa   000004 000000 
    002720  55   000135 000102 
    002721  aa   000004 000000 
    002722  55   000135 000107 
    002723  aa   000004 000000 
    002724  55   000135 000113 
    002725  aa   000004 000000 
    002726  55   000135 000120 
    002727  aa   000004 000000 
    002730  55   000135 000124 
    002731  aa   000004 000000 
    002732  55   000215 000127 
    002733  aa   000004 000000 
    002734  55   000135 000131 
    002735  aa   000004 000000 
    002736  55   000215 000141 
    002737  aa   000004 000000 
    002740  55   000215 000144 
    002741  aa   000004 000000 
    002742  55   000215 000146 
    002743  aa   000004 000000 
    002744  55   000215 000150 
    002745  aa   000004 000000 
    002746  55   000215 000152 
    002747  aa   000004 000000 
    002750  55   000215 000154 
    002751  aa   000004 000000 
    002752  55   000215 000156 
    002753  aa   000004 000000 
    002754  55   000215 000162 
    002755  aa   000004 000000 
    002756  55   000215 000165 
    002757  aa   000004 000000 
    002760  55   000215 000167 
    002761  aa   000004 000000 
    002762  55   000215 000171 
    002763  aa   000004 000000 
    002764  55   000215 000173 
    002765  aa   000004 000000 
    002766  55   000215 000175 
    002767  aa   000004 000000 
    002770  55   000215 000177 
    002771  aa   000004 000000 
    002772  55   000215 000203 
    002773  aa   000004 000000 
    002774  55   000215 000205 
    002775  aa   000004 000000 
    002776  55   000215 000207 
    002777  aa   000004 000000 
    003000  55   000215 000211 
    003001  aa   000004 000000 
    003002  55   000215 000213 
    003003  aa   000004 000000 
    003004  55   000226 000222 
    003005  aa   000004 000000 
    003006  55   000230 000230 
    003007  aa   000004 000000 
    003010  55   000232 000232 
    003011  aa   000004 000000 
    003012  55   000257 000234 
    003013  aa   000004 000000 
    003014  55   000257 000236 
    003015  aa   000004 000000 
    003016  55   000257 000242 
    003017  aa   000004 000000 
    003020  55   000257 000247 
    003021  aa   000004 000000 
    003022  55   000257 000253 
    003023  aa   000001 000000 
    003024  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    003025  5a   000263 000000 
    003026  5a   000265 000000 
    003027  5a   000267 000000 
    003030  5a   000271 000000 
    003031  5a   000273 000000 
    003032  5a   000275 000000 
    003033  5a   000277 000000 
    003034  5a   000301 000000 
    003035  5a   000303 000000 
    003036  5a   000305 000000 
    003037  5a   000307 000000 
    003040  5a   000311 000000 
    003041  5a   000313 000000 
    003042  5a   000315 000000 
    003043  5a   000317 000000 
    003044  5a   000321 000000 
    003045  5a   000323 000000 
    003046  5a   000325 000000 
    003047  5a   000327 000000 
    003050  5a   000331 000000 
    003051  5a   000333 000000 
    003052  5a   000335 000000 
    003053  5a   000337 000000 
    003054  5a   000341 000000 
    003055  5a   000343 000000 
    003056  5a   000345 000000 
    003057  5a   000347 000000 
    003060  5a   000351 000000 
    003061  5a   000353 000000 
    003062  5a   000355 000000 
    003063  5a   000357 000000 
    003064  5a   000361 000000 
    003065  5a   000363 000000 
    003066  5a   000365 000000 
    003067  aa   000000 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   002434 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000114 
    000007  a2   000000 000000 
    000010  9a   777770 0000 46         login_server_|start_service
    000011  5a   000432 0000 00
    000012  9a   777766 0000 46         login_server_|stop_service
    000013  5a   000431 0000 00
    000014  9a   777764 0000 46         login_server_|endpoints_listening
    000015  5a   000430 0000 00
    000016  9a   777762 0000 46         login_server_|list_endpoints
    000017  5a   000427 0000 00
    000020  9a   777760 0000 46         login_server_|quit
    000021  5a   000426 0000 00
    000022  9a   777756 0000 46         pause|pause
    000023  5a   000425 0000 00
    000024  9a   777754 0000 46         user|user
    000025  5a   000424 0000 00
    000026  9a   777752 0000 46         ssu_|unknown_request
    000027  5a   000423 0000 00
    000030  9a   777750 0000 46         ls_validate_user_|login
    000031  5a   000422 0000 00
    000032  9a   777746 0000 46         ls_validate_user_|enter
    000033  5a   000421 0000 00
    000034  9a   777744 0000 46         ls_validate_user_|enterp
    000035  5a   000420 0000 00
    000036  9a   777742 0000 46         ls_validate_user_|dial
    000037  5a   000417 0000 00
    000040  9a   777740 0000 46         ls_validate_user_|slave
    000041  5a   000416 0000 00
    000042  9a   777736 0000 46         ls_validate_user_|access_class
    000043  5a   000415 0000 00
    000044  9a   777734 0000 46         ls_validate_user_|echo
    000045  5a   000414 0000 00
    000046  9a   777732 0000 46         ls_validate_user_|hangup
    000047  5a   000413 0000 00
    000050  9a   777730 0000 46         ls_validate_user_|hello
    000051  5a   000412 0000 00
    000052  9a   777726 0000 46         ls_validate_user_|modes
    000053  5a   000411 0000 00
    000054  9a   777724 0000 46         ls_validate_user_|noecho
    000055  5a   000410 0000 00
    000056  9a   777722 0000 46         ls_validate_user_|terminal_id
    000057  5a   000407 0000 00
    000060  9a   777720 0000 46         ls_validate_user_|terminal_type
    000061  5a   000406 0000 00
    000062  9a   777716 0000 46         ls_validate_user_|connect
    000063  5a   000405 0000 00
    000064  9a   777714 0000 46         ls_validate_user_|create
    000065  5a   000404 0000 00
    000066  9a   777712 0000 46         ls_validate_user_|destroy
    000067  5a   000403 0000 00
    000070  9a   777710 0000 46         ls_validate_user_|list
    000071  5a   000402 0000 00
    000072  9a   777706 0000 46         ls_validate_user_|logout
    000073  5a   000401 0000 00
    000074  9a   777704 0000 46         ls_validate_user_|new_proc
    000075  5a   000400 0000 00
    000076  9a   777702 0000 46         ssu_requests_|self_identify
    000077  5a   000377 0000 00
    000100  9a   777700 0000 46         ls_validate_user_|help
    000101  5a   000376 0000 00
    000102  9a   777676 0000 46         ssu_requests_|list_help
    000103  5a   000375 0000 00
    000104  9a   777674 0000 46         ssu_requests_|list_requests
    000105  5a   000374 0000 00
    000106  9a   777672 0000 46         ssu_requests_|summarize_requests
    000107  5a   000373 0000 00
    000110  9a   777670 0000 46         ssu_requests_|subsystem_name
    000111  5a   000372 0000 00
    000112  9a   777666 0000 46         ssu_requests_|subsystem_version
    000113  5a   000371 0000 00
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000007 
    000004  aa   000000 115030 
    000005  aa   273207 326355 
    000006  aa   000000 115523 
    000007  aa   743674 612107 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000401 
    000020  aa   000000 000144 
    000021  aa   000327 000310 
    000022  aa   000371 000144 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   067056 063040 
    000030  aa   116157 166145 
    000031  aa   155142 145162 
    000032  aa   040061 071070 
    000033  aa   066040 040040 
    000034  aa   107112 157150 
    000035  aa   156163 157156 
    000036  aa   056123 171163 
    000037  aa   115141 151156 
    000040  aa   164056 141040 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   055164 141162 
    000045  aa   147145 164040 
    000046  aa   154066 070040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040154 151163 
    000057  aa   164040 163171 
    000060  aa   155142 157154 
    000061  aa   163040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000003 
    000066  aa   000102 000073 
    000067  aa   155200 221242 
    000070  aa   000000 115523 
    000071  aa   731465 400000 
    000072  aa   000121 000050 
    000073  aa   133055 020064 
    000074  aa   000000 113310 
    000075  aa   612334 200000 
    000076  aa   000133 000042 
    000077  aa   147777 464111 
    000100  aa   000000 115000 
    000101  aa   507463 000000 
    000102  aa   076163 160145          >special_ldd>install>MR12.1-1054>ls_ssu_request_tables_.alm
    000103  aa   143151 141154 
    000104  aa   137154 144144 
    000105  aa   076151 156163 
    000106  aa   164141 154154 
    000107  aa   076115 122061 
    000110  aa   062056 061055 
    000111  aa   061060 065064 
    000112  aa   076154 163137 
    000113  aa   163163 165137 
    000114  aa   162145 161165 
    000115  aa   145163 164137 
    000116  aa   164141 142154 
    000117  aa   145163 137056 
    000120  aa   141154 155040 
    000121  aa   076154 144144          >ldd>include>ssu_request_macros.incl.alm
    000122  aa   076151 156143 
    000123  aa   154165 144145 
    000124  aa   076163 163165 
    000125  aa   137162 145161 
    000126  aa   165145 163164 
    000127  aa   137155 141143 
    000130  aa   162157 163056 
    000131  aa   151156 143154 
    000132  aa   056141 154155 
    000133  aa   076154 144144          >ldd>include>stack_header.incl.alm
    000134  aa   076151 156143 
    000135  aa   154165 144145 
    000136  aa   076163 164141 
    000137  aa   143153 137150 
    000140  aa   145141 144145 
    000141  aa   162056 151156 
    000142  aa   143154 056141 
    000143  aa   154155 040040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

         313    .._00000.call            ls_ssu_request_tables_:    59.
        1577    .._00000.info            ls_ssu_request_tables_:    59.
         522    .._00000.names           ls_ssu_request_tables_:    59.
         316    .._00001.call            ls_ssu_request_tables_:    62.
        1607    .._00001.info            ls_ssu_request_tables_:    62.
         533    .._00001.names           ls_ssu_request_tables_:    62.
         321    .._00002.call            ls_ssu_request_tables_:    66.
        1617    .._00002.info            ls_ssu_request_tables_:    66.
         544    .._00002.names           ls_ssu_request_tables_:    66.
         324    .._00003.call            ls_ssu_request_tables_:    69.
        1631    .._00003.info            ls_ssu_request_tables_:    69.
         565    .._00003.names           ls_ssu_request_tables_:    69.
         327    .._00004.call            ls_ssu_request_tables_:    72.
        1644    .._00004.info            ls_ssu_request_tables_:    72.
         606    .._00004.names           ls_ssu_request_tables_:    72.
         332    .._00005.call            ls_ssu_request_tables_:    76.
        1654    .._00005.info            ls_ssu_request_tables_:    76.
         627    .._00005.names           ls_ssu_request_tables_:    76.
         335    .._00006.call            ls_ssu_request_tables_:    80.
        1665    .._00006.info            ls_ssu_request_tables_:    80.
         640    .._00006.names           ls_ssu_request_tables_:    80.
         340    .._00007.call            ls_ssu_request_tables_:    82.
         651    .._00007.names           ls_ssu_request_tables_:    82.
         343    .._00010.call            ls_ssu_request_tables_:    83.
         672    .._00010.names           ls_ssu_request_tables_:    83.
         346    .._00011.call            ls_ssu_request_tables_:    84.
         703    .._00011.names           ls_ssu_request_tables_:    84.
         351    .._00012.call            ls_ssu_request_tables_:    95.
        1701    .._00012.info            ls_ssu_request_tables_:    95.
         724    .._00012.names           ls_ssu_request_tables_:    95.
         354    .._00013.call            ls_ssu_request_tables_:    98.
        1711    .._00013.info            ls_ssu_request_tables_:    98.
         745    .._00013.names           ls_ssu_request_tables_:    98.
         357    .._00014.call            ls_ssu_request_tables_:   101.
        1717    .._00014.info            ls_ssu_request_tables_:   101.
         766    .._00014.names           ls_ssu_request_tables_:   101.
         362    .._00015.call            ls_ssu_request_tables_:   104.
        1731    .._00015.info            ls_ssu_request_tables_:   104.
        1007    .._00015.names           ls_ssu_request_tables_:   104.
         365    .._00016.call            ls_ssu_request_tables_:   108.
        1740    .._00016.info            ls_ssu_request_tables_:   108.
        1030    .._00016.names           ls_ssu_request_tables_:   108.
         370    .._00017.call            ls_ssu_request_tables_:   111.
        1760    .._00017.info            ls_ssu_request_tables_:   111.
        1041    .._00017.names           ls_ssu_request_tables_:   111.
         373    .._00020.call            ls_ssu_request_tables_:   114.
        1775    .._00020.info            ls_ssu_request_tables_:   114.
        1062    .._00020.names           ls_ssu_request_tables_:   114.
         376    .._00021.call            ls_ssu_request_tables_:   117.
        2010    .._00021.info            ls_ssu_request_tables_:   117.
        1073    .._00021.names           ls_ssu_request_tables_:   117.
         401    .._00022.call            ls_ssu_request_tables_:   120.
        2025    .._00022.info            ls_ssu_request_tables_:   120.
        1104    .._00022.names           ls_ssu_request_tables_:   120.
         404    .._00023.call            ls_ssu_request_tables_:   124.
        2032    .._00023.info            ls_ssu_request_tables_:   124.
        1115    .._00023.names           ls_ssu_request_tables_:   124.
         407    .._00024.call            ls_ssu_request_tables_:   127.
        2047    .._00024.info            ls_ssu_request_tables_:   127.
        1126    .._00024.names           ls_ssu_request_tables_:   127.
         412    .._00025.call            ls_ssu_request_tables_:   130.
        2057    .._00025.info            ls_ssu_request_tables_:   130.
        1137    .._00025.names           ls_ssu_request_tables_:   130.
         415    .._00026.call            ls_ssu_request_tables_:   133.
        2074    .._00026.info            ls_ssu_request_tables_:   133.
        1150    .._00026.names           ls_ssu_request_tables_:   133.
         420    .._00027.call            ls_ssu_request_tables_:   136.
        2104    .._00027.info            ls_ssu_request_tables_:   136.
        1171    .._00027.names           ls_ssu_request_tables_:   136.
         423    .._00030.call            ls_ssu_request_tables_:   146.
        2114    .._00030.info            ls_ssu_request_tables_:   146.
        1212    .._00030.names           ls_ssu_request_tables_:   146.
         426    .._00031.call            ls_ssu_request_tables_:   149.
        2127    .._00031.info            ls_ssu_request_tables_:   149.
        1223    .._00031.names           ls_ssu_request_tables_:   149.
         431    .._00032.call            ls_ssu_request_tables_:   152.
        2135    .._00032.info            ls_ssu_request_tables_:   152.
        1244    .._00032.names           ls_ssu_request_tables_:   152.
         434    .._00033.call            ls_ssu_request_tables_:   155.
        2150    .._00033.info            ls_ssu_request_tables_:   155.
        1255    .._00033.names           ls_ssu_request_tables_:   155.
         437    .._00034.call            ls_ssu_request_tables_:   158.
        2166    .._00034.info            ls_ssu_request_tables_:   158.
        1266    .._00034.names           ls_ssu_request_tables_:   158.
         442    .._00035.call            ls_ssu_request_tables_:   161.
        2200    .._00035.info            ls_ssu_request_tables_:   161.
        1307    .._00035.names           ls_ssu_request_tables_:   161.
         445    .._00036.call            ls_ssu_request_tables_:   164.
        2210    .._00036.info            ls_ssu_request_tables_:   164.
        1320    .._00036.names           ls_ssu_request_tables_:   164.
         450    .._00037.call            ls_ssu_request_tables_:   167.
        2227    .._00037.info            ls_ssu_request_tables_:   167.
        1331    .._00037.names           ls_ssu_request_tables_:   167.
         453    .._00040.call            ls_ssu_request_tables_:   170.
        2244    .._00040.info            ls_ssu_request_tables_:   170.
        1352    .._00040.names           ls_ssu_request_tables_:   170.
         456    .._00041.call            ls_ssu_request_tables_:   173.
        2257    .._00041.info            ls_ssu_request_tables_:   173.
        1363    .._00041.names           ls_ssu_request_tables_:   173.
         461    .._00042.call            ls_ssu_request_tables_:   176.
        2264    .._00042.info            ls_ssu_request_tables_:   176.
        1374    .._00042.names           ls_ssu_request_tables_:   176.
         464    .._00043.call            ls_ssu_request_tables_:   179.
        2274    .._00043.info            ls_ssu_request_tables_:   179.
        1405    .._00043.names           ls_ssu_request_tables_:   179.
         467    .._00044.call            ls_ssu_request_tables_:   182.
        2311    .._00044.info            ls_ssu_request_tables_:   182.
        1416    .._00044.names           ls_ssu_request_tables_:   182.
         472    .._00045.call            ls_ssu_request_tables_:   185.
        2321    .._00045.info            ls_ssu_request_tables_:   185.
        1437    .._00045.names           ls_ssu_request_tables_:   185.
         475    .._00046.call            ls_ssu_request_tables_:   197.
        2331    .._00046.info            ls_ssu_request_tables_:   197.
        1460    .._00046.names           ls_ssu_request_tables_:   197.
         500    .._00047.call            ls_ssu_request_tables_:   200.
        2337    .._00047.info            ls_ssu_request_tables_:   200.
        1471    .._00047.names           ls_ssu_request_tables_:   200.
         503    .._00050.call            ls_ssu_request_tables_:   203.
        2353    .._00050.info            ls_ssu_request_tables_:   203.
        1502    .._00050.names           ls_ssu_request_tables_:   203.
         506    .._00051.call            ls_ssu_request_tables_:   206.
        2365    .._00051.info            ls_ssu_request_tables_:   206.
        1523    .._00051.names           ls_ssu_request_tables_:   206.
         511    .._00052.call            ls_ssu_request_tables_:   210.
        2377    .._00052.info            ls_ssu_request_tables_:   210.
        1544    .._00052.names           ls_ssu_request_tables_:   210.
         514    .._00053.call            ls_ssu_request_tables_:   214.
        2410    .._00053.info            ls_ssu_request_tables_:   214.
        1555    .._00053.names           ls_ssu_request_tables_:   214.
         517    .._00054.call            ls_ssu_request_tables_:   218.
        2421    .._00054.info            ls_ssu_request_tables_:   218.
        1566    .._00054.names           ls_ssu_request_tables_:   218.
      600000    .dft_mrsf                ls_ssu_request_tables_:    56,   92,  143,  194.
           0    .dft_mruf                ls_ssu_request_tables_:    56,   76,   80,   92,  143,  194.
      400000    .dft_sf                  ls_ssu_request_tables_:    56,   59,   62,   69,   72,   92,   95,   98,  101,  104,
                                                                   111,  114,  117,  120,  127,  130,  133,  136,  143,  146,
                                                                   149,  152,  155,  158,  161,  164,  167,  170,  173,  176,
                                                                   179,  182,  185,  194,  197,  200,  203,  206.
           0    .dft_uf                  ls_ssu_request_tables_:    56,   59,   62,   66,   69,   72,   92,   95,   98,  101,
                                                                   104,  108,  111,  114,  117,  120,  124,  127,  130,  133,
                                                                   136,  143,  146,  149,  152,  155,  158,  161,  164,  167,
                                                                   170,  173,  176,  179,  182,  185,  194,  197,  200,  203,
                                                                   206,  210,  214,  218.
       40047    .rc                      ls_ssu_request_tables_:    56,   59,   62,   66,   69,   72,   76,   80,   82,   83,
                                                                    84,   86,   92,   95,   98,  101,  104,  108,  111,  114,
                                                                   117,  120,  124,  127,  130,  133,  136,  138,  143,  146,
                                                                   149,  152,  155,  158,  161,  164,  167,  170,  173,  176,
                                                                   179,  182,  185,  187,  194,  197,  200,  203,  206,  210,
                                                                   214,  218,  220.
      630000    .sf                      ls_ssu_request_tables_:    59,   62,   66,   69,   72,   76,   80,   95,   98,  101,
                                                                   104,  108,  111,  114,  117,  120,  124,  127,  130,  133,
                                                                   136,  146,  149,  152,  155,  158,  161,  164,  167,  170,
                                                                   173,  176,  179,  182,  185,  197,  200,  203,  206,  210,
                                                                   214,  218.
           0    .uf                      ls_ssu_request_tables_:    59,   62,   66,   69,   72,   76,   80,   95,   98,  101,
                                                                   104,  108,  111,  114,  117,  120,  124,  127,  130,  133,
                                                                   136,  146,  149,  152,  155,  158,  161,  164,  167,  170,
                                                                   173,  176,  179,  182,  185,  197,  200,  203,  206,  210,
                                                                   214,  218.
                access_class             ls_ssu_request_tables_:   111,  167.
         313    calls                    ls_ssu_request_tables_:    59,   62,   66,   69,   72,   76,   80,   82,   83,   84,
                                                                    95,   98,  101,  104,  108,  111,  114,  117,  120,  124,
                                                                   127,  130,  133,  136,  146,  149,  152,  155,  158,  161,
                                                                   164,  167,  170,  173,  176,  179,  182,  185,  197,  200,
                                                                   203,  206,  210,  214,  218,
                                         ssu_request_macros:       311,  314.
        1170    call_offset              stack_header:        80.
                connect                  ls_ssu_request_tables_:   146.
         152    connect_requests         ls_ssu_request_tables_:   143.
          16    connect_requests.rc      ls_ssu_request_tables_:   143,  187.
                create                   ls_ssu_request_tables_:   149.
                destroy                  ls_ssu_request_tables_:   152.
                dial                     ls_ssu_request_tables_:   104.
                echo                     ls_ssu_request_tables_:   114,  170.
         245    enabled_standard_requests      ls_ssu_request_tables_:   194.
           7    enabled_standard_requests.rc   ls_ssu_request_tables_:   194,  220.
                endpoints_listening      ls_ssu_request_tables_:    66.
                enter                    ls_ssu_request_tables_:    98.
                enterp                   ls_ssu_request_tables_:   101.
        1174    entry_offset             stack_header:        84.
      200000    flags.allow_af           ls_ssu_request_tables_:    56,   92,  143,  194,
                                         ssu_request_macros:        33.
      600000    flags.allow_both         ls_ssu_request_tables_:    66,   80,  214,  218,
                                         ssu_request_macros:        34.
      400000    flags.allow_command      ls_ssu_request_tables_:    56,   76,   92,  108,  124,  143,  194,  210,
                                         ssu_request_macros:        32.
       10000    flags.dont_list          ls_ssu_request_tables_:   108,  124,  214,  218,
                                         ssu_request_macros:        40.
       20000    flags.dont_summarize     ls_ssu_request_tables_:   108,  124,  210,  214,  218,
                                         ssu_request_macros:        39.
       40000    flags.multics_request    ls_ssu_request_tables_:    76,   80,
                                         ssu_request_macros:        37.
      100000    flags.unimplemented      ssu_request_macros:        36.
        4000    flags.unknown            ls_ssu_request_tables_:    82,   83,   84,
                                         ssu_request_macros:        42.
                hangup                   ls_ssu_request_tables_:   117,  124,  155.
                hello                    ls_ssu_request_tables_:   120,  173.
                help                     ls_ssu_request_tables_:   200.
        1577    info                     ls_ssu_request_tables_:    59,   62,   66,   69,   72,   76,   80,   95,   98,  101,
                                                                   104,  108,  111,  114,  117,  120,  124,  127,  130,  133,
                                                                   136,  146,  149,  152,  155,  158,  161,  164,  167,  170,
                                                                   173,  176,  179,  182,  185,  197,  200,  203,  206,  210,
                                                                   214,  218,
                                         ssu_request_macros:       313,  314.
                list                     ls_ssu_request_tables_:   158.
                list_endpoints           ls_ssu_request_tables_:    69.
                list_help                ls_ssu_request_tables_:   203.
                list_requests            ls_ssu_request_tables_:   206.
                login                    ls_ssu_request_tables_:    95.
          57    login_requests           ls_ssu_request_tables_:    92.
          16    login_requests.rc        ls_ssu_request_tables_:    92,  138.
                login_server_            ls_ssu_request_tables_:    59,   62,   66,   69,   72.
                logout                   ls_ssu_request_tables_:   161.
                ls_validate_user_        ls_ssu_request_tables_:    95,   98,  101,  104,  108,  111,  114,  117,  120,  124,
                                                                   127,  130,  133,  136,  146,  149,  152,  155,  158,  161,
                                                                   164,  167,  170,  173,  176,  179,  182,  185,  200.
                modes                    ls_ssu_request_tables_:   127,  176.
         522    names                    ls_ssu_request_tables_:    59,   62,   66,   69,   72,   76,   80,   82,   83,   84,
                                                                    95,   98,  101,  104,  108,  111,  114,  117,  120,  124,
                                                                   127,  130,  133,  136,  146,  149,  152,  155,  158,  161,
                                                                   164,  167,  170,  173,  176,  179,  182,  185,  197,  200,
                                                                   203,  206,  210,  214,  218,
                                         ssu_request_macros:       312,  314.
                new_proc                 ls_ssu_request_tables_:   164.
                noecho                   ls_ssu_request_tables_:   130,  179.
           0    overseer_requests        ls_ssu_request_tables_:    56.
          12    overseer_requests.rc     ls_ssu_request_tables_:    56,   86.
                pause                    ls_ssu_request_tables_:    76.
        1171    push_offset              stack_header:        81.
                quit                     ls_ssu_request_tables_:    72.
        1173    return_no_pop_offset     stack_header:        83.
        1172    return_offset            stack_header:        82.
                self_identify            ls_ssu_request_tables_:   197.
                slave                    ls_ssu_request_tables_:   108.
                ssu_                     ls_ssu_request_tables_:    82,   83,   84.
                ssu_requests_            ls_ssu_request_tables_:   197,  203,  206,  210,  214,  218.
          73    stach_header.trace_top_ptr     stack_header:        62.
          66    stack_header.assign_linkage_ptr      stack_header:        59.
          32    stack_header.bar_mode_sp       stack_header:        42.
          36    stack_header.call_op_ptr       stack_header:        44.
          10    stack_header.clr_ptr     stack_header:        27.
           6    stack_header.combined_stat_ptr       stack_header:        25.
           4    stack_header.cpm_data_ptr      stack_header:        24.
          13    stack_header.cpm_enabled       stack_header:        32.
          13    stack_header.cur_lot_size      stack_header:        31.
          64    stack_header.ect_ptr     stack_header:        58.
          46    stack_header.entry_op_ptr      stack_header:        49.
          70    stack_header.heap_header_ptr   stack_header:        60.
          74    stack_header.in_trace    stack_header:        63.
          52    stack_header.isot_ptr    stack_header:        52.
          26    stack_header.lot_ptr     ls_ssu_request_tables_:    59,   62,   66,   69,   72,   76,   80,   82,   83,   84,
                                                                    95,   98,  101,  104,  108,  111,  114,  117,  120,  124,
                                                                   127,  130,  133,  136,  146,  149,  152,  155,  158,  161,
                                                                   164,  167,  170,  173,  176,  179,  182,  185,  197,  200,
                                                                   203,  206,  210,  214,  218,
                                         stack_header:        39.
          12    stack_header.main_proc_invoked       stack_header:        29.
          12    stack_header.max_lot_size      stack_header:        28.
          20    stack_header.parent_ptr  stack_header:        36.
          34    stack_header.pl1_operators_ptr       stack_header:        43.
          40    stack_header.push_op_ptr       stack_header:        46.
          42    stack_header.return_op_ptr     stack_header:        47.
          44    stack_header.ret_no_pop_op_ptr       stack_header:        48.
          62    stack_header.rnt_ptr     stack_header:        57.
          12    stack_header.run_unit_depth    stack_header:        30.
          54    stack_header.sct_ptr     stack_header:        53.
          30    stack_header.signal_ptr  stack_header:        41.
          22    stack_header.stack_begin_ptr   stack_header:        37.
          24    stack_header.stack_end_ptr     stack_header:        38.
          14    stack_header.system_free_ptr   stack_header:        33.
          60    stack_header.sys_link_info_ptr       stack_header:        56.
          72    stack_header.trace_frames      stack_header:        61.
          50    stack_header.trans_op_tv_ptr   stack_header:        51.
          56    stack_header.unwinder_ptr      stack_header:        54.
          16    stack_header.user_free_ptr     stack_header:        34.
         100    stack_header_end         stack_header:        64.
                start_service            ls_ssu_request_tables_:    59.
                stop_service             ls_ssu_request_tables_:    62.
                subsystem_name           ls_ssu_request_tables_:   214.
                subsystem_version        ls_ssu_request_tables_:   218.
                summarize_requests       ls_ssu_request_tables_:   210.
           0    tables                   ls_ssu_request_tables_:    56,   59,   62,   66,   69,   72,   76,   80,   82,   83,
                                                                    84,   92,   95,   98,  101,  104,  108,  111,  114,  117,
                                                                   120,  124,  127,  130,  133,  136,  143,  146,  149,  152,
                                                                   155,  158,  161,  164,  167,  170,  173,  176,  179,  182,
                                                                   185,  194,  197,  200,  203,  206,  210,  214,  218,
                                         ssu_request_macros:       310,  314.
                terminal_id              ls_ssu_request_tables_:   133,  182.
                terminal_type            ls_ssu_request_tables_:   136,  185.
           0    trace_frames.count       stack_header:        69.
           1    trace_frames.top_ptr     stack_header:        70.
         551    tv_offset                stack_header:        75,   80,   81,   82,   83,   84.
                unknown_request          ls_ssu_request_tables_:    82,   83,   84.
                user                     ls_ssu_request_tables_:    80.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
