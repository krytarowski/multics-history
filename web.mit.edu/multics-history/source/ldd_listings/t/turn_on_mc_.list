	COMPILATION LISTING OF SEGMENT turn_on_mc_
	Compiled by: Multics PL/I Compiler, Release 29, of July 28, 1986
	Compiled at: Honeywell Bull, Phx. Az., Sys-M 
	Compiled on: 08/04/87  1318.4 mst Tue
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1987                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 /* format: style2 */
       13 
       14 /* This procedure is called to cause the message coordinator to start up.
       15*   It reattaches the I/O streams used by the message coordinator so that the various sources
       16*   inside the initializer process can be routed independently. */
       17 
       18 /* Modified August 1981 by E. N. Kittlitz to get heed bad iox_ return codes */
       19 /* Modified August 1982 by E. N. Kittlitz to not call sys_log_$mc_on. */
       20 /* Modified 1984-10-08 BIM to remove tape_switch, use up-to-date iox. */
       21 /* Modified 1984-12-02, BIM: remove mc_i/o altogether, use sc_ipc_mask_ */
       22 
       23 /****^  HISTORY COMMENTS:
       24*  1) change(86-06-05,GJohnson), approve(86-06-05,MCR7387),
       25*     audit(86-06-10,Martinson), install(86-07-11,MR12.0-1092):
       26*     Correct error message documentation.
       27*  2) change(87-06-12,Parisek), approve(87-06-12,MCR7690),
       28*     audit(87-06-12,Martinson), install(87-08-04,MR12.1-1055):
       29*       1) Removed unreferenced declarations.
       30*       2) Added HBULL pnotice.
       31*                                                   END HISTORY COMMENTS */
       32 
       33 turn_on_mc_:
       34      proc;
       35 
       36 	/* Builtins */
       37 	dcl     codeptr		 builtin;
       38 
       39 	dcl     code		 fixed bin (35);
       40 	dcl     n_masks		 fixed bin;
       41 	dcl     mc_tty_		 entry ();
       42 
       43 	dcl     com_err_		 entry options (variable);
       44 	dcl     mc_util_$init	 entry (char (*), char (6) aligned, entry, ptr, ptr, fixed bin (35));
       45 
  1     1 /* --------------- BEGIN include file iox_dcls.incl.pl1 --------------- */
  1     2 
  1     3 /* Written 05/04/78 by C. D. Tavares */
  1     4 /* Fixed declaration of iox_$find_iocb_n 05/07/80 by R. Holmstedt */
  1     5 /* Modified 5/83 by S. Krupp to add declarations for:  iox_$open_file,
  1     6*     iox_$close_file, iox_$detach and iox_$attach_loud entries. */
  1     7 
  1     8 dcl  iox_$attach_name entry (char (*), pointer, char (*), pointer, fixed bin (35)),
  1     9      iox_$attach_ptr entry (pointer, char (*), pointer, fixed bin (35)),
  1    10      iox_$close entry (pointer, fixed bin (35)),
  1    11      iox_$control entry (pointer, char (*), pointer, fixed bin (35)),
  1    12      iox_$delete_record entry (pointer, fixed bin (35)),
  1    13      iox_$destroy_iocb entry (pointer, fixed bin (35)),
  1    14      iox_$detach_iocb entry (pointer, fixed bin (35)),
  1    15      iox_$err_not_attached entry options (variable),
  1    16      iox_$err_not_closed entry options (variable),
  1    17      iox_$err_no_operation entry options (variable),
  1    18      iox_$err_not_open entry options (variable),
  1    19      iox_$find_iocb entry (char (*), pointer, fixed bin (35)),
  1    20      iox_$find_iocb_n entry (fixed bin, ptr, fixed bin(35)),
  1    21      iox_$get_chars entry (pointer, pointer, fixed bin (21), fixed bin (21), fixed bin (35)),
  1    22      iox_$get_line entry (pointer, pointer, fixed bin (21), fixed bin (21), fixed bin (35)),
  1    23      iox_$look_iocb entry (char (*), pointer, fixed bin (35)),
  1    24      iox_$modes entry (pointer, char (*), char (*), fixed bin (35)),
  1    25      iox_$move_attach entry (pointer, pointer, fixed bin (35)),
  1    26      iox_$open entry (pointer, fixed bin, bit (1) aligned, fixed bin (35)),
  1    27      iox_$position entry (pointer, fixed bin, fixed bin (21), fixed bin (35)),
  1    28      iox_$propagate entry (pointer),
  1    29      iox_$put_chars entry (pointer, pointer, fixed bin (21), fixed bin (35)),
  1    30      iox_$read_key entry (pointer, char (256) varying, fixed bin (21), fixed bin (35)),
  1    31      iox_$read_length entry (pointer, fixed bin (21), fixed bin (35)),
  1    32      iox_$read_record entry (pointer, pointer, fixed bin (21), fixed bin (21), fixed bin (35)),
  1    33      iox_$rewrite_record entry (pointer, pointer, fixed bin (21), fixed bin (35)),
  1    34      iox_$seek_key entry (pointer, char (256) varying, fixed bin (21), fixed bin (35)),
  1    35      iox_$write_record entry (pointer, pointer, fixed bin (21), fixed bin (35)),
  1    36      iox_$open_file entry(ptr, fixed bin, char(*), bit(1) aligned, fixed bin(35)),
  1    37      iox_$close_file entry(ptr, char(*), fixed bin(35)),
  1    38      iox_$detach entry(ptr, char(*), fixed bin(35)),
  1    39      iox_$attach_loud entry(ptr, char(*), ptr, fixed bin(35));
  1    40 
  1    41 dcl (iox_$user_output,
  1    42      iox_$user_input,
  1    43      iox_$user_io,
  1    44      iox_$error_output) external static pointer;
  1    45 
  1    46 /* ---------------- END include file iox_dcls.incl.pl1 ---------------- */
       46 
       47 	dcl     sc_ipc_mask_$unmask	 entry (fixed binary);
       48 	dcl     sc_ipc_mask_$remask	 entry (fixed binary);
       49 	dcl     ssu_$get_info_ptr	 entry (ptr) returns (ptr);
       50 
       51 
  2     1 /* Begin include file ..... iox_modes.incl.pl1 */
  2     2 
  2     3 /* Written by C. D. Tavares, 03/17/75 */
  2     4 /* Updated 10/31/77 by CDT to include short iox mode strings */
  2     5 
  2     6 dcl  iox_modes (13) char (24) int static options (constant) aligned initial
  2     7     ("stream_input", "stream_output", "stream_input_output",
  2     8      "sequential_input", "sequential_output", "sequential_input_output", "sequential_update",
  2     9      "keyed_sequential_input", "keyed_sequential_output", "keyed_sequential_update",
  2    10      "direct_input", "direct_output", "direct_update");
  2    11 
  2    12 dcl  short_iox_modes (13) char (4) int static options (constant) aligned initial
  2    13     ("si", "so", "sio", "sqi", "sqo", "sqio", "squ", "ksqi", "ksqo", "ksqu", "di", "do", "du");
  2    14 
  2    15 dcl (Stream_input initial (1),
  2    16      Stream_output initial (2),
  2    17      Stream_input_output initial (3),
  2    18      Sequential_input initial (4),
  2    19      Sequential_output initial (5),
  2    20      Sequential_input_output initial (6),
  2    21      Sequential_update initial (7),
  2    22      Keyed_sequential_input initial (8),
  2    23      Keyed_sequential_output initial (9),
  2    24      Keyed_sequential_update initial (10),
  2    25      Direct_input initial (11),
  2    26      Direct_output initial (12),
  2    27      Direct_update initial (13)) fixed bin int static options (constant);
  2    28 
  2    29 /* End include file ..... iox_modes.incl.pl1 */
       52 
  3     1 /*  BEGIN:   sc_stat_.incl.pl1			  *  *  *  *  *  */
  3     2 
  3     3 
  3     4 /****^  HISTORY COMMENTS:
  3     5*  1) change(87-02-04,GDixon), approve(87-05-25,MCR7690),
  3     6*     audit(87-06-02,Parisek), install(87-08-04,MR12.1-1056):
  3     7*     Add sc_stat_$vchn_requires_accept in support of DSA virtual channels.
  3     8*  2) change(87-02-04,GDixon), approve(87-05-25,MCR7680),
  3     9*     audit(87-06-02,Parisek), install(87-08-04,MR12.1-1056):
  3    10*     Reorganized by type of data to improve readability.
  3    11*                                                   END HISTORY COMMENTS */
  3    12 
  3    13 
  3    14 			      /* ACCESS NAMES		       */
  3    15 dcl (
  3    16  sc_stat_$exec_access_name,	      /* check MC access in an exec request    */
  3    17  sc_stat_$unidentified_access_name  /* check access if no one is logged in.  */
  3    18     ) char(32) ext static;
  3    19 
  3    20 		        /* PATHNAMES			       */
  3    21 dcl (
  3    22  sc_stat_$info_dir,	        /* admin info segs directory		       */
  3    23  sc_stat_$log_dir,	        /* as log segs directory		       */
  3    24  sc_stat_$mc_acs_dir,       /* message coordinator ACS segments (.mcacs) dir */
  3    25  sc_stat_$sysdir	        /* system control directory		       */
  3    26     ) char(168) ext static;
  3    27 
  3    28 		        /* OTHER CHAR STRINGS			       */
  3    29 dcl (
  3    30  sc_stat_$master_channel    /* Master TTY channel.		       */
  3    31     )  char(6) aligned ext static;
  3    32 
  3    33 			       /* LABELS			       */
  3    34 dcl (
  3    35  sc_stat_$admin_listener_exit_label, /* GO here to exit admin mode.  Set to  */
  3    36 			       /*    ssu_$null_label unless 	       */
  3    37 			       /*	   admin_listener is active.	       */
  3    38  sc_stat_$master_abort_label,	       /* GO here after fault that is not      */
  3    39 			       /*    attributable to a particular      */
  3    40 			       /*	   command.		       */
  3    41  sc_stat_$system_shutdown_label      /* GO here to shut down system	       */
  3    42     ) label variable ext static;
  3    43 
  3    44 			 /* POINTERS TO			       */
  3    45 dcl (
  3    46  sc_stat_$admin_log_iocb,	 /* IOCB for admin log		       */
  3    47  sc_stat_$admin_log_write_ptr, /* DATA for log_write_ calls on the admin log */
  3    48  sc_stat_$admin_sci_ptr,	 /* DATA ssu_ for terminal currently executing */
  3    49  sc_stat_$as_log_write_ptr,	 /* DATA for log_write_ calls on as log, used  */
  3    50 			 /*      by sys_log_.		       */
  3    51  sc_stat_$initzer_ttyp,	 /* ENT  mc_ate for initializer terminal       */
  3    52  sc_stat_$master_iocb,	 /* IOCB for "master_i/o"		       */
  3    53  sc_stat_$master_sci_ptr,	 /* DATA ssu_ (permanent) for system control   */
  3    54  sc_stat_$mc_ansp,		 /* HEAD of mc_anstbl		       */
  3    55  sc_stat_$mc_iocb,		 /* IOCB ptr for "mc_i/o"		       */
  3    56  sc_stat_$sv1_iocb,		 /* IOCB ptr for "severity1"		       */
  3    57  sc_stat_$sv2_iocb,		 /* IOCB ptr for "severity2"		       */
  3    58  sc_stat_$sv3_iocb		 /* IOCB ptr for "severity3"		       */
  3    59     ) ptr ext static;
  3    60 
  3    61 			   /* SWITCHES			       */
  3    62 dcl (
  3    63  sc_stat_$Go,		   /* TRUE after answering service is listening*/
  3    64  sc_stat_$Go_typed,		   /* TRUE immediately after 'go' is typed     */
  3    65  sc_stat_$Multics,		   /* TRUE after answering service started     */
  3    66  sc_stat_$Multics_typed,	   /* TRUE immediately after 'mult' is typed   */
  3    67  sc_stat_$Star_typed,	   /* TRUE if 'mult' and 'go' came from 'star' */
  3    68  sc_stat_$admin_listener_switch, /* TRUE if in the admin listener	       */
  3    69  sc_stat_$did_part1,	   /* TRUE if part 1 of system startup ec done */
  3    70  sc_stat_$did_part2,	   /* TRUE if part 2 of system startup ec done */
  3    71  sc_stat_$did_part3,	   /* TRUE if part 3 of system startup ec done */
  3    72  sc_stat_$mc_is_on,		   /* TRUE if message coordinator running      */
  3    73  sc_stat_$no_operator_login,	   /* TRUE if operator login not required, or  */
  3    74 			   /*	 if PNT not yet available.	       */
  3    75  sc_stat_$shutdown_typed,	   /* TRUE if 'shutdown' command in progress.  */
  3    76  sc_stat_$test_mode,	   /* TRUE if in test environment	       */
  3    77  sc_stat_$vchn_requires_accept   /* TRUE if vchn may only be used if accepted*/
  3    78 			   /*      by operator signed on system console*/
  3    79     ) bit(1) aligned ext static;
  3    80 
  3    81 
  3    82 /*  END OF:  sc_stat_.incl.pl1			  *  *  *  *  *  */
       53 
  4     1 /*  BEGIN:   sc_subsystem_info_.incl.pl1		  *  *  *  *  *  */
  4     2 
  4     3 /* format:style3,idind30 */
  4     4 
  4     5 /* Created  1984-10-24  BIM */
  4     6 /* Modified 1985-01-07, BIM: access control flags that track admin and X */
  4     7 /* Modified 1985-02-18, E. Swenson to save away abort_line procedure. */
  4     8 
  4     9 
  4    10 /****^  HISTORY COMMENTS:
  4    11*  1) change(87-02-17,GDixon), approve(87-07-03,MCR7680),
  4    12*     audit(87-07-13,Parisek), install(87-08-04,MR12.1-1056):
  4    13*     Correct formatting problems.  Add sc_subsystem_info.flags.dont_mask_calls
  4    14*     switch.
  4    15*  2) change(87-07-03,GDixon), approve(87-07-03,MCR7680),
  4    16*     audit(87-07-13,Parisek), install(87-08-04,MR12.1-1056):
  4    17*     Removed dont_mask_calls flag.  It is no longer needed to correctly perform
  4    18*     masking on a per-request basis.
  4    19*                                                   END HISTORY COMMENTS */
  4    20 
  4    21 
  4    22 declare	sc_subsystem_info_ptr	pointer;
  4    23 declare	1 sc_subsystem_info		aligned based (sc_subsystem_info_ptr),
  4    24 	  2 restriction_flags	bit (36) aligned,	/* copied from mc atep or fabricated */
  4    25 	  2 flags			aligned,
  4    26 	    3 no_real_tty		bit (1) unaligned,	/* for sc_admin_command_ */
  4    27 	    3 print_ready		bit (1) unal,	/* on for all except the system console,	*/
  4    28 						/*  instructs sc_process_command_line_ to deal	*/
  4    29 						/*  with the prompt				*/
  4    30 	    3 the_system_console	bit (1) unal,	/* syserr messages are printed here (but console	*/
  4    31 						/*  recover doesn't try to fix this) copied here	*/
  4    32 						/*  from the mc_ate to save other looking in there*/
  4    33 	    3 printer_offed		bit (1) unal,	/* suppress logging */
  4    34 	    3 pad			bit (32) unaligned,
  4    35 	  2 source_name		char (32) unaligned,
  4    36 	  2 area_ptr		pointer,
  4    37 	  2 mc_atep		pointer,		/* needed to play with attachments */
  4    38 	  2 real_iocb		pointer,		/* for sc_signal_io_handler_ */
  4    39 	  2 hangup_entry		entry (pointer) variable,
  4    40 						/* called on io_no_permission. */
  4    41 	  2 real_execute_line	entry (ptr, ptr, fixed bin (21), fixed bin (35)),
  4    42 	  2 real_locate_request	entry (ptr, char (*), ptr, fixed bin (35)),
  4    43 	  2 access_control_name	char (32) unaligned,
  4    44 	  2 real_invoke_request	entry,		/* since MR11 ssu_ lacks the ability to	abort a	*/
  4    45 						/*  single request, we have an invoke_request that*/
  4    46 						/*  handles a condition to unwind the request	*/
  4    47 	  2 abort_request_label	label,		/* go here (nonlocally) to unwind a single request */
  4    48 	  2 real_abort_line		entry options (variable);
  4    49 
  4    50 declare	sc_ss_area		area based (sc_subsystem_info.area_ptr);
  4    51 
  4    52 /* The following defines the user flags for the request table. */
  4    53 
  4    54 declare	sc_rf_ptr			pointer;
  4    55 declare	1 sc_request_flags		unaligned based (sc_rf_ptr),
  4    56 	  2 dont_parse_arguments	bit,		/* reply, intercom */
  4    57 	  2 obsolete		bit,		/* warn opr to not use it */
  4    58 	  2 dont_mask_calls		bit,		/* this runs without masking ev calls */
  4    59 	  2 requires_as		bit,		/* not before AS */
  4    60 	  2 requires_no_as		bit,		/* only before AS */
  4    61 	  2 complete_disks_first	bit,		/* try to mount disks */
  4    62 	  2 no_login_needed		bit,		/* sign_on */
  4    63 	  2 pad			bit (5),
  4    64 	  2 restriction_type	fixed bin (6) unsigned;
  4    65 						/* index into restriction flag string */
  4    66 
  4    67 
  4    68 /*  END OF:  sc_subsystem_info_.incl.pl1		  *  *  *  *  *  */
       54 
       55 
       56 	if sc_stat_$mc_is_on
       57 	then return;				/* once. */
       58 
       59 /* First turn on the real message coordinator. */
       60 
       61 
       62 	call mc_util_$init (sc_stat_$sysdir, sc_stat_$master_channel, mc_tty_, sc_stat_$mc_ansp, sc_stat_$initzer_ttyp,
       63 	     code);
       64 	if code ^= 0
       65 	then call complain ("error from mc_init");
       66 
       67 	call sc_ipc_mask_$unmask (n_masks);
       68 
       69 	/*** event calls are now unmasked, and n_masks is the number
       70*	     of times to remask them (perhaps 0). */
       71 
       72 	call iox_$detach_iocb (sc_stat_$sv1_iocb, code);
       73 	if code ^= 0
       74 	then call complain ("detach severity1");
       75 	call iox_$detach_iocb (sc_stat_$sv2_iocb, code);
       76 	if code ^= 0
       77 	then call complain ("detach severity2");
       78 	call iox_$detach_iocb (sc_stat_$sv3_iocb, code);
       79 	if code ^= 0
       80 	then call complain ("detach severity3");
       81 	call iox_$attach_ptr (sc_stat_$sv1_iocb, "mr_ as", codeptr (turn_on_mc_), code);
       82 	if code ^= 0
       83 	then call complain ("attach severity1");
       84 	call iox_$attach_ptr (sc_stat_$sv2_iocb, "mr_ as", codeptr (turn_on_mc_), code);
       85 	if code ^= 0
       86 	then call complain ("attach severity2");
       87 	call iox_$attach_ptr (sc_stat_$sv3_iocb, "mr_ as", codeptr (turn_on_mc_), code);
       88 	if code ^= 0
       89 	then call complain ("attach severity3");
       90 	call iox_$open (sc_stat_$sv1_iocb, Stream_output, "1"b, code);
       91 	if code ^= 0
       92 	then call complain ("open severity1");
       93 	call iox_$open (sc_stat_$sv2_iocb, Stream_output, "1"b, code);
       94 	if code ^= 0
       95 	then call complain ("open severity2");
       96 	call iox_$open (sc_stat_$sv3_iocb, Stream_output, "1"b, code);
       97 	if code ^= 0
       98 	then call complain ("open severity3");
       99 
      100 	call sc_ipc_mask_$remask (n_masks);
      101 
      102 	sc_subsystem_info_ptr = ssu_$get_info_ptr (sc_stat_$master_sci_ptr);
      103 	sc_subsystem_info.mc_atep = sc_stat_$initzer_ttyp;/* tell the world */
      104 	sc_subsystem_info.real_iocb = sc_stat_$master_iocb;
      105 						/* how to talk to this */
      106 
      107 	sc_stat_$mc_is_on = "1"b;			/* Set flag. */
      108 exit:
      109 	return;
      110 
      111 
      112 complain:
      113      proc (why);
      114 	dcl     why		 char (*);
      115 	call com_err_ (code, "turn_on_mc_", why);
      116 	go to exit;
      117      end;
      118 
      119 
      120 /* BEGIN MESSAGE DOCUMENTATION
      121*
      122*   Message:
      123*   turn_on_mc_: MESSAGE. detach STREAM
      124*
      125*   S:	sc (error_output).
      126*
      127*   T:	$init
      128*
      129*   M:	The system attempted to start the Message Coordinator
      130*   but the stream STREAM could not be detached from its initial
      131*   dim.  The system continues to operate but the Message Coordinator
      132*   is not used.  Probably, the daemon processes will also encounter
      133*   trouble.
      134*
      135*   A:	$contact
      136*
      137*
      138*   Message:
      139*   turn_on_mc_: MESSAGE. attach STREAM
      140*
      141*   S:	sc (error_output).
      142*
      143*   T:	$init
      144*
      145*   M:	The system attempted to start the Message Coordinator
      146*   but the stream STREAM cannot be attached to the message routing
      147*   dim.  The system continues to operate but the Message Coordinator
      148*   is not used.  Probably, the daemon processes will also encounter
      149*   trouble.
      150*
      151*   A:	$contact
      152*
      153*
      154*   Message:
      155*   turn_on_mc_: MESSAGE. open STREAM
      156*
      157*   S:	sc (error_output).
      158*
      159*   T:	$init
      160*
      161*   M:	The system attempted to start the Message Coordinator but the
      162*   stream STREAM cannot be opened by the message routing dim.  The system continues
      163*   to operate but the Message Coordinator is not used.  Probably, the daemon
      164*   processes will also encounter trouble.
      165*
      166*   A:	$contact
      167*
      168*
      169*   Message:
      170*   turn_on_mc_: MESSAGE. error from mc_init
      171*
      172*   S:	sc (error_output).
      173*
      174*   T:	$init
      175*
      176*   M:	The system attempted to start the Message Coordinator
      177*   but it cannot be initialized.  The system continues to operate but
      178*   the Message Coordinator is not used.  The daemon processes will
      179*   probably also encounter trouble.
      180*
      181*   A:	$contact
      182*
      183*   END MESSAGE DOCUMENTATION */
      184 
      185      end turn_on_mc_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    08/04/87  1221.9  turn_on_mc_.pl1                   >special_ldd>install>MR12.1-1054>turn_on_mc_.pl1
46           1    05/23/83  0916.6  iox_entries.incl.pl1              >ldd>include>iox_dcls.incl.pl1
52           2    02/02/78  1229.7  iox_modes.incl.pl1                >ldd>include>iox_modes.incl.pl1
53           3    08/04/87  1139.2  sc_stat_.incl.pl1                 >spec>install>1056>sc_stat_.incl.pl1
54           4    08/04/87  1139.1  sc_subsystem_info_.incl.pl1       >spec>install>1056>sc_subsystem_info_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
Stream_output                   000000 constant        fixed bin(17,0)          initial dcl 2-15 set ref 90* 93* 96*
code                            000100 automatic       fixed bin(35,0)          dcl 39 set ref 62* 64 72* 73 75* 76 78* 79 81* 82
                                                                                  84* 85 87* 88 90* 91 93* 94 96* 97 115*
codeptr                                                builtin function         dcl 37 ref 81 81 84 84 87 87
com_err_                        000012 constant        entry                    external dcl 43 ref 115
iox_$attach_ptr                 000016 constant        entry                    external dcl 1-8 ref 81 84 87
iox_$detach_iocb                000020 constant        entry                    external dcl 1-8 ref 72 75 78
iox_$open                       000022 constant        entry                    external dcl 1-8 ref 90 93 96
mc_atep                  14            based           pointer                  level 2 dcl 4-23 set ref 103*
mc_tty_                         000010 constant        entry                    external dcl 41 ref 62 62
mc_util_$init                   000014 constant        entry                    external dcl 44 ref 62
n_masks                         000101 automatic       fixed bin(17,0)          dcl 40 set ref 67* 100*
real_iocb                16            based           pointer                  level 2 dcl 4-23 set ref 104*
sc_ipc_mask_$remask             000026 constant        entry                    external dcl 48 ref 100
sc_ipc_mask_$unmask             000024 constant        entry                    external dcl 47 ref 67
sc_stat_$initzer_ttyp           000036 external static pointer                  dcl 3-45 set ref 62* 103
sc_stat_$master_channel         000034 external static char(6)                  dcl 3-29 set ref 62*
sc_stat_$master_iocb            000040 external static pointer                  dcl 3-45 ref 104
sc_stat_$master_sci_ptr         000042 external static pointer                  dcl 3-45 set ref 102*
sc_stat_$mc_ansp                000044 external static pointer                  dcl 3-45 set ref 62*
sc_stat_$mc_is_on               000054 external static bit(1)                   dcl 3-62 set ref 56 107*
sc_stat_$sv1_iocb               000046 external static pointer                  dcl 3-45 set ref 72* 81* 90*
sc_stat_$sv2_iocb               000050 external static pointer                  dcl 3-45 set ref 75* 84* 93*
sc_stat_$sv3_iocb               000052 external static pointer                  dcl 3-45 set ref 78* 87* 96*
sc_stat_$sysdir                 000032 external static char(168)                unaligned dcl 3-21 set ref 62*
sc_subsystem_info                      based           structure                level 1 dcl 4-23
sc_subsystem_info_ptr           000102 automatic       pointer                  dcl 4-22 set ref 102* 103 104
ssu_$get_info_ptr               000030 constant        entry                    external dcl 49 ref 102
why                                    parameter       char                     unaligned dcl 114 set ref 112 115*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
Direct_input                           internal static fixed bin(17,0)          initial dcl 2-15
Direct_output                          internal static fixed bin(17,0)          initial dcl 2-15
Direct_update                          internal static fixed bin(17,0)          initial dcl 2-15
Keyed_sequential_input                 internal static fixed bin(17,0)          initial dcl 2-15
Keyed_sequential_output                internal static fixed bin(17,0)          initial dcl 2-15
Keyed_sequential_update                internal static fixed bin(17,0)          initial dcl 2-15
Sequential_input                       internal static fixed bin(17,0)          initial dcl 2-15
Sequential_input_output                internal static fixed bin(17,0)          initial dcl 2-15
Sequential_output                      internal static fixed bin(17,0)          initial dcl 2-15
Sequential_update                      internal static fixed bin(17,0)          initial dcl 2-15
Stream_input                           internal static fixed bin(17,0)          initial dcl 2-15
Stream_input_output                    internal static fixed bin(17,0)          initial dcl 2-15
iox_$attach_loud                000000 constant        entry                    external dcl 1-8
iox_$attach_name                000000 constant        entry                    external dcl 1-8
iox_$close                      000000 constant        entry                    external dcl 1-8
iox_$close_file                 000000 constant        entry                    external dcl 1-8
iox_$control                    000000 constant        entry                    external dcl 1-8
iox_$delete_record              000000 constant        entry                    external dcl 1-8
iox_$destroy_iocb               000000 constant        entry                    external dcl 1-8
iox_$detach                     000000 constant        entry                    external dcl 1-8
iox_$err_no_operation           000000 constant        entry                    external dcl 1-8
iox_$err_not_attached           000000 constant        entry                    external dcl 1-8
iox_$err_not_closed             000000 constant        entry                    external dcl 1-8
iox_$err_not_open               000000 constant        entry                    external dcl 1-8
iox_$error_output                      external static pointer                  dcl 1-41
iox_$find_iocb                  000000 constant        entry                    external dcl 1-8
iox_$find_iocb_n                000000 constant        entry                    external dcl 1-8
iox_$get_chars                  000000 constant        entry                    external dcl 1-8
iox_$get_line                   000000 constant        entry                    external dcl 1-8
iox_$look_iocb                  000000 constant        entry                    external dcl 1-8
iox_$modes                      000000 constant        entry                    external dcl 1-8
iox_$move_attach                000000 constant        entry                    external dcl 1-8
iox_$open_file                  000000 constant        entry                    external dcl 1-8
iox_$position                   000000 constant        entry                    external dcl 1-8
iox_$propagate                  000000 constant        entry                    external dcl 1-8
iox_$put_chars                  000000 constant        entry                    external dcl 1-8
iox_$read_key                   000000 constant        entry                    external dcl 1-8
iox_$read_length                000000 constant        entry                    external dcl 1-8
iox_$read_record                000000 constant        entry                    external dcl 1-8
iox_$rewrite_record             000000 constant        entry                    external dcl 1-8
iox_$seek_key                   000000 constant        entry                    external dcl 1-8
iox_$user_input                        external static pointer                  dcl 1-41
iox_$user_io                           external static pointer                  dcl 1-41
iox_$user_output                       external static pointer                  dcl 1-41
iox_$write_record               000000 constant        entry                    external dcl 1-8
iox_modes                              internal static char(24)                 initial array dcl 2-6
sc_request_flags                       based           structure                level 1 packed unaligned dcl 4-55
sc_rf_ptr                              automatic       pointer                  dcl 4-54
sc_ss_area                             based           area(1024)               dcl 4-50
sc_stat_$Go                            external static bit(1)                   dcl 3-62
sc_stat_$Go_typed                      external static bit(1)                   dcl 3-62
sc_stat_$Multics                       external static bit(1)                   dcl 3-62
sc_stat_$Multics_typed                 external static bit(1)                   dcl 3-62
sc_stat_$Star_typed                    external static bit(1)                   dcl 3-62
sc_stat_$admin_listener_exit_label     external static label variable           dcl 3-34
sc_stat_$admin_listener_switch         external static bit(1)                   dcl 3-62
sc_stat_$admin_log_iocb                external static pointer                  dcl 3-45
sc_stat_$admin_log_write_ptr           external static pointer                  dcl 3-45
sc_stat_$admin_sci_ptr                 external static pointer                  dcl 3-45
sc_stat_$as_log_write_ptr              external static pointer                  dcl 3-45
sc_stat_$did_part1                     external static bit(1)                   dcl 3-62
sc_stat_$did_part2                     external static bit(1)                   dcl 3-62
sc_stat_$did_part3                     external static bit(1)                   dcl 3-62
sc_stat_$exec_access_name              external static char(32)                 unaligned dcl 3-15
sc_stat_$info_dir                      external static char(168)                unaligned dcl 3-21
sc_stat_$log_dir                       external static char(168)                unaligned dcl 3-21
sc_stat_$master_abort_label            external static label variable           dcl 3-34
sc_stat_$mc_acs_dir                    external static char(168)                unaligned dcl 3-21
sc_stat_$mc_iocb                       external static pointer                  dcl 3-45
sc_stat_$no_operator_login             external static bit(1)                   dcl 3-62
sc_stat_$shutdown_typed                external static bit(1)                   dcl 3-62
sc_stat_$system_shutdown_label         external static label variable           dcl 3-34
sc_stat_$test_mode                     external static bit(1)                   dcl 3-62
sc_stat_$unidentified_access_name      external static char(32)                 unaligned dcl 3-15
sc_stat_$vchn_requires_accept          external static bit(1)                   dcl 3-62
short_iox_modes                        internal static char(4)                  initial array dcl 2-12

NAMES DECLARED BY EXPLICIT CONTEXT.
complain                        000576 constant        entry                    internal dcl 112 ref 64 73 76 79 82 85 88 91 94 97
exit                            000575 constant        label                    dcl 108 ref 116
turn_on_mc_                     000073 constant        entry                    external dcl 33 ref 81 81 84 84 87 87

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1106        1164     664        1116
Length      1460     664        56         257     221           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
turn_on_mc_                         128 external procedure  is an external procedure.  
complain                                internal procedure  shares stack frame of external procedure turn_on_mc_.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
turn_on_mc_              000100 code                        turn_on_mc_
                         000101 n_masks                     turn_on_mc_
                         000102 sc_subsystem_info_ptr       turn_on_mc_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      iox_$attach_ptr               iox_$detach_iocb              iox_$open
mc_tty_                       mc_util_$init                 sc_ipc_mask_$remask           sc_ipc_mask_$unmask
ssu_$get_info_ptr

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
sc_stat_$initzer_ttyp         sc_stat_$master_channel       sc_stat_$master_iocb          sc_stat_$master_sci_ptr
sc_stat_$mc_ansp              sc_stat_$mc_is_on             sc_stat_$sv1_iocb             sc_stat_$sv2_iocb
sc_stat_$sv3_iocb             sc_stat_$sysdir




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     33 000072        56 000100        62 000102        64 000141        67 000151        72 000160        73 000171
     75 000204        76 000215        78 000230        79 000241        81 000254        82 000304        84 000317
     85 000347        87 000362        88 000412        90 000425        91 000444        93 000457        94 000476
     96 000511        97 000530       100 000543       102 000552       103 000563       104 000570       107 000573
    108 000575       112 000576       115 000607       116 000636


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
