	COMPILATION LISTING OF SEGMENT print_reqfile
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 09/18/84  1228.5 mst Tue
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 print_reqfile: proc;
       12 
       13 /* print reqfile */
       14 
       15 dcl  dn char (168) aligned,
       16      ap ptr,
       17      al fixed bin,
       18      bchr char (al) based (ap),
       19      en char (32) aligned,
       20      i fixed bin,
       21      nq fixed bin,
       22      ec fixed bin (35),
       23      qp ptr,
       24     (co, dp) char (64) aligned,
       25     (dt1, dt2, dt3) char (8) aligned,
       26      facev char (15) aligned;
       27 
       28 
       29 dcl  cv_$mwvf ext entry (float bin) returns (char (15)),
       30      cu_$arg_ptr entry (fixed bin, ptr, fixed bin, fixed bin (35)),
       31      get_wdir_ entry () returns (char (168)),
       32      system_info_$titles entry options (variable),
       33      date_time_ entry (fixed bin (71), char (*) aligned),
       34      hcs_$initiate entry (char (*) aligned, char (*) aligned, char (*) aligned,
       35      fixed bin (1), fixed bin (2), ptr, fixed bin (35)),
       36      hcs_$terminate_noname entry (ptr, fixed bin (35)),
       37      expand_path_ entry (ptr, fixed bin, ptr, ptr, fixed bin (35)),
       38      ioa_ entry options (variable),
       39      com_err_ entry options (variable);
       40 
       41 dcl  null builtin;
       42 
  1     1 /* Requisition file declaration */
  1     2 /* Modified BIM 1984-07-10 for unaligned strings */
  1     3 /* Modified BIM 1984-09-14 foor 3000 size-array */
  1     4 
  1     5 dcl 1 reqfile based (qp) aligned,			/* MIT accounting data */
  1     6     2 nacts fixed,
  1     7     2 version fixed bin,
  1     8     2 pad (6) bit (36) aligned,
  1     9     2 reqfiletab (3000),				/* one entry per Multics account */
  1    10 						/* same size as projfile */
  1    11       3 acctid char (12) unal,			/* account id. usually same as Proj */
  1    12       3 mitacct char (12) unal,			/* MIT account no. */
  1    13       3 reqno char (12) unal,				/* requisition or PO no. */
  1    14       3 qflag char (8),				/* class & activity */
  1    15       3 procssd fixed bin,				/* temp for usage report */
  1    16       3 qdn fixed bin (71),				/* date on for account */
  1    17       3 qdf fixed bin (71),				/* date off */
  1    18       3 billing_name char (32) unal,			/* where to send bill */
  1    19       3 billing_addr char (32) unal,
  1    20       3 chg_mo float bin (63),			/* charges this month */
  1    21       3 chg_tr float bin (63),			/* charges this req */
  1    22       3 req_amt float bin (63),			/* req face value */
  1    23       3 cutoff fixed bin (71);			/* term date for req */
  1    24 
  1    25 dcl  loqh int static fixed bin (17) init (8),		/* length of reqfile head */
  1    26      loqe int static fixed bin (17) init (40);		/* lth of reqfile entry */
  1    27 
  1    28 declare REQFILE_VERSION fixed bin init (2) int static options (constant);
  1    29 
  1    30 /* End include file reqfile.incl.pl1 */
       43 
       44 
       45 	call cu_$arg_ptr (1, ap, al, ec);
       46 	if ec ^= 0 then do;
       47 	     dn = get_wdir_ ();
       48 	     en = "reqfile";
       49 	end;
       50 	else do;
       51 	     call expand_path_ (ap, al, addr (dn), addr (en), ec);
       52 	end;
       53 	call hcs_$initiate (dn, en, "", 0, 1, qp, ec);
       54 	if qp = null then do;
       55 er:	     call com_err_ (ec, "print_reqfile", "");
       56 	     return;
       57 	end;
       58 
       59 	nq = qp -> reqfile.nacts;
       60 	call system_info_$titles (co, dp);
       61 	call ioa_ ("^|^a^/^/^-^a^/^/Requisition file listing: ^d accounts.^/^/", co, dp, nq);
       62 
       63 	call ioa_ ("Acct ID^5xAcct no^6xRequisition^3x  Cutoff^5xReq. Amount^11xSpent^6xThis Month^8xOn^7xOff^/");
       64 	do i = 1 to nq;
       65 	     call date_time_ (cutoff (i), dt1);
       66 	     call date_time_ (qdn (i), dt2);
       67 	     if qdf (i) ^= 0 then call date_time_ (qdf (i), dt3);
       68 	     else dt3 = "";
       69 	     facev = cv_$mwvf ((req_amt (i)));
       70 	     if facev = "" then facev = "           open";
       71 	     call ioa_ ("^9a^3x^12a ^12a  ^8a ^15a ^15a ^15a  ^8a  ^8a",
       72 	     acctid (i), mitacct (i), reqno (i), dt1,
       73 	     facev, cv_$mwvf (chg_tr (i) + chg_mo (i)), cv_$mwvf ((chg_mo (i))), dt2, dt3);
       74 	     call ioa_ ("^25x^32a^8x^32a^/", billing_name (i), billing_addr (i));
       75 	end;
       76 
       77 	call hcs_$terminate_noname (qp, ec);
       78 
       79      end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    09/18/84  0758.5  print_reqfile.pl1                 >special_ldd>online>09/18/84>print_reqfile.pl1
43           1    09/18/84  1000.6  reqfile.incl.pl1                  >special_ldd>online>09/18/84>reqfile.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
acctid                   10            based           char(12)                 array level 3 packed unaligned dcl 1-5 set ref 71*
al                              000154 automatic       fixed bin(17,0)          dcl 15 set ref 45* 51*
ap                              000152 automatic       pointer                  dcl 15 set ref 45* 51*
billing_addr             40            based           char(32)                 array level 3 packed unaligned dcl 1-5 set ref 74*
billing_name             30            based           char(32)                 array level 3 packed unaligned dcl 1-5 set ref 74*
chg_mo                   50            based           float bin(63)            array level 3 dcl 1-5 ref 71 71 71 71
chg_tr                   52            based           float bin(63)            array level 3 dcl 1-5 ref 71 71
co                              000172 automatic       char(64)                 dcl 15 set ref 60* 61*
com_err_                        000032 constant        entry                    external dcl 29 ref 55
cu_$arg_ptr                     000012 constant        entry                    external dcl 29 ref 45
cutoff                   56            based           fixed bin(71,0)          array level 3 dcl 1-5 set ref 65*
cv_$mwvf                        000010 constant        entry                    external dcl 29 ref 69 71 71 71 71
date_time_                      000020 constant        entry                    external dcl 29 ref 65 66 67
dn                              000100 automatic       char(168)                dcl 15 set ref 47* 51 51 53*
dp                              000212 automatic       char(64)                 dcl 15 set ref 60* 61*
dt1                             000232 automatic       char(8)                  dcl 15 set ref 65* 71*
dt2                             000234 automatic       char(8)                  dcl 15 set ref 66* 71*
dt3                             000236 automatic       char(8)                  dcl 15 set ref 67* 68* 71*
ec                              000167 automatic       fixed bin(35,0)          dcl 15 set ref 45* 46 51* 53* 55* 77*
en                              000155 automatic       char(32)                 dcl 15 set ref 48* 51 51 53*
expand_path_                    000026 constant        entry                    external dcl 29 ref 51
facev                           000240 automatic       char(15)                 dcl 15 set ref 69* 70 70* 71*
get_wdir_                       000014 constant        entry                    external dcl 29 ref 47
hcs_$initiate                   000022 constant        entry                    external dcl 29 ref 53
hcs_$terminate_noname           000024 constant        entry                    external dcl 29 ref 77
i                               000165 automatic       fixed bin(17,0)          dcl 15 set ref 64* 65 66 67 67 69 71 71 71 71 71 71
                                                                                  71 71 71 74 74*
ioa_                            000030 constant        entry                    external dcl 29 ref 61 63 71 74
mitacct                  13            based           char(12)                 array level 3 packed unaligned dcl 1-5 set ref 71*
nacts                                  based           fixed bin(17,0)          level 2 dcl 1-5 ref 59
nq                              000166 automatic       fixed bin(17,0)          dcl 15 set ref 59* 61* 64
null                                                   builtin function         dcl 41 ref 54
qdf                      26            based           fixed bin(71,0)          array level 3 dcl 1-5 set ref 67 67*
qdn                      24            based           fixed bin(71,0)          array level 3 dcl 1-5 set ref 66*
qp                              000170 automatic       pointer                  dcl 15 set ref 53* 54 59 65 66 67 67 69 71 71 71 71
                                                                                  71 71 71 71 71 74 74 77*
req_amt                  54            based           float bin(63)            array level 3 dcl 1-5 ref 69
reqfile                                based           structure                level 1 dcl 1-5
reqfiletab               10            based           structure                array level 2 dcl 1-5
reqno                    16            based           char(12)                 array level 3 packed unaligned dcl 1-5 set ref 71*
system_info_$titles             000016 constant        entry                    external dcl 29 ref 60

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
REQFILE_VERSION                        internal static fixed bin(17,0)          initial dcl 1-28
bchr                                   based           char                     unaligned dcl 15
loqe                                   internal static fixed bin(17,0)          initial dcl 1-25
loqh                                   internal static fixed bin(17,0)          initial dcl 1-25

NAMES DECLARED BY EXPLICIT CONTEXT.
er                              000272 constant        label                    dcl 55
print_reqfile                   000134 constant        entry                    external dcl 11

NAME DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 51 51 51 51

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1030        1064     677        1040
Length      1272     677        34         172     130           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
print_reqfile                       290 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
print_reqfile            000100 dn                          print_reqfile
                         000152 ap                          print_reqfile
                         000154 al                          print_reqfile
                         000155 en                          print_reqfile
                         000165 i                           print_reqfile
                         000166 nq                          print_reqfile
                         000167 ec                          print_reqfile
                         000170 qp                          print_reqfile
                         000172 co                          print_reqfile
                         000212 dp                          print_reqfile
                         000232 dt1                         print_reqfile
                         000234 dt2                         print_reqfile
                         000236 dt3                         print_reqfile
                         000240 facev                       print_reqfile

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      cu_$arg_ptr                   cv_$mwvf                      date_time_
expand_path_                  get_wdir_                     hcs_$initiate                 hcs_$terminate_noname
ioa_                          system_info_$titles

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000133        45 000141        46 000157        47 000161        48 000173        49 000176        51 000177
     53 000222        54 000266        55 000272        56 000317        59 000320        60 000322        61 000336
     63 000365        64 000401        65 000411        66 000431        67 000450        68 000472        69 000474
     70 000515        71 000525        74 000633        75 000663        77 000665        79 000676


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
