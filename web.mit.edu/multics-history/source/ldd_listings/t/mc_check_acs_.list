	COMPILATION LISTING OF SEGMENT mc_check_acs_
	Compiled by: Multics PL/I Compiler, Release 29, of July 28, 1986
	Compiled at: Honeywell Bull, Phx. Az., Sys-M 
	Compiled on: 08/04/87  1320.6 mst Tue
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1987                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1987 *
        6*        *                                                         *
        7*        *********************************************************** */
        8 
        9 /* mc_check_acs_ -- access control for Message Coordinator */
       10 /* format: style2 */
       11 
       12 mc_check_acs_:
       13      procedure;
       14 
       15 /**** Modification History:
       16*      Created 1984-12-26, BIM.
       17*      Modified 1985-01-29 by E. Swenson to add auditing
       18**/
       19 
       20 
       21 /****^  HISTORY COMMENTS:
       22*  1) change(87-02-23,GDixon), approve(87-06-12,MCR7690),
       23*     audit(87-05-07,Parisek), install(87-08-04,MR12.1-1055):
       24*     Correct coding standard violations.  Add copyright notice.
       25*                                                   END HISTORY COMMENTS */
       26 
       27 
       28 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
       29 /*							       */
       30 /* NOTES ON AUDITING:					       */
       31 /*							       */
       32 /* This procedure is responsible for access checks and auditing in the       */
       33 /* usual manner. If the redundancy level gets out of hand (in terms of       */
       34 /* duplicate messages) then a solution will have to be found.	       */
       35 /*							       */
       36 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
       37 
       38 	declare P_source_name	 char (*);
       39 	declare P_user_name		 char (*);
       40 	declare P_code		 fixed bin (35);
       41 	declare P_ring		 fixed bin (3);
       42 
       43 	declare global_access_op	 bit (36) aligned;
       44 	declare modes		 bit (36) aligned;
       45 
       46 	declare rtrim		 builtin;
       47 
       48 	declare convert_access_operation_
       49 				 entry (bit (36) aligned) returns (char (50));
       50 	declare hcs_$get_user_access_modes
       51 				 entry (char (*), char (*), char (*), fixed bin, bit (36) aligned,
       52 				 bit (36) aligned, fixed bin (35));
       53 	declare sys_log_		 entry options (variable);
       54 
       55 	declare (
       56 	        GRANT		 initial ("1"b),
       57 	        DENY		 initial ("0"b)
       58 	        )			 bit (1) aligned internal static options (constant);
       59 
       60 	declare (
       61 	        access_operations_$daemon_daemon_login,
       62 	        access_operations_$daemon_reply,
       63 	        access_operations_$daemon_login,
       64 	        access_operations_$daemon_logout,
       65 	        access_operations_$daemon_quit
       66 	        )			 ext static bit (36) aligned;
       67 
       68 	declare (
       69 	        error_table_$mc_no_c_permission,
       70 	        error_table_$mc_no_d_permission,
       71 	        error_table_$mc_no_q_permission,
       72 	        error_table_$mc_no_r_permission
       73 	        )			 fixed bin (35) ext static;
       74 
       75 
       76 
       77 reply:
       78      entry (P_user_name, P_ring, P_source_name, P_code);
       79 
       80 	call setup (access_operations_$daemon_reply);	/* returns non-locally if checking is disabled */
       81 
       82 	call hcs_$get_user_access_modes (sc_stat_$mc_acs_dir, rtrim (P_source_name) || ".mcacs", P_user_name, (P_ring),
       83 	     (""b), modes, P_code);
       84 	if P_code = 0
       85 	then if (modes & MCACS_R_ACCESS) = ""b
       86 	     then P_code = error_table_$mc_no_r_permission;
       87 
       88 	if P_code = 0
       89 	then call AUDIT (GRANT);
       90 	else call AUDIT (DENY);
       91 	return;
       92 
       93 quit:
       94      entry (P_user_name, P_ring, P_source_name, P_code);
       95 
       96 	call setup (access_operations_$daemon_quit);	/* returns non-locally if checking is disabled */
       97 
       98 	call hcs_$get_user_access_modes (sc_stat_$mc_acs_dir, rtrim (P_source_name) || ".mcacs", P_user_name, (P_ring),
       99 	     (""b), modes, P_code);
      100 	if P_code = 0
      101 	then if (modes & MCACS_Q_ACCESS) = ""b
      102 	     then P_code = error_table_$mc_no_q_permission;
      103 
      104 	if P_code = 0
      105 	then call AUDIT (GRANT);
      106 	else call AUDIT (DENY);
      107 	return;
      108 
      109 log_daemon_in:
      110      entry (P_user_name, P_ring, P_source_name, P_code);
      111 
      112 	call setup (access_operations_$daemon_login);	/* returns non-locally if checking is disabled */
      113 	go to CONTROL_COMMON;
      114 
      115 log_daemon_out:
      116      entry (P_user_name, P_ring, P_source_name, P_code);
      117 
      118 	call setup (access_operations_$daemon_logout);	/* returns non-locally if checking is disabled */
      119 	go to CONTROL_COMMON;
      120 
      121 new_proc_daemon:
      122      entry (P_user_name, P_ring, P_source_name, P_code);
      123 
      124 	call setup (access_operations_$daemon_quit);	/* returns non-locally if checking is disabled */
      125 
      126 CONTROL_COMMON:
      127 	call hcs_$get_user_access_modes (sc_stat_$mc_acs_dir, rtrim (P_source_name) || ".mcacs", P_user_name, (P_ring),
      128 	     (""b), modes, P_code);
      129 	if P_code = 0
      130 	then if (modes & MCACS_C_ACCESS) = ""b
      131 	     then P_code = error_table_$mc_no_c_permission;
      132 
      133 	if P_code = 0
      134 	then call AUDIT (GRANT);
      135 	else call AUDIT (DENY);
      136 	return;
      137 
      138 log_in_as_daemon:
      139      entry (P_user_name, P_ring, P_source_name, P_code);
      140 
      141 	call setup (access_operations_$daemon_daemon_login);
      142 						/* returns non-locally if checking is disabled */
      143 	call hcs_$get_user_access_modes (sc_stat_$mc_acs_dir, rtrim (P_source_name) || ".mcacs", P_user_name, (P_ring),
      144 	     (""b), modes, P_code);
      145 	if P_code = 0
      146 	then if (modes & MCACS_D_ACCESS) = ""b
      147 	     then P_code = error_table_$mc_no_d_permission;
      148 
      149 	if P_code = 0
      150 	then call AUDIT (GRANT);
      151 	else call AUDIT (DENY);
      152 	return;
      153 
      154 setup:
      155      procedure (access_op);
      156 	declare access_op		 bit (36) aligned;
      157 
      158 	P_code = 0;
      159 	global_access_op = access_op;
      160 	if ^installation_parms.validate_daemon_commands
      161 	then go to EXIT_NONLOCAL;
      162 
      163 	return;
      164 
      165      end setup;
      166 
      167 EXIT_NONLOCAL:
      168 	return;
      169 
      170 AUDIT:
      171      procedure (P_grant_sw);
      172 
      173 /**** This procedure is responsible for auditing all message coordinator
      174*      access.  P_grant_sw indicates if the access check resulted in a 
      175*      GRANT of DENY. */
      176 
      177 	dcl     P_grant_sw		 bit (1) aligned parameter;
      178 
      179 	call sys_log_ (SL_LOG_SILENT, "Audit: ^[GRANTED^;DENIED^] ^a for ^a Level=^d to ^a", P_grant_sw,
      180 	     convert_access_operation_ (global_access_op), P_user_name, P_ring, P_source_name);
      181 	return;
      182 
      183      end AUDIT;
      184 
  1     1 /* BEGIN INCLUDE FILE ... as_data_.incl.pl1 ... */
  1     2 
  1     3 /* format: style4 */
  1     4 
  1     5 /* This file must be kept in sync with as_data_.alm */
  1     6 
  1     7 /****^  HISTORY COMMENTS:
  1     8*  1) change(86-09-21,Beattie), approve(86-09-22,MCR7542),
  1     9*     audit(86-10-31,Brunelle), install(86-11-12,MR12.0-1211):
  1    10*     Remove references to the 963 and 029 preaccess commands and remove support
  1    11*     for ARDS, 202_ETX, 2741 and 1050 in system interfaces.
  1    12*  2) change(86-09-25,Swenson), approve(87-07-20,MCR7737),
  1    13*     audit(87-07-20,GDixon), install(87-08-04,MR12.1-1056):
  1    14*     Add references to as_data_ entrypoints added for Login Server.
  1    15*  3) change(87-03-03,Brunelle), approve(87-07-20,MCR7697),
  1    16*     audit(87-07-20,GDixon), install(87-08-04,MR12.1-1056):
  1    17*     Added new user signal field of inacrcvd (14) to handle inactivity response
  1    18*     from user.
  1    19*                                                   END HISTORY COMMENTS */
  1    20 
  1    21 dcl  as_data_$BS char (1) aligned ext static;		/* BACKSPACE character */
  1    22 dcl  as_data_$CR char (1) aligned ext static;		/* CARRIAGE RETURN character */
  1    23 dcl  as_data_$abs_dim char (32) ext static;		/* absentee DIM */
  1    24 dcl  as_data_$acct_update_priority fixed bin ext static;	/* accounting update IPC priority */
  1    25 dcl  as_data_$acsdir char (168) ext static;		/* Access Control Segment directory */
  1    26 dcl  as_data_$ansp ptr ext static;			/* answer_table */
  1    27 dcl  as_data_$as_procid bit (36) aligned ext static;	/* Answering Service process id */
  1    28 dcl  as_data_$as_ring fixed bin (3) ext static;		/* AS operating ring */
  1    29 dcl  as_data_$as_tty char (6);			/* AS master tty channel */
  1    30 dcl  as_data_$asmtp ptr ext static;			/* AS meter table */
  1    31 dcl  as_data_$autp ptr ext static;			/* absentee_user_table */
  1    32 dcl  as_data_$buzzardp ptr ext static;			/* dpg_ list of buteo processes */
  1    33 dcl  as_data_$cdtp ptr ext static;			/* CDT */
  1    34 dcl  as_data_$default_weight fixed bin (35) ext;		/* default user process load control weight */
  1    35 dcl  as_data_$devtabp ptr ext static;			/* device_table */
  1    36 dcl  as_data_$dft_user_ring fixed bin (3) ext static;	/* default user ring */
  1    37 dcl  as_data_$dutp ptr ext static;			/* daemon_user_table */
  1    38 dcl  as_data_$g115_dim char (32) ext static;
  1    39 dcl  as_data_$lct_initialized bit (1) aligned ext static;	/* LCT allocated in ring 0 */
  1    40 dcl  as_data_$lct_size fixed bin ext static;		/* CDT tty channels + spares */
  1    41 dcl  as_data_$max_user_ring fixed bin (3) ext static;	/* maximum user ring */
  1    42 dcl  as_data_$mgtp ptr ext static;			/* master group table */
  1    43 dcl  as_data_$mrd_dim char (32) ext static;		/* daemon's message routing DIM */
  1    44 dcl  as_data_$ntty_dim char (32) ext static;		/* network connection DIM */
  1    45 dcl  as_data_$pdtdir char (168) ext static;		/* PDT directory */
  1    46 dcl  as_data_$pit_ptr ptr ext static;			/* pit_temp_ */
  1    47 dcl  as_data_$rcpdir char (168) ext static;		/* RCP directory */
  1    48 dcl  as_data_$request_priority fixed bin ext static;
  1    49 dcl  as_data_$rs_ptrs (0:9) ptr ext static;		/* rate_structures */
  1    50 dcl  as_data_$rtdtp ptr ext static;			/* RTDT */
  1    51 dcl  as_data_$sat_htp ptr ext static;			/* SAT hash table */
  1    52 dcl  as_data_$satp ptr ext static;			/* SAT */
  1    53 dcl  as_data_$suffix (0:9) char (2) unaligned ext static;
  1    54 dcl  as_data_$sysdir char (168) ext static;		/* system control directory */
  1    55 dcl  as_data_$teens_suffix (10:19) char (2) unaligned ext static;
  1    56 dcl  as_data_$terminet_tabs_string char (144) varying ext static;
  1    57 dcl  as_data_$tty_dim char (32) ext static;		/* standard interactive DIM */
  1    58 dcl  as_data_$update_priority fixed bin ext static;	/* ??? */
  1    59 dcl  as_data_$version char (8) ext static;		/* AS version */
  1    60 dcl  as_data_$whoptr ptr ext static;			/* whotab */
  1    61 
  1    62 dcl  1 as_data_$login_args aligned ext static,		/* control arguments for login */
  1    63        2 n_login_args fixed bin,
  1    64        2 pad fixed bin,
  1    65        2 login_args (55 /* as_data_$login_args.n_login_args */) char (24) unaligned;
  1    66 
  1    67 dcl  1 as_data_$signal_types ext static aligned,		/* IPC process control signals */
  1    68        2 n_signals fixed bin,
  1    69        2 pad fixed bin,
  1    70        2 signals (14 /* as_data_$signal_types.n_signals */) char (8) unaligned;
  1    71 
  1    72 dcl  1 as_data_$system_signal_types ext static aligned,	/* IPC process control signals */
  1    73        2 n_system_signals fixed bin,
  1    74        2 pad fixed bin,
  1    75        2 system_signals (10 /* as_data_$system_signal_types.n_system_signals */) char (8) unaligned;
  1    76 
  1    77 dcl  as_data_$login_words fixed bin ext static aligned,
  1    78 						/* interactive login words */
  1    79      1 as_data_login_words aligned based (addr (as_data_$login_words)),
  1    80        2 n_words fixed bin,
  1    81        2 pad fixed bin,
  1    82        2 words (0 refer (as_data_login_words.n_words)) char (16) unaligned;
  1    83 
  1    84 dcl  as_data_$debug_flag bit (1) aligned external static;
  1    85 dcl  as_data_$ls_request_server_info_ptr ptr external static;
  1    86 dcl  as_data_$ls_message_buffer_cur_lth fixed bin (18) external static;
  1    87 dcl  as_data_$ls_message_buffer_max_lth fixed bin (18) external static;
  1    88 dcl  as_data_$ls_message_buffer_ptr ptr external static;
  1    89 
  1    90 /* END INCLUDE FILE ... as_data_.incl.pl1 ... */
      185 
      186 
  2     1 /* BEGIN INCLUDE FILE ... installation_parms.incl.pl1 */
  2     2 
  2     3 /* Modified 740723 by PG to add short AIM access names */
  2     4 /* Modified Fall 1977 by T. Casey to add fatal loop and trm_ signal parameters */
  2     5 /* Modified 04/03/78 by CDT to add rcp_init_flags structure */
  2     6 /* Modified May 1978 by T. Casey to add resource timer and resource price list parameters */
  2     7 /* Modified November 1978 by T. Casey for MR7.0, to add absentee control parameters */
  2     8 /* Modified 17 September 1980 by G. Palter to add default absentee queue */
  2     9 /* Modified April 1981 by E. N. Kittlitz for chn_wakeup_error_loop, chn_wakeup_error_count */
  2    10 /* Modified June 1981 by E. N. Kittlitz for nrates/rate_structures UNCA rate_structure support.
  2    11*     Version, expand foregound_cpu_default_limit and abs_cpu_max_limit to fixed bin (35) fields.
  2    12*     nrscp & resource array moved from offset 2064 (octal) to 2400 (octal). */
  2    13 /* Modified 1984-06-19 BIM to remove obsolete fields, and add 
  2    14*		       strict_trusted_path. */
  2    15 /* Modified 1984-10-24 BIM for default_pdir_quota. */
  2    16 /* Modified 1984-12-05 BIM for require_operator_login. */
  2    17 /* Modified 1985-03-01 by E. Swenson for password flags. */
  2    18 
  2    19 
  2    20 /****^  HISTORY COMMENTS:
  2    21*  1) change(86-01-27,MSharpe), approve(87-05-25,MCR7690),
  2    22*     audit(87-03-29,GDixon), install(87-08-04,MR12.1-1056):
  2    23*     added vchn_requires_accept parameter.
  2    24*  2) change(87-02-17,GDixon), approve(87-05-25,MCR7680),
  2    25*     audit(87-06-02,Parisek), install(87-08-04,MR12.1-1056):
  2    26*     Correct formatting problems.
  2    27*                                                   END HISTORY COMMENTS */
  2    28 
  2    29 
  2    30 /* NOTE: rate_structure.incl.pl1 uses these declarations */
  2    31 
  2    32 
  2    33 dcl 1 installation_parms based (ip) aligned,		/* describes installation parameters */
  2    34     2 part_1 like installation_parms_part_1 aligned,
  2    35     2 resource (0 refer (installation_parms.nrscp)) like installation_parms_resource_array_part aligned;
  2    36 
  2    37 dcl  installation_parms_version_1 fixed bin init (1) static internal options (constant);
  2    38 dcl  installation_parms_version_2 fixed bin init (2) static internal options (constant);
  2    39 
  2    40 dcl 1 installation_parms_part_1 based aligned,		/* Used only by installation_parms and rate_structure */
  2    41     2 installation_id char (32),			/* Name printed at dialup and in who */
  2    42     2 company char (64),				/* company name */
  2    43     2 department char (64),				/* department */
  2    44     2 companyds char (120),				/* company, double spaced */
  2    45     2 departmentds char (120),			/* dpeartment double spaced */
  2    46     2 shifttab (336) bit (3) unal,			/* half-hrs from 0000 Mon, value is shift no */
  2    47     2 cpu_price (0: 7) float bin,			/* price for cpu hour, by shift */
  2    48     2 log_base_price (0: 7) float bin,			/* price for log hour, by shift */
  2    49     2 io_ops_price (0: 7) float bin,			/* price per 1000 terminal io ops */
  2    50     2 core_price (0: 7) float bin,			/* price for core page-hour, by shift */
  2    51     2 ndevices fixed bin,				/* number of devices to charge */
  2    52     2 devtab (16),					/* Maximum 16 */
  2    53       3 device_id char (8),				/* Name of device */
  2    54       3 device_price (0: 7) float bin,			/* Price by shift */
  2    55     2 inactive_time fixed bin,			/* seconds of inactivity permitted */
  2    56     2 warning_time fixed bin,				/* seconds from warning to logout */
  2    57     2 login_time fixed bin,				/* seconds in which to complete login */
  2    58     2 acct_update fixed bin,				/* seconds between acct update */
  2    59     2 login_tries fixed bin,				/* number of login tries allowed */
  2    60     2 disk_price float bin,				/* disk rate, in $/page-sec */
  2    61     2 registration_price float bin,			/* fee per month per user */
  2    62     2 dolsign char (1),				/* "dollar sign" */
  2    63     2 abs_cpu_price (4) float bin,			/* price for absentee cpu by queue */
  2    64     2 abs_mem_price (4) float bin,			/* Absentee memory charge */
  2    65     2 iod_rec_price (4) float bin,			/* price for io daemon lines, per K, by queue */
  2    66     2 abs_timax (4) fixed bin (35),			/* Absentee TIMAX parameter */
  2    67     2 abs_cpu_default_limit (4) fixed bin (35),		/* default absentee cpu limit in seconds (changed from usec.) */
  2    68     2 syserr_log_copy_threshold fixed bin (9),		/* Threshold (in PAGES) at which the
  2    69*						   Initializer will copy the syserr_log */
  2    70     2 default_pdir_seg_quota fixed bin (17) unaligned,	/* if system and project say 0 */
  2    71     2 default_pdir_dir_quota fixed bin (17) unaligned,       /* Always used */
  2    72     2 fatal_error_loop_count fixed bin (17) unaligned,
  2    73     2 fatal_error_loop_seconds fixed bin (17) unaligned,
  2    74     2 term_real_time_seconds fixed bin (17) unaligned,
  2    75     2 term_cpu_time_seconds fixed bin (17) unaligned,
  2    76     2 rcp_init_flags like rcp_init_flags aligned,		/* one word long */
  2    77     2 rsc_timer_seconds fixed bin (17) unaligned,		/* time interval at which to check for resource availability */
  2    78     2 pad_old_fg_cpu_default_limit bit (18) unaligned,
  2    79     2 foreground_queue_position fixed bin (17) unal,	/* queue that foreground queue comes after */
  2    80     2 idle_time_constant_seconds fixed bin (17) unal,	/* how far back to maintain moving average of load */
  2    81     2 sus_cpu_time_seconds fixed bin (17) unal,		/* allow suspended process this much cpu time */
  2    82     2 sus_real_time_seconds fixed bin (17) unal,		/* and this much real time, before bumping it */
  2    83     2 foreground_cpu_default_limit fixed bin (35),	/* default cpu time limit (sec) for foreground absentee jobs */
  2    84     2 access_authorization_ceiling bit (72),		/* "System high" access authorization. */
  2    85     2 level_names (0:7) char (32),			/* Names for security levels. */
  2    86     2 category_names (18) char (32),			/* Names for security categories. */
  2    87     2 short_level_names (0:7) char (8),			/* Abbreviated level names. */
  2    88     2 short_category_names (18) char (8),		/* Abbreviated category names. */
  2    89     2 ncon fixed bin,				/* Number of config elements. */
  2    90     2 cona (51),					/* each entry is 5 words long */
  2    91       3 cpu fixed bin (5) unal,			/* Number of CPU's */
  2    92       3 shift fixed bin (5) unal,			/* Shift number */
  2    93       3 x1 fixed bin (23) unal,
  2    94       3 kmem fixed bin (17) unal,			/* Memory size */
  2    95       3 kbulk fixed bin (17) unal,			/* Bulk store size */
  2    96       3 x2 fixed bin (17) unal,
  2    97       3 maxa fixed bin (11) unal,			/* Max abs users */
  2    98       3 maxq fixed bin (5) unal,			/* Max abs q */
  2    99       3 maxu_base fixed bin (17) unal,
  2   100       3 response_high fixed bin (17) unal,
  2   101       3 response_low fixed bin (17) unal,
  2   102       3 x3 fixed bin (17) unal,
  2   103 
  2   104 /* Absentee control parameters. New for MR7.0 */
  2   105 
  2   106     2 max_abs (0:7) fixed bin (17) unal,		/* per-shift upper limit on abs_maxu */
  2   107     2 min_abs (0:7) fixed bin (17) unal,		/* per-shift lower limit on abs_maxu */
  2   108     2 pct_abs (0:7) fixed bin (17) unal,		/* abs_maxu is this pct (per-shift) of idle units */
  2   109 
  2   110     2 max_qres (0:7, 4) fixed bin (17) unal,		/* per-shift-and-queue upper limit on reserved slots */
  2   111     2 min_qres (0:7, 4) fixed bin (17) unal,		/* per-shift-and-queue lower limit on reserved slots */
  2   112     2 pct_qres (0:7, 4) fixed bin (17) unal,		/* reserved slots are these pcts of abs_maxu */
  2   113 
  2   114     2 abs_cpu_max_limit (0:7, 4) fixed bin (35),		/* per-shift-and-queue upper limit (sec) on jobs' cpu times */
  2   115 
  2   116     2 default_absentee_queue fixed binary (17) unaligned,	/* default absentee queue for ear, etc. */
  2   117 
  2   118     2 chn_wakeup_error_loop_count fixed bin (17) unaligned, /* maximum number of channel wakeups in following interval */
  2   119     2 chn_wakeup_error_loop_seconds fixed bin (17) unaligned, /* works like fatal_error_loop_count/seconds */
  2   120     2 rate_structure_number fixed bin (17) unaligned,	/* rate_structure number of this RS */
  2   121     2 version fixed bin (35),				/* must be 2 */
  2   122     2 nrates fixed bin,				/* number of rate structures */
  2   123     2 rate_structures (0:9) char (32),			/* names of rate_structures */
  2   124     2 trusted_path_login bit (1) aligned,		/* forbid logout -hold and new_proc -auth */
  2   125     2 require_operator_login bit (1) aligned,		/* just what it says */
  2   126     2 operator_inactive_time fixed bin,			/* seconds between commands --> not logged in. */
  2   127     2 validate_daemon_commands bit (1) aligned,		/* force existence and adequate access to 
  2   128*						   mcacs segments for operators */
  2   129     2 password_min_length fixed bin,			/* minimum length of passwords */
  2   130     2 password_gpw_length fixed bin,			/* length of generated passwords */
  2   131     2 password_change_interval fixed bin,		/* number of days until must change */
  2   132     2 password_expiration_interval fixed bin,		/* number of days that a password may remain unused */
  2   133     2 vchn_requires_accept bit (1) aligned,		/* "login personid -op -vchn foo" must be
  2   134*						   "accepted" by operator if personid is not 
  2   135*						   signed on system console */
  2   136     2 end_pad (219) bit (36) aligned,			/* leave plenty of pad before the variable length price list */
  2   137     2 nrscp fixed bin;				/* length of resource price array; must have offset 2400 (octal),
  2   138*						   or someone miscounted when using part of pad2 */
  2   139 
  2   140 
  2   141 /* Entries in the following array may be accessed via system_info_$resource_price.
  2   142*   This array should not be accessed directly, since its format will change in subsequent releases of Multics. */
  2   143 
  2   144 dcl 1 installation_parms_resource_array_part (0 refer (installation_parms.nrscp)) based,
  2   145       2 name char (32),
  2   146       2 price float bin;
  2   147 
  3     1 /* BEGIN INCLUDE FILE ... rcp_init_flags.incl.pl1 */
  3     2 
  3     3 /* Created on 04/24/78 by Michael R. Jordan */
  3     4 /* Modified 04/10/79 by C. D. Tavares */
  3     5 
  3     6 dcl  rifp ptr;
  3     7 
  3     8 dcl 1 rcp_init_flags based (rifp),
  3     9     2 unload_on_detach bit (1) unaligned,		/* ON => tape volumes are unloaded after detaching */
  3    10     2 pad1 bit (2) unaligned,				/* obsolete */
  3    11     2 resource_mgmt_enabled bit (1) unaligned,		/* ON => resource management has been enabled */
  3    12     2 auto_registration bit (1) unaligned,		/* ON => auto registration allowed */
  3    13     2 pad2 bit (2) unaligned,				/* future expansion, possibly of authentication_level */
  3    14     2 authentication_level fixed bin (2) unaligned unsigned; /* see below for values */
  3    15 
  3    16 dcl (No_authentication initial (0),
  3    17      Nominal_authentication initial (1),
  3    18      Automatic_authentication initial (2),
  3    19      Manual_authentication initial (3)) fixed bin internal static options (constant);
  3    20 
  3    21 dcl  authentication_level_names (0:3) char (12) internal static options (constant) initial
  3    22     ("none", "nominal", "automatic", "manual");
  3    23 
  3    24 /* END INCLUDE FILE ... rcp_init_flags.incl.pl1 */
  2   148 
  2   149 
  2   150 /* END INCLUDE FILE ... installation_parms.incl.pl1 */
      187 
      188 	declare ip		 pointer defined (as_data_$rs_ptrs (0));
      189 
  4     1 /* Begin include file mcacs_access_modes.incl.pl1 BIM 1984-12-26 */
  4     2 
  4     3 declare (
  4     4          MCACS_C_ACCESS     init ("1"b),		/* Control (login, logout, new_proc) */
  4     5          MCACS_D_ACCESS     init ("01"b),		/* Daemon (use this as login source) */
  4     6          MCACS_Q_ACCESS     init ("001"b),		/* Quit */
  4     7          MCACS_R_ACCESS     init ("0001"b)		/* Reply */
  4     8          ) bit (36) aligned internal static options (constant);
  4     9 
  4    10 /* End include file mcacs_access_modes.incl.pl1 */
      190 
      191 
  5     1 /*  BEGIN:   sc_stat_.incl.pl1			  *  *  *  *  *  */
  5     2 
  5     3 
  5     4 /****^  HISTORY COMMENTS:
  5     5*  1) change(87-02-04,GDixon), approve(87-05-25,MCR7690),
  5     6*     audit(87-06-02,Parisek), install(87-08-04,MR12.1-1056):
  5     7*     Add sc_stat_$vchn_requires_accept in support of DSA virtual channels.
  5     8*  2) change(87-02-04,GDixon), approve(87-05-25,MCR7680),
  5     9*     audit(87-06-02,Parisek), install(87-08-04,MR12.1-1056):
  5    10*     Reorganized by type of data to improve readability.
  5    11*                                                   END HISTORY COMMENTS */
  5    12 
  5    13 
  5    14 			      /* ACCESS NAMES		       */
  5    15 dcl (
  5    16  sc_stat_$exec_access_name,	      /* check MC access in an exec request    */
  5    17  sc_stat_$unidentified_access_name  /* check access if no one is logged in.  */
  5    18     ) char(32) ext static;
  5    19 
  5    20 		        /* PATHNAMES			       */
  5    21 dcl (
  5    22  sc_stat_$info_dir,	        /* admin info segs directory		       */
  5    23  sc_stat_$log_dir,	        /* as log segs directory		       */
  5    24  sc_stat_$mc_acs_dir,       /* message coordinator ACS segments (.mcacs) dir */
  5    25  sc_stat_$sysdir	        /* system control directory		       */
  5    26     ) char(168) ext static;
  5    27 
  5    28 		        /* OTHER CHAR STRINGS			       */
  5    29 dcl (
  5    30  sc_stat_$master_channel    /* Master TTY channel.		       */
  5    31     )  char(6) aligned ext static;
  5    32 
  5    33 			       /* LABELS			       */
  5    34 dcl (
  5    35  sc_stat_$admin_listener_exit_label, /* GO here to exit admin mode.  Set to  */
  5    36 			       /*    ssu_$null_label unless 	       */
  5    37 			       /*	   admin_listener is active.	       */
  5    38  sc_stat_$master_abort_label,	       /* GO here after fault that is not      */
  5    39 			       /*    attributable to a particular      */
  5    40 			       /*	   command.		       */
  5    41  sc_stat_$system_shutdown_label      /* GO here to shut down system	       */
  5    42     ) label variable ext static;
  5    43 
  5    44 			 /* POINTERS TO			       */
  5    45 dcl (
  5    46  sc_stat_$admin_log_iocb,	 /* IOCB for admin log		       */
  5    47  sc_stat_$admin_log_write_ptr, /* DATA for log_write_ calls on the admin log */
  5    48  sc_stat_$admin_sci_ptr,	 /* DATA ssu_ for terminal currently executing */
  5    49  sc_stat_$as_log_write_ptr,	 /* DATA for log_write_ calls on as log, used  */
  5    50 			 /*      by sys_log_.		       */
  5    51  sc_stat_$initzer_ttyp,	 /* ENT  mc_ate for initializer terminal       */
  5    52  sc_stat_$master_iocb,	 /* IOCB for "master_i/o"		       */
  5    53  sc_stat_$master_sci_ptr,	 /* DATA ssu_ (permanent) for system control   */
  5    54  sc_stat_$mc_ansp,		 /* HEAD of mc_anstbl		       */
  5    55  sc_stat_$mc_iocb,		 /* IOCB ptr for "mc_i/o"		       */
  5    56  sc_stat_$sv1_iocb,		 /* IOCB ptr for "severity1"		       */
  5    57  sc_stat_$sv2_iocb,		 /* IOCB ptr for "severity2"		       */
  5    58  sc_stat_$sv3_iocb		 /* IOCB ptr for "severity3"		       */
  5    59     ) ptr ext static;
  5    60 
  5    61 			   /* SWITCHES			       */
  5    62 dcl (
  5    63  sc_stat_$Go,		   /* TRUE after answering service is listening*/
  5    64  sc_stat_$Go_typed,		   /* TRUE immediately after 'go' is typed     */
  5    65  sc_stat_$Multics,		   /* TRUE after answering service started     */
  5    66  sc_stat_$Multics_typed,	   /* TRUE immediately after 'mult' is typed   */
  5    67  sc_stat_$Star_typed,	   /* TRUE if 'mult' and 'go' came from 'star' */
  5    68  sc_stat_$admin_listener_switch, /* TRUE if in the admin listener	       */
  5    69  sc_stat_$did_part1,	   /* TRUE if part 1 of system startup ec done */
  5    70  sc_stat_$did_part2,	   /* TRUE if part 2 of system startup ec done */
  5    71  sc_stat_$did_part3,	   /* TRUE if part 3 of system startup ec done */
  5    72  sc_stat_$mc_is_on,		   /* TRUE if message coordinator running      */
  5    73  sc_stat_$no_operator_login,	   /* TRUE if operator login not required, or  */
  5    74 			   /*	 if PNT not yet available.	       */
  5    75  sc_stat_$shutdown_typed,	   /* TRUE if 'shutdown' command in progress.  */
  5    76  sc_stat_$test_mode,	   /* TRUE if in test environment	       */
  5    77  sc_stat_$vchn_requires_accept   /* TRUE if vchn may only be used if accepted*/
  5    78 			   /*      by operator signed on system console*/
  5    79     ) bit(1) aligned ext static;
  5    80 
  5    81 
  5    82 /*  END OF:  sc_stat_.incl.pl1			  *  *  *  *  *  */
      192 
      193 
  6     1 /* BEGIN INCLUDE FILE sys_log_constants.incl.pl1 ... 82-09-24 E. N. Kittlitz */
  6     2 
  6     3 
  6     4 /****^  HISTORY COMMENTS:
  6     5*  1) change(87-04-22,GDixon), approve(87-06-10,MCR7708),
  6     6*     audit(87-06-02,Parisek), install(87-08-04,MR12.1-1056):
  6     7*     Added sl_info structure and associated named constants for use in calling
  6     8*     sys_log_$general.
  6     9*                                                   END HISTORY COMMENTS */
  6    10 
  6    11 
  6    12 /* format: style4 */
  6    13 
  6    14 dcl  (
  6    15      SL_TYPE_CRASH init (-3),				/* type message with banner & kill system */
  6    16      SL_TYPE_BEEP init (-2),				/* type message with banner */
  6    17      SL_TYPE init (-1),				/* type message */
  6    18      SL_LOG_SILENT init (0),				/* log message */
  6    19      SL_LOG init (1),				/* log & type message */
  6    20      SL_LOG_BEEP init (2),				/* log & type message with banner */
  6    21      SL_LOG_CRASH init (3)				/* log & type message with banner & kill system */
  6    22      ) fixed bin internal static options (constant);
  6    23 
  6    24 dcl  1 sl_info aligned automatic,
  6    25        2 version char(8),			/* structure version       */
  6    26        2 arg_list_ptr ptr,			/* arg_list with values    */
  6    27        2 loc,
  6    28          3 (mode, severity, code, caller, data, class, ioa_msg) fixed bin,
  6    29            /* These flags control where the corresponding data item is found.*/
  6    30 	 /*  -1: data appears in the corresponding structure element below */
  6    31 	 /*   0: data is not present anywhere			       */
  6    32 	 /*  +N: data is Nth item in argument list pointed to by 	       */
  6    33 	 /*      sl_info.arg_list_ptr.  Upon return, data copied into      */
  6    34 	 /*      corresponding structure element.		       */
  6    35 	 /*  if data = +N:					       */
  6    36 	 /*      argN is data_ptr, argN+1 is data_len		       */
  6    37 	 /*  if ioa_msg = +N:				       */
  6    38 	 /*      argN+1, ... argLAST are arguments substituted into the    */
  6    39 	 /*      ioa_msg control string.  The formatted msg is returned.   */
  6    40        2 flags,
  6    41          3 ioa_msg_is_error_code bit(1) unal,	/* ioa_ctl is error code.  */
  6    42          3 flags_pad bit(35) unal,
  6    43        2 mode fixed bin,			/* as-mode, command-mode   */
  6    44        2 severity fixed bin,			/* error severity	       */
  6    45        2 code fixed bin(35),			/* error table code        */
  6    46        2 caller char(65) varying,		/* caller refname$entryname*/
  6    47        2 data,				/* binary data ptr/length  */
  6    48          3 data_ptr ptr,
  6    49          3 data_lth fixed bin(21),
  6    50        2 class char(10) varying,		/* binary data class       */
  6    51        2 ioa_msg char(500) varying;		/* formatted message text  */
  6    52 
  6    53 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  6    54 /*							       */
  6    55 /* If data values (eg, sl_info.caller) are passed in the argument list,      */
  6    56 /* their data types should be as shown in the structure above, except that   */
  6    57 /* character strings should be char(*) nonvarying.		       */
  6    58 /*							       */
  6    59 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  6    60 
  6    61 /* value for sl_info.version */
  6    62 dcl  SL_INFO_version_1 char (8) int static options(constant) init("sl_info1");
  6    63 
  6    64 /* values for sl_info.mode */
  6    65 dcl (SL_INFO_as_mode init(1),
  6    66      SL_INFO_command_mode init(2)) fixed bin int static options(constant);
  6    67 
  6    68 /* values for sl_info.loc.(severity code caller data class ioa_ctl arg) */
  6    69 dcl (SL_INFO_arg_given_in_structure init(-1),
  6    70      SL_INFO_arg_not_given init(0)) fixed bin int static options(constant);
  6    71 
  6    72 
  6    73 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  6    74 /*							       */
  6    75 /* The following static structures are commonly used in the Login Server     */
  6    76 /* user control software.					       */
  6    77 /*							       */
  6    78 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  6    79 
  6    80 /* Syntax: call Abort (severity, code, ioa_ctl, args);		       */
  6    81 
  6    82 dcl  1 sl_info_sev_code_msg		aligned int static options(constant),
  6    83        2 version char(8)		init ("sl_info1"),
  6    84        2 arg_list_ptr ptr		init (null),
  6    85        2 loc,
  6    86          3 (mode			init (-1),
  6    87 	  severity  		init ( 1),
  6    88 	  code 			init ( 2),
  6    89 	  caller 			init (-1),
  6    90 	  data 			init ( 0),
  6    91 	  class 			init ( 0),
  6    92 	  ioa_msg			init ( 3)) fixed bin,
  6    93        2 flags,
  6    94          3 ioa_msg_is_error_code bit(1) unal init ("0"b),
  6    95          3 flags_pad bit(35) unal	init ("0"b),
  6    96        2 mode fixed bin		init ( 1),
  6    97        2 severity fixed bin		init ( 0),
  6    98        2 code fixed bin(35)		init ( 0),
  6    99        2 caller char(65) varying	init (""),
  6   100        2 data,
  6   101          3 data_ptr ptr		init (null),
  6   102          3 data_lth fixed bin(21)	init ( 0),
  6   103        2 class char(10) varying	init (""),
  6   104        2 ioa_msg char(500) varying	init ("");
  6   105 
  6   106 /* Syntax: call Abort (severity, ioa_ctl, args);			       */
  6   107 
  6   108 dcl  1 sl_info_sev_msg		aligned int static options(constant),
  6   109        2 version char(8)		init ("sl_info1"),
  6   110        2 arg_list_ptr ptr		init (null),
  6   111        2 loc,
  6   112          3 (mode			init (-1),
  6   113 	  severity  		init ( 1),
  6   114 	  code 			init ( 0),
  6   115 	  caller 			init (-1),
  6   116 	  data 			init ( 0),
  6   117 	  class 			init ( 0),
  6   118 	  ioa_msg			init ( 2)) fixed bin,
  6   119        2 flags,
  6   120          3 ioa_msg_is_error_code bit(1) unal init ("0"b),
  6   121          3 flags_pad bit(35) unal	init ("0"b),
  6   122        2 mode fixed bin		init ( 1),
  6   123        2 severity fixed bin		init ( 0),
  6   124        2 code fixed bin(35)		init ( 0),
  6   125        2 caller char(65) varying	init (""),
  6   126        2 data,
  6   127          3 data_ptr ptr		init (null),
  6   128          3 data_lth fixed bin(21)	init ( 0),
  6   129        2 class char(10) varying	init (""),
  6   130        2 ioa_msg char(500) varying	init ("");
  6   131 
  6   132 /* Syntax: call Abort (severity, ioa_ctl_as_error_code, args);	       */
  6   133 
  6   134 dcl  1 sl_info_sev_coded_msg		aligned int static options(constant),
  6   135        2 version char(8)		init ("sl_info1"),
  6   136        2 arg_list_ptr ptr		init (null),
  6   137        2 loc,
  6   138          3 (mode			init (-1),
  6   139 	  severity  		init ( 1),
  6   140 	  code 			init ( 0),
  6   141 	  caller 			init (-1),
  6   142 	  data 			init ( 0),
  6   143 	  class 			init ( 0),
  6   144 	  ioa_msg			init ( 2)) fixed bin,
  6   145        2 flags,
  6   146          3 ioa_msg_is_error_code bit(1) unal init ("1"b),
  6   147          3 flags_pad bit(35) unal	init ("0"b),
  6   148        2 mode fixed bin		init ( 1),
  6   149        2 severity fixed bin		init ( 0),
  6   150        2 code fixed bin(35)		init ( 0),
  6   151        2 caller char(65) varying	init (""),
  6   152        2 data,
  6   153          3 data_ptr ptr		init (null),
  6   154          3 data_lth fixed bin(21)	init ( 0),
  6   155        2 class char(10) varying	init (""),
  6   156        2 ioa_msg char(500) varying	init ("");
  6   157 
  6   158 
  6   159 /* Syntax: call Abort (severity, code, error_return_label, ioa_ctl, args);   */
  6   160 
  6   161 dcl  1 sl_info_sev_code_label_msg	aligned int static options(constant),
  6   162        2 version char(8)		init ("sl_info1"),
  6   163        2 arg_list_ptr ptr		init (null),
  6   164        2 loc,
  6   165          3 (mode			init (-1),
  6   166 	  severity  		init ( 1),
  6   167 	  code 			init ( 2),
  6   168 	  caller 			init (-1),
  6   169 	  data 			init ( 0),
  6   170 	  class 			init ( 0),
  6   171 	  ioa_msg			init ( 4)) fixed bin,
  6   172        2 flags,
  6   173          3 ioa_msg_is_error_code bit(1) unal init ("0"b),
  6   174          3 flags_pad bit(35) unal	init ("0"b),
  6   175        2 mode fixed bin		init ( 1),
  6   176        2 severity fixed bin		init ( 0),
  6   177        2 code fixed bin(35)		init ( 0),
  6   178        2 caller char(65) varying	init (""),
  6   179        2 data,
  6   180          3 data_ptr ptr		init (null),
  6   181          3 data_lth fixed bin(21)	init ( 0),
  6   182        2 class char(10) varying	init (""),
  6   183        2 ioa_msg char(500) varying	init ("");
  6   184 
  6   185 /* Syntax:  call Log_error (code, ioa_ctl, args);			       */
  6   186 
  6   187 dcl  1 sl_info_code_msg		aligned int static options(constant),
  6   188        2 version char(8)		init ("sl_info1"),
  6   189        2 arg_list_ptr ptr		init (null),
  6   190        2 loc,
  6   191          3 (mode			init (-1),
  6   192 	  severity  		init (-1),
  6   193 	  code 			init ( 1),
  6   194 	  caller 			init (-1),
  6   195 	  data 			init ( 0),
  6   196 	  class 			init ( 0),
  6   197 	  ioa_msg			init ( 2)) fixed bin,
  6   198        2 flags,
  6   199          3 ioa_msg_is_error_code bit(1) unal init ("0"b),
  6   200          3 flags_pad bit(35) unal	init ("0"b),
  6   201        2 mode fixed bin		init ( 1),
  6   202        2 severity fixed bin		init ( 0),
  6   203        2 code fixed bin(35)		init ( 0),
  6   204        2 caller char(65) varying	init (""),
  6   205        2 data,
  6   206          3 data_ptr ptr		init (null),
  6   207          3 data_lth fixed bin(21)	init ( 0),
  6   208        2 class char(10) varying	init (""),
  6   209        2 ioa_msg char(500) varying	init ("");
  6   210 
  6   211 
  6   212 /* Syntax:  call Trace (ioa_ctl, args);				       */
  6   213 
  6   214 dcl  1 sl_info_msg			aligned int static options(constant),
  6   215        2 version char(8)		init ("sl_info1"),
  6   216        2 arg_list_ptr ptr		init (null),
  6   217        2 loc,
  6   218          3 (mode			init (-1),
  6   219 	  severity  		init (-1),
  6   220 	  code 			init ( 0),
  6   221 	  caller 			init (-1),
  6   222 	  data 			init ( 0),
  6   223 	  class 			init ( 0),
  6   224 	  ioa_msg			init ( 1)) fixed bin,
  6   225        2 flags,
  6   226          3 ioa_msg_is_error_code bit(1) unal init ("0"b),
  6   227          3 flags_pad bit(35) unal	init ("0"b),
  6   228        2 mode fixed bin		init ( 1),
  6   229        2 severity fixed bin		init ( 0),
  6   230        2 code fixed bin(35)		init ( 0),
  6   231        2 caller char(65) varying	init (""),
  6   232        2 data,
  6   233          3 data_ptr ptr		init (null),
  6   234          3 data_lth fixed bin(21)	init ( 0),
  6   235        2 class char(10) varying	init (""),
  6   236        2 ioa_msg char(500) varying	init ("");
  6   237 
  6   238 /* END INCLUDE FILE sys_log_constants.incl.pl1 */
      194 
      195      end mc_check_acs_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    08/04/87  1221.8  mc_check_acs_.pl1                 >special_ldd>install>MR12.1-1054>mc_check_acs_.pl1
185          1    08/04/87  1154.5  as_data_.incl.pl1                 >spec>install>1056>as_data_.incl.pl1
187          2    08/04/87  1140.0  installation_parms.incl.pl1       >spec>install>1056>installation_parms.incl.pl1
2-148        3    11/21/79  1458.3  rcp_init_flags.incl.pl1           >ldd>include>rcp_init_flags.incl.pl1
190          4    02/12/85  1429.4  mcacs_access_modes.incl.pl1       >ldd>include>mcacs_access_modes.incl.pl1
192          5    08/04/87  1139.2  sc_stat_.incl.pl1                 >spec>install>1056>sc_stat_.incl.pl1
194          6    08/04/87  1139.0  sys_log_constants.incl.pl1        >spec>install>1056>sys_log_constants.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
DENY                                   constant        bit(1)                   initial dcl 55 set ref 90* 106* 135* 151*
GRANT                           000000 constant        bit(1)                   initial dcl 55 set ref 88* 104* 133* 149*
MCACS_C_ACCESS                         constant        bit(36)                  initial dcl 4-3 ref 129
MCACS_D_ACCESS                         constant        bit(36)                  initial dcl 4-3 ref 145
MCACS_Q_ACCESS                         constant        bit(36)                  initial dcl 4-3 ref 100
MCACS_R_ACCESS                         constant        bit(36)                  initial dcl 4-3 ref 84
P_code                                 parameter       fixed bin(35,0)          dcl 40 set ref 77 82* 84 84* 88 93 98* 100 100* 104
                                                                                  109 115 121 126* 129 129* 133 138 143* 145 145*
                                                                                  149 158*
P_grant_sw                             parameter       bit(1)                   dcl 177 set ref 170 179*
P_ring                                 parameter       fixed bin(3,0)           dcl 41 set ref 77 82 93 98 109 115 121 126 138 143
                                                                                  179*
P_source_name                          parameter       char                     unaligned dcl 38 set ref 77 82 93 98 109 115 121 126
                                                                                  138 143 179*
P_user_name                            parameter       char                     unaligned dcl 39 set ref 77 82* 93 98* 109 115 121
                                                                                  126* 138 143* 179*
SL_LOG_SILENT                   000005 constant        fixed bin(17,0)          initial dcl 6-14 set ref 179*
access_op                              parameter       bit(36)                  dcl 156 ref 154 159
access_operations_$daemon_daemon_login
                                000016 external static bit(36)                  dcl 60 set ref 141*
access_operations_$daemon_login 000022 external static bit(36)                  dcl 60 set ref 112*
access_operations_$daemon_logout
                                000024 external static bit(36)                  dcl 60 set ref 118*
access_operations_$daemon_quit  000026 external static bit(36)                  dcl 60 set ref 96* 124*
access_operations_$daemon_reply 000020 external static bit(36)                  dcl 60 set ref 80*
as_data_$rs_ptrs                000040 external static pointer                  array dcl 1-49 ref 160 160
convert_access_operation_       000010 constant        entry                    external dcl 48 ref 179 179
error_table_$mc_no_c_permission 000030 external static fixed bin(35,0)          dcl 68 ref 129
error_table_$mc_no_d_permission 000032 external static fixed bin(35,0)          dcl 68 ref 145
error_table_$mc_no_q_permission 000034 external static fixed bin(35,0)          dcl 68 ref 100
error_table_$mc_no_r_permission 000036 external static fixed bin(35,0)          dcl 68 ref 84
global_access_op                000100 automatic       bit(36)                  dcl 43 set ref 159* 179* 179*
hcs_$get_user_access_modes      000012 constant        entry                    external dcl 50 ref 82 98 126 143
installation_parms                     based           structure                level 1 dcl 2-33
installation_parms_part_1              based           structure                level 1 dcl 2-40
installation_parms_resource_array_part based           structure                array level 1 unaligned dcl 2-144
ip                                     defined         pointer                  dcl 188 ref 160
modes                           000101 automatic       bit(36)                  dcl 44 set ref 82* 84 98* 100 126* 129 143* 145
part_1                                 based           structure                level 2 dcl 2-33
rcp_init_flags                         based           structure                level 1 packed unaligned dcl 3-8
rtrim                                                  builtin function         dcl 46 ref 82 98 126 143
sc_stat_$mc_acs_dir             000042 external static char(168)                unaligned dcl 5-21 set ref 82* 98* 126* 143*
sys_log_                        000014 constant        entry                    external dcl 53 ref 179
validate_daemon_commands
                       2037            based           bit(1)                   level 3 dcl 2-33 ref 160

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
Automatic_authentication               internal static fixed bin(17,0)          initial dcl 3-16
Manual_authentication                  internal static fixed bin(17,0)          initial dcl 3-16
No_authentication                      internal static fixed bin(17,0)          initial dcl 3-16
Nominal_authentication                 internal static fixed bin(17,0)          initial dcl 3-16
SL_INFO_arg_given_in_structure         internal static fixed bin(17,0)          initial dcl 6-69
SL_INFO_arg_not_given                  internal static fixed bin(17,0)          initial dcl 6-69
SL_INFO_as_mode                        internal static fixed bin(17,0)          initial dcl 6-65
SL_INFO_command_mode                   internal static fixed bin(17,0)          initial dcl 6-65
SL_INFO_version_1                      internal static char(8)                  initial unaligned dcl 6-62
SL_LOG                                 internal static fixed bin(17,0)          initial dcl 6-14
SL_LOG_BEEP                            internal static fixed bin(17,0)          initial dcl 6-14
SL_LOG_CRASH                           internal static fixed bin(17,0)          initial dcl 6-14
SL_TYPE                                internal static fixed bin(17,0)          initial dcl 6-14
SL_TYPE_BEEP                           internal static fixed bin(17,0)          initial dcl 6-14
SL_TYPE_CRASH                          internal static fixed bin(17,0)          initial dcl 6-14
as_data_$BS                            external static char(1)                  dcl 1-21
as_data_$CR                            external static char(1)                  dcl 1-22
as_data_$abs_dim                       external static char(32)                 unaligned dcl 1-23
as_data_$acct_update_priority          external static fixed bin(17,0)          dcl 1-24
as_data_$acsdir                        external static char(168)                unaligned dcl 1-25
as_data_$ansp                          external static pointer                  dcl 1-26
as_data_$as_procid                     external static bit(36)                  dcl 1-27
as_data_$as_ring                       external static fixed bin(3,0)           dcl 1-28
as_data_$as_tty                        automatic       char(6)                  unaligned dcl 1-29
as_data_$asmtp                         external static pointer                  dcl 1-30
as_data_$autp                          external static pointer                  dcl 1-31
as_data_$buzzardp                      external static pointer                  dcl 1-32
as_data_$cdtp                          external static pointer                  dcl 1-33
as_data_$debug_flag                    external static bit(1)                   dcl 1-84
as_data_$default_weight                external static fixed bin(35,0)          dcl 1-34
as_data_$devtabp                       external static pointer                  dcl 1-35
as_data_$dft_user_ring                 external static fixed bin(3,0)           dcl 1-36
as_data_$dutp                          external static pointer                  dcl 1-37
as_data_$g115_dim                      external static char(32)                 unaligned dcl 1-38
as_data_$lct_initialized               external static bit(1)                   dcl 1-39
as_data_$lct_size                      external static fixed bin(17,0)          dcl 1-40
as_data_$login_args                    external static structure                level 1 dcl 1-62
as_data_$login_words                   external static fixed bin(17,0)          dcl 1-77
as_data_$ls_message_buffer_cur_lth     external static fixed bin(18,0)          dcl 1-86
as_data_$ls_message_buffer_max_lth     external static fixed bin(18,0)          dcl 1-87
as_data_$ls_message_buffer_ptr         external static pointer                  dcl 1-88
as_data_$ls_request_server_info_ptr    external static pointer                  dcl 1-85
as_data_$max_user_ring                 external static fixed bin(3,0)           dcl 1-41
as_data_$mgtp                          external static pointer                  dcl 1-42
as_data_$mrd_dim                       external static char(32)                 unaligned dcl 1-43
as_data_$ntty_dim                      external static char(32)                 unaligned dcl 1-44
as_data_$pdtdir                        external static char(168)                unaligned dcl 1-45
as_data_$pit_ptr                       external static pointer                  dcl 1-46
as_data_$rcpdir                        external static char(168)                unaligned dcl 1-47
as_data_$request_priority              external static fixed bin(17,0)          dcl 1-48
as_data_$rtdtp                         external static pointer                  dcl 1-50
as_data_$sat_htp                       external static pointer                  dcl 1-51
as_data_$satp                          external static pointer                  dcl 1-52
as_data_$signal_types                  external static structure                level 1 dcl 1-67
as_data_$suffix                        external static char(2)                  array unaligned dcl 1-53
as_data_$sysdir                        external static char(168)                unaligned dcl 1-54
as_data_$system_signal_types           external static structure                level 1 dcl 1-72
as_data_$teens_suffix                  external static char(2)                  array unaligned dcl 1-55
as_data_$terminet_tabs_string          external static varying char(144)        dcl 1-56
as_data_$tty_dim                       external static char(32)                 unaligned dcl 1-57
as_data_$update_priority               external static fixed bin(17,0)          dcl 1-58
as_data_$version                       external static char(8)                  unaligned dcl 1-59
as_data_$whoptr                        external static pointer                  dcl 1-60
as_data_login_words                    based           structure                level 1 dcl 1-77
authentication_level_names             internal static char(12)                 initial array unaligned dcl 3-21
installation_parms_version_1           internal static fixed bin(17,0)          initial dcl 2-37
installation_parms_version_2           internal static fixed bin(17,0)          initial dcl 2-38
rifp                                   automatic       pointer                  dcl 3-6
sc_stat_$Go                            external static bit(1)                   dcl 5-62
sc_stat_$Go_typed                      external static bit(1)                   dcl 5-62
sc_stat_$Multics                       external static bit(1)                   dcl 5-62
sc_stat_$Multics_typed                 external static bit(1)                   dcl 5-62
sc_stat_$Star_typed                    external static bit(1)                   dcl 5-62
sc_stat_$admin_listener_exit_label     external static label variable           dcl 5-34
sc_stat_$admin_listener_switch         external static bit(1)                   dcl 5-62
sc_stat_$admin_log_iocb                external static pointer                  dcl 5-45
sc_stat_$admin_log_write_ptr           external static pointer                  dcl 5-45
sc_stat_$admin_sci_ptr                 external static pointer                  dcl 5-45
sc_stat_$as_log_write_ptr              external static pointer                  dcl 5-45
sc_stat_$did_part1                     external static bit(1)                   dcl 5-62
sc_stat_$did_part2                     external static bit(1)                   dcl 5-62
sc_stat_$did_part3                     external static bit(1)                   dcl 5-62
sc_stat_$exec_access_name              external static char(32)                 unaligned dcl 5-15
sc_stat_$info_dir                      external static char(168)                unaligned dcl 5-21
sc_stat_$initzer_ttyp                  external static pointer                  dcl 5-45
sc_stat_$log_dir                       external static char(168)                unaligned dcl 5-21
sc_stat_$master_abort_label            external static label variable           dcl 5-34
sc_stat_$master_channel                external static char(6)                  dcl 5-29
sc_stat_$master_iocb                   external static pointer                  dcl 5-45
sc_stat_$master_sci_ptr                external static pointer                  dcl 5-45
sc_stat_$mc_ansp                       external static pointer                  dcl 5-45
sc_stat_$mc_iocb                       external static pointer                  dcl 5-45
sc_stat_$mc_is_on                      external static bit(1)                   dcl 5-62
sc_stat_$no_operator_login             external static bit(1)                   dcl 5-62
sc_stat_$shutdown_typed                external static bit(1)                   dcl 5-62
sc_stat_$sv1_iocb                      external static pointer                  dcl 5-45
sc_stat_$sv2_iocb                      external static pointer                  dcl 5-45
sc_stat_$sv3_iocb                      external static pointer                  dcl 5-45
sc_stat_$sysdir                        external static char(168)                unaligned dcl 5-21
sc_stat_$system_shutdown_label         external static label variable           dcl 5-34
sc_stat_$test_mode                     external static bit(1)                   dcl 5-62
sc_stat_$unidentified_access_name      external static char(32)                 unaligned dcl 5-15
sc_stat_$vchn_requires_accept          external static bit(1)                   dcl 5-62
sl_info                                automatic       structure                level 1 dcl 6-24
sl_info_code_msg                       internal static structure                level 1 dcl 6-187
sl_info_msg                            internal static structure                level 1 dcl 6-214
sl_info_sev_code_label_msg             internal static structure                level 1 dcl 6-161
sl_info_sev_code_msg                   internal static structure                level 1 dcl 6-82
sl_info_sev_coded_msg                  internal static structure                level 1 dcl 6-134
sl_info_sev_msg                        internal static structure                level 1 dcl 6-108

NAMES DECLARED BY EXPLICIT CONTEXT.
AUDIT                           001013 constant        entry                    internal dcl 170 ref 88 90 104 106 133 135 149 151
CONTROL_COMMON                  000505 constant        label                    dcl 126 ref 113 119
EXIT_NONLOCAL                   000776 constant        label                    dcl 167 ref 160
log_daemon_in                   000372 constant        entry                    external dcl 109
log_daemon_out                  000424 constant        entry                    external dcl 115
log_in_as_daemon                000627 constant        entry                    external dcl 138
mc_check_acs_                   000036 constant        entry                    external dcl 12
new_proc_daemon                 000456 constant        entry                    external dcl 121
quit                            000221 constant        entry                    external dcl 93
reply                           000051 constant        entry                    external dcl 77
setup                           000777 constant        entry                    internal dcl 154 ref 80 96 112 118 124 141

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1372        1436    1106        1402
Length      1776    1106        44         323     264           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
mc_check_acs_                       186 external procedure  is an external procedure.  
setup                                   internal procedure  shares stack frame of external procedure mc_check_acs_.  
AUDIT                                   internal procedure  shares stack frame of external procedure mc_check_acs_.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
mc_check_acs_            000100 global_access_op            mc_check_acs_
                         000101 modes                       mc_check_acs_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_char_temp     call_ext_out_desc   call_ext_out        return_mac          shorten_stack       ext_entry
ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
convert_access_operation_     hcs_$get_user_access_modes    sys_log_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
access_operations_$daemon_daemon_login                      access_operations_$daemon_login
access_operations_$daemon_logout                            access_operations_$daemon_quit
access_operations_$daemon_reply                             as_data_$rs_ptrs
error_table_$mc_no_c_permission                             error_table_$mc_no_d_permission
error_table_$mc_no_q_permission                             error_table_$mc_no_r_permission
sc_stat_$mc_acs_dir




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     12 000035        77 000043        80 000071        82 000077        84 000175        88 000207        90 000214
     91 000216        93 000217        96 000241        98 000250       100 000346       104 000360       106 000365
    107 000367       109 000370       112 000412       113 000421       115 000422       118 000444       119 000453
    121 000454       124 000476       126 000505       129 000603       133 000615       135 000622       136 000624
    138 000625       141 000647       143 000656       145 000754       149 000766       151 000773       152 000775
    167 000776       154 000777       158 001001       159 001003       160 001005       163 001012       170 001013
    179 001015       181 001075


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
