	COMPILATION LISTING OF SEGMENT sty_dump_
	Compiled by: Multics PL/I Compiler, Release 28d, of September 14, 1983
	Compiled at: Honeywell LCPD Phoenix, System M
	Compiled on: 09/21/83  1222.9 mst Wed
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 /* format: style4,delnl,insnl,ifthenstmt,indnoniterend */
        7 sty_dump_:
        8      procedure (Ttybp, Areap, Dp, Sc, Brief);
        9 
       10 /* Debugging display for STY channels. */
       11 /* Written July 1981 by C. Hornig */
       12 /* Modified April 1983 by Robert Coren to print access class if present */
       13 
       14 dcl  (Ttybp, Areap, Dp) ptr parameter;
       15 dcl  Sc fixed bin parameter;
       16 dcl  Brief bit (1) aligned parameter;
       17 
       18 dcl  convert_authorization_$to_string entry (bit (72) aligned, char (*), fixed bin (35));
       19 dcl  ioa_ entry options (variable);
       20 dcl  mode_string_$get entry (ptr, char (*), fixed bin (35));
       21 dcl  tty_dump$print_chain entry (ptr, char (*), fixed bin, bit (1));
       22 
       23 dcl  her_sc fixed bin;
       24 dcl  code fixed bin (35);
       25 dcl  modes char (512);
       26 dcl  access_class_string char (864);
       27 
       28 dcl  (pointer, rel) builtin;
       29 
       30 	sty_mpx_data_ptr = pointer (Areap, rel (Dp));
       31 
       32 	if Sc > 0 then do;
       33 	     pdep = addr (sty_mpx_data.pdes (Sc));
       34 	     her_sc = 1 + mod (Sc - 1 + sty_mpx_data.n_pairs, sty_mpx_data.n_channels);
       35 	     call ioa_ ("^d(^o) -> ^d(^o): ^d words^[ listening^]^[ wru^]^[ eop^]^[ notify_modes^]^[ output_ready^]",
       36 		Sc, pde.devx, her_sc, sty_mpx_data.pdes (her_sc).devx, pde.words, pde.flags.listen, pde.flags.wru,
       37 		pde.flags.end_of_page, pde.flags.notify_modes, pde.flags.output_ready);
       38 	     if pde.mode_ptr ^= null () then do;
       39 		call mode_string_$get (pointer (Areap, rel (pde.mode_ptr)), modes, code);
       40 		if code ^= 0 then modes = "???";
       41 		call ioa_ ("^-modes: ^a", modes);
       42 		end;
       43 
       44 	     if pde.access_class_set then do;
       45 		call convert_authorization_$to_string (pde.access_class, access_class_string, code);
       46 		if code ^= 0
       47 		then call ioa_ ("^-access class: ^b3", pde.access_class);
       48 		else call ioa_ ("^-access class: ^a", access_class_string);
       49 		end;
       50 
       51 	     call tty_dump$print_chain (Ttybp, "", (pde.head), (Brief));
       52 	     end;
       53 
       54 	else do;
       55 	     call ioa_ ("STY MPX devx ^o, ^d channels.", sty_mpx_data.devx, sty_mpx_data.n_channels);
       56 	     end;
       57 
       58 	return;
       59 
  1     1 /* Begin include file sty_mpx_data.incl.pl1 */
  1     2 
  1     3 /* Written by Charlie Hornig (?) */
  1     4 /* Modified April 1983 by Robert Coren to add access_class information */
  1     5 
  1     6 /* format: style3 */
  1     7 dcl	sty_mpx_data_ptr	ptr;			/* main database ptr */
  1     8 dcl	sty_mpx_data_nchan	fixed bin;		/* number of multiplexed channels */
  1     9 dcl	1 sty_mpx_data	aligned based (sty_mpx_data_ptr),
  1    10 	  2 devx		fixed bin,		/* index of major channel */
  1    11 	  2 flags,
  1    12 	    3 started	bit (1) unaligned,		/* we can accept dial_up's */
  1    13 	  2 n_channels	fixed bin,
  1    14 	  2 n_pairs	fixed bin,
  1    15 	  2 pdes		(sty_mpx_data_nchan refer (sty_mpx_data.n_channels)) like pde;
  1    16 
  1    17 dcl	pdep		ptr;
  1    18 dcl	1 pde		aligned based (pdep),	/* for each PTY channel */
  1    19 	  2 devx		fixed bin,		/* this channel's devx */
  1    20 	  2 flags,
  1    21 	    3 listen	bit (1) unaligned,		/* someone is interested */
  1    22 	    3 wru		bit (1) unaligned,		/* asked for answerback */
  1    23 	    3 end_of_page	bit (1) unaligned,		/* waiting for response to EOP */
  1    24 	    3 notify_modes	bit (1) unaligned,		/* wants to know if foreign modes change */
  1    25 	    3 output_ready	bit (1) unaligned,		/* we have sent SEND_OUTPUT */
  1    26 	    3 access_class_set bit (1) unaligned,	/* access_class has been set by "set_required_access_class" order */
  1    27 	  2 words		uns fixed bin (18),		/* words we have queued */
  1    28 	  2 (head, tail)	uns fixed bin (18),		/* output queue */
  1    29 	  2 mode_ptr	ptr,			/* ptr to mode structure in tty_area */
  1    30 	  2 location	char (64),		/* answerback (from destination to dial_out */
  1    31 	  2 access_class	bit (72) aligned;		/* access class associated with channel (if access_class_set = "1"b) */
  1    32 
  1    33 /* End include file sty_mpx_data.incl.pl1 */
       60 
  2     1 /*  BEGIN INCLUDE FILE   mode_string_info.incl.pl1							*/
  2     2 
  2     3 /* Structure for parse_mode_string_ JRDavis 20 October 1980
  2     4*   Last modified 12 January 1981 by J. Spencer Love for version 2, make char_value varying string */
  2     5 
  2     6 declare	mode_value_ptr		ptr,
  2     7 	number_of_modes		fixed bin;
  2     8 
  2     9 declare	1 mode_string_info		aligned based (mode_string_info_ptr),
  2    10 	  2 version		fixed bin,
  2    11 	  2 number		fixed bin,
  2    12 	  2 modes			(number_of_modes refer (mode_string_info.number)) like mode_value;
  2    13 
  2    14 declare	mode_string_info_ptr	ptr;
  2    15 
  2    16 declare	1 mode_value		aligned based (mode_value_ptr),
  2    17 	  2 version		fixed bin,
  2    18 	  2 mode_name		char (32) unaligned,
  2    19 	  2 flags,
  2    20 	    3 boolean_valuep	bit (1) unaligned,
  2    21 	    3 numeric_valuep	bit (1) unaligned,
  2    22 	    3 char_valuep		bit (1) unaligned,
  2    23 	    3 boolean_value		bit (1) unaligned,
  2    24 	    3 pad1		bit (32) unaligned,
  2    25 	  2 numeric_value		fixed bin (35),
  2    26 	  2 char_value		char (32) varying,
  2    27 	  2 code			fixed bin (35),
  2    28 	  2 pad2			bit (36);
  2    29 
  2    30 declare	mode_string_info_version_2	fixed bin static options (constant) initial (2),
  2    31 	mode_value_version_3	fixed bin static options (constant) initial (3);
  2    32 
  2    33 /* END INCLUDE FILE   mode_string_info.incl.pl1								*/
       61 
       62 
       63      end sty_dump_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    09/21/83  1222.9  sty_dump_.pl1                     >special_ldd>on>09/21/83>sty_dump_.pl1
60           1    09/21/83  1108.5  sty_mpx_data.incl.pl1             >special_ldd>on>09/21/83>sty_mpx_data.incl.pl1
61           2    03/19/81  1206.8  mode_string_info.incl.pl1         >ldd>include>mode_string_info.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
Areap                                  parameter       pointer                  dcl 14 ref 7 30 39 39
Brief                                  parameter       bit(1)                   dcl 16 ref 7 51
Dp                                     parameter       pointer                  dcl 14 ref 7 30
Sc                                     parameter       fixed bin(17,0)          dcl 15 set ref 7 32 33 34 35*
Ttybp                                  parameter       pointer                  dcl 14 set ref 7 51*
access_class             30            based           bit(72)                  level 2 dcl 1-18 set ref 45* 46*
access_class_set          1(05)        based           bit(1)                   level 3 packed unaligned dcl 1-18 ref 44
access_class_string             000302 automatic       char(864)                unaligned dcl 26 set ref 45* 48*
code                            000101 automatic       fixed bin(35,0)          dcl 24 set ref 39* 40 45* 46
convert_authorization_$to_string
                                000010 constant        entry                    external dcl 18 ref 45
devx                                   based           fixed bin(17,0)          level 2 in structure "sty_mpx_data" dcl 1-9
                                                                                  in procedure "sty_dump_" set ref 55*
devx                      4            based           fixed bin(17,0)          array level 3 in structure "sty_mpx_data" dcl 1-9
                                                                                  in procedure "sty_dump_" set ref 35*
devx                                   based           fixed bin(17,0)          level 2 in structure "pde" dcl 1-18 in procedure
                                                                                  "sty_dump_" set ref 35*
end_of_page               1(02)        based           bit(1)                   level 3 packed unaligned dcl 1-18 set ref 35*
flags                     1            based           structure                level 2 dcl 1-18
head                      3            based           fixed bin(18,0)          level 2 unsigned dcl 1-18 ref 51
her_sc                          000100 automatic       fixed bin(17,0)          dcl 23 set ref 34* 35* 35
ioa_                            000012 constant        entry                    external dcl 19 ref 35 41 46 48 55
listen                    1            based           bit(1)                   level 3 packed unaligned dcl 1-18 set ref 35*
mode_ptr                  6            based           pointer                  level 2 dcl 1-18 ref 38 39 39
mode_string_$get                000014 constant        entry                    external dcl 20 ref 39
mode_value                             based           structure                level 1 dcl 2-16
modes                           000102 automatic       char(512)                unaligned dcl 25 set ref 39* 40* 41*
n_channels                2            based           fixed bin(17,0)          level 2 dcl 1-9 set ref 34 55*
n_pairs                   3            based           fixed bin(17,0)          level 2 dcl 1-9 ref 34
notify_modes              1(03)        based           bit(1)                   level 3 packed unaligned dcl 1-18 set ref 35*
output_ready              1(04)        based           bit(1)                   level 3 packed unaligned dcl 1-18 set ref 35*
pde                                    based           structure                level 1 dcl 1-18
pdep                            000634 automatic       pointer                  dcl 1-17 set ref 33* 35 35 35 35 35 35 35 38 39 39
                                                                                  44 45 46 51
pdes                      4            based           structure                array level 2 dcl 1-9 set ref 33
pointer                                                builtin function         dcl 28 ref 30 39 39
rel                                                    builtin function         dcl 28 ref 30 39 39
sty_mpx_data                           based           structure                level 1 dcl 1-9
sty_mpx_data_ptr                000632 automatic       pointer                  dcl 1-7 set ref 30* 33 34 34 35 55 55
tty_dump$print_chain            000016 constant        entry                    external dcl 21 ref 51
words                     2            based           fixed bin(18,0)          level 2 unsigned dcl 1-18 set ref 35*
wru                       1(01)        based           bit(1)                   level 3 packed unaligned dcl 1-18 set ref 35*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
mode_string_info                       based           structure                level 1 dcl 2-9
mode_string_info_ptr                   automatic       pointer                  dcl 2-14
mode_string_info_version_2             internal static fixed bin(17,0)          initial dcl 2-30
mode_value_ptr                         automatic       pointer                  dcl 2-6
mode_value_version_3                   internal static fixed bin(17,0)          initial dcl 2-30
number_of_modes                        automatic       fixed bin(17,0)          dcl 2-6
sty_mpx_data_nchan                     automatic       fixed bin(17,0)          dcl 1-8

NAME DECLARED BY EXPLICIT CONTEXT.
sty_dump_                       000103 constant        entry                    external dcl 7

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 33
mod                                                    builtin function         ref 34
null                                                   builtin function         ref 38

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       554         574     465         564
Length      1004     465        20         174      66           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
sty_dump_                           488 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
sty_dump_                000100 her_sc                      sty_dump_
                         000101 code                        sty_dump_
                         000102 modes                       sty_dump_
                         000302 access_class_string         sty_dump_
                         000632 sty_mpx_data_ptr            sty_dump_
                         000634 pdep                        sty_dump_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   return              mod_fx1             ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
convert_authorization_$to_string                            ioa_                          mode_string_$get
tty_dump$print_chain

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      7 000076        30 000110        32 000120        33 000122        34 000125        35 000134        38 000226
     39 000233        40 000262        41 000267        44 000310        45 000314        46 000335        48 000364
     51 000404        52 000440        55 000441        58 000464


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
