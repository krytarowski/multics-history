	COMPILATION LISTING OF SEGMENT get_ttt_info_
	Compiled by: Multics PL/I Compiler, Release 31a, of October 12, 1988
	Compiled at: Honeywell Bull, Phoenix AZ, SysM
	Compiled on: 10/17/88  1037.0 mst Mon
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1987                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(87-03-17,LJAdams), approve(87-04-03,MCR7646),
       17*     audit(87-05-05,Gilcrease), install(87-05-14,MR12.1-1030):
       18*     Changed ttd_version to ttd_version_3.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 get_ttt_info_: proc (rttp, code);
       23 
       24 dcl  code fixed bin (35);
       25 
       26 dcl 1 local_terminal_type_data like terminal_type_data;
       27 
       28 dcl  ttt_info_$terminal_data entry (char (*) aligned, fixed bin, fixed bin, ptr, fixed bin (35));
       29 dcl  (addr, null) builtin;
       30 
       31 
  1     1 /* BEGIN...   remote_ttt_info.incl.pl1 ... 5/78 */
  1     2 
  1     3 dcl  rttp ptr;					/* ptr to data structure */
  1     4 
  1     5 
  1     6 dcl 1 remote_ttt_info based (rttp) aligned,		/* data */
  1     7     2 ttt_bits,					/* control bits */
  1     8      (3 escape_output bit (1),			/* if on enables output escape processing */
  1     9       3 translate_output bit (1),			/* if on enables output translation */
  1    10       3 translate_input bit (1),			/* if on enables input translation */
  1    11       3 escape_input bit (1),				/* if on enables input escape processing */
  1    12       3 erase_input bit (1),				/* if on enables input erase processing */
  1    13       3 canonicalize_input bit (1),			/* if on enables input canonicalization */
  1    14       3 edited bit (1)) unal,				/* if on enables edited escape processing */
  1    15     2 terminal_type char (32),			/* terminal type in TTT */
  1    16     2 kill_char char (1),				/* specified kil character */
  1    17     2 erase_char char (1),				/* and erase character */
  1    18     2 ttt_ptrs,					/* ptr to various ttt tables */
  1    19       3 input_mvtp ptr,				/* input translation table */
  1    20       3 output_mvtp ptr,				/* output translation table */
  1    21       3 input_tctp ptr,				/* input escape table */
  1    22       3 output_tctp ptr,				/* output escape table */
  1    23       3 specp ptr;					/* special table */
  1    24 
  1    25 /* END remote_ttt_info.incl.pl1 */
       32 
  2     1 
  2     2 /* BEGIN INCLUDE FILE ... prt_conv_info.incl.pl1 */
  2     3 /* Modified: 12 September 1980 by G. Palter */
  2     4 
  2     5 
  2     6 /****^  HISTORY COMMENTS:
  2     7*  1) change(87-05-10,Gilcrease), approve(87-07-31,MCR7686),
  2     8*     audit(88-02-01,Farley), install(88-02-02,MR12.2-1019):
  2     9*     Add modes.line_nbrs, flags.(eol eof)  bits for eor -nb.
  2    10*                                                   END HISTORY COMMENTS */
  2    11 
  2    12 
  2    13 dcl  pcip ptr;					/* pointer to conversion info structure */
  2    14 
  2    15 dcl 1 pci based (pcip) aligned,			/* printer conversion info structure */
  2    16     2 cv_proc ptr,					/* pointer to character conversion procedure */
  2    17     2 lmarg fixed bin,				/* left margin indentation */
  2    18     2 rmarg fixed bin,				/* right margin limit */
  2    19     2 page_length fixed bin,				/* number of lines on page */
  2    20     2 phys_line_length fixed bin,			/* physical width of paper */
  2    21     2 phys_page_length fixed bin,			/* physical length of paper */
  2    22     2 lpi fixed bin,				/* lines per inch */
  2    23     2 sheets_per_page fixed bin,			/* sheets of paper per logical page */
  2    24     2 line_count fixed bin,				/* count of converted lines */
  2    25     2 page_count fixed bin,				/* count of converted pages */
  2    26     2 func fixed bin,				/* special conversion function */
  2    27 						/* 0 => normal conversion */
  2    28 						/* 1 => change NL to FF */
  2    29 						/* 2 => change NL to top inside page */
  2    30 						/* 3 => change NL to end of page */
  2    31                                                             /* 4 => change NL to top of outside page */
  2    32     (2 modes,					/* conversion modes */
  2    33      3 overflow_off bit (1),				/* "1"b to suppress end of page overflow */
  2    34       3 single_space bit (1),				/* "1"b to change all forms advance chars to NL */
  2    35       3 non_edited bit (1),				/* "1"b to print ASCII control chars */
  2    36       3 truncate bit (1),				/* "1"b to truncate lines that are too long */
  2    37       3 esc bit (1),				/* "1"b to process ESC character */
  2    38       3 ctl_char bit (1),				/* "1"b to output control characters */
  2    39       3 line_nbrs bit (1),				/* "1"b to output line numbers */
  2    40       3 pci_pad bit (5),
  2    41     2 flags,					/* flags internal to prt_conv_ */
  2    42       3 ignore_next_ff bit (1),			/* ON => prt_conv_ just output a FF; ignore next character if
  2    43*						   it's a FF */
  2    44       3 eol bit (1),				/* "1"b = end-of-line encountered */
  2    45       3 eof bit (1),				/* "1"b = end-of-segment encountered */
  2    46       3 flags_pad bit (3),
  2    47     2 coroutine_modes,
  2    48       3 upper_case bit(1),				/* "1"b to convert to upper case */
  2    49       3 ht bit(1),					/* "1"b to skip tab conversion */
  2    50       3 coroutine_pad bit(13),
  2    51       3 slew_table_idx bit(3) ) unal,			/* slew table index */
  2    52     2 top_label_line char (136),			/* contains an optional top of page label */
  2    53     2 bot_label_line char (136),			/* contains an optional bottom of page label */
  2    54     2 top_label_length fixed bin,			/* length of top label line */
  2    55     2 bot_label_length fixed bin,			/* length of bottom label line */
  2    56     2 form_stops (256) unal,				/* logical form stops */
  2    57       3 lbits bit (9),				/* leftmost bits */
  2    58       3 rbits bit (9),				/* rightmost bits */
  2    59 
  2    60 /* The following items are for internal use by the print conversion procedure.
  2    61*   They should be zeroed once and then never referenced again.		*/
  2    62 
  2    63     2 level fixed bin,				/* overstrike level */
  2    64     2 pos fixed bin,				/* print position at end of incomplete line */
  2    65     2 line fixed bin,				/* current line number */
  2    66     2 slew_residue fixed bin,				/* number of lines remaining to be slewed */
  2    67     2 label_nelem fixed bin,				/* characters remaining in label */
  2    68     2 label_wksp ptr,				/* pointer to label being processed */
  2    69     2 sav_pos fixed bin,				/* position saved during label processing */
  2    70     2 esc_state fixed bin,				/* state of ESC processing */
  2    71     2 esc_num fixed bin,				/* number following ESC sequence */
  2    72     2 temp bit (36);				/* conversion proc temporary */
  2    73 
  2    74 /* End of include file ...... prt_conv_info.incl.pl1 */
  2    75 
       33 
  3     1 
  3     2 /* Begin include file ...... prt_info.incl.pl1 */
  3     3 /* last modified 6/12/75 by Noel I. Morris	*/
  3     4 
  3     5 dcl  pip ptr;					/* pointer to printer info structure */
  3     6 
  3     7 dcl 1 prt_info based (pip) aligned,			/* printer info structure */
  3     8     2 devname char (4),				/* name of device */
  3     9     2 devx fixed bin,				/* device index */
  3    10     2 model fixed bin,				/* printer model number */
  3    11     2 type fixed bin,				/* printer type number */
  3    12     2 train fixed bin,				/* print train ID */
  3    13     2 line_length fixed bin,				/* max length of printed line */
  3    14     2 print_idcw bit (36),				/* IDCW to print 1 line */
  3    15     2 term_idcw bit (36);				/* IDCW to stop printer channel */
  3    16 
  3    17 /* End of include file ...... prt_info.incl.pl1 */
  3    18 
       34 
  4     1 /*	BEGIN INCLUDE FILE ... tty_convert.incl.pl1	*/
  4     2 
  4     3 /* tty_ conversion tables */
  4     4 /* Created 11/3/75 by Robert S. Coren */
  4     5 /* Info structures added 5/19/77 by Robert S. Coren */
  4     6 /* Length of cv_trans changed from 128 to 256 05/03/78 by Robert Coren */
  4     7 /* conversion table mnemonics added JRDavis 21 Aug 80 */
  4     8 /* fix special_chars_struc to have good refers Fri 13 Feb 81 JRDavis */
  4     9 
  4    10 
  4    11 /****^  HISTORY COMMENTS:
  4    12*  1) change(85-12-01,Negaret), approve(87-07-23,MCR7742),
  4    13*     audit(87-07-23,GDixon), install(87-08-04,MR12.1-1056):
  4    14*      Added INPUT_CONVERT_DSA_CR_PROCESSING constant.
  4    15*  2) change(88-01-22,Brunelle), approve(88-01-22,MCR7813),
  4    16*     audit(88-10-05,Blair), install(88-10-17,MR12.2-1171):
  4    17*     Expand c_chars definition from 3 chars to 15.  Change SPECIAL_VERSION
  4    18*     from 1 to 2.  Add version variable to get_special_info_struc and define
  4    19*     SPECIAL_INFO_STRUCT_VERSION_1.
  4    20*                                                   END HISTORY COMMENTS */
  4    21 
  4    22 
  4    23 /* format: style2,linecom,^indnoniterdo,indcomtxt,^inditerdo,dclind5,idind25 */
  4    24 
  4    25 
  4    26      dcl	1 special_chars	     aligned based,		/* table of special character sequences */
  4    27 	  2 nl_seq	     aligned like c_chars,	/* new-line sequence */
  4    28 	  2 cr_seq	     aligned like c_chars,	/* carriage-return sequence */
  4    29 	  2 bs_seq	     aligned like c_chars,	/* backspace sequence */
  4    30 	  2 tab_seq	     aligned like c_chars,	/* horizontal tab sequence */
  4    31 	  2 vt_seq	     aligned like c_chars,	/* vertical tab sequence */
  4    32 	  2 ff_seq	     aligned like c_chars,	/* form-feed sequence */
  4    33 	  2 printer_on	     aligned like c_chars,	/* printer-on sequence */
  4    34 	  2 printer_off	     aligned like c_chars,	/* printer_off sequence */
  4    35 	  2 red_ribbon_shift     aligned like c_chars,	/* red ribbon shift sequence */
  4    36 	  2 black_ribbon_shift   aligned like c_chars,	/* black ribbon shift sequence */
  4    37 	  2 end_of_page	     aligned like c_chars,	/* end-of-page warning sequence */
  4    38 	  2 escape_length	     fixed bin,		/* number of escape sequences */
  4    39 	  2 not_edited_escapes   (sc_escape_len refer (special_chars.escape_length)) like c_chars,
  4    40 						/* use in ^edited mode */
  4    41 	  2 edited_escapes	     (sc_escape_len refer (special_chars.escape_length)) like c_chars,
  4    42 						/* use in edited mode */
  4    43 	  2 input_escapes	     aligned,
  4    44 	    3 len		     fixed bin (8) unaligned, /* length of string */
  4    45 	    3 str		     char (sc_input_escape_len refer (special_chars.input_escapes.len)) unaligned,
  4    46 						/* escape sequence characters */
  4    47 	  2 input_results	     aligned,
  4    48 	    3 pad		     bit (9) unaligned,	/* so that strings will look the same */
  4    49 	    3 str		     char (sc_input_escape_len refer (special_chars.input_escapes.len)) unaligned;
  4    50 						/* results of escape sequences */
  4    51 
  4    52 
  4    53      dcl	c_chars_ptr	     ptr;
  4    54      dcl	1 c_chars		     based (c_chars_ptr) aligned,
  4    55 	  2 count		     fixed bin (8) unaligned,
  4    56 	  2 chars		     (15) char (1) unaligned;
  4    57 
  4    58      dcl	sc_escape_len	     fixed bin;		/* count of output escapes to allocate in special_chars  */
  4    59      dcl	sc_input_escape_len	     fixed bin;		/* count of input escapes to allocate in special_chars  */
  4    60 
  4    61 
  4    62      dcl	1 cv_trans	     based aligned,		/* conversion/translation table format */
  4    63 	  2 value		     (0:255) fixed bin (8) unal;
  4    64 
  4    65 
  4    66      dcl	1 delay		     based aligned,		/* delay counts for output */
  4    67 	  2 vert_nl	     fixed bin,
  4    68 	  2 horz_nl	     float bin,
  4    69 	  2 const_tab	     fixed bin,
  4    70 	  2 var_tab	     float bin,
  4    71 	  2 backspace	     fixed bin,
  4    72 	  2 vt_ff		     fixed bin;
  4    73 
  4    74 /* info structures used with orders */
  4    75 
  4    76      dcl	1 special_chars_struc    aligned based,
  4    77 	  2 version	     fixed bin,
  4    78 	  2 default	     fixed bin,		/* non-zero indicates use default */
  4    79 	  2 special_chars,				/* same as level-1 above */
  4    80 						/* has to be spelled out instead of using like */
  4    81 						/* because of refer options */
  4    82 	    3 nl_seq	     aligned like c_chars,	/* new-line sequence */
  4    83 	    3 cr_seq	     aligned like c_chars,	/* carriage-return sequence */
  4    84 	    3 bs_seq	     aligned like c_chars,	/* backspace sequence */
  4    85 	    3 tab_seq	     aligned like c_chars,	/* horizontal tab sequence */
  4    86 	    3 vt_seq	     aligned like c_chars,	/* vertical tab sequence */
  4    87 	    3 ff_seq	     aligned like c_chars,	/* form-feed sequence */
  4    88 	    3 printer_on	     aligned like c_chars,	/* printer-on sequence */
  4    89 	    3 printer_off	     aligned like c_chars,	/* printer_off sequence */
  4    90 	    3 red_ribbon_shift   aligned like c_chars,	/* red ribbon shift sequence */
  4    91 	    3 black_ribbon_shift aligned like c_chars,	/* black ribbon shift sequence */
  4    92 	    3 end_of_page	     aligned like c_chars,	/* end-of-page warning sequence */
  4    93 	    3 escape_length	     fixed bin,		/* number of escape sequences */
  4    94 	    3 not_edited_escapes (sc_escape_len refer (special_chars_struc.escape_length)) like c_chars,
  4    95 						/* use in ^edited mode */
  4    96 	    3 edited_escapes     (sc_escape_len refer (special_chars_struc.escape_length)) like c_chars,
  4    97 						/* use in edited mode */
  4    98 	    3 input_escapes	     aligned,
  4    99 	      4 len	     fixed bin (8) unaligned, /* length of string */
  4   100 	      4 str	     char (sc_input_escape_len refer (special_chars_struc.input_escapes.len)) unaligned,
  4   101 						/* escape sequence characters */
  4   102 	    3 input_results	     aligned,
  4   103 	      4 pad	     bit (9) unaligned,	/* so that strings will look the same */
  4   104 	      4 str	     char (sc_input_escape_len refer (special_chars_struc.input_escapes.len)) unaligned;
  4   105 						/* results of escape sequences */
  4   106 
  4   107      dcl	1 cv_trans_struc	     aligned based,		/* all conversion/translation tables */
  4   108 	  2 version	     fixed bin,
  4   109 	  2 default	     fixed bin,		/* as above */
  4   110 	  2 cv_trans	     like cv_trans;
  4   111 
  4   112      dcl	1 delay_struc	     aligned based,
  4   113 	  2 version	     fixed bin,
  4   114 	  2 default	     fixed bin,		/* as above */
  4   115 	  2 delay		     like delay;
  4   116 
  4   117      dcl	1 get_special_info_struc based aligned,		/* get_special order */
  4   118 	  2 version	     char (8),
  4   119 	  2 area_ptr	     pointer,
  4   120 	  2 table_ptr	     pointer;
  4   121 
  4   122      dcl	SPECIAL_INFO_STRUCT_VERSION_1
  4   123 			     char (8) int static options (constant) init ("sisv1000");
  4   124      dcl	SPECIAL_VERSION	     fixed bin int static options (constant) init (1);
  4   125      dcl	SPECIAL_VERSION_2	     fixed bin int static options (constant) init (2);
  4   126      dcl	DELAY_VERSION	     fixed bin int static options (constant) init (1);
  4   127      dcl	CV_TRANS_VERSION	     fixed bin int static options (constant) init (2);
  4   128 
  4   129      dcl	CV_TRANS_SIZE	     (2) fixed bin int static options (constant) init (127, 255);
  4   130 						/* indexed by version number */
  4   131 
  4   132 
  4   133 /* values for input and output conversion tables */
  4   134 
  4   135      dcl	(
  4   136 	INPUT_CONVERT_ORDINARY   init (0),
  4   137 	INPUT_CONVERT_BREAK	     init (1),
  4   138 	INPUT_CONVERT_ESCAPE     init (2),
  4   139 	INPUT_CONVERT_DISCARD    init (3),
  4   140 	INPUT_CONVERT_FORMFEED   init (4),
  4   141 	INPUT_CONVERT_PRECEDENCE_DISCARD
  4   142 			     init (5),
  4   143 	INPUT_CONVERT_DSA_CR_PROCESSING
  4   144 			     init (6)
  4   145 	)		     fixed bin (8) unaligned internal static options (constant);
  4   146 
  4   147      dcl	(
  4   148 	OUTPUT_CONVERT_ORDINARY  init (0),
  4   149 	OUTPUT_CONVERT_NEWLINE   init (1),
  4   150 	OUTPUT_CONVERT_CR	     init (2),
  4   151 	OUTPUT_CONVERT_HT	     init (3),
  4   152 	OUTPUT_CONVERT_BS	     init (4),
  4   153 	OUTPUT_CONVERT_VT	     init (5),
  4   154 	OUTPUT_CONVERT_FF	     init (6),
  4   155 	OUTPUT_CONVERT_OCTAL     init (7),
  4   156 	OUTPUT_CONVERT_RRS	     init (8),
  4   157 	OUTPUT_CONVERT_BRS	     init (9),
  4   158 	OUTPUT_CONVERT_NO_MOTION init (10),
  4   159 	OUTPUT_CONVERT_PRECEDENCE_NO_MOTION
  4   160 			     init (11),
  4   161 	OUTPUT_CONVERT_DONT_SEND init (12),
  4   162 	OUTPUT_CONVERT_NOT_USED_13
  4   163 			     init (13),
  4   164 	OUTPUT_CONVERT_NOT_USED_14
  4   165 			     init (14),
  4   166 	OUTPUT_CONVERT_NOT_USED_15
  4   167 			     init (15),
  4   168 	OUTPUT_CONVERT_NOT_USED_16
  4   169 			     init (16),
  4   170 	OUTPUT_CONVERT_FIRST_SPECIAL
  4   171 			     init (17)
  4   172 	)		     fixed bin (8) unaligned internal static options (constant);
  4   173 
  4   174 /*	END INCLUDE FILE ... tty_convert.incl.pl1 */
       35 
  5     1 /* BEGIN INCLUDE FiLE ... terminal_type_data.incl.pl1 */
  5     2 
  5     3 
  5     4 /****^  HISTORY COMMENTS:
  5     5*  1) change(77-05-19,JStern), approve(), audit(), install():
  5     6*     Created
  5     7*     Modified 8/14/79 by Robert Coren to convert to version 2 by adding
  5     8*        flow control parameters
  5     9*  2) change(87-03-09,LJAdams), approve(87-04-03,MCR7646),
  5    10*     audit(87-05-05,Gilcrease), install(87-08-04,MR12.1-1056):
  5    11*     Change the ttd_version to ttd_version_3.  Add the protocol field.
  5    12*                                                   END HISTORY COMMENTS */
  5    13 
  5    14 
  5    15 dcl 1 terminal_type_data aligned based (ttdp),		/* info structure for set_terminal_data order */
  5    16       2 version fixed bin,				/* structure version */
  5    17       2 old_type fixed bin,				/* old terminal type number, -1 => none */
  5    18       2 name char (32) unaligned,			/* terminal type name */
  5    19       2 tables,
  5    20         3 input_tr_ptr ptr,				/* input translation table ptr */
  5    21         3 output_tr_ptr ptr,				/* output translation table ptr */
  5    22         3 input_cv_ptr ptr,				/* input conversion table ptr */
  5    23         3 output_cv_ptr ptr,				/* output conversion table ptr */
  5    24         3 special_ptr ptr,				/* special chars table ptr */
  5    25         3 delay_ptr ptr,				/* delay table ptr */
  5    26       2 editing_chars unaligned,
  5    27         3 erase char (1) unaligned,
  5    28         3 kill char (1) unaligned,
  5    29       2 framing_chars unaligned,
  5    30         3 frame_begin char (1) unaligned,
  5    31         3 frame_end char (1) unaligned,
  5    32       2 flags unal,
  5    33         3 keyboard_locking bit (1),			/* ON to request keyboard locking and unlocking */
  5    34         3 input_timeout bit (1),
  5    35         3 output_block_acknowledge bit (1),
  5    36         3 mbz bit (15),
  5    37       2 line_delimiter char (1) unal,
  5    38       2 mbz bit (9) unal,
  5    39 
  5    40       /* the remainder of this structure is only present if version is 2 or more */
  5    41 
  5    42       2 flow_control_chars unal,
  5    43         3 input_suspend char (1),
  5    44         3 input_resume char (1),
  5    45         3 output_suspend_etb char (1),
  5    46         3 output_resume_ack char (1),
  5    47       2 output_buffer_size fixed bin,
  5    48 
  5    49       /* the remainder of this structure is only present if version is 3 or more */
  5    50       2 protocol fixed bin; /* 0=NONE; 1=MOWSE */
  5    51 
  5    52 
  5    53 dcl  ttdp ptr;					/* ptr to terminal_type_data structure */
  5    54 dcl  ttd_version_3 fixed bin int static options (constant) init (3);
  5    55 						/* current version of structure */
  5    56 
  5    57 
  5    58 /* END INCLUDE FILE ... terminal_type_data.incl.pl1 */
       36 
       37 
       38 	ttdp = addr (local_terminal_type_data);
       39 	terminal_type_data.version = ttd_version_3;
       40 	call ttt_info_$terminal_data (remote_ttt_info.terminal_type, -1, 300, ttdp, code);
       41 	if code ^= 0 then return;
       42 
       43 	if terminal_type_data.input_tr_ptr ^= null then
       44 	     remote_ttt_info.input_mvtp = addr (terminal_type_data.input_tr_ptr -> cv_trans_struc.cv_trans);
       45 	if terminal_type_data.output_tr_ptr ^= null then
       46 	     remote_ttt_info.output_mvtp = addr (terminal_type_data.output_tr_ptr -> cv_trans_struc.cv_trans);
       47 	if terminal_type_data.input_cv_ptr ^= null then
       48 	     remote_ttt_info.input_tctp = addr (terminal_type_data.input_cv_ptr -> cv_trans_struc.cv_trans);
       49 	if terminal_type_data.output_cv_ptr ^= null then
       50 	     remote_ttt_info.output_tctp = addr (terminal_type_data.output_cv_ptr -> cv_trans_struc.cv_trans);
       51 	if terminal_type_data.input_cv_ptr ^= null then
       52 	     remote_ttt_info.input_tctp = addr (terminal_type_data.input_cv_ptr -> cv_trans_struc.cv_trans);
       53 	if terminal_type_data.special_ptr ^= null then
       54 	     remote_ttt_info.specp = addr (terminal_type_data.special_ptr -> special_chars_struc.special_chars);
       55 	remote_ttt_info.specp = addr (terminal_type_data.special_ptr -> special_chars_struc.special_chars);
       56 	remote_ttt_info.erase_char = terminal_type_data.erase;
       57 	remote_ttt_info.kill_char = terminal_type_data.kill;
       58 
       59 
       60 	return;
       61      end get_ttt_info_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/17/88  1034.1  get_ttt_info_.pl1                 >spec>install>MR12.2-1171>get_ttt_info_.pl1
32           1    08/03/78  2021.0  remote_ttt_info.incl.pl1          >ldd>include>remote_ttt_info.incl.pl1
33           2    02/04/88  2009.3  prt_conv_info.incl.pl1            >ldd>include>prt_conv_info.incl.pl1
34           3    08/29/75  1310.5  prt_info.incl.pl1                 >ldd>include>prt_info.incl.pl1
35           4    10/17/88  1024.1  tty_convert.incl.pl1              >spec>install>MR12.2-1171>tty_convert.incl.pl1
36           5    08/06/87  0913.5  terminal_type_data.incl.pl1       >ldd>include>terminal_type_data.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 29 ref 38 43 45 47 49 51 53 55
c_chars                                based           structure                level 1 dcl 4-54
code                                   parameter       fixed bin(35,0)          dcl 24 set ref 22 40* 41
cv_trans                  2            based           structure                level 2 in structure "cv_trans_struc" dcl 4-107
                                                                                  in procedure "get_ttt_info_" set ref 43 45 47 49
                                                                                  51
cv_trans                               based           structure                level 1 dcl 4-62 in procedure "get_ttt_info_"
cv_trans_struc                         based           structure                level 1 dcl 4-107
delay                                  based           structure                level 1 dcl 4-66
editing_chars            26            based           structure                level 2 packed packed unaligned dcl 5-15
erase                    26            based           char(1)                  level 3 packed packed unaligned dcl 5-15 ref 56
erase_char               12            based           char(1)                  level 2 dcl 1-6 set ref 56*
input_cv_ptr             16            based           pointer                  level 3 dcl 5-15 ref 47 47 51 51
input_mvtp               14            based           pointer                  level 3 dcl 1-6 set ref 43*
input_tctp               20            based           pointer                  level 3 dcl 1-6 set ref 47* 51*
input_tr_ptr             12            based           pointer                  level 3 dcl 5-15 ref 43 43
kill                     26(09)        based           char(1)                  level 3 packed packed unaligned dcl 5-15 ref 57
kill_char                11            based           char(1)                  level 2 dcl 1-6 set ref 57*
local_terminal_type_data        000100 automatic       structure                level 1 unaligned dcl 26 set ref 38
null                                                   builtin function         dcl 29 ref 43 45 47 49 51 53
output_cv_ptr            20            based           pointer                  level 3 dcl 5-15 ref 49 49
output_mvtp              16            based           pointer                  level 3 dcl 1-6 set ref 45*
output_tctp              22            based           pointer                  level 3 dcl 1-6 set ref 49*
output_tr_ptr            14            based           pointer                  level 3 dcl 5-15 ref 45 45
remote_ttt_info                        based           structure                level 1 dcl 1-6
rttp                                   parameter       pointer                  dcl 1-3 ref 22 40 43 45 47 49 51 53 55 56 57
special_chars             2            based           structure                level 2 dcl 4-76 set ref 53 55
special_chars_struc                    based           structure                level 1 dcl 4-76
special_ptr              22            based           pointer                  level 3 dcl 5-15 ref 53 53 55
specp                    24            based           pointer                  level 3 dcl 1-6 set ref 53* 55*
tables                   12            based           structure                level 2 dcl 5-15
terminal_type             1            based           char(32)                 level 2 dcl 1-6 set ref 40*
terminal_type_data                     based           structure                level 1 dcl 5-15
ttd_version_3                          constant        fixed bin(17,0)          initial dcl 5-54 ref 39
ttdp                            000134 automatic       pointer                  dcl 5-53 set ref 38* 39 40* 43 43 45 45 47 47 49 49
                                                                                  51 51 53 53 55 56 57
ttt_info_$terminal_data         000010 constant        entry                    external dcl 28 ref 40
ttt_ptrs                 14            based           structure                level 2 dcl 1-6
version                                based           fixed bin(17,0)          level 2 dcl 5-15 set ref 39*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
CV_TRANS_SIZE                          internal static fixed bin(17,0)          initial array dcl 4-129
CV_TRANS_VERSION                       internal static fixed bin(17,0)          initial dcl 4-127
DELAY_VERSION                          internal static fixed bin(17,0)          initial dcl 4-126
INPUT_CONVERT_BREAK                    internal static fixed bin(8,0)           initial packed unaligned dcl 4-135
INPUT_CONVERT_DISCARD                  internal static fixed bin(8,0)           initial packed unaligned dcl 4-135
INPUT_CONVERT_DSA_CR_PROCESSING        internal static fixed bin(8,0)           initial packed unaligned dcl 4-135
INPUT_CONVERT_ESCAPE                   internal static fixed bin(8,0)           initial packed unaligned dcl 4-135
INPUT_CONVERT_FORMFEED                 internal static fixed bin(8,0)           initial packed unaligned dcl 4-135
INPUT_CONVERT_ORDINARY                 internal static fixed bin(8,0)           initial packed unaligned dcl 4-135
INPUT_CONVERT_PRECEDENCE_DISCARD       internal static fixed bin(8,0)           initial packed unaligned dcl 4-135
OUTPUT_CONVERT_BRS                     internal static fixed bin(8,0)           initial packed unaligned dcl 4-147
OUTPUT_CONVERT_BS                      internal static fixed bin(8,0)           initial packed unaligned dcl 4-147
OUTPUT_CONVERT_CR                      internal static fixed bin(8,0)           initial packed unaligned dcl 4-147
OUTPUT_CONVERT_DONT_SEND               internal static fixed bin(8,0)           initial packed unaligned dcl 4-147
OUTPUT_CONVERT_FF                      internal static fixed bin(8,0)           initial packed unaligned dcl 4-147
OUTPUT_CONVERT_FIRST_SPECIAL           internal static fixed bin(8,0)           initial packed unaligned dcl 4-147
OUTPUT_CONVERT_HT                      internal static fixed bin(8,0)           initial packed unaligned dcl 4-147
OUTPUT_CONVERT_NEWLINE                 internal static fixed bin(8,0)           initial packed unaligned dcl 4-147
OUTPUT_CONVERT_NOT_USED_13             internal static fixed bin(8,0)           initial packed unaligned dcl 4-147
OUTPUT_CONVERT_NOT_USED_14             internal static fixed bin(8,0)           initial packed unaligned dcl 4-147
OUTPUT_CONVERT_NOT_USED_15             internal static fixed bin(8,0)           initial packed unaligned dcl 4-147
OUTPUT_CONVERT_NOT_USED_16             internal static fixed bin(8,0)           initial packed unaligned dcl 4-147
OUTPUT_CONVERT_NO_MOTION               internal static fixed bin(8,0)           initial packed unaligned dcl 4-147
OUTPUT_CONVERT_OCTAL                   internal static fixed bin(8,0)           initial packed unaligned dcl 4-147
OUTPUT_CONVERT_ORDINARY                internal static fixed bin(8,0)           initial packed unaligned dcl 4-147
OUTPUT_CONVERT_PRECEDENCE_NO_MOTION    internal static fixed bin(8,0)           initial packed unaligned dcl 4-147
OUTPUT_CONVERT_RRS                     internal static fixed bin(8,0)           initial packed unaligned dcl 4-147
OUTPUT_CONVERT_VT                      internal static fixed bin(8,0)           initial packed unaligned dcl 4-147
SPECIAL_INFO_STRUCT_VERSION_1          internal static char(8)                  initial packed unaligned dcl 4-122
SPECIAL_VERSION                        internal static fixed bin(17,0)          initial dcl 4-124
SPECIAL_VERSION_2                      internal static fixed bin(17,0)          initial dcl 4-125
c_chars_ptr                            automatic       pointer                  dcl 4-53
delay_struc                            based           structure                level 1 dcl 4-112
get_special_info_struc                 based           structure                level 1 dcl 4-117
pci                                    based           structure                level 1 dcl 2-15
pcip                                   automatic       pointer                  dcl 2-13
pip                                    automatic       pointer                  dcl 3-5
prt_info                               based           structure                level 1 dcl 3-7
sc_escape_len                          automatic       fixed bin(17,0)          dcl 4-58
sc_input_escape_len                    automatic       fixed bin(17,0)          dcl 4-59
special_chars                          based           structure                level 1 dcl 4-26

NAME DECLARED BY EXPLICIT CONTEXT.
get_ttt_info_                   000012 constant        entry                    external dcl 22

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       232         244     172         242
Length       514     172        12         234      37           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
get_ttt_info_                       118 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
get_ttt_info_            000100 local_terminal_type_data    get_ttt_info_
                         000134 ttdp                        get_ttt_info_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
ttt_info_$terminal_data

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     22 000006        38 000017        39 000021        40 000023        41 000061        43 000064        45 000076
     47 000107        49 000120        51 000131        53 000142        55 000153        56 000160        57 000165
     60 000171


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
