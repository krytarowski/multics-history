ASSEMBLY LISTING OF SEGMENT >special_ldd>install>MR12.0-1206>mrd_.alm                        
ASSEMBLED ON:	11/05/86  1044.1 mst Wed
OPTIONS USED:	list 
ASSEMBLED BY:	ALM Version  6.7  October 1986  
ASSEMBLER CREATED:	10/08/86  1557.5 mst Wed

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Information Systems Inc., 1982 *
                                     4  " *                                                         *
                                     5  " ***********************************************************
                                     6  "  ******************************************************
                                     7  "  *                                                    *
                                     8  "  *                                                    *
                                     9  "  * Copyright (c) 1972 by Massachusetts Institute of   *
                                    10  "  * Technology and Honeywell Information Systems, Inc. *
                                    11  "  *                                                    *
                                    12  "  *                                                    *
                                    13  "  ******************************************************
                                    14  "	Outer Module Transfer Vector for the mrd_ outer module.
                        000000      15  	segdef	mrd_module
                                    16  "
                                    17  %include	stack_header;
                                   1-1  "	BEGIN INCLUDE FILE ... stack_header.incl.alm  3/72  Bill Silver
                                   1-2  "
                                   1-3  "	modified 7/76 by M. Weaver for *system links and more system use of areas
                                   1-4  "	modified 3/77 by M. Weaver  to add rnt_ptr
                                   1-5  "	modified 7/77 by S. Webber to add run_unit_depth and assign_linkage_ptr
                                   1-6  "	modified 6/83 by J. Ives to add trace_frames and in_trace.
                                   1-7  
                                   1-8  " HISTORY COMMENTS:
                                   1-9  "  1) change(86-06-24,DGHowe), approve(86-06-24,MCR7396),
                                  1-10  "     audit(86-08-05,Schroth), install(86-11-03,MR12.0-1206):
                                  1-11  "     added the heap_header_ptr definition
                                  1-12  "  2) change(86-08-12,Kissel), approve(86-08-12,MCR7473),
                                  1-13  "     audit(86-10-10,Fawcett), install(86-11-03,MR12.0-1206):
                                  1-14  "     Modified to support control point management.  These changes were
                                  1-15  "     actually made in February 1985 by G. Palter.
                                  1-16  "  3) change(86-10-22,Fawcett), approve(86-10-22,MCR7473),
                                  1-17  "     audit(86-10-22,Farley), install(86-11-03,MR12.0-1206):
                                  1-18  "     Remove the old_lot pointer and replace it with cpm_data_ptr. Use the 18
                                  1-19  "     bit pad after cur_lot_size for the cpm_enabled. This was done to save
                                  1-20  "     some space int the stack header and change the cpd_ptr unal to
                                  1-21  "     cpm_data_ptr (ITS pair).
                                  1-22  "                                                      END HISTORY COMMENTS
                                  1-23  
                        000004    1-24  	equ	stack_header.cpm_data_ptr,4		ptr to control point for this stack
                        000006    1-25  	equ	stack_header.combined_stat_ptr,6	ptr to separate static area
                                  1-26  
                        000010    1-27  	equ	stack_header.clr_ptr,8		ptr to area containing linkage sections
                        000012    1-28  	equ	stack_header.max_lot_size,10		number of words allowed in lot (DU)
                        000012    1-29  	equ	stack_header.main_proc_invoked,10	nonzero if main proc was invoked in run unit (DL)
                        000012    1-30  	equ	stack_header.run_unit_depth,10	number of active run units stacked (DL)
                        000013    1-31  	equ	stack_header.cur_lot_size,11		DU number of words (entries) in lot
                        000013    1-32            equ	stack_header.cpm_enabled,11		DL  non-zero if control point management is enabled
                        000014    1-33  	equ	stack_header.system_free_ptr,12	ptr to system storage area
                        000016    1-34  	equ	stack_header.user_free_ptr,14		ptr to user storage area
                                  1-35  
                        000020    1-36  	equ	stack_header.parent_ptr,16		ptr to parent stack or null
                        000022    1-37  	equ	stack_header.stack_begin_ptr,18	ptr to first stack frame
                        000024    1-38  	equ	stack_header.stack_end_ptr,20		ptr to next useable stack frame
                        000026    1-39  	equ	stack_header.lot_ptr,22		ptr to the lot for the current ring
                                  1-40  
                        000030    1-41  	equ	stack_header.signal_ptr,24		ptr to signal proc for current ring
                        000032    1-42  	equ	stack_header.bar_mode_sp,26		value of sp before entering bar mode
                        000034    1-43  	equ	stack_header.pl1_operators_ptr,28	ptr: pl1_operators_$operator_table
                        000036    1-44  	equ	stack_header.call_op_ptr,30		ptr to standard call operator
                                  1-45  
                        000040    1-46  	equ	stack_header.push_op_ptr,32		ptr to standard push operator
                        000042    1-47  	equ	stack_header.return_op_ptr,34		ptr to standard return operator
                        000044    1-48  	equ	stack_header.ret_no_pop_op_ptr,36	ptr: stand. return/ no pop operator
                        000046    1-49  	equ	stack_header.entry_op_ptr,38		ptr to standard entry operator
                                  1-50  
                        000050    1-51  	equ	stack_header.trans_op_tv_ptr,40	ptr to table of translator operator ptrs
                        000052    1-52  	equ	stack_header.isot_ptr,42		pointer to ISOT
                        000054    1-53  	equ	stack_header.sct_ptr,44		pointer to System Condition Table
                        000056    1-54  	equ	stack_header.unwinder_ptr,46		pointer to unwinder for current ring
                                  1-55  
                        000060    1-56  	equ	stack_header.sys_link_info_ptr,48	ptr to *system link name table
                        000062    1-57  	equ	stack_header.rnt_ptr,50		ptr to reference name table
                        000064    1-58  	equ	stack_header.ect_ptr,52		ptr to event channel table
                        000066    1-59  	equ	stack_header.assign_linkage_ptr,54	ptr to area for hcs_$assign_linkage calls
                        000070    1-60  	equ	stack_header.heap_header_ptr,56	ptr to heap header.
                        000072    1-61  	equ	stack_header.trace_frames,58		stack of trace_catch_ frames
                        000073    1-62  	equ	stach_header.trace_top_ptr,59		trace pointer
                        000074    1-63  	equ	stack_header.in_trace,60		trace antirecurse bit
                        000100    1-64  	equ	stack_header_end,64			length of stack header
                                  1-65  
                                  1-66  
                                  1-67  
                                  1-68  
                        000000    1-69  	equ	trace_frames.count,0		number of trace frames on stack
                        000001    1-70  	equ	trace_frames.top_ptr,1		packed pointer to top one
                                  1-71  
                                  1-72  "	The  following constant is an offset within the  pl1  operators table.
                                  1-73  "	It  references a  transfer vector table.
                                  1-74  
                        000551    1-75  	bool	tv_offset,551
                                  1-76  
                                  1-77  
                                  1-78  "	The  following constants are offsets within this transfer vector table.
                                  1-79  
                        001170    1-80  	equ	call_offset,tv_offset+271
                        001171    1-81  	equ	push_offset,tv_offset+272
                        001172    1-82  	equ	return_offset,tv_offset+273
                        001173    1-83  	equ	return_no_pop_offset,tv_offset+274
                        001174    1-84  	equ	entry_offset,tv_offset+275
                                  1-85  
                                  1-86  
                                  1-87  " 	END INCLUDE FILE stack_header.incl.alm
                                    18  "
                                    19  "	**********INTERNAL CODE TO GET LP  (should be replaced by macro)**********
                                    20  
    000000                          21  mrd_module:
    000000  0a   000000 3520 00     22  	eppbp	*		get ptr to this seg
    000001  aa  6 00022 2521 20     23  	spribp	sp|18,*		store it
    000002  aa  6 00022 2351 20     24  	lda	sp|18,*		get seg number
    000003  aa  7 00026 2351 61     25  	lda	sb|stack_header.lot_ptr,*au	get LOT entry
    000004  aa   000000 3310 01     26  	easplp	0,au		get seg number in lp
    000005  aa   000000 3300 05     27  	eawplp	0,al		get offset in lp
                                    28  
    000006  0a   000007 7100 16     29  	tra	*+1,6		go to proper transfer instruction
                                    30  
    000007  4a  4 00010 7101 20     31  	tra	<mrdim_>|[mrd_attach]
    000010  4a  4 00012 7101 20     32  	tra	<mrdim_>|[mrd_detach]
    000011  4a  4 00014 7101 20     33  	tra	<mrdim_>|[mrd_read]
    000012  4a  4 00016 7101 20     34  	tra	<mrdim_>|[mrd_write]
    000013  4a  4 00020 7101 20     35  	tra	<mrdim_>|[mrd_abort]
    000014  4a  4 00022 7101 20     36  	tra	<mrdim_>|[mrd_order]
    000015  4a  4 00024 7101 20     37  	tra	<mrdim_>|[mrd_resetread]
    000016  4a  4 00026 7101 20     38  	tra	<mrdim_>|[mrd_resetwrite]
    000017  4a  4 00030 7101 20     39  	tra	<ios_>|[no_entry]
    000020  4a  4 00032 7101 20     40  	tra	<mrdim_>|[mrd_getsize]
    000021  4a  4 00030 7101 20     41  	tra	<ios_>|[no_entry]
    000022  4a  4 00030 7101 20     42  	tra	<ios_>|[no_entry]
    000023  4a  4 00030 7101 20     43  	tra	<ios_>|[no_entry]
    000024  4a  4 00030 7101 20     44  	tra	<ios_>|[no_entry]
    000025  4a  4 00034 7101 20     45  	tra	<mrdim_>|[mrd_changemode]
    000026  4a  4 00030 7101 20     46  	tra	<ios_>|[no_entry]
    000027  4a  4 00030 7101 20     47  	tra	<ios_>|[no_entry]
    000030  4a  4 00030 7101 20     48  	tra	<ios_>|[no_entry]
    000031  4a  4 00030 7101 20     49  	tra	<ios_>|[no_entry]
    000032  4a  4 00030 7101 20     50  	tra	<ios_>|[no_entry]
    000033  4a  4 00030 7101 20     51  	tra	<ios_>|[no_entry]
                                    52  
                                    53  	end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    000034  5a   000003 000000 
    000035  5a   000025 600000 
    000036  aa   000000 000000 
    000037  55   000010 000002 
    000040  5a   000002 400003 
    000041  55   000006 000010 
    000042  aa  004 155 162 144
    000043  aa  137 000 000 000
    000044  55   000016 000003 
    000045  0a   000000 400000 
    000046  55   000013 000003 
    000047  aa  012 155 162 144         mrd_module
    000050  aa  137 155 157 144
    000051  aa  165 154 145 000
    000052  55   000002 000010 
    000053  6a   000000 400002 
    000054  55   000021 000003 
    000055  aa  014 163 171 155         symbol_table
    000056  aa  142 157 154 137
    000057  aa  164 141 142 154
    000060  aa  145 000 000 000

DEFINITIONS HASH TABLE

    000061  aa   000000 000015 
    000062  aa   000000 000000 
    000063  aa   000000 000000 
    000064  aa   000000 000000 
    000065  aa   000000 000000 
    000066  5a   000010 000000 
    000067  aa   000000 000000 
    000070  5a   000016 000000 
    000071  aa   000000 000000 
    000072  aa   000000 000000 
    000073  aa   000000 000000 
    000074  aa   000000 000000 
    000075  aa   000000 000000 
    000076  aa   000000 000000 

EXTERNAL NAMES

    000077  aa  016 155 162 144         mrd_changemode
    000100  aa  137 143 150 141
    000101  aa  156 147 145 155
    000102  aa  157 144 145 000
    000103  aa  013 155 162 144         mrd_getsize
    000104  aa  137 147 145 164
    000105  aa  163 151 172 145
    000106  aa  010 156 157 137         no_entry
    000107  aa  145 156 164 162
    000110  aa  171 000 000 000
    000111  aa  004 151 157 163         ios_
    000112  aa  137 000 000 000
    000113  aa  016 155 162 144         mrd_resetwrite
    000114  aa  137 162 145 163
    000115  aa  145 164 167 162
    000116  aa  151 164 145 000
    000117  aa  015 155 162 144         mrd_resetread
    000120  aa  137 162 145 163
    000121  aa  145 164 162 145
    000122  aa  141 144 000 000
    000123  aa  011 155 162 144         mrd_order
    000124  aa  137 157 162 144
    000125  aa  145 162 000 000
    000126  aa  011 155 162 144         mrd_abort
    000127  aa  137 141 142 157
    000130  aa  162 164 000 000
    000131  aa  011 155 162 144         mrd_write
    000132  aa  137 167 162 151
    000133  aa  164 145 000 000
    000134  aa  010 155 162 144         mrd_read
    000135  aa  137 162 145 141
    000136  aa  144 000 000 000
    000137  aa  012 155 162 144         mrd_detach
    000140  aa  137 144 145 164
    000141  aa  141 143 150 000
    000142  aa  012 155 162 144         mrd_attach
    000143  aa  137 141 164 164
    000144  aa  141 143 150 000
    000145  aa  006 155 162 144         mrdim_
    000146  aa  151 155 137 000

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    000147  aa   000004 000000 
    000150  55   000111 000043 
    000151  aa   000004 000000 
    000152  55   000111 000047 
    000153  aa   000004 000000 
    000154  55   000055 000052 
    000155  aa   000004 000000 
    000156  55   000111 000057 
    000157  aa   000004 000000 
    000160  55   000111 000063 
    000161  aa   000004 000000 
    000162  55   000111 000067 
    000163  aa   000004 000000 
    000164  55   000111 000072 
    000165  aa   000004 000000 
    000166  55   000111 000075 
    000167  aa   000004 000000 
    000170  55   000111 000100 
    000171  aa   000004 000000 
    000172  55   000111 000103 
    000173  aa   000004 000000 
    000174  55   000111 000106 
    000175  aa   000001 000000 
    000176  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    000177  5a   000113 000000 
    000200  5a   000115 000000 
    000201  5a   000117 000000 
    000202  5a   000121 000000 
    000203  5a   000123 000000 
    000204  5a   000125 000000 
    000205  5a   000127 000000 
    000206  5a   000131 000000 
    000207  5a   000133 000000 
    000210  5a   000135 000000 
    000211  5a   000137 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   000034 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000036 
    000007  a2   000000 000000 
    000010  9a   777770 0000 46         mrdim_|mrd_attach
    000011  5a   000155 0000 00
    000012  9a   777766 0000 46         mrdim_|mrd_detach
    000013  5a   000154 0000 00
    000014  9a   777764 0000 46         mrdim_|mrd_read
    000015  5a   000153 0000 00
    000016  9a   777762 0000 46         mrdim_|mrd_write
    000017  5a   000152 0000 00
    000020  9a   777760 0000 46         mrdim_|mrd_abort
    000021  5a   000151 0000 00
    000022  9a   777756 0000 46         mrdim_|mrd_order
    000023  5a   000150 0000 00
    000024  9a   777754 0000 46         mrdim_|mrd_resetread
    000025  5a   000147 0000 00
    000026  9a   777752 0000 46         mrdim_|mrd_resetwrite
    000027  5a   000146 0000 00
    000030  9a   777750 0000 46         ios_|no_entry
    000031  5a   000145 0000 00
    000032  9a   777746 0000 46         mrdim_|mrd_getsize
    000033  5a   000144 0000 00
    000034  9a   777744 0000 46         mrdim_|mrd_changemode
    000035  5a   000143 0000 00
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000004 
    000004  aa   000000 114732 
    000005  aa   732732 062314 
    000006  aa   000000 114775 
    000007  aa   667210 466740 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000154 
    000020  aa   000000 000127 
    000021  aa   000000 000136 
    000022  aa   000145 000127 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   040066 056067 
    000030  aa   040040 117143 
    000031  aa   164157 142145 
    000032  aa   162040 061071 
    000033  aa   070066 040040 
    000034  aa   107112 157150 
    000035  aa   156163 157156 
    000036  aa   056123 171163 
    000037  aa   115141 151156 
    000040  aa   164056 141040 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   154151 163164 
    000045  aa   040040 040040 
    000046  aa   040040 040040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040040 040040 
    000057  aa   040040 040040 
    000060  aa   040040 040040 
    000061  aa   040040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000002 
    000066  aa   000076 000051 
    000067  aa   147740 446373 
    000070  aa   000000 114774 
    000071  aa   461306 400000 
    000072  aa   000111 000066 
    000073  aa   147714 750316 
    000074  aa   000000 114774 
    000075  aa   453561 000000 
    000076  aa   076163 160145          >special_ldd>install>MR12.0-1206>mrd_.alm
    000077  aa   143151 141154 
    000100  aa   137154 144144 
    000101  aa   076151 156163 
    000102  aa   164141 154154 
    000103  aa   076115 122061 
    000104  aa   062056 060055 
    000105  aa   061062 060066 
    000106  aa   076155 162144 
    000107  aa   137056 141154 
    000110  aa   155040 040040 
    000111  aa   076163 160145          >special_ldd>install>MR12.0-1206>stack_header.incl.alm
    000112  aa   143151 141154 
    000113  aa   137154 144144 
    000114  aa   076151 156163 
    000115  aa   164141 154154 
    000116  aa   076115 122061 
    000117  aa   062056 060055 
    000120  aa   061062 060066 
    000121  aa   076163 164141 
    000122  aa   143153 137150 
    000123  aa   145141 144145 
    000124  aa   162056 151156 
    000125  aa   143154 056141 
    000126  aa   154155 040040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

        1170    call_offset              stack_header:        80.
        1174    entry_offset             stack_header:        84.
                ios_                     mrd_:          39,   41,   42,   43,   44,   46,   47,   48,   49,   50,   51.
                mrdim_                   mrd_:          31,   32,   33,   34,   35,   36,   37,   38,   40,   45.
                mrd_abort                mrd_:          35.
                mrd_attach               mrd_:          31.
                mrd_changemode           mrd_:          45.
                mrd_detach               mrd_:          32.
                mrd_getsize              mrd_:          40.
           0    mrd_module               mrd_:          15,   21.
                mrd_order                mrd_:          36.
                mrd_read                 mrd_:          33.
                mrd_resetread            mrd_:          37.
                mrd_resetwrite           mrd_:          38.
                mrd_write                mrd_:          34.
                no_entry                 mrd_:          39,   41,   42,   43,   44,   46,   47,   48,   49,   50,   51.
        1171    push_offset              stack_header:        81.
        1173    return_no_pop_offset     stack_header:        83.
        1172    return_offset            stack_header:        82.
          73    stach_header.trace_top_ptr     stack_header:        62.
          66    stack_header.assign_linkage_ptr      stack_header:        59.
          32    stack_header.bar_mode_sp       stack_header:        42.
          36    stack_header.call_op_ptr       stack_header:        44.
          10    stack_header.clr_ptr     stack_header:        27.
           6    stack_header.combined_stat_ptr       stack_header:        25.
           4    stack_header.cpm_data_ptr      stack_header:        24.
          13    stack_header.cpm_enabled       stack_header:        32.
          13    stack_header.cur_lot_size      stack_header:        31.
          64    stack_header.ect_ptr     stack_header:        58.
          46    stack_header.entry_op_ptr      stack_header:        49.
          70    stack_header.heap_header_ptr   stack_header:        60.
          74    stack_header.in_trace    stack_header:        63.
          52    stack_header.isot_ptr    stack_header:        52.
          26    stack_header.lot_ptr     mrd_:          25,
                                         stack_header:        39.
          12    stack_header.main_proc_invoked       stack_header:        29.
          12    stack_header.max_lot_size      stack_header:        28.
          20    stack_header.parent_ptr  stack_header:        36.
          34    stack_header.pl1_operators_ptr       stack_header:        43.
          40    stack_header.push_op_ptr       stack_header:        46.
          42    stack_header.return_op_ptr     stack_header:        47.
          44    stack_header.ret_no_pop_op_ptr       stack_header:        48.
          62    stack_header.rnt_ptr     stack_header:        57.
          12    stack_header.run_unit_depth    stack_header:        30.
          54    stack_header.sct_ptr     stack_header:        53.
          30    stack_header.signal_ptr  stack_header:        41.
          22    stack_header.stack_begin_ptr   stack_header:        37.
          24    stack_header.stack_end_ptr     stack_header:        38.
          14    stack_header.system_free_ptr   stack_header:        33.
          60    stack_header.sys_link_info_ptr       stack_header:        56.
          72    stack_header.trace_frames      stack_header:        61.
          50    stack_header.trans_op_tv_ptr   stack_header:        51.
          56    stack_header.unwinder_ptr      stack_header:        54.
          16    stack_header.user_free_ptr     stack_header:        34.
         100    stack_header_end         stack_header:        64.
           0    trace_frames.count       stack_header:        69.
           1    trace_frames.top_ptr     stack_header:        70.
         551    tv_offset                stack_header:        75,   80,   81,   82,   83,   84.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
