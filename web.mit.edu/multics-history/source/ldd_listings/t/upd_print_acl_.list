	COMPILATION LISTING OF SEGMENT upd_print_acl_
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/15/82  1724.4 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 upd_print_acl_:	procedure (aclp, n, sws);
       12 
       13 
       14 /*
       15*
       16*	This procedure will print a standard-format access control
       17*	list on the user's terminal.  Procedure cv_acl_ is called to
       18*	format each entry.  Options allow the mode field, 
       19*	and error message corresponding to the status code to be
       20*	suppressed.  When extended access is fully implemented, it
       21*	is expected that a fourth argument to upd_print_acl_ will specify
       22*	the acl type.
       23*
       24*	P. Bos, May 1972
       25*
       26*	Modified Apr. 3, 1973 by Peter B. Kelley	to change acl structure for new
       27*						hcs_ acl primitives.
       28*
       29**/
       30 
       31      dcl	aclp			ptr,		/* pointer to acl array */
       32 	n			fixed bin,	/* size of array */
       33 	sws			bit(*);		/* option bits */
       34 
       35      dcl	cv_acl_			entry (ptr, fixed bin, char(*), fixed bin, bit(*)),
       36 	ios_$write		entry (char(*), ptr, fixed bin, fixed bin, fixed bin, bit(72) aligned);
       37 
       38      dcl (addr, null, substr)		builtin;
       39 
       40      dcl (nl			char(1) init ("
       41 "),	noacl			char(15) init ("	ACL is empty.
       42 "),	tab			char(1) init ("	")) aligned int static;
       43 
       44      dcl	1 characters		auto,
       45 	  2 tab			char (1),		/* tab at beginning of every line. */
       46 	  2 string		char (160);	/* sufficiently large output string */
       47 
       48      dcl (i, len, nelemt)		fixed bin;
       49 
       50      dcl	status_code		bit(72) aligned;	/* an IO system status code. */
       51 
       52      dcl	1 acl (n)			aligned based (aclp),	/* acl array */
       53 	  2 userid		char(32),		/* user name for this entry */
       54 	  2 mode			bit (36),		/* 1-3 "rew", rest 0 */
       55 	  2 pad 			bit (36),		/* must be 0 */
       56 	  2 code			fixed bin (35);     /* error code */
       57 
       58 /**/
       59 
       60 /*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
       61 
       62 
       63 	if aclp ^= null then if n ^= 0 then		/* check for empty acl */
       64 	     go to skip;				/* no, go print */
       65 	call ios_$write ("installation_list_", addr (noacl), 0, 15, nelemt, status_code);
       66 						/* yes, print message, */
       67 	return;					/* and exit */
       68 
       69 skip:	characters.tab = tab;			/* initialize tab character. */
       70 	do i = 1 to n;				/* list acl in order */
       71 	     call cv_acl_(aclp, i, string, len, sws);	/* format this entry */
       72 	     len = len + 1;				/* make room for new_line */
       73 	     if len > 160 then			/* make sure our cup doesn't run over */
       74 		len = 160;			/* adjust if so */
       75 	     substr (string, len, 1) = nl;		/* insert new_line */
       76 	     call ios_$write ("installation_list_", addr (characters), 0, len+1, nelemt, status_code);
       77 						/* write it on user_output */
       78 	     end;
       79 
       80 	return;					/* done */
       81 
       82 
       83 	end upd_print_acl_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/15/82  1514.4  upd_print_acl_.pl1                >dumps>old>recomp>upd_print_acl_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
aclp                                   parameter       pointer                  dcl 31 set ref 11 63 71*
addr                                                   builtin function         dcl 38 ref 65 65 76 76
characters                      000100 automatic       structure                level 1 packed unaligned dcl 44 set ref 76 76
cv_acl_                         000014 constant        entry                    external dcl 35 ref 71
i                               000151 automatic       fixed bin(17,0)          dcl 48 set ref 70* 71*
ios_$write                      000016 constant        entry                    external dcl 35 ref 65 76
len                             000152 automatic       fixed bin(17,0)          dcl 48 set ref 71* 72* 72 73 73* 75 76
n                                      parameter       fixed bin(17,0)          dcl 31 ref 11 63 70
nelemt                          000153 automatic       fixed bin(17,0)          dcl 48 set ref 65* 76*
nl                                     constant        char(1)                  initial dcl 40 ref 75
noacl                           000010 internal static char(15)                 initial dcl 40 set ref 65 65
null                                                   builtin function         dcl 38 ref 63
status_code                     000154 automatic       bit(72)                  dcl 50 set ref 65* 76*
string                    0(09) 000100 automatic       char(160)                level 2 packed unaligned dcl 44 set ref 71* 75*
substr                                                 builtin function         dcl 38 set ref 75*
sws                                    parameter       bit                      unaligned dcl 31 set ref 11 71*
tab                             000100 automatic       char(1)                  level 2 in structure "characters" packed unaligned
                                                                                  dcl 44 in procedure "upd_print_acl_" set ref 69*
tab                                    constant        char(1)                  initial dcl 40 in procedure "upd_print_acl_" ref 69

NAME DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
acl                                    based           structure                array level 1 dcl 52

NAMES DECLARED BY EXPLICIT CONTEXT.
skip                            000111 constant        label                    dcl 69 ref 63
upd_print_acl_                  000021 constant        entry                    external dcl 11

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       302         322     240         312
Length       470     240        20         131      41           4

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
upd_print_acl_                      148 external procedure  is an external procedure.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 noacl                       upd_print_acl_

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
upd_print_acl_           000100 characters                  upd_print_acl_
                         000151 i                           upd_print_acl_
                         000152 len                         upd_print_acl_
                         000153 nelemt                      upd_print_acl_
                         000154 status_code                 upd_print_acl_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   return              ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cv_acl_                       ios_$write

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000015        63 000034        65 000043        67 000110        69 000111        70 000113        71 000121
     72 000155        73 000156        75 000163        76 000166        78 000235        80 000237


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
