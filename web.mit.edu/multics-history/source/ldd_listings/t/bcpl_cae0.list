Compilation listing of file >2.1spec>online>mib083074>bcpl_cae0.bcpl.
Compilation performed for Martinson.SysMaint.a at 01/24/75  0649.0 mst Fri.
Compiled by BCPL version 3.4, August 1973.  Compiler updated at 09/25/73  0959.1 mst Tue.
Options applied:  source  xref  alist  optimize  6180.

     1	//  Miscellaneous tree-building routines.
     2	//  Last modified on 06/06/74 at 18:03:09 by R F Mabee.
     3	//  Installed on 6180 as Version 3.4, R F Mabee.
     4	//  First installed on 645 as Version 2.7, R F Mabee.
     5	
     6	//  Copyright (c) 1974 by Massachusetts Institute of Technology and Honeywell Information Systems, Inc.
     7	
     8	//  General permission is granted to copy and use this program, but not to sell it, provided that the above
     9	//  copyright statement is given.  Contact Information Processing Services, MIT, for further information.
    10	//  Please contact R F Mabee at MIT for information on this program and versions for other machines.
    11	
    12	get "bcpl_cae_head"
	     1	//  Declarations for the syntax analyzer (Cae).
	     2	//  Last modified on 07/08/73 at 23:02:53 by R F Mabee.
	     3	//  Installed after 6180 bootstrap in Version 3.4 by R F Mabee.
	     4	//  First installed in Version 2.7, R F Mabee.
	     5	
	     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
	     7	//  This file may only be reproduced or modified with explicit written
	     8	//  permission of the author.  Permission is hereby extended to those
	     9	//  persons responsible for operating the Multics system to make such
	    10	//  copies as are normally required to ensure the integrity of the Multics
	    11	//  file system.  Permission is also hereby extended to those persons
	    12	//  responsible for maintaining the Multics program libraries to make such
	    13	//  copies as are normally required for online installations.
	    14	
	    15	get "bcpl_compiler_head"
		     1	//  Declarations common to the entire BCPL compiler.
		     2	//  Last modified on 07/28/73 at 03:56:32 by R F Mabee.
		     3	//  Installed on 6180 as Version 3.4, R F Mabee.
		     4	//  First installed on 645 as Version 2.7 by R F Mabee.
		     5	
		     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
		     7	//  This file may only be reproduced or modified with explicit written
		     8	//  permission of the author.  Permission is hereby extended to those
		     9	//  persons responsible for operating the Multics system to make such
		    10	//  copies as are normally required to ensure the integrity of the Multics
		    11	//  file system.  Permission is also hereby extended to those persons
		    12	//  responsible for maintaining the Multics program libraries to make such
		    13	//  copies as are normally required for online installations.
		    14	
		    15	external
		    16	     $(	Readch = "bcpl_machine_code_$Readch"		//  Library routines used by the compiler.
		    17		Writech = "bcpl_machine_code_$Writech"
		    18		WriteS = "bcpl_stream_io_$WriteS"
		    19		WriteN = "bcpl_stream_io_$WriteN"
		    20		Format = "bcpl_stream_io_$Format"
		    21		Packstring = "bcpl_machine_code_$Packstring"
		    22		Unpackstring = "bcpl_machine_code_$Unpackstring"
		    23		RemoveEscapes = "bcpl_conversions_$RemoveEscapes"
		    24		EqualString = "bcpl_strings_$EqualString"
		    25		CompareStrings = "bcpl_strings_$CompareStrings"	//  Alphabetic comparison.
		    26		Concatenate = "bcpl_strings_$Concatenate"
		    27		ConvertStoN = "bcpl_conversions_$ConvertStoN"
		    28		ConvertNtoS = "bcpl_conversions_$ConvertNtoS"
		    29		Length = "bcpl_strings_$Length"		//  Number of characters.
		    30		LengthInWords = "bcpl_strings_$LengthInWords"	//  Length of packed string.
		    31		RandomI = "bcpl_arithmetic_$RandomI"
		    32	
		    33		Newvec = "bcpl_utility$Newvec"		//  Utility routines used throughout the compiler.
		    34		Freevec = "bcpl_utility$Freevec"
		    35		List1 = "bcpl_utility$List1"
		    36		List2 = "bcpl_utility$List2"
		    37		List3 = "bcpl_utility$List3"
		    38		List4 = "bcpl_utility$List4"
		    39		List5 = "bcpl_utility$List5"
		    40		List6 = "bcpl_utility$List6"
		    41		StoreString = "bcpl_utility$StoreString"
		    42		PushInput = "bcpl_utility$PushInput"
		    43		PopInput = "bcpl_utility$PopInput"
		    44		MakeTimeString = "bcpl_utility$MakeTimeString"
		    45		Nextparam = "bcpl_utility$Nextparam"
		    46		FormCharconst = "bcpl_utility$FormCharconst"
		    47		FormStringconst = "bcpl_utility$FormStringconst"
		    48	
		    49		CaeReport = "bcpl_report$CaeReport"
		    50		Transreport = "bcpl_report$Transreport"
		    51		CGreport = "bcpl_report$CGreport"
		    52	
		    53		Nextsymb = "bcpl_lex0$Nextsymb"
		    54	
		    55		SymbolName = "bcpl_plist$SymbolName"
		    56		FindPrintName = "bcpl_plist$FindPrintName"
		    57		EnterIntoCrossreference = "bcpl_plist$EnterIntoCrossreference"
		    58	
		    59		GetVersion = "bcpl_version$GetVersion"		//  Routines used only by the driver.
		    60		UtilitiesInit = "bcpl_utility$UtilitiesInit"
		    61		Cleanup = "bcpl_utility$Cleanup"
		    62		GetStream = "bcpl_utility$GetStream"
		    63	
		    64		CAE = "bcpl_cae0$CAE"
		    65		LexInit = "bcpl_lex0$LexInit"
		    66	
		    67		Pname = "bcpl_plist$Pname"
		    68		Plist = "bcpl_plist$Plist"
		    69	
		    70		Trans = "bcpl_trans0$Trans"
		    71		CgInit = "bcpl_cg0$CgInit"
		    72		BuildObject = "bcpl_cg0$BuildObject"
		    73		WriteObjectListing = "bcpl_cg0$WriteObjectListing"
		    74	     $)
		    75	
		    76	global		//  Globals are reserved in blocks as follows:
		    77	     $(	//    0 -  31	system
		    78		//   32 -  99	library
		    79		//  100 - 149	options and other common cells
		    80		//  150 - 159	metering cells
		    81		//  160 - 169	bcpl_utility
		    82		//  170 - 199	to be assigned
		    83		//  200 - 229	lexical phase
		    84		//  230 - 249	syntax analyzer
		    85		//  250 - 299	translator
		    86		//  300 - 399	code generator
		    87	
		    88			//  Cells used for communication with the library.
		    89		OUTPUT		: 32
		    90		INPUT		: 33
		    91		MONITOR		: 34
		    92		Ch		: 36
		    93	
		    94			//  Options for this compilation.
		    95		Listing		: 100
		    96		UpperCase		: 101
		    97		PPrep		: 102
		    98		Crep		: 103
		    99		Symbols		: 104
		   100		LineMap		: 105
		   101		Optimize		: 106
		   102		Machine		: 107
		   103		Xref		: 108
		   104		OcodeSw		: 109
		   105		HaveListingFile	: 110
		   106		QuietSw		: 111
		   107	
		   108			//  Other information about this compilation.
		   109		CompilerVersionString : 120
		   110		CompilerVersionNumber : 121
		   111		CompilerDTMString	: 122
		   112		CompilerDTM	: 123
		   113		TimeNowString	: 124
		   114		TimeNow		: 125
		   115		OptionString	: 126
		   116		FileNames		: 127
		   117		FilesInfo		: 128
		   118		FileCount		: 129
		   119		ProgramName	: 130
		   120		UserID		: 131
		   121	
		   122			//  Working variables needing global scope.
		   123		LineCount		: 140
		   124		Errorsw		: 141
		   125		NAMECHAIN		: 142
		   126		Symb		: 143
		   127		DictionaryEntry	: 144
		   128		Column		: 145
		   129	     $)
		   130	manifest
		   131	     $(	GlobalTemp = 199  $)	//  Number of cell available for local, temporary use.
		   132	
		   133	manifest
		   134	     $(	Left = 18; Right = $8777777
		   135		Endofstreamch = $87777
		   136		Even = $87777777777776
		   137		Vmax = 511
		   138		LineMask = $817777; FileShift = 13	//  Breakdown of line count.
		   139		UnexpectedCase = 99		//  Error code for use throughout compiler.
		   140	     $)
	    16	get "bcpl_symbols"
		     1	//  All symbols used in the interface between any two phases of the compiler are defined here.
		     2	//  This includes all canonical symbols, syntax tree nodes, and XOCODE operators.
		     3	//  Last modified on 07/08/73 at 22:55:31 by R F Mabee.
		     4	//  Revisions installed in Version 3.4 on 6180, R F Mabee.
		     5	//  First installed with Version 2.7 by R F Mabee.
		     6	
		     7	//  Copyright (c) 1973 by the author, Robert F. Mabee.
		     8	//  This file may only be reproduced or modified with explicit written
		     9	//  permission of the author.  Permission is hereby extended to those
		    10	//  persons responsible for operating the Multics system to make such
		    11	//  copies as are normally required to ensure the integrity of the Multics
		    12	//  file system.  Permission is also hereby extended to those persons
		    13	//  responsible for maintaining the Multics program libraries to make such
		    14	//  copies as are normally required for online installations.
		    15	
		    16	manifest
		    17	     $(	AND_S = 1
		    18		ASSIGN_S = 2
		    19		BE_S = 3
		    20		BIT_S = 4
		    21		BREAK_S = 5
		    22		BY_S = 6
		    23		CALL_S = 07
		    24		CASE_S = 08
		    25	
		    26		CHAR_S = 10
		    27		CHARCONST_S = 11
		    28		COLON_S = 12
		    29		COMMA_S = 13
		    30		COND_S = 14
		    31		CONSTANT_S = 15
		    32		CONSTDEF_S = 16
		    33		DEFAULT_S = 17
		    34		DIV_F = 18
		    35	
		    36		DIV_S = 20
		    37		DO_S = 21
		    38		DOUBLE_S = 22
		    39		ENDCASE_S = 23
		    40		ENDPROG_S = 24
		    41		ERROR_S = 25
		    42		EQ_F = 26
		    43		EQ_S = 27
		    44		EQV_S = 28
		    45	
		    46		EXTERNAL_S = 30
		    47		FALSE_S = 31
		    48		FINISH_S = 32
		    49		FIXED_S = 33
		    50		FLOAT_S = 34
		    51		FNAP_S = 35
		    52		FNDEF_S = 36
		    53		FOR_S = 37
		    54		GE_F = 38
		    55	
		    56		GE_S = 40
		    57		GET_S = 41
		    58		GLOBAL_S = 42
		    59		GOTO_S = 43
		    60		GR_F = 44
		    61		GR_S = 45
		    62		IF_S = 46
		    63		IFNOT_S = 47
		    64		IFSO_S = 48
		    65	
		    66		INTO_S = 50
		    67		LABDEF_S = 51
		    68		LABEL_S = 52
		    69		LE_F = 53
		    70		LE_S = 54
		    71		LENGTH_S = 55
		    72		LET_S = 56
		    73		LIST_S = 57
		    74		LOCAL_S = 58
		    75	
		    76		LOGAND_S = 60
		    77		LOGOR_S = 61
		    78		LOOP_S = 62
		    79		LS_F = 63
		    80		LS_S = 64
		    81		LSHIFT_S = 65
		    82		LV_S = 66
		    83		LVECAP_S = 67
		    84		LV_ARG_OUT = 68
		    85	
		    86		LV_FNAP_RESULT = 70
		    87		LV_GLOBAL = 71
		    88		LV_LOCAL = 72
		    89		LV_STATIC = 73
		    90		LV_TEMP = 74
		    91		MAIN_S = 75
		    92		MANIFEST_S = 76
		    93		MINUS_F = 77
		    94		MINUS_S = 78
		    95	
		    96		MULT_F = 80
		    97		MULT_S = 81
		    98		NAME_S = 82
		    99		NEG_F = 83
		   100		NEG_S = 84
		   101		NEQV_S = 85
		   102		NE_F = 86
		   103		NE_S = 87
		   104		NIL_S = 88
		   105	
		   106		NOT_S = 90
		   107		NUMBER_S = 91
		   108		OFFSET_S = 92
		   109		OR_S = 93
		   110		PLUS_F = 94
		   111		PLUS_S = 95
		   112		POINTER_S = 96
		   113		POS_F = 97
		   114		POS_S = 98
		   115	
		   116		RBRA_S = 100
		   117		REGISTER_S = 101
		   118		REL_S = 102
		   119		REM_S = 103
		   120		REP_S = 104
		   121		REPEAT_S = 105
		   122		REPEATUNTIL_S = 106
		   123		REPEATWHILE_S = 107
		   124		RESULTIS_S = 108
		   125	
		   126		RETURN_S = 110
		   127		RKET_S = 111
		   128		RSHIFT_S = 112
		   129		RTAP_S = 113
		   130		RTDEF_S = 114
		   131		RV_S = 115
		   132		SBRA_S = 116
		   133		SECTBEGIN_S = 117
		   134		SECTBRA_S = 118
		   135	
		   136		SECTEND_S = 120
		   137		SECTKET_S = 121
		   138		SEMICOLON_S = 122
		   139		SKET_S = 123
		   140		STATIC_S = 124
		   141		STRING_S = 125
		   142		STRINGCONST_S = 126
		   143		STRUCTURE_S = 127
		   144		SWITCHON_S = 128
		   145	
		   146		TABLE_S = 130
		   147		TEMP_S = 131
		   148		TEST_S = 132
		   149		TO_S = 133
		   150		TRUE_S = 134
		   151		TYPE_S = 135
		   152		UNLESS_S = 136
		   153		UNTIL_S = 137
		   154		VALDEF_S = 138
		   155	
		   156		VALOF_S = 140
		   157		VEC_S = 141
		   158		VECAP_S = 142
		   159		WHILE_S = 143
		   160	     $)
	    17	get "bcpl_cae_codes"
		     1	//  Report codes for the syntax analyzer.
		     2	//  Last modified on 07/05/73 at 23:04:24 by R F Mabee.
		     3	//  Installed on 6180 as Version 3.4, R F Mabee.
		     4	//  First installed as Version 2.7, R F Mabee.
		     5	
		     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
		     7	//  This file may only be reproduced or modified with explicit written
		     8	//  permission of the author.  Permission is hereby extended to those
		     9	//  persons responsible for operating the Multics system to make such
		    10	//  copies as are normally required to ensure the integrity of the Multics
		    11	//  file system.  Permission is also hereby extended to those persons
		    12	//  responsible for maintaining the Multics program libraries to make such
		    13	//  copies as are normally required for online installations.
		    14	
		    15	manifest		//  150 - 199 are reserved for Cae.
		    16	     $(	BlockExpected	= 150
		    17		ExpressionMissing	= 151
		    18		IncompleteCommand	= 152
		    19		MalformedDeclaration= 153
		    20		MalformedTest	= 154
		    21		MisplacedDeclaration= 155
		    22		MissingCOLON	= 156
		    23		MissingCOMMA	= 157
		    24		MissingDO		= 158
		    25	
		    26		MissingINTO	= 160
		    27		MissingRKET	= 161
		    28		MissingSECTKET	= 162
		    29		MissingSKET	= 163
		    30		MissingTO		= 164
		    31		NameExpected	= 165
		    32		PrematureTermination= 166
		    33		UnrecognizedCommand	= 167
		    34		ValdefExpected	= 168
		    35	     $)
	    18	
	    19	external		//  Routines of Cae, not referenced outside this phase.
	    20	     $(	Rblock = "bcpl_cae0$Rblock"
	    21		Rdef = "bcpl_cae0$Rdef"
	    22		Rdeclbody = "bcpl_cae0$Rdeclbody"
	    23		Rname = "bcpl_cae0$Rname"
	    24		Rnamelist = "bcpl_cae0$Rnamelist"
	    25		ReadList = "bcpl_cae0$ReadList"
	    26	
	    27		Rexp = "bcpl_cae1$Rexp"
	    28		Rcom = "bcpl_cae2$Rcom"
	    29	     $)
	    30	global		//  230 - 249 are reserved for Cae.
	    31	     $(	LabelList	: 230
	    32		ErrorNode	: 231
	    33	     $)
    13	
    14	let Rblock (Rbody, Arg) = valof
    15	     $(	unless Symb = SECTBRA_S do
    16			test Symb = SECTBEGIN_S
    17			then DictionaryEntry := 0		//  Ignore "tag" for keyword _b_e_g_i_n.
    18			or   $(	CaeReport (BlockExpected)
    19				resultis Rbody (Arg)
    20			     $)
    21		let Tag = DictionaryEntry
    22		Nextsymb ()
    23		let A = Rbody (Arg)
    24		unless Symb = SECTKET_S do
    25			test Symb = SECTEND_S
    26			then DictionaryEntry := 0		//  As above.
    27			or   $(	CaeReport (MissingSECTKET)
    28				resultis A
    29			     $)
    30		if Tag = DictionaryEntry do Nextsymb ()		//  If tag on bracket is same string.
    31		resultis A
    32	     $)
    33	
    34	let Rname () = valof
    35	     $(	unless Symb = NAME_S do
    36		     $(	CaeReport (NameExpected)
    37			resultis ErrorNode
    38		     $)
    39		let x = DictionaryEntry
    40		Nextsymb ()
    41		resultis x
    42	     $)
    43	and Rnamelist (PermitREP) = GetCommaNode (Rname, 0, PermitREP)
    44	and GetCommaNode (F, x, PermitREP) = valof
    45	     $(	let Op = LineCount lshift Left | COMMA_S
    46		let v, i, Max = vec 20, 0, 20
    47		     $(	i := i + 1
    48			v!i := F (x)
    49			if Symb = REP_S & PermitREP do
    50			     $(	let Xop = LineCount lshift Left | REP_S
    51				Nextsymb ()
    52				v!i := List3 (Xop, v!i, Rexp (0))
    53			     $)
    54			unless Symb = COMMA_S break
    55			Nextsymb ()
    56			if i ge Max do
    57			     $(	let w = Newvec (Max * 2)
    58				for j = 1 to i do w!j := v!j
    59				if Max > 20 do Freevec (v, Max)
    60			v, Max := w, Max * 2
    61			     $)
    62		     $)	repeat
    63		if i = 1 resultis v!1
    64		let r = Newvec (i + 1)
    65		for j = 1 to i do r!(j + 1) := v!j
    66		r!0, r!1 := Op, i
    67		if Max > 20 do Freevec (v, Max)
    68		resultis r
    69	     $)
    70	and ReadList (PermitREP) = GetCommaNode (Rexp, 0, PermitREP)
    71	
    72	let Rdef () = valof
    73	     $(	let A, B, C = nil, nil, nil
    74		let Lc = LineCount lshift Left
    75		A := Rnamelist (false)
    76		test Symb = RBRA_S
    77		then $(	unless (A!0 & Right) = NAME_S do CaeReport (NameExpected)
    78			Nextsymb ()
    79			B := 0
    80			if Symb = NAME_S do B := Rnamelist (true)
    81			test Symb = RKET_S
    82			then Nextsymb ()
    83			or CaeReport (MissingRKET)
    84			let Ll = LabelList
    85			LabelList := 0
    86			let m, Op = 0, Symb
    87			Nextsymb ()
    88			test Op = BE_S
    89			then $(	m := Symb
    90				if m = MAIN_S do Nextsymb ()
    91				C := Rcom (8)
    92				Lc := Lc logor RTDEF_S
    93			     $)
    94			or   $(	unless Op = VALDEF_S do CaeReport (MalformedDeclaration)
    95				C := Rexp (0)
    96				Lc := Lc logor FNDEF_S
    97			     $)
    98			A := List6 (Lc, A, B, C, LabelList, m)
    99			LabelList := Ll
   100		     $)
   101		or   $(	unless Symb = VALDEF_S do CaeReport (MalformedDeclaration)
   102			Nextsymb ()
   103			A := List3 (VALDEF_S logor Lc, A, ReadList (true))
   104		     $)
   105		unless Symb = AND_S resultis A
   106		Lc := LineCount lshift Left
   107		Nextsymb ()
   108		B := Rdef ()
   109		resultis List3 (AND_S logor Lc, A, B)
   110	     $)
   111	
   112	let Rdeclbody (Op) = valof
   113	     $(	let Match = Op = GLOBAL_S -> COLON_S, VALDEF_S
   114		let A, B, C = nil, nil, 0
   115		     $(	A := Rname ()
   116			test Symb = Match
   117			then $(	Nextsymb ()
   118				B := Rexp (0)
   119			     $)
   120			or   $(	unless Op = EXTERNAL_S do CaeReport (MalformedDeclaration)
   121				B := 0
   122			     $)
   123			C := List4 (CONSTDEF_S logor LineCount lshift Left, A, B, C)
   124			unless Symb = SEMICOLON_S break
   125			Nextsymb ()
   126		     $)	repeat
   127		resultis C
   128	     $)
   129	
   130	let CAE () = valof
   131	     $(	LabelList := 0
   132		ErrorNode := List1 (ERROR_S)
   133	
   134		let A = Rcom (0)
   135		unless LabelList = 0 do A := List3 (LABDEF_S, A, LabelList)	//  Make dummy block for left-over labels.
   136	
   137		unless Symb = ENDPROG_S do
   138		     $(	CaeReport (PrematureTermination)
   139			Nextsymb () repeatuntil Symb = ENDPROG_S
   140		     $)
   141		resultis A
   142	     $)



CAE time 4.0, 127 source lines per second.
cross reference table

A			bcpl_cae0:  23, 28, 31, 73, 75, 77, 98, 98, 103, 103, 105, 109, 114, 115, 123, 134, 135, 
			135, 141

AND_S			bcpl_symbols:  17, bcpl_cae0:  105, 109

Arg			bcpl_cae0:  14, 19, 23

ASSIGN_S			bcpl_symbols:  18

B			bcpl_cae0:  73, 79, 80, 98, 108, 109, 114, 118, 121, 123

BE_S			bcpl_symbols:  19, bcpl_cae0:  88

BIT_S			bcpl_symbols:  20

BlockExpected		bcpl_cae_codes:  16, bcpl_cae0:  18

BREAK_S			bcpl_symbols:  21

BuildObject		bcpl_compiler_head:  72

BY_S			bcpl_symbols:  22

C			bcpl_cae0:  73, 91, 95, 98, 114, 123, 123, 127

CAE			bcpl_compiler_head:  64, bcpl_cae0:  130

CaeReport			bcpl_compiler_head:  49, bcpl_cae0:  18, 27, 36, 77, 83, 94, 101, 120, 138

CALL_S			bcpl_symbols:  23

CASE_S			bcpl_symbols:  24

CgInit			bcpl_compiler_head:  71

CGreport			bcpl_compiler_head:  51

Ch			bcpl_compiler_head:  92

CHARCONST_S		bcpl_symbols:  27

CHAR_S			bcpl_symbols:  26

Cleanup			bcpl_compiler_head:  61

COLON_S			bcpl_symbols:  28, bcpl_cae0:  113

Column			bcpl_compiler_head:  128

COMMA_S			bcpl_symbols:  29, bcpl_cae0:  45, 54

CompareStrings		bcpl_compiler_head:  25

CompilerDTM		bcpl_compiler_head:  112

CompilerDTMString		bcpl_compiler_head:  111

CompilerVersionNumber	bcpl_compiler_head:  110

CompilerVersionString	bcpl_compiler_head:  109

Concatenate		bcpl_compiler_head:  26

COND_S			bcpl_symbols:  30

CONSTANT_S		bcpl_symbols:  31

CONSTDEF_S		bcpl_symbols:  32, bcpl_cae0:  123

ConvertNtoS		bcpl_compiler_head:  28

ConvertStoN		bcpl_compiler_head:  27

Crep			bcpl_compiler_head:  98

DEFAULT_S			bcpl_symbols:  33

DictionaryEntry		bcpl_compiler_head:  127, bcpl_cae0:  17, 21, 26, 30, 39

DIV_F			bcpl_symbols:  34

DIV_S			bcpl_symbols:  36

DOUBLE_S			bcpl_symbols:  38

DO_S			bcpl_symbols:  37

ENDCASE_S			bcpl_symbols:  39

Endofstreamch		bcpl_compiler_head:  135

ENDPROG_S			bcpl_symbols:  40, bcpl_cae0:  137, 139

EnterIntoCrossreference	bcpl_compiler_head:  57

EqualString		bcpl_compiler_head:  24

EQV_S			bcpl_symbols:  44

EQ_F			bcpl_symbols:  42

EQ_S			bcpl_symbols:  43

ErrorNode			bcpl_cae_head:  32, bcpl_cae0:  37, 132

Errorsw			bcpl_compiler_head:  124

ERROR_S			bcpl_symbols:  41, bcpl_cae0:  132

Even			bcpl_compiler_head:  136

ExpressionMissing		bcpl_cae_codes:  17

EXTERNAL_S		bcpl_symbols:  46, bcpl_cae0:  120

F			bcpl_cae0:  44, 48

FALSE_S			bcpl_symbols:  47

FileCount			bcpl_compiler_head:  118

FileNames			bcpl_compiler_head:  116

FileShift			bcpl_compiler_head:  138

FilesInfo			bcpl_compiler_head:  117

FindPrintName		bcpl_compiler_head:  56

FINISH_S			bcpl_symbols:  48

FIXED_S			bcpl_symbols:  49

FLOAT_S			bcpl_symbols:  50

FNAP_S			bcpl_symbols:  51

FNDEF_S			bcpl_symbols:  52, bcpl_cae0:  96

Format			bcpl_compiler_head:  20

FormCharconst		bcpl_compiler_head:  46

FormStringconst		bcpl_compiler_head:  47

FOR_S			bcpl_symbols:  53

Freevec			bcpl_compiler_head:  34, bcpl_cae0:  59, 67

GetCommaNode		bcpl_cae0:  43, 44, 70

GetStream			bcpl_compiler_head:  62

GetVersion		bcpl_compiler_head:  59

GET_S			bcpl_symbols:  57

GE_F			bcpl_symbols:  54

GE_S			bcpl_symbols:  56

GlobalTemp		bcpl_compiler_head:  131

GLOBAL_S			bcpl_symbols:  58, bcpl_cae0:  113

GOTO_S			bcpl_symbols:  59

GR_F			bcpl_symbols:  60

GR_S			bcpl_symbols:  61

HaveListingFile		bcpl_compiler_head:  105

i			bcpl_cae0:  46, 47, 47, 48, 52, 52, 56, 58, 63, 64, 65, 66

IFNOT_S			bcpl_symbols:  63

IFSO_S			bcpl_symbols:  64

IF_S			bcpl_symbols:  62

IncompleteCommand		bcpl_cae_codes:  18

INPUT			bcpl_compiler_head:  90

INTO_S			bcpl_symbols:  66

j			bcpl_cae0:  58, 58, 58, 65, 65, 65

LABDEF_S			bcpl_symbols:  67, bcpl_cae0:  135

LabelList			bcpl_cae_head:  31, bcpl_cae0:  84, 85, 98, 99, 131, 135, 135

LABEL_S			bcpl_symbols:  68

Lc			bcpl_cae0:  74, 92, 92, 96, 96, 98, 103, 106, 109

Left			bcpl_compiler_head:  134, bcpl_cae0:  45, 50, 74, 106, 123

Length			bcpl_compiler_head:  29

LengthInWords		bcpl_compiler_head:  30

LENGTH_S			bcpl_symbols:  71

LET_S			bcpl_symbols:  72

LexInit			bcpl_compiler_head:  65

LE_F			bcpl_symbols:  69

LE_S			bcpl_symbols:  70

LineCount			bcpl_compiler_head:  123, bcpl_cae0:  45, 50, 74, 106, 123

LineMap			bcpl_compiler_head:  100

LineMask			bcpl_compiler_head:  138

List1			bcpl_compiler_head:  35, bcpl_cae0:  132

List2			bcpl_compiler_head:  36

List3			bcpl_compiler_head:  37, bcpl_cae0:  52, 103, 109, 135

List4			bcpl_compiler_head:  38, bcpl_cae0:  123

List5			bcpl_compiler_head:  39

List6			bcpl_compiler_head:  40, bcpl_cae0:  98

Listing			bcpl_compiler_head:  95

LIST_S			bcpl_symbols:  73

Ll			bcpl_cae0:  84, 99

LOCAL_S			bcpl_symbols:  74

LOGAND_S			bcpl_symbols:  76

LOGOR_S			bcpl_symbols:  77

LOOP_S			bcpl_symbols:  78

LSHIFT_S			bcpl_symbols:  81

LS_F			bcpl_symbols:  79

LS_S			bcpl_symbols:  80

LVECAP_S			bcpl_symbols:  83

LV_ARG_OUT		bcpl_symbols:  84

LV_FNAP_RESULT		bcpl_symbols:  86

LV_GLOBAL			bcpl_symbols:  87

LV_LOCAL			bcpl_symbols:  88

LV_S			bcpl_symbols:  82

LV_STATIC			bcpl_symbols:  89

LV_TEMP			bcpl_symbols:  90

m			bcpl_cae0:  86, 89, 90, 98

Machine			bcpl_compiler_head:  102

MAIN_S			bcpl_symbols:  91, bcpl_cae0:  90

MakeTimeString		bcpl_compiler_head:  44

MalformedDeclaration	bcpl_cae_codes:  19, bcpl_cae0:  94, 101, 120

MalformedTest		bcpl_cae_codes:  20

MANIFEST_S		bcpl_symbols:  92

Match			bcpl_cae0:  113, 116

Max			bcpl_cae0:  46, 56, 57, 59, 59, 60, 60, 67, 67

MINUS_F			bcpl_symbols:  93

MINUS_S			bcpl_symbols:  94

MisplacedDeclaration	bcpl_cae_codes:  21

MissingCOLON		bcpl_cae_codes:  22

MissingCOMMA		bcpl_cae_codes:  23

MissingDO			bcpl_cae_codes:  24

MissingINTO		bcpl_cae_codes:  26

MissingRKET		bcpl_cae_codes:  27, bcpl_cae0:  83

MissingSECTKET		bcpl_cae_codes:  28, bcpl_cae0:  27

MissingSKET		bcpl_cae_codes:  29

MissingTO			bcpl_cae_codes:  30

MONITOR			bcpl_compiler_head:  91

MULT_F			bcpl_symbols:  96

MULT_S			bcpl_symbols:  97

NAMECHAIN			bcpl_compiler_head:  125

NameExpected		bcpl_cae_codes:  31, bcpl_cae0:  36, 77

NAME_S			bcpl_symbols:  98, bcpl_cae0:  35, 77, 80

NEG_F			bcpl_symbols:  99

NEG_S			bcpl_symbols:  100

NEQV_S			bcpl_symbols:  101

Newvec			bcpl_compiler_head:  33, bcpl_cae0:  57, 64

Nextparam			bcpl_compiler_head:  45

Nextsymb			bcpl_compiler_head:  53, bcpl_cae0:  22, 30, 40, 51, 55, 78, 82, 87, 90, 102, 107, 117, 
			125, 139

NE_F			bcpl_symbols:  102

NE_S			bcpl_symbols:  103

NIL_S			bcpl_symbols:  104

NOT_S			bcpl_symbols:  106

NUMBER_S			bcpl_symbols:  107

OcodeSw			bcpl_compiler_head:  104

OFFSET_S			bcpl_symbols:  108

Op			bcpl_cae0:  45, 66, 86, 88, 94, 112, 113, 120

Optimize			bcpl_compiler_head:  101

OptionString		bcpl_compiler_head:  115

OR_S			bcpl_symbols:  109

OUTPUT			bcpl_compiler_head:  89

Packstring		bcpl_compiler_head:  21

PermitREP			bcpl_cae0:  43, 43, 44, 49, 70, 70

Plist			bcpl_compiler_head:  68

PLUS_F			bcpl_symbols:  110

PLUS_S			bcpl_symbols:  111

Pname			bcpl_compiler_head:  67

POINTER_S			bcpl_symbols:  112

PopInput			bcpl_compiler_head:  43

POS_F			bcpl_symbols:  113

POS_S			bcpl_symbols:  114

PPrep			bcpl_compiler_head:  97

PrematureTermination	bcpl_cae_codes:  32, bcpl_cae0:  138

ProgramName		bcpl_compiler_head:  119

PushInput			bcpl_compiler_head:  42

QuietSw			bcpl_compiler_head:  106

r			bcpl_cae0:  64, 65, 66, 66, 68

RandomI			bcpl_compiler_head:  31

Rblock			bcpl_cae_head:  20, bcpl_cae0:  14

Rbody			bcpl_cae0:  14, 19, 23

RBRA_S			bcpl_symbols:  116, bcpl_cae0:  76

Rcom			bcpl_cae_head:  28, bcpl_cae0:  91, 134

Rdeclbody			bcpl_cae_head:  22, bcpl_cae0:  112

Rdef			bcpl_cae_head:  21, bcpl_cae0:  72, 108

Readch			bcpl_compiler_head:  16

ReadList			bcpl_cae_head:  25, bcpl_cae0:  70, 103

REGISTER_S		bcpl_symbols:  117

REL_S			bcpl_symbols:  118

RemoveEscapes		bcpl_compiler_head:  23

REM_S			bcpl_symbols:  119

REPEATUNTIL_S		bcpl_symbols:  122

REPEATWHILE_S		bcpl_symbols:  123

REPEAT_S			bcpl_symbols:  121

REP_S			bcpl_symbols:  120, bcpl_cae0:  49, 50

RESULTIS_S		bcpl_symbols:  124

RETURN_S			bcpl_symbols:  126

Rexp			bcpl_cae_head:  27, bcpl_cae0:  52, 70, 95, 118

Right			bcpl_compiler_head:  134, bcpl_cae0:  77

RKET_S			bcpl_symbols:  127, bcpl_cae0:  81

Rname			bcpl_cae_head:  23, bcpl_cae0:  34, 43, 115

Rnamelist			bcpl_cae_head:  24, bcpl_cae0:  43, 75, 80

RSHIFT_S			bcpl_symbols:  128

RTAP_S			bcpl_symbols:  129

RTDEF_S			bcpl_symbols:  130, bcpl_cae0:  92

RV_S			bcpl_symbols:  131

SBRA_S			bcpl_symbols:  132

SECTBEGIN_S		bcpl_symbols:  133, bcpl_cae0:  16

SECTBRA_S			bcpl_symbols:  134, bcpl_cae0:  15

SECTEND_S			bcpl_symbols:  136, bcpl_cae0:  25

SECTKET_S			bcpl_symbols:  137, bcpl_cae0:  24

SEMICOLON_S		bcpl_symbols:  138, bcpl_cae0:  124

SKET_S			bcpl_symbols:  139

STATIC_S			bcpl_symbols:  140

StoreString		bcpl_compiler_head:  41

STRINGCONST_S		bcpl_symbols:  142

STRING_S			bcpl_symbols:  141

STRUCTURE_S		bcpl_symbols:  143

SWITCHON_S		bcpl_symbols:  144

Symb			bcpl_compiler_head:  126, bcpl_cae0:  15, 16, 24, 25, 35, 49, 54, 76, 80, 81, 86, 89, 
			101, 105, 116, 124, 137, 139

SymbolName		bcpl_compiler_head:  55

Symbols			bcpl_compiler_head:  99

TABLE_S			bcpl_symbols:  146

Tag			bcpl_cae0:  21, 30

TEMP_S			bcpl_symbols:  147

TEST_S			bcpl_symbols:  148

TimeNow			bcpl_compiler_head:  114

TimeNowString		bcpl_compiler_head:  113

TO_S			bcpl_symbols:  149

Trans			bcpl_compiler_head:  70

Transreport		bcpl_compiler_head:  50

TRUE_S			bcpl_symbols:  150

TYPE_S			bcpl_symbols:  151

UnexpectedCase		bcpl_compiler_head:  139

UNLESS_S			bcpl_symbols:  152

Unpackstring		bcpl_compiler_head:  22

UnrecognizedCommand		bcpl_cae_codes:  33

UNTIL_S			bcpl_symbols:  153

UpperCase			bcpl_compiler_head:  96

UserID			bcpl_compiler_head:  120

UtilitiesInit		bcpl_compiler_head:  60

v			bcpl_cae0:  46, 48, 52, 52, 58, 59, 60, 63, 65, 67

ValdefExpected		bcpl_cae_codes:  34

VALDEF_S			bcpl_symbols:  154, bcpl_cae0:  94, 101, 103, 113

VALOF_S			bcpl_symbols:  156

VECAP_S			bcpl_symbols:  158

VEC_S			bcpl_symbols:  157

Vmax			bcpl_compiler_head:  137

w			bcpl_cae0:  57, 58, 60

WHILE_S			bcpl_symbols:  159

Writech			bcpl_compiler_head:  17

WriteN			bcpl_compiler_head:  19

WriteObjectListing		bcpl_compiler_head:  73

WriteS			bcpl_compiler_head:  18

x			bcpl_cae0:  39, 41, 44, 48

Xop			bcpl_cae0:  50, 52

Xref			bcpl_compiler_head:  103




Trans time 1.1, 791 object words per second.
	"	Begin text of Rblock

aa 000000  000006 122142		zero	6,42082		" Rblock
aa 000001  154157 143153		zero	55407,50795
			L1:
aa 000002  000000 213000  14		epaq	0		" set lp to linkage section
aa 000003  700026 764161		lprplp	sb|22,*au
aa 000004  200000 021100		adlx1	bp|0		" BCPL save
aa 000005  700000 542111		sprpbp	sb|0,x1
aa 000006  700001 544111		sprplp	sb|1,x1
aa 000007  700422 620111		eax0	sb|274,x1
aa 000010  777760 360003		anx0	-16,du
aa 000011  700025 740100		stx0	sb|21		" end of save sequence

aa 000012  600217 236100  15		ldq	sp|143		" Symb
aa 000013  000166 116007		cmpq	118,dl		" SECTBRA_S
aa 000014  000020 600004		tze	L5
aa 000015  600217 235100  16		lda	sp|143		" Symb
aa 000016  000165 115007		cmpa	117,dl		" SECTBEGIN_S
aa 000017  000003 601004		tnz	L6
aa 000020  600220 450100  17		stz	sp|144		" DictionaryEntry
aa 000021  000013 710004		tra	L7
			L6:
aa 000022  000226 236007  18		ldq	150,dl		" BlockExpected
aa 000023  700012 756111		stq	sb|10,x1
4a 000024  400032 272120		tsbbp	lp|L8,*		" CaeReport
aa 000025  000010 000001		zero	8,1
aa 000026  700003 236111  19		ldq	sb|3,x1		" Arg
aa 000027  700012 756111		stq	sb|10,x1
aa 000030  700002 760111		lprpap	sb|2,x1		" Rbody
aa 000031  000000 272100		tsbbp	ap|0		" Rbody
aa 000032  000010 000001		zero	8,1
aa 000033  000037 710004		tra	L4
			L7:
			L5:
aa 000034  600220 236100  21		ldq	sp|144		" DictionaryEntry
aa 000035  700005 756111		stq	sb|5,x1		" Tag
4a 000036  400030 272120  22		tsbbp	lp|L9,*		" Nextsymb
aa 000037  000010 000000		zero	8
aa 000040  700003 236111  23		ldq	sb|3,x1		" Arg
aa 000041  700012 756111		stq	sb|10,x1
aa 000042  700002 762111		lprpbp	sb|2,x1		" Rbody
aa 000043  200000 272100		tsbbp	bp|0		" Rbody
aa 000044  000010 000001		zero	8,1
aa 000045  700006 756111		stq	sb|6,x1		" A
aa 000046  600217 236100  24		ldq	sp|143		" Symb
aa 000047  000171 116007		cmpq	121,dl		" SECTKET_S
aa 000050  000014 600004		tze	L10
aa 000051  600217 235100  25		lda	sp|143		" Symb
aa 000052  000170 115007		cmpa	120,dl		" SECTEND_S
aa 000053  000003 601004		tnz	L11
aa 000054  600220 450100  26		stz	sp|144		" DictionaryEntry
aa 000055  000007 710004		tra	L12
			L11:
aa 000056  000242 236007  27		ldq	162,dl		" MissingSECTKET
aa 000057  700012 756111		stq	sb|10,x1
4a 000060  400032 272120		tsbbp	lp|L8,*		" CaeReport
aa 000061  000010 000001		zero	8,1
aa 000062  700006 236111  28		ldq	sb|6,x1		" A
aa 000063  000007 710004		tra	L4
			L12:
			L10:
aa 000064  700005 235111  30		lda	sb|5,x1		" Tag
aa 000065  600220 115100		cmpa	sp|144		" DictionaryEntry
aa 000066  000003 601004		tnz	L13
4a 000067  400030 272120		tsbbp	lp|L9,*		" Nextsymb
aa 000070  000010 000000		zero	8
			L13:
aa 000071  700006 236111  31		ldq	sb|6,x1		" A
			L4:
aa 000072  700005 756111		stq	sb|5,x1
aa 000073  700005 236111		ldq	sb|5,x1
aa 000074  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000075  200000 121100		sblx1	bp|0
aa 000076  700001 764111		lprplp	sb|1,x1
aa 000077  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of Rnamelist

aa 000100  000011 122156		zero	9,42094		" Rnamelist
aa 000101  141155 145154		zero	49773,51820
aa 000102  151163 164000		zero	53875,59392
aa 000103  700004 756111  43		stq	sb|4,x1		" temporary
			L15:
aa 000104  000000 213000		epaq	0		" set lp to linkage section
aa 000105  700026 764161		lprplp	sb|22,*au
aa 000106  200000 021100		adlx1	bp|0		" BCPL save
aa 000107  700000 542111		sprpbp	sb|0,x1
aa 000110  700001 544111		sprplp	sb|1,x1
aa 000111  700424 620111		eax0	sb|276,x1
aa 000112  777760 360003		anx0	-16,du
aa 000113  700025 740100		stx0	sb|21		" end of save sequence

aa 000114  000276 351404		eapab	L14		" Rname
aa 000115  700010 541111		sprpab	sb|8,x1
aa 000116  700011 450111		stz	sb|9,x1
aa 000117  700002 236111		ldq	sb|2,x1		" PermitREP
aa 000120  700012 756111		stq	sb|10,x1
aa 000121  000044 272004		tsbbp	L16+2		" GetCommaNode
aa 000122  000006 000003		zero	6,3
aa 000123  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000124  200000 121100		sblx1	bp|0
aa 000125  700001 764111		lprplp	sb|1,x1
aa 000126  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of ReadList

aa 000127  000010 122145		zero	8,42085		" ReadList
aa 000130  141144 114151		zero	49764,39017
aa 000131  163164 000000		zero	58996
aa 000132  700003 756111  70		stq	sb|3,x1		" temporary
			L17:
aa 000133  000000 213000		epaq	0		" set lp to linkage section
aa 000134  700026 764161		lprplp	sb|22,*au
aa 000135  200000 021100		adlx1	bp|0		" BCPL save
aa 000136  700000 542111		sprpbp	sb|0,x1
aa 000137  700001 544111		sprplp	sb|1,x1
aa 000140  700424 620111		eax0	sb|276,x1
aa 000141  777760 360003		anx0	-16,du
aa 000142  700025 740100		stx0	sb|21		" end of save sequence

4a 000143  400026 351520		eapab	lp|L22,*		" Rexp
aa 000144  700010 541111		sprpab	sb|8,x1
aa 000145  700011 450111		stz	sb|9,x1
aa 000146  700002 236111		ldq	sb|2,x1		" PermitREP
aa 000147  700012 756111		stq	sb|10,x1
aa 000150  000015 272004		tsbbp	L16+2		" GetCommaNode
aa 000151  000006 000003		zero	6,3
aa 000152  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000153  200000 121100		sblx1	bp|0
aa 000154  700001 764111		lprplp	sb|1,x1
aa 000155  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of GetCommaNode

aa 000156  000014 107145		zero	12,36453		" GetCommaNode
aa 000157  164103 157155		zero	59459,56941
aa 000160  155141 116157		zero	55905,40047
aa 000161  144145 000000		zero	51301
aa 000162  700003 756111  44		stq	sb|3,x1		" temporary
			L16:
aa 000163  000000 213000		epaq	0		" set lp to linkage section
aa 000164  700026 764161		lprplp	sb|22,*au
aa 000165  200000 021100		adlx1	bp|0		" BCPL save
aa 000166  700000 542111		sprpbp	sb|0,x1
aa 000167  700001 544111		sprplp	sb|1,x1
aa 000170  700424 620111		eax0	sb|276,x1
aa 000171  777760 360003		anx0	-16,du
aa 000172  700025 740100		stx0	sb|21		" end of save sequence

aa 000173  600214 236100  45		ldq	sp|140		" LineCount
aa 000174  000022 736000		qls	18
aa 000175  000015 276007		orq	13,dl		" COMMA_S
aa 000176  700006 756111		stq	sb|6,x1		" Op
aa 000177  700012 351511  46		eapab	sb|10,x1		" a vector
aa 000200  700010 541111		sprpab	sb|8,x1		" v
aa 000201  700011 450111		stz	sb|9,x1		" i
aa 000202  000024 236007		ldq	20,dl		" 20
aa 000203  700007 756111		stq	sb|7,x1		" Max
			L26:
aa 000204  700011 054111  47		aos	sb|9,x1		" i
aa 000205  700003 236111  48		ldq	sb|3,x1		" x
aa 000206  700046 756111		stq	sb|38,x1
aa 000207  700002 761111		lprpab	sb|2,x1		" F
aa 000210  100000 272100		tsbbp	ab|0		" F
aa 000211  000044 000001		zero	36,1
aa 000212  700011 722111		lxl2	sb|9,x1		" i
aa 000213  700010 763111		lprpbb	sb|8,x1		" v
aa 000214  300000 756112		stq	bb|0,x2
aa 000215  600217 236100  49		ldq	sp|143		" Symb
aa 000216  000150 116007		cmpq	104,dl		" REP_S
aa 000217  000032 601004		tnz	L27
aa 000220  700004 234111		szn	sb|4,x1		" PermitREP
aa 000221  000030 600004		tze	L27
aa 000222  600214 235100  50		lda	sp|140		" LineCount
aa 000223  000022 735000		als	18
aa 000224  000150 275007		ora	104,dl		" REP_S
aa 000225  700037 755111		sta	sb|31,x1		" Xop
4a 000226  400030 272120  51		tsbbp	lp|L9,*		" Nextsymb
aa 000227  000044 000000		zero	36
aa 000230  700046 450111  52		stz	sb|38,x1
4a 000231  400026 272120		tsbbp	lp|L22,*		" Rexp
aa 000232  000044 000001		zero	36,1
aa 000233  700041 756111		stq	sb|33,x1
aa 000234  700037 236111		ldq	sb|31,x1		" Xop
aa 000235  700046 756111		stq	sb|38,x1
aa 000236  700011 723111		lxl3	sb|9,x1		" i
aa 000237  700010 765111		lprplb	sb|8,x1		" v
aa 000240  500000 236113		ldq	lb|0,x3
aa 000241  700047 756111		stq	sb|39,x1
aa 000242  700041 236111		ldq	sb|33,x1
aa 000243  700050 756111		stq	sb|40,x1
4a 000244  400024 272120		tsbbp	lp|L28,*		" List3
aa 000245  000044 000003		zero	36,3
aa 000246  700011 724111		lxl4	sb|9,x1		" i
aa 000247  700010 760111		lprpap	sb|8,x1		" v
aa 000250  000000 756114		stq	ap|0,x4
			L27:
aa 000251  600217 236100  54		ldq	sp|143		" Symb
aa 000252  000015 116007		cmpq	13,dl		" COMMA_S
aa 000253  000052 601004		tnz	L29
4a 000254  400030 272120  55		tsbbp	lp|L9,*		" Nextsymb
aa 000255  000044 000000		zero	36
aa 000256  700011 235111  56		lda	sb|9,x1		" i
aa 000257  700007 115111		cmpa	sb|7,x1		" Max
aa 000260  000044 604004		tmi	L30
aa 000261  700007 236111  57		ldq	sb|7,x1		" Max
aa 000262  000001 736000		qls	1
aa 000263  700046 756111		stq	sb|38,x1
4a 000264  400022 272120		tsbbp	lp|L31,*		" Newvec
aa 000265  000044 000001		zero	36,1
aa 000266  700037 756111		stq	sb|31,x1		" w
aa 000267  000001 236007  58		ldq	1,dl		" 1
aa 000270  700040 756111		stq	sb|32,x1		" j
aa 000271  700011 236111		ldq	sb|9,x1		" i
aa 000272  700041 756111		stq	sb|33,x1
aa 000273  000010 710004		tra	L32
			L33:
aa 000274  700040 725111		lxl5	sb|32,x1		" j
aa 000275  700010 762111		lprpbp	sb|8,x1		" v
aa 000276  200000 236115		ldq	bp|0,x5
aa 000277  700040 726111		lxl6	sb|32,x1		" j
aa 000300  700037 761111		lprpab	sb|31,x1		" w
aa 000301  100000 756116		stq	ab|0,x6
aa 000302  700040 054111		aos	sb|32,x1		" j
			L32:
aa 000303  700040 236111		ldq	sb|32,x1		" j
aa 000304  700041 116111		cmpq	sb|33,x1
aa 000305  777767 604404		tmoz	L33
aa 000306  700007 235111  59		lda	sb|7,x1		" Max
aa 000307  000024 115007		cmpa	20,dl		" 20
aa 000310  000007 604404		tmoz	L34
aa 000311  700010 236111		ldq	sb|8,x1		" v
aa 000312  700046 756111		stq	sb|38,x1
aa 000313  700007 236111		ldq	sb|7,x1		" Max
aa 000314  700047 756111		stq	sb|39,x1
4a 000315  400020 272120		tsbbp	lp|L35,*		" Freevec
aa 000316  000044 000002		zero	36,2
			L34:
aa 000317  700037 236111  60		ldq	sb|31,x1		" w
aa 000320  700010 756111		stq	sb|8,x1		" v
aa 000321  700007 236111		ldq	sb|7,x1		" Max
aa 000322  000001 736000		qls	1
aa 000323  700007 756111		stq	sb|7,x1		" Max
			L30:
aa 000324  777660 710004		tra	L26
			L29:
aa 000325  700011 236111  63		ldq	sb|9,x1		" i
aa 000326  000001 116007		cmpq	1,dl		" 1
aa 000327  000004 601004		tnz	L36
aa 000330  700010 763111		lprpbb	sb|8,x1		" v
aa 000331  300001 235100		lda	bb|1
aa 000332  000047 710004		tra	L25
			L36:
aa 000333  700011 236111  64		ldq	sb|9,x1		" i
aa 000334  000001 076007		adq	1,dl		" 1
aa 000335  700046 756111		stq	sb|38,x1
4a 000336  400022 272120		tsbbp	lp|L31,*		" Newvec
aa 000337  000044 000001		zero	36,1
aa 000340  700037 756111		stq	sb|31,x1		" r
aa 000341  000001 236007  65		ldq	1,dl		" 1
aa 000342  700040 756111		stq	sb|32,x1		" j
aa 000343  700011 236111		ldq	sb|9,x1		" i
aa 000344  700041 756111		stq	sb|33,x1
aa 000345  000011 710004		tra	L37
			L38:
aa 000346  700040 236111		ldq	sb|32,x1		" j
aa 000347  000001 076007		adq	1,dl		" 1
aa 000350  700040 722111		lxl2	sb|32,x1		" j
aa 000351  700010 765111		lprplb	sb|8,x1		" v
aa 000352  500000 235112		lda	lb|0,x2
aa 000353  700037 760111		lprpap	sb|31,x1		" r
aa 000354  000000 755106		sta	ap|0,ql
aa 000355  700040 054111		aos	sb|32,x1		" j
			L37:
aa 000356  700040 236111		ldq	sb|32,x1		" j
aa 000357  700041 116111		cmpq	sb|33,x1
aa 000360  777766 604404		tmoz	L38
aa 000361  700011 235111  66		lda	sb|9,x1		" i
aa 000362  700037 762111		lprpbp	sb|31,x1		" r
aa 000363  200001 755100		sta	bp|1
aa 000364  700006 235111		lda	sb|6,x1		" Op
aa 000365  700037 761111		lprpab	sb|31,x1		" r
aa 000366  100000 755100		sta	ab|0
aa 000367  700007 235111  67		lda	sb|7,x1		" Max
aa 000370  000024 115007		cmpa	20,dl		" 20
aa 000371  000007 604404		tmoz	L39
aa 000372  700010 236111		ldq	sb|8,x1		" v
aa 000373  700046 756111		stq	sb|38,x1
aa 000374  700007 236111		ldq	sb|7,x1		" Max
aa 000375  700047 756111		stq	sb|39,x1
4a 000376  400020 272120		tsbbp	lp|L35,*		" Freevec
aa 000377  000044 000002		zero	36,2
			L39:
aa 000400  700037 235111  68		lda	sb|31,x1		" r
			L25:
aa 000401  700006 755111		sta	sb|6,x1
aa 000402  700006 236111		ldq	sb|6,x1
aa 000403  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000404  200000 121100		sblx1	bp|0
aa 000405  700001 764111		lprplp	sb|1,x1
aa 000406  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of Rname

aa 000407  000005 122156		zero	5,42094		" Rname
aa 000410  141155 145000		zero	49773,51712
aa 000411  700005 756111  34		stq	sb|5,x1		" temporary
			L14:
aa 000412  000000 213000		epaq	0		" set lp to linkage section
aa 000413  700026 764161		lprplp	sb|22,*au
aa 000414  200000 021100		adlx1	bp|0		" BCPL save
aa 000415  700000 542111		sprpbp	sb|0,x1
aa 000416  700001 544111		sprplp	sb|1,x1
aa 000417  700422 620111		eax0	sb|274,x1
aa 000420  777760 360003		anx0	-16,du
aa 000421  700025 740100		stx0	sb|21		" end of save sequence

aa 000422  600217 236100  35		ldq	sp|143		" Symb
aa 000423  000122 116007		cmpq	82,dl		" NAME_S
aa 000424  000007 600004		tze	L43
aa 000425  000245 235007  36		lda	165,dl		" NameExpected
aa 000426  700006 755111		sta	sb|6,x1
4a 000427  400032 272120		tsbbp	lp|L8,*		" CaeReport
aa 000430  000004 000001		zero	4,1
aa 000431  600347 235100  37		lda	sp|231		" ErrorNode
aa 000432  000006 710004		tra	L42
			L43:
aa 000433  600220 236100  39		ldq	sp|144		" DictionaryEntry
aa 000434  700003 756111		stq	sb|3,x1		" x
4a 000435  400030 272120  40		tsbbp	lp|L9,*		" Nextsymb
aa 000436  000004 000000		zero	4
aa 000437  700003 235111  41		lda	sb|3,x1		" x
			L42:
aa 000440  700003 755111		sta	sb|3,x1
aa 000441  700003 236111		ldq	sb|3,x1
aa 000442  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000443  200000 121100		sblx1	bp|0
aa 000444  700001 764111		lprplp	sb|1,x1
aa 000445  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of Rdef

aa 000446  000004 122144		zero	4,42084		" Rdef
aa 000447  145146 000000		zero	51814
aa 000450  700002 756111  72		stq	sb|2,x1		" temporary
			L44:
aa 000451  000000 213000		epaq	0		" set lp to linkage section
aa 000452  700026 764161		lprplp	sb|22,*au
aa 000453  200000 021100		adlx1	bp|0		" BCPL save
aa 000454  700000 542111		sprpbp	sb|0,x1
aa 000455  700001 544111		sprplp	sb|1,x1
aa 000456  700427 620111		eax0	sb|279,x1
aa 000457  777760 360003		anx0	-16,du
aa 000460  700025 740100		stx0	sb|21		" end of save sequence

aa 000461  600214 236100  74		ldq	sp|140		" LineCount
aa 000462  000022 736000		qls	18
aa 000463  700006 756111		stq	sb|6,x1		" Lc
aa 000464  700014 450111  75		stz	sb|12,x1
aa 000465  777421 272004		tsbbp	L15+2		" Rnamelist
aa 000466  000012 000001		zero	10,1
aa 000467  700005 756111		stq	sb|5,x1		" A
aa 000470  600217 236100  76		ldq	sp|143		" Symb
aa 000471  000144 116007		cmpq	100,dl		" RBRA_S
aa 000472  000130 601004		tnz	L48
aa 000473  700005 763111  77		lprpbb	sb|5,x1		" A
aa 000474  300000 235100		lda	bb|0
aa 000475  777777 375007		ana	-1,dl		" Right
aa 000476  000122 115007		cmpa	82,dl		" NAME_S
aa 000477  000005 600004		tze	L50
aa 000500  000245 235007		lda	165,dl		" NameExpected
aa 000501  700014 755111		sta	sb|12,x1
4a 000502  400032 272120		tsbbp	lp|L8,*		" CaeReport
aa 000503  000012 000001		zero	10,1
			L50:
4a 000504  400030 272120  78		tsbbp	lp|L9,*		" Nextsymb
aa 000505  000012 000000		zero	10
aa 000506  700004 450111  79		stz	sb|4,x1		" B
aa 000507  600217 235100  80		lda	sp|143		" Symb
aa 000510  000122 115007		cmpa	82,dl		" NAME_S
aa 000511  000006 601004		tnz	L51
aa 000512  000001 336007		lcq	1,dl		" true
aa 000513  700014 756111		stq	sb|12,x1
aa 000514  777372 272004		tsbbp	L15+2		" Rnamelist
aa 000515  000012 000001		zero	10,1
aa 000516  700004 756111		stq	sb|4,x1		" B
			L51:
aa 000517  600217 236100  81		ldq	sp|143		" Symb
aa 000520  000157 116007		cmpq	111,dl		" RKET_S
aa 000521  000004 601004		tnz	L52
4a 000522  400030 272120  82		tsbbp	lp|L9,*		" Nextsymb
aa 000523  000012 000000		zero	10
aa 000524  000005 710004		tra	L53
			L52:
aa 000525  000241 235007  83		lda	161,dl		" MissingRKET
aa 000526  700014 755111		sta	sb|12,x1
4a 000527  400032 272120		tsbbp	lp|L8,*		" CaeReport
aa 000530  000012 000001		zero	10,1
			L53:
aa 000531  600346 235100  84		lda	sp|230		" LabelList
aa 000532  700007 755111		sta	sb|7,x1		" Ll
aa 000533  600346 450100  85		stz	sp|230		" LabelList
aa 000534  600217 235100  86		lda	sp|143		" Symb
aa 000535  700010 755111		sta	sb|8,x1		" Op
aa 000536  700011 450111		stz	sb|9,x1		" m
4a 000537  400030 272120  87		tsbbp	lp|L9,*		" Nextsymb
aa 000540  000012 000000		zero	10
aa 000541  700010 235111  88		lda	sb|8,x1		" Op
aa 000542  000003 115007		cmpa	3,dl		" BE_S
aa 000543  000020 601004		tnz	L54
aa 000544  600217 236100  89		ldq	sp|143		" Symb
aa 000545  700011 756111		stq	sb|9,x1		" m
aa 000546  700011 236111  90		ldq	sb|9,x1		" m
aa 000547  000113 116007		cmpq	75,dl		" MAIN_S
aa 000550  000003 601004		tnz	L56
4a 000551  400030 272120		tsbbp	lp|L9,*		" Nextsymb
aa 000552  000012 000000		zero	10
			L56:
aa 000553  000010 235007  91		lda	8,dl		" 8
aa 000554  700014 755111		sta	sb|12,x1
4a 000555  400016 272120		tsbbp	lp|L57,*		" Rcom
aa 000556  000012 000001		zero	10,1
aa 000557  700003 756111		stq	sb|3,x1		" C
aa 000560  000162 236007  92		ldq	114,dl		" RTDEF_S
aa 000561  700006 256111		orsq	sb|6,x1		" Lc
aa 000562  000016 710004		tra	L55
			L54:
aa 000563  700010 236111  94		ldq	sb|8,x1		" Op
aa 000564  000212 116007		cmpq	138,dl		" VALDEF_S
aa 000565  000005 600004		tze	L58
aa 000566  000231 235007		lda	153,dl		" MalformedDeclaration
aa 000567  700014 755111		sta	sb|12,x1
4a 000570  400032 272120		tsbbp	lp|L8,*		" CaeReport
aa 000571  000012 000001		zero	10,1
			L58:
aa 000572  700014 450111  95		stz	sb|12,x1
4a 000573  400026 272120		tsbbp	lp|L22,*		" Rexp
aa 000574  000012 000001		zero	10,1
aa 000575  700003 756111		stq	sb|3,x1		" C
aa 000576  000044 236007  96		ldq	36,dl		" FNDEF_S
aa 000577  700006 256111		orsq	sb|6,x1		" Lc
			L55:
aa 000600  700006 236111  98		ldq	sb|6,x1		" Lc
aa 000601  700014 756111		stq	sb|12,x1
aa 000602  700005 236111		ldq	sb|5,x1		" A
aa 000603  700015 756111		stq	sb|13,x1
aa 000604  700004 236111		ldq	sb|4,x1		" B
aa 000605  700016 756111		stq	sb|14,x1
aa 000606  700003 236111		ldq	sb|3,x1		" C
aa 000607  700017 756111		stq	sb|15,x1
aa 000610  600346 236100		ldq	sp|230		" LabelList
aa 000611  700020 756111		stq	sb|16,x1
aa 000612  700011 236111		ldq	sb|9,x1		" m
aa 000613  700021 756111		stq	sb|17,x1
4a 000614  400014 272120		tsbbp	lp|L59,*		" List6
aa 000615  000012 000006		zero	10,6
aa 000616  700005 756111		stq	sb|5,x1		" A
aa 000617  700007 236111  99		ldq	sb|7,x1		" Ll
aa 000620  600346 756100		stq	sp|230		" LabelList
aa 000621  000031 710004		tra	L49
			L48:
aa 000622  600217 236100  101		ldq	sp|143		" Symb
aa 000623  000212 116007		cmpq	138,dl		" VALDEF_S
aa 000624  000005 600004		tze	L60
aa 000625  000231 235007		lda	153,dl		" MalformedDeclaration
aa 000626  700014 755111		sta	sb|12,x1
4a 000627  400032 272120		tsbbp	lp|L8,*		" CaeReport
aa 000630  000012 000001		zero	10,1
			L60:
4a 000631  400030 272120  102		tsbbp	lp|L9,*		" Nextsymb
aa 000632  000012 000000		zero	10
aa 000633  000001 335007  103		lca	1,dl		" true
aa 000634  700014 755111		sta	sb|12,x1
aa 000635  777300 272004		tsbbp	L17+2		" ReadList
aa 000636  000012 000001		zero	10,1
aa 000637  700007 756111		stq	sb|7,x1
aa 000640  000212 236007		ldq	138,dl		" VALDEF_S
aa 000641  700006 276111		orq	sb|6,x1		" Lc
aa 000642  700014 756111		stq	sb|12,x1
aa 000643  700005 236111		ldq	sb|5,x1		" A
aa 000644  700015 756111		stq	sb|13,x1
aa 000645  700007 236111		ldq	sb|7,x1
aa 000646  700016 756111		stq	sb|14,x1
4a 000647  400024 272120		tsbbp	lp|L28,*		" List3
aa 000650  000012 000003		zero	10,3
aa 000651  700005 756111		stq	sb|5,x1		" A
			L49:
aa 000652  600217 236100  105		ldq	sp|143		" Symb
aa 000653  000001 116007		cmpq	1,dl		" AND_S
aa 000654  000003 600004		tze	L61
aa 000655  700005 235111		lda	sb|5,x1		" A
aa 000656  000023 710004		tra	L47
			L61:
aa 000657  600214 236100  106		ldq	sp|140		" LineCount
aa 000660  000022 736000		qls	18
aa 000661  700006 756111		stq	sb|6,x1		" Lc
4a 000662  400030 272120  107		tsbbp	lp|L9,*		" Nextsymb
aa 000663  000012 000000		zero	10
aa 000664  777567 272004  108		tsbbp	L44+2		" Rdef
aa 000665  000012 000000		zero	10
aa 000666  700004 756111		stq	sb|4,x1		" B
aa 000667  000001 236007  109		ldq	1,dl		" AND_S
aa 000670  700006 276111		orq	sb|6,x1		" Lc
aa 000671  700014 756111		stq	sb|12,x1
aa 000672  700005 236111		ldq	sb|5,x1		" A
aa 000673  700015 756111		stq	sb|13,x1
aa 000674  700004 236111		ldq	sb|4,x1		" B
aa 000675  700016 756111		stq	sb|14,x1
4a 000676  400024 272120		tsbbp	lp|L28,*		" List3
aa 000677  000012 000003		zero	10,3
aa 000700  000044 777000		llr	36		" exchange A and Q
			L47:
aa 000701  700003 755111		sta	sb|3,x1
aa 000702  700003 235111		lda	sb|3,x1
aa 000703  000044 777000		llr	36		" exchange A and Q
aa 000704  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000705  200000 121100		sblx1	bp|0
aa 000706  700001 764111		lprplp	sb|1,x1
aa 000707  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of Rdeclbody

aa 000710  000011 122144		zero	9,42084		" Rdeclbody
aa 000711  145143 154142		zero	51811,55394
aa 000712  157144 171000		zero	56932,61952
aa 000713  700002 756111  112		stq	sb|2,x1		" temporary
			L62:
aa 000714  000000 213000		epaq	0		" set lp to linkage section
aa 000715  700026 764161		lprplp	sb|22,*au
aa 000716  200000 021100		adlx1	bp|0		" BCPL save
aa 000717  700000 542111		sprpbp	sb|0,x1
aa 000720  700001 544111		sprplp	sb|1,x1
aa 000721  700425 620111		eax0	sb|277,x1
aa 000722  777760 360003		anx0	-16,du
aa 000723  700025 740100		stx0	sb|21		" end of save sequence

aa 000724  700002 236111  113		ldq	sb|2,x1		" Op
aa 000725  000052 116007		cmpq	42,dl		" GLOBAL_S
aa 000726  000003 601004		tnz	L66
aa 000727  000014 235007		lda	12,dl		" COLON_S
aa 000730  000002 710004		tra	L67
			L66:
aa 000731  000212 235007		lda	138,dl		" VALDEF_S
			L67:
aa 000732  700005 755111		sta	sb|5,x1
aa 000733  700005 235111		lda	sb|5,x1
aa 000734  700004 755111		sta	sb|4,x1		" Match
aa 000735  700007 450111  114		stz	sb|7,x1		" C
			L68:
aa 000736  777456 272004  115		tsbbp	L14+2		" Rname
aa 000737  000012 000000		zero	10
aa 000740  700005 756111		stq	sb|5,x1		" A
aa 000741  600217 236100  116		ldq	sp|143		" Symb
aa 000742  700004 116111		cmpq	sb|4,x1		" Match
aa 000743  000010 601004		tnz	L69
4a 000744  400030 272120  117		tsbbp	lp|L9,*		" Nextsymb
aa 000745  000012 000000		zero	10
aa 000746  700014 450111  118		stz	sb|12,x1
4a 000747  400026 272120		tsbbp	lp|L22,*		" Rexp
aa 000750  000012 000001		zero	10,1
aa 000751  700006 756111		stq	sb|6,x1		" B
aa 000752  000011 710004		tra	L70
			L69:
aa 000753  700002 236111  120		ldq	sb|2,x1		" Op
aa 000754  000036 116007		cmpq	30,dl		" EXTERNAL_S
aa 000755  000005 600004		tze	L71
aa 000756  000231 235007		lda	153,dl		" MalformedDeclaration
aa 000757  700014 755111		sta	sb|12,x1
4a 000760  400032 272120		tsbbp	lp|L8,*		" CaeReport
aa 000761  000012 000001		zero	10,1
			L71:
aa 000762  700006 450111  121		stz	sb|6,x1		" B
			L70:
aa 000763  600214 235100  123		lda	sp|140		" LineCount
aa 000764  000022 735000		als	18
aa 000765  000020 275007		ora	16,dl		" CONSTDEF_S
aa 000766  700014 755111		sta	sb|12,x1
aa 000767  700005 235111		lda	sb|5,x1		" A
aa 000770  700015 755111		sta	sb|13,x1
aa 000771  700006 235111		lda	sb|6,x1		" B
aa 000772  700016 755111		sta	sb|14,x1
aa 000773  700007 235111		lda	sb|7,x1		" C
aa 000774  700017 755111		sta	sb|15,x1
4a 000775  400012 272120		tsbbp	lp|L72,*		" List4
aa 000776  000012 000004		zero	10,4
aa 000777  700007 756111		stq	sb|7,x1		" C
aa 001000  600217 236100  124		ldq	sp|143		" Symb
aa 001001  000172 116007		cmpq	122,dl		" SEMICOLON_S
aa 001002  000004 601004		tnz	L73
4a 001003  400030 272120  125		tsbbp	lp|L9,*		" Nextsymb
aa 001004  000012 000000		zero	10
aa 001005  777731 710004		tra	L68
			L73:
aa 001006  700007 235111  127		lda	sb|7,x1		" C
			L65:
aa 001007  700004 755111		sta	sb|4,x1
aa 001010  700004 235111		lda	sb|4,x1
aa 001011  000044 777000		llr	36		" exchange A and Q
aa 001012  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001013  200000 121100		sblx1	bp|0
aa 001014  700001 764111		lprplp	sb|1,x1
aa 001015  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of CAE

aa 001016  000003 103101		zero	3,34369		" CAE
aa 001017  105000 000000		zero	35328
aa 001020  700003 756111  130		stq	sb|3,x1		" temporary
			L74:
aa 001021  000000 213000		epaq	0		" set lp to linkage section
aa 001022  700026 764161		lprplp	sb|22,*au
aa 001023  200000 021100		adlx1	bp|0		" BCPL save
aa 001024  700000 542111		sprpbp	sb|0,x1
aa 001025  700001 544111		sprplp	sb|1,x1
aa 001026  700424 620111		eax0	sb|276,x1
aa 001027  777760 360003		anx0	-16,du
aa 001030  700025 740100		stx0	sb|21		" end of save sequence

aa 001031  600346 450100  131		stz	sp|230		" LabelList
aa 001032  000031 236007  132		ldq	25,dl		" ERROR_S
aa 001033  700006 756111		stq	sb|6,x1
4a 001034  400010 272120		tsbbp	lp|L78,*		" List1
aa 001035  000004 000001		zero	4,1
aa 001036  600347 756100		stq	sp|231		" ErrorNode
aa 001037  700006 450111  134		stz	sb|6,x1
4a 001040  400016 272120		tsbbp	lp|L57,*		" Rcom
aa 001041  000004 000001		zero	4,1
aa 001042  700003 756111		stq	sb|3,x1		" A
aa 001043  600346 234100  135		szn	sp|230		" LabelList
aa 001044  000012 600004		tze	L79
aa 001045  000063 236007		ldq	51,dl		" LABDEF_S
aa 001046  700006 756111		stq	sb|6,x1
aa 001047  700003 236111		ldq	sb|3,x1		" A
aa 001050  700007 756111		stq	sb|7,x1
aa 001051  600346 236100		ldq	sp|230		" LabelList
aa 001052  700010 756111		stq	sb|8,x1
4a 001053  400024 272120		tsbbp	lp|L28,*		" List3
aa 001054  000004 000003		zero	4,3
aa 001055  700003 756111		stq	sb|3,x1		" A
			L79:
aa 001056  600217 236100  137		ldq	sp|143		" Symb
aa 001057  000030 116007		cmpq	24,dl		" ENDPROG_S
aa 001060  000012 600004		tze	L80
aa 001061  000246 235007  138		lda	166,dl		" PrematureTermination
aa 001062  700006 755111		sta	sb|6,x1
4a 001063  400032 272120		tsbbp	lp|L8,*		" CaeReport
aa 001064  000004 000001		zero	4,1
			L81:
4a 001065  400030 272120  139		tsbbp	lp|L9,*		" Nextsymb
aa 001066  000004 000000		zero	4
aa 001067  600217 235100		lda	sp|143		" Symb
aa 001070  000030 115007		cmpa	24,dl		" ENDPROG_S
aa 001071  777774 601004		tnz	L81
			L80:
aa 001072  700003 236111  141		ldq	sb|3,x1		" A
			L77:
aa 001073  700003 756111		stq	sb|3,x1
aa 001074  700003 236111		ldq	sb|3,x1
aa 001075  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001076  200000 121100		sblx1	bp|0
aa 001077  700001 764111		lprplp	sb|1,x1
aa 001100  200001 710100		tra	bp|1		" end of return sequence
aa 001101  000000 000000		" padding
	"	Definition section part one - external entry points

5a 000000  000032 000000		" pointer to first definition
aa 000001  000000 600000		" flags: new format, ignore header
aa 000002  000000 000000		" list terminator

aa 000003  011142 143160		" "bcpl_cae0"
aa 000004  154137 143141
aa 000005  145060 000000
aa 000006  003103 101105		" "CAE"
aa 000007  011122 144145		" "Rdeclbody"
aa 000010  143154 142157
aa 000011  144171 000000
aa 000012  004122 144145		" "Rdef"
aa 000013  146000 000000
aa 000014  010122 145141		" "ReadList"
aa 000015  144114 151163
aa 000016  164000 000000
aa 000017  011122 156141		" "Rnamelist"
aa 000020  155145 154151
aa 000021  163164 000000
aa 000022  005122 156141		" "Rname"
aa 000023  155145 000000
aa 000024  006122 142154		" "Rblock"
aa 000025  157143 153000
aa 000026  014163 171155		" "symbol_table"
aa 000027  142157 154137
aa 000030  164141 142154
aa 000031  145000 000000

	"	Segname definition for bcpl_cae0

55 000032  000035 000002		" forward, backward threads
5a 000033  000002 400003		" value defined, class flags
55 000034  000003 000035		" name pointer, first entry def

	"	Definition for CAE

55 000035  000040 000032		" forward, backward threads
0a 000036  001021 500000		" value defined, class flags
55 000037  000006 000032		" name pointer, segname def pointer

	"	Definition for Rdeclbody

55 000040  000043 000035		" forward, backward threads
0a 000041  000714 500000		" value defined, class flags
55 000042  000007 000032		" name pointer, segname def pointer

	"	Definition for Rdef

55 000043  000046 000040		" forward, backward threads
0a 000044  000451 500000		" value defined, class flags
55 000045  000012 000032		" name pointer, segname def pointer

	"	Definition for ReadList

55 000046  000051 000043		" forward, backward threads
0a 000047  000133 500000		" value defined, class flags
55 000050  000014 000032		" name pointer, segname def pointer

	"	Definition for Rnamelist

55 000051  000054 000046		" forward, backward threads
0a 000052  000104 500000		" value defined, class flags
55 000053  000017 000032		" name pointer, segname def pointer

	"	Definition for Rname

55 000054  000057 000051		" forward, backward threads
0a 000055  000412 500000		" value defined, class flags
55 000056  000022 000032		" name pointer, segname def pointer

	"	Definition for Rblock

55 000057  000062 000054		" forward, backward threads
0a 000060  000002 500000		" value defined, class flags
55 000061  000024 000032		" name pointer, segname def pointer

	"	Definition for symbol_table

55 000062  000002 000057		" forward, backward threads
6a 000063  000000 400002		" value defined, class flags
55 000064  000026 000032		" name pointer, segname def pointer
	"	Definition section part two - symbolic info for external references

aa 000065  014142 143160		" "bcpl_utility"
aa 000066  154137 165164
aa 000067  151154 151164
aa 000070  171000 000000
aa 000071  005114 151163		" "List1"
aa 000072  164061 000000
5a 000073  000074 000000
aa 000074  000004 000000
55 000075  000065 000071
aa 000076  005114 151163		" "List4"
aa 000077  164064 000000
5a 000100  000101 000000
aa 000101  000004 000000
55 000102  000065 000076
aa 000103  005114 151163		" "List6"
aa 000104  164066 000000
5a 000105  000106 000000
aa 000106  000004 000000
55 000107  000065 000103
aa 000110  011142 143160		" "bcpl_cae2"
aa 000111  154137 143141
aa 000112  145062 000000
aa 000113  004122 143157		" "Rcom"
aa 000114  155000 000000
5a 000115  000116 000000
aa 000116  000004 000000
55 000117  000110 000113
aa 000120  007106 162145		" "Freevec"
aa 000121  145166 145143
5a 000122  000123 000000
aa 000123  000004 000000
55 000124  000065 000120
aa 000125  006116 145167		" "Newvec"
aa 000126  166145 143000
5a 000127  000130 000000
aa 000130  000004 000000
55 000131  000065 000125
aa 000132  005114 151163		" "List3"
aa 000133  164063 000000
5a 000134  000135 000000
aa 000135  000004 000000
55 000136  000065 000132
aa 000137  011142 143160		" "bcpl_cae1"
aa 000140  154137 143141
aa 000141  145061 000000
aa 000142  004122 145170		" "Rexp"
aa 000143  160000 000000
5a 000144  000145 000000
aa 000145  000004 000000
55 000146  000137 000142
aa 000147  011142 143160		" "bcpl_lex0"
aa 000150  154137 154145
aa 000151  170060 000000
aa 000152  010116 145170		" "Nextsymb"
aa 000153  164163 171155
aa 000154  142000 000000
5a 000155  000156 000000
aa 000156  000004 000000
55 000157  000147 000152
aa 000160  013142 143160		" "bcpl_report"
aa 000161  154137 162145
aa 000162  160157 162164
aa 000163  011103 141145		" "CaeReport"
aa 000164  122145 160157
aa 000165  162164 000000
5a 000166  000167 000000
aa 000167  000004 000000
55 000170  000160 000163
aa 000171  000000 000000		" padding
	"	Linkage section - static variables and external links

aa 000000  000000 000000		" linkage header
0a 000001  001102 000000		" address of defs
aa 000002  000000 000000
aa 000003  000000 000000
aa 000004  000000 000000
aa 000005  000000 000000
2a 000006  000010 000034		" offset to links, total length
aa 000007  000000 000034		" obsolete length

	"	External link pairs

			L78:
3a 000010  777770 000046		" "bcpl_utility$List1"
5a 000011  000073 000000
			L72:
3a 000012  777766 000046		" "bcpl_utility$List4"
5a 000013  000100 000000
			L59:
3a 000014  777764 000046		" "bcpl_utility$List6"
5a 000015  000105 000000
			L57:
3a 000016  777762 000046		" "bcpl_cae2$Rcom"
5a 000017  000115 000000
			L35:
3a 000020  777760 000046		" "bcpl_utility$Freevec"
5a 000021  000122 000000
			L31:
3a 000022  777756 000046		" "bcpl_utility$Newvec"
5a 000023  000127 000000
			L28:
3a 000024  777754 000046		" "bcpl_utility$List3"
5a 000025  000134 000000
			L22:
3a 000026  777752 000046		" "bcpl_cae1$Rexp"
5a 000027  000144 000000
			L9:
3a 000030  777750 000046		" "bcpl_lex0$Nextsymb"
5a 000031  000155 000000
			L8:
3a 000032  777746 000046		" "bcpl_report$CaeReport"
5a 000033  000166 000000
	"	Symbol section header

aa 000000  000000 000001		" version number of header structure
aa 000001  163171 155142		" "symbtree"
aa 000002  164162 145145
aa 000003  000000 000003		" compiler version number
aa 000004  000000 101170		" date/time compiler modified
aa 000005  533311 032072		" 09/25/73  0959.1 mst Tue
aa 000006  000000 102333		" time of this compilation
aa 000007  433200 634054		" 01/24/75  0649.0 mst Fri
aa 000010  142143 160154		" "bcpl    "
aa 000011  040040 040040
aa 000012  000052 000035		" compiler version name - pointer, length
aa 000013  000062 000024		" user id - pointer, length
aa 000014  000067 000043		" comment string - pointer, length
aa 000015  000002 000002		" text and linkage boundaries
aa 000016  000024 000000		" source map, symbol tree root
7a 000017  000000 000161		" section header pointer, block size
aa 000020  000000 000161		" next block pointer, rel_text
aa 000021  000000 000207		" rel_def, rel_link
aa 000022  000215 000161		" rel_symbol, default truncate
aa 000023  000024 000000		" optional truncate, unused
aa 000024  000000 000001		" source files map: version number
aa 000025  000000 000005		"                   number of files
aa 000026  000100 000050		" bcpl_cae0
aa 000027  023333 611377		" last modified on
aa 000030  000000 102333		" 01/24/75  0647.2 mst Fri
aa 000031  432366 400000
aa 000032  000112 000044		" bcpl_cae_head
aa 000033  021607 540211		" last modified on
aa 000034  000000 101621		" 05/06/74  1740.5 mst Mon
aa 000035  351400 200000
aa 000036  000123 000051		" bcpl_compiler_head
aa 000037  021607 540214		" last modified on
aa 000040  000000 101621		" 05/06/74  1740.6 mst Mon
aa 000041  351403 200000
aa 000042  000136 000043		" bcpl_symbols
aa 000043  021607 540223		" last modified on
aa 000044  000000 101621		" 05/06/74  1740.8 mst Mon
aa 000045  351474 000000
aa 000046  000147 000045		" bcpl_cae_codes
aa 000047  021607 540210		" last modified on
aa 000050  000000 101621		" 05/06/74  1740.5 mst Mon
aa 000051  351400 200000
aa 000052  102103 120114		" "BCPL version 3.4, August 1973"
aa 000053  040166 145162
aa 000054  163151 157156
aa 000055  040063 056064
aa 000056  054040 101165
aa 000057  147165 163164
aa 000060  040061 071067
aa 000061  063040 040040
aa 000062  115141 162164		" "Martinson.SysMaint.a"
aa 000063  151156 163157
aa 000064  156056 123171
aa 000065  163115 141151
aa 000066  156164 056141
aa 000067  163157 165162		" "source  xref  alist  optimize  6180"
aa 000070  143145 040040
aa 000071  170162 145146
aa 000072  040040 141154
aa 000073  151163 164040
aa 000074  040157 160164
aa 000075  151155 151172
aa 000076  145040 040066
aa 000077  061070 060040
aa 000100  076062 056061		" ">2.1spec>online>mib083074>bcpl_cae0.bcpl"
aa 000101  163160 145143
aa 000102  076157 156154
aa 000103  151156 145076
aa 000104  155151 142060
aa 000105  070063 060067
aa 000106  064076 142143
aa 000107  160154 137143
aa 000110  141145 060056
aa 000111  142143 160154
aa 000112  076154 144144		" ">ldd>include>bcpl_cae_head.incl.bcpl"
aa 000113  076151 156143
aa 000114  154165 144145
aa 000115  076142 143160
aa 000116  154137 143141
aa 000117  145137 150145
aa 000120  141144 056151
aa 000121  156143 154056
aa 000122  142143 160154
aa 000123  076154 144144		" ">ldd>include>bcpl_compiler_head.incl.bcpl"
aa 000124  076151 156143
aa 000125  154165 144145
aa 000126  076142 143160
aa 000127  154137 143157
aa 000130  155160 151154
aa 000131  145162 137150
aa 000132  145141 144056
aa 000133  151156 143154
aa 000134  056142 143160
aa 000135  154040 040040
aa 000136  076154 144144		" ">ldd>include>bcpl_symbols.incl.bcpl"
aa 000137  076151 156143
aa 000140  154165 144145
aa 000141  076142 143160
aa 000142  154137 163171
aa 000143  155142 157154
aa 000144  163056 151156
aa 000145  143154 056142
aa 000146  143160 154040
aa 000147  076154 144144		" ">ldd>include>bcpl_cae_codes.incl.bcpl"
aa 000150  076151 156143
aa 000151  154165 144145
aa 000152  076142 143160
aa 000153  154137 143141
aa 000154  145137 143157
aa 000155  144145 163056
aa 000156  151156 143154
aa 000157  056142 143160
aa 000160  154040 040040
	"	Relocation information


	"	text section relocation bits

aa 000161  000000 000002		" version number of rel-bits structure
aa 000162  000000 001315		" length in bits
aa 000163  740505 170047
aa 000164  236021 640000
aa 000165  247412 751703
aa 000166  132005 170053
aa 000167  200000 240000
aa 000170  051701 432360
aa 000171  206474 077517
aa 000172  014320 000517
aa 000173  022320 247403
aa 000174  350001 200000
aa 000175  247402 350005
aa 000176  170053 200517
aa 000177  010323 601264
aa 000200  051700 672360
aa 000201  126474 027517
aa 000202  022720 051700
aa 000203  432360 146400
aa 000204  012360 306400
aa 000205  247402 550000
aa 000206  012024 740310
l	"	inkage relocation bits

aa 000207  000000 000002		" version number of rel-bits structure
aa 000210  000000 000220		" length in bits
aa 000211  100002 204652
aa 000212  465246 524652
aa 000213  465246 524652
aa 000214  465246 524652
s	"	ymbol relocation bits

aa 000215  000000 000002		" version number of rel-bits structure
aa 000216  000000 000043		" length in bits
aa 000217  740365 770606
	"	Object map

aa 001550  000000 000001		" version number of object_map structure
aa 001551  157142 152137		" "obj_map "
aa 001552  155141 160040
aa 001553  000000 001101		" text offset, length
aa 001554  001102 000171		" def offset, length
aa 001555  001274 000034		" link offset, length
aa 001556  001330 000220		" symbol offset, length
aa 001557  000000 000000		" break map offset, length
aa 001560  340000 000000		" flags: ^bound, relocatable, procedure, standard
aa 001561  001550 000000		" object map pointer, unused


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
