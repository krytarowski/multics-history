	COMPILATION LISTING OF SEGMENT reconfigure_rcp
	Compiled by: Multics PL/I Compiler, Release 33e, of October 6, 1992
	Compiled at: CGI                             
	Compiled on: 2000-04-17_1927.89_Mon_mdt
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 reconfigure_rcp:  procedure;
       12 
       13 /*	This program is an operator command that adds and deletes devices.
       14**	Created on 12/31/74 by Bill Silver.
       15**
       16**	This program has two entry points:
       17**	     1.	add_device    -	Add a deleted device back to the system.
       18**	     2.	del_device    -	Delete a device from the system.
       19**/
       20 
       21 dcl	arg_len		fixed bin;	/* Length of device name argument. */
       22 dcl	arg_ptr		ptr;		/* Pointer to device name argument. */
       23 dcl	ecode		fixed bin(35);	/* error_table_ code. */
       24 
       25 dcl	argument char(arg_len) based(arg_ptr);	/* Used to reference device name argument. */
       26 
       27 dcl	com_err_		   entry  options(variable);
       28 dcl	cu_$arg_ptr	   entry  (fixed bin,ptr,fixed bin,fixed bin(35));
       29 dcl	rcp_sys_$add_device	   entry  (char(*),fixed bin(35));
       30 dcl	rcp_sys_$delete_device entry  (char(*),fixed bin(35));
       31 /*	*/
       32 add_device:  entry;
       33 
       34 /*	This entry is called to add a deleted device back to the system.
       35**/
       36 	call cu_$arg_ptr (1,arg_ptr,arg_len,ecode);
       37 	if   ecode ^= 0
       38 	     then do;
       39 		call com_err_ (ecode,"reconfigure_rcp","Error getting device name.");
       40 		return;
       41 	     end;
       42 
       43 	call rcp_sys_$add_device (argument,ecode);
       44 	if   ecode ^= 0
       45 	     then call com_err_ (ecode,"reconfigure_rcp","Error adding device: ^a",argument);
       46 
       47 	return;
       48 
       49 
       50 
       51 
       52 del_device:  entry;
       53 
       54 /*	This entry is called to delete a device from the system.
       55**	The device must be known to RCP, that is, it must be configured.
       56**	If the device is currently in use by some process that usage will be
       57**	terminated.  The device will not be assigned to any other process until
       58**	it is added again.
       59**/
       60 	call cu_$arg_ptr (1,arg_ptr,arg_len,ecode);
       61 	if   ecode ^= 0
       62 	     then do;
       63 		call com_err_ (ecode,"reconfigure_rcp","Error getting device name.");
       64 		return;
       65 	     end;
       66 
       67 	call rcp_sys_$delete_device (argument,ecode);
       68 	if   ecode ^= 0
       69 	     then call com_err_ (ecode,"reconfigure_rcp","Error deleting device: ^a",argument);
       70 
       71 	end  reconfigure_rcp;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    04/17/00  1927.8  reconfigure_rcp.pl1               >udd>sm>ds>w>ml>reconfigure_rcp.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
arg_len                         000100 automatic       fixed bin(17,0)          dcl 21 set ref 36* 43 43 44 44 60* 67 67 68 68
arg_ptr                         000102 automatic       pointer                  dcl 22 set ref 36* 43 44 60* 67 68
argument                               based           char                     packed unaligned dcl 25 set ref 43* 44* 67* 68*
com_err_                        000010 constant        entry                    external dcl 27 ref 39 44 63 68
cu_$arg_ptr                     000012 constant        entry                    external dcl 28 ref 36 60
ecode                           000104 automatic       fixed bin(35,0)          dcl 23 set ref 36* 37 39* 43* 44 44* 60* 61 63* 67*
                                                                                  68 68*
rcp_sys_$add_device             000014 constant        entry                    external dcl 29 ref 43
rcp_sys_$delete_device          000016 constant        entry                    external dcl 30 ref 67

NAMES DECLARED BY EXPLICIT CONTEXT.
add_device                      000046 constant        entry                    external dcl 32
del_device                      000212 constant        entry                    external dcl 52
reconfigure_rcp                 000037 constant        entry                    external dcl 11

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       446         466     353         456
Length       640     353        20         136      72           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
reconfigure_rcp                     120 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
reconfigure_rcp          000100 arg_len                     reconfigure_rcp
                         000102 arg_ptr                     reconfigure_rcp
                         000104 ecode                       reconfigure_rcp

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      cu_$arg_ptr                   rcp_sys_$add_device           rcp_sys_$delete_device

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000036        32 000044        36 000053        37 000071        39 000073        40 000123        43 000124
     44 000144        47 000210        52 000211        60 000217        61 000236        63 000240        64 000270
     67 000271        68 000311        71 000352


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
