	COMPILATION LISTING OF SEGMENT display_anst
	Compiled by: Multics PL/I Compiler, Release 29, of July 28, 1986
	Compiled at: Honeywell Bull, Phx. Az., Sys-M 
	Compiled on: 08/04/87  1310.5 mst Tue
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1987                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 /* format: style4 */
       13 display_anst: proc;
       14 
       15 /* DISPLAY_ANST - dump answer table on console.
       16*
       17*   THVV
       18*
       19*   Modified by T. Casey, August 1975 to add dump_autbl and dump_dutbl
       20*   Modified by D. M. Wells, July 1976, to understand about FTP channels
       21*   Modified by G. C. Dixon, April 1978:  rename entry points to
       22*   display_anst, display_aut & display_dut and standardize control arguments.
       23*   Modified by E. N. Kittlitz, September 1982: merge in old dump_anstbl entries.
       24*
       25**/
       26 
       27 
       28 /****^  HISTORY COMMENTS:
       29*  1) change(87-05-31,GDixon), approve(87-07-13,MCR7741),
       30*     audit(87-07-24,Hartogs), install(87-08-04,MR12.1-1055):
       31*      A) Expand length of -channel operand to hold up to 32 characters.
       32*      B) Allow -channel operand to be a starname.
       33*                                                   END HISTORY COMMENTS */
       34 
       35 
       36 dcl  al fixed bin (21);
       37 dcl  ansp ptr;
       38 dcl  ap ptr;
       39 dcl  argc fixed bin;
       40 dcl  argn fixed bin;
       41 dcl  bchr char (al) based (ap) unaligned;
       42 dcl  dn char (168);
       43 dcl  ec fixed bin (35);
       44 dcl  en char (32);
       45 dcl  entry_sw fixed bin;
       46 dcl  hdr bit (1) aligned init ("1"b);
       47 dcl  mode fixed bin init (1);
       48 dcl  oct bit (1) aligned init ("0"b);
       49 dcl  old_dump bit (1) aligned;
       50 dcl  path char (168);
       51 dcl  sch_tty char (32) aligned init ("");
       52 dcl  sch_user char (32) aligned init ("");
       53 dcl  star_type fixed bin(2);
       54 dcl  whoami char (12);
       55 
       56 dcl  entry_var variable entry (ptr, bit (1) aligned, bit (1) aligned, fixed bin,
       57 	char (*) aligned, char (*) aligned, char (*) aligned);
       58 
       59 dcl  ANS fixed bin init (1) static options (constant);
       60 dcl  AUT fixed bin init (2) static options (constant);
       61 dcl  DUT fixed bin init (3) static options (constant);
       62 
       63 dcl  (char, null) builtin;
       64 
       65 dcl  cleanup condition;
       66 
       67 dcl  check_star_name_ entry (char(*), bit(36), fixed bin(2), fixed bin(35));
       68 dcl  com_err_ entry options (variable);
       69 dcl  cu_$arg_count entry (fixed bin, fixed bin (35));
       70 dcl  cu_$arg_ptr entry (fixed bin, ptr, fixed bin (21), fixed bin (35));
       71 dcl  dump_anstbl_ entry (ptr, bit (1) aligned, bit (1) aligned, fixed bin, char (*) aligned, char (*) aligned, char (*) aligned);
       72 dcl  dump_autbl_ entry (ptr, bit (1) aligned, bit (1) aligned, fixed bin, char (*) aligned, char (*) aligned, char (*) aligned);
       73 dcl  dump_dutbl_ entry (ptr, bit (1) aligned, bit (1) aligned, fixed bin, char (*) aligned, char (*) aligned, char (*) aligned);
       74 dcl  expand_pathname_ entry (char (*), char (*), char (*), fixed bin (35));
       75 dcl  initiate_file_ entry (char (*), char (*), bit (*), ptr, fixed bin (24), fixed bin (35));
       76 dcl  pathname_ entry (char (*), char (*)) returns (char (168));
       77 dcl  terminate_file_ entry (ptr, fixed bin (24), bit (*), fixed bin (35));
       78 
       79 dcl  error_table_$badopt fixed bin (35) ext;
       80 
       81 /* -------------------------------------------------------- */
       82 
       83 	whoami = "display_anst";
       84 	old_dump = "0"b;
       85 	go to ans_join;
       86 
       87 dump_anstbl: entry;
       88 
       89 	whoami = "dump_anstbl";
       90 	old_dump = "1"b;
       91 
       92 ans_join: path = ">system_control_1>answer_table";
       93 	entry_sw = ANS;
       94 	entry_var = dump_anstbl_;
       95 
       96 JOIN:	ansp = null;
       97 	on cleanup begin;
       98 		if ansp ^= null then
       99 		     call terminate_file_ (ansp, 0, TERM_FILE_TERM, (0));
      100 	     end;
      101 	call cu_$arg_count (argc, ec);
      102 	if ec ^= 0 then do;
      103 	     call com_err_ (ec, whoami);
      104 	     go to exit;
      105 	end;
      106 
      107 	do argn = 1 to argc;
      108 	     call cu_$arg_ptr (argn, ap, al, ec);
      109 	     if char (bchr, 1) = "-" then do;
      110 		if bchr = "-all" then mode = 0;
      111 		else if bchr = "-a" then mode = 0;
      112 		else if bchr = "-lock" then mode = 2;
      113 		else if bchr = "-octal" then oct = "1"b;
      114 		else if bchr = "-oc" then oct = "1"b;
      115 		else if bchr = "-o" & old_dump then oct = "1"b;
      116 		else if bchr = "-no_octal" | bchr = "-noc" then oct = "0"b;
      117 		else if bchr = "-no_header" then hdr = "0"b;
      118 		else if bchr = "-nhe" then hdr = "0"b;
      119 		else if bchr = "-nh" & old_dump then hdr = "0"b;
      120 		else if bchr = "-header" | bchr = "-he" then hdr = "1"b;
      121 		else if bchr = "-name" | bchr = "-nm" |
      122 			old_dump & bchr = "-user" then do;
      123 		     argn = argn + 1;
      124 		     if argn > argc then do;
      125 no_arg:			call com_err_ (ec, whoami, "Control argument ^a requires an operand.", bchr);
      126 			go to exit;
      127 		     end;
      128 		     call cu_$arg_ptr (argn, ap, al, ec);
      129 		     if ec ^= 0 then do;
      130 cu_fail:			call com_err_ (ec, whoami);
      131 			go to exit;
      132 		     end;
      133 		     mode = 9;
      134 		     sch_user = bchr;
      135 		end;
      136 		else if bchr = "-pathname" | bchr = "-pn" then do;
      137 		     argn = argn + 1;
      138 		     if argn > argc then go to no_arg;
      139 		     call cu_$arg_ptr (argn, ap, al, ec);
      140 		     if ec ^= 0 then go to cu_fail;
      141 		     path = bchr;
      142 		end;
      143 		else if bchr = "-active" then mode = 1;
      144 		else if bchr = "-dial" & entry_sw = ANS then mode = 4;
      145 		else if bchr = "-in" then mode = 3;
      146 		else if (bchr = "-channel" | bchr = "-chn") & entry_sw = ANS
      147 		then do;
      148 		     argn = argn + 1;
      149 		     if argn > argc then go to no_arg;
      150 		     call cu_$arg_ptr (argn, ap, al, ec);
      151 		     if ec ^= 0 then go to cu_fail;
      152 CHN:		     call check_star_name_ (bchr,
      153 		          CHECK_STAR_ENTRY_DEFAULT, star_type, ec);
      154 		     if ec ^= 0 then do;
      155 			call com_err_ (ec, whoami, "channel ^a", bchr);
      156 			go to exit;
      157 		     end;
      158 		     else if star_type = STAR_TYPE_MATCHES_EVERYTHING then;
      159 		     else do;
      160 			mode = 9;
      161 			sch_tty = bchr;
      162 		     end;
      163 		end;
      164 		else do;
      165 bad_arg:		     call com_err_ (error_table_$badopt, whoami, "^a", bchr);
      166 		     go to exit;
      167 		end;
      168 	     end;					/* first char is - */
      169 	     else if old_dump then do;		/* old dump, first char not - */
      170 		if char (bchr, 3) = "caa" |
      171 		     char (bchr, 3) = "net" |
      172 		     char (bchr, 3) = "ftp" |
      173 		     char (bchr, 3) = "tty" then go to CHN;
      174 		else path = bchr;			/* it's a pathname */
      175 	     end;
      176 	     else do;				/* new dump, first char not - */
      177 	          go to CHN;
      178 	     end;
      179 nxarg:	end;
      180 
      181 	call expand_pathname_ (path, dn, en, ec);
      182 	if ec ^= 0 then do;
      183 	     call com_err_ (ec, whoami, "^a", path);
      184 	     go to exit;
      185 	end;
      186 	call initiate_file_ (dn, en, R_ACCESS, ansp, (0), ec);
      187 	if ansp = null then do;
      188 	     call com_err_ (ec, whoami, "^a", pathname_ (dn, en));
      189 	     go to exit;
      190 	end;
      191 
      192 	call entry_var (ansp, hdr, oct, mode, sch_tty, sch_user, "user_output");
      193 
      194 exit:	call terminate_file_ (ansp, 0, TERM_FILE_TERM, (0));
      195 	return;
      196 
      197 
      198 dump_autbl: entry;
      199 
      200 	old_dump = "1"b;
      201 	whoami = "dump_autbl";
      202 	go to aut_join;
      203 
      204 display_aut: entry;
      205 
      206 	old_dump = ""b;
      207 	whoami = "display_aut";
      208 
      209 aut_join: path = ">system_control_dir>absentee_user_table";
      210 	entry_var = dump_autbl_;
      211 	entry_sw = AUT;
      212 	goto JOIN;
      213 
      214 
      215 dump_dutbl: entry;
      216 
      217 	old_dump = "1"b;
      218 	whoami = "dump_dutbl";
      219 	go to dut_join;
      220 
      221 display_dut: entry;
      222 
      223 	old_dump = ""b;
      224 	whoami = "display_dut";
      225 
      226 dut_join: path = ">system_control_dir>daemon_user_table";
      227 	entry_var = dump_dutbl_;
      228 	entry_sw = DUT;
      229 	goto JOIN;
      230  /* BEGIN INCLUDE FILE ... access_mode_values.incl.pl1
  1     2*
  1     3*   Values for the "access mode" argument so often used in hardcore
  1     4*   James R. Davis 26 Jan 81  MCR 4844
  1     5*   Added constants for SM access 4/28/82 Jay Pattin
  1     6*   Added text strings 03/19/85 Chris Jones
  1     7**/
  1     8 
  1     9 
  1    10 /* format: style4,delnl,insnl,indattr,ifthen,dclind10 */
  1    11 dcl	(
  1    12 	N_ACCESS		   init ("000"b),
  1    13 	R_ACCESS		   init ("100"b),
  1    14 	E_ACCESS		   init ("010"b),
  1    15 	W_ACCESS		   init ("001"b),
  1    16 	RE_ACCESS		   init ("110"b),
  1    17 	REW_ACCESS	   init ("111"b),
  1    18 	RW_ACCESS		   init ("101"b),
  1    19 	S_ACCESS		   init ("100"b),
  1    20 	M_ACCESS		   init ("010"b),
  1    21 	A_ACCESS		   init ("001"b),
  1    22 	SA_ACCESS		   init ("101"b),
  1    23 	SM_ACCESS		   init ("110"b),
  1    24 	SMA_ACCESS	   init ("111"b)
  1    25 	)		   bit (3) internal static options (constant);
  1    26 
  1    27 /* The following arrays are meant to be accessed by doing either 1) bin (bit_value) or
  1    28*   2) divide (bin_value, 2) to come up with an index into the array. */
  1    29 
  1    30 dcl	SEG_ACCESS_MODE_NAMES  (0:7) init ("null", "W", "E", "EW", "R", "RW", "RE", "REW") char (4) internal
  1    31 			   static options (constant);
  1    32 
  1    33 dcl	DIR_ACCESS_MODE_NAMES  (0:7) init ("null", "A", "M", "MA", "S", "SA", "SM", "SMA") char (4) internal
  1    34 			   static options (constant);
  1    35 
  1    36 dcl	(
  1    37 	N_ACCESS_BIN	   init (00000b),
  1    38 	R_ACCESS_BIN	   init (01000b),
  1    39 	E_ACCESS_BIN	   init (00100b),
  1    40 	W_ACCESS_BIN	   init (00010b),
  1    41 	RW_ACCESS_BIN	   init (01010b),
  1    42 	RE_ACCESS_BIN	   init (01100b),
  1    43 	REW_ACCESS_BIN	   init (01110b),
  1    44 	S_ACCESS_BIN	   init (01000b),
  1    45 	M_ACCESS_BIN	   init (00010b),
  1    46 	A_ACCESS_BIN	   init (00001b),
  1    47 	SA_ACCESS_BIN	   init (01001b),
  1    48 	SM_ACCESS_BIN	   init (01010b),
  1    49 	SMA_ACCESS_BIN	   init (01011b)
  1    50 	)		   fixed bin (5) internal static options (constant);
  1    51 
  1    52 /* END INCLUDE FILE ... access_mode_values.incl.pl1 */
      230 
      231  /*  BEGIN:   check_star_name.incl.pl1			  *  *  *  *  *  */
  2     2 
  2     3 /****^  HISTORY COMMENTS:
  2     4*  1) change(86-08-14,JSLove), approve(86-08-14,MCR7518),
  2     5*     audit(86-08-14,FCSmith), install(86-10-02,MR12.0-1174):
  2     6*     Created, to support check_star_name_ entrypoint.
  2     7*  2) change(87-06-01,GDixon), approve(87-07-13,MCR7740),
  2     8*     audit(87-06-24,Hartogs), install(87-08-04,MR12.1-1056):
  2     9*     Change structures and bit structures to be unaligned, to match the
  2    10*     check_star_name_ parameters to which such strings are passed.
  2    11*                                                   END HISTORY COMMENTS */
  2    12 
  2    13 /* format: style3,comcol71,ifthenstmt,indcomtxt,indproc,idind30 */
  2    14 
  2    15 declare	1 check_star		aligned based,
  2    16 	  2 reject_wild		bit (1) unaligned,
  2    17 	  2 ignore_archive		bit (1) unaligned,
  2    18 	  2 process_archive		bit (1) unaligned,
  2    19 	  2 ignore_entrypoint	bit (1) unaligned,
  2    20 	  2 process_entrypoint	bit (1) unaligned,
  2    21 	  2 ignore_path		bit (1) unaligned,
  2    22 	  2 process_path		bit (1) unaligned,
  2    23 	  2 ignore_equal		bit (1) unaligned,
  2    24 	  2 ignore_length		bit (1) unaligned,
  2    25 	  2 ignore_nonascii		bit (1) unaligned,
  2    26 	  2 ignore_null		bit (1) unaligned,
  2    27 	  2 unimplemented		bit (25) unaligned;
  2    28 
  2    29 declare	(
  2    30 	CHECK_STAR_ENTRY_DEFAULT	initial ("00010001000"b),	/* Behavior of check_star_name_$entry (obsolete). */
  2    31 	CHECK_STAR_IGNORE_ALL	initial ("01010101111"b),	/* Check for *** and classify only.		*/
  2    32 	CHECK_STAR_IGNORE_ARCHIVE	initial ("01000000000"b),	/* Do not reject archive convention "::".	*/
  2    33 	CHECK_STAR_IGNORE_ENTRYPOINT	initial ("00010000000"b),	/* Do not reject "$" or "|" characters.		*/
  2    34 	CHECK_STAR_IGNORE_EQUAL	initial ("00000001000"b),	/* Do not reject "=" or "%" characters.		*/
  2    35 	CHECK_STAR_IGNORE_LENGTH	initial ("00000000100"b),	/* Do not reject star names longer than 32 chars.	*/
  2    36 	CHECK_STAR_IGNORE_NONASCII	initial ("00000000010"b),	/* No not reject star names with nonASCII chars.	*/
  2    37 	CHECK_STAR_IGNORE_NULL	initial ("00000000001"b),	/* Do not reject names with null components.	*/
  2    38 	CHECK_STAR_IGNORE_PATH	initial ("00000100000"b),	/* Do not reject "<" or ">" characters.		*/
  2    39 	CHECK_STAR_PATH_DEFAULT	initial ("00110011100"b),	/* Behavior of check_star_name_$path (obsolete).	*/
  2    40 	CHECK_STAR_PROCESS_ARCHIVE	initial ("00100000000"b),	/* Process "::" as archive delimiter.		*/
  2    41 	CHECK_STAR_PROCESS_ENTRYPOINT initial ("00001000000"b),	/* Ignore trailing entrypoint if present.	*/
  2    42 	CHECK_STAR_PROCESS_PATH	initial ("00000010000"b),	/* Ignore leading directory path if present.	*/
  2    43 	CHECK_STAR_REJECT_WILD	initial ("10000000000"b),	/* Return error_table_$nostars if type not zero.	*/
  2    44 	CHECK_STAR_UNIMPLEMENTED	initial ("001FFFFFF"b4)	/* Nonexistent test flags.  Reject them.	*/
  2    45 	)			bit (36) static options (constant);
  2    46 
  2    47 declare	(
  2    48 	STAR_TYPE_MATCHES_EVERYTHING	initial (2),
  2    49 	STAR_TYPE_USE_MATCH_PROCEDURE	initial (1),
  2    50 	STAR_TYPE_USE_PL1_COMPARE	initial (0)
  2    51 	)			fixed bin (2) static options (constant);
  2    52 
  2    53 /*  END OF:  check_star_name.incl.pl1			  *  *  *  *  *  */
      231 
      232  /* BEGIN INCLUDE FILE ... terminate_file.incl.pl1 */
  3     2 /* format: style2,^inddcls,idind32 */
  3     3 
  3     4 declare 1 terminate_file_switches	based,
  3     5 	2 truncate		bit (1) unaligned,
  3     6 	2 set_bc			bit (1) unaligned,
  3     7 	2 terminate		bit (1) unaligned,
  3     8 	2 force_write		bit (1) unaligned,
  3     9 	2 delete			bit (1) unaligned;
  3    10 
  3    11 declare TERM_FILE_TRUNC		bit (1) internal static options (constant) initial ("1"b);
  3    12 declare TERM_FILE_BC		bit (2) internal static options (constant) initial ("01"b);
  3    13 declare TERM_FILE_TRUNC_BC		bit (2) internal static options (constant) initial ("11"b);
  3    14 declare TERM_FILE_TERM		bit (3) internal static options (constant) initial ("001"b);
  3    15 declare TERM_FILE_TRUNC_BC_TERM	bit (3) internal static options (constant) initial ("111"b);
  3    16 declare TERM_FILE_FORCE_WRITE		bit (4) internal static options (constant) initial ("0001"b);
  3    17 declare TERM_FILE_DELETE		bit (5) internal static options (constant) initial ("00001"b);
  3    18 
  3    19 /* END INCLUDE FILE ... terminate_file.incl.pl1 */
      232 
      233 
      234      end display_anst;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    08/04/87  1221.9  display_anst.pl1                  >special_ldd>install>MR12.1-1054>display_anst.pl1
230          1    04/11/85  1452.6  access_mode_values.incl.pl1       >ldd>include>access_mode_values.incl.pl1
231          2    08/04/87  1140.3  check_star_name.incl.pl1          >spec>install>1056>check_star_name.incl.pl1
232          3    04/06/83  1239.4  terminate_file.incl.pl1           >ldd>include>terminate_file.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
ANS                                    constant        fixed bin(17,0)          initial dcl 59 ref 93 144 146
AUT                                    constant        fixed bin(17,0)          initial dcl 60 ref 211
CHECK_STAR_ENTRY_DEFAULT        000001 constant        bit(36)                  initial unaligned dcl 2-29 set ref 152*
DUT                                    constant        fixed bin(17,0)          initial dcl 61 ref 228
R_ACCESS                        000041 constant        bit(3)                   initial unaligned dcl 1-11 set ref 186*
STAR_TYPE_MATCHES_EVERYTHING           constant        fixed bin(2,0)           initial dcl 2-47 ref 158
TERM_FILE_TERM                  000000 constant        bit(3)                   initial unaligned dcl 3-14 set ref 98* 194*
al                              000100 automatic       fixed bin(21,0)          dcl 36 set ref 108* 109 110 111 112 113 114 115 116
                                                                                  116 117 118 119 120 120 121 121 121 125 125 128*
                                                                                  134 136 136 139* 141 143 144 145 146 146 150* 152
                                                                                  152 155 155 161 165 165 170 170 170 170 174
ansp                            000102 automatic       pointer                  dcl 37 set ref 96* 98 98* 186* 187 192* 194*
ap                              000104 automatic       pointer                  dcl 38 set ref 108* 109 110 111 112 113 114 115 116
                                                                                  116 117 118 119 120 120 121 121 121 125 128* 134
                                                                                  136 136 139* 141 143 144 145 146 146 150* 152 155
                                                                                  161 165 170 170 170 170 174
argc                            000106 automatic       fixed bin(17,0)          dcl 39 set ref 101* 107 124 138 149
argn                            000107 automatic       fixed bin(17,0)          dcl 40 set ref 107* 108* 123* 123 124 128* 137* 137
                                                                                  138 139* 148* 148 149 150*
bchr                                   based           char                     unaligned dcl 41 set ref 109 110 111 112 113 114 115
                                                                                  116 116 117 118 119 120 120 121 121 121 125* 134
                                                                                  136 136 141 143 144 145 146 146 152* 155* 161 165*
                                                                                  170 170 170 170 174
char                                                   builtin function         dcl 63 ref 109 170 170 170 170
check_star_name_                000010 constant        entry                    external dcl 67 ref 152
cleanup                         000302 stack reference condition                dcl 65 ref 97
com_err_                        000012 constant        entry                    external dcl 68 ref 103 125 130 155 165 183 188
cu_$arg_count                   000014 constant        entry                    external dcl 69 ref 101
cu_$arg_ptr                     000016 constant        entry                    external dcl 70 ref 108 128 139 150
dn                              000110 automatic       char(168)                unaligned dcl 42 set ref 181* 186* 188* 188*
dump_anstbl_                    000020 constant        entry                    external dcl 71 ref 94
dump_autbl_                     000022 constant        entry                    external dcl 72 ref 210
dump_dutbl_                     000024 constant        entry                    external dcl 73 ref 227
ec                              000162 automatic       fixed bin(35,0)          dcl 43 set ref 101* 102 103* 108* 125* 128* 129 130*
                                                                                  139* 140 150* 151 152* 154 155* 181* 182 183* 186*
                                                                                  188*
en                              000163 automatic       char(32)                 unaligned dcl 44 set ref 181* 186* 188* 188*
entry_sw                        000173 automatic       fixed bin(17,0)          dcl 45 set ref 93* 144 146 211* 228*
entry_var                       000276 automatic       entry variable           dcl 56 set ref 94* 192 210* 227*
error_table_$badopt             000036 external static fixed bin(35,0)          dcl 79 set ref 165*
expand_pathname_                000026 constant        entry                    external dcl 74 ref 181
hdr                             000174 automatic       bit(1)                   initial dcl 46 set ref 46* 117* 118* 119* 120* 192*
initiate_file_                  000030 constant        entry                    external dcl 75 ref 186
mode                            000175 automatic       fixed bin(17,0)          initial dcl 47 set ref 47* 110* 111* 112* 133* 143*
                                                                                  144* 145* 160* 192*
null                                                   builtin function         dcl 63 ref 96 98 187
oct                             000176 automatic       bit(1)                   initial dcl 48 set ref 48* 113* 114* 115* 116* 192*
old_dump                        000177 automatic       bit(1)                   dcl 49 set ref 84* 90* 115 119 121 169 200* 206*
                                                                                  217* 223*
path                            000200 automatic       char(168)                unaligned dcl 50 set ref 92* 141* 174* 181* 183*
                                                                                  209* 226*
pathname_                       000032 constant        entry                    external dcl 76 ref 188 188
sch_tty                         000252 automatic       char(32)                 initial dcl 51 set ref 51* 161* 192*
sch_user                        000262 automatic       char(32)                 initial dcl 52 set ref 52* 134* 192*
star_type                       000272 automatic       fixed bin(2,0)           dcl 53 set ref 152* 158
terminate_file_                 000034 constant        entry                    external dcl 77 ref 98 194
whoami                          000273 automatic       char(12)                 unaligned dcl 54 set ref 83* 89* 103* 125* 130* 155*
                                                                                  165* 183* 188* 201* 207* 218* 224*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
A_ACCESS                               internal static bit(3)                   initial unaligned dcl 1-11
A_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 1-36
CHECK_STAR_IGNORE_ALL                  internal static bit(36)                  initial unaligned dcl 2-29
CHECK_STAR_IGNORE_ARCHIVE              internal static bit(36)                  initial unaligned dcl 2-29
CHECK_STAR_IGNORE_ENTRYPOINT           internal static bit(36)                  initial unaligned dcl 2-29
CHECK_STAR_IGNORE_EQUAL                internal static bit(36)                  initial unaligned dcl 2-29
CHECK_STAR_IGNORE_LENGTH               internal static bit(36)                  initial unaligned dcl 2-29
CHECK_STAR_IGNORE_NONASCII             internal static bit(36)                  initial unaligned dcl 2-29
CHECK_STAR_IGNORE_NULL                 internal static bit(36)                  initial unaligned dcl 2-29
CHECK_STAR_IGNORE_PATH                 internal static bit(36)                  initial unaligned dcl 2-29
CHECK_STAR_PATH_DEFAULT                internal static bit(36)                  initial unaligned dcl 2-29
CHECK_STAR_PROCESS_ARCHIVE             internal static bit(36)                  initial unaligned dcl 2-29
CHECK_STAR_PROCESS_ENTRYPOINT          internal static bit(36)                  initial unaligned dcl 2-29
CHECK_STAR_PROCESS_PATH                internal static bit(36)                  initial unaligned dcl 2-29
CHECK_STAR_REJECT_WILD                 internal static bit(36)                  initial unaligned dcl 2-29
CHECK_STAR_UNIMPLEMENTED               internal static bit(36)                  initial unaligned dcl 2-29
DIR_ACCESS_MODE_NAMES                  internal static char(4)                  initial array unaligned dcl 1-33
E_ACCESS                               internal static bit(3)                   initial unaligned dcl 1-11
E_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 1-36
M_ACCESS                               internal static bit(3)                   initial unaligned dcl 1-11
M_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 1-36
N_ACCESS                               internal static bit(3)                   initial unaligned dcl 1-11
N_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 1-36
REW_ACCESS                             internal static bit(3)                   initial unaligned dcl 1-11
REW_ACCESS_BIN                         internal static fixed bin(5,0)           initial dcl 1-36
RE_ACCESS                              internal static bit(3)                   initial unaligned dcl 1-11
RE_ACCESS_BIN                          internal static fixed bin(5,0)           initial dcl 1-36
RW_ACCESS                              internal static bit(3)                   initial unaligned dcl 1-11
RW_ACCESS_BIN                          internal static fixed bin(5,0)           initial dcl 1-36
R_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 1-36
SA_ACCESS                              internal static bit(3)                   initial unaligned dcl 1-11
SA_ACCESS_BIN                          internal static fixed bin(5,0)           initial dcl 1-36
SEG_ACCESS_MODE_NAMES                  internal static char(4)                  initial array unaligned dcl 1-30
SMA_ACCESS                             internal static bit(3)                   initial unaligned dcl 1-11
SMA_ACCESS_BIN                         internal static fixed bin(5,0)           initial dcl 1-36
SM_ACCESS                              internal static bit(3)                   initial unaligned dcl 1-11
SM_ACCESS_BIN                          internal static fixed bin(5,0)           initial dcl 1-36
STAR_TYPE_USE_MATCH_PROCEDURE          internal static fixed bin(2,0)           initial dcl 2-47
STAR_TYPE_USE_PL1_COMPARE              internal static fixed bin(2,0)           initial dcl 2-47
S_ACCESS                               internal static bit(3)                   initial unaligned dcl 1-11
S_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 1-36
TERM_FILE_BC                           internal static bit(2)                   initial unaligned dcl 3-12
TERM_FILE_DELETE                       internal static bit(5)                   initial unaligned dcl 3-17
TERM_FILE_FORCE_WRITE                  internal static bit(4)                   initial unaligned dcl 3-16
TERM_FILE_TRUNC                        internal static bit(1)                   initial unaligned dcl 3-11
TERM_FILE_TRUNC_BC                     internal static bit(2)                   initial unaligned dcl 3-13
TERM_FILE_TRUNC_BC_TERM                internal static bit(3)                   initial unaligned dcl 3-15
W_ACCESS                               internal static bit(3)                   initial unaligned dcl 1-11
W_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 1-36
check_star                             based           structure                level 1 dcl 2-15
terminate_file_switches                based           structure                level 1 packed unaligned dcl 3-4

NAMES DECLARED BY EXPLICIT CONTEXT.
CHN                             001022 constant        label                    dcl 152 ref 170 177
JOIN                            000261 constant        label                    dcl 96 ref 212 229
ans_join                        000247 constant        label                    dcl 92 ref 85
aut_join                        001522 constant        label                    dcl 209 ref 202
bad_arg                         001126 constant        label                    dcl 165
cu_fail                         000642 constant        label                    dcl 130 ref 140 151
display_anst                    000216 constant        entry                    external dcl 13
display_aut                     001510 constant        entry                    external dcl 204
display_dut                     001553 constant        entry                    external dcl 221
dump_anstbl                     000234 constant        entry                    external dcl 87
dump_autbl                      001473 constant        entry                    external dcl 198
dump_dutbl                      001536 constant        entry                    external dcl 215
dut_join                        001565 constant        label                    dcl 226 ref 219
exit                            001442 constant        label                    dcl 194 ref 104 126 131 156 166 184 189
no_arg                          000567 constant        label                    dcl 125 ref 138 149
nxarg                           001206 constant        label                    dcl 179

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      2020        2060    1604        2030
Length      2336    1604        40         242     213           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
display_anst                        306 external procedure  is an external procedure.  
on unit on line 97                   84 on unit               

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
display_anst             000100 al                          display_anst
                         000102 ansp                        display_anst
                         000104 ap                          display_anst
                         000106 argc                        display_anst
                         000107 argn                        display_anst
                         000110 dn                          display_anst
                         000162 ec                          display_anst
                         000163 en                          display_anst
                         000173 entry_sw                    display_anst
                         000174 hdr                         display_anst
                         000175 mode                        display_anst
                         000176 oct                         display_anst
                         000177 old_dump                    display_anst
                         000200 path                        display_anst
                         000252 sch_tty                     display_anst
                         000262 sch_user                    display_anst
                         000272 star_type                   display_anst
                         000273 whoami                      display_anst
                         000276 entry_var                   display_anst

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
r_e_as              call_ent_var_desc   call_ext_out_desc   call_ext_out        return_mac          enable_op
ext_entry           int_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
check_star_name_              com_err_                      cu_$arg_count                 cu_$arg_ptr
dump_anstbl_                  dump_autbl_                   dump_dutbl_                   expand_pathname_
initiate_file_                pathname_                     terminate_file_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$badopt




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     46 000200        47 000202        48 000204        51 000205        52 000210        13 000215        83 000224
     84 000231        85 000232        87 000233        89 000242        90 000245        92 000247        93 000252
     94 000254        96 000261        97 000263        98 000277       100 000332       101 000333       102 000344
    103 000346       104 000363       107 000364       108 000373       109 000410       110 000421       111 000430
    112 000436       113 000445       114 000454       115 000463       116 000474       117 000506       118 000514
    119 000522       120 000532       121 000545       123 000563       124 000564       125 000567       126 000622
    128 000623       129 000640       130 000642       131 000657       133 000660       134 000662       135 000667
    136 000670       137 000700       138 000701       139 000704       140 000721       141 000723       142 000730
    143 000731       144 000740       145 000755       146 000765       148 000777       149 001000       150 001003
    151 001020       152 001022       154 001052       155 001054       156 001111       158 001112       160 001116
    161 001120       163 001125       165 001126       166 001157       168 001160       169 001161       170 001163
    174 001201       175 001204       177 001205       179 001206       181 001210       182 001234       183 001236
    184 001265       186 001266       187 001324       188 001330       189 001377       192 001400       194 001442
    195 001471       198 001472       200 001501       201 001503       202 001506       204 001507       206 001516
    207 001517       209 001522       210 001525       211 001532       212 001534       215 001535       217 001544
    218 001546       219 001551       221 001552       223 001561       224 001562       226 001565       227 001570
    228 001575       229 001577


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
