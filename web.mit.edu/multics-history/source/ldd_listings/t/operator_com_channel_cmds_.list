	COMPILATION LISTING OF SEGMENT operator_com_channel_cmds_
	Compiled by: Multics PL/I Compiler, Release 30, of February 16, 1988
	Compiled at: Honeywell Bull, Phoenix AZ, SysM
	Compiled on: 10/07/88  1232.4 mst Fri
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1987                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1985 *
        6*        *                                                         *
        7*        *********************************************************** */
        8 
        9 /****^  HISTORY COMMENTS:
       10*  1) change(85-12-05,MSharpe), approve(87-05-01,MCR7690),
       11*     audit(87-05-07,Parisek), install(87-08-04,MR12.1-1055):
       12*     Original coding.  Moved the com_channel related commands out of admin_.
       13*  2) change(87-04-26,GDixon), approve(87-05-01,MCR7690),
       14*     audit(87-05-07,Parisek), install(87-08-04,MR12.1-1055):
       15*     Upgraded for change to answer_table.incl.pl1.
       16*  3) change(88-09-08,Parisek), approve(88-09-28,MCR7996),
       17*     audit(88-10-05,Hunter), install(88-10-07,MR12.2-1140):
       18*     Removed references to sys_log_$command_error_log entry which does not
       19*     exist and changed them to sys_log_$command_error which does exist.
       20*                                                   END HISTORY COMMENTS */
       21 /* format: style4,indattr */
       22 
       23 operator_com_channel_cmds_: procedure ();
       24 
       25 /* The following two entry points provide commands to change the state of
       26*   a tty channel, attach, and remove.  Other commands which manipulate the
       27*   process using the channel, ie., detach, terminate, bump, unbump, and
       28*   disconnect may be found in in admin_process_commands_.
       29*
       30**/
       31 
       32 
       33 
       34 
       35 /*  AUTOMATIC */
       36 
       37 dcl  action	        char (8) aligned;
       38 dcl  action_flag	        bit (1) aligned;
       39 dcl  action_log	        char (12) aligned;
       40 dcl  answer	        char (256) init ("");
       41 dcl  arg_index	        fixed bin (17);
       42 dcl  arg_length	        fixed bin (21);
       43 dcl  arg_list_ptr	        ptr;
       44 dcl  arg_ptr	        ptr;
       45 dcl  code		        fixed bin (35);
       46 dcl  comname	        char (12) aligned;
       47 dcl  input_channel	        char (32);			/* channel id to look for */
       48 
       49 /* BASED */
       50 
       51 dcl  arg		        char (arg_length) based (arg_ptr);
       52 
       53 /* BUILTIN */
       54 
       55 dcl  (addr, null)	        builtin;
       56 
       57 
       58 /* ENTRY */
       59 
       60 dcl  asu_$asu_attach        entry (char (*), fixed bin (35));
       61 dcl  asu_$asu_remove        entry (ptr);
       62 dcl  cu_$arg_list_ptr       entry () returns (ptr);
       63 dcl  cu_$arg_ptr_rel        entry (fixed bin, ptr, fixed bin (21),
       64 		        fixed bin (35), ptr);
       65 dcl  sys_log_$command       entry options (variable);
       66 dcl  sys_log_$command_error entry options (variable);
       67 
       68 /* EXTERNAL */
       69 
       70 dcl  error_table_$action_not_performed fixed bin (35) ext static;
       71 
       72 
       73 attach:
       74      entry options (variable);
       75 
       76 /**** This is the operator "attach" command.  It allows the operator to
       77*      attach a communications channel to the answering service. */
       78 
       79 	arg_list_ptr = cu_$arg_list_ptr ();
       80 	comname = "attach";
       81 	action = "attach  ";
       82 	action_log = "attached";
       83 	action_flag = "0"b;
       84 	do arg_index = 1 to 25;			/* take up to 25 args */
       85 	     call cu_$arg_ptr_rel (arg_index, arg_ptr, arg_length,
       86 		code, arg_list_ptr);		/* get one argument, channel id */
       87 	     if code ^= 0
       88 	     then go to ATTACH_RETURN;
       89 
       90 	     input_channel = arg;			/* save channel id */
       91 
       92 	     call asu_$asu_attach (input_channel, code);	/* add channel to answer table */
       93 	     if code = 0 then do;			/* if no error */
       94 		call sys_log_$command (-1, "attach: ^a attached.",
       95 		     input_channel);
       96 		action_flag = "1"b;			/* one worked. */
       97 	     end;
       98 	     else do;				/* some error occurred. */
       99 		if code ^= error_table_$action_not_performed
      100 						/* if asu_attach did not say what */
      101 		then call sys_log_$command_error (1, code,
      102 			comname, input_channel);
      103 						/* we will do so */
      104 	     end;
      105 	end;
      106 
      107 ATTACH_RETURN:
      108 
      109 	if ^action_flag				/* complain if none worked. */
      110 	then call sys_log_$command (-1, "attach: error: not done");
      111 
      112 	return;
      113 
      114 
      115 remove:
      116      entry options (variable);
      117 
      118 	arg_list_ptr = cu_$arg_list_ptr ();
      119 	comname = "remove";
      120 	action = "remove  ";			/* set action code */
      121 	action_log = "removed";
      122 	action_flag = "0"b;				/* none done yet */
      123 	do arg_index = 1 to 25;			/* take up to 25 args */
      124 	     call cu_$arg_ptr_rel (arg_index, arg_ptr, arg_length,
      125 		code, arg_list_ptr);		/* get one argument, channel id */
      126 	     if code ^= 0
      127 	     then go to REMOVE_RETURN;
      128 
      129 	     input_channel = arg;			/* save channel id */
      130 	     cdtep = FIND_CDTE (input_channel);
      131 	     if cdtep = null ()
      132 	     then call sys_log_$command (-1, "remove: Channel ^a not found.",
      133 		     input_channel);
      134 	     else do;
      135 		if cdte.current_service_type = MC_SERVICE
      136 		then call sys_log_$command (1,
      137 			"remove: Channel ^a is in use by the message coordinator and can not be removed",
      138 			cdte.name);
      139 		else do;
      140 		     call asu_$asu_remove (cdtep);	/* remove it */
      141 		     action_flag = "1"b;		/* one worked */
      142 		     call sys_log_$command (-1, "remove: ^a removed",
      143 			input_channel);
      144 		end;
      145 	     end;
      146 	end;
      147 
      148 REMOVE_RETURN:
      149 	if ^action_flag				/* complain if none worked. */
      150 	then call sys_log_$command (-1, "remove: error: not done");
      151 
      152 	return;
      153 
      154 
      155 
      156 FIND_CDTE:
      157      procedure (P_channel_name) returns (ptr);
      158 
      159 dcl  P_channel_name	        char (*) parameter;
      160 dcl  cdtep	        ptr automatic;
      161 dcl  i		        fixed bin (17) automatic;
      162 
      163 	do i = 1 to scdtp -> cdt.current_size;
      164 	     cdtep = addr (scdtp -> cdt.cdt_entry (i));
      165 	     if cdtep -> cdte.in_use > NOW_FREE
      166 	     then if cdtep -> cdte.name = P_channel_name
      167 		then return (cdtep);
      168 	end;
      169 
      170 	return (null ());
      171 
      172      end FIND_CDTE;
      173 
      174  /* BEGIN INCLUDE FILE ... as_data_.incl.pl1 ... */
  1     2 
  1     3 /* format: style4 */
  1     4 
  1     5 /* This file must be kept in sync with as_data_.alm */
  1     6 
  1     7 /****^  HISTORY COMMENTS:
  1     8*  1) change(86-09-21,Beattie), approve(86-09-22,MCR7542),
  1     9*     audit(86-10-31,Brunelle), install(86-11-12,MR12.0-1211):
  1    10*     Remove references to the 963 and 029 preaccess commands and remove support
  1    11*     for ARDS, 202_ETX, 2741 and 1050 in system interfaces.
  1    12*  2) change(86-09-25,Swenson), approve(87-07-20,MCR7737),
  1    13*     audit(87-07-20,GDixon), install(87-08-04,MR12.1-1056):
  1    14*     Add references to as_data_ entrypoints added for Login Server.
  1    15*  3) change(87-03-03,Brunelle), approve(87-07-20,MCR7697),
  1    16*     audit(87-07-20,GDixon), install(87-08-04,MR12.1-1056):
  1    17*     Added new user signal field of inacrcvd (14) to handle inactivity response
  1    18*     from user.
  1    19*                                                   END HISTORY COMMENTS */
  1    20 
  1    21 dcl  as_data_$BS char (1) aligned ext static;		/* BACKSPACE character */
  1    22 dcl  as_data_$CR char (1) aligned ext static;		/* CARRIAGE RETURN character */
  1    23 dcl  as_data_$abs_dim char (32) ext static;		/* absentee DIM */
  1    24 dcl  as_data_$acct_update_priority fixed bin ext static;	/* accounting update IPC priority */
  1    25 dcl  as_data_$acsdir char (168) ext static;		/* Access Control Segment directory */
  1    26 dcl  as_data_$ansp ptr ext static;			/* answer_table */
  1    27 dcl  as_data_$as_procid bit (36) aligned ext static;	/* Answering Service process id */
  1    28 dcl  as_data_$as_ring fixed bin (3) ext static;		/* AS operating ring */
  1    29 dcl  as_data_$as_tty char (6);			/* AS master tty channel */
  1    30 dcl  as_data_$asmtp ptr ext static;			/* AS meter table */
  1    31 dcl  as_data_$autp ptr ext static;			/* absentee_user_table */
  1    32 dcl  as_data_$buzzardp ptr ext static;			/* dpg_ list of buteo processes */
  1    33 dcl  as_data_$cdtp ptr ext static;			/* CDT */
  1    34 dcl  as_data_$default_weight fixed bin (35) ext;		/* default user process load control weight */
  1    35 dcl  as_data_$devtabp ptr ext static;			/* device_table */
  1    36 dcl  as_data_$dft_user_ring fixed bin (3) ext static;	/* default user ring */
  1    37 dcl  as_data_$dutp ptr ext static;			/* daemon_user_table */
  1    38 dcl  as_data_$g115_dim char (32) ext static;
  1    39 dcl  as_data_$lct_initialized bit (1) aligned ext static;	/* LCT allocated in ring 0 */
  1    40 dcl  as_data_$lct_size fixed bin ext static;		/* CDT tty channels + spares */
  1    41 dcl  as_data_$max_user_ring fixed bin (3) ext static;	/* maximum user ring */
  1    42 dcl  as_data_$mgtp ptr ext static;			/* master group table */
  1    43 dcl  as_data_$mrd_dim char (32) ext static;		/* daemon's message routing DIM */
  1    44 dcl  as_data_$ntty_dim char (32) ext static;		/* network connection DIM */
  1    45 dcl  as_data_$pdtdir char (168) ext static;		/* PDT directory */
  1    46 dcl  as_data_$pit_ptr ptr ext static;			/* pit_temp_ */
  1    47 dcl  as_data_$rcpdir char (168) ext static;		/* RCP directory */
  1    48 dcl  as_data_$request_priority fixed bin ext static;
  1    49 dcl  as_data_$rs_ptrs (0:9) ptr ext static;		/* rate_structures */
  1    50 dcl  as_data_$rtdtp ptr ext static;			/* RTDT */
  1    51 dcl  as_data_$sat_htp ptr ext static;			/* SAT hash table */
  1    52 dcl  as_data_$satp ptr ext static;			/* SAT */
  1    53 dcl  as_data_$suffix (0:9) char (2) unaligned ext static;
  1    54 dcl  as_data_$sysdir char (168) ext static;		/* system control directory */
  1    55 dcl  as_data_$teens_suffix (10:19) char (2) unaligned ext static;
  1    56 dcl  as_data_$terminet_tabs_string char (144) varying ext static;
  1    57 dcl  as_data_$tty_dim char (32) ext static;		/* standard interactive DIM */
  1    58 dcl  as_data_$update_priority fixed bin ext static;	/* ??? */
  1    59 dcl  as_data_$version char (8) ext static;		/* AS version */
  1    60 dcl  as_data_$whoptr ptr ext static;			/* whotab */
  1    61 
  1    62 dcl  1 as_data_$login_args aligned ext static,		/* control arguments for login */
  1    63        2 n_login_args fixed bin,
  1    64        2 pad fixed bin,
  1    65        2 login_args (55 /* as_data_$login_args.n_login_args */) char (24) unaligned;
  1    66 
  1    67 dcl  1 as_data_$signal_types ext static aligned,		/* IPC process control signals */
  1    68        2 n_signals fixed bin,
  1    69        2 pad fixed bin,
  1    70        2 signals (14 /* as_data_$signal_types.n_signals */) char (8) unaligned;
  1    71 
  1    72 dcl  1 as_data_$system_signal_types ext static aligned,	/* IPC process control signals */
  1    73        2 n_system_signals fixed bin,
  1    74        2 pad fixed bin,
  1    75        2 system_signals (10 /* as_data_$system_signal_types.n_system_signals */) char (8) unaligned;
  1    76 
  1    77 dcl  as_data_$login_words fixed bin ext static aligned,
  1    78 						/* interactive login words */
  1    79      1 as_data_login_words aligned based (addr (as_data_$login_words)),
  1    80        2 n_words fixed bin,
  1    81        2 pad fixed bin,
  1    82        2 words (0 refer (as_data_login_words.n_words)) char (16) unaligned;
  1    83 
  1    84 dcl  as_data_$debug_flag bit (1) aligned external static;
  1    85 dcl  as_data_$ls_request_server_info_ptr ptr external static;
  1    86 dcl  as_data_$ls_message_buffer_cur_lth fixed bin (18) external static;
  1    87 dcl  as_data_$ls_message_buffer_max_lth fixed bin (18) external static;
  1    88 dcl  as_data_$ls_message_buffer_ptr ptr external static;
  1    89 
  1    90 /* END INCLUDE FILE ... as_data_.incl.pl1 ... */
      174 
      175  /* BEGIN INCLUDE FILE ... as_data_definitions_.incl.pl1 ... */
  2     2 
  2     3 
  2     4 /****^  HISTORY COMMENTS:
  2     5*  1) change(87-04-26,GDixon), approve(87-07-13,MCR7741),
  2     6*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  2     7*     Removed ansp, autp and dutp from this include file, adding them to
  2     8*     answer_table.incl.pl1, absentee_user_table.incl.pl1 and
  2     9*     daemon_user_table.incl.pl1.
  2    10*                                                   END HISTORY COMMENTS */
  2    11 
  2    12 
  2    13 /* This include file requires as_data_.incl.pl1 */
  2    14 
  2    15 /* format: style4 */
  2    16 
  2    17 dcl  as_procid bit (36) aligned defined (as_data_$as_procid);
  2    18 dcl  as_tty char (6) based (addr (as_data_$as_tty));
  2    19 dcl  asmtp ptr defined (as_data_$asmtp);
  2    20 dcl  devtabp ptr defined (as_data_$devtabp);
  2    21 dcl  ip ptr defined (as_data_$rs_ptrs (0));
  2    22 dcl  mgtp ptr defined (as_data_$mgtp);
  2    23 dcl  pdtdir char (168) based (addr (as_data_$pdtdir));
  2    24 dcl  rs_ptrs (0:9) ptr based (addr (as_data_$rs_ptrs (0)));
  2    25 dcl  sat_htp ptr defined (as_data_$sat_htp);
  2    26 dcl  satp ptr defined (as_data_$satp);
  2    27 dcl  scdtp ptr defined (as_data_$cdtp);
  2    28 dcl  sysdir char (168) defined (as_data_$sysdir);
  2    29 dcl  whoptr ptr defined (as_data_$whoptr);
  2    30 
  2    31 /* END INCLUDE FILE ... as_data_definitions_.incl.pl1 ... */
      175 
      176  /* BEGIN INCLUDE FILE ... author_dcl.incl.pl1 */
  3     2 
  3     3 /* This include file declares the "author" substructure
  3     4*   in a form suitable for using the PL/I "like" attribute.
  3     5*
  3     6*   Written 750304 by PG
  3     7**/
  3     8 
  3     9 dcl 1 author_dcl aligned based,
  4     1 /* BEGIN INCLUDE FILE author.incl.pl1 */
  4     2 
  4     3 /* the "author" items must always be the first ones in the table. The
  4     4*   module which moves the converted table to the System Control process
  4     5*   fills in these data items and assumes them to be at the head of the segment
  4     6*   regardless of the specific table's actual declaration. The variables
  4     7*   "lock" and "last_install_time" used to be "process_id" and "ev_channel"
  4     8*    respectively. For tables installed in multiple processes, these
  4     9*    are to be used to lock out multiple installations. */
  4    10 
  4    11 /*  Lock should be used as a modification lock. Since, in general,
  4    12*    entries may not be moved in system tables, even by installations,
  4    13*    it is sufficient for only installers and programs that change threads
  4    14*    to set or respect the lock. Simply updating data in an entry
  4    15*    requires no such protection.
  4    16*
  4    17*    Last_install_time is used by readers of system tables to detect
  4    18*    installations or other serious modifications. By checking it before
  4    19*    and after copying a block of data, they can be protected against
  4    20*    modifications.
  4    21*
  4    22*    Modules that set the lock should save proc_group_id, and then
  4    23*    put their group id there for the time they hold the lock.
  4    24*    if they do not actually install the, they should restore the group id.
  4    25**/
  4    26 
  4    27     2 author aligned,				/* validation data about table's author */
  4    28       3 proc_group_id char (32),			/* process-group-id  (personid.projectid.tag) */
  4    29       3 lock bit (36),				/* installation lock */
  4    30       3 update_attributes bit (1) unal,			/* update/add/delete attributes */
  4    31       3 update_authorization bit (1) unal,		/* update only authorizations */
  4    32       3 deferral_notified bit (1) unal,			/* installer notified of deferral of installation */
  4    33       3 pad bit (33) unaligned,
  4    34       3 last_install_time fixed bin (71),
  4    35       3 table char (4),				/* name of table, e.g., SAT MGT TTT RTDT PDT etc. */
  4    36       3 w_dir char (64),				/* author's working directory */
  4    37 
  4    38 /* END INCLUDE FILE author.incl.pl1 */
  3    10 
  3    11     2 pad;
  3    12 
  3    13 /* END INCLUDE FILE ... author_dcl.incl.pl1 */
      176 
      177  /* BEGIN INCLUDE FILE ... cdt.incl.pl1 */
  5     2 
  5     3 /* format: style3,idind25,indcomtxt */
  5     4 
  5     5 /* Channel Definition Table.
  5     6*   This table lists all of the hardware channels (ports) connected
  5     7*   to the system, and maintains the attributes of each one.
  5     8*
  5     9*   PG 741230
  5    10*   Modified by Mike Grady 5/6/76 to add FNP info.
  5    11*   Modified by Tom Casey 7/29/76 to add more FNP info and a few other things.
  5    12*   Modified by Robert Coren 6/13/77 to make terminal types be character strings.
  5    13*   Modified July 1979 by T. Casey to add several variables for MR8.0 process preservation facility.
  5    14*   Modified December 1980 by E. N. Kittlitz to eliminate cdte.phone_no.
  5    15*   Modified March 1981 by Robert Coren to add "listening" flag for multiplexers and to add TANDD_SERVICE service_type.
  5    16*   Modified April 1981 by E. N. Kittlitz to add cdte.dial_ev_chn, cdte.recent_wakeup_time, cdte.recent_wakeup_count.
  5    17*   Modified July 1981 by T. Casey for MR9.0 to add dialup_flags.detach_after_hangup
  5    18*   Modified December 1981 by E. N. Kittlitz for cdte.leave_edited, cdte.hold_arg,
  5    19*   Modified September 1981 by Benson I. Margulies for cdt_mgr_'s tree of multiplexer's.
  5    20*   Modified August 1982 by E. N. Kittlitz for check_acs.
  5    21*   Modified January 1983 by Keith Loepere for generic_destination.
  5    22*   Modified August 1983 by Robert Coren to add mpxe.check and mpxe.retry_load.
  5    23*   Modified 831216 by E. N. Kittlitz for required_access_class.
  5    24*   Modified 84-04-01 by BIM to finish communications AIM:
  5    25*   access class ranges,
  5    26*   access_control flags.
  5    27**/
  5    28 
  5    29 
  5    30 /****^  HISTORY COMMENTS:
  5    31*  1) change(87-03-17,Beattie), approve(87-04-06,MCR7656),
  5    32*     audit(87-07-13,Parisek), install(87-08-04,MR12.1-1056):
  5    33*     Add support for answering service to use IOCBs when tty_ cannot be
  5    34*     used to service login channels.
  5    35*                                                   END HISTORY COMMENTS */
  5    36 
  5    37 
  5    38 dcl	CDT_version_5	     fixed bin internal static initial (5) options (constant);
  5    39 dcl	CDT_version	     fixed bin internal static initial (6) options (constant);
  5    40 
  5    41 dcl	(cdtp, cdtep, fnpep, mpxep)
  5    42 			     ptr;
  5    43 
  5    44 dcl	1 cdt		     based (cdtp) aligned,	/* all of the system channels */
  5    45 	  2 author	     like author_dcl.author,	/* standard header */
  5    46 	  2 max_size	     fixed bin,		/* maximum number of cdte's in 255K */
  5    47 	  2 current_size	     fixed bin,		/* number of last cdte. */
  5    48 	  2 version	     fixed bin,
  5    49 	  2 freep		     fixed bin,		/* chain of free cdte's */
  5    50 	  2 n_cdtes	     fixed bin,		/* number of used cdte's */
  5    51 	  2 meters_last_reset    fixed bin (71),	/* clock time dialup meters were reset */
  5    52 	  2 realtime_in_dialup   fixed bin (71),	/* Dialup meter */
  5    53 	  2 cpu_in_dialup	     fixed bin (71),	/* .. */
  5    54 	  2 pf_in_dialup	     fixed bin,		/* .. */
  5    55 	  2 pp_in_dialup	     fixed bin,		/* .. */
  5    56 	  2 entries_to_dialup    fixed bin,		/* .. */
  5    57 	  2 flags,
  5    58 	    3 go		     bit (1) unal,		/* ans. serv. said "go ahead and answer the phones" */
  5    59 	    3 cdt_is_live	     bit (1) unal,		/* cdt is active */
  5    60 	    3 mux_mgr_system_init
  5    61 			     bit (1) unal,		/* mux mgr has loaded top-levels */
  5    62 	    3 pad1	     bit (33) unal,
  5    63 	  2 acceptable_fnp_tbf   fixed bin,		/* acceptable minutes between FNP crashes */
  5    64 	  2 spare_channel_count  fixed bin,		/* number of extra channels to leave room for in ring0 */
  5    65 	  2 threads	     aligned like channel_threads,
  5    66 						/* root of non-fnp-top-level-multiplexers */
  5    67 	  2 pad2		     (31) bit (36) aligned,	/* pad header to 80 words */
  5    68 	  2 fnp_entry	     dim (8) like fnpe,	/* max of 8 FNPs for now */
  5    69 	  2 cdt_entry	     dim (2500) like cdte;	/* # of cdte's in 255K */
  5    70 
  5    71 
  5    72 dcl	1 cdte		     based (cdtep) aligned,	/* a channel */
  5    73 	  2 in_use	     fixed bin,		/* see dialup_values. 0=NOW_FREE */
  5    74 /**** * These variables are filled in when the CDTE is created by cv_cmf. They are not dynamic. */
  5    75 	  2 pad1		     bit (36) aligned,
  5    76 	  2 name		     char (32),		/* ASCII name of channel */
  5    77 	  2 access_class	     (2) bit (72) aligned,	/* access class range */
  5    78 	  2 comment	     char (48),		/* printable message about channel */
  5    79 	  2 charge_type	     fixed bin (17) unal,	/* billing group */
  5    80 	  2 service_type	     fixed bin (17) unal,	/* service group (AS, ftp, mc) */
  5    81 	  2 line_type	     fixed bin (17) unal,	/* tty line type (protocol) */
  5    82 	  2 baud_rate	     fixed bin (17) unal,	/* 110, 133, 150, etc. */
  5    83 	  2 modem_type	     fixed bin (17) unal,	/* type of modem on this channel */
  5    84 	  2 pad2		     bit (18) unaligned,
  5    85 	  2 answerback	     char (8),		/* answerback string expected */
  5    86 	  2 initial_terminal_type
  5    87 			     char (32) unal,	/* as specified in the CMF */
  5    88 	  2 mpx_data	     unal,		/* data used only for multiplexed channels */
  5    89 	    3 mpx_type	     fixed bin (17),	/* type of multiplexing used */
  5    90 	    3 mpx_service	     fixed bin (17),	/* service type, active or inactive */
  5    91 	  2 flags,
  5    92 	  ( 3 attributes,
  5    93 	      4 ck_answerback    bit (1),		/* ON means that ansbk must equal our records */
  5    94 	      4 audit_access_error
  5    95 			     bit (1),		/* ON means ck that person auth is inside access class range  */
  5    96 						/*    this implies that the access_class describes a range of
  5    97*						   legitimate user auths. */
  5    98 	      4 hardwired	     bit (1),		/* ON means it is */
  5    99 	      4 set_modes	     bit (1),		/* ON means to set initial modes at dialup */
  5   100 	      4 dont_read_answerback
  5   101 			     bit (1),		/* ON means don't try to read answerback */
  5   102 	      4 pada	     bit (4),
  5   103 	    3 access_control     unaligned,		/* As below */
  5   104 	      4 dial_out	     bit (1),		/* dialing user must be on ACS */
  5   105 	      4 priv_attach	     bit (1),		/* PA_ user must be on ACS */
  5   106 	      4 dial_server	     bit (1),		/* accept_dials process must be on acs */
  5   107 	      4 login	     bit (1),		/* logging in user must be on acs */
  5   108 	      4 slave_dial	     bit (1),		/* dialing user must give -user and be on acs */
  5   109 	      4 pado	     bit (3),
  5   110 	    3 options,
  5   111 	      4 execute_initial_command
  5   112 			     bit (1),		/* ON means to do it */
  5   113 	      4 attached_by_operator
  5   114 			     bit (1),		/* ON means temporary attachment. */
  5   115 	      4 private_line     bit (1),		/* ON means private_line sync modem in use */
  5   116 	      4 bsc_ebcdic	     bit (1),		/* ON means bsc would like to use ebcdic code set */
  5   117 	      4 bsc_transparent  bit (1),		/* ON means bsc is in transparent mode */
  5   118 	      4 vip_pollselect   bit (1),		/* ON means VIP line is multidrop */
  5   119 	      4 autobaud	     bit (1),		/* ON means auto baud detection this channel */
  5   120 	      4 generic_destination_present
  5   121 			     bit (1),		/* ON means that the initial_command field contains
  5   122*						   a generic destination to match on dial_out or priv attach */
  5   123 	      4 use_iocb	     bit (1),		/* ON means to use IOCB operations to support channel */
  5   124 	      4 pado	     bit (9)
  5   125 	      )		     unaligned,
  5   126 	  2 initial_command	     char (64),		/* pseudo first input line */
  5   127 /**** The following variables represent dynamic control info, and
  5   128*      are used mostly by dialup_ and asu_ */
  5   129 	  2 event		     fixed bin (71),	/* event call channel for channel events */
  5   130 	  2 current_service_type fixed bin (17) unal,	/* Current usage of line. */
  5   131 	  2 tra_vec	     fixed bin (17) unal,	/* which section of dialup_ to do next */
  5   132 	  2 count		     fixed bin (17) unal,	/* How many login tries he's had. */
  5   133 	  2 dialup_flags	     unal,		/* flag bits for dialup to maintain */
  5   134 	    3 ppm		     bit (1) unal,		/* print preaccess message for IBM terminals */
  5   135 	    3 cpo		     bit (1) unal,		/* conditional printer-off (depends on answerback */
  5   136 	    3 wakeup_handler     bit (1) unal,		/* says who is wakeup handler for this channel */
  5   137 						/* 0 = dialup_, 1 = mc_tty_ */
  5   138 	    3 save_arg	     bit (1) unal,		/* -save login arg given */
  5   139 	    3 nosave_arg	     bit (1) unal,		/* -nosave login arg given */
  5   140 	    3 detach_after_hangup
  5   141 			     bit (1) unal,		/* remember WAIT_DETACH when setting WAIT_BEFORE_HANGUP */
  5   142 	    3 leave_edited	     bit (1) unal,		/* user control of edited mode */
  5   143 	    3 hold_arg	     bit (1) unal,		/* -hold arg given */
  5   144 	    3 no_hold_arg	     bit (1) unal,		/* -no_hold arg given */
  5   145 	    3 immediate_arg	     bit (1) unal,		/* -immediate arg given */
  5   146 	    3 current_access_class_valid
  5   147 			     bit (1) unal,		/* dialup_ or lg_ctl_ has determined the current_access_class */
  5   148 	    3 pad		     bit (7) unal,
  5   149 	  2 twx		     fixed bin,		/* channel device index */
  5   150 	  2 state		     fixed bin,		/* channel state */
  5   151 	  2 tty_id_code	     char (4),		/* channel id (answerback) */
  5   152 	  2 current_terminal_type
  5   153 			     char (32) unal,	/* most recently-set terminal type */
  5   154 	  2 process	     ptr unal,		/* ptr to ATE owning this channel */
  5   155 	  2 dialed_to_procid     bit (36),		/* Dialed channels remember owner's proc id */
  5   156 	  2 next_channel	     fixed bin (17) unal,	/* cdte index of next channel for this process */
  5   157 	  2 cur_line_type	     fixed bin (17) unal,	/* line type of currently dialed terminal */
  5   158 	  2 current_access_class (2) bit (72) aligned,	/* This is a range, but at this time it must be a null range.
  5   159*						   We do not yet define multi-class connections, but we will someday. */
  5   160 	  2 disconnected_ate_index
  5   161 			     fixed bin (17) unal,	/* index of ate of disconnected process */
  5   162 	  2 dial_ctl_ring	     fixed bin (3) unsigned unaligned,
  5   163 						/* used by dial_ctl_ to record ring of priv_attach or dial_out attachments */
  5   164 	  2 dial_rq_privileged   bit (1) unaligned,	/* used by dial ctl to record comm priv from priv_attach or dial_out request */
  5   165 	  2 pad3		     bit (14) unaligned,
  5   166 /**** The following variables are kept for metering purposes. */
  5   167 	  2 n_dialups	     fixed bin,		/* number of times channel has been dialed up */
  5   168 	  2 n_logins	     fixed bin,		/* number of login sessions on this channel */
  5   169 	  2 dialed_up_time	     fixed bin (35),	/* total time channel was dialed up (seconds) */
  5   170 	  2 dialup_time	     fixed bin (71),	/* time of present dialup */
  5   171 	  2 disconnected_proc_command
  5   172 			     fixed bin (12) unsigned unal,
  5   173 						/* 1 to 5 for -list,-create,-connect,-new_proc,-destroy */
  5   174 	  2 disconnected_proc_number
  5   175 			     fixed bin (12) unsigned unal,
  5   176 						/* {N} in -connect {N}, -new_proc {N}, -destroy {N} */
  5   177 	  2 n_disconnected_procs fixed bin (12) unsigned unal,
  5   178 						/* number of disconnected processes that user has */
  5   179 	  2 recent_wakeup_count  fixed bin,		/* counter to detect channel wakeup loop */
  5   180 	  2 recent_wakeup_time   fixed bin (71),	/* time of first wakeup in suspected channel wakeup loop */
  5   181 	  2 dial_ev_chn	     fixed bin (71),	/* Dialed channels remember master's IPC channel */
  5   182 /**** cdt_mgr_ uses these to maintain the tree of channels. They ****/
  5   183 /**** really belong in the mpxe, but it is full up, and the cdte ****/
  5   184 /**** had the space. */
  5   185 	  2 threads	     aligned like channel_threads,
  5   186 /**** The use name is that of the user who gave the dial or slave ****/
  5   187 /**** preaccess request. ****/
  5   188 	  2 user_name	     unaligned,
  5   189 	    3 person	     char (20) unaligned,
  5   190 	    3 project	     char (9) unaligned,
  5   191 	    3 pad		     char (3) unaligned,	/* no tag */
  5   192 	  2 iocbp		     ptr unaligned;		/* 104 words */
  5   193 
  5   194 
  5   195 dcl	generic_destination	     based char (32);	/* used to match destinations on dial_out and priv_attach,
  5   196*						   overlays initial_command field for slave and autocall lines */
  5   197 
  5   198 
  5   199 
  5   200 dcl	1 fnpe		     based (fnpep) aligned,	/* an FNP */
  5   201 						/* These variables are filled in from the CMF */
  5   202 	  2 type		     fixed bin,		/* type of this FNP, DN355, DN6670, etc. */
  5   203 	  2 memory	     fixed bin,		/* amount of memory on this FNP */
  5   204 	  2 nlslas	     fixed bin,		/* number of lslas on this FNP */
  5   205 	  2 nhslas	     fixed bin,		/* number of hslas on this FNP */
  5   206 	  2 service_type	     fixed bin,		/* service type */
  5   207 	  2 mpx_type	     fixed bin,		/* type of multiplexer on this fnp */
  5   208 	  2 coreimage	     char (168),		/* pathname of image, maybe in >sl1 */
  5   209 /**** The following are used during system operation to remember the state of the FNP */
  5   210 	  2 boot_segp	     ptr,			/* ptr to seg used for bootload */
  5   211 	  2 boot_ev_chan	     fixed bin (71),	/* for ring0 to report crashes and bootload complete */
  5   212 	  2 mpxe		     like mpxe,		/* standard multiplexer data */
  5   213 	  2 threads	     aligned like channel_threads,
  5   214 						/* same mpx threads as channel */
  5   215 	  2 pad3		     (25) fixed bin;	/* pad to 96 words per entry */
  5   216 
  5   217 /* This structure describes the data necessary to control a multiplexer.
  5   218*   For FNP's., a copy appears in the fnpe. For communications lines, it
  5   219*   overlays the initial_command field in the cdte. */
  5   220 
  5   221 dcl	1 mpxe		     based (mpxep) aligned,
  5   222 	  2 state		     fixed bin,		/* current state, up, down, loading */
  5   223 	  2 current_service_type fixed bin,		/* usually = service type, unless cdt installation changes it */
  5   224 	  2 current_mpx_type     fixed bin,		/* type of multiplexer currently running */
  5   225 	  2 n_bootloads	     fixed bin,		/* count of load attempts */
  5   226 	  2 time_initial_load    fixed bin (71),	/* time this MPX first completed a load */
  5   227 	  2 time_last_load	     fixed bin (71),	/* time MPX last completed a bootload */
  5   228 	  2 time_last_crash	     fixed bin (71),	/* time MPX last crashed */
  5   229 	  2 time_load_start	     fixed bin (71),	/* time current load started */
  5   230 	  2 last_tbf	     fixed bin,		/* number of minutes this MPX was up last bootload */
  5   231 	  2 flags		     unal,
  5   232 	    3 go		     bit (1),		/* start MPX after it loads */
  5   233 	    3 listening	     bit (1),		/* listen has been done on subchannels */
  5   234 	    3 check	     bit (1),		/* loaded with check option */
  5   235 	    3 retry_load	     bit (1),		/* reload if load fails */
  5   236 	    3 pad1	     bit (32),
  5   237 	  2 pad2		     (2) fixed bin;		/* pad to 16 words */
  5   238 
  5   239 /* These threads define the tree of multiplexers in the cdt. */
  5   240 /* next_sister and prev_sister link nodes at the same level, ordered */
  5   241 /* by alpha sort order of the channel name. Daughter points to the */
  5   242 /* first child of this node, if any. Daughter count is the number */
  5   243 /* of children, as a consistency check. Mother is a back pointer to */
  5   244 /* the parent, present in all the children, not just the first. */
  5   245 /* threads are cdt indexes. If positive, they index the cdt_entry array */
  5   246 /* in cdt, if negative, they are the negative of an index into the fnp_entry */
  5   247 /* array. If zero, they refer to the top of the non-fnp mpx tree. */
  5   248 
  5   249 dcl	1 channel_threads	     aligned based,
  5   250 	  2 next_sister	     fixed bin unaligned,
  5   251 	  2 prev_sister	     fixed bin unaligned,
  5   252 	  2 daughter	     fixed bin unaligned,
  5   253 	  2 mother	     fixed bin unaligned,	/* negative is a fnpx, positive a cdtx */
  5   254 	  2 pad		     bit (18) unaligned,
  5   255 	  2 daughter_count	     fixed bin unaligned;
  5   256 
  5   257 /* Values for cdte.service_type field */
  5   258 
  5   259 dcl	(
  5   260 	ANS_SERVICE	     init (1),		/* login or dial */
  5   261 	FTP_SERVICE	     init (2),		/* file transfer service */
  5   262 	MC_SERVICE	     init (3),		/* message coordinator */
  5   263 	SLAVE_SERVICE	     init (4),		/* special channel */
  5   264 	DIAL_SERVICE	     init (5),		/* transient state */
  5   265 	DIAL_OUT_SERVICE	     init (6),		/* auto call line */
  5   266 	MPX_SERVICE	     init (8),		/* ring0 demultiplexed line */
  5   267 	TANDD_SERVICE	     init (9)		/* transient state, attached for T & D */
  5   268 	)		     fixed bin internal static options (constant);
  5   269 
  5   270 /* Values for service type in both cdte and fnpe */
  5   271 
  5   272 dcl	(
  5   273 	INACTIVE		     init (7),		/* not to be used, even though configured */
  5   274 	ACTIVE		     init (1)
  5   275 	) /* for FNP only, configured and to be used */
  5   276 			     fixed bin internal static options (constant);
  5   277 
  5   278 /* Value for both cdte.in_use and fnpe.state */
  5   279 
  5   280 dcl	NOT_CONFIGURED	     fixed bin int static init (-1) options (constant);
  5   281 						/* was not configured at Multics bootload time */
  5   282 
  5   283 /* NOTE: an INACTIVE channel can be made active by operator command or CDT installation,
  5   284*   but a NOT_CONFIGURED channel can not be used until its multiplexer is reloaded */
  5   285 
  5   286 /* Value for cdte.in_use */
  5   287 
  5   288 dcl	CHANNEL_DELETED	     fixed bin int static init (-2);
  5   289 						/* channel deleted by CDT installation */
  5   290 
  5   291 /* NOTE: a configured channel being deleted by a CDT installation is set to CHANNEL_DELETED.
  5   292*   multiplexer_mgr_ sets cdte.in_use to NOW_FREE at the next reload of its multiplexer.
  5   293*   A NOT_CONFIGURED channel is set to NOW_FREE immediately when deleted by a CDT installation. */
  5   294 
  5   295 
  5   296 /* Values for mpxe.state field */
  5   297 
  5   298 dcl	(
  5   299 	FNP_FREE		     init (0),		/* this fnpe is not used */
  5   300 	FNP_UNKNOWN	     init (1),		/* FNP is in some unknown state */
  5   301 	FNP_DOWN		     init (2),		/* FNP crashed, not yet reloaded */
  5   302 	FNP_BOOT		     init (3),		/* FNP has been booted, but no response yet */
  5   303 	FNP_UP		     init (4)		/* FNP is up and running fine */
  5   304 	)		     fixed bin internal static options (constant);
  5   305 
  5   306 dcl	(
  5   307 	MPX_FREE		     init (0),		/* this mpxe is not used */
  5   308 	MPX_UNKNOWN	     init (1),		/* MPX is in some unknown state */
  5   309 	MPX_DOWN		     init (2),		/* MPX crashed, not yet reloaded */
  5   310 	MPX_BOOT		     init (3),		/* MPX has been booted, but no response yet */
  5   311 	MPX_UP		     init (4)		/* MPX is up and running fine */
  5   312 	)		     fixed bin internal static options (constant);
  5   313 
  6     1 /* BEGIN INCLUDE FILE ... fnp_types.incl.pl1 */
  6     2 
  6     3 
  6     4 
  6     5 /****^  HISTORY COMMENTS:
  6     6*  1) change(88-06-15,Berno), approve(88-07-13,MCR7928),
  6     7*     audit(88-06-15,Parisek), install(88-07-19,MR12.2-1061):
  6     8*     Add data needed for the uncp multiplexer (DSA gateway) interface
  6     9*     implementation.
  6    10*                                                   END HISTORY COMMENTS */
  6    11 
  6    12 
  6    13 /* Values for fnpe.type field */
  6    14 /*
  6    15*   Created 79 May 14 by Art Beattie by splitting information out from cdt.incl.pl1
  6    16*   Added in March 1982 - DN7100.fd.
  6    17**/
  6    18 
  6    19 dcl (DN355 init (1),				/* a DataNet 355 FNP */
  6    20      DN6600 init (2),				/* a DataNet 6600 FNP */
  6    21      DN6670 init (3),				/* a Honeywell Bull Network Processor (18x) */
  6    22      DN7100 init (4)				/* The DSA Datanet architecture (DN7) */
  6    23      ) fixed bin internal static options (constant);
  6    24 
  6    25 dcl  fnp_types (4) char (8) int static options (constant)
  6    26      init ("DN355", "DN6600", "DN6670", "DN7100");
  6    27 
  6    28 dcl  fnp_models (4) fixed bin (17) int static options (constant)
  6    29      init (355, 6600, 6670, 7100);
  6    30 	
  6    31 dcl  supported_fnp (4) bit (1) int static options (constant)
  6    32      init ("0"b, "0"b, "1"b, "1"b);
  6    33 
  6    34 
  6    35 /* END INCLUDE FILE ... fnp_types.incl.pl1 */
  5   314 
  5   315 
  5   316 /* END INCLUDE FILE ... cdt.incl.pl1 */
      177 
      178  /* BEGIN INCLUDE FILE ... dialup_values.incl.pl1 */
  7     2 
  7     3 /* format: style4 */
  7     4 
  7     5 /* Values for "cdte.tra_vec" used by dialup_ and others. */
  7     6 
  7     7 /* Modified by T. Casey April 1976 to add WAIT_NEW_PASSWORD
  7     8*   -		in 1977 and 1978 to add WAIT_(GREETING_MSG DELETE_CHANNEL)
  7     9*   -		and in October 1979 to add WAIT_CONNECT_REQUEST
  7    10*   Modified by Robert Coren in May 1981 to add TANDD_ATTACH values and 
  7    11*		WAIT_DISCARD_WAKEUP
  7    12*   Modified by T. Casey, July 1981, for MR9.0, to add WAIT_BEFORE_HANGUP.
  7    13*   Modified by E. N. Kittlitz, July 1982, to add TTY_MASKED.
  7    14**/
  7    15 
  7    16 /****^  HISTORY COMMENTS:
  7    17*  1) change(87-04-20,GDixon), approve(87-07-13,MCR7741),
  7    18*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  7    19*     Add constant arrays naming cdte.state, cdte.tra_vec and ute.active values.
  7    20*  2) change(87-05-11,GDixon), approve(87-07-13,MCR7741),
  7    21*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  7    22*     Add named constants for instance tags.
  7    23*                                                   END HISTORY COMMENTS */
  7    24 
  7    25 dcl  (WAIT_DIALUP init (1),				/* Channel waiting for dialup. */
  7    26      WAIT_ANSWERBACK initial (2),			/* WRU sent, waiting for reply */
  7    27      WAIT_LOGIN_LINE init (3),			/* Greeting typed, wait for login command. */
  7    28      WAIT_LOGIN_ARGS init (4),			/* Want rest of login line */
  7    29      WAIT_OLD_PASSWORD init (5),			/* "-cpw" was specified. Wait for old password. */
  7    30      WAIT_PASSWORD init (6),				/* Waiting for password. (If "-cpw", repeat of new one.) */
  7    31      WAIT_NEW_PASSWORD init (7),			/* "-cpw" was specified. Wait for new password */
  7    32      WAIT_LOGOUT_SIG init (8),			/* Channel is hooked up. Wait for logout. */
  7    33      WAIT_LOGOUT init (9),				/* A logout has been requested. Wait for process to die */
  7    34      WAIT_LOGOUT_HOLD init (10),			/* As above but don't hang up when it dies. */
  7    35      WAIT_DETACH init (11),				/* As above but ignore channel afterwards. */
  7    36      WAIT_NEW_PROC init (12),				/* As above but make new process and continue. */
  7    37      WAIT_REMOVE init (13),				/* As above but completely expunge channel. */
  7    38      WAIT_FIN_PRIV_ATTACH init (14),			/* When channel dials up, connect it to user */
  7    39      WAIT_DIAL_RELEASE init (15),			/* Waiting for master process to release. */
  7    40      WAIT_DIAL_OUT init (16),				/* Waiting for auto call to complete */
  7    41      WAIT_HANGUP init (17),				/* Wait for the hangup event to occur for a channel */
  7    42      WAIT_SLAVE_REQUEST init (18),			/* Ignore line until someone asks */
  7    43      WAIT_GREETING_MSG init (19),			/* Print greeting message and wait for login line */
  7    44      WAIT_DELETE_CHANNEL init (20),			/* Channel deleted - mark cdte after process is destroyed */
  7    45      WAIT_CONNECT_REQUEST init (21),			/* logged in; awaiting request re disconnected processes */
  7    46      WAIT_TANDD_HANGUP init (22),			/* when channel hangs up, proceed with t & d attachment */
  7    47      WAIT_FIN_TANDD_ATTACH init (23),			/* when channel dials up, finish t & d attachment */
  7    48      WAIT_DISCARD_WAKEUPS init (24),			/* disregard all wakeups on channel */
  7    49      WAIT_BEFORE_HANGUP init (25),			/* allow output to print before hanging up */
  7    50      WAIT_DESTROY_REQUEST init (26),			/* waiting to continue with destroy request after process has destroyed itself */
  7    51      WAIT_NEW_PROC_REQUEST init (27)			/* waiting to continue with new_proc request after process has destroyed itself */
  7    52      ) fixed bin internal static options (constant);
  7    53 
  7    54 dcl  TRA_VEC_VALUES (0:13) char (32) aligned int static options (constant) init
  7    55 						/* names of ute.destroy_flag values */
  7    56 	("", "wait dialup", "wait answerback", "wait login line", /*  0-3  */
  7    57 	"wait login args", "wait old password", "wait password",  /*  4-6  */
  7    58 	"wait new password", "wait logout signal", "wait logout", /*  7-9  */
  7    59 	"wait logout hold", "wait detach", "wait new proc",       /* 10-12 */
  7    60 	"wait remove");				        /*   -13 */
  7    61 
  7    62 /* Values for "cdte.state", typewriter state. */
  7    63 
  7    64 dcl  (TTY_MASKED init (-1),				/* Terminal channel is there, but masked by MCS */
  7    65      TTY_HUNG init (1),				/* Terminal channel is there, but dead. */
  7    66      TTY_KNOWN init (2),				/* Channel being "listened" to, awaiting dialup. */
  7    67      TTY_DIALED init (5)				/* Channel is dialed up. This is normal state. */
  7    68      ) fixed bin internal static options (constant);
  7    69 
  7    70 dcl  STATE_VALUES (-1:5) char (15) aligned int static options (constant) init
  7    71 						/* names of cdte.state values */
  7    72 	("masked", "dead", "hung up", "listening", "", "", "dialed up");
  7    73 
  7    74 /* Values for "cdte.in_use" and "ate.active" */
  7    75 
  7    76 dcl  (NOW_FREE init (0),				/* Entry is empty. */
  7    77      NOW_HUNG_UP init (1),				/* Entry is usable but tty is hung up. */
  7    78      NOW_LISTENING init (2),				/* Entry is waiting for phone call. */
  7    79      NOW_DIALED init (3),				/* Entry is connected but login not complete. */
  7    80      NOW_LOGGED_IN init (4),				/* Entry is logged in but no process. */
  7    81      NOW_HAS_PROCESS init (5),			/* Entry has a valid process. */
  7    82      NOW_DIALING init (6),				/* Entry (auto_call line) is dialing */
  7    83      NOW_DIALED_OUT init (7)				/* Entry (auto_call line) is in use */
  7    84      ) fixed bin internal static options (constant);
  7    85 
  7    86 dcl  ACTIVE_VALUES (0:5) char (18) aligned int static options (constant) init
  7    87 						/* names of ute.active values */
  7    88 	("free", "hung-up", "listening", "dialed", "logged in, no proc", "logged in & proc");
  7    89 
  7    90 
  7    91 /**** Values for ute.tag */
  7    92 
  7    93 dcl (TAG_INTERACTIVE init("a"),
  7    94      TAG_UFT init("f"),
  7    95      TAG_ABSENTEE init("m"),
  7    96      TAG_PROXY init("p"),
  7    97      TAG_DAEMON init("z")
  7    98      ) char(1) int static options(constant);
  7    99 
  7   100 
  7   101 /**** Following are constants used to indicate to the process termination
  7   102*      handler the reason for the process termination.  They are used by
  7   103*      uc_proc_term_handler_, as well as uc_ls_new_proc_request_ and
  7   104*      uc_ls_destroy_request_. */
  7   105 
  7   106 dcl  (
  7   107      PT_FPE initial (1),
  7   108      PT_LOGOUT initial (4),
  7   109      PT_NEW_PROC_AUTH initial (13),
  7   110      PT_HANGUP initial (20),
  7   111      PT_SHUTDOWN initial (21),
  7   112      PT_BUMP initial (22),
  7   113      PT_ALARM initial (23),
  7   114      PT_DETACH initial (24),
  7   115      PT_UNBUMP initial (25),
  7   116      PT_OPERATOR_TERMINATE initial (27),
  7   117      PT_DESTROY_REQUEST initial (30),
  7   118      PT_NEW_PROC_REQUEST initial (31)
  7   119      ) fixed bin (17) internal static options (constant);
  7   120 
  7   121 /**** Values for ute.preempted:
  7   122*  -1  user unbumped after term signal sent
  7   123*   0  user unbumped; ignore alarm___
  7   124*   1  value internally used in load_ctl_
  7   125*   2  user bumped; when alarm___ comes in, send term signal
  7   126*   3  term signal sent; destroy process if termsgnl, alarm___, or cpulimit 
  7   127*      signals come in
  7   128*   4  user bumped; process sick, so destroy without sending term signal
  7   129*   5  trm_ signal sent, termsgnl received; (if still 3, we never got the 
  7   130*      termsgnl).						       */
  7   131 
  7   132 dcl  (
  7   133      PREEMPT_UNBUMP initial (-1),
  7   134      PREEMPT_UNBUMP_IGNORE_ALARM initial (0),
  7   135      PREEMPT_LOAD_CTL initial (1),
  7   136      PREEMPT_BUMPED initial (2),
  7   137      PREEMPT_TERM_SENT initial (3),
  7   138      PREEMPT_BUMPED_NO_TERM initial (4),
  7   139      PREEMPT_TERMSGNL_RECEIVED initial (5)
  7   140      ) fixed bin (17) internal static options(constant);
  7   141 
  7   142 dcl  PREEMPT_VALUES (-1:5) char(28) varying int static options(constant) init(
  7   143 	"unbumped",
  7   144 	"not bumped, ignore alarm___",
  7   145 	"load_ctl_",
  7   146 	"bumped",
  7   147 	"bumped, trm_ sent",
  7   148 	"bumped without trm_",
  7   149 	"bumped, termsgnl received");
  7   150 
  7   151 /* END INCLUDE FILE ... dialup_values.incl.pl1 */
      178 
      179  /*  BEGIN:   sc_stat_.incl.pl1			  *  *  *  *  *  */
  8     2 
  8     3 
  8     4 /****^  HISTORY COMMENTS:
  8     5*  1) change(87-02-04,GDixon), approve(87-05-25,MCR7690),
  8     6*     audit(87-06-02,Parisek), install(87-08-04,MR12.1-1056):
  8     7*     Add sc_stat_$vchn_requires_accept in support of DSA virtual channels.
  8     8*  2) change(87-02-04,GDixon), approve(87-05-25,MCR7680),
  8     9*     audit(87-06-02,Parisek), install(87-08-04,MR12.1-1056):
  8    10*     Reorganized by type of data to improve readability.
  8    11*                                                   END HISTORY COMMENTS */
  8    12 
  8    13 
  8    14 			      /* ACCESS NAMES		       */
  8    15 dcl (
  8    16  sc_stat_$exec_access_name,	      /* check MC access in an exec request    */
  8    17  sc_stat_$unidentified_access_name  /* check access if no one is logged in.  */
  8    18     ) char(32) ext static;
  8    19 
  8    20 		        /* PATHNAMES			       */
  8    21 dcl (
  8    22  sc_stat_$info_dir,	        /* admin info segs directory		       */
  8    23  sc_stat_$log_dir,	        /* as log segs directory		       */
  8    24  sc_stat_$mc_acs_dir,       /* message coordinator ACS segments (.mcacs) dir */
  8    25  sc_stat_$sysdir	        /* system control directory		       */
  8    26     ) char(168) ext static;
  8    27 
  8    28 		        /* OTHER CHAR STRINGS			       */
  8    29 dcl (
  8    30  sc_stat_$master_channel    /* Master TTY channel.		       */
  8    31     )  char(6) aligned ext static;
  8    32 
  8    33 			       /* LABELS			       */
  8    34 dcl (
  8    35  sc_stat_$admin_listener_exit_label, /* GO here to exit admin mode.  Set to  */
  8    36 			       /*    ssu_$null_label unless 	       */
  8    37 			       /*	   admin_listener is active.	       */
  8    38  sc_stat_$master_abort_label,	       /* GO here after fault that is not      */
  8    39 			       /*    attributable to a particular      */
  8    40 			       /*	   command.		       */
  8    41  sc_stat_$system_shutdown_label      /* GO here to shut down system	       */
  8    42     ) label variable ext static;
  8    43 
  8    44 			 /* POINTERS TO			       */
  8    45 dcl (
  8    46  sc_stat_$admin_log_iocb,	 /* IOCB for admin log		       */
  8    47  sc_stat_$admin_log_write_ptr, /* DATA for log_write_ calls on the admin log */
  8    48  sc_stat_$admin_sci_ptr,	 /* DATA ssu_ for terminal currently executing */
  8    49  sc_stat_$as_log_write_ptr,	 /* DATA for log_write_ calls on as log, used  */
  8    50 			 /*      by sys_log_.		       */
  8    51  sc_stat_$initzer_ttyp,	 /* ENT  mc_ate for initializer terminal       */
  8    52  sc_stat_$master_iocb,	 /* IOCB for "master_i/o"		       */
  8    53  sc_stat_$master_sci_ptr,	 /* DATA ssu_ (permanent) for system control   */
  8    54  sc_stat_$mc_ansp,		 /* HEAD of mc_anstbl		       */
  8    55  sc_stat_$mc_iocb,		 /* IOCB ptr for "mc_i/o"		       */
  8    56  sc_stat_$sv1_iocb,		 /* IOCB ptr for "severity1"		       */
  8    57  sc_stat_$sv2_iocb,		 /* IOCB ptr for "severity2"		       */
  8    58  sc_stat_$sv3_iocb		 /* IOCB ptr for "severity3"		       */
  8    59     ) ptr ext static;
  8    60 
  8    61 			   /* SWITCHES			       */
  8    62 dcl (
  8    63  sc_stat_$Go,		   /* TRUE after answering service is listening*/
  8    64  sc_stat_$Go_typed,		   /* TRUE immediately after 'go' is typed     */
  8    65  sc_stat_$Multics,		   /* TRUE after answering service started     */
  8    66  sc_stat_$Multics_typed,	   /* TRUE immediately after 'mult' is typed   */
  8    67  sc_stat_$Star_typed,	   /* TRUE if 'mult' and 'go' came from 'star' */
  8    68  sc_stat_$admin_listener_switch, /* TRUE if in the admin listener	       */
  8    69  sc_stat_$did_part1,	   /* TRUE if part 1 of system startup ec done */
  8    70  sc_stat_$did_part2,	   /* TRUE if part 2 of system startup ec done */
  8    71  sc_stat_$did_part3,	   /* TRUE if part 3 of system startup ec done */
  8    72  sc_stat_$mc_is_on,		   /* TRUE if message coordinator running      */
  8    73  sc_stat_$no_operator_login,	   /* TRUE if operator login not required, or  */
  8    74 			   /*	 if PNT not yet available.	       */
  8    75  sc_stat_$shutdown_typed,	   /* TRUE if 'shutdown' command in progress.  */
  8    76  sc_stat_$test_mode,	   /* TRUE if in test environment	       */
  8    77  sc_stat_$vchn_requires_accept   /* TRUE if vchn may only be used if accepted*/
  8    78 			   /*      by operator signed on system console*/
  8    79     ) bit(1) aligned ext static;
  8    80 
  8    81 
  8    82 /*  END OF:  sc_stat_.incl.pl1			  *  *  *  *  *  */
      179 
      180 
      181 /* BEGIN MESSAGE DOCUMENTATION
      182*
      183*   Message:
      184*   attach: bad arg "AAAA"
      185*
      186*   S:	as (severity1).
      187*
      188*   T:	$response
      189*
      190*   M:	A bad argument was furnished with an attach
      191*   command.  The argument is skipped.
      192*
      193*   A:	Enter a corrected command.
      194*
      195*
      196*   Message:
      197*   remove: bad arg "AAAA"
      198*
      199*   S:	as (severity1).
      200*
      201*   T:	$response
      202*
      203*   M:	A bad argument was furnished with an remove
      204*   command.  The argument is skipped.
      205*
      206*   A:	Enter a corrected command.
      207*
      208*
      209*   Message:
      210*   attach: error: not done
      211*
      212*   S:	as (severity1).
      213*
      214*   T:	$response
      215*
      216*   M:	Bad arguments were given to an attach
      217*   command.  No action resulted.
      218*
      219*   A:	$tryagain
      220*
      221*
      222*   Message:
      223*   remove: error: not done
      224*
      225*   S:	as (severity1).
      226*
      227*   T:	$response
      228*
      229*   M:	Bad arguments were given to an remove
      230*   command.  No action resulted.
      231*
      232*   A:	$tryagain
      233*
      234*
      235*   Message:
      236*   remove: ttyXXX is in use by the message coordinator and can not be removed.
      237*
      238*   S:	as (severity1).
      239*
      240*   T:	$response
      241*
      242*   M:	An operator remove command specified a message coordinator channel.
      243*   The channel was not removed.
      244*
      245*   A:	Enter a corrected command line.  Use the drop command to
      246*   take a channel away from the message coordinator.
      247*
      248*
      249*   Message:
      250*   attach: TTYxxx attached
      251*
      252*   S:	as (severity1).
      253*
      254*   T:	In response to an operator attach command.
      255*
      256*   M:	This is the response to an attach TTYxxx command.  The
      257*   device channel is now connected to the Answering Service and ready for
      258*   dialups.
      259*
      260*   A:	$ignore
      261*
      262*
      263*   Message:
      264*   attach: Action not performed. ttyXXX
      265*
      266*   S:	as (severity1).
      267*
      268*   T:	In response to an operator attach command.
      269*
      270*   M:	This is the response to attach TTYxxx if no more room is
      271*   available in the answer table for channel entries.  The line is not
      272*   attached.
      273*
      274*   A:	$contact
      275*
      276*
      277*   Message:
      278*   remove: ttyXXX removed
      279*
      280*   S:	as (severity1).
      281*
      282*   T:	In response to an operator remove command.
      283*
      284*   M:	This response to the operator command remove TTYxxx
      285*   indicates the channel is no longer available for dialups.  If a user
      286*   was on the channel, he is bumped with no message but "hangup".
      287*   Note that if a user calls in on this channel, and the modem answers,
      288*   the user gets a carriage return, but no welcoming message from the system,
      289*   and he cannot log in.
      290*
      291*   A:	Remember to busy out the modem so that no user can call
      292*   the channel.
      293*
      294*
      295*   END MESSAGE DOCUMENTATION */
      296 
      297 
      298      end operator_com_channel_cmds_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/07/88  1232.4  operator_com_channel_cmds_.pl1    >spec>install>1140>operator_com_channel_cmds_.pl1
174          1    08/06/87  0913.4  as_data_.incl.pl1                 >ldd>include>as_data_.incl.pl1
175          2    08/06/87  0913.4  as_data_definitions_.incl.pl1     >ldd>include>as_data_definitions_.incl.pl1
176          3    09/09/75  2007.3  author_dcl.incl.pl1               >ldd>include>author_dcl.incl.pl1
3-10         4    04/21/82  1211.8  author.incl.pl1                   >ldd>include>author.incl.pl1
177          5    08/06/87  0913.0  cdt.incl.pl1                      >ldd>include>cdt.incl.pl1
5-314        6    07/21/88  2036.0  fnp_types.incl.pl1                >ldd>include>fnp_types.incl.pl1
178          7    08/06/87  0913.4  dialup_values.incl.pl1            >ldd>include>dialup_values.incl.pl1
179          8    08/06/87  0913.5  sc_stat_.incl.pl1                 >ldd>include>sc_stat_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
MC_SERVICE                             constant        fixed bin(17,0)          initial dcl 5-259 ref 135
NOW_FREE                               constant        fixed bin(17,0)          initial dcl 7-76 ref 165
P_channel_name                         parameter       char                     packed unaligned dcl 159 ref 156 165
action                          000100 automatic       char(8)                  dcl 37 set ref 81* 120*
action_flag                     000102 automatic       bit(1)                   dcl 38 set ref 83* 96* 107 122* 141* 148
action_log                      000103 automatic       char(12)                 dcl 39 set ref 82* 121*
addr                                                   builtin function         dcl 55 ref 164
answer                          000106 automatic       char(256)                initial packed unaligned dcl 40 set ref 40*
arg                                    based           char                     packed unaligned dcl 51 ref 90 129
arg_index                       000206 automatic       fixed bin(17,0)          dcl 41 set ref 84* 85* 123* 124*
arg_length                      000207 automatic       fixed bin(21,0)          dcl 42 set ref 85* 90 124* 129
arg_list_ptr                    000210 automatic       pointer                  dcl 43 set ref 79* 85* 118* 124*
arg_ptr                         000212 automatic       pointer                  dcl 44 set ref 85* 90 124* 129
as_data_$cdtp                   000026 external static pointer                  dcl 1-33 ref 163 163 164 164
asu_$asu_attach                 000010 constant        entry                    external dcl 60 ref 92
asu_$asu_remove                 000012 constant        entry                    external dcl 61 ref 140
author                                 based           structure                level 2 dcl 3-9
author_dcl                             based           structure                level 1 dcl 3-9
cdt                                    based           structure                level 1 dcl 5-44
cdt_entry              1520            based           structure                array level 2 dcl 5-44 set ref 164
cdte                                   based           structure                level 1 dcl 5-72
cdtep                           000240 automatic       pointer                  dcl 160 in procedure "FIND_CDTE" set ref 164* 165
                                                                                  165 165
cdtep                           000230 automatic       pointer                  dcl 5-41 in procedure "operator_com_channel_cmds_"
                                                                                  set ref 130* 131 135 135 140*
channel_threads                        based           structure                level 1 dcl 5-249
code                            000214 automatic       fixed bin(35,0)          dcl 45 set ref 85* 87 92* 93 99 99* 124* 126
comname                         000215 automatic       char(12)                 dcl 46 set ref 80* 99* 119*
cu_$arg_list_ptr                000014 constant        entry                    external dcl 62 ref 79 118
cu_$arg_ptr_rel                 000016 constant        entry                    external dcl 63 ref 85 124
current_service_type     74            based           fixed bin(17,0)          level 2 packed packed unaligned dcl 5-72 ref 135
current_size             36            based           fixed bin(17,0)          level 2 dcl 5-44 ref 163
error_table_$action_not_performed
                                000024 external static fixed bin(35,0)          dcl 70 ref 99
fnpe                                   based           structure                level 1 dcl 5-200
i                               000242 automatic       fixed bin(17,0)          dcl 161 set ref 163* 164*
in_use                                 based           fixed bin(17,0)          level 2 dcl 5-72 ref 165
input_channel                   000220 automatic       char(32)                 packed unaligned dcl 47 set ref 90* 92* 94* 99* 129*
                                                                                  130* 131* 142*
mpxe                                   based           structure                level 1 dcl 5-221
name                      2            based           char(32)                 level 2 dcl 5-72 set ref 135* 165
null                                                   builtin function         dcl 55 ref 131 170
scdtp                                  defined         pointer                  dcl 2-27 ref 163 164
sys_log_$command                000020 constant        entry                    external dcl 65 ref 94 107 131 135 142 148
sys_log_$command_error          000022 constant        entry                    external dcl 66 ref 99

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
ACTIVE                                 internal static fixed bin(17,0)          initial dcl 5-272
ACTIVE_VALUES                          internal static char(18)                 initial array dcl 7-86
ANS_SERVICE                            internal static fixed bin(17,0)          initial dcl 5-259
CDT_version                            internal static fixed bin(17,0)          initial dcl 5-39
CDT_version_5                          internal static fixed bin(17,0)          initial dcl 5-38
CHANNEL_DELETED                        internal static fixed bin(17,0)          initial dcl 5-288
DIAL_OUT_SERVICE                       internal static fixed bin(17,0)          initial dcl 5-259
DIAL_SERVICE                           internal static fixed bin(17,0)          initial dcl 5-259
DN355                                  internal static fixed bin(17,0)          initial dcl 6-19
DN6600                                 internal static fixed bin(17,0)          initial dcl 6-19
DN6670                                 internal static fixed bin(17,0)          initial dcl 6-19
DN7100                                 internal static fixed bin(17,0)          initial dcl 6-19
FNP_BOOT                               internal static fixed bin(17,0)          initial dcl 5-298
FNP_DOWN                               internal static fixed bin(17,0)          initial dcl 5-298
FNP_FREE                               internal static fixed bin(17,0)          initial dcl 5-298
FNP_UNKNOWN                            internal static fixed bin(17,0)          initial dcl 5-298
FNP_UP                                 internal static fixed bin(17,0)          initial dcl 5-298
FTP_SERVICE                            internal static fixed bin(17,0)          initial dcl 5-259
INACTIVE                               internal static fixed bin(17,0)          initial dcl 5-272
MPX_BOOT                               internal static fixed bin(17,0)          initial dcl 5-306
MPX_DOWN                               internal static fixed bin(17,0)          initial dcl 5-306
MPX_FREE                               internal static fixed bin(17,0)          initial dcl 5-306
MPX_SERVICE                            internal static fixed bin(17,0)          initial dcl 5-259
MPX_UNKNOWN                            internal static fixed bin(17,0)          initial dcl 5-306
MPX_UP                                 internal static fixed bin(17,0)          initial dcl 5-306
NOT_CONFIGURED                         internal static fixed bin(17,0)          initial dcl 5-280
NOW_DIALED                             internal static fixed bin(17,0)          initial dcl 7-76
NOW_DIALED_OUT                         internal static fixed bin(17,0)          initial dcl 7-76
NOW_DIALING                            internal static fixed bin(17,0)          initial dcl 7-76
NOW_HAS_PROCESS                        internal static fixed bin(17,0)          initial dcl 7-76
NOW_HUNG_UP                            internal static fixed bin(17,0)          initial dcl 7-76
NOW_LISTENING                          internal static fixed bin(17,0)          initial dcl 7-76
NOW_LOGGED_IN                          internal static fixed bin(17,0)          initial dcl 7-76
PREEMPT_BUMPED                         internal static fixed bin(17,0)          initial dcl 7-132
PREEMPT_BUMPED_NO_TERM                 internal static fixed bin(17,0)          initial dcl 7-132
PREEMPT_LOAD_CTL                       internal static fixed bin(17,0)          initial dcl 7-132
PREEMPT_TERMSGNL_RECEIVED              internal static fixed bin(17,0)          initial dcl 7-132
PREEMPT_TERM_SENT                      internal static fixed bin(17,0)          initial dcl 7-132
PREEMPT_UNBUMP                         internal static fixed bin(17,0)          initial dcl 7-132
PREEMPT_UNBUMP_IGNORE_ALARM            internal static fixed bin(17,0)          initial dcl 7-132
PREEMPT_VALUES                         internal static varying char(28)         initial array dcl 7-142
PT_ALARM                               internal static fixed bin(17,0)          initial dcl 7-106
PT_BUMP                                internal static fixed bin(17,0)          initial dcl 7-106
PT_DESTROY_REQUEST                     internal static fixed bin(17,0)          initial dcl 7-106
PT_DETACH                              internal static fixed bin(17,0)          initial dcl 7-106
PT_FPE                                 internal static fixed bin(17,0)          initial dcl 7-106
PT_HANGUP                              internal static fixed bin(17,0)          initial dcl 7-106
PT_LOGOUT                              internal static fixed bin(17,0)          initial dcl 7-106
PT_NEW_PROC_AUTH                       internal static fixed bin(17,0)          initial dcl 7-106
PT_NEW_PROC_REQUEST                    internal static fixed bin(17,0)          initial dcl 7-106
PT_OPERATOR_TERMINATE                  internal static fixed bin(17,0)          initial dcl 7-106
PT_SHUTDOWN                            internal static fixed bin(17,0)          initial dcl 7-106
PT_UNBUMP                              internal static fixed bin(17,0)          initial dcl 7-106
SLAVE_SERVICE                          internal static fixed bin(17,0)          initial dcl 5-259
STATE_VALUES                           internal static char(15)                 initial array dcl 7-70
TAG_ABSENTEE                           internal static char(1)                  initial packed unaligned dcl 7-93
TAG_DAEMON                             internal static char(1)                  initial packed unaligned dcl 7-93
TAG_INTERACTIVE                        internal static char(1)                  initial packed unaligned dcl 7-93
TAG_PROXY                              internal static char(1)                  initial packed unaligned dcl 7-93
TAG_UFT                                internal static char(1)                  initial packed unaligned dcl 7-93
TANDD_SERVICE                          internal static fixed bin(17,0)          initial dcl 5-259
TRA_VEC_VALUES                         internal static char(32)                 initial array dcl 7-54
TTY_DIALED                             internal static fixed bin(17,0)          initial dcl 7-64
TTY_HUNG                               internal static fixed bin(17,0)          initial dcl 7-64
TTY_KNOWN                              internal static fixed bin(17,0)          initial dcl 7-64
TTY_MASKED                             internal static fixed bin(17,0)          initial dcl 7-64
WAIT_ANSWERBACK                        internal static fixed bin(17,0)          initial dcl 7-25
WAIT_BEFORE_HANGUP                     internal static fixed bin(17,0)          initial dcl 7-25
WAIT_CONNECT_REQUEST                   internal static fixed bin(17,0)          initial dcl 7-25
WAIT_DELETE_CHANNEL                    internal static fixed bin(17,0)          initial dcl 7-25
WAIT_DESTROY_REQUEST                   internal static fixed bin(17,0)          initial dcl 7-25
WAIT_DETACH                            internal static fixed bin(17,0)          initial dcl 7-25
WAIT_DIALUP                            internal static fixed bin(17,0)          initial dcl 7-25
WAIT_DIAL_OUT                          internal static fixed bin(17,0)          initial dcl 7-25
WAIT_DIAL_RELEASE                      internal static fixed bin(17,0)          initial dcl 7-25
WAIT_DISCARD_WAKEUPS                   internal static fixed bin(17,0)          initial dcl 7-25
WAIT_FIN_PRIV_ATTACH                   internal static fixed bin(17,0)          initial dcl 7-25
WAIT_FIN_TANDD_ATTACH                  internal static fixed bin(17,0)          initial dcl 7-25
WAIT_GREETING_MSG                      internal static fixed bin(17,0)          initial dcl 7-25
WAIT_HANGUP                            internal static fixed bin(17,0)          initial dcl 7-25
WAIT_LOGIN_ARGS                        internal static fixed bin(17,0)          initial dcl 7-25
WAIT_LOGIN_LINE                        internal static fixed bin(17,0)          initial dcl 7-25
WAIT_LOGOUT                            internal static fixed bin(17,0)          initial dcl 7-25
WAIT_LOGOUT_HOLD                       internal static fixed bin(17,0)          initial dcl 7-25
WAIT_LOGOUT_SIG                        internal static fixed bin(17,0)          initial dcl 7-25
WAIT_NEW_PASSWORD                      internal static fixed bin(17,0)          initial dcl 7-25
WAIT_NEW_PROC                          internal static fixed bin(17,0)          initial dcl 7-25
WAIT_NEW_PROC_REQUEST                  internal static fixed bin(17,0)          initial dcl 7-25
WAIT_OLD_PASSWORD                      internal static fixed bin(17,0)          initial dcl 7-25
WAIT_PASSWORD                          internal static fixed bin(17,0)          initial dcl 7-25
WAIT_REMOVE                            internal static fixed bin(17,0)          initial dcl 7-25
WAIT_SLAVE_REQUEST                     internal static fixed bin(17,0)          initial dcl 7-25
WAIT_TANDD_HANGUP                      internal static fixed bin(17,0)          initial dcl 7-25
as_data_$BS                            external static char(1)                  dcl 1-21
as_data_$CR                            external static char(1)                  dcl 1-22
as_data_$abs_dim                       external static char(32)                 packed unaligned dcl 1-23
as_data_$acct_update_priority          external static fixed bin(17,0)          dcl 1-24
as_data_$acsdir                        external static char(168)                packed unaligned dcl 1-25
as_data_$ansp                          external static pointer                  dcl 1-26
as_data_$as_procid                     external static bit(36)                  dcl 1-27
as_data_$as_ring                       external static fixed bin(3,0)           dcl 1-28
as_data_$as_tty                        automatic       char(6)                  packed unaligned dcl 1-29
as_data_$asmtp                         external static pointer                  dcl 1-30
as_data_$autp                          external static pointer                  dcl 1-31
as_data_$buzzardp                      external static pointer                  dcl 1-32
as_data_$debug_flag                    external static bit(1)                   dcl 1-84
as_data_$default_weight                external static fixed bin(35,0)          dcl 1-34
as_data_$devtabp                       external static pointer                  dcl 1-35
as_data_$dft_user_ring                 external static fixed bin(3,0)           dcl 1-36
as_data_$dutp                          external static pointer                  dcl 1-37
as_data_$g115_dim                      external static char(32)                 packed unaligned dcl 1-38
as_data_$lct_initialized               external static bit(1)                   dcl 1-39
as_data_$lct_size                      external static fixed bin(17,0)          dcl 1-40
as_data_$login_args                    external static structure                level 1 dcl 1-62
as_data_$login_words                   external static fixed bin(17,0)          dcl 1-77
as_data_$ls_message_buffer_cur_lth     external static fixed bin(18,0)          dcl 1-86
as_data_$ls_message_buffer_max_lth     external static fixed bin(18,0)          dcl 1-87
as_data_$ls_message_buffer_ptr         external static pointer                  dcl 1-88
as_data_$ls_request_server_info_ptr    external static pointer                  dcl 1-85
as_data_$max_user_ring                 external static fixed bin(3,0)           dcl 1-41
as_data_$mgtp                          external static pointer                  dcl 1-42
as_data_$mrd_dim                       external static char(32)                 packed unaligned dcl 1-43
as_data_$ntty_dim                      external static char(32)                 packed unaligned dcl 1-44
as_data_$pdtdir                        external static char(168)                packed unaligned dcl 1-45
as_data_$pit_ptr                       external static pointer                  dcl 1-46
as_data_$rcpdir                        external static char(168)                packed unaligned dcl 1-47
as_data_$request_priority              external static fixed bin(17,0)          dcl 1-48
as_data_$rs_ptrs                       external static pointer                  array dcl 1-49
as_data_$rtdtp                         external static pointer                  dcl 1-50
as_data_$sat_htp                       external static pointer                  dcl 1-51
as_data_$satp                          external static pointer                  dcl 1-52
as_data_$signal_types                  external static structure                level 1 dcl 1-67
as_data_$suffix                        external static char(2)                  array packed unaligned dcl 1-53
as_data_$sysdir                        external static char(168)                packed unaligned dcl 1-54
as_data_$system_signal_types           external static structure                level 1 dcl 1-72
as_data_$teens_suffix                  external static char(2)                  array packed unaligned dcl 1-55
as_data_$terminet_tabs_string          external static varying char(144)        dcl 1-56
as_data_$tty_dim                       external static char(32)                 packed unaligned dcl 1-57
as_data_$update_priority               external static fixed bin(17,0)          dcl 1-58
as_data_$version                       external static char(8)                  packed unaligned dcl 1-59
as_data_$whoptr                        external static pointer                  dcl 1-60
as_data_login_words                    based           structure                level 1 dcl 1-77
as_procid                              defined         bit(36)                  dcl 2-17
as_tty                                 based           char(6)                  packed unaligned dcl 2-18
asmtp                                  defined         pointer                  dcl 2-19
cdtp                                   automatic       pointer                  dcl 5-41
devtabp                                defined         pointer                  dcl 2-20
fnp_models                             internal static fixed bin(17,0)          initial array dcl 6-28
fnp_types                              internal static char(8)                  initial array packed unaligned dcl 6-25
fnpep                                  automatic       pointer                  dcl 5-41
generic_destination                    based           char(32)                 packed unaligned dcl 5-195
ip                                     defined         pointer                  dcl 2-21
mgtp                                   defined         pointer                  dcl 2-22
mpxep                                  automatic       pointer                  dcl 5-41
pdtdir                                 based           char(168)                packed unaligned dcl 2-23
rs_ptrs                                based           pointer                  array dcl 2-24
sat_htp                                defined         pointer                  dcl 2-25
satp                                   defined         pointer                  dcl 2-26
sc_stat_$Go                            external static bit(1)                   dcl 8-62
sc_stat_$Go_typed                      external static bit(1)                   dcl 8-62
sc_stat_$Multics                       external static bit(1)                   dcl 8-62
sc_stat_$Multics_typed                 external static bit(1)                   dcl 8-62
sc_stat_$Star_typed                    external static bit(1)                   dcl 8-62
sc_stat_$admin_listener_exit_label     external static label variable           dcl 8-34
sc_stat_$admin_listener_switch         external static bit(1)                   dcl 8-62
sc_stat_$admin_log_iocb                external static pointer                  dcl 8-45
sc_stat_$admin_log_write_ptr           external static pointer                  dcl 8-45
sc_stat_$admin_sci_ptr                 external static pointer                  dcl 8-45
sc_stat_$as_log_write_ptr              external static pointer                  dcl 8-45
sc_stat_$did_part1                     external static bit(1)                   dcl 8-62
sc_stat_$did_part2                     external static bit(1)                   dcl 8-62
sc_stat_$did_part3                     external static bit(1)                   dcl 8-62
sc_stat_$exec_access_name              external static char(32)                 packed unaligned dcl 8-15
sc_stat_$info_dir                      external static char(168)                packed unaligned dcl 8-21
sc_stat_$initzer_ttyp                  external static pointer                  dcl 8-45
sc_stat_$log_dir                       external static char(168)                packed unaligned dcl 8-21
sc_stat_$master_abort_label            external static label variable           dcl 8-34
sc_stat_$master_channel                external static char(6)                  dcl 8-29
sc_stat_$master_iocb                   external static pointer                  dcl 8-45
sc_stat_$master_sci_ptr                external static pointer                  dcl 8-45
sc_stat_$mc_acs_dir                    external static char(168)                packed unaligned dcl 8-21
sc_stat_$mc_ansp                       external static pointer                  dcl 8-45
sc_stat_$mc_iocb                       external static pointer                  dcl 8-45
sc_stat_$mc_is_on                      external static bit(1)                   dcl 8-62
sc_stat_$no_operator_login             external static bit(1)                   dcl 8-62
sc_stat_$shutdown_typed                external static bit(1)                   dcl 8-62
sc_stat_$sv1_iocb                      external static pointer                  dcl 8-45
sc_stat_$sv2_iocb                      external static pointer                  dcl 8-45
sc_stat_$sv3_iocb                      external static pointer                  dcl 8-45
sc_stat_$sysdir                        external static char(168)                packed unaligned dcl 8-21
sc_stat_$system_shutdown_label         external static label variable           dcl 8-34
sc_stat_$test_mode                     external static bit(1)                   dcl 8-62
sc_stat_$unidentified_access_name      external static char(32)                 packed unaligned dcl 8-15
sc_stat_$vchn_requires_accept          external static bit(1)                   dcl 8-62
supported_fnp                          internal static bit(1)                   initial array packed unaligned dcl 6-31
sysdir                                 defined         char(168)                packed unaligned dcl 2-28
whoptr                                 defined         pointer                  dcl 2-29

NAMES DECLARED BY EXPLICIT CONTEXT.
ATTACH_RETURN                   000320 constant        label                    dcl 107 ref 87
FIND_CDTE                       000621 constant        entry                    internal dcl 156 ref 130
REMOVE_RETURN                   000571 constant        label                    dcl 148 ref 126
attach                          000133 constant        entry                    external dcl 73
operator_com_channel_cmds_      000123 constant        entry                    external dcl 23
remove                          000351 constant        entry                    external dcl 115

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1050        1100     706        1060
Length      1436     706        30         322     142           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
operator_com_channel_cmds_          235 external procedure  is an external procedure.  
FIND_CDTE                               internal procedure  shares stack frame of external procedure operator_com_channel_cmds_.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
operator_com_channel_cmds_
                         000100 action                      operator_com_channel_cmds_
                         000102 action_flag                 operator_com_channel_cmds_
                         000103 action_log                  operator_com_channel_cmds_
                         000106 answer                      operator_com_channel_cmds_
                         000206 arg_index                   operator_com_channel_cmds_
                         000207 arg_length                  operator_com_channel_cmds_
                         000210 arg_list_ptr                operator_com_channel_cmds_
                         000212 arg_ptr                     operator_com_channel_cmds_
                         000214 code                        operator_com_channel_cmds_
                         000215 comname                     operator_com_channel_cmds_
                         000220 input_channel               operator_com_channel_cmds_
                         000230 cdtep                       operator_com_channel_cmds_
                         000240 cdtep                       FIND_CDTE
                         000242 i                           FIND_CDTE

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
asu_$asu_attach               asu_$asu_remove               cu_$arg_list_ptr              cu_$arg_ptr_rel
sys_log_$command              sys_log_$command_error

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
as_data_$cdtp                 error_table_$action_not_performed




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     40 000115        23 000122        73 000131        79 000141        80 000150        81 000153        82 000155
     83 000160        84 000161        85 000167        87 000206        90 000210        92 000215        93 000232
     94 000234        96 000262        97 000264        99 000265       105 000316       107 000320       112 000347
    115 000350       118 000357       119 000366       120 000371       121 000373       122 000376       123 000377
    124 000405       126 000424       129 000426       130 000433       131 000436       135 000471       140 000525
    141 000534       142 000536       146 000567       148 000571       152 000620       156 000621       163 000632
    164 000645       165 000653       168 000666       170 000670


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
