	COMPILATION LISTING OF SEGMENT as_check_condition_
	Compiled by: Multics PL/I Compiler, Release 29, of July 28, 1986
	Compiled at: Honeywell Bull, Phx. Az., Sys-M 
	Compiled on: 08/04/87  1316.9 mst Tue
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1987                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        *********************************************************** */
        8 
        9 
       10 /****^  HISTORY COMMENTS:
       11*  1) change(85-12-05,Swenson), approve(87-07-13,MCR7741),
       12*     audit(87-07-24,Brunelle), install(87-08-04,MR12.1-1055):
       13*     Modified to pass the command_error and command_question conditions.
       14*                                                   END HISTORY COMMENTS */
       15 
       16 
       17 /* format: style4 */
       18 
       19 as_check_condition_: proc (a_condition, a_continue, a_non_local);
       20 
       21 /* Answering Service utility to do the right thing by "ucs" handlers. */
       22 /* 82-09-24 wrought  by E. N. Kittlitz. */
       23 /* 82-12-02 modified by E. N. Kittlitz. don't continue on command_question, command_error, command_abort_ */
       24 /* 1985-01-02, BIM: added signal_io_ to condition list. */
       25 
       26 dcl  a_condition char (*);				/* condition name */
       27 dcl  a_continue bit (1) unaligned;			/* set "1"b if caller should pass on condition */
       28 dcl  a_non_local bit (1) unaligned;			/* set "1"b if this is an unwinder */
       29 
       30 dcl  i fixed bin;
       31 
       32 dcl  hbound builtin;
       33 
       34 dcl  non_local_names (3) char (20) unaligned static options (constant) init (
       35 	"cleanup",
       36 	"finish",
       37 	"program_interrupt");
       38 
       39 dcl  continue_names (12) char (20) unaligned static options (constant) init (
       40 	"alrm",
       41 	"cput",
       42 	"command_error",
       43 	"command_question",
       44 	"endfile",
       45 	"endpage",
       46 	"mme2",
       47 	"quit",
       48 	"signal_io_",
       49 	"storage",
       50 	"sus_",
       51 	"trm_");
       52 
       53 	do i = 1 to hbound (non_local_names, 1);
       54 	     if a_condition = non_local_names (i) then do;
       55 		a_continue = "0"b;			/* it's up to you */
       56 		a_non_local = "1"b;			/* but I'd like to go further */
       57 		return;
       58 	     end;
       59 	end;
       60 
       61 	do i = 1 to hbound (continue_names, 1);
       62 	     if a_condition = continue_names (i) then do;
       63 		a_continue = "1"b;			/* don't bother looking */
       64 		a_non_local = "0"b;
       65 		return;
       66 	     end;
       67 	end;
       68 
       69 	a_continue, a_non_local = "0"b;
       70 	return;
       71 
       72      end as_check_condition_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    08/04/87  1221.9  as_check_condition_.pl1           >special_ldd>install>MR12.1-1054>as_check_condition_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
a_condition                            parameter       char                     unaligned dcl 26 ref 19 54 62
a_continue                             parameter       bit(1)                   unaligned dcl 27 set ref 19 55* 63* 69*
a_non_local                            parameter       bit(1)                   unaligned dcl 28 set ref 19 56* 64* 69*
continue_names                  000000 constant        char(20)                 initial array unaligned dcl 39 ref 61 62
hbound                                                 builtin function         dcl 32 ref 53 61
i                               000100 automatic       fixed bin(17,0)          dcl 30 set ref 53* 54* 61* 62*
non_local_names                 000074 constant        char(20)                 initial array unaligned dcl 34 ref 53 54

NAME DECLARED BY EXPLICIT CONTEXT.
as_check_condition_             000121 constant        entry                    external dcl 19

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       260         270     231         270
Length       440     231        10         133      26           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
as_check_condition_                  66 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
as_check_condition_      000100 i                           as_check_condition_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
return_mac          ext_entry_desc

NO EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     19 000115        53 000134        54 000141        55 000152        56 000156        57 000162        59 000163
     61 000165        62 000173        63 000204        64 000210        65 000214        67 000215        69 000217
     70 000230


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
