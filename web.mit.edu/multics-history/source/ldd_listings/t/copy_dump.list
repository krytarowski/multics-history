	COMPILATION LISTING OF SEGMENT copy_dump
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/15/82  1541.4 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 copy_dump: proc;
       12 
       13 /*	copy_fdump - interface to hphcs_$copy_fdump - October, 1971 David M. Jordan
       14*
       15*   This procedure interfaces to hphcs_$copy_fdump and to
       16*   hphcs_$set_fdump_num.
       17*
       18*   ENTRY:	copy_dump$copy_dump
       19*
       20*   This entry copies the contents of the dump partition into the Multics
       21*   heirarchy in >dumps.  The contents are placed into up to ten segments in
       22*   that directory with names of the form:
       23*
       24*   mmddyy.tttt.s.eee
       25*
       26*   where
       27*
       28*   mmddyy	is the date the dump was taken
       29*   tttt	is the time the dump was taken
       30*   s	is a sequence number (0, 1, 2, ... 9)
       31*   eee	is the ERF number used in reporting this dump
       32*
       33*   Note that copy_dump will copy a given dump only once and will return an
       34*   error code if an attempt is made to re-copy a dump.
       35*
       36*   ENTRY:	copy_dump$set_fdump_number eee
       37*   or copy_dump$sfdn eee
       38*
       39*   where
       40*
       41*   eee	is the ERF number to be assigned to the next FDUMP taken.
       42*
       43*   This entry sets the value of the next FDUMP to be taken by changing
       44*   the value associated with the ERF number in the dump partition.
       45*
       46*   Note that copy_dump$set_fdump_number will modify the dump partition only
       47*   after the last dump taken has been copied.  If an attempt is made to change
       48*   the ERF number before a dump has been copied an error message will be returned.
       49*
       50**/
       51 
       52 declare  code fixed bin (35),				/* error code */
       53          aptr pointer,				/* argument pointer */
       54          alen fixed bin,				/* argument length */
       55          arg char (alen) based (aptr),			/* argument */
       56          erf_no fixed bin;				/* fdump erf number to be set */
       57 
       58 declare (hphcs_$copy_fdump entry (fixed bin (35)),
       59          com_err_ entry options (variable),
       60          cu_$arg_ptr entry (fixed bin, ptr, fixed bin, fixed bin (35)),
       61          cv_dec_check_ entry (char (*), fixed bin (35)) returns (fixed bin),
       62          error_table_$badcall fixed bin (35),
       63          error_table_$noarg fixed bin (35),
       64          hphcs_$set_fdump_num entry (fixed bin, fixed bin (35))) external;
       65 
       66 
       67 	call hphcs_$copy_fdump (code);
       68 
       69 	if code ^= 0
       70 	then call com_err_ (code, "copy_dump");
       71 	return;
       72 
       73 set_fdump_number: sfdn: entry;
       74 
       75 	call cu_$arg_ptr (1, aptr, alen, code);
       76 
       77 	if code ^= 0
       78 	then do;
       79 
       80 	     call com_err_ (error_table_$noarg, "set_fdump_number",
       81 		"Usage is:^/set_fdump_number erf^/Where ""erf"" is the number of the next ERF.");
       82 	     return;
       83 
       84 	end;
       85 
       86 	erf_no = cv_dec_check_ (arg, code);
       87 
       88 	if code ^= 0
       89 	then do;
       90 
       91 	     call com_err_ (error_table_$badcall, "set_fdump_number", "Not a decimal number: ^a", aptr -> arg);
       92 	     return;
       93 
       94 	end;
       95 
       96 	call hphcs_$set_fdump_num (erf_no, code);
       97 
       98 	if code ^= 0
       99 	then call com_err_ (code, "set_fdump_number");
      100 
      101 	return;
      102      end copy_dump;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/15/82  1455.6  copy_dump.pl1                     >dumps>old>recomp>copy_dump.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
alen                            000104 automatic       fixed bin(17,0)          dcl 52 set ref 75* 86 86 91 91
aptr                            000102 automatic       pointer                  dcl 52 set ref 75* 86 91
arg                                    based           char                     unaligned dcl 52 set ref 86* 91*
code                            000100 automatic       fixed bin(35,0)          dcl 52 set ref 67* 69 69* 75* 77 86* 88 96* 98 98*
com_err_                        000012 constant        entry                    external dcl 58 ref 69 80 91 98
cu_$arg_ptr                     000014 constant        entry                    external dcl 58 ref 75
cv_dec_check_                   000016 constant        entry                    external dcl 58 ref 86
erf_no                          000105 automatic       fixed bin(17,0)          dcl 52 set ref 86* 96*
error_table_$badcall            000020 external static fixed bin(35,0)          dcl 58 set ref 91*
error_table_$noarg              000022 external static fixed bin(35,0)          dcl 58 set ref 80*
hphcs_$copy_fdump               000010 constant        entry                    external dcl 58 ref 67
hphcs_$set_fdump_num            000024 constant        entry                    external dcl 58 ref 96

NAMES DECLARED BY EXPLICIT CONTEXT.
copy_dump                       000050 constant        entry                    external dcl 11
set_fdump_number                000120 constant        entry                    external dcl 73
sfdn                            000111 constant        entry                    external dcl 73

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       446         474     325         456
Length       652     325        26         141     121           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
copy_dump                           120 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
copy_dump                000100 code                        copy_dump
                         000102 aptr                        copy_dump
                         000104 alen                        copy_dump
                         000105 erf_no                      copy_dump

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      cu_$arg_ptr                   cv_dec_check_                 hphcs_$copy_fdump
hphcs_$set_fdump_num

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$badcall          error_table_$noarg




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000047        67 000055        69 000063        71 000107        73 000110        75 000125        77 000144
     80 000146        82 000176        86 000177        88 000223        91 000225        92 000267        96 000270
     98 000301       101 000324


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
