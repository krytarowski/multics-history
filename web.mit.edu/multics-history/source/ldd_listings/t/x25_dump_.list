	COMPILATION LISTING OF SEGMENT x25_dump_
	Compiled by: Multics PL/I Compiler, Release 32f, of October 9, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 10/25/89  1052.9 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(89-10-04,Parisek), approve(89-10-04,MCR8110),
       17*     audit(89-10-09,Farley), install(89-10-25,MR12.3-1100):
       18*     Added display of the "packet_trace_sw" flag for x25 devices.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 /* format: style4,delnl,insnl,ifthenstmt,indnoniterend */
       23 
       24 /* modified by Robert Coren, July 1983, for long packet threshold */
       25 /* Modified by R.J.C. Kissel, October 1984, for breakall_idle_timer. */
       26 
       27 x25_dump_:
       28      procedure (Ttybp, Areap, Dp, Sc, Brief);
       29 
       30 dcl  (Ttybp, Areap, Dp) ptr parameter;
       31 dcl  Sc fixed bin parameter;
       32 dcl  Brief bit (1) aligned parameter;
       33 
       34 dcl  ioa_ entry () options (variable);
       35 dcl  ioa_$nnl entry () options (variable);
       36 dcl  tty_dump$print_chain entry (ptr, char (*), fixed bin, bit (1));
       37 
       38 dcl  x25_state_names (5) char (32) static options (constant)
       39 	init ("p1(READY)", "p2(DTE WAITING)", "p41(FLOW CONTROL READY)", "p6(DTE CLEAR REQUEST)",
       40 	"p42(DTE RESET REQUEST)");
       41 
       42 dcl  i fixed bin;
       43 
       44 dcl  (addr, binary, hbound, mod, null, ptr, rel, unspec) builtin;
       45 
       46 	x25_data_ptr = Dp;
       47 	x25_data.lc_ptr = ptr (Ttybp, rel (x25_data.lc_ptr));
       48 
       49 	if Sc > 0 then do;
       50 	     xscep = addr (x25_data.sc (Sc));
       51 	     call ioa_ (
       52 		"X.25 SC ^d ^a devx ^o^[(^a)^;^s^]: ^[HUNGUP^;LISTENING^;DIALING^;DIALED^]^[ output_ready^]^[ eop^]^[ wru^]^[ need_ftd^]^[ long_packet^]^[ rawi^]^[ echoplex^]^[ breakall^]^[ iflow^]^[ oflow^]^[ hndlquit^]^[ polite^]^[ lfecho^]^[ 8bit^]^9(^s^)"
       53 		, Sc, xsce.name, xsce.devx, (xsce.service ^= ""), xsce.service, xsce.state + 1,
       54 		xsce.flags.output_ready, xsce.flags.end_of_page, xsce.flags.wru_done, xsce.flags.need_ftd,
       55 		xsce.flags.long_packet_pending, xsce.mode);
       56 	     if xsce.lcx > 0 then do;
       57 		xlcep = addr (x25_lces.lc (xsce.lcx));
       58 		call ioa_ (" LC ^d: state=^a,max_packet_size=^d,window used=^d/^d", xsce.lcx,
       59 		     x25_state_names (xlce.state), xlce.max_packet_size,
       60 		     mod (xlce.next_send_seq - xlce.next_ack_seq, x25_data.seq_mod), xlce.max_window_size);
       61 		call ioa_ (
       62 		     "^-^[iti ^]^[int_issued ^]^[rnr_sent ^]^[rnr_received ^]^[iti_break ^]^[baud=^d ^;^s^]^[originate ^]"
       63 		     , xlce.iti_call, xlce.int_issued, xlce.flags.rnr_sent, xlce.rnr_received, xlce.iti_break,
       64 		     (xlce.baud_rate ^= 0), xlce.baud_rate, xlce.flags.originate);
       65 		call ioa_ ("^-^[ address=^a^;^s^]^[ call data=^a^;^s^]", (xlce.his_address ^= ""), xlce.his_address,
       66 		     (xlce.call_data ^= ""), xlce.call_data);
       67 		if unspec (xlce.iti_params) ^= ""b then do;
       68 		     call ioa_$nnl ("^-PAR");
       69 		     do i = 1 to hbound (xlce.iti_params, 1);
       70 			if xlce.iti_params (i) > 0 then call ioa_$nnl ("  ^d:^d", i, xlce.iti_params (i));
       71 		     end;
       72 		     call ioa_ ("");
       73 		     end;
       74 		if xsce.write_head ^= null () then do;
       75 		     call ioa_$nnl ("write chain:");
       76 		     call tty_dump$print_chain (Ttybp, "", binary (rel (xsce.write_head), 18), (Brief));
       77 		     end;
       78 		end;
       79 	     end;
       80 	else do;
       81 	     call ioa_ (
       82 		"X.25 devx ^o, ^d lc, ^d sc, ^[HUNGUP^;LISTENING^;RESTARTING^;ACTIVE^] flags: ^[started^]^[ send_output^]^[ bypass_restart^]^[ no_d^]^[ packet_tracing^]"
       83 		, x25_data.devx, x25_data.n_lc, x25_data.n_sc, 1 + x25_data.state, x25_data.flags.mpx_started,
       84 		x25_data.flags.send_output, x25_data.flags.bypass_restart, x25_data.flags.no_d, x25_data.flags.packet_trace_sw);
       85 	     call ioa_ ("  packet_threshold=^d  breakall_idle_timer=^d^[  address=^a^;^s^]^[  network=^a^;^s^]",
       86 		x25_data.long_packet_size, x25_data.breakall_idle_timer, (x25_data.my_address ^= ""),
       87 		x25_data.my_address, (x25_data.net_type ^= ""), x25_data.net_type);
       88 	     if x25_data.write_head ^= null () then do;
       89 		call ioa_ ("  write chain:");
       90 		call tty_dump$print_chain (Ttybp, "", binary (rel (x25_data.write_head), 18), (Brief));
       91 		end;
       92 	     end;
       93 
       94 	return;
       95 
  1     1 /*  BEGIN INCLUDE FILE ... x25_data.incl.pl1  */
  1     2 
  1     3 
  1     4 /****^  HISTORY COMMENTS:
  1     5*  1) change(89-03-20,Parisek), approve(89-06-01,MCR8110),
  1     6*     audit(89-10-09,Farley), install(89-10-25,MR12.3-1100):
  1     7*     Add support of protocol mpx.
  1     8*                                                   END HISTORY COMMENTS */
  1     9 
  1    10 
  1    11 /*       Created june 9, 1979 by B.Westcott   */
  1    12 /* Revised January 1982 by C. Hornig */
  1    13 /* Modified  May 1982, by D. W. Cousins for level 2 activation data */
  1    14 /* Modified August 1983 by Jeff Schiller to implement the "reverse charging" facility. */
  1    15 /* Modified October 1984 by R.J.C. Kissel to have a value for the idle timer to use for breakall mode. */
  1    16 /* Modified October 1984 by R.J.C. Kissel to add the write_status_sync_sent flag. */
  1    17 
  1    18 dcl  x25_data_ptr ptr;
  1    19 dcl  x25_data_n_sc fixed bin;				/* number of Multics subchannels */
  1    20 
  1    21 dcl  1 x25_data aligned based (x25_data_ptr),		/* level 3 data */
  1    22        2 name char (32),				/* channel name for messages */
  1    23        2 devx fixed bin,				/* device index of multiplexer */
  1    24        2 state fixed bin,				/* see below */
  1    25        2 n_lc fixed bin,				/* number of logical channels */
  1    26        2 n_sc fixed bin,				/* number of subchannels */
  1    27        2 n_pvc fixed bin,				/* number of Permanent Virtual Circuits */
  1    28        2 flags,
  1    29          3 send_output bit (1) unaligned,
  1    30          3 mpx_started bit (1) unaligned,
  1    31          3 bypass_restart bit (1) unaligned,
  1    32          3 no_d bit (1) unaligned,			/* end-to-end ack not available */
  1    33          3 out_calls_collect bit (1) unaligned,
  1    34          3 packet_trace_sw   bit (1) unaligned,		/* Log packets? */
  1    35          3 pad1 bit (30) unaligned,
  1    36        2 seq_mod uns fixed bin (8),			/* modulus for packet sequencing */
  1    37        2 gfid bit (2),				/* format code to use */
  1    38        2 load_proc_id bit (36),			/* bootload process id */
  1    39        2 load_ev_chan fixed bin (71),			/* bootload event channel */
  1    40        2 net_type char (8),				/* type of net this is */
  1    41        2 restart_time fixed bin (71),			/* time last restart sent */
  1    42        2 dialup_info like dialup_info,			/* dialup interrupt info */
  1    43        2 lc_ptr ptr,				/* LC table */
  1    44        2 (write_head, write_tail) ptr,			/* chain of packets to write */
  1    45        2 long_packet_size fixed bin (11),		/* smallest long packet */
  1    46        2 long_packet_head fixed bin,			/* head of long packet SC chain */
  1    47        2 long_packet_tail fixed bin,			/* tail of long packet SC chain */
  1    48        2 breakall_idle_timer fixed bin,			/* breakall idle timer in 1/20 sec. */
  1    49        2 my_address varying char (15),			/* local DTE address */
  1    50        2 sc (x25_data_n_sc refer (x25_data.n_sc)) like xsce;/* subchannel tables */
  1    51 
  1    52 dcl  (
  1    53      X25_HUNGUP init (0),				/* values of x25_data.state */
  1    54      X25_LISTENING init (1),
  1    55      X25_RESTARTING init (2),
  1    56      X25_ACTIVE init (3)
  1    57      ) fixed bin static options (constant);
  1    58 
  1    59 dcl  1 x25_lces aligned based (x25_data.lc_ptr),		/* logical channel table */
  1    60        2 lc (x25_data.n_lc) like xlce;
  1    61 
  1    62 dcl  xlcep ptr;
  1    63 dcl  1 xlce aligned based (xlcep),
  1    64        2 state fixed bin,				/* see definitions below */
  1    65        2 scx fixed bin,				/* index of associated subchannel */
  1    66        2 max_packet_size uns fixed bin (18),		/* maximum data packet allowed */
  1    67        2 max_window_size uns fixed bin (7),
  1    68        2 baud_rate fixed bin,				/* speed of remote correspondent */
  1    69        2 flags aligned,				/* start on a word. */
  1    70          3 iti_call bit (1) unaligned,			/* set if iti call */
  1    71          3 int_issued bit (1) unaligned,		/* interrupt packet issued */
  1    72          3 rnr_received bit (1) unaligned,		/* dce sent rnr packet */
  1    73          3 iti_break bit (1) unaligned,			/* iti break being serviced */
  1    74          3 rnr_sent bit (1) unaligned,			/* we sent a RNR */
  1    75          3 originate bit (1) unaligned,			/* we started this call */
  1    76          3 timer_set bit (1) unaligned,			/* timing out on RR */
  1    77          3 collect_call bit (1) unaligned,		/* who pays for call */
  1    78          3 write_status_sync_sent bit (1) unaligned,	/* we sent one, and haven't heard the result. */
  1    79          3 pad bit (27) unaligned,
  1    80        2 window_size fixed bin,			/* V (W) current window size */
  1    81        2 force_ack_time fixed bin (71),			/* deadline for sending RR */
  1    82        2 state_time fixed bin (71),			/* time of last state change */
  1    83        2 next_recv_seq unsigned fixed bin (7),		/* V(R) next receive sequence number */
  1    84        2 next_send_seq unsigned fixed bin (7),		/* V(S) next sequence for transmssion */
  1    85        2 last_recv_seq unsigned fixed bin (7),		/* P(R) last issued receive sequence */
  1    86        2 next_ack_seq unsigned fixed bin (7),		/* P(S) sequence of next ack to be issued */
  1    87        2 his_address varying char (15),			/* outgoing host number */
  1    88        2 call_data varying char (16),			/* call user data */
  1    89        2 iti_params (18) uns fixed bin (9) unaligned;	/* PAD simulation parameters */
  1    90 
  1    91 /* state definitions */
  1    92 
  1    93 dcl  (
  1    94      READY init (1),
  1    95      DTE_WAITING init (2),
  1    96      FLOW_CONTROL_READY init (3),
  1    97      DTE_CLEAR_REQUEST init (4),
  1    98      DTE_RESET_REQUEST init (5),
  1    99      CONRESP_WAITING   init (6)
  1   100      ) fixed bin static options (constant);
  1   101 
  1   102 dcl  xscep ptr;
  1   103 dcl  1 xsce aligned based (xscep),
  1   104        2 name char (32),				/* name of the channel */
  1   105        2 devx fixed bin,				/* device index */
  1   106        2 lcx fixed bin,				/* index of xlce */
  1   107        2 state fixed bin,				/* see definitions below */
  1   108        2 flags,
  1   109          3 output_ready bit (1) unaligned,		/* set if window full */
  1   110          3 end_of_page bit (1) unaligned,		/* set if output read end-of-page */
  1   111          3 wru_done bit (1) unaligned,			/* user has done a WRU */
  1   112          3 need_ftd bit (1) unaligned,			/* user has done get_foreign_terminal_data */
  1   113          3 long_packet_pending bit (1) unaligned,		/* there is a long packet "on hold" */
  1   114          3 pad bit (13) unaligned,
  1   115          3 mode (18) bit (1) unaligned,			/* rawi, echoplex, breakall, iflow, oflow, hndlquit, polite, lfecho, 8bit */
  1   116        2 long_packet_next_scx fixed bin,		/* thread of held sc's */
  1   117        2 service char (12),				/* name of service offered here */
  1   118        2 (write_head, write_tail) ptr,			/* data packet chain */
  1   119        2 trans_table_ptr ptr;				/* translation table */
  1   120 
  1   121 dcl  (
  1   122      SC_HUNGUP init (0),
  1   123      SC_LISTENING init (1),
  1   124      SC_DIALING init (2),
  1   125      SC_DIALED init (3)
  1   126      ) fixed bin static options (constant);
  1   127 
  2     1 /* BEGIN INCLUDE FILE ... mcs_interrupt_info.incl.pl1 */
  2     2 
  2     3 /* Defines constants and structures  used by MCS interrupt handlers */
  2     4 
  2     5 /* Created 08/21/78 by Robert Coren */
  2     6 /* Echo negotiation types added sometime by Bernie Greenberg */
  2     7 /* TIMER and USER_INTERRUPT added in spring of 1982 by Olin Sibert */
  2     8 /* MASKED type added June 23, 1982, by Robert Coren */
  2     9 
  2    10 dcl  DIALUP fixed bin int static options (constant) init (1);
  2    11 dcl  HANGUP fixed bin int static options (constant) init (2);
  2    12 dcl  CRASH fixed bin int static options (constant) init (3);
  2    13 dcl  SEND_OUTPUT fixed bin int static options (constant) init (4);
  2    14 dcl  INPUT_AVAILABLE fixed bin int static options (constant) init (5);
  2    15 dcl  ACCEPT_INPUT fixed bin int static options (constant) init (6);
  2    16 dcl  INPUT_REJECTED fixed bin int static options (constant) init (7);
  2    17 dcl  QUIT fixed bin int static options (constant) init (8);
  2    18 dcl  LINE_STATUS fixed bin int static options (constant) init (9);
  2    19 dcl  DIAL_STATUS fixed bin int static options (constant) init (10);
  2    20 dcl  WRU_TIMEOUT fixed bin int static options (constant) init (11);
  2    21 dcl  SPACE_AVAILABLE fixed bin int static options (constant) init (12);
  2    22 dcl  ACKNOWLEDGE_ECHNEGO_INIT fixed bin int static options (constant) init (13);
  2    23 dcl  ACKNOWLEDGE_ECHNEGO_STOP fixed bin int static options (constant) init (14);
  2    24 dcl  TIMER fixed bin int static options (constant) init (15);
  2    25 dcl  USER_INTERRUPT fixed bin int static options (constant) init (16);
  2    26 dcl  MASKED fixed bin int static options (constant) init (17);
  2    27 
  2    28 dcl  interrupt_info bit (72) aligned;
  2    29 
  2    30 dcl 1 dialup_info aligned,				/* for use with DIALUP interrupt */
  2    31     2 line_type fixed bin (9) unal uns,
  2    32     2 buffer_pad fixed bin (9) unal uns,		/* free space multiplexer would like in output bufs */
  2    33     2 baud_rate fixed bin (18) unal uns,
  2    34     2 max_buf_size fixed bin (9) unal uns,
  2    35     2 receive_mode_device bit (1) unal,			/* device must be told to enter receive mode */
  2    36     2 pad bit (26) unal;
  2    37 
  2    38 dcl 1 rtx_info aligned,				/* for use with ACCEPT_INPUT interrupt */
  2    39     2 input_chain unaligned,
  2    40       3 chain_head bit (18) unaligned,
  2    41       3 chain_tail bit (18) unaligned,
  2    42     2 input_count fixed bin (18) unal uns,
  2    43     2 flags unaligned,
  2    44       3 break_char bit (1),				/* data contains a break character */
  2    45       3 output_in_fnp bit (1),			/* there is output in the FNP */
  2    46       3 output_in_ring_0 bit (1),			/* there is output in ring 0 */
  2    47       3 formfeed_present bit (1),			/* input contains a formfeed character */
  2    48       3 pad bit (14);
  2    49 
  2    50 dcl 1 timer_info aligned,				/* Info supplied with TIMER interrupt */
  2    51     2 id bit (36) aligned,				/* ID which was supplied in call to mcs_timer$set */
  2    52     2 subchan_idx fixed bin;				/* Index of subchannel on whose behalf timer was set */
  2    53 
  2    54 /* END INCLUDE FILE ... mcs_interrupt_info.incl.pl1 */
  1   128 
  1   129 
  1   130 /* End include file x25_data.incl.pl1 */
       96 
       97 
       98      end x25_dump_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/25/89  1000.0  x25_dump_.pl1                     >special_ldd>install>MR12.3-1100>x25_dump_.pl1
96           1    10/25/89  0959.9  x25_data.incl.pl1                 >special_ldd>install>MR12.3-1100>x25_data.incl.pl1
1-128        2    10/20/82  0938.6  mcs_interrupt_info.incl.pl1       >ldd>include>mcs_interrupt_info.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
Areap                                  parameter       pointer                  dcl 30 ref 27
Brief                                  parameter       bit(1)                   dcl 32 ref 27 76 90
Dp                                     parameter       pointer                  dcl 30 ref 27 46
Sc                                     parameter       fixed bin(17,0)          dcl 31 set ref 27 49 50 51*
Ttybp                                  parameter       pointer                  dcl 30 set ref 27 47 76* 90*
addr                                                   builtin function         dcl 44 ref 50 57
baud_rate                 4            based           fixed bin(17,0)          level 2 dcl 1-63 set ref 61 61*
binary                                                 builtin function         dcl 44 ref 76 76 90 90
breakall_idle_timer      43            based           fixed bin(17,0)          level 2 dcl 1-21 set ref 85*
bypass_restart           15(02)        based           bit(1)                   level 3 packed packed unaligned dcl 1-21 set ref 81*
call_data                25            based           varying char(16)         level 2 dcl 1-63 set ref 65 65*
devx                     10            based           fixed bin(17,0)          level 2 in structure "xsce" dcl 1-103 in procedure
                                                                                  "x25_dump_" set ref 51*
devx                     10            based           fixed bin(17,0)          level 2 in structure "x25_data" dcl 1-21
                                                                                  in procedure "x25_dump_" set ref 81*
dialup_info                     000110 automatic       structure                level 1 dcl 2-30
end_of_page              13(01)        based           bit(1)                   level 3 packed packed unaligned dcl 1-103 set ref
                                                                                  51*
flags                    15            based           structure                level 2 in structure "x25_data" dcl 1-21
                                                                                  in procedure "x25_dump_"
flags                    13            based           structure                level 2 in structure "xsce" dcl 1-103 in procedure
                                                                                  "x25_dump_"
flags                     5            based           structure                level 2 in structure "xlce" dcl 1-63 in procedure
                                                                                  "x25_dump_"
hbound                                                 builtin function         dcl 44 ref 69
his_address              20            based           varying char(15)         level 2 dcl 1-63 set ref 65 65*
i                               000100 automatic       fixed bin(17,0)          dcl 42 set ref 69* 70 70* 70*
int_issued                5(01)        based           bit(1)                   level 3 packed packed unaligned dcl 1-63 set ref 61*
ioa_                            000010 constant        entry                    external dcl 34 ref 51 58 61 65 72 81 85 89
ioa_$nnl                        000012 constant        entry                    external dcl 35 ref 68 70 75
iti_break                 5(03)        based           bit(1)                   level 3 packed packed unaligned dcl 1-63 set ref 61*
iti_call                  5            based           bit(1)                   level 3 packed packed unaligned dcl 1-63 set ref 61*
iti_params               32            based           fixed bin(9,0)           array level 2 packed packed unsigned unaligned
                                                                                  dcl 1-63 set ref 67 69 70 70*
lc                                     based           structure                array level 2 dcl 1-59 set ref 57
lc_ptr                   32            based           pointer                  level 2 dcl 1-21 set ref 47* 47 57
lcx                      11            based           fixed bin(17,0)          level 2 dcl 1-103 set ref 56 57 58*
long_packet_pending      13(04)        based           bit(1)                   level 3 packed packed unaligned dcl 1-103 set ref
                                                                                  51*
long_packet_size         40            based           fixed bin(11,0)          level 2 dcl 1-21 set ref 85*
max_packet_size           2            based           fixed bin(18,0)          level 2 unsigned dcl 1-63 set ref 58*
max_window_size           3            based           fixed bin(7,0)           level 2 unsigned dcl 1-63 set ref 58*
mod                                                    builtin function         dcl 44 ref 58 58
mode                     13(18)        based           bit(1)                   array level 3 packed packed unaligned dcl 1-103 set
                                                                                  ref 51*
mpx_started              15(01)        based           bit(1)                   level 3 packed packed unaligned dcl 1-21 set ref 81*
my_address               44            based           varying char(15)         level 2 dcl 1-21 set ref 85 85*
n_lc                     12            based           fixed bin(17,0)          level 2 dcl 1-21 set ref 81*
n_sc                     13            based           fixed bin(17,0)          level 2 dcl 1-21 set ref 81*
name                                   based           char(32)                 level 2 dcl 1-103 set ref 51*
need_ftd                 13(03)        based           bit(1)                   level 3 packed packed unaligned dcl 1-103 set ref
                                                                                  51*
net_type                 24            based           char(8)                  level 2 dcl 1-21 set ref 85 85*
next_ack_seq             17            based           fixed bin(7,0)           level 2 unsigned dcl 1-63 ref 58 58
next_send_seq            15            based           fixed bin(7,0)           level 2 unsigned dcl 1-63 ref 58 58
no_d                     15(03)        based           bit(1)                   level 3 packed packed unaligned dcl 1-21 set ref 81*
null                                                   builtin function         dcl 44 ref 74 88
originate                 5(05)        based           bit(1)                   level 3 packed packed unaligned dcl 1-63 set ref 61*
output_ready             13            based           bit(1)                   level 3 packed packed unaligned dcl 1-103 set ref
                                                                                  51*
packet_trace_sw          15(05)        based           bit(1)                   level 3 packed packed unaligned dcl 1-21 set ref 81*
ptr                                                    builtin function         dcl 44 ref 47
rel                                                    builtin function         dcl 44 ref 47 76 76 90 90
rnr_received              5(02)        based           bit(1)                   level 3 packed packed unaligned dcl 1-63 set ref 61*
rnr_sent                  5(04)        based           bit(1)                   level 3 packed packed unaligned dcl 1-63 set ref 61*
sc                       52            based           structure                array level 2 dcl 1-21 set ref 50
send_output              15            based           bit(1)                   level 3 packed packed unaligned dcl 1-21 set ref 81*
seq_mod                  16            based           fixed bin(8,0)           level 2 unsigned dcl 1-21 ref 58 58
service                  15            based           char(12)                 level 2 dcl 1-103 set ref 51 51*
state                    11            based           fixed bin(17,0)          level 2 in structure "x25_data" dcl 1-21
                                                                                  in procedure "x25_dump_" ref 81
state                    12            based           fixed bin(17,0)          level 2 in structure "xsce" dcl 1-103 in procedure
                                                                                  "x25_dump_" ref 51
state                                  based           fixed bin(17,0)          level 2 in structure "xlce" dcl 1-63 in procedure
                                                                                  "x25_dump_" ref 58
tty_dump$print_chain            000014 constant        entry                    external dcl 36 ref 76 90
unspec                                                 builtin function         dcl 44 ref 67
write_head               20            based           pointer                  level 2 in structure "xsce" dcl 1-103 in procedure
                                                                                  "x25_dump_" ref 74 76 76
write_head               34            based           pointer                  level 2 in structure "x25_data" dcl 1-21
                                                                                  in procedure "x25_dump_" ref 88 90 90
wru_done                 13(02)        based           bit(1)                   level 3 packed packed unaligned dcl 1-103 set ref
                                                                                  51*
x25_data                               based           structure                level 1 dcl 1-21
x25_data_ptr                    000102 automatic       pointer                  dcl 1-18 set ref 46* 47 47 50 57 58 58 81 81 81 81
                                                                                  81 81 81 81 81 85 85 85 85 85 85 88 90 90
x25_lces                               based           structure                level 1 dcl 1-59
x25_state_names                 000000 constant        char(32)                 initial array packed unaligned dcl 38 set ref 58*
xlce                                   based           structure                level 1 dcl 1-63
xlcep                           000104 automatic       pointer                  dcl 1-62 set ref 57* 58 58 58 58 58 58 58 61 61 61
                                                                                  61 61 61 61 61 65 65 65 65 67 69 70 70
xsce                                   based           structure                level 1 dcl 1-103
xscep                           000106 automatic       pointer                  dcl 1-102 set ref 50* 51 51 51 51 51 51 51 51 51 51
                                                                                  51 56 57 58 74 76 76

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
ACCEPT_INPUT                           internal static fixed bin(17,0)          initial dcl 2-15
ACKNOWLEDGE_ECHNEGO_INIT               internal static fixed bin(17,0)          initial dcl 2-22
ACKNOWLEDGE_ECHNEGO_STOP               internal static fixed bin(17,0)          initial dcl 2-23
CONRESP_WAITING                        internal static fixed bin(17,0)          initial dcl 1-93
CRASH                                  internal static fixed bin(17,0)          initial dcl 2-12
DIALUP                                 internal static fixed bin(17,0)          initial dcl 2-10
DIAL_STATUS                            internal static fixed bin(17,0)          initial dcl 2-19
DTE_CLEAR_REQUEST                      internal static fixed bin(17,0)          initial dcl 1-93
DTE_RESET_REQUEST                      internal static fixed bin(17,0)          initial dcl 1-93
DTE_WAITING                            internal static fixed bin(17,0)          initial dcl 1-93
FLOW_CONTROL_READY                     internal static fixed bin(17,0)          initial dcl 1-93
HANGUP                                 internal static fixed bin(17,0)          initial dcl 2-11
INPUT_AVAILABLE                        internal static fixed bin(17,0)          initial dcl 2-14
INPUT_REJECTED                         internal static fixed bin(17,0)          initial dcl 2-16
LINE_STATUS                            internal static fixed bin(17,0)          initial dcl 2-18
MASKED                                 internal static fixed bin(17,0)          initial dcl 2-26
QUIT                                   internal static fixed bin(17,0)          initial dcl 2-17
READY                                  internal static fixed bin(17,0)          initial dcl 1-93
SC_DIALED                              internal static fixed bin(17,0)          initial dcl 1-121
SC_DIALING                             internal static fixed bin(17,0)          initial dcl 1-121
SC_HUNGUP                              internal static fixed bin(17,0)          initial dcl 1-121
SC_LISTENING                           internal static fixed bin(17,0)          initial dcl 1-121
SEND_OUTPUT                            internal static fixed bin(17,0)          initial dcl 2-13
SPACE_AVAILABLE                        internal static fixed bin(17,0)          initial dcl 2-21
TIMER                                  internal static fixed bin(17,0)          initial dcl 2-24
USER_INTERRUPT                         internal static fixed bin(17,0)          initial dcl 2-25
WRU_TIMEOUT                            internal static fixed bin(17,0)          initial dcl 2-20
X25_ACTIVE                             internal static fixed bin(17,0)          initial dcl 1-52
X25_HUNGUP                             internal static fixed bin(17,0)          initial dcl 1-52
X25_LISTENING                          internal static fixed bin(17,0)          initial dcl 1-52
X25_RESTARTING                         internal static fixed bin(17,0)          initial dcl 1-52
interrupt_info                         automatic       bit(72)                  dcl 2-28
rtx_info                               automatic       structure                level 1 dcl 2-38
timer_info                             automatic       structure                level 1 dcl 2-50
x25_data_n_sc                          automatic       fixed bin(17,0)          dcl 1-19

NAME DECLARED BY EXPLICIT CONTEXT.
x25_dump_                       000403 constant        entry                    external dcl 27

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1430        1446    1362        1440
Length      1662    1362        16         200      46           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
x25_dump_                           194 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
x25_dump_                000100 i                           x25_dump_
                         000102 x25_data_ptr                x25_dump_
                         000104 xlcep                       x25_dump_
                         000106 xscep                       x25_dump_
                         000110 dialup_info                 x25_dump_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
r_ne_as             call_ext_out_desc   return_mac          mdfx1               ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
ioa_                          ioa_$nnl                      tty_dump$print_chain

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     27 000376        46 000410        47 000414        49 000421        50 000423        51 000426        56 000536
     57 000541        58 000546        61 000617        65 000704        67 000754        68 000761        69 000774
     70 001001        71 001040        72 001042        74 001053        75 001060        76 001075        79 001132
     81 001133        85 001217        88 001300        89 001305        90 001324        94 001361


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
