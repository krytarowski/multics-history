Compilation listing of file >2.1spec>online>mib083074>bcpl_driver.bcpl.
Compilation performed for Martinson.SysMaint.a at 01/24/75  0658.6 mst Fri.
Compiled by BCPL version 3.4, August 1973.  Compiler updated at 09/25/73  0959.1 mst Tue.
Options applied:  source  xref  alist  optimize  6180.

     1	//  The command interface for the compiler.
     2	//  Last modified on 06/06/74 at 18:25:47 by R F Mabee.
     3	//  Installed on 6180 as Version 3.4, R F Mabee.
     4	//  ACL rings changed to V,V,V and installed as Version 2.8, R F Mabee.
     5	//  First installed as Version 2.7 by R F Mabee.
     6	
     7	//  Copyright (c) 1974 by Massachusetts Institute of Technology and Honeywell Information Systems, Inc.
     8	
     9	//  General permission is granted to copy and use this program, but not to sell it, provided that the above
    10	//  copyright statement is given.  Contact Information Processing Services, MIT, for further information.
    11	//  Please contact R F Mabee at MIT for information on this program and versions for other machines.
    12	
    13	get "head"	
	     1	//  Declarations for common BCPL library routines for Multics.
	     2	//  Last modified on 09/05/73 at 03:57:35 by R F Mabee.
	     3	//  Largely rewritten for 6180 Multics; installed in June 1973 by R F Mabee.
	     4	//  First version installed in September 1971 by R F Mabee.
	     5	
	     6	external		//  Functions to perform mathematical operations not provided by the language.
	     7	     $(	MaxI = "bcpl_arithmetic_$MaxI"		//  i := MaxI (j, k)
	     8		MaxR = "bcpl_arithmetic_$MaxR"		//  x := MaxR (y, z)
	     9		MinI = "bcpl_arithmetic_$MinI"		//  i := MinI (j, k)
	    10		MinR = "bcpl_arithmetic_$MinR"		//  x := MinR (y, z)
	    11		AbsI = "bcpl_arithmetic_$AbsI"		//  i := AbsI (j)
	    12		AbsR = "bcpl_arithmetic_$AbsR"		//  x := AbsR (y)
	    13		SquareRoot = "bcpl_arithmetic_$SquareRoot"	//  x := SquareRoot (y)
	    14		IpowerI = "bcpl_arithmetic_$IpowerI"		//  i := IpowerI (j, k)
	    15		RpowerI = "bcpl_arithmetic_$RpowerI"		//  x := RpowerI (y, k)
	    16		RpowerR = "bcpl_arithmetic_$RpowerR"		//  x := RpowerR (y, z)
	    17		RandomI = "bcpl_arithmetic_$RandomI"		//  i := RandomI ()
	    18		RandomR = "bcpl_arithmetic_$RandomR"		//  x := RandomR ()
	    19		Logarithm = "bcpl_arithmetic_$Logarithm"	//  x := Logarithm (y)
	    20		Exponential = "bcpl_arithmetic_$Exponential"	//  x := Exponential (y)
	    21	     $)
	    22	external		//  Routines to manipulate strings.  Caller must supply space to hold string results.
	    23	     $(	Packstring = "bcpl_machine_code_$Packstring"	//  Packstring (Unpacked, Space)
	    24		Unpackstring = "bcpl_machine_code_$Unpackstring"	//  Unpackstring (String, Space)
	    25		CopyString = "bcpl_strings_$CopyString"		//  CopyString (String, Space)
	    26		EqualString = "bcpl_strings_$EqualString"	//  if EqualString (StringA, StringB) do ...
	    27		CompareStrings = "bcpl_strings_$CompareStrings"	//  CollatingOrder := CompareStrings (StringA, StringB)
	    28		Concatenate = "bcpl_strings_$Concatenate"	//  s := Concatenate (Space, Maxlen, StrA, StrB, ...)
	    29		Substr = "bcpl_strings_$Substr"		//  s := Substr (Space, String, Index, [Length])
	    30		Subch = "bcpl_machine_code_$Subch"		//  Ch := Subch (String, Index)
	    31		Length = "bcpl_strings_$Length"		//  Len := Length (String)
	    32		SetLength = "bcpl_strings_$SetLength"		//  SetLength (String, Len)
	    33		LengthInWords = "bcpl_strings_$LengthInWords"	//  Len := LengthInWords (String)
	    34		Index = "bcpl_strings_$Index"			//  i := Index (StringA, StringB)
	    35		IndexCh = "bcpl_strings_$IndexCh"		//  i := IndexCh (String, Ch)
	    36		StringToChar = "bcpl_strings_$StringToChar"	//  Char := StringToChar (String)
	    37		CharToString = "bcpl_strings_$CharToString"	//  String := CharToString (Char, Space)
	    38		MakePl1String = "bcpl_strings_$MakePl1String"	//  Pl1String := MakePl1String (BcplString, Space, Len)
	    39		MakeBcplString = "bcpl_strings_$MakeBcplString"	//  s := MakeBcplString (Pl1String, Len, Space)
	    40	     $)
	    41	external		//  Functions to convert values from one representation to another.
	    42	     $(	RtoI = "bcpl_machine_code_$RtoI"		//  i := RtoI (x)
	    43		ItoR = "bcpl_machine_code_$ItoR"		//  x := ItoR (i)
	    44		ConvertStoN = "bcpl_conversions_$ConvertStoN"	//  r := ConvertStoN (String, [Base])
	    45		ConvertNtoS = "bcpl_conversions_$ConvertNtoS"	//  String := ConvertNtoS (i, Space, [Base, [Digits]])
	    46		ConvertFtoS = "bcpl_conversions_$ConvertFtoS"	//  String := ConvertFtoS (x, Space, [Digits])
	    47		RemoveEscapes = "bcpl_conversions_$RemoveEscapes"	//  s := RemoveEscapes (String, Space)
	    48		InsertEscapes = "bcpl_conversions_$InsertEscapes"	//  s := InsertEscapes (String, Space)
	    49		FormDate = "bcpl_conversions_$FormDate"		//  FormDate (Seconds, Space10, GMTsw)
	    50	     $)
	    51	external		//  Miscellaneous routines to extend the power of the language.
	    52	     $(	Longjump = "bcpl_machine_code_$Longjump"	//  Longjump (Label, Psaved)
	    53		Level = "bcpl_machine_code_$Level"		//  Psaved := Level ()
	    54		Bcall = "bcpl_machine_code_$Bcall"		//  r := Bcall (F, n, (list A1, A2, .. An))
	    55		Pl1Call = "bcpl_machine_code_$Pl1Call"		//  Pl1Call (Routine, ArglistAddress)
	    56		Move = "bcpl_machine_code_$Move"		//  Move (ToPtr, FromPtr, WordCount)
	    57		MoveBits = "bcpl_machine_code_$MoveBits"	//  MoveBits (ToPtr, ToBit, FromPtr, FromBit, BitCount)
	    58		ScanChar = "bcpl_machine_code_$ScanChar"	//  Offset := ScanChar (Ptr, Offset, Length, Ch)
	    59		NumbArgs = "bcpl_machine_code_$NumbArgs"	//  Nargs := NumbArgs ()
	    60		NewvecInit = "bcpl_filesys_lib_$NewvecInit"	//  NewvecInit (Space, Size)
	    61		NewvecCleanup = "bcpl_filesys_lib_$NewvecCleanup"	//  NewvecCleanup ()
	    62		Newvec = "bcpl_filesys_lib_$Newvec"		//  v := Newvec (Size - 1)
	    63		Freevec = "bcpl_filesys_lib_$Freevec"		//  Freevec (v)
	    64		Allocate = "bcpl_filesys_lib_$Allocate"		//  v := Allocate (Size)
	    65		Findadr = "bcpl_filesys_lib_$Findadr"		//  Ptr := Findadr (Name)
	    66	     $)
	    67	external		//  BCPL stream I/O routines.
	    68	     $(	Open = "bcpl_stream_io_$Open"			//  Stream := Open (Options, Name, [Length, Delimiter])
	    69		Close = "bcpl_stream_io_$Close"		//  Close (StreamA, StreamB, ...)
	    70		Readch = "bcpl_machine_code_$Readch"		//  Readch (Stream, lv Ch)
	    71		Writech = "bcpl_machine_code_$Writech"		//  Writech (Stream, Ch)
	    72		WriteS = "bcpl_stream_io_$WriteS"		//  WriteS (Stream, String)
	    73		WriteN = "bcpl_stream_io_$WriteN"		//  WriteN (Stream, i)
	    74		Format = "bcpl_stream_io_$Format"		//  Format (Stream, ControlString, A1, A2, ...)
	    75		FormatString = "bcpl_stream_io_$FormatString"	//  FormatString (Space, MaxLen, ControlString, A1, A2, ...)
	    76		Writeout = "bcpl_stream_io_$Writeout"		//  Writeout (Stream)
	    77		Flushinput = "bcpl_stream_io_$Flushinput"	//  Flushinput (Stream)
	    78		ResetStream = "bcpl_stream_io_$ResetStream"	//  ResetStream (Stream, Offset)
	    79		StreamOffset = "bcpl_stream_io_$StreamOffset"	//  Offset := StreamOffset (Stream)
	    80		StreamLength = "bcpl_stream_io_$StreamLength"	//  Length := StreamLength (Stream)
	    81		StreamPointer = "bcpl_stream_io_$StreamPointer"	//  Ptr := StreamPointer (Stream)
	    82	     $)
	    83	external		//  Interface to Multics file system.  Note: Dirname and Entryname are PL/I strings.
	    84	     $(	ExpandPathname = "bcpl_filesys_lib_$ExpandPathname" // s := ExpandPathname (RelativePath, Space)
	    85		JoinPathname = "bcpl_filesys_lib_$JoinPathname"	//  s := JoinPathname (Dirname, Entryname, Space)
	    86		SplitPathname = "bcpl_filesys_lib_$SplitPathname"	//  SplitPathname (AbsolutePath, Dirname, Entryname)
	    87		FindSegment = "bcpl_filesys_lib_$FindSegment"	//  Ptr := FindSegment (Pathname, lv BitCount)
	    88		MakeSegment = "bcpl_filesys_lib_$MakeSegment"	//  Ptr := MakeSegment (Pathname)
	    89		GetPathname = "bcpl_filesys_lib_$GetPathname"	//  s := GetPathname (Pointer, Space)
	    90		MakeTempSeg = "bcpl_filesys_lib_$MakeTempSeg"	//  Ptr := MakeTempSeg (Number, Purpose)
	    91		DeleteTempSeg = "bcpl_filesys_lib_$DeleteTempSeg"	//  DeleteTempSeg (Number, Purpose)
	    92		Terminate = "bcpl_filesys_lib_$Terminate"	//  Terminate (Pointer)
	    93		SetBitCount = "bcpl_filesys_lib_$SetBitCount"	//  SetBitCount (Pointer, BitCount)
	    94		RawClockTime = "bcpl_machine_code_$RawClockTime"	//  RawTime := RawClockTime (Space2)
	    95		TimeToSeconds = "bcpl_machine_code_$TimeToSeconds" // TimeNow := TimeToSeconds (RawTime)
	    96		GetCpuUsage = "bcpl_filesys_lib_$GetCpuUsage"	//  MicrosecondsUsed := GetCpuUsage ()
	    97	     $)
	    98	external		//  Interface to Multics command level features.
	    99	     $(	Pl1NumbArgs = "bcpl_command_lib_$Pl1NumbArgs"	//  Nargs := Pl1NumbArgs ()
	   100		Pl1ArgPtr = "bcpl_command_lib_$Pl1ArgPtr"	//  Ptr := Pl1ArgPtr (ArgIndex)
	   101		Pl1Descriptor = "bcpl_command_lib_$Pl1Descriptor"	//  D := Pl1Descriptor (ArgIndex)
	   102		Pl1ArgString = "bcpl_command_lib_$Pl1ArgString"	//  s := Pl1ArgString (ArgIndex, Space, [MaxLen])
	   103		Pl1ReturnString = "bcpl_command_lib_$Pl1ReturnString" // Pl1ReturnString (String)
	   104		ConcatenateArgs = "bcpl_command_lib_$ConcatenateArgs" // s := ConcatenateArgs (FirstIndex, Space, MaxLen)
	   105		OptionParse = "bcpl_command_lib_$OptionParse"	//  OptionParse (GetNextCommandArg, Nopts, OptionsList,
	   106		GetNextCommandArg = "bcpl_command_lib_$GetNextCommandArg"	//	PointersList, FlagsList, PutName)
	   107		Complain = "bcpl_command_lib_$Complain"		//  Complain (ControlString, [A1, A2, A3])
	   108		BCPLaddr = "bcpl_machine_code_$BCPLaddr"	//  Pointer := BCPLaddr (ITSaddress)
	   109		ITS = "bcpl_machine_code_$ITS"		//  ITSaddress := ITS (Pointer, Space, [BitOffset])
	   110		SetOverflowMask = "bcpl_machine_code_$SetOverflowMask" // SetOverflowMask (true -> Inhibit, Enable)
	   111		SetHandler = "bcpl_command_lib_$SetHandler"	//  SetHandler (Name, Handler, Space16)
	   112		RevertHandler = "bcpl_command_lib_$RevertHandler"	//  RevertHandler (Name)
	   113	     $)
	   114	
	   115	global		//  Library currently reserves all cells below 60 and may expand up to 99.
	   116	     $(	OUTPUT : 32; INPUT : 33
	   117		MONITOR : 34; CONSOLE : 35
	   118		Ch : 36
	   119		ProgramID : 37		//  Must be set to name of program before calling Complain or MakeTempSeg.
	   120		Errcode : 38; IOstatus : 39	//  Used by Complain; set by some library routines.
	   121		ArgIndex : 40		//  Used by GetNextCommandArg.
	   122	     $)
	   123	
	   124	manifest		//  Description of object machine, etc.
	   125	     $(	Machine = 6180
	   126		WordSize = 36
	   127		ByteSize = 9		//  Bits per character in strings.
	   128		CountSize = 18		//  Bits for string length field.
	   129		Left = 18; Right = $8777777
	   130		Endofstreamch = $87777
	   131		Null = $8007777000001	//  Multics uses this for empty pointer.
	   132	     $)
	   133	manifest		//  These are the options referred to in the declaration of Open.
	   134	     $(	Pointer = 1; Console = 2; StreamName = 3	//  Type.  Specify exactly one.
	   135		PathName = 4; EntryName = 5; SearchName = 6
	   136		Read = 16; Write = 32; Append = 48		//  Direction.  Logor into Type.
	   137		MultiSegmentFile = 128			//  May be logor'ed into above.
	   138	     $)
	   139	manifest		//  These are the flags that appear in the list given to OptionParse.
	   140	     $(	OptNegatable = 1				//  Logor any combination of these values.
	   141		OptNegate = 2
	   142		OptGetNext = 4
	   143		OptConvert = 8
	   144		OptCallOut = 16
	   145	     $)
    13		//  Declarations for whole BCPL library, because driver uses things not in bcpl_compiler_head.
    14	get "bcpl_compiler_head"	
	     1	//  Declarations common to the entire BCPL compiler.
	     2	//  Last modified on 07/28/73 at 03:56:32 by R F Mabee.
	     3	//  Installed on 6180 as Version 3.4, R F Mabee.
	     4	//  First installed on 645 as Version 2.7 by R F Mabee.
	     5	
	     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
	     7	//  This file may only be reproduced or modified with explicit written
	     8	//  permission of the author.  Permission is hereby extended to those
	     9	//  persons responsible for operating the Multics system to make such
	    10	//  copies as are normally required to ensure the integrity of the Multics
	    11	//  file system.  Permission is also hereby extended to those persons
	    12	//  responsible for maintaining the Multics program libraries to make such
	    13	//  copies as are normally required for online installations.
	    14	
	    15	external
	    16	     $(	Readch = "bcpl_machine_code_$Readch"		//  Library routines used by the compiler.
	    17		Writech = "bcpl_machine_code_$Writech"
	    18		WriteS = "bcpl_stream_io_$WriteS"
	    19		WriteN = "bcpl_stream_io_$WriteN"
	    20		Format = "bcpl_stream_io_$Format"
	    21		Packstring = "bcpl_machine_code_$Packstring"
	    22		Unpackstring = "bcpl_machine_code_$Unpackstring"
	    23		RemoveEscapes = "bcpl_conversions_$RemoveEscapes"
	    24		EqualString = "bcpl_strings_$EqualString"
	    25		CompareStrings = "bcpl_strings_$CompareStrings"	//  Alphabetic comparison.
	    26		Concatenate = "bcpl_strings_$Concatenate"
	    27		ConvertStoN = "bcpl_conversions_$ConvertStoN"
	    28		ConvertNtoS = "bcpl_conversions_$ConvertNtoS"
	    29		Length = "bcpl_strings_$Length"		//  Number of characters.
	    30		LengthInWords = "bcpl_strings_$LengthInWords"	//  Length of packed string.
	    31		RandomI = "bcpl_arithmetic_$RandomI"
	    32	
	    33		Newvec = "bcpl_utility$Newvec"		//  Utility routines used throughout the compiler.
	    34		Freevec = "bcpl_utility$Freevec"
	    35		List1 = "bcpl_utility$List1"
	    36		List2 = "bcpl_utility$List2"
	    37		List3 = "bcpl_utility$List3"
	    38		List4 = "bcpl_utility$List4"
	    39		List5 = "bcpl_utility$List5"
	    40		List6 = "bcpl_utility$List6"
	    41		StoreString = "bcpl_utility$StoreString"
	    42		PushInput = "bcpl_utility$PushInput"
	    43		PopInput = "bcpl_utility$PopInput"
	    44		MakeTimeString = "bcpl_utility$MakeTimeString"
	    45		Nextparam = "bcpl_utility$Nextparam"
	    46		FormCharconst = "bcpl_utility$FormCharconst"
	    47		FormStringconst = "bcpl_utility$FormStringconst"
	    48	
	    49		CaeReport = "bcpl_report$CaeReport"
	    50		Transreport = "bcpl_report$Transreport"
	    51		CGreport = "bcpl_report$CGreport"
	    52	
	    53		Nextsymb = "bcpl_lex0$Nextsymb"
	    54	
	    55		SymbolName = "bcpl_plist$SymbolName"
	    56		FindPrintName = "bcpl_plist$FindPrintName"
	    57		EnterIntoCrossreference = "bcpl_plist$EnterIntoCrossreference"
	    58	
	    59		GetVersion = "bcpl_version$GetVersion"		//  Routines used only by the driver.
	    60		UtilitiesInit = "bcpl_utility$UtilitiesInit"
	    61		Cleanup = "bcpl_utility$Cleanup"
	    62		GetStream = "bcpl_utility$GetStream"
	    63	
	    64		CAE = "bcpl_cae0$CAE"
	    65		LexInit = "bcpl_lex0$LexInit"
	    66	
	    67		Pname = "bcpl_plist$Pname"
	    68		Plist = "bcpl_plist$Plist"
	    69	
	    70		Trans = "bcpl_trans0$Trans"
	    71		CgInit = "bcpl_cg0$CgInit"
	    72		BuildObject = "bcpl_cg0$BuildObject"
	    73		WriteObjectListing = "bcpl_cg0$WriteObjectListing"
	    74	     $)
	    75	
	    76	global		//  Globals are reserved in blocks as follows:
	    77	     $(	//    0 -  31	system
	    78		//   32 -  99	library
	    79		//  100 - 149	options and other common cells
	    80		//  150 - 159	metering cells
	    81		//  160 - 169	bcpl_utility
	    82		//  170 - 199	to be assigned
	    83		//  200 - 229	lexical phase
	    84		//  230 - 249	syntax analyzer
	    85		//  250 - 299	translator
	    86		//  300 - 399	code generator
	    87	
	    88			//  Cells used for communication with the library.
	    89		OUTPUT		: 32
	    90		INPUT		: 33
	    91		MONITOR		: 34
	    92		Ch		: 36
	    93	
	    94			//  Options for this compilation.
	    95		Listing		: 100
	    96		UpperCase		: 101
	    97		PPrep		: 102
	    98		Crep		: 103
	    99		Symbols		: 104
	   100		LineMap		: 105
	   101		Optimize		: 106
	   102		Machine		: 107
	   103		Xref		: 108
	   104		OcodeSw		: 109
	   105		HaveListingFile	: 110
	   106		QuietSw		: 111
	   107	
	   108			//  Other information about this compilation.
	   109		CompilerVersionString : 120
	   110		CompilerVersionNumber : 121
	   111		CompilerDTMString	: 122
	   112		CompilerDTM	: 123
	   113		TimeNowString	: 124
	   114		TimeNow		: 125
	   115		OptionString	: 126
	   116		FileNames		: 127
	   117		FilesInfo		: 128
	   118		FileCount		: 129
	   119		ProgramName	: 130
	   120		UserID		: 131
	   121	
	   122			//  Working variables needing global scope.
	   123		LineCount		: 140
	   124		Errorsw		: 141
	   125		NAMECHAIN		: 142
	   126		Symb		: 143
	   127		DictionaryEntry	: 144
	   128		Column		: 145
	   129	     $)
	   130	manifest
	   131	     $(	GlobalTemp = 199  $)	//  Number of cell available for local, temporary use.
	   132	
	   133	manifest
	   134	     $(	Left = 18; Right = $8777777
	   135		Endofstreamch = $87777
	   136		Even = $87777777777776
	   137		Vmax = 511
	   138		LineMask = $817777; FileShift = 13	//  Breakdown of line count.
	   139		UnexpectedCase = 99		//  Error code for use throughout compiler.
	   140	     $)
    14	//  Declarations for compiler routines and global cells.
    15	get "bcpl_metering_head"	
	     1	//  Variables and constants for use in measuring performance of the various parts of the BCPL compiler.
	     2	//  Last modified on 08/14/73 at 22:09:47 by R F Mabee.
	     3	//  First installed with Version 3.4 by R F Mabee.
	     4	//  Written in April 1973 to obtain detailed info about compiler performance.
	     5	
	     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
	     7	//  This file may only be reproduced or modified with explicit written
	     8	//  permission of the author.  Permission is hereby extended to those
	     9	//  persons responsible for operating the Multics system to make such
	    10	//  copies as are normally required to ensure the integrity of the Multics
	    11	//  file system.  Permission is also hereby extended to those persons
	    12	//  responsible for maintaining the Multics program libraries to make such
	    13	//  copies as are normally required for online installations.
	    14	
	    15	external
	    16	     $(	SaveOldUsage = "bcpl_utility$SaveOldUsage"
	    17		RecordUsage = "bcpl_utility$RecordUsage"
	    18		PrintMeters = "bcpl_meter_print$PrintMeters"
	    19	     $)
	    20	
	    21	global
	    22	     $(	Metering		: 150
	    23		MeterData		: 151
	    24		DictionaryDepth	: 152
	    25		TotalLines	: 153
	    26		TotalWords	: 154
	    27	     $)
	    28	
	    29	manifest
	    30	     $(	DriverOverhead_Meter = 0
	    31		SyntaxAnalysis_Meter = 3
	    32		Nextsymb_Meter	= 6
	    33		ProcessGet_Meter	= 9
	    34		SymbolAdd_Meter	= 12
	    35		SymbolSearch_Meter	= 15
	    36		RchWithoutListing_Meter = 18
	    37		RchWithListing_Meter	= 21
	    38		PrintXref_Meter	= 24
	    39		MakeObject_Meter	= 27
	    40		CompileSwitchWithoutOptimizing_Meter = 30
	    41		CompileSwitchWithOptimizing_Meter = 33
	    42		SemanticTranslation_Meter = 36
	    43		CodeGeneration_Meter	= 39
	    44		CompileExpression_Meter = 42
	    45		MeteringOverhead_Meter = 45
	    46		TotalLines_Count	= 48
	    47		TextWords_Count	= 49
	    48		DictionaryDepth_Count = 50
	    49		Meters_Length	= 51
	    50	     $)
    15	//  Declarations for compiler metering tools.
    16	
    17	external
    18	     $(	BcplCommand = "bcpl_driver$bcpl"
    19		BcplMeters = "bcpl_driver$meters"
    20	
    21		Wdir = "get_wdir_"		//  call get_wdir_ (return dir name)
    22		GetGroupId = "get_group_id_"	//  call get_group_id_ (return userid)
    23		LevelGet = "cu_$level_get"	//  call cu_$level_get (return validation ring number)
    24		Initiate = "hcs_$initiate"	//  call hcs_$initiate (dir name, ent name, ref name, 0, 1, return ptr, return code)
    25		MakeSeg = "hcs_$make_seg"	//  call hcs_$make_seg (dir name, ent name, ref name, mode, return ptr, return code)
    26		AclAddOne = "hcs_$acl_add1"	//  call hcs_$acl_add1 (dir name, ent name, userid, mode, rings, return code)
    27		AclDelete = "hcs_$acl_delete"	//  call hcs_$acl_delete (dir name, entry name, acl ptr, count, return code)
    28		UnsnapLinks = "term_$nomakeunknown" // call term_$nomakeunknown (pointer, return code)
    29	
    30		SymbolTable = "bound_bcpl_$symbol_table"	//  Compiler's own symbol table contains time compiler updated.
    31	
    32		BadOpt = "error_table_$badopt"
    33		TranslationFailed = "error_table_$translation_failed"
    34	     $)
    35	static
    36	     $(	StaticMeterData = 0
    37		StaticMeteringSw = false
    38	
    39		RE = 12
    40		RWA = 11
    41		Zero = 0
    42		One = 1
    43	     $)
    44	manifest
    45	     $(	Empty = $8707070  $)	//  Used to indicate undefined state of truth value.
    46	
    47	
    48	let BcplCommand () be main
    49	     $(	Errcode, ProgramID := 0, "bcpl"
    50	  Clp:	MONITOR := Open (Console + Write)
    51		OUTPUT := MONITOR
    52		let StartingTime = GetCpuUsage ()
    53	
    54		if Pl1NumbArgs () = 0 do
    55			Complain ("Pathname of source file is required as first argument.  Options:*n^a*n^a",
    56				"General:  list  source  xref  alist  check  uppercase  symbols  map  optimize  quiet",
    57				"Compiler debug:  time  print_meters  tree  crep  pprep  645  ocode")
    58	
    59	//  Process options.
    60		let Source, Alist = Empty, Empty
    61		and List, Time, DumpTree, MetersPrintSw, Check = false, false, false, false, false
    62		and Followon = true			//  This is the 6180 version.
    63		Xref, LineMap, Optimize := Empty, Empty, Empty
    64		Crep, PPrep, OcodeSw, QuietSw, Symbols, UpperCase := false, false, false, false, false, false
    65	
    66		let Names = list "list", "xref", "source", "alist", "tree",
    67				"check", "uppercase", "symbols", "map", "optimize",
    68				"crep", "pprep", "time", "quiet", "print_meters",
    69				"645", "ocode"
    70		and Pointers = list lv List, lv Xref, lv Source, lv Alist, lv DumpTree,
    71				lv Check, lv UpperCase, lv Symbols, lv LineMap, lv Optimize,
    72				lv Crep, lv PPrep, lv Time, lv QuietSw, lv MetersPrintSw,
    73				lv Followon, lv OcodeSw
    74		and Flags = table OptNegatable, OptNegatable, OptNegatable, OptNegatable, OptNegatable,
    75				OptNegatable, OptNegatable, OptNegatable, OptNegatable, OptNegatable,
    76				OptNegatable, OptNegatable, OptNegatable, OptNegatable, OptNegatable,
    77				OptNegatable | OptNegate, OptNegatable
    78		ArgIndex := 2		//  Used by GetNextCommandArg.
    79		OptionParse (GetNextCommandArg, 17, Names, Pointers, Flags, 0)
    80				//  Apply complicated defaults.
    81		if Xref = Empty do Xref := List
    82		if Source = Empty do Source := List | Xref
    83		if Alist = Empty do Alist := List
    84		Check := Check | Crep
    85		if Optimize = Empty do Optimize := Source & not (Check | Symbols)	//  Guess whether this compilation is final version.
    86		if LineMap = Empty do LineMap := not (Optimize | Check)
    87		LineMap := LineMap | Symbols
    88	
    89		HaveListingFile := (Source | Xref | Alist | DumpTree | OcodeSw | PPrep) & not Crep
    90		Machine := Followon -> 6180, 645
    91		Metering := MetersPrintSw logor StaticMeteringSw
    92		let TimeSummary, TimeTemp = Time | HaveListingFile, nil
    93				//  Make list of options used.
    94		OptionString := vec 128
    95		SetLength (OptionString, 0)
    96		if Source do AddOption ("source")
    97		if Xref do AddOption ("xref")
    98		if DumpTree do AddOption ("tree")
    99		if Alist do AddOption ("alist")
   100		if Check do AddOption ("check")
   101		if UpperCase do AddOption ("uppercase")
   102		if Symbols do AddOption ("symbols")
   103		if LineMap do AddOption ("map")
   104		if Optimize do AddOption ("optimize")
   105		if PPrep do AddOption ("pprep")
   106		if OcodeSw do AddOption ("ocode")
   107		AddOption (Followon -> "6180", "645")
   108	
   109	//  Process file name argument.
   110		let Arg = vec 100
   111		Pl1ArgString (1, Arg, 100 * 4)
   112		let Len = Length (Arg)
   113		if Len > 5 do		//  If the ".bcpl" suffix might already be present.
   114		     $(	let w = vec 5
   115			Substr (w, Arg, Len - 4, 5)
   116			if EqualString (w, ".bcpl") do SetLength (Arg, Len - 5)
   117		     $)
   118		let Path, Dir, Ent = vec 50, vec 50, vec 10
   119		ExpandPathname (Arg, Path)
   120		SplitPathname (Path, Dir, Ent)
   121		unless Errcode = 0 do Complain (Arg)
   122		ProgramName := vec 8
   123		MakeBcplString (Ent, 32, ProgramName)
   124	
   125	//  Set up some more environment things.
   126			//  Temporary kludge to check for stack segment too full to allow for Newvec space.
   127		if (ProgramName & Right) ge 45000 do Complain ("Not enough room left in stack to perform compilation. Type 'release'.")
   128	
   129		let v = vec 10000
   130		UtilitiesInit (v, 10000, StartingTime)
   131		let v = vec 20
   132		SetHandler ("cleanup", Cleanup, v)
   133		SetOverflowMask (true)	//  Turn off overflow faults.
   134	
   135		Errorsw := false
   136		NAMECHAIN := 0
   137	
   138		GetVersion ()		//  Compiler version info is isolated in small easily changed program.
   139	
   140			//  Get date/time compiler was updated (bound) from symbol table of bound segment.
   141		CompilerDTM, TimeNow := vec 2, vec 2
   142		CompilerDTM!0, CompilerDTM!1 := SymbolTable!6, SymbolTable!7
   143		RawClockTime (TimeNow)
   144		CompilerDTMString, TimeNowString := MakeTimeString (CompilerDTM), MakeTimeString (TimeNow)
   145	
   146		UserID := vec 8
   147		let v = vec 8
   148		call GetGroupId (v char 32)
   149		MakeBcplString (v, 32, UserID)
   150	
   151	//  Open input and output files.
   152		test Crep
   153		then $(	INPUT := Open (Console + Read)
   154			FilesInfo!0, FilesInfo!1, FilesInfo!2, FilesInfo!3 := "console", 0, 0, 0
   155			FileNames!0 := "console"
   156			LineCount := FileCount lshift FileShift
   157			WriteS (MONITOR, "Type program:*n")
   158		     $)
   159		or   $(	GetStream (Arg, 0)		//  0 indicates no previous input stream for searching.
   160			if HaveListingFile do
   161			     $(	let w = vec 50
   162				OUTPUT := Open (EntryName + Write + MultiSegmentFile, Concatenate (w, 32, ProgramName, ".list"))
   163				unless Errcode = 0 do Complain (w)
   164				Format (OUTPUT, "Compilation listing of file ^s.*n", FilesInfo!0)
   165				Format (OUTPUT, "Compilation performed for ^s at ^s.*n", UserID, TimeNowString)
   166				Format (OUTPUT, "Compiled by ^s.  Compiler updated at ^s.*n",
   167									CompilerVersionString, CompilerDTMString)
   168				Format (OUTPUT, "Options applied:  ^s.*n*n", OptionString)
   169			     $)
   170			WriteS (MONITOR, "BCPL*n")
   171		     $)
   172	
   173	//  Read source program and construct syntax tree.
   174		let UsageTemp = nil
   175		if Metering do UsageTemp := SaveOldUsage ()
   176		if TimeSummary do TimeTemp := GetCpuUsage ()
   177		Listing := Source
   178	
   179		LexInit ()
   180		let A = CAE ()
   181		if Crep & A = 0 & not Errorsw finish	//  Escape from type-in mode.
   182		if Metering do
   183		     $(	MeterData!TotalLines_Count := TotalLines
   184			RecordUsage (SyntaxAnalysis_Meter, UsageTemp)
   185		     $)
   186		Close (INPUT)
   187		INPUT := 0
   188		if TimeSummary do Wrtime ("CAE", GetCpuUsage () - TimeTemp, "source lines", TotalLines, Time)
   189	
   190	//  Put out optional cross reference and tree listings.
   191		if Xref do
   192		     $(	Writech (OUTPUT, Crep -> '*n', '*f')
   193			WriteS ("cross reference table*n*n")
   194			Pname (NAMECHAIN)
   195		     $)
   196		if DumpTree do
   197		     $(	Writech (OUTPUT, Crep -> '*n', '*f')
   198			WriteS ("abstract syntax tree*n*n")
   199			Plist (A, 0)
   200		     $)
   201	
   202	//  Perform semantic translation on syntax tree, generating machine code and listing.
   203		unless Errorsw do
   204		     $(	Listing := Alist & Check		//  Generate only partial listing during Trans.
   205			if Metering do UsageTemp := SaveOldUsage ()
   206			if TimeSummary do TimeTemp := GetCpuUsage ()
   207			CgInit ()
   208			Trans (A)
   209			if Metering do
   210			     $(	MeterData!TextWords_Count := TotalWords
   211				RecordUsage (SemanticTranslation_Meter, UsageTemp)
   212			     $)
   213			if TimeSummary do Wrtime ("Trans", GetCpuUsage () - TimeTemp, "object words", TotalWords, Time)
   214			if Alist & not Check do WriteObjectListing ()	//  Generate full listing in separate pass.
   215		     $)
   216		unless OUTPUT = MONITOR do
   217		     $(	Close (OUTPUT)
   218			OUTPUT := MONITOR
   219		     $)
   220	
   221	//  Form object segment out of internally-stored machine code program.
   222		unless Check | Errorsw do
   223		     $(	let x, y = nil, nil
   224			let v = vec 2
   225			if Metering do UsageTemp := SaveOldUsage ()
   226			call Wdir (Dir char 168)
   227			call Initiate (Dir char 168, Ent char 32, "" char 0, lv Zero, lv One, v pointer, lv Errcode)
   228			let P = BCPLaddr (v)
   229			unless Errcode = 0 do
   230				test P = Null
   231				then $(	call MakeSeg (Dir char 168, Ent char 32, "" char 0, lv RE, v pointer, lv Errcode)
   232					P := BCPLaddr (v)
   233					if P = Null do Complain ("Unable to create object segment ^a.", ProgramName)
   234				     $)
   235				or call UnsnapLinks (ITS (P, v), lv Errcode)	// Segment in use, unlink it.
   236			let AclArray, Rings = vec 8, vec 3
   237			MakePl1String (UserID, AclArray, 32)
   238			AclArray!8 := 0
   239			call LevelGet (lv x)
   240			Rings!0, Rings!1, Rings!2 := x, x, x
   241			call AclAddOne (Dir char 168, Ent char 32, AclArray char 32, lv RWA, Rings, lv Errcode)
   242			unless Errcode = 0 do Complain ("Unable to change ACL of object segment ^a.", ProgramName)
   243			x := BuildObject (P)
   244			SetBitCount (P, x)
   245			call AclDelete (Dir char 168, Ent char 32, ITS (AclArray, v) pointer, lv One, lv Errcode)
   246			Terminate (P)
   247			if Metering do RecordUsage (MakeObject_Meter, UsageTemp)
   248		     $)
   249	
   250	//  Print or save meter values as required.
   251		if Metering do
   252		     $(	RecordUsage (DriverOverhead_Meter, 0)
   253			let Elapsed, Total, Calls = GetCpuUsage () - StartingTime, 0, 0
   254			for i = 0 to MeteringOverhead_Meter - 1 by 3 do
   255				Total, Calls := Total + MeterData!i, Calls + MeterData!(i + 1)
   256			MeterData!MeteringOverhead_Meter := Elapsed - Total
   257			MeterData!(MeteringOverhead_Meter + 1) := Calls
   258			for i = 0 to MeteringOverhead_Meter by 3 unless MeterData!i = 0 do MeterData!(i + 2) := Total
   259			MeterData!DictionaryDepth_Count := DictionaryDepth
   260			if StaticMeteringSw do for i = 0 to Meters_Length do StaticMeterData!i := StaticMeterData!i + MeterData!i
   261			if MetersPrintSw do PrintMeters (MeterData)
   262		     $)
   263	
   264	//  Almost done.  Clean up and report success/failure in form suitable for programmed interpretation.
   265		Cleanup ()
   266		RevertHandler ("cleanup")
   267		Close (MONITOR)
   268		if Crep goto Clp		//  "C_ompile and _r_e_peat" - jump back to beginning of driver.
   269	
   270		if Errorsw do
   271		     $(	Errcode := rv TranslationFailed
   272			Complain (Arg)
   273		     $)
   274	     $)
   275	
   276	and AddOption (s) be		//  Append option name to list in OptionString.
   277		test Length (OptionString) = 0
   278		then CopyString (s, OptionString)
   279		or Concatenate (OptionString, 511, OptionString, "  ", s)
   280	and Wrtime (ID, Usage, Thing, Nthings, Time) be	//  Report time used, etc. in listing and console streams.
   281	     $(	let Rate = Nthings * 1000 * 1000 / Usage
   282		Usage := Usage / 100 / 1000
   283		let a, b = Usage / 10, Usage rem 10
   284		if Time do Format (MONITOR, "^s time ^d.^d, ^d ^s per second.*n", ID, a, b, Rate, Thing)
   285		if HaveListingFile do Format (OUTPUT, "*n*n*n^s time ^d.^d, ^d ^s per second.*n", ID, a, b, Rate, Thing)
   286	     $)
   287	
   288	let BcplMeters () be main		//  Entry to control static metering of compiler.
   289	     $(	Errcode, ProgramID := 0, "bcpl$meters"
   290		if Pl1NumbArgs () = 0 do Complain ("Options are:  print  reset  meter  no_meter")
   291	
   292		let Print, Reset, Start = false, false, Empty
   293		let Names = list "print", "reset", "meter"
   294		and Pointers = list lv Print, lv Reset, lv Start
   295		and Flags = list OptNegatable, OptNegatable, OptNegatable
   296		ArgIndex := 1
   297		OptionParse (GetNextCommandArg, 3, Names, Pointers, Flags, 0)
   298	
   299		if StaticMeterData = 0 do
   300		     $(	let x = Allocate (Meters_Length + 1)
   301			for i = 0 to Meters_Length do x!i := 0
   302			StaticMeterData := x
   303		     $)
   304		unless Start = Empty do StaticMeteringSw := Start
   305		if Print do
   306		     $(	if StaticMeterData!(MeteringOverhead_Meter + 1) = 0 do Complain ("No metering data available.")
   307			OUTPUT := Open (Console + Write)
   308			PrintMeters (StaticMeterData)
   309			Close (OUTPUT)
   310		     $)
   311		if Reset then for i = 0 to Meters_Length do StaticMeterData!i := 0
   312	     $)



CAE time 6.0, 106 source lines per second.
cross reference table

A			bcpl_driver:  180, 181, 199, 208

a			bcpl_driver:  283, 284, 285

AbsI			head:  11

AbsR			head:  12

AclAddOne			bcpl_driver:  26, 241

AclArray			bcpl_driver:  236, 237, 238, 241, 245

AclDelete			bcpl_driver:  27, 245

AddOption			bcpl_driver:  96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 276

Alist			bcpl_driver:  60, 70, 83, 83, 89, 99, 204, 214

Allocate			head:  64, bcpl_driver:  300

Append			head:  136

Arg			bcpl_driver:  110, 111, 112, 115, 116, 119, 121, 159, 272

ArgIndex			head:  121, bcpl_driver:  78, 296

b			bcpl_driver:  283, 284, 285

BadOpt			bcpl_driver:  32

Bcall			head:  54

BCPLaddr			head:  108, bcpl_driver:  228, 232

BcplCommand		bcpl_driver:  18, 48

BcplMeters		bcpl_driver:  19, 288

BuildObject		bcpl_compiler_head:  72, bcpl_driver:  243

ByteSize			head:  127

CAE			bcpl_compiler_head:  64, bcpl_driver:  180

CaeReport			bcpl_compiler_head:  49

Calls			bcpl_driver:  253, 255, 255, 257

CgInit			bcpl_compiler_head:  71, bcpl_driver:  207

CGreport			bcpl_compiler_head:  51

Ch			head:  118, bcpl_compiler_head:  92

CharToString		head:  37

Check			bcpl_driver:  61, 71, 84, 84, 85, 86, 100, 204, 214, 222

Cleanup			bcpl_compiler_head:  61, bcpl_driver:  132, 265

Close			head:  69, bcpl_driver:  186, 217, 267, 309

Clp			bcpl_driver:  50, 268

CodeGeneration_Meter	bcpl_metering_head:  43

Column			bcpl_compiler_head:  128

CompareStrings		head:  27, bcpl_compiler_head:  25

CompileExpression_Meter	bcpl_metering_head:  44

CompilerDTM		bcpl_compiler_head:  112, bcpl_driver:  141, 142, 142, 144

CompilerDTMString		bcpl_compiler_head:  111, bcpl_driver:  144, 167

CompilerVersionNumber	bcpl_compiler_head:  110

CompilerVersionString	bcpl_compiler_head:  109, bcpl_driver:  167

CompileSwitchWithOptimizing_Meter	bcpl_metering_head:  41

CompileSwitchWithoutOptimizing_Meter	bcpl_metering_head:  40

Complain			head:  107, bcpl_driver:  55, 121, 127, 163, 233, 242, 272, 290, 306

Concatenate		head:  28, bcpl_compiler_head:  26, bcpl_driver:  162, 279

ConcatenateArgs		head:  104

CONSOLE			head:  117

Console			head:  134, bcpl_driver:  50, 153, 307

ConvertFtoS		head:  46

ConvertNtoS		head:  45, bcpl_compiler_head:  28

ConvertStoN		head:  44, bcpl_compiler_head:  27

CopyString		head:  25, bcpl_driver:  278

CountSize			head:  128

Crep			bcpl_compiler_head:  98, bcpl_driver:  64, 72, 84, 89, 152, 181, 192, 197, 268

DeleteTempSeg		head:  91

DictionaryDepth		bcpl_metering_head:  24, bcpl_driver:  259

DictionaryDepth_Count	bcpl_metering_head:  48, bcpl_driver:  259

DictionaryEntry		bcpl_compiler_head:  127

Dir			bcpl_driver:  118, 120, 226, 227, 231, 241, 245

DriverOverhead_Meter	bcpl_metering_head:  30, bcpl_driver:  252

DumpTree			bcpl_driver:  61, 70, 89, 98, 196

Elapsed			bcpl_driver:  253, 256

Empty			bcpl_driver:  45, 60, 60, 63, 63, 63, 81, 82, 83, 85, 86, 292, 304

Endofstreamch		head:  130, bcpl_compiler_head:  135

Ent			bcpl_driver:  118, 120, 123, 227, 231, 241, 245

EnterIntoCrossreference	bcpl_compiler_head:  57

EntryName			head:  135, bcpl_driver:  162

EqualString		head:  26, bcpl_compiler_head:  24, bcpl_driver:  116

Errcode			head:  120, bcpl_driver:  49, 121, 163, 227, 229, 231, 235, 241, 242, 245, 271, 289

Errorsw			bcpl_compiler_head:  124, bcpl_driver:  135, 181, 203, 222, 270

Even			bcpl_compiler_head:  136

ExpandPathname		head:  84, bcpl_driver:  119

Exponential		head:  20

FileCount			bcpl_compiler_head:  118, bcpl_driver:  156

FileNames			bcpl_compiler_head:  116, bcpl_driver:  155

FileShift			bcpl_compiler_head:  138, bcpl_driver:  156

FilesInfo			bcpl_compiler_head:  117, bcpl_driver:  154, 154, 154, 154, 164

Findadr			head:  65

FindPrintName		bcpl_compiler_head:  56

FindSegment		head:  87

Flags			bcpl_driver:  74, 79, 295, 297

Flushinput		head:  77

Followon			bcpl_driver:  62, 73, 90, 107

Format			head:  74, bcpl_compiler_head:  20, bcpl_driver:  164, 165, 166, 168, 284, 285

FormatString		head:  75

FormCharconst		bcpl_compiler_head:  46

FormDate			head:  49

FormStringconst		bcpl_compiler_head:  47

Freevec			head:  63, bcpl_compiler_head:  34

GetCpuUsage		head:  96, bcpl_driver:  52, 176, 188, 206, 213, 253

GetGroupId		bcpl_driver:  22, 148

GetNextCommandArg		head:  106, bcpl_driver:  79, 297

GetPathname		head:  89

GetStream			bcpl_compiler_head:  62, bcpl_driver:  159

GetVersion		bcpl_compiler_head:  59, bcpl_driver:  138

GlobalTemp		bcpl_compiler_head:  131

HaveListingFile		bcpl_compiler_head:  105, bcpl_driver:  89, 92, 160, 285

i			bcpl_driver:  254, 255, 255, 258, 258, 258, 260, 260, 260, 260, 301, 301, 311, 311

ID			bcpl_driver:  280, 284, 285

Index			head:  34

IndexCh			head:  35

Initiate			bcpl_driver:  24, 227

INPUT			head:  116, bcpl_compiler_head:  90, bcpl_driver:  153, 186, 187

InsertEscapes		head:  48

IOstatus			head:  120

IpowerI			head:  14

ItoR			head:  43

ITS			head:  109, bcpl_driver:  235, 245

JoinPathname		head:  85

Left			head:  129, bcpl_compiler_head:  134

Len			bcpl_driver:  112, 113, 115, 116

Length			head:  31, bcpl_compiler_head:  29, bcpl_driver:  112, 277

LengthInWords		head:  33, bcpl_compiler_head:  30

Level			head:  53

LevelGet			bcpl_driver:  23, 239

LexInit			bcpl_compiler_head:  65, bcpl_driver:  179

LineCount			bcpl_compiler_head:  123, bcpl_driver:  156

LineMap			bcpl_compiler_head:  100, bcpl_driver:  63, 71, 86, 86, 87, 87, 103

LineMask			bcpl_compiler_head:  138

List			bcpl_driver:  61, 70, 81, 82, 83

List1			bcpl_compiler_head:  35

List2			bcpl_compiler_head:  36

List3			bcpl_compiler_head:  37

List4			bcpl_compiler_head:  38

List5			bcpl_compiler_head:  39

List6			bcpl_compiler_head:  40

Listing			bcpl_compiler_head:  95, bcpl_driver:  177, 204

Logarithm			head:  19

Longjump			head:  52

Machine			head:  125, bcpl_compiler_head:  102, bcpl_driver:  90

MakeBcplString		head:  39, bcpl_driver:  123, 149

MakeObject_Meter		bcpl_metering_head:  39, bcpl_driver:  247

MakePl1String		head:  38, bcpl_driver:  237

MakeSeg			bcpl_driver:  25, 231

MakeSegment		head:  88

MakeTempSeg		head:  90

MakeTimeString		bcpl_compiler_head:  44, bcpl_driver:  144, 144

MaxI			head:  7

MaxR			head:  8

MeterData			bcpl_metering_head:  23, bcpl_driver:  183, 210, 255, 255, 256, 257, 258, 258, 259, 260, 
			261

Metering			bcpl_metering_head:  22, bcpl_driver:  91, 175, 182, 205, 209, 225, 247, 251

MeteringOverhead_Meter	bcpl_metering_head:  45, bcpl_driver:  254, 256, 257, 258, 306

MetersPrintSw		bcpl_driver:  61, 72, 91, 261

Meters_Length		bcpl_metering_head:  49, bcpl_driver:  260, 300, 301, 311

MinI			head:  9

MinR			head:  10

MONITOR			head:  117, bcpl_compiler_head:  91, bcpl_driver:  50, 51, 157, 170, 216, 218, 267, 284

Move			head:  56

MoveBits			head:  57

MultiSegmentFile		head:  137, bcpl_driver:  162

NAMECHAIN			bcpl_compiler_head:  125, bcpl_driver:  136, 194

Names			bcpl_driver:  66, 79, 293, 297

Newvec			head:  62, bcpl_compiler_head:  33

NewvecCleanup		head:  61

NewvecInit		head:  60

Nextparam			bcpl_compiler_head:  45

Nextsymb			bcpl_compiler_head:  53

Nextsymb_Meter		bcpl_metering_head:  32

Nthings			bcpl_driver:  280, 281

Null			head:  131, bcpl_driver:  230, 233

NumbArgs			head:  59

OcodeSw			bcpl_compiler_head:  104, bcpl_driver:  64, 73, 89, 106

One			bcpl_driver:  42, 227, 245

Open			head:  68, bcpl_driver:  50, 153, 162, 307

OptCallOut		head:  144

OptConvert		head:  143

OptGetNext		head:  142

Optimize			bcpl_compiler_head:  101, bcpl_driver:  63, 71, 85, 85, 86, 104

OptionParse		head:  105, bcpl_driver:  79, 297

OptionString		bcpl_compiler_head:  115, bcpl_driver:  94, 95, 168, 277, 278, 279, 279

OptNegatable		head:  140, bcpl_driver:  74, 74, 74, 74, 74, 75, 75, 75, 75, 75, 76, 76, 76, 76, 76, 77, 
			77, 295, 295, 295

OptNegate			head:  141, bcpl_driver:  77

OUTPUT			head:  116, bcpl_compiler_head:  89, bcpl_driver:  51, 162, 164, 165, 166, 168, 192, 197, 
			216, 217, 218, 285, 307, 309

P			bcpl_driver:  228, 230, 232, 233, 235, 243, 244, 246

Packstring		head:  23, bcpl_compiler_head:  21

Path			bcpl_driver:  118, 119, 120

PathName			head:  135

Pl1ArgPtr			head:  100

Pl1ArgString		head:  102, bcpl_driver:  111

Pl1Call			head:  55

Pl1Descriptor		head:  101

Pl1NumbArgs		head:  99, bcpl_driver:  54, 290

Pl1ReturnString		head:  103

Plist			bcpl_compiler_head:  68, bcpl_driver:  199

Pname			bcpl_compiler_head:  67, bcpl_driver:  194

Pointer			head:  134

Pointers			bcpl_driver:  70, 79, 294, 297

PopInput			bcpl_compiler_head:  43

PPrep			bcpl_compiler_head:  97, bcpl_driver:  64, 72, 89, 105

Print			bcpl_driver:  292, 294, 305

PrintMeters		bcpl_metering_head:  18, bcpl_driver:  261, 308

PrintXref_Meter		bcpl_metering_head:  38

ProcessGet_Meter		bcpl_metering_head:  33

ProgramID			head:  119, bcpl_driver:  49, 289

ProgramName		bcpl_compiler_head:  119, bcpl_driver:  122, 123, 127, 162, 233, 242

PushInput			bcpl_compiler_head:  42

QuietSw			bcpl_compiler_head:  106, bcpl_driver:  64, 72

RandomI			head:  17, bcpl_compiler_head:  31

RandomR			head:  18

Rate			bcpl_driver:  281, 284, 285

RawClockTime		head:  94, bcpl_driver:  143

RchWithListing_Meter	bcpl_metering_head:  37

RchWithoutListing_Meter	bcpl_metering_head:  36

RE			bcpl_driver:  39, 231

Read			head:  136, bcpl_driver:  153

Readch			head:  70, bcpl_compiler_head:  16

RecordUsage		bcpl_metering_head:  17, bcpl_driver:  184, 211, 247, 252

RemoveEscapes		head:  47, bcpl_compiler_head:  23

Reset			bcpl_driver:  292, 294, 311

ResetStream		head:  78

RevertHandler		head:  112, bcpl_driver:  266

Right			head:  129, bcpl_compiler_head:  134, bcpl_driver:  127

Rings			bcpl_driver:  236, 240, 240, 240, 241

RpowerI			head:  15

RpowerR			head:  16

RtoI			head:  42

RWA			bcpl_driver:  40, 241

s			bcpl_driver:  276, 278, 279

SaveOldUsage		bcpl_metering_head:  16, bcpl_driver:  175, 205, 225

ScanChar			head:  58

SearchName		head:  135

SemanticTranslation_Meter	bcpl_metering_head:  42, bcpl_driver:  211

SetBitCount		head:  93, bcpl_driver:  244

SetHandler		head:  111, bcpl_driver:  132

SetLength			head:  32, bcpl_driver:  95, 116

SetOverflowMask		head:  110, bcpl_driver:  133

Source			bcpl_driver:  60, 70, 82, 82, 85, 89, 96, 177

SplitPathname		head:  86, bcpl_driver:  120

SquareRoot		head:  13

Start			bcpl_driver:  292, 294, 304, 304

StartingTime		bcpl_driver:  52, 130, 253

StaticMeterData		bcpl_driver:  36, 260, 260, 299, 302, 306, 308, 311

StaticMeteringSw		bcpl_driver:  37, 91, 260, 304

StoreString		bcpl_compiler_head:  41

StreamLength		head:  80

StreamName		head:  134

StreamOffset		head:  79

StreamPointer		head:  81

StringToChar		head:  36

Subch			head:  30

Substr			head:  29, bcpl_driver:  115

Symb			bcpl_compiler_head:  126

SymbolAdd_Meter		bcpl_metering_head:  34

SymbolName		bcpl_compiler_head:  55

Symbols			bcpl_compiler_head:  99, bcpl_driver:  64, 71, 85, 87, 102

SymbolSearch_Meter		bcpl_metering_head:  35

SymbolTable		bcpl_driver:  30, 142, 142

SyntaxAnalysis_Meter	bcpl_metering_head:  31, bcpl_driver:  184

Terminate			head:  92, bcpl_driver:  246

TextWords_Count		bcpl_metering_head:  47, bcpl_driver:  210

Thing			bcpl_driver:  280, 284, 285

Time			bcpl_driver:  61, 72, 92, 188, 213, 280, 284

TimeNow			bcpl_compiler_head:  114, bcpl_driver:  141, 143, 144

TimeNowString		bcpl_compiler_head:  113, bcpl_driver:  144, 165

TimeSummary		bcpl_driver:  92, 176, 188, 206, 213

TimeTemp			bcpl_driver:  92, 176, 188, 206, 213

TimeToSeconds		head:  95

Total			bcpl_driver:  253, 255, 255, 256, 258

TotalLines		bcpl_metering_head:  25, bcpl_driver:  183, 188

TotalLines_Count		bcpl_metering_head:  46, bcpl_driver:  183

TotalWords		bcpl_metering_head:  26, bcpl_driver:  210, 213

Trans			bcpl_compiler_head:  70, bcpl_driver:  208

TranslationFailed		bcpl_driver:  33, 271

Transreport		bcpl_compiler_head:  50

UnexpectedCase		bcpl_compiler_head:  139

Unpackstring		head:  24, bcpl_compiler_head:  22

UnsnapLinks		bcpl_driver:  28, 235

UpperCase			bcpl_compiler_head:  96, bcpl_driver:  64, 71, 101

Usage			bcpl_driver:  280, 281, 282, 282, 283, 283

UsageTemp			bcpl_driver:  174, 175, 184, 205, 211, 225, 247

UserID			bcpl_compiler_head:  120, bcpl_driver:  146, 149, 165, 237

UtilitiesInit		bcpl_compiler_head:  60, bcpl_driver:  130

v			bcpl_driver:  129, 130, 131, 132, 147, 148, 149, 224, 227, 228, 231, 232, 235, 245

Vmax			bcpl_compiler_head:  137

w			bcpl_driver:  114, 115, 116, 161, 162, 163

Wdir			bcpl_driver:  21, 226

WordSize			head:  126

Write			head:  136, bcpl_driver:  50, 162, 307

Writech			head:  71, bcpl_compiler_head:  17, bcpl_driver:  192, 197

WriteN			head:  73, bcpl_compiler_head:  19

WriteObjectListing		bcpl_compiler_head:  73, bcpl_driver:  214

Writeout			head:  76

WriteS			head:  72, bcpl_compiler_head:  18, bcpl_driver:  157, 170, 193, 198

Wrtime			bcpl_driver:  188, 213, 280

x			bcpl_driver:  223, 239, 240, 240, 240, 243, 244, 300, 301, 302

Xref			bcpl_compiler_head:  103, bcpl_driver:  63, 70, 81, 81, 82, 89, 97, 191

y			bcpl_driver:  223

Zero			bcpl_driver:  41, 227




Trans time 3.5, 682 object words per second.
	"	Begin text of BcplCommand

aa 000000  000013 102143		zero	11,33891		" BcplCommand
aa 000001  160154 103157		zero	57452,34415
aa 000002  155155 141156		zero	55917,49774
aa 000003  144000 000000		zero	51200
5a 000004  000024 000000		zero	20		" relative pointer to definition for entry
			L1:
aa 000005  000000 213000  48		epaq	0		" set lp to linkage section
aa 000006  700026 764161		lprplp	sb|22,*au
aa 000007  003156 700004		tsx0	L8		" execute Multics save
aa 000010  200000 021100		adlx1	bp|0		" BCPL save
aa 000011  700000 542111		sprpbp	sb|0,x1
aa 000012  700001 544111		sprplp	sb|1,x1
aa 000013  724501 620111		eax0	sb|10561,x1
aa 000014  777760 360003		anx0	-16,du
aa 000015  700025 740100		stx0	sb|21		" end of save sequence

aa 000016  002513 350004  49		eapap	L10		" "bcpl"
aa 000017  600045 540100		sprpap	sp|37		" ProgramID
aa 000020  600046 450100		stz	sp|38		" Errcode
			L4:
aa 000021  000042 236007  50		ldq	34,dl
aa 000022  724426 756111		stq	sb|10518,x1
4a 000023  400174 272120		tsbbp	lp|L11,*		" Open
aa 000024  024424 000001		zero	10516,1
aa 000025  600042 756100		stq	sp|34		" MONITOR
aa 000026  600042 236100  51		ldq	sp|34		" MONITOR
aa 000027  600040 756100		stq	sp|32		" OUTPUT
4a 000030  400172 272120  52		tsbbp	lp|L12,*		" GetCpuUsage
aa 000031  024424 000000		zero	10516
aa 000032  700002 756111		stq	sb|2,x1		" StartingTime
4a 000033  400170 272120  54		tsbbp	lp|L14,*		" Pl1NumbArgs
aa 000034  024424 000000		zero	10516
aa 000035  000000 116007		cmpq	0,dl
aa 000036  000011 601004		tnz	L13
aa 000037  002450 350004  55		eapap	L15		" "Pathname of source file is required as first argument.  Options:*n^a*n^a"
aa 000040  724426 540111		sprpap	sb|10518,x1
aa 000041  002420 350004		eapap	L16		" "General:  list  source  xref  alist  check  uppercase  symbols  map  optimize  quiet"
aa 000042  724427 540111		sprpap	sb|10519,x1
aa 000043  002375 350004		eapap	L17		" "Compiler debug:  time  print_meters  tree  crep  pprep  645  ocode"
aa 000044  724430 540111		sprpap	sb|10520,x1
4a 000045  400166 272120		tsbbp	lp|L18,*		" Complain
aa 000046  024424 000003		zero	10516,3
			L13:
aa 000047  700005 450111  61		stz	sb|5,x1		" List
aa 000050  700011 450111		stz	sb|9,x1		" DumpTree
aa 000051  700006 450111		stz	sb|6,x1		" Check
aa 000052  700010 450111		stz	sb|8,x1		" MetersPrintSw
aa 000053  700007 450111		stz	sb|7,x1		" Time
aa 000054  000001 336007  62		lcq	1,dl		" true
aa 000055  700012 756111		stq	sb|10,x1		" Followon
aa 000056  707070 236007  60		ldq	-29128,dl		" Empty
aa 000057  700004 756111		stq	sb|4,x1		" Alist
aa 000060  707070 236007		ldq	-29128,dl		" Empty
aa 000061  700003 756111		stq	sb|3,x1		" Source
aa 000062  707070 236007  63		ldq	-29128,dl		" Empty
aa 000063  600154 756100		stq	sp|108		" Xref
aa 000064  707070 236007		ldq	-29128,dl		" Empty
aa 000065  600152 756100		stq	sp|106		" Optimize
aa 000066  707070 236007		ldq	-29128,dl		" Empty
aa 000067  600151 756100		stq	sp|105		" LineMap
aa 000070  600146 450100  64		stz	sp|102		" PPrep
aa 000071  600155 450100		stz	sp|109		" OcodeSw
aa 000072  600147 450100		stz	sp|103		" Crep
aa 000073  600145 450100		stz	sp|101		" UpperCase
aa 000074  600150 450100		stz	sp|104		" Symbols
aa 000075  600157 450100		stz	sp|111		" QuietSw
aa 000076  002337 350004  66		eapap	L19		" "optimize"
aa 000077  700027 540111		sprpap	sb|23,x1
aa 000100  002333 350004		eapap	L20		" "645"
aa 000101  700035 540111		sprpap	sb|29,x1
aa 000102  002327 350004		eapap	L21		" "xref"
aa 000103  700017 540111		sprpap	sb|15,x1
aa 000104  002323 350004		eapap	L22		" "check"
aa 000105  700023 540111		sprpap	sb|19,x1
aa 000106  002317 350004		eapap	L23		" "tree"
aa 000107  700022 540111		sprpap	sb|18,x1
aa 000110  002313 350004		eapap	L24		" "map"
aa 000111  700026 540111		sprpap	sb|22,x1
aa 000112  002307 350004		eapap	L25		" "source"
aa 000113  700020 540111		sprpap	sb|16,x1
aa 000114  002303 350004		eapap	L26		" "alist"
aa 000115  700021 540111		sprpap	sb|17,x1
aa 000116  002275 350004		eapap	L27		" "print_meters"
aa 000117  700034 540111		sprpap	sb|28,x1
aa 000120  002271 350004		eapap	L28		" "time"
aa 000121  700032 540111		sprpap	sb|26,x1
aa 000122  002265 350004		eapap	L29		" "list"
aa 000123  700016 540111		sprpap	sb|14,x1
aa 000124  002260 350004		eapap	L30		" "symbols"
aa 000125  700025 540111		sprpap	sb|21,x1
aa 000126  002254 350004		eapap	L31		" "pprep"
aa 000127  700031 540111		sprpap	sb|25,x1
aa 000130  002250 350004		eapap	L32		" "quiet"
aa 000131  700033 540111		sprpap	sb|27,x1
aa 000132  002244 350004		eapap	L33		" "ocode"
aa 000133  700036 540111		sprpap	sb|30,x1
aa 000134  002237 350004		eapap	L34		" "uppercase"
aa 000135  700024 540111		sprpap	sb|20,x1
aa 000136  002233 350004		eapap	L35		" "crep"
aa 000137  700030 540111		sprpap	sb|24,x1
aa 000140  700016 350111		eapap	sb|14,x1		" a list
aa 000141  700013 540111		sprpap	sb|11,x1		" Names
aa 000142  002022 350004  74		eapap	L36		" a table
aa 000143  700015 540111		sprpap	sb|13,x1		" Flags
aa 000144  600155 350100  70		eapap	sp|109		" OcodeSw
aa 000145  700060 540111		sprpap	sb|48,x1
aa 000146  600151 350100		eapap	sp|105		" LineMap
aa 000147  700050 540111		sprpap	sb|40,x1
aa 000150  600147 350100		eapap	sp|103		" Crep
aa 000151  700052 540111		sprpap	sb|42,x1
aa 000152  600152 350100		eapap	sp|106		" Optimize
aa 000153  700051 540111		sprpap	sb|41,x1
aa 000154  700004 350111		eapap	sb|4,x1		" Alist
aa 000155  700043 540111		sprpap	sb|35,x1
aa 000156  700003 350111		eapap	sb|3,x1		" Source
aa 000157  700042 540111		sprpap	sb|34,x1
aa 000160  600154 350100		eapap	sp|108		" Xref
aa 000161  700041 540111		sprpap	sb|33,x1
aa 000162  700005 350111		eapap	sb|5,x1		" List
aa 000163  700040 540111		sprpap	sb|32,x1
aa 000164  700011 350111		eapap	sb|9,x1		" DumpTree
aa 000165  700044 540111		sprpap	sb|36,x1
aa 000166  700012 350111		eapap	sb|10,x1		" Followon
aa 000167  700057 540111		sprpap	sb|47,x1
aa 000170  600145 350100		eapap	sp|101		" UpperCase
aa 000171  700046 540111		sprpap	sb|38,x1
aa 000172  600157 350100		eapap	sp|111		" QuietSw
aa 000173  700055 540111		sprpap	sb|45,x1
aa 000174  700007 350111		eapap	sb|7,x1		" Time
aa 000175  700054 540111		sprpap	sb|44,x1
aa 000176  700006 350111		eapap	sb|6,x1		" Check
aa 000177  700045 540111		sprpap	sb|37,x1
aa 000200  700010 350111		eapap	sb|8,x1		" MetersPrintSw
aa 000201  700056 540111		sprpap	sb|46,x1
aa 000202  600150 350100		eapap	sp|104		" Symbols
aa 000203  700047 540111		sprpap	sb|39,x1
aa 000204  600146 350100		eapap	sp|102		" PPrep
aa 000205  700053 540111		sprpap	sb|43,x1
aa 000206  700040 350111		eapap	sb|32,x1		" a list
aa 000207  700014 540111		sprpap	sb|12,x1		" Pointers
aa 000210  000002 236007  78		ldq	2,dl		" 2
aa 000211  600050 756100		stq	sp|40		" ArgIndex
4a 000212  400164 350120  79		eapap	lp|L37,*		" GetNextCommandArg
aa 000213  724426 540111		sprpap	sb|10518,x1
aa 000214  000021 236007		ldq	17,dl		" 17
aa 000215  724427 756111		stq	sb|10519,x1
aa 000216  700013 236111		ldq	sb|11,x1		" Names
aa 000217  724430 756111		stq	sb|10520,x1
aa 000220  700014 236111		ldq	sb|12,x1		" Pointers
aa 000221  724431 756111		stq	sb|10521,x1
aa 000222  700015 236111		ldq	sb|13,x1		" Flags
aa 000223  724432 756111		stq	sb|10522,x1
aa 000224  724433 450111		stz	sb|10523,x1
4a 000225  400162 272120		tsbbp	lp|L38,*		" OptionParse
aa 000226  024424 000006		zero	10516,6
aa 000227  600154 236100  81		ldq	sp|108		" Xref
aa 000230  707070 116007		cmpq	-29128,dl		" Empty
aa 000231  000003 601004		tnz	L39
aa 000232  700005 235111		lda	sb|5,x1		" List
aa 000233  600154 755100		sta	sp|108		" Xref
			L39:
aa 000234  700003 235111  82		lda	sb|3,x1		" Source
aa 000235  707070 115007		cmpa	-29128,dl		" Empty
aa 000236  000004 601004		tnz	L40
aa 000237  700005 236111		ldq	sb|5,x1		" List
aa 000240  600154 276100		orq	sp|108		" Xref
aa 000241  700003 756111		stq	sb|3,x1		" Source
			L40:
aa 000242  700004 236111  83		ldq	sb|4,x1		" Alist
aa 000243  707070 116007		cmpq	-29128,dl		" Empty
aa 000244  000003 601004		tnz	L41
aa 000245  700005 235111		lda	sb|5,x1		" List
aa 000246  700004 755111		sta	sb|4,x1		" Alist
			L41:
aa 000247  600147 235100  84		lda	sp|103		" Crep
aa 000250  700006 255111		orsa	sb|6,x1		" Check
aa 000251  600152 235100  85		lda	sp|106		" Optimize
aa 000252  707070 115007		cmpa	-29128,dl		" Empty
aa 000253  000006 601004		tnz	L42
aa 000254  700006 236111		ldq	sb|6,x1		" Check
aa 000255  600150 276100		orq	sp|104		" Symbols
aa 000256  002112 676004		erq	L43		" true
aa 000257  700003 376111		anq	sb|3,x1		" Source
aa 000260  600152 756100		stq	sp|106		" Optimize
			L42:
aa 000261  600151 236100  86		ldq	sp|105		" LineMap
aa 000262  707070 116007		cmpq	-29128,dl		" Empty
aa 000263  000005 601004		tnz	L44
aa 000264  600152 235100		lda	sp|106		" Optimize
aa 000265  700006 275111		ora	sb|6,x1		" Check
aa 000266  002102 675004		era	L43		" true
aa 000267  600151 755100		sta	sp|105		" LineMap
			L44:
aa 000270  600150 235100  87		lda	sp|104		" Symbols
aa 000271  600151 255100		orsa	sp|105		" LineMap
aa 000272  000001 335007  89		lca	1,dl		" true
aa 000273  600147 675100		era	sp|103		" Crep
aa 000274  700003 236111		ldq	sb|3,x1		" Source
aa 000275  600154 276100		orq	sp|108		" Xref
aa 000276  700004 276111		orq	sb|4,x1		" Alist
aa 000277  700011 276111		orq	sb|9,x1		" DumpTree
aa 000300  600155 276100		orq	sp|109		" OcodeSw
aa 000301  600146 276100		orq	sp|102		" PPrep
aa 000302  600000 756100		stq	sp|0
aa 000303  600000 375100		ana	sp|0
aa 000304  600156 755100		sta	sp|110		" HaveListingFile
aa 000305  700012 234111  90		szn	sb|10,x1		" Followon
aa 000306  000003 600004		tze	L45
aa 000307  014044 236007		ldq	6180,dl		" 6180
aa 000310  000002 710004		tra	L46
			L45:
aa 000311  001205 236007		ldq	645,dl		" 645
			L46:
aa 000312  700037 756111		stq	sb|31,x1
aa 000313  700037 236111		ldq	sb|31,x1
aa 000314  600153 756100		stq	sp|107		" Machine
aa 000315  700010 236111  91		ldq	sb|8,x1		" MetersPrintSw
9a 000316  400014 276100		orq	lp|12		" StaticMeteringSw
aa 000317  600226 756100		stq	sp|150		" Metering
aa 000320  700007 236111  92		ldq	sb|7,x1		" Time
aa 000321  600156 276100		orq	sp|110		" HaveListingFile
aa 000322  700037 756111		stq	sb|31,x1		" TimeSummary
aa 000323  700066 350111  94		eapap	sb|54,x1		" a vector
aa 000324  600176 540100		sprpap	sp|126		" OptionString
aa 000325  600176 236100  95		ldq	sp|126		" OptionString
aa 000326  724426 756111		stq	sb|10518,x1
aa 000327  724427 450111		stz	sb|10519,x1
4a 000330  400160 272120		tsbbp	lp|L47,*		" SetLength
aa 000331  024424 000002		zero	10516,2
aa 000332  700003 234111  96		szn	sb|3,x1		" Source
aa 000333  000005 600004		tze	L48
aa 000334  002065 350004		eapap	L25		" "source"
aa 000335  724426 540111		sprpap	sb|10518,x1
aa 000336  002202 272004		tsbbp	L2+2		" AddOption
aa 000337  024424 000001		zero	10516,1
			L48:
aa 000340  600154 234100  97		szn	sp|108		" Xref
aa 000341  000005 600004		tze	L49
aa 000342  002067 350004		eapap	L21		" "xref"
aa 000343  724426 540111		sprpap	sb|10518,x1
aa 000344  002174 272004		tsbbp	L2+2		" AddOption
aa 000345  024424 000001		zero	10516,1
			L49:
aa 000346  700011 234111  98		szn	sb|9,x1		" DumpTree
aa 000347  000005 600004		tze	L50
aa 000350  002055 350004		eapap	L23		" "tree"
aa 000351  724426 540111		sprpap	sb|10518,x1
aa 000352  002166 272004		tsbbp	L2+2		" AddOption
aa 000353  024424 000001		zero	10516,1
			L50:
aa 000354  700004 234111  99		szn	sb|4,x1		" Alist
aa 000355  000005 600004		tze	L51
aa 000356  002041 350004		eapap	L26		" "alist"
aa 000357  724426 540111		sprpap	sb|10518,x1
aa 000360  002160 272004		tsbbp	L2+2		" AddOption
aa 000361  024424 000001		zero	10516,1
			L51:
aa 000362  700006 234111  100		szn	sb|6,x1		" Check
aa 000363  000005 600004		tze	L52
aa 000364  002043 350004		eapap	L22		" "check"
aa 000365  724426 540111		sprpap	sb|10518,x1
aa 000366  002152 272004		tsbbp	L2+2		" AddOption
aa 000367  024424 000001		zero	10516,1
			L52:
aa 000370  600145 234100  101		szn	sp|101		" UpperCase
aa 000371  000005 600004		tze	L53
aa 000372  002001 350004		eapap	L34		" "uppercase"
aa 000373  724426 540111		sprpap	sb|10518,x1
aa 000374  002144 272004		tsbbp	L2+2		" AddOption
aa 000375  024424 000001		zero	10516,1
			L53:
aa 000376  600150 234100  102		szn	sp|104		" Symbols
aa 000377  000005 600004		tze	L54
aa 000400  002004 350004		eapap	L30		" "symbols"
aa 000401  724426 540111		sprpap	sb|10518,x1
aa 000402  002136 272004		tsbbp	L2+2		" AddOption
aa 000403  024424 000001		zero	10516,1
			L54:
aa 000404  600151 234100  103		szn	sp|105		" LineMap
aa 000405  000005 600004		tze	L55
aa 000406  002015 350004		eapap	L24		" "map"
aa 000407  724426 540111		sprpap	sb|10518,x1
aa 000410  002130 272004		tsbbp	L2+2		" AddOption
aa 000411  024424 000001		zero	10516,1
			L55:
aa 000412  600152 234100  104		szn	sp|106		" Optimize
aa 000413  000005 600004		tze	L56
aa 000414  002021 350004		eapap	L19		" "optimize"
aa 000415  724426 540111		sprpap	sb|10518,x1
aa 000416  002122 272004		tsbbp	L2+2		" AddOption
aa 000417  024424 000001		zero	10516,1
			L56:
aa 000420  600146 234100  105		szn	sp|102		" PPrep
aa 000421  000005 600004		tze	L57
aa 000422  001760 350004		eapap	L31		" "pprep"
aa 000423  724426 540111		sprpap	sb|10518,x1
aa 000424  002114 272004		tsbbp	L2+2		" AddOption
aa 000425  024424 000001		zero	10516,1
			L57:
aa 000426  600155 234100  106		szn	sp|109		" OcodeSw
aa 000427  000005 600004		tze	L58
aa 000430  001746 350004		eapap	L33		" "ocode"
aa 000431  724426 540111		sprpap	sb|10518,x1
aa 000432  002106 272004		tsbbp	L2+2		" AddOption
aa 000433  024424 000001		zero	10516,1
			L58:
aa 000434  700012 234111  107		szn	sb|10,x1		" Followon
aa 000435  000003 600004		tze	L59
aa 000436  001730 350004		eapap	L61		" "6180"
aa 000437  000002 710004		tra	L60
			L59:
aa 000440  001773 350004		eapap	L20		" "645"
			L60:
aa 000441  700063 540111		sprpap	sb|51,x1
aa 000442  700063 236111		ldq	sb|51,x1
aa 000443  700062 756111		stq	sb|50,x1
aa 000444  700062 236111		ldq	sb|50,x1
aa 000445  724426 756111		stq	sb|10518,x1
aa 000446  002072 272004		tsbbp	L2+2		" AddOption
aa 000447  024424 000001		zero	10516,1
aa 000450  700270 350111  110		eapap	sb|184,x1		" a vector
aa 000451  700062 540111		sprpap	sb|50,x1		" Arg
aa 000452  000001 236007  111		ldq	1,dl		" 1
aa 000453  724426 756111		stq	sb|10518,x1
aa 000454  700062 236111		ldq	sb|50,x1		" Arg
aa 000455  724427 756111		stq	sb|10519,x1
aa 000456  000620 236007		ldq	400,dl
aa 000457  724430 756111		stq	sb|10520,x1
4a 000460  400156 272120		tsbbp	lp|L62,*		" Pl1ArgString
aa 000461  024424 000003		zero	10516,3
aa 000462  700062 236111  112		ldq	sb|50,x1		" Arg
aa 000463  724426 756111		stq	sb|10518,x1
4a 000464  400154 272120		tsbbp	lp|L63,*		" Length
aa 000465  024424 000001		zero	10516,1
aa 000466  700267 756111		stq	sb|183,x1		" Len
aa 000467  700267 236111  113		ldq	sb|183,x1		" Len
aa 000470  000005 116007		cmpq	5,dl		" 5
aa 000471  000035 604404		tmoz	L64
aa 000472  700436 350111  114		eapap	sb|286,x1		" a vector
aa 000473  700063 540111		sprpap	sb|51,x1		" w
aa 000474  700063 235111  115		lda	sb|51,x1		" w
aa 000475  724426 755111		sta	sb|10518,x1
aa 000476  700062 235111		lda	sb|50,x1		" Arg
aa 000477  724427 755111		sta	sb|10519,x1
aa 000500  700267 235111		lda	sb|183,x1		" Len
aa 000501  000004 175007		sba	4,dl		" 4
aa 000502  724430 755111		sta	sb|10520,x1
aa 000503  000005 235007		lda	5,dl		" 5
aa 000504  724431 755111		sta	sb|10521,x1
4a 000505  400152 272120		tsbbp	lp|L65,*		" Substr
aa 000506  024424 000004		zero	10516,4
aa 000507  700063 235111  116		lda	sb|51,x1		" w
aa 000510  724426 755111		sta	sb|10518,x1
aa 000511  001653 350004		eapap	L67		" ".bcpl"
aa 000512  724427 540111		sprpap	sb|10519,x1
4a 000513  400150 272120		tsbbp	lp|L68,*		" EqualString
aa 000514  024424 000002		zero	10516,2
aa 000515  000000 116007		cmpq	0,dl
aa 000516  000010 600004		tze	L66
aa 000517  700062 236111		ldq	sb|50,x1		" Arg
aa 000520  724426 756111		stq	sb|10518,x1
aa 000521  700267 236111		ldq	sb|183,x1		" Len
aa 000522  000005 176007		sbq	5,dl		" 5
aa 000523  724427 756111		stq	sb|10519,x1
4a 000524  400160 272120		tsbbp	lp|L47,*		" SetLength
aa 000525  024424 000002		zero	10516,2
			L66:
			L64:
aa 000526  700436 350111  118		eapap	sb|286,x1		" a vector
aa 000527  700063 540111		sprpap	sb|51,x1		" Path
aa 000530  700522 350111		eapap	sb|338,x1		" a vector
aa 000531  700064 540111		sprpap	sb|52,x1		" Dir
aa 000532  700606 350111		eapap	sb|390,x1		" a vector
aa 000533  700065 540111		sprpap	sb|53,x1		" Ent
aa 000534  700062 236111  119		ldq	sb|50,x1		" Arg
aa 000535  724426 756111		stq	sb|10518,x1
aa 000536  700063 236111		ldq	sb|51,x1		" Path
aa 000537  724427 756111		stq	sb|10519,x1
4a 000540  400146 272120		tsbbp	lp|L69,*		" ExpandPathname
aa 000541  024424 000002		zero	10516,2
aa 000542  700063 236111  120		ldq	sb|51,x1		" Path
aa 000543  724426 756111		stq	sb|10518,x1
aa 000544  700064 236111		ldq	sb|52,x1		" Dir
aa 000545  724427 756111		stq	sb|10519,x1
aa 000546  700065 236111		ldq	sb|53,x1		" Ent
aa 000547  724430 756111		stq	sb|10520,x1
4a 000550  400144 272120		tsbbp	lp|L70,*		" SplitPathname
aa 000551  024424 000003		zero	10516,3
aa 000552  600046 234100  121		szn	sp|38		" Errcode
aa 000553  000005 600004		tze	L71
aa 000554  700062 236111		ldq	sb|50,x1		" Arg
aa 000555  724426 756111		stq	sb|10518,x1
4a 000556  400166 272120		tsbbp	lp|L18,*		" Complain
aa 000557  024424 000001		zero	10516,1
			L71:
aa 000560  700622 350111  122		eapap	sb|402,x1		" a vector
aa 000561  600202 540100		sprpap	sp|130		" ProgramName
aa 000562  700065 236111  123		ldq	sb|53,x1		" Ent
aa 000563  724426 756111		stq	sb|10518,x1
aa 000564  000040 236007		ldq	32,dl		" 32
aa 000565  724427 756111		stq	sb|10519,x1
aa 000566  600202 236100		ldq	sp|130		" ProgramName
aa 000567  724430 756111		stq	sb|10520,x1
4a 000570  400142 272120		tsbbp	lp|L72,*		" MakeBcplString
aa 000571  024424 000003		zero	10516,3
aa 000572  600202 236100  127		ldq	sp|130		" ProgramName
aa 000573  777777 376007		anq	-1,dl		" Right
aa 000574  127710 116007		cmpq	45000,dl		" 45000
aa 000575  000005 604004		tmi	L73
aa 000576  001544 350004		eapap	L74		" "Not enough room left in stack to perform compilation. Type 'release'."
aa 000577  724426 540111		sprpap	sb|10518,x1
4a 000600  400166 272120		tsbbp	lp|L18,*		" Complain
aa 000601  024424 000001		zero	10516,1
			L73:
aa 000602  700634 350111  129		eapap	sb|412,x1		" a vector
aa 000603  700621 540111		sprpap	sb|401,x1		" v
aa 000604  700621 236111  130		ldq	sb|401,x1		" v
aa 000605  724426 756111		stq	sb|10518,x1
aa 000606  023420 236007		ldq	10000,dl		" 10000
aa 000607  724427 756111		stq	sb|10519,x1
aa 000610  700002 236111		ldq	sb|2,x1		" StartingTime
aa 000611  724430 756111		stq	sb|10520,x1
4a 000612  400140 272120		tsbbp	lp|L75,*		" UtilitiesInit
aa 000613  024424 000003		zero	10516,3
aa 000614  724256 350111  131		eapap	sb|10414,x1	" a vector
aa 000615  700633 540111		sprpap	sb|411,x1		" v
aa 000616  001521 350004  132		eapap	L76		" "cleanup"
aa 000617  724426 540111		sprpap	sb|10518,x1
4a 000620  400136 350120		eapap	lp|L77,*		" Cleanup
aa 000621  724427 540111		sprpap	sb|10519,x1
aa 000622  700633 236111		ldq	sb|411,x1		" v
aa 000623  724430 756111		stq	sb|10520,x1
4a 000624  400134 272120		tsbbp	lp|L78,*		" SetHandler
aa 000625  024424 000003		zero	10516,3
aa 000626  000001 336007  133		lcq	1,dl		" true
aa 000627  724426 756111		stq	sb|10518,x1
4a 000630  400132 272120		tsbbp	lp|L79,*		" SetOverflowMask
aa 000631  024424 000001		zero	10516,1
aa 000632  600215 450100  135		stz	sp|141		" Errorsw
aa 000633  600216 450100  136		stz	sp|142		" NAMECHAIN
4a 000634  400130 272120  138		tsbbp	lp|L80,*		" GetVersion
aa 000635  024424 000000		zero	10516
aa 000636  724304 350111  141		eapap	sb|10436,x1	" a vector
aa 000637  600175 540100		sprpap	sp|125		" TimeNow
aa 000640  724310 350111		eapap	sb|10440,x1	" a vector
aa 000641  600173 540100		sprpap	sp|123		" CompilerDTM
4a 000642  400126 350120  142		eapap	lp|L81,*
aa 000643  000007 236100		ldq	ap|7
aa 000644  600173 760100		lprpap	sp|123		" CompilerDTM
aa 000645  000001 756100		stq	ap|1
4a 000646  400126 352120		eapbp	lp|L81,*
aa 000647  200006 236100		ldq	bp|6
aa 000650  600173 762100		lprpbp	sp|123		" CompilerDTM
aa 000651  200000 756100		stq	bp|0
aa 000652  600175 236100  143		ldq	sp|125		" TimeNow
aa 000653  724426 756111		stq	sb|10518,x1
4a 000654  400124 272120		tsbbp	lp|L82,*		" RawClockTime
aa 000655  024424 000001		zero	10516,1
aa 000656  600175 236100  144		ldq	sp|125		" TimeNow
aa 000657  724426 756111		stq	sb|10518,x1
4a 000660  400122 272120		tsbbp	lp|L83,*		" MakeTimeString
aa 000661  024424 000001		zero	10516,1
aa 000662  600174 756100		stq	sp|124		" TimeNowString
aa 000663  600173 236100		ldq	sp|123		" CompilerDTM
aa 000664  724426 756111		stq	sb|10518,x1
4a 000665  400122 272120		tsbbp	lp|L83,*		" MakeTimeString
aa 000666  024424 000001		zero	10516,1
aa 000667  600172 756100		stq	sp|122		" CompilerDTMString
aa 000670  724314 351511  146		eapab	sb|10444,x1	" a vector
aa 000671  600203 541100		sprpab	sp|131		" UserID
aa 000672  724326 351511  147		eapab	sb|10454,x1	" a vector
aa 000673  724313 541111		sprpab	sb|10443,x1	" v
aa 000674  001266 237004  148		ldaq	L84		" arglist header
aa 000675  724424 757111		staq	sb|10516,x1	" arg count
aa 000676  724313 761111		lprpab	sb|10443,x1	" v
aa 000677  724426 251511		stpab	sb|10518,x1
aa 000700  001436 351404		eapab	L85		" descriptor
aa 000701  724430 251511		stpab	sb|10520,x1
aa 000702  600010 441100		sxl1	sp|8
aa 000703  600030 650100		stplp	sp|24
4a 000704  400120 352120		eapbp	lp|L86,*		" GetGroupId
aa 000705  724424 350111		eapap	sb|10516,x1
aa 000706  700036 670120		tsblp	sb|30,*		" Multics call operator
aa 000707  600010 721100		lxl1	sp|8
aa 000710  700001 764111		lprplp	sb|1,x1
aa 000711  724313 236111  149		ldq	sb|10443,x1	" v
aa 000712  724426 756111		stq	sb|10518,x1
aa 000713  000040 236007		ldq	32,dl		" 32
aa 000714  724427 756111		stq	sb|10519,x1
aa 000715  600203 236100		ldq	sp|131		" UserID
aa 000716  724430 756111		stq	sb|10520,x1
4a 000717  400142 272120		tsbbp	lp|L72,*		" MakeBcplString
aa 000720  024424 000003		zero	10516,3
aa 000721  600147 234100  152		szn	sp|103		" Crep
aa 000722  000034 600004		tze	L87
aa 000723  000022 236007  153		ldq	18,dl
aa 000724  724426 756111		stq	sb|10518,x1
4a 000725  400174 272120		tsbbp	lp|L11,*		" Open
aa 000726  024424 000001		zero	10516,1
aa 000727  600041 756100		stq	sp|33		" INPUT
aa 000730  001403 353404  154		eapbb	L89		" "console"
aa 000731  600200 765100		lprplb	sp|128		" FilesInfo
aa 000732  500000 543100		sprpbb	lb|0
aa 000733  600200 763100		lprpbb	sp|128		" FilesInfo
aa 000734  300001 450100		stz	bb|1
aa 000735  600200 760100		lprpap	sp|128		" FilesInfo
aa 000736  000002 450100		stz	ap|2
aa 000737  600200 761100		lprpab	sp|128		" FilesInfo
aa 000740  100003 450100		stz	ab|3
aa 000741  001372 352004  155		eapbp	L89		" "console"
aa 000742  600177 765100		lprplb	sp|127		" FileNames
aa 000743  500000 542100		sprpbp	lb|0
aa 000744  600201 236100  156		ldq	sp|129		" FileCount
aa 000745  000015 736000		qls	13
aa 000746  600214 756100		stq	sp|140		" LineCount
aa 000747  600042 236100  157		ldq	sp|34		" MONITOR
aa 000750  724426 756111		stq	sb|10518,x1
aa 000751  001356 352004		eapbp	L90		" "Type program:*n"
aa 000752  724427 542111		sprpbp	sb|10519,x1
4a 000753  400116 272120		tsbbp	lp|L91,*		" WriteS
aa 000754  024424 000002		zero	10516,2
aa 000755  000115 710004		tra	L88
			L87:
aa 000756  700062 236111  159		ldq	sb|50,x1		" Arg
aa 000757  724426 756111		stq	sb|10518,x1
aa 000760  724427 450111		stz	sb|10519,x1
4a 000761  400114 272120		tsbbp	lp|L92,*		" GetStream
aa 000762  024424 000002		zero	10516,2
aa 000763  600156 234100  160		szn	sp|110		" HaveListingFile
aa 000764  000100 600004		tze	L93
aa 000765  724340 352111  161		eapbp	sb|10464,x1	" a vector
aa 000766  724325 542111		sprpbp	sb|10453,x1	" w
aa 000767  724325 236111  162		ldq	sb|10453,x1	" w
aa 000770  724426 756111		stq	sb|10518,x1
aa 000771  000040 236007		ldq	32,dl		" 32
aa 000772  724427 756111		stq	sb|10519,x1
aa 000773  600202 236100		ldq	sp|130		" ProgramName
aa 000774  724430 756111		stq	sb|10520,x1
aa 000775  001330 352004		eapbp	L94		" ".list"
aa 000776  724431 542111		sprpbp	sb|10521,x1
4a 000777  400112 272120		tsbbp	lp|L95,*		" Concatenate
aa 001000  024424 000004		zero	10516,4
aa 001001  724337 756111		stq	sb|10463,x1
aa 001002  000245 236007		ldq	165,dl
aa 001003  724426 756111		stq	sb|10518,x1
aa 001004  724337 236111		ldq	sb|10463,x1
aa 001005  724427 756111		stq	sb|10519,x1
4a 001006  400174 272120		tsbbp	lp|L11,*		" Open
aa 001007  024424 000002		zero	10516,2
aa 001010  600040 756100		stq	sp|32		" OUTPUT
aa 001011  600046 234100  163		szn	sp|38		" Errcode
aa 001012  000005 600004		tze	L96
aa 001013  724325 236111		ldq	sb|10453,x1	" w
aa 001014  724426 756111		stq	sb|10518,x1
4a 001015  400166 272120		tsbbp	lp|L18,*		" Complain
aa 001016  024424 000001		zero	10516,1
			L96:
aa 001017  600040 236100  164		ldq	sp|32		" OUTPUT
aa 001020  724426 756111		stq	sb|10518,x1
aa 001021  001273 352004		eapbp	L97		" "Compilation listing of file ^s.*n"
aa 001022  724427 542111		sprpbp	sb|10519,x1
aa 001023  600200 762100		lprpbp	sp|128		" FilesInfo
aa 001024  200000 236100		ldq	bp|0
aa 001025  724430 756111		stq	sb|10520,x1
4a 001026  400110 272120		tsbbp	lp|L98,*		" Format
aa 001027  024424 000003		zero	10516,3
aa 001030  600040 236100  165		ldq	sp|32		" OUTPUT
aa 001031  724426 756111		stq	sb|10518,x1
aa 001032  001250 353404		eapbb	L99		" "Compilation performed for ^s at ^s.*n"
aa 001033  724427 543111		sprpbb	sb|10519,x1
aa 001034  600203 236100		ldq	sp|131		" UserID
aa 001035  724430 756111		stq	sb|10520,x1
aa 001036  600174 236100		ldq	sp|124		" TimeNowString
aa 001037  724431 756111		stq	sb|10521,x1
4a 001040  400110 272120		tsbbp	lp|L98,*		" Format
aa 001041  024424 000004		zero	10516,4
aa 001042  600040 236100  166		ldq	sp|32		" OUTPUT
aa 001043  724426 756111		stq	sb|10518,x1
aa 001044  001223 353404		eapbb	L100		" "Compiled by ^s.  Compiler updated at ^s.*n"
aa 001045  724427 543111		sprpbb	sb|10519,x1
aa 001046  600170 236100		ldq	sp|120		" CompilerVersionString
aa 001047  724430 756111		stq	sb|10520,x1
aa 001050  600172 236100		ldq	sp|122		" CompilerDTMString
aa 001051  724431 756111		stq	sb|10521,x1
4a 001052  400110 272120		tsbbp	lp|L98,*		" Format
aa 001053  024424 000004		zero	10516,4
aa 001054  600040 236100  168		ldq	sp|32		" OUTPUT
aa 001055  724426 756111		stq	sb|10518,x1
aa 001056  001202 353404		eapbb	L101		" "Options applied:  ^s.*n*n"
aa 001057  724427 543111		sprpbb	sb|10519,x1
aa 001060  600176 236100		ldq	sp|126		" OptionString
aa 001061  724430 756111		stq	sb|10520,x1
4a 001062  400110 272120		tsbbp	lp|L98,*		" Format
aa 001063  024424 000003		zero	10516,3
			L93:
aa 001064  600042 236100  170		ldq	sp|34		" MONITOR
aa 001065  724426 756111		stq	sb|10518,x1
aa 001066  001170 353404		eapbb	L102		" "BCPL*n"
aa 001067  724427 543111		sprpbb	sb|10519,x1
4a 001070  400116 272120		tsbbp	lp|L91,*		" WriteS
aa 001071  024424 000002		zero	10516,2
			L88:
aa 001072  600226 234100  175		szn	sp|150		" Metering
aa 001073  000004 600004		tze	L103
4a 001074  400106 272120		tsbbp	lp|L104,*		" SaveOldUsage
aa 001075  024424 000000		zero	10516
aa 001076  724325 756111		stq	sb|10453,x1	" UsageTemp
			L103:
aa 001077  700037 234111  176		szn	sb|31,x1		" TimeSummary
aa 001100  000004 600004		tze	L105
4a 001101  400172 272120		tsbbp	lp|L12,*		" GetCpuUsage
aa 001102  024424 000000		zero	10516
aa 001103  700061 756111		stq	sb|49,x1		" TimeTemp
			L105:
aa 001104  700003 236111  177		ldq	sb|3,x1		" Source
aa 001105  600144 756100		stq	sp|100		" Listing
4a 001106  400104 272120  179		tsbbp	lp|L106,*		" LexInit
aa 001107  024424 000000		zero	10516
4a 001110  400102 272120  180		tsbbp	lp|L107,*		" CAE
aa 001111  024424 000000		zero	10516
aa 001112  724307 756111		stq	sb|10439,x1	" A
aa 001113  600147 234100  181		szn	sp|103		" Crep
aa 001114  000006 600004		tze	L108
aa 001115  724307 234111		szn	sb|10439,x1	" A
aa 001116  000004 601004		tnz	L108
aa 001117  600215 234100		szn	sp|141		" Errorsw
aa 001120  000002 601004		tnz	L108
aa 001121  700042 710120		tra	sb|34,*		" Multics return
			L108:
aa 001122  600226 234100  182		szn	sp|150		" Metering
aa 001123  000012 600004		tze	L109
aa 001124  600231 236100  183		ldq	sp|153		" TotalLines
aa 001125  600227 763100		lprpbb	sp|151		" MeterData
aa 001126  300060 756100		stq	bb|48
aa 001127  000003 236007  184		ldq	3,dl		" SyntaxAnalysis_Meter
aa 001130  724426 756111		stq	sb|10518,x1
aa 001131  724325 236111		ldq	sb|10453,x1	" UsageTemp
aa 001132  724427 756111		stq	sb|10519,x1
4a 001133  400100 272120		tsbbp	lp|L110,*		" RecordUsage
aa 001134  024424 000002		zero	10516,2
			L109:
aa 001135  600041 236100  186		ldq	sp|33		" INPUT
aa 001136  724426 756111		stq	sb|10518,x1
4a 001137  400076 272120		tsbbp	lp|L111,*		" Close
aa 001140  024424 000001		zero	10516,1
aa 001141  600041 450100  187		stz	sp|33		" INPUT
aa 001142  700037 234111  188		szn	sb|31,x1		" TimeSummary
aa 001143  000021 600004		tze	L112
4a 001144  400172 272120		tsbbp	lp|L12,*		" GetCpuUsage
aa 001145  024424 000000		zero	10516
aa 001146  700061 176111		sbq	sb|49,x1		" TimeTemp
aa 001147  724303 756111		stq	sb|10435,x1
aa 001150  001104 350004		eapap	L113		" "CAE"
aa 001151  724426 540111		sprpap	sb|10518,x1
aa 001152  724303 236111		ldq	sb|10435,x1
aa 001153  724427 756111		stq	sb|10519,x1
aa 001154  001074 350004		eapap	L114		" "source lines"
aa 001155  724430 540111		sprpap	sb|10520,x1
aa 001156  600231 236100		ldq	sp|153		" TotalLines
aa 001157  724431 756111		stq	sb|10521,x1
aa 001160  700007 236111		ldq	sb|7,x1		" Time
aa 001161  724432 756111		stq	sb|10522,x1
aa 001162  001426 272004		tsbbp	L3+2		" Wrtime
aa 001163  024424 000005		zero	10516,5
			L112:
aa 001164  600154 234100  191		szn	sp|108		" Xref
aa 001165  000027 600004		tze	L115
aa 001166  600147 234100  192		szn	sp|103		" Crep
aa 001167  000003 600004		tze	L116
aa 001170  000012 236007		ldq	10,dl		" '*n'
aa 001171  000002 710004		tra	L117
			L116:
aa 001172  000014 236007		ldq	12,dl		" '*f'
			L117:
aa 001173  724255 756111		stq	sb|10413,x1
aa 001174  724255 236111		ldq	sb|10413,x1
aa 001175  724303 756111		stq	sb|10435,x1
aa 001176  600040 236100		ldq	sp|32		" OUTPUT
aa 001177  724426 756111		stq	sb|10518,x1
aa 001200  724303 236111		ldq	sb|10435,x1
aa 001201  724427 756111		stq	sb|10519,x1
4a 001202  400074 272120		tsbbp	lp|L118,*		" Writech
aa 001203  024424 000002		zero	10516,2
aa 001204  001035 350004  193		eapap	L119		" "cross reference table*n*n"
aa 001205  724426 540111		sprpap	sb|10518,x1
4a 001206  400116 272120		tsbbp	lp|L91,*		" WriteS
aa 001207  024424 000001		zero	10516,1
aa 001210  600216 236100  194		ldq	sp|142		" NAMECHAIN
aa 001211  724426 756111		stq	sb|10518,x1
4a 001212  400072 272120		tsbbp	lp|L120,*		" Pname
aa 001213  024424 000001		zero	10516,1
			L115:
aa 001214  700011 234111  196		szn	sb|9,x1		" DumpTree
aa 001215  000030 600004		tze	L121
aa 001216  600147 234100  197		szn	sp|103		" Crep
aa 001217  000003 600004		tze	L122
aa 001220  000012 236007		ldq	10,dl		" '*n'
aa 001221  000002 710004		tra	L123
			L122:
aa 001222  000014 236007		ldq	12,dl		" '*f'
			L123:
aa 001223  724255 756111		stq	sb|10413,x1
aa 001224  724255 236111		ldq	sb|10413,x1
aa 001225  724303 756111		stq	sb|10435,x1
aa 001226  600040 236100		ldq	sp|32		" OUTPUT
aa 001227  724426 756111		stq	sb|10518,x1
aa 001230  724303 236111		ldq	sb|10435,x1
aa 001231  724427 756111		stq	sb|10519,x1
4a 001232  400074 272120		tsbbp	lp|L118,*		" Writech
aa 001233  024424 000002		zero	10516,2
aa 001234  000777 350004  198		eapap	L124		" "abstract syntax tree*n*n"
aa 001235  724426 540111		sprpap	sb|10518,x1
4a 001236  400116 272120		tsbbp	lp|L91,*		" WriteS
aa 001237  024424 000001		zero	10516,1
aa 001240  724307 236111  199		ldq	sb|10439,x1	" A
aa 001241  724426 756111		stq	sb|10518,x1
aa 001242  724427 450111		stz	sb|10519,x1
4a 001243  400070 272120		tsbbp	lp|L125,*		" Plist
aa 001244  024424 000002		zero	10516,2
			L121:
aa 001245  600215 234100  203		szn	sp|141		" Errorsw
aa 001246  000067 601004		tnz	L126
aa 001247  700004 236111  204		ldq	sb|4,x1		" Alist
aa 001250  700006 376111		anq	sb|6,x1		" Check
aa 001251  600144 756100		stq	sp|100		" Listing
aa 001252  600226 234100  205		szn	sp|150		" Metering
aa 001253  000004 600004		tze	L127
4a 001254  400106 272120		tsbbp	lp|L104,*		" SaveOldUsage
aa 001255  024424 000000		zero	10516
aa 001256  724325 756111		stq	sb|10453,x1	" UsageTemp
			L127:
aa 001257  700037 234111  206		szn	sb|31,x1		" TimeSummary
aa 001260  000004 600004		tze	L128
4a 001261  400172 272120		tsbbp	lp|L12,*		" GetCpuUsage
aa 001262  024424 000000		zero	10516
aa 001263  700061 756111		stq	sb|49,x1		" TimeTemp
			L128:
4a 001264  400066 272120  207		tsbbp	lp|L129,*		" CgInit
aa 001265  024424 000000		zero	10516
aa 001266  724307 236111  208		ldq	sb|10439,x1	" A
aa 001267  724426 756111		stq	sb|10518,x1
4a 001270  400064 272120		tsbbp	lp|L130,*		" Trans
aa 001271  024424 000001		zero	10516,1
aa 001272  600226 234100  209		szn	sp|150		" Metering
aa 001273  000012 600004		tze	L131
aa 001274  600232 236100  210		ldq	sp|154		" TotalWords
aa 001275  600227 760100		lprpap	sp|151		" MeterData
aa 001276  000061 756100		stq	ap|49
aa 001277  000044 236007  211		ldq	36,dl		" SemanticTranslation_Meter
aa 001300  724426 756111		stq	sb|10518,x1
aa 001301  724325 236111		ldq	sb|10453,x1	" UsageTemp
aa 001302  724427 756111		stq	sb|10519,x1
4a 001303  400100 272120		tsbbp	lp|L110,*		" RecordUsage
aa 001304  024424 000002		zero	10516,2
			L131:
aa 001305  700037 234111  213		szn	sb|31,x1		" TimeSummary
aa 001306  000021 600004		tze	L132
4a 001307  400172 272120		tsbbp	lp|L12,*		" GetCpuUsage
aa 001310  024424 000000		zero	10516
aa 001311  700061 176111		sbq	sb|49,x1		" TimeTemp
aa 001312  724303 756111		stq	sb|10435,x1
aa 001313  000716 351404		eapab	L133		" "Trans"
aa 001314  724426 541111		sprpab	sb|10518,x1
aa 001315  724303 236111		ldq	sb|10435,x1
aa 001316  724427 756111		stq	sb|10519,x1
aa 001317  000706 351404		eapab	L134		" "object words"
aa 001320  724430 541111		sprpab	sb|10520,x1
aa 001321  600232 236100		ldq	sp|154		" TotalWords
aa 001322  724431 756111		stq	sb|10521,x1
aa 001323  700007 236111		ldq	sb|7,x1		" Time
aa 001324  724432 756111		stq	sb|10522,x1
aa 001325  001263 272004		tsbbp	L3+2		" Wrtime
aa 001326  024424 000005		zero	10516,5
			L132:
aa 001327  700004 234111  214		szn	sb|4,x1		" Alist
aa 001330  000005 600004		tze	L135
aa 001331  700006 234111		szn	sb|6,x1		" Check
aa 001332  000003 601004		tnz	L135
4a 001333  400062 272120		tsbbp	lp|L136,*		" WriteObjectListing
aa 001334  024424 000000		zero	10516
			L135:
			L126:
aa 001335  600040 236100  216		ldq	sp|32		" OUTPUT
aa 001336  600042 116100		cmpq	sp|34		" MONITOR
aa 001337  000007 600004		tze	L137
aa 001340  600040 235100  217		lda	sp|32		" OUTPUT
aa 001341  724426 755111		sta	sb|10518,x1
4a 001342  400076 272120		tsbbp	lp|L111,*		" Close
aa 001343  024424 000001		zero	10516,1
aa 001344  600042 235100  218		lda	sp|34		" MONITOR
aa 001345  600040 755100		sta	sp|32		" OUTPUT
			L137:
aa 001346  700006 234111  222		szn	sb|6,x1		" Check
aa 001347  000426 601004		tnz	L138
aa 001350  600215 234100		szn	sp|141		" Errorsw
aa 001351  000424 601004		tnz	L138
aa 001352  724340 351511  224		eapab	sb|10464,x1	" a vector
aa 001353  700605 541111		sprpab	sb|389,x1		" v
aa 001354  600226 234100  225		szn	sp|150		" Metering
aa 001355  000004 600004		tze	L139
4a 001356  400106 272120		tsbbp	lp|L104,*		" SaveOldUsage
aa 001357  024424 000000		zero	10516
aa 001360  724325 756111		stq	sb|10453,x1	" UsageTemp
			L139:
aa 001361  000601 237004  226		ldaq	L84
aa 001362  724424 757111		staq	sb|10516,x1	" arg count
aa 001363  700064 761111		lprpab	sb|52,x1		" Dir
aa 001364  724426 251511		stpab	sb|10518,x1
aa 001365  000637 351404		eapab	L140		" descriptor
aa 001366  724430 251511		stpab	sb|10520,x1
aa 001367  600010 441100		sxl1	sp|8
aa 001370  600030 650100		stplp	sp|24
4a 001371  400060 352120		eapbp	lp|L141,*		" Wdir
aa 001372  724424 350111		eapap	sb|10516,x1
aa 001373  700036 670120		tsblp	sb|30,*		" Multics call operator
aa 001374  600010 721100		lxl1	sp|8
aa 001375  700001 764111		lprplp	sb|1,x1
aa 001376  000562 237004  227		ldaq	L142		" arglist header
aa 001377  724424 757111		staq	sb|10516,x1	" arg count
aa 001400  700064 765111		lprplb	sb|52,x1		" Dir
aa 001401  724426 651511		stplb	sb|10518,x1
aa 001402  000622 371404		eaplb	L140
aa 001403  724444 651511		stplb	sb|10532,x1
aa 001404  700065 763111		lprpbb	sb|53,x1		" Ent
aa 001405  724430 253511		stpbb	sb|10520,x1
aa 001406  000730 353404		eapbb	L85
aa 001407  724446 253511		stpbb	sb|10534,x1
aa 001410  000613 350004		eapap	L143		" ""
aa 001411  724432 250111		stpap	sb|10522,x1
aa 001412  000610 350004		eapap	L144		" descriptor
aa 001413  724450 250111		stpap	sb|10536,x1
9a 001414  400011 351500		eapab	lp|9		" Zero
aa 001415  724434 251511		stpab	sb|10524,x1
aa 001416  000603 351404		eapab	L145		" descriptor
aa 001417  724452 251511		stpab	sb|10538,x1
9a 001420  400010 352100		eapbp	lp|8		" One
aa 001421  724436 252111		stpbp	sb|10526,x1
aa 001422  000577 352004		eapbp	L145
aa 001423  724454 252111		stpbp	sb|10540,x1
aa 001424  700605 765111		lprplb	sb|389,x1		" v
aa 001425  724440 651511		stplb	sb|10528,x1
aa 001426  000572 371404		eaplb	L146		" descriptor
aa 001427  724456 651511		stplb	sb|10542,x1
aa 001430  600046 353500		eapbb	sp|38		" Errcode
aa 001431  724442 253511		stpbb	sb|10530,x1
aa 001432  000567 353404		eapbb	L145
aa 001433  724460 253511		stpbb	sb|10544,x1
aa 001434  600010 441100		sxl1	sp|8
aa 001435  600030 650100		stplp	sp|24
4a 001436  400056 352120		eapbp	lp|L147,*		" Initiate
aa 001437  724424 350111		eapap	sb|10516,x1
aa 001440  700036 670120		tsblp	sb|30,*		" Multics call operator
aa 001441  600010 721100		lxl1	sp|8
aa 001442  700001 764111		lprplp	sb|1,x1
aa 001443  700605 236111  228		ldq	sb|389,x1		" v
aa 001444  724426 756111		stq	sb|10518,x1
4a 001445  400054 272120		tsbbp	lp|L148,*		" BCPLaddr
aa 001446  024424 000001		zero	10516,1
aa 001447  724337 756111		stq	sb|10463,x1	" P
aa 001450  600046 234100  229		szn	sp|38		" Errcode
aa 001451  000114 600004		tze	L149
aa 001452  724337 236111  230		ldq	sb|10463,x1	" P
aa 001453  000544 116004		cmpq	L152		" Null
aa 001454  000061 601004		tnz	L150
aa 001455  000501 237004  231		ldaq	L153		" arglist header
aa 001456  724424 757111		staq	sb|10516,x1	" arg count
aa 001457  700064 760111		lprpap	sb|52,x1		" Dir
aa 001460  724426 250111		stpap	sb|10518,x1
aa 001461  000543 350004		eapap	L140
aa 001462  724442 250111		stpap	sb|10530,x1
aa 001463  700065 761111		lprpab	sb|53,x1		" Ent
aa 001464  724430 251511		stpab	sb|10520,x1
aa 001465  000651 351404		eapab	L85
aa 001466  724444 251511		stpab	sb|10532,x1
aa 001467  000534 371404		eaplb	L143		" ""
aa 001470  724432 651511		stplb	sb|10522,x1
aa 001471  000531 371404		eaplb	L144
aa 001472  724446 651511		stplb	sb|10534,x1
9a 001473  400013 353500		eapbb	lp|11		" RE
aa 001474  724434 253511		stpbb	sb|10524,x1
aa 001475  000524 353404		eapbb	L145
aa 001476  724450 253511		stpbb	sb|10536,x1
aa 001477  700605 762111		lprpbp	sb|389,x1		" v
aa 001500  724436 252111		stpbp	sb|10526,x1
aa 001501  000517 352004		eapbp	L146
aa 001502  724452 252111		stpbp	sb|10538,x1
aa 001503  600046 350100		eapap	sp|38		" Errcode
aa 001504  724440 250111		stpap	sb|10528,x1
aa 001505  000514 350004		eapap	L145
aa 001506  724454 250111		stpap	sb|10540,x1
aa 001507  600010 441100		sxl1	sp|8
aa 001510  600030 650100		stplp	sp|24
4a 001511  400052 352120		eapbp	lp|L154,*		" MakeSeg
aa 001512  724424 350111		eapap	sb|10516,x1
aa 001513  700036 670120		tsblp	sb|30,*		" Multics call operator
aa 001514  600010 721100		lxl1	sp|8
aa 001515  700001 764111		lprplp	sb|1,x1
aa 001516  700605 235111  232		lda	sb|389,x1		" v
aa 001517  724426 755111		sta	sb|10518,x1
4a 001520  400054 272120		tsbbp	lp|L148,*		" BCPLaddr
aa 001521  024424 000001		zero	10516,1
aa 001522  724337 756111		stq	sb|10463,x1	" P
aa 001523  724337 236111  233		ldq	sb|10463,x1	" P
aa 001524  000473 116004		cmpq	L152		" Null
aa 001525  000007 601004		tnz	L155
aa 001526  000457 351404		eapab	L156		" "Unable to create object segment ^a."
aa 001527  724426 541111		sprpab	sb|10518,x1
aa 001530  600202 235100		lda	sp|130		" ProgramName
aa 001531  724427 755111		sta	sb|10519,x1
4a 001532  400166 272120		tsbbp	lp|L18,*		" Complain
aa 001533  024424 000002		zero	10516,2
			L155:
aa 001534  000031 710004		tra	L151
			L150:
aa 001535  724337 235111  235		lda	sb|10463,x1	" P
aa 001536  724426 755111		sta	sb|10518,x1
aa 001537  700605 235111		lda	sb|389,x1		" v
aa 001540  724427 755111		sta	sb|10519,x1
4a 001541  400050 272120		tsbbp	lp|L157,*		" ITS
aa 001542  024424 000002		zero	10516,2
aa 001543  700521 756111		stq	sb|337,x1
aa 001544  000410 237004		ldaq	L158		" arglist header
aa 001545  724424 757111		staq	sb|10516,x1	" arg count
aa 001546  700521 761111		lprpab	sb|337,x1
aa 001547  724426 251511		stpab	sb|10518,x1
aa 001550  000451 351404		eapab	L145
aa 001551  724432 251511		stpab	sb|10522,x1
aa 001552  600046 371500		eaplb	sp|38		" Errcode
aa 001553  724430 651511		stplb	sb|10520,x1
aa 001554  000445 371404		eaplb	L145
aa 001555  724434 651511		stplb	sb|10524,x1
aa 001556  600010 441100		sxl1	sp|8
aa 001557  600030 650100		stplp	sp|24
4a 001560  400046 352120		eapbp	lp|L159,*		" UnsnapLinks
aa 001561  724424 350111		eapap	sb|10516,x1
aa 001562  700036 670120		tsblp	sb|30,*		" Multics call operator
aa 001563  600010 721100		lxl1	sp|8
aa 001564  700001 764111		lprplp	sb|1,x1
			L151:
			L149:
aa 001565  724344 353511  236		eapbb	sb|10468,x1	" a vector
aa 001566  700435 543111		sprpbb	sb|285,x1		" AclArray
aa 001567  724356 353511		eapbb	sb|10478,x1	" a vector
aa 001570  700521 543111		sprpbb	sb|337,x1		" Rings
aa 001571  600203 236100  237		ldq	sp|131		" UserID
aa 001572  724426 756111		stq	sb|10518,x1
aa 001573  700435 236111		ldq	sb|285,x1		" AclArray
aa 001574  724427 756111		stq	sb|10519,x1
aa 001575  000040 236007		ldq	32,dl		" 32
aa 001576  724430 756111		stq	sb|10520,x1
4a 001577  400044 272120		tsbbp	lp|L160,*		" MakePl1String
aa 001600  024424 000003		zero	10516,3
aa 001601  700435 763111  238		lprpbb	sb|285,x1		" AclArray
aa 001602  300010 450100		stz	bb|8
aa 001603  000357 237004  239		ldaq	L84
aa 001604  724424 757111		staq	sb|10516,x1	" arg count
aa 001605  724255 350111		eapap	sb|10413,x1	" x
aa 001606  724426 250111		stpap	sb|10518,x1
aa 001607  000412 350004		eapap	L145
aa 001610  724430 250111		stpap	sb|10520,x1
aa 001611  600010 441100		sxl1	sp|8
aa 001612  600030 650100		stplp	sp|24
4a 001613  400042 352120		eapbp	lp|L161,*		" LevelGet
aa 001614  724424 350111		eapap	sb|10516,x1
aa 001615  700036 670120		tsblp	sb|30,*		" Multics call operator
aa 001616  600010 721100		lxl1	sp|8
aa 001617  700001 764111		lprplp	sb|1,x1
aa 001620  724255 236111  240		ldq	sb|10413,x1	" x
aa 001621  700521 761111		lprpab	sb|337,x1		" Rings
aa 001622  100000 756100		stq	ab|0
aa 001623  724255 236111		ldq	sb|10413,x1	" x
aa 001624  700521 765111		lprplb	sb|337,x1		" Rings
aa 001625  500002 756100		stq	lb|2
aa 001626  724255 236111		ldq	sb|10413,x1	" x
aa 001627  700521 763111		lprpbb	sb|337,x1		" Rings
aa 001630  300001 756100		stq	bb|1
aa 001631  000325 237004  241		ldaq	L153
aa 001632  724424 757111		staq	sb|10516,x1	" arg count
aa 001633  700064 760111		lprpap	sb|52,x1		" Dir
aa 001634  724426 250111		stpap	sb|10518,x1
aa 001635  000367 350004		eapap	L140
aa 001636  724442 250111		stpap	sb|10530,x1
aa 001637  700065 762111		lprpbp	sb|53,x1		" Ent
aa 001640  724430 252111		stpbp	sb|10520,x1
aa 001641  000475 352004		eapbp	L85
aa 001642  724444 252111		stpbp	sb|10532,x1
aa 001643  700435 761111		lprpab	sb|285,x1		" AclArray
aa 001644  724432 251511		stpab	sb|10522,x1
aa 001645  000471 351404		eapab	L85
aa 001646  724446 251511		stpab	sb|10534,x1
9a 001647  400012 371500		eaplb	lp|10		" RWA
aa 001650  724434 651511		stplb	sb|10524,x1
aa 001651  000350 371404		eaplb	L145
aa 001652  724450 651511		stplb	sb|10536,x1
aa 001653  700521 763111		lprpbb	sb|337,x1		" Rings
aa 001654  724436 253511		stpbb	sb|10526,x1
aa 001655  000344 353404		eapbb	L145
aa 001656  724452 253511		stpbb	sb|10538,x1
aa 001657  600046 350100		eapap	sp|38		" Errcode
aa 001660  724440 250111		stpap	sb|10528,x1
aa 001661  000340 350004		eapap	L145
aa 001662  724454 250111		stpap	sb|10540,x1
aa 001663  600010 441100		sxl1	sp|8
aa 001664  600030 650100		stplp	sp|24
4a 001665  400040 352120		eapbp	lp|L162,*		" AclAddOne
aa 001666  724424 350111		eapap	sb|10516,x1
aa 001667  700036 670120		tsblp	sb|30,*		" Multics call operator
aa 001670  600010 721100		lxl1	sp|8
aa 001671  700001 764111		lprplp	sb|1,x1
aa 001672  600046 234100  242		szn	sp|38		" Errcode
aa 001673  000007 600004		tze	L163
aa 001674  000243 351404		eapab	L164		" "Unable to change ACL of object segment ^a."
aa 001675  724426 541111		sprpab	sb|10518,x1
aa 001676  600202 236100		ldq	sp|130		" ProgramName
aa 001677  724427 756111		stq	sb|10519,x1
4a 001700  400166 272120		tsbbp	lp|L18,*		" Complain
aa 001701  024424 000002		zero	10516,2
			L163:
aa 001702  724337 236111  243		ldq	sb|10463,x1	" P
aa 001703  724426 756111		stq	sb|10518,x1
4a 001704  400036 272120		tsbbp	lp|L165,*		" BuildObject
aa 001705  024424 000001		zero	10516,1
aa 001706  724255 756111		stq	sb|10413,x1	" x
aa 001707  724337 236111  244		ldq	sb|10463,x1	" P
aa 001710  724426 756111		stq	sb|10518,x1
aa 001711  724255 236111		ldq	sb|10413,x1	" x
aa 001712  724427 756111		stq	sb|10519,x1
4a 001713  400034 272120		tsbbp	lp|L166,*		" SetBitCount
aa 001714  024424 000002		zero	10516,2
aa 001715  700435 236111  245		ldq	sb|285,x1		" AclArray
aa 001716  724426 756111		stq	sb|10518,x1
aa 001717  700605 236111		ldq	sb|389,x1		" v
aa 001720  724427 756111		stq	sb|10519,x1
4a 001721  400050 272120		tsbbp	lp|L157,*		" ITS
aa 001722  024424 000002		zero	10516,2
aa 001723  724355 756111		stq	sb|10477,x1
aa 001724  000226 237004		ldaq	L167		" arglist header
aa 001725  724424 757111		staq	sb|10516,x1	" arg count
aa 001726  700064 761111		lprpab	sb|52,x1		" Dir
aa 001727  724426 251511		stpab	sb|10518,x1
aa 001730  000274 351404		eapab	L140
aa 001731  724440 251511		stpab	sb|10528,x1
aa 001732  700065 765111		lprplb	sb|53,x1		" Ent
aa 001733  724430 651511		stplb	sb|10520,x1
aa 001734  000402 371404		eaplb	L85
aa 001735  724442 651511		stplb	sb|10530,x1
aa 001736  724355 763111		lprpbb	sb|10477,x1
aa 001737  724432 253511		stpbb	sb|10522,x1
aa 001740  000260 353404		eapbb	L146
aa 001741  724444 253511		stpbb	sb|10532,x1
9a 001742  400010 350100		eapap	lp|8		" One
aa 001743  724434 250111		stpap	sb|10524,x1
aa 001744  000255 350004		eapap	L145
aa 001745  724446 250111		stpap	sb|10534,x1
aa 001746  600046 352100		eapbp	sp|38		" Errcode
aa 001747  724436 252111		stpbp	sb|10526,x1
aa 001750  000251 352004		eapbp	L145
aa 001751  724450 252111		stpbp	sb|10536,x1
aa 001752  600010 441100		sxl1	sp|8
aa 001753  600030 650100		stplp	sp|24
4a 001754  400032 352120		eapbp	lp|L168,*		" AclDelete
aa 001755  724424 350111		eapap	sb|10516,x1
aa 001756  700036 670120		tsblp	sb|30,*		" Multics call operator
aa 001757  600010 721100		lxl1	sp|8
aa 001760  700001 764111		lprplp	sb|1,x1
aa 001761  724337 236111  246		ldq	sb|10463,x1	" P
aa 001762  724426 756111		stq	sb|10518,x1
4a 001763  400030 272120		tsbbp	lp|L169,*		" Terminate
aa 001764  024424 000001		zero	10516,1
aa 001765  600226 234100  247		szn	sp|150		" Metering
aa 001766  000007 600004		tze	L170
aa 001767  000033 236007		ldq	27,dl		" MakeObject_Meter
aa 001770  724426 756111		stq	sb|10518,x1
aa 001771  724325 236111		ldq	sb|10453,x1	" UsageTemp
aa 001772  724427 756111		stq	sb|10519,x1
4a 001773  400100 272120		tsbbp	lp|L110,*		" RecordUsage
aa 001774  024424 000002		zero	10516,2
			L170:
			L138:
aa 001775  600226 234100  251		szn	sp|150		" Metering
aa 001776  000111 600004		tze	L171
aa 001777  724426 450111  252		stz	sb|10518,x1
aa 002000  724427 450111		stz	sb|10519,x1
4a 002001  400100 272120		tsbbp	lp|L110,*		" RecordUsage
aa 002002  024424 000002		zero	10516,2
aa 002003  724255 450111  253		stz	sb|10413,x1	" Calls
4a 002004  400172 272120		tsbbp	lp|L12,*		" GetCpuUsage
aa 002005  024424 000000		zero	10516
aa 002006  700002 176111		sbq	sb|2,x1		" StartingTime
aa 002007  700605 756111		stq	sb|389,x1		" Elapsed
aa 002010  724303 450111		stz	sb|10435,x1	" Total
aa 002011  700521 450111  254		stz	sb|337,x1		" i
aa 002012  000014 710004		tra	L172
			L173:
aa 002013  700521 236111  255		ldq	sb|337,x1		" i
aa 002014  000001 076007		adq	1,dl		" 1
aa 002015  600227 761100		lprpab	sp|151		" MeterData
aa 002016  100000 235106		lda	ab|0,ql
aa 002017  724255 055111		asa	sb|10413,x1	" Calls
aa 002020  700521 722111		lxl2	sb|337,x1		" i
aa 002021  600227 765100		lprplb	sp|151		" MeterData
aa 002022  500000 236112		ldq	lb|0,x2
aa 002023  724303 056111		asq	sb|10435,x1	" Total
aa 002024  000003 236007		ldq	3,dl		" 3
aa 002025  700521 056111		asq	sb|337,x1		" i
			L172:
aa 002026  700521 236111		ldq	sb|337,x1		" i
aa 002027  000054 116007		cmpq	44,dl
aa 002030  777763 604404		tmoz	L173
aa 002031  700605 235111  256		lda	sb|389,x1		" Elapsed
aa 002032  724303 175111		sba	sb|10435,x1	" Total
aa 002033  600227 763100		lprpbb	sp|151		" MeterData
aa 002034  300055 755100		sta	bb|45
aa 002035  724255 235111  257		lda	sb|10413,x1	" Calls
aa 002036  600227 760100		lprpap	sp|151		" MeterData
aa 002037  000056 755100		sta	ap|46
aa 002040  700521 450111  258		stz	sb|337,x1		" i
aa 002041  000014 710004		tra	L174
			L175:
aa 002042  700521 723111		lxl3	sb|337,x1		" i
aa 002043  600227 762100		lprpbp	sp|151		" MeterData
aa 002044  200000 234113		szn	bp|0,x3
aa 002045  000006 600004		tze	L176
aa 002046  700521 235111		lda	sb|337,x1		" i
aa 002047  000002 075007		ada	2,dl		" 2
aa 002050  724303 236111		ldq	sb|10435,x1	" Total
aa 002051  600227 761100		lprpab	sp|151		" MeterData
aa 002052  100000 756105		stq	ab|0,al
			L176:
aa 002053  000003 236007		ldq	3,dl		" 3
aa 002054  700521 056111		asq	sb|337,x1		" i
			L174:
aa 002055  700521 236111		ldq	sb|337,x1		" i
aa 002056  000055 116007		cmpq	45,dl		" MeteringOverhead_Meter
aa 002057  777763 604404		tmoz	L175
aa 002060  600230 235100  259		lda	sp|152		" DictionaryDepth
aa 002061  600227 765100		lprplb	sp|151		" MeterData
aa 002062  500062 755100		sta	lb|50
9a 002063  400014 234100  260		szn	lp|12		" StaticMeteringSw
aa 002064  000015 600004		tze	L177
aa 002065  700521 450111		stz	sb|337,x1		" i
aa 002066  000010 710004		tra	L178
			L179:
aa 002067  700521 724111		lxl4	sb|337,x1		" i
aa 002070  600227 763100		lprpbb	sp|151		" MeterData
aa 002071  300000 235114		lda	bb|0,x4
aa 002072  700521 725111		lxl5	sb|337,x1		" i
9a 002073  400015 760100		lprpap	lp|13		" StaticMeterData
aa 002074  000000 055115		asa	ap|0,x5
aa 002075  700521 054111		aos	sb|337,x1		" i
			L178:
aa 002076  700521 235111		lda	sb|337,x1		" i
aa 002077  000063 115007		cmpa	51,dl		" Meters_Length
aa 002100  777767 604404		tmoz	L179
			L177:
aa 002101  700010 234111  261		szn	sb|8,x1		" MetersPrintSw
aa 002102  000005 600004		tze	L180
aa 002103  600227 236100		ldq	sp|151		" MeterData
aa 002104  724426 756111		stq	sb|10518,x1
4a 002105  400026 272120		tsbbp	lp|L181,*		" PrintMeters
aa 002106  024424 000001		zero	10516,1
			L180:
			L171:
4a 002107  400136 272120  265		tsbbp	lp|L77,*		" Cleanup
aa 002110  024424 000000		zero	10516
aa 002111  000226 352004  266		eapbp	L76		" "cleanup"
aa 002112  724426 542111		sprpbp	sb|10518,x1
4a 002113  400024 272120		tsbbp	lp|L182,*		" RevertHandler
aa 002114  024424 000001		zero	10516,1
aa 002115  600042 236100  267		ldq	sp|34		" MONITOR
aa 002116  724426 756111		stq	sb|10518,x1
4a 002117  400076 272120		tsbbp	lp|L111,*		" Close
aa 002120  024424 000001		zero	10516,1
aa 002121  600147 234100  268		szn	sp|103		" Crep
aa 002122  775677 601004		tnz	L4
aa 002123  600215 234100  270		szn	sp|141		" Errorsw
aa 002124  000007 600004		tze	L183
4a 002125  400022 236120  271		ldq	lp|L184,*
aa 002126  600046 756100		stq	sp|38		" Errcode
aa 002127  700062 236111  272		ldq	sb|50,x1		" Arg
aa 002130  724426 756111		stq	sb|10518,x1
4a 002131  400166 272120		tsbbp	lp|L18,*		" Complain
aa 002132  024424 000001		zero	10516,1
			L183:
			L9:
aa 002133  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002134  200000 121100		sblx1	bp|0
aa 002135  700001 764111		lprplp	sb|1,x1
aa 002136  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L164:
aa 002137  000052 125156		zero	42,43630		" "Unable to change ACL of object segment ^a."
aa 002140  141142 154145		zero	49762,55397
aa 002141  040164 157040		zero	16500,56864
aa 002142  143150 141156		zero	50792,49774
aa 002143  147145 040101		zero	52837,16449
aa 002144  103114 040157		zero	34380,16495
aa 002145  146040 157142		zero	52256,56930
aa 002146  152145 143164		zero	54373,50804
aa 002147  040163 145147		zero	16499,51815
aa 002150  155145 156164		zero	55909,56436
aa 002151  040136 141056		zero	16478,49710
			L167:
aa 002152  000012 000004		zero	10,4		" arglist header
aa 002153  000012 000000		zero	10
			L158:
aa 002154  000004 000004		zero	4,4		" arglist header
aa 002155  000004 000000		zero	4
			L153:
aa 002156  000014 000004		zero	12,4		" arglist header
aa 002157  000014 000000		zero	12
			L142:
aa 002160  000016 000004		zero	14,4		" arglist header
aa 002161  000016 000000		zero	14
			L84:
aa 002162  000002 000004		zero	2,4		" arglist header
aa 002163  000002 000000		zero	2
			L36:
aa 002164  000000 000001		zero	0,1		" a table
aa 002165  000000 000001		zero	0,1
aa 002166  000000 000001		zero	0,1
aa 002167  000000 000001		zero	0,1
aa 002170  000000 000001		zero	0,1
aa 002171  000000 000001		zero	0,1
aa 002172  000000 000001		zero	0,1
aa 002173  000000 000001		zero	0,1
aa 002174  000000 000001		zero	0,1
aa 002175  000000 000001		zero	0,1
aa 002176  000000 000001		zero	0,1
aa 002177  000000 000001		zero	0,1
aa 002200  000000 000001		zero	0,1
aa 002201  000000 000001		zero	0,1
aa 002202  000000 000001		zero	0,1
aa 002203  000000 000003		zero	0,3
aa 002204  000000 000001		zero	0,1
			L156:
aa 002205  000043 125156		zero	35,43630		" "Unable to create object segment ^a."
aa 002206  141142 154145		zero	49762,55397
aa 002207  040164 157040		zero	16500,56864
aa 002210  143162 145141		zero	50802,51809
aa 002211  164145 040157		zero	59493,16495
aa 002212  142152 145143		zero	50282,51811
aa 002213  164040 163145		zero	59424,58981
aa 002214  147155 145156		zero	52845,51822
aa 002215  164040 136141		zero	59424,48225
aa 002216  056000 000000		zero	23552
			L152:
aa 002217  007777 000001		zero	4095,1		" Null
			L146:
aa 002220  464000 000000		zero	-104448		" descriptor
			L145:
aa 002221  404000 000000		zero	-129024		" descriptor
			L144:
aa 002222  524000 000000		zero	-88064		" descriptor
			L143:
aa 002223  000000 000000		zero	0		" ""
			L140:
aa 002224  524000 000250		zero	-88064,168	" descriptor
			L134:
aa 002225  000014 157142		zero	12,56930		" "object words"
aa 002226  152145 143164		zero	54373,50804
aa 002227  040167 157162		zero	16503,56946
aa 002230  144163 000000		zero	51315
			L133:
aa 002231  000005 124162		zero	5,43122		" "Trans"
aa 002232  141156 163000		zero	49774,58880
			L124:
aa 002233  000026 141142		zero	22,49762		" "abstract syntax tree*n*n"
aa 002234  163164 162141		zero	58996,58465
aa 002235  143164 040163		zero	50804,16499
aa 002236  171156 164141		zero	62062,59489
aa 002237  170040 164162		zero	61472,59506
aa 002240  145145 012012		zero	51813,5130
			L119:
aa 002241  000027 143162		zero	23,50802		" "cross reference table*n*n"
aa 002242  157163 163040		zero	56947,58912
aa 002243  162145 146145		zero	58469,52325
aa 002244  162145 156143		zero	58469,56419
aa 002245  145040 164141		zero	51744,59489
aa 002246  142154 145012		zero	50284,51722
aa 002247  012000 000000		zero	5120
			L114:
aa 002250  000014 163157		zero	12,58991		" "source lines"
aa 002251  165162 143145		zero	60018,50789
aa 002252  040154 151156		zero	16492,53870
aa 002253  145163 000000		zero	51827
			L113:
aa 002254  000003 103101		zero	3,34369		" "CAE"
aa 002255  105000 000000		zero	35328
			L102:
aa 002256  000005 102103		zero	5,33859		" "BCPL*n"
aa 002257  120114 012000		zero	41036,5120
			L101:
aa 002260  000027 117160		zero	23,40560		" "Options applied:  ^s.*n*n"
aa 002261  164151 157156		zero	59497,56942
aa 002262  163040 141160		zero	58912,49776
aa 002263  160154 151145		zero	57452,53861
aa 002264  144072 040040		zero	51258,16416
aa 002265  136163 056012		zero	48243,23562
aa 002266  012000 000000		zero	5120
			L100:
aa 002267  000051 103157		zero	41,34415		" "Compiled by ^s.  Compiler updated at ^s.*n"
aa 002270  155160 151154		zero	55920,53868
aa 002271  145144 040142		zero	51812,16482
aa 002272  171040 136163		zero	61984,48243
aa 002273  056040 040103		zero	23584,16451
aa 002274  157155 160151		zero	56941,57449
aa 002275  154145 162040		zero	55397,58400
aa 002276  165160 144141		zero	60016,51297
aa 002277  164145 144040		zero	59493,51232
aa 002300  141164 040136		zero	49780,16478
aa 002301  163056 012000		zero	58926,5120
			L99:
aa 002302  000044 103157		zero	36,34415		" "Compilation performed for ^s at ^s.*n"
aa 002303  155160 151154		zero	55920,53868
aa 002304  141164 151157		zero	49780,53871
aa 002305  156040 160145		zero	56352,57445
aa 002306  162146 157162		zero	58470,56946
aa 002307  155145 144040		zero	55909,51232
aa 002310  146157 162040		zero	52335,58400
aa 002311  136163 040141		zero	48243,16481
aa 002312  164040 136163		zero	59424,48243
aa 002313  056012 000000		zero	23562
			L97:
aa 002314  000040 103157		zero	32,34415		" "Compilation listing of file ^s.*n"
aa 002315  155160 151154		zero	55920,53868
aa 002316  141164 151157		zero	49780,53871
aa 002317  156040 154151		zero	56352,55401
aa 002320  163164 151156		zero	58996,53870
aa 002321  147040 157146		zero	52768,56934
aa 002322  040146 151154		zero	16486,53868
aa 002323  145040 136163		zero	51744,48243
aa 002324  056012 000000		zero	23562
			L94:
aa 002325  000005 056154		zero	5,23660		" ".list"
aa 002326  151163 164000		zero	53875,59392
			L90:
aa 002327  000016 124171		zero	14,43129		" "Type program:*n"
aa 002330  160145 040160		zero	57445,16496
aa 002331  162157 147162		zero	58479,52850
aa 002332  141155 072012		zero	49773,29706
			L89:
aa 002333  000007 143157		zero	7,50799		" "console"
aa 002334  156163 157154		zero	56435,56940
aa 002335  145000 000000		zero	51712
			L85:
aa 002336  524000 000040		zero	-88064,32		" descriptor
			L76:
aa 002337  000007 143154		zero	7,50796		" "cleanup"
aa 002340  145141 156165		zero	51809,56437
aa 002341  160000 000000		zero	57344
			L74:
aa 002342  000105 116157		zero	69,40047		" "Not enough room left in stack to perform compilation. Type 'release'."
aa 002343  164040 145156		zero	59424,51822
aa 002344  157165 147150		zero	56949,52840
aa 002345  040162 157157		zero	16498,56943
aa 002346  155040 154145		zero	55840,55397
aa 002347  146164 040151		zero	52340,16489
aa 002350  156040 163164		zero	56352,58996
aa 002351  141143 153040		zero	49763,54816
aa 002352  164157 040160		zero	59503,16496
aa 002353  145162 146157		zero	51826,52335
aa 002354  162155 040143		zero	58477,16483
aa 002355  157155 160151		zero	56941,57449
aa 002356  154141 164151		zero	55393,59497
aa 002357  157156 056040		zero	56942,23584
aa 002360  124171 160145		zero	43129,57445
aa 002361  040047 162145		zero	16423,58469
aa 002362  154145 141163		zero	55397,49779
aa 002363  145047 056000		zero	51751,23552
			L67:
aa 002364  000005 056142		zero	5,23650		" ".bcpl"
aa 002365  143160 154000		zero	50800,55296
			L61:
aa 002366  000004 066061		zero	4,27697		" "6180"
aa 002367  070060 000000		zero	28720
			L43:
aa 002370  777777 777777		zero	-1,-1		" true
			L35:
aa 002371  000004 143162		zero	4,50802		" "crep"
aa 002372  145160 000000		zero	51824
			L34:
aa 002373  000011 165160		zero	9,60016		" "uppercase"
aa 002374  160145 162143		zero	57445,58467
aa 002375  141163 145000		zero	49779,51712
			L33:
aa 002376  000005 157143		zero	5,56931		" "ocode"
aa 002377  157144 145000		zero	56932,51712
			L32:
aa 002400  000005 161165		zero	5,57973		" "quiet"
aa 002401  151145 164000		zero	53861,59392
			L31:
aa 002402  000005 160160		zero	5,57456		" "pprep"
aa 002403  162145 160000		zero	58469,57344
			L30:
aa 002404  000007 163171		zero	7,59001		" "symbols"
aa 002405  155142 157154		zero	55906,56940
aa 002406  163000 000000		zero	58880
			L29:
aa 002407  000004 154151		zero	4,55401		" "list"
aa 002410  163164 000000		zero	58996
			L28:
aa 002411  000004 164151		zero	4,59497		" "time"
aa 002412  155145 000000		zero	55909
			L27:
aa 002413  000014 160162		zero	12,57458		" "print_meters"
aa 002414  151156 164137		zero	53870,59487
aa 002415  155145 164145		zero	55909,59493
aa 002416  162163 000000		zero	58483
			L26:
aa 002417  000005 141154		zero	5,49772		" "alist"
aa 002420  151163 164000		zero	53875,59392
			L25:
aa 002421  000006 163157		zero	6,58991		" "source"
aa 002422  165162 143145		zero	60018,50789
			L24:
aa 002423  000003 155141		zero	3,55905		" "map"
aa 002424  160000 000000		zero	57344
			L23:
aa 002425  000004 164162		zero	4,59506		" "tree"
aa 002426  145145 000000		zero	51813
			L22:
aa 002427  000005 143150		zero	5,50792		" "check"
aa 002430  145143 153000		zero	51811,54784
			L21:
aa 002431  000004 170162		zero	4,61554		" "xref"
aa 002432  145146 000000		zero	51814
			L20:
aa 002433  000003 066064		zero	3,27700		" "645"
aa 002434  065000 000000		zero	27136
			L19:
aa 002435  000010 157160		zero	8,56944		" "optimize"
aa 002436  164151 155151		zero	59497,55913
aa 002437  172145 000000		zero	62565
			L17:
aa 002440  000102 103157		zero	66,34415		" "Compiler debug:  time  print_meters  tree  crep  pprep  645  ocode"
aa 002441  155160 151154		zero	55920,53868
aa 002442  145162 040144		zero	51826,16484
aa 002443  145142 165147		zero	51810,60007
aa 002444  072040 040164		zero	29728,16500
aa 002445  151155 145040		zero	53869,51744
aa 002446  040160 162151		zero	16496,58473
aa 002447  156164 137155		zero	56436,48749
aa 002450  145164 145162		zero	51828,51826
aa 002451  163040 040164		zero	58912,16500
aa 002452  162145 145040		zero	58469,51744
aa 002453  040143 162145		zero	16483,58469
aa 002454  160040 040160		zero	57376,16496
aa 002455  160162 145160		zero	57458,51824
aa 002456  040040 066064		zero	16416,27700
aa 002457  065040 040157		zero	27168,16495
aa 002460  143157 144145		zero	50799,51301
			L16:
aa 002461  000124 107145		zero	84,36453		" "General:  list  source  xref  alist  check  uppercase  symbols  map  optimize  quiet"
aa 002462  156145 162141		zero	56421,58465
aa 002463  154072 040040		zero	55354,16416
aa 002464  154151 163164		zero	55401,58996
aa 002465  040040 163157		zero	16416,58991
aa 002466  165162 143145		zero	60018,50789
aa 002467  040040 170162		zero	16416,61554
aa 002470  145146 040040		zero	51814,16416
aa 002471  141154 151163		zero	49772,53875
aa 002472  164040 040143		zero	59424,16483
aa 002473  150145 143153		zero	53349,50795
aa 002474  040040 165160		zero	16416,60016
aa 002475  160145 162143		zero	57445,58467
aa 002476  141163 145040		zero	49779,51744
aa 002477  040163 171155		zero	16499,62061
aa 002500  142157 154163		zero	50287,55411
aa 002501  040040 155141		zero	16416,55905
aa 002502  160040 040157		zero	57376,16495
aa 002503  160164 151155		zero	57460,53869
aa 002504  151172 145040		zero	53882,51744
aa 002505  040161 165151		zero	16497,60009
aa 002506  145164 000000		zero	51828
			L15:
aa 002507  000106 120141		zero	70,41057		" "Pathname of source file is required as first argument.  Options:*n^a*n^a"
aa 002510  164150 156141		zero	59496,56417
aa 002511  155145 040157		zero	55909,16495
aa 002512  146040 163157		zero	52256,58991
aa 002513  165162 143145		zero	60018,50789
aa 002514  040146 151154		zero	16486,53868
aa 002515  145040 151163		zero	51744,53875
aa 002516  040162 145161		zero	16498,51825
aa 002517  165151 162145		zero	60009,58469
aa 002520  144040 141163		zero	51232,49779
aa 002521  040146 151162		zero	16486,53874
aa 002522  163164 040141		zero	58996,16481
aa 002523  162147 165155		zero	58471,60013
aa 002524  145156 164056		zero	51822,59438
aa 002525  040040 117160		zero	16416,40560
aa 002526  164151 157156		zero	59497,56942
aa 002527  163072 012136		zero	58938,5214
aa 002530  141012 136141		zero	49674,48225
			L10:
aa 002531  000004 142143		zero	4,50275		" "bcpl"
aa 002532  160154 000000		zero	57452
	"	Begin text of AddOption

aa 002533  000011 101144		zero	9,33380		" AddOption
aa 002534  144117 160164		zero	51279,57460
aa 002535  151157 156000		zero	53871,56320
			L2:
aa 002536  000000 213000  276		epaq	0		" set lp to linkage section
aa 002537  700026 764161		lprplp	sb|22,*au
aa 002540  200000 021100		adlx1	bp|0		" BCPL save
aa 002541  700000 542111		sprpbp	sb|0,x1
aa 002542  700001 544111		sprplp	sb|1,x1
aa 002543  700426 620111		eax0	sb|278,x1
aa 002544  777760 360003		anx0	-16,du
aa 002545  700025 740100		stx0	sb|21		" end of save sequence

aa 002546  600176 236100  277		ldq	sp|126		" OptionString
aa 002547  700010 756111		stq	sb|8,x1
4a 002550  400154 272120		tsbbp	lp|L63,*		" Length
aa 002551  000006 000001		zero	6,1
aa 002552  000000 116007		cmpq	0,dl
aa 002553  000010 601004		tnz	L188
aa 002554  700002 236111  278		ldq	sb|2,x1		" s
aa 002555  700010 756111		stq	sb|8,x1
aa 002556  600176 236100		ldq	sp|126		" OptionString
aa 002557  700011 756111		stq	sb|9,x1
4a 002560  400020 272120		tsbbp	lp|L190,*		" CopyString
aa 002561  000006 000002		zero	6,2
aa 002562  000015 710004		tra	L189
			L188:
aa 002563  600176 236100  279		ldq	sp|126		" OptionString
aa 002564  700010 756111		stq	sb|8,x1
aa 002565  000777 236007		ldq	511,dl		" 511
aa 002566  700011 756111		stq	sb|9,x1
aa 002567  600176 236100		ldq	sp|126		" OptionString
aa 002570  700012 756111		stq	sb|10,x1
aa 002571  000012 352004		eapbp	L191		" "  "
aa 002572  700013 542111		sprpbp	sb|11,x1
aa 002573  700002 236111		ldq	sb|2,x1		" s
aa 002574  700014 756111		stq	sb|12,x1
4a 002575  400112 272120		tsbbp	lp|L95,*		" Concatenate
aa 002576  000006 000005		zero	6,5
			L189:
			L187:
aa 002577  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002600  200000 121100		sblx1	bp|0
aa 002601  700001 764111		lprplp	sb|1,x1
aa 002602  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L191:
aa 002603  000002 040040		zero	2,16416		" "  "
	"	Begin text of Wrtime

aa 002604  000006 127162		zero	6,44658		" Wrtime
aa 002605  164151 155145		zero	59497,55909
			L3:
aa 002606  000000 213000  280		epaq	0		" set lp to linkage section
aa 002607  700026 764161		lprplp	sb|22,*au
aa 002610  200000 021100		adlx1	bp|0		" BCPL save
aa 002611  700000 542111		sprpbp	sb|0,x1
aa 002612  700001 544111		sprplp	sb|1,x1
aa 002613  700430 620111		eax0	sb|280,x1
aa 002614  777760 360003		anx0	-16,du
aa 002615  700025 740100		stx0	sb|21		" end of save sequence

aa 002616  700005 236111  281		ldq	sb|5,x1		" Nthings
aa 002617  001750 402007		mpy	1000,dl		" 1000
aa 002620  001750 402007		mpy	1000,dl		" 1000
aa 002621  700003 506111		div	sb|3,x1		" Usage
aa 002622  700007 756111		stq	sb|7,x1		" Rate
aa 002623  700003 236111  282		ldq	sb|3,x1		" Usage
aa 002624  000144 506007		div	100,dl		" 100
aa 002625  001750 506007		div	1000,dl		" 1000
aa 002626  700003 756111		stq	sb|3,x1		" Usage
aa 002627  700003 236111  283		ldq	sb|3,x1		" Usage
aa 002630  000012 506007		div	10,dl		" 10
aa 002631  700010 755111		sta	sb|8,x1		" b
aa 002632  700003 236111		ldq	sb|3,x1		" Usage
aa 002633  000012 506007		div	10,dl		" 10
aa 002634  700011 756111		stq	sb|9,x1		" a
aa 002635  700006 234111  284		szn	sb|6,x1		" Time
aa 002636  000021 600004		tze	L195
aa 002637  600042 236100		ldq	sp|34		" MONITOR
aa 002640  700014 756111		stq	sb|12,x1
aa 002641  000056 352004		eapbp	L196		" "^s time ^d.^d, ^d ^s per second.*n"
aa 002642  700015 542111		sprpbp	sb|13,x1
aa 002643  700002 236111		ldq	sb|2,x1		" ID
aa 002644  700016 756111		stq	sb|14,x1
aa 002645  700011 236111		ldq	sb|9,x1		" a
aa 002646  700017 756111		stq	sb|15,x1
aa 002647  700010 236111		ldq	sb|8,x1		" b
aa 002650  700020 756111		stq	sb|16,x1
aa 002651  700007 236111		ldq	sb|7,x1		" Rate
aa 002652  700021 756111		stq	sb|17,x1
aa 002653  700004 236111		ldq	sb|4,x1		" Thing
aa 002654  700022 756111		stq	sb|18,x1
4a 002655  400110 272120		tsbbp	lp|L98,*		" Format
aa 002656  000012 000007		zero	10,7
			L195:
aa 002657  600156 234100  285		szn	sp|110		" HaveListingFile
aa 002660  000021 600004		tze	L197
aa 002661  600040 236100		ldq	sp|32		" OUTPUT
aa 002662  700014 756111		stq	sb|12,x1
aa 002663  000022 352004		eapbp	L198		" "*n*n*n^s time ^d.^d, ^d ^s per second.*n"
aa 002664  700015 542111		sprpbp	sb|13,x1
aa 002665  700002 236111		ldq	sb|2,x1		" ID
aa 002666  700016 756111		stq	sb|14,x1
aa 002667  700011 236111		ldq	sb|9,x1		" a
aa 002670  700017 756111		stq	sb|15,x1
aa 002671  700010 236111		ldq	sb|8,x1		" b
aa 002672  700020 756111		stq	sb|16,x1
aa 002673  700007 236111		ldq	sb|7,x1		" Rate
aa 002674  700021 756111		stq	sb|17,x1
aa 002675  700004 236111		ldq	sb|4,x1		" Thing
aa 002676  700022 756111		stq	sb|18,x1
4a 002677  400110 272120		tsbbp	lp|L98,*		" Format
aa 002700  000012 000007		zero	10,7
			L197:
			L194:
aa 002701  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002702  200000 121100		sblx1	bp|0
aa 002703  700001 764111		lprplp	sb|1,x1
aa 002704  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L198:
aa 002705  000044 012012		zero	36,5130		" "*n*n*n^s time ^d.^d, ^d ^s per second.*n"
aa 002706  012136 163040		zero	5214,58912
aa 002707  164151 155145		zero	59497,55909
aa 002710  040136 144056		zero	16478,51246
aa 002711  136144 054040		zero	48228,22560
aa 002712  136144 040136		zero	48228,16478
aa 002713  163040 160145		zero	58912,57445
aa 002714  162040 163145		zero	58400,58981
aa 002715  143157 156144		zero	50799,56420
aa 002716  056012 000000		zero	23562
			L196:
aa 002717  000041 136163		zero	33,48243		" "^s time ^d.^d, ^d ^s per second.*n"
aa 002720  040164 151155		zero	16500,53869
aa 002721  145040 136144		zero	51744,48228
aa 002722  056136 144054		zero	23646,51244
aa 002723  040136 144040		zero	16478,51232
aa 002724  136163 040160		zero	48243,16496
aa 002725  145162 040163		zero	51826,16499
aa 002726  145143 157156		zero	51811,56942
aa 002727  144056 012000		zero	51246,5120
	"	Begin text of BcplMeters

aa 002730  000012 102143		zero	10,33891		" BcplMeters
aa 002731  160154 115145		zero	57452,39525
aa 002732  164145 162163		zero	59493,58483
5a 002733  000021 000000		zero	17		" relative pointer to definition for entry
			L199:
aa 002734  000000 213000  288		epaq	0		" set lp to linkage section
aa 002735  700026 764161		lprplp	sb|22,*au
aa 002736  000227 700004		tsx0	L8		" execute Multics save
aa 002737  200000 021100		adlx1	bp|0		" BCPL save
aa 002740  700000 542111		sprpbp	sb|0,x1
aa 002741  700001 544111		sprplp	sb|1,x1
aa 002742  700427 620111		eax0	sb|279,x1
aa 002743  777760 360003		anx0	-16,du
aa 002744  700025 740100		stx0	sb|21		" end of save sequence

aa 002745  000214 352004  289		eapbp	L204		" "bcpl$meters"
aa 002746  600045 542100		sprpbp	sp|37		" ProgramID
aa 002747  600046 450100		stz	sp|38		" Errcode
4a 002750  400170 272120  290		tsbbp	lp|L14,*		" Pl1NumbArgs
aa 002751  000024 000000		zero	20
aa 002752  000000 116007		cmpq	0,dl
aa 002753  000005 601004		tnz	L205
aa 002754  000171 352004		eapbp	L206		" "Options are:  print  reset  meter  no_meter"
aa 002755  700026 542111		sprpbp	sb|22,x1
4a 002756  400166 272120		tsbbp	lp|L18,*		" Complain
aa 002757  000024 000001		zero	20,1
			L205:
aa 002760  707070 236007  292		ldq	-29128,dl		" Empty
aa 002761  700003 756111		stq	sb|3,x1		" Start
aa 002762  700002 450111		stz	sb|2,x1		" Print
aa 002763  700004 450111		stz	sb|4,x1		" Reset
aa 002764  000001 236007  295		ldq	1,dl		" OptNegatable
aa 002765  700012 756111		stq	sb|10,x1
aa 002766  000001 236007		ldq	1,dl		" OptNegatable
aa 002767  700011 756111		stq	sb|9,x1
aa 002770  000001 236007		ldq	1,dl		" OptNegatable
aa 002771  700010 756111		stq	sb|8,x1
aa 002772  700010 352111		eapbp	sb|8,x1		" a list
aa 002773  700007 542111		sprpbp	sb|7,x1		" Flags
aa 002774  700003 352111  294		eapbp	sb|3,x1		" Start
aa 002775  700016 542111		sprpbp	sb|14,x1
aa 002776  700002 352111		eapbp	sb|2,x1		" Print
aa 002777  700014 542111		sprpbp	sb|12,x1
aa 003000  700004 352111		eapbp	sb|4,x1		" Reset
aa 003001  700015 542111		sprpbp	sb|13,x1
aa 003002  700014 352111		eapbp	sb|12,x1		" a list
aa 003003  700006 542111		sprpbp	sb|6,x1		" Pointers
aa 003004  000137 352004  293		eapbp	L207		" "print"
aa 003005  700020 542111		sprpbp	sb|16,x1
aa 003006  000133 352004		eapbp	L208		" "meter"
aa 003007  700022 542111		sprpbp	sb|18,x1
aa 003010  000127 352004		eapbp	L209		" "reset"
aa 003011  700021 542111		sprpbp	sb|17,x1
aa 003012  700020 352111		eapbp	sb|16,x1		" a list
aa 003013  700005 542111		sprpbp	sb|5,x1		" Names
aa 003014  000001 236007  296		ldq	1,dl		" 1
aa 003015  600050 756100		stq	sp|40		" ArgIndex
4a 003016  400164 352120  297		eapbp	lp|L37,*		" GetNextCommandArg
aa 003017  700026 542111		sprpbp	sb|22,x1
aa 003020  000003 236007		ldq	3,dl		" 3
aa 003021  700027 756111		stq	sb|23,x1
aa 003022  700005 236111		ldq	sb|5,x1		" Names
aa 003023  700030 756111		stq	sb|24,x1
aa 003024  700006 236111		ldq	sb|6,x1		" Pointers
aa 003025  700031 756111		stq	sb|25,x1
aa 003026  700007 236111		ldq	sb|7,x1		" Flags
aa 003027  700032 756111		stq	sb|26,x1
aa 003030  700033 450111		stz	sb|27,x1
4a 003031  400162 272120		tsbbp	lp|L38,*		" OptionParse
aa 003032  000024 000006		zero	20,6
9a 003033  400015 234100  299		szn	lp|13		" StaticMeterData
aa 003034  000021 601004		tnz	L210
aa 003035  000064 236007  300		ldq	52,dl
aa 003036  700026 756111		stq	sb|22,x1
4a 003037  400016 272120		tsbbp	lp|L211,*		" Allocate
aa 003040  000024 000001		zero	20,1
aa 003041  700017 756111		stq	sb|15,x1		" x
aa 003042  700013 450111  301		stz	sb|11,x1		" i
aa 003043  000005 710004		tra	L212
			L213:
aa 003044  700013 726111		lxl6	sb|11,x1		" i
aa 003045  700017 762111		lprpbp	sb|15,x1		" x
aa 003046  200000 450116		stz	bp|0,x6
aa 003047  700013 054111		aos	sb|11,x1		" i
			L212:
aa 003050  700013 236111		ldq	sb|11,x1		" i
aa 003051  000063 116007		cmpq	51,dl		" Meters_Length
aa 003052  777772 604404		tmoz	L213
aa 003053  700017 235111  302		lda	sb|15,x1		" x
9a 003054  400015 755100		sta	lp|13		" StaticMeterData
			L210:
aa 003055  700003 235111  304		lda	sb|3,x1		" Start
aa 003056  707070 115007		cmpa	-29128,dl		" Empty
aa 003057  000003 600004		tze	L214
aa 003060  700003 236111		ldq	sb|3,x1		" Start
9a 003061  400014 756100		stq	lp|12		" StaticMeteringSw
			L214:
aa 003062  700002 234111  305		szn	sb|2,x1		" Print
aa 003063  000025 600004		tze	L215
9a 003064  400015 761100  306		lprpab	lp|13		" StaticMeterData
aa 003065  100056 234100		szn	ab|46
aa 003066  000005 601004		tnz	L216
aa 003067  000040 371404		eaplb	L217		" "No metering data available."
aa 003070  700026 545111		sprplb	sb|22,x1
4a 003071  400166 272120		tsbbp	lp|L18,*		" Complain
aa 003072  000024 000001		zero	20,1
			L216:
aa 003073  000042 236007  307		ldq	34,dl
aa 003074  700026 756111		stq	sb|22,x1
4a 003075  400174 272120		tsbbp	lp|L11,*		" Open
aa 003076  000024 000001		zero	20,1
aa 003077  600040 756100		stq	sp|32		" OUTPUT
9a 003100  400015 236100  308		ldq	lp|13		" StaticMeterData
aa 003101  700026 756111		stq	sb|22,x1
4a 003102  400026 272120		tsbbp	lp|L181,*		" PrintMeters
aa 003103  000024 000001		zero	20,1
aa 003104  600040 236100  309		ldq	sp|32		" OUTPUT
aa 003105  700026 756111		stq	sb|22,x1
4a 003106  400076 272120		tsbbp	lp|L111,*		" Close
aa 003107  000024 000001		zero	20,1
			L215:
aa 003110  700004 234111  311		szn	sb|4,x1		" Reset
aa 003111  000012 600004		tze	L218
aa 003112  700017 450111		stz	sb|15,x1		" i
aa 003113  000005 710004		tra	L219
			L220:
aa 003114  700017 722111		lxl2	sb|15,x1		" i
9a 003115  400015 765100		lprplb	lp|13		" StaticMeterData
aa 003116  500000 450112		stz	lb|0,x2
aa 003117  700017 054111		aos	sb|15,x1		" i
			L219:
aa 003120  700017 236111		ldq	sb|15,x1		" i
aa 003121  000063 116007		cmpq	51,dl		" Meters_Length
aa 003122  777772 604404		tmoz	L220
			L218:
			L203:
aa 003123  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 003124  200000 121100		sblx1	bp|0
aa 003125  700001 764111		lprplp	sb|1,x1
aa 003126  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L217:
aa 003127  000033 116157		zero	27,40047		" "No metering data available."
aa 003130  040155 145164		zero	16493,51828
aa 003131  145162 151156		zero	51826,53870
aa 003132  147040 144141		zero	52768,51297
aa 003133  164141 040141		zero	59489,16481
aa 003134  166141 151154		zero	60513,53868
aa 003135  141142 154145		zero	49762,55397
aa 003136  056000 000000		zero	23552
			L209:
aa 003137  000005 162145		zero	5,58469		" "reset"
aa 003140  163145 164000		zero	58981,59392
			L208:
aa 003141  000005 155145		zero	5,55909		" "meter"
aa 003142  164145 162000		zero	59493,58368
			L207:
aa 003143  000005 160162		zero	5,57458		" "print"
aa 003144  151156 164000		zero	53870,59392
			L206:
aa 003145  000053 117160		zero	43,40560		" "Options are:  print  reset  meter  no_meter"
aa 003146  164151 157156		zero	59497,56942
aa 003147  163040 141162		zero	58912,49778
aa 003150  145072 040040		zero	51770,16416
aa 003151  160162 151156		zero	57458,53870
aa 003152  164040 040162		zero	59424,16498
aa 003153  145163 145164		zero	51827,51828
aa 003154  040040 155145		zero	16416,55909
aa 003155  164145 162040		zero	59493,58400
aa 003156  040156 157137		zero	16494,56927
aa 003157  155145 164145		zero	55909,59493
aa 003160  162000 000000		zero	58368
			L204:
aa 003161  000013 142143		zero	11,50275		" "bcpl$meters"
aa 003162  160154 044155		zero	57452,18541
aa 003163  145164 145162		zero	51828,51826
aa 003164  163000 000000		zero	58880

	"	Local subroutine to help enter BCPL environment

			L8:
aa 003165  004000 627000		eax7	2048		" Multics save sequence
aa 003166  700040 272120		tsbbp	sb|32,*
aa 003167  600620 621100		eax1	sp|400
aa 003170  600030 650100		stplp	sp|24
aa 003171  777775 350010		eapap	-3,x0
aa 003172  600026 250100		stpap	sp|22
aa 003173  000000 272010		tsbbp	0,x0		" simulate standard BCPL call
aa 003174  000000 000000		zero	0
aa 003175  700042 710120		tra	sb|34,*		" Multics return
	"	Definition section part one - external entry points

5a 000000  000016 000000		" pointer to first definition
aa 000001  000000 600000		" flags: new format, ignore header
aa 000002  000000 000000		" list terminator

aa 000003  013142 143160		" "bcpl_driver"
aa 000004  154137 144162
aa 000005  151166 145162
aa 000006  006155 145164		" "meters"
aa 000007  145162 163000
aa 000010  004142 143160		" "bcpl"
aa 000011  154000 000000
aa 000012  014163 171155		" "symbol_table"
aa 000013  142157 154137
aa 000014  164141 142154
aa 000015  145000 000000

	"	Segname definition for bcpl_driver

55 000016  000021 000002		" forward, backward threads
5a 000017  000002 400003		" value defined, class flags
55 000020  000003 000021		" name pointer, first entry def

	"	Definition for meters

55 000021  000024 000016		" forward, backward threads
0a 000022  002734 500000		" value defined, class flags
55 000023  000006 000016		" name pointer, segname def pointer

	"	Definition for bcpl

55 000024  000027 000021		" forward, backward threads
0a 000025  000005 500000		" value defined, class flags
55 000026  000010 000016		" name pointer, segname def pointer

	"	Definition for symbol_table

55 000027  000002 000024		" forward, backward threads
6a 000030  000000 400002		" value defined, class flags
55 000031  000012 000016		" name pointer, segname def pointer
	"	Definition section part two - symbolic info for external references

aa 000032  021142 143160		" "bcpl_filesys_lib_"
aa 000033  154137 146151
aa 000034  154145 163171
aa 000035  163137 154151
aa 000036  142137 000000
aa 000037  010101 154154		" "Allocate"
aa 000040  157143 141164
aa 000041  145000 000000
5a 000042  000043 000000
aa 000043  000004 000000
55 000044  000032 000037
aa 000045  015142 143160		" "bcpl_strings_"
aa 000046  154137 163164
aa 000047  162151 156147
aa 000050  163137 000000
aa 000051  012103 157160		" "CopyString"
aa 000052  171123 164162
aa 000053  151156 147000
5a 000054  000055 000000
aa 000055  000004 000000
55 000056  000045 000051
aa 000057  014145 162162		" "error_table_"
aa 000060  157162 137164
aa 000061  141142 154145
aa 000062  137000 000000
aa 000063  022164 162141		" "translation_failed"
aa 000064  156163 154141
aa 000065  164151 157156
aa 000066  137146 141151
aa 000067  154145 144000
5a 000070  000071 000000
aa 000071  000004 000000
55 000072  000057 000063
aa 000073  021142 143160		" "bcpl_command_lib_"
aa 000074  154137 143157
aa 000075  155155 141156
aa 000076  144137 154151
aa 000077  142137 000000
aa 000100  015122 145166		" "RevertHandler"
aa 000101  145162 164110
aa 000102  141156 144154
aa 000103  145162 000000
5a 000104  000105 000000
aa 000105  000004 000000
55 000106  000073 000100
aa 000107  020142 143160		" "bcpl_meter_print"
aa 000110  154137 155145
aa 000111  164145 162137
aa 000112  160162 151156
aa 000113  164000 000000
aa 000114  013120 162151		" "PrintMeters"
aa 000115  156164 115145
aa 000116  164145 162163
5a 000117  000120 000000
aa 000120  000004 000000
55 000121  000107 000114
aa 000122  011124 145162		" "Terminate"
aa 000123  155151 156141
aa 000124  164145 000000
5a 000125  000126 000000
aa 000126  000004 000000
55 000127  000032 000122
aa 000130  004150 143163		" "hcs_"
aa 000131  137000 000000
aa 000132  012141 143154		" "acl_delete"
aa 000133  137144 145154
aa 000134  145164 145000
5a 000135  000136 000000
aa 000136  000004 000000
55 000137  000130 000132
aa 000140  013123 145164		" "SetBitCount"
aa 000141  102151 164103
aa 000142  157165 156164
5a 000143  000144 000000
aa 000144  000004 000000
55 000145  000032 000140
aa 000146  010142 143160		" "bcpl_cg0"
aa 000147  154137 143147
aa 000150  060000 000000
aa 000151  013102 165151		" "BuildObject"
aa 000152  154144 117142
aa 000153  152145 143164
5a 000154  000155 000000
aa 000155  000004 000000
55 000156  000146 000151
aa 000157  010141 143154		" "acl_add1"
aa 000160  137141 144144
aa 000161  061000 000000
5a 000162  000163 000000
aa 000163  000004 000000
55 000164  000130 000157
aa 000165  003143 165137		" "cu_"
aa 000166  011154 145166		" "level_get"
aa 000167  145154 137147
aa 000170  145164 000000
5a 000171  000172 000000
aa 000172  000004 000000
55 000173  000165 000166
aa 000174  015115 141153		" "MakePl1String"
aa 000175  145120 154061
aa 000176  123164 162151
aa 000177  156147 000000
5a 000200  000201 000000
aa 000201  000004 000000
55 000202  000045 000174
aa 000203  005164 145162		" "term_"
aa 000204  155137 000000
aa 000205  015156 157155		" "nomakeunknown"
aa 000206  141153 145165
aa 000207  156153 156157
aa 000210  167156 000000
5a 000211  000212 000000
aa 000212  000004 000000
55 000213  000203 000205
aa 000214  022142 143160		" "bcpl_machine_code_"
aa 000215  154137 155141
aa 000216  143150 151156
aa 000217  145137 143157
aa 000220  144145 137000
aa 000221  003111 124123		" "ITS"
5a 000222  000223 000000
aa 000223  000004 000000
55 000224  000214 000221
aa 000225  010155 141153		" "make_seg"
aa 000226  145137 163145
aa 000227  147000 000000
5a 000230  000231 000000
aa 000231  000004 000000
55 000232  000130 000225
aa 000233  010102 103120		" "BCPLaddr"
aa 000234  114141 144144
aa 000235  162000 000000
5a 000236  000237 000000
aa 000237  000004 000000
55 000240  000214 000233
aa 000241  010151 156151		" "initiate"
aa 000242  164151 141164
aa 000243  145000 000000
5a 000244  000245 000000
aa 000245  000004 000000
55 000246  000130 000241
aa 000247  011147 145164		" "get_wdir_"
aa 000250  137167 144151
aa 000251  162137 000000
5a 000252  000253 000000
aa 000253  000004 000000
55 000254  000247 000247
aa 000255  022127 162151		" "WriteObjectListing"
aa 000256  164145 117142
aa 000257  152145 143164
aa 000260  114151 163164
aa 000261  151156 147000
5a 000262  000263 000000
aa 000263  000004 000000
55 000264  000146 000255
aa 000265  013142 143160		" "bcpl_trans0"
aa 000266  154137 164162
aa 000267  141156 163060
aa 000270  005124 162141		" "Trans"
aa 000271  156163 000000
5a 000272  000273 000000
aa 000273  000004 000000
55 000274  000265 000270
aa 000275  006103 147111		" "CgInit"
aa 000276  156151 164000
5a 000277  000300 000000
aa 000300  000004 000000
55 000301  000146 000275
aa 000302  012142 143160		" "bcpl_plist"
aa 000303  154137 160154
aa 000304  151163 164000
aa 000305  005120 154151		" "Plist"
aa 000306  163164 000000
5a 000307  000310 000000
aa 000310  000004 000000
55 000311  000302 000305
aa 000312  005120 156141		" "Pname"
aa 000313  155145 000000
5a 000314  000315 000000
aa 000315  000004 000000
55 000316  000302 000312
aa 000317  007127 162151		" "Writech"
aa 000320  164145 143150
5a 000321  000322 000000
aa 000322  000004 000000
55 000323  000214 000317
aa 000324  017142 143160		" "bcpl_stream_io_"
aa 000325  154137 163164
aa 000326  162145 141155
aa 000327  137151 157137
aa 000330  005103 154157		" "Close"
aa 000331  163145 000000
5a 000332  000333 000000
aa 000333  000004 000000
55 000334  000324 000330
aa 000335  014142 143160		" "bcpl_utility"
aa 000336  154137 165164
aa 000337  151154 151164
aa 000340  171000 000000
aa 000341  013122 145143		" "RecordUsage"
aa 000342  157162 144125
aa 000343  163141 147145
5a 000344  000345 000000
aa 000345  000004 000000
55 000346  000335 000341
aa 000347  011142 143160		" "bcpl_cae0"
aa 000350  154137 143141
aa 000351  145060 000000
aa 000352  003103 101105		" "CAE"
5a 000353  000354 000000
aa 000354  000004 000000
55 000355  000347 000352
aa 000356  011142 143160		" "bcpl_lex0"
aa 000357  154137 154145
aa 000360  170060 000000
aa 000361  007114 145170		" "LexInit"
aa 000362  111156 151164
5a 000363  000364 000000
aa 000364  000004 000000
55 000365  000356 000361
aa 000366  014123 141166		" "SaveOldUsage"
aa 000367  145117 154144
aa 000370  125163 141147
aa 000371  145000 000000
5a 000372  000373 000000
aa 000373  000004 000000
55 000374  000335 000366
aa 000375  006106 157162		" "Format"
aa 000376  155141 164000
5a 000377  000400 000000
aa 000400  000004 000000
55 000401  000324 000375
aa 000402  013103 157156		" "Concatenate"
aa 000403  143141 164145
aa 000404  156141 164145
5a 000405  000406 000000
aa 000406  000004 000000
55 000407  000045 000402
aa 000410  011107 145164		" "GetStream"
aa 000411  123164 162145
aa 000412  141155 000000
5a 000413  000414 000000
aa 000414  000004 000000
55 000415  000335 000410
aa 000416  006127 162151		" "WriteS"
aa 000417  164145 123000
5a 000420  000421 000000
aa 000421  000004 000000
55 000422  000324 000416
aa 000423  015147 145164		" "get_group_id_"
aa 000424  137147 162157
aa 000425  165160 137151
aa 000426  144137 000000
5a 000427  000430 000000
aa 000430  000004 000000
55 000431  000423 000423
aa 000432  016115 141153		" "MakeTimeString"
aa 000433  145124 151155
aa 000434  145123 164162
aa 000435  151156 147000
5a 000436  000437 000000
aa 000437  000004 000000
55 000440  000335 000432
aa 000441  014122 141167		" "RawClockTime"
aa 000442  103154 157143
aa 000443  153124 151155
aa 000444  145000 000000
5a 000445  000446 000000
aa 000446  000004 000000
55 000447  000214 000441
aa 000450  013142 157165		" "bound_bcpl_"
aa 000451  156144 137142
aa 000452  143160 154137
5a 000453  000454 000000
aa 000454  000004 000000
55 000455  000450 000012
aa 000456  014142 143160		" "bcpl_version"
aa 000457  154137 166145
aa 000460  162163 151157
aa 000461  156000 000000
aa 000462  012107 145164		" "GetVersion"
aa 000463  126145 162163
aa 000464  151157 156000
5a 000465  000466 000000
aa 000466  000004 000000
55 000467  000456 000462
aa 000470  017123 145164		" "SetOverflowMask"
aa 000471  117166 145162
aa 000472  146154 157167
aa 000473  115141 163153
5a 000474  000475 000000
aa 000475  000004 000000
55 000476  000214 000470
aa 000477  012123 145164		" "SetHandler"
aa 000500  110141 156144
aa 000501  154145 162000
5a 000502  000503 000000
aa 000503  000004 000000
55 000504  000073 000477
aa 000505  007103 154145		" "Cleanup"
aa 000506  141156 165160
5a 000507  000510 000000
aa 000510  000004 000000
55 000511  000335 000505
aa 000512  015125 164151		" "UtilitiesInit"
aa 000513  154151 164151
aa 000514  145163 111156
aa 000515  151164 000000
5a 000516  000517 000000
aa 000517  000004 000000
55 000520  000335 000512
aa 000521  016115 141153		" "MakeBcplString"
aa 000522  145102 143160
aa 000523  154123 164162
aa 000524  151156 147000
5a 000525  000526 000000
aa 000526  000004 000000
55 000527  000045 000521
aa 000530  015123 160154		" "SplitPathname"
aa 000531  151164 120141
aa 000532  164150 156141
aa 000533  155145 000000
5a 000534  000535 000000
aa 000535  000004 000000
55 000536  000032 000530
aa 000537  016105 170160		" "ExpandPathname"
aa 000540  141156 144120
aa 000541  141164 150156
aa 000542  141155 145000
5a 000543  000544 000000
aa 000544  000004 000000
55 000545  000032 000537
aa 000546  013105 161165		" "EqualString"
aa 000547  141154 123164
aa 000550  162151 156147
5a 000551  000552 000000
aa 000552  000004 000000
55 000553  000045 000546
aa 000554  006123 165142		" "Substr"
aa 000555  163164 162000
5a 000556  000557 000000
aa 000557  000004 000000
55 000560  000045 000554
aa 000561  006114 145156		" "Length"
aa 000562  147164 150000
5a 000563  000564 000000
aa 000564  000004 000000
55 000565  000045 000561
aa 000566  014120 154061		" "Pl1ArgString"
aa 000567  101162 147123
aa 000570  164162 151156
aa 000571  147000 000000
5a 000572  000573 000000
aa 000573  000004 000000
55 000574  000073 000566
aa 000575  011123 145164		" "SetLength"
aa 000576  114145 156147
aa 000577  164150 000000
5a 000600  000601 000000
aa 000601  000004 000000
55 000602  000045 000575
aa 000603  013117 160164		" "OptionParse"
aa 000604  151157 156120
aa 000605  141162 163145
5a 000606  000607 000000
aa 000607  000004 000000
55 000610  000073 000603
aa 000611  021107 145164		" "GetNextCommandArg"
aa 000612  116145 170164
aa 000613  103157 155155
aa 000614  141156 144101
aa 000615  162147 000000
5a 000616  000617 000000
aa 000617  000004 000000
55 000620  000073 000611
aa 000621  010103 157155		" "Complain"
aa 000622  160154 141151
aa 000623  156000 000000
5a 000624  000625 000000
aa 000625  000004 000000
55 000626  000073 000621
aa 000627  013120 154061		" "Pl1NumbArgs"
aa 000630  116165 155142
aa 000631  101162 147163
5a 000632  000633 000000
aa 000633  000004 000000
55 000634  000073 000627
aa 000635  013107 145164		" "GetCpuUsage"
aa 000636  103160 165125
aa 000637  163141 147145
5a 000640  000641 000000
aa 000641  000004 000000
55 000642  000032 000635
aa 000643  004117 160145		" "Open"
aa 000644  156000 000000
5a 000645  000646 000000
aa 000646  000004 000000
55 000647  000324 000643
	"	Linkage section - static variables and external links

aa 000000  000000 000000		" linkage header
0a 000001  003176 000000		" address of defs
aa 000002  000000 000000
aa 000003  000000 000000
aa 000004  000000 000000
aa 000005  000000 000000
2a 000006  000016 000176		" offset to links, total length
aa 000007  000000 000176		" obsolete length

	"	Static variables

aa 000010  000000 000001		zero	0,1		" One
aa 000011  000000 000000		zero	0		" Zero
aa 000012  000000 000013		zero	0,11		" RWA
aa 000013  000000 000014		zero	0,12		" RE
aa 000014  000000 000000		zero	0		" StaticMeteringSw
aa 000015  000000 000000		zero	0		" StaticMeterData

	"	External link pairs

			L211:
3a 000016  777762 000046		" "bcpl_filesys_lib_$Allocate"
5a 000017  000042 000000
			L190:
3a 000020  777760 000046		" "bcpl_strings_$CopyString"
5a 000021  000054 000000
			L184:
3a 000022  777756 000046		" "error_table_$translation_failed"
5a 000023  000070 000000
			L182:
3a 000024  777754 000046		" "bcpl_command_lib_$RevertHandler"
5a 000025  000104 000000
			L181:
3a 000026  777752 000046		" "bcpl_meter_print$PrintMeters"
5a 000027  000117 000000
			L169:
3a 000030  777750 000046		" "bcpl_filesys_lib_$Terminate"
5a 000031  000125 000000
			L168:
3a 000032  777746 000046		" "hcs_$acl_delete"
5a 000033  000135 000000
			L166:
3a 000034  777744 000046		" "bcpl_filesys_lib_$SetBitCount"
5a 000035  000143 000000
			L165:
3a 000036  777742 000046		" "bcpl_cg0$BuildObject"
5a 000037  000154 000000
			L162:
3a 000040  777740 000046		" "hcs_$acl_add1"
5a 000041  000162 000000
			L161:
3a 000042  777736 000046		" "cu_$level_get"
5a 000043  000171 000000
			L160:
3a 000044  777734 000046		" "bcpl_strings_$MakePl1String"
5a 000045  000200 000000
			L159:
3a 000046  777732 000046		" "term_$nomakeunknown"
5a 000047  000211 000000
			L157:
3a 000050  777730 000046		" "bcpl_machine_code_$ITS"
5a 000051  000222 000000
			L154:
3a 000052  777726 000046		" "hcs_$make_seg"
5a 000053  000230 000000
			L148:
3a 000054  777724 000046		" "bcpl_machine_code_$BCPLaddr"
5a 000055  000236 000000
			L147:
3a 000056  777722 000046		" "hcs_$initiate"
5a 000057  000244 000000
			L141:
3a 000060  777720 000046		" "get_wdir_"
5a 000061  000252 000000
			L136:
3a 000062  777716 000046		" "bcpl_cg0$WriteObjectListing"
5a 000063  000262 000000
			L130:
3a 000064  777714 000046		" "bcpl_trans0$Trans"
5a 000065  000272 000000
			L129:
3a 000066  777712 000046		" "bcpl_cg0$CgInit"
5a 000067  000277 000000
			L125:
3a 000070  777710 000046		" "bcpl_plist$Plist"
5a 000071  000307 000000
			L120:
3a 000072  777706 000046		" "bcpl_plist$Pname"
5a 000073  000314 000000
			L118:
3a 000074  777704 000046		" "bcpl_machine_code_$Writech"
5a 000075  000321 000000
			L111:
3a 000076  777702 000046		" "bcpl_stream_io_$Close"
5a 000077  000332 000000
			L110:
3a 000100  777700 000046		" "bcpl_utility$RecordUsage"
5a 000101  000344 000000
			L107:
3a 000102  777676 000046		" "bcpl_cae0$CAE"
5a 000103  000353 000000
			L106:
3a 000104  777674 000046		" "bcpl_lex0$LexInit"
5a 000105  000363 000000
			L104:
3a 000106  777672 000046		" "bcpl_utility$SaveOldUsage"
5a 000107  000372 000000
			L98:
3a 000110  777670 000046		" "bcpl_stream_io_$Format"
5a 000111  000377 000000
			L95:
3a 000112  777666 000046		" "bcpl_strings_$Concatenate"
5a 000113  000405 000000
			L92:
3a 000114  777664 000046		" "bcpl_utility$GetStream"
5a 000115  000413 000000
			L91:
3a 000116  777662 000046		" "bcpl_stream_io_$WriteS"
5a 000117  000420 000000
			L86:
3a 000120  777660 000046		" "get_group_id_"
5a 000121  000427 000000
			L83:
3a 000122  777656 000046		" "bcpl_utility$MakeTimeString"
5a 000123  000436 000000
			L82:
3a 000124  777654 000046		" "bcpl_machine_code_$RawClockTime"
5a 000125  000445 000000
			L81:
3a 000126  777652 000046		" "bound_bcpl_$symbol_table"
5a 000127  000453 000000
			L80:
3a 000130  777650 000046		" "bcpl_version$GetVersion"
5a 000131  000465 000000
			L79:
3a 000132  777646 000046		" "bcpl_machine_code_$SetOverflowMask"
5a 000133  000474 000000
			L78:
3a 000134  777644 000046		" "bcpl_command_lib_$SetHandler"
5a 000135  000502 000000
			L77:
3a 000136  777642 000046		" "bcpl_utility$Cleanup"
5a 000137  000507 000000
			L75:
3a 000140  777640 000046		" "bcpl_utility$UtilitiesInit"
5a 000141  000516 000000
			L72:
3a 000142  777636 000046		" "bcpl_strings_$MakeBcplString"
5a 000143  000525 000000
			L70:
3a 000144  777634 000046		" "bcpl_filesys_lib_$SplitPathname"
5a 000145  000534 000000
			L69:
3a 000146  777632 000046		" "bcpl_filesys_lib_$ExpandPathname"
5a 000147  000543 000000
			L68:
3a 000150  777630 000046		" "bcpl_strings_$EqualString"
5a 000151  000551 000000
			L65:
3a 000152  777626 000046		" "bcpl_strings_$Substr"
5a 000153  000556 000000
			L63:
3a 000154  777624 000046		" "bcpl_strings_$Length"
5a 000155  000563 000000
			L62:
3a 000156  777622 000046		" "bcpl_command_lib_$Pl1ArgString"
5a 000157  000572 000000
			L47:
3a 000160  777620 000046		" "bcpl_strings_$SetLength"
5a 000161  000600 000000
			L38:
3a 000162  777616 000046		" "bcpl_command_lib_$OptionParse"
5a 000163  000606 000000
			L37:
3a 000164  777614 000046		" "bcpl_command_lib_$GetNextCommandArg"
5a 000165  000616 000000
			L18:
3a 000166  777612 000046		" "bcpl_command_lib_$Complain"
5a 000167  000624 000000
			L14:
3a 000170  777610 000046		" "bcpl_command_lib_$Pl1NumbArgs"
5a 000171  000632 000000
			L12:
3a 000172  777606 000046		" "bcpl_filesys_lib_$GetCpuUsage"
5a 000173  000640 000000
			L11:
3a 000174  777604 000046		" "bcpl_stream_io_$Open"
5a 000175  000645 000000
	"	Symbol section header

aa 000000  000000 000001		" version number of header structure
aa 000001  163171 155142		" "symbtree"
aa 000002  164162 145145
aa 000003  000000 000003		" compiler version number
aa 000004  000000 101170		" date/time compiler modified
aa 000005  533311 032072		" 09/25/73  0959.1 mst Tue
aa 000006  000000 102333		" time of this compilation
aa 000007  437435 261203		" 01/24/75  0658.6 mst Fri
aa 000010  142143 160154		" "bcpl    "
aa 000011  040040 040040
aa 000012  000046 000035		" compiler version name - pointer, length
aa 000013  000056 000024		" user id - pointer, length
aa 000014  000063 000043		" comment string - pointer, length
aa 000015  000002 000002		" text and linkage boundaries
aa 000016  000024 000000		" source map, symbol tree root
7a 000017  000000 000144		" section header pointer, block size
aa 000020  000000 000144		" next block pointer, rel_text
aa 000021  000000 000236		" rel_def, rel_link
aa 000022  000264 000144		" rel_symbol, default truncate
aa 000023  000024 000000		" optional truncate, unused
aa 000024  000000 000001		" source files map: version number
aa 000025  000000 000004		"                   number of files
aa 000026  000074 000052		" bcpl_driver
aa 000027  023333 611417		" last modified on
aa 000030  000000 102333		" 01/24/75  0647.2 mst Fri
aa 000031  432366 600000
aa 000032  000107 000033		" head
aa 000033  021607 540547		" last modified on
aa 000034  000000 101621		" 05/06/74  1742.4 mst Mon
aa 000035  352261 400000
aa 000036  000116 000051		" bcpl_compiler_head
aa 000037  021607 540214		" last modified on
aa 000040  000000 101621		" 05/06/74  1740.6 mst Mon
aa 000041  351403 200000
aa 000042  000131 000051		" bcpl_metering_head
aa 000043  021607 540220		" last modified on
aa 000044  000000 101621		" 05/06/74  1740.8 mst Mon
aa 000045  351474 000000
aa 000046  102103 120114		" "BCPL version 3.4, August 1973"
aa 000047  040166 145162
aa 000050  163151 157156
aa 000051  040063 056064
aa 000052  054040 101165
aa 000053  147165 163164
aa 000054  040061 071067
aa 000055  063040 040040
aa 000056  115141 162164		" "Martinson.SysMaint.a"
aa 000057  151156 163157
aa 000060  156056 123171
aa 000061  163115 141151
aa 000062  156164 056141
aa 000063  163157 165162		" "source  xref  alist  optimize  6180"
aa 000064  143145 040040
aa 000065  170162 145146
aa 000066  040040 141154
aa 000067  151163 164040
aa 000070  040157 160164
aa 000071  151155 151172
aa 000072  145040 040066
aa 000073  061070 060040
aa 000074  076062 056061		" ">2.1spec>online>mib083074>bcpl_driver.bcpl"
aa 000075  163160 145143
aa 000076  076157 156154
aa 000077  151156 145076
aa 000100  155151 142060
aa 000101  070063 060067
aa 000102  064076 142143
aa 000103  160154 137144
aa 000104  162151 166145
aa 000105  162056 142143
aa 000106  160154 040040
aa 000107  076154 144144		" ">ldd>include>head.incl.bcpl"
aa 000110  076151 156143
aa 000111  154165 144145
aa 000112  076150 145141
aa 000113  144056 151156
aa 000114  143154 056142
aa 000115  143160 154040
aa 000116  076154 144144		" ">ldd>include>bcpl_compiler_head.incl.bcpl"
aa 000117  076151 156143
aa 000120  154165 144145
aa 000121  076142 143160
aa 000122  154137 143157
aa 000123  155160 151154
aa 000124  145162 137150
aa 000125  145141 144056
aa 000126  151156 143154
aa 000127  056142 143160
aa 000130  154040 040040
aa 000131  076154 144144		" ">ldd>include>bcpl_metering_head.incl.bcpl"
aa 000132  076151 156143
aa 000133  154165 144145
aa 000134  076142 143160
aa 000135  154137 155145
aa 000136  164145 162151
aa 000137  156147 137150
aa 000140  145141 144056
aa 000141  151156 143154
aa 000142  056142 143160
aa 000143  154040 040040
	"	Relocation information


	"	text section relocation bits

aa 000144  000000 000002		" version number of rel-bits structure
aa 000145  000000 003676		" length in bits
aa 000146  001276 016640
aa 000147  005002 474023
aa 000150  517062 323601
aa 000151  264741 616370
aa 000152  047236 127640
aa 000153  024740 415000
aa 000154  024740 215170
aa 000155  057200 000240
aa 000156  001236 011640
aa 000157  000051 700472
aa 000160  000050 005000
aa 000161  500050 000240
aa 000162  024000 120012
aa 000163  000247 403551
aa 000164  700532 000051
aa 000165  701272 000051
aa 000166  700672 000012
aa 000167  000012 360106
aa 000170  474023 517004
aa 000171  720000 024000
aa 000172  120012 000240
aa 000173  005012 360226
aa 000174  400240 005170
aa 000175  167200 120012
aa 000176  360176 400240
aa 000177  005170 043200
aa 000200  024012 001236
aa 000201  012640 024740
aa 000202  475000 005170
aa 000203  057236 012647
aa 000204  404562 006370
aa 000205  067200 001236
aa 000206  025717 403350
aa 000207  000051 700472
aa 000210  000012 360166
aa 000211  474035 517005
aa 000212  723603 371740
aa 000213  335170 053200
aa 000214  120000 120000
aa 000215  517010 347601
aa 000216  164000 024000
aa 000217  005000 024012
aa 000220  360567 100000
aa 000221  637004 720240
aa 000222  024002 400012
aa 000223  001236 416640
aa 000224  000051 700632
aa 000225  360576 474043
aa 000226  517015 727601
aa 000227  464000 123603
aa 000230  764740 255014
aa 000231  401236 014710
aa 000232  006203 100050
aa 000233  005003 105000
aa 000234  500000 637030
aa 000235  200000 000000
l	"	inkage relocation bits

aa 000236  000000 000002		" version number of rel-bits structure
aa 000237  000000 001304		" length in bits
aa 000240  100002 200000
aa 000241  465246 524652
aa 000242  465246 524652
aa 000243  465246 524652
aa 000244  465246 524652
aa 000245  465246 524652
aa 000246  465246 524652
aa 000247  465246 524652
aa 000250  465246 524652
aa 000251  465246 524652
aa 000252  465246 524652
aa 000253  465246 524652
aa 000254  465246 524652
aa 000255  465246 524652
aa 000256  465246 524652
aa 000257  465246 524652
aa 000260  465246 524652
aa 000261  465246 524652
aa 000262  465246 524652
aa 000263  465246 520000
s	"	ymbol relocation bits

aa 000264  000000 000002		" version number of rel-bits structure
aa 000265  000000 000043		" length in bits
aa 000266  740365 770522
	"	Object map

aa 004533  000000 000001		" version number of object_map structure
aa 004534  157142 152137		" "obj_map "
aa 004535  155141 160040
aa 004536  000000 003176		" text offset, length
aa 004537  003176 000650		" def offset, length
aa 004540  004046 000176		" link offset, length
aa 004541  004244 000267		" symbol offset, length
aa 004542  000000 000000		" break map offset, length
aa 004543  340000 000000		" flags: ^bound, relocatable, procedure, standard
aa 004544  004533 000000		" object map pointer, unused


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
