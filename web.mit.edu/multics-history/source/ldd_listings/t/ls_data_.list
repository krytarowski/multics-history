	COMPILATION LISTING OF SEGMENT !BBBJWhKzMlDQFQ
	Compiled by: Multics PL/I Compiler, Release 29, of July 28, 1986
	Compiled at: Honeywell Bull, Phx. Az., Sys-M 
	Compiled on: 08/04/87  1335.4 mst Tue
	    Options: table map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Bull Inc., 1987                *
        4*   *                                                         *
        5*   * Copyright, (C) Honeywell Information Systems Inc., 1985 *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 /* HISTORY COMMENTS:
       10*  1) change(86-08-01,Coren), approve(87-07-10,MCR7679), audit(87-02-27,GDixon),
       11*     install(87-08-04,MR12.1-1055):
       12*     Written.
       13*  2) change(87-02-27,GDixon), approve(87-07-10,MCR7679),
       14*     audit(87-05-19,Parisek), install(87-08-04,MR12.1-1055):
       15*     Modified for move of login server from DSA software into the Multics
       16*     Networking Architecture (MNA).  Info dir paths changed as a result.
       17*                                                   END HISTORY COMMENTS */
       18 
       19 /* format: style4,delnl,insnl,^ifthendo */
       20 ls_data_:
       21      procedure ();
       22 
       23 /* This is the CDS source for creating ls_data_ */
       24 
       25 /* AUTOMATIC */
       26 
       27 dcl  code fixed bin (35);
       28 dcl  1 cda like cds_args;
       29 
       30 dcl  1 ls_data aligned,
       31        2 login_server_info_dir char (168),		/* info directory for requests for login server itself */
       32        2 login_info_dir char (168),			/* info directory for regular login requests */
       33        2 connect_info_dir char (168),			/* info directory for connect-loop requests */
       34        2 suffix (0:9) char (4),			/* ordinal suffixes for numbers not in the range 10:19 */
       35        2 teens_suffix (0:9) char (4);			/* ordinal suffixes for numbers in teens */
       36 
       37 
       38 /* INTERNAL STATIC */
       39 
       40 dcl  OUR_NAME char (8) internal static options (constant) initial ("ls_data_");
       41 
       42 
       43 /* ENTRIES */
       44 
       45 dcl  com_err_ entry () options (variable);
       46 dcl  create_data_segment_ entry (ptr, fixed bin (35));
       47 
       48 
       49 /* BUILTINS AND CONDITIONS */
       50 
       51 dcl  (addr, null, size, string) builtin;
       52 
       53 
       54 /* info directory names...may need to be changed for installation */
       55 
       56 	ls_data.login_server_info_dir = ">doc>subsystem>login_server_info";
       57 	ls_data.login_info_dir = ">doc>subsystem>login_info";
       58 	ls_data.connect_info_dir = ">doc>subsystem>login_connect_info";
       59 
       60 /* end info directory names */
       61 
       62 	ls_data.teens_suffix (*) = "th  ";
       63 	ls_data.suffix (*) = "th  ";
       64 	ls_data.suffix (1) = "st  ";
       65 	ls_data.suffix (2) = "nd  ";
       66 	ls_data.suffix (3) = "rd  ";
       67 
       68 /* structure is all set up, now create the data segment */
       69 
       70 	cda.sections (1).p = addr (ls_data);
       71 	cda.sections (1).len = size (ls_data);
       72 	cda.sections (1).struct_name = "ls_data";
       73 	cda.sections (2).p = null ();
       74 	cda.sections (2).len = 0;
       75 	cda.sections (2).struct_name = "";
       76 
       77 	cda.seg_name = OUR_NAME;
       78 	cda.num_exclude_names = 0;
       79 	cda.exclude_array_ptr = null ();
       80 	string (cda.switches) = ""b;
       81 	cda.have_text = "1"b;
       82 
       83 	call create_data_segment_ (addr (cda), code);
       84 	if code ^= 0
       85 	then call com_err_ (code, OUR_NAME, "From create_data_segment_.");
       86 
       87 	return;
       88 
  1     1 /* BEGIN INCLUDE FILE cds_args.incl.pl1 */
  1     2 
  1     3 dcl 1 cds_args based aligned,
  1     4     2 sections (2),
  1     5       3 p ptr,					/* pointer to data for text/static section */
  1     6       3 len fixed bin (18),				/* size of text/static section */
  1     7       3 struct_name char (32),			/* name of declared structure for this section */
  1     8     2 seg_name char (32),				/* name to create segment by */
  1     9     2 num_exclude_names fixed bin,			/* number of names in exclude array */
  1    10     2 exclude_array_ptr ptr,				/* pointer to array of exclude names */
  1    11     2 switches,					/* control switches */
  1    12       3 defs_in_link bit (1) unal,			/* says put defs in linkage */
  1    13       3 separate_static bit (1) unal,			/* says separate static section is wanted */
  1    14       3 have_text bit (1) unal,			/* ON if text section given */
  1    15       3 have_static bit (1) unal,			/* ON if static section given */
  1    16       3 pad bit (32) unal;
  1    17 
  1    18 dcl  exclude_names (1) char (32) based;			/* pointed to be cds_args.exclude_array_ptr */
  1    19 
  1    20 /* END INCLUDE FILE cds_args.incl.pl1 */
       89 
       90 
       91      end ls_data_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    08/04/87  1221.9  !BBBJWhKzMlDQFQ.pl1               >special_ldd>install>MR12.1-1054>ls_data_.cds
89           1    04/01/76  2209.5  cds_args.incl.pl1                 >ldd>include>cds_args.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
OUR_NAME                        000000 constant        char(8)                  initial unaligned dcl 40 set ref 77 84*
addr                                                   builtin function         dcl 51 ref 70 83 83
cda                             000102 automatic       structure                level 1 unaligned dcl 28 set ref 83 83
cds_args                               based           structure                level 1 dcl 1-3
code                            000100 automatic       fixed bin(35,0)          dcl 27 set ref 83* 84 84*
com_err_                        000012 constant        entry                    external dcl 45 ref 84
connect_info_dir        124     000147 automatic       char(168)                level 2 dcl 30 set ref 58*
create_data_segment_            000014 constant        entry                    external dcl 46 ref 83
exclude_array_ptr        42     000102 automatic       pointer                  level 2 dcl 28 set ref 79*
have_text                44(02) 000102 automatic       bit(1)                   level 3 packed unaligned dcl 28 set ref 81*
len                       2     000102 automatic       fixed bin(18,0)          array level 3 dcl 28 set ref 71* 74*
login_info_dir           52     000147 automatic       char(168)                level 2 dcl 30 set ref 57*
login_server_info_dir           000147 automatic       char(168)                level 2 dcl 30 set ref 56*
ls_data                         000147 automatic       structure                level 1 dcl 30 set ref 70 71
null                                                   builtin function         dcl 51 ref 73 79
num_exclude_names        40     000102 automatic       fixed bin(17,0)          level 2 dcl 28 set ref 78*
p                               000102 automatic       pointer                  array level 3 dcl 28 set ref 70* 73*
sections                        000102 automatic       structure                array level 2 unaligned dcl 28
seg_name                 30     000102 automatic       char(32)                 level 2 packed unaligned dcl 28 set ref 77*
size                                                   builtin function         dcl 51 ref 71
string                                                 builtin function         dcl 51 set ref 80*
struct_name               3     000102 automatic       char(32)                 array level 3 packed unaligned dcl 28 set ref 72*
                                                                                  75*
suffix                  176     000147 automatic       char(4)                  array level 2 dcl 30 set ref 63* 64* 65* 66*
switches                 44     000102 automatic       structure                level 2 packed unaligned dcl 28 set ref 80*
teens_suffix            210     000147 automatic       char(4)                  array level 2 dcl 30 set ref 62*

NAME DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
exclude_names                          based           char(32)                 array unaligned dcl 1-18

NAME DECLARED BY EXPLICIT CONTEXT.
ls_data_                        000056 constant        entry                    external dcl 20

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       266         304     214         276
Length      1342     214        16        1022      52           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
ls_data_                            280 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
ls_data_                 000100 code                        ls_data_
                         000102 cda                         ls_data_
                         000147 ls_data                     ls_data_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      create_data_segment_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     20 000055        56 000063        57 000066        58 000071        62 000074        63 000105        64 000117
     65 000121        66 000123        70 000125        71 000127        72 000131        73 000134        74 000136
     75 000137        77 000142        78 000145        79 000146        80 000147        81 000150        83 000152
     84 000165        87 000213


Object Segment >special_ldd>install>MR12.1-1054>ls_data_
Created on 08/04/87  1335.4 mst Tue
by GJohnson.SysMaint.a
using create_data_segment_, Version II of Thursday, November 20, 1986

        Object    Text    Defs    Link    Symb  Static
Start        0       0     222     306     316     316
Length     477     222      64      10     145       0


7 Definitions:


segname:    ls_data_

text|124        connect_info_dir
text|52         login_info_dir
text|0          login_server_info_dir
text|176        suffix
symb|0          symbol_table
text|210        teens_suffix


No Links.





                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
