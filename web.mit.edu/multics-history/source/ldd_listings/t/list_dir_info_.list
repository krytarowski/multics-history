	COMPILATION LISTING OF SEGMENT list_dir_info_
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/19/82  1105.2 mst Fri
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 list_dir_info_: proc (ap, am, apfx);
       12 
       13 /* LIST_DIR_INFO_ - list directory info record
       14*
       15*   THVV */
       16 /* Modified 07/10/82 by Jim Lippard to only print 2 dir ring brackets */
       17 
       18 dcl  ap ptr,					/* ptr to dir_info record */
       19      am fixed bin,					/* mode: 0 = brief, 1 = reg, 2 = long */
       20      apfx char (1);
       21 
       22 dcl  nacl fixed bin,
       23      vmode fixed bin,
       24      pfx char (1) init (""),
       25      lvname char (32),
       26      xp ptr,
       27      code fixed bin (35),
       28     (i, j) fixed bin;
       29 
       30 dcl  ioa_ entry options (variable),
       31      mdc_$find_lvname entry (bit (36), char (*), fixed bin (35)),
       32      date_time_$fstime entry (bit (36), char (*) aligned);
       33 
       34 
       35 dcl (substr, binary, fixed) builtin;
       36 
  1     1 /* BEGIN INCLUDE FILE ... saved_dir_info.incl.pl1 */
  1     2 /* Modified 07/10/82 by Jim Lippard to only have 2 dir ring brackets */
  1     3 
  1     4 dcl 1 fseg based (fptr) aligned,
  1     5     2 fpath char (168) unal,
  1     6     2 timeof fixed bin (71),
  1     7     2 nents fixed bin,
  1     8     2 freep fixed bin,
  1     9     2 fpad (4) fixed bin,
  1    10     2 ffirst fixed bin;
  1    11 
  1    12 dcl fptr ptr;
  1    13 
  1    14 dcl 1 seg_rec based (xp) aligned,
  1    15     2 fnext bit (18),
  1    16     2 n_names fixed bin,
  1    17     2 brstat,
  1    18       3 type bit (2) unal,
  1    19       3 nnames bit (16) unal,
  1    20       3 nrp bit (18) unal,
  1    21       3 dtm bit (36) unal,
  1    22       3 dtu bit (36) unal,
  1    23       3 mode bit (5) unal,
  1    24       3 padding bit (13) unal,
  1    25       3 records bit (18) unal,
  1    26       3 dtd bit (36) unal,
  1    27       3 dtem bit (36) unal,
  1    28       3 lvid bit (36) unal,
  1    29       3 curlen bit (12) unal,
  1    30       3 bitcnt bit (24) unal,
  1    31       3 pad1 bit (8) unal,
  1    32       3 copysw bit (1) unal,
  1    33       3 tpd bit (1) unal,
  1    34       3 mdir bit (1) unal,
  1    35       3 damaged bit (1) unal,
  1    36       3 pad2 bit (6) unal,
  1    37       3 rbs (0:2) bit (6) unal,
  1    38       3 uid bit (36) unal,
  1    39     2 bc_author char (32) unal,
  1    40     2 author char (32) unal,
  1    41     2 max_lth fixed bin (19),
  1    42     2 ssw bit (1) unal,
  1    43     2 pad0 bit(35) unal,
  1    44     2 nacls fixed bin,
  1    45     2 acls (dummy refer (seg_rec.nacls)),
  1    46       3 access_name char (32),
  1    47       3 modes bit (36),
  1    48     2 names (dummy refer (seg_rec.n_names)),
  1    49       3 name char (32),
  1    50     2 end_seg_rec fixed bin;
  1    51 
  1    52 dcl 1 dir_rec based (xp) aligned,
  1    53     2 fnext bit (18),
  1    54     2 n_names fixed bin,
  1    55     2 brstat,
  1    56       3 type bit (2) unal,
  1    57       3 nnames bit (16) unal,
  1    58       3 nrp bit (18) unal,
  1    59       3 dtm bit (36) unal,
  1    60       3 dtu bit (36) unal,
  1    61       3 mode bit (5) unal,
  1    62       3 padding bit (13) unal,
  1    63       3 records bit (18) unal,
  1    64       3 dtd bit (36) unal,
  1    65       3 dtem bit (36) unal,
  1    66       3 slvid bit (36) unal,
  1    67       3 curlen bit (12) unal,
  1    68       3 bitcnt bit (24) unal,
  1    69       3 pad1 bit (8) unal,
  1    70       3 copysw bit (1) unal,
  1    71       3 tpd bit (1) unal,
  1    72       3 mdir bit (1) unal,				/* TRUE if mater dir */
  1    73       3 damaged bit (1) unal,
  1    74       3 pad2 bit (6) unal,
  1    75       3 rbs (0:1) bit (6) unal,
  1    76       3 pad3 bit (6) unal,
  1    77       3 uid bit (36) unal,
  1    78     2 bc_author char (32) unal,
  1    79     2 author char (32) unal,
  1    80     2 max_lth fixed bin (19),
  1    81     2 ssw bit (1) unal,
  1    82     2 pad0 bit(35) unal,
  1    83     2 quota fixed bin (18),
  1    84     2 nacls fixed bin,
  1    85     2 acls (dummy refer (dir_rec.nacls)),
  1    86       3 access_name char (32),
  1    87       3 modes bit (36),
  1    88     2 nisacls fixed bin,
  1    89     2 isacls (dummy refer (dir_rec.nisacls)),
  1    90       3 access_name char (32),
  1    91       3 modes bit (36),
  1    92     2 nidacls fixed bin,
  1    93     2 idacls (dummy refer (dir_rec.nidacls)),
  1    94       3 access_name char (32),
  1    95       3 modes bit (36),
  1    96     2 ncacls fixed bin,
  1    97     2 cacls (dummy refer (dir_rec.ncacls)),
  1    98       3 access_name char (32),
  1    99       3 modes bit (36),
  1   100     2 names (dummy refer (dir_rec.n_names)),
  1   101       3 name char (32),
  1   102     2 end_dir_rec fixed bin;
  1   103 
  1   104 dcl 1 link_rec based (xp) aligned,
  1   105     2 fnext bit (18),
  1   106     2 n_names fixed bin,
  1   107     2 brstat,
  1   108       3 type bit (2) unal,
  1   109       3 nnames bit (16) unal,
  1   110       3 nrp bit (18) unal,
  1   111       3 dtem bit (36) unal,
  1   112       3 dtd bit (36) unal,
  1   113       3 pnl bit (18) unal,
  1   114       3 pnrp bit (18) unal,
  1   115     2 target char (168),
  1   116     2 names (dummy refer (link_rec.n_names)),
  1   117       3 name char (32),
  1   118     2 end_link_rec fixed bin;
  1   119 
  1   120 dcl 1 aclval (nacl) based (tp) aligned,
  1   121     2 access_name char (32),
  1   122     2 modes bit (36);
  1   123 
  1   124 dcl tp ptr;
  1   125 
  1   126 /* END INCLUDE FILE ... saved_dir_info.incl.pl1 */
       37 
       38 
       39 /* =====================================================  */
       40 
       41 	xp = ap;
       42 	vmode = am;
       43 	pfx = apfx;
       44 	j = binary (seg_rec.brstat.type);		/* Get record type */
       45 	if j = 1 then do;
       46 	     call ioa_ ("^anames:^-^a", pfx, seg_rec.names (1).name);
       47 	     do i = 2 to binary (seg_rec.brstat.nnames);
       48 		call ioa_ ("^a^-^a", pfx, seg_rec.names (i).name);
       49 	     end;
       50 	     call ioa_ ("^atype:^-^-segment", pfx);
       51 	     call ioa_ ("^adate used:^-^a", pfx, datec (seg_rec.brstat.dtu));
       52 	     call ioa_ ("^adate modified:^-^a", pfx, datec (seg_rec.brstat.dtm));
       53 	     call ioa_ ("^adamaged switch:^-^[ON^;OFF^]", pfx, seg_rec.brstat.damaged);
       54 	     if vmode < 1 then return;
       55 	     call ioa_ ("^abranch modified:^-^a", pfx, datec (seg_rec.brstat.dtem));
       56 	     call mdc_$find_lvname (seg_rec.lvid, lvname, code);
       57 	     if code ^= 0 then call ioa_ ("^avolume:^-^-^w", pfx, seg_rec.lvid);
       58 	     else call ioa_ ("^avolume:^-^-^a", pfx, lvname);
       59 	     call ioa_ ("^arecords used:^-^d", pfx, fixed (binary (seg_rec.brstat.records), 35));
       60 	     call ioa_ ("^abit count:^-^d", pfx, fixed (binary (seg_rec.brstat.bitcnt), 35));
       61 	     call ioa_ ("^abit count author:^-^a", pfx, seg_rec.bc_author);
       62 	     call ioa_ ("^amax length:^-^d", pfx, seg_rec.max_lth);
       63 	     call ioa_ ("^asafety switch:^-^[ON^;OFF^]", pfx, seg_rec.ssw);
       64 	     if vmode < 2 then return;
       65 	     if seg_rec.nacls > 0 then do;
       66 		call ioa_ ("^aACL:^-^-^5a ^a", pfx,
       67 		     cmode (seg_rec.acls (1).modes, 1), seg_rec.acls (1).access_name);
       68 		do i = 2 to seg_rec.nacls;
       69 		     call ioa_ ("^a^-^-^5a ^a", pfx,
       70 			cmode (seg_rec.acls (i).modes, 1), seg_rec.acls (i).access_name);
       71 		end;
       72 	     end;
       73 	     call ioa_ ("^adate dumped:^-^a", pfx, datec (seg_rec.brstat.dtd));
       74 	     call ioa_ ("^acurrent length:^-^d", pfx, fixed (binary (seg_rec.brstat.curlen), 35));
       75 	     call ioa_ ("^acopy switch:^-^[ON^;OFF^]", pfx, seg_rec.brstat.copysw);
       76 	     call ioa_ ("^atpd switch:^-^[ON^;OFF^]", pfx, seg_rec.brstat.tpd);
       77 	     call ioa_ ("^aring brackets:^-^d,^d,^d", pfx, fixed (binary (seg_rec.brstat.rbs (0)), 35),
       78 		fixed (binary (seg_rec.brstat.rbs (1)), 35), fixed (binary (seg_rec.brstat.rbs (2)), 35));
       79 	     call ioa_ ("^aunique ID:^-^w", pfx, seg_rec.brstat.uid);
       80 	     call ioa_ ("^aauthor:^-^-^a", pfx, seg_rec.author);
       81 	end;
       82 	else if j = 2 then do;
       83 	     call ioa_ ("^anames:^-^a", pfx, dir_rec.names (1).name);
       84 	     do i = 2 to binary (dir_rec.brstat.nnames);
       85 		call ioa_ ("^a^-^a", pfx, dir_rec.names (i).name);
       86 	     end;
       87 	     call ioa_ ("^atype:^-^-directory", pfx);
       88 	     call ioa_ ("^adate used:^-^a", pfx, datec (dir_rec.brstat.dtu));
       89 	     call ioa_ ("^adate modified:^-^a", pfx, datec (dir_rec.brstat.dtm));
       90 	     call mdc_$find_lvname (dir_rec.slvid, lvname, code);
       91 	     if code ^= 0 then call ioa_ ("^asons volume:^-^w", pfx, dir_rec.slvid);
       92 	     else call ioa_ ("^asons volume:^-^a", pfx, lvname);
       93 	     call ioa_ ("^amaster dir:^-^[YES^;NO^]", pfx, dir_rec.brstat.mdir);
       94 	     call ioa_ ("^adamaged switch:^-^[ON^;OFF^]", pfx, seg_rec.brstat.damaged);
       95 	     if vmode < 1 then return;
       96 	     call ioa_ ("^abranch modified:^-^a", pfx, datec (dir_rec.brstat.dtem));
       97 	     call ioa_ ("^abit count:^-^d", pfx, fixed (binary (dir_rec.brstat.bitcnt), 35));
       98 	     call ioa_ ("^arecords used:^-^d", pfx, fixed (binary (dir_rec.brstat.records), 35));
       99 	     call ioa_ ("^aquota:^-^-^d", pfx, dir_rec.quota);
      100 	     call ioa_ ("^adate dumped:^-^a", pfx, datec (dir_rec.brstat.dtd));
      101 	     call ioa_ ("^acurrent length:^-^d", pfx, fixed (binary (dir_rec.brstat.curlen), 35));
      102                call ioa_ ("^aring brackets:^-^d,^d", pfx, fixed (binary (dir_rec.brstat.rbs (0)), 35),
      103                     fixed (binary (dir_rec.brstat.rbs (1)), 35));
      104 	     call ioa_ ("^aunique ID:^-^w", pfx, dir_rec.brstat.uid);
      105 	     call ioa_ ("^aauthor:^-^-^a", pfx, dir_rec.author);
      106 	     call ioa_ ("^abit count author:^-^a", pfx, dir_rec.bc_author);
      107 	     call ioa_ ("^amax length:^-^d", pfx, dir_rec.max_lth);
      108 	     call ioa_ ("^asafety switch:^-^[ON^;OFF^]", pfx, dir_rec.ssw);
      109 	     if vmode < 2 then return;
      110 	     if dir_rec.nacls > 0 then do;
      111 		call ioa_ ("^aACL:^-^-^5a ^a", pfx,
      112 		     cmode (dir_rec.acls (1).modes, 2), dir_rec.acls (1).access_name);
      113 		do i = 2 to dir_rec.nacls;
      114 		     call ioa_ ("^a^-^-^5a ^a", pfx,
      115 			cmode (dir_rec.acls (i).modes, 2), dir_rec.acls (i).access_name);
      116 		end;
      117 	     end;
      118 	     if dir_rec.nisacls > 0 then do;
      119 		call ioa_ ("^ainitial seg acl:^-^5a ^a", pfx,
      120 		     cmode (dir_rec.isacls (1).modes, 1), dir_rec.isacls (1).access_name);
      121 		do i = 2 to dir_rec.nisacls;
      122 		     call ioa_ ("^a^-^-^5a ^a", pfx,
      123 			cmode (dir_rec.isacls (i).modes, 1), dir_rec.isacls (i).access_name);
      124 		end;
      125 	     end;
      126 	     if dir_rec.nidacls > 0 then do;
      127 		call ioa_ ("^ainitial dir acl:^-^5a ^a", pfx,
      128 		     cmode (dir_rec.idacls (1).modes, 2), dir_rec.idacls (1).access_name);
      129 		do i = 2 to dir_rec.nidacls;
      130 		     call ioa_ ("^a^-^-^5a ^a", pfx,
      131 			cmode (dir_rec.idacls (i).modes, 2), dir_rec.idacls (i).access_name);
      132 		end;
      133 	     end;
      134 	end;
      135 	else if j = 0 then do;
      136 	     call ioa_ ("^anames:^-^a", pfx, link_rec.names (1).name);
      137 	     do i = 2 to binary (link_rec.brstat.nnames);
      138 		call ioa_ ("^a^-^a", pfx, link_rec.names (i).name);
      139 	     end;
      140 	     call ioa_ ("^atype:^-^-link", pfx);
      141 	     call ioa_ ("^alinks to:^-^-^a", pfx, link_rec.target);
      142 	     if vmode < 1 then return;
      143 	     call ioa_ ("^adate link modified:^-^a", pfx, datec (link_rec.brstat.dtem));
      144 	     if vmode < 2 then return;
      145 	     call ioa_ ("^alink dumped:^-^a", pfx, datec (link_rec.brstat.dtd));
      146 	end;
      147 	else do;
      148 	     call ioa_ ("^aerror at ^p", pfx, xp);
      149 	end;
      150 
      151 	return;
      152 
      153 /* ------------------------------------------------------- */
      154 
      155 datec:	proc (x) returns (char (24) aligned);
      156 
      157 dcl  x bit (36);
      158 
      159 dcl  datstr char (24) aligned;
      160 
      161 	     call date_time_$fstime (x, datstr);
      162 	     return (datstr);
      163 
      164 	end datec;
      165 
      166 cmode:	proc (x, t) returns (char (5) aligned);
      167 
      168 dcl  x bit (36) aligned;
      169 dcl  t fixed bin;
      170 
      171 dcl  ans char (5) aligned;
      172 
      173 dcl (i, k) fixed bin;
      174 dcl  xmode (2, 5) int static char (1) init ("r", "e", "w", "a", "", "s", "m", "a", "", "");
      175 
      176 	     k = 1;
      177 	     ans = "";
      178 	     do i = 1 to 5;
      179 		if substr (x, i, 1) then do;
      180 		     substr (ans, k, 1) = xmode (t, i);
      181 		     k = k + 1;
      182 		end;
      183 	     end;
      184 
      185 	     if ans = "" then ans = "null";
      186 	     return (ans);
      187 
      188 	end cmode;
      189 
      190      end list_dir_info_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/19/82  0949.3  list_dir_info_.pl1                >spec>on>11/19/82>list_dir_info_.pl1
37           1    11/19/82  0921.9  saved_dir_info.incl.pl1           >spec>on>11/19/82>saved_dir_info.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
access_name              37            based           char(32)                 array level 3 in structure "seg_rec" dcl 1-14
                                                                                  in procedure "list_dir_info_" set ref 66* 69*
access_name                            based           char(32)                 array level 3 in structure "dir_rec" dcl 1-52
                                                                                  in procedure "list_dir_info_" set ref 119* 122*
access_name                            based           char(32)                 array level 3 in structure "dir_rec" dcl 1-52
                                                                                  in procedure "list_dir_info_" set ref 127* 130*
access_name              40            based           char(32)                 array level 3 in structure "dir_rec" dcl 1-52
                                                                                  in procedure "list_dir_info_" set ref 111* 114*
acls                     40            based           structure                array level 2 in structure "dir_rec" dcl 1-52
                                                                                  in procedure "list_dir_info_"
acls                     37            based           structure                array level 2 in structure "seg_rec" dcl 1-14
                                                                                  in procedure "list_dir_info_"
am                                     parameter       fixed bin(17,0)          dcl 18 ref 11 42
ans                             000156 automatic       char(5)                  dcl 171 set ref 177* 180* 185 185* 186
ap                                     parameter       pointer                  dcl 18 ref 11 41
apfx                                   parameter       char(1)                  unaligned dcl 18 ref 11 43
author                   24            based           char(32)                 level 2 in structure "dir_rec" packed unaligned
                                                                                  dcl 1-52 in procedure "list_dir_info_" set ref
                                                                                  105*
author                   24            based           char(32)                 level 2 in structure "seg_rec" packed unaligned
                                                                                  dcl 1-14 in procedure "list_dir_info_" set ref 80*
bc_author                14            based           char(32)                 level 2 in structure "seg_rec" packed unaligned
                                                                                  dcl 1-14 in procedure "list_dir_info_" set ref 61*
bc_author                14            based           char(32)                 level 2 in structure "dir_rec" packed unaligned
                                                                                  dcl 1-52 in procedure "list_dir_info_" set ref
                                                                                  106*
binary                                                 builtin function         dcl 35 ref 44 47 59 59 60 60 74 74 77 77 77 77 77 77
                                                                                  84 97 97 98 98 101 101 102 102 102 102 137
bitcnt                   11(12)        based           bit(24)                  level 3 in structure "dir_rec" packed unaligned
                                                                                  dcl 1-52 in procedure "list_dir_info_" ref 97 97
bitcnt                   11(12)        based           bit(24)                  level 3 in structure "seg_rec" packed unaligned
                                                                                  dcl 1-14 in procedure "list_dir_info_" ref 60 60
brstat                    2            based           structure                level 2 in structure "link_rec" dcl 1-104
                                                                                  in procedure "list_dir_info_"
brstat                    2            based           structure                level 2 in structure "dir_rec" dcl 1-52 in procedure
                                                                                  "list_dir_info_"
brstat                    2            based           structure                level 2 in structure "seg_rec" dcl 1-14 in procedure
                                                                                  "list_dir_info_"
code                            000114 automatic       fixed bin(35,0)          dcl 22 set ref 56* 57 90* 91
copysw                   12(08)        based           bit(1)                   level 3 packed unaligned dcl 1-14 set ref 75*
curlen                   11            based           bit(12)                  level 3 in structure "seg_rec" packed unaligned
                                                                                  dcl 1-14 in procedure "list_dir_info_" ref 74 74
curlen                   11            based           bit(12)                  level 3 in structure "dir_rec" packed unaligned
                                                                                  dcl 1-52 in procedure "list_dir_info_" ref 101 101
damaged                  12(11)        based           bit(1)                   level 3 packed unaligned dcl 1-14 set ref 53* 94*
date_time_$fstime               000014 constant        entry                    external dcl 30 ref 161
datstr                          000142 automatic       char(24)                 dcl 159 set ref 161* 162
dir_rec                                based           structure                level 1 dcl 1-52
dtd                       6            based           bit(36)                  level 3 in structure "dir_rec" packed unaligned
                                                                                  dcl 1-52 in procedure "list_dir_info_" set ref
                                                                                  100* 100*
dtd                       6            based           bit(36)                  level 3 in structure "seg_rec" packed unaligned
                                                                                  dcl 1-14 in procedure "list_dir_info_" set ref 73*
                                                                                  73*
dtd                       4            based           bit(36)                  level 3 in structure "link_rec" packed unaligned
                                                                                  dcl 1-104 in procedure "list_dir_info_" set ref
                                                                                  145* 145*
dtem                      3            based           bit(36)                  level 3 in structure "link_rec" packed unaligned
                                                                                  dcl 1-104 in procedure "list_dir_info_" set ref
                                                                                  143* 143*
dtem                      7            based           bit(36)                  level 3 in structure "dir_rec" packed unaligned
                                                                                  dcl 1-52 in procedure "list_dir_info_" set ref 96*
                                                                                  96*
dtem                      7            based           bit(36)                  level 3 in structure "seg_rec" packed unaligned
                                                                                  dcl 1-14 in procedure "list_dir_info_" set ref 55*
                                                                                  55*
dtm                       3            based           bit(36)                  level 3 in structure "seg_rec" packed unaligned
                                                                                  dcl 1-14 in procedure "list_dir_info_" set ref 52*
                                                                                  52*
dtm                       3            based           bit(36)                  level 3 in structure "dir_rec" packed unaligned
                                                                                  dcl 1-52 in procedure "list_dir_info_" set ref 89*
                                                                                  89*
dtu                       4            based           bit(36)                  level 3 in structure "seg_rec" packed unaligned
                                                                                  dcl 1-14 in procedure "list_dir_info_" set ref 51*
                                                                                  51*
dtu                       4            based           bit(36)                  level 3 in structure "dir_rec" packed unaligned
                                                                                  dcl 1-52 in procedure "list_dir_info_" set ref 88*
                                                                                  88*
fixed                                                  builtin function         dcl 35 ref 59 59 60 60 74 74 77 77 77 77 77 77 97 97
                                                                                  98 98 101 101 102 102 102 102
i                               000115 automatic       fixed bin(17,0)          dcl 22 in procedure "list_dir_info_" set ref 47* 48*
                                                                                  68* 69 69 69* 84* 85* 113* 114 114 114* 121* 122
                                                                                  122 122* 129* 130 130 130* 137* 138*
i                               000160 automatic       fixed bin(17,0)          dcl 173 in procedure "cmode" set ref 178* 179 180*
idacls                                 based           structure                array level 2 dcl 1-52
ioa_                            000010 constant        entry                    external dcl 30 ref 46 48 50 51 52 53 55 57 58 59 60
                                                                                  61 62 63 66 69 73 74 75 76 77 79 80 83 85 87 88 89
                                                                                  91 92 93 94 96 97 98 99 100 101 102 104 105 106
                                                                                  107 108 111 114 119 122 127 130 136 138 140 141
                                                                                  143 145 148
isacls                                 based           structure                array level 2 dcl 1-52
j                               000116 automatic       fixed bin(17,0)          dcl 22 set ref 44* 45 82 135
k                               000161 automatic       fixed bin(17,0)          dcl 173 set ref 176* 180 181* 181
link_rec                               based           structure                level 1 dcl 1-104
lvid                     10            based           bit(36)                  level 3 packed unaligned dcl 1-14 set ref 56* 57*
lvname                          000102 automatic       char(32)                 unaligned dcl 22 set ref 56* 58* 90* 92*
max_lth                  34            based           fixed bin(19,0)          level 2 in structure "seg_rec" dcl 1-14 in procedure
                                                                                  "list_dir_info_" set ref 62*
max_lth                  34            based           fixed bin(19,0)          level 2 in structure "dir_rec" dcl 1-52 in procedure
                                                                                  "list_dir_info_" set ref 107*
mdc_$find_lvname                000012 constant        entry                    external dcl 30 ref 56 90
mdir                     12(10)        based           bit(1)                   level 3 packed unaligned dcl 1-52 set ref 93*
modes                                  based           bit(36)                  array level 3 in structure "dir_rec" dcl 1-52
                                                                                  in procedure "list_dir_info_" set ref 119* 119*
                                                                                  122* 122*
modes                    50            based           bit(36)                  array level 3 in structure "dir_rec" dcl 1-52
                                                                                  in procedure "list_dir_info_" set ref 111* 111*
                                                                                  114* 114*
modes                    47            based           bit(36)                  array level 3 in structure "seg_rec" dcl 1-14
                                                                                  in procedure "list_dir_info_" set ref 66* 66* 69*
                                                                                  69*
modes                                  based           bit(36)                  array level 3 in structure "dir_rec" dcl 1-52
                                                                                  in procedure "list_dir_info_" set ref 127* 127*
                                                                                  130* 130*
nacls                    36            based           fixed bin(17,0)          level 2 in structure "seg_rec" dcl 1-14 in procedure
                                                                                  "list_dir_info_" ref 46 48 65 68
nacls                    37            based           fixed bin(17,0)          level 2 in structure "dir_rec" dcl 1-52 in procedure
                                                                                  "list_dir_info_" ref 83 83 83 83 83 83 83 83 85 85
                                                                                  85 85 85 85 85 85 110 113 118 119 119 119 121 122
                                                                                  122 122 126 126 127 127 127 127 127 127 129 129
                                                                                  130 130 130 130 130 130
name                                   based           char(32)                 array level 3 in structure "seg_rec" dcl 1-14
                                                                                  in procedure "list_dir_info_" set ref 46* 48*
name                                   based           char(32)                 array level 3 in structure "dir_rec" dcl 1-52
                                                                                  in procedure "list_dir_info_" set ref 83* 85*
name                     60            based           char(32)                 array level 3 in structure "link_rec" dcl 1-104
                                                                                  in procedure "list_dir_info_" set ref 136* 138*
names                                  based           structure                array level 2 in structure "dir_rec" dcl 1-52
                                                                                  in procedure "list_dir_info_"
names                    60            based           structure                array level 2 in structure "link_rec" dcl 1-104
                                                                                  in procedure "list_dir_info_"
names                                  based           structure                array level 2 in structure "seg_rec" dcl 1-14
                                                                                  in procedure "list_dir_info_"
ncacls                                 based           fixed bin(17,0)          level 2 dcl 1-52 ref 83 85
nidacls                                based           fixed bin(17,0)          level 2 dcl 1-52 ref 83 83 85 85 126 129
nisacls                                based           fixed bin(17,0)          level 2 dcl 1-52 ref 83 83 83 83 85 85 85 85 118 121
                                                                                  126 127 127 127 129 130 130 130
nnames                    2(02)        based           bit(16)                  level 3 in structure "link_rec" packed unaligned
                                                                                  dcl 1-104 in procedure "list_dir_info_" ref 137
nnames                    2(02)        based           bit(16)                  level 3 in structure "dir_rec" packed unaligned
                                                                                  dcl 1-52 in procedure "list_dir_info_" ref 84
nnames                    2(02)        based           bit(16)                  level 3 in structure "seg_rec" packed unaligned
                                                                                  dcl 1-14 in procedure "list_dir_info_" ref 47
pfx                             000101 automatic       char(1)                  initial unaligned dcl 22 set ref 22* 43* 46* 48* 50*
                                                                                  51* 52* 53* 55* 57* 58* 59* 60* 61* 62* 63* 66*
                                                                                  69* 73* 74* 75* 76* 77* 79* 80* 83* 85* 87* 88*
                                                                                  89* 91* 92* 93* 94* 96* 97* 98* 99* 100* 101* 102*
                                                                                  104* 105* 106* 107* 108* 111* 114* 119* 122* 127*
                                                                                  130* 136* 138* 140* 141* 143* 145* 148*
quota                    36            based           fixed bin(18,0)          level 2 dcl 1-52 set ref 99*
rbs                      12(18)        based           bit(6)                   array level 3 in structure "dir_rec" packed
                                                                                  unaligned dcl 1-52 in procedure "list_dir_info_"
                                                                                  ref 102 102 102 102
rbs                      12(18)        based           bit(6)                   array level 3 in structure "seg_rec" packed
                                                                                  unaligned dcl 1-14 in procedure "list_dir_info_"
                                                                                  ref 77 77 77 77 77 77
records                   5(18)        based           bit(18)                  level 3 in structure "dir_rec" packed unaligned
                                                                                  dcl 1-52 in procedure "list_dir_info_" ref 98 98
records                   5(18)        based           bit(18)                  level 3 in structure "seg_rec" packed unaligned
                                                                                  dcl 1-14 in procedure "list_dir_info_" ref 59 59
seg_rec                                based           structure                level 1 dcl 1-14
slvid                    10            based           bit(36)                  level 3 packed unaligned dcl 1-52 set ref 90* 91*
ssw                      35            based           bit(1)                   level 2 in structure "dir_rec" packed unaligned
                                                                                  dcl 1-52 in procedure "list_dir_info_" set ref
                                                                                  108*
ssw                      35            based           bit(1)                   level 2 in structure "seg_rec" packed unaligned
                                                                                  dcl 1-14 in procedure "list_dir_info_" set ref 63*
substr                                                 builtin function         dcl 35 set ref 179 180*
t                                      parameter       fixed bin(17,0)          dcl 169 ref 166 180
target                    6            based           char(168)                level 2 dcl 1-104 set ref 141*
tpd                      12(09)        based           bit(1)                   level 3 packed unaligned dcl 1-14 set ref 76*
type                      2            based           bit(2)                   level 3 packed unaligned dcl 1-14 ref 44
uid                      13            based           bit(36)                  level 3 in structure "dir_rec" packed unaligned
                                                                                  dcl 1-52 in procedure "list_dir_info_" set ref
                                                                                  104*
uid                      13            based           bit(36)                  level 3 in structure "seg_rec" packed unaligned
                                                                                  dcl 1-14 in procedure "list_dir_info_" set ref 79*
vmode                           000100 automatic       fixed bin(17,0)          dcl 22 set ref 42* 54 64 95 109 142 144
x                                      parameter       bit(36)                  dcl 168 in procedure "cmode" ref 166 179
x                                      parameter       bit(36)                  unaligned dcl 157 in procedure "datec" set ref 155
                                                                                  161*
xmode                           000000 constant        char(1)                  initial array unaligned dcl 174 ref 180
xp                              000112 automatic       pointer                  dcl 22 set ref 41* 44 46 47 48 51 51 52 52 53 55 55
                                                                                  56 57 59 59 60 60 61 62 63 65 66 66 66 68 69 69 69
                                                                                  73 73 74 74 75 76 77 77 77 77 77 77 79 80 83 84 85
                                                                                  88 88 89 89 90 91 93 94 96 96 97 97 98 98 99 100
                                                                                  100 101 101 102 102 102 102 104 105 106 107 108
                                                                                  110 111 111 111 113 114 114 114 118 119 119 119
                                                                                  121 122 122 122 126 127 127 127 129 130 130 130
                                                                                  136 137 138 141 143 143 145 145 148*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
aclval                                 based           structure                array level 1 dcl 1-120
fptr                                   automatic       pointer                  dcl 1-12
fseg                                   based           structure                level 1 dcl 1-4
nacl                                   automatic       fixed bin(17,0)          dcl 22
tp                                     automatic       pointer                  dcl 1-124

NAMES DECLARED BY EXPLICIT CONTEXT.
cmode                           004113 constant        entry                    internal dcl 166 ref 66 66 69 69 111 111 114 114 119
                                                                                  119 122 122 127 127 130 130
datec                           004066 constant        entry                    internal dcl 155 ref 51 51 52 52 55 55 73 73 88 88
                                                                                  89 89 96 96 100 100 143 143 145 145
list_dir_info_                  000347 constant        entry                    external dcl 11

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      4242        4260    4167        4252
Length      4506    4167        16         211      52           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
list_dir_info_                      222 external procedure  is an external procedure.  
datec                                   internal procedure  shares stack frame of external procedure list_dir_info_.  
cmode                                   internal procedure  shares stack frame of external procedure list_dir_info_.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
list_dir_info_           000100 vmode                       list_dir_info_
                         000101 pfx                         list_dir_info_
                         000102 lvname                      list_dir_info_
                         000112 xp                          list_dir_info_
                         000114 code                        list_dir_info_
                         000115 i                           list_dir_info_
                         000116 j                           list_dir_info_
                         000142 datstr                      datec
                         000156 ans                         cmode
                         000160 i                           cmode
                         000161 k                           cmode

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
date_time_$fstime             ioa_                          mdc_$find_lvname

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000343        22 000354        41 000356        42 000362        43 000364        44 000370        45 000373
     46 000375        47 000426        48 000441        49 000476        50 000500        51 000520        52 000556
     53 000616        54 000645        55 000651        56 000711        57 000733        58 000764        59 001011
     60 001041        61 001072        62 001122        63 001152        64 001177        65 001203        66 001206
     68 001256        69 001266        71 001344        73 001346        74 001403        75 001436        76 001465
     77 001514        79 001562        80 001610        81 001636        82 001637        83 001641        84 001717
     85 001732        86 002013        87 002015        88 002040        89 002076        90 002136        91 002160
     92 002210        93 002237        94 002266        95 002315        96 002321        97 002361        98 002412
     99 002442       100 002470       101 002525       102 002560       104 002623       105 002651       106 002677
    107 002727       108 002757       109 003004       110 003010       111 003013       113 003063       114 003073
    116 003151       118 003153       119 003161       121 003233       122 003245       124 003335       126 003337
    127 003354       129 003435       130 003456       132 003564       134 003566       135 003567       136 003571
    137 003620       138 003633       139 003663       140 003665       141 003706       142 003733       143 003737
    144 003774       145 004000       146 004040       148 004041       151 004065       155 004066       161 004070
    162 004105       166 004113       176 004115       177 004117       178 004121       179 004126       180 004134
    181 004143       183 004144       185 004146       186 004160


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
