	COMPILATION LISTING OF SEGMENT expand_io_status_msg_
	Compiled by: Multics PL/I Compiler, Release 28e, of February 14, 1985
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 03/13/85  1140.8 mst Wed
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 
        7 /* format: style1,insnl,linecom,indcomtxt,^inddcls,^indnoniterdo */
        8 
        9 expand_io_status_msg_:
       10      procedure ();
       11 
       12 /* *      EXPAND_IO_STATUS_MSG_
       13*   *
       14*   *      Expander for I/O status messages logged by ioi_masked$interrupt.
       15*   *
       16*   *      84-12-05, W. Olin Sibert: Initial coding, after print_syserr_msg_
       17*   *	85-01-25, EJ Sharpe: changed name from expand_ioi_msg_
       18*   *      85-02-10, EJ Sharpe: changed to call analyze_(device detail)_stat_
       19*   *	85-03-05, EJ Sharpe: added ability to get arbitrary anal table if
       20*   *			standard one can't be used.
       21**/
       22 
       23 declare P_log_message_format_ptr
       24 			 pointer parameter;
       25 declare P_log_message_ptr	 pointer parameter;
       26 declare P_expand_mode_ptr	 pointer parameter;
       27 declare P_expansion		 char (*) varying parameter;
       28 declare P_code		 fixed bin (35) parameter;
       29 
       30 declare log_message_format_ptr pointer;
       31 declare expand_detail	 bit (1) aligned;
       32 declare message_type	 fixed bin;
       33 declare dv_name		 char (8);
       34 declare pic99		 picture "99";
       35 declare table_ptr		 ptr;
       36 declare anal_ptr		 ptr;
       37 declare code		 fixed bin (35);
       38 declare interesting		 bit (1);
       39 declare dev		 char (3);		/* first three chars of device name */
       40 
       41 declare temp		 char (256) varying;	/* String used in constructing output-- the longest output */
       42 						/* line is "Detailed status", at about 120 characters */
       43 
       44 declare error_table_$invalid_record_desc
       45 			 fixed bin (35) external static;
       46 
       47 declare tape_status_table_$tape_status_table_
       48 			 ext;
       49 declare prt_status_table_$prt_status_table_
       50 			 ext;
       51 declare crz_status_table_$crz_status_table_
       52 			 ext;
       53 declare cpz_status_table_$cpz_status_table_
       54 			 ext;
       55 declare disk_status_table_$disk_status_table_
       56 			 ext;
       57 declare opc_status_table_$opc_status_table_
       58 			 ext;
       59 
       60 declare ioa_$rsnnl		 entry options (variable);
       61 
       62 declare (addr, bin, dimension, null, rtrim, size, substr, unspec)
       63 			 builtin;
       64 
       65 declare analyze_device_stat_$rsnnl
       66 			 entry (char (*) var, ptr, bit (72) aligned, bit (18) aligned);
       67 declare analyze_detail_stat_$rsnnl
       68 			 entry (char (*), bit (36) aligned, bit (*), char (256) var, bit (1), fixed bin (35));
       69 declare hcs_$make_ptr	 entry (ptr, char (*), char (*), ptr, fixed bin (35));
       70 
       71 
       72 
       73 expand_io_status_msg_$format:
       74      entry (P_log_message_format_ptr, P_log_message_ptr, P_expand_mode_ptr, P_expansion, P_code);
       75 
       76 	log_message_format_ptr = P_log_message_format_ptr;
       77 	log_message_ptr = P_log_message_ptr;
       78 
       79 	io_msgp = addr (log_message.data (1));
       80 
       81 	if (dimension (log_message.data, 1) >= size (io_msg))
       82 	then
       83 	     expand_detail = "1"b;			/* Decide how much is there, hence, how much */
       84 	else expand_detail = "0"b;			/* to expand. */
       85 
       86 	goto COMMON;
       87 
       88 
       89 
       90 /* This is a compatibility entrypoint-- it processes an old-format "syserr" class
       91*   message, which has the syserr binary code in the first word of the data. */
       92 
       93 expand_io_status_msg_$syserr:
       94      entry (P_log_message_format_ptr, P_log_message_ptr, P_expand_mode_ptr, P_expansion, P_code);
       95 
       96 	log_message_format_ptr = P_log_message_format_ptr;
       97 	log_message_ptr = P_log_message_ptr;
       98 
       99 	io_msgp = addr (log_message.data (2));		/* This message has data starting in word 2 */
      100 
      101 	message_type = bin (log_message.data (1));	/* and the old syserr binary type here */
      102 
      103 	if (message_type = SB_io_err)
      104 	then
      105 	     expand_detail = "0"b;
      106 	else if (message_type = SB_io_err_detail)
      107 	then
      108 	     expand_detail = "1"b;
      109 	else if (message_type = SB_ocdcm_err)
      110 	then
      111 	     expand_detail = "0"b;
      112 	else if (message_type = SB_disk_err)
      113 	then
      114 	     expand_detail = "0"b;
      115 	else do;					/* Not one of ours, Jack. */
      116 	     P_code = error_table_$invalid_record_desc;
      117 	     return;
      118 	end;
      119 
      120 	goto COMMON;
      121 
      122 
      123 
      124 COMMON:
      125 
      126 	P_expansion = "";				/* Start out empty */
      127 	dv_name = io_msg.devname;
      128 	dev = substr (dv_name, 1, 3);			/* the first three chars tell us what it is */
      129 	if dev = "dsk" | dev = "tap"
      130 	then do;
      131 	     dv_name = rtrim (dv_name) || "_";
      132 	     pic99 = bin (io_msg.device);
      133 	     dv_name = rtrim (dv_name) || pic99;
      134 	end;
      135 
      136 
      137 	if dev = "tap"
      138 	then table_ptr = addr (tape_status_table_$tape_status_table_);
      139 	else if dev = "prt"
      140 	then table_ptr = addr (prt_status_table_$prt_status_table_);
      141 	else if dev = "rdr"
      142 	then table_ptr = addr (crz_status_table_$crz_status_table_);
      143 	else if dev = "pun"
      144 	then table_ptr = addr (cpz_status_table_$cpz_status_table_);
      145 	else if dev = "dsk"
      146 	then table_ptr = addr (disk_status_table_$disk_status_table_);
      147 	else if dev = "opc"
      148 	then table_ptr = addr (opc_status_table_$opc_status_table_);
      149 	else do;
      150 	     call hcs_$make_ptr (null (), dev || "_status_table_", dev || "_status_table_", table_ptr, code);
      151 	     if code ^= 0
      152 	     then table_ptr = null ();
      153 	end;
      154 
      155 	call ioa_$rsnnl ("^a (chnl ^a).  ", temp, (0), dv_name, io_msg.channel);
      156 	P_expansion = P_expansion || temp;
      157 
      158 	if io_msg.time_out
      159 	then temp = "Channel timed out.";
      160 	else if io_msg.level = "001"b
      161 	then call ioa_$rsnnl ("System fault: ^w", temp, (0), io_msg.status);
      162 	else call analyze_device_stat_$rsnnl (temp, table_ptr, (io_msg.status), ("0"b));
      163 	P_expansion = P_expansion || temp;
      164 
      165 	if bin (io_msg.count) > 1
      166 	then do;
      167 	     call ioa_$rsnnl (" (^d times)", temp, 0, bin (io_msg.count));
      168 	     P_expansion = P_expansion || temp;
      169 	end;
      170 
      171 	if expand_detail
      172 	then do;
      173 	     call analyze_detail_stat_$rsnnl (dv_name, io_msg.status, io_msg.detailed_status, temp, interesting, code);
      174 	     if interesting
      175 	     then P_expansion = P_expansion || temp;
      176 	end;
      177 
      178 	P_code = 0;
      179 	return;
      180 
      181 
  1     1 /* BEGIN INCLUDE FILE ... log_message.incl.pl1 ... 84-04-25 ... W. Olin Sibert */
  1     2 
  1     3 declare 1 log_message_header  aligned based,                /* Items marked "(SET)" are set by $create_message */
  1     4           2 sentinel          bit (36) aligned,             /* Proper value declared in log_segment.incl.pl1 */
  1     5           2 sequence          fixed bin (35),               /* Sequence number for this message (SET) */
  1     6           2 severity          fixed bin (8) unaligned,      /* Severity of message */
  1     7           2 data_class_lth    fixed bin (9) unaligned unsigned, /* Length of data class-- 0 to 16 (SET) */
  1     8           2 time              fixed bin (53) unaligned,     /* Time message originated */
  1     9           2 text_lth          fixed bin (17) unaligned,     /* Length of message text. Must be nonzero (SET) */
  1    10           2 data_lth          fixed bin (17) unaligned,     /* Length of binary data. May be zero (SET) */
  1    11           2 process_id        bit (36) aligned;             /* Process id of process writing message */
  1    12 
  1    13 declare 1 log_message         aligned based (log_message_ptr),
  1    14           2 header            aligned like log_message_header,
  1    15           2 text              char (log_message_text_lth         refer (log_message.text_lth)) unaligned,
  1    16           2 data_class        char (log_message_data_class_lth   refer (log_message.data_class_lth)) unaligned,
  1    17           2 data              dim (log_message_data_lth          refer (log_message.data_lth)) bit (36) aligned;
  1    18 
  1    19 declare   log_message_ptr pointer;
  1    20 declare   log_message_text_lth fixed bin;
  1    21 declare   log_message_data_class_lth fixed bin;
  1    22 declare   log_message_data_lth fixed bin;
  1    23 
  1    24 /* END INCLUDE FILE ... log_message.incl.pl1 */
      182 
      183 
  2     1 /* Begin include file ..... io_syserr_msg.incl.pl1 */
  2     2 
  2     3 /* Created October 1975 by Larry Johnson */
  2     4 /* Modified 11/11/76 by Noel I. Morris */
  2     5 /* Modified November 1979 by Larry Johnson for detailed status */
  2     6 /* Modified February 1981 by Chris Jones to use channel names */
  2     7 
  2     8 /* This include file defines the format of the syserr message generated for I/O errors. */
  2     9 /* This message is also defined (size and type) by the "io_msg" and "io_msg_detail"
  2    10*   constants in syserr_binary_def.incl.pl1 */
  2    11 
  2    12 dcl  io_msgp ptr;					/* Pointer to syserr message structure */
  2    13 
  2    14 dcl  1 io_msg aligned based (io_msgp),
  2    15        (
  2    16        2 level bit (3),				/* Level of interrupt being logged */
  2    17        2 fill1 bit (9),
  2    18        2 device bit (6),				/* Device which caused error */
  2    19        2 time_out bit (1),				/* Set if error caused by channel timeout */
  2    20        2 type bit (2),				/* Type of last DCW */
  2    21        2 command bit (6),				/* Command being executed by device */
  2    22        2 fill2 bit (3),
  2    23        2 count bit (6)
  2    24        ) unal,					/* Count of message repetitions */
  2    25        2 channel char (8),				/* Channel over which interrupt came */
  2    26        2 status bit (36),				/* First word of IOM status */
  2    27        2 devname char (4),				/* Device name */
  2    28        2 detailed_status bit (216) unaligned;               /* Optional detailed device status */
  2    29 
  2    30 /* End include file ..... io_syserr_msg.incl.pl1 */
      184 
      185 
  3     1 /* BEGIN INCLUDE FILE .. syserr_binary_def.incl.pl1 */
  3     2 
  3     3 /* This include file has an ALM version, keep 'em in sync. */
  3     4 
  3     5 /* format: off */
  3     6 
  3     7 /* Modified January 1984 by Paul Farley to add an array of entry values
  3     8*   to be examined by display_cpu_error. */
  3     9 /* Modified October 1984 by EJ Sharpe to include SB_audit_message */
  3    10 /* Modified January 1985 by EJ Sharpe for SB_char_data_classes */
  3    11 /* Modified 1985-01-25, BIM: added ring alarm audit support. */
  3    12 /* Modified 1985-02-20, EJ Sharpe: added SB_ibm3270_mde, syserr_binary_(seg vol)damage_class,
  3    13*		also changed some codes to "SB_unused_NN" - see line comments */
  3    14 
  3    15 /* In the future, these will be the only constants needed in this include
  3    16*file.  They are the binary data class strings for messages in the new format
  3    17*syserr logs.  The names are all of the form SB_ZZZZZZZ_data_class where
  3    18*ZZZZZZZ is the value of the data class string.  Message expanders are named
  3    19*expand_ZZZZZZZ_msg_ and are referenced by the log perusal tools. */
  3    20 
  3    21 dcl (						/* include file name */
  3    22 SB_io_status_data_class	init ("io_status"),		/* io_syserr_msg */
  3    23 SB_hwfault_data_class	init ("hwfault"),		/* syserr_fault_msg */
  3    24 SB_mos_data_class		init ("mos"),		/* scr */
  3    25 SB_segdamage_data_class	init ("segdamage"),		/* segdamage_msg */
  3    26 SB_voldamage_data_class	init ("voldamage"),		/* segdamage_msg (first two words) */
  3    27 SB_mdc_del_uidpath_data_class	init ("mdc_del_uidpath"),	/* none - 16 word UID path */
  3    28 SB_mmdam_data_class		init ("mmdam"),		/* syserr_mmdam_msg */
  3    29 SB_mpc_poll_data_class	init ("mpc_poll"),		/* poll_mpc_data */
  3    30 SB_fnp_poll_data_class	init ("fnp_poll"),		/* poll_fnp_data */
  3    31 SB_config_deck_data_class	init ("config_deck"),	/* config_deck */
  3    32 SB_vtoce_data_class		init ("vtoce"),		/* vtoce */
  3    33 SB_access_audit_data_class	init ("access_audit"),	/* access_audit_bin_header */
  3    34 SB_ibm3270_mde_data_class	init ("ibm3270_mde")	/* ibm3270_mpx_data */
  3    35 ) static internal char (16) varying options (constant);
  3    36 
  3    37 
  3    38 /************************
  3    39*Once the syserr$binary is replaced with something that takes real data classes
  3    40*and all system modules and tools are upgraded to use the new interface, the
  3    41*rest of this include file may be discarded.
  3    42*************************/
  3    43 
  3    44 /* The limit of 36 is arbitrary- there is no reason that it can not be
  3    45*   extended at any time. */
  3    46 
  3    47 dcl (
  3    48 SB_disk_err	init (1),		SBL_disk_err	init (5),
  3    49 SB_hw_fault	init (2),		SBL_hw_fault	init (176),
  3    50 SB_io_err		init (3),		SBL_io_err	init (5),
  3    51 SB_unused_4	init (4),		SBL_unused_4	init (1),	/* was "mos_poll" (mos poll time) */
  3    52 SB_mos_err	init (5),		SBL_mos_err	init (2),	/* mos memory error data */
  3    53 SB_unused_6	init (6),		SBL_unused_6	init (1),	/* was "bulk_status" (bulk dcb status) */
  3    54 SB_unused_7	init (7),		SBL_unused_7	init (1), /* was "bulk_csb" (bulk csb status) */
  3    55 SB_unused_8	init (8),		SBL_unused_8	init (3), /* was "free_st_1" */
  3    56 SB_unused_9	init (9),		SBL_unused_9	init (2), /* was "free_st_2" */
  3    57 SB_unused_10	init (10),	SBL_unused_10	init (21), /* was "unpr_add" */
  3    58 SB_zerpag		init (11),	SBL_zerpag	init (20),
  3    59 SB_unused_12	init (12),	SBL_unused_12	init (20), /* was "unpr_add" */
  3    60 SB_vtoc_salv_dam	init (13),	SBL_vtoc_salv_dam	init (20),
  3    61 SB_unused_14	init (14),	SBL_unused_14	init (20), /* was "page_rw_err" */
  3    62 SB_unused_15	init (15),	SBL_unused_15	init (3), /* was "ruad" */
  3    63 SB_random_segdamage	init (16),	SBL_random_segdamage init (20),
  3    64 SB_read_nc	init (17),	SBL_read_nc	init (2),
  3    65 SB_unused_18	init (18),	SBL_unused_18	init (2), /* was "vtoc_err" */
  3    66 SB_mdc_del_uidpath	init (19),	SBL_mdc_del_uidpath	init (16),
  3    67 SB_ocdcm_err	init (20),	SBL_ocdcm_err	init (5),
  3    68 SB_mmdam		init (21),	SBL_mmdam		init (2),
  3    69 SB_verify_lock	init (22),	SBL_verify_lock	init (176),
  3    70 SB_io_err_detail	init (23),	SBL_io_err_detail	init (11),
  3    71 SB_mpc_poll	init (24),	SBL_mpc_poll	init (256) /* max */,
  3    72 SB_fnp_poll	init (25),	SBL_fnp_poll	init (256) /* max */,
  3    73 SB_config_deck	init (26),	SBL_config_deck	init (256) /* 16 cards at 16 words */,
  3    74 SB_vtoce		init (27),	SBL_vtoce		init (192),    /* 1 VTOCE */
  3    75 SB_access_audit	init (28),	SBL_access_audit	init (256), /* max */
  3    76 SB_ibm3270_mde	init (35),	SBL_ibm3270_mde	init (256), /* max */
  3    77 SB_end_of_table	init (36),	SBL_end_of_table	init (1)
  3    78   ) internal static options (constant) fixed bin;
  3    79 
  3    80 
  3    81 /* The following array is a mapping of the old syserr$binary codes into the
  3    82*new data classes for MR11.  It is primarily used by syserr_copy to translate
  3    83*the binary data codes stored in the wired syserr log (see above) into the data
  3    84*classes needed by the ring-0 paged syserr log which is a new format log.  It
  3    85*is also used by syserr_log_util_ to translate the data classes back into the
  3    86*corresponding binary code (for tools not yet upgraded to deal with the new
  3    87*format log messages). */
  3    88 
  3    89 dcl SB_char_data_classes (36) char (16) varying internal static options (constant)
  3    90 	init (	"io_status",		/* 1 */
  3    91 		"hwfault",		/* 2 */
  3    92 		"io_status",		/* 3 */
  3    93 		"unused_4",		/* 4 */
  3    94 		"mos",			/* 5 */
  3    95 
  3    96 		"unused_6",		/* 6 */
  3    97 		"unused_7",		/* 7 */
  3    98 		"unused_8",		/* 8 */
  3    99 		"unused_9",		/* 9 */ 
  3   100 		"unused_10",		/* 10 */
  3   101 
  3   102 		"segdamage",		/* 11 */
  3   103 		"unused_12",		/* 12 */
  3   104 		"segdamage",		/* 13 */
  3   105 		"unused_14",		/* 14 */
  3   106 		"unused_15",		/* 15 */
  3   107 
  3   108 		"segdamage",		/* 16 */
  3   109 		"voldamage",		/* 17 */
  3   110 		"unused_18",		/* 18 */
  3   111 		"mdc_del_uidpath",		/* 19 */
  3   112 		"io_status",		/* 20 */
  3   113 
  3   114 		"mmdam",			/* 21 */
  3   115 		"hwfault",		/* 22 */
  3   116 		"io_status",		/* 23 */
  3   117 		"mpc_poll",		/* 24 */
  3   118 		"fnp_poll",		/* 25 */
  3   119 
  3   120 		"config_deck",		/* 26 */
  3   121 		"vtoce",			/* 27 */
  3   122 		"access_audit",		/* 28 */
  3   123 		"unused_29",		/* 29 */
  3   124 		"unused_30",		/* 30 */
  3   125 		"unused_31",		/* 31 */
  3   126 		"unused_32",		/* 32 */
  3   127 		"unused_33",		/* 33 */
  3   128 		"unused_34",		/* 34 */
  3   129 		"ibm3270_mde",		/* 35 */
  3   130 		"unused_36"		/* 36 */
  3   131 	);
  3   132 
  3   133 
  3   134 /* format: on */
  3   135 
  3   136 /* These constants are used by various tools which analyze syserr messages and
  3   137*still call the old interface "syserr_log_util_". */
  3   138 
  3   139      dcl	   syserr_binary_mos_mask init ("060000000000"b3) bit (36) static options (constant);
  3   140      dcl	   syserr_binary_seg_damage_mask init ("000374000000"b3) bit (36) static options (constant);
  3   141      dcl	   syserr_binary_vol_damage_mask init ("003413000000"b3) bit (36) static options (constant);
  3   142      dcl	   syserr_binary_address_damage_mask init ("002010000000"b3) bit (36) static options (constant);
  3   143 
  3   144      dcl	   display_cpu_error_binary_defs (2) init (
  3   145 			      2,			/** SB_hw_fault */
  3   146 			      22			/** SB_verify_lock */
  3   147 			      ) internal static options (constant) fixed bin;
  3   148 
  3   149 /* END INCLUDE FILE syserr_binary_def.incl.pl1 */
      186 
      187 
      188      end expand_io_status_msg_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    03/13/85  1026.5  expand_io_status_msg_.pl1         >spec>on>41-11>expand_io_status_msg_.pl1
182          1    01/21/85  0912.2  log_message.incl.pl1              >ldd>include>log_message.incl.pl1
184          2    01/18/85  0953.2  io_syserr_msg.incl.pl1            >ldd>include>io_syserr_msg.incl.pl1
186          3    03/12/85  1556.6  syserr_binary_def.incl.pl1        >spec>on>41-11>syserr_binary_def.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
P_code                                 parameter       fixed bin(35,0)          dcl 28 set ref 73 93 116* 178*
P_expand_mode_ptr                      parameter       pointer                  dcl 26 ref 73 93
P_expansion                            parameter       varying char             dcl 27 set ref 73 93 124* 156* 156 163* 163 168* 168
                                                                                  174* 174
P_log_message_format_ptr               parameter       pointer                  dcl 23 ref 73 76 93 96
P_log_message_ptr                      parameter       pointer                  dcl 25 ref 73 77 93 97
SB_disk_err                            constant        fixed bin(17,0)          initial dcl 3-47 ref 112
SB_io_err                              constant        fixed bin(17,0)          initial dcl 3-47 ref 103
SB_io_err_detail                       constant        fixed bin(17,0)          initial dcl 3-47 ref 106
SB_ocdcm_err                           constant        fixed bin(17,0)          initial dcl 3-47 ref 109
addr                                                   builtin function         dcl 62 ref 79 99 137 139 141 143 145 147
analyze_detail_stat_$rsnnl      000032 constant        entry                    external dcl 67 ref 173
analyze_device_stat_$rsnnl      000030 constant        entry                    external dcl 65 ref 162
bin                                                    builtin function         dcl 62 ref 101 132 165 167 167
channel                   1            based           char(8)                  level 2 dcl 2-14 set ref 155*
code                            000112 automatic       fixed bin(35,0)          dcl 37 set ref 150* 151 173*
count                     0(30)        based           bit(6)                   level 2 packed unaligned dcl 2-14 ref 165 167 167
cpz_status_table_$cpz_status_table_
                                000020 external static fixed bin(17,0)          dcl 53 set ref 143
crz_status_table_$crz_status_table_
                                000016 external static fixed bin(17,0)          dcl 51 set ref 141
data                                   based           bit(36)                  array level 2 dcl 1-13 set ref 79 81 99 101
data_class_lth            2(09)        based           fixed bin(9,0)           level 3 packed unsigned unaligned dcl 1-13 ref 79 81
                                                                                  99 101
data_lth                  4(18)        based           fixed bin(17,0)          level 3 packed unaligned dcl 1-13 ref 81
detailed_status           5            based           bit(216)                 level 2 packed unaligned dcl 2-14 set ref 173*
dev                             000114 automatic       char(3)                  unaligned dcl 39 set ref 128* 129 129 137 139 141
                                                                                  143 145 147 150 150
device                    0(12)        based           bit(6)                   level 2 packed unaligned dcl 2-14 ref 132
devname                   4            based           char(4)                  level 2 dcl 2-14 ref 127
dimension                                              builtin function         dcl 62 ref 81
disk_status_table_$disk_status_table_
                                000022 external static fixed bin(17,0)          dcl 55 set ref 145
dv_name                         000104 automatic       char(8)                  unaligned dcl 33 set ref 127* 128 131* 131 133* 133
                                                                                  155* 173*
error_table_$invalid_record_desc
                                000010 external static fixed bin(35,0)          dcl 44 ref 116
expand_detail                   000102 automatic       bit(1)                   dcl 31 set ref 81* 84* 103* 106* 109* 112* 171
hcs_$make_ptr                   000034 constant        entry                    external dcl 69 ref 150
header                                 based           structure                level 2 dcl 1-13
interesting                     000113 automatic       bit(1)                   unaligned dcl 38 set ref 173* 174
io_msg                                 based           structure                level 1 dcl 2-14 set ref 81
io_msgp                         000220 automatic       pointer                  dcl 2-12 set ref 79* 81 99* 127 132 155 158 160 160
                                                                                  162 165 167 167 173 173
ioa_$rsnnl                      000026 constant        entry                    external dcl 60 ref 155 160 167
level                                  based           bit(3)                   level 2 packed unaligned dcl 2-14 ref 160
log_message                            based           structure                level 1 dcl 1-13
log_message_format_ptr          000100 automatic       pointer                  dcl 30 set ref 76* 96*
log_message_header                     based           structure                level 1 dcl 1-3
log_message_ptr                 000216 automatic       pointer                  dcl 1-19 set ref 77* 79 81 97* 99 101
message_type                    000103 automatic       fixed bin(17,0)          dcl 32 set ref 101* 103 106 109 112
null                                                   builtin function         dcl 62 ref 150 150 151
opc_status_table_$opc_status_table_
                                000024 external static fixed bin(17,0)          dcl 57 set ref 147
pic99                           000106 automatic       picture(2)               unaligned dcl 34 set ref 132* 133
prt_status_table_$prt_status_table_
                                000014 external static fixed bin(17,0)          dcl 49 set ref 139
rtrim                                                  builtin function         dcl 62 ref 131 133
size                                                   builtin function         dcl 62 ref 81
status                    3            based           bit(36)                  level 2 dcl 2-14 set ref 160* 162 173*
substr                                                 builtin function         dcl 62 ref 128
table_ptr                       000110 automatic       pointer                  dcl 35 set ref 137* 139* 141* 143* 145* 147* 150*
                                                                                  151* 162*
tape_status_table_$tape_status_table_
                                000012 external static fixed bin(17,0)          dcl 47 set ref 137
temp                            000115 automatic       varying char(256)        dcl 41 set ref 155* 156 158* 160* 162* 163 167* 168
                                                                                  173* 174
text_lth                  4            based           fixed bin(17,0)          level 3 packed unaligned dcl 1-13 ref 79 81 99 101
time_out                  0(18)        based           bit(1)                   level 2 packed unaligned dcl 2-14 ref 158

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
SBL_access_audit                       internal static fixed bin(17,0)          initial dcl 3-47
SBL_config_deck                        internal static fixed bin(17,0)          initial dcl 3-47
SBL_disk_err                           internal static fixed bin(17,0)          initial dcl 3-47
SBL_end_of_table                       internal static fixed bin(17,0)          initial dcl 3-47
SBL_fnp_poll                           internal static fixed bin(17,0)          initial dcl 3-47
SBL_hw_fault                           internal static fixed bin(17,0)          initial dcl 3-47
SBL_ibm3270_mde                        internal static fixed bin(17,0)          initial dcl 3-47
SBL_io_err                             internal static fixed bin(17,0)          initial dcl 3-47
SBL_io_err_detail                      internal static fixed bin(17,0)          initial dcl 3-47
SBL_mdc_del_uidpath                    internal static fixed bin(17,0)          initial dcl 3-47
SBL_mmdam                              internal static fixed bin(17,0)          initial dcl 3-47
SBL_mos_err                            internal static fixed bin(17,0)          initial dcl 3-47
SBL_mpc_poll                           internal static fixed bin(17,0)          initial dcl 3-47
SBL_ocdcm_err                          internal static fixed bin(17,0)          initial dcl 3-47
SBL_random_segdamage                   internal static fixed bin(17,0)          initial dcl 3-47
SBL_read_nc                            internal static fixed bin(17,0)          initial dcl 3-47
SBL_unused_10                          internal static fixed bin(17,0)          initial dcl 3-47
SBL_unused_12                          internal static fixed bin(17,0)          initial dcl 3-47
SBL_unused_14                          internal static fixed bin(17,0)          initial dcl 3-47
SBL_unused_15                          internal static fixed bin(17,0)          initial dcl 3-47
SBL_unused_18                          internal static fixed bin(17,0)          initial dcl 3-47
SBL_unused_4                           internal static fixed bin(17,0)          initial dcl 3-47
SBL_unused_6                           internal static fixed bin(17,0)          initial dcl 3-47
SBL_unused_7                           internal static fixed bin(17,0)          initial dcl 3-47
SBL_unused_8                           internal static fixed bin(17,0)          initial dcl 3-47
SBL_unused_9                           internal static fixed bin(17,0)          initial dcl 3-47
SBL_verify_lock                        internal static fixed bin(17,0)          initial dcl 3-47
SBL_vtoc_salv_dam                      internal static fixed bin(17,0)          initial dcl 3-47
SBL_vtoce                              internal static fixed bin(17,0)          initial dcl 3-47
SBL_zerpag                             internal static fixed bin(17,0)          initial dcl 3-47
SB_access_audit                        internal static fixed bin(17,0)          initial dcl 3-47
SB_access_audit_data_class             internal static varying char(16)         initial dcl 3-21
SB_char_data_classes                   internal static varying char(16)         initial array dcl 3-89
SB_config_deck                         internal static fixed bin(17,0)          initial dcl 3-47
SB_config_deck_data_class              internal static varying char(16)         initial dcl 3-21
SB_end_of_table                        internal static fixed bin(17,0)          initial dcl 3-47
SB_fnp_poll                            internal static fixed bin(17,0)          initial dcl 3-47
SB_fnp_poll_data_class                 internal static varying char(16)         initial dcl 3-21
SB_hw_fault                            internal static fixed bin(17,0)          initial dcl 3-47
SB_hwfault_data_class                  internal static varying char(16)         initial dcl 3-21
SB_ibm3270_mde                         internal static fixed bin(17,0)          initial dcl 3-47
SB_ibm3270_mde_data_class              internal static varying char(16)         initial dcl 3-21
SB_io_status_data_class                internal static varying char(16)         initial dcl 3-21
SB_mdc_del_uidpath                     internal static fixed bin(17,0)          initial dcl 3-47
SB_mdc_del_uidpath_data_class          internal static varying char(16)         initial dcl 3-21
SB_mmdam                               internal static fixed bin(17,0)          initial dcl 3-47
SB_mmdam_data_class                    internal static varying char(16)         initial dcl 3-21
SB_mos_data_class                      internal static varying char(16)         initial dcl 3-21
SB_mos_err                             internal static fixed bin(17,0)          initial dcl 3-47
SB_mpc_poll                            internal static fixed bin(17,0)          initial dcl 3-47
SB_mpc_poll_data_class                 internal static varying char(16)         initial dcl 3-21
SB_random_segdamage                    internal static fixed bin(17,0)          initial dcl 3-47
SB_read_nc                             internal static fixed bin(17,0)          initial dcl 3-47
SB_segdamage_data_class                internal static varying char(16)         initial dcl 3-21
SB_unused_10                           internal static fixed bin(17,0)          initial dcl 3-47
SB_unused_12                           internal static fixed bin(17,0)          initial dcl 3-47
SB_unused_14                           internal static fixed bin(17,0)          initial dcl 3-47
SB_unused_15                           internal static fixed bin(17,0)          initial dcl 3-47
SB_unused_18                           internal static fixed bin(17,0)          initial dcl 3-47
SB_unused_4                            internal static fixed bin(17,0)          initial dcl 3-47
SB_unused_6                            internal static fixed bin(17,0)          initial dcl 3-47
SB_unused_7                            internal static fixed bin(17,0)          initial dcl 3-47
SB_unused_8                            internal static fixed bin(17,0)          initial dcl 3-47
SB_unused_9                            internal static fixed bin(17,0)          initial dcl 3-47
SB_verify_lock                         internal static fixed bin(17,0)          initial dcl 3-47
SB_voldamage_data_class                internal static varying char(16)         initial dcl 3-21
SB_vtoc_salv_dam                       internal static fixed bin(17,0)          initial dcl 3-47
SB_vtoce                               internal static fixed bin(17,0)          initial dcl 3-47
SB_vtoce_data_class                    internal static varying char(16)         initial dcl 3-21
SB_zerpag                              internal static fixed bin(17,0)          initial dcl 3-47
anal_ptr                               automatic       pointer                  dcl 36
display_cpu_error_binary_defs          internal static fixed bin(17,0)          initial array dcl 3-144
log_message_data_class_lth             automatic       fixed bin(17,0)          dcl 1-21
log_message_data_lth                   automatic       fixed bin(17,0)          dcl 1-22
log_message_text_lth                   automatic       fixed bin(17,0)          dcl 1-20
syserr_binary_address_damage_mask      internal static bit(36)                  initial unaligned dcl 3-142
syserr_binary_mos_mask                 internal static bit(36)                  initial unaligned dcl 3-139
syserr_binary_seg_damage_mask          internal static bit(36)                  initial unaligned dcl 3-140
syserr_binary_vol_damage_mask          internal static bit(36)                  initial unaligned dcl 3-141
unspec                                                 builtin function         dcl 62

NAMES DECLARED BY EXPLICIT CONTEXT.
COMMON                          000233 constant        label                    dcl 124 ref 86 120
expand_io_status_msg_           000057 constant        entry                    external dcl 9
expand_io_status_msg_$format    000072 constant        entry                    external dcl 73
expand_io_status_msg_$syserr    000144 constant        entry                    external dcl 93

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1254        1312    1027        1264
Length      1560    1027        36         231     224           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
expand_io_status_msg_               210 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
expand_io_status_msg_    000100 log_message_format_ptr      expand_io_status_msg_
                         000102 expand_detail               expand_io_status_msg_
                         000103 message_type                expand_io_status_msg_
                         000104 dv_name                     expand_io_status_msg_
                         000106 pic99                       expand_io_status_msg_
                         000110 table_ptr                   expand_io_status_msg_
                         000112 code                        expand_io_status_msg_
                         000113 interesting                 expand_io_status_msg_
                         000114 dev                         expand_io_status_msg_
                         000115 temp                        expand_io_status_msg_
                         000216 log_message_ptr             expand_io_status_msg_
                         000220 io_msgp                     expand_io_status_msg_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_cs            call_ext_out_desc   return              shorten_stack       ext_entry           ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
analyze_detail_stat_$rsnnl    analyze_device_stat_$rsnnl    hcs_$make_ptr                 ioa_$rsnnl

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
cpz_status_table_$cpz_status_table_                         crz_status_table_$crz_status_table_
disk_status_table_$disk_status_table_                       error_table_$invalid_record_desc
opc_status_table_$opc_status_table_                         prt_status_table_$prt_status_table_
tape_status_table_$tape_status_table_




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      9 000056        73 000064        76 000105        77 000111        79 000114        81 000130        84 000140
     86 000141        93 000142        96 000157        97 000163        99 000166       101 000202       103 000205
    106 000211       109 000216       112 000222       116 000226       117 000231       120 000232       124 000233
    127 000236       128 000243       129 000246       131 000252       132 000300       133 000315       134 000343
    137 000344       139 000353       141 000361       143 000367       145 000375       147 000403       150 000411
    151 000456       155 000462       156 000523       158 000537       160 000550       162 000612       163 000645
    165 000661       167 000672       168 000727       171 000743       173 000745       174 001003       178 001022
    179 001024


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
