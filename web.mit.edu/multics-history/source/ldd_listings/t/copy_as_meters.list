	COMPILATION LISTING OF SEGMENT copy_as_meters
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/12/82  1234.7 mst Fri
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 copy_as_meters: proc;
       12 
       13 /* This program copies the contents of "stat_seg"
       14*   from where the answering service program as_meter_
       15*   has created it into a file in the user area, and
       16*   resets the stat_seg pointer to start again at the bottom.
       17*
       18*   THVV 2/72 */
       19 /* Modofied June 1979 by C. Hornig to copy wholw stat_seg. */
       20 
       21 dcl  dn char (168) aligned,
       22      en char (32) aligned,
       23      statp ptr,
       24      movelen fixed bin,
       25      ap ptr,
       26      al fixed bin,
       27      ec fixed bin,
       28      p ptr;
       29 
       30 dcl  cu_$arg_ptr entry (fixed bin, ptr, fixed bin, fixed bin),
       31      expand_path_ entry (ptr, fixed bin, ptr, ptr, fixed bin),
       32      ioa_ entry options (variable),
       33      com_err_ entry options (variable);
       34 
       35 dcl  hcs_$initiate entry (char (*) aligned, char (*) aligned, char (*) aligned, fixed bin (1),
       36      fixed bin (2), ptr, fixed bin),
       37      hcs_$make_seg entry (char (*) aligned, char (*) aligned, char (*) aligned, fixed bin (5), ptr, fixed bin),
       38      hcs_$terminate_noname entry (ptr, fixed bin);
       39 
       40 dcl (addr, null) builtin;
       41 
       42 declare  sys_info$max_seg_size fixed bin (19) external static;
       43 
       44 dcl 1 movetable based aligned,
       45     2 moveary (movelen) fixed bin (35);
       46 
  1     1 /* BEGIN INCLUDE FILE ... stat_seg.incl.pl1 - answering service statistics */
  1     2 
  1     3 dcl 1 statistics based (statp) aligned,			/* Filled in by "as_meter_" periodically. */
  1     4     2 time_of fixed bin (71),				/* Time of sample. */
  1     5     2 index fixed bin,				/* Index of current slot */
  1     6     2 wrapped fixed bin,				/* Incremented every time we wrap around */
  1     7     2 pad (4) fixed bin,
  1     8     2 array (652),					/* Array of sample bins */
  1     9       3 time fixed bin (71),				/* Sample time */
  1    10       3 sysid char (8),				/* Current system ID */
  1    11       3 uptime fixed bin (71),			/* Time of bootload */
  1    12       3 units fixed bin,				/* Number of load units */
  1    13       3 users fixed bin,				/* Number of users */
  1    14       3 erfno char (8),				/* ERF number from last crash */
  1    15       3 crashtime fixed bin (71),			/* Time of crash. */
  1    16       3 ncpu fixed bin (5) unal,			/* Current # of CPU's */
  1    17       3 pad2 bit (30) unal,
  1    18       3 kmem fixed bin (17) unal,			/* Current # of pages of main core */
  1    19       3 kbulk fixed bin (17) unal,			/* Current # of pages of paging dev */
  1    20       3 system_virtual_time fixed bin (71),		/* Cumulative virtual cpu time		*/
  1    21       3 tcdata_contents (256) fixed bin,		/* Copy of header of ring 0 tc_data */
  1    22       3 sst_contents (128) fixed bin;			/* Copy of header of ring 0 sst */
  1    23 
  1    24 dcl  STAT_header_lth fixed bin int static init (8);	/* Lth in words for stat_seg header. */
  1    25 dcl  STAT_entry_lth fixed bin int static init (400);	/* Length in words for stat_seg entry. */
  1    26 
  1    27 /* END INCLUDE FILE ... stat_seg.incl.pl1 */
       47 
       48 
       49 /* ------------------------------------------------------- */
       50 
       51 	call cu_$arg_ptr (1, ap, al, ec);
       52 	if ec ^= 0 then do;
       53 er:	     call com_err_ (ec, "copy_as_meters", "");
       54 	     return;
       55 	end;
       56 	call expand_path_ (ap, al, addr (dn), addr (en), ec);
       57 	if ec ^= 0 then go to er;
       58 
       59 	call hcs_$make_seg (dn, en, "", 1011b, p, ec);
       60 	if p = null then go to er;
       61 
       62 	call hcs_$initiate (">system_control_dir", "stat_seg", "", 0, 1, statp, ec);
       63 	if statp = null then go to er;
       64 
       65 	if statistics.wrapped ^= 0			/* is it has wrapped */
       66 	then movelen = sys_info$max_seg_size;		/* copy the whole segment */
       67 	else movelen = STAT_header_lth + statistics.index * STAT_entry_lth; /* otherwise copy the used part */
       68 
       69 	p -> movetable = statp -> movetable;
       70 
       71 	statp -> statistics.index = 0;
       72 	statp -> statistics.wrapped = 0;
       73 
       74 	if p -> statistics.wrapped ^= 0 then call ioa_ ("wrapped");
       75 
       76 	call hcs_$terminate_noname (p, ec);
       77 	call hcs_$terminate_noname (statp, ec);
       78 
       79      end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/12/82  1108.9  copy_as_meters.pl1                >spec>on>11/12/82>copy_as_meters.pl1
47           1    07/23/81  1735.0  stat_seg.incl.pl1                 >ldd>include>stat_seg.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
STAT_entry_lth                         constant        fixed bin(17,0)          initial dcl 1-25 ref 67
STAT_header_lth                        constant        fixed bin(17,0)          initial dcl 1-24 ref 67
addr                                                   builtin function         dcl 40 ref 56 56 56 56
al                              000170 automatic       fixed bin(17,0)          dcl 21 set ref 51* 56*
ap                              000166 automatic       pointer                  dcl 21 set ref 51* 56*
com_err_                        000016 constant        entry                    external dcl 30 ref 53
cu_$arg_ptr                     000010 constant        entry                    external dcl 30 ref 51
dn                              000100 automatic       char(168)                dcl 21 set ref 56 56 59*
ec                              000171 automatic       fixed bin(17,0)          dcl 21 set ref 51* 52 53* 56* 57 59* 62* 76* 77*
en                              000152 automatic       char(32)                 dcl 21 set ref 56 56 59*
expand_path_                    000012 constant        entry                    external dcl 30 ref 56
hcs_$initiate                   000020 constant        entry                    external dcl 35 ref 62
hcs_$make_seg                   000022 constant        entry                    external dcl 35 ref 59
hcs_$terminate_noname           000024 constant        entry                    external dcl 35 ref 76 77
index                     2            based           fixed bin(17,0)          level 2 dcl 1-3 set ref 67 71*
ioa_                            000014 constant        entry                    external dcl 30 ref 74
movelen                         000164 automatic       fixed bin(17,0)          dcl 21 set ref 65* 67* 69
movetable                              based           structure                level 1 dcl 44 set ref 69* 69
null                                                   builtin function         dcl 40 ref 60 63
p                               000172 automatic       pointer                  dcl 21 set ref 59* 60 69 74 76*
statistics                             based           structure                level 1 dcl 1-3
statp                           000162 automatic       pointer                  dcl 21 set ref 62* 63 65 67 69 71 72 77*
sys_info$max_seg_size           000026 external static fixed bin(19,0)          dcl 42 ref 65
wrapped                   3            based           fixed bin(17,0)          level 2 dcl 1-3 set ref 65 72* 74

NAMES DECLARED BY EXPLICIT CONTEXT.
copy_as_meters                  000034 constant        entry                    external dcl 11
er                              000061 constant        label                    dcl 53 ref 57 60 63

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       460         510     343         470
Length       702     343        30         155     115           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
copy_as_meters                      212 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
copy_as_meters           000100 dn                          copy_as_meters
                         000152 en                          copy_as_meters
                         000162 statp                       copy_as_meters
                         000164 movelen                     copy_as_meters
                         000166 ap                          copy_as_meters
                         000170 al                          copy_as_meters
                         000171 ec                          copy_as_meters
                         000172 p                           copy_as_meters

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      cu_$arg_ptr                   expand_path_                  hcs_$initiate
hcs_$make_seg                 hcs_$terminate_noname         ioa_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
sys_info$max_seg_size




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000033        51 000041        52 000057        53 000061        54 000106        56 000107        57 000132
     59 000134        60 000173        62 000177        63 000253        65 000257        67 000266        69 000274
     71 000301        72 000302        74 000303        76 000320        77 000331        79 000342


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
