	COMPILATION LISTING OF SEGMENT checker_init_meters_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 06/04/84  1252.9 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 /* format: style2 */
        7 
        8 checker_init_meters_:
        9      procedure;
       10 
       11 /* Put appropriate values in checker_data_$meters_ptr -> meters */
       12 /* BIM 8/82 */
       13 
  1     1 /* Begin include file checker_dcls_.incl.pl1 BIM 7/82 */
  1     2 /* Modified for loaded by Keith Loepere, December 1983 */
  1     3 /* format: style3,idind30 */
  1     4 
  1     5 dcl	checker_data_$temp_ptrs	(4) ptr external static;
  1     6 dcl	checker_data_$slt_ptr	ptr external static;
  1     7 dcl	checker_data_$area_ptr	ptr external static;
  1     8 dcl	checker_area		area (sys_info$max_seg_size) based (checker_data_$area_ptr);
  1     9 
  1    10 dcl	checker_data_$name_table_ptr	ptr external static;
  1    11 dcl	checker_data_$buffer_ptr	ptr external static;
  1    12 dcl	checker_data_$meter_ptr	ptr external static;
  1    13 
  1    14 dcl	checker_data_$input_iocbp	ptr ext static;
  1    15 dcl	checker_data_$output_iocbp	ptr ext static;
  1    16 
  1    17 
  1    18 dcl	checker_data_$last_wired_collection
  1    19 				fixed bin external static;
  1    20 dcl	checker_data_$last_text_wired_collection
  1    21 				fixed bin external static;
  1    22 dcl	checker_data_$last_supervisor_collection
  1    23 				fixed bin external static;
  1    24 
  1    25 dcl       1 checker_data_$collection_names (0:10) external static,
  1    26 	2 major fixed bin,
  1    27 	2 minor fixed bin;
  1    28 
  1    29 dcl	checker_data_$loaded	(0:10) external static bit (1) aligned;
  1    30 
  1    31 dcl	checker_data_$n_temp_ptrs	fixed bin external static;
  1    32 
  1    33 dcl       checker_data_$severity	fixed bin external static;
  1    34 
  1    35 dcl	1 meters			aligned based (checker_data_$meter_ptr),
  1    36 	  2 sizes			aligned,
  1    37 	    3 wired_ai_linkage_size	fixed bin,
  1    38 	    3 paged_ai_linkage_size	fixed bin,
  1    39 	    3 wired_wi_linkage_size	fixed bin,
  1    40 	    3 paged_wi_linkage_size	fixed bin,
  1    41 	    3 wired_as_linkage_size	fixed bin,
  1    42 	    3 paged_as_linkage_size	fixed bin,
  1    43 	    3 wired_ws_linkage_size	fixed bin,
  1    44 	    3 paged_ws_linkage_size	fixed bin,
  1    45 	    3 wired_definitions_size	fixed bin,
  1    46 	    3 paged_definitions_size	fixed bin,
  1    47 	  2 wired_nt_size		fixed bin,
  1    48 	  2 paged_nt_size		fixed bin,
  1    49             2 overflown aligned,
  1    50 	    3 (wired_ai_linkage, paged_ai_linkage, wired_wi_linkage,
  1    51 	       paged_wi_linkage, wired_as_linkage, paged_as_linkage,
  1    52 	       wired_ws_linkage, paged_ws_linkage,
  1    53 	       wired_definitions, paged_definitions,
  1    54 	       wired_nt, paged_nt,
  1    55 	       wired_storage) bit (1) unaligned,
  1    56 	  2 counts		aligned,
  1    57 	    3 wired_sdw_count	fixed bin,
  1    58 	    3 paged_sdw_count	fixed bin,
  1    59 	    3 wired_slte_count	fixed bin,
  1    60 	    3 paged_slte_count	fixed bin,
  1    61 	  2 wired_nt_used		fixed bin,
  1    62 	  2 paged_nt_used		fixed bin,
  1    63 	  2 used			aligned,
  1    64 	    3 wired_ai_linkage_used	fixed bin,
  1    65 	    3 paged_ai_linkage_used	fixed bin,
  1    66 	    3 wired_wi_linkage_used	fixed bin,
  1    67 	    3 paged_wi_linkage_used	fixed bin,
  1    68 	    3 wired_as_linkage_used	fixed bin,
  1    69 	    3 paged_as_linkage_used	fixed bin,
  1    70 	    3 wired_ws_linkage_used	fixed bin,
  1    71 	    3 paged_ws_linkage_used	fixed bin,
  1    72 	    3 wired_definitions_used	fixed bin,
  1    73 	    3 paged_definitions_used	fixed bin,
  1    74 	  2 per_collection		(0:10) aligned,
  1    75 	    3 read		bit (1) aligned,
  1    76 	    3 mark		aligned,
  1    77 	      4 major		fixed bin,
  1    78 	      4 minor		fixed bin,
  1    79 	    3 first_segment		fixed bin (18),
  1    80 	    3 last_segment		fixed bin (18),
  1    81 	    3 segment_count		fixed bin (17),
  1    82 	    3 words_used		fixed bin (35),	/* for wired */
  1    83 	    3 pages_used		fixed bin (35),	/* for paged */
  1    84 	    3 wired_pages_used	fixed bin (35),	/* for both! */
  1    85 	    3 perm_segment_count	fixed bin,	/* stay forever */
  1    86 	    3 temp_segment_count	fixed bin,	/* one collection */
  1    87 	    3 init_segment_count	fixed bin,	/* all of initialization */
  1    88 	    3 user_ring_segment_count fixed bin,
  1    89 	    3 user_ring_segment_pages fixed bin,
  1    90 	    3 ai_linkage_used	fixed bin,
  1    91 	    3 wi_linkage_used	fixed bin,
  1    92 	    3 as_linkage_used	fixed bin,
  1    93 	    3 ws_linkage_used	fixed bin,
  1    94 	    3 definitions_used	fixed bin,
  1    95 	    3 name_table_used	fixed bin,
  1    96 	  2 per_segment		(0:1024) aligned,
  1    97 	    3 collection		fixed bin,
  1    98 	    3 next		fixed bin (18),
  1    99 	    3 link_ptr		pointer unaligned,
  1   100 	    3 defs_ptr		pointer unaligned;
  1   101 
  1   102 declare	segment_links_ptr		pointer;
  1   103 declare	1 segment_links		aligned based (segment_links_ptr),
  1   104 	  2 n_links		fixed bin,
  1   105 	  2 per_link (a_n_links refer (segment_links.n_links)) aligned,
  1   106 	    3 expression_relps        fixed bin (18) uns unal,
  1   107 	    3 modifiers               bit (6) unal;
  1   108 
  1   109 						/* rel pointers into def section stored in area */
  1   110 
  1   111 declare	a_n_links			fixed bin;
  1   112 
  1   113 declare	segment_defs_ptr		pointer;
  1   114 declare	1 segment_defs		based (segment_defs_ptr) aligned,
  1   115 	  2 length		fixed bin,
  1   116 	  2 definitions		(a_defs_length refer (segment_defs.length)) bit (36) aligned;
  1   117 
  1   118 declare	a_defs_length		fixed bin;
  1   119 
  1   120 declare (CHECKER_WARNING init (1), /* */
  1   121          CHECKER_ERROR   init (2), /* */
  1   122          CHECKER_SEVERE  init (3), /* */
  1   123          CHECKER_FATAL   init (4)) fixed bin int static options (constant);
  1   124 
  1   125 declare ERROR_NAMES (1:4) char (16) init ("WARNING", "ERROR", "SEVERE ERROR", "FATAL ERROR") int static options (constant);
  1   126 
  1   127 /* End include file checker_dcls_.incl.pl1 */
       14 
  2     1 /* Begin include file hc_definitions_seg.incl.pl1 BIM 7/82 */
  2     2 /* format: style3 */
  2     3 
  2     4 declare	definitions_ptr	ptr;
  2     5 
  2     6 declare	1 definitions	aligned based (definitions_ptr),
  2     7 	  2 next_free_ptr	pointer,			/* next section, starts after table */
  2     8 	  2 dot		(2:511) aligned,		/* definitions_offset_table */
  2     9 	    3 offset	fixed bin (18) uns unal,	/* in this segment */
  2    10 	    3 length	fixed bin unal,
  2    11 	  2 first_free	bit (0) aligned;
  2    12 
  2    13 /* End include file hc_definitions_seg.incl.pl1 */
       15 
       16 
       17 	declare cx		 fixed bin;
       18 	declare sx		 fixed bin;
       19 	declare (currentsize, hbound, lbound, null, unspec)
       20 				 builtin;
       21 	declare 1 auto_definitions_	 aligned like definitions;
       22 
       23 
       24 	allocate meters in (checker_area);
       25 
       26 	unspec (meters) = ""b;			/* zero, presumptively */
       27 
       28 	meters.sizes = -1;
       29 	meters.wired_definitions_used, meters.paged_definitions_used = currentsize (auto_definitions_);
       30 						/* count in the DOT */
       31 
       32 	do cx = lbound (meters.per_collection, 1) to hbound (meters.per_collection, 1);
       33 	     meters.per_collection (cx).first_segment, meters.per_collection.last_segment = -1;
       34 	end;
       35 	do sx = lbound (meters.per_segment, 1) to hbound (meters.per_segment, 1);
       36 	     meters.per_segment (sx).link_ptr = null;
       37 	     meters.per_segment (sx).defs_ptr = null;
       38 	     meters.per_segment (sx).next = -1;
       39 	end;
       40 
       41 	return;
       42      end checker_init_meters_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    06/04/84  1242.1  checker_init_meters_.pl1          >spec>temp>bce>on>checker_init_meters_.pl1
14           1    06/01/84  1103.1  checker_dcls_.incl.pl1            >spec>temp>bce>on>checker_dcls_.incl.pl1
15           2    10/20/82  0938.5  hc_definitions_seg.incl.pl1       >ldd>include>hc_definitions_seg.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
auto_definitions_               000102 automatic       structure                level 1 dcl 21 ref 29
checker_area                           based           area                     dcl 1-8 ref 24
checker_data_$area_ptr          000010 external static pointer                  dcl 1-7 ref 24
checker_data_$meter_ptr         000012 external static pointer                  dcl 1-12 set ref 24* 26 28 29 29 32 32 33 33 35 35
                                                                                  36 37 38
currentsize                                            builtin function         dcl 19 ref 29
cx                              000100 automatic       fixed bin(17,0)          dcl 17 set ref 32* 33*
definitions                            based           structure                level 1 dcl 2-6
defs_ptr                374            based           pointer                  array level 3 packed unaligned dcl 1-35 set ref 37*
first_segment            40            based           fixed bin(18,0)          array level 3 dcl 1-35 set ref 33*
hbound                                                 builtin function         dcl 19 ref 32 35
last_segment             41            based           fixed bin(18,0)          array level 3 dcl 1-35 set ref 33*
lbound                                                 builtin function         dcl 19 ref 32 35
link_ptr                373            based           pointer                  array level 3 packed unaligned dcl 1-35 set ref 36*
meters                                 based           structure                level 1 dcl 1-35 set ref 24 26*
next                    372            based           fixed bin(18,0)          array level 3 dcl 1-35 set ref 38*
null                                                   builtin function         dcl 19 ref 36 37
paged_definitions_used
                         34            based           fixed bin(17,0)          level 3 dcl 1-35 set ref 29*
per_collection           35            based           structure                array level 2 dcl 1-35 set ref 32 32
per_segment             371            based           structure                array level 2 dcl 1-35 set ref 35 35
sizes                                  based           structure                level 2 dcl 1-35 set ref 28*
sx                              000101 automatic       fixed bin(17,0)          dcl 18 set ref 35* 36 37 38*
unspec                                                 builtin function         dcl 19 set ref 26*
used                     23            based           structure                level 2 dcl 1-35
wired_definitions_used
                         33            based           fixed bin(17,0)          level 3 dcl 1-35 set ref 29*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
CHECKER_ERROR                          internal static fixed bin(17,0)          initial dcl 1-120
CHECKER_FATAL                          internal static fixed bin(17,0)          initial dcl 1-120
CHECKER_SEVERE                         internal static fixed bin(17,0)          initial dcl 1-120
CHECKER_WARNING                        internal static fixed bin(17,0)          initial dcl 1-120
ERROR_NAMES                            internal static char(16)                 initial array unaligned dcl 1-125
a_defs_length                          automatic       fixed bin(17,0)          dcl 1-118
a_n_links                              automatic       fixed bin(17,0)          dcl 1-111
checker_data_$buffer_ptr               external static pointer                  dcl 1-11
checker_data_$collection_names         external static structure                array level 1 unaligned dcl 1-25
checker_data_$input_iocbp              external static pointer                  dcl 1-14
checker_data_$last_supervisor_collection
                                       external static fixed bin(17,0)          dcl 1-22
checker_data_$last_text_wired_collection
                                       external static fixed bin(17,0)          dcl 1-20
checker_data_$last_wired_collection    external static fixed bin(17,0)          dcl 1-18
checker_data_$loaded                   external static bit(1)                   array dcl 1-29
checker_data_$n_temp_ptrs              external static fixed bin(17,0)          dcl 1-31
checker_data_$name_table_ptr           external static pointer                  dcl 1-10
checker_data_$output_iocbp             external static pointer                  dcl 1-15
checker_data_$severity                 external static fixed bin(17,0)          dcl 1-33
checker_data_$slt_ptr                  external static pointer                  dcl 1-6
checker_data_$temp_ptrs                external static pointer                  array dcl 1-5
definitions_ptr                        automatic       pointer                  dcl 2-4
segment_defs                           based           structure                level 1 dcl 1-114
segment_defs_ptr                       automatic       pointer                  dcl 1-113
segment_links                          based           structure                level 1 dcl 1-103
segment_links_ptr                      automatic       pointer                  dcl 1-102

NAME DECLARED BY EXPLICIT CONTEXT.
checker_init_meters_            000003 constant        entry                    external dcl 8

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       170         204     121         200
Length       410     121        14         170      47           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
checker_init_meters_                580 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
checker_init_meters_     000100 cx                          checker_init_meters_
                         000101 sx                          checker_init_meters_
                         000102 auto_definitions_           checker_init_meters_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
return              ext_entry           alloc_based

NO EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
checker_data_$area_ptr        checker_data_$meter_ptr




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      8 000002        24 000010        26 000020        28 000024        29 000037        32 000042        33 000047
     34 000074        35 000076        36 000103        37 000112        38 000113        39 000115        41 000117


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
