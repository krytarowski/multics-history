Compilation listing of file >2.1spec>online>mib083074>bcpl_cg8.bcpl.
Compilation performed for Martinson.SysMaint.a at 01/24/75  0656.8 mst Fri.
Compiled by BCPL version 3.4, August 1973.  Compiler updated at 09/25/73  0959.1 mst Tue.
Options applied:  source  xref  alist  optimize  6180.

     1	//  These routines generate the symbol section and object map.
     2	//  Last modified on 06/06/74 at 18:23:54 by R F Mabee.
     3	//  Modified for 6180 conversion, and installed as Version 3.4 by R F Mabee.
     4	//  First installed as Version 2.7, R F Mabee.
     5	
     6	//  Copyright (c) 1974 by Massachusetts Institute of Technology and Honeywell Information Systems, Inc.
     7	
     8	//  General permission is granted to copy and use this program, but not to sell it, provided that the above
     9	//  copyright statement is given.  Contact Information Processing Services, MIT, for further information.
    10	//  Please contact R F Mabee at MIT for information on this program and versions for other machines.
    11	
    12	get "bcpl_cg_head"
	     1	//  Declarations for the code generator.
	     2	//  Last modified on 08/15/73 at 00:31:50 by R F Mabee.
	     3	//  Code generator substantially modified during 6180 bootstrap, and installed with Version 3.4, R F Mabee.
	     4	//  First installed as Version 2.7, R F Mabee.
	     5	
	     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
	     7	//  This file may only be reproduced or modified with explicit written
	     8	//  permission of the author.  Permission is hereby extended to those
	     9	//  persons responsible for operating the Multics system to make such
	    10	//  copies as are normally required to ensure the integrity of the Multics
	    11	//  file system.  Permission is also hereby extended to those persons
	    12	//  responsible for maintaining the Multics program libraries to make such
	    13	//  copies as are normally required for online installations.
	    14	
	    15	get "bcpl_compiler_head"
		     1	//  Declarations common to the entire BCPL compiler.
		     2	//  Last modified on 07/28/73 at 03:56:32 by R F Mabee.
		     3	//  Installed on 6180 as Version 3.4, R F Mabee.
		     4	//  First installed on 645 as Version 2.7 by R F Mabee.
		     5	
		     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
		     7	//  This file may only be reproduced or modified with explicit written
		     8	//  permission of the author.  Permission is hereby extended to those
		     9	//  persons responsible for operating the Multics system to make such
		    10	//  copies as are normally required to ensure the integrity of the Multics
		    11	//  file system.  Permission is also hereby extended to those persons
		    12	//  responsible for maintaining the Multics program libraries to make such
		    13	//  copies as are normally required for online installations.
		    14	
		    15	external
		    16	     $(	Readch = "bcpl_machine_code_$Readch"		//  Library routines used by the compiler.
		    17		Writech = "bcpl_machine_code_$Writech"
		    18		WriteS = "bcpl_stream_io_$WriteS"
		    19		WriteN = "bcpl_stream_io_$WriteN"
		    20		Format = "bcpl_stream_io_$Format"
		    21		Packstring = "bcpl_machine_code_$Packstring"
		    22		Unpackstring = "bcpl_machine_code_$Unpackstring"
		    23		RemoveEscapes = "bcpl_conversions_$RemoveEscapes"
		    24		EqualString = "bcpl_strings_$EqualString"
		    25		CompareStrings = "bcpl_strings_$CompareStrings"	//  Alphabetic comparison.
		    26		Concatenate = "bcpl_strings_$Concatenate"
		    27		ConvertStoN = "bcpl_conversions_$ConvertStoN"
		    28		ConvertNtoS = "bcpl_conversions_$ConvertNtoS"
		    29		Length = "bcpl_strings_$Length"		//  Number of characters.
		    30		LengthInWords = "bcpl_strings_$LengthInWords"	//  Length of packed string.
		    31		RandomI = "bcpl_arithmetic_$RandomI"
		    32	
		    33		Newvec = "bcpl_utility$Newvec"		//  Utility routines used throughout the compiler.
		    34		Freevec = "bcpl_utility$Freevec"
		    35		List1 = "bcpl_utility$List1"
		    36		List2 = "bcpl_utility$List2"
		    37		List3 = "bcpl_utility$List3"
		    38		List4 = "bcpl_utility$List4"
		    39		List5 = "bcpl_utility$List5"
		    40		List6 = "bcpl_utility$List6"
		    41		StoreString = "bcpl_utility$StoreString"
		    42		PushInput = "bcpl_utility$PushInput"
		    43		PopInput = "bcpl_utility$PopInput"
		    44		MakeTimeString = "bcpl_utility$MakeTimeString"
		    45		Nextparam = "bcpl_utility$Nextparam"
		    46		FormCharconst = "bcpl_utility$FormCharconst"
		    47		FormStringconst = "bcpl_utility$FormStringconst"
		    48	
		    49		CaeReport = "bcpl_report$CaeReport"
		    50		Transreport = "bcpl_report$Transreport"
		    51		CGreport = "bcpl_report$CGreport"
		    52	
		    53		Nextsymb = "bcpl_lex0$Nextsymb"
		    54	
		    55		SymbolName = "bcpl_plist$SymbolName"
		    56		FindPrintName = "bcpl_plist$FindPrintName"
		    57		EnterIntoCrossreference = "bcpl_plist$EnterIntoCrossreference"
		    58	
		    59		GetVersion = "bcpl_version$GetVersion"		//  Routines used only by the driver.
		    60		UtilitiesInit = "bcpl_utility$UtilitiesInit"
		    61		Cleanup = "bcpl_utility$Cleanup"
		    62		GetStream = "bcpl_utility$GetStream"
		    63	
		    64		CAE = "bcpl_cae0$CAE"
		    65		LexInit = "bcpl_lex0$LexInit"
		    66	
		    67		Pname = "bcpl_plist$Pname"
		    68		Plist = "bcpl_plist$Plist"
		    69	
		    70		Trans = "bcpl_trans0$Trans"
		    71		CgInit = "bcpl_cg0$CgInit"
		    72		BuildObject = "bcpl_cg0$BuildObject"
		    73		WriteObjectListing = "bcpl_cg0$WriteObjectListing"
		    74	     $)
		    75	
		    76	global		//  Globals are reserved in blocks as follows:
		    77	     $(	//    0 -  31	system
		    78		//   32 -  99	library
		    79		//  100 - 149	options and other common cells
		    80		//  150 - 159	metering cells
		    81		//  160 - 169	bcpl_utility
		    82		//  170 - 199	to be assigned
		    83		//  200 - 229	lexical phase
		    84		//  230 - 249	syntax analyzer
		    85		//  250 - 299	translator
		    86		//  300 - 399	code generator
		    87	
		    88			//  Cells used for communication with the library.
		    89		OUTPUT		: 32
		    90		INPUT		: 33
		    91		MONITOR		: 34
		    92		Ch		: 36
		    93	
		    94			//  Options for this compilation.
		    95		Listing		: 100
		    96		UpperCase		: 101
		    97		PPrep		: 102
		    98		Crep		: 103
		    99		Symbols		: 104
		   100		LineMap		: 105
		   101		Optimize		: 106
		   102		Machine		: 107
		   103		Xref		: 108
		   104		OcodeSw		: 109
		   105		HaveListingFile	: 110
		   106		QuietSw		: 111
		   107	
		   108			//  Other information about this compilation.
		   109		CompilerVersionString : 120
		   110		CompilerVersionNumber : 121
		   111		CompilerDTMString	: 122
		   112		CompilerDTM	: 123
		   113		TimeNowString	: 124
		   114		TimeNow		: 125
		   115		OptionString	: 126
		   116		FileNames		: 127
		   117		FilesInfo		: 128
		   118		FileCount		: 129
		   119		ProgramName	: 130
		   120		UserID		: 131
		   121	
		   122			//  Working variables needing global scope.
		   123		LineCount		: 140
		   124		Errorsw		: 141
		   125		NAMECHAIN		: 142
		   126		Symb		: 143
		   127		DictionaryEntry	: 144
		   128		Column		: 145
		   129	     $)
		   130	manifest
		   131	     $(	GlobalTemp = 199  $)	//  Number of cell available for local, temporary use.
		   132	
		   133	manifest
		   134	     $(	Left = 18; Right = $8777777
		   135		Endofstreamch = $87777
		   136		Even = $87777777777776
		   137		Vmax = 511
		   138		LineMask = $817777; FileShift = 13	//  Breakdown of line count.
		   139		UnexpectedCase = 99		//  Error code for use throughout compiler.
		   140	     $)
	    16	get "bcpl_symbols"
		     1	//  All symbols used in the interface between any two phases of the compiler are defined here.
		     2	//  This includes all canonical symbols, syntax tree nodes, and XOCODE operators.
		     3	//  Last modified on 07/08/73 at 22:55:31 by R F Mabee.
		     4	//  Revisions installed in Version 3.4 on 6180, R F Mabee.
		     5	//  First installed with Version 2.7 by R F Mabee.
		     6	
		     7	//  Copyright (c) 1973 by the author, Robert F. Mabee.
		     8	//  This file may only be reproduced or modified with explicit written
		     9	//  permission of the author.  Permission is hereby extended to those
		    10	//  persons responsible for operating the Multics system to make such
		    11	//  copies as are normally required to ensure the integrity of the Multics
		    12	//  file system.  Permission is also hereby extended to those persons
		    13	//  responsible for maintaining the Multics program libraries to make such
		    14	//  copies as are normally required for online installations.
		    15	
		    16	manifest
		    17	     $(	AND_S = 1
		    18		ASSIGN_S = 2
		    19		BE_S = 3
		    20		BIT_S = 4
		    21		BREAK_S = 5
		    22		BY_S = 6
		    23		CALL_S = 07
		    24		CASE_S = 08
		    25	
		    26		CHAR_S = 10
		    27		CHARCONST_S = 11
		    28		COLON_S = 12
		    29		COMMA_S = 13
		    30		COND_S = 14
		    31		CONSTANT_S = 15
		    32		CONSTDEF_S = 16
		    33		DEFAULT_S = 17
		    34		DIV_F = 18
		    35	
		    36		DIV_S = 20
		    37		DO_S = 21
		    38		DOUBLE_S = 22
		    39		ENDCASE_S = 23
		    40		ENDPROG_S = 24
		    41		ERROR_S = 25
		    42		EQ_F = 26
		    43		EQ_S = 27
		    44		EQV_S = 28
		    45	
		    46		EXTERNAL_S = 30
		    47		FALSE_S = 31
		    48		FINISH_S = 32
		    49		FIXED_S = 33
		    50		FLOAT_S = 34
		    51		FNAP_S = 35
		    52		FNDEF_S = 36
		    53		FOR_S = 37
		    54		GE_F = 38
		    55	
		    56		GE_S = 40
		    57		GET_S = 41
		    58		GLOBAL_S = 42
		    59		GOTO_S = 43
		    60		GR_F = 44
		    61		GR_S = 45
		    62		IF_S = 46
		    63		IFNOT_S = 47
		    64		IFSO_S = 48
		    65	
		    66		INTO_S = 50
		    67		LABDEF_S = 51
		    68		LABEL_S = 52
		    69		LE_F = 53
		    70		LE_S = 54
		    71		LENGTH_S = 55
		    72		LET_S = 56
		    73		LIST_S = 57
		    74		LOCAL_S = 58
		    75	
		    76		LOGAND_S = 60
		    77		LOGOR_S = 61
		    78		LOOP_S = 62
		    79		LS_F = 63
		    80		LS_S = 64
		    81		LSHIFT_S = 65
		    82		LV_S = 66
		    83		LVECAP_S = 67
		    84		LV_ARG_OUT = 68
		    85	
		    86		LV_FNAP_RESULT = 70
		    87		LV_GLOBAL = 71
		    88		LV_LOCAL = 72
		    89		LV_STATIC = 73
		    90		LV_TEMP = 74
		    91		MAIN_S = 75
		    92		MANIFEST_S = 76
		    93		MINUS_F = 77
		    94		MINUS_S = 78
		    95	
		    96		MULT_F = 80
		    97		MULT_S = 81
		    98		NAME_S = 82
		    99		NEG_F = 83
		   100		NEG_S = 84
		   101		NEQV_S = 85
		   102		NE_F = 86
		   103		NE_S = 87
		   104		NIL_S = 88
		   105	
		   106		NOT_S = 90
		   107		NUMBER_S = 91
		   108		OFFSET_S = 92
		   109		OR_S = 93
		   110		PLUS_F = 94
		   111		PLUS_S = 95
		   112		POINTER_S = 96
		   113		POS_F = 97
		   114		POS_S = 98
		   115	
		   116		RBRA_S = 100
		   117		REGISTER_S = 101
		   118		REL_S = 102
		   119		REM_S = 103
		   120		REP_S = 104
		   121		REPEAT_S = 105
		   122		REPEATUNTIL_S = 106
		   123		REPEATWHILE_S = 107
		   124		RESULTIS_S = 108
		   125	
		   126		RETURN_S = 110
		   127		RKET_S = 111
		   128		RSHIFT_S = 112
		   129		RTAP_S = 113
		   130		RTDEF_S = 114
		   131		RV_S = 115
		   132		SBRA_S = 116
		   133		SECTBEGIN_S = 117
		   134		SECTBRA_S = 118
		   135	
		   136		SECTEND_S = 120
		   137		SECTKET_S = 121
		   138		SEMICOLON_S = 122
		   139		SKET_S = 123
		   140		STATIC_S = 124
		   141		STRING_S = 125
		   142		STRINGCONST_S = 126
		   143		STRUCTURE_S = 127
		   144		SWITCHON_S = 128
		   145	
		   146		TABLE_S = 130
		   147		TEMP_S = 131
		   148		TEST_S = 132
		   149		TO_S = 133
		   150		TRUE_S = 134
		   151		TYPE_S = 135
		   152		UNLESS_S = 136
		   153		UNTIL_S = 137
		   154		VALDEF_S = 138
		   155	
		   156		VALOF_S = 140
		   157		VEC_S = 141
		   158		VECAP_S = 142
		   159		WHILE_S = 143
		   160	     $)
	    17	get "bcpl_cg_codes"
		     1	//  Report codes for the code generation phase.
		     2	//  Last modified on 08/15/73 at 00:33:36 by R F Mabee.
		     3	//  First installed in Version 3.4 by R F Mabee.
		     4	//  Code generation error codes separated from bcpl_trans_codes in April 1973.
		     5	
		     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
		     7	//  This file may only be reproduced or modified with explicit written
		     8	//  permission of the author.  Permission is hereby extended to those
		     9	//  persons responsible for operating the Multics system to make such
		    10	//  copies as are normally required to ensure the integrity of the Multics
		    11	//  file system.  Permission is also hereby extended to those persons
		    12	//  responsible for maintaining the Multics program libraries to make such
		    13	//  copies as are normally required for online installations.
		    14	
		    15	manifest		//  300 - 399 are reserved for CG.
		    16	     $(	BadAddress	= 300
		    17		BadLabel		= 301
		    18		BadRegOpPair	= 302
		    19		DupCase		= 303
		    20		DupLabel		= 304
		    21		LinkRefersThis	= 305
		    22		OverCase		= 306
		    23		PhaseError	= 307
		    24		UndefLab		= 308
		    25	     $)
	    18	
	    19	external
	    20	     $(	FinishText = "bcpl_cg0$FinishText"
	    21	
	    22		ApplyMonadicOperator = "bcpl_cg1$ApplyMonadicOperator"
	    23		ApplyDiadicOperator = "bcpl_cg1$ApplyDiadicOperator"
	    24		ApplyOffsetOperator = "bcpl_cg1$ApplyOffsetOperator"
	    25		MonadicJumpcond = "bcpl_cg1$MonadicJumpcond"
	    26		DiadicJumpcond = "bcpl_cg1$DiadicJumpcond"
	    27	
	    28		IsNumber = "bcpl_cg2$IsNumber"
	    29		EvalNumber = "bcpl_cg2$EvalNumber"
	    30		IsZero = "bcpl_cg2$IsZero"
	    31		IsAddress = "bcpl_cg2$IsAddress"
	    32		IsStored = "bcpl_cg2$IsStored"
	    33		LookupTemp = "bcpl_cg2$LookupTemp"
	    34		MakeCgTemp = "bcpl_cg2$MakeCgTemp"
	    35		ClaimRegister = "bcpl_cg2$ClaimRegister"
	    36		DisclaimRegister = "bcpl_cg2$DisclaimRegister"
	    37		InRegister = "bcpl_cg2$InRegister"
	    38		FindInRegister = "bcpl_cg2$FindInRegister"
	    39		CombineAddress = "bcpl_cg2$CombineAddress"
	    40		Compjump = "bcpl_cg2$Compjump"
	    41		Complab = "bcpl_cg2$Complab"
	    42		DefineLab = "bcpl_cg2$DefineLab"
	    43		LookupLabel = "bcpl_cg2$LookupLabel"
	    44		ClearRegisters = "bcpl_cg2$ClearRegisters"
	    45		ClearMemory = "bcpl_cg2$ClearMemory"
	    46		AddLiteral = "bcpl_cg2$AddLiteral"
	    47		OutLiterals = "bcpl_cg2$OutLiterals"
	    48		Outstring = "bcpl_cg2$Outstring"
	    49	
	    50		LoadRegister = "bcpl_cg3$LoadRegister"
	    51		LoadPointer = "bcpl_cg3$LoadPointer"
	    52		LoadIndex = "bcpl_cg3$LoadIndex"
	    53		LoadAppropriateRegister = "bcpl_cg3$LoadAppropriateRegister"
	    54		LoadNumber = "bcpl_cg3$LoadNumber"
	    55		SetupAddr = "bcpl_cg3$SetupAddr"
	    56		CompareToZero = "bcpl_cg3$CompareToZero"
	    57		Makeaddressable = "bcpl_cg3$Makeaddressable"
	    58		SwapAandQ = "bcpl_cg3$SwapAandQ"
	    59		Preserve = "bcpl_cg3$Preserve"
	    60		Store = "bcpl_cg3$Store"
	    61		StoreRegister = "bcpl_cg3$StoreRegister"
	    62		GetRegister = "bcpl_cg3$GetRegister"
	    63		Satisfactory = "bcpl_cg3$Satisfactory"
	    64		Literal = "bcpl_cg3$Literal"
	    65	
	    66		NewSSP = "bcpl_cg4$NewSSP"
	    67		Compentry = "bcpl_cg4$Compentry"
	    68		Compreturn = "bcpl_cg4$Compreturn"
	    69		CreateArglist = "bcpl_cg4$CreateArglist"
	    70		StoreArg = "bcpl_cg4$StoreArg"
	    71		Compfnap = "bcpl_cg4$Compfnap"
	    72		CreateSystemArglist = "bcpl_cg4$CreateSystemArglist"
	    73		StoreSystemArg = "bcpl_cg4$StoreSystemArg"
	    74		CompSystemCall = "bcpl_cg4$CompSystemCall"
	    75		ResultBlockBegin = "bcpl_cg4$ResultBlockBegin"
	    76		ResultSet = "bcpl_cg4$ResultSet"
	    77		ResultGet = "bcpl_cg4$ResultGet"
	    78		Compfinish = "bcpl_cg4$Compfinish"
	    79		Compgoto = "bcpl_cg4$Compgoto"
	    80		Compstring = "bcpl_cg4$Compstring"
	    81		Comptable = "bcpl_cg4$Comptable"
	    82		Compexternal = "bcpl_cg4$Compexternal"
	    83	
	    84		OutData = "bcpl_cg5$OutData"
	    85		Outop = "bcpl_cg5$Outop"
	    86		Outop2 = "bcpl_cg5$Outop2"
	    87		Outop3 = "bcpl_cg5$Outop3"
	    88		Outop4 = "bcpl_cg5$Outop4"
	    89		OutW = "bcpl_cg5$OutW"
	    90		OutW2 = "bcpl_cg5$OutW2"
	    91		PutCode = "bcpl_cg5$PutCode"
	    92		PutAbsBits = "bcpl_cg5$PutAbsBits"
	    93		SetLineNumber = "bcpl_cg5$SetLineNumber"
	    94		SectionHeader = "bcpl_cg5$SectionHeader"
	    95		FormOpcode = "bcpl_cg5$FormOpcode"
	    96		FormTag = "bcpl_cg5$FormTag"
	    97		CheckAddr = "bcpl_cg5$CheckAddr"
	    98	
	    99		Compswitch = "bcpl_cg6$Compswitch"
	   100	
	   101		WriteGetlp = "bcpl_cg7$WriteGetlp"
	   102		WriteEntry = "bcpl_cg7$WriteEntry"
	   103		WriteDefs = "bcpl_cg7$WriteDefs"
	   104		WriteLinkage = "bcpl_cg7$WriteLinkage"
	   105	
	   106		WriteSymbol = "bcpl_cg8$WriteSymbol"
	   107		WriteRelBits = "bcpl_cg8$WriteRelBits"
	   108		WriteObjectMap = "bcpl_cg8$WriteObjectMap"
	   109	
	   110		WriteData = "bcpl_cg9$WriteData"
	   111		WriteInstruction = "bcpl_cg9$WriteInstruction"
	   112		ListCodeItem = "bcpl_cg9$ListCodeItem"
	   113	     $)
	   114	global		//  300 - 399 are reserved for the code generator.
	   115	     $(	AbsRelBits	: 300
	   116		Address		: 301
	   117		ArgCount		: 302
	   118		ArgLen		: 303
	   119		CgTempList	: 304
	   120		CodeFirst		: 305
	   121		CodeP		: 306
	   122		CodeV		: 307
	   123		Comment		: 308
	   124	
	   125		DeferredJumpLabel	: 310
	   126		DefsLength	: 311
	   127		DefsRelbits	: 312
	   128		EntryLabel	: 313
	   129		GetLpLabel	: 314
	   130		IndicatorsSetBy	: 315
	   131		Jumpsw		: 316
	   132		LabMaxArg		: 317
	   133		LabMaxSSP		: 318
	   134	
	   135		LabTable		: 320
	   136		LC		: 321
	   137		LineMapFirst	: 322
	   138		LineMapLength	: 323
	   139		LineMapList	: 324
	   140		LinkageLength	: 325
	   141		LinkageRelbits	: 326
	   142		LinkList		: 327
	   143		Lrand		: 328
	   144	
	   145		MainEntriesList	: 330
	   146		MaxArgOffset	: 331
	   147		MaxSSP		: 332
	   148		NewLiteralsList	: 333
	   149		OldLabel		: 334
	   150		OldLiteralsList	: 335
	   151		Param		: 336
	   152		Rrand		: 337
	   153		RegisterTemps	: 338
	   154	
	   155		RegisterUsage	: 340
	   156		RelbitsFirst	: 341
	   157		RelbitsLength	: 342
	   158		RelbitsList	: 343
	   159		RelbitsOffset	: 344
	   160		Reloc		: 345
	   161		ResultInfo	: 346
	   162		ResultInfoList	: 347
	   163		SaveSpaceSize	: 348
	   164	
	   165		SymbolLength	: 350
	   166		SymbolRelbits	: 351
	   167		StackRefTag	: 352
	   168		SymtabFirst	: 353
	   169		SymtabP		: 354
	   170		SymtabV		: 355
	   171		Tag		: 356
	   172		TextLength	: 357
	   173		TextRelbits	: 358
	   174	
	   175		UsageCounter	: 360
	   176	     $)
	   177	manifest
	   178	     $(	CgTempSize = 9
	   179		CodeSize = 1000
	   180		LabTableSize = 100
	   181		SymtabSize = 200
	   182	     $)
	   183	manifest		//  Flags for listing.
	   184	     $(	CodeSwitch	= 1
	   185		InstructionSwitch	= 2
	   186		DataSwitch	= 3
	   187		LabelSwitch	= 4
	   188		LineCountSwitch	= 5
	   189		SectionSwitch	= 6
	   190		HeaderSwitch	= 7
	   191	     $)
	   192	manifest		//  Relocation codes.
	   193	     $(	RelText		= $820
	   194		RelLink18		= $822
	   195		RelNegLink18	= $823
	   196		RelLink15		= $824
	   197		RelDef		= $825
	   198		RelSymbol		= $826
	   199		RelNegSymbol	= $827
	   200		RelStat18		= $830
	   201		RelStat15		= $831
	   202		RelExtendedAbs	= $836		//  Ten bit count follows this code.
	   203	     $)
	   204	manifest
	   205	     $(	TagXrMask = $817
	   206		TagPrMask = $8700000000100
	   207	
	   208		Mod16 = $8777777777760
	   209	     $)
	   210	
	   211	manifest			//  Modifiers and tags used in the code generator.
	   212	     $(	Ap = $8000000000100
	   213		Ab = $8100000000100
	   214		Bp = $8200000000100
	   215		Bb = $8300000000100
	   216		Lp = $8400000000100
	   217		Lb = $8500000000100
	   218		Sp = $8600000000100
	   219		Sb = $8700000000100
	   220	
	   221		Al = $805
	   222		Au = $801
	   223		Dl = $807
	   224		Du = $803
	   225		Ql = $806
	   226		Qu = $802
	   227	
	   228		X0 = $810
	   229		X1 = $811
	   230		X2 = $812
	   231		X3 = $813
	   232		X4 = $814
	   233		X5 = $815
	   234		X6 = $816
	   235		X7 = $817
	   236	
	   237		Ft2 = $846
	   238		Ic = $804
	   239		Star = $820
	   240		StarThenReg = $860
	   241	     $)
	   242	manifest			//  Internal codes for all machine registers used.
	   243	     $(	Ar	= 1
	   244		Qr	= 2
	   245	
	   246		Xr0	= 3
	   247		Xr1	= 4
	   248		Xr2	= 5
	   249		Xr3	= 6
	   250		Xr4	= 7
	   251		Xr5	= 8
	   252		Xr6	= 9
	   253		Xr7	= 10
	   254	
	   255		Apr	= 11
	   256		Abr	= 12
	   257		Bpr	= 13
	   258		Bbr	= 14
	   259		Lpr	= 15
	   260		Lbr	= 16
	   261		Spr	= 17
	   262		Sbr	= 18
	   263	
	   264		EAQr	= 19
	   265	
	   266		NumberOfRegisters = 20
	   267	
	   268		AorQr	= 22
	   269		AnyPr	= 23
	   270		AnyXr	= 24
	   271	     $)
    13	get "bcpl_opcodes"
	     1	//  Definitions for 645 and 6180 machine instructions.  See FormOpcode.
	     2	//  Last modified on 07/20/73 at 23:35:00 by R F Mabee.
	     3	//  6180 instructions added and installed as Version 3.4 by R F Mabee.
	     4	//  First installed as Version 2.7 by R F Mabee
	     5	
	     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
	     7	//  This file may only be reproduced or modified with explicit written
	     8	//  permission of the author.  Permission is hereby extended to those
	     9	//  persons responsible for operating the Multics system to make such
	    10	//  copies as are normally required to ensure the integrity of the Multics
	    11	//  file system.  Permission is also hereby extended to those persons
	    12	//  responsible for maintaining the Multics program libraries to make such
	    13	//  copies as are normally required for online installations.
	    14	
	    15	manifest		//  Note: low order bit of ten bit opcode is here represented by high order bit,
	    16	     $(		//  so remaining bits will retain proper representation as octal numbers.
	    17		Abd	= $81503
	    18		Ada	= $80075
	    19		Adlx1	= $80021
	    20		Als	= $80735
	    21		Ana	= $80375
	    22		Ansa	= $80355
	    23		Anx0	= $80360
	    24		Aos	= $80054
	    25		Arl	= $80771
	    26		Asa	= $80055
	    27		Cmpa	= $80115
	    28		Div	= $80506
	    29		Dvf	= $80507
	    30		Eabap	= $80310
	    31		Eablb	= $80331
	    32		Eablp	= $80330
	    33		Eapab	= $81351
	    34		Eapap	= $80350
	    35		Eapbp	= $80352
	    36		Eaplb	= $81371
	    37		Eaplp	= $80370
	    38		Eax0	= $80620
	    39		Eax1	= $80621
	    40		Eax7	= $80627
	    41		Epaq	= $80213
	    42		Era	= $80675
	    43		Ersa	= $80655
	    44		Fad	= $80475
	    45		Fcmp	= $80515
	    46		Fdi	= $80525
	    47		Fdv	= $80565
	    48		Fld	= $80431
	    49		Fmp	= $80461
	    50		Fneg	= $80513
	    51		Fsb	= $80575
	    52		Fstr	= $80470
	    53		Fszn	= $80430
	    54		Lca	= $80335
	    55		Lda	= $80235
	    56		Ldaq	= $80237
	    57		Ldx7	= $80227
	    58		Llr	= $80777
	    59		Lprpap	= $80760
	    60		Lprpbp	= $80762
	    61		Lprplp	= $80764
	    62		Lrl	= $80773
	    63		Lxl0	= $80720
	    64		Lxl1	= $80721
	    65		Mpy	= $80402
	    66		Neg	= $80531
	    67		Negl	= $80533
	    68		Ora	= $80275
	    69		Orsa	= $80255
	    70		Sba	= $80175
	    71		Sblx1	= $80121
	    72		Sprpap	= $80540
	    73		Sprpbp	= $80542
	    74		Sprplp	= $80544
	    75		Sreg	= $80753
	    76		Ssa	= $80155
	    77		Sta	= $80755
	    78		Staq	= $80757
	    79		Stb	= $80254
	    80		Stc1	= $80554
	    81		Stcd	= $80357
	    82		Stpab	= $81251
	    83		Stpap	= $80250
	    84		Stpbp	= $80252
	    85		Stplb	= $81651
	    86		Stplp	= $80650
	    87		Stx0	= $80740
	    88		Stz	= $80450
	    89		Sxl0	= $80440
	    90		Sxl1	= $80441
	    91		Szn	= $80234
	    92		Tmi	= $80604
	    93		Tmoz	= $81604
	    94		Tnz	= $80601
	    95		Tpl	= $80605
	    96		Tpnz	= $81605
	    97		Tra	= $80710
	    98		Trc	= $80603
	    99		Tsbap	= $80270
	   100		Tsbbp	= $80272
	   101		Tsblp	= $80670
	   102		Tsx0	= $80700
	   103		Tze	= $80600
	   104	     $)
    14	
    15	global
    16	     $(	Strings : GlobalTemp  $)
    17	
    18	
    19	let LineMapLength () = valof
    20	     $(	LineMapList!1 := 0
    21		let q, l = LineMapFirst, 0
    22		until q = 0 do l, q := l + 1, q!1
    23		resultis l + 1
    24	     $)
    25	and WriteLineMap (MapL) be
    26	     $(	Complab (MapL)
    27		let l = LineMapLength () - 1
    28		OutW2 (TextLength lshift Left logor l, "text length, map entry count")
    29		let q = LineMapFirst
    30		until q = 0 do
    31		     $(	OutW (q!0)
    32			q := q!1
    33		     $)
    34	     $)
    35	and SymbolTableLength () = 1
    36	and WriteSymbolTable (SymL) be
    37	     $(	Complab (SymL)
    38		OutW2 (0, "no symbol table implemented")
    39	     $)
    40	
    41	//  This routine writes the symbol section except for the relocation bits at the end.
    42	//  LC must be zero at entry.
    43	
    44	let WriteSymbol () be
    45	     $(	SectionHeader ("*fSymbol section header")
    46		let SymL = Symbols -> Nextparam (), 0
    47		and MapL = LineMap -> Nextparam (), 0
    48		let Smap = 20			//  Number of words in fixed-format part of header below; must be even.
    49		SymbolLength := Smap + 2 + FileCount * 4 + 4
    50		Strings := vec 50
    51		Strings!0 := 0
    52		OutW2 (1, "version number of header structure")
    53		OutAlignedString ("symbtree")			//  Block type.
    54		OutW2 (CompilerVersionNumber, "compiler version number")
    55		OutW2 (CompilerDTM!0, "date/time compiler modified")
    56		OutW2 (CompilerDTM!1, CompilerDTMString)
    57		OutW2 (TimeNow!0, "time of this compilation")
    58		OutW2 (TimeNow!1, TimeNowString)
    59		OutAlignedString ("bcpl    ")			//  Compiler name.
    60		OutW2 (RemoteString (CompilerVersionString), "compiler version name - pointer, length")
    61		OutW2 (RemoteString (UserID), "user id - pointer, length")
    62		OutW2 (RemoteString (OptionString), "comment string - pointer, length")
    63		OutW2 (2 lshift Left | 2, "text and linkage boundaries")
    64	
    65		let w = vec 50
    66		for i = 0 to FileCount do w!i := RemoteString (FilesInfo!(i * 4))
    67		let Tree = 0
    68		if Symbols | LineMap do
    69		     $(	Tree := SymbolLength
    70			SymbolLength := SymbolLength + 1		//  For block header.
    71			if Symbols do SymbolLength := SymbolLength + SymbolTableLength ()
    72			if LineMap do SymbolLength := SymbolLength + LineMapLength ()
    73		     $)
    74		OutW2 (Smap lshift Left | Tree, "source map, symbol tree root")
    75		let Tlen, Llen = CountRelbits (TextRelbits), CountRelbits (LinkageRelbits)
    76		Reloc := RelNegSymbol lshift Left			//  section_header_pointer only item not self-relocating.
    77		OutW2 (SymbolLength, "section header pointer, block size")
    78		OutW2 (SymbolLength, "next block pointer, rel_text")
    79		OutW2 (SymbolLength + Tlen, "rel_def, rel_link")
    80		OutW2 (SymbolLength + Tlen + Llen lshift Left | SymbolLength, "rel_symbol, default truncate")
    81		OutW2 (Smap lshift Left, "optional truncate, unused")
    82	
    83	//  End of fixed format header.  Rest is unstructured, pointed to by items above.
    84	
    85		OutW2 (1, "source files map: version number")
    86		OutW2 (FileCount + 1, "                  number of files")
    87		for i = 0 to FileCount do
    88		     $(	let Info = lv FilesInfo!(i * 4)
    89			OutW2 (w!i, FileNames!i)
    90			OutW2 (Info!1, "last modified on")		//  Unique ID.
    91			OutW2 (Info!2, MakeTimeString (lv Info!2))	//  DTM.
    92			OutW (Info!3)
    93		     $)
    94		for i = 1 to Strings!0 do OutAlignedString (Strings!i)
    95	
    96		if Symbols | LineMap do
    97		     $(	SectionHeader ("*fSymbol table block")
    98			Param := SymL
    99			OutW2 (LineMap -> LC + 1, 0, "symbol table pointer, line map pointer")
   100	
   101			if LineMap do WriteLineMap (MapL)
   102			if Symbols do WriteSymbolTable (SymL)
   103		     $)
   104	
   105		unless LC = SymbolLength do CGreport (PhaseError, "WriteSymbol")
   106	     $)
   107	
   108	and RemoteString (s) = valof
   109	     $(	let l = Length (s)
   110		let r = SymbolLength lshift Left | l
   111		SymbolLength := SymbolLength + (l + 3) / 4
   112		Strings!0 := Strings!0 + 1
   113		Strings!(Strings!0) := s
   114		resultis r
   115	     $)
   116	and OutAlignedString (s) be
   117	     $(	let v = vec Vmax
   118		Concatenate (v, Vmax, "*"", s, "*"")
   119		Comment := StoreString (v)
   120		Unpackstring (s, v)
   121		let Len = v!0
   122		v!(Len + 1), v!(Len + 2), v!(Len + 3) := '*s', '*s', '*s'
   123		for i = 1 to Len by 4 do OutW (v!i lshift 27 | v!(i + 1) lshift 18 | v!(i + 2) lshift 9 | v!(i + 3))
   124	     $)
   125	
   126	and OutRel (p, c) be
   127	     $(	if p = 0 return
   128		SectionHeader (c)
   129		OutW2 (2, "version number of rel-bits structure")
   130		OutW2 (p!0, "length in bits")
   131		p := p!1
   132		until p = 0 do
   133		     $(	OutW (p!0)
   134			p := p!1
   135		     $)
   136	     $)
   137	and CountRelbits (p) = valof
   138	     $(	if p = 0 resultis 0
   139		let n = 0
   140		n, p := n + 1, p!1 repeatuntil p = 0
   141		resultis n + 1
   142	     $)
   143	and WriteRelBits () be
   144	     $(	SectionHeader ("*fRelocation information")
   145		OutRel (TextRelbits, "*ntext section relocation bits")
   146		OutRel (DefsRelbits, "*ndefinitions section relocation bits")
   147		OutRel (LinkageRelbits, "linkage relocation bits")
   148		OutRel (SymbolRelbits, "symbol relocation bits")
   149	     $)
   150	
   151	let WriteObjectMap (AbsLC) be
   152	     $(	SectionHeader ("*fObject map")
   153		let t, d, l = TextLength + 1 & Even, DefsLength + 1 & Even, LinkageLength + 1 & Even
   154		unless t + d + l + SymbolLength = AbsLC do CGreport (PhaseError, "WriteObjectMap")
   155		OutW2 (1, "version number of object_map structure")
   156		OutAlignedString ("obj_map ")
   157		OutW2 (TextLength, "text offset, length")
   158		OutW2 (t lshift Left | DefsLength, "def offset, length")
   159		OutW2 (t + d lshift Left | LinkageLength, "link offset, length")
   160		OutW2 (t + d + l lshift Left | SymbolLength, "symbol offset, length")
   161		OutW2 (0, "break map offset, length")
   162		OutW2 ($834 lshift 30, "flags: ^bound, relocatable, procedure, standard")
   163		OutW2 (AbsLC lshift Left, "object map pointer, unused")		//  Last word of segment.
   164	     $)



CAE time 7.3, 117 source lines per second.
cross reference table

Ab			bcpl_cg_head:  213

Abd			bcpl_opcodes:  17

Abr			bcpl_cg_head:  256

AbsLC			bcpl_cg8:  151, 154, 163

AbsRelBits		bcpl_cg_head:  115

Ada			bcpl_opcodes:  18

AddLiteral		bcpl_cg_head:  46

Address			bcpl_cg_head:  116

Adlx1			bcpl_opcodes:  19

Al			bcpl_cg_head:  221

Als			bcpl_opcodes:  20

Ana			bcpl_opcodes:  21

AND_S			bcpl_symbols:  17

Ansa			bcpl_opcodes:  22

Anx0			bcpl_opcodes:  23

AnyPr			bcpl_cg_head:  269

AnyXr			bcpl_cg_head:  270

AorQr			bcpl_cg_head:  268

Aos			bcpl_opcodes:  24

Ap			bcpl_cg_head:  212

ApplyDiadicOperator		bcpl_cg_head:  23

ApplyMonadicOperator	bcpl_cg_head:  22

ApplyOffsetOperator		bcpl_cg_head:  24

Apr			bcpl_cg_head:  255

Ar			bcpl_cg_head:  243

ArgCount			bcpl_cg_head:  117

ArgLen			bcpl_cg_head:  118

Arl			bcpl_opcodes:  25

Asa			bcpl_opcodes:  26

ASSIGN_S			bcpl_symbols:  18

Au			bcpl_cg_head:  222

BadAddress		bcpl_cg_codes:  16

BadLabel			bcpl_cg_codes:  17

BadRegOpPair		bcpl_cg_codes:  18

Bb			bcpl_cg_head:  215

Bbr			bcpl_cg_head:  258

BE_S			bcpl_symbols:  19

BIT_S			bcpl_symbols:  20

Bp			bcpl_cg_head:  214

Bpr			bcpl_cg_head:  257

BREAK_S			bcpl_symbols:  21

BuildObject		bcpl_compiler_head:  72

BY_S			bcpl_symbols:  22

c			bcpl_cg8:  126, 128

CAE			bcpl_compiler_head:  64

CaeReport			bcpl_compiler_head:  49

CALL_S			bcpl_symbols:  23

CASE_S			bcpl_symbols:  24

CgInit			bcpl_compiler_head:  71

CGreport			bcpl_compiler_head:  51, bcpl_cg8:  105, 154

CgTempList		bcpl_cg_head:  119

CgTempSize		bcpl_cg_head:  178

Ch			bcpl_compiler_head:  92

CHARCONST_S		bcpl_symbols:  27

CHAR_S			bcpl_symbols:  26

CheckAddr			bcpl_cg_head:  97

ClaimRegister		bcpl_cg_head:  35

Cleanup			bcpl_compiler_head:  61

ClearMemory		bcpl_cg_head:  45

ClearRegisters		bcpl_cg_head:  44

Cmpa			bcpl_opcodes:  27

CodeFirst			bcpl_cg_head:  120

CodeP			bcpl_cg_head:  121

CodeSize			bcpl_cg_head:  179

CodeSwitch		bcpl_cg_head:  184

CodeV			bcpl_cg_head:  122

COLON_S			bcpl_symbols:  28

Column			bcpl_compiler_head:  128

CombineAddress		bcpl_cg_head:  39

COMMA_S			bcpl_symbols:  29

Comment			bcpl_cg_head:  123, bcpl_cg8:  119

CompareStrings		bcpl_compiler_head:  25

CompareToZero		bcpl_cg_head:  56

Compentry			bcpl_cg_head:  67

Compexternal		bcpl_cg_head:  82

Compfinish		bcpl_cg_head:  78

Compfnap			bcpl_cg_head:  71

Compgoto			bcpl_cg_head:  79

CompilerDTM		bcpl_compiler_head:  112, bcpl_cg8:  55, 56

CompilerDTMString		bcpl_compiler_head:  111, bcpl_cg8:  56

CompilerVersionNumber	bcpl_compiler_head:  110, bcpl_cg8:  54

CompilerVersionString	bcpl_compiler_head:  109, bcpl_cg8:  60

Compjump			bcpl_cg_head:  40

Complab			bcpl_cg_head:  41, bcpl_cg8:  26, 37

Compreturn		bcpl_cg_head:  68

Compstring		bcpl_cg_head:  80

Compswitch		bcpl_cg_head:  99

CompSystemCall		bcpl_cg_head:  74

Comptable			bcpl_cg_head:  81

Concatenate		bcpl_compiler_head:  26, bcpl_cg8:  118

COND_S			bcpl_symbols:  30

CONSTANT_S		bcpl_symbols:  31

CONSTDEF_S		bcpl_symbols:  32

ConvertNtoS		bcpl_compiler_head:  28

ConvertStoN		bcpl_compiler_head:  27

CountRelbits		bcpl_cg8:  75, 75, 137

CreateArglist		bcpl_cg_head:  69

CreateSystemArglist		bcpl_cg_head:  72

Crep			bcpl_compiler_head:  98

d			bcpl_cg8:  153, 154, 159, 160

DataSwitch		bcpl_cg_head:  186

DEFAULT_S			bcpl_symbols:  33

DeferredJumpLabel		bcpl_cg_head:  125

DefineLab			bcpl_cg_head:  42

DefsLength		bcpl_cg_head:  126, bcpl_cg8:  153, 158

DefsRelbits		bcpl_cg_head:  127, bcpl_cg8:  146

DiadicJumpcond		bcpl_cg_head:  26

DictionaryEntry		bcpl_compiler_head:  127

DisclaimRegister		bcpl_cg_head:  36

Div			bcpl_opcodes:  28

DIV_F			bcpl_symbols:  34

DIV_S			bcpl_symbols:  36

Dl			bcpl_cg_head:  223

DOUBLE_S			bcpl_symbols:  38

DO_S			bcpl_symbols:  37

Du			bcpl_cg_head:  224

DupCase			bcpl_cg_codes:  19

DupLabel			bcpl_cg_codes:  20

Dvf			bcpl_opcodes:  29

Eabap			bcpl_opcodes:  30

Eablb			bcpl_opcodes:  31

Eablp			bcpl_opcodes:  32

Eapab			bcpl_opcodes:  33

Eapap			bcpl_opcodes:  34

Eapbp			bcpl_opcodes:  35

Eaplb			bcpl_opcodes:  36

Eaplp			bcpl_opcodes:  37

EAQr			bcpl_cg_head:  264

Eax0			bcpl_opcodes:  38

Eax1			bcpl_opcodes:  39

Eax7			bcpl_opcodes:  40

ENDCASE_S			bcpl_symbols:  39

Endofstreamch		bcpl_compiler_head:  135

ENDPROG_S			bcpl_symbols:  40

EnterIntoCrossreference	bcpl_compiler_head:  57

EntryLabel		bcpl_cg_head:  128

Epaq			bcpl_opcodes:  41

EqualString		bcpl_compiler_head:  24

EQV_S			bcpl_symbols:  44

EQ_F			bcpl_symbols:  42

EQ_S			bcpl_symbols:  43

Era			bcpl_opcodes:  42

Errorsw			bcpl_compiler_head:  124

ERROR_S			bcpl_symbols:  41

Ersa			bcpl_opcodes:  43

EvalNumber		bcpl_cg_head:  29

Even			bcpl_compiler_head:  136, bcpl_cg8:  153, 153, 153

EXTERNAL_S		bcpl_symbols:  46

Fad			bcpl_opcodes:  44

FALSE_S			bcpl_symbols:  47

Fcmp			bcpl_opcodes:  45

Fdi			bcpl_opcodes:  46

Fdv			bcpl_opcodes:  47

FileCount			bcpl_compiler_head:  118, bcpl_cg8:  49, 66, 86, 87

FileNames			bcpl_compiler_head:  116, bcpl_cg8:  89

FileShift			bcpl_compiler_head:  138

FilesInfo			bcpl_compiler_head:  117, bcpl_cg8:  66, 88

FindInRegister		bcpl_cg_head:  38

FindPrintName		bcpl_compiler_head:  56

FinishText		bcpl_cg_head:  20

FINISH_S			bcpl_symbols:  48

FIXED_S			bcpl_symbols:  49

Fld			bcpl_opcodes:  48

FLOAT_S			bcpl_symbols:  50

Fmp			bcpl_opcodes:  49

FNAP_S			bcpl_symbols:  51

FNDEF_S			bcpl_symbols:  52

Fneg			bcpl_opcodes:  50

Format			bcpl_compiler_head:  20

FormCharconst		bcpl_compiler_head:  46

FormOpcode		bcpl_cg_head:  95

FormStringconst		bcpl_compiler_head:  47

FormTag			bcpl_cg_head:  96

FOR_S			bcpl_symbols:  53

Freevec			bcpl_compiler_head:  34

Fsb			bcpl_opcodes:  51

Fstr			bcpl_opcodes:  52

Fszn			bcpl_opcodes:  53

Ft2			bcpl_cg_head:  237

GetLpLabel		bcpl_cg_head:  129

GetRegister		bcpl_cg_head:  62

GetStream			bcpl_compiler_head:  62

GetVersion		bcpl_compiler_head:  59

GET_S			bcpl_symbols:  57

GE_F			bcpl_symbols:  54

GE_S			bcpl_symbols:  56

GlobalTemp		bcpl_compiler_head:  131, bcpl_cg8:  16

GLOBAL_S			bcpl_symbols:  58

GOTO_S			bcpl_symbols:  59

GR_F			bcpl_symbols:  60

GR_S			bcpl_symbols:  61

HaveListingFile		bcpl_compiler_head:  105

HeaderSwitch		bcpl_cg_head:  190

i			bcpl_cg8:  66, 66, 66, 87, 88, 89, 89, 94, 94, 123, 123, 123, 123, 123

Ic			bcpl_cg_head:  238

IFNOT_S			bcpl_symbols:  63

IFSO_S			bcpl_symbols:  64

IF_S			bcpl_symbols:  62

IndicatorsSetBy		bcpl_cg_head:  130

Info			bcpl_cg8:  88, 90, 91, 91, 92

INPUT			bcpl_compiler_head:  90

InRegister		bcpl_cg_head:  37

InstructionSwitch		bcpl_cg_head:  185

INTO_S			bcpl_symbols:  66

IsAddress			bcpl_cg_head:  31

IsNumber			bcpl_cg_head:  28

IsStored			bcpl_cg_head:  32

IsZero			bcpl_cg_head:  30

Jumpsw			bcpl_cg_head:  131

l			bcpl_cg8:  21, 22, 22, 23, 27, 28, 109, 110, 111, 153, 154, 160

LABDEF_S			bcpl_symbols:  67

LabelSwitch		bcpl_cg_head:  187

LABEL_S			bcpl_symbols:  68

LabMaxArg			bcpl_cg_head:  132

LabMaxSSP			bcpl_cg_head:  133

LabTable			bcpl_cg_head:  135

LabTableSize		bcpl_cg_head:  180

Lb			bcpl_cg_head:  217

Lbr			bcpl_cg_head:  260

LC			bcpl_cg_head:  136, bcpl_cg8:  99, 105

Lca			bcpl_opcodes:  54

Lda			bcpl_opcodes:  55

Ldaq			bcpl_opcodes:  56

Ldx7			bcpl_opcodes:  57

Left			bcpl_compiler_head:  134, bcpl_cg8:  28, 63, 74, 76, 80, 81, 110, 158, 159, 160, 163

Len			bcpl_cg8:  121, 122, 122, 122, 123

Length			bcpl_compiler_head:  29, bcpl_cg8:  109

LengthInWords		bcpl_compiler_head:  30

LENGTH_S			bcpl_symbols:  71

LET_S			bcpl_symbols:  72

LexInit			bcpl_compiler_head:  65

LE_F			bcpl_symbols:  69

LE_S			bcpl_symbols:  70

LineCount			bcpl_compiler_head:  123

LineCountSwitch		bcpl_cg_head:  188

LineMap			bcpl_compiler_head:  100, bcpl_cg8:  47, 68, 72, 96, 99, 101

LineMapFirst		bcpl_cg_head:  137, bcpl_cg8:  21, 29

LineMapLength		bcpl_cg_head:  138, bcpl_cg8:  19, 27, 72

LineMapList		bcpl_cg_head:  139, bcpl_cg8:  20

LineMask			bcpl_compiler_head:  138

LinkageLength		bcpl_cg_head:  140, bcpl_cg8:  153, 159

LinkageRelbits		bcpl_cg_head:  141, bcpl_cg8:  75, 147

LinkList			bcpl_cg_head:  142

LinkRefersThis		bcpl_cg_codes:  21

List1			bcpl_compiler_head:  35

List2			bcpl_compiler_head:  36

List3			bcpl_compiler_head:  37

List4			bcpl_compiler_head:  38

List5			bcpl_compiler_head:  39

List6			bcpl_compiler_head:  40

ListCodeItem		bcpl_cg_head:  112

Listing			bcpl_compiler_head:  95

LIST_S			bcpl_symbols:  73

Literal			bcpl_cg_head:  64

Llen			bcpl_cg8:  75, 80

Llr			bcpl_opcodes:  58

LoadAppropriateRegister	bcpl_cg_head:  53

LoadIndex			bcpl_cg_head:  52

LoadNumber		bcpl_cg_head:  54

LoadPointer		bcpl_cg_head:  51

LoadRegister		bcpl_cg_head:  50

LOCAL_S			bcpl_symbols:  74

LOGAND_S			bcpl_symbols:  76

LOGOR_S			bcpl_symbols:  77

LookupLabel		bcpl_cg_head:  43

LookupTemp		bcpl_cg_head:  33

LOOP_S			bcpl_symbols:  78

Lp			bcpl_cg_head:  216

Lpr			bcpl_cg_head:  259

Lprpap			bcpl_opcodes:  59

Lprpbp			bcpl_opcodes:  60

Lprplp			bcpl_opcodes:  61

Lrand			bcpl_cg_head:  143

Lrl			bcpl_opcodes:  62

LSHIFT_S			bcpl_symbols:  81

LS_F			bcpl_symbols:  79

LS_S			bcpl_symbols:  80

LVECAP_S			bcpl_symbols:  83

LV_ARG_OUT		bcpl_symbols:  84

LV_FNAP_RESULT		bcpl_symbols:  86

LV_GLOBAL			bcpl_symbols:  87

LV_LOCAL			bcpl_symbols:  88

LV_S			bcpl_symbols:  82

LV_STATIC			bcpl_symbols:  89

LV_TEMP			bcpl_symbols:  90

Lxl0			bcpl_opcodes:  63

Lxl1			bcpl_opcodes:  64

Machine			bcpl_compiler_head:  102

MainEntriesList		bcpl_cg_head:  145

MAIN_S			bcpl_symbols:  91

Makeaddressable		bcpl_cg_head:  57

MakeCgTemp		bcpl_cg_head:  34

MakeTimeString		bcpl_compiler_head:  44, bcpl_cg8:  91

MANIFEST_S		bcpl_symbols:  92

MapL			bcpl_cg8:  25, 26, 47, 101

MaxArgOffset		bcpl_cg_head:  146

MaxSSP			bcpl_cg_head:  147

MINUS_F			bcpl_symbols:  93

MINUS_S			bcpl_symbols:  94

Mod16			bcpl_cg_head:  208

MonadicJumpcond		bcpl_cg_head:  25

MONITOR			bcpl_compiler_head:  91

Mpy			bcpl_opcodes:  65

MULT_F			bcpl_symbols:  96

MULT_S			bcpl_symbols:  97

n			bcpl_cg8:  139, 140, 140, 141

NAMECHAIN			bcpl_compiler_head:  125

NAME_S			bcpl_symbols:  98

Neg			bcpl_opcodes:  66

Negl			bcpl_opcodes:  67

NEG_F			bcpl_symbols:  99

NEG_S			bcpl_symbols:  100

NEQV_S			bcpl_symbols:  101

NewLiteralsList		bcpl_cg_head:  148

NewSSP			bcpl_cg_head:  66

Newvec			bcpl_compiler_head:  33

Nextparam			bcpl_compiler_head:  45, bcpl_cg8:  46, 47

Nextsymb			bcpl_compiler_head:  53

NE_F			bcpl_symbols:  102

NE_S			bcpl_symbols:  103

NIL_S			bcpl_symbols:  104

NOT_S			bcpl_symbols:  106

NumberOfRegisters		bcpl_cg_head:  266

NUMBER_S			bcpl_symbols:  107

OcodeSw			bcpl_compiler_head:  104

OFFSET_S			bcpl_symbols:  108

OldLabel			bcpl_cg_head:  149

OldLiteralsList		bcpl_cg_head:  150

Optimize			bcpl_compiler_head:  101

OptionString		bcpl_compiler_head:  115, bcpl_cg8:  62

Ora			bcpl_opcodes:  68

Orsa			bcpl_opcodes:  69

OR_S			bcpl_symbols:  109

OutAlignedString		bcpl_cg8:  53, 59, 94, 116, 156

OutData			bcpl_cg_head:  84

OutLiterals		bcpl_cg_head:  47

Outop			bcpl_cg_head:  85

Outop2			bcpl_cg_head:  86

Outop3			bcpl_cg_head:  87

Outop4			bcpl_cg_head:  88

OUTPUT			bcpl_compiler_head:  89

OutRel			bcpl_cg8:  126, 145, 146, 147, 148

Outstring			bcpl_cg_head:  48

OutW			bcpl_cg_head:  89, bcpl_cg8:  31, 92, 123, 133

OutW2			bcpl_cg_head:  90, bcpl_cg8:  28, 38, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 74, 77, 78, 
			79, 80, 81, 85, 86, 89, 90, 91, 99, 129, 130, 155, 157, 158, 159, 160, 161, 162, 163

OverCase			bcpl_cg_codes:  22

p			bcpl_cg8:  126, 127, 130, 131, 131, 132, 133, 134, 134, 137, 138, 140, 140, 140

Packstring		bcpl_compiler_head:  21

Param			bcpl_cg_head:  151, bcpl_cg8:  98

PhaseError		bcpl_cg_codes:  23, bcpl_cg8:  105, 154

Plist			bcpl_compiler_head:  68

PLUS_F			bcpl_symbols:  110

PLUS_S			bcpl_symbols:  111

Pname			bcpl_compiler_head:  67

POINTER_S			bcpl_symbols:  112

PopInput			bcpl_compiler_head:  43

POS_F			bcpl_symbols:  113

POS_S			bcpl_symbols:  114

PPrep			bcpl_compiler_head:  97

Preserve			bcpl_cg_head:  59

ProgramName		bcpl_compiler_head:  119

PushInput			bcpl_compiler_head:  42

PutAbsBits		bcpl_cg_head:  92

PutCode			bcpl_cg_head:  91

q			bcpl_cg8:  21, 22, 22, 22, 29, 30, 31, 32, 32

Ql			bcpl_cg_head:  225

Qr			bcpl_cg_head:  244

Qu			bcpl_cg_head:  226

QuietSw			bcpl_compiler_head:  106

r			bcpl_cg8:  110, 114

RandomI			bcpl_compiler_head:  31

RBRA_S			bcpl_symbols:  116

Readch			bcpl_compiler_head:  16

RegisterTemps		bcpl_cg_head:  153

RegisterUsage		bcpl_cg_head:  155

REGISTER_S		bcpl_symbols:  117

RelbitsFirst		bcpl_cg_head:  156

RelbitsLength		bcpl_cg_head:  157

RelbitsList		bcpl_cg_head:  158

RelbitsOffset		bcpl_cg_head:  159

RelDef			bcpl_cg_head:  197

RelExtendedAbs		bcpl_cg_head:  202

RelLink15			bcpl_cg_head:  196

RelLink18			bcpl_cg_head:  194

RelNegLink18		bcpl_cg_head:  195

RelNegSymbol		bcpl_cg_head:  199, bcpl_cg8:  76

Reloc			bcpl_cg_head:  160, bcpl_cg8:  76

RelStat15			bcpl_cg_head:  201

RelStat18			bcpl_cg_head:  200

RelSymbol			bcpl_cg_head:  198

RelText			bcpl_cg_head:  193

REL_S			bcpl_symbols:  118

RemoteString		bcpl_cg8:  60, 61, 62, 66, 108

RemoveEscapes		bcpl_compiler_head:  23

REM_S			bcpl_symbols:  119

REPEATUNTIL_S		bcpl_symbols:  122

REPEATWHILE_S		bcpl_symbols:  123

REPEAT_S			bcpl_symbols:  121

REP_S			bcpl_symbols:  120

ResultBlockBegin		bcpl_cg_head:  75

ResultGet			bcpl_cg_head:  77

ResultInfo		bcpl_cg_head:  161

ResultInfoList		bcpl_cg_head:  162

RESULTIS_S		bcpl_symbols:  124

ResultSet			bcpl_cg_head:  76

RETURN_S			bcpl_symbols:  126

Right			bcpl_compiler_head:  134

RKET_S			bcpl_symbols:  127

Rrand			bcpl_cg_head:  152

RSHIFT_S			bcpl_symbols:  128

RTAP_S			bcpl_symbols:  129

RTDEF_S			bcpl_symbols:  130

RV_S			bcpl_symbols:  131

s			bcpl_cg8:  108, 109, 113, 116, 118, 120

Satisfactory		bcpl_cg_head:  63

SaveSpaceSize		bcpl_cg_head:  163

Sb			bcpl_cg_head:  219

Sba			bcpl_opcodes:  70

Sblx1			bcpl_opcodes:  71

Sbr			bcpl_cg_head:  262

SBRA_S			bcpl_symbols:  132

SECTBEGIN_S		bcpl_symbols:  133

SECTBRA_S			bcpl_symbols:  134

SECTEND_S			bcpl_symbols:  136

SectionHeader		bcpl_cg_head:  94, bcpl_cg8:  45, 97, 128, 144, 152

SectionSwitch		bcpl_cg_head:  189

SECTKET_S			bcpl_symbols:  137

SEMICOLON_S		bcpl_symbols:  138

SetLineNumber		bcpl_cg_head:  93

SetupAddr			bcpl_cg_head:  55

SKET_S			bcpl_symbols:  139

Smap			bcpl_cg8:  48, 49, 74, 81

Sp			bcpl_cg_head:  218

Spr			bcpl_cg_head:  261

Sprpap			bcpl_opcodes:  72

Sprpbp			bcpl_opcodes:  73

Sprplp			bcpl_opcodes:  74

Sreg			bcpl_opcodes:  75

Ssa			bcpl_opcodes:  76

Sta			bcpl_opcodes:  77

StackRefTag		bcpl_cg_head:  167

Staq			bcpl_opcodes:  78

Star			bcpl_cg_head:  239

StarThenReg		bcpl_cg_head:  240

STATIC_S			bcpl_symbols:  140

Stb			bcpl_opcodes:  79

Stc1			bcpl_opcodes:  80

Stcd			bcpl_opcodes:  81

Store			bcpl_cg_head:  60

StoreArg			bcpl_cg_head:  70

StoreRegister		bcpl_cg_head:  61

StoreString		bcpl_compiler_head:  41, bcpl_cg8:  119

StoreSystemArg		bcpl_cg_head:  73

Stpab			bcpl_opcodes:  82

Stpap			bcpl_opcodes:  83

Stpbp			bcpl_opcodes:  84

Stplb			bcpl_opcodes:  85

Stplp			bcpl_opcodes:  86

STRINGCONST_S		bcpl_symbols:  142

Strings			bcpl_cg8:  16, 50, 51, 94, 94, 112, 112, 113, 113

STRING_S			bcpl_symbols:  141

STRUCTURE_S		bcpl_symbols:  143

Stx0			bcpl_opcodes:  87

Stz			bcpl_opcodes:  88

SwapAandQ			bcpl_cg_head:  58

SWITCHON_S		bcpl_symbols:  144

Sxl0			bcpl_opcodes:  89

Sxl1			bcpl_opcodes:  90

Symb			bcpl_compiler_head:  126

SymbolLength		bcpl_cg_head:  165, bcpl_cg8:  49, 69, 70, 70, 71, 71, 72, 72, 77, 78, 79, 80, 80, 105, 
			110, 111, 111, 154, 160

SymbolName		bcpl_compiler_head:  55

SymbolRelbits		bcpl_cg_head:  166, bcpl_cg8:  148

Symbols			bcpl_compiler_head:  99, bcpl_cg8:  46, 68, 71, 96, 102

SymbolTableLength		bcpl_cg8:  35, 71

SymL			bcpl_cg8:  36, 37, 46, 98, 102

SymtabFirst		bcpl_cg_head:  168

SymtabP			bcpl_cg_head:  169

SymtabSize		bcpl_cg_head:  181

SymtabV			bcpl_cg_head:  170

Szn			bcpl_opcodes:  91

t			bcpl_cg8:  153, 154, 158, 159, 160

TABLE_S			bcpl_symbols:  146

Tag			bcpl_cg_head:  171

TagPrMask			bcpl_cg_head:  206

TagXrMask			bcpl_cg_head:  205

TEMP_S			bcpl_symbols:  147

TEST_S			bcpl_symbols:  148

TextLength		bcpl_cg_head:  172, bcpl_cg8:  28, 153, 157

TextRelbits		bcpl_cg_head:  173, bcpl_cg8:  75, 145

TimeNow			bcpl_compiler_head:  114, bcpl_cg8:  57, 58

TimeNowString		bcpl_compiler_head:  113, bcpl_cg8:  58

Tlen			bcpl_cg8:  75, 79, 80

Tmi			bcpl_opcodes:  92

Tmoz			bcpl_opcodes:  93

Tnz			bcpl_opcodes:  94

TO_S			bcpl_symbols:  149

Tpl			bcpl_opcodes:  95

Tpnz			bcpl_opcodes:  96

Tra			bcpl_opcodes:  97

Trans			bcpl_compiler_head:  70

Transreport		bcpl_compiler_head:  50

Trc			bcpl_opcodes:  98

Tree			bcpl_cg8:  67, 69, 74

TRUE_S			bcpl_symbols:  150

Tsbap			bcpl_opcodes:  99

Tsbbp			bcpl_opcodes:  100

Tsblp			bcpl_opcodes:  101

Tsx0			bcpl_opcodes:  102

TYPE_S			bcpl_symbols:  151

Tze			bcpl_opcodes:  103

UndefLab			bcpl_cg_codes:  24

UnexpectedCase		bcpl_compiler_head:  139

UNLESS_S			bcpl_symbols:  152

Unpackstring		bcpl_compiler_head:  22, bcpl_cg8:  120

UNTIL_S			bcpl_symbols:  153

UpperCase			bcpl_compiler_head:  96

UsageCounter		bcpl_cg_head:  175

UserID			bcpl_compiler_head:  120, bcpl_cg8:  61

UtilitiesInit		bcpl_compiler_head:  60

v			bcpl_cg8:  117, 118, 119, 120, 121, 122, 122, 122, 123, 123, 123, 123

VALDEF_S			bcpl_symbols:  154

VALOF_S			bcpl_symbols:  156

VECAP_S			bcpl_symbols:  158

VEC_S			bcpl_symbols:  157

Vmax			bcpl_compiler_head:  137, bcpl_cg8:  117, 118

w			bcpl_cg8:  65, 66, 89

WHILE_S			bcpl_symbols:  159

Writech			bcpl_compiler_head:  17

WriteData			bcpl_cg_head:  110

WriteDefs			bcpl_cg_head:  103

WriteEntry		bcpl_cg_head:  102

WriteGetlp		bcpl_cg_head:  101

WriteInstruction		bcpl_cg_head:  111

WriteLineMap		bcpl_cg8:  25, 101

WriteLinkage		bcpl_cg_head:  104

WriteN			bcpl_compiler_head:  19

WriteObjectListing		bcpl_compiler_head:  73

WriteObjectMap		bcpl_cg_head:  108, bcpl_cg8:  151

WriteRelBits		bcpl_cg_head:  107, bcpl_cg8:  143

WriteS			bcpl_compiler_head:  18

WriteSymbol		bcpl_cg_head:  106, bcpl_cg8:  44

WriteSymbolTable		bcpl_cg8:  36, 102

X0			bcpl_cg_head:  228

X1			bcpl_cg_head:  229

X2			bcpl_cg_head:  230

X3			bcpl_cg_head:  231

X4			bcpl_cg_head:  232

X5			bcpl_cg_head:  233

X6			bcpl_cg_head:  234

X7			bcpl_cg_head:  235

Xr0			bcpl_cg_head:  246

Xr1			bcpl_cg_head:  247

Xr2			bcpl_cg_head:  248

Xr3			bcpl_cg_head:  249

Xr4			bcpl_cg_head:  250

Xr5			bcpl_cg_head:  251

Xr6			bcpl_cg_head:  252

Xr7			bcpl_cg_head:  253

Xref			bcpl_compiler_head:  103




Trans time 1.9, 758 object words per second.
	"	Begin text of SymbolTableLength

aa 000000  000021 123171		zero	17,42617		" SymbolTableLength
aa 000001  155142 157154		zero	55906,56940
aa 000002  124141 142154		zero	43105,50284
aa 000003  145114 145156		zero	51788,51822
aa 000004  147164 150000		zero	52852,53248
			L3:
aa 000005  000000 213000  35		epaq	0		" set lp to linkage section
aa 000006  700026 764161		lprplp	sb|22,*au
aa 000007  200000 021100		adlx1	bp|0		" BCPL save
aa 000010  700000 542111		sprpbp	sb|0,x1
aa 000011  700001 544111		sprplp	sb|1,x1
aa 000012  700417 620111		eax0	sb|271,x1
aa 000013  777760 360003		anx0	-16,du
aa 000014  700025 740100		stx0	sb|21		" end of save sequence

aa 000015  000001 236007		ldq	1,dl		" 1
aa 000016  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000017  200000 121100		sblx1	bp|0
aa 000020  700001 764111		lprplp	sb|1,x1
aa 000021  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of WriteSymbolTable

aa 000022  000020 127162		zero	16,44658		" WriteSymbolTable
aa 000023  151164 145123		zero	53876,51795
aa 000024  171155 142157		zero	62061,50287
aa 000025  154124 141142		zero	55380,49762
aa 000026  154145 000000		zero	55397
			L4:
aa 000027  000000 213000  36		epaq	0		" set lp to linkage section
aa 000030  700026 764161		lprplp	sb|22,*au
aa 000031  200000 021100		adlx1	bp|0		" BCPL save
aa 000032  700000 542111		sprpbp	sb|0,x1
aa 000033  700001 544111		sprplp	sb|1,x1
aa 000034  700423 620111		eax0	sb|275,x1
aa 000035  777760 360003		anx0	-16,du
aa 000036  700025 740100		stx0	sb|21		" end of save sequence

aa 000037  700002 235111  37		lda	sb|2,x1		" SymL
aa 000040  700006 755111		sta	sb|6,x1
4a 000041  400034 272120		tsbbp	lp|L10,*		" Complab
aa 000042  000004 000001		zero	4,1
aa 000043  700006 450111  38		stz	sb|6,x1
aa 000044  000010 350004		eapap	L11		" "no symbol table implemented"
aa 000045  700007 540111		sprpap	sb|7,x1
4a 000046  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 000047  000004 000002		zero	4,2
			L9:
aa 000050  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000051  200000 121100		sblx1	bp|0
aa 000052  700001 764111		lprplp	sb|1,x1
aa 000053  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L11:
aa 000054  000033 156157		zero	27,56431		" "no symbol table implemented"
aa 000055  040163 171155		zero	16499,62061
aa 000056  142157 154040		zero	50287,55328
aa 000057  164141 142154		zero	59489,50284
aa 000060  145040 151155		zero	51744,53869
aa 000061  160154 145155		zero	57452,51821
aa 000062  145156 164145		zero	51822,59493
aa 000063  144000 000000		zero	51200
	"	Begin text of WriteLineMap

aa 000064  000014 127162		zero	12,44658		" WriteLineMap
aa 000065  151164 145114		zero	53876,51788
aa 000066  151156 145115		zero	53870,51789
aa 000067  141160 000000		zero	49776
			L2:
aa 000070  000000 213000  25		epaq	0		" set lp to linkage section
aa 000071  700026 764161		lprplp	sb|22,*au
aa 000072  200000 021100		adlx1	bp|0		" BCPL save
aa 000073  700000 542111		sprpbp	sb|0,x1
aa 000074  700001 544111		sprplp	sb|1,x1
aa 000075  700423 620111		eax0	sb|275,x1
aa 000076  777760 360003		anx0	-16,du
aa 000077  700025 740100		stx0	sb|21		" end of save sequence

aa 000100  700002 235111  26		lda	sb|2,x1		" MapL
aa 000101  700010 755111		sta	sb|8,x1
4a 000102  400034 272120		tsbbp	lp|L10,*		" Complab
aa 000103  000006 000001		zero	6,1
aa 000104  000053 272004  27		tsbbp	L1+2		" LineMapLength
aa 000105  000006 000000		zero	6
aa 000106  000001 176007		sbq	1,dl		" 1
aa 000107  700003 756111		stq	sb|3,x1		" l
aa 000110  600545 236100  28		ldq	sp|357		" TextLength
aa 000111  000022 736000		qls	18
aa 000112  700003 276111		orq	sb|3,x1		" l
aa 000113  700010 756111		stq	sb|8,x1
aa 000114  000025 350004		eapap	L16		" "text length, map entry count"
aa 000115  700011 540111		sprpap	sb|9,x1
4a 000116  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 000117  000006 000002		zero	6,2
aa 000120  600502 236100  29		ldq	sp|322		" LineMapFirst
aa 000121  700004 756111		stq	sb|4,x1		" q
aa 000122  000011 710004  30		tra	L17
			L18:
aa 000123  700004 760111  31		lprpap	sb|4,x1		" q
aa 000124  000000 236100		ldq	ap|0
aa 000125  700010 756111		stq	sb|8,x1
4a 000126  400030 272120		tsbbp	lp|L19,*		" OutW
aa 000127  000006 000001		zero	6,1
aa 000130  700004 762111  32		lprpbp	sb|4,x1		" q
aa 000131  200001 236100		ldq	bp|1
aa 000132  700004 756111		stq	sb|4,x1		" q
			L17:
aa 000133  700004 234111		szn	sb|4,x1		" q
aa 000134  777767 601004		tnz	L18
			L15:
aa 000135  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000136  200000 121100		sblx1	bp|0
aa 000137  700001 764111		lprplp	sb|1,x1
aa 000140  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L16:
aa 000141  000034 164145		zero	28,59493		" "text length, map entry count"
aa 000142  170164 040154		zero	61556,16492
aa 000143  145156 147164		zero	51822,52852
aa 000144  150054 040155		zero	53292,16493
aa 000145  141160 040145		zero	49776,16485
aa 000146  156164 162171		zero	56436,58489
aa 000147  040143 157165		zero	16483,56949
aa 000150  156164 000000		zero	56436
	"	Begin text of LineMapLength

aa 000151  000015 114151		zero	13,39017		" LineMapLength
aa 000152  156145 115141		zero	56421,39521
aa 000153  160114 145156		zero	57420,51822
aa 000154  147164 150000		zero	52852,53248
			L1:
aa 000155  000000 213000  19		epaq	0		" set lp to linkage section
aa 000156  700026 764161		lprplp	sb|22,*au
aa 000157  200000 021100		adlx1	bp|0		" BCPL save
aa 000160  700000 542111		sprpbp	sb|0,x1
aa 000161  700001 544111		sprplp	sb|1,x1
aa 000162  700417 620111		eax0	sb|271,x1
aa 000163  777760 360003		anx0	-16,du
aa 000164  700025 740100		stx0	sb|21		" end of save sequence

aa 000165  600504 761100  20		lprpab	sp|324		" LineMapList
aa 000166  100001 450100		stz	ab|1
aa 000167  600502 236100  21		ldq	sp|322		" LineMapFirst
aa 000170  700003 756111		stq	sb|3,x1		" q
aa 000171  700004 450111		stz	sb|4,x1		" l
aa 000172  000005 710004  22		tra	L23
			L24:
aa 000173  700004 054111		aos	sb|4,x1		" l
aa 000174  700003 763111		lprpbb	sb|3,x1		" q
aa 000175  300001 236100		ldq	bb|1
aa 000176  700003 756111		stq	sb|3,x1		" q
			L23:
aa 000177  700003 234111		szn	sb|3,x1		" q
aa 000200  777773 601004		tnz	L24
aa 000201  700004 236111  23		ldq	sb|4,x1		" l
aa 000202  000001 076007		adq	1,dl		" 1
			L22:
aa 000203  700003 756111		stq	sb|3,x1
aa 000204  700003 236111		ldq	sb|3,x1
aa 000205  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000206  200000 121100		sblx1	bp|0
aa 000207  700001 764111		lprplp	sb|1,x1
aa 000210  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of WriteSymbol

aa 000211  000013 127162		zero	11,44658		" WriteSymbol
aa 000212  151164 145123		zero	53876,51795
aa 000213  171155 142157		zero	62061,50287
aa 000214  154000 000000		zero	55296
aa 000215  700002 756111  44		stq	sb|2,x1		" temporary
			L25:
aa 000216  000000 213000		epaq	0		" set lp to linkage section
aa 000217  700026 764161		lprplp	sb|22,*au
aa 000220  200000 021100		adlx1	bp|0		" BCPL save
aa 000221  700000 542111		sprpbp	sb|0,x1
aa 000222  700001 544111		sprplp	sb|1,x1
aa 000223  700423 620111		eax0	sb|275,x1
aa 000224  777760 360003		anx0	-16,du
aa 000225  700025 740100		stx0	sb|21		" end of save sequence

aa 000226  000772 371404  45		eaplb	L34		" "*fSymbol section header"
aa 000227  700170 545111		sprplb	sb|120,x1
4a 000230  400026 272120		tsbbp	lp|L35,*		" SectionHeader
aa 000231  000166 000001		zero	118,1
aa 000232  600150 234100  46		szn	sp|104		" Symbols
aa 000233  000004 600004		tze	L36
4a 000234  400024 272120		tsbbp	lp|L38,*		" Nextparam
aa 000235  000166 000000		zero	118
aa 000236  000002 710004		tra	L37
			L36:
aa 000237  000000 236007		ldq	0,dl		" 0
			L37:
aa 000240  700006 756111		stq	sb|6,x1
aa 000241  700006 236111		ldq	sb|6,x1
aa 000242  700002 756111		stq	sb|2,x1		" SymL
aa 000243  600151 234100  47		szn	sp|105		" LineMap
aa 000244  000004 600004		tze	L39
4a 000245  400024 272120		tsbbp	lp|L38,*		" Nextparam
aa 000246  000166 000000		zero	118
aa 000247  000002 710004		tra	L40
			L39:
aa 000250  000000 236007		ldq	0,dl		" 0
			L40:
aa 000251  700006 756111		stq	sb|6,x1
aa 000252  700006 236111		ldq	sb|6,x1
aa 000253  700003 756111		stq	sb|3,x1		" MapL
aa 000254  000024 236007  48		ldq	20,dl		" 20
aa 000255  700004 756111		stq	sb|4,x1		" Smap
aa 000256  600201 236100  49		ldq	sp|129		" FileCount
aa 000257  000002 736000		qls	2
aa 000260  700004 235111		lda	sb|4,x1		" Smap
aa 000261  000002 075007		ada	2,dl		" 2
aa 000262  600000 755100		sta	sp|0
aa 000263  600000 076100		adq	sp|0
aa 000264  000004 076007		adq	4,dl		" 4
aa 000265  600536 756100		stq	sp|350		" SymbolLength
aa 000266  700010 371511  50		eaplb	sb|8,x1		" a vector
aa 000267  600307 545100		sprplb	sp|199		" Strings
aa 000270  600307 765100  51		lprplb	sp|199		" Strings
aa 000271  500000 450100		stz	lb|0
aa 000272  000001 236007  52		ldq	1,dl		" 1
aa 000273  700170 756111		stq	sb|120,x1
aa 000274  000713 350004		eapap	L41		" "version number of header structure"
aa 000275  700171 540111		sprpap	sb|121,x1
4a 000276  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 000277  000166 000002		zero	118,2
aa 000300  000704 350004  53		eapap	L42		" "symbtree"
aa 000301  700170 540111		sprpap	sb|120,x1
aa 000302  001003 272004		tsbbp	L27+2		" OutAlignedString
aa 000303  000166 000001		zero	118,1
aa 000304  600171 236100  54		ldq	sp|121		" CompilerVersionNumber
aa 000305  700170 756111		stq	sb|120,x1
aa 000306  000667 350004		eapap	L43		" "compiler version number"
aa 000307  700171 540111		sprpap	sb|121,x1
4a 000310  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 000311  000166 000002		zero	118,2
aa 000312  600173 760100  55		lprpap	sp|123		" CompilerDTM
aa 000313  000000 236100		ldq	ap|0
aa 000314  700170 756111		stq	sb|120,x1
aa 000315  000650 352004		eapbp	L44		" "date/time compiler modified"
aa 000316  700171 542111		sprpbp	sb|121,x1
4a 000317  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 000320  000166 000002		zero	118,2
aa 000321  600173 762100  56		lprpbp	sp|123		" CompilerDTM
aa 000322  200001 236100		ldq	bp|1
aa 000323  700170 756111		stq	sb|120,x1
aa 000324  600172 236100		ldq	sp|122		" CompilerDTMString
aa 000325  700171 756111		stq	sb|121,x1
4a 000326  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 000327  000166 000002		zero	118,2
aa 000330  600175 761100  57		lprpab	sp|125		" TimeNow
aa 000331  100000 236100		ldq	ab|0
aa 000332  700170 756111		stq	sb|120,x1
aa 000333  000623 353404		eapbb	L45		" "time of this compilation"
aa 000334  700171 543111		sprpbb	sb|121,x1
4a 000335  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 000336  000166 000002		zero	118,2
aa 000337  600175 763100  58		lprpbb	sp|125		" TimeNow
aa 000340  300001 236100		ldq	bb|1
aa 000341  700170 756111		stq	sb|120,x1
aa 000342  600174 236100		ldq	sp|124		" TimeNowString
aa 000343  700171 756111		stq	sb|121,x1
4a 000344  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 000345  000166 000002		zero	118,2
aa 000346  000605 371404  59		eaplb	L46		" "bcpl    "
aa 000347  700170 545111		sprplb	sb|120,x1
aa 000350  000735 272004		tsbbp	L27+2		" OutAlignedString
aa 000351  000166 000001		zero	118,1
aa 000352  600170 236100  60		ldq	sp|120		" CompilerVersionString
aa 000353  700170 756111		stq	sb|120,x1
aa 000354  000660 272004		tsbbp	L26+2		" RemoteString
aa 000355  000166 000001		zero	118,1
aa 000356  700005 756111		stq	sb|5,x1
aa 000357  700005 236111		ldq	sb|5,x1
aa 000360  700170 756111		stq	sb|120,x1
aa 000361  000557 371404		eaplb	L47		" "compiler version name - pointer, length"
aa 000362  700171 545111		sprplb	sb|121,x1
4a 000363  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 000364  000166 000002		zero	118,2
aa 000365  600203 236100  61		ldq	sp|131		" UserID
aa 000366  700170 756111		stq	sb|120,x1
aa 000367  000645 272004		tsbbp	L26+2		" RemoteString
aa 000370  000166 000001		zero	118,1
aa 000371  700005 756111		stq	sb|5,x1
aa 000372  700005 236111		ldq	sb|5,x1
aa 000373  700170 756111		stq	sb|120,x1
aa 000374  000535 371404		eaplb	L48		" "user id - pointer, length"
aa 000375  700171 545111		sprplb	sb|121,x1
4a 000376  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 000377  000166 000002		zero	118,2
aa 000400  600176 236100  62		ldq	sp|126		" OptionString
aa 000401  700170 756111		stq	sb|120,x1
aa 000402  000632 272004		tsbbp	L26+2		" RemoteString
aa 000403  000166 000001		zero	118,1
aa 000404  700005 756111		stq	sb|5,x1
aa 000405  700005 236111		ldq	sb|5,x1
aa 000406  700170 756111		stq	sb|120,x1
aa 000407  000511 371404		eaplb	L49		" "comment string - pointer, length"
aa 000410  700171 545111		sprplb	sb|121,x1
4a 000411  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 000412  000166 000002		zero	118,2
aa 000413  000504 236004  63		ldq	L50
aa 000414  700170 756111		stq	sb|120,x1
aa 000415  000472 371404		eaplb	L51		" "text and linkage boundaries"
aa 000416  700171 545111		sprplb	sb|121,x1
4a 000417  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 000420  000166 000002		zero	118,2
aa 000421  700074 371511  65		eaplb	sb|60,x1		" a vector
aa 000422  700005 545111		sprplb	sb|5,x1		" w
aa 000423  700073 450111  66		stz	sb|59,x1		" i
aa 000424  600201 236100		ldq	sp|129		" FileCount
aa 000425  700006 756111		stq	sb|6,x1
aa 000426  000014 710004		tra	L52
			L53:
aa 000427  700073 236111		ldq	sb|59,x1		" i
aa 000430  000002 736000		qls	2
aa 000431  600200 765100		lprplb	sp|128		" FilesInfo
aa 000432  500000 235106		lda	lb|0,ql
aa 000433  700170 755111		sta	sb|120,x1
aa 000434  000600 272004		tsbbp	L26+2		" RemoteString
aa 000435  000166 000001		zero	118,1
aa 000436  700073 722111		lxl2	sb|59,x1		" i
aa 000437  700005 760111		lprpap	sb|5,x1		" w
aa 000440  000000 756112		stq	ap|0,x2
aa 000441  700073 054111		aos	sb|59,x1		" i
			L52:
aa 000442  700073 236111		ldq	sb|59,x1		" i
aa 000443  700006 116111		cmpq	sb|6,x1
aa 000444  777763 604404		tmoz	L53
aa 000445  700006 450111  67		stz	sb|6,x1		" Tree
aa 000446  600150 234100  68		szn	sp|104		" Symbols
aa 000447  000003 601004		tnz	L55
aa 000450  600151 234100		szn	sp|105		" LineMap
aa 000451  000016 600004		tze	L54
			L55:
aa 000452  600536 235100  69		lda	sp|350		" SymbolLength
aa 000453  700006 755111		sta	sb|6,x1		" Tree
aa 000454  600536 054100  70		aos	sp|350		" SymbolLength
aa 000455  600150 234100  71		szn	sp|104		" Symbols
aa 000456  000004 600004		tze	L56
aa 000457  777330 272004		tsbbp	L3+2		" SymbolTableLength
aa 000460  000166 000000		zero	118
aa 000461  600536 056100		asq	sp|350		" SymbolLength
			L56:
aa 000462  600151 234100  72		szn	sp|105		" LineMap
aa 000463  000004 600004		tze	L57
aa 000464  777473 272004		tsbbp	L1+2		" LineMapLength
aa 000465  000166 000000		zero	118
aa 000466  600536 056100		asq	sp|350		" SymbolLength
			L57:
			L54:
aa 000467  700004 236111  74		ldq	sb|4,x1		" Smap
aa 000470  000022 736000		qls	18
aa 000471  700006 276111		orq	sb|6,x1		" Tree
aa 000472  700170 756111		stq	sb|120,x1
aa 000473  000404 352004		eapbp	L58		" "source map, symbol tree root"
aa 000474  700171 542111		sprpbp	sb|121,x1
4a 000475  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 000476  000166 000002		zero	118,2
aa 000477  600546 236100  75		ldq	sp|358		" TextRelbits
aa 000500  700170 756111		stq	sb|120,x1
aa 000501  001162 272004		tsbbp	L29+2		" CountRelbits
aa 000502  000166 000001		zero	118,1
aa 000503  700073 756111		stq	sb|59,x1		" Tlen
aa 000504  600506 236100		ldq	sp|326		" LinkageRelbits
aa 000505  700170 756111		stq	sb|120,x1
aa 000506  001155 272004		tsbbp	L29+2		" CountRelbits
aa 000507  000166 000001		zero	118,1
aa 000510  700007 756111		stq	sb|7,x1		" Llen
aa 000511  000027 236007  76		ldq	23,dl		" RelNegSymbol
aa 000512  000022 736000		qls	18
aa 000513  600531 756100		stq	sp|345		" Reloc
aa 000514  600536 236100  77		ldq	sp|350		" SymbolLength
aa 000515  700170 756111		stq	sb|120,x1
aa 000516  000350 352004		eapbp	L59		" "section header pointer, block size"
aa 000517  700171 542111		sprpbp	sb|121,x1
4a 000520  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 000521  000166 000002		zero	118,2
aa 000522  600536 236100  78		ldq	sp|350		" SymbolLength
aa 000523  700170 756111		stq	sb|120,x1
aa 000524  000332 352004		eapbp	L60		" "next block pointer, rel_text"
aa 000525  700171 542111		sprpbp	sb|121,x1
4a 000526  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 000527  000166 000002		zero	118,2
aa 000530  600536 236100  79		ldq	sp|350		" SymbolLength
aa 000531  700073 076111		adq	sb|59,x1		" Tlen
aa 000532  700170 756111		stq	sb|120,x1
aa 000533  000316 352004		eapbp	L61		" "rel_def, rel_link"
aa 000534  700171 542111		sprpbp	sb|121,x1
4a 000535  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 000536  000166 000002		zero	118,2
aa 000537  600536 236100  80		ldq	sp|350		" SymbolLength
aa 000540  700073 076111		adq	sb|59,x1		" Tlen
aa 000541  700007 076111		adq	sb|7,x1		" Llen
aa 000542  000022 736000		qls	18
aa 000543  600536 276100		orq	sp|350		" SymbolLength
aa 000544  700170 756111		stq	sb|120,x1
aa 000545  000274 352004		eapbp	L62		" "rel_symbol, default truncate"
aa 000546  700171 542111		sprpbp	sb|121,x1
4a 000547  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 000550  000166 000002		zero	118,2
aa 000551  700004 236111  81		ldq	sb|4,x1		" Smap
aa 000552  000022 736000		qls	18
aa 000553  700170 756111		stq	sb|120,x1
aa 000554  000256 352004		eapbp	L63		" "optional truncate, unused"
aa 000555  700171 542111		sprpbp	sb|121,x1
4a 000556  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 000557  000166 000002		zero	118,2
aa 000560  000001 236007  85		ldq	1,dl		" 1
aa 000561  700170 756111		stq	sb|120,x1
aa 000562  000237 352004		eapbp	L64		" "source files map: version number"
aa 000563  700171 542111		sprpbp	sb|121,x1
4a 000564  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 000565  000166 000002		zero	118,2
aa 000566  600201 236100  86		ldq	sp|129		" FileCount
aa 000567  000001 076007		adq	1,dl		" 1
aa 000570  700170 756111		stq	sb|120,x1
aa 000571  000217 352004		eapbp	L65		" "                  number of files"
aa 000572  700171 542111		sprpbp	sb|121,x1
4a 000573  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 000574  000166 000002		zero	118,2
aa 000575  700157 450111  87		stz	sb|111,x1		" i
aa 000576  600201 236100		ldq	sp|129		" FileCount
aa 000577  700160 756111		stq	sb|112,x1
aa 000600  000052 710004		tra	L66
			L67:
aa 000601  700157 236111  88		ldq	sb|111,x1		" i
aa 000602  000002 736000		qls	2
aa 000603  600200 762100		lprpbp	sp|128		" FilesInfo
aa 000604  200000 352106		eapbp	bp|0,ql
aa 000605  700161 542111		sprpbp	sb|113,x1		" Info
aa 000606  700157 723111  89		lxl3	sb|111,x1		" i
aa 000607  700005 762111		lprpbp	sb|5,x1		" w
aa 000610  200000 236113		ldq	bp|0,x3
aa 000611  700170 756111		stq	sb|120,x1
aa 000612  700157 724111		lxl4	sb|111,x1		" i
aa 000613  600177 761100		lprpab	sp|127		" FileNames
aa 000614  100000 236114		ldq	ab|0,x4
aa 000615  700171 756111		stq	sb|121,x1
4a 000616  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 000617  000166 000002		zero	118,2
aa 000620  700161 763111  90		lprpbb	sb|113,x1		" Info
aa 000621  300001 236100		ldq	bb|1
aa 000622  700170 756111		stq	sb|120,x1
aa 000623  000160 371404		eaplb	L68		" "last modified on"
aa 000624  700171 545111		sprplb	sb|121,x1
4a 000625  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 000626  000166 000002		zero	118,2
aa 000627  700161 765111  91		lprplb	sb|113,x1		" Info
aa 000630  500002 371500		eaplb	lb|2
aa 000631  700170 545111		sprplb	sb|120,x1
4a 000632  400022 272120		tsbbp	lp|L69,*		" MakeTimeString
aa 000633  000166 000001		zero	118,1
aa 000634  700162 756111		stq	sb|114,x1
aa 000635  700161 765111		lprplb	sb|113,x1		" Info
aa 000636  500002 236100		ldq	lb|2
aa 000637  700170 756111		stq	sb|120,x1
aa 000640  700162 236111		ldq	sb|114,x1
aa 000641  700171 756111		stq	sb|121,x1
4a 000642  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 000643  000166 000002		zero	118,2
aa 000644  700161 760111  92		lprpap	sb|113,x1		" Info
aa 000645  000003 236100		ldq	ap|3
aa 000646  700170 756111		stq	sb|120,x1
4a 000647  400030 272120		tsbbp	lp|L19,*		" OutW
aa 000650  000166 000001		zero	118,1
aa 000651  700157 054111		aos	sb|111,x1		" i
			L66:
aa 000652  700157 236111		ldq	sb|111,x1		" i
aa 000653  700160 116111		cmpq	sb|112,x1
aa 000654  777725 604404		tmoz	L67
aa 000655  000001 235007  94		lda	1,dl		" 1
aa 000656  700160 755111		sta	sb|112,x1		" i
aa 000657  600307 762100		lprpbp	sp|199		" Strings
aa 000660  200000 235100		lda	bp|0
aa 000661  700157 755111		sta	sb|111,x1
aa 000662  000010 710004		tra	L70
			L71:
aa 000663  700160 725111		lxl5	sb|112,x1		" i
aa 000664  600307 761100		lprpab	sp|199		" Strings
aa 000665  100000 235115		lda	ab|0,x5
aa 000666  700170 755111		sta	sb|120,x1
aa 000667  000416 272004		tsbbp	L27+2		" OutAlignedString
aa 000670  000166 000001		zero	118,1
aa 000671  700160 054111		aos	sb|112,x1		" i
			L70:
aa 000672  700160 235111		lda	sb|112,x1		" i
aa 000673  700157 115111		cmpa	sb|111,x1
aa 000674  777767 604404		tmoz	L71
aa 000675  600150 234100  96		szn	sp|104		" Symbols
aa 000676  000003 601004		tnz	L73
aa 000677  600151 234100		szn	sp|105		" LineMap
aa 000700  000042 600004		tze	L72
			L73:
aa 000701  000074 353404  97		eapbb	L74		" "*fSymbol table block"
aa 000702  700170 543111		sprpbb	sb|120,x1
4a 000703  400026 272120		tsbbp	lp|L35,*		" SectionHeader
aa 000704  000166 000001		zero	118,1
aa 000705  700002 236111  98		ldq	sb|2,x1		" SymL
aa 000706  600520 756100		stq	sp|336		" Param
aa 000707  600151 234100  99		szn	sp|105		" LineMap
aa 000710  000004 600004		tze	L75
aa 000711  600501 236100		ldq	sp|321		" LC
aa 000712  000001 076007		adq	1,dl		" 1
aa 000713  000002 710004		tra	L76
			L75:
aa 000714  000000 236007		ldq	0,dl		" 0
			L76:
aa 000715  700161 756111		stq	sb|113,x1
aa 000716  700161 236111		ldq	sb|113,x1
aa 000717  700157 756111		stq	sb|111,x1
aa 000720  700157 236111		ldq	sb|111,x1
aa 000721  700170 756111		stq	sb|120,x1
aa 000722  000041 353404		eapbb	L77		" "symbol table pointer, line map pointer"
aa 000723  700171 543111		sprpbb	sb|121,x1
4a 000724  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 000725  000166 000002		zero	118,2
aa 000726  600151 234100  101		szn	sp|105		" LineMap
aa 000727  000005 600004		tze	L78
aa 000730  700003 236111		ldq	sb|3,x1		" MapL
aa 000731  700170 756111		stq	sb|120,x1
aa 000732  777140 272004		tsbbp	L2+2		" WriteLineMap
aa 000733  000166 000001		zero	118,1
			L78:
aa 000734  600150 234100  102		szn	sp|104		" Symbols
aa 000735  000005 600004		tze	L79
aa 000736  700002 236111		ldq	sb|2,x1		" SymL
aa 000737  700170 756111		stq	sb|120,x1
aa 000740  777071 272004		tsbbp	L4+2		" WriteSymbolTable
aa 000741  000166 000001		zero	118,1
			L79:
			L72:
aa 000742  600501 236100  105		ldq	sp|321		" LC
aa 000743  600536 116100		cmpq	sp|350		" SymbolLength
aa 000744  000007 600004		tze	L80
aa 000745  000463 235007		lda	307,dl		" PhaseError
aa 000746  700170 755111		sta	sb|120,x1
aa 000747  000010 353404		eapbb	L81		" "WriteSymbol"
aa 000750  700171 543111		sprpbb	sb|121,x1
4a 000751  400020 272120		tsbbp	lp|L82,*		" CGreport
aa 000752  000166 000002		zero	118,2
			L80:
			L33:
aa 000753  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000754  200000 121100		sblx1	bp|0
aa 000755  700001 764111		lprplp	sb|1,x1
aa 000756  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L81:
aa 000757  000013 127162		zero	11,44658		" "WriteSymbol"
aa 000760  151164 145123		zero	53876,51795
aa 000761  171155 142157		zero	62061,50287
aa 000762  154000 000000		zero	55296
			L77:
aa 000763  000046 163171		zero	38,59001		" "symbol table pointer, line map pointer"
aa 000764  155142 157154		zero	55906,56940
aa 000765  040164 141142		zero	16500,49762
aa 000766  154145 040160		zero	55397,16496
aa 000767  157151 156164		zero	56937,56436
aa 000770  145162 054040		zero	51826,22560
aa 000771  154151 156145		zero	55401,56421
aa 000772  040155 141160		zero	16493,49776
aa 000773  040160 157151		zero	16496,56937
aa 000774  156164 145162		zero	56436,51826
			L74:
aa 000775  000023 014123		zero	19,6227		" "*fSymbol table block"
aa 000776  171155 142157		zero	62061,50287
aa 000777  154040 164141		zero	55328,59489
aa 001000  142154 145040		zero	50284,51744
aa 001001  142154 157143		zero	50284,56931
aa 001002  153000 000000		zero	54784
			L68:
aa 001003  000020 154141		zero	16,55393		" "last modified on"
aa 001004  163164 040155		zero	58996,16493
aa 001005  157144 151146		zero	56932,53862
aa 001006  151145 144040		zero	53861,51232
aa 001007  157156 000000		zero	56942
			L65:
aa 001010  000041 040040		zero	33,16416		" "                  number of files"
aa 001011  040040 040040		zero	16416,16416
aa 001012  040040 040040		zero	16416,16416
aa 001013  040040 040040		zero	16416,16416
aa 001014  040040 040040		zero	16416,16416
aa 001015  156165 155142		zero	56437,55906
aa 001016  145162 040157		zero	51826,16495
aa 001017  146040 146151		zero	52256,52329
aa 001020  154145 163000		zero	55397,58880
			L64:
aa 001021  000040 163157		zero	32,58991		" "source files map: version number"
aa 001022  165162 143145		zero	60018,50789
aa 001023  040146 151154		zero	16486,53868
aa 001024  145163 040155		zero	51827,16493
aa 001025  141160 072040		zero	49776,29728
aa 001026  166145 162163		zero	60517,58483
aa 001027  151157 156040		zero	53871,56352
aa 001030  156165 155142		zero	56437,55906
aa 001031  145162 000000		zero	51826
			L63:
aa 001032  000031 157160		zero	25,56944		" "optional truncate, unused"
aa 001033  164151 157156		zero	59497,56942
aa 001034  141154 040164		zero	49772,16500
aa 001035  162165 156143		zero	58485,56419
aa 001036  141164 145054		zero	49780,51756
aa 001037  040165 156165		zero	16501,56437
aa 001040  163145 144000		zero	58981,51200
			L62:
aa 001041  000034 162145		zero	28,58469		" "rel_symbol, default truncate"
aa 001042  154137 163171		zero	55391,59001
aa 001043  155142 157154		zero	55906,56940
aa 001044  054040 144145		zero	22560,51301
aa 001045  146141 165154		zero	52321,60012
aa 001046  164040 164162		zero	59424,59506
aa 001047  165156 143141		zero	60014,50785
aa 001050  164145 000000		zero	59493
			L61:
aa 001051  000021 162145		zero	17,58469		" "rel_def, rel_link"
aa 001052  154137 144145		zero	55391,51301
aa 001053  146054 040162		zero	52268,16498
aa 001054  145154 137154		zero	51820,48748
aa 001055  151156 153000		zero	53870,54784
			L60:
aa 001056  000034 156145		zero	28,56421		" "next block pointer, rel_text"
aa 001057  170164 040142		zero	61556,16482
aa 001060  154157 143153		zero	55407,50795
aa 001061  040160 157151		zero	16496,56937
aa 001062  156164 145162		zero	56436,51826
aa 001063  054040 162145		zero	22560,58469
aa 001064  154137 164145		zero	55391,59493
aa 001065  170164 000000		zero	61556
			L59:
aa 001066  000042 163145		zero	34,58981		" "section header pointer, block size"
aa 001067  143164 151157		zero	50804,53871
aa 001070  156040 150145		zero	56352,53349
aa 001071  141144 145162		zero	49764,51826
aa 001072  040160 157151		zero	16496,56937
aa 001073  156164 145162		zero	56436,51826
aa 001074  054040 142154		zero	22560,50284
aa 001075  157143 153040		zero	56931,54816
aa 001076  163151 172145		zero	58985,62565
			L58:
aa 001077  000034 163157		zero	28,58991		" "source map, symbol tree root"
aa 001100  165162 143145		zero	60018,50789
aa 001101  040155 141160		zero	16493,49776
aa 001102  054040 163171		zero	22560,59001
aa 001103  155142 157154		zero	55906,56940
aa 001104  040164 162145		zero	16500,58469
aa 001105  145040 162157		zero	51744,58479
aa 001106  157164 000000		zero	56948
			L51:
aa 001107  000033 164145		zero	27,59493		" "text and linkage boundaries"
aa 001110  170164 040141		zero	61556,16481
aa 001111  156144 040154		zero	56420,16492
aa 001112  151156 153141		zero	53870,54881
aa 001113  147145 040142		zero	52837,16482
aa 001114  157165 156144		zero	56949,56420
aa 001115  141162 151145		zero	49778,53861
aa 001116  163000 000000		zero	58880
			L50:
aa 001117  000002 000002		zero	2,2
			L49:
aa 001120  000040 143157		zero	32,50799		" "comment string - pointer, length"
aa 001121  155155 145156		zero	55917,51822
aa 001122  164040 163164		zero	59424,58996
aa 001123  162151 156147		zero	58473,56423
aa 001124  040055 040160		zero	16429,16496
aa 001125  157151 156164		zero	56937,56436
aa 001126  145162 054040		zero	51826,22560
aa 001127  154145 156147		zero	55397,56423
aa 001130  164150 000000		zero	59496
			L48:
aa 001131  000031 165163		zero	25,60019		" "user id - pointer, length"
aa 001132  145162 040151		zero	51826,16489
aa 001133  144040 055040		zero	51232,23072
aa 001134  160157 151156		zero	57455,53870
aa 001135  164145 162054		zero	59493,58412
aa 001136  040154 145156		zero	16492,51822
aa 001137  147164 150000		zero	52852,53248
			L47:
aa 001140  000047 143157		zero	39,50799		" "compiler version name - pointer, length"
aa 001141  155160 151154		zero	55920,53868
aa 001142  145162 040166		zero	51826,16502
aa 001143  145162 163151		zero	51826,58985
aa 001144  157156 040156		zero	56942,16494
aa 001145  141155 145040		zero	49773,51744
aa 001146  055040 160157		zero	23072,57455
aa 001147  151156 164145		zero	53870,59493
aa 001150  162054 040154		zero	58412,16492
aa 001151  145156 147164		zero	51822,52852
aa 001152  150000 000000		zero	53248
			L46:
aa 001153  000010 142143		zero	8,50275		" "bcpl    "
aa 001154  160154 040040		zero	57452,16416
aa 001155  040040 000000		zero	16416
			L45:
aa 001156  000030 164151		zero	24,59497		" "time of this compilation"
aa 001157  155145 040157		zero	55909,16495
aa 001160  146040 164150		zero	52256,59496
aa 001161  151163 040143		zero	53875,16483
aa 001162  157155 160151		zero	56941,57449
aa 001163  154141 164151		zero	55393,59497
aa 001164  157156 000000		zero	56942
			L44:
aa 001165  000033 144141		zero	27,51297		" "date/time compiler modified"
aa 001166  164145 057164		zero	59493,24180
aa 001167  151155 145040		zero	53869,51744
aa 001170  143157 155160		zero	50799,55920
aa 001171  151154 145162		zero	53868,51826
aa 001172  040155 157144		zero	16493,56932
aa 001173  151146 151145		zero	53862,53861
aa 001174  144000 000000		zero	51200
			L43:
aa 001175  000027 143157		zero	23,50799		" "compiler version number"
aa 001176  155160 151154		zero	55920,53868
aa 001177  145162 040166		zero	51826,16502
aa 001200  145162 163151		zero	51826,58985
aa 001201  157156 040156		zero	56942,16494
aa 001202  165155 142145		zero	60013,50277
aa 001203  162000 000000		zero	58368
			L42:
aa 001204  000010 163171		zero	8,59001		" "symbtree"
aa 001205  155142 164162		zero	55906,59506
aa 001206  145145 000000		zero	51813
			L41:
aa 001207  000042 166145		zero	34,60517		" "version number of header structure"
aa 001210  162163 151157		zero	58483,53871
aa 001211  156040 156165		zero	56352,56437
aa 001212  155142 145162		zero	55906,51826
aa 001213  040157 146040		zero	16495,52256
aa 001214  150145 141144		zero	53349,49764
aa 001215  145162 040163		zero	51826,16499
aa 001216  164162 165143		zero	59506,60003
aa 001217  164165 162145		zero	59509,58469
			L34:
aa 001220  000026 014123		zero	22,6227		" "*fSymbol section header"
aa 001221  171155 142157		zero	62061,50287
aa 001222  154040 163145		zero	55328,58981
aa 001223  143164 151157		zero	50804,53871
aa 001224  156040 150145		zero	56352,53349
aa 001225  141144 145162		zero	49764,51826
	"	Begin text of RemoteString

aa 001226  000014 122145		zero	12,42085		" RemoteString
aa 001227  155157 164145		zero	55919,59493
aa 001230  123164 162151		zero	42612,58473
aa 001231  156147 000000		zero	56423
			L26:
aa 001232  000000 213000  108		epaq	0		" set lp to linkage section
aa 001233  700026 764161		lprplp	sb|22,*au
aa 001234  200000 021100		adlx1	bp|0		" BCPL save
aa 001235  700000 542111		sprpbp	sb|0,x1
aa 001236  700001 544111		sprplp	sb|1,x1
aa 001237  700422 620111		eax0	sb|274,x1
aa 001240  777760 360003		anx0	-16,du
aa 001241  700025 740100		stx0	sb|21		" end of save sequence

aa 001242  700002 235111  109		lda	sb|2,x1		" s
aa 001243  700012 755111		sta	sb|10,x1
4a 001244  400016 272120		tsbbp	lp|L86,*		" Length
aa 001245  000010 000001		zero	8,1
aa 001246  700004 756111		stq	sb|4,x1		" l
aa 001247  600536 236100  110		ldq	sp|350		" SymbolLength
aa 001250  000022 736000		qls	18
aa 001251  700004 276111		orq	sb|4,x1		" l
aa 001252  700005 756111		stq	sb|5,x1		" r
aa 001253  700004 236111  111		ldq	sb|4,x1		" l
aa 001254  000003 076007		adq	3,dl		" 3
aa 001255  000004 506007		div	4,dl		" 4
aa 001256  600536 056100		asq	sp|350		" SymbolLength
aa 001257  600307 763100  112		lprpbb	sp|199		" Strings
aa 001260  300000 054100		aos	bb|0
aa 001261  700002 236111  113		ldq	sb|2,x1		" s
aa 001262  600307 765100		lprplb	sp|199		" Strings
aa 001263  500000 726100		lxl6	lb|0
aa 001264  600307 760100		lprpap	sp|199		" Strings
aa 001265  000000 756116		stq	ap|0,x6
aa 001266  700005 236111  114		ldq	sb|5,x1		" r
			L85:
aa 001267  700004 756111		stq	sb|4,x1
aa 001270  700004 236111		ldq	sb|4,x1
aa 001271  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001272  200000 121100		sblx1	bp|0
aa 001273  700001 764111		lprplp	sb|1,x1
aa 001274  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of OutAlignedString

aa 001275  000020 117165		zero	16,40565		" OutAlignedString
aa 001276  164101 154151		zero	59457,55401
aa 001277  147156 145144		zero	52846,51812
aa 001300  123164 162151		zero	42612,58473
aa 001301  156147 000000		zero	56423
aa 001302  700003 756111  116		stq	sb|3,x1		" temporary
			L27:
aa 001303  000000 213000		epaq	0		" set lp to linkage section
aa 001304  700026 764161		lprplp	sb|22,*au
aa 001305  200000 021100		adlx1	bp|0		" BCPL save
aa 001306  700000 542111		sprpbp	sb|0,x1
aa 001307  700001 544111		sprplp	sb|1,x1
aa 001310  701052 620111		eax0	sb|554,x1
aa 001311  777760 360003		anx0	-16,du
aa 001312  700025 740100		stx0	sb|21		" end of save sequence

aa 001313  700004 352111  117		eapbp	sb|4,x1		" a vector
aa 001314  700003 542111		sprpbp	sb|3,x1		" v
aa 001315  700003 236111  118		ldq	sb|3,x1		" v
aa 001316  701026 756111		stq	sb|534,x1
aa 001317  000777 236007		ldq	511,dl		" Vmax
aa 001320  701027 756111		stq	sb|535,x1
aa 001321  000114 352004		eapbp	L90		" "*""
aa 001322  701030 542111		sprpbp	sb|536,x1
aa 001323  700002 236111		ldq	sb|2,x1		" s
aa 001324  701031 756111		stq	sb|537,x1
aa 001325  000110 352004		eapbp	L90		" "*""
aa 001326  701032 542111		sprpbp	sb|538,x1
4a 001327  400014 272120		tsbbp	lp|L91,*		" Concatenate
aa 001330  001024 000005		zero	532,5
aa 001331  700003 236111  119		ldq	sb|3,x1		" v
aa 001332  701026 756111		stq	sb|534,x1
4a 001333  400012 272120		tsbbp	lp|L92,*		" StoreString
aa 001334  001024 000001		zero	532,1
aa 001335  600464 756100		stq	sp|308		" Comment
aa 001336  700002 236111  120		ldq	sb|2,x1		" s
aa 001337  701026 756111		stq	sb|534,x1
aa 001340  700003 236111		ldq	sb|3,x1		" v
aa 001341  701027 756111		stq	sb|535,x1
4a 001342  400010 272120		tsbbp	lp|L93,*		" Unpackstring
aa 001343  001024 000002		zero	532,2
aa 001344  700003 762111  121		lprpbp	sb|3,x1		" v
aa 001345  200000 236100		ldq	bp|0
aa 001346  701004 756111		stq	sb|516,x1		" Len
aa 001347  701004 236111  122		ldq	sb|516,x1		" Len
aa 001350  000003 076007		adq	3,dl		" 3
aa 001351  000040 235007		lda	32,dl		" '*s'
aa 001352  700003 761111		lprpab	sb|3,x1		" v
aa 001353  100000 755106		sta	ab|0,ql
aa 001354  701004 236111		ldq	sb|516,x1		" Len
aa 001355  000002 076007		adq	2,dl		" 2
aa 001356  000040 235007		lda	32,dl		" '*s'
aa 001357  700003 763111		lprpbb	sb|3,x1		" v
aa 001360  300000 755106		sta	bb|0,ql
aa 001361  701004 236111		ldq	sb|516,x1		" Len
aa 001362  000001 076007		adq	1,dl		" 1
aa 001363  000040 235007		lda	32,dl		" '*s'
aa 001364  700003 765111		lprplb	sb|3,x1		" v
aa 001365  500000 755106		sta	lb|0,ql
aa 001366  000001 236007  123		ldq	1,dl		" 1
aa 001367  701005 756111		stq	sb|517,x1		" i
aa 001370  701004 236111		ldq	sb|516,x1		" Len
aa 001371  701006 756111		stq	sb|518,x1
aa 001372  000034 710004		tra	L94
			L95:
aa 001373  701005 722111		lxl2	sb|517,x1		" i
aa 001374  700003 760111		lprpap	sb|3,x1		" v
aa 001375  000000 236112		ldq	ap|0,x2
aa 001376  000033 736000		qls	27
aa 001377  701005 235111		lda	sb|517,x1		" i
aa 001400  000001 075007		ada	1,dl		" 1
aa 001401  701012 756111		stq	sb|522,x1		" temporary
aa 001402  700003 762111		lprpbp	sb|3,x1		" v
aa 001403  200000 236105		ldq	bp|0,al
aa 001404  000022 736000		qls	18
aa 001405  701012 276111		orq	sb|522,x1
aa 001406  701005 235111		lda	sb|517,x1		" i
aa 001407  000002 075007		ada	2,dl		" 2
aa 001410  701011 756111		stq	sb|521,x1		" temporary
aa 001411  700003 761111		lprpab	sb|3,x1		" v
aa 001412  100000 236105		ldq	ab|0,al
aa 001413  000011 736000		qls	9
aa 001414  701011 276111		orq	sb|521,x1
aa 001415  701005 235111		lda	sb|517,x1		" i
aa 001416  000003 075007		ada	3,dl		" 3
aa 001417  700003 763111		lprpbb	sb|3,x1		" v
aa 001420  300000 276105		orq	bb|0,al
aa 001421  701026 756111		stq	sb|534,x1
4a 001422  400030 272120		tsbbp	lp|L19,*		" OutW
aa 001423  001024 000001		zero	532,1
aa 001424  000004 236007		ldq	4,dl		" 4
aa 001425  701005 056111		asq	sb|517,x1		" i
			L94:
aa 001426  701005 236111		ldq	sb|517,x1		" i
aa 001427  701006 116111		cmpq	sb|518,x1
aa 001430  777743 604404		tmoz	L95
			L89:
aa 001431  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001432  200000 121100		sblx1	bp|0
aa 001433  700001 764111		lprplp	sb|1,x1
aa 001434  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L90:
aa 001435  000001 042000		zero	1,17408		" "*""
	"	Begin text of OutRel

aa 001436  000006 117165		zero	6,40565		" OutRel
aa 001437  164122 145154		zero	59474,51820
			L28:
aa 001440  000000 213000  126		epaq	0		" set lp to linkage section
aa 001441  700026 764161		lprplp	sb|22,*au
aa 001442  200000 021100		adlx1	bp|0		" BCPL save
aa 001443  700000 542111		sprpbp	sb|0,x1
aa 001444  700001 544111		sprplp	sb|1,x1
aa 001445  700423 620111		eax0	sb|275,x1
aa 001446  777760 360003		anx0	-16,du
aa 001447  700025 740100		stx0	sb|21		" end of save sequence

aa 001450  700002 234111  127		szn	sb|2,x1		" p
aa 001451  000040 600004		tze	L98
aa 001452  700003 235111  128		lda	sb|3,x1		" c
aa 001453  700010 755111		sta	sb|8,x1
4a 001454  400026 272120		tsbbp	lp|L35,*		" SectionHeader
aa 001455  000006 000001		zero	6,1
aa 001456  000002 235007  129		lda	2,dl		" 2
aa 001457  700010 755111		sta	sb|8,x1
aa 001460  000041 371404		eaplb	L99		" "version number of rel-bits structure"
aa 001461  700011 545111		sprplb	sb|9,x1
4a 001462  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 001463  000006 000002		zero	6,2
aa 001464  700002 765111  130		lprplb	sb|2,x1		" p
aa 001465  500000 235100		lda	lb|0
aa 001466  700010 755111		sta	sb|8,x1
aa 001467  000026 350004		eapap	L100		" "length in bits"
aa 001470  700011 540111		sprpap	sb|9,x1
4a 001471  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 001472  000006 000002		zero	6,2
aa 001473  700002 760111  131		lprpap	sb|2,x1		" p
aa 001474  000001 235100		lda	ap|1
aa 001475  700002 755111		sta	sb|2,x1		" p
aa 001476  000011 710004  132		tra	L101
			L102:
aa 001477  700002 762111  133		lprpbp	sb|2,x1		" p
aa 001500  200000 235100		lda	bp|0
aa 001501  700010 755111		sta	sb|8,x1
4a 001502  400030 272120		tsbbp	lp|L19,*		" OutW
aa 001503  000006 000001		zero	6,1
aa 001504  700002 761111  134		lprpab	sb|2,x1		" p
aa 001505  100001 235100		lda	ab|1
aa 001506  700002 755111		sta	sb|2,x1		" p
			L101:
aa 001507  700002 234111		szn	sb|2,x1		" p
aa 001510  777767 601004		tnz	L102
			L98:
aa 001511  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001512  200000 121100		sblx1	bp|0
aa 001513  700001 764111		lprplp	sb|1,x1
aa 001514  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L100:
aa 001515  000016 154145		zero	14,55397		" "length in bits"
aa 001516  156147 164150		zero	56423,59496
aa 001517  040151 156040		zero	16489,56352
aa 001520  142151 164163		zero	50281,59507
			L99:
aa 001521  000044 166145		zero	36,60517		" "version number of rel-bits structure"
aa 001522  162163 151157		zero	58483,53871
aa 001523  156040 156165		zero	56352,56437
aa 001524  155142 145162		zero	55906,51826
aa 001525  040157 146040		zero	16495,52256
aa 001526  162145 154055		zero	58469,55341
aa 001527  142151 164163		zero	50281,59507
aa 001530  040163 164162		zero	16499,59506
aa 001531  165143 164165		zero	60003,59509
aa 001532  162145 000000		zero	58469
	"	Begin text of WriteRelBits

aa 001533  000014 127162		zero	12,44658		" WriteRelBits
aa 001534  151164 145122		zero	53876,51794
aa 001535  145154 102151		zero	51820,33897
aa 001536  164163 000000		zero	59507
			L30:
aa 001537  000000 213000  143		epaq	0		" set lp to linkage section
aa 001540  700026 764161		lprplp	sb|22,*au
aa 001541  200000 021100		adlx1	bp|0		" BCPL save
aa 001542  700000 542111		sprpbp	sb|0,x1
aa 001543  700001 544111		sprplp	sb|1,x1
aa 001544  700423 620111		eax0	sb|275,x1
aa 001545  777760 360003		anx0	-16,du
aa 001546  700025 740100		stx0	sb|21		" end of save sequence

aa 001547  000077 353404  144		eapbb	L106		" "*fRelocation information"
aa 001550  700004 543111		sprpbb	sb|4,x1
4a 001551  400026 272120		tsbbp	lp|L35,*		" SectionHeader
aa 001552  000002 000001		zero	2,1
aa 001553  600546 235100  145		lda	sp|358		" TextRelbits
aa 001554  700004 755111		sta	sb|4,x1
aa 001555  000061 353404		eapbb	L107		" "*ntext section relocation bits"
aa 001556  700005 543111		sprpbb	sb|5,x1
aa 001557  777663 272004		tsbbp	L28+2		" OutRel
aa 001560  000002 000002		zero	2,2
aa 001561  600470 235100  146		lda	sp|312		" DefsRelbits
aa 001562  700004 755111		sta	sb|4,x1
aa 001563  000041 353404		eapbb	L108		" "*ndefinitions section relocation bits"
aa 001564  700005 543111		sprpbb	sb|5,x1
aa 001565  777655 272004		tsbbp	L28+2		" OutRel
aa 001566  000002 000002		zero	2,2
aa 001567  600506 235100  147		lda	sp|326		" LinkageRelbits
aa 001570  700004 755111		sta	sb|4,x1
aa 001571  000024 353404		eapbb	L109		" "linkage relocation bits"
aa 001572  700005 543111		sprpbb	sb|5,x1
aa 001573  777647 272004		tsbbp	L28+2		" OutRel
aa 001574  000002 000002		zero	2,2
aa 001575  600537 235100  148		lda	sp|351		" SymbolRelbits
aa 001576  700004 755111		sta	sb|4,x1
aa 001577  000010 353404		eapbb	L110		" "symbol relocation bits"
aa 001600  700005 543111		sprpbb	sb|5,x1
aa 001601  777641 272004		tsbbp	L28+2		" OutRel
aa 001602  000002 000002		zero	2,2
			L105:
aa 001603  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001604  200000 121100		sblx1	bp|0
aa 001605  700001 764111		lprplp	sb|1,x1
aa 001606  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L110:
aa 001607  000026 163171		zero	22,59001		" "symbol relocation bits"
aa 001610  155142 157154		zero	55906,56940
aa 001611  040162 145154		zero	16498,51820
aa 001612  157143 141164		zero	56931,49780
aa 001613  151157 156040		zero	53871,56352
aa 001614  142151 164163		zero	50281,59507
			L109:
aa 001615  000027 154151		zero	23,55401		" "linkage relocation bits"
aa 001616  156153 141147		zero	56427,49767
aa 001617  145040 162145		zero	51744,58469
aa 001620  154157 143141		zero	55407,50785
aa 001621  164151 157156		zero	59497,56942
aa 001622  040142 151164		zero	16482,53876
aa 001623  163000 000000		zero	58880
			L108:
aa 001624  000044 012144		zero	36,5220		" "*ndefinitions section relocation bits"
aa 001625  145146 151156		zero	51814,53870
aa 001626  151164 151157		zero	53876,53871
aa 001627  156163 040163		zero	56435,16499
aa 001630  145143 164151		zero	51811,59497
aa 001631  157156 040162		zero	56942,16498
aa 001632  145154 157143		zero	51820,56931
aa 001633  141164 151157		zero	49780,53871
aa 001634  156040 142151		zero	56352,50281
aa 001635  164163 000000		zero	59507
			L107:
aa 001636  000035 012164		zero	29,5236		" "*ntext section relocation bits"
aa 001637  145170 164040		zero	51832,59424
aa 001640  163145 143164		zero	58981,50804
aa 001641  151157 156040		zero	53871,56352
aa 001642  162145 154157		zero	58469,55407
aa 001643  143141 164151		zero	50785,59497
aa 001644  157156 040142		zero	56942,16482
aa 001645  151164 163000		zero	53876,58880
			L106:
aa 001646  000027 014122		zero	23,6226		" "*fRelocation information"
aa 001647  145154 157143		zero	51820,56931
aa 001650  141164 151157		zero	49780,53871
aa 001651  156040 151156		zero	56352,53870
aa 001652  146157 162155		zero	52335,58477
aa 001653  141164 151157		zero	49780,53871
aa 001654  156000 000000		zero	56320
	"	Begin text of CountRelbits

aa 001655  000014 103157		zero	12,34415		" CountRelbits
aa 001656  165156 164122		zero	60014,59474
aa 001657  145154 142151		zero	51820,50281
aa 001660  164163 000000		zero	59507
			L29:
aa 001661  000000 213000  137		epaq	0		" set lp to linkage section
aa 001662  700026 764161		lprplp	sb|22,*au
aa 001663  200000 021100		adlx1	bp|0		" BCPL save
aa 001664  700000 542111		sprpbp	sb|0,x1
aa 001665  700001 544111		sprplp	sb|1,x1
aa 001666  700417 620111		eax0	sb|271,x1
aa 001667  777760 360003		anx0	-16,du
aa 001670  700025 740100		stx0	sb|21		" end of save sequence

aa 001671  700002 234111  138		szn	sb|2,x1		" p
aa 001672  000003 601004		tnz	L114
aa 001673  000000 235007		lda	0,dl		" 0
aa 001674  000013 710004		tra	L113
			L114:
aa 001675  700004 450111  139		stz	sb|4,x1		" n
			L115:
aa 001676  700004 054111  140		aos	sb|4,x1		" n
aa 001677  700002 763111		lprpbb	sb|2,x1		" p
aa 001700  300001 236100		ldq	bb|1
aa 001701  700002 756111		stq	sb|2,x1		" p
aa 001702  700002 234111		szn	sb|2,x1		" p
aa 001703  777773 601004		tnz	L115
aa 001704  700004 236111  141		ldq	sb|4,x1		" n
aa 001705  000001 076007		adq	1,dl		" 1
aa 001706  000044 777000		llr	36		" exchange A and Q
			L113:
aa 001707  700004 755111		sta	sb|4,x1
aa 001710  700004 235111		lda	sb|4,x1
aa 001711  000044 777000		llr	36		" exchange A and Q
aa 001712  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001713  200000 121100		sblx1	bp|0
aa 001714  700001 764111		lprplp	sb|1,x1
aa 001715  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of WriteObjectMap

aa 001716  000016 127162		zero	14,44658		" WriteObjectMap
aa 001717  151164 145117		zero	53876,51791
aa 001720  142152 145143		zero	50282,51811
aa 001721  164115 141160		zero	59469,49776
aa 001722  700003 756111  151		stq	sb|3,x1		" temporary
			L116:
aa 001723  000000 213000		epaq	0		" set lp to linkage section
aa 001724  700026 764161		lprplp	sb|22,*au
aa 001725  200000 021100		adlx1	bp|0		" BCPL save
aa 001726  700000 542111		sprpbp	sb|0,x1
aa 001727  700001 544111		sprplp	sb|1,x1
aa 001730  700423 620111		eax0	sb|275,x1
aa 001731  777760 360003		anx0	-16,du
aa 001732  700025 740100		stx0	sb|21		" end of save sequence

aa 001733  000241 371404  152		eaplb	L120		" "*fObject map"
aa 001734  700014 545111		sprplb	sb|12,x1
4a 001735  400026 272120		tsbbp	lp|L35,*		" SectionHeader
aa 001736  000012 000001		zero	10,1
aa 001737  600505 236100  153		ldq	sp|325		" LinkageLength
aa 001740  000001 076007		adq	1,dl		" 1
aa 001741  000232 376004		anq	L121		" Even
aa 001742  700004 756111		stq	sb|4,x1		" l
aa 001743  600467 236100		ldq	sp|311		" DefsLength
aa 001744  000001 076007		adq	1,dl		" 1
aa 001745  000226 376004		anq	L121		" Even
aa 001746  700005 756111		stq	sb|5,x1		" d
aa 001747  600545 236100		ldq	sp|357		" TextLength
aa 001750  000001 076007		adq	1,dl		" 1
aa 001751  000222 376004		anq	L121		" Even
aa 001752  700003 756111		stq	sb|3,x1		" t
aa 001753  700003 236111  154		ldq	sb|3,x1		" t
aa 001754  700005 076111		adq	sb|5,x1		" d
aa 001755  700004 076111		adq	sb|4,x1		" l
aa 001756  600536 076100		adq	sp|350		" SymbolLength
aa 001757  700002 116111		cmpq	sb|2,x1		" AbsLC
aa 001760  000007 600004		tze	L122
aa 001761  000463 236007		ldq	307,dl		" PhaseError
aa 001762  700014 756111		stq	sb|12,x1
aa 001763  000204 371404		eaplb	L123		" "WriteObjectMap"
aa 001764  700015 545111		sprplb	sb|13,x1
4a 001765  400020 272120		tsbbp	lp|L82,*		" CGreport
aa 001766  000012 000002		zero	10,2
			L122:
aa 001767  000001 236007  155		ldq	1,dl		" 1
aa 001770  700014 756111		stq	sb|12,x1
aa 001771  000164 371404		eaplb	L124		" "version number of object_map structure"
aa 001772  700015 545111		sprplb	sb|13,x1
4a 001773  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 001774  000012 000002		zero	10,2
aa 001775  000155 371404  156		eaplb	L125		" "obj_map "
aa 001776  700014 545111		sprplb	sb|12,x1
aa 001777  777306 272004		tsbbp	L27+2		" OutAlignedString
aa 002000  000012 000001		zero	10,1
aa 002001  600545 236100  157		ldq	sp|357		" TextLength
aa 002002  700014 756111		stq	sb|12,x1
aa 002003  000141 371404		eaplb	L126		" "text offset, length"
aa 002004  700015 545111		sprplb	sb|13,x1
4a 002005  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 002006  000012 000002		zero	10,2
aa 002007  700003 236111  158		ldq	sb|3,x1		" t
aa 002010  000022 736000		qls	18
aa 002011  600467 276100		orq	sp|311		" DefsLength
aa 002012  700014 756111		stq	sb|12,x1
aa 002013  000124 371404		eaplb	L127		" "def offset, length"
aa 002014  700015 545111		sprplb	sb|13,x1
4a 002015  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 002016  000012 000002		zero	10,2
aa 002017  700003 236111  159		ldq	sb|3,x1		" t
aa 002020  700005 076111		adq	sb|5,x1		" d
aa 002021  000022 736000		qls	18
aa 002022  600505 276100		orq	sp|325		" LinkageLength
aa 002023  700014 756111		stq	sb|12,x1
aa 002024  000105 371404		eaplb	L128		" "link offset, length"
aa 002025  700015 545111		sprplb	sb|13,x1
4a 002026  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 002027  000012 000002		zero	10,2
aa 002030  700003 236111  160		ldq	sb|3,x1		" t
aa 002031  700005 076111		adq	sb|5,x1		" d
aa 002032  700004 076111		adq	sb|4,x1		" l
aa 002033  000022 736000		qls	18
aa 002034  600536 276100		orq	sp|350		" SymbolLength
aa 002035  700014 756111		stq	sb|12,x1
aa 002036  000065 371404		eaplb	L129		" "symbol offset, length"
aa 002037  700015 545111		sprplb	sb|13,x1
4a 002040  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 002041  000012 000002		zero	10,2
aa 002042  700014 450111  161		stz	sb|12,x1
aa 002043  000051 371404		eaplb	L130		" "break map offset, length"
aa 002044  700015 545111		sprplb	sb|13,x1
4a 002045  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 002046  000012 000002		zero	10,2
aa 002047  340000 236003  162		ldq	114688,du
aa 002050  700014 756111		stq	sb|12,x1
aa 002051  000026 371404		eaplb	L131		" "flags: ^bound, relocatable, procedure, standard"
aa 002052  700015 545111		sprplb	sb|13,x1
4a 002053  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 002054  000012 000002		zero	10,2
aa 002055  700002 236111  163		ldq	sb|2,x1		" AbsLC
aa 002056  000022 736000		qls	18
aa 002057  700014 756111		stq	sb|12,x1
aa 002060  000010 371404		eaplb	L132		" "object map pointer, unused"
aa 002061  700015 545111		sprplb	sb|13,x1
4a 002062  400032 272120		tsbbp	lp|L12,*		" OutW2
aa 002063  000012 000002		zero	10,2
			L119:
aa 002064  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002065  200000 121100		sblx1	bp|0
aa 002066  700001 764111		lprplp	sb|1,x1
aa 002067  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L132:
aa 002070  000032 157142		zero	26,56930		" "object map pointer, unused"
aa 002071  152145 143164		zero	54373,50804
aa 002072  040155 141160		zero	16493,49776
aa 002073  040160 157151		zero	16496,56937
aa 002074  156164 145162		zero	56436,51826
aa 002075  054040 165156		zero	22560,60014
aa 002076  165163 145144		zero	60019,51812
			L131:
aa 002077  000057 146154		zero	47,52332		" "flags: ^bound, relocatable, procedure, standard"
aa 002100  141147 163072		zero	49767,58938
aa 002101  040136 142157		zero	16478,50287
aa 002102  165156 144054		zero	60014,51244
aa 002103  040162 145154		zero	16498,51820
aa 002104  157143 141164		zero	56931,49780
aa 002105  141142 154145		zero	49762,55397
aa 002106  054040 160162		zero	22560,57458
aa 002107  157143 145144		zero	56931,51812
aa 002110  165162 145054		zero	60018,51756
aa 002111  040163 164141		zero	16499,59489
aa 002112  156144 141162		zero	56420,49778
aa 002113  144000 000000		zero	51200
			L130:
aa 002114  000030 142162		zero	24,50290		" "break map offset, length"
aa 002115  145141 153040		zero	51809,54816
aa 002116  155141 160040		zero	55905,57376
aa 002117  157146 146163		zero	56934,52339
aa 002120  145164 054040		zero	51828,22560
aa 002121  154145 156147		zero	55397,56423
aa 002122  164150 000000		zero	59496
			L129:
aa 002123  000025 163171		zero	21,59001		" "symbol offset, length"
aa 002124  155142 157154		zero	55906,56940
aa 002125  040157 146146		zero	16495,52326
aa 002126  163145 164054		zero	58981,59436
aa 002127  040154 145156		zero	16492,51822
aa 002130  147164 150000		zero	52852,53248
			L128:
aa 002131  000023 154151		zero	19,55401		" "link offset, length"
aa 002132  156153 040157		zero	56427,16495
aa 002133  146146 163145		zero	52326,58981
aa 002134  164054 040154		zero	59436,16492
aa 002135  145156 147164		zero	51822,52852
aa 002136  150000 000000		zero	53248
			L127:
aa 002137  000022 144145		zero	18,51301		" "def offset, length"
aa 002140  146040 157146		zero	52256,56934
aa 002141  146163 145164		zero	52339,51828
aa 002142  054040 154145		zero	22560,55397
aa 002143  156147 164150		zero	56423,59496
			L126:
aa 002144  000023 164145		zero	19,59493		" "text offset, length"
aa 002145  170164 040157		zero	61556,16495
aa 002146  146146 163145		zero	52326,58981
aa 002147  164054 040154		zero	59436,16492
aa 002150  145156 147164		zero	51822,52852
aa 002151  150000 000000		zero	53248
			L125:
aa 002152  000010 157142		zero	8,56930		" "obj_map "
aa 002153  152137 155141		zero	54367,55905
aa 002154  160040 000000		zero	57376
			L124:
aa 002155  000046 166145		zero	38,60517		" "version number of object_map structure"
aa 002156  162163 151157		zero	58483,53871
aa 002157  156040 156165		zero	56352,56437
aa 002160  155142 145162		zero	55906,51826
aa 002161  040157 146040		zero	16495,52256
aa 002162  157142 152145		zero	56930,54373
aa 002163  143164 137155		zero	50804,48749
aa 002164  141160 040163		zero	49776,16499
aa 002165  164162 165143		zero	59506,60003
aa 002166  164165 162145		zero	59509,58469
			L123:
aa 002167  000016 127162		zero	14,44658		" "WriteObjectMap"
aa 002170  151164 145117		zero	53876,51791
aa 002171  142152 145143		zero	50282,51811
aa 002172  164115 141160		zero	59469,49776
			L121:
aa 002173  777777 777776		zero	-1,-2		" Even
			L120:
aa 002174  000013 014117		zero	11,6223		" "*fObject map"
aa 002175  142152 145143		zero	50282,51811
aa 002176  164040 155141		zero	59424,55905
aa 002177  160000 000000		zero	57344
	"	Definition section part one - external entry points

5a 000000  000025 000000		" pointer to first definition
aa 000001  000000 600000		" flags: new format, ignore header
aa 000002  000000 000000		" list terminator

aa 000003  010142 143160		" "bcpl_cg8"
aa 000004  154137 143147
aa 000005  070000 000000
aa 000006  016127 162151		" "WriteObjectMap"
aa 000007  164145 117142
aa 000010  152145 143164
aa 000011  115141 160000
aa 000012  014127 162151		" "WriteRelBits"
aa 000013  164145 122145
aa 000014  154102 151164
aa 000015  163000 000000
aa 000016  013127 162151		" "WriteSymbol"
aa 000017  164145 123171
aa 000020  155142 157154
aa 000021  014163 171155		" "symbol_table"
aa 000022  142157 154137
aa 000023  164141 142154
aa 000024  145000 000000

	"	Segname definition for bcpl_cg8

55 000025  000030 000002		" forward, backward threads
5a 000026  000002 400003		" value defined, class flags
55 000027  000003 000030		" name pointer, first entry def

	"	Definition for WriteObjectMap

55 000030  000033 000025		" forward, backward threads
0a 000031  001723 500000		" value defined, class flags
55 000032  000006 000025		" name pointer, segname def pointer

	"	Definition for WriteRelBits

55 000033  000036 000030		" forward, backward threads
0a 000034  001537 500000		" value defined, class flags
55 000035  000012 000025		" name pointer, segname def pointer

	"	Definition for WriteSymbol

55 000036  000041 000033		" forward, backward threads
0a 000037  000216 500000		" value defined, class flags
55 000040  000016 000025		" name pointer, segname def pointer

	"	Definition for symbol_table

55 000041  000002 000036		" forward, backward threads
6a 000042  000000 400002		" value defined, class flags
55 000043  000021 000025		" name pointer, segname def pointer
	"	Definition section part two - symbolic info for external references

aa 000044  022142 143160		" "bcpl_machine_code_"
aa 000045  154137 155141
aa 000046  143150 151156
aa 000047  145137 143157
aa 000050  144145 137000
aa 000051  014125 156160		" "Unpackstring"
aa 000052  141143 153163
aa 000053  164162 151156
aa 000054  147000 000000
5a 000055  000056 000000
aa 000056  000004 000000
55 000057  000044 000051
aa 000060  014142 143160		" "bcpl_utility"
aa 000061  154137 165164
aa 000062  151154 151164
aa 000063  171000 000000
aa 000064  013123 164157		" "StoreString"
aa 000065  162145 123164
aa 000066  162151 156147
5a 000067  000070 000000
aa 000070  000004 000000
55 000071  000060 000064
aa 000072  015142 143160		" "bcpl_strings_"
aa 000073  154137 163164
aa 000074  162151 156147
aa 000075  163137 000000
aa 000076  013103 157156		" "Concatenate"
aa 000077  143141 164145
aa 000100  156141 164145
5a 000101  000102 000000
aa 000102  000004 000000
55 000103  000072 000076
aa 000104  006114 145156		" "Length"
aa 000105  147164 150000
5a 000106  000107 000000
aa 000107  000004 000000
55 000110  000072 000104
aa 000111  013142 143160		" "bcpl_report"
aa 000112  154137 162145
aa 000113  160157 162164
aa 000114  010103 107162		" "CGreport"
aa 000115  145160 157162
aa 000116  164000 000000
5a 000117  000120 000000
aa 000120  000004 000000
55 000121  000111 000114
aa 000122  016115 141153		" "MakeTimeString"
aa 000123  145124 151155
aa 000124  145123 164162
aa 000125  151156 147000
5a 000126  000127 000000
aa 000127  000004 000000
55 000130  000060 000122
aa 000131  011116 145170		" "Nextparam"
aa 000132  164160 141162
aa 000133  141155 000000
5a 000134  000135 000000
aa 000135  000004 000000
55 000136  000060 000131
aa 000137  010142 143160		" "bcpl_cg5"
aa 000140  154137 143147
aa 000141  065000 000000
aa 000142  015123 145143		" "SectionHeader"
aa 000143  164151 157156
aa 000144  110145 141144
aa 000145  145162 000000
5a 000146  000147 000000
aa 000147  000004 000000
55 000150  000137 000142
aa 000151  004117 165164		" "OutW"
aa 000152  127000 000000
5a 000153  000154 000000
aa 000154  000004 000000
55 000155  000137 000151
aa 000156  005117 165164		" "OutW2"
aa 000157  127062 000000
5a 000160  000161 000000
aa 000161  000004 000000
55 000162  000137 000156
aa 000163  010142 143160		" "bcpl_cg2"
aa 000164  154137 143147
aa 000165  062000 000000
aa 000166  007103 157155		" "Complab"
aa 000167  160154 141142
5a 000170  000171 000000
aa 000171  000004 000000
55 000172  000163 000166
aa 000173  000000 000000		" padding
	"	Linkage section - static variables and external links

aa 000000  000000 000000		" linkage header
0a 000001  002200 000000		" address of defs
aa 000002  000000 000000
aa 000003  000000 000000
aa 000004  000000 000000
aa 000005  000000 000000
2a 000006  000010 000036		" offset to links, total length
aa 000007  000000 000036		" obsolete length

	"	External link pairs

			L93:
3a 000010  777770 000046		" "bcpl_machine_code_$Unpackstring"
5a 000011  000055 000000
			L92:
3a 000012  777766 000046		" "bcpl_utility$StoreString"
5a 000013  000067 000000
			L91:
3a 000014  777764 000046		" "bcpl_strings_$Concatenate"
5a 000015  000101 000000
			L86:
3a 000016  777762 000046		" "bcpl_strings_$Length"
5a 000017  000106 000000
			L82:
3a 000020  777760 000046		" "bcpl_report$CGreport"
5a 000021  000117 000000
			L69:
3a 000022  777756 000046		" "bcpl_utility$MakeTimeString"
5a 000023  000126 000000
			L38:
3a 000024  777754 000046		" "bcpl_utility$Nextparam"
5a 000025  000134 000000
			L35:
3a 000026  777752 000046		" "bcpl_cg5$SectionHeader"
5a 000027  000146 000000
			L19:
3a 000030  777750 000046		" "bcpl_cg5$OutW"
5a 000031  000153 000000
			L12:
3a 000032  777746 000046		" "bcpl_cg5$OutW2"
5a 000033  000160 000000
			L10:
3a 000034  777744 000046		" "bcpl_cg2$Complab"
5a 000035  000170 000000
	"	Symbol section header

aa 000000  000000 000001		" version number of header structure
aa 000001  163171 155142		" "symbtree"
aa 000002  164162 145145
aa 000003  000000 000003		" compiler version number
aa 000004  000000 101170		" date/time compiler modified
aa 000005  533311 032072		" 09/25/73  0959.1 mst Tue
aa 000006  000000 102333		" time of this compilation
aa 000007  436600 015200		" 01/24/75  0656.8 mst Fri
aa 000010  142143 160154		" "bcpl    "
aa 000011  040040 040040
aa 000012  000056 000035		" compiler version name - pointer, length
aa 000013  000066 000024		" user id - pointer, length
aa 000014  000073 000043		" comment string - pointer, length
aa 000015  000002 000002		" text and linkage boundaries
aa 000016  000024 000000		" source map, symbol tree root
7a 000017  000000 000175		" section header pointer, block size
aa 000020  000000 000175		" next block pointer, rel_text
aa 000021  000000 000234		" rel_def, rel_link
aa 000022  000243 000175		" rel_symbol, default truncate
aa 000023  000024 000000		" optional truncate, unused
aa 000024  000000 000001		" source files map: version number
aa 000025  000000 000006		"                   number of files
aa 000026  000104 000047		" bcpl_cg8
aa 000027  023333 611412		" last modified on
aa 000030  000000 102333		" 01/24/75  0647.2 mst Fri
aa 000031  432366 600000
aa 000032  000116 000043		" bcpl_cg_head
aa 000033  021607 540213		" last modified on
aa 000034  000000 101621		" 05/06/74  1740.6 mst Mon
aa 000035  351403 200000
aa 000036  000127 000051		" bcpl_compiler_head
aa 000037  021607 540214		" last modified on
aa 000040  000000 101621		" 05/06/74  1740.6 mst Mon
aa 000041  351403 200000
aa 000042  000142 000043		" bcpl_symbols
aa 000043  021607 540223		" last modified on
aa 000044  000000 101621		" 05/06/74  1740.8 mst Mon
aa 000045  351474 000000
aa 000046  000153 000044		" bcpl_cg_codes
aa 000047  021607 540212		" last modified on
aa 000050  000000 101621		" 05/06/74  1740.6 mst Mon
aa 000051  351402 400000
aa 000052  000164 000043		" bcpl_opcodes
aa 000053  021607 540221		" last modified on
aa 000054  000000 101621		" 05/06/74  1740.8 mst Mon
aa 000055  351474 000000
aa 000056  102103 120114		" "BCPL version 3.4, August 1973"
aa 000057  040166 145162
aa 000060  163151 157156
aa 000061  040063 056064
aa 000062  054040 101165
aa 000063  147165 163164
aa 000064  040061 071067
aa 000065  063040 040040
aa 000066  115141 162164		" "Martinson.SysMaint.a"
aa 000067  151156 163157
aa 000070  156056 123171
aa 000071  163115 141151
aa 000072  156164 056141
aa 000073  163157 165162		" "source  xref  alist  optimize  6180"
aa 000074  143145 040040
aa 000075  170162 145146
aa 000076  040040 141154
aa 000077  151163 164040
aa 000100  040157 160164
aa 000101  151155 151172
aa 000102  145040 040066
aa 000103  061070 060040
aa 000104  076062 056061		" ">2.1spec>online>mib083074>bcpl_cg8.bcpl"
aa 000105  163160 145143
aa 000106  076157 156154
aa 000107  151156 145076
aa 000110  155151 142060
aa 000111  070063 060067
aa 000112  064076 142143
aa 000113  160154 137143
aa 000114  147070 056142
aa 000115  143160 154040
aa 000116  076154 144144		" ">ldd>include>bcpl_cg_head.incl.bcpl"
aa 000117  076151 156143
aa 000120  154165 144145
aa 000121  076142 143160
aa 000122  154137 143147
aa 000123  137150 145141
aa 000124  144056 151156
aa 000125  143154 056142
aa 000126  143160 154040
aa 000127  076154 144144		" ">ldd>include>bcpl_compiler_head.incl.bcpl"
aa 000130  076151 156143
aa 000131  154165 144145
aa 000132  076142 143160
aa 000133  154137 143157
aa 000134  155160 151154
aa 000135  145162 137150
aa 000136  145141 144056
aa 000137  151156 143154
aa 000140  056142 143160
aa 000141  154040 040040
aa 000142  076154 144144		" ">ldd>include>bcpl_symbols.incl.bcpl"
aa 000143  076151 156143
aa 000144  154165 144145
aa 000145  076142 143160
aa 000146  154137 163171
aa 000147  155142 157154
aa 000150  163056 151156
aa 000151  143154 056142
aa 000152  143160 154040
aa 000153  076154 144144		" ">ldd>include>bcpl_cg_codes.incl.bcpl"
aa 000154  076151 156143
aa 000155  154165 144145
aa 000156  076142 143160
aa 000157  154137 143147
aa 000160  137143 157144
aa 000161  145163 056151
aa 000162  156143 154056
aa 000163  142143 160154
aa 000164  076154 144144		" ">ldd>include>bcpl_opcodes.incl.bcpl"
aa 000165  076151 156143
aa 000166  154165 144145
aa 000167  076142 143160
aa 000170  154137 157160
aa 000171  143157 144145
aa 000172  163056 151156
aa 000173  143154 056142
aa 000174  143160 154040
	"	Relocation information


	"	text section relocation bits

aa 000175  000000 000002		" version number of rel-bits structure
aa 000176  000000 001761		" length in bits
aa 000177  741025 000123
aa 000200  603364 740275
aa 000201  000001 236101
aa 000202  640024 740215
aa 000203  170143 236011
aa 000204  640000 240000
aa 000205  240000 240000
aa 000206  247403 551700
aa 000207  532360 126400
aa 000210  012360 556474
aa 000211  045500 002400
aa 000212  002474 023500
aa 000213  000500 002400
aa 000214  002474 045500
aa 000215  000500 012000
aa 000216  002400 051701
aa 000217  572360 206474
aa 000220  051517 135323
aa 000221  606264 002400
aa 000222  002474 137517
aa 000223  014720 000500
aa 000224  000517 004323
aa 000225  604664 743475
aa 000226  170137 200005
aa 000227  170047 200000
aa 000230  247402 151700
aa 000231  472000 240001
aa 000232  200001 236115
aa 000233  400000 000000
l	"	inkage relocation bits

aa 000234  000000 000002		" version number of rel-bits structure
aa 000235  000000 000234		" length in bits
aa 000236  100002 204652
aa 000237  465246 524652
aa 000240  465246 524652
aa 000241  465246 524652
aa 000242  465200 000000
s	"	ymbol relocation bits

aa 000243  000000 000002		" version number of rel-bits structure
aa 000244  000000 000043		" length in bits
aa 000245  740365 770666
	"	Object map

aa 002700  000000 000001		" version number of object_map structure
aa 002701  157142 152137		" "obj_map "
aa 002702  155141 160040
aa 002703  000000 002200		" text offset, length
aa 002704  002200 000173		" def offset, length
aa 002705  002374 000036		" link offset, length
aa 002706  002432 000246		" symbol offset, length
aa 002707  000000 000000		" break map offset, length
aa 002710  340000 000000		" flags: ^bound, relocatable, procedure, standard
aa 002711  002700 000000		" object map pointer, unused


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
