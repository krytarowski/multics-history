	COMPILATION LISTING OF SEGMENT convert_MR10_2_mail_table
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/05/84  1102.8 mst Wed
	    Options: optimize list

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 /* CONVERT_MR10_2_MAIL_TABLE: Program to convert a MR10.2 MAIL_TABLE to
        7*   a MR11 MAIL_TABLE.  MR11 MAIL_TABLEs are Version 3 MSTBs rather than
        8*   Version 2.  The format of the MAIL_TABLE entries themselves has not 
        9*   changed. */
       10 
       11 /* format: style2 */
       12 /* Written 1984-08-06 by Eric Swenson */
       13 
       14 convert_MR10_2_mail_table:
       15      procedure options (variable);
       16 
       17 /* Automatic */
       18 
       19 	dcl     argument_idx	 fixed bin (17);
       20 	dcl     argument_lth	 fixed bin (21);
       21 	dcl     argument_ptr	 ptr;
       22 	dcl     code		 fixed bin (35);
       23 	dcl     dirname		 char (168);
       24 	dcl     entryname		 char (32);
       25 	dcl     n_arguments		 fixed bin (17);
       26 	dcl     pathname		 char (168);	/* Based */
       27 
       28 	dcl     argument		 char (argument_lth) based (argument_ptr);
       29 
       30 /* External Entries */
       31 
       32 	dcl     com_err_		 entry () options (variable);
       33 	dcl     cu_$arg_count	 entry (fixed bin, fixed bin (35));
       34 	dcl     cu_$arg_ptr		 entry (fixed bin, ptr, fixed bin (21), fixed bin (35));
       35 	dcl     expand_pathname_	 entry (char (*), char (*), char (*), fixed bin (35));
       36 	dcl     ioa_		 entry options (variable);
       37 	dcl     mail_table_priv_$convert_v2_mail_table
       38 				 entry (char (*), char (*), fixed bin (35));
       39 	dcl     pathname_		 entry (char (*), char (*)) returns (char (168));
       40 
       41 /* Constant */
       42 
       43 	dcl     ME		 char (32) initial ("convert_MR10_2_mail_table") internal static
       44 				 options (constant);
       45 
       46 /* Program */
       47 
       48 	call cu_$arg_count (n_arguments, code);
       49 	if code ^= 0
       50 	then do;
       51 		call com_err_ (code, ME);
       52 		return;
       53 	     end;
       54 
       55 	if n_arguments = 0
       56 	then do;
       57 		call com_err_ (0, ME, "Usage: ^a pathname_of_mail_table_to_convert", ME);
       58 		return;
       59 	     end;
       60 
       61 	call cu_$arg_ptr (1, argument_ptr, argument_lth, (0));
       62 	call expand_pathname_ (argument, dirname, entryname, code);
       63 	if code ^= 0
       64 	then do;
       65 		call com_err_ (code, ME, "^a", argument);
       66 		return;
       67 	     end;
       68 
       69 	pathname = pathname_ (dirname, entryname);
       70 	call ioa_ ("^a: Converting ^a.", ME, pathname);
       71 	call mail_table_priv_$convert_v2_mail_table (dirname, entryname, code);
       72 	if code ^= 0
       73 	then do;
       74 		call com_err_ (code, ME, "Converting ^a", pathname);
       75 		return;
       76 	     end;
       77 	call ioa_ ("^a: Finished conversion of ^a.", ME, pathname);
       78 	return;
       79 
       80      end convert_MR10_2_mail_table;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/05/84  0854.0  convert_MR10_2_mail_table.pl1     >special_ldd>temp>as>convert_MR10_2_mail_table.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
ME                              000000 constant        char(32)                 initial unaligned dcl 43 set ref 51* 57* 57* 65* 70*
                                                                                  74* 77*
argument                               based           char                     unaligned dcl 28 set ref 62* 65*
argument_lth                    000100 automatic       fixed bin(21,0)          dcl 20 set ref 61* 62 62 65 65
argument_ptr                    000102 automatic       pointer                  dcl 21 set ref 61* 62 65
code                            000104 automatic       fixed bin(35,0)          dcl 22 set ref 48* 49 51* 62* 63 65* 71* 72 74*
com_err_                        000010 constant        entry                    external dcl 32 ref 51 57 65 74
cu_$arg_count                   000012 constant        entry                    external dcl 33 ref 48
cu_$arg_ptr                     000014 constant        entry                    external dcl 34 ref 61
dirname                         000105 automatic       char(168)                unaligned dcl 23 set ref 62* 69* 71*
entryname                       000157 automatic       char(32)                 unaligned dcl 24 set ref 62* 69* 71*
expand_pathname_                000016 constant        entry                    external dcl 35 ref 62
ioa_                            000020 constant        entry                    external dcl 36 ref 70 77
mail_table_priv_$convert_v2_mail_table
                                000022 constant        entry                    external dcl 37 ref 71
n_arguments                     000167 automatic       fixed bin(17,0)          dcl 25 set ref 48* 55
pathname                        000170 automatic       char(168)                unaligned dcl 26 set ref 69* 70* 74* 77*
pathname_                       000024 constant        entry                    external dcl 39 ref 69

NAME DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
argument_idx                           automatic       fixed bin(17,0)          dcl 19

NAME DECLARED BY EXPLICIT CONTEXT.
convert_MR10_2_mail_table       000057 constant        entry                    external dcl 14

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       540         566     425         550
Length       754     425        26         151     113           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
convert_MR10_2_mail_table           210 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
convert_MR10_2_mail_table
                         000100 argument_lth                convert_MR10_2_mail_table
                         000102 argument_ptr                convert_MR10_2_mail_table
                         000104 code                        convert_MR10_2_mail_table
                         000105 dirname                     convert_MR10_2_mail_table
                         000157 entryname                   convert_MR10_2_mail_table
                         000167 n_arguments                 convert_MR10_2_mail_table
                         000170 pathname                    convert_MR10_2_mail_table

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      cu_$arg_count                 cu_$arg_ptr                   expand_pathname_
ioa_                          mail_table_priv_$convert_v2_mail_table                      pathname_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.


CONSTANTS
000000  aa  143 157 156 166	conv
000001  aa  145 162 164 137	ert_
000002  aa  115 122 061 060	MR10
000003  aa  137 062 137 155	_2_m
000004  aa  141 151 154 137	ail_
000005  aa  164 141 142 154	tabl
000006  aa  145 040 040 040	e   
000007  aa  040 040 040 040	    

000010  aa     524000000036

000011  aa     524000000015

000012  aa     524000000022

000013  aa     524000000002

000014  aa     526000000000

000015  aa     524000000053

000016  aa     404000000005

000017  aa     526000000040

000020  aa     404000000043

000021  aa     526000000250

000022  aa  103 157 156 166	Conv
000023  aa  145 162 164 151	erti
000024  aa  156 147 040 136	ng ^
000025  aa  141 000 000 000	a

000026  aa  136 141 072 040	^a: 
000027  aa  103 157 156 166	Conv
000030  aa  145 162 164 151	erti
000031  aa  156 147 040 136	ng ^
000032  aa  141 056 000 000	a.

000033  aa  136 141 072 040	^a: 
000034  aa  106 151 156 151	Fini
000035  aa  163 150 145 144	shed
000036  aa  040 143 157 156	 con
000037  aa  166 145 162 163	vers
000040  aa  151 157 156 040	ion 
000041  aa  157 146 040 136	of ^
000042  aa  141 056 000 000	a.

000043  aa  125 163 141 147	Usag
000044  aa  145 072 040 136	e: ^
000045  aa  141 040 160 141	a pa
000046  aa  164 150 156 141	thna
000047  aa  155 145 137 157	me_o
000050  aa  146 137 155 141	f_ma
000051  aa  151 154 137 164	il_t
000052  aa  141 142 154 145	able
000053  aa  137 164 157 137	_to_
000054  aa  143 157 156 166	conv
000055  aa  145 162 164 000	ert

BEGIN PROCEDURE convert_MR10_2_mail_table
ENTRY TO convert_MR10_2_mail_table                          STATEMENT 1 ON LINE 14
convert_MR10_2_mail_table:
     procedure options (variable);

000056  da     000107240000
000057  aa   000340 6270 00	eax7 	224
000060  aa  7 00034 3521 20	epp2 	pr7|28,*
000061  aa  2 01045 2721 00	tsp2 	pr2|549		ext_entry
000062  aa     000000000000
000063  aa     000000000000
						STATEMENT 1 ON LINE 48
	call cu_$arg_count (n_arguments, code);

000064  aa  6 00167 3521 00	epp2 	pr6|119		n_arguments
000065  aa  6 00244 2521 00	spri2	pr6|164
000066  aa  6 00104 3521 00	epp2 	pr6|68		code
000067  aa  6 00246 2521 00	spri2	pr6|166
000070  aa  6 00242 6211 00	eax1 	pr6|162
000071  aa   010000 4310 07	fld  	4096,dl
000072  la  4 00012 3521 20	epp2 	pr4|10,*		cu_$arg_count
000073  aa  0 00623 7001 00	tsx0 	pr0|403		call_ext_out
						STATEMENT 1 ON LINE 49
	if code ^= 0
	then do;

000074  aa  6 00104 2361 00	ldq  	pr6|68		code
000075  aa   000017 6000 04	tze  	15,ic		000114
						STATEMENT 1 ON LINE 51
		call com_err_ (code, ME);

000076  aa  6 00104 3521 00	epp2 	pr6|68		code
000077  aa  6 00252 2521 00	spri2	pr6|170
000100  aa   777700 3520 04	epp2 	-64,ic		000000 = 143157156166
000101  aa  6 00254 2521 00	spri2	pr6|172
000102  aa   777716 3520 04	epp2 	-50,ic		000020 = 404000000043
000103  aa  6 00256 2521 00	spri2	pr6|174
000104  aa   777713 3520 04	epp2 	-53,ic		000017 = 526000000040
000105  aa  6 00260 2521 00	spri2	pr6|176
000106  aa  6 00250 6211 00	eax1 	pr6|168
000107  aa   010000 4310 07	fld  	4096,dl
000110  aa  6 00044 3701 20	epp4 	pr6|36,*
000111  la  4 00010 3521 20	epp2 	pr4|8,*		com_err_
000112  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 52
		return;

000113  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 53
	     end;

						STATEMENT 1 ON LINE 55
	if n_arguments = 0
	then do;

000114  aa  6 00167 2361 00	ldq  	pr6|119		n_arguments
000115  aa   000032 6010 04	tnz  	26,ic		000147
						STATEMENT 1 ON LINE 57
		call com_err_ (0, ME, "Usage: ^a pathname_of_mail_table_to_convert", ME);

000116  aa  6 00262 4501 00	stz  	pr6|178
000117  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
000120  aa   777724 00 0054	desc9a	-44,44		000043 = 125163141147
000121  aa  6 00264 00 0054	desc9a	pr6|180,44
000122  aa  6 00262 3521 00	epp2 	pr6|178
000123  aa  6 00302 2521 00	spri2	pr6|194
000124  aa   777654 3520 04	epp2 	-84,ic		000000 = 143157156166
000125  aa  6 00304 2521 00	spri2	pr6|196
000126  aa  6 00264 3521 00	epp2 	pr6|180
000127  aa  6 00306 2521 00	spri2	pr6|198
000130  aa   777650 3520 04	epp2 	-88,ic		000000 = 143157156166
000131  aa  6 00310 2521 00	spri2	pr6|200
000132  aa   777664 3520 04	epp2 	-76,ic		000016 = 404000000005
000133  aa  6 00312 2521 00	spri2	pr6|202
000134  aa   777663 3520 04	epp2 	-77,ic		000017 = 526000000040
000135  aa  6 00314 2521 00	spri2	pr6|204
000136  aa  6 00320 2521 00	spri2	pr6|208
000137  aa   777656 3520 04	epp2 	-82,ic		000015 = 524000000053
000140  aa  6 00316 2521 00	spri2	pr6|206
000141  aa  6 00300 6211 00	eax1 	pr6|192
000142  aa   020000 4310 07	fld  	8192,dl
000143  aa  6 00044 3701 20	epp4 	pr6|36,*
000144  la  4 00010 3521 20	epp2 	pr4|8,*		com_err_
000145  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 58
		return;

000146  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 59
	     end;

						STATEMENT 1 ON LINE 61
	call cu_$arg_ptr (1, argument_ptr, argument_lth, (0));

000147  aa   000001 2360 07	ldq  	1,dl
000150  aa  6 00262 7561 00	stq  	pr6|178
000151  aa  6 00277 4501 00	stz  	pr6|191
000152  aa  6 00262 3521 00	epp2 	pr6|178
000153  aa  6 00252 2521 00	spri2	pr6|170
000154  aa  6 00102 3521 00	epp2 	pr6|66		argument_ptr
000155  aa  6 00254 2521 00	spri2	pr6|172
000156  aa  6 00100 3521 00	epp2 	pr6|64		argument_lth
000157  aa  6 00256 2521 00	spri2	pr6|174
000160  aa  6 00277 3521 00	epp2 	pr6|191
000161  aa  6 00260 2521 00	spri2	pr6|176
000162  aa  6 00250 6211 00	eax1 	pr6|168
000163  aa   020000 4310 07	fld  	8192,dl
000164  aa  6 00044 3701 20	epp4 	pr6|36,*
000165  la  4 00014 3521 20	epp2 	pr4|12,*		cu_$arg_ptr
000166  aa  0 00623 7001 00	tsx0 	pr0|403		call_ext_out
						STATEMENT 1 ON LINE 62
	call expand_pathname_ (argument, dirname, entryname, code);

000167  aa  6 00100 2361 00	ldq  	pr6|64		argument_lth
000170  aa   526000 2760 03	orq  	175104,du
000171  aa  6 00277 7561 00	stq  	pr6|191
000172  aa  6 00102 3521 20	epp2 	pr6|66,*		argument
000173  aa  6 00302 2521 00	spri2	pr6|194
000174  aa  6 00105 3521 00	epp2 	pr6|69		dirname
000175  aa  6 00304 2521 00	spri2	pr6|196
000176  aa  6 00157 3521 00	epp2 	pr6|111		entryname
000177  aa  6 00306 2521 00	spri2	pr6|198
000200  aa  6 00104 3521 00	epp2 	pr6|68		code
000201  aa  6 00310 2521 00	spri2	pr6|200
000202  aa  6 00277 3521 00	epp2 	pr6|191
000203  aa  6 00312 2521 00	spri2	pr6|202
000204  aa   777615 3520 04	epp2 	-115,ic		000021 = 526000000250
000205  aa  6 00314 2521 00	spri2	pr6|204
000206  aa   777611 3520 04	epp2 	-119,ic		000017 = 526000000040
000207  aa  6 00316 2521 00	spri2	pr6|206
000210  aa   777610 3520 04	epp2 	-120,ic		000020 = 404000000043
000211  aa  6 00320 2521 00	spri2	pr6|208
000212  aa  6 00300 6211 00	eax1 	pr6|192
000213  aa   020000 4310 07	fld  	8192,dl
000214  aa  6 00044 3701 20	epp4 	pr6|36,*
000215  la  4 00016 3521 20	epp2 	pr4|14,*		expand_pathname_
000216  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 63
	if code ^= 0
	then do;

000217  aa  6 00104 2361 00	ldq  	pr6|68		code
000220  aa   000034 6000 04	tze  	28,ic		000254
						STATEMENT 1 ON LINE 65
		call com_err_ (code, ME, "^a", argument);

000221  aa  6 00100 2361 00	ldq  	pr6|64		argument_lth
000222  aa   526000 2760 03	orq  	175104,du
000223  aa  6 00277 7561 00	stq  	pr6|191
000224  aa   136141 2350 03	lda  	48225,du
000225  aa  6 00262 7551 00	sta  	pr6|178
000226  aa  6 00104 3521 00	epp2 	pr6|68		code
000227  aa  6 00302 2521 00	spri2	pr6|194
000230  aa   777550 3520 04	epp2 	-152,ic		000000 = 143157156166
000231  aa  6 00304 2521 00	spri2	pr6|196
000232  aa  6 00262 3521 00	epp2 	pr6|178
000233  aa  6 00306 2521 00	spri2	pr6|198
000234  aa  6 00102 3521 20	epp2 	pr6|66,*		argument
000235  aa  6 00310 2521 00	spri2	pr6|200
000236  aa   777562 3520 04	epp2 	-142,ic		000020 = 404000000043
000237  aa  6 00312 2521 00	spri2	pr6|202
000240  aa   777557 3520 04	epp2 	-145,ic		000017 = 526000000040
000241  aa  6 00314 2521 00	spri2	pr6|204
000242  aa   777551 3520 04	epp2 	-151,ic		000013 = 524000000002
000243  aa  6 00316 2521 00	spri2	pr6|206
000244  aa  6 00277 3521 00	epp2 	pr6|191
000245  aa  6 00320 2521 00	spri2	pr6|208
000246  aa  6 00300 6211 00	eax1 	pr6|192
000247  aa   020000 4310 07	fld  	8192,dl
000250  aa  6 00044 3701 20	epp4 	pr6|36,*
000251  la  4 00010 3521 20	epp2 	pr4|8,*		com_err_
000252  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 66
		return;

000253  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 67
	     end;

						STATEMENT 1 ON LINE 69
	pathname = pathname_ (dirname, entryname);

000254  aa  6 00105 3521 00	epp2 	pr6|69		dirname
000255  aa  6 00302 2521 00	spri2	pr6|194
000256  aa  6 00157 3521 00	epp2 	pr6|111		entryname
000257  aa  6 00304 2521 00	spri2	pr6|196
000260  aa  6 00170 3521 00	epp2 	pr6|120		pathname
000261  aa  6 00306 2521 00	spri2	pr6|198
000262  aa   777537 3520 04	epp2 	-161,ic		000021 = 526000000250
000263  aa  6 00310 2521 00	spri2	pr6|200
000264  aa  6 00314 2521 00	spri2	pr6|204
000265  aa   777532 3520 04	epp2 	-166,ic		000017 = 526000000040
000266  aa  6 00312 2521 00	spri2	pr6|202
000267  aa  6 00300 6211 00	eax1 	pr6|192
000270  aa   014000 4310 07	fld  	6144,dl
000271  aa  6 00044 3701 20	epp4 	pr6|36,*
000272  la  4 00024 3521 20	epp2 	pr4|20,*		pathname_
000273  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 70
	call ioa_ ("^a: Converting ^a.", ME, pathname);

000274  aa   777532 2370 04	ldaq 	-166,ic		000026 = 136141072040 103157156166
000275  aa  6 00242 7571 00	staq 	pr6|162
000276  aa   777532 2370 04	ldaq 	-166,ic		000030 = 145162164151 156147040136
000277  aa  6 00244 7571 00	staq 	pr6|164
000300  aa   141056 2350 03	lda  	49710,du
000301  aa  6 00246 7551 00	sta  	pr6|166
000302  aa  6 00242 3521 00	epp2 	pr6|162
000303  aa  6 00302 2521 00	spri2	pr6|194
000304  aa   777474 3520 04	epp2 	-196,ic		000000 = 143157156166
000305  aa  6 00304 2521 00	spri2	pr6|196
000306  aa  6 00170 3521 00	epp2 	pr6|120		pathname
000307  aa  6 00306 2521 00	spri2	pr6|198
000310  aa   777502 3520 04	epp2 	-190,ic		000012 = 524000000022
000311  aa  6 00310 2521 00	spri2	pr6|200
000312  aa   777505 3520 04	epp2 	-187,ic		000017 = 526000000040
000313  aa  6 00312 2521 00	spri2	pr6|202
000314  aa   777505 3520 04	epp2 	-187,ic		000021 = 526000000250
000315  aa  6 00314 2521 00	spri2	pr6|204
000316  aa  6 00300 6211 00	eax1 	pr6|192
000317  aa   014000 4310 07	fld  	6144,dl
000320  aa  6 00044 3701 20	epp4 	pr6|36,*
000321  la  4 00020 3521 20	epp2 	pr4|16,*		ioa_
000322  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 71
	call mail_table_priv_$convert_v2_mail_table (dirname, entryname, code);

000323  aa  6 00105 3521 00	epp2 	pr6|69		dirname
000324  aa  6 00302 2521 00	spri2	pr6|194
000325  aa  6 00157 3521 00	epp2 	pr6|111		entryname
000326  aa  6 00304 2521 00	spri2	pr6|196
000327  aa  6 00104 3521 00	epp2 	pr6|68		code
000330  aa  6 00306 2521 00	spri2	pr6|198
000331  aa   777470 3520 04	epp2 	-200,ic		000021 = 526000000250
000332  aa  6 00310 2521 00	spri2	pr6|200
000333  aa   777464 3520 04	epp2 	-204,ic		000017 = 526000000040
000334  aa  6 00312 2521 00	spri2	pr6|202
000335  aa   777463 3520 04	epp2 	-205,ic		000020 = 404000000043
000336  aa  6 00314 2521 00	spri2	pr6|204
000337  aa  6 00300 6211 00	eax1 	pr6|192
000340  aa   014000 4310 07	fld  	6144,dl
000341  aa  6 00044 3701 20	epp4 	pr6|36,*
000342  la  4 00022 3521 20	epp2 	pr4|18,*		mail_table_priv_$convert_v2_mail_table
000343  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 72
	if code ^= 0
	then do;

000344  aa  6 00104 2361 00	ldq  	pr6|68		code
000345  aa   000033 6000 04	tze  	27,ic		000400
						STATEMENT 1 ON LINE 74
		call com_err_ (code, ME, "Converting ^a", pathname);

000346  aa   777454 2370 04	ldaq 	-212,ic		000022 = 103157156166 145162164151
000347  aa  6 00242 7571 00	staq 	pr6|162
000350  aa   777454 2370 04	ldaq 	-212,ic		000024 = 156147040136 141000000000
000351  aa  6 00244 7571 00	staq 	pr6|164
000352  aa  6 00104 3521 00	epp2 	pr6|68		code
000353  aa  6 00302 2521 00	spri2	pr6|194
000354  aa   777424 3520 04	epp2 	-236,ic		000000 = 143157156166
000355  aa  6 00304 2521 00	spri2	pr6|196
000356  aa  6 00242 3521 00	epp2 	pr6|162
000357  aa  6 00306 2521 00	spri2	pr6|198
000360  aa  6 00170 3521 00	epp2 	pr6|120		pathname
000361  aa  6 00310 2521 00	spri2	pr6|200
000362  aa   777436 3520 04	epp2 	-226,ic		000020 = 404000000043
000363  aa  6 00312 2521 00	spri2	pr6|202
000364  aa   777433 3520 04	epp2 	-229,ic		000017 = 526000000040
000365  aa  6 00314 2521 00	spri2	pr6|204
000366  aa   777423 3520 04	epp2 	-237,ic		000011 = 524000000015
000367  aa  6 00316 2521 00	spri2	pr6|206
000370  aa   777431 3520 04	epp2 	-231,ic		000021 = 526000000250
000371  aa  6 00320 2521 00	spri2	pr6|208
000372  aa  6 00300 6211 00	eax1 	pr6|192
000373  aa   020000 4310 07	fld  	8192,dl
000374  aa  6 00044 3701 20	epp4 	pr6|36,*
000375  la  4 00010 3521 20	epp2 	pr4|8,*		com_err_
000376  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 75
		return;

000377  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 76
	     end;

						STATEMENT 1 ON LINE 77
	call ioa_ ("^a: Finished conversion of ^a.", ME, pathname);

000400  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
000401  aa   777433 00 0040	desc9a	-229,32		000033 = 136141072040
000402  aa  6 00250 00 0040	desc9a	pr6|168,32
000403  aa  6 00250 3521 00	epp2 	pr6|168
000404  aa  6 00302 2521 00	spri2	pr6|194
000405  aa   777373 3520 04	epp2 	-261,ic		000000 = 143157156166
000406  aa  6 00304 2521 00	spri2	pr6|196
000407  aa  6 00170 3521 00	epp2 	pr6|120		pathname
000410  aa  6 00306 2521 00	spri2	pr6|198
000411  aa   777377 3520 04	epp2 	-257,ic		000010 = 524000000036
000412  aa  6 00310 2521 00	spri2	pr6|200
000413  aa   777404 3520 04	epp2 	-252,ic		000017 = 526000000040
000414  aa  6 00312 2521 00	spri2	pr6|202
000415  aa   777404 3520 04	epp2 	-252,ic		000021 = 526000000250
000416  aa  6 00314 2521 00	spri2	pr6|204
000417  aa  6 00300 6211 00	eax1 	pr6|192
000420  aa   014000 4310 07	fld  	6144,dl
000421  aa  6 00044 3701 20	epp4 	pr6|36,*
000422  la  4 00020 3521 20	epp2 	pr4|16,*		ioa_
000423  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 78
	return;

000424  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 80
     end convert_MR10_2_mail_table;

  END PROCEDURE convert_MR10_2_mail_table


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
