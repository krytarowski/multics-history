ASSEMBLY LISTING OF SEGMENT >spec>on>6978-10/22/84>sreg_no_write.alm               
ASSEMBLED ON:	10/22/84  1115.8 mst Mon
OPTIONS USED:	list 
ASSEMBLED BY:	ALM Version  6.6  November 1982 
ASSEMBLER CREATED:	09/21/83  1227.3 mst Wed

                        000000       1  	entry	sreg_no_write
    000000                           2  	name	sreg_no_write
                                     3  
    000000                           4  sreg_no_write:
    000000  aa   000060 6270 00      5  	push
    000001  aa  7 00040 2721 20
                                     6  
    000002  0a   001766 7100 00      7  	tra	START
                        001766       8  	org	1014
                                     9  
    001766                          10  START:
    001766  aa  6 00022 3521 20     11  	epp2 	pr6|18,*	next frame ptr
    001767  aa  6 00000 3731 00     12  	epbp7	pr6|0	stack base
    001770  aa  2 00040 3535 00     13  	epp3 	pr2|32	next frame area
    001771  aa   000000 0110 03     14  	nop  	0,du
    001772                          15  	inhibit	on
    001772  aa  6 00022 2537 00     16  	spri3	pr6|18	NEW next frame ptr
    001773  aa  7 00024 2537 00     17  	spri3	pr7|20	NEW stack end ptr
    001774                          18  	inhibit	off
    001774  aa  6 00024 3515 20     19  	epp1 	pr6|20,*	return ptr
    001775  aa  2 00036 2515 00     20  	spri1	pr2|30	save return ptr in new frame
                                    21  " The following instruction will fail with a access violation
                                    22  " no_write_permission, because it asks for PR2's segment number
                                    23  " and gets THIS segment number instead.
                                    24  " The placement of this instruction is also very important. It must
                                    25  " be two locations prior to the page boundary in the inst. segment.
    001776  aa  2 00020 7531 00     26  	sreg 	pr2|16	save regs in new frame
    001777  aa  2 00032 7541 00     27  	sti  	pr2|26	save indicators in new frame
    002000  aa  2 00034 6515 00     28  	spri5	pr2|28	save pr5 in new frame
                                    29  
    002001  aa  6 00022 3521 20     30  	epp2 	pr6|18,*	next frame ptr (= NEW frame)
    002002  aa  2 77740 3521 00     31  	epp2 	pr2|-32	remove frame area
                                    32  "	spbp7	pr6|0	?????
                                    33  "	epp3 	pr2|30,*	get return ptr
                                    34  "	spri3	pr6|20	restore return ptr
                                    35  
                                    36  "	ldi  	pr2|26	resotre indicators
                                    37  "	lreg 	pr2|16	restore regs
    002003                          38  	inhibit	on
    002003  aa  6 00022 2523 00     39  	spri2	pr6|18	restore next frame ptr
    002004  aa  7 00024 2523 00     40  	spri2	pr7|20	restore stack end ptr
    002005                          41  	inhibit	off
    002005  aa  7 00042 7101 20     42  	return
                        003775      43  	org	2048-3
                                    44  	end
ENTRY SEQUENCES
     
    003775  5a   000012 0000 00
    003776  aa  7 00046 2721 20
    003777  0a   000000 7100 00

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    004000  5a   000003 000000 
    004001  5a   000030 600000 
    004002  aa   000000 000000 
    004003  55   000012 000002 
    004004  5a   000002 400003 
    004005  55   000006 000012 
    004006  aa  015 163 162 145
    004007  aa  147 137 156 157
    004010  aa  137 167 162 151
    004011  aa  164 145 000 000
    004012  55   000021 000003 
    004013  0a   003776 500000 
    004014  55   000015 000003 
    004015  aa  015 163 162 145         sreg_no_write
    004016  aa  147 137 156 157
    004017  aa  137 167 162 151
    004020  aa  164 145 000 000
    004021  55   000002 000012 
    004022  6a   000000 400002 
    004023  55   000024 000003 
    004024  aa  014 163 171 155         symbol_table
    004025  aa  142 157 154 137
    004026  aa  164 141 142 154
    004027  aa  145 000 000 000

DEFINITIONS HASH TABLE

    004030  aa   000000 000015 
    004031  aa   000000 000000 
    004032  aa   000000 000000 
    004033  aa   000000 000000 
    004034  aa   000000 000000 
    004035  aa   000000 000000 
    004036  aa   000000 000000 
    004037  5a   000021 000000 
    004040  aa   000000 000000 
    004041  aa   000000 000000 
    004042  aa   000000 000000 
    004043  5a   000012 000000 
    004044  aa   000000 000000 
    004045  aa   000000 000000 

NO EXTERNAL NAMES

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    004046  aa   000001 000000 
    004047  aa   000000 000000 

INTERNAL EXPRESSION WORDS

LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   004000 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000010 
    000007  a2   000000 000000 
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000004 
    000004  aa   000000 112143 
    000005  aa   305203 523135 
    000006  aa   000000 113126 
    000007  aa   356130 517425 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000302 
    000020  aa   000000 000104 
    000021  aa   000000 000271 
    000022  aa   000274 000104 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   040066 056066 
    000030  aa   040040 116157 
    000031  aa   166145 155142 
    000032  aa   145162 040061 
    000033  aa   071070 062040 
    000034  aa   107112 157150 
    000035  aa   156163 157156 
    000036  aa   056123 171163 
    000037  aa   115141 151156 
    000040  aa   164056 155040 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   154151 163164 
    000045  aa   040040 040040 
    000046  aa   040040 040040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040040 040040 
    000057  aa   040040 040040 
    000060  aa   040040 040040 
    000061  aa   040040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000001 
    000066  aa   000072 000050 
    000067  aa   131232 072556 
    000070  aa   000000 113126 
    000071  aa   347611 600000 
    000072  aa   076163 160145          >spec>on>6978-10/22/84>sreg_no_write.alm
    000073  aa   143076 157156 
    000074  aa   076066 071067 
    000075  aa   070055 061060 
    000076  aa   057062 062057 
    000077  aa   070064 076163 
    000100  aa   162145 147137 
    000101  aa   156157 137167 
    000102  aa   162151 164145 
    000103  aa   056141 154155 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

           0    sreg_no_write            sreg_no_write:        1,    4.
        1766    START                    sreg_no_write:        7,   10.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
