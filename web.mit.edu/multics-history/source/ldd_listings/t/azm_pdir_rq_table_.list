ASSEMBLY LISTING OF SEGMENT >special_ldd>install>MR12.0-1206>azm_pdir_rq_table_.alm          
ASSEMBLED ON:	11/05/86  1045.2 mst Wed
OPTIONS USED:	list 
ASSEMBLED BY:	ALM Version  6.7  October 1986  
ASSEMBLER CREATED:	10/08/86  1557.5 mst Wed

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Information Systems Inc., 1983 *
                                     4  " *                                                         *
                                     5  " ***********************************************************
                                     6  "	AZM_PDIR_RQ_TABLE_
                                     7  "
                                     8  "	Request definitions for analyze_multics select_deadproc request.
                                     9  "
                                    10  "	Initial coding: 08/14/84 by B. Braun
                                    11  "
                                    12  "
    000000                          13  	name	azm_pdir_rq_table_
                                    14  	include	ssu_request_macros
                                   1-1  " BEGIN INCLUDE FILE ... ssu_request_macros.incl.alm
                                   1-2  " Created:  5 May 1980 by W. Olin Sibert
                                   1-3  " Modified: 25 July 1980 by G. Palter to add multics_request macro
                                   1-4  " Modified: 1 December 1981 by G. Palter to remove user_flags
                                   1-5  " Modified: 12 February 1982 by G. Palter for version 4
                                   1-6  " Modified: 28 February 1982 by G. Palter to add dont_summarize and dont_list
                                   1-7  " Modified: 2 August 1982 by Jay Pattin to add unknown_request
                                   1-8  " Modified: 24 October 1984 by G. Palter to restore user flags and add the
                                   1-9  "    set_default_flags and set_default_multics_flags macros
                                  1-10  
                                  1-11  
                                  1-12  " ALM macros used to define subsystem request tables
                                  1-13  
                                  1-14  
                                  1-15  	macro	request_table_version
                              1   1-16  	aci	"srqt_4.0",8
                              2   1-17  	&end
                                  1-18  
                                  1-19  
                                  1-20  	macro	namelist
                              1   1-21  	maclist	off,save
                              2   1-22  	vfd	36/&K
                              3   1-23  &R&(	aci	@&i@,32
                              4   1-24  &)
                              5   1-25  	maclist	restore
                              6   1-26  	&end
                                  1-27  
                                  1-28  " 
                                  1-29  
                                  1-30  " System defined per-request flags
                                  1-31  
                        400000    1-32  	bool	flags.allow_command,400000	" valid as a command
                        200000    1-33  	bool	flags.allow_af,200000	" valid as an active function
                        600000    1-34  	bool	flags.allow_both,600000	" valid as both
                                  1-35  
                        100000    1-36  	bool	flags.unimplemented,100000	" request is not yet implemented
                        040000    1-37  	bool	flags.multics_request,040000	" request is actually a Multics command
                                  1-38  
                        020000    1-39  	bool	flags.dont_summarize,020000	" summarize_requests won't list it
                        010000    1-40  	bool	flags.dont_list,010000	" list_requests won't show it without -all
                                  1-41  
                        004000    1-42  	bool	flags.unknown,004000	" request is explicitly made unknown
                                  1-43  
                                  1-44  
                                  1-45  " Macros for setting per-request flags
                                  1-46  
                                  1-47  	macro	set_flags_loop
                              1   1-48  	maclist	off,save
                              2   1-49  &(3
                              3   1-50  &=&i,default&[	set_flags_loop	&1,(0),(&2)
                              4   1-51  &;	set	&1,&1+&i
                              5   1-52  &]&)
                              6   1-53  	maclist	restore
                              7   1-54  	&end
                                  1-55  
                                  1-56  
                                  1-57  	macro	set_flags
                              1   1-58  	maclist	off,save
                              2   1-59  	set	&1,0
                              3   1-60  &=&3,&[	set_flags_loop	&1,(0),(&2)
                              4   1-61  &;	set_flags_loop	&1,(&2),(&3)
                              5   1-62  &]
                              6   1-63  	maclist	restore
                              7   1-64  	&end
                                  1-65  
                                  1-66  " 
                                  1-67  
                                  1-68  "	set_default_flags {(system-flags)},{(user-flags)}
                                  1-69  
                                  1-70  " Sets the default system and/or user flags to be used for requests:
                                  1-71  "   system-flags: defines the default general nature of requests;" the default
                                  1-72  "      default is flags.allow_command
                                  1-73  "   user-flags:  defines the default setting for the subsystem specific flags
                                  1-74  "      associated with requests;" the default default is none (0)
                                  1-75  "   Note: If either system-flags or user-flags is ommitted, the default is not
                                  1-76  "      changed from its prior value.  This action allows the use of multiple
                                  1-77  "      set_default_flags macros within a table to change system or user
                                  1-78  "      flags without affecting the other defaults
                                  1-79  
                                  1-80  	macro	set_default_flags
                              1   1-81  	maclist	off,save
                              2   1-82  &^=&1,&[	set_flags	.dft_sf,(flags.allow_command),(&1)
                              3   1-83  &]
                              4   1-84  &^=&2,&[	set_flags	.dft_uf,(0),(&2)
                              5   1-85  &]
                              6   1-86  	maclist	restore
                              7   1-87  	&end
                                  1-88  
                                  1-89  
                                  1-90  "	set_default_multics_flags {(system-flags)},{(user-flags)}
                                  1-91  
                                  1-92  " Sets the default system and/or user flags to be used for Multics commands when used as requests:
                                  1-93  "   system-flags: defines the default general nature of Multics requests;" the
                                  1-94  "      default default is flags.allow_command+flags.allow_af
                                  1-95  "   user-flags:  defines the default setting for the subsystem specific flags
                                  1-96  "      associated with Multics requests;" the default default is none (0)
                                  1-97  "   Note: If either system-flags or user-flags is ommitted, the default is not
                                  1-98  "      changed from its prior value.  This action allows the use of multiple
                                  1-99  "      set_default_multics_flags macros within a table to change system or user
                                 1-100  "      flags without affecting the other defaults
                                 1-101  
                                 1-102  	macro	set_default_multics_flags
                              1  1-103  	maclist	off,save
                              2  1-104  &^=&1,&[	set_flags	.dft_mrsf,(flags.allow_command,flags.allow_af),(&1)
                              3  1-105  &]
                              4  1-106  &^=&2,&[	set_flags	.dft_mruf,(0),(&2)
                              5  1-107  &]
                              6  1-108  	maclist	restore
                              7  1-109  	&end
                                 1-110  
                                 1-111  " 
                                 1-112  
                                 1-113  	macro	.multics_request_doc
                              1  1-114  	null
                              2  1-115  	&end
                                 1-116  
                                 1-117  
                                 1-118  	macro	dft_multics_doc_lth
                              1  1-119  	set	.multics_doc_lth,0
                              2  1-120  	&end
                                 1-121  
                                 1-122  
                                 1-123  "	set_default_multics_doc (string)
                                 1-124  
                                 1-125  " Sets the default documentation to be used for Multics commands when used as requests:
                                 1-126  "   string: is the documentation string to be used for any subsequent requests defined by
                                 1-127  "      the multics_request_macro;" all occurences of "&1" in this string will be replaced by
                                 1-128  "      the actual name of the request;" Eg:
                                 1-129  "	set_default_multics_doc (Type '.. help &1' for more information.)
                                 1-130  
                                 1-131  	macro	set_default_multics_doc
                              1  1-132  	maclist	off,save
                              2  1-133  	macro	.multics_request_doc
                              3  1-134  	aci	@&1@
                              4  1-135  	&&end
                              5  1-136  	macro	dft_multics_doc_lth
                              6  1-137  	macro	.compute
                              7  1-138  	set	.multics_doc_lth,&&&&l1
                              8  1-139  	&&&&end
                              9  1-140  	.compute (&1)
                             10  1-141  	&&end
                             11  1-142  	maclist	restore
                             12  1-143  	&end
                                 1-144  
                                 1-145  " 
                                 1-146  
                                 1-147  "	begin_table tablename
                                 1-148  
                                 1-149  " Defines a subsystem request table (multiple tables may exist in a single object segment):
                                 1-150  "   tablename: the name by which this table may be referenced externally;" references to the
                                 1-151  "      table should be of the form segname$tablename where segname is the name of this
                                 1-152  "      object segment
                                 1-153  
                                 1-154  	macro	begin_table
                              1  1-155  	segdef	&1
                              2  1-156  	maclist	object,save
                              3  1-157  	use	tables
                              4  1-158  &1:	request_table_version
                              5  1-159  	aci	@&1@,32
                              6  1-160  	dup	6
                              7  1-161  	vfd	36/0
                              8  1-162  	dupend
                              9  1-163  	vfd	36/&1.rc
                             10  1-164  	maclist	off
                             11  1-165  	set	.rc,0
                             12  1-166  	set_default_flags (default),(default)
                             13  1-167  	set_default_multics_flags (default),(default)
                             14  1-168  	maclist	restore
                             15  1-169  	&end
                                 1-170  
                                 1-171  
                                 1-172  "	end_table	tablename
                                 1-173  
                                 1-174  " Indicates the end of a subsystem request table definition:
                                 1-175  "   tablename: the name of the table which has now been completely defined
                                 1-176  
                                 1-177  	macro	end_table
                              1  1-178  	maclist	off,save
                              2  1-179  	set	&1.rc,.rc
                              3  1-180  	maclist	restore
                              4  1-181  	&end
                                 1-182  
                                 1-183  " 
                                 1-184  
                                 1-185  "	request	name,processor,({abbreviations}),{(documentation)},
                                 1-186  "		 {(system-flags)},{(user-flags)}
                                 1-187  
                                 1-188  " Defines a subsystem request:
                                 1-189  "   name: the primary name of this request
                                 1-190  "   processor: the name of the procedure which actually executes this request;" it must be
                                 1-191  "      of the form segname$entryname
                                 1-192  "   abbreviations: is the list of defined abbreviations for this request
                                 1-193  "   documentation: a short string used by the list_requests request to explain this request
                                 1-194  "   system-flags: defines the general nature of this request;" the default is
                                 1-195  "      flags.allow_command
                                 1-196  "   user-flags: allows a subsystem to provide subsystem-specific information
                                 1-197  "      with the request's definition;" the default is none (0)
                                 1-198  
                                 1-199  	macro	request
                              1  1-200  	maclist	off,save
                              2  1-201  	set	.rc,.rc+1
                              3  1-202  	maclist	object
                              4  1-203  	use	tables
                              5  1-204  	vfd	18/&U.call,18/&U.names
                              6  1-205  &=&4,&[	vfd	36/0
                              7  1-206  &;	vfd	18/&U.info,18/&l4
                              8  1-207  	maclist	off
                              9  1-208  	use	info
                             10  1-209  &U.info:	aci	@&4@
                             11  1-210  &]
                             12  1-211  	use	tables
                             13  1-212  	set_flags	.sf,(.dft_sf),(&5)
                             14  1-213  	set_flags	.uf,(.dft_uf),(&6)
                             15  1-214  	maclist	object
                             16  1-215  	vfd	18/.sf,18/.uf
                             17  1-216  	maclist	off
                             18  1-217  	use	calls
                             19  1-218  &U.call:	epaq	*
                             20  1-219  	lprp4	7|stack_header.lot_ptr,*au
                             21  1-220  	call6	&2
                             22  1-221  	use	names
                             23  1-222  &U.names:	namelist	&1&^=&3,&[,&3&]
                             24  1-223  	maclist	restore
                             25  1-224  	&end
                                 1-225  
                                 1-226  " 
                                 1-227  
                                 1-228  "	unknown_request name,(abbreviations)
                                 1-229  
                                 1-230  " Defines an unknown request: used to make the utilities not recognize a request even though
                                 1-231  " it is defined in a later request table (such as ssu_request_tables_$standard_request):
                                 1-232  "   name: the primary name of the request to be marked as unknown
                                 1-233  "   abbreviations: is the list of defined abbreviations for this request
                                 1-234  
                                 1-235  	macro	unknown_request
                              1  1-236  	maclist	off,save
                              2  1-237  	set	.rc,.rc+1
                              3  1-238  	maclist	object
                              4  1-239  	use	tables
                              5  1-240  	vfd	18/&U.call,18/&U.names
                              6  1-241  	vfd	36/0
                              7  1-242  	vfd	18/flags.unknown,18/0
                              8  1-243  	maclist	off
                              9  1-244  	use	calls
                             10  1-245  &U.call:	epaq	*
                             11  1-246  	lprp4	7|stack_header.lot_ptr,*au
                             12  1-247  	call6	ssu_$unknown_request
                             13  1-248  	use	names
                             14  1-249  &U.names: namelist	&1&^=&2,&[,&2&]
                             15  1-250  	maclist	restore
                             16  1-251  	&end
                                 1-252  
                                 1-253  " 
                                 1-254  
                                 1-255  "	multics_request name,({abbreviations}),({documenation}),{procedure},
                                 1-256  "		       {(system-flags)},{(user-flags)}
                                 1-257  
                                 1-258  " Defines that a Multics command/AF may be used as a subsystem request:
                                 1-259  "   name: the primary name of this request (usually the name of the Multics command/AF)
                                 1-260  "   abbreviations: is the list of defined abbreviations for this request
                                 1-261  "   documentation: a short string used by the list_requests request to explain this request;
                                 1-262  "      if no documentation is provided, the documentation specified by a prior use of
                                 1-263  "      set_default_multics_doc is used
                                 1-264  "   procedure: the name of the Multics command/AF which is actually executed by this
                                 1-265  "      request;" it must be of the form segname$entryname;" if not given, the default is
                                 1-266  "      name$name
                                 1-267  "   system-flags: defines the general nature of this request;" the default is
                                 1-268  "      flags.allow_command+flags.allow_af
                                 1-269  "   user-flags: allows a subsystem to provide subsystem-specific information
                                 1-270  "      with the request's definition;" the default is none (0)
                                 1-271  
                                 1-272  	macro	multics_request
                              1  1-273  	maclist	off,save
                              2  1-274  	set	.rc,.rc+1
                              3  1-275  	maclist	object
                              4  1-276  	use	tables
                              5  1-277  	vfd	18/&U.call,18/&U.names
                              6  1-278  &=&3,&[	dft_multics_doc_lth &1,(&2),(&3),(&4),(&5),(&6)
                              7  1-279  	vfd	18/&U.info,18/.multics_doc_lth
                              8  1-280  &;	vfd	18/&U.info,18/&l3
                              9  1-281  &]
                             10  1-282  	maclist	off
                             11  1-283  	use	info
                             12  1-284  &U.info:
                             13  1-285  &=&3,&[	.multics_request_doc &1,(&2),(&3),(&4),(&5),(&6)
                             14  1-286  &;	aci	@&3@
                             15  1-287  &]
                             16  1-288  	use	tables
                             17  1-289  	maclist	object
                             18  1-290  	set_flags	.sf,(.dft_mrsf),(&5)
                             19  1-291  	set_flags	.uf,(.dft_mruf),(&6)
                             20  1-292  	maclist	object
                             21  1-293  	vfd	18/.sf+flags.multics_request,18/.uf
                             22  1-294  	maclist	off
                             23  1-295  	use	calls
                             24  1-296  &U.call:	epaq	*
                             25  1-297  	lprp4	7|stack_header.lot_ptr,*au
                             26  1-298  &=&4,&[	call6	&1$&1
                             27  1-299  &;	call6	&4
                             28  1-300  &]
                             29  1-301  	use	names
                             30  1-302  &U.names:	namelist	&1&^=&2,&[,&2&]
                             31  1-303  	maclist	restore
                             32  1-304  	&end
                                 1-305  
                                 1-306  " 
                                 1-307  
                                 1-308  " Required ALM statements to make this all work
                                 1-309  
                                 1-310  	use	tables
                                 1-311  	use	calls
                                 1-312  	use	names
                                 1-313  	use	info
                                 1-314  	join	/text/tables,calls,names,info
                                 1-315  
                                 1-316  	include	stack_header
                                   2-1  "	BEGIN INCLUDE FILE ... stack_header.incl.alm  3/72  Bill Silver
                                   2-2  "
                                   2-3  "	modified 7/76 by M. Weaver for *system links and more system use of areas
                                   2-4  "	modified 3/77 by M. Weaver  to add rnt_ptr
                                   2-5  "	modified 7/77 by S. Webber to add run_unit_depth and assign_linkage_ptr
                                   2-6  "	modified 6/83 by J. Ives to add trace_frames and in_trace.
                                   2-7  
                                   2-8  " HISTORY COMMENTS:
                                   2-9  "  1) change(86-06-24,DGHowe), approve(86-06-24,MCR7396),
                                  2-10  "     audit(86-08-05,Schroth), install(86-11-03,MR12.0-1206):
                                  2-11  "     added the heap_header_ptr definition
                                  2-12  "  2) change(86-08-12,Kissel), approve(86-08-12,MCR7473),
                                  2-13  "     audit(86-10-10,Fawcett), install(86-11-03,MR12.0-1206):
                                  2-14  "     Modified to support control point management.  These changes were
                                  2-15  "     actually made in February 1985 by G. Palter.
                                  2-16  "  3) change(86-10-22,Fawcett), approve(86-10-22,MCR7473),
                                  2-17  "     audit(86-10-22,Farley), install(86-11-03,MR12.0-1206):
                                  2-18  "     Remove the old_lot pointer and replace it with cpm_data_ptr. Use the 18
                                  2-19  "     bit pad after cur_lot_size for the cpm_enabled. This was done to save
                                  2-20  "     some space int the stack header and change the cpd_ptr unal to
                                  2-21  "     cpm_data_ptr (ITS pair).
                                  2-22  "                                                      END HISTORY COMMENTS
                                  2-23  
                        000004    2-24  	equ	stack_header.cpm_data_ptr,4		ptr to control point for this stack
                        000006    2-25  	equ	stack_header.combined_stat_ptr,6	ptr to separate static area
                                  2-26  
                        000010    2-27  	equ	stack_header.clr_ptr,8		ptr to area containing linkage sections
                        000012    2-28  	equ	stack_header.max_lot_size,10		number of words allowed in lot (DU)
                        000012    2-29  	equ	stack_header.main_proc_invoked,10	nonzero if main proc was invoked in run unit (DL)
                        000012    2-30  	equ	stack_header.run_unit_depth,10	number of active run units stacked (DL)
                        000013    2-31  	equ	stack_header.cur_lot_size,11		DU number of words (entries) in lot
                        000013    2-32            equ	stack_header.cpm_enabled,11		DL  non-zero if control point management is enabled
                        000014    2-33  	equ	stack_header.system_free_ptr,12	ptr to system storage area
                        000016    2-34  	equ	stack_header.user_free_ptr,14		ptr to user storage area
                                  2-35  
                        000020    2-36  	equ	stack_header.parent_ptr,16		ptr to parent stack or null
                        000022    2-37  	equ	stack_header.stack_begin_ptr,18	ptr to first stack frame
                        000024    2-38  	equ	stack_header.stack_end_ptr,20		ptr to next useable stack frame
                        000026    2-39  	equ	stack_header.lot_ptr,22		ptr to the lot for the current ring
                                  2-40  
                        000030    2-41  	equ	stack_header.signal_ptr,24		ptr to signal proc for current ring
                        000032    2-42  	equ	stack_header.bar_mode_sp,26		value of sp before entering bar mode
                        000034    2-43  	equ	stack_header.pl1_operators_ptr,28	ptr: pl1_operators_$operator_table
                        000036    2-44  	equ	stack_header.call_op_ptr,30		ptr to standard call operator
                                  2-45  
                        000040    2-46  	equ	stack_header.push_op_ptr,32		ptr to standard push operator
                        000042    2-47  	equ	stack_header.return_op_ptr,34		ptr to standard return operator
                        000044    2-48  	equ	stack_header.ret_no_pop_op_ptr,36	ptr: stand. return/ no pop operator
                        000046    2-49  	equ	stack_header.entry_op_ptr,38		ptr to standard entry operator
                                  2-50  
                        000050    2-51  	equ	stack_header.trans_op_tv_ptr,40	ptr to table of translator operator ptrs
                        000052    2-52  	equ	stack_header.isot_ptr,42		pointer to ISOT
                        000054    2-53  	equ	stack_header.sct_ptr,44		pointer to System Condition Table
                        000056    2-54  	equ	stack_header.unwinder_ptr,46		pointer to unwinder for current ring
                                  2-55  
                        000060    2-56  	equ	stack_header.sys_link_info_ptr,48	ptr to *system link name table
                        000062    2-57  	equ	stack_header.rnt_ptr,50		ptr to reference name table
                        000064    2-58  	equ	stack_header.ect_ptr,52		ptr to event channel table
                        000066    2-59  	equ	stack_header.assign_linkage_ptr,54	ptr to area for hcs_$assign_linkage calls
                        000070    2-60  	equ	stack_header.heap_header_ptr,56	ptr to heap header.
                        000072    2-61  	equ	stack_header.trace_frames,58		stack of trace_catch_ frames
                        000073    2-62  	equ	stach_header.trace_top_ptr,59		trace pointer
                        000074    2-63  	equ	stack_header.in_trace,60		trace antirecurse bit
                        000100    2-64  	equ	stack_header_end,64			length of stack header
                                  2-65  
                                  2-66  
                                  2-67  
                                  2-68  
                        000000    2-69  	equ	trace_frames.count,0		number of trace frames on stack
                        000001    2-70  	equ	trace_frames.top_ptr,1		packed pointer to top one
                                  2-71  
                                  2-72  "	The  following constant is an offset within the  pl1  operators table.
                                  2-73  "	It  references a  transfer vector table.
                                  2-74  
                        000551    2-75  	bool	tv_offset,551
                                  2-76  
                                  2-77  
                                  2-78  "	The  following constants are offsets within this transfer vector table.
                                  2-79  
                        001170    2-80  	equ	call_offset,tv_offset+271
                        001171    2-81  	equ	push_offset,tv_offset+272
                        001172    2-82  	equ	return_offset,tv_offset+273
                        001173    2-83  	equ	return_no_pop_offset,tv_offset+274
                        001174    2-84  	equ	entry_offset,tv_offset+275
                                  2-85  
                                  2-86  
                                  2-87  " 	END INCLUDE FILE stack_header.incl.alm
                                 2-317  
                                 2-318  " END INCLUDE FILE ... ssu_request_macros.incl.alm
                                    15  
                                    16  	begin_table azm_pdir_rq_table_
                        000000          	segdef	azm_pdir_rq_table_
    000000  aa  163 162 161 164
    000001  aa  137 064 056 060
    000002  aa  141 172 155 137
    000003  aa  160 144 151 162
    000004  aa  137 162 161 137
    000005  aa  164 141 142 154
    000006  aa  145 137 040 040
    000007  aa  040 040 040 040
    000010  aa  040 040 040 040
    000011  aa  040 040 040 040
                        000006 
    000012  aa   000000 000000 
    000013  aa   000000 000000 
    000014  aa   000000 000000 
    000015  aa   000000 000000 
    000016  aa   000000 000000 
    000017  aa   000000 000000 
    000020  aa   000000 000026 
                                    17  
                                    18  	request	add_request_table,azm_requests_2_$add_request_table,
                                    19  		(arqt),
                                    20  		(Adds a request table for use.),
                                    21  		flags.allow_command
    000021  00   000123 000225 
    000022  0a   000753 000035 
    000023  aa   400000 000000 
                                    22  
                                    23  	request	apply,azm_requests_1_$extract_seg,(ap),
                                    24  		(Apply command to selected segment.),
                                    25  		flags.allow_command
    000024  00   000126 000246 
    000025  0a   000763 000042 
    000026  aa   400000 000000 
                                    26  
                                    27  	request	display,azm_requests_1_$display,(d),
                                    28  		(Displays selected portions of segments or real memory.),
                                    29  		flags.allow_both
    000027  00   000131 000267 
    000030  0a   000774 000066 
    000031  aa   600000 000000 
                                    30  
                                    31            request   frame,azm_stack_requests_$frame, 
                                    32  		(fr),
                                    33  		(Displays information from a single stack frame.),
                                    34  		flags.unimplemented+flags.dont_summarize+flags.dont_list
    000032  00   000134 000310 
    000033  0a   001012 000057 
    000034  aa   130000 000000 
                                    35  
                                    36  	request	history_regs,azm_requests_1_$history_regs,(hregs),
                                    37  		(Display CPU history registers.),
                                    38  		flags.allow_command
    000035  00   000137 000331 
    000036  0a   001026 000036 
    000037  aa   400000 000000 
                                    39  
                                    40            request   list_dumps,azm_address_space_$list_dumps,
                                    41  		(lsd),
                                    42  		(Lists dumps via the dumps search paths.),
                                    43  		flags.allow_command
    000040  00   000142 000352 
    000041  0a   001036 000047 
    000042  aa   400000 000000 
                                    44  
                                    45  	request   machine_conditions,azm_requests_1_$mc,(mc),
                                    46  		(Print machine condition frame from <virtual-addr>.),
                                    47  		flags.allow_command
    000043  00   000145 000373 
    000044  0a   001050 000062 
    000045  aa   400000 000000 
                                    48  
                                    49            request   page_trace,azm_pds_trace_$azm_pds_trace_,(pgt),
                                    50  		(Print system trace table for process.),
                                    51  		flags.allow_command
    000046  00   000150 000414 
    000047  0a   001065 000045 
    000050  aa   400000 000000 
                                    52  
                                    53  	request	quit,azm_requests_2_$quit,(q),
                                    54  		(Leave analyze_multics.),
                                    55  		flags.allow_command
    000051  00   000153 000435 
    000052  0a   001077 000026 
    000053  aa   400000 000000 
                                    56  
                                    57  	request	replace,azm_requests_2_$replace,(rp),
                                    58  		(Replace translation of segment number with path.),
                                    59  		flags.allow_command
    000054  00   000156 000456 
    000055  0a   001105 000060 
    000056  aa   400000 000000 
                                    60  
                                    61  	request	sdw,azm_requests_1_$sdw,
                                    62  		(),
                                    63  		(List SDWs in DSEG.),
                                    64  		flags.allow_command
    000057  00   000161 000477 
    000060  0a   001121 000022 
    000061  aa   400000 000000 
                                    65  
                                    66  	request	select_deadproc,azm_address_space_$deadproc,(sldp),
                                    67  		(Switch to looking at a dead process directory.),
                                    68  		flags.allow_both
    000062  00   000164 000510 
    000063  0a   001126 000056 
    000064  aa   600000 000000 
                                    69  
                                    70  	request	select_dump,azm_address_space_$erf,(sld),
                                    71  		(Switch to examining a specific FDUMP.),
                                    72  		flags.allow_command
    000065  00   000167 000531 
    000066  0a   001142 000045 
    000067  aa   400000 000000 
                                    73  
                                    74  	request   search,azm_requests_2_$search,(srh),
                                    75  		(Search a segment for an octal pattern on a word boundary.),
                                    76  		flags.allow_both
    000070  00   000172 000552 
    000071  0a   001154 000071 
    000072  aa   600000 000000 
                                    77  
                                    78  	request   segment_name,azm_requests_2_$name,(name),
                                    79  		(Print segment name given number.),
                                    80  		flags.allow_both
    000073  00   000175 000573 
    000074  0a   001173 000040 
    000075  aa   600000 000000 
                                    81  
                                    82  	request	segment_number,azm_requests_2_$number,(number),
                                    83  		(Print segment number given name.),
                                    84  		flags.allow_both
    000076  00   000200 000614 
    000077  0a   001203 000040 
    000100  aa   600000 000000 
                                    85  
                                    86            request   set,azm_requests_2_$set,
                                    87  		(),
                                    88  		(Set a temporary pointer.),
                                    89  		flags.allow_command
    000101  00   000203 000635 
    000102  0a   001213 000030 
    000103  aa   400000 000000 
                                    90  
                                    91  	request	stack,azm_stack_requests_$stack,(sk),
                                    92  	 	(Trace the requested stack.),
                                    93  		flags.allow_command
    000104  00   000206 000646 
    000105  0a   001221 000032 
    000106  aa   400000 000000 
                                    94  
                                    95  	request	value,azm_requests_2_$value,(v),
                                    96  		(Display a temporary pointer.),
                                    97  		flags.allow_command
    000107  00   000211 000667 
    000110  0a   001230 000034 
    000111  aa   400000 000000 
                                    98  
                                    99  	request	.,azm_requests_2_$self_identify,(),
                                   100  		(),
                                   101  		flags.dont_summarize+flags.dont_list+flags.allow_command
    000112  00   000214 000710 
    000113  aa   000000 000000 
    000114  aa   430000 000000 
                                   102  
                                   103  	request	nothing,ssu_$just_return,(nt),
                                   104  		(),
                                   105  		flags.dont_summarize+flags.dont_list+flags.allow_both
    000115  00   000217 000721 
    000116  aa   000000 000000 
    000117  aa   630000 000000 
                                   106  
                                   107  	multics_request index_set,
                                   108  		(),
                                   109  		(),
                                   110  		(),
                                   111  		flags.dont_summarize+flags.dont_list+flags.allow_both
    000120  00   000222 000742 
                        000000 
    000121  0a   001237 000000 
    000122  aa   670000 000000 
                                   112  		
                                   113  	end_table azm_pdir_rq_table_
                                   114  
                                   115  	end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    001240  5a   000003 000000 
    001241  5a   000032 600000 
    001242  aa   000000 000000 
    001243  55   000013 000002 
    001244  5a   000002 400003 
    001245  55   000006 000013 
    001246  aa  022 141 172 155
    001247  aa  137 160 144 151
    001250  aa  162 137 162 161
    001251  aa  137 164 141 142
    001252  aa  154 145 137 000
    001253  55   000023 000003 
    001254  0a   000000 400000 
    001255  55   000016 000003 
    001256  aa  022 141 172 155         azm_pdir_rq_table_
    001257  aa  137 160 144 151
    001260  aa  162 137 162 161
    001261  aa  137 164 141 142
    001262  aa  154 145 137 000
    001263  55   000002 000013 
    001264  6a   000000 400002 
    001265  55   000026 000003 
    001266  aa  014 163 171 155         symbol_table
    001267  aa  142 157 154 137
    001270  aa  164 141 142 154
    001271  aa  145 000 000 000

DEFINITIONS HASH TABLE

    001272  aa   000000 000015 
    001273  aa   000000 000000 
    001274  aa   000000 000000 
    001275  aa   000000 000000 
    001276  aa   000000 000000 
    001277  aa   000000 000000 
    001300  aa   000000 000000 
    001301  5a   000023 000000 
    001302  aa   000000 000000 
    001303  aa   000000 000000 
    001304  aa   000000 000000 
    001305  aa   000000 000000 
    001306  aa   000000 000000 
    001307  5a   000013 000000 

EXTERNAL NAMES

    001310  aa  011 151 156 144         index_set
    001311  aa  145 170 137 163
    001312  aa  145 164 000 000
    001313  aa  013 152 165 163         just_return
    001314  aa  164 137 162 145
    001315  aa  164 165 162 156
    001316  aa  004 163 163 165         ssu_
    001317  aa  137 000 000 000
    001320  aa  015 163 145 154         self_identify
    001321  aa  146 137 151 144
    001322  aa  145 156 164 151
    001323  aa  146 171 000 000
    001324  aa  005 166 141 154         value
    001325  aa  165 145 000 000
    001326  aa  005 163 164 141         stack
    001327  aa  143 153 000 000
    001330  aa  003 163 145 164         set
    001331  aa  006 156 165 155         number
    001332  aa  142 145 162 000
    001333  aa  004 156 141 155         name
    001334  aa  145 000 000 000
    001335  aa  006 163 145 141         search
    001336  aa  162 143 150 000
    001337  aa  003 145 162 146         erf
    001340  aa  010 144 145 141         deadproc
    001341  aa  144 160 162 157
    001342  aa  143 000 000 000
    001343  aa  003 163 144 167         sdw
    001344  aa  007 162 145 160         replace
    001345  aa  154 141 143 145
    001346  aa  004 161 165 151         quit
    001347  aa  164 000 000 000
    001350  aa  016 141 172 155         azm_pds_trace_
    001351  aa  137 160 144 163
    001352  aa  137 164 162 141
    001353  aa  143 145 137 000
    001354  aa  002 155 143 000         mc
    001355  aa  012 154 151 163         list_dumps
    001356  aa  164 137 144 165
    001357  aa  155 160 163 000
    001360  aa  022 141 172 155         azm_address_space_
    001361  aa  137 141 144 144
    001362  aa  162 145 163 163
    001363  aa  137 163 160 141
    001364  aa  143 145 137 000
    001365  aa  014 150 151 163         history_regs
    001366  aa  164 157 162 171
    001367  aa  137 162 145 147
    001370  aa  163 000 000 000
    001371  aa  005 146 162 141         frame
    001372  aa  155 145 000 000
    001373  aa  023 141 172 155         azm_stack_requests_
    001374  aa  137 163 164 141
    001375  aa  143 153 137 162
    001376  aa  145 161 165 145
    001377  aa  163 164 163 137
    001400  aa  007 144 151 163         display
    001401  aa  160 154 141 171
    001402  aa  013 145 170 164         extract_seg
    001403  aa  162 141 143 164
    001404  aa  137 163 145 147
    001405  aa  017 141 172 155         azm_requests_1_
    001406  aa  137 162 145 161
    001407  aa  165 145 163 164
    001410  aa  163 137 061 137
    001411  aa  021 141 144 144         add_request_table
    001412  aa  137 162 145 161
    001413  aa  165 145 163 164
    001414  aa  137 164 141 142
    001415  aa  154 145 000 000
    001416  aa  017 141 172 155         azm_requests_2_
    001417  aa  137 162 145 161
    001420  aa  165 145 163 164
    001421  aa  163 137 062 137

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    001422  aa   000004 000000 
    001423  55   000050 000050 
    001424  aa   000004 000000 
    001425  55   000056 000053 
    001426  aa   000004 000000 
    001427  55   000156 000060 
    001430  aa   000004 000000 
    001431  55   000156 000064 
    001432  aa   000004 000000 
    001433  55   000133 000066 
    001434  aa   000004 000000 
    001435  55   000156 000070 
    001436  aa   000004 000000 
    001437  55   000156 000071 
    001440  aa   000004 000000 
    001441  55   000156 000073 
    001442  aa   000004 000000 
    001443  55   000156 000075 
    001444  aa   000004 000000 
    001445  55   000120 000077 
    001446  aa   000004 000000 
    001447  55   000120 000100 
    001450  aa   000004 000000 
    001451  55   000145 000103 
    001452  aa   000004 000000 
    001453  55   000156 000104 
    001454  aa   000004 000000 
    001455  55   000156 000106 
    001456  aa   000004 000000 
    001457  55   000110 000110 
    001460  aa   000004 000000 
    001461  55   000145 000114 
    001462  aa   000004 000000 
    001463  55   000120 000115 
    001464  aa   000004 000000 
    001465  55   000145 000125 
    001466  aa   000004 000000 
    001467  55   000133 000131 
    001470  aa   000004 000000 
    001471  55   000145 000140 
    001472  aa   000004 000000 
    001473  55   000145 000142 
    001474  aa   000004 000000 
    001475  55   000156 000151 
    001476  aa   000001 000000 
    001477  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    001500  5a   000162 000000 
    001501  5a   000164 000000 
    001502  5a   000166 000000 
    001503  5a   000170 000000 
    001504  5a   000172 000000 
    001505  5a   000174 000000 
    001506  5a   000176 000000 
    001507  5a   000200 000000 
    001510  5a   000202 000000 
    001511  5a   000204 000000 
    001512  5a   000206 000000 
    001513  5a   000210 000000 
    001514  5a   000212 000000 
    001515  5a   000214 000000 
    001516  5a   000216 000000 
    001517  5a   000220 000000 
    001520  5a   000222 000000 
    001521  5a   000224 000000 
    001522  5a   000226 000000 
    001523  5a   000230 000000 
    001524  5a   000232 000000 
    001525  5a   000234 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   001240 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000064 
    000007  a2   000000 000000 
    000010  9a   777770 0000 46         azm_requests_2_|add_request_table
    000011  5a   000265 0000 00
    000012  9a   777766 0000 46         azm_requests_1_|extract_seg
    000013  5a   000264 0000 00
    000014  9a   777764 0000 46         azm_requests_1_|display
    000015  5a   000263 0000 00
    000016  9a   777762 0000 46         azm_stack_requests_|frame
    000017  5a   000262 0000 00
    000020  9a   777760 0000 46         azm_requests_1_|history_regs
    000021  5a   000261 0000 00
    000022  9a   777756 0000 46         azm_address_space_|list_dumps
    000023  5a   000260 0000 00
    000024  9a   777754 0000 46         azm_requests_1_|mc
    000025  5a   000257 0000 00
    000026  9a   777752 0000 46         azm_pds_trace_|azm_pds_trace_
    000027  5a   000256 0000 00
    000030  9a   777750 0000 46         azm_requests_2_|quit
    000031  5a   000255 0000 00
    000032  9a   777746 0000 46         azm_requests_2_|replace
    000033  5a   000254 0000 00
    000034  9a   777744 0000 46         azm_requests_1_|sdw
    000035  5a   000253 0000 00
    000036  9a   777742 0000 46         azm_address_space_|deadproc
    000037  5a   000252 0000 00
    000040  9a   777740 0000 46         azm_address_space_|erf
    000041  5a   000251 0000 00
    000042  9a   777736 0000 46         azm_requests_2_|search
    000043  5a   000250 0000 00
    000044  9a   777734 0000 46         azm_requests_2_|name
    000045  5a   000247 0000 00
    000046  9a   777732 0000 46         azm_requests_2_|number
    000047  5a   000246 0000 00
    000050  9a   777730 0000 46         azm_requests_2_|set
    000051  5a   000245 0000 00
    000052  9a   777726 0000 46         azm_stack_requests_|stack
    000053  5a   000244 0000 00
    000054  9a   777724 0000 46         azm_requests_2_|value
    000055  5a   000243 0000 00
    000056  9a   777722 0000 46         azm_requests_2_|self_identify
    000057  5a   000242 0000 00
    000060  9a   777720 0000 46         ssu_|just_return
    000061  5a   000241 0000 00
    000062  9a   777716 0000 46         index_set|index_set
    000063  5a   000240 0000 00
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000004 
    000004  aa   000000 114732 
    000005  aa   732732 062314 
    000006  aa   000000 114775 
    000007  aa   667612 036232 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000257 
    000020  aa   000000 000150 
    000021  aa   000000 000234 
    000022  aa   000247 000150 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   040066 056067 
    000030  aa   040040 117143 
    000031  aa   164157 142145 
    000032  aa   162040 061071 
    000033  aa   070066 040040 
    000034  aa   107112 157150 
    000035  aa   156163 157156 
    000036  aa   056123 171163 
    000037  aa   115141 151156 
    000040  aa   164056 141040 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   154151 163164 
    000045  aa   040040 040040 
    000046  aa   040040 040040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040040 040040 
    000057  aa   040040 040040 
    000060  aa   040040 040040 
    000061  aa   040040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000003 
    000066  aa   000102 000067 
    000067  aa   147740 446360 
    000070  aa   000000 114774 
    000071  aa   461303 400000 
    000072  aa   000120 000050 
    000073  aa   133055 020064 
    000074  aa   000000 113310 
    000075  aa   612334 200000 
    000076  aa   000132 000066 
    000077  aa   147714 750316 
    000100  aa   000000 114774 
    000101  aa   453561 000000 
    000102  aa   076163 160145          >special_ldd>install>MR12.0-1206>azm_pdir_rq_table_.alm
    000103  aa   143151 141154 
    000104  aa   137154 144144 
    000105  aa   076151 156163 
    000106  aa   164141 154154 
    000107  aa   076115 122061 
    000110  aa   062056 060055 
    000111  aa   061062 060066 
    000112  aa   076141 172155 
    000113  aa   137160 144151 
    000114  aa   162137 162161 
    000115  aa   137164 141142 
    000116  aa   154145 137056 
    000117  aa   141154 155040 
    000120  aa   076154 144144          >ldd>include>ssu_request_macros.incl.alm
    000121  aa   076151 156143 
    000122  aa   154165 144145 
    000123  aa   076163 163165 
    000124  aa   137162 145161 
    000125  aa   165145 163164 
    000126  aa   137155 141143 
    000127  aa   162157 163056 
    000130  aa   151156 143154 
    000131  aa   056141 154155 
    000132  aa   076163 160145          >special_ldd>install>MR12.0-1206>stack_header.incl.alm
    000133  aa   143151 141154 
    000134  aa   137154 144144 
    000135  aa   076151 156163 
    000136  aa   164141 154154 
    000137  aa   076115 122061 
    000140  aa   062056 060055 
    000141  aa   061062 060066 
    000142  aa   076163 164141 
    000143  aa   143153 137150 
    000144  aa   145141 144145 
    000145  aa   162056 151156 
    000146  aa   143154 056141 
    000147  aa   154155 040040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

         123    .._00000.call            azm_pdir_rq_table_:        21.
         753    .._00000.info            azm_pdir_rq_table_:        21.
         225    .._00000.names           azm_pdir_rq_table_:        21.
         126    .._00001.call            azm_pdir_rq_table_:        25.
         763    .._00001.info            azm_pdir_rq_table_:        25.
         246    .._00001.names           azm_pdir_rq_table_:        25.
         131    .._00002.call            azm_pdir_rq_table_:        29.
         774    .._00002.info            azm_pdir_rq_table_:        29.
         267    .._00002.names           azm_pdir_rq_table_:        29.
         134    .._00003.call            azm_pdir_rq_table_:        34.
        1012    .._00003.info            azm_pdir_rq_table_:        34.
         310    .._00003.names           azm_pdir_rq_table_:        34.
         137    .._00004.call            azm_pdir_rq_table_:        38.
        1026    .._00004.info            azm_pdir_rq_table_:        38.
         331    .._00004.names           azm_pdir_rq_table_:        38.
         142    .._00005.call            azm_pdir_rq_table_:        43.
        1036    .._00005.info            azm_pdir_rq_table_:        43.
         352    .._00005.names           azm_pdir_rq_table_:        43.
         145    .._00006.call            azm_pdir_rq_table_:        47.
        1050    .._00006.info            azm_pdir_rq_table_:        47.
         373    .._00006.names           azm_pdir_rq_table_:        47.
         150    .._00007.call            azm_pdir_rq_table_:        51.
        1065    .._00007.info            azm_pdir_rq_table_:        51.
         414    .._00007.names           azm_pdir_rq_table_:        51.
         153    .._00010.call            azm_pdir_rq_table_:        55.
        1077    .._00010.info            azm_pdir_rq_table_:        55.
         435    .._00010.names           azm_pdir_rq_table_:        55.
         156    .._00011.call            azm_pdir_rq_table_:        59.
        1105    .._00011.info            azm_pdir_rq_table_:        59.
         456    .._00011.names           azm_pdir_rq_table_:        59.
         161    .._00012.call            azm_pdir_rq_table_:        64.
        1121    .._00012.info            azm_pdir_rq_table_:        64.
         477    .._00012.names           azm_pdir_rq_table_:        64.
         164    .._00013.call            azm_pdir_rq_table_:        68.
        1126    .._00013.info            azm_pdir_rq_table_:        68.
         510    .._00013.names           azm_pdir_rq_table_:        68.
         167    .._00014.call            azm_pdir_rq_table_:        72.
        1142    .._00014.info            azm_pdir_rq_table_:        72.
         531    .._00014.names           azm_pdir_rq_table_:        72.
         172    .._00015.call            azm_pdir_rq_table_:        76.
        1154    .._00015.info            azm_pdir_rq_table_:        76.
         552    .._00015.names           azm_pdir_rq_table_:        76.
         175    .._00016.call            azm_pdir_rq_table_:        80.
        1173    .._00016.info            azm_pdir_rq_table_:        80.
         573    .._00016.names           azm_pdir_rq_table_:        80.
         200    .._00017.call            azm_pdir_rq_table_:        84.
        1203    .._00017.info            azm_pdir_rq_table_:        84.
         614    .._00017.names           azm_pdir_rq_table_:        84.
         203    .._00020.call            azm_pdir_rq_table_:        89.
        1213    .._00020.info            azm_pdir_rq_table_:        89.
         635    .._00020.names           azm_pdir_rq_table_:        89.
         206    .._00021.call            azm_pdir_rq_table_:        93.
        1221    .._00021.info            azm_pdir_rq_table_:        93.
         646    .._00021.names           azm_pdir_rq_table_:        93.
         211    .._00022.call            azm_pdir_rq_table_:        97.
        1230    .._00022.info            azm_pdir_rq_table_:        97.
         667    .._00022.names           azm_pdir_rq_table_:        97.
         214    .._00023.call            azm_pdir_rq_table_:       101.
         710    .._00023.names           azm_pdir_rq_table_:       101.
         217    .._00024.call            azm_pdir_rq_table_:       105.
         721    .._00024.names           azm_pdir_rq_table_:       105.
         222    .._00025.call            azm_pdir_rq_table_:       111.
        1237    .._00025.info            azm_pdir_rq_table_:       111.
         742    .._00025.names           azm_pdir_rq_table_:       111.
      600000    .dft_mrsf                azm_pdir_rq_table_:        16.
           0    .dft_mruf                azm_pdir_rq_table_:        16,  111.
      400000    .dft_sf                  azm_pdir_rq_table_:        16.
           0    .dft_uf                  azm_pdir_rq_table_:        16,   21,   25,   29,   34,   38,   43,   47,   51,   55,
                                                                    59,   64,   68,   72,   76,   80,   84,   89,   93,   97,
                                                                   101,  105.
           0    .multics_doc_lth         azm_pdir_rq_table_:       111.
       40066    .rc                      azm_pdir_rq_table_:        16,   21,   25,   29,   34,   38,   43,   47,   51,   55,
                                                                    59,   64,   68,   72,   76,   80,   84,   89,   93,   97,
                                                                   101,  105,  111,  113.
      630000    .sf                      azm_pdir_rq_table_:        21,   25,   29,   34,   38,   43,   47,   51,   55,   59,
                                                                    64,   68,   72,   76,   80,   84,   89,   93,   97,  101,
                                                                   105,  111.
           0    .uf                      azm_pdir_rq_table_:        21,   25,   29,   34,   38,   43,   47,   51,   55,   59,
                                                                    64,   68,   72,   76,   80,   84,   89,   93,   97,  101,
                                                                   105,  111.
                add_request_table        azm_pdir_rq_table_:        21.
                azm_address_space_       azm_pdir_rq_table_:        43,   68,   72.
           0    azm_pdir_rq_table_       azm_pdir_rq_table_:        16.
          26    azm_pdir_rq_table_.rc    azm_pdir_rq_table_:        16,  113.
                azm_pds_trace_           azm_pdir_rq_table_:        51.
                azm_requests_1_          azm_pdir_rq_table_:        25,   29,   38,   47,   64.
                azm_requests_2_          azm_pdir_rq_table_:        21,   55,   59,   76,   80,   84,   89,   97,  101.
                azm_stack_requests_      azm_pdir_rq_table_:        34,   93.
         123    calls                    azm_pdir_rq_table_:        21,   25,   29,   34,   38,   43,   47,   51,   55,   59,
                                                                    64,   68,   72,   76,   80,   84,   89,   93,   97,  101,
                                                                   105,  111,
                                         ssu_request_macros:       311,  314.
        1170    call_offset              stack_header:        80.
                deadproc                 azm_pdir_rq_table_:        68.
                display                  azm_pdir_rq_table_:        29.
        1174    entry_offset             stack_header:        84.
                erf                      azm_pdir_rq_table_:        72.
                extract_seg              azm_pdir_rq_table_:        25.
      200000    flags.allow_af           azm_pdir_rq_table_:        16,
                                         ssu_request_macros:        33.
      600000    flags.allow_both         azm_pdir_rq_table_:        29,   68,   76,   80,   84,  105,  111,
                                         ssu_request_macros:        34.
      400000    flags.allow_command      azm_pdir_rq_table_:        16,   21,   25,   38,   43,   47,   51,   55,   59,   64,
                                                                    72,   89,   93,   97,  101,
                                         ssu_request_macros:        32.
       10000    flags.dont_list          azm_pdir_rq_table_:        34,  101,  105,  111,
                                         ssu_request_macros:        40.
       20000    flags.dont_summarize     azm_pdir_rq_table_:        34,  101,  105,  111,
                                         ssu_request_macros:        39.
       40000    flags.multics_request    azm_pdir_rq_table_:       111,
                                         ssu_request_macros:        37.
      100000    flags.unimplemented      azm_pdir_rq_table_:        34,
                                         ssu_request_macros:        36.
        4000    flags.unknown            ssu_request_macros:        42.
                frame                    azm_pdir_rq_table_:        34.
                history_regs             azm_pdir_rq_table_:        38.
                index_set                azm_pdir_rq_table_:       111.
         753    info                     azm_pdir_rq_table_:        21,   25,   29,   34,   38,   43,   47,   51,   55,   59,
                                                                    64,   68,   72,   76,   80,   84,   89,   93,   97,  111,
                                         ssu_request_macros:       313,  314.
                just_return              azm_pdir_rq_table_:       105.
                list_dumps               azm_pdir_rq_table_:        43.
                mc                       azm_pdir_rq_table_:        47.
                name                     azm_pdir_rq_table_:        80.
         225    names                    azm_pdir_rq_table_:        21,   25,   29,   34,   38,   43,   47,   51,   55,   59,
                                                                    64,   68,   72,   76,   80,   84,   89,   93,   97,  101,
                                                                   105,  111,
                                         ssu_request_macros:       312,  314.
                number                   azm_pdir_rq_table_:        84.
        1171    push_offset              stack_header:        81.
                quit                     azm_pdir_rq_table_:        55.
                replace                  azm_pdir_rq_table_:        59.
        1173    return_no_pop_offset     stack_header:        83.
        1172    return_offset            stack_header:        82.
                sdw                      azm_pdir_rq_table_:        64.
                search                   azm_pdir_rq_table_:        76.
                self_identify            azm_pdir_rq_table_:       101.
                set                      azm_pdir_rq_table_:        89.
                ssu_                     azm_pdir_rq_table_:       105.
          73    stach_header.trace_top_ptr     stack_header:        62.
                stack                    azm_pdir_rq_table_:        93.
          66    stack_header.assign_linkage_ptr      stack_header:        59.
          32    stack_header.bar_mode_sp       stack_header:        42.
          36    stack_header.call_op_ptr       stack_header:        44.
          10    stack_header.clr_ptr     stack_header:        27.
           6    stack_header.combined_stat_ptr       stack_header:        25.
           4    stack_header.cpm_data_ptr      stack_header:        24.
          13    stack_header.cpm_enabled       stack_header:        32.
          13    stack_header.cur_lot_size      stack_header:        31.
          64    stack_header.ect_ptr     stack_header:        58.
          46    stack_header.entry_op_ptr      stack_header:        49.
          70    stack_header.heap_header_ptr   stack_header:        60.
          74    stack_header.in_trace    stack_header:        63.
          52    stack_header.isot_ptr    stack_header:        52.
          26    stack_header.lot_ptr     azm_pdir_rq_table_:        21,   25,   29,   34,   38,   43,   47,   51,   55,   59,
                                                                    64,   68,   72,   76,   80,   84,   89,   93,   97,  101,
                                                                   105,  111,
                                         stack_header:        39.
          12    stack_header.main_proc_invoked       stack_header:        29.
          12    stack_header.max_lot_size      stack_header:        28.
          20    stack_header.parent_ptr  stack_header:        36.
          34    stack_header.pl1_operators_ptr       stack_header:        43.
          40    stack_header.push_op_ptr       stack_header:        46.
          42    stack_header.return_op_ptr     stack_header:        47.
          44    stack_header.ret_no_pop_op_ptr       stack_header:        48.
          62    stack_header.rnt_ptr     stack_header:        57.
          12    stack_header.run_unit_depth    stack_header:        30.
          54    stack_header.sct_ptr     stack_header:        53.
          30    stack_header.signal_ptr  stack_header:        41.
          22    stack_header.stack_begin_ptr   stack_header:        37.
          24    stack_header.stack_end_ptr     stack_header:        38.
          14    stack_header.system_free_ptr   stack_header:        33.
          60    stack_header.sys_link_info_ptr       stack_header:        56.
          72    stack_header.trace_frames      stack_header:        61.
          50    stack_header.trans_op_tv_ptr   stack_header:        51.
          56    stack_header.unwinder_ptr      stack_header:        54.
          16    stack_header.user_free_ptr     stack_header:        34.
         100    stack_header_end         stack_header:        64.
           0    tables                   azm_pdir_rq_table_:        16,   21,   25,   29,   34,   38,   43,   47,   51,   55,
                                                                    59,   64,   68,   72,   76,   80,   84,   89,   93,   97,
                                                                   101,  105,  111,
                                         ssu_request_macros:       310,  314.
           0    trace_frames.count       stack_header:        69.
           1    trace_frames.top_ptr     stack_header:        70.
         551    tv_offset                stack_header:        75,   80,   81,   82,   83,   84.
                value                    azm_pdir_rq_table_:        97.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
