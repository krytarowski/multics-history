Compilation listing of file >2.1spec>online>mib083074>bcpl_cg_interface.bcpl.
Compilation performed for Martinson.SysMaint.a at 01/24/75  0657.6 mst Fri.
Compiled by BCPL version 3.4, August 1973.  Compiler updated at 09/25/73  0959.1 mst Tue.
Options applied:  source  xref  alist  optimize  6180.

     1	//  Interface module between semantic translator and code generator of BCPL compiler.
     2	//  Last modified on 06/06/74 at 18:24:52 by R F Mabee.
     3	//  First installed as Version 3.4 by R F Mabee.
     4	
     5	//  Copyright (c) 1974 by Massachusetts Institute of Technology and Honeywell Information Systems, Inc.
     6	
     7	//  General permission is granted to copy and use this program, but not to sell it, provided that the above
     8	//  copyright statement is given.  Contact Information Processing Services, MIT, for further information.
     9	//  Please contact R F Mabee at MIT for information on this program and versions for other machines.
    10	
    11	get "bcpl_trans_head"
	     1	//  Declarations for the semantic translator.
	     2	//  Last modified on 07/21/73 at 20:36:10 by R F Mabee.
	     3	//  Revised during 6180 bootstrap, and installed as Version 3.4 by R F Mabee.
	     4	//  First installed as Version 2.7 by R F Mabee.
	     5	
	     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
	     7	//  This file may only be reproduced or modified with explicit written
	     8	//  permission of the author.  Permission is hereby extended to those
	     9	//  persons responsible for operating the Multics system to make such
	    10	//  copies as are normally required to ensure the integrity of the Multics
	    11	//  file system.  Permission is also hereby extended to those persons
	    12	//  responsible for maintaining the Multics program libraries to make such
	    13	//  copies as are normally required for online installations.
	    14	
	    15	get "bcpl_compiler_head"
		     1	//  Declarations common to the entire BCPL compiler.
		     2	//  Last modified on 07/28/73 at 03:56:32 by R F Mabee.
		     3	//  Installed on 6180 as Version 3.4, R F Mabee.
		     4	//  First installed on 645 as Version 2.7 by R F Mabee.
		     5	
		     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
		     7	//  This file may only be reproduced or modified with explicit written
		     8	//  permission of the author.  Permission is hereby extended to those
		     9	//  persons responsible for operating the Multics system to make such
		    10	//  copies as are normally required to ensure the integrity of the Multics
		    11	//  file system.  Permission is also hereby extended to those persons
		    12	//  responsible for maintaining the Multics program libraries to make such
		    13	//  copies as are normally required for online installations.
		    14	
		    15	external
		    16	     $(	Readch = "bcpl_machine_code_$Readch"		//  Library routines used by the compiler.
		    17		Writech = "bcpl_machine_code_$Writech"
		    18		WriteS = "bcpl_stream_io_$WriteS"
		    19		WriteN = "bcpl_stream_io_$WriteN"
		    20		Format = "bcpl_stream_io_$Format"
		    21		Packstring = "bcpl_machine_code_$Packstring"
		    22		Unpackstring = "bcpl_machine_code_$Unpackstring"
		    23		RemoveEscapes = "bcpl_conversions_$RemoveEscapes"
		    24		EqualString = "bcpl_strings_$EqualString"
		    25		CompareStrings = "bcpl_strings_$CompareStrings"	//  Alphabetic comparison.
		    26		Concatenate = "bcpl_strings_$Concatenate"
		    27		ConvertStoN = "bcpl_conversions_$ConvertStoN"
		    28		ConvertNtoS = "bcpl_conversions_$ConvertNtoS"
		    29		Length = "bcpl_strings_$Length"		//  Number of characters.
		    30		LengthInWords = "bcpl_strings_$LengthInWords"	//  Length of packed string.
		    31		RandomI = "bcpl_arithmetic_$RandomI"
		    32	
		    33		Newvec = "bcpl_utility$Newvec"		//  Utility routines used throughout the compiler.
		    34		Freevec = "bcpl_utility$Freevec"
		    35		List1 = "bcpl_utility$List1"
		    36		List2 = "bcpl_utility$List2"
		    37		List3 = "bcpl_utility$List3"
		    38		List4 = "bcpl_utility$List4"
		    39		List5 = "bcpl_utility$List5"
		    40		List6 = "bcpl_utility$List6"
		    41		StoreString = "bcpl_utility$StoreString"
		    42		PushInput = "bcpl_utility$PushInput"
		    43		PopInput = "bcpl_utility$PopInput"
		    44		MakeTimeString = "bcpl_utility$MakeTimeString"
		    45		Nextparam = "bcpl_utility$Nextparam"
		    46		FormCharconst = "bcpl_utility$FormCharconst"
		    47		FormStringconst = "bcpl_utility$FormStringconst"
		    48	
		    49		CaeReport = "bcpl_report$CaeReport"
		    50		Transreport = "bcpl_report$Transreport"
		    51		CGreport = "bcpl_report$CGreport"
		    52	
		    53		Nextsymb = "bcpl_lex0$Nextsymb"
		    54	
		    55		SymbolName = "bcpl_plist$SymbolName"
		    56		FindPrintName = "bcpl_plist$FindPrintName"
		    57		EnterIntoCrossreference = "bcpl_plist$EnterIntoCrossreference"
		    58	
		    59		GetVersion = "bcpl_version$GetVersion"		//  Routines used only by the driver.
		    60		UtilitiesInit = "bcpl_utility$UtilitiesInit"
		    61		Cleanup = "bcpl_utility$Cleanup"
		    62		GetStream = "bcpl_utility$GetStream"
		    63	
		    64		CAE = "bcpl_cae0$CAE"
		    65		LexInit = "bcpl_lex0$LexInit"
		    66	
		    67		Pname = "bcpl_plist$Pname"
		    68		Plist = "bcpl_plist$Plist"
		    69	
		    70		Trans = "bcpl_trans0$Trans"
		    71		CgInit = "bcpl_cg0$CgInit"
		    72		BuildObject = "bcpl_cg0$BuildObject"
		    73		WriteObjectListing = "bcpl_cg0$WriteObjectListing"
		    74	     $)
		    75	
		    76	global		//  Globals are reserved in blocks as follows:
		    77	     $(	//    0 -  31	system
		    78		//   32 -  99	library
		    79		//  100 - 149	options and other common cells
		    80		//  150 - 159	metering cells
		    81		//  160 - 169	bcpl_utility
		    82		//  170 - 199	to be assigned
		    83		//  200 - 229	lexical phase
		    84		//  230 - 249	syntax analyzer
		    85		//  250 - 299	translator
		    86		//  300 - 399	code generator
		    87	
		    88			//  Cells used for communication with the library.
		    89		OUTPUT		: 32
		    90		INPUT		: 33
		    91		MONITOR		: 34
		    92		Ch		: 36
		    93	
		    94			//  Options for this compilation.
		    95		Listing		: 100
		    96		UpperCase		: 101
		    97		PPrep		: 102
		    98		Crep		: 103
		    99		Symbols		: 104
		   100		LineMap		: 105
		   101		Optimize		: 106
		   102		Machine		: 107
		   103		Xref		: 108
		   104		OcodeSw		: 109
		   105		HaveListingFile	: 110
		   106		QuietSw		: 111
		   107	
		   108			//  Other information about this compilation.
		   109		CompilerVersionString : 120
		   110		CompilerVersionNumber : 121
		   111		CompilerDTMString	: 122
		   112		CompilerDTM	: 123
		   113		TimeNowString	: 124
		   114		TimeNow		: 125
		   115		OptionString	: 126
		   116		FileNames		: 127
		   117		FilesInfo		: 128
		   118		FileCount		: 129
		   119		ProgramName	: 130
		   120		UserID		: 131
		   121	
		   122			//  Working variables needing global scope.
		   123		LineCount		: 140
		   124		Errorsw		: 141
		   125		NAMECHAIN		: 142
		   126		Symb		: 143
		   127		DictionaryEntry	: 144
		   128		Column		: 145
		   129	     $)
		   130	manifest
		   131	     $(	GlobalTemp = 199  $)	//  Number of cell available for local, temporary use.
		   132	
		   133	manifest
		   134	     $(	Left = 18; Right = $8777777
		   135		Endofstreamch = $87777
		   136		Even = $87777777777776
		   137		Vmax = 511
		   138		LineMask = $817777; FileShift = 13	//  Breakdown of line count.
		   139		UnexpectedCase = 99		//  Error code for use throughout compiler.
		   140	     $)
	    16	get "bcpl_symbols"
		     1	//  All symbols used in the interface between any two phases of the compiler are defined here.
		     2	//  This includes all canonical symbols, syntax tree nodes, and XOCODE operators.
		     3	//  Last modified on 07/08/73 at 22:55:31 by R F Mabee.
		     4	//  Revisions installed in Version 3.4 on 6180, R F Mabee.
		     5	//  First installed with Version 2.7 by R F Mabee.
		     6	
		     7	//  Copyright (c) 1973 by the author, Robert F. Mabee.
		     8	//  This file may only be reproduced or modified with explicit written
		     9	//  permission of the author.  Permission is hereby extended to those
		    10	//  persons responsible for operating the Multics system to make such
		    11	//  copies as are normally required to ensure the integrity of the Multics
		    12	//  file system.  Permission is also hereby extended to those persons
		    13	//  responsible for maintaining the Multics program libraries to make such
		    14	//  copies as are normally required for online installations.
		    15	
		    16	manifest
		    17	     $(	AND_S = 1
		    18		ASSIGN_S = 2
		    19		BE_S = 3
		    20		BIT_S = 4
		    21		BREAK_S = 5
		    22		BY_S = 6
		    23		CALL_S = 07
		    24		CASE_S = 08
		    25	
		    26		CHAR_S = 10
		    27		CHARCONST_S = 11
		    28		COLON_S = 12
		    29		COMMA_S = 13
		    30		COND_S = 14
		    31		CONSTANT_S = 15
		    32		CONSTDEF_S = 16
		    33		DEFAULT_S = 17
		    34		DIV_F = 18
		    35	
		    36		DIV_S = 20
		    37		DO_S = 21
		    38		DOUBLE_S = 22
		    39		ENDCASE_S = 23
		    40		ENDPROG_S = 24
		    41		ERROR_S = 25
		    42		EQ_F = 26
		    43		EQ_S = 27
		    44		EQV_S = 28
		    45	
		    46		EXTERNAL_S = 30
		    47		FALSE_S = 31
		    48		FINISH_S = 32
		    49		FIXED_S = 33
		    50		FLOAT_S = 34
		    51		FNAP_S = 35
		    52		FNDEF_S = 36
		    53		FOR_S = 37
		    54		GE_F = 38
		    55	
		    56		GE_S = 40
		    57		GET_S = 41
		    58		GLOBAL_S = 42
		    59		GOTO_S = 43
		    60		GR_F = 44
		    61		GR_S = 45
		    62		IF_S = 46
		    63		IFNOT_S = 47
		    64		IFSO_S = 48
		    65	
		    66		INTO_S = 50
		    67		LABDEF_S = 51
		    68		LABEL_S = 52
		    69		LE_F = 53
		    70		LE_S = 54
		    71		LENGTH_S = 55
		    72		LET_S = 56
		    73		LIST_S = 57
		    74		LOCAL_S = 58
		    75	
		    76		LOGAND_S = 60
		    77		LOGOR_S = 61
		    78		LOOP_S = 62
		    79		LS_F = 63
		    80		LS_S = 64
		    81		LSHIFT_S = 65
		    82		LV_S = 66
		    83		LVECAP_S = 67
		    84		LV_ARG_OUT = 68
		    85	
		    86		LV_FNAP_RESULT = 70
		    87		LV_GLOBAL = 71
		    88		LV_LOCAL = 72
		    89		LV_STATIC = 73
		    90		LV_TEMP = 74
		    91		MAIN_S = 75
		    92		MANIFEST_S = 76
		    93		MINUS_F = 77
		    94		MINUS_S = 78
		    95	
		    96		MULT_F = 80
		    97		MULT_S = 81
		    98		NAME_S = 82
		    99		NEG_F = 83
		   100		NEG_S = 84
		   101		NEQV_S = 85
		   102		NE_F = 86
		   103		NE_S = 87
		   104		NIL_S = 88
		   105	
		   106		NOT_S = 90
		   107		NUMBER_S = 91
		   108		OFFSET_S = 92
		   109		OR_S = 93
		   110		PLUS_F = 94
		   111		PLUS_S = 95
		   112		POINTER_S = 96
		   113		POS_F = 97
		   114		POS_S = 98
		   115	
		   116		RBRA_S = 100
		   117		REGISTER_S = 101
		   118		REL_S = 102
		   119		REM_S = 103
		   120		REP_S = 104
		   121		REPEAT_S = 105
		   122		REPEATUNTIL_S = 106
		   123		REPEATWHILE_S = 107
		   124		RESULTIS_S = 108
		   125	
		   126		RETURN_S = 110
		   127		RKET_S = 111
		   128		RSHIFT_S = 112
		   129		RTAP_S = 113
		   130		RTDEF_S = 114
		   131		RV_S = 115
		   132		SBRA_S = 116
		   133		SECTBEGIN_S = 117
		   134		SECTBRA_S = 118
		   135	
		   136		SECTEND_S = 120
		   137		SECTKET_S = 121
		   138		SEMICOLON_S = 122
		   139		SKET_S = 123
		   140		STATIC_S = 124
		   141		STRING_S = 125
		   142		STRINGCONST_S = 126
		   143		STRUCTURE_S = 127
		   144		SWITCHON_S = 128
		   145	
		   146		TABLE_S = 130
		   147		TEMP_S = 131
		   148		TEST_S = 132
		   149		TO_S = 133
		   150		TRUE_S = 134
		   151		TYPE_S = 135
		   152		UNLESS_S = 136
		   153		UNTIL_S = 137
		   154		VALDEF_S = 138
		   155	
		   156		VALOF_S = 140
		   157		VEC_S = 141
		   158		VECAP_S = 142
		   159		WHILE_S = 143
		   160	     $)
	    17	get "bcpl_trans_codes"
		     1	//  Report codes for the translator phase.
		     2	//  Last modified on 07/21/73 at 22:14:49 by R F Mabee.
		     3	//  Revisions for 6180 bootstrap installed with Version 3.4, R F Mabee.
		     4	//  First installed in Version 2.7 by R F Mabee.
		     5	
		     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
		     7	//  This file may only be reproduced or modified with explicit written
		     8	//  permission of the author.  Permission is hereby extended to those
		     9	//  persons responsible for operating the Multics system to make such
		    10	//  copies as are normally required to ensure the integrity of the Multics
		    11	//  file system.  Permission is also hereby extended to those persons
		    12	//  responsible for maintaining the Multics program libraries to make such
		    13	//  copies as are normally required for online installations.
		    14	
		    15	manifest		//  200 - 299 are reserved for Trans.
		    16	     $(	BadCall		= 200
		    17		BadDescriptors	= 201
		    18		BadLink		= 202
		    19		Conformality	= 203
		    20		DupDefault	= 204
		    21		DupName		= 205
		    22		FreeVar		= 206
		    23		LmodeRequired	= 207
		    24		NegVector		= 208
		    25	
		    26		NoLoop		= 210
		    27		NoSwitch		= 211
		    28		NotConstant	= 212
		    29		NotInsideRtdef	= 213
		    30		NotName		= 214
		    31		NoValof		= 215
		    32		UndefName		= 216
		    33		UnrecognizedExpression= 217
		    34	     $)
	    18	
	    19	external
	    20	     $(	Transbody = "bcpl_trans1$Transbody"		//  The routines of Trans.
	    21	
	    22		Transdef = "bcpl_trans2$Transdef"
	    23		Addlocal = "bcpl_trans2$Addlocal"
	    24		Declitem = "bcpl_trans2$Declitem"
	    25		Declnames = "bcpl_trans2$Declnames"
	    26		Decllabels = "bcpl_trans2$Decllabels"
	    27		Checkdistinct = "bcpl_trans2$Checkdistinct"
	    28		Cellwithname = "bcpl_trans2$Cellwithname"
	    29		Removenames = "bcpl_trans2$Removenames"
	    30	
	    31		TransConditional = "bcpl_trans3$TransConditional"
	    32		TransFor = "bcpl_trans3$TransFor"
	    33		WalkList = "bcpl_trans3$WalkList"
	    34		ListSize = "bcpl_trans3$ListSize"
	    35		Assignlist = "bcpl_trans3$Assignlist"
	    36		Target = "bcpl_trans3$Target"
	    37		TransLoop = "bcpl_trans3$TransLoop"
	    38	
	    39		CompileExpression = "bcpl_trans4$CompileExpression"
	    40		CompileOperand = "bcpl_trans4$CompileOperand"
	    41		SetResult = "bcpl_trans4$SetResult"
	    42	
	    43		Evalconst = "bcpl_trans5$Evalconst"
	    44		PartialEvalconst = "bcpl_trans5$PartialEvalconst"
	    45		IsConst = "bcpl_trans5$IsConst"
	    46		EvaluateOperator = "bcpl_trans5$EvaluateOperator"
	    47		CountTemporaries = "bcpl_trans5$CountTemporaries"
	    48		IsRelational = "bcpl_trans5$IsRelational"
	    49	
	    50		ResetSSP = "bcpl_trans6$ResetSSP"
	    51		AllocateLocal = "bcpl_trans6$AllocateLocal"
	    52		DeallocateLocal = "bcpl_trans6$DeallocateLocal"
	    53		MakeTemp = "bcpl_trans6$MakeTemp"
	    54		MakeCopy = "bcpl_trans6$MakeCopy"
	    55		PutBackTemps = "bcpl_trans6$PutBackTemps"
	    56		TransFnap = "bcpl_trans6$TransFnap"
	    57		TransSystemCall = "bcpl_trans6$TransSystemCall"
	    58	
	    59		GenerateLabel = "bcpl_cg_interface$GenerateLabel"
	    60		GenerateJump = "bcpl_cg_interface$GenerateJump"
	    61		GenerateRtdefBegin = "bcpl_cg_interface$GenerateRtdefBegin"
	    62		GenerateRtdefEnd = "bcpl_cg_interface$GenerateRtdefEnd"
	    63		ReserveArglist = "bcpl_cg_interface$ReserveArglist"
	    64		GenerateArg = "bcpl_cg_interface$GenerateArg"
	    65		GenerateFnap = "bcpl_cg_interface$GenerateFnap"
	    66		ReserveSystemArglist = "bcpl_cg_interface$ReserveSystemArglist"
	    67		GenerateSystemArg = "bcpl_cg_interface$GenerateSystemArg"
	    68		GenerateSystemCall = "bcpl_cg_interface$GenerateSystemCall"
	    69		GenerateResultBlock = "bcpl_cg_interface$GenerateResultBlock"
	    70		GenerateResultValue = "bcpl_cg_interface$GenerateResultValue"
	    71		GenerateClaimResult = "bcpl_cg_interface$GenerateClaimResult"
	    72		GenerateGoto = "bcpl_cg_interface$GenerateGoto"
	    73		GenerateFinish = "bcpl_cg_interface$GenerateFinish"
	    74		GenerateSwitch = "bcpl_cg_interface$GenerateSwitch"
	    75		GenerateMonadicOperator = "bcpl_cg_interface$GenerateMonadicOperator"
	    76		GenerateDiadicOperator = "bcpl_cg_interface$GenerateDiadicOperator"
	    77		GenerateOffsetOperator = "bcpl_cg_interface$GenerateOffsetOperator"
	    78		GenerateMonadicConditional = "bcpl_cg_interface$GenerateMonadicConditional"
	    79		GenerateDiadicConditional = "bcpl_cg_interface$GenerateDiadicConditional"
	    80		GenerateSSP = "bcpl_cg_interface$GenerateSSP"
	    81		GenerateLineNumber = "bcpl_cg_interface$GenerateLineNumber"
	    82		StoreAll = "bcpl_cg_interface$StoreAll"
	    83		CgFinish = "bcpl_cg_interface$CgFinish"
	    84	     $)
	    85	global		//  250 - 299 are reserved for Trans.
	    86	     $(	ArgInfo		: 250
	    87		BreakLabel	: 251
	    88		CaseFirst	: 252
	    89		CaseList		: 253
	    90		DefaultLabel	: 254
	    91		DefList		: 255
	    92		DvecC		: 246
	    93		DvecP		: 257
	    94		EndcaseLabel	: 258
	    95	
	    96		EnvBase		: 260
	    97		FreeLocalList	: 261
	    98		InsideRtdef	: 262
	    99		LHSpointer	: 263
	   100		LoopFlag		: 264
	   101		LoopLabel		: 265
	   102		PendingTemps	: 266
	   103		ReturnLabel	: 267
	   104		RtdefList		: 268
	   105	
	   106		RtdefNesting	: 270
	   107		SSP		: 271
	   108		StaticAllocationCounter : 272
	   109		StaticFirst	: 273
	   110		StaticList	: 274
	   111		SwitchFlag	: 275
	   112		TableCell		: 276
	   113		ValofFlag		: 277
	   114		ValofLabel	: 278
	   115	     $)
	   116	manifest
	   117	     $(	DescSize = 2
	   118		DvecSize = 4
	   119	     $)
    12	get "bcpl_cg_head"
	     1	//  Declarations for the code generator.
	     2	//  Last modified on 08/15/73 at 00:31:50 by R F Mabee.
	     3	//  Code generator substantially modified during 6180 bootstrap, and installed with Version 3.4, R F Mabee.
	     4	//  First installed as Version 2.7, R F Mabee.
	     5	
	     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
	     7	//  This file may only be reproduced or modified with explicit written
	     8	//  permission of the author.  Permission is hereby extended to those
	     9	//  persons responsible for operating the Multics system to make such
	    10	//  copies as are normally required to ensure the integrity of the Multics
	    11	//  file system.  Permission is also hereby extended to those persons
	    12	//  responsible for maintaining the Multics program libraries to make such
	    13	//  copies as are normally required for online installations.
	    14	
	    15	get "bcpl_compiler_head"
		     1	//  Declarations common to the entire BCPL compiler.
		     2	//  Last modified on 07/28/73 at 03:56:32 by R F Mabee.
		     3	//  Installed on 6180 as Version 3.4, R F Mabee.
		     4	//  First installed on 645 as Version 2.7 by R F Mabee.
		     5	
		     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
		     7	//  This file may only be reproduced or modified with explicit written
		     8	//  permission of the author.  Permission is hereby extended to those
		     9	//  persons responsible for operating the Multics system to make such
		    10	//  copies as are normally required to ensure the integrity of the Multics
		    11	//  file system.  Permission is also hereby extended to those persons
		    12	//  responsible for maintaining the Multics program libraries to make such
		    13	//  copies as are normally required for online installations.
		    14	
		    15	external
		    16	     $(	Readch = "bcpl_machine_code_$Readch"		//  Library routines used by the compiler.
		    17		Writech = "bcpl_machine_code_$Writech"
		    18		WriteS = "bcpl_stream_io_$WriteS"
		    19		WriteN = "bcpl_stream_io_$WriteN"
		    20		Format = "bcpl_stream_io_$Format"
		    21		Packstring = "bcpl_machine_code_$Packstring"
		    22		Unpackstring = "bcpl_machine_code_$Unpackstring"
		    23		RemoveEscapes = "bcpl_conversions_$RemoveEscapes"
		    24		EqualString = "bcpl_strings_$EqualString"
		    25		CompareStrings = "bcpl_strings_$CompareStrings"	//  Alphabetic comparison.
		    26		Concatenate = "bcpl_strings_$Concatenate"
		    27		ConvertStoN = "bcpl_conversions_$ConvertStoN"
		    28		ConvertNtoS = "bcpl_conversions_$ConvertNtoS"
		    29		Length = "bcpl_strings_$Length"		//  Number of characters.
		    30		LengthInWords = "bcpl_strings_$LengthInWords"	//  Length of packed string.
		    31		RandomI = "bcpl_arithmetic_$RandomI"
		    32	
		    33		Newvec = "bcpl_utility$Newvec"		//  Utility routines used throughout the compiler.
		    34		Freevec = "bcpl_utility$Freevec"
		    35		List1 = "bcpl_utility$List1"
		    36		List2 = "bcpl_utility$List2"
		    37		List3 = "bcpl_utility$List3"
		    38		List4 = "bcpl_utility$List4"
		    39		List5 = "bcpl_utility$List5"
		    40		List6 = "bcpl_utility$List6"
		    41		StoreString = "bcpl_utility$StoreString"
		    42		PushInput = "bcpl_utility$PushInput"
		    43		PopInput = "bcpl_utility$PopInput"
		    44		MakeTimeString = "bcpl_utility$MakeTimeString"
		    45		Nextparam = "bcpl_utility$Nextparam"
		    46		FormCharconst = "bcpl_utility$FormCharconst"
		    47		FormStringconst = "bcpl_utility$FormStringconst"
		    48	
		    49		CaeReport = "bcpl_report$CaeReport"
		    50		Transreport = "bcpl_report$Transreport"
		    51		CGreport = "bcpl_report$CGreport"
		    52	
		    53		Nextsymb = "bcpl_lex0$Nextsymb"
		    54	
		    55		SymbolName = "bcpl_plist$SymbolName"
		    56		FindPrintName = "bcpl_plist$FindPrintName"
		    57		EnterIntoCrossreference = "bcpl_plist$EnterIntoCrossreference"
		    58	
		    59		GetVersion = "bcpl_version$GetVersion"		//  Routines used only by the driver.
		    60		UtilitiesInit = "bcpl_utility$UtilitiesInit"
		    61		Cleanup = "bcpl_utility$Cleanup"
		    62		GetStream = "bcpl_utility$GetStream"
		    63	
		    64		CAE = "bcpl_cae0$CAE"
		    65		LexInit = "bcpl_lex0$LexInit"
		    66	
		    67		Pname = "bcpl_plist$Pname"
		    68		Plist = "bcpl_plist$Plist"
		    69	
		    70		Trans = "bcpl_trans0$Trans"
		    71		CgInit = "bcpl_cg0$CgInit"
		    72		BuildObject = "bcpl_cg0$BuildObject"
		    73		WriteObjectListing = "bcpl_cg0$WriteObjectListing"
		    74	     $)
		    75	
		    76	global		//  Globals are reserved in blocks as follows:
		    77	     $(	//    0 -  31	system
		    78		//   32 -  99	library
		    79		//  100 - 149	options and other common cells
		    80		//  150 - 159	metering cells
		    81		//  160 - 169	bcpl_utility
		    82		//  170 - 199	to be assigned
		    83		//  200 - 229	lexical phase
		    84		//  230 - 249	syntax analyzer
		    85		//  250 - 299	translator
		    86		//  300 - 399	code generator
		    87	
		    88			//  Cells used for communication with the library.
		    89		OUTPUT		: 32
		    90		INPUT		: 33
		    91		MONITOR		: 34
		    92		Ch		: 36
		    93	
		    94			//  Options for this compilation.
		    95		Listing		: 100
		    96		UpperCase		: 101
		    97		PPrep		: 102
		    98		Crep		: 103
		    99		Symbols		: 104
		   100		LineMap		: 105
		   101		Optimize		: 106
		   102		Machine		: 107
		   103		Xref		: 108
		   104		OcodeSw		: 109
		   105		HaveListingFile	: 110
		   106		QuietSw		: 111
		   107	
		   108			//  Other information about this compilation.
		   109		CompilerVersionString : 120
		   110		CompilerVersionNumber : 121
		   111		CompilerDTMString	: 122
		   112		CompilerDTM	: 123
		   113		TimeNowString	: 124
		   114		TimeNow		: 125
		   115		OptionString	: 126
		   116		FileNames		: 127
		   117		FilesInfo		: 128
		   118		FileCount		: 129
		   119		ProgramName	: 130
		   120		UserID		: 131
		   121	
		   122			//  Working variables needing global scope.
		   123		LineCount		: 140
		   124		Errorsw		: 141
		   125		NAMECHAIN		: 142
		   126		Symb		: 143
		   127		DictionaryEntry	: 144
		   128		Column		: 145
		   129	     $)
		   130	manifest
		   131	     $(	GlobalTemp = 199  $)	//  Number of cell available for local, temporary use.
		   132	
		   133	manifest
		   134	     $(	Left = 18; Right = $8777777
		   135		Endofstreamch = $87777
		   136		Even = $87777777777776
		   137		Vmax = 511
		   138		LineMask = $817777; FileShift = 13	//  Breakdown of line count.
		   139		UnexpectedCase = 99		//  Error code for use throughout compiler.
		   140	     $)
	    16	get "bcpl_symbols"
		     1	//  All symbols used in the interface between any two phases of the compiler are defined here.
		     2	//  This includes all canonical symbols, syntax tree nodes, and XOCODE operators.
		     3	//  Last modified on 07/08/73 at 22:55:31 by R F Mabee.
		     4	//  Revisions installed in Version 3.4 on 6180, R F Mabee.
		     5	//  First installed with Version 2.7 by R F Mabee.
		     6	
		     7	//  Copyright (c) 1973 by the author, Robert F. Mabee.
		     8	//  This file may only be reproduced or modified with explicit written
		     9	//  permission of the author.  Permission is hereby extended to those
		    10	//  persons responsible for operating the Multics system to make such
		    11	//  copies as are normally required to ensure the integrity of the Multics
		    12	//  file system.  Permission is also hereby extended to those persons
		    13	//  responsible for maintaining the Multics program libraries to make such
		    14	//  copies as are normally required for online installations.
		    15	
		    16	manifest
		    17	     $(	AND_S = 1
		    18		ASSIGN_S = 2
		    19		BE_S = 3
		    20		BIT_S = 4
		    21		BREAK_S = 5
		    22		BY_S = 6
		    23		CALL_S = 07
		    24		CASE_S = 08
		    25	
		    26		CHAR_S = 10
		    27		CHARCONST_S = 11
		    28		COLON_S = 12
		    29		COMMA_S = 13
		    30		COND_S = 14
		    31		CONSTANT_S = 15
		    32		CONSTDEF_S = 16
		    33		DEFAULT_S = 17
		    34		DIV_F = 18
		    35	
		    36		DIV_S = 20
		    37		DO_S = 21
		    38		DOUBLE_S = 22
		    39		ENDCASE_S = 23
		    40		ENDPROG_S = 24
		    41		ERROR_S = 25
		    42		EQ_F = 26
		    43		EQ_S = 27
		    44		EQV_S = 28
		    45	
		    46		EXTERNAL_S = 30
		    47		FALSE_S = 31
		    48		FINISH_S = 32
		    49		FIXED_S = 33
		    50		FLOAT_S = 34
		    51		FNAP_S = 35
		    52		FNDEF_S = 36
		    53		FOR_S = 37
		    54		GE_F = 38
		    55	
		    56		GE_S = 40
		    57		GET_S = 41
		    58		GLOBAL_S = 42
		    59		GOTO_S = 43
		    60		GR_F = 44
		    61		GR_S = 45
		    62		IF_S = 46
		    63		IFNOT_S = 47
		    64		IFSO_S = 48
		    65	
		    66		INTO_S = 50
		    67		LABDEF_S = 51
		    68		LABEL_S = 52
		    69		LE_F = 53
		    70		LE_S = 54
		    71		LENGTH_S = 55
		    72		LET_S = 56
		    73		LIST_S = 57
		    74		LOCAL_S = 58
		    75	
		    76		LOGAND_S = 60
		    77		LOGOR_S = 61
		    78		LOOP_S = 62
		    79		LS_F = 63
		    80		LS_S = 64
		    81		LSHIFT_S = 65
		    82		LV_S = 66
		    83		LVECAP_S = 67
		    84		LV_ARG_OUT = 68
		    85	
		    86		LV_FNAP_RESULT = 70
		    87		LV_GLOBAL = 71
		    88		LV_LOCAL = 72
		    89		LV_STATIC = 73
		    90		LV_TEMP = 74
		    91		MAIN_S = 75
		    92		MANIFEST_S = 76
		    93		MINUS_F = 77
		    94		MINUS_S = 78
		    95	
		    96		MULT_F = 80
		    97		MULT_S = 81
		    98		NAME_S = 82
		    99		NEG_F = 83
		   100		NEG_S = 84
		   101		NEQV_S = 85
		   102		NE_F = 86
		   103		NE_S = 87
		   104		NIL_S = 88
		   105	
		   106		NOT_S = 90
		   107		NUMBER_S = 91
		   108		OFFSET_S = 92
		   109		OR_S = 93
		   110		PLUS_F = 94
		   111		PLUS_S = 95
		   112		POINTER_S = 96
		   113		POS_F = 97
		   114		POS_S = 98
		   115	
		   116		RBRA_S = 100
		   117		REGISTER_S = 101
		   118		REL_S = 102
		   119		REM_S = 103
		   120		REP_S = 104
		   121		REPEAT_S = 105
		   122		REPEATUNTIL_S = 106
		   123		REPEATWHILE_S = 107
		   124		RESULTIS_S = 108
		   125	
		   126		RETURN_S = 110
		   127		RKET_S = 111
		   128		RSHIFT_S = 112
		   129		RTAP_S = 113
		   130		RTDEF_S = 114
		   131		RV_S = 115
		   132		SBRA_S = 116
		   133		SECTBEGIN_S = 117
		   134		SECTBRA_S = 118
		   135	
		   136		SECTEND_S = 120
		   137		SECTKET_S = 121
		   138		SEMICOLON_S = 122
		   139		SKET_S = 123
		   140		STATIC_S = 124
		   141		STRING_S = 125
		   142		STRINGCONST_S = 126
		   143		STRUCTURE_S = 127
		   144		SWITCHON_S = 128
		   145	
		   146		TABLE_S = 130
		   147		TEMP_S = 131
		   148		TEST_S = 132
		   149		TO_S = 133
		   150		TRUE_S = 134
		   151		TYPE_S = 135
		   152		UNLESS_S = 136
		   153		UNTIL_S = 137
		   154		VALDEF_S = 138
		   155	
		   156		VALOF_S = 140
		   157		VEC_S = 141
		   158		VECAP_S = 142
		   159		WHILE_S = 143
		   160	     $)
	    17	get "bcpl_cg_codes"
		     1	//  Report codes for the code generation phase.
		     2	//  Last modified on 08/15/73 at 00:33:36 by R F Mabee.
		     3	//  First installed in Version 3.4 by R F Mabee.
		     4	//  Code generation error codes separated from bcpl_trans_codes in April 1973.
		     5	
		     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
		     7	//  This file may only be reproduced or modified with explicit written
		     8	//  permission of the author.  Permission is hereby extended to those
		     9	//  persons responsible for operating the Multics system to make such
		    10	//  copies as are normally required to ensure the integrity of the Multics
		    11	//  file system.  Permission is also hereby extended to those persons
		    12	//  responsible for maintaining the Multics program libraries to make such
		    13	//  copies as are normally required for online installations.
		    14	
		    15	manifest		//  300 - 399 are reserved for CG.
		    16	     $(	BadAddress	= 300
		    17		BadLabel		= 301
		    18		BadRegOpPair	= 302
		    19		DupCase		= 303
		    20		DupLabel		= 304
		    21		LinkRefersThis	= 305
		    22		OverCase		= 306
		    23		PhaseError	= 307
		    24		UndefLab		= 308
		    25	     $)
	    18	
	    19	external
	    20	     $(	FinishText = "bcpl_cg0$FinishText"
	    21	
	    22		ApplyMonadicOperator = "bcpl_cg1$ApplyMonadicOperator"
	    23		ApplyDiadicOperator = "bcpl_cg1$ApplyDiadicOperator"
	    24		ApplyOffsetOperator = "bcpl_cg1$ApplyOffsetOperator"
	    25		MonadicJumpcond = "bcpl_cg1$MonadicJumpcond"
	    26		DiadicJumpcond = "bcpl_cg1$DiadicJumpcond"
	    27	
	    28		IsNumber = "bcpl_cg2$IsNumber"
	    29		EvalNumber = "bcpl_cg2$EvalNumber"
	    30		IsZero = "bcpl_cg2$IsZero"
	    31		IsAddress = "bcpl_cg2$IsAddress"
	    32		IsStored = "bcpl_cg2$IsStored"
	    33		LookupTemp = "bcpl_cg2$LookupTemp"
	    34		MakeCgTemp = "bcpl_cg2$MakeCgTemp"
	    35		ClaimRegister = "bcpl_cg2$ClaimRegister"
	    36		DisclaimRegister = "bcpl_cg2$DisclaimRegister"
	    37		InRegister = "bcpl_cg2$InRegister"
	    38		FindInRegister = "bcpl_cg2$FindInRegister"
	    39		CombineAddress = "bcpl_cg2$CombineAddress"
	    40		Compjump = "bcpl_cg2$Compjump"
	    41		Complab = "bcpl_cg2$Complab"
	    42		DefineLab = "bcpl_cg2$DefineLab"
	    43		LookupLabel = "bcpl_cg2$LookupLabel"
	    44		ClearRegisters = "bcpl_cg2$ClearRegisters"
	    45		ClearMemory = "bcpl_cg2$ClearMemory"
	    46		AddLiteral = "bcpl_cg2$AddLiteral"
	    47		OutLiterals = "bcpl_cg2$OutLiterals"
	    48		Outstring = "bcpl_cg2$Outstring"
	    49	
	    50		LoadRegister = "bcpl_cg3$LoadRegister"
	    51		LoadPointer = "bcpl_cg3$LoadPointer"
	    52		LoadIndex = "bcpl_cg3$LoadIndex"
	    53		LoadAppropriateRegister = "bcpl_cg3$LoadAppropriateRegister"
	    54		LoadNumber = "bcpl_cg3$LoadNumber"
	    55		SetupAddr = "bcpl_cg3$SetupAddr"
	    56		CompareToZero = "bcpl_cg3$CompareToZero"
	    57		Makeaddressable = "bcpl_cg3$Makeaddressable"
	    58		SwapAandQ = "bcpl_cg3$SwapAandQ"
	    59		Preserve = "bcpl_cg3$Preserve"
	    60		Store = "bcpl_cg3$Store"
	    61		StoreRegister = "bcpl_cg3$StoreRegister"
	    62		GetRegister = "bcpl_cg3$GetRegister"
	    63		Satisfactory = "bcpl_cg3$Satisfactory"
	    64		Literal = "bcpl_cg3$Literal"
	    65	
	    66		NewSSP = "bcpl_cg4$NewSSP"
	    67		Compentry = "bcpl_cg4$Compentry"
	    68		Compreturn = "bcpl_cg4$Compreturn"
	    69		CreateArglist = "bcpl_cg4$CreateArglist"
	    70		StoreArg = "bcpl_cg4$StoreArg"
	    71		Compfnap = "bcpl_cg4$Compfnap"
	    72		CreateSystemArglist = "bcpl_cg4$CreateSystemArglist"
	    73		StoreSystemArg = "bcpl_cg4$StoreSystemArg"
	    74		CompSystemCall = "bcpl_cg4$CompSystemCall"
	    75		ResultBlockBegin = "bcpl_cg4$ResultBlockBegin"
	    76		ResultSet = "bcpl_cg4$ResultSet"
	    77		ResultGet = "bcpl_cg4$ResultGet"
	    78		Compfinish = "bcpl_cg4$Compfinish"
	    79		Compgoto = "bcpl_cg4$Compgoto"
	    80		Compstring = "bcpl_cg4$Compstring"
	    81		Comptable = "bcpl_cg4$Comptable"
	    82		Compexternal = "bcpl_cg4$Compexternal"
	    83	
	    84		OutData = "bcpl_cg5$OutData"
	    85		Outop = "bcpl_cg5$Outop"
	    86		Outop2 = "bcpl_cg5$Outop2"
	    87		Outop3 = "bcpl_cg5$Outop3"
	    88		Outop4 = "bcpl_cg5$Outop4"
	    89		OutW = "bcpl_cg5$OutW"
	    90		OutW2 = "bcpl_cg5$OutW2"
	    91		PutCode = "bcpl_cg5$PutCode"
	    92		PutAbsBits = "bcpl_cg5$PutAbsBits"
	    93		SetLineNumber = "bcpl_cg5$SetLineNumber"
	    94		SectionHeader = "bcpl_cg5$SectionHeader"
	    95		FormOpcode = "bcpl_cg5$FormOpcode"
	    96		FormTag = "bcpl_cg5$FormTag"
	    97		CheckAddr = "bcpl_cg5$CheckAddr"
	    98	
	    99		Compswitch = "bcpl_cg6$Compswitch"
	   100	
	   101		WriteGetlp = "bcpl_cg7$WriteGetlp"
	   102		WriteEntry = "bcpl_cg7$WriteEntry"
	   103		WriteDefs = "bcpl_cg7$WriteDefs"
	   104		WriteLinkage = "bcpl_cg7$WriteLinkage"
	   105	
	   106		WriteSymbol = "bcpl_cg8$WriteSymbol"
	   107		WriteRelBits = "bcpl_cg8$WriteRelBits"
	   108		WriteObjectMap = "bcpl_cg8$WriteObjectMap"
	   109	
	   110		WriteData = "bcpl_cg9$WriteData"
	   111		WriteInstruction = "bcpl_cg9$WriteInstruction"
	   112		ListCodeItem = "bcpl_cg9$ListCodeItem"
	   113	     $)
	   114	global		//  300 - 399 are reserved for the code generator.
	   115	     $(	AbsRelBits	: 300
	   116		Address		: 301
	   117		ArgCount		: 302
	   118		ArgLen		: 303
	   119		CgTempList	: 304
	   120		CodeFirst		: 305
	   121		CodeP		: 306
	   122		CodeV		: 307
	   123		Comment		: 308
	   124	
	   125		DeferredJumpLabel	: 310
	   126		DefsLength	: 311
	   127		DefsRelbits	: 312
	   128		EntryLabel	: 313
	   129		GetLpLabel	: 314
	   130		IndicatorsSetBy	: 315
	   131		Jumpsw		: 316
	   132		LabMaxArg		: 317
	   133		LabMaxSSP		: 318
	   134	
	   135		LabTable		: 320
	   136		LC		: 321
	   137		LineMapFirst	: 322
	   138		LineMapLength	: 323
	   139		LineMapList	: 324
	   140		LinkageLength	: 325
	   141		LinkageRelbits	: 326
	   142		LinkList		: 327
	   143		Lrand		: 328
	   144	
	   145		MainEntriesList	: 330
	   146		MaxArgOffset	: 331
	   147		MaxSSP		: 332
	   148		NewLiteralsList	: 333
	   149		OldLabel		: 334
	   150		OldLiteralsList	: 335
	   151		Param		: 336
	   152		Rrand		: 337
	   153		RegisterTemps	: 338
	   154	
	   155		RegisterUsage	: 340
	   156		RelbitsFirst	: 341
	   157		RelbitsLength	: 342
	   158		RelbitsList	: 343
	   159		RelbitsOffset	: 344
	   160		Reloc		: 345
	   161		ResultInfo	: 346
	   162		ResultInfoList	: 347
	   163		SaveSpaceSize	: 348
	   164	
	   165		SymbolLength	: 350
	   166		SymbolRelbits	: 351
	   167		StackRefTag	: 352
	   168		SymtabFirst	: 353
	   169		SymtabP		: 354
	   170		SymtabV		: 355
	   171		Tag		: 356
	   172		TextLength	: 357
	   173		TextRelbits	: 358
	   174	
	   175		UsageCounter	: 360
	   176	     $)
	   177	manifest
	   178	     $(	CgTempSize = 9
	   179		CodeSize = 1000
	   180		LabTableSize = 100
	   181		SymtabSize = 200
	   182	     $)
	   183	manifest		//  Flags for listing.
	   184	     $(	CodeSwitch	= 1
	   185		InstructionSwitch	= 2
	   186		DataSwitch	= 3
	   187		LabelSwitch	= 4
	   188		LineCountSwitch	= 5
	   189		SectionSwitch	= 6
	   190		HeaderSwitch	= 7
	   191	     $)
	   192	manifest		//  Relocation codes.
	   193	     $(	RelText		= $820
	   194		RelLink18		= $822
	   195		RelNegLink18	= $823
	   196		RelLink15		= $824
	   197		RelDef		= $825
	   198		RelSymbol		= $826
	   199		RelNegSymbol	= $827
	   200		RelStat18		= $830
	   201		RelStat15		= $831
	   202		RelExtendedAbs	= $836		//  Ten bit count follows this code.
	   203	     $)
	   204	manifest
	   205	     $(	TagXrMask = $817
	   206		TagPrMask = $8700000000100
	   207	
	   208		Mod16 = $8777777777760
	   209	     $)
	   210	
	   211	manifest			//  Modifiers and tags used in the code generator.
	   212	     $(	Ap = $8000000000100
	   213		Ab = $8100000000100
	   214		Bp = $8200000000100
	   215		Bb = $8300000000100
	   216		Lp = $8400000000100
	   217		Lb = $8500000000100
	   218		Sp = $8600000000100
	   219		Sb = $8700000000100
	   220	
	   221		Al = $805
	   222		Au = $801
	   223		Dl = $807
	   224		Du = $803
	   225		Ql = $806
	   226		Qu = $802
	   227	
	   228		X0 = $810
	   229		X1 = $811
	   230		X2 = $812
	   231		X3 = $813
	   232		X4 = $814
	   233		X5 = $815
	   234		X6 = $816
	   235		X7 = $817
	   236	
	   237		Ft2 = $846
	   238		Ic = $804
	   239		Star = $820
	   240		StarThenReg = $860
	   241	     $)
	   242	manifest			//  Internal codes for all machine registers used.
	   243	     $(	Ar	= 1
	   244		Qr	= 2
	   245	
	   246		Xr0	= 3
	   247		Xr1	= 4
	   248		Xr2	= 5
	   249		Xr3	= 6
	   250		Xr4	= 7
	   251		Xr5	= 8
	   252		Xr6	= 9
	   253		Xr7	= 10
	   254	
	   255		Apr	= 11
	   256		Abr	= 12
	   257		Bpr	= 13
	   258		Bbr	= 14
	   259		Lpr	= 15
	   260		Lbr	= 16
	   261		Spr	= 17
	   262		Sbr	= 18
	   263	
	   264		EAQr	= 19
	   265	
	   266		NumberOfRegisters = 20
	   267	
	   268		AorQr	= 22
	   269		AnyPr	= 23
	   270		AnyXr	= 24
	   271	     $)
    13	get "bcpl_metering_head"
	     1	//  Variables and constants for use in measuring performance of the various parts of the BCPL compiler.
	     2	//  Last modified on 08/14/73 at 22:09:47 by R F Mabee.
	     3	//  First installed with Version 3.4 by R F Mabee.
	     4	//  Written in April 1973 to obtain detailed info about compiler performance.
	     5	
	     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
	     7	//  This file may only be reproduced or modified with explicit written
	     8	//  permission of the author.  Permission is hereby extended to those
	     9	//  persons responsible for operating the Multics system to make such
	    10	//  copies as are normally required to ensure the integrity of the Multics
	    11	//  file system.  Permission is also hereby extended to those persons
	    12	//  responsible for maintaining the Multics program libraries to make such
	    13	//  copies as are normally required for online installations.
	    14	
	    15	external
	    16	     $(	SaveOldUsage = "bcpl_utility$SaveOldUsage"
	    17		RecordUsage = "bcpl_utility$RecordUsage"
	    18		PrintMeters = "bcpl_meter_print$PrintMeters"
	    19	     $)
	    20	
	    21	global
	    22	     $(	Metering		: 150
	    23		MeterData		: 151
	    24		DictionaryDepth	: 152
	    25		TotalLines	: 153
	    26		TotalWords	: 154
	    27	     $)
	    28	
	    29	manifest
	    30	     $(	DriverOverhead_Meter = 0
	    31		SyntaxAnalysis_Meter = 3
	    32		Nextsymb_Meter	= 6
	    33		ProcessGet_Meter	= 9
	    34		SymbolAdd_Meter	= 12
	    35		SymbolSearch_Meter	= 15
	    36		RchWithoutListing_Meter = 18
	    37		RchWithListing_Meter	= 21
	    38		PrintXref_Meter	= 24
	    39		MakeObject_Meter	= 27
	    40		CompileSwitchWithoutOptimizing_Meter = 30
	    41		CompileSwitchWithOptimizing_Meter = 33
	    42		SemanticTranslation_Meter = 36
	    43		CodeGeneration_Meter	= 39
	    44		CompileExpression_Meter = 42
	    45		MeteringOverhead_Meter = 45
	    46		TotalLines_Count	= 48
	    47		TextWords_Count	= 49
	    48		DictionaryDepth_Count = 50
	    49		Meters_Length	= 51
	    50	     $)
    14	
    15	let WriteOperand (Desc) be
    16	     $(	if Desc = 0 do
    17		     $(	WriteS (OUTPUT, "*t0")
    18			return
    19		     $)
    20		Format (OUTPUT, "*t(^s", SymbolName (Desc!0))
    21		switchon Desc!0 into
    22		     $(	case NUMBER_S: case STRINGCONST_S: case CHARCONST_S: case EXTERNAL_S:
    23				Format (OUTPUT, " ^s", Desc!1)
    24				endcase
    25			case CONSTANT_S: case GLOBAL_S: case LV_GLOBAL: case LOCAL_S: case LV_LOCAL:
    26			case TEMP_S: case LV_TEMP: case STATIC_S: case LV_STATIC: case LABEL_S: case RTDEF_S:
    27				Format (OUTPUT, " ^d", Desc!1)
    28				endcase
    29			case TRUE_S: case FALSE_S:
    30				endcase
    31			case TABLE_S:
    32				Format (OUTPUT, " ^d", Desc!1!0)
    33				for i = 1 to Desc!1!0 do WriteConst (lv Desc!1!(i * 2 - 1))
    34				endcase
    35			default:	CGreport (UnexpectedCase, Desc!0, "WriteOperand")
    36				Format (OUTPUT, " ^o", Desc!1)
    37			     $)
    38		unless Desc!2 = 0 do Format (OUTPUT, "  /^s/", Desc!2)
    39		Writech (OUTPUT, ')')
    40	     $)
    41	and WriteConst (v) be
    42	     $(	Writech (OUTPUT, '*s')
    43		switchon v!0 into
    44		     $(	case CONSTANT_S:
    45				WriteN (OUTPUT, v!1)
    46				return
    47			case NUMBER_S: case CHARCONST_S:
    48				WriteS (OUTPUT, v!1)
    49				return
    50			case TRUE_S:
    51				WriteS (OUTPUT, "TRUE")
    52				return
    53			case FALSE_S:
    54				WriteS (OUTPUT, "FALSE")
    55				return
    56			default:	CGreport (UnexpectedCase, v!0, "WriteConst")
    57		     $)
    58	     $)
    59	
    60	let GenerateJump (L) be
    61	     $(	let UsageTemp = nil
    62		if Metering do UsageTemp := SaveOldUsage ()
    63		if OcodeSw do Format (OUTPUT, "JUMP ^d*n", L)
    64		Compjump (L)
    65		if Metering do RecordUsage (CodeGeneration_Meter, UsageTemp)
    66	     $)
    67	and GenerateLabel (L) be
    68	     $(	let UsageTemp = nil
    69		if Metering do UsageTemp := SaveOldUsage ()
    70		if OcodeSw do Format (OUTPUT, "LAB ^d*n", L)
    71		Complab (L)
    72		if Metering do RecordUsage (CodeGeneration_Meter, UsageTemp)
    73	     $)
    74	
    75	let GenerateRtdefBegin (L, ID, Functsw, Mainsw) be
    76	     $(	let UsageTemp = nil
    77		if Metering do UsageTemp := SaveOldUsage ()
    78		if OcodeSw do Format (OUTPUT, "^s ^d ^s ^b*n", (Functsw -> "FNDEF", "RTDEF"), L, ID, Mainsw)
    79		Compentry (L, ID, Functsw, Mainsw)
    80		if Metering do RecordUsage (CodeGeneration_Meter, UsageTemp)
    81	     $)
    82	and GenerateRtdefEnd (Desc) be
    83	     $(	let UsageTemp = nil
    84		if Metering do UsageTemp := SaveOldUsage ()
    85		if OcodeSw do
    86		     $(	WriteS (OUTPUT, Desc = 0 -> "RETURN", "RETURN_VAL")
    87			if Desc ne 0 do WriteOperand (Desc)
    88			Writech (OUTPUT, '*n')
    89		     $)
    90		Compreturn (Desc)
    91		if Metering do RecordUsage (CodeGeneration_Meter, UsageTemp)
    92	     $)
    93	
    94	let GenerateGoto (Desc) be
    95	     $(	let UsageTemp = nil
    96		if Metering do UsageTemp := SaveOldUsage ()
    97		if OcodeSw do
    98		     $(	WriteS (OUTPUT, "GOTO")
    99			WriteOperand (Desc)
   100			Writech (OUTPUT, '*n')
   101		     $)
   102		Compgoto (Desc)
   103		if Metering do RecordUsage (CodeGeneration_Meter, UsageTemp)
   104	     $)
   105	and GenerateFinish () be
   106	     $(	let UsageTemp = nil
   107		if Metering do UsageTemp := SaveOldUsage ()
   108		if OcodeSw do WriteS (OUTPUT, "FINISH*n")
   109		Compfinish ()
   110		if Metering do RecordUsage (CodeGeneration_Meter, UsageTemp)
   111	     $)
   112	and ReserveArglist (Nargs) be
   113	     $(	let UsageTemp = nil
   114		if Metering do UsageTemp := SaveOldUsage ()
   115		if OcodeSw do Format (OUTPUT, "ARGLIST ^d*n", Nargs)
   116		CreateArglist (Nargs)
   117		if Metering do RecordUsage (CodeGeneration_Meter, UsageTemp)
   118	     $)
   119	and GenerateArg (i, Desc) be
   120	     $(	let UsageTemp = nil
   121		if Metering do UsageTemp := SaveOldUsage ()
   122		if OcodeSw do
   123		     $(	Format (OUTPUT, "ARG ^d", i)
   124			WriteOperand (Desc)
   125			Writech (OUTPUT, '*n')
   126		     $)
   127		StoreArg (i, Desc)
   128		if Metering do RecordUsage (CodeGeneration_Meter, UsageTemp)
   129	     $)
   130	and GenerateFnap (Result, F) be
   131	     $(	let UsageTemp = nil
   132		if Metering do UsageTemp := SaveOldUsage ()
   133		if OcodeSw do
   134		     $(	WriteS (OUTPUT, Result = 0 -> "RTAP", "FNAP")
   135			WriteOperand (F)
   136			unless Result = 0 do WriteOperand (Result)
   137			Writech (OUTPUT, '*n')
   138		     $)
   139		Compfnap (Result, F)
   140		if Metering do RecordUsage (CodeGeneration_Meter, UsageTemp)
   141	     $)
   142	and ReserveSystemArglist (Nargs) be
   143	     $(	let UsageTemp = nil
   144		if Metering do UsageTemp := SaveOldUsage ()
   145		if OcodeSw do Format (OUTPUT, "SYSTEM_ARGLIST ^d*n", Nargs)
   146		CreateSystemArglist (Nargs)
   147		if Metering do RecordUsage (CodeGeneration_Meter, UsageTemp)
   148	     $)
   149	and GenerateSystemArg (i, Arg, Offset, Type, Length, StringSw) be
   150	     $(	let UsageTemp = nil
   151		if Metering do UsageTemp := SaveOldUsage ()
   152		if OcodeSw do
   153		     $(	Format (OUTPUT, "SYSTEM_ARG ^d", i)
   154			WriteOperand (Arg)
   155			WriteOperand (Offset)
   156			WriteOperand (Type)
   157			WriteOperand (Length)
   158			if StringSw do Writech (OUTPUT, " STRING")
   159			Writech (OUTPUT, '*n')
   160		     $)
   161		StoreSystemArg (i, Arg, Offset, Type, Length, StringSw)
   162		if Metering do RecordUsage (CodeGeneration_Meter, UsageTemp)
   163	     $)
   164	and GenerateSystemCall (F) be
   165	     $(	let UsageTemp = nil
   166		if Metering do UsageTemp := SaveOldUsage ()
   167		if OcodeSw do
   168		     $(	WriteS (OUTPUT, "SYSTEM_CALL ")
   169			WriteOperand (F)
   170			Writech (OUTPUT, '*n')
   171		     $)
   172		CompSystemCall (F)
   173		if Metering do RecordUsage (CodeGeneration_Meter, UsageTemp)
   174	     $)
   175	
   176	let GenerateResultBlock () be
   177	     $(	let UsageTemp = nil
   178		if Metering do UsageTemp := SaveOldUsage ()
   179		if OcodeSw do WriteS (OUTPUT, "RESULT_BLOCK*n")
   180		ResultBlockBegin ()
   181		if Metering do RecordUsage (CodeGeneration_Meter, UsageTemp)
   182	     $)
   183	and GenerateResultValue (Desc) be
   184	     $(	let UsageTemp = nil
   185		if Metering do UsageTemp := SaveOldUsage ()
   186		if OcodeSw do
   187		     $(	WriteS (OUTPUT, "SET_RESULT")
   188			WriteOperand (Desc)
   189			Writech (OUTPUT, '*n')
   190		     $)
   191		ResultSet (Desc)
   192		if Metering do RecordUsage (CodeGeneration_Meter, UsageTemp)
   193	     $)
   194	and GenerateClaimResult (Desc) be
   195	     $(	let UsageTemp = nil
   196		if Metering do UsageTemp := SaveOldUsage ()
   197		if OcodeSw do
   198		     $(	WriteS (OUTPUT, "CLAIM_RESULT")
   199			WriteOperand (Desc)
   200			Writech (OUTPUT, '*n')
   201		     $)
   202		ResultGet (Desc)
   203		if Metering do RecordUsage (CodeGeneration_Meter, UsageTemp)
   204	     $)
   205	
   206	and GenerateSwitch (Desc, CaseList, DefaultL, EndcaseL) be
   207	     $(	let UsageTemp = nil
   208		if Metering do UsageTemp := SaveOldUsage ()
   209		if OcodeSw do
   210		     $(	WriteS (OUTPUT, "SWITCHON")
   211			WriteOperand (Desc)
   212			let Ncases, t = 0, CaseList
   213			until t = 0 do t, Ncases := t!0, Ncases + 1
   214			Format (OUTPUT, " ^d ^d ^d", DefaultL, EndcaseL, Ncases)
   215			t := CaseList
   216			until t = 0 do
   217			     $(	Format (OUTPUT, " (^d", t!1)
   218				WriteConst (lv t!2)
   219				WriteConst (lv t!4)
   220				Writech (OUTPUT, ')')
   221				t := t!0
   222			     $)
   223			Writech (OUTPUT, '*n')
   224		     $)
   225		Compswitch (Desc, CaseList, DefaultL, EndcaseL)
   226		if Metering test Optimize
   227			  then RecordUsage (CompileSwitchWithOptimizing_Meter, UsageTemp)
   228			  or RecordUsage (CompileSwitchWithoutOptimizing_Meter, UsageTemp)
   229	     $)
   230	
   231	let GenerateMonadicOperator (Op, Result, Desc1) be
   232	     $(	let UsageTemp = nil
   233		if Metering do UsageTemp := SaveOldUsage ()
   234		if OcodeSw do
   235		     $(	WriteS (OUTPUT, SymbolName (Op))
   236			WriteOperand (Result)
   237			WriteOperand (Desc1)
   238			Writech (OUTPUT, '*n')
   239		     $)
   240		Lrand := Desc1
   241		ApplyMonadicOperator (Op, Result)
   242		if Metering do RecordUsage (CodeGeneration_Meter, UsageTemp)
   243	     $)
   244	and GenerateDiadicOperator (Op, Result, Desc1, Desc2) be
   245	     $(	let UsageTemp = nil
   246		if Metering do UsageTemp := SaveOldUsage ()
   247		if OcodeSw do
   248		     $(	WriteS (OUTPUT, SymbolName (Op))
   249			WriteOperand (Result)
   250			WriteOperand (Desc1)
   251			WriteOperand (Desc2)
   252			Writech (OUTPUT, '*n')
   253		     $)
   254		Lrand, Rrand := Desc1, Desc2
   255		ApplyDiadicOperator (Op, Result)
   256		if Metering do RecordUsage (CodeGeneration_Meter, UsageTemp)
   257	     $)
   258	and GenerateOffsetOperator (Op, Result, Desc1, Desc2, Offset) be
   259	     $(	let UsageTemp = nil
   260		if Metering do UsageTemp := SaveOldUsage ()
   261		if OcodeSw do
   262		     $(	WriteS (OUTPUT, SymbolName (Op))
   263			WriteOperand (Result)
   264			WriteOperand (Desc1)
   265			WriteOperand (Desc2)
   266			Format (OUTPUT, " + ^d*n", Offset)
   267		     $)
   268		Lrand, Rrand := Desc1, Desc2
   269		ApplyOffsetOperator (Op, Result, Offset)
   270		if Metering do RecordUsage (CodeGeneration_Meter, UsageTemp)
   271	     $)
   272	
   273	let GenerateMonadicConditional (Op, L, Desc1) be
   274	     $(	let UsageTemp = nil
   275		if Metering do UsageTemp := SaveOldUsage ()
   276		if OcodeSw do
   277		     $(	Format (OUTPUT, "JUMP_^s ^d", SymbolName (Op), L)
   278			WriteOperand (Desc1)
   279			Writech (OUTPUT, '*n')
   280		     $)
   281		Lrand := Desc1
   282		MonadicJumpcond (Op, L)
   283		if Metering do RecordUsage (CodeGeneration_Meter, UsageTemp)
   284	     $)
   285	and GenerateDiadicConditional (Op, L, Desc1, Desc2) be
   286	     $(	let UsageTemp = nil
   287		if Metering do UsageTemp := SaveOldUsage ()
   288		if OcodeSw do
   289		     $(	Format (OUTPUT, "JUMP_^s ^d", SymbolName (Op), L)
   290			WriteOperand (Desc1)
   291			WriteOperand (Desc2)
   292			Writech (OUTPUT, '*n')
   293		     $)
   294		Lrand, Rrand := Desc1, Desc2
   295		DiadicJumpcond (Op, L)
   296		if Metering do RecordUsage (CodeGeneration_Meter, UsageTemp)
   297	     $)
   298	
   299	let GenerateSSP (P) be
   300	     $(	let UsageTemp = nil
   301		if Metering do UsageTemp := SaveOldUsage ()
   302		if OcodeSw do Format (OUTPUT, "SSP ^d*n", P)
   303		NewSSP (P)
   304		if Metering do RecordUsage (CodeGeneration_Meter, UsageTemp)
   305	     $)
   306	and GenerateLineNumber (n) be
   307	     $(	let UsageTemp = nil
   308		if Metering do UsageTemp := SaveOldUsage ()
   309		if OcodeSw do Format (OUTPUT, "LINE ^d*n", n)
   310		SetLineNumber (n)
   311		if Metering do RecordUsage (CodeGeneration_Meter, UsageTemp)
   312	     $)
   313	and StoreAll () be
   314	     $(	let UsageTemp = nil
   315		if Metering do UsageTemp := SaveOldUsage ()
   316		if OcodeSw do WriteS (OUTPUT, "STORE_ALL*n")
   317		ClearRegisters ()
   318		if Metering do RecordUsage (CodeGeneration_Meter, UsageTemp)
   319	     $)
   320	
   321	and CgFinish (Static, Defs) be
   322	     $(	let UsageTemp = nil
   323		if Metering do UsageTemp := SaveOldUsage ()
   324		if OcodeSw do
   325		     $(	let t = Static
   326			until t = 0 do
   327			     $(	Format (OUTPUT, "STATIC ^d", t!1)
   328				WriteConst (lv t!3)
   329				Format (OUTPUT, "*t/^s/*n", t!2)
   330				t := t!0
   331			     $)
   332			t := Defs
   333			until t = 0 do
   334			     $(	Format (OUTPUT, "ENTRY ^s ^d*n", t!1, t!2)
   335				t := t!0
   336			     $)
   337		     $)
   338		FinishText (Static, Defs)
   339		if Metering do RecordUsage (CodeGeneration_Meter, UsageTemp)
   340	     $)



CAE time 11.1, 129 source lines per second.
cross reference table

Ab			bcpl_cg_head:  213

Abr			bcpl_cg_head:  256

AbsRelBits		bcpl_cg_head:  115

AddLiteral		bcpl_cg_head:  46

Addlocal			bcpl_trans_head:  23

Address			bcpl_cg_head:  116

Al			bcpl_cg_head:  221

AllocateLocal		bcpl_trans_head:  51

AND_S			bcpl_symbols:  17, bcpl_symbols:  17

AnyPr			bcpl_cg_head:  269

AnyXr			bcpl_cg_head:  270

AorQr			bcpl_cg_head:  268

Ap			bcpl_cg_head:  212

ApplyDiadicOperator		bcpl_cg_head:  23, bcpl_cg_interface:  255

ApplyMonadicOperator	bcpl_cg_head:  22, bcpl_cg_interface:  241

ApplyOffsetOperator		bcpl_cg_head:  24, bcpl_cg_interface:  269

Apr			bcpl_cg_head:  255

Ar			bcpl_cg_head:  243

Arg			bcpl_cg_interface:  149, 154, 161

ArgCount			bcpl_cg_head:  117

ArgInfo			bcpl_trans_head:  86

ArgLen			bcpl_cg_head:  118

Assignlist		bcpl_trans_head:  35

ASSIGN_S			bcpl_symbols:  18, bcpl_symbols:  18

Au			bcpl_cg_head:  222

BadAddress		bcpl_cg_codes:  16

BadCall			bcpl_trans_codes:  16

BadDescriptors		bcpl_trans_codes:  17

BadLabel			bcpl_cg_codes:  17

BadLink			bcpl_trans_codes:  18

BadRegOpPair		bcpl_cg_codes:  18

Bb			bcpl_cg_head:  215

Bbr			bcpl_cg_head:  258

BE_S			bcpl_symbols:  19, bcpl_symbols:  19

BIT_S			bcpl_symbols:  20, bcpl_symbols:  20

Bp			bcpl_cg_head:  214

Bpr			bcpl_cg_head:  257

BreakLabel		bcpl_trans_head:  87

BREAK_S			bcpl_symbols:  21, bcpl_symbols:  21

BuildObject		bcpl_compiler_head:  72, bcpl_compiler_head:  72

BY_S			bcpl_symbols:  22, bcpl_symbols:  22

CAE			bcpl_compiler_head:  64, bcpl_compiler_head:  64

CaeReport			bcpl_compiler_head:  49, bcpl_compiler_head:  49

CALL_S			bcpl_symbols:  23, bcpl_symbols:  23

CaseFirst			bcpl_trans_head:  88

CaseList			bcpl_trans_head:  89, bcpl_cg_interface:  206, 212, 215, 225

CASE_S			bcpl_symbols:  24, bcpl_symbols:  24

Cellwithname		bcpl_trans_head:  28

CgFinish			bcpl_trans_head:  83, bcpl_cg_interface:  321

CgInit			bcpl_compiler_head:  71, bcpl_compiler_head:  71

CGreport			bcpl_compiler_head:  51, bcpl_compiler_head:  51, 
			bcpl_cg_interface:  35, 56

CgTempList		bcpl_cg_head:  119

CgTempSize		bcpl_cg_head:  178

Ch			bcpl_compiler_head:  92, bcpl_compiler_head:  92

CHARCONST_S		bcpl_symbols:  27, bcpl_symbols:  27, bcpl_cg_interface:  22, 47

CHAR_S			bcpl_symbols:  26, bcpl_symbols:  26

CheckAddr			bcpl_cg_head:  97

Checkdistinct		bcpl_trans_head:  27

ClaimRegister		bcpl_cg_head:  35

Cleanup			bcpl_compiler_head:  61, bcpl_compiler_head:  61

ClearMemory		bcpl_cg_head:  45

ClearRegisters		bcpl_cg_head:  44, bcpl_cg_interface:  317

CodeFirst			bcpl_cg_head:  120

CodeGeneration_Meter	bcpl_metering_head:  43, bcpl_cg_interface:  65, 72, 80, 91, 103, 110, 117, 128, 140, 
			147, 162, 173, 181, 192, 203, 242, 256, 270, 283, 296, 304, 311, 318, 339

CodeP			bcpl_cg_head:  121

CodeSize			bcpl_cg_head:  179

CodeSwitch		bcpl_cg_head:  184

CodeV			bcpl_cg_head:  122

COLON_S			bcpl_symbols:  28, bcpl_symbols:  28

Column			bcpl_compiler_head:  128, bcpl_compiler_head:  128

CombineAddress		bcpl_cg_head:  39

COMMA_S			bcpl_symbols:  29, bcpl_symbols:  29

Comment			bcpl_cg_head:  123

CompareStrings		bcpl_compiler_head:  25, bcpl_compiler_head:  25

CompareToZero		bcpl_cg_head:  56

Compentry			bcpl_cg_head:  67, bcpl_cg_interface:  79

Compexternal		bcpl_cg_head:  82

Compfinish		bcpl_cg_head:  78, bcpl_cg_interface:  109

Compfnap			bcpl_cg_head:  71, bcpl_cg_interface:  139

Compgoto			bcpl_cg_head:  79, bcpl_cg_interface:  102

CompileExpression		bcpl_trans_head:  39

CompileExpression_Meter	bcpl_metering_head:  44

CompileOperand		bcpl_trans_head:  40

CompilerDTM		bcpl_compiler_head:  112, bcpl_compiler_head:  112

CompilerDTMString		bcpl_compiler_head:  111, bcpl_compiler_head:  111

CompilerVersionNumber	bcpl_compiler_head:  110, bcpl_compiler_head:  110

CompilerVersionString	bcpl_compiler_head:  109, bcpl_compiler_head:  109

CompileSwitchWithOptimizing_Meter	bcpl_metering_head:  41, bcpl_cg_interface:  227

CompileSwitchWithoutOptimizing_Meter	bcpl_metering_head:  40, bcpl_cg_interface:  228

Compjump			bcpl_cg_head:  40, bcpl_cg_interface:  64

Complab			bcpl_cg_head:  41, bcpl_cg_interface:  71

Compreturn		bcpl_cg_head:  68, bcpl_cg_interface:  90

Compstring		bcpl_cg_head:  80

Compswitch		bcpl_cg_head:  99, bcpl_cg_interface:  225

CompSystemCall		bcpl_cg_head:  74, bcpl_cg_interface:  172

Comptable			bcpl_cg_head:  81

Concatenate		bcpl_compiler_head:  26, bcpl_compiler_head:  26

COND_S			bcpl_symbols:  30, bcpl_symbols:  30

Conformality		bcpl_trans_codes:  19

CONSTANT_S		bcpl_symbols:  31, bcpl_symbols:  31, bcpl_cg_interface:  25, 44

CONSTDEF_S		bcpl_symbols:  32, bcpl_symbols:  32

ConvertNtoS		bcpl_compiler_head:  28, bcpl_compiler_head:  28

ConvertStoN		bcpl_compiler_head:  27, bcpl_compiler_head:  27

CountTemporaries		bcpl_trans_head:  47

CreateArglist		bcpl_cg_head:  69, bcpl_cg_interface:  116

CreateSystemArglist		bcpl_cg_head:  72, bcpl_cg_interface:  146

Crep			bcpl_compiler_head:  98, bcpl_compiler_head:  98

DataSwitch		bcpl_cg_head:  186

DeallocateLocal		bcpl_trans_head:  52

Declitem			bcpl_trans_head:  24

Decllabels		bcpl_trans_head:  26

Declnames			bcpl_trans_head:  25

DefaultL			bcpl_cg_interface:  206, 214, 225

DefaultLabel		bcpl_trans_head:  90

DEFAULT_S			bcpl_symbols:  33, bcpl_symbols:  33

DeferredJumpLabel		bcpl_cg_head:  125

DefineLab			bcpl_cg_head:  42

DefList			bcpl_trans_head:  91

Defs			bcpl_cg_interface:  321, 332, 338

DefsLength		bcpl_cg_head:  126

DefsRelbits		bcpl_cg_head:  127

Desc			bcpl_cg_interface:  15, 16, 20, 21, 23, 27, 32, 33, 33, 35, 36, 38, 38, 82, 86, 87, 87, 
			90, 94, 99, 102, 119, 124, 127, 183, 188, 191, 194, 199, 202, 206, 211, 225

Desc1			bcpl_cg_interface:  231, 237, 240, 244, 250, 254, 258, 264, 268, 273, 278, 281, 285, 290, 
			294

Desc2			bcpl_cg_interface:  244, 251, 254, 258, 265, 268, 285, 291, 294

DescSize			bcpl_trans_head:  117

DiadicJumpcond		bcpl_cg_head:  26, bcpl_cg_interface:  295

DictionaryDepth		bcpl_metering_head:  24

DictionaryDepth_Count	bcpl_metering_head:  48

DictionaryEntry		bcpl_compiler_head:  127, bcpl_compiler_head:  127

DisclaimRegister		bcpl_cg_head:  36

DIV_F			bcpl_symbols:  34, bcpl_symbols:  34

DIV_S			bcpl_symbols:  36, bcpl_symbols:  36

Dl			bcpl_cg_head:  223

DOUBLE_S			bcpl_symbols:  38, bcpl_symbols:  38

DO_S			bcpl_symbols:  37, bcpl_symbols:  37

DriverOverhead_Meter	bcpl_metering_head:  30

Du			bcpl_cg_head:  224

DupCase			bcpl_cg_codes:  19

DupDefault		bcpl_trans_codes:  20

DupLabel			bcpl_cg_codes:  20

DupName			bcpl_trans_codes:  21

DvecC			bcpl_trans_head:  92

DvecP			bcpl_trans_head:  93

DvecSize			bcpl_trans_head:  118

EAQr			bcpl_cg_head:  264

EndcaseL			bcpl_cg_interface:  206, 214, 225

EndcaseLabel		bcpl_trans_head:  94

ENDCASE_S			bcpl_symbols:  39, bcpl_symbols:  39

Endofstreamch		bcpl_compiler_head:  135, bcpl_compiler_head:  135

ENDPROG_S			bcpl_symbols:  40, bcpl_symbols:  40

EnterIntoCrossreference	bcpl_compiler_head:  57, bcpl_compiler_head:  57

EntryLabel		bcpl_cg_head:  128

EnvBase			bcpl_trans_head:  96

EqualString		bcpl_compiler_head:  24, bcpl_compiler_head:  24

EQV_S			bcpl_symbols:  44, bcpl_symbols:  44

EQ_F			bcpl_symbols:  42, bcpl_symbols:  42

EQ_S			bcpl_symbols:  43, bcpl_symbols:  43

Errorsw			bcpl_compiler_head:  124, bcpl_compiler_head:  124

ERROR_S			bcpl_symbols:  41, bcpl_symbols:  41

Evalconst			bcpl_trans_head:  43

EvalNumber		bcpl_cg_head:  29

EvaluateOperator		bcpl_trans_head:  46

Even			bcpl_compiler_head:  136, bcpl_compiler_head:  136

EXTERNAL_S		bcpl_symbols:  46, bcpl_symbols:  46, bcpl_cg_interface:  22

F			bcpl_cg_interface:  130, 135, 139, 164, 169, 172

FALSE_S			bcpl_symbols:  47, bcpl_symbols:  47, bcpl_cg_interface:  29, 53

FileCount			bcpl_compiler_head:  118, bcpl_compiler_head:  118

FileNames			bcpl_compiler_head:  116, bcpl_compiler_head:  116

FileShift			bcpl_compiler_head:  138, bcpl_compiler_head:  138

FilesInfo			bcpl_compiler_head:  117, bcpl_compiler_head:  117

FindInRegister		bcpl_cg_head:  38

FindPrintName		bcpl_compiler_head:  56, bcpl_compiler_head:  56

FinishText		bcpl_cg_head:  20, bcpl_cg_interface:  338

FINISH_S			bcpl_symbols:  48, bcpl_symbols:  48

FIXED_S			bcpl_symbols:  49, bcpl_symbols:  49

FLOAT_S			bcpl_symbols:  50, bcpl_symbols:  50

FNAP_S			bcpl_symbols:  51, bcpl_symbols:  51

FNDEF_S			bcpl_symbols:  52, bcpl_symbols:  52

Format			bcpl_compiler_head:  20, bcpl_compiler_head:  20, 
			bcpl_cg_interface:  20, 23, 27, 32, 36, 38, 63, 70, 78, 115, 123, 145, 153, 214, 217, 
			266, 277, 289, 302, 309, 327, 329, 334

FormCharconst		bcpl_compiler_head:  46, bcpl_compiler_head:  46

FormOpcode		bcpl_cg_head:  95

FormStringconst		bcpl_compiler_head:  47, bcpl_compiler_head:  47

FormTag			bcpl_cg_head:  96

FOR_S			bcpl_symbols:  53, bcpl_symbols:  53

FreeLocalList		bcpl_trans_head:  97

FreeVar			bcpl_trans_codes:  22

Freevec			bcpl_compiler_head:  34, bcpl_compiler_head:  34

Ft2			bcpl_cg_head:  237

Functsw			bcpl_cg_interface:  75, 78, 79

GenerateArg		bcpl_trans_head:  64, bcpl_cg_interface:  119

GenerateClaimResult		bcpl_trans_head:  71, bcpl_cg_interface:  194

GenerateDiadicConditional	bcpl_trans_head:  79, bcpl_cg_interface:  285

GenerateDiadicOperator	bcpl_trans_head:  76, bcpl_cg_interface:  244

GenerateFinish		bcpl_trans_head:  73, bcpl_cg_interface:  105

GenerateFnap		bcpl_trans_head:  65, bcpl_cg_interface:  130

GenerateGoto		bcpl_trans_head:  72, bcpl_cg_interface:  94

GenerateJump		bcpl_trans_head:  60, bcpl_cg_interface:  60

GenerateLabel		bcpl_trans_head:  59, bcpl_cg_interface:  67

GenerateLineNumber		bcpl_trans_head:  81, bcpl_cg_interface:  306

GenerateMonadicConditional	bcpl_trans_head:  78, bcpl_cg_interface:  273

GenerateMonadicOperator	bcpl_trans_head:  75, bcpl_cg_interface:  231

GenerateOffsetOperator	bcpl_trans_head:  77, bcpl_cg_interface:  258

GenerateResultBlock		bcpl_trans_head:  69, bcpl_cg_interface:  176

GenerateResultValue		bcpl_trans_head:  70, bcpl_cg_interface:  183

GenerateRtdefBegin		bcpl_trans_head:  61, bcpl_cg_interface:  75

GenerateRtdefEnd		bcpl_trans_head:  62, bcpl_cg_interface:  82

GenerateSSP		bcpl_trans_head:  80, bcpl_cg_interface:  299

GenerateSwitch		bcpl_trans_head:  74, bcpl_cg_interface:  206

GenerateSystemArg		bcpl_trans_head:  67, bcpl_cg_interface:  149

GenerateSystemCall		bcpl_trans_head:  68, bcpl_cg_interface:  164

GetLpLabel		bcpl_cg_head:  129

GetRegister		bcpl_cg_head:  62

GetStream			bcpl_compiler_head:  62, bcpl_compiler_head:  62

GetVersion		bcpl_compiler_head:  59, bcpl_compiler_head:  59

GET_S			bcpl_symbols:  57, bcpl_symbols:  57

GE_F			bcpl_symbols:  54, bcpl_symbols:  54

GE_S			bcpl_symbols:  56, bcpl_symbols:  56

GlobalTemp		bcpl_compiler_head:  131, bcpl_compiler_head:  131

GLOBAL_S			bcpl_symbols:  58, bcpl_symbols:  58, bcpl_cg_interface:  25

GOTO_S			bcpl_symbols:  59, bcpl_symbols:  59

GR_F			bcpl_symbols:  60, bcpl_symbols:  60

GR_S			bcpl_symbols:  61, bcpl_symbols:  61

HaveListingFile		bcpl_compiler_head:  105, bcpl_compiler_head:  105

HeaderSwitch		bcpl_cg_head:  190

i			bcpl_cg_interface:  33, 33, 119, 123, 127, 149, 153, 161

Ic			bcpl_cg_head:  238

ID			bcpl_cg_interface:  75, 78, 79

IFNOT_S			bcpl_symbols:  63, bcpl_symbols:  63

IFSO_S			bcpl_symbols:  64, bcpl_symbols:  64

IF_S			bcpl_symbols:  62, bcpl_symbols:  62

IndicatorsSetBy		bcpl_cg_head:  130

INPUT			bcpl_compiler_head:  90, bcpl_compiler_head:  90

InRegister		bcpl_cg_head:  37

InsideRtdef		bcpl_trans_head:  98

InstructionSwitch		bcpl_cg_head:  185

INTO_S			bcpl_symbols:  66, bcpl_symbols:  66

IsAddress			bcpl_cg_head:  31

IsConst			bcpl_trans_head:  45

IsNumber			bcpl_cg_head:  28

IsRelational		bcpl_trans_head:  48

IsStored			bcpl_cg_head:  32

IsZero			bcpl_cg_head:  30

Jumpsw			bcpl_cg_head:  131

L			bcpl_cg_interface:  60, 63, 64, 67, 70, 71, 75, 78, 79, 273, 277, 282, 285, 289, 295

LABDEF_S			bcpl_symbols:  67, bcpl_symbols:  67

LabelSwitch		bcpl_cg_head:  187

LABEL_S			bcpl_symbols:  68, bcpl_symbols:  68, bcpl_cg_interface:  26

LabMaxArg			bcpl_cg_head:  132

LabMaxSSP			bcpl_cg_head:  133

LabTable			bcpl_cg_head:  135

LabTableSize		bcpl_cg_head:  180

Lb			bcpl_cg_head:  217

Lbr			bcpl_cg_head:  260

LC			bcpl_cg_head:  136

Left			bcpl_compiler_head:  134, bcpl_compiler_head:  134

Length			bcpl_compiler_head:  29, bcpl_compiler_head:  29, 
			bcpl_cg_interface:  149, 157, 161

LengthInWords		bcpl_compiler_head:  30, bcpl_compiler_head:  30

LENGTH_S			bcpl_symbols:  71, bcpl_symbols:  71

LET_S			bcpl_symbols:  72, bcpl_symbols:  72

LexInit			bcpl_compiler_head:  65, bcpl_compiler_head:  65

LE_F			bcpl_symbols:  69, bcpl_symbols:  69

LE_S			bcpl_symbols:  70, bcpl_symbols:  70

LHSpointer		bcpl_trans_head:  99

LineCount			bcpl_compiler_head:  123, bcpl_compiler_head:  123

LineCountSwitch		bcpl_cg_head:  188

LineMap			bcpl_compiler_head:  100, bcpl_compiler_head:  100

LineMapFirst		bcpl_cg_head:  137

LineMapLength		bcpl_cg_head:  138

LineMapList		bcpl_cg_head:  139

LineMask			bcpl_compiler_head:  138, bcpl_compiler_head:  138

LinkageLength		bcpl_cg_head:  140

LinkageRelbits		bcpl_cg_head:  141

LinkList			bcpl_cg_head:  142

LinkRefersThis		bcpl_cg_codes:  21

List1			bcpl_compiler_head:  35, bcpl_compiler_head:  35

List2			bcpl_compiler_head:  36, bcpl_compiler_head:  36

List3			bcpl_compiler_head:  37, bcpl_compiler_head:  37

List4			bcpl_compiler_head:  38, bcpl_compiler_head:  38

List5			bcpl_compiler_head:  39, bcpl_compiler_head:  39

List6			bcpl_compiler_head:  40, bcpl_compiler_head:  40

ListCodeItem		bcpl_cg_head:  112

Listing			bcpl_compiler_head:  95, bcpl_compiler_head:  95

ListSize			bcpl_trans_head:  34

LIST_S			bcpl_symbols:  73, bcpl_symbols:  73

Literal			bcpl_cg_head:  64

LmodeRequired		bcpl_trans_codes:  23

LoadAppropriateRegister	bcpl_cg_head:  53

LoadIndex			bcpl_cg_head:  52

LoadNumber		bcpl_cg_head:  54

LoadPointer		bcpl_cg_head:  51

LoadRegister		bcpl_cg_head:  50

LOCAL_S			bcpl_symbols:  74, bcpl_symbols:  74, bcpl_cg_interface:  25

LOGAND_S			bcpl_symbols:  76, bcpl_symbols:  76

LOGOR_S			bcpl_symbols:  77, bcpl_symbols:  77

LookupLabel		bcpl_cg_head:  43

LookupTemp		bcpl_cg_head:  33

LoopFlag			bcpl_trans_head:  100

LoopLabel			bcpl_trans_head:  101

LOOP_S			bcpl_symbols:  78, bcpl_symbols:  78

Lp			bcpl_cg_head:  216

Lpr			bcpl_cg_head:  259

Lrand			bcpl_cg_head:  143, bcpl_cg_interface:  240, 254, 268, 281, 294

LSHIFT_S			bcpl_symbols:  81, bcpl_symbols:  81

LS_F			bcpl_symbols:  79, bcpl_symbols:  79

LS_S			bcpl_symbols:  80, bcpl_symbols:  80

LVECAP_S			bcpl_symbols:  83, bcpl_symbols:  83

LV_ARG_OUT		bcpl_symbols:  84, bcpl_symbols:  84

LV_FNAP_RESULT		bcpl_symbols:  86, bcpl_symbols:  86

LV_GLOBAL			bcpl_symbols:  87, bcpl_symbols:  87, bcpl_cg_interface:  25

LV_LOCAL			bcpl_symbols:  88, bcpl_symbols:  88, bcpl_cg_interface:  25

LV_S			bcpl_symbols:  82, bcpl_symbols:  82

LV_STATIC			bcpl_symbols:  89, bcpl_symbols:  89, bcpl_cg_interface:  26

LV_TEMP			bcpl_symbols:  90, bcpl_symbols:  90, bcpl_cg_interface:  26

Machine			bcpl_compiler_head:  102, bcpl_compiler_head:  102

MainEntriesList		bcpl_cg_head:  145

Mainsw			bcpl_cg_interface:  75, 78, 79

MAIN_S			bcpl_symbols:  91, bcpl_symbols:  91

Makeaddressable		bcpl_cg_head:  57

MakeCgTemp		bcpl_cg_head:  34

MakeCopy			bcpl_trans_head:  54

MakeObject_Meter		bcpl_metering_head:  39

MakeTemp			bcpl_trans_head:  53

MakeTimeString		bcpl_compiler_head:  44, bcpl_compiler_head:  44

MANIFEST_S		bcpl_symbols:  92, bcpl_symbols:  92

MaxArgOffset		bcpl_cg_head:  146

MaxSSP			bcpl_cg_head:  147

MeterData			bcpl_metering_head:  23

Metering			bcpl_metering_head:  22, bcpl_cg_interface:  62, 65, 69, 72, 77, 80, 84, 91, 96, 103, 
			107, 110, 114, 117, 121, 128, 132, 140, 144, 147, 151, 162, 166, 173, 178, 181, 185, 192, 
			196, 203, 208, 226, 233, 242, 246, 256, 260, 270, 275, 283, 287, 296, 301, 304, 308, 311, 
			315, 318, 323, 339

MeteringOverhead_Meter	bcpl_metering_head:  45

Meters_Length		bcpl_metering_head:  49

MINUS_F			bcpl_symbols:  93, bcpl_symbols:  93

MINUS_S			bcpl_symbols:  94, bcpl_symbols:  94

Mod16			bcpl_cg_head:  208

MonadicJumpcond		bcpl_cg_head:  25, bcpl_cg_interface:  282

MONITOR			bcpl_compiler_head:  91, bcpl_compiler_head:  91

MULT_F			bcpl_symbols:  96, bcpl_symbols:  96

MULT_S			bcpl_symbols:  97, bcpl_symbols:  97

n			bcpl_cg_interface:  306, 309, 310

NAMECHAIN			bcpl_compiler_head:  125, bcpl_compiler_head:  125

NAME_S			bcpl_symbols:  98, bcpl_symbols:  98

Nargs			bcpl_cg_interface:  112, 115, 116, 142, 145, 146

Ncases			bcpl_cg_interface:  212, 213, 213, 214

NegVector			bcpl_trans_codes:  24

NEG_F			bcpl_symbols:  99, bcpl_symbols:  99

NEG_S			bcpl_symbols:  100, bcpl_symbols:  100

NEQV_S			bcpl_symbols:  101, bcpl_symbols:  101

NewLiteralsList		bcpl_cg_head:  148

NewSSP			bcpl_cg_head:  66, bcpl_cg_interface:  303

Newvec			bcpl_compiler_head:  33, bcpl_compiler_head:  33

Nextparam			bcpl_compiler_head:  45, bcpl_compiler_head:  45

Nextsymb			bcpl_compiler_head:  53, bcpl_compiler_head:  53

Nextsymb_Meter		bcpl_metering_head:  32

NE_F			bcpl_symbols:  102, bcpl_symbols:  102

NE_S			bcpl_symbols:  103, bcpl_symbols:  103

NIL_S			bcpl_symbols:  104, bcpl_symbols:  104

NoLoop			bcpl_trans_codes:  26

NoSwitch			bcpl_trans_codes:  27

NotConstant		bcpl_trans_codes:  28

NotInsideRtdef		bcpl_trans_codes:  29

NotName			bcpl_trans_codes:  30

NOT_S			bcpl_symbols:  106, bcpl_symbols:  106

NoValof			bcpl_trans_codes:  31

NumberOfRegisters		bcpl_cg_head:  266

NUMBER_S			bcpl_symbols:  107, bcpl_symbols:  107, bcpl_cg_interface:  22, 47

OcodeSw			bcpl_compiler_head:  104, bcpl_compiler_head:  104, 
			bcpl_cg_interface:  63, 70, 78, 85, 97, 108, 115, 122, 133, 145, 152, 167, 179, 186, 197, 
			209, 234, 247, 261, 276, 288, 302, 309, 316, 324

Offset			bcpl_cg_interface:  149, 155, 161, 258, 266, 269

OFFSET_S			bcpl_symbols:  108, bcpl_symbols:  108

OldLabel			bcpl_cg_head:  149

OldLiteralsList		bcpl_cg_head:  150

Op			bcpl_cg_interface:  231, 235, 241, 244, 248, 255, 258, 262, 269, 273, 277, 282, 285, 289, 
			295

Optimize			bcpl_compiler_head:  101, bcpl_compiler_head:  101, 
			bcpl_cg_interface:  226

OptionString		bcpl_compiler_head:  115, bcpl_compiler_head:  115

OR_S			bcpl_symbols:  109, bcpl_symbols:  109

OutData			bcpl_cg_head:  84

OutLiterals		bcpl_cg_head:  47

Outop			bcpl_cg_head:  85

Outop2			bcpl_cg_head:  86

Outop3			bcpl_cg_head:  87

Outop4			bcpl_cg_head:  88

OUTPUT			bcpl_compiler_head:  89, bcpl_compiler_head:  89, 
			bcpl_cg_interface:  17, 20, 23, 27, 32, 36, 38, 39, 42, 45, 48, 51, 54, 63, 70, 78, 86, 
			88, 98, 100, 108, 115, 123, 125, 134, 137, 145, 153, 158, 159, 168, 170, 179, 187, 189, 
			198, 200, 210, 214, 217, 220, 223, 235, 238, 248, 252, 262, 266, 277, 279, 289, 292, 302, 
			309, 316, 327, 329, 334

Outstring			bcpl_cg_head:  48

OutW			bcpl_cg_head:  89

OutW2			bcpl_cg_head:  90

OverCase			bcpl_cg_codes:  22

P			bcpl_cg_interface:  299, 302, 303

Packstring		bcpl_compiler_head:  21, bcpl_compiler_head:  21

Param			bcpl_cg_head:  151

PartialEvalconst		bcpl_trans_head:  44

PendingTemps		bcpl_trans_head:  102

PhaseError		bcpl_cg_codes:  23

Plist			bcpl_compiler_head:  68, bcpl_compiler_head:  68

PLUS_F			bcpl_symbols:  110, bcpl_symbols:  110

PLUS_S			bcpl_symbols:  111, bcpl_symbols:  111

Pname			bcpl_compiler_head:  67, bcpl_compiler_head:  67

POINTER_S			bcpl_symbols:  112, bcpl_symbols:  112

PopInput			bcpl_compiler_head:  43, bcpl_compiler_head:  43

POS_F			bcpl_symbols:  113, bcpl_symbols:  113

POS_S			bcpl_symbols:  114, bcpl_symbols:  114

PPrep			bcpl_compiler_head:  97, bcpl_compiler_head:  97

Preserve			bcpl_cg_head:  59

PrintMeters		bcpl_metering_head:  18

PrintXref_Meter		bcpl_metering_head:  38

ProcessGet_Meter		bcpl_metering_head:  33

ProgramName		bcpl_compiler_head:  119, bcpl_compiler_head:  119

PushInput			bcpl_compiler_head:  42, bcpl_compiler_head:  42

PutAbsBits		bcpl_cg_head:  92

PutBackTemps		bcpl_trans_head:  55

PutCode			bcpl_cg_head:  91

Ql			bcpl_cg_head:  225

Qr			bcpl_cg_head:  244

Qu			bcpl_cg_head:  226

QuietSw			bcpl_compiler_head:  106, bcpl_compiler_head:  106

RandomI			bcpl_compiler_head:  31, bcpl_compiler_head:  31

RBRA_S			bcpl_symbols:  116, bcpl_symbols:  116

RchWithListing_Meter	bcpl_metering_head:  37

RchWithoutListing_Meter	bcpl_metering_head:  36

Readch			bcpl_compiler_head:  16, bcpl_compiler_head:  16

RecordUsage		bcpl_metering_head:  17, bcpl_cg_interface:  65, 72, 80, 91, 103, 110, 117, 128, 140, 
			147, 162, 173, 181, 192, 203, 227, 228, 242, 256, 270, 283, 296, 304, 311, 318, 339

RegisterTemps		bcpl_cg_head:  153

RegisterUsage		bcpl_cg_head:  155

REGISTER_S		bcpl_symbols:  117, bcpl_symbols:  117

RelbitsFirst		bcpl_cg_head:  156

RelbitsLength		bcpl_cg_head:  157

RelbitsList		bcpl_cg_head:  158

RelbitsOffset		bcpl_cg_head:  159

RelDef			bcpl_cg_head:  197

RelExtendedAbs		bcpl_cg_head:  202

RelLink15			bcpl_cg_head:  196

RelLink18			bcpl_cg_head:  194

RelNegLink18		bcpl_cg_head:  195

RelNegSymbol		bcpl_cg_head:  199

Reloc			bcpl_cg_head:  160

RelStat15			bcpl_cg_head:  201

RelStat18			bcpl_cg_head:  200

RelSymbol			bcpl_cg_head:  198

RelText			bcpl_cg_head:  193

REL_S			bcpl_symbols:  118, bcpl_symbols:  118

RemoveEscapes		bcpl_compiler_head:  23, bcpl_compiler_head:  23

Removenames		bcpl_trans_head:  29

REM_S			bcpl_symbols:  119, bcpl_symbols:  119

REPEATUNTIL_S		bcpl_symbols:  122, bcpl_symbols:  122

REPEATWHILE_S		bcpl_symbols:  123, bcpl_symbols:  123

REPEAT_S			bcpl_symbols:  121, bcpl_symbols:  121

REP_S			bcpl_symbols:  120, bcpl_symbols:  120

ReserveArglist		bcpl_trans_head:  63, bcpl_cg_interface:  112

ReserveSystemArglist	bcpl_trans_head:  66, bcpl_cg_interface:  142

ResetSSP			bcpl_trans_head:  50

Result			bcpl_cg_interface:  130, 134, 136, 136, 139, 231, 236, 241, 244, 249, 255, 258, 263, 269

ResultBlockBegin		bcpl_cg_head:  75, bcpl_cg_interface:  180

ResultGet			bcpl_cg_head:  77, bcpl_cg_interface:  202

ResultInfo		bcpl_cg_head:  161

ResultInfoList		bcpl_cg_head:  162

RESULTIS_S		bcpl_symbols:  124, bcpl_symbols:  124

ResultSet			bcpl_cg_head:  76, bcpl_cg_interface:  191

ReturnLabel		bcpl_trans_head:  103

RETURN_S			bcpl_symbols:  126, bcpl_symbols:  126

Right			bcpl_compiler_head:  134, bcpl_compiler_head:  134

RKET_S			bcpl_symbols:  127, bcpl_symbols:  127

Rrand			bcpl_cg_head:  152, bcpl_cg_interface:  254, 268, 294

RSHIFT_S			bcpl_symbols:  128, bcpl_symbols:  128

RTAP_S			bcpl_symbols:  129, bcpl_symbols:  129

RtdefList			bcpl_trans_head:  104

RtdefNesting		bcpl_trans_head:  106

RTDEF_S			bcpl_symbols:  130, bcpl_symbols:  130, bcpl_cg_interface:  26

RV_S			bcpl_symbols:  131, bcpl_symbols:  131

Satisfactory		bcpl_cg_head:  63

SaveOldUsage		bcpl_metering_head:  16, bcpl_cg_interface:  62, 69, 77, 84, 96, 107, 114, 121, 132, 144, 
			151, 166, 178, 185, 196, 208, 233, 246, 260, 275, 287, 301, 308, 315, 323

SaveSpaceSize		bcpl_cg_head:  163

Sb			bcpl_cg_head:  219

Sbr			bcpl_cg_head:  262

SBRA_S			bcpl_symbols:  132, bcpl_symbols:  132

SECTBEGIN_S		bcpl_symbols:  133, bcpl_symbols:  133

SECTBRA_S			bcpl_symbols:  134, bcpl_symbols:  134

SECTEND_S			bcpl_symbols:  136, bcpl_symbols:  136

SectionHeader		bcpl_cg_head:  94

SectionSwitch		bcpl_cg_head:  189

SECTKET_S			bcpl_symbols:  137, bcpl_symbols:  137

SemanticTranslation_Meter	bcpl_metering_head:  42

SEMICOLON_S		bcpl_symbols:  138, bcpl_symbols:  138

SetLineNumber		bcpl_cg_head:  93, bcpl_cg_interface:  310

SetResult			bcpl_trans_head:  41

SetupAddr			bcpl_cg_head:  55

SKET_S			bcpl_symbols:  139, bcpl_symbols:  139

Sp			bcpl_cg_head:  218

Spr			bcpl_cg_head:  261

SSP			bcpl_trans_head:  107

StackRefTag		bcpl_cg_head:  167

Star			bcpl_cg_head:  239

StarThenReg		bcpl_cg_head:  240

Static			bcpl_cg_interface:  321, 325, 338

StaticAllocationCounter	bcpl_trans_head:  108

StaticFirst		bcpl_trans_head:  109

StaticList		bcpl_trans_head:  110

STATIC_S			bcpl_symbols:  140, bcpl_symbols:  140, bcpl_cg_interface:  26

Store			bcpl_cg_head:  60

StoreAll			bcpl_trans_head:  82, bcpl_cg_interface:  313

StoreArg			bcpl_cg_head:  70, bcpl_cg_interface:  127

StoreRegister		bcpl_cg_head:  61

StoreString		bcpl_compiler_head:  41, bcpl_compiler_head:  41

StoreSystemArg		bcpl_cg_head:  73, bcpl_cg_interface:  161

STRINGCONST_S		bcpl_symbols:  142, bcpl_symbols:  142, bcpl_cg_interface:  22

StringSw			bcpl_cg_interface:  149, 158, 161

STRING_S			bcpl_symbols:  141, bcpl_symbols:  141

STRUCTURE_S		bcpl_symbols:  143, bcpl_symbols:  143

SwapAandQ			bcpl_cg_head:  58

SwitchFlag		bcpl_trans_head:  111

SWITCHON_S		bcpl_symbols:  144, bcpl_symbols:  144

Symb			bcpl_compiler_head:  126, bcpl_compiler_head:  126

SymbolAdd_Meter		bcpl_metering_head:  34

SymbolLength		bcpl_cg_head:  165

SymbolName		bcpl_compiler_head:  55, bcpl_compiler_head:  55, 
			bcpl_cg_interface:  20, 235, 248, 262, 277, 289

SymbolRelbits		bcpl_cg_head:  166

Symbols			bcpl_compiler_head:  99, bcpl_compiler_head:  99

SymbolSearch_Meter		bcpl_metering_head:  35

SymtabFirst		bcpl_cg_head:  168

SymtabP			bcpl_cg_head:  169

SymtabSize		bcpl_cg_head:  181

SymtabV			bcpl_cg_head:  170

SyntaxAnalysis_Meter	bcpl_metering_head:  31

t			bcpl_cg_interface:  212, 213, 213, 213, 215, 216, 217, 218, 219, 221, 221, 325, 326, 327, 
			328, 329, 330, 330, 332, 333, 334, 334, 335, 335

TableCell			bcpl_trans_head:  112

TABLE_S			bcpl_symbols:  146, bcpl_symbols:  146, bcpl_cg_interface:  31

Tag			bcpl_cg_head:  171

TagPrMask			bcpl_cg_head:  206

TagXrMask			bcpl_cg_head:  205

Target			bcpl_trans_head:  36

TEMP_S			bcpl_symbols:  147, bcpl_symbols:  147, bcpl_cg_interface:  26

TEST_S			bcpl_symbols:  148, bcpl_symbols:  148

TextLength		bcpl_cg_head:  172

TextRelbits		bcpl_cg_head:  173

TextWords_Count		bcpl_metering_head:  47

TimeNow			bcpl_compiler_head:  114, bcpl_compiler_head:  114

TimeNowString		bcpl_compiler_head:  113, bcpl_compiler_head:  113

TotalLines		bcpl_metering_head:  25

TotalLines_Count		bcpl_metering_head:  46

TotalWords		bcpl_metering_head:  26

TO_S			bcpl_symbols:  149, bcpl_symbols:  149

Trans			bcpl_compiler_head:  70, bcpl_compiler_head:  70

Transbody			bcpl_trans_head:  20

TransConditional		bcpl_trans_head:  31

Transdef			bcpl_trans_head:  22

TransFnap			bcpl_trans_head:  56

TransFor			bcpl_trans_head:  32

TransLoop			bcpl_trans_head:  37

Transreport		bcpl_compiler_head:  50, bcpl_compiler_head:  50

TransSystemCall		bcpl_trans_head:  57

TRUE_S			bcpl_symbols:  150, bcpl_symbols:  150, bcpl_cg_interface:  29, 50

Type			bcpl_cg_interface:  149, 156, 161

TYPE_S			bcpl_symbols:  151, bcpl_symbols:  151

UndefLab			bcpl_cg_codes:  24

UndefName			bcpl_trans_codes:  32

UnexpectedCase		bcpl_compiler_head:  139, bcpl_compiler_head:  139, 
			bcpl_cg_interface:  35, 56

UNLESS_S			bcpl_symbols:  152, bcpl_symbols:  152

Unpackstring		bcpl_compiler_head:  22, bcpl_compiler_head:  22

UnrecognizedExpression	bcpl_trans_codes:  33

UNTIL_S			bcpl_symbols:  153, bcpl_symbols:  153

UpperCase			bcpl_compiler_head:  96, bcpl_compiler_head:  96

UsageCounter		bcpl_cg_head:  175

UsageTemp			bcpl_cg_interface:  61, 62, 65, 68, 69, 72, 76, 77, 80, 83, 84, 91, 95, 96, 103, 106, 
			107, 110, 113, 114, 117, 120, 121, 128, 131, 132, 140, 143, 144, 147, 150, 151, 162, 165, 
			166, 173, 177, 178, 181, 184, 185, 192, 195, 196, 203, 207, 208, 227, 228, 232, 233, 242, 
			245, 246, 256, 259, 260, 270, 274, 275, 283, 286, 287, 296, 300, 301, 304, 307, 308, 311, 
			314, 315, 318, 322, 323, 339

UserID			bcpl_compiler_head:  120, bcpl_compiler_head:  120

UtilitiesInit		bcpl_compiler_head:  60, bcpl_compiler_head:  60

v			bcpl_cg_interface:  41, 43, 45, 48, 56

VALDEF_S			bcpl_symbols:  154, bcpl_symbols:  154

ValofFlag			bcpl_trans_head:  113

ValofLabel		bcpl_trans_head:  114

VALOF_S			bcpl_symbols:  156, bcpl_symbols:  156

VECAP_S			bcpl_symbols:  158, bcpl_symbols:  158

VEC_S			bcpl_symbols:  157, bcpl_symbols:  157

Vmax			bcpl_compiler_head:  137, bcpl_compiler_head:  137

WalkList			bcpl_trans_head:  33

WHILE_S			bcpl_symbols:  159, bcpl_symbols:  159

Writech			bcpl_compiler_head:  17, bcpl_compiler_head:  17, 
			bcpl_cg_interface:  39, 42, 88, 100, 125, 137, 158, 159, 170, 189, 200, 220, 223, 238, 
			252, 279, 292

WriteConst		bcpl_cg_interface:  33, 41, 218, 219, 328

WriteData			bcpl_cg_head:  110

WriteDefs			bcpl_cg_head:  103

WriteEntry		bcpl_cg_head:  102

WriteGetlp		bcpl_cg_head:  101

WriteInstruction		bcpl_cg_head:  111

WriteLinkage		bcpl_cg_head:  104

WriteN			bcpl_compiler_head:  19, bcpl_compiler_head:  19, 
			bcpl_cg_interface:  45

WriteObjectListing		bcpl_compiler_head:  73, bcpl_compiler_head:  73

WriteObjectMap		bcpl_cg_head:  108

WriteOperand		bcpl_cg_interface:  15, 87, 99, 124, 135, 136, 154, 155, 156, 157, 169, 188, 199, 211, 
			236, 237, 249, 250, 251, 263, 264, 265, 278, 290, 291

WriteRelBits		bcpl_cg_head:  107

WriteS			bcpl_compiler_head:  18, bcpl_compiler_head:  18, 
			bcpl_cg_interface:  17, 48, 51, 54, 86, 98, 108, 134, 168, 179, 187, 198, 210, 235, 248, 
			262, 316

WriteSymbol		bcpl_cg_head:  106

X0			bcpl_cg_head:  228

X1			bcpl_cg_head:  229

X2			bcpl_cg_head:  230

X3			bcpl_cg_head:  231

X4			bcpl_cg_head:  232

X5			bcpl_cg_head:  233

X6			bcpl_cg_head:  234

X7			bcpl_cg_head:  235

Xr0			bcpl_cg_head:  246

Xr1			bcpl_cg_head:  247

Xr2			bcpl_cg_head:  248

Xr3			bcpl_cg_head:  249

Xr4			bcpl_cg_head:  250

Xr5			bcpl_cg_head:  251

Xr6			bcpl_cg_head:  252

Xr7			bcpl_cg_head:  253

Xref			bcpl_compiler_head:  103, bcpl_compiler_head:  103




Trans time 3.5, 755 object words per second.
	"	Begin text of WriteOperand

aa 000000  000014 127162		zero	12,44658		" WriteOperand
aa 000001  151164 145117		zero	53876,51791
aa 000002  160145 162141		zero	57445,58465
aa 000003  156144 000000		zero	56420
			L1:
aa 000004  000000 213000  15		epaq	0		" set lp to linkage section
aa 000005  700026 764161		lprplp	sb|22,*au
aa 000006  200000 021100		adlx1	bp|0		" BCPL save
aa 000007  700000 542111		sprpbp	sb|0,x1
aa 000010  700001 544111		sprplp	sb|1,x1
aa 000011  700424 620111		eax0	sb|276,x1
aa 000012  777760 360003		anx0	-16,du
aa 000013  700025 740100		stx0	sb|21		" end of save sequence

aa 000014  700002 234111  16		szn	sb|2,x1		" Desc
aa 000015  000010 601004		tnz	L6
aa 000016  600040 236100  17		ldq	sp|32		" OUTPUT
aa 000017  700014 756111		stq	sb|12,x1
aa 000020  000273 350004		eapap	L7		" "*t0"
aa 000021  700015 540111		sprpap	sb|13,x1
4a 000022  400110 272120		tsbbp	lp|L8,*		" WriteS
aa 000023  000012 000002		zero	10,2
aa 000024  000245 710004  18		tra	L5
			L6:
aa 000025  700002 760111  20		lprpap	sb|2,x1		" Desc
aa 000026  000000 236100		ldq	ap|0
aa 000027  700014 756111		stq	sb|12,x1
4a 000030  400106 272120		tsbbp	lp|L9,*		" SymbolName
aa 000031  000012 000001		zero	10,1
aa 000032  700003 756111		stq	sb|3,x1
aa 000033  600040 236100		ldq	sp|32		" OUTPUT
aa 000034  700014 756111		stq	sb|12,x1
aa 000035  000254 352004		eapbp	L10		" "*t(^s"
aa 000036  700015 542111		sprpbp	sb|13,x1
aa 000037  700003 236111		ldq	sb|3,x1
aa 000040  700016 756111		stq	sb|14,x1
4a 000041  400104 272120		tsbbp	lp|L11,*		" Format
aa 000042  000012 000003		zero	10,3
aa 000043  000110 710004  22		tra	L13
			L14:
aa 000044  600040 236100  23		ldq	sp|32		" OUTPUT
aa 000045  700014 756111		stq	sb|12,x1
aa 000046  000241 352004		eapbp	L15		" " ^s"
aa 000047  700015 542111		sprpbp	sb|13,x1
aa 000050  700002 762111		lprpbp	sb|2,x1		" Desc
aa 000051  200001 236100		ldq	bp|1
aa 000052  700016 756111		stq	sb|14,x1
4a 000053  400104 272120		tsbbp	lp|L11,*		" Format
aa 000054  000012 000003		zero	10,3
aa 000055  000172 710004  25		tra	L12
			L16:
aa 000056  600040 236100  27		ldq	sp|32		" OUTPUT
aa 000057  700014 756111		stq	sb|12,x1
aa 000060  000225 351404		eapab	L17		" " ^d"
aa 000061  700015 541111		sprpab	sb|13,x1
aa 000062  700002 761111		lprpab	sb|2,x1		" Desc
aa 000063  100001 236100		ldq	ab|1
aa 000064  700016 756111		stq	sb|14,x1
4a 000065  400104 272120		tsbbp	lp|L11,*		" Format
aa 000066  000012 000003		zero	10,3
aa 000067  000160 710004  29		tra	L12
			L18:
aa 000070  000157 710004  31		tra	L12
			L19:
aa 000071  600040 236100  32		ldq	sp|32		" OUTPUT
aa 000072  700014 756111		stq	sb|12,x1
aa 000073  000212 353404		eapbb	L17		" " ^d"
aa 000074  700015 543111		sprpbb	sb|13,x1
aa 000075  700002 763111		lprpbb	sb|2,x1		" Desc
aa 000076  300001 763100		lprpbb	bb|1
aa 000077  300000 236100		ldq	bb|0
aa 000100  700016 756111		stq	sb|14,x1
4a 000101  400104 272120		tsbbp	lp|L11,*		" Format
aa 000102  000012 000003		zero	10,3
aa 000103  000001 236007  33		ldq	1,dl		" 1
aa 000104  700003 756111		stq	sb|3,x1		" i
aa 000105  700002 765111		lprplb	sb|2,x1		" Desc
aa 000106  500001 765100		lprplb	lb|1
aa 000107  500000 236100		ldq	lb|0
aa 000110  700004 756111		stq	sb|4,x1
aa 000111  000013 710004		tra	L20
			L21:
aa 000112  700003 236111		ldq	sb|3,x1		" i
aa 000113  000001 736000		qls	1
aa 000114  000001 176007		sbq	1,dl		" 1
aa 000115  700002 760111		lprpap	sb|2,x1		" Desc
aa 000116  000001 760100		lprpap	ap|1
aa 000117  000000 350106		eapap	ap|0,ql
aa 000120  700014 540111		sprpap	sb|12,x1
aa 000121  000200 272004		tsbbp	L2+2		" WriteConst
aa 000122  000012 000001		zero	10,1
aa 000123  700003 054111		aos	sb|3,x1		" i
			L20:
aa 000124  700003 236111		ldq	sb|3,x1		" i
aa 000125  700004 116111		cmpq	sb|4,x1
aa 000126  777764 604404		tmoz	L21
aa 000127  000120 710004  35		tra	L12
			L22:
aa 000130  000143 235007		lda	99,dl		" UnexpectedCase
aa 000131  700014 755111		sta	sb|12,x1
aa 000132  700002 760111		lprpap	sb|2,x1		" Desc
aa 000133  000000 235100		lda	ap|0
aa 000134  700015 755111		sta	sb|13,x1
aa 000135  000144 352004		eapbp	L23		" "WriteOperand"
aa 000136  700016 542111		sprpbp	sb|14,x1
4a 000137  400102 272120		tsbbp	lp|L24,*		" CGreport
aa 000140  000012 000003		zero	10,3
aa 000141  600040 235100  36		lda	sp|32		" OUTPUT
aa 000142  700014 755111		sta	sb|12,x1
aa 000143  000134 352004		eapbp	L25		" " ^o"
aa 000144  700015 542111		sprpbp	sb|13,x1
aa 000145  700002 762111		lprpbp	sb|2,x1		" Desc
aa 000146  200001 235100		lda	bp|1
aa 000147  700016 755111		sta	sb|14,x1
4a 000150  400104 272120		tsbbp	lp|L11,*		" Format
aa 000151  000012 000003		zero	10,3
aa 000152  000075 710004		tra	L12
			L13:

	"	Begin switchon

aa 000153  700002 761111		lprpab	sb|2,x1		" Desc
aa 000154  100000 235100		lda	ab|0
aa 000155  000107 115007		cmpa	71,dl
aa 000156  000032 604004		tmi	L26
aa 000157  000113 115007		cmpa	75,dl
aa 000160  777676 604004		tmi	L16
aa 000161  000043 773000		lrl	35
aa 000162  000011 507007		dvf	9,dl		" hash table size
0a 000163  000177 115006		cmpa	L27,ql
aa 000164  777744 601004		tnz	L22
0a 000165  000166 710006		tra	L28,ql
			L28:
aa 000166  777656 710004		tra	L14
aa 000167  777655 710004		tra	L14
aa 000170  777740 710004		tra	L22
aa 000171  777737 710004		tra	L22
aa 000172  777677 710004		tra	L19
aa 000173  777663 710004		tra	L16
aa 000174  777662 710004		tra	L16
aa 000175  777661 710004		tra	L16
aa 000176  777672 710004		tra	L18
			L27:
aa 000177  000000 000016		zero	0,14
aa 000200  000000 000012		zero	0,10
aa 000201  000000 000000		zero	0
aa 000202  000000 000000		zero	0
aa 000203  000000 000016		zero	0,14
aa 000204  000000 000016		zero	0,14
aa 000205  000000 000014		zero	0,12
aa 000206  000000 000015		zero	0,13
aa 000207  000000 000016		zero	0,14
			L26:
aa 000210  000043 773000		lrl	35
aa 000211  000015 507007		dvf	13,dl		" hash table size
0a 000212  000232 115006		cmpa	L29,ql
aa 000213  777715 601004		tnz	L22
0a 000214  000215 710006		tra	L30,ql
			L30:
aa 000215  777641 710004		tra	L16
aa 000216  777712 710004		tra	L22
aa 000217  777637 710004		tra	L16
aa 000220  777636 710004		tra	L16
aa 000221  777623 710004		tra	L14
aa 000222  777646 710004		tra	L18
aa 000223  777633 710004		tra	L16
aa 000224  777704 710004		tra	L22
aa 000225  777703 710004		tra	L22
aa 000226  777702 710004		tra	L22
aa 000227  777701 710004		tra	L22
aa 000230  777614 710004		tra	L14
aa 000231  777677 710004		tra	L22
			L29:
aa 000232  000000 000004		zero	0,4
aa 000233  000000 000000		zero	0
aa 000234  000000 000001		zero	0,1
aa 000235  000000 000003		zero	0,3
aa 000236  000000 000002		zero	0,2
aa 000237  000000 000002		zero	0,2
aa 000240  000000 000004		zero	0,4
aa 000241  000000 000000		zero	0
aa 000242  000000 000000		zero	0
aa 000243  000000 000000		zero	0
aa 000244  000000 000000		zero	0
aa 000245  000000 000000		zero	0
aa 000246  000000 000000		zero	0
			L12:
aa 000247  700002 763111  38		lprpbb	sb|2,x1		" Desc
aa 000250  300002 234100		szn	bb|2
aa 000251  000012 600004		tze	L31
aa 000252  600040 236100		ldq	sp|32		" OUTPUT
aa 000253  700014 756111		stq	sb|12,x1
aa 000254  000021 371404		eaplb	L32		" "  /^s/"
aa 000255  700015 545111		sprplb	sb|13,x1
aa 000256  700002 765111		lprplb	sb|2,x1		" Desc
aa 000257  500002 236100		ldq	lb|2
aa 000260  700016 756111		stq	sb|14,x1
4a 000261  400104 272120		tsbbp	lp|L11,*		" Format
aa 000262  000012 000003		zero	10,3
			L31:
aa 000263  600040 236100  39		ldq	sp|32		" OUTPUT
aa 000264  700014 756111		stq	sb|12,x1
aa 000265  000051 236007		ldq	41,dl		" ')'
aa 000266  700015 756111		stq	sb|13,x1
4a 000267  400100 272120		tsbbp	lp|L33,*		" Writech
aa 000270  000012 000002		zero	10,2
			L5:
aa 000271  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000272  200000 121100		sblx1	bp|0
aa 000273  700001 764111		lprplp	sb|1,x1
aa 000274  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L32:
aa 000275  000006 040040		zero	6,16416		" "  /^s/"
aa 000276  057136 163057		zero	24158,58927
			L25:
aa 000277  000003 040136		zero	3,16478		" " ^o"
aa 000300  157000 000000		zero	56832
			L23:
aa 000301  000014 127162		zero	12,44658		" "WriteOperand"
aa 000302  151164 145117		zero	53876,51791
aa 000303  160145 162141		zero	57445,58465
aa 000304  156144 000000		zero	56420
			L17:
aa 000305  000003 040136		zero	3,16478		" " ^d"
aa 000306  144000 000000		zero	51200
			L15:
aa 000307  000003 040136		zero	3,16478		" " ^s"
aa 000310  163000 000000		zero	58880
			L10:
aa 000311  000004 011050		zero	4,4648		" "*t(^s"
aa 000312  136163 000000		zero	48243
			L7:
aa 000313  000002 011060		zero	2,4656		" "*t0"
	"	Begin text of WriteConst

aa 000314  000012 127162		zero	10,44658		" WriteConst
aa 000315  151164 145103		zero	53876,51779
aa 000316  157156 163164		zero	56942,58996
			L2:
aa 000317  000000 213000  41		epaq	0		" set lp to linkage section
aa 000320  700026 764161		lprplp	sb|22,*au
aa 000321  200000 021100		adlx1	bp|0		" BCPL save
aa 000322  700000 542111		sprpbp	sb|0,x1
aa 000323  700001 544111		sprplp	sb|1,x1
aa 000324  700424 620111		eax0	sb|276,x1
aa 000325  777760 360003		anx0	-16,du
aa 000326  700025 740100		stx0	sb|21		" end of save sequence

aa 000327  600040 236100  42		ldq	sp|32		" OUTPUT
aa 000330  700006 756111		stq	sb|6,x1
aa 000331  000040 236007		ldq	32,dl		" '*s'
aa 000332  700007 756111		stq	sb|7,x1
4a 000333  400100 272120		tsbbp	lp|L33,*		" Writech
aa 000334  000004 000002		zero	4,2
aa 000335  000051 710004  44		tra	L38
			L39:
aa 000336  600040 236100  45		ldq	sp|32		" OUTPUT
aa 000337  700006 756111		stq	sb|6,x1
aa 000340  700002 760111		lprpap	sb|2,x1		" v
aa 000341  000001 236100		ldq	ap|1
aa 000342  700007 756111		stq	sb|7,x1
4a 000343  400076 272120		tsbbp	lp|L40,*		" WriteN
aa 000344  000004 000002		zero	4,2
aa 000345  000072 710004  47		tra	L36
			L41:
aa 000346  600040 236100  48		ldq	sp|32		" OUTPUT
aa 000347  700006 756111		stq	sb|6,x1
aa 000350  700002 762111		lprpbp	sb|2,x1		" v
aa 000351  200001 236100		ldq	bp|1
aa 000352  700007 756111		stq	sb|7,x1
4a 000353  400110 272120		tsbbp	lp|L8,*		" WriteS
aa 000354  000004 000002		zero	4,2
aa 000355  000062 710004  50		tra	L36
			L42:
aa 000356  600040 236100  51		ldq	sp|32		" OUTPUT
aa 000357  700006 756111		stq	sb|6,x1
aa 000360  000070 351404		eapab	L43		" "TRUE"
aa 000361  700007 541111		sprpab	sb|7,x1
4a 000362  400110 272120		tsbbp	lp|L8,*		" WriteS
aa 000363  000004 000002		zero	4,2
aa 000364  000053 710004  53		tra	L36
			L44:
aa 000365  600040 236100  54		ldq	sp|32		" OUTPUT
aa 000366  700006 756111		stq	sb|6,x1
aa 000367  000057 351404		eapab	L45		" "FALSE"
aa 000370  700007 541111		sprpab	sb|7,x1
4a 000371  400110 272120		tsbbp	lp|L8,*		" WriteS
aa 000372  000004 000002		zero	4,2
aa 000373  000044 710004  56		tra	L36
			L46:
aa 000374  000143 236007		ldq	99,dl		" UnexpectedCase
aa 000375  700006 756111		stq	sb|6,x1
aa 000376  700002 761111		lprpab	sb|2,x1		" v
aa 000377  100000 236100		ldq	ab|0
aa 000400  700007 756111		stq	sb|7,x1
aa 000401  000042 353404		eapbb	L47		" "WriteConst"
aa 000402  700010 543111		sprpbb	sb|8,x1
4a 000403  400102 272120		tsbbp	lp|L24,*		" CGreport
aa 000404  000004 000003		zero	4,3
aa 000405  000032 710004		tra	L37
			L38:

	"	Begin switchon

aa 000406  700002 763111		lprpbb	sb|2,x1		" v
aa 000407  300000 235100		lda	bb|0
aa 000410  000043 773000		lrl	35
aa 000411  000011 507007		dvf	9,dl		" hash table size
0a 000412  000426 115006		cmpa	L48,ql
aa 000413  777761 601004		tnz	L46
0a 000414  000415 710006		tra	L49,ql
			L49:
aa 000415  777757 710004		tra	L46
aa 000416  777730 710004		tra	L41
aa 000417  777727 710004		tra	L41
aa 000420  777754 710004		tra	L46
aa 000421  777744 710004		tra	L44
aa 000422  777752 710004		tra	L46
aa 000423  777713 710004		tra	L39
aa 000424  777750 710004		tra	L46
aa 000425  777731 710004		tra	L42
			L48:
aa 000426  000000 000000		zero	0
aa 000427  000000 000012		zero	0,10
aa 000430  000000 000001		zero	0,1
aa 000431  000000 000000		zero	0
aa 000432  000000 000003		zero	0,3
aa 000433  000000 000000		zero	0
aa 000434  000000 000001		zero	0,1
aa 000435  000000 000000		zero	0
aa 000436  000000 000016		zero	0,14
			L37:
			L36:
aa 000437  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000440  200000 121100		sblx1	bp|0
aa 000441  700001 764111		lprplp	sb|1,x1
aa 000442  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L47:
aa 000443  000012 127162		zero	10,44658		" "WriteConst"
aa 000444  151164 145103		zero	53876,51779
aa 000445  157156 163164		zero	56942,58996
			L45:
aa 000446  000005 106101		zero	5,35905		" "FALSE"
aa 000447  114123 105000		zero	38995,35328
			L43:
aa 000450  000004 124122		zero	4,43090		" "TRUE"
aa 000451  125105 000000		zero	43589
	"	Begin text of GenerateLabel

aa 000452  000015 107145		zero	13,36453		" GenerateLabel
aa 000453  156145 162141		zero	56421,58465
aa 000454  164145 114141		zero	59493,39009
aa 000455  142145 154000		zero	50277,55296
			L51:
aa 000456  000000 213000  67		epaq	0		" set lp to linkage section
aa 000457  700026 764161		lprplp	sb|22,*au
aa 000460  200000 021100		adlx1	bp|0		" BCPL save
aa 000461  700000 542111		sprpbp	sb|0,x1
aa 000462  700001 544111		sprplp	sb|1,x1
aa 000463  700424 620111		eax0	sb|276,x1
aa 000464  777760 360003		anx0	-16,du
aa 000465  700025 740100		stx0	sb|21		" end of save sequence

aa 000466  600226 234100  69		szn	sp|150		" Metering
aa 000467  000004 600004		tze	L55
4a 000470  400074 272120		tsbbp	lp|L56,*		" SaveOldUsage
aa 000471  000004 000000		zero	4
aa 000472  700003 756111		stq	sb|3,x1		" UsageTemp
			L55:
aa 000473  600155 234100  70		szn	sp|109		" OcodeSw
aa 000474  000011 600004		tze	L57
aa 000475  600040 236100		ldq	sp|32		" OUTPUT
aa 000476  700006 756111		stq	sb|6,x1
aa 000477  000026 371404		eaplb	L58		" "LAB ^d*n"
aa 000500  700007 545111		sprplb	sb|7,x1
aa 000501  700002 236111		ldq	sb|2,x1		" L
aa 000502  700010 756111		stq	sb|8,x1
4a 000503  400104 272120		tsbbp	lp|L11,*		" Format
aa 000504  000004 000003		zero	4,3
			L57:
aa 000505  700002 236111  71		ldq	sb|2,x1		" L
aa 000506  700006 756111		stq	sb|6,x1
4a 000507  400072 272120		tsbbp	lp|L59,*		" Complab
aa 000510  000004 000001		zero	4,1
aa 000511  600226 234100  72		szn	sp|150		" Metering
aa 000512  000007 600004		tze	L60
aa 000513  000047 236007		ldq	39,dl		" CodeGeneration_Meter
aa 000514  700006 756111		stq	sb|6,x1
aa 000515  700003 236111		ldq	sb|3,x1		" UsageTemp
aa 000516  700007 756111		stq	sb|7,x1
4a 000517  400070 272120		tsbbp	lp|L61,*		" RecordUsage
aa 000520  000004 000002		zero	4,2
			L60:
			L54:
aa 000521  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000522  200000 121100		sblx1	bp|0
aa 000523  700001 764111		lprplp	sb|1,x1
aa 000524  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L58:
aa 000525  000007 114101		zero	7,38977		" "LAB ^d*n"
aa 000526  102040 136144		zero	33824,48228
aa 000527  012000 000000		zero	5120
	"	Begin text of GenerateJump

aa 000530  000014 107145		zero	12,36453		" GenerateJump
aa 000531  156145 162141		zero	56421,58465
aa 000532  164145 112165		zero	59493,38005
aa 000533  155160 000000		zero	55920
			L50:
aa 000534  000000 213000  60		epaq	0		" set lp to linkage section
aa 000535  700026 764161		lprplp	sb|22,*au
aa 000536  200000 021100		adlx1	bp|0		" BCPL save
aa 000537  700000 542111		sprpbp	sb|0,x1
aa 000540  700001 544111		sprplp	sb|1,x1
aa 000541  700424 620111		eax0	sb|276,x1
aa 000542  777760 360003		anx0	-16,du
aa 000543  700025 740100		stx0	sb|21		" end of save sequence

aa 000544  600226 234100  62		szn	sp|150		" Metering
aa 000545  000004 600004		tze	L65
4a 000546  400074 272120		tsbbp	lp|L56,*		" SaveOldUsage
aa 000547  000004 000000		zero	4
aa 000550  700003 756111		stq	sb|3,x1		" UsageTemp
			L65:
aa 000551  600155 234100  63		szn	sp|109		" OcodeSw
aa 000552  000011 600004		tze	L66
aa 000553  600040 236100		ldq	sp|32		" OUTPUT
aa 000554  700006 756111		stq	sb|6,x1
aa 000555  000026 371404		eaplb	L67		" "JUMP ^d*n"
aa 000556  700007 545111		sprplb	sb|7,x1
aa 000557  700002 236111		ldq	sb|2,x1		" L
aa 000560  700010 756111		stq	sb|8,x1
4a 000561  400104 272120		tsbbp	lp|L11,*		" Format
aa 000562  000004 000003		zero	4,3
			L66:
aa 000563  700002 236111  64		ldq	sb|2,x1		" L
aa 000564  700006 756111		stq	sb|6,x1
4a 000565  400066 272120		tsbbp	lp|L68,*		" Compjump
aa 000566  000004 000001		zero	4,1
aa 000567  600226 234100  65		szn	sp|150		" Metering
aa 000570  000007 600004		tze	L69
aa 000571  000047 236007		ldq	39,dl		" CodeGeneration_Meter
aa 000572  700006 756111		stq	sb|6,x1
aa 000573  700003 236111		ldq	sb|3,x1		" UsageTemp
aa 000574  700007 756111		stq	sb|7,x1
4a 000575  400070 272120		tsbbp	lp|L61,*		" RecordUsage
aa 000576  000004 000002		zero	4,2
			L69:
			L64:
aa 000577  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000600  200000 121100		sblx1	bp|0
aa 000601  700001 764111		lprplp	sb|1,x1
aa 000602  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L67:
aa 000603  000010 112125		zero	8,37973		" "JUMP ^d*n"
aa 000604  115120 040136		zero	39504,16478
aa 000605  144012 000000		zero	51210
	"	Begin text of GenerateRtdefEnd

aa 000606  000020 107145		zero	16,36453		" GenerateRtdefEnd
aa 000607  156145 162141		zero	56421,58465
aa 000610  164145 122164		zero	59493,42100
aa 000611  144145 146105		zero	51301,52293
aa 000612  156144 000000		zero	56420
			L71:
aa 000613  000000 213000  82		epaq	0		" set lp to linkage section
aa 000614  700026 764161		lprplp	sb|22,*au
aa 000615  200000 021100		adlx1	bp|0		" BCPL save
aa 000616  700000 542111		sprpbp	sb|0,x1
aa 000617  700001 544111		sprplp	sb|1,x1
aa 000620  700423 620111		eax0	sb|275,x1
aa 000621  777760 360003		anx0	-16,du
aa 000622  700025 740100		stx0	sb|21		" end of save sequence

aa 000623  600226 234100  84		szn	sp|150		" Metering
aa 000624  000004 600004		tze	L75
4a 000625  400074 272120		tsbbp	lp|L56,*		" SaveOldUsage
aa 000626  000006 000000		zero	6
aa 000627  700003 756111		stq	sb|3,x1		" UsageTemp
			L75:
aa 000630  600155 234100  85		szn	sp|109		" OcodeSw
aa 000631  000033 600004		tze	L76
aa 000632  700002 234111  86		szn	sb|2,x1		" Desc
aa 000633  000003 601004		tnz	L77
aa 000634  000053 371404		eaplb	L79		" "RETURN"
aa 000635  000002 710004		tra	L78
			L77:
aa 000636  000046 371404		eaplb	L80		" "RETURN_VAL"
			L78:
aa 000637  700005 545111		sprplb	sb|5,x1
aa 000640  700005 236111		ldq	sb|5,x1
aa 000641  700004 756111		stq	sb|4,x1
aa 000642  600040 236100		ldq	sp|32		" OUTPUT
aa 000643  700010 756111		stq	sb|8,x1
aa 000644  700004 236111		ldq	sb|4,x1
aa 000645  700011 756111		stq	sb|9,x1
4a 000646  400110 272120		tsbbp	lp|L8,*		" WriteS
aa 000647  000006 000002		zero	6,2
aa 000650  700002 234111  87		szn	sb|2,x1		" Desc
aa 000651  000005 600004		tze	L81
aa 000652  700002 236111		ldq	sb|2,x1		" Desc
aa 000653  700010 756111		stq	sb|8,x1
aa 000654  777132 272004		tsbbp	L1+2		" WriteOperand
aa 000655  000006 000001		zero	6,1
			L81:
aa 000656  600040 236100  88		ldq	sp|32		" OUTPUT
aa 000657  700010 756111		stq	sb|8,x1
aa 000660  000012 236007		ldq	10,dl		" '*n'
aa 000661  700011 756111		stq	sb|9,x1
4a 000662  400100 272120		tsbbp	lp|L33,*		" Writech
aa 000663  000006 000002		zero	6,2
			L76:
aa 000664  700002 236111  90		ldq	sb|2,x1		" Desc
aa 000665  700010 756111		stq	sb|8,x1
4a 000666  400064 272120		tsbbp	lp|L82,*		" Compreturn
aa 000667  000006 000001		zero	6,1
aa 000670  600226 234100  91		szn	sp|150		" Metering
aa 000671  000007 600004		tze	L83
aa 000672  000047 236007		ldq	39,dl		" CodeGeneration_Meter
aa 000673  700010 756111		stq	sb|8,x1
aa 000674  700003 236111		ldq	sb|3,x1		" UsageTemp
aa 000675  700011 756111		stq	sb|9,x1
4a 000676  400070 272120		tsbbp	lp|L61,*		" RecordUsage
aa 000677  000006 000002		zero	6,2
			L83:
			L74:
aa 000700  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000701  200000 121100		sblx1	bp|0
aa 000702  700001 764111		lprplp	sb|1,x1
aa 000703  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L80:
aa 000704  000012 122105		zero	10,42053		" "RETURN_VAL"
aa 000705  124125 122116		zero	43093,42062
aa 000706  137126 101114		zero	48726,33356
			L79:
aa 000707  000006 122105		zero	6,42053		" "RETURN"
aa 000710  124125 122116		zero	43093,42062
	"	Begin text of GenerateRtdefBegin

aa 000711  000022 107145		zero	18,36453		" GenerateRtdefBegin
aa 000712  156145 162141		zero	56421,58465
aa 000713  164145 122164		zero	59493,42100
aa 000714  144145 146102		zero	51301,52290
aa 000715  145147 151156		zero	51815,53870
			L70:
aa 000716  000000 213000  75		epaq	0		" set lp to linkage section
aa 000717  700026 764161		lprplp	sb|22,*au
aa 000720  200000 021100		adlx1	bp|0		" BCPL save
aa 000721  700000 542111		sprpbp	sb|0,x1
aa 000722  700001 544111		sprplp	sb|1,x1
aa 000723  700427 620111		eax0	sb|279,x1
aa 000724  777760 360003		anx0	-16,du
aa 000725  700025 740100		stx0	sb|21		" end of save sequence

aa 000726  600226 234100  77		szn	sp|150		" Metering
aa 000727  000004 600004		tze	L87
4a 000730  400074 272120		tsbbp	lp|L56,*		" SaveOldUsage
aa 000731  000012 000000		zero	10
aa 000732  700006 756111		stq	sb|6,x1		" UsageTemp
			L87:
aa 000733  600155 234100  78		szn	sp|109		" OcodeSw
aa 000734  000027 600004		tze	L88
aa 000735  700004 234111		szn	sb|4,x1		" Functsw
aa 000736  000003 600004		tze	L89
aa 000737  000060 371404		eaplb	L91		" "FNDEF"
aa 000740  000002 710004		tra	L90
			L89:
aa 000741  000054 371404		eaplb	L92		" "RTDEF"
			L90:
aa 000742  700010 545111		sprplb	sb|8,x1
aa 000743  700010 236111		ldq	sb|8,x1
aa 000744  700007 756111		stq	sb|7,x1
aa 000745  600040 236100		ldq	sp|32		" OUTPUT
aa 000746  700014 756111		stq	sb|12,x1
aa 000747  000042 371404		eaplb	L93		" "^s ^d ^s ^b*n"
aa 000750  700015 545111		sprplb	sb|13,x1
aa 000751  700007 236111		ldq	sb|7,x1
aa 000752  700016 756111		stq	sb|14,x1
aa 000753  700002 236111		ldq	sb|2,x1		" L
aa 000754  700017 756111		stq	sb|15,x1
aa 000755  700003 236111		ldq	sb|3,x1		" ID
aa 000756  700020 756111		stq	sb|16,x1
aa 000757  700005 236111		ldq	sb|5,x1		" Mainsw
aa 000760  700021 756111		stq	sb|17,x1
4a 000761  400104 272120		tsbbp	lp|L11,*		" Format
aa 000762  000012 000006		zero	10,6
			L88:
aa 000763  700002 236111  79		ldq	sb|2,x1		" L
aa 000764  700014 756111		stq	sb|12,x1
aa 000765  700003 236111		ldq	sb|3,x1		" ID
aa 000766  700015 756111		stq	sb|13,x1
aa 000767  700004 236111		ldq	sb|4,x1		" Functsw
aa 000770  700016 756111		stq	sb|14,x1
aa 000771  700005 236111		ldq	sb|5,x1		" Mainsw
aa 000772  700017 756111		stq	sb|15,x1
4a 000773  400062 272120		tsbbp	lp|L94,*		" Compentry
aa 000774  000012 000004		zero	10,4
aa 000775  600226 234100  80		szn	sp|150		" Metering
aa 000776  000007 600004		tze	L95
aa 000777  000047 236007		ldq	39,dl		" CodeGeneration_Meter
aa 001000  700014 756111		stq	sb|12,x1
aa 001001  700006 236111		ldq	sb|6,x1		" UsageTemp
aa 001002  700015 756111		stq	sb|13,x1
4a 001003  400070 272120		tsbbp	lp|L61,*		" RecordUsage
aa 001004  000012 000002		zero	10,2
			L95:
			L86:
aa 001005  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001006  200000 121100		sblx1	bp|0
aa 001007  700001 764111		lprplp	sb|1,x1
aa 001010  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L93:
aa 001011  000014 136163		zero	12,48243		" "^s ^d ^s ^b*n"
aa 001012  040136 144040		zero	16478,51232
aa 001013  136163 040136		zero	48243,16478
aa 001014  142012 000000		zero	50186
			L92:
aa 001015  000005 122124		zero	5,42068		" "RTDEF"
aa 001016  104105 106000		zero	34885,35840
			L91:
aa 001017  000005 106116		zero	5,35918		" "FNDEF"
aa 001020  104105 106000		zero	34885,35840
	"	Begin text of GenerateGoto

aa 001021  000014 107145		zero	12,36453		" GenerateGoto
aa 001022  156145 162141		zero	56421,58465
aa 001023  164145 107157		zero	59493,36463
aa 001024  164157 000000		zero	59503
			L96:
aa 001025  000000 213000  94		epaq	0		" set lp to linkage section
aa 001026  700026 764161		lprplp	sb|22,*au
aa 001027  200000 021100		adlx1	bp|0		" BCPL save
aa 001030  700000 542111		sprpbp	sb|0,x1
aa 001031  700001 544111		sprplp	sb|1,x1
aa 001032  700423 620111		eax0	sb|275,x1
aa 001033  777760 360003		anx0	-16,du
aa 001034  700025 740100		stx0	sb|21		" end of save sequence

aa 001035  600226 234100  96		szn	sp|150		" Metering
aa 001036  000004 600004		tze	L107
4a 001037  400074 272120		tsbbp	lp|L56,*		" SaveOldUsage
aa 001040  000004 000000		zero	4
aa 001041  700003 756111		stq	sb|3,x1		" UsageTemp
			L107:
aa 001042  600155 234100  97		szn	sp|109		" OcodeSw
aa 001043  000021 600004		tze	L108
aa 001044  600040 236100  98		ldq	sp|32		" OUTPUT
aa 001045  700006 756111		stq	sb|6,x1
aa 001046  000036 371404		eaplb	L109		" "GOTO"
aa 001047  700007 545111		sprplb	sb|7,x1
4a 001050  400110 272120		tsbbp	lp|L8,*		" WriteS
aa 001051  000004 000002		zero	4,2
aa 001052  700002 236111  99		ldq	sb|2,x1		" Desc
aa 001053  700006 756111		stq	sb|6,x1
aa 001054  776732 272004		tsbbp	L1+2		" WriteOperand
aa 001055  000004 000001		zero	4,1
aa 001056  600040 236100  100		ldq	sp|32		" OUTPUT
aa 001057  700006 756111		stq	sb|6,x1
aa 001060  000012 236007		ldq	10,dl		" '*n'
aa 001061  700007 756111		stq	sb|7,x1
4a 001062  400100 272120		tsbbp	lp|L33,*		" Writech
aa 001063  000004 000002		zero	4,2
			L108:
aa 001064  700002 236111  102		ldq	sb|2,x1		" Desc
aa 001065  700006 756111		stq	sb|6,x1
4a 001066  400060 272120		tsbbp	lp|L110,*		" Compgoto
aa 001067  000004 000001		zero	4,1
aa 001070  600226 234100  103		szn	sp|150		" Metering
aa 001071  000007 600004		tze	L111
aa 001072  000047 236007		ldq	39,dl		" CodeGeneration_Meter
aa 001073  700006 756111		stq	sb|6,x1
aa 001074  700003 236111		ldq	sb|3,x1		" UsageTemp
aa 001075  700007 756111		stq	sb|7,x1
4a 001076  400070 272120		tsbbp	lp|L61,*		" RecordUsage
aa 001077  000004 000002		zero	4,2
			L111:
			L106:
aa 001100  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001101  200000 121100		sblx1	bp|0
aa 001102  700001 764111		lprplp	sb|1,x1
aa 001103  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L109:
aa 001104  000004 107117		zero	4,36431		" "GOTO"
aa 001105  124117 000000		zero	43087
	"	Begin text of GenerateFinish

aa 001106  000016 107145		zero	14,36453		" GenerateFinish
aa 001107  156145 162141		zero	56421,58465
aa 001110  164145 106151		zero	59493,35945
aa 001111  156151 163150		zero	56425,58984
			L97:
aa 001112  000000 213000  105		epaq	0		" set lp to linkage section
aa 001113  700026 764161		lprplp	sb|22,*au
aa 001114  200000 021100		adlx1	bp|0		" BCPL save
aa 001115  700000 542111		sprpbp	sb|0,x1
aa 001116  700001 544111		sprplp	sb|1,x1
aa 001117  700423 620111		eax0	sb|275,x1
aa 001120  777760 360003		anx0	-16,du
aa 001121  700025 740100		stx0	sb|21		" end of save sequence

aa 001122  600226 234100  107		szn	sp|150		" Metering
aa 001123  000004 600004		tze	L115
4a 001124  400074 272120		tsbbp	lp|L56,*		" SaveOldUsage
aa 001125  000004 000000		zero	4
aa 001126  700002 756111		stq	sb|2,x1		" UsageTemp
			L115:
aa 001127  600155 234100  108		szn	sp|109		" OcodeSw
aa 001130  000007 600004		tze	L116
aa 001131  600040 236100		ldq	sp|32		" OUTPUT
aa 001132  700006 756111		stq	sb|6,x1
aa 001133  000022 371404		eaplb	L117		" "FINISH*n"
aa 001134  700007 545111		sprplb	sb|7,x1
4a 001135  400110 272120		tsbbp	lp|L8,*		" WriteS
aa 001136  000004 000002		zero	4,2
			L116:
4a 001137  400056 272120  109		tsbbp	lp|L118,*		" Compfinish
aa 001140  000004 000000		zero	4
aa 001141  600226 234100  110		szn	sp|150		" Metering
aa 001142  000007 600004		tze	L119
aa 001143  000047 236007		ldq	39,dl		" CodeGeneration_Meter
aa 001144  700006 756111		stq	sb|6,x1
aa 001145  700002 236111		ldq	sb|2,x1		" UsageTemp
aa 001146  700007 756111		stq	sb|7,x1
4a 001147  400070 272120		tsbbp	lp|L61,*		" RecordUsage
aa 001150  000004 000002		zero	4,2
			L119:
			L114:
aa 001151  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001152  200000 121100		sblx1	bp|0
aa 001153  700001 764111		lprplp	sb|1,x1
aa 001154  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L117:
aa 001155  000007 106111		zero	7,35913		" "FINISH*n"
aa 001156  116111 123110		zero	40009,42568
aa 001157  012000 000000		zero	5120
	"	Begin text of ReserveArglist

aa 001160  000016 122145		zero	14,42085		" ReserveArglist
aa 001161  163145 162166		zero	58981,58486
aa 001162  145101 162147		zero	51777,58471
aa 001163  154151 163164		zero	55401,58996
			L98:
aa 001164  000000 213000  112		epaq	0		" set lp to linkage section
aa 001165  700026 764161		lprplp	sb|22,*au
aa 001166  200000 021100		adlx1	bp|0		" BCPL save
aa 001167  700000 542111		sprpbp	sb|0,x1
aa 001170  700001 544111		sprplp	sb|1,x1
aa 001171  700424 620111		eax0	sb|276,x1
aa 001172  777760 360003		anx0	-16,du
aa 001173  700025 740100		stx0	sb|21		" end of save sequence

aa 001174  600226 234100  114		szn	sp|150		" Metering
aa 001175  000004 600004		tze	L123
4a 001176  400074 272120		tsbbp	lp|L56,*		" SaveOldUsage
aa 001177  000004 000000		zero	4
aa 001200  700003 756111		stq	sb|3,x1		" UsageTemp
			L123:
aa 001201  600155 234100  115		szn	sp|109		" OcodeSw
aa 001202  000011 600004		tze	L124
aa 001203  600040 236100		ldq	sp|32		" OUTPUT
aa 001204  700006 756111		stq	sb|6,x1
aa 001205  000026 371404		eaplb	L125		" "ARGLIST ^d*n"
aa 001206  700007 545111		sprplb	sb|7,x1
aa 001207  700002 236111		ldq	sb|2,x1		" Nargs
aa 001210  700010 756111		stq	sb|8,x1
4a 001211  400104 272120		tsbbp	lp|L11,*		" Format
aa 001212  000004 000003		zero	4,3
			L124:
aa 001213  700002 236111  116		ldq	sb|2,x1		" Nargs
aa 001214  700006 756111		stq	sb|6,x1
4a 001215  400054 272120		tsbbp	lp|L126,*		" CreateArglist
aa 001216  000004 000001		zero	4,1
aa 001217  600226 234100  117		szn	sp|150		" Metering
aa 001220  000007 600004		tze	L127
aa 001221  000047 236007		ldq	39,dl		" CodeGeneration_Meter
aa 001222  700006 756111		stq	sb|6,x1
aa 001223  700003 236111		ldq	sb|3,x1		" UsageTemp
aa 001224  700007 756111		stq	sb|7,x1
4a 001225  400070 272120		tsbbp	lp|L61,*		" RecordUsage
aa 001226  000004 000002		zero	4,2
			L127:
			L122:
aa 001227  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001230  200000 121100		sblx1	bp|0
aa 001231  700001 764111		lprplp	sb|1,x1
aa 001232  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L125:
aa 001233  000013 101122		zero	11,33362		" "ARGLIST ^d*n"
aa 001234  107114 111123		zero	36428,37459
aa 001235  124040 136144		zero	43040,48228
aa 001236  012000 000000		zero	5120
	"	Begin text of GenerateArg

aa 001237  000013 107145		zero	11,36453		" GenerateArg
aa 001240  156145 162141		zero	56421,58465
aa 001241  164145 101162		zero	59493,33394
aa 001242  147000 000000		zero	52736
			L99:
aa 001243  000000 213000  119		epaq	0		" set lp to linkage section
aa 001244  700026 764161		lprplp	sb|22,*au
aa 001245  200000 021100		adlx1	bp|0		" BCPL save
aa 001246  700000 542111		sprpbp	sb|0,x1
aa 001247  700001 544111		sprplp	sb|1,x1
aa 001250  700424 620111		eax0	sb|276,x1
aa 001251  777760 360003		anx0	-16,du
aa 001252  700025 740100		stx0	sb|21		" end of save sequence

aa 001253  600226 234100  121		szn	sp|150		" Metering
aa 001254  000004 600004		tze	L131
4a 001255  400074 272120		tsbbp	lp|L56,*		" SaveOldUsage
aa 001256  000006 000000		zero	6
aa 001257  700004 756111		stq	sb|4,x1		" UsageTemp
			L131:
aa 001260  600155 234100  122		szn	sp|109		" OcodeSw
aa 001261  000023 600004		tze	L132
aa 001262  600040 236100  123		ldq	sp|32		" OUTPUT
aa 001263  700010 756111		stq	sb|8,x1
aa 001264  000042 371404		eaplb	L133		" "ARG ^d"
aa 001265  700011 545111		sprplb	sb|9,x1
aa 001266  700002 236111		ldq	sb|2,x1		" i
aa 001267  700012 756111		stq	sb|10,x1
4a 001270  400104 272120		tsbbp	lp|L11,*		" Format
aa 001271  000006 000003		zero	6,3
aa 001272  700003 236111  124		ldq	sb|3,x1		" Desc
aa 001273  700010 756111		stq	sb|8,x1
aa 001274  776512 272004		tsbbp	L1+2		" WriteOperand
aa 001275  000006 000001		zero	6,1
aa 001276  600040 236100  125		ldq	sp|32		" OUTPUT
aa 001277  700010 756111		stq	sb|8,x1
aa 001300  000012 236007		ldq	10,dl		" '*n'
aa 001301  700011 756111		stq	sb|9,x1
4a 001302  400100 272120		tsbbp	lp|L33,*		" Writech
aa 001303  000006 000002		zero	6,2
			L132:
aa 001304  700002 236111  127		ldq	sb|2,x1		" i
aa 001305  700010 756111		stq	sb|8,x1
aa 001306  700003 236111		ldq	sb|3,x1		" Desc
aa 001307  700011 756111		stq	sb|9,x1
4a 001310  400052 272120		tsbbp	lp|L134,*		" StoreArg
aa 001311  000006 000002		zero	6,2
aa 001312  600226 234100  128		szn	sp|150		" Metering
aa 001313  000007 600004		tze	L135
aa 001314  000047 236007		ldq	39,dl		" CodeGeneration_Meter
aa 001315  700010 756111		stq	sb|8,x1
aa 001316  700004 236111		ldq	sb|4,x1		" UsageTemp
aa 001317  700011 756111		stq	sb|9,x1
4a 001320  400070 272120		tsbbp	lp|L61,*		" RecordUsage
aa 001321  000006 000002		zero	6,2
			L135:
			L130:
aa 001322  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001323  200000 121100		sblx1	bp|0
aa 001324  700001 764111		lprplp	sb|1,x1
aa 001325  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L133:
aa 001326  000006 101122		zero	6,33362		" "ARG ^d"
aa 001327  107040 136144		zero	36384,48228
	"	Begin text of GenerateFnap

aa 001330  000014 107145		zero	12,36453		" GenerateFnap
aa 001331  156145 162141		zero	56421,58465
aa 001332  164145 106156		zero	59493,35950
aa 001333  141160 000000		zero	49776
			L100:
aa 001334  000000 213000  130		epaq	0		" set lp to linkage section
aa 001335  700026 764161		lprplp	sb|22,*au
aa 001336  200000 021100		adlx1	bp|0		" BCPL save
aa 001337  700000 542111		sprpbp	sb|0,x1
aa 001340  700001 544111		sprplp	sb|1,x1
aa 001341  700423 620111		eax0	sb|275,x1
aa 001342  777760 360003		anx0	-16,du
aa 001343  700025 740100		stx0	sb|21		" end of save sequence

aa 001344  600226 234100  132		szn	sp|150		" Metering
aa 001345  000004 600004		tze	L139
4a 001346  400074 272120		tsbbp	lp|L56,*		" SaveOldUsage
aa 001347  000010 000000		zero	8
aa 001350  700004 756111		stq	sb|4,x1		" UsageTemp
			L139:
aa 001351  600155 234100  133		szn	sp|109		" OcodeSw
aa 001352  000037 600004		tze	L140
aa 001353  700002 234111  134		szn	sb|2,x1		" Result
aa 001354  000003 601004		tnz	L141
aa 001355  000060 371404		eaplb	L143		" "RTAP"
aa 001356  000002 710004		tra	L142
			L141:
aa 001357  000054 371404		eaplb	L144		" "FNAP"
			L142:
aa 001360  700006 545111		sprplb	sb|6,x1
aa 001361  700006 236111		ldq	sb|6,x1
aa 001362  700005 756111		stq	sb|5,x1
aa 001363  600040 236100		ldq	sp|32		" OUTPUT
aa 001364  700012 756111		stq	sb|10,x1
aa 001365  700005 236111		ldq	sb|5,x1
aa 001366  700013 756111		stq	sb|11,x1
4a 001367  400110 272120		tsbbp	lp|L8,*		" WriteS
aa 001370  000010 000002		zero	8,2
aa 001371  700003 236111  135		ldq	sb|3,x1		" F
aa 001372  700012 756111		stq	sb|10,x1
aa 001373  776413 272004		tsbbp	L1+2		" WriteOperand
aa 001374  000010 000001		zero	8,1
aa 001375  700002 234111  136		szn	sb|2,x1		" Result
aa 001376  000005 600004		tze	L145
aa 001377  700002 236111		ldq	sb|2,x1		" Result
aa 001400  700012 756111		stq	sb|10,x1
aa 001401  776405 272004		tsbbp	L1+2		" WriteOperand
aa 001402  000010 000001		zero	8,1
			L145:
aa 001403  600040 236100  137		ldq	sp|32		" OUTPUT
aa 001404  700012 756111		stq	sb|10,x1
aa 001405  000012 236007		ldq	10,dl		" '*n'
aa 001406  700013 756111		stq	sb|11,x1
4a 001407  400100 272120		tsbbp	lp|L33,*		" Writech
aa 001410  000010 000002		zero	8,2
			L140:
aa 001411  700002 236111  139		ldq	sb|2,x1		" Result
aa 001412  700012 756111		stq	sb|10,x1
aa 001413  700003 236111		ldq	sb|3,x1		" F
aa 001414  700013 756111		stq	sb|11,x1
4a 001415  400050 272120		tsbbp	lp|L146,*		" Compfnap
aa 001416  000010 000002		zero	8,2
aa 001417  600226 234100  140		szn	sp|150		" Metering
aa 001420  000007 600004		tze	L147
aa 001421  000047 236007		ldq	39,dl		" CodeGeneration_Meter
aa 001422  700012 756111		stq	sb|10,x1
aa 001423  700004 236111		ldq	sb|4,x1		" UsageTemp
aa 001424  700013 756111		stq	sb|11,x1
4a 001425  400070 272120		tsbbp	lp|L61,*		" RecordUsage
aa 001426  000010 000002		zero	8,2
			L147:
			L138:
aa 001427  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001430  200000 121100		sblx1	bp|0
aa 001431  700001 764111		lprplp	sb|1,x1
aa 001432  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L144:
aa 001433  000004 106116		zero	4,35918		" "FNAP"
aa 001434  101120 000000		zero	33360
			L143:
aa 001435  000004 122124		zero	4,42068		" "RTAP"
aa 001436  101120 000000		zero	33360
	"	Begin text of ReserveSystemArglist

aa 001437  000024 122145		zero	20,42085		" ReserveSystemArglist
aa 001440  163145 162166		zero	58981,58486
aa 001441  145123 171163		zero	51795,62067
aa 001442  164145 155101		zero	59493,55873
aa 001443  162147 154151		zero	58471,55401
aa 001444  163164 000000		zero	58996
			L101:
aa 001445  000000 213000  142		epaq	0		" set lp to linkage section
aa 001446  700026 764161		lprplp	sb|22,*au
aa 001447  200000 021100		adlx1	bp|0		" BCPL save
aa 001450  700000 542111		sprpbp	sb|0,x1
aa 001451  700001 544111		sprplp	sb|1,x1
aa 001452  700424 620111		eax0	sb|276,x1
aa 001453  777760 360003		anx0	-16,du
aa 001454  700025 740100		stx0	sb|21		" end of save sequence

aa 001455  600226 234100  144		szn	sp|150		" Metering
aa 001456  000004 600004		tze	L151
4a 001457  400074 272120		tsbbp	lp|L56,*		" SaveOldUsage
aa 001460  000004 000000		zero	4
aa 001461  700003 756111		stq	sb|3,x1		" UsageTemp
			L151:
aa 001462  600155 234100  145		szn	sp|109		" OcodeSw
aa 001463  000011 600004		tze	L152
aa 001464  600040 236100		ldq	sp|32		" OUTPUT
aa 001465  700006 756111		stq	sb|6,x1
aa 001466  000026 371404		eaplb	L153		" "SYSTEM_ARGLIST ^d*n"
aa 001467  700007 545111		sprplb	sb|7,x1
aa 001470  700002 236111		ldq	sb|2,x1		" Nargs
aa 001471  700010 756111		stq	sb|8,x1
4a 001472  400104 272120		tsbbp	lp|L11,*		" Format
aa 001473  000004 000003		zero	4,3
			L152:
aa 001474  700002 236111  146		ldq	sb|2,x1		" Nargs
aa 001475  700006 756111		stq	sb|6,x1
4a 001476  400046 272120		tsbbp	lp|L154,*		" CreateSystemArglist
aa 001477  000004 000001		zero	4,1
aa 001500  600226 234100  147		szn	sp|150		" Metering
aa 001501  000007 600004		tze	L155
aa 001502  000047 236007		ldq	39,dl		" CodeGeneration_Meter
aa 001503  700006 756111		stq	sb|6,x1
aa 001504  700003 236111		ldq	sb|3,x1		" UsageTemp
aa 001505  700007 756111		stq	sb|7,x1
4a 001506  400070 272120		tsbbp	lp|L61,*		" RecordUsage
aa 001507  000004 000002		zero	4,2
			L155:
			L150:
aa 001510  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001511  200000 121100		sblx1	bp|0
aa 001512  700001 764111		lprplp	sb|1,x1
aa 001513  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L153:
aa 001514  000022 123131		zero	18,42585		" "SYSTEM_ARGLIST ^d*n"
aa 001515  123124 105115		zero	42580,35405
aa 001516  137101 122107		zero	48705,42055
aa 001517  114111 123124		zero	38985,42580
aa 001520  040136 144012		zero	16478,51210
	"	Begin text of GenerateSystemArg

aa 001521  000021 107145		zero	17,36453		" GenerateSystemArg
aa 001522  156145 162141		zero	56421,58465
aa 001523  164145 123171		zero	59493,42617
aa 001524  163164 145155		zero	58996,51821
aa 001525  101162 147000		zero	33394,52736
			L102:
aa 001526  000000 213000  149		epaq	0		" set lp to linkage section
aa 001527  700026 764161		lprplp	sb|22,*au
aa 001530  200000 021100		adlx1	bp|0		" BCPL save
aa 001531  700000 542111		sprpbp	sb|0,x1
aa 001532  700001 544111		sprplp	sb|1,x1
aa 001533  700427 620111		eax0	sb|279,x1
aa 001534  777760 360003		anx0	-16,du
aa 001535  700025 740100		stx0	sb|21		" end of save sequence

aa 001536  600226 234100  151		szn	sp|150		" Metering
aa 001537  000004 600004		tze	L159
4a 001540  400074 272120		tsbbp	lp|L56,*		" SaveOldUsage
aa 001541  000012 000000		zero	10
aa 001542  700010 756111		stq	sb|8,x1		" UsageTemp
			L159:
aa 001543  600155 234100  152		szn	sp|109		" OcodeSw
aa 001544  000047 600004		tze	L160
aa 001545  600040 236100  153		ldq	sp|32		" OUTPUT
aa 001546  700014 756111		stq	sb|12,x1
aa 001547  000101 371404		eaplb	L161		" "SYSTEM_ARG ^d"
aa 001550  700015 545111		sprplb	sb|13,x1
aa 001551  700002 236111		ldq	sb|2,x1		" i
aa 001552  700016 756111		stq	sb|14,x1
4a 001553  400104 272120		tsbbp	lp|L11,*		" Format
aa 001554  000012 000003		zero	10,3
aa 001555  700003 236111  154		ldq	sb|3,x1		" Arg
aa 001556  700014 756111		stq	sb|12,x1
aa 001557  776227 272004		tsbbp	L1+2		" WriteOperand
aa 001560  000012 000001		zero	10,1
aa 001561  700004 236111  155		ldq	sb|4,x1		" Offset
aa 001562  700014 756111		stq	sb|12,x1
aa 001563  776223 272004		tsbbp	L1+2		" WriteOperand
aa 001564  000012 000001		zero	10,1
aa 001565  700005 236111  156		ldq	sb|5,x1		" Type
aa 001566  700014 756111		stq	sb|12,x1
aa 001567  776217 272004		tsbbp	L1+2		" WriteOperand
aa 001570  000012 000001		zero	10,1
aa 001571  700006 236111  157		ldq	sb|6,x1		" Length
aa 001572  700014 756111		stq	sb|12,x1
aa 001573  776213 272004		tsbbp	L1+2		" WriteOperand
aa 001574  000012 000001		zero	10,1
aa 001575  700007 234111  158		szn	sb|7,x1		" StringSw
aa 001576  000007 600004		tze	L162
aa 001577  600040 236100		ldq	sp|32		" OUTPUT
aa 001600  700014 756111		stq	sb|12,x1
aa 001601  000044 371404		eaplb	L163		" " STRING"
aa 001602  700015 545111		sprplb	sb|13,x1
4a 001603  400100 272120		tsbbp	lp|L33,*		" Writech
aa 001604  000012 000002		zero	10,2
			L162:
aa 001605  600040 236100  159		ldq	sp|32		" OUTPUT
aa 001606  700014 756111		stq	sb|12,x1
aa 001607  000012 236007		ldq	10,dl		" '*n'
aa 001610  700015 756111		stq	sb|13,x1
4a 001611  400100 272120		tsbbp	lp|L33,*		" Writech
aa 001612  000012 000002		zero	10,2
			L160:
aa 001613  700002 236111  161		ldq	sb|2,x1		" i
aa 001614  700014 756111		stq	sb|12,x1
aa 001615  700003 236111		ldq	sb|3,x1		" Arg
aa 001616  700015 756111		stq	sb|13,x1
aa 001617  700004 236111		ldq	sb|4,x1		" Offset
aa 001620  700016 756111		stq	sb|14,x1
aa 001621  700005 236111		ldq	sb|5,x1		" Type
aa 001622  700017 756111		stq	sb|15,x1
aa 001623  700006 236111		ldq	sb|6,x1		" Length
aa 001624  700020 756111		stq	sb|16,x1
aa 001625  700007 236111		ldq	sb|7,x1		" StringSw
aa 001626  700021 756111		stq	sb|17,x1
4a 001627  400044 272120		tsbbp	lp|L164,*		" StoreSystemArg
aa 001630  000012 000006		zero	10,6
aa 001631  600226 234100  162		szn	sp|150		" Metering
aa 001632  000007 600004		tze	L165
aa 001633  000047 236007		ldq	39,dl		" CodeGeneration_Meter
aa 001634  700014 756111		stq	sb|12,x1
aa 001635  700010 236111		ldq	sb|8,x1		" UsageTemp
aa 001636  700015 756111		stq	sb|13,x1
4a 001637  400070 272120		tsbbp	lp|L61,*		" RecordUsage
aa 001640  000012 000002		zero	10,2
			L165:
			L158:
aa 001641  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001642  200000 121100		sblx1	bp|0
aa 001643  700001 764111		lprplp	sb|1,x1
aa 001644  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L163:
aa 001645  000007 040123		zero	7,16467		" " STRING"
aa 001646  124122 111116		zero	43090,37454
aa 001647  107000 000000		zero	36352
			L161:
aa 001650  000015 123131		zero	13,42585		" "SYSTEM_ARG ^d"
aa 001651  123124 105115		zero	42580,35405
aa 001652  137101 122107		zero	48705,42055
aa 001653  040136 144000		zero	16478,51200
	"	Begin text of GenerateSystemCall

aa 001654  000022 107145		zero	18,36453		" GenerateSystemCall
aa 001655  156145 162141		zero	56421,58465
aa 001656  164145 123171		zero	59493,42617
aa 001657  163164 145155		zero	58996,51821
aa 001660  103141 154154		zero	34401,55404
			L103:
aa 001661  000000 213000  164		epaq	0		" set lp to linkage section
aa 001662  700026 764161		lprplp	sb|22,*au
aa 001663  200000 021100		adlx1	bp|0		" BCPL save
aa 001664  700000 542111		sprpbp	sb|0,x1
aa 001665  700001 544111		sprplp	sb|1,x1
aa 001666  700423 620111		eax0	sb|275,x1
aa 001667  777760 360003		anx0	-16,du
aa 001670  700025 740100		stx0	sb|21		" end of save sequence

aa 001671  600226 234100  166		szn	sp|150		" Metering
aa 001672  000004 600004		tze	L169
4a 001673  400074 272120		tsbbp	lp|L56,*		" SaveOldUsage
aa 001674  000004 000000		zero	4
aa 001675  700003 756111		stq	sb|3,x1		" UsageTemp
			L169:
aa 001676  600155 234100  167		szn	sp|109		" OcodeSw
aa 001677  000021 600004		tze	L170
aa 001700  600040 236100  168		ldq	sp|32		" OUTPUT
aa 001701  700006 756111		stq	sb|6,x1
aa 001702  000036 371404		eaplb	L171		" "SYSTEM_CALL "
aa 001703  700007 545111		sprplb	sb|7,x1
4a 001704  400110 272120		tsbbp	lp|L8,*		" WriteS
aa 001705  000004 000002		zero	4,2
aa 001706  700002 236111  169		ldq	sb|2,x1		" F
aa 001707  700006 756111		stq	sb|6,x1
aa 001710  776076 272004		tsbbp	L1+2		" WriteOperand
aa 001711  000004 000001		zero	4,1
aa 001712  600040 236100  170		ldq	sp|32		" OUTPUT
aa 001713  700006 756111		stq	sb|6,x1
aa 001714  000012 236007		ldq	10,dl		" '*n'
aa 001715  700007 756111		stq	sb|7,x1
4a 001716  400100 272120		tsbbp	lp|L33,*		" Writech
aa 001717  000004 000002		zero	4,2
			L170:
aa 001720  700002 236111  172		ldq	sb|2,x1		" F
aa 001721  700006 756111		stq	sb|6,x1
4a 001722  400042 272120		tsbbp	lp|L172,*		" CompSystemCall
aa 001723  000004 000001		zero	4,1
aa 001724  600226 234100  173		szn	sp|150		" Metering
aa 001725  000007 600004		tze	L173
aa 001726  000047 236007		ldq	39,dl		" CodeGeneration_Meter
aa 001727  700006 756111		stq	sb|6,x1
aa 001730  700003 236111		ldq	sb|3,x1		" UsageTemp
aa 001731  700007 756111		stq	sb|7,x1
4a 001732  400070 272120		tsbbp	lp|L61,*		" RecordUsage
aa 001733  000004 000002		zero	4,2
			L173:
			L168:
aa 001734  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001735  200000 121100		sblx1	bp|0
aa 001736  700001 764111		lprplp	sb|1,x1
aa 001737  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L171:
aa 001740  000014 123131		zero	12,42585		" "SYSTEM_CALL "
aa 001741  123124 105115		zero	42580,35405
aa 001742  137103 101114		zero	48707,33356
aa 001743  114040 000000		zero	38944
	"	Begin text of GenerateResultValue

aa 001744  000023 107145		zero	19,36453		" GenerateResultValue
aa 001745  156145 162141		zero	56421,58465
aa 001746  164145 122145		zero	59493,42085
aa 001747  163165 154164		zero	58997,55412
aa 001750  126141 154165		zero	44129,55413
aa 001751  145000 000000		zero	51712
			L175:
aa 001752  000000 213000  183		epaq	0		" set lp to linkage section
aa 001753  700026 764161		lprplp	sb|22,*au
aa 001754  200000 021100		adlx1	bp|0		" BCPL save
aa 001755  700000 542111		sprpbp	sb|0,x1
aa 001756  700001 544111		sprplp	sb|1,x1
aa 001757  700423 620111		eax0	sb|275,x1
aa 001760  777760 360003		anx0	-16,du
aa 001761  700025 740100		stx0	sb|21		" end of save sequence

aa 001762  600226 234100  185		szn	sp|150		" Metering
aa 001763  000004 600004		tze	L181
4a 001764  400074 272120		tsbbp	lp|L56,*		" SaveOldUsage
aa 001765  000004 000000		zero	4
aa 001766  700003 756111		stq	sb|3,x1		" UsageTemp
			L181:
aa 001767  600155 234100  186		szn	sp|109		" OcodeSw
aa 001770  000021 600004		tze	L182
aa 001771  600040 236100  187		ldq	sp|32		" OUTPUT
aa 001772  700006 756111		stq	sb|6,x1
aa 001773  000036 371404		eaplb	L183		" "SET_RESULT"
aa 001774  700007 545111		sprplb	sb|7,x1
4a 001775  400110 272120		tsbbp	lp|L8,*		" WriteS
aa 001776  000004 000002		zero	4,2
aa 001777  700002 236111  188		ldq	sb|2,x1		" Desc
aa 002000  700006 756111		stq	sb|6,x1
aa 002001  776005 272004		tsbbp	L1+2		" WriteOperand
aa 002002  000004 000001		zero	4,1
aa 002003  600040 236100  189		ldq	sp|32		" OUTPUT
aa 002004  700006 756111		stq	sb|6,x1
aa 002005  000012 236007		ldq	10,dl		" '*n'
aa 002006  700007 756111		stq	sb|7,x1
4a 002007  400100 272120		tsbbp	lp|L33,*		" Writech
aa 002010  000004 000002		zero	4,2
			L182:
aa 002011  700002 236111  191		ldq	sb|2,x1		" Desc
aa 002012  700006 756111		stq	sb|6,x1
4a 002013  400040 272120		tsbbp	lp|L184,*		" ResultSet
aa 002014  000004 000001		zero	4,1
aa 002015  600226 234100  192		szn	sp|150		" Metering
aa 002016  000007 600004		tze	L185
aa 002017  000047 236007		ldq	39,dl		" CodeGeneration_Meter
aa 002020  700006 756111		stq	sb|6,x1
aa 002021  700003 236111		ldq	sb|3,x1		" UsageTemp
aa 002022  700007 756111		stq	sb|7,x1
4a 002023  400070 272120		tsbbp	lp|L61,*		" RecordUsage
aa 002024  000004 000002		zero	4,2
			L185:
			L180:
aa 002025  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002026  200000 121100		sblx1	bp|0
aa 002027  700001 764111		lprplp	sb|1,x1
aa 002030  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L183:
aa 002031  000012 123105		zero	10,42565		" "SET_RESULT"
aa 002032  124137 122105		zero	43103,42053
aa 002033  123125 114124		zero	42581,38996
	"	Begin text of GenerateClaimResult

aa 002034  000023 107145		zero	19,36453		" GenerateClaimResult
aa 002035  156145 162141		zero	56421,58465
aa 002036  164145 103154		zero	59493,34412
aa 002037  141151 155122		zero	49769,55890
aa 002040  145163 165154		zero	51827,60012
aa 002041  164000 000000		zero	59392
			L176:
aa 002042  000000 213000  194		epaq	0		" set lp to linkage section
aa 002043  700026 764161		lprplp	sb|22,*au
aa 002044  200000 021100		adlx1	bp|0		" BCPL save
aa 002045  700000 542111		sprpbp	sb|0,x1
aa 002046  700001 544111		sprplp	sb|1,x1
aa 002047  700423 620111		eax0	sb|275,x1
aa 002050  777760 360003		anx0	-16,du
aa 002051  700025 740100		stx0	sb|21		" end of save sequence

aa 002052  600226 234100  196		szn	sp|150		" Metering
aa 002053  000004 600004		tze	L189
4a 002054  400074 272120		tsbbp	lp|L56,*		" SaveOldUsage
aa 002055  000004 000000		zero	4
aa 002056  700003 756111		stq	sb|3,x1		" UsageTemp
			L189:
aa 002057  600155 234100  197		szn	sp|109		" OcodeSw
aa 002060  000021 600004		tze	L190
aa 002061  600040 236100  198		ldq	sp|32		" OUTPUT
aa 002062  700006 756111		stq	sb|6,x1
aa 002063  000036 371404		eaplb	L191		" "CLAIM_RESULT"
aa 002064  700007 545111		sprplb	sb|7,x1
4a 002065  400110 272120		tsbbp	lp|L8,*		" WriteS
aa 002066  000004 000002		zero	4,2
aa 002067  700002 236111  199		ldq	sb|2,x1		" Desc
aa 002070  700006 756111		stq	sb|6,x1
aa 002071  775715 272004		tsbbp	L1+2		" WriteOperand
aa 002072  000004 000001		zero	4,1
aa 002073  600040 236100  200		ldq	sp|32		" OUTPUT
aa 002074  700006 756111		stq	sb|6,x1
aa 002075  000012 236007		ldq	10,dl		" '*n'
aa 002076  700007 756111		stq	sb|7,x1
4a 002077  400100 272120		tsbbp	lp|L33,*		" Writech
aa 002100  000004 000002		zero	4,2
			L190:
aa 002101  700002 236111  202		ldq	sb|2,x1		" Desc
aa 002102  700006 756111		stq	sb|6,x1
4a 002103  400036 272120		tsbbp	lp|L192,*		" ResultGet
aa 002104  000004 000001		zero	4,1
aa 002105  600226 234100  203		szn	sp|150		" Metering
aa 002106  000007 600004		tze	L193
aa 002107  000047 236007		ldq	39,dl		" CodeGeneration_Meter
aa 002110  700006 756111		stq	sb|6,x1
aa 002111  700003 236111		ldq	sb|3,x1		" UsageTemp
aa 002112  700007 756111		stq	sb|7,x1
4a 002113  400070 272120		tsbbp	lp|L61,*		" RecordUsage
aa 002114  000004 000002		zero	4,2
			L193:
			L188:
aa 002115  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002116  200000 121100		sblx1	bp|0
aa 002117  700001 764111		lprplp	sb|1,x1
aa 002120  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L191:
aa 002121  000014 103114		zero	12,34380		" "CLAIM_RESULT"
aa 002122  101111 115137		zero	33353,39519
aa 002123  122105 123125		zero	42053,42581
aa 002124  114124 000000		zero	38996
	"	Begin text of GenerateSwitch

aa 002125  000016 107145		zero	14,36453		" GenerateSwitch
aa 002126  156145 162141		zero	56421,58465
aa 002127  164145 123167		zero	59493,42615
aa 002130  151164 143150		zero	53876,50792
			L177:
aa 002131  000000 213000  206		epaq	0		" set lp to linkage section
aa 002132  700026 764161		lprplp	sb|22,*au
aa 002133  200000 021100		adlx1	bp|0		" BCPL save
aa 002134  700000 542111		sprpbp	sb|0,x1
aa 002135  700001 544111		sprplp	sb|1,x1
aa 002136  700426 620111		eax0	sb|278,x1
aa 002137  777760 360003		anx0	-16,du
aa 002140  700025 740100		stx0	sb|21		" end of save sequence

aa 002141  600226 234100  208		szn	sp|150		" Metering
aa 002142  000004 600004		tze	L197
4a 002143  400074 272120		tsbbp	lp|L56,*		" SaveOldUsage
aa 002144  000012 000000		zero	10
aa 002145  700006 756111		stq	sb|6,x1		" UsageTemp
			L197:
aa 002146  600155 234100  209		szn	sp|109		" OcodeSw
aa 002147  000110 600004		tze	L198
aa 002150  600040 236100  210		ldq	sp|32		" OUTPUT
aa 002151  700014 756111		stq	sb|12,x1
aa 002152  000151 371404		eaplb	L199		" "SWITCHON"
aa 002153  700015 545111		sprplb	sb|13,x1
4a 002154  400110 272120		tsbbp	lp|L8,*		" WriteS
aa 002155  000012 000002		zero	10,2
aa 002156  700002 236111  211		ldq	sb|2,x1		" Desc
aa 002157  700014 756111		stq	sb|12,x1
aa 002160  775626 272004		tsbbp	L1+2		" WriteOperand
aa 002161  000012 000001		zero	10,1
aa 002162  700010 450111  212		stz	sb|8,x1		" Ncases
aa 002163  700003 236111		ldq	sb|3,x1		" CaseList
aa 002164  700007 756111		stq	sb|7,x1		" t
aa 002165  000005 710004  213		tra	L200
			L201:
aa 002166  700010 054111		aos	sb|8,x1		" Ncases
aa 002167  700007 765111		lprplb	sb|7,x1		" t
aa 002170  500000 236100		ldq	lb|0
aa 002171  700007 756111		stq	sb|7,x1		" t
			L200:
aa 002172  700007 234111		szn	sb|7,x1		" t
aa 002173  777773 601004		tnz	L201
aa 002174  600040 236100  214		ldq	sp|32		" OUTPUT
aa 002175  700014 756111		stq	sb|12,x1
aa 002176  000122 350004		eapap	L202		" " ^d ^d ^d"
aa 002177  700015 540111		sprpap	sb|13,x1
aa 002200  700004 236111		ldq	sb|4,x1		" DefaultL
aa 002201  700016 756111		stq	sb|14,x1
aa 002202  700005 236111		ldq	sb|5,x1		" EndcaseL
aa 002203  700017 756111		stq	sb|15,x1
aa 002204  700010 236111		ldq	sb|8,x1		" Ncases
aa 002205  700020 756111		stq	sb|16,x1
4a 002206  400104 272120		tsbbp	lp|L11,*		" Format
aa 002207  000012 000005		zero	10,5
aa 002210  700003 236111  215		ldq	sb|3,x1		" CaseList
aa 002211  700007 756111		stq	sb|7,x1		" t
aa 002212  000035 710004  216		tra	L203
			L204:
aa 002213  600040 236100  217		ldq	sp|32		" OUTPUT
aa 002214  700014 756111		stq	sb|12,x1
aa 002215  000101 350004		eapap	L205		" " (^d"
aa 002216  700015 540111		sprpap	sb|13,x1
aa 002217  700007 760111		lprpap	sb|7,x1		" t
aa 002220  000001 236100		ldq	ap|1
aa 002221  700016 756111		stq	sb|14,x1
4a 002222  400104 272120		tsbbp	lp|L11,*		" Format
aa 002223  000012 000003		zero	10,3
aa 002224  700007 762111  218		lprpbp	sb|7,x1		" t
aa 002225  200002 352100		eapbp	bp|2
aa 002226  700014 542111		sprpbp	sb|12,x1
aa 002227  776072 272004		tsbbp	L2+2		" WriteConst
aa 002230  000012 000001		zero	10,1
aa 002231  700007 762111  219		lprpbp	sb|7,x1		" t
aa 002232  200004 352100		eapbp	bp|4
aa 002233  700014 542111		sprpbp	sb|12,x1
aa 002234  776065 272004		tsbbp	L2+2		" WriteConst
aa 002235  000012 000001		zero	10,1
aa 002236  600040 236100  220		ldq	sp|32		" OUTPUT
aa 002237  700014 756111		stq	sb|12,x1
aa 002240  000051 236007		ldq	41,dl		" ')'
aa 002241  700015 756111		stq	sb|13,x1
4a 002242  400100 272120		tsbbp	lp|L33,*		" Writech
aa 002243  000012 000002		zero	10,2
aa 002244  700007 762111  221		lprpbp	sb|7,x1		" t
aa 002245  200000 236100		ldq	bp|0
aa 002246  700007 756111		stq	sb|7,x1		" t
			L203:
aa 002247  700007 234111		szn	sb|7,x1		" t
aa 002250  777743 601004		tnz	L204
aa 002251  600040 236100  223		ldq	sp|32		" OUTPUT
aa 002252  700014 756111		stq	sb|12,x1
aa 002253  000012 236007		ldq	10,dl		" '*n'
aa 002254  700015 756111		stq	sb|13,x1
4a 002255  400100 272120		tsbbp	lp|L33,*		" Writech
aa 002256  000012 000002		zero	10,2
			L198:
aa 002257  700002 236111  225		ldq	sb|2,x1		" Desc
aa 002260  700014 756111		stq	sb|12,x1
aa 002261  700003 236111		ldq	sb|3,x1		" CaseList
aa 002262  700015 756111		stq	sb|13,x1
aa 002263  700004 236111		ldq	sb|4,x1		" DefaultL
aa 002264  700016 756111		stq	sb|14,x1
aa 002265  700005 236111		ldq	sb|5,x1		" EndcaseL
aa 002266  700017 756111		stq	sb|15,x1
4a 002267  400034 272120		tsbbp	lp|L206,*		" Compswitch
aa 002270  000012 000004		zero	10,4
aa 002271  600226 234100  226		szn	sp|150		" Metering
aa 002272  000020 600004		tze	L207
aa 002273  600152 234100		szn	sp|106		" Optimize
aa 002274  000010 600004		tze	L208
aa 002275  000041 236007  227		ldq	33,dl		" CompileSwitchWithOptimizing_Meter
aa 002276  700014 756111		stq	sb|12,x1
aa 002277  700006 236111		ldq	sb|6,x1		" UsageTemp
aa 002300  700015 756111		stq	sb|13,x1
4a 002301  400070 272120		tsbbp	lp|L61,*		" RecordUsage
aa 002302  000012 000002		zero	10,2
aa 002303  000007 710004		tra	L209
			L208:
aa 002304  000036 236007  228		ldq	30,dl		" CompileSwitchWithoutOptimizing_Meter
aa 002305  700014 756111		stq	sb|12,x1
aa 002306  700006 236111		ldq	sb|6,x1		" UsageTemp
aa 002307  700015 756111		stq	sb|13,x1
4a 002310  400070 272120		tsbbp	lp|L61,*		" RecordUsage
aa 002311  000012 000002		zero	10,2
			L209:
			L207:
			L196:
aa 002312  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002313  200000 121100		sblx1	bp|0
aa 002314  700001 764111		lprplp	sb|1,x1
aa 002315  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L205:
aa 002316  000004 040050		zero	4,16424		" " (^d"
aa 002317  136144 000000		zero	48228
			L202:
aa 002320  000011 040136		zero	9,16478		" " ^d ^d ^d"
aa 002321  144040 136144		zero	51232,48228
aa 002322  040136 144000		zero	16478,51200
			L199:
aa 002323  000010 123127		zero	8,42583		" "SWITCHON"
aa 002324  111124 103110		zero	37460,34376
aa 002325  117116 000000		zero	40526
	"	Begin text of GenerateResultBlock

aa 002326  000023 107145		zero	19,36453		" GenerateResultBlock
aa 002327  156145 162141		zero	56421,58465
aa 002330  164145 122145		zero	59493,42085
aa 002331  163165 154164		zero	58997,55412
aa 002332  102154 157143		zero	33900,56931
aa 002333  153000 000000		zero	54784
			L174:
aa 002334  000000 213000  176		epaq	0		" set lp to linkage section
aa 002335  700026 764161		lprplp	sb|22,*au
aa 002336  200000 021100		adlx1	bp|0		" BCPL save
aa 002337  700000 542111		sprpbp	sb|0,x1
aa 002340  700001 544111		sprplp	sb|1,x1
aa 002341  700423 620111		eax0	sb|275,x1
aa 002342  777760 360003		anx0	-16,du
aa 002343  700025 740100		stx0	sb|21		" end of save sequence

aa 002344  600226 234100  178		szn	sp|150		" Metering
aa 002345  000004 600004		tze	L213
4a 002346  400074 272120		tsbbp	lp|L56,*		" SaveOldUsage
aa 002347  000004 000000		zero	4
aa 002350  700002 756111		stq	sb|2,x1		" UsageTemp
			L213:
aa 002351  600155 234100  179		szn	sp|109		" OcodeSw
aa 002352  000007 600004		tze	L214
aa 002353  600040 236100		ldq	sp|32		" OUTPUT
aa 002354  700006 756111		stq	sb|6,x1
aa 002355  000022 351404		eapab	L215		" "RESULT_BLOCK*n"
aa 002356  700007 541111		sprpab	sb|7,x1
4a 002357  400110 272120		tsbbp	lp|L8,*		" WriteS
aa 002360  000004 000002		zero	4,2
			L214:
4a 002361  400032 272120  180		tsbbp	lp|L216,*		" ResultBlockBegin
aa 002362  000004 000000		zero	4
aa 002363  600226 234100  181		szn	sp|150		" Metering
aa 002364  000007 600004		tze	L217
aa 002365  000047 236007		ldq	39,dl		" CodeGeneration_Meter
aa 002366  700006 756111		stq	sb|6,x1
aa 002367  700002 236111		ldq	sb|2,x1		" UsageTemp
aa 002370  700007 756111		stq	sb|7,x1
4a 002371  400070 272120		tsbbp	lp|L61,*		" RecordUsage
aa 002372  000004 000002		zero	4,2
			L217:
			L212:
aa 002373  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002374  200000 121100		sblx1	bp|0
aa 002375  700001 764111		lprplp	sb|1,x1
aa 002376  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L215:
aa 002377  000015 122105		zero	13,42053		" "RESULT_BLOCK*n"
aa 002400  123125 114124		zero	42581,38996
aa 002401  137102 114117		zero	48706,38991
aa 002402  103113 012000		zero	34379,5120
	"	Begin text of GenerateMonadicOperator

aa 002403  000027 107145		zero	23,36453		" GenerateMonadicOperator
aa 002404  156145 162141		zero	56421,58465
aa 002405  164145 115157		zero	59493,39535
aa 002406  156141 144151		zero	56417,51305
aa 002407  143117 160145		zero	50767,57445
aa 002410  162141 164157		zero	58465,59503
aa 002411  162000 000000		zero	58368
			L218:
aa 002412  000000 213000  231		epaq	0		" set lp to linkage section
aa 002413  700026 764161		lprplp	sb|22,*au
aa 002414  200000 021100		adlx1	bp|0		" BCPL save
aa 002415  700000 542111		sprpbp	sb|0,x1
aa 002416  700001 544111		sprplp	sb|1,x1
aa 002417  700423 620111		eax0	sb|275,x1
aa 002420  777760 360003		anx0	-16,du
aa 002421  700025 740100		stx0	sb|21		" end of save sequence

aa 002422  600226 234100  233		szn	sp|150		" Metering
aa 002423  000004 600004		tze	L224
4a 002424  400074 272120		tsbbp	lp|L56,*		" SaveOldUsage
aa 002425  000010 000000		zero	8
aa 002426  700005 756111		stq	sb|5,x1		" UsageTemp
			L224:
aa 002427  600155 234100  234		szn	sp|109		" OcodeSw
aa 002430  000032 600004		tze	L225
aa 002431  700002 236111  235		ldq	sb|2,x1		" Op
aa 002432  700012 756111		stq	sb|10,x1
4a 002433  400106 272120		tsbbp	lp|L9,*		" SymbolName
aa 002434  000010 000001		zero	8,1
aa 002435  700006 756111		stq	sb|6,x1
aa 002436  600040 236100		ldq	sp|32		" OUTPUT
aa 002437  700012 756111		stq	sb|10,x1
aa 002440  700006 236111		ldq	sb|6,x1
aa 002441  700013 756111		stq	sb|11,x1
4a 002442  400110 272120		tsbbp	lp|L8,*		" WriteS
aa 002443  000010 000002		zero	8,2
aa 002444  700003 236111  236		ldq	sb|3,x1		" Result
aa 002445  700012 756111		stq	sb|10,x1
aa 002446  775340 272004		tsbbp	L1+2		" WriteOperand
aa 002447  000010 000001		zero	8,1
aa 002450  700004 236111  237		ldq	sb|4,x1		" Desc1
aa 002451  700012 756111		stq	sb|10,x1
aa 002452  775334 272004		tsbbp	L1+2		" WriteOperand
aa 002453  000010 000001		zero	8,1
aa 002454  600040 236100  238		ldq	sp|32		" OUTPUT
aa 002455  700012 756111		stq	sb|10,x1
aa 002456  000012 236007		ldq	10,dl		" '*n'
aa 002457  700013 756111		stq	sb|11,x1
4a 002460  400100 272120		tsbbp	lp|L33,*		" Writech
aa 002461  000010 000002		zero	8,2
			L225:
aa 002462  700004 236111  240		ldq	sb|4,x1		" Desc1
aa 002463  600510 756100		stq	sp|328		" Lrand
aa 002464  700002 236111  241		ldq	sb|2,x1		" Op
aa 002465  700012 756111		stq	sb|10,x1
aa 002466  700003 236111		ldq	sb|3,x1		" Result
aa 002467  700013 756111		stq	sb|11,x1
4a 002470  400030 272120		tsbbp	lp|L226,*		" ApplyMonadicOperator
aa 002471  000010 000002		zero	8,2
aa 002472  600226 234100  242		szn	sp|150		" Metering
aa 002473  000007 600004		tze	L227
aa 002474  000047 236007		ldq	39,dl		" CodeGeneration_Meter
aa 002475  700012 756111		stq	sb|10,x1
aa 002476  700005 236111		ldq	sb|5,x1		" UsageTemp
aa 002477  700013 756111		stq	sb|11,x1
4a 002500  400070 272120		tsbbp	lp|L61,*		" RecordUsage
aa 002501  000010 000002		zero	8,2
			L227:
			L223:
aa 002502  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002503  200000 121100		sblx1	bp|0
aa 002504  700001 764111		lprplp	sb|1,x1
aa 002505  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of GenerateDiadicOperator

aa 002506  000026 107145		zero	22,36453		" GenerateDiadicOperator
aa 002507  156145 162141		zero	56421,58465
aa 002510  164145 104151		zero	59493,34921
aa 002511  141144 151143		zero	49764,53859
aa 002512  117160 145162		zero	40560,51826
aa 002513  141164 157162		zero	49780,56946
			L219:
aa 002514  000000 213000  244		epaq	0		" set lp to linkage section
aa 002515  700026 764161		lprplp	sb|22,*au
aa 002516  200000 021100		adlx1	bp|0		" BCPL save
aa 002517  700000 542111		sprpbp	sb|0,x1
aa 002520  700001 544111		sprplp	sb|1,x1
aa 002521  700423 620111		eax0	sb|275,x1
aa 002522  777760 360003		anx0	-16,du
aa 002523  700025 740100		stx0	sb|21		" end of save sequence

aa 002524  600226 234100  246		szn	sp|150		" Metering
aa 002525  000004 600004		tze	L231
4a 002526  400074 272120		tsbbp	lp|L56,*		" SaveOldUsage
aa 002527  000012 000000		zero	10
aa 002530  700006 756111		stq	sb|6,x1		" UsageTemp
			L231:
aa 002531  600155 234100  247		szn	sp|109		" OcodeSw
aa 002532  000036 600004		tze	L232
aa 002533  700002 236111  248		ldq	sb|2,x1		" Op
aa 002534  700014 756111		stq	sb|12,x1
4a 002535  400106 272120		tsbbp	lp|L9,*		" SymbolName
aa 002536  000012 000001		zero	10,1
aa 002537  700007 756111		stq	sb|7,x1
aa 002540  600040 236100		ldq	sp|32		" OUTPUT
aa 002541  700014 756111		stq	sb|12,x1
aa 002542  700007 236111		ldq	sb|7,x1
aa 002543  700015 756111		stq	sb|13,x1
4a 002544  400110 272120		tsbbp	lp|L8,*		" WriteS
aa 002545  000012 000002		zero	10,2
aa 002546  700003 236111  249		ldq	sb|3,x1		" Result
aa 002547  700014 756111		stq	sb|12,x1
aa 002550  775236 272004		tsbbp	L1+2		" WriteOperand
aa 002551  000012 000001		zero	10,1
aa 002552  700004 236111  250		ldq	sb|4,x1		" Desc1
aa 002553  700014 756111		stq	sb|12,x1
aa 002554  775232 272004		tsbbp	L1+2		" WriteOperand
aa 002555  000012 000001		zero	10,1
aa 002556  700005 236111  251		ldq	sb|5,x1		" Desc2
aa 002557  700014 756111		stq	sb|12,x1
aa 002560  775226 272004		tsbbp	L1+2		" WriteOperand
aa 002561  000012 000001		zero	10,1
aa 002562  600040 236100  252		ldq	sp|32		" OUTPUT
aa 002563  700014 756111		stq	sb|12,x1
aa 002564  000012 236007		ldq	10,dl		" '*n'
aa 002565  700015 756111		stq	sb|13,x1
4a 002566  400100 272120		tsbbp	lp|L33,*		" Writech
aa 002567  000012 000002		zero	10,2
			L232:
aa 002570  700005 236111  254		ldq	sb|5,x1		" Desc2
aa 002571  600521 756100		stq	sp|337		" Rrand
aa 002572  700004 236111		ldq	sb|4,x1		" Desc1
aa 002573  600510 756100		stq	sp|328		" Lrand
aa 002574  700002 236111  255		ldq	sb|2,x1		" Op
aa 002575  700014 756111		stq	sb|12,x1
aa 002576  700003 236111		ldq	sb|3,x1		" Result
aa 002577  700015 756111		stq	sb|13,x1
4a 002600  400026 272120		tsbbp	lp|L233,*		" ApplyDiadicOperator
aa 002601  000012 000002		zero	10,2
aa 002602  600226 234100  256		szn	sp|150		" Metering
aa 002603  000007 600004		tze	L234
aa 002604  000047 236007		ldq	39,dl		" CodeGeneration_Meter
aa 002605  700014 756111		stq	sb|12,x1
aa 002606  700006 236111		ldq	sb|6,x1		" UsageTemp
aa 002607  700015 756111		stq	sb|13,x1
4a 002610  400070 272120		tsbbp	lp|L61,*		" RecordUsage
aa 002611  000012 000002		zero	10,2
			L234:
			L230:
aa 002612  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002613  200000 121100		sblx1	bp|0
aa 002614  700001 764111		lprplp	sb|1,x1
aa 002615  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of GenerateOffsetOperator

aa 002616  000026 107145		zero	22,36453		" GenerateOffsetOperator
aa 002617  156145 162141		zero	56421,58465
aa 002620  164145 117146		zero	59493,40550
aa 002621  146163 145164		zero	52339,51828
aa 002622  117160 145162		zero	40560,51826
aa 002623  141164 157162		zero	49780,56946
			L220:
aa 002624  000000 213000  258		epaq	0		" set lp to linkage section
aa 002625  700026 764161		lprplp	sb|22,*au
aa 002626  200000 021100		adlx1	bp|0		" BCPL save
aa 002627  700000 542111		sprpbp	sb|0,x1
aa 002630  700001 544111		sprplp	sb|1,x1
aa 002631  700424 620111		eax0	sb|276,x1
aa 002632  777760 360003		anx0	-16,du
aa 002633  700025 740100		stx0	sb|21		" end of save sequence

aa 002634  600226 234100  260		szn	sp|150		" Metering
aa 002635  000004 600004		tze	L238
4a 002636  400074 272120		tsbbp	lp|L56,*		" SaveOldUsage
aa 002637  000012 000000		zero	10
aa 002640  700007 756111		stq	sb|7,x1		" UsageTemp
			L238:
aa 002641  600155 234100  261		szn	sp|109		" OcodeSw
aa 002642  000040 600004		tze	L239
aa 002643  700002 236111  262		ldq	sb|2,x1		" Op
aa 002644  700014 756111		stq	sb|12,x1
4a 002645  400106 272120		tsbbp	lp|L9,*		" SymbolName
aa 002646  000012 000001		zero	10,1
aa 002647  700010 756111		stq	sb|8,x1
aa 002650  600040 236100		ldq	sp|32		" OUTPUT
aa 002651  700014 756111		stq	sb|12,x1
aa 002652  700010 236111		ldq	sb|8,x1
aa 002653  700015 756111		stq	sb|13,x1
4a 002654  400110 272120		tsbbp	lp|L8,*		" WriteS
aa 002655  000012 000002		zero	10,2
aa 002656  700003 236111  263		ldq	sb|3,x1		" Result
aa 002657  700014 756111		stq	sb|12,x1
aa 002660  775126 272004		tsbbp	L1+2		" WriteOperand
aa 002661  000012 000001		zero	10,1
aa 002662  700004 236111  264		ldq	sb|4,x1		" Desc1
aa 002663  700014 756111		stq	sb|12,x1
aa 002664  775122 272004		tsbbp	L1+2		" WriteOperand
aa 002665  000012 000001		zero	10,1
aa 002666  700005 236111  265		ldq	sb|5,x1		" Desc2
aa 002667  700014 756111		stq	sb|12,x1
aa 002670  775116 272004		tsbbp	L1+2		" WriteOperand
aa 002671  000012 000001		zero	10,1
aa 002672  600040 236100  266		ldq	sp|32		" OUTPUT
aa 002673  700014 756111		stq	sb|12,x1
aa 002674  000036 351404		eapab	L240		" " + ^d*n"
aa 002675  700015 541111		sprpab	sb|13,x1
aa 002676  700006 236111		ldq	sb|6,x1		" Offset
aa 002677  700016 756111		stq	sb|14,x1
4a 002700  400104 272120		tsbbp	lp|L11,*		" Format
aa 002701  000012 000003		zero	10,3
			L239:
aa 002702  700004 236111  268		ldq	sb|4,x1		" Desc1
aa 002703  600510 756100		stq	sp|328		" Lrand
aa 002704  700005 236111		ldq	sb|5,x1		" Desc2
aa 002705  600521 756100		stq	sp|337		" Rrand
aa 002706  700002 236111  269		ldq	sb|2,x1		" Op
aa 002707  700014 756111		stq	sb|12,x1
aa 002710  700003 236111		ldq	sb|3,x1		" Result
aa 002711  700015 756111		stq	sb|13,x1
aa 002712  700006 236111		ldq	sb|6,x1		" Offset
aa 002713  700016 756111		stq	sb|14,x1
4a 002714  400024 272120		tsbbp	lp|L241,*		" ApplyOffsetOperator
aa 002715  000012 000003		zero	10,3
aa 002716  600226 234100  270		szn	sp|150		" Metering
aa 002717  000007 600004		tze	L242
aa 002720  000047 236007		ldq	39,dl		" CodeGeneration_Meter
aa 002721  700014 756111		stq	sb|12,x1
aa 002722  700007 236111		ldq	sb|7,x1		" UsageTemp
aa 002723  700015 756111		stq	sb|13,x1
4a 002724  400070 272120		tsbbp	lp|L61,*		" RecordUsage
aa 002725  000012 000002		zero	10,2
			L242:
			L237:
aa 002726  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002727  200000 121100		sblx1	bp|0
aa 002730  700001 764111		lprplp	sb|1,x1
aa 002731  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L240:
aa 002732  000006 040053		zero	6,16427		" " + ^d*n"
aa 002733  040136 144012		zero	16478,51210
	"	Begin text of GenerateDiadicConditional

aa 002734  000031 107145		zero	25,36453		" GenerateDiadicConditional
aa 002735  156145 162141		zero	56421,58465
aa 002736  164145 104151		zero	59493,34921
aa 002737  141144 151143		zero	49764,53859
aa 002740  103157 156144		zero	34415,56420
aa 002741  151164 151157		zero	53876,53871
aa 002742  156141 154000		zero	56417,55296
			L244:
aa 002743  000000 213000  285		epaq	0		" set lp to linkage section
aa 002744  700026 764161		lprplp	sb|22,*au
aa 002745  200000 021100		adlx1	bp|0		" BCPL save
aa 002746  700000 542111		sprpbp	sb|0,x1
aa 002747  700001 544111		sprplp	sb|1,x1
aa 002750  700425 620111		eax0	sb|277,x1
aa 002751  777760 360003		anx0	-16,du
aa 002752  700025 740100		stx0	sb|21		" end of save sequence

aa 002753  600226 234100  287		szn	sp|150		" Metering
aa 002754  000004 600004		tze	L248
4a 002755  400074 272120		tsbbp	lp|L56,*		" SaveOldUsage
aa 002756  000012 000000		zero	10
aa 002757  700006 756111		stq	sb|6,x1		" UsageTemp
			L248:
aa 002760  600155 234100  288		szn	sp|109		" OcodeSw
aa 002761  000036 600004		tze	L249
aa 002762  700002 236111  289		ldq	sb|2,x1		" Op
aa 002763  700014 756111		stq	sb|12,x1
4a 002764  400106 272120		tsbbp	lp|L9,*		" SymbolName
aa 002765  000012 000001		zero	10,1
aa 002766  700007 756111		stq	sb|7,x1
aa 002767  600040 236100		ldq	sp|32		" OUTPUT
aa 002770  700014 756111		stq	sb|12,x1
aa 002771  000054 351404		eapab	L250		" "JUMP_^s ^d"
aa 002772  700015 541111		sprpab	sb|13,x1
aa 002773  700007 236111		ldq	sb|7,x1
aa 002774  700016 756111		stq	sb|14,x1
aa 002775  700003 236111		ldq	sb|3,x1		" L
aa 002776  700017 756111		stq	sb|15,x1
4a 002777  400104 272120		tsbbp	lp|L11,*		" Format
aa 003000  000012 000004		zero	10,4
aa 003001  700004 236111  290		ldq	sb|4,x1		" Desc1
aa 003002  700014 756111		stq	sb|12,x1
aa 003003  775003 272004		tsbbp	L1+2		" WriteOperand
aa 003004  000012 000001		zero	10,1
aa 003005  700005 236111  291		ldq	sb|5,x1		" Desc2
aa 003006  700014 756111		stq	sb|12,x1
aa 003007  774777 272004		tsbbp	L1+2		" WriteOperand
aa 003010  000012 000001		zero	10,1
aa 003011  600040 236100  292		ldq	sp|32		" OUTPUT
aa 003012  700014 756111		stq	sb|12,x1
aa 003013  000012 236007		ldq	10,dl		" '*n'
aa 003014  700015 756111		stq	sb|13,x1
4a 003015  400100 272120		tsbbp	lp|L33,*		" Writech
aa 003016  000012 000002		zero	10,2
			L249:
aa 003017  700004 236111  294		ldq	sb|4,x1		" Desc1
aa 003020  600510 756100		stq	sp|328		" Lrand
aa 003021  700005 236111		ldq	sb|5,x1		" Desc2
aa 003022  600521 756100		stq	sp|337		" Rrand
aa 003023  700002 236111  295		ldq	sb|2,x1		" Op
aa 003024  700014 756111		stq	sb|12,x1
aa 003025  700003 236111		ldq	sb|3,x1		" L
aa 003026  700015 756111		stq	sb|13,x1
4a 003027  400022 272120		tsbbp	lp|L251,*		" DiadicJumpcond
aa 003030  000012 000002		zero	10,2
aa 003031  600226 234100  296		szn	sp|150		" Metering
aa 003032  000007 600004		tze	L252
aa 003033  000047 236007		ldq	39,dl		" CodeGeneration_Meter
aa 003034  700014 756111		stq	sb|12,x1
aa 003035  700006 236111		ldq	sb|6,x1		" UsageTemp
aa 003036  700015 756111		stq	sb|13,x1
4a 003037  400070 272120		tsbbp	lp|L61,*		" RecordUsage
aa 003040  000012 000002		zero	10,2
			L252:
			L247:
aa 003041  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 003042  200000 121100		sblx1	bp|0
aa 003043  700001 764111		lprplp	sb|1,x1
aa 003044  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L250:
aa 003045  000012 112125		zero	10,37973		" "JUMP_^s ^d"
aa 003046  115120 137136		zero	39504,48734
aa 003047  163040 136144		zero	58912,48228
	"	Begin text of GenerateMonadicConditional

aa 003050  000032 107145		zero	26,36453		" GenerateMonadicConditional
aa 003051  156145 162141		zero	56421,58465
aa 003052  164145 115157		zero	59493,39535
aa 003053  156141 144151		zero	56417,51305
aa 003054  143103 157156		zero	50755,56942
aa 003055  144151 164151		zero	51305,59497
aa 003056  157156 141154		zero	56942,49772
			L243:
aa 003057  000000 213000  273		epaq	0		" set lp to linkage section
aa 003060  700026 764161		lprplp	sb|22,*au
aa 003061  200000 021100		adlx1	bp|0		" BCPL save
aa 003062  700000 542111		sprpbp	sb|0,x1
aa 003063  700001 544111		sprplp	sb|1,x1
aa 003064  700425 620111		eax0	sb|277,x1
aa 003065  777760 360003		anx0	-16,du
aa 003066  700025 740100		stx0	sb|21		" end of save sequence

aa 003067  600226 234100  275		szn	sp|150		" Metering
aa 003070  000004 600004		tze	L256
4a 003071  400074 272120		tsbbp	lp|L56,*		" SaveOldUsage
aa 003072  000010 000000		zero	8
aa 003073  700005 756111		stq	sb|5,x1		" UsageTemp
			L256:
aa 003074  600155 234100  276		szn	sp|109		" OcodeSw
aa 003075  000032 600004		tze	L257
aa 003076  700002 236111  277		ldq	sb|2,x1		" Op
aa 003077  700012 756111		stq	sb|10,x1
4a 003100  400106 272120		tsbbp	lp|L9,*		" SymbolName
aa 003101  000010 000001		zero	8,1
aa 003102  700006 756111		stq	sb|6,x1
aa 003103  600040 236100		ldq	sp|32		" OUTPUT
aa 003104  700012 756111		stq	sb|10,x1
aa 003105  777740 351404		eapab	L250		" "JUMP_^s ^d"
aa 003106  700013 541111		sprpab	sb|11,x1
aa 003107  700006 236111		ldq	sb|6,x1
aa 003110  700014 756111		stq	sb|12,x1
aa 003111  700003 236111		ldq	sb|3,x1		" L
aa 003112  700015 756111		stq	sb|13,x1
4a 003113  400104 272120		tsbbp	lp|L11,*		" Format
aa 003114  000010 000004		zero	8,4
aa 003115  700004 236111  278		ldq	sb|4,x1		" Desc1
aa 003116  700012 756111		stq	sb|10,x1
aa 003117  774667 272004		tsbbp	L1+2		" WriteOperand
aa 003120  000010 000001		zero	8,1
aa 003121  600040 236100  279		ldq	sp|32		" OUTPUT
aa 003122  700012 756111		stq	sb|10,x1
aa 003123  000012 236007		ldq	10,dl		" '*n'
aa 003124  700013 756111		stq	sb|11,x1
4a 003125  400100 272120		tsbbp	lp|L33,*		" Writech
aa 003126  000010 000002		zero	8,2
			L257:
aa 003127  700004 236111  281		ldq	sb|4,x1		" Desc1
aa 003130  600510 756100		stq	sp|328		" Lrand
aa 003131  700002 236111  282		ldq	sb|2,x1		" Op
aa 003132  700012 756111		stq	sb|10,x1
aa 003133  700003 236111		ldq	sb|3,x1		" L
aa 003134  700013 756111		stq	sb|11,x1
4a 003135  400020 272120		tsbbp	lp|L258,*		" MonadicJumpcond
aa 003136  000010 000002		zero	8,2
aa 003137  600226 234100  283		szn	sp|150		" Metering
aa 003140  000007 600004		tze	L259
aa 003141  000047 236007		ldq	39,dl		" CodeGeneration_Meter
aa 003142  700012 756111		stq	sb|10,x1
aa 003143  700005 236111		ldq	sb|5,x1		" UsageTemp
aa 003144  700013 756111		stq	sb|11,x1
4a 003145  400070 272120		tsbbp	lp|L61,*		" RecordUsage
aa 003146  000010 000002		zero	8,2
			L259:
			L255:
aa 003147  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 003150  200000 121100		sblx1	bp|0
aa 003151  700001 764111		lprplp	sb|1,x1
aa 003152  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of GenerateSSP

aa 003153  000013 107145		zero	11,36453		" GenerateSSP
aa 003154  156145 162141		zero	56421,58465
aa 003155  164145 123123		zero	59493,42579
aa 003156  120000 000000		zero	40960
			L260:
aa 003157  000000 213000  299		epaq	0		" set lp to linkage section
aa 003160  700026 764161		lprplp	sb|22,*au
aa 003161  200000 021100		adlx1	bp|0		" BCPL save
aa 003162  700000 542111		sprpbp	sb|0,x1
aa 003163  700001 544111		sprplp	sb|1,x1
aa 003164  700424 620111		eax0	sb|276,x1
aa 003165  777760 360003		anx0	-16,du
aa 003166  700025 740100		stx0	sb|21		" end of save sequence

aa 003167  600226 234100  301		szn	sp|150		" Metering
aa 003170  000004 600004		tze	L267
4a 003171  400074 272120		tsbbp	lp|L56,*		" SaveOldUsage
aa 003172  000004 000000		zero	4
aa 003173  700003 756111		stq	sb|3,x1		" UsageTemp
			L267:
aa 003174  600155 234100  302		szn	sp|109		" OcodeSw
aa 003175  000011 600004		tze	L268
aa 003176  600040 236100		ldq	sp|32		" OUTPUT
aa 003177  700006 756111		stq	sb|6,x1
aa 003200  000026 351404		eapab	L269		" "SSP ^d*n"
aa 003201  700007 541111		sprpab	sb|7,x1
aa 003202  700002 236111		ldq	sb|2,x1		" P
aa 003203  700010 756111		stq	sb|8,x1
4a 003204  400104 272120		tsbbp	lp|L11,*		" Format
aa 003205  000004 000003		zero	4,3
			L268:
aa 003206  700002 236111  303		ldq	sb|2,x1		" P
aa 003207  700006 756111		stq	sb|6,x1
4a 003210  400016 272120		tsbbp	lp|L270,*		" NewSSP
aa 003211  000004 000001		zero	4,1
aa 003212  600226 234100  304		szn	sp|150		" Metering
aa 003213  000007 600004		tze	L271
aa 003214  000047 236007		ldq	39,dl		" CodeGeneration_Meter
aa 003215  700006 756111		stq	sb|6,x1
aa 003216  700003 236111		ldq	sb|3,x1		" UsageTemp
aa 003217  700007 756111		stq	sb|7,x1
4a 003220  400070 272120		tsbbp	lp|L61,*		" RecordUsage
aa 003221  000004 000002		zero	4,2
			L271:
			L266:
aa 003222  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 003223  200000 121100		sblx1	bp|0
aa 003224  700001 764111		lprplp	sb|1,x1
aa 003225  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L269:
aa 003226  000007 123123		zero	7,42579		" "SSP ^d*n"
aa 003227  120040 136144		zero	40992,48228
aa 003230  012000 000000		zero	5120
	"	Begin text of GenerateLineNumber

aa 003231  000022 107145		zero	18,36453		" GenerateLineNumber
aa 003232  156145 162141		zero	56421,58465
aa 003233  164145 114151		zero	59493,39017
aa 003234  156145 116165		zero	56421,40053
aa 003235  155142 145162		zero	55906,51826
			L261:
aa 003236  000000 213000  306		epaq	0		" set lp to linkage section
aa 003237  700026 764161		lprplp	sb|22,*au
aa 003240  200000 021100		adlx1	bp|0		" BCPL save
aa 003241  700000 542111		sprpbp	sb|0,x1
aa 003242  700001 544111		sprplp	sb|1,x1
aa 003243  700424 620111		eax0	sb|276,x1
aa 003244  777760 360003		anx0	-16,du
aa 003245  700025 740100		stx0	sb|21		" end of save sequence

aa 003246  600226 234100  308		szn	sp|150		" Metering
aa 003247  000004 600004		tze	L275
4a 003250  400074 272120		tsbbp	lp|L56,*		" SaveOldUsage
aa 003251  000004 000000		zero	4
aa 003252  700003 756111		stq	sb|3,x1		" UsageTemp
			L275:
aa 003253  600155 234100  309		szn	sp|109		" OcodeSw
aa 003254  000011 600004		tze	L276
aa 003255  600040 236100		ldq	sp|32		" OUTPUT
aa 003256  700006 756111		stq	sb|6,x1
aa 003257  000026 351404		eapab	L277		" "LINE ^d*n"
aa 003260  700007 541111		sprpab	sb|7,x1
aa 003261  700002 236111		ldq	sb|2,x1		" n
aa 003262  700010 756111		stq	sb|8,x1
4a 003263  400104 272120		tsbbp	lp|L11,*		" Format
aa 003264  000004 000003		zero	4,3
			L276:
aa 003265  700002 236111  310		ldq	sb|2,x1		" n
aa 003266  700006 756111		stq	sb|6,x1
4a 003267  400014 272120		tsbbp	lp|L278,*		" SetLineNumber
aa 003270  000004 000001		zero	4,1
aa 003271  600226 234100  311		szn	sp|150		" Metering
aa 003272  000007 600004		tze	L279
aa 003273  000047 236007		ldq	39,dl		" CodeGeneration_Meter
aa 003274  700006 756111		stq	sb|6,x1
aa 003275  700003 236111		ldq	sb|3,x1		" UsageTemp
aa 003276  700007 756111		stq	sb|7,x1
4a 003277  400070 272120		tsbbp	lp|L61,*		" RecordUsage
aa 003300  000004 000002		zero	4,2
			L279:
			L274:
aa 003301  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 003302  200000 121100		sblx1	bp|0
aa 003303  700001 764111		lprplp	sb|1,x1
aa 003304  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L277:
aa 003305  000010 114111		zero	8,38985		" "LINE ^d*n"
aa 003306  116105 040136		zero	40005,16478
aa 003307  144012 000000		zero	51210
	"	Begin text of StoreAll

aa 003310  000010 123164		zero	8,42612		" StoreAll
aa 003311  157162 145101		zero	56946,51777
aa 003312  154154 000000		zero	55404
			L262:
aa 003313  000000 213000  313		epaq	0		" set lp to linkage section
aa 003314  700026 764161		lprplp	sb|22,*au
aa 003315  200000 021100		adlx1	bp|0		" BCPL save
aa 003316  700000 542111		sprpbp	sb|0,x1
aa 003317  700001 544111		sprplp	sb|1,x1
aa 003320  700423 620111		eax0	sb|275,x1
aa 003321  777760 360003		anx0	-16,du
aa 003322  700025 740100		stx0	sb|21		" end of save sequence

aa 003323  600226 234100  315		szn	sp|150		" Metering
aa 003324  000004 600004		tze	L283
4a 003325  400074 272120		tsbbp	lp|L56,*		" SaveOldUsage
aa 003326  000004 000000		zero	4
aa 003327  700002 756111		stq	sb|2,x1		" UsageTemp
			L283:
aa 003330  600155 234100  316		szn	sp|109		" OcodeSw
aa 003331  000007 600004		tze	L284
aa 003332  600040 236100		ldq	sp|32		" OUTPUT
aa 003333  700006 756111		stq	sb|6,x1
aa 003334  000022 351404		eapab	L285		" "STORE_ALL*n"
aa 003335  700007 541111		sprpab	sb|7,x1
4a 003336  400110 272120		tsbbp	lp|L8,*		" WriteS
aa 003337  000004 000002		zero	4,2
			L284:
4a 003340  400012 272120  317		tsbbp	lp|L286,*		" ClearRegisters
aa 003341  000004 000000		zero	4
aa 003342  600226 234100  318		szn	sp|150		" Metering
aa 003343  000007 600004		tze	L287
aa 003344  000047 236007		ldq	39,dl		" CodeGeneration_Meter
aa 003345  700006 756111		stq	sb|6,x1
aa 003346  700002 236111		ldq	sb|2,x1		" UsageTemp
aa 003347  700007 756111		stq	sb|7,x1
4a 003350  400070 272120		tsbbp	lp|L61,*		" RecordUsage
aa 003351  000004 000002		zero	4,2
			L287:
			L282:
aa 003352  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 003353  200000 121100		sblx1	bp|0
aa 003354  700001 764111		lprplp	sb|1,x1
aa 003355  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L285:
aa 003356  000012 123124		zero	10,42580		" "STORE_ALL*n"
aa 003357  117122 105137		zero	40530,35423
aa 003360  101114 114012		zero	33356,38922
	"	Begin text of CgFinish

aa 003361  000010 103147		zero	8,34407		" CgFinish
aa 003362  106151 156151		zero	35945,56425
aa 003363  163150 000000		zero	58984
			L263:
aa 003364  000000 213000  321		epaq	0		" set lp to linkage section
aa 003365  700026 764161		lprplp	sb|22,*au
aa 003366  200000 021100		adlx1	bp|0		" BCPL save
aa 003367  700000 542111		sprpbp	sb|0,x1
aa 003370  700001 544111		sprplp	sb|1,x1
aa 003371  700425 620111		eax0	sb|277,x1
aa 003372  777760 360003		anx0	-16,du
aa 003373  700025 740100		stx0	sb|21		" end of save sequence

aa 003374  600226 234100  323		szn	sp|150		" Metering
aa 003375  000004 600004		tze	L291
4a 003376  400074 272120		tsbbp	lp|L56,*		" SaveOldUsage
aa 003377  000010 000000		zero	8
aa 003400  700004 756111		stq	sb|4,x1		" UsageTemp
			L291:
aa 003401  600155 234100  324		szn	sp|109		" OcodeSw
aa 003402  000064 600004		tze	L292
aa 003403  700002 236111  325		ldq	sb|2,x1		" Static
aa 003404  700005 756111		stq	sb|5,x1		" t
aa 003405  000033 710004  326		tra	L293
			L294:
aa 003406  600040 236100  327		ldq	sp|32		" OUTPUT
aa 003407  700012 756111		stq	sb|10,x1
aa 003410  000106 351404		eapab	L295		" "STATIC ^d"
aa 003411  700013 541111		sprpab	sb|11,x1
aa 003412  700005 761111		lprpab	sb|5,x1		" t
aa 003413  100001 236100		ldq	ab|1
aa 003414  700014 756111		stq	sb|12,x1
4a 003415  400104 272120		tsbbp	lp|L11,*		" Format
aa 003416  000010 000003		zero	8,3
aa 003417  700005 763111  328		lprpbb	sb|5,x1		" t
aa 003420  300003 353500		eapbb	bb|3
aa 003421  700012 543111		sprpbb	sb|10,x1
aa 003422  774677 272004		tsbbp	L2+2		" WriteConst
aa 003423  000010 000001		zero	8,1
aa 003424  600040 236100  329		ldq	sp|32		" OUTPUT
aa 003425  700012 756111		stq	sb|10,x1
aa 003426  000066 353404		eapbb	L296		" "*t/^s/*n"
aa 003427  700013 543111		sprpbb	sb|11,x1
aa 003430  700005 763111		lprpbb	sb|5,x1		" t
aa 003431  300002 236100		ldq	bb|2
aa 003432  700014 756111		stq	sb|12,x1
4a 003433  400104 272120		tsbbp	lp|L11,*		" Format
aa 003434  000010 000003		zero	8,3
aa 003435  700005 765111  330		lprplb	sb|5,x1		" t
aa 003436  500000 236100		ldq	lb|0
aa 003437  700005 756111		stq	sb|5,x1		" t
			L293:
aa 003440  700005 234111		szn	sb|5,x1		" t
aa 003441  777745 601004		tnz	L294
aa 003442  700003 236111  332		ldq	sb|3,x1		" Defs
aa 003443  700005 756111		stq	sb|5,x1		" t
aa 003444  000020 710004  333		tra	L297
			L298:
aa 003445  600040 236100  334		ldq	sp|32		" OUTPUT
aa 003446  700012 756111		stq	sb|10,x1
aa 003447  000041 350004		eapap	L299		" "ENTRY ^s ^d*n"
aa 003450  700013 540111		sprpap	sb|11,x1
aa 003451  700005 760111		lprpap	sb|5,x1		" t
aa 003452  000001 236100		ldq	ap|1
aa 003453  700014 756111		stq	sb|12,x1
aa 003454  700005 762111		lprpbp	sb|5,x1		" t
aa 003455  200002 236100		ldq	bp|2
aa 003456  700015 756111		stq	sb|13,x1
4a 003457  400104 272120		tsbbp	lp|L11,*		" Format
aa 003460  000010 000004		zero	8,4
aa 003461  700005 761111  335		lprpab	sb|5,x1		" t
aa 003462  100000 236100		ldq	ab|0
aa 003463  700005 756111		stq	sb|5,x1		" t
			L297:
aa 003464  700005 234111		szn	sb|5,x1		" t
aa 003465  777760 601004		tnz	L298
			L292:
aa 003466  700002 236111  338		ldq	sb|2,x1		" Static
aa 003467  700012 756111		stq	sb|10,x1
aa 003470  700003 236111		ldq	sb|3,x1		" Defs
aa 003471  700013 756111		stq	sb|11,x1
4a 003472  400010 272120		tsbbp	lp|L300,*		" FinishText
aa 003473  000010 000002		zero	8,2
aa 003474  600226 234100  339		szn	sp|150		" Metering
aa 003475  000007 600004		tze	L301
aa 003476  000047 236007		ldq	39,dl		" CodeGeneration_Meter
aa 003477  700012 756111		stq	sb|10,x1
aa 003500  700004 236111		ldq	sb|4,x1		" UsageTemp
aa 003501  700013 756111		stq	sb|11,x1
4a 003502  400070 272120		tsbbp	lp|L61,*		" RecordUsage
aa 003503  000010 000002		zero	8,2
			L301:
			L290:
aa 003504  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 003505  200000 121100		sblx1	bp|0
aa 003506  700001 764111		lprplp	sb|1,x1
aa 003507  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L299:
aa 003510  000014 105116		zero	12,35406		" "ENTRY ^s ^d*n"
aa 003511  124122 131040		zero	43090,45600
aa 003512  136163 040136		zero	48243,16478
aa 003513  144012 000000		zero	51210
			L296:
aa 003514  000006 011057		zero	6,4655		" "*t/^s/*n"
aa 003515  136163 057012		zero	48243,24074
			L295:
aa 003516  000011 123124		zero	9,42580		" "STATIC ^d"
aa 003517  101124 111103		zero	33364,37443
aa 003520  040136 144000		zero	16478,51200
aa 003521  000000 000000		" padding
	"	Definition section part one - external entry points

5a 000000  000202 000000		" pointer to first definition
aa 000001  000000 600000		" flags: new format, ignore header
aa 000002  000000 000000		" list terminator

aa 000003  021142 143160		" "bcpl_cg_interface"
aa 000004  154137 143147
aa 000005  137151 156164
aa 000006  145162 146141
aa 000007  143145 000000
aa 000010  010103 147106		" "CgFinish"
aa 000011  151156 151163
aa 000012  150000 000000
aa 000013  010123 164157		" "StoreAll"
aa 000014  162145 101154
aa 000015  154000 000000
aa 000016  022107 145156		" "GenerateLineNumber"
aa 000017  145162 141164
aa 000020  145114 151156
aa 000021  145116 165155
aa 000022  142145 162000
aa 000023  013107 145156		" "GenerateSSP"
aa 000024  145162 141164
aa 000025  145123 123120
aa 000026  031107 145156		" "GenerateDiadicConditional"
aa 000027  145162 141164
aa 000030  145104 151141
aa 000031  144151 143103
aa 000032  157156 144151
aa 000033  164151 157156
aa 000034  141154 000000
aa 000035  032107 145156		" "GenerateMonadicConditional"
aa 000036  145162 141164
aa 000037  145115 157156
aa 000040  141144 151143
aa 000041  103157 156144
aa 000042  151164 151157
aa 000043  156141 154000
aa 000044  026107 145156		" "GenerateOffsetOperator"
aa 000045  145162 141164
aa 000046  145117 146146
aa 000047  163145 164117
aa 000050  160145 162141
aa 000051  164157 162000
aa 000052  026107 145156		" "GenerateDiadicOperator"
aa 000053  145162 141164
aa 000054  145104 151141
aa 000055  144151 143117
aa 000056  160145 162141
aa 000057  164157 162000
aa 000060  027107 145156		" "GenerateMonadicOperator"
aa 000061  145162 141164
aa 000062  145115 157156
aa 000063  141144 151143
aa 000064  117160 145162
aa 000065  141164 157162
aa 000066  016107 145156		" "GenerateSwitch"
aa 000067  145162 141164
aa 000070  145123 167151
aa 000071  164143 150000
aa 000072  023107 145156		" "GenerateClaimResult"
aa 000073  145162 141164
aa 000074  145103 154141
aa 000075  151155 122145
aa 000076  163165 154164
aa 000077  023107 145156		" "GenerateResultValue"
aa 000100  145162 141164
aa 000101  145122 145163
aa 000102  165154 164126
aa 000103  141154 165145
aa 000104  023107 145156		" "GenerateResultBlock"
aa 000105  145162 141164
aa 000106  145122 145163
aa 000107  165154 164102
aa 000110  154157 143153
aa 000111  022107 145156		" "GenerateSystemCall"
aa 000112  145162 141164
aa 000113  145123 171163
aa 000114  164145 155103
aa 000115  141154 154000
aa 000116  021107 145156		" "GenerateSystemArg"
aa 000117  145162 141164
aa 000120  145123 171163
aa 000121  164145 155101
aa 000122  162147 000000
aa 000123  024122 145163		" "ReserveSystemArglist"
aa 000124  145162 166145
aa 000125  123171 163164
aa 000126  145155 101162
aa 000127  147154 151163
aa 000130  164000 000000
aa 000131  014107 145156		" "GenerateFnap"
aa 000132  145162 141164
aa 000133  145106 156141
aa 000134  160000 000000
aa 000135  013107 145156		" "GenerateArg"
aa 000136  145162 141164
aa 000137  145101 162147
aa 000140  016122 145163		" "ReserveArglist"
aa 000141  145162 166145
aa 000142  101162 147154
aa 000143  151163 164000
aa 000144  016107 145156		" "GenerateFinish"
aa 000145  145162 141164
aa 000146  145106 151156
aa 000147  151163 150000
aa 000150  014107 145156		" "GenerateGoto"
aa 000151  145162 141164
aa 000152  145107 157164
aa 000153  157000 000000
aa 000154  020107 145156		" "GenerateRtdefEnd"
aa 000155  145162 141164
aa 000156  145122 164144
aa 000157  145146 105156
aa 000160  144000 000000
aa 000161  022107 145156		" "GenerateRtdefBegin"
aa 000162  145162 141164
aa 000163  145122 164144
aa 000164  145146 102145
aa 000165  147151 156000
aa 000166  015107 145156		" "GenerateLabel"
aa 000167  145162 141164
aa 000170  145114 141142
aa 000171  145154 000000
aa 000172  014107 145156		" "GenerateJump"
aa 000173  145162 141164
aa 000174  145112 165155
aa 000175  160000 000000
aa 000176  014163 171155		" "symbol_table"
aa 000177  142157 154137
aa 000200  164141 142154
aa 000201  145000 000000

	"	Segname definition for bcpl_cg_interface

55 000202  000205 000002		" forward, backward threads
5a 000203  000002 400003		" value defined, class flags
55 000204  000003 000205		" name pointer, first entry def

	"	Definition for CgFinish

55 000205  000210 000202		" forward, backward threads
0a 000206  003364 500000		" value defined, class flags
55 000207  000010 000202		" name pointer, segname def pointer

	"	Definition for StoreAll

55 000210  000213 000205		" forward, backward threads
0a 000211  003313 500000		" value defined, class flags
55 000212  000013 000202		" name pointer, segname def pointer

	"	Definition for GenerateLineNumber

55 000213  000216 000210		" forward, backward threads
0a 000214  003236 500000		" value defined, class flags
55 000215  000016 000202		" name pointer, segname def pointer

	"	Definition for GenerateSSP

55 000216  000221 000213		" forward, backward threads
0a 000217  003157 500000		" value defined, class flags
55 000220  000023 000202		" name pointer, segname def pointer

	"	Definition for GenerateDiadicConditional

55 000221  000224 000216		" forward, backward threads
0a 000222  002743 500000		" value defined, class flags
55 000223  000026 000202		" name pointer, segname def pointer

	"	Definition for GenerateMonadicConditional

55 000224  000227 000221		" forward, backward threads
0a 000225  003057 500000		" value defined, class flags
55 000226  000035 000202		" name pointer, segname def pointer

	"	Definition for GenerateOffsetOperator

55 000227  000232 000224		" forward, backward threads
0a 000230  002624 500000		" value defined, class flags
55 000231  000044 000202		" name pointer, segname def pointer

	"	Definition for GenerateDiadicOperator

55 000232  000235 000227		" forward, backward threads
0a 000233  002514 500000		" value defined, class flags
55 000234  000052 000202		" name pointer, segname def pointer

	"	Definition for GenerateMonadicOperator

55 000235  000240 000232		" forward, backward threads
0a 000236  002412 500000		" value defined, class flags
55 000237  000060 000202		" name pointer, segname def pointer

	"	Definition for GenerateSwitch

55 000240  000243 000235		" forward, backward threads
0a 000241  002131 500000		" value defined, class flags
55 000242  000066 000202		" name pointer, segname def pointer

	"	Definition for GenerateClaimResult

55 000243  000246 000240		" forward, backward threads
0a 000244  002042 500000		" value defined, class flags
55 000245  000072 000202		" name pointer, segname def pointer

	"	Definition for GenerateResultValue

55 000246  000251 000243		" forward, backward threads
0a 000247  001752 500000		" value defined, class flags
55 000250  000077 000202		" name pointer, segname def pointer

	"	Definition for GenerateResultBlock

55 000251  000254 000246		" forward, backward threads
0a 000252  002334 500000		" value defined, class flags
55 000253  000104 000202		" name pointer, segname def pointer

	"	Definition for GenerateSystemCall

55 000254  000257 000251		" forward, backward threads
0a 000255  001661 500000		" value defined, class flags
55 000256  000111 000202		" name pointer, segname def pointer

	"	Definition for GenerateSystemArg

55 000257  000262 000254		" forward, backward threads
0a 000260  001526 500000		" value defined, class flags
55 000261  000116 000202		" name pointer, segname def pointer

	"	Definition for ReserveSystemArglist

55 000262  000265 000257		" forward, backward threads
0a 000263  001445 500000		" value defined, class flags
55 000264  000123 000202		" name pointer, segname def pointer

	"	Definition for GenerateFnap

55 000265  000270 000262		" forward, backward threads
0a 000266  001334 500000		" value defined, class flags
55 000267  000131 000202		" name pointer, segname def pointer

	"	Definition for GenerateArg

55 000270  000273 000265		" forward, backward threads
0a 000271  001243 500000		" value defined, class flags
55 000272  000135 000202		" name pointer, segname def pointer

	"	Definition for ReserveArglist

55 000273  000276 000270		" forward, backward threads
0a 000274  001164 500000		" value defined, class flags
55 000275  000140 000202		" name pointer, segname def pointer

	"	Definition for GenerateFinish

55 000276  000301 000273		" forward, backward threads
0a 000277  001112 500000		" value defined, class flags
55 000300  000144 000202		" name pointer, segname def pointer

	"	Definition for GenerateGoto

55 000301  000304 000276		" forward, backward threads
0a 000302  001025 500000		" value defined, class flags
55 000303  000150 000202		" name pointer, segname def pointer

	"	Definition for GenerateRtdefEnd

55 000304  000307 000301		" forward, backward threads
0a 000305  000613 500000		" value defined, class flags
55 000306  000154 000202		" name pointer, segname def pointer

	"	Definition for GenerateRtdefBegin

55 000307  000312 000304		" forward, backward threads
0a 000310  000716 500000		" value defined, class flags
55 000311  000161 000202		" name pointer, segname def pointer

	"	Definition for GenerateLabel

55 000312  000315 000307		" forward, backward threads
0a 000313  000456 500000		" value defined, class flags
55 000314  000166 000202		" name pointer, segname def pointer

	"	Definition for GenerateJump

55 000315  000320 000312		" forward, backward threads
0a 000316  000534 500000		" value defined, class flags
55 000317  000172 000202		" name pointer, segname def pointer

	"	Definition for symbol_table

55 000320  000002 000315		" forward, backward threads
6a 000321  000000 400002		" value defined, class flags
55 000322  000176 000202		" name pointer, segname def pointer
	"	Definition section part two - symbolic info for external references

aa 000323  010142 143160		" "bcpl_cg0"
aa 000324  154137 143147
aa 000325  060000 000000
aa 000326  012106 151156		" "FinishText"
aa 000327  151163 150124
aa 000330  145170 164000
5a 000331  000332 000000
aa 000332  000004 000000
55 000333  000323 000326
aa 000334  010142 143160		" "bcpl_cg2"
aa 000335  154137 143147
aa 000336  062000 000000
aa 000337  016103 154145		" "ClearRegisters"
aa 000340  141162 122145
aa 000341  147151 163164
aa 000342  145162 163000
5a 000343  000344 000000
aa 000344  000004 000000
55 000345  000334 000337
aa 000346  010142 143160		" "bcpl_cg5"
aa 000347  154137 143147
aa 000350  065000 000000
aa 000351  015123 145164		" "SetLineNumber"
aa 000352  114151 156145
aa 000353  116165 155142
aa 000354  145162 000000
5a 000355  000356 000000
aa 000356  000004 000000
55 000357  000346 000351
aa 000360  010142 143160		" "bcpl_cg4"
aa 000361  154137 143147
aa 000362  064000 000000
aa 000363  006116 145167		" "NewSSP"
aa 000364  123123 120000
5a 000365  000366 000000
aa 000366  000004 000000
55 000367  000360 000363
aa 000370  010142 143160		" "bcpl_cg1"
aa 000371  154137 143147
aa 000372  061000 000000
aa 000373  017115 157156		" "MonadicJumpcond"
aa 000374  141144 151143
aa 000375  112165 155160
aa 000376  143157 156144
5a 000377  000400 000000
aa 000400  000004 000000
55 000401  000370 000373
aa 000402  016104 151141		" "DiadicJumpcond"
aa 000403  144151 143112
aa 000404  165155 160143
aa 000405  157156 144000
5a 000406  000407 000000
aa 000407  000004 000000
55 000410  000370 000402
aa 000411  023101 160160		" "ApplyOffsetOperator"
aa 000412  154171 117146
aa 000413  146163 145164
aa 000414  117160 145162
aa 000415  141164 157162
5a 000416  000417 000000
aa 000417  000004 000000
55 000420  000370 000411
aa 000421  023101 160160		" "ApplyDiadicOperator"
aa 000422  154171 104151
aa 000423  141144 151143
aa 000424  117160 145162
aa 000425  141164 157162
5a 000426  000427 000000
aa 000427  000004 000000
55 000430  000370 000421
aa 000431  024101 160160		" "ApplyMonadicOperator"
aa 000432  154171 115157
aa 000433  156141 144151
aa 000434  143117 160145
aa 000435  162141 164157
aa 000436  162000 000000
5a 000437  000440 000000
aa 000440  000004 000000
55 000441  000370 000431
aa 000442  020122 145163		" "ResultBlockBegin"
aa 000443  165154 164102
aa 000444  154157 143153
aa 000445  102145 147151
aa 000446  156000 000000
5a 000447  000450 000000
aa 000450  000004 000000
55 000451  000360 000442
aa 000452  010142 143160		" "bcpl_cg6"
aa 000453  154137 143147
aa 000454  066000 000000
aa 000455  012103 157155		" "Compswitch"
aa 000456  160163 167151
aa 000457  164143 150000
5a 000460  000461 000000
aa 000461  000004 000000
55 000462  000452 000455
aa 000463  011122 145163		" "ResultGet"
aa 000464  165154 164107
aa 000465  145164 000000
5a 000466  000467 000000
aa 000467  000004 000000
55 000470  000360 000463
aa 000471  011122 145163		" "ResultSet"
aa 000472  165154 164123
aa 000473  145164 000000
5a 000474  000475 000000
aa 000475  000004 000000
55 000476  000360 000471
aa 000477  016103 157155		" "CompSystemCall"
aa 000500  160123 171163
aa 000501  164145 155103
aa 000502  141154 154000
5a 000503  000504 000000
aa 000504  000004 000000
55 000505  000360 000477
aa 000506  016123 164157		" "StoreSystemArg"
aa 000507  162145 123171
aa 000510  163164 145155
aa 000511  101162 147000
5a 000512  000513 000000
aa 000513  000004 000000
55 000514  000360 000506
aa 000515  023103 162145		" "CreateSystemArglist"
aa 000516  141164 145123
aa 000517  171163 164145
aa 000520  155101 162147
aa 000521  154151 163164
5a 000522  000523 000000
aa 000523  000004 000000
55 000524  000360 000515
aa 000525  010103 157155		" "Compfnap"
aa 000526  160146 156141
aa 000527  160000 000000
5a 000530  000531 000000
aa 000531  000004 000000
55 000532  000360 000525
aa 000533  010123 164157		" "StoreArg"
aa 000534  162145 101162
aa 000535  147000 000000
5a 000536  000537 000000
aa 000537  000004 000000
55 000540  000360 000533
aa 000541  015103 162145		" "CreateArglist"
aa 000542  141164 145101
aa 000543  162147 154151
aa 000544  163164 000000
5a 000545  000546 000000
aa 000546  000004 000000
55 000547  000360 000541
aa 000550  012103 157155		" "Compfinish"
aa 000551  160146 151156
aa 000552  151163 150000
5a 000553  000554 000000
aa 000554  000004 000000
55 000555  000360 000550
aa 000556  010103 157155		" "Compgoto"
aa 000557  160147 157164
aa 000560  157000 000000
5a 000561  000562 000000
aa 000562  000004 000000
55 000563  000360 000556
aa 000564  011103 157155		" "Compentry"
aa 000565  160145 156164
aa 000566  162171 000000
5a 000567  000570 000000
aa 000570  000004 000000
55 000571  000360 000564
aa 000572  012103 157155		" "Compreturn"
aa 000573  160162 145164
aa 000574  165162 156000
5a 000575  000576 000000
aa 000576  000004 000000
55 000577  000360 000572
aa 000600  010103 157155		" "Compjump"
aa 000601  160152 165155
aa 000602  160000 000000
5a 000603  000604 000000
aa 000604  000004 000000
55 000605  000334 000600
aa 000606  014142 143160		" "bcpl_utility"
aa 000607  154137 165164
aa 000610  151154 151164
aa 000611  171000 000000
aa 000612  013122 145143		" "RecordUsage"
aa 000613  157162 144125
aa 000614  163141 147145
5a 000615  000616 000000
aa 000616  000004 000000
55 000617  000606 000612
aa 000620  007103 157155		" "Complab"
aa 000621  160154 141142
5a 000622  000623 000000
aa 000623  000004 000000
55 000624  000334 000620
aa 000625  014123 141166		" "SaveOldUsage"
aa 000626  145117 154144
aa 000627  125163 141147
aa 000630  145000 000000
5a 000631  000632 000000
aa 000632  000004 000000
55 000633  000606 000625
aa 000634  017142 143160		" "bcpl_stream_io_"
aa 000635  154137 163164
aa 000636  162145 141155
aa 000637  137151 157137
aa 000640  006127 162151		" "WriteN"
aa 000641  164145 116000
5a 000642  000643 000000
aa 000643  000004 000000
55 000644  000634 000640
aa 000645  022142 143160		" "bcpl_machine_code_"
aa 000646  154137 155141
aa 000647  143150 151156
aa 000650  145137 143157
aa 000651  144145 137000
aa 000652  007127 162151		" "Writech"
aa 000653  164145 143150
5a 000654  000655 000000
aa 000655  000004 000000
55 000656  000645 000652
aa 000657  013142 143160		" "bcpl_report"
aa 000660  154137 162145
aa 000661  160157 162164
aa 000662  010103 107162		" "CGreport"
aa 000663  145160 157162
aa 000664  164000 000000
5a 000665  000666 000000
aa 000666  000004 000000
55 000667  000657 000662
aa 000670  006106 157162		" "Format"
aa 000671  155141 164000
5a 000672  000673 000000
aa 000673  000004 000000
55 000674  000634 000670
aa 000675  012142 143160		" "bcpl_plist"
aa 000676  154137 160154
aa 000677  151163 164000
aa 000700  012123 171155		" "SymbolName"
aa 000701  142157 154116
aa 000702  141155 145000
5a 000703  000704 000000
aa 000704  000004 000000
55 000705  000675 000700
aa 000706  006127 162151		" "WriteS"
aa 000707  164145 123000
5a 000710  000711 000000
aa 000711  000004 000000
55 000712  000634 000706
aa 000713  000000 000000		" padding
	"	Linkage section - static variables and external links

aa 000000  000000 000000		" linkage header
0a 000001  003522 000000		" address of defs
aa 000002  000000 000000
aa 000003  000000 000000
aa 000004  000000 000000
aa 000005  000000 000000
2a 000006  000010 000112		" offset to links, total length
aa 000007  000000 000112		" obsolete length

	"	External link pairs

			L300:
3a 000010  777770 000046		" "bcpl_cg0$FinishText"
5a 000011  000331 000000
			L286:
3a 000012  777766 000046		" "bcpl_cg2$ClearRegisters"
5a 000013  000343 000000
			L278:
3a 000014  777764 000046		" "bcpl_cg5$SetLineNumber"
5a 000015  000355 000000
			L270:
3a 000016  777762 000046		" "bcpl_cg4$NewSSP"
5a 000017  000365 000000
			L258:
3a 000020  777760 000046		" "bcpl_cg1$MonadicJumpcond"
5a 000021  000377 000000
			L251:
3a 000022  777756 000046		" "bcpl_cg1$DiadicJumpcond"
5a 000023  000406 000000
			L241:
3a 000024  777754 000046		" "bcpl_cg1$ApplyOffsetOperator"
5a 000025  000416 000000
			L233:
3a 000026  777752 000046		" "bcpl_cg1$ApplyDiadicOperator"
5a 000027  000426 000000
			L226:
3a 000030  777750 000046		" "bcpl_cg1$ApplyMonadicOperator"
5a 000031  000437 000000
			L216:
3a 000032  777746 000046		" "bcpl_cg4$ResultBlockBegin"
5a 000033  000447 000000
			L206:
3a 000034  777744 000046		" "bcpl_cg6$Compswitch"
5a 000035  000460 000000
			L192:
3a 000036  777742 000046		" "bcpl_cg4$ResultGet"
5a 000037  000466 000000
			L184:
3a 000040  777740 000046		" "bcpl_cg4$ResultSet"
5a 000041  000474 000000
			L172:
3a 000042  777736 000046		" "bcpl_cg4$CompSystemCall"
5a 000043  000503 000000
			L164:
3a 000044  777734 000046		" "bcpl_cg4$StoreSystemArg"
5a 000045  000512 000000
			L154:
3a 000046  777732 000046		" "bcpl_cg4$CreateSystemArglist"
5a 000047  000522 000000
			L146:
3a 000050  777730 000046		" "bcpl_cg4$Compfnap"
5a 000051  000530 000000
			L134:
3a 000052  777726 000046		" "bcpl_cg4$StoreArg"
5a 000053  000536 000000
			L126:
3a 000054  777724 000046		" "bcpl_cg4$CreateArglist"
5a 000055  000545 000000
			L118:
3a 000056  777722 000046		" "bcpl_cg4$Compfinish"
5a 000057  000553 000000
			L110:
3a 000060  777720 000046		" "bcpl_cg4$Compgoto"
5a 000061  000561 000000
			L94:
3a 000062  777716 000046		" "bcpl_cg4$Compentry"
5a 000063  000567 000000
			L82:
3a 000064  777714 000046		" "bcpl_cg4$Compreturn"
5a 000065  000575 000000
			L68:
3a 000066  777712 000046		" "bcpl_cg2$Compjump"
5a 000067  000603 000000
			L61:
3a 000070  777710 000046		" "bcpl_utility$RecordUsage"
5a 000071  000615 000000
			L59:
3a 000072  777706 000046		" "bcpl_cg2$Complab"
5a 000073  000622 000000
			L56:
3a 000074  777704 000046		" "bcpl_utility$SaveOldUsage"
5a 000075  000631 000000
			L40:
3a 000076  777702 000046		" "bcpl_stream_io_$WriteN"
5a 000077  000642 000000
			L33:
3a 000100  777700 000046		" "bcpl_machine_code_$Writech"
5a 000101  000654 000000
			L24:
3a 000102  777676 000046		" "bcpl_report$CGreport"
5a 000103  000665 000000
			L11:
3a 000104  777674 000046		" "bcpl_stream_io_$Format"
5a 000105  000672 000000
			L9:
3a 000106  777672 000046		" "bcpl_plist$SymbolName"
5a 000107  000703 000000
			L8:
3a 000110  777670 000046		" "bcpl_stream_io_$WriteS"
5a 000111  000710 000000
	"	Symbol section header

aa 000000  000000 000001		" version number of header structure
aa 000001  163171 155142		" "symbtree"
aa 000002  164162 145145
aa 000003  000000 000003		" compiler version number
aa 000004  000000 101170		" date/time compiler modified
aa 000005  533311 032072		" 09/25/73  0959.1 mst Tue
aa 000006  000000 102333		" time of this compilation
aa 000007  437060 470236		" 01/24/75  0657.6 mst Fri
aa 000010  142143 160154		" "bcpl    "
aa 000011  040040 040040
aa 000012  000076 000035		" compiler version name - pointer, length
aa 000013  000106 000024		" user id - pointer, length
aa 000014  000113 000043		" comment string - pointer, length
aa 000015  000002 000002		" text and linkage boundaries
aa 000016  000024 000000		" source map, symbol tree root
7a 000017  000000 000271		" section header pointer, block size
aa 000020  000000 000271		" next block pointer, rel_text
aa 000021  000000 000410		" rel_def, rel_link
aa 000022  000426 000271		" rel_symbol, default truncate
aa 000023  000024 000000		" optional truncate, unused
aa 000024  000000 000001		" source files map: version number
aa 000025  000000 000012		"                   number of files
aa 000026  000124 000060		" bcpl_cg_interface
aa 000027  023333 611414		" last modified on
aa 000030  000000 102333		" 01/24/75  0647.2 mst Fri
aa 000031  432366 600000
aa 000032  000140 000046		" bcpl_trans_head
aa 000033  021607 540225		" last modified on
aa 000034  000000 101621		" 05/06/74  1740.8 mst Mon
aa 000035  351476 000000
aa 000036  000152 000051		" bcpl_compiler_head
aa 000037  021607 540214		" last modified on
aa 000040  000000 101621		" 05/06/74  1740.6 mst Mon
aa 000041  351403 200000
aa 000042  000165 000043		" bcpl_symbols
aa 000043  021607 540223		" last modified on
aa 000044  000000 101621		" 05/06/74  1740.8 mst Mon
aa 000045  351474 000000
aa 000046  000176 000047		" bcpl_trans_codes
aa 000047  021607 540224		" last modified on
aa 000050  000000 101621		" 05/06/74  1740.8 mst Mon
aa 000051  351475 000000
aa 000052  000210 000043		" bcpl_cg_head
aa 000053  021607 540213		" last modified on
aa 000054  000000 101621		" 05/06/74  1740.6 mst Mon
aa 000055  351403 200000
aa 000056  000221 000051		" bcpl_compiler_head
aa 000057  021607 540214		" last modified on
aa 000060  000000 101621		" 05/06/74  1740.6 mst Mon
aa 000061  351403 200000
aa 000062  000234 000043		" bcpl_symbols
aa 000063  021607 540223		" last modified on
aa 000064  000000 101621		" 05/06/74  1740.8 mst Mon
aa 000065  351474 000000
aa 000066  000245 000044		" bcpl_cg_codes
aa 000067  021607 540212		" last modified on
aa 000070  000000 101621		" 05/06/74  1740.6 mst Mon
aa 000071  351402 400000
aa 000072  000256 000051		" bcpl_metering_head
aa 000073  021607 540220		" last modified on
aa 000074  000000 101621		" 05/06/74  1740.8 mst Mon
aa 000075  351474 000000
aa 000076  102103 120114		" "BCPL version 3.4, August 1973"
aa 000077  040166 145162
aa 000100  163151 157156
aa 000101  040063 056064
aa 000102  054040 101165
aa 000103  147165 163164
aa 000104  040061 071067
aa 000105  063040 040040
aa 000106  115141 162164		" "Martinson.SysMaint.a"
aa 000107  151156 163157
aa 000110  156056 123171
aa 000111  163115 141151
aa 000112  156164 056141
aa 000113  163157 165162		" "source  xref  alist  optimize  6180"
aa 000114  143145 040040
aa 000115  170162 145146
aa 000116  040040 141154
aa 000117  151163 164040
aa 000120  040157 160164
aa 000121  151155 151172
aa 000122  145040 040066
aa 000123  061070 060040
aa 000124  076062 056061		" ">2.1spec>online>mib083074>bcpl_cg_interface.bcpl"
aa 000125  163160 145143
aa 000126  076157 156154
aa 000127  151156 145076
aa 000130  155151 142060
aa 000131  070063 060067
aa 000132  064076 142143
aa 000133  160154 137143
aa 000134  147137 151156
aa 000135  164145 162146
aa 000136  141143 145056
aa 000137  142143 160154
aa 000140  076154 144144		" ">ldd>include>bcpl_trans_head.incl.bcpl"
aa 000141  076151 156143
aa 000142  154165 144145
aa 000143  076142 143160
aa 000144  154137 164162
aa 000145  141156 163137
aa 000146  150145 141144
aa 000147  056151 156143
aa 000150  154056 142143
aa 000151  160154 040040
aa 000152  076154 144144		" ">ldd>include>bcpl_compiler_head.incl.bcpl"
aa 000153  076151 156143
aa 000154  154165 144145
aa 000155  076142 143160
aa 000156  154137 143157
aa 000157  155160 151154
aa 000160  145162 137150
aa 000161  145141 144056
aa 000162  151156 143154
aa 000163  056142 143160
aa 000164  154040 040040
aa 000165  076154 144144		" ">ldd>include>bcpl_symbols.incl.bcpl"
aa 000166  076151 156143
aa 000167  154165 144145
aa 000170  076142 143160
aa 000171  154137 163171
aa 000172  155142 157154
aa 000173  163056 151156
aa 000174  143154 056142
aa 000175  143160 154040
aa 000176  076154 144144		" ">ldd>include>bcpl_trans_codes.incl.bcpl"
aa 000177  076151 156143
aa 000200  154165 144145
aa 000201  076142 143160
aa 000202  154137 164162
aa 000203  141156 163137
aa 000204  143157 144145
aa 000205  163056 151156
aa 000206  143154 056142
aa 000207  143160 154040
aa 000210  076154 144144		" ">ldd>include>bcpl_cg_head.incl.bcpl"
aa 000211  076151 156143
aa 000212  154165 144145
aa 000213  076142 143160
aa 000214  154137 143147
aa 000215  137150 145141
aa 000216  144056 151156
aa 000217  143154 056142
aa 000220  143160 154040
aa 000221  076154 144144		" ">ldd>include>bcpl_compiler_head.incl.bcpl"
aa 000222  076151 156143
aa 000223  154165 144145
aa 000224  076142 143160
aa 000225  154137 143157
aa 000226  155160 151154
aa 000227  145162 137150
aa 000230  145141 144056
aa 000231  151156 143154
aa 000232  056142 143160
aa 000233  154040 040040
aa 000234  076154 144144		" ">ldd>include>bcpl_symbols.incl.bcpl"
aa 000235  076151 156143
aa 000236  154165 144145
aa 000237  076142 143160
aa 000240  154137 163171
aa 000241  155142 157154
aa 000242  163056 151156
aa 000243  143154 056142
aa 000244  143160 154040
aa 000245  076154 144144		" ">ldd>include>bcpl_cg_codes.incl.bcpl"
aa 000246  076151 156143
aa 000247  154165 144145
aa 000250  076142 143160
aa 000251  154137 143147
aa 000252  137143 157144
aa 000253  145163 056151
aa 000254  156143 154056
aa 000255  142143 160154
aa 000256  076154 144144		" ">ldd>include>bcpl_metering_head.incl.bcpl"
aa 000257  076151 156143
aa 000260  154165 144145
aa 000261  076142 143160
aa 000262  154137 155145
aa 000263  164145 162151
aa 000264  156147 137150
aa 000265  145141 144056
aa 000266  151156 143154
aa 000267  056142 143160
aa 000270  154040 040040
	"	Relocation information


	"	text section relocation bits

aa 000271  000000 000002		" version number of rel-bits structure
aa 000272  000000 005323		" length in bits
aa 000273  740445 000024
aa 000274  740215 170047
aa 000275  236011 647402
aa 000276  751701 672360
aa 000277  106474 025401
aa 000300  036024 600417
aa 000301  022320 000517
aa 000302  021720 000024
aa 000303  000005 000005
aa 000304  000005 170047
aa 000305  200001 002074
aa 000306  127517 005320
aa 000307  012000 002474
aa 000310  055517 005320
aa 000311  012000 002474
aa 000312  057517 010323
aa 000313  601364 002400
aa 000314  000517 014723
aa 000315  603064 740235
aa 000316  000001 236033
aa 000317  647402 151700
aa 000320  472001 200000
aa 000321  247405 351700
aa 000322  432024 000005
aa 000323  170133 236012
aa 000324  640024 000005
aa 000325  170137 236012
aa 000326  647402 350000
aa 000327  240000 051701
aa 000330  272360 206474
aa 000331  037500 002400
aa 000332  000517 014723
aa 000333  601264 002400
aa 000334  000517 014723
aa 000335  601264 740575
aa 000336  000024 740335
aa 000337  000001 236033
aa 000340  647402 151700
aa 000341  472001 200000
aa 000342  247406 351700
aa 000343  432360 116400
aa 000344  240000 051701
aa 000345  432360 106474
aa 000346  023500 050000
aa 000347  012360 276474
aa 000350  021517 014723
aa 000351  601364 740375
aa 000352  170053 236011
aa 000353  647402 350000
aa 000354  051701 672360
aa 000355  106405 000001
aa 000356  236032 640000
aa 000357  240000 247403
aa 000360  350000 012000
aa 000361  002474 053500
aa 000362  000500 000517
aa 000363  010723 601164
aa 000364  000005 170127
aa 000365  200001 200001
aa 000366  236023 647402
aa 000367  750000 012360
aa 000370  306400 002474
aa 000371  025517 006723
aa 000372  601164 000005
aa 000373  170147 200001
aa 000374  236012 647402
aa 000375  350000 012000
aa 000376  002474 047517
aa 000377  005320 012000
aa 000400  002474 057517
aa 000401  005320 012000
aa 000402  002474 053517
aa 000403  004320 240000
aa 000404  051701 272360
aa 000405  166474 033517
aa 000406  011723 601264
aa 000407  000005 170076
l	"	inkage relocation bits

aa 000410  000000 000002		" version number of rel-bits structure
aa 000411  000000 000644		" length in bits
aa 000412  100002 204652
aa 000413  465246 524652
aa 000414  465246 524652
aa 000415  465246 524652
aa 000416  465246 524652
aa 000417  465246 524652
aa 000420  465246 524652
aa 000421  465246 524652
aa 000422  465246 524652
aa 000423  465246 524652
aa 000424  465246 524652
aa 000425  465246 520000
s	"	ymbol relocation bits

aa 000426  000000 000002		" version number of rel-bits structure
aa 000427  000000 000043		" length in bits
aa 000430  740365 771246
	"	Object map

aa 005201  000000 000001		" version number of object_map structure
aa 005202  157142 152137		" "obj_map "
aa 005203  155141 160040
aa 005204  000000 003521		" text offset, length
aa 005205  003522 000713		" def offset, length
aa 005206  004436 000112		" link offset, length
aa 005207  004550 000431		" symbol offset, length
aa 005210  000000 000000		" break map offset, length
aa 005211  340000 000000		" flags: ^bound, relocatable, procedure, standard
aa 005212  005201 000000		" object map pointer, unused


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
