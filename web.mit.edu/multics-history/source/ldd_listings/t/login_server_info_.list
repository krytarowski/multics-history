	COMPILATION LISTING OF SEGMENT login_server_info_
	Compiled by: Multics PL/I Compiler, Release 33e, of October 6, 1992
	Compiled at: CGI                             
	Compiled on: 2000-04-17_1927.69_Mon_mdt
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1987                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1987 *
        6*        *                                                         *
        7*        *********************************************************** */
        8 
        9 /****^  HISTORY COMMENTS:
       10*  1) change(86-08-01,Coren), approve(87-07-13,MCR7737),
       11*     audit(87-07-24,Brunelle), install(87-08-04,MR12.1-1055):
       12*     Initially written.
       13*  2) change(87-04-26,GDixon), approve(87-07-13,MCR7737),
       14*     audit(87-07-24,Brunelle), install(87-08-04,MR12.1-1055):
       15*     Upgraded for change to answer_table.incl.pl1.
       16*                                                   END HISTORY COMMENTS */
       17 
       18 /* format: style4,indattr */
       19 
       20 login_server_info_:
       21      procedure ();
       22 
       23 /* Parameters */
       24 
       25 dcl  P_code	        fixed bin (35) parameter;
       26 dcl  P_request_ms_dirname   char (*) parameter;
       27 dcl  P_request_ms_entryname char (*) parameter;
       28 dcl  P_server_process_id    bit (36) aligned parameter;
       29 dcl  P_server_event_channel fixed bin (71) parameter;
       30 dcl  P_system_control_dirname char (*) parameter;
       31 
       32 /* Automatic */
       33 
       34 dcl  code		        fixed bin (35) automatic;
       35 dcl  event_channel	        fixed bin (71) automatic;
       36 
       37 /* Entries */
       38 
       39 dcl  initiate_file_	        entry (char (*), char (*), bit (*), ptr, fixed bin (24), fixed bin (35));
       40 
       41 /* Internal Static */
       42 
       43 dcl  static_answer_table_ptr ptr initial (null ()) internal static;
       44 dcl  system_control_dirname char (168) initial (">system_control_1") internal static;
       45 
       46 /* External */
       47 
       48 dcl  error_table_$process_unknown fixed bin (35) ext static;
       49 
       50 /* Conditions */
       51 
       52 dcl  seg_fault_error        condition;
       53 
       54 /* Builtin */
       55 
       56 dcl  null		        builtin;
       57 
       58 /* Program */
       59 
       60 request_info:
       61      entry (P_server_process_id, P_server_event_channel, P_request_ms_dirname,
       62 	P_request_ms_entryname, P_code);
       63 
       64 	if static_answer_table_ptr = null () then
       65 RETRY_ANSWER_TABLE_INITIATION:
       66 	     do;
       67 	     call initiate_file_ (system_control_dirname, "answer_table",
       68 		R_ACCESS, ansp, (0), code);
       69 	     if code ^= 0 then
       70 		goto RETURN;
       71 	     static_answer_table_ptr = ansp;
       72 	end;
       73 	else
       74 	     ansp = static_answer_table_ptr;
       75 
       76 	on seg_fault_error begin;
       77 	     static_answer_table_ptr = null ();
       78 	     goto RETRY_ANSWER_TABLE_INITIATION;
       79 	end;
       80 	event_channel = anstbl.ls_request_server_event_channel;
       81 	revert seg_fault_error;
       82 
       83 	if event_channel = 0 then do;
       84 	     code = error_table_$process_unknown;	/* server not active */
       85 	     goto RETURN;
       86 	end;
       87 
       88 	P_server_process_id = anstbl.ls_request_server_process_id;
       89 	P_server_event_channel = event_channel;
       90 	P_request_ms_dirname = system_control_dirname;
       91 	P_request_ms_entryname = "login_server_requests.ms";
       92 	code = 0;
       93 RETURN:
       94 	P_code = code;
       95 	return;
       96 
       97 test:
       98      entry (P_system_control_dirname);
       99 
      100 /**** This entry, used for debugging, sets the pathname of the system
      101*      control directory name. */
      102 
      103 	system_control_dirname = P_system_control_dirname;
      104 	return;
      105 
      106 /* format: off */
      107  /* BEGIN INCLUDE FILE ... access_mode_values.incl.pl1
  1     2*
  1     3*   Values for the "access mode" argument so often used in hardcore
  1     4*   James R. Davis 26 Jan 81  MCR 4844
  1     5*   Added constants for SM access 4/28/82 Jay Pattin
  1     6*   Added text strings 03/19/85 Chris Jones
  1     7**/
  1     8 
  1     9 
  1    10 /* format: style4,delnl,insnl,indattr,ifthen,dclind10 */
  1    11 dcl	(
  1    12 	N_ACCESS		   init ("000"b),
  1    13 	R_ACCESS		   init ("100"b),
  1    14 	E_ACCESS		   init ("010"b),
  1    15 	W_ACCESS		   init ("001"b),
  1    16 	RE_ACCESS		   init ("110"b),
  1    17 	REW_ACCESS	   init ("111"b),
  1    18 	RW_ACCESS		   init ("101"b),
  1    19 	S_ACCESS		   init ("100"b),
  1    20 	M_ACCESS		   init ("010"b),
  1    21 	A_ACCESS		   init ("001"b),
  1    22 	SA_ACCESS		   init ("101"b),
  1    23 	SM_ACCESS		   init ("110"b),
  1    24 	SMA_ACCESS	   init ("111"b)
  1    25 	)		   bit (3) internal static options (constant);
  1    26 
  1    27 /* The following arrays are meant to be accessed by doing either 1) bin (bit_value) or
  1    28*   2) divide (bin_value, 2) to come up with an index into the array. */
  1    29 
  1    30 dcl	SEG_ACCESS_MODE_NAMES  (0:7) init ("null", "W", "E", "EW", "R", "RW", "RE", "REW") char (4) internal
  1    31 			   static options (constant);
  1    32 
  1    33 dcl	DIR_ACCESS_MODE_NAMES  (0:7) init ("null", "A", "M", "MA", "S", "SA", "SM", "SMA") char (4) internal
  1    34 			   static options (constant);
  1    35 
  1    36 dcl	(
  1    37 	N_ACCESS_BIN	   init (00000b),
  1    38 	R_ACCESS_BIN	   init (01000b),
  1    39 	E_ACCESS_BIN	   init (00100b),
  1    40 	W_ACCESS_BIN	   init (00010b),
  1    41 	RW_ACCESS_BIN	   init (01010b),
  1    42 	RE_ACCESS_BIN	   init (01100b),
  1    43 	REW_ACCESS_BIN	   init (01110b),
  1    44 	S_ACCESS_BIN	   init (01000b),
  1    45 	M_ACCESS_BIN	   init (00010b),
  1    46 	A_ACCESS_BIN	   init (00001b),
  1    47 	SA_ACCESS_BIN	   init (01001b),
  1    48 	SM_ACCESS_BIN	   init (01010b),
  1    49 	SMA_ACCESS_BIN	   init (01011b)
  1    50 	)		   fixed bin (5) internal static options (constant);
  1    51 
  1    52 /* END INCLUDE FILE ... access_mode_values.incl.pl1 */
      107 
      108  /* BEGIN INCLUDE FILE ... answer_table.incl.pl1 */
  2     2 
  2     3 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  2     4 /*							       */
  2     5 /* The answer table has one entry per "login instance" whether completed or  */
  2     6 /* not.  It is connected to the Channel Definition Table by the pointer      */
  2     7 /* "channel".  The header is used mostly by dialup_.		       */
  2     8 /*							       */
  2     9 /* Programs which use this file must also include user_table_header.incl.pl1 */
  2    10 /*							       */
  2    11 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  2    12 
  2    13 /****^  HISTORY COMMENTS:
  2    14*  1) change(81-09-10,Kittlitz), approve(), audit(), install():
  2    15*     Replace anstbl.incl.pl1.
  2    16*  2) change(85-01-15,Swenson), approve(), audit(), install():
  2    17*     Add anstbl.session_uid_counter.
  2    18*  3) change(85-08-21,Coren), approve(), audit(), install():
  2    19*     Add anstbl.message_update_time and named constants for values of
  2    20*     anstbl.session, and to make all padding explicit.
  2    21*  4) change(85-08-23,Coren), approve(), audit(), install():
  2    22*     Change "entry" to a placeholder so as not to require
  2    23*     user_table_entry.incl.pl1.
  2    24*  5) change(86-06-29,Swenson), approve(87-07-13,MCR7741),
  2    25*     audit(87-04-14,GDixon), install(87-08-04,MR12.1-1056):
  2    26*     Added the flag login_server_present which indicates whether a login
  2    27*     server request has been received.  This is used to determine whether
  2    28*     dial_ctl_ should call uc_cleanup_network_dials_ (and thus
  2    29*     hpriv_connection_list_, which only exists with the MNA RPQ software).
  2    30*  6) change(87-04-14,GDixon), approve(87-07-13,MCR7741),
  2    31*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  2    32*      A) Moved constants for ute.pw_flags.mask_ctl into
  2    33*         user_table_entry.incl.pl1.
  2    34*      B) Added common table header to all user tables.
  2    35*                                                   END HISTORY COMMENTS */
  2    36 
  2    37 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  2    38 /*							       */
  2    39 /* The anstbl structure below is divided into sections.  Each section begins */
  2    40 /* with a comment describing the elements in the section.  Elements are      */
  2    41 /* placed within a section, based upon their function or the programs that   */
  2    42 /* use them.  Each section begins on a double word and is an even number of  */
  2    43 /* words long.						       */
  2    44 /*							       */
  2    45 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  2    46 
  2    47 
  2    48 
  2    49 /* format: style4 */
  2    50 
  2    51 dcl  ANSTBL_version_4 static options (constant) init (4);	/* version of this declaration */
  2    52 
  2    53 dcl  ansp ptr automatic init (null);
  2    54 
  2    55 dcl  1 anstbl based (ansp) aligned,			/* Structure of answer table */
  2    56        2 header like ut_header,			/* Header common to all user tables. */
  2    57 
  2    58 /* Counter elements. */
  2    59        2 nlin fixed bin,				/* number of active lines */
  2    60        2 mxlin fixed bin,				/* maximum number of active lines */
  2    61        2 n_users fixed bin,				/* number of logged-in users */
  2    62        2 max_users fixed bin,				/* maximum number of users allowed */
  2    63        2 n_units fixed bin,				/* number of logged in units */
  2    64        2 max_units fixed bin,				/* maximum number of units */
  2    65        2 n_sessions fixed bin,			/* number of Multics sessions */
  2    66        2 n_pad fixed bin,
  2    67 
  2    68 /* Name elements. */
  2    69        2 sysdir char (64) unal,			/* name of main system control directory */
  2    70        2 as_tty char (8) unal,			/* name of main answering service device. */
  2    71 
  2    72 /* Login elements. */
  2    73        2 login_word char (8) unal,			/* login word if special_session=1  */
  2    74        2 session char (8) unal,			/* session indicator */
  2    75        2 special_message char (128) unal,		/* message to be printed for special session */
  2    76        2 message_update_time fixed bin (71),		/* time at which special_message was last updated */
  2    77        2 message_lng fixed bin,			/* length of special message */
  2    78        2 login_pad fixed bin,
  2    79 
  2    80 /* Table update elements. */
  2    81        2 lock_count fixed bin,			/* global lock for all system control tables */
  2    82        2 update_pending bit (1) aligned,		/* flag indicating that update is required */
  2    83        2 update_channel fixed binary (71),		/* event channel of update procedure */
  2    84        2 acct_update_chn fixed bin (71) aligned,		/* Timer IPC channel */
  2    85        2 acct_last_update_time fixed bin (71) aligned,	/* Time of last accounting update */
  2    86        2 acct_alarm_fail fixed bin,			/* non-zero if alarm has failed */
  2    87        2 update_pad fixed bin,
  2    88 
  2    89 /* dialup_ data values. */
  2    90        2 current_time fixed bin (71),			/* Time of last transaction */
  2    91        2 processid_index fixed bin (18),		/* unique index for process id generation */
  2    92        2 session_uid_counter fixed bin (35),		/* current session_uid */
  2    93 
  2    94 /* load_ctl_ elements. */
  2    95        2 shift fixed bin,				/* Shift, set by act_ctl_ */
  2    96        2 auto_maxu fixed bin,				/* 0 = manual, 1 = config, 2 = load-level */
  2    97        2 extra_units fixed bin,			/* Total daemon and abs units. */
  2    98 						/* load_ctl_ load leveling desired response range: */
  2    99        2 response_high fixed bin,			/* bad if user response time slower than this */
  2   100        2 response_low fixed bin,			/* bad if user response time faster than this */
  2   101        2 load_ctl_pad fixed bin,
  2   102 
  2   103 /* Login server request server data. */
  2   104        2 ls_request_server_event_channel fixed bin (71),	/* channel for login server requests */
  2   105        2 ls_request_server_process_id bit (36) aligned,	/* process serving login server requests */
  2   106        2 login_server_present bit (1) aligned,		/* On IFF a login server request has been processed */
  2   107 
  2   108        2 entry_pad (28) fixed bin,			/* pad to 128 words */
  2   109        2 entry (0 refer (anstbl.current_size)),		/* user entries */
  2   110          3 contents (UTE_SIZE) fixed bin;
  2   111 
  2   112 /* constants */
  2   113 
  2   114 /* values for anstbl.session */
  2   115 
  2   116 dcl  (AT_NORMAL init ("normal  "),
  2   117      AT_SPECIAL init ("special "),
  2   118      AT_SHUTDOWN init ("shutdown")) char (8) internal static options (constant);
  2   119 
  2   120 dcl  UTE_SIZE fixed bin internal static initial (300);
  2   121 
  2   122 /* END INCLUDE FILE ... answer_table.incl.pl1 */
      108 
      109  /* BEGIN INCLUDE FILE ... user_table_header.incl.pl1 */
  3     2 
  3     3 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  3     4 /*							       */
  3     5 /* This include file declares the header shared by the answer_table,	       */
  3     6 /* absentee_user_table and daemon_user_table include files.		       */
  3     7 /*							       */
  3     8 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  3     9 
  3    10 /****^  HISTORY COMMENTS:
  3    11*  1) change(87-04-26,GDixon), approve(87-07-13,MCR7741),
  3    12*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  3    13*     Initial coding.
  3    14*                                                   END HISTORY COMMENTS */
  3    15 
  3    16 dcl  1 ut_header			aligned based,	/* header shared by all user control tables. */
  3    17        2 header_version fixed bin,			/* version of the header (3) */
  3    18        2 entry_version fixed bin,			/* version of user table entries */
  3    19        2 user_table_type fixed bin,			/* 1 interactive, 2 absentee, 3 daemon */
  3    20        2 header_length fixed bin,			/* length of the header */
  3    21        2 max_size fixed bin,				/* max number of entries in this table */
  3    22        2 current_size fixed bin,			/* actual size of table (in entries) */
  3    23        2 number_free fixed bin,			/* number of free entries in the table. */
  3    24        2 first_free fixed bin,			/* index of first entry in the free list. */
  3    25        2 as_procid bit (36),				/* process ID of user table manager process */
  3    26        2 ut_header_pad fixed bin;
  3    27 
  3    28 /* END INCLUDE FILE ... user_table_header.incl.pl1 */
      109 
      110 
      111 end login_server_info_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    04/17/00  1927.6  login_server_info_.pl1            >udd>sm>ds>w>ml>login_server_info_.pl1
107          1    04/11/85  1552.6  access_mode_values.incl.pl1       >ldd>incl>access_mode_values.incl.pl1
108          2    08/06/87  1013.0  answer_table.incl.pl1             >ldd>incl>answer_table.incl.pl1
109          3    08/06/87  1013.6  user_table_header.incl.pl1        >ldd>incl>user_table_header.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
P_code                                 parameter       fixed bin(35,0)          dcl 25 set ref 60 93*
P_request_ms_dirname                   parameter       char                     packed unaligned dcl 26 set ref 60 90*
P_request_ms_entryname                 parameter       char                     packed unaligned dcl 27 set ref 60 91*
P_server_event_channel                 parameter       fixed bin(71,0)          dcl 29 set ref 60 89*
P_server_process_id                    parameter       bit(36)                  dcl 28 set ref 60 88*
P_system_control_dirname               parameter       char                     packed unaligned dcl 30 ref 97 103
R_ACCESS                        000000 constant        bit(3)                   initial packed unaligned dcl 1-11 set ref 67*
ansp                            000112 automatic       pointer                  initial dcl 2-53 set ref 67* 71 73* 80 88 2-53*
anstbl                                 based           structure                level 1 dcl 2-55
code                            000100 automatic       fixed bin(35,0)          dcl 34 set ref 67* 69 84* 92* 93
error_table_$process_unknown    000066 external static fixed bin(35,0)          dcl 48 ref 84
event_channel                   000102 automatic       fixed bin(71,0)          dcl 35 set ref 80* 83 89
initiate_file_                  000064 constant        entry                    external dcl 39 ref 67
ls_request_server_event_channel
                        140            based           fixed bin(71,0)          level 2 dcl 2-55 ref 80
ls_request_server_process_id
                        142            based           bit(36)                  level 2 dcl 2-55 ref 88
null                                                   builtin function         dcl 56 ref 64 2-53 77
seg_fault_error                 000104 stack reference condition                dcl 52 ref 76 81
static_answer_table_ptr         000010 internal static pointer                  initial dcl 43 set ref 64 71* 73 77*
system_control_dirname          000012 internal static char(168)                initial packed unaligned dcl 44 set ref 67* 90 103*
ut_header                              based           structure                level 1 dcl 3-16

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
ANSTBL_version_4                       internal static fixed bin(17,0)          initial dcl 2-51
AT_NORMAL                              internal static char(8)                  initial packed unaligned dcl 2-116
AT_SHUTDOWN                            internal static char(8)                  initial packed unaligned dcl 2-116
AT_SPECIAL                             internal static char(8)                  initial packed unaligned dcl 2-116
A_ACCESS                               internal static bit(3)                   initial packed unaligned dcl 1-11
A_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 1-36
DIR_ACCESS_MODE_NAMES                  internal static char(4)                  initial array packed unaligned dcl 1-33
E_ACCESS                               internal static bit(3)                   initial packed unaligned dcl 1-11
E_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 1-36
M_ACCESS                               internal static bit(3)                   initial packed unaligned dcl 1-11
M_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 1-36
N_ACCESS                               internal static bit(3)                   initial packed unaligned dcl 1-11
N_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 1-36
REW_ACCESS                             internal static bit(3)                   initial packed unaligned dcl 1-11
REW_ACCESS_BIN                         internal static fixed bin(5,0)           initial dcl 1-36
RE_ACCESS                              internal static bit(3)                   initial packed unaligned dcl 1-11
RE_ACCESS_BIN                          internal static fixed bin(5,0)           initial dcl 1-36
RW_ACCESS                              internal static bit(3)                   initial packed unaligned dcl 1-11
RW_ACCESS_BIN                          internal static fixed bin(5,0)           initial dcl 1-36
R_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 1-36
SA_ACCESS                              internal static bit(3)                   initial packed unaligned dcl 1-11
SA_ACCESS_BIN                          internal static fixed bin(5,0)           initial dcl 1-36
SEG_ACCESS_MODE_NAMES                  internal static char(4)                  initial array packed unaligned dcl 1-30
SMA_ACCESS                             internal static bit(3)                   initial packed unaligned dcl 1-11
SMA_ACCESS_BIN                         internal static fixed bin(5,0)           initial dcl 1-36
SM_ACCESS                              internal static bit(3)                   initial packed unaligned dcl 1-11
SM_ACCESS_BIN                          internal static fixed bin(5,0)           initial dcl 1-36
S_ACCESS                               internal static bit(3)                   initial packed unaligned dcl 1-11
S_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 1-36
UTE_SIZE                               internal static fixed bin(17,0)          initial dcl 2-120
W_ACCESS                               internal static bit(3)                   initial packed unaligned dcl 1-11
W_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 1-36

NAMES DECLARED BY EXPLICIT CONTEXT.
RETRY_ANSWER_TABLE_INITIATION   000101 constant        label                    dcl 64 ref 78
RETURN                          000226 constant        label                    dcl 93 ref 69 85
login_server_info_              000037 constant        entry                    external dcl 20
request_info                    000053 constant        entry                    external dcl 60
test                            000235 constant        entry                    external dcl 97

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       356         446     261         366
Length       674     261        70         211      74          54

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
login_server_info_                  111 external procedure  is an external procedure.  
on unit on line 76                   64 on unit               

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 static_answer_table_ptr     login_server_info_
000012 system_control_dirname      login_server_info_

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
login_server_info_       000100 code                        login_server_info_
                         000102 event_channel               login_server_info_
                         000112 ansp                        login_server_info_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   return_mac          tra_ext_1           enable_op           ext_entry           ext_entry_desc
int_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
initiate_file_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$process_unknown




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
 2   53 000032        20 000036        60 000045        64 000074        67 000101        69 000143        71 000145
     72 000150        73 000151        76 000153        77 000167        78 000171        80 000174        81 000177
     83 000200        84 000201        85 000204        88 000205        89 000210        90 000212        91 000220
     92 000225        93 000226        95 000231        97 000232       103 000251       104 000260


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
