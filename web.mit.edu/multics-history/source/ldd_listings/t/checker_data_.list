	COMPILATION LISTING OF SEGMENT !BBBJWflJdJxGcz
	Compiled by: Multics PL/I Compiler, Release 29, of July 28, 1986
	Compiled at: Honeywell Bull, Phx. Az., Sys-M 
	Compiled on: 07/16/87  1337.6 mst Thu
	    Options: table map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Bull Inc., 1987                *
        4*   *                                                         *
        5*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*   *                                                         *
        7*   * Copyright (c) 1972 by Massachusetts Institute of        *
        8*   * Technology and Honeywell Information Systems, Inc.      *
        9*   *                                                         *
       10*   *********************************************************** */
       11 
       12 
       13 
       14 
       15 
       16 /* HISTORY COMMENTS:
       17*  1) change(87-01-13,GDixon), approve(87-04-16,MCR7614),
       18*     audit(87-05-21,Farley), install(87-07-15,MR12.1-1040):
       19*     Add support for storing boot program as first segment of MST image stored
       20*     in a file.
       21*                                                   END HISTORY COMMENTS */
       22 
       23 
       24 /* CHECKER_DATA_ -- static data for the MST checker subsystem */
       25 /* The bulk of the data is actually kept in a temporary area */
       26 /* found by a pointer here. Needless to say, the checker is */
       27 /* nonrecursive. */
       28 /* Modified December 1983 by Keith Loepere for collections that aren't 
       29*   loaded into segments and other subtleties. */
       30 /* Modified January 1985 by Keith Loepere so that collection 3 isn't
       31*   claimed to take up defintions_, etc. */
       32 /* format: style3,idind30 */
       33 
       34 checker_data_:
       35      proc;
       36 
       37 dcl	1 cdsa			like cds_args auto aligned;
       38 
       39 dcl	1 checker_stat		aligned auto,
       40 	  2 input_iocbp		ptr,		/* checker input switch */
       41 	  2 output_iocbp		ptr,		/* checker output switch */
       42 	  2 temp_ptrs		bit (0),		/* Look at all the following as an array for g_t_segments_ */
       43 	  2 slt_ptr		bit (0),		/* simulated SLT (sslt) */
       44 	  2 sslt_ptr		ptr init (null ()),
       45 	  2 area_ptr		ptr init (null ()), /* area in which most static data is put */
       46 	  2 name_table_ptr		bit (0),		/* simulated name_table */
       47 	  2 sname_table_ptr		ptr init (null ()),
       48 	  2 buffer_ptr		ptr init (null ()), /* Tape reader buffer */
       49 	  2 meter_ptr		ptr init (null ()), /* big structure of checker meters */
       50 	  2 severity		fixed bin,	/* worst error encountered */
       51 	  2 file_attachment		bit (1) init ("0"b);/* MST is a file. */
       52 
       53 dcl	1 checker_text		aligned,
       54 	  2 last_wired_collection	fixed bin init (4), /* make_segs_paged runs here, paging defs, etc. */
       55 	  2 last_text_wired_collection
       56 				fixed bin init (2), /* after this, text is not loaded directly into memory */
       57 	  2 last_supervisor_collection
       58 				fixed bin init (5), /* after this load into >sl1 */
       59 	  2 collection_names	(0:10) aligned,
       60 	    3 major		fixed bin init (0, 0, 1, 1, 1, 2, 3, (4) 0),
       61 	    3 minor		fixed bin init (0, 5, 0, 2, 5, 0, 0, (4) 0),
       62 	  2 loaded		(0:10) bit (1) aligned
       63 				init ("1"b, "0"b, "1"b, "0"b, "1"b, "1"b, "0"b, (4) (1)"0"b),
       64 						/* objects in collection are loaded into segments */
       65 	  2 n_temp_ptrs		fixed bin init (4);
       66 
       67 dcl	code			fixed bin (35);
       68 dcl	create_data_segment_	entry (ptr, fixed bin (35));
       69 dcl	com_err_			entry options (variable);
       70 
       71 dcl	(addr, size, string)	builtin;
       72 
       73 
       74 
  1     1 /* BEGIN INCLUDE FILE cds_args.incl.pl1 */
  1     2 
  1     3 dcl 1 cds_args based aligned,
  1     4     2 sections (2),
  1     5       3 p ptr,					/* pointer to data for text/static section */
  1     6       3 len fixed bin (18),				/* size of text/static section */
  1     7       3 struct_name char (32),			/* name of declared structure for this section */
  1     8     2 seg_name char (32),				/* name to create segment by */
  1     9     2 num_exclude_names fixed bin,			/* number of names in exclude array */
  1    10     2 exclude_array_ptr ptr,				/* pointer to array of exclude names */
  1    11     2 switches,					/* control switches */
  1    12       3 defs_in_link bit (1) unal,			/* says put defs in linkage */
  1    13       3 separate_static bit (1) unal,			/* says separate static section is wanted */
  1    14       3 have_text bit (1) unal,			/* ON if text section given */
  1    15       3 have_static bit (1) unal,			/* ON if static section given */
  1    16       3 pad bit (32) unal;
  1    17 
  1    18 dcl  exclude_names (1) char (32) based;			/* pointed to be cds_args.exclude_array_ptr */
  1    19 
  1    20 /* END INCLUDE FILE cds_args.incl.pl1 */
       75 
       76 
       77 	cdsa.sections (1).p = addr (checker_text);
       78 	cdsa.sections (1).len = size (checker_text);
       79 	cdsa.sections (1).struct_name = "checker_text";
       80 
       81 	cdsa.sections (2).p = addr (checker_stat);
       82 	cdsa.sections (2).len = size (checker_stat);
       83 	cdsa.sections (2).struct_name = "checker_stat";
       84 
       85 	cdsa.seg_name = "checker_data_";
       86 
       87 	cdsa.num_exclude_names = 0;
       88 
       89 	string (cdsa.switches) = "0"b;
       90 	cdsa.switches.have_static = "1"b;
       91 	cdsa.switches.have_text = "1"b;
       92 
       93 	call create_data_segment_ (addr (cdsa), code);
       94 
       95 	if code ^= 0
       96 	then call com_err_ (code, "checker_data_");
       97 
       98 	return;
       99      end checker_data_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    07/15/87  1601.9  !BBBJWflJdJxGcz.pl1               >special_ldd>install>MR12.1-1040>checker_data_.cds
75           1    04/01/76  2209.5  cds_args.incl.pl1                 >ldd>include>cds_args.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 71 ref 77 81 93 93
area_ptr                  6     000146 automatic       pointer                  initial level 2 dcl 39 set ref 39*
buffer_ptr               12     000146 automatic       pointer                  initial level 2 dcl 39 set ref 39*
cds_args                               based           structure                level 1 dcl 1-3
cdsa                            000100 automatic       structure                level 1 dcl 37 set ref 93 93
checker_stat                    000146 automatic       structure                level 1 dcl 39 set ref 81 82
checker_text                    000166 automatic       structure                level 1 dcl 53 set ref 77 78
code                            000233 automatic       fixed bin(35,0)          dcl 67 set ref 93* 95 95*
collection_names          3     000166 automatic       structure                array level 2 dcl 53
com_err_                        000014 constant        entry                    external dcl 69 ref 95
create_data_segment_            000012 constant        entry                    external dcl 68 ref 93
file_attachment          17     000146 automatic       bit(1)                   initial level 2 dcl 39 set ref 39*
have_static              44(03) 000100 automatic       bit(1)                   level 3 packed unaligned dcl 37 set ref 90*
have_text                44(02) 000100 automatic       bit(1)                   level 3 packed unaligned dcl 37 set ref 91*
last_supervisor_collection
                          2     000166 automatic       fixed bin(17,0)          initial level 2 dcl 53 set ref 53*
last_text_wired_collection
                          1     000166 automatic       fixed bin(17,0)          initial level 2 dcl 53 set ref 53*
last_wired_collection           000166 automatic       fixed bin(17,0)          initial level 2 dcl 53 set ref 53*
len                       2     000100 automatic       fixed bin(18,0)          array level 3 dcl 37 set ref 78* 82*
loaded                   31     000166 automatic       bit(1)                   initial array level 2 dcl 53 set ref 53* 53* 53* 53*
                                                                                  53* 53* 53* 53* 53* 53* 53*
major                     3     000166 automatic       fixed bin(17,0)          initial array level 3 dcl 53 set ref 53* 53* 53* 53*
                                                                                  53* 53* 53* 53* 53* 53* 53*
meter_ptr                14     000146 automatic       pointer                  initial level 2 dcl 39 set ref 39*
minor                     4     000166 automatic       fixed bin(17,0)          initial array level 3 dcl 53 set ref 53* 53* 53* 53*
                                                                                  53* 53* 53* 53* 53* 53* 53*
n_temp_ptrs              44     000166 automatic       fixed bin(17,0)          initial level 2 dcl 53 set ref 53*
num_exclude_names        40     000100 automatic       fixed bin(17,0)          level 2 dcl 37 set ref 87*
p                               000100 automatic       pointer                  array level 3 dcl 37 set ref 77* 81*
sections                        000100 automatic       structure                array level 2 dcl 37
seg_name                 30     000100 automatic       char(32)                 level 2 dcl 37 set ref 85*
size                                                   builtin function         dcl 71 ref 78 82
sname_table_ptr          10     000146 automatic       pointer                  initial level 2 dcl 39 set ref 39*
sslt_ptr                  4     000146 automatic       pointer                  initial level 2 dcl 39 set ref 39*
string                                                 builtin function         dcl 71 set ref 89*
struct_name               3     000100 automatic       char(32)                 array level 3 dcl 37 set ref 79* 83*
switches                 44     000100 automatic       structure                level 2 dcl 37 set ref 89*

NAME DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
exclude_names                          based           char(32)                 array unaligned dcl 1-18

NAME DECLARED BY EXPLICIT CONTEXT.
checker_data_                   000017 constant        entry                    external dcl 34

NAME DECLARED BY CONTEXT OR IMPLICATION.
null                                                   builtin function         ref 39 39 39 39 39

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       424         442     350         434
Length      1730     350        16        1252      53           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
checker_data_                       178 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
checker_data_            000100 cdsa                        checker_data_
                         000146 checker_stat                checker_data_
                         000166 checker_text                checker_data_
                         000233 code                        checker_data_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      create_data_segment_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     34 000016        39 000024        53 000033        77 000263        78 000265        79 000267        81 000272
     82 000274        83 000276        85 000301        87 000304        89 000305        90 000306        91 000310
     93 000312        95 000324        98 000347


Object Segment >special_ldd>install>MR12.1-1040>checker_data_
Created on 07/16/87  1337.7 mst Thu
by Martinson.SysMaint.a
using create_data_segment_, Version II of Thursday, November 20, 1986

        Object    Text    Defs    Link    Symb  Static
Start        0       0      46     262     312     272
Length     502      46     214      30     154      20


20 Definitions:


segname:    checker_data_

link|16         area_ptr
link|22         buffer_ptr
text|3          collection_names
link|27         file_attachment
link|10         input_iocbp
text|2          last_supervisor_collection
text|1          last_text_wired_collection
text|0          last_wired_collection
text|31         loaded
link|24         meter_ptr
text|44         n_temp_ptrs
link|20         name_table_ptr
link|12         output_iocbp
link|26         severity
link|14         slt_ptr
link|20         sname_table_ptr
link|14         sslt_ptr
symb|0          symbol_table
link|14         temp_ptrs


No Links.





                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
