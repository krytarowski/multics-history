	COMPILATION LISTING OF SEGMENT expand_syserr_msg_
	Compiled by: Multics PL/I Compiler, Release 28e, of February 14, 1985
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 03/13/85  1140.7 mst Wed
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 
        7 /* format: style4 */
        8 
        9 expand_syserr_msg_:
       10      procedure ();
       11 
       12 /* *      EXPAND_SYSERR_MSG_
       13*   *
       14*   *      This procedure expands old-style syserr messages, which have a data
       15*   *      class of "syserr". It uses the value of the first word of data to
       16*   *      determine the appropriate procedure to call, then calls it.
       17*   *
       18*   *      Modification history:
       19*   *      84-12-05, W. Olin Sibert: Initial coding
       20*   *	85-01-25, EJ Sharpe: changed expand_ioi_msg_ refs to expand_io_status_msg_
       21*   *	85-02-21, EJ Sharpe: added expanders for SB_mmdam, SB_mdc_del_uidpath, and SB_ibm3270_mde
       22**/
       23 
       24 declare  P_log_message_format_ptr pointer parameter;
       25 declare  P_log_message_ptr pointer parameter;
       26 declare  P_expand_mode_ptr pointer parameter;
       27 declare  P_expansion char (*) varying parameter;
       28 declare  P_code fixed bin (35) parameter;
       29 
       30 declare  message_type fixed bin;
       31 declare  expand_proc variable entry (pointer, pointer, pointer, char (*) varying, fixed bin (35));
       32 
       33 declare  expand_access_audit_msg_$syserr entry (pointer, pointer, pointer, char (*) varying, fixed bin (35));
       34 declare  expand_config_deck_msg_$syserr entry (pointer, pointer, pointer, char (*) varying, fixed bin (35));
       35 declare  expand_fnp_poll_msg_$syserr entry (pointer, pointer, pointer, char (*) varying, fixed bin (35));
       36 declare  expand_hwfault_msg_$syserr entry (pointer, pointer, pointer, char (*) varying, fixed bin (35));
       37 declare  expand_io_status_msg_$syserr entry (pointer, pointer, pointer, char (*) varying, fixed bin (35));
       38 declare  expand_mos_msg_$syserr entry (pointer, pointer, pointer, char (*) varying, fixed bin (35));
       39 declare  expand_mpc_poll_msg_$syserr entry (pointer, pointer, pointer, char (*) varying, fixed bin (35));
       40 declare  expand_segdamage_msg_$syserr entry (pointer, pointer, pointer, char (*) varying, fixed bin (35));
       41 
       42 declare  expand_log_message_$unknown_syserr entry (pointer, pointer, pointer, char (*) varying, fixed bin (35));
       43 declare  expand_voldamage_msg_$syserr entry (pointer, pointer, pointer, char (*) varying, fixed bin (35));
       44 declare  expand_vtoce_msg_$syserr entry (pointer, pointer, pointer, char (*) varying, fixed bin (35));
       45 declare  expand_mmdam_msg_$syserr entry (pointer, pointer, pointer, char (*) varying, fixed bin (35));
       46 declare  expand_mdc_uidpath_msg_$syserr entry (pointer, pointer, pointer, char (*) varying, fixed bin (35));
       47 declare  expand_ibm3270_mde_msg_$syserr entry (pointer, pointer, pointer, char (*) varying, fixed bin (35));
       48 
       49 declare  (binary, dimension) builtin;
       50 
       51 
       52 expand_syserr_msg_$format:
       53      entry (P_log_message_format_ptr, P_log_message_ptr, P_expand_mode_ptr, P_expansion, P_code);
       54 
       55 	log_message_ptr = P_log_message_ptr;
       56 	P_code = 0;
       57 
       58 	if (dimension (log_message.data, 1) = 0) then	/* Nothing to expand */
       59 	     return;
       60 
       61 	message_type = binary (log_message.data (1));
       62 
       63 /* This exhaustive search is done solely to enhance readability of the program. Eventually, it
       64*   will go away, when syserr callers are converted to use real data classes. */
       65 
       66 /* format: off */
       67 	call check (SB_disk_err,	expand_io_status_msg_$syserr);	/* 1 */
       68 	call check (SB_hw_fault,	expand_hwfault_msg_$syserr);		/* 2 */
       69 	call check (SB_io_err,	expand_io_status_msg_$syserr);	/* 3 */
       70 	call check (SB_unused_4,	expand_log_message_$unknown_syserr);	/* 4 */
       71 	call check (SB_mos_err,	expand_mos_msg_$syserr);		/* 5 */
       72 
       73 	call check (SB_unused_6,	expand_log_message_$unknown_syserr);	/* 6 */
       74 	call check (SB_unused_7,	expand_log_message_$unknown_syserr);	/* 7 */
       75 	call check (SB_unused_8,	expand_log_message_$unknown_syserr);	/* 8 */
       76 	call check (SB_unused_9,	expand_log_message_$unknown_syserr);	/* 9 */
       77 	call check (SB_unused_10,	expand_log_message_$unknown_syserr);	/* 10 */
       78 
       79 	call check (SB_zerpag,	expand_segdamage_msg_$syserr);	/* 11 */
       80 	call check (SB_unused_12,	expand_log_message_$unknown_syserr);	/* 12 */
       81 	call check (SB_vtoc_salv_dam,	expand_segdamage_msg_$syserr);	/* 13 */
       82 	call check (SB_unused_14,	expand_log_message_$unknown_syserr);	/* 14 */
       83 	call check (SB_unused_15,	expand_log_message_$unknown_syserr);	/* 15 */
       84 
       85 	call check (SB_random_segdamage, expand_segdamage_msg_$syserr);	/* 16 */
       86 	call check (SB_read_nc,	expand_voldamage_msg_$syserr);	/* 17 */
       87 	call check (SB_unused_18,	expand_log_message_$unknown_syserr);	/* 18 */
       88 	call check (SB_mdc_del_uidpath, expand_mdc_uidpath_msg_$syserr);	/* 19 */
       89 	call check (SB_ocdcm_err,	expand_io_status_msg_$syserr);	/* 20 */
       90 
       91 	call check (SB_mmdam,	expand_mmdam_msg_$syserr);		/* 21 */
       92 	call check (SB_verify_lock,	expand_hwfault_msg_$syserr);		/* 22 */
       93 	call check (SB_io_err_detail,	expand_io_status_msg_$syserr);	/* 23 */
       94 	call check (SB_mpc_poll,	expand_mpc_poll_msg_$syserr);		/* 24 */
       95 	call check (SB_fnp_poll,	expand_fnp_poll_msg_$syserr);		/* 25 */
       96 
       97 	call check (SB_config_deck,	expand_config_deck_msg_$syserr);	/* 26 */
       98 	call check (SB_vtoce,	expand_vtoce_msg_$syserr);		/* 27 */
       99 	call check (SB_access_audit,	expand_access_audit_msg_$syserr);	/* 28 */
      100 
      101 	/* 29 - 34 unused */
      102 
      103 	call check (SB_ibm3270_mde,	expand_ibm3270_mde_msg_$syserr);	/* 35 */
      104 /* format: on */
      105 
      106 	expand_proc = expand_log_message_$unknown_syserr;
      107 
      108 CALL_EXPANDER:
      109 	call expand_proc (P_log_message_format_ptr, log_message_ptr, P_expand_mode_ptr, P_expansion, P_code);
      110 
      111 	return;
      112 
      113 
      114 check:
      115      procedure (P_msg_type, P_expander);
      116 
      117 declare  P_msg_type fixed bin;
      118 declare  P_expander entry;
      119 
      120 
      121 	if (message_type ^= P_msg_type) then
      122 	     return;
      123 
      124 	expand_proc = P_expander;
      125 
      126 	goto CALL_EXPANDER;
      127 
      128      end check;
      129 
      130 /* format: off */
      131  /* BEGIN INCLUDE FILE ... log_message.incl.pl1 ... 84-04-25 ... W. Olin Sibert */
  1     2 
  1     3 declare 1 log_message_header  aligned based,                /* Items marked "(SET)" are set by $create_message */
  1     4           2 sentinel          bit (36) aligned,             /* Proper value declared in log_segment.incl.pl1 */
  1     5           2 sequence          fixed bin (35),               /* Sequence number for this message (SET) */
  1     6           2 severity          fixed bin (8) unaligned,      /* Severity of message */
  1     7           2 data_class_lth    fixed bin (9) unaligned unsigned, /* Length of data class-- 0 to 16 (SET) */
  1     8           2 time              fixed bin (53) unaligned,     /* Time message originated */
  1     9           2 text_lth          fixed bin (17) unaligned,     /* Length of message text. Must be nonzero (SET) */
  1    10           2 data_lth          fixed bin (17) unaligned,     /* Length of binary data. May be zero (SET) */
  1    11           2 process_id        bit (36) aligned;             /* Process id of process writing message */
  1    12 
  1    13 declare 1 log_message         aligned based (log_message_ptr),
  1    14           2 header            aligned like log_message_header,
  1    15           2 text              char (log_message_text_lth         refer (log_message.text_lth)) unaligned,
  1    16           2 data_class        char (log_message_data_class_lth   refer (log_message.data_class_lth)) unaligned,
  1    17           2 data              dim (log_message_data_lth          refer (log_message.data_lth)) bit (36) aligned;
  1    18 
  1    19 declare   log_message_ptr pointer;
  1    20 declare   log_message_text_lth fixed bin;
  1    21 declare   log_message_data_class_lth fixed bin;
  1    22 declare   log_message_data_lth fixed bin;
  1    23 
  1    24 /* END INCLUDE FILE ... log_message.incl.pl1 */
      131 
      132  /* BEGIN INCLUDE FILE .. syserr_binary_def.incl.pl1 */
  2     2 
  2     3 /* This include file has an ALM version, keep 'em in sync. */
  2     4 
  2     5 /* format: off */
  2     6 
  2     7 /* Modified January 1984 by Paul Farley to add an array of entry values
  2     8*   to be examined by display_cpu_error. */
  2     9 /* Modified October 1984 by EJ Sharpe to include SB_audit_message */
  2    10 /* Modified January 1985 by EJ Sharpe for SB_char_data_classes */
  2    11 /* Modified 1985-01-25, BIM: added ring alarm audit support. */
  2    12 /* Modified 1985-02-20, EJ Sharpe: added SB_ibm3270_mde, syserr_binary_(seg vol)damage_class,
  2    13*		also changed some codes to "SB_unused_NN" - see line comments */
  2    14 
  2    15 /* In the future, these will be the only constants needed in this include
  2    16*file.  They are the binary data class strings for messages in the new format
  2    17*syserr logs.  The names are all of the form SB_ZZZZZZZ_data_class where
  2    18*ZZZZZZZ is the value of the data class string.  Message expanders are named
  2    19*expand_ZZZZZZZ_msg_ and are referenced by the log perusal tools. */
  2    20 
  2    21 dcl (						/* include file name */
  2    22 SB_io_status_data_class	init ("io_status"),		/* io_syserr_msg */
  2    23 SB_hwfault_data_class	init ("hwfault"),		/* syserr_fault_msg */
  2    24 SB_mos_data_class		init ("mos"),		/* scr */
  2    25 SB_segdamage_data_class	init ("segdamage"),		/* segdamage_msg */
  2    26 SB_voldamage_data_class	init ("voldamage"),		/* segdamage_msg (first two words) */
  2    27 SB_mdc_del_uidpath_data_class	init ("mdc_del_uidpath"),	/* none - 16 word UID path */
  2    28 SB_mmdam_data_class		init ("mmdam"),		/* syserr_mmdam_msg */
  2    29 SB_mpc_poll_data_class	init ("mpc_poll"),		/* poll_mpc_data */
  2    30 SB_fnp_poll_data_class	init ("fnp_poll"),		/* poll_fnp_data */
  2    31 SB_config_deck_data_class	init ("config_deck"),	/* config_deck */
  2    32 SB_vtoce_data_class		init ("vtoce"),		/* vtoce */
  2    33 SB_access_audit_data_class	init ("access_audit"),	/* access_audit_bin_header */
  2    34 SB_ibm3270_mde_data_class	init ("ibm3270_mde")	/* ibm3270_mpx_data */
  2    35 ) static internal char (16) varying options (constant);
  2    36 
  2    37 
  2    38 /************************
  2    39*Once the syserr$binary is replaced with something that takes real data classes
  2    40*and all system modules and tools are upgraded to use the new interface, the
  2    41*rest of this include file may be discarded.
  2    42*************************/
  2    43 
  2    44 /* The limit of 36 is arbitrary- there is no reason that it can not be
  2    45*   extended at any time. */
  2    46 
  2    47 dcl (
  2    48 SB_disk_err	init (1),		SBL_disk_err	init (5),
  2    49 SB_hw_fault	init (2),		SBL_hw_fault	init (176),
  2    50 SB_io_err		init (3),		SBL_io_err	init (5),
  2    51 SB_unused_4	init (4),		SBL_unused_4	init (1),	/* was "mos_poll" (mos poll time) */
  2    52 SB_mos_err	init (5),		SBL_mos_err	init (2),	/* mos memory error data */
  2    53 SB_unused_6	init (6),		SBL_unused_6	init (1),	/* was "bulk_status" (bulk dcb status) */
  2    54 SB_unused_7	init (7),		SBL_unused_7	init (1), /* was "bulk_csb" (bulk csb status) */
  2    55 SB_unused_8	init (8),		SBL_unused_8	init (3), /* was "free_st_1" */
  2    56 SB_unused_9	init (9),		SBL_unused_9	init (2), /* was "free_st_2" */
  2    57 SB_unused_10	init (10),	SBL_unused_10	init (21), /* was "unpr_add" */
  2    58 SB_zerpag		init (11),	SBL_zerpag	init (20),
  2    59 SB_unused_12	init (12),	SBL_unused_12	init (20), /* was "unpr_add" */
  2    60 SB_vtoc_salv_dam	init (13),	SBL_vtoc_salv_dam	init (20),
  2    61 SB_unused_14	init (14),	SBL_unused_14	init (20), /* was "page_rw_err" */
  2    62 SB_unused_15	init (15),	SBL_unused_15	init (3), /* was "ruad" */
  2    63 SB_random_segdamage	init (16),	SBL_random_segdamage init (20),
  2    64 SB_read_nc	init (17),	SBL_read_nc	init (2),
  2    65 SB_unused_18	init (18),	SBL_unused_18	init (2), /* was "vtoc_err" */
  2    66 SB_mdc_del_uidpath	init (19),	SBL_mdc_del_uidpath	init (16),
  2    67 SB_ocdcm_err	init (20),	SBL_ocdcm_err	init (5),
  2    68 SB_mmdam		init (21),	SBL_mmdam		init (2),
  2    69 SB_verify_lock	init (22),	SBL_verify_lock	init (176),
  2    70 SB_io_err_detail	init (23),	SBL_io_err_detail	init (11),
  2    71 SB_mpc_poll	init (24),	SBL_mpc_poll	init (256) /* max */,
  2    72 SB_fnp_poll	init (25),	SBL_fnp_poll	init (256) /* max */,
  2    73 SB_config_deck	init (26),	SBL_config_deck	init (256) /* 16 cards at 16 words */,
  2    74 SB_vtoce		init (27),	SBL_vtoce		init (192),    /* 1 VTOCE */
  2    75 SB_access_audit	init (28),	SBL_access_audit	init (256), /* max */
  2    76 SB_ibm3270_mde	init (35),	SBL_ibm3270_mde	init (256), /* max */
  2    77 SB_end_of_table	init (36),	SBL_end_of_table	init (1)
  2    78   ) internal static options (constant) fixed bin;
  2    79 
  2    80 
  2    81 /* The following array is a mapping of the old syserr$binary codes into the
  2    82*new data classes for MR11.  It is primarily used by syserr_copy to translate
  2    83*the binary data codes stored in the wired syserr log (see above) into the data
  2    84*classes needed by the ring-0 paged syserr log which is a new format log.  It
  2    85*is also used by syserr_log_util_ to translate the data classes back into the
  2    86*corresponding binary code (for tools not yet upgraded to deal with the new
  2    87*format log messages). */
  2    88 
  2    89 dcl SB_char_data_classes (36) char (16) varying internal static options (constant)
  2    90 	init (	"io_status",		/* 1 */
  2    91 		"hwfault",		/* 2 */
  2    92 		"io_status",		/* 3 */
  2    93 		"unused_4",		/* 4 */
  2    94 		"mos",			/* 5 */
  2    95 
  2    96 		"unused_6",		/* 6 */
  2    97 		"unused_7",		/* 7 */
  2    98 		"unused_8",		/* 8 */
  2    99 		"unused_9",		/* 9 */ 
  2   100 		"unused_10",		/* 10 */
  2   101 
  2   102 		"segdamage",		/* 11 */
  2   103 		"unused_12",		/* 12 */
  2   104 		"segdamage",		/* 13 */
  2   105 		"unused_14",		/* 14 */
  2   106 		"unused_15",		/* 15 */
  2   107 
  2   108 		"segdamage",		/* 16 */
  2   109 		"voldamage",		/* 17 */
  2   110 		"unused_18",		/* 18 */
  2   111 		"mdc_del_uidpath",		/* 19 */
  2   112 		"io_status",		/* 20 */
  2   113 
  2   114 		"mmdam",			/* 21 */
  2   115 		"hwfault",		/* 22 */
  2   116 		"io_status",		/* 23 */
  2   117 		"mpc_poll",		/* 24 */
  2   118 		"fnp_poll",		/* 25 */
  2   119 
  2   120 		"config_deck",		/* 26 */
  2   121 		"vtoce",			/* 27 */
  2   122 		"access_audit",		/* 28 */
  2   123 		"unused_29",		/* 29 */
  2   124 		"unused_30",		/* 30 */
  2   125 		"unused_31",		/* 31 */
  2   126 		"unused_32",		/* 32 */
  2   127 		"unused_33",		/* 33 */
  2   128 		"unused_34",		/* 34 */
  2   129 		"ibm3270_mde",		/* 35 */
  2   130 		"unused_36"		/* 36 */
  2   131 	);
  2   132 
  2   133 
  2   134 /* format: on */
  2   135 
  2   136 /* These constants are used by various tools which analyze syserr messages and
  2   137*still call the old interface "syserr_log_util_". */
  2   138 
  2   139      dcl	   syserr_binary_mos_mask init ("060000000000"b3) bit (36) static options (constant);
  2   140      dcl	   syserr_binary_seg_damage_mask init ("000374000000"b3) bit (36) static options (constant);
  2   141      dcl	   syserr_binary_vol_damage_mask init ("003413000000"b3) bit (36) static options (constant);
  2   142      dcl	   syserr_binary_address_damage_mask init ("002010000000"b3) bit (36) static options (constant);
  2   143 
  2   144      dcl	   display_cpu_error_binary_defs (2) init (
  2   145 			      2,			/** SB_hw_fault */
  2   146 			      22			/** SB_verify_lock */
  2   147 			      ) internal static options (constant) fixed bin;
  2   148 
  2   149 /* END INCLUDE FILE syserr_binary_def.incl.pl1 */
      132 
      133 
      134           end expand_syserr_msg_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    03/13/85  1026.5  expand_syserr_msg_.pl1            >spec>on>41-11>expand_syserr_msg_.pl1
131          1    01/21/85  0912.2  log_message.incl.pl1              >ldd>include>log_message.incl.pl1
132          2    03/12/85  1556.6  syserr_binary_def.incl.pl1        >spec>on>41-11>syserr_binary_def.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
P_code                                 parameter       fixed bin(35,0)          dcl 28 set ref 52 56* 108*
P_expand_mode_ptr                      parameter       pointer                  dcl 26 set ref 52 108*
P_expander                             parameter       entry variable           dcl 118 ref 114 124
P_expansion                            parameter       varying char             dcl 27 set ref 52 108*
P_log_message_format_ptr               parameter       pointer                  dcl 24 set ref 52 108*
P_log_message_ptr                      parameter       pointer                  dcl 25 ref 52 55
P_msg_type                             parameter       fixed bin(17,0)          dcl 117 ref 114 121
SB_access_audit                 000001 constant        fixed bin(17,0)          initial dcl 2-47 set ref 99*
SB_config_deck                  000003 constant        fixed bin(17,0)          initial dcl 2-47 set ref 97*
SB_disk_err                            constant        fixed bin(17,0)          initial dcl 2-47 set ref 67*
SB_fnp_poll                     000004 constant        fixed bin(17,0)          initial dcl 2-47 set ref 95*
SB_hw_fault                            constant        fixed bin(17,0)          initial dcl 2-47 set ref 68*
SB_ibm3270_mde                  000000 constant        fixed bin(17,0)          initial dcl 2-47 set ref 103*
SB_io_err                              constant        fixed bin(17,0)          initial dcl 2-47 set ref 69*
SB_io_err_detail                000005 constant        fixed bin(17,0)          initial dcl 2-47 set ref 93*
SB_mdc_del_uidpath              000011 constant        fixed bin(17,0)          initial dcl 2-47 set ref 88*
SB_mmdam                        000007 constant        fixed bin(17,0)          initial dcl 2-47 set ref 91*
SB_mos_err                             constant        fixed bin(17,0)          initial dcl 2-47 set ref 71*
SB_mpc_poll                            constant        fixed bin(17,0)          initial dcl 2-47 set ref 94*
SB_ocdcm_err                    000010 constant        fixed bin(17,0)          initial dcl 2-47 set ref 89*
SB_random_segdamage             000014 constant        fixed bin(17,0)          initial dcl 2-47 set ref 85*
SB_read_nc                      000013 constant        fixed bin(17,0)          initial dcl 2-47 set ref 86*
SB_unused_10                    000022 constant        fixed bin(17,0)          initial dcl 2-47 set ref 77*
SB_unused_12                    000020 constant        fixed bin(17,0)          initial dcl 2-47 set ref 80*
SB_unused_14                    000016 constant        fixed bin(17,0)          initial dcl 2-47 set ref 82*
SB_unused_15                    000015 constant        fixed bin(17,0)          initial dcl 2-47 set ref 83*
SB_unused_18                    000012 constant        fixed bin(17,0)          initial dcl 2-47 set ref 87*
SB_unused_4                            constant        fixed bin(17,0)          initial dcl 2-47 set ref 70*
SB_unused_6                     000025 constant        fixed bin(17,0)          initial dcl 2-47 set ref 73*
SB_unused_7                     000024 constant        fixed bin(17,0)          initial dcl 2-47 set ref 74*
SB_unused_8                     000023 constant        fixed bin(17,0)          initial dcl 2-47 set ref 75*
SB_unused_9                            constant        fixed bin(17,0)          initial dcl 2-47 set ref 76*
SB_verify_lock                  000006 constant        fixed bin(17,0)          initial dcl 2-47 set ref 92*
SB_vtoc_salv_dam                000017 constant        fixed bin(17,0)          initial dcl 2-47 set ref 81*
SB_vtoce                        000002 constant        fixed bin(17,0)          initial dcl 2-47 set ref 98*
SB_zerpag                       000021 constant        fixed bin(17,0)          initial dcl 2-47 set ref 79*
binary                                                 builtin function         dcl 49 ref 61
data                                   based           bit(36)                  array level 2 dcl 1-13 ref 58 61
data_class_lth            2(09)        based           fixed bin(9,0)           level 3 packed unsigned unaligned dcl 1-13 ref 58 61
data_lth                  4(18)        based           fixed bin(17,0)          level 3 packed unaligned dcl 1-13 ref 58
dimension                                              builtin function         dcl 49 ref 58
expand_access_audit_msg_$syserr 000010 constant        entry                    external dcl 33 ref 99 99
expand_config_deck_msg_$syserr  000012 constant        entry                    external dcl 34 ref 97 97
expand_fnp_poll_msg_$syserr     000014 constant        entry                    external dcl 35 ref 95 95
expand_hwfault_msg_$syserr      000016 constant        entry                    external dcl 36 ref 68 68 92 92
expand_ibm3270_mde_msg_$syserr  000042 constant        entry                    external dcl 47 ref 103 103
expand_io_status_msg_$syserr    000020 constant        entry                    external dcl 37 ref 67 67 69 69 89 89 93 93
expand_log_message_$unknown_syserr
                                000030 constant        entry                    external dcl 42 ref 70 70 73 73 74 74 75 75 76 76 77
                                                                                  77 80 80 82 82 83 83 87 87 106
expand_mdc_uidpath_msg_$syserr  000040 constant        entry                    external dcl 46 ref 88 88
expand_mmdam_msg_$syserr        000036 constant        entry                    external dcl 45 ref 91 91
expand_mos_msg_$syserr          000022 constant        entry                    external dcl 38 ref 71 71
expand_mpc_poll_msg_$syserr     000024 constant        entry                    external dcl 39 ref 94 94
expand_proc                     000102 automatic       entry variable           dcl 31 set ref 106* 108 124*
expand_segdamage_msg_$syserr    000026 constant        entry                    external dcl 40 ref 79 79 81 81 85 85
expand_voldamage_msg_$syserr    000032 constant        entry                    external dcl 43 ref 86 86
expand_vtoce_msg_$syserr        000034 constant        entry                    external dcl 44 ref 98 98
header                                 based           structure                level 2 dcl 1-13
log_message                            based           structure                level 1 dcl 1-13
log_message_header                     based           structure                level 1 dcl 1-3
log_message_ptr                 000106 automatic       pointer                  dcl 1-19 set ref 55* 58 61 108*
message_type                    000100 automatic       fixed bin(17,0)          dcl 30 set ref 61* 121
text_lth                  4            based           fixed bin(17,0)          level 3 packed unaligned dcl 1-13 ref 58 61

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
SBL_access_audit                       internal static fixed bin(17,0)          initial dcl 2-47
SBL_config_deck                        internal static fixed bin(17,0)          initial dcl 2-47
SBL_disk_err                           internal static fixed bin(17,0)          initial dcl 2-47
SBL_end_of_table                       internal static fixed bin(17,0)          initial dcl 2-47
SBL_fnp_poll                           internal static fixed bin(17,0)          initial dcl 2-47
SBL_hw_fault                           internal static fixed bin(17,0)          initial dcl 2-47
SBL_ibm3270_mde                        internal static fixed bin(17,0)          initial dcl 2-47
SBL_io_err                             internal static fixed bin(17,0)          initial dcl 2-47
SBL_io_err_detail                      internal static fixed bin(17,0)          initial dcl 2-47
SBL_mdc_del_uidpath                    internal static fixed bin(17,0)          initial dcl 2-47
SBL_mmdam                              internal static fixed bin(17,0)          initial dcl 2-47
SBL_mos_err                            internal static fixed bin(17,0)          initial dcl 2-47
SBL_mpc_poll                           internal static fixed bin(17,0)          initial dcl 2-47
SBL_ocdcm_err                          internal static fixed bin(17,0)          initial dcl 2-47
SBL_random_segdamage                   internal static fixed bin(17,0)          initial dcl 2-47
SBL_read_nc                            internal static fixed bin(17,0)          initial dcl 2-47
SBL_unused_10                          internal static fixed bin(17,0)          initial dcl 2-47
SBL_unused_12                          internal static fixed bin(17,0)          initial dcl 2-47
SBL_unused_14                          internal static fixed bin(17,0)          initial dcl 2-47
SBL_unused_15                          internal static fixed bin(17,0)          initial dcl 2-47
SBL_unused_18                          internal static fixed bin(17,0)          initial dcl 2-47
SBL_unused_4                           internal static fixed bin(17,0)          initial dcl 2-47
SBL_unused_6                           internal static fixed bin(17,0)          initial dcl 2-47
SBL_unused_7                           internal static fixed bin(17,0)          initial dcl 2-47
SBL_unused_8                           internal static fixed bin(17,0)          initial dcl 2-47
SBL_unused_9                           internal static fixed bin(17,0)          initial dcl 2-47
SBL_verify_lock                        internal static fixed bin(17,0)          initial dcl 2-47
SBL_vtoc_salv_dam                      internal static fixed bin(17,0)          initial dcl 2-47
SBL_vtoce                              internal static fixed bin(17,0)          initial dcl 2-47
SBL_zerpag                             internal static fixed bin(17,0)          initial dcl 2-47
SB_access_audit_data_class             internal static varying char(16)         initial dcl 2-21
SB_char_data_classes                   internal static varying char(16)         initial array dcl 2-89
SB_config_deck_data_class              internal static varying char(16)         initial dcl 2-21
SB_end_of_table                        internal static fixed bin(17,0)          initial dcl 2-47
SB_fnp_poll_data_class                 internal static varying char(16)         initial dcl 2-21
SB_hwfault_data_class                  internal static varying char(16)         initial dcl 2-21
SB_ibm3270_mde_data_class              internal static varying char(16)         initial dcl 2-21
SB_io_status_data_class                internal static varying char(16)         initial dcl 2-21
SB_mdc_del_uidpath_data_class          internal static varying char(16)         initial dcl 2-21
SB_mmdam_data_class                    internal static varying char(16)         initial dcl 2-21
SB_mos_data_class                      internal static varying char(16)         initial dcl 2-21
SB_mpc_poll_data_class                 internal static varying char(16)         initial dcl 2-21
SB_segdamage_data_class                internal static varying char(16)         initial dcl 2-21
SB_voldamage_data_class                internal static varying char(16)         initial dcl 2-21
SB_vtoce_data_class                    internal static varying char(16)         initial dcl 2-21
display_cpu_error_binary_defs          internal static fixed bin(17,0)          initial array dcl 2-144
log_message_data_class_lth             automatic       fixed bin(17,0)          dcl 1-21
log_message_data_lth                   automatic       fixed bin(17,0)          dcl 1-22
log_message_text_lth                   automatic       fixed bin(17,0)          dcl 1-20
syserr_binary_address_damage_mask      internal static bit(36)                  initial unaligned dcl 2-142
syserr_binary_mos_mask                 internal static bit(36)                  initial unaligned dcl 2-139
syserr_binary_seg_damage_mask          internal static bit(36)                  initial unaligned dcl 2-140
syserr_binary_vol_damage_mask          internal static bit(36)                  initial unaligned dcl 2-141

NAMES DECLARED BY EXPLICIT CONTEXT.
CALL_EXPANDER                   000436 constant        label                    dcl 108 ref 126
check                           000467 constant        entry                    internal dcl 114 ref 67 68 69 70 71 73 74 75 76 77
                                                                                  79 80 81 82 83 85 86 87 88 89 91 92 93 94 95 97 98
                                                                                  99 103
expand_syserr_msg_              000043 constant        entry                    external dcl 9
expand_syserr_msg_$format       000056 constant        entry                    external dcl 52

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1230        1274     764        1240
Length      1552     764        44         242     244           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
expand_syserr_msg_                  108 external procedure  is an external procedure.  
check                                   internal procedure  shares stack frame of external procedure expand_syserr_msg_.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
expand_syserr_msg_       000100 message_type                expand_syserr_msg_
                         000102 expand_proc                 expand_syserr_msg_
                         000106 log_message_ptr             expand_syserr_msg_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_var_desc       return              ext_entry           ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
expand_access_audit_msg_$syserr                             expand_config_deck_msg_$syserr
expand_fnp_poll_msg_$syserr   expand_hwfault_msg_$syserr    expand_ibm3270_mde_msg_$syserr
expand_io_status_msg_$syserr  expand_log_message_$unknown_syserr
expand_mdc_uidpath_msg_$syserr                              expand_mmdam_msg_$syserr      expand_mos_msg_$syserr
expand_mpc_poll_msg_$syserr   expand_segdamage_msg_$syserr  expand_voldamage_msg_$syserr  expand_vtoce_msg_$syserr

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      9 000042        52 000050        55 000071        56 000075        58 000076        61 000102        67 000117
     68 000125        69 000134        70 000143        71 000152        73 000161        74 000170        75 000177
     76 000206        77 000215        79 000224        80 000233        81 000242        82 000251        83 000260
     85 000267        86 000276        87 000305        88 000314        89 000323        91 000332        92 000341
     93 000350        94 000357        95 000366        97 000375        98 000404        99 000413       103 000422
    106 000431       108 000436       111 000466       114 000467       121 000471       124 000475       126 000503


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
