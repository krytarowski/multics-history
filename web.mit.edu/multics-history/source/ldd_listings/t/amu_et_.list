ASSEMBLY LISTING OF SEGMENT >special_ldd>install>MR12.0-1206>amu_et_.alm                     
ASSEMBLED ON:	11/05/86  1044.0 mst Wed
OPTIONS USED:	list 
ASSEMBLED BY:	ALM Version  6.7  October 1986  
ASSEMBLER CREATED:	10/08/86  1557.5 mst Wed

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Information Systems Inc., 1983 *
                                     4  " *                                                         *
                                     5  " ***********************************************************
                                     6  "
                                     7  "	Modified 20 Jan 85 by BLB to add error codes used by amu_deadproc_.
                                     8  
                                     9  	include et_macros
                                   1-1  " Begin include file ...... et_macros.incl.alm
                                   1-2  "	Written 6/15/77 by Noel I. Morris
                                   1-3  "	Modified '82 so error code entries are in first page of segment.
                                   1-4  
                                   1-5  " This include file contains macros for generating error tables
                                   1-6  " for both system and non-system use.
                                   1-7  
                                   1-8  " ET MACRO
                                   1-9  "
                                  1-10  " This macro is used to initialize the error table for either
                                  1-11  " system or non-system use.  It is invoked at the beginning of
                                  1-12  " the error table as follows:
                                  1-13  "
                                  1-14  "	et	table_name{,system}
                                  1-15  "
                                  1-16  
                                  1-17  macro	et
                              1   1-18  	maclist	on
                              2   1-19  
                              3   1-20  	name	&1
                              4   1-21  
                              5   1-22  &^=&2,system&[
                              6   1-23  
                              7   1-24  	include	stack_header
                              8   1-25  
                              9   1-26  
                             10   1-27  
                             11   1-28  	use	codes
                             12   1-29  .code_start:
                             13   1-30  
                             14   1-31  	use	past_codes
                             15   1-32  .code_end:
                             16   1-33  
                             17   1-34  	join	/link/codes,past_codes
                             18   1-35  
                             19   1-36  	use	messages
                             20   1-37  
                             21   1-38  .trapproc:
                             22   1-39  	epaq	0,ic
                             23   1-40  	eax0	0,au
                             24   1-41  	epbpsb	sp|0
                             25   1-42  	lprplp	sb|stack_header.lot_ptr,*au
                             26   1-43  	eax1	.code_start         
                             27   1-44  .loop:	stx0	lp|0,x1
                             28   1-45  	eax1	1,x1
                             29   1-46  	cmpx1	.code_end,du
                             30   1-47  	tmi	.loop-*,ic
                             31   1-48  	short_return
                             32   1-49  
                             33   1-50  	firstref	<*text>|.trapproc
                             34   1-51  
                             35   1-52  &;	use	codes
                             36   1-53  	use	messages
                             37   1-54  
                             38   1-55  	join	/text/codes,messages
                             39   1-56  
                             40   1-57  &]
                             41   1-58  
                             42   1-59  	bool	.segno,77777
                             43   1-60  
                             44   1-61  	maclist	off
                             45   1-62  
                             46   1-63  	&end
                                  1-64  
                                  1-65  
                                  1-66  
                                  1-67  " EC MACRO
                                  1-68  "
                                  1-69  " This macro is used to define an error code as shown:
                                  1-70  "
                                  1-71  "	ec	name,{short_mess},(long_mess)
                                  1-72  "
                                  1-73  " If more than a single name is to be defined for a given message,
                                  1-74  " a list of names separated by commas and enclosed in parentheses
                                  1-75  " must be given.   short_mess must be 8 or less characters.  If omitted,
                                  1-76  " the short_mess will be set to the name.  long_mess is enclosed
                                  1-77  " in parentheses in order to cause ALM to ignore embedded blanks.  Please
                                  1-78  " note that double quote characters in either short_mess or long_mess
                                  1-79  " must be doubled in order to make the ALM assembly work properly.
                                  1-80  " Note that a macro invocation line terminated by a comma will cause that
                                  1-81  " statement to be continued on the next line.
                                  1-82  
                                  1-83  macro	ec
                              1   1-84  	use	codes
                              2   1-85  
                              3   1-86  	maclist	on,save
                              4   1-87  &(1	segdef  &i
                              5   1-88  &)	maclist	restore
                              6   1-89  &(1&i:
                              7   1-90  &)	maclist	object,save
                              8   1-91  	zero	.segno,&U
                              9   1-92  	maclist	restore
                             10   1-93  	use	messages
                             11   1-94  &^=&l2,0&[	shortname    &2
                             12   1-95  &;	shortname    &1
                             13   1-96  &]
                             14   1-97  &U:
                             15   1-98  	maclist	on,save
                             16   1-99  	acc  "&3"
                             17  1-100  
                             18  1-101  	maclist	restore
                             19  1-102  	&end
                                 1-103  
                                 1-104  macro	shortname
                              1  1-105  	maclist	on,save
                              2  1-106  	aci  "&1",8
                              3  1-107  	maclist	restore
                              4  1-108  	&end
                                 1-109  
                                 1-110  
                                 1-111  
                                 1-112  " A typical error table source program might have the following format:
                                 1-113  "
                                 1-114  "	include	et_macros
                                 1-115  "
                                 1-116  "	et	name_of_error_table
                                 1-117  "
                                 1-118  "	ec	error_code_1,ecode1,(This is error code 1.)
                                 1-119  "
                                 1-120  "	ec	error_code_2,ecode2,(This is error code 2.)
                                 1-121  "
                                 1-122  "	:	     :	      :		:
                                 1-123  "
                                 1-124  "	ec	error_code_n,ecoden,(This is the nth error code.)
                                 1-125  "
                                 1-126  "	end
                                 1-127  "
                                 1-128  
                                 1-129  " End of include file ...... et_macros.incl.alm
                                 1-130  
                                    10  	et	amu_et_
                                        
    000000                              	name	amu_et_
                                        
                                        
                                        
                                        	include	stack_header
                                   2-1  "	BEGIN INCLUDE FILE ... stack_header.incl.alm  3/72  Bill Silver
                                   2-2  "
                                   2-3  "	modified 7/76 by M. Weaver for *system links and more system use of areas
                                   2-4  "	modified 3/77 by M. Weaver  to add rnt_ptr
                                   2-5  "	modified 7/77 by S. Webber to add run_unit_depth and assign_linkage_ptr
                                   2-6  "	modified 6/83 by J. Ives to add trace_frames and in_trace.
                                   2-7  
                                   2-8  " HISTORY COMMENTS:
                                   2-9  "  1) change(86-06-24,DGHowe), approve(86-06-24,MCR7396),
                                  2-10  "     audit(86-08-05,Schroth), install(86-11-03,MR12.0-1206):
                                  2-11  "     added the heap_header_ptr definition
                                  2-12  "  2) change(86-08-12,Kissel), approve(86-08-12,MCR7473),
                                  2-13  "     audit(86-10-10,Fawcett), install(86-11-03,MR12.0-1206):
                                  2-14  "     Modified to support control point management.  These changes were
                                  2-15  "     actually made in February 1985 by G. Palter.
                                  2-16  "  3) change(86-10-22,Fawcett), approve(86-10-22,MCR7473),
                                  2-17  "     audit(86-10-22,Farley), install(86-11-03,MR12.0-1206):
                                  2-18  "     Remove the old_lot pointer and replace it with cpm_data_ptr. Use the 18
                                  2-19  "     bit pad after cur_lot_size for the cpm_enabled. This was done to save
                                  2-20  "     some space int the stack header and change the cpd_ptr unal to
                                  2-21  "     cpm_data_ptr (ITS pair).
                                  2-22  "                                                      END HISTORY COMMENTS
                                  2-23  
                        000004    2-24  	equ	stack_header.cpm_data_ptr,4		ptr to control point for this stack
                        000006    2-25  	equ	stack_header.combined_stat_ptr,6	ptr to separate static area
                                  2-26  
                        000010    2-27  	equ	stack_header.clr_ptr,8		ptr to area containing linkage sections
                        000012    2-28  	equ	stack_header.max_lot_size,10		number of words allowed in lot (DU)
                        000012    2-29  	equ	stack_header.main_proc_invoked,10	nonzero if main proc was invoked in run unit (DL)
                        000012    2-30  	equ	stack_header.run_unit_depth,10	number of active run units stacked (DL)
                        000013    2-31  	equ	stack_header.cur_lot_size,11		DU number of words (entries) in lot
                        000013    2-32            equ	stack_header.cpm_enabled,11		DL  non-zero if control point management is enabled
                        000014    2-33  	equ	stack_header.system_free_ptr,12	ptr to system storage area
                        000016    2-34  	equ	stack_header.user_free_ptr,14		ptr to user storage area
                                  2-35  
                        000020    2-36  	equ	stack_header.parent_ptr,16		ptr to parent stack or null
                        000022    2-37  	equ	stack_header.stack_begin_ptr,18	ptr to first stack frame
                        000024    2-38  	equ	stack_header.stack_end_ptr,20		ptr to next useable stack frame
                        000026    2-39  	equ	stack_header.lot_ptr,22		ptr to the lot for the current ring
                                  2-40  
                        000030    2-41  	equ	stack_header.signal_ptr,24		ptr to signal proc for current ring
                        000032    2-42  	equ	stack_header.bar_mode_sp,26		value of sp before entering bar mode
                        000034    2-43  	equ	stack_header.pl1_operators_ptr,28	ptr: pl1_operators_$operator_table
                        000036    2-44  	equ	stack_header.call_op_ptr,30		ptr to standard call operator
                                  2-45  
                        000040    2-46  	equ	stack_header.push_op_ptr,32		ptr to standard push operator
                        000042    2-47  	equ	stack_header.return_op_ptr,34		ptr to standard return operator
                        000044    2-48  	equ	stack_header.ret_no_pop_op_ptr,36	ptr: stand. return/ no pop operator
                        000046    2-49  	equ	stack_header.entry_op_ptr,38		ptr to standard entry operator
                                  2-50  
                        000050    2-51  	equ	stack_header.trans_op_tv_ptr,40	ptr to table of translator operator ptrs
                        000052    2-52  	equ	stack_header.isot_ptr,42		pointer to ISOT
                        000054    2-53  	equ	stack_header.sct_ptr,44		pointer to System Condition Table
                        000056    2-54  	equ	stack_header.unwinder_ptr,46		pointer to unwinder for current ring
                                  2-55  
                        000060    2-56  	equ	stack_header.sys_link_info_ptr,48	ptr to *system link name table
                        000062    2-57  	equ	stack_header.rnt_ptr,50		ptr to reference name table
                        000064    2-58  	equ	stack_header.ect_ptr,52		ptr to event channel table
                        000066    2-59  	equ	stack_header.assign_linkage_ptr,54	ptr to area for hcs_$assign_linkage calls
                        000070    2-60  	equ	stack_header.heap_header_ptr,56	ptr to heap header.
                        000072    2-61  	equ	stack_header.trace_frames,58		stack of trace_catch_ frames
                        000073    2-62  	equ	stach_header.trace_top_ptr,59		trace pointer
                        000074    2-63  	equ	stack_header.in_trace,60		trace antirecurse bit
                        000100    2-64  	equ	stack_header_end,64			length of stack header
                                  2-65  
                                  2-66  
                                  2-67  
                                  2-68  
                        000000    2-69  	equ	trace_frames.count,0		number of trace frames on stack
                        000001    2-70  	equ	trace_frames.top_ptr,1		packed pointer to top one
                                  2-71  
                                  2-72  "	The  following constant is an offset within the  pl1  operators table.
                                  2-73  "	It  references a  transfer vector table.
                                  2-74  
                        000551    2-75  	bool	tv_offset,551
                                  2-76  
                                  2-77  
                                  2-78  "	The  following constants are offsets within this transfer vector table.
                                  2-79  
                        001170    2-80  	equ	call_offset,tv_offset+271
                        001171    2-81  	equ	push_offset,tv_offset+272
                        001172    2-82  	equ	return_offset,tv_offset+273
                        001173    2-83  	equ	return_no_pop_offset,tv_offset+274
                        001174    2-84  	equ	entry_offset,tv_offset+275
                                  2-85  
                                  2-86  
                                  2-87  " 	END INCLUDE FILE stack_header.incl.alm
                                        
                                        
                                        
                                        	use	codes
    000010                              .code_start:
                                        
                                        	use	past_codes
    000101                              .code_end:
                                        
                                        	join	/link/codes,past_codes
                                        
                                        	use	messages
                                        
    000000                              .trapproc:
    000000  aa   000000 2130 04         	epaq	0,ic
    000001  aa   000000 6200 01         	eax0	0,au
    000002  aa  6 00000 3731 00         	epbpsb	sp|0
    000003  aa  7 00026 7641 61         	lprplp	sb|stack_header.lot_ptr,*au
    000004  8a   000010 6210 00         	eax1	.code_start         
    000005  aa  4 00000 7401 11         .loop:	stx0	lp|0,x1
    000006  aa   000001 6210 11         	eax1	1,x1
    000007  8a   000101 1010 03         	cmpx1	.code_end,du
    000010  aa   777775 6040 04         	tmi	.loop-*,ic
    000011  aa  7 00044 7101 20         	short_return
                                        
    000012                              	firstref	<*text>|.trapproc
                                        
                                        
                                        
                        077777          	bool	.segno,77777
                                        
                                    11  	ec	apte_not_found,anf,(Process with apte offset not found in fdump.)
                        000010          	segdef  apte_not_found
    000010  a0   077777 000014 
    000012  aa  141 156 146 040         	aci  "anf",8
    000013  aa  040 040 040 040
    000014  aa  054 120 162 157         	acc  "Process with apte offset not found in fdump."
    000015  aa  143 145 163 163
    000016  aa  040 167 151 164
    000017  aa  150 040 141 160
    000020  aa  164 145 040 157
    000021  aa  146 146 163 145
    000022  aa  164 040 156 157
    000023  aa  164 040 146 157
    000024  aa  165 156 144 040
    000025  aa  151 156 040 146
    000026  aa  144 165 155 160
    000027  aa  056 000 000 000
                                        
                                    12  	ec	bad_bit_off,bbo,(Pointer has bit offset and should not.)
                        000011          	segdef  bad_bit_off
    000011  a0   077777 000032 
    000030  aa  142 142 157 040         	aci  "bbo",8
    000031  aa  040 040 040 040
    000032  aa  046 120 157 151         	acc  "Pointer has bit offset and should not."
    000033  aa  156 164 145 162
    000034  aa  040 150 141 163
    000035  aa  040 142 151 164
    000036  aa  040 157 146 146
    000037  aa  163 145 164 040
    000040  aa  141 156 144 040
    000041  aa  163 150 157 165
    000042  aa  154 144 040 156
    000043  aa  157 164 056 000
                                        
                                    13  	ec	bad_segno,bad_seg,(Segment number is not in the correct range.)
                        000012          	segdef  bad_segno
    000012  a0   077777 000046 
    000044  aa  142 141 144 137         	aci  "bad_seg",8
    000045  aa  163 145 147 040
    000046  aa  053 123 145 147         	acc  "Segment number is not in the correct range."
    000047  aa  155 145 156 164
    000050  aa  040 156 165 155
    000051  aa  142 145 162 040
    000052  aa  151 163 040 156
    000053  aa  157 164 040 151
    000054  aa  156 040 164 150
    000055  aa  145 040 143 157
    000056  aa  162 162 145 143
    000057  aa  164 040 162 141
    000060  aa  156 147 145 056
                                        
                                    14  	ec	bad_thread_ptr,btp,(A stack thread, next or prev, is in error.)
                        000013          	segdef  bad_thread_ptr
    000013  a0   077777 000063 
    000061  aa  142 164 160 040         	aci  "btp",8
    000062  aa  040 040 040 040
    000063  aa  052 101 040 163         	acc  "A stack thread, next or prev, is in error."
    000064  aa  164 141 143 153
    000065  aa  040 164 150 162
    000066  aa  145 141 144 054
    000067  aa  040 156 145 170
    000070  aa  164 040 157 162
    000071  aa  040 160 162 145
    000072  aa  166 054 040 151
    000073  aa  163 040 151 156
    000074  aa  040 145 162 162
    000075  aa  157 162 056 000
                                        
                                    15  	ec	big_idx,big_idx,(Process_idx is larger than number of processes in fdump.)
                        000014          	segdef  big_idx
    000014  a0   077777 000100 
    000076  aa  142 151 147 137         	aci  "big_idx",8
    000077  aa  151 144 170 040
    000100  aa  070 120 162 157         	acc  "Process_idx is larger than number of processes in fdump."
    000101  aa  143 145 163 163
    000102  aa  137 151 144 170
    000103  aa  040 151 163 040
    000104  aa  154 141 162 147
    000105  aa  145 162 040 164
    000106  aa  150 141 156 040
    000107  aa  156 165 155 142
    000110  aa  145 162 040 157
    000111  aa  146 040 160 162
    000112  aa  157 143 145 163
    000113  aa  163 145 163 040
    000114  aa  151 156 040 146
    000115  aa  144 165 155 160
    000116  aa  056 000 000 000
                                        
                                    16  	ec	dbr_not_found,dnf,(Process with dbr specified not found in fdump.)
                        000015          	segdef  dbr_not_found
    000015  a0   077777 000121 
    000117  aa  144 156 146 040         	aci  "dnf",8
    000120  aa  040 040 040 040
    000121  aa  056 120 162 157         	acc  "Process with dbr specified not found in fdump."
    000122  aa  143 145 163 163
    000123  aa  040 167 151 164
    000124  aa  150 040 144 142
    000125  aa  162 040 163 160
    000126  aa  145 143 151 146
    000127  aa  151 145 144 040
    000130  aa  156 157 164 040
    000131  aa  146 157 165 156
    000132  aa  144 040 151 156
    000133  aa  040 146 144 165
    000134  aa  155 160 056 000
                                        
                                    17  	ec	end_of_seg_in_dump,eosid,(Reference beyond end of segment in dump.)
                        000016          	segdef  end_of_seg_in_dump
    000016  a0   077777 000137 
    000135  aa  145 157 163 151         	aci  "eosid",8
    000136  aa  144 040 040 040
    000137  aa  050 122 145 146         	acc  "Reference beyond end of segment in dump."
    000140  aa  145 162 145 156
    000141  aa  143 145 040 142
    000142  aa  145 171 157 156
    000143  aa  144 040 145 156
    000144  aa  144 040 157 146
    000145  aa  040 163 145 147
    000146  aa  155 145 156 164
    000147  aa  040 151 156 040
    000150  aa  144 165 155 160
    000151  aa  056 000 000 000
                                        
                                    18  	ec	entry_not_found,enf,(Entry not found.)
                        000017          	segdef  entry_not_found
    000017  a0   077777 000154 
    000152  aa  145 156 146 040         	aci  "enf",8
    000153  aa  040 040 040 040
    000154  aa  020 105 156 164         	acc  "Entry not found."
    000155  aa  162 171 040 156
    000156  aa  157 164 040 146
    000157  aa  157 165 156 144
    000160  aa  056 000 000 000
                                        
                                    19  	ec	erf_trans_exists,et_exsts,(ERF is already translated.)
                        000020          	segdef  erf_trans_exists
    000020  a0   077777 000163 
    000161  aa  145 164 137 145         	aci  "et_exsts",8
    000162  aa  170 163 164 163
    000163  aa  032 105 122 106         	acc  "ERF is already translated."
    000164  aa  040 151 163 040
    000165  aa  141 154 162 145
    000166  aa  141 144 171 040
    000167  aa  164 162 141 156
    000170  aa  163 154 141 164
    000171  aa  145 144 056 000
                                        
                                    20  	ec	error_indirect,err_ind,(Indirection must be part of the virtual address.)
                        000021          	segdef  error_indirect
    000021  a0   077777 000174 
    000172  aa  145 162 162 137         	aci  "err_ind",8
    000173  aa  151 156 144 040
    000174  aa  060 111 156 144         	acc  "Indirection must be part of the virtual address."
    000175  aa  151 162 145 143
    000176  aa  164 151 157 156
    000177  aa  040 155 165 163
    000200  aa  164 040 142 145
    000201  aa  040 160 141 162
    000202  aa  164 040 157 146
    000203  aa  040 164 150 145
    000204  aa  040 166 151 162
    000205  aa  164 165 141 154
    000206  aa  040 141 144 144
    000207  aa  162 145 163 163
    000210  aa  056 000 000 000
                                        
                                    21  	ec	free_core,fcore,(Page is in free core.)
                        000022          	segdef  free_core
    000022  a0   077777 000213 
    000211  aa  146 143 157 162         	aci  "fcore",8
    000212  aa  145 040 040 040
    000213  aa  025 120 141 147         	acc  "Page is in free core."
    000214  aa  145 040 151 163
    000215  aa  040 151 156 040
    000216  aa  146 162 145 145
    000217  aa  040 143 157 162
    000220  aa  145 056 000 000
                                        
                                    22  	ec	invalid_dump,invd,(Selected ERF is invalid.)
                        000023          	segdef  invalid_dump
    000023  a0   077777 000223 
    000221  aa  151 156 166 144         	aci  "invd",8
    000222  aa  040 040 040 040
    000223  aa  030 123 145 154         	acc  "Selected ERF is invalid."
    000224  aa  145 143 164 145
    000225  aa  144 040 105 122
    000226  aa  106 040 151 163
    000227  aa  040 151 156 166
    000230  aa  141 154 151 144
    000231  aa  056 000 000 000
                                        
                                    23  	ec	invalid_operator,invo,(Operator for general address is invalid.)
                        000024          	segdef  invalid_operator
    000024  a0   077777 000234 
    000232  aa  151 156 166 157         	aci  "invo",8
    000233  aa  040 040 040 040
    000234  aa  050 117 160 145         	acc  "Operator for general address is invalid."
    000235  aa  162 141 164 157
    000236  aa  162 040 146 157
    000237  aa  162 040 147 145
    000240  aa  156 145 162 141
    000241  aa  154 040 141 144
    000242  aa  144 162 145 163
    000243  aa  163 040 151 163
    000244  aa  040 151 156 166
    000245  aa  141 154 151 144
    000246  aa  056 000 000 000
                                        
                                    24  	ec	invalid_segno,invalseg,(Segment number is invalid.)
                        000025          	segdef  invalid_segno
    000025  a0   077777 000251 
    000247  aa  151 156 166 141         	aci  "invalseg",8
    000250  aa  154 163 145 147
    000251  aa  032 123 145 147         	acc  "Segment number is invalid."
    000252  aa  155 145 156 164
    000253  aa  040 156 165 155
    000254  aa  142 145 162 040
    000255  aa  151 163 040 151
    000256  aa  156 166 141 154
    000257  aa  151 144 056 000
                                        
                                    25  	ec	invalid_seq,invseq,(Virtual address argument list is in error.)
                        000026          	segdef  invalid_seq
    000026  a0   077777 000262 
    000260  aa  151 156 166 163         	aci  "invseq",8
    000261  aa  145 161 040 040
    000262  aa  052 126 151 162         	acc  "Virtual address argument list is in error."
    000263  aa  164 165 141 154
    000264  aa  040 141 144 144
    000265  aa  162 145 163 163
    000266  aa  040 141 162 147
    000267  aa  165 155 145 156
    000270  aa  164 040 154 151
    000271  aa  163 164 040 151
    000272  aa  163 040 151 156
    000273  aa  040 145 162 162
    000274  aa  157 162 056 000
                                        
                                    26  	ec	looping_problem,lp,(Could be in a loop or deadly embrace.)
                        000027          	segdef  looping_problem
    000027  a0   077777 000277 
    000275  aa  154 160 040 040         	aci  "lp",8
    000276  aa  040 040 040 040
    000277  aa  045 103 157 165         	acc  "Could be in a loop or deadly embrace."
    000300  aa  154 144 040 142
    000301  aa  145 040 151 156
    000302  aa  040 141 040 154
    000303  aa  157 157 160 040
    000304  aa  157 162 040 144
    000305  aa  145 141 144 154
    000306  aa  171 040 145 155
    000307  aa  142 162 141 143
    000310  aa  145 056 000 000
                                        
                                    27  	ec	make_uid_hash,uidhash,(Trying to create the segment uid_hash_table.)
                        000030          	segdef  make_uid_hash
    000030  a0   077777 000313 
    000311  aa  165 151 144 150         	aci  "uidhash",8
    000312  aa  141 163 150 040
    000313  aa  054 124 162 171         	acc  "Trying to create the segment uid_hash_table."
    000314  aa  151 156 147 040
    000315  aa  164 157 040 143
    000316  aa  162 145 141 164
    000317  aa  145 040 164 150
    000320  aa  145 040 163 145
    000321  aa  147 155 145 156
    000322  aa  164 040 165 151
    000323  aa  144 137 150 141
    000324  aa  163 150 137 164
    000325  aa  141 142 154 145
    000326  aa  056 000 000 000
                                        
                                    28  	ec	neg_range,nr,(Resulting range is negative.)
                        000031          	segdef  neg_range
    000031  a0   077777 000331 
    000327  aa  156 162 040 040         	aci  "nr",8
    000330  aa  040 040 040 040
    000331  aa  034 122 145 163         	acc  "Resulting range is negative."
    000332  aa  165 154 164 151
    000333  aa  156 147 040 162
    000334  aa  141 156 147 145
    000335  aa  040 151 163 040
    000336  aa  156 145 147 141
    000337  aa  164 151 166 145
    000340  aa  056 000 000 000
                                        
                                    29  	ec	negative_offset,neg_offs,(Resulting offset is negative.)
                        000032          	segdef  negative_offset
    000032  a0   077777 000343 
    000341  aa  156 145 147 137         	aci  "neg_offs",8
    000342  aa  157 146 146 163
    000343  aa  035 122 145 163         	acc  "Resulting offset is negative."
    000344  aa  165 154 164 151
    000345  aa  156 147 040 157
    000346  aa  146 146 163 145
    000347  aa  164 040 151 163
    000350  aa  040 156 145 147
    000351  aa  141 164 151 166
    000352  aa  145 056 000 000
                                        
                                    30  	ec	no_amu_ptr,namup,(Unable to create an amu_ translation.)
                        000033          	segdef  no_amu_ptr
    000033  a0   077777 000355 
    000353  aa  156 141 155 165         	aci  "namup",8
    000354  aa  160 040 040 040
    000355  aa  045 125 156 141         	acc  "Unable to create an amu_ translation."
    000356  aa  142 154 145 040
    000357  aa  164 157 040 143
    000360  aa  162 145 141 164
    000361  aa  145 040 141 156
    000362  aa  040 141 155 165
    000363  aa  137 040 164 162
    000364  aa  141 156 163 154
    000365  aa  141 164 151 157
    000366  aa  156 056 000 000
                                        
                                    31  	ec	no_kst,nokst,(Unable to initiate the kst segment in the pdir.)
                        000034          	segdef  no_kst
    000034  a0   077777 000371 
    000367  aa  156 157 153 163         	aci  "nokst",8
    000370  aa  164 040 040 040
    000371  aa  057 125 156 141         	acc  "Unable to initiate the kst segment in the pdir."
    000372  aa  142 154 145 040
    000373  aa  164 157 040 151
    000374  aa  156 151 164 151
    000375  aa  141 164 145 040
    000376  aa  164 150 145 040
    000377  aa  153 163 164 040
    000400  aa  163 145 147 155
    000401  aa  145 156 164 040
    000402  aa  151 156 040 164
    000403  aa  150 145 040 160
    000404  aa  144 151 162 056
                                        
                                    32  	ec	no_uid_hash,nohash,(Unable to initiate the uid_hash_table segment in the pdir.)
                        000035          	segdef  no_uid_hash
    000035  a0   077777 000407 
    000405  aa  156 157 150 141         	aci  "nohash",8
    000406  aa  163 150 040 040
    000407  aa  072 125 156 141         	acc  "Unable to initiate the uid_hash_table segment in the pdir."
    000410  aa  142 154 145 040
    000411  aa  164 157 040 151
    000412  aa  156 151 164 151
    000413  aa  141 164 145 040
    000414  aa  164 150 145 040
    000415  aa  165 151 144 137
    000416  aa  150 141 163 150
    000417  aa  137 164 141 142
    000420  aa  154 145 040 163
    000421  aa  145 147 155 145
    000422  aa  156 164 040 151
    000423  aa  156 040 164 150
    000424  aa  145 040 160 144
    000425  aa  151 162 056 000
                                        
                                    33  	ec	no_va_specified,nvasp,(No valid virtual address found on request line.)
                        000036          	segdef  no_va_specified
    000036  a0   077777 000430 
    000426  aa  156 166 141 163         	aci  "nvasp",8
    000427  aa  160 040 040 040
    000430  aa  057 116 157 040         	acc  "No valid virtual address found on request line."
    000431  aa  166 141 154 151
    000432  aa  144 040 166 151
    000433  aa  162 164 165 141
    000434  aa  154 040 141 144
    000435  aa  144 162 145 163
    000436  aa  163 040 146 157
    000437  aa  165 156 144 040
    000440  aa  157 156 040 162
    000441  aa  145 161 165 145
    000442  aa  163 164 040 154
    000443  aa  151 156 145 056
                                        
                                    34            ec	no_segname,noseg,(Segment specified by name is not found in the dump.)
                        000037          	segdef  no_segname
    000037  a0   077777 000446 
    000444  aa  156 157 163 145         	aci  "noseg",8
    000445  aa  147 040 040 040
    000446  aa  063 123 145 147         	acc  "Segment specified by name is not found in the dump."
    000447  aa  155 145 156 164
    000450  aa  040 163 160 145
    000451  aa  143 151 146 151
    000452  aa  145 144 040 142
    000453  aa  171 040 156 141
    000454  aa  155 145 040 151
    000455  aa  163 040 156 157
    000456  aa  164 040 146 157
    000457  aa  165 156 144 040
    000460  aa  151 156 040 164
    000461  aa  150 145 040 144
    000462  aa  165 155 160 056
                                        
                                    35  	ec	no_sl1_uid,nosl1uid,(Unable to get the status of '>sl1' to obtain the UID.)
                        000040          	segdef  no_sl1_uid
    000040  a0   077777 000465 
    000463  aa  156 157 163 154         	aci  "nosl1uid",8
    000464  aa  061 165 151 144
    000465  aa  065 125 156 141         	acc  "Unable to get the status of '>sl1' to obtain the UID."
    000466  aa  142 154 145 040
    000467  aa  164 157 040 147
    000470  aa  145 164 040 164
    000471  aa  150 145 040 163
    000472  aa  164 141 164 165
    000473  aa  163 040 157 146
    000474  aa  040 047 076 163
    000475  aa  154 061 047 040
    000476  aa  164 157 040 157
    000477  aa  142 164 141 151
    000500  aa  156 040 164 150
    000501  aa  145 040 125 111
    000502  aa  104 056 000 000
                                        
                                    36            ec	no_sl1_in_kst,nosl1,(No uid found for 'sl1' in the kst. Probable cause: Process is from a previous boot of the system.)
                        000041          	segdef  no_sl1_in_kst
    000041  a0   077777 000505 
    000503  aa  156 157 163 154         	aci  "nosl1",8
    000504  aa  061 040 040 040
    000505  aa  141 116 157 040         	acc  "No uid found for 'sl1' in the kst. Probable cause: Process is from a previous boot of the system."
    000506  aa  165 151 144 040
    000507  aa  146 157 165 156
    000510  aa  144 040 146 157
    000511  aa  162 040 047 163
    000512  aa  154 061 047 040
    000513  aa  151 156 040 164
    000514  aa  150 145 040 153
    000515  aa  163 164 056 040
    000516  aa  120 162 157 142
    000517  aa  141 142 154 145
    000520  aa  040 143 141 165
    000521  aa  163 145 072 040
    000522  aa  120 162 157 143
    000523  aa  145 163 163 040
    000524  aa  151 163 040 146
    000525  aa  162 157 155 040
    000526  aa  141 040 160 162
    000527  aa  145 166 151 157
    000530  aa  165 163 040 142
    000531  aa  157 157 164 040
    000532  aa  157 146 040 164
    000533  aa  150 145 040 163
    000534  aa  171 163 164 145
    000535  aa  155 056 000 000
                                        
                                    37            ec        no_def,nodef,(No definitions_ segment found in the dead process directory.)
                        000042          	segdef  no_def
    000042  a0   077777 000540 
    000536  aa  156 157 144 145         	aci  "nodef",8
    000537  aa  146 040 040 040
    000540  aa  074 116 157 040         	acc  "No definitions_ segment found in the dead process directory."
    000541  aa  144 145 146 151
    000542  aa  156 151 164 151
    000543  aa  157 156 163 137
    000544  aa  040 163 145 147
    000545  aa  155 145 156 164
    000546  aa  040 146 157 165
    000547  aa  156 144 040 151
    000550  aa  156 040 164 150
    000551  aa  145 040 144 145
    000552  aa  141 144 040 160
    000553  aa  162 157 143 145
    000554  aa  163 163 040 144
    000555  aa  151 162 145 143
    000556  aa  164 157 162 171
    000557  aa  056 000 000 000
                                        
                                    38  	ec	no_slt,noslt,(No slt segment found in the dead process directory.)
                        000043          	segdef  no_slt
    000043  a0   077777 000562 
    000560  aa  156 157 163 154         	aci  "noslt",8
    000561  aa  164 040 040 040
    000562  aa  063 116 157 040         	acc  "No slt segment found in the dead process directory."
    000563  aa  163 154 164 040
    000564  aa  163 145 147 155
    000565  aa  145 156 164 040
    000566  aa  146 157 165 156
    000567  aa  144 040 151 156
    000570  aa  040 164 150 145
    000571  aa  040 144 145 141
    000572  aa  144 040 160 162
    000573  aa  157 143 145 163
    000574  aa  163 040 144 151
    000575  aa  162 145 143 164
    000576  aa  157 162 171 056
                                        
                                    39  	ec	no_dseg,nodseg,(No dseg segment found in the dead process directory.)
                        000044          	segdef  no_dseg
    000044  a0   077777 000601 
    000577  aa  156 157 144 163         	aci  "nodseg",8
    000600  aa  145 147 040 040
    000601  aa  064 116 157 040         	acc  "No dseg segment found in the dead process directory."
    000602  aa  144 163 145 147
    000603  aa  040 163 145 147
    000604  aa  155 145 156 164
    000605  aa  040 146 157 165
    000606  aa  156 144 040 151
    000607  aa  156 040 164 150
    000610  aa  145 040 144 145
    000611  aa  141 144 040 160
    000612  aa  162 157 143 145
    000613  aa  163 163 040 144
    000614  aa  151 162 145 143
    000615  aa  164 157 162 171
    000616  aa  056 000 000 000
                                        
                                    40  	ec	no_sltnt,nont,(No name_table segment found in the dead process directory.)
                        000045          	segdef  no_sltnt
    000045  a0   077777 000621 
    000617  aa  156 157 156 164         	aci  "nont",8
    000620  aa  040 040 040 040
    000621  aa  072 116 157 040         	acc  "No name_table segment found in the dead process directory."
    000622  aa  156 141 155 145
    000623  aa  137 164 141 142
    000624  aa  154 145 040 163
    000625  aa  145 147 155 145
    000626  aa  156 164 040 146
    000627  aa  157 165 156 144
    000630  aa  040 151 156 040
    000631  aa  164 150 145 040
    000632  aa  144 145 141 144
    000633  aa  040 160 162 157
    000634  aa  143 145 163 163
    000635  aa  040 144 151 162
    000636  aa  145 143 164 157
    000637  aa  162 171 056 000
                                        
                                    41  	ec	no_translation,no_trans,(Segment is not in the given translation table.)	
                        000046          	segdef  no_translation
    000046  a0   077777 000642 
    000640  aa  156 157 137 164         	aci  "no_trans",8
    000641  aa  162 141 156 163
    000642  aa  056 123 145 147         	acc  "Segment is not in the given translation table."
    000643  aa  155 145 156 164
    000644  aa  040 151 163 040
    000645  aa  156 157 164 040
    000646  aa  151 156 040 164
    000647  aa  150 145 040 147
    000650  aa  151 166 145 156
    000651  aa  040 164 162 141
    000652  aa  156 163 154 141
    000653  aa  164 151 157 156
    000654  aa  040 164 141 142
    000655  aa  154 145 056 000
                                        
                                    42  	ec	no_valid_stacks,no_val_s,(There are no valid frames.)
                        000047          	segdef  no_valid_stacks
    000047  a0   077777 000660 
    000656  aa  156 157 137 166         	aci  "no_val_s",8
    000657  aa  141 154 137 163
    000660  aa  032 124 150 145         	acc  "There are no valid frames."
    000661  aa  162 145 040 141
    000662  aa  162 145 040 156
    000663  aa  157 040 166 141
    000664  aa  154 151 144 040
    000665  aa  146 162 141 155
    000666  aa  145 163 056 000
                                        
                                    43  	ec	non_existant_mem,nem,(Invalid or Non-existent memory address.)
                        000050          	segdef  non_existant_mem
    000050  a0   077777 000671 
    000667  aa  156 145 155 040         	aci  "nem",8
    000670  aa  040 040 040 040
    000671  aa  047 111 156 166         	acc  "Invalid or Non-existent memory address."
    000672  aa  141 154 151 144
    000673  aa  040 157 162 040
    000674  aa  116 157 156 055
    000675  aa  145 170 151 163
    000676  aa  164 145 156 164
    000677  aa  040 155 145 155
    000700  aa  157 162 171 040
    000701  aa  141 144 144 162
    000702  aa  145 163 163 056
                                        
                                    44  	ec	non_its,nits,(Pointer is not an ITS pair.)
                        000051          	segdef  non_its
    000051  a0   077777 000705 
    000703  aa  156 151 164 163         	aci  "nits",8
    000704  aa  040 040 040 040
    000705  aa  033 120 157 151         	acc  "Pointer is not an ITS pair."
    000706  aa  156 164 145 162
    000707  aa  040 151 163 040
    000710  aa  156 157 164 040
    000711  aa  141 156 040 111
    000712  aa  124 123 040 160
    000713  aa  141 151 162 056
                                        
                                    45  	ec	not_fdump,nofdump,(Current amu_info is not an fdump type.)
                        000052          	segdef  not_fdump
    000052  a0   077777 000716 
    000714  aa  156 157 146 144         	aci  "nofdump",8
    000715  aa  165 155 160 040
    000716  aa  046 103 165 162         	acc  "Current amu_info is not an fdump type."
    000717  aa  162 145 156 164
    000720  aa  040 141 155 165
    000721  aa  137 151 156 146
    000722  aa  157 040 151 163
    000723  aa  040 156 157 164
    000724  aa  040 141 156 040
    000725  aa  146 144 165 155
    000726  aa  160 040 164 171
    000727  aa  160 145 056 000
                                        
                                    46  	ec	not_implemented,not_yet,(Function is not yet implemented.)
                        000053          	segdef  not_implemented
    000053  a0   077777 000732 
    000730  aa  156 157 164 137         	aci  "not_yet",8
    000731  aa  171 145 164 040
    000732  aa  040 106 165 156         	acc  "Function is not yet implemented."
    000733  aa  143 164 151 157
    000734  aa  156 040 151 163
    000735  aa  040 156 157 164
    000736  aa  040 171 145 164
    000737  aa  040 151 155 160
    000740  aa  154 145 155 145
    000741  aa  156 164 145 144
    000742  aa  056 000 000 000
                                        
                                    47  	ec	not_stack_seg,nsn,(Segment does not appear to be a stack seg.)
                        000054          	segdef  not_stack_seg
    000054  a0   077777 000745 
    000743  aa  156 163 156 040         	aci  "nsn",8
    000744  aa  040 040 040 040
    000745  aa  052 123 145 147         	acc  "Segment does not appear to be a stack seg."
    000746  aa  155 145 156 164
    000747  aa  040 144 157 145
    000750  aa  163 040 156 157
    000751  aa  164 040 141 160
    000752  aa  160 145 141 162
    000753  aa  040 164 157 040
    000754  aa  142 145 040 141
    000755  aa  040 163 164 141
    000756  aa  143 153 040 163
    000757  aa  145 147 056 000
                                        
                                    48  	ec	not_octal_range,nor,(The specified range must be an octal number.)
                        000055          	segdef  not_octal_range
    000055  a0   077777 000762 
    000760  aa  156 157 162 040         	aci  "nor",8
    000761  aa  040 040 040 040
    000762  aa  054 124 150 145         	acc  "The specified range must be an octal number."
    000763  aa  040 163 160 145
    000764  aa  143 151 146 151
    000765  aa  145 144 040 162
    000766  aa  141 156 147 145
    000767  aa  040 155 165 163
    000770  aa  164 040 142 145
    000771  aa  040 141 156 040
    000772  aa  157 143 164 141
    000773  aa  154 040 156 165
    000774  aa  155 142 145 162
    000775  aa  056 000 000 000
                                        
                                    49  	ec	not_octal_off_mod,nofm,(The offset modifier must be an octal number.)
                        000056          	segdef  not_octal_off_mod
    000056  a0   077777 001000 
    000776  aa  156 157 146 155         	aci  "nofm",8
    000777  aa  040 040 040 040
    001000  aa  054 124 150 145         	acc  "The offset modifier must be an octal number."
    001001  aa  040 157 146 146
    001002  aa  163 145 164 040
    001003  aa  155 157 144 151
    001004  aa  146 151 145 162
    001005  aa  040 155 165 163
    001006  aa  164 040 142 145
    001007  aa  040 141 156 040
    001010  aa  157 143 164 141
    001011  aa  154 040 156 165
    001012  aa  155 142 145 162
    001013  aa  056 000 000 000
                                        
                                    50  	ec	not_octal_offset,nof,(The offset specified must be octal.)
                        000057          	segdef  not_octal_offset
    000057  a0   077777 001016 
    001014  aa  156 157 146 040         	aci  "nof",8
    001015  aa  040 040 040 040
    001016  aa  043 124 150 145         	acc  "The offset specified must be octal."
    001017  aa  040 157 146 146
    001020  aa  163 145 164 040
    001021  aa  163 160 145 143
    001022  aa  151 146 151 145
    001023  aa  144 040 155 165
    001024  aa  163 164 040 142
    001025  aa  145 040 157 143
    001026  aa  164 141 154 056
                                        
                                    51  	ec	not_octal_segno,nos,(The segment number must be octal.)
                        000060          	segdef  not_octal_segno
    000060  a0   077777 001031 
    001027  aa  156 157 163 040         	aci  "nos",8
    001030  aa  040 040 040 040
    001031  aa  041 124 150 145         	acc  "The segment number must be octal."
    001032  aa  040 163 145 147
    001033  aa  155 145 156 164
    001034  aa  040 156 165 155
    001035  aa  142 145 162 040
    001036  aa  155 165 163 164
    001037  aa  040 142 145 040
    001040  aa  157 143 164 141
    001041  aa  154 056 000 000
                                        
                                    52  	ec	not_octal,noct,(Not octal number.)
                        000061          	segdef  not_octal
    000061  a0   077777 001044 
    001042  aa  156 157 143 164         	aci  "noct",8
    001043  aa  040 040 040 040
    001044  aa  021 116 157 164         	acc  "Not octal number."
    001045  aa  040 157 143 164
    001046  aa  141 154 040 156
    001047  aa  165 155 142 145
    001050  aa  162 056 000 000
                                        
                                    53  	ec	not_its_ptr,no_its,(The indirection specified must be an ITS pair.)
                        000062          	segdef  not_its_ptr
    000062  a0   077777 001053 
    001051  aa  156 157 137 151         	aci  "no_its",8
    001052  aa  164 163 040 040
    001053  aa  056 124 150 145         	acc  "The indirection specified must be an ITS pair."
    001054  aa  040 151 156 144
    001055  aa  151 162 145 143
    001056  aa  164 151 157 156
    001057  aa  040 163 160 145
    001060  aa  143 151 146 151
    001061  aa  145 144 040 155
    001062  aa  165 163 164 040
    001063  aa  142 145 040 141
    001064  aa  156 040 111 124
    001065  aa  123 040 160 141
    001066  aa  151 162 056 000
                                        
                                    54  	ec	npdx_dbr,npdx_dbr,(Could not set process index.)
                        000063          	segdef  npdx_dbr
    000063  a0   077777 001071 
    001067  aa  156 160 144 170         	aci  "npdx_dbr",8
    001070  aa  137 144 142 162
    001071  aa  034 103 157 165         	acc  "Could not set process index."
    001072  aa  154 144 040 156
    001073  aa  157 164 040 163
    001074  aa  145 164 040 160
    001075  aa  162 157 143 145
    001076  aa  163 163 040 151
    001077  aa  156 144 145 170
    001100  aa  056 000 000 000
                                        
                                    55  	ec	null_sstp,no_sst,(Could not get pointer to SST.)
                        000064          	segdef  null_sstp
    000064  a0   077777 001103 
    001101  aa  156 157 137 163         	aci  "no_sst",8
    001102  aa  163 164 040 040
    001103  aa  035 103 157 165         	acc  "Could not get pointer to SST."
    001104  aa  154 144 040 156
    001105  aa  157 164 040 147
    001106  aa  145 164 040 160
    001107  aa  157 151 156 164
    001110  aa  145 162 040 164
    001111  aa  157 040 123 123
    001112  aa  124 056 000 000
                                        
                                    56  	ec	null_sstnt,nosstnt,(Cannot get pointer to the SST name table.)
                        000065          	segdef  null_sstnt
    000065  a0   077777 001115 
    001113  aa  156 157 163 163         	aci  "nosstnt",8
    001114  aa  164 156 164 040
    001115  aa  051 103 141 156         	acc  "Cannot get pointer to the SST name table."
    001116  aa  156 157 164 040
    001117  aa  147 145 164 040
    001120  aa  160 157 151 156
    001121  aa  164 145 162 040
    001122  aa  164 157 040 164
    001123  aa  150 145 040 123
    001124  aa  123 124 040 156
    001125  aa  141 155 145 040
    001126  aa  164 141 142 154
    001127  aa  145 056 000 000
                                        
                                    57  	ec	null_sltp,noslt,(Could not get pointer to the slt.)
                        000066          	segdef  null_sltp
    000066  a0   077777 001132 
    001130  aa  156 157 163 154         	aci  "noslt",8
    001131  aa  164 040 040 040
    001132  aa  041 103 157 165         	acc  "Could not get pointer to the slt."
    001133  aa  154 144 040 156
    001134  aa  157 164 040 147
    001135  aa  145 164 040 160
    001136  aa  157 151 156 164
    001137  aa  145 162 040 164
    001140  aa  157 040 164 150
    001141  aa  145 040 163 154
    001142  aa  164 056 000 000
                                        
                                    58  	ec	null_sltnt,nosltnt,(Cannot get pointer to the slt name segment.)
                        000067          	segdef  null_sltnt
    000067  a0   077777 001145 
    001143  aa  156 157 163 154         	aci  "nosltnt",8
    001144  aa  164 156 164 040
    001145  aa  053 103 141 156         	acc  "Cannot get pointer to the slt name segment."
    001146  aa  156 157 164 040
    001147  aa  147 145 164 040
    001150  aa  160 157 151 156
    001151  aa  164 145 162 040
    001152  aa  164 157 040 164
    001153  aa  150 145 040 163
    001154  aa  154 164 040 156
    001155  aa  141 155 145 040
    001156  aa  163 145 147 155
    001157  aa  145 156 164 056
                                        
                                    59  	ec	null_ptr,nptr,(The pointer specified is null.)
                        000070          	segdef  null_ptr
    000070  a0   077777 001162 
    001160  aa  156 160 164 162         	aci  "nptr",8
    001161  aa  040 040 040 040
    001162  aa  036 124 150 145         	acc  "The pointer specified is null."
    001163  aa  040 160 157 151
    001164  aa  156 164 145 162
    001165  aa  040 163 160 145
    001166  aa  143 151 146 151
    001167  aa  145 144 040 151
    001170  aa  163 040 156 165
    001171  aa  154 154 056 000
                                        
                                    60  	ec	proc_not_dumped,p_no_d,(Process was not dumped.)
                        000071          	segdef  proc_not_dumped
    000071  a0   077777 001174 
    001172  aa  160 137 156 157         	aci  "p_no_d",8
    001173  aa  137 144 040 040
    001174  aa  027 120 162 157         	acc  "Process was not dumped."
    001175  aa  143 145 163 163
    001176  aa  040 167 141 163
    001177  aa  040 156 157 164
    001200  aa  040 144 165 155
    001201  aa  160 145 144 056
                                        
                                    61  	ec	range_too_small,rts,(Range too small.)
                        000072          	segdef  range_too_small
    000072  a0   077777 001204 
    001202  aa  162 164 163 040         	aci  "rts",8
    001203  aa  040 040 040 040
    001204  aa  020 122 141 156         	acc  "Range too small."
    001205  aa  147 145 040 164
    001206  aa  157 157 040 163
    001207  aa  155 141 154 154
    001210  aa  056 000 000 000
                                        
                                    62  	ec	stop_trans,s_trans,(Unable to continue translation.)
                        000073          	segdef  stop_trans
    000073  a0   077777 001213 
    001211  aa  163 137 164 162         	aci  "s_trans",8
    001212  aa  141 156 163 040
    001213  aa  037 125 156 141         	acc  "Unable to continue translation."
    001214  aa  142 154 145 040
    001215  aa  164 157 040 143
    001216  aa  157 156 164 151
    001217  aa  156 165 145 040
    001220  aa  164 162 141 156
    001221  aa  163 154 141 164
    001222  aa  151 157 156 056
                                        
                                    63  	ec	trans_exists,tr_exsts,(Segment translation already exists.)
                        000074          	segdef  trans_exists
    000074  a0   077777 001225 
    001223  aa  164 162 137 145         	aci  "tr_exsts",8
    001224  aa  170 163 164 163
    001225  aa  043 123 145 147         	acc  "Segment translation already exists."
    001226  aa  155 145 156 164
    001227  aa  040 164 162 141
    001230  aa  156 163 154 141
    001231  aa  164 151 157 156
    001232  aa  040 141 154 162
    001233  aa  145 141 144 171
    001234  aa  040 145 170 151
    001235  aa  163 164 163 056
                                        
                                    64  	ec	two_level_indirect,tli,(Operand has two levels of indirection.)
                        000075          	segdef  two_level_indirect
    000075  a0   077777 001240 
    001236  aa  164 154 151 040         	aci  "tli",8
    001237  aa  040 040 040 040
    001240  aa  046 117 160 145         	acc  "Operand has two levels of indirection."
    001241  aa  162 141 156 144
    001242  aa  040 150 141 163
    001243  aa  040 164 167 157
    001244  aa  040 154 145 166
    001245  aa  145 154 163 040
    001246  aa  157 146 040 151
    001247  aa  156 144 151 162
    001250  aa  145 143 164 151
    001251  aa  157 156 056 000
                                        
                                    65  	ec 	seg_not_dumped,segnot_d,(Segment is not in the fdump.)
                        000076          	segdef  seg_not_dumped
    000076  a0   077777 001254 
    001252  aa  163 145 147 156         	aci  "segnot_d",8
    001253  aa  157 164 137 144
    001254  aa  034 123 145 147         	acc  "Segment is not in the fdump."
    001255  aa  155 145 156 164
    001256  aa  040 151 163 040
    001257  aa  156 157 164 040
    001260  aa  151 156 040 164
    001261  aa  150 145 040 146
    001262  aa  144 165 155 160
    001263  aa  056 000 000 000
                                        
                                    66  	ec 	specified_modifier,spmod,(The offset modifier is specified more than once.)
                        000077          	segdef  specified_modifier
    000077  a0   077777 001266 
    001264  aa  163 160 155 157         	aci  "spmod",8
    001265  aa  144 040 040 040
    001266  aa  060 124 150 145         	acc  "The offset modifier is specified more than once."
    001267  aa  040 157 146 146
    001270  aa  163 145 164 040
    001271  aa  155 157 144 151
    001272  aa  146 151 145 162
    001273  aa  040 151 163 040
    001274  aa  163 160 145 143
    001275  aa  151 146 151 145
    001276  aa  144 040 155 157
    001277  aa  162 145 040 164
    001300  aa  150 141 156 040
    001301  aa  157 156 143 145
    001302  aa  056 000 000 000
                                        
                                    67  	ec	modifier_before_range,mbr,(An offset modifier must be specified before a range.)
                        000100          	segdef  modifier_before_range
    000100  a0   077777 001305 
    001303  aa  155 142 162 040         	aci  "mbr",8
    001304  aa  040 040 040 040
    001305  aa  064 101 156 040         	acc  "An offset modifier must be specified before a range."
    001306  aa  157 146 146 163
    001307  aa  145 164 040 155
    001310  aa  157 144 151 146
    001311  aa  151 145 162 040
    001312  aa  155 165 163 164
    001313  aa  040 142 145 040
    001314  aa  163 160 145 143
    001315  aa  151 146 151 145
    001316  aa  144 040 142 145
    001317  aa  146 157 162 145
    001320  aa  040 141 040 162
    001321  aa  141 156 147 145
    001322  aa  056 000 000 000
                                        
                                    68  
                                    69  	end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    001324  5a   000003 000000 
    001325  5a   000610 600000 
    001326  aa   000000 000000 
    001327  55   000010 000002 
    001330  5a   000002 400003 
    001331  55   000006 000010 
    001332  aa  007 141 155 165
    001333  aa  137 145 164 137
    001334  55   000021 000003 
    001335  2a   000100 400001 
    001336  55   000013 000003 
    001337  aa  025 155 157 144         modifier_before_range
    001340  aa  151 146 151 145
    001341  aa  162 137 142 145
    001342  aa  146 157 162 145
    001343  aa  137 162 141 156
    001344  aa  147 145 000 000
    001345  55   000031 000010 
    001346  2a   000077 400001 
    001347  55   000024 000003 
    001350  aa  022 163 160 145         specified_modifier
    001351  aa  143 151 146 151
    001352  aa  145 144 137 155
    001353  aa  157 144 151 146
    001354  aa  151 145 162 000
    001355  55   000040 000021 
    001356  2a   000076 400001 
    001357  55   000034 000003 
    001360  aa  016 163 145 147         seg_not_dumped
    001361  aa  137 156 157 164
    001362  aa  137 144 165 155
    001363  aa  160 145 144 000
    001364  55   000050 000031 
    001365  2a   000075 400001 
    001366  55   000043 000003 
    001367  aa  022 164 167 157         two_level_indirect
    001370  aa  137 154 145 166
    001371  aa  145 154 137 151
    001372  aa  156 144 151 162
    001373  aa  145 143 164 000
    001374  55   000057 000040 
    001375  2a   000074 400001 
    001376  55   000053 000003 
    001377  aa  014 164 162 141         trans_exists
    001400  aa  156 163 137 145
    001401  aa  170 151 163 164
    001402  aa  163 000 000 000
    001403  55   000065 000050 
    001404  2a   000073 400001 
    001405  55   000062 000003 
    001406  aa  012 163 164 157         stop_trans
    001407  aa  160 137 164 162
    001410  aa  141 156 163 000
    001411  55   000074 000057 
    001412  2a   000072 400001 
    001413  55   000070 000003 
    001414  aa  017 162 141 156         range_too_small
    001415  aa  147 145 137 164
    001416  aa  157 157 137 163
    001417  aa  155 141 154 154
    001420  55   000103 000065 
    001421  2a   000071 400001 
    001422  55   000077 000003 
    001423  aa  017 160 162 157         proc_not_dumped
    001424  aa  143 137 156 157
    001425  aa  164 137 144 165
    001426  aa  155 160 145 144
    001427  55   000111 000074 
    001430  2a   000070 400001 
    001431  55   000106 000003 
    001432  aa  010 156 165 154         null_ptr
    001433  aa  154 137 160 164
    001434  aa  162 000 000 000
    001435  55   000117 000103 
    001436  2a   000067 400001 
    001437  55   000114 000003 
    001440  aa  012 156 165 154         null_sltnt
    001441  aa  154 137 163 154
    001442  aa  164 156 164 000
    001443  55   000125 000111 
    001444  2a   000066 400001 
    001445  55   000122 000003 
    001446  aa  011 156 165 154         null_sltp
    001447  aa  154 137 163 154
    001450  aa  164 160 000 000
    001451  55   000133 000117 
    001452  2a   000065 400001 
    001453  55   000130 000003 
    001454  aa  012 156 165 154         null_sstnt
    001455  aa  154 137 163 163
    001456  aa  164 156 164 000
    001457  55   000141 000125 
    001460  2a   000064 400001 
    001461  55   000136 000003 
    001462  aa  011 156 165 154         null_sstp
    001463  aa  154 137 163 163
    001464  aa  164 160 000 000
    001465  55   000147 000133 
    001466  2a   000063 400001 
    001467  55   000144 000003 
    001470  aa  010 156 160 144         npdx_dbr
    001471  aa  170 137 144 142
    001472  aa  162 000 000 000
    001473  55   000155 000141 
    001474  2a   000062 400001 
    001475  55   000152 000003 
    001476  aa  013 156 157 164         not_its_ptr
    001477  aa  137 151 164 163
    001500  aa  137 160 164 162
    001501  55   000163 000147 
    001502  2a   000061 400001 
    001503  55   000160 000003 
    001504  aa  011 156 157 164         not_octal
    001505  aa  137 157 143 164
    001506  aa  141 154 000 000
    001507  55   000172 000155 
    001510  2a   000060 400001 
    001511  55   000166 000003 
    001512  aa  017 156 157 164         not_octal_segno
    001513  aa  137 157 143 164
    001514  aa  141 154 137 163
    001515  aa  145 147 156 157
    001516  55   000202 000163 
    001517  2a   000057 400001 
    001520  55   000175 000003 
    001521  aa  020 156 157 164         not_octal_offset
    001522  aa  137 157 143 164
    001523  aa  141 154 137 157
    001524  aa  146 146 163 145
    001525  aa  164 000 000 000
    001526  55   000212 000172 
    001527  2a   000056 400001 
    001530  55   000205 000003 
    001531  aa  021 156 157 164         not_octal_off_mod
    001532  aa  137 157 143 164
    001533  aa  141 154 137 157
    001534  aa  146 146 137 155
    001535  aa  157 144 000 000
    001536  55   000221 000202 
    001537  2a   000055 400001 
    001540  55   000215 000003 
    001541  aa  017 156 157 164         not_octal_range
    001542  aa  137 157 143 164
    001543  aa  141 154 137 162
    001544  aa  141 156 147 145
    001545  55   000230 000212 
    001546  2a   000054 400001 
    001547  55   000224 000003 
    001550  aa  015 156 157 164         not_stack_seg
    001551  aa  137 163 164 141
    001552  aa  143 153 137 163
    001553  aa  145 147 000 000
    001554  55   000237 000221 
    001555  2a   000053 400001 
    001556  55   000233 000003 
    001557  aa  017 156 157 164         not_implemented
    001560  aa  137 151 155 160
    001561  aa  154 145 155 145
    001562  aa  156 164 145 144
    001563  55   000245 000230 
    001564  2a   000052 400001 
    001565  55   000242 000003 
    001566  aa  011 156 157 164         not_fdump
    001567  aa  137 146 144 165
    001570  aa  155 160 000 000
    001571  55   000252 000237 
    001572  2a   000051 400001 
    001573  55   000250 000003 
    001574  aa  007 156 157 156         non_its
    001575  aa  137 151 164 163
    001576  55   000262 000245 
    001577  2a   000050 400001 
    001600  55   000255 000003 
    001601  aa  020 156 157 156         non_existant_mem
    001602  aa  137 145 170 151
    001603  aa  163 164 141 156
    001604  aa  164 137 155 145
    001605  aa  155 000 000 000
    001606  55   000271 000252 
    001607  2a   000047 400001 
    001610  55   000265 000003 
    001611  aa  017 156 157 137         no_valid_stacks
    001612  aa  166 141 154 151
    001613  aa  144 137 163 164
    001614  aa  141 143 153 163
    001615  55   000300 000262 
    001616  2a   000046 400001 
    001617  55   000274 000003 
    001620  aa  016 156 157 137         no_translation
    001621  aa  164 162 141 156
    001622  aa  163 154 141 164
    001623  aa  151 157 156 000
    001624  55   000306 000271 
    001625  2a   000045 400001 
    001626  55   000303 000003 
    001627  aa  010 156 157 137         no_sltnt
    001630  aa  163 154 164 156
    001631  aa  164 000 000 000
    001632  55   000313 000300 
    001633  2a   000044 400001 
    001634  55   000311 000003 
    001635  aa  007 156 157 137         no_dseg
    001636  aa  144 163 145 147
    001637  55   000320 000306 
    001640  2a   000043 400001 
    001641  55   000316 000003 
    001642  aa  006 156 157 137         no_slt
    001643  aa  163 154 164 000
    001644  55   000325 000313 
    001645  2a   000042 400001 
    001646  55   000323 000003 
    001647  aa  006 156 157 137         no_def
    001650  aa  144 145 146 000
    001651  55   000334 000320 
    001652  2a   000041 400001 
    001653  55   000330 000003 
    001654  aa  015 156 157 137         no_sl1_in_kst
    001655  aa  163 154 061 137
    001656  aa  151 156 137 153
    001657  aa  163 164 000 000
    001660  55   000342 000325 
    001661  2a   000040 400001 
    001662  55   000337 000003 
    001663  aa  012 156 157 137         no_sl1_uid
    001664  aa  163 154 061 137
    001665  aa  165 151 144 000
    001666  55   000350 000334 
    001667  2a   000037 400001 
    001670  55   000345 000003 
    001671  aa  012 156 157 137         no_segname
    001672  aa  163 145 147 156
    001673  aa  141 155 145 000
    001674  55   000357 000342 
    001675  2a   000036 400001 
    001676  55   000353 000003 
    001677  aa  017 156 157 137         no_va_specified
    001700  aa  166 141 137 163
    001701  aa  160 145 143 151
    001702  aa  146 151 145 144
    001703  55   000365 000350 
    001704  2a   000035 400001 
    001705  55   000362 000003 
    001706  aa  013 156 157 137         no_uid_hash
    001707  aa  165 151 144 137
    001710  aa  150 141 163 150
    001711  55   000372 000357 
    001712  2a   000034 400001 
    001713  55   000370 000003 
    001714  aa  006 156 157 137         no_kst
    001715  aa  153 163 164 000
    001716  55   000400 000365 
    001717  2a   000033 400001 
    001720  55   000375 000003 
    001721  aa  012 156 157 137         no_amu_ptr
    001722  aa  141 155 165 137
    001723  aa  160 164 162 000
    001724  55   000407 000372 
    001725  2a   000032 400001 
    001726  55   000403 000003 
    001727  aa  017 156 145 147         negative_offset
    001730  aa  141 164 151 166
    001731  aa  145 137 157 146
    001732  aa  146 163 145 164
    001733  55   000415 000400 
    001734  2a   000031 400001 
    001735  55   000412 000003 
    001736  aa  011 156 145 147         neg_range
    001737  aa  137 162 141 156
    001740  aa  147 145 000 000
    001741  55   000424 000407 
    001742  2a   000030 400001 
    001743  55   000420 000003 
    001744  aa  015 155 141 153         make_uid_hash
    001745  aa  145 137 165 151
    001746  aa  144 137 150 141
    001747  aa  163 150 000 000
    001750  55   000433 000415 
    001751  2a   000027 400001 
    001752  55   000427 000003 
    001753  aa  017 154 157 157         looping_problem
    001754  aa  160 151 156 147
    001755  aa  137 160 162 157
    001756  aa  142 154 145 155
    001757  55   000441 000424 
    001760  2a   000026 400001 
    001761  55   000436 000003 
    001762  aa  013 151 156 166         invalid_seq
    001763  aa  141 154 151 144
    001764  aa  137 163 145 161
    001765  55   000450 000433 
    001766  2a   000025 400001 
    001767  55   000444 000003 
    001770  aa  015 151 156 166         invalid_segno
    001771  aa  141 154 151 144
    001772  aa  137 163 145 147
    001773  aa  156 157 000 000
    001774  55   000460 000441 
    001775  2a   000024 400001 
    001776  55   000453 000003 
    001777  aa  020 151 156 166         invalid_operator
    002000  aa  141 154 151 144
    002001  aa  137 157 160 145
    002002  aa  162 141 164 157
    002003  aa  162 000 000 000
    002004  55   000467 000450 
    002005  2a   000023 400001 
    002006  55   000463 000003 
    002007  aa  014 151 156 166         invalid_dump
    002010  aa  141 154 151 144
    002011  aa  137 144 165 155
    002012  aa  160 000 000 000
    002013  55   000475 000460 
    002014  2a   000022 400001 
    002015  55   000472 000003 
    002016  aa  011 146 162 145         free_core
    002017  aa  145 137 143 157
    002020  aa  162 145 000 000
    002021  55   000504 000467 
    002022  2a   000021 400001 
    002023  55   000500 000003 
    002024  aa  016 145 162 162         error_indirect
    002025  aa  157 162 137 151
    002026  aa  156 144 151 162
    002027  aa  145 143 164 000
    002030  55   000514 000475 
    002031  2a   000020 400001 
    002032  55   000507 000003 
    002033  aa  020 145 162 146         erf_trans_exists
    002034  aa  137 164 162 141
    002035  aa  156 163 137 145
    002036  aa  170 151 163 164
    002037  aa  163 000 000 000
    002040  55   000523 000504 
    002041  2a   000017 400001 
    002042  55   000517 000003 
    002043  aa  017 145 156 164         entry_not_found
    002044  aa  162 171 137 156
    002045  aa  157 164 137 146
    002046  aa  157 165 156 144
    002047  55   000533 000514 
    002050  2a   000016 400001 
    002051  55   000526 000003 
    002052  aa  022 145 156 144         end_of_seg_in_dump
    002053  aa  137 157 146 137
    002054  aa  163 145 147 137
    002055  aa  151 156 137 144
    002056  aa  165 155 160 000
    002057  55   000542 000523 
    002060  2a   000015 400001 
    002061  55   000536 000003 
    002062  aa  015 144 142 162         dbr_not_found
    002063  aa  137 156 157 164
    002064  aa  137 146 157 165
    002065  aa  156 144 000 000
    002066  55   000547 000533 
    002067  2a   000014 400001 
    002070  55   000545 000003 
    002071  aa  007 142 151 147         big_idx
    002072  aa  137 151 144 170
    002073  55   000556 000542 
    002074  2a   000013 400001 
    002075  55   000552 000003 
    002076  aa  016 142 141 144         bad_thread_ptr
    002077  aa  137 164 150 162
    002100  aa  145 141 144 137
    002101  aa  160 164 162 000
    002102  55   000564 000547 
    002103  2a   000012 400001 
    002104  55   000561 000003 
    002105  aa  011 142 141 144         bad_segno
    002106  aa  137 163 145 147
    002107  aa  156 157 000 000
    002110  55   000572 000556 
    002111  2a   000011 400001 
    002112  55   000567 000003 
    002113  aa  013 142 141 144         bad_bit_off
    002114  aa  137 142 151 164
    002115  aa  137 157 146 146
    002116  55   000601 000564 
    002117  2a   000010 400001 
    002120  55   000575 000003 
    002121  aa  016 141 160 164         apte_not_found
    002122  aa  145 137 156 157
    002123  aa  164 137 146 157
    002124  aa  165 156 144 000
    002125  55   000002 000572 
    002126  6a   000000 400002 
    002127  55   000604 000003 
    002130  aa  014 163 171 155         symbol_table
    002131  aa  142 157 154 137
    002132  aa  164 141 142 154
    002133  aa  145 000 000 000

DEFINITIONS HASH TABLE

    002134  aa   000000 000131 
    002135  5a   000010 000000 
    002136  5a   000320 000000 
    002137  5a   000147 000000 
    002140  5a   000365 000000 
    002141  5a   000564 000000 
    002142  5a   000050 000000 
    002143  5a   000601 000000 
    002144  aa   000000 000000 
    002145  5a   000111 000000 
    002146  5a   000125 000000 
    002147  5a   000433 000000 
    002150  5a   000547 000000 
    002151  5a   000040 000000 
    002152  aa   000000 000000 
    002153  5a   000572 000000 
    002154  aa   000000 000000 
    002155  5a   000202 000000 
    002156  aa   000000 000000 
    002157  aa   000000 000000 
    002160  aa   000000 000000 
    002161  5a   000262 000000 
    002162  5a   000350 000000 
    002163  aa   000000 000000 
    002164  aa   000000 000000 
    002165  aa   000000 000000 
    002166  aa   000000 000000 
    002167  aa   000000 000000 
    002170  5a   000155 000000 
    002171  5a   000021 000000 
    002172  5a   000237 000000 
    002173  5a   000556 000000 
    002174  5a   000306 000000 
    002175  aa   000000 000000 
    002176  5a   000103 000000 
    002177  aa   000000 000000 
    002200  5a   000475 000000 
    002201  aa   000000 000000 
    002202  aa   000000 000000 
    002203  5a   000334 000000 
    002204  5a   000342 000000 
    002205  5a   000372 000000 
    002206  5a   000163 000000 
    002207  5a   000212 000000 
    002210  5a   000230 000000 
    002211  5a   000460 000000 
    002212  5a   000325 000000 
    002213  5a   000141 000000 
    002214  5a   000245 000000 
    002215  5a   000074 000000 
    002216  5a   000424 000000 
    002217  5a   000057 000000 
    002220  5a   000533 000000 
    002221  aa   000000 000000 
    002222  aa   000000 000000 
    002223  5a   000065 000000 
    002224  5a   000031 000000 
    002225  5a   000407 000000 
    002226  aa   000000 000000 
    002227  aa   000000 000000 
    002230  5a   000415 000000 
    002231  5a   000523 000000 
    002232  5a   000542 000000 
    002233  aa   000000 000000 
    002234  5a   000300 000000 
    002235  aa   000000 000000 
    002236  5a   000117 000000 
    002237  5a   000133 000000 
    002240  5a   000221 000000 
    002241  5a   000252 000000 
    002242  5a   000514 000000 
    002243  5a   000357 000000 
    002244  5a   000400 000000 
    002245  aa   000000 000000 
    002246  5a   000172 000000 
    002247  5a   000441 000000 
    002250  aa   000000 000000 
    002251  aa   000000 000000 
    002252  5a   000271 000000 
    002253  aa   000000 000000 
    002254  5a   000467 000000 
    002255  5a   000450 000000 
    002256  aa   000000 000000 
    002257  aa   000000 000000 
    002260  aa   000000 000000 
    002261  aa   000000 000000 
    002262  aa   000000 000000 
    002263  aa   000000 000000 
    002264  5a   000504 000000 
    002265  5a   000313 000000 

NO EXTERNAL NAMES

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    002266  aa   000001 000000 
    002267  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    002270  50   000742 000000 
    002271  aa   000000 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  02   001324 000104 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000102 000107 
    000007  a2   000000 000072 
    000102  9a   777676 0000 46         *text|       
    000103  5a   000744 0000 00

FIRST REFERENCE TRAP LIST
     
    000104  aa   000000 000001 
    000105  aa   000000 000001 
    000106  2a   000102 000000 
    000107  aa   000000 000000 
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000004 
    000004  aa   000000 114732 
    000005  aa   732732 062314 
    000006  aa   000000 114775 
    000007  aa   667151 311465 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000244 
    000020  aa   000000 000143 
    000021  aa   000000 000216 
    000022  aa   000234 000143 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   040066 056067 
    000030  aa   040040 117143 
    000031  aa   164157 142145 
    000032  aa   162040 061071 
    000033  aa   070066 040040 
    000034  aa   107112 157150 
    000035  aa   156163 157156 
    000036  aa   056123 171163 
    000037  aa   115141 151156 
    000040  aa   164056 141040 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   154151 163164 
    000045  aa   040040 040040 
    000046  aa   040040 040040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040040 040040 
    000057  aa   040040 040040 
    000060  aa   040040 040040 
    000061  aa   040040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000003 
    000066  aa   000102 000054 
    000067  aa   147740 446343 
    000070  aa   000000 114774 
    000071  aa   461313 200000 
    000072  aa   000115 000037 
    000073  aa   120665 316464 
    000074  aa   000000 112067 
    000075  aa   253504 600000 
    000076  aa   000125 000066 
    000077  aa   147714 750316 
    000100  aa   000000 114774 
    000101  aa   453561 000000 
    000102  aa   076163 160145          >special_ldd>install>MR12.0-1206>amu_et_.alm
    000103  aa   143151 141154 
    000104  aa   137154 144144 
    000105  aa   076151 156163 
    000106  aa   164141 154154 
    000107  aa   076115 122061 
    000110  aa   062056 060055 
    000111  aa   061062 060066 
    000112  aa   076141 155165 
    000113  aa   137145 164137 
    000114  aa   056141 154155 
    000115  aa   076154 144144          >ldd>include>et_macros.incl.alm
    000116  aa   076151 156143 
    000117  aa   154165 144145 
    000120  aa   076145 164137 
    000121  aa   155141 143162 
    000122  aa   157163 056151 
    000123  aa   156143 154056 
    000124  aa   141154 155040 
    000125  aa   076163 160145          >special_ldd>install>MR12.0-1206>stack_header.incl.alm
    000126  aa   143151 141154 
    000127  aa   137154 144144 
    000130  aa   076151 156163 
    000131  aa   164141 154154 
    000132  aa   076115 122061 
    000133  aa   062056 060055 
    000134  aa   061062 060066 
    000135  aa   076163 164141 
    000136  aa   143153 137150 
    000137  aa   145141 144145 
    000140  aa   162056 151156 
    000141  aa   143154 056141 
    000142  aa   154155 040040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

                *text                    amu_et_:       10.
          14    .._00000                 amu_et_:       11.
          32    .._00001                 amu_et_:       12.
          46    .._00002                 amu_et_:       13.
          63    .._00003                 amu_et_:       14.
         100    .._00004                 amu_et_:       15.
         121    .._00005                 amu_et_:       16.
         137    .._00006                 amu_et_:       17.
         154    .._00007                 amu_et_:       18.
         163    .._00010                 amu_et_:       19.
         174    .._00011                 amu_et_:       20.
         213    .._00012                 amu_et_:       21.
         223    .._00013                 amu_et_:       22.
         234    .._00014                 amu_et_:       23.
         251    .._00015                 amu_et_:       24.
         262    .._00016                 amu_et_:       25.
         277    .._00017                 amu_et_:       26.
         313    .._00020                 amu_et_:       27.
         331    .._00021                 amu_et_:       28.
         343    .._00022                 amu_et_:       29.
         355    .._00023                 amu_et_:       30.
         371    .._00024                 amu_et_:       31.
         407    .._00025                 amu_et_:       32.
         430    .._00026                 amu_et_:       33.
         446    .._00027                 amu_et_:       34.
         465    .._00030                 amu_et_:       35.
         505    .._00031                 amu_et_:       36.
         540    .._00032                 amu_et_:       37.
         562    .._00033                 amu_et_:       38.
         601    .._00034                 amu_et_:       39.
         621    .._00035                 amu_et_:       40.
         642    .._00036                 amu_et_:       41.
         660    .._00037                 amu_et_:       42.
         671    .._00040                 amu_et_:       43.
         705    .._00041                 amu_et_:       44.
         716    .._00042                 amu_et_:       45.
         732    .._00043                 amu_et_:       46.
         745    .._00044                 amu_et_:       47.
         762    .._00045                 amu_et_:       48.
        1000    .._00046                 amu_et_:       49.
        1016    .._00047                 amu_et_:       50.
        1031    .._00050                 amu_et_:       51.
        1044    .._00051                 amu_et_:       52.
        1053    .._00052                 amu_et_:       53.
        1071    .._00053                 amu_et_:       54.
        1103    .._00054                 amu_et_:       55.
        1115    .._00055                 amu_et_:       56.
        1132    .._00056                 amu_et_:       57.
        1145    .._00057                 amu_et_:       58.
        1162    .._00060                 amu_et_:       59.
        1174    .._00061                 amu_et_:       60.
        1204    .._00062                 amu_et_:       61.
        1213    .._00063                 amu_et_:       62.
        1225    .._00064                 amu_et_:       63.
        1240    .._00065                 amu_et_:       64.
        1254    .._00066                 amu_et_:       65.
        1266    .._00067                 amu_et_:       66.
        1305    .._00070                 amu_et_:       67.
         101    .code_end                amu_et_:       10.
          10    .code_start              amu_et_:       10.
           5    .loop                    amu_et_:       10.
       77777    .segno                   amu_et_:       10,   11,   12,   13,   14,   15,   16,   17,   18,   19,   20,   21,
                                                        22,   23,   24,   25,   26,   27,   28,   29,   30,   31,   32,   33,
                                                        34,   35,   36,   37,   38,   39,   40,   41,   42,   43,   44,   45,
                                                        46,   47,   48,   49,   50,   51,   52,   53,   54,   55,   56,   57,
                                                        58,   59,   60,   61,   62,   63,   64,   65,   66,   67.
           0    .trapproc                amu_et_:       10.
          10    apte_not_found           amu_et_:       11.
          11    bad_bit_off              amu_et_:       12.
          12    bad_segno                amu_et_:       13.
          13    bad_thread_ptr           amu_et_:       14.
          14    big_idx                  amu_et_:       15.
        1170    call_offset              stack_header:        80.
          10    codes                    amu_et_:       10,   11,   12,   13,   14,   15,   16,   17,   18,   19,   20,   21,
                                                        22,   23,   24,   25,   26,   27,   28,   29,   30,   31,   32,   33,
                                                        34,   35,   36,   37,   38,   39,   40,   41,   42,   43,   44,   45,
                                                        46,   47,   48,   49,   50,   51,   52,   53,   54,   55,   56,   57,
                                                        58,   59,   60,   61,   62,   63,   64,   65,   66,   67.
          15    dbr_not_found            amu_et_:       16.
          16    end_of_seg_in_dump       amu_et_:       17.
          17    entry_not_found          amu_et_:       18.
        1174    entry_offset             stack_header:        84.
          20    erf_trans_exists         amu_et_:       19.
          21    error_indirect           amu_et_:       20.
          22    free_core                amu_et_:       21.
          23    invalid_dump             amu_et_:       22.
          24    invalid_operator         amu_et_:       23.
          25    invalid_segno            amu_et_:       24.
          26    invalid_seq              amu_et_:       25.
          27    looping_problem          amu_et_:       26.
          30    make_uid_hash            amu_et_:       27.
           0    messages                 amu_et_:       10,   11,   12,   13,   14,   15,   16,   17,   18,   19,   20,   21,
                                                        22,   23,   24,   25,   26,   27,   28,   29,   30,   31,   32,   33,
                                                        34,   35,   36,   37,   38,   39,   40,   41,   42,   43,   44,   45,
                                                        46,   47,   48,   49,   50,   51,   52,   53,   54,   55,   56,   57,
                                                        58,   59,   60,   61,   62,   63,   64,   65,   66,   67.
         100    modifier_before_range    amu_et_:       67.
          32    negative_offset          amu_et_:       29.
          31    neg_range                amu_et_:       28.
          50    non_existant_mem         amu_et_:       43.
          51    non_its                  amu_et_:       44.
          52    not_fdump                amu_et_:       45.
          53    not_implemented          amu_et_:       46.
          62    not_its_ptr              amu_et_:       53.
          61    not_octal                amu_et_:       52.
          57    not_octal_offset         amu_et_:       50.
          56    not_octal_off_mod        amu_et_:       49.
          55    not_octal_range          amu_et_:       48.
          60    not_octal_segno          amu_et_:       51.
          54    not_stack_seg            amu_et_:       47.
          33    no_amu_ptr               amu_et_:       30.
          42    no_def                   amu_et_:       37.
          44    no_dseg                  amu_et_:       39.
          34    no_kst                   amu_et_:       31.
          37    no_segname               amu_et_:       34.
          41    no_sl1_in_kst            amu_et_:       36.
          40    no_sl1_uid               amu_et_:       35.
          43    no_slt                   amu_et_:       38.
          45    no_sltnt                 amu_et_:       40.
          46    no_translation           amu_et_:       41.
          35    no_uid_hash              amu_et_:       32.
          47    no_valid_stacks          amu_et_:       42.
          36    no_va_specified          amu_et_:       33.
          63    npdx_dbr                 amu_et_:       54.
          70    null_ptr                 amu_et_:       59.
          67    null_sltnt               amu_et_:       58.
          66    null_sltp                amu_et_:       57.
          65    null_sstnt               amu_et_:       56.
          64    null_sstp                amu_et_:       55.
         101    past_codes               amu_et_:       10.
          71    proc_not_dumped          amu_et_:       60.
        1171    push_offset              stack_header:        81.
          72    range_too_small          amu_et_:       61.
        1173    return_no_pop_offset     stack_header:        83.
        1172    return_offset            stack_header:        82.
          76    seg_not_dumped           amu_et_:       65.
          77    specified_modifier       amu_et_:       66.
          73    stach_header.trace_top_ptr     stack_header:        62.
          66    stack_header.assign_linkage_ptr      stack_header:        59.
          32    stack_header.bar_mode_sp       stack_header:        42.
          36    stack_header.call_op_ptr       stack_header:        44.
          10    stack_header.clr_ptr     stack_header:        27.
           6    stack_header.combined_stat_ptr       stack_header:        25.
           4    stack_header.cpm_data_ptr      stack_header:        24.
          13    stack_header.cpm_enabled       stack_header:        32.
          13    stack_header.cur_lot_size      stack_header:        31.
          64    stack_header.ect_ptr     stack_header:        58.
          46    stack_header.entry_op_ptr      stack_header:        49.
          70    stack_header.heap_header_ptr   stack_header:        60.
          74    stack_header.in_trace    stack_header:        63.
          52    stack_header.isot_ptr    stack_header:        52.
          26    stack_header.lot_ptr     amu_et_:       10,
                                         stack_header:        39.
          12    stack_header.main_proc_invoked       stack_header:        29.
          12    stack_header.max_lot_size      stack_header:        28.
          20    stack_header.parent_ptr  stack_header:        36.
          34    stack_header.pl1_operators_ptr       stack_header:        43.
          40    stack_header.push_op_ptr       stack_header:        46.
          42    stack_header.return_op_ptr     stack_header:        47.
          44    stack_header.ret_no_pop_op_ptr       stack_header:        48.
          62    stack_header.rnt_ptr     stack_header:        57.
          12    stack_header.run_unit_depth    stack_header:        30.
          54    stack_header.sct_ptr     stack_header:        53.
          30    stack_header.signal_ptr  stack_header:        41.
          22    stack_header.stack_begin_ptr   stack_header:        37.
          24    stack_header.stack_end_ptr     stack_header:        38.
          14    stack_header.system_free_ptr   stack_header:        33.
          60    stack_header.sys_link_info_ptr       stack_header:        56.
          72    stack_header.trace_frames      stack_header:        61.
          50    stack_header.trans_op_tv_ptr   stack_header:        51.
          56    stack_header.unwinder_ptr      stack_header:        54.
          16    stack_header.user_free_ptr     stack_header:        34.
         100    stack_header_end         stack_header:        64.
          73    stop_trans               amu_et_:       62.
           0    trace_frames.count       stack_header:        69.
           1    trace_frames.top_ptr     stack_header:        70.
          74    trans_exists             amu_et_:       63.
         551    tv_offset                stack_header:        75,   80,   81,   82,   83,   84.
          75    two_level_indirect       amu_et_:       64.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
