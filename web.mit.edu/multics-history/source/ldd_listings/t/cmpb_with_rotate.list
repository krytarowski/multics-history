	COMPILATION LISTING OF SEGMENT cmpb_with_rotate
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 10/22/84  1116.9 mst Mon
	    Options: optimize map

        1 /* ******************************************************
        2*   *                                                    *
        3*   *                                                    *
        4*   * Copyright (c) 1972 by Massachusetts Institute of   *
        5*   * Technology and Honeywell Information Systems, Inc. *
        6*   *                                                    *
        7*   *                                                    *
        8*   ****************************************************** */
        9 
       10 /* ******************************************************
       11*   *                                                    *
       12*   *                                                    *
       13*   *    Copyright, (C) Honeywell Information Systems    *
       14*   *    Inc., 1980.                                     *
       15*   *                                                    *
       16*   *                                                    *
       17*   ****************************************************** */
       18 
       19 cmpb_with_rotate: proc (testcpu_tempsegp);
       20 
       21 dcl  test_pattern char (57) aligned static initial
       22     ("ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿP"),
       23      testcpu_tempsegp pointer,
       24      from_ptr pointer,
       25      to_ptr pointer,
       26      len fixed bin (35),
       27      cmpbtest_alm ext entry (pointer, pointer, fixed bin (35));
       28 
       29 dcl  mme1 condition,
       30      ioa_ ext entry options (variable),
       31      dump_seg_ ext entry (pointer, pointer, fixed bin, fixed bin, bit (6)),
       32      iox_$user_output ext pointer,
       33      hcs_$truncate_seg ext entry (pointer, fixed bin, fixed bin (35));
       34 
       35 dcl  based_bits (1000) bit (1) unaligned based,
       36      based_word fixed bin (35) aligned based;
       37 
       38 dcl  i fixed bin,
       39      lowerbound fixed bin;
       40 
       41 dcl  based_pattern bit (510) based unaligned,
       42      pattern_copy char (57) aligned;
       43 
       44 	lowerbound = binary (rel (testcpu_tempsegp)); /* in case it is a uniquenames seg in pdir */
       45 	call hcs_$truncate_seg (testcpu_tempsegp, lowerbound, 0);
       46 
       47 	from_ptr = addr (test_pattern);
       48 	to_ptr = testcpu_tempsegp;
       49 
       50 	on mme1 begin;
       51 	     call ioa_ ("FAILURE on ^dth trial, at ^p.", i, to_ptr);
       52 	     call dump_seg_ (iox_$user_output, to_ptr, 0, 16, "100001"b);
       53 	     call ioa_ ("");
       54 	     goto pass_test;
       55 	end;
       56 
       57 	do i = 1 to 10000;
       58 
       59 	     call cmpbtest_alm (from_ptr, to_ptr, 510);
       60 pass_test:
       61 	     to_ptr -> based_word = 0;		/* makes dump easier to read if we clean up this way */
       62 	     to_ptr = addr (to_ptr -> based_bits (7));
       63 	end;
       64 
       65 	call hcs_$truncate_seg (testcpu_tempsegp, lowerbound, 0);
       66 
       67 
       68      end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/22/84  1101.1  cmpb_with_rotate.pl1              >spec>on>6978-10/22/84>cmpb_with_rotate.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
based_bits                             based           bit(1)                   array unaligned dcl 35 set ref 62
based_word                             based           fixed bin(35,0)          dcl 35 set ref 60*
cmpbtest_alm                    000030 constant        entry                    external dcl 21 ref 59
dump_seg_                       000034 constant        entry                    external dcl 29 ref 52
from_ptr                        000100 automatic       pointer                  dcl 21 set ref 47* 59*
hcs_$truncate_seg               000040 constant        entry                    external dcl 29 ref 45 65
i                               000112 automatic       fixed bin(17,0)          dcl 38 set ref 51* 57*
ioa_                            000032 constant        entry                    external dcl 29 ref 51 53
iox_$user_output                000036 external static pointer                  dcl 29 set ref 52*
lowerbound                      000113 automatic       fixed bin(17,0)          dcl 38 set ref 44* 45* 65*
mme1                            000104 stack reference condition                dcl 29 ref 50
test_pattern                    000010 internal static char(57)                 initial dcl 21 set ref 47
testcpu_tempsegp                       parameter       pointer                  dcl 21 set ref 19 44 45* 48 65*
to_ptr                          000102 automatic       pointer                  dcl 21 set ref 48* 51* 52* 59* 60 62* 62

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
based_pattern                          based           bit(510)                 unaligned dcl 41
len                                    automatic       fixed bin(35,0)          dcl 21
pattern_copy                           automatic       char(57)                 dcl 41

NAMES DECLARED BY EXPLICIT CONTEXT.
cmpb_with_rotate                000020 constant        entry                    external dcl 19
pass_test                       000200 constant        label                    dcl 60 ref 54

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 47 62
binary                                                 builtin function         ref 44
rel                                                    builtin function         ref 44

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       324         366     225         334
Length       544     225        42         141      76          20

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cmpb_with_rotate                     86 external procedure  is an external procedure.  
on unit on line 50                   89 on unit               

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 test_pattern                cmpb_with_rotate

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cmpb_with_rotate         000100 from_ptr                    cmpb_with_rotate
                         000102 to_ptr                      cmpb_with_rotate
                         000112 i                           cmpb_with_rotate
                         000113 lowerbound                  cmpb_with_rotate

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              tra_ext             enable              ext_entry
int_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cmpbtest_alm                  dump_seg_                     hcs_$truncate_seg             ioa_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
iox_$user_output




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     19 000015        44 000025        45 000033        47 000046        48 000051        50 000055        51 000071
     52 000115        53 000142        54 000153        57 000156        59 000163        60 000200        62 000201
     63 000205        65 000207        68 000224


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
