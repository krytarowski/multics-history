	COMPILATION LISTING OF SEGMENT poll_mos_memory
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/15/82  1744.7 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 /* POLL_MOS_MEMORY: Command to read mos memory maintainance registers and print contents */
       12 
       13 /* Written May 1976 by Larry Johnson */
       14 /* Modified June 1977 by Larry Johnson for new phcs_ interface. */
       15 
       16 poll_mos_memory: proc;
       17 
       18 dcl  code fixed bin (35);
       19 dcl  mem (0:31) char (1) unal;
       20 dcl  store (0:31) char (2) unal;
       21 dcl  data (0:31) fixed bin (71);
       22 dcl  i fixed bin;
       23 dcl  name char (15) int static options (constant) init ("poll_mos_memory");
       24 dcl  descrip char (100) var;
       25 
       26 dcl  phcs_$mos_memory_check entry (dim (0:31) char (1) unal, dim (0:31) char (2) unal, dim (0:31) fixed bin (71), fixed bin (35));
       27 dcl  com_err_ entry options (variable);
       28 dcl  ioa_ entry options (variable);
       29 dcl  edit_mos_rscr_ entry (ptr, char (*) var);
       30 
       31 dcl (addr, unspec, substr) builtin;
       32 
       33 	mem = "";
       34 	store = "";
       35 	data = 0;
       36 	call phcs_$mos_memory_check (mem, store, data, code);
       37 	if code ^= 0 then do;
       38 	     call com_err_ (code, name);
       39 	     return;
       40 	end;
       41 
       42 	do i = 0 to 31;
       43 	     if mem (i) ^= "" then do;
       44 		call edit_mos_rscr_ (addr (data (i)), descrip);
       45 		call ioa_ ("mem ^a, store ^a: ^w ^a", mem (i), store (i), substr (unspec (data (i)), 37), descrip);
       46 	     end;
       47 	end;
       48 	return;
       49      end poll_mos_memory;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/15/82  1527.0  poll_mos_memory.pl1               >dumps>old>recomp>poll_mos_memory.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 31 ref 44 44
code                            000100 automatic       fixed bin(35,0)          dcl 18 set ref 36* 37 38*
com_err_                        000012 constant        entry                    external dcl 27 ref 38
data                            000132 automatic       fixed bin(71,0)          array dcl 21 set ref 35* 36* 44 44 45 45
descrip                         000233 automatic       varying char(100)        dcl 24 set ref 44* 45*
edit_mos_rscr_                  000016 constant        entry                    external dcl 29 ref 44
i                               000232 automatic       fixed bin(17,0)          dcl 22 set ref 42* 43 44 44 45 45 45 45*
ioa_                            000014 constant        entry                    external dcl 28 ref 45
mem                             000101 automatic       char(1)                  array unaligned dcl 19 set ref 33* 36* 43 45*
name                            000000 constant        char(15)                 initial unaligned dcl 23 set ref 38*
phcs_$mos_memory_check          000010 constant        entry                    external dcl 26 ref 36
store                           000111 automatic       char(2)                  array unaligned dcl 20 set ref 34* 36* 45*
substr                                                 builtin function         dcl 31 ref 45 45
unspec                                                 builtin function         dcl 31 ref 45 45

NAME DECLARED BY EXPLICIT CONTEXT.
poll_mos_memory                 000025 constant        entry                    external dcl 16

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       312         332     230         322
Length       502     230        20         133      61           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
poll_mos_memory                     218 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
poll_mos_memory          000100 code                        poll_mos_memory
                         000101 mem                         poll_mos_memory
                         000111 store                       poll_mos_memory
                         000132 data                        poll_mos_memory
                         000232 i                           poll_mos_memory
                         000233 descrip                     poll_mos_memory

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      edit_mos_rscr_                ioa_                          phcs_$mos_memory_check

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     16 000024        33 000032        34 000044        35 000057        36 000072        37 000107        38 000111
     39 000126        42 000127        43 000133        44 000137        45 000160        47 000225        48 000227


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
