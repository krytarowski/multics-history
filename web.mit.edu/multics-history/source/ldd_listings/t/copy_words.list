	COMPILATION LISTING OF SEGMENT copy_words
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/15/82  1541.5 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 copy_words: cw: proc;
       12 
       13 /* Fixed to show its long name in error messages 07/07/81 S. Herbst */
       14 
       15 dcl
       16      whoami char (32) aligned varying,
       17      cu_$arg_ptr entry (fixed bin, ptr, fixed bin, fixed bin (35)),
       18      expand_pathname_ entry (char (*), char (*), char (*), fixed bin (35)),
       19      hcs_$initiate_count entry (char (*), char (*), char (*), fixed bin (24), fixed bin (2), ptr, fixed bin (35)),
       20      hcs_$make_seg entry (char (*), char (*), char (*), fixed bin (5), ptr, fixed bin (35)),
       21      hcs_$set_bc entry (char (*), char (*), fixed bin (24), fixed bin (35)),
       22      cv_oct_check_ entry (char (*), fixed bin (35)) returns (fixed bin (35)),
       23      com_err_ entry options (variable),
       24      words (nwords) fixed bin (35) based,
       25     (i, j, k, nwords) fixed bin,
       26     (inp, outp, p) ptr,
       27     (onamep, inamep) pointer,
       28     (inlen, outlen) fixed bin,
       29      iname char (inlen) based (inamep),
       30      outname char (outlen) based (onamep),
       31     (indir, outdir) char (168),
       32     (inename, outename) char (32),
       33      bc fixed bin (24),
       34      number char (numlen) based (np),
       35      numlen fixed bin,
       36      np ptr,
       37      hcs_$terminate_noname entry (ptr, fixed bin (35));
       38 dcl  code fixed bin (35);
       39 
       40 dcl (addr, divide, mod, null, pointer) builtin;
       41 dcl  cleanup condition;
       42 
       43 	whoami = "copy_words";
       44 	inp = null;
       45 	outp = null;
       46 
       47 	call cu_$arg_ptr (1, inamep, inlen, code);
       48 	if code ^= 0 then do;
       49 err1:	     call com_err_ (code, whoami);
       50 	     return;
       51 	end;
       52 
       53 	call expand_pathname_ (iname, indir, inename, code);
       54 	if code ^= 0 then do;
       55 err2:	     call com_err_ (code, whoami, iname);
       56 	     return;
       57 	end;
       58 
       59 
       60 	call hcs_$initiate_count (indir, inename, "", bc, 0, inp, code);
       61 
       62 	on cleanup begin;
       63 	     if inp ^= null then call hcs_$terminate_noname (inp, code);
       64 	     if outp ^= null then call hcs_$terminate_noname (outp, code);
       65 	end;
       66 
       67 	if inp = null then go to err2;
       68 
       69 
       70 	call cu_$arg_ptr (2, onamep, outlen, code);
       71 	if code ^= 0 then go to err1;
       72 
       73 	call expand_pathname_ (outname, outdir, outename, code);
       74 	if code ^= 0 then do;
       75 err3:	     call com_err_ (code, whoami, outname);
       76 	     return;
       77 	end;
       78 
       79 	call hcs_$make_seg (outdir, outename, "", 01011b, outp, code);
       80 	if outp = null then go to err3;
       81 	call cu_$arg_ptr (3, np, numlen, code);
       82 	if code ^= 0 then go to err1;
       83 
       84 	i = cv_oct_check_ (number, code);
       85 	if code ^= 0 then do;
       86 err4:	     code = 0;
       87 	     call com_err_ (code, whoami, "Illegal conversion.  "||number);
       88 	     return;
       89 	end;
       90 
       91 	call cu_$arg_ptr (4, np, numlen, code);
       92 	if code ^= 0 | numlen = 0 then do;
       93 	     j = divide (bc, 36, 17, 0)-1;
       94 	     k = mod (bc, 36);
       95 	     if k ^= 0 then j = j+1;
       96 	end;
       97 	else do;
       98 	     k = 0;
       99 	     j = cv_oct_check_ (number, code);
      100 	     if code ^= 0 then go to err4;
      101 	end;
      102 
      103 	nwords = j-i+1;
      104 	p = pointer (inp, i);
      105 
      106 	outp -> words = p -> words;			/* make the copy */
      107 
      108 	call hcs_$set_bc (outdir, outename, (nwords*36)+k, code);
      109 	if code ^= 0 then go to err3;
      110 
      111 	call hcs_$terminate_noname (inp, code);
      112 	if code ^= 0 then go to err2;
      113 
      114 	call hcs_$terminate_noname (outp, code);
      115 	if code ^= 0 then go to err3;
      116 
      117      end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/15/82  1455.7  copy_words.pl1                    >dumps>old>recomp>copy_words.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
bc                              000276 automatic       fixed bin(24,0)          dcl 15 set ref 60* 93 94
cleanup                         000304 stack reference condition                dcl 41 ref 62
code                            000302 automatic       fixed bin(35,0)          dcl 38 set ref 47* 48 49* 53* 54 55* 60* 63* 64* 70*
                                                                                  71 73* 74 75* 79* 81* 82 84* 85 86* 87* 91* 92 99*
                                                                                  100 108* 109 111* 112 114* 115
com_err_                        000024 constant        entry                    external dcl 15 ref 49 55 75 87
cu_$arg_ptr                     000010 constant        entry                    external dcl 15 ref 47 70 81 91
cv_oct_check_                   000022 constant        entry                    external dcl 15 ref 84 99
divide                                                 builtin function         dcl 40 ref 93
expand_pathname_                000012 constant        entry                    external dcl 15 ref 53 73
hcs_$initiate_count             000014 constant        entry                    external dcl 15 ref 60
hcs_$make_seg                   000016 constant        entry                    external dcl 15 ref 79
hcs_$set_bc                     000020 constant        entry                    external dcl 15 ref 108
hcs_$terminate_noname           000026 constant        entry                    external dcl 15 ref 63 64 111 114
i                               000111 automatic       fixed bin(17,0)          dcl 15 set ref 84* 103 104
iname                                  based           char                     unaligned dcl 15 set ref 53* 55*
inamep                          000126 automatic       pointer                  dcl 15 set ref 47* 53 55
indir                           000132 automatic       char(168)                unaligned dcl 15 set ref 53* 60*
inename                         000256 automatic       char(32)                 unaligned dcl 15 set ref 53* 60*
inlen                           000130 automatic       fixed bin(17,0)          dcl 15 set ref 47* 53 53 55 55
inp                             000116 automatic       pointer                  dcl 15 set ref 44* 60* 63 63* 67 104 111*
j                               000112 automatic       fixed bin(17,0)          dcl 15 set ref 93* 95* 95 99* 103
k                               000113 automatic       fixed bin(17,0)          dcl 15 set ref 94* 95 98* 108
mod                                                    builtin function         dcl 40 ref 94
np                              000300 automatic       pointer                  dcl 15 set ref 81* 84 87 91* 99
null                                                   builtin function         dcl 40 ref 44 45 63 64 67 80
number                                 based           char                     unaligned dcl 15 set ref 84* 87 99*
numlen                          000277 automatic       fixed bin(17,0)          dcl 15 set ref 81* 84 84 87 91* 92 99 99
nwords                          000114 automatic       fixed bin(17,0)          dcl 15 set ref 103* 106 108
onamep                          000124 automatic       pointer                  dcl 15 set ref 70* 73 75
outdir                          000204 automatic       char(168)                unaligned dcl 15 set ref 73* 79* 108*
outename                        000266 automatic       char(32)                 unaligned dcl 15 set ref 73* 79* 108*
outlen                          000131 automatic       fixed bin(17,0)          dcl 15 set ref 70* 73 73 75 75
outname                                based           char                     unaligned dcl 15 set ref 73* 75*
outp                            000120 automatic       pointer                  dcl 15 set ref 45* 64 64* 79* 80 106 114*
p                               000122 automatic       pointer                  dcl 15 set ref 104* 106
pointer                                                builtin function         dcl 40 ref 104
whoami                          000100 automatic       varying char(32)         dcl 15 set ref 43* 49* 55* 75* 87*
words                                  based           fixed bin(35,0)          array dcl 15 set ref 106* 106

NAME DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
addr                                                   builtin function         dcl 40

NAMES DECLARED BY EXPLICIT CONTEXT.
copy_words                      000037 constant        entry                    external dcl 11
cw                              000030 constant        entry                    external dcl 11
err1                            000074 constant        label                    dcl 49 ref 71 82
err2                            000144 constant        label                    dcl 55 ref 67 112
err3                            000362 constant        label                    dcl 75 ref 80 109 115
err4                            000522 constant        label                    dcl 86 ref 100

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1100        1130     752        1110
Length      1314     752        30         150     125           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cw                                  264 external procedure  is an external procedure.  
on unit on line 62                   70 on unit               

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cw                       000100 whoami                      cw
                         000111 i                           cw
                         000112 j                           cw
                         000113 k                           cw
                         000114 nwords                      cw
                         000116 inp                         cw
                         000120 outp                        cw
                         000122 p                           cw
                         000124 onamep                      cw
                         000126 inamep                      cw
                         000130 inlen                       cw
                         000131 outlen                      cw
                         000132 indir                       cw
                         000204 outdir                      cw
                         000256 inename                     cw
                         000266 outename                    cw
                         000276 bc                          cw
                         000277 numlen                      cw
                         000300 np                          cw
                         000302 code                        cw

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_cs            call_ext_out_desc   call_ext_out        return              mod_fx1             enable
shorten_stack       ext_entry           int_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      cu_$arg_ptr                   cv_oct_check_                 expand_pathname_
hcs_$initiate_count           hcs_$make_seg                 hcs_$set_bc                   hcs_$terminate_noname

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000027        43 000044        44 000051        45 000053        47 000054        48 000072        49 000074
     50 000111        53 000112        54 000142        55 000144        56 000170        60 000171        62 000233
     63 000247        64 000264        65 000302        67 000303        70 000307        71 000326        73 000330
     74 000360        75 000362        76 000406        79 000407        80 000446        81 000452        82 000471
     84 000473        85 000520        86 000522        87 000523        88 000562        91 000564        92 000603
     93 000607        94 000613        95 000617        96 000621        98 000622        99 000623       100 000647
    103 000651       104 000655       106 000661       108 000667       109 000720       111 000722       112 000733
    114 000735       115 000746       117 000750


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
