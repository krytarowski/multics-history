	COMPILATION LISTING OF SEGMENT dump_vct
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 02/06/85  1446.9 mst Wed
	    Options: optimize list

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 dump_vct: proc;
       12 
       13 /* DUMP_VCT - dump virtual console table
       14*
       15*   THVV */
       16 
       17 dcl (path, dn) char (168) aligned,
       18      en char (32) aligned,
       19      srch (10) char (32) aligned,
       20      line char (120) aligned,
       21      datstr char (16) aligned,
       22      vstr char (64) aligned,
       23     (i, j, k, l, m, n) fixed bin,
       24     (time, fb71) fixed bin (71),
       25      ap ptr,
       26      al fixed bin,
       27      bchr char (al) unaligned based (ap),
       28      ec fixed bin (35),
       29     (p, q) ptr;
       30 
       31 dcl (addr, null, substr, index, unspec, length, bit, fixed, divide, mod, abs) builtin;
       32 
       33 dcl  clock_ entry () returns (fixed bin (71)),
       34      cu_$arg_ptr entry (fixed bin, ptr, fixed bin, fixed bin (35)),
       35      expand_path_ entry (ptr, fixed bin, ptr, ptr, fixed bin (35)),
       36      ioa_ entry options (variable),
       37      date_time_ entry (fixed bin (71), char (*) aligned),
       38      com_err_ entry options (variable);
       39 
       40 dcl  hcs_$initiate entry (char (*) aligned, char (*) aligned, char (*) aligned, fixed bin (1),
       41      fixed bin (2), ptr, fixed bin (35)),
       42      hcs_$terminate_noname entry (ptr, fixed bin (35));
       43 
  1     1 /* BEGIN INCLUDE FILE vcons_tab.incl.pl1  */
  1     2 /*
  1     3*Virtual Console Table
  1     4*
  1     5*Associates virtual consoles  with  physical  devices  and/or  log
  1     6*segments.  */
  1     7 
  1     8 
  1     9 dcl 1 vcons_tab aligned based based(vconsp),	/* header 4 words */
  1    10           2 lock bit(36),
  1    11           2 no_of_vcons fixed bin,
  1    12 	2 flags       bit(36),
  1    13 	2 pad1	    fixed bin,
  1    14 	2 star_entry like vcons aligned,
  1    15           2 vcons(32) like vcons aligned;
  1    16 
  1    17 dcl	1 vcons aligned based(vcep),	/* This header 10 dec  12 oct words  */
  1    18                2 vcons char(32),
  1    19                2 no_of_dest fixed bin,
  1    20 	     2 flags,
  1    21 		3 inuse	     bit(1) unal,
  1    22 		3 unused	     bit(35) unal,
  1    23                2 dest(8) aligned,	/* 12 dec 14 oct words */
  1    24 		3 type fixed bin,
  1    25 		3 pad2 fixed bin,
  1    26 		3 dest          char(32),
  1    27 		3 queue_seg_ptr ptr;
  1    28 /*
  1    29*
  1    30*vcons_tab
  1    31*lock
  1    32*no_of_vcons
  1    33*vcons
  1    34*vcons		     Symbolic name of virtual console
  1    35*no_of_dest               Number of physical destinations for
  1    36*                         messages to this virtual console.
  1    37*inuse		     "1"b if this entry is in use.
  1    38*dest                     Where the message is to be sent
  1    39*type                     1 for tty, 2 for segment
  1    40*dest                     Symbolic name of physical destination
  1    41*tty_index                If tty, index in mess coordr answer table
  1    42*seg_ptr                  if segment, pointer to it.
  1    43**/
  1    44 /* END INCLUDE FILE vcons_tab.incl.pl1   */
       44 
       45 
       46 dcl  vconsp ptr;
       47 dcl  vcep ptr;
       48 
       49 dcl  typer (3) char (4) aligned int static init ("tty", "log", "sink");
       50 
       51 /* ------------------------------------------------------- */
       52 
       53 	m = 0;
       54 	l = 0;
       55 	k = 2;
       56 	path = ">system_control_1>vcons_tab";
       57 	call cu_$arg_ptr (1, ap, al, ec);
       58 	if ec ^= 0 then go to vct1;
       59 	path = bchr;
       60 arglp:	call cu_$arg_ptr (k, ap, al, ec);
       61 	if ec ^= 0 then go to vct1;
       62 	m = m + 1;
       63 	if m > 10 then go to vct1;
       64 	if bchr = "*" then l = m;
       65 	srch (m) = bchr;
       66 	k = k + 1;
       67 	go to arglp;
       68 
       69 vct1:	i = index (path, " ");
       70 	call expand_path_ (addr (path), i, addr (dn), addr (en), ec);
       71 	if ec ^= 0 then do;
       72 er:	     call com_err_ (ec, "dump_vct", "^a", path);
       73 	     return;
       74 	end;
       75 	call hcs_$initiate (dn, en, "", 0, 1, vconsp, ec);
       76 	if vconsp = null then go to er;
       77 
       78 	if m = 0 then do;
       79 	     call date_time_ ((clock_ ()), datstr);
       80 	     call ioa_ ("^/Virtual Console Table - ^a^/", datstr);
       81 
       82 	     call ioa_ ("lock:^15x^w", vcons_tab.lock);
       83 	     call ioa_ ("no_of_vcons:^8x^d", vcons_tab.no_of_vcons);
       84 	     call ioa_ ("flags:^14x^w", vcons_tab.flags);
       85 	end;
       86 
       87 	if l ^= 0 then do;
       88 	     srch (l) = "";
       89 	     go to pvv;
       90 	end;
       91 	if m = 0 then do;
       92 pvv:	     call ioa_ ("^/VIRTUAL CONSOLE: ^a^/", vcons_tab.star_entry.vcons);
       93 	     call pvcons (addr (vcons_tab.star_entry));
       94 	end;
       95 
       96 	do i = 1 to vcons_tab.no_of_vcons;
       97 	     if ^vcons_tab.vcons (i).flags.inuse then go to skip;
       98 	     if m = 0 then go to pvv1;
       99 	     do n = 1 to m;
      100 		if vcons_tab.vcons (i).vcons = srch (n) then do;
      101 		     srch (n) = "";
      102 		     go to pvv1;
      103 		end;
      104 	     end;
      105 	     go to skip;
      106 
      107 pvv1:	     call ioa_ ("^/VIRTUAL CONSOLE: ^a^/", vcons_tab.vcons (i).vcons);
      108 	     call pvcons (addr (vcons_tab.vcons (i)));
      109 
      110 skip:	end;
      111 
      112 	if m = 0 then call ioa_ ("^/End^/");
      113 	else do i = 1 to m;
      114 	     if srch (i) ^= "" then call ioa_ ("vcons ""^a"" not in vcons_tab", srch (i));
      115 	end;
      116 	call hcs_$terminate_noname (vconsp, ec);
      117 	return;
      118 
      119 pvcons:	proc (sp);
      120 
      121 dcl  sp ptr;
      122 
      123 dcl  k fixed bin,
      124      vstr char (64) varying,
      125      vconst char (32) aligned;
      126 
      127 	     vcep = sp;
      128 	     vstr = "inuse";
      129 	     call ioa_ ("^5xflags:^9x^a", vstr);
      130 	     call ioa_ ("^5xno_of_dest:^4x^d^/", vcons.no_of_dest);
      131 	     do k = 1 to vcons.no_of_dest;
      132 
      133 		call ioa_ ("^10xdest ^d:^3x^4a ^a ^p", k,
      134 		typer (vcons.dest (k).type), vcons.dest (k).dest, vcons.dest (k).queue_seg_ptr);
      135 
      136 	     end;
      137 
      138 	end pvcons;
      139 
      140      end dump_vct;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    02/06/85  1403.7  dump_vct.pl1                      >spec>on>41-7>dump_vct.pl1
44           1    05/06/74  1759.4  vcons_tab.incl.pl1                >ldd>include>vcons_tab.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 31 ref 70 70 70 70 70 70 93 93 108 108
al                              000370 automatic       fixed bin(17,0)          dcl 17 set ref 57* 59 60* 64 65
ap                              000366 automatic       pointer                  dcl 17 set ref 57* 59 60* 64 65
bchr                                   based           char                     unaligned dcl 17 ref 59 64 65
clock_                          000014 constant        entry                    external dcl 33 ref 79
com_err_                        000026 constant        entry                    external dcl 33 ref 72
cu_$arg_ptr                     000016 constant        entry                    external dcl 33 ref 57 60
date_time_                      000024 constant        entry                    external dcl 33 ref 79
datstr                          000354 automatic       char(16)                 dcl 17 set ref 79* 80*
dest                     12            based           structure                array level 2 in structure "vcons" dcl 1-17
                                                                                  in procedure "dump_vct"
dest                     14            based           char(32)                 array level 3 in structure "vcons" dcl 1-17
                                                                                  in procedure "dump_vct" set ref 133*
dn                              000152 automatic       char(168)                dcl 17 set ref 70 70 75*
ec                              000371 automatic       fixed bin(35,0)          dcl 17 set ref 57* 58 60* 61 70* 71 72* 75* 116*
en                              000224 automatic       char(32)                 dcl 17 set ref 70 70 75*
expand_path_                    000020 constant        entry                    external dcl 33 ref 70
flags                     2            based           bit(36)                  level 2 in structure "vcons_tab" dcl 1-9
                                                                                  in procedure "dump_vct" set ref 84*
flags                   167            based           structure                array level 3 in structure "vcons_tab" dcl 1-9
                                                                                  in procedure "dump_vct"
hcs_$initiate                   000030 constant        entry                    external dcl 40 ref 75
hcs_$terminate_noname           000032 constant        entry                    external dcl 40 ref 116
i                               000360 automatic       fixed bin(17,0)          dcl 17 set ref 69* 70* 96* 97 100 107 108 108* 113*
                                                                                  114 114*
index                                                  builtin function         dcl 31 ref 69
inuse                   167            based           bit(1)                   array level 4 packed unaligned dcl 1-9 set ref 97
ioa_                            000022 constant        entry                    external dcl 33 ref 80 82 83 84 92 107 112 114 129
                                                                                  130 133
k                               000361 automatic       fixed bin(17,0)          dcl 17 in procedure "dump_vct" set ref 55* 60* 66*
                                                                                  66
k                               000410 automatic       fixed bin(17,0)          dcl 123 in procedure "pvcons" set ref 131* 133* 133
                                                                                  133 133*
l                               000362 automatic       fixed bin(17,0)          dcl 17 set ref 54* 64* 87 88
lock                                   based           bit(36)                  level 2 dcl 1-9 set ref 82*
m                               000363 automatic       fixed bin(17,0)          dcl 17 set ref 53* 62* 62 63 64 65 78 91 98 99 112
                                                                                  113
n                               000364 automatic       fixed bin(17,0)          dcl 17 set ref 99* 100 101*
no_of_dest               10            based           fixed bin(17,0)          level 2 dcl 1-17 set ref 130* 131
no_of_vcons               1            based           fixed bin(17,0)          level 2 dcl 1-9 set ref 83* 96
null                                                   builtin function         dcl 31 ref 76
path                            000100 automatic       char(168)                dcl 17 set ref 56* 59* 69 70 70 72*
queue_seg_ptr            24            based           pointer                  array level 3 dcl 1-17 set ref 133*
sp                                     parameter       pointer                  dcl 121 ref 119 127
srch                            000234 automatic       char(32)                 array dcl 17 set ref 65* 88* 100 101* 114 114*
star_entry                4            based           structure                level 2 dcl 1-9 set ref 93 93
type                     12            based           fixed bin(17,0)          array level 3 dcl 1-17 ref 133
typer                           000010 internal static char(4)                  initial array dcl 49 set ref 133*
vcep                            000374 automatic       pointer                  dcl 47 set ref 127* 130 131 133 133 133
vcons                     4            based           char(32)                 level 3 in structure "vcons_tab" dcl 1-9
                                                                                  in procedure "dump_vct" set ref 92*
vcons                                  based           structure                level 1 dcl 1-17 in procedure "dump_vct"
vcons                   156            based           char(32)                 array level 3 in structure "vcons_tab" dcl 1-9
                                                                                  in procedure "dump_vct" set ref 100 107*
vcons                   156            based           structure                array level 2 in structure "vcons_tab" dcl 1-9
                                                                                  in procedure "dump_vct" set ref 108 108
vcons_tab                              based           structure                level 1 dcl 1-9
vconsp                          000372 automatic       pointer                  dcl 46 set ref 75* 76 82 83 84 92 93 93 96 97 100
                                                                                  107 108 108 116*
vstr                            000411 automatic       varying char(64)         dcl 123 set ref 128* 129*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
abs                                                    builtin function         dcl 31
bit                                                    builtin function         dcl 31
divide                                                 builtin function         dcl 31
fb71                                   automatic       fixed bin(71,0)          dcl 17
fixed                                                  builtin function         dcl 31
j                                      automatic       fixed bin(17,0)          dcl 17
length                                                 builtin function         dcl 31
line                                   automatic       char(120)                dcl 17
mod                                                    builtin function         dcl 31
p                                      automatic       pointer                  dcl 17
q                                      automatic       pointer                  dcl 17
substr                                                 builtin function         dcl 31
time                                   automatic       fixed bin(71,0)          dcl 17
unspec                                                 builtin function         dcl 31
vconst                                 automatic       char(32)                 dcl 123
vstr                                   automatic       char(64)                 dcl 17

NAMES DECLARED BY EXPLICIT CONTEXT.
arglp                           000173 constant        label                    dcl 60 ref 67
dump_vct                        000132 constant        entry                    external dcl 11
er                              000274 constant        label                    dcl 72 ref 76
pvcons                          000774 constant        entry                    internal dcl 119 ref 93 108
pvv                             000546 constant        label                    dcl 92 ref 89
pvv1                            000650 constant        label                    dcl 107 ref 98 102
skip                            000702 constant        label                    dcl 110 ref 97 105
vct1                            000234 constant        label                    dcl 69 ref 58 61 63

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1236        1272    1127        1246
Length      1470    1127        34         162     107           4

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
dump_vct                            408 external procedure  is an external procedure.  
pvcons                                  internal procedure  shares stack frame of external procedure dump_vct.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 typer                       dump_vct

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
dump_vct                 000100 path                        dump_vct
                         000152 dn                          dump_vct
                         000224 en                          dump_vct
                         000234 srch                        dump_vct
                         000354 datstr                      dump_vct
                         000360 i                           dump_vct
                         000361 k                           dump_vct
                         000362 l                           dump_vct
                         000363 m                           dump_vct
                         000364 n                           dump_vct
                         000366 ap                          dump_vct
                         000370 al                          dump_vct
                         000371 ec                          dump_vct
                         000372 vconsp                      dump_vct
                         000374 vcep                        dump_vct
                         000410 k                           pvcons
                         000411 vstr                        pvcons

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
clock_                        com_err_                      cu_$arg_ptr                   date_time_
expand_path_                  hcs_$initiate                 hcs_$terminate_noname         ioa_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.


CONSTANTS
001122  aa     000002000000
001123  aa     000000000000
001124  aa     600000000041
001125  aa     000452000000


000000  aa     524000000004

000001  aa     524000000030

000002  aa     524000000025

000003  aa     530000000100

000004  aa     524000000016

000005  aa     524000000033

000006  aa     524000000007

000007  aa     524000000027

000010  aa     524000000014

000011  aa     404000000021

000012  aa     524000000021

000013  aa     514000000044

000014  aa     524000000013

000015  aa     524000000036

000016  aa     524000000020

000017  aa     464000000000

000020  aa     404000000002

000021  aa     404000000001

000022  aa     524000000000

000023  aa     524000000040

000024  aa     524000000250

000025  aa     524000000002

000026  aa     524000000010

000027  aa     404000000043

001126  aa  052 000 000 000	*

000030  aa     410000000107

000032  aa  151 156 165 163	inus
000033  aa  145 000 000 000	e

000034  aa  136 057 105 156	^/En
000035  aa  144 136 057 000	d^/

000036  aa     077777000043
000037  aa     000001000000

000040  aa  144 165 155 160	dump
000041  aa  137 166 143 164	_vct

000042  aa  146 154 141 147	flag
000043  aa  163 072 136 061	s:^1
000044  aa  064 170 136 167	4x^w

000045  aa  154 157 143 153	lock
000046  aa  072 136 061 065	:^15
000047  aa  170 136 167 000	x^w

000050  aa  136 065 170 146	^5xf
000051  aa  154 141 147 163	lags
000052  aa  072 136 071 170	:^9x
000053  aa  136 141 000 000	^a

000054  aa  156 157 137 157	no_o
000055  aa  146 137 166 143	f_vc
000056  aa  157 156 163 072	ons:
000057  aa  136 070 170 136	^8x^
000060  aa  144 000 000 000	d

000061  aa  136 061 060 170	^10x
000062  aa  144 145 163 164	dest
000063  aa  040 136 144 072	 ^d:
000064  aa  136 063 170 136	^3x^
000065  aa  064 141 040 136	4a ^
000066  aa  141 040 136 160	a ^p

000067  aa  136 065 170 156	^5xn
000070  aa  157 137 157 146	o_of
000071  aa  137 144 145 163	_des
000072  aa  164 072 136 064	t:^4
000073  aa  170 136 144 136	x^d^
000074  aa  057 000 000 000	/

000075  aa  136 057 126 111	^/VI
000076  aa  122 124 125 101	RTUA
000077  aa  114 040 103 117	L CO
000100  aa  116 123 117 114	NSOL
000101  aa  105 072 040 136	E: ^
000102  aa  141 136 057 000	a^/

000103  aa  166 143 157 156	vcon
000104  aa  163 040 042 136	s "^
000105  aa  141 042 040 156	a" n
000106  aa  157 164 040 151	ot i
000107  aa  156 040 166 143	n vc
000110  aa  157 156 163 137	ons_
000111  aa  164 141 142 000	tab

000112  aa  076 163 171 163	>sys
000113  aa  164 145 155 137	tem_
000114  aa  143 157 156 164	cont
000115  aa  162 157 154 137	rol_
000116  aa  061 076 166 143	1>vc
000117  aa  157 156 163 137	ons_
000120  aa  164 141 142 000	tab

000121  aa  136 057 126 151	^/Vi
000122  aa  162 164 165 141	rtua
000123  aa  154 040 103 157	l Co
000124  aa  156 163 157 154	nsol
000125  aa  145 040 124 141	e Ta
000126  aa  142 154 145 040	ble 
000127  aa  055 040 136 141	- ^a
000130  aa  136 057 000 000	^/

BEGIN PROCEDURE dump_vct
ENTRY TO dump_vct                                           STATEMENT 1 ON LINE 11
dump_vct: proc;

000131  da     000103200000
000132  aa   000640 6270 00	eax7 	416
000133  aa  7 00034 3521 20	epp2 	pr7|28,*
000134  aa  2 01045 2721 00	tsp2 	pr2|549		ext_entry
000135  aa     000000000000
000136  aa     000000000000
						STATEMENT 1 ON LINE 53
	m = 0;

000137  aa  6 00363 4501 00	stz  	pr6|243		m
						STATEMENT 1 ON LINE 54
	l = 0;

000140  aa  6 00362 4501 00	stz  	pr6|242		l
						STATEMENT 1 ON LINE 55
	k = 2;

000141  aa   000002 2360 07	ldq  	2,dl
000142  aa  6 00361 7561 00	stq  	pr6|241		k
						STATEMENT 1 ON LINE 56
	path = ">system_control_1>vcons_tab";

000143  aa  040 100 100 404	mlr  	(ic),(pr),fill(040)
000144  aa   777747 00 0033	desc9a	-25,27		000112 = 076163171163
000145  aa  6 00100 00 0250	desc9a	pr6|64,168	path
						STATEMENT 1 ON LINE 57
	call cu_$arg_ptr (1, ap, al, ec);

000146  aa   000001 2360 07	ldq  	1,dl
000147  aa  6 00433 7561 00	stq  	pr6|283
000150  aa  6 00433 3521 00	epp2 	pr6|283
000151  aa  6 00436 2521 00	spri2	pr6|286
000152  aa  6 00366 3521 00	epp2 	pr6|246		ap
000153  aa  6 00440 2521 00	spri2	pr6|288
000154  aa  6 00370 3521 00	epp2 	pr6|248		al
000155  aa  6 00442 2521 00	spri2	pr6|290
000156  aa  6 00371 3521 00	epp2 	pr6|249		ec
000157  aa  6 00444 2521 00	spri2	pr6|292
000160  aa  6 00434 6211 00	eax1 	pr6|284
000161  aa   020000 4310 07	fld  	8192,dl
000162  la  4 00016 3521 20	epp2 	pr4|14,*		cu_$arg_ptr
000163  aa  0 00623 7001 00	tsx0 	pr0|403		call_ext_out
						STATEMENT 1 ON LINE 58
	if ec ^= 0 then go to vct1;

000164  aa  6 00371 2361 00	ldq  	pr6|249		ec
000165  aa   000047 6010 04	tnz  	39,ic		000234
						STATEMENT 1 ON LINE 59
	path = bchr;

000166  aa  6 00366 3735 20	epp7 	pr6|246,*		ap
000167  aa  6 00370 7271 00	lxl7 	pr6|248		al
000170  aa  040 100 100 540	mlr  	(pr,rl),(pr),fill(040)
000171  aa  7 00000 00 0017	desc9a	pr7|0,x7		bchr
000172  aa  6 00100 00 0250	desc9a	pr6|64,168	path
						STATEMENT 1 ON LINE 60
arglp:	call cu_$arg_ptr (k, ap, al, ec);

000173  aa  6 00361 3521 00	epp2 	pr6|241		k
000174  aa  6 00436 2521 00	spri2	pr6|286
000175  aa  6 00366 3521 00	epp2 	pr6|246		ap
000176  aa  6 00440 2521 00	spri2	pr6|288
000177  aa  6 00370 3521 00	epp2 	pr6|248		al
000200  aa  6 00442 2521 00	spri2	pr6|290
000201  aa  6 00371 3521 00	epp2 	pr6|249		ec
000202  aa  6 00444 2521 00	spri2	pr6|292
000203  aa  6 00434 6211 00	eax1 	pr6|284
000204  aa   020000 4310 07	fld  	8192,dl
000205  aa  6 00044 3701 20	epp4 	pr6|36,*
000206  la  4 00016 3521 20	epp2 	pr4|14,*		cu_$arg_ptr
000207  aa  0 00623 7001 00	tsx0 	pr0|403		call_ext_out
						STATEMENT 1 ON LINE 61
	if ec ^= 0 then go to vct1;

000210  aa  6 00371 2361 00	ldq  	pr6|249		ec
000211  aa   000023 6010 04	tnz  	19,ic		000234
						STATEMENT 1 ON LINE 62
	m = m + 1;

000212  aa  6 00363 0541 00	aos  	pr6|243		m
						STATEMENT 1 ON LINE 63
	if m > 10 then go to vct1;

000213  aa  6 00363 2361 00	ldq  	pr6|243		m
000214  aa   000012 1160 07	cmpq 	10,dl
000215  aa   000017 6054 04	tpnz 	15,ic		000234
						STATEMENT 1 ON LINE 64
	if bchr = "*" then l = m;

000216  aa  6 00366 3735 20	epp7 	pr6|246,*		ap
000217  aa  6 00370 7271 00	lxl7 	pr6|248		al
000220  aa  040 004 106 540	cmpc 	(pr,rl),(ic),fill(040)
000221  aa  7 00000 00 0017	desc9a	pr7|0,x7		bchr
000222  aa   000706 00 0001	desc9a	454,1		001126 = 052000000000
000223  aa   000002 6010 04	tnz  	2,ic		000225
000224  aa  6 00362 7561 00	stq  	pr6|242		l
						STATEMENT 1 ON LINE 65
	srch (m) = bchr;

000225  aa   000003 7360 00	qls  	3
000226  aa  6 00224 3715 06	epp5 	pr6|148,ql	srch
000227  aa  040 100 100 540	mlr  	(pr,rl),(pr),fill(040)
000230  aa  7 00000 00 0017	desc9a	pr7|0,x7		bchr
000231  aa  5 00000 00 0040	desc9a	pr5|0,32		srch
						STATEMENT 1 ON LINE 66
	k = k + 1;

000232  aa  6 00361 0541 00	aos  	pr6|241		k
						STATEMENT 1 ON LINE 67
	go to arglp;

000233  aa   777740 7100 04	tra  	-32,ic		000173
						STATEMENT 1 ON LINE 69
vct1:	i = index (path, " ");

000234  aa  000 003 124 500	scm  	(pr),(du),mask(000)
000235  aa  6 00100 00 0250	desc9a	pr6|64,168	path
000236  aa   040000 00 0001	desc9a	16384,1
000237  aa  6 00056 0001 00	arg  	pr6|46
000240  aa  6 00056 2361 00	ldq  	pr6|46
000241  aa   000002 6070 04	ttf  	2,ic		000243
000242  aa   000001 3360 07	lcq  	1,dl
000243  aa   000001 0760 07	adq  	1,dl
000244  aa  6 00360 7561 00	stq  	pr6|240		i
						STATEMENT 1 ON LINE 70
	call expand_path_ (addr (path), i, addr (dn), addr (en), ec);

000245  aa  6 00100 3735 00	epp7 	pr6|64		path
000246  aa  6 00446 6535 00	spri7	pr6|294
000247  aa  6 00152 3715 00	epp5 	pr6|106		dn
000250  aa  6 00450 6515 00	spri5	pr6|296
000251  aa  6 00224 3535 00	epp3 	pr6|148		en
000252  aa  6 00452 2535 00	spri3	pr6|298
000253  aa  6 00446 3521 00	epp2 	pr6|294
000254  aa  6 00456 2521 00	spri2	pr6|302
000255  aa  6 00360 3521 00	epp2 	pr6|240		i
000256  aa  6 00460 2521 00	spri2	pr6|304
000257  aa  6 00450 3521 00	epp2 	pr6|296
000260  aa  6 00462 2521 00	spri2	pr6|306
000261  aa  6 00452 3521 00	epp2 	pr6|298
000262  aa  6 00464 2521 00	spri2	pr6|308
000263  aa  6 00371 3521 00	epp2 	pr6|249		ec
000264  aa  6 00466 2521 00	spri2	pr6|310
000265  aa  6 00454 6211 00	eax1 	pr6|300
000266  aa   024000 4310 07	fld  	10240,dl
000267  aa  6 00044 3701 20	epp4 	pr6|36,*
000270  la  4 00020 3521 20	epp2 	pr4|16,*		expand_path_
000271  aa  0 00623 7001 00	tsx0 	pr0|403		call_ext_out
						STATEMENT 1 ON LINE 71
	if ec ^= 0 then do;

000272  aa  6 00371 2361 00	ldq  	pr6|249		ec
000273  aa   000033 6000 04	tze  	27,ic		000326
						STATEMENT 1 ON LINE 72
er:	     call com_err_ (ec, "dump_vct", "^a", path);

000274  aa   777544 2370 04	ldaq 	-156,ic		000040 = 144165155160 137166143164
000275  aa  6 00452 7571 00	staq 	pr6|298
000276  aa   136141 2350 03	lda  	48225,du
000277  aa  6 00433 7551 00	sta  	pr6|283
000300  aa  6 00371 3521 00	epp2 	pr6|249		ec
000301  aa  6 00472 2521 00	spri2	pr6|314
000302  aa  6 00452 3521 00	epp2 	pr6|298
000303  aa  6 00474 2521 00	spri2	pr6|316
000304  aa  6 00433 3521 00	epp2 	pr6|283
000305  aa  6 00476 2521 00	spri2	pr6|318
000306  aa  6 00100 3521 00	epp2 	pr6|64		path
000307  aa  6 00500 2521 00	spri2	pr6|320
000310  aa   777517 3520 04	epp2 	-177,ic		000027 = 404000000043
000311  aa  6 00502 2521 00	spri2	pr6|322
000312  aa   777514 3520 04	epp2 	-180,ic		000026 = 524000000010
000313  aa  6 00504 2521 00	spri2	pr6|324
000314  aa   777511 3520 04	epp2 	-183,ic		000025 = 524000000002
000315  aa  6 00506 2521 00	spri2	pr6|326
000316  aa   777506 3520 04	epp2 	-186,ic		000024 = 524000000250
000317  aa  6 00510 2521 00	spri2	pr6|328
000320  aa  6 00470 6211 00	eax1 	pr6|312
000321  aa   020000 4310 07	fld  	8192,dl
000322  aa  6 00044 3701 20	epp4 	pr6|36,*
000323  la  4 00026 3521 20	epp2 	pr4|22,*		com_err_
000324  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 73
	     return;

000325  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 74
	end;

						STATEMENT 1 ON LINE 75
	call hcs_$initiate (dn, en, "", 0, 1, vconsp, ec);

000326  aa  6 00512 4501 00	stz  	pr6|330
000327  aa   000001 2360 07	ldq  	1,dl
000330  aa  6 00513 7561 00	stq  	pr6|331
000331  aa  6 00152 3521 00	epp2 	pr6|106		dn
000332  aa  6 00516 2521 00	spri2	pr6|334
000333  aa  6 00224 3521 00	epp2 	pr6|148		en
000334  aa  6 00520 2521 00	spri2	pr6|336
000335  aa  6 00433 3521 00	epp2 	pr6|283
000336  aa  6 00522 2521 00	spri2	pr6|338
000337  aa  6 00512 3521 00	epp2 	pr6|330
000340  aa  6 00524 2521 00	spri2	pr6|340
000341  aa  6 00513 3521 00	epp2 	pr6|331
000342  aa  6 00526 2521 00	spri2	pr6|342
000343  aa  6 00372 3521 00	epp2 	pr6|250		vconsp
000344  aa  6 00530 2521 00	spri2	pr6|344
000345  aa  6 00371 3521 00	epp2 	pr6|249		ec
000346  aa  6 00532 2521 00	spri2	pr6|346
000347  aa   777455 3520 04	epp2 	-211,ic		000024 = 524000000250
000350  aa  6 00534 2521 00	spri2	pr6|348
000351  aa   777452 3520 04	epp2 	-214,ic		000023 = 524000000040
000352  aa  6 00536 2521 00	spri2	pr6|350
000353  aa   777447 3520 04	epp2 	-217,ic		000022 = 524000000000
000354  aa  6 00540 2521 00	spri2	pr6|352
000355  aa   777444 3520 04	epp2 	-220,ic		000021 = 404000000001
000356  aa  6 00542 2521 00	spri2	pr6|354
000357  aa   777441 3520 04	epp2 	-223,ic		000020 = 404000000002
000360  aa  6 00544 2521 00	spri2	pr6|356
000361  aa   777436 3520 04	epp2 	-226,ic		000017 = 464000000000
000362  aa  6 00546 2521 00	spri2	pr6|358
000363  aa   777444 3520 04	epp2 	-220,ic		000027 = 404000000043
000364  aa  6 00550 2521 00	spri2	pr6|360
000365  aa  6 00514 6211 00	eax1 	pr6|332
000366  aa   034000 4310 07	fld  	14336,dl
000367  aa  6 00044 3701 20	epp4 	pr6|36,*
000370  la  4 00030 3521 20	epp2 	pr4|24,*		hcs_$initiate
000371  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 76
	if vconsp = null then go to er;

000372  aa  6 00372 2371 00	ldaq 	pr6|250		vconsp
000373  aa   777443 6770 04	eraq 	-221,ic		000036 = 077777000043 000001000000
000374  aa  0 00460 3771 00	anaq 	pr0|304		= 077777000077 777777077077
000375  aa   777677 6000 04	tze  	-65,ic		000274
						STATEMENT 1 ON LINE 78
	if m = 0 then do;

000376  aa  6 00363 2361 00	ldq  	pr6|243		m
000377  aa   000135 6010 04	tnz  	93,ic		000534
						STATEMENT 1 ON LINE 79
	     call date_time_ ((clock_ ()), datstr);

000400  aa  6 00452 3521 00	epp2 	pr6|298
000401  aa  6 00436 2521 00	spri2	pr6|286
000402  aa  6 00434 6211 00	eax1 	pr6|284
000403  aa   004000 4310 07	fld  	2048,dl
000404  aa  6 00044 3701 20	epp4 	pr6|36,*
000405  la  4 00014 3521 20	epp2 	pr4|12,*		clock_
000406  aa  0 00623 7001 00	tsx0 	pr0|403		call_ext_out
000407  aa  6 00452 3521 00	epp2 	pr6|298
000410  aa  6 00436 2521 00	spri2	pr6|286
000411  aa  6 00354 3521 00	epp2 	pr6|236		datstr
000412  aa  6 00440 2521 00	spri2	pr6|288
000413  aa   777415 3520 04	epp2 	-243,ic		000030 = 410000000107
000414  aa  6 00442 2521 00	spri2	pr6|290
000415  aa   777401 3520 04	epp2 	-255,ic		000016 = 524000000020
000416  aa  6 00444 2521 00	spri2	pr6|292
000417  aa  6 00434 6211 00	eax1 	pr6|284
000420  aa   010000 4310 07	fld  	4096,dl
000421  aa  6 00044 3701 20	epp4 	pr6|36,*
000422  la  4 00024 3521 20	epp2 	pr4|20,*		date_time_
000423  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 80
	     call ioa_ ("^/Virtual Console Table - ^a^/", datstr);

000424  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
000425  aa   777475 00 0040	desc9a	-195,32		000121 = 136057126151
000426  aa  6 00434 00 0040	desc9a	pr6|284,32
000427  aa  6 00434 3521 00	epp2 	pr6|284
000430  aa  6 00456 2521 00	spri2	pr6|302
000431  aa  6 00354 3521 00	epp2 	pr6|236		datstr
000432  aa  6 00460 2521 00	spri2	pr6|304
000433  aa   777362 3520 04	epp2 	-270,ic		000015 = 524000000036
000434  aa  6 00462 2521 00	spri2	pr6|306
000435  aa   777361 3520 04	epp2 	-271,ic		000016 = 524000000020
000436  aa  6 00464 2521 00	spri2	pr6|308
000437  aa  6 00454 6211 00	eax1 	pr6|300
000440  aa   010000 4310 07	fld  	4096,dl
000441  aa  6 00044 3701 20	epp4 	pr6|36,*
000442  la  4 00022 3521 20	epp2 	pr4|18,*		ioa_
000443  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 82
	     call ioa_ ("lock:^15x^w", vcons_tab.lock);

000444  aa   777401 2350 04	lda  	-255,ic		000045 = 154157143153
000445  aa   777401 2360 04	ldq  	-255,ic		000046 = 072136061065
000446  aa  6 00434 7571 00	staq 	pr6|284
000447  aa   777400 2350 04	lda  	-256,ic		000047 = 170136167000
000450  aa  6 00436 7551 00	sta  	pr6|286
000451  aa  6 00434 3521 00	epp2 	pr6|284
000452  aa  6 00456 2521 00	spri2	pr6|302
000453  aa  6 00372 3521 20	epp2 	pr6|250,*		vcons_tab.lock
000454  aa  6 00460 2521 00	spri2	pr6|304
000455  aa   777337 3520 04	epp2 	-289,ic		000014 = 524000000013
000456  aa  6 00462 2521 00	spri2	pr6|306
000457  aa   777334 3520 04	epp2 	-292,ic		000013 = 514000000044
000460  aa  6 00464 2521 00	spri2	pr6|308
000461  aa  6 00454 6211 00	eax1 	pr6|300
000462  aa   010000 4310 07	fld  	4096,dl
000463  aa  6 00044 3701 20	epp4 	pr6|36,*
000464  la  4 00022 3521 20	epp2 	pr4|18,*		ioa_
000465  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 83
	     call ioa_ ("no_of_vcons:^8x^d", vcons_tab.no_of_vcons);

000466  aa   777366 2370 04	ldaq 	-266,ic		000054 = 156157137157 146137166143
000467  aa  6 00434 7571 00	staq 	pr6|284
000470  aa   777366 2370 04	ldaq 	-266,ic		000056 = 157156163072 136070170136
000471  aa  6 00436 7571 00	staq 	pr6|286
000472  aa   144000 2350 03	lda  	51200,du
000473  aa  6 00440 7551 00	sta  	pr6|288
000474  aa  6 00434 3521 00	epp2 	pr6|284
000475  aa  6 00456 2521 00	spri2	pr6|302
000476  aa  6 00372 3735 20	epp7 	pr6|250,*		vconsp
000477  aa  7 00001 3521 00	epp2 	pr7|1		vcons_tab.no_of_vcons
000500  aa  6 00460 2521 00	spri2	pr6|304
000501  aa   777311 3520 04	epp2 	-311,ic		000012 = 524000000021
000502  aa  6 00462 2521 00	spri2	pr6|306
000503  aa   777306 3520 04	epp2 	-314,ic		000011 = 404000000021
000504  aa  6 00464 2521 00	spri2	pr6|308
000505  aa  6 00454 6211 00	eax1 	pr6|300
000506  aa   010000 4310 07	fld  	4096,dl
000507  aa  6 00044 3701 20	epp4 	pr6|36,*
000510  la  4 00022 3521 20	epp2 	pr4|18,*		ioa_
000511  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 84
	     call ioa_ ("flags:^14x^w", vcons_tab.flags);

000512  aa   777330 2370 04	ldaq 	-296,ic		000042 = 146154141147 163072136061
000513  aa  6 00434 7571 00	staq 	pr6|284
000514  aa   777330 2350 04	lda  	-296,ic		000044 = 064170136167
000515  aa  6 00436 7551 00	sta  	pr6|286
000516  aa  6 00434 3521 00	epp2 	pr6|284
000517  aa  6 00456 2521 00	spri2	pr6|302
000520  aa  6 00372 3735 20	epp7 	pr6|250,*		vconsp
000521  aa  7 00002 3521 00	epp2 	pr7|2		vcons_tab.flags
000522  aa  6 00460 2521 00	spri2	pr6|304
000523  aa   777265 3520 04	epp2 	-331,ic		000010 = 524000000014
000524  aa  6 00462 2521 00	spri2	pr6|306
000525  aa   777266 3520 04	epp2 	-330,ic		000013 = 514000000044
000526  aa  6 00464 2521 00	spri2	pr6|308
000527  aa  6 00454 6211 00	eax1 	pr6|300
000530  aa   010000 4310 07	fld  	4096,dl
000531  aa  6 00044 3701 20	epp4 	pr6|36,*
000532  la  4 00022 3521 20	epp2 	pr4|18,*		ioa_
000533  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 85
	end;

						STATEMENT 1 ON LINE 87
	if l ^= 0 then do;

000534  aa  6 00362 2361 00	ldq  	pr6|242		l
000535  aa   000007 6000 04	tze  	7,ic		000544
						STATEMENT 1 ON LINE 88
	     srch (l) = "";

000536  aa   000003 7360 00	qls  	3
000537  aa  6 00224 3735 06	epp7 	pr6|148,ql	srch
000540  aa  040 100 100 400	mlr  	(),(pr),fill(040)
000541  aa   000000 00 0000	desc9a	0,0
000542  aa  7 00000 00 0040	desc9a	pr7|0,32		srch
						STATEMENT 1 ON LINE 89
	     go to pvv;

000543  aa   000003 7100 04	tra  	3,ic		000546
						STATEMENT 1 ON LINE 90
	end;

						STATEMENT 1 ON LINE 91
	if m = 0 then do;

000544  aa  6 00363 2361 00	ldq  	pr6|243		m
000545  aa   000027 6010 04	tnz  	23,ic		000574
						STATEMENT 1 ON LINE 92
pvv:	     call ioa_ ("^/VIRTUAL CONSOLE: ^a^/", vcons_tab.star_entry.vcons);

000546  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
000547  aa   777327 00 0030	desc9a	-297,24		000075 = 136057126111
000550  aa  6 00434 00 0030	desc9a	pr6|284,24
000551  aa  6 00434 3521 00	epp2 	pr6|284
000552  aa  6 00456 2521 00	spri2	pr6|302
000553  aa  6 00372 3735 20	epp7 	pr6|250,*		vconsp
000554  aa  7 00004 3521 00	epp2 	pr7|4		vcons_tab.vcons
000555  aa  6 00460 2521 00	spri2	pr6|304
000556  aa   777231 3520 04	epp2 	-359,ic		000007 = 524000000027
000557  aa  6 00462 2521 00	spri2	pr6|306
000560  aa   777243 3520 04	epp2 	-349,ic		000023 = 524000000040
000561  aa  6 00464 2521 00	spri2	pr6|308
000562  aa  6 00454 6211 00	eax1 	pr6|300
000563  aa   010000 4310 07	fld  	4096,dl
000564  aa  6 00044 3701 20	epp4 	pr6|36,*
000565  la  4 00022 3521 20	epp2 	pr4|18,*		ioa_
000566  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 93
	     call pvcons (addr (vcons_tab.star_entry));

000567  aa  6 00372 3735 20	epp7 	pr6|250,*		vconsp
000570  aa  7 00004 3735 00	epp7 	pr7|4		vcons_tab.star_entry
000571  aa  6 00452 6535 00	spri7	pr6|298
000572  aa   000330 3520 04	epp2 	216,ic		001122 = 000002000000
000573  aa   000201 6700 04	tsp4 	129,ic		000774
						STATEMENT 1 ON LINE 94
	end;

						STATEMENT 1 ON LINE 96
	do i = 1 to vcons_tab.no_of_vcons;

000574  aa  6 00372 3735 20	epp7 	pr6|250,*		vconsp
000575  aa  7 00001 2361 00	ldq  	pr7|1		vcons_tab.no_of_vcons
000576  aa  6 00376 7561 00	stq  	pr6|254
000577  aa   000001 2360 07	ldq  	1,dl
000600  aa  6 00360 7561 00	stq  	pr6|240		i
000601  aa   000000 0110 03	nop  	0,du
000602  aa  6 00360 2361 00	ldq  	pr6|240		i
000603  aa  6 00376 1161 00	cmpq 	pr6|254
000604  aa   000100 6054 04	tpnz 	64,ic		000704
						STATEMENT 1 ON LINE 97
	     if ^vcons_tab.vcons (i).flags.inuse then go to skip;

000605  aa   000152 4020 07	mpy  	106,dl
000606  aa  6 00372 3735 20	epp7 	pr6|250,*		vconsp
000607  aa  7 00015 2351 06	lda  	pr7|13,ql		vcons_tab.inuse
000610  aa   400000 3150 03	cana 	131072,du
000611  aa   000071 6000 04	tze  	57,ic		000702
						STATEMENT 1 ON LINE 98
	     if m = 0 then go to pvv1;

000612  aa  6 00363 2361 00	ldq  	pr6|243		m
000613  aa   000035 6000 04	tze  	29,ic		000650
						STATEMENT 1 ON LINE 99
	     do n = 1 to m;

000614  aa  6 00377 7561 00	stq  	pr6|255
000615  aa   000001 2360 07	ldq  	1,dl
000616  aa  6 00364 7561 00	stq  	pr6|244		n
000617  aa   000000 0110 03	nop  	0,du
000620  aa  6 00364 2361 00	ldq  	pr6|244		n
000621  aa  6 00377 1161 00	cmpq 	pr6|255
000622  aa   000060 6054 04	tpnz 	48,ic		000702
						STATEMENT 1 ON LINE 100
		if vcons_tab.vcons (i).vcons = srch (n) then do;

000623  aa  6 00360 2361 00	ldq  	pr6|240		i
000624  aa   000152 4020 07	mpy  	106,dl
000625  aa   000000 6270 06	eax7 	0,ql
000626  aa  6 00364 2361 00	ldq  	pr6|244		n
000627  aa   000003 7360 00	qls  	3
000630  aa  6 00372 3735 20	epp7 	pr6|250,*		vconsp
000631  aa  7 00004 3735 17	epp7 	pr7|4,7		vcons_tab.vcons
000632  aa  6 00224 3715 06	epp5 	pr6|148,ql	srch
000633  aa  040 100 106 500	cmpc 	(pr),(pr),fill(040)
000634  aa  7 00000 00 0040	desc9a	pr7|0,32		vcons_tab.vcons
000635  aa  5 00000 00 0040	desc9a	pr5|0,32		srch
000636  aa  6 00513 7561 00	stq  	pr6|331
000637  aa   000006 6010 04	tnz  	6,ic		000645
						STATEMENT 1 ON LINE 101
		     srch (n) = "";

000640  aa  6 00224 3535 06	epp3 	pr6|148,ql	srch
000641  aa  040 100 100 400	mlr  	(),(pr),fill(040)
000642  aa   000000 00 0000	desc9a	0,0
000643  aa  3 00000 00 0040	desc9a	pr3|0,32		srch
						STATEMENT 1 ON LINE 102
		     go to pvv1;

000644  aa   000004 7100 04	tra  	4,ic		000650
						STATEMENT 1 ON LINE 103
		end;

						STATEMENT 1 ON LINE 104
	     end;

000645  aa  6 00364 0541 00	aos  	pr6|244		n
000646  aa   777752 7100 04	tra  	-22,ic		000620
						STATEMENT 1 ON LINE 105
	     go to skip;

000647  aa   000033 7100 04	tra  	27,ic		000702
						STATEMENT 1 ON LINE 107
pvv1:	     call ioa_ ("^/VIRTUAL CONSOLE: ^a^/", vcons_tab.vcons (i).vcons);

000650  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
000651  aa   777225 00 0030	desc9a	-363,24		000075 = 136057126111
000652  aa  6 00434 00 0030	desc9a	pr6|284,24
000653  aa  6 00360 2361 00	ldq  	pr6|240		i
000654  aa   000152 4020 07	mpy  	106,dl
000655  aa  6 00434 3521 00	epp2 	pr6|284
000656  aa  6 00456 2521 00	spri2	pr6|302
000657  aa  6 00372 3735 20	epp7 	pr6|250,*		vconsp
000660  aa  7 00004 3521 06	epp2 	pr7|4,ql		vcons_tab.vcons
000661  aa  6 00460 2521 00	spri2	pr6|304
000662  aa   777125 3520 04	epp2 	-427,ic		000007 = 524000000027
000663  aa  6 00462 2521 00	spri2	pr6|306
000664  aa   777137 3520 04	epp2 	-417,ic		000023 = 524000000040
000665  aa  6 00464 2521 00	spri2	pr6|308
000666  aa  6 00513 7561 00	stq  	pr6|331
000667  aa  6 00454 6211 00	eax1 	pr6|300
000670  aa   010000 4310 07	fld  	4096,dl
000671  aa  6 00044 3701 20	epp4 	pr6|36,*
000672  la  4 00022 3521 20	epp2 	pr4|18,*		ioa_
000673  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 108
	     call pvcons (addr (vcons_tab.vcons (i)));

000674  aa  6 00513 7271 00	lxl7 	pr6|331
000675  aa  6 00372 3735 20	epp7 	pr6|250,*		vconsp
000676  aa  7 00004 3735 17	epp7 	pr7|4,7		vcons_tab.vcons
000677  aa  6 00452 6535 00	spri7	pr6|298
000700  aa   000222 3520 04	epp2 	146,ic		001122 = 000002000000
000701  aa   000073 6700 04	tsp4 	59,ic		000774
						STATEMENT 1 ON LINE 110
skip:	end;

000702  aa  6 00360 0541 00	aos  	pr6|240		i
000703  aa   777677 7100 04	tra  	-65,ic		000602
						STATEMENT 1 ON LINE 112
	if m = 0 then call ioa_ ("^/End^/");

000704  aa  6 00363 2361 00	ldq  	pr6|243		m
000705  aa   000015 6010 04	tnz  	13,ic		000722
000706  aa   777126 2370 04	ldaq 	-426,ic		000034 = 136057105156 144136057000
000707  aa  6 00452 7571 00	staq 	pr6|298
000710  aa  6 00452 3521 00	epp2 	pr6|298
000711  aa  6 00436 2521 00	spri2	pr6|286
000712  aa   777074 3520 04	epp2 	-452,ic		000006 = 524000000007
000713  aa  6 00440 2521 00	spri2	pr6|288
000714  aa  6 00434 6211 00	eax1 	pr6|284
000715  aa   004000 4310 07	fld  	2048,dl
000716  aa  6 00044 3701 20	epp4 	pr6|36,*
000717  la  4 00022 3521 20	epp2 	pr4|18,*		ioa_
000720  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
000721  aa   000041 7100 04	tra  	33,ic		000762
						STATEMENT 1 ON LINE 113
	else do i = 1 to m;

000722  aa  6 00400 7561 00	stq  	pr6|256
000723  aa   000001 2360 07	ldq  	1,dl
000724  aa  6 00360 7561 00	stq  	pr6|240		i
000725  aa   000000 0110 03	nop  	0,du
000726  aa  6 00360 2361 00	ldq  	pr6|240		i
000727  aa  6 00400 1161 00	cmpq 	pr6|256
000730  aa   000032 6054 04	tpnz 	26,ic		000762
						STATEMENT 1 ON LINE 114
	     if srch (i) ^= "" then call ioa_ ("vcons ""^a"" not in vcons_tab", srch (i));

000731  aa   000003 7360 00	qls  	3
000732  aa  6 00224 3735 06	epp7 	pr6|148,ql	srch
000733  aa  040 004 106 500	cmpc 	(pr),(ic),fill(040)
000734  aa  7 00000 00 0040	desc9a	pr7|0,32		srch
000735  aa   000173 00 0000	desc9a	123,0		001126 = 052000000000
000736  aa  6 00513 7561 00	stq  	pr6|331
000737  aa   000021 6000 04	tze  	17,ic		000760
000740  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
000741  aa   777143 00 0034	desc9a	-413,28		000103 = 166143157156
000742  aa  6 00434 00 0034	desc9a	pr6|284,28
000743  aa  6 00434 3521 00	epp2 	pr6|284
000744  aa  6 00456 2521 00	spri2	pr6|302
000745  aa  6 00224 3521 06	epp2 	pr6|148,ql	srch
000746  aa  6 00460 2521 00	spri2	pr6|304
000747  aa   777036 3520 04	epp2 	-482,ic		000005 = 524000000033
000750  aa  6 00462 2521 00	spri2	pr6|306
000751  aa   777052 3520 04	epp2 	-470,ic		000023 = 524000000040
000752  aa  6 00464 2521 00	spri2	pr6|308
000753  aa  6 00454 6211 00	eax1 	pr6|300
000754  aa   010000 4310 07	fld  	4096,dl
000755  aa  6 00044 3701 20	epp4 	pr6|36,*
000756  la  4 00022 3521 20	epp2 	pr4|18,*		ioa_
000757  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 115
	end;

000760  aa  6 00360 0541 00	aos  	pr6|240		i
000761  aa   777745 7100 04	tra  	-27,ic		000726
						STATEMENT 1 ON LINE 116
	call hcs_$terminate_noname (vconsp, ec);

000762  aa  6 00372 3521 00	epp2 	pr6|250		vconsp
000763  aa  6 00436 2521 00	spri2	pr6|286
000764  aa  6 00371 3521 00	epp2 	pr6|249		ec
000765  aa  6 00440 2521 00	spri2	pr6|288
000766  aa  6 00434 6211 00	eax1 	pr6|284
000767  aa   010000 4310 07	fld  	4096,dl
000770  aa  6 00044 3701 20	epp4 	pr6|36,*
000771  la  4 00032 3521 20	epp2 	pr4|26,*		hcs_$terminate_noname
000772  aa  0 00623 7001 00	tsx0 	pr0|403		call_ext_out
						STATEMENT 1 ON LINE 117
	return;

000773  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 140
     end dump_vct;

BEGIN PROCEDURE pvcons
ENTRY TO pvcons                                             STATEMENT 1 ON LINE 119
pvcons:	proc (sp);

000774  aa  6 00402 6501 00	spri4	pr6|258
000775  aa  6 00404 2521 00	spri2	pr6|260
						STATEMENT 1 ON LINE 127
	     vcep = sp;

000776  aa  2 00002 3735 20	epp7 	pr2|2,*		sp
000777  aa  7 00000 3735 20	epp7 	pr7|0,*		sp
001000  aa  6 00374 6535 00	spri7	pr6|252		vcep
						STATEMENT 1 ON LINE 128
	     vstr = "inuse";

001001  aa   777031 2370 04	ldaq 	-487,ic		000032 = 151156165163 145000000000
001002  aa  6 00412 7571 00	staq 	pr6|266		vstr
001003  aa   000005 2360 07	ldq  	5,dl
001004  aa  6 00411 7561 00	stq  	pr6|265		vstr
						STATEMENT 1 ON LINE 129
	     call ioa_ ("^5xflags:^9x^a", vstr);

001005  aa   777043 2370 04	ldaq 	-477,ic		000050 = 136065170146 154141147163
001006  aa  6 00552 7571 00	staq 	pr6|362
001007  aa   777043 2370 04	ldaq 	-477,ic		000052 = 072136071170 136141000000
001010  aa  6 00554 7571 00	staq 	pr6|364
001011  aa  6 00552 3521 00	epp2 	pr6|362
001012  aa  6 00560 2521 00	spri2	pr6|368
001013  aa  6 00412 3521 00	epp2 	pr6|266		vstr
001014  aa  6 00562 2521 00	spri2	pr6|370
001015  aa   776767 3520 04	epp2 	-521,ic		000004 = 524000000016
001016  aa  6 00564 2521 00	spri2	pr6|372
001017  aa   776764 3520 04	epp2 	-524,ic		000003 = 530000000100
001020  aa  6 00566 2521 00	spri2	pr6|374
001021  aa  6 00556 6211 00	eax1 	pr6|366
001022  aa   010000 4310 07	fld  	4096,dl
001023  aa  6 00044 3701 20	epp4 	pr6|36,*
001024  la  4 00022 3521 20	epp2 	pr4|18,*		ioa_
001025  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 130
	     call ioa_ ("^5xno_of_dest:^4x^d^/", vcons.no_of_dest);

001026  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
001027  aa   777041 00 0030	desc9a	-479,24		000067 = 136065170156
001030  aa  6 00556 00 0030	desc9a	pr6|366,24
001031  aa  6 00556 3521 00	epp2 	pr6|366
001032  aa  6 00572 2521 00	spri2	pr6|378
001033  aa  6 00374 3735 20	epp7 	pr6|252,*		vcep
001034  aa  7 00010 3521 00	epp2 	pr7|8		vcons.no_of_dest
001035  aa  6 00574 2521 00	spri2	pr6|380
001036  aa   776744 3520 04	epp2 	-540,ic		000002 = 524000000025
001037  aa  6 00576 2521 00	spri2	pr6|382
001040  aa   776751 3520 04	epp2 	-535,ic		000011 = 404000000021
001041  aa  6 00600 2521 00	spri2	pr6|384
001042  aa  6 00570 6211 00	eax1 	pr6|376
001043  aa   010000 4310 07	fld  	4096,dl
001044  aa  6 00044 3701 20	epp4 	pr6|36,*
001045  la  4 00022 3521 20	epp2 	pr4|18,*		ioa_
001046  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 131
	     do k = 1 to vcons.no_of_dest;

001047  aa  6 00374 3735 20	epp7 	pr6|252,*		vcep
001050  aa  7 00010 2361 00	ldq  	pr7|8		vcons.no_of_dest
001051  aa  6 00432 7561 00	stq  	pr6|282
001052  aa   000001 2360 07	ldq  	1,dl
001053  aa  6 00410 7561 00	stq  	pr6|264		k
001054  aa  6 00410 2361 00	ldq  	pr6|264		k
001055  aa  6 00432 1161 00	cmpq 	pr6|282
001056  aa   000043 6054 04	tpnz 	35,ic		001121
						STATEMENT 1 ON LINE 133
		call ioa_ ("^10xdest ^d:^3x^4a ^a ^p", k,
		typer (vcons.dest (k).type), vcons.dest (k).dest, vcons.dest (k).queue_seg_ptr);

001057  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
001060  aa   777002 00 0030	desc9a	-510,24		000061 = 136061060170
001061  aa  6 00570 00 0030	desc9a	pr6|376,24
001062  aa  6 00410 2361 00	ldq  	pr6|264		k
001063  aa   000014 4020 07	mpy  	12,dl
001064  aa  6 00570 3521 00	epp2 	pr6|376
001065  aa  6 00604 2521 00	spri2	pr6|388
001066  aa  6 00410 3521 00	epp2 	pr6|264		k
001067  aa  6 00606 2521 00	spri2	pr6|390
001070  aa  6 00374 3735 20	epp7 	pr6|252,*		vcep
001071  aa  7 77776 7271 06	lxl7 	pr7|-2,ql		vcons.type
001072  aa  6 00044 3701 20	epp4 	pr6|36,*
001073  ia  4 00007 3521 17	epp2 	pr4|7,7		typer
001074  aa  6 00610 2521 00	spri2	pr6|392
001075  aa  7 00000 3521 06	epp2 	pr7|0,ql		vcons.dest
001076  aa  6 00612 2521 00	spri2	pr6|394
001077  aa  7 00010 3521 06	epp2 	pr7|8,ql		vcons.queue_seg_ptr
001100  aa  6 00614 2521 00	spri2	pr6|396
001101  aa   776700 3520 04	epp2 	-576,ic		000001 = 524000000030
001102  aa  6 00616 2521 00	spri2	pr6|398
001103  aa   776706 3520 04	epp2 	-570,ic		000011 = 404000000021
001104  aa  6 00620 2521 00	spri2	pr6|400
001105  aa   776673 3520 04	epp2 	-581,ic		000000 = 524000000004
001106  aa  6 00622 2521 00	spri2	pr6|402
001107  aa   776714 3520 04	epp2 	-564,ic		000023 = 524000000040
001110  aa  6 00624 2521 00	spri2	pr6|404
001111  aa   776706 3520 04	epp2 	-570,ic		000017 = 464000000000
001112  aa  6 00626 2521 00	spri2	pr6|406
001113  aa  6 00602 6211 00	eax1 	pr6|386
001114  aa   024000 4310 07	fld  	10240,dl
001115  la  4 00022 3521 20	epp2 	pr4|18,*		ioa_
001116  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 136
	     end;

001117  aa  6 00410 0541 00	aos  	pr6|264		k
001120  aa   777734 7100 04	tra  	-36,ic		001054
						STATEMENT 1 ON LINE 138
	end pvcons;

001121  aa  6 00402 6101 00	rtcd 	pr6|258
  END PROCEDURE pvcons
  END PROCEDURE dump_vct


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
