	COMPILATION LISTING OF SEGMENT file_system_meters
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 01/22/85  1515.8 mst Tue
	    Options: optimize list

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 /* format: style2,ind3 */
       10 
       11 /*
       12*
       13*   Last modified:
       14*
       15*   4/14/76 by R. Bratt for demand deactivate
       16*   10/17/76 by B. Greenberg for activations
       17*   12/20/78 by REM for MR7
       18*   10/08/80 by C. Hornig for new get_aste meters
       19*   01/26/81 by E. N. Kittlitz for makeknown_activations
       20*   03/10/81 by E. N. Kittlitz for new page skip counters & format
       21*            changed erroneous fixed bin dcls to proper length
       22*   07/15/81 by J. Bongiovanni for seg_fault_calls
       23*   03/26/82 by J. Bongiovanni for volmap_seg, cleanup format
       24*   11/08/82 by J. Bongiovanni for synch activations, force retries
       25*   84-01-19 by BIM for segment mover meters.
       26*   85-01-15 by Keith Loepere for covert channel meters.
       27**/
       28 
       29 file_system_meters:
       30 fsm:
       31    procedure options (separate_static);
       32 
       33       dcl	    argl		       fixed bin (21);
       34       dcl	    argp		       ptr;
       35       dcl	    argc		       fixed bin;
       36       dcl	    argx		       fixed bin;
       37       dcl	    code		       fixed bin (35);
       38       dcl	    faults	       float bin;
       39       dcl	    formatted_time	       char (10);
       40       dcl	    i		       float bin;
       41       dcl	    j		       fixed bin (35);
       42       dcl	    k		       float bin;
       43       dcl	    meter_time	       float bin;
       44       dcl	    meter_time_fixed       fixed bin (71);
       45       dcl	    seg_state_change_audit fixed bin (35);
       46       dcl	    seg_state_change_delay fixed bin (35);
       47       dcl	    sf		       fixed bin (35);
       48       dcl	    steps		       fixed bin (35);
       49       dcl	    stf		       fixed bin (35);
       50       dcl	    t0		       (0:3) fixed bin;
       51       dcl	    t1		       (0:3) fixed bin;
       52       dcl	    t2		       (0:3) fixed bin;
       53       dcl	    t3		       (0:3) float bin;
       54       dcl	    t4		       (0:3) fixed bin;
       55       dcl	    t5		       (0:3) float bin;
       56       dcl	    targ		       char (argl) based (argp);
       57       dcl	    unique	       fixed bin static init (0);
       58       dcl	    (as_ehs, as_level, as_init, aste_steps, as_skips, as_synch)
       59 			       fixed bin (35);
       60       dcl	    (deacts, deactas, acts, mkacts, sfacts, bkacts, sfcalls, synchacts)
       61 			       fixed bin (35);
       62       dcl	    (pagesw, briefsw, astsw, rsw)
       63 			       bit (1) init ("0"b);
       64       dcl	    (ps_wired, ps_used, ps_mod, ps_os, ps_fc_pin, ps_cl_pin, ps_skips)
       65 			       fixed bin (35);
       66       dcl	    (f_acts, f_as_skips, f_ps_skips)
       67 			       float bin;
       68       dcl	    (sstp1, sstp2, tcdp1, tcdp2)
       69 			       ptr static;
       70       dcl	    (a_sstp1, a_sstp2)     (1) ptr;
       71 
       72       dcl	    com_err_	       entry options (variable);
       73       dcl	    cu_$arg_count	       entry returns (fixed bin);
       74       dcl	    cu_$arg_ptr	       entry (fixed bin, ptr, fixed bin (21), fixed bin (35));
       75       dcl	    ioa_		       entry options (variable);
       76       dcl	    metering_util_$define_regions
       77 			       entry options (variable);
       78       dcl	    metering_util_$fill_buffers
       79 			       entry (fixed bin, fixed bin (71), char (*), (*) ptr, (*) ptr, fixed bin (35));
       80       dcl	    metering_util_$reset   entry (fixed bin, fixed bin (35));
       81       dcl	    error_table_$noarg     ext fixed bin;
       82       dcl	    error_table_$badopt    fixed bin (35) ext static;
       83 
       84       dcl	    (max, fixed, float)    builtin;
       85 
       86       if unique = 0
       87       then
       88          do;					/* initialize metering_util_ */
       89 	  call metering_util_$define_regions (unique, code, "sst_seg", 0, size (sst));
       90 	  if code ^= 0
       91 	  then go to error;
       92          end;
       93 
       94       argc = cu_$arg_count ();
       95       do argx = 1 to argc;
       96          call cu_$arg_ptr (argx, argp, argl, code);
       97          if code = error_table_$noarg | argl = 0
       98          then go to endarg;
       99          if targ = "-reset" | targ = "-rs"
      100          then rsw = "1"b;				/* set RESET switch */
      101          else if targ = "-page" | targ = "-pg"
      102          then pagesw = "1"b;				/* set PAGE switch */
      103          else if targ = "-ast"
      104          then astsw = "1"b;				/* set AST switch */
      105          else if targ = "-brief" | targ = "-bf"
      106          then briefsw = "1"b;				/* set BRIEF switch */
      107          else if targ = "-report_reset" | targ = "-rr"
      108          then rsw, astsw, pagesw = "1"b;
      109          else
      110 	  do;
      111 	     call com_err_ (error_table_$badopt, "file_system_meters", targ);
      112 	     return;
      113 	  end;
      114       end;
      115 
      116 endarg:
      117       if argc = 0
      118       then astsw, pagesw = "1"b;
      119       if briefsw & ^pagesw & ^astsw
      120       then astsw, pagesw = "1"b;
      121 
      122       call metering_util_$fill_buffers (unique, meter_time_fixed, formatted_time, a_sstp2, a_sstp1, code);
      123       if code ^= 0
      124       then go to error;
      125       sstp1 = a_sstp1 (1);				/* we've only got 1 element arrays, */
      126       sstp2 = a_sstp2 (1);				/* so move those pointers to handy places */
      127       meter_time = meter_time_fixed;			/* convert to floating point variable */
      128       call ioa_ ("^/Total metering time^-^a^/", formatted_time);
      129 
      130       if astsw
      131       then
      132          do;
      133 	  acts = sstp2 -> sst.activations - sstp1 -> sst.activations;
      134 	  mkacts = sstp2 -> sst.makeknown_activations - sstp1 -> sst.makeknown_activations;
      135 	  bkacts = sstp2 -> sst.backup_activations - sstp1 -> sst.backup_activations;
      136 	  synchacts = sstp2 -> synch_activations - sstp1 -> sst.synch_activations;
      137 	  sfacts = acts - mkacts - bkacts;
      138 	  f_acts = max (1, acts) / 1e2;		/* setup for percentages */
      139 
      140 	  call ioa_ ("^/^-^-   #^-     ATB");
      141 	  call ioa_ ("^/Activations    ^10d^12.3f sec.", acts, mtb_sec (acts));
      142 
      143 	  if sfacts ^= 0
      144 	  then call ioa_ ("   segfault    ^10d^12.3f sec. ^7.3f% of all", sfacts, mtb_sec (sfacts), sfacts / f_acts);
      145 
      146 	  if mkacts ^= 0
      147 	  then call ioa_ ("   makeknown   ^10d^12.3f sec. ^7.3f% of all", mkacts, mtb_sec (mkacts), mkacts / f_acts);
      148 
      149 	  if bkacts ^= 0
      150 	  then call ioa_ ("   backup      ^10d^12.3f sec. ^7.3f% of all", bkacts, mtb_sec (bkacts), bkacts / f_acts);
      151 
      152 	  j = sstp2 -> sst.dir_activations - sstp1 -> sst.dir_activations;
      153 	  if j ^= 0
      154 	  then call ioa_ ("   directories ^10d^12.3f sec. ^7.3f% of all", j, mtb_sec (j), j / f_acts);
      155 
      156 	  if synchacts ^= 0
      157 	  then call ioa_ ("   synch      ^10d^12.3f sec. ^7.3f% of all", synchacts, mtb_sec (synchacts),
      158 		  synchacts / f_acts);
      159 
      160 	  deacts = sstp2 -> sst.deact_count - sstp1 -> sst.deact_count;
      161 
      162 	  call ioa_ ("Deactivations  ^10d^12.3f sec.", deacts, mtb_sec (deacts));
      163 	  call ioa_ ("Demand deactivate");
      164 
      165 	  deactas = sstp2 -> sst.demand_deact_attempts - sstp1 -> sst.demand_deact_attempts;
      166 	  if deactas ^= 0
      167 	  then call ioa_ ("   attempts    ^10d^12.3f sec.", deactas, mtb_sec (deactas));
      168 
      169 	  j = sstp2 -> sst.demand_deactivations - sstp1 -> sst.demand_deactivations;
      170 	  if j ^= 0
      171 	  then call ioa_ ("   successes   ^10d^12.3f sec. ^7.3f%, ^7.3f% of total", j, mtb_sec (j),
      172 		  (j * 100.) / max (deactas, 1), (j * 100.) / max (deacts, 1));
      173 
      174 	  sf = sstp2 -> sst.total_sf + sstp2 -> sst.seg_fault_calls - sstp1 -> sst.total_sf
      175 	       - sstp1 -> sst.seg_fault_calls;
      176 	  call ioa_ ("Seg Faults     ^10d^12.3f sec.", sf, mtb_sec (sf));
      177 
      178 	  if sf > 0
      179 	  then
      180 	     do;
      181 	        j = sstp2 -> sst.total_sf - sstp1 -> sst.total_sf;
      182 	        call ioa_ ("   fault       ^10d^12.3f sec. ^7.3f% of Seg Faults", j, mtb_sec (j),
      183 		   float (j) * 1.0e2 / sf);
      184 	        j = sstp2 -> sst.seg_fault_calls - sstp1 -> sst.seg_fault_calls;
      185 	        call ioa_ ("   call        ^10d^12.3f sec. ^7.3f% of Seg Faults", j, mtb_sec (j),
      186 		   float (j) * 1.0e2 / sf);
      187 	        call ioa_ ("   activations ^10d^12.3f sec. ^7.3f% of Seg Faults", sfacts, mtb_sec (sfacts),
      188 		   float (sfacts) * 1.0e2 / sf);
      189 	     end;
      190 
      191 	  j = sstp2 -> sst.total_bf - sstp1 -> sst.total_bf;
      192 	  call ioa_ ("Bound Faults ^12d^12.3f sec.", j, mtb_sec (j));
      193 
      194 	  if ^briefsw
      195 	  then
      196 	     do;
      197 	        stf = sstp2 -> sst.setfaults_all - sstp1 -> sst.setfaults_all;
      198 	        call ioa_ ("Setfaults      ^10d^12.3f msec.", stf, mtb_msec (stf));
      199 
      200 	        if stf > 0
      201 	        then
      202 		 do;
      203 		    j = sstp2 -> sst.setfaults_acc - sstp1 -> sst.setfaults_acc;
      204 		    call ioa_ ("   access      ^10d^12.3f sec. ^7.3f% of setfaults", j, mtb_sec (j),
      205 		         float (j) * 1.0e2 / stf);
      206 		 end;
      207 
      208 	        j = sstp2 -> sst.updates - sstp1 -> sst.updates;
      209 	        call ioa_ ("ASTE Trickle   ^10d^12.3f sec.", j, mtb_sec (j));
      210 
      211 /**** Segment_mover meters */
      212 
      213 	        k = sstp2 -> sst.sgm_time - sstp1 -> sst.sgm_time;
      214 	        k = k / 1e3;			/* msec */
      215 	        j = sstp2 -> sst.sgm_pf - sstp1 -> sst.sgm_pf;
      216 	        i = (sstp2 -> sst.good_sgms + sstp2 -> sst.bad_sgms) - (sstp1 -> sst.good_sgms + sstp1 -> sst.bad_sgms);
      217 	        if i > 0
      218 	        then
      219 		 do;
      220 		    call ioa_ ("Segment moves  ^10d", i);
      221 		    call ioa_ ("   vcpu        ^12.3f", k);
      222 		    call ioa_ ("   good        ^10d", sstp2 -> sst.good_sgms - sstp1 -> sst.good_sgms);
      223 		    call ioa_ ("   bad         ^10d", sstp2 -> sst.bad_sgms - sstp1 -> sst.bad_sgms);
      224 		    call ioa_ ("   reads       ^10d", sstp2 -> sst.segmove_n_reads - sstp1 -> sst.segmove_n_reads);
      225 		    call ioa_ ("   max retries ^10d", sstp2 -> sst.segmove_max_tries - sstp1 -> sst.segmove_max_tries)
      226 		         ;
      227 		    call ioa_ ("   page_faults ^10d", sstp2 -> sst.sgm_pf - sstp1 -> sst.sgm_pf);
      228 		    call ioa_ ("   seg_faults  ^10d", sstp2 -> sst.sgm_sgft - sstp1 -> sst.sgm_sgft);
      229 		 end;
      230 
      231 	        aste_steps = sstp2 -> sst.stepsa - sstp1 -> sst.stepsa;
      232 	        call ioa_ ("Steps	     ^10d^12.3f msec.", aste_steps, mtb_msec (aste_steps));
      233 
      234 	        as_ehs = sstp2 -> sst.askipsehs - sstp1 -> sst.askipsehs;
      235 	        as_level = sstp2 -> sst.askipslevel - sstp1 -> sst.askipslevel;
      236 	        as_init = sstp2 -> sst.askipsinit - sstp1 -> sst.askipsinit;
      237 	        as_synch = sstp2 -> sst.synch_skips - sstp1 -> sst.synch_skips;
      238 
      239 	        as_skips = as_ehs + as_level + as_init + as_synch;
      240 
      241 	        call ioa_ ("Skips          ^10d^12.3f sec. ^7.3f% of Steps", as_skips, mtb_sec (as_skips),
      242 		   (as_skips * 1e2) / max (1, aste_steps));
      243 
      244 	        f_as_skips = max (as_skips, 1) / 1e2;	/* setup for percentages */
      245 
      246 	        if as_ehs ^= 0
      247 	        then call ioa_ ("   ehs         ^10d^12.3f sec. ^7.3f% of Skips", as_ehs, mtb_sec (as_ehs),
      248 		        as_ehs / f_as_skips);
      249 
      250 	        if as_level ^= 0
      251 	        then call ioa_ ("   mem         ^10d^12.3f sec. ^7.3f% of Skips", as_level, mtb_sec (as_level),
      252 		        as_level / f_as_skips);
      253 
      254 	        if as_init ^= 0
      255 	        then call ioa_ ("   init        ^10d^12.3f sec. ^7.3f% of Skips", as_init, mtb_sec (as_init),
      256 		        as_init / f_as_skips);
      257 
      258 	        if as_synch ^= 0
      259 	        then call ioa_ ("   synch       ^10d^12.3f sec. ^7.3f% of Skips", as_synch, mtb_sec (as_synch),
      260 		        as_synch / f_as_skips);
      261 
      262 	        j = sstp2 -> sst.asearches - sstp1 -> sst.asearches;
      263 	        call ioa_ ("Searches       ^10d^12.3f sec. ^[^7.3f Average cost^;^s^]", j, mtb_sec (j), (j > 0),
      264 		   float (sstp2 -> sst.acost - sstp1 -> sst.acost) / max (j, 1));
      265 	     end;
      266 
      267 	  j = sstp2 -> sst.cleanup_count - sstp1 -> sst.cleanup_count;
      268 	  k = sstp2 -> sst.cleanup_real_time - sstp1 -> sst.cleanup_real_time;
      269 	  k = k * 1e2 / max (1e0, meter_time);
      270 	  call ioa_ ("Cleanups^-^15d^12.3f sec. ^5.1f % of real time", j, mtb_sec (j), k);
      271 
      272 
      273 	  j = sstp2 -> sst.force_swrites - sstp1 -> sst.force_swrites;
      274 	  call ioa_ ("Force writes      ^7d^12.3f sec.", j, mtb_sec (j));
      275 	  if j ^= 0
      276 	  then
      277 	     do;					/* only print details if any fw */
      278 	        i = j * 1e3;
      279 	        j = sstp2 -> sst.fw_none - sstp1 -> sst.fw_none;
      280 	        i = i - j * 1e3;
      281 	        if j ^= 0
      282 	        then call ioa_ ("   without pwrites^7d^12.3f sec.", j, mtb_sec (j));
      283 
      284 	        j = sstp2 -> sst.force_pwrites - sstp1 -> sst.force_pwrites;
      285 	        if j ^= 0
      286 	        then call ioa_ ("   pages written ^8d^12.3f sec.", j, mtb_sec (j));
      287 
      288 	        j = sstp2 -> sst.force_updatevs - sstp1 -> sst.force_updatevs;
      289 	        if j ^= 0
      290 	        then call ioa_ ("   force updatev ^8d^12.3f sec.", j, mtb_sec (j));
      291 	        j = sstp2 -> sst.fw_retries - sstp1 -> sst.fw_retries;
      292 	        if j ^= 0
      293 	        then call ioa_ ("   force retries ^8d^12.3f sec.", j, mtb_sec (j));
      294 	     end;
      295 
      296 	  j = sstp2 -> sst.ast_locking_count - sstp1 -> sst.ast_locking_count;
      297 	  call ioa_ ("Lock AST       ^10d^12.3f sec.", j, mtb_sec (j));
      298 	  call ioa_ (" ");				/* Breakout AST lock meters */
      299 	  call ioa_ ("^-^- AVE/lock^-      %");
      300 
      301 	  k = sstp2 -> sst.ast_locked_total_time - sstp1 -> sst.ast_locked_total_time;
      302 	  j = sstp2 -> sst.ast_locking_count - sstp1 -> sst.ast_locking_count;
      303 
      304 	  if j > 0
      305 	  then i = 1e-3 * k / j;
      306 	  else i = 0e0;				/* ave msec locked */
      307 
      308 	  k = 1e2 * k / max (meter_time, 1e0);
      309 	  call ioa_ ("AST locked      ^9.3f msec.^6.1f", i, k);
      310 
      311 	  k = sstp2 -> sst.ast_lock_wait_time - sstp1 -> sst.ast_lock_wait_time;
      312 	  if j > 0e0
      313 	  then i = 1e-3 * k / j;
      314 	  else i = 0e0;				/* ave msec wait */
      315 
      316 	  k = 1e2 * k / max (meter_time, 1e0);
      317 	  call ioa_ ("AST lock waiting^9.3f msec.^6.1f", i, k);
      318 
      319 	  do j = 0 to 3;
      320 	     t0 (j) = sstp2 -> sst.pts (j);
      321 	     t1 (j) = sstp2 -> sst.asteps (j) - sstp1 -> sst.asteps (j);
      322 	     t2 (j) = sstp2 -> sst.aneedsize (j) - sstp1 -> sst.aneedsize (j);
      323 	     t3 (j) = float (t1 (j)) / max (1e0, float (t2 (j)));
      324 	     t4 (j) = fixed (sstp2 -> sst.no_aste (j));
      325 	     t5 (j) = (t4 (j) / max (1e0, t1 (j))) * meter_time * 1e-6;
      326 	  end;
      327 
      328 	  call ioa_ ("^/AST Sizes    ^10d^10d^10d^10d", t0 (0), t0 (1), t0 (2), t0 (3));
      329 	  call ioa_ ("Number       ^10d^10d^10d^10d", t4 (0), t4 (1), t4 (2), t4 (3));
      330 	  call ioa_ ("Need         ^10d^10d^10d^10d", t2 (0), t2 (1), t2 (2), t2 (3));
      331 	  call ioa_ ("Steps        ^10d^10d^10d^10d", t1 (0), t1 (1), t1 (2), t1 (3));
      332 	  call ioa_ ("Ave Steps    ^10.1f^10.1f^10.1f^10.1f", t3 (0), t3 (1), t3 (2), t3 (3));
      333 	  call ioa_ ("Lap Time(sec)^10.1f^10.1f^10.1f^10.1f", t5 (0), t5 (1), t5 (2), t5 (3));
      334          end;
      335 
      336       if pagesw
      337       then
      338          do;
      339 	  call ioa_ ("^/^-       #^-^-ATB^/");
      340 	  j, faults = sstp2 -> sst.needc - sstp1 -> sst.needc;
      341 
      342 	  call ioa_ ("Needc     ^10d^12.3f msec.", j, mtb_msec (j));
      343 
      344 	  j = sstp2 -> sst.ceiling - sstp1 -> sst.ceiling;
      345 	  if j ^= 0
      346 	  then call ioa_ ("Ceiling   ^10d^12.3f min.", j, mtb_sec (60 * j));
      347 
      348 	  j = sstp2 -> sst.claim_runs - sstp1 -> sst.claim_runs;
      349 	  if j ^= 0
      350 	  then call ioa_ ("Claim runs^10d^12.3f min.", j, mtb_sec (60 * j));
      351 
      352 	  if faults ^= 0e0
      353 	  then
      354 	     do;
      355 	        call ioa_ ("Ring 0 faults^-^12.3f %",
      356 		   float (sstp2 -> sst.ring_0_page_faults - sstp1 -> sst.ring_0_page_faults) * 1e2 / faults);
      357 	        call ioa_ ("PDIR faults^-^12.3f %",
      358 		   float (sstp2 -> sst.pdir_page_faults - sstp1 -> sst.pdir_page_faults) * 1e2 / faults);
      359 	        call ioa_ ("Level 2 faults^-^12.3f %",
      360 		   float (sstp2 -> sst.level_1_page_faults - sstp1 -> sst.level_1_page_faults) * 1e2 / faults);
      361 	        call ioa_ ("DIR faults^-^12.3f %",
      362 		   float (sstp2 -> sst.dir_page_faults - sstp1 -> sst.dir_page_faults) * 1e2 / faults);
      363 	        call ioa_ ("New Pages^-^-^12.3f %",
      364 		   float (sstp2 -> sst.new_pages - sstp1 -> sst.new_pages) * 1e2 / faults);
      365 
      366 	        i = (sstp2 -> sst.oopv - sstp1 -> sst.oopv);
      367 	        if i > 0
      368 	        then call ioa_ ("OOPV      ^10d^12.3f %", i, float (i) * 1e2 / faults);
      369 	     end;
      370 
      371 	  j = sstp2 -> sst.volmap_seg_page_faults - sstp2 -> sst.volmap_seg_page_faults;
      372 	  call ioa_ ("Volmap_seg^10d^12.3f msec.", j, mtb_msec (j));
      373 
      374 	  j = sstp2 -> sst.zero_pages - sstp1 -> sst.zero_pages;
      375 	  call ioa_ ("Zero pages^10d^12.3f msec.", j, mtb_msec (j));
      376 
      377 	  seg_state_change_delay = sstp2 -> sst.delayed_seg_state_chg - sstp1 -> sst.delayed_seg_state_chg;
      378 	  seg_state_change_audit = sstp2 -> sst.audit_seg_state_chg - sstp1 -> sst.audit_seg_state_chg;
      379 
      380 	  if seg_state_change_delay > 0 | seg_state_change_audit > 0
      381 	  then
      382 	     do;
      383 	        call ioa_ ("Seg state chg.");
      384 	        if seg_state_change_delay > 0
      385 	        then
      386 		 do;
      387 		    k = sstp2 -> sst.seg_state_chg_delay - sstp1 -> sst.seg_state_chg_delay;
      388 		    i = 1e-6 * k / seg_state_change_delay;
      389 		    call ioa_ ("   delayed^10d^12.3f sec.  ^7.3f sec. avg. delay", seg_state_change_delay,
      390 		         mtb_sec (seg_state_change_delay), i);
      391 		 end;
      392 	        if seg_state_change_audit > 0
      393 	        then call ioa_ ("   audited^10d^12.3f sec.", seg_state_change_audit, mtb_sec (seg_state_change_audit));
      394 	     end;
      395 
      396 	  steps = sstp2 -> sst.steps - sstp1 -> sst.steps;
      397 	  j = steps / sstp2 -> sst.nused;
      398 	  call ioa_ ("Laps      ^10d^12.3f sec.", j, mtb_sec (j));
      399 
      400 	  if ^briefsw
      401 	  then
      402 	     do;
      403 	        call ioa_ ("Steps	^10d^12.3f msec.", steps, mtb_msec (steps));
      404 	        ps_wired = sstp2 -> sst.skipw - sstp1 -> sst.skipw;
      405 	        ps_used = sstp2 -> sst.skipu - sstp1 -> sst.skipu;
      406 	        ps_mod = sstp2 -> sst.skipm - sstp1 -> sst.skipm;
      407 	        ps_os = sstp2 -> sst.skipos - sstp1 -> sst.skipos;
      408 	        ps_fc_pin = sstp2 -> sst.fc_skips_pinned - sstp1 -> sst.fc_skips_pinned;
      409 	        ps_cl_pin = sstp2 -> sst.cl_skips_pinned - sstp1 -> sst.cl_skips_pinned;
      410 	        ps_skips = ps_wired + ps_used + ps_mod + ps_os + ps_fc_pin + ps_cl_pin;
      411 
      412 	        call ioa_ ("Skip      ^10d^12.3f msec. ^7.3f% of Steps", ps_skips, mtb_msec (ps_skips),
      413 		   (ps_skips * 1e2) / max (1, steps));
      414 
      415 	        f_ps_skips = max (ps_skips, 1) / 1e2;	/* setup for percentages */
      416 	        if ps_wired ^= 0
      417 	        then call ioa_ ("   wired  ^10d^12.3f msec. ^7.3f% of Skip", ps_wired, mtb_msec (ps_wired),
      418 		        ps_wired / f_ps_skips);
      419 
      420 	        if ps_used ^= 0
      421 	        then call ioa_ ("   used   ^10d^12.3f msec. ^7.3f% of Skip", ps_used, mtb_msec (ps_used),
      422 		        ps_used / f_ps_skips);
      423 
      424 	        if ps_mod ^= 0
      425 	        then call ioa_ ("   mod    ^10d^12.3f msec. ^7.3f% of Skip", ps_mod, mtb_msec (ps_mod),
      426 		        ps_mod / f_ps_skips);
      427 
      428 	        if ps_os ^= 0
      429 	        then call ioa_ ("   os     ^10d^12.3f msec. ^7.3f% of Skip", ps_os, mtb_msec (ps_os),
      430 		        ps_os / f_ps_skips);
      431 
      432 	        if ps_fc_pin ^= 0
      433 	        then call ioa_ ("   fc pin ^10d^12.3f msec. ^7.3f% of Skip", ps_fc_pin, mtb_msec (ps_fc_pin),
      434 		        ps_fc_pin / f_ps_skips);
      435 
      436 	        if ps_cl_pin ^= 0
      437 	        then call ioa_ ("   cl pin ^10d^12.3f msec. ^7.3f% of Skip", ps_cl_pin, mtb_msec (ps_cl_pin),
      438 		        ps_cl_pin / f_ps_skips);
      439 	     end;
      440 
      441 	  call ioa_ ("^/^d pages, ^d wired.", sstp2 -> sst.nused, sstp2 -> sst.wired);
      442 	  call ioa_ ("Average steps ^12.3f", steps / max (faults, 1e0));
      443          end;
      444 
      445       if rsw
      446       then call metering_util_$reset (unique, code);
      447       if code ^= 0
      448       then go to error;
      449 
      450       call ioa_ (" ");
      451       return;
      452 
      453 error:
      454       call com_err_ (code, "file_system_meters");
      455       return;
      456 
      457 
      458 mtb_sec:
      459    proc (x) returns (float bin);
      460 
      461       dcl	    x		       fixed bin (35);
      462 
      463       if x = 0
      464       then return (0e0);
      465       else return (meter_time / (x * 1e6));
      466 
      467    end;
      468 
      469 
      470 mtb_msec:
      471    proc (x) returns (float bin);
      472 
      473       dcl	    x		       fixed bin (35);
      474 
      475       if x = 0
      476       then return (0e0);
      477       else return (meter_time / (x * 1e3));
      478 
      479    end;
      480 
  1     1 /*   BEGIN INCLUDE FILE ... sst.incl.pl1 ... January 1971 */
  1     2 /* Note: This include file has an ALM counterpart made with cif. Keep it up to date */
  1     3 /* Deleted paging device info and added pc segmove info, Benson Margulies 84-01-03 */
  1     4 /* Added covert channel meters, Keith Loepere 85-01-08. */
  1     5 
  1     6 dcl  sst_seg$ external;
  1     7 dcl  sstp ptr;
  1     8 
  1     9 dcl 1 sst based (sstp) aligned,
  1    10     2 space (8) fixed bin,				/* empty space to watch for bugs */
  1    11 
  1    12 /* SST HEADER */
  1    13 
  1    14     2 pre_page_time fixed bin (71),			/* total time spent pre-paging */
  1    15     2 post_purge_time fixed bin (71),			/* total time spent post-purging */
  1    16     2 post_in_core fixed bin,				/* total pages in core (and in list) at purge time */
  1    17     2 thrashing fixed bin,				/* meter of thrashing being done on system */
  1    18     2 npfs_misses fixed bin,				/* meter of times npfs was on when pre-paging */
  1    19     2 salv fixed bin,				/* flag which is ^=0 if and only if salvaging */
  1    20 
  1    21     2 ptl bit (36),					/* global page table loop lock */
  1    22     2 astl bit (36),				/* global ast allocation block lock */
  1    23     2 astl_event bit (36),				/* event used when waiting for AST lock */
  1    24     2 astl_notify_requested bit (1) aligned,		/* flag to notify AST lock */
  1    25     2 nused fixed bin,				/* number of pages on used list */
  1    26     2 ptwbase fixed bin (24),				/* absolute address of page table array */
  1    27     2 tfreep ptr,					/* pointer to first trailer on free list */
  1    28 
  1    29     2 astap ptr,					/* aste array pointer */
  1    30     2 ptl_wait_ct fixed bin,				/* pxss: number is >= # of processes waiting to ptl */
  1    31     2 astsize fixed bin,				/* size of an AST entry */
  1    32     2 cmesize fixed bin,				/* size of a CME entry */
  1    33     2 root_astep ptr,				/* pointer to the root AST entry */
  1    34 
  1    35     2 pts (0: 3) fixed bin,				/* array of page table sizes */
  1    36     2 level (0:3),					/* per-list information about ASTE's */
  1    37       3 (ausedp, no_aste) bit (18) unaligned,		/* used list and count of number of entries */
  1    38 
  1    39     2 (atempp, atempp1) bit (18) unal,			/* temp seg list pointer */
  1    40     2 dm_enabled bit (1) aligned,			/* ON => journal seg exists */
  1    41     2 (ainitp, ainitp1) bit (18) unal,			/* init seg list pointer */
  1    42     2 strsize fixed bin,				/* Trailer size in words. */
  1    43 
  1    44 /* CORE MAP HEADER */
  1    45 
  1    46     2 cmp ptr,					/* pointer to start of core map */
  1    47     2 usedp bit (18),				/* pointer to first used core block */
  1    48     2 wtct fixed bin,				/* count of pages being written */
  1    49 
  1    50     2 startp bit (18),				/* pointer to solid page for lap counting (fsdct) */
  1    51     2 removep bit (18),				/* pointer to list of pages being removed from use */
  1    52 						/* MISC */
  1    53 
  1    54     2 double_write fixed bin,				/* trigger for store through scheme */
  1    55 						/* 0 = no double writes,
  1    56*						   1 = all non-pd pages get written,
  1    57*						   2 = all directories get written */
  1    58     2 temp_w_event bit (36) aligned,			/* wait event for temp wiring lock */
  1    59     2 root_pvtx fixed bin,				/* pvtx or rpv */
  1    60     2 nolock bit (1) aligned,				/* if on, don't lock ptl on interrupts */
  1    61 
  1    62     2 fc_skips_pinned fixed bin (35),			/* number of skips over pinned page in find_core */
  1    63     2 cl_skips_pinned fixed bin (35),			/* number of skips over pinned page in claim_mod_core */
  1    64     2 ast_ht_ptr ptr,				/* AST hast table pointer */
  1    65     2 ast_ht_n_buckets fixed bin,			/* number of buckets in AST hash table */
  1    66     2 ast_ht_uid_mask bit (36) aligned,			/* mask to strip out low-order bits of uid */
  1    67     2 meter_ast_locking fixed bin,			/* non-zero enables AST lock meters */
  1    68     2 checksum_filemap fixed bin,			/* non-zero enables filemap checksumming */
  1    69 
  1    70     2 page_read_errors fixed bin,			/* read errors posted to page control */
  1    71     2 page_write_errors fixed bin,			/* write errors posted to page control */
  1    72 
  1    73     2 cycle_pv_allocation fixed bin,			/* flag to cycle VTOCE allocation among PVs */
  1    74 
  1    75     2 n_trailers fixed bin,				/* Number of trailer entries in str_seg */
  1    76     2 synch_activations fixed bin (35),			/* Activation attempts for synchronized segs */
  1    77     2 synch_skips fixed bin (35),			/* get_aste skips because not synchronized */
  1    78 
  1    79     2 lock_waits fixed bin,				/* Number of times we had to wait for a lock */
  1    80     2 total_locks_set fixed bin,			/* Total number of block locks set */
  1    81     2 pdir_page_faults fixed bin,			/* total page faults off >pdd */
  1    82     2 level_1_page_faults fixed bin,			/* total page faults in sys libes */
  1    83     2 dir_page_faults fixed bin,			/* Total page faults on directories */
  1    84     2 ring_0_page_faults fixed bin,			/* page faults in ring 0 */
  1    85     2 rqover fixed bin (35),				/* errcode for record quota overflow */
  1    86     2 pc_io_waits fixed bin,				/* Number of times pc had to wait on io */
  1    87 
  1    88 
  1    89 /*  The following (until pdmap) used to be the 'cnt' in cnt.incl.pl1 */
  1    90 
  1    91     2 steps fixed bin,				/* number of steps taken around used list */
  1    92     2 needc fixed bin,				/* number of times core page needed */
  1    93     2 ceiling fixed bin,				/* number of times ceiling hit */
  1    94     2 ctwait fixed bin,				/* number of times write counter was full */
  1    95     2 wired fixed bin,				/* number of pages wired by pc */
  1    96     2 laps fixed bin,				/* number of times around used list */
  1    97     2 skipw fixed bin,				/* number of pages skiped because they were wired */
  1    98     2 skipu fixed bin,				/* because of being used */
  1    99 
  1   100     2 skipm fixed bin,				/* because of being modified */
  1   101     2 skipos fixed bin,				/* because out of service */
  1   102     2 aused fixed bin,				/* number of AST entries on used list */
  1   103     2 damaged_ct fixed bin,				/* count of segments that system damaged */
  1   104     2 deact_count fixed bin,				/* count of deactivations */
  1   105     2 demand_deact_attempts fixed bin,			/* user requested deactivations */
  1   106     2 demand_deactivations fixed bin,			/* user instigated deactivations */
  1   107 
  1   108     2 reads (8) fixed bin,				/* number of reads for each did */
  1   109     2 writes (8) fixed bin,				/* number of writes for each did */
  1   110 
  1   111     2 short_pf_count fixed bin,			/* count of page faults on out of service pages */
  1   112     2 loop_locks fixed bin,				/* count of times locked PTL */
  1   113     2 loop_lock_time fixed bin (71),			/* time spent looping on PTL */
  1   114     2 cpu_sf_time fixed bin (71),			/* cpu time spent in seg_fault */
  1   115     2 total_sf_pf fixed bin,				/* total page faults while in seg_fault */
  1   116     2 total_sf fixed bin,				/* total number of seg_faults */
  1   117     2 pre_page_size fixed bin,			/* total pre-pagings expected */
  1   118     2 post_list_size fixed bin,
  1   119     2 post_purgings fixed bin,			/* total number of post-purgings */
  1   120     2 post_purge_calls fixed bin,			/* total number of calls to post-purge */
  1   121     2 pre_page_calls fixed bin,			/* total number of calls tp pre-page */
  1   122     2 pre_page_list_size fixed bin,
  1   123     2 pre_page_misses fixed bin,			/* total number of misses in pre-page list */
  1   124     2 pre_pagings fixed bin,				/* total number of pre-pagings */
  1   125 
  1   126 /*  TEMPORARY WIRED PROCEDURE INFO  */
  1   127 
  1   128     2 wire_proc_data (8) fixed bin (71),		/* data for wire_proc */
  1   129 
  1   130 /* MAIN MEMORY USAGE INFORMATION */
  1   131 
  1   132     2 abs_wired_count fixed bin,			/* count of abs-wired pages */
  1   133     2 system_type fixed bin,				/* ADP_SYSTEM or L68_SYSTEM */
  1   134     2 wired_copies fixed bin,				/* number of times a wired page was copied */
  1   135     2 recopies fixed bin,				/* number of times recopied because modified */
  1   136     2 first_core_block fixed bin,			/* core map index for first block of core */
  1   137     2 last_core_block fixed bin,			/* core map index for last block of core */
  1   138     2 fw_retries fixed bin (35),			/* force_write retries due to ASTE move */
  1   139     2 pvhtp ptr unaligned,				/* ptr to PV hold table for debugging */
  1   140 
  1   141 /*  AST METERS  */
  1   142 
  1   143     2 askipsize (0: 3) fixed bin,			/* array of skips because wrong AST size */
  1   144     2 aneedsize (0: 3) fixed bin,			/* array of times needed each size */
  1   145 
  1   146     2 stepsa fixed bin,				/* count of steps taken looking for an AST entry */
  1   147     2 askipsehs fixed bin,				/* count of skips because EHS was ON */
  1   148     2 asearches fixed bin,				/* count of full searches made */
  1   149     2 askipslevel fixed bin,				/* count of skips because pages were in core */
  1   150     2 askipsinit fixed bin,				/* count of times turned OFF init switch */
  1   151     2 acost fixed bin,				/* cumulative cost of deactivations */
  1   152     2 askipslock fixed bin,				/* count of skips because couldn't lock parent */
  1   153     2 askipdius fixed bin,				/* count of skips because DIUS was on */
  1   154 
  1   155     2 alaps fixed bin,				/* lap counter for AST list */
  1   156     2 updates fixed bin,				/* calls to updateb */
  1   157     2 setfaults_all fixed bin,			/* setfaults done to the entire SDW */
  1   158     2 setfaults_acc fixed bin,			/* setfaults done to the access field */
  1   159     2 total_bf fixed bin,				/* count of bound faults */
  1   160     2 total_bf_pf fixed bin,				/* page faults during bound faults */
  1   161     2 cpu_bf_time fixed bin (71),			/* cpu time spent in bound fault */
  1   162 
  1   163     2 asteps (0: 3) fixed bin,			/* per-size AST step counters */
  1   164 
  1   165     2 ast_locked_at_time fixed bin (71),		/* clock reading when ast last locked */
  1   166     2 ast_locked_total_time fixed bin (71),		/* total real time the ast lock was locked */
  1   167     2 ast_lock_wait_time fixed bin (71),		/* total real time of all waiting on ast lock */
  1   168     2 ast_locking_count fixed bin (35),			/* number of times ast was locked */
  1   169     2 cleanup_count fixed bin,			/* calls to pc$cleanup */
  1   170     2 cleanup_real_time fixed bin (71),			/* total real time in pc$cleanup */
  1   171 
  1   172 /* PRE-PAGE METERS */
  1   173 
  1   174     2 tree_count (0: 63) fixed bin,			/* counters for pre-page decisions */
  1   175 
  1   176     2 pp_meters (0: 63) fixed bin,			/* counters for measuring pre-page success */
  1   177 
  1   178 
  1   179     2 wusedp bit (18) aligned,			/* Relative cmep to next cme for writing */
  1   180     2 write_hunts fixed bin,				/* Times claim_mod_core invoked */
  1   181     2 claim_skip_cme fixed bin,			/* Times unacceptable cme found by c_m_c */
  1   182     2 claim_skip_free fixed bin,			/* Times free cme passed by c_m_c */
  1   183     2 claim_notmod fixed bin,				/* Times c_m_c passed pure page */
  1   184     2 claim_passed_used fixed bin,			/* Times used page seen */
  1   185     2 claim_skip_ptw fixed bin,			/* Times c_m_c saw unacceptable ptw */
  1   186     2 claim_writes fixed bin,				/* Writes queued by c_m_c */
  1   187     2 claim_steps fixed bin,				/* Steps passed in core claiming */
  1   188     2 pre_seeks_failed fixed bin,			/* counter of times quick find_core_ failed */
  1   189     2 resurrections fixed bin,			/* nulled addresses reinstated */
  1   190     2 volmap_seg_page_faults fixed bin (35),		/* Pseudo-page faults on volmap_seg */
  1   191     2 oopv fixed bin,				/* out-of-physical-volume page faults */
  1   192     2 dblw_resurrections fixed bin,			/* addresses resurrected by double-writing */
  1   193     2 sgm_time fixed bin (71),			/* Time (VCPU) in seg mover */
  1   194     2 sgm_pf fixed bin,				/* Page faults in seg moving */
  1   195     2 bad_sgms fixed bin,				/* Seg moves that failed */
  1   196     2 sgm_sgft fixed bin,				/* Seg faults in seg moves */
  1   197     2 good_sgms fixed bin,				/* Seg moves that completed */
  1   198     2 claim_runs fixed bin,				/* Times claim_mod_core had to run */
  1   199     2 activations fixed bin,				/* total count of activations */
  1   200     2 dir_activations fixed bin,			/* count of directory activations */
  1   201     2 hedge_updatevs fixed bin,			/* call-in updatevs */
  1   202     2 hedge_writes fixed bin,				/* call in core flush writes */
  1   203     2 evict_recover_data,				/* see evict_page.alm */
  1   204      3 evict_ptp bit (18) unal,			/* ptp of page being moved */
  1   205      3 evict_phmbit bit (18) unal,			/* N/Z if page was mod */
  1   206 
  1   207 /* Data for metering force_write facility 08/19/78 */
  1   208 
  1   209     2 force_swrites fixed bin,			/* Calls on segments to force write */
  1   210     2 force_pwrites fixed bin,			/* Mod pages so written */
  1   211     2 fw_none fixed bin,				/* Force write wrote none */
  1   212     2 force_updatevs fixed bin,			/* Updatev's so forced */
  1   213 
  1   214     2 pf_unlock_ptl_time fixed bin (71),		/* Time unlocking ptln page faults */
  1   215     2 pf_unlock_ptl_meterings fixed bin,
  1   216 
  1   217     2 makeknown_activations fixed bin (35),		/* activations at makeknown time */
  1   218     2 backup_activations fixed bin (35),		/* activations for backup */
  1   219     2 metering_flags aligned,				/* small chunks of misc. information */
  1   220       3 activate_activated bit (1) unal,		/* ON => last call to activate entry actually activated something */
  1   221       3 pad bit (35) unal,
  1   222     2 seg_fault_calls fixed bin (35),			/* number calls to seg_fault for explicit activation */
  1   223 
  1   224 /* METERS FOR STACK TRUNCATION */
  1   225 
  1   226     2 (stk_truncate_should_didnt,			/* counts */
  1   227        stk_truncate_should_did,
  1   228        stk_truncate_shouldnt_didnt,
  1   229        stk_truncate_shouldnt_did) fixed bin (35),
  1   230     2 stk_pages_truncated fixed bin (35),
  1   231     2 stk_pages_truncated_in_core fixed bin (35),
  1   232 
  1   233 /* SUPPORT FOR PC SEGMOVES */
  1   234 
  1   235     2 segmove_lock aligned,
  1   236       3 pid bit (36) aligned,
  1   237       3 event bit (36) aligned,
  1   238       3 notify bit (1) aligned,
  1   239     2 segmove_io_limit fixed bin, /* max read aheads */
  1   240     2 segmove_found_synch fixed bin (35), /* cme.synch_held */
  1   241     2 segmove_synch_disappeared fixed bin (35), /* page$check_synch fixed */
  1   242     2 segmove_n_reads fixed bin (35), /* total IO's queued. */
  1   243     2 segmove_max_tries fixed bin (35), /* max times through the read loop */
  1   244 
  1   245     2 segmove_astep ptr unal,				/* if non-null, addresses to be rescued from old_addr_astep */
  1   246     2 segmove_pvtx fixed bin,				/* if segmove_astep nonnull, valid */
  1   247     2 segmove_vtocx fixed bin,			/* ditto */
  1   248     2 segmove_old_addr_astep ptr unaligned,		/* ditto */
  1   249     2 segmove_new_addr_astep ptr unaligned,		/* if non-null, the addresses must be deposited. */
  1   250 
  1   251     2 mod_during_write fixed bin,			/* times a page was modified while it was being written */
  1   252     2 zero_pages fixed bin,				/* count of pages truncated because all zero */
  1   253     2 trace_sw aligned,				/* tracing control flags */
  1   254       3 pad_trace bit (32) unaligned,
  1   255       3 pc_trace_pf bit (1) unaligned,			/* tracing for page faults, done, etc. */
  1   256       3 tty_trace bit (1) unaligned,
  1   257       3 pc_trace bit (1) unaligned,			/* flag used by page control primitives */
  1   258       3 sc_trace bit (1) unaligned,			/* flag used by segment control primitives */
  1   259     2 new_pages fixed bin,				/* newly created pages */
  1   260     2 ast_track bit (1) aligned,			/* "1"b => keep SST name table */
  1   261     2 dirlock_writebehind fixed bin,			/* =1 to flush modified dir pages in lock$unlock */
  1   262     2 write_limit fixed bin,				/* Max # of outstanding writes by page control */
  1   263     2 crash_test_segmove bit (1) aligned,		/* crash in mid-segmove */
  1   264     2 delayed_seg_state_chg fixed bin (35),		/* count of times a process was delayed in affecting a seg state */
  1   265     2 audit_seg_state_chg fixed bin (35),		/* count of times a process was audited for excessive seg state changes */
  1   266     2 seg_state_chg_delay fixed bin (52),		/* total times processes were delayed for covert channels */
  1   267     2 seg_state_change_limit fixed bin,			/* number of events over which we determine covert channel bandwidth */
  1   268     2 max_seg_state_change_bw fixed bin,		/* maximum bps for covert channel before we delay */
  1   269     2 audit_seg_state_change_bw fixed bin,		/* maximum bps for covert channel before we audit */
  1   270     2 seg_state_chg_operation bit (36) aligned,		/* access_operation_ value for excessive_seg_state_chg */
  1   271     2 pad4 (126) bit (36) aligned;			/* padding to 512 words (1000)8 */
  1   272 
  1   273 /* END INCLUDE FILE sst.incl.pl1 */
      481 
      482 
      483    end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    01/22/85  1306.6  file_system_meters.pl1            >spec>temp>41-5>file_system_meters.pl1
481          1    01/22/85  1321.6  sst.incl.pl1                      >spec>temp>41-5>sst.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
a_sstp1                         000212 automatic       pointer                  array dcl 70 set ref 122* 125
a_sstp2                         000214 automatic       pointer                  array dcl 70 set ref 122* 126
acost                   241            based           fixed bin(17,0)          level 2 dcl 1-9 ref 263 263
activations             517            based           fixed bin(17,0)          level 2 dcl 1-9 ref 133 133
acts                            000167 automatic       fixed bin(35,0)          dcl 60 set ref 133* 137 138 141* 141* 141*
aneedsize               230            based           fixed bin(17,0)          array level 2 dcl 1-9 ref 322 322
argc                            000104 automatic       fixed bin(17,0)          dcl 35 set ref 94* 95 116
argl                            000100 automatic       fixed bin(21,0)          dcl 33 set ref 96* 97 99 99 101 101 103 105 105 107
                                                                                  107 111 111
argp                            000102 automatic       pointer                  dcl 34 set ref 96* 99 99 101 101 103 105 105 107 107
                                                                                  111
argx                            000105 automatic       fixed bin(17,0)          dcl 36 set ref 95* 96*
as_ehs                          000157 automatic       fixed bin(35,0)          dcl 58 set ref 234* 239 246 246* 246* 246* 246
as_init                         000161 automatic       fixed bin(35,0)          dcl 58 set ref 236* 239 254 254* 254* 254* 254
as_level                        000160 automatic       fixed bin(35,0)          dcl 58 set ref 235* 239 250 250* 250* 250* 250
as_skips                        000163 automatic       fixed bin(35,0)          dcl 58 set ref 239* 241* 241* 241* 241 244
as_synch                        000164 automatic       fixed bin(35,0)          dcl 58 set ref 237* 239 258 258* 258* 258* 258
asearches               236            based           fixed bin(17,0)          level 2 dcl 1-9 ref 262 262
askipsehs               235            based           fixed bin(17,0)          level 2 dcl 1-9 ref 234 234
askipsinit              240            based           fixed bin(17,0)          level 2 dcl 1-9 ref 236 236
askipslevel             237            based           fixed bin(17,0)          level 2 dcl 1-9 ref 235 235
ast_lock_wait_time      264            based           fixed bin(71,0)          level 2 dcl 1-9 ref 311 311
ast_locked_total_time
                        262            based           fixed bin(71,0)          level 2 dcl 1-9 ref 301 301
ast_locking_count       266            based           fixed bin(35,0)          level 2 dcl 1-9 ref 296 296 302 302
aste_steps                      000162 automatic       fixed bin(35,0)          dcl 58 set ref 231* 232* 232* 232* 241
asteps                  254            based           fixed bin(17,0)          array level 2 dcl 1-9 ref 321 321
astsw                           000176 automatic       bit(1)                   initial unaligned dcl 62 set ref 62* 103* 107* 116*
                                                                                  119 119* 130
audit_seg_state_chg     573            based           fixed bin(35,0)          level 2 dcl 1-9 ref 378 378
backup_activations      534            based           fixed bin(35,0)          level 2 dcl 1-9 ref 135 135
bad_sgms                513            based           fixed bin(17,0)          level 2 dcl 1-9 ref 216 216 223 223
bkacts                          000172 automatic       fixed bin(35,0)          dcl 60 set ref 135* 137 149 149* 149* 149* 149
briefsw                         000175 automatic       bit(1)                   initial unaligned dcl 62 set ref 62* 105* 119 194
                                                                                  400
ceiling                 116            based           fixed bin(17,0)          level 2 dcl 1-9 ref 344 344
cl_skips_pinned          67            based           fixed bin(35,0)          level 2 dcl 1-9 ref 409 409
claim_runs              516            based           fixed bin(17,0)          level 2 dcl 1-9 ref 348 348
cleanup_count           267            based           fixed bin(17,0)          level 2 dcl 1-9 ref 267 267
cleanup_real_time       270            based           fixed bin(71,0)          level 2 dcl 1-9 ref 268 268
code                            000106 automatic       fixed bin(35,0)          dcl 37 set ref 89* 90 96* 97 122* 123 445* 447 453*
com_err_                        000010 constant        entry                    external dcl 72 ref 111 453
cu_$arg_count                   000012 constant        entry                    external dcl 73 ref 94
cu_$arg_ptr                     000014 constant        entry                    external dcl 74 ref 96
deact_count             130            based           fixed bin(17,0)          level 2 dcl 1-9 ref 160 160
deactas                         000166 automatic       fixed bin(35,0)          dcl 60 set ref 165* 166 166* 166* 166* 170
deacts                          000165 automatic       fixed bin(35,0)          dcl 60 set ref 160* 162* 162* 162* 170
delayed_seg_state_chg
                        572            based           fixed bin(35,0)          level 2 dcl 1-9 ref 377 377
demand_deact_attempts
                        131            based           fixed bin(17,0)          level 2 dcl 1-9 ref 165 165
demand_deactivations    132            based           fixed bin(17,0)          level 2 dcl 1-9 ref 169 169
dir_activations         520            based           fixed bin(17,0)          level 2 dcl 1-9 ref 152 152
dir_page_faults         110            based           fixed bin(17,0)          level 2 dcl 1-9 ref 361 361
error_table_$badopt             000030 external static fixed bin(35,0)          dcl 82 set ref 111*
error_table_$noarg              000026 external static fixed bin(17,0)          dcl 81 ref 97
f_acts                          000207 automatic       float bin(27)            dcl 66 set ref 138* 143 146 149 153 156
f_as_skips                      000210 automatic       float bin(27)            dcl 66 set ref 244* 246 250 254 258
f_ps_skips                      000211 automatic       float bin(27)            dcl 66 set ref 415* 416 420 424 428 432 436
faults                          000107 automatic       float bin(27)            dcl 38 set ref 340* 352 355 357 359 361 363 367 442
fc_skips_pinned          66            based           fixed bin(35,0)          level 2 dcl 1-9 ref 408 408
fixed                                                  builtin function         dcl 84 ref 324
float                                                  builtin function         dcl 84 ref 182 185 187 204 263 323 323 355 357 359
                                                                                  361 363 367
force_pwrites           525            based           fixed bin(17,0)          level 2 dcl 1-9 ref 284 284
force_swrites           524            based           fixed bin(17,0)          level 2 dcl 1-9 ref 273 273
force_updatevs          527            based           fixed bin(17,0)          level 2 dcl 1-9 ref 288 288
formatted_time                  000110 automatic       char(10)                 unaligned dcl 39 set ref 122* 128*
fw_none                 526            based           fixed bin(17,0)          level 2 dcl 1-9 ref 279 279
fw_retries              222            based           fixed bin(35,0)          level 2 dcl 1-9 ref 291 291
good_sgms               515            based           fixed bin(17,0)          level 2 dcl 1-9 ref 216 216 222 222
i                               000113 automatic       float bin(27)            dcl 40 set ref 216* 217 220* 278* 280* 280 304* 306*
                                                                                  309* 312* 314* 317* 366* 367 367* 367 388* 389*
ioa_                            000016 constant        entry                    external dcl 75 ref 128 140 141 143 146 149 153 156
                                                                                  162 163 166 170 176 182 185 187 192 198 204 209
                                                                                  220 221 222 223 224 225 227 228 232 241 246 250
                                                                                  254 258 263 270 274 281 285 289 292 297 298 299
                                                                                  309 317 328 329 330 331 332 333 339 342 345 349
                                                                                  355 357 359 361 363 367 372 375 383 389 392 398
                                                                                  403 412 416 420 424 428 432 436 441 442 450
j                               000114 automatic       fixed bin(35,0)          dcl 41 set ref 152* 153 153* 153* 153* 153 169* 170
                                                                                  170* 170* 170* 170 170 181* 182* 182* 182* 182
                                                                                  184* 185* 185* 185* 185 191* 192* 192* 192* 203*
                                                                                  204* 204* 204* 204 208* 209* 209* 209* 215* 262*
                                                                                  263* 263* 263* 263 263 267* 270* 270* 270* 273*
                                                                                  274* 274* 274* 275 278 279* 280 281 281* 281* 281*
                                                                                  284* 285 285* 285* 285* 288* 289 289* 289* 289*
                                                                                  291* 292 292* 292* 292* 296* 297* 297* 297* 302*
                                                                                  304 304 312 312 319* 320 320 321 321 321 322 322
                                                                                  322 323 323 323 324 324 325 325 325* 340* 342*
                                                                                  342* 342* 344* 345 345* 345 345 348* 349 349* 349
                                                                                  349 371* 372* 372* 372* 374* 375* 375* 375* 397*
                                                                                  398* 398* 398*
k                               000115 automatic       float bin(27)            dcl 42 set ref 213* 214* 214 221* 268* 269* 269 270*
                                                                                  301* 304 308* 308 309* 311* 312 316* 316 317* 387*
                                                                                  388
level                    44            based           structure                array level 2 dcl 1-9
level_1_page_faults     107            based           fixed bin(17,0)          level 2 dcl 1-9 ref 359 359
makeknown_activations
                        533            based           fixed bin(35,0)          level 2 dcl 1-9 ref 134 134
max                                                    builtin function         dcl 84 ref 138 170 170 241 244 263 269 308 316 323
                                                                                  325 412 415 442
meter_time                      000116 automatic       float bin(27)            dcl 43 set ref 127* 269 308 316 325 465 477
meter_time_fixed                000120 automatic       fixed bin(71,0)          dcl 44 set ref 122* 127
metering_util_$define_regions   000020 constant        entry                    external dcl 76 ref 89
metering_util_$fill_buffers     000022 constant        entry                    external dcl 78 ref 122
metering_util_$reset            000024 constant        entry                    external dcl 80 ref 445
mkacts                          000170 automatic       fixed bin(35,0)          dcl 60 set ref 134* 137 146 146* 146* 146* 146
needc                   115            based           fixed bin(17,0)          level 2 dcl 1-9 ref 340 340
new_pages               565            based           fixed bin(17,0)          level 2 dcl 1-9 ref 363 363
no_aste                  44(18)        based           bit(18)                  array level 3 packed unaligned dcl 1-9 ref 324
nused                    24            based           fixed bin(17,0)          level 2 dcl 1-9 set ref 397 441*
oopv                    506            based           fixed bin(17,0)          level 2 dcl 1-9 ref 366 366
pagesw                          000174 automatic       bit(1)                   initial unaligned dcl 62 set ref 62* 101* 107* 116*
                                                                                  119 119* 336
pdir_page_faults        106            based           fixed bin(17,0)          level 2 dcl 1-9 ref 357 357
ps_cl_pin                       000205 automatic       fixed bin(35,0)          dcl 64 set ref 409* 410 436 436* 436* 436* 436
ps_fc_pin                       000204 automatic       fixed bin(35,0)          dcl 64 set ref 408* 410 432 432* 432* 432* 432
ps_mod                          000202 automatic       fixed bin(35,0)          dcl 64 set ref 406* 410 424 424* 424* 424* 424
ps_os                           000203 automatic       fixed bin(35,0)          dcl 64 set ref 407* 410 428 428* 428* 428* 428
ps_skips                        000206 automatic       fixed bin(35,0)          dcl 64 set ref 410* 412* 412* 412* 412 415
ps_used                         000201 automatic       fixed bin(35,0)          dcl 64 set ref 405* 410 420 420* 420* 420* 420
ps_wired                        000200 automatic       fixed bin(35,0)          dcl 64 set ref 404* 410 416 416* 416* 416* 416
pts                      40            based           fixed bin(17,0)          array level 2 dcl 1-9 ref 320
ring_0_page_faults      111            based           fixed bin(17,0)          level 2 dcl 1-9 ref 355 355
rsw                             000177 automatic       bit(1)                   initial unaligned dcl 62 set ref 62* 99* 107* 445
seg_fault_calls         536            based           fixed bin(35,0)          level 2 dcl 1-9 ref 174 174 184 184
seg_state_change_audit          000122 automatic       fixed bin(35,0)          dcl 45 set ref 378* 380 392 392* 392* 392*
seg_state_change_delay          000123 automatic       fixed bin(35,0)          dcl 46 set ref 377* 380 384 388 389* 389* 389*
seg_state_chg_delay     574            based           fixed bin(52,0)          level 2 dcl 1-9 ref 387 387
segmove_max_tries       554            based           fixed bin(35,0)          level 2 dcl 1-9 ref 225 225
segmove_n_reads         553            based           fixed bin(35,0)          level 2 dcl 1-9 ref 224 224
setfaults_acc           247            based           fixed bin(17,0)          level 2 dcl 1-9 ref 203 203
setfaults_all           246            based           fixed bin(17,0)          level 2 dcl 1-9 ref 197 197
sf                              000124 automatic       fixed bin(35,0)          dcl 47 set ref 174* 176* 176* 176* 178 182 185 187
sfacts                          000171 automatic       fixed bin(35,0)          dcl 60 set ref 137* 143 143* 143* 143* 143 187* 187*
                                                                                  187* 187
sgm_pf                  512            based           fixed bin(17,0)          level 2 dcl 1-9 ref 215 215 227 227
sgm_sgft                514            based           fixed bin(17,0)          level 2 dcl 1-9 ref 228 228
sgm_time                510            based           fixed bin(71,0)          level 2 dcl 1-9 ref 213 213
skipm                   124            based           fixed bin(17,0)          level 2 dcl 1-9 ref 406 406
skipos                  125            based           fixed bin(17,0)          level 2 dcl 1-9 ref 407 407
skipu                   123            based           fixed bin(17,0)          level 2 dcl 1-9 ref 405 405
skipw                   122            based           fixed bin(17,0)          level 2 dcl 1-9 ref 404 404
sst                                    based           structure                level 1 dcl 1-9 set ref 89 89
sstp                                   automatic       pointer                  dcl 1-7 ref 89 89
sstp1                           000002 internal static pointer                  dcl 68 set ref 125* 133 134 135 136 152 160 165 169
                                                                                  174 174 181 184 191 197 203 208 213 215 216 216
                                                                                  222 223 224 225 227 228 231 234 235 236 237 262
                                                                                  263 267 268 273 279 284 288 291 296 301 302 311
                                                                                  321 322 340 344 348 355 357 359 361 363 366 374
                                                                                  377 378 387 396 404 405 406 407 408 409
sstp2                           000004 internal static pointer                  dcl 68 set ref 126* 133 134 135 136 152 160 165 169
                                                                                  174 174 181 184 191 197 203 208 213 215 216 216
                                                                                  222 223 224 225 227 228 231 234 235 236 237 262
                                                                                  263 267 268 273 279 284 288 291 296 301 302 311
                                                                                  320 321 322 324 340 344 348 355 357 359 361 363
                                                                                  366 371 371 374 377 378 387 396 397 404 405 406
                                                                                  407 408 409 441 441
steps                           000125 automatic       fixed bin(35,0)          dcl 48 in procedure "fsm" set ref 396* 397 403* 403*
                                                                                  403* 412 442
steps                   114            based           fixed bin(17,0)          level 2 in structure "sst" dcl 1-9 in procedure
                                                                                  "fsm" ref 396 396
stepsa                  234            based           fixed bin(17,0)          level 2 dcl 1-9 ref 231 231
stf                             000126 automatic       fixed bin(35,0)          dcl 49 set ref 197* 198* 198* 198* 200 204
synch_activations       102            based           fixed bin(35,0)          level 2 dcl 1-9 ref 136 136
synch_skips             103            based           fixed bin(35,0)          level 2 dcl 1-9 ref 237 237
synchacts                       000173 automatic       fixed bin(35,0)          dcl 60 set ref 136* 156 156* 156* 156* 156
t0                              000127 automatic       fixed bin(17,0)          array dcl 50 set ref 320* 328* 328* 328* 328*
t1                              000133 automatic       fixed bin(17,0)          array dcl 51 set ref 321* 323 325 331* 331* 331*
                                                                                  331*
t2                              000137 automatic       fixed bin(17,0)          array dcl 52 set ref 322* 323 330* 330* 330* 330*
t3                              000143 automatic       float bin(27)            array dcl 53 set ref 323* 332* 332* 332* 332*
t4                              000147 automatic       fixed bin(17,0)          array dcl 54 set ref 324* 325 329* 329* 329* 329*
t5                              000153 automatic       float bin(27)            array dcl 55 set ref 325* 333* 333* 333* 333*
targ                                   based           char                     unaligned dcl 56 set ref 99 99 101 101 103 105 105
                                                                                  107 107 111*
total_bf                250            based           fixed bin(17,0)          level 2 dcl 1-9 ref 191 191
total_sf                163            based           fixed bin(17,0)          level 2 dcl 1-9 ref 174 174 181 181
unique                          000000 internal static fixed bin(17,0)          initial dcl 57 set ref 86 89* 122* 445*
updates                 245            based           fixed bin(17,0)          level 2 dcl 1-9 ref 208 208
volmap_seg_page_faults
                        505            based           fixed bin(35,0)          level 2 dcl 1-9 ref 371 371
wired                   120            based           fixed bin(17,0)          level 2 dcl 1-9 set ref 441*
x                                      parameter       fixed bin(35,0)          dcl 461 in procedure "mtb_sec" ref 458 463 465
x                                      parameter       fixed bin(35,0)          dcl 473 in procedure "mtb_msec" ref 470 475 477
zero_pages              563            based           fixed bin(17,0)          level 2 dcl 1-9 ref 374 374

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
sfcalls                                automatic       fixed bin(35,0)          dcl 60
sst_seg$                               external static fixed bin(17,0)          dcl 1-6
tcdp1                                  internal static pointer                  dcl 68
tcdp2                                  internal static pointer                  dcl 68

NAMES DECLARED BY EXPLICIT CONTEXT.
endarg                          001574 constant        label                    dcl 116 ref 97
error                           006722 constant        label                    dcl 453 ref 90 123 447
file_system_meters              001343 constant        entry                    external dcl 29
fsm                             001333 constant        entry                    external dcl 29
mtb_msec                        006761 constant        entry                    internal dcl 470 ref 198 198 232 232 342 342 372 372
                                                                                  375 375 403 403 412 412 416 416 420 420 424 424
                                                                                  428 428 432 432 436 436
mtb_sec                         006743 constant        entry                    internal dcl 458 ref 141 141 143 143 146 146 149 149
                                                                                  153 153 156 156 162 162 166 166 170 170 176 176
                                                                                  182 182 185 185 187 187 192 192 204 204 209 209
                                                                                  241 241 246 246 250 250 254 254 258 258 263 263
                                                                                  270 270 274 274 281 281 285 285 289 289 292 292
                                                                                  297 297 345 345 349 349 389 389 392 392 398 398

NAME DECLARED BY CONTEXT OR IMPLICATION.
size                                                   builtin function         ref 89 89

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      7404        7444    7256        7436
Length      7756    7256        32         276     126           6

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
fsm                                 230 external procedure  is an external procedure.  
mtb_sec                                 internal procedure  shares stack frame of external procedure fsm.  
mtb_msec                                internal procedure  shares stack frame of external procedure fsm.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000000 unique                      fsm
000002 sstp1                       fsm
000004 sstp2                       fsm

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
fsm                      000100 argl                        fsm
                         000102 argp                        fsm
                         000104 argc                        fsm
                         000105 argx                        fsm
                         000106 code                        fsm
                         000107 faults                      fsm
                         000110 formatted_time              fsm
                         000113 i                           fsm
                         000114 j                           fsm
                         000115 k                           fsm
                         000116 meter_time                  fsm
                         000120 meter_time_fixed            fsm
                         000122 seg_state_change_audit      fsm
                         000123 seg_state_change_delay      fsm
                         000124 sf                          fsm
                         000125 steps                       fsm
                         000126 stf                         fsm
                         000127 t0                          fsm
                         000133 t1                          fsm
                         000137 t2                          fsm
                         000143 t3                          fsm
                         000147 t4                          fsm
                         000153 t5                          fsm
                         000157 as_ehs                      fsm
                         000160 as_level                    fsm
                         000161 as_init                     fsm
                         000162 aste_steps                  fsm
                         000163 as_skips                    fsm
                         000164 as_synch                    fsm
                         000165 deacts                      fsm
                         000166 deactas                     fsm
                         000167 acts                        fsm
                         000170 mkacts                      fsm
                         000171 sfacts                      fsm
                         000172 bkacts                      fsm
                         000173 synchacts                   fsm
                         000174 pagesw                      fsm
                         000175 briefsw                     fsm
                         000176 astsw                       fsm
                         000177 rsw                         fsm
                         000200 ps_wired                    fsm
                         000201 ps_used                     fsm
                         000202 ps_mod                      fsm
                         000203 ps_os                       fsm
                         000204 ps_fc_pin                   fsm
                         000205 ps_cl_pin                   fsm
                         000206 ps_skips                    fsm
                         000207 f_acts                      fsm
                         000210 f_as_skips                  fsm
                         000211 f_ps_skips                  fsm
                         000212 a_sstp1                     fsm
                         000214 a_sstp2                     fsm

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
fx1_to_fl2          r_g_a               call_ext_out_desc   call_ext_out        return              trunc_fx2
divide_fx1          divide_fx3          ss_ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      cu_$arg_count                 cu_$arg_ptr                   ioa_
metering_util_$define_regions metering_util_$fill_buffers   metering_util_$reset

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$badopt           error_table_$noarg


CONSTANTS
007000  aa     000004000000
007001  aa     000000000000
007002  aa     600000000041
007003  aa     000205000000
007004  aa     600000000041
007005  aa     000240000000

007006  aa     000004000000
007007  aa     000000000000
007010  aa     600000000041
007011  aa     000204000000
007012  aa     600000000041
007013  aa     000240000000

007014  aa     000004000000
007015  aa     000000000000
007016  aa     600000000041
007017  aa     000203000000
007020  aa     600000000041
007021  aa     000240000000

007022  aa     000004000000
007023  aa     000000000000
007024  aa     600000000041
007025  aa     000202000000
007026  aa     600000000041
007027  aa     000240000000

007030  aa     000004000000
007031  aa     000000000000
007032  aa     600000000041
007033  aa     000201000000
007034  aa     600000000041
007035  aa     000240000000

007036  aa     000004000000
007037  aa     000000000000
007040  aa     600000000041
007041  aa     000200000000
007042  aa     600000000041
007043  aa     000240000000

007044  aa     000004000000
007045  aa     000000000000
007046  aa     600000000041
007047  aa     000206000000
007050  aa     600000000041
007051  aa     000240000000

007052  aa     000004000000
007053  aa     000000000000
007054  aa     600000000041
007055  aa     000125000000
007056  aa     600000000041
007057  aa     000240000000

007060  aa     000004000000
007061  aa     000000000000
007062  aa     600000000041
007063  aa     000122000000
007064  aa     600000000041
007065  aa     000240000000

007066  aa     000004000000
007067  aa     000000000000
007070  aa     600000000041
007071  aa     000123000000
007072  aa     600000000041
007073  aa     000240000000

007074  aa     000004000000
007075  aa     000000000000
007076  aa     600000000041
007077  aa     000235000000
007100  aa     600000000041
007101  aa     000240000000

007102  aa     000004000000
007103  aa     000000000000
007104  aa     600000000041
007105  aa     000240000000
007106  aa     600000000041
007107  aa     000235000000

007110  aa     000004000000
007111  aa     000000000000
007112  aa     600000000041
007113  aa     000114000000
007114  aa     600000000041
007115  aa     000235000000

007116  aa     000004000000
007117  aa     000000000000
007120  aa     600000000041
007121  aa     000164000000
007122  aa     600000000041
007123  aa     000240000000

007124  aa     000004000000
007125  aa     000000000000
007126  aa     600000000041
007127  aa     000161000000
007130  aa     600000000041
007131  aa     000240000000

007132  aa     000004000000
007133  aa     000000000000
007134  aa     600000000041
007135  aa     000160000000
007136  aa     600000000041
007137  aa     000240000000

007140  aa     000004000000
007141  aa     000000000000
007142  aa     600000000041
007143  aa     000157000000
007144  aa     600000000041
007145  aa     000240000000

007146  aa     000004000000
007147  aa     000000000000
007150  aa     600000000041
007151  aa     000163000000
007152  aa     600000000041
007153  aa     000240000000

007154  aa     000004000000
007155  aa     000000000000
007156  aa     600000000041
007157  aa     000162000000
007160  aa     600000000041
007161  aa     000240000000

007162  aa     000004000000
007163  aa     000000000000
007164  aa     600000000041
007165  aa     000126000000
007166  aa     600000000041
007167  aa     000240000000

007170  aa     000004000000
007171  aa     000000000000
007172  aa     600000000041
007173  aa     000124000000
007174  aa     600000000041
007175  aa     000240000000

007176  aa     000004000000
007177  aa     000000000000
007200  aa     600000000041
007201  aa     000166000000
007202  aa     600000000041
007203  aa     000240000000

007204  aa     000004000000
007205  aa     000000000000
007206  aa     600000000041
007207  aa     000165000000
007210  aa     600000000041
007211  aa     000240000000

007212  aa     000004000000
007213  aa     000000000000
007214  aa     600000000041
007215  aa     000173000000
007216  aa     600000000041
007217  aa     000240000000

007220  aa     000004000000
007221  aa     000000000000
007222  aa     600000000041
007223  aa     000114000000
007224  aa     600000000041
007225  aa     000240000000

007226  aa     000004000000
007227  aa     000000000000
007230  aa     600000000041
007231  aa     000172000000
007232  aa     600000000041
007233  aa     000240000000

007234  aa     000004000000
007235  aa     000000000000
007236  aa     600000000041
007237  aa     000170000000
007240  aa     600000000041
007241  aa     000240000000

007242  aa     000004000000
007243  aa     000000000000
007244  aa     600000000041
007245  aa     000171000000
007246  aa     600000000041
007247  aa     000240000000

007250  aa     000004000000
007251  aa     000000000000
007252  aa     600000000041
007253  aa     000167000000
007254  aa     600000000041
007255  aa     000240000000

000000  aa     050750220000

000001  aa     524000000051

000002  aa     524000000052

000003  aa     524000000060

000004  aa     524000000016

000005  aa     524000000030

000006  aa     524000000027

000007  aa     524000000031

000010  aa     524000000032

000011  aa     524000000045

000012  aa     524000000035

000013  aa     732414336750

000014  aa     756406111565

000015  aa     524000000026

000016  aa     524000000001

000017  aa     514000000001

000020  aa     524000000071

000021  aa     524000000056

000022  aa     410000000044

000023  aa     404000000022

000024  aa     524000000025

000025  aa     524000000023

000026  aa     524000000062

000027  aa     524000000037

000030  aa     524000000034

000031  aa     524000000063

000032  aa     410000300107

000033  aa     524000000066

000034  aa     524000000021

000035  aa     524000000036

000036  aa     524000000053

000037  aa     420000000043

000040  aa     524000000054

000041  aa     524000000040

000042  aa     524000000024

000043  aa     524000000033

000044  aa     526000000012

000045  aa     410000000107

000046  aa     526000000000

000047  aa     524000000022

000050  aa  055 162 162 000	-rr

000051  aa  055 142 146 000	-bf

000052  aa  055 141 163 164	-ast

000053  aa  055 160 147 000	-pg

000054  aa  055 162 163 000	-rs

000055  aa     404000000030

000056  aa     404000000005

000057  aa     524000000007

000060  aa     404000000043

000061  aa     414000000033

000062  aa     404000000021

000064  aa  055 142 162 151	-bri
000065  aa  145 146 000 000	ef

000066  aa  055 160 141 147	-pag
000067  aa  145 000 000 000	e

000070  aa  055 162 145 163	-res
000071  aa  145 164 000 000	et

000072  aa  163 163 164 137	sst_
000073  aa  163 145 147 000	seg

000074  aa  123 145 147 040	Seg 
000075  aa  163 164 141 164	stat
000076  aa  145 040 143 150	e ch
000077  aa  147 056 000 000	g.

000100  aa     464100000000
000101  aa     000000000001
000102  aa     000000000001
000103  aa     000000000002

000104  aa  055 162 145 160	-rep
000105  aa  157 162 164 137	ort_
000106  aa  162 145 163 145	rese
000107  aa  164 000 000 000	t

000110  aa  101 166 145 162	Aver
000111  aa  141 147 145 040	age 
000112  aa  163 164 145 160	step
000113  aa  163 040 136 061	s ^1
000114  aa  062 056 063 146	2.3f

000115  aa  104 111 122 040	DIR 
000116  aa  146 141 165 154	faul
000117  aa  164 163 136 055	ts^-
000120  aa  136 061 062 056	^12.
000121  aa  063 146 040 045	3f %

000122  aa  040 040 040 163	   s
000123  aa  145 147 137 146	eg_f
000124  aa  141 165 154 164	ault
000125  aa  163 040 040 136	s  ^
000126  aa  061 060 144 000	10d

000127  aa  040 040 040 160	   p
000130  aa  141 147 145 137	age_
000131  aa  146 141 165 154	faul
000132  aa  164 163 040 136	ts ^
000133  aa  061 060 144 000	10d

000134  aa  040 040 040 155	   m
000135  aa  141 170 040 162	ax r
000136  aa  145 164 162 151	etri
000137  aa  145 163 040 136	es ^
000140  aa  061 060 144 000	10d

000141  aa  040 040 040 162	   r
000142  aa  145 141 144 163	eads
000143  aa  040 040 040 040	    
000144  aa  040 040 040 136	   ^
000145  aa  061 060 144 000	10d

000146  aa  040 040 040 142	   b
000147  aa  141 144 040 040	ad  
000150  aa  040 040 040 040	    
000151  aa  040 040 040 136	   ^
000152  aa  061 060 144 000	10d

000153  aa  040 040 040 147	   g
000154  aa  157 157 144 040	ood 
000155  aa  040 040 040 040	    
000156  aa  040 040 040 136	   ^
000157  aa  061 060 144 000	10d

000160  aa  123 145 147 155	Segm
000161  aa  145 156 164 040	ent 
000162  aa  155 157 166 145	move
000163  aa  163 040 040 136	s  ^
000164  aa  061 060 144 000	10d

000165  aa  104 145 155 141	Dema
000166  aa  156 144 040 144	nd d
000167  aa  145 141 143 164	eact
000170  aa  151 166 141 164	ivat
000171  aa  145 000 000 000	e

000172  aa  136 057 136 055	^/^-
000173  aa  136 055 040 040	^-  
000174  aa  040 043 136 055	 #^-
000175  aa  040 040 040 040	    
000176  aa  040 101 124 102	 ATB

000177  aa  146 151 154 145	file
000200  aa  137 163 171 163	_sys
000201  aa  164 145 155 137	tem_
000202  aa  155 145 164 145	mete
000203  aa  162 163 000 000	rs

000204  aa  136 057 136 144	^/^d
000205  aa  040 160 141 147	 pag
000206  aa  145 163 054 040	es, 
000207  aa  136 144 040 167	^d w
000210  aa  151 162 145 144	ired
000211  aa  056 000 000 000	.

000212  aa  123 164 145 160	Step
000213  aa  163 011 136 061	s	^1
000214  aa  060 144 136 061	0d^1
000215  aa  062 056 063 146	2.3f
000216  aa  040 155 163 145	 mse
000217  aa  143 056 000 000	c.

000220  aa  117 117 120 126	OOPV
000221  aa  040 040 040 040	    
000222  aa  040 040 136 061	  ^1
000223  aa  060 144 136 061	0d^1
000224  aa  062 056 063 146	2.3f
000225  aa  040 045 000 000	 %

000226  aa  116 145 167 040	New 
000227  aa  120 141 147 145	Page
000230  aa  163 136 055 136	s^-^
000231  aa  055 136 061 062	-^12
000232  aa  056 063 146 040	.3f 
000233  aa  045 000 000 000	%

000234  aa  114 145 166 145	Leve
000235  aa  154 040 062 040	l 2 
000236  aa  146 141 165 154	faul
000237  aa  164 163 136 055	ts^-
000240  aa  136 061 062 056	^12.
000241  aa  063 146 040 045	3f %

000242  aa  120 104 111 122	PDIR
000243  aa  040 146 141 165	 fau
000244  aa  154 164 163 136	lts^
000245  aa  055 136 061 062	-^12
000246  aa  056 063 146 040	.3f 
000247  aa  045 000 000 000	%

000250  aa  122 151 156 147	Ring
000251  aa  040 060 040 146	 0 f
000252  aa  141 165 154 164	ault
000253  aa  163 136 055 136	s^-^
000254  aa  061 062 056 063	12.3
000255  aa  146 040 045 000	f %

000256  aa  136 057 136 055	^/^-
000257  aa  040 040 040 040	    
000260  aa  040 040 040 043	   #
000261  aa  136 055 136 055	^-^-
000262  aa  101 124 102 136	ATB^
000263  aa  057 000 000 000	/

000264  aa  136 055 136 055	^-^-
000265  aa  040 101 126 105	 AVE
000266  aa  057 154 157 143	/loc
000267  aa  153 136 055 040	k^- 
000270  aa  040 040 040 040	    
000271  aa  040 045 000 000	 %

000272  aa  040 040 040 166	   v
000273  aa  143 160 165 040	cpu 
000274  aa  040 040 040 040	    
000275  aa  040 040 040 136	   ^
000276  aa  061 062 056 063	12.3
000277  aa  146 000 000 000	f

000300  aa  114 141 160 163	Laps
000301  aa  040 040 040 040	    
000302  aa  040 040 136 061	  ^1
000303  aa  060 144 136 061	0d^1
000304  aa  062 056 063 146	2.3f
000305  aa  040 163 145 143	 sec
000306  aa  056 000 000 000	.

000307  aa  040 040 040 141	   a
000310  aa  165 144 151 164	udit
000311  aa  145 144 136 061	ed^1
000312  aa  060 144 136 061	0d^1
000313  aa  062 056 063 146	2.3f
000314  aa  040 163 145 143	 sec
000315  aa  056 000 000 000	.

000316  aa  132 145 162 157	Zero
000317  aa  040 160 141 147	 pag
000320  aa  145 163 136 061	es^1
000321  aa  060 144 136 061	0d^1
000322  aa  062 056 063 146	2.3f
000323  aa  040 155 163 145	 mse
000324  aa  143 056 000 000	c.

000325  aa  126 157 154 155	Volm
000326  aa  141 160 137 163	ap_s
000327  aa  145 147 136 061	eg^1
000330  aa  060 144 136 061	0d^1
000331  aa  062 056 063 146	2.3f
000332  aa  040 155 163 145	 mse
000333  aa  143 056 000 000	c.

000334  aa  103 154 141 151	Clai
000335  aa  155 040 162 165	m ru
000336  aa  156 163 136 061	ns^1
000337  aa  060 144 136 061	0d^1
000340  aa  062 056 063 146	2.3f
000341  aa  040 155 151 156	 min
000342  aa  056 000 000 000	.

000343  aa  103 145 151 154	Ceil
000344  aa  151 156 147 040	ing 
000345  aa  040 040 136 061	  ^1
000346  aa  060 144 136 061	0d^1
000347  aa  062 056 063 146	2.3f
000350  aa  040 155 151 156	 min
000351  aa  056 000 000 000	.

000352  aa  116 145 145 144	Need
000353  aa  143 040 040 040	c   
000354  aa  040 040 136 061	  ^1
000355  aa  060 144 136 061	0d^1
000356  aa  062 056 063 146	2.3f
000357  aa  040 155 163 145	 mse
000360  aa  143 056 000 000	c.

000361  aa  123 164 145 160	Step
000362  aa  163 011 040 040	s	  
000363  aa  040 040 040 136	   ^
000364  aa  061 060 144 136	10d^
000365  aa  061 062 056 063	12.3
000366  aa  146 040 155 163	f ms
000367  aa  145 143 056 000	ec.

000370  aa  102 157 165 156	Boun
000371  aa  144 040 106 141	d Fa
000372  aa  165 154 164 163	ults
000373  aa  040 136 061 062	 ^12
000374  aa  144 136 061 062	d^12
000375  aa  056 063 146 040	.3f 
000376  aa  163 145 143 056	sec.

000377  aa  136 057 124 157	^/To
000400  aa  164 141 154 040	tal 
000401  aa  155 145 164 145	mete
000402  aa  162 151 156 147	ring
000403  aa  040 164 151 155	 tim
000404  aa  145 136 055 136	e^-^
000405  aa  141 136 057 000	a^/

000406  aa  123 164 145 160	Step
000407  aa  163 040 040 040	s   
000410  aa  040 040 040 040	    
000411  aa  040 136 061 060	 ^10
000412  aa  144 136 061 060	d^10
000413  aa  144 136 061 060	d^10
000414  aa  144 136 061 060	d^10
000415  aa  144 000 000 000	d

000416  aa  116 145 145 144	Need
000417  aa  040 040 040 040	    
000420  aa  040 040 040 040	    
000421  aa  040 136 061 060	 ^10
000422  aa  144 136 061 060	d^10
000423  aa  144 136 061 060	d^10
000424  aa  144 136 061 060	d^10
000425  aa  144 000 000 000	d

000426  aa  116 165 155 142	Numb
000427  aa  145 162 040 040	er  
000430  aa  040 040 040 040	    
000431  aa  040 136 061 060	 ^10
000432  aa  144 136 061 060	d^10
000433  aa  144 136 061 060	d^10
000434  aa  144 136 061 060	d^10
000435  aa  144 000 000 000	d

000436  aa  136 057 101 123	^/AS
000437  aa  124 040 123 151	T Si
000440  aa  172 145 163 040	zes 
000441  aa  040 040 040 136	   ^
000442  aa  061 060 144 136	10d^
000443  aa  061 060 144 136	10d^
000444  aa  061 060 144 136	10d^
000445  aa  061 060 144 000	10d

000446  aa  101 123 124 040	AST 
000447  aa  154 157 143 153	lock
000450  aa  040 167 141 151	 wai
000451  aa  164 151 156 147	ting
000452  aa  136 071 056 063	^9.3
000453  aa  146 040 155 163	f ms
000454  aa  145 143 056 136	ec.^
000455  aa  066 056 061 146	6.1f

000456  aa  101 123 124 040	AST 
000457  aa  154 157 143 153	lock
000460  aa  145 144 040 040	ed  
000461  aa  040 040 040 040	    
000462  aa  136 071 056 063	^9.3
000463  aa  146 040 155 163	f ms
000464  aa  145 143 056 136	ec.^
000465  aa  066 056 061 146	6.1f

000466  aa  114 157 143 153	Lock
000467  aa  040 101 123 124	 AST
000470  aa  040 040 040 040	    
000471  aa  040 040 040 136	   ^
000472  aa  061 060 144 136	10d^
000473  aa  061 062 056 063	12.3
000474  aa  146 040 163 145	f se
000475  aa  143 056 000 000	c.

000476  aa  040 040 040 146	   f
000477  aa  157 162 143 145	orce
000500  aa  040 162 145 164	 ret
000501  aa  162 151 145 163	ries
000502  aa  040 136 070 144	 ^8d
000503  aa  136 061 062 056	^12.
000504  aa  063 146 040 163	3f s
000505  aa  145 143 056 000	ec.

000506  aa  040 040 040 146	   f
000507  aa  157 162 143 145	orce
000510  aa  040 165 160 144	 upd
000511  aa  141 164 145 166	atev
000512  aa  040 136 070 144	 ^8d
000513  aa  136 061 062 056	^12.
000514  aa  063 146 040 163	3f s
000515  aa  145 143 056 000	ec.

000516  aa  040 040 040 160	   p
000517  aa  141 147 145 163	ages
000520  aa  040 167 162 151	 wri
000521  aa  164 164 145 156	tten
000522  aa  040 136 070 144	 ^8d
000523  aa  136 061 062 056	^12.
000524  aa  063 146 040 163	3f s
000525  aa  145 143 056 000	ec.

000526  aa  040 040 040 167	   w
000527  aa  151 164 150 157	itho
000530  aa  165 164 040 160	ut p
000531  aa  167 162 151 164	writ
000532  aa  145 163 136 067	es^7
000533  aa  144 136 061 062	d^12
000534  aa  056 063 146 040	.3f 
000535  aa  163 145 143 056	sec.

000536  aa  106 157 162 143	Forc
000537  aa  145 040 167 162	e wr
000540  aa  151 164 145 163	ites
000541  aa  040 040 040 040	    
000542  aa  040 040 136 067	  ^7
000543  aa  144 136 061 062	d^12
000544  aa  056 063 146 040	.3f 
000545  aa  163 145 143 056	sec.

000546  aa  101 123 124 105	ASTE
000547  aa  040 124 162 151	 Tri
000550  aa  143 153 154 145	ckle
000551  aa  040 040 040 136	   ^
000552  aa  061 060 144 136	10d^
000553  aa  061 062 056 063	12.3
000554  aa  146 040 163 145	f se
000555  aa  143 056 000 000	c.

000556  aa  123 145 164 146	Setf
000557  aa  141 165 154 164	ault
000560  aa  163 040 040 040	s   
000561  aa  040 040 040 136	   ^
000562  aa  061 060 144 136	10d^
000563  aa  061 062 056 063	12.3
000564  aa  146 040 155 163	f ms
000565  aa  145 143 056 000	ec.

000566  aa  123 145 147 040	Seg 
000567  aa  106 141 165 154	Faul
000570  aa  164 163 040 040	ts  
000571  aa  040 040 040 136	   ^
000572  aa  061 060 144 136	10d^
000573  aa  061 062 056 063	12.3
000574  aa  146 040 163 145	f se
000575  aa  143 056 000 000	c.

000576  aa  040 040 040 141	   a
000577  aa  164 164 145 155	ttem
000600  aa  160 164 163 040	pts 
000601  aa  040 040 040 136	   ^
000602  aa  061 060 144 136	10d^
000603  aa  061 062 056 063	12.3
000604  aa  146 040 163 145	f se
000605  aa  143 056 000 000	c.

000606  aa  104 145 141 143	Deac
000607  aa  164 151 166 141	tiva
000610  aa  164 151 157 156	tion
000611  aa  163 040 040 136	s  ^
000612  aa  061 060 144 136	10d^
000613  aa  061 062 056 063	12.3
000614  aa  146 040 163 145	f se
000615  aa  143 056 000 000	c.

000616  aa  136 057 101 143	^/Ac
000617  aa  164 151 166 141	tiva
000620  aa  164 151 157 156	tion
000621  aa  163 040 040 040	s   
000622  aa  040 136 061 060	 ^10
000623  aa  144 136 061 062	d^12
000624  aa  056 063 146 040	.3f 
000625  aa  163 145 143 056	sec.

000626  aa  114 141 160 040	Lap 
000627  aa  124 151 155 145	Time
000630  aa  050 163 145 143	(sec
000631  aa  051 136 061 060	)^10
000632  aa  056 061 146 136	.1f^
000633  aa  061 060 056 061	10.1
000634  aa  146 136 061 060	f^10
000635  aa  056 061 146 136	.1f^
000636  aa  061 060 056 061	10.1
000637  aa  146 000 000 000	f

000640  aa  101 166 145 040	Ave 
000641  aa  123 164 145 160	Step
000642  aa  163 040 040 040	s   
000643  aa  040 136 061 060	 ^10
000644  aa  056 061 146 136	.1f^
000645  aa  061 060 056 061	10.1
000646  aa  146 136 061 060	f^10
000647  aa  056 061 146 136	.1f^
000650  aa  061 060 056 061	10.1
000651  aa  146 000 000 000	f

000652  aa  040 040 040 143	   c
000653  aa  154 040 160 151	l pi
000654  aa  156 040 136 061	n ^1
000655  aa  060 144 136 061	0d^1
000656  aa  062 056 063 146	2.3f
000657  aa  040 155 163 145	 mse
000660  aa  143 056 040 136	c. ^
000661  aa  067 056 063 146	7.3f
000662  aa  045 040 157 146	% of
000663  aa  040 123 153 151	 Ski
000664  aa  160 000 000 000	p

000665  aa  040 040 040 146	   f
000666  aa  143 040 160 151	c pi
000667  aa  156 040 136 061	n ^1
000670  aa  060 144 136 061	0d^1
000671  aa  062 056 063 146	2.3f
000672  aa  040 155 163 145	 mse
000673  aa  143 056 040 136	c. ^
000674  aa  067 056 063 146	7.3f
000675  aa  045 040 157 146	% of
000676  aa  040 123 153 151	 Ski
000677  aa  160 000 000 000	p

000700  aa  040 040 040 157	   o
000701  aa  163 040 040 040	s   
000702  aa  040 040 136 061	  ^1
000703  aa  060 144 136 061	0d^1
000704  aa  062 056 063 146	2.3f
000705  aa  040 155 163 145	 mse
000706  aa  143 056 040 136	c. ^
000707  aa  067 056 063 146	7.3f
000710  aa  045 040 157 146	% of
000711  aa  040 123 153 151	 Ski
000712  aa  160 000 000 000	p

000713  aa  040 040 040 155	   m
000714  aa  157 144 040 040	od  
000715  aa  040 040 136 061	  ^1
000716  aa  060 144 136 061	0d^1
000717  aa  062 056 063 146	2.3f
000720  aa  040 155 163 145	 mse
000721  aa  143 056 040 136	c. ^
000722  aa  067 056 063 146	7.3f
000723  aa  045 040 157 146	% of
000724  aa  040 123 153 151	 Ski
000725  aa  160 000 000 000	p

000726  aa  040 040 040 165	   u
000727  aa  163 145 144 040	sed 
000730  aa  040 040 136 061	  ^1
000731  aa  060 144 136 061	0d^1
000732  aa  062 056 063 146	2.3f
000733  aa  040 155 163 145	 mse
000734  aa  143 056 040 136	c. ^
000735  aa  067 056 063 146	7.3f
000736  aa  045 040 157 146	% of
000737  aa  040 123 153 151	 Ski
000740  aa  160 000 000 000	p

000741  aa  040 040 040 167	   w
000742  aa  151 162 145 144	ired
000743  aa  040 040 136 061	  ^1
000744  aa  060 144 136 061	0d^1
000745  aa  062 056 063 146	2.3f
000746  aa  040 155 163 145	 mse
000747  aa  143 056 040 136	c. ^
000750  aa  067 056 063 146	7.3f
000751  aa  045 040 157 146	% of
000752  aa  040 123 153 151	 Ski
000753  aa  160 000 000 000	p

000754  aa  123 153 151 160	Skip
000755  aa  040 040 040 040	    
000756  aa  040 040 136 061	  ^1
000757  aa  060 144 136 061	0d^1
000760  aa  062 056 063 146	2.3f
000761  aa  040 155 163 145	 mse
000762  aa  143 056 040 136	c. ^
000763  aa  067 056 063 146	7.3f
000764  aa  045 040 157 146	% of
000765  aa  040 123 164 145	 Ste
000766  aa  160 163 000 000	ps

000767  aa  040 040 040 163	   s
000770  aa  171 156 143 150	ynch
000771  aa  040 040 040 040	    
000772  aa  040 040 136 061	  ^1
000773  aa  060 144 136 061	0d^1
000774  aa  062 056 063 146	2.3f
000775  aa  040 163 145 143	 sec
000776  aa  056 040 136 067	. ^7
000777  aa  056 063 146 045	.3f%
001000  aa  040 157 146 040	 of 
001001  aa  141 154 154 000	all

001002  aa  040 040 040 144	   d
001003  aa  151 162 145 143	irec
001004  aa  164 157 162 151	tori
001005  aa  145 163 040 136	es ^
001006  aa  061 060 144 136	10d^
001007  aa  061 062 056 063	12.3
001010  aa  146 040 163 145	f se
001011  aa  143 056 040 136	c. ^
001012  aa  067 056 063 146	7.3f
001013  aa  045 040 157 146	% of
001014  aa  040 141 154 154	 all

001015  aa  040 040 040 142	   b
001016  aa  141 143 153 165	acku
001017  aa  160 040 040 040	p   
001020  aa  040 040 040 136	   ^
001021  aa  061 060 144 136	10d^
001022  aa  061 062 056 063	12.3
001023  aa  146 040 163 145	f se
001024  aa  143 056 040 136	c. ^
001025  aa  067 056 063 146	7.3f
001026  aa  045 040 157 146	% of
001027  aa  040 141 154 154	 all

001030  aa  040 040 040 155	   m
001031  aa  141 153 145 153	akek
001032  aa  156 157 167 156	nown
001033  aa  040 040 040 136	   ^
001034  aa  061 060 144 136	10d^
001035  aa  061 062 056 063	12.3
001036  aa  146 040 163 145	f se
001037  aa  143 056 040 136	c. ^
001040  aa  067 056 063 146	7.3f
001041  aa  045 040 157 146	% of
001042  aa  040 141 154 154	 all

001043  aa  040 040 040 163	   s
001044  aa  145 147 146 141	egfa
001045  aa  165 154 164 040	ult 
001046  aa  040 040 040 136	   ^
001047  aa  061 060 144 136	10d^
001050  aa  061 062 056 063	12.3
001051  aa  146 040 163 145	f se
001052  aa  143 056 040 136	c. ^
001053  aa  067 056 063 146	7.3f
001054  aa  045 040 157 146	% of
001055  aa  040 141 154 154	 all

001056  aa  040 040 040 144	   d
001057  aa  145 154 141 171	elay
001060  aa  145 144 136 061	ed^1
001061  aa  060 144 136 061	0d^1
001062  aa  062 056 063 146	2.3f
001063  aa  040 163 145 143	 sec
001064  aa  056 040 040 136	.  ^
001065  aa  067 056 063 146	7.3f
001066  aa  040 163 145 143	 sec
001067  aa  056 040 141 166	. av
001070  aa  147 056 040 144	g. d
001071  aa  145 154 141 171	elay

001072  aa  103 154 145 141	Clea
001073  aa  156 165 160 163	nups
001074  aa  136 055 136 061	^-^1
001075  aa  065 144 136 061	5d^1
001076  aa  062 056 063 146	2.3f
001077  aa  040 163 145 143	 sec
001100  aa  056 040 136 065	. ^5
001101  aa  056 061 146 040	.1f 
001102  aa  045 040 157 146	% of
001103  aa  040 162 145 141	 rea
001104  aa  154 040 164 151	l ti
001105  aa  155 145 000 000	me

001106  aa  040 040 040 163	   s
001107  aa  171 156 143 150	ynch
001110  aa  040 040 040 040	    
001111  aa  040 040 040 136	   ^
001112  aa  061 060 144 136	10d^
001113  aa  061 062 056 063	12.3
001114  aa  146 040 163 145	f se
001115  aa  143 056 040 136	c. ^
001116  aa  067 056 063 146	7.3f
001117  aa  045 040 157 146	% of
001120  aa  040 123 153 151	 Ski
001121  aa  160 163 000 000	ps

001122  aa  040 040 040 151	   i
001123  aa  156 151 164 040	nit 
001124  aa  040 040 040 040	    
001125  aa  040 040 040 136	   ^
001126  aa  061 060 144 136	10d^
001127  aa  061 062 056 063	12.3
001130  aa  146 040 163 145	f se
001131  aa  143 056 040 136	c. ^
001132  aa  067 056 063 146	7.3f
001133  aa  045 040 157 146	% of
001134  aa  040 123 153 151	 Ski
001135  aa  160 163 000 000	ps

001136  aa  040 040 040 155	   m
001137  aa  145 155 040 040	em  
001140  aa  040 040 040 040	    
001141  aa  040 040 040 136	   ^
001142  aa  061 060 144 136	10d^
001143  aa  061 062 056 063	12.3
001144  aa  146 040 163 145	f se
001145  aa  143 056 040 136	c. ^
001146  aa  067 056 063 146	7.3f
001147  aa  045 040 157 146	% of
001150  aa  040 123 153 151	 Ski
001151  aa  160 163 000 000	ps

001152  aa  040 040 040 145	   e
001153  aa  150 163 040 040	hs  
001154  aa  040 040 040 040	    
001155  aa  040 040 040 136	   ^
001156  aa  061 060 144 136	10d^
001157  aa  061 062 056 063	12.3
001160  aa  146 040 163 145	f se
001161  aa  143 056 040 136	c. ^
001162  aa  067 056 063 146	7.3f
001163  aa  045 040 157 146	% of
001164  aa  040 123 153 151	 Ski
001165  aa  160 163 000 000	ps

001166  aa  123 153 151 160	Skip
001167  aa  163 040 040 040	s   
001170  aa  040 040 040 040	    
001171  aa  040 040 040 136	   ^
001172  aa  061 060 144 136	10d^
001173  aa  061 062 056 063	12.3
001174  aa  146 040 163 145	f se
001175  aa  143 056 040 136	c. ^
001176  aa  067 056 063 146	7.3f
001177  aa  045 040 157 146	% of
001200  aa  040 123 164 145	 Ste
001201  aa  160 163 000 000	ps

001202  aa  040 040 040 141	   a
001203  aa  143 143 145 163	cces
001204  aa  163 040 040 040	s   
001205  aa  040 040 040 136	   ^
001206  aa  061 060 144 136	10d^
001207  aa  061 062 056 063	12.3
001210  aa  146 040 163 145	f se
001211  aa  143 056 040 136	c. ^
001212  aa  067 056 063 146	7.3f
001213  aa  045 040 157 146	% of
001214  aa  040 163 145 164	 set
001215  aa  146 141 165 154	faul
001216  aa  164 163 000 000	ts

001217  aa  040 040 040 141	   a
001220  aa  143 164 151 166	ctiv
001221  aa  141 164 151 157	atio
001222  aa  156 163 040 136	ns ^
001223  aa  061 060 144 136	10d^
001224  aa  061 062 056 063	12.3
001225  aa  146 040 163 145	f se
001226  aa  143 056 040 136	c. ^
001227  aa  067 056 063 146	7.3f
001230  aa  045 040 157 146	% of
001231  aa  040 123 145 147	 Seg
001232  aa  040 106 141 165	 Fau
001233  aa  154 164 163 000	lts

001234  aa  040 040 040 143	   c
001235  aa  141 154 154 040	all 
001236  aa  040 040 040 040	    
001237  aa  040 040 040 136	   ^
001240  aa  061 060 144 136	10d^
001241  aa  061 062 056 063	12.3
001242  aa  146 040 163 145	f se
001243  aa  143 056 040 136	c. ^
001244  aa  067 056 063 146	7.3f
001245  aa  045 040 157 146	% of
001246  aa  040 123 145 147	 Seg
001247  aa  040 106 141 165	 Fau
001250  aa  154 164 163 000	lts

001251  aa  040 040 040 146	   f
001252  aa  141 165 154 164	ault
001253  aa  040 040 040 040	    
001254  aa  040 040 040 136	   ^
001255  aa  061 060 144 136	10d^
001256  aa  061 062 056 063	12.3
001257  aa  146 040 163 145	f se
001260  aa  143 056 040 136	c. ^
001261  aa  067 056 063 146	7.3f
001262  aa  045 040 157 146	% of
001263  aa  040 123 145 147	 Seg
001264  aa  040 106 141 165	 Fau
001265  aa  154 164 163 000	lts

001266  aa  040 040 040 163	   s
001267  aa  165 143 143 145	ucce
001270  aa  163 163 145 163	sses
001271  aa  040 040 040 136	   ^
001272  aa  061 060 144 136	10d^
001273  aa  061 062 056 063	12.3
001274  aa  146 040 163 145	f se
001275  aa  143 056 040 136	c. ^
001276  aa  067 056 063 146	7.3f
001277  aa  045 054 040 136	%, ^
001300  aa  067 056 063 146	7.3f
001301  aa  045 040 157 146	% of
001302  aa  040 164 157 164	 tot
001303  aa  141 154 000 000	al

001304  aa  123 145 141 162	Sear
001305  aa  143 150 145 163	ches
001306  aa  040 040 040 040	    
001307  aa  040 040 040 136	   ^
001310  aa  061 060 144 136	10d^
001311  aa  061 062 056 063	12.3
001312  aa  146 040 163 145	f se
001313  aa  143 056 040 136	c. ^
001314  aa  133 136 067 056	[^7.
001315  aa  063 146 040 101	3f A
001316  aa  166 145 162 141	vera
001317  aa  147 145 040 143	ge c
001320  aa  157 163 164 136	ost^
001321  aa  073 136 163 136	;^s^
001322  aa  135 000 000 000	]

BEGIN PROCEDURE fsm
PROLOGUE SEQUENCE
001323  aa  6 00234 4401 00	sxl0 	pr6|156
						STATEMENT 1 ON LINE 62
001324  aa  6 00174 4501 00	stz  	pr6|124		pagesw
001325  aa  6 00175 4501 00	stz  	pr6|125		briefsw
001326  aa  6 00176 4501 00	stz  	pr6|126		astsw
001327  aa  6 00177 4501 00	stz  	pr6|127		rsw
001330  aa  6 00234 7201 00	lxl0 	pr6|156
001331  aa   000000 7100 10	tra  	0,0
MAIN SEQUENCE
ENTRY TO fsm                                                STATEMENT 1 ON LINE 29
file_system_meters:
fsm:
   procedure options (separate_static);

001332  da     000117200000
001333  aa   000360 6270 00	eax7 	240
001334  aa  7 00034 3521 20	epp2 	pr7|28,*
001335  aa  2 01353 2721 00	tsp2 	pr2|747		ss_ext_entry
001336  aa     000000000000
001337  aa     000000000000
001340  aa   777763 7000 04	tsx0 	-13,ic		001323
001341  aa   000010 7100 04	tra  	8,ic		001351
ENTRY TO file_system_meters                                 STATEMENT 1 ON LINE 29
file_system_meters:
fsm:
   procedure options (separate_static);

001342  da     000122200000
001343  aa   000360 6270 00	eax7 	240
001344  aa  7 00034 3521 20	epp2 	pr7|28,*
001345  aa  2 01353 2721 00	tsp2 	pr2|747		ss_ext_entry
001346  aa     000000000000
001347  aa     000000000000
001350  aa   777753 7000 04	tsx0 	-21,ic		001323
						STATEMENT 1 ON LINE 86
      if unique = 0
      then
         do;

001351  aa  6 00034 7641 00	lprp4	pr6|28
001352  ia  4 00000 2361 00	ldq  	pr4|0		unique
001353  aa   000041 6010 04	tnz  	33,ic		001414
						STATEMENT 1 ON LINE 89
	  call metering_util_$define_regions (unique, code, "sst_seg", 0, size (sst));

001354  aa   776516 2370 04	ldaq 	-690,ic		000072 = 163163164137 163145147000
001355  aa  6 00236 7571 00	staq 	pr6|158
001356  aa  6 00235 4501 00	stz  	pr6|157
001357  aa   001000 2360 07	ldq  	512,dl
001360  aa  6 00240 7561 00	stq  	pr6|160
001361  ia  4 00000 3521 00	epp2 	pr4|0		unique
001362  aa  6 00244 2521 00	spri2	pr6|164
001363  aa  6 00106 3521 00	epp2 	pr6|70		code
001364  aa  6 00246 2521 00	spri2	pr6|166
001365  aa  6 00236 3521 00	epp2 	pr6|158
001366  aa  6 00250 2521 00	spri2	pr6|168
001367  aa  6 00235 3521 00	epp2 	pr6|157
001370  aa  6 00252 2521 00	spri2	pr6|170
001371  aa  6 00240 3521 00	epp2 	pr6|160
001372  aa  6 00254 2521 00	spri2	pr6|172
001373  aa   776467 3520 04	epp2 	-713,ic		000062 = 404000000021
001374  aa  6 00256 2521 00	spri2	pr6|174
001375  aa   776463 3520 04	epp2 	-717,ic		000060 = 404000000043
001376  aa  6 00260 2521 00	spri2	pr6|176
001377  aa   776460 3520 04	epp2 	-720,ic		000057 = 524000000007
001400  aa  6 00262 2521 00	spri2	pr6|178
001401  aa   776455 3520 04	epp2 	-723,ic		000056 = 404000000005
001402  aa  6 00264 2521 00	spri2	pr6|180
001403  aa   776452 3520 04	epp2 	-726,ic		000055 = 404000000030
001404  aa  6 00266 2521 00	spri2	pr6|182
001405  aa  6 00242 6211 00	eax1 	pr6|162
001406  aa   024000 4310 07	fld  	10240,dl
001407  aa  6 00044 3735 20	epp7 	pr6|36,*
001410  la  7 00020 3521 20	epp2 	pr7|16,*		metering_util_$define_regions
001411  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 90
	  if code ^= 0
	  then go to error;

001412  aa  6 00106 2361 00	ldq  	pr6|70		code
001413  aa   005307 6010 04	tnz  	2759,ic		006722
						STATEMENT 1 ON LINE 92
         end;

						STATEMENT 1 ON LINE 94
      argc = cu_$arg_count ();

001414  aa  6 00104 3521 00	epp2 	pr6|68		argc
001415  aa  6 00244 2521 00	spri2	pr6|164
001416  aa  6 00242 6211 00	eax1 	pr6|162
001417  aa   004000 4310 07	fld  	2048,dl
001420  aa  6 00044 3701 20	epp4 	pr6|36,*
001421  la  4 00012 3521 20	epp2 	pr4|10,*		cu_$arg_count
001422  aa  0 00623 7001 00	tsx0 	pr0|403		call_ext_out
						STATEMENT 1 ON LINE 95
      do argx = 1 to argc;

001423  aa  6 00104 2361 00	ldq  	pr6|68		argc
001424  aa  6 00216 7561 00	stq  	pr6|142
001425  aa   000001 2360 07	ldq  	1,dl
001426  aa  6 00105 7561 00	stq  	pr6|69		argx
001427  aa   000000 0110 03	nop  	0,du
001430  aa  6 00105 2361 00	ldq  	pr6|69		argx
001431  aa  6 00216 1161 00	cmpq 	pr6|142
001432  aa   000142 6054 04	tpnz 	98,ic		001574
						STATEMENT 1 ON LINE 96
         call cu_$arg_ptr (argx, argp, argl, code);

001433  aa  6 00105 3521 00	epp2 	pr6|69		argx
001434  aa  6 00244 2521 00	spri2	pr6|164
001435  aa  6 00102 3521 00	epp2 	pr6|66		argp
001436  aa  6 00246 2521 00	spri2	pr6|166
001437  aa  6 00100 3521 00	epp2 	pr6|64		argl
001440  aa  6 00250 2521 00	spri2	pr6|168
001441  aa  6 00106 3521 00	epp2 	pr6|70		code
001442  aa  6 00252 2521 00	spri2	pr6|170
001443  aa  6 00242 6211 00	eax1 	pr6|162
001444  aa   020000 4310 07	fld  	8192,dl
001445  aa  6 00044 3701 20	epp4 	pr6|36,*
001446  la  4 00014 3521 20	epp2 	pr4|12,*		cu_$arg_ptr
001447  aa  0 00623 7001 00	tsx0 	pr0|403		call_ext_out
						STATEMENT 1 ON LINE 97
         if code = error_table_$noarg | argl = 0
         then go to endarg;

001450  aa  6 00106 2361 00	ldq  	pr6|70		code
001451  aa  6 00044 3701 20	epp4 	pr6|36,*
001452  la  4 00026 1161 20	cmpq 	pr4|22,*		error_table_$noarg
001453  aa   000121 6000 04	tze  	81,ic		001574
001454  aa  6 00100 2361 00	ldq  	pr6|64		argl
001455  aa   000117 6000 04	tze  	79,ic		001574
						STATEMENT 1 ON LINE 99
         if targ = "-reset" | targ = "-rs"
         then rsw = "1"b;

001456  aa  6 00102 3735 20	epp7 	pr6|66,*		argp
001457  aa  040 004 106 540	cmpc 	(pr,rl),(ic),fill(040)
001460  aa  7 00000 00 0006	desc9a	pr7|0,ql		targ
001461  aa   776411 00 0006	desc9a	-759,6		000070 = 055162145163
001462  aa   000005 6000 04	tze  	5,ic		001467
001463  aa  040 004 106 540	cmpc 	(pr,rl),(ic),fill(040)
001464  aa  7 00000 00 0006	desc9a	pr7|0,ql		targ
001465  aa   776371 00 0003	desc9a	-775,3		000054 = 055162163000
001466  aa   000004 6010 04	tnz  	4,ic		001472
001467  aa   400000 2350 03	lda  	131072,du
001470  aa  6 00177 7551 00	sta  	pr6|127		rsw
001471  aa   000101 7100 04	tra  	65,ic		001572
						STATEMENT 1 ON LINE 101
         else if targ = "-page" | targ = "-pg"
         then pagesw = "1"b;

001472  aa  040 004 106 540	cmpc 	(pr,rl),(ic),fill(040)
001473  aa  7 00000 00 0006	desc9a	pr7|0,ql		targ
001474  aa   776374 00 0005	desc9a	-772,5		000066 = 055160141147
001475  aa   000005 6000 04	tze  	5,ic		001502
001476  aa  040 004 106 540	cmpc 	(pr,rl),(ic),fill(040)
001477  aa  7 00000 00 0006	desc9a	pr7|0,ql		targ
001500  aa   776355 00 0003	desc9a	-787,3		000053 = 055160147000
001501  aa   000004 6010 04	tnz  	4,ic		001505
001502  aa   400000 2350 03	lda  	131072,du
001503  aa  6 00174 7551 00	sta  	pr6|124		pagesw
001504  aa   000066 7100 04	tra  	54,ic		001572
						STATEMENT 1 ON LINE 103
         else if targ = "-ast"
         then astsw = "1"b;

001505  aa  040 004 106 540	cmpc 	(pr,rl),(ic),fill(040)
001506  aa  7 00000 00 0006	desc9a	pr7|0,ql		targ
001507  aa   776345 00 0004	desc9a	-795,4		000052 = 055141163164
001510  aa   000004 6010 04	tnz  	4,ic		001514
001511  aa   400000 2350 03	lda  	131072,du
001512  aa  6 00176 7551 00	sta  	pr6|126		astsw
001513  aa   000057 7100 04	tra  	47,ic		001572
						STATEMENT 1 ON LINE 105
         else if targ = "-brief" | targ = "-bf"
         then briefsw = "1"b;

001514  aa  040 004 106 540	cmpc 	(pr,rl),(ic),fill(040)
001515  aa  7 00000 00 0006	desc9a	pr7|0,ql		targ
001516  aa   776350 00 0006	desc9a	-792,6		000064 = 055142162151
001517  aa   000005 6000 04	tze  	5,ic		001524
001520  aa  040 004 106 540	cmpc 	(pr,rl),(ic),fill(040)
001521  aa  7 00000 00 0006	desc9a	pr7|0,ql		targ
001522  aa   776331 00 0003	desc9a	-807,3		000051 = 055142146000
001523  aa   000004 6010 04	tnz  	4,ic		001527
001524  aa   400000 2350 03	lda  	131072,du
001525  aa  6 00175 7551 00	sta  	pr6|125		briefsw
001526  aa   000044 7100 04	tra  	36,ic		001572
						STATEMENT 1 ON LINE 107
         else if targ = "-report_reset" | targ = "-rr"
         then rsw, astsw, pagesw = "1"b;

001527  aa  040 004 106 540	cmpc 	(pr,rl),(ic),fill(040)
001530  aa  7 00000 00 0006	desc9a	pr7|0,ql		targ
001531  aa   776355 00 0015	desc9a	-787,13		000104 = 055162145160
001532  aa   000005 6000 04	tze  	5,ic		001537
001533  aa  040 004 106 540	cmpc 	(pr,rl),(ic),fill(040)
001534  aa  7 00000 00 0006	desc9a	pr7|0,ql		targ
001535  aa   776315 00 0003	desc9a	-819,3		000050 = 055162162000
001536  aa   000006 6010 04	tnz  	6,ic		001544
001537  aa   400000 2350 03	lda  	131072,du
001540  aa  6 00177 7551 00	sta  	pr6|127		rsw
001541  aa  6 00176 7551 00	sta  	pr6|126		astsw
001542  aa  6 00174 7551 00	sta  	pr6|124		pagesw
001543  aa   000027 7100 04	tra  	23,ic		001572
						STATEMENT 1 ON LINE 109
         else
	  do;

						STATEMENT 1 ON LINE 111
	     call com_err_ (error_table_$badopt, "file_system_meters", targ);

001544  aa   526000 2760 03	orq  	175104,du
001545  aa  6 00240 7561 00	stq  	pr6|160
001546  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
001547  aa   776431 00 0024	desc9a	-743,20		000177 = 146151154145
001550  aa  6 00242 00 0024	desc9a	pr6|162,20
001551  la  4 00030 3521 20	epp2 	pr4|24,*		error_table_$badopt
001552  aa  6 00272 2521 00	spri2	pr6|186
001553  aa  6 00242 3521 00	epp2 	pr6|162
001554  aa  6 00274 2521 00	spri2	pr6|188
001555  aa  7 00000 3521 00	epp2 	pr7|0		targ
001556  aa  6 00276 2521 00	spri2	pr6|190
001557  aa   776301 3520 04	epp2 	-831,ic		000060 = 404000000043
001560  aa  6 00300 2521 00	spri2	pr6|192
001561  aa   776266 3520 04	epp2 	-842,ic		000047 = 524000000022
001562  aa  6 00302 2521 00	spri2	pr6|194
001563  aa  6 00240 3521 00	epp2 	pr6|160
001564  aa  6 00304 2521 00	spri2	pr6|196
001565  aa  6 00270 6211 00	eax1 	pr6|184
001566  aa   014000 4310 07	fld  	6144,dl
001567  la  4 00010 3521 20	epp2 	pr4|8,*		com_err_
001570  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 112
	     return;

001571  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 113
	  end;

						STATEMENT 1 ON LINE 114
      end;

001572  aa  6 00105 0541 00	aos  	pr6|69		argx
001573  aa   777635 7100 04	tra  	-99,ic		001430
						STATEMENT 1 ON LINE 116
endarg:
      if argc = 0
      then astsw, pagesw = "1"b;

001574  aa  6 00104 2361 00	ldq  	pr6|68		argc
001575  aa   000004 6010 04	tnz  	4,ic		001601
001576  aa   400000 2350 03	lda  	131072,du
001577  aa  6 00176 7551 00	sta  	pr6|126		astsw
001600  aa  6 00174 7551 00	sta  	pr6|124		pagesw
						STATEMENT 1 ON LINE 119
      if briefsw & ^pagesw & ^astsw
      then astsw, pagesw = "1"b;

001601  aa  6 00175 2351 00	lda  	pr6|125		briefsw
001602  aa   000010 6000 04	tze  	8,ic		001612
001603  aa  6 00174 2351 00	lda  	pr6|124		pagesw
001604  aa   000006 6010 04	tnz  	6,ic		001612
001605  aa  6 00176 2351 00	lda  	pr6|126		astsw
001606  aa   000004 6010 04	tnz  	4,ic		001612
001607  aa   400000 2350 03	lda  	131072,du
001610  aa  6 00176 7551 00	sta  	pr6|126		astsw
001611  aa  6 00174 7551 00	sta  	pr6|124		pagesw
						STATEMENT 1 ON LINE 122
      call metering_util_$fill_buffers (unique, meter_time_fixed, formatted_time, a_sstp2, a_sstp1, code);

001612  aa  6 00034 7641 00	lprp4	pr6|28
001613  ia  4 00000 3521 00	epp2 	pr4|0		unique
001614  aa  6 00310 2521 00	spri2	pr6|200
001615  aa  6 00120 3521 00	epp2 	pr6|80		meter_time_fixed
001616  aa  6 00312 2521 00	spri2	pr6|202
001617  aa  6 00110 3521 00	epp2 	pr6|72		formatted_time
001620  aa  6 00314 2521 00	spri2	pr6|204
001621  aa  6 00214 3521 00	epp2 	pr6|140		a_sstp2
001622  aa  6 00316 2521 00	spri2	pr6|206
001623  aa  6 00212 3521 00	epp2 	pr6|138		a_sstp1
001624  aa  6 00320 2521 00	spri2	pr6|208
001625  aa  6 00106 3521 00	epp2 	pr6|70		code
001626  aa  6 00322 2521 00	spri2	pr6|210
001627  aa   776233 3520 04	epp2 	-869,ic		000062 = 404000000021
001630  aa  6 00324 2521 00	spri2	pr6|212
001631  aa   776214 3520 04	epp2 	-884,ic		000045 = 410000000107
001632  aa  6 00326 2521 00	spri2	pr6|214
001633  aa   776211 3520 04	epp2 	-887,ic		000044 = 526000000012
001634  aa  6 00330 2521 00	spri2	pr6|216
001635  aa   776243 3520 04	epp2 	-861,ic		000100 = 464100000000
001636  aa  6 00332 2521 00	spri2	pr6|218
001637  aa  6 00334 2521 00	spri2	pr6|220
001640  aa   776220 3520 04	epp2 	-880,ic		000060 = 404000000043
001641  aa  6 00336 2521 00	spri2	pr6|222
001642  aa  6 00306 6211 00	eax1 	pr6|198
001643  aa   030000 4310 07	fld  	12288,dl
001644  aa  6 00044 3735 20	epp7 	pr6|36,*
001645  la  7 00022 3521 20	epp2 	pr7|18,*		metering_util_$fill_buffers
001646  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 123
      if code ^= 0
      then go to error;

001647  aa  6 00106 2361 00	ldq  	pr6|70		code
001650  aa   005052 6010 04	tnz  	2602,ic		006722
						STATEMENT 1 ON LINE 125
      sstp1 = a_sstp1 (1);

001651  aa  6 00212 3735 20	epp7 	pr6|138,*		a_sstp1
001652  aa  6 00034 7641 00	lprp4	pr6|28
001653  ia  4 00002 6535 00	spri7	pr4|2		sstp1
						STATEMENT 1 ON LINE 126
      sstp2 = a_sstp2 (1);

001654  aa  6 00214 3715 20	epp5 	pr6|140,*		a_sstp2
001655  ia  4 00004 6515 00	spri5	pr4|4		sstp2
						STATEMENT 1 ON LINE 127
      meter_time = meter_time_fixed;

001656  aa  6 00120 2371 00	ldaq 	pr6|80		meter_time_fixed
001657  aa   216000 4110 03	lde  	72704,du
001660  aa   400000 4750 03	fad  	131072,du
001661  aa  6 00116 4551 00	fst  	pr6|78		meter_time
						STATEMENT 1 ON LINE 128
      call ioa_ ("^/Total metering time^-^a^/", formatted_time);

001662  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
001663  aa   776515 00 0034	desc9a	-691,28		000377 = 136057124157
001664  aa  6 00270 00 0034	desc9a	pr6|184,28
001665  aa  6 00270 3521 00	epp2 	pr6|184
001666  aa  6 00244 2521 00	spri2	pr6|164
001667  aa  6 00110 3521 00	epp2 	pr6|72		formatted_time
001670  aa  6 00246 2521 00	spri2	pr6|166
001671  aa   776152 3520 04	epp2 	-918,ic		000043 = 524000000033
001672  aa  6 00250 2521 00	spri2	pr6|168
001673  aa   776151 3520 04	epp2 	-919,ic		000044 = 526000000012
001674  aa  6 00252 2521 00	spri2	pr6|170
001675  aa  6 00242 6211 00	eax1 	pr6|162
001676  aa   010000 4310 07	fld  	4096,dl
001677  aa  6 00044 3535 20	epp3 	pr6|36,*
001700  la  3 00016 3521 20	epp2 	pr3|14,*		ioa_
001701  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 130
      if astsw
      then
         do;

001702  aa  6 00176 2351 00	lda  	pr6|126		astsw
001703  aa   003261 6000 04	tze  	1713,ic		005164
						STATEMENT 1 ON LINE 133
	  acts = sstp2 -> sst.activations - sstp1 -> sst.activations;

001704  aa  6 00034 7641 00	lprp4	pr6|28
001705  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
001706  aa  7 00517 2361 00	ldq  	pr7|335		sst.activations
001707  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
001710  aa  5 00517 1761 00	sbq  	pr5|335		sst.activations
001711  aa  6 00167 7561 00	stq  	pr6|119		acts
						STATEMENT 1 ON LINE 134
	  mkacts = sstp2 -> sst.makeknown_activations - sstp1 -> sst.makeknown_activations;

001712  aa  7 00533 3361 00	lcq  	pr7|347		sst.makeknown_activations
001713  aa   000044 7770 00	llr  	36
001714  aa   000044 7330 00	lrs  	36
001715  aa  5 00533 0331 00	adl  	pr5|347		sst.makeknown_activations
001716  aa   000000 5330 00	negl 	0
001717  aa  6 00170 7561 00	stq  	pr6|120		mkacts
						STATEMENT 1 ON LINE 135
	  bkacts = sstp2 -> sst.backup_activations - sstp1 -> sst.backup_activations;

001720  aa  7 00534 3361 00	lcq  	pr7|348		sst.backup_activations
001721  aa   000044 7770 00	llr  	36
001722  aa   000044 7330 00	lrs  	36
001723  aa  5 00534 0331 00	adl  	pr5|348		sst.backup_activations
001724  aa   000000 5330 00	negl 	0
001725  aa  6 00172 7561 00	stq  	pr6|122		bkacts
						STATEMENT 1 ON LINE 136
	  synchacts = sstp2 -> synch_activations - sstp1 -> sst.synch_activations;

001726  aa  7 00102 3361 00	lcq  	pr7|66		sst.synch_activations
001727  aa   000044 7770 00	llr  	36
001730  aa   000044 7330 00	lrs  	36
001731  aa  5 00102 0331 00	adl  	pr5|66		sst.synch_activations
001732  aa   000000 5330 00	negl 	0
001733  aa  6 00173 7561 00	stq  	pr6|123		synchacts
						STATEMENT 1 ON LINE 137
	  sfacts = acts - mkacts - bkacts;

001734  aa  6 00167 3361 00	lcq  	pr6|119		acts
001735  aa   000044 7770 00	llr  	36
001736  aa   000044 7330 00	lrs  	36
001737  aa  6 00170 0331 00	adl  	pr6|120		mkacts
001740  aa   000000 5330 00	negl 	0
001741  aa   000000 5330 00	negl 	0
001742  aa  6 00172 0331 00	adl  	pr6|122		bkacts
001743  aa   000000 5330 00	negl 	0
001744  aa  6 00171 7561 00	stq  	pr6|121		sfacts
						STATEMENT 1 ON LINE 138
	  f_acts = max (1, acts) / 1e2;

001745  aa   016620 4310 03	fld  	7568,du
001746  aa  6 00236 4571 00	dfst 	pr6|158
001747  aa   000001 2360 07	ldq  	1,dl
001750  aa  6 00167 1161 00	cmpq 	pr6|119		acts
001751  aa   000002 6050 04	tpl  	2,ic		001753
001752  aa  6 00167 2361 00	ldq  	pr6|119		acts
001753  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
001754  aa  6 00236 5671 00	dfdv 	pr6|158
001755  aa  6 00207 4551 00	fst  	pr6|135		f_acts
						STATEMENT 1 ON LINE 140
	  call ioa_ ("^/^-^-   #^-     ATB");

001756  aa   776214 2370 04	ldaq 	-884,ic		000172 = 136057136055 136055040040
001757  aa  6 00270 7571 00	staq 	pr6|184
001760  aa   776214 2370 04	ldaq 	-884,ic		000174 = 040043136055 040040040040
001761  aa  6 00272 7571 00	staq 	pr6|186
001762  aa   776214 2350 04	lda  	-884,ic		000176 = 040101124102
001763  aa  6 00274 7551 00	sta  	pr6|188
001764  aa  6 00270 3521 00	epp2 	pr6|184
001765  aa  6 00244 2521 00	spri2	pr6|164
001766  aa   776054 3520 04	epp2 	-980,ic		000042 = 524000000024
001767  aa  6 00246 2521 00	spri2	pr6|166
001770  aa  6 00242 6211 00	eax1 	pr6|162
001771  aa   004000 4310 07	fld  	2048,dl
001772  aa  6 00044 3535 20	epp3 	pr6|36,*
001773  la  3 00016 3521 20	epp2 	pr3|14,*		ioa_
001774  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 141
	  call ioa_ ("^/Activations    ^10d^12.3f sec.", acts, mtb_sec (acts));

001775  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
001776  aa   776621 00 0040	desc9a	-623,32		000616 = 136057101143
001777  aa  6 00270 00 0040	desc9a	pr6|184,32
002000  aa   005250 3520 04	epp2 	2728,ic		007250 = 000004000000
002001  aa   004742 6700 04	tsp4 	2530,ic		006743
002002  aa  6 00270 3521 00	epp2 	pr6|184
002003  aa  6 00244 2521 00	spri2	pr6|164
002004  aa  6 00167 3521 00	epp2 	pr6|119		acts
002005  aa  6 00246 2521 00	spri2	pr6|166
002006  aa  6 00240 3521 00	epp2 	pr6|160
002007  aa  6 00250 2521 00	spri2	pr6|168
002010  aa   776031 3520 04	epp2 	-999,ic		000041 = 524000000040
002011  aa  6 00252 2521 00	spri2	pr6|170
002012  aa   776046 3520 04	epp2 	-986,ic		000060 = 404000000043
002013  aa  6 00254 2521 00	spri2	pr6|172
002014  aa   776045 3520 04	epp2 	-987,ic		000061 = 414000000033
002015  aa  6 00256 2521 00	spri2	pr6|174
002016  aa  6 00242 6211 00	eax1 	pr6|162
002017  aa   014000 4310 07	fld  	6144,dl
002020  aa  6 00044 3701 20	epp4 	pr6|36,*
002021  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
002022  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 143
	  if sfacts ^= 0
	  then call ioa_ ("   segfault    ^10d^12.3f sec. ^7.3f% of all", sfacts, mtb_sec (sfacts), sfacts / f_acts);

002023  aa  6 00171 2361 00	ldq  	pr6|121		sfacts
002024  aa   000041 6000 04	tze  	33,ic		002065
002025  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
002026  aa   777016 00 0054	desc9a	-498,44		001043 = 040040040163
002027  aa  6 00270 00 0054	desc9a	pr6|184,44
002030  aa   005212 3520 04	epp2 	2698,ic		007242 = 000004000000
002031  aa   004712 6700 04	tsp4 	2506,ic		006743
002032  aa  6 00207 4311 00	fld  	pr6|135		f_acts
002033  aa  6 00236 4571 00	dfst 	pr6|158		f_acts
002034  aa  6 00171 2361 00	ldq  	pr6|121		sfacts
002035  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
002036  aa  6 00236 5671 00	dfdv 	pr6|158		f_acts
002037  aa  6 00236 4571 00	dfst 	pr6|158
002040  aa  6 00270 3521 00	epp2 	pr6|184
002041  aa  6 00244 2521 00	spri2	pr6|164
002042  aa  6 00171 3521 00	epp2 	pr6|121		sfacts
002043  aa  6 00246 2521 00	spri2	pr6|166
002044  aa  6 00240 3521 00	epp2 	pr6|160
002045  aa  6 00250 2521 00	spri2	pr6|168
002046  aa  6 00236 3521 00	epp2 	pr6|158
002047  aa  6 00252 2521 00	spri2	pr6|170
002050  aa   775770 3520 04	epp2 	-1032,ic		000040 = 524000000054
002051  aa  6 00254 2521 00	spri2	pr6|172
002052  aa   776006 3520 04	epp2 	-1018,ic		000060 = 404000000043
002053  aa  6 00256 2521 00	spri2	pr6|174
002054  aa   776005 3520 04	epp2 	-1019,ic		000061 = 414000000033
002055  aa  6 00260 2521 00	spri2	pr6|176
002056  aa   775761 3520 04	epp2 	-1039,ic		000037 = 420000000043
002057  aa  6 00262 2521 00	spri2	pr6|178
002060  aa  6 00242 6211 00	eax1 	pr6|162
002061  aa   020000 4310 07	fld  	8192,dl
002062  aa  6 00044 3701 20	epp4 	pr6|36,*
002063  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
002064  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 146
	  if mkacts ^= 0
	  then call ioa_ ("   makeknown   ^10d^12.3f sec. ^7.3f% of all", mkacts, mtb_sec (mkacts), mkacts / f_acts);

002065  aa  6 00170 2361 00	ldq  	pr6|120		mkacts
002066  aa   000041 6000 04	tze  	33,ic		002127
002067  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
002070  aa   776741 00 0054	desc9a	-543,44		001030 = 040040040155
002071  aa  6 00270 00 0054	desc9a	pr6|184,44
002072  aa   005142 3520 04	epp2 	2658,ic		007234 = 000004000000
002073  aa   004650 6700 04	tsp4 	2472,ic		006743
002074  aa  6 00207 4311 00	fld  	pr6|135		f_acts
002075  aa  6 00236 4571 00	dfst 	pr6|158		f_acts
002076  aa  6 00170 2361 00	ldq  	pr6|120		mkacts
002077  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
002100  aa  6 00236 5671 00	dfdv 	pr6|158		f_acts
002101  aa  6 00236 4571 00	dfst 	pr6|158
002102  aa  6 00270 3521 00	epp2 	pr6|184
002103  aa  6 00244 2521 00	spri2	pr6|164
002104  aa  6 00170 3521 00	epp2 	pr6|120		mkacts
002105  aa  6 00246 2521 00	spri2	pr6|166
002106  aa  6 00240 3521 00	epp2 	pr6|160
002107  aa  6 00250 2521 00	spri2	pr6|168
002110  aa  6 00236 3521 00	epp2 	pr6|158
002111  aa  6 00252 2521 00	spri2	pr6|170
002112  aa   775726 3520 04	epp2 	-1066,ic		000040 = 524000000054
002113  aa  6 00254 2521 00	spri2	pr6|172
002114  aa   775744 3520 04	epp2 	-1052,ic		000060 = 404000000043
002115  aa  6 00256 2521 00	spri2	pr6|174
002116  aa   775743 3520 04	epp2 	-1053,ic		000061 = 414000000033
002117  aa  6 00260 2521 00	spri2	pr6|176
002120  aa   775717 3520 04	epp2 	-1073,ic		000037 = 420000000043
002121  aa  6 00262 2521 00	spri2	pr6|178
002122  aa  6 00242 6211 00	eax1 	pr6|162
002123  aa   020000 4310 07	fld  	8192,dl
002124  aa  6 00044 3701 20	epp4 	pr6|36,*
002125  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
002126  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 149
	  if bkacts ^= 0
	  then call ioa_ ("   backup      ^10d^12.3f sec. ^7.3f% of all", bkacts, mtb_sec (bkacts), bkacts / f_acts);

002127  aa  6 00172 2361 00	ldq  	pr6|122		bkacts
002130  aa   000041 6000 04	tze  	33,ic		002171
002131  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
002132  aa   776664 00 0054	desc9a	-588,44		001015 = 040040040142
002133  aa  6 00270 00 0054	desc9a	pr6|184,44
002134  aa   005072 3520 04	epp2 	2618,ic		007226 = 000004000000
002135  aa   004606 6700 04	tsp4 	2438,ic		006743
002136  aa  6 00207 4311 00	fld  	pr6|135		f_acts
002137  aa  6 00236 4571 00	dfst 	pr6|158		f_acts
002140  aa  6 00172 2361 00	ldq  	pr6|122		bkacts
002141  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
002142  aa  6 00236 5671 00	dfdv 	pr6|158		f_acts
002143  aa  6 00236 4571 00	dfst 	pr6|158
002144  aa  6 00270 3521 00	epp2 	pr6|184
002145  aa  6 00244 2521 00	spri2	pr6|164
002146  aa  6 00172 3521 00	epp2 	pr6|122		bkacts
002147  aa  6 00246 2521 00	spri2	pr6|166
002150  aa  6 00240 3521 00	epp2 	pr6|160
002151  aa  6 00250 2521 00	spri2	pr6|168
002152  aa  6 00236 3521 00	epp2 	pr6|158
002153  aa  6 00252 2521 00	spri2	pr6|170
002154  aa   775664 3520 04	epp2 	-1100,ic		000040 = 524000000054
002155  aa  6 00254 2521 00	spri2	pr6|172
002156  aa   775702 3520 04	epp2 	-1086,ic		000060 = 404000000043
002157  aa  6 00256 2521 00	spri2	pr6|174
002160  aa   775701 3520 04	epp2 	-1087,ic		000061 = 414000000033
002161  aa  6 00260 2521 00	spri2	pr6|176
002162  aa   775655 3520 04	epp2 	-1107,ic		000037 = 420000000043
002163  aa  6 00262 2521 00	spri2	pr6|178
002164  aa  6 00242 6211 00	eax1 	pr6|162
002165  aa   020000 4310 07	fld  	8192,dl
002166  aa  6 00044 3701 20	epp4 	pr6|36,*
002167  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
002170  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 152
	  j = sstp2 -> sst.dir_activations - sstp1 -> sst.dir_activations;

002171  aa  6 00034 7641 00	lprp4	pr6|28
002172  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
002173  aa  7 00520 2361 00	ldq  	pr7|336		sst.dir_activations
002174  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
002175  aa  5 00520 1761 00	sbq  	pr5|336		sst.dir_activations
002176  aa  6 00114 7561 00	stq  	pr6|76		j
						STATEMENT 1 ON LINE 153
	  if j ^= 0
	  then call ioa_ ("   directories ^10d^12.3f sec. ^7.3f% of all", j, mtb_sec (j), j / f_acts);

002177  aa   000041 6000 04	tze  	33,ic		002240
002200  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
002201  aa   776602 00 0054	desc9a	-638,44		001002 = 040040040144
002202  aa  6 00270 00 0054	desc9a	pr6|184,44
002203  aa   005015 3520 04	epp2 	2573,ic		007220 = 000004000000
002204  aa   004537 6700 04	tsp4 	2399,ic		006743
002205  aa  6 00207 4311 00	fld  	pr6|135		f_acts
002206  aa  6 00236 4571 00	dfst 	pr6|158		f_acts
002207  aa  6 00114 2361 00	ldq  	pr6|76		j
002210  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
002211  aa  6 00236 5671 00	dfdv 	pr6|158		f_acts
002212  aa  6 00236 4571 00	dfst 	pr6|158
002213  aa  6 00270 3521 00	epp2 	pr6|184
002214  aa  6 00244 2521 00	spri2	pr6|164
002215  aa  6 00114 3521 00	epp2 	pr6|76		j
002216  aa  6 00246 2521 00	spri2	pr6|166
002217  aa  6 00240 3521 00	epp2 	pr6|160
002220  aa  6 00250 2521 00	spri2	pr6|168
002221  aa  6 00236 3521 00	epp2 	pr6|158
002222  aa  6 00252 2521 00	spri2	pr6|170
002223  aa   775615 3520 04	epp2 	-1139,ic		000040 = 524000000054
002224  aa  6 00254 2521 00	spri2	pr6|172
002225  aa   775633 3520 04	epp2 	-1125,ic		000060 = 404000000043
002226  aa  6 00256 2521 00	spri2	pr6|174
002227  aa   775632 3520 04	epp2 	-1126,ic		000061 = 414000000033
002230  aa  6 00260 2521 00	spri2	pr6|176
002231  aa   775606 3520 04	epp2 	-1146,ic		000037 = 420000000043
002232  aa  6 00262 2521 00	spri2	pr6|178
002233  aa  6 00242 6211 00	eax1 	pr6|162
002234  aa   020000 4310 07	fld  	8192,dl
002235  aa  6 00044 3701 20	epp4 	pr6|36,*
002236  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
002237  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 156
	  if synchacts ^= 0
	  then call ioa_ ("   synch      ^10d^12.3f sec. ^7.3f% of all", synchacts, mtb_sec (synchacts),
		  synchacts / f_acts);

002240  aa  6 00173 2361 00	ldq  	pr6|123		synchacts
002241  aa   000041 6000 04	tze  	33,ic		002302
002242  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
002243  aa   776525 00 0054	desc9a	-683,44		000767 = 040040040163
002244  aa  6 00270 00 0054	desc9a	pr6|184,44
002245  aa   004745 3520 04	epp2 	2533,ic		007212 = 000004000000
002246  aa   004475 6700 04	tsp4 	2365,ic		006743
002247  aa  6 00207 4311 00	fld  	pr6|135		f_acts
002250  aa  6 00236 4571 00	dfst 	pr6|158		f_acts
002251  aa  6 00173 2361 00	ldq  	pr6|123		synchacts
002252  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
002253  aa  6 00236 5671 00	dfdv 	pr6|158		f_acts
002254  aa  6 00236 4571 00	dfst 	pr6|158
002255  aa  6 00270 3521 00	epp2 	pr6|184
002256  aa  6 00244 2521 00	spri2	pr6|164
002257  aa  6 00173 3521 00	epp2 	pr6|123		synchacts
002260  aa  6 00246 2521 00	spri2	pr6|166
002261  aa  6 00240 3521 00	epp2 	pr6|160
002262  aa  6 00250 2521 00	spri2	pr6|168
002263  aa  6 00236 3521 00	epp2 	pr6|158
002264  aa  6 00252 2521 00	spri2	pr6|170
002265  aa   775551 3520 04	epp2 	-1175,ic		000036 = 524000000053
002266  aa  6 00254 2521 00	spri2	pr6|172
002267  aa   775571 3520 04	epp2 	-1159,ic		000060 = 404000000043
002270  aa  6 00256 2521 00	spri2	pr6|174
002271  aa   775570 3520 04	epp2 	-1160,ic		000061 = 414000000033
002272  aa  6 00260 2521 00	spri2	pr6|176
002273  aa   775544 3520 04	epp2 	-1180,ic		000037 = 420000000043
002274  aa  6 00262 2521 00	spri2	pr6|178
002275  aa  6 00242 6211 00	eax1 	pr6|162
002276  aa   020000 4310 07	fld  	8192,dl
002277  aa  6 00044 3701 20	epp4 	pr6|36,*
002300  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
002301  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 160
	  deacts = sstp2 -> sst.deact_count - sstp1 -> sst.deact_count;

002302  aa  6 00034 7641 00	lprp4	pr6|28
002303  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
002304  aa  7 00130 2361 00	ldq  	pr7|88		sst.deact_count
002305  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
002306  aa  5 00130 1761 00	sbq  	pr5|88		sst.deact_count
002307  aa  6 00165 7561 00	stq  	pr6|117		deacts
						STATEMENT 1 ON LINE 162
	  call ioa_ ("Deactivations  ^10d^12.3f sec.", deacts, mtb_sec (deacts));

002310  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
002311  aa   776276 00 0040	desc9a	-834,32		000606 = 104145141143
002312  aa  6 00270 00 0040	desc9a	pr6|184,32
002313  aa   004671 3520 04	epp2 	2489,ic		007204 = 000004000000
002314  aa   004427 6700 04	tsp4 	2327,ic		006743
002315  aa  6 00270 3521 00	epp2 	pr6|184
002316  aa  6 00244 2521 00	spri2	pr6|164
002317  aa  6 00165 3521 00	epp2 	pr6|117		deacts
002320  aa  6 00246 2521 00	spri2	pr6|166
002321  aa  6 00240 3521 00	epp2 	pr6|160
002322  aa  6 00250 2521 00	spri2	pr6|168
002323  aa   775512 3520 04	epp2 	-1206,ic		000035 = 524000000036
002324  aa  6 00252 2521 00	spri2	pr6|170
002325  aa   775533 3520 04	epp2 	-1189,ic		000060 = 404000000043
002326  aa  6 00254 2521 00	spri2	pr6|172
002327  aa   775532 3520 04	epp2 	-1190,ic		000061 = 414000000033
002330  aa  6 00256 2521 00	spri2	pr6|174
002331  aa  6 00242 6211 00	eax1 	pr6|162
002332  aa   014000 4310 07	fld  	6144,dl
002333  aa  6 00044 3701 20	epp4 	pr6|36,*
002334  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
002335  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 163
	  call ioa_ ("Demand deactivate");

002336  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
002337  aa   775627 00 0024	desc9a	-1129,20		000165 = 104145155141
002340  aa  6 00270 00 0024	desc9a	pr6|184,20
002341  aa  6 00270 3521 00	epp2 	pr6|184
002342  aa  6 00244 2521 00	spri2	pr6|164
002343  aa   775471 3520 04	epp2 	-1223,ic		000034 = 524000000021
002344  aa  6 00246 2521 00	spri2	pr6|166
002345  aa  6 00242 6211 00	eax1 	pr6|162
002346  aa   004000 4310 07	fld  	2048,dl
002347  aa  6 00044 3701 20	epp4 	pr6|36,*
002350  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
002351  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 165
	  deactas = sstp2 -> sst.demand_deact_attempts - sstp1 -> sst.demand_deact_attempts;

002352  aa  6 00034 7641 00	lprp4	pr6|28
002353  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
002354  aa  7 00131 2361 00	ldq  	pr7|89		sst.demand_deact_attempts
002355  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
002356  aa  5 00131 1761 00	sbq  	pr5|89		sst.demand_deact_attempts
002357  aa  6 00166 7561 00	stq  	pr6|118		deactas
						STATEMENT 1 ON LINE 166
	  if deactas ^= 0
	  then call ioa_ ("   attempts    ^10d^12.3f sec.", deactas, mtb_sec (deactas));

002360  aa   000027 6000 04	tze  	23,ic		002407
002361  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
002362  aa   776215 00 0040	desc9a	-883,32		000576 = 040040040141
002363  aa  6 00270 00 0040	desc9a	pr6|184,32
002364  aa   004612 3520 04	epp2 	2442,ic		007176 = 000004000000
002365  aa   004356 6700 04	tsp4 	2286,ic		006743
002366  aa  6 00270 3521 00	epp2 	pr6|184
002367  aa  6 00244 2521 00	spri2	pr6|164
002370  aa  6 00166 3521 00	epp2 	pr6|118		deactas
002371  aa  6 00246 2521 00	spri2	pr6|166
002372  aa  6 00240 3521 00	epp2 	pr6|160
002373  aa  6 00250 2521 00	spri2	pr6|168
002374  aa   775441 3520 04	epp2 	-1247,ic		000035 = 524000000036
002375  aa  6 00252 2521 00	spri2	pr6|170
002376  aa   775462 3520 04	epp2 	-1230,ic		000060 = 404000000043
002377  aa  6 00254 2521 00	spri2	pr6|172
002400  aa   775461 3520 04	epp2 	-1231,ic		000061 = 414000000033
002401  aa  6 00256 2521 00	spri2	pr6|174
002402  aa  6 00242 6211 00	eax1 	pr6|162
002403  aa   014000 4310 07	fld  	6144,dl
002404  aa  6 00044 3701 20	epp4 	pr6|36,*
002405  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
002406  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 169
	  j = sstp2 -> sst.demand_deactivations - sstp1 -> sst.demand_deactivations;

002407  aa  6 00034 7641 00	lprp4	pr6|28
002410  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
002411  aa  7 00132 2361 00	ldq  	pr7|90		sst.demand_deactivations
002412  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
002413  aa  5 00132 1761 00	sbq  	pr5|90		sst.demand_deactivations
002414  aa  6 00114 7561 00	stq  	pr6|76		j
						STATEMENT 1 ON LINE 170
	  if j ^= 0
	  then call ioa_ ("   successes   ^10d^12.3f sec. ^7.3f%, ^7.3f% of total", j, mtb_sec (j),
		  (j * 100.) / max (deactas, 1), (j * 100.) / max (deacts, 1));

002415  aa   000064 6000 04	tze  	52,ic		002501
002416  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
002417  aa   776650 00 0070	desc9a	-600,56		001266 = 040040040163
002420  aa  6 00270 00 0070	desc9a	pr6|184,56
002421  aa   004577 3520 04	epp2 	2431,ic		007220 = 000004000000
002422  aa   004321 6700 04	tsp4 	2257,ic		006743
002423  aa  6 00166 2361 00	ldq  	pr6|118		deactas
002424  aa   000001 1160 07	cmpq 	1,dl
002425  aa   000002 6050 04	tpl  	2,ic		002427
002426  aa   000001 2360 07	ldq  	1,dl
002427  aa  6 00235 7561 00	stq  	pr6|157
002430  aa  6 00114 2361 00	ldq  	pr6|76		j
002431  aa   000144 4020 07	mpy  	100,dl
002432  aa  6 00236 7571 00	staq 	pr6|158
002433  aa  6 00235 3521 00	epp2 	pr6|157
002434  aa  0 01264 7001 00	tsx0 	pr0|692		divide_fx3
002435  aa     000000000030
002436  aa  6 00340 7571 00	staq 	pr6|224
002437  aa  6 00165 2361 00	ldq  	pr6|117		deacts
002440  aa   000001 1160 07	cmpq 	1,dl
002441  aa   000002 6050 04	tpl  	2,ic		002443
002442  aa   000001 2360 07	ldq  	1,dl
002443  aa  6 00235 7561 00	stq  	pr6|157
002444  aa  6 00236 2371 00	ldaq 	pr6|158
002445  aa  6 00235 3521 00	epp2 	pr6|157
002446  aa  0 01264 7001 00	tsx0 	pr0|692		divide_fx3
002447  aa     000000000030
002450  aa  6 00236 7571 00	staq 	pr6|158
002451  aa  6 00270 3521 00	epp2 	pr6|184
002452  aa  6 00244 2521 00	spri2	pr6|164
002453  aa  6 00114 3521 00	epp2 	pr6|76		j
002454  aa  6 00246 2521 00	spri2	pr6|166
002455  aa  6 00240 3521 00	epp2 	pr6|160
002456  aa  6 00250 2521 00	spri2	pr6|168
002457  aa  6 00340 3521 00	epp2 	pr6|224
002460  aa  6 00252 2521 00	spri2	pr6|170
002461  aa  6 00236 3521 00	epp2 	pr6|158
002462  aa  6 00254 2521 00	spri2	pr6|172
002463  aa   775350 3520 04	epp2 	-1304,ic		000033 = 524000000066
002464  aa  6 00256 2521 00	spri2	pr6|174
002465  aa   775373 3520 04	epp2 	-1285,ic		000060 = 404000000043
002466  aa  6 00260 2521 00	spri2	pr6|176
002467  aa   775372 3520 04	epp2 	-1286,ic		000061 = 414000000033
002470  aa  6 00262 2521 00	spri2	pr6|178
002471  aa   775341 3520 04	epp2 	-1311,ic		000032 = 410000300107
002472  aa  6 00264 2521 00	spri2	pr6|180
002473  aa  6 00266 2521 00	spri2	pr6|182
002474  aa  6 00242 6211 00	eax1 	pr6|162
002475  aa   024000 4310 07	fld  	10240,dl
002476  aa  6 00044 3701 20	epp4 	pr6|36,*
002477  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
002500  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 174
	  sf = sstp2 -> sst.total_sf + sstp2 -> sst.seg_fault_calls - sstp1 -> sst.total_sf
	       - sstp1 -> sst.seg_fault_calls;

002501  aa  6 00034 7641 00	lprp4	pr6|28
002502  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
002503  aa  7 00163 2351 00	lda  	pr7|115		sst.total_sf
002504  aa   000044 7330 00	lrs  	36
002505  aa  7 00536 0331 00	adl  	pr7|350		sst.seg_fault_calls
002506  aa   000000 5330 00	negl 	0
002507  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
002510  aa  5 00163 0331 00	adl  	pr5|115		sst.total_sf
002511  aa   000000 5330 00	negl 	0
002512  aa   000000 5330 00	negl 	0
002513  aa  5 00536 0331 00	adl  	pr5|350		sst.seg_fault_calls
002514  aa   000000 5330 00	negl 	0
002515  aa  6 00124 7561 00	stq  	pr6|84		sf
						STATEMENT 1 ON LINE 176
	  call ioa_ ("Seg Faults     ^10d^12.3f sec.", sf, mtb_sec (sf));

002516  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
002517  aa   776050 00 0040	desc9a	-984,32		000566 = 123145147040
002520  aa  6 00270 00 0040	desc9a	pr6|184,32
002521  aa   004447 3520 04	epp2 	2343,ic		007170 = 000004000000
002522  aa   004221 6700 04	tsp4 	2193,ic		006743
002523  aa  6 00270 3521 00	epp2 	pr6|184
002524  aa  6 00244 2521 00	spri2	pr6|164
002525  aa  6 00124 3521 00	epp2 	pr6|84		sf
002526  aa  6 00246 2521 00	spri2	pr6|166
002527  aa  6 00240 3521 00	epp2 	pr6|160
002530  aa  6 00250 2521 00	spri2	pr6|168
002531  aa   775304 3520 04	epp2 	-1340,ic		000035 = 524000000036
002532  aa  6 00252 2521 00	spri2	pr6|170
002533  aa   775325 3520 04	epp2 	-1323,ic		000060 = 404000000043
002534  aa  6 00254 2521 00	spri2	pr6|172
002535  aa   775324 3520 04	epp2 	-1324,ic		000061 = 414000000033
002536  aa  6 00256 2521 00	spri2	pr6|174
002537  aa  6 00242 6211 00	eax1 	pr6|162
002540  aa   014000 4310 07	fld  	6144,dl
002541  aa  6 00044 3701 20	epp4 	pr6|36,*
002542  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
002543  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 178
	  if sf > 0
	  then
	     do;

002544  aa  6 00124 2361 00	ldq  	pr6|84		sf
002545  aa   000166 6044 04	tmoz 	118,ic		002733
						STATEMENT 1 ON LINE 181
	        j = sstp2 -> sst.total_sf - sstp1 -> sst.total_sf;

002546  aa  6 00034 7641 00	lprp4	pr6|28
002547  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
002550  aa  7 00163 2361 00	ldq  	pr7|115		sst.total_sf
002551  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
002552  aa  5 00163 1761 00	sbq  	pr5|115		sst.total_sf
002553  aa  6 00114 7561 00	stq  	pr6|76		j
						STATEMENT 1 ON LINE 182
	        call ioa_ ("   fault       ^10d^12.3f sec. ^7.3f% of Seg Faults", j, mtb_sec (j),
		   float (j) * 1.0e2 / sf);

002554  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
002555  aa   776475 00 0064	desc9a	-707,52		001251 = 040040040146
002556  aa  6 00270 00 0064	desc9a	pr6|184,52
002557  aa   004441 3520 04	epp2 	2337,ic		007220 = 000004000000
002560  aa   004163 6700 04	tsp4 	2163,ic		006743
002561  aa  6 00124 2361 00	ldq  	pr6|84		sf
002562  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
002563  aa  6 00236 4571 00	dfst 	pr6|158
002564  aa  6 00114 2361 00	ldq  	pr6|76		j
002565  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
002566  aa   016620 4610 03	fmp  	7568,du
002567  aa  6 00236 5671 00	dfdv 	pr6|158
002570  aa  6 00236 4571 00	dfst 	pr6|158
002571  aa  6 00270 3521 00	epp2 	pr6|184
002572  aa  6 00244 2521 00	spri2	pr6|164
002573  aa  6 00114 3521 00	epp2 	pr6|76		j
002574  aa  6 00246 2521 00	spri2	pr6|166
002575  aa  6 00240 3521 00	epp2 	pr6|160
002576  aa  6 00250 2521 00	spri2	pr6|168
002577  aa  6 00236 3521 00	epp2 	pr6|158
002600  aa  6 00252 2521 00	spri2	pr6|170
002601  aa   775230 3520 04	epp2 	-1384,ic		000031 = 524000000063
002602  aa  6 00254 2521 00	spri2	pr6|172
002603  aa   775255 3520 04	epp2 	-1363,ic		000060 = 404000000043
002604  aa  6 00256 2521 00	spri2	pr6|174
002605  aa   775254 3520 04	epp2 	-1364,ic		000061 = 414000000033
002606  aa  6 00260 2521 00	spri2	pr6|176
002607  aa   775230 3520 04	epp2 	-1384,ic		000037 = 420000000043
002610  aa  6 00262 2521 00	spri2	pr6|178
002611  aa  6 00242 6211 00	eax1 	pr6|162
002612  aa   020000 4310 07	fld  	8192,dl
002613  aa  6 00044 3701 20	epp4 	pr6|36,*
002614  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
002615  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 184
	        j = sstp2 -> sst.seg_fault_calls - sstp1 -> sst.seg_fault_calls;

002616  aa  6 00034 7641 00	lprp4	pr6|28
002617  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
002620  aa  7 00536 3361 00	lcq  	pr7|350		sst.seg_fault_calls
002621  aa   000044 7770 00	llr  	36
002622  aa   000044 7330 00	lrs  	36
002623  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
002624  aa  5 00536 0331 00	adl  	pr5|350		sst.seg_fault_calls
002625  aa   000000 5330 00	negl 	0
002626  aa  6 00114 7561 00	stq  	pr6|76		j
						STATEMENT 1 ON LINE 185
	        call ioa_ ("   call        ^10d^12.3f sec. ^7.3f% of Seg Faults", j, mtb_sec (j),
		   float (j) * 1.0e2 / sf);

002627  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
002630  aa   776405 00 0064	desc9a	-763,52		001234 = 040040040143
002631  aa  6 00270 00 0064	desc9a	pr6|184,52
002632  aa   004366 3520 04	epp2 	2294,ic		007220 = 000004000000
002633  aa   004110 6700 04	tsp4 	2120,ic		006743
002634  aa  6 00124 2361 00	ldq  	pr6|84		sf
002635  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
002636  aa  6 00236 4571 00	dfst 	pr6|158
002637  aa  6 00114 2361 00	ldq  	pr6|76		j
002640  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
002641  aa   016620 4610 03	fmp  	7568,du
002642  aa  6 00236 5671 00	dfdv 	pr6|158
002643  aa  6 00236 4571 00	dfst 	pr6|158
002644  aa  6 00270 3521 00	epp2 	pr6|184
002645  aa  6 00244 2521 00	spri2	pr6|164
002646  aa  6 00114 3521 00	epp2 	pr6|76		j
002647  aa  6 00246 2521 00	spri2	pr6|166
002650  aa  6 00240 3521 00	epp2 	pr6|160
002651  aa  6 00250 2521 00	spri2	pr6|168
002652  aa  6 00236 3521 00	epp2 	pr6|158
002653  aa  6 00252 2521 00	spri2	pr6|170
002654  aa   775155 3520 04	epp2 	-1427,ic		000031 = 524000000063
002655  aa  6 00254 2521 00	spri2	pr6|172
002656  aa   775202 3520 04	epp2 	-1406,ic		000060 = 404000000043
002657  aa  6 00256 2521 00	spri2	pr6|174
002660  aa   775201 3520 04	epp2 	-1407,ic		000061 = 414000000033
002661  aa  6 00260 2521 00	spri2	pr6|176
002662  aa   775155 3520 04	epp2 	-1427,ic		000037 = 420000000043
002663  aa  6 00262 2521 00	spri2	pr6|178
002664  aa  6 00242 6211 00	eax1 	pr6|162
002665  aa   020000 4310 07	fld  	8192,dl
002666  aa  6 00044 3701 20	epp4 	pr6|36,*
002667  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
002670  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 187
	        call ioa_ ("   activations ^10d^12.3f sec. ^7.3f% of Seg Faults", sfacts, mtb_sec (sfacts),
		   float (sfacts) * 1.0e2 / sf);

002671  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
002672  aa   776326 00 0064	desc9a	-810,52		001217 = 040040040141
002673  aa  6 00270 00 0064	desc9a	pr6|184,52
002674  aa   004346 3520 04	epp2 	2278,ic		007242 = 000004000000
002675  aa   004046 6700 04	tsp4 	2086,ic		006743
002676  aa  6 00124 2361 00	ldq  	pr6|84		sf
002677  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
002700  aa  6 00236 4571 00	dfst 	pr6|158
002701  aa  6 00171 2361 00	ldq  	pr6|121		sfacts
002702  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
002703  aa   016620 4610 03	fmp  	7568,du
002704  aa  6 00236 5671 00	dfdv 	pr6|158
002705  aa  6 00236 4571 00	dfst 	pr6|158
002706  aa  6 00270 3521 00	epp2 	pr6|184
002707  aa  6 00244 2521 00	spri2	pr6|164
002710  aa  6 00171 3521 00	epp2 	pr6|121		sfacts
002711  aa  6 00246 2521 00	spri2	pr6|166
002712  aa  6 00240 3521 00	epp2 	pr6|160
002713  aa  6 00250 2521 00	spri2	pr6|168
002714  aa  6 00236 3521 00	epp2 	pr6|158
002715  aa  6 00252 2521 00	spri2	pr6|170
002716  aa   775113 3520 04	epp2 	-1461,ic		000031 = 524000000063
002717  aa  6 00254 2521 00	spri2	pr6|172
002720  aa   775140 3520 04	epp2 	-1440,ic		000060 = 404000000043
002721  aa  6 00256 2521 00	spri2	pr6|174
002722  aa   775137 3520 04	epp2 	-1441,ic		000061 = 414000000033
002723  aa  6 00260 2521 00	spri2	pr6|176
002724  aa   775113 3520 04	epp2 	-1461,ic		000037 = 420000000043
002725  aa  6 00262 2521 00	spri2	pr6|178
002726  aa  6 00242 6211 00	eax1 	pr6|162
002727  aa   020000 4310 07	fld  	8192,dl
002730  aa  6 00044 3701 20	epp4 	pr6|36,*
002731  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
002732  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 189
	     end;

						STATEMENT 1 ON LINE 191
	  j = sstp2 -> sst.total_bf - sstp1 -> sst.total_bf;

002733  aa  6 00034 7641 00	lprp4	pr6|28
002734  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
002735  aa  7 00250 2361 00	ldq  	pr7|168		sst.total_bf
002736  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
002737  aa  5 00250 1761 00	sbq  	pr5|168		sst.total_bf
002740  aa  6 00114 7561 00	stq  	pr6|76		j
						STATEMENT 1 ON LINE 192
	  call ioa_ ("Bound Faults ^12d^12.3f sec.", j, mtb_sec (j));

002741  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
002742  aa   775427 00 0034	desc9a	-1257,28		000370 = 102157165156
002743  aa  6 00270 00 0034	desc9a	pr6|184,28
002744  aa   004254 3520 04	epp2 	2220,ic		007220 = 000004000000
002745  aa   003776 6700 04	tsp4 	2046,ic		006743
002746  aa  6 00270 3521 00	epp2 	pr6|184
002747  aa  6 00244 2521 00	spri2	pr6|164
002750  aa  6 00114 3521 00	epp2 	pr6|76		j
002751  aa  6 00246 2521 00	spri2	pr6|166
002752  aa  6 00240 3521 00	epp2 	pr6|160
002753  aa  6 00250 2521 00	spri2	pr6|168
002754  aa   775054 3520 04	epp2 	-1492,ic		000030 = 524000000034
002755  aa  6 00252 2521 00	spri2	pr6|170
002756  aa   775102 3520 04	epp2 	-1470,ic		000060 = 404000000043
002757  aa  6 00254 2521 00	spri2	pr6|172
002760  aa   775101 3520 04	epp2 	-1471,ic		000061 = 414000000033
002761  aa  6 00256 2521 00	spri2	pr6|174
002762  aa  6 00242 6211 00	eax1 	pr6|162
002763  aa   014000 4310 07	fld  	6144,dl
002764  aa  6 00044 3701 20	epp4 	pr6|36,*
002765  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
002766  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 194
	  if ^briefsw
	  then
	     do;

002767  aa  6 00175 2351 00	lda  	pr6|125		briefsw
002770  aa   001120 6010 04	tnz  	592,ic		004110
						STATEMENT 1 ON LINE 197
	        stf = sstp2 -> sst.setfaults_all - sstp1 -> sst.setfaults_all;

002771  aa  6 00034 7641 00	lprp4	pr6|28
002772  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
002773  aa  7 00246 2361 00	ldq  	pr7|166		sst.setfaults_all
002774  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
002775  aa  5 00246 1761 00	sbq  	pr5|166		sst.setfaults_all
002776  aa  6 00126 7561 00	stq  	pr6|86		stf
						STATEMENT 1 ON LINE 198
	        call ioa_ ("Setfaults      ^10d^12.3f msec.", stf, mtb_msec (stf));

002777  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
003000  aa   775557 00 0040	desc9a	-1169,32		000556 = 123145164146
003001  aa  6 00270 00 0040	desc9a	pr6|184,32
003002  aa   004160 3520 04	epp2 	2160,ic		007162 = 000004000000
003003  aa   003756 6700 04	tsp4 	2030,ic		006761
003004  aa  6 00270 3521 00	epp2 	pr6|184
003005  aa  6 00244 2521 00	spri2	pr6|164
003006  aa  6 00126 3521 00	epp2 	pr6|86		stf
003007  aa  6 00246 2521 00	spri2	pr6|166
003010  aa  6 00240 3521 00	epp2 	pr6|160
003011  aa  6 00250 2521 00	spri2	pr6|168
003012  aa   775015 3520 04	epp2 	-1523,ic		000027 = 524000000037
003013  aa  6 00252 2521 00	spri2	pr6|170
003014  aa   775044 3520 04	epp2 	-1500,ic		000060 = 404000000043
003015  aa  6 00254 2521 00	spri2	pr6|172
003016  aa   775043 3520 04	epp2 	-1501,ic		000061 = 414000000033
003017  aa  6 00256 2521 00	spri2	pr6|174
003020  aa  6 00242 6211 00	eax1 	pr6|162
003021  aa   014000 4310 07	fld  	6144,dl
003022  aa  6 00044 3701 20	epp4 	pr6|36,*
003023  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
003024  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 200
	        if stf > 0
	        then
		 do;

003025  aa  6 00126 2361 00	ldq  	pr6|86		stf
003026  aa   000051 6044 04	tmoz 	41,ic		003077
						STATEMENT 1 ON LINE 203
		    j = sstp2 -> sst.setfaults_acc - sstp1 -> sst.setfaults_acc;

003027  aa  6 00034 7641 00	lprp4	pr6|28
003030  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
003031  aa  7 00247 2361 00	ldq  	pr7|167		sst.setfaults_acc
003032  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
003033  aa  5 00247 1761 00	sbq  	pr5|167		sst.setfaults_acc
003034  aa  6 00114 7561 00	stq  	pr6|76		j
						STATEMENT 1 ON LINE 204
		    call ioa_ ("   access      ^10d^12.3f sec. ^7.3f% of setfaults", j, mtb_sec (j),
		         float (j) * 1.0e2 / stf);

003035  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
003036  aa   776145 00 0064	desc9a	-923,52		001202 = 040040040141
003037  aa  6 00270 00 0064	desc9a	pr6|184,52
003040  aa   004160 3520 04	epp2 	2160,ic		007220 = 000004000000
003041  aa   003702 6700 04	tsp4 	1986,ic		006743
003042  aa  6 00126 2361 00	ldq  	pr6|86		stf
003043  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
003044  aa  6 00236 4571 00	dfst 	pr6|158
003045  aa  6 00114 2361 00	ldq  	pr6|76		j
003046  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
003047  aa   016620 4610 03	fmp  	7568,du
003050  aa  6 00236 5671 00	dfdv 	pr6|158
003051  aa  6 00236 4571 00	dfst 	pr6|158
003052  aa  6 00270 3521 00	epp2 	pr6|184
003053  aa  6 00244 2521 00	spri2	pr6|164
003054  aa  6 00114 3521 00	epp2 	pr6|76		j
003055  aa  6 00246 2521 00	spri2	pr6|166
003056  aa  6 00240 3521 00	epp2 	pr6|160
003057  aa  6 00250 2521 00	spri2	pr6|168
003060  aa  6 00236 3521 00	epp2 	pr6|158
003061  aa  6 00252 2521 00	spri2	pr6|170
003062  aa   774744 3520 04	epp2 	-1564,ic		000026 = 524000000062
003063  aa  6 00254 2521 00	spri2	pr6|172
003064  aa   774774 3520 04	epp2 	-1540,ic		000060 = 404000000043
003065  aa  6 00256 2521 00	spri2	pr6|174
003066  aa   774773 3520 04	epp2 	-1541,ic		000061 = 414000000033
003067  aa  6 00260 2521 00	spri2	pr6|176
003070  aa   774747 3520 04	epp2 	-1561,ic		000037 = 420000000043
003071  aa  6 00262 2521 00	spri2	pr6|178
003072  aa  6 00242 6211 00	eax1 	pr6|162
003073  aa   020000 4310 07	fld  	8192,dl
003074  aa  6 00044 3701 20	epp4 	pr6|36,*
003075  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
003076  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 206
		 end;

						STATEMENT 1 ON LINE 208
	        j = sstp2 -> sst.updates - sstp1 -> sst.updates;

003077  aa  6 00034 7641 00	lprp4	pr6|28
003100  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
003101  aa  7 00245 2361 00	ldq  	pr7|165		sst.updates
003102  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
003103  aa  5 00245 1761 00	sbq  	pr5|165		sst.updates
003104  aa  6 00114 7561 00	stq  	pr6|76		j
						STATEMENT 1 ON LINE 209
	        call ioa_ ("ASTE Trickle   ^10d^12.3f sec.", j, mtb_sec (j));

003105  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
003106  aa   775441 00 0040	desc9a	-1247,32		000546 = 101123124105
003107  aa  6 00270 00 0040	desc9a	pr6|184,32
003110  aa   004110 3520 04	epp2 	2120,ic		007220 = 000004000000
003111  aa   003632 6700 04	tsp4 	1946,ic		006743
003112  aa  6 00270 3521 00	epp2 	pr6|184
003113  aa  6 00244 2521 00	spri2	pr6|164
003114  aa  6 00114 3521 00	epp2 	pr6|76		j
003115  aa  6 00246 2521 00	spri2	pr6|166
003116  aa  6 00240 3521 00	epp2 	pr6|160
003117  aa  6 00250 2521 00	spri2	pr6|168
003120  aa   774715 3520 04	epp2 	-1587,ic		000035 = 524000000036
003121  aa  6 00252 2521 00	spri2	pr6|170
003122  aa   774736 3520 04	epp2 	-1570,ic		000060 = 404000000043
003123  aa  6 00254 2521 00	spri2	pr6|172
003124  aa   774735 3520 04	epp2 	-1571,ic		000061 = 414000000033
003125  aa  6 00256 2521 00	spri2	pr6|174
003126  aa  6 00242 6211 00	eax1 	pr6|162
003127  aa   014000 4310 07	fld  	6144,dl
003130  aa  6 00044 3701 20	epp4 	pr6|36,*
003131  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
003132  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 213
	        k = sstp2 -> sst.sgm_time - sstp1 -> sst.sgm_time;

003133  aa  6 00034 7641 00	lprp4	pr6|28
003134  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
003135  aa  7 00510 2371 00	ldaq 	pr7|328		sst.sgm_time
003136  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
003137  aa  5 00510 1771 00	sbaq 	pr5|328		sst.sgm_time
003140  aa   216000 4110 03	lde  	72704,du
003141  aa   400000 4750 03	fad  	131072,du
003142  aa  6 00115 4551 00	fst  	pr6|77		k
						STATEMENT 1 ON LINE 214
	        k = k / 1e3;

003143  aa   024764 5650 03	fdv  	10740,du
003144  aa  6 00115 4551 00	fst  	pr6|77		k
						STATEMENT 1 ON LINE 215
	        j = sstp2 -> sst.sgm_pf - sstp1 -> sst.sgm_pf;

003145  aa  7 00512 2361 00	ldq  	pr7|330		sst.sgm_pf
003146  aa  5 00512 1761 00	sbq  	pr5|330		sst.sgm_pf
003147  aa  6 00114 7561 00	stq  	pr6|76		j
						STATEMENT 1 ON LINE 216
	        i = (sstp2 -> sst.good_sgms + sstp2 -> sst.bad_sgms) - (sstp1 -> sst.good_sgms + sstp1 -> sst.bad_sgms);

003150  aa  5 00515 2361 00	ldq  	pr5|333		sst.good_sgms
003151  aa  5 00513 0761 00	adq  	pr5|331		sst.bad_sgms
003152  aa  6 00240 7561 00	stq  	pr6|160
003153  aa  7 00515 2361 00	ldq  	pr7|333		sst.good_sgms
003154  aa  7 00513 0761 00	adq  	pr7|331		sst.bad_sgms
003155  aa  6 00240 1761 00	sbq  	pr6|160
003156  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
003157  aa  6 00113 4551 00	fst  	pr6|75		i
						STATEMENT 1 ON LINE 217
	        if i > 0
	        then
		 do;

003160  aa   000272 6044 04	tmoz 	186,ic		003452
						STATEMENT 1 ON LINE 220
		    call ioa_ ("Segment moves  ^10d", i);

003161  aa   774777 2370 04	ldaq 	-1537,ic		000160 = 123145147155 145156164040
003162  aa  6 00270 7571 00	staq 	pr6|184
003163  aa   774777 2370 04	ldaq 	-1537,ic		000162 = 155157166145 163040040136
003164  aa  6 00272 7571 00	staq 	pr6|186
003165  aa   774777 2350 04	lda  	-1537,ic		000164 = 061060144000
003166  aa  6 00274 7551 00	sta  	pr6|188
003167  aa  6 00270 3521 00	epp2 	pr6|184
003170  aa  6 00244 2521 00	spri2	pr6|164
003171  aa  6 00113 3521 00	epp2 	pr6|75		i
003172  aa  6 00246 2521 00	spri2	pr6|166
003173  aa   774632 3520 04	epp2 	-1638,ic		000025 = 524000000023
003174  aa  6 00250 2521 00	spri2	pr6|168
003175  aa   774664 3520 04	epp2 	-1612,ic		000061 = 414000000033
003176  aa  6 00252 2521 00	spri2	pr6|170
003177  aa  6 00242 6211 00	eax1 	pr6|162
003200  aa   010000 4310 07	fld  	4096,dl
003201  aa  6 00044 3535 20	epp3 	pr6|36,*
003202  la  3 00016 3521 20	epp2 	pr3|14,*		ioa_
003203  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 221
		    call ioa_ ("   vcpu        ^12.3f", k);

003204  aa   775066 2370 04	ldaq 	-1482,ic		000272 = 040040040166 143160165040
003205  aa  6 00270 7571 00	staq 	pr6|184
003206  aa   775066 2370 04	ldaq 	-1482,ic		000274 = 040040040040 040040040136
003207  aa  6 00272 7571 00	staq 	pr6|186
003210  aa   775066 2370 04	ldaq 	-1482,ic		000276 = 061062056063 146000000000
003211  aa  6 00274 7571 00	staq 	pr6|188
003212  aa  6 00270 3521 00	epp2 	pr6|184
003213  aa  6 00244 2521 00	spri2	pr6|164
003214  aa  6 00115 3521 00	epp2 	pr6|77		k
003215  aa  6 00246 2521 00	spri2	pr6|166
003216  aa   774606 3520 04	epp2 	-1658,ic		000024 = 524000000025
003217  aa  6 00250 2521 00	spri2	pr6|168
003220  aa   774641 3520 04	epp2 	-1631,ic		000061 = 414000000033
003221  aa  6 00252 2521 00	spri2	pr6|170
003222  aa  6 00242 6211 00	eax1 	pr6|162
003223  aa   010000 4310 07	fld  	4096,dl
003224  aa  6 00044 3701 20	epp4 	pr6|36,*
003225  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
003226  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 222
		    call ioa_ ("   good        ^10d", sstp2 -> sst.good_sgms - sstp1 -> sst.good_sgms);

003227  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
003230  aa   774724 00 0024	desc9a	-1580,20		000153 = 040040040147
003231  aa  6 00270 00 0024	desc9a	pr6|184,20
003232  aa  6 00034 7641 00	lprp4	pr6|28
003233  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
003234  aa  7 00515 2361 00	ldq  	pr7|333		sst.good_sgms
003235  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
003236  aa  5 00515 1761 00	sbq  	pr5|333		sst.good_sgms
003237  aa  6 00240 7561 00	stq  	pr6|160
003240  aa  6 00270 3521 00	epp2 	pr6|184
003241  aa  6 00244 2521 00	spri2	pr6|164
003242  aa  6 00240 3521 00	epp2 	pr6|160
003243  aa  6 00246 2521 00	spri2	pr6|166
003244  aa   774561 3520 04	epp2 	-1679,ic		000025 = 524000000023
003245  aa  6 00250 2521 00	spri2	pr6|168
003246  aa   774555 3520 04	epp2 	-1683,ic		000023 = 404000000022
003247  aa  6 00252 2521 00	spri2	pr6|170
003250  aa  6 00242 6211 00	eax1 	pr6|162
003251  aa   010000 4310 07	fld  	4096,dl
003252  aa  6 00044 3535 20	epp3 	pr6|36,*
003253  la  3 00016 3521 20	epp2 	pr3|14,*		ioa_
003254  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 223
		    call ioa_ ("   bad         ^10d", sstp2 -> sst.bad_sgms - sstp1 -> sst.bad_sgms);

003255  aa   774671 2370 04	ldaq 	-1607,ic		000146 = 040040040142 141144040040
003256  aa  6 00270 7571 00	staq 	pr6|184
003257  aa   774671 2370 04	ldaq 	-1607,ic		000150 = 040040040040 040040040136
003260  aa  6 00272 7571 00	staq 	pr6|186
003261  aa   774671 2350 04	lda  	-1607,ic		000152 = 061060144000
003262  aa  6 00274 7551 00	sta  	pr6|188
003263  aa  6 00034 7641 00	lprp4	pr6|28
003264  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
003265  aa  7 00513 2361 00	ldq  	pr7|331		sst.bad_sgms
003266  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
003267  aa  5 00513 1761 00	sbq  	pr5|331		sst.bad_sgms
003270  aa  6 00240 7561 00	stq  	pr6|160
003271  aa  6 00270 3521 00	epp2 	pr6|184
003272  aa  6 00244 2521 00	spri2	pr6|164
003273  aa  6 00240 3521 00	epp2 	pr6|160
003274  aa  6 00246 2521 00	spri2	pr6|166
003275  aa   774530 3520 04	epp2 	-1704,ic		000025 = 524000000023
003276  aa  6 00250 2521 00	spri2	pr6|168
003277  aa   774524 3520 04	epp2 	-1708,ic		000023 = 404000000022
003300  aa  6 00252 2521 00	spri2	pr6|170
003301  aa  6 00242 6211 00	eax1 	pr6|162
003302  aa   010000 4310 07	fld  	4096,dl
003303  aa  6 00044 3535 20	epp3 	pr6|36,*
003304  la  3 00016 3521 20	epp2 	pr3|14,*		ioa_
003305  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 224
		    call ioa_ ("   reads       ^10d", sstp2 -> sst.segmove_n_reads - sstp1 -> sst.segmove_n_reads);

003306  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
003307  aa   774633 00 0024	desc9a	-1637,20		000141 = 040040040162
003310  aa  6 00270 00 0024	desc9a	pr6|184,20
003311  aa  6 00034 7641 00	lprp4	pr6|28
003312  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
003313  aa  7 00553 3361 00	lcq  	pr7|363		sst.segmove_n_reads
003314  aa   000044 7770 00	llr  	36
003315  aa   000044 7330 00	lrs  	36
003316  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
003317  aa  5 00553 0331 00	adl  	pr5|363		sst.segmove_n_reads
003320  aa   000000 5330 00	negl 	0
003321  aa  6 00236 7571 00	staq 	pr6|158
003322  aa  6 00270 3521 00	epp2 	pr6|184
003323  aa  6 00244 2521 00	spri2	pr6|164
003324  aa  6 00236 3521 00	epp2 	pr6|158
003325  aa  6 00246 2521 00	spri2	pr6|166
003326  aa   774477 3520 04	epp2 	-1729,ic		000025 = 524000000023
003327  aa  6 00250 2521 00	spri2	pr6|168
003330  aa   774472 3520 04	epp2 	-1734,ic		000022 = 410000000044
003331  aa  6 00252 2521 00	spri2	pr6|170
003332  aa  6 00242 6211 00	eax1 	pr6|162
003333  aa   010000 4310 07	fld  	4096,dl
003334  aa  6 00044 3535 20	epp3 	pr6|36,*
003335  la  3 00016 3521 20	epp2 	pr3|14,*		ioa_
003336  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 225
		    call ioa_ ("   max retries ^10d", sstp2 -> sst.segmove_max_tries - sstp1 -> sst.segmove_max_tries)
		         ;

003337  aa   774575 2370 04	ldaq 	-1667,ic		000134 = 040040040155 141170040162
003340  aa  6 00270 7571 00	staq 	pr6|184
003341  aa   774575 2370 04	ldaq 	-1667,ic		000136 = 145164162151 145163040136
003342  aa  6 00272 7571 00	staq 	pr6|186
003343  aa   774575 2350 04	lda  	-1667,ic		000140 = 061060144000
003344  aa  6 00274 7551 00	sta  	pr6|188
003345  aa  6 00034 7641 00	lprp4	pr6|28
003346  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
003347  aa  7 00554 3361 00	lcq  	pr7|364		sst.segmove_max_tries
003350  aa   000044 7770 00	llr  	36
003351  aa   000044 7330 00	lrs  	36
003352  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
003353  aa  5 00554 0331 00	adl  	pr5|364		sst.segmove_max_tries
003354  aa   000000 5330 00	negl 	0
003355  aa  6 00236 7571 00	staq 	pr6|158
003356  aa  6 00270 3521 00	epp2 	pr6|184
003357  aa  6 00244 2521 00	spri2	pr6|164
003360  aa  6 00236 3521 00	epp2 	pr6|158
003361  aa  6 00246 2521 00	spri2	pr6|166
003362  aa   774443 3520 04	epp2 	-1757,ic		000025 = 524000000023
003363  aa  6 00250 2521 00	spri2	pr6|168
003364  aa   774436 3520 04	epp2 	-1762,ic		000022 = 410000000044
003365  aa  6 00252 2521 00	spri2	pr6|170
003366  aa  6 00242 6211 00	eax1 	pr6|162
003367  aa   010000 4310 07	fld  	4096,dl
003370  aa  6 00044 3535 20	epp3 	pr6|36,*
003371  la  3 00016 3521 20	epp2 	pr3|14,*		ioa_
003372  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 227
		    call ioa_ ("   page_faults ^10d", sstp2 -> sst.sgm_pf - sstp1 -> sst.sgm_pf);

003373  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
003374  aa   774534 00 0024	desc9a	-1700,20		000127 = 040040040160
003375  aa  6 00270 00 0024	desc9a	pr6|184,20
003376  aa  6 00034 7641 00	lprp4	pr6|28
003377  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
003400  aa  7 00512 2361 00	ldq  	pr7|330		sst.sgm_pf
003401  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
003402  aa  5 00512 1761 00	sbq  	pr5|330		sst.sgm_pf
003403  aa  6 00240 7561 00	stq  	pr6|160
003404  aa  6 00270 3521 00	epp2 	pr6|184
003405  aa  6 00244 2521 00	spri2	pr6|164
003406  aa  6 00240 3521 00	epp2 	pr6|160
003407  aa  6 00246 2521 00	spri2	pr6|166
003410  aa   774415 3520 04	epp2 	-1779,ic		000025 = 524000000023
003411  aa  6 00250 2521 00	spri2	pr6|168
003412  aa   774411 3520 04	epp2 	-1783,ic		000023 = 404000000022
003413  aa  6 00252 2521 00	spri2	pr6|170
003414  aa  6 00242 6211 00	eax1 	pr6|162
003415  aa   010000 4310 07	fld  	4096,dl
003416  aa  6 00044 3535 20	epp3 	pr6|36,*
003417  la  3 00016 3521 20	epp2 	pr3|14,*		ioa_
003420  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 228
		    call ioa_ ("   seg_faults  ^10d", sstp2 -> sst.sgm_sgft - sstp1 -> sst.sgm_sgft);

003421  aa   774501 2370 04	ldaq 	-1727,ic		000122 = 040040040163 145147137146
003422  aa  6 00270 7571 00	staq 	pr6|184
003423  aa   774501 2370 04	ldaq 	-1727,ic		000124 = 141165154164 163040040136
003424  aa  6 00272 7571 00	staq 	pr6|186
003425  aa   774501 2350 04	lda  	-1727,ic		000126 = 061060144000
003426  aa  6 00274 7551 00	sta  	pr6|188
003427  aa  6 00034 7641 00	lprp4	pr6|28
003430  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
003431  aa  7 00514 2361 00	ldq  	pr7|332		sst.sgm_sgft
003432  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
003433  aa  5 00514 1761 00	sbq  	pr5|332		sst.sgm_sgft
003434  aa  6 00240 7561 00	stq  	pr6|160
003435  aa  6 00270 3521 00	epp2 	pr6|184
003436  aa  6 00244 2521 00	spri2	pr6|164
003437  aa  6 00240 3521 00	epp2 	pr6|160
003440  aa  6 00246 2521 00	spri2	pr6|166
003441  aa   774364 3520 04	epp2 	-1804,ic		000025 = 524000000023
003442  aa  6 00250 2521 00	spri2	pr6|168
003443  aa   774360 3520 04	epp2 	-1808,ic		000023 = 404000000022
003444  aa  6 00252 2521 00	spri2	pr6|170
003445  aa  6 00242 6211 00	eax1 	pr6|162
003446  aa   010000 4310 07	fld  	4096,dl
003447  aa  6 00044 3535 20	epp3 	pr6|36,*
003450  la  3 00016 3521 20	epp2 	pr3|14,*		ioa_
003451  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 229
		 end;

						STATEMENT 1 ON LINE 231
	        aste_steps = sstp2 -> sst.stepsa - sstp1 -> sst.stepsa;

003452  aa  6 00034 7641 00	lprp4	pr6|28
003453  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
003454  aa  7 00234 2361 00	ldq  	pr7|156		sst.stepsa
003455  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
003456  aa  5 00234 1761 00	sbq  	pr5|156		sst.stepsa
003457  aa  6 00162 7561 00	stq  	pr6|114		aste_steps
						STATEMENT 1 ON LINE 232
	        call ioa_ ("Steps	     ^10d^12.3f msec.", aste_steps, mtb_msec (aste_steps));

003460  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
003461  aa   774701 00 0034	desc9a	-1599,28		000361 = 123164145160
003462  aa  6 00270 00 0034	desc9a	pr6|184,28
003463  aa   003471 3520 04	epp2 	1849,ic		007154 = 000004000000
003464  aa   003275 6700 04	tsp4 	1725,ic		006761
003465  aa  6 00270 3521 00	epp2 	pr6|184
003466  aa  6 00244 2521 00	spri2	pr6|164
003467  aa  6 00162 3521 00	epp2 	pr6|114		aste_steps
003470  aa  6 00246 2521 00	spri2	pr6|166
003471  aa  6 00240 3521 00	epp2 	pr6|160
003472  aa  6 00250 2521 00	spri2	pr6|168
003473  aa   774350 3520 04	epp2 	-1816,ic		000043 = 524000000033
003474  aa  6 00252 2521 00	spri2	pr6|170
003475  aa   774363 3520 04	epp2 	-1805,ic		000060 = 404000000043
003476  aa  6 00254 2521 00	spri2	pr6|172
003477  aa   774362 3520 04	epp2 	-1806,ic		000061 = 414000000033
003500  aa  6 00256 2521 00	spri2	pr6|174
003501  aa  6 00242 6211 00	eax1 	pr6|162
003502  aa   014000 4310 07	fld  	6144,dl
003503  aa  6 00044 3701 20	epp4 	pr6|36,*
003504  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
003505  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 234
	        as_ehs = sstp2 -> sst.askipsehs - sstp1 -> sst.askipsehs;

003506  aa  6 00034 7641 00	lprp4	pr6|28
003507  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
003510  aa  7 00235 2361 00	ldq  	pr7|157		sst.askipsehs
003511  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
003512  aa  5 00235 1761 00	sbq  	pr5|157		sst.askipsehs
003513  aa  6 00157 7561 00	stq  	pr6|111		as_ehs
						STATEMENT 1 ON LINE 235
	        as_level = sstp2 -> sst.askipslevel - sstp1 -> sst.askipslevel;

003514  aa  7 00237 2361 00	ldq  	pr7|159		sst.askipslevel
003515  aa  5 00237 1761 00	sbq  	pr5|159		sst.askipslevel
003516  aa  6 00160 7561 00	stq  	pr6|112		as_level
						STATEMENT 1 ON LINE 236
	        as_init = sstp2 -> sst.askipsinit - sstp1 -> sst.askipsinit;

003517  aa  7 00240 2361 00	ldq  	pr7|160		sst.askipsinit
003520  aa  5 00240 1761 00	sbq  	pr5|160		sst.askipsinit
003521  aa  6 00161 7561 00	stq  	pr6|113		as_init
						STATEMENT 1 ON LINE 237
	        as_synch = sstp2 -> sst.synch_skips - sstp1 -> sst.synch_skips;

003522  aa  7 00103 3361 00	lcq  	pr7|67		sst.synch_skips
003523  aa   000044 7770 00	llr  	36
003524  aa   000044 7330 00	lrs  	36
003525  aa  5 00103 0331 00	adl  	pr5|67		sst.synch_skips
003526  aa   000000 5330 00	negl 	0
003527  aa  6 00164 7561 00	stq  	pr6|116		as_synch
						STATEMENT 1 ON LINE 239
	        as_skips = as_ehs + as_level + as_init + as_synch;

003530  aa  6 00157 2351 00	lda  	pr6|111		as_ehs
003531  aa   000044 7330 00	lrs  	36
003532  aa  6 00160 0331 00	adl  	pr6|112		as_level
003533  aa  6 00161 0331 00	adl  	pr6|113		as_init
003534  aa  6 00164 0331 00	adl  	pr6|116		as_synch
003535  aa  6 00163 7561 00	stq  	pr6|115		as_skips
						STATEMENT 1 ON LINE 241
	        call ioa_ ("Skips          ^10d^12.3f sec. ^7.3f% of Steps", as_skips, mtb_sec (as_skips),
		   (as_skips * 1e2) / max (1, aste_steps));

003536  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
003537  aa   775430 00 0060	desc9a	-1256,48		001166 = 123153151160
003540  aa  6 00270 00 0060	desc9a	pr6|184,48
003541  aa   003405 3520 04	epp2 	1797,ic		007146 = 000004000000
003542  aa   003201 6700 04	tsp4 	1665,ic		006743
003543  aa   000001 2360 07	ldq  	1,dl
003544  aa  6 00162 1161 00	cmpq 	pr6|114		aste_steps
003545  aa   000002 6050 04	tpl  	2,ic		003547
003546  aa  6 00162 2361 00	ldq  	pr6|114		aste_steps
003547  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
003550  aa  6 00236 4571 00	dfst 	pr6|158
003551  aa  6 00163 2361 00	ldq  	pr6|115		as_skips
003552  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
003553  aa   016620 4610 03	fmp  	7568,du
003554  aa  6 00236 5671 00	dfdv 	pr6|158
003555  aa  6 00236 4571 00	dfst 	pr6|158
003556  aa  6 00270 3521 00	epp2 	pr6|184
003557  aa  6 00244 2521 00	spri2	pr6|164
003560  aa  6 00163 3521 00	epp2 	pr6|115		as_skips
003561  aa  6 00246 2521 00	spri2	pr6|166
003562  aa  6 00240 3521 00	epp2 	pr6|160
003563  aa  6 00250 2521 00	spri2	pr6|168
003564  aa  6 00236 3521 00	epp2 	pr6|158
003565  aa  6 00252 2521 00	spri2	pr6|170
003566  aa   774233 3520 04	epp2 	-1893,ic		000021 = 524000000056
003567  aa  6 00254 2521 00	spri2	pr6|172
003570  aa   774270 3520 04	epp2 	-1864,ic		000060 = 404000000043
003571  aa  6 00256 2521 00	spri2	pr6|174
003572  aa   774267 3520 04	epp2 	-1865,ic		000061 = 414000000033
003573  aa  6 00260 2521 00	spri2	pr6|176
003574  aa   774243 3520 04	epp2 	-1885,ic		000037 = 420000000043
003575  aa  6 00262 2521 00	spri2	pr6|178
003576  aa  6 00242 6211 00	eax1 	pr6|162
003577  aa   020000 4310 07	fld  	8192,dl
003600  aa  6 00044 3701 20	epp4 	pr6|36,*
003601  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
003602  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 244
	        f_as_skips = max (as_skips, 1) / 1e2;

003603  aa   016620 4310 03	fld  	7568,du
003604  aa  6 00236 4571 00	dfst 	pr6|158
003605  aa  6 00163 2361 00	ldq  	pr6|115		as_skips
003606  aa   000001 1160 07	cmpq 	1,dl
003607  aa   000002 6050 04	tpl  	2,ic		003611
003610  aa   000001 2360 07	ldq  	1,dl
003611  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
003612  aa  6 00236 5671 00	dfdv 	pr6|158
003613  aa  6 00210 4551 00	fst  	pr6|136		f_as_skips
						STATEMENT 1 ON LINE 246
	        if as_ehs ^= 0
	        then call ioa_ ("   ehs         ^10d^12.3f sec. ^7.3f% of Skips", as_ehs, mtb_sec (as_ehs),
		        as_ehs / f_as_skips);

003614  aa  6 00157 2361 00	ldq  	pr6|111		as_ehs
003615  aa   000041 6000 04	tze  	33,ic		003656
003616  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
003617  aa   775334 00 0060	desc9a	-1316,48		001152 = 040040040145
003620  aa  6 00270 00 0060	desc9a	pr6|184,48
003621  aa   003317 3520 04	epp2 	1743,ic		007140 = 000004000000
003622  aa   003121 6700 04	tsp4 	1617,ic		006743
003623  aa  6 00210 4311 00	fld  	pr6|136		f_as_skips
003624  aa  6 00236 4571 00	dfst 	pr6|158		f_as_skips
003625  aa  6 00157 2361 00	ldq  	pr6|111		as_ehs
003626  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
003627  aa  6 00236 5671 00	dfdv 	pr6|158		f_as_skips
003630  aa  6 00236 4571 00	dfst 	pr6|158
003631  aa  6 00270 3521 00	epp2 	pr6|184
003632  aa  6 00244 2521 00	spri2	pr6|164
003633  aa  6 00157 3521 00	epp2 	pr6|111		as_ehs
003634  aa  6 00246 2521 00	spri2	pr6|166
003635  aa  6 00240 3521 00	epp2 	pr6|160
003636  aa  6 00250 2521 00	spri2	pr6|168
003637  aa  6 00236 3521 00	epp2 	pr6|158
003640  aa  6 00252 2521 00	spri2	pr6|170
003641  aa   774160 3520 04	epp2 	-1936,ic		000021 = 524000000056
003642  aa  6 00254 2521 00	spri2	pr6|172
003643  aa   774215 3520 04	epp2 	-1907,ic		000060 = 404000000043
003644  aa  6 00256 2521 00	spri2	pr6|174
003645  aa   774214 3520 04	epp2 	-1908,ic		000061 = 414000000033
003646  aa  6 00260 2521 00	spri2	pr6|176
003647  aa   774170 3520 04	epp2 	-1928,ic		000037 = 420000000043
003650  aa  6 00262 2521 00	spri2	pr6|178
003651  aa  6 00242 6211 00	eax1 	pr6|162
003652  aa   020000 4310 07	fld  	8192,dl
003653  aa  6 00044 3701 20	epp4 	pr6|36,*
003654  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
003655  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 250
	        if as_level ^= 0
	        then call ioa_ ("   mem         ^10d^12.3f sec. ^7.3f% of Skips", as_level, mtb_sec (as_level),
		        as_level / f_as_skips);

003656  aa  6 00160 2361 00	ldq  	pr6|112		as_level
003657  aa   000041 6000 04	tze  	33,ic		003720
003660  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
003661  aa   775256 00 0060	desc9a	-1362,48		001136 = 040040040155
003662  aa  6 00270 00 0060	desc9a	pr6|184,48
003663  aa   003247 3520 04	epp2 	1703,ic		007132 = 000004000000
003664  aa   003057 6700 04	tsp4 	1583,ic		006743
003665  aa  6 00210 4311 00	fld  	pr6|136		f_as_skips
003666  aa  6 00236 4571 00	dfst 	pr6|158		f_as_skips
003667  aa  6 00160 2361 00	ldq  	pr6|112		as_level
003670  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
003671  aa  6 00236 5671 00	dfdv 	pr6|158		f_as_skips
003672  aa  6 00236 4571 00	dfst 	pr6|158
003673  aa  6 00270 3521 00	epp2 	pr6|184
003674  aa  6 00244 2521 00	spri2	pr6|164
003675  aa  6 00160 3521 00	epp2 	pr6|112		as_level
003676  aa  6 00246 2521 00	spri2	pr6|166
003677  aa  6 00240 3521 00	epp2 	pr6|160
003700  aa  6 00250 2521 00	spri2	pr6|168
003701  aa  6 00236 3521 00	epp2 	pr6|158
003702  aa  6 00252 2521 00	spri2	pr6|170
003703  aa   774116 3520 04	epp2 	-1970,ic		000021 = 524000000056
003704  aa  6 00254 2521 00	spri2	pr6|172
003705  aa   774153 3520 04	epp2 	-1941,ic		000060 = 404000000043
003706  aa  6 00256 2521 00	spri2	pr6|174
003707  aa   774152 3520 04	epp2 	-1942,ic		000061 = 414000000033
003710  aa  6 00260 2521 00	spri2	pr6|176
003711  aa   774126 3520 04	epp2 	-1962,ic		000037 = 420000000043
003712  aa  6 00262 2521 00	spri2	pr6|178
003713  aa  6 00242 6211 00	eax1 	pr6|162
003714  aa   020000 4310 07	fld  	8192,dl
003715  aa  6 00044 3701 20	epp4 	pr6|36,*
003716  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
003717  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 254
	        if as_init ^= 0
	        then call ioa_ ("   init        ^10d^12.3f sec. ^7.3f% of Skips", as_init, mtb_sec (as_init),
		        as_init / f_as_skips);

003720  aa  6 00161 2361 00	ldq  	pr6|113		as_init
003721  aa   000041 6000 04	tze  	33,ic		003762
003722  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
003723  aa   775200 00 0060	desc9a	-1408,48		001122 = 040040040151
003724  aa  6 00270 00 0060	desc9a	pr6|184,48
003725  aa   003177 3520 04	epp2 	1663,ic		007124 = 000004000000
003726  aa   003015 6700 04	tsp4 	1549,ic		006743
003727  aa  6 00210 4311 00	fld  	pr6|136		f_as_skips
003730  aa  6 00236 4571 00	dfst 	pr6|158		f_as_skips
003731  aa  6 00161 2361 00	ldq  	pr6|113		as_init
003732  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
003733  aa  6 00236 5671 00	dfdv 	pr6|158		f_as_skips
003734  aa  6 00236 4571 00	dfst 	pr6|158
003735  aa  6 00270 3521 00	epp2 	pr6|184
003736  aa  6 00244 2521 00	spri2	pr6|164
003737  aa  6 00161 3521 00	epp2 	pr6|113		as_init
003740  aa  6 00246 2521 00	spri2	pr6|166
003741  aa  6 00240 3521 00	epp2 	pr6|160
003742  aa  6 00250 2521 00	spri2	pr6|168
003743  aa  6 00236 3521 00	epp2 	pr6|158
003744  aa  6 00252 2521 00	spri2	pr6|170
003745  aa   774054 3520 04	epp2 	-2004,ic		000021 = 524000000056
003746  aa  6 00254 2521 00	spri2	pr6|172
003747  aa   774111 3520 04	epp2 	-1975,ic		000060 = 404000000043
003750  aa  6 00256 2521 00	spri2	pr6|174
003751  aa   774110 3520 04	epp2 	-1976,ic		000061 = 414000000033
003752  aa  6 00260 2521 00	spri2	pr6|176
003753  aa   774064 3520 04	epp2 	-1996,ic		000037 = 420000000043
003754  aa  6 00262 2521 00	spri2	pr6|178
003755  aa  6 00242 6211 00	eax1 	pr6|162
003756  aa   020000 4310 07	fld  	8192,dl
003757  aa  6 00044 3701 20	epp4 	pr6|36,*
003760  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
003761  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 258
	        if as_synch ^= 0
	        then call ioa_ ("   synch       ^10d^12.3f sec. ^7.3f% of Skips", as_synch, mtb_sec (as_synch),
		        as_synch / f_as_skips);

003762  aa  6 00164 2361 00	ldq  	pr6|116		as_synch
003763  aa   000041 6000 04	tze  	33,ic		004024
003764  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
003765  aa   775122 00 0060	desc9a	-1454,48		001106 = 040040040163
003766  aa  6 00270 00 0060	desc9a	pr6|184,48
003767  aa   003127 3520 04	epp2 	1623,ic		007116 = 000004000000
003770  aa   002753 6700 04	tsp4 	1515,ic		006743
003771  aa  6 00210 4311 00	fld  	pr6|136		f_as_skips
003772  aa  6 00236 4571 00	dfst 	pr6|158		f_as_skips
003773  aa  6 00164 2361 00	ldq  	pr6|116		as_synch
003774  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
003775  aa  6 00236 5671 00	dfdv 	pr6|158		f_as_skips
003776  aa  6 00236 4571 00	dfst 	pr6|158
003777  aa  6 00270 3521 00	epp2 	pr6|184
004000  aa  6 00244 2521 00	spri2	pr6|164
004001  aa  6 00164 3521 00	epp2 	pr6|116		as_synch
004002  aa  6 00246 2521 00	spri2	pr6|166
004003  aa  6 00240 3521 00	epp2 	pr6|160
004004  aa  6 00250 2521 00	spri2	pr6|168
004005  aa  6 00236 3521 00	epp2 	pr6|158
004006  aa  6 00252 2521 00	spri2	pr6|170
004007  aa   774012 3520 04	epp2 	-2038,ic		000021 = 524000000056
004010  aa  6 00254 2521 00	spri2	pr6|172
004011  aa   774047 3520 04	epp2 	-2009,ic		000060 = 404000000043
004012  aa  6 00256 2521 00	spri2	pr6|174
004013  aa   774046 3520 04	epp2 	-2010,ic		000061 = 414000000033
004014  aa  6 00260 2521 00	spri2	pr6|176
004015  aa   774022 3520 04	epp2 	-2030,ic		000037 = 420000000043
004016  aa  6 00262 2521 00	spri2	pr6|178
004017  aa  6 00242 6211 00	eax1 	pr6|162
004020  aa   020000 4310 07	fld  	8192,dl
004021  aa  6 00044 3701 20	epp4 	pr6|36,*
004022  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
004023  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 262
	        j = sstp2 -> sst.asearches - sstp1 -> sst.asearches;

004024  aa  6 00034 7641 00	lprp4	pr6|28
004025  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
004026  aa  7 00236 2361 00	ldq  	pr7|158		sst.asearches
004027  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
004030  aa  5 00236 1761 00	sbq  	pr5|158		sst.asearches
004031  aa  6 00114 7561 00	stq  	pr6|76		j
						STATEMENT 1 ON LINE 263
	        call ioa_ ("Searches       ^10d^12.3f sec. ^[^7.3f Average cost^;^s^]", j, mtb_sec (j), (j > 0),
		   float (sstp2 -> sst.acost - sstp1 -> sst.acost) / max (j, 1));

004032  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
004033  aa   775252 00 0074	desc9a	-1366,60		001304 = 123145141162
004034  aa  6 00242 00 0074	desc9a	pr6|162,60
004035  aa   003163 3520 04	epp2 	1651,ic		007220 = 000004000000
004036  aa   002705 6700 04	tsp4 	1477,ic		006743
004037  aa  6 00114 2361 00	ldq  	pr6|76		j
004040  aa  0 00503 7001 00	tsx0 	pr0|323		r_g_a
004041  aa  6 00235 7551 00	sta  	pr6|157
004042  aa   000001 1160 07	cmpq 	1,dl
004043  aa   000002 6050 04	tpl  	2,ic		004045
004044  aa   000001 2360 07	ldq  	1,dl
004045  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
004046  aa  6 00236 4571 00	dfst 	pr6|158
004047  aa  6 00034 7641 00	lprp4	pr6|28
004050  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
004051  aa  7 00241 2361 00	ldq  	pr7|161		sst.acost
004052  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
004053  aa  5 00241 1761 00	sbq  	pr5|161		sst.acost
004054  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
004055  aa  6 00236 5671 00	dfdv 	pr6|158
004056  aa  6 00236 4571 00	dfst 	pr6|158
004057  aa  6 00242 3521 00	epp2 	pr6|162
004060  aa  6 00310 2521 00	spri2	pr6|200
004061  aa  6 00114 3521 00	epp2 	pr6|76		j
004062  aa  6 00312 2521 00	spri2	pr6|202
004063  aa  6 00240 3521 00	epp2 	pr6|160
004064  aa  6 00314 2521 00	spri2	pr6|204
004065  aa  6 00235 3521 00	epp2 	pr6|157
004066  aa  6 00316 2521 00	spri2	pr6|206
004067  aa  6 00236 3521 00	epp2 	pr6|158
004070  aa  6 00320 2521 00	spri2	pr6|208
004071  aa   773727 3520 04	epp2 	-2089,ic		000020 = 524000000071
004072  aa  6 00322 2521 00	spri2	pr6|210
004073  aa   773765 3520 04	epp2 	-2059,ic		000060 = 404000000043
004074  aa  6 00324 2521 00	spri2	pr6|212
004075  aa   773764 3520 04	epp2 	-2060,ic		000061 = 414000000033
004076  aa  6 00326 2521 00	spri2	pr6|214
004077  aa   773720 3520 04	epp2 	-2096,ic		000017 = 514000000001
004100  aa  6 00330 2521 00	spri2	pr6|216
004101  aa   773736 3520 04	epp2 	-2082,ic		000037 = 420000000043
004102  aa  6 00332 2521 00	spri2	pr6|218
004103  aa  6 00306 6211 00	eax1 	pr6|198
004104  aa   024000 4310 07	fld  	10240,dl
004105  aa  6 00044 3535 20	epp3 	pr6|36,*
004106  la  3 00016 3521 20	epp2 	pr3|14,*		ioa_
004107  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 265
	     end;

						STATEMENT 1 ON LINE 267
	  j = sstp2 -> sst.cleanup_count - sstp1 -> sst.cleanup_count;

004110  aa  6 00034 7641 00	lprp4	pr6|28
004111  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
004112  aa  7 00267 2361 00	ldq  	pr7|183		sst.cleanup_count
004113  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
004114  aa  5 00267 1761 00	sbq  	pr5|183		sst.cleanup_count
004115  aa  6 00114 7561 00	stq  	pr6|76		j
						STATEMENT 1 ON LINE 268
	  k = sstp2 -> sst.cleanup_real_time - sstp1 -> sst.cleanup_real_time;

004116  aa  7 00270 2371 00	ldaq 	pr7|184		sst.cleanup_real_time
004117  aa  5 00270 1771 00	sbaq 	pr5|184		sst.cleanup_real_time
004120  aa   216000 4110 03	lde  	72704,du
004121  aa   400000 4750 03	fad  	131072,du
004122  aa  6 00115 4551 00	fst  	pr6|77		k
						STATEMENT 1 ON LINE 269
	  k = k * 1e2 / max (1e0, meter_time);

004123  aa   002400 4310 03	fld  	1280,du
004124  aa  6 00116 5151 00	fcmp 	pr6|78		meter_time
004125  aa   000002 6050 04	tpl  	2,ic		004127
004126  aa  6 00116 4311 00	fld  	pr6|78		meter_time
004127  aa  6 00235 4551 00	fst  	pr6|157
004130  aa  6 00115 4311 00	fld  	pr6|77		k
004131  aa   016620 4610 03	fmp  	7568,du
004132  aa  6 00235 5651 00	fdv  	pr6|157
004133  aa  6 00115 4551 00	fst  	pr6|77		k
						STATEMENT 1 ON LINE 270
	  call ioa_ ("Cleanups^-^15d^12.3f sec. ^5.1f % of real time", j, mtb_sec (j), k);

004134  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
004135  aa   774736 00 0060	desc9a	-1570,48		001072 = 103154145141
004136  aa  6 00270 00 0060	desc9a	pr6|184,48
004137  aa   002751 3520 04	epp2 	1513,ic		007110 = 000004000000
004140  aa   002603 6700 04	tsp4 	1411,ic		006743
004141  aa  6 00270 3521 00	epp2 	pr6|184
004142  aa  6 00244 2521 00	spri2	pr6|164
004143  aa  6 00114 3521 00	epp2 	pr6|76		j
004144  aa  6 00246 2521 00	spri2	pr6|166
004145  aa  6 00235 3521 00	epp2 	pr6|157
004146  aa  6 00250 2521 00	spri2	pr6|168
004147  aa  6 00115 3521 00	epp2 	pr6|77		k
004150  aa  6 00252 2521 00	spri2	pr6|170
004151  aa   773650 3520 04	epp2 	-2136,ic		000021 = 524000000056
004152  aa  6 00254 2521 00	spri2	pr6|172
004153  aa   773705 3520 04	epp2 	-2107,ic		000060 = 404000000043
004154  aa  6 00256 2521 00	spri2	pr6|174
004155  aa   773704 3520 04	epp2 	-2108,ic		000061 = 414000000033
004156  aa  6 00260 2521 00	spri2	pr6|176
004157  aa  6 00262 2521 00	spri2	pr6|178
004160  aa  6 00242 6211 00	eax1 	pr6|162
004161  aa   020000 4310 07	fld  	8192,dl
004162  aa  6 00044 3701 20	epp4 	pr6|36,*
004163  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
004164  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 273
	  j = sstp2 -> sst.force_swrites - sstp1 -> sst.force_swrites;

004165  aa  6 00034 7641 00	lprp4	pr6|28
004166  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
004167  aa  7 00524 2361 00	ldq  	pr7|340		sst.force_swrites
004170  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
004171  aa  5 00524 1761 00	sbq  	pr5|340		sst.force_swrites
004172  aa  6 00114 7561 00	stq  	pr6|76		j
						STATEMENT 1 ON LINE 274
	  call ioa_ ("Force writes      ^7d^12.3f sec.", j, mtb_sec (j));

004173  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
004174  aa   774343 00 0040	desc9a	-1821,32		000536 = 106157162143
004175  aa  6 00270 00 0040	desc9a	pr6|184,32
004176  aa   002712 3520 04	epp2 	1482,ic		007110 = 000004000000
004177  aa   002544 6700 04	tsp4 	1380,ic		006743
004200  aa  6 00270 3521 00	epp2 	pr6|184
004201  aa  6 00244 2521 00	spri2	pr6|164
004202  aa  6 00114 3521 00	epp2 	pr6|76		j
004203  aa  6 00246 2521 00	spri2	pr6|166
004204  aa  6 00235 3521 00	epp2 	pr6|157
004205  aa  6 00250 2521 00	spri2	pr6|168
004206  aa   773633 3520 04	epp2 	-2149,ic		000041 = 524000000040
004207  aa  6 00252 2521 00	spri2	pr6|170
004210  aa   773650 3520 04	epp2 	-2136,ic		000060 = 404000000043
004211  aa  6 00254 2521 00	spri2	pr6|172
004212  aa   773647 3520 04	epp2 	-2137,ic		000061 = 414000000033
004213  aa  6 00256 2521 00	spri2	pr6|174
004214  aa  6 00242 6211 00	eax1 	pr6|162
004215  aa   014000 4310 07	fld  	6144,dl
004216  aa  6 00044 3701 20	epp4 	pr6|36,*
004217  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
004220  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 275
	  if j ^= 0
	  then
	     do;

004221  aa  6 00114 2361 00	ldq  	pr6|76		j
004222  aa   000201 6000 04	tze  	129,ic		004423
						STATEMENT 1 ON LINE 278
	        i = j * 1e3;

004223  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
004224  aa   024764 4610 03	fmp  	10740,du
004225  aa  6 00113 4551 00	fst  	pr6|75		i
						STATEMENT 1 ON LINE 279
	        j = sstp2 -> sst.fw_none - sstp1 -> sst.fw_none;

004226  aa  6 00034 7641 00	lprp4	pr6|28
004227  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
004230  aa  7 00526 2361 00	ldq  	pr7|342		sst.fw_none
004231  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
004232  aa  5 00526 1761 00	sbq  	pr5|342		sst.fw_none
004233  aa  6 00114 7561 00	stq  	pr6|76		j
						STATEMENT 1 ON LINE 280
	        i = i - j * 1e3;

004234  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
004235  aa   024764 4610 03	fmp  	10740,du
004236  aa   000000 5130 00	fneg 	0
004237  aa  6 00113 4751 00	fad  	pr6|75		i
004240  aa  6 00113 4551 00	fst  	pr6|75		i
						STATEMENT 1 ON LINE 281
	        if j ^= 0
	        then call ioa_ ("   without pwrites^7d^12.3f sec.", j, mtb_sec (j));

004241  aa  6 00114 2361 00	ldq  	pr6|76		j
004242  aa   000027 6000 04	tze  	23,ic		004271
004243  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
004244  aa   774263 00 0040	desc9a	-1869,32		000526 = 040040040167
004245  aa  6 00270 00 0040	desc9a	pr6|184,32
004246  aa   002642 3520 04	epp2 	1442,ic		007110 = 000004000000
004247  aa   002474 6700 04	tsp4 	1340,ic		006743
004250  aa  6 00270 3521 00	epp2 	pr6|184
004251  aa  6 00244 2521 00	spri2	pr6|164
004252  aa  6 00114 3521 00	epp2 	pr6|76		j
004253  aa  6 00246 2521 00	spri2	pr6|166
004254  aa  6 00235 3521 00	epp2 	pr6|157
004255  aa  6 00250 2521 00	spri2	pr6|168
004256  aa   773563 3520 04	epp2 	-2189,ic		000041 = 524000000040
004257  aa  6 00252 2521 00	spri2	pr6|170
004260  aa   773600 3520 04	epp2 	-2176,ic		000060 = 404000000043
004261  aa  6 00254 2521 00	spri2	pr6|172
004262  aa   773577 3520 04	epp2 	-2177,ic		000061 = 414000000033
004263  aa  6 00256 2521 00	spri2	pr6|174
004264  aa  6 00242 6211 00	eax1 	pr6|162
004265  aa   014000 4310 07	fld  	6144,dl
004266  aa  6 00044 3701 20	epp4 	pr6|36,*
004267  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
004270  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 284
	        j = sstp2 -> sst.force_pwrites - sstp1 -> sst.force_pwrites;

004271  aa  6 00034 7641 00	lprp4	pr6|28
004272  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
004273  aa  7 00525 2361 00	ldq  	pr7|341		sst.force_pwrites
004274  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
004275  aa  5 00525 1761 00	sbq  	pr5|341		sst.force_pwrites
004276  aa  6 00114 7561 00	stq  	pr6|76		j
						STATEMENT 1 ON LINE 285
	        if j ^= 0
	        then call ioa_ ("   pages written ^8d^12.3f sec.", j, mtb_sec (j));

004277  aa   000027 6000 04	tze  	23,ic		004326
004300  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
004301  aa   774216 00 0040	desc9a	-1906,32		000516 = 040040040160
004302  aa  6 00270 00 0040	desc9a	pr6|184,32
004303  aa   002605 3520 04	epp2 	1413,ic		007110 = 000004000000
004304  aa   002437 6700 04	tsp4 	1311,ic		006743
004305  aa  6 00270 3521 00	epp2 	pr6|184
004306  aa  6 00244 2521 00	spri2	pr6|164
004307  aa  6 00114 3521 00	epp2 	pr6|76		j
004310  aa  6 00246 2521 00	spri2	pr6|166
004311  aa  6 00235 3521 00	epp2 	pr6|157
004312  aa  6 00250 2521 00	spri2	pr6|168
004313  aa   773514 3520 04	epp2 	-2228,ic		000027 = 524000000037
004314  aa  6 00252 2521 00	spri2	pr6|170
004315  aa   773543 3520 04	epp2 	-2205,ic		000060 = 404000000043
004316  aa  6 00254 2521 00	spri2	pr6|172
004317  aa   773542 3520 04	epp2 	-2206,ic		000061 = 414000000033
004320  aa  6 00256 2521 00	spri2	pr6|174
004321  aa  6 00242 6211 00	eax1 	pr6|162
004322  aa   014000 4310 07	fld  	6144,dl
004323  aa  6 00044 3701 20	epp4 	pr6|36,*
004324  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
004325  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 288
	        j = sstp2 -> sst.force_updatevs - sstp1 -> sst.force_updatevs;

004326  aa  6 00034 7641 00	lprp4	pr6|28
004327  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
004330  aa  7 00527 2361 00	ldq  	pr7|343		sst.force_updatevs
004331  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
004332  aa  5 00527 1761 00	sbq  	pr5|343		sst.force_updatevs
004333  aa  6 00114 7561 00	stq  	pr6|76		j
						STATEMENT 1 ON LINE 289
	        if j ^= 0
	        then call ioa_ ("   force updatev ^8d^12.3f sec.", j, mtb_sec (j));

004334  aa   000027 6000 04	tze  	23,ic		004363
004335  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
004336  aa   774151 00 0040	desc9a	-1943,32		000506 = 040040040146
004337  aa  6 00270 00 0040	desc9a	pr6|184,32
004340  aa   002550 3520 04	epp2 	1384,ic		007110 = 000004000000
004341  aa   002402 6700 04	tsp4 	1282,ic		006743
004342  aa  6 00270 3521 00	epp2 	pr6|184
004343  aa  6 00244 2521 00	spri2	pr6|164
004344  aa  6 00114 3521 00	epp2 	pr6|76		j
004345  aa  6 00246 2521 00	spri2	pr6|166
004346  aa  6 00235 3521 00	epp2 	pr6|157
004347  aa  6 00250 2521 00	spri2	pr6|168
004350  aa   773457 3520 04	epp2 	-2257,ic		000027 = 524000000037
004351  aa  6 00252 2521 00	spri2	pr6|170
004352  aa   773506 3520 04	epp2 	-2234,ic		000060 = 404000000043
004353  aa  6 00254 2521 00	spri2	pr6|172
004354  aa   773505 3520 04	epp2 	-2235,ic		000061 = 414000000033
004355  aa  6 00256 2521 00	spri2	pr6|174
004356  aa  6 00242 6211 00	eax1 	pr6|162
004357  aa   014000 4310 07	fld  	6144,dl
004360  aa  6 00044 3701 20	epp4 	pr6|36,*
004361  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
004362  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 291
	        j = sstp2 -> sst.fw_retries - sstp1 -> sst.fw_retries;

004363  aa  6 00034 7641 00	lprp4	pr6|28
004364  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
004365  aa  7 00222 3361 00	lcq  	pr7|146		sst.fw_retries
004366  aa   000044 7770 00	llr  	36
004367  aa   000044 7330 00	lrs  	36
004370  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
004371  aa  5 00222 0331 00	adl  	pr5|146		sst.fw_retries
004372  aa   000000 5330 00	negl 	0
004373  aa  6 00114 7561 00	stq  	pr6|76		j
						STATEMENT 1 ON LINE 292
	        if j ^= 0
	        then call ioa_ ("   force retries ^8d^12.3f sec.", j, mtb_sec (j));

004374  aa   000027 6000 04	tze  	23,ic		004423
004375  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
004376  aa   774101 00 0040	desc9a	-1983,32		000476 = 040040040146
004377  aa  6 00270 00 0040	desc9a	pr6|184,32
004400  aa   002510 3520 04	epp2 	1352,ic		007110 = 000004000000
004401  aa   002342 6700 04	tsp4 	1250,ic		006743
004402  aa  6 00270 3521 00	epp2 	pr6|184
004403  aa  6 00244 2521 00	spri2	pr6|164
004404  aa  6 00114 3521 00	epp2 	pr6|76		j
004405  aa  6 00246 2521 00	spri2	pr6|166
004406  aa  6 00235 3521 00	epp2 	pr6|157
004407  aa  6 00250 2521 00	spri2	pr6|168
004410  aa   773417 3520 04	epp2 	-2289,ic		000027 = 524000000037
004411  aa  6 00252 2521 00	spri2	pr6|170
004412  aa   773446 3520 04	epp2 	-2266,ic		000060 = 404000000043
004413  aa  6 00254 2521 00	spri2	pr6|172
004414  aa   773445 3520 04	epp2 	-2267,ic		000061 = 414000000033
004415  aa  6 00256 2521 00	spri2	pr6|174
004416  aa  6 00242 6211 00	eax1 	pr6|162
004417  aa   014000 4310 07	fld  	6144,dl
004420  aa  6 00044 3701 20	epp4 	pr6|36,*
004421  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
004422  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 294
	     end;

						STATEMENT 1 ON LINE 296
	  j = sstp2 -> sst.ast_locking_count - sstp1 -> sst.ast_locking_count;

004423  aa  6 00034 7641 00	lprp4	pr6|28
004424  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
004425  aa  7 00266 3361 00	lcq  	pr7|182		sst.ast_locking_count
004426  aa   000044 7770 00	llr  	36
004427  aa   000044 7330 00	lrs  	36
004430  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
004431  aa  5 00266 0331 00	adl  	pr5|182		sst.ast_locking_count
004432  aa   000000 5330 00	negl 	0
004433  aa  6 00114 7561 00	stq  	pr6|76		j
						STATEMENT 1 ON LINE 297
	  call ioa_ ("Lock AST       ^10d^12.3f sec.", j, mtb_sec (j));

004434  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
004435  aa   774032 00 0040	desc9a	-2022,32		000466 = 114157143153
004436  aa  6 00270 00 0040	desc9a	pr6|184,32
004437  aa   002451 3520 04	epp2 	1321,ic		007110 = 000004000000
004440  aa   002303 6700 04	tsp4 	1219,ic		006743
004441  aa  6 00270 3521 00	epp2 	pr6|184
004442  aa  6 00244 2521 00	spri2	pr6|164
004443  aa  6 00114 3521 00	epp2 	pr6|76		j
004444  aa  6 00246 2521 00	spri2	pr6|166
004445  aa  6 00235 3521 00	epp2 	pr6|157
004446  aa  6 00250 2521 00	spri2	pr6|168
004447  aa   773366 3520 04	epp2 	-2314,ic		000035 = 524000000036
004450  aa  6 00252 2521 00	spri2	pr6|170
004451  aa   773407 3520 04	epp2 	-2297,ic		000060 = 404000000043
004452  aa  6 00254 2521 00	spri2	pr6|172
004453  aa   773406 3520 04	epp2 	-2298,ic		000061 = 414000000033
004454  aa  6 00256 2521 00	spri2	pr6|174
004455  aa  6 00242 6211 00	eax1 	pr6|162
004456  aa   014000 4310 07	fld  	6144,dl
004457  aa  6 00044 3701 20	epp4 	pr6|36,*
004460  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
004461  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 298
	  call ioa_ (" ");

004462  aa   040000 2350 03	lda  	16384,du
004463  aa  6 00235 7551 00	sta  	pr6|157
004464  aa  6 00235 3521 00	epp2 	pr6|157
004465  aa  6 00272 2521 00	spri2	pr6|186
004466  aa   773330 3520 04	epp2 	-2344,ic		000016 = 524000000001
004467  aa  6 00274 2521 00	spri2	pr6|188
004470  aa  6 00270 6211 00	eax1 	pr6|184
004471  aa   004000 4310 07	fld  	2048,dl
004472  aa  6 00044 3701 20	epp4 	pr6|36,*
004473  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
004474  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 299
	  call ioa_ ("^-^- AVE/lock^-      %");

004475  aa   773567 2370 04	ldaq 	-2185,ic		000264 = 136055136055 040101126105
004476  aa  6 00270 7571 00	staq 	pr6|184
004477  aa   773567 2370 04	ldaq 	-2185,ic		000266 = 057154157143 153136055040
004500  aa  6 00272 7571 00	staq 	pr6|186
004501  aa   773567 2370 04	ldaq 	-2185,ic		000270 = 040040040040 040045000000
004502  aa  6 00274 7571 00	staq 	pr6|188
004503  aa  6 00270 3521 00	epp2 	pr6|184
004504  aa  6 00244 2521 00	spri2	pr6|164
004505  aa   773310 3520 04	epp2 	-2360,ic		000015 = 524000000026
004506  aa  6 00246 2521 00	spri2	pr6|166
004507  aa  6 00242 6211 00	eax1 	pr6|162
004510  aa   004000 4310 07	fld  	2048,dl
004511  aa  6 00044 3701 20	epp4 	pr6|36,*
004512  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
004513  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 301
	  k = sstp2 -> sst.ast_locked_total_time - sstp1 -> sst.ast_locked_total_time;

004514  aa  6 00034 7641 00	lprp4	pr6|28
004515  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
004516  aa  7 00262 2371 00	ldaq 	pr7|178		sst.ast_locked_total_time
004517  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
004520  aa  5 00262 1771 00	sbaq 	pr5|178		sst.ast_locked_total_time
004521  aa   216000 4110 03	lde  	72704,du
004522  aa   400000 4750 03	fad  	131072,du
004523  aa  6 00115 4551 00	fst  	pr6|77		k
						STATEMENT 1 ON LINE 302
	  j = sstp2 -> sst.ast_locking_count - sstp1 -> sst.ast_locking_count;

004524  aa  7 00266 3361 00	lcq  	pr7|182		sst.ast_locking_count
004525  aa   000044 7770 00	llr  	36
004526  aa   000044 7330 00	lrs  	36
004527  aa  5 00266 0331 00	adl  	pr5|182		sst.ast_locking_count
004530  aa   000000 5330 00	negl 	0
004531  aa  6 00114 7561 00	stq  	pr6|76		j
						STATEMENT 1 ON LINE 304
	  if j > 0
	  then i = 1e-3 * k / j;

004532  aa   000010 6044 04	tmoz 	8,ic		004542
004533  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
004534  aa  6 00236 4571 00	dfst 	pr6|158
004535  aa   773257 4310 04	fld  	-2385,ic		000014 = 756406111565
004536  aa  6 00115 4611 00	fmp  	pr6|77		k
004537  aa  6 00236 5671 00	dfdv 	pr6|158
004540  aa  6 00113 4551 00	fst  	pr6|75		i
004541  aa   000003 7100 04	tra  	3,ic		004544
						STATEMENT 1 ON LINE 306
	  else i = 0e0;

004542  aa   400000 4310 03	fld  	131072,du
004543  aa  6 00113 4551 00	fst  	pr6|75		i
						STATEMENT 1 ON LINE 308
	  k = 1e2 * k / max (meter_time, 1e0);

004544  aa  6 00116 4311 00	fld  	pr6|78		meter_time
004545  aa   002400 5150 03	fcmp 	1280,du
004546  aa   000002 6050 04	tpl  	2,ic		004550
004547  aa   002400 4310 03	fld  	1280,du
004550  aa  6 00235 4551 00	fst  	pr6|157
004551  aa   016620 4310 03	fld  	7568,du
004552  aa  6 00115 4611 00	fmp  	pr6|77		k
004553  aa  6 00235 5651 00	fdv  	pr6|157
004554  aa  6 00115 4551 00	fst  	pr6|77		k
						STATEMENT 1 ON LINE 309
	  call ioa_ ("AST locked      ^9.3f msec.^6.1f", i, k);

004555  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
004556  aa   773701 00 0040	desc9a	-2111,32		000456 = 101123124040
004557  aa  6 00270 00 0040	desc9a	pr6|184,32
004560  aa  6 00270 3521 00	epp2 	pr6|184
004561  aa  6 00244 2521 00	spri2	pr6|164
004562  aa  6 00113 3521 00	epp2 	pr6|75		i
004563  aa  6 00246 2521 00	spri2	pr6|166
004564  aa  6 00115 3521 00	epp2 	pr6|77		k
004565  aa  6 00250 2521 00	spri2	pr6|168
004566  aa   773253 3520 04	epp2 	-2389,ic		000041 = 524000000040
004567  aa  6 00252 2521 00	spri2	pr6|170
004570  aa   773271 3520 04	epp2 	-2375,ic		000061 = 414000000033
004571  aa  6 00254 2521 00	spri2	pr6|172
004572  aa  6 00256 2521 00	spri2	pr6|174
004573  aa  6 00242 6211 00	eax1 	pr6|162
004574  aa   014000 4310 07	fld  	6144,dl
004575  aa  6 00044 3535 20	epp3 	pr6|36,*
004576  la  3 00016 3521 20	epp2 	pr3|14,*		ioa_
004577  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 311
	  k = sstp2 -> sst.ast_lock_wait_time - sstp1 -> sst.ast_lock_wait_time;

004600  aa  6 00034 7641 00	lprp4	pr6|28
004601  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
004602  aa  7 00264 2371 00	ldaq 	pr7|180		sst.ast_lock_wait_time
004603  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
004604  aa  5 00264 1771 00	sbaq 	pr5|180		sst.ast_lock_wait_time
004605  aa   216000 4110 03	lde  	72704,du
004606  aa   400000 4750 03	fad  	131072,du
004607  aa  6 00115 4551 00	fst  	pr6|77		k
						STATEMENT 1 ON LINE 312
	  if j > 0e0
	  then i = 1e-3 * k / j;

004610  aa  6 00114 2361 00	ldq  	pr6|76		j
004611  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
004612  aa  6 00236 4571 00	dfst 	pr6|158
004613  aa   000006 6044 04	tmoz 	6,ic		004621
004614  aa   773200 4310 04	fld  	-2432,ic		000014 = 756406111565
004615  aa  6 00115 4611 00	fmp  	pr6|77		k
004616  aa  6 00236 5671 00	dfdv 	pr6|158
004617  aa  6 00113 4551 00	fst  	pr6|75		i
004620  aa   000003 7100 04	tra  	3,ic		004623
						STATEMENT 1 ON LINE 314
	  else i = 0e0;

004621  aa   400000 4310 03	fld  	131072,du
004622  aa  6 00113 4551 00	fst  	pr6|75		i
						STATEMENT 1 ON LINE 316
	  k = 1e2 * k / max (meter_time, 1e0);

004623  aa   016620 4310 03	fld  	7568,du
004624  aa  6 00115 4611 00	fmp  	pr6|77		k
004625  aa  6 00235 5651 00	fdv  	pr6|157
004626  aa  6 00115 4551 00	fst  	pr6|77		k
						STATEMENT 1 ON LINE 317
	  call ioa_ ("AST lock waiting^9.3f msec.^6.1f", i, k);

004627  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
004630  aa   773617 00 0040	desc9a	-2161,32		000446 = 101123124040
004631  aa  6 00270 00 0040	desc9a	pr6|184,32
004632  aa  6 00270 3521 00	epp2 	pr6|184
004633  aa  6 00244 2521 00	spri2	pr6|164
004634  aa  6 00113 3521 00	epp2 	pr6|75		i
004635  aa  6 00246 2521 00	spri2	pr6|166
004636  aa  6 00115 3521 00	epp2 	pr6|77		k
004637  aa  6 00250 2521 00	spri2	pr6|168
004640  aa   773201 3520 04	epp2 	-2431,ic		000041 = 524000000040
004641  aa  6 00252 2521 00	spri2	pr6|170
004642  aa   773217 3520 04	epp2 	-2417,ic		000061 = 414000000033
004643  aa  6 00254 2521 00	spri2	pr6|172
004644  aa  6 00256 2521 00	spri2	pr6|174
004645  aa  6 00242 6211 00	eax1 	pr6|162
004646  aa   014000 4310 07	fld  	6144,dl
004647  aa  6 00044 3535 20	epp3 	pr6|36,*
004650  la  3 00016 3521 20	epp2 	pr3|14,*		ioa_
004651  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 319
	  do j = 0 to 3;

004652  aa  6 00114 4501 00	stz  	pr6|76		j
004653  aa   000000 0110 03	nop  	0,du
004654  aa  6 00114 2361 00	ldq  	pr6|76		j
004655  aa   000003 1160 07	cmpq 	3,dl
004656  aa   000052 6054 04	tpnz 	42,ic		004730
						STATEMENT 1 ON LINE 320
	     t0 (j) = sstp2 -> sst.pts (j);

004657  aa  6 00034 7641 00	lprp4	pr6|28
004660  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
004661  aa  7 00040 2361 06	ldq  	pr7|32,ql		sst.pts
004662  aa  6 00114 7271 00	lxl7 	pr6|76		j
004663  aa  6 00127 7561 17	stq  	pr6|87,7		t0
						STATEMENT 1 ON LINE 321
	     t1 (j) = sstp2 -> sst.asteps (j) - sstp1 -> sst.asteps (j);

004664  aa  7 00254 2361 17	ldq  	pr7|172,7		sst.asteps
004665  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
004666  aa  5 00254 1761 17	sbq  	pr5|172,7		sst.asteps
004667  aa  6 00133 7561 17	stq  	pr6|91,7		t1
						STATEMENT 1 ON LINE 322
	     t2 (j) = sstp2 -> sst.aneedsize (j) - sstp1 -> sst.aneedsize (j);

004670  aa  7 00230 2361 17	ldq  	pr7|152,7		sst.aneedsize
004671  aa  5 00230 1761 17	sbq  	pr5|152,7		sst.aneedsize
004672  aa  6 00137 7561 17	stq  	pr6|95,7		t2
						STATEMENT 1 ON LINE 323
	     t3 (j) = float (t1 (j)) / max (1e0, float (t2 (j)));

004673  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
004674  aa   002400 5150 03	fcmp 	1280,du
004675  aa   000002 6050 04	tpl  	2,ic		004677
004676  aa   002400 4310 03	fld  	1280,du
004677  aa  6 00235 4551 00	fst  	pr6|157
004700  aa  6 00133 2361 17	ldq  	pr6|91,7		t1
004701  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
004702  aa  6 00240 4551 00	fst  	pr6|160
004703  aa  6 00235 5651 00	fdv  	pr6|157
004704  aa  6 00143 4551 17	fst  	pr6|99,7		t3
						STATEMENT 1 ON LINE 324
	     t4 (j) = fixed (sstp2 -> sst.no_aste (j));

004705  aa  7 00044 2361 17	ldq  	pr7|36,7		sst.no_aste
004706  aa  0 00374 3771 00	anaq 	pr0|252		= 000000000000 000000777777
004707  aa  6 00147 7561 17	stq  	pr6|103,7		t4
						STATEMENT 1 ON LINE 325
	     t5 (j) = (t4 (j) / max (1e0, t1 (j))) * meter_time * 1e-6;

004710  aa   002400 4310 03	fld  	1280,du
004711  aa  6 00240 5151 00	fcmp 	pr6|160
004712  aa   000002 6050 04	tpl  	2,ic		004714
004713  aa  6 00240 4311 00	fld  	pr6|160
004714  aa  6 00240 4551 00	fst  	pr6|160
004715  aa  6 00147 2361 17	ldq  	pr6|103,7		t4
004716  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
004717  aa  6 00240 5651 00	fdv  	pr6|160
004720  aa  6 00116 4611 00	fmp  	pr6|78		meter_time
004721  aa   773072 4610 04	fmp  	-2502,ic		000013 = 732414336750
004722  aa  6 00153 4551 17	fst  	pr6|107,7		t5
						STATEMENT 1 ON LINE 326
	  end;

004723  aa  6 00114 2351 00	lda  	pr6|76		j
004724  aa   000044 7330 00	lrs  	36
004725  aa   000001 0330 07	adl  	1,dl
004726  aa  6 00114 7561 00	stq  	pr6|76		j
004727  aa   777725 7100 04	tra  	-43,ic		004654
						STATEMENT 1 ON LINE 328
	  call ioa_ ("^/AST Sizes    ^10d^10d^10d^10d", t0 (0), t0 (1), t0 (2), t0 (3));

004730  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
004731  aa   773506 00 0040	desc9a	-2234,32		000436 = 136057101123
004732  aa  6 00270 00 0040	desc9a	pr6|184,32
004733  aa  6 00270 3521 00	epp2 	pr6|184
004734  aa  6 00244 2521 00	spri2	pr6|164
004735  aa  6 00127 3521 00	epp2 	pr6|87		t0
004736  aa  6 00246 2521 00	spri2	pr6|166
004737  aa  6 00130 3521 00	epp2 	pr6|88		t0
004740  aa  6 00250 2521 00	spri2	pr6|168
004741  aa  6 00131 3521 00	epp2 	pr6|89		t0
004742  aa  6 00252 2521 00	spri2	pr6|170
004743  aa  6 00132 3521 00	epp2 	pr6|90		t0
004744  aa  6 00254 2521 00	spri2	pr6|172
004745  aa   773062 3520 04	epp2 	-2510,ic		000027 = 524000000037
004746  aa  6 00256 2521 00	spri2	pr6|174
004747  aa   773113 3520 04	epp2 	-2485,ic		000062 = 404000000021
004750  aa  6 00260 2521 00	spri2	pr6|176
004751  aa   773111 3520 04	epp2 	-2487,ic		000062 = 404000000021
004752  aa  6 00262 2521 00	spri2	pr6|178
004753  aa  6 00264 2521 00	spri2	pr6|180
004754  aa  6 00266 2521 00	spri2	pr6|182
004755  aa  6 00242 6211 00	eax1 	pr6|162
004756  aa   024000 4310 07	fld  	10240,dl
004757  aa  6 00044 3701 20	epp4 	pr6|36,*
004760  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
004761  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 329
	  call ioa_ ("Number       ^10d^10d^10d^10d", t4 (0), t4 (1), t4 (2), t4 (3));

004762  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
004763  aa   773444 00 0040	desc9a	-2268,32		000426 = 116165155142
004764  aa  6 00270 00 0040	desc9a	pr6|184,32
004765  aa  6 00270 3521 00	epp2 	pr6|184
004766  aa  6 00244 2521 00	spri2	pr6|164
004767  aa  6 00147 3521 00	epp2 	pr6|103		t4
004770  aa  6 00246 2521 00	spri2	pr6|166
004771  aa  6 00150 3521 00	epp2 	pr6|104		t4
004772  aa  6 00250 2521 00	spri2	pr6|168
004773  aa  6 00151 3521 00	epp2 	pr6|105		t4
004774  aa  6 00252 2521 00	spri2	pr6|170
004775  aa  6 00152 3521 00	epp2 	pr6|106		t4
004776  aa  6 00254 2521 00	spri2	pr6|172
004777  aa   773013 3520 04	epp2 	-2549,ic		000012 = 524000000035
005000  aa  6 00256 2521 00	spri2	pr6|174
005001  aa   773061 3520 04	epp2 	-2511,ic		000062 = 404000000021
005002  aa  6 00260 2521 00	spri2	pr6|176
005003  aa   773057 3520 04	epp2 	-2513,ic		000062 = 404000000021
005004  aa  6 00262 2521 00	spri2	pr6|178
005005  aa  6 00264 2521 00	spri2	pr6|180
005006  aa  6 00266 2521 00	spri2	pr6|182
005007  aa  6 00242 6211 00	eax1 	pr6|162
005010  aa   024000 4310 07	fld  	10240,dl
005011  aa  6 00044 3701 20	epp4 	pr6|36,*
005012  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
005013  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 330
	  call ioa_ ("Need         ^10d^10d^10d^10d", t2 (0), t2 (1), t2 (2), t2 (3));

005014  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
005015  aa   773402 00 0040	desc9a	-2302,32		000416 = 116145145144
005016  aa  6 00270 00 0040	desc9a	pr6|184,32
005017  aa  6 00270 3521 00	epp2 	pr6|184
005020  aa  6 00244 2521 00	spri2	pr6|164
005021  aa  6 00137 3521 00	epp2 	pr6|95		t2
005022  aa  6 00246 2521 00	spri2	pr6|166
005023  aa  6 00140 3521 00	epp2 	pr6|96		t2
005024  aa  6 00250 2521 00	spri2	pr6|168
005025  aa  6 00141 3521 00	epp2 	pr6|97		t2
005026  aa  6 00252 2521 00	spri2	pr6|170
005027  aa  6 00142 3521 00	epp2 	pr6|98		t2
005030  aa  6 00254 2521 00	spri2	pr6|172
005031  aa   772761 3520 04	epp2 	-2575,ic		000012 = 524000000035
005032  aa  6 00256 2521 00	spri2	pr6|174
005033  aa   773027 3520 04	epp2 	-2537,ic		000062 = 404000000021
005034  aa  6 00260 2521 00	spri2	pr6|176
005035  aa   773025 3520 04	epp2 	-2539,ic		000062 = 404000000021
005036  aa  6 00262 2521 00	spri2	pr6|178
005037  aa  6 00264 2521 00	spri2	pr6|180
005040  aa  6 00266 2521 00	spri2	pr6|182
005041  aa  6 00242 6211 00	eax1 	pr6|162
005042  aa   024000 4310 07	fld  	10240,dl
005043  aa  6 00044 3701 20	epp4 	pr6|36,*
005044  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
005045  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 331
	  call ioa_ ("Steps        ^10d^10d^10d^10d", t1 (0), t1 (1), t1 (2), t1 (3));

005046  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
005047  aa   773340 00 0040	desc9a	-2336,32		000406 = 123164145160
005050  aa  6 00270 00 0040	desc9a	pr6|184,32
005051  aa  6 00270 3521 00	epp2 	pr6|184
005052  aa  6 00244 2521 00	spri2	pr6|164
005053  aa  6 00133 3521 00	epp2 	pr6|91		t1
005054  aa  6 00246 2521 00	spri2	pr6|166
005055  aa  6 00134 3521 00	epp2 	pr6|92		t1
005056  aa  6 00250 2521 00	spri2	pr6|168
005057  aa  6 00135 3521 00	epp2 	pr6|93		t1
005060  aa  6 00252 2521 00	spri2	pr6|170
005061  aa  6 00136 3521 00	epp2 	pr6|94		t1
005062  aa  6 00254 2521 00	spri2	pr6|172
005063  aa   772727 3520 04	epp2 	-2601,ic		000012 = 524000000035
005064  aa  6 00256 2521 00	spri2	pr6|174
005065  aa   772775 3520 04	epp2 	-2563,ic		000062 = 404000000021
005066  aa  6 00260 2521 00	spri2	pr6|176
005067  aa   772773 3520 04	epp2 	-2565,ic		000062 = 404000000021
005070  aa  6 00262 2521 00	spri2	pr6|178
005071  aa  6 00264 2521 00	spri2	pr6|180
005072  aa  6 00266 2521 00	spri2	pr6|182
005073  aa  6 00242 6211 00	eax1 	pr6|162
005074  aa   024000 4310 07	fld  	10240,dl
005075  aa  6 00044 3701 20	epp4 	pr6|36,*
005076  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
005077  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 332
	  call ioa_ ("Ave Steps    ^10.1f^10.1f^10.1f^10.1f", t3 (0), t3 (1), t3 (2), t3 (3));

005100  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
005101  aa   773540 00 0050	desc9a	-2208,40		000640 = 101166145040
005102  aa  6 00270 00 0050	desc9a	pr6|184,40
005103  aa  6 00270 3521 00	epp2 	pr6|184
005104  aa  6 00244 2521 00	spri2	pr6|164
005105  aa  6 00143 3521 00	epp2 	pr6|99		t3
005106  aa  6 00246 2521 00	spri2	pr6|166
005107  aa  6 00144 3521 00	epp2 	pr6|100		t3
005110  aa  6 00250 2521 00	spri2	pr6|168
005111  aa  6 00145 3521 00	epp2 	pr6|101		t3
005112  aa  6 00252 2521 00	spri2	pr6|170
005113  aa  6 00146 3521 00	epp2 	pr6|102		t3
005114  aa  6 00254 2521 00	spri2	pr6|172
005115  aa   772674 3520 04	epp2 	-2628,ic		000011 = 524000000045
005116  aa  6 00256 2521 00	spri2	pr6|174
005117  aa   772742 3520 04	epp2 	-2590,ic		000061 = 414000000033
005120  aa  6 00260 2521 00	spri2	pr6|176
005121  aa   772740 3520 04	epp2 	-2592,ic		000061 = 414000000033
005122  aa  6 00262 2521 00	spri2	pr6|178
005123  aa  6 00264 2521 00	spri2	pr6|180
005124  aa  6 00266 2521 00	spri2	pr6|182
005125  aa  6 00242 6211 00	eax1 	pr6|162
005126  aa   024000 4310 07	fld  	10240,dl
005127  aa  6 00044 3701 20	epp4 	pr6|36,*
005130  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
005131  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 333
	  call ioa_ ("Lap Time(sec)^10.1f^10.1f^10.1f^10.1f", t5 (0), t5 (1), t5 (2), t5 (3));

005132  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
005133  aa   773474 00 0050	desc9a	-2244,40		000626 = 114141160040
005134  aa  6 00270 00 0050	desc9a	pr6|184,40
005135  aa  6 00270 3521 00	epp2 	pr6|184
005136  aa  6 00244 2521 00	spri2	pr6|164
005137  aa  6 00153 3521 00	epp2 	pr6|107		t5
005140  aa  6 00246 2521 00	spri2	pr6|166
005141  aa  6 00154 3521 00	epp2 	pr6|108		t5
005142  aa  6 00250 2521 00	spri2	pr6|168
005143  aa  6 00155 3521 00	epp2 	pr6|109		t5
005144  aa  6 00252 2521 00	spri2	pr6|170
005145  aa  6 00156 3521 00	epp2 	pr6|110		t5
005146  aa  6 00254 2521 00	spri2	pr6|172
005147  aa   772642 3520 04	epp2 	-2654,ic		000011 = 524000000045
005150  aa  6 00256 2521 00	spri2	pr6|174
005151  aa   772710 3520 04	epp2 	-2616,ic		000061 = 414000000033
005152  aa  6 00260 2521 00	spri2	pr6|176
005153  aa   772706 3520 04	epp2 	-2618,ic		000061 = 414000000033
005154  aa  6 00262 2521 00	spri2	pr6|178
005155  aa  6 00264 2521 00	spri2	pr6|180
005156  aa  6 00266 2521 00	spri2	pr6|182
005157  aa  6 00242 6211 00	eax1 	pr6|162
005160  aa   024000 4310 07	fld  	10240,dl
005161  aa  6 00044 3701 20	epp4 	pr6|36,*
005162  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
005163  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 334
         end;

						STATEMENT 1 ON LINE 336
      if pagesw
      then
         do;

005164  aa  6 00174 2351 00	lda  	pr6|124		pagesw
005165  aa   001503 6000 04	tze  	835,ic		006670
						STATEMENT 1 ON LINE 339
	  call ioa_ ("^/^-       #^-^-ATB^/");

005166  aa   773070 2370 04	ldaq 	-2504,ic		000256 = 136057136055 040040040040
005167  aa  6 00270 7571 00	staq 	pr6|184
005170  aa   773070 2370 04	ldaq 	-2504,ic		000260 = 040040040043 136055136055
005171  aa  6 00272 7571 00	staq 	pr6|186
005172  aa   773070 2370 04	ldaq 	-2504,ic		000262 = 101124102136 057000000000
005173  aa  6 00274 7571 00	staq 	pr6|188
005174  aa  6 00270 3521 00	epp2 	pr6|184
005175  aa  6 00244 2521 00	spri2	pr6|164
005176  aa   772626 3520 04	epp2 	-2666,ic		000024 = 524000000025
005177  aa  6 00246 2521 00	spri2	pr6|166
005200  aa  6 00242 6211 00	eax1 	pr6|162
005201  aa   004000 4310 07	fld  	2048,dl
005202  aa  6 00044 3701 20	epp4 	pr6|36,*
005203  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
005204  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 340
	  j, faults = sstp2 -> sst.needc - sstp1 -> sst.needc;

005205  aa  6 00034 7641 00	lprp4	pr6|28
005206  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
005207  aa  7 00115 2361 00	ldq  	pr7|77		sst.needc
005210  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
005211  aa  5 00115 1761 00	sbq  	pr5|77		sst.needc
005212  aa  6 00114 7561 00	stq  	pr6|76		j
005213  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
005214  aa  6 00107 4551 00	fst  	pr6|71		faults
						STATEMENT 1 ON LINE 342
	  call ioa_ ("Needc     ^10d^12.3f msec.", j, mtb_msec (j));

005215  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
005216  aa   773135 00 0034	desc9a	-2467,28		000352 = 116145145144
005217  aa  6 00270 00 0034	desc9a	pr6|184,28
005220  aa   002000 3520 04	epp2 	1024,ic		007220 = 000004000000
005221  aa   001540 6700 04	tsp4 	864,ic		006761
005222  aa  6 00270 3521 00	epp2 	pr6|184
005223  aa  6 00244 2521 00	spri2	pr6|164
005224  aa  6 00114 3521 00	epp2 	pr6|76		j
005225  aa  6 00246 2521 00	spri2	pr6|166
005226  aa  6 00240 3521 00	epp2 	pr6|160
005227  aa  6 00250 2521 00	spri2	pr6|168
005230  aa   772560 3520 04	epp2 	-2704,ic		000010 = 524000000032
005231  aa  6 00252 2521 00	spri2	pr6|170
005232  aa   772626 3520 04	epp2 	-2666,ic		000060 = 404000000043
005233  aa  6 00254 2521 00	spri2	pr6|172
005234  aa   772625 3520 04	epp2 	-2667,ic		000061 = 414000000033
005235  aa  6 00256 2521 00	spri2	pr6|174
005236  aa  6 00242 6211 00	eax1 	pr6|162
005237  aa   014000 4310 07	fld  	6144,dl
005240  aa  6 00044 3701 20	epp4 	pr6|36,*
005241  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
005242  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 344
	  j = sstp2 -> sst.ceiling - sstp1 -> sst.ceiling;

005243  aa  6 00034 7641 00	lprp4	pr6|28
005244  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
005245  aa  7 00116 2361 00	ldq  	pr7|78		sst.ceiling
005246  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
005247  aa  5 00116 1761 00	sbq  	pr5|78		sst.ceiling
005250  aa  6 00114 7561 00	stq  	pr6|76		j
						STATEMENT 1 ON LINE 345
	  if j ^= 0
	  then call ioa_ ("Ceiling   ^10d^12.3f min.", j, mtb_sec (60 * j));

005251  aa   000031 6000 04	tze  	25,ic		005302
005252  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
005253  aa   773071 00 0034	desc9a	-2503,28		000343 = 103145151154
005254  aa  6 00270 00 0034	desc9a	pr6|184,28
005255  aa   000074 4020 07	mpy  	60,dl
005256  aa  6 00240 7561 00	stq  	pr6|160
005257  aa   001623 3520 04	epp2 	915,ic		007102 = 000004000000
005260  aa   001463 6700 04	tsp4 	819,ic		006743
005261  aa  6 00270 3521 00	epp2 	pr6|184
005262  aa  6 00244 2521 00	spri2	pr6|164
005263  aa  6 00114 3521 00	epp2 	pr6|76		j
005264  aa  6 00246 2521 00	spri2	pr6|166
005265  aa  6 00235 3521 00	epp2 	pr6|157
005266  aa  6 00250 2521 00	spri2	pr6|168
005267  aa   772520 3520 04	epp2 	-2736,ic		000007 = 524000000031
005270  aa  6 00252 2521 00	spri2	pr6|170
005271  aa   772567 3520 04	epp2 	-2697,ic		000060 = 404000000043
005272  aa  6 00254 2521 00	spri2	pr6|172
005273  aa   772566 3520 04	epp2 	-2698,ic		000061 = 414000000033
005274  aa  6 00256 2521 00	spri2	pr6|174
005275  aa  6 00242 6211 00	eax1 	pr6|162
005276  aa   014000 4310 07	fld  	6144,dl
005277  aa  6 00044 3701 20	epp4 	pr6|36,*
005300  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
005301  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 348
	  j = sstp2 -> sst.claim_runs - sstp1 -> sst.claim_runs;

005302  aa  6 00034 7641 00	lprp4	pr6|28
005303  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
005304  aa  7 00516 2361 00	ldq  	pr7|334		sst.claim_runs
005305  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
005306  aa  5 00516 1761 00	sbq  	pr5|334		sst.claim_runs
005307  aa  6 00114 7561 00	stq  	pr6|76		j
						STATEMENT 1 ON LINE 349
	  if j ^= 0
	  then call ioa_ ("Claim runs^10d^12.3f min.", j, mtb_sec (60 * j));

005310  aa   000031 6000 04	tze  	25,ic		005341
005311  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
005312  aa   773023 00 0034	desc9a	-2541,28		000334 = 103154141151
005313  aa  6 00270 00 0034	desc9a	pr6|184,28
005314  aa   000074 4020 07	mpy  	60,dl
005315  aa  6 00235 7561 00	stq  	pr6|157
005316  aa   001556 3520 04	epp2 	878,ic		007074 = 000004000000
005317  aa   001424 6700 04	tsp4 	788,ic		006743
005320  aa  6 00270 3521 00	epp2 	pr6|184
005321  aa  6 00244 2521 00	spri2	pr6|164
005322  aa  6 00114 3521 00	epp2 	pr6|76		j
005323  aa  6 00246 2521 00	spri2	pr6|166
005324  aa  6 00240 3521 00	epp2 	pr6|160
005325  aa  6 00250 2521 00	spri2	pr6|168
005326  aa   772461 3520 04	epp2 	-2767,ic		000007 = 524000000031
005327  aa  6 00252 2521 00	spri2	pr6|170
005330  aa   772530 3520 04	epp2 	-2728,ic		000060 = 404000000043
005331  aa  6 00254 2521 00	spri2	pr6|172
005332  aa   772527 3520 04	epp2 	-2729,ic		000061 = 414000000033
005333  aa  6 00256 2521 00	spri2	pr6|174
005334  aa  6 00242 6211 00	eax1 	pr6|162
005335  aa   014000 4310 07	fld  	6144,dl
005336  aa  6 00044 3701 20	epp4 	pr6|36,*
005337  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
005340  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 352
	  if faults ^= 0e0
	  then
	     do;

005341  aa  6 00107 4311 00	fld  	pr6|71		faults
005342  aa   000254 6000 04	tze  	172,ic		005616
						STATEMENT 1 ON LINE 355
	        call ioa_ ("Ring 0 faults^-^12.3f %",
		   float (sstp2 -> sst.ring_0_page_faults - sstp1 -> sst.ring_0_page_faults) * 1e2 / faults);

005343  aa   772705 2370 04	ldaq 	-2619,ic		000250 = 122151156147 040060040146
005344  aa  6 00270 7571 00	staq 	pr6|184
005345  aa   772705 2370 04	ldaq 	-2619,ic		000252 = 141165154164 163136055136
005346  aa  6 00272 7571 00	staq 	pr6|186
005347  aa   772705 2370 04	ldaq 	-2619,ic		000254 = 061062056063 146040045000
005350  aa  6 00274 7571 00	staq 	pr6|188
005351  aa  6 00034 7641 00	lprp4	pr6|28
005352  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
005353  aa  7 00111 2361 00	ldq  	pr7|73		sst.ring_0_page_faults
005354  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
005355  aa  5 00111 1761 00	sbq  	pr5|73		sst.ring_0_page_faults
005356  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
005357  aa   016620 4610 03	fmp  	7568,du
005360  aa  6 00107 5651 00	fdv  	pr6|71		faults
005361  aa  6 00240 4551 00	fst  	pr6|160
005362  aa  6 00270 3521 00	epp2 	pr6|184
005363  aa  6 00244 2521 00	spri2	pr6|164
005364  aa  6 00240 3521 00	epp2 	pr6|160
005365  aa  6 00246 2521 00	spri2	pr6|166
005366  aa   772420 3520 04	epp2 	-2800,ic		000006 = 524000000027
005367  aa  6 00250 2521 00	spri2	pr6|168
005370  aa   772471 3520 04	epp2 	-2759,ic		000061 = 414000000033
005371  aa  6 00252 2521 00	spri2	pr6|170
005372  aa  6 00242 6211 00	eax1 	pr6|162
005373  aa   010000 4310 07	fld  	4096,dl
005374  aa  6 00044 3535 20	epp3 	pr6|36,*
005375  la  3 00016 3521 20	epp2 	pr3|14,*		ioa_
005376  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 357
	        call ioa_ ("PDIR faults^-^12.3f %",
		   float (sstp2 -> sst.pdir_page_faults - sstp1 -> sst.pdir_page_faults) * 1e2 / faults);

005377  aa   772643 2370 04	ldaq 	-2653,ic		000242 = 120104111122 040146141165
005400  aa  6 00270 7571 00	staq 	pr6|184
005401  aa   772643 2370 04	ldaq 	-2653,ic		000244 = 154164163136 055136061062
005402  aa  6 00272 7571 00	staq 	pr6|186
005403  aa   772643 2370 04	ldaq 	-2653,ic		000246 = 056063146040 045000000000
005404  aa  6 00274 7571 00	staq 	pr6|188
005405  aa  6 00034 7641 00	lprp4	pr6|28
005406  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
005407  aa  7 00106 2361 00	ldq  	pr7|70		sst.pdir_page_faults
005410  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
005411  aa  5 00106 1761 00	sbq  	pr5|70		sst.pdir_page_faults
005412  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
005413  aa   016620 4610 03	fmp  	7568,du
005414  aa  6 00107 5651 00	fdv  	pr6|71		faults
005415  aa  6 00240 4551 00	fst  	pr6|160
005416  aa  6 00270 3521 00	epp2 	pr6|184
005417  aa  6 00244 2521 00	spri2	pr6|164
005420  aa  6 00240 3521 00	epp2 	pr6|160
005421  aa  6 00246 2521 00	spri2	pr6|166
005422  aa   772402 3520 04	epp2 	-2814,ic		000024 = 524000000025
005423  aa  6 00250 2521 00	spri2	pr6|168
005424  aa   772435 3520 04	epp2 	-2787,ic		000061 = 414000000033
005425  aa  6 00252 2521 00	spri2	pr6|170
005426  aa  6 00242 6211 00	eax1 	pr6|162
005427  aa   010000 4310 07	fld  	4096,dl
005430  aa  6 00044 3535 20	epp3 	pr6|36,*
005431  la  3 00016 3521 20	epp2 	pr3|14,*		ioa_
005432  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 359
	        call ioa_ ("Level 2 faults^-^12.3f %",
		   float (sstp2 -> sst.level_1_page_faults - sstp1 -> sst.level_1_page_faults) * 1e2 / faults);

005433  aa   772601 2370 04	ldaq 	-2687,ic		000234 = 114145166145 154040062040
005434  aa  6 00270 7571 00	staq 	pr6|184
005435  aa   772601 2370 04	ldaq 	-2687,ic		000236 = 146141165154 164163136055
005436  aa  6 00272 7571 00	staq 	pr6|186
005437  aa   772601 2370 04	ldaq 	-2687,ic		000240 = 136061062056 063146040045
005440  aa  6 00274 7571 00	staq 	pr6|188
005441  aa  6 00034 7641 00	lprp4	pr6|28
005442  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
005443  aa  7 00107 2361 00	ldq  	pr7|71		sst.level_1_page_faults
005444  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
005445  aa  5 00107 1761 00	sbq  	pr5|71		sst.level_1_page_faults
005446  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
005447  aa   016620 4610 03	fmp  	7568,du
005450  aa  6 00107 5651 00	fdv  	pr6|71		faults
005451  aa  6 00240 4551 00	fst  	pr6|160
005452  aa  6 00270 3521 00	epp2 	pr6|184
005453  aa  6 00244 2521 00	spri2	pr6|164
005454  aa  6 00240 3521 00	epp2 	pr6|160
005455  aa  6 00246 2521 00	spri2	pr6|166
005456  aa   772327 3520 04	epp2 	-2857,ic		000005 = 524000000030
005457  aa  6 00250 2521 00	spri2	pr6|168
005460  aa   772401 3520 04	epp2 	-2815,ic		000061 = 414000000033
005461  aa  6 00252 2521 00	spri2	pr6|170
005462  aa  6 00242 6211 00	eax1 	pr6|162
005463  aa   010000 4310 07	fld  	4096,dl
005464  aa  6 00044 3535 20	epp3 	pr6|36,*
005465  la  3 00016 3521 20	epp2 	pr3|14,*		ioa_
005466  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 361
	        call ioa_ ("DIR faults^-^12.3f %",
		   float (sstp2 -> sst.dir_page_faults - sstp1 -> sst.dir_page_faults) * 1e2 / faults);

005467  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
005470  aa   772426 00 0024	desc9a	-2794,20		000115 = 104111122040
005471  aa  6 00270 00 0024	desc9a	pr6|184,20
005472  aa  6 00034 7641 00	lprp4	pr6|28
005473  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
005474  aa  7 00110 2361 00	ldq  	pr7|72		sst.dir_page_faults
005475  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
005476  aa  5 00110 1761 00	sbq  	pr5|72		sst.dir_page_faults
005477  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
005500  aa   016620 4610 03	fmp  	7568,du
005501  aa  6 00107 5651 00	fdv  	pr6|71		faults
005502  aa  6 00240 4551 00	fst  	pr6|160
005503  aa  6 00270 3521 00	epp2 	pr6|184
005504  aa  6 00244 2521 00	spri2	pr6|164
005505  aa  6 00240 3521 00	epp2 	pr6|160
005506  aa  6 00246 2521 00	spri2	pr6|166
005507  aa   772333 3520 04	epp2 	-2853,ic		000042 = 524000000024
005510  aa  6 00250 2521 00	spri2	pr6|168
005511  aa   772350 3520 04	epp2 	-2840,ic		000061 = 414000000033
005512  aa  6 00252 2521 00	spri2	pr6|170
005513  aa  6 00242 6211 00	eax1 	pr6|162
005514  aa   010000 4310 07	fld  	4096,dl
005515  aa  6 00044 3535 20	epp3 	pr6|36,*
005516  la  3 00016 3521 20	epp2 	pr3|14,*		ioa_
005517  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 363
	        call ioa_ ("New Pages^-^-^12.3f %",
		   float (sstp2 -> sst.new_pages - sstp1 -> sst.new_pages) * 1e2 / faults);

005520  aa   772506 2370 04	ldaq 	-2746,ic		000226 = 116145167040 120141147145
005521  aa  6 00270 7571 00	staq 	pr6|184
005522  aa   772506 2370 04	ldaq 	-2746,ic		000230 = 163136055136 055136061062
005523  aa  6 00272 7571 00	staq 	pr6|186
005524  aa   772506 2370 04	ldaq 	-2746,ic		000232 = 056063146040 045000000000
005525  aa  6 00274 7571 00	staq 	pr6|188
005526  aa  6 00034 7641 00	lprp4	pr6|28
005527  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
005530  aa  7 00565 2361 00	ldq  	pr7|373		sst.new_pages
005531  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
005532  aa  5 00565 1761 00	sbq  	pr5|373		sst.new_pages
005533  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
005534  aa   016620 4610 03	fmp  	7568,du
005535  aa  6 00107 5651 00	fdv  	pr6|71		faults
005536  aa  6 00240 4551 00	fst  	pr6|160
005537  aa  6 00270 3521 00	epp2 	pr6|184
005540  aa  6 00244 2521 00	spri2	pr6|164
005541  aa  6 00240 3521 00	epp2 	pr6|160
005542  aa  6 00246 2521 00	spri2	pr6|166
005543  aa   772261 3520 04	epp2 	-2895,ic		000024 = 524000000025
005544  aa  6 00250 2521 00	spri2	pr6|168
005545  aa   772314 3520 04	epp2 	-2868,ic		000061 = 414000000033
005546  aa  6 00252 2521 00	spri2	pr6|170
005547  aa  6 00242 6211 00	eax1 	pr6|162
005550  aa   010000 4310 07	fld  	4096,dl
005551  aa  6 00044 3535 20	epp3 	pr6|36,*
005552  la  3 00016 3521 20	epp2 	pr3|14,*		ioa_
005553  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 366
	        i = (sstp2 -> sst.oopv - sstp1 -> sst.oopv);

005554  aa  6 00034 7641 00	lprp4	pr6|28
005555  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
005556  aa  7 00506 2361 00	ldq  	pr7|326		sst.oopv
005557  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
005560  aa  5 00506 1761 00	sbq  	pr5|326		sst.oopv
005561  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
005562  aa  6 00113 4551 00	fst  	pr6|75		i
						STATEMENT 1 ON LINE 367
	        if i > 0
	        then call ioa_ ("OOPV      ^10d^12.3f %", i, float (i) * 1e2 / faults);

005563  aa   000033 6044 04	tmoz 	27,ic		005616
005564  aa   772434 2370 04	ldaq 	-2788,ic		000220 = 117117120126 040040040040
005565  aa  6 00270 7571 00	staq 	pr6|184
005566  aa   772434 2370 04	ldaq 	-2788,ic		000222 = 040040136061 060144136061
005567  aa  6 00272 7571 00	staq 	pr6|186
005570  aa   772434 2370 04	ldaq 	-2788,ic		000224 = 062056063146 040045000000
005571  aa  6 00274 7571 00	staq 	pr6|188
005572  aa  6 00113 4311 00	fld  	pr6|75		i
005573  aa   016620 4610 03	fmp  	7568,du
005574  aa  6 00107 5651 00	fdv  	pr6|71		faults
005575  aa  6 00240 4551 00	fst  	pr6|160
005576  aa  6 00270 3521 00	epp2 	pr6|184
005577  aa  6 00244 2521 00	spri2	pr6|164
005600  aa  6 00113 3521 00	epp2 	pr6|75		i
005601  aa  6 00246 2521 00	spri2	pr6|166
005602  aa  6 00240 3521 00	epp2 	pr6|160
005603  aa  6 00250 2521 00	spri2	pr6|168
005604  aa   772211 3520 04	epp2 	-2935,ic		000015 = 524000000026
005605  aa  6 00252 2521 00	spri2	pr6|170
005606  aa   772253 3520 04	epp2 	-2901,ic		000061 = 414000000033
005607  aa  6 00254 2521 00	spri2	pr6|172
005610  aa  6 00256 2521 00	spri2	pr6|174
005611  aa  6 00242 6211 00	eax1 	pr6|162
005612  aa   014000 4310 07	fld  	6144,dl
005613  aa  6 00044 3535 20	epp3 	pr6|36,*
005614  la  3 00016 3521 20	epp2 	pr3|14,*		ioa_
005615  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 369
	     end;

						STATEMENT 1 ON LINE 371
	  j = sstp2 -> sst.volmap_seg_page_faults - sstp2 -> sst.volmap_seg_page_faults;

005616  aa  6 00034 7641 00	lprp4	pr6|28
005617  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
005620  aa  7 00505 3361 00	lcq  	pr7|325		sst.volmap_seg_page_faults
005621  aa   000044 7770 00	llr  	36
005622  aa   000044 7330 00	lrs  	36
005623  aa  7 00505 0331 00	adl  	pr7|325		sst.volmap_seg_page_faults
005624  aa   000000 5330 00	negl 	0
005625  aa  6 00114 7561 00	stq  	pr6|76		j
						STATEMENT 1 ON LINE 372
	  call ioa_ ("Volmap_seg^10d^12.3f msec.", j, mtb_msec (j));

005626  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
005627  aa   772477 00 0034	desc9a	-2753,28		000325 = 126157154155
005630  aa  6 00270 00 0034	desc9a	pr6|184,28
005631  aa   001367 3520 04	epp2 	759,ic		007220 = 000004000000
005632  aa   001127 6700 04	tsp4 	599,ic		006761
005633  aa  6 00270 3521 00	epp2 	pr6|184
005634  aa  6 00244 2521 00	spri2	pr6|164
005635  aa  6 00114 3521 00	epp2 	pr6|76		j
005636  aa  6 00246 2521 00	spri2	pr6|166
005637  aa  6 00240 3521 00	epp2 	pr6|160
005640  aa  6 00250 2521 00	spri2	pr6|168
005641  aa   772147 3520 04	epp2 	-2969,ic		000010 = 524000000032
005642  aa  6 00252 2521 00	spri2	pr6|170
005643  aa   772215 3520 04	epp2 	-2931,ic		000060 = 404000000043
005644  aa  6 00254 2521 00	spri2	pr6|172
005645  aa   772214 3520 04	epp2 	-2932,ic		000061 = 414000000033
005646  aa  6 00256 2521 00	spri2	pr6|174
005647  aa  6 00242 6211 00	eax1 	pr6|162
005650  aa   014000 4310 07	fld  	6144,dl
005651  aa  6 00044 3701 20	epp4 	pr6|36,*
005652  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
005653  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 374
	  j = sstp2 -> sst.zero_pages - sstp1 -> sst.zero_pages;

005654  aa  6 00034 7641 00	lprp4	pr6|28
005655  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
005656  aa  7 00563 2361 00	ldq  	pr7|371		sst.zero_pages
005657  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
005660  aa  5 00563 1761 00	sbq  	pr5|371		sst.zero_pages
005661  aa  6 00114 7561 00	stq  	pr6|76		j
						STATEMENT 1 ON LINE 375
	  call ioa_ ("Zero pages^10d^12.3f msec.", j, mtb_msec (j));

005662  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
005663  aa   772434 00 0034	desc9a	-2788,28		000316 = 132145162157
005664  aa  6 00270 00 0034	desc9a	pr6|184,28
005665  aa   001333 3520 04	epp2 	731,ic		007220 = 000004000000
005666  aa   001073 6700 04	tsp4 	571,ic		006761
005667  aa  6 00270 3521 00	epp2 	pr6|184
005670  aa  6 00244 2521 00	spri2	pr6|164
005671  aa  6 00114 3521 00	epp2 	pr6|76		j
005672  aa  6 00246 2521 00	spri2	pr6|166
005673  aa  6 00240 3521 00	epp2 	pr6|160
005674  aa  6 00250 2521 00	spri2	pr6|168
005675  aa   772113 3520 04	epp2 	-2997,ic		000010 = 524000000032
005676  aa  6 00252 2521 00	spri2	pr6|170
005677  aa   772161 3520 04	epp2 	-2959,ic		000060 = 404000000043
005700  aa  6 00254 2521 00	spri2	pr6|172
005701  aa   772160 3520 04	epp2 	-2960,ic		000061 = 414000000033
005702  aa  6 00256 2521 00	spri2	pr6|174
005703  aa  6 00242 6211 00	eax1 	pr6|162
005704  aa   014000 4310 07	fld  	6144,dl
005705  aa  6 00044 3701 20	epp4 	pr6|36,*
005706  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
005707  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 377
	  seg_state_change_delay = sstp2 -> sst.delayed_seg_state_chg - sstp1 -> sst.delayed_seg_state_chg;

005710  aa  6 00034 7641 00	lprp4	pr6|28
005711  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
005712  aa  7 00572 3361 00	lcq  	pr7|378		sst.delayed_seg_state_chg
005713  aa   000044 7770 00	llr  	36
005714  aa   000044 7330 00	lrs  	36
005715  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
005716  aa  5 00572 0331 00	adl  	pr5|378		sst.delayed_seg_state_chg
005717  aa   000000 5330 00	negl 	0
005720  aa  6 00123 7561 00	stq  	pr6|83		seg_state_change_delay
						STATEMENT 1 ON LINE 378
	  seg_state_change_audit = sstp2 -> sst.audit_seg_state_chg - sstp1 -> sst.audit_seg_state_chg;

005721  aa  7 00573 3361 00	lcq  	pr7|379		sst.audit_seg_state_chg
005722  aa   000044 7770 00	llr  	36
005723  aa   000044 7330 00	lrs  	36
005724  aa  5 00573 0331 00	adl  	pr5|379		sst.audit_seg_state_chg
005725  aa   000000 5330 00	negl 	0
005726  aa  6 00122 7561 00	stq  	pr6|82		seg_state_change_audit
						STATEMENT 1 ON LINE 380
	  if seg_state_change_delay > 0 | seg_state_change_audit > 0
	  then
	     do;

005727  aa  6 00123 2361 00	ldq  	pr6|83		seg_state_change_delay
005730  aa   000003 6054 04	tpnz 	3,ic		005733
005731  aa  6 00122 2361 00	ldq  	pr6|82		seg_state_change_audit
005732  aa   000120 6044 04	tmoz 	80,ic		006052
						STATEMENT 1 ON LINE 383
	        call ioa_ ("Seg state chg.");

005733  aa   772141 2370 04	ldaq 	-2975,ic		000074 = 123145147040 163164141164
005734  aa  6 00270 7571 00	staq 	pr6|184
005735  aa   772141 2370 04	ldaq 	-2975,ic		000076 = 145040143150 147056000000
005736  aa  6 00272 7571 00	staq 	pr6|186
005737  aa  6 00270 3521 00	epp2 	pr6|184
005740  aa  6 00244 2521 00	spri2	pr6|164
005741  aa   772043 3520 04	epp2 	-3037,ic		000004 = 524000000016
005742  aa  6 00246 2521 00	spri2	pr6|166
005743  aa  6 00242 6211 00	eax1 	pr6|162
005744  aa   004000 4310 07	fld  	2048,dl
005745  aa  6 00044 3535 20	epp3 	pr6|36,*
005746  la  3 00016 3521 20	epp2 	pr3|14,*		ioa_
005747  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 384
	        if seg_state_change_delay > 0
	        then
		 do;

005750  aa  6 00123 2361 00	ldq  	pr6|83		seg_state_change_delay
005751  aa   000051 6044 04	tmoz 	41,ic		006022
						STATEMENT 1 ON LINE 387
		    k = sstp2 -> sst.seg_state_chg_delay - sstp1 -> sst.seg_state_chg_delay;

005752  aa  6 00034 7641 00	lprp4	pr6|28
005753  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
005754  aa  7 00574 2371 00	ldaq 	pr7|380		sst.seg_state_chg_delay
005755  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
005756  aa  5 00574 1771 00	sbaq 	pr5|380		sst.seg_state_chg_delay
005757  aa   216000 4110 03	lde  	72704,du
005760  aa   400000 4750 03	fad  	131072,du
005761  aa  6 00115 4551 00	fst  	pr6|77		k
						STATEMENT 1 ON LINE 388
		    i = 1e-6 * k / seg_state_change_delay;

005762  aa  6 00123 2361 00	ldq  	pr6|83		seg_state_change_delay
005763  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
005764  aa  6 00236 4571 00	dfst 	pr6|158
005765  aa   772026 4310 04	fld  	-3050,ic		000013 = 732414336750
005766  aa  6 00115 4611 00	fmp  	pr6|77		k
005767  aa  6 00236 5671 00	dfdv 	pr6|158
005770  aa  6 00113 4551 00	fst  	pr6|75		i
						STATEMENT 1 ON LINE 389
		    call ioa_ ("   delayed^10d^12.3f sec.  ^7.3f sec. avg. delay", seg_state_change_delay,
		         mtb_sec (seg_state_change_delay), i);

005771  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
005772  aa   773065 00 0060	desc9a	-2507,48		001056 = 040040040144
005773  aa  6 00270 00 0060	desc9a	pr6|184,48
005774  aa   001072 3520 04	epp2 	570,ic		007066 = 000004000000
005775  aa   000746 6700 04	tsp4 	486,ic		006743
005776  aa  6 00270 3521 00	epp2 	pr6|184
005777  aa  6 00244 2521 00	spri2	pr6|164
006000  aa  6 00123 3521 00	epp2 	pr6|83		seg_state_change_delay
006001  aa  6 00246 2521 00	spri2	pr6|166
006002  aa  6 00240 3521 00	epp2 	pr6|160
006003  aa  6 00250 2521 00	spri2	pr6|168
006004  aa  6 00113 3521 00	epp2 	pr6|75		i
006005  aa  6 00252 2521 00	spri2	pr6|170
006006  aa   771775 3520 04	epp2 	-3075,ic		000003 = 524000000060
006007  aa  6 00254 2521 00	spri2	pr6|172
006010  aa   772050 3520 04	epp2 	-3032,ic		000060 = 404000000043
006011  aa  6 00256 2521 00	spri2	pr6|174
006012  aa   772047 3520 04	epp2 	-3033,ic		000061 = 414000000033
006013  aa  6 00260 2521 00	spri2	pr6|176
006014  aa  6 00262 2521 00	spri2	pr6|178
006015  aa  6 00242 6211 00	eax1 	pr6|162
006016  aa   020000 4310 07	fld  	8192,dl
006017  aa  6 00044 3701 20	epp4 	pr6|36,*
006020  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
006021  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 391
		 end;

						STATEMENT 1 ON LINE 392
	        if seg_state_change_audit > 0
	        then call ioa_ ("   audited^10d^12.3f sec.", seg_state_change_audit, mtb_sec (seg_state_change_audit));

006022  aa  6 00122 2361 00	ldq  	pr6|82		seg_state_change_audit
006023  aa   000027 6044 04	tmoz 	23,ic		006052
006024  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
006025  aa   772263 00 0034	desc9a	-2893,28		000307 = 040040040141
006026  aa  6 00270 00 0034	desc9a	pr6|184,28
006027  aa   001031 3520 04	epp2 	537,ic		007060 = 000004000000
006030  aa   000713 6700 04	tsp4 	459,ic		006743
006031  aa  6 00270 3521 00	epp2 	pr6|184
006032  aa  6 00244 2521 00	spri2	pr6|164
006033  aa  6 00122 3521 00	epp2 	pr6|82		seg_state_change_audit
006034  aa  6 00246 2521 00	spri2	pr6|166
006035  aa  6 00240 3521 00	epp2 	pr6|160
006036  aa  6 00250 2521 00	spri2	pr6|168
006037  aa   771750 3520 04	epp2 	-3096,ic		000007 = 524000000031
006040  aa  6 00252 2521 00	spri2	pr6|170
006041  aa   772017 3520 04	epp2 	-3057,ic		000060 = 404000000043
006042  aa  6 00254 2521 00	spri2	pr6|172
006043  aa   772016 3520 04	epp2 	-3058,ic		000061 = 414000000033
006044  aa  6 00256 2521 00	spri2	pr6|174
006045  aa  6 00242 6211 00	eax1 	pr6|162
006046  aa   014000 4310 07	fld  	6144,dl
006047  aa  6 00044 3701 20	epp4 	pr6|36,*
006050  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
006051  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 394
	     end;

						STATEMENT 1 ON LINE 396
	  steps = sstp2 -> sst.steps - sstp1 -> sst.steps;

006052  aa  6 00034 7641 00	lprp4	pr6|28
006053  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
006054  aa  7 00114 2361 00	ldq  	pr7|76		sst.steps
006055  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
006056  aa  5 00114 1761 00	sbq  	pr5|76		sst.steps
006057  aa  6 00125 7561 00	stq  	pr6|85		steps
						STATEMENT 1 ON LINE 397
	  j = steps / sstp2 -> sst.nused;

006060  aa  7 00024 3521 00	epp2 	pr7|20		sst.nused
006061  aa  0 01262 7001 00	tsx0 	pr0|690		divide_fx1
006062  aa     000000000044
006063  aa   000044 7220 07	lxl2 	36,dl
006064  aa  0 01115 7001 00	tsx0 	pr0|589		trunc_fx2
006065  aa  6 00114 7561 00	stq  	pr6|76		j
						STATEMENT 1 ON LINE 398
	  call ioa_ ("Laps      ^10d^12.3f sec.", j, mtb_sec (j));

006066  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
006067  aa   772212 00 0034	desc9a	-2934,28		000300 = 114141160163
006070  aa  6 00270 00 0034	desc9a	pr6|184,28
006071  aa   001127 3520 04	epp2 	599,ic		007220 = 000004000000
006072  aa   000651 6700 04	tsp4 	425,ic		006743
006073  aa  6 00270 3521 00	epp2 	pr6|184
006074  aa  6 00244 2521 00	spri2	pr6|164
006075  aa  6 00114 3521 00	epp2 	pr6|76		j
006076  aa  6 00246 2521 00	spri2	pr6|166
006077  aa  6 00240 3521 00	epp2 	pr6|160
006100  aa  6 00250 2521 00	spri2	pr6|168
006101  aa   771706 3520 04	epp2 	-3130,ic		000007 = 524000000031
006102  aa  6 00252 2521 00	spri2	pr6|170
006103  aa   771755 3520 04	epp2 	-3091,ic		000060 = 404000000043
006104  aa  6 00254 2521 00	spri2	pr6|172
006105  aa   771754 3520 04	epp2 	-3092,ic		000061 = 414000000033
006106  aa  6 00256 2521 00	spri2	pr6|174
006107  aa  6 00242 6211 00	eax1 	pr6|162
006110  aa   014000 4310 07	fld  	6144,dl
006111  aa  6 00044 3701 20	epp4 	pr6|36,*
006112  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
006113  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 400
	  if ^briefsw
	  then
	     do;

006114  aa  6 00175 2351 00	lda  	pr6|125		briefsw
006115  aa   000467 6010 04	tnz  	311,ic		006604
						STATEMENT 1 ON LINE 403
	        call ioa_ ("Steps	^10d^12.3f msec.", steps, mtb_msec (steps));

006116  aa   772074 2370 04	ldaq 	-3012,ic		000212 = 123164145160 163011136061
006117  aa  6 00270 7571 00	staq 	pr6|184
006120  aa   772074 2370 04	ldaq 	-3012,ic		000214 = 060144136061 062056063146
006121  aa  6 00272 7571 00	staq 	pr6|186
006122  aa   772074 2370 04	ldaq 	-3012,ic		000216 = 040155163145 143056000000
006123  aa  6 00274 7571 00	staq 	pr6|188
006124  aa   000726 3520 04	epp2 	470,ic		007052 = 000004000000
006125  aa   000634 6700 04	tsp4 	412,ic		006761
006126  aa  6 00270 3521 00	epp2 	pr6|184
006127  aa  6 00244 2521 00	spri2	pr6|164
006130  aa  6 00125 3521 00	epp2 	pr6|85		steps
006131  aa  6 00246 2521 00	spri2	pr6|166
006132  aa  6 00240 3521 00	epp2 	pr6|160
006133  aa  6 00250 2521 00	spri2	pr6|168
006134  aa   771661 3520 04	epp2 	-3151,ic		000015 = 524000000026
006135  aa  6 00252 2521 00	spri2	pr6|170
006136  aa   771722 3520 04	epp2 	-3118,ic		000060 = 404000000043
006137  aa  6 00254 2521 00	spri2	pr6|172
006140  aa   771721 3520 04	epp2 	-3119,ic		000061 = 414000000033
006141  aa  6 00256 2521 00	spri2	pr6|174
006142  aa  6 00242 6211 00	eax1 	pr6|162
006143  aa   014000 4310 07	fld  	6144,dl
006144  aa  6 00044 3701 20	epp4 	pr6|36,*
006145  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
006146  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 404
	        ps_wired = sstp2 -> sst.skipw - sstp1 -> sst.skipw;

006147  aa  6 00034 7641 00	lprp4	pr6|28
006150  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
006151  aa  7 00122 2361 00	ldq  	pr7|82		sst.skipw
006152  ia  4 00002 3715 20	epp5 	pr4|2,*		sstp1
006153  aa  5 00122 1761 00	sbq  	pr5|82		sst.skipw
006154  aa  6 00200 7561 00	stq  	pr6|128		ps_wired
						STATEMENT 1 ON LINE 405
	        ps_used = sstp2 -> sst.skipu - sstp1 -> sst.skipu;

006155  aa  7 00123 2361 00	ldq  	pr7|83		sst.skipu
006156  aa  5 00123 1761 00	sbq  	pr5|83		sst.skipu
006157  aa  6 00201 7561 00	stq  	pr6|129		ps_used
						STATEMENT 1 ON LINE 406
	        ps_mod = sstp2 -> sst.skipm - sstp1 -> sst.skipm;

006160  aa  7 00124 2361 00	ldq  	pr7|84		sst.skipm
006161  aa  5 00124 1761 00	sbq  	pr5|84		sst.skipm
006162  aa  6 00202 7561 00	stq  	pr6|130		ps_mod
						STATEMENT 1 ON LINE 407
	        ps_os = sstp2 -> sst.skipos - sstp1 -> sst.skipos;

006163  aa  7 00125 2361 00	ldq  	pr7|85		sst.skipos
006164  aa  5 00125 1761 00	sbq  	pr5|85		sst.skipos
006165  aa  6 00203 7561 00	stq  	pr6|131		ps_os
						STATEMENT 1 ON LINE 408
	        ps_fc_pin = sstp2 -> sst.fc_skips_pinned - sstp1 -> sst.fc_skips_pinned;

006166  aa  7 00066 3361 00	lcq  	pr7|54		sst.fc_skips_pinned
006167  aa   000044 7770 00	llr  	36
006170  aa   000044 7330 00	lrs  	36
006171  aa  5 00066 0331 00	adl  	pr5|54		sst.fc_skips_pinned
006172  aa   000000 5330 00	negl 	0
006173  aa  6 00204 7561 00	stq  	pr6|132		ps_fc_pin
						STATEMENT 1 ON LINE 409
	        ps_cl_pin = sstp2 -> sst.cl_skips_pinned - sstp1 -> sst.cl_skips_pinned;

006174  aa  7 00067 3361 00	lcq  	pr7|55		sst.cl_skips_pinned
006175  aa   000044 7770 00	llr  	36
006176  aa   000044 7330 00	lrs  	36
006177  aa  5 00067 0331 00	adl  	pr5|55		sst.cl_skips_pinned
006200  aa   000000 5330 00	negl 	0
006201  aa  6 00205 7561 00	stq  	pr6|133		ps_cl_pin
						STATEMENT 1 ON LINE 410
	        ps_skips = ps_wired + ps_used + ps_mod + ps_os + ps_fc_pin + ps_cl_pin;

006202  aa  6 00200 2351 00	lda  	pr6|128		ps_wired
006203  aa   000044 7330 00	lrs  	36
006204  aa  6 00201 0331 00	adl  	pr6|129		ps_used
006205  aa  6 00202 0331 00	adl  	pr6|130		ps_mod
006206  aa  6 00203 0331 00	adl  	pr6|131		ps_os
006207  aa  6 00204 0331 00	adl  	pr6|132		ps_fc_pin
006210  aa  6 00205 0331 00	adl  	pr6|133		ps_cl_pin
006211  aa  6 00206 7561 00	stq  	pr6|134		ps_skips
						STATEMENT 1 ON LINE 412
	        call ioa_ ("Skip      ^10d^12.3f msec. ^7.3f% of Steps", ps_skips, mtb_msec (ps_skips),
		   (ps_skips * 1e2) / max (1, steps));

006212  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
006213  aa   772542 00 0054	desc9a	-2718,44		000754 = 123153151160
006214  aa  6 00270 00 0054	desc9a	pr6|184,44
006215  aa   000627 3520 04	epp2 	407,ic		007044 = 000004000000
006216  aa   000543 6700 04	tsp4 	355,ic		006761
006217  aa   000001 2360 07	ldq  	1,dl
006220  aa  6 00125 1161 00	cmpq 	pr6|85		steps
006221  aa   000002 6050 04	tpl  	2,ic		006223
006222  aa  6 00125 2361 00	ldq  	pr6|85		steps
006223  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
006224  aa  6 00236 4571 00	dfst 	pr6|158
006225  aa  6 00206 2361 00	ldq  	pr6|134		ps_skips
006226  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
006227  aa   016620 4610 03	fmp  	7568,du
006230  aa  6 00236 5671 00	dfdv 	pr6|158
006231  aa  6 00236 4571 00	dfst 	pr6|158
006232  aa  6 00270 3521 00	epp2 	pr6|184
006233  aa  6 00244 2521 00	spri2	pr6|164
006234  aa  6 00206 3521 00	epp2 	pr6|134		ps_skips
006235  aa  6 00246 2521 00	spri2	pr6|166
006236  aa  6 00240 3521 00	epp2 	pr6|160
006237  aa  6 00250 2521 00	spri2	pr6|168
006240  aa  6 00236 3521 00	epp2 	pr6|158
006241  aa  6 00252 2521 00	spri2	pr6|170
006242  aa   771540 3520 04	epp2 	-3232,ic		000002 = 524000000052
006243  aa  6 00254 2521 00	spri2	pr6|172
006244  aa   771614 3520 04	epp2 	-3188,ic		000060 = 404000000043
006245  aa  6 00256 2521 00	spri2	pr6|174
006246  aa   771613 3520 04	epp2 	-3189,ic		000061 = 414000000033
006247  aa  6 00260 2521 00	spri2	pr6|176
006250  aa   771567 3520 04	epp2 	-3209,ic		000037 = 420000000043
006251  aa  6 00262 2521 00	spri2	pr6|178
006252  aa  6 00242 6211 00	eax1 	pr6|162
006253  aa   020000 4310 07	fld  	8192,dl
006254  aa  6 00044 3701 20	epp4 	pr6|36,*
006255  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
006256  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 415
	        f_ps_skips = max (ps_skips, 1) / 1e2;

006257  aa   016620 4310 03	fld  	7568,du
006260  aa  6 00236 4571 00	dfst 	pr6|158
006261  aa  6 00206 2361 00	ldq  	pr6|134		ps_skips
006262  aa   000001 1160 07	cmpq 	1,dl
006263  aa   000002 6050 04	tpl  	2,ic		006265
006264  aa   000001 2360 07	ldq  	1,dl
006265  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
006266  aa  6 00236 5671 00	dfdv 	pr6|158
006267  aa  6 00211 4551 00	fst  	pr6|137		f_ps_skips
						STATEMENT 1 ON LINE 416
	        if ps_wired ^= 0
	        then call ioa_ ("   wired  ^10d^12.3f msec. ^7.3f% of Skip", ps_wired, mtb_msec (ps_wired),
		        ps_wired / f_ps_skips);

006270  aa  6 00200 2361 00	ldq  	pr6|128		ps_wired
006271  aa   000041 6000 04	tze  	33,ic		006332
006272  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
006273  aa   772447 00 0054	desc9a	-2777,44		000741 = 040040040167
006274  aa  6 00270 00 0054	desc9a	pr6|184,44
006275  aa   000541 3520 04	epp2 	353,ic		007036 = 000004000000
006276  aa   000463 6700 04	tsp4 	307,ic		006761
006277  aa  6 00211 4311 00	fld  	pr6|137		f_ps_skips
006300  aa  6 00236 4571 00	dfst 	pr6|158		f_ps_skips
006301  aa  6 00200 2361 00	ldq  	pr6|128		ps_wired
006302  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
006303  aa  6 00236 5671 00	dfdv 	pr6|158		f_ps_skips
006304  aa  6 00236 4571 00	dfst 	pr6|158
006305  aa  6 00270 3521 00	epp2 	pr6|184
006306  aa  6 00244 2521 00	spri2	pr6|164
006307  aa  6 00200 3521 00	epp2 	pr6|128		ps_wired
006310  aa  6 00246 2521 00	spri2	pr6|166
006311  aa  6 00240 3521 00	epp2 	pr6|160
006312  aa  6 00250 2521 00	spri2	pr6|168
006313  aa  6 00236 3521 00	epp2 	pr6|158
006314  aa  6 00252 2521 00	spri2	pr6|170
006315  aa   771464 3520 04	epp2 	-3276,ic		000001 = 524000000051
006316  aa  6 00254 2521 00	spri2	pr6|172
006317  aa   771541 3520 04	epp2 	-3231,ic		000060 = 404000000043
006320  aa  6 00256 2521 00	spri2	pr6|174
006321  aa   771540 3520 04	epp2 	-3232,ic		000061 = 414000000033
006322  aa  6 00260 2521 00	spri2	pr6|176
006323  aa   771514 3520 04	epp2 	-3252,ic		000037 = 420000000043
006324  aa  6 00262 2521 00	spri2	pr6|178
006325  aa  6 00242 6211 00	eax1 	pr6|162
006326  aa   020000 4310 07	fld  	8192,dl
006327  aa  6 00044 3701 20	epp4 	pr6|36,*
006330  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
006331  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 420
	        if ps_used ^= 0
	        then call ioa_ ("   used   ^10d^12.3f msec. ^7.3f% of Skip", ps_used, mtb_msec (ps_used),
		        ps_used / f_ps_skips);

006332  aa  6 00201 2361 00	ldq  	pr6|129		ps_used
006333  aa   000041 6000 04	tze  	33,ic		006374
006334  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
006335  aa   772372 00 0054	desc9a	-2822,44		000726 = 040040040165
006336  aa  6 00270 00 0054	desc9a	pr6|184,44
006337  aa   000471 3520 04	epp2 	313,ic		007030 = 000004000000
006340  aa   000421 6700 04	tsp4 	273,ic		006761
006341  aa  6 00211 4311 00	fld  	pr6|137		f_ps_skips
006342  aa  6 00236 4571 00	dfst 	pr6|158		f_ps_skips
006343  aa  6 00201 2361 00	ldq  	pr6|129		ps_used
006344  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
006345  aa  6 00236 5671 00	dfdv 	pr6|158		f_ps_skips
006346  aa  6 00236 4571 00	dfst 	pr6|158
006347  aa  6 00270 3521 00	epp2 	pr6|184
006350  aa  6 00244 2521 00	spri2	pr6|164
006351  aa  6 00201 3521 00	epp2 	pr6|129		ps_used
006352  aa  6 00246 2521 00	spri2	pr6|166
006353  aa  6 00240 3521 00	epp2 	pr6|160
006354  aa  6 00250 2521 00	spri2	pr6|168
006355  aa  6 00236 3521 00	epp2 	pr6|158
006356  aa  6 00252 2521 00	spri2	pr6|170
006357  aa   771422 3520 04	epp2 	-3310,ic		000001 = 524000000051
006360  aa  6 00254 2521 00	spri2	pr6|172
006361  aa   771477 3520 04	epp2 	-3265,ic		000060 = 404000000043
006362  aa  6 00256 2521 00	spri2	pr6|174
006363  aa   771476 3520 04	epp2 	-3266,ic		000061 = 414000000033
006364  aa  6 00260 2521 00	spri2	pr6|176
006365  aa   771452 3520 04	epp2 	-3286,ic		000037 = 420000000043
006366  aa  6 00262 2521 00	spri2	pr6|178
006367  aa  6 00242 6211 00	eax1 	pr6|162
006370  aa   020000 4310 07	fld  	8192,dl
006371  aa  6 00044 3701 20	epp4 	pr6|36,*
006372  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
006373  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 424
	        if ps_mod ^= 0
	        then call ioa_ ("   mod    ^10d^12.3f msec. ^7.3f% of Skip", ps_mod, mtb_msec (ps_mod),
		        ps_mod / f_ps_skips);

006374  aa  6 00202 2361 00	ldq  	pr6|130		ps_mod
006375  aa   000041 6000 04	tze  	33,ic		006436
006376  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
006377  aa   772315 00 0054	desc9a	-2867,44		000713 = 040040040155
006400  aa  6 00270 00 0054	desc9a	pr6|184,44
006401  aa   000421 3520 04	epp2 	273,ic		007022 = 000004000000
006402  aa   000357 6700 04	tsp4 	239,ic		006761
006403  aa  6 00211 4311 00	fld  	pr6|137		f_ps_skips
006404  aa  6 00236 4571 00	dfst 	pr6|158		f_ps_skips
006405  aa  6 00202 2361 00	ldq  	pr6|130		ps_mod
006406  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
006407  aa  6 00236 5671 00	dfdv 	pr6|158		f_ps_skips
006410  aa  6 00236 4571 00	dfst 	pr6|158
006411  aa  6 00270 3521 00	epp2 	pr6|184
006412  aa  6 00244 2521 00	spri2	pr6|164
006413  aa  6 00202 3521 00	epp2 	pr6|130		ps_mod
006414  aa  6 00246 2521 00	spri2	pr6|166
006415  aa  6 00240 3521 00	epp2 	pr6|160
006416  aa  6 00250 2521 00	spri2	pr6|168
006417  aa  6 00236 3521 00	epp2 	pr6|158
006420  aa  6 00252 2521 00	spri2	pr6|170
006421  aa   771360 3520 04	epp2 	-3344,ic		000001 = 524000000051
006422  aa  6 00254 2521 00	spri2	pr6|172
006423  aa   771435 3520 04	epp2 	-3299,ic		000060 = 404000000043
006424  aa  6 00256 2521 00	spri2	pr6|174
006425  aa   771434 3520 04	epp2 	-3300,ic		000061 = 414000000033
006426  aa  6 00260 2521 00	spri2	pr6|176
006427  aa   771410 3520 04	epp2 	-3320,ic		000037 = 420000000043
006430  aa  6 00262 2521 00	spri2	pr6|178
006431  aa  6 00242 6211 00	eax1 	pr6|162
006432  aa   020000 4310 07	fld  	8192,dl
006433  aa  6 00044 3701 20	epp4 	pr6|36,*
006434  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
006435  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 428
	        if ps_os ^= 0
	        then call ioa_ ("   os     ^10d^12.3f msec. ^7.3f% of Skip", ps_os, mtb_msec (ps_os),
		        ps_os / f_ps_skips);

006436  aa  6 00203 2361 00	ldq  	pr6|131		ps_os
006437  aa   000041 6000 04	tze  	33,ic		006500
006440  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
006441  aa   772240 00 0054	desc9a	-2912,44		000700 = 040040040157
006442  aa  6 00270 00 0054	desc9a	pr6|184,44
006443  aa   000351 3520 04	epp2 	233,ic		007014 = 000004000000
006444  aa   000315 6700 04	tsp4 	205,ic		006761
006445  aa  6 00211 4311 00	fld  	pr6|137		f_ps_skips
006446  aa  6 00236 4571 00	dfst 	pr6|158		f_ps_skips
006447  aa  6 00203 2361 00	ldq  	pr6|131		ps_os
006450  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
006451  aa  6 00236 5671 00	dfdv 	pr6|158		f_ps_skips
006452  aa  6 00236 4571 00	dfst 	pr6|158
006453  aa  6 00270 3521 00	epp2 	pr6|184
006454  aa  6 00244 2521 00	spri2	pr6|164
006455  aa  6 00203 3521 00	epp2 	pr6|131		ps_os
006456  aa  6 00246 2521 00	spri2	pr6|166
006457  aa  6 00240 3521 00	epp2 	pr6|160
006460  aa  6 00250 2521 00	spri2	pr6|168
006461  aa  6 00236 3521 00	epp2 	pr6|158
006462  aa  6 00252 2521 00	spri2	pr6|170
006463  aa   771316 3520 04	epp2 	-3378,ic		000001 = 524000000051
006464  aa  6 00254 2521 00	spri2	pr6|172
006465  aa   771373 3520 04	epp2 	-3333,ic		000060 = 404000000043
006466  aa  6 00256 2521 00	spri2	pr6|174
006467  aa   771372 3520 04	epp2 	-3334,ic		000061 = 414000000033
006470  aa  6 00260 2521 00	spri2	pr6|176
006471  aa   771346 3520 04	epp2 	-3354,ic		000037 = 420000000043
006472  aa  6 00262 2521 00	spri2	pr6|178
006473  aa  6 00242 6211 00	eax1 	pr6|162
006474  aa   020000 4310 07	fld  	8192,dl
006475  aa  6 00044 3701 20	epp4 	pr6|36,*
006476  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
006477  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 432
	        if ps_fc_pin ^= 0
	        then call ioa_ ("   fc pin ^10d^12.3f msec. ^7.3f% of Skip", ps_fc_pin, mtb_msec (ps_fc_pin),
		        ps_fc_pin / f_ps_skips);

006500  aa  6 00204 2361 00	ldq  	pr6|132		ps_fc_pin
006501  aa   000041 6000 04	tze  	33,ic		006542
006502  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
006503  aa   772163 00 0054	desc9a	-2957,44		000665 = 040040040146
006504  aa  6 00270 00 0054	desc9a	pr6|184,44
006505  aa   000301 3520 04	epp2 	193,ic		007006 = 000004000000
006506  aa   000253 6700 04	tsp4 	171,ic		006761
006507  aa  6 00211 4311 00	fld  	pr6|137		f_ps_skips
006510  aa  6 00236 4571 00	dfst 	pr6|158		f_ps_skips
006511  aa  6 00204 2361 00	ldq  	pr6|132		ps_fc_pin
006512  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
006513  aa  6 00236 5671 00	dfdv 	pr6|158		f_ps_skips
006514  aa  6 00236 4571 00	dfst 	pr6|158
006515  aa  6 00270 3521 00	epp2 	pr6|184
006516  aa  6 00244 2521 00	spri2	pr6|164
006517  aa  6 00204 3521 00	epp2 	pr6|132		ps_fc_pin
006520  aa  6 00246 2521 00	spri2	pr6|166
006521  aa  6 00240 3521 00	epp2 	pr6|160
006522  aa  6 00250 2521 00	spri2	pr6|168
006523  aa  6 00236 3521 00	epp2 	pr6|158
006524  aa  6 00252 2521 00	spri2	pr6|170
006525  aa   771254 3520 04	epp2 	-3412,ic		000001 = 524000000051
006526  aa  6 00254 2521 00	spri2	pr6|172
006527  aa   771331 3520 04	epp2 	-3367,ic		000060 = 404000000043
006530  aa  6 00256 2521 00	spri2	pr6|174
006531  aa   771330 3520 04	epp2 	-3368,ic		000061 = 414000000033
006532  aa  6 00260 2521 00	spri2	pr6|176
006533  aa   771304 3520 04	epp2 	-3388,ic		000037 = 420000000043
006534  aa  6 00262 2521 00	spri2	pr6|178
006535  aa  6 00242 6211 00	eax1 	pr6|162
006536  aa   020000 4310 07	fld  	8192,dl
006537  aa  6 00044 3701 20	epp4 	pr6|36,*
006540  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
006541  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 436
	        if ps_cl_pin ^= 0
	        then call ioa_ ("   cl pin ^10d^12.3f msec. ^7.3f% of Skip", ps_cl_pin, mtb_msec (ps_cl_pin),
		        ps_cl_pin / f_ps_skips);

006542  aa  6 00205 2361 00	ldq  	pr6|133		ps_cl_pin
006543  aa   000041 6000 04	tze  	33,ic		006604
006544  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
006545  aa   772106 00 0054	desc9a	-3002,44		000652 = 040040040143
006546  aa  6 00270 00 0054	desc9a	pr6|184,44
006547  aa   000231 3520 04	epp2 	153,ic		007000 = 000004000000
006550  aa   000211 6700 04	tsp4 	137,ic		006761
006551  aa  6 00211 4311 00	fld  	pr6|137		f_ps_skips
006552  aa  6 00236 4571 00	dfst 	pr6|158		f_ps_skips
006553  aa  6 00205 2361 00	ldq  	pr6|133		ps_cl_pin
006554  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
006555  aa  6 00236 5671 00	dfdv 	pr6|158		f_ps_skips
006556  aa  6 00236 4571 00	dfst 	pr6|158
006557  aa  6 00270 3521 00	epp2 	pr6|184
006560  aa  6 00244 2521 00	spri2	pr6|164
006561  aa  6 00205 3521 00	epp2 	pr6|133		ps_cl_pin
006562  aa  6 00246 2521 00	spri2	pr6|166
006563  aa  6 00240 3521 00	epp2 	pr6|160
006564  aa  6 00250 2521 00	spri2	pr6|168
006565  aa  6 00236 3521 00	epp2 	pr6|158
006566  aa  6 00252 2521 00	spri2	pr6|170
006567  aa   771212 3520 04	epp2 	-3446,ic		000001 = 524000000051
006570  aa  6 00254 2521 00	spri2	pr6|172
006571  aa   771267 3520 04	epp2 	-3401,ic		000060 = 404000000043
006572  aa  6 00256 2521 00	spri2	pr6|174
006573  aa   771266 3520 04	epp2 	-3402,ic		000061 = 414000000033
006574  aa  6 00260 2521 00	spri2	pr6|176
006575  aa   771242 3520 04	epp2 	-3422,ic		000037 = 420000000043
006576  aa  6 00262 2521 00	spri2	pr6|178
006577  aa  6 00242 6211 00	eax1 	pr6|162
006600  aa   020000 4310 07	fld  	8192,dl
006601  aa  6 00044 3701 20	epp4 	pr6|36,*
006602  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
006603  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 439
	     end;

						STATEMENT 1 ON LINE 441
	  call ioa_ ("^/^d pages, ^d wired.", sstp2 -> sst.nused, sstp2 -> sst.wired);

006604  aa   771400 2370 04	ldaq 	-3328,ic		000204 = 136057136144 040160141147
006605  aa  6 00270 7571 00	staq 	pr6|184
006606  aa   771400 2370 04	ldaq 	-3328,ic		000206 = 145163054040 136144040167
006607  aa  6 00272 7571 00	staq 	pr6|186
006610  aa   771400 2370 04	ldaq 	-3328,ic		000210 = 151162145144 056000000000
006611  aa  6 00274 7571 00	staq 	pr6|188
006612  aa  6 00270 3521 00	epp2 	pr6|184
006613  aa  6 00244 2521 00	spri2	pr6|164
006614  aa  6 00034 7641 00	lprp4	pr6|28
006615  ia  4 00004 3735 20	epp7 	pr4|4,*		sstp2
006616  aa  7 00024 3521 00	epp2 	pr7|20		sst.nused
006617  aa  6 00246 2521 00	spri2	pr6|166
006620  aa  7 00120 3521 00	epp2 	pr7|80		sst.wired
006621  aa  6 00250 2521 00	spri2	pr6|168
006622  aa   771202 3520 04	epp2 	-3454,ic		000024 = 524000000025
006623  aa  6 00252 2521 00	spri2	pr6|170
006624  aa   771236 3520 04	epp2 	-3426,ic		000062 = 404000000021
006625  aa  6 00254 2521 00	spri2	pr6|172
006626  aa  6 00256 2521 00	spri2	pr6|174
006627  aa  6 00242 6211 00	eax1 	pr6|162
006630  aa   014000 4310 07	fld  	6144,dl
006631  aa  6 00044 3715 20	epp5 	pr6|36,*
006632  la  5 00016 3521 20	epp2 	pr5|14,*		ioa_
006633  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 442
	  call ioa_ ("Average steps ^12.3f", steps / max (faults, 1e0));

006634  aa   771254 2370 04	ldaq 	-3412,ic		000110 = 101166145162 141147145040
006635  aa  6 00270 7571 00	staq 	pr6|184
006636  aa   771254 2370 04	ldaq 	-3412,ic		000112 = 163164145160 163040136061
006637  aa  6 00272 7571 00	staq 	pr6|186
006640  aa   771254 2350 04	lda  	-3412,ic		000114 = 062056063146
006641  aa  6 00274 7551 00	sta  	pr6|188
006642  aa  6 00107 4311 00	fld  	pr6|71		faults
006643  aa   002400 5150 03	fcmp 	1280,du
006644  aa   000002 6050 04	tpl  	2,ic		006646
006645  aa   002400 4310 03	fld  	1280,du
006646  aa  6 00236 4571 00	dfst 	pr6|158
006647  aa  6 00125 2361 00	ldq  	pr6|85		steps
006650  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
006651  aa  6 00236 5671 00	dfdv 	pr6|158
006652  aa  6 00236 4571 00	dfst 	pr6|158
006653  aa  6 00270 3521 00	epp2 	pr6|184
006654  aa  6 00244 2521 00	spri2	pr6|164
006655  aa  6 00236 3521 00	epp2 	pr6|158
006656  aa  6 00246 2521 00	spri2	pr6|166
006657  aa   771163 3520 04	epp2 	-3469,ic		000042 = 524000000024
006660  aa  6 00250 2521 00	spri2	pr6|168
006661  aa   771156 3520 04	epp2 	-3474,ic		000037 = 420000000043
006662  aa  6 00252 2521 00	spri2	pr6|170
006663  aa  6 00242 6211 00	eax1 	pr6|162
006664  aa   010000 4310 07	fld  	4096,dl
006665  aa  6 00044 3701 20	epp4 	pr6|36,*
006666  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
006667  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 443
         end;

						STATEMENT 1 ON LINE 445
      if rsw
      then call metering_util_$reset (unique, code);

006670  aa  6 00177 2351 00	lda  	pr6|127		rsw
006671  aa   000013 6000 04	tze  	11,ic		006704
006672  aa  6 00034 7641 00	lprp4	pr6|28
006673  ia  4 00000 3521 00	epp2 	pr4|0		unique
006674  aa  6 00272 2521 00	spri2	pr6|186
006675  aa  6 00106 3521 00	epp2 	pr6|70		code
006676  aa  6 00274 2521 00	spri2	pr6|188
006677  aa  6 00270 6211 00	eax1 	pr6|184
006700  aa   010000 4310 07	fld  	4096,dl
006701  aa  6 00044 3735 20	epp7 	pr6|36,*
006702  la  7 00024 3521 20	epp2 	pr7|20,*		metering_util_$reset
006703  aa  0 00623 7001 00	tsx0 	pr0|403		call_ext_out
						STATEMENT 1 ON LINE 447
      if code ^= 0
      then go to error;

006704  aa  6 00106 2361 00	ldq  	pr6|70		code
006705  aa   000015 6010 04	tnz  	13,ic		006722
						STATEMENT 1 ON LINE 450
      call ioa_ (" ");

006706  aa   040000 2350 03	lda  	16384,du
006707  aa  6 00240 7551 00	sta  	pr6|160
006710  aa  6 00240 3521 00	epp2 	pr6|160
006711  aa  6 00272 2521 00	spri2	pr6|186
006712  aa   771104 3520 04	epp2 	-3516,ic		000016 = 524000000001
006713  aa  6 00274 2521 00	spri2	pr6|188
006714  aa  6 00270 6211 00	eax1 	pr6|184
006715  aa   004000 4310 07	fld  	2048,dl
006716  aa  6 00044 3701 20	epp4 	pr6|36,*
006717  la  4 00016 3521 20	epp2 	pr4|14,*		ioa_
006720  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 451
      return;

006721  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 453
error:
      call com_err_ (code, "file_system_meters");

006722  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
006723  aa   771255 00 0024	desc9a	-3411,20		000177 = 146151154145
006724  aa  6 00270 00 0024	desc9a	pr6|184,20
006725  aa  6 00106 3521 00	epp2 	pr6|70		code
006726  aa  6 00244 2521 00	spri2	pr6|164
006727  aa  6 00270 3521 00	epp2 	pr6|184
006730  aa  6 00246 2521 00	spri2	pr6|166
006731  aa   771127 3520 04	epp2 	-3497,ic		000060 = 404000000043
006732  aa  6 00250 2521 00	spri2	pr6|168
006733  aa   771114 3520 04	epp2 	-3508,ic		000047 = 524000000022
006734  aa  6 00252 2521 00	spri2	pr6|170
006735  aa  6 00242 6211 00	eax1 	pr6|162
006736  aa   010000 4310 07	fld  	4096,dl
006737  aa  6 00044 3701 20	epp4 	pr6|36,*
006740  la  4 00010 3521 20	epp2 	pr4|8,*		com_err_
006741  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 455
      return;

006742  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 483
   end;

BEGIN PROCEDURE mtb_sec
ENTRY TO mtb_sec                                            STATEMENT 1 ON LINE 458
mtb_sec:
   proc (x) returns (float bin);

006743  aa  6 00220 6501 00	spri4	pr6|144
006744  aa  6 00222 2521 00	spri2	pr6|146
						STATEMENT 1 ON LINE 463
      if x = 0
      then return (0e0);

006745  aa  2 00002 2361 20	ldq  	pr2|2,*		x
006746  aa   000004 6010 04	tnz  	4,ic		006752
006747  aa   400000 4310 03	fld  	131072,du
006750  aa  2 00004 4551 20	fst  	pr2|4,*
006751  aa  6 00220 6101 00	rtcd 	pr6|144
						STATEMENT 1 ON LINE 465
      else return (meter_time / (x * 1e6));

006752  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
006753  aa   771025 4610 04	fmp  	-3563,ic		000000 = 050750220000
006754  aa  6 00342 4571 00	dfst 	pr6|226
006755  aa  6 00116 4311 00	fld  	pr6|78		meter_time
006756  aa  6 00342 5671 00	dfdv 	pr6|226
006757  aa  2 00004 4551 20	fst  	pr2|4,*
006760  aa  6 00220 6101 00	rtcd 	pr6|144
						STATEMENT 1 ON LINE 467
   end;

  END PROCEDURE mtb_sec
BEGIN PROCEDURE mtb_msec
ENTRY TO mtb_msec                                           STATEMENT 1 ON LINE 470
mtb_msec:
   proc (x) returns (float bin);

006761  aa  6 00226 6501 00	spri4	pr6|150
006762  aa  6 00230 2521 00	spri2	pr6|152
						STATEMENT 1 ON LINE 475
      if x = 0
      then return (0e0);

006763  aa  2 00002 2361 20	ldq  	pr2|2,*		x
006764  aa   000004 6010 04	tnz  	4,ic		006770
006765  aa   400000 4310 03	fld  	131072,du
006766  aa  2 00004 4551 20	fst  	pr2|4,*
006767  aa  6 00226 6101 00	rtcd 	pr6|150
						STATEMENT 1 ON LINE 477
      else return (meter_time / (x * 1e3));

006770  aa  0 00465 7001 00	tsx0 	pr0|309		fx1_to_fl2
006771  aa   024764 4610 03	fmp  	10740,du
006772  aa  6 00344 4571 00	dfst 	pr6|228
006773  aa  6 00116 4311 00	fld  	pr6|78		meter_time
006774  aa  6 00344 5671 00	dfdv 	pr6|228
006775  aa  2 00004 4551 20	fst  	pr2|4,*
006776  aa  6 00226 6101 00	rtcd 	pr6|150
						STATEMENT 1 ON LINE 479
   end;

  END PROCEDURE mtb_msec
  END PROCEDURE fsm


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
