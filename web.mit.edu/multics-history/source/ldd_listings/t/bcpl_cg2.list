Compilation listing of file >2.1spec>online>mib083074>bcpl_cg2.bcpl.
Compilation performed for Martinson.SysMaint.a at 01/24/75  0650.1 mst Fri.
Compiled by BCPL version 3.4, August 1973.  Compiler updated at 09/25/73  0959.1 mst Tue.
Options applied:  source  xref  alist  optimize  6180.

     1	//  Routines to manage labels, literals, and CG temporaries.
     2	//  Last modified on 06/14/74 at 01:14:45 by R F Mabee.
     3	//  Revised for 6180 and installed with Version 3.4 of the compiler, R F Mabee.
     4	//  First installed with Version 2.7 by R F Mabee.
     5	
     6	//  Copyright (c) 1974 by Massachusetts Institute of Technology and Honeywell Information Systems, Inc.
     7	
     8	//  General permission is granted to copy and use this program, but not to sell it, provided that the above
     9	//  copyright statement is given.  Contact Information Processing Services, MIT, for further information.
    10	//  Please contact R F Mabee at MIT for information on this program and versions for other machines.
    11	
    12	get "bcpl_cg_head"
	     1	//  Declarations for the code generator.
	     2	//  Last modified on 08/15/73 at 00:31:50 by R F Mabee.
	     3	//  Code generator substantially modified during 6180 bootstrap, and installed with Version 3.4, R F Mabee.
	     4	//  First installed as Version 2.7, R F Mabee.
	     5	
	     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
	     7	//  This file may only be reproduced or modified with explicit written
	     8	//  permission of the author.  Permission is hereby extended to those
	     9	//  persons responsible for operating the Multics system to make such
	    10	//  copies as are normally required to ensure the integrity of the Multics
	    11	//  file system.  Permission is also hereby extended to those persons
	    12	//  responsible for maintaining the Multics program libraries to make such
	    13	//  copies as are normally required for online installations.
	    14	
	    15	get "bcpl_compiler_head"
		     1	//  Declarations common to the entire BCPL compiler.
		     2	//  Last modified on 07/28/73 at 03:56:32 by R F Mabee.
		     3	//  Installed on 6180 as Version 3.4, R F Mabee.
		     4	//  First installed on 645 as Version 2.7 by R F Mabee.
		     5	
		     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
		     7	//  This file may only be reproduced or modified with explicit written
		     8	//  permission of the author.  Permission is hereby extended to those
		     9	//  persons responsible for operating the Multics system to make such
		    10	//  copies as are normally required to ensure the integrity of the Multics
		    11	//  file system.  Permission is also hereby extended to those persons
		    12	//  responsible for maintaining the Multics program libraries to make such
		    13	//  copies as are normally required for online installations.
		    14	
		    15	external
		    16	     $(	Readch = "bcpl_machine_code_$Readch"		//  Library routines used by the compiler.
		    17		Writech = "bcpl_machine_code_$Writech"
		    18		WriteS = "bcpl_stream_io_$WriteS"
		    19		WriteN = "bcpl_stream_io_$WriteN"
		    20		Format = "bcpl_stream_io_$Format"
		    21		Packstring = "bcpl_machine_code_$Packstring"
		    22		Unpackstring = "bcpl_machine_code_$Unpackstring"
		    23		RemoveEscapes = "bcpl_conversions_$RemoveEscapes"
		    24		EqualString = "bcpl_strings_$EqualString"
		    25		CompareStrings = "bcpl_strings_$CompareStrings"	//  Alphabetic comparison.
		    26		Concatenate = "bcpl_strings_$Concatenate"
		    27		ConvertStoN = "bcpl_conversions_$ConvertStoN"
		    28		ConvertNtoS = "bcpl_conversions_$ConvertNtoS"
		    29		Length = "bcpl_strings_$Length"		//  Number of characters.
		    30		LengthInWords = "bcpl_strings_$LengthInWords"	//  Length of packed string.
		    31		RandomI = "bcpl_arithmetic_$RandomI"
		    32	
		    33		Newvec = "bcpl_utility$Newvec"		//  Utility routines used throughout the compiler.
		    34		Freevec = "bcpl_utility$Freevec"
		    35		List1 = "bcpl_utility$List1"
		    36		List2 = "bcpl_utility$List2"
		    37		List3 = "bcpl_utility$List3"
		    38		List4 = "bcpl_utility$List4"
		    39		List5 = "bcpl_utility$List5"
		    40		List6 = "bcpl_utility$List6"
		    41		StoreString = "bcpl_utility$StoreString"
		    42		PushInput = "bcpl_utility$PushInput"
		    43		PopInput = "bcpl_utility$PopInput"
		    44		MakeTimeString = "bcpl_utility$MakeTimeString"
		    45		Nextparam = "bcpl_utility$Nextparam"
		    46		FormCharconst = "bcpl_utility$FormCharconst"
		    47		FormStringconst = "bcpl_utility$FormStringconst"
		    48	
		    49		CaeReport = "bcpl_report$CaeReport"
		    50		Transreport = "bcpl_report$Transreport"
		    51		CGreport = "bcpl_report$CGreport"
		    52	
		    53		Nextsymb = "bcpl_lex0$Nextsymb"
		    54	
		    55		SymbolName = "bcpl_plist$SymbolName"
		    56		FindPrintName = "bcpl_plist$FindPrintName"
		    57		EnterIntoCrossreference = "bcpl_plist$EnterIntoCrossreference"
		    58	
		    59		GetVersion = "bcpl_version$GetVersion"		//  Routines used only by the driver.
		    60		UtilitiesInit = "bcpl_utility$UtilitiesInit"
		    61		Cleanup = "bcpl_utility$Cleanup"
		    62		GetStream = "bcpl_utility$GetStream"
		    63	
		    64		CAE = "bcpl_cae0$CAE"
		    65		LexInit = "bcpl_lex0$LexInit"
		    66	
		    67		Pname = "bcpl_plist$Pname"
		    68		Plist = "bcpl_plist$Plist"
		    69	
		    70		Trans = "bcpl_trans0$Trans"
		    71		CgInit = "bcpl_cg0$CgInit"
		    72		BuildObject = "bcpl_cg0$BuildObject"
		    73		WriteObjectListing = "bcpl_cg0$WriteObjectListing"
		    74	     $)
		    75	
		    76	global		//  Globals are reserved in blocks as follows:
		    77	     $(	//    0 -  31	system
		    78		//   32 -  99	library
		    79		//  100 - 149	options and other common cells
		    80		//  150 - 159	metering cells
		    81		//  160 - 169	bcpl_utility
		    82		//  170 - 199	to be assigned
		    83		//  200 - 229	lexical phase
		    84		//  230 - 249	syntax analyzer
		    85		//  250 - 299	translator
		    86		//  300 - 399	code generator
		    87	
		    88			//  Cells used for communication with the library.
		    89		OUTPUT		: 32
		    90		INPUT		: 33
		    91		MONITOR		: 34
		    92		Ch		: 36
		    93	
		    94			//  Options for this compilation.
		    95		Listing		: 100
		    96		UpperCase		: 101
		    97		PPrep		: 102
		    98		Crep		: 103
		    99		Symbols		: 104
		   100		LineMap		: 105
		   101		Optimize		: 106
		   102		Machine		: 107
		   103		Xref		: 108
		   104		OcodeSw		: 109
		   105		HaveListingFile	: 110
		   106		QuietSw		: 111
		   107	
		   108			//  Other information about this compilation.
		   109		CompilerVersionString : 120
		   110		CompilerVersionNumber : 121
		   111		CompilerDTMString	: 122
		   112		CompilerDTM	: 123
		   113		TimeNowString	: 124
		   114		TimeNow		: 125
		   115		OptionString	: 126
		   116		FileNames		: 127
		   117		FilesInfo		: 128
		   118		FileCount		: 129
		   119		ProgramName	: 130
		   120		UserID		: 131
		   121	
		   122			//  Working variables needing global scope.
		   123		LineCount		: 140
		   124		Errorsw		: 141
		   125		NAMECHAIN		: 142
		   126		Symb		: 143
		   127		DictionaryEntry	: 144
		   128		Column		: 145
		   129	     $)
		   130	manifest
		   131	     $(	GlobalTemp = 199  $)	//  Number of cell available for local, temporary use.
		   132	
		   133	manifest
		   134	     $(	Left = 18; Right = $8777777
		   135		Endofstreamch = $87777
		   136		Even = $87777777777776
		   137		Vmax = 511
		   138		LineMask = $817777; FileShift = 13	//  Breakdown of line count.
		   139		UnexpectedCase = 99		//  Error code for use throughout compiler.
		   140	     $)
	    16	get "bcpl_symbols"
		     1	//  All symbols used in the interface between any two phases of the compiler are defined here.
		     2	//  This includes all canonical symbols, syntax tree nodes, and XOCODE operators.
		     3	//  Last modified on 07/08/73 at 22:55:31 by R F Mabee.
		     4	//  Revisions installed in Version 3.4 on 6180, R F Mabee.
		     5	//  First installed with Version 2.7 by R F Mabee.
		     6	
		     7	//  Copyright (c) 1973 by the author, Robert F. Mabee.
		     8	//  This file may only be reproduced or modified with explicit written
		     9	//  permission of the author.  Permission is hereby extended to those
		    10	//  persons responsible for operating the Multics system to make such
		    11	//  copies as are normally required to ensure the integrity of the Multics
		    12	//  file system.  Permission is also hereby extended to those persons
		    13	//  responsible for maintaining the Multics program libraries to make such
		    14	//  copies as are normally required for online installations.
		    15	
		    16	manifest
		    17	     $(	AND_S = 1
		    18		ASSIGN_S = 2
		    19		BE_S = 3
		    20		BIT_S = 4
		    21		BREAK_S = 5
		    22		BY_S = 6
		    23		CALL_S = 07
		    24		CASE_S = 08
		    25	
		    26		CHAR_S = 10
		    27		CHARCONST_S = 11
		    28		COLON_S = 12
		    29		COMMA_S = 13
		    30		COND_S = 14
		    31		CONSTANT_S = 15
		    32		CONSTDEF_S = 16
		    33		DEFAULT_S = 17
		    34		DIV_F = 18
		    35	
		    36		DIV_S = 20
		    37		DO_S = 21
		    38		DOUBLE_S = 22
		    39		ENDCASE_S = 23
		    40		ENDPROG_S = 24
		    41		ERROR_S = 25
		    42		EQ_F = 26
		    43		EQ_S = 27
		    44		EQV_S = 28
		    45	
		    46		EXTERNAL_S = 30
		    47		FALSE_S = 31
		    48		FINISH_S = 32
		    49		FIXED_S = 33
		    50		FLOAT_S = 34
		    51		FNAP_S = 35
		    52		FNDEF_S = 36
		    53		FOR_S = 37
		    54		GE_F = 38
		    55	
		    56		GE_S = 40
		    57		GET_S = 41
		    58		GLOBAL_S = 42
		    59		GOTO_S = 43
		    60		GR_F = 44
		    61		GR_S = 45
		    62		IF_S = 46
		    63		IFNOT_S = 47
		    64		IFSO_S = 48
		    65	
		    66		INTO_S = 50
		    67		LABDEF_S = 51
		    68		LABEL_S = 52
		    69		LE_F = 53
		    70		LE_S = 54
		    71		LENGTH_S = 55
		    72		LET_S = 56
		    73		LIST_S = 57
		    74		LOCAL_S = 58
		    75	
		    76		LOGAND_S = 60
		    77		LOGOR_S = 61
		    78		LOOP_S = 62
		    79		LS_F = 63
		    80		LS_S = 64
		    81		LSHIFT_S = 65
		    82		LV_S = 66
		    83		LVECAP_S = 67
		    84		LV_ARG_OUT = 68
		    85	
		    86		LV_FNAP_RESULT = 70
		    87		LV_GLOBAL = 71
		    88		LV_LOCAL = 72
		    89		LV_STATIC = 73
		    90		LV_TEMP = 74
		    91		MAIN_S = 75
		    92		MANIFEST_S = 76
		    93		MINUS_F = 77
		    94		MINUS_S = 78
		    95	
		    96		MULT_F = 80
		    97		MULT_S = 81
		    98		NAME_S = 82
		    99		NEG_F = 83
		   100		NEG_S = 84
		   101		NEQV_S = 85
		   102		NE_F = 86
		   103		NE_S = 87
		   104		NIL_S = 88
		   105	
		   106		NOT_S = 90
		   107		NUMBER_S = 91
		   108		OFFSET_S = 92
		   109		OR_S = 93
		   110		PLUS_F = 94
		   111		PLUS_S = 95
		   112		POINTER_S = 96
		   113		POS_F = 97
		   114		POS_S = 98
		   115	
		   116		RBRA_S = 100
		   117		REGISTER_S = 101
		   118		REL_S = 102
		   119		REM_S = 103
		   120		REP_S = 104
		   121		REPEAT_S = 105
		   122		REPEATUNTIL_S = 106
		   123		REPEATWHILE_S = 107
		   124		RESULTIS_S = 108
		   125	
		   126		RETURN_S = 110
		   127		RKET_S = 111
		   128		RSHIFT_S = 112
		   129		RTAP_S = 113
		   130		RTDEF_S = 114
		   131		RV_S = 115
		   132		SBRA_S = 116
		   133		SECTBEGIN_S = 117
		   134		SECTBRA_S = 118
		   135	
		   136		SECTEND_S = 120
		   137		SECTKET_S = 121
		   138		SEMICOLON_S = 122
		   139		SKET_S = 123
		   140		STATIC_S = 124
		   141		STRING_S = 125
		   142		STRINGCONST_S = 126
		   143		STRUCTURE_S = 127
		   144		SWITCHON_S = 128
		   145	
		   146		TABLE_S = 130
		   147		TEMP_S = 131
		   148		TEST_S = 132
		   149		TO_S = 133
		   150		TRUE_S = 134
		   151		TYPE_S = 135
		   152		UNLESS_S = 136
		   153		UNTIL_S = 137
		   154		VALDEF_S = 138
		   155	
		   156		VALOF_S = 140
		   157		VEC_S = 141
		   158		VECAP_S = 142
		   159		WHILE_S = 143
		   160	     $)
	    17	get "bcpl_cg_codes"
		     1	//  Report codes for the code generation phase.
		     2	//  Last modified on 08/15/73 at 00:33:36 by R F Mabee.
		     3	//  First installed in Version 3.4 by R F Mabee.
		     4	//  Code generation error codes separated from bcpl_trans_codes in April 1973.
		     5	
		     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
		     7	//  This file may only be reproduced or modified with explicit written
		     8	//  permission of the author.  Permission is hereby extended to those
		     9	//  persons responsible for operating the Multics system to make such
		    10	//  copies as are normally required to ensure the integrity of the Multics
		    11	//  file system.  Permission is also hereby extended to those persons
		    12	//  responsible for maintaining the Multics program libraries to make such
		    13	//  copies as are normally required for online installations.
		    14	
		    15	manifest		//  300 - 399 are reserved for CG.
		    16	     $(	BadAddress	= 300
		    17		BadLabel		= 301
		    18		BadRegOpPair	= 302
		    19		DupCase		= 303
		    20		DupLabel		= 304
		    21		LinkRefersThis	= 305
		    22		OverCase		= 306
		    23		PhaseError	= 307
		    24		UndefLab		= 308
		    25	     $)
	    18	
	    19	external
	    20	     $(	FinishText = "bcpl_cg0$FinishText"
	    21	
	    22		ApplyMonadicOperator = "bcpl_cg1$ApplyMonadicOperator"
	    23		ApplyDiadicOperator = "bcpl_cg1$ApplyDiadicOperator"
	    24		ApplyOffsetOperator = "bcpl_cg1$ApplyOffsetOperator"
	    25		MonadicJumpcond = "bcpl_cg1$MonadicJumpcond"
	    26		DiadicJumpcond = "bcpl_cg1$DiadicJumpcond"
	    27	
	    28		IsNumber = "bcpl_cg2$IsNumber"
	    29		EvalNumber = "bcpl_cg2$EvalNumber"
	    30		IsZero = "bcpl_cg2$IsZero"
	    31		IsAddress = "bcpl_cg2$IsAddress"
	    32		IsStored = "bcpl_cg2$IsStored"
	    33		LookupTemp = "bcpl_cg2$LookupTemp"
	    34		MakeCgTemp = "bcpl_cg2$MakeCgTemp"
	    35		ClaimRegister = "bcpl_cg2$ClaimRegister"
	    36		DisclaimRegister = "bcpl_cg2$DisclaimRegister"
	    37		InRegister = "bcpl_cg2$InRegister"
	    38		FindInRegister = "bcpl_cg2$FindInRegister"
	    39		CombineAddress = "bcpl_cg2$CombineAddress"
	    40		Compjump = "bcpl_cg2$Compjump"
	    41		Complab = "bcpl_cg2$Complab"
	    42		DefineLab = "bcpl_cg2$DefineLab"
	    43		LookupLabel = "bcpl_cg2$LookupLabel"
	    44		ClearRegisters = "bcpl_cg2$ClearRegisters"
	    45		ClearMemory = "bcpl_cg2$ClearMemory"
	    46		AddLiteral = "bcpl_cg2$AddLiteral"
	    47		OutLiterals = "bcpl_cg2$OutLiterals"
	    48		Outstring = "bcpl_cg2$Outstring"
	    49	
	    50		LoadRegister = "bcpl_cg3$LoadRegister"
	    51		LoadPointer = "bcpl_cg3$LoadPointer"
	    52		LoadIndex = "bcpl_cg3$LoadIndex"
	    53		LoadAppropriateRegister = "bcpl_cg3$LoadAppropriateRegister"
	    54		LoadNumber = "bcpl_cg3$LoadNumber"
	    55		SetupAddr = "bcpl_cg3$SetupAddr"
	    56		CompareToZero = "bcpl_cg3$CompareToZero"
	    57		Makeaddressable = "bcpl_cg3$Makeaddressable"
	    58		SwapAandQ = "bcpl_cg3$SwapAandQ"
	    59		Preserve = "bcpl_cg3$Preserve"
	    60		Store = "bcpl_cg3$Store"
	    61		StoreRegister = "bcpl_cg3$StoreRegister"
	    62		GetRegister = "bcpl_cg3$GetRegister"
	    63		Satisfactory = "bcpl_cg3$Satisfactory"
	    64		Literal = "bcpl_cg3$Literal"
	    65	
	    66		NewSSP = "bcpl_cg4$NewSSP"
	    67		Compentry = "bcpl_cg4$Compentry"
	    68		Compreturn = "bcpl_cg4$Compreturn"
	    69		CreateArglist = "bcpl_cg4$CreateArglist"
	    70		StoreArg = "bcpl_cg4$StoreArg"
	    71		Compfnap = "bcpl_cg4$Compfnap"
	    72		CreateSystemArglist = "bcpl_cg4$CreateSystemArglist"
	    73		StoreSystemArg = "bcpl_cg4$StoreSystemArg"
	    74		CompSystemCall = "bcpl_cg4$CompSystemCall"
	    75		ResultBlockBegin = "bcpl_cg4$ResultBlockBegin"
	    76		ResultSet = "bcpl_cg4$ResultSet"
	    77		ResultGet = "bcpl_cg4$ResultGet"
	    78		Compfinish = "bcpl_cg4$Compfinish"
	    79		Compgoto = "bcpl_cg4$Compgoto"
	    80		Compstring = "bcpl_cg4$Compstring"
	    81		Comptable = "bcpl_cg4$Comptable"
	    82		Compexternal = "bcpl_cg4$Compexternal"
	    83	
	    84		OutData = "bcpl_cg5$OutData"
	    85		Outop = "bcpl_cg5$Outop"
	    86		Outop2 = "bcpl_cg5$Outop2"
	    87		Outop3 = "bcpl_cg5$Outop3"
	    88		Outop4 = "bcpl_cg5$Outop4"
	    89		OutW = "bcpl_cg5$OutW"
	    90		OutW2 = "bcpl_cg5$OutW2"
	    91		PutCode = "bcpl_cg5$PutCode"
	    92		PutAbsBits = "bcpl_cg5$PutAbsBits"
	    93		SetLineNumber = "bcpl_cg5$SetLineNumber"
	    94		SectionHeader = "bcpl_cg5$SectionHeader"
	    95		FormOpcode = "bcpl_cg5$FormOpcode"
	    96		FormTag = "bcpl_cg5$FormTag"
	    97		CheckAddr = "bcpl_cg5$CheckAddr"
	    98	
	    99		Compswitch = "bcpl_cg6$Compswitch"
	   100	
	   101		WriteGetlp = "bcpl_cg7$WriteGetlp"
	   102		WriteEntry = "bcpl_cg7$WriteEntry"
	   103		WriteDefs = "bcpl_cg7$WriteDefs"
	   104		WriteLinkage = "bcpl_cg7$WriteLinkage"
	   105	
	   106		WriteSymbol = "bcpl_cg8$WriteSymbol"
	   107		WriteRelBits = "bcpl_cg8$WriteRelBits"
	   108		WriteObjectMap = "bcpl_cg8$WriteObjectMap"
	   109	
	   110		WriteData = "bcpl_cg9$WriteData"
	   111		WriteInstruction = "bcpl_cg9$WriteInstruction"
	   112		ListCodeItem = "bcpl_cg9$ListCodeItem"
	   113	     $)
	   114	global		//  300 - 399 are reserved for the code generator.
	   115	     $(	AbsRelBits	: 300
	   116		Address		: 301
	   117		ArgCount		: 302
	   118		ArgLen		: 303
	   119		CgTempList	: 304
	   120		CodeFirst		: 305
	   121		CodeP		: 306
	   122		CodeV		: 307
	   123		Comment		: 308
	   124	
	   125		DeferredJumpLabel	: 310
	   126		DefsLength	: 311
	   127		DefsRelbits	: 312
	   128		EntryLabel	: 313
	   129		GetLpLabel	: 314
	   130		IndicatorsSetBy	: 315
	   131		Jumpsw		: 316
	   132		LabMaxArg		: 317
	   133		LabMaxSSP		: 318
	   134	
	   135		LabTable		: 320
	   136		LC		: 321
	   137		LineMapFirst	: 322
	   138		LineMapLength	: 323
	   139		LineMapList	: 324
	   140		LinkageLength	: 325
	   141		LinkageRelbits	: 326
	   142		LinkList		: 327
	   143		Lrand		: 328
	   144	
	   145		MainEntriesList	: 330
	   146		MaxArgOffset	: 331
	   147		MaxSSP		: 332
	   148		NewLiteralsList	: 333
	   149		OldLabel		: 334
	   150		OldLiteralsList	: 335
	   151		Param		: 336
	   152		Rrand		: 337
	   153		RegisterTemps	: 338
	   154	
	   155		RegisterUsage	: 340
	   156		RelbitsFirst	: 341
	   157		RelbitsLength	: 342
	   158		RelbitsList	: 343
	   159		RelbitsOffset	: 344
	   160		Reloc		: 345
	   161		ResultInfo	: 346
	   162		ResultInfoList	: 347
	   163		SaveSpaceSize	: 348
	   164	
	   165		SymbolLength	: 350
	   166		SymbolRelbits	: 351
	   167		StackRefTag	: 352
	   168		SymtabFirst	: 353
	   169		SymtabP		: 354
	   170		SymtabV		: 355
	   171		Tag		: 356
	   172		TextLength	: 357
	   173		TextRelbits	: 358
	   174	
	   175		UsageCounter	: 360
	   176	     $)
	   177	manifest
	   178	     $(	CgTempSize = 9
	   179		CodeSize = 1000
	   180		LabTableSize = 100
	   181		SymtabSize = 200
	   182	     $)
	   183	manifest		//  Flags for listing.
	   184	     $(	CodeSwitch	= 1
	   185		InstructionSwitch	= 2
	   186		DataSwitch	= 3
	   187		LabelSwitch	= 4
	   188		LineCountSwitch	= 5
	   189		SectionSwitch	= 6
	   190		HeaderSwitch	= 7
	   191	     $)
	   192	manifest		//  Relocation codes.
	   193	     $(	RelText		= $820
	   194		RelLink18		= $822
	   195		RelNegLink18	= $823
	   196		RelLink15		= $824
	   197		RelDef		= $825
	   198		RelSymbol		= $826
	   199		RelNegSymbol	= $827
	   200		RelStat18		= $830
	   201		RelStat15		= $831
	   202		RelExtendedAbs	= $836		//  Ten bit count follows this code.
	   203	     $)
	   204	manifest
	   205	     $(	TagXrMask = $817
	   206		TagPrMask = $8700000000100
	   207	
	   208		Mod16 = $8777777777760
	   209	     $)
	   210	
	   211	manifest			//  Modifiers and tags used in the code generator.
	   212	     $(	Ap = $8000000000100
	   213		Ab = $8100000000100
	   214		Bp = $8200000000100
	   215		Bb = $8300000000100
	   216		Lp = $8400000000100
	   217		Lb = $8500000000100
	   218		Sp = $8600000000100
	   219		Sb = $8700000000100
	   220	
	   221		Al = $805
	   222		Au = $801
	   223		Dl = $807
	   224		Du = $803
	   225		Ql = $806
	   226		Qu = $802
	   227	
	   228		X0 = $810
	   229		X1 = $811
	   230		X2 = $812
	   231		X3 = $813
	   232		X4 = $814
	   233		X5 = $815
	   234		X6 = $816
	   235		X7 = $817
	   236	
	   237		Ft2 = $846
	   238		Ic = $804
	   239		Star = $820
	   240		StarThenReg = $860
	   241	     $)
	   242	manifest			//  Internal codes for all machine registers used.
	   243	     $(	Ar	= 1
	   244		Qr	= 2
	   245	
	   246		Xr0	= 3
	   247		Xr1	= 4
	   248		Xr2	= 5
	   249		Xr3	= 6
	   250		Xr4	= 7
	   251		Xr5	= 8
	   252		Xr6	= 9
	   253		Xr7	= 10
	   254	
	   255		Apr	= 11
	   256		Abr	= 12
	   257		Bpr	= 13
	   258		Bbr	= 14
	   259		Lpr	= 15
	   260		Lbr	= 16
	   261		Spr	= 17
	   262		Sbr	= 18
	   263	
	   264		EAQr	= 19
	   265	
	   266		NumberOfRegisters = 20
	   267	
	   268		AorQr	= 22
	   269		AnyPr	= 23
	   270		AnyXr	= 24
	   271	     $)
    13	get "bcpl_opcodes"
	     1	//  Definitions for 645 and 6180 machine instructions.  See FormOpcode.
	     2	//  Last modified on 07/20/73 at 23:35:00 by R F Mabee.
	     3	//  6180 instructions added and installed as Version 3.4 by R F Mabee.
	     4	//  First installed as Version 2.7 by R F Mabee
	     5	
	     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
	     7	//  This file may only be reproduced or modified with explicit written
	     8	//  permission of the author.  Permission is hereby extended to those
	     9	//  persons responsible for operating the Multics system to make such
	    10	//  copies as are normally required to ensure the integrity of the Multics
	    11	//  file system.  Permission is also hereby extended to those persons
	    12	//  responsible for maintaining the Multics program libraries to make such
	    13	//  copies as are normally required for online installations.
	    14	
	    15	manifest		//  Note: low order bit of ten bit opcode is here represented by high order bit,
	    16	     $(		//  so remaining bits will retain proper representation as octal numbers.
	    17		Abd	= $81503
	    18		Ada	= $80075
	    19		Adlx1	= $80021
	    20		Als	= $80735
	    21		Ana	= $80375
	    22		Ansa	= $80355
	    23		Anx0	= $80360
	    24		Aos	= $80054
	    25		Arl	= $80771
	    26		Asa	= $80055
	    27		Cmpa	= $80115
	    28		Div	= $80506
	    29		Dvf	= $80507
	    30		Eabap	= $80310
	    31		Eablb	= $80331
	    32		Eablp	= $80330
	    33		Eapab	= $81351
	    34		Eapap	= $80350
	    35		Eapbp	= $80352
	    36		Eaplb	= $81371
	    37		Eaplp	= $80370
	    38		Eax0	= $80620
	    39		Eax1	= $80621
	    40		Eax7	= $80627
	    41		Epaq	= $80213
	    42		Era	= $80675
	    43		Ersa	= $80655
	    44		Fad	= $80475
	    45		Fcmp	= $80515
	    46		Fdi	= $80525
	    47		Fdv	= $80565
	    48		Fld	= $80431
	    49		Fmp	= $80461
	    50		Fneg	= $80513
	    51		Fsb	= $80575
	    52		Fstr	= $80470
	    53		Fszn	= $80430
	    54		Lca	= $80335
	    55		Lda	= $80235
	    56		Ldaq	= $80237
	    57		Ldx7	= $80227
	    58		Llr	= $80777
	    59		Lprpap	= $80760
	    60		Lprpbp	= $80762
	    61		Lprplp	= $80764
	    62		Lrl	= $80773
	    63		Lxl0	= $80720
	    64		Lxl1	= $80721
	    65		Mpy	= $80402
	    66		Neg	= $80531
	    67		Negl	= $80533
	    68		Ora	= $80275
	    69		Orsa	= $80255
	    70		Sba	= $80175
	    71		Sblx1	= $80121
	    72		Sprpap	= $80540
	    73		Sprpbp	= $80542
	    74		Sprplp	= $80544
	    75		Sreg	= $80753
	    76		Ssa	= $80155
	    77		Sta	= $80755
	    78		Staq	= $80757
	    79		Stb	= $80254
	    80		Stc1	= $80554
	    81		Stcd	= $80357
	    82		Stpab	= $81251
	    83		Stpap	= $80250
	    84		Stpbp	= $80252
	    85		Stplb	= $81651
	    86		Stplp	= $80650
	    87		Stx0	= $80740
	    88		Stz	= $80450
	    89		Sxl0	= $80440
	    90		Sxl1	= $80441
	    91		Szn	= $80234
	    92		Tmi	= $80604
	    93		Tmoz	= $81604
	    94		Tnz	= $80601
	    95		Tpl	= $80605
	    96		Tpnz	= $81605
	    97		Tra	= $80710
	    98		Trc	= $80603
	    99		Tsbap	= $80270
	   100		Tsbbp	= $80272
	   101		Tsblp	= $80670
	   102		Tsx0	= $80700
	   103		Tze	= $80600
	   104	     $)
    14	
    15	let LookupTemp (a) = valof
    16	     $(	let h = CgTempList
    17		until h = 0 do
    18		     $(	if h!0 = a resultis h
    19			h := h!CgTempSize
    20		     $)
    21		resultis 0
    22	     $)
    23	and MakeCgTemp (a) = valof
    24	     $(	let h = LookupTemp (a)
    25		if h ne 0 resultis h
    26		h := Newvec (CgTempSize)
    27		h!CgTempSize := CgTempList
    28		CgTempList := h
    29		h!0, h!1 := a, 0
    30		resultis h
    31	     $)
    32	
    33	let IsNumber (t) = valof
    34	  switchon t!0 into
    35	     $(	case NUMBER_S: case CONSTANT_S: case CHARCONST_S: case TRUE_S: case FALSE_S:
    36			resultis true
    37		default:	resultis false
    38	     $)
    39	and EvalNumber (Op, N) = valof
    40	  switchon Op into
    41	     $(	case NUMBER_S:
    42			resultis ConvertStoN (N)
    43		case CONSTANT_S:
    44			resultis N
    45		case CHARCONST_S:
    46			resultis FormCharconst (N)
    47		case TRUE_S:
    48			resultis true
    49		case FALSE_S:
    50			resultis false
    51		default:	CGreport (UnexpectedCase, Op, "EvalNumber")
    52			resultis 0
    53	     $)
    54	and IsZero (t) = IsNumber (t) -> EvalNumber (t!0, t!1) = 0, false
    55	and IsAddress (t) = valof
    56	  switchon t!0 into
    57	     $(	case STRINGCONST_S: case EXTERNAL_S: case TABLE_S:
    58		case LABEL_S: case RTDEF_S:
    59		case LV_GLOBAL: case LV_LOCAL: case LV_STATIC:
    60		case LV_TEMP: case LV_ARG_OUT:
    61			resultis true
    62		case TEMP_S:
    63			let h = LookupTemp (t!1)
    64			if h = 0 resultis false
    65			resultis h!1 = REGISTER_S -> Satisfactory (h!2, AnyPr), h!1 = LVECAP_S
    66		case GLOBAL_S: case LOCAL_S: case STATIC_S:
    67		case NUMBER_S: case CONSTANT_S: case CHARCONST_S: case TRUE_S: case FALSE_S:
    68			resultis false
    69		default:	CGreport (UnexpectedCase, t!0, "IsAddress")
    70			resultis false
    71	     $)
    72	and IsStored (t) = valof
    73	  switchon t!0 into
    74	     $(	case GLOBAL_S: case LOCAL_S: case STATIC_S:
    75			resultis true
    76		case TEMP_S:
    77			let h = LookupTemp (t!1)
    78			if h = 0 resultis true
    79			resultis h!1 = VECAP_S
    80		default:	resultis false
    81	     $)
    82	and FindInRegister (t, r) = valof
    83	     $(	unless t!0 = TEMP_S resultis 0
    84		let h = LookupTemp (t!1)
    85		if h = 0 resultis 0
    86		test h!1 = REGISTER_S
    87		then if Satisfactory (h!2, r) resultis h!2
    88		or if h!1 = LVECAP_S & IsZero (lv h!5) & h!8 = 0 resultis FindInRegister (lv h!2, r)
    89		resultis 0
    90	     $)
    91	and InRegister (t, r) = (FindInRegister (t, r) ne 0)
    92	
    93	and CombineAddress (Pointer, Index, Delta) be
    94	     $(	let Pr = GetRegister (AnyPr)		//  Might not need it.
    95		and Xr = IsZero (Index) -> 0, LoadIndex (Index, AnyXr)
    96		SetupAddr (Pointer)
    97		Comment := 0		//  Misleading comment.
    98		test (Tag & TagXrMask) ne 0 & Xr ne 0 logor (Tag & Star) ne 0 & Delta ne 0
    99		then $(	Outop (FormOpcode (Eapap, Pr))
   100			Address, Tag, Param := Delta, FormTag (Xr) | FormTag (Pr), 0
   101		     $)
   102		or   $(	Address := Address + Delta
   103			unless Xr = 0 do
   104			     $(	Tag := Tag | FormTag (Xr)
   105				if (Tag & Star) ne 0 do Tag := Tag + StarThenReg - Star
   106			     $)
   107		     $)
   108	     $)
   109	and ClaimRegister (r, t) be
   110		test r = 0
   111		then DisclaimRegister (t)		//  Was already stored.
   112		or test t!0 = LV_TEMP
   113		then $(	let h = MakeCgTemp (t!1)
   114			h!1, h!2 := REGISTER_S, Preserve (r)
   115			RegisterTemps!r := h
   116		     $)
   117		or   $(	StoreRegister (r, t)
   118			DisclaimRegister (t)
   119		     $)
   120	and DisclaimRegister (t) be
   121	     $(	unless t!0 = TEMP_S return
   122		let h = LookupTemp (t!1)
   123		if h = 0 return
   124		test h!1 = REGISTER_S
   125		then RegisterTemps!(h!2), RegisterUsage!(h!2) := 0, 0
   126		or   $(	DisclaimRegister (lv h!2)
   127			DisclaimRegister (lv h!5)
   128		     $)
   129		let p = lv CgTempList
   130		until rv p = 0 do
   131		     $(	if rv p = h do
   132			     $(	rv p := h!CgTempSize
   133				break
   134			     $)
   135			p := lv ((rv p)!CgTempSize)
   136		     $)
   137		Freevec (h, CgTempSize)
   138	     $)
   139	
   140	let Complab (L) be
   141	     $(	unless DeferredJumpLabel = 0 do
   142		     $(	unless DeferredJumpLabel = L do
   143			     $(	Jumpsw := false
   144				Outop2 (Tra, DeferredJumpLabel)
   145			     $)
   146			DeferredJumpLabel := 0
   147		     $)
   148		ClearRegisters ()
   149		ClearMemory ()
   150		if Listing do Format (OUTPUT, "L^d:", L)
   151		PutCode (LabelSwitch, L, LC)
   152		DefineLab (L, LC)
   153		Jumpsw, IndicatorsSetBy := false, 0
   154	     $)
   155	and DefineLab (L, n) be
   156	     $(	let P = LabelCell (L)
   157		unless rv P = 0 do CGreport (DupLabel, L)
   158		rv P := 1 lshift Left logor n
   159	     $)
   160	and LookupLabel (L) = rv LabelCell (L)
   161	and LabelCell (L) = valof
   162	     $(	unless 0 < L < LabTableSize * 100 do
   163		     $(	CGreport (BadLabel, L)
   164			L := 0
   165		     $)
   166		let Q = L / 100
   167		let P = LabTable!Q
   168		if P = 0 do
   169		     $(	P := Newvec (100 - 1)
   170			for i = 0 to 100 - 1 do P!i := 0
   171			LabTable!Q := P
   172		     $)
   173		resultis lv P!(L rem 100)
   174	     $)
   175	and Compjump (n) be
   176	     $(	unless Jumpsw do DeferredJumpLabel := n
   177		Jumpsw := true
   178	     $)
   179	and ClearMemory () be
   180		return
   181	and ClearRegisters () be
   182	     $(	let T = table Xr2, Xr3, Xr4, Xr5, Xr6, Apr, Abr, Bpr, Bbr, Lbr, Ar, Qr, EAQr
   183		for i = 0 to 12 do GetRegister (T!i)
   184	     $)
   185	
   186	and Outstring (s) be
   187	     $(	let v = vec Vmax
   188		let Len = FormStringconst (s, v)
   189		Comment := s
   190		for i = 0 to Len do OutData (v!i)
   191	     $)
   192	and OutLiterals () be
   193	     $(	if NewLiteralsList = 0 return
   194		ClearRegisters ()
   195		SectionHeader ("*nLiteral pool")
   196		let HaveAlignmentRequirements = true
   197		until NewLiteralsList = 0 do
   198		     $(	let Alignment = 2 - (LC & 1)
   199			if HaveAlignmentRequirements do
   200			     $(	let t, B = NewLiteralsList, false
   201				until t = 0 do
   202				     $(	if t!3 = Alignment do
   203					     $(	PutOneLiteral (t)
   204						goto OuterLoop
   205					     $)
   206					if t!3 ne 0 do B := true
   207					t := t!4
   208				     $)
   209				HaveAlignmentRequirements := B
   210			     $)
   211			let t = NewLiteralsList
   212			until t = 0 do
   213			     $(	if t!3 = 0 do
   214				     $(	t!3 := Alignment
   215					PutOneLiteral (t)
   216					goto OuterLoop
   217				     $)
   218				t := t!4
   219			     $)
   220			HaveAlignmentRequirements := true
   221			Comment := "padding"
   222			OutData (0)
   223		OuterLoop:
   224		     $)
   225	     $)
   226	and PutOneLiteral (t) be
   227	     $(	let u = lv NewLiteralsList
   228		until rv u = t do u := lv (rv u)!4
   229		rv u := t!4
   230		Comment := t!2
   231		let P = t!0
   232		for i = 0 to t!1 * 2 - 2 by 2 do
   233		     $(	unless P!i = 0 do Complab (P!i)
   234			OutData (P!(i + 1))
   235		     $)
   236		t!4 := OldLiteralsList
   237		OldLiteralsList := t
   238	     $)
   239	
   240	and AddLiteral (P, Len, C, Alignment) be
   241	     $(	let Data, Ent = Newvec (Len * 2 - 1), Newvec (4)
   242		for i = 0 to Len - 1 do Data!(i * 2), Data!(i * 2 + 1) := 0, P!i
   243		Ent!0, Ent!1, Ent!2, Ent!3, Ent!4 := Data, Len, C, Alignment, NewLiteralsList
   244		NewLiteralsList := Ent
   245	
   246		let t = Ent!4
   247		until t = 0 do
   248		     $(	if CombineLiteral (Ent, t) return
   249			t := t!4
   250		     $)
   251		t := OldLiteralsList
   252		until t = 0 do
   253		     $(	if CombineLiteral (Ent, t) return
   254			t := t!4
   255		     $)
   256		t := Ent!4
   257		until t = 0 do
   258		     $(	CombineLiteral (t, Ent)
   259			t := t!4
   260		     $)
   261		if Data!0 = 0 do Data!0 := Nextparam ()
   262		Address, Tag, Param, Comment := 0, 0, Data!0, C
   263	     $)
   264	and CombineLiteral (New, Old) = valof
   265	     $(	let Ndata, Odata = New!0, Old!0
   266		for i = 0 to Old!1 - New!1 do
   267		     $(	for j = 0 to New!1 - 1 if Ndata!(j * 2 + 1) ne Odata!((i + j) * 2 + 1)
   268						| Ndata!(j * 2) ne 0 & Odata!((i + j) * 2) ne 0 goto OuterLoop
   269			if New!3 ne 0 test Old!3 ne 0
   270				then unless ((New!3 + Old!3 + i) & 1) = 0 goto OuterLoop
   271				or Old!3 := 2 - ((New!3 + i) & 1)
   272			for j = 0 to New!1 - 1 if Ndata!(j * 2) ne 0 do Odata!((i + j) * 2) := Ndata!(j * 2)
   273			Address, Tag, Param := i, 0, Odata!0
   274			let u = lv NewLiteralsList
   275			until rv u = New do u := lv (rv u)!4
   276			rv u := New!4
   277			Freevec (Ndata, New!1 * 2 - 1)
   278			Freevec (New, 4)
   279			resultis true
   280		OuterLoop:
   281		     $)
   282		resultis false
   283	     $)



CAE time 8.0, 121 source lines per second.
cross reference table

a			bcpl_cg2:  15, 18, 23, 24, 29

Ab			bcpl_cg_head:  213

Abd			bcpl_opcodes:  17

Abr			bcpl_cg_head:  256, bcpl_cg2:  182

AbsRelBits		bcpl_cg_head:  115

Ada			bcpl_opcodes:  18

AddLiteral		bcpl_cg_head:  46, bcpl_cg2:  240

Address			bcpl_cg_head:  116, bcpl_cg2:  100, 102, 102, 262, 273

Adlx1			bcpl_opcodes:  19

Al			bcpl_cg_head:  221

Alignment			bcpl_cg2:  198, 202, 214, 240, 243

Als			bcpl_opcodes:  20

Ana			bcpl_opcodes:  21

AND_S			bcpl_symbols:  17

Ansa			bcpl_opcodes:  22

Anx0			bcpl_opcodes:  23

AnyPr			bcpl_cg_head:  269, bcpl_cg2:  65, 94

AnyXr			bcpl_cg_head:  270, bcpl_cg2:  95

AorQr			bcpl_cg_head:  268

Aos			bcpl_opcodes:  24

Ap			bcpl_cg_head:  212

ApplyDiadicOperator		bcpl_cg_head:  23

ApplyMonadicOperator	bcpl_cg_head:  22

ApplyOffsetOperator		bcpl_cg_head:  24

Apr			bcpl_cg_head:  255, bcpl_cg2:  182

Ar			bcpl_cg_head:  243, bcpl_cg2:  182

ArgCount			bcpl_cg_head:  117

ArgLen			bcpl_cg_head:  118

Arl			bcpl_opcodes:  25

Asa			bcpl_opcodes:  26

ASSIGN_S			bcpl_symbols:  18

Au			bcpl_cg_head:  222

B			bcpl_cg2:  200, 206, 209

BadAddress		bcpl_cg_codes:  16

BadLabel			bcpl_cg_codes:  17, bcpl_cg2:  163

BadRegOpPair		bcpl_cg_codes:  18

Bb			bcpl_cg_head:  215

Bbr			bcpl_cg_head:  258, bcpl_cg2:  182

BE_S			bcpl_symbols:  19

BIT_S			bcpl_symbols:  20

Bp			bcpl_cg_head:  214

Bpr			bcpl_cg_head:  257, bcpl_cg2:  182

BREAK_S			bcpl_symbols:  21

BuildObject		bcpl_compiler_head:  72

BY_S			bcpl_symbols:  22

C			bcpl_cg2:  240, 243, 262

CAE			bcpl_compiler_head:  64

CaeReport			bcpl_compiler_head:  49

CALL_S			bcpl_symbols:  23

CASE_S			bcpl_symbols:  24

CgInit			bcpl_compiler_head:  71

CGreport			bcpl_compiler_head:  51, bcpl_cg2:  51, 69, 157, 163

CgTempList		bcpl_cg_head:  119, bcpl_cg2:  16, 27, 28, 129

CgTempSize		bcpl_cg_head:  178, bcpl_cg2:  19, 26, 27, 132, 135, 137

Ch			bcpl_compiler_head:  92

CHARCONST_S		bcpl_symbols:  27, bcpl_cg2:  35, 45, 67

CHAR_S			bcpl_symbols:  26

CheckAddr			bcpl_cg_head:  97

ClaimRegister		bcpl_cg_head:  35, bcpl_cg2:  109

Cleanup			bcpl_compiler_head:  61

ClearMemory		bcpl_cg_head:  45, bcpl_cg2:  149, 179

ClearRegisters		bcpl_cg_head:  44, bcpl_cg2:  148, 181, 194

Cmpa			bcpl_opcodes:  27

CodeFirst			bcpl_cg_head:  120

CodeP			bcpl_cg_head:  121

CodeSize			bcpl_cg_head:  179

CodeSwitch		bcpl_cg_head:  184

CodeV			bcpl_cg_head:  122

COLON_S			bcpl_symbols:  28

Column			bcpl_compiler_head:  128

CombineAddress		bcpl_cg_head:  39, bcpl_cg2:  93

CombineLiteral		bcpl_cg2:  248, 253, 258, 264

COMMA_S			bcpl_symbols:  29

Comment			bcpl_cg_head:  123, bcpl_cg2:  97, 189, 221, 230, 262

CompareStrings		bcpl_compiler_head:  25

CompareToZero		bcpl_cg_head:  56

Compentry			bcpl_cg_head:  67

Compexternal		bcpl_cg_head:  82

Compfinish		bcpl_cg_head:  78

Compfnap			bcpl_cg_head:  71

Compgoto			bcpl_cg_head:  79

CompilerDTM		bcpl_compiler_head:  112

CompilerDTMString		bcpl_compiler_head:  111

CompilerVersionNumber	bcpl_compiler_head:  110

CompilerVersionString	bcpl_compiler_head:  109

Compjump			bcpl_cg_head:  40, bcpl_cg2:  175

Complab			bcpl_cg_head:  41, bcpl_cg2:  140, 233

Compreturn		bcpl_cg_head:  68

Compstring		bcpl_cg_head:  80

Compswitch		bcpl_cg_head:  99

CompSystemCall		bcpl_cg_head:  74

Comptable			bcpl_cg_head:  81

Concatenate		bcpl_compiler_head:  26

COND_S			bcpl_symbols:  30

CONSTANT_S		bcpl_symbols:  31, bcpl_cg2:  35, 43, 67

CONSTDEF_S		bcpl_symbols:  32

ConvertNtoS		bcpl_compiler_head:  28

ConvertStoN		bcpl_compiler_head:  27, bcpl_cg2:  42

CreateArglist		bcpl_cg_head:  69

CreateSystemArglist		bcpl_cg_head:  72

Crep			bcpl_compiler_head:  98

Data			bcpl_cg2:  241, 242, 242, 243, 261, 261, 262

DataSwitch		bcpl_cg_head:  186

DEFAULT_S			bcpl_symbols:  33

DeferredJumpLabel		bcpl_cg_head:  125, bcpl_cg2:  141, 142, 144, 146, 176

DefineLab			bcpl_cg_head:  42, bcpl_cg2:  152, 155

DefsLength		bcpl_cg_head:  126

DefsRelbits		bcpl_cg_head:  127

Delta			bcpl_cg2:  93, 98, 100, 102

DiadicJumpcond		bcpl_cg_head:  26

DictionaryEntry		bcpl_compiler_head:  127

DisclaimRegister		bcpl_cg_head:  36, bcpl_cg2:  111, 118, 120, 126, 127

Div			bcpl_opcodes:  28

DIV_F			bcpl_symbols:  34

DIV_S			bcpl_symbols:  36

Dl			bcpl_cg_head:  223

DOUBLE_S			bcpl_symbols:  38

DO_S			bcpl_symbols:  37

Du			bcpl_cg_head:  224

DupCase			bcpl_cg_codes:  19

DupLabel			bcpl_cg_codes:  20, bcpl_cg2:  157

Dvf			bcpl_opcodes:  29

Eabap			bcpl_opcodes:  30

Eablb			bcpl_opcodes:  31

Eablp			bcpl_opcodes:  32

Eapab			bcpl_opcodes:  33

Eapap			bcpl_opcodes:  34, bcpl_cg2:  99

Eapbp			bcpl_opcodes:  35

Eaplb			bcpl_opcodes:  36

Eaplp			bcpl_opcodes:  37

EAQr			bcpl_cg_head:  264, bcpl_cg2:  182

Eax0			bcpl_opcodes:  38

Eax1			bcpl_opcodes:  39

Eax7			bcpl_opcodes:  40

ENDCASE_S			bcpl_symbols:  39

Endofstreamch		bcpl_compiler_head:  135

ENDPROG_S			bcpl_symbols:  40

Ent			bcpl_cg2:  241, 243, 243, 243, 243, 243, 244, 246, 248, 253, 256, 258

EnterIntoCrossreference	bcpl_compiler_head:  57

EntryLabel		bcpl_cg_head:  128

Epaq			bcpl_opcodes:  41

EqualString		bcpl_compiler_head:  24

EQV_S			bcpl_symbols:  44

EQ_F			bcpl_symbols:  42

EQ_S			bcpl_symbols:  43

Era			bcpl_opcodes:  42

Errorsw			bcpl_compiler_head:  124

ERROR_S			bcpl_symbols:  41

Ersa			bcpl_opcodes:  43

EvalNumber		bcpl_cg_head:  29, bcpl_cg2:  39, 54

Even			bcpl_compiler_head:  136

EXTERNAL_S		bcpl_symbols:  46, bcpl_cg2:  57

Fad			bcpl_opcodes:  44

FALSE_S			bcpl_symbols:  47, bcpl_cg2:  35, 49, 67

Fcmp			bcpl_opcodes:  45

Fdi			bcpl_opcodes:  46

Fdv			bcpl_opcodes:  47

FileCount			bcpl_compiler_head:  118

FileNames			bcpl_compiler_head:  116

FileShift			bcpl_compiler_head:  138

FilesInfo			bcpl_compiler_head:  117

FindInRegister		bcpl_cg_head:  38, bcpl_cg2:  82, 88, 91

FindPrintName		bcpl_compiler_head:  56

FinishText		bcpl_cg_head:  20

FINISH_S			bcpl_symbols:  48

FIXED_S			bcpl_symbols:  49

Fld			bcpl_opcodes:  48

FLOAT_S			bcpl_symbols:  50

Fmp			bcpl_opcodes:  49

FNAP_S			bcpl_symbols:  51

FNDEF_S			bcpl_symbols:  52

Fneg			bcpl_opcodes:  50

Format			bcpl_compiler_head:  20, bcpl_cg2:  150

FormCharconst		bcpl_compiler_head:  46, bcpl_cg2:  46

FormOpcode		bcpl_cg_head:  95, bcpl_cg2:  99

FormStringconst		bcpl_compiler_head:  47, bcpl_cg2:  188

FormTag			bcpl_cg_head:  96, bcpl_cg2:  100, 100, 104

FOR_S			bcpl_symbols:  53

Freevec			bcpl_compiler_head:  34, bcpl_cg2:  137, 277, 278

Fsb			bcpl_opcodes:  51

Fstr			bcpl_opcodes:  52

Fszn			bcpl_opcodes:  53

Ft2			bcpl_cg_head:  237

GetLpLabel		bcpl_cg_head:  129

GetRegister		bcpl_cg_head:  62, bcpl_cg2:  94, 183

GetStream			bcpl_compiler_head:  62

GetVersion		bcpl_compiler_head:  59

GET_S			bcpl_symbols:  57

GE_F			bcpl_symbols:  54

GE_S			bcpl_symbols:  56

GlobalTemp		bcpl_compiler_head:  131

GLOBAL_S			bcpl_symbols:  58, bcpl_cg2:  66, 74

GOTO_S			bcpl_symbols:  59

GR_F			bcpl_symbols:  60

GR_S			bcpl_symbols:  61

h			bcpl_cg2:  16, 17, 18, 18, 19, 19, 24, 25, 25, 26, 27, 28, 29, 29, 30, 63, 64, 65, 65, 
			65, 77, 78, 79, 84, 85, 86, 87, 87, 88, 88, 88, 88, 113, 114, 114, 115, 122, 123, 124, 
			125, 125, 126, 127, 131, 132, 137

HaveAlignmentRequirements	bcpl_cg2:  196, 199, 209, 220

HaveListingFile		bcpl_compiler_head:  105

HeaderSwitch		bcpl_cg_head:  190

i			bcpl_cg2:  170, 170, 183, 183, 190, 190, 232, 233, 233, 234, 242, 242, 242, 242, 266, 
			267, 268, 270, 271, 272, 273

Ic			bcpl_cg_head:  238

IFNOT_S			bcpl_symbols:  63

IFSO_S			bcpl_symbols:  64

IF_S			bcpl_symbols:  62

Index			bcpl_cg2:  93, 95, 95

IndicatorsSetBy		bcpl_cg_head:  130, bcpl_cg2:  153

INPUT			bcpl_compiler_head:  90

InRegister		bcpl_cg_head:  37, bcpl_cg2:  91

InstructionSwitch		bcpl_cg_head:  185

INTO_S			bcpl_symbols:  66

IsAddress			bcpl_cg_head:  31, bcpl_cg2:  55

IsNumber			bcpl_cg_head:  28, bcpl_cg2:  33, 54

IsStored			bcpl_cg_head:  32, bcpl_cg2:  72

IsZero			bcpl_cg_head:  30, bcpl_cg2:  54, 88, 95

j			bcpl_cg2:  267, 267, 267, 268, 268, 272, 272, 272, 272

Jumpsw			bcpl_cg_head:  131, bcpl_cg2:  143, 153, 176, 177

L			bcpl_cg2:  140, 142, 150, 151, 152, 155, 156, 157, 160, 160, 161, 162, 163, 164, 166, 
			173

LABDEF_S			bcpl_symbols:  67

LabelCell			bcpl_cg2:  156, 160, 161

LabelSwitch		bcpl_cg_head:  187, bcpl_cg2:  151

LABEL_S			bcpl_symbols:  68, bcpl_cg2:  58

LabMaxArg			bcpl_cg_head:  132

LabMaxSSP			bcpl_cg_head:  133

LabTable			bcpl_cg_head:  135, bcpl_cg2:  167, 171

LabTableSize		bcpl_cg_head:  180, bcpl_cg2:  162

Lb			bcpl_cg_head:  217

Lbr			bcpl_cg_head:  260, bcpl_cg2:  182

LC			bcpl_cg_head:  136, bcpl_cg2:  151, 152, 198

Lca			bcpl_opcodes:  54

Lda			bcpl_opcodes:  55

Ldaq			bcpl_opcodes:  56

Ldx7			bcpl_opcodes:  57

Left			bcpl_compiler_head:  134, bcpl_cg2:  158

Len			bcpl_cg2:  188, 190, 240, 241, 242, 243

Length			bcpl_compiler_head:  29

LengthInWords		bcpl_compiler_head:  30

LENGTH_S			bcpl_symbols:  71

LET_S			bcpl_symbols:  72

LexInit			bcpl_compiler_head:  65

LE_F			bcpl_symbols:  69

LE_S			bcpl_symbols:  70

LineCount			bcpl_compiler_head:  123

LineCountSwitch		bcpl_cg_head:  188

LineMap			bcpl_compiler_head:  100

LineMapFirst		bcpl_cg_head:  137

LineMapLength		bcpl_cg_head:  138

LineMapList		bcpl_cg_head:  139

LineMask			bcpl_compiler_head:  138

LinkageLength		bcpl_cg_head:  140

LinkageRelbits		bcpl_cg_head:  141

LinkList			bcpl_cg_head:  142

LinkRefersThis		bcpl_cg_codes:  21

List1			bcpl_compiler_head:  35

List2			bcpl_compiler_head:  36

List3			bcpl_compiler_head:  37

List4			bcpl_compiler_head:  38

List5			bcpl_compiler_head:  39

List6			bcpl_compiler_head:  40

ListCodeItem		bcpl_cg_head:  112

Listing			bcpl_compiler_head:  95, bcpl_cg2:  150

LIST_S			bcpl_symbols:  73

Literal			bcpl_cg_head:  64

Llr			bcpl_opcodes:  58

LoadAppropriateRegister	bcpl_cg_head:  53

LoadIndex			bcpl_cg_head:  52, bcpl_cg2:  95

LoadNumber		bcpl_cg_head:  54

LoadPointer		bcpl_cg_head:  51

LoadRegister		bcpl_cg_head:  50

LOCAL_S			bcpl_symbols:  74, bcpl_cg2:  66, 74

LOGAND_S			bcpl_symbols:  76

LOGOR_S			bcpl_symbols:  77

LookupLabel		bcpl_cg_head:  43, bcpl_cg2:  160

LookupTemp		bcpl_cg_head:  33, bcpl_cg2:  15, 24, 63, 77, 84, 122

LOOP_S			bcpl_symbols:  78

Lp			bcpl_cg_head:  216

Lpr			bcpl_cg_head:  259

Lprpap			bcpl_opcodes:  59

Lprpbp			bcpl_opcodes:  60

Lprplp			bcpl_opcodes:  61

Lrand			bcpl_cg_head:  143

Lrl			bcpl_opcodes:  62

LSHIFT_S			bcpl_symbols:  81

LS_F			bcpl_symbols:  79

LS_S			bcpl_symbols:  80

LVECAP_S			bcpl_symbols:  83, bcpl_cg2:  65, 88

LV_ARG_OUT		bcpl_symbols:  84, bcpl_cg2:  60

LV_FNAP_RESULT		bcpl_symbols:  86

LV_GLOBAL			bcpl_symbols:  87, bcpl_cg2:  59

LV_LOCAL			bcpl_symbols:  88, bcpl_cg2:  59

LV_S			bcpl_symbols:  82

LV_STATIC			bcpl_symbols:  89, bcpl_cg2:  59

LV_TEMP			bcpl_symbols:  90, bcpl_cg2:  60, 112

Lxl0			bcpl_opcodes:  63

Lxl1			bcpl_opcodes:  64

Machine			bcpl_compiler_head:  102

MainEntriesList		bcpl_cg_head:  145

MAIN_S			bcpl_symbols:  91

Makeaddressable		bcpl_cg_head:  57

MakeCgTemp		bcpl_cg_head:  34, bcpl_cg2:  23, 113

MakeTimeString		bcpl_compiler_head:  44

MANIFEST_S		bcpl_symbols:  92

MaxArgOffset		bcpl_cg_head:  146

MaxSSP			bcpl_cg_head:  147

MINUS_F			bcpl_symbols:  93

MINUS_S			bcpl_symbols:  94

Mod16			bcpl_cg_head:  208

MonadicJumpcond		bcpl_cg_head:  25

MONITOR			bcpl_compiler_head:  91

Mpy			bcpl_opcodes:  65

MULT_F			bcpl_symbols:  96

MULT_S			bcpl_symbols:  97

N			bcpl_cg2:  39, 42, 44, 46

n			bcpl_cg2:  155, 158, 175, 176

NAMECHAIN			bcpl_compiler_head:  125

NAME_S			bcpl_symbols:  98

Ndata			bcpl_cg2:  265, 267, 268, 272, 272, 277

Neg			bcpl_opcodes:  66

Negl			bcpl_opcodes:  67

NEG_F			bcpl_symbols:  99

NEG_S			bcpl_symbols:  100

NEQV_S			bcpl_symbols:  101

New			bcpl_cg2:  264, 265, 266, 267, 269, 270, 271, 272, 275, 276, 277, 278

NewLiteralsList		bcpl_cg_head:  148, bcpl_cg2:  193, 197, 200, 211, 227, 243, 244, 274

NewSSP			bcpl_cg_head:  66

Newvec			bcpl_compiler_head:  33, bcpl_cg2:  26, 169, 241, 241

Nextparam			bcpl_compiler_head:  45, bcpl_cg2:  261

Nextsymb			bcpl_compiler_head:  53

NE_F			bcpl_symbols:  102

NE_S			bcpl_symbols:  103

NIL_S			bcpl_symbols:  104

NOT_S			bcpl_symbols:  106

NumberOfRegisters		bcpl_cg_head:  266

NUMBER_S			bcpl_symbols:  107, bcpl_cg2:  35, 41, 67

OcodeSw			bcpl_compiler_head:  104

Odata			bcpl_cg2:  265, 267, 268, 272, 273

OFFSET_S			bcpl_symbols:  108

Old			bcpl_cg2:  264, 265, 266, 269, 270, 271

OldLabel			bcpl_cg_head:  149

OldLiteralsList		bcpl_cg_head:  150, bcpl_cg2:  236, 237, 251

Op			bcpl_cg2:  39, 40, 51

Optimize			bcpl_compiler_head:  101

OptionString		bcpl_compiler_head:  115

Ora			bcpl_opcodes:  68

Orsa			bcpl_opcodes:  69

OR_S			bcpl_symbols:  109

OutData			bcpl_cg_head:  84, bcpl_cg2:  190, 222, 234

OuterLoop			bcpl_cg2:  204, 216, 223, 268, 270, 280

OutLiterals		bcpl_cg_head:  47, bcpl_cg2:  192

Outop			bcpl_cg_head:  85, bcpl_cg2:  99

Outop2			bcpl_cg_head:  86, bcpl_cg2:  144

Outop3			bcpl_cg_head:  87

Outop4			bcpl_cg_head:  88

OUTPUT			bcpl_compiler_head:  89, bcpl_cg2:  150

Outstring			bcpl_cg_head:  48, bcpl_cg2:  186

OutW			bcpl_cg_head:  89

OutW2			bcpl_cg_head:  90

OverCase			bcpl_cg_codes:  22

P			bcpl_cg2:  156, 157, 158, 167, 168, 169, 170, 171, 173, 231, 233, 233, 234, 240, 242

p			bcpl_cg2:  129, 130, 131, 132, 135, 135

Packstring		bcpl_compiler_head:  21

Param			bcpl_cg_head:  151, bcpl_cg2:  100, 262, 273

PhaseError		bcpl_cg_codes:  23

Plist			bcpl_compiler_head:  68

PLUS_F			bcpl_symbols:  110

PLUS_S			bcpl_symbols:  111

Pname			bcpl_compiler_head:  67

Pointer			bcpl_cg2:  93, 96

POINTER_S			bcpl_symbols:  112

PopInput			bcpl_compiler_head:  43

POS_F			bcpl_symbols:  113

POS_S			bcpl_symbols:  114

PPrep			bcpl_compiler_head:  97

Pr			bcpl_cg2:  94, 99, 100

Preserve			bcpl_cg_head:  59, bcpl_cg2:  114

ProgramName		bcpl_compiler_head:  119

PushInput			bcpl_compiler_head:  42

PutAbsBits		bcpl_cg_head:  92

PutCode			bcpl_cg_head:  91, bcpl_cg2:  151

PutOneLiteral		bcpl_cg2:  203, 215, 226

Q			bcpl_cg2:  166, 167, 171

Ql			bcpl_cg_head:  225

Qr			bcpl_cg_head:  244, bcpl_cg2:  182

Qu			bcpl_cg_head:  226

QuietSw			bcpl_compiler_head:  106

r			bcpl_cg2:  82, 87, 88, 91, 91, 109, 110, 114, 115, 117

RandomI			bcpl_compiler_head:  31

RBRA_S			bcpl_symbols:  116

Readch			bcpl_compiler_head:  16

RegisterTemps		bcpl_cg_head:  153, bcpl_cg2:  115, 125

RegisterUsage		bcpl_cg_head:  155, bcpl_cg2:  125

REGISTER_S		bcpl_symbols:  117, bcpl_cg2:  65, 86, 114, 124

RelbitsFirst		bcpl_cg_head:  156

RelbitsLength		bcpl_cg_head:  157

RelbitsList		bcpl_cg_head:  158

RelbitsOffset		bcpl_cg_head:  159

RelDef			bcpl_cg_head:  197

RelExtendedAbs		bcpl_cg_head:  202

RelLink15			bcpl_cg_head:  196

RelLink18			bcpl_cg_head:  194

RelNegLink18		bcpl_cg_head:  195

RelNegSymbol		bcpl_cg_head:  199

Reloc			bcpl_cg_head:  160

RelStat15			bcpl_cg_head:  201

RelStat18			bcpl_cg_head:  200

RelSymbol			bcpl_cg_head:  198

RelText			bcpl_cg_head:  193

REL_S			bcpl_symbols:  118

RemoveEscapes		bcpl_compiler_head:  23

REM_S			bcpl_symbols:  119

REPEATUNTIL_S		bcpl_symbols:  122

REPEATWHILE_S		bcpl_symbols:  123

REPEAT_S			bcpl_symbols:  121

REP_S			bcpl_symbols:  120

ResultBlockBegin		bcpl_cg_head:  75

ResultGet			bcpl_cg_head:  77

ResultInfo		bcpl_cg_head:  161

ResultInfoList		bcpl_cg_head:  162

RESULTIS_S		bcpl_symbols:  124

ResultSet			bcpl_cg_head:  76

RETURN_S			bcpl_symbols:  126

Right			bcpl_compiler_head:  134

RKET_S			bcpl_symbols:  127

Rrand			bcpl_cg_head:  152

RSHIFT_S			bcpl_symbols:  128

RTAP_S			bcpl_symbols:  129

RTDEF_S			bcpl_symbols:  130, bcpl_cg2:  58

RV_S			bcpl_symbols:  131

s			bcpl_cg2:  186, 188, 189

Satisfactory		bcpl_cg_head:  63, bcpl_cg2:  65, 87

SaveSpaceSize		bcpl_cg_head:  163

Sb			bcpl_cg_head:  219

Sba			bcpl_opcodes:  70

Sblx1			bcpl_opcodes:  71

Sbr			bcpl_cg_head:  262

SBRA_S			bcpl_symbols:  132

SECTBEGIN_S		bcpl_symbols:  133

SECTBRA_S			bcpl_symbols:  134

SECTEND_S			bcpl_symbols:  136

SectionHeader		bcpl_cg_head:  94, bcpl_cg2:  195

SectionSwitch		bcpl_cg_head:  189

SECTKET_S			bcpl_symbols:  137

SEMICOLON_S		bcpl_symbols:  138

SetLineNumber		bcpl_cg_head:  93

SetupAddr			bcpl_cg_head:  55, bcpl_cg2:  96

SKET_S			bcpl_symbols:  139

Sp			bcpl_cg_head:  218

Spr			bcpl_cg_head:  261

Sprpap			bcpl_opcodes:  72

Sprpbp			bcpl_opcodes:  73

Sprplp			bcpl_opcodes:  74

Sreg			bcpl_opcodes:  75

Ssa			bcpl_opcodes:  76

Sta			bcpl_opcodes:  77

StackRefTag		bcpl_cg_head:  167

Staq			bcpl_opcodes:  78

Star			bcpl_cg_head:  239, bcpl_cg2:  98, 105, 105

StarThenReg		bcpl_cg_head:  240, bcpl_cg2:  105

STATIC_S			bcpl_symbols:  140, bcpl_cg2:  66, 74

Stb			bcpl_opcodes:  79

Stc1			bcpl_opcodes:  80

Stcd			bcpl_opcodes:  81

Store			bcpl_cg_head:  60

StoreArg			bcpl_cg_head:  70

StoreRegister		bcpl_cg_head:  61, bcpl_cg2:  117

StoreString		bcpl_compiler_head:  41

StoreSystemArg		bcpl_cg_head:  73

Stpab			bcpl_opcodes:  82

Stpap			bcpl_opcodes:  83

Stpbp			bcpl_opcodes:  84

Stplb			bcpl_opcodes:  85

Stplp			bcpl_opcodes:  86

STRINGCONST_S		bcpl_symbols:  142, bcpl_cg2:  57

STRING_S			bcpl_symbols:  141

STRUCTURE_S		bcpl_symbols:  143

Stx0			bcpl_opcodes:  87

Stz			bcpl_opcodes:  88

SwapAandQ			bcpl_cg_head:  58

SWITCHON_S		bcpl_symbols:  144

Sxl0			bcpl_opcodes:  89

Sxl1			bcpl_opcodes:  90

Symb			bcpl_compiler_head:  126

SymbolLength		bcpl_cg_head:  165

SymbolName		bcpl_compiler_head:  55

SymbolRelbits		bcpl_cg_head:  166

Symbols			bcpl_compiler_head:  99

SymtabFirst		bcpl_cg_head:  168

SymtabP			bcpl_cg_head:  169

SymtabSize		bcpl_cg_head:  181

SymtabV			bcpl_cg_head:  170

Szn			bcpl_opcodes:  91

T			bcpl_cg2:  182, 183

t			bcpl_cg2:  33, 34, 54, 54, 54, 54, 55, 56, 63, 69, 72, 73, 77, 82, 83, 84, 91, 91, 109, 
			111, 112, 113, 117, 118, 120, 121, 122, 200, 201, 202, 203, 206, 207, 207, 211, 212, 213, 
			214, 215, 218, 218, 226, 228, 229, 230, 231, 232, 236, 237, 246, 247, 248, 249, 249, 251, 
			252, 253, 254, 254, 256, 257, 258, 259, 259

TABLE_S			bcpl_symbols:  146, bcpl_cg2:  57

Tag			bcpl_cg_head:  171, bcpl_cg2:  98, 98, 100, 104, 104, 105, 105, 105, 262, 273

TagPrMask			bcpl_cg_head:  206

TagXrMask			bcpl_cg_head:  205, bcpl_cg2:  98

TEMP_S			bcpl_symbols:  147, bcpl_cg2:  62, 76, 83, 121

TEST_S			bcpl_symbols:  148

TextLength		bcpl_cg_head:  172

TextRelbits		bcpl_cg_head:  173

TimeNow			bcpl_compiler_head:  114

TimeNowString		bcpl_compiler_head:  113

Tmi			bcpl_opcodes:  92

Tmoz			bcpl_opcodes:  93

Tnz			bcpl_opcodes:  94

TO_S			bcpl_symbols:  149

Tpl			bcpl_opcodes:  95

Tpnz			bcpl_opcodes:  96

Tra			bcpl_opcodes:  97, bcpl_cg2:  144

Trans			bcpl_compiler_head:  70

Transreport		bcpl_compiler_head:  50

Trc			bcpl_opcodes:  98

TRUE_S			bcpl_symbols:  150, bcpl_cg2:  35, 47, 67

Tsbap			bcpl_opcodes:  99

Tsbbp			bcpl_opcodes:  100

Tsblp			bcpl_opcodes:  101

Tsx0			bcpl_opcodes:  102

TYPE_S			bcpl_symbols:  151

Tze			bcpl_opcodes:  103

u			bcpl_cg2:  227, 228, 228, 228, 229, 274, 275, 275, 275, 276

UndefLab			bcpl_cg_codes:  24

UnexpectedCase		bcpl_compiler_head:  139, bcpl_cg2:  51, 69

UNLESS_S			bcpl_symbols:  152

Unpackstring		bcpl_compiler_head:  22

UNTIL_S			bcpl_symbols:  153

UpperCase			bcpl_compiler_head:  96

UsageCounter		bcpl_cg_head:  175

UserID			bcpl_compiler_head:  120

UtilitiesInit		bcpl_compiler_head:  60

v			bcpl_cg2:  187, 188, 190

VALDEF_S			bcpl_symbols:  154

VALOF_S			bcpl_symbols:  156

VECAP_S			bcpl_symbols:  158, bcpl_cg2:  79

VEC_S			bcpl_symbols:  157

Vmax			bcpl_compiler_head:  137, bcpl_cg2:  187

WHILE_S			bcpl_symbols:  159

Writech			bcpl_compiler_head:  17

WriteData			bcpl_cg_head:  110

WriteDefs			bcpl_cg_head:  103

WriteEntry		bcpl_cg_head:  102

WriteGetlp		bcpl_cg_head:  101

WriteInstruction		bcpl_cg_head:  111

WriteLinkage		bcpl_cg_head:  104

WriteN			bcpl_compiler_head:  19

WriteObjectListing		bcpl_compiler_head:  73

WriteObjectMap		bcpl_cg_head:  108

WriteRelBits		bcpl_cg_head:  107

WriteS			bcpl_compiler_head:  18

WriteSymbol		bcpl_cg_head:  106

X0			bcpl_cg_head:  228

X1			bcpl_cg_head:  229

X2			bcpl_cg_head:  230

X3			bcpl_cg_head:  231

X4			bcpl_cg_head:  232

X5			bcpl_cg_head:  233

X6			bcpl_cg_head:  234

X7			bcpl_cg_head:  235

Xr			bcpl_cg2:  95, 98, 100, 103, 104

Xr0			bcpl_cg_head:  246

Xr1			bcpl_cg_head:  247

Xr2			bcpl_cg_head:  248, bcpl_cg2:  182

Xr3			bcpl_cg_head:  249, bcpl_cg2:  182

Xr4			bcpl_cg_head:  250, bcpl_cg2:  182

Xr5			bcpl_cg_head:  251, bcpl_cg2:  182

Xr6			bcpl_cg_head:  252, bcpl_cg2:  182

Xr7			bcpl_cg_head:  253

Xref			bcpl_compiler_head:  103




Trans time 2.7, 727 object words per second.
	"	Begin text of MakeCgTemp

aa 000000  000012 115141		zero	10,39521		" MakeCgTemp
aa 000001  153145 103147		zero	54885,34407
aa 000002  124145 155160		zero	43109,55920
			L2:
aa 000003  000000 213000  23		epaq	0		" set lp to linkage section
aa 000004  700026 764161		lprplp	sb|22,*au
aa 000005  200000 021100		adlx1	bp|0		" BCPL save
aa 000006  700000 542111		sprpbp	sb|0,x1
aa 000007  700001 544111		sprplp	sb|1,x1
aa 000010  700422 620111		eax0	sb|274,x1
aa 000011  777760 360003		anx0	-16,du
aa 000012  700025 740100		stx0	sb|21		" end of save sequence

aa 000013  700002 236111  24		ldq	sb|2,x1		" a
aa 000014  700012 756111		stq	sb|10,x1
aa 000015  000043 272004		tsbbp	L1+2		" LookupTemp
aa 000016  000010 000001		zero	8,1
aa 000017  700004 756111		stq	sb|4,x1		" h
aa 000020  700004 234111  25		szn	sb|4,x1		" h
aa 000021  000003 600004		tze	L6
aa 000022  700004 236111		ldq	sb|4,x1		" h
aa 000023  000021 710004		tra	L5
			L6:
aa 000024  000011 235007  26		lda	9,dl		" CgTempSize
aa 000025  700012 755111		sta	sb|10,x1
4a 000026  400060 272120		tsbbp	lp|L7,*		" Newvec
aa 000027  000010 000001		zero	8,1
aa 000030  700004 756111		stq	sb|4,x1		" h
aa 000031  600460 236100  27		ldq	sp|304		" CgTempList
aa 000032  700004 760111		lprpap	sb|4,x1		" h
aa 000033  000011 756100		stq	ap|9
aa 000034  700004 236111  28		ldq	sb|4,x1		" h
aa 000035  600460 756100		stq	sp|304		" CgTempList
aa 000036  700004 762111  29		lprpbp	sb|4,x1		" h
aa 000037  200001 450100		stz	bp|1
aa 000040  700002 236111		ldq	sb|2,x1		" a
aa 000041  700004 761111		lprpab	sb|4,x1		" h
aa 000042  100000 756100		stq	ab|0
aa 000043  700004 236111  30		ldq	sb|4,x1		" h
			L5:
aa 000044  700004 756111		stq	sb|4,x1
aa 000045  700004 236111		ldq	sb|4,x1
aa 000046  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000047  200000 121100		sblx1	bp|0
aa 000050  700001 764111		lprplp	sb|1,x1
aa 000051  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of LookupTemp

aa 000052  000012 114157		zero	10,39023		" LookupTemp
aa 000053  157153 165160		zero	56939,60016
aa 000054  124145 155160		zero	43109,55920
aa 000055  700003 756111  15		stq	sb|3,x1		" temporary
			L1:
aa 000056  000000 213000		epaq	0		" set lp to linkage section
aa 000057  700026 764161		lprplp	sb|22,*au
aa 000060  200000 021100		adlx1	bp|0		" BCPL save
aa 000061  700000 542111		sprpbp	sb|0,x1
aa 000062  700001 544111		sprplp	sb|1,x1
aa 000063  700417 620111		eax0	sb|271,x1
aa 000064  777760 360003		anx0	-16,du
aa 000065  700025 740100		stx0	sb|21		" end of save sequence

aa 000066  600460 236100  16		ldq	sp|304		" CgTempList
aa 000067  700004 756111		stq	sb|4,x1		" h
aa 000070  000012 710004  17		tra	L11
			L12:
aa 000071  700004 763111  18		lprpbb	sb|4,x1		" h
aa 000072  300000 236100		ldq	bb|0
aa 000073  700002 116111		cmpq	sb|2,x1		" a
aa 000074  000003 601004		tnz	L13
aa 000075  700004 235111		lda	sb|4,x1		" h
aa 000076  000007 710004		tra	L10
			L13:
aa 000077  700004 765111  19		lprplb	sb|4,x1		" h
aa 000100  500011 236100		ldq	lb|9
aa 000101  700004 756111		stq	sb|4,x1		" h
			L11:
aa 000102  700004 234111		szn	sb|4,x1		" h
aa 000103  777766 601004		tnz	L12
aa 000104  000000 235007  21		lda	0,dl		" 0
			L10:
aa 000105  700004 755111		sta	sb|4,x1
aa 000106  700004 236111		ldq	sb|4,x1
aa 000107  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000110  200000 121100		sblx1	bp|0
aa 000111  700001 764111		lprplp	sb|1,x1
aa 000112  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of EvalNumber

aa 000113  000012 105166		zero	10,35446		" EvalNumber
aa 000114  141154 116165		zero	49772,40053
aa 000115  155142 145162		zero	55906,51826
aa 000116  700003 756111  39		stq	sb|3,x1		" temporary
			L15:
aa 000117  000000 213000		epaq	0		" set lp to linkage section
aa 000120  700026 764161		lprplp	sb|22,*au
aa 000121  200000 021100		adlx1	bp|0		" BCPL save
aa 000122  700000 542111		sprpbp	sb|0,x1
aa 000123  700001 544111		sprplp	sb|1,x1
aa 000124  700424 620111		eax0	sb|276,x1
aa 000125  777760 360003		anx0	-16,du
aa 000126  700025 740100		stx0	sb|21		" end of save sequence

aa 000127  000033 710004  41		tra	L28
			L29:
aa 000130  700003 236111  42		ldq	sb|3,x1		" N
aa 000131  700012 756111		stq	sb|10,x1
4a 000132  400056 272120		tsbbp	lp|L30,*		" ConvertStoN
aa 000133  000010 000001		zero	8,1
aa 000134  000056 710004  43		tra	L26
			L31:
aa 000135  700003 236111  44		ldq	sb|3,x1		" N
aa 000136  000054 710004  45		tra	L26
			L32:
aa 000137  700003 235111  46		lda	sb|3,x1		" N
aa 000140  700012 755111		sta	sb|10,x1
4a 000141  400054 272120		tsbbp	lp|L33,*		" FormCharconst
aa 000142  000010 000001		zero	8,1
aa 000143  000047 710004  47		tra	L26
			L34:
aa 000144  000001 336007  48		lcq	1,dl		" true
aa 000145  000045 710004  49		tra	L26
			L35:
aa 000146  000000 236007  50		ldq	0,dl		" false
aa 000147  000043 710004  51		tra	L26
			L36:
aa 000150  000143 235007		lda	99,dl		" UnexpectedCase
aa 000151  700012 755111		sta	sb|10,x1
aa 000152  700002 235111		lda	sb|2,x1		" Op
aa 000153  700013 755111		sta	sb|11,x1
aa 000154  000045 350004		eapap	L37		" "EvalNumber"
aa 000155  700014 540111		sprpap	sb|12,x1
4a 000156  400052 272120		tsbbp	lp|L38,*		" CGreport
aa 000157  000010 000003		zero	8,3
aa 000160  000000 236007  52		ldq	0,dl		" 0
aa 000161  000031 710004		tra	L26
			L28:

	"	Begin switchon

aa 000162  700002 235111		lda	sb|2,x1		" Op
aa 000163  000043 773000		lrl	35
aa 000164  000011 507007		dvf	9,dl		" hash table size
0a 000165  000201 115006		cmpa	L39,ql
aa 000166  777762 601004		tnz	L36
0a 000167  000170 710006		tra	L40,ql
			L40:
aa 000170  777760 710004		tra	L36
aa 000171  777737 710004		tra	L29
aa 000172  777745 710004		tra	L32
aa 000173  777755 710004		tra	L36
aa 000174  777752 710004		tra	L35
aa 000175  777753 710004		tra	L36
aa 000176  777737 710004		tra	L31
aa 000177  777751 710004		tra	L36
aa 000200  777744 710004		tra	L34
			L39:
aa 000201  000000 000000		zero	0
aa 000202  000000 000012		zero	0,10
aa 000203  000000 000001		zero	0,1
aa 000204  000000 000000		zero	0
aa 000205  000000 000003		zero	0,3
aa 000206  000000 000000		zero	0
aa 000207  000000 000001		zero	0,1
aa 000210  000000 000000		zero	0
aa 000211  000000 000016		zero	0,14
			L27:
			L26:
aa 000212  700005 756111		stq	sb|5,x1
aa 000213  700005 236111		ldq	sb|5,x1
aa 000214  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000215  200000 121100		sblx1	bp|0
aa 000216  700001 764111		lprplp	sb|1,x1
aa 000217  200001 710100		tra	bp|1		" end of return sequence
aa 000220  700004 756111		stq	sb|4,x1		" temporary

	"	Literal pool

			L37:
aa 000221  000012 105166		zero	10,35446		" "EvalNumber"
aa 000222  141154 116165		zero	49772,40053
aa 000223  155142 145162		zero	55906,51826
	"	Begin text of FindInRegister

aa 000224  000016 106151		zero	14,35945		" FindInRegister
aa 000225  156144 111156		zero	56420,37486
aa 000226  122145 147151		zero	42085,52841
aa 000227  163164 145162		zero	58996,51826
			L19:
aa 000230  000000 213000  82		epaq	0		" set lp to linkage section
aa 000231  700026 764161		lprplp	sb|22,*au
aa 000232  200000 021100		adlx1	bp|0		" BCPL save
aa 000233  700000 542111		sprpbp	sb|0,x1
aa 000234  700001 544111		sprplp	sb|1,x1
aa 000235  700423 620111		eax0	sb|275,x1
aa 000236  777760 360003		anx0	-16,du
aa 000237  700025 740100		stx0	sb|21		" end of save sequence

aa 000240  700002 760111  83		lprpap	sb|2,x1		" t
aa 000241  000000 236100		ldq	ap|0
aa 000242  000203 116007		cmpq	131,dl		" TEMP_S
aa 000243  000003 600004		tze	L44
aa 000244  000000 235007		lda	0,dl		" 0
aa 000245  000064 710004		tra	L43
			L44:
aa 000246  700002 762111  84		lprpbp	sb|2,x1		" t
aa 000247  200001 236100		ldq	bp|1
aa 000250  700014 756111		stq	sb|12,x1
aa 000251  777607 272004		tsbbp	L1+2		" LookupTemp
aa 000252  000012 000001		zero	10,1
aa 000253  700005 756111		stq	sb|5,x1		" h
aa 000254  700005 234111  85		szn	sb|5,x1		" h
aa 000255  000003 601004		tnz	L45
aa 000256  000000 235007		lda	0,dl		" 0
aa 000257  000052 710004		tra	L43
			L45:
aa 000260  700005 761111  86		lprpab	sb|5,x1		" h
aa 000261  100001 236100		ldq	ab|1
aa 000262  000145 116007		cmpq	101,dl		" REGISTER_S
aa 000263  000016 601004		tnz	L46
aa 000264  700005 763111  87		lprpbb	sb|5,x1		" h
aa 000265  300002 235100		lda	bb|2
aa 000266  700014 755111		sta	sb|12,x1
aa 000267  700003 235111		lda	sb|3,x1		" r
aa 000270  700015 755111		sta	sb|13,x1
4a 000271  400050 272120		tsbbp	lp|L49,*		" Satisfactory
aa 000272  000012 000002		zero	10,2
aa 000273  000000 116007		cmpq	0,dl
aa 000274  000004 600004		tze	L48
aa 000275  700005 765111		lprplb	sb|5,x1		" h
aa 000276  500002 235100		lda	lb|2
aa 000277  000032 710004		tra	L43
			L48:
aa 000300  000030 710004		tra	L47
			L46:
aa 000301  700005 760111  88		lprpap	sb|5,x1		" h
aa 000302  000001 236100		ldq	ap|1
aa 000303  000103 116007		cmpq	67,dl		" LVECAP_S
aa 000304  000024 601004		tnz	L50
aa 000305  700005 762111		lprpbp	sb|5,x1		" h
aa 000306  200005 352100		eapbp	bp|5
aa 000307  700014 542111		sprpbp	sb|12,x1
aa 000310  000727 272004		tsbbp	L16+2		" IsZero
aa 000311  000012 000001		zero	10,1
aa 000312  000000 116007		cmpq	0,dl
aa 000313  000015 600004		tze	L50
aa 000314  700005 762111		lprpbp	sb|5,x1		" h
aa 000315  200010 234100		szn	bp|8
aa 000316  000012 601004		tnz	L50
aa 000317  700005 761111		lprpab	sb|5,x1		" h
aa 000320  100002 351500		eapab	ab|2
aa 000321  700014 541111		sprpab	sb|12,x1
aa 000322  700003 236111		ldq	sb|3,x1		" r
aa 000323  700015 756111		stq	sb|13,x1
aa 000324  777706 272004		tsbbp	L19+2		" FindInRegister
aa 000325  000012 000002		zero	10,2
aa 000326  000044 777000		llr	36		" exchange A and Q
aa 000327  000002 710004		tra	L43
			L50:
			L47:
aa 000330  000000 235007  89		lda	0,dl		" 0
			L43:
aa 000331  700005 755111		sta	sb|5,x1
aa 000332  700005 235111		lda	sb|5,x1
aa 000333  000044 777000		llr	36		" exchange A and Q
aa 000334  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000335  200000 121100		sblx1	bp|0
aa 000336  700001 764111		lprplp	sb|1,x1
aa 000337  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of InRegister

aa 000340  000012 111156		zero	10,37486		" InRegister
aa 000341  122145 147151		zero	42085,52841
aa 000342  163164 145162		zero	58996,51826
aa 000343  700004 756111  91		stq	sb|4,x1		" temporary
			L20:
aa 000344  000000 213000		epaq	0		" set lp to linkage section
aa 000345  700026 764161		lprplp	sb|22,*au
aa 000346  200000 021100		adlx1	bp|0		" BCPL save
aa 000347  700000 542111		sprpbp	sb|0,x1
aa 000350  700001 544111		sprplp	sb|1,x1
aa 000351  700423 620111		eax0	sb|275,x1
aa 000352  777760 360003		anx0	-16,du
aa 000353  700025 740100		stx0	sb|21		" end of save sequence

aa 000354  700002 236111		ldq	sb|2,x1		" t
aa 000355  700012 756111		stq	sb|10,x1
aa 000356  700003 236111		ldq	sb|3,x1		" r
aa 000357  700013 756111		stq	sb|11,x1
aa 000360  777652 272004		tsbbp	L19+2		" FindInRegister
aa 000361  000010 000002		zero	8,2
aa 000362  000000 116007		cmpq	0,dl
aa 000363  000003 600004		tze	L53
aa 000364  000001 336007		lcq	1,dl		" true
aa 000365  000002 710004		tra	L54
			L53:
aa 000366  000000 236007		ldq	0,dl		" false
			L54:
aa 000367  700005 756111		stq	sb|5,x1
aa 000370  700005 236111		ldq	sb|5,x1
aa 000371  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000372  200000 121100		sblx1	bp|0
aa 000373  700001 764111		lprplp	sb|1,x1
aa 000374  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of ClaimRegister

aa 000375  000015 103154		zero	13,34412		" ClaimRegister
aa 000376  141151 155122		zero	49769,55890
aa 000377  145147 151163		zero	51815,53875
aa 000400  164145 162000		zero	59493,58368
aa 000401  700004 756111  109		stq	sb|4,x1		" temporary
			L22:
aa 000402  000000 213000		epaq	0		" set lp to linkage section
aa 000403  700026 764161		lprplp	sb|22,*au
aa 000404  200000 021100		adlx1	bp|0		" BCPL save
aa 000405  700000 542111		sprpbp	sb|0,x1
aa 000406  700001 544111		sprplp	sb|1,x1
aa 000407  700423 620111		eax0	sb|275,x1
aa 000410  777760 360003		anx0	-16,du
aa 000411  700025 740100		stx0	sb|21		" end of save sequence

aa 000412  700002 234111  110		szn	sb|2,x1		" r
aa 000413  000006 601004		tnz	L58
aa 000414  700003 236111  111		ldq	sb|3,x1		" t
aa 000415  700012 756111		stq	sb|10,x1
aa 000416  000060 272004		tsbbp	L23+2		" DisclaimRegister
aa 000417  000010 000001		zero	8,1
aa 000420  000043 710004		tra	L59
			L58:
aa 000421  700003 761111  112		lprpab	sb|3,x1		" t
aa 000422  100000 236100		ldq	ab|0
aa 000423  000112 116007		cmpq	74,dl		" LV_TEMP
aa 000424  000025 601004		tnz	L60
aa 000425  700003 763111  113		lprpbb	sb|3,x1		" t
aa 000426  300001 235100		lda	bb|1
aa 000427  700012 755111		sta	sb|10,x1
aa 000430  777355 272004		tsbbp	L2+2		" MakeCgTemp
aa 000431  000010 000001		zero	8,1
aa 000432  700004 756111		stq	sb|4,x1		" h
aa 000433  000145 236007  114		ldq	101,dl		" REGISTER_S
aa 000434  700004 765111		lprplb	sb|4,x1		" h
aa 000435  500001 756100		stq	lb|1
aa 000436  700002 236111		ldq	sb|2,x1		" r
aa 000437  700012 756111		stq	sb|10,x1
4a 000440  400046 272120		tsbbp	lp|L62,*		" Preserve
aa 000441  000010 000001		zero	8,1
aa 000442  700004 760111		lprpap	sb|4,x1		" h
aa 000443  000002 756100		stq	ap|2
aa 000444  700004 236111  115		ldq	sb|4,x1		" h
aa 000445  700002 722111		lxl2	sb|2,x1		" r
aa 000446  600522 762100		lprpbp	sp|338		" RegisterTemps
aa 000447  200000 756112		stq	bp|0,x2
aa 000450  000013 710004		tra	L61
			L60:
aa 000451  700002 236111  117		ldq	sb|2,x1		" r
aa 000452  700012 756111		stq	sb|10,x1
aa 000453  700003 236111		ldq	sb|3,x1		" t
aa 000454  700013 756111		stq	sb|11,x1
4a 000455  400044 272120		tsbbp	lp|L63,*		" StoreRegister
aa 000456  000010 000002		zero	8,2
aa 000457  700003 236111  118		ldq	sb|3,x1		" t
aa 000460  700012 756111		stq	sb|10,x1
aa 000461  000015 272004		tsbbp	L23+2		" DisclaimRegister
aa 000462  000010 000001		zero	8,1
			L61:
			L59:
			L57:
aa 000463  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000464  200000 121100		sblx1	bp|0
aa 000465  700001 764111		lprplp	sb|1,x1
aa 000466  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of DisclaimRegister

aa 000467  000020 104151		zero	16,34921		" DisclaimRegister
aa 000470  163143 154141		zero	58979,55393
aa 000471  151155 122145		zero	53869,42085
aa 000472  147151 163164		zero	52841,58996
aa 000473  145162 000000		zero	51826
			L23:
aa 000474  000000 213000  120		epaq	0		" set lp to linkage section
aa 000475  700026 764161		lprplp	sb|22,*au
aa 000476  200000 021100		adlx1	bp|0		" BCPL save
aa 000477  700000 542111		sprpbp	sb|0,x1
aa 000500  700001 544111		sprplp	sb|1,x1
aa 000501  700423 620111		eax0	sb|275,x1
aa 000502  777760 360003		anx0	-16,du
aa 000503  700025 740100		stx0	sb|21		" end of save sequence

aa 000504  700002 761111  121		lprpab	sb|2,x1		" t
aa 000505  100000 236100		ldq	ab|0
aa 000506  000203 116007		cmpq	131,dl		" TEMP_S
aa 000507  000071 601004		tnz	L66
aa 000510  700002 763111  122		lprpbb	sb|2,x1		" t
aa 000511  300001 235100		lda	bb|1
aa 000512  700012 755111		sta	sb|10,x1
aa 000513  777345 272004		tsbbp	L1+2		" LookupTemp
aa 000514  000010 000001		zero	8,1
aa 000515  700003 756111		stq	sb|3,x1		" h
aa 000516  700003 234111  123		szn	sb|3,x1		" h
aa 000517  000061 600004		tze	L66
aa 000520  700003 765111  124		lprplb	sb|3,x1		" h
aa 000521  500001 236100		ldq	lb|1
aa 000522  000145 116007		cmpq	101,dl		" REGISTER_S
aa 000523  000012 601004		tnz	L67
aa 000524  700003 760111  125		lprpap	sb|3,x1		" h
aa 000525  000002 723100		lxl3	ap|2
aa 000526  600524 762100		lprpbp	sp|340		" RegisterUsage
aa 000527  200000 450113		stz	bp|0,x3
aa 000530  700003 761111		lprpab	sb|3,x1		" h
aa 000531  100002 724100		lxl4	ab|2
aa 000532  600522 763100		lprpbb	sp|338		" RegisterTemps
aa 000533  300000 450114		stz	bb|0,x4
aa 000534  000013 710004		tra	L68
			L67:
aa 000535  700003 765111  126		lprplb	sb|3,x1		" h
aa 000536  500002 371500		eaplb	lb|2
aa 000537  700012 545111		sprplb	sb|10,x1
aa 000540  777736 272004		tsbbp	L23+2		" DisclaimRegister
aa 000541  000010 000001		zero	8,1
aa 000542  700003 765111  127		lprplb	sb|3,x1		" h
aa 000543  500005 371500		eaplb	lb|5
aa 000544  700012 545111		sprplb	sb|10,x1
aa 000545  777731 272004		tsbbp	L23+2		" DisclaimRegister
aa 000546  000010 000001		zero	8,1
			L68:
aa 000547  600460 371500  129		eaplb	sp|304		" CgTempList
aa 000550  700004 545111		sprplb	sb|4,x1		" p
aa 000551  000016 710004  130		tra	L69
			L70:
aa 000552  700004 765111  131		lprplb	sb|4,x1		" p
aa 000553  500000 235100		lda	lb|0
aa 000554  700003 115111		cmpa	sb|3,x1		" h
aa 000555  000006 601004		tnz	L71
aa 000556  700003 760111  132		lprpap	sb|3,x1		" h
aa 000557  000011 236100		ldq	ap|9
aa 000560  700004 762111		lprpbp	sb|4,x1		" p
aa 000561  200000 756100		stq	bp|0		" p
aa 000562  000010 710004  133		tra	L72
			L71:
aa 000563  700004 761111  135		lprpab	sb|4,x1		" p
aa 000564  100000 761100		lprpab	ab|0
aa 000565  100011 351500		eapab	ab|9
aa 000566  700004 541111		sprpab	sb|4,x1		" p
			L69:
aa 000567  700004 761111		lprpab	sb|4,x1		" p
aa 000570  100000 234100		szn	ab|0
aa 000571  777761 601004		tnz	L70
			L72:
aa 000572  700003 236111  137		ldq	sb|3,x1		" h
aa 000573  700012 756111		stq	sb|10,x1
aa 000574  000011 236007		ldq	9,dl		" CgTempSize
aa 000575  700013 756111		stq	sb|11,x1
4a 000576  400042 272120		tsbbp	lp|L73,*		" Freevec
aa 000577  000010 000002		zero	8,2
			L66:
aa 000600  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000601  200000 121100		sblx1	bp|0
aa 000602  700001 764111		lprplp	sb|1,x1
aa 000603  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of CombineAddress

aa 000604  000016 103157		zero	14,34415		" CombineAddress
aa 000605  155142 151156		zero	55906,53870
aa 000606  145101 144144		zero	51777,51300
aa 000607  162145 163163		zero	58469,58995
			L21:
aa 000610  000000 213000  93		epaq	0		" set lp to linkage section
aa 000611  700026 764161		lprplp	sb|22,*au
aa 000612  200000 021100		adlx1	bp|0		" BCPL save
aa 000613  700000 542111		sprpbp	sb|0,x1
aa 000614  700001 544111		sprplp	sb|1,x1
aa 000615  700423 620111		eax0	sb|275,x1
aa 000616  777760 360003		anx0	-16,du
aa 000617  700025 740100		stx0	sb|21		" end of save sequence

aa 000620  700003 236111  95		ldq	sb|3,x1		" Index
aa 000621  700016 756111		stq	sb|14,x1
aa 000622  000415 272004		tsbbp	L16+2		" IsZero
aa 000623  000014 000001		zero	12,1
aa 000624  000000 116007		cmpq	0,dl
aa 000625  000003 600004		tze	L77
aa 000626  000000 236007		ldq	0,dl		" 0
aa 000627  000007 710004		tra	L78
			L77:
aa 000630  700003 235111		lda	sb|3,x1		" Index
aa 000631  700016 755111		sta	sb|14,x1
aa 000632  000030 235007		lda	24,dl		" AnyXr
aa 000633  700017 755111		sta	sb|15,x1
4a 000634  400040 272120		tsbbp	lp|L79,*		" LoadIndex
aa 000635  000014 000002		zero	12,2
			L78:
aa 000636  700011 756111		stq	sb|9,x1
aa 000637  700011 236111		ldq	sb|9,x1
aa 000640  700006 756111		stq	sb|6,x1		" Xr
aa 000641  000027 236007  94		ldq	23,dl		" AnyPr
aa 000642  700016 756111		stq	sb|14,x1
4a 000643  400036 272120		tsbbp	lp|L80,*		" GetRegister
aa 000644  000014 000001		zero	12,1
aa 000645  700005 756111		stq	sb|5,x1		" Pr
aa 000646  700002 236111  96		ldq	sb|2,x1		" Pointer
aa 000647  700016 756111		stq	sb|14,x1
4a 000650  400034 272120		tsbbp	lp|L81,*		" SetupAddr
aa 000651  000014 000001		zero	12,1
aa 000652  600464 450100  97		stz	sp|308		" Comment
aa 000653  600544 236100  98		ldq	sp|356		" Tag
aa 000654  000017 376007		anq	15,dl		" TagXrMask
aa 000655  000003 600004		tze	L85
aa 000656  700006 234111		szn	sb|6,x1		" Xr
aa 000657  000006 601004		tnz	L84
			L85:
aa 000660  600544 236100		ldq	sp|356		" Tag
aa 000661  000020 376007		anq	16,dl		" Star
aa 000662  000035 600004		tze	L82
aa 000663  700004 234111		szn	sb|4,x1		" Delta
aa 000664  000033 600004		tze	L82
			L84:
aa 000665  000350 236007  99		ldq	232,dl		" Eapap
aa 000666  700016 756111		stq	sb|14,x1
aa 000667  700005 236111		ldq	sb|5,x1		" Pr
aa 000670  700017 756111		stq	sb|15,x1
4a 000671  400032 272120		tsbbp	lp|L86,*		" FormOpcode
aa 000672  000014 000002		zero	12,2
aa 000673  700007 756111		stq	sb|7,x1
aa 000674  700007 236111		ldq	sb|7,x1
aa 000675  700016 756111		stq	sb|14,x1
4a 000676  400030 272120		tsbbp	lp|L87,*		" Outop
aa 000677  000014 000001		zero	12,1
aa 000700  600520 450100  100		stz	sp|336		" Param
aa 000701  700004 236111		ldq	sb|4,x1		" Delta
aa 000702  600455 756100		stq	sp|301		" Address
aa 000703  700006 236111		ldq	sb|6,x1		" Xr
aa 000704  700016 756111		stq	sb|14,x1
4a 000705  400026 272120		tsbbp	lp|L88,*		" FormTag
aa 000706  000014 000001		zero	12,1
aa 000707  700005 235111		lda	sb|5,x1		" Pr
aa 000710  700016 755111		sta	sb|14,x1
aa 000711  700007 756111		stq	sb|7,x1		" temporary
4a 000712  400026 272120		tsbbp	lp|L88,*		" FormTag
aa 000713  000014 000001		zero	12,1
aa 000714  700007 276111		orq	sb|7,x1
aa 000715  600544 756100		stq	sp|356		" Tag
aa 000716  000021 710004		tra	L83
			L82:
aa 000717  700004 236111  102		ldq	sb|4,x1		" Delta
aa 000720  600455 056100		asq	sp|301		" Address
aa 000721  700006 234111  103		szn	sb|6,x1		" Xr
aa 000722  000015 600004		tze	L89
aa 000723  700006 236111  104		ldq	sb|6,x1		" Xr
aa 000724  700016 756111		stq	sb|14,x1
4a 000725  400026 272120		tsbbp	lp|L88,*		" FormTag
aa 000726  000014 000001		zero	12,1
aa 000727  600544 256100		orsq	sp|356		" Tag
aa 000730  600544 236100  105		ldq	sp|356		" Tag
aa 000731  000020 376007		anq	16,dl		" Star
aa 000732  000005 600004		tze	L90
aa 000733  600544 236100		ldq	sp|356		" Tag
aa 000734  000060 076007		adq	48,dl		" StarThenReg
aa 000735  000020 176007		sbq	16,dl		" Star
aa 000736  600544 756100		stq	sp|356		" Tag
			L90:
			L89:
			L83:
			L76:
aa 000737  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000740  200000 121100		sblx1	bp|0
aa 000741  700001 764111		lprplp	sb|1,x1
aa 000742  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of IsStored

aa 000743  000010 111163		zero	8,37491		" IsStored
aa 000744  123164 157162		zero	42612,56946
aa 000745  145144 000000		zero	51812
			L18:
aa 000746  000000 213000  72		epaq	0		" set lp to linkage section
aa 000747  700026 764161		lprplp	sb|22,*au
aa 000750  200000 021100		adlx1	bp|0		" BCPL save
aa 000751  700000 542111		sprpbp	sb|0,x1
aa 000752  700001 544111		sprplp	sb|1,x1
aa 000753  700422 620111		eax0	sb|274,x1
aa 000754  777760 360003		anx0	-16,du
aa 000755  700025 740100		stx0	sb|21		" end of save sequence

aa 000756  000031 710004  74		tra	L95
			L96:
aa 000757  000001 336007  75		lcq	1,dl		" true
aa 000760  000050 710004  76		tra	L93
			L97:
aa 000761  700002 763111  77		lprpbb	sb|2,x1		" t
aa 000762  300001 235100		lda	bb|1
aa 000763  700012 755111		sta	sb|10,x1
aa 000764  777074 272004		tsbbp	L1+2		" LookupTemp
aa 000765  000010 000001		zero	8,1
aa 000766  700004 756111		stq	sb|4,x1		" h
aa 000767  700004 234111  78		szn	sb|4,x1		" h
aa 000770  000003 601004		tnz	L98
aa 000771  000001 336007		lcq	1,dl		" true
aa 000772  000036 710004		tra	L93
			L98:
aa 000773  700004 765111  79		lprplb	sb|4,x1		" h
aa 000774  500001 235100		lda	lb|1
aa 000775  000216 115007		cmpa	142,dl		" VECAP_S
aa 000776  000003 601004		tnz	L99
aa 000777  000001 336007		lcq	1,dl		" true
aa 001000  000002 710004		tra	L100
			L99:
aa 001001  000000 236007		ldq	0,dl		" false
			L100:
aa 001002  700006 756111		stq	sb|6,x1
aa 001003  700006 236111		ldq	sb|6,x1
aa 001004  000024 710004  80		tra	L93
			L101:
aa 001005  000000 236007		ldq	0,dl		" false
aa 001006  000022 710004		tra	L93
			L95:

	"	Begin switchon

aa 001007  700002 760111		lprpap	sb|2,x1		" t
aa 001010  000000 235100		lda	ap|0
aa 001011  000043 773000		lrl	35
aa 001012  000005 507007		dvf	5,dl		" hash table size
0a 001013  001023 115006		cmpa	L102,ql
aa 001014  777771 601004		tnz	L101
0a 001015  001016 710006		tra	L103,ql
			L103:
aa 001016  777767 710004		tra	L101
aa 001017  777742 710004		tra	L97
aa 001020  777737 710004		tra	L96
aa 001021  777736 710004		tra	L96
aa 001022  777735 710004		tra	L96
			L102:
aa 001023  000000 000000		zero	0
aa 001024  000000 000032		zero	0,26
aa 001025  000000 000010		zero	0,8
aa 001026  000000 000013		zero	0,11
aa 001027  000000 000030		zero	0,24
			L94:
			L93:
aa 001030  700004 756111		stq	sb|4,x1
aa 001031  700004 236111		ldq	sb|4,x1
aa 001032  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001033  200000 121100		sblx1	bp|0
aa 001034  700001 764111		lprplp	sb|1,x1
aa 001035  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of IsAddress

aa 001036  000011 111163		zero	9,37491		" IsAddress
aa 001037  101144 144162		zero	33380,51314
aa 001040  145163 163000		zero	51827,58880
aa 001041  700003 756111  55		stq	sb|3,x1		" temporary
			L17:
aa 001042  000000 213000		epaq	0		" set lp to linkage section
aa 001043  700026 764161		lprplp	sb|22,*au
aa 001044  200000 021100		adlx1	bp|0		" BCPL save
aa 001045  700000 542111		sprpbp	sb|0,x1
aa 001046  700001 544111		sprplp	sb|1,x1
aa 001047  700424 620111		eax0	sb|276,x1
aa 001050  777760 360003		anx0	-16,du
aa 001051  700025 740100		stx0	sb|21		" end of save sequence

aa 001052  000063 710004  57		tra	L108
			L109:
aa 001053  000001 336007  61		lcq	1,dl		" true
aa 001054  000145 710004  62		tra	L106
			L110:
aa 001055  700002 762111  63		lprpbp	sb|2,x1		" t
aa 001056  200001 235100		lda	bp|1
aa 001057  700016 755111		sta	sb|14,x1
aa 001060  777000 272004		tsbbp	L1+2		" LookupTemp
aa 001061  000014 000001		zero	12,1
aa 001062  700004 756111		stq	sb|4,x1		" h
aa 001063  700004 234111  64		szn	sb|4,x1		" h
aa 001064  000003 601004		tnz	L111
aa 001065  000000 236007		ldq	0,dl		" false
aa 001066  000133 710004		tra	L106
			L111:
aa 001067  700004 761111  65		lprpab	sb|4,x1		" h
aa 001070  100001 235100		lda	ab|1
aa 001071  000145 115007		cmpa	101,dl		" REGISTER_S
aa 001072  000011 601004		tnz	L112
aa 001073  700004 763111		lprpbb	sb|4,x1		" h
aa 001074  300002 236100		ldq	bb|2
aa 001075  700016 756111		stq	sb|14,x1
aa 001076  000027 236007		ldq	23,dl		" AnyPr
aa 001077  700017 756111		stq	sb|15,x1
4a 001100  400050 272120		tsbbp	lp|L49,*		" Satisfactory
aa 001101  000014 000002		zero	12,2
aa 001102  000013 710004		tra	L113
			L112:
aa 001103  700004 765111		lprplb	sb|4,x1		" h
aa 001104  500001 236100		ldq	lb|1
aa 001105  000103 116007		cmpq	67,dl		" LVECAP_S
aa 001106  000003 601004		tnz	L114
aa 001107  000001 335007		lca	1,dl		" true
aa 001110  000002 710004		tra	L115
			L114:
aa 001111  000000 235007		lda	0,dl		" false
			L115:
aa 001112  700011 755111		sta	sb|9,x1
aa 001113  700011 235111		lda	sb|9,x1
aa 001114  000044 777000		llr	36		" exchange A and Q
			L113:
aa 001115  700012 756111		stq	sb|10,x1
aa 001116  700012 236111		ldq	sb|10,x1
aa 001117  000102 710004  66		tra	L106
			L116:
aa 001120  000000 236007  68		ldq	0,dl		" false
aa 001121  000100 710004  69		tra	L106
			L117:
aa 001122  000143 235007		lda	99,dl		" UnexpectedCase
aa 001123  700016 755111		sta	sb|14,x1
aa 001124  700002 760111		lprpap	sb|2,x1		" t
aa 001125  000000 235100		lda	ap|0
aa 001126  700017 755111		sta	sb|15,x1
aa 001127  000101 352004		eapbp	L118		" "IsAddress"
aa 001130  700020 542111		sprpbp	sb|16,x1
4a 001131  400052 272120		tsbbp	lp|L38,*		" CGreport
aa 001132  000014 000003		zero	12,3
aa 001133  000000 236007  70		ldq	0,dl		" false
aa 001134  000065 710004		tra	L106
			L108:

	"	Begin switchon

aa 001135  700002 762111		lprpbp	sb|2,x1		" t
aa 001136  200000 235100		lda	bp|0
aa 001137  000107 115007		cmpa	71,dl
aa 001140  000032 604004		tmi	L119
aa 001141  000113 115007		cmpa	75,dl
aa 001142  777711 604004		tmi	L109
aa 001143  000043 773000		lrl	35
aa 001144  000011 507007		dvf	9,dl		" hash table size
0a 001145  001161 115006		cmpa	L120,ql
aa 001146  777754 601004		tnz	L117
0a 001147  001150 710006		tra	L121,ql
			L121:
aa 001150  777703 710004		tra	L109
aa 001151  777747 710004		tra	L116
aa 001152  777750 710004		tra	L117
aa 001153  777747 710004		tra	L117
aa 001154  777677 710004		tra	L109
aa 001155  777700 710004		tra	L110
aa 001156  777675 710004		tra	L109
aa 001157  777741 710004		tra	L116
aa 001160  777740 710004		tra	L116
			L120:
aa 001161  000000 000016		zero	0,14
aa 001162  000000 000012		zero	0,10
aa 001163  000000 000000		zero	0
aa 001164  000000 000000		zero	0
aa 001165  000000 000016		zero	0,14
aa 001166  000000 000016		zero	0,14
aa 001167  000000 000014		zero	0,12
aa 001170  000000 000015		zero	0,13
aa 001171  000000 000016		zero	0,14
			L119:
aa 001172  000036 115007		cmpa	30,dl
aa 001173  000021 604004		tmi	L122
aa 001174  777657 600004		tze	L109
aa 001175  000052 115007		cmpa	42,dl
aa 001176  000013 604004		tmi	L123
aa 001177  777721 600004		tze	L116
aa 001200  000104 115007		cmpa	68,dl
aa 001201  000003 604004		tmi	L124
aa 001202  777651 600004		tze	L109
aa 001203  777717 710004		tra	L117
			L124:
aa 001204  000064 115007		cmpa	52,dl
aa 001205  777646 600004		tze	L109
aa 001206  000072 115007		cmpa	58,dl
aa 001207  777711 600004		tze	L116
aa 001210  777712 710004		tra	L117
			L123:
aa 001211  000037 115007		cmpa	31,dl
aa 001212  777706 600004		tze	L116
aa 001213  777707 710004		tra	L117
			L122:
aa 001214  000013 115007		cmpa	11,dl
aa 001215  777703 600004		tze	L116
aa 001216  000017 115007		cmpa	15,dl
aa 001217  777701 600004		tze	L116
aa 001220  777702 710004		tra	L117
			L107:
			L106:
aa 001221  700004 756111		stq	sb|4,x1
aa 001222  700004 236111		ldq	sb|4,x1
aa 001223  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001224  200000 121100		sblx1	bp|0
aa 001225  700001 764111		lprplp	sb|1,x1
aa 001226  200001 710100		tra	bp|1		" end of return sequence
aa 001227  700003 756111		stq	sb|3,x1		" temporary

	"	Literal pool

			L118:
aa 001230  000011 111163		zero	9,37491		" "IsAddress"
aa 001231  101144 144162		zero	33380,51314
aa 001232  145163 163000		zero	51827,58880
	"	Begin text of IsZero

aa 001233  000006 111163		zero	6,37491		" IsZero
aa 001234  132145 162157		zero	46181,58479
			L16:
aa 001235  000000 213000  54		epaq	0		" set lp to linkage section
aa 001236  700026 764161		lprplp	sb|22,*au
aa 001237  200000 021100		adlx1	bp|0		" BCPL save
aa 001240  700000 542111		sprpbp	sb|0,x1
aa 001241  700001 544111		sprplp	sb|1,x1
aa 001242  700423 620111		eax0	sb|275,x1
aa 001243  777760 360003		anx0	-16,du
aa 001244  700025 740100		stx0	sb|21		" end of save sequence

aa 001245  700002 236111		ldq	sb|2,x1		" t
aa 001246  700014 756111		stq	sb|12,x1
aa 001247  000041 272004		tsbbp	L14+2		" IsNumber
aa 001250  000012 000001		zero	10,1
aa 001251  000000 116007		cmpq	0,dl
aa 001252  000021 600004		tze	L127
aa 001253  700002 761111		lprpab	sb|2,x1		" t
aa 001254  100000 236100		ldq	ab|0
aa 001255  700014 756111		stq	sb|12,x1
aa 001256  700002 763111		lprpbb	sb|2,x1		" t
aa 001257  300001 236100		ldq	bb|1
aa 001260  700015 756111		stq	sb|13,x1
aa 001261  776640 272004		tsbbp	L15+2		" EvalNumber
aa 001262  000012 000002		zero	10,2
aa 001263  000000 116007		cmpq	0,dl
aa 001264  000003 601004		tnz	L129
aa 001265  000001 336007		lcq	1,dl		" true
aa 001266  000002 710004		tra	L130
			L129:
aa 001267  000000 236007		ldq	0,dl		" false
			L130:
aa 001270  700005 756111		stq	sb|5,x1
aa 001271  700005 236111		ldq	sb|5,x1
aa 001272  000002 710004		tra	L128
			L127:
aa 001273  000000 236007		ldq	0,dl		" false
			L128:
aa 001274  700006 756111		stq	sb|6,x1
aa 001275  700006 236111		ldq	sb|6,x1
aa 001276  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001277  200000 121100		sblx1	bp|0
aa 001300  700001 764111		lprplp	sb|1,x1
aa 001301  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of IsNumber

aa 001302  000010 111163		zero	8,37491		" IsNumber
aa 001303  116165 155142		zero	40053,55906
aa 001304  145162 000000		zero	51826
aa 001305  700003 756111  33		stq	sb|3,x1		" temporary
			L14:
aa 001306  000000 213000		epaq	0		" set lp to linkage section
aa 001307  700026 764161		lprplp	sb|22,*au
aa 001310  200000 021100		adlx1	bp|0		" BCPL save
aa 001311  700000 542111		sprpbp	sb|0,x1
aa 001312  700001 544111		sprplp	sb|1,x1
aa 001313  700417 620111		eax0	sb|271,x1
aa 001314  777760 360003		anx0	-16,du
aa 001315  700025 740100		stx0	sb|21		" end of save sequence

aa 001316  000005 710004  35		tra	L135
			L136:
aa 001317  000001 336007  36		lcq	1,dl		" true
aa 001320  000034 710004  37		tra	L133
			L137:
aa 001321  000000 236007		ldq	0,dl		" false
aa 001322  000032 710004		tra	L133
			L135:

	"	Begin switchon

aa 001323  700002 765111		lprplb	sb|2,x1		" t
aa 001324  500000 235100		lda	lb|0
aa 001325  000043 773000		lrl	35
aa 001326  000011 507007		dvf	9,dl		" hash table size
0a 001327  001343 115006		cmpa	L138,ql
aa 001330  777771 601004		tnz	L137
0a 001331  001332 710006		tra	L139,ql
			L139:
aa 001332  777767 710004		tra	L137
aa 001333  777764 710004		tra	L136
aa 001334  777763 710004		tra	L136
aa 001335  777764 710004		tra	L137
aa 001336  777761 710004		tra	L136
aa 001337  777762 710004		tra	L137
aa 001340  777757 710004		tra	L136
aa 001341  777760 710004		tra	L137
aa 001342  777755 710004		tra	L136
			L138:
aa 001343  000000 000000		zero	0
aa 001344  000000 000012		zero	0,10
aa 001345  000000 000001		zero	0,1
aa 001346  000000 000000		zero	0
aa 001347  000000 000003		zero	0,3
aa 001350  000000 000000		zero	0
aa 001351  000000 000001		zero	0,1
aa 001352  000000 000000		zero	0
aa 001353  000000 000016		zero	0,14
			L134:
			L133:
aa 001354  700004 756111		stq	sb|4,x1
aa 001355  700004 236111		ldq	sb|4,x1
aa 001356  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001357  200000 121100		sblx1	bp|0
aa 001360  700001 764111		lprplp	sb|1,x1
aa 001361  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of Complab

aa 001362  000007 103157		zero	7,34415		" Complab
aa 001363  155160 154141		zero	55920,55393
aa 001364  142000 000000		zero	50176
aa 001365  700003 756111  140		stq	sb|3,x1		" temporary
			L140:
aa 001366  000000 213000		epaq	0		" set lp to linkage section
aa 001367  700026 764161		lprplp	sb|22,*au
aa 001370  200000 021100		adlx1	bp|0		" BCPL save
aa 001371  700000 542111		sprpbp	sb|0,x1
aa 001372  700001 544111		sprplp	sb|1,x1
aa 001373  700424 620111		eax0	sb|276,x1
aa 001374  777760 360003		anx0	-16,du
aa 001375  700025 740100		stx0	sb|21		" end of save sequence

aa 001376  600466 234100  141		szn	sp|310		" DeferredJumpLabel
aa 001377  000014 600004		tze	L155
aa 001400  600466 236100  142		ldq	sp|310		" DeferredJumpLabel
aa 001401  700002 116111		cmpq	sb|2,x1		" L
aa 001402  000010 600004		tze	L156
aa 001403  600474 450100  143		stz	sp|316		" Jumpsw
aa 001404  000710 235007  144		lda	456,dl		" Tra
aa 001405  700006 755111		sta	sb|6,x1
aa 001406  600466 235100		lda	sp|310		" DeferredJumpLabel
aa 001407  700007 755111		sta	sb|7,x1
4a 001410  400024 272120		tsbbp	lp|L157,*		" Outop2
aa 001411  000004 000002		zero	4,2
			L156:
aa 001412  600466 450100  146		stz	sp|310		" DeferredJumpLabel
			L155:
aa 001413  000305 272004  148		tsbbp	L146+2		" ClearRegisters
aa 001414  000004 000000		zero	4
aa 001415  000263 272004  149		tsbbp	L145+2		" ClearMemory
aa 001416  000004 000000		zero	4
aa 001417  600144 234100  150		szn	sp|100		" Listing
aa 001420  000011 600004		tze	L158
aa 001421  600040 235100		lda	sp|32		" OUTPUT
aa 001422  700006 755111		sta	sb|6,x1
aa 001423  000032 350004		eapap	L159		" "L^d:"
aa 001424  700007 540111		sprpap	sb|7,x1
aa 001425  700002 235111		lda	sb|2,x1		" L
aa 001426  700010 755111		sta	sb|8,x1
4a 001427  400022 272120		tsbbp	lp|L160,*		" Format
aa 001430  000004 000003		zero	4,3
			L158:
aa 001431  000004 235007  151		lda	4,dl		" LabelSwitch
aa 001432  700006 755111		sta	sb|6,x1
aa 001433  700002 235111		lda	sb|2,x1		" L
aa 001434  700007 755111		sta	sb|7,x1
aa 001435  600501 235100		lda	sp|321		" LC
aa 001436  700010 755111		sta	sb|8,x1
4a 001437  400020 272120		tsbbp	lp|L161,*		" PutCode
aa 001440  000004 000003		zero	4,3
aa 001441  700002 235111  152		lda	sb|2,x1		" L
aa 001442  700006 755111		sta	sb|6,x1
aa 001443  600501 235100		lda	sp|321		" LC
aa 001444  700007 755111		sta	sb|7,x1
aa 001445  000017 272004		tsbbp	L141+2		" DefineLab
aa 001446  000004 000002		zero	4,2
aa 001447  600474 450100  153		stz	sp|316		" Jumpsw
aa 001450  600473 450100		stz	sp|315		" IndicatorsSetBy
			L154:
aa 001451  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001452  200000 121100		sblx1	bp|0
aa 001453  700001 764111		lprplp	sb|1,x1
aa 001454  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L159:
aa 001455  000004 114136		zero	4,39006		" "L^d:"
aa 001456  144072 000000		zero	51258
	"	Begin text of DefineLab

aa 001457  000011 104145		zero	9,34917		" DefineLab
aa 001460  146151 156145		zero	52329,56421
aa 001461  114141 142000		zero	39009,50176
			L141:
aa 001462  000000 213000  155		epaq	0		" set lp to linkage section
aa 001463  700026 764161		lprplp	sb|22,*au
aa 001464  200000 021100		adlx1	bp|0		" BCPL save
aa 001465  700000 542111		sprpbp	sb|0,x1
aa 001466  700001 544111		sprplp	sb|1,x1
aa 001467  700423 620111		eax0	sb|275,x1
aa 001470  777760 360003		anx0	-16,du
aa 001471  700025 740100		stx0	sb|21		" end of save sequence

aa 001472  700002 235111  156		lda	sb|2,x1		" L
aa 001473  700010 755111		sta	sb|8,x1
aa 001474  000060 272004		tsbbp	L143+2		" LabelCell
aa 001475  000006 000001		zero	6,1
aa 001476  700004 756111		stq	sb|4,x1		" P
aa 001477  700004 760111  157		lprpap	sb|4,x1		" P
aa 001500  000000 234100		szn	ap|0
aa 001501  000007 600004		tze	L165
aa 001502  000460 236007		ldq	304,dl		" DupLabel
aa 001503  700010 756111		stq	sb|8,x1
aa 001504  700002 236111		ldq	sb|2,x1		" L
aa 001505  700011 756111		stq	sb|9,x1
4a 001506  400052 272120		tsbbp	lp|L38,*		" CGreport
aa 001507  000006 000002		zero	6,2
			L165:
aa 001510  000001 236003  158		ldq	1,du
aa 001511  700003 276111		orq	sb|3,x1		" n
aa 001512  700004 762111		lprpbp	sb|4,x1		" P
aa 001513  200000 756100		stq	bp|0		" P
			L164:
aa 001514  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001515  200000 121100		sblx1	bp|0
aa 001516  700001 764111		lprplp	sb|1,x1
aa 001517  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of LookupLabel

aa 001520  000013 114157		zero	11,39023		" LookupLabel
aa 001521  157153 165160		zero	56939,60016
aa 001522  114141 142145		zero	39009,50277
aa 001523  154000 000000		zero	55296
			L142:
aa 001524  000000 213000  160		epaq	0		" set lp to linkage section
aa 001525  700026 764161		lprplp	sb|22,*au
aa 001526  200000 021100		adlx1	bp|0		" BCPL save
aa 001527  700000 542111		sprpbp	sb|0,x1
aa 001530  700001 544111		sprplp	sb|1,x1
aa 001531  700422 620111		eax0	sb|274,x1
aa 001532  777760 360003		anx0	-16,du
aa 001533  700025 740100		stx0	sb|21		" end of save sequence

aa 001534  700002 236111		ldq	sb|2,x1		" L
aa 001535  700010 756111		stq	sb|8,x1
aa 001536  000016 272004		tsbbp	L143+2		" LabelCell
aa 001537  000006 000001		zero	6,1
aa 001540  700004 756111		stq	sb|4,x1		" temporary
aa 001541  700004 761111		lprpab	sb|4,x1
aa 001542  100000 236100		ldq	ab|0
aa 001543  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001544  200000 121100		sblx1	bp|0
aa 001545  700001 764111		lprplp	sb|1,x1
aa 001546  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of LabelCell

aa 001547  000011 114141		zero	9,39009		" LabelCell
aa 001550  142145 154103		zero	50277,55363
aa 001551  145154 154000		zero	51820,55296
			L143:
aa 001552  000000 213000  161		epaq	0		" set lp to linkage section
aa 001553  700026 764161		lprplp	sb|22,*au
aa 001554  200000 021100		adlx1	bp|0		" BCPL save
aa 001555  700000 542111		sprpbp	sb|0,x1
aa 001556  700001 544111		sprplp	sb|1,x1
aa 001557  700423 620111		eax0	sb|275,x1
aa 001560  777760 360003		anx0	-16,du
aa 001561  700025 740100		stx0	sb|21		" end of save sequence

aa 001562  700002 234111  162		szn	sb|2,x1		" L
aa 001563  000004 604404		tmoz	L172
aa 001564  700002 235111		lda	sb|2,x1		" L
aa 001565  023420 115007		cmpa	10000,dl
aa 001566  000010 604004		tmi	L171
			L172:
aa 001567  000455 236007  163		ldq	301,dl		" BadLabel
aa 001570  700012 756111		stq	sb|10,x1
aa 001571  700002 236111		ldq	sb|2,x1		" L
aa 001572  700013 756111		stq	sb|11,x1
4a 001573  400052 272120		tsbbp	lp|L38,*		" CGreport
aa 001574  000010 000002		zero	8,2
aa 001575  700002 450111  164		stz	sb|2,x1		" L
			L171:
aa 001576  700002 236111  166		ldq	sb|2,x1		" L
aa 001577  000144 506007		div	100,dl		" 100
aa 001600  700004 756111		stq	sb|4,x1		" Q
aa 001601  700004 725111  167		lxl5	sb|4,x1		" Q
aa 001602  600500 763100		lprpbb	sp|320		" LabTable
aa 001603  300000 236115		ldq	bb|0,x5
aa 001604  700005 756111		stq	sb|5,x1		" P
aa 001605  700005 234111  168		szn	sb|5,x1		" P
aa 001606  000023 601004		tnz	L173
aa 001607  000143 236007  169		ldq	99,dl
aa 001610  700012 756111		stq	sb|10,x1
4a 001611  400060 272120		tsbbp	lp|L7,*		" Newvec
aa 001612  000010 000001		zero	8,1
aa 001613  700005 756111		stq	sb|5,x1		" P
aa 001614  700006 450111  170		stz	sb|6,x1		" i
aa 001615  000005 710004		tra	L174
			L175:
aa 001616  700006 726111		lxl6	sb|6,x1		" i
aa 001617  700005 765111		lprplb	sb|5,x1		" P
aa 001620  500000 450116		stz	lb|0,x6
aa 001621  700006 054111		aos	sb|6,x1		" i
			L174:
aa 001622  700006 236111		ldq	sb|6,x1		" i
aa 001623  000143 116007		cmpq	99,dl
aa 001624  777772 604404		tmoz	L175
aa 001625  700005 235111  171		lda	sb|5,x1		" P
aa 001626  700004 722111		lxl2	sb|4,x1		" Q
aa 001627  600500 760100		lprpap	sp|320		" LabTable
aa 001630  000000 755112		sta	ap|0,x2
			L173:
aa 001631  700002 236111  173		ldq	sb|2,x1		" L
aa 001632  000144 506007		div	100,dl		" 100
aa 001633  700005 762111		lprpbp	sb|5,x1		" P
aa 001634  200000 352105		eapbp	bp|0,al
			L170:
aa 001635  700004 542111		sprpbp	sb|4,x1
aa 001636  700004 235111		lda	sb|4,x1
aa 001637  000044 777000		llr	36		" exchange A and Q
aa 001640  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001641  200000 121100		sblx1	bp|0
aa 001642  700001 764111		lprplp	sb|1,x1
aa 001643  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of Compjump

aa 001644  000010 103157		zero	8,34415		" Compjump
aa 001645  155160 152165		zero	55920,54389
aa 001646  155160 000000		zero	55920
aa 001647  700003 756111  175		stq	sb|3,x1		" temporary
			L144:
aa 001650  000000 213000		epaq	0		" set lp to linkage section
aa 001651  700026 764161		lprplp	sb|22,*au
aa 001652  200000 021100		adlx1	bp|0		" BCPL save
aa 001653  700000 542111		sprpbp	sb|0,x1
aa 001654  700001 544111		sprplp	sb|1,x1
aa 001655  700417 620111		eax0	sb|271,x1
aa 001656  777760 360003		anx0	-16,du
aa 001657  700025 740100		stx0	sb|21		" end of save sequence

aa 001660  600474 234100  176		szn	sp|316		" Jumpsw
aa 001661  000003 601004		tnz	L179
aa 001662  700002 236111		ldq	sb|2,x1		" n
aa 001663  600466 756100		stq	sp|310		" DeferredJumpLabel
			L179:
aa 001664  000001 336007  177		lcq	1,dl		" true
aa 001665  600474 756100		stq	sp|316		" Jumpsw
			L178:
aa 001666  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001667  200000 121100		sblx1	bp|0
aa 001670  700001 764111		lprplp	sb|1,x1
aa 001671  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of ClearMemory

aa 001672  000013 103154		zero	11,34412		" ClearMemory
aa 001673  145141 162115		zero	51809,58445
aa 001674  145155 157162		zero	51821,56946
aa 001675  171000 000000		zero	61952
			L145:
aa 001676  000000 213000  179		epaq	0		" set lp to linkage section
aa 001677  700026 764161		lprplp	sb|22,*au
aa 001700  200000 021100		adlx1	bp|0		" BCPL save
aa 001701  700000 542111		sprpbp	sb|0,x1
aa 001702  700001 544111		sprplp	sb|1,x1
aa 001703  700417 620111		eax0	sb|271,x1
aa 001704  777760 360003		anx0	-16,du
aa 001705  700025 740100		stx0	sb|21		" end of save sequence

			L182:
aa 001706  700000 762111  180		lprpbp	sb|0,x1		" bcpl return
aa 001707  200000 121100		sblx1	bp|0
aa 001710  700001 764111		lprplp	sb|1,x1
aa 001711  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of ClearRegisters

aa 001712  000016 103154		zero	14,34412		" ClearRegisters
aa 001713  145141 162122		zero	51809,58450
aa 001714  145147 151163		zero	51815,53875
aa 001715  164145 162163		zero	59493,58483
			L146:
aa 001716  000000 213000  181		epaq	0		" set lp to linkage section
aa 001717  700026 764161		lprplp	sb|22,*au
aa 001720  200000 021100		adlx1	bp|0		" BCPL save
aa 001721  700000 542111		sprpbp	sb|0,x1
aa 001722  700001 544111		sprplp	sb|1,x1
aa 001723  700422 620111		eax0	sb|274,x1
aa 001724  777760 360003		anx0	-16,du
aa 001725  700025 740100		stx0	sb|21		" end of save sequence

aa 001726  000022 352004  182		eapbp	L186		" a table
aa 001727  700002 542111		sprpbp	sb|2,x1		" T
aa 001730  700003 450111  183		stz	sb|3,x1		" i
aa 001731  000010 710004		tra	L187
			L188:
aa 001732  700003 723111		lxl3	sb|3,x1		" i
aa 001733  700002 762111		lprpbp	sb|2,x1		" T
aa 001734  200000 236113		ldq	bp|0,x3
aa 001735  700010 756111		stq	sb|8,x1
4a 001736  400036 272120		tsbbp	lp|L80,*		" GetRegister
aa 001737  000006 000001		zero	6,1
aa 001740  700003 054111		aos	sb|3,x1		" i
			L187:
aa 001741  700003 236111		ldq	sb|3,x1		" i
aa 001742  000014 116007		cmpq	12,dl		" 12
aa 001743  777767 604404		tmoz	L188
			L185:
aa 001744  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001745  200000 121100		sblx1	bp|0
aa 001746  700001 764111		lprplp	sb|1,x1
aa 001747  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L186:
aa 001750  000000 000005		zero	0,5		" a table
aa 001751  000000 000006		zero	0,6
aa 001752  000000 000007		zero	0,7
aa 001753  000000 000010		zero	0,8
aa 001754  000000 000011		zero	0,9
aa 001755  000000 000013		zero	0,11
aa 001756  000000 000014		zero	0,12
aa 001757  000000 000015		zero	0,13
aa 001760  000000 000016		zero	0,14
aa 001761  000000 000020		zero	0,16
aa 001762  000000 000001		zero	0,1
aa 001763  000000 000002		zero	0,2
aa 001764  000000 000023		zero	0,19
	"	Begin text of PutOneLiteral

aa 001765  000015 120165		zero	13,41077		" PutOneLiteral
aa 001766  164117 156145		zero	59471,56421
aa 001767  114151 164145		zero	39017,59493
aa 001770  162141 154000		zero	58465,55296
			L149:
aa 001771  000000 213000  226		epaq	0		" set lp to linkage section
aa 001772  700026 764161		lprplp	sb|22,*au
aa 001773  200000 021100		adlx1	bp|0		" BCPL save
aa 001774  700000 542111		sprpbp	sb|0,x1
aa 001775  700001 544111		sprplp	sb|1,x1
aa 001776  700422 620111		eax0	sb|274,x1
aa 001777  777760 360003		anx0	-16,du
aa 002000  700025 740100		stx0	sb|21		" end of save sequence

aa 002001  600515 351500  227		eapab	sp|333		" NewLiteralsList
aa 002002  700003 541111		sprpab	sb|3,x1		" u
aa 002003  000005 710004  228		tra	L192
			L193:
aa 002004  700003 761111		lprpab	sb|3,x1		" u
aa 002005  100000 761100		lprpab	ab|0
aa 002006  100004 351500		eapab	ab|4
aa 002007  700003 541111		sprpab	sb|3,x1		" u
			L192:
aa 002010  700003 761111		lprpab	sb|3,x1		" u
aa 002011  100000 235100		lda	ab|0
aa 002012  700002 115111		cmpa	sb|2,x1		" t
aa 002013  777771 601004		tnz	L193
aa 002014  700002 763111  229		lprpbb	sb|2,x1		" t
aa 002015  300004 236100		ldq	bb|4
aa 002016  700003 765111		lprplb	sb|3,x1		" u
aa 002017  500000 756100		stq	lb|0		" u
aa 002020  700002 760111  230		lprpap	sb|2,x1		" t
aa 002021  000002 236100		ldq	ap|2
aa 002022  600464 756100		stq	sp|308		" Comment
aa 002023  700002 762111  231		lprpbp	sb|2,x1		" t
aa 002024  200000 236100		ldq	bp|0
aa 002025  700004 756111		stq	sb|4,x1		" P
aa 002026  700005 450111  232		stz	sb|5,x1		" i
aa 002027  700002 761111		lprpab	sb|2,x1		" t
aa 002030  100001 236100		ldq	ab|1
aa 002031  000001 736000		qls	1
aa 002032  000002 176007		sbq	2,dl		" 2
aa 002033  700006 756111		stq	sb|6,x1
aa 002034  000024 710004		tra	L194
			L195:
aa 002035  700005 724111  233		lxl4	sb|5,x1		" i
aa 002036  700004 763111		lprpbb	sb|4,x1		" P
aa 002037  300000 234114		szn	bb|0,x4
aa 002040  000007 600004		tze	L196
aa 002041  700005 725111		lxl5	sb|5,x1		" i
aa 002042  700004 765111		lprplb	sb|4,x1		" P
aa 002043  500000 236115		ldq	lb|0,x5
aa 002044  700016 756111		stq	sb|14,x1
aa 002045  777323 272004		tsbbp	L140+2		" Complab
aa 002046  000014 000001		zero	12,1
			L196:
aa 002047  700005 236111  234		ldq	sb|5,x1		" i
aa 002050  000001 076007		adq	1,dl		" 1
aa 002051  700004 760111		lprpap	sb|4,x1		" P
aa 002052  000000 235106		lda	ap|0,ql
aa 002053  700016 755111		sta	sb|14,x1
4a 002054  400016 272120		tsbbp	lp|L197,*		" OutData
aa 002055  000014 000001		zero	12,1
aa 002056  000002 236007		ldq	2,dl		" 2
aa 002057  700005 056111		asq	sb|5,x1		" i
			L194:
aa 002060  700005 236111		ldq	sb|5,x1		" i
aa 002061  700006 116111		cmpq	sb|6,x1
aa 002062  777753 604404		tmoz	L195
aa 002063  600517 235100  236		lda	sp|335		" OldLiteralsList
aa 002064  700002 762111		lprpbp	sb|2,x1		" t
aa 002065  200004 755100		sta	bp|4
aa 002066  700002 235111  237		lda	sb|2,x1		" t
aa 002067  600517 755100		sta	sp|335		" OldLiteralsList
			L191:
aa 002070  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002071  200000 121100		sblx1	bp|0
aa 002072  700001 764111		lprplp	sb|1,x1
aa 002073  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of CombineLiteral

aa 002074  000016 103157		zero	14,34415		" CombineLiteral
aa 002075  155142 151156		zero	55906,53870
aa 002076  145114 151164		zero	51788,53876
aa 002077  145162 141154		zero	51826,49772
			L151:
aa 002100  000000 213000  264		epaq	0		" set lp to linkage section
aa 002101  700026 764161		lprplp	sb|22,*au
aa 002102  200000 021100		adlx1	bp|0		" BCPL save
aa 002103  700000 542111		sprpbp	sb|0,x1
aa 002104  700001 544111		sprplp	sb|1,x1
aa 002105  700423 620111		eax0	sb|275,x1
aa 002106  777760 360003		anx0	-16,du
aa 002107  700025 740100		stx0	sb|21		" end of save sequence

aa 002110  700002 761111  265		lprpab	sb|2,x1		" New
aa 002111  100000 235100		lda	ab|0
aa 002112  700005 755111		sta	sb|5,x1		" Ndata
aa 002113  700003 763111		lprpbb	sb|3,x1		" Old
aa 002114  300000 235100		lda	bb|0
aa 002115  700006 755111		sta	sb|6,x1		" Odata
aa 002116  700007 450111  266		stz	sb|7,x1		" i
aa 002117  700003 765111		lprplb	sb|3,x1		" Old
aa 002120  500001 235100		lda	lb|1
aa 002121  700002 760111		lprpap	sb|2,x1		" New
aa 002122  000001 175100		sba	ap|1
aa 002123  700010 755111		sta	sb|8,x1
aa 002124  000173 710004		tra	L202
			L203:
aa 002125  700013 450111  267		stz	sb|11,x1		" j
aa 002126  700002 762111		lprpbp	sb|2,x1		" New
aa 002127  200001 235100		lda	bp|1
aa 002130  000001 175007		sba	1,dl		" 1
aa 002131  700014 755111		sta	sb|12,x1
aa 002132  000033 710004		tra	L204
			L205:
aa 002133  700013 235111		lda	sb|11,x1		" j
aa 002134  000001 735000		als	1
aa 002135  000001 075007		ada	1,dl		" 1
aa 002136  700007 236111		ldq	sb|7,x1		" i
aa 002137  700013 076111		adq	sb|11,x1		" j
aa 002140  000001 736000		qls	1
aa 002141  000001 076007		adq	1,dl		" 1
aa 002142  700017 755111		sta	sb|15,x1		" temporary
aa 002143  700017 726111		lxl6	sb|15,x1
aa 002144  700005 761111		lprpab	sb|5,x1		" Ndata
aa 002145  100000 235116		lda	ab|0,x6
aa 002146  700006 763111		lprpbb	sb|6,x1		" Odata
aa 002147  300000 115106		cmpa	bb|0,ql
aa 002150  000146 601004		tnz	L198
aa 002151  700013 236111		ldq	sb|11,x1		" j
aa 002152  000001 736000		qls	1
aa 002153  700005 765111		lprplb	sb|5,x1		" Ndata
aa 002154  500000 234106		szn	lb|0,ql
aa 002155  000007 600004		tze	L206
aa 002156  700007 236111		ldq	sb|7,x1		" i
aa 002157  700013 076111		adq	sb|11,x1		" j
aa 002160  000001 736000		qls	1
aa 002161  700006 760111		lprpap	sb|6,x1		" Odata
aa 002162  000000 234106		szn	ap|0,ql
aa 002163  000133 601004		tnz	L198
			L206:
aa 002164  700013 054111		aos	sb|11,x1		" j
			L204:
aa 002165  700013 236111		ldq	sb|11,x1		" j
aa 002166  700014 116111		cmpq	sb|12,x1
aa 002167  777744 604404		tmoz	L205
aa 002170  700002 762111  269		lprpbp	sb|2,x1		" New
aa 002171  200003 234100		szn	bp|3
aa 002172  000024 600004		tze	L207
aa 002173  700003 761111		lprpab	sb|3,x1		" Old
aa 002174  100003 234100		szn	ab|3
aa 002175  000011 600004		tze	L208
aa 002176  700002 763111  270		lprpbb	sb|2,x1		" New
aa 002177  300003 235100		lda	bb|3
aa 002200  700003 765111		lprplb	sb|3,x1		" Old
aa 002201  500003 075100		ada	lb|3
aa 002202  700007 075111		ada	sb|7,x1		" i
aa 002203  000001 375007		ana	1,dl		" 1
aa 002204  000112 601004		tnz	L198
aa 002205  000011 710004		tra	L209
			L208:
aa 002206  700002 760111  271		lprpap	sb|2,x1		" New
aa 002207  000003 235100		lda	ap|3
aa 002210  700007 075111		ada	sb|7,x1		" i
aa 002211  000001 375007		ana	1,dl		" 1
aa 002212  000002 175007		sba	2,dl		" 2
aa 002213  000000 531007		neg	0,dl
aa 002214  700003 762111		lprpbp	sb|3,x1		" Old
aa 002215  200003 755100		sta	bp|3
			L209:
			L207:
aa 002216  700013 450111  272		stz	sb|11,x1		" j
aa 002217  700002 761111		lprpab	sb|2,x1		" New
aa 002220  100001 235100		lda	ab|1
aa 002221  000001 175007		sba	1,dl		" 1
aa 002222  700014 755111		sta	sb|12,x1
aa 002223  000022 710004		tra	L210
			L211:
aa 002224  700013 235111		lda	sb|11,x1		" j
aa 002225  000001 735000		als	1
aa 002226  700005 763111		lprpbb	sb|5,x1		" Ndata
aa 002227  300000 234105		szn	bb|0,al
aa 002230  000014 600004		tze	L212
aa 002231  700007 235111		lda	sb|7,x1		" i
aa 002232  700013 075111		ada	sb|11,x1		" j
aa 002233  000001 735000		als	1
aa 002234  700013 236111		ldq	sb|11,x1		" j
aa 002235  000001 736000		qls	1
aa 002236  700017 755111		sta	sb|15,x1		" temporary
aa 002237  700005 765111		lprplb	sb|5,x1		" Ndata
aa 002240  500000 235106		lda	lb|0,ql
aa 002241  700017 722111		lxl2	sb|15,x1
aa 002242  700006 760111		lprpap	sb|6,x1		" Odata
aa 002243  000000 755112		sta	ap|0,x2
			L212:
aa 002244  700013 054111		aos	sb|11,x1		" j
			L210:
aa 002245  700013 236111		ldq	sb|11,x1		" j
aa 002246  700014 116111		cmpq	sb|12,x1
aa 002247  777755 604404		tmoz	L211
aa 002250  700006 762111  273		lprpbp	sb|6,x1		" Odata
aa 002251  200000 235100		lda	bp|0
aa 002252  600520 755100		sta	sp|336		" Param
aa 002253  700007 235111		lda	sb|7,x1		" i
aa 002254  600455 755100		sta	sp|301		" Address
aa 002255  600544 450100		stz	sp|356		" Tag
aa 002256  600515 351500  274		eapab	sp|333		" NewLiteralsList
aa 002257  700014 541111		sprpab	sb|12,x1		" u
aa 002260  000005 710004  275		tra	L213
			L214:
aa 002261  700014 761111		lprpab	sb|12,x1		" u
aa 002262  100000 761100		lprpab	ab|0
aa 002263  100004 351500		eapab	ab|4
aa 002264  700014 541111		sprpab	sb|12,x1		" u
			L213:
aa 002265  700014 761111		lprpab	sb|12,x1		" u
aa 002266  100000 235100		lda	ab|0
aa 002267  700002 115111		cmpa	sb|2,x1		" New
aa 002270  777771 601004		tnz	L214
aa 002271  700002 763111  276		lprpbb	sb|2,x1		" New
aa 002272  300004 236100		ldq	bb|4
aa 002273  700014 765111		lprplb	sb|12,x1		" u
aa 002274  500000 756100		stq	lb|0		" u
aa 002275  700005 236111  277		ldq	sb|5,x1		" Ndata
aa 002276  700030 756111		stq	sb|24,x1
aa 002277  700002 760111		lprpap	sb|2,x1		" New
aa 002300  000001 236100		ldq	ap|1
aa 002301  000001 736000		qls	1
aa 002302  000001 176007		sbq	1,dl		" 1
aa 002303  700031 756111		stq	sb|25,x1
4a 002304  400042 272120		tsbbp	lp|L73,*		" Freevec
aa 002305  000026 000002		zero	22,2
aa 002306  700002 236111  278		ldq	sb|2,x1		" New
aa 002307  700030 756111		stq	sb|24,x1
aa 002310  000004 236007		ldq	4,dl		" 4
aa 002311  700031 756111		stq	sb|25,x1
4a 002312  400042 272120		tsbbp	lp|L73,*		" Freevec
aa 002313  000026 000002		zero	22,2
aa 002314  000001 336007  279		lcq	1,dl		" true
aa 002315  000006 710004  280		tra	L201
			L198:
aa 002316  700007 054111		aos	sb|7,x1		" i
			L202:
aa 002317  700007 235111		lda	sb|7,x1		" i
aa 002320  700010 115111		cmpa	sb|8,x1
aa 002321  777604 604404		tmoz	L203
aa 002322  000000 236007  282		ldq	0,dl		" false
			L201:
aa 002323  700005 756111		stq	sb|5,x1
aa 002324  700005 236111		ldq	sb|5,x1
aa 002325  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002326  200000 121100		sblx1	bp|0
aa 002327  700001 764111		lprplp	sb|1,x1
aa 002330  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of AddLiteral

aa 002331  000012 101144		zero	10,33380		" AddLiteral
aa 002332  144114 151164		zero	51276,53876
aa 002333  145162 141154		zero	51826,49772
aa 002334  700004 756111  240		stq	sb|4,x1		" temporary
			L150:
aa 002335  000000 213000		epaq	0		" set lp to linkage section
aa 002336  700026 764161		lprplp	sb|22,*au
aa 002337  200000 021100		adlx1	bp|0		" BCPL save
aa 002340  700000 542111		sprpbp	sb|0,x1
aa 002341  700001 544111		sprplp	sb|1,x1
aa 002342  700423 620111		eax0	sb|275,x1
aa 002343  777760 360003		anx0	-16,du
aa 002344  700025 740100		stx0	sb|21		" end of save sequence

aa 002345  700003 236111  241		ldq	sb|3,x1		" Len
aa 002346  000001 736000		qls	1
aa 002347  000001 176007		sbq	1,dl		" 1
aa 002350  700022 756111		stq	sb|18,x1
4a 002351  400060 272120		tsbbp	lp|L7,*		" Newvec
aa 002352  000020 000001		zero	16,1
aa 002353  700006 756111		stq	sb|6,x1		" Data
aa 002354  000004 236007		ldq	4,dl		" 4
aa 002355  700022 756111		stq	sb|18,x1
4a 002356  400060 272120		tsbbp	lp|L7,*		" Newvec
aa 002357  000020 000001		zero	16,1
aa 002360  700007 756111		stq	sb|7,x1		" Ent
aa 002361  700010 450111  242		stz	sb|8,x1		" i
aa 002362  700003 236111		ldq	sb|3,x1		" Len
aa 002363  000001 176007		sbq	1,dl		" 1
aa 002364  700011 756111		stq	sb|9,x1
aa 002365  000016 710004		tra	L218
			L219:
aa 002366  700010 236111		ldq	sb|8,x1		" i
aa 002367  000001 736000		qls	1
aa 002370  700006 762111		lprpbp	sb|6,x1		" Data
aa 002371  200000 450106		stz	bp|0,ql
aa 002372  700010 236111		ldq	sb|8,x1		" i
aa 002373  000001 736000		qls	1
aa 002374  000001 076007		adq	1,dl		" 1
aa 002375  700010 723111		lxl3	sb|8,x1		" i
aa 002376  700002 761111		lprpab	sb|2,x1		" P
aa 002377  100000 235113		lda	ab|0,x3
aa 002400  700006 763111		lprpbb	sb|6,x1		" Data
aa 002401  300000 755106		sta	bb|0,ql
aa 002402  700010 054111		aos	sb|8,x1		" i
			L218:
aa 002403  700010 236111		ldq	sb|8,x1		" i
aa 002404  700011 116111		cmpq	sb|9,x1
aa 002405  777761 604404		tmoz	L219
aa 002406  600515 235100  243		lda	sp|333		" NewLiteralsList
aa 002407  700007 765111		lprplb	sb|7,x1		" Ent
aa 002410  500004 755100		sta	lb|4
aa 002411  700006 235111		lda	sb|6,x1		" Data
aa 002412  700007 760111		lprpap	sb|7,x1		" Ent
aa 002413  000000 755100		sta	ap|0
aa 002414  700005 235111		lda	sb|5,x1		" Alignment
aa 002415  700007 762111		lprpbp	sb|7,x1		" Ent
aa 002416  200003 755100		sta	bp|3
aa 002417  700004 235111		lda	sb|4,x1		" C
aa 002420  700007 761111		lprpab	sb|7,x1		" Ent
aa 002421  100002 755100		sta	ab|2
aa 002422  700003 235111		lda	sb|3,x1		" Len
aa 002423  700007 763111		lprpbb	sb|7,x1		" Ent
aa 002424  300001 755100		sta	bb|1
aa 002425  700007 235111  244		lda	sb|7,x1		" Ent
aa 002426  600515 755100		sta	sp|333		" NewLiteralsList
aa 002427  700007 765111  246		lprplb	sb|7,x1		" Ent
aa 002430  500004 235100		lda	lb|4
aa 002431  700011 755111		sta	sb|9,x1		" t
aa 002432  000014 710004  247		tra	L220
			L221:
aa 002433  700007 235111  248		lda	sb|7,x1		" Ent
aa 002434  700022 755111		sta	sb|18,x1
aa 002435  700011 235111		lda	sb|9,x1		" t
aa 002436  700023 755111		sta	sb|19,x1
aa 002437  777443 272004		tsbbp	L151+2		" CombineLiteral
aa 002440  000020 000002		zero	16,2
aa 002441  000000 116007		cmpq	0,dl
aa 002442  000063 601004		tnz	L217
aa 002443  700011 760111  249		lprpap	sb|9,x1		" t
aa 002444  000004 236100		ldq	ap|4
aa 002445  700011 756111		stq	sb|9,x1		" t
			L220:
aa 002446  700011 234111		szn	sb|9,x1		" t
aa 002447  777764 601004		tnz	L221
aa 002450  600517 236100  251		ldq	sp|335		" OldLiteralsList
aa 002451  700011 756111		stq	sb|9,x1		" t
aa 002452  000014 710004  252		tra	L222
			L223:
aa 002453  700007 236111  253		ldq	sb|7,x1		" Ent
aa 002454  700022 756111		stq	sb|18,x1
aa 002455  700011 236111		ldq	sb|9,x1		" t
aa 002456  700023 756111		stq	sb|19,x1
aa 002457  777423 272004		tsbbp	L151+2		" CombineLiteral
aa 002460  000020 000002		zero	16,2
aa 002461  000000 116007		cmpq	0,dl
aa 002462  000043 601004		tnz	L217
aa 002463  700011 762111  254		lprpbp	sb|9,x1		" t
aa 002464  200004 236100		ldq	bp|4
aa 002465  700011 756111		stq	sb|9,x1		" t
			L222:
aa 002466  700011 234111		szn	sb|9,x1		" t
aa 002467  777764 601004		tnz	L223
aa 002470  700007 761111  256		lprpab	sb|7,x1		" Ent
aa 002471  100004 236100		ldq	ab|4
aa 002472  700011 756111		stq	sb|9,x1		" t
aa 002473  000012 710004  257		tra	L224
			L225:
aa 002474  700011 236111  258		ldq	sb|9,x1		" t
aa 002475  700022 756111		stq	sb|18,x1
aa 002476  700007 236111		ldq	sb|7,x1		" Ent
aa 002477  700023 756111		stq	sb|19,x1
aa 002500  777402 272004		tsbbp	L151+2		" CombineLiteral
aa 002501  000020 000002		zero	16,2
aa 002502  700011 763111  259		lprpbb	sb|9,x1		" t
aa 002503  300004 236100		ldq	bb|4
aa 002504  700011 756111		stq	sb|9,x1		" t
			L224:
aa 002505  700011 234111		szn	sb|9,x1		" t
aa 002506  777766 601004		tnz	L225
aa 002507  700006 765111  261		lprplb	sb|6,x1		" Data
aa 002510  500000 234100		szn	lb|0
aa 002511  000005 601004		tnz	L226
4a 002512  400014 272120		tsbbp	lp|L227,*		" Nextparam
aa 002513  000020 000000		zero	16
aa 002514  700006 760111		lprpap	sb|6,x1		" Data
aa 002515  000000 756100		stq	ap|0
			L226:
aa 002516  600544 450100  262		stz	sp|356		" Tag
aa 002517  600455 450100		stz	sp|301		" Address
aa 002520  700004 236111		ldq	sb|4,x1		" C
aa 002521  600464 756100		stq	sp|308		" Comment
aa 002522  700006 762111		lprpbp	sb|6,x1		" Data
aa 002523  200000 236100		ldq	bp|0
aa 002524  600520 756100		stq	sp|336		" Param
			L217:
aa 002525  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002526  200000 121100		sblx1	bp|0
aa 002527  700001 764111		lprplp	sb|1,x1
aa 002530  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of OutLiterals

aa 002531  000013 117165		zero	11,40565		" OutLiterals
aa 002532  164114 151164		zero	59468,53876
aa 002533  145162 141154		zero	51826,49772
aa 002534  163000 000000		zero	58880
			L148:
aa 002535  000000 213000  192		epaq	0		" set lp to linkage section
aa 002536  700026 764161		lprplp	sb|22,*au
aa 002537  200000 021100		adlx1	bp|0		" BCPL save
aa 002540  700000 542111		sprpbp	sb|0,x1
aa 002541  700001 544111		sprplp	sb|1,x1
aa 002542  700422 620111		eax0	sb|274,x1
aa 002543  777760 360003		anx0	-16,du
aa 002544  700025 740100		stx0	sb|21		" end of save sequence

aa 002545  600515 234100  193		szn	sp|333		" NewLiteralsList
aa 002546  000106 600004		tze	L231
aa 002547  777151 272004  194		tsbbp	L146+2		" ClearRegisters
aa 002550  000010 000000		zero	8
aa 002551  000112 351404  195		eapab	L232		" "*nLiteral pool"
aa 002552  700012 541111		sprpab	sb|10,x1
4a 002553  400012 272120		tsbbp	lp|L233,*		" SectionHeader
aa 002554  000010 000001		zero	8,1
aa 002555  000001 336007  196		lcq	1,dl		" true
aa 002556  700002 756111		stq	sb|2,x1		" HaveAlignmentRequirements
aa 002557  000073 710004  197		tra	L234
			L235:
aa 002560  600501 236100  198		ldq	sp|321		" LC
aa 002561  000001 376007		anq	1,dl		" 1
aa 002562  000002 176007		sbq	2,dl		" 2
aa 002563  000000 533007		negl	0,dl
aa 002564  700003 756111		stq	sb|3,x1		" Alignment
aa 002565  700002 234111  199		szn	sb|2,x1		" HaveAlignmentRequirements
aa 002566  000032 600004		tze	L236
aa 002567  600515 236100  200		ldq	sp|333		" NewLiteralsList
aa 002570  700005 756111		stq	sb|5,x1		" t
aa 002571  700004 450111		stz	sb|4,x1		" B
aa 002572  000022 710004  201		tra	L237
			L238:
aa 002573  700005 761111  202		lprpab	sb|5,x1		" t
aa 002574  100003 236100		ldq	ab|3
aa 002575  700003 116111		cmpq	sb|3,x1		" Alignment
aa 002576  000006 601004		tnz	L239
aa 002577  700005 235111  203		lda	sb|5,x1		" t
aa 002600  700012 755111		sta	sb|10,x1
aa 002601  777172 272004		tsbbp	L149+2		" PutOneLiteral
aa 002602  000010 000001		zero	8,1
aa 002603  000047 710004  204		tra	L228
			L239:
aa 002604  700005 763111  206		lprpbb	sb|5,x1		" t
aa 002605  300003 234100		szn	bb|3
aa 002606  000003 600004		tze	L240
aa 002607  000001 335007		lca	1,dl		" true
aa 002610  700004 755111		sta	sb|4,x1		" B
			L240:
aa 002611  700005 765111  207		lprplb	sb|5,x1		" t
aa 002612  500004 235100		lda	lb|4
aa 002613  700005 755111		sta	sb|5,x1		" t
			L237:
aa 002614  700005 234111		szn	sb|5,x1		" t
aa 002615  777756 601004		tnz	L238
aa 002616  700004 235111  209		lda	sb|4,x1		" B
aa 002617  700002 755111		sta	sb|2,x1		" HaveAlignmentRequirements
			L236:
aa 002620  600515 235100  211		lda	sp|333		" NewLiteralsList
aa 002621  700004 755111		sta	sb|4,x1		" t
aa 002622  000017 710004  212		tra	L241
			L242:
aa 002623  700004 760111  213		lprpap	sb|4,x1		" t
aa 002624  000003 234100		szn	ap|3
aa 002625  000011 601004		tnz	L243
aa 002626  700003 235111  214		lda	sb|3,x1		" Alignment
aa 002627  700004 762111		lprpbp	sb|4,x1		" t
aa 002630  200003 755100		sta	bp|3
aa 002631  700004 235111  215		lda	sb|4,x1		" t
aa 002632  700012 755111		sta	sb|10,x1
aa 002633  777140 272004		tsbbp	L149+2		" PutOneLiteral
aa 002634  000010 000001		zero	8,1
aa 002635  000015 710004  216		tra	L228
			L243:
aa 002636  700004 761111  218		lprpab	sb|4,x1		" t
aa 002637  100004 235100		lda	ab|4
aa 002640  700004 755111		sta	sb|4,x1		" t
			L241:
aa 002641  700004 234111		szn	sb|4,x1		" t
aa 002642  777761 601004		tnz	L242
aa 002643  000001 335007  220		lca	1,dl		" true
aa 002644  700002 755111		sta	sb|2,x1		" HaveAlignmentRequirements
aa 002645  000013 353404  221		eapbb	L244		" "padding"
aa 002646  600464 543100		sprpbb	sp|308		" Comment
aa 002647  700012 450111  222		stz	sb|10,x1
4a 002650  400016 272120		tsbbp	lp|L197,*		" OutData
aa 002651  000010 000001		zero	8,1
			L228:
			L234:
aa 002652  600515 234100  223		szn	sp|333		" NewLiteralsList
aa 002653  777705 601004		tnz	L235
			L231:
aa 002654  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002655  200000 121100		sblx1	bp|0
aa 002656  700001 764111		lprplp	sb|1,x1
aa 002657  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L244:
aa 002660  000007 160141		zero	7,57441		" "padding"
aa 002661  144144 151156		zero	51300,53870
aa 002662  147000 000000		zero	52736
			L232:
aa 002663  000015 012114		zero	13,5196		" "*nLiteral pool"
aa 002664  151164 145162		zero	53876,51826
aa 002665  141154 040160		zero	49772,16496
aa 002666  157157 154000		zero	56943,55296
	"	Begin text of Outstring

aa 002667  000011 117165		zero	9,40565		" Outstring
aa 002670  164163 164162		zero	59507,59506
aa 002671  151156 147000		zero	53870,52736
			L147:
aa 002672  000000 213000  186		epaq	0		" set lp to linkage section
aa 002673  700026 764161		lprplp	sb|22,*au
aa 002674  200000 021100		adlx1	bp|0		" BCPL save
aa 002675  700000 542111		sprpbp	sb|0,x1
aa 002676  700001 544111		sprplp	sb|1,x1
aa 002677  701033 620111		eax0	sb|539,x1
aa 002700  777760 360003		anx0	-16,du
aa 002701  700025 740100		stx0	sb|21		" end of save sequence

aa 002702  700004 353511  187		eapbb	sb|4,x1		" a vector
aa 002703  700003 543111		sprpbb	sb|3,x1		" v
aa 002704  700002 235111  188		lda	sb|2,x1		" s
aa 002705  701012 755111		sta	sb|522,x1
aa 002706  700003 235111		lda	sb|3,x1		" v
aa 002707  701013 755111		sta	sb|523,x1
4a 002710  400010 272120		tsbbp	lp|L248,*		" FormStringconst
aa 002711  001010 000002		zero	520,2
aa 002712  701004 756111		stq	sb|516,x1		" Len
aa 002713  700002 236111  189		ldq	sb|2,x1		" s
aa 002714  600464 756100		stq	sp|308		" Comment
aa 002715  701005 450111  190		stz	sb|517,x1		" i
aa 002716  701004 236111		ldq	sb|516,x1		" Len
aa 002717  701006 756111		stq	sb|518,x1
aa 002720  000010 710004		tra	L249
			L250:
aa 002721  701005 724111		lxl4	sb|517,x1		" i
aa 002722  700003 763111		lprpbb	sb|3,x1		" v
aa 002723  300000 236114		ldq	bb|0,x4
aa 002724  701012 756111		stq	sb|522,x1
4a 002725  400016 272120		tsbbp	lp|L197,*		" OutData
aa 002726  001010 000001		zero	520,1
aa 002727  701005 054111		aos	sb|517,x1		" i
			L249:
aa 002730  701005 236111		ldq	sb|517,x1		" i
aa 002731  701006 116111		cmpq	sb|518,x1
aa 002732  777767 604404		tmoz	L250
			L247:
aa 002733  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002734  200000 121100		sblx1	bp|0
aa 002735  700001 764111		lprplp	sb|1,x1
aa 002736  200001 710100		tra	bp|1		" end of return sequence
aa 002737  000000 000000		" padding
	"	Definition section part one - external entry points

5a 000000  000115 000000		" pointer to first definition
aa 000001  000000 600000		" flags: new format, ignore header
aa 000002  000000 000000		" list terminator

aa 000003  010142 143160		" "bcpl_cg2"
aa 000004  154137 143147
aa 000005  062000 000000
aa 000006  012101 144144		" "AddLiteral"
aa 000007  114151 164145
aa 000010  162141 154000
aa 000011  013117 165164		" "OutLiterals"
aa 000012  114151 164145
aa 000013  162141 154163
aa 000014  011117 165164		" "Outstring"
aa 000015  163164 162151
aa 000016  156147 000000
aa 000017  016103 154145		" "ClearRegisters"
aa 000020  141162 122145
aa 000021  147151 163164
aa 000022  145162 163000
aa 000023  013103 154145		" "ClearMemory"
aa 000024  141162 115145
aa 000025  155157 162171
aa 000026  010103 157155		" "Compjump"
aa 000027  160152 165155
aa 000030  160000 000000
aa 000031  013114 157157		" "LookupLabel"
aa 000032  153165 160114
aa 000033  141142 145154
aa 000034  011104 145146		" "DefineLab"
aa 000035  151156 145114
aa 000036  141142 000000
aa 000037  007103 157155		" "Complab"
aa 000040  160154 141142
aa 000041  020104 151163		" "DisclaimRegister"
aa 000042  143154 141151
aa 000043  155122 145147
aa 000044  151163 164145
aa 000045  162000 000000
aa 000046  015103 154141		" "ClaimRegister"
aa 000047  151155 122145
aa 000050  147151 163164
aa 000051  145162 000000
aa 000052  016103 157155		" "CombineAddress"
aa 000053  142151 156145
aa 000054  101144 144162
aa 000055  145163 163000
aa 000056  012111 156122		" "InRegister"
aa 000057  145147 151163
aa 000060  164145 162000
aa 000061  016106 151156		" "FindInRegister"
aa 000062  144111 156122
aa 000063  145147 151163
aa 000064  164145 162000
aa 000065  010111 163123		" "IsStored"
aa 000066  164157 162145
aa 000067  144000 000000
aa 000070  011111 163101		" "IsAddress"
aa 000071  144144 162145
aa 000072  163163 000000
aa 000073  006111 163132		" "IsZero"
aa 000074  145162 157000
aa 000075  012105 166141		" "EvalNumber"
aa 000076  154116 165155
aa 000077  142145 162000
aa 000100  010111 163116		" "IsNumber"
aa 000101  165155 142145
aa 000102  162000 000000
aa 000103  012115 141153		" "MakeCgTemp"
aa 000104  145103 147124
aa 000105  145155 160000
aa 000106  012114 157157		" "LookupTemp"
aa 000107  153165 160124
aa 000110  145155 160000
aa 000111  014163 171155		" "symbol_table"
aa 000112  142157 154137
aa 000113  164141 142154
aa 000114  145000 000000

	"	Segname definition for bcpl_cg2

55 000115  000120 000002		" forward, backward threads
5a 000116  000002 400003		" value defined, class flags
55 000117  000003 000120		" name pointer, first entry def

	"	Definition for AddLiteral

55 000120  000123 000115		" forward, backward threads
0a 000121  002335 500000		" value defined, class flags
55 000122  000006 000115		" name pointer, segname def pointer

	"	Definition for OutLiterals

55 000123  000126 000120		" forward, backward threads
0a 000124  002535 500000		" value defined, class flags
55 000125  000011 000115		" name pointer, segname def pointer

	"	Definition for Outstring

55 000126  000131 000123		" forward, backward threads
0a 000127  002672 500000		" value defined, class flags
55 000130  000014 000115		" name pointer, segname def pointer

	"	Definition for ClearRegisters

55 000131  000134 000126		" forward, backward threads
0a 000132  001716 500000		" value defined, class flags
55 000133  000017 000115		" name pointer, segname def pointer

	"	Definition for ClearMemory

55 000134  000137 000131		" forward, backward threads
0a 000135  001676 500000		" value defined, class flags
55 000136  000023 000115		" name pointer, segname def pointer

	"	Definition for Compjump

55 000137  000142 000134		" forward, backward threads
0a 000140  001650 500000		" value defined, class flags
55 000141  000026 000115		" name pointer, segname def pointer

	"	Definition for LookupLabel

55 000142  000145 000137		" forward, backward threads
0a 000143  001524 500000		" value defined, class flags
55 000144  000031 000115		" name pointer, segname def pointer

	"	Definition for DefineLab

55 000145  000150 000142		" forward, backward threads
0a 000146  001462 500000		" value defined, class flags
55 000147  000034 000115		" name pointer, segname def pointer

	"	Definition for Complab

55 000150  000153 000145		" forward, backward threads
0a 000151  001366 500000		" value defined, class flags
55 000152  000037 000115		" name pointer, segname def pointer

	"	Definition for DisclaimRegister

55 000153  000156 000150		" forward, backward threads
0a 000154  000474 500000		" value defined, class flags
55 000155  000041 000115		" name pointer, segname def pointer

	"	Definition for ClaimRegister

55 000156  000161 000153		" forward, backward threads
0a 000157  000402 500000		" value defined, class flags
55 000160  000046 000115		" name pointer, segname def pointer

	"	Definition for CombineAddress

55 000161  000164 000156		" forward, backward threads
0a 000162  000610 500000		" value defined, class flags
55 000163  000052 000115		" name pointer, segname def pointer

	"	Definition for InRegister

55 000164  000167 000161		" forward, backward threads
0a 000165  000344 500000		" value defined, class flags
55 000166  000056 000115		" name pointer, segname def pointer

	"	Definition for FindInRegister

55 000167  000172 000164		" forward, backward threads
0a 000170  000230 500000		" value defined, class flags
55 000171  000061 000115		" name pointer, segname def pointer

	"	Definition for IsStored

55 000172  000175 000167		" forward, backward threads
0a 000173  000746 500000		" value defined, class flags
55 000174  000065 000115		" name pointer, segname def pointer

	"	Definition for IsAddress

55 000175  000200 000172		" forward, backward threads
0a 000176  001042 500000		" value defined, class flags
55 000177  000070 000115		" name pointer, segname def pointer

	"	Definition for IsZero

55 000200  000203 000175		" forward, backward threads
0a 000201  001235 500000		" value defined, class flags
55 000202  000073 000115		" name pointer, segname def pointer

	"	Definition for EvalNumber

55 000203  000206 000200		" forward, backward threads
0a 000204  000117 500000		" value defined, class flags
55 000205  000075 000115		" name pointer, segname def pointer

	"	Definition for IsNumber

55 000206  000211 000203		" forward, backward threads
0a 000207  001306 500000		" value defined, class flags
55 000210  000100 000115		" name pointer, segname def pointer

	"	Definition for MakeCgTemp

55 000211  000214 000206		" forward, backward threads
0a 000212  000003 500000		" value defined, class flags
55 000213  000103 000115		" name pointer, segname def pointer

	"	Definition for LookupTemp

55 000214  000217 000211		" forward, backward threads
0a 000215  000056 500000		" value defined, class flags
55 000216  000106 000115		" name pointer, segname def pointer

	"	Definition for symbol_table

55 000217  000002 000214		" forward, backward threads
6a 000220  000000 400002		" value defined, class flags
55 000221  000111 000115		" name pointer, segname def pointer
	"	Definition section part two - symbolic info for external references

aa 000222  014142 143160		" "bcpl_utility"
aa 000223  154137 165164
aa 000224  151154 151164
aa 000225  171000 000000
aa 000226  017106 157162		" "FormStringconst"
aa 000227  155123 164162
aa 000230  151156 147143
aa 000231  157156 163164
5a 000232  000233 000000
aa 000233  000004 000000
55 000234  000222 000226
aa 000235  010142 143160		" "bcpl_cg5"
aa 000236  154137 143147
aa 000237  065000 000000
aa 000240  015123 145143		" "SectionHeader"
aa 000241  164151 157156
aa 000242  110145 141144
aa 000243  145162 000000
5a 000244  000245 000000
aa 000245  000004 000000
55 000246  000235 000240
aa 000247  011116 145170		" "Nextparam"
aa 000250  164160 141162
aa 000251  141155 000000
5a 000252  000253 000000
aa 000253  000004 000000
55 000254  000222 000247
aa 000255  007117 165164		" "OutData"
aa 000256  104141 164141
5a 000257  000260 000000
aa 000260  000004 000000
55 000261  000235 000255
aa 000262  007120 165164		" "PutCode"
aa 000263  103157 144145
5a 000264  000265 000000
aa 000265  000004 000000
55 000266  000235 000262
aa 000267  017142 143160		" "bcpl_stream_io_"
aa 000270  154137 163164
aa 000271  162145 141155
aa 000272  137151 157137
aa 000273  006106 157162		" "Format"
aa 000274  155141 164000
5a 000275  000276 000000
aa 000276  000004 000000
55 000277  000267 000273
aa 000300  006117 165164		" "Outop2"
aa 000301  157160 062000
5a 000302  000303 000000
aa 000303  000004 000000
55 000304  000235 000300
aa 000305  007106 157162		" "FormTag"
aa 000306  155124 141147
5a 000307  000310 000000
aa 000310  000004 000000
55 000311  000235 000305
aa 000312  005117 165164		" "Outop"
aa 000313  157160 000000
5a 000314  000315 000000
aa 000315  000004 000000
55 000316  000235 000312
aa 000317  012106 157162		" "FormOpcode"
aa 000320  155117 160143
aa 000321  157144 145000
5a 000322  000323 000000
aa 000323  000004 000000
55 000324  000235 000317
aa 000325  010142 143160		" "bcpl_cg3"
aa 000326  154137 143147
aa 000327  063000 000000
aa 000330  011123 145164		" "SetupAddr"
aa 000331  165160 101144
aa 000332  144162 000000
5a 000333  000334 000000
aa 000334  000004 000000
55 000335  000325 000330
aa 000336  013107 145164		" "GetRegister"
aa 000337  122145 147151
aa 000340  163164 145162
5a 000341  000342 000000
aa 000342  000004 000000
55 000343  000325 000336
aa 000344  011114 157141		" "LoadIndex"
aa 000345  144111 156144
aa 000346  145170 000000
5a 000347  000350 000000
aa 000350  000004 000000
55 000351  000325 000344
aa 000352  007106 162145		" "Freevec"
aa 000353  145166 145143
5a 000354  000355 000000
aa 000355  000004 000000
55 000356  000222 000352
aa 000357  015123 164157		" "StoreRegister"
aa 000360  162145 122145
aa 000361  147151 163164
aa 000362  145162 000000
5a 000363  000364 000000
aa 000364  000004 000000
55 000365  000325 000357
aa 000366  010120 162145		" "Preserve"
aa 000367  163145 162166
aa 000370  145000 000000
5a 000371  000372 000000
aa 000372  000004 000000
55 000373  000325 000366
aa 000374  014123 141164		" "Satisfactory"
aa 000375  151163 146141
aa 000376  143164 157162
aa 000377  171000 000000
5a 000400  000401 000000
aa 000401  000004 000000
55 000402  000325 000374
aa 000403  013142 143160		" "bcpl_report"
aa 000404  154137 162145
aa 000405  160157 162164
aa 000406  010103 107162		" "CGreport"
aa 000407  145160 157162
aa 000410  164000 000000
5a 000411  000412 000000
aa 000412  000004 000000
55 000413  000403 000406
aa 000414  015106 157162		" "FormCharconst"
aa 000415  155103 150141
aa 000416  162143 157156
aa 000417  163164 000000
5a 000420  000421 000000
aa 000421  000004 000000
55 000422  000222 000414
aa 000423  021142 143160		" "bcpl_conversions_"
aa 000424  154137 143157
aa 000425  156166 145162
aa 000426  163151 157156
aa 000427  163137 000000
aa 000430  013103 157156		" "ConvertStoN"
aa 000431  166145 162164
aa 000432  123164 157116
5a 000433  000434 000000
aa 000434  000004 000000
55 000435  000423 000430
aa 000436  006116 145167		" "Newvec"
aa 000437  166145 143000
5a 000440  000441 000000
aa 000441  000004 000000
55 000442  000222 000436
aa 000443  000000 000000		" padding
	"	Linkage section - static variables and external links

aa 000000  000000 000000		" linkage header
0a 000001  002740 000000		" address of defs
aa 000002  000000 000000
aa 000003  000000 000000
aa 000004  000000 000000
aa 000005  000000 000000
2a 000006  000010 000062		" offset to links, total length
aa 000007  000000 000062		" obsolete length

	"	External link pairs

			L248:
3a 000010  777770 000046		" "bcpl_utility$FormStringconst"
5a 000011  000232 000000
			L233:
3a 000012  777766 000046		" "bcpl_cg5$SectionHeader"
5a 000013  000244 000000
			L227:
3a 000014  777764 000046		" "bcpl_utility$Nextparam"
5a 000015  000252 000000
			L197:
3a 000016  777762 000046		" "bcpl_cg5$OutData"
5a 000017  000257 000000
			L161:
3a 000020  777760 000046		" "bcpl_cg5$PutCode"
5a 000021  000264 000000
			L160:
3a 000022  777756 000046		" "bcpl_stream_io_$Format"
5a 000023  000275 000000
			L157:
3a 000024  777754 000046		" "bcpl_cg5$Outop2"
5a 000025  000302 000000
			L88:
3a 000026  777752 000046		" "bcpl_cg5$FormTag"
5a 000027  000307 000000
			L87:
3a 000030  777750 000046		" "bcpl_cg5$Outop"
5a 000031  000314 000000
			L86:
3a 000032  777746 000046		" "bcpl_cg5$FormOpcode"
5a 000033  000322 000000
			L81:
3a 000034  777744 000046		" "bcpl_cg3$SetupAddr"
5a 000035  000333 000000
			L80:
3a 000036  777742 000046		" "bcpl_cg3$GetRegister"
5a 000037  000341 000000
			L79:
3a 000040  777740 000046		" "bcpl_cg3$LoadIndex"
5a 000041  000347 000000
			L73:
3a 000042  777736 000046		" "bcpl_utility$Freevec"
5a 000043  000354 000000
			L63:
3a 000044  777734 000046		" "bcpl_cg3$StoreRegister"
5a 000045  000363 000000
			L62:
3a 000046  777732 000046		" "bcpl_cg3$Preserve"
5a 000047  000371 000000
			L49:
3a 000050  777730 000046		" "bcpl_cg3$Satisfactory"
5a 000051  000400 000000
			L38:
3a 000052  777726 000046		" "bcpl_report$CGreport"
5a 000053  000411 000000
			L33:
3a 000054  777724 000046		" "bcpl_utility$FormCharconst"
5a 000055  000420 000000
			L30:
3a 000056  777722 000046		" "bcpl_conversions_$ConvertStoN"
5a 000057  000433 000000
			L7:
3a 000060  777720 000046		" "bcpl_utility$Newvec"
5a 000061  000440 000000
	"	Symbol section header

aa 000000  000000 000001		" version number of header structure
aa 000001  163171 155142		" "symbtree"
aa 000002  164162 145145
aa 000003  000000 000003		" compiler version number
aa 000004  000000 101170		" date/time compiler modified
aa 000005  533311 032072		" 09/25/73  0959.1 mst Tue
aa 000006  000000 102333		" time of this compilation
aa 000007  433605 132756		" 01/24/75  0650.1 mst Fri
aa 000010  142143 160154		" "bcpl    "
aa 000011  040040 040040
aa 000012  000056 000035		" compiler version name - pointer, length
aa 000013  000066 000024		" user id - pointer, length
aa 000014  000073 000043		" comment string - pointer, length
aa 000015  000002 000002		" text and linkage boundaries
aa 000016  000024 000000		" source map, symbol tree root
7a 000017  000000 000175		" section header pointer, block size
aa 000020  000000 000175		" next block pointer, rel_text
aa 000021  000000 000225		" rel_def, rel_link
aa 000022  000237 000175		" rel_symbol, default truncate
aa 000023  000024 000000		" optional truncate, unused
aa 000024  000000 000001		" source files map: version number
aa 000025  000000 000006		"                   number of files
aa 000026  000104 000047		" bcpl_cg2
aa 000027  023333 611404		" last modified on
aa 000030  000000 102333		" 01/24/75  0647.2 mst Fri
aa 000031  432366 400000
aa 000032  000116 000043		" bcpl_cg_head
aa 000033  021607 540213		" last modified on
aa 000034  000000 101621		" 05/06/74  1740.6 mst Mon
aa 000035  351403 200000
aa 000036  000127 000051		" bcpl_compiler_head
aa 000037  021607 540214		" last modified on
aa 000040  000000 101621		" 05/06/74  1740.6 mst Mon
aa 000041  351403 200000
aa 000042  000142 000043		" bcpl_symbols
aa 000043  021607 540223		" last modified on
aa 000044  000000 101621		" 05/06/74  1740.8 mst Mon
aa 000045  351474 000000
aa 000046  000153 000044		" bcpl_cg_codes
aa 000047  021607 540212		" last modified on
aa 000050  000000 101621		" 05/06/74  1740.6 mst Mon
aa 000051  351402 400000
aa 000052  000164 000043		" bcpl_opcodes
aa 000053  021607 540221		" last modified on
aa 000054  000000 101621		" 05/06/74  1740.8 mst Mon
aa 000055  351474 000000
aa 000056  102103 120114		" "BCPL version 3.4, August 1973"
aa 000057  040166 145162
aa 000060  163151 157156
aa 000061  040063 056064
aa 000062  054040 101165
aa 000063  147165 163164
aa 000064  040061 071067
aa 000065  063040 040040
aa 000066  115141 162164		" "Martinson.SysMaint.a"
aa 000067  151156 163157
aa 000070  156056 123171
aa 000071  163115 141151
aa 000072  156164 056141
aa 000073  163157 165162		" "source  xref  alist  optimize  6180"
aa 000074  143145 040040
aa 000075  170162 145146
aa 000076  040040 141154
aa 000077  151163 164040
aa 000100  040157 160164
aa 000101  151155 151172
aa 000102  145040 040066
aa 000103  061070 060040
aa 000104  076062 056061		" ">2.1spec>online>mib083074>bcpl_cg2.bcpl"
aa 000105  163160 145143
aa 000106  076157 156154
aa 000107  151156 145076
aa 000110  155151 142060
aa 000111  070063 060067
aa 000112  064076 142143
aa 000113  160154 137143
aa 000114  147062 056142
aa 000115  143160 154040
aa 000116  076154 144144		" ">ldd>include>bcpl_cg_head.incl.bcpl"
aa 000117  076151 156143
aa 000120  154165 144145
aa 000121  076142 143160
aa 000122  154137 143147
aa 000123  137150 145141
aa 000124  144056 151156
aa 000125  143154 056142
aa 000126  143160 154040
aa 000127  076154 144144		" ">ldd>include>bcpl_compiler_head.incl.bcpl"
aa 000130  076151 156143
aa 000131  154165 144145
aa 000132  076142 143160
aa 000133  154137 143157
aa 000134  155160 151154
aa 000135  145162 137150
aa 000136  145141 144056
aa 000137  151156 143154
aa 000140  056142 143160
aa 000141  154040 040040
aa 000142  076154 144144		" ">ldd>include>bcpl_symbols.incl.bcpl"
aa 000143  076151 156143
aa 000144  154165 144145
aa 000145  076142 143160
aa 000146  154137 163171
aa 000147  155142 157154
aa 000150  163056 151156
aa 000151  143154 056142
aa 000152  143160 154040
aa 000153  076154 144144		" ">ldd>include>bcpl_cg_codes.incl.bcpl"
aa 000154  076151 156143
aa 000155  154165 144145
aa 000156  076142 143160
aa 000157  154137 143147
aa 000160  137143 157144
aa 000161  145163 056151
aa 000162  156143 154056
aa 000163  142143 160154
aa 000164  076154 144144		" ">ldd>include>bcpl_opcodes.incl.bcpl"
aa 000165  076151 156143
aa 000166  154165 144145
aa 000167  076142 143160
aa 000170  154137 157160
aa 000171  143157 144145
aa 000172  163056 151156
aa 000173  143154 056142
aa 000174  143160 154040
	"	Relocation information


	"	text section relocation bits

aa 000175  000000 000002		" version number of rel-bits structure
aa 000176  000000 001427		" length in bits
aa 000177  740545 170417
aa 000200  200001 236014
aa 000201  640000 200417
aa 000202  040723 614664
aa 000203  740315 170503
aa 000204  236035 640000
aa 000205  240005 170103
aa 000206  200024 000024
aa 000207  000517 005323
aa 000210  606560 041703
aa 000211  132360 306474
aa 000212  027401 036157
aa 000213  600417 027323
aa 000214  601664 000005
aa 000215  170233 236064
aa 000216  647403 351705
aa 000217  232361 156474
aa 000220  457500 002474
aa 000221  075500 012361
aa 000222  336474 101517
aa 000223  036323 603764
aa 000224  740315 170052
l	"	inkage relocation bits

aa 000225  000000 000002		" version number of rel-bits structure
aa 000226  000000 000424		" length in bits
aa 000227  100002 204652
aa 000230  465246 524652
aa 000231  465246 524652
aa 000232  465246 524652
aa 000233  465246 524652
aa 000234  465246 524652
aa 000235  465246 524652
aa 000236  465246 520000
s	"	ymbol relocation bits

aa 000237  000000 000002		" version number of rel-bits structure
aa 000240  000000 000043		" length in bits
aa 000241  740365 770666
	"	Object map

aa 003730  000000 000001		" version number of object_map structure
aa 003731  157142 152137		" "obj_map "
aa 003732  155141 160040
aa 003733  000000 002737		" text offset, length
aa 003734  002740 000443		" def offset, length
aa 003735  003404 000062		" link offset, length
aa 003736  003466 000242		" symbol offset, length
aa 003737  000000 000000		" break map offset, length
aa 003740  340000 000000		" flags: ^bound, relocatable, procedure, standard
aa 003741  003730 000000		" object map pointer, unused


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
