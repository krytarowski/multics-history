Compilation listing of file >2.1spec>online>mib083074>bcpl_cg4.bcpl.
Compilation performed for Martinson.SysMaint.a at 01/24/75  0650.8 mst Fri.
Compiled by BCPL version 3.4, August 1973.  Compiler updated at 09/25/73  0959.1 mst Tue.
Options applied:  source  xref  alist  optimize  6180.

     1	//  Canned code sequences (call/save/return, etc.).
     2	//  Last modified on 06/14/74 at 01:13:39 by R F Mabee.
     3	//  Converted for 6180 operation and installed in Version 3.4, R F Mabee.
     4	//  First installed in Version 2.7 by R F Mabee.
     5	
     6	//  Copyright (c) 1974 by Massachusetts Institute of Technology and Honeywell Information Systems, Inc.
     7	
     8	//  General permission is granted to copy and use this program, but not to sell it, provided that the above
     9	//  copyright statement is given.  Contact Information Processing Services, MIT, for further information.
    10	//  Please contact R F Mabee at MIT for information on this program and versions for other machines.
    11	
    12	get "bcpl_cg_head"
	     1	//  Declarations for the code generator.
	     2	//  Last modified on 08/15/73 at 00:31:50 by R F Mabee.
	     3	//  Code generator substantially modified during 6180 bootstrap, and installed with Version 3.4, R F Mabee.
	     4	//  First installed as Version 2.7, R F Mabee.
	     5	
	     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
	     7	//  This file may only be reproduced or modified with explicit written
	     8	//  permission of the author.  Permission is hereby extended to those
	     9	//  persons responsible for operating the Multics system to make such
	    10	//  copies as are normally required to ensure the integrity of the Multics
	    11	//  file system.  Permission is also hereby extended to those persons
	    12	//  responsible for maintaining the Multics program libraries to make such
	    13	//  copies as are normally required for online installations.
	    14	
	    15	get "bcpl_compiler_head"
		     1	//  Declarations common to the entire BCPL compiler.
		     2	//  Last modified on 07/28/73 at 03:56:32 by R F Mabee.
		     3	//  Installed on 6180 as Version 3.4, R F Mabee.
		     4	//  First installed on 645 as Version 2.7 by R F Mabee.
		     5	
		     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
		     7	//  This file may only be reproduced or modified with explicit written
		     8	//  permission of the author.  Permission is hereby extended to those
		     9	//  persons responsible for operating the Multics system to make such
		    10	//  copies as are normally required to ensure the integrity of the Multics
		    11	//  file system.  Permission is also hereby extended to those persons
		    12	//  responsible for maintaining the Multics program libraries to make such
		    13	//  copies as are normally required for online installations.
		    14	
		    15	external
		    16	     $(	Readch = "bcpl_machine_code_$Readch"		//  Library routines used by the compiler.
		    17		Writech = "bcpl_machine_code_$Writech"
		    18		WriteS = "bcpl_stream_io_$WriteS"
		    19		WriteN = "bcpl_stream_io_$WriteN"
		    20		Format = "bcpl_stream_io_$Format"
		    21		Packstring = "bcpl_machine_code_$Packstring"
		    22		Unpackstring = "bcpl_machine_code_$Unpackstring"
		    23		RemoveEscapes = "bcpl_conversions_$RemoveEscapes"
		    24		EqualString = "bcpl_strings_$EqualString"
		    25		CompareStrings = "bcpl_strings_$CompareStrings"	//  Alphabetic comparison.
		    26		Concatenate = "bcpl_strings_$Concatenate"
		    27		ConvertStoN = "bcpl_conversions_$ConvertStoN"
		    28		ConvertNtoS = "bcpl_conversions_$ConvertNtoS"
		    29		Length = "bcpl_strings_$Length"		//  Number of characters.
		    30		LengthInWords = "bcpl_strings_$LengthInWords"	//  Length of packed string.
		    31		RandomI = "bcpl_arithmetic_$RandomI"
		    32	
		    33		Newvec = "bcpl_utility$Newvec"		//  Utility routines used throughout the compiler.
		    34		Freevec = "bcpl_utility$Freevec"
		    35		List1 = "bcpl_utility$List1"
		    36		List2 = "bcpl_utility$List2"
		    37		List3 = "bcpl_utility$List3"
		    38		List4 = "bcpl_utility$List4"
		    39		List5 = "bcpl_utility$List5"
		    40		List6 = "bcpl_utility$List6"
		    41		StoreString = "bcpl_utility$StoreString"
		    42		PushInput = "bcpl_utility$PushInput"
		    43		PopInput = "bcpl_utility$PopInput"
		    44		MakeTimeString = "bcpl_utility$MakeTimeString"
		    45		Nextparam = "bcpl_utility$Nextparam"
		    46		FormCharconst = "bcpl_utility$FormCharconst"
		    47		FormStringconst = "bcpl_utility$FormStringconst"
		    48	
		    49		CaeReport = "bcpl_report$CaeReport"
		    50		Transreport = "bcpl_report$Transreport"
		    51		CGreport = "bcpl_report$CGreport"
		    52	
		    53		Nextsymb = "bcpl_lex0$Nextsymb"
		    54	
		    55		SymbolName = "bcpl_plist$SymbolName"
		    56		FindPrintName = "bcpl_plist$FindPrintName"
		    57		EnterIntoCrossreference = "bcpl_plist$EnterIntoCrossreference"
		    58	
		    59		GetVersion = "bcpl_version$GetVersion"		//  Routines used only by the driver.
		    60		UtilitiesInit = "bcpl_utility$UtilitiesInit"
		    61		Cleanup = "bcpl_utility$Cleanup"
		    62		GetStream = "bcpl_utility$GetStream"
		    63	
		    64		CAE = "bcpl_cae0$CAE"
		    65		LexInit = "bcpl_lex0$LexInit"
		    66	
		    67		Pname = "bcpl_plist$Pname"
		    68		Plist = "bcpl_plist$Plist"
		    69	
		    70		Trans = "bcpl_trans0$Trans"
		    71		CgInit = "bcpl_cg0$CgInit"
		    72		BuildObject = "bcpl_cg0$BuildObject"
		    73		WriteObjectListing = "bcpl_cg0$WriteObjectListing"
		    74	     $)
		    75	
		    76	global		//  Globals are reserved in blocks as follows:
		    77	     $(	//    0 -  31	system
		    78		//   32 -  99	library
		    79		//  100 - 149	options and other common cells
		    80		//  150 - 159	metering cells
		    81		//  160 - 169	bcpl_utility
		    82		//  170 - 199	to be assigned
		    83		//  200 - 229	lexical phase
		    84		//  230 - 249	syntax analyzer
		    85		//  250 - 299	translator
		    86		//  300 - 399	code generator
		    87	
		    88			//  Cells used for communication with the library.
		    89		OUTPUT		: 32
		    90		INPUT		: 33
		    91		MONITOR		: 34
		    92		Ch		: 36
		    93	
		    94			//  Options for this compilation.
		    95		Listing		: 100
		    96		UpperCase		: 101
		    97		PPrep		: 102
		    98		Crep		: 103
		    99		Symbols		: 104
		   100		LineMap		: 105
		   101		Optimize		: 106
		   102		Machine		: 107
		   103		Xref		: 108
		   104		OcodeSw		: 109
		   105		HaveListingFile	: 110
		   106		QuietSw		: 111
		   107	
		   108			//  Other information about this compilation.
		   109		CompilerVersionString : 120
		   110		CompilerVersionNumber : 121
		   111		CompilerDTMString	: 122
		   112		CompilerDTM	: 123
		   113		TimeNowString	: 124
		   114		TimeNow		: 125
		   115		OptionString	: 126
		   116		FileNames		: 127
		   117		FilesInfo		: 128
		   118		FileCount		: 129
		   119		ProgramName	: 130
		   120		UserID		: 131
		   121	
		   122			//  Working variables needing global scope.
		   123		LineCount		: 140
		   124		Errorsw		: 141
		   125		NAMECHAIN		: 142
		   126		Symb		: 143
		   127		DictionaryEntry	: 144
		   128		Column		: 145
		   129	     $)
		   130	manifest
		   131	     $(	GlobalTemp = 199  $)	//  Number of cell available for local, temporary use.
		   132	
		   133	manifest
		   134	     $(	Left = 18; Right = $8777777
		   135		Endofstreamch = $87777
		   136		Even = $87777777777776
		   137		Vmax = 511
		   138		LineMask = $817777; FileShift = 13	//  Breakdown of line count.
		   139		UnexpectedCase = 99		//  Error code for use throughout compiler.
		   140	     $)
	    16	get "bcpl_symbols"
		     1	//  All symbols used in the interface between any two phases of the compiler are defined here.
		     2	//  This includes all canonical symbols, syntax tree nodes, and XOCODE operators.
		     3	//  Last modified on 07/08/73 at 22:55:31 by R F Mabee.
		     4	//  Revisions installed in Version 3.4 on 6180, R F Mabee.
		     5	//  First installed with Version 2.7 by R F Mabee.
		     6	
		     7	//  Copyright (c) 1973 by the author, Robert F. Mabee.
		     8	//  This file may only be reproduced or modified with explicit written
		     9	//  permission of the author.  Permission is hereby extended to those
		    10	//  persons responsible for operating the Multics system to make such
		    11	//  copies as are normally required to ensure the integrity of the Multics
		    12	//  file system.  Permission is also hereby extended to those persons
		    13	//  responsible for maintaining the Multics program libraries to make such
		    14	//  copies as are normally required for online installations.
		    15	
		    16	manifest
		    17	     $(	AND_S = 1
		    18		ASSIGN_S = 2
		    19		BE_S = 3
		    20		BIT_S = 4
		    21		BREAK_S = 5
		    22		BY_S = 6
		    23		CALL_S = 07
		    24		CASE_S = 08
		    25	
		    26		CHAR_S = 10
		    27		CHARCONST_S = 11
		    28		COLON_S = 12
		    29		COMMA_S = 13
		    30		COND_S = 14
		    31		CONSTANT_S = 15
		    32		CONSTDEF_S = 16
		    33		DEFAULT_S = 17
		    34		DIV_F = 18
		    35	
		    36		DIV_S = 20
		    37		DO_S = 21
		    38		DOUBLE_S = 22
		    39		ENDCASE_S = 23
		    40		ENDPROG_S = 24
		    41		ERROR_S = 25
		    42		EQ_F = 26
		    43		EQ_S = 27
		    44		EQV_S = 28
		    45	
		    46		EXTERNAL_S = 30
		    47		FALSE_S = 31
		    48		FINISH_S = 32
		    49		FIXED_S = 33
		    50		FLOAT_S = 34
		    51		FNAP_S = 35
		    52		FNDEF_S = 36
		    53		FOR_S = 37
		    54		GE_F = 38
		    55	
		    56		GE_S = 40
		    57		GET_S = 41
		    58		GLOBAL_S = 42
		    59		GOTO_S = 43
		    60		GR_F = 44
		    61		GR_S = 45
		    62		IF_S = 46
		    63		IFNOT_S = 47
		    64		IFSO_S = 48
		    65	
		    66		INTO_S = 50
		    67		LABDEF_S = 51
		    68		LABEL_S = 52
		    69		LE_F = 53
		    70		LE_S = 54
		    71		LENGTH_S = 55
		    72		LET_S = 56
		    73		LIST_S = 57
		    74		LOCAL_S = 58
		    75	
		    76		LOGAND_S = 60
		    77		LOGOR_S = 61
		    78		LOOP_S = 62
		    79		LS_F = 63
		    80		LS_S = 64
		    81		LSHIFT_S = 65
		    82		LV_S = 66
		    83		LVECAP_S = 67
		    84		LV_ARG_OUT = 68
		    85	
		    86		LV_FNAP_RESULT = 70
		    87		LV_GLOBAL = 71
		    88		LV_LOCAL = 72
		    89		LV_STATIC = 73
		    90		LV_TEMP = 74
		    91		MAIN_S = 75
		    92		MANIFEST_S = 76
		    93		MINUS_F = 77
		    94		MINUS_S = 78
		    95	
		    96		MULT_F = 80
		    97		MULT_S = 81
		    98		NAME_S = 82
		    99		NEG_F = 83
		   100		NEG_S = 84
		   101		NEQV_S = 85
		   102		NE_F = 86
		   103		NE_S = 87
		   104		NIL_S = 88
		   105	
		   106		NOT_S = 90
		   107		NUMBER_S = 91
		   108		OFFSET_S = 92
		   109		OR_S = 93
		   110		PLUS_F = 94
		   111		PLUS_S = 95
		   112		POINTER_S = 96
		   113		POS_F = 97
		   114		POS_S = 98
		   115	
		   116		RBRA_S = 100
		   117		REGISTER_S = 101
		   118		REL_S = 102
		   119		REM_S = 103
		   120		REP_S = 104
		   121		REPEAT_S = 105
		   122		REPEATUNTIL_S = 106
		   123		REPEATWHILE_S = 107
		   124		RESULTIS_S = 108
		   125	
		   126		RETURN_S = 110
		   127		RKET_S = 111
		   128		RSHIFT_S = 112
		   129		RTAP_S = 113
		   130		RTDEF_S = 114
		   131		RV_S = 115
		   132		SBRA_S = 116
		   133		SECTBEGIN_S = 117
		   134		SECTBRA_S = 118
		   135	
		   136		SECTEND_S = 120
		   137		SECTKET_S = 121
		   138		SEMICOLON_S = 122
		   139		SKET_S = 123
		   140		STATIC_S = 124
		   141		STRING_S = 125
		   142		STRINGCONST_S = 126
		   143		STRUCTURE_S = 127
		   144		SWITCHON_S = 128
		   145	
		   146		TABLE_S = 130
		   147		TEMP_S = 131
		   148		TEST_S = 132
		   149		TO_S = 133
		   150		TRUE_S = 134
		   151		TYPE_S = 135
		   152		UNLESS_S = 136
		   153		UNTIL_S = 137
		   154		VALDEF_S = 138
		   155	
		   156		VALOF_S = 140
		   157		VEC_S = 141
		   158		VECAP_S = 142
		   159		WHILE_S = 143
		   160	     $)
	    17	get "bcpl_cg_codes"
		     1	//  Report codes for the code generation phase.
		     2	//  Last modified on 08/15/73 at 00:33:36 by R F Mabee.
		     3	//  First installed in Version 3.4 by R F Mabee.
		     4	//  Code generation error codes separated from bcpl_trans_codes in April 1973.
		     5	
		     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
		     7	//  This file may only be reproduced or modified with explicit written
		     8	//  permission of the author.  Permission is hereby extended to those
		     9	//  persons responsible for operating the Multics system to make such
		    10	//  copies as are normally required to ensure the integrity of the Multics
		    11	//  file system.  Permission is also hereby extended to those persons
		    12	//  responsible for maintaining the Multics program libraries to make such
		    13	//  copies as are normally required for online installations.
		    14	
		    15	manifest		//  300 - 399 are reserved for CG.
		    16	     $(	BadAddress	= 300
		    17		BadLabel		= 301
		    18		BadRegOpPair	= 302
		    19		DupCase		= 303
		    20		DupLabel		= 304
		    21		LinkRefersThis	= 305
		    22		OverCase		= 306
		    23		PhaseError	= 307
		    24		UndefLab		= 308
		    25	     $)
	    18	
	    19	external
	    20	     $(	FinishText = "bcpl_cg0$FinishText"
	    21	
	    22		ApplyMonadicOperator = "bcpl_cg1$ApplyMonadicOperator"
	    23		ApplyDiadicOperator = "bcpl_cg1$ApplyDiadicOperator"
	    24		ApplyOffsetOperator = "bcpl_cg1$ApplyOffsetOperator"
	    25		MonadicJumpcond = "bcpl_cg1$MonadicJumpcond"
	    26		DiadicJumpcond = "bcpl_cg1$DiadicJumpcond"
	    27	
	    28		IsNumber = "bcpl_cg2$IsNumber"
	    29		EvalNumber = "bcpl_cg2$EvalNumber"
	    30		IsZero = "bcpl_cg2$IsZero"
	    31		IsAddress = "bcpl_cg2$IsAddress"
	    32		IsStored = "bcpl_cg2$IsStored"
	    33		LookupTemp = "bcpl_cg2$LookupTemp"
	    34		MakeCgTemp = "bcpl_cg2$MakeCgTemp"
	    35		ClaimRegister = "bcpl_cg2$ClaimRegister"
	    36		DisclaimRegister = "bcpl_cg2$DisclaimRegister"
	    37		InRegister = "bcpl_cg2$InRegister"
	    38		FindInRegister = "bcpl_cg2$FindInRegister"
	    39		CombineAddress = "bcpl_cg2$CombineAddress"
	    40		Compjump = "bcpl_cg2$Compjump"
	    41		Complab = "bcpl_cg2$Complab"
	    42		DefineLab = "bcpl_cg2$DefineLab"
	    43		LookupLabel = "bcpl_cg2$LookupLabel"
	    44		ClearRegisters = "bcpl_cg2$ClearRegisters"
	    45		ClearMemory = "bcpl_cg2$ClearMemory"
	    46		AddLiteral = "bcpl_cg2$AddLiteral"
	    47		OutLiterals = "bcpl_cg2$OutLiterals"
	    48		Outstring = "bcpl_cg2$Outstring"
	    49	
	    50		LoadRegister = "bcpl_cg3$LoadRegister"
	    51		LoadPointer = "bcpl_cg3$LoadPointer"
	    52		LoadIndex = "bcpl_cg3$LoadIndex"
	    53		LoadAppropriateRegister = "bcpl_cg3$LoadAppropriateRegister"
	    54		LoadNumber = "bcpl_cg3$LoadNumber"
	    55		SetupAddr = "bcpl_cg3$SetupAddr"
	    56		CompareToZero = "bcpl_cg3$CompareToZero"
	    57		Makeaddressable = "bcpl_cg3$Makeaddressable"
	    58		SwapAandQ = "bcpl_cg3$SwapAandQ"
	    59		Preserve = "bcpl_cg3$Preserve"
	    60		Store = "bcpl_cg3$Store"
	    61		StoreRegister = "bcpl_cg3$StoreRegister"
	    62		GetRegister = "bcpl_cg3$GetRegister"
	    63		Satisfactory = "bcpl_cg3$Satisfactory"
	    64		Literal = "bcpl_cg3$Literal"
	    65	
	    66		NewSSP = "bcpl_cg4$NewSSP"
	    67		Compentry = "bcpl_cg4$Compentry"
	    68		Compreturn = "bcpl_cg4$Compreturn"
	    69		CreateArglist = "bcpl_cg4$CreateArglist"
	    70		StoreArg = "bcpl_cg4$StoreArg"
	    71		Compfnap = "bcpl_cg4$Compfnap"
	    72		CreateSystemArglist = "bcpl_cg4$CreateSystemArglist"
	    73		StoreSystemArg = "bcpl_cg4$StoreSystemArg"
	    74		CompSystemCall = "bcpl_cg4$CompSystemCall"
	    75		ResultBlockBegin = "bcpl_cg4$ResultBlockBegin"
	    76		ResultSet = "bcpl_cg4$ResultSet"
	    77		ResultGet = "bcpl_cg4$ResultGet"
	    78		Compfinish = "bcpl_cg4$Compfinish"
	    79		Compgoto = "bcpl_cg4$Compgoto"
	    80		Compstring = "bcpl_cg4$Compstring"
	    81		Comptable = "bcpl_cg4$Comptable"
	    82		Compexternal = "bcpl_cg4$Compexternal"
	    83	
	    84		OutData = "bcpl_cg5$OutData"
	    85		Outop = "bcpl_cg5$Outop"
	    86		Outop2 = "bcpl_cg5$Outop2"
	    87		Outop3 = "bcpl_cg5$Outop3"
	    88		Outop4 = "bcpl_cg5$Outop4"
	    89		OutW = "bcpl_cg5$OutW"
	    90		OutW2 = "bcpl_cg5$OutW2"
	    91		PutCode = "bcpl_cg5$PutCode"
	    92		PutAbsBits = "bcpl_cg5$PutAbsBits"
	    93		SetLineNumber = "bcpl_cg5$SetLineNumber"
	    94		SectionHeader = "bcpl_cg5$SectionHeader"
	    95		FormOpcode = "bcpl_cg5$FormOpcode"
	    96		FormTag = "bcpl_cg5$FormTag"
	    97		CheckAddr = "bcpl_cg5$CheckAddr"
	    98	
	    99		Compswitch = "bcpl_cg6$Compswitch"
	   100	
	   101		WriteGetlp = "bcpl_cg7$WriteGetlp"
	   102		WriteEntry = "bcpl_cg7$WriteEntry"
	   103		WriteDefs = "bcpl_cg7$WriteDefs"
	   104		WriteLinkage = "bcpl_cg7$WriteLinkage"
	   105	
	   106		WriteSymbol = "bcpl_cg8$WriteSymbol"
	   107		WriteRelBits = "bcpl_cg8$WriteRelBits"
	   108		WriteObjectMap = "bcpl_cg8$WriteObjectMap"
	   109	
	   110		WriteData = "bcpl_cg9$WriteData"
	   111		WriteInstruction = "bcpl_cg9$WriteInstruction"
	   112		ListCodeItem = "bcpl_cg9$ListCodeItem"
	   113	     $)
	   114	global		//  300 - 399 are reserved for the code generator.
	   115	     $(	AbsRelBits	: 300
	   116		Address		: 301
	   117		ArgCount		: 302
	   118		ArgLen		: 303
	   119		CgTempList	: 304
	   120		CodeFirst		: 305
	   121		CodeP		: 306
	   122		CodeV		: 307
	   123		Comment		: 308
	   124	
	   125		DeferredJumpLabel	: 310
	   126		DefsLength	: 311
	   127		DefsRelbits	: 312
	   128		EntryLabel	: 313
	   129		GetLpLabel	: 314
	   130		IndicatorsSetBy	: 315
	   131		Jumpsw		: 316
	   132		LabMaxArg		: 317
	   133		LabMaxSSP		: 318
	   134	
	   135		LabTable		: 320
	   136		LC		: 321
	   137		LineMapFirst	: 322
	   138		LineMapLength	: 323
	   139		LineMapList	: 324
	   140		LinkageLength	: 325
	   141		LinkageRelbits	: 326
	   142		LinkList		: 327
	   143		Lrand		: 328
	   144	
	   145		MainEntriesList	: 330
	   146		MaxArgOffset	: 331
	   147		MaxSSP		: 332
	   148		NewLiteralsList	: 333
	   149		OldLabel		: 334
	   150		OldLiteralsList	: 335
	   151		Param		: 336
	   152		Rrand		: 337
	   153		RegisterTemps	: 338
	   154	
	   155		RegisterUsage	: 340
	   156		RelbitsFirst	: 341
	   157		RelbitsLength	: 342
	   158		RelbitsList	: 343
	   159		RelbitsOffset	: 344
	   160		Reloc		: 345
	   161		ResultInfo	: 346
	   162		ResultInfoList	: 347
	   163		SaveSpaceSize	: 348
	   164	
	   165		SymbolLength	: 350
	   166		SymbolRelbits	: 351
	   167		StackRefTag	: 352
	   168		SymtabFirst	: 353
	   169		SymtabP		: 354
	   170		SymtabV		: 355
	   171		Tag		: 356
	   172		TextLength	: 357
	   173		TextRelbits	: 358
	   174	
	   175		UsageCounter	: 360
	   176	     $)
	   177	manifest
	   178	     $(	CgTempSize = 9
	   179		CodeSize = 1000
	   180		LabTableSize = 100
	   181		SymtabSize = 200
	   182	     $)
	   183	manifest		//  Flags for listing.
	   184	     $(	CodeSwitch	= 1
	   185		InstructionSwitch	= 2
	   186		DataSwitch	= 3
	   187		LabelSwitch	= 4
	   188		LineCountSwitch	= 5
	   189		SectionSwitch	= 6
	   190		HeaderSwitch	= 7
	   191	     $)
	   192	manifest		//  Relocation codes.
	   193	     $(	RelText		= $820
	   194		RelLink18		= $822
	   195		RelNegLink18	= $823
	   196		RelLink15		= $824
	   197		RelDef		= $825
	   198		RelSymbol		= $826
	   199		RelNegSymbol	= $827
	   200		RelStat18		= $830
	   201		RelStat15		= $831
	   202		RelExtendedAbs	= $836		//  Ten bit count follows this code.
	   203	     $)
	   204	manifest
	   205	     $(	TagXrMask = $817
	   206		TagPrMask = $8700000000100
	   207	
	   208		Mod16 = $8777777777760
	   209	     $)
	   210	
	   211	manifest			//  Modifiers and tags used in the code generator.
	   212	     $(	Ap = $8000000000100
	   213		Ab = $8100000000100
	   214		Bp = $8200000000100
	   215		Bb = $8300000000100
	   216		Lp = $8400000000100
	   217		Lb = $8500000000100
	   218		Sp = $8600000000100
	   219		Sb = $8700000000100
	   220	
	   221		Al = $805
	   222		Au = $801
	   223		Dl = $807
	   224		Du = $803
	   225		Ql = $806
	   226		Qu = $802
	   227	
	   228		X0 = $810
	   229		X1 = $811
	   230		X2 = $812
	   231		X3 = $813
	   232		X4 = $814
	   233		X5 = $815
	   234		X6 = $816
	   235		X7 = $817
	   236	
	   237		Ft2 = $846
	   238		Ic = $804
	   239		Star = $820
	   240		StarThenReg = $860
	   241	     $)
	   242	manifest			//  Internal codes for all machine registers used.
	   243	     $(	Ar	= 1
	   244		Qr	= 2
	   245	
	   246		Xr0	= 3
	   247		Xr1	= 4
	   248		Xr2	= 5
	   249		Xr3	= 6
	   250		Xr4	= 7
	   251		Xr5	= 8
	   252		Xr6	= 9
	   253		Xr7	= 10
	   254	
	   255		Apr	= 11
	   256		Abr	= 12
	   257		Bpr	= 13
	   258		Bbr	= 14
	   259		Lpr	= 15
	   260		Lbr	= 16
	   261		Spr	= 17
	   262		Sbr	= 18
	   263	
	   264		EAQr	= 19
	   265	
	   266		NumberOfRegisters = 20
	   267	
	   268		AorQr	= 22
	   269		AnyPr	= 23
	   270		AnyXr	= 24
	   271	     $)
    13	get "bcpl_opcodes"
	     1	//  Definitions for 645 and 6180 machine instructions.  See FormOpcode.
	     2	//  Last modified on 07/20/73 at 23:35:00 by R F Mabee.
	     3	//  6180 instructions added and installed as Version 3.4 by R F Mabee.
	     4	//  First installed as Version 2.7 by R F Mabee
	     5	
	     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
	     7	//  This file may only be reproduced or modified with explicit written
	     8	//  permission of the author.  Permission is hereby extended to those
	     9	//  persons responsible for operating the Multics system to make such
	    10	//  copies as are normally required to ensure the integrity of the Multics
	    11	//  file system.  Permission is also hereby extended to those persons
	    12	//  responsible for maintaining the Multics program libraries to make such
	    13	//  copies as are normally required for online installations.
	    14	
	    15	manifest		//  Note: low order bit of ten bit opcode is here represented by high order bit,
	    16	     $(		//  so remaining bits will retain proper representation as octal numbers.
	    17		Abd	= $81503
	    18		Ada	= $80075
	    19		Adlx1	= $80021
	    20		Als	= $80735
	    21		Ana	= $80375
	    22		Ansa	= $80355
	    23		Anx0	= $80360
	    24		Aos	= $80054
	    25		Arl	= $80771
	    26		Asa	= $80055
	    27		Cmpa	= $80115
	    28		Div	= $80506
	    29		Dvf	= $80507
	    30		Eabap	= $80310
	    31		Eablb	= $80331
	    32		Eablp	= $80330
	    33		Eapab	= $81351
	    34		Eapap	= $80350
	    35		Eapbp	= $80352
	    36		Eaplb	= $81371
	    37		Eaplp	= $80370
	    38		Eax0	= $80620
	    39		Eax1	= $80621
	    40		Eax7	= $80627
	    41		Epaq	= $80213
	    42		Era	= $80675
	    43		Ersa	= $80655
	    44		Fad	= $80475
	    45		Fcmp	= $80515
	    46		Fdi	= $80525
	    47		Fdv	= $80565
	    48		Fld	= $80431
	    49		Fmp	= $80461
	    50		Fneg	= $80513
	    51		Fsb	= $80575
	    52		Fstr	= $80470
	    53		Fszn	= $80430
	    54		Lca	= $80335
	    55		Lda	= $80235
	    56		Ldaq	= $80237
	    57		Ldx7	= $80227
	    58		Llr	= $80777
	    59		Lprpap	= $80760
	    60		Lprpbp	= $80762
	    61		Lprplp	= $80764
	    62		Lrl	= $80773
	    63		Lxl0	= $80720
	    64		Lxl1	= $80721
	    65		Mpy	= $80402
	    66		Neg	= $80531
	    67		Negl	= $80533
	    68		Ora	= $80275
	    69		Orsa	= $80255
	    70		Sba	= $80175
	    71		Sblx1	= $80121
	    72		Sprpap	= $80540
	    73		Sprpbp	= $80542
	    74		Sprplp	= $80544
	    75		Sreg	= $80753
	    76		Ssa	= $80155
	    77		Sta	= $80755
	    78		Staq	= $80757
	    79		Stb	= $80254
	    80		Stc1	= $80554
	    81		Stcd	= $80357
	    82		Stpab	= $81251
	    83		Stpap	= $80250
	    84		Stpbp	= $80252
	    85		Stplb	= $81651
	    86		Stplp	= $80650
	    87		Stx0	= $80740
	    88		Stz	= $80450
	    89		Sxl0	= $80440
	    90		Sxl1	= $80441
	    91		Szn	= $80234
	    92		Tmi	= $80604
	    93		Tmoz	= $81604
	    94		Tnz	= $80601
	    95		Tpl	= $80605
	    96		Tpnz	= $81605
	    97		Tra	= $80710
	    98		Trc	= $80603
	    99		Tsbap	= $80270
	   100		Tsbbp	= $80272
	   101		Tsblp	= $80670
	   102		Tsx0	= $80700
	   103		Tze	= $80600
	   104	     $)
    14	
    15	let NewSSP (S) be
    16		if S > MaxSSP do MaxSSP := S
    17	
    18	and Compentry (L, ID, FunctSw, MainSw) be
    19	     $(	Jumpsw := false
    20		MaxSSP, LabMaxSSP := 0, Nextparam ()
    21		MaxArgOffset, LabMaxArg := 0, Nextparam ()
    22		let v = vec Vmax
    23		Concatenate (v, Vmax, "*fBegin text of ", ID)
    24		SectionHeader (StoreString (v))
    25		Outstring (ID)
    26		if MainSw do		//  Also need def ptr before entry.
    27		     $(	let M = Nextparam ()
    28			MainEntriesList := List4 (L, M, ID, MainEntriesList)
    29			Reloc, Param, Comment := RelDef lshift Left, M, "relative pointer to definition for entry"
    30			OutData (0)
    31		     $)
    32		Complab (L)
    33		Comment := "set lp to linkage section"
    34		test Machine = 645
    35		then $(	if GetLpLabel = 0 do GetLpLabel := Nextparam ()
    36			Outop2 (Tsx0, GetLpLabel)
    37		     $)
    38		or   $(	Outop3 (Epaq, 0, 0)
    39			Outop3 (Lprplp, 22, Sb | StarThenReg | Au)
    40		     $)
    41	
    42		if MainSw do
    43		     $(	if EntryLabel = 0 do EntryLabel := Nextparam ()
    44			Comment := "execute Multics save"
    45			Outop2 (Tsx0, EntryLabel)
    46		     $)
    47		Outop4 (Adlx1, 0, Bp, "BCPL save")
    48		test Machine = 645
    49		then $(	Outop3 (Stpbp, 0, StackRefTag)
    50			Outop3 (Stplp, 2, StackRefTag)
    51		     $)
    52		or   $(	Outop3 (Sprpbp, 0, StackRefTag)
    53			Outop3 (Sprplp, 1, StackRefTag)
    54		     $)
    55		Address, Tag, Param := 15, StackRefTag, LabMaxArg
    56		Outop (Eax0)
    57		Outop3 (Anx0, Mod16, Du)
    58		Comment := "end of save sequence*n"
    59		test Machine = 645
    60		then Outop3 (Stx0, 19, Sp)
    61		or Outop3 (Stx0, 21, Sb)
    62	     $)
    63	
    64	and Compreturn (Desc) be
    65	     $(	unless Desc = 0 do
    66		     $(	LoadRegister (Desc, Qr)
    67			DisclaimRegister (Desc)
    68		     $)
    69		test Machine = 645
    70		then Outop4 (Eapbp, 0, StackRefTag | Star, "bcpl return")
    71		or Outop4 (Lprpbp, 0, StackRefTag, "bcpl return")
    72		Outop3 (Sblx1, 0, Bp)
    73		test Machine = 645
    74		then Outop3 (Eaplp, 2, StackRefTag | Star)
    75		or Outop3 (Lprplp, 1, StackRefTag)
    76		Outop4 (Tra, 1, Bp, "end of return sequence")
    77		MaxSSP := MaxSSP + SaveSpaceSize + 1 & Even
    78		Equate (LabMaxSSP, MaxSSP)
    79		Equate (LabMaxArg, (MaxSSP > 256 -> MaxSSP, 256) + MaxArgOffset)		//  Don't reduce caller's sb|21.
    80		OutLiterals ()
    81		Jumpsw := true
    82	     $)
    83	and Equate (L, n) be
    84	     $(	DefineLab (L, n)
    85		if Listing do Format (OUTPUT, "*tequ*tL^d,^d*n", L, n)
    86	     $)
    87	
    88	and CreateArglist (Nargs) be
    89		ArgCount, ArgLen := Nargs, Nargs + SaveSpaceSize
    90	and StoreArg (i, Desc) be
    91	     $(	let To = list LV_ARG_OUT, i, 0
    92		Store (Desc, To)
    93		DisclaimRegister (Desc)
    94	     $)
    95	and Compfnap (Result, F) be
    96	     $(	SetupAddr (F)
    97		if F!0 = RTDEF_S do Address := Address + (Machine = 645 -> 1, 2)	//  Skip GETLP code.
    98		Outop (Tsbbp)
    99		Param := LabMaxSSP
   100		OutData (ArgCount)
   101		if ArgLen > MaxArgOffset do MaxArgOffset := ArgLen
   102		DisclaimRegister (F)
   103		unless Result = 0 do ClaimRegister (Qr, Result)
   104		IndicatorsSetBy := 0
   105	     $)
   106	
   107	and CreateSystemArglist (Nargs) be
   108	     $(	ArgCount, ArgLen := Nargs, Nargs * 4 + 2
   109		let T = list Nargs lshift 19 | 4, Nargs lshift 19
   110		AddLiteral (T, 2, "arglist header", 2)
   111		Outop (Ldaq)
   112		Address, Tag, Param, Comment := 0, StackRefTag, LabMaxSSP, "arg count"
   113		Outop (Staq)
   114	     $)
   115	and StoreSystemArg (i, Arg, Offset, Type, Length, StringSw) be
   116	     $(	if StringSw & Offset = 0 do Offset := Machine = 645 -> (table CONSTANT_S, 9, 0), (table CONSTANT_S, 18, 0)
   117		let Pr = LoadPointer (Arg, AnyPr)
   118		if Machine = 6180 & Offset ne 0 do
   119		     $(	let Xr = LoadIndex (Offset, AnyXr)
   120			Outop3 (Abd, 0, FormTag (Pr) | FormTag (Xr))
   121		     $)
   122		Address, Tag, Param := i * 2 + 2, StackRefTag, LabMaxSSP
   123		Outop (FormOpcode (Stpap, Pr))
   124		if Machine = 645 & Offset ne 0 do
   125		     $(	let q = LoadRegister (Offset, AorQr)
   126			Outop3 (FormOpcode (Als, q), 9, 0)
   127			Outop3 (FormOpcode (Ana, q), $8077000, Dl)
   128			Address, Tag, Param := i * 2 + 2, StackRefTag, LabMaxSSP
   129			Address, Tag, Param := i * 2 + 3, StackRefTag, LabMaxSSP
   130			Outop (FormOpcode (Orsa, q))
   131		     $)
   132		let ConstantPart, RegPart, CellOffset = 1 lshift 35, 0, 0
   133		test Length = 0
   134		then if StringSw do
   135		     $(	RegPart := GetRegister (AorQr)
   136			Outop3 (FormOpcode (Lda, RegPart), 0, FormTag (Pr))
   137			Outop3 (FormOpcode (Arl, RegPart), (Machine = 645 -> 27, 18), 0)
   138		     $)
   139		or test IsNumber (Length)
   140		then ConstantPart := ConstantPart | (EvalNumber (Length!0, Length!1) & $877777777)
   141		or   $(	RegPart := LoadRegister (Length, AorQr)
   142			Literal ($877777777, 0)
   143			Outop (FormOpcode (Ana, RegPart))
   144		     $)
   145	
   146		test IsNumber (Type)
   147		then ConstantPart := ConstantPart | (EvalNumber (Type!0, Type!1) lshift 29)
   148		or   $(	if RegPart ne 0 do
   149			     $(	CellOffset := ArgLen
   150				ArgLen := ArgLen + 1
   151				Address, Tag, Param := CellOffset, StackRefTag, LabMaxSSP
   152				Outop (FormOpcode (Sta, RegPart))
   153			     $)
   154			RegPart := LoadRegister (Type, AorQr)
   155			Outop3 (FormOpcode (Als, RegPart), 29, 0)
   156		     $)
   157		test RegPart = 0
   158		then AddLiteral (lv ConstantPart, 1, "descriptor", 0)
   159		or   $(	Literal (ConstantPart, 0)
   160			Outop (FormOpcode (Ora, RegPart))
   161			let Op = nil
   162			test CellOffset = 0
   163			then $(	CellOffset := ArgLen
   164				ArgLen := ArgLen + 1
   165				Op := Sta
   166			     $)
   167			or Op := Orsa
   168			Address, Tag, Param := CellOffset, StackRefTag, LabMaxSSP
   169			Outop (FormOpcode (Op, RegPart))
   170			Address, Tag, Param := CellOffset, StackRefTag, LabMaxSSP
   171		     $)
   172		Outop (FormOpcode (Eapap, Pr))
   173		Address, Tag, Param := i * 2 + ArgCount * 2 + 2, StackRefTag, LabMaxSSP
   174		Outop (FormOpcode (Stpap, Pr))
   175		DisclaimRegister (Arg)
   176		unless Offset = 0 do DisclaimRegister (Offset)
   177		DisclaimRegister (Type)
   178		unless Length = 0 do DisclaimRegister (Length)
   179	     $)
   180	and CompSystemCall (F) be
   181	     $(	if ArgLen > MaxArgOffset do MaxArgOffset := ArgLen
   182		test Machine = 645
   183		then $(	Outop3 (Stb, 0, Sp)
   184			Outop3 (Sreg, 8, Sp)
   185		     $)
   186		or   $(	Outop3 (Sxl1, 8, Sp)		//  Save stack index in stack frame header.
   187			Outop3 (Stplp, 24, Sp)
   188		     $)
   189		LoadPointer (F, Bpr)
   190		Address, Tag, Param := 0, StackRefTag, LabMaxSSP
   191		Outop (Eapap)
   192		Outop4 (Tsblp, 30, Sb | Star, "Multics call operator")
   193		if Machine = 6180 do
   194		     $(	Outop3 (Lxl1, 8, Sp)
   195			Outop3 (Lprplp, 1, StackRefTag)
   196		     $)
   197		DisclaimRegister (F)
   198		IndicatorsSetBy := 0
   199	     $)
   200	
   201	and ResultBlockBegin () be
   202	     $(	let New = Newvec (1)
   203		New!0, New!1 := ResultInfo, ResultInfoList
   204		ResultInfo, ResultInfoList := 0, New
   205	     $)
   206	and ResultSet (Desc) be
   207	     $(	ResultInfo := LoadAppropriateRegister (Desc, ResultInfo)
   208		DisclaimRegister (Desc)
   209	     $)
   210	and ResultGet (Desc) be
   211	     $(	ClaimRegister (ResultInfo, Desc)
   212		let Old = ResultInfoList
   213		ResultInfo, ResultInfoList := Old!0, Old!1
   214		Freevec (Old, 1)
   215	     $)
   216	
   217	and Compstring (s) be
   218	     $(	let v = vec Vmax
   219		let Len = FormStringconst (s, v)
   220		AddLiteral (v, Len + 1, s, 0)
   221	     $)
   222	and Comptable (t) be
   223	     $(	let v = Newvec (t!0)
   224		for i = 0 to t!0 - 1 do v!i := EvalNumber (t!(i * 2 + 1), t!(i * 2 + 2))
   225		AddLiteral (v, t!0, "a table", 2)
   226		Freevec (v, t!0)
   227	     $)
   228	let Compexternal (s) = valof
   229	     $(	let p = LinkList
   230		until p = 0 do
   231		     $(	if EqualString (s, p!1) resultis p!2
   232			p := p!0
   233		     $)
   234		let L = Nextparam ()
   235		LinkList := List4 (LinkList, s, L, 0)
   236		resultis L
   237	     $)
   238	and Compfinish () be
   239		Outop4 (Tra, 34, Sb | Star, "Multics return")
   240	and Compgoto (p) be
   241	     $(	SetupAddr (p)
   242		Outop (Tra)
   243		DisclaimRegister (p)
   244	     $)



CAE time 7.9, 119 source lines per second.
cross reference table

Ab			bcpl_cg_head:  213

Abd			bcpl_opcodes:  17, bcpl_cg4:  120

Abr			bcpl_cg_head:  256

AbsRelBits		bcpl_cg_head:  115

Ada			bcpl_opcodes:  18

AddLiteral		bcpl_cg_head:  46, bcpl_cg4:  110, 158, 220, 225

Address			bcpl_cg_head:  116, bcpl_cg4:  55, 97, 97, 112, 122, 128, 129, 151, 168, 170, 173, 190

Adlx1			bcpl_opcodes:  19, bcpl_cg4:  47

Al			bcpl_cg_head:  221

Als			bcpl_opcodes:  20, bcpl_cg4:  126, 155

Ana			bcpl_opcodes:  21, bcpl_cg4:  127, 143

AND_S			bcpl_symbols:  17

Ansa			bcpl_opcodes:  22

Anx0			bcpl_opcodes:  23, bcpl_cg4:  57

AnyPr			bcpl_cg_head:  269, bcpl_cg4:  117

AnyXr			bcpl_cg_head:  270, bcpl_cg4:  119

AorQr			bcpl_cg_head:  268, bcpl_cg4:  125, 135, 141, 154

Aos			bcpl_opcodes:  24

Ap			bcpl_cg_head:  212

ApplyDiadicOperator		bcpl_cg_head:  23

ApplyMonadicOperator	bcpl_cg_head:  22

ApplyOffsetOperator		bcpl_cg_head:  24

Apr			bcpl_cg_head:  255

Ar			bcpl_cg_head:  243

Arg			bcpl_cg4:  115, 117, 175

ArgCount			bcpl_cg_head:  117, bcpl_cg4:  89, 100, 108, 173

ArgLen			bcpl_cg_head:  118, bcpl_cg4:  89, 101, 101, 108, 149, 150, 150, 163, 164, 164, 181, 181

Arl			bcpl_opcodes:  25, bcpl_cg4:  137

Asa			bcpl_opcodes:  26

ASSIGN_S			bcpl_symbols:  18

Au			bcpl_cg_head:  222, bcpl_cg4:  39

BadAddress		bcpl_cg_codes:  16

BadLabel			bcpl_cg_codes:  17

BadRegOpPair		bcpl_cg_codes:  18

Bb			bcpl_cg_head:  215

Bbr			bcpl_cg_head:  258

BE_S			bcpl_symbols:  19

BIT_S			bcpl_symbols:  20

Bp			bcpl_cg_head:  214, bcpl_cg4:  47, 72, 76

Bpr			bcpl_cg_head:  257, bcpl_cg4:  189

BREAK_S			bcpl_symbols:  21

BuildObject		bcpl_compiler_head:  72

BY_S			bcpl_symbols:  22

CAE			bcpl_compiler_head:  64

CaeReport			bcpl_compiler_head:  49

CALL_S			bcpl_symbols:  23

CASE_S			bcpl_symbols:  24

CellOffset		bcpl_cg4:  132, 149, 151, 162, 163, 168, 170

CgInit			bcpl_compiler_head:  71

CGreport			bcpl_compiler_head:  51

CgTempList		bcpl_cg_head:  119

CgTempSize		bcpl_cg_head:  178

Ch			bcpl_compiler_head:  92

CHARCONST_S		bcpl_symbols:  27

CHAR_S			bcpl_symbols:  26

CheckAddr			bcpl_cg_head:  97

ClaimRegister		bcpl_cg_head:  35, bcpl_cg4:  103, 211

Cleanup			bcpl_compiler_head:  61

ClearMemory		bcpl_cg_head:  45

ClearRegisters		bcpl_cg_head:  44

Cmpa			bcpl_opcodes:  27

CodeFirst			bcpl_cg_head:  120

CodeP			bcpl_cg_head:  121

CodeSize			bcpl_cg_head:  179

CodeSwitch		bcpl_cg_head:  184

CodeV			bcpl_cg_head:  122

COLON_S			bcpl_symbols:  28

Column			bcpl_compiler_head:  128

CombineAddress		bcpl_cg_head:  39

COMMA_S			bcpl_symbols:  29

Comment			bcpl_cg_head:  123, bcpl_cg4:  29, 33, 44, 58, 112

CompareStrings		bcpl_compiler_head:  25

CompareToZero		bcpl_cg_head:  56

Compentry			bcpl_cg_head:  67, bcpl_cg4:  18

Compexternal		bcpl_cg_head:  82, bcpl_cg4:  228

Compfinish		bcpl_cg_head:  78, bcpl_cg4:  238

Compfnap			bcpl_cg_head:  71, bcpl_cg4:  95

Compgoto			bcpl_cg_head:  79, bcpl_cg4:  240

CompilerDTM		bcpl_compiler_head:  112

CompilerDTMString		bcpl_compiler_head:  111

CompilerVersionNumber	bcpl_compiler_head:  110

CompilerVersionString	bcpl_compiler_head:  109

Compjump			bcpl_cg_head:  40

Complab			bcpl_cg_head:  41, bcpl_cg4:  32

Compreturn		bcpl_cg_head:  68, bcpl_cg4:  64

Compstring		bcpl_cg_head:  80, bcpl_cg4:  217

Compswitch		bcpl_cg_head:  99

CompSystemCall		bcpl_cg_head:  74, bcpl_cg4:  180

Comptable			bcpl_cg_head:  81, bcpl_cg4:  222

Concatenate		bcpl_compiler_head:  26, bcpl_cg4:  23

COND_S			bcpl_symbols:  30

ConstantPart		bcpl_cg4:  132, 140, 140, 147, 147, 158, 159

CONSTANT_S		bcpl_symbols:  31, bcpl_cg4:  116, 116

CONSTDEF_S		bcpl_symbols:  32

ConvertNtoS		bcpl_compiler_head:  28

ConvertStoN		bcpl_compiler_head:  27

CreateArglist		bcpl_cg_head:  69, bcpl_cg4:  88

CreateSystemArglist		bcpl_cg_head:  72, bcpl_cg4:  107

Crep			bcpl_compiler_head:  98

DataSwitch		bcpl_cg_head:  186

DEFAULT_S			bcpl_symbols:  33

DeferredJumpLabel		bcpl_cg_head:  125

DefineLab			bcpl_cg_head:  42, bcpl_cg4:  84

DefsLength		bcpl_cg_head:  126

DefsRelbits		bcpl_cg_head:  127

Desc			bcpl_cg4:  64, 65, 66, 67, 90, 92, 93, 206, 207, 208, 210, 211

DiadicJumpcond		bcpl_cg_head:  26

DictionaryEntry		bcpl_compiler_head:  127

DisclaimRegister		bcpl_cg_head:  36, bcpl_cg4:  67, 93, 102, 175, 176, 177, 178, 197, 208, 243

Div			bcpl_opcodes:  28

DIV_F			bcpl_symbols:  34

DIV_S			bcpl_symbols:  36

Dl			bcpl_cg_head:  223, bcpl_cg4:  127

DOUBLE_S			bcpl_symbols:  38

DO_S			bcpl_symbols:  37

Du			bcpl_cg_head:  224, bcpl_cg4:  57

DupCase			bcpl_cg_codes:  19

DupLabel			bcpl_cg_codes:  20

Dvf			bcpl_opcodes:  29

Eabap			bcpl_opcodes:  30

Eablb			bcpl_opcodes:  31

Eablp			bcpl_opcodes:  32

Eapab			bcpl_opcodes:  33

Eapap			bcpl_opcodes:  34, bcpl_cg4:  172, 191

Eapbp			bcpl_opcodes:  35, bcpl_cg4:  70

Eaplb			bcpl_opcodes:  36

Eaplp			bcpl_opcodes:  37, bcpl_cg4:  74

EAQr			bcpl_cg_head:  264

Eax0			bcpl_opcodes:  38, bcpl_cg4:  56

Eax1			bcpl_opcodes:  39

Eax7			bcpl_opcodes:  40

ENDCASE_S			bcpl_symbols:  39

Endofstreamch		bcpl_compiler_head:  135

ENDPROG_S			bcpl_symbols:  40

EnterIntoCrossreference	bcpl_compiler_head:  57

EntryLabel		bcpl_cg_head:  128, bcpl_cg4:  43, 43, 45

Epaq			bcpl_opcodes:  41, bcpl_cg4:  38

EqualString		bcpl_compiler_head:  24, bcpl_cg4:  231

Equate			bcpl_cg4:  78, 79, 83

EQV_S			bcpl_symbols:  44

EQ_F			bcpl_symbols:  42

EQ_S			bcpl_symbols:  43

Era			bcpl_opcodes:  42

Errorsw			bcpl_compiler_head:  124

ERROR_S			bcpl_symbols:  41

Ersa			bcpl_opcodes:  43

EvalNumber		bcpl_cg_head:  29, bcpl_cg4:  140, 147, 224

Even			bcpl_compiler_head:  136, bcpl_cg4:  77

EXTERNAL_S		bcpl_symbols:  46

F			bcpl_cg4:  95, 96, 97, 102, 180, 189, 197

Fad			bcpl_opcodes:  44

FALSE_S			bcpl_symbols:  47

Fcmp			bcpl_opcodes:  45

Fdi			bcpl_opcodes:  46

Fdv			bcpl_opcodes:  47

FileCount			bcpl_compiler_head:  118

FileNames			bcpl_compiler_head:  116

FileShift			bcpl_compiler_head:  138

FilesInfo			bcpl_compiler_head:  117

FindInRegister		bcpl_cg_head:  38

FindPrintName		bcpl_compiler_head:  56

FinishText		bcpl_cg_head:  20

FINISH_S			bcpl_symbols:  48

FIXED_S			bcpl_symbols:  49

Fld			bcpl_opcodes:  48

FLOAT_S			bcpl_symbols:  50

Fmp			bcpl_opcodes:  49

FNAP_S			bcpl_symbols:  51

FNDEF_S			bcpl_symbols:  52

Fneg			bcpl_opcodes:  50

Format			bcpl_compiler_head:  20, bcpl_cg4:  85

FormCharconst		bcpl_compiler_head:  46

FormOpcode		bcpl_cg_head:  95, bcpl_cg4:  123, 126, 127, 130, 136, 137, 143, 152, 155, 160, 169, 172, 
			174

FormStringconst		bcpl_compiler_head:  47, bcpl_cg4:  219

FormTag			bcpl_cg_head:  96, bcpl_cg4:  120, 120, 136

FOR_S			bcpl_symbols:  53

Freevec			bcpl_compiler_head:  34, bcpl_cg4:  214, 226

Fsb			bcpl_opcodes:  51

Fstr			bcpl_opcodes:  52

Fszn			bcpl_opcodes:  53

Ft2			bcpl_cg_head:  237

FunctSw			bcpl_cg4:  18

GetLpLabel		bcpl_cg_head:  129, bcpl_cg4:  35, 35, 36

GetRegister		bcpl_cg_head:  62, bcpl_cg4:  135

GetStream			bcpl_compiler_head:  62

GetVersion		bcpl_compiler_head:  59

GET_S			bcpl_symbols:  57

GE_F			bcpl_symbols:  54

GE_S			bcpl_symbols:  56

GlobalTemp		bcpl_compiler_head:  131

GLOBAL_S			bcpl_symbols:  58

GOTO_S			bcpl_symbols:  59

GR_F			bcpl_symbols:  60

GR_S			bcpl_symbols:  61

HaveListingFile		bcpl_compiler_head:  105

HeaderSwitch		bcpl_cg_head:  190

i			bcpl_cg4:  90, 91, 115, 122, 128, 129, 173, 224, 224, 224, 224

Ic			bcpl_cg_head:  238

ID			bcpl_cg4:  18, 23, 25, 28

IFNOT_S			bcpl_symbols:  63

IFSO_S			bcpl_symbols:  64

IF_S			bcpl_symbols:  62

IndicatorsSetBy		bcpl_cg_head:  130, bcpl_cg4:  104, 198

INPUT			bcpl_compiler_head:  90

InRegister		bcpl_cg_head:  37

InstructionSwitch		bcpl_cg_head:  185

INTO_S			bcpl_symbols:  66

IsAddress			bcpl_cg_head:  31

IsNumber			bcpl_cg_head:  28, bcpl_cg4:  139, 146

IsStored			bcpl_cg_head:  32

IsZero			bcpl_cg_head:  30

Jumpsw			bcpl_cg_head:  131, bcpl_cg4:  19, 81

L			bcpl_cg4:  18, 28, 32, 83, 84, 85, 234, 235, 236

LABDEF_S			bcpl_symbols:  67

LabelSwitch		bcpl_cg_head:  187

LABEL_S			bcpl_symbols:  68

LabMaxArg			bcpl_cg_head:  132, bcpl_cg4:  21, 55, 79

LabMaxSSP			bcpl_cg_head:  133, bcpl_cg4:  20, 78, 99, 112, 122, 128, 129, 151, 168, 170, 173, 190

LabTable			bcpl_cg_head:  135

LabTableSize		bcpl_cg_head:  180

Lb			bcpl_cg_head:  217

Lbr			bcpl_cg_head:  260

LC			bcpl_cg_head:  136

Lca			bcpl_opcodes:  54

Lda			bcpl_opcodes:  55, bcpl_cg4:  136

Ldaq			bcpl_opcodes:  56, bcpl_cg4:  111

Ldx7			bcpl_opcodes:  57

Left			bcpl_compiler_head:  134, bcpl_cg4:  29

Len			bcpl_cg4:  219, 220

Length			bcpl_compiler_head:  29, bcpl_cg4:  115, 133, 139, 140, 140, 141, 178, 178

LengthInWords		bcpl_compiler_head:  30

LENGTH_S			bcpl_symbols:  71

LET_S			bcpl_symbols:  72

LexInit			bcpl_compiler_head:  65

LE_F			bcpl_symbols:  69

LE_S			bcpl_symbols:  70

LineCount			bcpl_compiler_head:  123

LineCountSwitch		bcpl_cg_head:  188

LineMap			bcpl_compiler_head:  100

LineMapFirst		bcpl_cg_head:  137

LineMapLength		bcpl_cg_head:  138

LineMapList		bcpl_cg_head:  139

LineMask			bcpl_compiler_head:  138

LinkageLength		bcpl_cg_head:  140

LinkageRelbits		bcpl_cg_head:  141

LinkList			bcpl_cg_head:  142, bcpl_cg4:  229, 235, 235

LinkRefersThis		bcpl_cg_codes:  21

List1			bcpl_compiler_head:  35

List2			bcpl_compiler_head:  36

List3			bcpl_compiler_head:  37

List4			bcpl_compiler_head:  38, bcpl_cg4:  28, 235

List5			bcpl_compiler_head:  39

List6			bcpl_compiler_head:  40

ListCodeItem		bcpl_cg_head:  112

Listing			bcpl_compiler_head:  95, bcpl_cg4:  85

LIST_S			bcpl_symbols:  73

Literal			bcpl_cg_head:  64, bcpl_cg4:  142, 159

Llr			bcpl_opcodes:  58

LoadAppropriateRegister	bcpl_cg_head:  53, bcpl_cg4:  207

LoadIndex			bcpl_cg_head:  52, bcpl_cg4:  119

LoadNumber		bcpl_cg_head:  54

LoadPointer		bcpl_cg_head:  51, bcpl_cg4:  117, 189

LoadRegister		bcpl_cg_head:  50, bcpl_cg4:  66, 125, 141, 154

LOCAL_S			bcpl_symbols:  74

LOGAND_S			bcpl_symbols:  76

LOGOR_S			bcpl_symbols:  77

LookupLabel		bcpl_cg_head:  43

LookupTemp		bcpl_cg_head:  33

LOOP_S			bcpl_symbols:  78

Lp			bcpl_cg_head:  216

Lpr			bcpl_cg_head:  259

Lprpap			bcpl_opcodes:  59

Lprpbp			bcpl_opcodes:  60, bcpl_cg4:  71

Lprplp			bcpl_opcodes:  61, bcpl_cg4:  39, 75, 195

Lrand			bcpl_cg_head:  143

Lrl			bcpl_opcodes:  62

LSHIFT_S			bcpl_symbols:  81

LS_F			bcpl_symbols:  79

LS_S			bcpl_symbols:  80

LVECAP_S			bcpl_symbols:  83

LV_ARG_OUT		bcpl_symbols:  84, bcpl_cg4:  91

LV_FNAP_RESULT		bcpl_symbols:  86

LV_GLOBAL			bcpl_symbols:  87

LV_LOCAL			bcpl_symbols:  88

LV_S			bcpl_symbols:  82

LV_STATIC			bcpl_symbols:  89

LV_TEMP			bcpl_symbols:  90

Lxl0			bcpl_opcodes:  63

Lxl1			bcpl_opcodes:  64, bcpl_cg4:  194

M			bcpl_cg4:  27, 28, 29

Machine			bcpl_compiler_head:  102, bcpl_cg4:  34, 48, 59, 69, 73, 97, 116, 118, 124, 137, 182, 
			193

MainEntriesList		bcpl_cg_head:  145, bcpl_cg4:  28, 28

MainSw			bcpl_cg4:  18, 26, 42

MAIN_S			bcpl_symbols:  91

Makeaddressable		bcpl_cg_head:  57

MakeCgTemp		bcpl_cg_head:  34

MakeTimeString		bcpl_compiler_head:  44

MANIFEST_S		bcpl_symbols:  92

MaxArgOffset		bcpl_cg_head:  146, bcpl_cg4:  21, 79, 101, 101, 181, 181

MaxSSP			bcpl_cg_head:  147, bcpl_cg4:  16, 16, 20, 77, 77, 78, 79, 79

MINUS_F			bcpl_symbols:  93

MINUS_S			bcpl_symbols:  94

Mod16			bcpl_cg_head:  208, bcpl_cg4:  57

MonadicJumpcond		bcpl_cg_head:  25

MONITOR			bcpl_compiler_head:  91

Mpy			bcpl_opcodes:  65

MULT_F			bcpl_symbols:  96

MULT_S			bcpl_symbols:  97

n			bcpl_cg4:  83, 84, 85

NAMECHAIN			bcpl_compiler_head:  125

NAME_S			bcpl_symbols:  98

Nargs			bcpl_cg4:  88, 89, 89, 107, 108, 108, 109, 109

Neg			bcpl_opcodes:  66

Negl			bcpl_opcodes:  67

NEG_F			bcpl_symbols:  99

NEG_S			bcpl_symbols:  100

NEQV_S			bcpl_symbols:  101

New			bcpl_cg4:  202, 203, 203, 204

NewLiteralsList		bcpl_cg_head:  148

NewSSP			bcpl_cg_head:  66, bcpl_cg4:  15

Newvec			bcpl_compiler_head:  33, bcpl_cg4:  202, 223

Nextparam			bcpl_compiler_head:  45, bcpl_cg4:  20, 21, 27, 35, 43, 234

Nextsymb			bcpl_compiler_head:  53

NE_F			bcpl_symbols:  102

NE_S			bcpl_symbols:  103

NIL_S			bcpl_symbols:  104

NOT_S			bcpl_symbols:  106

NumberOfRegisters		bcpl_cg_head:  266

NUMBER_S			bcpl_symbols:  107

OcodeSw			bcpl_compiler_head:  104

Offset			bcpl_cg4:  115, 116, 116, 118, 119, 124, 125, 176, 176

OFFSET_S			bcpl_symbols:  108

Old			bcpl_cg4:  212, 213, 213, 214

OldLabel			bcpl_cg_head:  149

OldLiteralsList		bcpl_cg_head:  150

Op			bcpl_cg4:  161, 165, 167, 169

Optimize			bcpl_compiler_head:  101

OptionString		bcpl_compiler_head:  115

Ora			bcpl_opcodes:  68, bcpl_cg4:  160

Orsa			bcpl_opcodes:  69, bcpl_cg4:  130, 167

OR_S			bcpl_symbols:  109

OutData			bcpl_cg_head:  84, bcpl_cg4:  30, 100

OutLiterals		bcpl_cg_head:  47, bcpl_cg4:  80

Outop			bcpl_cg_head:  85, bcpl_cg4:  56, 98, 111, 113, 123, 130, 143, 152, 160, 169, 172, 174, 
			191, 242

Outop2			bcpl_cg_head:  86, bcpl_cg4:  36, 45

Outop3			bcpl_cg_head:  87, bcpl_cg4:  38, 39, 49, 50, 52, 53, 57, 60, 61, 72, 74, 75, 120, 126, 
			127, 136, 137, 155, 183, 184, 186, 187, 194, 195

Outop4			bcpl_cg_head:  88, bcpl_cg4:  47, 70, 71, 76, 192, 239

OUTPUT			bcpl_compiler_head:  89, bcpl_cg4:  85

Outstring			bcpl_cg_head:  48, bcpl_cg4:  25

OutW			bcpl_cg_head:  89

OutW2			bcpl_cg_head:  90

OverCase			bcpl_cg_codes:  22

p			bcpl_cg4:  229, 230, 231, 231, 232, 232, 240, 241, 243

Packstring		bcpl_compiler_head:  21

Param			bcpl_cg_head:  151, bcpl_cg4:  29, 55, 99, 112, 122, 128, 129, 151, 168, 170, 173, 190

PhaseError		bcpl_cg_codes:  23

Plist			bcpl_compiler_head:  68

PLUS_F			bcpl_symbols:  110

PLUS_S			bcpl_symbols:  111

Pname			bcpl_compiler_head:  67

POINTER_S			bcpl_symbols:  112

PopInput			bcpl_compiler_head:  43

POS_F			bcpl_symbols:  113

POS_S			bcpl_symbols:  114

PPrep			bcpl_compiler_head:  97

Pr			bcpl_cg4:  117, 120, 123, 136, 172, 174

Preserve			bcpl_cg_head:  59

ProgramName		bcpl_compiler_head:  119

PushInput			bcpl_compiler_head:  42

PutAbsBits		bcpl_cg_head:  92

PutCode			bcpl_cg_head:  91

q			bcpl_cg4:  125, 126, 127, 130

Ql			bcpl_cg_head:  225

Qr			bcpl_cg_head:  244, bcpl_cg4:  66, 103

Qu			bcpl_cg_head:  226

QuietSw			bcpl_compiler_head:  106

RandomI			bcpl_compiler_head:  31

RBRA_S			bcpl_symbols:  116

Readch			bcpl_compiler_head:  16

RegisterTemps		bcpl_cg_head:  153

RegisterUsage		bcpl_cg_head:  155

REGISTER_S		bcpl_symbols:  117

RegPart			bcpl_cg4:  132, 135, 136, 137, 141, 143, 148, 152, 154, 155, 157, 160, 169

RelbitsFirst		bcpl_cg_head:  156

RelbitsLength		bcpl_cg_head:  157

RelbitsList		bcpl_cg_head:  158

RelbitsOffset		bcpl_cg_head:  159

RelDef			bcpl_cg_head:  197, bcpl_cg4:  29

RelExtendedAbs		bcpl_cg_head:  202

RelLink15			bcpl_cg_head:  196

RelLink18			bcpl_cg_head:  194

RelNegLink18		bcpl_cg_head:  195

RelNegSymbol		bcpl_cg_head:  199

Reloc			bcpl_cg_head:  160, bcpl_cg4:  29

RelStat15			bcpl_cg_head:  201

RelStat18			bcpl_cg_head:  200

RelSymbol			bcpl_cg_head:  198

RelText			bcpl_cg_head:  193

REL_S			bcpl_symbols:  118

RemoveEscapes		bcpl_compiler_head:  23

REM_S			bcpl_symbols:  119

REPEATUNTIL_S		bcpl_symbols:  122

REPEATWHILE_S		bcpl_symbols:  123

REPEAT_S			bcpl_symbols:  121

REP_S			bcpl_symbols:  120

Result			bcpl_cg4:  95, 103, 103

ResultBlockBegin		bcpl_cg_head:  75, bcpl_cg4:  201

ResultGet			bcpl_cg_head:  77, bcpl_cg4:  210

ResultInfo		bcpl_cg_head:  161, bcpl_cg4:  203, 204, 207, 207, 211, 213

ResultInfoList		bcpl_cg_head:  162, bcpl_cg4:  203, 204, 212, 213

RESULTIS_S		bcpl_symbols:  124

ResultSet			bcpl_cg_head:  76, bcpl_cg4:  206

RETURN_S			bcpl_symbols:  126

Right			bcpl_compiler_head:  134

RKET_S			bcpl_symbols:  127

Rrand			bcpl_cg_head:  152

RSHIFT_S			bcpl_symbols:  128

RTAP_S			bcpl_symbols:  129

RTDEF_S			bcpl_symbols:  130, bcpl_cg4:  97

RV_S			bcpl_symbols:  131

S			bcpl_cg4:  15, 16, 16

s			bcpl_cg4:  217, 219, 220, 228, 231, 235

Satisfactory		bcpl_cg_head:  63

SaveSpaceSize		bcpl_cg_head:  163, bcpl_cg4:  77, 89

Sb			bcpl_cg_head:  219, bcpl_cg4:  39, 61, 192, 239

Sba			bcpl_opcodes:  70

Sblx1			bcpl_opcodes:  71, bcpl_cg4:  72

Sbr			bcpl_cg_head:  262

SBRA_S			bcpl_symbols:  132

SECTBEGIN_S		bcpl_symbols:  133

SECTBRA_S			bcpl_symbols:  134

SECTEND_S			bcpl_symbols:  136

SectionHeader		bcpl_cg_head:  94, bcpl_cg4:  24

SectionSwitch		bcpl_cg_head:  189

SECTKET_S			bcpl_symbols:  137

SEMICOLON_S		bcpl_symbols:  138

SetLineNumber		bcpl_cg_head:  93

SetupAddr			bcpl_cg_head:  55, bcpl_cg4:  96, 241

SKET_S			bcpl_symbols:  139

Sp			bcpl_cg_head:  218, bcpl_cg4:  60, 183, 184, 186, 187, 194

Spr			bcpl_cg_head:  261

Sprpap			bcpl_opcodes:  72

Sprpbp			bcpl_opcodes:  73, bcpl_cg4:  52

Sprplp			bcpl_opcodes:  74, bcpl_cg4:  53

Sreg			bcpl_opcodes:  75, bcpl_cg4:  184

Ssa			bcpl_opcodes:  76

Sta			bcpl_opcodes:  77, bcpl_cg4:  152, 165

StackRefTag		bcpl_cg_head:  167, bcpl_cg4:  49, 50, 52, 53, 55, 70, 71, 74, 75, 112, 122, 128, 129, 
			151, 168, 170, 173, 190, 195

Staq			bcpl_opcodes:  78, bcpl_cg4:  113

Star			bcpl_cg_head:  239, bcpl_cg4:  70, 74, 192, 239

StarThenReg		bcpl_cg_head:  240, bcpl_cg4:  39

STATIC_S			bcpl_symbols:  140

Stb			bcpl_opcodes:  79, bcpl_cg4:  183

Stc1			bcpl_opcodes:  80

Stcd			bcpl_opcodes:  81

Store			bcpl_cg_head:  60, bcpl_cg4:  92

StoreArg			bcpl_cg_head:  70, bcpl_cg4:  90

StoreRegister		bcpl_cg_head:  61

StoreString		bcpl_compiler_head:  41, bcpl_cg4:  24

StoreSystemArg		bcpl_cg_head:  73, bcpl_cg4:  115

Stpab			bcpl_opcodes:  82

Stpap			bcpl_opcodes:  83, bcpl_cg4:  123, 174

Stpbp			bcpl_opcodes:  84, bcpl_cg4:  49

Stplb			bcpl_opcodes:  85

Stplp			bcpl_opcodes:  86, bcpl_cg4:  50, 187

STRINGCONST_S		bcpl_symbols:  142

StringSw			bcpl_cg4:  115, 116, 134

STRING_S			bcpl_symbols:  141

STRUCTURE_S		bcpl_symbols:  143

Stx0			bcpl_opcodes:  87, bcpl_cg4:  60, 61

Stz			bcpl_opcodes:  88

SwapAandQ			bcpl_cg_head:  58

SWITCHON_S		bcpl_symbols:  144

Sxl0			bcpl_opcodes:  89

Sxl1			bcpl_opcodes:  90, bcpl_cg4:  186

Symb			bcpl_compiler_head:  126

SymbolLength		bcpl_cg_head:  165

SymbolName		bcpl_compiler_head:  55

SymbolRelbits		bcpl_cg_head:  166

Symbols			bcpl_compiler_head:  99

SymtabFirst		bcpl_cg_head:  168

SymtabP			bcpl_cg_head:  169

SymtabSize		bcpl_cg_head:  181

SymtabV			bcpl_cg_head:  170

Szn			bcpl_opcodes:  91

T			bcpl_cg4:  109, 110

t			bcpl_cg4:  222, 223, 224, 224, 224, 225, 226

TABLE_S			bcpl_symbols:  146

Tag			bcpl_cg_head:  171, bcpl_cg4:  55, 112, 122, 128, 129, 151, 168, 170, 173, 190

TagPrMask			bcpl_cg_head:  206

TagXrMask			bcpl_cg_head:  205

TEMP_S			bcpl_symbols:  147

TEST_S			bcpl_symbols:  148

TextLength		bcpl_cg_head:  172

TextRelbits		bcpl_cg_head:  173

TimeNow			bcpl_compiler_head:  114

TimeNowString		bcpl_compiler_head:  113

Tmi			bcpl_opcodes:  92

Tmoz			bcpl_opcodes:  93

Tnz			bcpl_opcodes:  94

To			bcpl_cg4:  91, 92

TO_S			bcpl_symbols:  149

Tpl			bcpl_opcodes:  95

Tpnz			bcpl_opcodes:  96

Tra			bcpl_opcodes:  97, bcpl_cg4:  76, 239, 242

Trans			bcpl_compiler_head:  70

Transreport		bcpl_compiler_head:  50

Trc			bcpl_opcodes:  98

TRUE_S			bcpl_symbols:  150

Tsbap			bcpl_opcodes:  99

Tsbbp			bcpl_opcodes:  100, bcpl_cg4:  98

Tsblp			bcpl_opcodes:  101, bcpl_cg4:  192

Tsx0			bcpl_opcodes:  102, bcpl_cg4:  36, 45

Type			bcpl_cg4:  115, 146, 147, 147, 154, 177

TYPE_S			bcpl_symbols:  151

Tze			bcpl_opcodes:  103

UndefLab			bcpl_cg_codes:  24

UnexpectedCase		bcpl_compiler_head:  139

UNLESS_S			bcpl_symbols:  152

Unpackstring		bcpl_compiler_head:  22

UNTIL_S			bcpl_symbols:  153

UpperCase			bcpl_compiler_head:  96

UsageCounter		bcpl_cg_head:  175

UserID			bcpl_compiler_head:  120

UtilitiesInit		bcpl_compiler_head:  60

v			bcpl_cg4:  22, 23, 24, 218, 219, 220, 223, 224, 225, 226

VALDEF_S			bcpl_symbols:  154

VALOF_S			bcpl_symbols:  156

VECAP_S			bcpl_symbols:  158

VEC_S			bcpl_symbols:  157

Vmax			bcpl_compiler_head:  137, bcpl_cg4:  22, 23, 218

WHILE_S			bcpl_symbols:  159

Writech			bcpl_compiler_head:  17

WriteData			bcpl_cg_head:  110

WriteDefs			bcpl_cg_head:  103

WriteEntry		bcpl_cg_head:  102

WriteGetlp		bcpl_cg_head:  101

WriteInstruction		bcpl_cg_head:  111

WriteLinkage		bcpl_cg_head:  104

WriteN			bcpl_compiler_head:  19

WriteObjectListing		bcpl_compiler_head:  73

WriteObjectMap		bcpl_cg_head:  108

WriteRelBits		bcpl_cg_head:  107

WriteS			bcpl_compiler_head:  18

WriteSymbol		bcpl_cg_head:  106

X0			bcpl_cg_head:  228

X1			bcpl_cg_head:  229

X2			bcpl_cg_head:  230

X3			bcpl_cg_head:  231

X4			bcpl_cg_head:  232

X5			bcpl_cg_head:  233

X6			bcpl_cg_head:  234

X7			bcpl_cg_head:  235

Xr			bcpl_cg4:  119, 120

Xr0			bcpl_cg_head:  246

Xr1			bcpl_cg_head:  247

Xr2			bcpl_cg_head:  248

Xr3			bcpl_cg_head:  249

Xr4			bcpl_cg_head:  250

Xr5			bcpl_cg_head:  251

Xr6			bcpl_cg_head:  252

Xr7			bcpl_cg_head:  253

Xref			bcpl_compiler_head:  103




Trans time 2.7, 760 object words per second.
	"	Begin text of Compentry

aa 000000  000011 103157		zero	9,34415		" Compentry
aa 000001  155160 145156		zero	55920,51822
aa 000002  164162 171000		zero	59506,61952
			L2:
aa 000003  000000 213000  18		epaq	0		" set lp to linkage section
aa 000004  700026 764161		lprplp	sb|22,*au
aa 000005  200000 021100		adlx1	bp|0		" BCPL save
aa 000006  700000 542111		sprpbp	sb|0,x1
aa 000007  700001 544111		sprplp	sb|1,x1
aa 000010  701037 620111		eax0	sb|543,x1
aa 000011  777760 360003		anx0	-16,du
aa 000012  700025 740100		stx0	sb|21		" end of save sequence

aa 000013  600474 450100  19		stz	sp|316		" Jumpsw
aa 000014  600514 450100  20		stz	sp|332		" MaxSSP
4a 000015  400112 272120		tsbbp	lp|L19,*		" Nextparam
aa 000016  001012 000000		zero	522
aa 000017  600476 756100		stq	sp|318		" LabMaxSSP
aa 000020  600513 450100  21		stz	sp|331		" MaxArgOffset
4a 000021  400112 272120		tsbbp	lp|L19,*		" Nextparam
aa 000022  001012 000000		zero	522
aa 000023  600475 756100		stq	sp|317		" LabMaxArg
aa 000024  700010 350111  22		eapap	sb|8,x1		" a vector
aa 000025  700006 540111		sprpap	sb|6,x1		" v
aa 000026  700006 236111  23		ldq	sb|6,x1		" v
aa 000027  701014 756111		stq	sb|524,x1
aa 000030  000777 236007		ldq	511,dl		" Vmax
aa 000031  701015 756111		stq	sb|525,x1
aa 000032  000333 350004		eapap	L20		" "*fBegin text of "
aa 000033  701016 540111		sprpap	sb|526,x1
aa 000034  700003 236111		ldq	sb|3,x1		" ID
aa 000035  701017 756111		stq	sb|527,x1
4a 000036  400110 272120		tsbbp	lp|L21,*		" Concatenate
aa 000037  001012 000004		zero	522,4
aa 000040  700006 236111  24		ldq	sb|6,x1		" v
aa 000041  701014 756111		stq	sb|524,x1
4a 000042  400106 272120		tsbbp	lp|L22,*		" StoreString
aa 000043  001012 000001		zero	522,1
aa 000044  700007 756111		stq	sb|7,x1
aa 000045  700007 236111		ldq	sb|7,x1
aa 000046  701014 756111		stq	sb|524,x1
4a 000047  400104 272120		tsbbp	lp|L23,*		" SectionHeader
aa 000050  001012 000001		zero	522,1
aa 000051  700003 236111  25		ldq	sb|3,x1		" ID
aa 000052  701014 756111		stq	sb|524,x1
4a 000053  400102 272120		tsbbp	lp|L24,*		" Outstring
aa 000054  001012 000001		zero	522,1
aa 000055  700005 234111  26		szn	sb|5,x1		" MainSw
aa 000056  000031 600004		tze	L25
4a 000057  400112 272120  27		tsbbp	lp|L19,*		" Nextparam
aa 000060  001012 000000		zero	522
aa 000061  700007 756111		stq	sb|7,x1		" M
aa 000062  700002 236111  28		ldq	sb|2,x1		" L
aa 000063  701014 756111		stq	sb|524,x1
aa 000064  700007 236111		ldq	sb|7,x1		" M
aa 000065  701015 756111		stq	sb|525,x1
aa 000066  700003 236111		ldq	sb|3,x1		" ID
aa 000067  701016 756111		stq	sb|526,x1
aa 000070  600512 236100		ldq	sp|330		" MainEntriesList
aa 000071  701017 756111		stq	sb|527,x1
4a 000072  400100 272120		tsbbp	lp|L26,*		" List4
aa 000073  001012 000004		zero	522,4
aa 000074  600512 756100		stq	sp|330		" MainEntriesList
aa 000075  000025 236007  29		ldq	21,dl		" RelDef
aa 000076  000022 736000		qls	18
aa 000077  600531 756100		stq	sp|345		" Reloc
aa 000100  000252 350004		eapap	L27		" "relative pointer to definition for entry"
aa 000101  600464 540100		sprpap	sp|308		" Comment
aa 000102  700007 236111		ldq	sb|7,x1		" M
aa 000103  600520 756100		stq	sp|336		" Param
aa 000104  701014 450111  30		stz	sb|524,x1
4a 000105  400076 272120		tsbbp	lp|L28,*		" OutData
aa 000106  001012 000001		zero	522,1
			L25:
aa 000107  700002 236111  32		ldq	sb|2,x1		" L
aa 000110  701014 756111		stq	sb|524,x1
4a 000111  400074 272120		tsbbp	lp|L29,*		" Complab
aa 000112  001012 000001		zero	522,1
aa 000113  000230 350004  33		eapap	L30		" "set lp to linkage section"
aa 000114  600464 540100		sprpap	sp|308		" Comment
aa 000115  600153 236100  34		ldq	sp|107		" Machine
aa 000116  001205 116007		cmpq	645,dl		" 645
aa 000117  000015 601004		tnz	L31
aa 000120  600472 234100  35		szn	sp|314		" GetLpLabel
aa 000121  000004 601004		tnz	L33
4a 000122  400112 272120		tsbbp	lp|L19,*		" Nextparam
aa 000123  001012 000000		zero	522
aa 000124  600472 756100		stq	sp|314		" GetLpLabel
			L33:
aa 000125  000700 236007  36		ldq	448,dl		" Tsx0
aa 000126  701014 756111		stq	sb|524,x1
aa 000127  600472 236100		ldq	sp|314		" GetLpLabel
aa 000130  701015 756111		stq	sb|525,x1
4a 000131  400072 272120		tsbbp	lp|L34,*		" Outop2
aa 000132  001012 000002		zero	522,2
aa 000133  000017 710004		tra	L32
			L31:
aa 000134  000213 236007  38		ldq	139,dl		" Epaq
aa 000135  701014 756111		stq	sb|524,x1
aa 000136  701015 450111		stz	sb|525,x1
aa 000137  701016 450111		stz	sb|526,x1
4a 000140  400070 272120		tsbbp	lp|L35,*		" Outop3
aa 000141  001012 000003		zero	522,3
aa 000142  000764 236007  39		ldq	500,dl		" Lprplp
aa 000143  701014 756111		stq	sb|524,x1
aa 000144  000026 236007		ldq	22,dl		" 22
aa 000145  701015 756111		stq	sb|525,x1
aa 000146  000174 336004		lcq	L36
aa 000147  701016 756111		stq	sb|526,x1
4a 000150  400070 272120		tsbbp	lp|L35,*		" Outop3
aa 000151  001012 000003		zero	522,3
			L32:
aa 000152  700005 234111  42		szn	sb|5,x1		" MainSw
aa 000153  000016 600004		tze	L37
aa 000154  600471 234100  43		szn	sp|313		" EntryLabel
aa 000155  000004 601004		tnz	L38
4a 000156  400112 272120		tsbbp	lp|L19,*		" Nextparam
aa 000157  001012 000000		zero	522
aa 000160  600471 756100		stq	sp|313		" EntryLabel
			L38:
aa 000161  000153 350004  44		eapap	L39		" "execute Multics save"
aa 000162  600464 540100		sprpap	sp|308		" Comment
aa 000163  000700 236007  45		ldq	448,dl		" Tsx0
aa 000164  701014 756111		stq	sb|524,x1
aa 000165  600471 236100		ldq	sp|313		" EntryLabel
aa 000166  701015 756111		stq	sb|525,x1
4a 000167  400072 272120		tsbbp	lp|L34,*		" Outop2
aa 000170  001012 000002		zero	522,2
			L37:
aa 000171  000021 236007  47		ldq	17,dl		" Adlx1
aa 000172  701014 756111		stq	sb|524,x1
aa 000173  701015 450111		stz	sb|525,x1
aa 000174  000137 236004		ldq	L40		" Bp
aa 000175  701016 756111		stq	sb|526,x1
aa 000176  000132 350004		eapap	L41		" "BCPL save"
aa 000177  701017 540111		sprpap	sb|527,x1
4a 000200  400066 272120		tsbbp	lp|L42,*		" Outop4
aa 000201  001012 000004		zero	522,4
aa 000202  600153 236100  48		ldq	sp|107		" Machine
aa 000203  001205 116007		cmpq	645,dl		" 645
aa 000204  000021 601004		tnz	L43
aa 000205  000252 235007  49		lda	170,dl		" Stpbp
aa 000206  701014 755111		sta	sb|524,x1
aa 000207  701015 450111		stz	sb|525,x1
aa 000210  600540 235100		lda	sp|352		" StackRefTag
aa 000211  701016 755111		sta	sb|526,x1
4a 000212  400070 272120		tsbbp	lp|L35,*		" Outop3
aa 000213  001012 000003		zero	522,3
aa 000214  000650 235007  50		lda	424,dl		" Stplp
aa 000215  701014 755111		sta	sb|524,x1
aa 000216  000002 235007		lda	2,dl		" 2
aa 000217  701015 755111		sta	sb|525,x1
aa 000220  600540 235100		lda	sp|352		" StackRefTag
aa 000221  701016 755111		sta	sb|526,x1
4a 000222  400070 272120		tsbbp	lp|L35,*		" Outop3
aa 000223  001012 000003		zero	522,3
aa 000224  000020 710004		tra	L44
			L43:
aa 000225  000542 235007  52		lda	354,dl		" Sprpbp
aa 000226  701014 755111		sta	sb|524,x1
aa 000227  701015 450111		stz	sb|525,x1
aa 000230  600540 235100		lda	sp|352		" StackRefTag
aa 000231  701016 755111		sta	sb|526,x1
4a 000232  400070 272120		tsbbp	lp|L35,*		" Outop3
aa 000233  001012 000003		zero	522,3
aa 000234  000544 235007  53		lda	356,dl		" Sprplp
aa 000235  701014 755111		sta	sb|524,x1
aa 000236  000001 235007		lda	1,dl		" 1
aa 000237  701015 755111		sta	sb|525,x1
aa 000240  600540 235100		lda	sp|352		" StackRefTag
aa 000241  701016 755111		sta	sb|526,x1
4a 000242  400070 272120		tsbbp	lp|L35,*		" Outop3
aa 000243  001012 000003		zero	522,3
			L44:
aa 000244  000017 235007  55		lda	15,dl		" 15
aa 000245  600455 755100		sta	sp|301		" Address
aa 000246  600540 235100		lda	sp|352		" StackRefTag
aa 000247  600544 755100		sta	sp|356		" Tag
aa 000250  600475 235100		lda	sp|317		" LabMaxArg
aa 000251  600520 755100		sta	sp|336		" Param
aa 000252  000620 235007  56		lda	400,dl		" Eax0
aa 000253  701014 755111		sta	sb|524,x1
4a 000254  400064 272120		tsbbp	lp|L45,*		" Outop
aa 000255  001012 000001		zero	522,1
aa 000256  000360 235007  57		lda	240,dl		" Anx0
aa 000257  701014 755111		sta	sb|524,x1
aa 000260  000020 335007		lca	16,dl		" Mod16
aa 000261  701015 755111		sta	sb|525,x1
aa 000262  000003 235007		lda	3,dl		" Du
aa 000263  701016 755111		sta	sb|526,x1
4a 000264  400070 272120		tsbbp	lp|L35,*		" Outop3
aa 000265  001012 000003		zero	522,3
aa 000266  000034 350004  58		eapap	L46		" "end of save sequence*n"
aa 000267  600464 540100		sprpap	sp|308		" Comment
aa 000270  600153 235100  59		lda	sp|107		" Machine
aa 000271  001205 115007		cmpa	645,dl		" 645
aa 000272  000012 601004		tnz	L47
aa 000273  000740 236007  60		ldq	480,dl		" Stx0
aa 000274  701014 756111		stq	sb|524,x1
aa 000275  000023 236007		ldq	19,dl		" 19
aa 000276  701015 756111		stq	sb|525,x1
aa 000277  000022 336004		lcq	L49		" Sp
aa 000300  701016 756111		stq	sb|526,x1
4a 000301  400070 272120		tsbbp	lp|L35,*		" Outop3
aa 000302  001012 000003		zero	522,3
aa 000303  000011 710004		tra	L48
			L47:
aa 000304  000740 236007  61		ldq	480,dl		" Stx0
aa 000305  701014 756111		stq	sb|524,x1
aa 000306  000025 236007		ldq	21,dl		" 21
aa 000307  701015 756111		stq	sb|525,x1
aa 000310  000010 336004		lcq	L50		" Sb
aa 000311  701016 756111		stq	sb|526,x1
4a 000312  400070 272120		tsbbp	lp|L35,*		" Outop3
aa 000313  001012 000003		zero	522,3
			L48:
			L18:
aa 000314  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000315  200000 121100		sblx1	bp|0
aa 000316  700001 764111		lprplp	sb|1,x1
aa 000317  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L50:
aa 000320  077777 777700		zero	32767,-64		" Sb
			L49:
aa 000321  177777 777700		zero	65535,-64		" Sp
			L46:
aa 000322  000025 145156		zero	21,51822		" "end of save sequence*n"
aa 000323  144040 157146		zero	51232,56934
aa 000324  040163 141166		zero	16499,49782
aa 000325  145040 163145		zero	51744,58981
aa 000326  161165 145156		zero	57973,51822
aa 000327  143145 012000		zero	50789,5120
			L41:
aa 000330  000011 102103		zero	9,33859		" "BCPL save"
aa 000331  120114 040163		zero	41036,16499
aa 000332  141166 145000		zero	49782,51712
			L40:
aa 000333  200000 000100		zero	65536,64		" Bp
			L39:
aa 000334  000024 145170		zero	20,51832		" "execute Multics save"
aa 000335  145143 165164		zero	51811,60020
aa 000336  145040 115165		zero	51744,39541
aa 000337  154164 151143		zero	55412,53859
aa 000340  163040 163141		zero	58912,58977
aa 000341  166145 000000		zero	60517
			L36:
aa 000342  077777 777617		zero	32767,-113
			L30:
aa 000343  000031 163145		zero	25,58981		" "set lp to linkage section"
aa 000344  164040 154160		zero	59424,55408
aa 000345  040164 157040		zero	16500,56864
aa 000346  154151 156153		zero	55401,56427
aa 000347  141147 145040		zero	49767,51744
aa 000350  163145 143164		zero	58981,50804
aa 000351  151157 156000		zero	53871,56320
			L27:
aa 000352  000050 162145		zero	40,58469		" "relative pointer to definition for entry"
aa 000353  154141 164151		zero	55393,59497
aa 000354  166145 040160		zero	60517,16496
aa 000355  157151 156164		zero	56937,56436
aa 000356  145162 040164		zero	51826,16500
aa 000357  157040 144145		zero	56864,51301
aa 000360  146151 156151		zero	52329,56425
aa 000361  164151 157156		zero	59497,56942
aa 000362  040146 157162		zero	16486,56946
aa 000363  040145 156164		zero	16485,56436
aa 000364  162171 000000		zero	58489
			L20:
aa 000365  000017 014102		zero	15,6210		" "*fBegin text of "
aa 000366  145147 151156		zero	51815,53870
aa 000367  040164 145170		zero	16500,51832
aa 000370  164040 157146		zero	59424,56934
aa 000371  040000 000000		zero	16384
	"	Begin text of Compreturn

aa 000372  000012 103157		zero	10,34415		" Compreturn
aa 000373  155160 162145		zero	55920,58469
aa 000374  164165 162156		zero	59509,58478
			L3:
aa 000375  000000 213000  64		epaq	0		" set lp to linkage section
aa 000376  700026 764161		lprplp	sb|22,*au
aa 000377  200000 021100		adlx1	bp|0		" BCPL save
aa 000400  700000 542111		sprpbp	sb|0,x1
aa 000401  700001 544111		sprplp	sb|1,x1
aa 000402  700425 620111		eax0	sb|277,x1
aa 000403  777760 360003		anx0	-16,du
aa 000404  700025 740100		stx0	sb|21		" end of save sequence

aa 000405  700002 234111  65		szn	sb|2,x1		" Desc
aa 000406  000013 600004		tze	L54
aa 000407  700002 236111  66		ldq	sb|2,x1		" Desc
aa 000410  700010 756111		stq	sb|8,x1
aa 000411  000002 236007		ldq	2,dl		" Qr
aa 000412  700011 756111		stq	sb|9,x1
4a 000413  400062 272120		tsbbp	lp|L55,*		" LoadRegister
aa 000414  000006 000002		zero	6,2
aa 000415  700002 236111  67		ldq	sb|2,x1		" Desc
aa 000416  700010 756111		stq	sb|8,x1
4a 000417  400060 272120		tsbbp	lp|L56,*		" DisclaimRegister
aa 000420  000006 000001		zero	6,1
			L54:
aa 000421  600153 236100  69		ldq	sp|107		" Machine
aa 000422  001205 116007		cmpq	645,dl		" 645
aa 000423  000014 601004		tnz	L57
aa 000424  000352 235007  70		lda	234,dl		" Eapbp
aa 000425  700010 755111		sta	sb|8,x1
aa 000426  700011 450111		stz	sb|9,x1
aa 000427  600540 235100		lda	sp|352		" StackRefTag
aa 000430  000020 275007		ora	16,dl		" Star
aa 000431  700012 755111		sta	sb|10,x1
aa 000432  000136 350004		eapap	L59		" "bcpl return"
aa 000433  700013 540111		sprpap	sb|11,x1
4a 000434  400066 272120		tsbbp	lp|L42,*		" Outop4
aa 000435  000006 000004		zero	6,4
aa 000436  000012 710004		tra	L58
			L57:
aa 000437  000762 235007  71		lda	498,dl		" Lprpbp
aa 000440  700010 755111		sta	sb|8,x1
aa 000441  700011 450111		stz	sb|9,x1
aa 000442  600540 235100		lda	sp|352		" StackRefTag
aa 000443  700012 755111		sta	sb|10,x1
aa 000444  000124 350004		eapap	L59		" "bcpl return"
aa 000445  700013 540111		sprpap	sb|11,x1
4a 000446  400066 272120		tsbbp	lp|L42,*		" Outop4
aa 000447  000006 000004		zero	6,4
			L58:
aa 000450  000121 235007  72		lda	81,dl		" Sblx1
aa 000451  700010 755111		sta	sb|8,x1
aa 000452  700011 450111		stz	sb|9,x1
aa 000453  777660 235004		lda	L40		" Bp
aa 000454  700012 755111		sta	sb|10,x1
4a 000455  400070 272120		tsbbp	lp|L35,*		" Outop3
aa 000456  000006 000003		zero	6,3
aa 000457  600153 235100  73		lda	sp|107		" Machine
aa 000460  001205 115007		cmpa	645,dl		" 645
aa 000461  000013 601004		tnz	L60
aa 000462  000370 236007  74		ldq	248,dl		" Eaplp
aa 000463  700010 756111		stq	sb|8,x1
aa 000464  000002 236007		ldq	2,dl		" 2
aa 000465  700011 756111		stq	sb|9,x1
aa 000466  600540 236100		ldq	sp|352		" StackRefTag
aa 000467  000020 276007		orq	16,dl		" Star
aa 000470  700012 756111		stq	sb|10,x1
4a 000471  400070 272120		tsbbp	lp|L35,*		" Outop3
aa 000472  000006 000003		zero	6,3
aa 000473  000011 710004		tra	L61
			L60:
aa 000474  000764 236007  75		ldq	500,dl		" Lprplp
aa 000475  700010 756111		stq	sb|8,x1
aa 000476  000001 236007		ldq	1,dl		" 1
aa 000477  700011 756111		stq	sb|9,x1
aa 000500  600540 236100		ldq	sp|352		" StackRefTag
aa 000501  700012 756111		stq	sb|10,x1
4a 000502  400070 272120		tsbbp	lp|L35,*		" Outop3
aa 000503  000006 000003		zero	6,3
			L61:
aa 000504  000710 236007  76		ldq	456,dl		" Tra
aa 000505  700010 756111		stq	sb|8,x1
aa 000506  000001 236007		ldq	1,dl		" 1
aa 000507  700011 756111		stq	sb|9,x1
aa 000510  777623 236004		ldq	L40		" Bp
aa 000511  700012 756111		stq	sb|10,x1
aa 000512  000050 350004		eapap	L62		" "end of return sequence"
aa 000513  700013 540111		sprpap	sb|11,x1
4a 000514  400066 272120		tsbbp	lp|L42,*		" Outop4
aa 000515  000006 000004		zero	6,4
aa 000516  600514 236100  77		ldq	sp|332		" MaxSSP
aa 000517  600534 076100		adq	sp|348		" SaveSpaceSize
aa 000520  000001 076007		adq	1,dl		" 1
aa 000521  000040 376004		anq	L63		" Even
aa 000522  600514 756100		stq	sp|332		" MaxSSP
aa 000523  600476 236100  78		ldq	sp|318		" LabMaxSSP
aa 000524  700010 756111		stq	sb|8,x1
aa 000525  600514 236100		ldq	sp|332		" MaxSSP
aa 000526  700011 756111		stq	sb|9,x1
aa 000527  000051 272004		tsbbp	L4+2		" Equate
aa 000530  000006 000002		zero	6,2
aa 000531  600514 236100  79		ldq	sp|332		" MaxSSP
aa 000532  000400 116007		cmpq	256,dl		" 256
aa 000533  000003 604404		tmoz	L64
aa 000534  600514 235100		lda	sp|332		" MaxSSP
aa 000535  000002 710004		tra	L65
			L64:
aa 000536  000400 235007		lda	256,dl		" 256
			L65:
aa 000537  700005 755111		sta	sb|5,x1
aa 000540  700005 235111		lda	sb|5,x1
aa 000541  600513 075100		ada	sp|331		" MaxArgOffset
aa 000542  700003 755111		sta	sb|3,x1
aa 000543  600475 235100		lda	sp|317		" LabMaxArg
aa 000544  700010 755111		sta	sb|8,x1
aa 000545  700003 235111		lda	sb|3,x1
aa 000546  700011 755111		sta	sb|9,x1
aa 000547  000031 272004		tsbbp	L4+2		" Equate
aa 000550  000006 000002		zero	6,2
4a 000551  400056 272120  80		tsbbp	lp|L66,*		" OutLiterals
aa 000552  000006 000000		zero	6
aa 000553  000001 335007  81		lca	1,dl		" true
aa 000554  600474 755100		sta	sp|316		" Jumpsw
			L53:
aa 000555  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000556  200000 121100		sblx1	bp|0
aa 000557  700001 764111		lprplp	sb|1,x1
aa 000560  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L63:
aa 000561  777777 777776		zero	-1,-2		" Even
			L62:
aa 000562  000026 145156		zero	22,51822		" "end of return sequence"
aa 000563  144040 157146		zero	51232,56934
aa 000564  040162 145164		zero	16498,51828
aa 000565  165162 156040		zero	60018,56352
aa 000566  163145 161165		zero	58981,57973
aa 000567  145156 143145		zero	51822,50789
			L59:
aa 000570  000013 142143		zero	11,50275		" "bcpl return"
aa 000571  160154 040162		zero	57452,16498
aa 000572  145164 165162		zero	51828,60018
aa 000573  156000 000000		zero	56320
	"	Begin text of Equate

aa 000574  000006 105161		zero	6,35441		" Equate
aa 000575  165141 164145		zero	60001,59493
			L4:
aa 000576  000000 213000  83		epaq	0		" set lp to linkage section
aa 000577  700026 764161		lprplp	sb|22,*au
aa 000600  200000 021100		adlx1	bp|0		" BCPL save
aa 000601  700000 542111		sprpbp	sb|0,x1
aa 000602  700001 544111		sprplp	sb|1,x1
aa 000603  700425 620111		eax0	sb|277,x1
aa 000604  777760 360003		anx0	-16,du
aa 000605  700025 740100		stx0	sb|21		" end of save sequence

aa 000606  700002 235111  84		lda	sb|2,x1		" L
aa 000607  700006 755111		sta	sb|6,x1
aa 000610  700003 235111		lda	sb|3,x1		" n
aa 000611  700007 755111		sta	sb|7,x1
4a 000612  400054 272120		tsbbp	lp|L70,*		" DefineLab
aa 000613  000004 000002		zero	4,2
aa 000614  600144 234100  85		szn	sp|100		" Listing
aa 000615  000013 600004		tze	L71
aa 000616  600040 235100		lda	sp|32		" OUTPUT
aa 000617  700006 755111		sta	sb|6,x1
aa 000620  000014 350004		eapap	L72		" "*tequ*tL^d,^d*n"
aa 000621  700007 540111		sprpap	sb|7,x1
aa 000622  700002 235111		lda	sb|2,x1		" L
aa 000623  700010 755111		sta	sb|8,x1
aa 000624  700003 235111		lda	sb|3,x1		" n
aa 000625  700011 755111		sta	sb|9,x1
4a 000626  400052 272120		tsbbp	lp|L73,*		" Format
aa 000627  000004 000004		zero	4,4
			L71:
			L69:
aa 000630  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000631  200000 121100		sblx1	bp|0
aa 000632  700001 764111		lprplp	sb|1,x1
aa 000633  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L72:
aa 000634  000014 011145		zero	12,4709		" "*tequ*tL^d,^d*n"
aa 000635  161165 011114		zero	57973,4684
aa 000636  136144 054136		zero	48228,22622
aa 000637  144012 000000		zero	51210
	"	Begin text of CreateArglist

aa 000640  000015 103162		zero	13,34418		" CreateArglist
aa 000641  145141 164145		zero	51809,59493
aa 000642  101162 147154		zero	33394,52844
aa 000643  151163 164000		zero	53875,59392
			L5:
aa 000644  000000 213000  88		epaq	0		" set lp to linkage section
aa 000645  700026 764161		lprplp	sb|22,*au
aa 000646  200000 021100		adlx1	bp|0		" BCPL save
aa 000647  700000 542111		sprpbp	sb|0,x1
aa 000650  700001 544111		sprplp	sb|1,x1
aa 000651  700417 620111		eax0	sb|271,x1
aa 000652  777760 360003		anx0	-16,du
aa 000653  700025 740100		stx0	sb|21		" end of save sequence

aa 000654  700002 235111  89		lda	sb|2,x1		" Nargs
aa 000655  600534 075100		ada	sp|348		" SaveSpaceSize
aa 000656  600457 755100		sta	sp|303		" ArgLen
aa 000657  700002 235111		lda	sb|2,x1		" Nargs
aa 000660  600456 755100		sta	sp|302		" ArgCount
			L76:
aa 000661  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000662  200000 121100		sblx1	bp|0
aa 000663  700001 764111		lprplp	sb|1,x1
aa 000664  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of StoreArg

aa 000665  000010 123164		zero	8,42612		" StoreArg
aa 000666  157162 145101		zero	56946,51777
aa 000667  162147 000000		zero	58471
			L6:
aa 000670  000000 213000  90		epaq	0		" set lp to linkage section
aa 000671  700026 764161		lprplp	sb|22,*au
aa 000672  200000 021100		adlx1	bp|0		" BCPL save
aa 000673  700000 542111		sprpbp	sb|0,x1
aa 000674  700001 544111		sprplp	sb|1,x1
aa 000675  700423 620111		eax0	sb|275,x1
aa 000676  777760 360003		anx0	-16,du
aa 000677  700025 740100		stx0	sb|21		" end of save sequence

aa 000700  000104 235007  91		lda	68,dl		" LV_ARG_OUT
aa 000701  700006 755111		sta	sb|6,x1
aa 000702  700002 235111		lda	sb|2,x1		" i
aa 000703  700007 755111		sta	sb|7,x1
aa 000704  700010 450111		stz	sb|8,x1
aa 000705  700006 350111		eapap	sb|6,x1		" a list
aa 000706  700004 540111		sprpap	sb|4,x1		" To
aa 000707  700003 235111  92		lda	sb|3,x1		" Desc
aa 000710  700014 755111		sta	sb|12,x1
aa 000711  700004 235111		lda	sb|4,x1		" To
aa 000712  700015 755111		sta	sb|13,x1
4a 000713  400050 272120		tsbbp	lp|L80,*		" Store
aa 000714  000012 000002		zero	10,2
aa 000715  700003 235111  93		lda	sb|3,x1		" Desc
aa 000716  700014 755111		sta	sb|12,x1
4a 000717  400060 272120		tsbbp	lp|L56,*		" DisclaimRegister
aa 000720  000012 000001		zero	10,1
			L79:
aa 000721  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000722  200000 121100		sblx1	bp|0
aa 000723  700001 764111		lprplp	sb|1,x1
aa 000724  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of Compfnap

aa 000725  000010 103157		zero	8,34415		" Compfnap
aa 000726  155160 146156		zero	55920,52334
aa 000727  141160 000000		zero	49776
			L7:
aa 000730  000000 213000  95		epaq	0		" set lp to linkage section
aa 000731  700026 764161		lprplp	sb|22,*au
aa 000732  200000 021100		adlx1	bp|0		" BCPL save
aa 000733  700000 542111		sprpbp	sb|0,x1
aa 000734  700001 544111		sprplp	sb|1,x1
aa 000735  700423 620111		eax0	sb|275,x1
aa 000736  777760 360003		anx0	-16,du
aa 000737  700025 740100		stx0	sb|21		" end of save sequence

aa 000740  700003 235111  96		lda	sb|3,x1		" F
aa 000741  700010 755111		sta	sb|8,x1
4a 000742  400046 272120		tsbbp	lp|L84,*		" SetupAddr
aa 000743  000006 000001		zero	6,1
aa 000744  700003 760111  97		lprpap	sb|3,x1		" F
aa 000745  000000 235100		lda	ap|0
aa 000746  000162 115007		cmpa	114,dl		" RTDEF_S
aa 000747  000012 601004		tnz	L85
aa 000750  600153 236100		ldq	sp|107		" Machine
aa 000751  001205 116007		cmpq	645,dl		" 645
aa 000752  000003 601004		tnz	L86
aa 000753  000001 235007		lda	1,dl		" 1
aa 000754  000002 710004		tra	L87
			L86:
aa 000755  000002 235007		lda	2,dl		" 2
			L87:
aa 000756  700005 755111		sta	sb|5,x1
aa 000757  700005 235111		lda	sb|5,x1
aa 000760  600455 055100		asa	sp|301		" Address
			L85:
aa 000761  000272 235007  98		lda	186,dl		" Tsbbp
aa 000762  700010 755111		sta	sb|8,x1
4a 000763  400064 272120		tsbbp	lp|L45,*		" Outop
aa 000764  000006 000001		zero	6,1
aa 000765  600476 235100  99		lda	sp|318		" LabMaxSSP
aa 000766  600520 755100		sta	sp|336		" Param
aa 000767  600456 235100  100		lda	sp|302		" ArgCount
aa 000770  700010 755111		sta	sb|8,x1
4a 000771  400076 272120		tsbbp	lp|L28,*		" OutData
aa 000772  000006 000001		zero	6,1
aa 000773  600457 235100  101		lda	sp|303		" ArgLen
aa 000774  600513 115100		cmpa	sp|331		" MaxArgOffset
aa 000775  000003 604404		tmoz	L88
aa 000776  600457 236100		ldq	sp|303		" ArgLen
aa 000777  600513 756100		stq	sp|331		" MaxArgOffset
			L88:
aa 001000  700003 236111  102		ldq	sb|3,x1		" F
aa 001001  700010 756111		stq	sb|8,x1
4a 001002  400060 272120		tsbbp	lp|L56,*		" DisclaimRegister
aa 001003  000006 000001		zero	6,1
aa 001004  700002 234111  103		szn	sb|2,x1		" Result
aa 001005  000007 600004		tze	L89
aa 001006  000002 236007		ldq	2,dl		" Qr
aa 001007  700010 756111		stq	sb|8,x1
aa 001010  700002 236111		ldq	sb|2,x1		" Result
aa 001011  700011 756111		stq	sb|9,x1
4a 001012  400044 272120		tsbbp	lp|L90,*		" ClaimRegister
aa 001013  000006 000002		zero	6,2
			L89:
aa 001014  600473 450100  104		stz	sp|315		" IndicatorsSetBy
			L83:
aa 001015  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001016  200000 121100		sblx1	bp|0
aa 001017  700001 764111		lprplp	sb|1,x1
aa 001020  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of ResultSet

aa 001021  000011 122145		zero	9,42085		" ResultSet
aa 001022  163165 154164		zero	58997,55412
aa 001023  123145 164000		zero	42597,59392
			L12:
aa 001024  000000 213000  206		epaq	0		" set lp to linkage section
aa 001025  700026 764161		lprplp	sb|22,*au
aa 001026  200000 021100		adlx1	bp|0		" BCPL save
aa 001027  700000 542111		sprpbp	sb|0,x1
aa 001030  700001 544111		sprplp	sb|1,x1
aa 001031  700423 620111		eax0	sb|275,x1
aa 001032  777760 360003		anx0	-16,du
aa 001033  700025 740100		stx0	sb|21		" end of save sequence

aa 001034  700002 236111  207		ldq	sb|2,x1		" Desc
aa 001035  700006 756111		stq	sb|6,x1
aa 001036  600532 236100		ldq	sp|346		" ResultInfo
aa 001037  700007 756111		stq	sb|7,x1
4a 001040  400042 272120		tsbbp	lp|L94,*		" LoadAppropriateRegister
aa 001041  000004 000002		zero	4,2
aa 001042  600532 756100		stq	sp|346		" ResultInfo
aa 001043  700002 236111  208		ldq	sb|2,x1		" Desc
aa 001044  700006 756111		stq	sb|6,x1
4a 001045  400060 272120		tsbbp	lp|L56,*		" DisclaimRegister
aa 001046  000004 000001		zero	4,1
			L93:
aa 001047  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001050  200000 121100		sblx1	bp|0
aa 001051  700001 764111		lprplp	sb|1,x1
aa 001052  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of ResultGet

aa 001053  000011 122145		zero	9,42085		" ResultGet
aa 001054  163165 154164		zero	58997,55412
aa 001055  107145 164000		zero	36453,59392
			L13:
aa 001056  000000 213000  210		epaq	0		" set lp to linkage section
aa 001057  700026 764161		lprplp	sb|22,*au
aa 001060  200000 021100		adlx1	bp|0		" BCPL save
aa 001061  700000 542111		sprpbp	sb|0,x1
aa 001062  700001 544111		sprplp	sb|1,x1
aa 001063  700423 620111		eax0	sb|275,x1
aa 001064  777760 360003		anx0	-16,du
aa 001065  700025 740100		stx0	sb|21		" end of save sequence

aa 001066  600532 236100  211		ldq	sp|346		" ResultInfo
aa 001067  700006 756111		stq	sb|6,x1
aa 001070  700002 236111		ldq	sb|2,x1		" Desc
aa 001071  700007 756111		stq	sb|7,x1
4a 001072  400044 272120		tsbbp	lp|L90,*		" ClaimRegister
aa 001073  000004 000002		zero	4,2
aa 001074  600533 236100  212		ldq	sp|347		" ResultInfoList
aa 001075  700003 756111		stq	sb|3,x1		" Old
aa 001076  700003 762111  213		lprpbp	sb|3,x1		" Old
aa 001077  200000 236100		ldq	bp|0
aa 001100  600532 756100		stq	sp|346		" ResultInfo
aa 001101  700003 761111		lprpab	sb|3,x1		" Old
aa 001102  100001 236100		ldq	ab|1
aa 001103  600533 756100		stq	sp|347		" ResultInfoList
aa 001104  700003 236111  214		ldq	sb|3,x1		" Old
aa 001105  700006 756111		stq	sb|6,x1
aa 001106  000001 236007		ldq	1,dl		" 1
aa 001107  700007 756111		stq	sb|7,x1
4a 001110  400040 272120		tsbbp	lp|L98,*		" Freevec
aa 001111  000004 000002		zero	4,2
			L97:
aa 001112  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001113  200000 121100		sblx1	bp|0
aa 001114  700001 764111		lprplp	sb|1,x1
aa 001115  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of Compstring

aa 001116  000012 103157		zero	10,34415		" Compstring
aa 001117  155160 163164		zero	55920,58996
aa 001120  162151 156147		zero	58473,56423
			L14:
aa 001121  000000 213000  217		epaq	0		" set lp to linkage section
aa 001122  700026 764161		lprplp	sb|22,*au
aa 001123  200000 021100		adlx1	bp|0		" BCPL save
aa 001124  700000 542111		sprpbp	sb|0,x1
aa 001125  700001 544111		sprplp	sb|1,x1
aa 001126  701033 620111		eax0	sb|539,x1
aa 001127  777760 360003		anx0	-16,du
aa 001130  700025 740100		stx0	sb|21		" end of save sequence

aa 001131  700004 353511  218		eapbb	sb|4,x1		" a vector
aa 001132  700003 543111		sprpbb	sb|3,x1		" v
aa 001133  700002 236111  219		ldq	sb|2,x1		" s
aa 001134  701010 756111		stq	sb|520,x1
aa 001135  700003 236111		ldq	sb|3,x1		" v
aa 001136  701011 756111		stq	sb|521,x1
4a 001137  400036 272120		tsbbp	lp|L102,*		" FormStringconst
aa 001140  001006 000002		zero	518,2
aa 001141  701004 756111		stq	sb|516,x1		" Len
aa 001142  700003 236111  220		ldq	sb|3,x1		" v
aa 001143  701010 756111		stq	sb|520,x1
aa 001144  701004 236111		ldq	sb|516,x1		" Len
aa 001145  000001 076007		adq	1,dl		" 1
aa 001146  701011 756111		stq	sb|521,x1
aa 001147  700002 236111		ldq	sb|2,x1		" s
aa 001150  701012 756111		stq	sb|522,x1
aa 001151  701013 450111		stz	sb|523,x1
4a 001152  400034 272120		tsbbp	lp|L103,*		" AddLiteral
aa 001153  001006 000004		zero	518,4
			L101:
aa 001154  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001155  200000 121100		sblx1	bp|0
aa 001156  700001 764111		lprplp	sb|1,x1
aa 001157  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of Comptable

aa 001160  000011 103157		zero	9,34415		" Comptable
aa 001161  155160 164141		zero	55920,59489
aa 001162  142154 145000		zero	50284,51712
			L15:
aa 001163  000000 213000  222		epaq	0		" set lp to linkage section
aa 001164  700026 764161		lprplp	sb|22,*au
aa 001165  200000 021100		adlx1	bp|0		" BCPL save
aa 001166  700000 542111		sprpbp	sb|0,x1
aa 001167  700001 544111		sprplp	sb|1,x1
aa 001170  700425 620111		eax0	sb|277,x1
aa 001171  777760 360003		anx0	-16,du
aa 001172  700025 740100		stx0	sb|21		" end of save sequence

aa 001173  700002 763111  223		lprpbb	sb|2,x1		" t
aa 001174  300000 236100		ldq	bb|0
aa 001175  700020 756111		stq	sb|16,x1
4a 001176  400032 272120		tsbbp	lp|L107,*		" Newvec
aa 001177  000016 000001		zero	14,1
aa 001200  700003 756111		stq	sb|3,x1		" v
aa 001201  700004 450111  224		stz	sb|4,x1		" i
aa 001202  700002 765111		lprplb	sb|2,x1		" t
aa 001203  500000 236100		ldq	lb|0
aa 001204  000001 176007		sbq	1,dl		" 1
aa 001205  700005 756111		stq	sb|5,x1
aa 001206  000023 710004		tra	L108
			L109:
aa 001207  700004 236111		ldq	sb|4,x1		" i
aa 001210  000001 736000		qls	1
aa 001211  000001 076007		adq	1,dl		" 1
aa 001212  700002 760111		lprpap	sb|2,x1		" t
aa 001213  000000 235106		lda	ap|0,ql
aa 001214  700020 755111		sta	sb|16,x1
aa 001215  700004 236111		ldq	sb|4,x1		" i
aa 001216  000001 736000		qls	1
aa 001217  000002 076007		adq	2,dl		" 2
aa 001220  700002 762111		lprpbp	sb|2,x1		" t
aa 001221  200000 235106		lda	bp|0,ql
aa 001222  700021 755111		sta	sb|17,x1
4a 001223  400030 272120		tsbbp	lp|L110,*		" EvalNumber
aa 001224  000016 000002		zero	14,2
aa 001225  700004 722111		lxl2	sb|4,x1		" i
aa 001226  700003 761111		lprpab	sb|3,x1		" v
aa 001227  100000 756112		stq	ab|0,x2
aa 001230  700004 054111		aos	sb|4,x1		" i
			L108:
aa 001231  700004 236111		ldq	sb|4,x1		" i
aa 001232  700005 116111		cmpq	sb|5,x1
aa 001233  777754 604404		tmoz	L109
aa 001234  700003 235111  225		lda	sb|3,x1		" v
aa 001235  700020 755111		sta	sb|16,x1
aa 001236  700002 763111		lprpbb	sb|2,x1		" t
aa 001237  300000 235100		lda	bb|0
aa 001240  700021 755111		sta	sb|17,x1
aa 001241  000021 371404		eaplb	L111		" "a table"
aa 001242  700022 545111		sprplb	sb|18,x1
aa 001243  000002 235007		lda	2,dl		" 2
aa 001244  700023 755111		sta	sb|19,x1
4a 001245  400034 272120		tsbbp	lp|L103,*		" AddLiteral
aa 001246  000016 000004		zero	14,4
aa 001247  700003 235111  226		lda	sb|3,x1		" v
aa 001250  700020 755111		sta	sb|16,x1
aa 001251  700002 765111		lprplb	sb|2,x1		" t
aa 001252  500000 235100		lda	lb|0
aa 001253  700021 755111		sta	sb|17,x1
4a 001254  400040 272120		tsbbp	lp|L98,*		" Freevec
aa 001255  000016 000002		zero	14,2
			L106:
aa 001256  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001257  200000 121100		sblx1	bp|0
aa 001260  700001 764111		lprplp	sb|1,x1
aa 001261  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L111:
aa 001262  000007 141040		zero	7,49696		" "a table"
aa 001263  164141 142154		zero	59489,50284
aa 001264  145000 000000		zero	51712
	"	Begin text of ResultBlockBegin

aa 001265  000020 122145		zero	16,42085		" ResultBlockBegin
aa 001266  163165 154164		zero	58997,55412
aa 001267  102154 157143		zero	33900,56931
aa 001270  153102 145147		zero	54850,51815
aa 001271  151156 000000		zero	53870
			L11:
aa 001272  000000 213000  201		epaq	0		" set lp to linkage section
aa 001273  700026 764161		lprplp	sb|22,*au
aa 001274  200000 021100		adlx1	bp|0		" BCPL save
aa 001275  700000 542111		sprpbp	sb|0,x1
aa 001276  700001 544111		sprplp	sb|1,x1
aa 001277  700422 620111		eax0	sb|274,x1
aa 001300  777760 360003		anx0	-16,du
aa 001301  700025 740100		stx0	sb|21		" end of save sequence

aa 001302  000001 235007  202		lda	1,dl		" 1
aa 001303  700010 755111		sta	sb|8,x1
4a 001304  400032 272120		tsbbp	lp|L107,*		" Newvec
aa 001305  000006 000001		zero	6,1
aa 001306  700002 756111		stq	sb|2,x1		" New
aa 001307  600532 236100  203		ldq	sp|346		" ResultInfo
aa 001310  700002 760111		lprpap	sb|2,x1		" New
aa 001311  000000 756100		stq	ap|0
aa 001312  600533 236100		ldq	sp|347		" ResultInfoList
aa 001313  700002 762111		lprpbp	sb|2,x1		" New
aa 001314  200001 756100		stq	bp|1
aa 001315  600532 450100  204		stz	sp|346		" ResultInfo
aa 001316  700002 236111		ldq	sb|2,x1		" New
aa 001317  600533 756100		stq	sp|347		" ResultInfoList
			L114:
aa 001320  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001321  200000 121100		sblx1	bp|0
aa 001322  700001 764111		lprplp	sb|1,x1
aa 001323  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of CompSystemCall

aa 001324  000016 103157		zero	14,34415		" CompSystemCall
aa 001325  155160 123171		zero	55920,42617
aa 001326  163164 145155		zero	58996,51821
aa 001327  103141 154154		zero	34401,55404
			L10:
aa 001330  000000 213000  180		epaq	0		" set lp to linkage section
aa 001331  700026 764161		lprplp	sb|22,*au
aa 001332  200000 021100		adlx1	bp|0		" BCPL save
aa 001333  700000 542111		sprpbp	sb|0,x1
aa 001334  700001 544111		sprplp	sb|1,x1
aa 001335  700425 620111		eax0	sb|277,x1
aa 001336  777760 360003		anx0	-16,du
aa 001337  700025 740100		stx0	sb|21		" end of save sequence

aa 001340  600457 236100  181		ldq	sp|303		" ArgLen
aa 001341  600513 116100		cmpq	sp|331		" MaxArgOffset
aa 001342  000003 604404		tmoz	L118
aa 001343  600457 235100		lda	sp|303		" ArgLen
aa 001344  600513 755100		sta	sp|331		" MaxArgOffset
			L118:
aa 001345  600153 235100  182		lda	sp|107		" Machine
aa 001346  001205 115007		cmpa	645,dl		" 645
aa 001347  000021 601004		tnz	L119
aa 001350  000254 236007  183		ldq	172,dl		" Stb
aa 001351  700006 756111		stq	sb|6,x1
aa 001352  700007 450111		stz	sb|7,x1
aa 001353  776746 336004		lcq	L49		" Sp
aa 001354  700010 756111		stq	sb|8,x1
4a 001355  400070 272120		tsbbp	lp|L35,*		" Outop3
aa 001356  000004 000003		zero	4,3
aa 001357  000753 236007  184		ldq	491,dl		" Sreg
aa 001360  700006 756111		stq	sb|6,x1
aa 001361  000010 236007		ldq	8,dl		" 8
aa 001362  700007 756111		stq	sb|7,x1
aa 001363  776736 336004		lcq	L49		" Sp
aa 001364  700010 756111		stq	sb|8,x1
4a 001365  400070 272120		tsbbp	lp|L35,*		" Outop3
aa 001366  000004 000003		zero	4,3
aa 001367  000021 710004		tra	L120
			L119:
aa 001370  000441 236007  186		ldq	289,dl		" Sxl1
aa 001371  700006 756111		stq	sb|6,x1
aa 001372  000010 236007		ldq	8,dl		" 8
aa 001373  700007 756111		stq	sb|7,x1
aa 001374  776725 336004		lcq	L49		" Sp
aa 001375  700010 756111		stq	sb|8,x1
4a 001376  400070 272120		tsbbp	lp|L35,*		" Outop3
aa 001377  000004 000003		zero	4,3
aa 001400  000650 236007  187		ldq	424,dl		" Stplp
aa 001401  700006 756111		stq	sb|6,x1
aa 001402  000030 236007		ldq	24,dl		" 24
aa 001403  700007 756111		stq	sb|7,x1
aa 001404  776715 336004		lcq	L49		" Sp
aa 001405  700010 756111		stq	sb|8,x1
4a 001406  400070 272120		tsbbp	lp|L35,*		" Outop3
aa 001407  000004 000003		zero	4,3
			L120:
aa 001410  700002 236111  189		ldq	sb|2,x1		" F
aa 001411  700006 756111		stq	sb|6,x1
aa 001412  000015 236007		ldq	13,dl		" Bpr
aa 001413  700007 756111		stq	sb|7,x1
4a 001414  400026 272120		tsbbp	lp|L121,*		" LoadPointer
aa 001415  000004 000002		zero	4,2
aa 001416  600540 236100  190		ldq	sp|352		" StackRefTag
aa 001417  600544 756100		stq	sp|356		" Tag
aa 001420  600455 450100		stz	sp|301		" Address
aa 001421  600476 236100		ldq	sp|318		" LabMaxSSP
aa 001422  600520 756100		stq	sp|336		" Param
aa 001423  000350 236007  191		ldq	232,dl		" Eapap
aa 001424  700006 756111		stq	sb|6,x1
4a 001425  400064 272120		tsbbp	lp|L45,*		" Outop
aa 001426  000004 000001		zero	4,1
aa 001427  000670 236007  192		ldq	440,dl		" Tsblp
aa 001430  700006 756111		stq	sb|6,x1
aa 001431  000036 236007		ldq	30,dl		" 30
aa 001432  700007 756111		stq	sb|7,x1
aa 001433  000050 336004		lcq	L122
aa 001434  700010 756111		stq	sb|8,x1
aa 001435  000040 351404		eapab	L123		" "Multics call operator"
aa 001436  700011 541111		sprpab	sb|9,x1
4a 001437  400066 272120		tsbbp	lp|L42,*		" Outop4
aa 001440  000004 000004		zero	4,4
aa 001441  600153 236100  193		ldq	sp|107		" Machine
aa 001442  014044 116007		cmpq	6180,dl		" 6180
aa 001443  000021 601004		tnz	L124
aa 001444  000721 235007  194		lda	465,dl		" Lxl1
aa 001445  700006 755111		sta	sb|6,x1
aa 001446  000010 235007		lda	8,dl		" 8
aa 001447  700007 755111		sta	sb|7,x1
aa 001450  776651 335004		lca	L49		" Sp
aa 001451  700010 755111		sta	sb|8,x1
4a 001452  400070 272120		tsbbp	lp|L35,*		" Outop3
aa 001453  000004 000003		zero	4,3
aa 001454  000764 235007  195		lda	500,dl		" Lprplp
aa 001455  700006 755111		sta	sb|6,x1
aa 001456  000001 235007		lda	1,dl		" 1
aa 001457  700007 755111		sta	sb|7,x1
aa 001460  600540 235100		lda	sp|352		" StackRefTag
aa 001461  700010 755111		sta	sb|8,x1
4a 001462  400070 272120		tsbbp	lp|L35,*		" Outop3
aa 001463  000004 000003		zero	4,3
			L124:
aa 001464  700002 235111  197		lda	sb|2,x1		" F
aa 001465  700006 755111		sta	sb|6,x1
4a 001466  400060 272120		tsbbp	lp|L56,*		" DisclaimRegister
aa 001467  000004 000001		zero	4,1
aa 001470  600473 450100  198		stz	sp|315		" IndicatorsSetBy
			L117:
aa 001471  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001472  200000 121100		sblx1	bp|0
aa 001473  700001 764111		lprplp	sb|1,x1
aa 001474  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L123:
aa 001475  000025 115165		zero	21,39541		" "Multics call operator"
aa 001476  154164 151143		zero	55412,53859
aa 001477  163040 143141		zero	58912,50785
aa 001500  154154 040157		zero	55404,16495
aa 001501  160145 162141		zero	57445,58465
aa 001502  164157 162000		zero	59503,58368
			L122:
aa 001503  077777 777660		zero	32767,-80
	"	Begin text of StoreSystemArg

aa 001504  000016 123164		zero	14,42612		" StoreSystemArg
aa 001505  157162 145123		zero	56946,51795
aa 001506  171163 164145		zero	62067,59493
aa 001507  155101 162147		zero	55873,58471
			L9:
aa 001510  000000 213000  115		epaq	0		" set lp to linkage section
aa 001511  700026 764161		lprplp	sb|22,*au
aa 001512  200000 021100		adlx1	bp|0		" BCPL save
aa 001513  700000 542111		sprpbp	sb|0,x1
aa 001514  700001 544111		sprplp	sb|1,x1
aa 001515  700425 620111		eax0	sb|277,x1
aa 001516  777760 360003		anx0	-16,du
aa 001517  700025 740100		stx0	sb|21		" end of save sequence

aa 001520  700007 234111  116		szn	sb|7,x1		" StringSw
aa 001521  000014 600004		tze	L128
aa 001522  700004 234111		szn	sb|4,x1		" Offset
aa 001523  000012 601004		tnz	L128
aa 001524  600153 235100		lda	sp|107		" Machine
aa 001525  001205 115007		cmpa	645,dl		" 645
aa 001526  000003 601004		tnz	L129
aa 001527  000635 351404		eapab	L131		" a table
aa 001530  000002 710004		tra	L130
			L129:
aa 001531  000627 351404		eapab	L132		" a table
			L130:
aa 001532  700010 541111		sprpab	sb|8,x1
aa 001533  700010 236111		ldq	sb|8,x1
aa 001534  700004 756111		stq	sb|4,x1		" Offset
			L128:
aa 001535  700003 236111  117		ldq	sb|3,x1		" Arg
aa 001536  700024 756111		stq	sb|20,x1
aa 001537  000027 236007		ldq	23,dl		" AnyPr
aa 001540  700025 756111		stq	sb|21,x1
4a 001541  400026 272120		tsbbp	lp|L121,*		" LoadPointer
aa 001542  000022 000002		zero	18,2
aa 001543  700010 756111		stq	sb|8,x1		" Pr
aa 001544  600153 236100  118		ldq	sp|107		" Machine
aa 001545  014044 116007		cmpq	6180,dl		" 6180
aa 001546  000034 601004		tnz	L133
aa 001547  700004 234111		szn	sb|4,x1		" Offset
aa 001550  000032 600004		tze	L133
aa 001551  700004 235111  119		lda	sb|4,x1		" Offset
aa 001552  700024 755111		sta	sb|20,x1
aa 001553  000030 235007		lda	24,dl		" AnyXr
aa 001554  700025 755111		sta	sb|21,x1
4a 001555  400024 272120		tsbbp	lp|L134,*		" LoadIndex
aa 001556  000022 000002		zero	18,2
aa 001557  700011 756111		stq	sb|9,x1		" Xr
aa 001560  700010 236111  120		ldq	sb|8,x1		" Pr
aa 001561  700024 756111		stq	sb|20,x1
4a 001562  400022 272120		tsbbp	lp|L135,*		" FormTag
aa 001563  000022 000001		zero	18,1
aa 001564  700011 235111		lda	sb|9,x1		" Xr
aa 001565  700024 755111		sta	sb|20,x1
aa 001566  700013 756111		stq	sb|11,x1		" temporary
4a 001567  400022 272120		tsbbp	lp|L135,*		" FormTag
aa 001570  000022 000001		zero	18,1
aa 001571  700013 276111		orq	sb|11,x1
aa 001572  700012 756111		stq	sb|10,x1
aa 001573  001503 236007		ldq	835,dl		" Abd
aa 001574  700024 756111		stq	sb|20,x1
aa 001575  700025 450111		stz	sb|21,x1
aa 001576  700012 236111		ldq	sb|10,x1
aa 001577  700026 756111		stq	sb|22,x1
4a 001600  400070 272120		tsbbp	lp|L35,*		" Outop3
aa 001601  000022 000003		zero	18,3
			L133:
aa 001602  600476 236100  122		ldq	sp|318		" LabMaxSSP
aa 001603  600520 756100		stq	sp|336		" Param
aa 001604  700002 236111		ldq	sb|2,x1		" i
aa 001605  000001 736000		qls	1
aa 001606  000002 076007		adq	2,dl		" 2
aa 001607  600455 756100		stq	sp|301		" Address
aa 001610  600540 236100		ldq	sp|352		" StackRefTag
aa 001611  600544 756100		stq	sp|356		" Tag
aa 001612  000250 236007  123		ldq	168,dl		" Stpap
aa 001613  700024 756111		stq	sb|20,x1
aa 001614  700010 236111		ldq	sb|8,x1		" Pr
aa 001615  700025 756111		stq	sb|21,x1
4a 001616  400020 272120		tsbbp	lp|L136,*		" FormOpcode
aa 001617  000022 000002		zero	18,2
aa 001620  700011 756111		stq	sb|9,x1
aa 001621  700011 236111		ldq	sb|9,x1
aa 001622  700024 756111		stq	sb|20,x1
4a 001623  400064 272120		tsbbp	lp|L45,*		" Outop
aa 001624  000022 000001		zero	18,1
aa 001625  600153 236100  124		ldq	sp|107		" Machine
aa 001626  001205 116007		cmpq	645,dl		" 645
aa 001627  000102 601004		tnz	L137
aa 001630  700004 234111		szn	sb|4,x1		" Offset
aa 001631  000100 600004		tze	L137
aa 001632  700004 235111  125		lda	sb|4,x1		" Offset
aa 001633  700024 755111		sta	sb|20,x1
aa 001634  000026 235007		lda	22,dl		" AorQr
aa 001635  700025 755111		sta	sb|21,x1
4a 001636  400062 272120		tsbbp	lp|L55,*		" LoadRegister
aa 001637  000022 000002		zero	18,2
aa 001640  700011 756111		stq	sb|9,x1		" q
aa 001641  000735 236007  126		ldq	477,dl		" Als
aa 001642  700024 756111		stq	sb|20,x1
aa 001643  700011 236111		ldq	sb|9,x1		" q
aa 001644  700025 756111		stq	sb|21,x1
4a 001645  400020 272120		tsbbp	lp|L136,*		" FormOpcode
aa 001646  000022 000002		zero	18,2
aa 001647  700012 756111		stq	sb|10,x1
aa 001650  700012 236111		ldq	sb|10,x1
aa 001651  700024 756111		stq	sb|20,x1
aa 001652  000011 236007		ldq	9,dl		" 9
aa 001653  700025 756111		stq	sb|21,x1
aa 001654  700026 450111		stz	sb|22,x1
4a 001655  400070 272120		tsbbp	lp|L35,*		" Outop3
aa 001656  000022 000003		zero	18,3
aa 001657  000375 236007  127		ldq	253,dl		" Ana
aa 001660  700024 756111		stq	sb|20,x1
aa 001661  700011 236111		ldq	sb|9,x1		" q
aa 001662  700025 756111		stq	sb|21,x1
4a 001663  400020 272120		tsbbp	lp|L136,*		" FormOpcode
aa 001664  000022 000002		zero	18,2
aa 001665  700012 756111		stq	sb|10,x1
aa 001666  700012 236111		ldq	sb|10,x1
aa 001667  700024 756111		stq	sb|20,x1
aa 001670  077000 236007		ldq	32256,dl		" $8077000
aa 001671  700025 756111		stq	sb|21,x1
aa 001672  000007 236007		ldq	7,dl		" Dl
aa 001673  700026 756111		stq	sb|22,x1
4a 001674  400070 272120		tsbbp	lp|L35,*		" Outop3
aa 001675  000022 000003		zero	18,3
aa 001676  600476 236100  128		ldq	sp|318		" LabMaxSSP
aa 001677  600520 756100		stq	sp|336		" Param
aa 001700  600540 236100		ldq	sp|352		" StackRefTag
aa 001701  600544 756100		stq	sp|356		" Tag
aa 001702  700002 236111		ldq	sb|2,x1		" i
aa 001703  000001 736000		qls	1
aa 001704  000002 076007		adq	2,dl		" 2
aa 001705  600455 756100		stq	sp|301		" Address
aa 001706  600476 236100  129		ldq	sp|318		" LabMaxSSP
aa 001707  600520 756100		stq	sp|336		" Param
aa 001710  700002 236111		ldq	sb|2,x1		" i
aa 001711  000001 736000		qls	1
aa 001712  000003 076007		adq	3,dl		" 3
aa 001713  600455 756100		stq	sp|301		" Address
aa 001714  600540 236100		ldq	sp|352		" StackRefTag
aa 001715  600544 756100		stq	sp|356		" Tag
aa 001716  000255 236007  130		ldq	173,dl		" Orsa
aa 001717  700024 756111		stq	sb|20,x1
aa 001720  700011 236111		ldq	sb|9,x1		" q
aa 001721  700025 756111		stq	sb|21,x1
4a 001722  400020 272120		tsbbp	lp|L136,*		" FormOpcode
aa 001723  000022 000002		zero	18,2
aa 001724  700012 756111		stq	sb|10,x1
aa 001725  700012 236111		ldq	sb|10,x1
aa 001726  700024 756111		stq	sb|20,x1
4a 001727  400064 272120		tsbbp	lp|L45,*		" Outop
aa 001730  000022 000001		zero	18,1
			L137:
aa 001731  700012 450111  132		stz	sb|10,x1		" CellOffset
aa 001732  700013 450111		stz	sb|11,x1		" RegPart
aa 001733  000001 236007		ldq	1,dl		" 1
aa 001734  000043 736000		qls	35
aa 001735  700011 756111		stq	sb|9,x1		" ConstantPart
aa 001736  700006 234111  133		szn	sb|6,x1		" Length
aa 001737  000063 601004		tnz	L138
aa 001740  700007 234111  134		szn	sb|7,x1		" StringSw
aa 001741  000060 600004		tze	L140
aa 001742  000026 236007  135		ldq	22,dl		" AorQr
aa 001743  700024 756111		stq	sb|20,x1
4a 001744  400016 272120		tsbbp	lp|L141,*		" GetRegister
aa 001745  000022 000001		zero	18,1
aa 001746  700013 756111		stq	sb|11,x1		" RegPart
aa 001747  000235 236007  136		ldq	157,dl		" Lda
aa 001750  700024 756111		stq	sb|20,x1
aa 001751  700013 236111		ldq	sb|11,x1		" RegPart
aa 001752  700025 756111		stq	sb|21,x1
4a 001753  400020 272120		tsbbp	lp|L136,*		" FormOpcode
aa 001754  000022 000002		zero	18,2
aa 001755  700014 756111		stq	sb|12,x1
aa 001756  700010 236111		ldq	sb|8,x1		" Pr
aa 001757  700024 756111		stq	sb|20,x1
4a 001760  400022 272120		tsbbp	lp|L135,*		" FormTag
aa 001761  000022 000001		zero	18,1
aa 001762  700016 756111		stq	sb|14,x1
aa 001763  700014 236111		ldq	sb|12,x1
aa 001764  700024 756111		stq	sb|20,x1
aa 001765  700025 450111		stz	sb|21,x1
aa 001766  700016 236111		ldq	sb|14,x1
aa 001767  700026 756111		stq	sb|22,x1
4a 001770  400070 272120		tsbbp	lp|L35,*		" Outop3
aa 001771  000022 000003		zero	18,3
aa 001772  600153 236100  137		ldq	sp|107		" Machine
aa 001773  001205 116007		cmpq	645,dl		" 645
aa 001774  000003 601004		tnz	L142
aa 001775  000033 235007		lda	27,dl		" 27
aa 001776  000002 710004		tra	L143
			L142:
aa 001777  000022 235007		lda	18,dl		" 18
			L143:
aa 002000  700015 755111		sta	sb|13,x1
aa 002001  700015 235111		lda	sb|13,x1
aa 002002  700014 755111		sta	sb|12,x1
aa 002003  000771 235007		lda	505,dl		" Arl
aa 002004  700024 755111		sta	sb|20,x1
aa 002005  700013 235111		lda	sb|11,x1		" RegPart
aa 002006  700025 755111		sta	sb|21,x1
4a 002007  400020 272120		tsbbp	lp|L136,*		" FormOpcode
aa 002010  000022 000002		zero	18,2
aa 002011  700016 756111		stq	sb|14,x1
aa 002012  700016 236111		ldq	sb|14,x1
aa 002013  700024 756111		stq	sb|20,x1
aa 002014  700014 236111		ldq	sb|12,x1
aa 002015  700025 756111		stq	sb|21,x1
aa 002016  700026 450111		stz	sb|22,x1
4a 002017  400070 272120		tsbbp	lp|L35,*		" Outop3
aa 002020  000022 000003		zero	18,3
			L140:
aa 002021  000051 710004		tra	L139
			L138:
aa 002022  700006 236111  139		ldq	sb|6,x1		" Length
aa 002023  700024 756111		stq	sb|20,x1
4a 002024  400014 272120		tsbbp	lp|L146,*		" IsNumber
aa 002025  000022 000001		zero	18,1
aa 002026  000000 116007		cmpq	0,dl
aa 002027  000014 600004		tze	L144
aa 002030  700006 761111  140		lprpab	sb|6,x1		" Length
aa 002031  100000 236100		ldq	ab|0
aa 002032  700024 756111		stq	sb|20,x1
aa 002033  700006 763111		lprpbb	sb|6,x1		" Length
aa 002034  300001 236100		ldq	bb|1
aa 002035  700025 756111		stq	sb|21,x1
4a 002036  400030 272120		tsbbp	lp|L110,*		" EvalNumber
aa 002037  000022 000002		zero	18,2
aa 002040  000323 376004		anq	L147		" $877777777
aa 002041  700011 256111		orsq	sb|9,x1		" ConstantPart
aa 002042  000030 710004		tra	L145
			L144:
aa 002043  700006 236111  141		ldq	sb|6,x1		" Length
aa 002044  700024 756111		stq	sb|20,x1
aa 002045  000026 236007		ldq	22,dl		" AorQr
aa 002046  700025 756111		stq	sb|21,x1
4a 002047  400062 272120		tsbbp	lp|L55,*		" LoadRegister
aa 002050  000022 000002		zero	18,2
aa 002051  700013 756111		stq	sb|11,x1		" RegPart
aa 002052  000311 236004  142		ldq	L147		" $877777777
aa 002053  700024 756111		stq	sb|20,x1
aa 002054  700025 450111		stz	sb|21,x1
4a 002055  400012 272120		tsbbp	lp|L148,*		" Literal
aa 002056  000022 000002		zero	18,2
aa 002057  000375 236007  143		ldq	253,dl		" Ana
aa 002060  700024 756111		stq	sb|20,x1
aa 002061  700013 236111		ldq	sb|11,x1		" RegPart
aa 002062  700025 756111		stq	sb|21,x1
4a 002063  400020 272120		tsbbp	lp|L136,*		" FormOpcode
aa 002064  000022 000002		zero	18,2
aa 002065  700014 756111		stq	sb|12,x1
aa 002066  700014 236111		ldq	sb|12,x1
aa 002067  700024 756111		stq	sb|20,x1
4a 002070  400064 272120		tsbbp	lp|L45,*		" Outop
aa 002071  000022 000001		zero	18,1
			L145:
			L139:
aa 002072  700005 236111  146		ldq	sb|5,x1		" Type
aa 002073  700024 756111		stq	sb|20,x1
4a 002074  400014 272120		tsbbp	lp|L146,*		" IsNumber
aa 002075  000022 000001		zero	18,1
aa 002076  000000 116007		cmpq	0,dl
aa 002077  000014 600004		tze	L149
aa 002100  700005 765111  147		lprplb	sb|5,x1		" Type
aa 002101  500000 236100		ldq	lb|0
aa 002102  700024 756111		stq	sb|20,x1
aa 002103  700005 760111		lprpap	sb|5,x1		" Type
aa 002104  000001 236100		ldq	ap|1
aa 002105  700025 756111		stq	sb|21,x1
4a 002106  400030 272120		tsbbp	lp|L110,*		" EvalNumber
aa 002107  000022 000002		zero	18,2
aa 002110  000035 736000		qls	29
aa 002111  700011 256111		orsq	sb|9,x1		" ConstantPart
aa 002112  000054 710004		tra	L150
			L149:
aa 002113  700013 234111  148		szn	sb|11,x1		" RegPart
aa 002114  000025 600004		tze	L151
aa 002115  600457 236100  149		ldq	sp|303		" ArgLen
aa 002116  700012 756111		stq	sb|10,x1		" CellOffset
aa 002117  600457 054100  150		aos	sp|303		" ArgLen
aa 002120  600476 236100  151		ldq	sp|318		" LabMaxSSP
aa 002121  600520 756100		stq	sp|336		" Param
aa 002122  700012 236111		ldq	sb|10,x1		" CellOffset
aa 002123  600455 756100		stq	sp|301		" Address
aa 002124  600540 236100		ldq	sp|352		" StackRefTag
aa 002125  600544 756100		stq	sp|356		" Tag
aa 002126  000755 236007  152		ldq	493,dl		" Sta
aa 002127  700024 756111		stq	sb|20,x1
aa 002130  700013 236111		ldq	sb|11,x1		" RegPart
aa 002131  700025 756111		stq	sb|21,x1
4a 002132  400020 272120		tsbbp	lp|L136,*		" FormOpcode
aa 002133  000022 000002		zero	18,2
aa 002134  700014 756111		stq	sb|12,x1
aa 002135  700014 236111		ldq	sb|12,x1
aa 002136  700024 756111		stq	sb|20,x1
4a 002137  400064 272120		tsbbp	lp|L45,*		" Outop
aa 002140  000022 000001		zero	18,1
			L151:
aa 002141  700005 236111  154		ldq	sb|5,x1		" Type
aa 002142  700024 756111		stq	sb|20,x1
aa 002143  000026 236007		ldq	22,dl		" AorQr
aa 002144  700025 756111		stq	sb|21,x1
4a 002145  400062 272120		tsbbp	lp|L55,*		" LoadRegister
aa 002146  000022 000002		zero	18,2
aa 002147  700013 756111		stq	sb|11,x1		" RegPart
aa 002150  000735 236007  155		ldq	477,dl		" Als
aa 002151  700024 756111		stq	sb|20,x1
aa 002152  700013 236111		ldq	sb|11,x1		" RegPart
aa 002153  700025 756111		stq	sb|21,x1
4a 002154  400020 272120		tsbbp	lp|L136,*		" FormOpcode
aa 002155  000022 000002		zero	18,2
aa 002156  700014 756111		stq	sb|12,x1
aa 002157  700014 236111		ldq	sb|12,x1
aa 002160  700024 756111		stq	sb|20,x1
aa 002161  000035 236007		ldq	29,dl		" 29
aa 002162  700025 756111		stq	sb|21,x1
aa 002163  700026 450111		stz	sb|22,x1
4a 002164  400070 272120		tsbbp	lp|L35,*		" Outop3
aa 002165  000022 000003		zero	18,3
			L150:
aa 002166  700013 234111  157		szn	sb|11,x1		" RegPart
aa 002167  000013 601004		tnz	L152
aa 002170  700011 352111  158		eapbp	sb|9,x1		" ConstantPart
aa 002171  700024 542111		sprpbp	sb|20,x1
aa 002172  000001 236007		ldq	1,dl		" 1
aa 002173  700025 756111		stq	sb|21,x1
aa 002174  000161 352004		eapbp	L154		" "descriptor"
aa 002175  700026 542111		sprpbp	sb|22,x1
aa 002176  700027 450111		stz	sb|23,x1
4a 002177  400034 272120		tsbbp	lp|L103,*		" AddLiteral
aa 002200  000022 000004		zero	18,4
aa 002201  000062 710004		tra	L153
			L152:
aa 002202  700011 236111  159		ldq	sb|9,x1		" ConstantPart
aa 002203  700024 756111		stq	sb|20,x1
aa 002204  700025 450111		stz	sb|21,x1
4a 002205  400012 272120		tsbbp	lp|L148,*		" Literal
aa 002206  000022 000002		zero	18,2
aa 002207  000275 236007  160		ldq	189,dl		" Ora
aa 002210  700024 756111		stq	sb|20,x1
aa 002211  700013 236111		ldq	sb|11,x1		" RegPart
aa 002212  700025 756111		stq	sb|21,x1
4a 002213  400020 272120		tsbbp	lp|L136,*		" FormOpcode
aa 002214  000022 000002		zero	18,2
aa 002215  700014 756111		stq	sb|12,x1
aa 002216  700014 236111		ldq	sb|12,x1
aa 002217  700024 756111		stq	sb|20,x1
4a 002220  400064 272120		tsbbp	lp|L45,*		" Outop
aa 002221  000022 000001		zero	18,1
aa 002222  700012 234111  162		szn	sb|10,x1		" CellOffset
aa 002223  000007 601004		tnz	L155
aa 002224  600457 236100  163		ldq	sp|303		" ArgLen
aa 002225  700012 756111		stq	sb|10,x1		" CellOffset
aa 002226  600457 054100  164		aos	sp|303		" ArgLen
aa 002227  000755 236007  165		ldq	493,dl		" Sta
aa 002230  700014 756111		stq	sb|12,x1		" Op
aa 002231  000003 710004		tra	L156
			L155:
aa 002232  000255 236007  167		ldq	173,dl		" Orsa
aa 002233  700014 756111		stq	sb|12,x1		" Op
			L156:
aa 002234  600540 236100  168		ldq	sp|352		" StackRefTag
aa 002235  600544 756100		stq	sp|356		" Tag
aa 002236  700012 236111		ldq	sb|10,x1		" CellOffset
aa 002237  600455 756100		stq	sp|301		" Address
aa 002240  600476 236100		ldq	sp|318		" LabMaxSSP
aa 002241  600520 756100		stq	sp|336		" Param
aa 002242  700014 236111  169		ldq	sb|12,x1		" Op
aa 002243  700024 756111		stq	sb|20,x1
aa 002244  700013 236111		ldq	sb|11,x1		" RegPart
aa 002245  700025 756111		stq	sb|21,x1
4a 002246  400020 272120		tsbbp	lp|L136,*		" FormOpcode
aa 002247  000022 000002		zero	18,2
aa 002250  700015 756111		stq	sb|13,x1
aa 002251  700015 236111		ldq	sb|13,x1
aa 002252  700024 756111		stq	sb|20,x1
4a 002253  400064 272120		tsbbp	lp|L45,*		" Outop
aa 002254  000022 000001		zero	18,1
aa 002255  600476 236100  170		ldq	sp|318		" LabMaxSSP
aa 002256  600520 756100		stq	sp|336		" Param
aa 002257  700012 236111		ldq	sb|10,x1		" CellOffset
aa 002260  600455 756100		stq	sp|301		" Address
aa 002261  600540 236100		ldq	sp|352		" StackRefTag
aa 002262  600544 756100		stq	sp|356		" Tag
			L153:
aa 002263  000350 236007  172		ldq	232,dl		" Eapap
aa 002264  700024 756111		stq	sb|20,x1
aa 002265  700010 236111		ldq	sb|8,x1		" Pr
aa 002266  700025 756111		stq	sb|21,x1
4a 002267  400020 272120		tsbbp	lp|L136,*		" FormOpcode
aa 002270  000022 000002		zero	18,2
aa 002271  700014 756111		stq	sb|12,x1
aa 002272  700014 236111		ldq	sb|12,x1
aa 002273  700024 756111		stq	sb|20,x1
4a 002274  400064 272120		tsbbp	lp|L45,*		" Outop
aa 002275  000022 000001		zero	18,1
aa 002276  600476 236100  173		ldq	sp|318		" LabMaxSSP
aa 002277  600520 756100		stq	sp|336		" Param
aa 002300  700002 236111		ldq	sb|2,x1		" i
aa 002301  000001 736000		qls	1
aa 002302  600456 235100		lda	sp|302		" ArgCount
aa 002303  000001 735000		als	1
aa 002304  600000 756100		stq	sp|0
aa 002305  600000 075100		ada	sp|0
aa 002306  000002 075007		ada	2,dl		" 2
aa 002307  600455 755100		sta	sp|301		" Address
aa 002310  600540 236100		ldq	sp|352		" StackRefTag
aa 002311  600544 756100		stq	sp|356		" Tag
aa 002312  000250 236007  174		ldq	168,dl		" Stpap
aa 002313  700024 756111		stq	sb|20,x1
aa 002314  700010 236111		ldq	sb|8,x1		" Pr
aa 002315  700025 756111		stq	sb|21,x1
4a 002316  400020 272120		tsbbp	lp|L136,*		" FormOpcode
aa 002317  000022 000002		zero	18,2
aa 002320  700014 756111		stq	sb|12,x1
aa 002321  700014 236111		ldq	sb|12,x1
aa 002322  700024 756111		stq	sb|20,x1
4a 002323  400064 272120		tsbbp	lp|L45,*		" Outop
aa 002324  000022 000001		zero	18,1
aa 002325  700003 236111  175		ldq	sb|3,x1		" Arg
aa 002326  700024 756111		stq	sb|20,x1
4a 002327  400060 272120		tsbbp	lp|L56,*		" DisclaimRegister
aa 002330  000022 000001		zero	18,1
aa 002331  700004 234111  176		szn	sb|4,x1		" Offset
aa 002332  000005 600004		tze	L157
aa 002333  700004 236111		ldq	sb|4,x1		" Offset
aa 002334  700024 756111		stq	sb|20,x1
4a 002335  400060 272120		tsbbp	lp|L56,*		" DisclaimRegister
aa 002336  000022 000001		zero	18,1
			L157:
aa 002337  700005 236111  177		ldq	sb|5,x1		" Type
aa 002340  700024 756111		stq	sb|20,x1
4a 002341  400060 272120		tsbbp	lp|L56,*		" DisclaimRegister
aa 002342  000022 000001		zero	18,1
aa 002343  700006 234111  178		szn	sb|6,x1		" Length
aa 002344  000005 600004		tze	L158
aa 002345  700006 236111		ldq	sb|6,x1		" Length
aa 002346  700024 756111		stq	sb|20,x1
4a 002347  400060 272120		tsbbp	lp|L56,*		" DisclaimRegister
aa 002350  000022 000001		zero	18,1
			L158:
			L127:
aa 002351  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002352  200000 121100		sblx1	bp|0
aa 002353  700001 764111		lprplp	sb|1,x1
aa 002354  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L154:
aa 002355  000012 144145		zero	10,51301		" "descriptor"
aa 002356  163143 162151		zero	58979,58473
aa 002357  160164 157162		zero	57460,56946
			L132:
aa 002360  000000 000017		zero	0,15		" a table
aa 002361  000000 000022		zero	0,18
aa 002362  000000 000000		zero	0
			L147:
aa 002363  000077 777777		zero	63,-1		" $877777777
			L131:
aa 002364  000000 000017		zero	0,15		" a table
aa 002365  000000 000011		zero	0,9
aa 002366  000000 000000		zero	0
	"	Begin text of CreateSystemArglist

aa 002367  000023 103162		zero	19,34418		" CreateSystemArglist
aa 002370  145141 164145		zero	51809,59493
aa 002371  123171 163164		zero	42617,58996
aa 002372  145155 101162		zero	51821,33394
aa 002373  147154 151163		zero	52844,53875
aa 002374  164000 000000		zero	59392
			L8:
aa 002375  000000 213000  107		epaq	0		" set lp to linkage section
aa 002376  700026 764161		lprplp	sb|22,*au
aa 002377  200000 021100		adlx1	bp|0		" BCPL save
aa 002400  700000 542111		sprpbp	sb|0,x1
aa 002401  700001 544111		sprplp	sb|1,x1
aa 002402  700425 620111		eax0	sb|277,x1
aa 002403  777760 360003		anx0	-16,du
aa 002404  700025 740100		stx0	sb|21		" end of save sequence

aa 002405  700002 236111  108		ldq	sb|2,x1		" Nargs
aa 002406  000002 736000		qls	2
aa 002407  000002 076007		adq	2,dl		" 2
aa 002410  600457 756100		stq	sp|303		" ArgLen
aa 002411  700002 236111		ldq	sb|2,x1		" Nargs
aa 002412  600456 756100		stq	sp|302		" ArgCount
aa 002413  700002 236111  109		ldq	sb|2,x1		" Nargs
aa 002414  000023 736000		qls	19
aa 002415  700005 756111		stq	sb|5,x1
aa 002416  700002 236111		ldq	sb|2,x1		" Nargs
aa 002417  000023 736000		qls	19
aa 002420  000004 276007		orq	4,dl		" 4
aa 002421  700004 756111		stq	sb|4,x1
aa 002422  700004 352111		eapbp	sb|4,x1		" a list
aa 002423  700003 542111		sprpbp	sb|3,x1		" T
aa 002424  700003 236111  110		ldq	sb|3,x1		" T
aa 002425  700012 756111		stq	sb|10,x1
aa 002426  000002 236007		ldq	2,dl		" 2
aa 002427  700013 756111		stq	sb|11,x1
aa 002430  000034 352004		eapbp	L162		" "arglist header"
aa 002431  700014 542111		sprpbp	sb|12,x1
aa 002432  000002 236007		ldq	2,dl		" 2
aa 002433  700015 756111		stq	sb|13,x1
4a 002434  400034 272120		tsbbp	lp|L103,*		" AddLiteral
aa 002435  000010 000004		zero	8,4
aa 002436  000237 236007  111		ldq	159,dl		" Ldaq
aa 002437  700012 756111		stq	sb|10,x1
4a 002440  400064 272120		tsbbp	lp|L45,*		" Outop
aa 002441  000010 000001		zero	8,1
aa 002442  600476 236100  112		ldq	sp|318		" LabMaxSSP
aa 002443  600520 756100		stq	sp|336		" Param
aa 002444  000015 352004		eapbp	L163		" "arg count"
aa 002445  600464 542100		sprpbp	sp|308		" Comment
aa 002446  600540 236100		ldq	sp|352		" StackRefTag
aa 002447  600544 756100		stq	sp|356		" Tag
aa 002450  600455 450100		stz	sp|301		" Address
aa 002451  000757 236007  113		ldq	495,dl		" Staq
aa 002452  700012 756111		stq	sb|10,x1
4a 002453  400064 272120		tsbbp	lp|L45,*		" Outop
aa 002454  000010 000001		zero	8,1
			L161:
aa 002455  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002456  200000 121100		sblx1	bp|0
aa 002457  700001 764111		lprplp	sb|1,x1
aa 002460  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L163:
aa 002461  000011 141162		zero	9,49778		" "arg count"
aa 002462  147040 143157		zero	52768,50799
aa 002463  165156 164000		zero	60014,59392
			L162:
aa 002464  000016 141162		zero	14,49778		" "arglist header"
aa 002465  147154 151163		zero	52844,53875
aa 002466  164040 150145		zero	59424,53349
aa 002467  141144 145162		zero	49764,51826
	"	Begin text of NewSSP

aa 002470  000006 116145		zero	6,40037		" NewSSP
aa 002471  167123 123120		zero	61011,42576
			L1:
aa 002472  000000 213000  15		epaq	0		" set lp to linkage section
aa 002473  700026 764161		lprplp	sb|22,*au
aa 002474  200000 021100		adlx1	bp|0		" BCPL save
aa 002475  700000 542111		sprpbp	sb|0,x1
aa 002476  700001 544111		sprplp	sb|1,x1
aa 002477  700417 620111		eax0	sb|271,x1
aa 002500  777760 360003		anx0	-16,du
aa 002501  700025 740100		stx0	sb|21		" end of save sequence

aa 002502  700002 236111  16		ldq	sb|2,x1		" S
aa 002503  600514 116100		cmpq	sp|332		" MaxSSP
aa 002504  000003 604404		tmoz	L167
aa 002505  700002 235111		lda	sb|2,x1		" S
aa 002506  600514 755100		sta	sp|332		" MaxSSP
			L167:
			L166:
aa 002507  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002510  200000 121100		sblx1	bp|0
aa 002511  700001 764111		lprplp	sb|1,x1
aa 002512  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of Compexternal

aa 002513  000014 103157		zero	12,34415		" Compexternal
aa 002514  155160 145170		zero	55920,51832
aa 002515  164145 162156		zero	59493,58478
aa 002516  141154 000000		zero	49772
			L168:
aa 002517  000000 213000  228		epaq	0		" set lp to linkage section
aa 002520  700026 764161		lprplp	sb|22,*au
aa 002521  200000 021100		adlx1	bp|0		" BCPL save
aa 002522  700000 542111		sprpbp	sb|0,x1
aa 002523  700001 544111		sprplp	sb|1,x1
aa 002524  700425 620111		eax0	sb|277,x1
aa 002525  777760 360003		anx0	-16,du
aa 002526  700025 740100		stx0	sb|21		" end of save sequence

aa 002527  600507 235100  229		lda	sp|327		" LinkList
aa 002530  700004 755111		sta	sb|4,x1		" p
aa 002531  000020 710004  230		tra	L174
			L175:
aa 002532  700002 235111  231		lda	sb|2,x1		" s
aa 002533  700012 755111		sta	sb|10,x1
aa 002534  700004 762111		lprpbp	sb|4,x1		" p
aa 002535  200001 235100		lda	bp|1
aa 002536  700013 755111		sta	sb|11,x1
4a 002537  400010 272120		tsbbp	lp|L177,*		" EqualString
aa 002540  000010 000002		zero	8,2
aa 002541  000000 116007		cmpq	0,dl
aa 002542  000004 600004		tze	L176
aa 002543  700004 761111		lprpab	sb|4,x1		" p
aa 002544  100002 236100		ldq	ab|2
aa 002545  000024 710004		tra	L173
			L176:
aa 002546  700004 763111  232		lprpbb	sb|4,x1		" p
aa 002547  300000 235100		lda	bb|0
aa 002550  700004 755111		sta	sb|4,x1		" p
			L174:
aa 002551  700004 234111		szn	sb|4,x1		" p
aa 002552  777760 601004		tnz	L175
4a 002553  400112 272120  234		tsbbp	lp|L19,*		" Nextparam
aa 002554  000010 000000		zero	8
aa 002555  700005 756111		stq	sb|5,x1		" L
aa 002556  600507 236100  235		ldq	sp|327		" LinkList
aa 002557  700012 756111		stq	sb|10,x1
aa 002560  700002 236111		ldq	sb|2,x1		" s
aa 002561  700013 756111		stq	sb|11,x1
aa 002562  700005 236111		ldq	sb|5,x1		" L
aa 002563  700014 756111		stq	sb|12,x1
aa 002564  700015 450111		stz	sb|13,x1
4a 002565  400100 272120		tsbbp	lp|L26,*		" List4
aa 002566  000010 000004		zero	8,4
aa 002567  600507 756100		stq	sp|327		" LinkList
aa 002570  700005 236111  236		ldq	sb|5,x1		" L
			L173:
aa 002571  700004 756111		stq	sb|4,x1
aa 002572  700004 236111		ldq	sb|4,x1
aa 002573  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002574  200000 121100		sblx1	bp|0
aa 002575  700001 764111		lprplp	sb|1,x1
aa 002576  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of Compgoto

aa 002577  000010 103157		zero	8,34415		" Compgoto
aa 002600  155160 147157		zero	55920,52847
aa 002601  164157 000000		zero	59503
aa 002602  700003 756111  240		stq	sb|3,x1		" temporary
			L170:
aa 002603  000000 213000		epaq	0		" set lp to linkage section
aa 002604  700026 764161		lprplp	sb|22,*au
aa 002605  200000 021100		adlx1	bp|0		" BCPL save
aa 002606  700000 542111		sprpbp	sb|0,x1
aa 002607  700001 544111		sprplp	sb|1,x1
aa 002610  700422 620111		eax0	sb|274,x1
aa 002611  777760 360003		anx0	-16,du
aa 002612  700025 740100		stx0	sb|21		" end of save sequence

aa 002613  700002 236111  241		ldq	sb|2,x1		" p
aa 002614  700006 756111		stq	sb|6,x1
4a 002615  400046 272120		tsbbp	lp|L84,*		" SetupAddr
aa 002616  000004 000001		zero	4,1
aa 002617  000710 236007  242		ldq	456,dl		" Tra
aa 002620  700006 756111		stq	sb|6,x1
4a 002621  400064 272120		tsbbp	lp|L45,*		" Outop
aa 002622  000004 000001		zero	4,1
aa 002623  700002 236111  243		ldq	sb|2,x1		" p
aa 002624  700006 756111		stq	sb|6,x1
4a 002625  400060 272120		tsbbp	lp|L56,*		" DisclaimRegister
aa 002626  000004 000001		zero	4,1
			L180:
aa 002627  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002630  200000 121100		sblx1	bp|0
aa 002631  700001 764111		lprplp	sb|1,x1
aa 002632  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of Compfinish

aa 002633  000012 103157		zero	10,34415		" Compfinish
aa 002634  155160 146151		zero	55920,52329
aa 002635  156151 163150		zero	56425,58984
			L169:
aa 002636  000000 213000  238		epaq	0		" set lp to linkage section
aa 002637  700026 764161		lprplp	sb|22,*au
aa 002640  200000 021100		adlx1	bp|0		" BCPL save
aa 002641  700000 542111		sprpbp	sb|0,x1
aa 002642  700001 544111		sprplp	sb|1,x1
aa 002643  700425 620111		eax0	sb|277,x1
aa 002644  777760 360003		anx0	-16,du
aa 002645  700025 740100		stx0	sb|21		" end of save sequence

aa 002646  000710 236007  239		ldq	456,dl		" Tra
aa 002647  700004 756111		stq	sb|4,x1
aa 002650  000042 236007		ldq	34,dl		" 34
aa 002651  700005 756111		stq	sb|5,x1
aa 002652  776631 336004		lcq	L122
aa 002653  700006 756111		stq	sb|6,x1
aa 002654  000010 371404		eaplb	L184		" "Multics return"
aa 002655  700007 545111		sprplb	sb|7,x1
4a 002656  400066 272120		tsbbp	lp|L42,*		" Outop4
aa 002657  000002 000004		zero	2,4
			L183:
aa 002660  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002661  200000 121100		sblx1	bp|0
aa 002662  700001 764111		lprplp	sb|1,x1
aa 002663  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L184:
aa 002664  000016 115165		zero	14,39541		" "Multics return"
aa 002665  154164 151143		zero	55412,53859
aa 002666  163040 162145		zero	58912,58469
aa 002667  164165 162156		zero	59509,58478
	"	Definition section part one - external entry points

5a 000000  000104 000000		" pointer to first definition
aa 000001  000000 600000		" flags: new format, ignore header
aa 000002  000000 000000		" list terminator

aa 000003  010142 143160		" "bcpl_cg4"
aa 000004  154137 143147
aa 000005  064000 000000
aa 000006  010103 157155		" "Compgoto"
aa 000007  160147 157164
aa 000010  157000 000000
aa 000011  012103 157155		" "Compfinish"
aa 000012  160146 151156
aa 000013  151163 150000
aa 000014  014103 157155		" "Compexternal"
aa 000015  160145 170164
aa 000016  145162 156141
aa 000017  154000 000000
aa 000020  011103 157155		" "Comptable"
aa 000021  160164 141142
aa 000022  154145 000000
aa 000023  012103 157155		" "Compstring"
aa 000024  160163 164162
aa 000025  151156 147000
aa 000026  011122 145163		" "ResultGet"
aa 000027  165154 164107
aa 000030  145164 000000
aa 000031  011122 145163		" "ResultSet"
aa 000032  165154 164123
aa 000033  145164 000000
aa 000034  020122 145163		" "ResultBlockBegin"
aa 000035  165154 164102
aa 000036  154157 143153
aa 000037  102145 147151
aa 000040  156000 000000
aa 000041  016103 157155		" "CompSystemCall"
aa 000042  160123 171163
aa 000043  164145 155103
aa 000044  141154 154000
aa 000045  016123 164157		" "StoreSystemArg"
aa 000046  162145 123171
aa 000047  163164 145155
aa 000050  101162 147000
aa 000051  023103 162145		" "CreateSystemArglist"
aa 000052  141164 145123
aa 000053  171163 164145
aa 000054  155101 162147
aa 000055  154151 163164
aa 000056  010103 157155		" "Compfnap"
aa 000057  160146 156141
aa 000060  160000 000000
aa 000061  010123 164157		" "StoreArg"
aa 000062  162145 101162
aa 000063  147000 000000
aa 000064  015103 162145		" "CreateArglist"
aa 000065  141164 145101
aa 000066  162147 154151
aa 000067  163164 000000
aa 000070  012103 157155		" "Compreturn"
aa 000071  160162 145164
aa 000072  165162 156000
aa 000073  011103 157155		" "Compentry"
aa 000074  160145 156164
aa 000075  162171 000000
aa 000076  006116 145167		" "NewSSP"
aa 000077  123123 120000
aa 000100  014163 171155		" "symbol_table"
aa 000101  142157 154137
aa 000102  164141 142154
aa 000103  145000 000000

	"	Segname definition for bcpl_cg4

55 000104  000107 000002		" forward, backward threads
5a 000105  000002 400003		" value defined, class flags
55 000106  000003 000107		" name pointer, first entry def

	"	Definition for Compgoto

55 000107  000112 000104		" forward, backward threads
0a 000110  002603 500000		" value defined, class flags
55 000111  000006 000104		" name pointer, segname def pointer

	"	Definition for Compfinish

55 000112  000115 000107		" forward, backward threads
0a 000113  002636 500000		" value defined, class flags
55 000114  000011 000104		" name pointer, segname def pointer

	"	Definition for Compexternal

55 000115  000120 000112		" forward, backward threads
0a 000116  002517 500000		" value defined, class flags
55 000117  000014 000104		" name pointer, segname def pointer

	"	Definition for Comptable

55 000120  000123 000115		" forward, backward threads
0a 000121  001163 500000		" value defined, class flags
55 000122  000020 000104		" name pointer, segname def pointer

	"	Definition for Compstring

55 000123  000126 000120		" forward, backward threads
0a 000124  001121 500000		" value defined, class flags
55 000125  000023 000104		" name pointer, segname def pointer

	"	Definition for ResultGet

55 000126  000131 000123		" forward, backward threads
0a 000127  001056 500000		" value defined, class flags
55 000130  000026 000104		" name pointer, segname def pointer

	"	Definition for ResultSet

55 000131  000134 000126		" forward, backward threads
0a 000132  001024 500000		" value defined, class flags
55 000133  000031 000104		" name pointer, segname def pointer

	"	Definition for ResultBlockBegin

55 000134  000137 000131		" forward, backward threads
0a 000135  001272 500000		" value defined, class flags
55 000136  000034 000104		" name pointer, segname def pointer

	"	Definition for CompSystemCall

55 000137  000142 000134		" forward, backward threads
0a 000140  001330 500000		" value defined, class flags
55 000141  000041 000104		" name pointer, segname def pointer

	"	Definition for StoreSystemArg

55 000142  000145 000137		" forward, backward threads
0a 000143  001510 500000		" value defined, class flags
55 000144  000045 000104		" name pointer, segname def pointer

	"	Definition for CreateSystemArglist

55 000145  000150 000142		" forward, backward threads
0a 000146  002375 500000		" value defined, class flags
55 000147  000051 000104		" name pointer, segname def pointer

	"	Definition for Compfnap

55 000150  000153 000145		" forward, backward threads
0a 000151  000730 500000		" value defined, class flags
55 000152  000056 000104		" name pointer, segname def pointer

	"	Definition for StoreArg

55 000153  000156 000150		" forward, backward threads
0a 000154  000670 500000		" value defined, class flags
55 000155  000061 000104		" name pointer, segname def pointer

	"	Definition for CreateArglist

55 000156  000161 000153		" forward, backward threads
0a 000157  000644 500000		" value defined, class flags
55 000160  000064 000104		" name pointer, segname def pointer

	"	Definition for Compreturn

55 000161  000164 000156		" forward, backward threads
0a 000162  000375 500000		" value defined, class flags
55 000163  000070 000104		" name pointer, segname def pointer

	"	Definition for Compentry

55 000164  000167 000161		" forward, backward threads
0a 000165  000003 500000		" value defined, class flags
55 000166  000073 000104		" name pointer, segname def pointer

	"	Definition for NewSSP

55 000167  000172 000164		" forward, backward threads
0a 000170  002472 500000		" value defined, class flags
55 000171  000076 000104		" name pointer, segname def pointer

	"	Definition for symbol_table

55 000172  000002 000167		" forward, backward threads
6a 000173  000000 400002		" value defined, class flags
55 000174  000100 000104		" name pointer, segname def pointer
	"	Definition section part two - symbolic info for external references

aa 000175  015142 143160		" "bcpl_strings_"
aa 000176  154137 163164
aa 000177  162151 156147
aa 000200  163137 000000
aa 000201  013105 161165		" "EqualString"
aa 000202  141154 123164
aa 000203  162151 156147
5a 000204  000205 000000
aa 000205  000004 000000
55 000206  000175 000201
aa 000207  010142 143160		" "bcpl_cg3"
aa 000210  154137 143147
aa 000211  063000 000000
aa 000212  007114 151164		" "Literal"
aa 000213  145162 141154
5a 000214  000215 000000
aa 000215  000004 000000
55 000216  000207 000212
aa 000217  010142 143160		" "bcpl_cg2"
aa 000220  154137 143147
aa 000221  062000 000000
aa 000222  010111 163116		" "IsNumber"
aa 000223  165155 142145
aa 000224  162000 000000
5a 000225  000226 000000
aa 000226  000004 000000
55 000227  000217 000222
aa 000230  013107 145164		" "GetRegister"
aa 000231  122145 147151
aa 000232  163164 145162
5a 000233  000234 000000
aa 000234  000004 000000
55 000235  000207 000230
aa 000236  010142 143160		" "bcpl_cg5"
aa 000237  154137 143147
aa 000240  065000 000000
aa 000241  012106 157162		" "FormOpcode"
aa 000242  155117 160143
aa 000243  157144 145000
5a 000244  000245 000000
aa 000245  000004 000000
55 000246  000236 000241
aa 000247  007106 157162		" "FormTag"
aa 000250  155124 141147
5a 000251  000252 000000
aa 000252  000004 000000
55 000253  000236 000247
aa 000254  011114 157141		" "LoadIndex"
aa 000255  144111 156144
aa 000256  145170 000000
5a 000257  000260 000000
aa 000260  000004 000000
55 000261  000207 000254
aa 000262  013114 157141		" "LoadPointer"
aa 000263  144120 157151
aa 000264  156164 145162
5a 000265  000266 000000
aa 000266  000004 000000
55 000267  000207 000262
aa 000270  012105 166141		" "EvalNumber"
aa 000271  154116 165155
aa 000272  142145 162000
5a 000273  000274 000000
aa 000274  000004 000000
55 000275  000217 000270
aa 000276  014142 143160		" "bcpl_utility"
aa 000277  154137 165164
aa 000300  151154 151164
aa 000301  171000 000000
aa 000302  006116 145167		" "Newvec"
aa 000303  166145 143000
5a 000304  000305 000000
aa 000305  000004 000000
55 000306  000276 000302
aa 000307  012101 144144		" "AddLiteral"
aa 000310  114151 164145
aa 000311  162141 154000
5a 000312  000313 000000
aa 000313  000004 000000
55 000314  000217 000307
aa 000315  017106 157162		" "FormStringconst"
aa 000316  155123 164162
aa 000317  151156 147143
aa 000320  157156 163164
5a 000321  000322 000000
aa 000322  000004 000000
55 000323  000276 000315
aa 000324  007106 162145		" "Freevec"
aa 000325  145166 145143
5a 000326  000327 000000
aa 000327  000004 000000
55 000330  000276 000324
aa 000331  027114 157141		" "LoadAppropriateRegister"
aa 000332  144101 160160
aa 000333  162157 160162
aa 000334  151141 164145
aa 000335  122145 147151
aa 000336  163164 145162
5a 000337  000340 000000
aa 000340  000004 000000
55 000341  000207 000331
aa 000342  015103 154141		" "ClaimRegister"
aa 000343  151155 122145
aa 000344  147151 163164
aa 000345  145162 000000
5a 000346  000347 000000
aa 000347  000004 000000
55 000350  000217 000342
aa 000351  011123 145164		" "SetupAddr"
aa 000352  165160 101144
aa 000353  144162 000000
5a 000354  000355 000000
aa 000355  000004 000000
55 000356  000207 000351
aa 000357  005123 164157		" "Store"
aa 000360  162145 000000
5a 000361  000362 000000
aa 000362  000004 000000
55 000363  000207 000357
aa 000364  017142 143160		" "bcpl_stream_io_"
aa 000365  154137 163164
aa 000366  162145 141155
aa 000367  137151 157137
aa 000370  006106 157162		" "Format"
aa 000371  155141 164000
5a 000372  000373 000000
aa 000373  000004 000000
55 000374  000364 000370
aa 000375  011104 145146		" "DefineLab"
aa 000376  151156 145114
aa 000377  141142 000000
5a 000400  000401 000000
aa 000401  000004 000000
55 000402  000217 000375
aa 000403  013117 165164		" "OutLiterals"
aa 000404  114151 164145
aa 000405  162141 154163
5a 000406  000407 000000
aa 000407  000004 000000
55 000410  000217 000403
aa 000411  020104 151163		" "DisclaimRegister"
aa 000412  143154 141151
aa 000413  155122 145147
aa 000414  151163 164145
aa 000415  162000 000000
5a 000416  000417 000000
aa 000417  000004 000000
55 000420  000217 000411
aa 000421  014114 157141		" "LoadRegister"
aa 000422  144122 145147
aa 000423  151163 164145
aa 000424  162000 000000
5a 000425  000426 000000
aa 000426  000004 000000
55 000427  000207 000421
aa 000430  005117 165164		" "Outop"
aa 000431  157160 000000
5a 000432  000433 000000
aa 000433  000004 000000
55 000434  000236 000430
aa 000435  006117 165164		" "Outop4"
aa 000436  157160 064000
5a 000437  000440 000000
aa 000440  000004 000000
55 000441  000236 000435
aa 000442  006117 165164		" "Outop3"
aa 000443  157160 063000
5a 000444  000445 000000
aa 000445  000004 000000
55 000446  000236 000442
aa 000447  006117 165164		" "Outop2"
aa 000450  157160 062000
5a 000451  000452 000000
aa 000452  000004 000000
55 000453  000236 000447
aa 000454  007103 157155		" "Complab"
aa 000455  160154 141142
5a 000456  000457 000000
aa 000457  000004 000000
55 000460  000217 000454
aa 000461  007117 165164		" "OutData"
aa 000462  104141 164141
5a 000463  000464 000000
aa 000464  000004 000000
55 000465  000236 000461
aa 000466  005114 151163		" "List4"
aa 000467  164064 000000
5a 000470  000471 000000
aa 000471  000004 000000
55 000472  000276 000466
aa 000473  011117 165164		" "Outstring"
aa 000474  163164 162151
aa 000475  156147 000000
5a 000476  000477 000000
aa 000477  000004 000000
55 000500  000217 000473
aa 000501  015123 145143		" "SectionHeader"
aa 000502  164151 157156
aa 000503  110145 141144
aa 000504  145162 000000
5a 000505  000506 000000
aa 000506  000004 000000
55 000507  000236 000501
aa 000510  013123 164157		" "StoreString"
aa 000511  162145 123164
aa 000512  162151 156147
5a 000513  000514 000000
aa 000514  000004 000000
55 000515  000276 000510
aa 000516  013103 157156		" "Concatenate"
aa 000517  143141 164145
aa 000520  156141 164145
5a 000521  000522 000000
aa 000522  000004 000000
55 000523  000175 000516
aa 000524  011116 145170		" "Nextparam"
aa 000525  164160 141162
aa 000526  141155 000000
5a 000527  000530 000000
aa 000530  000004 000000
55 000531  000276 000524
	"	Linkage section - static variables and external links

aa 000000  000000 000000		" linkage header
0a 000001  002670 000000		" address of defs
aa 000002  000000 000000
aa 000003  000000 000000
aa 000004  000000 000000
aa 000005  000000 000000
2a 000006  000010 000114		" offset to links, total length
aa 000007  000000 000114		" obsolete length

	"	External link pairs

			L177:
3a 000010  777770 000046		" "bcpl_strings_$EqualString"
5a 000011  000204 000000
			L148:
3a 000012  777766 000046		" "bcpl_cg3$Literal"
5a 000013  000214 000000
			L146:
3a 000014  777764 000046		" "bcpl_cg2$IsNumber"
5a 000015  000225 000000
			L141:
3a 000016  777762 000046		" "bcpl_cg3$GetRegister"
5a 000017  000233 000000
			L136:
3a 000020  777760 000046		" "bcpl_cg5$FormOpcode"
5a 000021  000244 000000
			L135:
3a 000022  777756 000046		" "bcpl_cg5$FormTag"
5a 000023  000251 000000
			L134:
3a 000024  777754 000046		" "bcpl_cg3$LoadIndex"
5a 000025  000257 000000
			L121:
3a 000026  777752 000046		" "bcpl_cg3$LoadPointer"
5a 000027  000265 000000
			L110:
3a 000030  777750 000046		" "bcpl_cg2$EvalNumber"
5a 000031  000273 000000
			L107:
3a 000032  777746 000046		" "bcpl_utility$Newvec"
5a 000033  000304 000000
			L103:
3a 000034  777744 000046		" "bcpl_cg2$AddLiteral"
5a 000035  000312 000000
			L102:
3a 000036  777742 000046		" "bcpl_utility$FormStringconst"
5a 000037  000321 000000
			L98:
3a 000040  777740 000046		" "bcpl_utility$Freevec"
5a 000041  000326 000000
			L94:
3a 000042  777736 000046		" "bcpl_cg3$LoadAppropriateRegister"
5a 000043  000337 000000
			L90:
3a 000044  777734 000046		" "bcpl_cg2$ClaimRegister"
5a 000045  000346 000000
			L84:
3a 000046  777732 000046		" "bcpl_cg3$SetupAddr"
5a 000047  000354 000000
			L80:
3a 000050  777730 000046		" "bcpl_cg3$Store"
5a 000051  000361 000000
			L73:
3a 000052  777726 000046		" "bcpl_stream_io_$Format"
5a 000053  000372 000000
			L70:
3a 000054  777724 000046		" "bcpl_cg2$DefineLab"
5a 000055  000400 000000
			L66:
3a 000056  777722 000046		" "bcpl_cg2$OutLiterals"
5a 000057  000406 000000
			L56:
3a 000060  777720 000046		" "bcpl_cg2$DisclaimRegister"
5a 000061  000416 000000
			L55:
3a 000062  777716 000046		" "bcpl_cg3$LoadRegister"
5a 000063  000425 000000
			L45:
3a 000064  777714 000046		" "bcpl_cg5$Outop"
5a 000065  000432 000000
			L42:
3a 000066  777712 000046		" "bcpl_cg5$Outop4"
5a 000067  000437 000000
			L35:
3a 000070  777710 000046		" "bcpl_cg5$Outop3"
5a 000071  000444 000000
			L34:
3a 000072  777706 000046		" "bcpl_cg5$Outop2"
5a 000073  000451 000000
			L29:
3a 000074  777704 000046		" "bcpl_cg2$Complab"
5a 000075  000456 000000
			L28:
3a 000076  777702 000046		" "bcpl_cg5$OutData"
5a 000077  000463 000000
			L26:
3a 000100  777700 000046		" "bcpl_utility$List4"
5a 000101  000470 000000
			L24:
3a 000102  777676 000046		" "bcpl_cg2$Outstring"
5a 000103  000476 000000
			L23:
3a 000104  777674 000046		" "bcpl_cg5$SectionHeader"
5a 000105  000505 000000
			L22:
3a 000106  777672 000046		" "bcpl_utility$StoreString"
5a 000107  000513 000000
			L21:
3a 000110  777670 000046		" "bcpl_strings_$Concatenate"
5a 000111  000521 000000
			L19:
3a 000112  777666 000046		" "bcpl_utility$Nextparam"
5a 000113  000527 000000
	"	Symbol section header

aa 000000  000000 000001		" version number of header structure
aa 000001  163171 155142		" "symbtree"
aa 000002  164162 145145
aa 000003  000000 000003		" compiler version number
aa 000004  000000 101170		" date/time compiler modified
aa 000005  533311 032072		" 09/25/73  0959.1 mst Tue
aa 000006  000000 102333		" time of this compilation
aa 000007  434041 221433		" 01/24/75  0650.8 mst Fri
aa 000010  142143 160154		" "bcpl    "
aa 000011  040040 040040
aa 000012  000056 000035		" compiler version name - pointer, length
aa 000013  000066 000024		" user id - pointer, length
aa 000014  000073 000043		" comment string - pointer, length
aa 000015  000002 000002		" text and linkage boundaries
aa 000016  000024 000000		" source map, symbol tree root
7a 000017  000000 000175		" section header pointer, block size
aa 000020  000000 000175		" next block pointer, rel_text
aa 000021  000000 000274		" rel_def, rel_link
aa 000022  000312 000175		" rel_symbol, default truncate
aa 000023  000024 000000		" optional truncate, unused
aa 000024  000000 000001		" source files map: version number
aa 000025  000000 000006		"                   number of files
aa 000026  000104 000047		" bcpl_cg4
aa 000027  023333 611406		" last modified on
aa 000030  000000 102333		" 01/24/75  0647.2 mst Fri
aa 000031  432366 600000
aa 000032  000116 000043		" bcpl_cg_head
aa 000033  021607 540213		" last modified on
aa 000034  000000 101621		" 05/06/74  1740.6 mst Mon
aa 000035  351403 200000
aa 000036  000127 000051		" bcpl_compiler_head
aa 000037  021607 540214		" last modified on
aa 000040  000000 101621		" 05/06/74  1740.6 mst Mon
aa 000041  351403 200000
aa 000042  000142 000043		" bcpl_symbols
aa 000043  021607 540223		" last modified on
aa 000044  000000 101621		" 05/06/74  1740.8 mst Mon
aa 000045  351474 000000
aa 000046  000153 000044		" bcpl_cg_codes
aa 000047  021607 540212		" last modified on
aa 000050  000000 101621		" 05/06/74  1740.6 mst Mon
aa 000051  351402 400000
aa 000052  000164 000043		" bcpl_opcodes
aa 000053  021607 540221		" last modified on
aa 000054  000000 101621		" 05/06/74  1740.8 mst Mon
aa 000055  351474 000000
aa 000056  102103 120114		" "BCPL version 3.4, August 1973"
aa 000057  040166 145162
aa 000060  163151 157156
aa 000061  040063 056064
aa 000062  054040 101165
aa 000063  147165 163164
aa 000064  040061 071067
aa 000065  063040 040040
aa 000066  115141 162164		" "Martinson.SysMaint.a"
aa 000067  151156 163157
aa 000070  156056 123171
aa 000071  163115 141151
aa 000072  156164 056141
aa 000073  163157 165162		" "source  xref  alist  optimize  6180"
aa 000074  143145 040040
aa 000075  170162 145146
aa 000076  040040 141154
aa 000077  151163 164040
aa 000100  040157 160164
aa 000101  151155 151172
aa 000102  145040 040066
aa 000103  061070 060040
aa 000104  076062 056061		" ">2.1spec>online>mib083074>bcpl_cg4.bcpl"
aa 000105  163160 145143
aa 000106  076157 156154
aa 000107  151156 145076
aa 000110  155151 142060
aa 000111  070063 060067
aa 000112  064076 142143
aa 000113  160154 137143
aa 000114  147064 056142
aa 000115  143160 154040
aa 000116  076154 144144		" ">ldd>include>bcpl_cg_head.incl.bcpl"
aa 000117  076151 156143
aa 000120  154165 144145
aa 000121  076142 143160
aa 000122  154137 143147
aa 000123  137150 145141
aa 000124  144056 151156
aa 000125  143154 056142
aa 000126  143160 154040
aa 000127  076154 144144		" ">ldd>include>bcpl_compiler_head.incl.bcpl"
aa 000130  076151 156143
aa 000131  154165 144145
aa 000132  076142 143160
aa 000133  154137 143157
aa 000134  155160 151154
aa 000135  145162 137150
aa 000136  145141 144056
aa 000137  151156 143154
aa 000140  056142 143160
aa 000141  154040 040040
aa 000142  076154 144144		" ">ldd>include>bcpl_symbols.incl.bcpl"
aa 000143  076151 156143
aa 000144  154165 144145
aa 000145  076142 143160
aa 000146  154137 163171
aa 000147  155142 157154
aa 000150  163056 151156
aa 000151  143154 056142
aa 000152  143160 154040
aa 000153  076154 144144		" ">ldd>include>bcpl_cg_codes.incl.bcpl"
aa 000154  076151 156143
aa 000155  154165 144145
aa 000156  076142 143160
aa 000157  154137 143147
aa 000160  137143 157144
aa 000161  145163 056151
aa 000162  156143 154056
aa 000163  142143 160154
aa 000164  076154 144144		" ">ldd>include>bcpl_opcodes.incl.bcpl"
aa 000165  076151 156143
aa 000166  154165 144145
aa 000167  076142 143160
aa 000170  154137 157160
aa 000171  143157 144145
aa 000172  163056 151156
aa 000173  143154 056142
aa 000174  143160 154040
	"	Relocation information


	"	text section relocation bits

aa 000175  000000 000002		" version number of rel-bits structure
aa 000176  000000 004205		" length in bits
aa 000177  740325 000517
aa 000200  006320 012000
aa 000201  240024 002474
aa 000202  025517 005320
aa 000203  012360 106400
aa 000204  002400 002400
aa 000205  000500 002474
aa 000206  021517 004323
aa 000207  601164 000005
aa 000210  000001 200000
aa 000211  247402 350000
aa 000212  012360 146474
aa 000213  021517 040320
aa 000214  012360 146474
aa 000215  023500 000517
aa 000216  005723 601064
aa 000217  740235 170163
aa 000220  236040 647402
aa 000221  751703 232001
aa 000222  236022 647404
aa 000223  150000 247402
aa 000224  150000 012360
aa 000225  256400 051701
aa 000226  232360 156474
aa 000227  055517 005323
aa 000230  602364 740515
aa 000231  170107 200001
aa 000232  236027 647412
aa 000233  150000 012360
aa 000234  106400 000500
aa 000235  002474 021517
aa 000236  004723 601264
aa 000237  000005 000517
aa 000240  025323 601364
aa 000241  000500 012360
aa 000242  106474 033500
aa 000243  012360 126400
aa 000244  002400 000500
aa 000245  002474 021517
aa 000246  012720 002474
aa 000247  031500 000500
aa 000250  012000 002474
aa 000251  035500 000120
aa 000252  002474 023517
aa 000253  004320 000500
aa 000254  002400 050005
aa 000255  170047 236023
aa 000256  640005 000024
aa 000257  000024 000005
aa 000260  170053 200005
aa 000261  000024 000517
aa 000262  012720 002474
aa 000263  027500 012360
aa 000264  216400 050005
aa 000265  000024 002400
aa 000266  012360 646400
aa 000267  247402 551703
aa 000270  172360 136474
aa 000271  023517 013720
aa 000272  012001 236030
aa 000273  647402 300000
l	"	inkage relocation bits

aa 000274  000000 000002		" version number of rel-bits structure
aa 000275  000000 000660		" length in bits
aa 000276  100002 204652
aa 000277  465246 524652
aa 000300  465246 524652
aa 000301  465246 524652
aa 000302  465246 524652
aa 000303  465246 524652
aa 000304  465246 524652
aa 000305  465246 524652
aa 000306  465246 524652
aa 000307  465246 524652
aa 000310  465246 524652
aa 000311  465246 524652
s	"	ymbol relocation bits

aa 000312  000000 000002		" version number of rel-bits structure
aa 000313  000000 000043		" length in bits
aa 000314  740365 770666
	"	Object map

aa 004053  000000 000001		" version number of object_map structure
aa 004054  157142 152137		" "obj_map "
aa 004055  155141 160040
aa 004056  000000 002670		" text offset, length
aa 004057  002670 000532		" def offset, length
aa 004060  003422 000114		" link offset, length
aa 004061  003536 000315		" symbol offset, length
aa 004062  000000 000000		" break map offset, length
aa 004063  340000 000000		" flags: ^bound, relocatable, procedure, standard
aa 004064  004053 000000		" object map pointer, unused


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
