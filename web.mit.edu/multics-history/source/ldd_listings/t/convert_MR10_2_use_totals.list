	COMPILATION LISTING OF SEGMENT convert_MR10_2_use_totals
	Compiled by: Multics PL/I Compiler, Release 30, of February 16, 1988
	Compiled at: Honeywell Bull, Phoenix AZ, SysM
	Compiled on: 08/29/88  0928.7 mst Mon
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1988                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        6*        *                                                         *
        7*        *********************************************************** */
        8 
        9 
       10 /****^  HISTORY COMMENTS:
       11*  1) change(88-04-28,GDixon), approve(88-08-15,MCR7969),
       12*     audit(88-08-03,Lippard), install(88-08-29,MR12.2-1093):
       13*      A) Use correct array extents in do-group limits. (phx20016)
       14*                                                   END HISTORY COMMENTS */
       15 
       16 
       17 /* convert_MR10_2_use_totals.pl1 */
       18 /* format: style2 */
       19 
       20 convert_MR10_2_use_totals:
       21      procedure options (variable);
       22 
       23 	declare cv_dec_check_	 entry (character (*), fixed binary (35)) returns (fixed binary (35));
       24 	declare expand_pathname_$add_suffix
       25 				 entry (character (*), character (*), character (*), character (*),
       26 				 fixed binary (35));
       27 	declare initiate_file_	 entry (character (*), character (*), bit (*), pointer, fixed binary (24),
       28 				 fixed binary (35));
       29 	declare terminate_file_	 entry (pointer, fixed binary (24), bit (*), fixed binary (35));
       30 	declare get_temp_segment_	 entry (character (*), pointer, fixed binary (35));
       31 	declare release_temp_segment_	 entry (character (*), pointer, fixed binary (35));
       32 	declare com_err_		 entry () options (variable);
       33 	declare com_err_$suppress_name entry () options (variable);
       34 	declare cu_$arg_count	 entry (fixed bin, fixed bin (35));
       35 	declare cu_$arg_ptr		 entry (fixed bin, ptr, fixed bin (21), fixed bin (35));
       36 	declare pathname_		 entry (character (*), character (*)) returns (character (168));
       37 
       38 	declare argp		 pointer;
       39 	declare argl		 fixed bin (21);
       40 	declare argument		 char (argl) based (argp);
       41 	declare arg_count		 fixed bin;
       42 	declare code		 fixed bin (35);
       43 	declare (dayx, qhx, sh)	 fixed bin;
       44 	declare dir		 char (168);
       45 	declare entryname		 char (32);
       46 	declare np		 pointer;		/* pointer to temp seg */
       47 	declare 1 new		 aligned like use_totals based (np);
       48 
       49 	declare (addr, hbound, min, null, size)
       50 				 builtin;
       51 	declare cleanup		 condition;
       52 	declare ME		 char (32) init ("convert_MR10_2_use_totals") int static options (constant);
       53 
       54 
       55 	call cu_$arg_count (arg_count, code);
       56 	if code ^= 0
       57 	then do;
       58 		call com_err_ (code, ME);
       59 		return;
       60 	     end;
       61 
       62 	if arg_count ^= 1
       63 	then do;
       64 		call com_err_$suppress_name (0, ME, "Usage:  convert_MR10_2_use_totals USE_TOTALS_PATHNAME");
       65 		return;
       66 	     end;
       67 
       68 	np, use_totals_ptr = null ();
       69 	on cleanup
       70 	     begin;
       71 		if use_totals_ptr ^= null ()
       72 		then call terminate_file_ (use_totals_ptr, (0), TERM_FILE_TERM, (0));
       73 		if np ^= null ()
       74 		then call release_temp_segment_ (ME, np, (0));
       75 	     end;
       76 
       77 	call cu_$arg_ptr (1, argp, argl, (0));
       78 	call expand_pathname_$add_suffix (argument, "use_totals", dir, entryname, code);
       79 	if code ^= 0
       80 	then do;
       81 		call com_err_ (code, ME, """^a"".", argument);
       82 		return;
       83 	     end;
       84 	call initiate_file_ (dir, entryname, RW_ACCESS, use_totals_ptr, (0), code);
       85 	if code ^= 0
       86 	then do;
       87 		call com_err_ (code, ME, "^a", pathname_ (dir, entryname));
       88 		return;
       89 	     end;
       90 
       91 	call get_temp_segment_ (ME, np, (0));
       92 
       93 	new.meters = v2_use_totals.meters;		/* aggregately */
       94 	new.version = USE_TOTALS_VERSION_3;
       95 	new.b_and_w.origin = v2_use_totals.b_and_w.origin;
       96 	new.b_and_w.max_day_log = v2_use_totals.b_and_w.max_day_log;
       97 	new.b_and_w.max_qhour = v2_use_totals.b_and_w.max_qhour;
       98 	do dayx = 1 to min (v2_use_totals.max_day_log, hbound (v2_use_totals.daylog, 1));
       99 	     do qhx = 1 to min (v2_use_totals.max_qhour, hbound (v2_use_totals.daylog.qh, 1));
      100 		begin;
      101 		     declare 1 old_qh	      aligned like v2_use_totals.daylog.qh based (old_qhp);
      102 		     declare 1 new_qh	      aligned like use_totals.daylog.qh based (new_qhp);
      103 		     declare (old_qhp, new_qhp)     pointer;
      104 		     old_qhp = addr (v2_use_totals.daylog (dayx).qh (qhx));
      105 		     new_qhp = addr (new.daylog (dayx).qh (qhx));
      106 		     new_qh.time = old_qh.time;
      107 		     new_qh.sysid = old_qh.sysid;
      108 		     if old_qh.erfno = "shutdown"
      109 		     then new_qh.shutdown = "1"b;
      110 		     else new_qh.dump_number = cv_dec_check_ ((old_qh.erfno), code);
      111 		     if code ^= 0
      112 		     then new_qh.dump_number = 0;
      113 		     new_qh.cpu = old_qh.cpu;
      114 		     new_qh.kmem = old_qh.kmem;
      115 		     new_qh.nunits = old_qh.nunits;
      116 		     new_qh.starttime = old_qh.starttime;
      117 		     new_qh.crashtime = old_qh.crashtime;
      118 		end;
      119 	     end;
      120 	end;
      121 
      122 	new.bins.ntypes = v2_use_totals.bins.ntypes;
      123 	new.bins.n_select = v2_use_totals.bins.n_select;
      124 	do sh = 1 to min (hbound (new.bin_data, 1), new.bins.n_select);
      125 	     new.bin_data (sh).select_proj = v2_use_totals.select_proj (sh);
      126 	     new.bin_data (sh).select_ut = v2_use_totals.select_ut (sh);
      127 	end;
      128 	do sh = 1 to min (hbound (new.ut, 1), new.bins.ntypes);
      129 	     new.bins.ut (sh) = v2_use_totals.bins.ut (sh);
      130 	end;
      131 	use_totals = new;				/* copy back */
      132 	call terminate_file_ (use_totals_ptr, 36 * size (use_totals), TERM_FILE_TRUNC_BC, (0));
      133 	call release_temp_segment_ (ME, np, (0));
      134 	return;
      135 
      136 
  1     1 /* BEGIN INCLUDE FILE ... use_totals.incl.pl1 */
  1     2 /* format: style3 */
  1     3 
  1     4 /* Modified Feb 1980 by M. B. Armstrong to implement multiple rate structures. (UNCA)
  1     5*   Modified May 1980 by R. McDonald to include printer page charge, replaces  cpu time in iod. (UNCA)
  1     6*   Modified July 1981 by C. Hornig to eliminate rs_number and master_proj from bin,
  1     7*   -		split it into sub-structures for convenience in conversion,
  1     8*   -		and make version a character string.
  1     9*   Modified August 1981 by T. Casey to put back rs_number in bin.
  1    10*   Modified 1984-08-31 BIM for half-year billing cycles, which is all
  1    11*	  that will fit in a segment.
  1    12**/
  1    13 
  1    14 dcl	use_totals_ptr	pointer;
  1    15 dcl	1 use_totals	based (use_totals_ptr) aligned,
  1    16 	  2 meters,
  1    17 	    3 generated	fixed bin (71),		/* Time usage data generated. */
  1    18 	    3 period_begin	fixed bin (71),		/* Earliest time covered */
  1    19 	    3 period_end	fixed bin (71),		/* Latest time */
  1    20 	    3 disk_available
  1    21 			fixed bin (35),		/* Total disk capacity in MULT partition. */
  1    22 	    3 disk_left	fixed bin (35),		/* Total disk unused.. */
  1    23 	    3 version	char (8),			/* revision of this include file */
  1    24 	    3 pad1	(6) fixed bin,		/* Gross system statistics, determined from answering service meters. */
  1    25 	    3 uptime	fixed bin (71),		/* Time system has been on the air. */
  1    26 	    3 sys_starts	fixed bin,		/* Number of bootloads */
  1    27 	    3 sys_crash	fixed bin,		/* Number of crashes */
  1    28 	    3 cpu_avail	fixed bin (71),		/* CPU time available. >= uptime by two-cpu time */
  1    29 	    3 idle	fixed bin (71),		/* Total idle for all causes */
  1    30 	    3 initializer	fixed bin (71),		/* Initializer usage */
  1    31 	    3 total_cpu	fixed bin (71),		/* Total VIRTUAL cpu from bins - so get overhead */
  1    32 	    3 zidle	fixed bin (71),		/* Total zero idle. */
  1    33 	    3 mpidle	fixed bin (71),		/* Total MP idle */
  1    34 	    3 pad2	(6) fixed bin (71),		/* variables used while reading answering service meters */
  1    35 	    3 zidle_since_boot
  1    36 			fixed bin (71),		/* Zero idle since boot */
  1    37 	    3 mpidle_since_boot
  1    38 			fixed bin (71),		/* MP idle since boot */
  1    39 	    3 time_last_boot
  1    40 			fixed bin (71),		/* Time of last bootload */
  1    41 	    3 time_last_sample
  1    42 			fixed bin (71),		/* Time of last 15-minute sample */
  1    43 	    3 uptime_since_boot
  1    44 			fixed bin (71),		/* Time system on air since last boot */
  1    45 	    3 cpu_avail_since_boot
  1    46 			fixed bin (71),		/* CPU available since boot */
  1    47 	    3 idle_since_boot
  1    48 			fixed bin (71),		/* Idle time since boot */
  1    49 	    3 last_sysid	char (8),			/* Current system ID */
  1    50 	    3 n_users_on	fixed bin,		/* Users on at last sample */
  1    51 	    3 n_stat_gaps	fixed bin,		/* Number of times we missed getting all data */
  1    52 						/* Statistics by day, for black and white chart. */
  1    53 	  2 b_and_w,
  1    54 	    3 origin	fixed bin (71),		/* Base time for slot 1 */
  1    55 	    3 max_day_log	fixed bin,		/* Highest used day. */
  1    56 	    3 max_qhour	fixed bin,		/* Highest quarter in highest day */
  1    57 	    3 daylog	(190),			/* array of days. */
  1    58 	      4 qh	(96),			/* Quarter-hour within the day. */
  1    59 	        5 time	fixed bin (71),		/* Time of sample. */
  1    60 	        5 sysid	char (8),			/* System ID */
  1    61 	        5 dump_number
  1    62 			fixed (18) unsigned unaligned,
  1    63 	        5 flags	unaligned,
  1    64 		6 shutdown
  1    65 			bit (1),
  1    66 		6 pad	bit (17),
  1    67 	        5 cpu	fixed bin (5) unsigned unaligned,
  1    68 	        5 nunits	fixed bin (13) unsigned unaligned,
  1    69 						/* Number of load units */
  1    70 	        5 kmem	fixed bin (18) unsigned unaligned,
  1    71 	        5 starttime fixed bin (71),		/* Boot time */
  1    72 	        5 crashtime fixed bin (71),		/* Time of crash */
  1    73 /**** User-classification info, loaded once a month. defines usage bins. bin 1 is always "other" */
  1    74 	  2 bins,
  1    75 	    3 ntypes	fixed bin,		/* Number of valid bins */
  1    76 	    3 n_select	fixed bin,		/* Number of selectors */
  1    77 	    3 bin_data	(3258) aligned,
  1    78 	      4 select_proj char (12) aligned,		/* Project ID - same number as in sat */
  1    79 	      4 select_ut	fixed bin,		/* Bin number for the project */
  1    80 						/* Usage bins for each usage type.  Determined from summarizing the PDT's.
  1    81*   *  Note - bin "use_totals.ut (use_totals.ntypes+1)" is a zeroed bin which can be used to represent non-existent bins.
  1    82*   *         e.g. Last month's use_totals seg has a bin that has been removed from this month's use_totals seg.
  1    83**/
  1    84 	    3 ut		(301),			/* array usage by project type */
  1    85 	      4 utype	char (24),		/* Label for usage bin */
  1    86 	      4 dollar_charge
  1    87 			float bin,		/* total dollars spent this month */
  1    88 	      4 logins	fixed bin,		/* number of logins */
  1    89 	      4 crashes	fixed bin,		/* sessions abnormally terminated */
  1    90 	      4 nproj	fixed bin,		/* projects in this class */
  1    91 	      4 nusers	fixed bin,		/* users in this class */
  1    92 	      4 disk_psec	fixed bin (71),		/* Total page-seconds */
  1    93 	      4 disk_quota	fixed bin (35),		/* Total quota */
  1    94 	      4 disk_usage	fixed bin (35),		/* Disk occupancy */
  1    95 	      4 misc	float bin,		/* Miscellaneous charges */
  1    96 	      4 flag	char (4),			/* paying categories = "$" */
  1    97 	      4 flag1	char (4),			/* used to control reporting of categories */
  1    98 	      4 pad1a	(3) fixed bin (35),
  1    99 	      4 rs_number	fixed bin,		/* rate structure number for all projects in this bin */
  1   100 	      4 pad1b	(14) fixed bin (35),
  1   101 	      4 interactive (0:7),			/* interactive use, shifts 0-7 */
  1   102 	        5 charge	float bin,		/* total dollar charge this shift */
  1   103 	        5 pad1	fixed bin,
  1   104 	        5 cpu	fixed bin (71),		/* cpu usage in microseconds */
  1   105 	        5 core	fixed bin (71),		/* core demand in page-microseconds */
  1   106 	        5 connect	fixed bin (71),		/* total console time in microseconds */
  1   107 	        5 io_ops	fixed bin (71),		/* total terminal i/o ops */
  1   108 	      4 absentee	(4),			/* absentee use, queues 1-4 */
  1   109 	        5 charge	float bin,		/* dollar charge this queue */
  1   110 	        5 jobs	fixed bin,		/* number of jobs submitted */
  1   111 	        5 cpu	fixed bin (71),		/* total cpu time in microseconds */
  1   112 	        5 memory	fixed bin (71),		/* total memory usage in mu */
  1   113 	      4 iod	(4),			/* io daemon use, queues 1-4 */
  1   114 	        5 charge	float bin,		/* dollar charge this queue */
  1   115 	        5 pieces	fixed bin,		/* pieces of output requested */
  1   116 	        5 pad2	fixed bin,
  1   117 	        5 pages	fixed bin,		/* number of pages output */
  1   118 	        5 lines	fixed bin (71),		/* total record count of output */
  1   119 	      4 devices	(16) float bin;		/* device charges */
  1   120 
  1   121 dcl	USE_TOTALS_VERSION_2
  1   122 			char (8) static options (constant) initial ("usetot_2");
  1   123 dcl	USE_TOTALS_VERSION_3
  1   124 			char (8) static options (constant) initial ("usetot_3");
  1   125 
  1   126 /* END INCLUDE FILE ... use_totals.incl.pl1 */
      137 
  2     1 /* BEGIN INCLUDE FILE ... access_mode_values.incl.pl1
  2     2*
  2     3*   Values for the "access mode" argument so often used in hardcore
  2     4*   James R. Davis 26 Jan 81  MCR 4844
  2     5*   Added constants for SM access 4/28/82 Jay Pattin
  2     6*   Added text strings 03/19/85 Chris Jones
  2     7**/
  2     8 
  2     9 
  2    10 /* format: style4,delnl,insnl,indattr,ifthen,dclind10 */
  2    11 dcl	(
  2    12 	N_ACCESS		   init ("000"b),
  2    13 	R_ACCESS		   init ("100"b),
  2    14 	E_ACCESS		   init ("010"b),
  2    15 	W_ACCESS		   init ("001"b),
  2    16 	RE_ACCESS		   init ("110"b),
  2    17 	REW_ACCESS	   init ("111"b),
  2    18 	RW_ACCESS		   init ("101"b),
  2    19 	S_ACCESS		   init ("100"b),
  2    20 	M_ACCESS		   init ("010"b),
  2    21 	A_ACCESS		   init ("001"b),
  2    22 	SA_ACCESS		   init ("101"b),
  2    23 	SM_ACCESS		   init ("110"b),
  2    24 	SMA_ACCESS	   init ("111"b)
  2    25 	)		   bit (3) internal static options (constant);
  2    26 
  2    27 /* The following arrays are meant to be accessed by doing either 1) bin (bit_value) or
  2    28*   2) divide (bin_value, 2) to come up with an index into the array. */
  2    29 
  2    30 dcl	SEG_ACCESS_MODE_NAMES  (0:7) init ("null", "W", "E", "EW", "R", "RW", "RE", "REW") char (4) internal
  2    31 			   static options (constant);
  2    32 
  2    33 dcl	DIR_ACCESS_MODE_NAMES  (0:7) init ("null", "A", "M", "MA", "S", "SA", "SM", "SMA") char (4) internal
  2    34 			   static options (constant);
  2    35 
  2    36 dcl	(
  2    37 	N_ACCESS_BIN	   init (00000b),
  2    38 	R_ACCESS_BIN	   init (01000b),
  2    39 	E_ACCESS_BIN	   init (00100b),
  2    40 	W_ACCESS_BIN	   init (00010b),
  2    41 	RW_ACCESS_BIN	   init (01010b),
  2    42 	RE_ACCESS_BIN	   init (01100b),
  2    43 	REW_ACCESS_BIN	   init (01110b),
  2    44 	S_ACCESS_BIN	   init (01000b),
  2    45 	M_ACCESS_BIN	   init (00010b),
  2    46 	A_ACCESS_BIN	   init (00001b),
  2    47 	SA_ACCESS_BIN	   init (01001b),
  2    48 	SM_ACCESS_BIN	   init (01010b),
  2    49 	SMA_ACCESS_BIN	   init (01011b)
  2    50 	)		   fixed bin (5) internal static options (constant);
  2    51 
  2    52 /* END INCLUDE FILE ... access_mode_values.incl.pl1 */
      138 
  3     1 /* BEGIN INCLUDE FILE ... terminate_file.incl.pl1 */
  3     2 /* format: style2,^inddcls,idind32 */
  3     3 
  3     4 declare 1 terminate_file_switches	based,
  3     5 	2 truncate		bit (1) unaligned,
  3     6 	2 set_bc			bit (1) unaligned,
  3     7 	2 terminate		bit (1) unaligned,
  3     8 	2 force_write		bit (1) unaligned,
  3     9 	2 delete			bit (1) unaligned;
  3    10 
  3    11 declare TERM_FILE_TRUNC		bit (1) internal static options (constant) initial ("1"b);
  3    12 declare TERM_FILE_BC		bit (2) internal static options (constant) initial ("01"b);
  3    13 declare TERM_FILE_TRUNC_BC		bit (2) internal static options (constant) initial ("11"b);
  3    14 declare TERM_FILE_TERM		bit (3) internal static options (constant) initial ("001"b);
  3    15 declare TERM_FILE_TRUNC_BC_TERM	bit (3) internal static options (constant) initial ("111"b);
  3    16 declare TERM_FILE_FORCE_WRITE		bit (4) internal static options (constant) initial ("0001"b);
  3    17 declare TERM_FILE_DELETE		bit (5) internal static options (constant) initial ("00001"b);
  3    18 
  3    19 /* END INCLUDE FILE ... terminate_file.incl.pl1 */
      139 
      140 
      141 	dcl     1 v2_use_totals	 based (use_totals_ptr) aligned,
      142 		2 meters,
      143 		  3 generated	 fixed bin (71),	/* Time usage data generated. */
      144 		  3 period_begin	 fixed bin (71),	/* Earliest time covered */
      145 		  3 period_end	 fixed bin (71),	/* Latest time */
      146 		  3 disk_available	 fixed bin (35),	/* Total disk capacity in MULT partition. */
      147 		  3 disk_left	 fixed bin (35),	/* Total disk unused in MULT partition. */
      148 		  3 version	 char (8),	/* revision of this include file */
      149 		  3 pad1		 (6) fixed bin,	/* Gross system statistics, determined from answering service meters. */
      150 		  3 uptime	 fixed bin (71),	/* Time system has been on the air. */
      151 		  3 sys_starts	 fixed bin,	/* Number of bootloads */
      152 		  3 sys_crash	 fixed bin,	/* Number of crashes */
      153 		  3 cpu_avail	 fixed bin (71),	/* CPU time available. >= uptime by two-cpu time */
      154 		  3 idle		 fixed bin (71),	/* Total idle for all causes */
      155 		  3 initializer	 fixed bin (71),	/* Initializer usage */
      156 		  3 total_cpu	 fixed bin (71),	/* Total VIRTUAL cpu from bins - so get overhead */
      157 		  3 zidle		 fixed bin (71),	/* Total zero idle. */
      158 		  3 mpidle	 fixed bin (71),	/* Total MP idle */
      159 		  3 pad2		 (6) fixed bin (71),/* variables used while reading answering service meters */
      160 		  3 zidle_since_boot fixed bin (71),	/* Zero idle since boot */
      161 		  3 mpidle_since_boot
      162 				 fixed bin (71),	/* MP idle since boot */
      163 		  3 time_last_boot	 fixed bin (71),	/* Time of last bootload */
      164 		  3 time_last_sample fixed bin (71),	/* Time of last 15-minute sample */
      165 		  3 uptime_since_boot
      166 				 fixed bin (71),	/* Time system on air since last boot */
      167 		  3 cpu_avail_since_boot
      168 				 fixed bin (71),	/* CPU available since boot */
      169 		  3 idle_since_boot	 fixed bin (71),	/* Idle time since boot */
      170 		  3 last_sysid	 char (8),	/* Current system ID */
      171 		  3 n_users_on	 fixed bin,	/* Users on at last sample */
      172 		  3 n_stat_gaps	 fixed bin,	/* Number of times we missed getting all data */
      173 						/* Statistics by day, for black and white chart. */
      174 		2 b_and_w,
      175 		  3 origin	 fixed bin (71),	/* Base time for slot 1 */
      176 		  3 max_day_log	 fixed bin,	/* Highest used day. */
      177 		  3 max_qhour	 fixed bin,	/* Highest quarter in highest day */
      178 		  3 daylog	 (40),		/* array of days. */
      179 		    4 qh		 (96),		/* Quarter-hour within the day. */
      180 		      5 time	 fixed bin (71),	/* Time of sample. */
      181 		      5 sysid	 char (8),	/* System ID */
      182 		      5 erfno	 char (8),	/* If crash occurred, ERF no  */
      183 		      5 cpu	 fixed bin (5) unal,/* Number of CPU */
      184 		      5 pad1	 fixed bin (11) unal,
      185 		      5 kmem	 fixed bin (17) unal,
      186 						/* Number of K of core */
      187 		      5 kbulk	 fixed bin (17) unal,
      188 						/* Number fo K of bulk */
      189 		      5 nunits	 fixed bin (17) unal,
      190 						/* Number of load units */
      191 		      5 starttime	 fixed bin (71),	/* Boot time */
      192 		      5 crashtime	 fixed bin (71),	/* Time of crash */
      193 		      5 pad2	 (4) fixed bin,	/* User-classification info, loaded once a month. defines usage bins. bin 1 is always "other" */
      194 		2 bins,
      195 		  3 ntypes	 fixed bin,	/* Number of valid bins */
      196 		  3 n_select	 fixed bin,	/* Number of selectors */
      197 		  3 select_proj	 (3258) char (12) aligned,
      198 						/* Project ID - same number as in sat */
      199 		  3 select_ut	 (3258) fixed bin,	/* Bin number for the project */
      200 		  3 ut		 (301),		/* array usage by project type */
      201 		    4 utype	 char (24),	/* Label for usage bin */
      202 		    4 dollar_charge	 float bin,	/* total dollars spent this month */
      203 		    4 logins	 fixed bin,	/* number of logins */
      204 		    4 crashes	 fixed bin,	/* sessions abnormally terminated */
      205 		    4 nproj	 fixed bin,	/* projects in this class */
      206 		    4 nusers	 fixed bin,	/* users in this class */
      207 		    4 disk_psec	 fixed bin (71),	/* Total page-seconds */
      208 		    4 disk_quota	 fixed bin (35),	/* Total quota */
      209 		    4 disk_usage	 fixed bin (35),	/* Disk occupancy */
      210 		    4 misc	 float bin,	/* Miscellaneous charges */
      211 		    4 flag	 char (4),	/* paying catagories = "$" */
      212 		    4 flag1	 char (4),	/* used to control reporting of catagories */
      213 		    4 pad1a	 (3) fixed bin (35),
      214 		    4 rs_number	 fixed bin,	/* rate structure number for all projects in this bin */
      215 		    4 pad1b	 (14) fixed bin (35),
      216 		    4 interactive	 (0:7),		/* interactive use, shifts 0-7 */
      217 		      5 charge	 float bin,	/* total dollar charge this shift */
      218 		      5 pad1	 fixed bin,
      219 		      5 cpu	 fixed bin (71),	/* cpu usage in microseconds */
      220 		      5 core	 fixed bin (71),	/* core demand in page-microseconds */
      221 		      5 connect	 fixed bin (71),	/* total console time in microseconds */
      222 		      5 io_ops	 fixed bin (71),	/* total terminal i/o ops */
      223 		    4 absentee	 (4),		/* absentee use, queues 1-4 */
      224 		      5 charge	 float bin,	/* dollar charge this queue */
      225 		      5 jobs	 fixed bin,	/* number of jobs submitted */
      226 		      5 cpu	 fixed bin (71),	/* total cpu time in microseconds */
      227 		      5 memory	 fixed bin (71),	/* total memory usage in mu */
      228 		    4 iod		 (4),		/* io daemon use, queues 1-4 */
      229 		      5 charge	 float bin,	/* dollar charge this queue */
      230 		      5 pieces	 fixed bin,	/* pieces of output requested */
      231 		      5 pad2	 fixed bin,
      232 		      5 pages	 fixed bin,	/* number of pages output */
      233 		      5 lines	 fixed bin (71),	/* total record count of output */
      234 		    4 devices	 (16) float bin;	/* device charges */
      235 
      236 
      237 
      238 
      239      end convert_MR10_2_use_totals;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    08/29/88  0858.7  convert_MR10_2_use_totals.pl1     >spec>install>1093>convert_MR10_2_use_totals.pl1
137          1    12/07/84  1102.2  use_totals.incl.pl1               >ldd>include>use_totals.incl.pl1
138          2    04/11/85  1452.6  access_mode_values.incl.pl1       >ldd>include>access_mode_values.incl.pl1
139          3    04/06/83  1239.4  terminate_file.incl.pl1           >ldd>include>terminate_file.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
ME                              000006 constant        char(32)                 initial packed unaligned dcl 52 set ref 58* 64* 73*
                                                                                  81* 87* 91* 133*
RW_ACCESS                       000002 constant        bit(3)                   initial packed unaligned dcl 2-11 set ref 84*
TERM_FILE_TERM                  000000 constant        bit(3)                   initial packed unaligned dcl 3-14 set ref 71*
TERM_FILE_TRUNC_BC              000001 constant        bit(2)                   initial packed unaligned dcl 3-13 set ref 132*
USE_TOTALS_VERSION_3            000004 constant        char(8)                  initial packed unaligned dcl 1-123 ref 94
addr                                                   builtin function         dcl 49 ref 104 105
arg_count                       000103 automatic       fixed bin(17,0)          dcl 41 set ref 55* 62
argl                            000102 automatic       fixed bin(21,0)          dcl 39 set ref 77* 78 78 81 81
argp                            000100 automatic       pointer                  dcl 38 set ref 77* 78 81
argument                               based           char                     packed unaligned dcl 40 set ref 78* 81*
b_and_w                  76            based           structure                level 2 in structure "v2_use_totals" dcl 141
                                                                                  in procedure "convert_MR10_2_use_totals"
b_and_w                  76            based           structure                level 2 in structure "new" dcl 47 in procedure
                                                                                  "convert_MR10_2_use_totals"
b_and_w                  76            based           structure                level 2 in structure "use_totals" dcl 1-15
                                                                                  in procedure "convert_MR10_2_use_totals"
bin_data             544304            based           structure                array level 3 dcl 47 set ref 124
bins                 170102            based           structure                level 2 in structure "v2_use_totals" dcl 141
                                                                                  in procedure "convert_MR10_2_use_totals"
bins                 544302            based           structure                level 2 in structure "new" dcl 47 in procedure
                                                                                  "convert_MR10_2_use_totals"
cleanup                         000174 stack reference condition                dcl 51 ref 69
code                            000104 automatic       fixed bin(35,0)          dcl 42 set ref 55* 56 58* 78* 79 81* 84* 85 87* 110*
                                                                                  111
com_err_                        000024 constant        entry                    external dcl 32 ref 58 81 87
com_err_$suppress_name          000026 constant        entry                    external dcl 33 ref 64
cpu                       6            based           fixed bin(5,0)           level 2 in structure "old_qh" packed packed
                                                                                  unaligned dcl 101 in begin block on line 100 ref
                                                                                  113
cpu                       5            based           fixed bin(5,0)           level 2 in structure "new_qh" packed packed unsigned
                                                                                  unaligned dcl 102 in begin block on line 100 set
                                                                                  ref 113*
crashtime                10            based           fixed bin(71,0)          level 2 in structure "new_qh" dcl 102
                                                                                  in begin block on line 100 set ref 117*
crashtime                12            based           fixed bin(71,0)          level 2 in structure "old_qh" dcl 101
                                                                                  in begin block on line 100 ref 117
cu_$arg_count                   000030 constant        entry                    external dcl 34 ref 55
cu_$arg_ptr                     000032 constant        entry                    external dcl 35 ref 77
cv_dec_check_                   000010 constant        entry                    external dcl 23 ref 110
daylog                  102            based           structure                array level 3 in structure "v2_use_totals" dcl 141
                                                                                  in procedure "convert_MR10_2_use_totals" set ref
                                                                                  98
daylog                  102            based           structure                array level 3 in structure "use_totals" dcl 1-15
                                                                                  in procedure "convert_MR10_2_use_totals"
daylog                  102            based           structure                array level 3 in structure "new" dcl 47 in procedure
                                                                                  "convert_MR10_2_use_totals"
dayx                            000105 automatic       fixed bin(17,0)          dcl 43 set ref 98* 104 105
dir                             000110 automatic       char(168)                packed unaligned dcl 44 set ref 78* 84* 87* 87*
dump_number               4            based           fixed bin(18,0)          level 2 packed packed unsigned unaligned dcl 102 set
                                                                                  ref 110* 111*
entryname                       000162 automatic       char(32)                 packed unaligned dcl 45 set ref 78* 84* 87* 87*
erfno                     4            based           char(8)                  level 2 dcl 101 ref 108 110
expand_pathname_$add_suffix     000012 constant        entry                    external dcl 24 ref 78
flags                     4(18)        based           structure                level 2 packed packed unaligned dcl 102
get_temp_segment_               000020 constant        entry                    external dcl 30 ref 91
hbound                                                 builtin function         dcl 49 ref 98 99 124 128
initiate_file_                  000014 constant        entry                    external dcl 27 ref 84
kmem                      6(18)        based           fixed bin(17,0)          level 2 in structure "old_qh" packed packed
                                                                                  unaligned dcl 101 in begin block on line 100 ref
                                                                                  114
kmem                      5(18)        based           fixed bin(18,0)          level 2 in structure "new_qh" packed packed unsigned
                                                                                  unaligned dcl 102 in begin block on line 100 set
                                                                                  ref 114*
max_day_log             100            based           fixed bin(17,0)          level 3 in structure "v2_use_totals" dcl 141
                                                                                  in procedure "convert_MR10_2_use_totals" ref 96 98
max_day_log             100            based           fixed bin(17,0)          level 3 in structure "new" dcl 47 in procedure
                                                                                  "convert_MR10_2_use_totals" set ref 96*
max_qhour               101            based           fixed bin(17,0)          level 3 in structure "v2_use_totals" dcl 141
                                                                                  in procedure "convert_MR10_2_use_totals" ref 97 99
max_qhour               101            based           fixed bin(17,0)          level 3 in structure "new" dcl 47 in procedure
                                                                                  "convert_MR10_2_use_totals" set ref 97*
meters                                 based           structure                level 2 in structure "v2_use_totals" dcl 141
                                                                                  in procedure "convert_MR10_2_use_totals" ref 93
meters                                 based           structure                level 2 in structure "new" dcl 47 in procedure
                                                                                  "convert_MR10_2_use_totals" set ref 93*
min                                                    builtin function         dcl 49 ref 98 99 124 128
n_select             544303            based           fixed bin(17,0)          level 3 in structure "new" dcl 47 in procedure
                                                                                  "convert_MR10_2_use_totals" set ref 123* 124
n_select             170103            based           fixed bin(17,0)          level 3 in structure "v2_use_totals" dcl 141
                                                                                  in procedure "convert_MR10_2_use_totals" ref 123
new                                    based           structure                level 1 dcl 47 set ref 131
new_qh                                 based           structure                level 1 dcl 102
new_qhp                         000212 automatic       pointer                  dcl 103 set ref 105* 106 107 108 110 111 113 114 115
                                                                                  116 117
np                              000172 automatic       pointer                  dcl 46 set ref 68* 73 73* 91* 93 94 95 96 97 105 122
                                                                                  123 124 124 125 126 128 128 129 131 133*
ntypes               544302            based           fixed bin(17,0)          level 3 in structure "new" dcl 47 in procedure
                                                                                  "convert_MR10_2_use_totals" set ref 122* 128
ntypes               170102            based           fixed bin(17,0)          level 3 in structure "v2_use_totals" dcl 141
                                                                                  in procedure "convert_MR10_2_use_totals" ref 122
null                                                   builtin function         dcl 49 ref 68 71 73
nunits                    7(18)        based           fixed bin(17,0)          level 2 in structure "old_qh" packed packed
                                                                                  unaligned dcl 101 in begin block on line 100 ref
                                                                                  115
nunits                    5(05)        based           fixed bin(13,0)          level 2 in structure "new_qh" packed packed unsigned
                                                                                  unaligned dcl 102 in begin block on line 100 set
                                                                                  ref 115*
old_qh                                 based           structure                level 1 dcl 101
old_qhp                         000210 automatic       pointer                  dcl 103 set ref 104* 106 107 108 110 113 114 115 116
                                                                                  117
origin                   76            based           fixed bin(71,0)          level 3 in structure "v2_use_totals" dcl 141
                                                                                  in procedure "convert_MR10_2_use_totals" ref 95
origin                   76            based           fixed bin(71,0)          level 3 in structure "new" dcl 47 in procedure
                                                                                  "convert_MR10_2_use_totals" set ref 95*
pathname_                       000034 constant        entry                    external dcl 36 ref 87 87
qh                      102            based           structure                array level 4 in structure "use_totals" dcl 1-15
                                                                                  in procedure "convert_MR10_2_use_totals"
qh                      102            based           structure                array level 4 in structure "v2_use_totals" dcl 141
                                                                                  in procedure "convert_MR10_2_use_totals" set ref
                                                                                  99 104
qh                      102            based           structure                array level 4 in structure "new" dcl 47 in procedure
                                                                                  "convert_MR10_2_use_totals" set ref 105
qhx                             000106 automatic       fixed bin(17,0)          dcl 43 set ref 99* 104 105
release_temp_segment_           000022 constant        entry                    external dcl 31 ref 73 133
select_proj          544304            based           char(12)                 array level 4 in structure "new" dcl 47 in procedure
                                                                                  "convert_MR10_2_use_totals" set ref 125*
select_proj          170104            based           char(12)                 array level 3 in structure "v2_use_totals" dcl 141
                                                                                  in procedure "convert_MR10_2_use_totals" ref 125
select_ut            544307            based           fixed bin(17,0)          array level 4 in structure "new" dcl 47 in procedure
                                                                                  "convert_MR10_2_use_totals" set ref 126*
select_ut            213162            based           fixed bin(17,0)          array level 3 in structure "v2_use_totals" dcl 141
                                                                                  in procedure "convert_MR10_2_use_totals" ref 126
sh                              000107 automatic       fixed bin(17,0)          dcl 43 set ref 124* 125 125 126 126* 128* 129 129*
shutdown                  4(18)        based           bit(1)                   level 3 packed packed unaligned dcl 102 set ref 108*
size                                                   builtin function         dcl 49 ref 132
starttime                 6            based           fixed bin(71,0)          level 2 in structure "new_qh" dcl 102
                                                                                  in begin block on line 100 set ref 116*
starttime                10            based           fixed bin(71,0)          level 2 in structure "old_qh" dcl 101
                                                                                  in begin block on line 100 ref 116
sysid                     2            based           char(8)                  level 2 in structure "new_qh" dcl 102
                                                                                  in begin block on line 100 set ref 107*
sysid                     2            based           char(8)                  level 2 in structure "old_qh" dcl 101
                                                                                  in begin block on line 100 ref 107
terminate_file_                 000016 constant        entry                    external dcl 29 ref 71 132
time                                   based           fixed bin(71,0)          level 2 in structure "old_qh" dcl 101
                                                                                  in begin block on line 100 ref 106
time                                   based           fixed bin(71,0)          level 2 in structure "new_qh" dcl 102
                                                                                  in begin block on line 100 set ref 106*
use_totals                             based           structure                level 1 dcl 1-15 set ref 131* 132
use_totals_ptr                  000202 automatic       pointer                  dcl 1-14 set ref 68* 71 71* 84* 93 95 96 97 98 98 99
                                                                                  99 104 122 123 125 126 129 131 132* 132
ut                   221454            based           structure                array level 3 in structure "v2_use_totals" dcl 141
                                                                                  in procedure "convert_MR10_2_use_totals" ref 129
ut                   575654            based           structure                array level 3 in structure "new" dcl 47 in procedure
                                                                                  "convert_MR10_2_use_totals" set ref 128 129*
v2_use_totals                          based           structure                level 1 dcl 141
version                  10            based           char(8)                  level 3 dcl 47 set ref 94*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
A_ACCESS                               internal static bit(3)                   initial packed unaligned dcl 2-11
A_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 2-36
DIR_ACCESS_MODE_NAMES                  internal static char(4)                  initial array packed unaligned dcl 2-33
E_ACCESS                               internal static bit(3)                   initial packed unaligned dcl 2-11
E_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 2-36
M_ACCESS                               internal static bit(3)                   initial packed unaligned dcl 2-11
M_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 2-36
N_ACCESS                               internal static bit(3)                   initial packed unaligned dcl 2-11
N_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 2-36
REW_ACCESS                             internal static bit(3)                   initial packed unaligned dcl 2-11
REW_ACCESS_BIN                         internal static fixed bin(5,0)           initial dcl 2-36
RE_ACCESS                              internal static bit(3)                   initial packed unaligned dcl 2-11
RE_ACCESS_BIN                          internal static fixed bin(5,0)           initial dcl 2-36
RW_ACCESS_BIN                          internal static fixed bin(5,0)           initial dcl 2-36
R_ACCESS                               internal static bit(3)                   initial packed unaligned dcl 2-11
R_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 2-36
SA_ACCESS                              internal static bit(3)                   initial packed unaligned dcl 2-11
SA_ACCESS_BIN                          internal static fixed bin(5,0)           initial dcl 2-36
SEG_ACCESS_MODE_NAMES                  internal static char(4)                  initial array packed unaligned dcl 2-30
SMA_ACCESS                             internal static bit(3)                   initial packed unaligned dcl 2-11
SMA_ACCESS_BIN                         internal static fixed bin(5,0)           initial dcl 2-36
SM_ACCESS                              internal static bit(3)                   initial packed unaligned dcl 2-11
SM_ACCESS_BIN                          internal static fixed bin(5,0)           initial dcl 2-36
S_ACCESS                               internal static bit(3)                   initial packed unaligned dcl 2-11
S_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 2-36
TERM_FILE_BC                           internal static bit(2)                   initial packed unaligned dcl 3-12
TERM_FILE_DELETE                       internal static bit(5)                   initial packed unaligned dcl 3-17
TERM_FILE_FORCE_WRITE                  internal static bit(4)                   initial packed unaligned dcl 3-16
TERM_FILE_TRUNC                        internal static bit(1)                   initial packed unaligned dcl 3-11
TERM_FILE_TRUNC_BC_TERM                internal static bit(3)                   initial packed unaligned dcl 3-15
USE_TOTALS_VERSION_2                   internal static char(8)                  initial packed unaligned dcl 1-121
W_ACCESS                               internal static bit(3)                   initial packed unaligned dcl 2-11
W_ACCESS_BIN                           internal static fixed bin(5,0)           initial dcl 2-36
terminate_file_switches                based           structure                level 1 packed packed unaligned dcl 3-4

NAME DECLARED BY EXPLICIT CONTEXT.
convert_MR10_2_use_totals       000070 constant        entry                    external dcl 20

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1254        1312    1076        1264
Length      1554    1076        36         226     156           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
convert_MR10_2_use_totals           296 external procedure  is an external procedure.  
on unit on line 69                   84 on unit               
begin block on line 100                 begin block         shares stack frame of external procedure convert_MR10_2_use_totals.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
convert_MR10_2_use_totals
                         000100 argp                        convert_MR10_2_use_totals
                         000102 argl                        convert_MR10_2_use_totals
                         000103 arg_count                   convert_MR10_2_use_totals
                         000104 code                        convert_MR10_2_use_totals
                         000105 dayx                        convert_MR10_2_use_totals
                         000106 qhx                         convert_MR10_2_use_totals
                         000107 sh                          convert_MR10_2_use_totals
                         000110 dir                         convert_MR10_2_use_totals
                         000162 entryname                   convert_MR10_2_use_totals
                         000172 np                          convert_MR10_2_use_totals
                         000202 use_totals_ptr              convert_MR10_2_use_totals
                         000210 old_qhp                     begin block on line 100
                         000212 new_qhp                     begin block on line 100

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return_mac          enable_op           ext_entry           int_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      com_err_$suppress_name        cu_$arg_count                 cu_$arg_ptr
cv_dec_check_                 expand_pathname_$add_suffix   get_temp_segment_             initiate_file_
pathname_                     release_temp_segment_         terminate_file_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     20 000067        55 000075        56 000105        58 000107        59 000124        62 000125        64 000130
     65 000155        68 000156        69 000161        71 000175        73 000230        75 000257        77 000260
     78 000300        79 000340        81 000342        82 000374        84 000375        85 000433        87 000435
     88 000504        91 000505        93 000527        94 000534        95 000537        96 000541        97 000543
     98 000545        99 000557       104 000573       105 000604       106 000615       107 000617       108 000623
    110 000632       111 000657       113 000664       114 000673       115 000675       116 000702       117 000704
    119 000706       120 000710       122 000712       123 000720       124 000722       125 000733       126 000754
    127 000760       128 000762       129 000777       130 001011       131 001013       132 001021       133 001052
    134 001074


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
