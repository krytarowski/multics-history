	COMPILATION LISTING OF SEGMENT parse_attributes_
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/12/82  1237.6 mst Fri
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 parse_attributes_: proc (attr_string, set_attr, reset_attr, ec);
       12 
       13 /* PARSE_ATTRIBUTES_ - Parse string containing attributes into
       14*   two bit strings, one with "on" and one with "off".
       15*
       16*   Written by T.H. VanVleck, .... 1974
       17*   Modified by T. Casey, Feb 1975 to fix bugs
       18*
       19*   */
       20 
       21 dcl  attr_string char (*),				/* String to be parsed. */
       22     (set_attr, reset_attr) bit (36),			/* Output arguments. */
       23      ec fixed bin (35);				/* Error code. */
       24 
       25 dcl (i, j) fixed bin,				/* Indices. */
       26      atp ptr,					/* Ptr to bit string. */
       27      char32 char (32) aligned;			/* Single attribute keyword. */
       28 
       29 dcl  lookup_attribute_ entry (char (*) aligned, ptr, fixed bin (35));
       30 dcl (length, search, substr) builtin;
       31 
       32 	set_attr, reset_attr = "0"b;			/* Clear return args. */
       33 	ec = 0;					/* clear error code */
       34 	i = 1;					/* "i" locates beginning of keyword */
       35 attloop:	j = search (substr (attr_string, i), ",	; ");	/* Find tab, blank, comma, semi */
       36 	if j = 0 then j = length (attr_string) - i + 2;
       37 
       38 	if j > 1 then do;				/* skip over null parameters (e.g. ",,") */
       39 	     if substr (attr_string, i, 1) = "^" then do; /* Check to see if on or off */
       40 		atp = addr (reset_attr);		/* Off. */
       41 		char32 = substr (attr_string, i+1, j-2); /* Get keyword without not-sign. */
       42 	     end;
       43 	     else do;				/* On. */
       44 		atp = addr (set_attr);
       45 		char32 = substr (attr_string, i, j-1);
       46 	     end;
       47 	     call lookup_attribute_ (char32, atp, ec);	/* Find which bit this is. */
       48 	     if ec ^= 0 then return;
       49 	end;
       50 	i = i + j;				/* i = index of first char of next attribute */
       51 	if i <= length (attr_string) then go to attloop;	/* Loop until no more. */
       52 	return;
       53 
       54      end parse_attributes_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/12/82  1109.8  parse_attributes_.pl1             >spec>on>11/12/82>parse_attributes_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
atp                             000102 automatic       pointer                  dcl 25 set ref 40* 44* 47*
attr_string                            parameter       char                     unaligned dcl 21 ref 11 35 36 39 41 45 51
char32                          000104 automatic       char(32)                 dcl 25 set ref 41* 45* 47*
ec                                     parameter       fixed bin(35,0)          dcl 21 set ref 11 33* 47* 48
i                               000100 automatic       fixed bin(17,0)          dcl 25 set ref 34* 35 36 39 41 45 50* 50 51
j                               000101 automatic       fixed bin(17,0)          dcl 25 set ref 35* 36 36* 38 41 45 50
length                                                 builtin function         dcl 30 ref 36 51
lookup_attribute_               000010 constant        entry                    external dcl 29 ref 47
reset_attr                             parameter       bit(36)                  unaligned dcl 21 set ref 11 32* 40
search                                                 builtin function         dcl 30 ref 35
set_attr                               parameter       bit(36)                  unaligned dcl 21 set ref 11 32* 44
substr                                                 builtin function         dcl 30 ref 35 39 41 45

NAMES DECLARED BY EXPLICIT CONTEXT.
attloop                         000042 constant        label                    dcl 35 ref 51
parse_attributes_               000013 constant        entry                    external dcl 11

NAME DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 40 44

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       406         420     347         416
Length       564     347        12         130      36           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
parse_attributes_                    92 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
parse_attributes_        000100 i                           parse_attributes_
                         000101 j                           parse_attributes_
                         000102 atp                         parse_attributes_
                         000104 char32                      parse_attributes_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   return              ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
lookup_attribute_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000006        32 000026        33 000037        34 000040        35 000042        36 000064        38 000071
     39 000073        40 000077        41 000101        42 000105        44 000106        45 000110        47 000114
     48 000135        50 000140        51 000142        52 000145


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
