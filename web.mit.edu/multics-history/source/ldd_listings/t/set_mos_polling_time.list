	COMPILATION LISTING OF SEGMENT set_mos_polling_time
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/15/82  1744.9 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 /* SET_MOS_POLLING_TIME: Command which sets or prints the mos memory polling interval for EDAC errors. */
       12 
       13 /* Written May 1976 by Larry Johnson */
       14 
       15 set_mos_polling_time: proc;
       16 
       17 dcl  time fixed bin;
       18 dcl  i fixed bin;
       19 dcl  arg_ptr ptr;
       20 dcl  arg_len fixed bin;
       21 dcl  arg char (arg_len) based (arg_ptr);
       22 dcl  code fixed bin (35);
       23 dcl  name char (20) int static options (constant) init ("set_mos_polling_time");
       24 dcl  readsw bit (1);
       25 
       26 dcl  ioa_ entry options (variable);
       27 dcl  com_err_ entry options (variable);
       28 dcl  hphcs_$set_mos_polling_time entry (fixed bin);
       29 dcl  cu_$arg_ptr entry (fixed bin, ptr, fixed bin, fixed bin (35));
       30 dcl  cv_dec_check_ entry (char (*), fixed bin) returns (fixed bin (35));
       31 
       32 	call cu_$arg_ptr (1, arg_ptr, arg_len, code);
       33 	if code ^= 0 then time = -1;			/* this asks to return time */
       34 	else do;
       35 	     time = cv_dec_check_ (arg, i);
       36 	     if i ^= 0 then do;
       37 		call com_err_ (0, name, "Invalid time: ^a", arg);
       38 		return;
       39 	     end;
       40 	     if time < 0 then time = -1;
       41 	end;
       42 	readsw = (time = -1);			/* set if doing read */
       43 
       44 	call hphcs_$set_mos_polling_time (time);
       45 	if readsw then do;
       46 	     if time = 0 then call ioa_ ("MOS polling is disabled.");
       47 	     else call ioa_ ("MOS polling time interval is ^d minute^v(s^).", time, bin (time ^= 1, 1));
       48 	end;
       49 	return;
       50 
       51      end set_mos_polling_time;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/15/82  1526.8  set_mos_polling_time.pl1          >dumps>old>recomp>set_mos_polling_time.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
arg                                    based           char                     unaligned dcl 21 set ref 35* 37*
arg_len                         000104 automatic       fixed bin(17,0)          dcl 20 set ref 32* 35 35 37 37
arg_ptr                         000102 automatic       pointer                  dcl 19 set ref 32* 35 37
code                            000105 automatic       fixed bin(35,0)          dcl 22 set ref 32* 33
com_err_                        000012 constant        entry                    external dcl 27 ref 37
cu_$arg_ptr                     000016 constant        entry                    external dcl 29 ref 32
cv_dec_check_                   000020 constant        entry                    external dcl 30 ref 35
hphcs_$set_mos_polling_time     000014 constant        entry                    external dcl 28 ref 44
i                               000101 automatic       fixed bin(17,0)          dcl 18 set ref 35* 36
ioa_                            000010 constant        entry                    external dcl 26 ref 46 47
name                            000000 constant        char(20)                 initial unaligned dcl 23 set ref 37*
readsw                          000106 automatic       bit(1)                   unaligned dcl 24 set ref 42* 45
time                            000100 automatic       fixed bin(17,0)          dcl 17 set ref 33* 35* 40 40* 42 44* 46 47* 47 47

NAME DECLARED BY EXPLICIT CONTEXT.
set_mos_polling_time            000045 constant        entry                    external dcl 15

NAME DECLARED BY CONTEXT OR IMPLICATION.
bin                                                    builtin function         ref 47 47

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       344         366     257         354
Length       542     257        22         140      64           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
set_mos_polling_time                116 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
set_mos_polling_time     000100 time                        set_mos_polling_time
                         000101 i                           set_mos_polling_time
                         000102 arg_ptr                     set_mos_polling_time
                         000104 arg_len                     set_mos_polling_time
                         000105 code                        set_mos_polling_time
                         000106 readsw                      set_mos_polling_time

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
r_e_as              r_ne_as             call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      cu_$arg_ptr                   cv_dec_check_                 hphcs_$set_mos_polling_time
ioa_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     15 000044        32 000052        33 000070        35 000075        36 000123        37 000125        38 000162
     40 000163        42 000167        44 000172        45 000201        46 000203        47 000225        49 000255


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
