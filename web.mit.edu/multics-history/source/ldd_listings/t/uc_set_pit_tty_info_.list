	COMPILATION LISTING OF SEGMENT uc_set_pit_tty_info_
	Compiled by: Multics PL/I Compiler, Release 30, of February 16, 1988
	Compiled at: Honeywell Bull, Phoenix AZ, SysM
	Compiled on: 07/13/88  1038.5 mst Wed
	    Options: optimize map

        1 /****^  ********************************************
        2*        *                                          *
        3*        * Copyright, (C) Honeywell Bull Inc., 1987 *
        4*        *                                          *
        5*        ******************************************** */
        6 
        7 
        8 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
        9 /*							       */
       10 /* This module is part of the Multics Network Architecture (MNA) version of  */
       11 /* user control.  MNA user control serves users coming into Multics via      */
       12 /* separate networks (eg, the Distributed Systems Architecture (DSA)	       */
       13 /* network.  MNA user control is not used for logins through the Multics     */
       14 /* Communications System (MCS).  A separate MCS user control system serves   */
       15 /* MCS users.						       */
       16 /*							       */
       17 /* To Be Supplied:						       */
       18 /*  1) Brief module description.  See MDD010 or MTBs 751 and 752 for details */
       19 /*     about this module, and its relationship to modules in the MCS user    */
       20 /*     control system.					       */
       21 /*  2) Operator error message documentation.  This program calls	       */
       22 /*     sys_log_$general but does not contain the required descriptions of    */
       23 /*     these messages.  This omission was waived for initial installation    */
       24 /*     of the subsystem by the auditor, security coordinator, and by MDC     */
       25 /*     management.						       */
       26 /*							       */
       27 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
       28 
       29 /****^  HISTORY COMMENTS:
       30*  1) change(86-04-04,Swenson), approve(87-07-13,MCR7737),
       31*     audit(87-05-15,GDixon), install(87-08-04,MR12.1-1055):
       32*     Initial coding.
       33*  2) change(87-04-28,GDixon), approve(87-07-13,MCR7737),
       34*     audit(87-07-30,Brunelle), install(87-08-04,MR12.1-1055):
       35*     Updated for change to user_table_entry.incl.pl1.
       36*  3) change(87-05-14,GDixon), approve(87-07-13,MCR7737),
       37*     audit(87-07-30,Brunelle), install(87-08-04,MR12.1-1055):
       38*      A) Replace error logging with calls to sys_log_$general.
       39*      b) Set pit.line_type from ute.line_type.
       40*                                                   END HISTORY COMMENTS */
       41 
       42 /* format: style4,indattr */
       43 
       44 uc_set_pit_tty_info_:
       45      procedure (P_utep, P_code);
       46 
       47 /* Parameters */
       48 
       49 dcl  P_code	        fixed bin (35) parameter;
       50 dcl  P_utep	        ptr parameter;
       51 
       52 /* Automatic */
       53 
       54 dcl  code		        fixed bin (35) automatic;
       55 
       56 /* Entries */
       57 
       58 dcl  hcs_$truncate_seg      entry (ptr, fixed bin (19), fixed bin (35));
       59 dcl  hphcs_$set_pit_tty_info entry (bit (36) aligned, ptr, fixed bin (35));
       60 
       61 /* External */
       62 
       63 dcl  error_table_$out_of_sequence fixed bin (35) ext static;
       64 
       65 /* Constant */
       66 
       67 dcl  ME		        char (20) initial ("uc_set_pit_tty_info_") internal static options (constant);
       68 
       69 /* Builtins */
       70 
       71 dcl (addr, null, length, rtrim, substr)
       72 		        builtin;
       73 
       74 
       75 /* Program */
       76 
       77 	utep = P_utep;
       78 	code = 0;
       79 
       80 	if ^ute.uflags.proc_create_ok then
       81 	     call Abort (error_table_$out_of_sequence);
       82 
       83 	call Setup_PIT ();
       84 	call hphcs_$set_pit_tty_info (ute.proc_id, pit_ptr, code);
       85 	if code ^= 0 then
       86 	     call Log_Error_with_Code (code,
       87 		"Could not set tty info in PIT for ^a.^a.^a on channel ^a.",
       88 		ute.person, ute.project, ute.tag, ute.tty_name);
       89 RETURN:
       90 	P_code = code;
       91 	return;
       92 
       93 Setup_PIT:
       94      procedure ();
       95 
       96 	pit_ptr = as_data_$pit_ptr;
       97 	call hcs_$truncate_seg (pit_ptr, 0, code);
       98 	if code ^= 0 then
       99 	     call Abort (code, "Could not truncate the pit template.");
      100 
      101 	pit.version = PIT_version_3;
      102 	pit.tty = ute.tty_name;
      103 	if length (rtrim (pit.tty)) <= length (pit.old_tty) then
      104 	     pit.old_tty = substr (pit.tty, 1, length (pit.old_tty));
      105 	pit.terminal_access_class = ""b;		/* not used */
      106 	pit.line_type = ute.line_type;
      107 	pit.term_type_name = ute.terminal_type;
      108 /**** TBS: If the value of pit.service is type is used, it will have to
      109*      be conjured up from somewhere.  The cdte, of course, has this value
      110*      for MCS channels.  It was probably only used for the old NCP/FTP. */
      111 	pit.service_type = 0;
      112 /**** TBS: The charge_type is available in the cdte for MCS channels.  If
      113*      this module ever supports MCS, it should be extracted from here. */
      114 	pit.charge_type = 0;
      115 	pit.tty_answerback = ute.tty_id_code;
      116 /**** TBS: The tty_type is an obsolete field which is present in the cdte.
      117*      If this module ever supports MCS, it should be extracted from here. */
      118 	pit.tty_type = 0;
      119 	pit.outer_module = ute.outer_module;
      120 	return;
      121 
      122      end Setup_PIT;
      123 
      124 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
      125 /*							       */
      126 /* Abort: Report an error via sys_log_$general and stop execution if a       */
      127 /* nonzero code was given.					       */
      128 /*							       */
      129 /* Syntax:  call Abort (code, ioa_ctl, args);			       */
      130 /*							       */
      131 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
      132 
      133 Abort:
      134      procedure options (variable);
      135 
      136 dcl  cu_$arg_list_ptr       entry returns (ptr);
      137 dcl  sys_log_$general       entry (ptr);
      138 
      139 	sl_info = sl_info_code_msg;
      140 	sl_info.severity = SL_LOG_SILENT;
      141 	sl_info.caller = ME;
      142 	sl_info.arg_list_ptr = cu_$arg_list_ptr ();
      143 	call sys_log_$general (addr (sl_info));
      144 	code = sl_info.code;
      145 	if code ^= 0 then go to RETURN;
      146 
      147      end Abort;
      148 
      149 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
      150 /*							       */
      151 /* Log_Error_with_Code: log an error via sys_log_$general and continue       */
      152 /* execution.						       */
      153 /*							       */
      154 /* Syntax:  call Log_Error_with_Code (code, ioa_ctl, args);		       */
      155 /*							       */
      156 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
      157 
      158 Log_Error_with_Code:
      159      procedure options (variable);
      160 
      161 dcl  cu_$arg_list_ptr       entry returns (ptr);
      162 dcl  sys_log_$general       entry (ptr);
      163 
      164 	sl_info = sl_info_code_msg;
      165 	sl_info.severity = SL_LOG_SILENT;
      166 	sl_info.caller = ME;
      167 	sl_info.arg_list_ptr = cu_$arg_list_ptr ();
      168 	call sys_log_$general (addr (sl_info));
      169 
      170      end Log_Error_with_Code;
      171 
      172 /* format: off */
      173  /* BEGIN INCLUDE FILE ... as_data_.incl.pl1 ... */
  1     2 
  1     3 /* format: style4 */
  1     4 
  1     5 /* This file must be kept in sync with as_data_.alm */
  1     6 
  1     7 /****^  HISTORY COMMENTS:
  1     8*  1) change(86-09-21,Beattie), approve(86-09-22,MCR7542),
  1     9*     audit(86-10-31,Brunelle), install(86-11-12,MR12.0-1211):
  1    10*     Remove references to the 963 and 029 preaccess commands and remove support
  1    11*     for ARDS, 202_ETX, 2741 and 1050 in system interfaces.
  1    12*  2) change(86-09-25,Swenson), approve(87-07-20,MCR7737),
  1    13*     audit(87-07-20,GDixon), install(87-08-04,MR12.1-1056):
  1    14*     Add references to as_data_ entrypoints added for Login Server.
  1    15*  3) change(87-03-03,Brunelle), approve(87-07-20,MCR7697),
  1    16*     audit(87-07-20,GDixon), install(87-08-04,MR12.1-1056):
  1    17*     Added new user signal field of inacrcvd (14) to handle inactivity response
  1    18*     from user.
  1    19*                                                   END HISTORY COMMENTS */
  1    20 
  1    21 dcl  as_data_$BS char (1) aligned ext static;		/* BACKSPACE character */
  1    22 dcl  as_data_$CR char (1) aligned ext static;		/* CARRIAGE RETURN character */
  1    23 dcl  as_data_$abs_dim char (32) ext static;		/* absentee DIM */
  1    24 dcl  as_data_$acct_update_priority fixed bin ext static;	/* accounting update IPC priority */
  1    25 dcl  as_data_$acsdir char (168) ext static;		/* Access Control Segment directory */
  1    26 dcl  as_data_$ansp ptr ext static;			/* answer_table */
  1    27 dcl  as_data_$as_procid bit (36) aligned ext static;	/* Answering Service process id */
  1    28 dcl  as_data_$as_ring fixed bin (3) ext static;		/* AS operating ring */
  1    29 dcl  as_data_$as_tty char (6);			/* AS master tty channel */
  1    30 dcl  as_data_$asmtp ptr ext static;			/* AS meter table */
  1    31 dcl  as_data_$autp ptr ext static;			/* absentee_user_table */
  1    32 dcl  as_data_$buzzardp ptr ext static;			/* dpg_ list of buteo processes */
  1    33 dcl  as_data_$cdtp ptr ext static;			/* CDT */
  1    34 dcl  as_data_$default_weight fixed bin (35) ext;		/* default user process load control weight */
  1    35 dcl  as_data_$devtabp ptr ext static;			/* device_table */
  1    36 dcl  as_data_$dft_user_ring fixed bin (3) ext static;	/* default user ring */
  1    37 dcl  as_data_$dutp ptr ext static;			/* daemon_user_table */
  1    38 dcl  as_data_$g115_dim char (32) ext static;
  1    39 dcl  as_data_$lct_initialized bit (1) aligned ext static;	/* LCT allocated in ring 0 */
  1    40 dcl  as_data_$lct_size fixed bin ext static;		/* CDT tty channels + spares */
  1    41 dcl  as_data_$max_user_ring fixed bin (3) ext static;	/* maximum user ring */
  1    42 dcl  as_data_$mgtp ptr ext static;			/* master group table */
  1    43 dcl  as_data_$mrd_dim char (32) ext static;		/* daemon's message routing DIM */
  1    44 dcl  as_data_$ntty_dim char (32) ext static;		/* network connection DIM */
  1    45 dcl  as_data_$pdtdir char (168) ext static;		/* PDT directory */
  1    46 dcl  as_data_$pit_ptr ptr ext static;			/* pit_temp_ */
  1    47 dcl  as_data_$rcpdir char (168) ext static;		/* RCP directory */
  1    48 dcl  as_data_$request_priority fixed bin ext static;
  1    49 dcl  as_data_$rs_ptrs (0:9) ptr ext static;		/* rate_structures */
  1    50 dcl  as_data_$rtdtp ptr ext static;			/* RTDT */
  1    51 dcl  as_data_$sat_htp ptr ext static;			/* SAT hash table */
  1    52 dcl  as_data_$satp ptr ext static;			/* SAT */
  1    53 dcl  as_data_$suffix (0:9) char (2) unaligned ext static;
  1    54 dcl  as_data_$sysdir char (168) ext static;		/* system control directory */
  1    55 dcl  as_data_$teens_suffix (10:19) char (2) unaligned ext static;
  1    56 dcl  as_data_$terminet_tabs_string char (144) varying ext static;
  1    57 dcl  as_data_$tty_dim char (32) ext static;		/* standard interactive DIM */
  1    58 dcl  as_data_$update_priority fixed bin ext static;	/* ??? */
  1    59 dcl  as_data_$version char (8) ext static;		/* AS version */
  1    60 dcl  as_data_$whoptr ptr ext static;			/* whotab */
  1    61 
  1    62 dcl  1 as_data_$login_args aligned ext static,		/* control arguments for login */
  1    63        2 n_login_args fixed bin,
  1    64        2 pad fixed bin,
  1    65        2 login_args (55 /* as_data_$login_args.n_login_args */) char (24) unaligned;
  1    66 
  1    67 dcl  1 as_data_$signal_types ext static aligned,		/* IPC process control signals */
  1    68        2 n_signals fixed bin,
  1    69        2 pad fixed bin,
  1    70        2 signals (14 /* as_data_$signal_types.n_signals */) char (8) unaligned;
  1    71 
  1    72 dcl  1 as_data_$system_signal_types ext static aligned,	/* IPC process control signals */
  1    73        2 n_system_signals fixed bin,
  1    74        2 pad fixed bin,
  1    75        2 system_signals (10 /* as_data_$system_signal_types.n_system_signals */) char (8) unaligned;
  1    76 
  1    77 dcl  as_data_$login_words fixed bin ext static aligned,
  1    78 						/* interactive login words */
  1    79      1 as_data_login_words aligned based (addr (as_data_$login_words)),
  1    80        2 n_words fixed bin,
  1    81        2 pad fixed bin,
  1    82        2 words (0 refer (as_data_login_words.n_words)) char (16) unaligned;
  1    83 
  1    84 dcl  as_data_$debug_flag bit (1) aligned external static;
  1    85 dcl  as_data_$ls_request_server_info_ptr ptr external static;
  1    86 dcl  as_data_$ls_message_buffer_cur_lth fixed bin (18) external static;
  1    87 dcl  as_data_$ls_message_buffer_max_lth fixed bin (18) external static;
  1    88 dcl  as_data_$ls_message_buffer_ptr ptr external static;
  1    89 
  1    90 /* END INCLUDE FILE ... as_data_.incl.pl1 ... */
      173 
      174  /* BEGIN include file access_audit_bin_header.incl.pl1 */
  2     2 
  2     3 /* format: style4 */
  2     4 
  2     5 /* NOTE: All changes must also be done to access_audit_bin_header.incl.alm */
  2     6 
  2     7 /* 85-01-18 E. Swenson - renamed to access_audit_bin_header.incl.pl1 */
  2     8 /* 85-01-17 E. Swenson - restructured, added session_uid, changed
  2     9*   min and max authorization to authorization range. */
  2    10 /* 85-01-07 EJ Sharpe - added min_authorization, cleanup */
  2    11 /* 84-11-15 EJ Sharpe - added event_flags word */
  2    12 /* 84-11-06 EJ Sharpe - added unaligned attr to version and proxy_flag */
  2    13 /* 84-10-24 EJ Sharpe - added the constants */
  2    14 /* 84-09-04 BIM - created */
  2    15 
  2    16 declare  audit_record_ptr pointer;
  2    17 
  2    18 dcl  1 audit_record_header aligned based (audit_record_ptr),
  2    19        2 header aligned like arh_header_,
  2    20        2 subject aligned like arh_user_info_;
  2    21 
  2    22 dcl  1 audit_record_header_proxy aligned based (audit_record_ptr),
  2    23        2 header aligned like arh_header_,
  2    24        2 subjects (2) aligned like arh_user_info_;
  2    25 
  2    26 dcl  1 arh_header_ aligned based,
  2    27        2 type fixed bin (9) unsigned unaligned,
  2    28        2 version fixed bin (9) unsigned unaligned,
  2    29        2 flags unaligned,
  2    30          3 (
  2    31          subject_is_process,				/* binary data in subject is valid */
  2    32          object_is_valid				/* There is an object */
  2    33          ) bit (1) unaligned,
  2    34          3 pad bit (16) unaligned,
  2    35        2 operation_code bit (36) aligned,		/* like access_audit_encoded_op */
  2    36        2 event_flags bit (36) aligned,			/* like access_audit_eventflags */
  2    37        2 session_uid fixed bin (35);			/* uid for the login session */
  2    38 
  2    39 dcl  1 arh_user_info_ aligned based,
  2    40        2 person char (22) unaligned,			/* see anonymous bit */
  2    41        2 project char (9) unaligned,			/*  blank  for nologin w/out proj */
  2    42        2 tag char (1) unaligned,
  2    43        2 ring fixed bin (3) uns unaligned,
  2    44        2 anonymous bit (1) unaligned,
  2    45        2 pad3 bit (32) unaligned,
  2    46        2 process_id bit (36) aligned,
  2    47        2 authorization bit (72) aligned,
  2    48        2 authorization_range (2) bit (72) aligned;
  2    49 
  2    50 dcl  ARH_TYPE_PROXY fixed bin init (2)
  2    51 	static options (constant);
  2    52 dcl  ARH_TYPE_NO_PROXY fixed bin init (1)
  2    53 	static options (constant);
  2    54 dcl  ACCESS_AUDIT_HEADER_VERSION_3 fixed bin (9) unsigned
  2    55 	init (3) static options (constant);
  2    56 
  2    57 /* End include file access_audit_bin_header.incl.pl1 */
      174  /* needed by PL/I */
      175  /*  BEGIN:   as_audit_structures.incl.pl1		  *  *  *  *  *  */
  3     2 
  3     3 /****^  HISTORY COMMENTS:
  3     4*  1) change(84-01-17,Swenson), approve(), audit(), install():
  3     5*     Initial coding.
  3     6*  2) change(87-06-08,GDixon), approve(87-07-13,MCR7741),
  3     7*     audit(87-07-31,Brunelle), install(87-08-04,MR12.1-1056):
  3     8*      A) Add AS_AUDIT_CHANNEL_ACTIONS, AS_AUDIT_CHANNEL_DIRECTION, and
  3     9*         AS_AUDIT_CHANNEL_SERVICE_INFO arrays.
  3    10*      B) Add channel audit actions for dialin, dialout and dial system.
  3    11*      C) Correct declaration of as_channel_audit_record_.pad2.
  3    12*      D) Revise channel_audit_info.
  3    13*  3) change(87-07-15,GDixon), approve(87-07-15,MCR7741),
  3    14*     audit(87-07-31,Brunelle), install(87-08-04,MR12.1-1056):
  3    15*      A) Add AS_AUDIT_PROCESS_TERMINATE action code.
  3    16*                                                   END HISTORY COMMENTS */
  3    17 
  3    18 /* format: style2 */
  3    19 
  3    20 /* This include file describes the binary data associated with
  3    21*   Answering Service audit records.  */
  3    22 
  3    23 /**** This first structure defines the Identification and Authentication
  3    24*      (I&A) audit records associated with login attempts for interactive
  3    25*      and daemon logins */
  3    26 
  3    27      dcl	   1 as_ia_audit_record_int_dmn
  3    28 			      structure aligned based,
  3    29 	     2 header	      like audit_record_header aligned,
  3    30 	     2 record	      like as_ia_audit_record_;
  3    31 
  3    32 /**** This one is for absentee logins which are not proxy absentees */
  3    33 
  3    34      dcl	   1 as_ia_audit_record_abs
  3    35 			      structure aligned based,
  3    36 	     2 header	      like audit_record_header aligned,
  3    37 	     2 record	      like as_ia_audit_record_,
  3    38 	     2 absentee_input_path
  3    39 			      char (168);
  3    40 
  3    41      dcl	   1 as_ia_audit_record_abs_proxy
  3    42 			      structure aligned based,
  3    43 	     2 header	      like audit_record_header aligned,
  3    44 	     2 record	      like as_ia_audit_record_,
  3    45 	     2 absentee_input_path
  3    46 			      char (168),
  3    47 	     2 proxy_user	      char (32);
  3    48 
  3    49 /**** The following structure is common to all the I&A records.  It
  3    50*      contains the relevant information about the I&A process. */
  3    51 
  3    52      dcl	   1 as_ia_audit_record_  structure aligned based,
  3    53 	     2 type	      fixed bin (9) unsigned unaligned,
  3    54 	     2 version	      fixed bin (9) unsigned unaligned,
  3    55 	     2 process_type	      fixed bin (3) unsigned unaligned,
  3    56 	     2 min_ring	      fixed bin (3) unsigned unaligned,
  3    57 	     2 max_ring	      fixed bin (3) unsigned unaligned,
  3    58 	     2 pad1	      bit (9) unaligned,
  3    59 	     2 attributes	      like user_attributes,
  3    60 	     2 audit_flags	      bit (36) aligned,
  3    61 	     2 channel	      char (32) aligned,
  3    62 	     2 terminal_type      char (32) aligned,
  3    63 	     2 answerback	      char (4) aligned;
  3    64 
  3    65 /**** The following structure represents the binary information 
  3    66*      associated with a communications channel access audit message. */
  3    67 
  3    68      dcl	   1 as_channel_audit_record
  3    69 			      structure aligned based,
  3    70 	     2 header	      like audit_record_header aligned,
  3    71 	     2 record	      like as_channel_audit_record_;
  3    72 
  3    73 
  3    74      dcl	   1 as_channel_audit_record_
  3    75 			      structure aligned based,
  3    76 	     2 type	      fixed bin (9) unsigned unaligned,
  3    77 	     2 version	      fixed bin (9) unsigned unaligned,
  3    78 	     2 flags	      unaligned,
  3    79 	       3 channel_info_valid
  3    80 			      bit (1) unaligned,
  3    81 	       3 current_access_class_valid
  3    82 			      bit (1) unaligned,
  3    83 	       3 pad1	      bit (16) unaligned,
  3    84 	     2 channel_name	      char (32),
  3    85 	     2 current_access_class
  3    86 			      (2) bit (72) aligned,
  3    87 	     2 access_class_range (2) bit (72) aligned,
  3    88 	     2 current_service_type
  3    89 			      fixed bin (17) unaligned,
  3    90 	     2 service_type	      fixed bin (17) unaligned,
  3    91 	     2 terminal_type      char (32),
  3    92 	     2 authenticated_user aligned,
  3    93 	       3 personid	      char (22) unaligned,
  3    94 	       3 projectid	      char (9) unaligned,
  3    95 	       3 pad2	      bit (9) unaligned;
  3    96 
  3    97 /**** The following structure represents the binary information 
  3    98*      associated with a dial service audit record */
  3    99 
  3   100      dcl	   1 as_dial_service_audit_record
  3   101 			      structure aligned based,
  3   102 	     2 header	      like audit_record_header aligned,
  3   103 	     2 record	      like as_dial_service_audit_record_;
  3   104 
  3   105      dcl	   1 as_dial_service_audit_record_
  3   106 			      structure aligned based,
  3   107 	     2 type	      fixed bin (9) unsigned unaligned,
  3   108 	     2 version	      fixed bin (9) unsigned unaligned,
  3   109 	     2 dial_server_ring   fixed bin (3) unsigned unaligned,
  3   110 	     2 flags	      unaligned,
  3   111 	       3 registered_server
  3   112 			      bit (1) unaligned,
  3   113 	       3 privileged_server
  3   114 			      bit (1) unaligned,
  3   115 	       3 pad1	      bit (13) unaligned,
  3   116 	     2 dial_qualifier     char (32);
  3   117 
  3   118 /**** The following structure is used by dial_ctl_ to pass the required
  3   119*      information to as_access_audit_.  This structure is necessary since
  3   120*      the data is not available in the user_table_entry or cdte. */
  3   121 
  3   122      dcl	   dial_server_info_ptr   ptr;		/* pointer to following structure */
  3   123 
  3   124      dcl	   1 dial_server_info     structure aligned based (dial_server_info_ptr),
  3   125 	     2 server_ring	      fixed bin (3) unaligned,
  3   126 	     2 flags	      unaligned,
  3   127 	       3 registered	      bit (1) unaligned,
  3   128 	       3 privileged	      bit (1) unaligned,
  3   129 	       3 pad1	      bit (31) unaligned,
  3   130 	     2 dial_qualifier     char (32);
  3   131 
  3   132 /**** The following structure is used by dial_ctl_ to pass relevant information
  3   133*      to as_access_audit_.  The channel name is passed here when we do not
  3   134*      have a cdtep, for instance. */
  3   135 
  3   136      dcl	   channel_audit_info_ptr ptr;
  3   137 
  3   138      dcl	   1 channel_audit_info   aligned based (channel_audit_info_ptr),
  3   139 	     2 channel_name	      char (32),
  3   140 	     2 valid,
  3   141 	      (3 service_info,
  3   142 	       3 access_class,
  3   143 	       3 access_class_range,
  3   144 	       3 user_validation_level)
  3   145 			      bit(1) unal,
  3   146 	       3 mbz	      bit(32) unal,
  3   147 	     2 service_info	      char (32),
  3   148 	     2 access_class	      bit(72) aligned,
  3   149 	     2 access_class_range (2) bit(72) aligned,
  3   150 	     2 user_validation_level
  3   151 			      fixed bin (3);
  3   152 
  3   153      dcl	   AS_AUDIT_RECORD_IA_VERSION_1
  3   154 			      fixed bin (9) initial (1) internal static options (constant);
  3   155 
  3   156      dcl	   AS_AUDIT_RECORD_CHN_VERSION_1
  3   157 			      fixed bin (9) initial (1) internal static options (constant);
  3   158 
  3   159      dcl	   AS_AUDIT_RECORD_DIALID_VERSION_1
  3   160 			      fixed bin (9) initial (1) internal static options (constant);
  3   161 
  3   162      dcl	   (
  3   163 	   AS_AUDIT_PROCESS_CREATE
  3   164 			      initial (1),
  3   165 	   AS_AUDIT_PROCESS_DESTROY
  3   166 			      initial (2),
  3   167 	   AS_AUDIT_PROCESS_CONNECT
  3   168 			      initial (3),
  3   169 	   AS_AUDIT_PROCESS_DISCONNECT
  3   170 			      initial (4),
  3   171 	   AS_AUDIT_PROCESS_TERMINATE
  3   172 			      initial (5)
  3   173 	   )		      fixed bin (17) internal static options (constant);
  3   174 
  3   175      dcl	   (
  3   176 	   AS_AUDIT_CHANNEL_ATTACH
  3   177 			      initial (1),
  3   178 	   AS_AUDIT_CHANNEL_DETACH
  3   179 			      initial (2),
  3   180 	   AS_AUDIT_CHANNEL_DIALIN
  3   181 			      initial (3),
  3   182 	   AS_AUDIT_CHANNEL_DIALOUT
  3   183 			      initial (4),
  3   184 	   AS_AUDIT_CHANNEL_DIAL_SYSTEM
  3   185 			      initial (5)
  3   186 	   )		      fixed bin (17) internal static options (constant);
  3   187 
  3   188      dcl	   (
  3   189 	   AS_AUDIT_DIALID_START  initial (1),
  3   190 	   AS_AUDIT_DIALID_STOP   initial (2)
  3   191 	   )		      fixed bin (17) internal static options (constant);
  3   192 
  3   193      dcl	   AS_AUDIT_CHANNEL_ACTIONS	
  3   194 			      (5) char (12) internal static options (constant)
  3   195 			      initial ("ATTACH", "DETACH", "DIALIN", "DIALOUT", "DIAL SYSTEM");
  3   196      dcl     AS_AUDIT_CHANNEL_DIRECTION
  3   197 			      (5) char (4) internal static options (constant)
  3   198 			      initial ("to", "from", "to", "from", "to");
  3   199      dcl     AS_AUDIT_CHANNEL_SERVICE_INFO
  3   200 			      (5) char (12) internal static options (constant)
  3   201 			      initial ("Service", "Service", "Dial ID", "Destination", "VChannel");
  3   202      dcl	   AS_AUDIT_PROCESS_ACTIONS
  3   203 			      (5) char (10) internal static options (constant)
  3   204 			      initial ("CREATE", "DESTROY", "CONNECT", "DISCONNECT", "TERMINATE");
  3   205 
  3   206 /*  END OF:  as_audit_structures.incl.pl1		  *  *  *  *  *  */
      175 
      176  /* BEGIN INCLUDE FILE ... dialup_values.incl.pl1 */
  4     2 
  4     3 /* format: style4 */
  4     4 
  4     5 /* Values for "cdte.tra_vec" used by dialup_ and others. */
  4     6 
  4     7 /* Modified by T. Casey April 1976 to add WAIT_NEW_PASSWORD
  4     8*   -		in 1977 and 1978 to add WAIT_(GREETING_MSG DELETE_CHANNEL)
  4     9*   -		and in October 1979 to add WAIT_CONNECT_REQUEST
  4    10*   Modified by Robert Coren in May 1981 to add TANDD_ATTACH values and 
  4    11*		WAIT_DISCARD_WAKEUP
  4    12*   Modified by T. Casey, July 1981, for MR9.0, to add WAIT_BEFORE_HANGUP.
  4    13*   Modified by E. N. Kittlitz, July 1982, to add TTY_MASKED.
  4    14**/
  4    15 
  4    16 /****^  HISTORY COMMENTS:
  4    17*  1) change(87-04-20,GDixon), approve(87-07-13,MCR7741),
  4    18*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  4    19*     Add constant arrays naming cdte.state, cdte.tra_vec and ute.active values.
  4    20*  2) change(87-05-11,GDixon), approve(87-07-13,MCR7741),
  4    21*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  4    22*     Add named constants for instance tags.
  4    23*                                                   END HISTORY COMMENTS */
  4    24 
  4    25 dcl  (WAIT_DIALUP init (1),				/* Channel waiting for dialup. */
  4    26      WAIT_ANSWERBACK initial (2),			/* WRU sent, waiting for reply */
  4    27      WAIT_LOGIN_LINE init (3),			/* Greeting typed, wait for login command. */
  4    28      WAIT_LOGIN_ARGS init (4),			/* Want rest of login line */
  4    29      WAIT_OLD_PASSWORD init (5),			/* "-cpw" was specified. Wait for old password. */
  4    30      WAIT_PASSWORD init (6),				/* Waiting for password. (If "-cpw", repeat of new one.) */
  4    31      WAIT_NEW_PASSWORD init (7),			/* "-cpw" was specified. Wait for new password */
  4    32      WAIT_LOGOUT_SIG init (8),			/* Channel is hooked up. Wait for logout. */
  4    33      WAIT_LOGOUT init (9),				/* A logout has been requested. Wait for process to die */
  4    34      WAIT_LOGOUT_HOLD init (10),			/* As above but don't hang up when it dies. */
  4    35      WAIT_DETACH init (11),				/* As above but ignore channel afterwards. */
  4    36      WAIT_NEW_PROC init (12),				/* As above but make new process and continue. */
  4    37      WAIT_REMOVE init (13),				/* As above but completely expunge channel. */
  4    38      WAIT_FIN_PRIV_ATTACH init (14),			/* When channel dials up, connect it to user */
  4    39      WAIT_DIAL_RELEASE init (15),			/* Waiting for master process to release. */
  4    40      WAIT_DIAL_OUT init (16),				/* Waiting for auto call to complete */
  4    41      WAIT_HANGUP init (17),				/* Wait for the hangup event to occur for a channel */
  4    42      WAIT_SLAVE_REQUEST init (18),			/* Ignore line until someone asks */
  4    43      WAIT_GREETING_MSG init (19),			/* Print greeting message and wait for login line */
  4    44      WAIT_DELETE_CHANNEL init (20),			/* Channel deleted - mark cdte after process is destroyed */
  4    45      WAIT_CONNECT_REQUEST init (21),			/* logged in; awaiting request re disconnected processes */
  4    46      WAIT_TANDD_HANGUP init (22),			/* when channel hangs up, proceed with t & d attachment */
  4    47      WAIT_FIN_TANDD_ATTACH init (23),			/* when channel dials up, finish t & d attachment */
  4    48      WAIT_DISCARD_WAKEUPS init (24),			/* disregard all wakeups on channel */
  4    49      WAIT_BEFORE_HANGUP init (25),			/* allow output to print before hanging up */
  4    50      WAIT_DESTROY_REQUEST init (26),			/* waiting to continue with destroy request after process has destroyed itself */
  4    51      WAIT_NEW_PROC_REQUEST init (27)			/* waiting to continue with new_proc request after process has destroyed itself */
  4    52      ) fixed bin internal static options (constant);
  4    53 
  4    54 dcl  TRA_VEC_VALUES (0:13) char (32) aligned int static options (constant) init
  4    55 						/* names of ute.destroy_flag values */
  4    56 	("", "wait dialup", "wait answerback", "wait login line", /*  0-3  */
  4    57 	"wait login args", "wait old password", "wait password",  /*  4-6  */
  4    58 	"wait new password", "wait logout signal", "wait logout", /*  7-9  */
  4    59 	"wait logout hold", "wait detach", "wait new proc",       /* 10-12 */
  4    60 	"wait remove");				        /*   -13 */
  4    61 
  4    62 /* Values for "cdte.state", typewriter state. */
  4    63 
  4    64 dcl  (TTY_MASKED init (-1),				/* Terminal channel is there, but masked by MCS */
  4    65      TTY_HUNG init (1),				/* Terminal channel is there, but dead. */
  4    66      TTY_KNOWN init (2),				/* Channel being "listened" to, awaiting dialup. */
  4    67      TTY_DIALED init (5)				/* Channel is dialed up. This is normal state. */
  4    68      ) fixed bin internal static options (constant);
  4    69 
  4    70 dcl  STATE_VALUES (-1:5) char (15) aligned int static options (constant) init
  4    71 						/* names of cdte.state values */
  4    72 	("masked", "dead", "hung up", "listening", "", "", "dialed up");
  4    73 
  4    74 /* Values for "cdte.in_use" and "ate.active" */
  4    75 
  4    76 dcl  (NOW_FREE init (0),				/* Entry is empty. */
  4    77      NOW_HUNG_UP init (1),				/* Entry is usable but tty is hung up. */
  4    78      NOW_LISTENING init (2),				/* Entry is waiting for phone call. */
  4    79      NOW_DIALED init (3),				/* Entry is connected but login not complete. */
  4    80      NOW_LOGGED_IN init (4),				/* Entry is logged in but no process. */
  4    81      NOW_HAS_PROCESS init (5),			/* Entry has a valid process. */
  4    82      NOW_DIALING init (6),				/* Entry (auto_call line) is dialing */
  4    83      NOW_DIALED_OUT init (7)				/* Entry (auto_call line) is in use */
  4    84      ) fixed bin internal static options (constant);
  4    85 
  4    86 dcl  ACTIVE_VALUES (0:5) char (18) aligned int static options (constant) init
  4    87 						/* names of ute.active values */
  4    88 	("free", "hung-up", "listening", "dialed", "logged in, no proc", "logged in & proc");
  4    89 
  4    90 
  4    91 /**** Values for ute.tag */
  4    92 
  4    93 dcl (TAG_INTERACTIVE init("a"),
  4    94      TAG_UFT init("f"),
  4    95      TAG_ABSENTEE init("m"),
  4    96      TAG_PROXY init("p"),
  4    97      TAG_DAEMON init("z")
  4    98      ) char(1) int static options(constant);
  4    99 
  4   100 
  4   101 /**** Following are constants used to indicate to the process termination
  4   102*      handler the reason for the process termination.  They are used by
  4   103*      uc_proc_term_handler_, as well as uc_ls_new_proc_request_ and
  4   104*      uc_ls_destroy_request_. */
  4   105 
  4   106 dcl  (
  4   107      PT_FPE initial (1),
  4   108      PT_LOGOUT initial (4),
  4   109      PT_NEW_PROC_AUTH initial (13),
  4   110      PT_HANGUP initial (20),
  4   111      PT_SHUTDOWN initial (21),
  4   112      PT_BUMP initial (22),
  4   113      PT_ALARM initial (23),
  4   114      PT_DETACH initial (24),
  4   115      PT_UNBUMP initial (25),
  4   116      PT_OPERATOR_TERMINATE initial (27),
  4   117      PT_DESTROY_REQUEST initial (30),
  4   118      PT_NEW_PROC_REQUEST initial (31)
  4   119      ) fixed bin (17) internal static options (constant);
  4   120 
  4   121 /**** Values for ute.preempted:
  4   122*  -1  user unbumped after term signal sent
  4   123*   0  user unbumped; ignore alarm___
  4   124*   1  value internally used in load_ctl_
  4   125*   2  user bumped; when alarm___ comes in, send term signal
  4   126*   3  term signal sent; destroy process if termsgnl, alarm___, or cpulimit 
  4   127*      signals come in
  4   128*   4  user bumped; process sick, so destroy without sending term signal
  4   129*   5  trm_ signal sent, termsgnl received; (if still 3, we never got the 
  4   130*      termsgnl).						       */
  4   131 
  4   132 dcl  (
  4   133      PREEMPT_UNBUMP initial (-1),
  4   134      PREEMPT_UNBUMP_IGNORE_ALARM initial (0),
  4   135      PREEMPT_LOAD_CTL initial (1),
  4   136      PREEMPT_BUMPED initial (2),
  4   137      PREEMPT_TERM_SENT initial (3),
  4   138      PREEMPT_BUMPED_NO_TERM initial (4),
  4   139      PREEMPT_TERMSGNL_RECEIVED initial (5)
  4   140      ) fixed bin (17) internal static options(constant);
  4   141 
  4   142 dcl  PREEMPT_VALUES (-1:5) char(28) varying int static options(constant) init(
  4   143 	"unbumped",
  4   144 	"not bumped, ignore alarm___",
  4   145 	"load_ctl_",
  4   146 	"bumped",
  4   147 	"bumped, trm_ sent",
  4   148 	"bumped without trm_",
  4   149 	"bumped, termsgnl received");
  4   150 
  4   151 /* END INCLUDE FILE ... dialup_values.incl.pl1 */
      176 
      177  /* BEGIN INCLUDE FILE ... pit.incl.pl1 */
  5     2 
  5     3 /****^  ********************************************
  5     4*        *                                          *
  5     5*        * Copyright, (C) Honeywell Bull Inc., 1988 *
  5     6*        *                                          *
  5     7*        ******************************************** */
  5     8 
  5     9 /* Requires user_attributes.incl.pl1 */
  5    10 /* Declaration of the Process Inititalization Table  (PIT) */
  5    11 
  5    12 /****^  HISTORY COMMENTS:
  5    13*  1) change(86-03-01,Gilcrease), approve(86-03-27,MCR7370),
  5    14*     audit(86-06-25,Lippard), install(86-06-30,MR12.0-1082):
  5    15*     First comment for hcom. Modified 750430 by PG to add terminal_access_class
  5    16*     Modified 6/20/77 by J. Stern to add term_type_name Modified Feb 1980 by M.
  5    17*     B. Armstrong to implement multiple rate structures. (UNCA) Modified by R.
  5    18*     McDonald  May 1980 to include page charges, replaces cpu in iod (UNCA)
  5    19*     Modified by Benson I. Margulies November 1981 do declare pit_$, pit_ptr,
  5    20*     and unaligned character strings. Modified by E. N. Kittlitz January 1982
  5    21*     for user_attributes.incl.pl1 changes Modified by E. N. Kittlitz October
  5    22*     1982 for request_id. Modified by BIM 1984-09-12 for auth range. The max
  5    23*     copies the pds, but this is the only home of the min.
  5    24*  2) change(86-03-01,Gilcrease), approve(86-03-27,MCR7370),
  5    25*     audit(86-06-25,Lippard), install(86-06-30,MR12.0-1082):
  5    26*               Add the truncate_absout and restarted bits for the
  5    27*               -truncate .absout SCP 6297, version 3.
  5    28*  3) change(86-12-11,GDixon), approve(87-07-16,MCR7741),
  5    29*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  5    30*     Changed structure under pit.abs_attributes to use like structure in
  5    31*     abs_attributes.incl.pl1.  This allows the same attributes to be used
  5    32*     in abs_message_format.incl.pl1 and user_table_entry.incl.pl1 as well as
  5    33*     this include file.
  5    34*  4) change(88-06-03,Parisek), approve(88-06-10,MCR7920),
  5    35*     audit(88-06-23,Hunter), install(87-07-05,MR12.2-1053):
  5    36*     Remove "pitmsg" in END comment string.  pitmsg.incl.pl1 is no longer a
  5    37*     name of pit.incl.pl1.
  5    38*  5) change(88-07-11,Parisek), approve(88-07-11,MCR7849),
  5    39*     audit(88-07-03,Lippard), install(88-07-13,MR12.2-1047):
  5    40*     Removed the ringpad element and added the min_ring & max_ring elements so
  5    41*     users may access their lowest and/or highest possible login ring value.
  5    42*     SCP6367.
  5    43*                                                   END HISTORY COMMENTS */
  5    44 
  5    45 
  5    46 /* format: style4 */
  5    47 declare  pit_$ bit (36) aligned external static;
  5    48 declare  pit_ptr pointer;
  5    49 
  5    50 dcl  1 pit aligned based (pit_ptr),
  5    51        2 version fixed bin,				/* indicates which version of the pit */
  5    52        2 process_type fixed bin,			/* initializer, interactive, or absentee process */
  5    53        2 login_responder char (64) unal,		/* path name of login responder */
  5    54 
  5    55 /*  All of these are going to be word aligned whether or not they are declared aligned,
  5    56*   and unaligning them cleans up code in many places */
  5    57 
  5    58        2 homedir char (64) unal,			/* path name of home directory */
  5    59        2 project char (28) unal,			/* name of this process' project affiliation */
  5    60        2 account char (32) unal,			/* name of account to which this process is charged */
  5    61        2 n_processes fixed bin,			/* number of previous processes for this session */
  5    62        2 login_time fixed bin (71),			/* clock time at login */
  5    63        2 proc_creation_time fixed bin (71),		/* clock time at creation of this process */
  5    64        2 old_proc_cpu fixed bin (71),			/* cpu time used by previous processes in this session */
  5    65        2 user_weight fixed bin,			/* weight of this process */
  5    66        2 anonymous fixed bin,				/* 1 if anonymous user */
  5    67        2 login_name char (28) unal,			/* name of user given at login */
  5    68        2 logout_pid bit (36),				/* process id of answering service */
  5    69        2 logout_channel fixed bin (71),			/* channel for signalling logouts to answering service */
  5    70        2 group char (8) unal,				/* party group */
  5    71        2 min_ring fixed bin,				/* min ring */
  5    72        2 max_ring fixed bin,				/* max ring */
  5    73        2 at like user_attributes aligned,		/* include user_attributes.incl.pl1 */
  5    74        2 whox fixed bin,				/* this process's index in whotab (or 0) */
  5    75        2 outer_module char (32) unaligned,
  5    76        2 pad (2) fixed bin,
  5    77        2 dont_call_init_admin bit (1) aligned,		/* Call process_overseer_ directly */
  5    78        2 terminal_access_class bit (72) aligned,		/* access class of user's terminal */
  5    79        2 dollar_charge float bin,			/* Month-to-date expenditure */
  5    80        2 dollar_limit float bin,			/* Limit stop on usage */
  5    81        2 shift_limit (0:7) float bin,			/* Stops on each shift's usage */
  5    82        2 logins fixed bin,				/* Number of logins this month */
  5    83        2 crashes fixed bin,				/* Number of sessions crashed */
  5    84        2 interactive (0:7),				/* interactive usage by shift */
  5    85          3 charge float bin,				/* Total charge */
  5    86          3 xxx fixed bin,
  5    87          3 cpu fixed bin (71),			/* CPU usage in microseconds */
  5    88          3 core fixed bin (71),			/* Memory usage in page-microseconds */
  5    89          3 connect fixed bin (71),			/* Connect time in microseconds */
  5    90          3 io_ops fixed bin (71),			/* Terminal I/O operations */
  5    91        2 absentee (4),				/* Absentee usage by queue */
  5    92          3 charge float bin,				/* Total absentee charge */
  5    93          3 jobs fixed bin,				/* Number of jobs */
  5    94          3 cpu fixed bin (71),			/* CPU usage in microseconds */
  5    95          3 memory fixed bin (71),			/* Memory usage in mu */
  5    96        2 iod (4),					/* IO Daemon usage, by queue */
  5    97          3 charge float bin,				/* Total charge */
  5    98          3 pieces fixed bin,				/* Number of requests */
  5    99          3 pad fixed bin (35),
  5   100          3 pages fixed bin (35),			/* number of pages output */
  5   101          3 lines fixed bin (71),			/* Record count */
  5   102        2 devices (16) float bin,			/* Usage of attached devices */
  5   103        2 time_last_reset fixed bin (71),		/* time last updated the PDT */
  5   104        2 absolute_limit float bin,			/* Limit, not reset monthly */
  5   105        2 absolute_spent float bin,			/* Spending against this */
  5   106        2 absolute_cutoff fixed bin (71),		/* Spending will be reset on this date */
  5   107        2 absolute_increm fixed bin,			/* .. time increment code. 0 = don't reset */
  5   108        2 rs_number fixed bin (9) unsigned unaligned,	/* rate structure number (0= default rates) */
  5   109        2 pad1a fixed bin (27) unsigned unaligned,		/* remainder of word */
  5   110        2 request_id fixed bin (71),			/* absentee request id */
  5   111        2 authorization_range (2) bit (72) aligned,
  5   112        2 pad1 (73) fixed bin,				/* extra space */
  5   113        2 charge_type fixed bin,			/* device charge type of console */
  5   114        2 term_type_name char (32) unal,			/* terminal type name */
  5   115        2 line_type fixed bin,				/* line type of user's console */
  5   116        2 tty_type fixed bin,				/* old terminal type (obsolete, kept for compatibility) */
  5   117        2 service_type fixed bin,			/* type of service console is performing */
  5   118        2 tty_answerback char (4) unaligned,		/* original answerback of user's console */
  5   119        2 old_tty char (6),				/* (obsolete) attachment name of user's console */
  5   120        2 standby fixed bin,				/* 1 if standby user */
  5   121        2 login_line char (120) unal,			/* line typed at login */
  5   122        2 cant_bump_until fixed bin (71),		/* cannot be preempted until this time (0 for abs) */
  5   123        2 input_seg char (168) unal,			/* path name of absentee input file */
  5   124        2 output_seg char (168) unal,			/* path name of absentee output file */
  5   125        2 max_cpu_time fixed bin,			/* max number of seconds allowed to this absentee proc */
  5   126        2 abs_queue fixed bin,				/* absentee queue if absentee, else -1 */
  5   127        2 abs_attributes aligned like user_abs_attributes,	/* include abs_attributes.incl.pl1 */
  5   128        2 arg_info_ptr fixed bin (18) unsigned,		/* Relative pointer to information on absentee args. */
  5   129        2 old_proc_core fixed bin (71),			/* Memory usage by previous processes in this session */
  5   130        2 old_proc_io_ops fixed bin (71),		/* I/O operations from previous processes in this session */
  5   131        2 tty char (32) unaligned,			/* Attachment name of users channel */
  5   132        2 start_arg_info fixed bin;			/* Put absentee args information here. */
  5   133 
  5   134 
  5   135 /* Structure to contain information on absentee arguments */
  5   136 dcl  1 arg_info aligned based,
  5   137        2 arg_count fixed bin,				/* Number of arguments for replacement in absentee segment */
  5   138        2 ln_args fixed bin,				/* Length of string containing arguments. */
  5   139        2 arg_lengths (25 refer (arg_info.arg_count)) fixed bin, /* Array of argument lengths */
  5   140        2 args char (128 refer (arg_info.ln_args)) unal;
  5   141 						/* Args used for replacement in absentee control segment. */
  5   142 
  5   143 declare PIT_version_3 fixed bin int static options (constant) init (3);
  5   144 
  5   145 /* END INCLUDE FILE ... pit.incl.pl1 */
      177 
      178  /* BEGIN INCLUDE FILE sys_log_constants.incl.pl1 ... 82-09-24 E. N. Kittlitz */
  6     2 
  6     3 
  6     4 /****^  HISTORY COMMENTS:
  6     5*  1) change(87-04-22,GDixon), approve(87-06-10,MCR7708),
  6     6*     audit(87-06-02,Parisek), install(87-08-04,MR12.1-1056):
  6     7*     Added sl_info structure and associated named constants for use in calling
  6     8*     sys_log_$general.
  6     9*                                                   END HISTORY COMMENTS */
  6    10 
  6    11 
  6    12 /* format: style4 */
  6    13 
  6    14 dcl  (
  6    15      SL_TYPE_CRASH init (-3),				/* type message with banner & kill system */
  6    16      SL_TYPE_BEEP init (-2),				/* type message with banner */
  6    17      SL_TYPE init (-1),				/* type message */
  6    18      SL_LOG_SILENT init (0),				/* log message */
  6    19      SL_LOG init (1),				/* log & type message */
  6    20      SL_LOG_BEEP init (2),				/* log & type message with banner */
  6    21      SL_LOG_CRASH init (3)				/* log & type message with banner & kill system */
  6    22      ) fixed bin internal static options (constant);
  6    23 
  6    24 dcl  1 sl_info aligned automatic,
  6    25        2 version char(8),			/* structure version       */
  6    26        2 arg_list_ptr ptr,			/* arg_list with values    */
  6    27        2 loc,
  6    28          3 (mode, severity, code, caller, data, class, ioa_msg) fixed bin,
  6    29            /* These flags control where the corresponding data item is found.*/
  6    30 	 /*  -1: data appears in the corresponding structure element below */
  6    31 	 /*   0: data is not present anywhere			       */
  6    32 	 /*  +N: data is Nth item in argument list pointed to by 	       */
  6    33 	 /*      sl_info.arg_list_ptr.  Upon return, data copied into      */
  6    34 	 /*      corresponding structure element.		       */
  6    35 	 /*  if data = +N:					       */
  6    36 	 /*      argN is data_ptr, argN+1 is data_len		       */
  6    37 	 /*  if ioa_msg = +N:				       */
  6    38 	 /*      argN+1, ... argLAST are arguments substituted into the    */
  6    39 	 /*      ioa_msg control string.  The formatted msg is returned.   */
  6    40        2 flags,
  6    41          3 ioa_msg_is_error_code bit(1) unal,	/* ioa_ctl is error code.  */
  6    42          3 flags_pad bit(35) unal,
  6    43        2 mode fixed bin,			/* as-mode, command-mode   */
  6    44        2 severity fixed bin,			/* error severity	       */
  6    45        2 code fixed bin(35),			/* error table code        */
  6    46        2 caller char(65) varying,		/* caller refname$entryname*/
  6    47        2 data,				/* binary data ptr/length  */
  6    48          3 data_ptr ptr,
  6    49          3 data_lth fixed bin(21),
  6    50        2 class char(10) varying,		/* binary data class       */
  6    51        2 ioa_msg char(500) varying;		/* formatted message text  */
  6    52 
  6    53 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  6    54 /*							       */
  6    55 /* If data values (eg, sl_info.caller) are passed in the argument list,      */
  6    56 /* their data types should be as shown in the structure above, except that   */
  6    57 /* character strings should be char(*) nonvarying.		       */
  6    58 /*							       */
  6    59 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  6    60 
  6    61 /* value for sl_info.version */
  6    62 dcl  SL_INFO_version_1 char (8) int static options(constant) init("sl_info1");
  6    63 
  6    64 /* values for sl_info.mode */
  6    65 dcl (SL_INFO_as_mode init(1),
  6    66      SL_INFO_command_mode init(2)) fixed bin int static options(constant);
  6    67 
  6    68 /* values for sl_info.loc.(severity code caller data class ioa_ctl arg) */
  6    69 dcl (SL_INFO_arg_given_in_structure init(-1),
  6    70      SL_INFO_arg_not_given init(0)) fixed bin int static options(constant);
  6    71 
  6    72 
  6    73 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  6    74 /*							       */
  6    75 /* The following static structures are commonly used in the Login Server     */
  6    76 /* user control software.					       */
  6    77 /*							       */
  6    78 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  6    79 
  6    80 /* Syntax: call Abort (severity, code, ioa_ctl, args);		       */
  6    81 
  6    82 dcl  1 sl_info_sev_code_msg		aligned int static options(constant),
  6    83        2 version char(8)		init ("sl_info1"),
  6    84        2 arg_list_ptr ptr		init (null),
  6    85        2 loc,
  6    86          3 (mode			init (-1),
  6    87 	  severity  		init ( 1),
  6    88 	  code 			init ( 2),
  6    89 	  caller 			init (-1),
  6    90 	  data 			init ( 0),
  6    91 	  class 			init ( 0),
  6    92 	  ioa_msg			init ( 3)) fixed bin,
  6    93        2 flags,
  6    94          3 ioa_msg_is_error_code bit(1) unal init ("0"b),
  6    95          3 flags_pad bit(35) unal	init ("0"b),
  6    96        2 mode fixed bin		init ( 1),
  6    97        2 severity fixed bin		init ( 0),
  6    98        2 code fixed bin(35)		init ( 0),
  6    99        2 caller char(65) varying	init (""),
  6   100        2 data,
  6   101          3 data_ptr ptr		init (null),
  6   102          3 data_lth fixed bin(21)	init ( 0),
  6   103        2 class char(10) varying	init (""),
  6   104        2 ioa_msg char(500) varying	init ("");
  6   105 
  6   106 /* Syntax: call Abort (severity, ioa_ctl, args);			       */
  6   107 
  6   108 dcl  1 sl_info_sev_msg		aligned int static options(constant),
  6   109        2 version char(8)		init ("sl_info1"),
  6   110        2 arg_list_ptr ptr		init (null),
  6   111        2 loc,
  6   112          3 (mode			init (-1),
  6   113 	  severity  		init ( 1),
  6   114 	  code 			init ( 0),
  6   115 	  caller 			init (-1),
  6   116 	  data 			init ( 0),
  6   117 	  class 			init ( 0),
  6   118 	  ioa_msg			init ( 2)) fixed bin,
  6   119        2 flags,
  6   120          3 ioa_msg_is_error_code bit(1) unal init ("0"b),
  6   121          3 flags_pad bit(35) unal	init ("0"b),
  6   122        2 mode fixed bin		init ( 1),
  6   123        2 severity fixed bin		init ( 0),
  6   124        2 code fixed bin(35)		init ( 0),
  6   125        2 caller char(65) varying	init (""),
  6   126        2 data,
  6   127          3 data_ptr ptr		init (null),
  6   128          3 data_lth fixed bin(21)	init ( 0),
  6   129        2 class char(10) varying	init (""),
  6   130        2 ioa_msg char(500) varying	init ("");
  6   131 
  6   132 /* Syntax: call Abort (severity, ioa_ctl_as_error_code, args);	       */
  6   133 
  6   134 dcl  1 sl_info_sev_coded_msg		aligned int static options(constant),
  6   135        2 version char(8)		init ("sl_info1"),
  6   136        2 arg_list_ptr ptr		init (null),
  6   137        2 loc,
  6   138          3 (mode			init (-1),
  6   139 	  severity  		init ( 1),
  6   140 	  code 			init ( 0),
  6   141 	  caller 			init (-1),
  6   142 	  data 			init ( 0),
  6   143 	  class 			init ( 0),
  6   144 	  ioa_msg			init ( 2)) fixed bin,
  6   145        2 flags,
  6   146          3 ioa_msg_is_error_code bit(1) unal init ("1"b),
  6   147          3 flags_pad bit(35) unal	init ("0"b),
  6   148        2 mode fixed bin		init ( 1),
  6   149        2 severity fixed bin		init ( 0),
  6   150        2 code fixed bin(35)		init ( 0),
  6   151        2 caller char(65) varying	init (""),
  6   152        2 data,
  6   153          3 data_ptr ptr		init (null),
  6   154          3 data_lth fixed bin(21)	init ( 0),
  6   155        2 class char(10) varying	init (""),
  6   156        2 ioa_msg char(500) varying	init ("");
  6   157 
  6   158 
  6   159 /* Syntax: call Abort (severity, code, error_return_label, ioa_ctl, args);   */
  6   160 
  6   161 dcl  1 sl_info_sev_code_label_msg	aligned int static options(constant),
  6   162        2 version char(8)		init ("sl_info1"),
  6   163        2 arg_list_ptr ptr		init (null),
  6   164        2 loc,
  6   165          3 (mode			init (-1),
  6   166 	  severity  		init ( 1),
  6   167 	  code 			init ( 2),
  6   168 	  caller 			init (-1),
  6   169 	  data 			init ( 0),
  6   170 	  class 			init ( 0),
  6   171 	  ioa_msg			init ( 4)) fixed bin,
  6   172        2 flags,
  6   173          3 ioa_msg_is_error_code bit(1) unal init ("0"b),
  6   174          3 flags_pad bit(35) unal	init ("0"b),
  6   175        2 mode fixed bin		init ( 1),
  6   176        2 severity fixed bin		init ( 0),
  6   177        2 code fixed bin(35)		init ( 0),
  6   178        2 caller char(65) varying	init (""),
  6   179        2 data,
  6   180          3 data_ptr ptr		init (null),
  6   181          3 data_lth fixed bin(21)	init ( 0),
  6   182        2 class char(10) varying	init (""),
  6   183        2 ioa_msg char(500) varying	init ("");
  6   184 
  6   185 /* Syntax:  call Log_error (code, ioa_ctl, args);			       */
  6   186 
  6   187 dcl  1 sl_info_code_msg		aligned int static options(constant),
  6   188        2 version char(8)		init ("sl_info1"),
  6   189        2 arg_list_ptr ptr		init (null),
  6   190        2 loc,
  6   191          3 (mode			init (-1),
  6   192 	  severity  		init (-1),
  6   193 	  code 			init ( 1),
  6   194 	  caller 			init (-1),
  6   195 	  data 			init ( 0),
  6   196 	  class 			init ( 0),
  6   197 	  ioa_msg			init ( 2)) fixed bin,
  6   198        2 flags,
  6   199          3 ioa_msg_is_error_code bit(1) unal init ("0"b),
  6   200          3 flags_pad bit(35) unal	init ("0"b),
  6   201        2 mode fixed bin		init ( 1),
  6   202        2 severity fixed bin		init ( 0),
  6   203        2 code fixed bin(35)		init ( 0),
  6   204        2 caller char(65) varying	init (""),
  6   205        2 data,
  6   206          3 data_ptr ptr		init (null),
  6   207          3 data_lth fixed bin(21)	init ( 0),
  6   208        2 class char(10) varying	init (""),
  6   209        2 ioa_msg char(500) varying	init ("");
  6   210 
  6   211 
  6   212 /* Syntax:  call Trace (ioa_ctl, args);				       */
  6   213 
  6   214 dcl  1 sl_info_msg			aligned int static options(constant),
  6   215        2 version char(8)		init ("sl_info1"),
  6   216        2 arg_list_ptr ptr		init (null),
  6   217        2 loc,
  6   218          3 (mode			init (-1),
  6   219 	  severity  		init (-1),
  6   220 	  code 			init ( 0),
  6   221 	  caller 			init (-1),
  6   222 	  data 			init ( 0),
  6   223 	  class 			init ( 0),
  6   224 	  ioa_msg			init ( 1)) fixed bin,
  6   225        2 flags,
  6   226          3 ioa_msg_is_error_code bit(1) unal init ("0"b),
  6   227          3 flags_pad bit(35) unal	init ("0"b),
  6   228        2 mode fixed bin		init ( 1),
  6   229        2 severity fixed bin		init ( 0),
  6   230        2 code fixed bin(35)		init ( 0),
  6   231        2 caller char(65) varying	init (""),
  6   232        2 data,
  6   233          3 data_ptr ptr		init (null),
  6   234          3 data_lth fixed bin(21)	init ( 0),
  6   235        2 class char(10) varying	init (""),
  6   236        2 ioa_msg char(500) varying	init ("");
  6   237 
  6   238 /* END INCLUDE FILE sys_log_constants.incl.pl1 */
      178 
      179  /* BEGIN INCLUDE FILE ... user_attributes.incl.pl1  TAC 10/79 */
  7     2 
  7     3 
  7     4 /****^  HISTORY COMMENTS:
  7     5*  1) change(86-12-11,Brunelle), approve(87-07-13,MCR7741),
  7     6*     audit(87-04-19,GDixon), install(87-08-04,MR12.1-1056):
  7     7*     Add incl for abs_attributes.incl.pl1 to automatically include absentee
  7     8*     attribute switches.
  7     9*  2) change(87-04-19,GDixon), approve(87-07-13,MCR7741),
  7    10*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  7    11*      A) Add USER_ATTRIBUTE_NAMES arrays.  attribute_names.incl.pl1 can thereby
  7    12*         be deleted.
  7    13*      B) Add constants identifying attributes that can be changed by user at
  7    14*         login, etc.
  7    15*                                                   END HISTORY COMMENTS */
  7    16 
  7    17 
  7    18 /* Modified 82-01-03  E. N. Kittlitz.  to declare a complete level-1 structure */
  7    19 
  7    20 /* format: style4 */
  7    21 dcl  1 user_attributes aligned based,			/* the user user_attributes */
  7    22        (2 administrator bit (1),			/* 1  system administrator privileges */
  7    23        2 primary_line bit (1),			/* 2  user has primary-line privileges  */
  7    24        2 nobump bit (1),				/* 2  user cannot be bumped */
  7    25        2 guaranteed_login bit (1),			/* 4  user has guaranteed login privileges */
  7    26        2 anonymous bit (1),				/* 5  used only in SAT. project may have anon.users */
  7    27        2 nopreempt bit (1),				/* 6  used only in PDT. user not preemptable by others
  7    28*						   .  of same project (distinct from "nobump") */
  7    29        2 nolist bit (1),				/* 7  don't list user on "who" */
  7    30        2 dialok bit (1),				/* 8  user may have multiple consoles */
  7    31        2 multip bit (1),				/* 9  user may have several processes */
  7    32        2 bumping bit (1),				/* 10 in SAT. Can users in project bump each other? */
  7    33        2 brief bit (1),				/* 11 no login or logout message */
  7    34        2 vinitproc bit (1),				/* 12 user may change initial procedure */
  7    35        2 vhomedir bit (1),				/* 13 user may change homedir */
  7    36        2 nostartup bit (1),				/* 14 user does not want start_up.ec */
  7    37        2 sb_ok bit (1),				/* 15 user may be standby */
  7    38        2 pm_ok bit (1),				/* 16 user may be primary */
  7    39        2 eo_ok bit (1),				/* 17 user may be edit_only */
  7    40        2 daemon bit (1),				/* 18 user may login as daemon */
  7    41        2 vdim bit (1),				/* 19 * OBSOLETE * user may change outer mdle */
  7    42        2 no_warning bit (1),				/* 20 no warning message */
  7    43        2 igroup bit (1),				/* 21 in SAT: this project may give its users individual groups
  7    44*						   .  in PDT: this user has an individual load control group */
  7    45        2 save_pdir bit (1),				/* 22 save pdir after fatal process error */
  7    46        2 disconnect_ok bit (1),			/* 23 ok to save user's disconnected processes */
  7    47        2 save_on_disconnect bit (1),			/* 24 save them unless -nosave login arg is given */
  7    48        2 pad bit (12)) unaligned;
  7    49 
  7    50 dcl  USER_ATTRIBUTE_NAMES (0:24) char (20) int static options (constant) init
  7    51     ("none",					/* 0 */
  7    52      "administrator",				/* 1 */
  7    53      "primary_line",				/* 2 */
  7    54      "nobump",					/* 3 */
  7    55      "guaranteed_login",				/* 4 */
  7    56      "anonymous",					/* 5 */
  7    57      "nopreempt",					/* 6 */
  7    58      "nolist",					/* 7 */
  7    59      "dialok",					/* 8 */
  7    60      "multip",					/* 9 */
  7    61      "bumping",					/* 10 */
  7    62      "brief",					/* 11 */
  7    63      "vinitproc",					/* 12 */
  7    64      "vhomedir",					/* 13 */
  7    65      "nostartup",					/* 14 */
  7    66      "no_secondary",				/* 15 */
  7    67      "no_prime",					/* 16 */
  7    68      "no_eo",					/* 17 */
  7    69      "daemon",					/* 18 */
  7    70      "",						/* 19 vdim OBSOLETE */
  7    71      "no_warning",					/* 20 */
  7    72      "igroup",					/* 21 */
  7    73      "save_pdir",					/* 22 */
  7    74      "disconnect_ok",				/* 23 */
  7    75      "save_on_disconnect");				/* 24 */
  7    76 
  7    77 dcl  ALT_USER_ATTRIBUTE_NAMES (0:24) char (20) int static options (constant) init
  7    78     ("null",					/* 0 */
  7    79      "admin",					/* 1 */
  7    80      "", "",					/* 2 - 3 */
  7    81      "guar",					/* 4 */
  7    82      "anon",					/* 5 */
  7    83      "", "",					/* 6 - 7 */
  7    84      "dial",					/* 8 */
  7    85      "multi_login",					/* 9 */
  7    86      "preempting",					/* 10 */
  7    87      "",						/* 11 */
  7    88      "v_process_overseer",				/* 12 */
  7    89      "v_home_dir",					/* 13 */
  7    90      "no_start_up",					/* 14 */
  7    91      "no_sec",					/* 15 */
  7    92      "no_primary",					/* 16 */
  7    93      "no_edit_only",				/* 17 */
  7    94      "op_login",					/* 18 */
  7    95      "",						/* 19 */
  7    96      "nowarn",					/* 20 */
  7    97      "", "", "",					/* 21 - 23 */
  7    98      "save");					/* 24 */
  7    99 
  7   100 dcl  USER_ATTRIBUTES_always_allowed bit (36) aligned int static
  7   101      options(constant) init("000000000010000000010000000000000000"b);
  7   102     /* SAT/PDT attributes not needed for user to give (brief, no_warning) */
  7   103 
  7   104 dcl  USER_ATTRIBUTES_default_in_pdt bit (36) aligned int static
  7   105      options(constant) init("000000000010000000010000000000000000"b);
  7   106     /* PDT value for (brief, no_warning) is default */
  7   107 
  7   108 dcl  USER_ATTRIBUTES_settable_by_user bit (36) aligned int static
  7   109      options(constant) init("000100000110010000010000000000000000"b);	
  7   110     /* user MIGHT set (bump, ns, brief, guar, no_warning) */
  7   111 
  8     1 /* BEGIN INCLUDE FILE ... user_abs_attributes.incl.pl1 */
  8     2 
  8     3 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  8     4 /*							       */
  8     5 /* This include file describes the attributes of an absentee job.  It is     */
  8     6 /* used by user_table_entry.incl.pl1, abs_message_format.incl.pl1            */
  8     7 /* and PIT.incl.pl1.   */
  8     8 /*							       */
  8     9 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  8    10 
  8    11 /****^  HISTORY COMMENTS:
  8    12*  1) change(86-12-08,GDixon), approve(87-07-13,MCR7741),
  8    13*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  8    14*     Separated abs_attributes from the request structure
  8    15*     (abs_message_format.incl.pl1) so that the identical structure could be
  8    16*     used in the ute structure (user_table_entry.incl.pl1).
  8    17*  2) change(87-04-19,GDixon), approve(87-07-13,MCR7741),
  8    18*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  8    19*     Added ABS_ATTRIBUTE_NAMES array.
  8    20*  3) change(87-11-11,Parisek), approve(88-02-11,MCR7849),
  8    21*     audit(88-03-22,Lippard), install(88-07-13,MR12.2-1047):
  8    22*     Added the no_start_up flag. SCP6367
  8    23*                                                   END HISTORY COMMENTS */
  8    24 
  8    25 dcl 1 user_abs_attributes		aligned based,
  8    26       2 restartable			bit (1) unaligned,	/* 1 if request may be started over from the beginning */
  8    27       2 user_deferred_until_time	bit (1) unaligned,	/* 1 if request was specified as deferred */
  8    28       2 proxy			bit (1) unaligned,	/* 1 if request submitted for someone else */
  8    29       2 set_bit_cnt			bit (1) unaligned,	/* 1 if should set bit count after every write call */
  8    30       2 time_in_gmt			bit (1) unaligned,	/* 1 if deferred_time is in GMT */
  8    31       2 user_deferred_indefinitely	bit (1) unaligned,	/* 1 if operator is to say when to run it */
  8    32       2 secondary_ok		bit (1) unaligned,	/* 1 if ok to log in as secondary foreground user */
  8    33       2 truncate_absout		bit (1) unaligned,	/* 1 if .absout is to be truncated */
  8    34       2 restarted			bit (1) unaligned,	/* 1 if job is restarted */
  8    35       2 no_start_up                     bit (1) unaligned,	/* 1 if requested -ns */
  8    36       2 attributes_pad		bit (26) unaligned;
  8    37 
  8    38 dcl  ABS_ATTRIBUTE_NAMES (10) char (28) varying int static options(constant) init(
  8    39 	"restartable",
  8    40 	"user_deferred_until_time",
  8    41 	"proxy",
  8    42 	"set_bit_cnt",
  8    43 	"time_in_gmt",
  8    44 	"user_deferred_indefinitely",
  8    45 	"secondary_ok",
  8    46 	"truncate_absout",
  8    47 	"restarted",
  8    48 	"no_start_up");
  8    49 
  8    50 /* END INCLUDE FILE ... user_abs_attributes.incl.pl1 */
  8    51 
  7   112 
  7   113 
  7   114 /* END INCLUDE FILE ... user_attributes.incl.pl1 */
      179 
      180  /*  BEGIN INCLUDE FILE ... user_table_entry.incl.pl1 */
  9     2 
  9     3 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  9     4 /*							       */
  9     5 /* This include file requires that the user include		       */
  9     6 /* user_attributes.incl.pl1 as well.  It also includes		       */
  9     7 /* abs_attributes.incl.pl1 itself.				       */
  9     8 /*							       */
  9     9 /* This include file must be included to use absentee_user_table.incl.pl1,   */
  9    10 /* answer_table.incl.pl1, and daemon_user_table.incl.pl1.		       */
  9    11 /*							       */
  9    12 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  9    13 
  9    14 /****^  HISTORY COMMENTS:
  9    15*  1) change(81-12-21,Gilcrease), approve(86-03-27,MCR7370),
  9    16*     audit(86-06-23,Lippard), install(86-06-30,MR12.0-1082):
  9    17*     This comment for hcom.
  9    18*     81-12-21  E. N. Kittlitz. derived from abs_user_tab.incl.pl1,
  9    19*     anstbl.incl.pl1, and dutbl.incl.pl1.
  9    20*     82-01-02 E. N. Kittlitz. user_attributes.incl.pl1 changes
  9    21*     84-04-04 BIM added privileged_dial_server and dial_server_ring
  9    22*     84-07-12 BIM added min_process_authorization
  9    23*     84-12-31 Keith Loepere added pdir_dir_quota
  9    24*     85-01-16 by E. Swenson to add ute.session_uid
  9    25*  2) change(85-11-16,Swenson), approve(87-07-13,MCR7737),
  9    26*     audit(87-04-14,GDixon), install(87-08-04,MR12.1-1056):
  9    27*     Added fields for DSA login server support.
  9    28*  3) change(86-03-27,Gilcrease), approve(86-03-27,MCR7370),
  9    29*     audit(86-06-23,Lippard), install(86-06-30,MR12.0-1082):
  9    30*     Add truncate_absout and restarted bit for -truncate absout, SCP6297.
  9    31*  4) change(86-04-09,Herbst), approve(87-07-13,MCR7697),
  9    32*     audit(87-04-14,GDixon), install(87-08-04,MR12.1-1056):
  9    33*     Added disconnection_rel_minutes.
  9    34*  5) change(86-12-08,GDixon), approve(87-07-13,MCR7741),
  9    35*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  9    36*     Changed structure under ute.abs_attributes to use like structure in
  9    37*     abs_attributes.incl.pl1.  This allows the same attributes to be used
  9    38*     in abs_message_format.incl.pl1 and pit.incl.pl1 as well as this include
  9    39*     file.
  9    40*  6) change(87-04-14,GDixon), approve(87-07-13,MCR7741),
  9    41*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  9    42*     Move constants for ute.pw_flags.mask_ctl from answer_table.incl.pl1.
  9    43*  7) change(87-04-16,GDixon), approve(87-07-13,MCR7741),
  9    44*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  9    45*      A) Global reorganization to locate things by type of data.
  9    46*      B) Eliminate ute.uflags.logged_in.
  9    47*  8) change(87-05-10,GDixon), approve(87-07-13,MCR7741),
  9    48*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  9    49*      A) Reduced overlength person and project fields to proper length.
  9    50*      B) Adjusted dialed-console section to begin on even word boundary.
  9    51*  9) change(87-05-13,GDixon), approve(87-07-13,MCR7741),
  9    52*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  9    53*     Add ute.line_type.
  9    54* 10) change(87-11-19,Parisek), approve(88-02-11,MCR7849),
  9    55*     audit(88-02-23,Lippard), install(88-07-13,MR12.2-1047):
  9    56*     Added the lowest_ring element. Used the upper half of ute.highest_ring
  9    57*     for the storage.  SCP6367
  9    58*                                                   END HISTORY COMMENTS */
  9    59 
  9    60 /* format: style4 */
  9    61 
  9    62 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  9    63 /*							       */
  9    64 /* Each of the named sections below defines a type of data.  Typing comes    */
  9    65 /* from data associated with the ute entry itself, with the person, with     */
  9    66 /* login argument data, from the main user of the data (eg, dialup_,	       */
  9    67 /* load_ctl_, login server).  Each section begins on a double-word boundary  */
  9    68 /* and is an even number of words long.  The total structure is 300 decimal  */
  9    69 /* words long.						       */
  9    70 /*							       */
  9    71 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  9    72 
  9    73 
  9    74 dcl  UTE_version_4 fixed bin internal static options (constant) init (4);
  9    75 
  9    76 dcl  utep pointer automatic init (null);
  9    77 
  9    78 dcl  1 ute based (utep) aligned,			/* individual entry in one of the user control tables */
  9    79 
  9    80 /* Variables which give state of this entry */
  9    81        2 active fixed bin,				/* state of entry. 0=>free. see dialup_values.incl.pl1 */
  9    82        2 process_type fixed bin,			/* 1=interactive, 2=absentee, 3=daemon */
  9    83        2 ute_index fixed bin,				/* index of ute in (anstbl autbl dutbl).entry array */
  9    84        2 next_free fixed bin,				/* points to previous free entry */
  9    85 
  9    86 /* Information user gave about person_id associated with this entry. */
  9    87        2 person char (24) unal,			/* user's name */
  9    88        2 project char (12) unal,			/* project of absentee user */
  9    89        2 tag char (1) unal,				/* instance tag - someday will be generated */
  9    90        2 tag_pad bit (27) unal,
  9    91        2 anonymous fixed bin,				/* 1 if anonymous, otherwise 0 */
  9    92        2 login_flags,				/* flags for login data */
  9    93          3 cpw bit (1) unal,				/* flag for wish to change password */
  9    94          3 generate_pw bit (1) unal,			/* flag meaning -generate_pw (-gpw) was used. */
  9    95          3 special_pw unal,				/* dial or slave */
  9    96 	 4 dial_pw bit (1) unal,			/* true if dial -user */
  9    97 	 4 slave_pw bit (1) unal,			/* true if slave -user */
  9    98          3 cdp bit (1) unal,				/* flag for wish to change default project */
  9    99          3 cda bit (1) unal,				/* flag to change default authorization */
  9   100          3 auth_given bit (1) unal,			/* flag to mean -authorization was used. */
  9   101          3 noprint bit (1) unal,			/* used at logout. inhibits printing. */
  9   102          3 operator bit (1) unaligned,			/* user specified -operator on login command line */
  9   103          3 pw_pad bit (25) unal,			/* spare parts */
  9   104          3 mask_ctl bit (2) unal,			/* bits controlling pw mask. See constants, below */
  9   105 						/* Must remain last in pw_flags so it does not */
  9   106 						/* appear in PW_FLAG_VALUES array below. */
  9   107        2 generated_pw char (8) unal,			/* user must type this as new password */
  9   108        2 old_password char (8) unal,			/* must match user's previous password (value scrambled) */
  9   109        2 process_authorization bit (72),		/* access_authorization of this process */
  9   110 
  9   111 /* Information user gave about process associated with this entry. */
  9   112        2 outer_module char (32) unal,			/* Name of console dim */
  9   113        2 home_dir char (64) unal,			/* initial home directory */
  9   114        2 init_proc char (64) unal,			/* name of login responder */
  9   115        2 ip_len fixed bin (17) unal,			/* length of initproc string */
  9   116        2 ss_len fixed bin (17) unal,			/* length of subsystem string */
  9   117        2 ur_at like user_attributes aligned,		/* bits on means attributes given by user */
  9   118        2 at like user_attributes aligned,		/* bits on means attribute is on */
  9   119        2 initial_ring fixed bin,			/* ring process will be started in */
  9   120        2 arg_count fixed bin,				/* number of arguments to absentee control segment */
  9   121        2 ln_args fixed bin,				/* length of string containing arguments */
  9   122        2 arg_lengths_ptr ptr,				/* pointer to array of argument lengths */
  9   123        2 args_ptr ptr,				/* pointer to arguments to absentee control segment */
  9   124 
  9   125 /* Most of the following information is relevant only to absentee processes */
  9   126        2 input_seg char (168) unal,			/* pathname of absentee control segment */
  9   127        2 output_seg char (168) unal,			/* pathname of absentee output file */
  9   128        2 request_id fixed bin (71),			/* time request was entered - used as uid of request */
  9   129        2 reservation_id fixed bin (71),			/* nonzero if job has a resource reservation */
  9   130        2 message_id bit (72),				/* message segment id assoc with absentee request */
  9   131        2 deferred_time fixed bin (71),			/* time at which absentee process should be created */
  9   132        2 max_cpu_time fixed bin (35),			/* maximum number of seconds this process can run */
  9   133        2 queue fixed bin,				/* -1=daemon;0=interactive or foreground;>0=queue no.
  9   134*						   (but see uflags.adjust_abs_q_no). */
  9   135        2 real_queue fixed bin,			/* real queue number; ute.queue gets fudged sometimes */
  9   136        2 abs_attributes aligned like user_abs_attributes,	/* include abs_attributes.incl.pl1 */
  9   137        2 abs_flags,
  9   138          3 abs_run bit (1) unal,			/* on if job was started by abs run command */
  9   139          3 notify bit (1) unal,			/* on if user wants notification at login and logout */
  9   140          3 abs_flags_pad bit (34) unal,
  9   141        2 abs_group char (8) unal,			/* original group before load_ctl_ moves it to absentee group */
  9   142        2 sender char (32) unal,			/* name of RJE station that job is from */
  9   143        2 proxy_person char (28) unal,			/* name of user who actually entered the request, if proxy */
  9   144        2 proxy_project char (9) unal,
  9   145        2 proxy_project_pad char (3) unal,
  9   146        2 abs_pad fixed bin,
  9   147 
  9   148 /* Information about process actually created */
  9   149        2 proc_id bit (36),				/* process id of absentee process */
  9   150        2 session_uid fixed bin (35),			/* Unique authentication session id */
  9   151        2 process_authorization_range (2) bit (72) aligned,
  9   152        2 audit bit (36),				/* audit flags for user */
  9   153        2 lot_size fixed bin,				/* Size of linkage offset table */
  9   154        2 kst_size fixed bin,				/* Size of process known segment table */
  9   155        2 cls_size fixed bin,				/* Size of process combined linkage */
  9   156        2 sus_channel fixed bin (71),			/* event channel on which suspended process is blocked */
  9   157        2 lowest_ring fixed bin (17) unal,		/* lowest ring permitted */
  9   158        2 highest_ring fixed bin (17) unal,		/* highest ring permitted */
  9   159        2 pdir_lvix fixed bin (17) unal,			/* index in disk table of lv where pdir is */
  9   160        2 pdir_quota fixed bin (17) unal,		/* process directory quota */
  9   161        2 pdir_dir_quota fixed bin (17) unal,		/* process directory quota for dirs */
  9   162        2 pdir_pad fixed bin(17) unal,
  9   163        2 process_pad fixed bin,
  9   164 
  9   165 /* Information about primary terminal associated with this entry */
  9   166        2 tty_name char (32) unal,			/* absentee=>"abs1", etc.  daemon=>"bk", etc. */
  9   167        2 terminal_type char (32) unaligned,		/* terminal type */
  9   168        2 line_type fixed bin,				/* line type */
  9   169        2 tty_id_code char (4) unal,			/* "none" for absentee */
  9   170        2 network_connection_type fixed bin,		/* see net_event_message.incl.pl1 */
  9   171        2 channel ptr unal,				/* points to CDT entry for user, if any */
  9   172 
  9   173 /* Variables useful for dialed terminals */
  9   174        2 ndialed_consoles fixed bin,			/* if master, number of slaves */
  9   175        2 dial_qualifier char (22) unal,			/* first argument to dial command */
  9   176        2 dial_server_ring fixed bin (3) unsigned unaligned, /* dial server intends to attach dialing in channels at this ring. */
  9   177        2 dial_server_flags,
  9   178          3 registered_dial_server bit (1) unal,		/* process is a registered dial server */
  9   179          3 privileged_dial_server bit (1) unal,		/* "1"b -> serves range of AIM classes */
  9   180          3 dial_server_flags_pad bit (13) unal,		/* fill out the word */
  9   181        2 dial_ev_chn fixed bin (71),			/* if master, control event channel */
  9   182 
  9   183 /* Information about usage/accounting.  Device usage meters are in a
  9   184*   separate segment, "devtab" */
  9   185        2 pdtep ptr,					/* ptr to user's pdt entry, where usage meters live */
  9   186        2 cpu_this_process fixed bin (71),		/* cpu used so far this process */
  9   187        2 cpu_usage fixed bin (71),			/* total cpu time used in this session */
  9   188        2 mem_usage fixed bin (71),			/* memory usage for previous processes in session */
  9   189        2 mem_this_process fixed bin (71),		/* memory usage at last update */
  9   190        2 last_update_time fixed bin (71),		/* time of last account update */
  9   191        2 session_cost float bin,			/* dollar cost of session, for printing in logout messages */
  9   192        2 ndevices fixed bin,				/* Count of attached devices */
  9   193        2 device_head fixed bin,			/* Table index of head of device chain */
  9   194        2 device_tail fixed bin,			/* Table index of tail of device chain */
  9   195        2 rs_number fixed bin (6) unsigned unal,		/* rate structure number */
  9   196        2 rs_number_pad bit(30) unal,
  9   197        2 usage_pad fixed bin,
  9   198 
  9   199 /* Information for dialup_ (control variables). */
  9   200        2 event fixed bin (71),			/* event associated with channel or user manager */
  9   201        2 uprojp ptr,				/* ptr to user project sat entry */
  9   202        2 login_time fixed bin (71),			/* time when absentee user approved by lg_ctl_ */
  9   203        2 cant_bump_until fixed bin (71),		/* bump-protection clock */
  9   204        2 recent_fatal_error_time fixed bin (71),		/* time of first error in the suspected loop */
  9   205        2 recent_fatal_error_count fixed bin,		/* counter to detect fatal process error loops */
  9   206        2 failure_reason fixed bin,			/* why login refused 1=lg_ctl, 2=act_ctl, 3=load_ctl */
  9   207        2 count fixed bin,				/* counter for logins and dialups */
  9   208        2 n_processes fixed bin,			/* number of processes created in this session */
  9   209        2 lock_value fixed bin,			/* number of locks set for this entry */
  9   210        2 login_result fixed bin,			/* 0=logged in;1=hopeless,hang him up;2=allow another attempt */
  9   211        2 login_code char (8) unal,			/* login command from LOGIN line */
  9   212        2 preempted fixed bin,				/* if ^= 0 user preempted (never for abs) */
  9   213        2 destroy_flag fixed bin,			/* >8 when awaiting destroy */
  9   214        2 logout_type char (4) unal,			/* type of logout */
  9   215        2 logout_index fixed bin,			/* to save logout handler index while waiting for termsgnl */
  9   216        2 disconnection_rel_minutes fixed bin (17) unal,	/* disconnected this many minutes after login_time */
  9   217        2 next_disconnected_ate_index fixed bin (17) unal,	/* thread of list of user's disconnected processes */
  9   218        2 work_class fixed bin,			/* work class used by priority scheduler */
  9   219        2 group char (8) unal,				/* party group identifier */
  9   220        2 whotabx fixed bin,				/* index of user's entry in whotab */
  9   221 
  9   222        2 uflags,					/* Miscellaneous flags */
  9   223          3 dont_call_init_admin bit (1) unal,		/* Call overseer directly */
  9   224          3 ip_given bit (1) unal,			/* user gave an initproc arg on login line */
  9   225          3 ss_given bit (1) unal,			/* initial_procedure contains a subsystem name */
  9   226          3 lvs_attached bit (1) unal,			/* set and used by the lv_request_ procedure */
  9   227          3 send_initial_string bit (1) unal,		/* initial string should be sent after login line read */
  9   228          3 adjust_abs_q_no bit (1) unal,		/* this is an absentee job; user_profile.queue is NOT true Q # */
  9   229          3 foreground_secondary_ok bit (1) unal,		/* ok to login foreground absentee job as secondary */
  9   230          3 foreground_job bit (1) unal,			/* job was originally from foreground queue */
  9   231          3 sus_sent bit (1) unal,			/* sus_ ips signal has been sent to process */
  9   232          3 suspended bit (1) unal,			/* process has responded to sus_ signal */
  9   233          3 ignore_cpulimit bit (1) unal,		/* process is released, but timer can't be turned off */
  9   234          3 deferral_logged bit (1) unal,		/* abs job deferral has already been logged once */
  9   235          3 save_if_disconnected bit (1) unal,		/* user wants process preserved across hangups */
  9   236          3 disconnected bit (1) unal,			/* process is disconnected from terminal */
  9   237          3 disconnected_list bit (1) unal,		/* this ate is on a list of disconnected processes */
  9   238          3 proc_create_ok bit (1) unal,			/* lg_ctl_ has set the process creation variables */
  9   239          3 activity_can_unbump bit (1) unal,		/* only bump pending is for inactivity */
  9   240          3 fpe_causes_logout bit (1) unal,		/* "1"b means don't try to new_proc after fatal process error */
  9   241          3 user_specified_immediate bit (1) unal,		/* "1"b -> don't wait around for process destruction. */
  9   242          3 uflags_pad bit (17) unal,
  9   243 
  9   244 /* Information used by load_ctl_ for the process */
  9   245        2 user_weight fixed bin,			/* usually 10 - used in load control */
  9   246        2 standby_line fixed bin,			/* 0=user has primary line, 1=standby user */
  9   247        2 bump_grace fixed bin (71),			/* bump grace in microseconds */
  9   248 
  9   249 
  9   250 /* Information for login server */
  9   251        2 login_server_info,
  9   252          3 our_handle bit (72) aligned,			/* how LS refers to us. */
  9   253          3 his_handle bit (72) aligned,			/* how we talk to LS */
  9   254          3 termination_event_channel fixed bin (71),	/* for process termination notifications to the LS */
  9   255          3 response_event_channel fixed bin (71),		/* for other communications with the LS */
  9   256          3 process_id bit (36) aligned,			/* process_id of login server */
  9   257        2 ls_pad (5) fixed bin;			/* pad to 300 decimal words */
  9   258 
  9   259 /* values for ute.process_type */
  9   260 
  9   261 dcl  (PT_INTERACTIVE initial (1),
  9   262      PT_ABSENTEE initial (2),
  9   263      PT_DAEMON initial (3)) fixed bin internal static options (constant);
  9   264 
  9   265 dcl  PROCESS_TYPE_NAMES (0:3) char(12) varying int static options(constant) init(
  9   266 	"INVALID-TYPE",
  9   267 	"interactive",
  9   268 	"absentee",
  9   269 	"daemon");
  9   270 
  9   271 dcl  TABLE_NAMES (0:3) char(20) int static options(constant) init(
  9   272 	"UNKNOWN-TABLE",
  9   273 	"answer_table",
  9   274 	"absentee_user_table",
  9   275 	"daemon_user_table");
  9   276 
  9   277 
  9   278 /* values for ute.pw_flags.mask_ctl  */
  9   279 
  9   280 dcl  (DO_MASK init ("00"b),
  9   281      DONT_MASK init ("01"b),
  9   282      DERIVE_MASK init ("10"b)) bit (2) internal static options (constant);
  9   283 
  9   284 dcl  MASK_CTL_NAMES (0:3) char(12) varying int static options(constant) init(
  9   285 	"do_mask", "dont_mask", "derive_mask", "");
  9   286 
  9   287 
  9   288 /* names for ute.pw_flags */
  9   289 
  9   290 dcl  PW_FLAG_NAMES (9) char (12) varying int static options(constant) init(
  9   291 	"cpw",
  9   292 	"generate_pw",
  9   293 	"dial_pw",
  9   294 	"slave_pw",
  9   295 	"cdp",
  9   296 	"cda",
  9   297 	"auth_given",
  9   298 	"noprint",
  9   299 	"operator");
  9   300 
  9   301 /* names for ute.uflags */
  9   302 
  9   303 dcl  UFLAG_NAMES (19) char (24) varying int static options (constant) init (
  9   304 	"dont_call_init_admin",
  9   305 	"ip_given",
  9   306 	"ss_given",
  9   307 	"lvs_attached",
  9   308 	"send_initial_string",
  9   309 	"adjust_abs_q_no",
  9   310 	"foreground_secondary_ok",
  9   311 	"foreground_job",
  9   312 	"sus_sent",
  9   313 	"suspended",
  9   314 	"ignore_cpulimit",
  9   315 	"deferral_logged",
  9   316 	"save_if_disconnected",
  9   317 	"disconnected",
  9   318 	"disconnected_list",
  9   319 	"proc_create_ok",
  9   320 	"activity_can_unbump",
  9   321 	"fpe_causes_logout",
  9   322 	"user_specified_immediate");
  9   323 
  9   324 /* names for ute.abs_flags */
  9   325 
  9   326 dcl  ABS_FLAG_NAMES (2) char (8) varying int static options (constant) init (
  9   327 	"abs_run",
  9   328 	"notify");
  9   329 
  9   330 /* names of ute.dial_server_flags */
  9   331 
  9   332 dcl  DIAL_SERVER_FLAG_NAMES (2) char (12) varying int static options (constant) init (
  9   333 	"registered",
  9   334 	"privileged");
  9   335 
  9   336 /* values of ute.login_result */
  9   337 
  9   338 dcl  LOGIN_RESULT_VALUES (0:2) char(24) varying int static options(constant) init(
  9   339 	"logged in",
  9   340 	"login failed, hangup",
  9   341 	"login failed, try again");
  9   342 
  9   343 /*  END INCLUDE FILE ... user_table_entry.incl.pl1 */
      180 
      181 
      182 end uc_set_pit_tty_info_;
      183 
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    07/13/88  0936.4  uc_set_pit_tty_info_.pl1          >special_ldd>install>MR12.2-1047>uc_set_pit_tty_info_.pl1
173          1    08/06/87  0913.4  as_data_.incl.pl1                 >ldd>include>as_data_.incl.pl1
174          2    02/12/85  1429.5  access_audit_bin_header.incl.pl1  >ldd>include>access_audit_bin_header.incl.pl1
175          3    08/06/87  0913.4  as_audit_structures.incl.pl1      >ldd>include>as_audit_structures.incl.pl1
176          4    08/06/87  0913.4  dialup_values.incl.pl1            >ldd>include>dialup_values.incl.pl1
177          5    07/13/88  0930.5  pit.incl.pl1                      >special_ldd>install>MR12.2-1047>pit.incl.pl1
178          6    08/06/87  0913.5  sys_log_constants.incl.pl1        >ldd>include>sys_log_constants.incl.pl1
179          7    08/06/87  0913.6  user_attributes.incl.pl1          >ldd>include>user_attributes.incl.pl1
7-112        8    07/13/88  0900.1  user_abs_attributes.incl.pl1      >special_ldd>install>MR12.2-1047>user_abs_attributes.incl.pl1
180          9    07/13/88  0903.2  user_table_entry.incl.pl1         >special_ldd>install>MR12.2-1047>user_table_entry.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
ME                              000247 constant        char(20)                 initial packed unaligned dcl 67 ref 141 166
PIT_version_3                          constant        fixed bin(17,0)          initial dcl 5-143 ref 101
P_code                                 parameter       fixed bin(35,0)          dcl 49 set ref 44 89*
P_utep                                 parameter       pointer                  dcl 50 ref 44 77
SL_LOG_SILENT                          constant        fixed bin(17,0)          initial dcl 6-14 ref 140 165
addr                                                   builtin function         dcl 71 ref 143 143 168 168
arg_list_ptr              2     000104 automatic       pointer                  level 2 dcl 6-24 set ref 142* 167*
arh_header_                            based           structure                level 1 dcl 2-26
arh_user_info_                         based           structure                level 1 dcl 2-39
as_channel_audit_record_               based           structure                level 1 dcl 3-74
as_data_$pit_ptr                000016 external static pointer                  dcl 1-46 ref 96
as_dial_service_audit_record_          based           structure                level 1 dcl 3-105
as_ia_audit_record_                    based           structure                level 1 dcl 3-52
audit_record_header                    based           structure                level 1 dcl 2-18
caller                   17     000104 automatic       varying char(65)         level 2 dcl 6-24 set ref 141* 166*
charge_type             513            based           fixed bin(17,0)          level 2 dcl 5-50 set ref 114*
code                            000100 automatic       fixed bin(35,0)          dcl 54 in procedure "uc_set_pit_tty_info_" set ref
                                                                                  78* 84* 85 85* 89 97* 98 98* 144* 145
code                     16     000104 automatic       fixed bin(35,0)          level 2 in structure "sl_info" dcl 6-24 in procedure
                                                                                  "uc_set_pit_tty_info_" set ref 144
cu_$arg_list_ptr                000020 constant        entry                    external dcl 136 in procedure "Abort" ref 142
cu_$arg_list_ptr                000024 constant        entry                    external dcl 161 in procedure "Log_Error_with_Code"
                                                                                  ref 167
error_table_$out_of_sequence    000014 external static fixed bin(35,0)          dcl 63 set ref 80*
hcs_$truncate_seg               000010 constant        entry                    external dcl 58 ref 97
hphcs_$set_pit_tty_info         000012 constant        entry                    external dcl 59 ref 84
length                                                 builtin function         dcl 71 ref 103 103 103
line_type               524            based           fixed bin(17,0)          level 2 in structure "pit" dcl 5-50 in procedure
                                                                                  "uc_set_pit_tty_info_" set ref 106*
line_type               336            based           fixed bin(17,0)          level 2 in structure "ute" dcl 9-78 in procedure
                                                                                  "uc_set_pit_tty_info_" ref 106
null                                                   builtin function         dcl 71 ref 9-76
old_tty                 530            based           char(6)                  level 2 dcl 5-50 set ref 103 103* 103
outer_module            112            based           char(32)                 level 2 in structure "pit" packed packed unaligned
                                                                                  dcl 5-50 in procedure "uc_set_pit_tty_info_" set
                                                                                  ref 119*
outer_module             26            based           char(32)                 level 2 in structure "ute" packed packed unaligned
                                                                                  dcl 9-78 in procedure "uc_set_pit_tty_info_" ref
                                                                                  119
person                    4            based           char(24)                 level 2 packed packed unaligned dcl 9-78 set ref 85*
pit                                    based           structure                level 1 dcl 5-50
pit_ptr                         000102 automatic       pointer                  dcl 5-48 set ref 84* 96* 97* 101 102 103 103 103 103
                                                                                  103 105 106 107 111 114 115 118 119
proc_create_ok          431(15)        based           bit(1)                   level 3 packed packed unaligned dcl 9-78 ref 80
proc_id                 276            based           bit(36)                  level 2 dcl 9-78 set ref 84*
project                  12            based           char(12)                 level 2 packed packed unaligned dcl 9-78 set ref 85*
rtrim                                                  builtin function         dcl 71 ref 103
service_type            526            based           fixed bin(17,0)          level 2 dcl 5-50 set ref 111*
severity                 15     000104 automatic       fixed bin(17,0)          level 2 dcl 6-24 set ref 140* 165*
sl_info                         000104 automatic       structure                level 1 dcl 6-24 set ref 139* 143 143 164* 168 168
sl_info_code_msg                000000 constant        structure                level 1 dcl 6-187 ref 139 164
substr                                                 builtin function         dcl 71 ref 103
sys_log_$general                000022 constant        entry                    external dcl 137 in procedure "Abort" ref 143
sys_log_$general                000026 constant        entry                    external dcl 162 in procedure "Log_Error_with_Code"
                                                                                  ref 168
tag                      15            based           char(1)                  level 2 packed packed unaligned dcl 9-78 set ref 85*
term_type_name          514            based           char(32)                 level 2 packed packed unaligned dcl 5-50 set ref
                                                                                  107*
terminal_access_class
                        125            based           bit(72)                  level 2 dcl 5-50 set ref 105*
terminal_type           326            based           char(32)                 level 2 packed packed unaligned dcl 9-78 ref 107
tty                     730            based           char(32)                 level 2 packed packed unaligned dcl 5-50 set ref
                                                                                  102* 103 103
tty_answerback          527            based           char(4)                  level 2 packed packed unaligned dcl 5-50 set ref
                                                                                  115*
tty_id_code             337            based           char(4)                  level 2 packed packed unaligned dcl 9-78 ref 115
tty_name                316            based           char(32)                 level 2 packed packed unaligned dcl 9-78 set ref 85*
                                                                                  102
tty_type                525            based           fixed bin(17,0)          level 2 dcl 5-50 set ref 118*
uflags                  431            based           structure                level 2 dcl 9-78
user_abs_attributes                    based           structure                level 1 dcl 8-25
user_attributes                        based           structure                level 1 dcl 7-21
ute                                    based           structure                level 1 dcl 9-78
utep                            000354 automatic       pointer                  initial dcl 9-76 set ref 77* 80 84 85 85 85 85 9-76*
                                                                                  102 106 107 115 119
version                                based           fixed bin(17,0)          level 2 dcl 5-50 set ref 101*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
ABS_ATTRIBUTE_NAMES                    internal static varying char(28)         initial array dcl 8-38
ABS_FLAG_NAMES                         internal static varying char(8)          initial array dcl 9-326
ACCESS_AUDIT_HEADER_VERSION_3          internal static fixed bin(9,0)           initial unsigned dcl 2-54
ACTIVE_VALUES                          internal static char(18)                 initial array dcl 4-86
ALT_USER_ATTRIBUTE_NAMES               internal static char(20)                 initial array packed unaligned dcl 7-77
ARH_TYPE_NO_PROXY                      internal static fixed bin(17,0)          initial dcl 2-52
ARH_TYPE_PROXY                         internal static fixed bin(17,0)          initial dcl 2-50
AS_AUDIT_CHANNEL_ACTIONS               internal static char(12)                 initial array packed unaligned dcl 3-193
AS_AUDIT_CHANNEL_ATTACH                internal static fixed bin(17,0)          initial dcl 3-175
AS_AUDIT_CHANNEL_DETACH                internal static fixed bin(17,0)          initial dcl 3-175
AS_AUDIT_CHANNEL_DIALIN                internal static fixed bin(17,0)          initial dcl 3-175
AS_AUDIT_CHANNEL_DIALOUT               internal static fixed bin(17,0)          initial dcl 3-175
AS_AUDIT_CHANNEL_DIAL_SYSTEM           internal static fixed bin(17,0)          initial dcl 3-175
AS_AUDIT_CHANNEL_DIRECTION             internal static char(4)                  initial array packed unaligned dcl 3-196
AS_AUDIT_CHANNEL_SERVICE_INFO          internal static char(12)                 initial array packed unaligned dcl 3-199
AS_AUDIT_DIALID_START                  internal static fixed bin(17,0)          initial dcl 3-188
AS_AUDIT_DIALID_STOP                   internal static fixed bin(17,0)          initial dcl 3-188
AS_AUDIT_PROCESS_ACTIONS               internal static char(10)                 initial array packed unaligned dcl 3-202
AS_AUDIT_PROCESS_CONNECT               internal static fixed bin(17,0)          initial dcl 3-162
AS_AUDIT_PROCESS_CREATE                internal static fixed bin(17,0)          initial dcl 3-162
AS_AUDIT_PROCESS_DESTROY               internal static fixed bin(17,0)          initial dcl 3-162
AS_AUDIT_PROCESS_DISCONNECT            internal static fixed bin(17,0)          initial dcl 3-162
AS_AUDIT_PROCESS_TERMINATE             internal static fixed bin(17,0)          initial dcl 3-162
AS_AUDIT_RECORD_CHN_VERSION_1          internal static fixed bin(9,0)           initial dcl 3-156
AS_AUDIT_RECORD_DIALID_VERSION_1       internal static fixed bin(9,0)           initial dcl 3-159
AS_AUDIT_RECORD_IA_VERSION_1           internal static fixed bin(9,0)           initial dcl 3-153
DERIVE_MASK                            internal static bit(2)                   initial packed unaligned dcl 9-280
DIAL_SERVER_FLAG_NAMES                 internal static varying char(12)         initial array dcl 9-332
DONT_MASK                              internal static bit(2)                   initial packed unaligned dcl 9-280
DO_MASK                                internal static bit(2)                   initial packed unaligned dcl 9-280
LOGIN_RESULT_VALUES                    internal static varying char(24)         initial array dcl 9-338
MASK_CTL_NAMES                         internal static varying char(12)         initial array dcl 9-284
NOW_DIALED                             internal static fixed bin(17,0)          initial dcl 4-76
NOW_DIALED_OUT                         internal static fixed bin(17,0)          initial dcl 4-76
NOW_DIALING                            internal static fixed bin(17,0)          initial dcl 4-76
NOW_FREE                               internal static fixed bin(17,0)          initial dcl 4-76
NOW_HAS_PROCESS                        internal static fixed bin(17,0)          initial dcl 4-76
NOW_HUNG_UP                            internal static fixed bin(17,0)          initial dcl 4-76
NOW_LISTENING                          internal static fixed bin(17,0)          initial dcl 4-76
NOW_LOGGED_IN                          internal static fixed bin(17,0)          initial dcl 4-76
PREEMPT_BUMPED                         internal static fixed bin(17,0)          initial dcl 4-132
PREEMPT_BUMPED_NO_TERM                 internal static fixed bin(17,0)          initial dcl 4-132
PREEMPT_LOAD_CTL                       internal static fixed bin(17,0)          initial dcl 4-132
PREEMPT_TERMSGNL_RECEIVED              internal static fixed bin(17,0)          initial dcl 4-132
PREEMPT_TERM_SENT                      internal static fixed bin(17,0)          initial dcl 4-132
PREEMPT_UNBUMP                         internal static fixed bin(17,0)          initial dcl 4-132
PREEMPT_UNBUMP_IGNORE_ALARM            internal static fixed bin(17,0)          initial dcl 4-132
PREEMPT_VALUES                         internal static varying char(28)         initial array dcl 4-142
PROCESS_TYPE_NAMES                     internal static varying char(12)         initial array dcl 9-265
PT_ABSENTEE                            internal static fixed bin(17,0)          initial dcl 9-261
PT_ALARM                               internal static fixed bin(17,0)          initial dcl 4-106
PT_BUMP                                internal static fixed bin(17,0)          initial dcl 4-106
PT_DAEMON                              internal static fixed bin(17,0)          initial dcl 9-261
PT_DESTROY_REQUEST                     internal static fixed bin(17,0)          initial dcl 4-106
PT_DETACH                              internal static fixed bin(17,0)          initial dcl 4-106
PT_FPE                                 internal static fixed bin(17,0)          initial dcl 4-106
PT_HANGUP                              internal static fixed bin(17,0)          initial dcl 4-106
PT_INTERACTIVE                         internal static fixed bin(17,0)          initial dcl 9-261
PT_LOGOUT                              internal static fixed bin(17,0)          initial dcl 4-106
PT_NEW_PROC_AUTH                       internal static fixed bin(17,0)          initial dcl 4-106
PT_NEW_PROC_REQUEST                    internal static fixed bin(17,0)          initial dcl 4-106
PT_OPERATOR_TERMINATE                  internal static fixed bin(17,0)          initial dcl 4-106
PT_SHUTDOWN                            internal static fixed bin(17,0)          initial dcl 4-106
PT_UNBUMP                              internal static fixed bin(17,0)          initial dcl 4-106
PW_FLAG_NAMES                          internal static varying char(12)         initial array dcl 9-290
SL_INFO_arg_given_in_structure         internal static fixed bin(17,0)          initial dcl 6-69
SL_INFO_arg_not_given                  internal static fixed bin(17,0)          initial dcl 6-69
SL_INFO_as_mode                        internal static fixed bin(17,0)          initial dcl 6-65
SL_INFO_command_mode                   internal static fixed bin(17,0)          initial dcl 6-65
SL_INFO_version_1                      internal static char(8)                  initial packed unaligned dcl 6-62
SL_LOG                                 internal static fixed bin(17,0)          initial dcl 6-14
SL_LOG_BEEP                            internal static fixed bin(17,0)          initial dcl 6-14
SL_LOG_CRASH                           internal static fixed bin(17,0)          initial dcl 6-14
SL_TYPE                                internal static fixed bin(17,0)          initial dcl 6-14
SL_TYPE_BEEP                           internal static fixed bin(17,0)          initial dcl 6-14
SL_TYPE_CRASH                          internal static fixed bin(17,0)          initial dcl 6-14
STATE_VALUES                           internal static char(15)                 initial array dcl 4-70
TABLE_NAMES                            internal static char(20)                 initial array packed unaligned dcl 9-271
TAG_ABSENTEE                           internal static char(1)                  initial packed unaligned dcl 4-93
TAG_DAEMON                             internal static char(1)                  initial packed unaligned dcl 4-93
TAG_INTERACTIVE                        internal static char(1)                  initial packed unaligned dcl 4-93
TAG_PROXY                              internal static char(1)                  initial packed unaligned dcl 4-93
TAG_UFT                                internal static char(1)                  initial packed unaligned dcl 4-93
TRA_VEC_VALUES                         internal static char(32)                 initial array dcl 4-54
TTY_DIALED                             internal static fixed bin(17,0)          initial dcl 4-64
TTY_HUNG                               internal static fixed bin(17,0)          initial dcl 4-64
TTY_KNOWN                              internal static fixed bin(17,0)          initial dcl 4-64
TTY_MASKED                             internal static fixed bin(17,0)          initial dcl 4-64
UFLAG_NAMES                            internal static varying char(24)         initial array dcl 9-303
USER_ATTRIBUTES_always_allowed         internal static bit(36)                  initial dcl 7-100
USER_ATTRIBUTES_default_in_pdt         internal static bit(36)                  initial dcl 7-104
USER_ATTRIBUTES_settable_by_user       internal static bit(36)                  initial dcl 7-108
USER_ATTRIBUTE_NAMES                   internal static char(20)                 initial array packed unaligned dcl 7-50
UTE_version_4                          internal static fixed bin(17,0)          initial dcl 9-74
WAIT_ANSWERBACK                        internal static fixed bin(17,0)          initial dcl 4-25
WAIT_BEFORE_HANGUP                     internal static fixed bin(17,0)          initial dcl 4-25
WAIT_CONNECT_REQUEST                   internal static fixed bin(17,0)          initial dcl 4-25
WAIT_DELETE_CHANNEL                    internal static fixed bin(17,0)          initial dcl 4-25
WAIT_DESTROY_REQUEST                   internal static fixed bin(17,0)          initial dcl 4-25
WAIT_DETACH                            internal static fixed bin(17,0)          initial dcl 4-25
WAIT_DIALUP                            internal static fixed bin(17,0)          initial dcl 4-25
WAIT_DIAL_OUT                          internal static fixed bin(17,0)          initial dcl 4-25
WAIT_DIAL_RELEASE                      internal static fixed bin(17,0)          initial dcl 4-25
WAIT_DISCARD_WAKEUPS                   internal static fixed bin(17,0)          initial dcl 4-25
WAIT_FIN_PRIV_ATTACH                   internal static fixed bin(17,0)          initial dcl 4-25
WAIT_FIN_TANDD_ATTACH                  internal static fixed bin(17,0)          initial dcl 4-25
WAIT_GREETING_MSG                      internal static fixed bin(17,0)          initial dcl 4-25
WAIT_HANGUP                            internal static fixed bin(17,0)          initial dcl 4-25
WAIT_LOGIN_ARGS                        internal static fixed bin(17,0)          initial dcl 4-25
WAIT_LOGIN_LINE                        internal static fixed bin(17,0)          initial dcl 4-25
WAIT_LOGOUT                            internal static fixed bin(17,0)          initial dcl 4-25
WAIT_LOGOUT_HOLD                       internal static fixed bin(17,0)          initial dcl 4-25
WAIT_LOGOUT_SIG                        internal static fixed bin(17,0)          initial dcl 4-25
WAIT_NEW_PASSWORD                      internal static fixed bin(17,0)          initial dcl 4-25
WAIT_NEW_PROC                          internal static fixed bin(17,0)          initial dcl 4-25
WAIT_NEW_PROC_REQUEST                  internal static fixed bin(17,0)          initial dcl 4-25
WAIT_OLD_PASSWORD                      internal static fixed bin(17,0)          initial dcl 4-25
WAIT_PASSWORD                          internal static fixed bin(17,0)          initial dcl 4-25
WAIT_REMOVE                            internal static fixed bin(17,0)          initial dcl 4-25
WAIT_SLAVE_REQUEST                     internal static fixed bin(17,0)          initial dcl 4-25
WAIT_TANDD_HANGUP                      internal static fixed bin(17,0)          initial dcl 4-25
arg_info                               based           structure                level 1 dcl 5-136
as_channel_audit_record                based           structure                level 1 dcl 3-68
as_data_$BS                            external static char(1)                  dcl 1-21
as_data_$CR                            external static char(1)                  dcl 1-22
as_data_$abs_dim                       external static char(32)                 packed unaligned dcl 1-23
as_data_$acct_update_priority          external static fixed bin(17,0)          dcl 1-24
as_data_$acsdir                        external static char(168)                packed unaligned dcl 1-25
as_data_$ansp                          external static pointer                  dcl 1-26
as_data_$as_procid                     external static bit(36)                  dcl 1-27
as_data_$as_ring                       external static fixed bin(3,0)           dcl 1-28
as_data_$as_tty                        automatic       char(6)                  packed unaligned dcl 1-29
as_data_$asmtp                         external static pointer                  dcl 1-30
as_data_$autp                          external static pointer                  dcl 1-31
as_data_$buzzardp                      external static pointer                  dcl 1-32
as_data_$cdtp                          external static pointer                  dcl 1-33
as_data_$debug_flag                    external static bit(1)                   dcl 1-84
as_data_$default_weight                external static fixed bin(35,0)          dcl 1-34
as_data_$devtabp                       external static pointer                  dcl 1-35
as_data_$dft_user_ring                 external static fixed bin(3,0)           dcl 1-36
as_data_$dutp                          external static pointer                  dcl 1-37
as_data_$g115_dim                      external static char(32)                 packed unaligned dcl 1-38
as_data_$lct_initialized               external static bit(1)                   dcl 1-39
as_data_$lct_size                      external static fixed bin(17,0)          dcl 1-40
as_data_$login_args                    external static structure                level 1 dcl 1-62
as_data_$login_words                   external static fixed bin(17,0)          dcl 1-77
as_data_$ls_message_buffer_cur_lth     external static fixed bin(18,0)          dcl 1-86
as_data_$ls_message_buffer_max_lth     external static fixed bin(18,0)          dcl 1-87
as_data_$ls_message_buffer_ptr         external static pointer                  dcl 1-88
as_data_$ls_request_server_info_ptr    external static pointer                  dcl 1-85
as_data_$max_user_ring                 external static fixed bin(3,0)           dcl 1-41
as_data_$mgtp                          external static pointer                  dcl 1-42
as_data_$mrd_dim                       external static char(32)                 packed unaligned dcl 1-43
as_data_$ntty_dim                      external static char(32)                 packed unaligned dcl 1-44
as_data_$pdtdir                        external static char(168)                packed unaligned dcl 1-45
as_data_$rcpdir                        external static char(168)                packed unaligned dcl 1-47
as_data_$request_priority              external static fixed bin(17,0)          dcl 1-48
as_data_$rs_ptrs                       external static pointer                  array dcl 1-49
as_data_$rtdtp                         external static pointer                  dcl 1-50
as_data_$sat_htp                       external static pointer                  dcl 1-51
as_data_$satp                          external static pointer                  dcl 1-52
as_data_$signal_types                  external static structure                level 1 dcl 1-67
as_data_$suffix                        external static char(2)                  array packed unaligned dcl 1-53
as_data_$sysdir                        external static char(168)                packed unaligned dcl 1-54
as_data_$system_signal_types           external static structure                level 1 dcl 1-72
as_data_$teens_suffix                  external static char(2)                  array packed unaligned dcl 1-55
as_data_$terminet_tabs_string          external static varying char(144)        dcl 1-56
as_data_$tty_dim                       external static char(32)                 packed unaligned dcl 1-57
as_data_$update_priority               external static fixed bin(17,0)          dcl 1-58
as_data_$version                       external static char(8)                  packed unaligned dcl 1-59
as_data_$whoptr                        external static pointer                  dcl 1-60
as_data_login_words                    based           structure                level 1 dcl 1-77
as_dial_service_audit_record           based           structure                level 1 dcl 3-100
as_ia_audit_record_abs                 based           structure                level 1 dcl 3-34
as_ia_audit_record_abs_proxy           based           structure                level 1 dcl 3-41
as_ia_audit_record_int_dmn             based           structure                level 1 dcl 3-27
audit_record_header_proxy              based           structure                level 1 dcl 2-22
audit_record_ptr                       automatic       pointer                  dcl 2-16
channel_audit_info                     based           structure                level 1 dcl 3-138
channel_audit_info_ptr                 automatic       pointer                  dcl 3-136
dial_server_info                       based           structure                level 1 dcl 3-124
dial_server_info_ptr                   automatic       pointer                  dcl 3-122
pit_$                                  external static bit(36)                  dcl 5-47
sl_info_msg                            internal static structure                level 1 dcl 6-214
sl_info_sev_code_label_msg             internal static structure                level 1 dcl 6-161
sl_info_sev_code_msg                   internal static structure                level 1 dcl 6-82
sl_info_sev_coded_msg                  internal static structure                level 1 dcl 6-134
sl_info_sev_msg                        internal static structure                level 1 dcl 6-108

NAMES DECLARED BY EXPLICIT CONTEXT.
Abort                           000550 constant        entry                    internal dcl 133 ref 80 98
Log_Error_with_Code             000621 constant        entry                    internal dcl 158 ref 85
RETURN                          000432 constant        label                    dcl 89 ref 145
Setup_PIT                       000436 constant        entry                    internal dcl 93 ref 83
uc_set_pit_tty_info_            000324 constant        entry                    external dcl 44

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1022        1052     662        1032
Length      1454     662        30         366     140           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
uc_set_pit_tty_info_                328 external procedure  is an external procedure.  
Setup_PIT                               internal procedure  shares stack frame of external procedure uc_set_pit_tty_info_.  
Abort                                70 internal procedure  is declared options(variable).  
Log_Error_with_Code                  70 internal procedure  is declared options(variable).  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
uc_set_pit_tty_info_     000100 code                        uc_set_pit_tty_info_
                         000102 pit_ptr                     uc_set_pit_tty_info_
                         000104 sl_info                     uc_set_pit_tty_info_
                         000354 utep                        uc_set_pit_tty_info_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        call_int_this_desc  return_mac          tra_ext_1           ext_entry           int_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cu_$arg_list_ptr              cu_$arg_list_ptr              hcs_$truncate_seg             hphcs_$set_pit_tty_info
sys_log_$general              sys_log_$general

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
as_data_$pit_ptr              error_table_$out_of_sequence




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     44 000320    9   76 000331        77 000333        78 000337        80 000340        83 000353        84 000354
     85 000370        89 000432        91 000435        93 000436        96 000437        97 000443        98 000456
    101 000477       102 000501       103 000506       105 000526       106 000531       107 000533       111 000536
    114 000537       115 000540       118 000542       119 000543       120 000546       133 000547       139 000555
    140 000561       141 000563       142 000570       143 000576       144 000610       145 000613       147 000617
    158 000620       164 000626       165 000632       166 000634       167 000641       168 000647       170 000661


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
