Compilation listing of file >2.1spec>online>mib083074>bcpl_plist.bcpl.
Compilation performed for Martinson.SysMaint.a at 01/24/75  0659.9 mst Fri.
Compiled by BCPL version 3.4, August 1973.  Compiler updated at 09/25/73  0959.1 mst Tue.
Options applied:  source  xref  alist  optimize  6180.

     1	//  These routines are used to implement the tree, xref, and pprep options.
     2	//  Last modified on 06/06/74 at 18:26:07 by R F Mabee.
     3	//  Prepared for installation on 6180 with Version 3.4 by R F Mabee
     4	//  First installed as Version 2.7, R F Mabee
     5	
     6	//  Copyright (c) 1974 by Massachusetts Institute of Technology and Honeywell Information Systems, Inc.
     7	
     8	//  General permission is granted to copy and use this program, but not to sell it, provided that the above
     9	//  copyright statement is given.  Contact Information Processing Services, MIT, for further information.
    10	//  Please contact R F Mabee at MIT for information on this program and versions for other machines.
    11	
    12	get "bcpl_compiler_head"
	     1	//  Declarations common to the entire BCPL compiler.
	     2	//  Last modified on 07/28/73 at 03:56:32 by R F Mabee.
	     3	//  Installed on 6180 as Version 3.4, R F Mabee.
	     4	//  First installed on 645 as Version 2.7 by R F Mabee.
	     5	
	     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
	     7	//  This file may only be reproduced or modified with explicit written
	     8	//  permission of the author.  Permission is hereby extended to those
	     9	//  persons responsible for operating the Multics system to make such
	    10	//  copies as are normally required to ensure the integrity of the Multics
	    11	//  file system.  Permission is also hereby extended to those persons
	    12	//  responsible for maintaining the Multics program libraries to make such
	    13	//  copies as are normally required for online installations.
	    14	
	    15	external
	    16	     $(	Readch = "bcpl_machine_code_$Readch"		//  Library routines used by the compiler.
	    17		Writech = "bcpl_machine_code_$Writech"
	    18		WriteS = "bcpl_stream_io_$WriteS"
	    19		WriteN = "bcpl_stream_io_$WriteN"
	    20		Format = "bcpl_stream_io_$Format"
	    21		Packstring = "bcpl_machine_code_$Packstring"
	    22		Unpackstring = "bcpl_machine_code_$Unpackstring"
	    23		RemoveEscapes = "bcpl_conversions_$RemoveEscapes"
	    24		EqualString = "bcpl_strings_$EqualString"
	    25		CompareStrings = "bcpl_strings_$CompareStrings"	//  Alphabetic comparison.
	    26		Concatenate = "bcpl_strings_$Concatenate"
	    27		ConvertStoN = "bcpl_conversions_$ConvertStoN"
	    28		ConvertNtoS = "bcpl_conversions_$ConvertNtoS"
	    29		Length = "bcpl_strings_$Length"		//  Number of characters.
	    30		LengthInWords = "bcpl_strings_$LengthInWords"	//  Length of packed string.
	    31		RandomI = "bcpl_arithmetic_$RandomI"
	    32	
	    33		Newvec = "bcpl_utility$Newvec"		//  Utility routines used throughout the compiler.
	    34		Freevec = "bcpl_utility$Freevec"
	    35		List1 = "bcpl_utility$List1"
	    36		List2 = "bcpl_utility$List2"
	    37		List3 = "bcpl_utility$List3"
	    38		List4 = "bcpl_utility$List4"
	    39		List5 = "bcpl_utility$List5"
	    40		List6 = "bcpl_utility$List6"
	    41		StoreString = "bcpl_utility$StoreString"
	    42		PushInput = "bcpl_utility$PushInput"
	    43		PopInput = "bcpl_utility$PopInput"
	    44		MakeTimeString = "bcpl_utility$MakeTimeString"
	    45		Nextparam = "bcpl_utility$Nextparam"
	    46		FormCharconst = "bcpl_utility$FormCharconst"
	    47		FormStringconst = "bcpl_utility$FormStringconst"
	    48	
	    49		CaeReport = "bcpl_report$CaeReport"
	    50		Transreport = "bcpl_report$Transreport"
	    51		CGreport = "bcpl_report$CGreport"
	    52	
	    53		Nextsymb = "bcpl_lex0$Nextsymb"
	    54	
	    55		SymbolName = "bcpl_plist$SymbolName"
	    56		FindPrintName = "bcpl_plist$FindPrintName"
	    57		EnterIntoCrossreference = "bcpl_plist$EnterIntoCrossreference"
	    58	
	    59		GetVersion = "bcpl_version$GetVersion"		//  Routines used only by the driver.
	    60		UtilitiesInit = "bcpl_utility$UtilitiesInit"
	    61		Cleanup = "bcpl_utility$Cleanup"
	    62		GetStream = "bcpl_utility$GetStream"
	    63	
	    64		CAE = "bcpl_cae0$CAE"
	    65		LexInit = "bcpl_lex0$LexInit"
	    66	
	    67		Pname = "bcpl_plist$Pname"
	    68		Plist = "bcpl_plist$Plist"
	    69	
	    70		Trans = "bcpl_trans0$Trans"
	    71		CgInit = "bcpl_cg0$CgInit"
	    72		BuildObject = "bcpl_cg0$BuildObject"
	    73		WriteObjectListing = "bcpl_cg0$WriteObjectListing"
	    74	     $)
	    75	
	    76	global		//  Globals are reserved in blocks as follows:
	    77	     $(	//    0 -  31	system
	    78		//   32 -  99	library
	    79		//  100 - 149	options and other common cells
	    80		//  150 - 159	metering cells
	    81		//  160 - 169	bcpl_utility
	    82		//  170 - 199	to be assigned
	    83		//  200 - 229	lexical phase
	    84		//  230 - 249	syntax analyzer
	    85		//  250 - 299	translator
	    86		//  300 - 399	code generator
	    87	
	    88			//  Cells used for communication with the library.
	    89		OUTPUT		: 32
	    90		INPUT		: 33
	    91		MONITOR		: 34
	    92		Ch		: 36
	    93	
	    94			//  Options for this compilation.
	    95		Listing		: 100
	    96		UpperCase		: 101
	    97		PPrep		: 102
	    98		Crep		: 103
	    99		Symbols		: 104
	   100		LineMap		: 105
	   101		Optimize		: 106
	   102		Machine		: 107
	   103		Xref		: 108
	   104		OcodeSw		: 109
	   105		HaveListingFile	: 110
	   106		QuietSw		: 111
	   107	
	   108			//  Other information about this compilation.
	   109		CompilerVersionString : 120
	   110		CompilerVersionNumber : 121
	   111		CompilerDTMString	: 122
	   112		CompilerDTM	: 123
	   113		TimeNowString	: 124
	   114		TimeNow		: 125
	   115		OptionString	: 126
	   116		FileNames		: 127
	   117		FilesInfo		: 128
	   118		FileCount		: 129
	   119		ProgramName	: 130
	   120		UserID		: 131
	   121	
	   122			//  Working variables needing global scope.
	   123		LineCount		: 140
	   124		Errorsw		: 141
	   125		NAMECHAIN		: 142
	   126		Symb		: 143
	   127		DictionaryEntry	: 144
	   128		Column		: 145
	   129	     $)
	   130	manifest
	   131	     $(	GlobalTemp = 199  $)	//  Number of cell available for local, temporary use.
	   132	
	   133	manifest
	   134	     $(	Left = 18; Right = $8777777
	   135		Endofstreamch = $87777
	   136		Even = $87777777777776
	   137		Vmax = 511
	   138		LineMask = $817777; FileShift = 13	//  Breakdown of line count.
	   139		UnexpectedCase = 99		//  Error code for use throughout compiler.
	   140	     $)
    13	get "bcpl_symbols"
	     1	//  All symbols used in the interface between any two phases of the compiler are defined here.
	     2	//  This includes all canonical symbols, syntax tree nodes, and XOCODE operators.
	     3	//  Last modified on 07/08/73 at 22:55:31 by R F Mabee.
	     4	//  Revisions installed in Version 3.4 on 6180, R F Mabee.
	     5	//  First installed with Version 2.7 by R F Mabee.
	     6	
	     7	//  Copyright (c) 1973 by the author, Robert F. Mabee.
	     8	//  This file may only be reproduced or modified with explicit written
	     9	//  permission of the author.  Permission is hereby extended to those
	    10	//  persons responsible for operating the Multics system to make such
	    11	//  copies as are normally required to ensure the integrity of the Multics
	    12	//  file system.  Permission is also hereby extended to those persons
	    13	//  responsible for maintaining the Multics program libraries to make such
	    14	//  copies as are normally required for online installations.
	    15	
	    16	manifest
	    17	     $(	AND_S = 1
	    18		ASSIGN_S = 2
	    19		BE_S = 3
	    20		BIT_S = 4
	    21		BREAK_S = 5
	    22		BY_S = 6
	    23		CALL_S = 07
	    24		CASE_S = 08
	    25	
	    26		CHAR_S = 10
	    27		CHARCONST_S = 11
	    28		COLON_S = 12
	    29		COMMA_S = 13
	    30		COND_S = 14
	    31		CONSTANT_S = 15
	    32		CONSTDEF_S = 16
	    33		DEFAULT_S = 17
	    34		DIV_F = 18
	    35	
	    36		DIV_S = 20
	    37		DO_S = 21
	    38		DOUBLE_S = 22
	    39		ENDCASE_S = 23
	    40		ENDPROG_S = 24
	    41		ERROR_S = 25
	    42		EQ_F = 26
	    43		EQ_S = 27
	    44		EQV_S = 28
	    45	
	    46		EXTERNAL_S = 30
	    47		FALSE_S = 31
	    48		FINISH_S = 32
	    49		FIXED_S = 33
	    50		FLOAT_S = 34
	    51		FNAP_S = 35
	    52		FNDEF_S = 36
	    53		FOR_S = 37
	    54		GE_F = 38
	    55	
	    56		GE_S = 40
	    57		GET_S = 41
	    58		GLOBAL_S = 42
	    59		GOTO_S = 43
	    60		GR_F = 44
	    61		GR_S = 45
	    62		IF_S = 46
	    63		IFNOT_S = 47
	    64		IFSO_S = 48
	    65	
	    66		INTO_S = 50
	    67		LABDEF_S = 51
	    68		LABEL_S = 52
	    69		LE_F = 53
	    70		LE_S = 54
	    71		LENGTH_S = 55
	    72		LET_S = 56
	    73		LIST_S = 57
	    74		LOCAL_S = 58
	    75	
	    76		LOGAND_S = 60
	    77		LOGOR_S = 61
	    78		LOOP_S = 62
	    79		LS_F = 63
	    80		LS_S = 64
	    81		LSHIFT_S = 65
	    82		LV_S = 66
	    83		LVECAP_S = 67
	    84		LV_ARG_OUT = 68
	    85	
	    86		LV_FNAP_RESULT = 70
	    87		LV_GLOBAL = 71
	    88		LV_LOCAL = 72
	    89		LV_STATIC = 73
	    90		LV_TEMP = 74
	    91		MAIN_S = 75
	    92		MANIFEST_S = 76
	    93		MINUS_F = 77
	    94		MINUS_S = 78
	    95	
	    96		MULT_F = 80
	    97		MULT_S = 81
	    98		NAME_S = 82
	    99		NEG_F = 83
	   100		NEG_S = 84
	   101		NEQV_S = 85
	   102		NE_F = 86
	   103		NE_S = 87
	   104		NIL_S = 88
	   105	
	   106		NOT_S = 90
	   107		NUMBER_S = 91
	   108		OFFSET_S = 92
	   109		OR_S = 93
	   110		PLUS_F = 94
	   111		PLUS_S = 95
	   112		POINTER_S = 96
	   113		POS_F = 97
	   114		POS_S = 98
	   115	
	   116		RBRA_S = 100
	   117		REGISTER_S = 101
	   118		REL_S = 102
	   119		REM_S = 103
	   120		REP_S = 104
	   121		REPEAT_S = 105
	   122		REPEATUNTIL_S = 106
	   123		REPEATWHILE_S = 107
	   124		RESULTIS_S = 108
	   125	
	   126		RETURN_S = 110
	   127		RKET_S = 111
	   128		RSHIFT_S = 112
	   129		RTAP_S = 113
	   130		RTDEF_S = 114
	   131		RV_S = 115
	   132		SBRA_S = 116
	   133		SECTBEGIN_S = 117
	   134		SECTBRA_S = 118
	   135	
	   136		SECTEND_S = 120
	   137		SECTKET_S = 121
	   138		SEMICOLON_S = 122
	   139		SKET_S = 123
	   140		STATIC_S = 124
	   141		STRING_S = 125
	   142		STRINGCONST_S = 126
	   143		STRUCTURE_S = 127
	   144		SWITCHON_S = 128
	   145	
	   146		TABLE_S = 130
	   147		TEMP_S = 131
	   148		TEST_S = 132
	   149		TO_S = 133
	   150		TRUE_S = 134
	   151		TYPE_S = 135
	   152		UNLESS_S = 136
	   153		UNTIL_S = 137
	   154		VALDEF_S = 138
	   155	
	   156		VALOF_S = 140
	   157		VEC_S = 141
	   158		VECAP_S = 142
	   159		WHILE_S = 143
	   160	     $)
    14	get "bcpl_metering_head"
	     1	//  Variables and constants for use in measuring performance of the various parts of the BCPL compiler.
	     2	//  Last modified on 08/14/73 at 22:09:47 by R F Mabee.
	     3	//  First installed with Version 3.4 by R F Mabee.
	     4	//  Written in April 1973 to obtain detailed info about compiler performance.
	     5	
	     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
	     7	//  This file may only be reproduced or modified with explicit written
	     8	//  permission of the author.  Permission is hereby extended to those
	     9	//  persons responsible for operating the Multics system to make such
	    10	//  copies as are normally required to ensure the integrity of the Multics
	    11	//  file system.  Permission is also hereby extended to those persons
	    12	//  responsible for maintaining the Multics program libraries to make such
	    13	//  copies as are normally required for online installations.
	    14	
	    15	external
	    16	     $(	SaveOldUsage = "bcpl_utility$SaveOldUsage"
	    17		RecordUsage = "bcpl_utility$RecordUsage"
	    18		PrintMeters = "bcpl_meter_print$PrintMeters"
	    19	     $)
	    20	
	    21	global
	    22	     $(	Metering		: 150
	    23		MeterData		: 151
	    24		DictionaryDepth	: 152
	    25		TotalLines	: 153
	    26		TotalWords	: 154
	    27	     $)
	    28	
	    29	manifest
	    30	     $(	DriverOverhead_Meter = 0
	    31		SyntaxAnalysis_Meter = 3
	    32		Nextsymb_Meter	= 6
	    33		ProcessGet_Meter	= 9
	    34		SymbolAdd_Meter	= 12
	    35		SymbolSearch_Meter	= 15
	    36		RchWithoutListing_Meter = 18
	    37		RchWithListing_Meter	= 21
	    38		PrintXref_Meter	= 24
	    39		MakeObject_Meter	= 27
	    40		CompileSwitchWithoutOptimizing_Meter = 30
	    41		CompileSwitchWithOptimizing_Meter = 33
	    42		SemanticTranslation_Meter = 36
	    43		CodeGeneration_Meter	= 39
	    44		CompileExpression_Meter = 42
	    45		MeteringOverhead_Meter = 45
	    46		TotalLines_Count	= 48
	    47		TextWords_Count	= 49
	    48		DictionaryDepth_Count = 50
	    49		Meters_Length	= 51
	    50	     $)
    15	
    16	
    17	let SymbolName (Op) = valof
    18	  switchon Op into
    19	     $(	default:		CGreport (UnexpectedCase, Op, "SymbolName")
    20				resultis "<unknown>"
    21	
    22		case AND_S:	resultis "AND"
    23		case ASSIGN_S:	resultis "ASSIGN"
    24		case BE_S:	resultis "BE"
    25		case BIT_S:	resultis "BIT"
    26		case BREAK_S:	resultis "BREAK"
    27		case BY_S:	resultis "BY"
    28		case CALL_S:	resultis "CALL"
    29		case CASE_S:	resultis "CASE"
    30		case CHAR_S:	resultis "CHAR"
    31		case CHARCONST_S:	resultis "CHARCONST"
    32		case COLON_S:	resultis "COLON"
    33		case COMMA_S:	resultis "COMMA"
    34		case COND_S:	resultis "COND"
    35		case CONSTANT_S:	resultis "CONSTANT"
    36		case CONSTDEF_S:	resultis "CONSTDEF"
    37		case DEFAULT_S:	resultis "DEFAULT"
    38		case DIV_F:	resultis "DIV_F"
    39		case DIV_S:	resultis "DIV"
    40		case DO_S:	resultis "DO"
    41		case DOUBLE_S:	resultis "DOUBLE"
    42		case ENDCASE_S:	resultis "ENDCASE"
    43		case ENDPROG_S:	resultis "ENDPROG"
    44		case EQ_F:	resultis "EQ_F"
    45		case EQ_S:	resultis "EQ"
    46		case EQV_S:	resultis "EQV"
    47		case ERROR_S:	resultis "<error>"
    48		case EXTERNAL_S:	resultis "EXTERNAL"
    49		case FALSE_S:	resultis "FALSE"
    50		case FINISH_S:	resultis "FINISH"
    51		case FIXED_S:	resultis "FIXED"
    52		case FLOAT_S:	resultis "FLOAT"
    53		case FNAP_S:	resultis "FNAP"
    54		case FNDEF_S:	resultis "FNDEF"
    55		case FOR_S:	resultis "FOR"
    56		case GE_F:	resultis "GE_F"
    57		case GE_S:	resultis "GE"
    58		case GLOBAL_S:	resultis "GLOBAL"
    59		case GOTO_S:	resultis "GOTO"
    60		case GR_F:	resultis "GR_F"
    61		case GR_S:	resultis "GR"
    62		case IF_S:	resultis "IF"
    63		case IFNOT_S:	resultis "IFNOT"
    64		case IFSO_S:	resultis "IFSO"
    65		case INTO_S:	resultis "INTO"
    66		case LABDEF_S:	resultis "LABDEF"
    67		case LABEL_S:	resultis "LABEL"
    68		case LE_F:	resultis "LE_F"
    69		case LE_S:	resultis "LE"
    70		case LENGTH_S:	resultis "LENGTH"
    71		case LET_S:	resultis "LET"
    72		case LIST_S:	resultis "LIST"
    73		case LOCAL_S:	resultis "LOCAL"
    74		case LOGAND_S:	resultis "LOGAND"
    75		case LOGOR_S:	resultis "LOGOR"
    76		case LOOP_S:	resultis "LOOP"
    77		case LS_F:	resultis "LS_F"
    78		case LS_S:	resultis "LS"
    79		case LSHIFT_S:	resultis "LSHIFT"
    80		case LV_S:	resultis "LV"
    81		case LV_ARG_OUT:	resultis "LV_ARG_OUT"
    82		case LV_FNAP_RESULT:resultis "LV_FNAP_RESULT"
    83		case LV_GLOBAL:	resultis "LV_GLOBAL"
    84		case LV_LOCAL:	resultis "LV_LOCAL"
    85		case LV_STATIC:	resultis "LV_STATIC"
    86		case LV_TEMP:	resultis "LV_TEMP"
    87		case LVECAP_S:	resultis "LVECAP"
    88		case MAIN_S:	resultis "MAIN"
    89		case MANIFEST_S:	resultis "MANIFEST"
    90		case MINUS_F:	resultis "MINUS_F"
    91		case MINUS_S:	resultis "MINUS"
    92		case MULT_F:	resultis "MULT_F"
    93		case MULT_S:	resultis "MULT"
    94		case NAME_S:	resultis "NAME"
    95		case NE_F:	resultis "NE_F"
    96		case NE_S:	resultis "NE"
    97		case NEG_F:	resultis "NEG_F"
    98		case NEG_S:	resultis "NEG"
    99		case NEQV_S:	resultis "NEQV"
   100		case NIL_S:	resultis "NIL"
   101		case NOT_S:	resultis "NOT"
   102		case NUMBER_S:	resultis "NUMBER"
   103		case OFFSET_S:	resultis "OFFSET"
   104		case OR_S:	resultis "OR"
   105		case PLUS_F:	resultis "PLUS_F"
   106		case PLUS_S:	resultis "PLUS"
   107		case POINTER_S:	resultis "POINTER"
   108		case POS_F:	resultis "POS_F"
   109		case POS_S:	resultis "POS"
   110		case RBRA_S:	resultis "RBRA"
   111		case REGISTER_S:	resultis "REGISTER"
   112		case REL_S:	resultis "REL"
   113		case REM_S:	resultis "REM"
   114		case REP_S:	resultis "REP"
   115		case REPEAT_S:	resultis "REPEAT"
   116		case REPEATUNTIL_S:	resultis "REPEATUNTIL"
   117		case REPEATWHILE_S:	resultis "REPEATWHILE"
   118		case RESULTIS_S:	resultis "RESULTIS"
   119		case RETURN_S:	resultis "RETURN"
   120		case RKET_S:	resultis "RKET"
   121		case RSHIFT_S:	resultis "RSHIFT"
   122		case RTAP_S:	resultis "RTAP"
   123		case RTDEF_S:	resultis "RTDEF"
   124		case RV_S:	resultis "RV"
   125		case SBRA_S:	resultis "SBRA"
   126		case SECTBEGIN_S:	resultis "BEGIN"
   127		case SECTBRA_S:	resultis "SECTBRA"
   128		case SECTEND_S:	resultis "END"
   129		case SECTKET_S:	resultis "SECTKET"
   130		case SEMICOLON_S:	resultis "SEMICOLON"
   131		case SKET_S:	resultis "SKET"
   132		case STATIC_S:	resultis "STATIC"
   133		case STRING_S:	resultis "STRING"
   134		case STRINGCONST_S:	resultis "STRINGCONST"
   135		case STRUCTURE_S:	resultis "STRUCTURE"
   136		case SWITCHON_S:	resultis "SWITCHON"
   137		case TABLE_S:	resultis "TABLE"
   138		case TEMP_S:	resultis "TEMP"
   139		case TEST_S:	resultis "TEST"
   140		case TO_S:	resultis "TO"
   141		case TRUE_S:	resultis "TRUE"
   142		case TYPE_S:	resultis "TYPE"
   143		case UNLESS_S:	resultis "UNLESS"
   144		case UNTIL_S:	resultis "UNTIL"
   145		case VALDEF_S:	resultis "VALDEF"
   146		case VALOF_S:	resultis "VALOF"
   147		case VEC_S:	resultis "VEC"
   148		case VECAP_S:	resultis "VECAP"
   149		case WHILE_S:	resultis "WHILE"
   150	     $)
   151	and FindPrintName (x) = valof
   152	  switchon x!0 & Right into
   153	     $(	case NAME_S:
   154		case NUMBER_S:
   155		case CHARCONST_S:
   156		case STRINGCONST_S:
   157			resultis x!1
   158		default:	resultis SymbolName (x!0 & Right)
   159	     $)
   160	
   161	let Plist (x, n) be
   162	     $(	for i = 0 to n do Writech (OUTPUT, '|')
   163		Writech (OUTPUT, '*s')
   164		if x = 0 do
   165		     $(	WriteS ("<empty>*n")
   166			return
   167		     $)
   168		let s, t = 1, 0
   169		let Op = x!0 & Right
   170		t := valof switchon Op into
   171		     $(	case NIL_S: case TRUE_S: case FALSE_S:
   172			case LOOP_S: case BREAK_S: case RETURN_S:
   173			case ENDCASE_S: case FINISH_S:
   174			case ERROR_S:
   175				resultis 0
   176	
   177			case NEG_S: case NOT_S: case REL_S: case LV_S:
   178			case RV_S: case VEC_S: case VALOF_S:
   179			case TABLE_S: case GOTO_S: case RESULTIS_S:
   180			case REPEAT_S: case DEFAULT_S: case LIST_S:
   181			case NEG_F: case CALL_S:
   182			case FIXED_S: case FLOAT_S: case DOUBLE_S:
   183			case POINTER_S: case STRING_S:
   184			case POS_S: case POS_F:
   185				resultis 1
   186	
   187			case AND_S: case ASSIGN_S: case BIT_S: case CHAR_S:
   188			case COLON_S: case DIV_F: case DIV_S: case EQ_F:
   189			case EQ_S: case EQV_S: case EXTERNAL_S: case FNAP_S:
   190			case GE_F: case GE_S: case GLOBAL_S: case GR_F:
   191			case GR_S: case IF_S: case LE_F: case LE_S:
   192			case LENGTH_S: case LET_S: case LOGAND_S: case LOGOR_S:
   193			case LS_F: case LS_S: case LSHIFT_S: case MANIFEST_S:
   194			case MINUS_F: case MINUS_S: case MULT_F: case MULT_S:
   195			case NE_F: case NE_S: case NEQV_S: case OFFSET_S:
   196			case PLUS_F: case PLUS_S: case REM_S: case REP_S:
   197			case REPEATUNTIL_S: case REPEATWHILE_S: case RSHIFT_S: case RTAP_S:
   198			case SEMICOLON_S: case STATIC_S: case STRUCTURE_S:
   199			case SWITCHON_S: case TYPE_S: case UNLESS_S: case UNTIL_S:
   200			case VALDEF_S: case VECAP_S: case WHILE_S:
   201				resultis 2
   202	
   203			case CASE_S: case COND_S: case TEST_S:
   204			case CONSTDEF_S: case FNDEF_S: case RTDEF_S:
   205				resultis 3
   206	
   207			case FOR_S:
   208				resultis 5
   209	
   210			case COMMA_S:
   211				s := 2
   212				resultis x!1 + 1
   213	
   214			case CONSTANT_S:
   215				Format (OUTPUT, "CONSTANT ^d*n", x!1)
   216				return
   217	
   218			case NUMBER_S:
   219			case CHARCONST_S:
   220			case STRINGCONST_S:
   221			case NAME_S:
   222				Format (OUTPUT, "^s ^s*n", SymbolName (Op), x!1)
   223				return
   224	
   225			default:	CGreport (UnexpectedCase, Op, "Plist")
   226				resultis 0
   227		     $)
   228		Format (OUTPUT, "^s*n", SymbolName (Op))
   229		while s le t do
   230		     $(	Plist (x!s, n + 1)
   231			s := s + 1
   232		     $)
   233	     $)
   234	
   235	let Pname (x) be
   236	     $(	if x = 0 return
   237		let UsageTemp = nil
   238		if Metering do UsageTemp := SaveOldUsage ()
   239		Pname (x!1)
   240		let Chain = x!0!3
   241		unless Chain = 0 do
   242		     $(	let Last = 0		//  Cross-reference chain is created backwards, so reverse it.
   243			     $(	let Next = Chain!1
   244				Chain!1 := Last
   245				if Next = 0 break
   246				Last := Chain
   247				Chain := Next
   248			     $)	repeat
   249	
   250			WriteS (x!0!1)		//  Put out name of item being listed.
   251			Column := Length (x!0!1)
   252			Column := Column - Column rem 10
   253			     $(	Writech (OUTPUT, '*t')
   254				Column := Column + 10
   255			     $)	repeatwhile Column < 30
   256	
   257			let LastFile = -1
   258			let Number = vec 20
   259			     $(	let Line = Chain!0 rshift Left
   260				let File = Line rshift FileShift
   261				Line := Line & LineMask
   262				unless File = LastFile do
   263				     $(	let ID = FileNames!File
   264					Need (Length (ID) + 3, 90)
   265					WriteS (ID)
   266					WriteS (":*s*s")
   267					LastFile := File
   268				     $)
   269				ConvertNtoS (Line, Number, 10)
   270				Need (Length (Number) + 2, 120)
   271				WriteS (OUTPUT, Number)
   272				Chain := Chain!1
   273				if Chain = 0 break
   274				WriteS (OUTPUT, ",*s")
   275			     $)	repeat
   276			WriteS (OUTPUT, "*n*n")
   277		     $)
   278		Pname (x!2)
   279	
   280		if Metering do RecordUsage (PrintXref_Meter, UsageTemp)
   281	     $)
   282	and Need (n, Max) be
   283	     $(	Column := Column + n
   284		if Column > Max do
   285		     $(	WriteS (OUTPUT, "*n*t*t*t")
   286			Column := 30 + n
   287		     $)
   288	     $)
   289	
   290	and EnterIntoCrossreference () be		//  Make list for Pname, using current named symbol.
   291	     $(	if DictionaryEntry!3 = 0 do		//  First reference, create NAMECHAIN entry.
   292		     $(	let Q = lv NAMECHAIN
   293			     $(	let P = rv Q
   294				if P = 0 break
   295				Q := CompareStrings (DictionaryEntry!1, P!0!1) < 0 -> lv P!1, lv P!2
   296			     $)	repeat
   297			rv Q := List3 (DictionaryEntry, 0, 0)		//  Format:  NAME node, < names list, > names list.
   298		     $)
   299		DictionaryEntry!3 := List2 (LineCount lshift Left, DictionaryEntry!3)
   300	     $)



CAE time 4.9, 131 source lines per second.
cross reference table

AND_S			bcpl_symbols:  17, bcpl_plist:  22, 187

ASSIGN_S			bcpl_symbols:  18, bcpl_plist:  23, 187

BE_S			bcpl_symbols:  19, bcpl_plist:  24

BIT_S			bcpl_symbols:  20, bcpl_plist:  25, 187

BREAK_S			bcpl_symbols:  21, bcpl_plist:  26, 172

BuildObject		bcpl_compiler_head:  72

BY_S			bcpl_symbols:  22, bcpl_plist:  27

CAE			bcpl_compiler_head:  64

CaeReport			bcpl_compiler_head:  49

CALL_S			bcpl_symbols:  23, bcpl_plist:  28, 181

CASE_S			bcpl_symbols:  24, bcpl_plist:  29, 203

CgInit			bcpl_compiler_head:  71

CGreport			bcpl_compiler_head:  51, bcpl_plist:  19, 225

Ch			bcpl_compiler_head:  92

Chain			bcpl_plist:  240, 241, 243, 244, 246, 247, 259, 272, 272, 273

CHARCONST_S		bcpl_symbols:  27, bcpl_plist:  31, 155, 219

CHAR_S			bcpl_symbols:  26, bcpl_plist:  30, 187

Cleanup			bcpl_compiler_head:  61

CodeGeneration_Meter	bcpl_metering_head:  43

COLON_S			bcpl_symbols:  28, bcpl_plist:  32, 188

Column			bcpl_compiler_head:  128, bcpl_plist:  251, 252, 252, 252, 254, 254, 255, 283, 283, 284, 
			286

COMMA_S			bcpl_symbols:  29, bcpl_plist:  33, 210

CompareStrings		bcpl_compiler_head:  25, bcpl_plist:  295

CompileExpression_Meter	bcpl_metering_head:  44

CompilerDTM		bcpl_compiler_head:  112

CompilerDTMString		bcpl_compiler_head:  111

CompilerVersionNumber	bcpl_compiler_head:  110

CompilerVersionString	bcpl_compiler_head:  109

CompileSwitchWithOptimizing_Meter	bcpl_metering_head:  41

CompileSwitchWithoutOptimizing_Meter	bcpl_metering_head:  40

Concatenate		bcpl_compiler_head:  26

COND_S			bcpl_symbols:  30, bcpl_plist:  34, 203

CONSTANT_S		bcpl_symbols:  31, bcpl_plist:  35, 214

CONSTDEF_S		bcpl_symbols:  32, bcpl_plist:  36, 204

ConvertNtoS		bcpl_compiler_head:  28, bcpl_plist:  269

ConvertStoN		bcpl_compiler_head:  27

Crep			bcpl_compiler_head:  98

DEFAULT_S			bcpl_symbols:  33, bcpl_plist:  37, 180

DictionaryDepth		bcpl_metering_head:  24

DictionaryDepth_Count	bcpl_metering_head:  48

DictionaryEntry		bcpl_compiler_head:  127, bcpl_plist:  291, 295, 297, 299, 299

DIV_F			bcpl_symbols:  34, bcpl_plist:  38, 188

DIV_S			bcpl_symbols:  36, bcpl_plist:  39, 188

DOUBLE_S			bcpl_symbols:  38, bcpl_plist:  41, 182

DO_S			bcpl_symbols:  37, bcpl_plist:  40

DriverOverhead_Meter	bcpl_metering_head:  30

ENDCASE_S			bcpl_symbols:  39, bcpl_plist:  42, 173

Endofstreamch		bcpl_compiler_head:  135

ENDPROG_S			bcpl_symbols:  40, bcpl_plist:  43

EnterIntoCrossreference	bcpl_compiler_head:  57, bcpl_plist:  290

EqualString		bcpl_compiler_head:  24

EQV_S			bcpl_symbols:  44, bcpl_plist:  46, 189

EQ_F			bcpl_symbols:  42, bcpl_plist:  44, 188

EQ_S			bcpl_symbols:  43, bcpl_plist:  45, 189

Errorsw			bcpl_compiler_head:  124

ERROR_S			bcpl_symbols:  41, bcpl_plist:  47, 174

Even			bcpl_compiler_head:  136

EXTERNAL_S		bcpl_symbols:  46, bcpl_plist:  48, 189

FALSE_S			bcpl_symbols:  47, bcpl_plist:  49, 171

File			bcpl_plist:  260, 262, 263, 267

FileCount			bcpl_compiler_head:  118

FileNames			bcpl_compiler_head:  116, bcpl_plist:  263

FileShift			bcpl_compiler_head:  138, bcpl_plist:  260

FilesInfo			bcpl_compiler_head:  117

FindPrintName		bcpl_compiler_head:  56, bcpl_plist:  151

FINISH_S			bcpl_symbols:  48, bcpl_plist:  50, 173

FIXED_S			bcpl_symbols:  49, bcpl_plist:  51, 182

FLOAT_S			bcpl_symbols:  50, bcpl_plist:  52, 182

FNAP_S			bcpl_symbols:  51, bcpl_plist:  53, 189

FNDEF_S			bcpl_symbols:  52, bcpl_plist:  54, 204

Format			bcpl_compiler_head:  20, bcpl_plist:  215, 222, 228

FormCharconst		bcpl_compiler_head:  46

FormStringconst		bcpl_compiler_head:  47

FOR_S			bcpl_symbols:  53, bcpl_plist:  55, 207

Freevec			bcpl_compiler_head:  34

GetStream			bcpl_compiler_head:  62

GetVersion		bcpl_compiler_head:  59

GET_S			bcpl_symbols:  57

GE_F			bcpl_symbols:  54, bcpl_plist:  56, 190

GE_S			bcpl_symbols:  56, bcpl_plist:  57, 190

GlobalTemp		bcpl_compiler_head:  131

GLOBAL_S			bcpl_symbols:  58, bcpl_plist:  58, 190

GOTO_S			bcpl_symbols:  59, bcpl_plist:  59, 179

GR_F			bcpl_symbols:  60, bcpl_plist:  60, 190

GR_S			bcpl_symbols:  61, bcpl_plist:  61, 191

HaveListingFile		bcpl_compiler_head:  105

i			bcpl_plist:  162

ID			bcpl_plist:  263, 264, 265

IFNOT_S			bcpl_symbols:  63, bcpl_plist:  63

IFSO_S			bcpl_symbols:  64, bcpl_plist:  64

IF_S			bcpl_symbols:  62, bcpl_plist:  62, 191

INPUT			bcpl_compiler_head:  90

INTO_S			bcpl_symbols:  66, bcpl_plist:  65

LABDEF_S			bcpl_symbols:  67, bcpl_plist:  66

LABEL_S			bcpl_symbols:  68, bcpl_plist:  67

Last			bcpl_plist:  242, 244, 246

LastFile			bcpl_plist:  257, 262, 267

Left			bcpl_compiler_head:  134, bcpl_plist:  259, 299

Length			bcpl_compiler_head:  29, bcpl_plist:  251, 264, 270

LengthInWords		bcpl_compiler_head:  30

LENGTH_S			bcpl_symbols:  71, bcpl_plist:  70, 192

LET_S			bcpl_symbols:  72, bcpl_plist:  71, 192

LexInit			bcpl_compiler_head:  65

LE_F			bcpl_symbols:  69, bcpl_plist:  68, 191

LE_S			bcpl_symbols:  70, bcpl_plist:  69, 191

Line			bcpl_plist:  259, 260, 261, 261, 269

LineCount			bcpl_compiler_head:  123, bcpl_plist:  299

LineMap			bcpl_compiler_head:  100

LineMask			bcpl_compiler_head:  138, bcpl_plist:  261

List1			bcpl_compiler_head:  35

List2			bcpl_compiler_head:  36, bcpl_plist:  299

List3			bcpl_compiler_head:  37, bcpl_plist:  297

List4			bcpl_compiler_head:  38

List5			bcpl_compiler_head:  39

List6			bcpl_compiler_head:  40

Listing			bcpl_compiler_head:  95

LIST_S			bcpl_symbols:  73, bcpl_plist:  72, 180

LOCAL_S			bcpl_symbols:  74, bcpl_plist:  73

LOGAND_S			bcpl_symbols:  76, bcpl_plist:  74, 192

LOGOR_S			bcpl_symbols:  77, bcpl_plist:  75, 192

LOOP_S			bcpl_symbols:  78, bcpl_plist:  76, 172

LSHIFT_S			bcpl_symbols:  81, bcpl_plist:  79, 193

LS_F			bcpl_symbols:  79, bcpl_plist:  77, 193

LS_S			bcpl_symbols:  80, bcpl_plist:  78, 193

LVECAP_S			bcpl_symbols:  83, bcpl_plist:  87

LV_ARG_OUT		bcpl_symbols:  84, bcpl_plist:  81

LV_FNAP_RESULT		bcpl_symbols:  86, bcpl_plist:  82

LV_GLOBAL			bcpl_symbols:  87, bcpl_plist:  83

LV_LOCAL			bcpl_symbols:  88, bcpl_plist:  84

LV_S			bcpl_symbols:  82, bcpl_plist:  80, 177

LV_STATIC			bcpl_symbols:  89, bcpl_plist:  85

LV_TEMP			bcpl_symbols:  90, bcpl_plist:  86

Machine			bcpl_compiler_head:  102

MAIN_S			bcpl_symbols:  91, bcpl_plist:  88

MakeObject_Meter		bcpl_metering_head:  39

MakeTimeString		bcpl_compiler_head:  44

MANIFEST_S		bcpl_symbols:  92, bcpl_plist:  89, 193

Max			bcpl_plist:  282, 284

MeterData			bcpl_metering_head:  23

Metering			bcpl_metering_head:  22, bcpl_plist:  238, 280

MeteringOverhead_Meter	bcpl_metering_head:  45

Meters_Length		bcpl_metering_head:  49

MINUS_F			bcpl_symbols:  93, bcpl_plist:  90, 194

MINUS_S			bcpl_symbols:  94, bcpl_plist:  91, 194

MONITOR			bcpl_compiler_head:  91

MULT_F			bcpl_symbols:  96, bcpl_plist:  92, 194

MULT_S			bcpl_symbols:  97, bcpl_plist:  93, 194

n			bcpl_plist:  161, 162, 230, 282, 283, 286

NAMECHAIN			bcpl_compiler_head:  125, bcpl_plist:  292

NAME_S			bcpl_symbols:  98, bcpl_plist:  94, 153, 221

Need			bcpl_plist:  264, 270, 282

NEG_F			bcpl_symbols:  99, bcpl_plist:  97, 181

NEG_S			bcpl_symbols:  100, bcpl_plist:  98, 177

NEQV_S			bcpl_symbols:  101, bcpl_plist:  99, 195

Newvec			bcpl_compiler_head:  33

Next			bcpl_plist:  243, 245, 247

Nextparam			bcpl_compiler_head:  45

Nextsymb			bcpl_compiler_head:  53

Nextsymb_Meter		bcpl_metering_head:  32

NE_F			bcpl_symbols:  102, bcpl_plist:  95, 195

NE_S			bcpl_symbols:  103, bcpl_plist:  96, 195

NIL_S			bcpl_symbols:  104, bcpl_plist:  100, 171

NOT_S			bcpl_symbols:  106, bcpl_plist:  101, 177

Number			bcpl_plist:  258, 269, 270, 271

NUMBER_S			bcpl_symbols:  107, bcpl_plist:  102, 154, 218

OcodeSw			bcpl_compiler_head:  104

OFFSET_S			bcpl_symbols:  108, bcpl_plist:  103, 195

Op			bcpl_plist:  17, 18, 19, 169, 170, 222, 225, 228

Optimize			bcpl_compiler_head:  101

OptionString		bcpl_compiler_head:  115

OR_S			bcpl_symbols:  109, bcpl_plist:  104

OUTPUT			bcpl_compiler_head:  89, bcpl_plist:  162, 163, 215, 222, 228, 253, 271, 274, 276, 285

P			bcpl_plist:  293, 294, 295, 295, 295

Packstring		bcpl_compiler_head:  21

Plist			bcpl_compiler_head:  68, bcpl_plist:  161, 230

PLUS_F			bcpl_symbols:  110, bcpl_plist:  105, 196

PLUS_S			bcpl_symbols:  111, bcpl_plist:  106, 196

Pname			bcpl_compiler_head:  67, bcpl_plist:  235, 239, 278

POINTER_S			bcpl_symbols:  112, bcpl_plist:  107, 183

PopInput			bcpl_compiler_head:  43

POS_F			bcpl_symbols:  113, bcpl_plist:  108, 184

POS_S			bcpl_symbols:  114, bcpl_plist:  109, 184

PPrep			bcpl_compiler_head:  97

PrintMeters		bcpl_metering_head:  18

PrintXref_Meter		bcpl_metering_head:  38, bcpl_plist:  280

ProcessGet_Meter		bcpl_metering_head:  33

ProgramName		bcpl_compiler_head:  119

PushInput			bcpl_compiler_head:  42

Q			bcpl_plist:  292, 293, 295, 297

QuietSw			bcpl_compiler_head:  106

RandomI			bcpl_compiler_head:  31

RBRA_S			bcpl_symbols:  116, bcpl_plist:  110

RchWithListing_Meter	bcpl_metering_head:  37

RchWithoutListing_Meter	bcpl_metering_head:  36

Readch			bcpl_compiler_head:  16

RecordUsage		bcpl_metering_head:  17, bcpl_plist:  280

REGISTER_S		bcpl_symbols:  117, bcpl_plist:  111

REL_S			bcpl_symbols:  118, bcpl_plist:  112, 177

RemoveEscapes		bcpl_compiler_head:  23

REM_S			bcpl_symbols:  119, bcpl_plist:  113, 196

REPEATUNTIL_S		bcpl_symbols:  122, bcpl_plist:  116, 197

REPEATWHILE_S		bcpl_symbols:  123, bcpl_plist:  117, 197

REPEAT_S			bcpl_symbols:  121, bcpl_plist:  115, 180

REP_S			bcpl_symbols:  120, bcpl_plist:  114, 196

RESULTIS_S		bcpl_symbols:  124, bcpl_plist:  118, 179

RETURN_S			bcpl_symbols:  126, bcpl_plist:  119, 172

Right			bcpl_compiler_head:  134, bcpl_plist:  152, 158, 169

RKET_S			bcpl_symbols:  127, bcpl_plist:  120

RSHIFT_S			bcpl_symbols:  128, bcpl_plist:  121, 197

RTAP_S			bcpl_symbols:  129, bcpl_plist:  122, 197

RTDEF_S			bcpl_symbols:  130, bcpl_plist:  123, 204

RV_S			bcpl_symbols:  131, bcpl_plist:  124, 178

s			bcpl_plist:  168, 211, 229, 230, 231, 231

SaveOldUsage		bcpl_metering_head:  16, bcpl_plist:  238

SBRA_S			bcpl_symbols:  132, bcpl_plist:  125

SECTBEGIN_S		bcpl_symbols:  133, bcpl_plist:  126

SECTBRA_S			bcpl_symbols:  134, bcpl_plist:  127

SECTEND_S			bcpl_symbols:  136, bcpl_plist:  128

SECTKET_S			bcpl_symbols:  137, bcpl_plist:  129

SemanticTranslation_Meter	bcpl_metering_head:  42

SEMICOLON_S		bcpl_symbols:  138, bcpl_plist:  130, 198

SKET_S			bcpl_symbols:  139, bcpl_plist:  131

STATIC_S			bcpl_symbols:  140, bcpl_plist:  132, 198

StoreString		bcpl_compiler_head:  41

STRINGCONST_S		bcpl_symbols:  142, bcpl_plist:  134, 156, 220

STRING_S			bcpl_symbols:  141, bcpl_plist:  133, 183

STRUCTURE_S		bcpl_symbols:  143, bcpl_plist:  135, 198

SWITCHON_S		bcpl_symbols:  144, bcpl_plist:  136, 199

Symb			bcpl_compiler_head:  126

SymbolAdd_Meter		bcpl_metering_head:  34

SymbolName		bcpl_compiler_head:  55, bcpl_plist:  17, 158, 222, 228

Symbols			bcpl_compiler_head:  99

SymbolSearch_Meter		bcpl_metering_head:  35

SyntaxAnalysis_Meter	bcpl_metering_head:  31

t			bcpl_plist:  168, 170, 229

TABLE_S			bcpl_symbols:  146, bcpl_plist:  137, 179

TEMP_S			bcpl_symbols:  147, bcpl_plist:  138

TEST_S			bcpl_symbols:  148, bcpl_plist:  139, 203

TextWords_Count		bcpl_metering_head:  47

TimeNow			bcpl_compiler_head:  114

TimeNowString		bcpl_compiler_head:  113

TotalLines		bcpl_metering_head:  25

TotalLines_Count		bcpl_metering_head:  46

TotalWords		bcpl_metering_head:  26

TO_S			bcpl_symbols:  149, bcpl_plist:  140

Trans			bcpl_compiler_head:  70

Transreport		bcpl_compiler_head:  50

TRUE_S			bcpl_symbols:  150, bcpl_plist:  141, 171

TYPE_S			bcpl_symbols:  151, bcpl_plist:  142, 199

UnexpectedCase		bcpl_compiler_head:  139, bcpl_plist:  19, 225

UNLESS_S			bcpl_symbols:  152, bcpl_plist:  143, 199

Unpackstring		bcpl_compiler_head:  22

UNTIL_S			bcpl_symbols:  153, bcpl_plist:  144, 199

UpperCase			bcpl_compiler_head:  96

UsageTemp			bcpl_plist:  237, 238, 280

UserID			bcpl_compiler_head:  120

UtilitiesInit		bcpl_compiler_head:  60

VALDEF_S			bcpl_symbols:  154, bcpl_plist:  145, 200

VALOF_S			bcpl_symbols:  156, bcpl_plist:  146, 178

VECAP_S			bcpl_symbols:  158, bcpl_plist:  148, 200

VEC_S			bcpl_symbols:  157, bcpl_plist:  147, 178

Vmax			bcpl_compiler_head:  137

WHILE_S			bcpl_symbols:  159, bcpl_plist:  149, 200

Writech			bcpl_compiler_head:  17, bcpl_plist:  162, 163, 253

WriteN			bcpl_compiler_head:  19

WriteObjectListing		bcpl_compiler_head:  73

WriteS			bcpl_compiler_head:  18, bcpl_plist:  165, 250, 265, 266, 271, 274, 276, 285

x			bcpl_plist:  151, 152, 157, 158, 161, 164, 169, 212, 215, 222, 230, 235, 236, 239, 240, 
			250, 251, 278

Xref			bcpl_compiler_head:  103




Trans time 3.3, 486 object words per second.
	"	Begin text of SymbolName

aa 000000  000012 123171		zero	10,42617		" SymbolName
aa 000001  155142 157154		zero	55906,56940
aa 000002  116141 155145		zero	40033,55909
			L1:
aa 000003  000000 213000  17		epaq	0		" set lp to linkage section
aa 000004  700026 764161		lprplp	sb|22,*au
aa 000005  200000 021100		adlx1	bp|0		" BCPL save
aa 000006  700000 542111		sprpbp	sb|0,x1
aa 000007  700001 544111		sprplp	sb|1,x1
aa 000010  700424 620111		eax0	sb|276,x1
aa 000011  777760 360003		anx0	-16,du
aa 000012  700025 740100		stx0	sb|21		" end of save sequence

aa 000013  000413 710004  19		tra	L7
			L8:
aa 000014  000143 236007		ldq	99,dl		" UnexpectedCase
aa 000015  700010 756111		stq	sb|8,x1
aa 000016  700002 236111		ldq	sb|2,x1		" Op
aa 000017  700011 756111		stq	sb|9,x1
aa 000020  001265 350004		eapap	L9		" "SymbolName"
aa 000021  700012 540111		sprpap	sb|10,x1
4a 000022  400034 272120		tsbbp	lp|L10,*		" CGreport
aa 000023  000006 000003		zero	6,3
aa 000024  001256 350004  20		eapap	L11		" "<unknown>"
aa 000025  000625 710004  22		tra	L5
			L12:
aa 000026  001252 350004		eapap	L13		" "AND"
aa 000027  000623 710004  23		tra	L5
			L14:
aa 000030  001246 350004		eapap	L15		" "ASSIGN"
aa 000031  000621 710004  24		tra	L5
			L16:
aa 000032  001243 350004		eapap	L17		" "BE"
aa 000033  000617 710004  25		tra	L5
			L18:
aa 000034  001237 350004		eapap	L19		" "BIT"
aa 000035  000615 710004  26		tra	L5
			L20:
aa 000036  001233 350004		eapap	L21		" "BREAK"
aa 000037  000613 710004  27		tra	L5
			L22:
aa 000040  001230 350004		eapap	L23		" "BY"
aa 000041  000611 710004  28		tra	L5
			L24:
aa 000042  001224 350004		eapap	L25		" "CALL"
aa 000043  000607 710004  29		tra	L5
			L26:
aa 000044  001220 350004		eapap	L27		" "CASE"
aa 000045  000605 710004  30		tra	L5
			L28:
aa 000046  001214 350004		eapap	L29		" "CHAR"
aa 000047  000603 710004  31		tra	L5
			L30:
aa 000050  001207 350004		eapap	L31		" "CHARCONST"
aa 000051  000601 710004  32		tra	L5
			L32:
aa 000052  001203 350004		eapap	L33		" "COLON"
aa 000053  000577 710004  33		tra	L5
			L34:
aa 000054  001177 350004		eapap	L35		" "COMMA"
aa 000055  000575 710004  34		tra	L5
			L36:
aa 000056  001173 350004		eapap	L37		" "COND"
aa 000057  000573 710004  35		tra	L5
			L38:
aa 000060  001166 350004		eapap	L39		" "CONSTANT"
aa 000061  000571 710004  36		tra	L5
			L40:
aa 000062  001161 350004		eapap	L41		" "CONSTDEF"
aa 000063  000567 710004  37		tra	L5
			L42:
aa 000064  001154 350004		eapap	L43		" "DEFAULT"
aa 000065  000565 710004  38		tra	L5
			L44:
aa 000066  001150 350004		eapap	L45		" "DIV_F"
aa 000067  000563 710004  39		tra	L5
			L46:
aa 000070  001144 350004		eapap	L47		" "DIV"
aa 000071  000561 710004  40		tra	L5
			L48:
aa 000072  001141 350004		eapap	L49		" "DO"
aa 000073  000557 710004  41		tra	L5
			L50:
aa 000074  001135 350004		eapap	L51		" "DOUBLE"
aa 000075  000555 710004  42		tra	L5
			L52:
aa 000076  001130 350004		eapap	L53		" "ENDCASE"
aa 000077  000553 710004  43		tra	L5
			L54:
aa 000100  001123 350004		eapap	L55		" "ENDPROG"
aa 000101  000551 710004  44		tra	L5
			L56:
aa 000102  001117 350004		eapap	L57		" "EQ_F"
aa 000103  000547 710004  45		tra	L5
			L58:
aa 000104  001114 350004		eapap	L59		" "EQ"
aa 000105  000545 710004  46		tra	L5
			L60:
aa 000106  001110 350004		eapap	L61		" "EQV"
aa 000107  000543 710004  47		tra	L5
			L62:
aa 000110  001103 350004		eapap	L63		" "<error>"
aa 000111  000541 710004  48		tra	L5
			L64:
aa 000112  001076 350004		eapap	L65		" "EXTERNAL"
aa 000113  000537 710004  49		tra	L5
			L66:
aa 000114  001072 350004		eapap	L67		" "FALSE"
aa 000115  000535 710004  50		tra	L5
			L68:
aa 000116  001066 350004		eapap	L69		" "FINISH"
aa 000117  000533 710004  51		tra	L5
			L70:
aa 000120  001062 350004		eapap	L71		" "FIXED"
aa 000121  000531 710004  52		tra	L5
			L72:
aa 000122  001056 350004		eapap	L73		" "FLOAT"
aa 000123  000527 710004  53		tra	L5
			L74:
aa 000124  001052 350004		eapap	L75		" "FNAP"
aa 000125  000525 710004  54		tra	L5
			L76:
aa 000126  001046 350004		eapap	L77		" "FNDEF"
aa 000127  000523 710004  55		tra	L5
			L78:
aa 000130  001042 350004		eapap	L79		" "FOR"
aa 000131  000521 710004  56		tra	L5
			L80:
aa 000132  001036 350004		eapap	L81		" "GE_F"
aa 000133  000517 710004  57		tra	L5
			L82:
aa 000134  001033 350004		eapap	L83		" "GE"
aa 000135  000515 710004  58		tra	L5
			L84:
aa 000136  001027 350004		eapap	L85		" "GLOBAL"
aa 000137  000513 710004  59		tra	L5
			L86:
aa 000140  001023 350004		eapap	L87		" "GOTO"
aa 000141  000511 710004  60		tra	L5
			L88:
aa 000142  001017 350004		eapap	L89		" "GR_F"
aa 000143  000507 710004  61		tra	L5
			L90:
aa 000144  001014 350004		eapap	L91		" "GR"
aa 000145  000505 710004  62		tra	L5
			L92:
aa 000146  001011 350004		eapap	L93		" "IF"
aa 000147  000503 710004  63		tra	L5
			L94:
aa 000150  001005 350004		eapap	L95		" "IFNOT"
aa 000151  000501 710004  64		tra	L5
			L96:
aa 000152  001001 350004		eapap	L97		" "IFSO"
aa 000153  000477 710004  65		tra	L5
			L98:
aa 000154  000775 350004		eapap	L99		" "INTO"
aa 000155  000475 710004  66		tra	L5
			L100:
aa 000156  000771 350004		eapap	L101		" "LABDEF"
aa 000157  000473 710004  67		tra	L5
			L102:
aa 000160  000765 350004		eapap	L103		" "LABEL"
aa 000161  000471 710004  68		tra	L5
			L104:
aa 000162  000761 350004		eapap	L105		" "LE_F"
aa 000163  000467 710004  69		tra	L5
			L106:
aa 000164  000756 350004		eapap	L107		" "LE"
aa 000165  000465 710004  70		tra	L5
			L108:
aa 000166  000752 350004		eapap	L109		" "LENGTH"
aa 000167  000463 710004  71		tra	L5
			L110:
aa 000170  000746 350004		eapap	L111		" "LET"
aa 000171  000461 710004  72		tra	L5
			L112:
aa 000172  000742 350004		eapap	L113		" "LIST"
aa 000173  000457 710004  73		tra	L5
			L114:
aa 000174  000736 350004		eapap	L115		" "LOCAL"
aa 000175  000455 710004  74		tra	L5
			L116:
aa 000176  000732 350004		eapap	L117		" "LOGAND"
aa 000177  000453 710004  75		tra	L5
			L118:
aa 000200  000726 350004		eapap	L119		" "LOGOR"
aa 000201  000451 710004  76		tra	L5
			L120:
aa 000202  000722 350004		eapap	L121		" "LOOP"
aa 000203  000447 710004  77		tra	L5
			L122:
aa 000204  000716 350004		eapap	L123		" "LS_F"
aa 000205  000445 710004  78		tra	L5
			L124:
aa 000206  000713 350004		eapap	L125		" "LS"
aa 000207  000443 710004  79		tra	L5
			L126:
aa 000210  000707 350004		eapap	L127		" "LSHIFT"
aa 000211  000441 710004  80		tra	L5
			L128:
aa 000212  000704 350004		eapap	L129		" "LV"
aa 000213  000437 710004  81		tra	L5
			L130:
aa 000214  000677 350004		eapap	L131		" "LV_ARG_OUT"
aa 000215  000435 710004  82		tra	L5
			L132:
aa 000216  000671 350004		eapap	L133		" "LV_FNAP_RESULT"
aa 000217  000433 710004  83		tra	L5
			L134:
aa 000220  000664 350004		eapap	L135		" "LV_GLOBAL"
aa 000221  000431 710004  84		tra	L5
			L136:
aa 000222  000657 350004		eapap	L137		" "LV_LOCAL"
aa 000223  000427 710004  85		tra	L5
			L138:
aa 000224  000652 350004		eapap	L139		" "LV_STATIC"
aa 000225  000425 710004  86		tra	L5
			L140:
aa 000226  000645 350004		eapap	L141		" "LV_TEMP"
aa 000227  000423 710004  87		tra	L5
			L142:
aa 000230  000641 350004		eapap	L143		" "LVECAP"
aa 000231  000421 710004  88		tra	L5
			L144:
aa 000232  000635 350004		eapap	L145		" "MAIN"
aa 000233  000417 710004  89		tra	L5
			L146:
aa 000234  000630 350004		eapap	L147		" "MANIFEST"
aa 000235  000415 710004  90		tra	L5
			L148:
aa 000236  000623 350004		eapap	L149		" "MINUS_F"
aa 000237  000413 710004  91		tra	L5
			L150:
aa 000240  000617 350004		eapap	L151		" "MINUS"
aa 000241  000411 710004  92		tra	L5
			L152:
aa 000242  000613 350004		eapap	L153		" "MULT_F"
aa 000243  000407 710004  93		tra	L5
			L154:
aa 000244  000607 350004		eapap	L155		" "MULT"
aa 000245  000405 710004  94		tra	L5
			L156:
aa 000246  000603 350004		eapap	L157		" "NAME"
aa 000247  000403 710004  95		tra	L5
			L158:
aa 000250  000577 350004		eapap	L159		" "NE_F"
aa 000251  000401 710004  96		tra	L5
			L160:
aa 000252  000574 350004		eapap	L161		" "NE"
aa 000253  000377 710004  97		tra	L5
			L162:
aa 000254  000570 350004		eapap	L163		" "NEG_F"
aa 000255  000375 710004  98		tra	L5
			L164:
aa 000256  000564 350004		eapap	L165		" "NEG"
aa 000257  000373 710004  99		tra	L5
			L166:
aa 000260  000560 350004		eapap	L167		" "NEQV"
aa 000261  000371 710004  100		tra	L5
			L168:
aa 000262  000554 350004		eapap	L169		" "NIL"
aa 000263  000367 710004  101		tra	L5
			L170:
aa 000264  000550 350004		eapap	L171		" "NOT"
aa 000265  000365 710004  102		tra	L5
			L172:
aa 000266  000544 350004		eapap	L173		" "NUMBER"
aa 000267  000363 710004  103		tra	L5
			L174:
aa 000270  000540 350004		eapap	L175		" "OFFSET"
aa 000271  000361 710004  104		tra	L5
			L176:
aa 000272  000535 350004		eapap	L177		" "OR"
aa 000273  000357 710004  105		tra	L5
			L178:
aa 000274  000531 350004		eapap	L179		" "PLUS_F"
aa 000275  000355 710004  106		tra	L5
			L180:
aa 000276  000525 350004		eapap	L181		" "PLUS"
aa 000277  000353 710004  107		tra	L5
			L182:
aa 000300  000520 350004		eapap	L183		" "POINTER"
aa 000301  000351 710004  108		tra	L5
			L184:
aa 000302  000514 350004		eapap	L185		" "POS_F"
aa 000303  000347 710004  109		tra	L5
			L186:
aa 000304  000510 350004		eapap	L187		" "POS"
aa 000305  000345 710004  110		tra	L5
			L188:
aa 000306  000504 350004		eapap	L189		" "RBRA"
aa 000307  000343 710004  111		tra	L5
			L190:
aa 000310  000477 350004		eapap	L191		" "REGISTER"
aa 000311  000341 710004  112		tra	L5
			L192:
aa 000312  000473 350004		eapap	L193		" "REL"
aa 000313  000337 710004  113		tra	L5
			L194:
aa 000314  000467 350004		eapap	L195		" "REM"
aa 000315  000335 710004  114		tra	L5
			L196:
aa 000316  000463 350004		eapap	L197		" "REP"
aa 000317  000333 710004  115		tra	L5
			L198:
aa 000320  000457 350004		eapap	L199		" "REPEAT"
aa 000321  000331 710004  116		tra	L5
			L200:
aa 000322  000451 350004		eapap	L201		" "REPEATUNTIL"
aa 000323  000327 710004  117		tra	L5
			L202:
aa 000324  000443 350004		eapap	L203		" "REPEATWHILE"
aa 000325  000325 710004  118		tra	L5
			L204:
aa 000326  000436 350004		eapap	L205		" "RESULTIS"
aa 000327  000323 710004  119		tra	L5
			L206:
aa 000330  000432 350004		eapap	L207		" "RETURN"
aa 000331  000321 710004  120		tra	L5
			L208:
aa 000332  000426 350004		eapap	L209		" "RKET"
aa 000333  000317 710004  121		tra	L5
			L210:
aa 000334  000422 350004		eapap	L211		" "RSHIFT"
aa 000335  000315 710004  122		tra	L5
			L212:
aa 000336  000416 350004		eapap	L213		" "RTAP"
aa 000337  000313 710004  123		tra	L5
			L214:
aa 000340  000412 350004		eapap	L215		" "RTDEF"
aa 000341  000311 710004  124		tra	L5
			L216:
aa 000342  000407 350004		eapap	L217		" "RV"
aa 000343  000307 710004  125		tra	L5
			L218:
aa 000344  000403 350004		eapap	L219		" "SBRA"
aa 000345  000305 710004  126		tra	L5
			L220:
aa 000346  000377 350004		eapap	L221		" "BEGIN"
aa 000347  000303 710004  127		tra	L5
			L222:
aa 000350  000372 350004		eapap	L223		" "SECTBRA"
aa 000351  000301 710004  128		tra	L5
			L224:
aa 000352  000366 350004		eapap	L225		" "END"
aa 000353  000277 710004  129		tra	L5
			L226:
aa 000354  000361 350004		eapap	L227		" "SECTKET"
aa 000355  000275 710004  130		tra	L5
			L228:
aa 000356  000354 350004		eapap	L229		" "SEMICOLON"
aa 000357  000273 710004  131		tra	L5
			L230:
aa 000360  000350 350004		eapap	L231		" "SKET"
aa 000361  000271 710004  132		tra	L5
			L232:
aa 000362  000344 350004		eapap	L233		" "STATIC"
aa 000363  000267 710004  133		tra	L5
			L234:
aa 000364  000340 350004		eapap	L235		" "STRING"
aa 000365  000265 710004  134		tra	L5
			L236:
aa 000366  000332 350004		eapap	L237		" "STRINGCONST"
aa 000367  000263 710004  135		tra	L5
			L238:
aa 000370  000325 350004		eapap	L239		" "STRUCTURE"
aa 000371  000261 710004  136		tra	L5
			L240:
aa 000372  000320 350004		eapap	L241		" "SWITCHON"
aa 000373  000257 710004  137		tra	L5
			L242:
aa 000374  000314 350004		eapap	L243		" "TABLE"
aa 000375  000255 710004  138		tra	L5
			L244:
aa 000376  000310 350004		eapap	L245		" "TEMP"
aa 000377  000253 710004  139		tra	L5
			L246:
aa 000400  000304 350004		eapap	L247		" "TEST"
aa 000401  000251 710004  140		tra	L5
			L248:
aa 000402  000301 350004		eapap	L249		" "TO"
aa 000403  000247 710004  141		tra	L5
			L250:
aa 000404  000275 350004		eapap	L251		" "TRUE"
aa 000405  000245 710004  142		tra	L5
			L252:
aa 000406  000271 350004		eapap	L253		" "TYPE"
aa 000407  000243 710004  143		tra	L5
			L254:
aa 000410  000265 350004		eapap	L255		" "UNLESS"
aa 000411  000241 710004  144		tra	L5
			L256:
aa 000412  000261 350004		eapap	L257		" "UNTIL"
aa 000413  000237 710004  145		tra	L5
			L258:
aa 000414  000255 350004		eapap	L259		" "VALDEF"
aa 000415  000235 710004  146		tra	L5
			L260:
aa 000416  000251 350004		eapap	L261		" "VALOF"
aa 000417  000233 710004  147		tra	L5
			L262:
aa 000420  000245 350004		eapap	L263		" "VEC"
aa 000421  000231 710004  148		tra	L5
			L264:
aa 000422  000241 350004		eapap	L265		" "VECAP"
aa 000423  000227 710004  149		tra	L5
			L266:
aa 000424  000235 350004		eapap	L267		" "WHILE"
aa 000425  000225 710004		tra	L5
			L7:

	"	Begin switchon

aa 000426  700002 235111		lda	sb|2,x1		" Op
aa 000427  000220 115007		cmpa	144,dl
aa 000430  777364 603004		trc	L8
0a 000431  000432 710005		tra	L268,al
			L268:
aa 000432  777362 710004		tra	L8
aa 000433  777373 710004		tra	L12
aa 000434  777374 710004		tra	L14
aa 000435  777375 710004		tra	L16
aa 000436  777376 710004		tra	L18
aa 000437  777377 710004		tra	L20
aa 000440  777400 710004		tra	L22
aa 000441  777401 710004		tra	L24
aa 000442  777402 710004		tra	L26
aa 000443  777351 710004		tra	L8
aa 000444  777402 710004		tra	L28
aa 000445  777403 710004		tra	L30
aa 000446  777404 710004		tra	L32
aa 000447  777405 710004		tra	L34
aa 000450  777406 710004		tra	L36
aa 000451  777407 710004		tra	L38
aa 000452  777410 710004		tra	L40
aa 000453  777411 710004		tra	L42
aa 000454  777412 710004		tra	L44
aa 000455  777337 710004		tra	L8
aa 000456  777412 710004		tra	L46
aa 000457  777413 710004		tra	L48
aa 000460  777414 710004		tra	L50
aa 000461  777415 710004		tra	L52
aa 000462  777416 710004		tra	L54
aa 000463  777425 710004		tra	L62
aa 000464  777416 710004		tra	L56
aa 000465  777417 710004		tra	L58
aa 000466  777420 710004		tra	L60
aa 000467  777325 710004		tra	L8
aa 000470  777422 710004		tra	L64
aa 000471  777423 710004		tra	L66
aa 000472  777424 710004		tra	L68
aa 000473  777425 710004		tra	L70
aa 000474  777426 710004		tra	L72
aa 000475  777427 710004		tra	L74
aa 000476  777430 710004		tra	L76
aa 000477  777431 710004		tra	L78
aa 000500  777432 710004		tra	L80
aa 000501  777313 710004		tra	L8
aa 000502  777432 710004		tra	L82
aa 000503  777311 710004		tra	L8
aa 000504  777432 710004		tra	L84
aa 000505  777433 710004		tra	L86
aa 000506  777434 710004		tra	L88
aa 000507  777435 710004		tra	L90
aa 000510  777436 710004		tra	L92
aa 000511  777437 710004		tra	L94
aa 000512  777440 710004		tra	L96
aa 000513  777301 710004		tra	L8
aa 000514  777440 710004		tra	L98
aa 000515  777441 710004		tra	L100
aa 000516  777442 710004		tra	L102
aa 000517  777443 710004		tra	L104
aa 000520  777444 710004		tra	L106
aa 000521  777445 710004		tra	L108
aa 000522  777446 710004		tra	L110
aa 000523  777447 710004		tra	L112
aa 000524  777450 710004		tra	L114
aa 000525  777267 710004		tra	L8
aa 000526  777450 710004		tra	L116
aa 000527  777451 710004		tra	L118
aa 000530  777452 710004		tra	L120
aa 000531  777453 710004		tra	L122
aa 000532  777454 710004		tra	L124
aa 000533  777455 710004		tra	L126
aa 000534  777456 710004		tra	L128
aa 000535  777473 710004		tra	L142
aa 000536  777456 710004		tra	L130
aa 000537  777255 710004		tra	L8
aa 000540  777456 710004		tra	L132
aa 000541  777457 710004		tra	L134
aa 000542  777460 710004		tra	L136
aa 000543  777461 710004		tra	L138
aa 000544  777462 710004		tra	L140
aa 000545  777465 710004		tra	L144
aa 000546  777466 710004		tra	L146
aa 000547  777467 710004		tra	L148
aa 000550  777470 710004		tra	L150
aa 000551  777243 710004		tra	L8
aa 000552  777470 710004		tra	L152
aa 000553  777471 710004		tra	L154
aa 000554  777472 710004		tra	L156
aa 000555  777477 710004		tra	L162
aa 000556  777500 710004		tra	L164
aa 000557  777501 710004		tra	L166
aa 000560  777470 710004		tra	L158
aa 000561  777471 710004		tra	L160
aa 000562  777500 710004		tra	L168
aa 000563  777231 710004		tra	L8
aa 000564  777500 710004		tra	L170
aa 000565  777501 710004		tra	L172
aa 000566  777502 710004		tra	L174
aa 000567  777503 710004		tra	L176
aa 000570  777504 710004		tra	L178
aa 000571  777505 710004		tra	L180
aa 000572  777506 710004		tra	L182
aa 000573  777507 710004		tra	L184
aa 000574  777510 710004		tra	L186
aa 000575  777217 710004		tra	L8
aa 000576  777510 710004		tra	L188
aa 000577  777511 710004		tra	L190
aa 000600  777512 710004		tra	L192
aa 000601  777513 710004		tra	L194
aa 000602  777514 710004		tra	L196
aa 000603  777515 710004		tra	L198
aa 000604  777516 710004		tra	L200
aa 000605  777517 710004		tra	L202
aa 000606  777520 710004		tra	L204
aa 000607  777205 710004		tra	L8
aa 000610  777520 710004		tra	L206
aa 000611  777521 710004		tra	L208
aa 000612  777522 710004		tra	L210
aa 000613  777523 710004		tra	L212
aa 000614  777524 710004		tra	L214
aa 000615  777525 710004		tra	L216
aa 000616  777526 710004		tra	L218
aa 000617  777527 710004		tra	L220
aa 000620  777530 710004		tra	L222
aa 000621  777173 710004		tra	L8
aa 000622  777530 710004		tra	L224
aa 000623  777531 710004		tra	L226
aa 000624  777532 710004		tra	L228
aa 000625  777533 710004		tra	L230
aa 000626  777534 710004		tra	L232
aa 000627  777535 710004		tra	L234
aa 000630  777536 710004		tra	L236
aa 000631  777537 710004		tra	L238
aa 000632  777540 710004		tra	L240
aa 000633  777161 710004		tra	L8
aa 000634  777540 710004		tra	L242
aa 000635  777541 710004		tra	L244
aa 000636  777542 710004		tra	L246
aa 000637  777543 710004		tra	L248
aa 000640  777544 710004		tra	L250
aa 000641  777545 710004		tra	L252
aa 000642  777546 710004		tra	L254
aa 000643  777547 710004		tra	L256
aa 000644  777550 710004		tra	L258
aa 000645  777147 710004		tra	L8
aa 000646  777550 710004		tra	L260
aa 000647  777551 710004		tra	L262
aa 000650  777552 710004		tra	L264
aa 000651  777553 710004		tra	L266
			L6:
			L5:
aa 000652  700004 540111		sprpap	sb|4,x1
aa 000653  700004 236111		ldq	sb|4,x1
aa 000654  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000655  200000 121100		sblx1	bp|0
aa 000656  700001 764111		lprplp	sb|1,x1
aa 000657  200001 710100		tra	bp|1		" end of return sequence
aa 000660  700003 756111		stq	sb|3,x1		" temporary

	"	Literal pool

			L267:
aa 000661  000005 127110		zero	5,44616		" "WHILE"
aa 000662  111114 105000		zero	37452,35328
			L265:
aa 000663  000005 126105		zero	5,44101		" "VECAP"
aa 000664  103101 120000		zero	34369,40960
			L263:
aa 000665  000003 126105		zero	3,44101		" "VEC"
aa 000666  103000 000000		zero	34304
			L261:
aa 000667  000005 126101		zero	5,44097		" "VALOF"
aa 000670  114117 106000		zero	38991,35840
			L259:
aa 000671  000006 126101		zero	6,44097		" "VALDEF"
aa 000672  114104 105106		zero	38980,35398
			L257:
aa 000673  000005 125116		zero	5,43598		" "UNTIL"
aa 000674  124111 114000		zero	43081,38912
			L255:
aa 000675  000006 125116		zero	6,43598		" "UNLESS"
aa 000676  114105 123123		zero	38981,42579
			L253:
aa 000677  000004 124131		zero	4,43097		" "TYPE"
aa 000700  120105 000000		zero	41029
			L251:
aa 000701  000004 124122		zero	4,43090		" "TRUE"
aa 000702  125105 000000		zero	43589
			L249:
aa 000703  000002 124117		zero	2,43087		" "TO"
			L247:
aa 000704  000004 124105		zero	4,43077		" "TEST"
aa 000705  123124 000000		zero	42580
			L245:
aa 000706  000004 124105		zero	4,43077		" "TEMP"
aa 000707  115120 000000		zero	39504
			L243:
aa 000710  000005 124101		zero	5,43073		" "TABLE"
aa 000711  102114 105000		zero	33868,35328
			L241:
aa 000712  000010 123127		zero	8,42583		" "SWITCHON"
aa 000713  111124 103110		zero	37460,34376
aa 000714  117116 000000		zero	40526
			L239:
aa 000715  000011 123124		zero	9,42580		" "STRUCTURE"
aa 000716  122125 103124		zero	42069,34388
aa 000717  125122 105000		zero	43602,35328
			L237:
aa 000720  000013 123124		zero	11,42580		" "STRINGCONST"
aa 000721  122111 116107		zero	42057,40007
aa 000722  103117 116123		zero	34383,40019
aa 000723  124000 000000		zero	43008
			L235:
aa 000724  000006 123124		zero	6,42580		" "STRING"
aa 000725  122111 116107		zero	42057,40007
			L233:
aa 000726  000006 123124		zero	6,42580		" "STATIC"
aa 000727  101124 111103		zero	33364,37443
			L231:
aa 000730  000004 123113		zero	4,42571		" "SKET"
aa 000731  105124 000000		zero	35412
			L229:
aa 000732  000011 123105		zero	9,42565		" "SEMICOLON"
aa 000733  115111 103117		zero	39497,34383
aa 000734  114117 116000		zero	38991,39936
			L227:
aa 000735  000007 123105		zero	7,42565		" "SECTKET"
aa 000736  103124 113105		zero	34388,38469
aa 000737  124000 000000		zero	43008
			L225:
aa 000740  000003 105116		zero	3,35406		" "END"
aa 000741  104000 000000		zero	34816
			L223:
aa 000742  000007 123105		zero	7,42565		" "SECTBRA"
aa 000743  103124 102122		zero	34388,33874
aa 000744  101000 000000		zero	33280
			L221:
aa 000745  000005 102105		zero	5,33861		" "BEGIN"
aa 000746  107111 116000		zero	36425,39936
			L219:
aa 000747  000004 123102		zero	4,42562		" "SBRA"
aa 000750  122101 000000		zero	42049
			L217:
aa 000751  000002 122126		zero	2,42070		" "RV"
			L215:
aa 000752  000005 122124		zero	5,42068		" "RTDEF"
aa 000753  104105 106000		zero	34885,35840
			L213:
aa 000754  000004 122124		zero	4,42068		" "RTAP"
aa 000755  101120 000000		zero	33360
			L211:
aa 000756  000006 122123		zero	6,42067		" "RSHIFT"
aa 000757  110111 106124		zero	36937,35924
			L209:
aa 000760  000004 122113		zero	4,42059		" "RKET"
aa 000761  105124 000000		zero	35412
			L207:
aa 000762  000006 122105		zero	6,42053		" "RETURN"
aa 000763  124125 122116		zero	43093,42062
			L205:
aa 000764  000010 122105		zero	8,42053		" "RESULTIS"
aa 000765  123125 114124		zero	42581,38996
aa 000766  111123 000000		zero	37459
			L203:
aa 000767  000013 122105		zero	11,42053		" "REPEATWHILE"
aa 000770  120105 101124		zero	41029,33364
aa 000771  127110 111114		zero	44616,37452
aa 000772  105000 000000		zero	35328
			L201:
aa 000773  000013 122105		zero	11,42053		" "REPEATUNTIL"
aa 000774  120105 101124		zero	41029,33364
aa 000775  125116 124111		zero	43598,43081
aa 000776  114000 000000		zero	38912
			L199:
aa 000777  000006 122105		zero	6,42053		" "REPEAT"
aa 001000  120105 101124		zero	41029,33364
			L197:
aa 001001  000003 122105		zero	3,42053		" "REP"
aa 001002  120000 000000		zero	40960
			L195:
aa 001003  000003 122105		zero	3,42053		" "REM"
aa 001004  115000 000000		zero	39424
			L193:
aa 001005  000003 122105		zero	3,42053		" "REL"
aa 001006  114000 000000		zero	38912
			L191:
aa 001007  000010 122105		zero	8,42053		" "REGISTER"
aa 001010  107111 123124		zero	36425,42580
aa 001011  105122 000000		zero	35410
			L189:
aa 001012  000004 122102		zero	4,42050		" "RBRA"
aa 001013  122101 000000		zero	42049
			L187:
aa 001014  000003 120117		zero	3,41039		" "POS"
aa 001015  123000 000000		zero	42496
			L185:
aa 001016  000005 120117		zero	5,41039		" "POS_F"
aa 001017  123137 106000		zero	42591,35840
			L183:
aa 001020  000007 120117		zero	7,41039		" "POINTER"
aa 001021  111116 124105		zero	37454,43077
aa 001022  122000 000000		zero	41984
			L181:
aa 001023  000004 120114		zero	4,41036		" "PLUS"
aa 001024  125123 000000		zero	43603
			L179:
aa 001025  000006 120114		zero	6,41036		" "PLUS_F"
aa 001026  125123 137106		zero	43603,48710
			L177:
aa 001027  000002 117122		zero	2,40530		" "OR"
			L175:
aa 001030  000006 117106		zero	6,40518		" "OFFSET"
aa 001031  106123 105124		zero	35923,35412
			L173:
aa 001032  000006 116125		zero	6,40021		" "NUMBER"
aa 001033  115102 105122		zero	39490,35410
			L171:
aa 001034  000003 116117		zero	3,40015		" "NOT"
aa 001035  124000 000000		zero	43008
			L169:
aa 001036  000003 116111		zero	3,40009		" "NIL"
aa 001037  114000 000000		zero	38912
			L167:
aa 001040  000004 116105		zero	4,40005		" "NEQV"
aa 001041  121126 000000		zero	41558
			L165:
aa 001042  000003 116105		zero	3,40005		" "NEG"
aa 001043  107000 000000		zero	36352
			L163:
aa 001044  000005 116105		zero	5,40005		" "NEG_F"
aa 001045  107137 106000		zero	36447,35840
			L161:
aa 001046  000002 116105		zero	2,40005		" "NE"
			L159:
aa 001047  000004 116105		zero	4,40005		" "NE_F"
aa 001050  137106 000000		zero	48710
			L157:
aa 001051  000004 116101		zero	4,40001		" "NAME"
aa 001052  115105 000000		zero	39493
			L155:
aa 001053  000004 115125		zero	4,39509		" "MULT"
aa 001054  114124 000000		zero	38996
			L153:
aa 001055  000006 115125		zero	6,39509		" "MULT_F"
aa 001056  114124 137106		zero	38996,48710
			L151:
aa 001057  000005 115111		zero	5,39497		" "MINUS"
aa 001060  116125 123000		zero	40021,42496
			L149:
aa 001061  000007 115111		zero	7,39497		" "MINUS_F"
aa 001062  116125 123137		zero	40021,42591
aa 001063  106000 000000		zero	35840
			L147:
aa 001064  000010 115101		zero	8,39489		" "MANIFEST"
aa 001065  116111 106105		zero	40009,35909
aa 001066  123124 000000		zero	42580
			L145:
aa 001067  000004 115101		zero	4,39489		" "MAIN"
aa 001070  111116 000000		zero	37454
			L143:
aa 001071  000006 114126		zero	6,38998		" "LVECAP"
aa 001072  105103 101120		zero	35395,33360
			L141:
aa 001073  000007 114126		zero	7,38998		" "LV_TEMP"
aa 001074  137124 105115		zero	48724,35405
aa 001075  120000 000000		zero	40960
			L139:
aa 001076  000011 114126		zero	9,38998		" "LV_STATIC"
aa 001077  137123 124101		zero	48723,43073
aa 001100  124111 103000		zero	43081,34304
			L137:
aa 001101  000010 114126		zero	8,38998		" "LV_LOCAL"
aa 001102  137114 117103		zero	48716,40515
aa 001103  101114 000000		zero	33356
			L135:
aa 001104  000011 114126		zero	9,38998		" "LV_GLOBAL"
aa 001105  137107 114117		zero	48711,38991
aa 001106  102101 114000		zero	33857,38912
			L133:
aa 001107  000016 114126		zero	14,38998		" "LV_FNAP_RESULT"
aa 001110  137106 116101		zero	48710,40001
aa 001111  120137 122105		zero	41055,42053
aa 001112  123125 114124		zero	42581,38996
			L131:
aa 001113  000012 114126		zero	10,38998		" "LV_ARG_OUT"
aa 001114  137101 122107		zero	48705,42055
aa 001115  137117 125124		zero	48719,43604
			L129:
aa 001116  000002 114126		zero	2,38998		" "LV"
			L127:
aa 001117  000006 114123		zero	6,38995		" "LSHIFT"
aa 001120  110111 106124		zero	36937,35924
			L125:
aa 001121  000002 114123		zero	2,38995		" "LS"
			L123:
aa 001122  000004 114123		zero	4,38995		" "LS_F"
aa 001123  137106 000000		zero	48710
			L121:
aa 001124  000004 114117		zero	4,38991		" "LOOP"
aa 001125  117120 000000		zero	40528
			L119:
aa 001126  000005 114117		zero	5,38991		" "LOGOR"
aa 001127  107117 122000		zero	36431,41984
			L117:
aa 001130  000006 114117		zero	6,38991		" "LOGAND"
aa 001131  107101 116104		zero	36417,40004
			L115:
aa 001132  000005 114117		zero	5,38991		" "LOCAL"
aa 001133  103101 114000		zero	34369,38912
			L113:
aa 001134  000004 114111		zero	4,38985		" "LIST"
aa 001135  123124 000000		zero	42580
			L111:
aa 001136  000003 114105		zero	3,38981		" "LET"
aa 001137  124000 000000		zero	43008
			L109:
aa 001140  000006 114105		zero	6,38981		" "LENGTH"
aa 001141  116107 124110		zero	40007,43080
			L107:
aa 001142  000002 114105		zero	2,38981		" "LE"
			L105:
aa 001143  000004 114105		zero	4,38981		" "LE_F"
aa 001144  137106 000000		zero	48710
			L103:
aa 001145  000005 114101		zero	5,38977		" "LABEL"
aa 001146  102105 114000		zero	33861,38912
			L101:
aa 001147  000006 114101		zero	6,38977		" "LABDEF"
aa 001150  102104 105106		zero	33860,35398
			L99:
aa 001151  000004 111116		zero	4,37454		" "INTO"
aa 001152  124117 000000		zero	43087
			L97:
aa 001153  000004 111106		zero	4,37446		" "IFSO"
aa 001154  123117 000000		zero	42575
			L95:
aa 001155  000005 111106		zero	5,37446		" "IFNOT"
aa 001156  116117 124000		zero	40015,43008
			L93:
aa 001157  000002 111106		zero	2,37446		" "IF"
			L91:
aa 001160  000002 107122		zero	2,36434		" "GR"
			L89:
aa 001161  000004 107122		zero	4,36434		" "GR_F"
aa 001162  137106 000000		zero	48710
			L87:
aa 001163  000004 107117		zero	4,36431		" "GOTO"
aa 001164  124117 000000		zero	43087
			L85:
aa 001165  000006 107114		zero	6,36428		" "GLOBAL"
aa 001166  117102 101114		zero	40514,33356
			L83:
aa 001167  000002 107105		zero	2,36421		" "GE"
			L81:
aa 001170  000004 107105		zero	4,36421		" "GE_F"
aa 001171  137106 000000		zero	48710
			L79:
aa 001172  000003 106117		zero	3,35919		" "FOR"
aa 001173  122000 000000		zero	41984
			L77:
aa 001174  000005 106116		zero	5,35918		" "FNDEF"
aa 001175  104105 106000		zero	34885,35840
			L75:
aa 001176  000004 106116		zero	4,35918		" "FNAP"
aa 001177  101120 000000		zero	33360
			L73:
aa 001200  000005 106114		zero	5,35916		" "FLOAT"
aa 001201  117101 124000		zero	40513,43008
			L71:
aa 001202  000005 106111		zero	5,35913		" "FIXED"
aa 001203  130105 104000		zero	45125,34816
			L69:
aa 001204  000006 106111		zero	6,35913		" "FINISH"
aa 001205  116111 123110		zero	40009,42568
			L67:
aa 001206  000005 106101		zero	5,35905		" "FALSE"
aa 001207  114123 105000		zero	38995,35328
			L65:
aa 001210  000010 105130		zero	8,35416		" "EXTERNAL"
aa 001211  124105 122116		zero	43077,42062
aa 001212  101114 000000		zero	33356
			L63:
aa 001213  000007 074145		zero	7,30821		" "<error>"
aa 001214  162162 157162		zero	58482,56946
aa 001215  076000 000000		zero	31744
			L61:
aa 001216  000003 105121		zero	3,35409		" "EQV"
aa 001217  126000 000000		zero	44032
			L59:
aa 001220  000002 105121		zero	2,35409		" "EQ"
			L57:
aa 001221  000004 105121		zero	4,35409		" "EQ_F"
aa 001222  137106 000000		zero	48710
			L55:
aa 001223  000007 105116		zero	7,35406		" "ENDPROG"
aa 001224  104120 122117		zero	34896,42063
aa 001225  107000 000000		zero	36352
			L53:
aa 001226  000007 105116		zero	7,35406		" "ENDCASE"
aa 001227  104103 101123		zero	34883,33363
aa 001230  105000 000000		zero	35328
			L51:
aa 001231  000006 104117		zero	6,34895		" "DOUBLE"
aa 001232  125102 114105		zero	43586,38981
			L49:
aa 001233  000002 104117		zero	2,34895		" "DO"
			L47:
aa 001234  000003 104111		zero	3,34889		" "DIV"
aa 001235  126000 000000		zero	44032
			L45:
aa 001236  000005 104111		zero	5,34889		" "DIV_F"
aa 001237  126137 106000		zero	44127,35840
			L43:
aa 001240  000007 104105		zero	7,34885		" "DEFAULT"
aa 001241  106101 125114		zero	35905,43596
aa 001242  124000 000000		zero	43008
			L41:
aa 001243  000010 103117		zero	8,34383		" "CONSTDEF"
aa 001244  116123 124104		zero	40019,43076
aa 001245  105106 000000		zero	35398
			L39:
aa 001246  000010 103117		zero	8,34383		" "CONSTANT"
aa 001247  116123 124101		zero	40019,43073
aa 001250  116124 000000		zero	40020
			L37:
aa 001251  000004 103117		zero	4,34383		" "COND"
aa 001252  116104 000000		zero	40004
			L35:
aa 001253  000005 103117		zero	5,34383		" "COMMA"
aa 001254  115115 101000		zero	39501,33280
			L33:
aa 001255  000005 103117		zero	5,34383		" "COLON"
aa 001256  114117 116000		zero	38991,39936
			L31:
aa 001257  000011 103110		zero	9,34376		" "CHARCONST"
aa 001260  101122 103117		zero	33362,34383
aa 001261  116123 124000		zero	40019,43008
			L29:
aa 001262  000004 103110		zero	4,34376		" "CHAR"
aa 001263  101122 000000		zero	33362
			L27:
aa 001264  000004 103101		zero	4,34369		" "CASE"
aa 001265  123105 000000		zero	42565
			L25:
aa 001266  000004 103101		zero	4,34369		" "CALL"
aa 001267  114114 000000		zero	38988
			L23:
aa 001270  000002 102131		zero	2,33881		" "BY"
			L21:
aa 001271  000005 102122		zero	5,33874		" "BREAK"
aa 001272  105101 113000		zero	35393,38400
			L19:
aa 001273  000003 102111		zero	3,33865		" "BIT"
aa 001274  124000 000000		zero	43008
			L17:
aa 001275  000002 102105		zero	2,33861		" "BE"
			L15:
aa 001276  000006 101123		zero	6,33363		" "ASSIGN"
aa 001277  123111 107116		zero	42569,36430
			L13:
aa 001300  000003 101116		zero	3,33358		" "AND"
aa 001301  104000 000000		zero	34816
			L11:
aa 001302  000011 074165		zero	9,30837		" "<unknown>"
aa 001303  156153 156157		zero	56427,56431
aa 001304  167156 076000		zero	61038,31744
			L9:
aa 001305  000012 123171		zero	10,42617		" "SymbolName"
aa 001306  155142 157154		zero	55906,56940
aa 001307  116141 155145		zero	40033,55909
	"	Begin text of FindPrintName

aa 001310  000015 106151		zero	13,35945		" FindPrintName
aa 001311  156144 120162		zero	56420,41074
aa 001312  151156 164116		zero	53870,59470
aa 001313  141155 145000		zero	49773,51712
			L2:
aa 001314  000000 213000  151		epaq	0		" set lp to linkage section
aa 001315  700026 764161		lprplp	sb|22,*au
aa 001316  200000 021100		adlx1	bp|0		" BCPL save
aa 001317  700000 542111		sprpbp	sb|0,x1
aa 001320  700001 544111		sprplp	sb|1,x1
aa 001321  700422 620111		eax0	sb|274,x1
aa 001322  777760 360003		anx0	-16,du
aa 001323  700025 740100		stx0	sb|21		" end of save sequence

aa 001324  000013 710004  153		tra	L273
			L274:
aa 001325  700002 760111  157		lprpap	sb|2,x1		" x
aa 001326  000001 236100		ldq	ap|1
aa 001327  000036 710004  158		tra	L271
			L275:
aa 001330  700002 762111		lprpbp	sb|2,x1		" x
aa 001331  200000 235100		lda	bp|0
aa 001332  777777 375007		ana	-1,dl		" Right
aa 001333  700012 755111		sta	sb|10,x1
aa 001334  776451 272004		tsbbp	L1+2		" SymbolName
aa 001335  000010 000001		zero	8,1
aa 001336  000027 710004		tra	L271
			L273:
aa 001337  700002 761111		lprpab	sb|2,x1		" x
aa 001340  100000 236100		ldq	ab|0
aa 001341  777777 376007		anq	-1,dl		" Right

	"	Begin switchon

aa 001342  000044 777000		llr	36		" exchange A and Q
aa 001343  000043 773000		lrl	35
aa 001344  000006 507007		dvf	6,dl		" hash table size
0a 001345  001357 115006		cmpa	L276,ql
aa 001346  777762 601004		tnz	L275
0a 001347  001351 710006		tra	L277,ql
aa 001350  700004 755111		sta	sb|4,x1		" temporary
			L277:
aa 001351  777754 710004		tra	L274
aa 001352  777753 710004		tra	L274
aa 001353  777755 710004		tra	L275
aa 001354  777754 710004		tra	L275
aa 001355  777750 710004		tra	L274
aa 001356  777747 710004		tra	L274
			L276:
aa 001357  000000 000025		zero	0,21
aa 001360  000000 000017		zero	0,15
aa 001361  000000 000000		zero	0
aa 001362  000000 000000		zero	0
aa 001363  000000 000015		zero	0,13
aa 001364  000000 000001		zero	0,1
			L272:
			L271:
aa 001365  700004 756111		stq	sb|4,x1
aa 001366  700004 236111		ldq	sb|4,x1
aa 001367  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001370  200000 121100		sblx1	bp|0
aa 001371  700001 764111		lprplp	sb|1,x1
aa 001372  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of Plist

aa 001373  000005 120154		zero	5,41068		" Plist
aa 001374  151163 164000		zero	53875,59392
aa 001375  700003 756111  161		stq	sb|3,x1		" temporary
			L278:
aa 001376  000000 213000		epaq	0		" set lp to linkage section
aa 001377  700026 764161		lprplp	sb|22,*au
aa 001400  200000 021100		adlx1	bp|0		" BCPL save
aa 001401  700000 542111		sprpbp	sb|0,x1
aa 001402  700001 544111		sprplp	sb|1,x1
aa 001403  700425 620111		eax0	sb|277,x1
aa 001404  777760 360003		anx0	-16,du
aa 001405  700025 740100		stx0	sb|21		" end of save sequence

aa 001406  700004 450111  162		stz	sb|4,x1		" i
aa 001407  700003 236111		ldq	sb|3,x1		" n
aa 001410  700005 756111		stq	sb|5,x1
aa 001411  000010 710004		tra	L282
			L283:
aa 001412  600040 236100		ldq	sp|32		" OUTPUT
aa 001413  700014 756111		stq	sb|12,x1
aa 001414  000174 236007		ldq	124,dl		" '|'
aa 001415  700015 756111		stq	sb|13,x1
4a 001416  400032 272120		tsbbp	lp|L284,*		" Writech
aa 001417  000012 000002		zero	10,2
aa 001420  700004 054111		aos	sb|4,x1		" i
			L282:
aa 001421  700004 236111		ldq	sb|4,x1		" i
aa 001422  700005 116111		cmpq	sb|5,x1
aa 001423  777767 604404		tmoz	L283
aa 001424  600040 235100  163		lda	sp|32		" OUTPUT
aa 001425  700014 755111		sta	sb|12,x1
aa 001426  000040 235007		lda	32,dl		" '*s'
aa 001427  700015 755111		sta	sb|13,x1
4a 001430  400032 272120		tsbbp	lp|L284,*		" Writech
aa 001431  000012 000002		zero	10,2
aa 001432  700002 234111  164		szn	sb|2,x1		" x
aa 001433  000006 601004		tnz	L285
aa 001434  000403 353404  165		eapbb	L286		" "<empty>*n"
aa 001435  700014 543111		sprpbb	sb|12,x1
4a 001436  400030 272120		tsbbp	lp|L287,*		" WriteS
aa 001437  000012 000001		zero	10,1
aa 001440  000361 710004  166		tra	L281
			L285:
aa 001441  700005 450111  168		stz	sb|5,x1		" t
aa 001442  000001 235007		lda	1,dl		" 1
aa 001443  700004 755111		sta	sb|4,x1		" s
aa 001444  700002 763111  169		lprpbb	sb|2,x1		" x
aa 001445  300000 235100		lda	bb|0
aa 001446  777777 375007		ana	-1,dl		" Right
aa 001447  700006 755111		sta	sb|6,x1		" Op
aa 001450  000067 710004  171		tra	L290
			L291:
aa 001451  000000 235007  175		lda	0,dl		" 0
aa 001452  000311 710004  177		tra	L288
			L292:
aa 001453  000001 235007  185		lda	1,dl		" 1
aa 001454  000307 710004  187		tra	L288
			L293:
aa 001455  000002 235007  201		lda	2,dl		" 2
aa 001456  000305 710004  203		tra	L288
			L294:
aa 001457  000003 235007  205		lda	3,dl		" 3
aa 001460  000303 710004  207		tra	L288
			L295:
aa 001461  000005 235007  208		lda	5,dl		" 5
aa 001462  000301 710004  210		tra	L288
			L296:
aa 001463  000002 236007  211		ldq	2,dl		" 2
aa 001464  700004 756111		stq	sb|4,x1		" s
aa 001465  700002 765111  212		lprplb	sb|2,x1		" x
aa 001466  500001 236100		ldq	lb|1
aa 001467  000001 076007		adq	1,dl		" 1
aa 001470  000044 777000		llr	36		" exchange A and Q
aa 001471  000272 710004  214		tra	L288
			L297:
aa 001472  600040 235100  215		lda	sp|32		" OUTPUT
aa 001473  700014 755111		sta	sb|12,x1
aa 001474  000337 350004		eapap	L298		" "CONSTANT ^d*n"
aa 001475  700015 540111		sprpap	sb|13,x1
aa 001476  700002 760111		lprpap	sb|2,x1		" x
aa 001477  000001 235100		lda	ap|1
aa 001500  700016 755111		sta	sb|14,x1
4a 001501  400026 272120		tsbbp	lp|L299,*		" Format
aa 001502  000012 000003		zero	10,3
aa 001503  000316 710004  218		tra	L281
			L300:
aa 001504  700006 235111  222		lda	sb|6,x1		" Op
aa 001505  700014 755111		sta	sb|12,x1
aa 001506  776277 272004		tsbbp	L1+2		" SymbolName
aa 001507  000012 000001		zero	10,1
aa 001510  700007 756111		stq	sb|7,x1
aa 001511  600040 236100		ldq	sp|32		" OUTPUT
aa 001512  700014 756111		stq	sb|12,x1
aa 001513  000316 352004		eapbp	L301		" "^s ^s*n"
aa 001514  700015 542111		sprpbp	sb|13,x1
aa 001515  700007 236111		ldq	sb|7,x1
aa 001516  700016 756111		stq	sb|14,x1
aa 001517  700002 762111		lprpbp	sb|2,x1		" x
aa 001520  200001 236100		ldq	bp|1
aa 001521  700017 756111		stq	sb|15,x1
4a 001522  400026 272120		tsbbp	lp|L299,*		" Format
aa 001523  000012 000004		zero	10,4
aa 001524  000275 710004  225		tra	L281
			L302:
aa 001525  000143 236007		ldq	99,dl		" UnexpectedCase
aa 001526  700014 756111		stq	sb|12,x1
aa 001527  700006 236111		ldq	sb|6,x1		" Op
aa 001530  700015 756111		stq	sb|13,x1
aa 001531  000276 351404		eapab	L303		" "Plist"
aa 001532  700016 541111		sprpab	sb|14,x1
4a 001533  400034 272120		tsbbp	lp|L10,*		" CGreport
aa 001534  000012 000003		zero	10,3
aa 001535  000000 235007  226		lda	0,dl		" 0
aa 001536  000225 710004		tra	L288
			L290:

	"	Begin switchon

aa 001537  700006 235111		lda	sb|6,x1		" Op
aa 001540  000220 115007		cmpa	144,dl
aa 001541  777764 603004		trc	L302
0a 001542  001543 710005		tra	L304,al
			L304:
aa 001543  777762 710004		tra	L302
aa 001544  777711 710004		tra	L293
aa 001545  777710 710004		tra	L293
aa 001546  777757 710004		tra	L302
aa 001547  777706 710004		tra	L293
aa 001550  777701 710004		tra	L291
aa 001551  777754 710004		tra	L302
aa 001552  777701 710004		tra	L292
aa 001553  777704 710004		tra	L294
aa 001554  777751 710004		tra	L302
aa 001555  777700 710004		tra	L293
aa 001556  777726 710004		tra	L300
aa 001557  777676 710004		tra	L293
aa 001560  777703 710004		tra	L296
aa 001561  777676 710004		tra	L294
aa 001562  777710 710004		tra	L297
aa 001563  777674 710004		tra	L294
aa 001564  777667 710004		tra	L292
aa 001565  777670 710004		tra	L293
aa 001566  777737 710004		tra	L302
aa 001567  777666 710004		tra	L293
aa 001570  777735 710004		tra	L302
aa 001571  777662 710004		tra	L292
aa 001572  777657 710004		tra	L291
aa 001573  777732 710004		tra	L302
aa 001574  777655 710004		tra	L291
aa 001575  777660 710004		tra	L293
aa 001576  777657 710004		tra	L293
aa 001577  777656 710004		tra	L293
aa 001600  777725 710004		tra	L302
aa 001601  777654 710004		tra	L293
aa 001602  777647 710004		tra	L291
aa 001603  777646 710004		tra	L291
aa 001604  777647 710004		tra	L292
aa 001605  777646 710004		tra	L292
aa 001606  777647 710004		tra	L293
aa 001607  777650 710004		tra	L294
aa 001610  777651 710004		tra	L295
aa 001611  777644 710004		tra	L293
aa 001612  777713 710004		tra	L302
aa 001613  777642 710004		tra	L293
aa 001614  777711 710004		tra	L302
aa 001615  777640 710004		tra	L293
aa 001616  777635 710004		tra	L292
aa 001617  777636 710004		tra	L293
aa 001620  777635 710004		tra	L293
aa 001621  777634 710004		tra	L293
aa 001622  777703 710004		tra	L302
aa 001623  777702 710004		tra	L302
aa 001624  777701 710004		tra	L302
aa 001625  777700 710004		tra	L302
aa 001626  777677 710004		tra	L302
aa 001627  777676 710004		tra	L302
aa 001630  777625 710004		tra	L293
aa 001631  777624 710004		tra	L293
aa 001632  777623 710004		tra	L293
aa 001633  777622 710004		tra	L293
aa 001634  777617 710004		tra	L292
aa 001635  777670 710004		tra	L302
aa 001636  777667 710004		tra	L302
aa 001637  777616 710004		tra	L293
aa 001640  777615 710004		tra	L293
aa 001641  777610 710004		tra	L291
aa 001642  777613 710004		tra	L293
aa 001643  777612 710004		tra	L293
aa 001644  777611 710004		tra	L293
aa 001645  777606 710004		tra	L292
aa 001646  777657 710004		tra	L302
aa 001647  777656 710004		tra	L302
aa 001650  777655 710004		tra	L302
aa 001651  777654 710004		tra	L302
aa 001652  777653 710004		tra	L302
aa 001653  777652 710004		tra	L302
aa 001654  777651 710004		tra	L302
aa 001655  777650 710004		tra	L302
aa 001656  777647 710004		tra	L302
aa 001657  777576 710004		tra	L293
aa 001660  777575 710004		tra	L293
aa 001661  777574 710004		tra	L293
aa 001662  777643 710004		tra	L302
aa 001663  777572 710004		tra	L293
aa 001664  777571 710004		tra	L293
aa 001665  777617 710004		tra	L300
aa 001666  777565 710004		tra	L292
aa 001667  777564 710004		tra	L292
aa 001670  777565 710004		tra	L293
aa 001671  777564 710004		tra	L293
aa 001672  777563 710004		tra	L293
aa 001673  777556 710004		tra	L291
aa 001674  777631 710004		tra	L302
aa 001675  777556 710004		tra	L292
aa 001676  777606 710004		tra	L300
aa 001677  777556 710004		tra	L293
aa 001700  777625 710004		tra	L302
aa 001701  777554 710004		tra	L293
aa 001702  777553 710004		tra	L293
aa 001703  777550 710004		tra	L292
aa 001704  777547 710004		tra	L292
aa 001705  777546 710004		tra	L292
aa 001706  777617 710004		tra	L302
aa 001707  777616 710004		tra	L302
aa 001710  777615 710004		tra	L302
aa 001711  777542 710004		tra	L292
aa 001712  777543 710004		tra	L293
aa 001713  777542 710004		tra	L293
aa 001714  777537 710004		tra	L292
aa 001715  777540 710004		tra	L293
aa 001716  777537 710004		tra	L293
aa 001717  777534 710004		tra	L292
aa 001720  777605 710004		tra	L302
aa 001721  777530 710004		tra	L291
aa 001722  777603 710004		tra	L302
aa 001723  777532 710004		tra	L293
aa 001724  777531 710004		tra	L293
aa 001725  777532 710004		tra	L294
aa 001726  777525 710004		tra	L292
aa 001727  777576 710004		tra	L302
aa 001730  777575 710004		tra	L302
aa 001731  777574 710004		tra	L302
aa 001732  777573 710004		tra	L302
aa 001733  777572 710004		tra	L302
aa 001734  777571 710004		tra	L302
aa 001735  777520 710004		tra	L293
aa 001736  777567 710004		tra	L302
aa 001737  777516 710004		tra	L293
aa 001740  777513 710004		tra	L292
aa 001741  777543 710004		tra	L300
aa 001742  777513 710004		tra	L293
aa 001743  777512 710004		tra	L293
aa 001744  777561 710004		tra	L302
aa 001745  777506 710004		tra	L292
aa 001746  777557 710004		tra	L302
aa 001747  777510 710004		tra	L294
aa 001750  777555 710004		tra	L302
aa 001751  777500 710004		tra	L291
aa 001752  777503 710004		tra	L293
aa 001753  777502 710004		tra	L293
aa 001754  777501 710004		tra	L293
aa 001755  777500 710004		tra	L293
aa 001756  777547 710004		tra	L302
aa 001757  777474 710004		tra	L292
aa 001760  777473 710004		tra	L292
aa 001761  777474 710004		tra	L293
aa 001762  777473 710004		tra	L293
			L289:
			L288:
aa 001763  700007 755111		sta	sb|7,x1
aa 001764  700007 236111		ldq	sb|7,x1
aa 001765  700005 756111		stq	sb|5,x1		" t
aa 001766  700006 236111  228		ldq	sb|6,x1		" Op
aa 001767  700014 756111		stq	sb|12,x1
aa 001770  776015 272004		tsbbp	L1+2		" SymbolName
aa 001771  000012 000001		zero	10,1
aa 001772  700007 756111		stq	sb|7,x1
aa 001773  600040 236100		ldq	sp|32		" OUTPUT
aa 001774  700014 756111		stq	sb|12,x1
aa 001775  000030 351404		eapab	L305		" "^s*n"
aa 001776  700015 541111		sprpab	sb|13,x1
aa 001777  700007 236111		ldq	sb|7,x1
aa 002000  700016 756111		stq	sb|14,x1
4a 002001  400026 272120		tsbbp	lp|L299,*		" Format
aa 002002  000012 000003		zero	10,3
aa 002003  000013 710004  229		tra	L306
			L307:
aa 002004  700004 722111  230		lxl2	sb|4,x1		" s
aa 002005  700002 761111		lprpab	sb|2,x1		" x
aa 002006  100000 236112		ldq	ab|0,x2
aa 002007  700014 756111		stq	sb|12,x1
aa 002010  700003 236111		ldq	sb|3,x1		" n
aa 002011  000001 076007		adq	1,dl		" 1
aa 002012  700015 756111		stq	sb|13,x1
aa 002013  777365 272004		tsbbp	L278+2		" Plist
aa 002014  000012 000002		zero	10,2
aa 002015  700004 054111  231		aos	sb|4,x1		" s
			L306:
aa 002016  700004 236111		ldq	sb|4,x1		" s
aa 002017  700005 116111		cmpq	sb|5,x1		" t
aa 002020  777764 604404		tmoz	L307
			L281:
aa 002021  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002022  200000 121100		sblx1	bp|0
aa 002023  700001 764111		lprplp	sb|1,x1
aa 002024  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L305:
aa 002025  000003 136163		zero	3,48243		" "^s*n"
aa 002026  012000 000000		zero	5120
			L303:
aa 002027  000005 120154		zero	5,41068		" "Plist"
aa 002030  151163 164000		zero	53875,59392
			L301:
aa 002031  000006 136163		zero	6,48243		" "^s ^s*n"
aa 002032  040136 163012		zero	16478,58890
			L298:
aa 002033  000014 103117		zero	12,34383		" "CONSTANT ^d*n"
aa 002034  116123 124101		zero	40019,43073
aa 002035  116124 040136		zero	40020,16478
aa 002036  144012 000000		zero	51210
			L286:
aa 002037  000010 074145		zero	8,30821		" "<empty>*n"
aa 002040  155160 164171		zero	55920,59513
aa 002041  076012 000000		zero	31754
	"	Begin text of Pname

aa 002042  000005 120156		zero	5,41070		" Pname
aa 002043  141155 145000		zero	49773,51712
			L308:
aa 002044  000000 213000  235		epaq	0		" set lp to linkage section
aa 002045  700026 764161		lprplp	sb|22,*au
aa 002046  200000 021100		adlx1	bp|0		" BCPL save
aa 002047  700000 542111		sprpbp	sb|0,x1
aa 002050  700001 544111		sprplp	sb|1,x1
aa 002051  700424 620111		eax0	sb|276,x1
aa 002052  777760 360003		anx0	-16,du
aa 002053  700025 740100		stx0	sb|21		" end of save sequence

aa 002054  700002 234111  236		szn	sb|2,x1		" x
aa 002055  000236 600004		tze	L313
aa 002056  600226 234100  238		szn	sp|150		" Metering
aa 002057  000004 600004		tze	L314
4a 002060  400024 272120		tsbbp	lp|L315,*		" SaveOldUsage
aa 002061  000044 000000		zero	36
aa 002062  700003 756111		stq	sb|3,x1		" UsageTemp
			L314:
aa 002063  700002 763111  239		lprpbb	sb|2,x1		" x
aa 002064  300001 236100		ldq	bb|1
aa 002065  700046 756111		stq	sb|38,x1
aa 002066  777760 272004		tsbbp	L308+2		" Pname
aa 002067  000044 000001		zero	36,1
aa 002070  700002 765111  240		lprplb	sb|2,x1		" x
aa 002071  500000 765100		lprplb	lb|0
aa 002072  500003 236100		ldq	lb|3
aa 002073  700004 756111		stq	sb|4,x1		" Chain
aa 002074  700004 234111  241		szn	sb|4,x1		" Chain
aa 002075  000201 600004		tze	L316
aa 002076  700005 450111  242		stz	sb|5,x1		" Last
			L317:
aa 002077  700004 760111  243		lprpap	sb|4,x1		" Chain
aa 002100  000001 236100		ldq	ap|1
aa 002101  700006 756111		stq	sb|6,x1		" Next
aa 002102  700005 236111  244		ldq	sb|5,x1		" Last
aa 002103  700004 762111		lprpbp	sb|4,x1		" Chain
aa 002104  200001 756100		stq	bp|1
aa 002105  700006 234111  245		szn	sb|6,x1		" Next
aa 002106  000006 600004		tze	L318
aa 002107  700004 236111  246		ldq	sb|4,x1		" Chain
aa 002110  700005 756111		stq	sb|5,x1		" Last
aa 002111  700006 236111  247		ldq	sb|6,x1		" Next
aa 002112  700004 756111		stq	sb|4,x1		" Chain
aa 002113  777764 710004		tra	L317
			L318:
aa 002114  700002 761111  250		lprpab	sb|2,x1		" x
aa 002115  100000 761100		lprpab	ab|0
aa 002116  100001 236100		ldq	ab|1
aa 002117  700046 756111		stq	sb|38,x1
4a 002120  400030 272120		tsbbp	lp|L287,*		" WriteS
aa 002121  000044 000001		zero	36,1
aa 002122  700002 763111  251		lprpbb	sb|2,x1		" x
aa 002123  300000 763100		lprpbb	bb|0
aa 002124  300001 236100		ldq	bb|1
aa 002125  700046 756111		stq	sb|38,x1
4a 002126  400022 272120		tsbbp	lp|L319,*		" Length
aa 002127  000044 000001		zero	36,1
aa 002130  600221 756100		stq	sp|145		" Column
aa 002131  600221 236100  252		ldq	sp|145		" Column
aa 002132  000012 506007		div	10,dl		" 10
aa 002133  000000 531007		neg	0,dl
aa 002134  600221 055100		asa	sp|145		" Column
			L320:
aa 002135  600040 235100  253		lda	sp|32		" OUTPUT
aa 002136  700046 755111		sta	sb|38,x1
aa 002137  000011 235007		lda	9,dl		" '*t'
aa 002140  700047 755111		sta	sb|39,x1
4a 002141  400032 272120		tsbbp	lp|L284,*		" Writech
aa 002142  000044 000002		zero	36,2
aa 002143  000012 235007  254		lda	10,dl		" 10
aa 002144  600221 055100		asa	sp|145		" Column
aa 002145  600221 235100		lda	sp|145		" Column
aa 002146  000036 115007		cmpa	30,dl		" 30
aa 002147  777766 604004		tmi	L320
aa 002150  000001 336007  257		lcq	1,dl
aa 002151  700006 756111		stq	sb|6,x1		" LastFile
aa 002152  700010 371511  258		eaplb	sb|8,x1		" a vector
aa 002153  700007 545111		sprplb	sb|7,x1		" Number
			L321:
aa 002154  700004 765111  259		lprplb	sb|4,x1		" Chain
aa 002155  500000 236100		ldq	lb|0
aa 002156  000022 772000		qrl	18
aa 002157  700035 756111		stq	sb|29,x1		" Line
aa 002160  700035 236111  260		ldq	sb|29,x1		" Line
aa 002161  000015 772000		qrl	13
aa 002162  700036 756111		stq	sb|30,x1		" File
aa 002163  017777 236007  261		ldq	8191,dl		" LineMask
aa 002164  700035 356111		ansq	sb|29,x1		" Line
aa 002165  700036 236111  262		ldq	sb|30,x1		" File
aa 002166  700006 116111		cmpq	sb|6,x1		" LastFile
aa 002167  000033 600004		tze	L322
aa 002170  700036 723111  263		lxl3	sb|30,x1		" File
aa 002171  600177 760100		lprpap	sp|127		" FileNames
aa 002172  000000 235113		lda	ap|0,x3
aa 002173  700037 755111		sta	sb|31,x1		" ID
aa 002174  700037 235111  264		lda	sb|31,x1		" ID
aa 002175  700046 755111		sta	sb|38,x1
4a 002176  400022 272120		tsbbp	lp|L319,*		" Length
aa 002177  000044 000001		zero	36,1
aa 002200  000003 076007		adq	3,dl		" 3
aa 002201  700040 756111		stq	sb|32,x1
aa 002202  700040 236111		ldq	sb|32,x1
aa 002203  700046 756111		stq	sb|38,x1
aa 002204  000132 236007		ldq	90,dl		" 90
aa 002205  700047 756111		stq	sb|39,x1
aa 002206  000121 272004		tsbbp	L309+2		" Need
aa 002207  000044 000002		zero	36,2
aa 002210  700037 236111  265		ldq	sb|31,x1		" ID
aa 002211  700046 756111		stq	sb|38,x1
4a 002212  400030 272120		tsbbp	lp|L287,*		" WriteS
aa 002213  000044 000001		zero	36,1
aa 002214  000105 352004  266		eapbp	L323		" ":*s*s"
aa 002215  700046 542111		sprpbp	sb|38,x1
4a 002216  400030 272120		tsbbp	lp|L287,*		" WriteS
aa 002217  000044 000001		zero	36,1
aa 002220  700036 236111  267		ldq	sb|30,x1		" File
aa 002221  700006 756111		stq	sb|6,x1		" LastFile
			L322:
aa 002222  700035 236111  269		ldq	sb|29,x1		" Line
aa 002223  700046 756111		stq	sb|38,x1
aa 002224  700007 236111		ldq	sb|7,x1		" Number
aa 002225  700047 756111		stq	sb|39,x1
aa 002226  000012 236007		ldq	10,dl		" 10
aa 002227  700050 756111		stq	sb|40,x1
4a 002230  400020 272120		tsbbp	lp|L324,*		" ConvertNtoS
aa 002231  000044 000003		zero	36,3
aa 002232  700007 236111  270		ldq	sb|7,x1		" Number
aa 002233  700046 756111		stq	sb|38,x1
4a 002234  400022 272120		tsbbp	lp|L319,*		" Length
aa 002235  000044 000001		zero	36,1
aa 002236  000002 076007		adq	2,dl		" 2
aa 002237  700037 756111		stq	sb|31,x1
aa 002240  700037 236111		ldq	sb|31,x1
aa 002241  700046 756111		stq	sb|38,x1
aa 002242  000170 236007		ldq	120,dl		" 120
aa 002243  700047 756111		stq	sb|39,x1
aa 002244  000063 272004		tsbbp	L309+2		" Need
aa 002245  000044 000002		zero	36,2
aa 002246  600040 236100  271		ldq	sp|32		" OUTPUT
aa 002247  700046 756111		stq	sb|38,x1
aa 002250  700007 236111		ldq	sb|7,x1		" Number
aa 002251  700047 756111		stq	sb|39,x1
4a 002252  400030 272120		tsbbp	lp|L287,*		" WriteS
aa 002253  000044 000002		zero	36,2
aa 002254  700004 762111  272		lprpbp	sb|4,x1		" Chain
aa 002255  200001 236100		ldq	bp|1
aa 002256  700004 756111		stq	sb|4,x1		" Chain
aa 002257  700004 234111  273		szn	sb|4,x1		" Chain
aa 002260  000010 600004		tze	L325
aa 002261  600040 236100  274		ldq	sp|32		" OUTPUT
aa 002262  700046 756111		stq	sb|38,x1
aa 002263  000035 351404		eapab	L326		" ",*s"
aa 002264  700047 541111		sprpab	sb|39,x1
4a 002265  400030 272120		tsbbp	lp|L287,*		" WriteS
aa 002266  000044 000002		zero	36,2
aa 002267  777665 710004		tra	L321
			L325:
aa 002270  600040 236100  276		ldq	sp|32		" OUTPUT
aa 002271  700046 756111		stq	sb|38,x1
aa 002272  000025 351404		eapab	L327		" "*n*n"
aa 002273  700047 541111		sprpab	sb|39,x1
4a 002274  400030 272120		tsbbp	lp|L287,*		" WriteS
aa 002275  000044 000002		zero	36,2
			L316:
aa 002276  700002 761111  278		lprpab	sb|2,x1		" x
aa 002277  100002 236100		ldq	ab|2
aa 002300  700046 756111		stq	sb|38,x1
aa 002301  777545 272004		tsbbp	L308+2		" Pname
aa 002302  000044 000001		zero	36,1
aa 002303  600226 234100  280		szn	sp|150		" Metering
aa 002304  000007 600004		tze	L328
aa 002305  000030 236007		ldq	24,dl		" PrintXref_Meter
aa 002306  700046 756111		stq	sb|38,x1
aa 002307  700003 236111		ldq	sb|3,x1		" UsageTemp
aa 002310  700047 756111		stq	sb|39,x1
4a 002311  400016 272120		tsbbp	lp|L329,*		" RecordUsage
aa 002312  000044 000002		zero	36,2
			L328:
			L313:
aa 002313  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002314  200000 121100		sblx1	bp|0
aa 002315  700001 764111		lprplp	sb|1,x1
aa 002316  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L327:
aa 002317  000002 012012		zero	2,5130		" "*n*n"
			L326:
aa 002320  000002 054040		zero	2,22560		" ",*s"
			L323:
aa 002321  000003 072040		zero	3,29728		" ":*s*s"
aa 002322  040000 000000		zero	16384
	"	Begin text of Need

aa 002323  000004 116145		zero	4,40037		" Need
aa 002324  145144 000000		zero	51812
			L309:
aa 002325  000000 213000  282		epaq	0		" set lp to linkage section
aa 002326  700026 764161		lprplp	sb|22,*au
aa 002327  200000 021100		adlx1	bp|0		" BCPL save
aa 002330  700000 542111		sprpbp	sb|0,x1
aa 002331  700001 544111		sprplp	sb|1,x1
aa 002332  700423 620111		eax0	sb|275,x1
aa 002333  777760 360003		anx0	-16,du
aa 002334  700025 740100		stx0	sb|21		" end of save sequence

aa 002335  700002 236111  283		ldq	sb|2,x1		" n
aa 002336  600221 056100		asq	sp|145		" Column
aa 002337  600221 236100  284		ldq	sp|145		" Column
aa 002340  700003 116111		cmpq	sb|3,x1		" Max
aa 002341  000012 604404		tmoz	L333
aa 002342  600040 235100  285		lda	sp|32		" OUTPUT
aa 002343  700006 755111		sta	sb|6,x1
aa 002344  000013 353404		eapbb	L334		" "*n*t*t*t"
aa 002345  700007 543111		sprpbb	sb|7,x1
4a 002346  400030 272120		tsbbp	lp|L287,*		" WriteS
aa 002347  000004 000002		zero	4,2
aa 002350  000036 235007  286		lda	30,dl		" 30
aa 002351  700002 075111		ada	sb|2,x1		" n
aa 002352  600221 755100		sta	sp|145		" Column
			L333:
			L332:
aa 002353  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002354  200000 121100		sblx1	bp|0
aa 002355  700001 764111		lprplp	sb|1,x1
aa 002356  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L334:
aa 002357  000004 012011		zero	4,5129		" "*n*t*t*t"
aa 002360  011011 000000		zero	4617
	"	Begin text of EnterIntoCrossreference

aa 002361  000027 105156		zero	23,35438		" EnterIntoCrossreference
aa 002362  164145 162111		zero	59493,58441
aa 002363  156164 157103		zero	56436,56899
aa 002364  162157 163163		zero	58479,58995
aa 002365  162145 146145		zero	58469,52325
aa 002366  162145 156143		zero	58469,56419
aa 002367  145000 000000		zero	51712
			L310:
aa 002370  000000 213000  290		epaq	0		" set lp to linkage section
aa 002371  700026 764161		lprplp	sb|22,*au
aa 002372  200000 021100		adlx1	bp|0		" BCPL save
aa 002373  700000 542111		sprpbp	sb|0,x1
aa 002374  700001 544111		sprplp	sb|1,x1
aa 002375  700424 620111		eax0	sb|276,x1
aa 002376  777760 360003		anx0	-16,du
aa 002377  700025 740100		stx0	sb|21		" end of save sequence

aa 002400  600220 763100  291		lprpbb	sp|144		" DictionaryEntry
aa 002401  300003 234100		szn	bb|3
aa 002402  000044 601004		tnz	L338
aa 002403  600216 371500  292		eaplb	sp|142		" NAMECHAIN
aa 002404  700002 545111		sprplb	sb|2,x1		" Q
			L339:
aa 002405  700002 765111  293		lprplb	sb|2,x1		" Q
aa 002406  500000 235100		lda	lb|0
aa 002407  700003 755111		sta	sb|3,x1		" P
aa 002410  700003 234111  294		szn	sb|3,x1		" P
aa 002411  000025 600004		tze	L340
aa 002412  600220 760100  295		lprpap	sp|144		" DictionaryEntry
aa 002413  000001 235100		lda	ap|1
aa 002414  700014 755111		sta	sb|12,x1
aa 002415  700003 762111		lprpbp	sb|3,x1		" P
aa 002416  200000 762100		lprpbp	bp|0
aa 002417  200001 235100		lda	bp|1
aa 002420  700015 755111		sta	sb|13,x1
4a 002421  400014 272120		tsbbp	lp|L343,*		" CompareStrings
aa 002422  000012 000002		zero	10,2
aa 002423  000000 116007		cmpq	0,dl
aa 002424  000004 605004		tpl	L341
aa 002425  700003 761111		lprpab	sb|3,x1		" P
aa 002426  100001 351500		eapab	ab|1
aa 002427  000003 710004		tra	L342
			L341:
aa 002430  700003 763111		lprpbb	sb|3,x1		" P
aa 002431  300002 351500		eapab	bb|2
			L342:
aa 002432  700006 541111		sprpab	sb|6,x1
aa 002433  700006 236111		ldq	sb|6,x1
aa 002434  700002 756111		stq	sb|2,x1		" Q
aa 002435  777750 710004		tra	L339
			L340:
aa 002436  600220 236100  297		ldq	sp|144		" DictionaryEntry
aa 002437  700014 756111		stq	sb|12,x1
aa 002440  700015 450111		stz	sb|13,x1
aa 002441  700016 450111		stz	sb|14,x1
4a 002442  400012 272120		tsbbp	lp|L344,*		" List3
aa 002443  000012 000003		zero	10,3
aa 002444  700002 761111		lprpab	sb|2,x1		" Q
aa 002445  100000 756100		stq	ab|0		" Q
			L338:
aa 002446  600214 236100  299		ldq	sp|140		" LineCount
aa 002447  000022 736000		qls	18
aa 002450  700014 756111		stq	sb|12,x1
aa 002451  600220 765100		lprplb	sp|144		" DictionaryEntry
aa 002452  500003 236100		ldq	lb|3
aa 002453  700015 756111		stq	sb|13,x1
4a 002454  400010 272120		tsbbp	lp|L345,*		" List2
aa 002455  000012 000002		zero	10,2
aa 002456  600220 760100		lprpap	sp|144		" DictionaryEntry
aa 002457  000003 756100		stq	ap|3
			L337:
aa 002460  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002461  200000 121100		sblx1	bp|0
aa 002462  700001 764111		lprplp	sb|1,x1
aa 002463  200001 710100		tra	bp|1		" end of return sequence
	"	Definition section part one - external entry points

5a 000000  000033 000000		" pointer to first definition
aa 000001  000000 600000		" flags: new format, ignore header
aa 000002  000000 000000		" list terminator

aa 000003  012142 143160		" "bcpl_plist"
aa 000004  154137 160154
aa 000005  151163 164000
aa 000006  027105 156164		" "EnterIntoCrossreference"
aa 000007  145162 111156
aa 000010  164157 103162
aa 000011  157163 163162
aa 000012  145146 145162
aa 000013  145156 143145
aa 000014  005120 156141		" "Pname"
aa 000015  155145 000000
aa 000016  005120 154151		" "Plist"
aa 000017  163164 000000
aa 000020  015106 151156		" "FindPrintName"
aa 000021  144120 162151
aa 000022  156164 116141
aa 000023  155145 000000
aa 000024  012123 171155		" "SymbolName"
aa 000025  142157 154116
aa 000026  141155 145000
aa 000027  014163 171155		" "symbol_table"
aa 000030  142157 154137
aa 000031  164141 142154
aa 000032  145000 000000

	"	Segname definition for bcpl_plist

55 000033  000036 000002		" forward, backward threads
5a 000034  000002 400003		" value defined, class flags
55 000035  000003 000036		" name pointer, first entry def

	"	Definition for EnterIntoCrossreference

55 000036  000041 000033		" forward, backward threads
0a 000037  002370 500000		" value defined, class flags
55 000040  000006 000033		" name pointer, segname def pointer

	"	Definition for Pname

55 000041  000044 000036		" forward, backward threads
0a 000042  002044 500000		" value defined, class flags
55 000043  000014 000033		" name pointer, segname def pointer

	"	Definition for Plist

55 000044  000047 000041		" forward, backward threads
0a 000045  001376 500000		" value defined, class flags
55 000046  000016 000033		" name pointer, segname def pointer

	"	Definition for FindPrintName

55 000047  000052 000044		" forward, backward threads
0a 000050  001314 500000		" value defined, class flags
55 000051  000020 000033		" name pointer, segname def pointer

	"	Definition for SymbolName

55 000052  000055 000047		" forward, backward threads
0a 000053  000003 500000		" value defined, class flags
55 000054  000024 000033		" name pointer, segname def pointer

	"	Definition for symbol_table

55 000055  000002 000052		" forward, backward threads
6a 000056  000000 400002		" value defined, class flags
55 000057  000027 000033		" name pointer, segname def pointer
	"	Definition section part two - symbolic info for external references

aa 000060  014142 143160		" "bcpl_utility"
aa 000061  154137 165164
aa 000062  151154 151164
aa 000063  171000 000000
aa 000064  005114 151163		" "List2"
aa 000065  164062 000000
5a 000066  000067 000000
aa 000067  000004 000000
55 000070  000060 000064
aa 000071  005114 151163		" "List3"
aa 000072  164063 000000
5a 000073  000074 000000
aa 000074  000004 000000
55 000075  000060 000071
aa 000076  015142 143160		" "bcpl_strings_"
aa 000077  154137 163164
aa 000100  162151 156147
aa 000101  163137 000000
aa 000102  016103 157155		" "CompareStrings"
aa 000103  160141 162145
aa 000104  123164 162151
aa 000105  156147 163000
5a 000106  000107 000000
aa 000107  000004 000000
55 000110  000076 000102
aa 000111  013122 145143		" "RecordUsage"
aa 000112  157162 144125
aa 000113  163141 147145
5a 000114  000115 000000
aa 000115  000004 000000
55 000116  000060 000111
aa 000117  021142 143160		" "bcpl_conversions_"
aa 000120  154137 143157
aa 000121  156166 145162
aa 000122  163151 157156
aa 000123  163137 000000
aa 000124  013103 157156		" "ConvertNtoS"
aa 000125  166145 162164
aa 000126  116164 157123
5a 000127  000130 000000
aa 000130  000004 000000
55 000131  000117 000124
aa 000132  006114 145156		" "Length"
aa 000133  147164 150000
5a 000134  000135 000000
aa 000135  000004 000000
55 000136  000076 000132
aa 000137  014123 141166		" "SaveOldUsage"
aa 000140  145117 154144
aa 000141  125163 141147
aa 000142  145000 000000
5a 000143  000144 000000
aa 000144  000004 000000
55 000145  000060 000137
aa 000146  017142 143160		" "bcpl_stream_io_"
aa 000147  154137 163164
aa 000150  162145 141155
aa 000151  137151 157137
aa 000152  006106 157162		" "Format"
aa 000153  155141 164000
5a 000154  000155 000000
aa 000155  000004 000000
55 000156  000146 000152
aa 000157  006127 162151		" "WriteS"
aa 000160  164145 123000
5a 000161  000162 000000
aa 000162  000004 000000
55 000163  000146 000157
aa 000164  022142 143160		" "bcpl_machine_code_"
aa 000165  154137 155141
aa 000166  143150 151156
aa 000167  145137 143157
aa 000170  144145 137000
aa 000171  007127 162151		" "Writech"
aa 000172  164145 143150
5a 000173  000174 000000
aa 000174  000004 000000
55 000175  000164 000171
aa 000176  013142 143160		" "bcpl_report"
aa 000177  154137 162145
aa 000200  160157 162164
aa 000201  010103 107162		" "CGreport"
aa 000202  145160 157162
aa 000203  164000 000000
5a 000204  000205 000000
aa 000205  000004 000000
55 000206  000176 000201
aa 000207  000000 000000		" padding
	"	Linkage section - static variables and external links

aa 000000  000000 000000		" linkage header
0a 000001  002464 000000		" address of defs
aa 000002  000000 000000
aa 000003  000000 000000
aa 000004  000000 000000
aa 000005  000000 000000
2a 000006  000010 000036		" offset to links, total length
aa 000007  000000 000036		" obsolete length

	"	External link pairs

			L345:
3a 000010  777770 000046		" "bcpl_utility$List2"
5a 000011  000066 000000
			L344:
3a 000012  777766 000046		" "bcpl_utility$List3"
5a 000013  000073 000000
			L343:
3a 000014  777764 000046		" "bcpl_strings_$CompareStrings"
5a 000015  000106 000000
			L329:
3a 000016  777762 000046		" "bcpl_utility$RecordUsage"
5a 000017  000114 000000
			L324:
3a 000020  777760 000046		" "bcpl_conversions_$ConvertNtoS"
5a 000021  000127 000000
			L319:
3a 000022  777756 000046		" "bcpl_strings_$Length"
5a 000023  000134 000000
			L315:
3a 000024  777754 000046		" "bcpl_utility$SaveOldUsage"
5a 000025  000143 000000
			L299:
3a 000026  777752 000046		" "bcpl_stream_io_$Format"
5a 000027  000154 000000
			L287:
3a 000030  777750 000046		" "bcpl_stream_io_$WriteS"
5a 000031  000161 000000
			L284:
3a 000032  777746 000046		" "bcpl_machine_code_$Writech"
5a 000033  000173 000000
			L10:
3a 000034  777744 000046		" "bcpl_report$CGreport"
5a 000035  000204 000000
	"	Symbol section header

aa 000000  000000 000001		" version number of header structure
aa 000001  163171 155142		" "symbtree"
aa 000002  164162 145145
aa 000003  000000 000003		" compiler version number
aa 000004  000000 101170		" date/time compiler modified
aa 000005  533311 032072		" 09/25/73  0959.1 mst Tue
aa 000006  000000 102333		" time of this compilation
aa 000007  440102 241712		" 01/24/75  0659.9 mst Fri
aa 000010  142143 160154		" "bcpl    "
aa 000011  040040 040040
aa 000012  000046 000035		" compiler version name - pointer, length
aa 000013  000056 000024		" user id - pointer, length
aa 000014  000063 000043		" comment string - pointer, length
aa 000015  000002 000002		" text and linkage boundaries
aa 000016  000024 000000		" source map, symbol tree root
7a 000017  000000 000146		" section header pointer, block size
aa 000020  000000 000146		" next block pointer, rel_text
aa 000021  000000 000170		" rel_def, rel_link
aa 000022  000177 000146		" rel_symbol, default truncate
aa 000023  000024 000000		" optional truncate, unused
aa 000024  000000 000001		" source files map: version number
aa 000025  000000 000004		"                   number of files
aa 000026  000074 000051		" bcpl_plist
aa 000027  023333 611426		" last modified on
aa 000030  000000 102333		" 01/24/75  0647.2 mst Fri
aa 000031  432366 600000
aa 000032  000107 000051		" bcpl_compiler_head
aa 000033  021607 540214		" last modified on
aa 000034  000000 101621		" 05/06/74  1740.6 mst Mon
aa 000035  351403 200000
aa 000036  000122 000043		" bcpl_symbols
aa 000037  021607 540223		" last modified on
aa 000040  000000 101621		" 05/06/74  1740.8 mst Mon
aa 000041  351474 000000
aa 000042  000133 000051		" bcpl_metering_head
aa 000043  021607 540220		" last modified on
aa 000044  000000 101621		" 05/06/74  1740.8 mst Mon
aa 000045  351474 000000
aa 000046  102103 120114		" "BCPL version 3.4, August 1973"
aa 000047  040166 145162
aa 000050  163151 157156
aa 000051  040063 056064
aa 000052  054040 101165
aa 000053  147165 163164
aa 000054  040061 071067
aa 000055  063040 040040
aa 000056  115141 162164		" "Martinson.SysMaint.a"
aa 000057  151156 163157
aa 000060  156056 123171
aa 000061  163115 141151
aa 000062  156164 056141
aa 000063  163157 165162		" "source  xref  alist  optimize  6180"
aa 000064  143145 040040
aa 000065  170162 145146
aa 000066  040040 141154
aa 000067  151163 164040
aa 000070  040157 160164
aa 000071  151155 151172
aa 000072  145040 040066
aa 000073  061070 060040
aa 000074  076062 056061		" ">2.1spec>online>mib083074>bcpl_plist.bcpl"
aa 000075  163160 145143
aa 000076  076157 156154
aa 000077  151156 145076
aa 000100  155151 142060
aa 000101  070063 060067
aa 000102  064076 142143
aa 000103  160154 137160
aa 000104  154151 163164
aa 000105  056142 143160
aa 000106  154040 040040
aa 000107  076154 144144		" ">ldd>include>bcpl_compiler_head.incl.bcpl"
aa 000110  076151 156143
aa 000111  154165 144145
aa 000112  076142 143160
aa 000113  154137 143157
aa 000114  155160 151154
aa 000115  145162 137150
aa 000116  145141 144056
aa 000117  151156 143154
aa 000120  056142 143160
aa 000121  154040 040040
aa 000122  076154 144144		" ">ldd>include>bcpl_symbols.incl.bcpl"
aa 000123  076151 156143
aa 000124  154165 144145
aa 000125  076142 143160
aa 000126  154137 163171
aa 000127  155142 157154
aa 000130  163056 151156
aa 000131  143154 056142
aa 000132  143160 154040
aa 000133  076154 144144		" ">ldd>include>bcpl_metering_head.incl.bcpl"
aa 000134  076151 156143
aa 000135  154165 144145
aa 000136  076142 143160
aa 000137  154137 155145
aa 000140  164145 162151
aa 000141  156147 137150
aa 000142  145141 144056
aa 000143  151156 143154
aa 000144  056142 143160
aa 000145  154040 040040
	"	Relocation information


	"	text section relocation bits

aa 000146  000000 000002		" version number of rel-bits structure
aa 000147  000000 001053		" length in bits
aa 000150  740445 172033
aa 000151  036713 600417
aa 000152  023323 601164
aa 000153  000123 604264
aa 000154  740415 170043
aa 000155  200001 036236
aa 000156  647413 551701
aa 000157  772000 051700
aa 000160  532360 346474
aa 000161  027500 051700
aa 000162  472001 236015
aa 000163  647402 550000
aa 000164  051700 632360
aa 000165  346474 125517
aa 000166  010323 601164
aa 000167  000000 000000
l	"	inkage relocation bits

aa 000170  000000 000002		" version number of rel-bits structure
aa 000171  000000 000234		" length in bits
aa 000172  100002 204652
aa 000173  465246 524652
aa 000174  465246 524652
aa 000175  465246 524652
aa 000176  465200 000000
s	"	ymbol relocation bits

aa 000177  000000 000002		" version number of rel-bits structure
aa 000200  000000 000043		" length in bits
aa 000201  740365 770532
	"	Object map

aa 003134  000000 000001		" version number of object_map structure
aa 003135  157142 152137		" "obj_map "
aa 003136  155141 160040
aa 003137  000000 002464		" text offset, length
aa 003140  002464 000207		" def offset, length
aa 003141  002674 000036		" link offset, length
aa 003142  002732 000202		" symbol offset, length
aa 003143  000000 000000		" break map offset, length
aa 003144  340000 000000		" flags: ^bound, relocatable, procedure, standard
aa 003145  003134 000000		" object map pointer, unused


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
